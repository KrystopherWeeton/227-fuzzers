; ModuleID = '../../gpu/command_buffer/service/shared_image_backing.cc'
source_filename = "../../gpu/command_buffer/service/shared_image_backing.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"struct.std::__1::atomic.273" = type { %"struct.std::__1::__atomic_base.274" }
%"struct.std::__1::__atomic_base.274" = type { %"struct.std::__1::__atomic_base.275" }
%"struct.std::__1::__atomic_base.275" = type { %"struct.std::__1::__cxx_atomic_impl.276" }
%"struct.std::__1::__cxx_atomic_impl.276" = type { %"struct.std::__1::__cxx_atomic_base_impl.277" }
%"struct.std::__1::__cxx_atomic_base_impl.277" = type { i64 }
%"class.gpu::SharedImageBacking" = type { i32 (...)**, %"class.absl::optional", %"struct.gpu::Mailbox", i32, %"class.gfx::Size", %"class.gfx::ColorSpace", i32, i32, i32, i64, %"class.gpu::SharedImageFactory"*, i8, %"class.absl::optional.197", %"class.std::__1::vector.202" }
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon }
%union.anon = type { %"class.base::Lock" }
%"class.base::Lock" = type { %"class.base::internal::LockImpl" }
%"class.base::internal::LockImpl" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"struct.gpu::Mailbox" = type { [16 x i8] }
%"class.gfx::Size" = type { i32, i32 }
%"class.gfx::ColorSpace" = type { i8, i8, i8, i8, [9 x float], [7 x float] }
%"class.gpu::SharedImageFactory" = type { %"class.gpu::MailboxManager"*, %"class.gpu::SharedImageManager"*, %"class.gpu::SharedContextState"*, %"class.std::__1::unique_ptr.164", i32, %"class.base::internal::flat_tree.170", %"class.std::__1::unique_ptr.179", %"class.std::__1::unique_ptr.185", %"class.std::__1::unique_ptr.191", %"class.gpu::SharedImageBackingFactory"* }
%"class.gpu::MailboxManager" = type opaque
%"class.gpu::SharedImageManager" = type <{ %"class.absl::optional", %"class.base::internal::flat_tree", i8, [7 x i8] }>
%"class.base::internal::flat_tree" = type { %"class.std::__1::vector" }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"*, %"class.std::__1::__compressed_pair" }
%"class.std::__1::unique_ptr" = type opaque
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.std::__1::unique_ptr"* }
%"class.gpu::SharedContextState" = type { %"class.base::trace_event::MemoryDumpProvider", %"class.gpu::GLContextVirtualDelegate", %"class.base::RefCounted", %"class.GrContextOptions::ShaderErrorHandler", i8, i8, i8, %"class.base::OnceCallback", i32, %"class.gpu::SharedContextState::MemoryTrackerObserver", %"class.gpu::SharedContextState::MemoryTracker", %"class.gpu::MemoryTypeTracker", %"class.viz::VulkanContextProvider"*, %"class.viz::MetalContextProvider"*, %"class.viz::DawnContextProvider"*, %class.GrDirectContext*, %class.scoped_refptr.83, %class.scoped_refptr.84, %class.scoped_refptr.84, %class.scoped_refptr.85, %"class.gl::GLSurface"*, %class.scoped_refptr.86, %"class.std::__1::unique_ptr.109", %"class.gl::ProgressReporter"*, %class.sk_sp.115, %"class.std::__1::unique_ptr.116", i64, %"class.std::__1::vector.122", %"class.gpu::raster::GrShaderCache"*, i8, %"class.absl::optional.129", [4 x i8], %"class.base::ObserverList", %"class.base::MRUCache", i8, %"class.base::Time", i8, %"class.std::__1::unique_ptr.157", %"class.base::WeakPtrFactory.163" }
%"class.base::trace_event::MemoryDumpProvider" = type { i32 (...)** }
%"class.gpu::GLContextVirtualDelegate" = type { i32 (...)** }
%"class.base::RefCounted" = type { %"class.base::subtle::RefCountedBase" }
%"class.base::subtle::RefCountedBase" = type { i32 }
%"class.GrContextOptions::ShaderErrorHandler" = type { i32 (...)** }
%"class.base::OnceCallback" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr }
%class.scoped_refptr = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.1" }
%"struct.std::__1::__atomic_base.1" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.gpu::SharedContextState::MemoryTrackerObserver" = type { %"class.gpu::MemoryTracker::Observer", i64, %"class.base::WeakPtr" }
%"class.gpu::MemoryTracker::Observer" = type { i32 (...)** }
%"class.base::WeakPtr" = type { %"class.base::internal::WeakPtrBase" }
%"class.base::internal::WeakPtrBase" = type { %"class.base::internal::WeakReference", i64 }
%"class.base::internal::WeakReference" = type { %class.scoped_refptr.2 }
%class.scoped_refptr.2 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.base::internal::WeakReference::Flag" = type <{ %"class.base::RefCountedThreadSafe.3", %"class.base::AtomicFlag", [3 x i8] }>
%"class.base::RefCountedThreadSafe.3" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::AtomicFlag" = type { %"struct.std::__1::atomic.4" }
%"struct.std::__1::atomic.4" = type { %"struct.std::__1::__atomic_base.5" }
%"struct.std::__1::__atomic_base.5" = type { %"struct.std::__1::__atomic_base.6" }
%"struct.std::__1::__atomic_base.6" = type { %"struct.std::__1::__cxx_atomic_impl.7" }
%"struct.std::__1::__cxx_atomic_impl.7" = type { %"struct.std::__1::__cxx_atomic_base_impl.8" }
%"struct.std::__1::__cxx_atomic_base_impl.8" = type { i8 }
%"class.gpu::SharedContextState::MemoryTracker" = type { %"class.gpu::MemoryTracker", %"class.util::IdType", i64, %"class.gpu::MemoryTracker::Observer"*, i64 }
%"class.gpu::MemoryTracker" = type { i32 (...)** }
%"class.util::IdType" = type { %"class.base::StrongAlias" }
%"class.base::StrongAlias" = type { i64 }
%"class.gpu::MemoryTypeTracker" = type { %"class.gpu::MemoryTracker"*, i64, %"class.base::Lock", %class.scoped_refptr.9, %"class.base::WeakPtrFactory" }
%class.scoped_refptr.9 = type { %"class.base::SequencedTaskRunner"* }
%"class.base::SequencedTaskRunner" = type { %"class.base::TaskRunner.base", [4 x i8] }
%"class.base::TaskRunner.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.10" }>
%"class.base::RefCountedThreadSafe.10" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::WeakPtrFactory" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.base::internal::WeakPtrFactoryBase" = type { %"class.base::internal::WeakReferenceOwner", i64 }
%"class.base::internal::WeakReferenceOwner" = type { %class.scoped_refptr.11 }
%class.scoped_refptr.11 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.viz::VulkanContextProvider" = type opaque
%"class.viz::MetalContextProvider" = type opaque
%"class.viz::DawnContextProvider" = type opaque
%class.GrDirectContext = type { %class.GrRecordingContext, %"class.GrDirectContext::DirectContextID", %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.46", %class.sk_sp.52, %"class.std::__1::unique_ptr.53", %"class.std::__1::unique_ptr.59", i8, i8, %"class.GrContextOptions::PersistentCache"*, %"class.GrContextOptions::ShaderErrorHandler"*, %"class.std::__1::unique_ptr.65", %"class.std::__1::unique_ptr.71", %"class.std::__1::unique_ptr.77" }
%class.GrRecordingContext = type { %class.GrImageContext.base, %"class.GrRecordingContext::Stats", %"class.std::__1::unique_ptr.12", %"class.GrRecordingContext::OwnedArenas", %"class.std::__1::unique_ptr.28", %"class.std::__1::unique_ptr.34" }
%class.GrImageContext.base = type <{ %class.GrContext_Base, %class.GrSingleOwner }>
%class.GrContext_Base = type { %class.SkRefCnt.base, %class.sk_sp }
%class.SkRefCnt.base = type { %class.SkRefCntBase.base }
%class.SkRefCntBase.base = type <{ i32 (...)**, %"struct.std::__1::atomic" }>
%class.sk_sp = type { %class.GrContextThreadSafeProxy* }
%class.GrContextThreadSafeProxy = type opaque
%class.GrSingleOwner = type { i8 }
%"class.GrRecordingContext::Stats" = type { i8 }
%"class.std::__1::unique_ptr.12" = type { %"class.std::__1::__compressed_pair.13" }
%"class.std::__1::__compressed_pair.13" = type { %"struct.std::__1::__compressed_pair_elem.14" }
%"struct.std::__1::__compressed_pair_elem.14" = type { %class.GrAuditTrail* }
%class.GrAuditTrail = type opaque
%"class.GrRecordingContext::OwnedArenas" = type { i8, %"class.std::__1::unique_ptr.16", %"class.std::__1::unique_ptr.22" }
%"class.std::__1::unique_ptr.16" = type { %"class.std::__1::__compressed_pair.17" }
%"class.std::__1::__compressed_pair.17" = type { %"struct.std::__1::__compressed_pair_elem.18" }
%"struct.std::__1::__compressed_pair_elem.18" = type { %class.SkArenaAlloc* }
%class.SkArenaAlloc = type opaque
%"class.std::__1::unique_ptr.22" = type { %"class.std::__1::__compressed_pair.23" }
%"class.std::__1::__compressed_pair.23" = type { %"struct.std::__1::__compressed_pair_elem.24" }
%"struct.std::__1::__compressed_pair_elem.24" = type { %class.GrSubRunAllocator* }
%class.GrSubRunAllocator = type opaque
%"class.std::__1::unique_ptr.28" = type { %"class.std::__1::__compressed_pair.29" }
%"class.std::__1::__compressed_pair.29" = type { %"struct.std::__1::__compressed_pair_elem.30" }
%"struct.std::__1::__compressed_pair_elem.30" = type { %class.GrDrawingManager* }
%class.GrDrawingManager = type opaque
%"class.std::__1::unique_ptr.34" = type { %"class.std::__1::__compressed_pair.35" }
%"class.std::__1::__compressed_pair.35" = type { %"struct.std::__1::__compressed_pair_elem.36" }
%"struct.std::__1::__compressed_pair_elem.36" = type { %class.GrProxyProvider* }
%class.GrProxyProvider = type opaque
%"class.GrDirectContext::DirectContextID" = type { i32 }
%"class.std::__1::unique_ptr.40" = type { %"class.std::__1::__compressed_pair.41" }
%"class.std::__1::__compressed_pair.41" = type { %"struct.std::__1::__compressed_pair_elem.42" }
%"struct.std::__1::__compressed_pair_elem.42" = type { %class.SkTaskGroup* }
%class.SkTaskGroup = type opaque
%"class.std::__1::unique_ptr.46" = type { %"class.std::__1::__compressed_pair.47" }
%"class.std::__1::__compressed_pair.47" = type { %"struct.std::__1::__compressed_pair_elem.48" }
%"struct.std::__1::__compressed_pair_elem.48" = type { %class.GrStrikeCache* }
%class.GrStrikeCache = type opaque
%class.sk_sp.52 = type { %class.GrGpu* }
%class.GrGpu = type opaque
%"class.std::__1::unique_ptr.53" = type { %"class.std::__1::__compressed_pair.54" }
%"class.std::__1::__compressed_pair.54" = type { %"struct.std::__1::__compressed_pair_elem.55" }
%"struct.std::__1::__compressed_pair_elem.55" = type { %class.GrResourceCache* }
%class.GrResourceCache = type opaque
%"class.std::__1::unique_ptr.59" = type { %"class.std::__1::__compressed_pair.60" }
%"class.std::__1::__compressed_pair.60" = type { %"struct.std::__1::__compressed_pair_elem.61" }
%"struct.std::__1::__compressed_pair_elem.61" = type { %class.GrResourceProvider* }
%class.GrResourceProvider = type opaque
%"class.GrContextOptions::PersistentCache" = type { i32 (...)** }
%"class.std::__1::unique_ptr.65" = type { %"class.std::__1::__compressed_pair.66" }
%"class.std::__1::__compressed_pair.66" = type { %"struct.std::__1::__compressed_pair_elem.67" }
%"struct.std::__1::__compressed_pair_elem.67" = type { %class.GrClientMappedBufferManager* }
%class.GrClientMappedBufferManager = type opaque
%"class.std::__1::unique_ptr.71" = type { %"class.std::__1::__compressed_pair.72" }
%"class.std::__1::__compressed_pair.72" = type { %"struct.std::__1::__compressed_pair_elem.73" }
%"struct.std::__1::__compressed_pair_elem.73" = type { %class.GrAtlasManager* }
%class.GrAtlasManager = type opaque
%"class.std::__1::unique_ptr.77" = type { %"class.std::__1::__compressed_pair.78" }
%"class.std::__1::__compressed_pair.78" = type { %"struct.std::__1::__compressed_pair_elem.79" }
%"struct.std::__1::__compressed_pair_elem.79" = type { %class.GrSmallPathAtlasMgr* }
%class.GrSmallPathAtlasMgr = type opaque
%class.scoped_refptr.83 = type { %"class.gl::GLShareGroup"* }
%"class.gl::GLShareGroup" = type opaque
%class.scoped_refptr.84 = type { %"class.gl::GLContext"* }
%"class.gl::GLContext" = type opaque
%class.scoped_refptr.85 = type { %"class.gl::GLSurface"* }
%"class.gl::GLSurface" = type opaque
%class.scoped_refptr.86 = type { %"class.gpu::gles2::FeatureInfo"* }
%"class.gpu::gles2::FeatureInfo" = type { %"class.base::RefCounted.87", i8, [3 x i8], %"struct.gpu::gles2::Validators", %"struct.gpu::gles2::DisallowedFeatures", i32, i8, %"class.base::internal::flat_tree.95", %"struct.gpu::gles2::FeatureInfo::FeatureFlags", %"class.gpu::GpuDriverBugWorkarounds", i8, i8, i8, i8, i8, i8, %"class.std::__1::unique_ptr.103" }
%"class.base::RefCounted.87" = type { %"class.base::subtle::RefCountedBase" }
%"struct.gpu::gles2::Validators" = type <{ %"class.gpu::ValueValidator", %"class.gpu::ValueValidator", %"class.gpu::gles2::Validators::BackbufferAttachmentValidator", %"class.gpu::gles2::Validators::BlitFilterValidator", %"class.gpu::gles2::Validators::BufferModeValidator", %"class.gpu::gles2::Validators::BufferParameterValidator", %"class.gpu::gles2::Validators::BufferParameter64Validator", %"class.gpu::gles2::Validators::BufferTargetValidator", %"class.gpu::gles2::Validators::BufferUsageValidator", i8, %"class.gpu::ValueValidator", %"class.gpu::gles2::Validators::BufferfvValidator", %"class.gpu::gles2::Validators::BufferivValidator", [6 x i8], %"class.gpu::ValueValidator", %"class.gpu::ValueValidator", %"class.gpu::gles2::Validators::CmpFunctionValidator", [7 x i8], %"class.gpu::ValueValidator", %"class.gpu::ValueValidator", %"class.gpu::gles2::Validators::DrawModeValidator", [7 x i8], %"class.gpu::ValueValidator", %"class.gpu::ValueValidator", %"class.gpu::gles2::Validators::FaceModeValidator", %"class.gpu::gles2::Validators::FaceTypeValidator", [6 x i8], %"class.gpu::ValueValidator", %"class.gpu::ValueValidator", %"class.gpu::ValueValidator", %"class.gpu::ValueValidator", %"class.gpu::gles2::Validators::GetMaxIndexTypeValidator", [7 x i8], %"class.gpu::ValueValidator", %"class.gpu::gles2::Validators::HintModeValidator", [7 x i8], %"class.gpu::ValueValidator", %"class.gpu::ValueValidator", %"class.gpu::ValueValidator", %"class.gpu::gles2::Validators::IndexedBufferTargetValidator", [7 x i8], %"class.gpu::ValueValidator", %"class.gpu::gles2::Validators::InternalFormatParameterValidator", %"class.gpu::gles2::Validators::MapBufferAccessValidator", [6 x i8], %"class.gpu::ValueValidator", %"class.gpu::gles2::Validators::PixelStoreAlignmentValidator", [7 x i8], %"class.gpu::ValueValidator", %"class.gpu::ValueValidator", %"class.gpu::gles2::Validators::QueryObjectParameterValidator", %"class.gpu::gles2::Validators::QueryTargetValidator", [6 x i8], %"class.gpu::ValueValidator", %"class.gpu::ValueValidator", %"class.gpu::ValueValidator", %"class.gpu::ValueValidator", %"class.gpu::ValueValidator", %"class.gpu::ValueValidator", %"class.gpu::gles2::Validators::ResetStatusValidator", [7 x i8], %"class.gpu::ValueValidator", %"class.gpu::ValueValidator", %"class.gpu::ValueValidator", %"class.gpu::gles2::Validators::ShaderPrecisionValidator", %"class.gpu::gles2::Validators::ShaderTypeValidator", %"class.gpu::gles2::Validators::SharedImageAccessModeValidator", [5 x i8], %"class.gpu::ValueValidator", %"class.gpu::gles2::Validators::StencilOpValidator", %"class.gpu::gles2::Validators::StringTypeValidator", %"class.gpu::gles2::Validators::SwapBuffersFlagsValidator", [5 x i8], %"class.gpu::ValueValidator", %"class.gpu::gles2::Validators::SyncParameterValidator", %"class.gpu::gles2::Validators::Texture3DTargetValidator", [6 x i8], %"class.gpu::ValueValidator", %"class.gpu::gles2::Validators::TextureCompareFuncValidator", [7 x i8], %"class.gpu::ValueValidator", %"class.gpu::ValueValidator", %"class.gpu::ValueValidator", %"class.gpu::ValueValidator", %"class.gpu::ValueValidator", %"class.gpu::ValueValidator", %"class.gpu::gles2::Validators::TextureMagFilterModeValidator", %"class.gpu::gles2::Validators::TextureMinFilterModeValidator", [6 x i8], %"class.gpu::ValueValidator", %"class.gpu::ValueValidator", %"class.gpu::ValueValidator", %"class.gpu::gles2::Validators::TextureSrgbDecodeExtValidator", [7 x i8], %"class.gpu::ValueValidator", %"class.gpu::gles2::Validators::TextureSwizzleValidator", [7 x i8], %"class.gpu::ValueValidator", %"class.gpu::ValueValidator", %"class.gpu::gles2::Validators::TextureUsageValidator", %"class.gpu::gles2::Validators::TextureWrapModeValidator", [6 x i8], %"class.gpu::ValueValidator", %"class.gpu::gles2::Validators::TransformFeedbackPrimitiveModeValidator", %"class.gpu::gles2::Validators::UniformBlockParameterValidator", %"class.gpu::gles2::Validators::UniformParameterValidator", %"class.gpu::gles2::Validators::VertexAttribITypeValidator", [4 x i8], %"class.gpu::ValueValidator", %"class.gpu::ValueValidator", %"class.gpu::ValueValidator", %"class.gpu::gles2::Validators::WindowRectanglesModeValidator", [7 x i8] }>
%"class.gpu::gles2::Validators::BackbufferAttachmentValidator" = type { i8 }
%"class.gpu::gles2::Validators::BlitFilterValidator" = type { i8 }
%"class.gpu::gles2::Validators::BufferModeValidator" = type { i8 }
%"class.gpu::gles2::Validators::BufferParameterValidator" = type { i8 }
%"class.gpu::gles2::Validators::BufferParameter64Validator" = type { i8 }
%"class.gpu::gles2::Validators::BufferTargetValidator" = type { i8 }
%"class.gpu::gles2::Validators::BufferUsageValidator" = type { i8 }
%"class.gpu::gles2::Validators::BufferfvValidator" = type { i8 }
%"class.gpu::gles2::Validators::BufferivValidator" = type { i8 }
%"class.gpu::gles2::Validators::CmpFunctionValidator" = type { i8 }
%"class.gpu::gles2::Validators::DrawModeValidator" = type { i8 }
%"class.gpu::gles2::Validators::FaceModeValidator" = type { i8 }
%"class.gpu::gles2::Validators::FaceTypeValidator" = type { i8 }
%"class.gpu::gles2::Validators::GetMaxIndexTypeValidator" = type { i8 }
%"class.gpu::gles2::Validators::HintModeValidator" = type { i8 }
%"class.gpu::gles2::Validators::IndexedBufferTargetValidator" = type { i8 }
%"class.gpu::gles2::Validators::InternalFormatParameterValidator" = type { i8 }
%"class.gpu::gles2::Validators::MapBufferAccessValidator" = type { i8 }
%"class.gpu::gles2::Validators::PixelStoreAlignmentValidator" = type { i8 }
%"class.gpu::gles2::Validators::QueryObjectParameterValidator" = type { i8 }
%"class.gpu::gles2::Validators::QueryTargetValidator" = type { i8 }
%"class.gpu::gles2::Validators::ResetStatusValidator" = type { i8 }
%"class.gpu::gles2::Validators::ShaderPrecisionValidator" = type { i8 }
%"class.gpu::gles2::Validators::ShaderTypeValidator" = type { i8 }
%"class.gpu::gles2::Validators::SharedImageAccessModeValidator" = type { i8 }
%"class.gpu::gles2::Validators::StencilOpValidator" = type { i8 }
%"class.gpu::gles2::Validators::StringTypeValidator" = type { i8 }
%"class.gpu::gles2::Validators::SwapBuffersFlagsValidator" = type { i8 }
%"class.gpu::gles2::Validators::SyncParameterValidator" = type { i8 }
%"class.gpu::gles2::Validators::Texture3DTargetValidator" = type { i8 }
%"class.gpu::gles2::Validators::TextureCompareFuncValidator" = type { i8 }
%"class.gpu::gles2::Validators::TextureMagFilterModeValidator" = type { i8 }
%"class.gpu::gles2::Validators::TextureMinFilterModeValidator" = type { i8 }
%"class.gpu::gles2::Validators::TextureSrgbDecodeExtValidator" = type { i8 }
%"class.gpu::gles2::Validators::TextureSwizzleValidator" = type { i8 }
%"class.gpu::gles2::Validators::TextureUsageValidator" = type { i8 }
%"class.gpu::gles2::Validators::TextureWrapModeValidator" = type { i8 }
%"class.gpu::gles2::Validators::TransformFeedbackPrimitiveModeValidator" = type { i8 }
%"class.gpu::gles2::Validators::UniformBlockParameterValidator" = type { i8 }
%"class.gpu::gles2::Validators::UniformParameterValidator" = type { i8 }
%"class.gpu::gles2::Validators::VertexAttribITypeValidator" = type { i8 }
%"class.gpu::ValueValidator" = type { %"class.std::__1::vector.88" }
%"class.std::__1::vector.88" = type { %"class.std::__1::__vector_base.89" }
%"class.std::__1::__vector_base.89" = type { i32*, i32*, %"class.std::__1::__compressed_pair.90" }
%"class.std::__1::__compressed_pair.90" = type { %"struct.std::__1::__compressed_pair_elem.91" }
%"struct.std::__1::__compressed_pair_elem.91" = type { i32* }
%"class.gpu::gles2::Validators::WindowRectanglesModeValidator" = type { i8 }
%"struct.gpu::gles2::DisallowedFeatures" = type { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 }
%"class.base::internal::flat_tree.95" = type { %"class.std::__1::vector.96" }
%"class.std::__1::vector.96" = type { %"class.std::__1::__vector_base.97" }
%"class.std::__1::__vector_base.97" = type { %"class.base::BasicStringPiece"*, %"class.base::BasicStringPiece"*, %"class.std::__1::__compressed_pair.98" }
%"class.base::BasicStringPiece" = type { i8*, i64 }
%"class.std::__1::__compressed_pair.98" = type { %"struct.std::__1::__compressed_pair_elem.99" }
%"struct.std::__1::__compressed_pair_elem.99" = type { %"class.base::BasicStringPiece"* }
%"struct.gpu::gles2::FeatureInfo::FeatureFlags" = type <{ %"struct.gpu::GpuMemoryBufferFormatSet", i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 }>
%"struct.gpu::GpuMemoryBufferFormatSet" = type { i32 }
%"class.gpu::GpuDriverBugWorkarounds" = type { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i32, i32, i32 }
%"class.std::__1::unique_ptr.103" = type { %"class.std::__1::__compressed_pair.104" }
%"class.std::__1::__compressed_pair.104" = type { %"struct.std::__1::__compressed_pair_elem.105" }
%"struct.std::__1::__compressed_pair_elem.105" = type { %"struct.gl::GLVersionInfo"* }
%"struct.gl::GLVersionInfo" = type opaque
%"class.std::__1::unique_ptr.109" = type { %"class.std::__1::__compressed_pair.110" }
%"class.std::__1::__compressed_pair.110" = type { %"struct.std::__1::__compressed_pair_elem.111" }
%"struct.std::__1::__compressed_pair_elem.111" = type { %"struct.gpu::gles2::ContextState"* }
%"struct.gpu::gles2::ContextState" = type opaque
%"class.gl::ProgressReporter" = type { i32 (...)** }
%class.sk_sp.115 = type { %class.GrDirectContext* }
%"class.std::__1::unique_ptr.116" = type { %"class.std::__1::__compressed_pair.117" }
%"class.std::__1::__compressed_pair.117" = type { %"struct.std::__1::__compressed_pair_elem.118" }
%"struct.std::__1::__compressed_pair_elem.118" = type { %"class.gpu::ServiceTransferCache"* }
%"class.gpu::ServiceTransferCache" = type opaque
%"class.std::__1::vector.122" = type { %"class.std::__1::__vector_base.123" }
%"class.std::__1::__vector_base.123" = type { i8*, i8*, %"class.std::__1::__compressed_pair.124" }
%"class.std::__1::__compressed_pair.124" = type { %"struct.std::__1::__compressed_pair_elem.125" }
%"struct.std::__1::__compressed_pair_elem.125" = type { i8* }
%"class.gpu::raster::GrShaderCache" = type opaque
%"class.absl::optional.129" = type { %"class.absl::optional_internal::optional_data.130" }
%"class.absl::optional_internal::optional_data.130" = type { %"class.absl::optional_internal::optional_data_base.131" }
%"class.absl::optional_internal::optional_data_base.131" = type { %"class.absl::optional_internal::optional_data_dtor_base.132" }
%"class.absl::optional_internal::optional_data_dtor_base.132" = type { i8, %union.anon.133 }
%union.anon.133 = type { i32 }
%"class.base::ObserverList" = type <{ %"class.std::__1::vector.138", %"class.base::LinkedList", i64, i32, [4 x i8] }>
%"class.std::__1::vector.138" = type { %"class.std::__1::__vector_base.139" }
%"class.std::__1::__vector_base.139" = type { %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"*, %"class.std::__1::__compressed_pair.140" }
%"class.base::internal::UncheckedObserverAdapter" = type { i8* }
%"class.std::__1::__compressed_pair.140" = type { %"struct.std::__1::__compressed_pair_elem.141" }
%"struct.std::__1::__compressed_pair_elem.141" = type { %"class.base::internal::UncheckedObserverAdapter"* }
%"class.base::LinkedList" = type { %"class.base::LinkNode" }
%"class.base::LinkNode" = type { %"class.base::internal::LinkNodeBase" }
%"class.base::internal::LinkNodeBase" = type { %"class.base::internal::LinkNodeBase"*, %"class.base::internal::LinkNodeBase"* }
%"class.base::MRUCache" = type { %"class.base::MRUCacheBase" }
%"class.base::MRUCacheBase" = type { i32 (...)**, %"class.std::__1::list", %"class.std::__1::map", i64 }
%"class.std::__1::list" = type { %"class.std::__1::__list_imp" }
%"class.std::__1::__list_imp" = type { %"struct.std::__1::__list_node_base", %"class.std::__1::__compressed_pair.145" }
%"struct.std::__1::__list_node_base" = type { %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"* }
%"class.std::__1::__compressed_pair.145" = type { %"struct.std::__1::__compressed_pair_elem.146" }
%"struct.std::__1::__compressed_pair_elem.146" = type { i64 }
%"class.std::__1::map" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.150", %"class.std::__1::__compressed_pair.155" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8, [7 x i8] }>
%"class.std::__1::__compressed_pair.150" = type { %"struct.std::__1::__compressed_pair_elem.151" }
%"struct.std::__1::__compressed_pair_elem.151" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.155" = type { %"struct.std::__1::__compressed_pair_elem.146" }
%"class.base::Time" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.std::__1::unique_ptr.157" = type { %"class.std::__1::__compressed_pair.158" }
%"class.std::__1::__compressed_pair.158" = type { %"struct.std::__1::__compressed_pair_elem.159" }
%"struct.std::__1::__compressed_pair_elem.159" = type { %"class.gpu::ExternalSemaphorePool"* }
%"class.gpu::ExternalSemaphorePool" = type opaque
%"class.base::WeakPtrFactory.163" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.std::__1::unique_ptr.164" = type { %"class.std::__1::__compressed_pair.165" }
%"class.std::__1::__compressed_pair.165" = type { %"struct.std::__1::__compressed_pair_elem.166" }
%"struct.std::__1::__compressed_pair_elem.166" = type { %"class.gpu::MemoryTypeTracker"* }
%"class.base::internal::flat_tree.170" = type { %"class.std::__1::vector.171" }
%"class.std::__1::vector.171" = type { %"class.std::__1::__vector_base.172" }
%"class.std::__1::__vector_base.172" = type { %"class.std::__1::unique_ptr.173"*, %"class.std::__1::unique_ptr.173"*, %"class.std::__1::__compressed_pair.174" }
%"class.std::__1::unique_ptr.173" = type opaque
%"class.std::__1::__compressed_pair.174" = type { %"struct.std::__1::__compressed_pair_elem.175" }
%"struct.std::__1::__compressed_pair_elem.175" = type { %"class.std::__1::unique_ptr.173"* }
%"class.std::__1::unique_ptr.179" = type { %"class.std::__1::__compressed_pair.180" }
%"class.std::__1::__compressed_pair.180" = type { %"struct.std::__1::__compressed_pair_elem.181" }
%"struct.std::__1::__compressed_pair_elem.181" = type { %"class.gpu::SharedImageBackingFactoryGLTexture"* }
%"class.gpu::SharedImageBackingFactoryGLTexture" = type opaque
%"class.std::__1::unique_ptr.185" = type { %"class.std::__1::__compressed_pair.186" }
%"class.std::__1::__compressed_pair.186" = type { %"struct.std::__1::__compressed_pair_elem.187" }
%"struct.std::__1::__compressed_pair_elem.187" = type { %"class.gpu::SharedImageBackingFactory"* }
%"class.std::__1::unique_ptr.191" = type { %"class.std::__1::__compressed_pair.192" }
%"class.std::__1::__compressed_pair.192" = type { %"struct.std::__1::__compressed_pair_elem.193" }
%"struct.std::__1::__compressed_pair_elem.193" = type { %"class.gpu::raster::WrappedSkImageFactory"* }
%"class.gpu::raster::WrappedSkImageFactory" = type opaque
%"class.gpu::SharedImageBackingFactory" = type opaque
%"class.absl::optional.197" = type { %"class.absl::optional_internal::optional_data.198" }
%"class.absl::optional_internal::optional_data.198" = type { %"class.absl::optional_internal::optional_data_base.199" }
%"class.absl::optional_internal::optional_data_base.199" = type { %"class.absl::optional_internal::optional_data_dtor_base.200" }
%"class.absl::optional_internal::optional_data_dtor_base.200" = type { i8, %union.anon.201 }
%union.anon.201 = type { %"class.gpu::SharedImageBacking::ScopedWriteUMA" }
%"class.gpu::SharedImageBacking::ScopedWriteUMA" = type { i8 }
%"class.std::__1::vector.202" = type { %"class.std::__1::__vector_base.203" }
%"class.std::__1::__vector_base.203" = type { %"class.gpu::SharedImageRepresentation"**, %"class.gpu::SharedImageRepresentation"**, %"class.std::__1::__compressed_pair.204" }
%"class.gpu::SharedImageRepresentation" = type <{ i32 (...)**, %"class.gpu::SharedImageManager"*, %"class.gpu::SharedImageBacking"*, %"class.gpu::MemoryTypeTracker"*, i8, i8, [6 x i8] }>
%"class.std::__1::__compressed_pair.204" = type { %"struct.std::__1::__compressed_pair_elem.205" }
%"struct.std::__1::__compressed_pair_elem.205" = type { %"class.gpu::SharedImageRepresentation"** }
%"class.gpu::SharedImageBacking::AutoLock" = type { %"class.base::internal::BasicAutoLockMaybe" }
%"class.base::internal::BasicAutoLockMaybe" = type { %"class.base::Lock"* }
%"class.gpu::SharedImageRepresentationGLTexture" = type { %"class.gpu::SharedImageRepresentationGLTextureBase.base", [6 x i8] }
%"class.gpu::SharedImageRepresentationGLTextureBase.base" = type { %"class.gpu::SharedImageRepresentation.base" }
%"class.gpu::SharedImageRepresentation.base" = type <{ i32 (...)**, %"class.gpu::SharedImageManager"*, %"class.gpu::SharedImageBacking"*, %"class.gpu::MemoryTypeTracker"*, i8, i8 }>
%"class.gpu::SharedImageRepresentationGLTexturePassthrough" = type { %"class.gpu::SharedImageRepresentationGLTextureBase.base", [6 x i8] }
%"class.gpu::SharedImageRepresentationSkia" = type { %"class.gpu::SharedImageRepresentation.base", [6 x i8] }
%"class.gpu::SharedImageRepresentationDawn" = type { %"class.gpu::SharedImageRepresentation.base", [6 x i8] }
%struct.WGPUDeviceImpl = type opaque
%"class.gpu::SharedImageRepresentationOverlay" = type { %"class.gpu::SharedImageRepresentation.base", [6 x i8] }
%"class.gpu::SharedImageRepresentationVaapi" = type { %"class.gpu::SharedImageRepresentation.base", %"class.gpu::VaapiDependencies"* }
%"class.gpu::VaapiDependencies" = type { i32 (...)** }
%"class.gpu::VaapiDependenciesFactory" = type { i32 (...)** }
%"class.gpu::SharedImageRepresentationMemory" = type { %"class.gpu::SharedImageRepresentation.base", [6 x i8] }
%"class.std::__1::__vector_base_common" = type { i8 }
%"class.base::HistogramBase" = type <{ i32 (...)**, i8*, %"struct.std::__1::atomic.278", [4 x i8] }>
%"struct.std::__1::atomic.278" = type { %"struct.std::__1::__atomic_base.279" }
%"struct.std::__1::__atomic_base.279" = type { %"struct.std::__1::__atomic_base.280" }
%"struct.std::__1::__atomic_base.280" = type { %"struct.std::__1::__cxx_atomic_impl.281" }
%"struct.std::__1::__cxx_atomic_impl.281" = type { %"struct.std::__1::__cxx_atomic_base_impl.282" }
%"struct.std::__1::__cxx_atomic_base_impl.282" = type { i32 }
%"class.gpu::ClearTrackingSharedImageBacking" = type { %"class.gpu::SharedImageBacking", %"class.gfx::Rect" }
%"class.gfx::Rect" = type { %"class.gfx::Point", %"class.gfx::Size" }
%"class.gfx::Point" = type { i32, i32 }
%"class.gfx::NativePixmap" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.254", [4 x i8] }>
%"class.base::RefCountedThreadSafe.254" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.255" }
%"class.std::__1::__compressed_pair.255" = type { %"struct.std::__1::__compressed_pair_elem.256" }
%"struct.std::__1::__compressed_pair_elem.256" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon.257 }
%union.anon.257 = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.base::trace_event::MemoryAllocatorDump" = type { %"class.std::__1::basic_string", %"class.base::trace_event::MemoryAllocatorDumpGuid", i32, i32, %"class.absl::optional.261", %"class.std::__1::vector.266" }
%"class.base::trace_event::MemoryAllocatorDumpGuid" = type { i64 }
%"class.absl::optional.261" = type { %"class.absl::optional_internal::optional_data.262" }
%"class.absl::optional_internal::optional_data.262" = type { %"class.absl::optional_internal::optional_data_base.263" }
%"class.absl::optional_internal::optional_data_base.263" = type { %"class.absl::optional_internal::optional_data_dtor_base.264" }
%"class.absl::optional_internal::optional_data_dtor_base.264" = type { i8, %union.anon.265 }
%union.anon.265 = type { i64 }
%"class.std::__1::vector.266" = type { %"class.std::__1::__vector_base.267" }
%"class.std::__1::__vector_base.267" = type { %"struct.base::trace_event::MemoryAllocatorDump::Entry"*, %"struct.base::trace_event::MemoryAllocatorDump::Entry"*, %"class.std::__1::__compressed_pair.268" }
%"struct.base::trace_event::MemoryAllocatorDump::Entry" = type { %"class.std::__1::basic_string", %"class.std::__1::basic_string", i32, i64, %"class.std::__1::basic_string" }
%"class.std::__1::__compressed_pair.268" = type { %"struct.std::__1::__compressed_pair_elem.269" }
%"struct.std::__1::__compressed_pair_elem.269" = type { %"struct.base::trace_event::MemoryAllocatorDump::Entry"* }
%"class.base::trace_event::ProcessMemoryDump" = type opaque

$_ZN3gpu18SharedImageBacking18MarkForDestructionEv = comdat any

$_ZN3gpu18SharedImageBacking12OnMemoryDumpERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEPN4base11trace_event19MemoryAllocatorDumpEPNSB_17ProcessMemoryDumpEm = comdat any

$_ZN3gpu31ClearTrackingSharedImageBackingD0Ev = comdat any

$_ZZN3gpu18SharedImageBacking14ScopedWriteUMAD1EvE24atomic_histogram_pointer = comdat any

@_ZTVN3gpu18SharedImageBackingE = hidden unnamed_addr constant { [21 x i8*] } { [21 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.gpu::SharedImageBacking"*)* @_ZN3gpu18SharedImageBackingD2Ev to i8*), i8* bitcast (void (%"class.gpu::SharedImageBacking"*)* @_ZN3gpu18SharedImageBackingD0Ev to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (i1 (%"class.gpu::SharedImageBacking"*)* @_ZN3gpu18SharedImageBacking16PresentSwapChainEv to i8*), i8* bitcast (void (%"class.gpu::SharedImageBacking"*)* @_ZN3gpu18SharedImageBacking18MarkForDestructionEv to i8*), i8* bitcast (void (%"class.gpu::SharedImageBacking"*, %"class.std::__1::basic_string"*, %"class.base::trace_event::MemoryAllocatorDump"*, %"class.base::trace_event::ProcessMemoryDump"*, i64)* @_ZN3gpu18SharedImageBacking12OnMemoryDumpERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEPN4base11trace_event19MemoryAllocatorDumpEPNSB_17ProcessMemoryDumpEm to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (i64 (%"class.gpu::SharedImageBacking"*)* @_ZNK3gpu18SharedImageBacking27EstimatedSizeForMemTrackingEv to i8*), i8* bitcast (%"class.gfx::NativePixmap"* (%"class.gpu::SharedImageBacking"*)* @_ZN3gpu18SharedImageBacking15GetNativePixmapEv to i8*), i8* bitcast (%"class.gpu::SharedImageRepresentationGLTexture"* (%"class.gpu::SharedImageBacking"*, %"class.gpu::SharedImageManager"*, %"class.gpu::MemoryTypeTracker"*)* @_ZN3gpu18SharedImageBacking16ProduceGLTextureEPNS_18SharedImageManagerEPNS_17MemoryTypeTrackerE to i8*), i8* bitcast (%"class.gpu::SharedImageRepresentationGLTexture"* (%"class.gpu::SharedImageBacking"*, %"class.gpu::SharedImageManager"*, %"class.gpu::MemoryTypeTracker"*)* @_ZN3gpu18SharedImageBacking28ProduceRGBEmulationGLTextureEPNS_18SharedImageManagerEPNS_17MemoryTypeTrackerE to i8*), i8* bitcast (%"class.gpu::SharedImageRepresentationGLTexturePassthrough"* (%"class.gpu::SharedImageBacking"*, %"class.gpu::SharedImageManager"*, %"class.gpu::MemoryTypeTracker"*)* @_ZN3gpu18SharedImageBacking27ProduceGLTexturePassthroughEPNS_18SharedImageManagerEPNS_17MemoryTypeTrackerE to i8*), i8* bitcast (%"class.gpu::SharedImageRepresentationSkia"* (%"class.gpu::SharedImageBacking"*, %"class.gpu::SharedImageManager"*, %"class.gpu::MemoryTypeTracker"*, %"class.gpu::SharedContextState"*)* @_ZN3gpu18SharedImageBacking11ProduceSkiaEPNS_18SharedImageManagerEPNS_17MemoryTypeTrackerE13scoped_refptrINS_18SharedContextStateEE to i8*), i8* bitcast (%"class.gpu::SharedImageRepresentationDawn"* (%"class.gpu::SharedImageBacking"*, %"class.gpu::SharedImageManager"*, %"class.gpu::MemoryTypeTracker"*, %struct.WGPUDeviceImpl*)* @_ZN3gpu18SharedImageBacking11ProduceDawnEPNS_18SharedImageManagerEPNS_17MemoryTypeTrackerEP14WGPUDeviceImpl to i8*), i8* bitcast (%"class.gpu::SharedImageRepresentationOverlay"* (%"class.gpu::SharedImageBacking"*, %"class.gpu::SharedImageManager"*, %"class.gpu::MemoryTypeTracker"*)* @_ZN3gpu18SharedImageBacking14ProduceOverlayEPNS_18SharedImageManagerEPNS_17MemoryTypeTrackerE to i8*), i8* bitcast (%"class.gpu::SharedImageRepresentationVaapi"* (%"class.gpu::SharedImageBacking"*, %"class.gpu::SharedImageManager"*, %"class.gpu::MemoryTypeTracker"*, %"class.gpu::VaapiDependenciesFactory"*)* @_ZN3gpu18SharedImageBacking16ProduceVASurfaceEPNS_18SharedImageManagerEPNS_17MemoryTypeTrackerEPNS_24VaapiDependenciesFactoryE to i8*), i8* bitcast (%"class.gpu::SharedImageRepresentationMemory"* (%"class.gpu::SharedImageBacking"*, %"class.gpu::SharedImageManager"*, %"class.gpu::MemoryTypeTracker"*)* @_ZN3gpu18SharedImageBacking13ProduceMemoryEPNS_18SharedImageManagerEPNS_17MemoryTypeTrackerE to i8*)] }, align 8
@_ZTVN3gpu31ClearTrackingSharedImageBackingE = hidden unnamed_addr constant { [21 x i8*] } { [21 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.gpu::SharedImageBacking"*)* @_ZN3gpu18SharedImageBackingD2Ev to i8*), i8* bitcast (void (%"class.gpu::ClearTrackingSharedImageBacking"*)* @_ZN3gpu31ClearTrackingSharedImageBackingD0Ev to i8*), i8* bitcast ({ i64, i64 } (%"class.gpu::ClearTrackingSharedImageBacking"*)* @_ZNK3gpu31ClearTrackingSharedImageBacking11ClearedRectEv to i8*), i8* bitcast (void (%"class.gpu::ClearTrackingSharedImageBacking"*, %"class.gfx::Rect"*)* @_ZN3gpu31ClearTrackingSharedImageBacking14SetClearedRectERKN3gfx4RectE to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (i1 (%"class.gpu::SharedImageBacking"*)* @_ZN3gpu18SharedImageBacking16PresentSwapChainEv to i8*), i8* bitcast (void (%"class.gpu::SharedImageBacking"*)* @_ZN3gpu18SharedImageBacking18MarkForDestructionEv to i8*), i8* bitcast (void (%"class.gpu::SharedImageBacking"*, %"class.std::__1::basic_string"*, %"class.base::trace_event::MemoryAllocatorDump"*, %"class.base::trace_event::ProcessMemoryDump"*, i64)* @_ZN3gpu18SharedImageBacking12OnMemoryDumpERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEPN4base11trace_event19MemoryAllocatorDumpEPNSB_17ProcessMemoryDumpEm to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (i64 (%"class.gpu::SharedImageBacking"*)* @_ZNK3gpu18SharedImageBacking27EstimatedSizeForMemTrackingEv to i8*), i8* bitcast (%"class.gfx::NativePixmap"* (%"class.gpu::SharedImageBacking"*)* @_ZN3gpu18SharedImageBacking15GetNativePixmapEv to i8*), i8* bitcast (%"class.gpu::SharedImageRepresentationGLTexture"* (%"class.gpu::SharedImageBacking"*, %"class.gpu::SharedImageManager"*, %"class.gpu::MemoryTypeTracker"*)* @_ZN3gpu18SharedImageBacking16ProduceGLTextureEPNS_18SharedImageManagerEPNS_17MemoryTypeTrackerE to i8*), i8* bitcast (%"class.gpu::SharedImageRepresentationGLTexture"* (%"class.gpu::SharedImageBacking"*, %"class.gpu::SharedImageManager"*, %"class.gpu::MemoryTypeTracker"*)* @_ZN3gpu18SharedImageBacking28ProduceRGBEmulationGLTextureEPNS_18SharedImageManagerEPNS_17MemoryTypeTrackerE to i8*), i8* bitcast (%"class.gpu::SharedImageRepresentationGLTexturePassthrough"* (%"class.gpu::SharedImageBacking"*, %"class.gpu::SharedImageManager"*, %"class.gpu::MemoryTypeTracker"*)* @_ZN3gpu18SharedImageBacking27ProduceGLTexturePassthroughEPNS_18SharedImageManagerEPNS_17MemoryTypeTrackerE to i8*), i8* bitcast (%"class.gpu::SharedImageRepresentationSkia"* (%"class.gpu::SharedImageBacking"*, %"class.gpu::SharedImageManager"*, %"class.gpu::MemoryTypeTracker"*, %"class.gpu::SharedContextState"*)* @_ZN3gpu18SharedImageBacking11ProduceSkiaEPNS_18SharedImageManagerEPNS_17MemoryTypeTrackerE13scoped_refptrINS_18SharedContextStateEE to i8*), i8* bitcast (%"class.gpu::SharedImageRepresentationDawn"* (%"class.gpu::SharedImageBacking"*, %"class.gpu::SharedImageManager"*, %"class.gpu::MemoryTypeTracker"*, %struct.WGPUDeviceImpl*)* @_ZN3gpu18SharedImageBacking11ProduceDawnEPNS_18SharedImageManagerEPNS_17MemoryTypeTrackerEP14WGPUDeviceImpl to i8*), i8* bitcast (%"class.gpu::SharedImageRepresentationOverlay"* (%"class.gpu::SharedImageBacking"*, %"class.gpu::SharedImageManager"*, %"class.gpu::MemoryTypeTracker"*)* @_ZN3gpu18SharedImageBacking14ProduceOverlayEPNS_18SharedImageManagerEPNS_17MemoryTypeTrackerE to i8*), i8* bitcast (%"class.gpu::SharedImageRepresentationVaapi"* (%"class.gpu::SharedImageBacking"*, %"class.gpu::SharedImageManager"*, %"class.gpu::MemoryTypeTracker"*, %"class.gpu::VaapiDependenciesFactory"*)* @_ZN3gpu18SharedImageBacking16ProduceVASurfaceEPNS_18SharedImageManagerEPNS_17MemoryTypeTrackerEPNS_24VaapiDependenciesFactoryE to i8*), i8* bitcast (%"class.gpu::SharedImageRepresentationMemory"* (%"class.gpu::SharedImageBacking"*, %"class.gpu::SharedImageManager"*, %"class.gpu::MemoryTypeTracker"*)* @_ZN3gpu18SharedImageBacking13ProduceMemoryEPNS_18SharedImageManagerEPNS_17MemoryTypeTrackerE to i8*)] }, align 8
@_ZZN3gpu18SharedImageBacking14ScopedWriteUMAD1EvE24atomic_histogram_pointer = linkonce_odr hidden local_unnamed_addr global %"struct.std::__1::atomic.273" zeroinitializer, comdat, align 8
@.str = private unnamed_addr constant [32 x i8] c"GPU.SharedImage.ContentConsumed\00", align 1

@_ZN3gpu18SharedImageBackingD1Ev = hidden unnamed_addr alias void (%"class.gpu::SharedImageBacking"*), void (%"class.gpu::SharedImageBacking"*)* @_ZN3gpu18SharedImageBackingD2Ev
@_ZN3gpu18SharedImageBacking8AutoLockC1EPKS0_ = hidden unnamed_addr alias void (%"class.gpu::SharedImageBacking::AutoLock"*, %"class.gpu::SharedImageBacking"*), void (%"class.gpu::SharedImageBacking::AutoLock"*, %"class.gpu::SharedImageBacking"*)* @_ZN3gpu18SharedImageBacking8AutoLockC2EPKS0_
@_ZN3gpu18SharedImageBacking8AutoLockD1Ev = hidden unnamed_addr alias void (%"class.gpu::SharedImageBacking::AutoLock"*), void (%"class.gpu::SharedImageBacking::AutoLock"*)* @_ZN3gpu18SharedImageBacking8AutoLockD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3gpu18SharedImageBackingC2ERKNS_7MailboxEN3viz14ResourceFormatERKN3gfx4SizeERKNS6_10ColorSpaceE15GrSurfaceOrigin11SkAlphaTypejmb(%"class.gpu::SharedImageBacking"*, %"struct.gpu::Mailbox"* nocapture readonly dereferenceable(16), i32, %"class.gfx::Size"* nocapture readonly dereferenceable(8), %"class.gfx::ColorSpace"* nocapture readonly dereferenceable(68), i32, i32, i32, i64, i1 zeroext) unnamed_addr #0 align 2 {
  %11 = getelementptr inbounds %"class.gpu::SharedImageBacking", %"class.gpu::SharedImageBacking"* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [21 x i8*] }, { [21 x i8*] }* @_ZTVN3gpu18SharedImageBackingE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %11, align 8
  %12 = getelementptr inbounds %"class.gpu::SharedImageBacking", %"class.gpu::SharedImageBacking"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %12, align 8
  %13 = getelementptr inbounds %"class.gpu::SharedImageBacking", %"class.gpu::SharedImageBacking"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1
  %14 = bitcast %union.anon* %13 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %14, i8 0, i64 40, i1 false) #14
  %15 = getelementptr inbounds %"class.gpu::SharedImageBacking", %"class.gpu::SharedImageBacking"* %0, i64 0, i32 2, i32 0, i64 0
  %16 = getelementptr inbounds %"struct.gpu::Mailbox", %"struct.gpu::Mailbox"* %1, i64 0, i32 0, i64 0
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %15, i8* align 1 %16, i64 16, i1 false)
  %17 = getelementptr inbounds %"class.gpu::SharedImageBacking", %"class.gpu::SharedImageBacking"* %0, i64 0, i32 3
  store i32 %2, i32* %17, align 8
  %18 = getelementptr inbounds %"class.gpu::SharedImageBacking", %"class.gpu::SharedImageBacking"* %0, i64 0, i32 4
  %19 = bitcast %"class.gfx::Size"* %3 to i64*
  %20 = bitcast %"class.gfx::Size"* %18 to i64*
  %21 = load i64, i64* %19, align 4
  store i64 %21, i64* %20, align 4
  %22 = getelementptr inbounds %"class.gpu::SharedImageBacking", %"class.gpu::SharedImageBacking"* %0, i64 0, i32 5, i32 0
  %23 = getelementptr inbounds %"class.gfx::ColorSpace", %"class.gfx::ColorSpace"* %4, i64 0, i32 0
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %22, i8* align 4 %23, i64 68, i1 false)
  %24 = getelementptr inbounds %"class.gpu::SharedImageBacking", %"class.gpu::SharedImageBacking"* %0, i64 0, i32 6
  store i32 %5, i32* %24, align 8
  %25 = getelementptr inbounds %"class.gpu::SharedImageBacking", %"class.gpu::SharedImageBacking"* %0, i64 0, i32 7
  store i32 %6, i32* %25, align 4
  %26 = getelementptr inbounds %"class.gpu::SharedImageBacking", %"class.gpu::SharedImageBacking"* %0, i64 0, i32 8
  store i32 %7, i32* %26, align 8
  %27 = getelementptr inbounds %"class.gpu::SharedImageBacking", %"class.gpu::SharedImageBacking"* %0, i64 0, i32 9
  store i64 %8, i64* %27, align 8
  %28 = getelementptr inbounds %"class.gpu::SharedImageBacking", %"class.gpu::SharedImageBacking"* %0, i64 0, i32 10
  store %"class.gpu::SharedImageFactory"* null, %"class.gpu::SharedImageFactory"** %28, align 8
  %29 = getelementptr inbounds %"class.gpu::SharedImageBacking", %"class.gpu::SharedImageBacking"* %0, i64 0, i32 11
  store i8 1, i8* %29, align 8
  %30 = getelementptr inbounds %"class.gpu::SharedImageBacking", %"class.gpu::SharedImageBacking"* %0, i64 0, i32 12, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %30, align 1
  %31 = getelementptr inbounds %"class.gpu::SharedImageBacking", %"class.gpu::SharedImageBacking"* %0, i64 0, i32 13
  %32 = bitcast %"class.std::__1::vector.202"* %31 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %32, i8 0, i64 24, i1 false) #14
  br i1 %9, label %33, label %35

33:                                               ; preds = %10
  %34 = getelementptr inbounds %"class.gpu::SharedImageBacking", %"class.gpu::SharedImageBacking"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0
  tail call void @_ZN4base8internal8LockImplC1Ev(%"class.base::internal::LockImpl"* %34) #14
  store i8 1, i8* %12, align 8
  br label %35

35:                                               ; preds = %33, %10
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

; Function Attrs: noreturn nounwind ssp uwtable
define hidden void @_ZN3gpu18SharedImageBackingD0Ev(%"class.gpu::SharedImageBacking"* nocapture readnone) unnamed_addr #2 align 2 {
  tail call void @llvm.trap() #15
  unreachable
}

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3gpu18SharedImageBacking13OnContextLostEv(%"class.gpu::SharedImageBacking"*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.gpu::SharedImageBacking", %"class.gpu::SharedImageBacking"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %3 = load i8, i8* %2, align 8, !range !2
  %4 = icmp eq i8 %3, 0
  %5 = getelementptr inbounds %"class.gpu::SharedImageBacking", %"class.gpu::SharedImageBacking"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1, i32 0
  %6 = select i1 %4, %"class.base::Lock"* null, %"class.base::Lock"* %5
  br i1 %4, label %13, label %7

7:                                                ; preds = %1
  %8 = getelementptr inbounds %"class.base::Lock", %"class.base::Lock"* %6, i64 0, i32 0, i32 0
  %9 = tail call i32 @pthread_mutex_trylock(%union.pthread_mutex_t* %8) #14
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %13, label %11, !prof !3

11:                                               ; preds = %7
  %12 = getelementptr inbounds %"class.base::Lock", %"class.base::Lock"* %6, i64 0, i32 0
  tail call void @_ZN4base8internal8LockImpl24LockInternalWithTrackingEv(%"class.base::internal::LockImpl"* %12) #14
  br label %13

13:                                               ; preds = %1, %7, %11
  %14 = getelementptr inbounds %"class.gpu::SharedImageBacking", %"class.gpu::SharedImageBacking"* %0, i64 0, i32 11
  store i8 0, i8* %14, align 8
  %15 = icmp eq %"class.base::Lock"* %6, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %13
  %17 = getelementptr inbounds %"class.base::Lock", %"class.base::Lock"* %6, i64 0, i32 0, i32 0
  %18 = tail call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* %17) #14
  br label %19

19:                                               ; preds = %13, %16
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden zeroext i1 @_ZN3gpu18SharedImageBacking16PresentSwapChainEv(%"class.gpu::SharedImageBacking"* nocapture readnone) unnamed_addr #4 align 2 {
  ret i1 false
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden %"class.gpu::SharedImageRepresentationGLTexture"* @_ZN3gpu18SharedImageBacking16ProduceGLTextureEPNS_18SharedImageManagerEPNS_17MemoryTypeTrackerE(%"class.gpu::SharedImageBacking"* nocapture readnone, %"class.gpu::SharedImageManager"* nocapture readnone, %"class.gpu::MemoryTypeTracker"* nocapture readnone) unnamed_addr #4 align 2 {
  ret %"class.gpu::SharedImageRepresentationGLTexture"* null
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden %"class.gpu::SharedImageRepresentationGLTexture"* @_ZN3gpu18SharedImageBacking28ProduceRGBEmulationGLTextureEPNS_18SharedImageManagerEPNS_17MemoryTypeTrackerE(%"class.gpu::SharedImageBacking"* nocapture readnone, %"class.gpu::SharedImageManager"* nocapture readnone, %"class.gpu::MemoryTypeTracker"* nocapture readnone) unnamed_addr #4 align 2 {
  ret %"class.gpu::SharedImageRepresentationGLTexture"* null
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden %"class.gpu::SharedImageRepresentationGLTexturePassthrough"* @_ZN3gpu18SharedImageBacking27ProduceGLTexturePassthroughEPNS_18SharedImageManagerEPNS_17MemoryTypeTrackerE(%"class.gpu::SharedImageBacking"* nocapture readnone, %"class.gpu::SharedImageManager"* nocapture readnone, %"class.gpu::MemoryTypeTracker"* nocapture readnone) unnamed_addr #4 align 2 {
  ret %"class.gpu::SharedImageRepresentationGLTexturePassthrough"* null
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.gpu::SharedImageRepresentationSkia"* @_ZN3gpu18SharedImageBacking11ProduceSkiaEPNS_18SharedImageManagerEPNS_17MemoryTypeTrackerE13scoped_refptrINS_18SharedContextStateEE(%"class.gpu::SharedImageBacking"* nocapture readnone, %"class.gpu::SharedImageManager"* nocapture readnone, %"class.gpu::MemoryTypeTracker"* nocapture readnone, %"class.gpu::SharedContextState"*) unnamed_addr #0 align 2 {
  %5 = icmp eq %"class.gpu::SharedContextState"* %3, null
  br i1 %5, label %19, label %6

6:                                                ; preds = %4
  %7 = getelementptr inbounds %"class.gpu::SharedContextState", %"class.gpu::SharedContextState"* %3, i64 0, i32 2
  %8 = getelementptr inbounds %"class.base::RefCounted", %"class.base::RefCounted"* %7, i64 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %8) #14
  %9 = getelementptr inbounds %"class.base::RefCounted", %"class.base::RefCounted"* %7, i64 0, i32 0, i32 0
  %10 = load i32, i32* %9, align 4
  %11 = icmp eq i32 %10, 0
  br i1 %11, label %12, label %19

12:                                               ; preds = %6
  %13 = getelementptr inbounds %"class.base::RefCounted", %"class.base::RefCounted"* %7, i64 -4
  %14 = bitcast %"class.base::RefCounted"* %13 to %"class.gpu::SharedContextState"*
  %15 = bitcast %"class.base::RefCounted"* %13 to void (%"class.gpu::SharedContextState"*)***
  %16 = load void (%"class.gpu::SharedContextState"*)**, void (%"class.gpu::SharedContextState"*)*** %15, align 8
  %17 = getelementptr inbounds void (%"class.gpu::SharedContextState"*)*, void (%"class.gpu::SharedContextState"*)** %16, i64 1
  %18 = load void (%"class.gpu::SharedContextState"*)*, void (%"class.gpu::SharedContextState"*)** %17, align 8
  tail call void %18(%"class.gpu::SharedContextState"* nonnull %14) #14
  br label %19

19:                                               ; preds = %4, %6, %12
  ret %"class.gpu::SharedImageRepresentationSkia"* null
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden %"class.gpu::SharedImageRepresentationDawn"* @_ZN3gpu18SharedImageBacking11ProduceDawnEPNS_18SharedImageManagerEPNS_17MemoryTypeTrackerEP14WGPUDeviceImpl(%"class.gpu::SharedImageBacking"* nocapture readnone, %"class.gpu::SharedImageManager"* nocapture readnone, %"class.gpu::MemoryTypeTracker"* nocapture readnone, %struct.WGPUDeviceImpl* nocapture readnone) unnamed_addr #4 align 2 {
  ret %"class.gpu::SharedImageRepresentationDawn"* null
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden %"class.gpu::SharedImageRepresentationOverlay"* @_ZN3gpu18SharedImageBacking14ProduceOverlayEPNS_18SharedImageManagerEPNS_17MemoryTypeTrackerE(%"class.gpu::SharedImageBacking"* nocapture readnone, %"class.gpu::SharedImageManager"* nocapture readnone, %"class.gpu::MemoryTypeTracker"* nocapture readnone) unnamed_addr #4 align 2 {
  ret %"class.gpu::SharedImageRepresentationOverlay"* null
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden %"class.gpu::SharedImageRepresentationVaapi"* @_ZN3gpu18SharedImageBacking16ProduceVASurfaceEPNS_18SharedImageManagerEPNS_17MemoryTypeTrackerEPNS_24VaapiDependenciesFactoryE(%"class.gpu::SharedImageBacking"* nocapture readnone, %"class.gpu::SharedImageManager"* nocapture readnone, %"class.gpu::MemoryTypeTracker"* nocapture readnone, %"class.gpu::VaapiDependenciesFactory"* nocapture readnone) unnamed_addr #4 align 2 {
  ret %"class.gpu::SharedImageRepresentationVaapi"* null
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden %"class.gpu::SharedImageRepresentationMemory"* @_ZN3gpu18SharedImageBacking13ProduceMemoryEPNS_18SharedImageManagerEPNS_17MemoryTypeTrackerE(%"class.gpu::SharedImageBacking"* nocapture readnone, %"class.gpu::SharedImageManager"* nocapture readnone, %"class.gpu::MemoryTypeTracker"* nocapture readnone) unnamed_addr #4 align 2 {
  ret %"class.gpu::SharedImageRepresentationMemory"* null
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3gpu18SharedImageBacking6AddRefEPNS_25SharedImageRepresentationE(%"class.gpu::SharedImageBacking"*, %"class.gpu::SharedImageRepresentation"*) local_unnamed_addr #0 align 2 {
  %3 = ptrtoint %"class.gpu::SharedImageRepresentation"* %1 to i64
  %4 = getelementptr inbounds %"class.gpu::SharedImageBacking", %"class.gpu::SharedImageBacking"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %5 = load i8, i8* %4, align 8, !range !2
  %6 = icmp eq i8 %5, 0
  %7 = getelementptr inbounds %"class.gpu::SharedImageBacking", %"class.gpu::SharedImageBacking"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1, i32 0
  %8 = select i1 %6, %"class.base::Lock"* null, %"class.base::Lock"* %7
  br i1 %6, label %15, label %9

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"class.base::Lock", %"class.base::Lock"* %8, i64 0, i32 0, i32 0
  %11 = tail call i32 @pthread_mutex_trylock(%union.pthread_mutex_t* %10) #14
  %12 = icmp eq i32 %11, 0
  br i1 %12, label %15, label %13, !prof !3

13:                                               ; preds = %9
  %14 = getelementptr inbounds %"class.base::Lock", %"class.base::Lock"* %8, i64 0, i32 0
  tail call void @_ZN4base8internal8LockImpl24LockInternalWithTrackingEv(%"class.base::internal::LockImpl"* %14) #14
  br label %15

15:                                               ; preds = %2, %9, %13
  %16 = getelementptr inbounds %"class.gpu::SharedImageBacking", %"class.gpu::SharedImageBacking"* %0, i64 0, i32 13
  %17 = getelementptr inbounds %"class.std::__1::vector.202", %"class.std::__1::vector.202"* %16, i64 0, i32 0, i32 0
  %18 = load %"class.gpu::SharedImageRepresentation"**, %"class.gpu::SharedImageRepresentation"*** %17, align 8
  %19 = getelementptr inbounds %"class.gpu::SharedImageBacking", %"class.gpu::SharedImageBacking"* %0, i64 0, i32 13, i32 0, i32 1
  %20 = load %"class.gpu::SharedImageRepresentation"**, %"class.gpu::SharedImageRepresentation"*** %19, align 8
  %21 = icmp eq %"class.gpu::SharedImageRepresentation"** %18, %20
  %22 = getelementptr inbounds %"class.gpu::SharedImageBacking", %"class.gpu::SharedImageBacking"* %0, i64 0, i32 13, i32 0, i32 2, i32 0, i32 0
  %23 = load %"class.gpu::SharedImageRepresentation"**, %"class.gpu::SharedImageRepresentation"*** %22, align 8
  %24 = icmp eq %"class.gpu::SharedImageRepresentation"** %20, %23
  %25 = ptrtoint %"class.gpu::SharedImageRepresentation"** %23 to i64
  %26 = ptrtoint %"class.gpu::SharedImageRepresentation"** %18 to i64
  br i1 %24, label %32, label %27

27:                                               ; preds = %15
  %28 = bitcast %"class.gpu::SharedImageRepresentation"** %20 to i64*
  store i64 %3, i64* %28, align 8
  %29 = getelementptr inbounds %"class.gpu::SharedImageRepresentation"*, %"class.gpu::SharedImageRepresentation"** %20, i64 1
  %30 = ptrtoint %"class.gpu::SharedImageRepresentation"** %29 to i64
  %31 = bitcast %"class.gpu::SharedImageRepresentation"*** %19 to i64*
  store i64 %30, i64* %31, align 8
  br label %87

32:                                               ; preds = %15
  %33 = ptrtoint %"class.gpu::SharedImageRepresentation"** %20 to i64
  %34 = bitcast %"class.gpu::SharedImageRepresentation"*** %19 to i64*
  %35 = bitcast %"class.std::__1::vector.202"* %16 to i64*
  %36 = sub i64 %33, %26
  %37 = ashr exact i64 %36, 3
  %38 = add nsw i64 %37, 1
  %39 = icmp ugt i64 %38, 2305843009213693951
  br i1 %39, label %40, label %42

40:                                               ; preds = %32
  %41 = bitcast %"class.std::__1::vector.202"* %16 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %41) #15
  unreachable

42:                                               ; preds = %32
  %43 = bitcast %"class.gpu::SharedImageRepresentation"*** %22 to i64*
  %44 = sub i64 %25, %26
  %45 = ashr exact i64 %44, 3
  %46 = icmp ult i64 %45, 1152921504606846975
  br i1 %46, label %47, label %55

47:                                               ; preds = %42
  %48 = ashr exact i64 %44, 2
  %49 = icmp ult i64 %48, %38
  %50 = select i1 %49, i64 %38, i64 %48
  %51 = icmp eq i64 %50, 0
  br i1 %51, label %60, label %52

52:                                               ; preds = %47
  %53 = icmp ugt i64 %50, 2305843009213693951
  br i1 %53, label %54, label %55

54:                                               ; preds = %52
  tail call void @abort() #15
  unreachable

55:                                               ; preds = %52, %42
  %56 = phi i64 [ %50, %52 ], [ 2305843009213693951, %42 ]
  %57 = shl i64 %56, 3
  %58 = tail call i8* @_Znwm(i64 %57) #16
  %59 = bitcast i8* %58 to %"class.gpu::SharedImageRepresentation"**
  br label %60

60:                                               ; preds = %55, %47
  %61 = phi i64 [ %56, %55 ], [ 0, %47 ]
  %62 = phi %"class.gpu::SharedImageRepresentation"** [ %59, %55 ], [ null, %47 ]
  %63 = getelementptr inbounds %"class.gpu::SharedImageRepresentation"*, %"class.gpu::SharedImageRepresentation"** %62, i64 %37
  %64 = getelementptr inbounds %"class.gpu::SharedImageRepresentation"*, %"class.gpu::SharedImageRepresentation"** %62, i64 %61
  %65 = ptrtoint %"class.gpu::SharedImageRepresentation"** %64 to i64
  %66 = bitcast %"class.gpu::SharedImageRepresentation"** %63 to i64*
  store i64 %3, i64* %66, align 8
  %67 = getelementptr inbounds %"class.gpu::SharedImageRepresentation"*, %"class.gpu::SharedImageRepresentation"** %63, i64 1
  %68 = ptrtoint %"class.gpu::SharedImageRepresentation"** %67 to i64
  %69 = load %"class.gpu::SharedImageRepresentation"**, %"class.gpu::SharedImageRepresentation"*** %17, align 8
  %70 = load i64, i64* %34, align 8
  %71 = ptrtoint %"class.gpu::SharedImageRepresentation"** %69 to i64
  %72 = sub i64 %70, %71
  %73 = ashr exact i64 %72, 3
  %74 = sub nsw i64 0, %73
  %75 = getelementptr inbounds %"class.gpu::SharedImageRepresentation"*, %"class.gpu::SharedImageRepresentation"** %63, i64 %74
  %76 = ptrtoint %"class.gpu::SharedImageRepresentation"** %75 to i64
  %77 = icmp sgt i64 %72, 0
  br i1 %77, label %78, label %82

78:                                               ; preds = %60
  %79 = bitcast %"class.gpu::SharedImageRepresentation"** %75 to i8*
  %80 = bitcast %"class.gpu::SharedImageRepresentation"** %69 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %79, i8* align 8 %80, i64 %72, i1 false) #14
  %81 = load %"class.gpu::SharedImageRepresentation"**, %"class.gpu::SharedImageRepresentation"*** %17, align 8
  br label %82

82:                                               ; preds = %78, %60
  %83 = phi %"class.gpu::SharedImageRepresentation"** [ %69, %60 ], [ %81, %78 ]
  store i64 %76, i64* %35, align 8
  store i64 %68, i64* %34, align 8
  store i64 %65, i64* %43, align 8
  %84 = icmp eq %"class.gpu::SharedImageRepresentation"** %83, null
  br i1 %84, label %87, label %85

85:                                               ; preds = %82
  %86 = bitcast %"class.gpu::SharedImageRepresentation"** %83 to i8*
  tail call void @_ZdlPv(i8* %86) #16
  br label %87

87:                                               ; preds = %27, %82, %85
  br i1 %21, label %88, label %95

88:                                               ; preds = %87
  %89 = load %"class.gpu::SharedImageRepresentation"**, %"class.gpu::SharedImageRepresentation"*** %17, align 8
  %90 = load %"class.gpu::SharedImageRepresentation"*, %"class.gpu::SharedImageRepresentation"** %89, align 8
  %91 = getelementptr inbounds %"class.gpu::SharedImageRepresentation", %"class.gpu::SharedImageRepresentation"* %90, i64 0, i32 3
  %92 = load %"class.gpu::MemoryTypeTracker"*, %"class.gpu::MemoryTypeTracker"** %91, align 8
  %93 = getelementptr inbounds %"class.gpu::SharedImageBacking", %"class.gpu::SharedImageBacking"* %0, i64 0, i32 9
  %94 = load i64, i64* %93, align 8
  tail call void @_ZN3gpu17MemoryTypeTracker13TrackMemAllocEm(%"class.gpu::MemoryTypeTracker"* %92, i64 %94) #14
  br label %95

95:                                               ; preds = %88, %87
  %96 = icmp eq %"class.base::Lock"* %8, null
  br i1 %96, label %100, label %97

97:                                               ; preds = %95
  %98 = getelementptr inbounds %"class.base::Lock", %"class.base::Lock"* %8, i64 0, i32 0, i32 0
  %99 = tail call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* %98) #14
  br label %100

100:                                              ; preds = %95, %97
  ret void
}

declare void @_ZN3gpu17MemoryTypeTracker13TrackMemAllocEm(%"class.gpu::MemoryTypeTracker"*, i64) local_unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3gpu18SharedImageBacking10ReleaseRefEPNS_25SharedImageRepresentationE(%"class.gpu::SharedImageBacking"*, %"class.gpu::SharedImageRepresentation"*) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.gpu::SharedImageBacking", %"class.gpu::SharedImageBacking"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %4 = load i8, i8* %3, align 8, !range !2
  %5 = icmp eq i8 %4, 0
  %6 = getelementptr inbounds %"class.gpu::SharedImageBacking", %"class.gpu::SharedImageBacking"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1, i32 0
  %7 = select i1 %5, %"class.base::Lock"* null, %"class.base::Lock"* %6
  br i1 %5, label %14, label %8

8:                                                ; preds = %2
  %9 = getelementptr inbounds %"class.base::Lock", %"class.base::Lock"* %7, i64 0, i32 0, i32 0
  %10 = tail call i32 @pthread_mutex_trylock(%union.pthread_mutex_t* %9) #14
  %11 = icmp eq i32 %10, 0
  br i1 %11, label %14, label %12, !prof !3

12:                                               ; preds = %8
  %13 = getelementptr inbounds %"class.base::Lock", %"class.base::Lock"* %7, i64 0, i32 0
  tail call void @_ZN4base8internal8LockImpl24LockInternalWithTrackingEv(%"class.base::internal::LockImpl"* %13) #14
  br label %14

14:                                               ; preds = %2, %8, %12
  %15 = getelementptr inbounds %"class.gpu::SharedImageBacking", %"class.gpu::SharedImageBacking"* %0, i64 0, i32 13, i32 0, i32 0
  %16 = load %"class.gpu::SharedImageRepresentation"**, %"class.gpu::SharedImageRepresentation"*** %15, align 8
  %17 = getelementptr inbounds %"class.gpu::SharedImageBacking", %"class.gpu::SharedImageBacking"* %0, i64 0, i32 13, i32 0, i32 1
  %18 = load %"class.gpu::SharedImageRepresentation"**, %"class.gpu::SharedImageRepresentation"*** %17, align 8
  %19 = icmp eq %"class.gpu::SharedImageRepresentation"** %16, %18
  %20 = ptrtoint %"class.gpu::SharedImageRepresentation"** %18 to i64
  br i1 %19, label %31, label %21

21:                                               ; preds = %14, %25
  %22 = phi %"class.gpu::SharedImageRepresentation"** [ %26, %25 ], [ %16, %14 ]
  %23 = load %"class.gpu::SharedImageRepresentation"*, %"class.gpu::SharedImageRepresentation"** %22, align 8
  %24 = icmp eq %"class.gpu::SharedImageRepresentation"* %23, %1
  br i1 %24, label %28, label %25

25:                                               ; preds = %21
  %26 = getelementptr inbounds %"class.gpu::SharedImageRepresentation"*, %"class.gpu::SharedImageRepresentation"** %22, i64 1
  %27 = icmp eq %"class.gpu::SharedImageRepresentation"** %26, %18
  br i1 %27, label %28, label %21

28:                                               ; preds = %21, %25
  %29 = phi %"class.gpu::SharedImageRepresentation"** [ %18, %25 ], [ %22, %21 ]
  %30 = icmp eq %"class.gpu::SharedImageRepresentation"** %29, %16
  br i1 %30, label %31, label %51

31:                                               ; preds = %14, %28
  %32 = load %"class.gpu::SharedImageRepresentation"*, %"class.gpu::SharedImageRepresentation"** %16, align 8
  %33 = getelementptr inbounds %"class.gpu::SharedImageRepresentation", %"class.gpu::SharedImageRepresentation"* %32, i64 0, i32 3
  %34 = load %"class.gpu::MemoryTypeTracker"*, %"class.gpu::MemoryTypeTracker"** %33, align 8
  %35 = getelementptr inbounds %"class.gpu::SharedImageBacking", %"class.gpu::SharedImageBacking"* %0, i64 0, i32 9
  %36 = load i64, i64* %35, align 8
  tail call void @_ZN3gpu17MemoryTypeTracker12TrackMemFreeEm(%"class.gpu::MemoryTypeTracker"* %34, i64 %36) #14
  %37 = getelementptr inbounds %"class.gpu::SharedImageRepresentation"*, %"class.gpu::SharedImageRepresentation"** %16, i64 1
  %38 = bitcast %"class.gpu::SharedImageRepresentation"*** %17 to i64*
  %39 = load i64, i64* %38, align 8
  %40 = ptrtoint %"class.gpu::SharedImageRepresentation"** %37 to i64
  %41 = sub i64 %39, %40
  %42 = ashr exact i64 %41, 3
  %43 = icmp eq i64 %41, 0
  br i1 %43, label %47, label %44

44:                                               ; preds = %31
  %45 = bitcast %"class.gpu::SharedImageRepresentation"** %16 to i8*
  %46 = bitcast %"class.gpu::SharedImageRepresentation"** %37 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %45, i8* align 8 %46, i64 %41, i1 false) #14
  br label %47

47:                                               ; preds = %31, %44
  %48 = getelementptr inbounds %"class.gpu::SharedImageRepresentation"*, %"class.gpu::SharedImageRepresentation"** %16, i64 %42
  store %"class.gpu::SharedImageRepresentation"** %48, %"class.gpu::SharedImageRepresentation"*** %17, align 8
  %49 = load %"class.gpu::SharedImageRepresentation"**, %"class.gpu::SharedImageRepresentation"*** %15, align 8
  %50 = icmp eq %"class.gpu::SharedImageRepresentation"** %49, %48
  br i1 %50, label %67, label %62

51:                                               ; preds = %28
  %52 = getelementptr inbounds %"class.gpu::SharedImageRepresentation"*, %"class.gpu::SharedImageRepresentation"** %29, i64 1
  %53 = ptrtoint %"class.gpu::SharedImageRepresentation"** %52 to i64
  %54 = sub i64 %20, %53
  %55 = ashr exact i64 %54, 3
  %56 = icmp eq i64 %54, 0
  br i1 %56, label %60, label %57

57:                                               ; preds = %51
  %58 = bitcast %"class.gpu::SharedImageRepresentation"** %29 to i8*
  %59 = bitcast %"class.gpu::SharedImageRepresentation"** %52 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %58, i8* align 8 %59, i64 %54, i1 false) #14
  br label %60

60:                                               ; preds = %51, %57
  %61 = getelementptr inbounds %"class.gpu::SharedImageRepresentation"*, %"class.gpu::SharedImageRepresentation"** %29, i64 %55
  store %"class.gpu::SharedImageRepresentation"** %61, %"class.gpu::SharedImageRepresentation"*** %17, align 8
  br label %67

62:                                               ; preds = %47
  %63 = load %"class.gpu::SharedImageRepresentation"*, %"class.gpu::SharedImageRepresentation"** %49, align 8
  %64 = getelementptr inbounds %"class.gpu::SharedImageRepresentation", %"class.gpu::SharedImageRepresentation"* %63, i64 0, i32 3
  %65 = load %"class.gpu::MemoryTypeTracker"*, %"class.gpu::MemoryTypeTracker"** %64, align 8
  %66 = load i64, i64* %35, align 8
  tail call void @_ZN3gpu17MemoryTypeTracker13TrackMemAllocEm(%"class.gpu::MemoryTypeTracker"* %65, i64 %66) #14
  br label %67

67:                                               ; preds = %47, %60, %62
  %68 = icmp eq %"class.base::Lock"* %7, null
  br i1 %68, label %72, label %69

69:                                               ; preds = %67
  %70 = getelementptr inbounds %"class.base::Lock", %"class.base::Lock"* %7, i64 0, i32 0, i32 0
  %71 = tail call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* %70) #14
  br label %72

72:                                               ; preds = %67, %69
  ret void
}

declare void @_ZN3gpu17MemoryTypeTracker12TrackMemFreeEm(%"class.gpu::MemoryTypeTracker"*, i64) local_unnamed_addr #5

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN3gpu18SharedImageBacking20RegisterImageFactoryEPNS_18SharedImageFactoryE(%"class.gpu::SharedImageBacking"* nocapture, %"class.gpu::SharedImageFactory"*) local_unnamed_addr #6 align 2 {
  %3 = getelementptr inbounds %"class.gpu::SharedImageBacking", %"class.gpu::SharedImageBacking"* %0, i64 0, i32 10
  store %"class.gpu::SharedImageFactory"* %1, %"class.gpu::SharedImageFactory"** %3, align 8
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN3gpu18SharedImageBacking22UnregisterImageFactoryEv(%"class.gpu::SharedImageBacking"* nocapture) local_unnamed_addr #6 align 2 {
  %2 = getelementptr inbounds %"class.gpu::SharedImageBacking", %"class.gpu::SharedImageBacking"* %0, i64 0, i32 10
  store %"class.gpu::SharedImageFactory"* null, %"class.gpu::SharedImageFactory"** %2, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK3gpu18SharedImageBacking10HasAnyRefsEv(%"class.gpu::SharedImageBacking"*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.gpu::SharedImageBacking", %"class.gpu::SharedImageBacking"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %3 = load i8, i8* %2, align 8, !range !2
  %4 = icmp eq i8 %3, 0
  %5 = getelementptr inbounds %"class.gpu::SharedImageBacking", %"class.gpu::SharedImageBacking"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1, i32 0
  %6 = select i1 %4, %"class.base::Lock"* null, %"class.base::Lock"* %5
  br i1 %4, label %13, label %7

7:                                                ; preds = %1
  %8 = getelementptr inbounds %"class.base::Lock", %"class.base::Lock"* %6, i64 0, i32 0, i32 0
  %9 = tail call i32 @pthread_mutex_trylock(%union.pthread_mutex_t* %8) #14
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %13, label %11, !prof !3

11:                                               ; preds = %7
  %12 = getelementptr inbounds %"class.base::Lock", %"class.base::Lock"* %6, i64 0, i32 0
  tail call void @_ZN4base8internal8LockImpl24LockInternalWithTrackingEv(%"class.base::internal::LockImpl"* %12) #14
  br label %13

13:                                               ; preds = %1, %7, %11
  %14 = getelementptr inbounds %"class.gpu::SharedImageBacking", %"class.gpu::SharedImageBacking"* %0, i64 0, i32 13, i32 0, i32 0
  %15 = load %"class.gpu::SharedImageRepresentation"**, %"class.gpu::SharedImageRepresentation"*** %14, align 8
  %16 = getelementptr inbounds %"class.gpu::SharedImageBacking", %"class.gpu::SharedImageBacking"* %0, i64 0, i32 13, i32 0, i32 1
  %17 = load %"class.gpu::SharedImageRepresentation"**, %"class.gpu::SharedImageRepresentation"*** %16, align 8
  %18 = icmp ne %"class.gpu::SharedImageRepresentation"** %15, %17
  %19 = icmp eq %"class.base::Lock"* %6, null
  br i1 %19, label %23, label %20

20:                                               ; preds = %13
  %21 = getelementptr inbounds %"class.base::Lock", %"class.base::Lock"* %6, i64 0, i32 0, i32 0
  %22 = tail call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* %21) #14
  br label %23

23:                                               ; preds = %13, %20
  ret i1 %18
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3gpu18SharedImageBacking15OnReadSucceededEv(%"class.gpu::SharedImageBacking"*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.gpu::SharedImageBacking", %"class.gpu::SharedImageBacking"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %3 = load i8, i8* %2, align 8, !range !2
  %4 = icmp eq i8 %3, 0
  %5 = getelementptr inbounds %"class.gpu::SharedImageBacking", %"class.gpu::SharedImageBacking"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1, i32 0
  %6 = select i1 %4, %"class.base::Lock"* null, %"class.base::Lock"* %5
  br i1 %4, label %13, label %7

7:                                                ; preds = %1
  %8 = getelementptr inbounds %"class.base::Lock", %"class.base::Lock"* %6, i64 0, i32 0, i32 0
  %9 = tail call i32 @pthread_mutex_trylock(%union.pthread_mutex_t* %8) #14
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %13, label %11, !prof !3

11:                                               ; preds = %7
  %12 = getelementptr inbounds %"class.base::Lock", %"class.base::Lock"* %6, i64 0, i32 0
  tail call void @_ZN4base8internal8LockImpl24LockInternalWithTrackingEv(%"class.base::internal::LockImpl"* %12) #14
  br label %13

13:                                               ; preds = %1, %7, %11
  %14 = getelementptr inbounds %"class.gpu::SharedImageBacking", %"class.gpu::SharedImageBacking"* %0, i64 0, i32 12, i32 0, i32 0, i32 0, i32 0
  %15 = load i8, i8* %14, align 1, !range !2
  %16 = icmp eq i8 %15, 0
  br i1 %16, label %29, label %17

17:                                               ; preds = %13
  %18 = getelementptr inbounds %"class.gpu::SharedImageBacking", %"class.gpu::SharedImageBacking"* %0, i64 0, i32 12, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0
  store i8 1, i8* %18, align 1
  %19 = load atomic i64, i64* getelementptr inbounds (%"struct.std::__1::atomic.273", %"struct.std::__1::atomic.273"* @_ZZN3gpu18SharedImageBacking14ScopedWriteUMAD1EvE24atomic_histogram_pointer, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0) acquire, align 8
  %20 = inttoptr i64 %19 to %"class.base::HistogramBase"*
  %21 = icmp eq i64 %19, 0
  br i1 %21, label %22, label %25

22:                                               ; preds = %17
  %23 = tail call %"class.base::HistogramBase"* @_ZN4base16BooleanHistogram10FactoryGetEPKci(i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str, i64 0, i64 0), i32 1) #14
  %24 = ptrtoint %"class.base::HistogramBase"* %23 to i64
  store atomic i64 %24, i64* getelementptr inbounds (%"struct.std::__1::atomic.273", %"struct.std::__1::atomic.273"* @_ZZN3gpu18SharedImageBacking14ScopedWriteUMAD1EvE24atomic_histogram_pointer, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0) release, align 8
  br label %25

25:                                               ; preds = %17, %22
  %26 = phi %"class.base::HistogramBase"* [ %20, %17 ], [ %23, %22 ]
  %27 = load i8, i8* %18, align 1, !range !2
  %28 = icmp ne i8 %27, 0
  tail call void @_ZN4base13HistogramBase10AddBooleanEb(%"class.base::HistogramBase"* %26, i1 zeroext %28) #14
  store i8 0, i8* %14, align 1
  br label %29

29:                                               ; preds = %13, %25
  %30 = icmp eq %"class.base::Lock"* %6, null
  br i1 %30, label %34, label %31

31:                                               ; preds = %29
  %32 = getelementptr inbounds %"class.base::Lock", %"class.base::Lock"* %6, i64 0, i32 0, i32 0
  %33 = tail call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* %32) #14
  br label %34

34:                                               ; preds = %29, %31
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3gpu18SharedImageBacking16OnWriteSucceededEv(%"class.gpu::SharedImageBacking"*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.gpu::SharedImageBacking", %"class.gpu::SharedImageBacking"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %3 = load i8, i8* %2, align 8, !range !2
  %4 = icmp eq i8 %3, 0
  %5 = getelementptr inbounds %"class.gpu::SharedImageBacking", %"class.gpu::SharedImageBacking"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1, i32 0
  %6 = select i1 %4, %"class.base::Lock"* null, %"class.base::Lock"* %5
  br i1 %4, label %13, label %7

7:                                                ; preds = %1
  %8 = getelementptr inbounds %"class.base::Lock", %"class.base::Lock"* %6, i64 0, i32 0, i32 0
  %9 = tail call i32 @pthread_mutex_trylock(%union.pthread_mutex_t* %8) #14
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %13, label %11, !prof !3

11:                                               ; preds = %7
  %12 = getelementptr inbounds %"class.base::Lock", %"class.base::Lock"* %6, i64 0, i32 0
  tail call void @_ZN4base8internal8LockImpl24LockInternalWithTrackingEv(%"class.base::internal::LockImpl"* %12) #14
  br label %13

13:                                               ; preds = %1, %7, %11
  %14 = getelementptr inbounds %"class.gpu::SharedImageBacking", %"class.gpu::SharedImageBacking"* %0, i64 0, i32 12, i32 0, i32 0, i32 0, i32 0
  %15 = load i8, i8* %14, align 1, !range !2
  %16 = icmp eq i8 %15, 0
  br i1 %16, label %29, label %17

17:                                               ; preds = %13
  %18 = load atomic i64, i64* getelementptr inbounds (%"struct.std::__1::atomic.273", %"struct.std::__1::atomic.273"* @_ZZN3gpu18SharedImageBacking14ScopedWriteUMAD1EvE24atomic_histogram_pointer, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0) acquire, align 8
  %19 = inttoptr i64 %18 to %"class.base::HistogramBase"*
  %20 = icmp eq i64 %18, 0
  br i1 %20, label %21, label %24

21:                                               ; preds = %17
  %22 = tail call %"class.base::HistogramBase"* @_ZN4base16BooleanHistogram10FactoryGetEPKci(i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str, i64 0, i64 0), i32 1) #14
  %23 = ptrtoint %"class.base::HistogramBase"* %22 to i64
  store atomic i64 %23, i64* getelementptr inbounds (%"struct.std::__1::atomic.273", %"struct.std::__1::atomic.273"* @_ZZN3gpu18SharedImageBacking14ScopedWriteUMAD1EvE24atomic_histogram_pointer, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0) release, align 8
  br label %24

24:                                               ; preds = %21, %17
  %25 = phi %"class.base::HistogramBase"* [ %19, %17 ], [ %22, %21 ]
  %26 = getelementptr inbounds %"class.gpu::SharedImageBacking", %"class.gpu::SharedImageBacking"* %0, i64 0, i32 12, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %27 = load i8, i8* %26, align 1, !range !2
  %28 = icmp ne i8 %27, 0
  tail call void @_ZN4base13HistogramBase10AddBooleanEb(%"class.base::HistogramBase"* %25, i1 zeroext %28) #14
  store i8 0, i8* %14, align 1
  br label %29

29:                                               ; preds = %13, %24
  %30 = getelementptr inbounds %"class.gpu::SharedImageBacking", %"class.gpu::SharedImageBacking"* %0, i64 0, i32 12, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0
  store i8 0, i8* %30, align 1
  store i8 1, i8* %14, align 1
  %31 = icmp eq %"class.base::Lock"* %6, null
  br i1 %31, label %35, label %32

32:                                               ; preds = %29
  %33 = getelementptr inbounds %"class.base::Lock", %"class.base::Lock"* %6, i64 0, i32 0, i32 0
  %34 = tail call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* %33) #14
  br label %35

35:                                               ; preds = %29, %32
  ret void
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i64 @_ZNK3gpu18SharedImageBacking27EstimatedSizeForMemTrackingEv(%"class.gpu::SharedImageBacking"* nocapture readonly) unnamed_addr #7 align 2 {
  %2 = getelementptr inbounds %"class.gpu::SharedImageBacking", %"class.gpu::SharedImageBacking"* %0, i64 0, i32 9
  %3 = load i64, i64* %2, align 8
  ret i64 %3
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK3gpu18SharedImageBacking12have_contextEv(%"class.gpu::SharedImageBacking"* nocapture readonly) local_unnamed_addr #7 align 2 {
  %2 = getelementptr inbounds %"class.gpu::SharedImageBacking", %"class.gpu::SharedImageBacking"* %0, i64 0, i32 11
  %3 = load i8, i8* %2, align 8, !range !2
  %4 = icmp ne i8 %3, 0
  ret i1 %4
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3gpu18SharedImageBacking8AutoLockC2EPKS0_(%"class.gpu::SharedImageBacking::AutoLock"* nocapture, %"class.gpu::SharedImageBacking"*) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.gpu::SharedImageBacking", %"class.gpu::SharedImageBacking"* %1, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %4 = load i8, i8* %3, align 8, !range !2
  %5 = icmp eq i8 %4, 0
  %6 = getelementptr inbounds %"class.gpu::SharedImageBacking", %"class.gpu::SharedImageBacking"* %1, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1, i32 0
  %7 = select i1 %5, %"class.base::Lock"* null, %"class.base::Lock"* %6
  %8 = getelementptr inbounds %"class.gpu::SharedImageBacking::AutoLock", %"class.gpu::SharedImageBacking::AutoLock"* %0, i64 0, i32 0, i32 0
  store %"class.base::Lock"* %7, %"class.base::Lock"** %8, align 8
  %9 = icmp eq %"class.base::Lock"* %7, null
  br i1 %9, label %16, label %10

10:                                               ; preds = %2
  %11 = getelementptr inbounds %"class.base::Lock", %"class.base::Lock"* %7, i64 0, i32 0, i32 0
  %12 = tail call i32 @pthread_mutex_trylock(%union.pthread_mutex_t* %11) #14
  %13 = icmp eq i32 %12, 0
  br i1 %13, label %16, label %14, !prof !3

14:                                               ; preds = %10
  %15 = getelementptr inbounds %"class.base::Lock", %"class.base::Lock"* %7, i64 0, i32 0
  tail call void @_ZN4base8internal8LockImpl24LockInternalWithTrackingEv(%"class.base::internal::LockImpl"* %15) #14
  br label %16

16:                                               ; preds = %2, %10, %14
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.base::Lock"* @_ZN3gpu18SharedImageBacking8AutoLock14InitializeLockEPKS0_(%"class.gpu::SharedImageBacking"* readonly) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.gpu::SharedImageBacking", %"class.gpu::SharedImageBacking"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %3 = load i8, i8* %2, align 8, !range !2
  %4 = icmp eq i8 %3, 0
  %5 = getelementptr inbounds %"class.gpu::SharedImageBacking", %"class.gpu::SharedImageBacking"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1, i32 0
  %6 = select i1 %4, %"class.base::Lock"* null, %"class.base::Lock"* %5
  ret %"class.base::Lock"* %6
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3gpu18SharedImageBacking8AutoLockD2Ev(%"class.gpu::SharedImageBacking::AutoLock"* nocapture readonly) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.gpu::SharedImageBacking::AutoLock", %"class.gpu::SharedImageBacking::AutoLock"* %0, i64 0, i32 0, i32 0
  %3 = load %"class.base::Lock"*, %"class.base::Lock"** %2, align 8
  %4 = icmp eq %"class.base::Lock"* %3, null
  br i1 %4, label %8, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.base::Lock", %"class.base::Lock"* %3, i64 0, i32 0, i32 0
  %7 = tail call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* %6) #14
  br label %8

8:                                                ; preds = %1, %5
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3gpu31ClearTrackingSharedImageBackingC2ERKNS_7MailboxEN3viz14ResourceFormatERKN3gfx4SizeERKNS6_10ColorSpaceE15GrSurfaceOrigin11SkAlphaTypejmb(%"class.gpu::ClearTrackingSharedImageBacking"*, %"struct.gpu::Mailbox"* nocapture readonly dereferenceable(16), i32, %"class.gfx::Size"* nocapture readonly dereferenceable(8), %"class.gfx::ColorSpace"* nocapture readonly dereferenceable(68), i32, i32, i32, i64, i1 zeroext) unnamed_addr #0 align 2 {
  %11 = getelementptr inbounds %"class.gpu::ClearTrackingSharedImageBacking", %"class.gpu::ClearTrackingSharedImageBacking"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [21 x i8*] }, { [21 x i8*] }* @_ZTVN3gpu18SharedImageBackingE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %11, align 8
  %12 = getelementptr inbounds %"class.gpu::ClearTrackingSharedImageBacking", %"class.gpu::ClearTrackingSharedImageBacking"* %0, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %12, align 8
  %13 = getelementptr inbounds %"class.gpu::ClearTrackingSharedImageBacking", %"class.gpu::ClearTrackingSharedImageBacking"* %0, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 1
  %14 = bitcast %union.anon* %13 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %14, i8 0, i64 40, i1 false) #14
  %15 = getelementptr inbounds %"class.gpu::ClearTrackingSharedImageBacking", %"class.gpu::ClearTrackingSharedImageBacking"* %0, i64 0, i32 0, i32 2, i32 0, i64 0
  %16 = getelementptr inbounds %"struct.gpu::Mailbox", %"struct.gpu::Mailbox"* %1, i64 0, i32 0, i64 0
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %15, i8* align 1 %16, i64 16, i1 false) #14
  %17 = getelementptr inbounds %"class.gpu::ClearTrackingSharedImageBacking", %"class.gpu::ClearTrackingSharedImageBacking"* %0, i64 0, i32 0, i32 3
  store i32 %2, i32* %17, align 8
  %18 = getelementptr inbounds %"class.gpu::ClearTrackingSharedImageBacking", %"class.gpu::ClearTrackingSharedImageBacking"* %0, i64 0, i32 0, i32 4
  %19 = bitcast %"class.gfx::Size"* %3 to i64*
  %20 = bitcast %"class.gfx::Size"* %18 to i64*
  %21 = load i64, i64* %19, align 4
  store i64 %21, i64* %20, align 4
  %22 = getelementptr inbounds %"class.gpu::ClearTrackingSharedImageBacking", %"class.gpu::ClearTrackingSharedImageBacking"* %0, i64 0, i32 0, i32 5, i32 0
  %23 = getelementptr inbounds %"class.gfx::ColorSpace", %"class.gfx::ColorSpace"* %4, i64 0, i32 0
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %22, i8* align 4 %23, i64 68, i1 false) #14
  %24 = getelementptr inbounds %"class.gpu::ClearTrackingSharedImageBacking", %"class.gpu::ClearTrackingSharedImageBacking"* %0, i64 0, i32 0, i32 6
  store i32 %5, i32* %24, align 8
  %25 = getelementptr inbounds %"class.gpu::ClearTrackingSharedImageBacking", %"class.gpu::ClearTrackingSharedImageBacking"* %0, i64 0, i32 0, i32 7
  store i32 %6, i32* %25, align 4
  %26 = getelementptr inbounds %"class.gpu::ClearTrackingSharedImageBacking", %"class.gpu::ClearTrackingSharedImageBacking"* %0, i64 0, i32 0, i32 8
  store i32 %7, i32* %26, align 8
  %27 = getelementptr inbounds %"class.gpu::ClearTrackingSharedImageBacking", %"class.gpu::ClearTrackingSharedImageBacking"* %0, i64 0, i32 0, i32 9
  store i64 %8, i64* %27, align 8
  %28 = getelementptr inbounds %"class.gpu::ClearTrackingSharedImageBacking", %"class.gpu::ClearTrackingSharedImageBacking"* %0, i64 0, i32 0, i32 10
  store %"class.gpu::SharedImageFactory"* null, %"class.gpu::SharedImageFactory"** %28, align 8
  %29 = getelementptr inbounds %"class.gpu::ClearTrackingSharedImageBacking", %"class.gpu::ClearTrackingSharedImageBacking"* %0, i64 0, i32 0, i32 11
  store i8 1, i8* %29, align 8
  %30 = getelementptr inbounds %"class.gpu::ClearTrackingSharedImageBacking", %"class.gpu::ClearTrackingSharedImageBacking"* %0, i64 0, i32 0, i32 12, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %30, align 1
  %31 = getelementptr inbounds %"class.gpu::ClearTrackingSharedImageBacking", %"class.gpu::ClearTrackingSharedImageBacking"* %0, i64 0, i32 0, i32 13
  %32 = bitcast %"class.std::__1::vector.202"* %31 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %32, i8 0, i64 24, i1 false) #14
  br i1 %9, label %33, label %35

33:                                               ; preds = %10
  %34 = getelementptr inbounds %"class.gpu::ClearTrackingSharedImageBacking", %"class.gpu::ClearTrackingSharedImageBacking"* %0, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0
  tail call void @_ZN4base8internal8LockImplC1Ev(%"class.base::internal::LockImpl"* %34) #14
  store i8 1, i8* %12, align 8
  br label %35

35:                                               ; preds = %10, %33
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [21 x i8*] }, { [21 x i8*] }* @_ZTVN3gpu31ClearTrackingSharedImageBackingE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %11, align 8
  %36 = getelementptr inbounds %"class.gpu::ClearTrackingSharedImageBacking", %"class.gpu::ClearTrackingSharedImageBacking"* %0, i64 0, i32 1
  %37 = bitcast %"class.gfx::Rect"* %36 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %37, i8 0, i64 16, i1 false) #14
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden { i64, i64 } @_ZNK3gpu31ClearTrackingSharedImageBacking11ClearedRectEv(%"class.gpu::ClearTrackingSharedImageBacking"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.gpu::ClearTrackingSharedImageBacking", %"class.gpu::ClearTrackingSharedImageBacking"* %0, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %3 = load i8, i8* %2, align 8, !range !2
  %4 = icmp eq i8 %3, 0
  %5 = getelementptr inbounds %"class.gpu::ClearTrackingSharedImageBacking", %"class.gpu::ClearTrackingSharedImageBacking"* %0, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 1, i32 0
  %6 = select i1 %4, %"class.base::Lock"* null, %"class.base::Lock"* %5
  br i1 %4, label %13, label %7

7:                                                ; preds = %1
  %8 = getelementptr inbounds %"class.base::Lock", %"class.base::Lock"* %6, i64 0, i32 0, i32 0
  %9 = tail call i32 @pthread_mutex_trylock(%union.pthread_mutex_t* %8) #14
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %13, label %11, !prof !3

11:                                               ; preds = %7
  %12 = getelementptr inbounds %"class.base::Lock", %"class.base::Lock"* %6, i64 0, i32 0
  tail call void @_ZN4base8internal8LockImpl24LockInternalWithTrackingEv(%"class.base::internal::LockImpl"* %12) #14
  br label %13

13:                                               ; preds = %1, %7, %11
  %14 = getelementptr inbounds %"class.gpu::ClearTrackingSharedImageBacking", %"class.gpu::ClearTrackingSharedImageBacking"* %0, i64 0, i32 1
  %15 = bitcast %"class.gfx::Rect"* %14 to i64*
  %16 = load i64, i64* %15, align 8
  %17 = getelementptr inbounds %"class.gpu::ClearTrackingSharedImageBacking", %"class.gpu::ClearTrackingSharedImageBacking"* %0, i64 0, i32 1, i32 1
  %18 = bitcast %"class.gfx::Size"* %17 to i64*
  %19 = load i64, i64* %18, align 8
  %20 = insertvalue { i64, i64 } undef, i64 %16, 0
  %21 = insertvalue { i64, i64 } %20, i64 %19, 1
  %22 = icmp eq %"class.base::Lock"* %6, null
  br i1 %22, label %26, label %23

23:                                               ; preds = %13
  %24 = getelementptr inbounds %"class.base::Lock", %"class.base::Lock"* %6, i64 0, i32 0, i32 0
  %25 = tail call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* %24) #14
  br label %26

26:                                               ; preds = %13, %23
  ret { i64, i64 } %21
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden { i64, i64 } @_ZNK3gpu31ClearTrackingSharedImageBacking19ClearedRectInternalEv(%"class.gpu::ClearTrackingSharedImageBacking"* nocapture readonly) local_unnamed_addr #7 align 2 {
  %2 = getelementptr inbounds %"class.gpu::ClearTrackingSharedImageBacking", %"class.gpu::ClearTrackingSharedImageBacking"* %0, i64 0, i32 1
  %3 = bitcast %"class.gfx::Rect"* %2 to i64*
  %4 = load i64, i64* %3, align 8
  %5 = getelementptr inbounds %"class.gpu::ClearTrackingSharedImageBacking", %"class.gpu::ClearTrackingSharedImageBacking"* %0, i64 0, i32 1, i32 1
  %6 = bitcast %"class.gfx::Size"* %5 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = insertvalue { i64, i64 } undef, i64 %4, 0
  %9 = insertvalue { i64, i64 } %8, i64 %7, 1
  ret { i64, i64 } %9
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3gpu31ClearTrackingSharedImageBacking14SetClearedRectERKN3gfx4RectE(%"class.gpu::ClearTrackingSharedImageBacking"*, %"class.gfx::Rect"* nocapture readonly dereferenceable(16)) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.gpu::ClearTrackingSharedImageBacking", %"class.gpu::ClearTrackingSharedImageBacking"* %0, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %4 = load i8, i8* %3, align 8, !range !2
  %5 = icmp eq i8 %4, 0
  %6 = getelementptr inbounds %"class.gpu::ClearTrackingSharedImageBacking", %"class.gpu::ClearTrackingSharedImageBacking"* %0, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 1, i32 0
  %7 = select i1 %5, %"class.base::Lock"* null, %"class.base::Lock"* %6
  br i1 %5, label %14, label %8

8:                                                ; preds = %2
  %9 = getelementptr inbounds %"class.base::Lock", %"class.base::Lock"* %7, i64 0, i32 0, i32 0
  %10 = tail call i32 @pthread_mutex_trylock(%union.pthread_mutex_t* %9) #14
  %11 = icmp eq i32 %10, 0
  br i1 %11, label %14, label %12, !prof !3

12:                                               ; preds = %8
  %13 = getelementptr inbounds %"class.base::Lock", %"class.base::Lock"* %7, i64 0, i32 0
  tail call void @_ZN4base8internal8LockImpl24LockInternalWithTrackingEv(%"class.base::internal::LockImpl"* %13) #14
  br label %14

14:                                               ; preds = %2, %8, %12
  %15 = getelementptr inbounds %"class.gpu::ClearTrackingSharedImageBacking", %"class.gpu::ClearTrackingSharedImageBacking"* %0, i64 0, i32 1
  %16 = bitcast %"class.gfx::Rect"* %15 to i8*
  %17 = bitcast %"class.gfx::Rect"* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %16, i8* align 4 %17, i64 16, i1 false) #14
  %18 = icmp eq %"class.base::Lock"* %7, null
  br i1 %18, label %22, label %19

19:                                               ; preds = %14
  %20 = getelementptr inbounds %"class.base::Lock", %"class.base::Lock"* %7, i64 0, i32 0, i32 0
  %21 = tail call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* %20) #14
  br label %22

22:                                               ; preds = %14, %19
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3gpu31ClearTrackingSharedImageBacking22SetClearedRectInternalERKN3gfx4RectE(%"class.gpu::ClearTrackingSharedImageBacking"* nocapture, %"class.gfx::Rect"* nocapture readonly dereferenceable(16)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.gpu::ClearTrackingSharedImageBacking", %"class.gpu::ClearTrackingSharedImageBacking"* %0, i64 0, i32 1
  %4 = bitcast %"class.gfx::Rect"* %3 to i8*
  %5 = bitcast %"class.gfx::Rect"* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %4, i8* align 4 %5, i64 16, i1 false)
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden %"class.gfx::NativePixmap"* @_ZN3gpu18SharedImageBacking15GetNativePixmapEv(%"class.gpu::SharedImageBacking"* nocapture readnone) unnamed_addr #4 align 2 {
  ret %"class.gfx::NativePixmap"* null
}

declare void @__cxa_pure_virtual() unnamed_addr

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3gpu18SharedImageBacking18MarkForDestructionEv(%"class.gpu::SharedImageBacking"*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3gpu18SharedImageBacking12OnMemoryDumpERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEPN4base11trace_event19MemoryAllocatorDumpEPNSB_17ProcessMemoryDumpEm(%"class.gpu::SharedImageBacking"*, %"class.std::__1::basic_string"* dereferenceable(24), %"class.base::trace_event::MemoryAllocatorDump"*, %"class.base::trace_event::ProcessMemoryDump"*, i64) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3gpu18SharedImageBackingD2Ev(%"class.gpu::SharedImageBacking"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.gpu::SharedImageBacking", %"class.gpu::SharedImageBacking"* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [21 x i8*] }, { [21 x i8*] }* @_ZTVN3gpu18SharedImageBackingE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.gpu::SharedImageBacking", %"class.gpu::SharedImageBacking"* %0, i64 0, i32 13, i32 0, i32 0
  %4 = load %"class.gpu::SharedImageRepresentation"**, %"class.gpu::SharedImageRepresentation"*** %3, align 8
  %5 = icmp eq %"class.gpu::SharedImageRepresentation"** %4, null
  br i1 %5, label %11, label %6

6:                                                ; preds = %1
  %7 = ptrtoint %"class.gpu::SharedImageRepresentation"** %4 to i64
  %8 = getelementptr inbounds %"class.gpu::SharedImageBacking", %"class.gpu::SharedImageBacking"* %0, i64 0, i32 13, i32 0, i32 1
  %9 = bitcast %"class.gpu::SharedImageRepresentation"*** %8 to i64*
  store i64 %7, i64* %9, align 8
  %10 = bitcast %"class.gpu::SharedImageRepresentation"** %4 to i8*
  tail call void @_ZdlPv(i8* %10) #16
  br label %11

11:                                               ; preds = %1, %6
  %12 = getelementptr inbounds %"class.gpu::SharedImageBacking", %"class.gpu::SharedImageBacking"* %0, i64 0, i32 12, i32 0, i32 0, i32 0, i32 0
  %13 = load i8, i8* %12, align 1, !range !2
  %14 = icmp eq i8 %13, 0
  br i1 %14, label %27, label %15

15:                                               ; preds = %11
  %16 = load atomic i64, i64* getelementptr inbounds (%"struct.std::__1::atomic.273", %"struct.std::__1::atomic.273"* @_ZZN3gpu18SharedImageBacking14ScopedWriteUMAD1EvE24atomic_histogram_pointer, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0) acquire, align 8
  %17 = inttoptr i64 %16 to %"class.base::HistogramBase"*
  %18 = icmp eq i64 %16, 0
  br i1 %18, label %19, label %22

19:                                               ; preds = %15
  %20 = tail call %"class.base::HistogramBase"* @_ZN4base16BooleanHistogram10FactoryGetEPKci(i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str, i64 0, i64 0), i32 1) #14
  %21 = ptrtoint %"class.base::HistogramBase"* %20 to i64
  store atomic i64 %21, i64* getelementptr inbounds (%"struct.std::__1::atomic.273", %"struct.std::__1::atomic.273"* @_ZZN3gpu18SharedImageBacking14ScopedWriteUMAD1EvE24atomic_histogram_pointer, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0) release, align 8
  br label %22

22:                                               ; preds = %19, %15
  %23 = phi %"class.base::HistogramBase"* [ %17, %15 ], [ %20, %19 ]
  %24 = getelementptr inbounds %"class.gpu::SharedImageBacking", %"class.gpu::SharedImageBacking"* %0, i64 0, i32 12, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %25 = load i8, i8* %24, align 1, !range !2
  %26 = icmp ne i8 %25, 0
  tail call void @_ZN4base13HistogramBase10AddBooleanEb(%"class.base::HistogramBase"* %23, i1 zeroext %26) #14
  store i8 0, i8* %12, align 1
  br label %27

27:                                               ; preds = %11, %22
  %28 = getelementptr inbounds %"class.gpu::SharedImageBacking", %"class.gpu::SharedImageBacking"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %29 = load i8, i8* %28, align 8, !range !2
  %30 = icmp eq i8 %29, 0
  br i1 %30, label %33, label %31

31:                                               ; preds = %27
  %32 = getelementptr inbounds %"class.gpu::SharedImageBacking", %"class.gpu::SharedImageBacking"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0
  tail call void @_ZN4base8internal8LockImplD1Ev(%"class.base::internal::LockImpl"* %32) #14
  store i8 0, i8* %28, align 8
  br label %33

33:                                               ; preds = %27, %31
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3gpu31ClearTrackingSharedImageBackingD0Ev(%"class.gpu::ClearTrackingSharedImageBacking"*) unnamed_addr #8 comdat align 2 {
  tail call void @llvm.trap() #15
  unreachable
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

declare %"class.base::HistogramBase"* @_ZN4base16BooleanHistogram10FactoryGetEPKci(i8*, i32) local_unnamed_addr #5

declare void @_ZN4base13HistogramBase10AddBooleanEb(%"class.base::HistogramBase"*, i1 zeroext) local_unnamed_addr #5

; Function Attrs: nounwind
declare void @_ZN4base8internal8LockImplD1Ev(%"class.base::internal::LockImpl"*) unnamed_addr #9

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #10

declare void @_ZN4base8internal8LockImplC1Ev(%"class.base::internal::LockImpl"*) unnamed_addr #5

declare void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"*) local_unnamed_addr #5

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #11

; Function Attrs: noreturn nounwind
declare void @abort() local_unnamed_addr #12

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #13

; Function Attrs: argmemonly nounwind
declare void @llvm.memmove.p0i8.p0i8.i64(i8* nocapture, i8* nocapture readonly, i64, i1 immarg) #1

declare void @_ZN4base8internal8LockImpl24LockInternalWithTrackingEv(%"class.base::internal::LockImpl"*) local_unnamed_addr #5

; Function Attrs: nounwind
declare i32 @pthread_mutex_trylock(%union.pthread_mutex_t*) local_unnamed_addr #9

; Function Attrs: nounwind
declare i32 @pthread_mutex_unlock(%union.pthread_mutex_t*) local_unnamed_addr #9

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { noreturn nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { cold noreturn nounwind }
attributes #4 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #11 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #12 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #13 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #14 = { nounwind }
attributes #15 = { noreturn nounwind }
attributes #16 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
!3 = !{!"branch_weights", i32 2000, i32 1}
