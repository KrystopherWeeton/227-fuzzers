; ModuleID = '../../net/cert/internal/verify_name_match.cc'
source_filename = "../../net/cert/internal/verify_name_match.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.net::der::Input" = type { i8*, i64 }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.net::CertErrors" = type { %"class.std::__1::vector" }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"struct.net::CertError"*, %"struct.net::CertError"*, %"class.std::__1::__compressed_pair.4" }
%"struct.net::CertError" = type { i32, i8*, %"class.std::__1::unique_ptr" }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair.1" }
%"class.std::__1::__compressed_pair.1" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"struct.std::__1::__compressed_pair_elem.2" = type { %"class.net::CertErrorParams"* }
%"class.net::CertErrorParams" = type { i32 (...)** }
%"class.std::__1::__compressed_pair.4" = type { %"struct.std::__1::__compressed_pair_elem.5" }
%"struct.std::__1::__compressed_pair_elem.5" = type { %"struct.net::CertError"* }
%"class.net::der::Parser" = type { %struct.cbs_st, i64 }
%struct.cbs_st = type { i8*, i64 }
%"class.bssl::internal::StackAllocated" = type { %struct.cbb_st }
%struct.cbb_st = type { %struct.cbb_buffer_st*, %struct.cbb_st*, i64, i8, i8, i8 }
%struct.cbb_buffer_st = type { i8*, i64, i64, i8, i8 }
%"class.std::__1::vector.9" = type { %"class.std::__1::__vector_base.10" }
%"class.std::__1::__vector_base.10" = type { %"struct.net::X509NameAttribute"*, %"struct.net::X509NameAttribute"*, %"class.std::__1::__compressed_pair.11" }
%"struct.net::X509NameAttribute" = type { %"class.net::der::Input", i32, %"class.net::der::Input" }
%"class.std::__1::__compressed_pair.11" = type { %"struct.std::__1::__compressed_pair_elem.12" }
%"struct.std::__1::__compressed_pair_elem.12" = type { %"struct.net::X509NameAttribute"* }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }
%"class.std::__1::__basic_string_common" = type { i8 }

@_ZN3net12_GLOBAL__N_116kOidEmailAddressE = internal constant [9 x i8] c"*\86H\86\F7\0D\01\09\01", align 1
@.str = private unnamed_addr constant [43 x i8] c"Failed converting AttributeValue to string\00", align 1
@.str.1 = private unnamed_addr constant [4 x i8] c"tag\00", align 1
@.str.2 = private unnamed_addr constant [26 x i8] c"Failed normalizing string\00", align 1

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN3net13NormalizeNameERKNS_3der5InputEPNSt3__112basic_stringIcNS4_11char_traitsIcEENS4_9allocatorIcEEEEPNS_10CertErrorsE(%"class.net::der::Input"* dereferenceable(16), %"class.std::__1::basic_string"*, %"class.net::CertErrors"*) local_unnamed_addr #0 {
  %4 = alloca %"class.net::der::Parser", align 8
  %5 = alloca %"class.bssl::internal::StackAllocated", align 8
  %6 = alloca %"class.net::der::Parser", align 8
  %7 = alloca %"class.std::__1::vector.9", align 8
  %8 = alloca %struct.cbb_st, align 8
  %9 = alloca %struct.cbb_st, align 8
  %10 = alloca %struct.cbb_st, align 8
  %11 = alloca %struct.cbb_st, align 8
  %12 = alloca %"class.std::__1::basic_string", align 8
  %13 = bitcast %"class.net::der::Parser"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %13) #7
  %14 = bitcast %"class.net::der::Parser"* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %14, i8 -86, i64 24, i1 false)
  call void @_ZN3net3der6ParserC1ERKNS0_5InputE(%"class.net::der::Parser"* nonnull %4, %"class.net::der::Input"* dereferenceable(16) %0) #7
  %15 = bitcast %"class.bssl::internal::StackAllocated"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %15) #7
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %15, i8 -86, i64 32, i1 false)
  %16 = getelementptr inbounds %"class.bssl::internal::StackAllocated", %"class.bssl::internal::StackAllocated"* %5, i64 0, i32 0
  call void @CBB_zero(%struct.cbb_st* nonnull %16) #7
  %17 = call i32 @CBB_init(%struct.cbb_st* nonnull %16, i64 0) #7
  %18 = icmp eq i32 %17, 0
  br i1 %18, label %281, label %19

19:                                               ; preds = %3
  %20 = bitcast %"class.net::der::Parser"* %6 to i8*
  %21 = bitcast %"class.std::__1::vector.9"* %7 to i8*
  %22 = getelementptr inbounds %"class.std::__1::vector.9", %"class.std::__1::vector.9"* %7, i64 0, i32 0, i32 0
  %23 = getelementptr inbounds %"class.std::__1::vector.9", %"class.std::__1::vector.9"* %7, i64 0, i32 0, i32 1
  %24 = bitcast %struct.cbb_st* %8 to i8*
  %25 = bitcast %struct.cbb_st* %9 to i8*
  %26 = bitcast %struct.cbb_st* %10 to i8*
  %27 = bitcast %struct.cbb_st* %11 to i8*
  %28 = bitcast %"class.std::__1::basic_string"* %12 to i8*
  %29 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %12, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %30 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %12, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %31 = bitcast %"class.std::__1::basic_string"* %12 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %32 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %31, i64 0, i32 1, i32 0
  %33 = bitcast %"struct.net::X509NameAttribute"** %23 to i64*
  %34 = bitcast %"class.net::der::Parser"* %6 to i8*
  br label %35

35:                                               ; preds = %19, %126
  %36 = call zeroext i1 @_ZN3net3der6Parser7HasMoreEv(%"class.net::der::Parser"* nonnull %4) #7
  br i1 %36, label %37, label %128

37:                                               ; preds = %35
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %20) #7
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %34, i8 -86, i64 24, i1 false)
  call void @_ZN3net3der6ParserC1Ev(%"class.net::der::Parser"* nonnull %6) #7
  %38 = call zeroext i1 @_ZN3net3der6Parser15ReadConstructedEjPS1_(%"class.net::der::Parser"* nonnull %4, i32 536870929, %"class.net::der::Parser"* nonnull %6) #7
  br i1 %38, label %40, label %39

39:                                               ; preds = %37
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %20) #7
  br label %281

40:                                               ; preds = %37
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %21) #7
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %21, i8 0, i64 24, i1 false) #7
  %41 = call zeroext i1 @_ZN3net7ReadRdnEPNS_3der6ParserEPNSt3__16vectorINS_17X509NameAttributeENS3_9allocatorIS5_EEEE(%"class.net::der::Parser"* nonnull %6, %"class.std::__1::vector.9"* nonnull %7) #7
  br i1 %41, label %42, label %119

42:                                               ; preds = %40
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %24) #7
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %24, i8 -86, i64 32, i1 false)
  %43 = call i32 @CBB_add_asn1(%struct.cbb_st* nonnull %16, %struct.cbb_st* nonnull %8, i32 536870929) #7
  %44 = icmp eq i32 %43, 0
  br i1 %44, label %117, label %45

45:                                               ; preds = %42
  %46 = load %"struct.net::X509NameAttribute"*, %"struct.net::X509NameAttribute"** %22, align 8
  %47 = load %"struct.net::X509NameAttribute"*, %"struct.net::X509NameAttribute"** %23, align 8
  %48 = icmp eq %"struct.net::X509NameAttribute"* %46, %47
  br i1 %48, label %110, label %51

49:                                               ; preds = %106
  %50 = icmp eq %"struct.net::X509NameAttribute"* %109, %47
  br i1 %50, label %110, label %51

51:                                               ; preds = %45, %49
  %52 = phi %"struct.net::X509NameAttribute"* [ %109, %49 ], [ %46, %45 ]
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %25) #7
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %25, i8 -86, i64 32, i1 false)
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %26) #7
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %26, i8 -86, i64 32, i1 false)
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %27) #7
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %27, i8 -86, i64 32, i1 false)
  %53 = call i32 @CBB_add_asn1(%struct.cbb_st* nonnull %8, %struct.cbb_st* nonnull %9, i32 536870928) #7
  %54 = icmp eq i32 %53, 0
  br i1 %54, label %106, label %55

55:                                               ; preds = %51
  %56 = call i32 @CBB_add_asn1(%struct.cbb_st* nonnull %9, %struct.cbb_st* nonnull %10, i32 6) #7
  %57 = icmp eq i32 %56, 0
  br i1 %57, label %106, label %58

58:                                               ; preds = %55
  %59 = getelementptr inbounds %"struct.net::X509NameAttribute", %"struct.net::X509NameAttribute"* %52, i64 0, i32 0, i32 0
  %60 = load i8*, i8** %59, align 8
  %61 = getelementptr inbounds %"struct.net::X509NameAttribute", %"struct.net::X509NameAttribute"* %52, i64 0, i32 0, i32 1
  %62 = load i64, i64* %61, align 8
  %63 = call i32 @CBB_add_bytes(%struct.cbb_st* nonnull %10, i8* %60, i64 %62) #7
  %64 = icmp eq i32 %63, 0
  br i1 %64, label %106, label %65

65:                                               ; preds = %58
  %66 = getelementptr inbounds %"struct.net::X509NameAttribute", %"struct.net::X509NameAttribute"* %52, i64 0, i32 1
  %67 = load i32, i32* %66, align 8
  switch i32 %67, label %92 [
    i32 19, label %68
    i32 12, label %68
    i32 22, label %68
    i32 28, label %68
    i32 30, label %68
  ]

68:                                               ; preds = %65, %65, %65, %65, %65
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %28) #7
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %28, i8 0, i64 24, i1 false) #7
  %69 = call fastcc zeroext i1 @_ZN3net12_GLOBAL__N_114NormalizeValueENS_17X509NameAttributeEPNSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEEPNS_10CertErrorsE(%"struct.net::X509NameAttribute"* nonnull byval(%"struct.net::X509NameAttribute") align 8 %52, %"class.std::__1::basic_string"* nonnull %12, %"class.net::CertErrors"* %2)
  br i1 %69, label %70, label %84

70:                                               ; preds = %68
  %71 = call i32 @CBB_add_asn1(%struct.cbb_st* nonnull %9, %struct.cbb_st* nonnull %11, i32 12) #7
  %72 = icmp eq i32 %71, 0
  br i1 %72, label %84, label %73

73:                                               ; preds = %70
  %74 = load i8, i8* %32, align 1
  %75 = icmp slt i8 %74, 0
  %76 = load i8*, i8** %29, align 8
  %77 = load i64, i64* %30, align 8
  %78 = zext i8 %74 to i64
  %79 = select i1 %75, i8* %76, i8* %28
  %80 = select i1 %75, i64 %77, i64 %78
  %81 = call i32 @CBB_add_bytes(%struct.cbb_st* nonnull %11, i8* %79, i64 %80) #7
  %82 = icmp eq i32 %81, 0
  %83 = zext i1 %82 to i32
  br label %84

84:                                               ; preds = %73, %70, %68
  %85 = phi i32 [ 1, %68 ], [ 1, %70 ], [ %83, %73 ]
  %86 = load i8, i8* %32, align 1
  %87 = icmp slt i8 %86, 0
  br i1 %87, label %88, label %90

88:                                               ; preds = %84
  %89 = load i8*, i8** %29, align 8
  call void @_ZdlPv(i8* %89) #8
  br label %90

90:                                               ; preds = %84, %88
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %28) #7
  %91 = icmp eq i32 %85, 0
  br i1 %91, label %102, label %106

92:                                               ; preds = %65
  %93 = call i32 @CBB_add_asn1(%struct.cbb_st* nonnull %9, %struct.cbb_st* nonnull %11, i32 %67) #7
  %94 = icmp eq i32 %93, 0
  br i1 %94, label %106, label %95

95:                                               ; preds = %92
  %96 = getelementptr inbounds %"struct.net::X509NameAttribute", %"struct.net::X509NameAttribute"* %52, i64 0, i32 2, i32 0
  %97 = load i8*, i8** %96, align 8
  %98 = getelementptr inbounds %"struct.net::X509NameAttribute", %"struct.net::X509NameAttribute"* %52, i64 0, i32 2, i32 1
  %99 = load i64, i64* %98, align 8
  %100 = call i32 @CBB_add_bytes(%struct.cbb_st* nonnull %11, i8* %97, i64 %99) #7
  %101 = icmp eq i32 %100, 0
  br i1 %101, label %106, label %102

102:                                              ; preds = %95, %90
  %103 = call i32 @CBB_flush(%struct.cbb_st* nonnull %8) #7
  %104 = icmp eq i32 %103, 0
  %105 = zext i1 %104 to i32
  br label %106

106:                                              ; preds = %102, %92, %95, %55, %58, %51, %90
  %107 = phi i32 [ 1, %90 ], [ 1, %51 ], [ 1, %58 ], [ 1, %55 ], [ 1, %95 ], [ 1, %92 ], [ %105, %102 ]
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %27) #7
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %26) #7
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %25) #7
  %108 = icmp eq i32 %107, 0
  %109 = getelementptr inbounds %"struct.net::X509NameAttribute", %"struct.net::X509NameAttribute"* %52, i64 1
  br i1 %108, label %49, label %117

110:                                              ; preds = %49, %45
  %111 = call i32 @CBB_flush_asn1_set_of(%struct.cbb_st* nonnull %8) #7
  %112 = icmp eq i32 %111, 0
  br i1 %112, label %117, label %113

113:                                              ; preds = %110
  %114 = call i32 @CBB_flush(%struct.cbb_st* nonnull %16) #7
  %115 = icmp eq i32 %114, 0
  %116 = zext i1 %115 to i32
  br label %117

117:                                              ; preds = %106, %113, %110, %42
  %118 = phi i32 [ 1, %42 ], [ 1, %110 ], [ %116, %113 ], [ 1, %106 ]
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %24) #7
  br label %119

119:                                              ; preds = %40, %117
  %120 = phi i32 [ %118, %117 ], [ 1, %40 ]
  %121 = load %"struct.net::X509NameAttribute"*, %"struct.net::X509NameAttribute"** %22, align 8
  %122 = icmp eq %"struct.net::X509NameAttribute"* %121, null
  br i1 %122, label %126, label %123

123:                                              ; preds = %119
  %124 = ptrtoint %"struct.net::X509NameAttribute"* %121 to i64
  store i64 %124, i64* %33, align 8
  %125 = bitcast %"struct.net::X509NameAttribute"* %121 to i8*
  call void @_ZdlPv(i8* %125) #8
  br label %126

126:                                              ; preds = %123, %119
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %21) #7
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %20) #7
  %127 = icmp eq i32 %120, 0
  br i1 %127, label %35, label %281

128:                                              ; preds = %35
  %129 = call i8* @CBB_data(%struct.cbb_st* nonnull %16) #7
  %130 = ptrtoint i8* %129 to i64
  %131 = call i8* @CBB_data(%struct.cbb_st* nonnull %16) #7
  %132 = call i64 @CBB_len(%struct.cbb_st* nonnull %16) #7
  %133 = getelementptr inbounds i8, i8* %131, i64 %132
  %134 = ptrtoint i8* %133 to i64
  %135 = sub i64 %134, %130
  %136 = bitcast %"class.std::__1::basic_string"* %1 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %137 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %136, i64 0, i32 1, i32 0
  %138 = load i8, i8* %137, align 1
  %139 = icmp slt i8 %138, 0
  br i1 %139, label %140, label %145

140:                                              ; preds = %128
  %141 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %142 = load i64, i64* %141, align 8
  %143 = and i64 %142, 9223372036854775807
  %144 = add nsw i64 %143, -1
  br label %145

145:                                              ; preds = %140, %128
  %146 = phi i64 [ %144, %140 ], [ 22, %128 ]
  %147 = icmp ugt i64 %135, %146
  br i1 %147, label %148, label %158

148:                                              ; preds = %145
  br i1 %139, label %149, label %152

149:                                              ; preds = %148
  %150 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %151 = load i64, i64* %150, align 8
  br label %154

152:                                              ; preds = %148
  %153 = zext i8 %138 to i64
  br label %154

154:                                              ; preds = %152, %149
  %155 = phi i64 [ %151, %149 ], [ %153, %152 ]
  %156 = sub i64 %135, %146
  call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE9__grow_byEmmmmmm(%"class.std::__1::basic_string"* %1, i64 %146, i64 %156, i64 %155, i64 0, i64 %155, i64 0) #7
  %157 = load i8, i8* %137, align 1
  br label %158

158:                                              ; preds = %154, %145
  %159 = phi i8 [ %138, %145 ], [ %157, %154 ]
  %160 = icmp slt i8 %159, 0
  br i1 %160, label %161, label %164

161:                                              ; preds = %158
  %162 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %163 = load i8*, i8** %162, align 8
  br label %166

164:                                              ; preds = %158
  %165 = bitcast %"class.std::__1::basic_string"* %1 to i8*
  br label %166

166:                                              ; preds = %164, %161
  %167 = phi i8* [ %163, %161 ], [ %165, %164 ]
  %168 = icmp eq i8* %129, %133
  br i1 %168, label %273, label %169

169:                                              ; preds = %166
  %170 = sub i64 %132, %130
  %171 = getelementptr i8, i8* %131, i64 %170
  %172 = ptrtoint i8* %171 to i64
  %173 = icmp ult i8* %171, inttoptr (i64 32 to i8*)
  br i1 %173, label %263, label %174

174:                                              ; preds = %169
  %175 = sub i64 %132, %130
  %176 = getelementptr i8, i8* %167, i64 %175
  %177 = ptrtoint i8* %176 to i64
  %178 = getelementptr i8, i8* %131, i64 %177
  %179 = icmp ult i8* %167, %133
  %180 = icmp ult i8* %129, %178
  %181 = and i1 %179, %180
  br i1 %181, label %263, label %182

182:                                              ; preds = %174
  %183 = and i64 %172, -32
  %184 = getelementptr i8, i8* %167, i64 %183
  %185 = getelementptr i8, i8* %129, i64 %183
  %186 = add i64 %183, -32
  %187 = lshr exact i64 %186, 5
  %188 = add nuw nsw i64 %187, 1
  %189 = and i64 %188, 3
  %190 = icmp ult i64 %186, 96
  br i1 %190, label %242, label %191

191:                                              ; preds = %182
  %192 = sub nsw i64 %188, %189
  br label %193

193:                                              ; preds = %193, %191
  %194 = phi i64 [ 0, %191 ], [ %239, %193 ]
  %195 = phi i64 [ %192, %191 ], [ %240, %193 ]
  %196 = getelementptr i8, i8* %167, i64 %194
  %197 = getelementptr i8, i8* %129, i64 %194
  %198 = bitcast i8* %197 to <16 x i8>*
  %199 = load <16 x i8>, <16 x i8>* %198, align 1, !alias.scope !2
  %200 = getelementptr i8, i8* %197, i64 16
  %201 = bitcast i8* %200 to <16 x i8>*
  %202 = load <16 x i8>, <16 x i8>* %201, align 1, !alias.scope !2
  %203 = bitcast i8* %196 to <16 x i8>*
  store <16 x i8> %199, <16 x i8>* %203, align 1, !alias.scope !5, !noalias !2
  %204 = getelementptr i8, i8* %196, i64 16
  %205 = bitcast i8* %204 to <16 x i8>*
  store <16 x i8> %202, <16 x i8>* %205, align 1, !alias.scope !5, !noalias !2
  %206 = or i64 %194, 32
  %207 = getelementptr i8, i8* %167, i64 %206
  %208 = getelementptr i8, i8* %129, i64 %206
  %209 = bitcast i8* %208 to <16 x i8>*
  %210 = load <16 x i8>, <16 x i8>* %209, align 1, !alias.scope !2
  %211 = getelementptr i8, i8* %208, i64 16
  %212 = bitcast i8* %211 to <16 x i8>*
  %213 = load <16 x i8>, <16 x i8>* %212, align 1, !alias.scope !2
  %214 = bitcast i8* %207 to <16 x i8>*
  store <16 x i8> %210, <16 x i8>* %214, align 1, !alias.scope !5, !noalias !2
  %215 = getelementptr i8, i8* %207, i64 16
  %216 = bitcast i8* %215 to <16 x i8>*
  store <16 x i8> %213, <16 x i8>* %216, align 1, !alias.scope !5, !noalias !2
  %217 = or i64 %194, 64
  %218 = getelementptr i8, i8* %167, i64 %217
  %219 = getelementptr i8, i8* %129, i64 %217
  %220 = bitcast i8* %219 to <16 x i8>*
  %221 = load <16 x i8>, <16 x i8>* %220, align 1, !alias.scope !2
  %222 = getelementptr i8, i8* %219, i64 16
  %223 = bitcast i8* %222 to <16 x i8>*
  %224 = load <16 x i8>, <16 x i8>* %223, align 1, !alias.scope !2
  %225 = bitcast i8* %218 to <16 x i8>*
  store <16 x i8> %221, <16 x i8>* %225, align 1, !alias.scope !5, !noalias !2
  %226 = getelementptr i8, i8* %218, i64 16
  %227 = bitcast i8* %226 to <16 x i8>*
  store <16 x i8> %224, <16 x i8>* %227, align 1, !alias.scope !5, !noalias !2
  %228 = or i64 %194, 96
  %229 = getelementptr i8, i8* %167, i64 %228
  %230 = getelementptr i8, i8* %129, i64 %228
  %231 = bitcast i8* %230 to <16 x i8>*
  %232 = load <16 x i8>, <16 x i8>* %231, align 1, !alias.scope !2
  %233 = getelementptr i8, i8* %230, i64 16
  %234 = bitcast i8* %233 to <16 x i8>*
  %235 = load <16 x i8>, <16 x i8>* %234, align 1, !alias.scope !2
  %236 = bitcast i8* %229 to <16 x i8>*
  store <16 x i8> %232, <16 x i8>* %236, align 1, !alias.scope !5, !noalias !2
  %237 = getelementptr i8, i8* %229, i64 16
  %238 = bitcast i8* %237 to <16 x i8>*
  store <16 x i8> %235, <16 x i8>* %238, align 1, !alias.scope !5, !noalias !2
  %239 = add i64 %194, 128
  %240 = add i64 %195, -4
  %241 = icmp eq i64 %240, 0
  br i1 %241, label %242, label %193, !llvm.loop !7

242:                                              ; preds = %193, %182
  %243 = phi i64 [ 0, %182 ], [ %239, %193 ]
  %244 = icmp eq i64 %189, 0
  br i1 %244, label %261, label %245

245:                                              ; preds = %242, %245
  %246 = phi i64 [ %258, %245 ], [ %243, %242 ]
  %247 = phi i64 [ %259, %245 ], [ %189, %242 ]
  %248 = getelementptr i8, i8* %167, i64 %246
  %249 = getelementptr i8, i8* %129, i64 %246
  %250 = bitcast i8* %249 to <16 x i8>*
  %251 = load <16 x i8>, <16 x i8>* %250, align 1, !alias.scope !2
  %252 = getelementptr i8, i8* %249, i64 16
  %253 = bitcast i8* %252 to <16 x i8>*
  %254 = load <16 x i8>, <16 x i8>* %253, align 1, !alias.scope !2
  %255 = bitcast i8* %248 to <16 x i8>*
  store <16 x i8> %251, <16 x i8>* %255, align 1, !alias.scope !5, !noalias !2
  %256 = getelementptr i8, i8* %248, i64 16
  %257 = bitcast i8* %256 to <16 x i8>*
  store <16 x i8> %254, <16 x i8>* %257, align 1, !alias.scope !5, !noalias !2
  %258 = add i64 %246, 32
  %259 = add i64 %247, -1
  %260 = icmp eq i64 %259, 0
  br i1 %260, label %261, label %245, !llvm.loop !9

261:                                              ; preds = %245, %242
  %262 = icmp eq i64 %183, %172
  br i1 %262, label %273, label %263

263:                                              ; preds = %261, %174, %169
  %264 = phi i8* [ %167, %174 ], [ %167, %169 ], [ %184, %261 ]
  %265 = phi i8* [ %129, %174 ], [ %129, %169 ], [ %185, %261 ]
  br label %266

266:                                              ; preds = %263, %266
  %267 = phi i8* [ %271, %266 ], [ %264, %263 ]
  %268 = phi i8* [ %270, %266 ], [ %265, %263 ]
  %269 = load i8, i8* %268, align 1
  store i8 %269, i8* %267, align 1
  %270 = getelementptr inbounds i8, i8* %268, i64 1
  %271 = getelementptr inbounds i8, i8* %267, i64 1
  %272 = icmp eq i8* %270, %133
  br i1 %272, label %273, label %266, !llvm.loop !11

273:                                              ; preds = %266, %261, %166
  %274 = phi i8* [ %167, %166 ], [ %184, %261 ], [ %271, %266 ]
  store i8 0, i8* %274, align 1
  %275 = load i8, i8* %137, align 1
  %276 = icmp slt i8 %275, 0
  br i1 %276, label %277, label %279

277:                                              ; preds = %273
  %278 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %135, i64* %278, align 8
  br label %281

279:                                              ; preds = %273
  %280 = trunc i64 %135 to i8
  store i8 %280, i8* %137, align 1
  br label %281

281:                                              ; preds = %126, %279, %277, %39, %3
  %282 = phi i1 [ false, %3 ], [ false, %39 ], [ true, %277 ], [ true, %279 ], [ false, %126 ]
  call void @CBB_cleanup(%struct.cbb_st* nonnull %16) #7
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %15) #7
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %13) #7
  ret i1 %282
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

declare void @_ZN3net3der6ParserC1ERKNS0_5InputE(%"class.net::der::Parser"*, %"class.net::der::Input"* dereferenceable(16)) unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

declare i32 @CBB_init(%struct.cbb_st*, i64) local_unnamed_addr #2

declare zeroext i1 @_ZN3net3der6Parser7HasMoreEv(%"class.net::der::Parser"*) local_unnamed_addr #2

declare void @_ZN3net3der6ParserC1Ev(%"class.net::der::Parser"*) unnamed_addr #2

declare zeroext i1 @_ZN3net3der6Parser15ReadConstructedEjPS1_(%"class.net::der::Parser"*, i32, %"class.net::der::Parser"*) local_unnamed_addr #2

declare zeroext i1 @_ZN3net7ReadRdnEPNS_3der6ParserEPNSt3__16vectorINS_17X509NameAttributeENS3_9allocatorIS5_EEEE(%"class.net::der::Parser"*, %"class.std::__1::vector.9"*) local_unnamed_addr #2

declare i32 @CBB_add_asn1(%struct.cbb_st*, %struct.cbb_st*, i32) local_unnamed_addr #2

declare i32 @CBB_add_bytes(%struct.cbb_st*, i8*, i64) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define internal fastcc zeroext i1 @_ZN3net12_GLOBAL__N_114NormalizeValueENS_17X509NameAttributeEPNSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEEPNS_10CertErrorsE(%"struct.net::X509NameAttribute"* byval(%"struct.net::X509NameAttribute") align 8, %"class.std::__1::basic_string"*, %"class.net::CertErrors"*) unnamed_addr #0 {
  %4 = call zeroext i1 @_ZNK3net17X509NameAttribute19ValueAsStringUnsafeEPNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"struct.net::X509NameAttribute"* nonnull %0, %"class.std::__1::basic_string"* %1) #7
  %5 = getelementptr inbounds %"struct.net::X509NameAttribute", %"struct.net::X509NameAttribute"* %0, i64 0, i32 1
  %6 = load i32, i32* %5, align 8
  br i1 %4, label %10, label %7

7:                                                ; preds = %3
  %8 = zext i32 %6 to i64
  %9 = call %"class.net::CertErrorParams"* @_ZN3net27CreateCertErrorParams1SizeTEPKcm(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.1, i64 0, i64 0), i64 %8) #7
  call void @_ZN3net10CertErrors8AddErrorEPKvNSt3__110unique_ptrINS_15CertErrorParamsENS3_14default_deleteIS5_EEEE(%"class.net::CertErrors"* %2, i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str, i64 0, i64 0), %"class.net::CertErrorParams"* %9) #7
  br label %21

10:                                               ; preds = %3
  switch i32 %6, label %17 [
    i32 19, label %15
    i32 30, label %11
    i32 28, label %11
    i32 12, label %11
    i32 22, label %13
  ]

11:                                               ; preds = %10, %10, %10
  %12 = call fastcc zeroext i1 @_ZN3net12_GLOBAL__N_124NormalizeDirectoryStringENS0_18CharsetEnforcementEPNSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEE(i32 0, %"class.std::__1::basic_string"* %1)
  br i1 %12, label %21, label %17

13:                                               ; preds = %10
  %14 = call fastcc zeroext i1 @_ZN3net12_GLOBAL__N_124NormalizeDirectoryStringENS0_18CharsetEnforcementEPNSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEE(i32 2, %"class.std::__1::basic_string"* %1)
  br i1 %14, label %21, label %17

15:                                               ; preds = %10
  %16 = call fastcc zeroext i1 @_ZN3net12_GLOBAL__N_124NormalizeDirectoryStringENS0_18CharsetEnforcementEPNSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEE(i32 1, %"class.std::__1::basic_string"* %1)
  br i1 %16, label %21, label %17

17:                                               ; preds = %10, %11, %13, %15
  %18 = load i32, i32* %5, align 8
  %19 = zext i32 %18 to i64
  %20 = call %"class.net::CertErrorParams"* @_ZN3net27CreateCertErrorParams1SizeTEPKcm(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.1, i64 0, i64 0), i64 %19) #7
  call void @_ZN3net10CertErrors8AddErrorEPKvNSt3__110unique_ptrINS_15CertErrorParamsENS3_14default_deleteIS5_EEEE(%"class.net::CertErrors"* %2, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.2, i64 0, i64 0), %"class.net::CertErrorParams"* %20) #7
  br label %21

21:                                               ; preds = %11, %13, %15, %17, %7
  %22 = phi i1 [ false, %7 ], [ false, %17 ], [ true, %15 ], [ true, %13 ], [ true, %11 ]
  ret i1 %22
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

declare i32 @CBB_flush(%struct.cbb_st*) local_unnamed_addr #2

declare i32 @CBB_flush_asn1_set_of(%struct.cbb_st*) local_unnamed_addr #2

declare i8* @CBB_data(%struct.cbb_st*) local_unnamed_addr #2

declare i64 @CBB_len(%struct.cbb_st*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN3net15VerifyNameMatchERKNS_3der5InputES3_(%"class.net::der::Input"* dereferenceable(16), %"class.net::der::Input"* dereferenceable(16)) local_unnamed_addr #0 {
  %3 = tail call fastcc zeroext i1 @_ZN3net12_GLOBAL__N_123VerifyNameMatchInternalERKNS_3der5InputES4_NS0_13NameMatchTypeE(%"class.net::der::Input"* dereferenceable(16) %0, %"class.net::der::Input"* dereferenceable(16) %1, i32 0)
  ret i1 %3
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc zeroext i1 @_ZN3net12_GLOBAL__N_123VerifyNameMatchInternalERKNS_3der5InputES4_NS0_13NameMatchTypeE(%"class.net::der::Input"* dereferenceable(16), %"class.net::der::Input"* dereferenceable(16), i32) unnamed_addr #0 {
  %4 = alloca %"class.std::__1::basic_string", align 8
  %5 = alloca %"class.std::__1::basic_string", align 8
  %6 = alloca %"class.net::CertErrors", align 8
  %7 = alloca %"struct.net::X509NameAttribute", align 8
  %8 = alloca %"struct.net::X509NameAttribute", align 8
  %9 = alloca %"class.std::__1::vector.9", align 8
  %10 = alloca %"class.std::__1::vector.9", align 8
  %11 = alloca %"struct.net::X509NameAttribute", align 8
  %12 = alloca %"class.net::der::Parser", align 8
  %13 = alloca %"class.net::der::Parser", align 8
  %14 = alloca %"class.net::der::Parser", align 8
  %15 = alloca %"class.net::der::Parser", align 8
  %16 = alloca %"class.net::der::Parser", align 8
  %17 = alloca %"class.net::der::Parser", align 8
  %18 = bitcast %"class.net::der::Parser"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %18) #7
  %19 = bitcast %"class.net::der::Parser"* %12 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %19, i8 -86, i64 24, i1 false)
  call void @_ZN3net3der6ParserC1ERKNS0_5InputE(%"class.net::der::Parser"* nonnull %12, %"class.net::der::Input"* dereferenceable(16) %0) #7
  %20 = bitcast %"class.net::der::Parser"* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %20) #7
  %21 = bitcast %"class.net::der::Parser"* %13 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %21, i8 -86, i64 24, i1 false)
  call void @_ZN3net3der6ParserC1ERKNS0_5InputE(%"class.net::der::Parser"* nonnull %13, %"class.net::der::Input"* dereferenceable(16) %1) #7
  br label %22

22:                                               ; preds = %28, %3
  %23 = call zeroext i1 @_ZN3net3der6Parser7HasMoreEv(%"class.net::der::Parser"* nonnull %12) #7
  br i1 %23, label %24, label %30

24:                                               ; preds = %22
  %25 = call zeroext i1 @_ZN3net3der6Parser7HasMoreEv(%"class.net::der::Parser"* nonnull %13) #7
  br i1 %25, label %26, label %30

26:                                               ; preds = %24
  %27 = call zeroext i1 @_ZN3net3der6Parser7SkipTagEj(%"class.net::der::Parser"* nonnull %12, i32 536870929) #7
  br i1 %27, label %28, label %225

28:                                               ; preds = %26
  %29 = call zeroext i1 @_ZN3net3der6Parser7SkipTagEj(%"class.net::der::Parser"* nonnull %13, i32 536870929) #7
  br i1 %29, label %22, label %225

30:                                               ; preds = %22, %24
  %31 = call zeroext i1 @_ZN3net3der6Parser7HasMoreEv(%"class.net::der::Parser"* nonnull %13) #7
  br i1 %31, label %225, label %32

32:                                               ; preds = %30
  %33 = icmp eq i32 %2, 0
  br i1 %33, label %34, label %36

34:                                               ; preds = %32
  %35 = call zeroext i1 @_ZN3net3der6Parser7HasMoreEv(%"class.net::der::Parser"* nonnull %12) #7
  br i1 %35, label %225, label %36

36:                                               ; preds = %34, %32
  %37 = bitcast %"class.net::der::Parser"* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %37) #7
  %38 = bitcast %"class.net::der::Parser"* %14 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %38, i8 -86, i64 24, i1 false)
  call void @_ZN3net3der6ParserC1ERKNS0_5InputE(%"class.net::der::Parser"* nonnull %14, %"class.net::der::Input"* dereferenceable(16) %0) #7
  %39 = bitcast %"class.net::der::Parser"* %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %39) #7
  %40 = bitcast %"class.net::der::Parser"* %15 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %40, i8 -86, i64 24, i1 false)
  call void @_ZN3net3der6ParserC1ERKNS0_5InputE(%"class.net::der::Parser"* nonnull %15, %"class.net::der::Input"* dereferenceable(16) %1) #7
  %41 = bitcast %"class.net::der::Parser"* %16 to i8*
  %42 = bitcast %"class.net::der::Parser"* %17 to i8*
  %43 = bitcast %"struct.net::X509NameAttribute"* %11 to i8*
  %44 = bitcast %"class.std::__1::vector.9"* %9 to i8*
  %45 = getelementptr inbounds %"class.std::__1::vector.9", %"class.std::__1::vector.9"* %9, i64 0, i32 0, i32 0
  %46 = getelementptr inbounds %"class.std::__1::vector.9", %"class.std::__1::vector.9"* %9, i64 0, i32 0, i32 1
  %47 = bitcast %"class.std::__1::vector.9"* %10 to i8*
  %48 = getelementptr inbounds %"class.std::__1::vector.9", %"class.std::__1::vector.9"* %10, i64 0, i32 0, i32 0
  %49 = getelementptr inbounds %"class.std::__1::vector.9", %"class.std::__1::vector.9"* %10, i64 0, i32 0, i32 1
  %50 = bitcast %"struct.net::X509NameAttribute"** %46 to i64*
  %51 = bitcast %"class.std::__1::vector.9"* %9 to i64*
  %52 = bitcast %"struct.net::X509NameAttribute"** %49 to i64*
  %53 = bitcast %"class.std::__1::vector.9"* %10 to i64*
  %54 = bitcast %"struct.net::X509NameAttribute"* %8 to i8*
  %55 = bitcast %"struct.net::X509NameAttribute"* %7 to i8*
  %56 = getelementptr inbounds %"struct.net::X509NameAttribute", %"struct.net::X509NameAttribute"* %8, i64 0, i32 1
  %57 = getelementptr inbounds %"struct.net::X509NameAttribute", %"struct.net::X509NameAttribute"* %7, i64 0, i32 1
  %58 = bitcast %"class.std::__1::basic_string"* %4 to i8*
  %59 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %60 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %61 = bitcast %"class.std::__1::basic_string"* %5 to i8*
  %62 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %63 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %64 = bitcast %"class.net::CertErrors"* %6 to i8*
  %65 = bitcast %"class.std::__1::basic_string"* %4 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %66 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %65, i64 0, i32 1, i32 0
  %67 = bitcast %"class.std::__1::basic_string"* %5 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %68 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %67, i64 0, i32 1, i32 0
  %69 = getelementptr inbounds %"struct.net::X509NameAttribute", %"struct.net::X509NameAttribute"* %8, i64 0, i32 2
  %70 = getelementptr inbounds %"struct.net::X509NameAttribute", %"struct.net::X509NameAttribute"* %7, i64 0, i32 2
  %71 = bitcast %"class.net::der::Parser"* %16 to i8*
  %72 = bitcast %"class.net::der::Parser"* %17 to i8*
  br label %73

73:                                               ; preds = %220, %36
  %74 = call zeroext i1 @_ZN3net3der6Parser7HasMoreEv(%"class.net::der::Parser"* nonnull %14) #7
  br i1 %74, label %75, label %223

75:                                               ; preds = %73
  %76 = call zeroext i1 @_ZN3net3der6Parser7HasMoreEv(%"class.net::der::Parser"* nonnull %15) #7
  br i1 %76, label %77, label %223

77:                                               ; preds = %75
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %41) #7
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %71, i8 -86, i64 24, i1 false)
  call void @_ZN3net3der6ParserC1Ev(%"class.net::der::Parser"* nonnull %16) #7
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %42) #7
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %72, i8 -86, i64 24, i1 false)
  call void @_ZN3net3der6ParserC1Ev(%"class.net::der::Parser"* nonnull %17) #7
  %78 = call zeroext i1 @_ZN3net3der6Parser15ReadConstructedEjPS1_(%"class.net::der::Parser"* nonnull %14, i32 536870929, %"class.net::der::Parser"* nonnull %16) #7
  br i1 %78, label %79, label %222

79:                                               ; preds = %77
  %80 = call zeroext i1 @_ZN3net3der6Parser15ReadConstructedEjPS1_(%"class.net::der::Parser"* nonnull %15, i32 536870929, %"class.net::der::Parser"* nonnull %17) #7
  br i1 %80, label %81, label %221

81:                                               ; preds = %79
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %43)
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %44) #7
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %44, i8 0, i64 24, i1 false) #7
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %47) #7
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %47, i8 0, i64 24, i1 false) #7
  %82 = call zeroext i1 @_ZN3net7ReadRdnEPNS_3der6ParserEPNSt3__16vectorINS_17X509NameAttributeENS3_9allocatorIS5_EEEE(%"class.net::der::Parser"* nonnull %16, %"class.std::__1::vector.9"* nonnull %9) #7
  br i1 %82, label %83, label %204

83:                                               ; preds = %81
  %84 = call zeroext i1 @_ZN3net7ReadRdnEPNS_3der6ParserEPNSt3__16vectorINS_17X509NameAttributeENS3_9allocatorIS5_EEEE(%"class.net::der::Parser"* nonnull %17, %"class.std::__1::vector.9"* nonnull %10) #7
  br i1 %84, label %85, label %204

85:                                               ; preds = %83
  %86 = load i64, i64* %50, align 8
  %87 = load i64, i64* %51, align 8
  %88 = sub i64 %86, %87
  %89 = load i64, i64* %52, align 8
  %90 = load i64, i64* %53, align 8
  %91 = sub i64 %89, %90
  %92 = icmp eq i64 %88, %91
  %93 = inttoptr i64 %90 to %"struct.net::X509NameAttribute"*
  %94 = inttoptr i64 %87 to %"struct.net::X509NameAttribute"*
  %95 = inttoptr i64 %86 to %"struct.net::X509NameAttribute"*
  %96 = inttoptr i64 %89 to %"struct.net::X509NameAttribute"*
  br i1 %92, label %97, label %207

97:                                               ; preds = %85
  %98 = icmp eq %"struct.net::X509NameAttribute"* %94, %95
  br i1 %98, label %204, label %99

99:                                               ; preds = %97
  %100 = icmp eq %"struct.net::X509NameAttribute"* %93, %96
  br i1 %100, label %204, label %101

101:                                              ; preds = %99, %201
  %102 = phi %"struct.net::X509NameAttribute"* [ %199, %201 ], [ %94, %99 ]
  %103 = phi %"struct.net::X509NameAttribute"* [ %202, %201 ], [ %93, %99 ]
  %104 = getelementptr inbounds %"struct.net::X509NameAttribute", %"struct.net::X509NameAttribute"* %102, i64 0, i32 0
  %105 = bitcast %"struct.net::X509NameAttribute"* %102 to i8*
  br label %106

106:                                              ; preds = %179, %101
  %107 = phi %"struct.net::X509NameAttribute"* [ %103, %101 ], [ %180, %179 ]
  %108 = getelementptr inbounds %"struct.net::X509NameAttribute", %"struct.net::X509NameAttribute"* %107, i64 0, i32 0
  %109 = call zeroext i1 @_ZN3net3dereqERKNS0_5InputES3_(%"class.net::der::Input"* dereferenceable(16) %104, %"class.net::der::Input"* dereferenceable(16) %108) #7
  br i1 %109, label %110, label %179

110:                                              ; preds = %106
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %43, i8* align 8 %105, i64 40, i1 false) #7
  %111 = bitcast %"struct.net::X509NameAttribute"* %107 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %54) #7
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %55) #7
  call void @llvm.memmove.p0i8.p0i8.i64(i8* nonnull align 8 %55, i8* align 8 %111, i64 40, i1 false) #7
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %54, i8* nonnull align 8 %43, i64 40, i1 false) #7
  %112 = load i32, i32* %56, align 8
  switch i32 %112, label %113 [
    i32 19, label %115
    i32 12, label %115
    i32 22, label %115
    i32 28, label %115
    i32 30, label %115
  ]

113:                                              ; preds = %110
  %114 = load i32, i32* %57, align 8
  br label %173

115:                                              ; preds = %110, %110, %110, %110, %110
  %116 = load i32, i32* %57, align 8
  switch i32 %116, label %173 [
    i32 19, label %117
    i32 12, label %117
    i32 22, label %117
    i32 28, label %117
    i32 30, label %117
  ]

117:                                              ; preds = %115, %115, %115, %115, %115
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %58) #7
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %58, i8 0, i64 24, i1 false) #7
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %61) #7
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %61, i8 0, i64 24, i1 false) #7
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %64) #7
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %64, i8 -86, i64 24, i1 false) #7
  call void @_ZN3net10CertErrorsC1Ev(%"class.net::CertErrors"* nonnull %6) #7
  %118 = call fastcc zeroext i1 @_ZN3net12_GLOBAL__N_114NormalizeValueENS_17X509NameAttributeEPNSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEEPNS_10CertErrorsE(%"struct.net::X509NameAttribute"* nonnull byval(%"struct.net::X509NameAttribute") align 8 %8, %"class.std::__1::basic_string"* nonnull %4, %"class.net::CertErrors"* nonnull %6) #7
  br i1 %118, label %119, label %161

119:                                              ; preds = %117
  %120 = call fastcc zeroext i1 @_ZN3net12_GLOBAL__N_114NormalizeValueENS_17X509NameAttributeEPNSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEEPNS_10CertErrorsE(%"struct.net::X509NameAttribute"* nonnull byval(%"struct.net::X509NameAttribute") align 8 %7, %"class.std::__1::basic_string"* nonnull %5, %"class.net::CertErrors"* nonnull %6) #7
  br i1 %120, label %121, label %161

121:                                              ; preds = %119
  %122 = load i8, i8* %66, align 1
  %123 = icmp slt i8 %122, 0
  %124 = load i64, i64* %60, align 8
  %125 = zext i8 %122 to i64
  %126 = select i1 %123, i64 %124, i64 %125
  %127 = load i8, i8* %68, align 1
  %128 = icmp slt i8 %127, 0
  %129 = load i64, i64* %63, align 8
  %130 = zext i8 %127 to i64
  %131 = select i1 %128, i64 %129, i64 %130
  %132 = icmp eq i64 %126, %131
  br i1 %132, label %133, label %161

133:                                              ; preds = %121
  %134 = load i8*, i8** %59, align 8
  %135 = select i1 %123, i8* %134, i8* %58
  %136 = load i8*, i8** %62, align 8
  %137 = select i1 %128, i8* %136, i8* %61
  %138 = icmp eq i64 %126, 0
  br i1 %123, label %145, label %139

139:                                              ; preds = %133
  br i1 %138, label %161, label %140

140:                                              ; preds = %139
  %141 = ptrtoint i8* %134 to i64
  %142 = trunc i64 %141 to i8
  %143 = load i8, i8* %137, align 1
  %144 = icmp eq i8 %143, %142
  br i1 %144, label %149, label %161

145:                                              ; preds = %133
  br i1 %138, label %161, label %146

146:                                              ; preds = %145
  %147 = call i32 @bcmp(i8* %135, i8* %137, i64 %126) #7
  %148 = icmp eq i32 %147, 0
  br label %161

149:                                              ; preds = %140, %156
  %150 = phi i64 [ %153, %156 ], [ %125, %140 ]
  %151 = phi i8* [ %154, %156 ], [ %58, %140 ]
  %152 = phi i8* [ %157, %156 ], [ %137, %140 ]
  %153 = add i64 %150, -1
  %154 = getelementptr inbounds i8, i8* %151, i64 1
  %155 = icmp eq i64 %153, 0
  br i1 %155, label %161, label %156

156:                                              ; preds = %149
  %157 = getelementptr inbounds i8, i8* %152, i64 1
  %158 = load i8, i8* %154, align 1
  %159 = load i8, i8* %157, align 1
  %160 = icmp eq i8 %158, %159
  br i1 %160, label %149, label %161

161:                                              ; preds = %156, %149, %146, %145, %140, %139, %121, %119, %117
  %162 = phi i1 [ false, %119 ], [ false, %117 ], [ false, %121 ], [ %148, %146 ], [ true, %145 ], [ true, %139 ], [ false, %140 ], [ true, %149 ], [ false, %156 ]
  call void @_ZN3net10CertErrorsD1Ev(%"class.net::CertErrors"* nonnull %6) #7
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %64) #7
  %163 = load i8, i8* %68, align 1
  %164 = icmp slt i8 %163, 0
  br i1 %164, label %165, label %167

165:                                              ; preds = %161
  %166 = load i8*, i8** %62, align 8
  call void @_ZdlPv(i8* %166) #8
  br label %167

167:                                              ; preds = %165, %161
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %61) #7
  %168 = load i8, i8* %66, align 1
  %169 = icmp slt i8 %168, 0
  br i1 %169, label %170, label %172

170:                                              ; preds = %167
  %171 = load i8*, i8** %59, align 8
  call void @_ZdlPv(i8* %171) #8
  br label %172

172:                                              ; preds = %170, %167
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %58) #7
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %54) #7
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %55) #7
  br i1 %162, label %183, label %179

173:                                              ; preds = %115, %113
  %174 = phi i32 [ %114, %113 ], [ %116, %115 ]
  %175 = icmp eq i32 %112, %174
  br i1 %175, label %177, label %176

176:                                              ; preds = %173
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %54) #7
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %55) #7
  br label %179

177:                                              ; preds = %173
  %178 = call zeroext i1 @_ZN3net3dereqERKNS0_5InputES3_(%"class.net::der::Input"* dereferenceable(16) %69, %"class.net::der::Input"* dereferenceable(16) %70) #7
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %54) #7
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %55) #7
  br i1 %178, label %183, label %179

179:                                              ; preds = %177, %176, %172, %106
  %180 = getelementptr inbounds %"struct.net::X509NameAttribute", %"struct.net::X509NameAttribute"* %107, i64 1
  %181 = load %"struct.net::X509NameAttribute"*, %"struct.net::X509NameAttribute"** %49, align 8
  %182 = icmp eq %"struct.net::X509NameAttribute"* %180, %181
  br i1 %182, label %183, label %106

183:                                              ; preds = %172, %177, %179
  %184 = phi %"struct.net::X509NameAttribute"* [ %107, %177 ], [ %107, %172 ], [ %180, %179 ]
  %185 = load %"struct.net::X509NameAttribute"*, %"struct.net::X509NameAttribute"** %49, align 8
  %186 = icmp eq %"struct.net::X509NameAttribute"* %184, %185
  br i1 %186, label %204, label %187

187:                                              ; preds = %183
  %188 = ptrtoint %"struct.net::X509NameAttribute"* %185 to i64
  %189 = getelementptr inbounds %"struct.net::X509NameAttribute", %"struct.net::X509NameAttribute"* %184, i64 1
  %190 = ptrtoint %"struct.net::X509NameAttribute"* %189 to i64
  %191 = sub i64 %188, %190
  %192 = sdiv exact i64 %191, 40
  %193 = icmp eq i64 %191, 0
  br i1 %193, label %197, label %194

194:                                              ; preds = %187
  %195 = bitcast %"struct.net::X509NameAttribute"* %184 to i8*
  %196 = bitcast %"struct.net::X509NameAttribute"* %189 to i8*
  call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %195, i8* align 8 %196, i64 %191, i1 false) #7
  br label %197

197:                                              ; preds = %194, %187
  %198 = getelementptr inbounds %"struct.net::X509NameAttribute", %"struct.net::X509NameAttribute"* %184, i64 %192
  store %"struct.net::X509NameAttribute"* %198, %"struct.net::X509NameAttribute"** %49, align 8
  %199 = getelementptr inbounds %"struct.net::X509NameAttribute", %"struct.net::X509NameAttribute"* %102, i64 1
  %200 = icmp eq %"struct.net::X509NameAttribute"* %199, %95
  br i1 %200, label %204, label %201

201:                                              ; preds = %197
  %202 = load %"struct.net::X509NameAttribute"*, %"struct.net::X509NameAttribute"** %48, align 8
  %203 = icmp eq %"struct.net::X509NameAttribute"* %202, %198
  br i1 %203, label %204, label %101

204:                                              ; preds = %183, %197, %201, %99, %97, %83, %81
  %205 = phi i1 [ false, %81 ], [ false, %83 ], [ true, %97 ], [ false, %99 ], [ false, %183 ], [ true, %197 ], [ false, %201 ]
  %206 = load %"struct.net::X509NameAttribute"*, %"struct.net::X509NameAttribute"** %48, align 8
  br label %207

207:                                              ; preds = %204, %85
  %208 = phi %"struct.net::X509NameAttribute"* [ %206, %204 ], [ %93, %85 ]
  %209 = phi i1 [ %205, %204 ], [ false, %85 ]
  %210 = icmp eq %"struct.net::X509NameAttribute"* %208, null
  br i1 %210, label %214, label %211

211:                                              ; preds = %207
  %212 = ptrtoint %"struct.net::X509NameAttribute"* %208 to i64
  store i64 %212, i64* %52, align 8
  %213 = bitcast %"struct.net::X509NameAttribute"* %208 to i8*
  call void @_ZdlPv(i8* %213) #8
  br label %214

214:                                              ; preds = %211, %207
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %47) #7
  %215 = load %"struct.net::X509NameAttribute"*, %"struct.net::X509NameAttribute"** %45, align 8
  %216 = icmp eq %"struct.net::X509NameAttribute"* %215, null
  br i1 %216, label %220, label %217

217:                                              ; preds = %214
  %218 = ptrtoint %"struct.net::X509NameAttribute"* %215 to i64
  store i64 %218, i64* %50, align 8
  %219 = bitcast %"struct.net::X509NameAttribute"* %215 to i8*
  call void @_ZdlPv(i8* %219) #8
  br label %220

220:                                              ; preds = %214, %217
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %44) #7
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %43)
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %42) #7
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %41) #7
  br i1 %209, label %73, label %223

221:                                              ; preds = %79
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %42) #7
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %41) #7
  br label %223

222:                                              ; preds = %77
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %42) #7
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %41) #7
  br label %223

223:                                              ; preds = %75, %73, %220, %222, %221
  %224 = phi i1 [ false, %221 ], [ false, %222 ], [ true, %75 ], [ true, %73 ], [ false, %220 ]
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %39) #7
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %37) #7
  br label %225

225:                                              ; preds = %26, %28, %34, %30, %223
  %226 = phi i1 [ %224, %223 ], [ false, %30 ], [ false, %34 ], [ false, %28 ], [ false, %26 ]
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %20) #7
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %18) #7
  ret i1 %226
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN3net19VerifyNameInSubtreeERKNS_3der5InputES3_(%"class.net::der::Input"* dereferenceable(16), %"class.net::der::Input"* dereferenceable(16)) local_unnamed_addr #0 {
  %3 = tail call fastcc zeroext i1 @_ZN3net12_GLOBAL__N_123VerifyNameMatchInternalERKNS_3der5InputES4_NS0_13NameMatchTypeE(%"class.net::der::Input"* dereferenceable(16) %0, %"class.net::der::Input"* dereferenceable(16) %1, i32 1)
  ret i1 %3
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN3net24NameContainsEmailAddressERKNS_3der5InputEPb(%"class.net::der::Input"* dereferenceable(16), i8* nocapture) local_unnamed_addr #0 {
  %3 = alloca %"class.net::der::Parser", align 8
  %4 = alloca %"class.net::der::Parser", align 8
  %5 = alloca %"class.std::__1::vector.9", align 8
  %6 = alloca %"class.net::der::Input", align 8
  %7 = bitcast %"class.net::der::Parser"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %7) #7
  %8 = bitcast %"class.net::der::Parser"* %3 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %8, i8 -86, i64 24, i1 false)
  call void @_ZN3net3der6ParserC1ERKNS0_5InputE(%"class.net::der::Parser"* nonnull %3, %"class.net::der::Input"* dereferenceable(16) %0) #7
  %9 = bitcast %"class.net::der::Parser"* %4 to i8*
  %10 = bitcast %"class.std::__1::vector.9"* %5 to i8*
  %11 = getelementptr inbounds %"class.std::__1::vector.9", %"class.std::__1::vector.9"* %5, i64 0, i32 0, i32 0
  %12 = getelementptr inbounds %"class.std::__1::vector.9", %"class.std::__1::vector.9"* %5, i64 0, i32 0, i32 1
  %13 = bitcast %"class.net::der::Input"* %6 to i8*
  %14 = getelementptr inbounds %"class.net::der::Input", %"class.net::der::Input"* %6, i64 0, i32 0
  %15 = getelementptr inbounds %"class.net::der::Input", %"class.net::der::Input"* %6, i64 0, i32 1
  %16 = bitcast %"struct.net::X509NameAttribute"** %12 to i64*
  %17 = bitcast %"class.net::der::Parser"* %4 to i8*
  br label %18

18:                                               ; preds = %50, %2
  %19 = phi i1 [ undef, %2 ], [ %45, %50 ]
  %20 = call zeroext i1 @_ZN3net3der6Parser7HasMoreEv(%"class.net::der::Parser"* nonnull %3) #7
  br i1 %20, label %21, label %52

21:                                               ; preds = %18
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %9) #7
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %17, i8 -86, i64 24, i1 false)
  call void @_ZN3net3der6ParserC1Ev(%"class.net::der::Parser"* nonnull %4) #7
  %22 = call zeroext i1 @_ZN3net3der6Parser15ReadConstructedEjPS1_(%"class.net::der::Parser"* nonnull %3, i32 536870929, %"class.net::der::Parser"* nonnull %4) #7
  br i1 %22, label %24, label %23

23:                                               ; preds = %21
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %9) #7
  br label %53

24:                                               ; preds = %21
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %10) #7
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %10, i8 0, i64 24, i1 false) #7
  %25 = call zeroext i1 @_ZN3net7ReadRdnEPNS_3der6ParserEPNSt3__16vectorINS_17X509NameAttributeENS3_9allocatorIS5_EEEE(%"class.net::der::Parser"* nonnull %4, %"class.std::__1::vector.9"* nonnull %5) #7
  br i1 %25, label %26, label %38

26:                                               ; preds = %24
  %27 = load %"struct.net::X509NameAttribute"*, %"struct.net::X509NameAttribute"** %11, align 8
  %28 = load %"struct.net::X509NameAttribute"*, %"struct.net::X509NameAttribute"** %12, align 8
  %29 = icmp eq %"struct.net::X509NameAttribute"* %27, %28
  br i1 %29, label %42, label %32

30:                                               ; preds = %32
  %31 = icmp eq %"struct.net::X509NameAttribute"* %36, %28
  br i1 %31, label %38, label %32

32:                                               ; preds = %26, %30
  %33 = phi %"struct.net::X509NameAttribute"* [ %36, %30 ], [ %27, %26 ]
  %34 = getelementptr inbounds %"struct.net::X509NameAttribute", %"struct.net::X509NameAttribute"* %33, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %13) #7
  store i8* getelementptr inbounds ([9 x i8], [9 x i8]* @_ZN3net12_GLOBAL__N_116kOidEmailAddressE, i64 0, i64 0), i8** %14, align 8
  store i64 9, i64* %15, align 8
  %35 = call zeroext i1 @_ZN3net3dereqERKNS0_5InputES3_(%"class.net::der::Input"* dereferenceable(16) %34, %"class.net::der::Input"* nonnull dereferenceable(16) %6) #7
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %13) #7
  %36 = getelementptr inbounds %"struct.net::X509NameAttribute", %"struct.net::X509NameAttribute"* %33, i64 1
  br i1 %35, label %37, label %30

37:                                               ; preds = %32
  store i8 1, i8* %1, align 1
  br label %38

38:                                               ; preds = %30, %24, %37
  %39 = phi i32 [ 1, %37 ], [ 1, %24 ], [ 0, %30 ]
  %40 = phi i1 [ true, %37 ], [ false, %24 ], [ %19, %30 ]
  %41 = load %"struct.net::X509NameAttribute"*, %"struct.net::X509NameAttribute"** %11, align 8
  br label %42

42:                                               ; preds = %38, %26
  %43 = phi %"struct.net::X509NameAttribute"* [ %41, %38 ], [ %27, %26 ]
  %44 = phi i32 [ %39, %38 ], [ 0, %26 ]
  %45 = phi i1 [ %40, %38 ], [ %19, %26 ]
  %46 = icmp eq %"struct.net::X509NameAttribute"* %43, null
  br i1 %46, label %50, label %47

47:                                               ; preds = %42
  %48 = ptrtoint %"struct.net::X509NameAttribute"* %43 to i64
  store i64 %48, i64* %16, align 8
  %49 = bitcast %"struct.net::X509NameAttribute"* %43 to i8*
  call void @_ZdlPv(i8* %49) #8
  br label %50

50:                                               ; preds = %47, %42
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %10) #7
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %9) #7
  %51 = icmp eq i32 %44, 0
  br i1 %51, label %18, label %53

52:                                               ; preds = %18
  store i8 0, i8* %1, align 1
  br label %53

53:                                               ; preds = %50, %23, %52
  %54 = phi i1 [ true, %52 ], [ false, %23 ], [ %45, %50 ]
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %7) #7
  ret i1 %54
}

declare zeroext i1 @_ZN3net3dereqERKNS0_5InputES3_(%"class.net::der::Input"* dereferenceable(16), %"class.net::der::Input"* dereferenceable(16)) local_unnamed_addr #2

declare zeroext i1 @_ZNK3net17X509NameAttribute19ValueAsStringUnsafeEPNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"struct.net::X509NameAttribute"*, %"class.std::__1::basic_string"*) local_unnamed_addr #2

declare void @_ZN3net10CertErrors8AddErrorEPKvNSt3__110unique_ptrINS_15CertErrorParamsENS3_14default_deleteIS5_EEEE(%"class.net::CertErrors"*, i8*, %"class.net::CertErrorParams"*) local_unnamed_addr #2

declare %"class.net::CertErrorParams"* @_ZN3net27CreateCertErrorParams1SizeTEPKcm(i8*, i64) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define internal fastcc zeroext i1 @_ZN3net12_GLOBAL__N_124NormalizeDirectoryStringENS0_18CharsetEnforcementEPNSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEE(i32, %"class.std::__1::basic_string"*) unnamed_addr #0 {
  %3 = bitcast %"class.std::__1::basic_string"* %1 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %4 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %3, i64 0, i32 1, i32 0
  %5 = load i8, i8* %4, align 1
  %6 = icmp slt i8 %5, 0
  br i1 %6, label %7, label %11

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %9 = load i8*, i8** %8, align 8
  %10 = bitcast %"class.std::__1::basic_string"* %1 to i8*
  br label %14

11:                                               ; preds = %2
  %12 = bitcast %"class.std::__1::basic_string"* %1 to i8*
  %13 = bitcast %"class.std::__1::basic_string"* %1 to i8*
  br label %14

14:                                               ; preds = %7, %11
  %15 = phi i8* [ %10, %7 ], [ %12, %11 ]
  %16 = phi i8* [ %9, %7 ], [ %13, %11 ]
  %17 = phi i8* [ %9, %7 ], [ %12, %11 ]
  %18 = ptrtoint i8* %17 to i64
  %19 = zext i8 %5 to i64
  %20 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %21 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  br label %22

22:                                               ; preds = %36, %14
  %23 = phi i8* [ %16, %14 ], [ %37, %36 ]
  br i1 %6, label %24, label %27

24:                                               ; preds = %22
  %25 = load i8*, i8** %20, align 8
  %26 = load i64, i64* %21, align 8
  br label %27

27:                                               ; preds = %22, %24
  %28 = phi i8* [ %25, %24 ], [ %15, %22 ]
  %29 = phi i64 [ %26, %24 ], [ %19, %22 ]
  %30 = getelementptr inbounds i8, i8* %28, i64 %29
  %31 = icmp eq i8* %30, %23
  br i1 %31, label %35, label %32

32:                                               ; preds = %27
  %33 = load i8, i8* %23, align 1
  %34 = icmp eq i8 %33, 32
  br i1 %34, label %36, label %35

35:                                               ; preds = %27, %32
  br label %38

36:                                               ; preds = %32
  %37 = getelementptr inbounds i8, i8* %23, i64 1
  br label %22

38:                                               ; preds = %35, %97
  %39 = phi i8 [ %100, %97 ], [ %5, %35 ]
  %40 = phi i64 [ %98, %97 ], [ %18, %35 ]
  %41 = phi i8* [ %99, %97 ], [ %23, %35 ]
  %42 = icmp slt i8 %39, 0
  br i1 %42, label %43, label %46

43:                                               ; preds = %38
  %44 = load i8*, i8** %20, align 8
  %45 = load i64, i64* %21, align 8
  br label %48

46:                                               ; preds = %38
  %47 = zext i8 %39 to i64
  br label %48

48:                                               ; preds = %43, %46
  %49 = phi i8* [ %44, %43 ], [ %15, %46 ]
  %50 = phi i64 [ %45, %43 ], [ %47, %46 ]
  %51 = getelementptr inbounds i8, i8* %49, i64 %50
  %52 = icmp eq i8* %41, %51
  br i1 %52, label %101, label %53

53:                                               ; preds = %48
  %54 = load i8, i8* %41, align 1
  %55 = icmp eq i8 %54, 32
  br i1 %55, label %56, label %75

56:                                               ; preds = %53
  %57 = getelementptr inbounds i8, i8* %41, i64 1
  br i1 %42, label %58, label %61

58:                                               ; preds = %56
  %59 = load i8*, i8** %20, align 8
  %60 = load i64, i64* %21, align 8
  br label %63

61:                                               ; preds = %56
  %62 = zext i8 %39 to i64
  br label %63

63:                                               ; preds = %58, %61
  %64 = phi i8* [ %59, %58 ], [ %15, %61 ]
  %65 = phi i64 [ %60, %58 ], [ %62, %61 ]
  %66 = getelementptr inbounds i8, i8* %64, i64 %65
  %67 = icmp eq i8* %57, %66
  br i1 %67, label %97, label %68

68:                                               ; preds = %63
  %69 = load i8, i8* %57, align 1
  %70 = icmp eq i8 %69, 32
  br i1 %70, label %97, label %71

71:                                               ; preds = %68
  %72 = inttoptr i64 %40 to i8*
  %73 = getelementptr inbounds i8, i8* %72, i64 1
  %74 = ptrtoint i8* %73 to i64
  store i8 32, i8* %72, align 1
  br label %97

75:                                               ; preds = %53
  %76 = add i8 %54, -65
  %77 = icmp ult i8 %76, 26
  br i1 %77, label %78, label %83

78:                                               ; preds = %75
  %79 = add nuw nsw i8 %54, 32
  %80 = inttoptr i64 %40 to i8*
  %81 = getelementptr inbounds i8, i8* %80, i64 1
  %82 = ptrtoint i8* %81 to i64
  store i8 %79, i8* %80, align 1
  br label %97

83:                                               ; preds = %75
  switch i32 %0, label %93 [
    i32 1, label %84
    i32 2, label %91
  ]

84:                                               ; preds = %83
  %85 = add i8 %54, -97
  %86 = icmp ult i8 %85, 26
  %87 = add i8 %54, -39
  %88 = icmp ult i8 %87, 20
  %89 = or i1 %86, %88
  br i1 %89, label %93, label %90

90:                                               ; preds = %84
  switch i8 %54, label %143 [
    i8 63, label %93
    i8 61, label %93
  ]

91:                                               ; preds = %83
  %92 = icmp slt i8 %54, 0
  br i1 %92, label %143, label %93

93:                                               ; preds = %90, %90, %91, %84, %83
  %94 = inttoptr i64 %40 to i8*
  %95 = getelementptr inbounds i8, i8* %94, i64 1
  %96 = ptrtoint i8* %95 to i64
  store i8 %54, i8* %94, align 1
  br label %97

97:                                               ; preds = %63, %71, %68, %78, %93
  %98 = phi i64 [ %82, %78 ], [ %96, %93 ], [ %40, %68 ], [ %74, %71 ], [ %40, %63 ]
  %99 = getelementptr inbounds i8, i8* %41, i64 1
  %100 = load i8, i8* %4, align 1
  br label %38

101:                                              ; preds = %48
  br i1 %42, label %102, label %105

102:                                              ; preds = %101
  %103 = load i8*, i8** %20, align 8
  %104 = load i64, i64* %21, align 8
  br label %107

105:                                              ; preds = %101
  %106 = zext i8 %39 to i64
  br label %107

107:                                              ; preds = %102, %105
  %108 = phi i8* [ %103, %102 ], [ %15, %105 ]
  %109 = phi i64 [ %104, %102 ], [ %106, %105 ]
  %110 = getelementptr inbounds i8, i8* %108, i64 %109
  %111 = inttoptr i64 %40 to i8*
  %112 = icmp eq i8* %110, %111
  br i1 %112, label %143, label %113

113:                                              ; preds = %107
  br i1 %42, label %114, label %119

114:                                              ; preds = %113
  %115 = load i8*, i8** %20, align 8
  %116 = load i64, i64* %21, align 8
  %117 = getelementptr inbounds i8, i8* %115, i64 %116
  %118 = ptrtoint i8* %115 to i64
  br label %123

119:                                              ; preds = %113
  %120 = zext i8 %39 to i64
  %121 = getelementptr inbounds i8, i8* %15, i64 %120
  %122 = ptrtoint %"class.std::__1::basic_string"* %1 to i64
  br label %123

123:                                              ; preds = %119, %114
  %124 = phi i8* [ %117, %114 ], [ %121, %119 ]
  %125 = phi i64 [ %118, %114 ], [ %122, %119 ]
  %126 = phi i64 [ %116, %114 ], [ %120, %119 ]
  %127 = ptrtoint i8* %124 to i64
  %128 = sub i64 %40, %125
  %129 = sub i64 %127, %40
  %130 = icmp ult i64 %126, %128
  br i1 %130, label %131, label %133

131:                                              ; preds = %123
  %132 = bitcast %"class.std::__1::basic_string"* %1 to %"class.std::__1::__basic_string_common"*
  tail call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_out_of_rangeEv(%"class.std::__1::__basic_string_common"* %132) #9
  unreachable

133:                                              ; preds = %123
  %134 = icmp eq i64 %129, -1
  br i1 %134, label %135, label %142

135:                                              ; preds = %133
  br i1 %42, label %136, label %139

136:                                              ; preds = %135
  %137 = load i8*, i8** %20, align 8
  %138 = getelementptr inbounds i8, i8* %137, i64 %128
  store i8 0, i8* %138, align 1
  store i64 %128, i64* %21, align 8
  br label %143

139:                                              ; preds = %135
  %140 = getelementptr inbounds i8, i8* %15, i64 %128
  store i8 0, i8* %140, align 1
  %141 = trunc i64 %128 to i8
  store i8 %141, i8* %4, align 1
  br label %143

142:                                              ; preds = %133
  tail call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE26__erase_external_with_moveEmm(%"class.std::__1::basic_string"* %1, i64 %128, i64 %129) #7
  br label %143

143:                                              ; preds = %90, %91, %107, %142, %139, %136
  %144 = phi i1 [ true, %107 ], [ true, %136 ], [ true, %139 ], [ true, %142 ], [ false, %91 ], [ false, %90 ]
  ret i1 %144
}

; Function Attrs: noreturn
declare void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_out_of_rangeEv(%"class.std::__1::__basic_string_common"*) local_unnamed_addr #3

declare void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE26__erase_external_with_moveEmm(%"class.std::__1::basic_string"*, i64, i64) local_unnamed_addr #2

declare zeroext i1 @_ZN3net3der6Parser7SkipTagEj(%"class.net::der::Parser"*, i32) local_unnamed_addr #2

declare void @_ZN3net10CertErrorsC1Ev(%"class.net::CertErrors"*) unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN3net10CertErrorsD1Ev(%"class.net::CertErrors"*) unnamed_addr #4

; Function Attrs: argmemonly nounwind
declare void @llvm.memmove.p0i8.p0i8.i64(i8* nocapture, i8* nocapture readonly, i64, i1 immarg) #1

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #5

declare void @CBB_zero(%struct.cbb_st*) local_unnamed_addr #2

declare void @CBB_cleanup(%struct.cbb_st*) local_unnamed_addr #2

declare void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE9__grow_byEmmmmmm(%"class.std::__1::basic_string"*, i64, i64, i64, i64, i64, i64) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

; Function Attrs: nofree nounwind readonly
declare i32 @bcmp(i8* nocapture, i8* nocapture, i64) local_unnamed_addr #6

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nofree nounwind readonly }
attributes #7 = { nounwind }
attributes #8 = { builtin nounwind }
attributes #9 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!3}
!3 = distinct !{!3, !4}
!4 = distinct !{!4, !"LVerDomain"}
!5 = !{!6}
!6 = distinct !{!6, !4}
!7 = distinct !{!7, !8}
!8 = !{!"llvm.loop.isvectorized", i32 1}
!9 = distinct !{!9, !10}
!10 = !{!"llvm.loop.unroll.disable"}
!11 = distinct !{!11, !8}
