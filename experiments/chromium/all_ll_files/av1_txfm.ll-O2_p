; ModuleID = '../../third_party/libaom/source/libaom/av1/common/av1_txfm.c'
source_filename = "../../third_party/libaom/source/libaom/av1/common/av1_txfm.c"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

@av1_cospi_arr_data = hidden local_unnamed_addr constant [7 x [64 x i32]] [[64 x i32] [i32 1024, i32 1024, i32 1023, i32 1021, i32 1019, i32 1016, i32 1013, i32 1009, i32 1004, i32 999, i32 993, i32 987, i32 980, i32 972, i32 964, i32 955, i32 946, i32 936, i32 926, i32 915, i32 903, i32 891, i32 878, i32 865, i32 851, i32 837, i32 822, i32 807, i32 792, i32 775, i32 759, i32 742, i32 724, i32 706, i32 688, i32 669, i32 650, i32 630, i32 610, i32 590, i32 569, i32 548, i32 526, i32 505, i32 483, i32 460, i32 438, i32 415, i32 392, i32 369, i32 345, i32 321, i32 297, i32 273, i32 249, i32 224, i32 200, i32 175, i32 150, i32 125, i32 100, i32 75, i32 50, i32 25], [64 x i32] [i32 2048, i32 2047, i32 2046, i32 2042, i32 2038, i32 2033, i32 2026, i32 2018, i32 2009, i32 1998, i32 1987, i32 1974, i32 1960, i32 1945, i32 1928, i32 1911, i32 1892, i32 1872, i32 1851, i32 1829, i32 1806, i32 1782, i32 1757, i32 1730, i32 1703, i32 1674, i32 1645, i32 1615, i32 1583, i32 1551, i32 1517, i32 1483, i32 1448, i32 1412, i32 1375, i32 1338, i32 1299, i32 1260, i32 1220, i32 1179, i32 1138, i32 1096, i32 1053, i32 1009, i32 965, i32 921, i32 876, i32 830, i32 784, i32 737, i32 690, i32 642, i32 595, i32 546, i32 498, i32 449, i32 400, i32 350, i32 301, i32 251, i32 201, i32 151, i32 100, i32 50], [64 x i32] [i32 4096, i32 4095, i32 4091, i32 4085, i32 4076, i32 4065, i32 4052, i32 4036, i32 4017, i32 3996, i32 3973, i32 3948, i32 3920, i32 3889, i32 3857, i32 3822, i32 3784, i32 3745, i32 3703, i32 3659, i32 3612, i32 3564, i32 3513, i32 3461, i32 3406, i32 3349, i32 3290, i32 3229, i32 3166, i32 3102, i32 3035, i32 2967, i32 2896, i32 2824, i32 2751, i32 2675, i32 2598, i32 2520, i32 2440, i32 2359, i32 2276, i32 2191, i32 2106, i32 2019, i32 1931, i32 1842, i32 1751, i32 1660, i32 1567, i32 1474, i32 1380, i32 1285, i32 1189, i32 1092, i32 995, i32 897, i32 799, i32 700, i32 601, i32 501, i32 401, i32 301, i32 201, i32 101], [64 x i32] [i32 8192, i32 8190, i32 8182, i32 8170, i32 8153, i32 8130, i32 8103, i32 8071, i32 8035, i32 7993, i32 7946, i32 7895, i32 7839, i32 7779, i32 7713, i32 7643, i32 7568, i32 7489, i32 7405, i32 7317, i32 7225, i32 7128, i32 7027, i32 6921, i32 6811, i32 6698, i32 6580, i32 6458, i32 6333, i32 6203, i32 6070, i32 5933, i32 5793, i32 5649, i32 5501, i32 5351, i32 5197, i32 5040, i32 4880, i32 4717, i32 4551, i32 4383, i32 4212, i32 4038, i32 3862, i32 3683, i32 3503, i32 3320, i32 3135, i32 2948, i32 2760, i32 2570, i32 2378, i32 2185, i32 1990, i32 1795, i32 1598, i32 1401, i32 1202, i32 1003, i32 803, i32 603, i32 402, i32 201], [64 x i32] [i32 16384, i32 16379, i32 16364, i32 16340, i32 16305, i32 16261, i32 16207, i32 16143, i32 16069, i32 15986, i32 15893, i32 15791, i32 15679, i32 15557, i32 15426, i32 15286, i32 15137, i32 14978, i32 14811, i32 14635, i32 14449, i32 14256, i32 14053, i32 13842, i32 13623, i32 13395, i32 13160, i32 12916, i32 12665, i32 12406, i32 12140, i32 11866, i32 11585, i32 11297, i32 11003, i32 10702, i32 10394, i32 10080, i32 9760, i32 9434, i32 9102, i32 8765, i32 8423, i32 8076, i32 7723, i32 7366, i32 7005, i32 6639, i32 6270, i32 5897, i32 5520, i32 5139, i32 4756, i32 4370, i32 3981, i32 3590, i32 3196, i32 2801, i32 2404, i32 2006, i32 1606, i32 1205, i32 804, i32 402], [64 x i32] [i32 32768, i32 32758, i32 32729, i32 32679, i32 32610, i32 32522, i32 32413, i32 32286, i32 32138, i32 31972, i32 31786, i32 31581, i32 31357, i32 31114, i32 30853, i32 30572, i32 30274, i32 29957, i32 29622, i32 29269, i32 28899, i32 28511, i32 28106, i32 27684, i32 27246, i32 26791, i32 26320, i32 25833, i32 25330, i32 24812, i32 24279, i32 23732, i32 23170, i32 22595, i32 22006, i32 21403, i32 20788, i32 20160, i32 19520, i32 18868, i32 18205, i32 17531, i32 16846, i32 16151, i32 15447, i32 14733, i32 14010, i32 13279, i32 12540, i32 11793, i32 11039, i32 10279, i32 9512, i32 8740, i32 7962, i32 7180, i32 6393, i32 5602, i32 4808, i32 4011, i32 3212, i32 2411, i32 1608, i32 804], [64 x i32] [i32 65536, i32 65516, i32 65457, i32 65358, i32 65220, i32 65043, i32 64827, i32 64571, i32 64277, i32 63944, i32 63572, i32 63162, i32 62714, i32 62228, i32 61705, i32 61145, i32 60547, i32 59914, i32 59244, i32 58538, i32 57798, i32 57022, i32 56212, i32 55368, i32 54491, i32 53581, i32 52639, i32 51665, i32 50660, i32 49624, i32 48559, i32 47464, i32 46341, i32 45190, i32 44011, i32 42806, i32 41576, i32 40320, i32 39040, i32 37736, i32 36410, i32 35062, i32 33692, i32 32303, i32 30893, i32 29466, i32 28020, i32 26558, i32 25080, i32 23586, i32 22078, i32 20557, i32 19024, i32 17479, i32 15924, i32 14359, i32 12785, i32 11204, i32 9616, i32 8022, i32 6424, i32 4821, i32 3216, i32 1608]], align 16
@av1_sinpi_arr_data = hidden local_unnamed_addr constant [7 x [5 x i32]] [[5 x i32] [i32 0, i32 330, i32 621, i32 836, i32 951], [5 x i32] [i32 0, i32 660, i32 1241, i32 1672, i32 1901], [5 x i32] [i32 0, i32 1321, i32 2482, i32 3344, i32 3803], [5 x i32] [i32 0, i32 2642, i32 4964, i32 6689, i32 7606], [5 x i32] [i32 0, i32 5283, i32 9929, i32 13377, i32 15212], [5 x i32] [i32 0, i32 10566, i32 19858, i32 26755, i32 30424], [5 x i32] [i32 0, i32 21133, i32 39716, i32 53510, i32 60849]], align 16
@av1_txfm_type_ls = hidden local_unnamed_addr constant [5 x [4 x i8]] [[4 x i8] c"\00\05\05\08", [4 x i8] c"\01\06\06\09", [4 x i8] c"\02\07\07\0A", [4 x i8] c"\03\0D\0D\0B", [4 x i8] c"\04\0D\0D\0D"], align 16
@av1_txfm_stage_num_list = hidden local_unnamed_addr constant [12 x i8] c"\04\06\08\0A\0C\07\08\0A\01\01\01\01", align 1

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @av1_round_shift_array_c(i32* nocapture, i32, i32) local_unnamed_addr #0 {
  %4 = icmp eq i32 %2, 0
  br i1 %4, label %125, label %5

5:                                                ; preds = %3
  %6 = icmp sgt i32 %2, 0
  %7 = icmp sgt i32 %1, 0
  br i1 %6, label %17, label %8

8:                                                ; preds = %5
  br i1 %7, label %9, label %125

9:                                                ; preds = %8
  %10 = sub nsw i32 0, %2
  %11 = zext i32 %10 to i64
  %12 = zext i32 %1 to i64
  %13 = and i64 %12, 1
  %14 = icmp eq i32 %1, 1
  br i1 %14, label %112, label %15

15:                                               ; preds = %9
  %16 = sub nsw i64 %12, %13
  br label %87

17:                                               ; preds = %5
  br i1 %7, label %18, label %125

18:                                               ; preds = %17
  %19 = add nsw i32 %2, -1
  %20 = zext i32 %19 to i64
  %21 = shl i64 1, %20
  %22 = zext i32 %2 to i64
  %23 = zext i32 %1 to i64
  %24 = icmp ult i32 %1, 4
  br i1 %24, label %75, label %25

25:                                               ; preds = %18
  %26 = and i64 %23, 4294967292
  %27 = insertelement <4 x i64> undef, i64 %21, i32 0
  %28 = shufflevector <4 x i64> %27, <4 x i64> undef, <4 x i32> zeroinitializer
  %29 = insertelement <4 x i64> undef, i64 %22, i32 0
  %30 = shufflevector <4 x i64> %29, <4 x i64> undef, <4 x i32> zeroinitializer
  %31 = add nsw i64 %26, -4
  %32 = lshr exact i64 %31, 2
  %33 = add nuw nsw i64 %32, 1
  %34 = and i64 %33, 1
  %35 = icmp eq i64 %31, 0
  br i1 %35, label %61, label %36

36:                                               ; preds = %25
  %37 = sub nuw nsw i64 %33, %34
  br label %38

38:                                               ; preds = %38, %36
  %39 = phi i64 [ 0, %36 ], [ %58, %38 ]
  %40 = phi i64 [ %37, %36 ], [ %59, %38 ]
  %41 = getelementptr inbounds i32, i32* %0, i64 %39
  %42 = bitcast i32* %41 to <4 x i32>*
  %43 = load <4 x i32>, <4 x i32>* %42, align 4
  %44 = sext <4 x i32> %43 to <4 x i64>
  %45 = add nsw <4 x i64> %28, %44
  %46 = ashr <4 x i64> %45, %30
  %47 = trunc <4 x i64> %46 to <4 x i32>
  %48 = bitcast i32* %41 to <4 x i32>*
  store <4 x i32> %47, <4 x i32>* %48, align 4
  %49 = or i64 %39, 4
  %50 = getelementptr inbounds i32, i32* %0, i64 %49
  %51 = bitcast i32* %50 to <4 x i32>*
  %52 = load <4 x i32>, <4 x i32>* %51, align 4
  %53 = sext <4 x i32> %52 to <4 x i64>
  %54 = add nsw <4 x i64> %28, %53
  %55 = ashr <4 x i64> %54, %30
  %56 = trunc <4 x i64> %55 to <4 x i32>
  %57 = bitcast i32* %50 to <4 x i32>*
  store <4 x i32> %56, <4 x i32>* %57, align 4
  %58 = add i64 %39, 8
  %59 = add i64 %40, -2
  %60 = icmp eq i64 %59, 0
  br i1 %60, label %61, label %38, !llvm.loop !2

61:                                               ; preds = %38, %25
  %62 = phi i64 [ 0, %25 ], [ %58, %38 ]
  %63 = icmp eq i64 %34, 0
  br i1 %63, label %73, label %64

64:                                               ; preds = %61
  %65 = getelementptr inbounds i32, i32* %0, i64 %62
  %66 = bitcast i32* %65 to <4 x i32>*
  %67 = load <4 x i32>, <4 x i32>* %66, align 4
  %68 = sext <4 x i32> %67 to <4 x i64>
  %69 = add nsw <4 x i64> %28, %68
  %70 = ashr <4 x i64> %69, %30
  %71 = trunc <4 x i64> %70 to <4 x i32>
  %72 = bitcast i32* %65 to <4 x i32>*
  store <4 x i32> %71, <4 x i32>* %72, align 4
  br label %73

73:                                               ; preds = %61, %64
  %74 = icmp eq i64 %26, %23
  br i1 %74, label %125, label %75

75:                                               ; preds = %73, %18
  %76 = phi i64 [ 0, %18 ], [ %26, %73 ]
  br label %77

77:                                               ; preds = %75, %77
  %78 = phi i64 [ %85, %77 ], [ %76, %75 ]
  %79 = getelementptr inbounds i32, i32* %0, i64 %78
  %80 = load i32, i32* %79, align 4
  %81 = sext i32 %80 to i64
  %82 = add nsw i64 %21, %81
  %83 = ashr i64 %82, %22
  %84 = trunc i64 %83 to i32
  store i32 %84, i32* %79, align 4
  %85 = add nuw nsw i64 %78, 1
  %86 = icmp eq i64 %85, %23
  br i1 %86, label %125, label %77, !llvm.loop !4

87:                                               ; preds = %87, %15
  %88 = phi i64 [ 0, %15 ], [ %109, %87 ]
  %89 = phi i64 [ %16, %15 ], [ %110, %87 ]
  %90 = getelementptr inbounds i32, i32* %0, i64 %88
  %91 = load i32, i32* %90, align 4
  %92 = sext i32 %91 to i64
  %93 = shl i64 %92, %11
  %94 = icmp slt i64 %93, 2147483647
  %95 = select i1 %94, i64 %93, i64 2147483647
  %96 = icmp sgt i64 %95, -2147483648
  %97 = select i1 %96, i64 %95, i64 -2147483648
  %98 = trunc i64 %97 to i32
  store i32 %98, i32* %90, align 4
  %99 = or i64 %88, 1
  %100 = getelementptr inbounds i32, i32* %0, i64 %99
  %101 = load i32, i32* %100, align 4
  %102 = sext i32 %101 to i64
  %103 = shl i64 %102, %11
  %104 = icmp slt i64 %103, 2147483647
  %105 = select i1 %104, i64 %103, i64 2147483647
  %106 = icmp sgt i64 %105, -2147483648
  %107 = select i1 %106, i64 %105, i64 -2147483648
  %108 = trunc i64 %107 to i32
  store i32 %108, i32* %100, align 4
  %109 = add nuw nsw i64 %88, 2
  %110 = add i64 %89, -2
  %111 = icmp eq i64 %110, 0
  br i1 %111, label %112, label %87

112:                                              ; preds = %87, %9
  %113 = phi i64 [ 0, %9 ], [ %109, %87 ]
  %114 = icmp eq i64 %13, 0
  br i1 %114, label %125, label %115

115:                                              ; preds = %112
  %116 = getelementptr inbounds i32, i32* %0, i64 %113
  %117 = load i32, i32* %116, align 4
  %118 = sext i32 %117 to i64
  %119 = shl i64 %118, %11
  %120 = icmp slt i64 %119, 2147483647
  %121 = select i1 %120, i64 %119, i64 2147483647
  %122 = icmp sgt i64 %121, -2147483648
  %123 = select i1 %122, i64 %121, i64 -2147483648
  %124 = trunc i64 %123 to i32
  store i32 %124, i32* %116, align 4
  br label %125

125:                                              ; preds = %115, %112, %77, %73, %8, %17, %3
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @av1_range_check_buf(i32, i32* nocapture, i32* nocapture, i32, i8 signext) local_unnamed_addr #1 {
  ret void
}

attributes #0 = { nofree norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = distinct !{!2, !3}
!3 = !{!"llvm.loop.isvectorized", i32 1}
!4 = distinct !{!4, !5, !3}
!5 = !{!"llvm.loop.unroll.runtime.disable"}
