; ModuleID = '../../third_party/blink/renderer/modules/webgl/webgl_webcodecs_video_frame.cc'
source_filename = "../../third_party/blink/renderer/modules/webgl/webgl_webcodecs_video_frame.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.base::TaskTraits" = type { %"struct.base::TaskTraitsExtensionStorage", i8, i8, i8, i8, i8, i8 }
%"struct.base::TaskTraitsExtensionStorage" = type { i8, %"struct.std::__1::array.688" }
%"struct.std::__1::array.688" = type { [8 x i8] }
%"class.blink::AtomicEntryFlag" = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.6" }
%"struct.std::__1::__atomic_base.6" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"struct.blink::WrapperTypeInfo" = type { i16, void (%"class.v8::Isolate"*, %"class.blink::DOMWrapperWorld"*, %"class.v8::Template"*)*, void (%"class.v8::Context"*, %"class.blink::DOMWrapperWorld"*, %"class.v8::Object"*, %"class.v8::Object"*, %"class.v8::Object"*, %"class.v8::Template"*, i64)*, i8*, %"struct.blink::WrapperTypeInfo"*, i8 }
%"class.v8::Isolate" = type { i8 }
%"class.blink::DOMWrapperWorld" = type { %"class.WTF::RefCounted.296", i32, i32, %"class.blink::Persistent" }
%"class.WTF::RefCounted.296" = type { %"class.base::RefCounted.297" }
%"class.base::RefCounted.297" = type { %"class.base::subtle::RefCountedBase" }
%"class.base::subtle::RefCountedBase" = type { i32 }
%"class.blink::Persistent" = type { %"class.blink::PersistentBase" }
%"class.blink::PersistentBase" = type { %"class.blink::DOMDataStore"*, %"class.blink::PersistentNodePtr" }
%"class.blink::DOMDataStore" = type { i32 (...)**, i8, [7 x i8], %"class.blink::HeapHashMap" }
%"class.blink::HeapHashMap" = type { %"class.WTF::HashMap.302" }
%"class.WTF::HashMap.302" = type { %"class.WTF::HashTable.303" }
%"class.WTF::HashTable.303" = type <{ %"struct.WTF::KeyValuePair.305"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.305" = type { %"class.blink::WeakMember.306", %"class.blink::TraceWrapperV8Reference" }
%"class.blink::WeakMember.306" = type { %"class.blink::MemberBase.307" }
%"class.blink::MemberBase.307" = type { %"class.blink::ScriptWrappable"* }
%"class.blink::ScriptWrappable" = type { %"class.blink::NameClient", %"class.blink::TraceWrapperV8Reference" }
%"class.blink::NameClient" = type { i32 (...)** }
%"class.blink::TraceWrapperV8Reference" = type { %"class.v8::TracedReference" }
%"class.v8::TracedReference" = type { %"class.v8::BasicTracedReference" }
%"class.v8::BasicTracedReference" = type { %"class.v8::TracedReferenceBase" }
%"class.v8::TracedReferenceBase" = type { i64* }
%"class.blink::PersistentNodePtr" = type { %"class.blink::PersistentNode"* }
%"class.blink::PersistentNode" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"class.blink::Visitor" = type { i32 (...)**, %"class.blink::ThreadState"* }
%"class.blink::ThreadState" = type <{ %"class.std::__1::unique_ptr.308", i32, [4 x i8], %"class.std::__1::unique_ptr.446", %"class.std::__1::unique_ptr.446", i8**, i8, i8, i8, i8, i8, i8, [2 x i8], i64, i64, i32, i32, i32, [4 x i8], %"class.WTF::Deque.452", %"class.v8::Isolate"*, void (%"class.v8::Isolate"*, %"class.v8::EmbedderGraph"*, i8*)*, %"class.std::__1::unique_ptr.458", %"class.std::__1::unique_ptr.464", %"struct.blink::ThreadState::GCData", %"class.std::__1::unique_ptr.476", %"class.std::__1::unique_ptr.482", %"class.base::JobHandle", %"class.base::JobHandle", %"struct.std::__1::atomic.489", [7 x i8], i64, i8, [7 x i8], i64, %"class.base::TimeTicks", i8, i8, [6 x i8] }>
%"class.std::__1::unique_ptr.308" = type { %"class.std::__1::__compressed_pair.309" }
%"class.std::__1::__compressed_pair.309" = type { %"struct.std::__1::__compressed_pair_elem.310" }
%"struct.std::__1::__compressed_pair_elem.310" = type { %"class.blink::ThreadHeap"* }
%"class.blink::ThreadHeap" = type { %"class.blink::ThreadState"*, %"class.std::__1::unique_ptr.311", %"class.std::__1::unique_ptr.317", %"class.std::__1::unique_ptr.323", %"class.std::__1::unique_ptr.329", %"class.std::__1::unique_ptr.335", %"class.std::__1::unique_ptr.341", %"class.std::__1::unique_ptr.352", %"class.std::__1::unique_ptr.359", %"class.std::__1::unique_ptr.359", %"class.std::__1::unique_ptr.366", %"class.std::__1::unique_ptr.373", %"class.std::__1::unique_ptr.380", %"class.std::__1::unique_ptr.380", %"class.std::__1::unique_ptr.387", %"class.std::__1::unique_ptr.394", %"class.std::__1::unique_ptr.401", %"class.std::__1::unique_ptr.426", %"struct.blink::ThreadHeap::LastAllocatedRegion", [9 x %"class.blink::BaseArena"*], i64, i64 }
%"class.std::__1::unique_ptr.311" = type { %"class.std::__1::__compressed_pair.312" }
%"class.std::__1::__compressed_pair.312" = type { %"struct.std::__1::__compressed_pair_elem.313" }
%"struct.std::__1::__compressed_pair_elem.313" = type { %"class.blink::ThreadHeapStatsCollector"* }
%"class.blink::ThreadHeapStatsCollector" = type opaque
%"class.std::__1::unique_ptr.317" = type { %"class.std::__1::__compressed_pair.318" }
%"class.std::__1::__compressed_pair.318" = type { %"struct.std::__1::__compressed_pair_elem.319" }
%"struct.std::__1::__compressed_pair_elem.319" = type { %"class.blink::RegionTree"* }
%"class.blink::RegionTree" = type opaque
%"class.std::__1::unique_ptr.323" = type { %"class.std::__1::__compressed_pair.324" }
%"class.std::__1::__compressed_pair.324" = type { %"struct.std::__1::__compressed_pair_elem.325" }
%"struct.std::__1::__compressed_pair_elem.325" = type { %"class.blink::PageBloomFilter"* }
%"class.blink::PageBloomFilter" = type opaque
%"class.std::__1::unique_ptr.329" = type { %"class.std::__1::__compressed_pair.330" }
%"class.std::__1::__compressed_pair.330" = type { %"struct.std::__1::__compressed_pair_elem.331" }
%"struct.std::__1::__compressed_pair_elem.331" = type { %"class.blink::PagePool"* }
%"class.blink::PagePool" = type opaque
%"class.std::__1::unique_ptr.335" = type { %"class.std::__1::__compressed_pair.336" }
%"class.std::__1::__compressed_pair.336" = type { %"struct.std::__1::__compressed_pair_elem.337" }
%"struct.std::__1::__compressed_pair_elem.337" = type { %"class.blink::ProcessHeapReporter"* }
%"class.blink::ProcessHeapReporter" = type opaque
%"class.std::__1::unique_ptr.341" = type { %"class.std::__1::__compressed_pair.342" }
%"class.std::__1::__compressed_pair.342" = type { %"struct.std::__1::__compressed_pair_elem.343" }
%"struct.std::__1::__compressed_pair_elem.343" = type { %"class.blink::Worklist"* }
%"class.blink::Worklist" = type { [4 x %"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, i64, [512 x %"struct.blink::TraceDescriptor"] }
%"struct.blink::TraceDescriptor" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"struct.std::__1::atomic.344" }
%"class.base::Lock" = type { %"class.base::internal::LockImpl" }
%"class.base::internal::LockImpl" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"struct.std::__1::atomic.344" = type { %"struct.std::__1::__atomic_base.345" }
%"struct.std::__1::__atomic_base.345" = type { %"struct.std::__1::__atomic_base.346" }
%"struct.std::__1::__atomic_base.346" = type { %"struct.std::__1::__cxx_atomic_impl.347" }
%"struct.std::__1::__cxx_atomic_impl.347" = type { %"struct.std::__1::__cxx_atomic_base_impl.348" }
%"struct.std::__1::__cxx_atomic_base_impl.348" = type { i64 }
%"class.std::__1::unique_ptr.352" = type { %"class.std::__1::__compressed_pair.353" }
%"class.std::__1::__compressed_pair.353" = type { %"struct.std::__1::__compressed_pair_elem.354" }
%"struct.std::__1::__compressed_pair_elem.354" = type { %"class.blink::Worklist.355"* }
%"class.blink::Worklist.355" = type { [4 x %"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"struct.std::__1::atomic.344" }
%"class.std::__1::unique_ptr.359" = type { %"class.std::__1::__compressed_pair.360" }
%"class.std::__1::__compressed_pair.360" = type { %"struct.std::__1::__compressed_pair_elem.361" }
%"struct.std::__1::__compressed_pair_elem.361" = type { %"class.blink::Worklist.362"* }
%"class.blink::Worklist.362" = type { [4 x %"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"class.blink::Worklist<const void *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *, 16, 4>::Segment" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, i64, [16 x i8*] }
%"class.blink::Worklist<const void *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"struct.std::__1::atomic.344" }
%"class.std::__1::unique_ptr.366" = type { %"class.std::__1::__compressed_pair.367" }
%"class.std::__1::__compressed_pair.367" = type { %"struct.std::__1::__compressed_pair_elem.368" }
%"struct.std::__1::__compressed_pair_elem.368" = type { %"class.blink::Worklist.369"* }
%"class.blink::Worklist.369" = type { [4 x %"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.344" }
%"class.std::__1::unique_ptr.373" = type { %"class.std::__1::__compressed_pair.374" }
%"class.std::__1::__compressed_pair.374" = type { %"struct.std::__1::__compressed_pair_elem.375" }
%"struct.std::__1::__compressed_pair_elem.375" = type { %"class.blink::Worklist.376"* }
%"class.blink::Worklist.376" = type { [4 x %"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *const *, 256, 4>::Segment" = type opaque
%"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"struct.std::__1::atomic.344" }
%"class.std::__1::unique_ptr.380" = type { %"class.std::__1::__compressed_pair.381" }
%"class.std::__1::__compressed_pair.381" = type { %"struct.std::__1::__compressed_pair_elem.382" }
%"struct.std::__1::__compressed_pair_elem.382" = type { %"class.blink::Worklist.383"* }
%"class.blink::Worklist.383" = type { [4 x %"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.344" }
%"class.std::__1::unique_ptr.387" = type { %"class.std::__1::__compressed_pair.388" }
%"class.std::__1::__compressed_pair.388" = type { %"struct.std::__1::__compressed_pair_elem.389" }
%"struct.std::__1::__compressed_pair_elem.389" = type { %"class.blink::Worklist.390"* }
%"class.blink::Worklist.390" = type { [4 x %"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment" = type opaque
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"struct.std::__1::atomic.344" }
%"class.std::__1::unique_ptr.394" = type { %"class.std::__1::__compressed_pair.395" }
%"class.std::__1::__compressed_pair.395" = type { %"struct.std::__1::__compressed_pair_elem.396" }
%"struct.std::__1::__compressed_pair_elem.396" = type { %"class.blink::Worklist.397"* }
%"class.blink::Worklist.397" = type { [4 x %"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, i64, [64 x %"struct.blink::NotSafeToConcurrentlyTraceItem"] }
%"struct.blink::NotSafeToConcurrentlyTraceItem" = type { %"struct.blink::TraceDescriptor", i64 }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.344" }
%"class.std::__1::unique_ptr.401" = type { %"class.std::__1::__compressed_pair.402" }
%"class.std::__1::__compressed_pair.402" = type { %"struct.std::__1::__compressed_pair_elem.403" }
%"struct.std::__1::__compressed_pair_elem.403" = type { %"class.blink::WeakContainersWorklist"* }
%"class.blink::WeakContainersWorklist" = type { %"class.WTF::Mutex", %"class.std::__1::unordered_set" }
%"class.WTF::Mutex" = type { %"class.WTF::MutexBase" }
%"class.WTF::MutexBase" = type { %"struct.WTF::PlatformMutex" }
%"struct.WTF::PlatformMutex" = type { %union.pthread_mutex_t }
%"class.std::__1::unordered_set" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.404", %"class.std::__1::__compressed_pair.412", %"class.std::__1::__compressed_pair.417", %"class.std::__1::__compressed_pair.419", [4 x i8] }>
%"class.std::__1::unique_ptr.404" = type { %"class.std::__1::__compressed_pair.405" }
%"class.std::__1::__compressed_pair.405" = type { %"struct.std::__1::__compressed_pair_elem.406", %"struct.std::__1::__compressed_pair_elem.407" }
%"struct.std::__1::__compressed_pair_elem.406" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.407" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.408" }
%"class.std::__1::__compressed_pair.408" = type { %"struct.std::__1::__compressed_pair_elem.160" }
%"struct.std::__1::__compressed_pair_elem.160" = type { i64 }
%"class.std::__1::__compressed_pair.412" = type { %"struct.std::__1::__compressed_pair_elem.413" }
%"struct.std::__1::__compressed_pair_elem.413" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.417" = type { %"struct.std::__1::__compressed_pair_elem.160" }
%"class.std::__1::__compressed_pair.419" = type { %"struct.std::__1::__compressed_pair_elem.420" }
%"struct.std::__1::__compressed_pair_elem.420" = type { float }
%"class.std::__1::unique_ptr.426" = type { %"class.std::__1::__compressed_pair.427" }
%"class.std::__1::__compressed_pair.427" = type { %"struct.std::__1::__compressed_pair_elem.428" }
%"struct.std::__1::__compressed_pair_elem.428" = type { %"class.blink::HeapCompact"* }
%"class.blink::HeapCompact" = type <{ %"class.blink::ThreadHeap"*, %"class.std::__1::unique_ptr.429", i8, [7 x i8], i64, i64, i32, [4 x i8], i64, i8, [7 x i8] }>
%"class.std::__1::unique_ptr.429" = type { %"class.std::__1::__compressed_pair.430" }
%"class.std::__1::__compressed_pair.430" = type { %"struct.std::__1::__compressed_pair_elem.431" }
%"struct.std::__1::__compressed_pair_elem.431" = type { %"class.blink::HeapCompact::MovableObjectFixups"* }
%"class.blink::HeapCompact::MovableObjectFixups" = type opaque
%"struct.blink::ThreadHeap::LastAllocatedRegion" = type { i8*, i64 }
%"class.blink::BaseArena" = type <{ i32 (...)**, %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::ThreadState"*, i32, [4 x i8] }>
%"class.blink::PageStackThreadSafe" = type { %"class.blink::PageStack", %"class.WTF::Mutex" }
%"class.blink::PageStack" = type { %"class.WTF::Vector.438" }
%"class.WTF::Vector.438" = type { %"class.WTF::VectorBuffer.439" }
%"class.WTF::VectorBuffer.439" = type { %"class.WTF::VectorBufferBase.440" }
%"class.WTF::VectorBufferBase.440" = type { %"class.blink::BasePage"**, i32, i32 }
%"class.blink::BasePage" = type <{ i32 (...)**, %"class.blink::PageMemory"*, %"class.blink::BaseArena"*, %"class.blink::ThreadState"*, i64, i8, i8, i8, [5 x i8] }>
%"class.blink::PageMemory" = type opaque
%"class.std::__1::unique_ptr.446" = type { %"class.std::__1::__compressed_pair.447" }
%"class.std::__1::__compressed_pair.447" = type { %"struct.std::__1::__compressed_pair_elem.448" }
%"struct.std::__1::__compressed_pair_elem.448" = type { %"class.blink::PersistentRegion"* }
%"class.blink::PersistentRegion" = type { %"class.blink::PersistentRegionBase" }
%"class.blink::PersistentRegionBase" = type { %"class.blink::PersistentNode"*, %"struct.blink::PersistentNodeSlots"* }
%"struct.blink::PersistentNodeSlots" = type { %"struct.blink::PersistentNodeSlots"*, [256 x %"class.blink::PersistentNode"] }
%"class.WTF::Deque.452" = type { %"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer", i32, i32 }
%"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer" = type { %"class.WTF::VectorBuffer.455" }
%"class.WTF::VectorBuffer.455" = type { %"class.WTF::VectorBufferBase.456" }
%"class.WTF::VectorBufferBase.456" = type { %"struct.std::__1::pair.457"*, i32, i32 }
%"struct.std::__1::pair.457" = type { i8*, i1 (%"class.blink::LivenessBroker"*, i8*)* }
%"class.blink::LivenessBroker" = type { i8 }
%"class.v8::EmbedderGraph" = type opaque
%"class.std::__1::unique_ptr.458" = type { %"class.std::__1::__compressed_pair.459" }
%"class.std::__1::__compressed_pair.459" = type { %"struct.std::__1::__compressed_pair_elem.460" }
%"struct.std::__1::__compressed_pair_elem.460" = type { %"class.blink::UnifiedHeapController"* }
%"class.blink::UnifiedHeapController" = type opaque
%"class.std::__1::unique_ptr.464" = type { %"class.std::__1::__compressed_pair.465" }
%"class.std::__1::__compressed_pair.465" = type { %"struct.std::__1::__compressed_pair_elem.466" }
%"struct.std::__1::__compressed_pair_elem.466" = type { %"class.v8::EmbedderRootsHandler"* }
%"class.v8::EmbedderRootsHandler" = type { i32 (...)** }
%"struct.blink::ThreadState::GCData" = type { i32, i32, i32, i32, %"class.std::__1::unique_ptr.470" }
%"class.std::__1::unique_ptr.470" = type { %"class.std::__1::__compressed_pair.471" }
%"class.std::__1::__compressed_pair.471" = type { %"struct.std::__1::__compressed_pair_elem.472" }
%"struct.std::__1::__compressed_pair_elem.472" = type { %"class.blink::MarkingVisitor"* }
%"class.blink::MarkingVisitor" = type { %"class.blink::MarkingVisitorBase", %"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" }
%"class.blink::MarkingVisitorBase" = type { %"class.blink::Visitor", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View", %"class.blink::Worklist<const void *, 16, 4>::View", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View", %"class.blink::Worklist<const void *const *, 256, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::WeakContainersWorklist"*, i64, i32, i32 }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View" = type <{ %"class.blink::Worklist"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View" = type <{ %"class.blink::Worklist.355"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *, 16, 4>::View" = type <{ %"class.blink::Worklist.362"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View" = type <{ %"class.blink::Worklist.369"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *const *, 256, 4>::View" = type <{ %"class.blink::Worklist.376"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View" = type <{ %"class.blink::Worklist.383"*, i32, [4 x i8] }>
%"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" = type { %"class.std::__1::vector.557", i64 }
%"class.std::__1::vector.557" = type { %"class.std::__1::__vector_base.558" }
%"class.std::__1::__vector_base.558" = type { %"class.blink::HeapObjectHeader"**, %"class.blink::HeapObjectHeader"**, %"class.std::__1::__compressed_pair.559" }
%"class.blink::HeapObjectHeader" = type { i32, i16, i16 }
%"class.std::__1::__compressed_pair.559" = type { %"struct.std::__1::__compressed_pair_elem.560" }
%"struct.std::__1::__compressed_pair_elem.560" = type { %"class.blink::HeapObjectHeader"** }
%"class.std::__1::unique_ptr.476" = type { %"class.std::__1::__compressed_pair.477" }
%"class.std::__1::__compressed_pair.477" = type { %"struct.std::__1::__compressed_pair_elem.478" }
%"struct.std::__1::__compressed_pair_elem.478" = type { %"class.blink::ThreadState::IncrementalMarkingScheduler"* }
%"class.blink::ThreadState::IncrementalMarkingScheduler" = type opaque
%"class.std::__1::unique_ptr.482" = type { %"class.std::__1::__compressed_pair.483" }
%"class.std::__1::__compressed_pair.483" = type { %"struct.std::__1::__compressed_pair_elem.484" }
%"struct.std::__1::__compressed_pair_elem.484" = type { %"class.blink::MarkingSchedulingOracle"* }
%"class.blink::MarkingSchedulingOracle" = type opaque
%"class.base::JobHandle" = type { %class.scoped_refptr.488 }
%class.scoped_refptr.488 = type { %"class.base::internal::JobTaskSource"* }
%"class.base::internal::JobTaskSource" = type opaque
%"struct.std::__1::atomic.489" = type { %"struct.std::__1::__atomic_base.490" }
%"struct.std::__1::__atomic_base.490" = type { %"struct.std::__1::__cxx_atomic_impl.491" }
%"struct.std::__1::__cxx_atomic_impl.491" = type { %"struct.std::__1::__cxx_atomic_base_impl.492" }
%"struct.std::__1::__cxx_atomic_base_impl.492" = type { i8 }
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.v8::Template" = type { i8 }
%"class.v8::Context" = type { i8 }
%"class.v8::Object" = type { i8 }
%"class.WTF::ThreadSpecific" = type { %"class.blink::ThreadState"**, %"class.base::ThreadLocalStorage::Slot" }
%"class.base::ThreadLocalStorage::Slot" = type { i32, i32 }
%"struct.blink::GCInfo" = type { void (%"class.blink::Visitor"*, i8*)*, void (i8*)*, { i8*, i8 } (i8*)*, i8 }
%"class.blink::GCInfoTable" = type { %"struct.blink::GCInfo"**, i32, i32, %"class.WTF::Mutex" }
%"class.blink::WebGLWebCodecsVideoFrame" = type { %"class.blink::WebGLExtension", %"class.std::__1::bitset", %"struct.std::__1::array", %"class.WTF::HashMap", %"class.std::__1::unique_ptr", %class.scoped_refptr.5, %class.scoped_refptr.7, %class.scoped_refptr.8 }
%"class.blink::WebGLExtension" = type { %"class.blink::ScriptWrappable", %"class.blink::WeakMember" }
%"class.blink::WeakMember" = type { %"class.blink::MemberBase" }
%"class.blink::MemberBase" = type { %"class.blink::WebGLRenderingContextBase"* }
%"class.std::__1::bitset" = type { %"class.std::__1::__bitset" }
%"class.std::__1::__bitset" = type { i64 }
%"struct.std::__1::array" = type { [34 x %"struct.std::__1::array.0"] }
%"struct.std::__1::array.0" = type { [4 x %"class.std::__1::basic_string"] }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.WTF::HashMap" = type { %"class.WTF::HashTable" }
%"class.WTF::HashTable" = type <{ %"struct.WTF::KeyValuePair"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair" = type { i32, %class.scoped_refptr.8 }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair.2" }
%"class.std::__1::__compressed_pair.2" = type { %"struct.std::__1::__compressed_pair_elem.3" }
%"struct.std::__1::__compressed_pair_elem.3" = type { %"class.media::GpuMemoryBufferVideoFramePool"* }
%"class.media::GpuMemoryBufferVideoFramePool" = type { i32 (...)**, %class.scoped_refptr }
%class.scoped_refptr = type { %"class.media::GpuMemoryBufferVideoFramePool::PoolImpl"* }
%"class.media::GpuMemoryBufferVideoFramePool::PoolImpl" = type opaque
%class.scoped_refptr.5 = type { %"class.base::SequencedTaskRunner"* }
%"class.base::SequencedTaskRunner" = type { %"class.base::TaskRunner.base", [4 x i8] }
%"class.base::TaskRunner.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe" }>
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic" }
%class.scoped_refptr.7 = type { %"class.base::SingleThreadTaskRunner"* }
%"class.base::SingleThreadTaskRunner" = type { %"class.base::SequencedTaskRunner.base", [4 x i8] }
%"class.base::SequencedTaskRunner.base" = type { %"class.base::TaskRunner.base" }
%class.scoped_refptr.8 = type { %"class.media::VideoFrame"* }
%"class.media::VideoFrame" = type { i32 (...)**, %"class.base::RefCountedThreadSafe.9", %"class.media::VideoFrameLayout", %class.scoped_refptr.8, i32, %"class.gfx::Rect", %"class.gfx::Size", [4 x i8*], [4 x %"struct.gpu::MailboxHolder"], %"class.base::OnceCallback", %"class.base::UnsafeSharedMemoryRegion"*, %"class.base::UnsafeSharedMemoryRegion", %"class.base::WritableSharedMemoryMapping", %"class.std::__1::unique_ptr.17", %class.scoped_refptr.23, %"class.std::__1::vector.24", %"class.base::TimeDelta", %"class.base::Lock", %"struct.gpu::SyncToken", %"struct.media::VideoFrameMetadata", i32, %"class.gfx::ColorSpace", %"class.absl::optional.68", [4 x i8], %"class.absl::optional.73", %"class.std::__1::unique_ptr.78" }
%"class.base::RefCountedThreadSafe.9" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.media::VideoFrameLayout" = type { i32, %"class.gfx::Size", %"class.std::__1::vector", i8, i64, i64 }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"struct.media::ColorPlaneLayout"*, %"struct.media::ColorPlaneLayout"*, %"class.std::__1::__compressed_pair.10" }
%"struct.media::ColorPlaneLayout" = type { i32, i64, i64 }
%"class.std::__1::__compressed_pair.10" = type { %"struct.std::__1::__compressed_pair_elem.11" }
%"struct.std::__1::__compressed_pair_elem.11" = type { %"struct.media::ColorPlaneLayout"* }
%"class.gfx::Rect" = type { %"class.gfx::Point", %"class.gfx::Size" }
%"class.gfx::Point" = type { i32, i32 }
%"class.gfx::Size" = type { i32, i32 }
%"struct.gpu::MailboxHolder" = type <{ %"struct.gpu::Mailbox", %"struct.gpu::SyncToken", i32, [4 x i8] }>
%"struct.gpu::Mailbox" = type { [16 x i8] }
%"class.base::OnceCallback" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr.15 }
%class.scoped_refptr.15 = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe.16", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe.16" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::UnsafeSharedMemoryRegion" = type { %"class.base::subtle::PlatformSharedMemoryRegion" }
%"class.base::subtle::PlatformSharedMemoryRegion" = type { %"struct.base::subtle::ScopedFDPair", i32, i64, %"class.base::UnguessableToken" }
%"struct.base::subtle::ScopedFDPair" = type { %"class.base::ScopedGeneric", %"class.base::ScopedGeneric" }
%"class.base::ScopedGeneric" = type <{ i32 (...)**, %"struct.base::ScopedGeneric<int, base::internal::ScopedFDCloseTraits>::Data", i8, [3 x i8] }>
%"struct.base::ScopedGeneric<int, base::internal::ScopedFDCloseTraits>::Data" = type { i32 }
%"class.base::UnguessableToken" = type { %"class.base::Token" }
%"class.base::Token" = type { i64, i64 }
%"class.base::WritableSharedMemoryMapping" = type { %"class.base::SharedMemoryMapping" }
%"class.base::SharedMemoryMapping" = type { i32 (...)**, i8*, i64, i64, %"class.base::UnguessableToken" }
%"class.std::__1::unique_ptr.17" = type { %"class.std::__1::__compressed_pair.18" }
%"class.std::__1::__compressed_pair.18" = type { %"struct.std::__1::__compressed_pair_elem.19" }
%"struct.std::__1::__compressed_pair_elem.19" = type { %"class.gfx::GpuMemoryBuffer"* }
%"class.gfx::GpuMemoryBuffer" = type { i32 (...)** }
%class.scoped_refptr.23 = type { %"class.media::VideoFrame::DmabufHolder"* }
%"class.media::VideoFrame::DmabufHolder" = type opaque
%"class.std::__1::vector.24" = type { %"class.std::__1::__vector_base.25" }
%"class.std::__1::__vector_base.25" = type { %"class.base::OnceCallback.26"*, %"class.base::OnceCallback.26"*, %"class.std::__1::__compressed_pair.27" }
%"class.base::OnceCallback.26" = type { %"class.base::internal::CallbackBase" }
%"class.std::__1::__compressed_pair.27" = type { %"struct.std::__1::__compressed_pair_elem.28" }
%"struct.std::__1::__compressed_pair_elem.28" = type { %"class.base::OnceCallback.26"* }
%"class.base::TimeDelta" = type { i64 }
%"struct.gpu::SyncToken" = type { i8, i8, %"class.util::IdType", i64 }
%"class.util::IdType" = type { %"class.base::StrongAlias" }
%"class.base::StrongAlias" = type { i64 }
%"struct.media::VideoFrameMetadata" = type { i8, %"class.absl::optional", %"class.absl::optional", %"class.absl::optional.33", %"class.absl::optional.38", %"class.absl::optional.43", i8, %"class.absl::optional.48", %"class.absl::optional.53", i8, %"class.absl::optional", i8, [3 x i8], %"class.absl::optional.58", i8, i8, i8, i8, i32, %"class.absl::optional.63", i8, %"class.absl::optional.53", %"class.absl::optional.53", %"class.absl::optional.53", %"class.absl::optional.53", %"class.absl::optional.53", %"class.absl::optional", %"class.absl::optional", %"class.absl::optional.48", %"class.absl::optional.53", %"class.absl::optional", %"class.absl::optional.48", %"class.absl::optional.33" }
%"class.absl::optional.38" = type { %"class.absl::optional_internal::optional_data.39" }
%"class.absl::optional_internal::optional_data.39" = type { %"class.absl::optional_internal::optional_data_base.40" }
%"class.absl::optional_internal::optional_data_base.40" = type { %"class.absl::optional_internal::optional_data_dtor_base.41" }
%"class.absl::optional_internal::optional_data_dtor_base.41" = type { i8, %union.anon.42 }
%union.anon.42 = type { %"class.gfx::Rect" }
%"class.absl::optional.43" = type { %"class.absl::optional_internal::optional_data.44" }
%"class.absl::optional_internal::optional_data.44" = type { %"class.absl::optional_internal::optional_data_base.45" }
%"class.absl::optional_internal::optional_data_base.45" = type { %"class.absl::optional_internal::optional_data_dtor_base.46" }
%"class.absl::optional_internal::optional_data_dtor_base.46" = type { i8, %union.anon.47 }
%union.anon.47 = type { i32 }
%"class.absl::optional.58" = type { %"class.absl::optional_internal::optional_data.59" }
%"class.absl::optional_internal::optional_data.59" = type { %"class.absl::optional_internal::optional_data_base.60" }
%"class.absl::optional_internal::optional_data_base.60" = type { %"class.absl::optional_internal::optional_data_dtor_base.61" }
%"class.absl::optional_internal::optional_data_dtor_base.61" = type { i8, [3 x i8], %union.anon.62 }
%union.anon.62 = type { %"struct.media::VideoTransformation" }
%"struct.media::VideoTransformation" = type <{ i32, i8, [3 x i8] }>
%"class.absl::optional.63" = type { %"class.absl::optional_internal::optional_data.64" }
%"class.absl::optional_internal::optional_data.64" = type { %"class.absl::optional_internal::optional_data_base.65" }
%"class.absl::optional_internal::optional_data_base.65" = type { %"class.absl::optional_internal::optional_data_dtor_base.66" }
%"class.absl::optional_internal::optional_data_dtor_base.66" = type { i8, %union.anon.67 }
%union.anon.67 = type { %"class.base::UnguessableToken" }
%"class.absl::optional.53" = type { %"class.absl::optional_internal::optional_data.54" }
%"class.absl::optional_internal::optional_data.54" = type { %"class.absl::optional_internal::optional_data_base.55" }
%"class.absl::optional_internal::optional_data_base.55" = type { %"class.absl::optional_internal::optional_data_dtor_base.56" }
%"class.absl::optional_internal::optional_data_dtor_base.56" = type { i8, %union.anon.57 }
%union.anon.57 = type { double }
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon.32 }
%union.anon.32 = type { %"class.base::TimeTicks" }
%"class.absl::optional.48" = type { %"class.absl::optional_internal::optional_data.49" }
%"class.absl::optional_internal::optional_data.49" = type { %"class.absl::optional_internal::optional_data_base.50" }
%"class.absl::optional_internal::optional_data_base.50" = type { %"class.absl::optional_internal::optional_data_dtor_base.51" }
%"class.absl::optional_internal::optional_data_dtor_base.51" = type { i8, %union.anon.52 }
%union.anon.52 = type { %"class.base::TimeDelta" }
%"class.absl::optional.33" = type { %"class.absl::optional_internal::optional_data.34" }
%"class.absl::optional_internal::optional_data.34" = type { %"class.absl::optional_internal::optional_data_base.35" }
%"class.absl::optional_internal::optional_data_base.35" = type { %"class.absl::optional_internal::optional_data_dtor_base.36" }
%"class.absl::optional_internal::optional_data_dtor_base.36" = type { i8, %union.anon.37 }
%union.anon.37 = type { i32 }
%"class.gfx::ColorSpace" = type { i8, i8, i8, i8, [9 x float], [7 x float] }
%"class.absl::optional.68" = type { %"class.absl::optional_internal::optional_data.69" }
%"class.absl::optional_internal::optional_data.69" = type { %"class.absl::optional_internal::optional_data_base.70" }
%"class.absl::optional_internal::optional_data_base.70" = type { %"class.absl::optional_internal::optional_data_dtor_base.71" }
%"class.absl::optional_internal::optional_data_dtor_base.71" = type { i8, %union.anon.72 }
%union.anon.72 = type { %"struct.gfx::HDRMetadata" }
%"struct.gfx::HDRMetadata" = type { %"struct.gfx::MasteringMetadata", i32, i32 }
%"struct.gfx::MasteringMetadata" = type { %"class.gfx::PointF", %"class.gfx::PointF", %"class.gfx::PointF", %"class.gfx::PointF", float, float }
%"class.gfx::PointF" = type { float, float }
%"class.absl::optional.73" = type { %"class.absl::optional_internal::optional_data.74" }
%"class.absl::optional_internal::optional_data.74" = type { %"class.absl::optional_internal::optional_data_base.75" }
%"class.absl::optional_internal::optional_data_base.75" = type { %"class.absl::optional_internal::optional_data_dtor_base.76" }
%"class.absl::optional_internal::optional_data_dtor_base.76" = type { i8, [7 x i8], %union.anon.77 }
%union.anon.77 = type { %"struct.gpu::VulkanYCbCrInfo" }
%"struct.gpu::VulkanYCbCrInfo" = type <{ i32, [4 x i8], i64, i32, i32, i32, i32, i32, [4 x i8] }>
%"class.std::__1::unique_ptr.78" = type { %"class.std::__1::__compressed_pair.79" }
%"class.std::__1::__compressed_pair.79" = type { %"struct.std::__1::__compressed_pair_elem.80" }
%"struct.std::__1::__compressed_pair_elem.80" = type { i8* }
%"class.blink::WebGLRenderingContextBase" = type <{ %"class.blink::CanvasRenderingContext.base", [7 x i8], %"class.blink::DrawingBuffer::Client", %"class.blink::NoAllocDirectCallHost", %class.scoped_refptr.194, %"class.blink::Member.247", i8, i8, [2 x i8], i32, i32, [4 x i8], %"class.blink::HeapTaskRunnerTimer", i8, [7 x i8], %"class.blink::HeapTaskRunnerTimer", %class.scoped_refptr.7, i8, i8, i8, [5 x i8], %"class.blink::Member.250", %"class.blink::Member.253", %"class.blink::Member.253", %"class.WTF::Vector.267", i32, [4 x i8], %"class.blink::Member.272", %"class.blink::Member.274", %"class.blink::Member.276", i8, [7 x i8], %"class.blink::Member.278", %"class.blink::HeapVector.506", i32, [4 x i8], %"class.WTF::Vector.515", %"class.blink::WebGLRenderingContextBase::LRUCanvasResourceProviderCache", %"class.blink::WebGLRenderingContextBase::LRUCanvasResourceProviderCache", i32, i32, i32, i32, i32, [2 x i32], i32, i32, i32, i32, i32, i32, i8, i8, [2 x i8], i32, i32, i32, i8, i8, [2 x i8], i32, i32, i32, i32, [4 x float], i8, [3 x i8], [4 x i32], float, i32, [4 x i8], i8, i8, [2 x i8], i32, i32, i32, i32, i32, i32, i8, i8, i8, i8, i32, i32, %"class.std::__1::unique_ptr.229", [45 x i8], [3 x i8], %"class.blink::HeapVector.525", %"class.WTF::HashSet", %"class.WTF::Vector.515", %"class.WTF::Vector.515", i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, [6 x i8], %"class.WTF::HashSet.533", %"class.WTF::HashSet.533", %"class.WTF::HashSet.533", %"class.WTF::HashSet.533", %"class.WTF::HashSet.533", %"class.WTF::HashSet.533", %"class.WTF::HashSet.533", i32, i32, %"class.base::MRUCache.537", i32, i8, [3 x i8], %"class.blink::CanvasColorParams", [4 x i8] }>
%"class.blink::CanvasRenderingContext.base" = type <{ %"class.blink::ScriptWrappable", %"class.base::TaskObserver", %"class.blink::ThreadState::PrefinalizerRegistration", [7 x i8], %"class.blink::Member", %"class.blink::CanvasColorParams", [4 x i8], %"class.blink::CanvasContextCreationAttributesCore", i8 }>
%"class.base::TaskObserver" = type { i32 (...)** }
%"class.blink::ThreadState::PrefinalizerRegistration" = type { i8 }
%"class.blink::Member" = type { %"class.blink::MemberBase.82" }
%"class.blink::MemberBase.82" = type { %"class.blink::CanvasRenderingContextHost"* }
%"class.blink::CanvasRenderingContextHost" = type { %"class.blink::CanvasResourceHost.base", %"class.blink::CanvasImageSource", %"class.blink::GarbageCollectedMixin", i8, i8, i32 }
%"class.blink::CanvasResourceHost.base" = type <{ i32 (...)**, %"class.std::__1::unique_ptr.83", i32 }>
%"class.std::__1::unique_ptr.83" = type { %"class.std::__1::__compressed_pair.84" }
%"class.std::__1::__compressed_pair.84" = type { %"struct.std::__1::__compressed_pair_elem.85" }
%"struct.std::__1::__compressed_pair_elem.85" = type { %"class.blink::CanvasResourceProvider"* }
%"class.blink::CanvasResourceProvider" = type { %"class.blink::WebGraphicsContext3DProviderWrapper::DestructionObserver", %"class.base::CheckedObserver", %"class.blink::CanvasMemoryDumpClient", i32, %class.sk_sp, i32, %"class.base::WeakPtr", %"class.base::WeakPtr.94", %"class.blink::IntSize", i32, %"class.blink::CanvasResourceParams", i8, %"class.std::__1::unique_ptr.95", %"class.std::__1::unique_ptr.101", %"class.std::__1::unique_ptr.130", i8, i32, i32, i32, %"class.WTF::Vector", i8, i8, i64, i64, %"class.base::RepeatingCallback.157", %"class.blink::IdentifiabilityPaintOpDigest", %"class.base::WeakPtrFactory.178" }
%"class.blink::WebGraphicsContext3DProviderWrapper::DestructionObserver" = type { i32 (...)** }
%"class.base::CheckedObserver" = type { i32 (...)**, %"class.base::WeakPtrFactory" }
%"class.base::WeakPtrFactory" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.base::internal::WeakPtrFactoryBase" = type { %"class.base::internal::WeakReferenceOwner", i64 }
%"class.base::internal::WeakReferenceOwner" = type { %class.scoped_refptr.86 }
%class.scoped_refptr.86 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.base::internal::WeakReference::Flag" = type <{ %"class.base::RefCountedThreadSafe.87", %"class.base::AtomicFlag", [3 x i8] }>
%"class.base::RefCountedThreadSafe.87" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::AtomicFlag" = type { %"struct.std::__1::atomic.88" }
%"struct.std::__1::atomic.88" = type { %"struct.std::__1::__atomic_base.89" }
%"struct.std::__1::__atomic_base.89" = type { %"struct.std::__1::__atomic_base.90" }
%"struct.std::__1::__atomic_base.90" = type { %"struct.std::__1::__cxx_atomic_impl.91" }
%"struct.std::__1::__cxx_atomic_impl.91" = type { %"struct.std::__1::__cxx_atomic_base_impl.92" }
%"struct.std::__1::__cxx_atomic_base_impl.92" = type { i8 }
%"class.blink::CanvasMemoryDumpClient" = type { i32 (...)** }
%class.sk_sp = type { %class.SkSurface* }
%class.SkSurface = type { %class.SkRefCnt.base, %class.SkSurfaceProps, i32, i32, i32 }
%class.SkRefCnt.base = type { %class.SkRefCntBase.base }
%class.SkRefCntBase.base = type <{ i32 (...)**, %"struct.std::__1::atomic" }>
%class.SkSurfaceProps = type { i32, i32 }
%"class.base::WeakPtr" = type { %"class.base::internal::WeakPtrBase" }
%"class.base::internal::WeakPtrBase" = type { %"class.base::internal::WeakReference", i64 }
%"class.base::internal::WeakReference" = type { %class.scoped_refptr.93 }
%class.scoped_refptr.93 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.base::WeakPtr.94" = type { %"class.base::internal::WeakPtrBase" }
%"class.blink::IntSize" = type { i32, i32 }
%"class.blink::CanvasResourceParams" = type { i32, i32, i32 }
%"class.std::__1::unique_ptr.95" = type { %"class.std::__1::__compressed_pair.96" }
%"class.std::__1::__compressed_pair.96" = type { %"struct.std::__1::__compressed_pair_elem.97" }
%"struct.std::__1::__compressed_pair_elem.97" = type { %"class.blink::CanvasResourceProvider::CanvasImageProvider"* }
%"class.blink::CanvasResourceProvider::CanvasImageProvider" = type opaque
%"class.std::__1::unique_ptr.101" = type { %"class.std::__1::__compressed_pair.102" }
%"class.std::__1::__compressed_pair.102" = type { %"struct.std::__1::__compressed_pair_elem.103" }
%"struct.std::__1::__compressed_pair_elem.103" = type { %"class.cc::SkiaPaintCanvas"* }
%"class.cc::SkiaPaintCanvas" = type <{ %"class.cc::PaintCanvas", %class.SkCanvas*, %class.SkBitmap, %"class.std::__1::unique_ptr.121", %"class.cc::ImageProvider"*, %"struct.cc::SkiaPaintCanvas::ContextFlushes", i32, [4 x i8] }>
%"class.cc::PaintCanvas" = type { i32 (...)**, %"class.printing::MetafileSkia"*, %"class.paint_preview::PaintPreviewTracker"* }
%"class.printing::MetafileSkia" = type opaque
%"class.paint_preview::PaintPreviewTracker" = type opaque
%class.SkCanvas = type { i32 (...)**, %class.SkDeque, %"class.SkCanvas::MCRec"*, %class.sk_sp.104, [384 x i64], %class.sk_sp.105, %class.SkSurfaceProps, i32, %"class.std::__1::unique_ptr.106", %class.SkSurface_Base*, %struct.SkIRect, %struct.SkRect, %"class.std::__1::unique_ptr.112" }
%class.SkDeque = type { i8*, i8*, %"struct.SkDeque::Block"*, %"struct.SkDeque::Block"*, i64, i8*, i32, i32 }
%"struct.SkDeque::Block" = type opaque
%"class.SkCanvas::MCRec" = type opaque
%class.sk_sp.104 = type { %class.SkMarkerStack* }
%class.SkMarkerStack = type opaque
%class.sk_sp.105 = type { %class.SkBaseDevice* }
%class.SkBaseDevice = type opaque
%"class.std::__1::unique_ptr.106" = type { %"class.std::__1::__compressed_pair.107" }
%"class.std::__1::__compressed_pair.107" = type { %"struct.std::__1::__compressed_pair_elem.108" }
%"struct.std::__1::__compressed_pair_elem.108" = type { %class.SkRasterHandleAllocator* }
%class.SkRasterHandleAllocator = type { i32 (...)** }
%class.SkSurface_Base = type opaque
%struct.SkIRect = type { i32, i32, i32, i32 }
%struct.SkRect = type { float, float, float, float }
%"class.std::__1::unique_ptr.112" = type { %"class.std::__1::__compressed_pair.113" }
%"class.std::__1::__compressed_pair.113" = type { %"struct.std::__1::__compressed_pair_elem.114" }
%"struct.std::__1::__compressed_pair_elem.114" = type { %class.SkGlyphRunBuilder* }
%class.SkGlyphRunBuilder = type opaque
%class.SkBitmap = type { %class.sk_sp.118, %class.SkPixmap, %class.sk_sp.120 }
%class.sk_sp.118 = type { %class.SkPixelRef* }
%class.SkPixelRef = type opaque
%class.SkPixmap = type { i8*, i64, %struct.SkImageInfo }
%struct.SkImageInfo = type { %class.SkColorInfo, %struct.SkISize }
%class.SkColorInfo = type { %class.sk_sp.119, i32, i32 }
%class.sk_sp.119 = type { %class.SkColorSpace* }
%class.SkColorSpace = type <{ %class.SkNVRefCnt, i32, i32, %struct.skcms_TransferFunction, %struct.skcms_Matrix3x3, %struct.skcms_TransferFunction, %struct.skcms_Matrix3x3, %class.SkOnce, [3 x i8] }>
%class.SkNVRefCnt = type { %"struct.std::__1::atomic" }
%struct.skcms_TransferFunction = type { float, float, float, float, float, float, float }
%struct.skcms_Matrix3x3 = type { [3 x [3 x float]] }
%class.SkOnce = type { %"struct.std::__1::atomic.88" }
%struct.SkISize = type { i32, i32 }
%class.sk_sp.120 = type { %class.SkMipmap* }
%class.SkMipmap = type opaque
%"class.std::__1::unique_ptr.121" = type { %"class.std::__1::__compressed_pair.122" }
%"class.std::__1::__compressed_pair.122" = type { %"struct.std::__1::__compressed_pair_elem.123" }
%"struct.std::__1::__compressed_pair_elem.123" = type { %class.SkCanvas* }
%"class.cc::ImageProvider" = type { i32 (...)** }
%"struct.cc::SkiaPaintCanvas::ContextFlushes" = type { i8, i32 }
%"class.std::__1::unique_ptr.130" = type { %"class.std::__1::__compressed_pair.131" }
%"class.std::__1::__compressed_pair.131" = type { %"struct.std::__1::__compressed_pair_elem.132" }
%"struct.std::__1::__compressed_pair_elem.132" = type { %"class.blink::MemoryManagedPaintRecorder"* }
%"class.blink::MemoryManagedPaintRecorder" = type { %"class.cc::PaintRecorder", %"class.base::RepeatingCallback" }
%"class.cc::PaintRecorder" = type { i32 (...)**, %class.scoped_refptr.133, %"class.std::__1::unique_ptr.134" }
%class.scoped_refptr.133 = type { %"class.cc::DisplayItemList"* }
%"class.cc::DisplayItemList" = type opaque
%"class.std::__1::unique_ptr.134" = type { %"class.std::__1::__compressed_pair.135" }
%"class.std::__1::__compressed_pair.135" = type { %"struct.std::__1::__compressed_pair_elem.136" }
%"struct.std::__1::__compressed_pair_elem.136" = type { %"class.cc::RecordPaintCanvas"* }
%"class.cc::RecordPaintCanvas" = type { %"class.cc::PaintCanvas", %"class.cc::DisplayItemList"*, %"class.absl::optional.137", %struct.SkRect }
%"class.absl::optional.137" = type { %"class.absl::optional_internal::optional_data.138" }
%"class.absl::optional_internal::optional_data.138" = type { %"class.absl::optional_internal::optional_data_base.139" }
%"class.absl::optional_internal::optional_data_base.139" = type { %"class.absl::optional_internal::optional_data_dtor_base.140" }
%"class.absl::optional_internal::optional_data_dtor_base.140" = type { i8, %union.anon.141 }
%union.anon.141 = type { %class.SkNoDrawCanvas }
%class.SkNoDrawCanvas = type { %class.SkCanvasVirtualEnforcer }
%class.SkCanvasVirtualEnforcer = type { %class.SkCanvas }
%"class.base::RepeatingCallback" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::internal::CallbackBaseCopyable" = type { %"class.base::internal::CallbackBase" }
%"class.WTF::Vector" = type { %"class.WTF::VectorBuffer" }
%"class.WTF::VectorBuffer" = type { %"class.WTF::VectorBufferBase" }
%"class.WTF::VectorBufferBase" = type { %class.scoped_refptr.152*, i32, i32 }
%class.scoped_refptr.152 = type { %"class.blink::CanvasResource"* }
%"class.blink::CanvasResource" = type { i32 (...)**, %"class.WTF::ThreadSafeRefCounted", %"class.base::PlatformThreadRef", %class.scoped_refptr.7, %"struct.gpu::SyncToken", %"class.base::WeakPtr.154", i32, %"class.blink::CanvasResourceParams" }
%"class.WTF::ThreadSafeRefCounted" = type { %"class.base::RefCountedThreadSafe.153" }
%"class.base::RefCountedThreadSafe.153" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::PlatformThreadRef" = type { i64 }
%"class.base::WeakPtr.154" = type { %"class.base::internal::WeakPtrBase" }
%"class.base::RepeatingCallback.157" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.blink::IdentifiabilityPaintOpDigest" = type <{ i32, [4 x i8], %"class.blink::IdentifiableTokenBuilder", i32, [4 x i8], i64, %"class.blink::IntSize", %"class.blink::IdentifiabilityPaintOpDigest::IdentifiabilityImageProvider", %"class.cc::ClientPaintCache", %"struct.cc::PaintOp::SerializeOptions", i8, i8, [6 x i8] }>
%"class.blink::IdentifiableTokenBuilder" = type { %"struct.std::__1::array.158", i8*, i64 }
%"struct.std::__1::array.158" = type { [64 x i8] }
%"class.blink::IdentifiabilityPaintOpDigest::IdentifiabilityImageProvider" = type { %"class.cc::ImageProvider", %"class.blink::IdentifiabilityPaintOpDigest"* }
%"class.cc::ClientPaintCache" = type { %"class.base::MRUCache", i64, i64, %"class.base::StackVector" }
%"class.base::MRUCache" = type { %"class.base::MRUCacheBase" }
%"class.base::MRUCacheBase" = type { i32 (...)**, %"class.std::__1::list", %"class.std::__1::map", i64 }
%"class.std::__1::list" = type { %"class.std::__1::__list_imp" }
%"class.std::__1::__list_imp" = type { %"struct.std::__1::__list_node_base", %"class.std::__1::__compressed_pair.159" }
%"struct.std::__1::__list_node_base" = type { %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"* }
%"class.std::__1::__compressed_pair.159" = type { %"struct.std::__1::__compressed_pair_elem.160" }
%"class.std::__1::map" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.164", %"class.std::__1::__compressed_pair.169" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8, [7 x i8] }>
%"class.std::__1::__compressed_pair.164" = type { %"struct.std::__1::__compressed_pair_elem.165" }
%"struct.std::__1::__compressed_pair_elem.165" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.169" = type { %"struct.std::__1::__compressed_pair_elem.160" }
%"class.base::StackVector" = type { %"class.base::StackContainer" }
%"class.base::StackContainer" = type { %"struct.base::StackAllocator<std::__1::pair<cc::PaintCacheDataType, unsigned int>, 1>::Source", %"class.base::StackAllocator", %"class.std::__1::vector.173" }
%"struct.base::StackAllocator<std::__1::pair<cc::PaintCacheDataType, unsigned int>, 1>::Source" = type { [8 x i8], i8, [3 x i8] }
%"class.base::StackAllocator" = type { %"struct.base::StackAllocator<std::__1::pair<cc::PaintCacheDataType, unsigned int>, 1>::Source"* }
%"class.std::__1::vector.173" = type { %"class.std::__1::__vector_base.174" }
%"class.std::__1::__vector_base.174" = type { %"struct.std::__1::pair"*, %"struct.std::__1::pair"*, %"class.std::__1::__compressed_pair.175" }
%"struct.std::__1::pair" = type { i32, i32 }
%"class.std::__1::__compressed_pair.175" = type { %"struct.std::__1::__compressed_pair_elem.176", %"struct.std::__1::__compressed_pair_elem.177" }
%"struct.std::__1::__compressed_pair_elem.176" = type { %"struct.std::__1::pair"* }
%"struct.std::__1::__compressed_pair_elem.177" = type { %"class.base::StackAllocator" }
%"struct.cc::PaintOp::SerializeOptions" = type <{ %"class.cc::ImageProvider"*, %"class.cc::TransferCacheSerializeHelper"*, %"class.cc::ClientPaintCache"*, %class.SkStrikeServer*, %class.sk_sp.119, i8, i8, [2 x i8], i32, i8, [7 x i8] }>
%"class.cc::TransferCacheSerializeHelper" = type opaque
%class.SkStrikeServer = type opaque
%"class.base::WeakPtrFactory.178" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::CanvasImageSource" = type { i32 (...)** }
%"class.blink::GarbageCollectedMixin" = type { i32 (...)** }
%"class.blink::CanvasContextCreationAttributesCore" = type <{ i32 (...)**, i8, i8, [6 x i8], %"class.WTF::String", i8, i8, i8, [5 x i8], %"class.WTF::String", i8, i8, [6 x i8], %"class.WTF::String", i8, i8, i8, [5 x i8] }>
%"class.WTF::String" = type { %class.scoped_refptr.182 }
%class.scoped_refptr.182 = type { %"class.WTF::StringImpl"* }
%"class.WTF::StringImpl" = type { i32, i32, %"struct.std::__1::atomic.183" }
%"struct.std::__1::atomic.183" = type { %"struct.std::__1::__atomic_base.184" }
%"struct.std::__1::__atomic_base.184" = type { %"struct.std::__1::__atomic_base.185" }
%"struct.std::__1::__atomic_base.185" = type { %"struct.std::__1::__cxx_atomic_impl.186" }
%"struct.std::__1::__cxx_atomic_impl.186" = type { %"struct.std::__1::__cxx_atomic_base_impl.187" }
%"struct.std::__1::__cxx_atomic_base_impl.187" = type { i32 }
%"class.blink::DrawingBuffer::Client" = type { i32 (...)** }
%"class.blink::NoAllocDirectCallHost" = type { %"class.WTF::Vector.188", %"struct.v8::FastApiCallbackOptions"* }
%"class.WTF::Vector.188" = type { %"class.WTF::VectorBuffer.189" }
%"class.WTF::VectorBuffer.189" = type { %"class.WTF::VectorBufferBase.190" }
%"class.WTF::VectorBufferBase.190" = type { %"class.base::OnceCallback.26"*, i32, i32 }
%"struct.v8::FastApiCallbackOptions" = type { i8, %union.anon.193 }
%union.anon.193 = type { i64 }
%class.scoped_refptr.194 = type { %"class.blink::DrawingBuffer"* }
%"class.blink::DrawingBuffer" = type { %"class.cc::TextureLayerClient", %"class.WTF::RefCounted", %"class.WTF::Vector.195", %"class.blink::DrawingBuffer::Client"*, i32, i32, %"class.std::__1::unique_ptr.203", %"class.gpu::gles2::GLES2Interface"*, %"class.std::__1::unique_ptr.229", %"class.blink::IntSize", i8, i8, i8, i8, i8, %"struct.blink::Platform::GraphicsInfo", i8, i8, i32, %"class.blink::DrawingBuffer::ScopedStateRestorer"*, i32, i32, i32, i32, %"struct.gpu::Mailbox", i32, %class.scoped_refptr.238, %class.scoped_refptr.238, i8, i8, i32, i8, i8, %"class.gfx::ColorSpace", i32, i8, i32, i32, i32, i8, i8, i8, i32, %class.scoped_refptr.241, %"class.WTF::Deque", i32, i8, i32, i32, %"class.base::WeakPtrFactory.246" }
%"class.cc::TextureLayerClient" = type { i32 (...)** }
%"class.WTF::RefCounted" = type { %"class.base::RefCounted" }
%"class.base::RefCounted" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.195" = type { %"class.WTF::VectorBuffer.196" }
%"class.WTF::VectorBuffer.196" = type { %"class.WTF::VectorBufferBase.197" }
%"class.WTF::VectorBufferBase.197" = type { %"struct.blink::DrawingBuffer::RegisteredBitmap"*, i32, i32 }
%"struct.blink::DrawingBuffer::RegisteredBitmap" = type { %class.scoped_refptr.198, %"class.cc::SharedBitmapIdRegistration" }
%class.scoped_refptr.198 = type { %"class.cc::CrossThreadSharedBitmap"* }
%"class.cc::CrossThreadSharedBitmap" = type <{ %"class.base::RefCountedThreadSafe.199", %"struct.gpu::Mailbox", [4 x i8], %"class.base::ReadOnlySharedMemoryRegion", %"class.base::WritableSharedMemoryMapping", %"class.gfx::Size", i32, [4 x i8] }>
%"class.base::RefCountedThreadSafe.199" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::ReadOnlySharedMemoryRegion" = type { %"class.base::subtle::PlatformSharedMemoryRegion" }
%"class.cc::SharedBitmapIdRegistration" = type { %"class.base::WeakPtr.200", %"struct.gpu::Mailbox" }
%"class.base::WeakPtr.200" = type { %"class.base::internal::WeakPtrBase" }
%"class.std::__1::unique_ptr.203" = type { %"class.std::__1::__compressed_pair.204" }
%"class.std::__1::__compressed_pair.204" = type { %"struct.std::__1::__compressed_pair_elem.205" }
%"struct.std::__1::__compressed_pair_elem.205" = type { %"class.blink::WebGraphicsContext3DProviderWrapper"* }
%"class.blink::WebGraphicsContext3DProviderWrapper" = type { %"class.std::__1::unique_ptr.206", %"class.std::__1::unique_ptr.212", %"class.base::ObserverList", %"class.base::WeakPtrFactory.225" }
%"class.std::__1::unique_ptr.206" = type { %"class.std::__1::__compressed_pair.207" }
%"class.std::__1::__compressed_pair.207" = type { %"struct.std::__1::__compressed_pair_elem.208" }
%"struct.std::__1::__compressed_pair_elem.208" = type { %"class.blink::GraphicsContext3DUtils"* }
%"class.blink::GraphicsContext3DUtils" = type { %"class.base::WeakPtr" }
%"class.std::__1::unique_ptr.212" = type { %"class.std::__1::__compressed_pair.213" }
%"class.std::__1::__compressed_pair.213" = type { %"struct.std::__1::__compressed_pair_elem.214" }
%"struct.std::__1::__compressed_pair_elem.214" = type { %"class.blink::WebGraphicsContext3DProvider"* }
%"class.blink::WebGraphicsContext3DProvider" = type { i32 (...)** }
%"class.base::ObserverList" = type <{ %"class.std::__1::vector.218", %"class.base::LinkedList", i64, i32, [4 x i8] }>
%"class.std::__1::vector.218" = type { %"class.std::__1::__vector_base.219" }
%"class.std::__1::__vector_base.219" = type { %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"*, %"class.std::__1::__compressed_pair.220" }
%"class.base::internal::UncheckedObserverAdapter" = type { i8* }
%"class.std::__1::__compressed_pair.220" = type { %"struct.std::__1::__compressed_pair_elem.221" }
%"struct.std::__1::__compressed_pair_elem.221" = type { %"class.base::internal::UncheckedObserverAdapter"* }
%"class.base::LinkedList" = type { %"class.base::LinkNode" }
%"class.base::LinkNode" = type { %"class.base::internal::LinkNodeBase" }
%"class.base::internal::LinkNodeBase" = type { %"class.base::internal::LinkNodeBase"*, %"class.base::internal::LinkNodeBase"* }
%"class.base::WeakPtrFactory.225" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.gpu::gles2::GLES2Interface" = type { %"class.gpu::InterfaceBase" }
%"class.gpu::InterfaceBase" = type { i32 (...)** }
%"struct.blink::Platform::GraphicsInfo" = type { i32, i32, i32, i8, i8, i8, i8, i8, %"class.blink::WebString", %"class.blink::WebString", %"class.blink::WebString", %"class.blink::WebString" }
%"class.blink::WebString" = type { %class.scoped_refptr.182 }
%"class.blink::DrawingBuffer::ScopedStateRestorer" = type <{ %class.scoped_refptr.194, %"class.blink::DrawingBuffer::ScopedStateRestorer"*, i8, i8, i8, i8, i8, i8, i8, i8 }>
%class.scoped_refptr.238 = type { %"struct.blink::DrawingBuffer::ColorBuffer"* }
%"struct.blink::DrawingBuffer::ColorBuffer" = type { %"class.base::RefCountedThreadSafe.239", %"class.base::PlatformThreadRef", %"class.base::WeakPtr.240", %"class.blink::IntSize", i32, i32, %"class.std::__1::unique_ptr.17", i32, %"struct.gpu::Mailbox", %"struct.gpu::SyncToken", %"struct.gpu::SyncToken" }
%"class.base::RefCountedThreadSafe.239" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::WeakPtr.240" = type { %"class.base::internal::WeakPtrBase" }
%class.scoped_refptr.241 = type { %"class.cc::TextureLayer"* }
%"class.cc::TextureLayer" = type opaque
%"class.WTF::Deque" = type { %"class.WTF::Deque<scoped_refptr<blink::DrawingBuffer::ColorBuffer>, 0, WTF::PartitionAllocator>::BackingBuffer", i32, i32 }
%"class.WTF::Deque<scoped_refptr<blink::DrawingBuffer::ColorBuffer>, 0, WTF::PartitionAllocator>::BackingBuffer" = type { %"class.WTF::VectorBuffer.244" }
%"class.WTF::VectorBuffer.244" = type { %"class.WTF::VectorBufferBase.245" }
%"class.WTF::VectorBufferBase.245" = type { %class.scoped_refptr.238*, i32, i32 }
%"class.base::WeakPtrFactory.246" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::Member.247" = type { %"class.blink::MemberBase.248" }
%"class.blink::MemberBase.248" = type { %"class.blink::WebGLContextGroup"* }
%"class.blink::WebGLContextGroup" = type opaque
%"class.blink::HeapTaskRunnerTimer" = type { %"class.blink::TimerBase", %"class.blink::WeakMember", { i64, i64 } }
%"class.blink::TimerBase" = type { i32 (...)**, %"class.base::TimeTicks", %"class.base::TimeDelta", %"class.base::Location", %class.scoped_refptr.7, %"class.base::WeakPtrFactory.249" }
%"class.base::Location" = type { i8*, i8*, i32, i8* }
%"class.base::WeakPtrFactory.249" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::Member.250" = type { %"class.blink::MemberBase.251" }
%"class.blink::MemberBase.251" = type { %"class.blink::WebGLBuffer"* }
%"class.blink::WebGLBuffer" = type { %"class.blink::WebGLSharedPlatform3DObject.base", i32, i64 }
%"class.blink::WebGLSharedPlatform3DObject.base" = type <{ %"class.blink::WebGLSharedObject", i32 }>
%"class.blink::WebGLSharedObject" = type { %"class.blink::WebGLObject.base", %"class.blink::Member.247" }
%"class.blink::WebGLObject.base" = type <{ %"class.blink::ScriptWrappable", %"class.blink::ThreadState::PrefinalizerRegistration.252", [3 x i8], i32, i32, i8, i8 }>
%"class.blink::ThreadState::PrefinalizerRegistration.252" = type { i8 }
%"class.blink::Member.253" = type { %"class.blink::MemberBase.254" }
%"class.blink::MemberBase.254" = type { %"class.blink::WebGLVertexArrayObjectBase"* }
%"class.blink::WebGLVertexArrayObjectBase" = type <{ %"class.blink::WebGLContextObject", i32, i32, i8, [7 x i8], %"class.blink::Member.250", %"class.blink::HeapVector", %"class.WTF::Vector.262", i8, [7 x i8] }>
%"class.blink::WebGLContextObject" = type { %"class.blink::WebGLObject.base", %"class.blink::Member.255" }
%"class.blink::Member.255" = type { %"class.blink::MemberBase" }
%"class.blink::HeapVector" = type { %"class.WTF::Vector.258" }
%"class.WTF::Vector.258" = type { %"class.WTF::VectorBuffer.259" }
%"class.WTF::VectorBuffer.259" = type { %"class.WTF::VectorBufferBase.260" }
%"class.WTF::VectorBufferBase.260" = type { %"class.blink::Member.250"*, i32, i32 }
%"class.WTF::Vector.262" = type { %"class.WTF::VectorBuffer.263" }
%"class.WTF::VectorBuffer.263" = type { %"class.WTF::VectorBufferBase.264" }
%"class.WTF::VectorBufferBase.264" = type { i8*, i32, i32 }
%"class.WTF::Vector.267" = type { %"class.WTF::VectorBuffer.268" }
%"class.WTF::VectorBuffer.268" = type { %"class.WTF::VectorBufferBase.269" }
%"class.WTF::VectorBufferBase.269" = type { i32*, i32, i32 }
%"class.blink::Member.272" = type { %"class.blink::MemberBase.273" }
%"class.blink::MemberBase.273" = type { %"class.blink::WebGLProgram"* }
%"class.blink::WebGLProgram" = type opaque
%"class.blink::Member.274" = type { %"class.blink::MemberBase.275" }
%"class.blink::MemberBase.275" = type { %"class.blink::WebGLFramebuffer"* }
%"class.blink::WebGLFramebuffer" = type opaque
%"class.blink::Member.276" = type { %"class.blink::MemberBase.277" }
%"class.blink::MemberBase.277" = type { %"class.blink::WebGLRenderbuffer"* }
%"class.blink::WebGLRenderbuffer" = type opaque
%"class.blink::Member.278" = type { %"class.blink::MemberBase.279" }
%"class.blink::MemberBase.279" = type { %"class.blink::ScriptPromiseResolver"* }
%"class.blink::ScriptPromiseResolver" = type { %"class.blink::ExecutionContextLifecycleObserver.base", %"class.blink::ThreadState::PrefinalizerRegistration.290", i32, %"class.blink::Member.291", %"class.blink::TaskHandle", %"class.blink::ScriptPromise::InternalResolver", %"class.blink::TraceWrapperV8Reference.499", %"class.blink::SelfKeepAlive.503" }
%"class.blink::ExecutionContextLifecycleObserver.base" = type <{ %"class.blink::ContextLifecycleObserver", i32 }>
%"class.blink::ContextLifecycleObserver" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::WeakMember.282" }
%"class.blink::WeakMember.282" = type { %"class.blink::MemberBase.283" }
%"class.blink::MemberBase.283" = type { %"class.blink::ContextLifecycleNotifier"* }
%"class.blink::ContextLifecycleNotifier" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapObserverSet" }
%"class.blink::HeapObserverSet" = type { i32, [4 x i8], %"class.blink::HeapHashSet" }
%"class.blink::HeapHashSet" = type { %"class.WTF::HashSet.286" }
%"class.WTF::HashSet.286" = type { %"class.WTF::HashTable.287" }
%"class.WTF::HashTable.287" = type <{ %"class.blink::WeakMember.289"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.289" = type opaque
%"class.blink::ThreadState::PrefinalizerRegistration.290" = type { i8 }
%"class.blink::Member.291" = type { %"class.blink::MemberBase.292" }
%"class.blink::MemberBase.292" = type { %"class.blink::ScriptState"* }
%"class.blink::ScriptState" = type { %"class.v8::Isolate"*, %"class.blink::ScopedPersistent", %class.scoped_refptr.295, %"class.blink::Member.493", %"class.blink::SelfKeepAlive", %"class.util::TokenType" }
%"class.blink::ScopedPersistent" = type { %"class.v8::Persistent" }
%"class.v8::Persistent" = type { %"class.v8::PersistentBase" }
%"class.v8::PersistentBase" = type { %"class.v8::Context"* }
%class.scoped_refptr.295 = type { %"class.blink::DOMWrapperWorld"* }
%"class.blink::Member.493" = type { %"class.blink::MemberBase.494" }
%"class.blink::MemberBase.494" = type { %"class.blink::V8PerContextData"* }
%"class.blink::V8PerContextData" = type opaque
%"class.blink::SelfKeepAlive" = type { %"class.blink::Persistent.495" }
%"class.blink::Persistent.495" = type { %"class.blink::PersistentBase.496" }
%"class.blink::PersistentBase.496" = type { %"class.blink::ScriptState"*, %"class.blink::PersistentNodePtr" }
%"class.util::TokenType" = type { %"class.base::StrongAlias.497" }
%"class.base::StrongAlias.497" = type { %"class.base::UnguessableToken" }
%"class.blink::TaskHandle" = type { %class.scoped_refptr.498 }
%class.scoped_refptr.498 = type { %"class.blink::TaskHandle::Runner"* }
%"class.blink::TaskHandle::Runner" = type opaque
%"class.blink::ScriptPromise::InternalResolver" = type { %"class.blink::Member.291", %"class.blink::ScriptValue" }
%"class.blink::ScriptValue" = type { %"class.v8::Isolate"*, %"class.blink::WorldSafeV8Reference" }
%"class.blink::WorldSafeV8Reference" = type { %"class.blink::TraceWrapperV8Reference.499", %class.scoped_refptr.502 }
%class.scoped_refptr.502 = type { %"class.blink::DOMWrapperWorld"* }
%"class.blink::TraceWrapperV8Reference.499" = type { %"class.v8::TracedReference.500" }
%"class.v8::TracedReference.500" = type { %"class.v8::BasicTracedReference.501" }
%"class.v8::BasicTracedReference.501" = type { %"class.v8::TracedReferenceBase" }
%"class.blink::SelfKeepAlive.503" = type { %"class.blink::Persistent.504" }
%"class.blink::Persistent.504" = type { %"class.blink::PersistentBase.505" }
%"class.blink::PersistentBase.505" = type { %"class.blink::ScriptPromiseResolver"*, %"class.blink::PersistentNodePtr" }
%"class.blink::HeapVector.506" = type { %"class.WTF::Vector.509" }
%"class.WTF::Vector.509" = type { %"class.WTF::VectorBuffer.510" }
%"class.WTF::VectorBuffer.510" = type { %"class.WTF::VectorBufferBase.511" }
%"class.WTF::VectorBufferBase.511" = type { %"class.blink::WebGLRenderingContextBase::TextureUnitState"*, i32, i32 }
%"class.blink::WebGLRenderingContextBase::TextureUnitState" = type { %"class.blink::Member.512", %"class.blink::Member.512", %"class.blink::Member.512", %"class.blink::Member.512", %"class.blink::Member.512", %"class.blink::Member.512", %"class.blink::Member.512" }
%"class.blink::Member.512" = type { %"class.blink::MemberBase.513" }
%"class.blink::MemberBase.513" = type { %"class.blink::WebGLTexture"* }
%"class.blink::WebGLTexture" = type { %"class.blink::WebGLSharedPlatform3DObject.base", i32, %"struct.blink::WebGLTexture::VideoFrameUploadMetadata" }
%"struct.blink::WebGLTexture::VideoFrameUploadMetadata" = type <{ i32, %"class.blink::IntRect", [4 x i8], %"class.base::TimeDelta", %"class.base::TimeDelta", i8, [7 x i8] }>
%"class.blink::IntRect" = type { %"class.blink::IntPoint", %"class.blink::IntSize" }
%"class.blink::IntPoint" = type { i32, i32 }
%"class.blink::WebGLRenderingContextBase::LRUCanvasResourceProviderCache" = type { i32, %"class.WTF::Vector.520" }
%"class.WTF::Vector.520" = type { %"class.WTF::VectorBuffer.521" }
%"class.WTF::VectorBuffer.521" = type { %"class.WTF::VectorBufferBase.522" }
%"class.WTF::VectorBufferBase.522" = type { %"class.std::__1::unique_ptr.83"*, i32, i32 }
%"class.std::__1::unique_ptr.229" = type { %"class.std::__1::__compressed_pair.230" }
%"class.std::__1::__compressed_pair.230" = type { %"struct.std::__1::__compressed_pair_elem.231" }
%"struct.std::__1::__compressed_pair_elem.231" = type { %"class.blink::Extensions3DUtil"* }
%"class.blink::Extensions3DUtil" = type <{ %"class.gpu::gles2::GLES2Interface"*, %"class.WTF::HashSet", %"class.WTF::HashSet", i8, [7 x i8] }>
%"class.blink::HeapVector.525" = type { %"class.WTF::Vector.528" }
%"class.WTF::Vector.528" = type { %"class.WTF::VectorBuffer.529" }
%"class.WTF::VectorBuffer.529" = type { %"class.WTF::VectorBufferBase.530" }
%"class.WTF::VectorBufferBase.530" = type { %"class.blink::Member.531"*, i32, i32 }
%"class.blink::Member.531" = type opaque
%"class.WTF::HashSet" = type { %"class.WTF::HashTable.232" }
%"class.WTF::HashTable.232" = type <{ %"class.WTF::String"*, i32, i32, i32, [4 x i8] }>
%"class.WTF::Vector.515" = type { %"class.WTF::VectorBuffer.516" }
%"class.WTF::VectorBuffer.516" = type { %"class.WTF::VectorBufferBase.517" }
%"class.WTF::VectorBufferBase.517" = type { i32*, i32, i32 }
%"class.WTF::HashSet.533" = type { %"class.WTF::HashTable.534" }
%"class.WTF::HashTable.534" = type <{ i32*, i32, i32, i32, [4 x i8] }>
%"class.base::MRUCache.537" = type { %"class.base::MRUCacheBase.538" }
%"class.base::MRUCacheBase.538" = type { i32 (...)**, %"class.std::__1::list.539", %"class.std::__1::map.546", i64 }
%"class.std::__1::list.539" = type { %"class.std::__1::__list_imp.540" }
%"class.std::__1::__list_imp.540" = type { %"struct.std::__1::__list_node_base.541", %"class.std::__1::__compressed_pair.542" }
%"struct.std::__1::__list_node_base.541" = type { %"struct.std::__1::__list_node_base.541"*, %"struct.std::__1::__list_node_base.541"* }
%"class.std::__1::__compressed_pair.542" = type { %"struct.std::__1::__compressed_pair_elem.160" }
%"class.std::__1::map.546" = type { %"class.std::__1::__tree.547" }
%"class.std::__1::__tree.547" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.548", %"class.std::__1::__compressed_pair.552" }
%"class.std::__1::__compressed_pair.548" = type { %"struct.std::__1::__compressed_pair_elem.165" }
%"class.std::__1::__compressed_pair.552" = type { %"struct.std::__1::__compressed_pair_elem.160" }
%"class.blink::CanvasColorParams" = type { i32, i32, i32 }
%"class.base::TaskRunner" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe", [4 x i8] }>
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }
%"class.blink::WebGLWebCodecsVideoFrameHandle" = type { %"class.blink::IDLDictionaryBase", i8, i8, i8, %"class.WTF::String", %"class.blink::Member.566", i8, %"class.WTF::String", i8, %"class.WTF::String", %"class.blink::HeapVector.568" }
%"class.blink::IDLDictionaryBase" = type { i32 (...)** }
%"class.blink::Member.566" = type { %"class.blink::MemberBase.567" }
%"class.blink::MemberBase.567" = type { %"class.blink::VideoColorSpace"* }
%"class.blink::VideoColorSpace" = type { %"class.blink::IDLDictionaryBase", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String" }
%"class.blink::HeapVector.568" = type { %"class.WTF::Vector.571" }
%"class.WTF::Vector.571" = type { %"class.WTF::VectorBuffer.572" }
%"class.WTF::VectorBuffer.572" = type { %"class.WTF::VectorBufferBase.573" }
%"class.WTF::VectorBufferBase.573" = type { %"class.blink::Member.574"*, i32, i32 }
%"class.blink::Member.574" = type { %"class.blink::MemberBase.575" }
%"class.blink::MemberBase.575" = type { %"class.blink::WebGLWebCodecsTextureInfo"* }
%"class.blink::WebGLWebCodecsTextureInfo" = type { %"class.blink::IDLDictionaryBase", i8, %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", i32, %"class.blink::Member.512" }
%"class.blink::ExecutionContext" = type <{ %"class.blink::Supplementable", %"class.blink::MojoBindingContext", %"class.blink::ConsoleLogger", %"class.blink::UseCounter", %"class.blink::FeatureContext", %"class.v8::Isolate"*, %"class.blink::SecurityContext", %"class.blink::Member.619", i32, i8, [3 x i8], %"class.blink::HeapVector.621", i32, i8, i8, i8, i8, i8, i8, [6 x i8], %"class.blink::Member.629", %"class.blink::Member.631", %"class.blink::DOMTimerCoordinator", i32, [4 x i8], %"class.std::__1::unique_ptr.640", %"class.blink::Member.646", %"class.blink::Member.648", i8, [7 x i8] }>
%"class.blink::Supplementable" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.577" }
%"class.blink::HeapHashMap.577" = type { %"class.WTF::HashMap.580" }
%"class.WTF::HashMap.580" = type { %"class.WTF::HashTable.581" }
%"class.WTF::HashTable.581" = type <{ %"struct.WTF::KeyValuePair.583"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.583" = type opaque
%"class.blink::MojoBindingContext" = type { %"class.blink::ContextLifecycleNotifier", %"class.blink::Supplementable.584" }
%"class.blink::Supplementable.584" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.585" }
%"class.blink::HeapHashMap.585" = type { %"class.WTF::HashMap.588" }
%"class.WTF::HashMap.588" = type { %"class.WTF::HashTable.589" }
%"class.WTF::HashTable.589" = type <{ %"struct.WTF::KeyValuePair.591"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.591" = type { i8*, %"class.blink::Member.693" }
%"class.blink::Member.693" = type { %"class.blink::MemberBase.694" }
%"class.blink::MemberBase.694" = type { %"class.blink::Supplement"* }
%"class.blink::Supplement" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::Member.695" }
%"class.blink::Member.695" = type { %"class.blink::MemberBase.696" }
%"class.blink::MemberBase.696" = type { %"class.blink::MojoBindingContext"* }
%"class.blink::ConsoleLogger" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::UseCounter" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::FeatureContext" = type { i32 (...)** }
%"class.blink::SecurityContext" = type { i32 (...)**, i32, %class.scoped_refptr.592, %"class.std::__1::unique_ptr.601", %"class.std::__1::unique_ptr.601", %"class.std::__1::unique_ptr.607", %"class.std::__1::unique_ptr.607", %"class.blink::Member.613", i32, [4 x i8], %"class.WTF::HashSet.615", i32, i32 }
%class.scoped_refptr.592 = type { %"class.blink::SecurityOrigin"* }
%"class.blink::SecurityOrigin" = type { %"class.WTF::RefCounted.593", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", i16, %"class.absl::optional.595", i8, i8, i8, i8, i8, i8, %"class.base::UnguessableToken", %class.scoped_refptr.600 }
%"class.WTF::RefCounted.593" = type { %"class.base::RefCounted.594" }
%"class.base::RefCounted.594" = type { %"class.base::subtle::RefCountedBase" }
%"class.absl::optional.595" = type { %"class.absl::optional_internal::optional_data.596" }
%"class.absl::optional_internal::optional_data.596" = type { %"class.absl::optional_internal::optional_data_base.597" }
%"class.absl::optional_internal::optional_data_base.597" = type { %"class.absl::optional_internal::optional_data_dtor_base.598" }
%"class.absl::optional_internal::optional_data_dtor_base.598" = type { i8, %union.anon.599 }
%union.anon.599 = type { %"class.url::Origin::Nonce" }
%"class.url::Origin::Nonce" = type { %"class.base::UnguessableToken" }
%class.scoped_refptr.600 = type { %"class.blink::SecurityOrigin"* }
%"class.std::__1::unique_ptr.601" = type { %"class.std::__1::__compressed_pair.602" }
%"class.std::__1::__compressed_pair.602" = type { %"struct.std::__1::__compressed_pair_elem.603" }
%"struct.std::__1::__compressed_pair_elem.603" = type { %"class.blink::PermissionsPolicy"* }
%"class.blink::PermissionsPolicy" = type opaque
%"class.std::__1::unique_ptr.607" = type { %"class.std::__1::__compressed_pair.608" }
%"class.std::__1::__compressed_pair.608" = type { %"struct.std::__1::__compressed_pair_elem.609" }
%"struct.std::__1::__compressed_pair_elem.609" = type { %"class.blink::DocumentPolicy"* }
%"class.blink::DocumentPolicy" = type opaque
%"class.blink::Member.613" = type { %"class.blink::MemberBase.614" }
%"class.blink::MemberBase.614" = type { %"class.blink::ExecutionContext"* }
%"class.WTF::HashSet.615" = type { %"class.WTF::HashTable.616" }
%"class.WTF::HashTable.616" = type <{ i32*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.619" = type { %"class.blink::MemberBase.620" }
%"class.blink::MemberBase.620" = type { %"class.blink::Agent"* }
%"class.blink::Agent" = type opaque
%"class.blink::HeapVector.621" = type { %"class.WTF::Vector.624" }
%"class.WTF::Vector.624" = type { %"class.WTF::VectorBuffer.625" }
%"class.WTF::VectorBuffer.625" = type { %"class.WTF::VectorBufferBase.626" }
%"class.WTF::VectorBufferBase.626" = type { %"class.blink::Member.627"*, i32, i32 }
%"class.blink::Member.627" = type opaque
%"class.blink::Member.629" = type { %"class.blink::MemberBase.630" }
%"class.blink::MemberBase.630" = type { %"class.blink::PublicURLManager"* }
%"class.blink::PublicURLManager" = type opaque
%"class.blink::Member.631" = type { %"class.blink::MemberBase.632" }
%"class.blink::MemberBase.632" = type { %"class.blink::ContentSecurityPolicyDelegate"* }
%"class.blink::ContentSecurityPolicyDelegate" = type opaque
%"class.blink::DOMTimerCoordinator" = type { %"class.blink::HeapHashMap.633", i32, i32 }
%"class.blink::HeapHashMap.633" = type { %"class.WTF::HashMap.636" }
%"class.WTF::HashMap.636" = type { %"class.WTF::HashTable.637" }
%"class.WTF::HashTable.637" = type <{ %"struct.WTF::KeyValuePair.639"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.639" = type opaque
%"class.std::__1::unique_ptr.640" = type { %"class.std::__1::__compressed_pair.641" }
%"class.std::__1::__compressed_pair.641" = type { %"struct.std::__1::__compressed_pair_elem.642" }
%"struct.std::__1::__compressed_pair_elem.642" = type { %"class.blink::PolicyContainer"* }
%"class.blink::PolicyContainer" = type opaque
%"class.blink::Member.646" = type { %"class.blink::MemberBase.647" }
%"class.blink::MemberBase.647" = type { %"class.blink::OriginTrialContext"* }
%"class.blink::OriginTrialContext" = type opaque
%"class.blink::Member.648" = type { %"class.blink::MemberBase.649" }
%"class.blink::MemberBase.649" = type { %"class.blink::ContentSecurityPolicy"* }
%"class.blink::ContentSecurityPolicy" = type opaque
%"class.blink::VideoFrame" = type { %"class.blink::ScriptWrappable", %"class.blink::CanvasImageSource", %"class.blink::ImageBitmapSource", %class.scoped_refptr.650, %"class.blink::HeapVector.657" }
%"class.blink::ImageBitmapSource" = type { i32 (...)** }
%class.scoped_refptr.650 = type { %"class.blink::VideoFrameHandle"* }
%"class.blink::VideoFrameHandle" = type { %"class.WTF::ThreadSafeRefCounted.651", i8, %"class.WTF::Mutex", %class.sk_sp.653, %class.scoped_refptr.8, %class.scoped_refptr.654 }
%"class.WTF::ThreadSafeRefCounted.651" = type { %"class.base::RefCountedThreadSafe.652" }
%"class.base::RefCountedThreadSafe.652" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%class.sk_sp.653 = type { %class.SkImage* }
%class.SkImage = type <{ %class.SkRefCnt.base, [4 x i8], %struct.SkImageInfo, i32, [4 x i8] }>
%class.scoped_refptr.654 = type { %"class.blink::WebCodecsLogger::VideoFrameCloseAuditor"* }
%"class.blink::WebCodecsLogger::VideoFrameCloseAuditor" = type <{ %"class.WTF::ThreadSafeRefCounted.655", i8, [3 x i8] }>
%"class.WTF::ThreadSafeRefCounted.655" = type { %"class.base::RefCountedThreadSafe.656" }
%"class.base::RefCountedThreadSafe.656" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.blink::HeapVector.657" = type { %"class.WTF::Vector.660" }
%"class.WTF::Vector.660" = type { %"class.WTF::VectorBuffer.661" }
%"class.WTF::VectorBuffer.661" = type { %"class.WTF::VectorBufferBase.662" }
%"class.WTF::VectorBufferBase.662" = type { %"class.blink::Member.663"*, i32, i32 }
%"class.blink::Member.663" = type opaque
%"class.blink::ExceptionState" = type { i32 (...)**, %"class.blink::ExceptionContext", %"class.blink::ExceptionState::ContextScope"*, %"class.v8::Isolate"*, i32, %"class.WTF::String", %"class.blink::TraceWrapperV8Reference.499" }
%"class.blink::ExceptionContext" = type { i16, i16, i8*, i8* }
%"class.blink::ExceptionState::ContextScope" = type { %"class.blink::ExceptionState"*, %"class.blink::ExceptionState::ContextScope"*, %"class.blink::ExceptionContext" }
%"class.blink::WebGLExtensionScopedContext" = type { %"class.blink::WebGLRenderingContextBase"* }
%"class.base::WaitableEvent" = type <{ %class.scoped_refptr.665, i8, [7 x i8] }>
%class.scoped_refptr.665 = type { %"struct.base::WaitableEvent::WaitableEventKernel"* }
%"struct.base::WaitableEvent::WaitableEventKernel" = type { %"class.base::RefCountedThreadSafe.666", %"class.base::Lock", i8, i8, %"class.std::__1::list.667" }
%"class.base::RefCountedThreadSafe.666" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.std::__1::list.667" = type { %"class.std::__1::__list_imp.668" }
%"class.std::__1::__list_imp.668" = type { %"struct.std::__1::__list_node_base.669", %"class.std::__1::__compressed_pair.670" }
%"struct.std::__1::__list_node_base.669" = type { %"struct.std::__1::__list_node_base.669"*, %"struct.std::__1::__list_node_base.669"* }
%"class.std::__1::__compressed_pair.670" = type { %"struct.std::__1::__compressed_pair_elem.160" }
%"class.base::OnceCallback.674" = type { %"class.base::internal::CallbackBase" }
%"class.blink::WebGLUnownedTexture" = type { %"class.blink::WebGLTexture" }
%"class.gfx::ColorTransform" = type { i32 (...)** }
%"class.blink::WebGLSharedPlatform3DObject" = type <{ %"class.blink::WebGLSharedObject", i32, [4 x i8] }>
%"class.WTF::CrossThreadOnceFunction" = type { %"class.base::OnceCallback.26" }
%class.scoped_refptr.793 = type { %"class.base::TaskRunner"* }
%"class.media::GpuVideoAcceleratorFactories" = type opaque
%"class.blink::Platform" = type { i32 (...)** }
%"class.blink::Thread" = type { i32 (...)** }
%"class.media::WaitAndReplaceSyncTokenClient" = type { %"class.media::VideoFrame::SyncTokenClient", %"class.gpu::InterfaceBase"* }
%"class.media::VideoFrame::SyncTokenClient" = type { i32 (...)** }
%"class.v8::Value" = type { i8 }
%"class.logging::CheckOpResult" = type { i8* }
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.logging::LogMessage" = type { i32 (...)**, i32, %"class.std::__1::basic_ostringstream", i64, i8*, i32, %"class.base::ScopedClearLastErrorBase" }
%"class.std::__1::basic_ostringstream" = type { %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.base::ScopedClearLastErrorBase" = type { i32 }
%"class.blink::NormalPageArena" = type { %"class.blink::BaseArena.base", [4 x i8], %"class.blink::FreeList", i8*, i64, i64 }
%"class.blink::BaseArena.base" = type <{ i32 (...)**, %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::ThreadState"*, i32 }>
%"class.blink::FreeList" = type <{ [17 x %"class.blink::FreeListEntry"*], [17 x %"class.blink::FreeListEntry"*], i32, [4 x i8] }>
%"class.blink::FreeListEntry" = type { %"class.blink::HeapObjectHeader", %"class.blink::FreeListEntry"* }
%"class.blink::PlatformAwareObjectStartBitmap" = type { %"class.blink::ObjectStartBitmap" }
%"class.blink::ObjectStartBitmap" = type { i8*, [2048 x i8] }
%"class.blink::HeapVectorBacking" = type { i8 }

$_ZN3WTF7HashMapIj13scoped_refptrIN5media10VideoFrameEENS_7IntHashIjEENS_10HashTraitsIjEENS7_IS4_EENS_18PartitionAllocatorEE4TakeERKj = comdat any

$_ZNK5blink15ScriptWrappable18HasPendingActivityEv = comdat any

$_ZNK5blink15ScriptWrappable17HasEventListenersEv = comdat any

$_ZNK5blink24WebGLWebCodecsVideoFrame18GetWrapperTypeInfoEv = comdat any

$_ZN5blink14WebGLExtension4LoseEb = comdat any

$_ZN4base8internal7InvokerINS0_9BindStateIPFvP13scoped_refptrINS_22SingleThreadTaskRunnerEEPPN5media28GpuVideoAcceleratorFactoriesEPNS_13WaitableEventEEJN3WTF28CrossThreadUnretainedWrapperIS5_EENSG_IS9_EENSG_ISB_EEEEEFvvEE7RunOnceEPNS0_13BindStateBaseE = comdat any

$_ZN4base8internal9BindStateIPFvP13scoped_refptrINS_22SingleThreadTaskRunnerEEPPN5media28GpuVideoAcceleratorFactoriesEPNS_13WaitableEventEEJN3WTF28CrossThreadUnretainedWrapperIS4_EENSF_IS8_EENSF_ISA_EEEE7DestroyEPKNS0_13BindStateBaseE = comdat any

$_ZN5blink10ThreadHeap8AllocateINS_17IDLDictionaryBaseEEEPhm = comdat any

$_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc = comdat any

$_ZN5blink10TraceTraitINS_17IDLDictionaryBaseEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink8internal14FinalizerTraitINS_17IDLDictionaryBaseEE8FinalizeEPv = comdat any

$_ZN5blink9NameTraitINS_17IDLDictionaryBaseEE7GetNameEPKv = comdat any

$_ZN4base12DeleteHelperIN5media29GpuMemoryBufferVideoFramePoolEE8DoDeleteEPKv = comdat any

$_ZN4base8internal7InvokerINS0_9BindStateIMN5blink24WebGLWebCodecsVideoFrameEFvPNS_13WaitableEventE13scoped_refptrIN5media10VideoFrameEEEJNS0_17UnretainedWrapperIS4_EENSD_IS5_EEEEEFvSA_EE7RunOnceEPNS0_13BindStateBaseEOSA_ = comdat any

$_ZN4base8internal9BindStateIMN5blink24WebGLWebCodecsVideoFrameEFvPNS_13WaitableEventE13scoped_refptrIN5media10VideoFrameEEEJNS0_17UnretainedWrapperIS3_EENSC_IS4_EEEE7DestroyEPKNS0_13BindStateBaseE = comdat any

$_ZN4base8internal7InvokerINS0_9BindStateIMN5media29GpuMemoryBufferVideoFramePoolEFv13scoped_refptrINS3_10VideoFrameEENS_12OnceCallbackIFvS7_EEEEJNS0_17UnretainedWrapperIS4_EENS0_18RetainedRefWrapperIS6_EESA_EEEFvvEE7RunOnceEPNS0_13BindStateBaseE = comdat any

$_ZN4base8internal9BindStateIMN5media29GpuMemoryBufferVideoFramePoolEFv13scoped_refptrINS2_10VideoFrameEENS_12OnceCallbackIFvS6_EEEEJNS0_17UnretainedWrapperIS3_EENS0_18RetainedRefWrapperIS5_EES9_EE7DestroyEPKNS0_13BindStateBaseE = comdat any

$_ZN3WTF6VectorIN5blink6MemberINS1_25WebGLWebCodecsTextureInfoEEELj0ENS1_13HeapAllocatorEE14AppendSlowCaseIRPS3_EEvOT_ = comdat any

$_ZN3WTF6VectorIN5blink6MemberINS1_25WebGLWebCodecsTextureInfoEEELj0ENS1_13HeapAllocatorEE15ReserveCapacityEj = comdat any

$_ZN3WTF6VectorIN5blink6MemberINS1_25WebGLWebCodecsTextureInfoEEELj0ENS1_13HeapAllocatorEE16ReallocateBufferEj = comdat any

$_ZN5blink13HeapAllocator13QuantizedSizeINS_6MemberINS_25WebGLWebCodecsTextureInfoEEEEEmm = comdat any

$_ZN5blink25MakeGarbageCollectedTraitINS_17HeapVectorBackingINS_6MemberINS_25WebGLWebCodecsTextureInfoEEEN3WTF12VectorTraitsIS4_EEEEE4CallEm = comdat any

$_ZN5blink17HeapVectorBackingINS_6MemberINS_25WebGLWebCodecsTextureInfoEEEN3WTF12VectorTraitsIS3_EEE14AllocateObjectIS7_EEPvm = comdat any

$_ZN5blink10TraceTraitINS_17HeapVectorBackingINS_6MemberINS_25WebGLWebCodecsTextureInfoEEEN3WTF12VectorTraitsIS4_EEEEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink9NameTraitINS_17HeapVectorBackingINS_6MemberINS_25WebGLWebCodecsTextureInfoEEEN3WTF12VectorTraitsIS4_EEEEE7GetNameEPKv = comdat any

$_ZN5blink10TraceTraitINS_25WebGLWebCodecsTextureInfoEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink10ThreadHeap8AllocateINS_15ScriptWrappableEEEPhm = comdat any

$_ZN5blink10TraceTraitINS_15ScriptWrappableEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink8internal14FinalizerTraitINS_15ScriptWrappableEE8FinalizeEPv = comdat any

$_ZN5blink9NameTraitINS_15ScriptWrappableEE7GetNameEPKv = comdat any

$_ZN3WTF6VectorIN5blink6MemberINS1_25WebGLWebCodecsTextureInfoEEELj0ENS1_13HeapAllocatorEE2atEj = comdat any

$_ZN3WTF9HashTableIjNS_12KeyValuePairIj13scoped_refptrIN5media10VideoFrameEEEENS_24KeyValuePairKeyExtractorENS_7IntHashIjEENS_18HashMapValueTraitsINS_10HashTraitsIjEENSB_IS5_EEEESC_NS_18PartitionAllocatorEE6insertINS_17HashMapTranslatorISE_S9_SF_EERjRS5_EENS_18HashTableAddResultISG_S6_EEOT0_OT1_ = comdat any

$_ZN3WTF9HashTableIjNS_12KeyValuePairIj13scoped_refptrIN5media10VideoFrameEEEENS_24KeyValuePairKeyExtractorENS_7IntHashIjEENS_18HashMapValueTraitsINS_10HashTraitsIjEENSB_IS5_EEEESC_NS_18PartitionAllocatorEE6ExpandEPS6_ = comdat any

$_ZN3WTF9HashTableIjNS_12KeyValuePairIj13scoped_refptrIN5media10VideoFrameEEEENS_24KeyValuePairKeyExtractorENS_7IntHashIjEENS_18HashMapValueTraitsINS_10HashTraitsIjEENSB_IS5_EEEESC_NS_18PartitionAllocatorEE8RehashToEPS6_jSH_ = comdat any

$_ZNK3WTF6VectorIN5blink6MemberINS1_25WebGLWebCodecsTextureInfoEEELj0ENS1_13HeapAllocatorEE2atEj = comdat any

$_ZZN5blink11GCInfoTraitINS_17IDLDictionaryBaseEE5IndexEvE7kGcInfo = comdat any

$_ZZN5blink11GCInfoTraitINS_17IDLDictionaryBaseEE5IndexEvE13gc_info_index = comdat any

$_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_25WebGLWebCodecsTextureInfoEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE7kGcInfo = comdat any

$_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_25WebGLWebCodecsTextureInfoEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE13gc_info_index = comdat any

$_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE7kGcInfo = comdat any

$_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE13gc_info_index = comdat any

@_ZTVN5blink24WebGLWebCodecsVideoFrameE = hidden unnamed_addr constant { [13 x i8*] } { [13 x i8*] [i8* null, i8* null, i8* bitcast (i8* (%"class.blink::ScriptWrappable"*)* @_ZNK5blink15ScriptWrappable18NameInHeapSnapshotEv to i8*), i8* bitcast (void (%"class.blink::WebGLWebCodecsVideoFrame"*)* @_ZN5blink24WebGLWebCodecsVideoFrameD2Ev to i8*), i8* bitcast (void (%"class.blink::WebGLWebCodecsVideoFrame"*)* @_ZN5blink24WebGLWebCodecsVideoFrameD0Ev to i8*), i8* bitcast (i1 (%"class.blink::ScriptWrappable"*)* @_ZNK5blink15ScriptWrappable18HasPendingActivityEv to i8*), i8* bitcast (i1 (%"class.blink::ScriptWrappable"*)* @_ZNK5blink15ScriptWrappable17HasEventListenersEv to i8*), i8* bitcast (void (%"class.blink::WebGLWebCodecsVideoFrame"*, %"class.blink::Visitor"*)* @_ZNK5blink24WebGLWebCodecsVideoFrame5TraceEPNS_7VisitorE to i8*), i8* bitcast (%"struct.blink::WrapperTypeInfo"* (%"class.blink::WebGLWebCodecsVideoFrame"*)* @_ZNK5blink24WebGLWebCodecsVideoFrame18GetWrapperTypeInfoEv to i8*), i8* bitcast (%"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)* @_ZN5blink15ScriptWrappable4WrapEPNS_11ScriptStateE to i8*), i8* bitcast (%"class.v8::Object"* (%"class.blink::ScriptWrappable"*, %"class.v8::Isolate"*, %"struct.blink::WrapperTypeInfo"*, %"class.v8::Object"*)* @_ZN5blink15ScriptWrappable20AssociateWithWrapperEPN2v87IsolateEPKNS_15WrapperTypeInfoENS1_5LocalINS1_6ObjectEEE to i8*), i8* bitcast (i32 (%"class.blink::WebGLWebCodecsVideoFrame"*)* @_ZNK5blink24WebGLWebCodecsVideoFrame7GetNameEv to i8*), i8* bitcast (void (%"class.blink::WebGLExtension"*, i1)* @_ZN5blink14WebGLExtension4LoseEb to i8*)] }, align 8
@.str = private unnamed_addr constant [26 x i8] c"~WebGLWebCodecsVideoFrame\00", align 1
@.str.1 = private unnamed_addr constant [78 x i8] c"../../third_party/blink/renderer/modules/webgl/webgl_webcodecs_video_frame.cc\00", align 1
@.str.2 = private unnamed_addr constant [28 x i8] c"WEBGL_webcodecs_video_frame\00", align 1
@.str.3 = private unnamed_addr constant [10 x i8] c"sampler2D\00", align 1
@.str.4 = private unnamed_addr constant [10 x i8] c"texture2D\00", align 1
@.str.5 = private unnamed_addr constant [17 x i8] c"importVideoFrame\00", align 1
@.str.6 = private unnamed_addr constant [41 x i8] c"Unable to import a software video frame.\00", align 1
@.str.7 = private unnamed_addr constant [42 x i8] c"VideoPixelFormat:%s is not supported yet.\00", align 1
@.str.8 = private constant [1 x i8] zeroinitializer, align 1
@.ref.tmp = private constant %"class.base::TaskTraits" { %"struct.base::TaskTraitsExtensionStorage" zeroinitializer, i8 2, i8 1, i8 0, i8 0, i8 0, i8 0 }, align 1
@.str.9 = private unnamed_addr constant [30 x i8] c"InitializeGpuMemoryBufferPool\00", align 1
@_ZN5blink11ThreadState25incremental_marking_flag_E = external local_unnamed_addr global %"class.blink::AtomicEntryFlag", align 4
@_ZN5blink18V8VideoPixelFormat13string_table_E = external constant [8 x i8*], align 16
@.str.11 = private unnamed_addr constant [5 x i8] c"I420\00", align 1
@.str.12 = private unnamed_addr constant [5 x i8] c"I422\00", align 1
@.str.13 = private unnamed_addr constant [5 x i8] c"I444\00", align 1
@.str.14 = private unnamed_addr constant [5 x i8] c"NV12\00", align 1
@.str.15 = private unnamed_addr constant [5 x i8] c"ABGR\00", align 1
@.str.16 = private unnamed_addr constant [5 x i8] c"ARGB\00", align 1
@.str.17 = private unnamed_addr constant [5 x i8] c"XBGR\00", align 1
@.str.18 = private unnamed_addr constant [5 x i8] c"XRGB\00", align 1
@_ZN5blink18V8VideoPixelFormat13string_table_E.const = private unnamed_addr constant [8 x i8*] [i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.11, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.12, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.13, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.14, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.15, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.16, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.17, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.18, i32 0, i32 0)], align 16
@.str.19 = private unnamed_addr constant [6 x i8] c"BT709\00", align 1
@.str.20 = private unnamed_addr constant [7 x i8] c"BT470M\00", align 1
@.str.21 = private unnamed_addr constant [8 x i8] c"BT470BG\00", align 1
@.str.22 = private unnamed_addr constant [10 x i8] c"SMPTE170M\00", align 1
@.str.23 = private unnamed_addr constant [10 x i8] c"SMPTE240M\00", align 1
@.str.24 = private unnamed_addr constant [5 x i8] c"FILM\00", align 1
@.str.25 = private unnamed_addr constant [7 x i8] c"BT2020\00", align 1
@.str.26 = private unnamed_addr constant [13 x i8] c"SMPTEST428_1\00", align 1
@.str.27 = private unnamed_addr constant [13 x i8] c"SMPTEST431_2\00", align 1
@.str.28 = private unnamed_addr constant [13 x i8] c"SMPTEST432_1\00", align 1
@.str.30 = private unnamed_addr constant [8 x i8] c"GAMMA22\00", align 1
@.str.31 = private unnamed_addr constant [8 x i8] c"GAMMA28\00", align 1
@.str.32 = private unnamed_addr constant [7 x i8] c"LINEAR\00", align 1
@.str.33 = private unnamed_addr constant [4 x i8] c"LOG\00", align 1
@.str.34 = private unnamed_addr constant [9 x i8] c"LOG_SQRT\00", align 1
@.str.35 = private unnamed_addr constant [13 x i8] c"IEC61966_2_4\00", align 1
@.str.36 = private unnamed_addr constant [11 x i8] c"BT1361_ECG\00", align 1
@.str.37 = private unnamed_addr constant [13 x i8] c"IEC61966_2_1\00", align 1
@.str.38 = private unnamed_addr constant [10 x i8] c"BT2020_10\00", align 1
@.str.39 = private unnamed_addr constant [10 x i8] c"BT2020_12\00", align 1
@.str.40 = private unnamed_addr constant [12 x i8] c"SMPTEST2084\00", align 1
@.str.41 = private unnamed_addr constant [4 x i8] c"RGB\00", align 1
@.str.42 = private unnamed_addr constant [4 x i8] c"FCC\00", align 1
@.str.43 = private unnamed_addr constant [6 x i8] c"YCOCG\00", align 1
@.str.44 = private unnamed_addr constant [11 x i8] c"BT2020_NCL\00", align 1
@.str.45 = private unnamed_addr constant [10 x i8] c"BT2020_CL\00", align 1
@.str.46 = private unnamed_addr constant [6 x i8] c"YDZDX\00", align 1
@.str.47 = private unnamed_addr constant [8 x i8] c"LIMITED\00", align 1
@.str.48 = private unnamed_addr constant [5 x i8] c"FULL\00", align 1
@.str.49 = private unnamed_addr constant [8 x i8] c"DERIVED\00", align 1
@_ZN5blink24WebGLWebCodecsVideoFrame18wrapper_type_info_E = external local_unnamed_addr constant %"struct.blink::WrapperTypeInfo"*, align 8
@_ZN5blink11ThreadState16thread_specific_E = external local_unnamed_addr global %"class.WTF::ThreadSpecific"*, align 8
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv = private unnamed_addr constant [68 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::ThreadState *]\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink17IDLDictionaryBaseEEEPKcv = private unnamed_addr constant [72 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::IDLDictionaryBase]\00", align 1
@.str.51 = private unnamed_addr constant [23 x i8] c"allocation_size > size\00", align 1
@.str.52 = private unnamed_addr constant [59 x i8] c"../../third_party/blink/renderer/platform/heap/impl/heap.h\00", align 1
@_ZZN5blink11GCInfoTraitINS_17IDLDictionaryBaseEE5IndexEvE7kGcInfo = linkonce_odr hidden constant %"struct.blink::GCInfo" { void (%"class.blink::Visitor"*, i8*)* @_ZN5blink10TraceTraitINS_17IDLDictionaryBaseEE5TraceEPNS_7VisitorEPKv, void (i8*)* @_ZN5blink8internal14FinalizerTraitINS_17IDLDictionaryBaseEE8FinalizeEPv, { i8*, i8 } (i8*)* @_ZN5blink9NameTraitINS_17IDLDictionaryBaseEE7GetNameEPKv, i8 1 }, comdat, align 8
@_ZZN5blink11GCInfoTraitINS_17IDLDictionaryBaseEE5IndexEvE13gc_info_index = linkonce_odr hidden global { { i32 } } zeroinitializer, comdat, align 4
@.str.53 = private unnamed_addr constant [13 x i8] c"InternalNode\00", align 1
@_ZN5blink11GCInfoTable13global_table_E = external local_unnamed_addr global %"class.blink::GCInfoTable"*, align 8
@.str.54 = private unnamed_addr constant [55 x i8] c"../../third_party/blink/renderer/platform/wtf/vector.h\00", align 1
@.str.55 = private unnamed_addr constant [33 x i8] c"Allocator::IsAllocationAllowed()\00", align 1
@.str.56 = private unnamed_addr constant [44 x i8] c"count <= MaxElementCountInBackingStore<T>()\00", align 1
@.str.57 = private unnamed_addr constant [74 x i8] c"../../third_party/blink/renderer/platform/heap/impl/heap_allocator_impl.h\00", align 1
@.str.58 = private unnamed_addr constant [18 x i8] c"num_elements > 0u\00", align 1
@.str.59 = private unnamed_addr constant [93 x i8] c"../../third_party/blink/renderer/platform/heap/impl/collection_support/heap_vector_backing.h\00", align 1
@_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_25WebGLWebCodecsTextureInfoEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE7kGcInfo = linkonce_odr hidden constant %"struct.blink::GCInfo" { void (%"class.blink::Visitor"*, i8*)* @_ZN5blink10TraceTraitINS_17HeapVectorBackingINS_6MemberINS_25WebGLWebCodecsTextureInfoEEEN3WTF12VectorTraitsIS4_EEEEE5TraceEPNS_7VisitorEPKv, void (i8*)* null, { i8*, i8 } (i8*)* @_ZN5blink9NameTraitINS_17HeapVectorBackingINS_6MemberINS_25WebGLWebCodecsTextureInfoEEEN3WTF12VectorTraitsIS4_EEEEE7GetNameEPKv, i8 0 }, comdat, align 8
@_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_25WebGLWebCodecsTextureInfoEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE13gc_info_index = linkonce_odr hidden global { { i32 } } zeroinitializer, comdat, align 4
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink17HeapVectorBackingINS1_6MemberINS1_25WebGLWebCodecsTextureInfoEEENS_12VectorTraitsIS5_EEEEEEPKcv = private unnamed_addr constant [191 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::HeapVectorBacking<blink::Member<blink::WebGLWebCodecsTextureInfo>, WTF::VectorTraits<blink::Member<blink::WebGLWebCodecsTextureInfo> > >]\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink15ScriptWrappableEEEPKcv = private unnamed_addr constant [70 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::ScriptWrappable]\00", align 1
@_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE7kGcInfo = linkonce_odr hidden constant %"struct.blink::GCInfo" { void (%"class.blink::Visitor"*, i8*)* @_ZN5blink10TraceTraitINS_15ScriptWrappableEE5TraceEPNS_7VisitorEPKv, void (i8*)* @_ZN5blink8internal14FinalizerTraitINS_15ScriptWrappableEE8FinalizeEPv, { i8*, i8 } (i8*)* @_ZN5blink9NameTraitINS_15ScriptWrappableEE7GetNameEPKv, i8 1 }, comdat, align 8
@_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE13gc_info_index = linkonce_odr hidden global { { i32 } } zeroinitializer, comdat, align 4
@.str.60 = private unnamed_addr constant [11 x i8] c"i < size()\00", align 1
@.str.61 = private unnamed_addr constant [23 x i8] c"new_size > table_size_\00", align 1
@.str.62 = private unnamed_addr constant [59 x i8] c"../../third_party/blink/renderer/platform/wtf/hash_table.h\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_12KeyValuePairIj13scoped_refptrIN5media10VideoFrameEEEEEEPKcv = private unnamed_addr constant [114 x i8] c"const char *WTF::GetStringWithTypeName() [T = WTF::KeyValuePair<unsigned int, scoped_refptr<media::VideoFrame> >]\00", align 1

@_ZN5blink24WebGLWebCodecsVideoFrameC1EPNS_25WebGLRenderingContextBaseE = hidden unnamed_addr alias void (%"class.blink::WebGLWebCodecsVideoFrame"*, %"class.blink::WebGLRenderingContextBase"*), void (%"class.blink::WebGLWebCodecsVideoFrame"*, %"class.blink::WebGLRenderingContextBase"*)* @_ZN5blink24WebGLWebCodecsVideoFrameC2EPNS_25WebGLRenderingContextBaseE
@_ZN5blink24WebGLWebCodecsVideoFrameD1Ev = hidden unnamed_addr alias void (%"class.blink::WebGLWebCodecsVideoFrame"*), void (%"class.blink::WebGLWebCodecsVideoFrame"*)* @_ZN5blink24WebGLWebCodecsVideoFrameD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink24WebGLWebCodecsVideoFrameC2EPNS_25WebGLRenderingContextBaseE(%"class.blink::WebGLWebCodecsVideoFrame"*, %"class.blink::WebGLRenderingContextBase"*) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::WebGLWebCodecsVideoFrame", %"class.blink::WebGLWebCodecsVideoFrame"* %0, i64 0, i32 0
  tail call void @_ZN5blink14WebGLExtensionC2EPNS_25WebGLRenderingContextBaseE(%"class.blink::WebGLExtension"* %3, %"class.blink::WebGLRenderingContextBase"* %1) #12
  %4 = getelementptr inbounds %"class.blink::WebGLWebCodecsVideoFrame", %"class.blink::WebGLWebCodecsVideoFrame"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [13 x i8*] }, { [13 x i8*] }* @_ZTVN5blink24WebGLWebCodecsVideoFrameE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %4, align 8
  %5 = getelementptr inbounds %"class.blink::WebGLWebCodecsVideoFrame", %"class.blink::WebGLWebCodecsVideoFrame"* %0, i64 0, i32 1, i32 0, i32 0
  %6 = getelementptr inbounds %"class.blink::WebGLWebCodecsVideoFrame", %"class.blink::WebGLWebCodecsVideoFrame"* %0, i64 0, i32 4
  %7 = bitcast i64* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %7, i8 0, i64 3292, i1 false)
  %8 = bitcast %"class.std::__1::unique_ptr"* %6 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %8, i8 0, i64 32, i1 false)
  %9 = tail call %"class.blink::DrawingBuffer"* @_ZNK5blink25WebGLRenderingContextBase16GetDrawingBufferEv(%"class.blink::WebGLRenderingContextBase"* %1) #12
  %10 = icmp eq %"class.blink::DrawingBuffer"* %9, null
  br i1 %10, label %13, label %11

11:                                               ; preds = %2
  %12 = tail call %"class.gpu::gles2::GLES2Interface"* @_ZN5blink13DrawingBuffer9ContextGLEv(%"class.blink::DrawingBuffer"* nonnull %9) #12
  br label %13

13:                                               ; preds = %2, %11
  %14 = phi %"class.gpu::gles2::GLES2Interface"* [ %12, %11 ], [ null, %2 ]
  %15 = bitcast %"class.gpu::gles2::GLES2Interface"* %14 to void (%"class.gpu::gles2::GLES2Interface"*, i8*)***
  %16 = load void (%"class.gpu::gles2::GLES2Interface"*, i8*)**, void (%"class.gpu::gles2::GLES2Interface"*, i8*)*** %15, align 8
  %17 = getelementptr inbounds void (%"class.gpu::gles2::GLES2Interface"*, i8*)*, void (%"class.gpu::gles2::GLES2Interface"*, i8*)** %16, i64 291
  %18 = load void (%"class.gpu::gles2::GLES2Interface"*, i8*)*, void (%"class.gpu::gles2::GLES2Interface"*, i8*)** %17, align 8
  tail call void %18(%"class.gpu::gles2::GLES2Interface"* %14, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.8, i64 0, i64 0)) #12
  ret void
}

declare void @_ZN5blink14WebGLExtensionC2EPNS_25WebGLRenderingContextBaseE(%"class.blink::WebGLExtension"*, %"class.blink::WebGLRenderingContextBase"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink24WebGLWebCodecsVideoFrameD2Ev(%"class.blink::WebGLWebCodecsVideoFrame"*) unnamed_addr #0 align 2 {
  %2 = alloca %"class.base::Location", align 8
  %3 = getelementptr inbounds %"class.blink::WebGLWebCodecsVideoFrame", %"class.blink::WebGLWebCodecsVideoFrame"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [13 x i8*] }, { [13 x i8*] }* @_ZTVN5blink24WebGLWebCodecsVideoFrameE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %3, align 8
  %4 = getelementptr inbounds %"class.blink::WebGLWebCodecsVideoFrame", %"class.blink::WebGLWebCodecsVideoFrame"* %0, i64 0, i32 4
  %5 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %4, i64 0, i32 0, i32 0, i32 0
  %6 = load %"class.media::GpuMemoryBufferVideoFramePool"*, %"class.media::GpuMemoryBufferVideoFramePool"** %5, align 8
  %7 = icmp eq %"class.media::GpuMemoryBufferVideoFramePool"* %6, null
  br i1 %7, label %16, label %8

8:                                                ; preds = %1
  %9 = getelementptr inbounds %"class.blink::WebGLWebCodecsVideoFrame", %"class.blink::WebGLWebCodecsVideoFrame"* %0, i64 0, i32 6, i32 0
  %10 = bitcast %"class.base::SingleThreadTaskRunner"** %9 to %"class.base::SequencedTaskRunner"**
  %11 = load %"class.base::SequencedTaskRunner"*, %"class.base::SequencedTaskRunner"** %10, align 8
  %12 = bitcast %"class.base::Location"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %12) #12
  call void @_ZN4base8Location7CurrentEPKcS2_i(%"class.base::Location"* nonnull sret %2, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([78 x i8], [78 x i8]* @.str.1, i64 0, i64 0), i32 271) #12
  %13 = bitcast %"class.std::__1::unique_ptr"* %4 to i8**
  %14 = load i8*, i8** %13, align 8
  store %"class.media::GpuMemoryBufferVideoFramePool"* null, %"class.media::GpuMemoryBufferVideoFramePool"** %5, align 8
  %15 = call zeroext i1 @_ZN4base19SequencedTaskRunner27DeleteOrReleaseSoonInternalERKNS_8LocationEPFvPKvES5_(%"class.base::SequencedTaskRunner"* %11, %"class.base::Location"* nonnull dereferenceable(32) %2, void (i8*)* nonnull @_ZN4base12DeleteHelperIN5media29GpuMemoryBufferVideoFramePoolEE8DoDeleteEPKv, i8* %14) #12
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %12) #12
  br label %16

16:                                               ; preds = %1, %8
  %17 = getelementptr inbounds %"class.blink::WebGLWebCodecsVideoFrame", %"class.blink::WebGLWebCodecsVideoFrame"* %0, i64 0, i32 7, i32 0
  %18 = load %"class.media::VideoFrame"*, %"class.media::VideoFrame"** %17, align 8
  %19 = icmp eq %"class.media::VideoFrame"* %18, null
  br i1 %19, label %32, label %20

20:                                               ; preds = %16
  %21 = getelementptr inbounds %"class.media::VideoFrame", %"class.media::VideoFrame"* %18, i64 0, i32 1
  %22 = getelementptr inbounds %"class.base::RefCountedThreadSafe.9", %"class.base::RefCountedThreadSafe.9"* %21, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %23 = atomicrmw sub i32* %22, i32 1 acq_rel
  %24 = icmp eq i32 %23, 1
  br i1 %24, label %25, label %32

25:                                               ; preds = %20
  %26 = getelementptr inbounds %"class.base::RefCountedThreadSafe.9", %"class.base::RefCountedThreadSafe.9"* %21, i64 -2
  %27 = bitcast %"class.base::RefCountedThreadSafe.9"* %26 to %"class.media::VideoFrame"*
  %28 = bitcast %"class.base::RefCountedThreadSafe.9"* %26 to void (%"class.media::VideoFrame"*)***
  %29 = load void (%"class.media::VideoFrame"*)**, void (%"class.media::VideoFrame"*)*** %28, align 8
  %30 = getelementptr inbounds void (%"class.media::VideoFrame"*)*, void (%"class.media::VideoFrame"*)** %29, i64 1
  %31 = load void (%"class.media::VideoFrame"*)*, void (%"class.media::VideoFrame"*)** %30, align 8
  call void %31(%"class.media::VideoFrame"* nonnull %27) #12
  br label %32

32:                                               ; preds = %16, %20, %25
  %33 = getelementptr inbounds %"class.blink::WebGLWebCodecsVideoFrame", %"class.blink::WebGLWebCodecsVideoFrame"* %0, i64 0, i32 6, i32 0
  %34 = load %"class.base::SingleThreadTaskRunner"*, %"class.base::SingleThreadTaskRunner"** %33, align 8
  %35 = icmp eq %"class.base::SingleThreadTaskRunner"* %34, null
  br i1 %35, label %44, label %36

36:                                               ; preds = %32
  %37 = getelementptr inbounds %"class.base::SingleThreadTaskRunner", %"class.base::SingleThreadTaskRunner"* %34, i64 0, i32 0, i32 0, i32 1
  %38 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %37, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %39 = atomicrmw sub i32* %38, i32 1 acq_rel
  %40 = icmp eq i32 %39, 1
  br i1 %40, label %41, label %44

41:                                               ; preds = %36
  %42 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %37, i64 -2
  %43 = bitcast %"class.base::RefCountedThreadSafe"* %42 to %"class.base::TaskRunner"*
  call void @_ZN4base16TaskRunnerTraits8DestructEPKNS_10TaskRunnerE(%"class.base::TaskRunner"* %43) #12
  br label %44

44:                                               ; preds = %32, %36, %41
  %45 = getelementptr inbounds %"class.blink::WebGLWebCodecsVideoFrame", %"class.blink::WebGLWebCodecsVideoFrame"* %0, i64 0, i32 5, i32 0
  %46 = load %"class.base::SequencedTaskRunner"*, %"class.base::SequencedTaskRunner"** %45, align 8
  %47 = icmp eq %"class.base::SequencedTaskRunner"* %46, null
  br i1 %47, label %56, label %48

48:                                               ; preds = %44
  %49 = getelementptr inbounds %"class.base::SequencedTaskRunner", %"class.base::SequencedTaskRunner"* %46, i64 0, i32 0, i32 1
  %50 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %49, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %51 = atomicrmw sub i32* %50, i32 1 acq_rel
  %52 = icmp eq i32 %51, 1
  br i1 %52, label %53, label %56

53:                                               ; preds = %48
  %54 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %49, i64 -2
  %55 = bitcast %"class.base::RefCountedThreadSafe"* %54 to %"class.base::TaskRunner"*
  call void @_ZN4base16TaskRunnerTraits8DestructEPKNS_10TaskRunnerE(%"class.base::TaskRunner"* %55) #12
  br label %56

56:                                               ; preds = %44, %48, %53
  %57 = load %"class.media::GpuMemoryBufferVideoFramePool"*, %"class.media::GpuMemoryBufferVideoFramePool"** %5, align 8
  store %"class.media::GpuMemoryBufferVideoFramePool"* null, %"class.media::GpuMemoryBufferVideoFramePool"** %5, align 8
  %58 = icmp eq %"class.media::GpuMemoryBufferVideoFramePool"* %57, null
  br i1 %58, label %64, label %59

59:                                               ; preds = %56
  %60 = bitcast %"class.media::GpuMemoryBufferVideoFramePool"* %57 to void (%"class.media::GpuMemoryBufferVideoFramePool"*)***
  %61 = load void (%"class.media::GpuMemoryBufferVideoFramePool"*)**, void (%"class.media::GpuMemoryBufferVideoFramePool"*)*** %60, align 8
  %62 = getelementptr inbounds void (%"class.media::GpuMemoryBufferVideoFramePool"*)*, void (%"class.media::GpuMemoryBufferVideoFramePool"*)** %61, i64 1
  %63 = load void (%"class.media::GpuMemoryBufferVideoFramePool"*)*, void (%"class.media::GpuMemoryBufferVideoFramePool"*)** %62, align 8
  call void %63(%"class.media::GpuMemoryBufferVideoFramePool"* nonnull %57) #12
  br label %64

64:                                               ; preds = %56, %59
  %65 = getelementptr inbounds %"class.blink::WebGLWebCodecsVideoFrame", %"class.blink::WebGLWebCodecsVideoFrame"* %0, i64 0, i32 3, i32 0, i32 0
  %66 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %65, align 8
  %67 = icmp eq %"struct.WTF::KeyValuePair"* %66, null
  br i1 %67, label %100, label %68, !prof !2

68:                                               ; preds = %64
  %69 = getelementptr inbounds %"class.blink::WebGLWebCodecsVideoFrame", %"class.blink::WebGLWebCodecsVideoFrame"* %0, i64 0, i32 3, i32 0, i32 1
  %70 = load i32, i32* %69, align 8
  %71 = icmp eq i32 %70, 0
  br i1 %71, label %98, label %72

72:                                               ; preds = %68
  %73 = zext i32 %70 to i64
  br label %74

74:                                               ; preds = %95, %72
  %75 = phi i64 [ 0, %72 ], [ %96, %95 ]
  %76 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %66, i64 %75, i32 0
  %77 = load i32, i32* %76, align 4
  %78 = icmp eq i32 %77, -1
  br i1 %78, label %95, label %79

79:                                               ; preds = %74
  %80 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %66, i64 %75, i32 1, i32 0
  %81 = load %"class.media::VideoFrame"*, %"class.media::VideoFrame"** %80, align 8
  %82 = icmp eq %"class.media::VideoFrame"* %81, null
  br i1 %82, label %95, label %83

83:                                               ; preds = %79
  %84 = getelementptr inbounds %"class.media::VideoFrame", %"class.media::VideoFrame"* %81, i64 0, i32 1
  %85 = getelementptr inbounds %"class.base::RefCountedThreadSafe.9", %"class.base::RefCountedThreadSafe.9"* %84, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %86 = atomicrmw sub i32* %85, i32 1 acq_rel
  %87 = icmp eq i32 %86, 1
  br i1 %87, label %88, label %95

88:                                               ; preds = %83
  %89 = getelementptr inbounds %"class.base::RefCountedThreadSafe.9", %"class.base::RefCountedThreadSafe.9"* %84, i64 -2
  %90 = bitcast %"class.base::RefCountedThreadSafe.9"* %89 to %"class.media::VideoFrame"*
  %91 = bitcast %"class.base::RefCountedThreadSafe.9"* %89 to void (%"class.media::VideoFrame"*)***
  %92 = load void (%"class.media::VideoFrame"*)**, void (%"class.media::VideoFrame"*)*** %91, align 8
  %93 = getelementptr inbounds void (%"class.media::VideoFrame"*)*, void (%"class.media::VideoFrame"*)** %92, i64 1
  %94 = load void (%"class.media::VideoFrame"*)*, void (%"class.media::VideoFrame"*)** %93, align 8
  call void %94(%"class.media::VideoFrame"* nonnull %90) #12
  br label %95

95:                                               ; preds = %88, %83, %79, %74
  %96 = add nuw nsw i64 %75, 1
  %97 = icmp eq i64 %96, %73
  br i1 %97, label %98, label %74

98:                                               ; preds = %95, %68
  %99 = bitcast %"struct.WTF::KeyValuePair"* %66 to i8*
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %99) #12
  store %"struct.WTF::KeyValuePair"* null, %"struct.WTF::KeyValuePair"** %65, align 8
  br label %100

100:                                              ; preds = %64, %98
  %101 = getelementptr inbounds %"class.blink::WebGLWebCodecsVideoFrame", %"class.blink::WebGLWebCodecsVideoFrame"* %0, i64 0, i32 2, i32 0, i64 0
  %102 = getelementptr inbounds %"class.blink::WebGLWebCodecsVideoFrame", %"class.blink::WebGLWebCodecsVideoFrame"* %0, i64 0, i32 2, i32 0, i64 34
  br label %103

103:                                              ; preds = %140, %100
  %104 = phi %"struct.std::__1::array.0"* [ %102, %100 ], [ %105, %140 ]
  %105 = getelementptr inbounds %"struct.std::__1::array.0", %"struct.std::__1::array.0"* %104, i64 -1
  %106 = getelementptr inbounds %"struct.std::__1::array.0", %"struct.std::__1::array.0"* %104, i64 -1, i32 0, i64 3
  %107 = bitcast %"class.std::__1::basic_string"* %106 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %108 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %107, i64 0, i32 1, i32 0
  %109 = load i8, i8* %108, align 1
  %110 = icmp slt i8 %109, 0
  br i1 %110, label %111, label %114

111:                                              ; preds = %103
  %112 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %106, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %113 = load i8*, i8** %112, align 8
  call void @_ZdlPv(i8* %113) #13
  br label %114

114:                                              ; preds = %111, %103
  %115 = getelementptr inbounds %"struct.std::__1::array.0", %"struct.std::__1::array.0"* %104, i64 -1, i32 0, i64 2
  %116 = bitcast %"class.std::__1::basic_string"* %115 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %117 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %116, i64 0, i32 1, i32 0
  %118 = load i8, i8* %117, align 1
  %119 = icmp slt i8 %118, 0
  br i1 %119, label %120, label %123

120:                                              ; preds = %114
  %121 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %115, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %122 = load i8*, i8** %121, align 8
  call void @_ZdlPv(i8* %122) #13
  br label %123

123:                                              ; preds = %120, %114
  %124 = getelementptr inbounds %"struct.std::__1::array.0", %"struct.std::__1::array.0"* %104, i64 -1, i32 0, i64 1
  %125 = bitcast %"class.std::__1::basic_string"* %124 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %126 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %125, i64 0, i32 1, i32 0
  %127 = load i8, i8* %126, align 1
  %128 = icmp slt i8 %127, 0
  br i1 %128, label %129, label %132

129:                                              ; preds = %123
  %130 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %124, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %131 = load i8*, i8** %130, align 8
  call void @_ZdlPv(i8* %131) #13
  br label %132

132:                                              ; preds = %129, %123
  %133 = bitcast %"struct.std::__1::array.0"* %105 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %134 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %133, i64 0, i32 1, i32 0
  %135 = load i8, i8* %134, align 1
  %136 = icmp slt i8 %135, 0
  br i1 %136, label %137, label %140

137:                                              ; preds = %132
  %138 = getelementptr inbounds %"struct.std::__1::array.0", %"struct.std::__1::array.0"* %105, i64 0, i32 0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %139 = load i8*, i8** %138, align 8
  call void @_ZdlPv(i8* %139) #13
  br label %140

140:                                              ; preds = %137, %132
  %141 = icmp eq %"struct.std::__1::array.0"* %105, %101
  br i1 %141, label %142, label %103

142:                                              ; preds = %140
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

declare void @_ZN4base8Location7CurrentEPKcS2_i(%"class.base::Location"* sret, i8*, i8*, i32) local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink24WebGLWebCodecsVideoFrameD0Ev(%"class.blink::WebGLWebCodecsVideoFrame"*) unnamed_addr #0 align 2 {
  tail call void @_ZN5blink24WebGLWebCodecsVideoFrameD2Ev(%"class.blink::WebGLWebCodecsVideoFrame"* %0) #12
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden i32 @_ZNK5blink24WebGLWebCodecsVideoFrame7GetNameEv(%"class.blink::WebGLWebCodecsVideoFrame"* nocapture readnone) unnamed_addr #3 align 2 {
  ret i32 44
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden zeroext i1 @_ZN5blink24WebGLWebCodecsVideoFrame9SupportedEPNS_25WebGLRenderingContextBaseE(%"class.blink::WebGLRenderingContextBase"* nocapture readnone) local_unnamed_addr #3 align 2 {
  ret i1 false
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden i8* @_ZN5blink24WebGLWebCodecsVideoFrame13ExtensionNameEv() local_unnamed_addr #3 align 2 {
  ret i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.2, i64 0, i64 0)
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK5blink24WebGLWebCodecsVideoFrame5TraceEPNS_7VisitorE(%"class.blink::WebGLWebCodecsVideoFrame"*, %"class.blink::Visitor"*) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::WebGLWebCodecsVideoFrame", %"class.blink::WebGLWebCodecsVideoFrame"* %0, i64 0, i32 0
  tail call void @_ZNK5blink14WebGLExtension5TraceEPNS_7VisitorE(%"class.blink::WebGLExtension"* %3, %"class.blink::Visitor"* %1) #12
  ret void
}

declare void @_ZNK5blink14WebGLExtension5TraceEPNS_7VisitorE(%"class.blink::WebGLExtension"*, %"class.blink::Visitor"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::WebGLWebCodecsVideoFrameHandle"* @_ZN5blink24WebGLWebCodecsVideoFrame16importVideoFrameEPNS_16ExecutionContextEPNS_10VideoFrameERNS_14ExceptionStateE(%"class.blink::WebGLWebCodecsVideoFrame"*, %"class.blink::ExecutionContext"* nocapture readnone, %"class.blink::VideoFrame"* readonly, %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #0 align 2 {
  %5 = alloca %"class.WTF::String", align 8
  %6 = alloca %"class.WTF::String", align 8
  %7 = alloca %"class.WTF::String", align 8
  %8 = alloca %"class.WTF::String", align 8
  %9 = alloca %"class.WTF::String", align 8
  %10 = alloca %"class.blink::WebGLExtensionScopedContext", align 8
  %11 = alloca %"class.gfx::ColorSpace", align 4
  %12 = alloca %class.scoped_refptr.8, align 8
  %13 = alloca %"class.base::WaitableEvent", align 8
  %14 = alloca %"class.base::Location", align 8
  %15 = alloca %"class.base::OnceCallback.26", align 8
  %16 = alloca %"class.base::OnceCallback.674", align 8
  %17 = alloca %"class.WTF::String", align 8
  %18 = alloca %"class.std::__1::basic_string", align 8
  %19 = alloca %"class.blink::HeapVector.568", align 8
  %20 = alloca %"class.blink::WebGLWebCodecsTextureInfo"*, align 8
  %21 = alloca %"class.WTF::String", align 8
  %22 = alloca %"class.WTF::String", align 8
  %23 = alloca %"class.WTF::String", align 8
  %24 = alloca %"class.std::__1::basic_string", align 8
  %25 = alloca %"class.WTF::String", align 8
  %26 = alloca %"class.WTF::String", align 8
  %27 = alloca %"class.std::__1::basic_string", align 8
  %28 = alloca %"class.gfx::ColorSpace", align 4
  %29 = alloca %"class.WTF::String", align 8
  %30 = alloca %"class.std::__1::basic_string", align 8
  %31 = alloca i32, align 4
  %32 = bitcast %"class.blink::WebGLExtensionScopedContext"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %32) #12
  %33 = getelementptr inbounds %"class.blink::WebGLExtensionScopedContext", %"class.blink::WebGLExtensionScopedContext"* %10, i64 0, i32 0
  store %"class.blink::WebGLRenderingContextBase"* inttoptr (i64 -6148914691236517206 to %"class.blink::WebGLRenderingContextBase"*), %"class.blink::WebGLRenderingContextBase"** %33, align 8
  %34 = getelementptr inbounds %"class.blink::WebGLWebCodecsVideoFrame", %"class.blink::WebGLWebCodecsVideoFrame"* %0, i64 0, i32 0
  call void @_ZN5blink27WebGLExtensionScopedContextC1EPNS_14WebGLExtensionE(%"class.blink::WebGLExtensionScopedContext"* nonnull %10, %"class.blink::WebGLExtension"* %34) #12
  %35 = icmp eq %"class.blink::VideoFrame"* %2, null
  %36 = load %"class.blink::WebGLRenderingContextBase"*, %"class.blink::WebGLRenderingContextBase"** %33, align 8
  %37 = icmp eq %"class.blink::WebGLRenderingContextBase"* %36, null
  %38 = or i1 %35, %37
  br i1 %38, label %1061, label %39

39:                                               ; preds = %4
  %40 = getelementptr inbounds %"class.gfx::ColorSpace", %"class.gfx::ColorSpace"* %11, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 68, i8* nonnull %40) #12
  store i8 1, i8* %40, align 4, !alias.scope !3
  %41 = getelementptr inbounds %"class.gfx::ColorSpace", %"class.gfx::ColorSpace"* %11, i64 0, i32 1
  store i8 1, i8* %41, align 1, !alias.scope !3
  %42 = getelementptr inbounds %"class.gfx::ColorSpace", %"class.gfx::ColorSpace"* %11, i64 0, i32 2
  store i8 2, i8* %42, align 2, !alias.scope !3
  %43 = getelementptr inbounds %"class.gfx::ColorSpace", %"class.gfx::ColorSpace"* %11, i64 0, i32 3
  store i8 1, i8* %43, align 1, !alias.scope !3
  %44 = getelementptr inbounds %"class.gfx::ColorSpace", %"class.gfx::ColorSpace"* %11, i64 0, i32 4
  %45 = bitcast [9 x float]* %44 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %45, i8 0, i64 64, i1 false) #12, !alias.scope !3
  %46 = bitcast %class.scoped_refptr.8* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %46) #12
  %47 = getelementptr inbounds %class.scoped_refptr.8, %class.scoped_refptr.8* %12, i64 0, i32 0
  %48 = getelementptr inbounds %"class.blink::VideoFrame", %"class.blink::VideoFrame"* %2, i64 0, i32 3, i32 0
  %49 = load %"class.blink::VideoFrameHandle"*, %"class.blink::VideoFrameHandle"** %48, align 8
  %50 = call %"class.media::VideoFrame"* @_ZN5blink16VideoFrameHandle5frameEv(%"class.blink::VideoFrameHandle"* %49) #12
  store %"class.media::VideoFrame"* %50, %"class.media::VideoFrame"** %47, align 8
  %51 = call zeroext i1 @_ZNK5media10VideoFrame11HasTexturesEv(%"class.media::VideoFrame"* %50) #12
  br i1 %51, label %120, label %52

52:                                               ; preds = %39
  call void @_ZN5blink24WebGLWebCodecsVideoFrame29InitializeGpuMemoryBufferPoolEv(%"class.blink::WebGLWebCodecsVideoFrame"* %0)
  %53 = bitcast %"class.base::WaitableEvent"* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %53) #12
  %54 = bitcast %"class.base::WaitableEvent"* %13 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %54, i8 -86, i64 16, i1 false)
  call void @_ZN4base13WaitableEventC1ENS0_11ResetPolicyENS0_12InitialStateE(%"class.base::WaitableEvent"* nonnull %13, i32 0, i32 1) #12
  %55 = getelementptr inbounds %"class.blink::WebGLWebCodecsVideoFrame", %"class.blink::WebGLWebCodecsVideoFrame"* %0, i64 0, i32 6, i32 0
  %56 = bitcast %"class.base::SingleThreadTaskRunner"** %55 to %"class.base::TaskRunner"**
  %57 = load %"class.base::TaskRunner"*, %"class.base::TaskRunner"** %56, align 8
  %58 = bitcast %"class.base::Location"* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %58) #12
  call void @_ZN4base8Location7CurrentEPKcS2_i(%"class.base::Location"* nonnull sret %14, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.5, i64 0, i64 0), i8* getelementptr inbounds ([78 x i8], [78 x i8]* @.str.1, i64 0, i64 0), i32 336) #12
  %59 = getelementptr inbounds %"class.blink::WebGLWebCodecsVideoFrame", %"class.blink::WebGLWebCodecsVideoFrame"* %0, i64 0, i32 4, i32 0, i32 0, i32 0
  %60 = bitcast %"class.media::GpuMemoryBufferVideoFramePool"** %59 to i64*
  %61 = load i64, i64* %60, align 8
  %62 = load %"class.media::VideoFrame"*, %"class.media::VideoFrame"** %47, align 8
  %63 = icmp eq %"class.media::VideoFrame"* %62, null
  br i1 %63, label %67, label %64

64:                                               ; preds = %52
  %65 = getelementptr inbounds %"class.media::VideoFrame", %"class.media::VideoFrame"* %62, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %66 = atomicrmw add i32* %65, i32 1 monotonic
  br label %67

67:                                               ; preds = %64, %52
  %68 = ptrtoint %"class.media::VideoFrame"* %62 to i64
  %69 = bitcast %"class.base::OnceCallback.674"* %16 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %69) #12
  %70 = ptrtoint %"class.blink::WebGLWebCodecsVideoFrame"* %0 to i64
  %71 = ptrtoint %"class.base::WaitableEvent"* %13 to i64
  %72 = call i8* @_Znwm(i64 64) #13, !noalias !6
  %73 = bitcast i8* %72 to %"class.base::internal::BindStateBase"*
  call void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_E(%"class.base::internal::BindStateBase"* nonnull %73, void ()* bitcast (void (%"class.base::internal::BindStateBase"*, %class.scoped_refptr.8*)* @_ZN4base8internal7InvokerINS0_9BindStateIMN5blink24WebGLWebCodecsVideoFrameEFvPNS_13WaitableEventE13scoped_refptrIN5media10VideoFrameEEEJNS0_17UnretainedWrapperIS4_EENSD_IS5_EEEEEFvSA_EE7RunOnceEPNS0_13BindStateBaseEOSA_ to void ()*), void (%"class.base::internal::BindStateBase"*)* nonnull @_ZN4base8internal9BindStateIMN5blink24WebGLWebCodecsVideoFrameEFvPNS_13WaitableEventE13scoped_refptrIN5media10VideoFrameEEEJNS0_17UnretainedWrapperIS3_EENSC_IS4_EEEE7DestroyEPKNS0_13BindStateBaseE) #12, !noalias !6
  %74 = getelementptr inbounds i8, i8* %72, i64 32
  %75 = bitcast i8* %74 to <2 x i64>*
  store <2 x i64> <i64 ptrtoint (void (%"class.blink::WebGLWebCodecsVideoFrame"*, %"class.base::WaitableEvent"*, %"class.media::VideoFrame"*)* @_ZN5blink24WebGLWebCodecsVideoFrame27OnHardwareVideoFrameCreatedEPN4base13WaitableEventE13scoped_refptrIN5media10VideoFrameEE to i64), i64 0>, <2 x i64>* %75, align 8, !noalias !6
  %76 = getelementptr inbounds i8, i8* %72, i64 48
  %77 = bitcast i8* %76 to i64*
  store i64 %70, i64* %77, align 8, !noalias !6
  %78 = getelementptr inbounds i8, i8* %72, i64 56
  %79 = bitcast i8* %78 to i64*
  store i64 %71, i64* %79, align 8, !noalias !6
  %80 = bitcast %"class.base::OnceCallback.674"* %16 to i8**
  store i8* %72, i8** %80, align 8, !alias.scope !6
  %81 = call i8* @_Znwm(i64 72) #13, !noalias !11
  %82 = bitcast i8* %81 to %"class.base::internal::BindStateBase"*
  call void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_E(%"class.base::internal::BindStateBase"* nonnull %82, void ()* bitcast (void (%"class.base::internal::BindStateBase"*)* @_ZN4base8internal7InvokerINS0_9BindStateIMN5media29GpuMemoryBufferVideoFramePoolEFv13scoped_refptrINS3_10VideoFrameEENS_12OnceCallbackIFvS7_EEEEJNS0_17UnretainedWrapperIS4_EENS0_18RetainedRefWrapperIS6_EESA_EEEFvvEE7RunOnceEPNS0_13BindStateBaseE to void ()*), void (%"class.base::internal::BindStateBase"*)* nonnull @_ZN4base8internal9BindStateIMN5media29GpuMemoryBufferVideoFramePoolEFv13scoped_refptrINS2_10VideoFrameEENS_12OnceCallbackIFvS6_EEEEJNS0_17UnretainedWrapperIS3_EENS0_18RetainedRefWrapperIS5_EES9_EE7DestroyEPKNS0_13BindStateBaseE) #12, !noalias !11
  %83 = getelementptr inbounds i8, i8* %81, i64 32
  %84 = bitcast i8* %83 to <2 x i64>*
  store <2 x i64> <i64 17, i64 0>, <2 x i64>* %84, align 8, !noalias !11
  %85 = getelementptr inbounds i8, i8* %81, i64 48
  %86 = bitcast i8* %85 to i64*
  store i64 %61, i64* %86, align 8, !noalias !11
  %87 = getelementptr inbounds i8, i8* %81, i64 56
  %88 = bitcast i8* %87 to i64*
  store i64 %68, i64* %88, align 8, !noalias !11
  %89 = getelementptr inbounds i8, i8* %81, i64 64
  %90 = getelementptr inbounds %"class.base::OnceCallback.674", %"class.base::OnceCallback.674"* %16, i64 0, i32 0, i32 0, i32 0
  %91 = bitcast %"class.base::OnceCallback.674"* %16 to i64*
  %92 = load i64, i64* %91, align 8, !noalias !11
  %93 = bitcast i8* %89 to i64*
  store i64 %92, i64* %93, align 8, !noalias !11
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %90, align 8, !noalias !11
  %94 = bitcast %"class.base::OnceCallback.26"* %15 to i8**
  store i8* %81, i8** %94, align 8, !alias.scope !11
  %95 = call zeroext i1 @_ZN4base10TaskRunner8PostTaskERKNS_8LocationENS_12OnceCallbackIFvvEEE(%"class.base::TaskRunner"* %57, %"class.base::Location"* nonnull dereferenceable(32) %14, %"class.base::OnceCallback.26"* nonnull %15) #12
  %96 = getelementptr inbounds %"class.base::OnceCallback.26", %"class.base::OnceCallback.26"* %15, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %96) #12
  %97 = getelementptr inbounds %"class.base::OnceCallback.674", %"class.base::OnceCallback.674"* %16, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %97) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %69) #12
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %58) #12
  notail call void @_ZN4base13WaitableEvent4WaitEv(%"class.base::WaitableEvent"* nonnull %13) #12
  %98 = load %"class.media::VideoFrame"*, %"class.media::VideoFrame"** %47, align 8
  %99 = getelementptr inbounds %"class.blink::WebGLWebCodecsVideoFrame", %"class.blink::WebGLWebCodecsVideoFrame"* %0, i64 0, i32 7, i32 0
  %100 = load %"class.media::VideoFrame"*, %"class.media::VideoFrame"** %99, align 8
  %101 = icmp eq %"class.media::VideoFrame"* %98, %100
  br i1 %101, label %102, label %103

102:                                              ; preds = %67
  call void @_ZN5blink14ExceptionState14ThrowTypeErrorEPKc(%"class.blink::ExceptionState"* %3, i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.6, i64 0, i64 0)) #12
  call void @_ZN4base13WaitableEventD1Ev(%"class.base::WaitableEvent"* nonnull %13) #12
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %53) #12
  br label %1044

103:                                              ; preds = %67
  %104 = ptrtoint %"class.media::VideoFrame"* %100 to i64
  store %"class.media::VideoFrame"* null, %"class.media::VideoFrame"** %99, align 8
  %105 = bitcast %class.scoped_refptr.8* %12 to i64*
  store i64 %104, i64* %105, align 8
  %106 = icmp eq %"class.media::VideoFrame"* %98, null
  br i1 %106, label %119, label %107

107:                                              ; preds = %103
  %108 = getelementptr inbounds %"class.media::VideoFrame", %"class.media::VideoFrame"* %98, i64 0, i32 1
  %109 = getelementptr inbounds %"class.base::RefCountedThreadSafe.9", %"class.base::RefCountedThreadSafe.9"* %108, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %110 = atomicrmw sub i32* %109, i32 1 acq_rel
  %111 = icmp eq i32 %110, 1
  br i1 %111, label %112, label %119

112:                                              ; preds = %107
  %113 = getelementptr inbounds %"class.base::RefCountedThreadSafe.9", %"class.base::RefCountedThreadSafe.9"* %108, i64 -2
  %114 = bitcast %"class.base::RefCountedThreadSafe.9"* %113 to %"class.media::VideoFrame"*
  %115 = bitcast %"class.base::RefCountedThreadSafe.9"* %113 to void (%"class.media::VideoFrame"*)***
  %116 = load void (%"class.media::VideoFrame"*)**, void (%"class.media::VideoFrame"*)*** %115, align 8
  %117 = getelementptr inbounds void (%"class.media::VideoFrame"*)*, void (%"class.media::VideoFrame"*)** %116, i64 1
  %118 = load void (%"class.media::VideoFrame"*)*, void (%"class.media::VideoFrame"*)** %117, align 8
  call void %118(%"class.media::VideoFrame"* nonnull %114) #12
  br label %119

119:                                              ; preds = %103, %107, %112
  call void @_ZN4base13WaitableEventD1Ev(%"class.base::WaitableEvent"* nonnull %13) #12
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %53) #12
  br label %120

120:                                              ; preds = %119, %39
  %121 = getelementptr inbounds %"class.blink::WebGLWebCodecsVideoFrame", %"class.blink::WebGLWebCodecsVideoFrame"* %0, i64 0, i32 1, i32 0, i32 0
  %122 = load i64, i64* %121, align 8
  %123 = and i64 %122, 1
  %124 = icmp eq i64 %123, 0
  br i1 %124, label %125, label %162

125:                                              ; preds = %120
  %126 = bitcast %"class.WTF::String"* %17 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %126) #12
  %127 = bitcast %"class.std::__1::basic_string"* %18 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %127) #12
  call void @_ZN5media24VideoPixelFormatToStringENS_16VideoPixelFormatE(%"class.std::__1::basic_string"* nonnull sret %18, i32 0) #12
  %128 = bitcast %"class.std::__1::basic_string"* %18 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %129 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %128, i64 0, i32 1, i32 0
  %130 = load i8, i8* %129, align 1
  %131 = icmp slt i8 %130, 0
  %132 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %18, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %133 = load i8*, i8** %132, align 8
  %134 = select i1 %131, i8* %133, i8* %127
  %135 = call %"class.WTF::StringImpl"* (i8*, ...) @_ZN3WTF6String6FormatEPKcz(i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.7, i64 0, i64 0), i8* %134) #12
  %136 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %17, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %135, %"class.WTF::StringImpl"** %136, align 8
  %137 = bitcast %"class.blink::ExceptionState"* %3 to void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)***
  %138 = load void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)**, void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)*** %137, align 8
  %139 = getelementptr inbounds void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)*, void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)** %138, i64 3
  %140 = load void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)*, void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)** %139, align 8
  call void %140(%"class.blink::ExceptionState"* %3, %"class.WTF::String"* nonnull dereferenceable(8) %17) #12
  %141 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %136, align 8
  %142 = icmp eq %"class.WTF::StringImpl"* %141, null
  br i1 %142, label %156, label %143

143:                                              ; preds = %125
  %144 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %141, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %145 = load atomic i32, i32* %144 monotonic, align 4
  %146 = and i32 %145, 2
  %147 = icmp eq i32 %146, 0
  %148 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %141, i64 0, i32 0
  %149 = load i32, i32* %148, align 4
  br i1 %147, label %150, label %152

150:                                              ; preds = %143
  %151 = add i32 %149, -1
  store i32 %151, i32* %148, align 4
  br label %152

152:                                              ; preds = %150, %143
  %153 = phi i32 [ %151, %150 ], [ %149, %143 ]
  %154 = icmp eq i32 %153, 0
  br i1 %154, label %155, label %156

155:                                              ; preds = %152
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %141) #12
  br label %156

156:                                              ; preds = %125, %152, %155
  %157 = load i8, i8* %129, align 1
  %158 = icmp slt i8 %157, 0
  br i1 %158, label %159, label %161

159:                                              ; preds = %156
  %160 = load i8*, i8** %132, align 8
  call void @_ZdlPv(i8* %160) #13
  br label %161

161:                                              ; preds = %156, %159
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %127) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %126) #12
  br label %1044

162:                                              ; preds = %120
  %163 = bitcast %"class.blink::HeapVector.568"* %19 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %163) #12
  %164 = getelementptr inbounds %"class.blink::HeapVector.568", %"class.blink::HeapVector.568"* %19, i64 0, i32 0, i32 0, i32 0, i32 0
  %165 = getelementptr inbounds %"class.blink::HeapVector.568", %"class.blink::HeapVector.568"* %19, i64 0, i32 0, i32 0, i32 0, i32 1
  %166 = getelementptr inbounds %"class.blink::HeapVector.568", %"class.blink::HeapVector.568"* %19, i64 0, i32 0, i32 0, i32 0, i32 2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %163, i8 0, i64 16, i1 false) #12
  %167 = load %"class.media::VideoFrame"*, %"class.media::VideoFrame"** %47, align 8
  %168 = call i64 @_ZNK5media10VideoFrame11NumTexturesEv(%"class.media::VideoFrame"* %167) #12
  %169 = icmp eq i64 %168, 0
  br i1 %169, label %180, label %170

170:                                              ; preds = %162
  %171 = bitcast %"class.blink::WebGLWebCodecsTextureInfo"** %20 to i8*
  %172 = bitcast %"class.blink::WebGLWebCodecsTextureInfo"** %20 to i8**
  %173 = getelementptr inbounds %"class.blink::HeapVector.568", %"class.blink::HeapVector.568"* %19, i64 0, i32 0
  %174 = bitcast %"class.WTF::String"* %21 to i8*
  %175 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %21, i64 0, i32 0, i32 0
  %176 = bitcast %"class.WTF::String"* %22 to i8*
  %177 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %22, i64 0, i32 0, i32 0
  %178 = bitcast %"class.WTF::String"* %23 to i8*
  %179 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %23, i64 0, i32 0, i32 0
  br label %198

180:                                              ; preds = %466, %162
  %181 = call i8* @_ZN5blink10ThreadHeap8AllocateINS_17IDLDictionaryBaseEEEPhm(i64 80) #12
  %182 = bitcast i8* %181 to %"class.blink::WebGLWebCodecsVideoFrameHandle"*
  call void @_ZN5blink30WebGLWebCodecsVideoFrameHandleC1Ev(%"class.blink::WebGLWebCodecsVideoFrameHandle"* %182) #12
  %183 = getelementptr inbounds i8, i8* %181, i64 -4
  %184 = bitcast i8* %183 to i16*
  %185 = load atomic i16, i16* %184 monotonic, align 2
  %186 = or i16 %185, 1
  store atomic i16 %186, i16* %184 release, align 2
  call void @_ZN5blink30WebGLWebCodecsVideoFrameHandle19setTextureInfoArrayERKNS_10HeapVectorINS_6MemberINS_25WebGLWebCodecsTextureInfoEEELj0EEE(%"class.blink::WebGLWebCodecsVideoFrameHandle"* %182, %"class.blink::HeapVector.568"* nonnull dereferenceable(16) %19) #12
  %187 = bitcast %"class.std::__1::basic_string"* %24 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %187) #12
  %188 = bitcast %"class.std::__1::basic_string"* %24 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %189 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %188, i64 0, i32 1, i32 0
  store i8 0, i8* %189, align 1
  store i8 0, i8* %187, align 8
  %190 = call i32 @_ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEmmPKcm(%"class.std::__1::basic_string"* nonnull %24, i64 0, i64 -1, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.8, i64 0, i64 0), i64 0) #12
  %191 = icmp eq i32 %190, 0
  %192 = load i8, i8* %189, align 1
  %193 = icmp slt i8 %192, 0
  br i1 %193, label %194, label %197

194:                                              ; preds = %180
  %195 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %24, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %196 = load i8*, i8** %195, align 8
  call void @_ZdlPv(i8* %196) #13
  br label %197

197:                                              ; preds = %180, %194
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %187) #12
  br i1 %191, label %533, label %474

198:                                              ; preds = %170, %466
  %199 = phi i64 [ 0, %170 ], [ %470, %466 ]
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %171) #12
  store %"class.blink::WebGLWebCodecsTextureInfo"* inttoptr (i64 -6148914691236517206 to %"class.blink::WebGLWebCodecsTextureInfo"*), %"class.blink::WebGLWebCodecsTextureInfo"** %20, align 8
  %200 = call i8* @_ZN5blink10ThreadHeap8AllocateINS_17IDLDictionaryBaseEEEPhm(i64 56) #12
  %201 = bitcast i8* %200 to %"class.blink::WebGLWebCodecsTextureInfo"*
  call void @_ZN5blink25WebGLWebCodecsTextureInfoC1Ev(%"class.blink::WebGLWebCodecsTextureInfo"* %201) #12
  %202 = getelementptr inbounds i8, i8* %200, i64 -4
  %203 = bitcast i8* %202 to i16*
  %204 = load atomic i16, i16* %203 monotonic, align 2
  %205 = or i16 %204, 1
  store atomic i16 %205, i16* %203 release, align 2
  store i8* %200, i8** %172, align 8
  %206 = load i32, i32* %166, align 4
  %207 = load i32, i32* %165, align 8
  %208 = icmp eq i32 %206, %207
  br i1 %208, label %222, label %209, !prof !16

209:                                              ; preds = %198
  %210 = ptrtoint i8* %200 to i64
  %211 = load %"class.blink::Member.574"*, %"class.blink::Member.574"** %164, align 8
  %212 = zext i32 %206 to i64
  %213 = getelementptr inbounds %"class.blink::Member.574", %"class.blink::Member.574"* %211, i64 %212
  %214 = bitcast %"class.blink::Member.574"* %213 to i64*
  store atomic i64 %210, i64* %214 monotonic, align 8
  %215 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %216 = icmp eq i32 %215, 0
  br i1 %216, label %219, label %217

217:                                              ; preds = %209
  %218 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %200) #12
  br label %219

219:                                              ; preds = %217, %209
  %220 = load i32, i32* %166, align 4
  %221 = add i32 %220, 1
  store i32 %221, i32* %166, align 4
  br label %223

222:                                              ; preds = %198
  call void @_ZN3WTF6VectorIN5blink6MemberINS1_25WebGLWebCodecsTextureInfoEEELj0ENS1_13HeapAllocatorEE14AppendSlowCaseIRPS3_EEvOT_(%"class.WTF::Vector.571"* nonnull %173, %"class.blink::WebGLWebCodecsTextureInfo"** nonnull dereferenceable(8) %20) #12
  br label %223

223:                                              ; preds = %219, %222
  %224 = load %"class.blink::WebGLWebCodecsTextureInfo"*, %"class.blink::WebGLWebCodecsTextureInfo"** %20, align 8
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %174) #12
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %21, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.3, i64 0, i64 0), i64 9) #12
  %225 = getelementptr inbounds %"class.blink::WebGLWebCodecsTextureInfo", %"class.blink::WebGLWebCodecsTextureInfo"* %224, i64 0, i32 4
  %226 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %175, align 8
  %227 = icmp eq %"class.WTF::StringImpl"* %226, null
  br i1 %227, label %245, label %228

228:                                              ; preds = %223
  %229 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %226, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %230 = load atomic i32, i32* %229 monotonic, align 4
  %231 = and i32 %230, 2
  %232 = icmp eq i32 %231, 0
  br i1 %232, label %233, label %245

233:                                              ; preds = %228
  %234 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %226, i64 0, i32 0
  %235 = load i32, i32* %234, align 4
  %236 = zext i32 %235 to i33
  %237 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %236, i33 1) #12
  %238 = extractvalue { i33, i1 } %237, 1
  %239 = extractvalue { i33, i1 } %237, 0
  %240 = icmp slt i33 %239, 0
  %241 = or i1 %238, %240
  br i1 %241, label %242, label %243, !prof !16

242:                                              ; preds = %233
  call void @llvm.trap() #12
  unreachable

243:                                              ; preds = %233
  %244 = trunc i33 %239 to i32
  store i32 %244, i32* %234, align 4
  br label %245

245:                                              ; preds = %243, %228, %223
  %246 = ptrtoint %"class.WTF::StringImpl"* %226 to i64
  %247 = bitcast %"class.WTF::String"* %225 to i64*
  %248 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %225, i64 0, i32 0, i32 0
  %249 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %248, align 8
  store i64 %246, i64* %247, align 8
  %250 = icmp eq %"class.WTF::StringImpl"* %249, null
  br i1 %250, label %264, label %251

251:                                              ; preds = %245
  %252 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %249, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %253 = load atomic i32, i32* %252 monotonic, align 4
  %254 = and i32 %253, 2
  %255 = icmp eq i32 %254, 0
  %256 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %249, i64 0, i32 0
  %257 = load i32, i32* %256, align 4
  br i1 %255, label %258, label %260

258:                                              ; preds = %251
  %259 = add i32 %257, -1
  store i32 %259, i32* %256, align 4
  br label %260

260:                                              ; preds = %258, %251
  %261 = phi i32 [ %259, %258 ], [ %257, %251 ]
  %262 = icmp eq i32 %261, 0
  br i1 %262, label %263, label %264

263:                                              ; preds = %260
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %249) #12
  br label %264

264:                                              ; preds = %245, %260, %263
  %265 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %175, align 8
  %266 = icmp eq %"class.WTF::StringImpl"* %265, null
  br i1 %266, label %280, label %267

267:                                              ; preds = %264
  %268 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %265, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %269 = load atomic i32, i32* %268 monotonic, align 4
  %270 = and i32 %269, 2
  %271 = icmp eq i32 %270, 0
  %272 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %265, i64 0, i32 0
  %273 = load i32, i32* %272, align 4
  br i1 %271, label %274, label %276

274:                                              ; preds = %267
  %275 = add i32 %273, -1
  store i32 %275, i32* %272, align 4
  br label %276

276:                                              ; preds = %274, %267
  %277 = phi i32 [ %275, %274 ], [ %273, %267 ]
  %278 = icmp eq i32 %277, 0
  br i1 %278, label %279, label %280

279:                                              ; preds = %276
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %265) #12
  br label %280

280:                                              ; preds = %264, %276, %279
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %174) #12
  %281 = load %"class.blink::WebGLWebCodecsTextureInfo"*, %"class.blink::WebGLWebCodecsTextureInfo"** %20, align 8
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %176) #12
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %22, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.4, i64 0, i64 0), i64 9) #12
  %282 = getelementptr inbounds %"class.blink::WebGLWebCodecsTextureInfo", %"class.blink::WebGLWebCodecsTextureInfo"* %281, i64 0, i32 3
  %283 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %177, align 8
  %284 = icmp eq %"class.WTF::StringImpl"* %283, null
  br i1 %284, label %302, label %285

285:                                              ; preds = %280
  %286 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %283, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %287 = load atomic i32, i32* %286 monotonic, align 4
  %288 = and i32 %287, 2
  %289 = icmp eq i32 %288, 0
  br i1 %289, label %290, label %302

290:                                              ; preds = %285
  %291 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %283, i64 0, i32 0
  %292 = load i32, i32* %291, align 4
  %293 = zext i32 %292 to i33
  %294 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %293, i33 1) #12
  %295 = extractvalue { i33, i1 } %294, 1
  %296 = extractvalue { i33, i1 } %294, 0
  %297 = icmp slt i33 %296, 0
  %298 = or i1 %295, %297
  br i1 %298, label %299, label %300, !prof !16

299:                                              ; preds = %290
  call void @llvm.trap() #12
  unreachable

300:                                              ; preds = %290
  %301 = trunc i33 %296 to i32
  store i32 %301, i32* %291, align 4
  br label %302

302:                                              ; preds = %300, %285, %280
  %303 = ptrtoint %"class.WTF::StringImpl"* %283 to i64
  %304 = bitcast %"class.WTF::String"* %282 to i64*
  %305 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %282, i64 0, i32 0, i32 0
  %306 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %305, align 8
  store i64 %303, i64* %304, align 8
  %307 = icmp eq %"class.WTF::StringImpl"* %306, null
  br i1 %307, label %321, label %308

308:                                              ; preds = %302
  %309 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %306, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %310 = load atomic i32, i32* %309 monotonic, align 4
  %311 = and i32 %310, 2
  %312 = icmp eq i32 %311, 0
  %313 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %306, i64 0, i32 0
  %314 = load i32, i32* %313, align 4
  br i1 %312, label %315, label %317

315:                                              ; preds = %308
  %316 = add i32 %314, -1
  store i32 %316, i32* %313, align 4
  br label %317

317:                                              ; preds = %315, %308
  %318 = phi i32 [ %316, %315 ], [ %314, %308 ]
  %319 = icmp eq i32 %318, 0
  br i1 %319, label %320, label %321

320:                                              ; preds = %317
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %306) #12
  br label %321

321:                                              ; preds = %302, %317, %320
  %322 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %177, align 8
  %323 = icmp eq %"class.WTF::StringImpl"* %322, null
  br i1 %323, label %337, label %324

324:                                              ; preds = %321
  %325 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %322, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %326 = load atomic i32, i32* %325 monotonic, align 4
  %327 = and i32 %326, 2
  %328 = icmp eq i32 %327, 0
  %329 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %322, i64 0, i32 0
  %330 = load i32, i32* %329, align 4
  br i1 %328, label %331, label %333

331:                                              ; preds = %324
  %332 = add i32 %330, -1
  store i32 %332, i32* %329, align 4
  br label %333

333:                                              ; preds = %331, %324
  %334 = phi i32 [ %332, %331 ], [ %330, %324 ]
  %335 = icmp eq i32 %334, 0
  br i1 %335, label %336, label %337

336:                                              ; preds = %333
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %322) #12
  br label %337

337:                                              ; preds = %321, %333, %336
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %176) #12
  %338 = load %"class.blink::WebGLWebCodecsTextureInfo"*, %"class.blink::WebGLWebCodecsTextureInfo"** %20, align 8
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %178) #12
  %339 = getelementptr inbounds %"class.blink::WebGLWebCodecsVideoFrame", %"class.blink::WebGLWebCodecsVideoFrame"* %0, i64 0, i32 2, i32 0, i64 0, i32 0, i64 %199
  %340 = bitcast %"class.std::__1::basic_string"* %339 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %341 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %340, i64 0, i32 1, i32 0
  %342 = load i8, i8* %341, align 1
  %343 = icmp slt i8 %342, 0
  br i1 %343, label %344, label %347

344:                                              ; preds = %337
  %345 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %339, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %346 = load i8*, i8** %345, align 8
  br label %349

347:                                              ; preds = %337
  %348 = bitcast %"class.std::__1::basic_string"* %339 to i8*
  br label %349

349:                                              ; preds = %344, %347
  %350 = phi i8* [ %346, %344 ], [ %348, %347 ]
  %351 = icmp eq i8* %350, null
  br i1 %351, label %354, label %352

352:                                              ; preds = %349
  %353 = call i64 @strlen(i8* nonnull %350) #14
  br label %354

354:                                              ; preds = %349, %352
  %355 = phi i64 [ %353, %352 ], [ 0, %349 ]
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %23, i8* %350, i64 %355) #12
  %356 = getelementptr inbounds %"class.blink::WebGLWebCodecsTextureInfo", %"class.blink::WebGLWebCodecsTextureInfo"* %338, i64 0, i32 2
  %357 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %179, align 8
  %358 = icmp eq %"class.WTF::StringImpl"* %357, null
  br i1 %358, label %376, label %359

359:                                              ; preds = %354
  %360 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %357, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %361 = load atomic i32, i32* %360 monotonic, align 4
  %362 = and i32 %361, 2
  %363 = icmp eq i32 %362, 0
  br i1 %363, label %364, label %376

364:                                              ; preds = %359
  %365 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %357, i64 0, i32 0
  %366 = load i32, i32* %365, align 4
  %367 = zext i32 %366 to i33
  %368 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %367, i33 1) #12
  %369 = extractvalue { i33, i1 } %368, 1
  %370 = extractvalue { i33, i1 } %368, 0
  %371 = icmp slt i33 %370, 0
  %372 = or i1 %369, %371
  br i1 %372, label %373, label %374, !prof !16

373:                                              ; preds = %364
  call void @llvm.trap() #12
  unreachable

374:                                              ; preds = %364
  %375 = trunc i33 %370 to i32
  store i32 %375, i32* %365, align 4
  br label %376

376:                                              ; preds = %374, %359, %354
  %377 = ptrtoint %"class.WTF::StringImpl"* %357 to i64
  %378 = bitcast %"class.WTF::String"* %356 to i64*
  %379 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %356, i64 0, i32 0, i32 0
  %380 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %379, align 8
  store i64 %377, i64* %378, align 8
  %381 = icmp eq %"class.WTF::StringImpl"* %380, null
  br i1 %381, label %395, label %382

382:                                              ; preds = %376
  %383 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %380, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %384 = load atomic i32, i32* %383 monotonic, align 4
  %385 = and i32 %384, 2
  %386 = icmp eq i32 %385, 0
  %387 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %380, i64 0, i32 0
  %388 = load i32, i32* %387, align 4
  br i1 %386, label %389, label %391

389:                                              ; preds = %382
  %390 = add i32 %388, -1
  store i32 %390, i32* %387, align 4
  br label %391

391:                                              ; preds = %389, %382
  %392 = phi i32 [ %390, %389 ], [ %388, %382 ]
  %393 = icmp eq i32 %392, 0
  br i1 %393, label %394, label %395

394:                                              ; preds = %391
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %380) #12
  br label %395

395:                                              ; preds = %376, %391, %394
  %396 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %179, align 8
  %397 = icmp eq %"class.WTF::StringImpl"* %396, null
  br i1 %397, label %411, label %398

398:                                              ; preds = %395
  %399 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %396, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %400 = load atomic i32, i32* %399 monotonic, align 4
  %401 = and i32 %400, 2
  %402 = icmp eq i32 %401, 0
  %403 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %396, i64 0, i32 0
  %404 = load i32, i32* %403, align 4
  br i1 %402, label %405, label %407

405:                                              ; preds = %398
  %406 = add i32 %404, -1
  store i32 %406, i32* %403, align 4
  br label %407

407:                                              ; preds = %405, %398
  %408 = phi i32 [ %406, %405 ], [ %404, %398 ]
  %409 = icmp eq i32 %408, 0
  br i1 %409, label %410, label %411

410:                                              ; preds = %407
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %396) #12
  br label %411

411:                                              ; preds = %395, %407, %410
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %178) #12
  %412 = load %"class.blink::WebGLRenderingContextBase"*, %"class.blink::WebGLRenderingContextBase"** %33, align 8
  %413 = call %"class.blink::DrawingBuffer"* @_ZNK5blink25WebGLRenderingContextBase16GetDrawingBufferEv(%"class.blink::WebGLRenderingContextBase"* %412) #12
  %414 = icmp eq %"class.blink::DrawingBuffer"* %413, null
  br i1 %414, label %417, label %415

415:                                              ; preds = %411
  %416 = call %"class.gpu::gles2::GLES2Interface"* @_ZN5blink13DrawingBuffer9ContextGLEv(%"class.blink::DrawingBuffer"* nonnull %413) #12
  br label %417

417:                                              ; preds = %411, %415
  %418 = phi %"class.gpu::gles2::GLES2Interface"* [ %416, %415 ], [ null, %411 ]
  %419 = load %"class.media::VideoFrame"*, %"class.media::VideoFrame"** %47, align 8
  %420 = call dereferenceable(48) %"struct.gpu::MailboxHolder"* @_ZNK5media10VideoFrame14mailbox_holderEm(%"class.media::VideoFrame"* %419, i64 %199) #12
  %421 = getelementptr inbounds %"class.gpu::gles2::GLES2Interface", %"class.gpu::gles2::GLES2Interface"* %418, i64 0, i32 0
  %422 = getelementptr inbounds %"struct.gpu::MailboxHolder", %"struct.gpu::MailboxHolder"* %420, i64 0, i32 1, i32 0
  %423 = bitcast %"class.gpu::gles2::GLES2Interface"* %418 to void (%"class.gpu::InterfaceBase"*, i8*)***
  %424 = load void (%"class.gpu::InterfaceBase"*, i8*)**, void (%"class.gpu::InterfaceBase"*, i8*)*** %423, align 8
  %425 = getelementptr inbounds void (%"class.gpu::InterfaceBase"*, i8*)*, void (%"class.gpu::InterfaceBase"*, i8*)** %424, i64 3
  %426 = load void (%"class.gpu::InterfaceBase"*, i8*)*, void (%"class.gpu::InterfaceBase"*, i8*)** %425, align 8
  call void %426(%"class.gpu::InterfaceBase"* %421, i8* %422) #12
  %427 = getelementptr inbounds %"struct.gpu::MailboxHolder", %"struct.gpu::MailboxHolder"* %420, i64 0, i32 0
  %428 = call zeroext i1 @_ZNK3gpu7Mailbox13IsSharedImageEv(%"struct.gpu::Mailbox"* %427) #12
  %429 = getelementptr inbounds %"struct.gpu::MailboxHolder", %"struct.gpu::MailboxHolder"* %420, i64 0, i32 0, i32 0, i64 0
  %430 = bitcast %"class.gpu::gles2::GLES2Interface"* %418 to i32 (%"class.gpu::gles2::GLES2Interface"*, i8*)***
  %431 = load i32 (%"class.gpu::gles2::GLES2Interface"*, i8*)**, i32 (%"class.gpu::gles2::GLES2Interface"*, i8*)*** %430, align 8
  br i1 %428, label %432, label %440

432:                                              ; preds = %417
  %433 = getelementptr inbounds i32 (%"class.gpu::gles2::GLES2Interface"*, i8*)*, i32 (%"class.gpu::gles2::GLES2Interface"*, i8*)** %431, i64 353
  %434 = load i32 (%"class.gpu::gles2::GLES2Interface"*, i8*)*, i32 (%"class.gpu::gles2::GLES2Interface"*, i8*)** %433, align 8
  %435 = call i32 %434(%"class.gpu::gles2::GLES2Interface"* %418, i8* %429) #12
  %436 = bitcast %"class.gpu::gles2::GLES2Interface"* %418 to void (%"class.gpu::gles2::GLES2Interface"*, i32, i32)***
  %437 = load void (%"class.gpu::gles2::GLES2Interface"*, i32, i32)**, void (%"class.gpu::gles2::GLES2Interface"*, i32, i32)*** %436, align 8
  %438 = getelementptr inbounds void (%"class.gpu::gles2::GLES2Interface"*, i32, i32)*, void (%"class.gpu::gles2::GLES2Interface"*, i32, i32)** %437, i64 355
  %439 = load void (%"class.gpu::gles2::GLES2Interface"*, i32, i32)*, void (%"class.gpu::gles2::GLES2Interface"*, i32, i32)** %438, align 8
  call void %439(%"class.gpu::gles2::GLES2Interface"* %418, i32 %435, i32 35574) #12
  br label %444

440:                                              ; preds = %417
  %441 = getelementptr inbounds i32 (%"class.gpu::gles2::GLES2Interface"*, i8*)*, i32 (%"class.gpu::gles2::GLES2Interface"*, i8*)** %431, i64 309
  %442 = load i32 (%"class.gpu::gles2::GLES2Interface"*, i8*)*, i32 (%"class.gpu::gles2::GLES2Interface"*, i8*)** %441, align 8
  %443 = call i32 %442(%"class.gpu::gles2::GLES2Interface"* %418, i8* %429) #12
  br label %444

444:                                              ; preds = %440, %432
  %445 = phi i32 [ %435, %432 ], [ %443, %440 ]
  %446 = load %"class.media::VideoFrame"*, %"class.media::VideoFrame"** %47, align 8
  %447 = call dereferenceable(48) %"struct.gpu::MailboxHolder"* @_ZNK5media10VideoFrame14mailbox_holderEm(%"class.media::VideoFrame"* %446, i64 %199) #12
  %448 = getelementptr inbounds %"struct.gpu::MailboxHolder", %"struct.gpu::MailboxHolder"* %447, i64 0, i32 2
  %449 = load i32, i32* %448, align 8
  %450 = load %"class.blink::WebGLRenderingContextBase"*, %"class.blink::WebGLRenderingContextBase"** %33, align 8
  %451 = call i8* @_ZN5blink10ThreadHeap8AllocateINS_15ScriptWrappableEEEPhm(i64 96) #12
  %452 = bitcast i8* %451 to %"class.blink::WebGLUnownedTexture"*
  call void @_ZN5blink19WebGLUnownedTextureC1EPNS_25WebGLRenderingContextBaseEjj(%"class.blink::WebGLUnownedTexture"* %452, %"class.blink::WebGLRenderingContextBase"* %450, i32 %445, i32 %449) #12
  %453 = getelementptr inbounds i8, i8* %451, i64 -4
  %454 = bitcast i8* %453 to i16*
  %455 = load atomic i16, i16* %454 monotonic, align 2
  %456 = or i16 %455, 1
  store atomic i16 %456, i16* %454 release, align 2
  %457 = load %"class.blink::WebGLWebCodecsTextureInfo"*, %"class.blink::WebGLWebCodecsTextureInfo"** %20, align 8
  %458 = getelementptr inbounds %"class.blink::WebGLWebCodecsTextureInfo", %"class.blink::WebGLWebCodecsTextureInfo"* %457, i64 0, i32 6
  %459 = ptrtoint i8* %451 to i64
  %460 = bitcast %"class.blink::Member.512"* %458 to i64*
  store atomic i64 %459, i64* %460 monotonic, align 8
  %461 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %462 = icmp eq i32 %461, 0
  br i1 %462, label %466, label %463

463:                                              ; preds = %444
  %464 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %451) #12
  %465 = load %"class.blink::WebGLWebCodecsTextureInfo"*, %"class.blink::WebGLWebCodecsTextureInfo"** %20, align 8
  br label %466

466:                                              ; preds = %444, %463
  %467 = phi %"class.blink::WebGLWebCodecsTextureInfo"* [ %457, %444 ], [ %465, %463 ]
  %468 = getelementptr inbounds %"class.blink::WebGLWebCodecsTextureInfo", %"class.blink::WebGLWebCodecsTextureInfo"* %467, i64 0, i32 5
  store i32 %449, i32* %468, align 8
  %469 = getelementptr inbounds %"class.blink::WebGLWebCodecsTextureInfo", %"class.blink::WebGLWebCodecsTextureInfo"* %467, i64 0, i32 1
  store i8 1, i8* %469, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %171) #12
  %470 = add nuw i64 %199, 1
  %471 = load %"class.media::VideoFrame"*, %"class.media::VideoFrame"** %47, align 8
  %472 = call i64 @_ZNK5media10VideoFrame11NumTexturesEv(%"class.media::VideoFrame"* %471) #12
  %473 = icmp ult i64 %470, %472
  br i1 %473, label %198, label %180

474:                                              ; preds = %197
  %475 = bitcast %"class.WTF::String"* %25 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %475) #12
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %25, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.8, i64 0, i64 0), i64 0) #12
  %476 = getelementptr inbounds i8, i8* %181, i64 56
  %477 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %25, i64 0, i32 0, i32 0
  %478 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %477, align 8
  %479 = icmp eq %"class.WTF::StringImpl"* %478, null
  br i1 %479, label %497, label %480

480:                                              ; preds = %474
  %481 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %478, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %482 = load atomic i32, i32* %481 monotonic, align 4
  %483 = and i32 %482, 2
  %484 = icmp eq i32 %483, 0
  br i1 %484, label %485, label %497

485:                                              ; preds = %480
  %486 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %478, i64 0, i32 0
  %487 = load i32, i32* %486, align 4
  %488 = zext i32 %487 to i33
  %489 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %488, i33 1) #12
  %490 = extractvalue { i33, i1 } %489, 1
  %491 = extractvalue { i33, i1 } %489, 0
  %492 = icmp slt i33 %491, 0
  %493 = or i1 %490, %492
  br i1 %493, label %494, label %495, !prof !16

494:                                              ; preds = %485
  call void @llvm.trap() #12
  unreachable

495:                                              ; preds = %485
  %496 = trunc i33 %491 to i32
  store i32 %496, i32* %486, align 4
  br label %497

497:                                              ; preds = %495, %480, %474
  %498 = ptrtoint %"class.WTF::StringImpl"* %478 to i64
  %499 = bitcast i8* %476 to i64*
  %500 = bitcast i8* %476 to %"class.WTF::StringImpl"**
  %501 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %500, align 8
  store i64 %498, i64* %499, align 8
  %502 = icmp eq %"class.WTF::StringImpl"* %501, null
  br i1 %502, label %516, label %503

503:                                              ; preds = %497
  %504 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %501, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %505 = load atomic i32, i32* %504 monotonic, align 4
  %506 = and i32 %505, 2
  %507 = icmp eq i32 %506, 0
  %508 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %501, i64 0, i32 0
  %509 = load i32, i32* %508, align 4
  br i1 %507, label %510, label %512

510:                                              ; preds = %503
  %511 = add i32 %509, -1
  store i32 %511, i32* %508, align 4
  br label %512

512:                                              ; preds = %510, %503
  %513 = phi i32 [ %511, %510 ], [ %509, %503 ]
  %514 = icmp eq i32 %513, 0
  br i1 %514, label %515, label %516

515:                                              ; preds = %512
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %501) #12
  br label %516

516:                                              ; preds = %497, %512, %515
  %517 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %477, align 8
  %518 = icmp eq %"class.WTF::StringImpl"* %517, null
  br i1 %518, label %532, label %519

519:                                              ; preds = %516
  %520 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %517, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %521 = load atomic i32, i32* %520 monotonic, align 4
  %522 = and i32 %521, 2
  %523 = icmp eq i32 %522, 0
  %524 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %517, i64 0, i32 0
  %525 = load i32, i32* %524, align 4
  br i1 %523, label %526, label %528

526:                                              ; preds = %519
  %527 = add i32 %525, -1
  store i32 %527, i32* %524, align 4
  br label %528

528:                                              ; preds = %526, %519
  %529 = phi i32 [ %527, %526 ], [ %525, %519 ]
  %530 = icmp eq i32 %529, 0
  br i1 %530, label %531, label %532

531:                                              ; preds = %528
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %517) #12
  br label %532

532:                                              ; preds = %516, %528, %531
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %475) #12
  br label %533

533:                                              ; preds = %197, %532
  %534 = bitcast %"class.WTF::String"* %26 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %534) #12
  %535 = bitcast %"class.std::__1::basic_string"* %27 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %535) #12
  call void @_ZN5media24VideoPixelFormatToStringENS_16VideoPixelFormatE(%"class.std::__1::basic_string"* nonnull sret %27, i32 0) #12
  %536 = bitcast %"class.std::__1::basic_string"* %27 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %537 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %536, i64 0, i32 1, i32 0
  %538 = load i8, i8* %537, align 1
  %539 = icmp slt i8 %538, 0
  %540 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %27, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %541 = load i8*, i8** %540, align 8
  %542 = select i1 %539, i8* %541, i8* %535
  %543 = getelementptr inbounds i8, i8* %542, i64 13
  %544 = icmp eq i8* %543, null
  br i1 %544, label %547, label %545

545:                                              ; preds = %533
  %546 = call i64 @strlen(i8* nonnull %543) #14
  br label %547

547:                                              ; preds = %533, %545
  %548 = phi i64 [ %546, %545 ], [ 0, %533 ]
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %26, i8* %543, i64 %548) #12
  %549 = call { i8, i64 } @_ZN5blink8bindings26FindIndexInEnumStringTableERKN3WTF6StringEN4base4spanIKPKcLm18446744073709551615EEE(%"class.WTF::String"* nonnull dereferenceable(8) %26, i64 8, i8** getelementptr inbounds ([8 x i8*], [8 x i8*]* @_ZN5blink18V8VideoPixelFormat13string_table_E, i64 0, i64 0)) #12, !noalias !17
  %550 = extractvalue { i8, i64 } %549, 0
  %551 = icmp eq i8 %550, 0
  br i1 %551, label %557, label %552

552:                                              ; preds = %547
  %553 = extractvalue { i8, i64 } %549, 1
  %554 = getelementptr inbounds [8 x i8*], [8 x i8*]* @_ZN5blink18V8VideoPixelFormat13string_table_E.const, i64 0, i64 %553
  %555 = bitcast i8** %554 to i64*
  %556 = load i64, i64* %555, align 8, !noalias !17
  br label %557

557:                                              ; preds = %547, %552
  %558 = phi i64 [ undef, %547 ], [ %556, %552 ]
  %559 = phi i8 [ 0, %547 ], [ 1, %552 ]
  %560 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %26, i64 0, i32 0, i32 0
  %561 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %560, align 8
  %562 = icmp eq %"class.WTF::StringImpl"* %561, null
  br i1 %562, label %576, label %563

563:                                              ; preds = %557
  %564 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %561, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %565 = load atomic i32, i32* %564 monotonic, align 4
  %566 = and i32 %565, 2
  %567 = icmp eq i32 %566, 0
  %568 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %561, i64 0, i32 0
  %569 = load i32, i32* %568, align 4
  br i1 %567, label %570, label %572

570:                                              ; preds = %563
  %571 = add i32 %569, -1
  store i32 %571, i32* %568, align 4
  br label %572

572:                                              ; preds = %570, %563
  %573 = phi i32 [ %571, %570 ], [ %569, %563 ]
  %574 = icmp eq i32 %573, 0
  br i1 %574, label %575, label %576

575:                                              ; preds = %572
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %561) #12
  br label %576

576:                                              ; preds = %557, %572, %575
  %577 = load i8, i8* %537, align 1
  %578 = icmp slt i8 %577, 0
  br i1 %578, label %579, label %581

579:                                              ; preds = %576
  %580 = load i8*, i8** %540, align 8
  call void @_ZdlPv(i8* %580) #13
  br label %581

581:                                              ; preds = %576, %579
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %535) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %534) #12
  %582 = icmp eq i8 %559, 0
  br i1 %582, label %583, label %584, !prof !16

583:                                              ; preds = %581
  call void @llvm.trap() #12
  unreachable

584:                                              ; preds = %581
  %585 = bitcast %"class.WTF::String"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %585)
  %586 = inttoptr i64 %558 to i8*
  %587 = icmp eq i64 %558, 0
  br i1 %587, label %590, label %588

588:                                              ; preds = %584
  %589 = call i64 @strlen(i8* nonnull %586) #14
  br label %590

590:                                              ; preds = %584, %588
  %591 = phi i64 [ %589, %588 ], [ 0, %584 ]
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %5, i8* %586, i64 %591) #12
  %592 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %5, i64 0, i32 0, i32 0
  %593 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %592, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %585)
  %594 = getelementptr inbounds i8, i8* %181, i64 40
  %595 = icmp eq %"class.WTF::StringImpl"* %593, null
  br i1 %595, label %613, label %596

596:                                              ; preds = %590
  %597 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %593, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %598 = load atomic i32, i32* %597 monotonic, align 4
  %599 = and i32 %598, 2
  %600 = icmp eq i32 %599, 0
  br i1 %600, label %601, label %613

601:                                              ; preds = %596
  %602 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %593, i64 0, i32 0
  %603 = load i32, i32* %602, align 4
  %604 = zext i32 %603 to i33
  %605 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %604, i33 1) #12
  %606 = extractvalue { i33, i1 } %605, 1
  %607 = extractvalue { i33, i1 } %605, 0
  %608 = icmp slt i33 %607, 0
  %609 = or i1 %606, %608
  br i1 %609, label %610, label %611, !prof !16

610:                                              ; preds = %601
  call void @llvm.trap() #12
  unreachable

611:                                              ; preds = %601
  %612 = trunc i33 %607 to i32
  store i32 %612, i32* %602, align 4
  br label %613

613:                                              ; preds = %611, %596, %590
  %614 = ptrtoint %"class.WTF::StringImpl"* %593 to i64
  %615 = bitcast i8* %594 to i64*
  %616 = bitcast i8* %594 to %"class.WTF::StringImpl"**
  %617 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %616, align 8
  store i64 %614, i64* %615, align 8
  %618 = icmp eq %"class.WTF::StringImpl"* %617, null
  br i1 %618, label %632, label %619

619:                                              ; preds = %613
  %620 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %617, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %621 = load atomic i32, i32* %620 monotonic, align 4
  %622 = and i32 %621, 2
  %623 = icmp eq i32 %622, 0
  %624 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %617, i64 0, i32 0
  %625 = load i32, i32* %624, align 4
  br i1 %623, label %626, label %628

626:                                              ; preds = %619
  %627 = add i32 %625, -1
  store i32 %627, i32* %624, align 4
  br label %628

628:                                              ; preds = %626, %619
  %629 = phi i32 [ %627, %626 ], [ %625, %619 ]
  %630 = icmp eq i32 %629, 0
  br i1 %630, label %631, label %632

631:                                              ; preds = %628
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %617) #12
  br label %632

632:                                              ; preds = %613, %628, %631
  br i1 %595, label %646, label %633

633:                                              ; preds = %632
  %634 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %593, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %635 = load atomic i32, i32* %634 monotonic, align 4
  %636 = and i32 %635, 2
  %637 = icmp eq i32 %636, 0
  %638 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %593, i64 0, i32 0
  %639 = load i32, i32* %638, align 4
  br i1 %637, label %640, label %642

640:                                              ; preds = %633
  %641 = add i32 %639, -1
  store i32 %641, i32* %638, align 4
  br label %642

642:                                              ; preds = %640, %633
  %643 = phi i32 [ %641, %640 ], [ %639, %633 ]
  %644 = icmp eq i32 %643, 0
  br i1 %644, label %645, label %646

645:                                              ; preds = %642
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %593) #12
  br label %646

646:                                              ; preds = %632, %642, %645
  %647 = getelementptr inbounds i8, i8* %181, i64 32
  store i8 1, i8* %647, align 8
  %648 = getelementptr inbounds i8, i8* %181, i64 8
  store i8 1, i8* %648, align 8
  %649 = getelementptr inbounds i8, i8* %181, i64 48
  store i8 0, i8* %649, align 8
  %650 = getelementptr inbounds i8, i8* %181, i64 9
  store i8 1, i8* %650, align 1
  %651 = call i8* @_ZN5blink10ThreadHeap8AllocateINS_17IDLDictionaryBaseEEEPhm(i64 40) #12
  %652 = bitcast i8* %651 to %"class.blink::VideoColorSpace"*
  call void @_ZN5blink15VideoColorSpaceC1Ev(%"class.blink::VideoColorSpace"* %652) #12
  %653 = getelementptr inbounds i8, i8* %651, i64 -4
  %654 = bitcast i8* %653 to i16*
  %655 = load atomic i16, i16* %654 monotonic, align 2
  %656 = or i16 %655, 1
  store atomic i16 %656, i16* %654 release, align 2
  %657 = call zeroext i8 @_ZNK3gfx10ColorSpace12GetPrimaryIDEv(%"class.gfx::ColorSpace"* nonnull %11) #12
  switch i8 %657, label %726 [
    i8 1, label %667
    i8 2, label %658
    i8 3, label %659
    i8 4, label %660
    i8 5, label %661
    i8 6, label %662
    i8 7, label %663
    i8 8, label %664
    i8 9, label %665
    i8 10, label %666
  ]

658:                                              ; preds = %646
  br label %667

659:                                              ; preds = %646
  br label %667

660:                                              ; preds = %646
  br label %667

661:                                              ; preds = %646
  br label %667

662:                                              ; preds = %646
  br label %667

663:                                              ; preds = %646
  br label %667

664:                                              ; preds = %646
  br label %667

665:                                              ; preds = %646
  br label %667

666:                                              ; preds = %646
  br label %667

667:                                              ; preds = %666, %665, %664, %663, %662, %661, %660, %659, %658, %646
  %668 = phi i64 [ ptrtoint ([7 x i8]* @.str.20 to i64), %658 ], [ ptrtoint ([8 x i8]* @.str.21 to i64), %659 ], [ ptrtoint ([10 x i8]* @.str.22 to i64), %660 ], [ ptrtoint ([10 x i8]* @.str.23 to i64), %661 ], [ ptrtoint ([5 x i8]* @.str.24 to i64), %662 ], [ ptrtoint ([7 x i8]* @.str.25 to i64), %663 ], [ ptrtoint ([13 x i8]* @.str.26 to i64), %664 ], [ ptrtoint ([13 x i8]* @.str.27 to i64), %665 ], [ ptrtoint ([13 x i8]* @.str.28 to i64), %666 ], [ ptrtoint ([6 x i8]* @.str.19 to i64), %646 ]
  %669 = bitcast %"class.WTF::String"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %669) #12
  %670 = inttoptr i64 %668 to i8*
  %671 = call i64 @strlen(i8* nonnull %670) #14
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %6, i8* %670, i64 %671) #12
  %672 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %6, i64 0, i32 0, i32 0
  %673 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %672, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %669) #12
  %674 = getelementptr inbounds i8, i8* %651, i64 16
  %675 = icmp eq %"class.WTF::StringImpl"* %673, null
  br i1 %675, label %693, label %676

676:                                              ; preds = %667
  %677 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %673, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %678 = load atomic i32, i32* %677 monotonic, align 4
  %679 = and i32 %678, 2
  %680 = icmp eq i32 %679, 0
  br i1 %680, label %681, label %693

681:                                              ; preds = %676
  %682 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %673, i64 0, i32 0
  %683 = load i32, i32* %682, align 4
  %684 = zext i32 %683 to i33
  %685 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %684, i33 1) #12
  %686 = extractvalue { i33, i1 } %685, 1
  %687 = extractvalue { i33, i1 } %685, 0
  %688 = icmp slt i33 %687, 0
  %689 = or i1 %686, %688
  br i1 %689, label %690, label %691, !prof !16

690:                                              ; preds = %681
  call void @llvm.trap() #12
  unreachable

691:                                              ; preds = %681
  %692 = trunc i33 %687 to i32
  store i32 %692, i32* %682, align 4
  br label %693

693:                                              ; preds = %691, %676, %667
  %694 = ptrtoint %"class.WTF::StringImpl"* %673 to i64
  %695 = bitcast i8* %674 to i64*
  %696 = bitcast i8* %674 to %"class.WTF::StringImpl"**
  %697 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %696, align 8
  store i64 %694, i64* %695, align 8
  %698 = icmp eq %"class.WTF::StringImpl"* %697, null
  br i1 %698, label %712, label %699

699:                                              ; preds = %693
  %700 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %697, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %701 = load atomic i32, i32* %700 monotonic, align 4
  %702 = and i32 %701, 2
  %703 = icmp eq i32 %702, 0
  %704 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %697, i64 0, i32 0
  %705 = load i32, i32* %704, align 4
  br i1 %703, label %706, label %708

706:                                              ; preds = %699
  %707 = add i32 %705, -1
  store i32 %707, i32* %704, align 4
  br label %708

708:                                              ; preds = %706, %699
  %709 = phi i32 [ %707, %706 ], [ %705, %699 ]
  %710 = icmp eq i32 %709, 0
  br i1 %710, label %711, label %712

711:                                              ; preds = %708
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %697) #12
  br label %712

712:                                              ; preds = %711, %708, %693
  br i1 %675, label %726, label %713

713:                                              ; preds = %712
  %714 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %673, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %715 = load atomic i32, i32* %714 monotonic, align 4
  %716 = and i32 %715, 2
  %717 = icmp eq i32 %716, 0
  %718 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %673, i64 0, i32 0
  %719 = load i32, i32* %718, align 4
  br i1 %717, label %720, label %722

720:                                              ; preds = %713
  %721 = add i32 %719, -1
  store i32 %721, i32* %718, align 4
  br label %722

722:                                              ; preds = %720, %713
  %723 = phi i32 [ %721, %720 ], [ %719, %713 ]
  %724 = icmp eq i32 %723, 0
  br i1 %724, label %725, label %726

725:                                              ; preds = %722
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %673) #12
  br label %726

726:                                              ; preds = %725, %722, %712, %646
  %727 = call zeroext i8 @_ZNK3gfx10ColorSpace13GetTransferIDEv(%"class.gfx::ColorSpace"* nonnull %11) #12
  switch i8 %727, label %801 [
    i8 1, label %742
    i8 4, label %728
    i8 6, label %729
    i8 7, label %730
    i8 8, label %731
    i8 9, label %732
    i8 10, label %733
    i8 11, label %734
    i8 12, label %735
    i8 13, label %736
    i8 14, label %737
    i8 15, label %738
    i8 16, label %739
    i8 17, label %740
    i8 18, label %741
  ]

728:                                              ; preds = %726
  br label %742

729:                                              ; preds = %726
  br label %742

730:                                              ; preds = %726
  br label %742

731:                                              ; preds = %726
  br label %742

732:                                              ; preds = %726
  br label %742

733:                                              ; preds = %726
  br label %742

734:                                              ; preds = %726
  br label %742

735:                                              ; preds = %726
  br label %742

736:                                              ; preds = %726
  br label %742

737:                                              ; preds = %726
  br label %742

738:                                              ; preds = %726
  br label %742

739:                                              ; preds = %726
  br label %742

740:                                              ; preds = %726
  br label %742

741:                                              ; preds = %726
  br label %742

742:                                              ; preds = %741, %740, %739, %738, %737, %736, %735, %734, %733, %732, %731, %730, %729, %728, %726
  %743 = phi i64 [ ptrtoint ([8 x i8]* @.str.30 to i64), %728 ], [ ptrtoint ([8 x i8]* @.str.31 to i64), %729 ], [ ptrtoint ([10 x i8]* @.str.22 to i64), %730 ], [ ptrtoint ([10 x i8]* @.str.23 to i64), %731 ], [ ptrtoint ([7 x i8]* @.str.32 to i64), %732 ], [ ptrtoint ([4 x i8]* @.str.33 to i64), %733 ], [ ptrtoint ([9 x i8]* @.str.34 to i64), %734 ], [ ptrtoint ([13 x i8]* @.str.35 to i64), %735 ], [ ptrtoint ([11 x i8]* @.str.36 to i64), %736 ], [ ptrtoint ([13 x i8]* @.str.37 to i64), %737 ], [ ptrtoint ([10 x i8]* @.str.38 to i64), %738 ], [ ptrtoint ([10 x i8]* @.str.39 to i64), %739 ], [ ptrtoint ([12 x i8]* @.str.40 to i64), %740 ], [ ptrtoint ([13 x i8]* @.str.26 to i64), %741 ], [ ptrtoint ([6 x i8]* @.str.19 to i64), %726 ]
  %744 = bitcast %"class.WTF::String"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %744) #12
  %745 = inttoptr i64 %743 to i8*
  %746 = call i64 @strlen(i8* nonnull %745) #14
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %7, i8* %745, i64 %746) #12
  %747 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %7, i64 0, i32 0, i32 0
  %748 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %747, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %744) #12
  %749 = getelementptr inbounds i8, i8* %651, i64 32
  %750 = icmp eq %"class.WTF::StringImpl"* %748, null
  br i1 %750, label %768, label %751

751:                                              ; preds = %742
  %752 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %748, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %753 = load atomic i32, i32* %752 monotonic, align 4
  %754 = and i32 %753, 2
  %755 = icmp eq i32 %754, 0
  br i1 %755, label %756, label %768

756:                                              ; preds = %751
  %757 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %748, i64 0, i32 0
  %758 = load i32, i32* %757, align 4
  %759 = zext i32 %758 to i33
  %760 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %759, i33 1) #12
  %761 = extractvalue { i33, i1 } %760, 1
  %762 = extractvalue { i33, i1 } %760, 0
  %763 = icmp slt i33 %762, 0
  %764 = or i1 %761, %763
  br i1 %764, label %765, label %766, !prof !16

765:                                              ; preds = %756
  call void @llvm.trap() #12
  unreachable

766:                                              ; preds = %756
  %767 = trunc i33 %762 to i32
  store i32 %767, i32* %757, align 4
  br label %768

768:                                              ; preds = %766, %751, %742
  %769 = ptrtoint %"class.WTF::StringImpl"* %748 to i64
  %770 = bitcast i8* %749 to i64*
  %771 = bitcast i8* %749 to %"class.WTF::StringImpl"**
  %772 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %771, align 8
  store i64 %769, i64* %770, align 8
  %773 = icmp eq %"class.WTF::StringImpl"* %772, null
  br i1 %773, label %787, label %774

774:                                              ; preds = %768
  %775 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %772, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %776 = load atomic i32, i32* %775 monotonic, align 4
  %777 = and i32 %776, 2
  %778 = icmp eq i32 %777, 0
  %779 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %772, i64 0, i32 0
  %780 = load i32, i32* %779, align 4
  br i1 %778, label %781, label %783

781:                                              ; preds = %774
  %782 = add i32 %780, -1
  store i32 %782, i32* %779, align 4
  br label %783

783:                                              ; preds = %781, %774
  %784 = phi i32 [ %782, %781 ], [ %780, %774 ]
  %785 = icmp eq i32 %784, 0
  br i1 %785, label %786, label %787

786:                                              ; preds = %783
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %772) #12
  br label %787

787:                                              ; preds = %786, %783, %768
  br i1 %750, label %801, label %788

788:                                              ; preds = %787
  %789 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %748, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %790 = load atomic i32, i32* %789 monotonic, align 4
  %791 = and i32 %790, 2
  %792 = icmp eq i32 %791, 0
  %793 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %748, i64 0, i32 0
  %794 = load i32, i32* %793, align 4
  br i1 %792, label %795, label %797

795:                                              ; preds = %788
  %796 = add i32 %794, -1
  store i32 %796, i32* %793, align 4
  br label %797

797:                                              ; preds = %795, %788
  %798 = phi i32 [ %796, %795 ], [ %794, %788 ]
  %799 = icmp eq i32 %798, 0
  br i1 %799, label %800, label %801

800:                                              ; preds = %797
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %748) #12
  br label %801

801:                                              ; preds = %800, %797, %787, %726
  %802 = call zeroext i8 @_ZNK3gfx10ColorSpace11GetMatrixIDEv(%"class.gfx::ColorSpace"* nonnull %11) #12
  switch i8 %802, label %871 [
    i8 1, label %812
    i8 2, label %803
    i8 3, label %804
    i8 4, label %805
    i8 5, label %806
    i8 6, label %807
    i8 7, label %808
    i8 8, label %809
    i8 9, label %810
    i8 10, label %811
  ]

803:                                              ; preds = %801
  br label %812

804:                                              ; preds = %801
  br label %812

805:                                              ; preds = %801
  br label %812

806:                                              ; preds = %801
  br label %812

807:                                              ; preds = %801
  br label %812

808:                                              ; preds = %801
  br label %812

809:                                              ; preds = %801
  br label %812

810:                                              ; preds = %801
  br label %812

811:                                              ; preds = %801
  br label %812

812:                                              ; preds = %811, %810, %809, %808, %807, %806, %805, %804, %803, %801
  %813 = phi i64 [ ptrtoint ([6 x i8]* @.str.19 to i64), %803 ], [ ptrtoint ([4 x i8]* @.str.42 to i64), %804 ], [ ptrtoint ([8 x i8]* @.str.21 to i64), %805 ], [ ptrtoint ([10 x i8]* @.str.22 to i64), %806 ], [ ptrtoint ([10 x i8]* @.str.23 to i64), %807 ], [ ptrtoint ([6 x i8]* @.str.43 to i64), %808 ], [ ptrtoint ([11 x i8]* @.str.44 to i64), %809 ], [ ptrtoint ([10 x i8]* @.str.45 to i64), %810 ], [ ptrtoint ([6 x i8]* @.str.46 to i64), %811 ], [ ptrtoint ([4 x i8]* @.str.41 to i64), %801 ]
  %814 = bitcast %"class.WTF::String"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %814) #12
  %815 = inttoptr i64 %813 to i8*
  %816 = call i64 @strlen(i8* nonnull %815) #14
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %8, i8* %815, i64 %816) #12
  %817 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %8, i64 0, i32 0, i32 0
  %818 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %817, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %814) #12
  %819 = getelementptr inbounds i8, i8* %651, i64 8
  %820 = icmp eq %"class.WTF::StringImpl"* %818, null
  br i1 %820, label %838, label %821

821:                                              ; preds = %812
  %822 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %818, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %823 = load atomic i32, i32* %822 monotonic, align 4
  %824 = and i32 %823, 2
  %825 = icmp eq i32 %824, 0
  br i1 %825, label %826, label %838

826:                                              ; preds = %821
  %827 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %818, i64 0, i32 0
  %828 = load i32, i32* %827, align 4
  %829 = zext i32 %828 to i33
  %830 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %829, i33 1) #12
  %831 = extractvalue { i33, i1 } %830, 1
  %832 = extractvalue { i33, i1 } %830, 0
  %833 = icmp slt i33 %832, 0
  %834 = or i1 %831, %833
  br i1 %834, label %835, label %836, !prof !16

835:                                              ; preds = %826
  call void @llvm.trap() #12
  unreachable

836:                                              ; preds = %826
  %837 = trunc i33 %832 to i32
  store i32 %837, i32* %827, align 4
  br label %838

838:                                              ; preds = %836, %821, %812
  %839 = ptrtoint %"class.WTF::StringImpl"* %818 to i64
  %840 = bitcast i8* %819 to i64*
  %841 = bitcast i8* %819 to %"class.WTF::StringImpl"**
  %842 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %841, align 8
  store i64 %839, i64* %840, align 8
  %843 = icmp eq %"class.WTF::StringImpl"* %842, null
  br i1 %843, label %857, label %844

844:                                              ; preds = %838
  %845 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %842, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %846 = load atomic i32, i32* %845 monotonic, align 4
  %847 = and i32 %846, 2
  %848 = icmp eq i32 %847, 0
  %849 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %842, i64 0, i32 0
  %850 = load i32, i32* %849, align 4
  br i1 %848, label %851, label %853

851:                                              ; preds = %844
  %852 = add i32 %850, -1
  store i32 %852, i32* %849, align 4
  br label %853

853:                                              ; preds = %851, %844
  %854 = phi i32 [ %852, %851 ], [ %850, %844 ]
  %855 = icmp eq i32 %854, 0
  br i1 %855, label %856, label %857

856:                                              ; preds = %853
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %842) #12
  br label %857

857:                                              ; preds = %856, %853, %838
  br i1 %820, label %871, label %858

858:                                              ; preds = %857
  %859 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %818, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %860 = load atomic i32, i32* %859 monotonic, align 4
  %861 = and i32 %860, 2
  %862 = icmp eq i32 %861, 0
  %863 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %818, i64 0, i32 0
  %864 = load i32, i32* %863, align 4
  br i1 %862, label %865, label %867

865:                                              ; preds = %858
  %866 = add i32 %864, -1
  store i32 %866, i32* %863, align 4
  br label %867

867:                                              ; preds = %865, %858
  %868 = phi i32 [ %866, %865 ], [ %864, %858 ]
  %869 = icmp eq i32 %868, 0
  br i1 %869, label %870, label %871

870:                                              ; preds = %867
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %818) #12
  br label %871

871:                                              ; preds = %870, %867, %857, %801
  %872 = call zeroext i8 @_ZNK3gfx10ColorSpace10GetRangeIDEv(%"class.gfx::ColorSpace"* nonnull %11) #12
  switch i8 %872, label %934 [
    i8 1, label %875
    i8 2, label %873
    i8 3, label %874
  ]

873:                                              ; preds = %871
  br label %875

874:                                              ; preds = %871
  br label %875

875:                                              ; preds = %874, %873, %871
  %876 = phi i64 [ ptrtoint ([5 x i8]* @.str.48 to i64), %873 ], [ ptrtoint ([8 x i8]* @.str.49 to i64), %874 ], [ ptrtoint ([8 x i8]* @.str.47 to i64), %871 ]
  %877 = bitcast %"class.WTF::String"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %877) #12
  %878 = inttoptr i64 %876 to i8*
  %879 = call i64 @strlen(i8* nonnull %878) #14
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %9, i8* %878, i64 %879) #12
  %880 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %9, i64 0, i32 0, i32 0
  %881 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %880, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %877) #12
  %882 = getelementptr inbounds i8, i8* %651, i64 24
  %883 = icmp eq %"class.WTF::StringImpl"* %881, null
  br i1 %883, label %901, label %884

884:                                              ; preds = %875
  %885 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %881, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %886 = load atomic i32, i32* %885 monotonic, align 4
  %887 = and i32 %886, 2
  %888 = icmp eq i32 %887, 0
  br i1 %888, label %889, label %901

889:                                              ; preds = %884
  %890 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %881, i64 0, i32 0
  %891 = load i32, i32* %890, align 4
  %892 = zext i32 %891 to i33
  %893 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %892, i33 1) #12
  %894 = extractvalue { i33, i1 } %893, 1
  %895 = extractvalue { i33, i1 } %893, 0
  %896 = icmp slt i33 %895, 0
  %897 = or i1 %894, %896
  br i1 %897, label %898, label %899, !prof !16

898:                                              ; preds = %889
  call void @llvm.trap() #12
  unreachable

899:                                              ; preds = %889
  %900 = trunc i33 %895 to i32
  store i32 %900, i32* %890, align 4
  br label %901

901:                                              ; preds = %899, %884, %875
  %902 = ptrtoint %"class.WTF::StringImpl"* %881 to i64
  %903 = bitcast i8* %882 to i64*
  %904 = bitcast i8* %882 to %"class.WTF::StringImpl"**
  %905 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %904, align 8
  store i64 %902, i64* %903, align 8
  %906 = icmp eq %"class.WTF::StringImpl"* %905, null
  br i1 %906, label %920, label %907

907:                                              ; preds = %901
  %908 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %905, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %909 = load atomic i32, i32* %908 monotonic, align 4
  %910 = and i32 %909, 2
  %911 = icmp eq i32 %910, 0
  %912 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %905, i64 0, i32 0
  %913 = load i32, i32* %912, align 4
  br i1 %911, label %914, label %916

914:                                              ; preds = %907
  %915 = add i32 %913, -1
  store i32 %915, i32* %912, align 4
  br label %916

916:                                              ; preds = %914, %907
  %917 = phi i32 [ %915, %914 ], [ %913, %907 ]
  %918 = icmp eq i32 %917, 0
  br i1 %918, label %919, label %920

919:                                              ; preds = %916
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %905) #12
  br label %920

920:                                              ; preds = %919, %916, %901
  br i1 %883, label %934, label %921

921:                                              ; preds = %920
  %922 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %881, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %923 = load atomic i32, i32* %922 monotonic, align 4
  %924 = and i32 %923, 2
  %925 = icmp eq i32 %924, 0
  %926 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %881, i64 0, i32 0
  %927 = load i32, i32* %926, align 4
  br i1 %925, label %928, label %930

928:                                              ; preds = %921
  %929 = add i32 %927, -1
  store i32 %929, i32* %926, align 4
  br label %930

930:                                              ; preds = %928, %921
  %931 = phi i32 [ %929, %928 ], [ %927, %921 ]
  %932 = icmp eq i32 %931, 0
  br i1 %932, label %933, label %934

933:                                              ; preds = %930
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %881) #12
  br label %934

934:                                              ; preds = %871, %920, %930, %933
  call void @_ZN5blink30WebGLWebCodecsVideoFrameHandle13setColorSpaceEPNS_15VideoColorSpaceE(%"class.blink::WebGLWebCodecsVideoFrameHandle"* %182, %"class.blink::VideoColorSpace"* %652) #12
  %935 = getelementptr inbounds %"class.gfx::ColorSpace", %"class.gfx::ColorSpace"* %28, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 68, i8* nonnull %935) #12
  store i8 1, i8* %935, align 4, !alias.scope !20
  %936 = getelementptr inbounds %"class.gfx::ColorSpace", %"class.gfx::ColorSpace"* %28, i64 0, i32 1
  store i8 14, i8* %936, align 1, !alias.scope !20
  %937 = getelementptr inbounds %"class.gfx::ColorSpace", %"class.gfx::ColorSpace"* %28, i64 0, i32 2
  store i8 1, i8* %937, align 2, !alias.scope !20
  %938 = getelementptr inbounds %"class.gfx::ColorSpace", %"class.gfx::ColorSpace"* %28, i64 0, i32 3
  store i8 2, i8* %938, align 1, !alias.scope !20
  %939 = getelementptr inbounds %"class.gfx::ColorSpace", %"class.gfx::ColorSpace"* %28, i64 0, i32 4
  %940 = bitcast [9 x float]* %939 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %940, i8 0, i64 64, i1 false) #12, !alias.scope !20
  %941 = call %"class.gfx::ColorTransform"* @_ZN3gfx14ColorTransform17NewColorTransformERKNS_10ColorSpaceEiS3_iNS0_6IntentE(%"class.gfx::ColorSpace"* nonnull dereferenceable(68) %11, i32 8, %"class.gfx::ColorSpace"* nonnull dereferenceable(68) %28, i32 8, i32 0) #12
  %942 = bitcast %"class.WTF::String"* %29 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %942) #12
  %943 = bitcast %"class.std::__1::basic_string"* %30 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %943) #12
  %944 = bitcast %"class.gfx::ColorTransform"* %941 to void (%"class.std::__1::basic_string"*, %"class.gfx::ColorTransform"*)***
  %945 = load void (%"class.std::__1::basic_string"*, %"class.gfx::ColorTransform"*)**, void (%"class.std::__1::basic_string"*, %"class.gfx::ColorTransform"*)*** %944, align 8
  %946 = getelementptr inbounds void (%"class.std::__1::basic_string"*, %"class.gfx::ColorTransform"*)*, void (%"class.std::__1::basic_string"*, %"class.gfx::ColorTransform"*)** %945, i64 5
  %947 = load void (%"class.std::__1::basic_string"*, %"class.gfx::ColorTransform"*)*, void (%"class.std::__1::basic_string"*, %"class.gfx::ColorTransform"*)** %946, align 8
  call void %947(%"class.std::__1::basic_string"* nonnull sret %30, %"class.gfx::ColorTransform"* %941) #12
  %948 = bitcast %"class.std::__1::basic_string"* %30 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %949 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %948, i64 0, i32 1, i32 0
  %950 = load i8, i8* %949, align 1
  %951 = icmp slt i8 %950, 0
  br i1 %951, label %952, label %956

952:                                              ; preds = %934
  %953 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %30, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %954 = load i8*, i8** %953, align 8
  %955 = icmp eq i8* %954, null
  br i1 %955, label %959, label %956

956:                                              ; preds = %934, %952
  %957 = phi i8* [ %954, %952 ], [ %943, %934 ]
  %958 = call i64 @strlen(i8* nonnull %957) #14
  br label %959

959:                                              ; preds = %952, %956
  %960 = phi i8* [ %957, %956 ], [ null, %952 ]
  %961 = phi i64 [ %958, %956 ], [ 0, %952 ]
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %29, i8* %960, i64 %961) #12
  %962 = getelementptr inbounds i8, i8* %181, i64 16
  %963 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %29, i64 0, i32 0, i32 0
  %964 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %963, align 8
  %965 = icmp eq %"class.WTF::StringImpl"* %964, null
  br i1 %965, label %983, label %966

966:                                              ; preds = %959
  %967 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %964, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %968 = load atomic i32, i32* %967 monotonic, align 4
  %969 = and i32 %968, 2
  %970 = icmp eq i32 %969, 0
  br i1 %970, label %971, label %983

971:                                              ; preds = %966
  %972 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %964, i64 0, i32 0
  %973 = load i32, i32* %972, align 4
  %974 = zext i32 %973 to i33
  %975 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %974, i33 1) #12
  %976 = extractvalue { i33, i1 } %975, 1
  %977 = extractvalue { i33, i1 } %975, 0
  %978 = icmp slt i33 %977, 0
  %979 = or i1 %976, %978
  br i1 %979, label %980, label %981, !prof !16

980:                                              ; preds = %971
  call void @llvm.trap() #12
  unreachable

981:                                              ; preds = %971
  %982 = trunc i33 %977 to i32
  store i32 %982, i32* %972, align 4
  br label %983

983:                                              ; preds = %981, %966, %959
  %984 = ptrtoint %"class.WTF::StringImpl"* %964 to i64
  %985 = bitcast i8* %962 to i64*
  %986 = bitcast i8* %962 to %"class.WTF::StringImpl"**
  %987 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %986, align 8
  store i64 %984, i64* %985, align 8
  %988 = icmp eq %"class.WTF::StringImpl"* %987, null
  br i1 %988, label %1002, label %989

989:                                              ; preds = %983
  %990 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %987, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %991 = load atomic i32, i32* %990 monotonic, align 4
  %992 = and i32 %991, 2
  %993 = icmp eq i32 %992, 0
  %994 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %987, i64 0, i32 0
  %995 = load i32, i32* %994, align 4
  br i1 %993, label %996, label %998

996:                                              ; preds = %989
  %997 = add i32 %995, -1
  store i32 %997, i32* %994, align 4
  br label %998

998:                                              ; preds = %996, %989
  %999 = phi i32 [ %997, %996 ], [ %995, %989 ]
  %1000 = icmp eq i32 %999, 0
  br i1 %1000, label %1001, label %1002

1001:                                             ; preds = %998
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %987) #12
  br label %1002

1002:                                             ; preds = %983, %998, %1001
  %1003 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %963, align 8
  %1004 = icmp eq %"class.WTF::StringImpl"* %1003, null
  br i1 %1004, label %1018, label %1005

1005:                                             ; preds = %1002
  %1006 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1003, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1007 = load atomic i32, i32* %1006 monotonic, align 4
  %1008 = and i32 %1007, 2
  %1009 = icmp eq i32 %1008, 0
  %1010 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1003, i64 0, i32 0
  %1011 = load i32, i32* %1010, align 4
  br i1 %1009, label %1012, label %1014

1012:                                             ; preds = %1005
  %1013 = add i32 %1011, -1
  store i32 %1013, i32* %1010, align 4
  br label %1014

1014:                                             ; preds = %1012, %1005
  %1015 = phi i32 [ %1013, %1012 ], [ %1011, %1005 ]
  %1016 = icmp eq i32 %1015, 0
  br i1 %1016, label %1017, label %1018

1017:                                             ; preds = %1014
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %1003) #12
  br label %1018

1018:                                             ; preds = %1002, %1014, %1017
  %1019 = load i8, i8* %949, align 1
  %1020 = icmp slt i8 %1019, 0
  br i1 %1020, label %1021, label %1024

1021:                                             ; preds = %1018
  %1022 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %30, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %1023 = load i8*, i8** %1022, align 8
  call void @_ZdlPv(i8* %1023) #13
  br label %1024

1024:                                             ; preds = %1018, %1021
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %943) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %942) #12
  %1025 = bitcast i32* %31 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %1025) #12
  %1026 = getelementptr inbounds %"class.blink::HeapVector.568", %"class.blink::HeapVector.568"* %19, i64 0, i32 0
  %1027 = call dereferenceable(8) %"class.blink::Member.574"* @_ZN3WTF6VectorIN5blink6MemberINS1_25WebGLWebCodecsTextureInfoEEELj0ENS1_13HeapAllocatorEE2atEj(%"class.WTF::Vector.571"* nonnull %1026, i32 0) #12
  %1028 = getelementptr inbounds %"class.blink::Member.574", %"class.blink::Member.574"* %1027, i64 0, i32 0, i32 0
  %1029 = load %"class.blink::WebGLWebCodecsTextureInfo"*, %"class.blink::WebGLWebCodecsTextureInfo"** %1028, align 8
  %1030 = getelementptr inbounds %"class.blink::WebGLWebCodecsTextureInfo", %"class.blink::WebGLWebCodecsTextureInfo"* %1029, i64 0, i32 6, i32 0, i32 0
  %1031 = bitcast %"class.blink::WebGLTexture"** %1030 to %"class.blink::WebGLSharedPlatform3DObject"**
  %1032 = load %"class.blink::WebGLSharedPlatform3DObject"*, %"class.blink::WebGLSharedPlatform3DObject"** %1031, align 8
  %1033 = getelementptr inbounds %"class.blink::WebGLSharedPlatform3DObject", %"class.blink::WebGLSharedPlatform3DObject"* %1032, i64 0, i32 1
  %1034 = load i32, i32* %1033, align 8
  store i32 %1034, i32* %31, align 4
  %1035 = getelementptr inbounds %"class.blink::WebGLWebCodecsVideoFrame", %"class.blink::WebGLWebCodecsVideoFrame"* %0, i64 0, i32 3, i32 0
  %1036 = call { %"struct.WTF::KeyValuePair"*, i8 } @_ZN3WTF9HashTableIjNS_12KeyValuePairIj13scoped_refptrIN5media10VideoFrameEEEENS_24KeyValuePairKeyExtractorENS_7IntHashIjEENS_18HashMapValueTraitsINS_10HashTraitsIjEENSB_IS5_EEEESC_NS_18PartitionAllocatorEE6insertINS_17HashMapTranslatorISE_S9_SF_EERjRS5_EENS_18HashTableAddResultISG_S6_EEOT0_OT1_(%"class.WTF::HashTable"* %1035, i32* nonnull dereferenceable(4) %31, %class.scoped_refptr.8* nonnull dereferenceable(8) %12) #12
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %1025) #12
  %1037 = icmp eq %"class.gfx::ColorTransform"* %941, null
  br i1 %1037, label %1043, label %1038

1038:                                             ; preds = %1024
  %1039 = bitcast %"class.gfx::ColorTransform"* %941 to void (%"class.gfx::ColorTransform"*)***
  %1040 = load void (%"class.gfx::ColorTransform"*)**, void (%"class.gfx::ColorTransform"*)*** %1039, align 8
  %1041 = getelementptr inbounds void (%"class.gfx::ColorTransform"*)*, void (%"class.gfx::ColorTransform"*)** %1040, i64 1
  %1042 = load void (%"class.gfx::ColorTransform"*)*, void (%"class.gfx::ColorTransform"*)** %1041, align 8
  call void %1042(%"class.gfx::ColorTransform"* nonnull %941) #12
  br label %1043

1043:                                             ; preds = %1024, %1038
  call void @llvm.lifetime.end.p0i8(i64 68, i8* nonnull %935) #12
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %163) #12
  br label %1044

1044:                                             ; preds = %102, %1043, %161
  %1045 = phi %"class.blink::WebGLWebCodecsVideoFrameHandle"* [ null, %161 ], [ %182, %1043 ], [ null, %102 ]
  %1046 = load %"class.media::VideoFrame"*, %"class.media::VideoFrame"** %47, align 8
  %1047 = icmp eq %"class.media::VideoFrame"* %1046, null
  br i1 %1047, label %1060, label %1048

1048:                                             ; preds = %1044
  %1049 = getelementptr inbounds %"class.media::VideoFrame", %"class.media::VideoFrame"* %1046, i64 0, i32 1
  %1050 = getelementptr inbounds %"class.base::RefCountedThreadSafe.9", %"class.base::RefCountedThreadSafe.9"* %1049, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %1051 = atomicrmw sub i32* %1050, i32 1 acq_rel
  %1052 = icmp eq i32 %1051, 1
  br i1 %1052, label %1053, label %1060

1053:                                             ; preds = %1048
  %1054 = getelementptr inbounds %"class.base::RefCountedThreadSafe.9", %"class.base::RefCountedThreadSafe.9"* %1049, i64 -2
  %1055 = bitcast %"class.base::RefCountedThreadSafe.9"* %1054 to %"class.media::VideoFrame"*
  %1056 = bitcast %"class.base::RefCountedThreadSafe.9"* %1054 to void (%"class.media::VideoFrame"*)***
  %1057 = load void (%"class.media::VideoFrame"*)**, void (%"class.media::VideoFrame"*)*** %1056, align 8
  %1058 = getelementptr inbounds void (%"class.media::VideoFrame"*)*, void (%"class.media::VideoFrame"*)** %1057, i64 1
  %1059 = load void (%"class.media::VideoFrame"*)*, void (%"class.media::VideoFrame"*)** %1058, align 8
  call void %1059(%"class.media::VideoFrame"* nonnull %1055) #12
  br label %1060

1060:                                             ; preds = %1044, %1048, %1053
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %46) #12
  call void @llvm.lifetime.end.p0i8(i64 68, i8* nonnull %40) #12
  br label %1061

1061:                                             ; preds = %4, %1060
  %1062 = phi %"class.blink::WebGLWebCodecsVideoFrameHandle"* [ %1045, %1060 ], [ null, %4 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %32) #12
  ret %"class.blink::WebGLWebCodecsVideoFrameHandle"* %1062
}

declare void @_ZN5blink27WebGLExtensionScopedContextC1EPNS_14WebGLExtensionE(%"class.blink::WebGLExtensionScopedContext"*, %"class.blink::WebGLExtension"*) unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #2

declare zeroext i1 @_ZNK5media10VideoFrame11HasTexturesEv(%"class.media::VideoFrame"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink24WebGLWebCodecsVideoFrame29InitializeGpuMemoryBufferPoolEv(%"class.blink::WebGLWebCodecsVideoFrame"*) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.base::OnceCallback.26", align 8
  %3 = alloca %"class.WTF::CrossThreadOnceFunction", align 8
  %4 = alloca %"class.base::OnceCallback.26", align 8
  %5 = alloca %"class.base::OnceCallback.26", align 8
  %6 = alloca %class.scoped_refptr.793, align 8
  %7 = alloca %"class.media::GpuVideoAcceleratorFactories"*, align 8
  %8 = alloca %"class.base::WaitableEvent", align 8
  %9 = alloca %"class.base::Location", align 8
  %10 = alloca %"class.WTF::CrossThreadOnceFunction", align 8
  %11 = getelementptr inbounds %"class.blink::WebGLWebCodecsVideoFrame", %"class.blink::WebGLWebCodecsVideoFrame"* %0, i64 0, i32 5
  %12 = getelementptr inbounds %class.scoped_refptr.5, %class.scoped_refptr.5* %11, i64 0, i32 0
  %13 = load %"class.base::SequencedTaskRunner"*, %"class.base::SequencedTaskRunner"** %12, align 8
  %14 = icmp eq %"class.base::SequencedTaskRunner"* %13, null
  br i1 %14, label %15, label %29

15:                                               ; preds = %1
  %16 = tail call %"class.base::SequencedTaskRunner"* @_ZN5blink11worker_pool25CreateSequencedTaskRunnerERKN4base10TaskTraitsE(%"class.base::TaskTraits"* nonnull dereferenceable(15) @.ref.tmp) #12
  %17 = ptrtoint %"class.base::SequencedTaskRunner"* %16 to i64
  %18 = bitcast %class.scoped_refptr.5* %11 to i64*
  %19 = load %"class.base::SequencedTaskRunner"*, %"class.base::SequencedTaskRunner"** %12, align 8
  store i64 %17, i64* %18, align 8
  %20 = icmp eq %"class.base::SequencedTaskRunner"* %19, null
  br i1 %20, label %29, label %21

21:                                               ; preds = %15
  %22 = getelementptr inbounds %"class.base::SequencedTaskRunner", %"class.base::SequencedTaskRunner"* %19, i64 0, i32 0, i32 1
  %23 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %22, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %24 = atomicrmw sub i32* %23, i32 1 acq_rel
  %25 = icmp eq i32 %24, 1
  br i1 %25, label %26, label %29

26:                                               ; preds = %21
  %27 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %22, i64 -2
  %28 = bitcast %"class.base::RefCountedThreadSafe"* %27 to %"class.base::TaskRunner"*
  tail call void @_ZN4base16TaskRunnerTraits8DestructEPKNS_10TaskRunnerE(%"class.base::TaskRunner"* %28) #12
  br label %29

29:                                               ; preds = %1, %26, %21, %15
  %30 = getelementptr inbounds %"class.blink::WebGLWebCodecsVideoFrame", %"class.blink::WebGLWebCodecsVideoFrame"* %0, i64 0, i32 4
  %31 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %30, i64 0, i32 0, i32 0, i32 0
  %32 = load %"class.media::GpuMemoryBufferVideoFramePool"*, %"class.media::GpuMemoryBufferVideoFramePool"** %31, align 8
  %33 = icmp eq %"class.media::GpuMemoryBufferVideoFramePool"* %32, null
  br i1 %33, label %34, label %156

34:                                               ; preds = %29
  %35 = bitcast %"class.media::GpuVideoAcceleratorFactories"** %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %35) #12
  store %"class.media::GpuVideoAcceleratorFactories"* null, %"class.media::GpuVideoAcceleratorFactories"** %7, align 8
  %36 = tail call zeroext i1 @_ZN3WTF12IsMainThreadEv() #12
  br i1 %36, label %37, label %65

37:                                               ; preds = %34
  %38 = tail call %"class.blink::Platform"* @_ZN5blink8Platform7CurrentEv() #12
  %39 = bitcast %"class.blink::Platform"* %38 to %"class.base::SingleThreadTaskRunner"* (%"class.blink::Platform"*)***
  %40 = load %"class.base::SingleThreadTaskRunner"* (%"class.blink::Platform"*)**, %"class.base::SingleThreadTaskRunner"* (%"class.blink::Platform"*)*** %39, align 8
  %41 = getelementptr inbounds %"class.base::SingleThreadTaskRunner"* (%"class.blink::Platform"*)*, %"class.base::SingleThreadTaskRunner"* (%"class.blink::Platform"*)** %40, i64 37
  %42 = load %"class.base::SingleThreadTaskRunner"* (%"class.blink::Platform"*)*, %"class.base::SingleThreadTaskRunner"* (%"class.blink::Platform"*)** %41, align 8
  %43 = tail call %"class.base::SingleThreadTaskRunner"* %42(%"class.blink::Platform"* %38) #12
  %44 = getelementptr inbounds %"class.blink::WebGLWebCodecsVideoFrame", %"class.blink::WebGLWebCodecsVideoFrame"* %0, i64 0, i32 6
  %45 = ptrtoint %"class.base::SingleThreadTaskRunner"* %43 to i64
  %46 = bitcast %class.scoped_refptr.7* %44 to i64*
  %47 = getelementptr inbounds %class.scoped_refptr.7, %class.scoped_refptr.7* %44, i64 0, i32 0
  %48 = load %"class.base::SingleThreadTaskRunner"*, %"class.base::SingleThreadTaskRunner"** %47, align 8
  store i64 %45, i64* %46, align 8
  %49 = icmp eq %"class.base::SingleThreadTaskRunner"* %48, null
  br i1 %49, label %58, label %50

50:                                               ; preds = %37
  %51 = getelementptr inbounds %"class.base::SingleThreadTaskRunner", %"class.base::SingleThreadTaskRunner"* %48, i64 0, i32 0, i32 0, i32 1
  %52 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %51, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %53 = atomicrmw sub i32* %52, i32 1 acq_rel
  %54 = icmp eq i32 %53, 1
  br i1 %54, label %55, label %58

55:                                               ; preds = %50
  %56 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %51, i64 -2
  %57 = bitcast %"class.base::RefCountedThreadSafe"* %56 to %"class.base::TaskRunner"*
  tail call void @_ZN4base16TaskRunnerTraits8DestructEPKNS_10TaskRunnerE(%"class.base::TaskRunner"* %57) #12
  br label %58

58:                                               ; preds = %37, %50, %55
  %59 = tail call %"class.blink::Platform"* @_ZN5blink8Platform7CurrentEv() #12
  %60 = bitcast %"class.blink::Platform"* %59 to %"class.media::GpuVideoAcceleratorFactories"* (%"class.blink::Platform"*)***
  %61 = load %"class.media::GpuVideoAcceleratorFactories"* (%"class.blink::Platform"*)**, %"class.media::GpuVideoAcceleratorFactories"* (%"class.blink::Platform"*)*** %60, align 8
  %62 = getelementptr inbounds %"class.media::GpuVideoAcceleratorFactories"* (%"class.blink::Platform"*)*, %"class.media::GpuVideoAcceleratorFactories"* (%"class.blink::Platform"*)** %61, i64 98
  %63 = load %"class.media::GpuVideoAcceleratorFactories"* (%"class.blink::Platform"*)*, %"class.media::GpuVideoAcceleratorFactories"* (%"class.blink::Platform"*)** %62, align 8
  %64 = tail call %"class.media::GpuVideoAcceleratorFactories"* %63(%"class.blink::Platform"* %59) #12
  store %"class.media::GpuVideoAcceleratorFactories"* %64, %"class.media::GpuVideoAcceleratorFactories"** %7, align 8
  br label %121

65:                                               ; preds = %34
  %66 = bitcast %"class.base::WaitableEvent"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %66) #12
  %67 = bitcast %"class.base::WaitableEvent"* %8 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %67, i8 -86, i64 16, i1 false)
  call void @_ZN4base13WaitableEventC1ENS0_11ResetPolicyENS0_12InitialStateE(%"class.base::WaitableEvent"* nonnull %8, i32 0, i32 1) #12
  %68 = call %"class.blink::Thread"* @_ZN5blink6Thread10MainThreadEv() #12
  %69 = bitcast %"class.blink::Thread"* %68 to %"class.base::SingleThreadTaskRunner"* (%"class.blink::Thread"*)***
  %70 = load %"class.base::SingleThreadTaskRunner"* (%"class.blink::Thread"*)**, %"class.base::SingleThreadTaskRunner"* (%"class.blink::Thread"*)*** %69, align 8
  %71 = getelementptr inbounds %"class.base::SingleThreadTaskRunner"* (%"class.blink::Thread"*)*, %"class.base::SingleThreadTaskRunner"* (%"class.blink::Thread"*)** %70, i64 3
  %72 = load %"class.base::SingleThreadTaskRunner"* (%"class.blink::Thread"*)*, %"class.base::SingleThreadTaskRunner"* (%"class.blink::Thread"*)** %71, align 8
  %73 = call %"class.base::SingleThreadTaskRunner"* %72(%"class.blink::Thread"* %68) #12
  %74 = bitcast %"class.base::Location"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %74) #12
  call void @_ZN4base8Location7CurrentEPKcS2_i(%"class.base::Location"* nonnull sret %9, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.9, i64 0, i64 0), i8* getelementptr inbounds ([78 x i8], [78 x i8]* @.str.1, i64 0, i64 0), i32 489) #12
  %75 = getelementptr inbounds %"class.blink::WebGLWebCodecsVideoFrame", %"class.blink::WebGLWebCodecsVideoFrame"* %0, i64 0, i32 6
  %76 = ptrtoint %class.scoped_refptr.7* %75 to i64
  %77 = ptrtoint %"class.media::GpuVideoAcceleratorFactories"** %7 to i64
  %78 = ptrtoint %"class.base::WaitableEvent"* %8 to i64
  %79 = bitcast %"class.base::OnceCallback.26"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %79)
  %80 = call i8* @_Znwm(i64 64) #13, !noalias !23
  %81 = bitcast i8* %80 to %"class.base::internal::BindStateBase"*
  call void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_E(%"class.base::internal::BindStateBase"* nonnull %81, void ()* bitcast (void (%"class.base::internal::BindStateBase"*)* @_ZN4base8internal7InvokerINS0_9BindStateIPFvP13scoped_refptrINS_22SingleThreadTaskRunnerEEPPN5media28GpuVideoAcceleratorFactoriesEPNS_13WaitableEventEEJN3WTF28CrossThreadUnretainedWrapperIS5_EENSG_IS9_EENSG_ISB_EEEEEFvvEE7RunOnceEPNS0_13BindStateBaseE to void ()*), void (%"class.base::internal::BindStateBase"*)* nonnull @_ZN4base8internal9BindStateIPFvP13scoped_refptrINS_22SingleThreadTaskRunnerEEPPN5media28GpuVideoAcceleratorFactoriesEPNS_13WaitableEventEEJN3WTF28CrossThreadUnretainedWrapperIS4_EENSF_IS8_EENSF_ISA_EEEE7DestroyEPKNS0_13BindStateBaseE) #12, !noalias !23
  %82 = getelementptr inbounds i8, i8* %80, i64 32
  %83 = bitcast i8* %82 to i64*
  store i64 ptrtoint (void (%class.scoped_refptr.7*, %"class.media::GpuVideoAcceleratorFactories"**, %"class.base::WaitableEvent"*)* @_ZN5blink12_GLOBAL__N_145GetMediaTaskRunnerAndGpuFactoriesOnMainThreadEP13scoped_refptrIN4base22SingleThreadTaskRunnerEEPPN5media28GpuVideoAcceleratorFactoriesEPNS2_13WaitableEventE to i64), i64* %83, align 8, !noalias !23
  %84 = getelementptr inbounds i8, i8* %80, i64 40
  %85 = bitcast i8* %84 to i64*
  store i64 %76, i64* %85, align 8, !noalias !23
  %86 = getelementptr inbounds i8, i8* %80, i64 48
  %87 = bitcast i8* %86 to i64*
  store i64 %77, i64* %87, align 8, !noalias !23
  %88 = getelementptr inbounds i8, i8* %80, i64 56
  %89 = bitcast i8* %88 to i64*
  store i64 %78, i64* %89, align 8, !noalias !23
  %90 = bitcast %"class.base::OnceCallback.26"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %90) #12, !noalias !30
  %91 = getelementptr inbounds %"class.base::OnceCallback.26", %"class.base::OnceCallback.26"* %5, i64 0, i32 0, i32 0, i32 0
  %92 = ptrtoint i8* %80 to i64
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %91, align 8, !noalias !31
  %93 = getelementptr inbounds %"class.base::OnceCallback.26", %"class.base::OnceCallback.26"* %4, i64 0, i32 0, i32 0, i32 0
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %93, align 8, !noalias !31
  %94 = getelementptr inbounds %"class.base::OnceCallback.26", %"class.base::OnceCallback.26"* %4, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %94) #12, !noalias !31
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %90) #12, !noalias !30
  %95 = getelementptr inbounds %"class.base::OnceCallback.26", %"class.base::OnceCallback.26"* %5, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %95) #12, !noalias !30
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %79)
  %96 = bitcast %"class.base::OnceCallback.26"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %96)
  %97 = bitcast %"class.WTF::CrossThreadOnceFunction"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %97)
  %98 = bitcast %"class.base::SingleThreadTaskRunner"* %73 to %"class.base::TaskRunner"*
  %99 = getelementptr inbounds %"class.WTF::CrossThreadOnceFunction", %"class.WTF::CrossThreadOnceFunction"* %10, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %99, align 8
  %100 = getelementptr inbounds %"class.WTF::CrossThreadOnceFunction", %"class.WTF::CrossThreadOnceFunction"* %3, i64 0, i32 0, i32 0, i32 0, i32 0
  %101 = bitcast %"class.base::OnceCallback.26"* %2 to i64*
  store i64 %92, i64* %101, align 8, !alias.scope !34
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %100, align 8, !noalias !34
  %102 = bitcast %"class.base::SingleThreadTaskRunner"* %73 to i1 (%"class.base::TaskRunner"*, %"class.base::Location"*, %"class.base::OnceCallback.26"*, i64)***
  %103 = load i1 (%"class.base::TaskRunner"*, %"class.base::Location"*, %"class.base::OnceCallback.26"*, i64)**, i1 (%"class.base::TaskRunner"*, %"class.base::Location"*, %"class.base::OnceCallback.26"*, i64)*** %102, align 8
  %104 = load i1 (%"class.base::TaskRunner"*, %"class.base::Location"*, %"class.base::OnceCallback.26"*, i64)*, i1 (%"class.base::TaskRunner"*, %"class.base::Location"*, %"class.base::OnceCallback.26"*, i64)** %103, align 8
  %105 = call zeroext i1 %104(%"class.base::TaskRunner"* %98, %"class.base::Location"* nonnull dereferenceable(32) %9, %"class.base::OnceCallback.26"* nonnull %2, i64 0) #12
  %106 = getelementptr inbounds %"class.base::OnceCallback.26", %"class.base::OnceCallback.26"* %2, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %106) #12
  %107 = getelementptr inbounds %"class.WTF::CrossThreadOnceFunction", %"class.WTF::CrossThreadOnceFunction"* %3, i64 0, i32 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %107) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %96)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %97)
  %108 = getelementptr inbounds %"class.WTF::CrossThreadOnceFunction", %"class.WTF::CrossThreadOnceFunction"* %10, i64 0, i32 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %108) #12
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %74) #12
  %109 = icmp eq %"class.base::SingleThreadTaskRunner"* %73, null
  br i1 %109, label %118, label %110

110:                                              ; preds = %65
  %111 = getelementptr inbounds %"class.base::SingleThreadTaskRunner", %"class.base::SingleThreadTaskRunner"* %73, i64 0, i32 0, i32 0, i32 1
  %112 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %111, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %113 = atomicrmw sub i32* %112, i32 1 acq_rel
  %114 = icmp eq i32 %113, 1
  br i1 %114, label %115, label %118

115:                                              ; preds = %110
  %116 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %111, i64 -2
  %117 = bitcast %"class.base::RefCountedThreadSafe"* %116 to %"class.base::TaskRunner"*
  call void @_ZN4base16TaskRunnerTraits8DestructEPKNS_10TaskRunnerE(%"class.base::TaskRunner"* %117) #12
  br label %118

118:                                              ; preds = %65, %110, %115
  br i1 %105, label %119, label %120

119:                                              ; preds = %118
  notail call void @_ZN4base13WaitableEvent4WaitEv(%"class.base::WaitableEvent"* nonnull %8) #12
  br label %120

120:                                              ; preds = %119, %118
  call void @_ZN4base13WaitableEventD1Ev(%"class.base::WaitableEvent"* nonnull %8) #12
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %66) #12
  br label %121

121:                                              ; preds = %120, %58
  %122 = getelementptr inbounds %"class.blink::WebGLWebCodecsVideoFrame", %"class.blink::WebGLWebCodecsVideoFrame"* %0, i64 0, i32 6
  %123 = call i8* @_Znwm(i64 16) #13
  %124 = bitcast i8* %123 to %"class.media::GpuMemoryBufferVideoFramePool"*
  %125 = bitcast %class.scoped_refptr.793* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %125) #12
  %126 = bitcast %class.scoped_refptr.5* %11 to %"class.base::TaskRunner"**
  %127 = load %"class.base::TaskRunner"*, %"class.base::TaskRunner"** %126, align 8
  %128 = getelementptr inbounds %class.scoped_refptr.793, %class.scoped_refptr.793* %6, i64 0, i32 0
  store %"class.base::TaskRunner"* %127, %"class.base::TaskRunner"** %128, align 8
  %129 = icmp eq %"class.base::TaskRunner"* %127, null
  br i1 %129, label %133, label %130

130:                                              ; preds = %121
  %131 = getelementptr inbounds %"class.base::TaskRunner", %"class.base::TaskRunner"* %127, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %132 = atomicrmw add i32* %131, i32 1 monotonic
  br label %133

133:                                              ; preds = %130, %121
  %134 = load %"class.media::GpuVideoAcceleratorFactories"*, %"class.media::GpuVideoAcceleratorFactories"** %7, align 8
  call void @_ZN5media29GpuMemoryBufferVideoFramePoolC1ERK13scoped_refptrIN4base22SingleThreadTaskRunnerEERKS1_INS2_10TaskRunnerEEPNS_28GpuVideoAcceleratorFactoriesE(%"class.media::GpuMemoryBufferVideoFramePool"* nonnull %124, %class.scoped_refptr.7* dereferenceable(8) %122, %class.scoped_refptr.793* nonnull dereferenceable(8) %6, %"class.media::GpuVideoAcceleratorFactories"* %134) #12
  %135 = load %"class.base::TaskRunner"*, %"class.base::TaskRunner"** %128, align 8
  %136 = icmp eq %"class.base::TaskRunner"* %135, null
  br i1 %136, label %145, label %137

137:                                              ; preds = %133
  %138 = getelementptr inbounds %"class.base::TaskRunner", %"class.base::TaskRunner"* %135, i64 0, i32 1
  %139 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %138, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %140 = atomicrmw sub i32* %139, i32 1 acq_rel
  %141 = icmp eq i32 %140, 1
  br i1 %141, label %142, label %145

142:                                              ; preds = %137
  %143 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %138, i64 -2
  %144 = bitcast %"class.base::RefCountedThreadSafe"* %143 to %"class.base::TaskRunner"*
  call void @_ZN4base16TaskRunnerTraits8DestructEPKNS_10TaskRunnerE(%"class.base::TaskRunner"* %144) #12
  br label %145

145:                                              ; preds = %133, %137, %142
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %125) #12
  %146 = ptrtoint i8* %123 to i64
  %147 = load %"class.media::GpuMemoryBufferVideoFramePool"*, %"class.media::GpuMemoryBufferVideoFramePool"** %31, align 8
  %148 = bitcast %"class.std::__1::unique_ptr"* %30 to i64*
  store i64 %146, i64* %148, align 8
  %149 = icmp eq %"class.media::GpuMemoryBufferVideoFramePool"* %147, null
  br i1 %149, label %155, label %150

150:                                              ; preds = %145
  %151 = bitcast %"class.media::GpuMemoryBufferVideoFramePool"* %147 to void (%"class.media::GpuMemoryBufferVideoFramePool"*)***
  %152 = load void (%"class.media::GpuMemoryBufferVideoFramePool"*)**, void (%"class.media::GpuMemoryBufferVideoFramePool"*)*** %151, align 8
  %153 = getelementptr inbounds void (%"class.media::GpuMemoryBufferVideoFramePool"*)*, void (%"class.media::GpuMemoryBufferVideoFramePool"*)** %152, i64 1
  %154 = load void (%"class.media::GpuMemoryBufferVideoFramePool"*)*, void (%"class.media::GpuMemoryBufferVideoFramePool"*)** %153, align 8
  call void %154(%"class.media::GpuMemoryBufferVideoFramePool"* nonnull %147) #12
  br label %155

155:                                              ; preds = %150, %145
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %35) #12
  br label %156

156:                                              ; preds = %29, %155
  ret void
}

declare void @_ZN4base13WaitableEventC1ENS0_11ResetPolicyENS0_12InitialStateE(%"class.base::WaitableEvent"*, i32, i32) unnamed_addr #1

declare zeroext i1 @_ZN4base10TaskRunner8PostTaskERKNS_8LocationENS_12OnceCallbackIFvvEEE(%"class.base::TaskRunner"*, %"class.base::Location"* dereferenceable(32), %"class.base::OnceCallback.26"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink24WebGLWebCodecsVideoFrame27OnHardwareVideoFrameCreatedEPN4base13WaitableEventE13scoped_refptrIN5media10VideoFrameEE(%"class.blink::WebGLWebCodecsVideoFrame"* nocapture, %"class.base::WaitableEvent"*, %"class.media::VideoFrame"*) #0 align 2 {
  %4 = ptrtoint %"class.media::VideoFrame"* %2 to i64
  %5 = getelementptr inbounds %"class.blink::WebGLWebCodecsVideoFrame", %"class.blink::WebGLWebCodecsVideoFrame"* %0, i64 0, i32 7
  %6 = bitcast %class.scoped_refptr.8* %5 to i64*
  %7 = getelementptr inbounds %class.scoped_refptr.8, %class.scoped_refptr.8* %5, i64 0, i32 0
  %8 = load %"class.media::VideoFrame"*, %"class.media::VideoFrame"** %7, align 8
  store i64 %4, i64* %6, align 8
  %9 = icmp eq %"class.media::VideoFrame"* %8, null
  br i1 %9, label %22, label %10

10:                                               ; preds = %3
  %11 = getelementptr inbounds %"class.media::VideoFrame", %"class.media::VideoFrame"* %8, i64 0, i32 1
  %12 = getelementptr inbounds %"class.base::RefCountedThreadSafe.9", %"class.base::RefCountedThreadSafe.9"* %11, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %13 = atomicrmw sub i32* %12, i32 1 acq_rel
  %14 = icmp eq i32 %13, 1
  br i1 %14, label %15, label %22

15:                                               ; preds = %10
  %16 = getelementptr inbounds %"class.base::RefCountedThreadSafe.9", %"class.base::RefCountedThreadSafe.9"* %11, i64 -2
  %17 = bitcast %"class.base::RefCountedThreadSafe.9"* %16 to %"class.media::VideoFrame"*
  %18 = bitcast %"class.base::RefCountedThreadSafe.9"* %16 to void (%"class.media::VideoFrame"*)***
  %19 = load void (%"class.media::VideoFrame"*)**, void (%"class.media::VideoFrame"*)*** %18, align 8
  %20 = getelementptr inbounds void (%"class.media::VideoFrame"*)*, void (%"class.media::VideoFrame"*)** %19, i64 1
  %21 = load void (%"class.media::VideoFrame"*)*, void (%"class.media::VideoFrame"*)** %20, align 8
  tail call void %21(%"class.media::VideoFrame"* nonnull %17) #12
  br label %22

22:                                               ; preds = %15, %10, %3
  tail call void @_ZN4base13WaitableEvent6SignalEv(%"class.base::WaitableEvent"* %1) #12
  ret void
}

; Function Attrs: nounwind
declare void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"*) unnamed_addr #4

declare void @_ZN4base13WaitableEvent4WaitEv(%"class.base::WaitableEvent"*) local_unnamed_addr #1

declare void @_ZN5blink14ExceptionState14ThrowTypeErrorEPKc(%"class.blink::ExceptionState"*, i8*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN4base13WaitableEventD1Ev(%"class.base::WaitableEvent"*) unnamed_addr #4

declare %"class.WTF::StringImpl"* @_ZN3WTF6String6FormatEPKcz(i8*, ...) local_unnamed_addr #1

declare void @_ZN5media24VideoPixelFormatToStringENS_16VideoPixelFormatE(%"class.std::__1::basic_string"* sret, i32) local_unnamed_addr #1

declare i64 @_ZNK5media10VideoFrame11NumTexturesEv(%"class.media::VideoFrame"*) local_unnamed_addr #1

declare dereferenceable(48) %"struct.gpu::MailboxHolder"* @_ZNK5media10VideoFrame14mailbox_holderEm(%"class.media::VideoFrame"*, i64) local_unnamed_addr #1

declare zeroext i1 @_ZNK3gpu7Mailbox13IsSharedImageEv(%"struct.gpu::Mailbox"*) local_unnamed_addr #1

declare void @_ZN5blink30WebGLWebCodecsVideoFrameHandle19setTextureInfoArrayERKNS_10HeapVectorINS_6MemberINS_25WebGLWebCodecsTextureInfoEEELj0EEE(%"class.blink::WebGLWebCodecsVideoFrameHandle"*, %"class.blink::HeapVector.568"* dereferenceable(16)) local_unnamed_addr #1

declare void @_ZN5blink30WebGLWebCodecsVideoFrameHandle13setColorSpaceEPNS_15VideoColorSpaceE(%"class.blink::WebGLWebCodecsVideoFrameHandle"*, %"class.blink::VideoColorSpace"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN5blink24WebGLWebCodecsVideoFrame17releaseVideoFrameEPNS_16ExecutionContextEPNS_30WebGLWebCodecsVideoFrameHandleERNS_14ExceptionStateE(%"class.blink::WebGLWebCodecsVideoFrame"*, %"class.blink::ExecutionContext"* nocapture readnone, %"class.blink::WebGLWebCodecsVideoFrameHandle"*, %"class.blink::ExceptionState"* nocapture readnone dereferenceable(72)) local_unnamed_addr #0 align 2 {
  %5 = alloca %"class.blink::WebGLExtensionScopedContext", align 8
  %6 = alloca i32, align 4
  %7 = alloca %"struct.gpu::Mailbox", align 1
  %8 = alloca i32, align 4
  %9 = alloca %"class.media::WaitAndReplaceSyncTokenClient", align 8
  %10 = alloca %"struct.gpu::SyncToken", align 8
  %11 = bitcast %"class.blink::WebGLExtensionScopedContext"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %11) #12
  %12 = getelementptr inbounds %"class.blink::WebGLExtensionScopedContext", %"class.blink::WebGLExtensionScopedContext"* %5, i64 0, i32 0
  store %"class.blink::WebGLRenderingContextBase"* inttoptr (i64 -6148914691236517206 to %"class.blink::WebGLRenderingContextBase"*), %"class.blink::WebGLRenderingContextBase"** %12, align 8
  %13 = getelementptr inbounds %"class.blink::WebGLWebCodecsVideoFrame", %"class.blink::WebGLWebCodecsVideoFrame"* %0, i64 0, i32 0
  call void @_ZN5blink27WebGLExtensionScopedContextC1EPNS_14WebGLExtensionE(%"class.blink::WebGLExtensionScopedContext"* nonnull %5, %"class.blink::WebGLExtension"* %13) #12
  %14 = load %"class.blink::WebGLRenderingContextBase"*, %"class.blink::WebGLRenderingContextBase"** %12, align 8
  %15 = call %"class.blink::DrawingBuffer"* @_ZNK5blink25WebGLRenderingContextBase16GetDrawingBufferEv(%"class.blink::WebGLRenderingContextBase"* %14) #12
  %16 = icmp eq %"class.blink::DrawingBuffer"* %15, null
  br i1 %16, label %19, label %17

17:                                               ; preds = %4
  %18 = call %"class.gpu::gles2::GLES2Interface"* @_ZN5blink13DrawingBuffer9ContextGLEv(%"class.blink::DrawingBuffer"* nonnull %15) #12
  br label %19

19:                                               ; preds = %4, %17
  %20 = phi %"class.gpu::gles2::GLES2Interface"* [ %18, %17 ], [ null, %4 ]
  %21 = bitcast i32* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %21) #12
  %22 = getelementptr inbounds %"class.blink::WebGLWebCodecsVideoFrameHandle", %"class.blink::WebGLWebCodecsVideoFrameHandle"* %2, i64 0, i32 10, i32 0
  %23 = call dereferenceable(8) %"class.blink::Member.574"* @_ZNK3WTF6VectorIN5blink6MemberINS1_25WebGLWebCodecsTextureInfoEEELj0ENS1_13HeapAllocatorEE2atEj(%"class.WTF::Vector.571"* %22, i32 0) #12
  %24 = getelementptr inbounds %"class.blink::Member.574", %"class.blink::Member.574"* %23, i64 0, i32 0, i32 0
  %25 = load %"class.blink::WebGLWebCodecsTextureInfo"*, %"class.blink::WebGLWebCodecsTextureInfo"** %24, align 8
  %26 = getelementptr inbounds %"class.blink::WebGLWebCodecsTextureInfo", %"class.blink::WebGLWebCodecsTextureInfo"* %25, i64 0, i32 6, i32 0, i32 0
  %27 = bitcast %"class.blink::WebGLTexture"** %26 to %"class.blink::WebGLSharedPlatform3DObject"**
  %28 = load %"class.blink::WebGLSharedPlatform3DObject"*, %"class.blink::WebGLSharedPlatform3DObject"** %27, align 8
  %29 = getelementptr inbounds %"class.blink::WebGLSharedPlatform3DObject", %"class.blink::WebGLSharedPlatform3DObject"* %28, i64 0, i32 1
  %30 = load i32, i32* %29, align 8
  store i32 %30, i32* %6, align 4
  %31 = getelementptr inbounds %"class.blink::WebGLWebCodecsVideoFrame", %"class.blink::WebGLWebCodecsVideoFrame"* %0, i64 0, i32 3
  %32 = call %"class.media::VideoFrame"* @_ZN3WTF7HashMapIj13scoped_refptrIN5media10VideoFrameEENS_7IntHashIjEENS_10HashTraitsIjEENS7_IS4_EENS_18PartitionAllocatorEE4TakeERKj(%"class.WTF::HashMap"* %31, i32* nonnull dereferenceable(4) %6)
  %33 = getelementptr inbounds %"class.blink::WebGLWebCodecsVideoFrameHandle", %"class.blink::WebGLWebCodecsVideoFrameHandle"* %2, i64 0, i32 10, i32 0, i32 0, i32 0, i32 2
  %34 = load i32, i32* %33, align 4
  %35 = icmp eq i32 %34, 0
  br i1 %35, label %41, label %36

36:                                               ; preds = %19
  %37 = getelementptr inbounds %"struct.gpu::Mailbox", %"struct.gpu::Mailbox"* %7, i64 0, i32 0, i64 0
  %38 = bitcast i32* %8 to i8*
  %39 = bitcast %"class.gpu::gles2::GLES2Interface"* %20 to void (%"class.gpu::gles2::GLES2Interface"*, i32)***
  %40 = bitcast %"class.gpu::gles2::GLES2Interface"* %20 to void (%"class.gpu::gles2::GLES2Interface"*, i32, i32*)***
  br label %61

41:                                               ; preds = %80, %19
  %42 = bitcast %"class.media::WaitAndReplaceSyncTokenClient"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %42) #12
  %43 = getelementptr inbounds %"class.gpu::gles2::GLES2Interface", %"class.gpu::gles2::GLES2Interface"* %20, i64 0, i32 0
  %44 = bitcast %"class.media::WaitAndReplaceSyncTokenClient"* %9 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %44, i8 -86, i64 16, i1 false)
  call void @_ZN5media29WaitAndReplaceSyncTokenClientC1EPN3gpu13InterfaceBaseE(%"class.media::WaitAndReplaceSyncTokenClient"* nonnull %9, %"class.gpu::InterfaceBase"* %43) #12
  %45 = getelementptr inbounds %"class.media::WaitAndReplaceSyncTokenClient", %"class.media::WaitAndReplaceSyncTokenClient"* %9, i64 0, i32 0
  %46 = getelementptr inbounds %"struct.gpu::SyncToken", %"struct.gpu::SyncToken"* %10, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %46) #12
  call void @_ZN5media10VideoFrame22UpdateReleaseSyncTokenEPNS0_15SyncTokenClientE(%"struct.gpu::SyncToken"* nonnull sret %10, %"class.media::VideoFrame"* %32, %"class.media::VideoFrame::SyncTokenClient"* nonnull %45) #12
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %46) #12
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %42) #12
  %47 = icmp eq %"class.media::VideoFrame"* %32, null
  br i1 %47, label %60, label %48

48:                                               ; preds = %41
  %49 = getelementptr inbounds %"class.media::VideoFrame", %"class.media::VideoFrame"* %32, i64 0, i32 1
  %50 = getelementptr inbounds %"class.base::RefCountedThreadSafe.9", %"class.base::RefCountedThreadSafe.9"* %49, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %51 = atomicrmw sub i32* %50, i32 1 acq_rel
  %52 = icmp eq i32 %51, 1
  br i1 %52, label %53, label %60

53:                                               ; preds = %48
  %54 = getelementptr inbounds %"class.base::RefCountedThreadSafe.9", %"class.base::RefCountedThreadSafe.9"* %49, i64 -2
  %55 = bitcast %"class.base::RefCountedThreadSafe.9"* %54 to %"class.media::VideoFrame"*
  %56 = bitcast %"class.base::RefCountedThreadSafe.9"* %54 to void (%"class.media::VideoFrame"*)***
  %57 = load void (%"class.media::VideoFrame"*)**, void (%"class.media::VideoFrame"*)*** %56, align 8
  %58 = getelementptr inbounds void (%"class.media::VideoFrame"*)*, void (%"class.media::VideoFrame"*)** %57, i64 1
  %59 = load void (%"class.media::VideoFrame"*)*, void (%"class.media::VideoFrame"*)** %58, align 8
  call void %59(%"class.media::VideoFrame"* nonnull %55) #12
  br label %60

60:                                               ; preds = %41, %48, %53
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %21) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %11) #12
  ret i1 true

61:                                               ; preds = %36, %80
  %62 = phi i64 [ 0, %36 ], [ %84, %80 ]
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %37) #12
  call void @llvm.memset.p0i8.i64(i8* nonnull align 1 %37, i8 -86, i64 16, i1 false)
  %63 = call dereferenceable(48) %"struct.gpu::MailboxHolder"* @_ZNK5media10VideoFrame14mailbox_holderEm(%"class.media::VideoFrame"* %32, i64 %62) #12
  %64 = getelementptr inbounds %"struct.gpu::MailboxHolder", %"struct.gpu::MailboxHolder"* %63, i64 0, i32 0, i32 0, i64 0
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %37, i8* align 8 %64, i64 16, i1 false)
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %38) #12
  store i32 -1431655766, i32* %8, align 4
  %65 = trunc i64 %62 to i32
  %66 = call dereferenceable(8) %"class.blink::Member.574"* @_ZNK3WTF6VectorIN5blink6MemberINS1_25WebGLWebCodecsTextureInfoEEELj0ENS1_13HeapAllocatorEE2atEj(%"class.WTF::Vector.571"* %22, i32 %65) #12
  %67 = getelementptr inbounds %"class.blink::Member.574", %"class.blink::Member.574"* %66, i64 0, i32 0, i32 0
  %68 = load %"class.blink::WebGLWebCodecsTextureInfo"*, %"class.blink::WebGLWebCodecsTextureInfo"** %67, align 8
  %69 = getelementptr inbounds %"class.blink::WebGLWebCodecsTextureInfo", %"class.blink::WebGLWebCodecsTextureInfo"* %68, i64 0, i32 6, i32 0, i32 0
  %70 = bitcast %"class.blink::WebGLTexture"** %69 to %"class.blink::WebGLSharedPlatform3DObject"**
  %71 = load %"class.blink::WebGLSharedPlatform3DObject"*, %"class.blink::WebGLSharedPlatform3DObject"** %70, align 8
  %72 = getelementptr inbounds %"class.blink::WebGLSharedPlatform3DObject", %"class.blink::WebGLSharedPlatform3DObject"* %71, i64 0, i32 1
  %73 = load i32, i32* %72, align 8
  store i32 %73, i32* %8, align 4
  %74 = call zeroext i1 @_ZNK3gpu7Mailbox13IsSharedImageEv(%"struct.gpu::Mailbox"* nonnull %7) #12
  br i1 %74, label %75, label %80

75:                                               ; preds = %61
  %76 = load i32, i32* %8, align 4
  %77 = load void (%"class.gpu::gles2::GLES2Interface"*, i32)**, void (%"class.gpu::gles2::GLES2Interface"*, i32)*** %39, align 8
  %78 = getelementptr inbounds void (%"class.gpu::gles2::GLES2Interface"*, i32)*, void (%"class.gpu::gles2::GLES2Interface"*, i32)** %77, i64 356
  %79 = load void (%"class.gpu::gles2::GLES2Interface"*, i32)*, void (%"class.gpu::gles2::GLES2Interface"*, i32)** %78, align 8
  call void %79(%"class.gpu::gles2::GLES2Interface"* %20, i32 %76) #12
  br label %80

80:                                               ; preds = %75, %61
  %81 = load void (%"class.gpu::gles2::GLES2Interface"*, i32, i32*)**, void (%"class.gpu::gles2::GLES2Interface"*, i32, i32*)*** %40, align 8
  %82 = getelementptr inbounds void (%"class.gpu::gles2::GLES2Interface"*, i32, i32*)*, void (%"class.gpu::gles2::GLES2Interface"*, i32, i32*)** %81, i64 57
  %83 = load void (%"class.gpu::gles2::GLES2Interface"*, i32, i32*)*, void (%"class.gpu::gles2::GLES2Interface"*, i32, i32*)** %82, align 8
  call void %83(%"class.gpu::gles2::GLES2Interface"* %20, i32 1, i32* nonnull %8) #12
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %38) #12
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %37) #12
  %84 = add nuw nsw i64 %62, 1
  %85 = load i32, i32* %33, align 4
  %86 = zext i32 %85 to i64
  %87 = icmp ult i64 %84, %86
  br i1 %87, label %61, label %41
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.media::VideoFrame"* @_ZN3WTF7HashMapIj13scoped_refptrIN5media10VideoFrameEENS_7IntHashIjEENS_10HashTraitsIjEENS7_IS4_EENS_18PartitionAllocatorEE4TakeERKj(%"class.WTF::HashMap"*, i32* dereferenceable(4)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::HashMap", %"class.WTF::HashMap"* %0, i64 0, i32 0, i32 0
  %4 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %3, align 8
  %5 = icmp eq %"struct.WTF::KeyValuePair"* %4, null
  %6 = getelementptr inbounds %"class.WTF::HashMap", %"class.WTF::HashMap"* %0, i64 0, i32 0, i32 1
  %7 = load i32, i32* %6, align 8
  br i1 %5, label %64, label %8

8:                                                ; preds = %2
  %9 = add i32 %7, -1
  %10 = zext i32 %9 to i64
  %11 = load i32, i32* %1, align 4
  %12 = shl i32 %11, 15
  %13 = xor i32 %12, -1
  %14 = add i32 %11, %13
  %15 = lshr i32 %14, 10
  %16 = xor i32 %15, %14
  %17 = mul i32 %16, 9
  %18 = lshr i32 %17, 6
  %19 = xor i32 %18, %17
  %20 = shl i32 %19, 11
  %21 = xor i32 %20, -1
  %22 = add i32 %19, %21
  %23 = lshr i32 %22, 16
  %24 = xor i32 %23, %22
  %25 = and i32 %24, %9
  %26 = zext i32 %25 to i64
  %27 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %4, i64 %26
  %28 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %27, i64 0, i32 0
  %29 = load i32, i32* %28, align 4
  %30 = icmp eq i32 %29, %11
  br i1 %30, label %59, label %31

31:                                               ; preds = %8
  %32 = xor i32 %24, -1
  %33 = lshr i32 %22, 23
  %34 = add i32 %33, %32
  %35 = shl i32 %34, 12
  %36 = xor i32 %35, %34
  %37 = lshr i32 %36, 7
  %38 = xor i32 %37, %36
  %39 = shl i32 %38, 2
  %40 = xor i32 %39, %38
  %41 = lshr i32 %40, 20
  %42 = xor i32 %41, %40
  %43 = or i32 %42, 1
  %44 = zext i32 %43 to i64
  br label %45

45:                                               ; preds = %50, %31
  %46 = phi i32 [ %29, %31 ], [ %57, %50 ]
  %47 = phi i64 [ %26, %31 ], [ %54, %50 ]
  %48 = phi i64 [ 0, %31 ], [ %52, %50 ]
  %49 = icmp eq i32 %46, 0
  br i1 %49, label %64, label %50

50:                                               ; preds = %45
  %51 = icmp eq i64 %48, 0
  %52 = select i1 %51, i64 %44, i64 %48
  %53 = add i64 %52, %47
  %54 = and i64 %53, %10
  %55 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %4, i64 %54
  %56 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %55, i64 0, i32 0
  %57 = load i32, i32* %56, align 4
  %58 = icmp eq i32 %57, %11
  br i1 %58, label %59, label %45

59:                                               ; preds = %50, %8
  %60 = phi %"struct.WTF::KeyValuePair"* [ %27, %8 ], [ %55, %50 ]
  %61 = icmp eq %"struct.WTF::KeyValuePair"* %60, null
  br i1 %61, label %64, label %62

62:                                               ; preds = %59
  %63 = zext i32 %7 to i64
  br label %67

64:                                               ; preds = %45, %59, %2
  %65 = zext i32 %7 to i64
  %66 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %4, i64 %65
  br label %67

67:                                               ; preds = %62, %64
  %68 = phi i64 [ %63, %62 ], [ %65, %64 ]
  %69 = phi %"struct.WTF::KeyValuePair"* [ %60, %62 ], [ %66, %64 ]
  %70 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %4, i64 %68
  %71 = icmp eq %"struct.WTF::KeyValuePair"* %69, %70
  br i1 %71, label %106, label %72

72:                                               ; preds = %67
  %73 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %69, i64 0, i32 1
  %74 = getelementptr inbounds %class.scoped_refptr.8, %class.scoped_refptr.8* %73, i64 0, i32 0
  %75 = bitcast %class.scoped_refptr.8* %73 to i64*
  %76 = load i64, i64* %75, align 8
  store %"class.media::VideoFrame"* null, %"class.media::VideoFrame"** %74, align 8
  %77 = getelementptr inbounds %"class.WTF::HashMap", %"class.WTF::HashMap"* %0, i64 0, i32 0
  %78 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %3, align 8
  %79 = load i32, i32* %6, align 8
  %80 = zext i32 %79 to i64
  %81 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %78, i64 %80
  %82 = icmp eq %"struct.WTF::KeyValuePair"* %81, %69
  br i1 %82, label %106, label %83

83:                                               ; preds = %72
  %84 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %69, i64 0, i32 0
  store i32 -1, i32* %84, align 4
  %85 = getelementptr inbounds %"class.WTF::HashMap", %"class.WTF::HashMap"* %0, i64 0, i32 0, i32 3
  %86 = load i32, i32* %85, align 8
  %87 = add i32 %86, 1
  %88 = and i32 %87, 2147483647
  %89 = and i32 %86, -2147483648
  %90 = or i32 %88, %89
  store i32 %90, i32* %85, align 8
  %91 = getelementptr inbounds %"class.WTF::HashMap", %"class.WTF::HashMap"* %0, i64 0, i32 0, i32 2
  %92 = load i32, i32* %91, align 4
  %93 = add i32 %92, -1
  store i32 %93, i32* %91, align 4
  %94 = mul i32 %93, 6
  %95 = load i32, i32* %6, align 8
  %96 = icmp ult i32 %94, %95
  %97 = icmp ugt i32 %95, 8
  %98 = and i1 %96, %97
  br i1 %98, label %99, label %106

99:                                               ; preds = %83
  %100 = lshr i32 %95, 1
  %101 = zext i32 %100 to i64
  %102 = shl nuw nsw i64 %101, 4
  %103 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %102, i8* getelementptr inbounds ([114 x i8], [114 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_12KeyValuePairIj13scoped_refptrIN5media10VideoFrameEEEEEEPKcv, i64 0, i64 0)) #12
  tail call void @llvm.memset.p0i8.i64(i8* align 1 %103, i8 0, i64 %102, i1 false) #12
  %104 = bitcast i8* %103 to %"struct.WTF::KeyValuePair"*
  %105 = tail call %"struct.WTF::KeyValuePair"* @_ZN3WTF9HashTableIjNS_12KeyValuePairIj13scoped_refptrIN5media10VideoFrameEEEENS_24KeyValuePairKeyExtractorENS_7IntHashIjEENS_18HashMapValueTraitsINS_10HashTraitsIjEENSB_IS5_EEEESC_NS_18PartitionAllocatorEE8RehashToEPS6_jSH_(%"class.WTF::HashTable"* %77, %"struct.WTF::KeyValuePair"* %104, i32 %100, %"struct.WTF::KeyValuePair"* null) #12
  br label %106

106:                                              ; preds = %72, %83, %99, %67
  %107 = phi i64 [ 0, %67 ], [ %76, %99 ], [ %76, %83 ], [ %76, %72 ]
  %108 = inttoptr i64 %107 to %"class.media::VideoFrame"*
  ret %"class.media::VideoFrame"* %108
}

declare void @_ZN5media29WaitAndReplaceSyncTokenClientC1EPN3gpu13InterfaceBaseE(%"class.media::WaitAndReplaceSyncTokenClient"*, %"class.gpu::InterfaceBase"*) unnamed_addr #1

declare void @_ZN5media10VideoFrame22UpdateReleaseSyncTokenEPNS0_15SyncTokenClientE(%"struct.gpu::SyncToken"* sret, %"class.media::VideoFrame"*, %"class.media::VideoFrame::SyncTokenClient"*) local_unnamed_addr #1

declare void @_ZN4base13WaitableEvent6SignalEv(%"class.base::WaitableEvent"*) local_unnamed_addr #1

declare %"class.base::SequencedTaskRunner"* @_ZN5blink11worker_pool25CreateSequencedTaskRunnerERKN4base10TaskTraitsE(%"class.base::TaskTraits"* dereferenceable(15)) local_unnamed_addr #1

declare zeroext i1 @_ZN3WTF12IsMainThreadEv() local_unnamed_addr #1

declare %"class.blink::Platform"* @_ZN5blink8Platform7CurrentEv() local_unnamed_addr #1

declare %"class.blink::Thread"* @_ZN5blink6Thread10MainThreadEv() local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN5blink12_GLOBAL__N_145GetMediaTaskRunnerAndGpuFactoriesOnMainThreadEP13scoped_refptrIN4base22SingleThreadTaskRunnerEEPPN5media28GpuVideoAcceleratorFactoriesEPNS2_13WaitableEventE(%class.scoped_refptr.7* nocapture, %"class.media::GpuVideoAcceleratorFactories"** nocapture, %"class.base::WaitableEvent"*) #0 {
  %4 = tail call %"class.blink::Platform"* @_ZN5blink8Platform7CurrentEv() #12
  %5 = bitcast %"class.blink::Platform"* %4 to %"class.base::SingleThreadTaskRunner"* (%"class.blink::Platform"*)***
  %6 = load %"class.base::SingleThreadTaskRunner"* (%"class.blink::Platform"*)**, %"class.base::SingleThreadTaskRunner"* (%"class.blink::Platform"*)*** %5, align 8
  %7 = getelementptr inbounds %"class.base::SingleThreadTaskRunner"* (%"class.blink::Platform"*)*, %"class.base::SingleThreadTaskRunner"* (%"class.blink::Platform"*)** %6, i64 37
  %8 = load %"class.base::SingleThreadTaskRunner"* (%"class.blink::Platform"*)*, %"class.base::SingleThreadTaskRunner"* (%"class.blink::Platform"*)** %7, align 8
  %9 = tail call %"class.base::SingleThreadTaskRunner"* %8(%"class.blink::Platform"* %4) #12
  %10 = ptrtoint %"class.base::SingleThreadTaskRunner"* %9 to i64
  %11 = bitcast %class.scoped_refptr.7* %0 to i64*
  %12 = getelementptr inbounds %class.scoped_refptr.7, %class.scoped_refptr.7* %0, i64 0, i32 0
  %13 = load %"class.base::SingleThreadTaskRunner"*, %"class.base::SingleThreadTaskRunner"** %12, align 8
  store i64 %10, i64* %11, align 8
  %14 = icmp eq %"class.base::SingleThreadTaskRunner"* %13, null
  br i1 %14, label %23, label %15

15:                                               ; preds = %3
  %16 = getelementptr inbounds %"class.base::SingleThreadTaskRunner", %"class.base::SingleThreadTaskRunner"* %13, i64 0, i32 0, i32 0, i32 1
  %17 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %16, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %18 = atomicrmw sub i32* %17, i32 1 acq_rel
  %19 = icmp eq i32 %18, 1
  br i1 %19, label %20, label %23

20:                                               ; preds = %15
  %21 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %16, i64 -2
  %22 = bitcast %"class.base::RefCountedThreadSafe"* %21 to %"class.base::TaskRunner"*
  tail call void @_ZN4base16TaskRunnerTraits8DestructEPKNS_10TaskRunnerE(%"class.base::TaskRunner"* %22) #12
  br label %23

23:                                               ; preds = %3, %15, %20
  %24 = tail call %"class.blink::Platform"* @_ZN5blink8Platform7CurrentEv() #12
  %25 = bitcast %"class.blink::Platform"* %24 to %"class.media::GpuVideoAcceleratorFactories"* (%"class.blink::Platform"*)***
  %26 = load %"class.media::GpuVideoAcceleratorFactories"* (%"class.blink::Platform"*)**, %"class.media::GpuVideoAcceleratorFactories"* (%"class.blink::Platform"*)*** %25, align 8
  %27 = getelementptr inbounds %"class.media::GpuVideoAcceleratorFactories"* (%"class.blink::Platform"*)*, %"class.media::GpuVideoAcceleratorFactories"* (%"class.blink::Platform"*)** %26, i64 98
  %28 = load %"class.media::GpuVideoAcceleratorFactories"* (%"class.blink::Platform"*)*, %"class.media::GpuVideoAcceleratorFactories"* (%"class.blink::Platform"*)** %27, align 8
  %29 = tail call %"class.media::GpuVideoAcceleratorFactories"* %28(%"class.blink::Platform"* %24) #12
  store %"class.media::GpuVideoAcceleratorFactories"* %29, %"class.media::GpuVideoAcceleratorFactories"** %1, align 8
  tail call void @_ZN4base13WaitableEvent6SignalEv(%"class.base::WaitableEvent"* %2) #12
  ret void
}

declare i8* @_ZNK5blink15ScriptWrappable18NameInHeapSnapshotEv(%"class.blink::ScriptWrappable"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink15ScriptWrappable18HasPendingActivityEv(%"class.blink::ScriptWrappable"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink15ScriptWrappable17HasEventListenersEv(%"class.blink::ScriptWrappable"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.blink::WrapperTypeInfo"* @_ZNK5blink24WebGLWebCodecsVideoFrame18GetWrapperTypeInfoEv(%"class.blink::WebGLWebCodecsVideoFrame"*) unnamed_addr #0 comdat align 2 {
  %2 = load %"struct.blink::WrapperTypeInfo"*, %"struct.blink::WrapperTypeInfo"** @_ZN5blink24WebGLWebCodecsVideoFrame18wrapper_type_info_E, align 8
  ret %"struct.blink::WrapperTypeInfo"* %2
}

declare %"class.v8::Value"* @_ZN5blink15ScriptWrappable4WrapEPNS_11ScriptStateE(%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*) unnamed_addr #1

declare %"class.v8::Object"* @_ZN5blink15ScriptWrappable20AssociateWithWrapperEPN2v87IsolateEPKNS_15WrapperTypeInfoENS1_5LocalINS1_6ObjectEEE(%"class.blink::ScriptWrappable"*, %"class.v8::Isolate"*, %"struct.blink::WrapperTypeInfo"*, %"class.v8::Object"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink14WebGLExtension4LoseEb(%"class.blink::WebGLExtension"*, i1 zeroext) unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.blink::WebGLExtension", %"class.blink::WebGLExtension"* %0, i64 0, i32 1
  %4 = bitcast %"class.blink::WeakMember"* %3 to i64*
  store atomic i64 0, i64* %4 monotonic, align 8
  ret void
}

declare %"class.blink::DrawingBuffer"* @_ZNK5blink25WebGLRenderingContextBase16GetDrawingBufferEv(%"class.blink::WebGLRenderingContextBase"*) local_unnamed_addr #1

declare %"class.gpu::gles2::GLES2Interface"* @_ZN5blink13DrawingBuffer9ContextGLEv(%"class.blink::DrawingBuffer"*) local_unnamed_addr #1

declare void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8*) local_unnamed_addr #1

declare %"class.media::VideoFrame"* @_ZN5blink16VideoFrameHandle5frameEv(%"class.blink::VideoFrameHandle"*) local_unnamed_addr #1

declare void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"*) local_unnamed_addr #1

; Function Attrs: nounwind readnone speculatable
declare { i33, i1 } @llvm.sadd.with.overflow.i33(i33, i33) #5

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #6

; Function Attrs: argmemonly nofree nounwind readonly
declare i64 @strlen(i8* nocapture) local_unnamed_addr #7

declare void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"*, i8*, i64) unnamed_addr #1

declare zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8*) local_unnamed_addr #1

declare { i8, i64 } @_ZN5blink8bindings26FindIndexInEnumStringTableERKN3WTF6StringEN4base4spanIKPKcLm18446744073709551615EEE(%"class.WTF::String"* dereferenceable(8), i64, i8**) local_unnamed_addr #1

declare zeroext i8 @_ZNK3gfx10ColorSpace12GetPrimaryIDEv(%"class.gfx::ColorSpace"*) local_unnamed_addr #1

declare zeroext i8 @_ZNK3gfx10ColorSpace13GetTransferIDEv(%"class.gfx::ColorSpace"*) local_unnamed_addr #1

declare zeroext i8 @_ZNK3gfx10ColorSpace11GetMatrixIDEv(%"class.gfx::ColorSpace"*) local_unnamed_addr #1

declare zeroext i8 @_ZNK3gfx10ColorSpace10GetRangeIDEv(%"class.gfx::ColorSpace"*) local_unnamed_addr #1

declare %"class.gfx::ColorTransform"* @_ZN3gfx14ColorTransform17NewColorTransformERKNS_10ColorSpaceEiS3_iNS0_6IntentE(%"class.gfx::ColorSpace"* dereferenceable(68), i32, %"class.gfx::ColorSpace"* dereferenceable(68), i32, i32) local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal7InvokerINS0_9BindStateIPFvP13scoped_refptrINS_22SingleThreadTaskRunnerEEPPN5media28GpuVideoAcceleratorFactoriesEPNS_13WaitableEventEEJN3WTF28CrossThreadUnretainedWrapperIS5_EENSG_IS9_EENSG_ISB_EEEEEFvvEE7RunOnceEPNS0_13BindStateBaseE(%"class.base::internal::BindStateBase"*) #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1
  %3 = bitcast %"class.base::internal::BindStateBase"* %2 to void (%class.scoped_refptr.7*, %"class.media::GpuVideoAcceleratorFactories"**, %"class.base::WaitableEvent"*)**
  %4 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 1
  %5 = bitcast void ()** %4 to %class.scoped_refptr.7**
  %6 = load %class.scoped_refptr.7*, %class.scoped_refptr.7** %5, align 8
  %7 = getelementptr inbounds void ()*, void ()** %4, i64 1
  %8 = bitcast void ()** %7 to %"class.media::GpuVideoAcceleratorFactories"***
  %9 = load %"class.media::GpuVideoAcceleratorFactories"**, %"class.media::GpuVideoAcceleratorFactories"*** %8, align 8
  %10 = getelementptr inbounds void ()*, void ()** %4, i64 2
  %11 = bitcast void ()** %10 to %"class.base::WaitableEvent"**
  %12 = load %"class.base::WaitableEvent"*, %"class.base::WaitableEvent"** %11, align 8
  %13 = load void (%class.scoped_refptr.7*, %"class.media::GpuVideoAcceleratorFactories"**, %"class.base::WaitableEvent"*)*, void (%class.scoped_refptr.7*, %"class.media::GpuVideoAcceleratorFactories"**, %"class.base::WaitableEvent"*)** %3, align 8
  tail call void %13(%class.scoped_refptr.7* %6, %"class.media::GpuVideoAcceleratorFactories"** %9, %"class.base::WaitableEvent"* %12) #12
  ret void
}

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #8

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal9BindStateIPFvP13scoped_refptrINS_22SingleThreadTaskRunnerEEPPN5media28GpuVideoAcceleratorFactoriesEPNS_13WaitableEventEEJN3WTF28CrossThreadUnretainedWrapperIS4_EENSF_IS8_EENSF_ISA_EEEE7DestroyEPKNS0_13BindStateBaseE(%"class.base::internal::BindStateBase"*) #0 comdat align 2 {
  %2 = icmp eq %"class.base::internal::BindStateBase"* %0, null
  br i1 %2, label %5, label %3

3:                                                ; preds = %1
  %4 = bitcast %"class.base::internal::BindStateBase"* %0 to i8*
  tail call void @_ZdlPv(i8* %4) #13
  br label %5

5:                                                ; preds = %3, %1
  ret void
}

declare void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_E(%"class.base::internal::BindStateBase"*, void ()*, void (%"class.base::internal::BindStateBase"*)*) unnamed_addr #1

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #9

declare void @_ZN4base16TaskRunnerTraits8DestructEPKNS_10TaskRunnerE(%"class.base::TaskRunner"*) local_unnamed_addr #1

declare void @_ZN5blink15VideoColorSpaceC1Ev(%"class.blink::VideoColorSpace"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink10ThreadHeap8AllocateINS_17IDLDictionaryBaseEEEPhm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %3 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %2, i64 0, i32 1
  %4 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %3) #12
  %5 = icmp eq i8* %4, null
  br i1 %5, label %6, label %8, !prof !16

6:                                                ; preds = %1
  %7 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #12
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %3, i8* %7) #12
  br label %8

8:                                                ; preds = %1, %6
  %9 = phi i8* [ %7, %6 ], [ %4, %1 ]
  %10 = bitcast i8* %9 to %"class.blink::ThreadState"**
  %11 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %11, i64 0, i32 0, i32 0, i32 0, i32 0
  %13 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** %12, align 8
  %14 = icmp ult i64 %0, 64
  %15 = icmp ugt i64 %0, 31
  %16 = zext i1 %15 to i32
  %17 = icmp ult i64 %0, 128
  %18 = select i1 %17, i32 2, i32 3
  %19 = select i1 %14, i32 %16, i32 %18
  %20 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_17IDLDictionaryBaseEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %22, label %25

22:                                               ; preds = %8
  %23 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %24 = tail call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %23, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_17IDLDictionaryBaseEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic.183"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_17IDLDictionaryBaseEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic.183"*)) #12
  br label %25

25:                                               ; preds = %8, %22
  %26 = phi i32 [ %20, %8 ], [ %24, %22 ]
  %27 = tail call i8* @_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc(%"class.blink::ThreadHeap"* %13, %"class.blink::ThreadState"* %11, i64 %0, i32 %19, i32 %26, i8* getelementptr inbounds ([72 x i8], [72 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink17IDLDictionaryBaseEEEPKcv, i64 0, i64 0))
  ret i8* %27
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc(%"class.blink::ThreadHeap"*, %"class.blink::ThreadState"*, i64, i32, i32, i8*) local_unnamed_addr #10 comdat align 2 {
  %7 = alloca %"class.logging::CheckOpResult", align 8
  %8 = alloca %"class.logging::CheckOpResult", align 8
  %9 = alloca %"class.logging::CheckError", align 8
  %10 = sext i32 %3 to i64
  %11 = getelementptr inbounds %"class.blink::ThreadHeap", %"class.blink::ThreadHeap"* %0, i64 0, i32 19, i64 %10
  %12 = bitcast %"class.blink::BaseArena"** %11 to %"class.blink::NormalPageArena"**
  %13 = load %"class.blink::NormalPageArena"*, %"class.blink::NormalPageArena"** %12, align 8
  %14 = bitcast %"class.logging::CheckOpResult"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %14) #12
  %15 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %8, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %15, align 8
  %16 = bitcast %"class.logging::CheckOpResult"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %16) #12
  %17 = icmp ult i64 %2, -8
  br i1 %17, label %18, label %19

18:                                               ; preds = %6
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16) #12
  store i8* null, i8** %15, align 8
  br label %29

19:                                               ; preds = %6
  %20 = add nsw i64 %2, 8
  %21 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %20) #12
  %22 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %2) #12
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %7, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.51, i64 0, i64 0), i8* %21, i8* %22) #12
  %23 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %7, i64 0, i32 0
  %24 = load i8*, i8** %23, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16) #12
  store i8* %24, i8** %15, align 8
  %25 = icmp eq i8* %24, null
  br i1 %25, label %29, label %26

26:                                               ; preds = %19
  %27 = bitcast %"class.logging::CheckError"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %27) #12
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %9, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.52, i64 0, i64 0), i32 246, %"class.logging::CheckOpResult"* nonnull %8) #12
  %28 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %9) #12
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %9) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %27) #12
  br label %29

29:                                               ; preds = %18, %19, %26
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %14) #12
  %30 = add i64 %2, 15
  %31 = and i64 %30, -8
  %32 = getelementptr inbounds %"class.blink::NormalPageArena", %"class.blink::NormalPageArena"* %13, i64 0, i32 4
  %33 = load i64, i64* %32, align 8
  %34 = icmp ult i64 %33, %31
  br i1 %34, label %67, label %35, !prof !16

35:                                               ; preds = %29
  %36 = getelementptr inbounds %"class.blink::NormalPageArena", %"class.blink::NormalPageArena"* %13, i64 0, i32 3
  %37 = load i8*, i8** %36, align 8
  %38 = getelementptr inbounds i8, i8* %37, i64 %31
  store i8* %38, i8** %36, align 8
  %39 = sub i64 %33, %31
  store i64 %39, i64* %32, align 8
  %40 = bitcast i8* %37 to i32*
  store i32 0, i32* %40, align 4
  %41 = getelementptr inbounds i8, i8* %37, i64 4
  %42 = bitcast i8* %41 to i16*
  %43 = trunc i32 %4 to i16
  %44 = shl i16 %43, 2
  store atomic i16 %44, i16* %42 monotonic, align 2
  %45 = lshr exact i64 %31, 1
  %46 = trunc i64 %45 to i16
  %47 = getelementptr inbounds i8, i8* %37, i64 6
  %48 = bitcast i8* %47 to i16*
  store i16 %46, i16* %48, align 2
  %49 = ptrtoint i8* %37 to i64
  %50 = and i64 %49, -131072
  %51 = inttoptr i64 %50 to i8*
  %52 = getelementptr inbounds i8, i8* %51, i64 4400
  %53 = bitcast i8* %52 to %"class.blink::PlatformAwareObjectStartBitmap"*
  %54 = bitcast i8* %52 to i64*
  %55 = load i64, i64* %54, align 16
  %56 = sub i64 %49, %55
  %57 = lshr i64 %56, 3
  %58 = lshr i64 %56, 6
  %59 = getelementptr inbounds %"class.blink::PlatformAwareObjectStartBitmap", %"class.blink::PlatformAwareObjectStartBitmap"* %53, i64 0, i32 0, i32 1, i64 %58
  %60 = load i8, i8* %59, align 1
  %61 = trunc i64 %57 to i32
  %62 = and i32 %61, 7
  %63 = shl i32 1, %62
  %64 = trunc i32 %63 to i8
  %65 = or i8 %60, %64
  store atomic i8 %65, i8* %59 release, align 1
  %66 = getelementptr inbounds i8, i8* %37, i64 8
  br label %70

67:                                               ; preds = %29
  %68 = zext i32 %4 to i64
  %69 = call i8* @_ZN5blink15NormalPageArena17OutOfLineAllocateEmm(%"class.blink::NormalPageArena"* %13, i64 %31, i64 %68) #12
  br label %70

70:                                               ; preds = %35, %67
  %71 = phi i8* [ %66, %35 ], [ %69, %67 ]
  ret i8* %71
}

declare i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64, i8*) local_unnamed_addr #1

declare i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"*) local_unnamed_addr #1

declare void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"*, i8*) local_unnamed_addr #1

declare i8* @_ZN5blink15NormalPageArena17OutOfLineAllocateEmm(%"class.blink::NormalPageArena"*, i64, i64) local_unnamed_addr #1

declare void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* sret, i8*, i32, %"class.logging::CheckOpResult"*) local_unnamed_addr #1

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #4

declare i8* @_ZN7logging15CheckOpValueStrEm(i64) local_unnamed_addr #1

declare void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"*, i8*, i8*, i8*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_17IDLDictionaryBaseEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::IDLDictionaryBase"*
  %4 = bitcast i8* %1 to void (%"class.blink::IDLDictionaryBase"*, %"class.blink::Visitor"*)***
  %5 = load void (%"class.blink::IDLDictionaryBase"*, %"class.blink::Visitor"*)**, void (%"class.blink::IDLDictionaryBase"*, %"class.blink::Visitor"*)*** %4, align 8
  %6 = getelementptr inbounds void (%"class.blink::IDLDictionaryBase"*, %"class.blink::Visitor"*)*, void (%"class.blink::IDLDictionaryBase"*, %"class.blink::Visitor"*)** %5, i64 3
  %7 = load void (%"class.blink::IDLDictionaryBase"*, %"class.blink::Visitor"*)*, void (%"class.blink::IDLDictionaryBase"*, %"class.blink::Visitor"*)** %6, align 8
  tail call void %7(%"class.blink::IDLDictionaryBase"* %3, %"class.blink::Visitor"* %0) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink8internal14FinalizerTraitINS_17IDLDictionaryBaseEE8FinalizeEPv(i8*) #0 comdat align 2 {
  %2 = bitcast i8* %0 to %"class.blink::IDLDictionaryBase"*
  %3 = bitcast i8* %0 to void (%"class.blink::IDLDictionaryBase"*)***
  %4 = load void (%"class.blink::IDLDictionaryBase"*)**, void (%"class.blink::IDLDictionaryBase"*)*** %3, align 8
  %5 = load void (%"class.blink::IDLDictionaryBase"*)*, void (%"class.blink::IDLDictionaryBase"*)** %4, align 8
  tail call void %5(%"class.blink::IDLDictionaryBase"* %2) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i8*, i8 } @_ZN5blink9NameTraitINS_17IDLDictionaryBaseEE7GetNameEPKv(i8*) #0 comdat align 2 {
  ret { i8*, i8 } { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.53, i64 0, i64 0), i8 1 }
}

declare i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"*, %"struct.blink::GCInfo"*, %"struct.std::__1::atomic.183"*) local_unnamed_addr #1

declare void @_ZN5blink25WebGLWebCodecsTextureInfoC1Ev(%"class.blink::WebGLWebCodecsTextureInfo"*) unnamed_addr #1

declare void @_ZN5blink30WebGLWebCodecsVideoFrameHandleC1Ev(%"class.blink::WebGLWebCodecsVideoFrameHandle"*) unnamed_addr #1

declare zeroext i1 @_ZN4base19SequencedTaskRunner27DeleteOrReleaseSoonInternalERKNS_8LocationEPFvPKvES5_(%"class.base::SequencedTaskRunner"*, %"class.base::Location"* dereferenceable(32), void (i8*)*, i8*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base12DeleteHelperIN5media29GpuMemoryBufferVideoFramePoolEE8DoDeleteEPKv(i8*) #0 comdat align 2 {
  %2 = icmp eq i8* %0, null
  br i1 %2, label %9, label %3

3:                                                ; preds = %1
  %4 = bitcast i8* %0 to %"class.media::GpuMemoryBufferVideoFramePool"*
  %5 = bitcast i8* %0 to void (%"class.media::GpuMemoryBufferVideoFramePool"*)***
  %6 = load void (%"class.media::GpuMemoryBufferVideoFramePool"*)**, void (%"class.media::GpuMemoryBufferVideoFramePool"*)*** %5, align 8
  %7 = getelementptr inbounds void (%"class.media::GpuMemoryBufferVideoFramePool"*)*, void (%"class.media::GpuMemoryBufferVideoFramePool"*)** %6, i64 1
  %8 = load void (%"class.media::GpuMemoryBufferVideoFramePool"*)*, void (%"class.media::GpuMemoryBufferVideoFramePool"*)** %7, align 8
  tail call void %8(%"class.media::GpuMemoryBufferVideoFramePool"* nonnull %4) #12
  br label %9

9:                                                ; preds = %3, %1
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal7InvokerINS0_9BindStateIMN5blink24WebGLWebCodecsVideoFrameEFvPNS_13WaitableEventE13scoped_refptrIN5media10VideoFrameEEEJNS0_17UnretainedWrapperIS4_EENSD_IS5_EEEEEFvSA_EE7RunOnceEPNS0_13BindStateBaseEOSA_(%"class.base::internal::BindStateBase"*, %class.scoped_refptr.8* dereferenceable(8)) #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1
  %4 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 2
  %5 = bitcast void (%"class.base::internal::BindStateBase"*)** %4 to i8**
  %6 = load i8*, i8** %5, align 8
  %7 = getelementptr inbounds void (%"class.base::internal::BindStateBase"*)*, void (%"class.base::internal::BindStateBase"*)** %4, i64 1
  %8 = bitcast void (%"class.base::internal::BindStateBase"*)** %7 to %"class.base::WaitableEvent"**
  %9 = load %"class.base::WaitableEvent"*, %"class.base::WaitableEvent"** %8, align 8
  %10 = bitcast %"class.base::internal::BindStateBase"* %3 to i64*
  %11 = load i64, i64* %10, align 8
  %12 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 1
  %13 = bitcast void ()** %12 to i64*
  %14 = load i64, i64* %13, align 8
  %15 = getelementptr inbounds i8, i8* %6, i64 %14
  %16 = bitcast i8* %15 to %"class.blink::WebGLWebCodecsVideoFrame"*
  %17 = and i64 %11, 1
  %18 = icmp eq i64 %17, 0
  br i1 %18, label %26, label %19

19:                                               ; preds = %2
  %20 = bitcast i8* %15 to i8**
  %21 = load i8*, i8** %20, align 8
  %22 = add i64 %11, -1
  %23 = getelementptr i8, i8* %21, i64 %22
  %24 = bitcast i8* %23 to void (%"class.blink::WebGLWebCodecsVideoFrame"*, %"class.base::WaitableEvent"*, %"class.media::VideoFrame"*)**
  %25 = load void (%"class.blink::WebGLWebCodecsVideoFrame"*, %"class.base::WaitableEvent"*, %"class.media::VideoFrame"*)*, void (%"class.blink::WebGLWebCodecsVideoFrame"*, %"class.base::WaitableEvent"*, %"class.media::VideoFrame"*)** %24, align 8
  br label %28

26:                                               ; preds = %2
  %27 = inttoptr i64 %11 to void (%"class.blink::WebGLWebCodecsVideoFrame"*, %"class.base::WaitableEvent"*, %"class.media::VideoFrame"*)*
  br label %28

28:                                               ; preds = %19, %26
  %29 = phi void (%"class.blink::WebGLWebCodecsVideoFrame"*, %"class.base::WaitableEvent"*, %"class.media::VideoFrame"*)* [ %25, %19 ], [ %27, %26 ]
  %30 = getelementptr inbounds %class.scoped_refptr.8, %class.scoped_refptr.8* %1, i64 0, i32 0
  %31 = load %"class.media::VideoFrame"*, %"class.media::VideoFrame"** %30, align 8
  store %"class.media::VideoFrame"* null, %"class.media::VideoFrame"** %30, align 8
  tail call void %29(%"class.blink::WebGLWebCodecsVideoFrame"* %16, %"class.base::WaitableEvent"* %9, %"class.media::VideoFrame"* %31) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal9BindStateIMN5blink24WebGLWebCodecsVideoFrameEFvPNS_13WaitableEventE13scoped_refptrIN5media10VideoFrameEEEJNS0_17UnretainedWrapperIS3_EENSC_IS4_EEEE7DestroyEPKNS0_13BindStateBaseE(%"class.base::internal::BindStateBase"*) #0 comdat align 2 {
  %2 = icmp eq %"class.base::internal::BindStateBase"* %0, null
  br i1 %2, label %5, label %3

3:                                                ; preds = %1
  %4 = bitcast %"class.base::internal::BindStateBase"* %0 to i8*
  tail call void @_ZdlPv(i8* %4) #13
  br label %5

5:                                                ; preds = %3, %1
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal7InvokerINS0_9BindStateIMN5media29GpuMemoryBufferVideoFramePoolEFv13scoped_refptrINS3_10VideoFrameEENS_12OnceCallbackIFvS7_EEEEJNS0_17UnretainedWrapperIS4_EENS0_18RetainedRefWrapperIS6_EESA_EEEFvvEE7RunOnceEPNS0_13BindStateBaseE(%"class.base::internal::BindStateBase"*) #0 comdat align 2 {
  %2 = alloca %"class.base::OnceCallback.674", align 8
  %3 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1
  %4 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 2
  %5 = bitcast void (%"class.base::internal::BindStateBase"*)** %4 to i8**
  %6 = load i8*, i8** %5, align 8
  %7 = getelementptr inbounds void (%"class.base::internal::BindStateBase"*)*, void (%"class.base::internal::BindStateBase"*)** %4, i64 1
  %8 = bitcast void (%"class.base::internal::BindStateBase"*)** %7 to %"class.media::VideoFrame"**
  %9 = load %"class.media::VideoFrame"*, %"class.media::VideoFrame"** %8, align 8
  %10 = getelementptr inbounds void (%"class.base::internal::BindStateBase"*)*, void (%"class.base::internal::BindStateBase"*)** %4, i64 2
  %11 = bitcast %"class.base::internal::BindStateBase"* %3 to i64*
  %12 = load i64, i64* %11, align 8
  %13 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 1
  %14 = bitcast void ()** %13 to i64*
  %15 = load i64, i64* %14, align 8
  %16 = bitcast %"class.base::OnceCallback.674"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %16) #12
  %17 = getelementptr inbounds i8, i8* %6, i64 %15
  %18 = bitcast i8* %17 to %"class.media::GpuMemoryBufferVideoFramePool"*
  %19 = and i64 %12, 1
  %20 = icmp eq i64 %19, 0
  br i1 %20, label %28, label %21

21:                                               ; preds = %1
  %22 = bitcast i8* %17 to i8**
  %23 = load i8*, i8** %22, align 8
  %24 = add i64 %12, -1
  %25 = getelementptr i8, i8* %23, i64 %24
  %26 = bitcast i8* %25 to void (%"class.media::GpuMemoryBufferVideoFramePool"*, %"class.media::VideoFrame"*, %"class.base::OnceCallback.674"*)**
  %27 = load void (%"class.media::GpuMemoryBufferVideoFramePool"*, %"class.media::VideoFrame"*, %"class.base::OnceCallback.674"*)*, void (%"class.media::GpuMemoryBufferVideoFramePool"*, %"class.media::VideoFrame"*, %"class.base::OnceCallback.674"*)** %26, align 8
  br label %30

28:                                               ; preds = %1
  %29 = inttoptr i64 %12 to void (%"class.media::GpuMemoryBufferVideoFramePool"*, %"class.media::VideoFrame"*, %"class.base::OnceCallback.674"*)*
  br label %30

30:                                               ; preds = %28, %21
  %31 = phi void (%"class.media::GpuMemoryBufferVideoFramePool"*, %"class.media::VideoFrame"*, %"class.base::OnceCallback.674"*)* [ %27, %21 ], [ %29, %28 ]
  %32 = icmp eq %"class.media::VideoFrame"* %9, null
  br i1 %32, label %36, label %33

33:                                               ; preds = %30
  %34 = getelementptr inbounds %"class.media::VideoFrame", %"class.media::VideoFrame"* %9, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %35 = atomicrmw add i32* %34, i32 1 monotonic
  br label %36

36:                                               ; preds = %30, %33
  %37 = bitcast void (%"class.base::internal::BindStateBase"*)** %10 to %"class.base::internal::BindStateBase"**
  %38 = bitcast void (%"class.base::internal::BindStateBase"*)** %10 to i64*
  %39 = load i64, i64* %38, align 8
  %40 = bitcast %"class.base::OnceCallback.674"* %2 to i64*
  store i64 %39, i64* %40, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %37, align 8
  call void %31(%"class.media::GpuMemoryBufferVideoFramePool"* %18, %"class.media::VideoFrame"* %9, %"class.base::OnceCallback.674"* nonnull %2) #12
  %41 = getelementptr inbounds %"class.base::OnceCallback.674", %"class.base::OnceCallback.674"* %2, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %41) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal9BindStateIMN5media29GpuMemoryBufferVideoFramePoolEFv13scoped_refptrINS2_10VideoFrameEENS_12OnceCallbackIFvS6_EEEEJNS0_17UnretainedWrapperIS3_EENS0_18RetainedRefWrapperIS5_EES9_EE7DestroyEPKNS0_13BindStateBaseE(%"class.base::internal::BindStateBase"*) #0 comdat align 2 {
  %2 = icmp eq %"class.base::internal::BindStateBase"* %0, null
  br i1 %2, label %24, label %3

3:                                                ; preds = %1
  %4 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 2
  %5 = bitcast %"class.base::internal::BindStateBase"* %4 to %"class.base::internal::CallbackBase"*
  tail call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* %5) #12
  %6 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 3
  %7 = bitcast i1 (%"class.base::internal::BindStateBase"*, i32)** %6 to %"class.media::VideoFrame"**
  %8 = load %"class.media::VideoFrame"*, %"class.media::VideoFrame"** %7, align 8
  %9 = icmp eq %"class.media::VideoFrame"* %8, null
  br i1 %9, label %22, label %10

10:                                               ; preds = %3
  %11 = getelementptr inbounds %"class.media::VideoFrame", %"class.media::VideoFrame"* %8, i64 0, i32 1
  %12 = getelementptr inbounds %"class.base::RefCountedThreadSafe.9", %"class.base::RefCountedThreadSafe.9"* %11, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %13 = atomicrmw sub i32* %12, i32 1 acq_rel
  %14 = icmp eq i32 %13, 1
  br i1 %14, label %15, label %22

15:                                               ; preds = %10
  %16 = getelementptr inbounds %"class.base::RefCountedThreadSafe.9", %"class.base::RefCountedThreadSafe.9"* %11, i64 -2
  %17 = bitcast %"class.base::RefCountedThreadSafe.9"* %16 to %"class.media::VideoFrame"*
  %18 = bitcast %"class.base::RefCountedThreadSafe.9"* %16 to void (%"class.media::VideoFrame"*)***
  %19 = load void (%"class.media::VideoFrame"*)**, void (%"class.media::VideoFrame"*)*** %18, align 8
  %20 = getelementptr inbounds void (%"class.media::VideoFrame"*)*, void (%"class.media::VideoFrame"*)** %19, i64 1
  %21 = load void (%"class.media::VideoFrame"*)*, void (%"class.media::VideoFrame"*)** %20, align 8
  tail call void %21(%"class.media::VideoFrame"* nonnull %17) #12
  br label %22

22:                                               ; preds = %3, %10, %15
  %23 = bitcast %"class.base::internal::BindStateBase"* %0 to i8*
  tail call void @_ZdlPv(i8* %23) #13
  br label %24

24:                                               ; preds = %22, %1
  ret void
}

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink6MemberINS1_25WebGLWebCodecsTextureInfoEEELj0ENS1_13HeapAllocatorEE14AppendSlowCaseIRPS3_EEvOT_(%"class.WTF::Vector.571"*, %"class.blink::WebGLWebCodecsTextureInfo"** dereferenceable(8)) local_unnamed_addr #11 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::Vector.571", %"class.WTF::Vector.571"* %0, i64 0, i32 0, i32 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = add i32 %4, 1
  %6 = getelementptr inbounds %"class.WTF::Vector.571", %"class.WTF::Vector.571"* %0, i64 0, i32 0, i32 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = lshr i32 %7, 2
  %9 = add i32 %7, 1
  %10 = add i32 %9, %8
  %11 = icmp ugt i32 %10, 4
  %12 = select i1 %11, i32 %10, i32 4
  %13 = icmp ugt i32 %12, %5
  %14 = select i1 %13, i32 %12, i32 %5
  tail call void @_ZN3WTF6VectorIN5blink6MemberINS1_25WebGLWebCodecsTextureInfoEEELj0ENS1_13HeapAllocatorEE15ReserveCapacityEj(%"class.WTF::Vector.571"* %0, i32 %14) #12
  %15 = getelementptr inbounds %"class.WTF::Vector.571", %"class.WTF::Vector.571"* %0, i64 0, i32 0, i32 0, i32 0
  %16 = load %"class.blink::Member.574"*, %"class.blink::Member.574"** %15, align 8
  %17 = load i32, i32* %3, align 4
  %18 = zext i32 %17 to i64
  %19 = getelementptr inbounds %"class.blink::Member.574", %"class.blink::Member.574"* %16, i64 %18
  %20 = bitcast %"class.blink::WebGLWebCodecsTextureInfo"** %1 to i64*
  %21 = load i64, i64* %20, align 8
  %22 = bitcast %"class.blink::Member.574"* %19 to i64*
  store atomic i64 %21, i64* %22 monotonic, align 8
  %23 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %24 = icmp eq i32 %23, 0
  br i1 %24, label %28, label %25

25:                                               ; preds = %2
  %26 = inttoptr i64 %21 to i8*
  %27 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %26) #12
  br label %28

28:                                               ; preds = %2, %25
  %29 = load i32, i32* %3, align 4
  %30 = add i32 %29, 1
  store i32 %30, i32* %3, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink6MemberINS1_25WebGLWebCodecsTextureInfoEEELj0ENS1_13HeapAllocatorEE15ReserveCapacityEj(%"class.WTF::Vector.571"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckError", align 8
  %4 = getelementptr inbounds %"class.WTF::Vector.571", %"class.WTF::Vector.571"* %0, i64 0, i32 0, i32 0, i32 1
  %5 = load i32, i32* %4, align 8
  %6 = icmp ult i32 %5, %1
  br i1 %6, label %7, label %59, !prof !2

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"class.WTF::Vector.571", %"class.WTF::Vector.571"* %0, i64 0, i32 0, i32 0, i32 0
  %9 = load %"class.blink::Member.574"*, %"class.blink::Member.574"** %8, align 8
  %10 = icmp eq %"class.blink::Member.574"* %9, null
  %11 = zext i32 %1 to i64
  %12 = tail call i64 @_ZN5blink13HeapAllocator13QuantizedSizeINS_6MemberINS_25WebGLWebCodecsTextureInfoEEEEEmm(i64 %11) #12
  br i1 %10, label %13, label %24

13:                                               ; preds = %7
  %14 = lshr i64 %12, 3
  %15 = tail call %"class.blink::HeapVectorBacking"* @_ZN5blink25MakeGarbageCollectedTraitINS_17HeapVectorBackingINS_6MemberINS_25WebGLWebCodecsTextureInfoEEEN3WTF12VectorTraitsIS4_EEEEE4CallEm(i64 %14) #12
  %16 = ptrtoint %"class.blink::HeapVectorBacking"* %15 to i64
  %17 = bitcast %"class.WTF::Vector.571"* %0 to i64*
  store atomic i64 %16, i64* %17 monotonic, align 8
  %18 = trunc i64 %14 to i32
  store i32 %18, i32* %4, align 8
  %19 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %20 = icmp eq i32 %19, 0
  br i1 %20, label %59, label %21

21:                                               ; preds = %13
  %22 = getelementptr inbounds %"class.blink::HeapVectorBacking", %"class.blink::HeapVectorBacking"* %15, i64 0, i32 0
  %23 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %22) #12
  br label %59

24:                                               ; preds = %7
  %25 = load %"class.blink::Member.574"*, %"class.blink::Member.574"** %8, align 8
  %26 = icmp eq %"class.blink::Member.574"* %25, null
  br i1 %26, label %33, label %27

27:                                               ; preds = %24
  %28 = bitcast %"class.blink::Member.574"* %25 to i8*
  %29 = tail call zeroext i1 @_ZN5blink13HeapAllocator19ExpandVectorBackingEPvm(i8* nonnull %28, i64 %12) #12
  br i1 %29, label %30, label %33

30:                                               ; preds = %27
  %31 = lshr i64 %12, 3
  %32 = trunc i64 %31 to i32
  store i32 %32, i32* %4, align 8
  br label %59

33:                                               ; preds = %24, %27
  %34 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %35 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %34, i64 0, i32 1
  %36 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %35) #12
  %37 = icmp eq i8* %36, null
  br i1 %37, label %38, label %40, !prof !16

38:                                               ; preds = %33
  %39 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #12
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %35, i8* %39) #12
  br label %40

40:                                               ; preds = %38, %33
  %41 = phi i8* [ %39, %38 ], [ %36, %33 ]
  %42 = bitcast i8* %41 to %"class.blink::ThreadState"**
  %43 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %42, align 8
  %44 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %43, i64 0, i32 6
  %45 = load i8, i8* %44, align 8, !range !37
  %46 = icmp eq i8 %45, 0
  br i1 %46, label %51, label %47

47:                                               ; preds = %40
  %48 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %43, i64 0, i32 16
  %49 = load i32, i32* %48, align 4
  %50 = icmp eq i32 %49, 1
  br i1 %50, label %55, label %51

51:                                               ; preds = %40, %47
  %52 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %43, i64 0, i32 13
  %53 = load i64, i64* %52, align 8
  %54 = icmp eq i64 %53, 0
  br i1 %54, label %58, label %55

55:                                               ; preds = %47, %51
  %56 = bitcast %"class.logging::CheckError"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %56) #12
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %3, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.54, i64 0, i64 0), i32 1810, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.55, i64 0, i64 0)) #12
  %57 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %3) #12
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %3) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %56) #12
  br label %58

58:                                               ; preds = %51, %55
  call void @_ZN3WTF6VectorIN5blink6MemberINS1_25WebGLWebCodecsTextureInfoEEELj0ENS1_13HeapAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector.571"* %0, i32 %1)
  br label %59

59:                                               ; preds = %30, %21, %13, %2, %58
  ret void
}

declare void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* sret, i8*, i32, i8*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink6MemberINS1_25WebGLWebCodecsTextureInfoEEELj0ENS1_13HeapAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector.571"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq i32 %1, 0
  br i1 %3, label %4, label %13

4:                                                ; preds = %2
  %5 = bitcast %"class.WTF::Vector.571"* %0 to i8**
  %6 = load i8*, i8** %5, align 8
  %7 = getelementptr inbounds %"class.WTF::Vector.571", %"class.WTF::Vector.571"* %0, i64 0, i32 0, i32 0, i32 2
  %8 = load i32, i32* %7, align 4
  %9 = zext i32 %8 to i64
  %10 = bitcast %"class.WTF::Vector.571"* %0 to i64*
  store atomic i64 0, i64* %10 monotonic, align 8
  %11 = getelementptr inbounds %"class.WTF::Vector.571", %"class.WTF::Vector.571"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 0, i32* %11, align 8
  %12 = shl nuw nsw i64 %9, 3
  tail call void @_ZN3WTF13AtomicMemzeroEPvm(i8* %6, i64 %12) #12
  tail call void @_ZN5blink13HeapAllocator17FreeVectorBackingEPv(i8* %6) #12
  br label %50

13:                                               ; preds = %2
  %14 = zext i32 %1 to i64
  %15 = tail call i64 @_ZN5blink13HeapAllocator13QuantizedSizeINS_6MemberINS_25WebGLWebCodecsTextureInfoEEEEEmm(i64 %14) #12
  %16 = lshr i64 %15, 3
  %17 = tail call %"class.blink::HeapVectorBacking"* @_ZN5blink25MakeGarbageCollectedTraitINS_17HeapVectorBackingINS_6MemberINS_25WebGLWebCodecsTextureInfoEEEN3WTF12VectorTraitsIS4_EEEEE4CallEm(i64 %16) #12
  %18 = ptrtoint %"class.blink::HeapVectorBacking"* %17 to i64
  %19 = getelementptr inbounds %"class.WTF::Vector.571", %"class.WTF::Vector.571"* %0, i64 0, i32 0, i32 0, i32 0
  %20 = load %"class.blink::Member.574"*, %"class.blink::Member.574"** %19, align 8
  %21 = getelementptr inbounds %"class.WTF::Vector.571", %"class.WTF::Vector.571"* %0, i64 0, i32 0, i32 0, i32 2
  %22 = icmp ne %"class.blink::HeapVectorBacking"* %17, null
  %23 = icmp ne %"class.blink::Member.574"* %20, null
  %24 = and i1 %22, %23
  %25 = bitcast %"class.blink::Member.574"* %20 to i8*
  br i1 %24, label %28, label %26, !prof !2

26:                                               ; preds = %13
  %27 = bitcast %"class.WTF::Vector.571"* %0 to i8**
  br label %35

28:                                               ; preds = %13
  %29 = load i32, i32* %21, align 4
  %30 = zext i32 %29 to i64
  %31 = shl nuw nsw i64 %30, 3
  %32 = getelementptr inbounds %"class.blink::HeapVectorBacking", %"class.blink::HeapVectorBacking"* %17, i64 0, i32 0
  tail call void @_ZN3WTF17AtomicWriteMemcpyEPvPKvm(i8* nonnull %32, i8* nonnull %25, i64 %31) #12
  %33 = bitcast %"class.WTF::Vector.571"* %0 to i8**
  %34 = load i8*, i8** %33, align 8
  br label %35

35:                                               ; preds = %26, %28
  %36 = phi i8** [ %27, %26 ], [ %33, %28 ]
  %37 = phi i8* [ %25, %26 ], [ %34, %28 ]
  %38 = load i32, i32* %21, align 4
  %39 = zext i32 %38 to i64
  %40 = shl nuw nsw i64 %39, 3
  tail call void @_ZN3WTF13AtomicMemzeroEPvm(i8* %37, i64 %40) #12
  %41 = load i8*, i8** %36, align 8
  tail call void @_ZN5blink13HeapAllocator17FreeVectorBackingEPv(i8* %41) #12
  %42 = bitcast %"class.WTF::Vector.571"* %0 to i64*
  store atomic i64 %18, i64* %42 monotonic, align 8
  %43 = trunc i64 %16 to i32
  %44 = getelementptr inbounds %"class.WTF::Vector.571", %"class.WTF::Vector.571"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 %43, i32* %44, align 8
  %45 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %46 = icmp eq i32 %45, 0
  br i1 %46, label %50, label %47

47:                                               ; preds = %35
  %48 = getelementptr inbounds %"class.blink::HeapVectorBacking", %"class.blink::HeapVectorBacking"* %17, i64 0, i32 0
  %49 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %48) #12
  br label %50

50:                                               ; preds = %47, %35, %4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN5blink13HeapAllocator13QuantizedSizeINS_6MemberINS_25WebGLWebCodecsTextureInfoEEEEEmm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #12
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp ugt i64 %0, 16777216
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #12
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 16777216) #12
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.56, i64 0, i64 0), i8* %11, i8* %12) #12
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #12
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([74 x i8], [74 x i8]* @.str.57, i64 0, i64 0), i32 39, %"class.logging::CheckOpResult"* nonnull %3) #12
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #12
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #12
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #12
  %20 = shl i64 %0, 3
  ret i64 %20
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::HeapVectorBacking"* @_ZN5blink25MakeGarbageCollectedTraitINS_17HeapVectorBackingINS_6MemberINS_25WebGLWebCodecsTextureInfoEEEN3WTF12VectorTraitsIS4_EEEEE4CallEm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #12
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp eq i64 %0, 0
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 0) #12
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 0) #12
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.58, i64 0, i64 0), i8* %11, i8* %12) #12
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #12
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([93 x i8], [93 x i8]* @.str.59, i64 0, i64 0), i32 86, %"class.logging::CheckOpResult"* nonnull %3) #12
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #12
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #12
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #12
  %20 = shl i64 %0, 3
  %21 = call i8* @_ZN5blink17HeapVectorBackingINS_6MemberINS_25WebGLWebCodecsTextureInfoEEEN3WTF12VectorTraitsIS3_EEE14AllocateObjectIS7_EEPvm(i64 %20)
  %22 = bitcast i8* %21 to %"class.blink::HeapVectorBacking"*
  %23 = getelementptr inbounds i8, i8* %21, i64 -4
  %24 = bitcast i8* %23 to i16*
  %25 = load atomic i16, i16* %24 monotonic, align 2
  %26 = or i16 %25, 1
  store atomic i16 %26, i16* %24 release, align 2
  ret %"class.blink::HeapVectorBacking"* %22
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink17HeapVectorBackingINS_6MemberINS_25WebGLWebCodecsTextureInfoEEEN3WTF12VectorTraitsIS3_EEE14AllocateObjectIS7_EEPvm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %3 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %2, i64 0, i32 1
  %4 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %3) #12
  %5 = icmp eq i8* %4, null
  br i1 %5, label %6, label %8, !prof !16

6:                                                ; preds = %1
  %7 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #12
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %3, i8* %7) #12
  br label %8

8:                                                ; preds = %1, %6
  %9 = phi i8* [ %7, %6 ], [ %4, %1 ]
  %10 = bitcast i8* %9 to %"class.blink::ThreadState"**
  %11 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %11, i64 0, i32 0, i32 0, i32 0, i32 0
  %13 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** %12, align 8
  %14 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_25WebGLWebCodecsTextureInfoEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %16, label %19

16:                                               ; preds = %8
  %17 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %18 = tail call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %17, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_25WebGLWebCodecsTextureInfoEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic.183"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_25WebGLWebCodecsTextureInfoEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic.183"*)) #12
  br label %19

19:                                               ; preds = %8, %16
  %20 = phi i32 [ %14, %8 ], [ %18, %16 ]
  %21 = tail call i8* @_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc(%"class.blink::ThreadHeap"* %13, %"class.blink::ThreadState"* %11, i64 %0, i32 4, i32 %20, i8* getelementptr inbounds ([191 x i8], [191 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink17HeapVectorBackingINS1_6MemberINS1_25WebGLWebCodecsTextureInfoEEENS_12VectorTraitsIS5_EEEEEEPKcv, i64 0, i64 0))
  ret i8* %21
}

declare i8* @_ZN7logging15CheckOpValueStrEj(i32) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_17HeapVectorBackingINS_6MemberINS_25WebGLWebCodecsTextureInfoEEEN3WTF12VectorTraitsIS4_EEEEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::Member.574"*
  %4 = getelementptr inbounds i8, i8* %1, i64 -2
  %5 = bitcast i8* %4 to i16*
  %6 = load i16, i16* %5, align 2
  %7 = lshr i16 %6, 2
  %8 = icmp eq i16 %7, 0
  br i1 %8, label %9, label %17, !prof !16

9:                                                ; preds = %2
  %10 = getelementptr inbounds i8, i8* %1, i64 -8
  %11 = ptrtoint i8* %10 to i64
  %12 = and i64 %11, -131072
  %13 = inttoptr i64 %12 to i8*
  %14 = getelementptr inbounds i8, i8* %13, i64 4144
  %15 = bitcast i8* %14 to i64*
  %16 = load i64, i64* %15, align 16
  br label %20

17:                                               ; preds = %2
  %18 = zext i16 %7 to i64
  %19 = shl nuw nsw i64 %18, 3
  br label %20

20:                                               ; preds = %17, %9
  %21 = phi i64 [ %16, %9 ], [ %19, %17 ]
  %22 = add i64 %21, -8
  %23 = lshr i64 %22, 3
  %24 = icmp eq i64 %23, 0
  br i1 %24, label %41, label %25

25:                                               ; preds = %20
  %26 = bitcast %"class.blink::Visitor"* %0 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  br label %27

27:                                               ; preds = %38, %25
  %28 = phi i64 [ 0, %25 ], [ %39, %38 ]
  %29 = getelementptr inbounds %"class.blink::Member.574", %"class.blink::Member.574"* %3, i64 %28
  %30 = bitcast %"class.blink::Member.574"* %29 to i64*
  %31 = load atomic i64, i64* %30 monotonic, align 8
  %32 = icmp eq i64 %31, 0
  br i1 %32, label %38, label %33

33:                                               ; preds = %27
  %34 = inttoptr i64 %31 to i8*
  %35 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %26, align 8
  %36 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %35, i64 5
  %37 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %36, align 8
  tail call void %37(%"class.blink::Visitor"* %0, i8* nonnull %34, i8* nonnull %34, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_25WebGLWebCodecsTextureInfoEE5TraceEPNS_7VisitorEPKv) #12
  br label %38

38:                                               ; preds = %33, %27
  %39 = add nuw nsw i64 %28, 1
  %40 = icmp eq i64 %39, %23
  br i1 %40, label %41, label %27

41:                                               ; preds = %38, %20
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i8*, i8 } @_ZN5blink9NameTraitINS_17HeapVectorBackingINS_6MemberINS_25WebGLWebCodecsTextureInfoEEEN3WTF12VectorTraitsIS4_EEEEE7GetNameEPKv(i8*) #0 comdat align 2 {
  ret { i8*, i8 } { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.53, i64 0, i64 0), i8 1 }
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_25WebGLWebCodecsTextureInfoEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::WebGLWebCodecsTextureInfo"*
  %4 = bitcast i8* %1 to void (%"class.blink::WebGLWebCodecsTextureInfo"*, %"class.blink::Visitor"*)***
  %5 = load void (%"class.blink::WebGLWebCodecsTextureInfo"*, %"class.blink::Visitor"*)**, void (%"class.blink::WebGLWebCodecsTextureInfo"*, %"class.blink::Visitor"*)*** %4, align 8
  %6 = getelementptr inbounds void (%"class.blink::WebGLWebCodecsTextureInfo"*, %"class.blink::Visitor"*)*, void (%"class.blink::WebGLWebCodecsTextureInfo"*, %"class.blink::Visitor"*)** %5, i64 3
  %7 = load void (%"class.blink::WebGLWebCodecsTextureInfo"*, %"class.blink::Visitor"*)*, void (%"class.blink::WebGLWebCodecsTextureInfo"*, %"class.blink::Visitor"*)** %6, align 8
  tail call void %7(%"class.blink::WebGLWebCodecsTextureInfo"* %3, %"class.blink::Visitor"* %0) #12
  ret void
}

declare zeroext i1 @_ZN5blink13HeapAllocator19ExpandVectorBackingEPvm(i8*, i64) local_unnamed_addr #1

declare void @_ZN3WTF17AtomicWriteMemcpyEPvPKvm(i8*, i8*, i64) local_unnamed_addr #1

declare void @_ZN3WTF13AtomicMemzeroEPvm(i8*, i64) local_unnamed_addr #1

declare void @_ZN5blink13HeapAllocator17FreeVectorBackingEPv(i8*) local_unnamed_addr #1

declare void @_ZN5blink19WebGLUnownedTextureC1EPNS_25WebGLRenderingContextBaseEjj(%"class.blink::WebGLUnownedTexture"*, %"class.blink::WebGLRenderingContextBase"*, i32, i32) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink10ThreadHeap8AllocateINS_15ScriptWrappableEEEPhm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %3 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %2, i64 0, i32 1
  %4 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %3) #12
  %5 = icmp eq i8* %4, null
  br i1 %5, label %6, label %8, !prof !16

6:                                                ; preds = %1
  %7 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #12
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %3, i8* %7) #12
  br label %8

8:                                                ; preds = %1, %6
  %9 = phi i8* [ %7, %6 ], [ %4, %1 ]
  %10 = bitcast i8* %9 to %"class.blink::ThreadState"**
  %11 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %11, i64 0, i32 0, i32 0, i32 0, i32 0
  %13 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** %12, align 8
  %14 = icmp ult i64 %0, 64
  %15 = icmp ugt i64 %0, 31
  %16 = zext i1 %15 to i32
  %17 = icmp ult i64 %0, 128
  %18 = select i1 %17, i32 2, i32 3
  %19 = select i1 %14, i32 %16, i32 %18
  %20 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %22, label %25

22:                                               ; preds = %8
  %23 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %24 = tail call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %23, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic.183"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic.183"*)) #12
  br label %25

25:                                               ; preds = %8, %22
  %26 = phi i32 [ %20, %8 ], [ %24, %22 ]
  %27 = tail call i8* @_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc(%"class.blink::ThreadHeap"* %13, %"class.blink::ThreadState"* %11, i64 %0, i32 %19, i32 %26, i8* getelementptr inbounds ([70 x i8], [70 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink15ScriptWrappableEEEPKcv, i64 0, i64 0))
  ret i8* %27
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_15ScriptWrappableEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::ScriptWrappable"*
  %4 = bitcast i8* %1 to void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)***
  %5 = load void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)**, void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)*** %4, align 8
  %6 = getelementptr inbounds void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)*, void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)** %5, i64 5
  %7 = load void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)*, void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)** %6, align 8
  tail call void %7(%"class.blink::ScriptWrappable"* %3, %"class.blink::Visitor"* %0) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink8internal14FinalizerTraitINS_15ScriptWrappableEE8FinalizeEPv(i8*) #0 comdat align 2 {
  %2 = bitcast i8* %0 to %"class.blink::ScriptWrappable"*
  %3 = bitcast i8* %0 to void (%"class.blink::ScriptWrappable"*)***
  %4 = load void (%"class.blink::ScriptWrappable"*)**, void (%"class.blink::ScriptWrappable"*)*** %3, align 8
  %5 = getelementptr inbounds void (%"class.blink::ScriptWrappable"*)*, void (%"class.blink::ScriptWrappable"*)** %4, i64 1
  %6 = load void (%"class.blink::ScriptWrappable"*)*, void (%"class.blink::ScriptWrappable"*)** %5, align 8
  tail call void %6(%"class.blink::ScriptWrappable"* %2) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i8*, i8 } @_ZN5blink9NameTraitINS_15ScriptWrappableEE7GetNameEPKv(i8*) #0 comdat align 2 {
  %2 = bitcast i8* %0 to %"class.blink::NameClient"*
  %3 = bitcast i8* %0 to i8* (%"class.blink::NameClient"*)***
  %4 = load i8* (%"class.blink::NameClient"*)**, i8* (%"class.blink::NameClient"*)*** %3, align 8
  %5 = load i8* (%"class.blink::NameClient"*)*, i8* (%"class.blink::NameClient"*)** %4, align 8
  %6 = tail call i8* %5(%"class.blink::NameClient"* %2) #12
  %7 = insertvalue { i8*, i8 } undef, i8* %6, 0
  %8 = insertvalue { i8*, i8 } %7, i8 0, 1
  ret { i8*, i8 } %8
}

declare i32 @_ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEmmPKcm(%"class.std::__1::basic_string"*, i64, i64, i8*, i64) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(8) %"class.blink::Member.574"* @_ZN3WTF6VectorIN5blink6MemberINS1_25WebGLWebCodecsTextureInfoEEELj0ENS1_13HeapAllocatorEE2atEj(%"class.WTF::Vector.571"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #12
  %7 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %7, align 8
  %8 = getelementptr inbounds %"class.WTF::Vector.571", %"class.WTF::Vector.571"* %0, i64 0, i32 0, i32 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10)
  %11 = icmp ugt i32 %9, %1
  br i1 %11, label %12, label %13

12:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* null, i8** %7, align 8
  br label %22

13:                                               ; preds = %2
  %14 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %1) #12
  %15 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %9) #12
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.60, i64 0, i64 0), i8* %14, i8* %15) #12
  %16 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %17 = load i8*, i8** %16, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* %17, i8** %7, align 8
  %18 = icmp eq i8* %17, null
  br i1 %18, label %22, label %19

19:                                               ; preds = %13
  %20 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #12
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.54, i64 0, i64 0), i32 1172, %"class.logging::CheckOpResult"* nonnull %4) #12
  %21 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #12
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #12
  br label %22

22:                                               ; preds = %12, %13, %19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #12
  %23 = getelementptr inbounds %"class.WTF::Vector.571", %"class.WTF::Vector.571"* %0, i64 0, i32 0, i32 0, i32 0
  %24 = load %"class.blink::Member.574"*, %"class.blink::Member.574"** %23, align 8
  %25 = zext i32 %1 to i64
  %26 = getelementptr inbounds %"class.blink::Member.574", %"class.blink::Member.574"* %24, i64 %25
  ret %"class.blink::Member.574"* %26
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.WTF::KeyValuePair"*, i8 } @_ZN3WTF9HashTableIjNS_12KeyValuePairIj13scoped_refptrIN5media10VideoFrameEEEENS_24KeyValuePairKeyExtractorENS_7IntHashIjEENS_18HashMapValueTraitsINS_10HashTraitsIjEENSB_IS5_EEEESC_NS_18PartitionAllocatorEE6insertINS_17HashMapTranslatorISE_S9_SF_EERjRS5_EENS_18HashTableAddResultISG_S6_EEOT0_OT1_(%"class.WTF::HashTable"*, i32* dereferenceable(4), %class.scoped_refptr.8* dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 0
  %5 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %4, align 8
  %6 = icmp eq %"struct.WTF::KeyValuePair"* %5, null
  br i1 %6, label %7, label %10

7:                                                ; preds = %3
  %8 = tail call %"struct.WTF::KeyValuePair"* @_ZN3WTF9HashTableIjNS_12KeyValuePairIj13scoped_refptrIN5media10VideoFrameEEEENS_24KeyValuePairKeyExtractorENS_7IntHashIjEENS_18HashMapValueTraitsINS_10HashTraitsIjEENSB_IS5_EEEESC_NS_18PartitionAllocatorEE6ExpandEPS6_(%"class.WTF::HashTable"* %0, %"struct.WTF::KeyValuePair"* null)
  %9 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %4, align 8
  br label %10

10:                                               ; preds = %3, %7
  %11 = phi %"struct.WTF::KeyValuePair"* [ %5, %3 ], [ %9, %7 ]
  %12 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 1
  %13 = load i32, i32* %12, align 8
  %14 = add i32 %13, -1
  %15 = zext i32 %14 to i64
  %16 = load i32, i32* %1, align 4
  %17 = shl i32 %16, 15
  %18 = xor i32 %17, -1
  %19 = add i32 %16, %18
  %20 = lshr i32 %19, 10
  %21 = xor i32 %20, %19
  %22 = mul i32 %21, 9
  %23 = lshr i32 %22, 6
  %24 = xor i32 %23, %22
  %25 = shl i32 %24, 11
  %26 = xor i32 %25, -1
  %27 = add i32 %24, %26
  %28 = lshr i32 %27, 16
  %29 = xor i32 %28, %27
  %30 = and i32 %29, %14
  %31 = zext i32 %30 to i64
  %32 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %11, i64 %31
  %33 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %32, i64 0, i32 0
  %34 = load i32, i32* %33, align 4
  %35 = icmp eq i32 %34, 0
  br i1 %35, label %79, label %36

36:                                               ; preds = %10
  %37 = xor i32 %29, -1
  %38 = lshr i32 %27, 23
  %39 = add i32 %38, %37
  %40 = shl i32 %39, 12
  %41 = xor i32 %40, %39
  %42 = lshr i32 %41, 7
  %43 = xor i32 %42, %41
  %44 = shl i32 %43, 2
  %45 = xor i32 %44, %43
  %46 = lshr i32 %45, 20
  %47 = xor i32 %46, %45
  %48 = or i32 %47, 1
  %49 = zext i32 %48 to i64
  br label %50

50:                                               ; preds = %36, %57
  %51 = phi i32 [ %34, %36 ], [ %66, %57 ]
  %52 = phi %"struct.WTF::KeyValuePair"* [ %32, %36 ], [ %64, %57 ]
  %53 = phi %"struct.WTF::KeyValuePair"* [ null, %36 ], [ %59, %57 ]
  %54 = phi i64 [ %31, %36 ], [ %63, %57 ]
  %55 = phi i64 [ 0, %36 ], [ %61, %57 ]
  %56 = icmp eq i32 %51, %16
  br i1 %56, label %120, label %57

57:                                               ; preds = %50
  %58 = icmp eq i32 %51, -1
  %59 = select i1 %58, %"struct.WTF::KeyValuePair"* %52, %"struct.WTF::KeyValuePair"* %53
  %60 = icmp eq i64 %55, 0
  %61 = select i1 %60, i64 %49, i64 %55
  %62 = add i64 %61, %54
  %63 = and i64 %62, %15
  %64 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %11, i64 %63
  %65 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %64, i64 0, i32 0
  %66 = load i32, i32* %65, align 4
  %67 = icmp eq i32 %66, 0
  br i1 %67, label %68, label %50

68:                                               ; preds = %57
  %69 = icmp eq %"struct.WTF::KeyValuePair"* %59, null
  br i1 %69, label %79, label %70

70:                                               ; preds = %68
  %71 = bitcast %"struct.WTF::KeyValuePair"* %59 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %71, i8 0, i64 16, i1 false) #12
  %72 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 3
  %73 = load i32, i32* %72, align 8
  %74 = add i32 %73, 2147483647
  %75 = and i32 %74, 2147483647
  %76 = and i32 %73, -2147483648
  %77 = or i32 %75, %76
  store i32 %77, i32* %72, align 8
  %78 = load i32, i32* %1, align 4
  br label %79

79:                                               ; preds = %10, %68, %70
  %80 = phi i32 [ %78, %70 ], [ %16, %68 ], [ %16, %10 ]
  %81 = phi %"struct.WTF::KeyValuePair"* [ %59, %70 ], [ %64, %68 ], [ %32, %10 ]
  %82 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %81, i64 0, i32 0
  store i32 %80, i32* %82, align 8
  %83 = getelementptr inbounds %class.scoped_refptr.8, %class.scoped_refptr.8* %2, i64 0, i32 0
  %84 = load %"class.media::VideoFrame"*, %"class.media::VideoFrame"** %83, align 8
  %85 = icmp eq %"class.media::VideoFrame"* %84, null
  br i1 %85, label %89, label %86

86:                                               ; preds = %79
  %87 = getelementptr inbounds %"class.media::VideoFrame", %"class.media::VideoFrame"* %84, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %88 = atomicrmw add i32* %87, i32 1 monotonic
  br label %89

89:                                               ; preds = %86, %79
  %90 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %81, i64 0, i32 1
  %91 = ptrtoint %"class.media::VideoFrame"* %84 to i64
  %92 = bitcast %class.scoped_refptr.8* %90 to i64*
  %93 = getelementptr inbounds %class.scoped_refptr.8, %class.scoped_refptr.8* %90, i64 0, i32 0
  %94 = load %"class.media::VideoFrame"*, %"class.media::VideoFrame"** %93, align 8
  store i64 %91, i64* %92, align 8
  %95 = icmp eq %"class.media::VideoFrame"* %94, null
  br i1 %95, label %108, label %96

96:                                               ; preds = %89
  %97 = getelementptr inbounds %"class.media::VideoFrame", %"class.media::VideoFrame"* %94, i64 0, i32 1
  %98 = getelementptr inbounds %"class.base::RefCountedThreadSafe.9", %"class.base::RefCountedThreadSafe.9"* %97, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %99 = atomicrmw sub i32* %98, i32 1 acq_rel
  %100 = icmp eq i32 %99, 1
  br i1 %100, label %101, label %108

101:                                              ; preds = %96
  %102 = getelementptr inbounds %"class.base::RefCountedThreadSafe.9", %"class.base::RefCountedThreadSafe.9"* %97, i64 -2
  %103 = bitcast %"class.base::RefCountedThreadSafe.9"* %102 to %"class.media::VideoFrame"*
  %104 = bitcast %"class.base::RefCountedThreadSafe.9"* %102 to void (%"class.media::VideoFrame"*)***
  %105 = load void (%"class.media::VideoFrame"*)**, void (%"class.media::VideoFrame"*)*** %104, align 8
  %106 = getelementptr inbounds void (%"class.media::VideoFrame"*)*, void (%"class.media::VideoFrame"*)** %105, i64 1
  %107 = load void (%"class.media::VideoFrame"*)*, void (%"class.media::VideoFrame"*)** %106, align 8
  tail call void %107(%"class.media::VideoFrame"* nonnull %103) #12
  br label %108

108:                                              ; preds = %89, %96, %101
  %109 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 2
  %110 = load i32, i32* %109, align 4
  %111 = add i32 %110, 1
  store i32 %111, i32* %109, align 4
  %112 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 3
  %113 = load i32, i32* %112, align 8
  %114 = add i32 %113, %111
  %115 = shl i32 %114, 1
  %116 = load i32, i32* %12, align 8
  %117 = icmp ult i32 %115, %116
  br i1 %117, label %120, label %118

118:                                              ; preds = %108
  %119 = tail call %"struct.WTF::KeyValuePair"* @_ZN3WTF9HashTableIjNS_12KeyValuePairIj13scoped_refptrIN5media10VideoFrameEEEENS_24KeyValuePairKeyExtractorENS_7IntHashIjEENS_18HashMapValueTraitsINS_10HashTraitsIjEENSB_IS5_EEEESC_NS_18PartitionAllocatorEE6ExpandEPS6_(%"class.WTF::HashTable"* %0, %"struct.WTF::KeyValuePair"* %81)
  br label %120

120:                                              ; preds = %50, %108, %118
  %121 = phi i8 [ 1, %108 ], [ 1, %118 ], [ 0, %50 ]
  %122 = phi %"struct.WTF::KeyValuePair"* [ %81, %108 ], [ %119, %118 ], [ %52, %50 ]
  %123 = insertvalue { %"struct.WTF::KeyValuePair"*, i8 } undef, %"struct.WTF::KeyValuePair"* %122, 0
  %124 = insertvalue { %"struct.WTF::KeyValuePair"*, i8 } %123, i8 %121, 1
  ret { %"struct.WTF::KeyValuePair"*, i8 } %124
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.WTF::KeyValuePair"* @_ZN3WTF9HashTableIjNS_12KeyValuePairIj13scoped_refptrIN5media10VideoFrameEEEENS_24KeyValuePairKeyExtractorENS_7IntHashIjEENS_18HashMapValueTraitsINS_10HashTraitsIjEENSB_IS5_EEEESC_NS_18PartitionAllocatorEE6ExpandEPS6_(%"class.WTF::HashTable"*, %"struct.WTF::KeyValuePair"*) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %31, label %9

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 2
  %11 = load i32, i32* %10, align 4
  %12 = mul i32 %11, 6
  %13 = shl i32 %7, 1
  %14 = icmp ult i32 %12, %13
  br i1 %14, label %31, label %15

15:                                               ; preds = %9
  %16 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %16) #12
  %17 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %17, align 8
  %18 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %18)
  %19 = icmp ugt i32 %13, %7
  br i1 %19, label %20, label %21

20:                                               ; preds = %15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18)
  store i8* null, i8** %17, align 8
  br label %30

21:                                               ; preds = %15
  %22 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %13) #12
  %23 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %7) #12
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.61, i64 0, i64 0), i8* %22, i8* %23) #12
  %24 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %25 = load i8*, i8** %24, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18)
  store i8* %25, i8** %17, align 8
  %26 = icmp eq i8* %25, null
  br i1 %26, label %30, label %27

27:                                               ; preds = %21
  %28 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %28) #12
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.62, i64 0, i64 0), i32 1783, %"class.logging::CheckOpResult"* nonnull %4) #12
  %29 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #12
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %28) #12
  br label %30

30:                                               ; preds = %20, %21, %27
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16) #12
  br label %31

31:                                               ; preds = %9, %2, %30
  %32 = phi i32 [ %13, %30 ], [ 8, %2 ], [ %7, %9 ]
  %33 = zext i32 %32 to i64
  %34 = shl nuw nsw i64 %33, 4
  %35 = call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %34, i8* getelementptr inbounds ([114 x i8], [114 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_12KeyValuePairIj13scoped_refptrIN5media10VideoFrameEEEEEEPKcv, i64 0, i64 0)) #12
  call void @llvm.memset.p0i8.i64(i8* align 1 %35, i8 0, i64 %34, i1 false) #12
  %36 = bitcast i8* %35 to %"struct.WTF::KeyValuePair"*
  %37 = call %"struct.WTF::KeyValuePair"* @_ZN3WTF9HashTableIjNS_12KeyValuePairIj13scoped_refptrIN5media10VideoFrameEEEENS_24KeyValuePairKeyExtractorENS_7IntHashIjEENS_18HashMapValueTraitsINS_10HashTraitsIjEENSB_IS5_EEEESC_NS_18PartitionAllocatorEE8RehashToEPS6_jSH_(%"class.WTF::HashTable"* %0, %"struct.WTF::KeyValuePair"* %36, i32 %32, %"struct.WTF::KeyValuePair"* %1) #12
  ret %"struct.WTF::KeyValuePair"* %37
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.WTF::KeyValuePair"* @_ZN3WTF9HashTableIjNS_12KeyValuePairIj13scoped_refptrIN5media10VideoFrameEEEENS_24KeyValuePairKeyExtractorENS_7IntHashIjEENS_18HashMapValueTraitsINS_10HashTraitsIjEENSB_IS5_EEEESC_NS_18PartitionAllocatorEE8RehashToEPS6_jSH_(%"class.WTF::HashTable"*, %"struct.WTF::KeyValuePair"*, i32, %"struct.WTF::KeyValuePair"*) local_unnamed_addr #0 comdat align 2 {
  %5 = ptrtoint %"struct.WTF::KeyValuePair"* %1 to i64
  %6 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = icmp eq i32 %7, 0
  %9 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 0
  br i1 %8, label %10, label %13

10:                                               ; preds = %4
  %11 = bitcast %"class.WTF::HashTable"* %0 to i64*
  %12 = load i64, i64* %11, align 8
  br label %20

13:                                               ; preds = %4
  %14 = add i32 %2, -1
  %15 = zext i32 %14 to i64
  %16 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %9, align 8
  %17 = ptrtoint %"struct.WTF::KeyValuePair"* %16 to i64
  br label %61

18:                                               ; preds = %168
  %19 = bitcast %"class.WTF::HashTable"* %0 to i64*
  br label %20

20:                                               ; preds = %10, %18
  %21 = phi i64* [ %11, %10 ], [ %19, %18 ]
  %22 = phi i64 [ %12, %10 ], [ %169, %18 ]
  %23 = phi %"struct.WTF::KeyValuePair"* [ null, %10 ], [ %172, %18 ]
  %24 = phi i32 [ 0, %10 ], [ %170, %18 ]
  store atomic i64 %5, i64* %21 monotonic, align 8
  store i32 %2, i32* %6, align 8
  %25 = inttoptr i64 %22 to %"struct.WTF::KeyValuePair"*
  %26 = icmp eq i64 %22, 0
  br i1 %26, label %57, label %27

27:                                               ; preds = %20
  %28 = icmp eq i32 %24, 0
  br i1 %28, label %55, label %29

29:                                               ; preds = %27
  %30 = zext i32 %24 to i64
  br label %31

31:                                               ; preds = %52, %29
  %32 = phi i64 [ 0, %29 ], [ %53, %52 ]
  %33 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %25, i64 %32, i32 0
  %34 = load i32, i32* %33, align 4
  %35 = icmp eq i32 %34, -1
  br i1 %35, label %52, label %36

36:                                               ; preds = %31
  %37 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %25, i64 %32, i32 1, i32 0
  %38 = load %"class.media::VideoFrame"*, %"class.media::VideoFrame"** %37, align 8
  %39 = icmp eq %"class.media::VideoFrame"* %38, null
  br i1 %39, label %52, label %40

40:                                               ; preds = %36
  %41 = getelementptr inbounds %"class.media::VideoFrame", %"class.media::VideoFrame"* %38, i64 0, i32 1
  %42 = getelementptr inbounds %"class.base::RefCountedThreadSafe.9", %"class.base::RefCountedThreadSafe.9"* %41, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %43 = atomicrmw sub i32* %42, i32 1 acq_rel
  %44 = icmp eq i32 %43, 1
  br i1 %44, label %45, label %52

45:                                               ; preds = %40
  %46 = getelementptr inbounds %"class.base::RefCountedThreadSafe.9", %"class.base::RefCountedThreadSafe.9"* %41, i64 -2
  %47 = bitcast %"class.base::RefCountedThreadSafe.9"* %46 to %"class.media::VideoFrame"*
  %48 = bitcast %"class.base::RefCountedThreadSafe.9"* %46 to void (%"class.media::VideoFrame"*)***
  %49 = load void (%"class.media::VideoFrame"*)**, void (%"class.media::VideoFrame"*)*** %48, align 8
  %50 = getelementptr inbounds void (%"class.media::VideoFrame"*)*, void (%"class.media::VideoFrame"*)** %49, i64 1
  %51 = load void (%"class.media::VideoFrame"*)*, void (%"class.media::VideoFrame"*)** %50, align 8
  tail call void %51(%"class.media::VideoFrame"* nonnull %47) #12
  br label %52

52:                                               ; preds = %45, %40, %36, %31
  %53 = add nuw nsw i64 %32, 1
  %54 = icmp eq i64 %53, %30
  br i1 %54, label %55, label %31

55:                                               ; preds = %52, %27
  %56 = inttoptr i64 %22 to i8*
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %56) #12
  br label %57

57:                                               ; preds = %20, %55
  %58 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 3
  %59 = load i32, i32* %58, align 8
  %60 = and i32 %59, -2147483648
  store i32 %60, i32* %58, align 8
  ret %"struct.WTF::KeyValuePair"* %23

61:                                               ; preds = %13, %168
  %62 = phi i64 [ %17, %13 ], [ %169, %168 ]
  %63 = phi i32 [ %7, %13 ], [ %170, %168 ]
  %64 = phi %"struct.WTF::KeyValuePair"* [ %16, %13 ], [ %171, %168 ]
  %65 = phi %"struct.WTF::KeyValuePair"* [ null, %13 ], [ %172, %168 ]
  %66 = phi i32 [ 0, %13 ], [ %173, %168 ]
  %67 = zext i32 %66 to i64
  %68 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %64, i64 %67, i32 0
  %69 = load i32, i32* %68, align 4
  %70 = add i32 %69, 1
  %71 = icmp ult i32 %70, 2
  br i1 %71, label %168, label %72

72:                                               ; preds = %61
  %73 = shl i32 %69, 15
  %74 = xor i32 %73, -1
  %75 = add i32 %69, %74
  %76 = lshr i32 %75, 10
  %77 = xor i32 %76, %75
  %78 = mul i32 %77, 9
  %79 = lshr i32 %78, 6
  %80 = xor i32 %79, %78
  %81 = shl i32 %80, 11
  %82 = xor i32 %81, -1
  %83 = add i32 %80, %82
  %84 = lshr i32 %83, 16
  %85 = xor i32 %84, %83
  %86 = and i32 %85, %14
  %87 = zext i32 %86 to i64
  %88 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %1, i64 %87
  %89 = ptrtoint %"struct.WTF::KeyValuePair"* %88 to i64
  %90 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %88, i64 0, i32 0
  %91 = load i32, i32* %90, align 4
  %92 = icmp eq i32 %91, 0
  br i1 %92, label %110, label %93

93:                                               ; preds = %72
  %94 = xor i32 %85, -1
  %95 = lshr i32 %83, 23
  %96 = add i32 %95, %94
  %97 = shl i32 %96, 12
  %98 = xor i32 %97, %96
  %99 = lshr i32 %98, 7
  %100 = xor i32 %99, %98
  %101 = shl i32 %100, 2
  %102 = xor i32 %101, %100
  %103 = lshr i32 %102, 20
  %104 = xor i32 %103, %102
  %105 = or i32 %104, 1
  %106 = zext i32 %105 to i64
  br label %116

107:                                              ; preds = %123
  %108 = ptrtoint %"struct.WTF::KeyValuePair"* %130 to i64
  %109 = inttoptr i64 %125 to %"struct.WTF::KeyValuePair"*
  br label %110

110:                                              ; preds = %107, %72
  %111 = phi i64 [ %108, %107 ], [ %89, %72 ]
  %112 = phi %"struct.WTF::KeyValuePair"* [ %109, %107 ], [ null, %72 ]
  %113 = icmp eq %"struct.WTF::KeyValuePair"* %112, null
  %114 = ptrtoint %"struct.WTF::KeyValuePair"* %112 to i64
  %115 = select i1 %113, i64 %111, i64 %114
  br label %135

116:                                              ; preds = %123, %93
  %117 = phi i64 [ 0, %93 ], [ %125, %123 ]
  %118 = phi i32 [ %91, %93 ], [ %133, %123 ]
  %119 = phi i64 [ %89, %93 ], [ %131, %123 ]
  %120 = phi i64 [ %87, %93 ], [ %129, %123 ]
  %121 = phi i64 [ 0, %93 ], [ %127, %123 ]
  %122 = icmp eq i32 %118, %69
  br i1 %122, label %135, label %123

123:                                              ; preds = %116
  %124 = icmp eq i32 %118, -1
  %125 = select i1 %124, i64 %119, i64 %117
  %126 = icmp eq i64 %121, 0
  %127 = select i1 %126, i64 %106, i64 %121
  %128 = add i64 %127, %120
  %129 = and i64 %128, %15
  %130 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %1, i64 %129
  %131 = ptrtoint %"struct.WTF::KeyValuePair"* %130 to i64
  %132 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %130, i64 0, i32 0
  %133 = load i32, i32* %132, align 4
  %134 = icmp eq i32 %133, 0
  br i1 %134, label %107, label %116

135:                                              ; preds = %116, %110
  %136 = phi i64 [ %115, %110 ], [ %119, %116 ]
  %137 = inttoptr i64 %136 to %"struct.WTF::KeyValuePair"*
  %138 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %137, i64 0, i32 1, i32 0
  %139 = load %"class.media::VideoFrame"*, %"class.media::VideoFrame"** %138, align 8
  %140 = icmp eq %"class.media::VideoFrame"* %139, null
  br i1 %140, label %153, label %141

141:                                              ; preds = %135
  %142 = getelementptr inbounds %"class.media::VideoFrame", %"class.media::VideoFrame"* %139, i64 0, i32 1
  %143 = getelementptr inbounds %"class.base::RefCountedThreadSafe.9", %"class.base::RefCountedThreadSafe.9"* %142, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %144 = atomicrmw sub i32* %143, i32 1 acq_rel
  %145 = icmp eq i32 %144, 1
  br i1 %145, label %146, label %153

146:                                              ; preds = %141
  %147 = getelementptr inbounds %"class.base::RefCountedThreadSafe.9", %"class.base::RefCountedThreadSafe.9"* %142, i64 -2
  %148 = bitcast %"class.base::RefCountedThreadSafe.9"* %147 to %"class.media::VideoFrame"*
  %149 = bitcast %"class.base::RefCountedThreadSafe.9"* %147 to void (%"class.media::VideoFrame"*)***
  %150 = load void (%"class.media::VideoFrame"*)**, void (%"class.media::VideoFrame"*)*** %149, align 8
  %151 = getelementptr inbounds void (%"class.media::VideoFrame"*)*, void (%"class.media::VideoFrame"*)** %150, i64 1
  %152 = load void (%"class.media::VideoFrame"*)*, void (%"class.media::VideoFrame"*)** %151, align 8
  tail call void %152(%"class.media::VideoFrame"* nonnull %148) #12
  br label %153

153:                                              ; preds = %135, %141, %146
  %154 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %137, i64 0, i32 0
  %155 = load i32, i32* %68, align 8
  store i32 %155, i32* %154, align 8
  %156 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %137, i64 0, i32 1
  %157 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %64, i64 %67, i32 1
  %158 = getelementptr inbounds %class.scoped_refptr.8, %class.scoped_refptr.8* %157, i64 0, i32 0
  %159 = bitcast %class.scoped_refptr.8* %157 to i64*
  %160 = load i64, i64* %159, align 8
  %161 = bitcast %class.scoped_refptr.8* %156 to i64*
  store i64 %160, i64* %161, align 8
  store %"class.media::VideoFrame"* null, %"class.media::VideoFrame"** %158, align 8
  %162 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %9, align 8
  %163 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %162, i64 %67
  %164 = icmp eq %"struct.WTF::KeyValuePair"* %163, %3
  %165 = select i1 %164, %"struct.WTF::KeyValuePair"* %137, %"struct.WTF::KeyValuePair"* %65
  %166 = load i32, i32* %6, align 8
  %167 = ptrtoint %"struct.WTF::KeyValuePair"* %162 to i64
  br label %168

168:                                              ; preds = %61, %153
  %169 = phi i64 [ %62, %61 ], [ %167, %153 ]
  %170 = phi i32 [ %63, %61 ], [ %166, %153 ]
  %171 = phi %"struct.WTF::KeyValuePair"* [ %64, %61 ], [ %162, %153 ]
  %172 = phi %"struct.WTF::KeyValuePair"* [ %65, %61 ], [ %165, %153 ]
  %173 = add i32 %66, 1
  %174 = icmp eq i32 %173, %170
  br i1 %174, label %18, label %61
}

declare i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64, i8*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(8) %"class.blink::Member.574"* @_ZNK3WTF6VectorIN5blink6MemberINS1_25WebGLWebCodecsTextureInfoEEELj0ENS1_13HeapAllocatorEE2atEj(%"class.WTF::Vector.571"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #12
  %7 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %7, align 8
  %8 = getelementptr inbounds %"class.WTF::Vector.571", %"class.WTF::Vector.571"* %0, i64 0, i32 0, i32 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10)
  %11 = icmp ugt i32 %9, %1
  br i1 %11, label %12, label %13

12:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* null, i8** %7, align 8
  br label %22

13:                                               ; preds = %2
  %14 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %1) #12
  %15 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %9) #12
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.60, i64 0, i64 0), i8* %14, i8* %15) #12
  %16 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %17 = load i8*, i8** %16, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* %17, i8** %7, align 8
  %18 = icmp eq i8* %17, null
  br i1 %18, label %22, label %19

19:                                               ; preds = %13
  %20 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #12
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.54, i64 0, i64 0), i32 1176, %"class.logging::CheckOpResult"* nonnull %4) #12
  %21 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #12
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #12
  br label %22

22:                                               ; preds = %12, %13, %19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #12
  %23 = getelementptr inbounds %"class.WTF::Vector.571", %"class.WTF::Vector.571"* %0, i64 0, i32 0, i32 0, i32 0
  %24 = load %"class.blink::Member.574"*, %"class.blink::Member.574"** %23, align 8
  %25 = zext i32 %1 to i64
  %26 = getelementptr inbounds %"class.blink::Member.574", %"class.blink::Member.574"* %24, i64 %25
  ret %"class.blink::Member.574"* %26
}

declare void @_ZN5media29GpuMemoryBufferVideoFramePoolC1ERK13scoped_refptrIN4base22SingleThreadTaskRunnerEERKS1_INS2_10TaskRunnerEEPNS_28GpuVideoAcceleratorFactoriesE(%"class.media::GpuMemoryBufferVideoFramePool"*, %class.scoped_refptr.7* dereferenceable(8), %class.scoped_refptr.793* dereferenceable(8), %"class.media::GpuVideoAcceleratorFactories"*) unnamed_addr #1

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind }
attributes #3 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind readnone speculatable }
attributes #6 = { cold noreturn nounwind }
attributes #7 = { argmemonly nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #11 = { noinline nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #12 = { nounwind }
attributes #13 = { builtin nounwind }
attributes #14 = { nounwind readonly }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!"branch_weights", i32 2000, i32 1}
!3 = !{!4}
!4 = distinct !{!4, !5, !"_ZN3gfx10ColorSpace12CreateREC709Ev: argument 0"}
!5 = distinct !{!5, !"_ZN3gfx10ColorSpace12CreateREC709Ev"}
!6 = !{!7, !9}
!7 = distinct !{!7, !8, !"_ZN4base8internal8BindImplINS_12OnceCallbackEMN5blink24WebGLWebCodecsVideoFrameEFvPNS_13WaitableEventE13scoped_refptrIN5media10VideoFrameEEEJNS0_17UnretainedWrapperIS4_EENSD_IS5_EEEEEDcOT0_DpOT1_: argument 0"}
!8 = distinct !{!8, !"_ZN4base8internal8BindImplINS_12OnceCallbackEMN5blink24WebGLWebCodecsVideoFrameEFvPNS_13WaitableEventE13scoped_refptrIN5media10VideoFrameEEEJNS0_17UnretainedWrapperIS4_EENSD_IS5_EEEEEDcOT0_DpOT1_"}
!9 = distinct !{!9, !10, !"_ZN4base8BindOnceIMN5blink24WebGLWebCodecsVideoFrameEFvPNS_13WaitableEventE13scoped_refptrIN5media10VideoFrameEEEJNS_8internal17UnretainedWrapperIS2_EENSC_IS3_EEEEENS_12OnceCallbackINSB_14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSH_DpOSI_: argument 0"}
!10 = distinct !{!10, !"_ZN4base8BindOnceIMN5blink24WebGLWebCodecsVideoFrameEFvPNS_13WaitableEventE13scoped_refptrIN5media10VideoFrameEEEJNS_8internal17UnretainedWrapperIS2_EENSC_IS3_EEEEENS_12OnceCallbackINSB_14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSH_DpOSI_"}
!11 = !{!12, !14}
!12 = distinct !{!12, !13, !"_ZN4base8internal8BindImplINS_12OnceCallbackEMN5media29GpuMemoryBufferVideoFramePoolEFv13scoped_refptrINS3_10VideoFrameEENS2_IFvS7_EEEEJNS0_17UnretainedWrapperIS4_EENS0_18RetainedRefWrapperIS6_EES9_EEEDcOT0_DpOT1_: argument 0"}
!13 = distinct !{!13, !"_ZN4base8internal8BindImplINS_12OnceCallbackEMN5media29GpuMemoryBufferVideoFramePoolEFv13scoped_refptrINS3_10VideoFrameEENS2_IFvS7_EEEEJNS0_17UnretainedWrapperIS4_EENS0_18RetainedRefWrapperIS6_EES9_EEEDcOT0_DpOT1_"}
!14 = distinct !{!14, !15, !"_ZN4base8BindOnceIMN5media29GpuMemoryBufferVideoFramePoolEFv13scoped_refptrINS1_10VideoFrameEENS_12OnceCallbackIFvS5_EEEEJNS_8internal17UnretainedWrapperIS2_EENSB_18RetainedRefWrapperIS4_EES8_EEENS6_INSB_14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSH_DpOSI_: argument 0"}
!15 = distinct !{!15, !"_ZN4base8BindOnceIMN5media29GpuMemoryBufferVideoFramePoolEFv13scoped_refptrINS1_10VideoFrameEENS_12OnceCallbackIFvS5_EEEEJNS_8internal17UnretainedWrapperIS2_EENSB_18RetainedRefWrapperIS4_EES8_EEENS6_INSB_14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSH_DpOSI_"}
!16 = !{!"branch_weights", i32 1, i32 2000}
!17 = !{!18}
!18 = distinct !{!18, !19, !"_ZN5blink18V8VideoPixelFormat6CreateERKN3WTF6StringE: argument 0"}
!19 = distinct !{!19, !"_ZN5blink18V8VideoPixelFormat6CreateERKN3WTF6StringE"}
!20 = !{!21}
!21 = distinct !{!21, !22, !"_ZN3gfx10ColorSpace10CreateSRGBEv: argument 0"}
!22 = distinct !{!22, !"_ZN3gfx10ColorSpace10CreateSRGBEv"}
!23 = !{!24, !26, !28}
!24 = distinct !{!24, !25, !"_ZN4base8internal8BindImplINS_12OnceCallbackEPFvP13scoped_refptrINS_22SingleThreadTaskRunnerEEPPN5media28GpuVideoAcceleratorFactoriesEPNS_13WaitableEventEEJN3WTF28CrossThreadUnretainedWrapperIS5_EENSG_IS9_EENSG_ISB_EEEEEDcOT0_DpOT1_: argument 0"}
!25 = distinct !{!25, !"_ZN4base8internal8BindImplINS_12OnceCallbackEPFvP13scoped_refptrINS_22SingleThreadTaskRunnerEEPPN5media28GpuVideoAcceleratorFactoriesEPNS_13WaitableEventEEJN3WTF28CrossThreadUnretainedWrapperIS5_EENSG_IS9_EENSG_ISB_EEEEEDcOT0_DpOT1_"}
!26 = distinct !{!26, !27, !"_ZN4base8BindOnceIPFvP13scoped_refptrINS_22SingleThreadTaskRunnerEEPPN5media28GpuVideoAcceleratorFactoriesEPNS_13WaitableEventEEJN3WTF28CrossThreadUnretainedWrapperIS3_EENSE_IS7_EENSE_IS9_EEEEENS_12OnceCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSL_DpOSM_: argument 0"}
!27 = distinct !{!27, !"_ZN4base8BindOnceIPFvP13scoped_refptrINS_22SingleThreadTaskRunnerEEPPN5media28GpuVideoAcceleratorFactoriesEPNS_13WaitableEventEEJN3WTF28CrossThreadUnretainedWrapperIS3_EENSE_IS7_EENSE_IS9_EEEEENS_12OnceCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSL_DpOSM_"}
!28 = distinct !{!28, !29, !"_ZN3WTF19CrossThreadBindOnceIPFvP13scoped_refptrIN4base22SingleThreadTaskRunnerEEPPN5media28GpuVideoAcceleratorFactoriesEPNS2_13WaitableEventEEJNS_28CrossThreadUnretainedWrapperIS4_EENSE_IS8_EENSE_ISA_EEEEEDaOT_DpOT0_: argument 0"}
!29 = distinct !{!29, !"_ZN3WTF19CrossThreadBindOnceIPFvP13scoped_refptrIN4base22SingleThreadTaskRunnerEEPPN5media28GpuVideoAcceleratorFactoriesEPNS2_13WaitableEventEEJNS_28CrossThreadUnretainedWrapperIS4_EENSE_IS8_EENSE_ISA_EEEEEDaOT_DpOT0_"}
!30 = !{!28}
!31 = !{!32, !28}
!32 = distinct !{!32, !33, !"_ZN3WTF8internal27MakeCrossThreadOnceFunctionIFvvEEEDaN4base12OnceCallbackIT_EE: argument 0"}
!33 = distinct !{!33, !"_ZN3WTF8internal27MakeCrossThreadOnceFunctionIFvvEEEDaN4base12OnceCallbackIT_EE"}
!34 = !{!35}
!35 = distinct !{!35, !36, !"_ZN3WTF25ConvertToBaseOnceCallbackENS_23CrossThreadOnceFunctionIFvvEEE: argument 0"}
!36 = distinct !{!36, !"_ZN3WTF25ConvertToBaseOnceCallbackENS_23CrossThreadOnceFunctionIFvvEEE"}
!37 = !{i8 0, i8 2}
