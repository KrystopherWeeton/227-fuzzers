; ModuleID = '../../third_party/blink/renderer/platform/loader/fetch/fetch_parameters.cc'
source_filename = "../../third_party/blink/renderer/platform/loader/fetch/fetch_parameters.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.blink::FetchParameters" = type <{ %"class.blink::ResourceRequest", %"class.blink::TextResourceDecoderOptions", %"struct.blink::ResourceLoaderOptions", i32, i32, %"struct.blink::FetchParameters::ResourceWidth", %"class.blink::ClientHintsPreferences", i32, i32, i8, i8, i8, [5 x i8] }>
%"class.blink::ResourceRequest" = type { %"class.blink::ResourceRequestHead", %"class.blink::ResourceRequestBody" }
%"class.blink::ResourceRequestHead" = type { %"class.blink::KURL", %"class.base::TimeDelta", %"class.net::SiteForCookies", %class.scoped_refptr.6, %class.scoped_refptr.6, %class.scoped_refptr.6, %"class.WTF::AtomicString", %"class.blink::HTTPHeaderMap", i16, i32, i8, i32, i32, i32, %class.scoped_refptr.7, i32, i32, i32, i32, i32, i32, %"class.WTF::String", %"class.WTF::String", i32, i8, i32, %"class.absl::optional.20", %"class.absl::optional.25", %"class.absl::optional.37", %"struct.blink::CacheControlHeader", i8, i8, i8, i8, %"class.absl::optional.47", %"class.absl::optional.37", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", %"class.absl::optional.37", i64, %"class.base::UnguessableToken", i64, i8, i8, i8, i8, i8, i8, %"class.absl::optional.47", %"class.absl::optional.52", i8, %class.scoped_refptr.57 }
%"class.blink::KURL" = type { i8, i8, %"class.WTF::String", %"struct.url::Parsed", %"class.WTF::String", %"class.std::__1::unique_ptr" }
%"struct.url::Parsed" = type { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, %"struct.url::Parsed"* }
%"struct.url::Component" = type { i32, i32 }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.blink::KURL"* }
%"class.base::TimeDelta" = type { i64 }
%"class.net::SiteForCookies" = type <{ %"class.net::SchemefulSite", i8, [7 x i8] }>
%"class.net::SchemefulSite" = type { %"class.url::Origin" }
%"class.url::Origin" = type { %"class.url::SchemeHostPort", %"class.absl::optional" }
%"class.url::SchemeHostPort" = type <{ %"class.std::__1::basic_string", %"class.std::__1::basic_string", i16, [6 x i8] }>
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.2" }
%"class.std::__1::__compressed_pair.2" = type { %"struct.std::__1::__compressed_pair_elem.3" }
%"struct.std::__1::__compressed_pair_elem.3" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon.5 }
%union.anon.5 = type { %"class.url::Origin::Nonce" }
%"class.url::Origin::Nonce" = type { %"class.base::UnguessableToken" }
%class.scoped_refptr.6 = type { %"class.blink::SecurityOrigin"* }
%"class.blink::SecurityOrigin" = type { %"class.WTF::RefCounted.260", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", i16, %"class.absl::optional", i8, i8, i8, i8, i8, i8, %"class.base::UnguessableToken", %class.scoped_refptr.6 }
%"class.WTF::RefCounted.260" = type { %"class.base::RefCounted.261" }
%"class.base::RefCounted.261" = type { %"class.base::subtle::RefCountedBase" }
%"class.base::subtle::RefCountedBase" = type { i32 }
%"class.WTF::AtomicString" = type { %"class.WTF::String" }
%"class.blink::HTTPHeaderMap" = type { %"class.WTF::HashMap" }
%"class.WTF::HashMap" = type { %"class.WTF::HashTable" }
%"class.WTF::HashTable" = type <{ %"struct.WTF::KeyValuePair"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair" = type { %"class.WTF::AtomicString", %"class.WTF::AtomicString" }
%class.scoped_refptr.7 = type { %"class.blink::WebURLRequestExtraData"* }
%"class.blink::WebURLRequestExtraData" = type { i32 (...)**, %"class.base::RefCounted", i8, i32, i8, i8, %"class.blink::WebString", %"class.blink::WebVector", %class.scoped_refptr.14, i8, %"class.url::Origin" }
%"class.base::RefCounted" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::WebString" = type { %class.scoped_refptr }
%class.scoped_refptr = type { %"class.WTF::StringImpl"* }
%"class.WTF::StringImpl" = type { i32, i32, %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.0" }
%"struct.std::__1::__atomic_base.0" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.blink::WebVector" = type { %"class.std::__1::vector" }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.std::__1::unique_ptr.8"*, %"class.std::__1::unique_ptr.8"*, %"class.std::__1::__compressed_pair.9" }
%"class.std::__1::unique_ptr.8" = type { %"class.std::__1::__compressed_pair.262" }
%"class.std::__1::__compressed_pair.262" = type { %"struct.std::__1::__compressed_pair_elem.263" }
%"struct.std::__1::__compressed_pair_elem.263" = type { %"class.blink::URLLoaderThrottle"* }
%"class.blink::URLLoaderThrottle" = type { i32 (...)**, %"class.blink::URLLoaderThrottle::Delegate"* }
%"class.blink::URLLoaderThrottle::Delegate" = type { i32 (...)** }
%"class.std::__1::__compressed_pair.9" = type { %"struct.std::__1::__compressed_pair_elem.10" }
%"struct.std::__1::__compressed_pair_elem.10" = type { %"class.std::__1::unique_ptr.8"* }
%class.scoped_refptr.14 = type { %"class.blink::WebFrameRequestBlocker"* }
%"class.blink::WebFrameRequestBlocker" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe", [4 x i8] }>
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic.15" }
%"struct.std::__1::atomic.15" = type { %"struct.std::__1::__atomic_base.16" }
%"struct.std::__1::__atomic_base.16" = type { %"struct.std::__1::__atomic_base.17" }
%"struct.std::__1::__atomic_base.17" = type { %"struct.std::__1::__cxx_atomic_impl.18" }
%"struct.std::__1::__cxx_atomic_impl.18" = type { %"struct.std::__1::__cxx_atomic_base_impl.19" }
%"struct.std::__1::__cxx_atomic_base_impl.19" = type { i32 }
%"class.absl::optional.20" = type { %"class.absl::optional_internal::optional_data.21" }
%"class.absl::optional_internal::optional_data.21" = type { %"class.absl::optional_internal::optional_data_base.22" }
%"class.absl::optional_internal::optional_data_base.22" = type { %"class.absl::optional_internal::optional_data_dtor_base.23" }
%"class.absl::optional_internal::optional_data_dtor_base.23" = type { i8, %union.anon.24 }
%union.anon.24 = type { %"struct.blink::ResourceRequestHead::RedirectInfo" }
%"struct.blink::ResourceRequestHead::RedirectInfo" = type { %"class.blink::KURL", %"class.blink::KURL" }
%"class.absl::optional.25" = type { %"class.absl::optional_internal::optional_data.26" }
%"class.absl::optional_internal::optional_data.26" = type { %"class.absl::optional_internal::optional_data_base.27" }
%"class.absl::optional_internal::optional_data_base.27" = type { %"class.absl::optional_internal::optional_data_dtor_base.28" }
%"class.absl::optional_internal::optional_data_dtor_base.28" = type { i8, %union.anon.29 }
%union.anon.29 = type { %"class.network::mojom::blink::TrustTokenParams" }
%"class.network::mojom::blink::TrustTokenParams" = type { i32, i32, i32, i8, %"class.WTF::Vector", %"class.WTF::Vector.32", %"class.WTF::String" }
%"class.WTF::Vector" = type { %"class.WTF::VectorBuffer" }
%"class.WTF::VectorBuffer" = type { %"class.WTF::VectorBufferBase" }
%"class.WTF::VectorBufferBase" = type { %class.scoped_refptr.6*, i32, i32 }
%"class.WTF::Vector.32" = type { %"class.WTF::VectorBuffer.33" }
%"class.WTF::VectorBuffer.33" = type { %"class.WTF::VectorBufferBase.34" }
%"class.WTF::VectorBufferBase.34" = type { %"class.WTF::String"*, i32, i32 }
%"struct.blink::CacheControlHeader" = type { i8, %"class.absl::optional.42", %"class.absl::optional.42" }
%"class.absl::optional.42" = type { %"class.absl::optional_internal::optional_data.43" }
%"class.absl::optional_internal::optional_data.43" = type { %"class.absl::optional_internal::optional_data_base.44" }
%"class.absl::optional_internal::optional_data_base.44" = type { %"class.absl::optional_internal::optional_data_dtor_base.45" }
%"class.absl::optional_internal::optional_data_dtor_base.45" = type { i8, %union.anon.46 }
%union.anon.46 = type { %"class.base::TimeDelta" }
%"class.WTF::String" = type { %class.scoped_refptr }
%"class.absl::optional.37" = type { %"class.absl::optional_internal::optional_data.38" }
%"class.absl::optional_internal::optional_data.38" = type { %"class.absl::optional_internal::optional_data_base.39" }
%"class.absl::optional_internal::optional_data_base.39" = type { %"class.absl::optional_internal::optional_data_dtor_base.40" }
%"class.absl::optional_internal::optional_data_dtor_base.40" = type { i8, %union.anon.41 }
%union.anon.41 = type { %"class.WTF::String" }
%"class.base::UnguessableToken" = type { %"class.base::Token" }
%"class.base::Token" = type { i64, i64 }
%"class.absl::optional.47" = type { %"class.absl::optional_internal::optional_data.48" }
%"class.absl::optional_internal::optional_data.48" = type { %"class.absl::optional_internal::optional_data_base.49" }
%"class.absl::optional_internal::optional_data_base.49" = type { %"class.absl::optional_internal::optional_data_dtor_base.50" }
%"class.absl::optional_internal::optional_data_dtor_base.50" = type { i8, %union.anon.51 }
%union.anon.51 = type { %"class.base::UnguessableToken" }
%"class.absl::optional.52" = type { %"class.absl::optional_internal::optional_data.53" }
%"class.absl::optional_internal::optional_data.53" = type { %"class.absl::optional_internal::optional_data_base.54" }
%"class.absl::optional_internal::optional_data_base.54" = type { %"class.absl::optional_internal::optional_data_dtor_base.55" }
%"class.absl::optional_internal::optional_data_dtor_base.55" = type { i8, %union.anon.56 }
%union.anon.56 = type { %"struct.blink::ResourceRequestHead::WebBundleTokenParams" }
%"struct.blink::ResourceRequestHead::WebBundleTokenParams" = type { %"class.blink::KURL", %"class.base::UnguessableToken", %"class.mojo::PendingRemote" }
%"class.mojo::PendingRemote" = type { %"struct.mojo::internal::PendingRemoteState" }
%"struct.mojo::internal::PendingRemoteState" = type { %"class.mojo::ScopedHandleBase", i32 }
%"class.mojo::ScopedHandleBase" = type { %"class.mojo::MessagePipeHandle" }
%"class.mojo::MessagePipeHandle" = type { %"class.mojo::Handle" }
%"class.mojo::Handle" = type { i32 }
%class.scoped_refptr.57 = type { %"class.base::RefCountedData"* }
%"class.base::RefCountedData" = type { %"class.base::RefCountedThreadSafe.267", %"class.base::internal::flat_tree" }
%"class.base::RefCountedThreadSafe.267" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::internal::flat_tree" = type { %"class.std::__1::vector.268" }
%"class.std::__1::vector.268" = type { %"class.std::__1::__vector_base.269" }
%"class.std::__1::__vector_base.269" = type { i32*, i32*, %"class.std::__1::__compressed_pair.270" }
%"class.std::__1::__compressed_pair.270" = type { %"struct.std::__1::__compressed_pair_elem.271" }
%"struct.std::__1::__compressed_pair_elem.271" = type { i32* }
%"class.blink::ResourceRequestBody" = type { %class.scoped_refptr.58, %"class.mojo::PendingRemote.59" }
%class.scoped_refptr.58 = type { %"class.blink::EncodedFormData"* }
%"class.blink::EncodedFormData" = type opaque
%"class.mojo::PendingRemote.59" = type { %"struct.mojo::internal::PendingRemoteState" }
%"class.blink::TextResourceDecoderOptions" = type <{ i32, i32, %"class.WTF::TextEncoding", i8, i8, [6 x i8], i8*, %"class.blink::KURL", [3 x i8], [5 x i8] }>
%"class.WTF::TextEncoding" = type { i8* }
%"struct.blink::ResourceLoaderOptions" = type { %"struct.blink::FetchInitiatorInfo", i8, i32, i8, i8, %"class.base::StrongAlias", %"class.WTF::String", %"class.WTF::HashSet", i8, i8, %class.scoped_refptr.63, %class.scoped_refptr.249, %class.scoped_refptr.251 }
%"struct.blink::FetchInitiatorInfo" = type { %"class.WTF::AtomicString", %"class.WTF::TextPosition", i8, i8, %"class.WTF::String" }
%"class.WTF::TextPosition" = type { %"class.WTF::OrdinalNumber", %"class.WTF::OrdinalNumber" }
%"class.WTF::OrdinalNumber" = type { i32 }
%"class.base::StrongAlias" = type { i8 }
%"class.WTF::HashSet" = type { %"class.WTF::HashTable.60" }
%"class.WTF::HashTable.60" = type <{ %"struct.std::__1::pair"*, i32, i32, i32, [4 x i8] }>
%"struct.std::__1::pair" = type <{ %"class.WTF::String", i8, [7 x i8] }>
%class.scoped_refptr.63 = type { %"class.blink::DOMWrapperWorld"* }
%class.scoped_refptr.249 = type { %"class.base::RefCountedData.250"* }
%"class.base::RefCountedData.250" = type opaque
%class.scoped_refptr.251 = type { %"class.base::RefCountedData.252"* }
%"class.base::RefCountedData.252" = type opaque
%"struct.blink::FetchParameters::ResourceWidth" = type <{ float, i8, [3 x i8] }>
%"class.blink::ClientHintsPreferences" = type { %"struct.blink::WebEnabledClientHints" }
%"struct.blink::WebEnabledClientHints" = type { [16 x i8] }
%"class.blink::DOMWrapperWorld" = type { %"class.WTF::RefCounted", i32, i32, %"class.blink::Persistent" }
%"class.WTF::RefCounted" = type { %"class.base::RefCounted.64" }
%"class.base::RefCounted.64" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::Persistent" = type { %"class.blink::PersistentBase" }
%"class.blink::PersistentBase" = type { %"class.blink::DOMDataStore"*, %"class.blink::PersistentNodePtr" }
%"class.blink::DOMDataStore" = type opaque
%"class.blink::PersistentNodePtr" = type { %"class.blink::PersistentNode"* }
%"class.blink::PersistentNode" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"class.blink::Visitor" = type { i32 (...)**, %"class.blink::ThreadState"* }
%"class.blink::ThreadState" = type <{ %"class.std::__1::unique_ptr.65", i32, [4 x i8], %"class.std::__1::unique_ptr.203", %"class.std::__1::unique_ptr.203", i8**, i8, i8, i8, i8, i8, i8, [2 x i8], i64, i64, i32, i32, i32, [4 x i8], %"class.WTF::Deque", %"class.v8::Isolate"*, void (%"class.v8::Isolate"*, %"class.v8::EmbedderGraph"*, i8*)*, %"class.std::__1::unique_ptr.214", %"class.std::__1::unique_ptr.220", %"struct.blink::ThreadState::GCData", %"class.std::__1::unique_ptr.232", %"class.std::__1::unique_ptr.238", %"class.base::JobHandle", %"class.base::JobHandle", %"struct.std::__1::atomic.245", [7 x i8], i64, i8, [7 x i8], i64, %"class.base::TimeTicks", i8, i8, [6 x i8] }>
%"class.std::__1::unique_ptr.65" = type { %"class.std::__1::__compressed_pair.66" }
%"class.std::__1::__compressed_pair.66" = type { %"struct.std::__1::__compressed_pair_elem.67" }
%"struct.std::__1::__compressed_pair_elem.67" = type { %"class.blink::ThreadHeap"* }
%"class.blink::ThreadHeap" = type { %"class.blink::ThreadState"*, %"class.std::__1::unique_ptr.68", %"class.std::__1::unique_ptr.74", %"class.std::__1::unique_ptr.80", %"class.std::__1::unique_ptr.86", %"class.std::__1::unique_ptr.92", %"class.std::__1::unique_ptr.98", %"class.std::__1::unique_ptr.109", %"class.std::__1::unique_ptr.116", %"class.std::__1::unique_ptr.116", %"class.std::__1::unique_ptr.123", %"class.std::__1::unique_ptr.130", %"class.std::__1::unique_ptr.137", %"class.std::__1::unique_ptr.137", %"class.std::__1::unique_ptr.144", %"class.std::__1::unique_ptr.151", %"class.std::__1::unique_ptr.158", %"class.std::__1::unique_ptr.183", %"struct.blink::ThreadHeap::LastAllocatedRegion", [9 x %"class.blink::BaseArena"*], i64, i64 }
%"class.std::__1::unique_ptr.68" = type { %"class.std::__1::__compressed_pair.69" }
%"class.std::__1::__compressed_pair.69" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"struct.std::__1::__compressed_pair_elem.70" = type { %"class.blink::ThreadHeapStatsCollector"* }
%"class.blink::ThreadHeapStatsCollector" = type opaque
%"class.std::__1::unique_ptr.74" = type { %"class.std::__1::__compressed_pair.75" }
%"class.std::__1::__compressed_pair.75" = type { %"struct.std::__1::__compressed_pair_elem.76" }
%"struct.std::__1::__compressed_pair_elem.76" = type { %"class.blink::RegionTree"* }
%"class.blink::RegionTree" = type opaque
%"class.std::__1::unique_ptr.80" = type { %"class.std::__1::__compressed_pair.81" }
%"class.std::__1::__compressed_pair.81" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"struct.std::__1::__compressed_pair_elem.82" = type { %"class.blink::PageBloomFilter"* }
%"class.blink::PageBloomFilter" = type opaque
%"class.std::__1::unique_ptr.86" = type { %"class.std::__1::__compressed_pair.87" }
%"class.std::__1::__compressed_pair.87" = type { %"struct.std::__1::__compressed_pair_elem.88" }
%"struct.std::__1::__compressed_pair_elem.88" = type { %"class.blink::PagePool"* }
%"class.blink::PagePool" = type opaque
%"class.std::__1::unique_ptr.92" = type { %"class.std::__1::__compressed_pair.93" }
%"class.std::__1::__compressed_pair.93" = type { %"struct.std::__1::__compressed_pair_elem.94" }
%"struct.std::__1::__compressed_pair_elem.94" = type { %"class.blink::ProcessHeapReporter"* }
%"class.blink::ProcessHeapReporter" = type opaque
%"class.std::__1::unique_ptr.98" = type { %"class.std::__1::__compressed_pair.99" }
%"class.std::__1::__compressed_pair.99" = type { %"struct.std::__1::__compressed_pair_elem.100" }
%"struct.std::__1::__compressed_pair_elem.100" = type { %"class.blink::Worklist"* }
%"class.blink::Worklist" = type { [4 x %"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, i64, [512 x %"struct.blink::TraceDescriptor"] }
%"struct.blink::TraceDescriptor" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"struct.std::__1::atomic.101" }
%"class.base::Lock" = type { %"class.base::internal::LockImpl" }
%"class.base::internal::LockImpl" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"struct.std::__1::atomic.101" = type { %"struct.std::__1::__atomic_base.102" }
%"struct.std::__1::__atomic_base.102" = type { %"struct.std::__1::__atomic_base.103" }
%"struct.std::__1::__atomic_base.103" = type { %"struct.std::__1::__cxx_atomic_impl.104" }
%"struct.std::__1::__cxx_atomic_impl.104" = type { %"struct.std::__1::__cxx_atomic_base_impl.105" }
%"struct.std::__1::__cxx_atomic_base_impl.105" = type { i64 }
%"class.std::__1::unique_ptr.109" = type { %"class.std::__1::__compressed_pair.110" }
%"class.std::__1::__compressed_pair.110" = type { %"struct.std::__1::__compressed_pair_elem.111" }
%"struct.std::__1::__compressed_pair_elem.111" = type { %"class.blink::Worklist.112"* }
%"class.blink::Worklist.112" = type { [4 x %"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"struct.std::__1::atomic.101" }
%"class.std::__1::unique_ptr.116" = type { %"class.std::__1::__compressed_pair.117" }
%"class.std::__1::__compressed_pair.117" = type { %"struct.std::__1::__compressed_pair_elem.118" }
%"struct.std::__1::__compressed_pair_elem.118" = type { %"class.blink::Worklist.119"* }
%"class.blink::Worklist.119" = type { [4 x %"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"class.blink::Worklist<const void *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *, 16, 4>::Segment" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, i64, [16 x i8*] }
%"class.blink::Worklist<const void *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"struct.std::__1::atomic.101" }
%"class.std::__1::unique_ptr.123" = type { %"class.std::__1::__compressed_pair.124" }
%"class.std::__1::__compressed_pair.124" = type { %"struct.std::__1::__compressed_pair_elem.125" }
%"struct.std::__1::__compressed_pair_elem.125" = type { %"class.blink::Worklist.126"* }
%"class.blink::Worklist.126" = type { [4 x %"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.101" }
%"class.std::__1::unique_ptr.130" = type { %"class.std::__1::__compressed_pair.131" }
%"class.std::__1::__compressed_pair.131" = type { %"struct.std::__1::__compressed_pair_elem.132" }
%"struct.std::__1::__compressed_pair_elem.132" = type { %"class.blink::Worklist.133"* }
%"class.blink::Worklist.133" = type { [4 x %"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *const *, 256, 4>::Segment" = type opaque
%"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"struct.std::__1::atomic.101" }
%"class.std::__1::unique_ptr.137" = type { %"class.std::__1::__compressed_pair.138" }
%"class.std::__1::__compressed_pair.138" = type { %"struct.std::__1::__compressed_pair_elem.139" }
%"struct.std::__1::__compressed_pair_elem.139" = type { %"class.blink::Worklist.140"* }
%"class.blink::Worklist.140" = type { [4 x %"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.101" }
%"class.std::__1::unique_ptr.144" = type { %"class.std::__1::__compressed_pair.145" }
%"class.std::__1::__compressed_pair.145" = type { %"struct.std::__1::__compressed_pair_elem.146" }
%"struct.std::__1::__compressed_pair_elem.146" = type { %"class.blink::Worklist.147"* }
%"class.blink::Worklist.147" = type { [4 x %"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment" = type opaque
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"struct.std::__1::atomic.101" }
%"class.std::__1::unique_ptr.151" = type { %"class.std::__1::__compressed_pair.152" }
%"class.std::__1::__compressed_pair.152" = type { %"struct.std::__1::__compressed_pair_elem.153" }
%"struct.std::__1::__compressed_pair_elem.153" = type { %"class.blink::Worklist.154"* }
%"class.blink::Worklist.154" = type { [4 x %"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, i64, [64 x %"struct.blink::NotSafeToConcurrentlyTraceItem"] }
%"struct.blink::NotSafeToConcurrentlyTraceItem" = type { %"struct.blink::TraceDescriptor", i64 }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.101" }
%"class.std::__1::unique_ptr.158" = type { %"class.std::__1::__compressed_pair.159" }
%"class.std::__1::__compressed_pair.159" = type { %"struct.std::__1::__compressed_pair_elem.160" }
%"struct.std::__1::__compressed_pair_elem.160" = type { %"class.blink::WeakContainersWorklist"* }
%"class.blink::WeakContainersWorklist" = type { %"class.WTF::Mutex", %"class.std::__1::unordered_set" }
%"class.WTF::Mutex" = type { %"class.WTF::MutexBase" }
%"class.WTF::MutexBase" = type { %"struct.WTF::PlatformMutex" }
%"struct.WTF::PlatformMutex" = type { %union.pthread_mutex_t }
%"class.std::__1::unordered_set" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.161", %"class.std::__1::__compressed_pair.170", %"class.std::__1::__compressed_pair.175", %"class.std::__1::__compressed_pair.177", [4 x i8] }>
%"class.std::__1::unique_ptr.161" = type { %"class.std::__1::__compressed_pair.162" }
%"class.std::__1::__compressed_pair.162" = type { %"struct.std::__1::__compressed_pair_elem.163", %"struct.std::__1::__compressed_pair_elem.164" }
%"struct.std::__1::__compressed_pair_elem.163" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.164" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.165" }
%"class.std::__1::__compressed_pair.165" = type { %"struct.std::__1::__compressed_pair_elem.166" }
%"struct.std::__1::__compressed_pair_elem.166" = type { i64 }
%"class.std::__1::__compressed_pair.170" = type { %"struct.std::__1::__compressed_pair_elem.171" }
%"struct.std::__1::__compressed_pair_elem.171" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.175" = type { %"struct.std::__1::__compressed_pair_elem.166" }
%"class.std::__1::__compressed_pair.177" = type { %"struct.std::__1::__compressed_pair_elem.178" }
%"struct.std::__1::__compressed_pair_elem.178" = type { float }
%"class.std::__1::unique_ptr.183" = type { %"class.std::__1::__compressed_pair.184" }
%"class.std::__1::__compressed_pair.184" = type { %"struct.std::__1::__compressed_pair_elem.185" }
%"struct.std::__1::__compressed_pair_elem.185" = type { %"class.blink::HeapCompact"* }
%"class.blink::HeapCompact" = type <{ %"class.blink::ThreadHeap"*, %"class.std::__1::unique_ptr.186", i8, [7 x i8], i64, i64, i32, [4 x i8], i64, i8, [7 x i8] }>
%"class.std::__1::unique_ptr.186" = type { %"class.std::__1::__compressed_pair.187" }
%"class.std::__1::__compressed_pair.187" = type { %"struct.std::__1::__compressed_pair_elem.188" }
%"struct.std::__1::__compressed_pair_elem.188" = type { %"class.blink::HeapCompact::MovableObjectFixups"* }
%"class.blink::HeapCompact::MovableObjectFixups" = type opaque
%"struct.blink::ThreadHeap::LastAllocatedRegion" = type { i8*, i64 }
%"class.blink::BaseArena" = type <{ i32 (...)**, %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::ThreadState"*, i32, [4 x i8] }>
%"class.blink::PageStackThreadSafe" = type { %"class.blink::PageStack", %"class.WTF::Mutex" }
%"class.blink::PageStack" = type { %"class.WTF::Vector.195" }
%"class.WTF::Vector.195" = type { %"class.WTF::VectorBuffer.196" }
%"class.WTF::VectorBuffer.196" = type { %"class.WTF::VectorBufferBase.197" }
%"class.WTF::VectorBufferBase.197" = type { %"class.blink::BasePage"**, i32, i32 }
%"class.blink::BasePage" = type <{ i32 (...)**, %"class.blink::PageMemory"*, %"class.blink::BaseArena"*, %"class.blink::ThreadState"*, i64, i8, i8, i8, [5 x i8] }>
%"class.blink::PageMemory" = type opaque
%"class.std::__1::unique_ptr.203" = type { %"class.std::__1::__compressed_pair.204" }
%"class.std::__1::__compressed_pair.204" = type { %"struct.std::__1::__compressed_pair_elem.205" }
%"struct.std::__1::__compressed_pair_elem.205" = type { %"class.blink::PersistentRegion"* }
%"class.blink::PersistentRegion" = type { %"class.blink::PersistentRegionBase" }
%"class.blink::PersistentRegionBase" = type { %"class.blink::PersistentNode"*, %"struct.blink::PersistentNodeSlots"* }
%"struct.blink::PersistentNodeSlots" = type { %"struct.blink::PersistentNodeSlots"*, [256 x %"class.blink::PersistentNode"] }
%"class.WTF::Deque" = type { %"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer", i32, i32 }
%"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer" = type { %"class.WTF::VectorBuffer.211" }
%"class.WTF::VectorBuffer.211" = type { %"class.WTF::VectorBufferBase.212" }
%"class.WTF::VectorBufferBase.212" = type { %"struct.std::__1::pair.213"*, i32, i32 }
%"struct.std::__1::pair.213" = type { i8*, i1 (%"class.blink::LivenessBroker"*, i8*)* }
%"class.blink::LivenessBroker" = type { i8 }
%"class.v8::Isolate" = type { i8 }
%"class.v8::EmbedderGraph" = type opaque
%"class.std::__1::unique_ptr.214" = type { %"class.std::__1::__compressed_pair.215" }
%"class.std::__1::__compressed_pair.215" = type { %"struct.std::__1::__compressed_pair_elem.216" }
%"struct.std::__1::__compressed_pair_elem.216" = type { %"class.blink::UnifiedHeapController"* }
%"class.blink::UnifiedHeapController" = type opaque
%"class.std::__1::unique_ptr.220" = type { %"class.std::__1::__compressed_pair.221" }
%"class.std::__1::__compressed_pair.221" = type { %"struct.std::__1::__compressed_pair_elem.222" }
%"struct.std::__1::__compressed_pair_elem.222" = type { %"class.v8::EmbedderRootsHandler"* }
%"class.v8::EmbedderRootsHandler" = type { i32 (...)** }
%"struct.blink::ThreadState::GCData" = type { i32, i32, i32, i32, %"class.std::__1::unique_ptr.226" }
%"class.std::__1::unique_ptr.226" = type { %"class.std::__1::__compressed_pair.227" }
%"class.std::__1::__compressed_pair.227" = type { %"struct.std::__1::__compressed_pair_elem.228" }
%"struct.std::__1::__compressed_pair_elem.228" = type { %"class.blink::MarkingVisitor"* }
%"class.blink::MarkingVisitor" = type { %"class.blink::MarkingVisitorBase", %"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" }
%"class.blink::MarkingVisitorBase" = type { %"class.blink::Visitor", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View", %"class.blink::Worklist<const void *, 16, 4>::View", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View", %"class.blink::Worklist<const void *const *, 256, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::WeakContainersWorklist"*, i64, i32, i32 }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View" = type <{ %"class.blink::Worklist"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View" = type <{ %"class.blink::Worklist.112"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *, 16, 4>::View" = type <{ %"class.blink::Worklist.119"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View" = type <{ %"class.blink::Worklist.126"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *const *, 256, 4>::View" = type <{ %"class.blink::Worklist.133"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View" = type <{ %"class.blink::Worklist.140"*, i32, [4 x i8] }>
%"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" = type { %"class.std::__1::vector.253", i64 }
%"class.std::__1::vector.253" = type { %"class.std::__1::__vector_base.254" }
%"class.std::__1::__vector_base.254" = type { %"class.blink::HeapObjectHeader"**, %"class.blink::HeapObjectHeader"**, %"class.std::__1::__compressed_pair.255" }
%"class.blink::HeapObjectHeader" = type { i32, i16, i16 }
%"class.std::__1::__compressed_pair.255" = type { %"struct.std::__1::__compressed_pair_elem.256" }
%"struct.std::__1::__compressed_pair_elem.256" = type { %"class.blink::HeapObjectHeader"** }
%"class.std::__1::unique_ptr.232" = type { %"class.std::__1::__compressed_pair.233" }
%"class.std::__1::__compressed_pair.233" = type { %"struct.std::__1::__compressed_pair_elem.234" }
%"struct.std::__1::__compressed_pair_elem.234" = type { %"class.blink::ThreadState::IncrementalMarkingScheduler"* }
%"class.blink::ThreadState::IncrementalMarkingScheduler" = type opaque
%"class.std::__1::unique_ptr.238" = type { %"class.std::__1::__compressed_pair.239" }
%"class.std::__1::__compressed_pair.239" = type { %"struct.std::__1::__compressed_pair_elem.240" }
%"struct.std::__1::__compressed_pair_elem.240" = type { %"class.blink::MarkingSchedulingOracle"* }
%"class.blink::MarkingSchedulingOracle" = type opaque
%"class.base::JobHandle" = type { %class.scoped_refptr.244 }
%class.scoped_refptr.244 = type { %"class.base::internal::JobTaskSource"* }
%"class.base::internal::JobTaskSource" = type opaque
%"struct.std::__1::atomic.245" = type { %"struct.std::__1::__atomic_base.246" }
%"struct.std::__1::__atomic_base.246" = type { %"struct.std::__1::__cxx_atomic_impl.247" }
%"struct.std::__1::__cxx_atomic_impl.247" = type { %"struct.std::__1::__cxx_atomic_base_impl.248" }
%"struct.std::__1::__cxx_atomic_base_impl.248" = type { i8 }
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }

$_ZN5blink14SecurityOriginD2Ev = comdat any

@_ZN5blink15FetchParametersC1ENS_15ResourceRequestE13scoped_refptrIKNS_15DOMWrapperWorldEE = hidden unnamed_addr alias void (%"class.blink::FetchParameters"*, %"class.blink::ResourceRequest"*, %"class.blink::DOMWrapperWorld"*), void (%"class.blink::FetchParameters"*, %"class.blink::ResourceRequest"*, %"class.blink::DOMWrapperWorld"*)* @_ZN5blink15FetchParametersC2ENS_15ResourceRequestE13scoped_refptrIKNS_15DOMWrapperWorldEE
@_ZN5blink15FetchParametersC1ENS_15ResourceRequestERKNS_21ResourceLoaderOptionsE = hidden unnamed_addr alias void (%"class.blink::FetchParameters"*, %"class.blink::ResourceRequest"*, %"struct.blink::ResourceLoaderOptions"*), void (%"class.blink::FetchParameters"*, %"class.blink::ResourceRequest"*, %"struct.blink::ResourceLoaderOptions"*)* @_ZN5blink15FetchParametersC2ENS_15ResourceRequestERKNS_21ResourceLoaderOptionsE
@_ZN5blink15FetchParametersC1EOS0_ = hidden unnamed_addr alias void (%"class.blink::FetchParameters"*, %"class.blink::FetchParameters"*), void (%"class.blink::FetchParameters"*, %"class.blink::FetchParameters"*)* @_ZN5blink15FetchParametersC2EOS0_
@_ZN5blink15FetchParametersD1Ev = hidden unnamed_addr alias void (%"class.blink::FetchParameters"*), void (%"class.blink::FetchParameters"*)* @_ZN5blink15FetchParametersD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink15FetchParameters13CreateForTestENS_15ResourceRequestE(%"class.blink::FetchParameters"* noalias sret, %"class.blink::ResourceRequest"*) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.WTF::TextEncoding", align 8
  %4 = alloca %"class.blink::ResourceRequest", align 8
  call void @_ZN5blink15ResourceRequestC1EOS0_(%"class.blink::ResourceRequest"* nonnull %4, %"class.blink::ResourceRequest"* dereferenceable(1032) %1) #6
  %5 = getelementptr inbounds %"class.blink::FetchParameters", %"class.blink::FetchParameters"* %0, i64 0, i32 0
  call void @_ZN5blink15ResourceRequestC1EOS0_(%"class.blink::ResourceRequest"* %5, %"class.blink::ResourceRequest"* nonnull dereferenceable(1032) %4) #6
  %6 = getelementptr inbounds %"class.blink::FetchParameters", %"class.blink::FetchParameters"* %0, i64 0, i32 1
  %7 = bitcast %"class.WTF::TextEncoding"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7) #6
  %8 = getelementptr inbounds %"class.WTF::TextEncoding", %"class.WTF::TextEncoding"* %3, i64 0, i32 0
  store i8* null, i8** %8, align 8
  call void @_ZN5blink26TextResourceDecoderOptionsC1ENS0_11ContentTypeERKN3WTF12TextEncodingE(%"class.blink::TextResourceDecoderOptions"* %6, i32 0, %"class.WTF::TextEncoding"* nonnull dereferenceable(8) %3) #6
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7) #6
  %9 = getelementptr inbounds %"class.blink::FetchParameters", %"class.blink::FetchParameters"* %0, i64 0, i32 2
  call void @_ZN5blink21ResourceLoaderOptionsC1E13scoped_refptrIKNS_15DOMWrapperWorldEE(%"struct.blink::ResourceLoaderOptions"* %9, %"class.blink::DOMWrapperWorld"* null) #6
  %10 = getelementptr inbounds %"class.blink::FetchParameters", %"class.blink::FetchParameters"* %0, i64 0, i32 3
  %11 = getelementptr inbounds %"class.blink::FetchParameters", %"class.blink::FetchParameters"* %0, i64 0, i32 6
  %12 = bitcast i32* %10 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %12, i8 0, i64 13, i1 false) #6
  call void @_ZN5blink22ClientHintsPreferencesC1Ev(%"class.blink::ClientHintsPreferences"* %11) #6
  %13 = getelementptr inbounds %"class.blink::FetchParameters", %"class.blink::FetchParameters"* %0, i64 0, i32 7
  %14 = bitcast i32* %13 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %14, i8 0, i64 11, i1 false) #6
  call void @_ZN5blink15ResourceRequestD1Ev(%"class.blink::ResourceRequest"* nonnull %4) #6
  ret void
}

declare void @_ZN5blink15ResourceRequestC1EOS0_(%"class.blink::ResourceRequest"*, %"class.blink::ResourceRequest"* dereferenceable(1032)) unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN5blink15ResourceRequestD1Ev(%"class.blink::ResourceRequest"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink15FetchParametersC2ENS_15ResourceRequestE13scoped_refptrIKNS_15DOMWrapperWorldEE(%"class.blink::FetchParameters"*, %"class.blink::ResourceRequest"*, %"class.blink::DOMWrapperWorld"*) unnamed_addr #0 align 2 {
  %4 = alloca %"class.WTF::TextEncoding", align 8
  %5 = getelementptr inbounds %"class.blink::FetchParameters", %"class.blink::FetchParameters"* %0, i64 0, i32 0
  tail call void @_ZN5blink15ResourceRequestC1EOS0_(%"class.blink::ResourceRequest"* %5, %"class.blink::ResourceRequest"* dereferenceable(1032) %1) #6
  %6 = getelementptr inbounds %"class.blink::FetchParameters", %"class.blink::FetchParameters"* %0, i64 0, i32 1
  %7 = bitcast %"class.WTF::TextEncoding"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7) #6
  %8 = getelementptr inbounds %"class.WTF::TextEncoding", %"class.WTF::TextEncoding"* %4, i64 0, i32 0
  store i8* null, i8** %8, align 8
  call void @_ZN5blink26TextResourceDecoderOptionsC1ENS0_11ContentTypeERKN3WTF12TextEncodingE(%"class.blink::TextResourceDecoderOptions"* %6, i32 0, %"class.WTF::TextEncoding"* nonnull dereferenceable(8) %4) #6
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7) #6
  %9 = getelementptr inbounds %"class.blink::FetchParameters", %"class.blink::FetchParameters"* %0, i64 0, i32 2
  call void @_ZN5blink21ResourceLoaderOptionsC1E13scoped_refptrIKNS_15DOMWrapperWorldEE(%"struct.blink::ResourceLoaderOptions"* %9, %"class.blink::DOMWrapperWorld"* %2) #6
  %10 = getelementptr inbounds %"class.blink::FetchParameters", %"class.blink::FetchParameters"* %0, i64 0, i32 3
  %11 = getelementptr inbounds %"class.blink::FetchParameters", %"class.blink::FetchParameters"* %0, i64 0, i32 6
  %12 = bitcast i32* %10 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %12, i8 0, i64 13, i1 false)
  call void @_ZN5blink22ClientHintsPreferencesC1Ev(%"class.blink::ClientHintsPreferences"* %11) #6
  %13 = getelementptr inbounds %"class.blink::FetchParameters", %"class.blink::FetchParameters"* %0, i64 0, i32 7
  %14 = bitcast i32* %13 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %14, i8 0, i64 11, i1 false)
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #3

declare void @_ZN5blink26TextResourceDecoderOptionsC1ENS0_11ContentTypeERKN3WTF12TextEncodingE(%"class.blink::TextResourceDecoderOptions"*, i32, %"class.WTF::TextEncoding"* dereferenceable(8)) unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #3

declare void @_ZN5blink21ResourceLoaderOptionsC1E13scoped_refptrIKNS_15DOMWrapperWorldEE(%"struct.blink::ResourceLoaderOptions"*, %"class.blink::DOMWrapperWorld"*) unnamed_addr #1

declare void @_ZN5blink22ClientHintsPreferencesC1Ev(%"class.blink::ClientHintsPreferences"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink15FetchParametersC2ENS_15ResourceRequestERKNS_21ResourceLoaderOptionsE(%"class.blink::FetchParameters"*, %"class.blink::ResourceRequest"*, %"struct.blink::ResourceLoaderOptions"* dereferenceable(112)) unnamed_addr #0 align 2 {
  %4 = alloca %"class.WTF::TextEncoding", align 8
  %5 = getelementptr inbounds %"class.blink::FetchParameters", %"class.blink::FetchParameters"* %0, i64 0, i32 0
  tail call void @_ZN5blink15ResourceRequestC1EOS0_(%"class.blink::ResourceRequest"* %5, %"class.blink::ResourceRequest"* dereferenceable(1032) %1) #6
  %6 = getelementptr inbounds %"class.blink::FetchParameters", %"class.blink::FetchParameters"* %0, i64 0, i32 1
  %7 = bitcast %"class.WTF::TextEncoding"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7) #6
  %8 = getelementptr inbounds %"class.WTF::TextEncoding", %"class.WTF::TextEncoding"* %4, i64 0, i32 0
  store i8* null, i8** %8, align 8
  call void @_ZN5blink26TextResourceDecoderOptionsC1ENS0_11ContentTypeERKN3WTF12TextEncodingE(%"class.blink::TextResourceDecoderOptions"* %6, i32 0, %"class.WTF::TextEncoding"* nonnull dereferenceable(8) %4) #6
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7) #6
  %9 = getelementptr inbounds %"class.blink::FetchParameters", %"class.blink::FetchParameters"* %0, i64 0, i32 2
  call void @_ZN5blink21ResourceLoaderOptionsC1ERKS0_(%"struct.blink::ResourceLoaderOptions"* %9, %"struct.blink::ResourceLoaderOptions"* dereferenceable(112) %2) #6
  %10 = getelementptr inbounds %"class.blink::FetchParameters", %"class.blink::FetchParameters"* %0, i64 0, i32 3
  %11 = getelementptr inbounds %"class.blink::FetchParameters", %"class.blink::FetchParameters"* %0, i64 0, i32 6
  %12 = bitcast i32* %10 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %12, i8 0, i64 13, i1 false)
  call void @_ZN5blink22ClientHintsPreferencesC1Ev(%"class.blink::ClientHintsPreferences"* %11) #6
  %13 = getelementptr inbounds %"class.blink::FetchParameters", %"class.blink::FetchParameters"* %0, i64 0, i32 7
  %14 = bitcast i32* %13 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %14, i8 0, i64 11, i1 false)
  ret void
}

declare void @_ZN5blink21ResourceLoaderOptionsC1ERKS0_(%"struct.blink::ResourceLoaderOptions"*, %"struct.blink::ResourceLoaderOptions"* dereferenceable(112)) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink15FetchParametersC2EOS0_(%"class.blink::FetchParameters"*, %"class.blink::FetchParameters"* dereferenceable(1344)) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::FetchParameters", %"class.blink::FetchParameters"* %0, i64 0, i32 0
  %4 = getelementptr inbounds %"class.blink::FetchParameters", %"class.blink::FetchParameters"* %1, i64 0, i32 0
  tail call void @_ZN5blink15ResourceRequestC1EOS0_(%"class.blink::ResourceRequest"* %3, %"class.blink::ResourceRequest"* dereferenceable(1032) %4) #6
  %5 = getelementptr inbounds %"class.blink::FetchParameters", %"class.blink::FetchParameters"* %0, i64 0, i32 1
  %6 = getelementptr inbounds %"class.blink::FetchParameters", %"class.blink::FetchParameters"* %1, i64 0, i32 1
  %7 = bitcast %"class.blink::TextResourceDecoderOptions"* %5 to i8*
  %8 = bitcast %"class.blink::TextResourceDecoderOptions"* %6 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %7, i8* align 8 %8, i64 32, i1 false) #6
  %9 = getelementptr inbounds %"class.blink::FetchParameters", %"class.blink::FetchParameters"* %0, i64 0, i32 1, i32 7
  %10 = getelementptr inbounds %"class.blink::FetchParameters", %"class.blink::FetchParameters"* %1, i64 0, i32 1, i32 7
  tail call void @_ZN5blink4KURLC1ERKS0_(%"class.blink::KURL"* %9, %"class.blink::KURL"* dereferenceable(112) %10) #6
  %11 = getelementptr inbounds %"class.blink::FetchParameters", %"class.blink::FetchParameters"* %0, i64 0, i32 1, i32 8, i64 0
  %12 = getelementptr inbounds %"class.blink::FetchParameters", %"class.blink::FetchParameters"* %1, i64 0, i32 1, i32 8, i64 0
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %11, i8* align 8 %12, i64 3, i1 false) #6
  %13 = getelementptr inbounds %"class.blink::FetchParameters", %"class.blink::FetchParameters"* %0, i64 0, i32 2
  %14 = getelementptr inbounds %"class.blink::FetchParameters", %"class.blink::FetchParameters"* %1, i64 0, i32 2
  tail call void @_ZN5blink21ResourceLoaderOptionsC1ERKS0_(%"struct.blink::ResourceLoaderOptions"* %13, %"struct.blink::ResourceLoaderOptions"* dereferenceable(112) %14) #6
  %15 = getelementptr inbounds %"class.blink::FetchParameters", %"class.blink::FetchParameters"* %0, i64 0, i32 3
  %16 = getelementptr inbounds %"class.blink::FetchParameters", %"class.blink::FetchParameters"* %1, i64 0, i32 3
  %17 = bitcast i32* %15 to i8*
  %18 = bitcast i32* %16 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %17, i8* align 8 %18, i64 43, i1 false)
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink15FetchParametersD2Ev(%"class.blink::FetchParameters"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::FetchParameters", %"class.blink::FetchParameters"* %0, i64 0, i32 2
  tail call void @_ZN5blink21ResourceLoaderOptionsD1Ev(%"struct.blink::ResourceLoaderOptions"* %2) #6
  %3 = getelementptr inbounds %"class.blink::FetchParameters", %"class.blink::FetchParameters"* %0, i64 0, i32 1, i32 7
  tail call void @_ZN5blink4KURLD1Ev(%"class.blink::KURL"* %3) #6
  %4 = getelementptr inbounds %"class.blink::FetchParameters", %"class.blink::FetchParameters"* %0, i64 0, i32 0
  tail call void @_ZN5blink15ResourceRequestD1Ev(%"class.blink::ResourceRequest"* %4) #6
  ret void
}

; Function Attrs: nounwind
declare void @_ZN5blink21ResourceLoaderOptionsD1Ev(%"struct.blink::ResourceLoaderOptions"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink15FetchParameters27SetCrossOriginAccessControlEPKNS_14SecurityOriginENS_25CrossOriginAttributeValueE(%"class.blink::FetchParameters"*, %"class.blink::SecurityOrigin"*, i32) local_unnamed_addr #0 align 2 {
  %4 = add i32 %2, -1
  %5 = icmp ult i32 %4, 2
  br i1 %5, label %6, label %7

6:                                                ; preds = %3
  tail call void @_ZN5blink15FetchParameters27SetCrossOriginAccessControlEPKNS_14SecurityOriginEN7network5mojom15CredentialsModeE(%"class.blink::FetchParameters"* %0, %"class.blink::SecurityOrigin"* %1, i32 %2)
  br label %7

7:                                                ; preds = %3, %6
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink15FetchParameters27SetCrossOriginAccessControlEPKNS_14SecurityOriginEN7network5mojom15CredentialsModeE(%"class.blink::FetchParameters"*, %"class.blink::SecurityOrigin"*, i32) local_unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.blink::FetchParameters", %"class.blink::FetchParameters"* %0, i64 0, i32 0, i32 0
  %5 = getelementptr inbounds %"class.blink::FetchParameters", %"class.blink::FetchParameters"* %0, i64 0, i32 0, i32 0, i32 17
  store i32 2, i32* %5, align 8
  %6 = getelementptr inbounds %"class.blink::FetchParameters", %"class.blink::FetchParameters"* %0, i64 0, i32 0, i32 0, i32 19
  store i32 %2, i32* %6, align 8
  %7 = icmp eq %"class.blink::SecurityOrigin"* %1, null
  br i1 %7, label %10, label %8

8:                                                ; preds = %3
  %9 = getelementptr inbounds %"class.blink::SecurityOrigin", %"class.blink::SecurityOrigin"* %1, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %9) #6
  br label %10

10:                                               ; preds = %3, %8
  %11 = ptrtoint %"class.blink::SecurityOrigin"* %1 to i64
  %12 = getelementptr inbounds %"class.blink::FetchParameters", %"class.blink::FetchParameters"* %0, i64 0, i32 0, i32 0, i32 4
  %13 = bitcast %class.scoped_refptr.6* %12 to i64*
  %14 = getelementptr inbounds %class.scoped_refptr.6, %class.scoped_refptr.6* %12, i64 0, i32 0
  %15 = load %"class.blink::SecurityOrigin"*, %"class.blink::SecurityOrigin"** %14, align 8
  store i64 %11, i64* %13, align 8
  %16 = icmp eq %"class.blink::SecurityOrigin"* %15, null
  br i1 %16, label %24, label %17

17:                                               ; preds = %10
  %18 = getelementptr inbounds %"class.blink::SecurityOrigin", %"class.blink::SecurityOrigin"* %15, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %18) #6
  %19 = getelementptr inbounds %"class.blink::SecurityOrigin", %"class.blink::SecurityOrigin"* %15, i64 0, i32 0, i32 0, i32 0, i32 0
  %20 = load i32, i32* %19, align 4
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %22, label %24

22:                                               ; preds = %17
  tail call void @_ZN5blink14SecurityOriginD2Ev(%"class.blink::SecurityOrigin"* nonnull %15) #6
  %23 = bitcast %"class.blink::SecurityOrigin"* %15 to i8*
  tail call void @free(i8* %23) #6
  br label %24

24:                                               ; preds = %10, %17, %22
  tail call void @_ZN5blink19ResourceRequestHead24RemoveUserAndPassFromURLEv(%"class.blink::ResourceRequestHead"* %4) #6
  br i1 %7, label %26, label %25

25:                                               ; preds = %24
  tail call void @_ZN5blink19ResourceRequestHead13SetHTTPOriginEPKNS_14SecurityOriginE(%"class.blink::ResourceRequestHead"* %4, %"class.blink::SecurityOrigin"* nonnull %1) #6
  br label %26

26:                                               ; preds = %24, %25
  ret void
}

declare void @_ZN5blink19ResourceRequestHead24RemoveUserAndPassFromURLEv(%"class.blink::ResourceRequestHead"*) local_unnamed_addr #1

declare void @_ZN5blink19ResourceRequestHead13SetHTTPOriginEPKNS_14SecurityOriginE(%"class.blink::ResourceRequestHead"*, %"class.blink::SecurityOrigin"*) local_unnamed_addr #1

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN5blink15FetchParameters16SetResourceWidthENS0_13ResourceWidthE(%"class.blink::FetchParameters"* nocapture, i64) local_unnamed_addr #4 align 2 {
  %3 = and i64 %1, 4294967296
  %4 = icmp eq i64 %3, 0
  br i1 %4, label %10, label %5

5:                                                ; preds = %2
  %6 = trunc i64 %1 to i32
  %7 = getelementptr inbounds %"class.blink::FetchParameters", %"class.blink::FetchParameters"* %0, i64 0, i32 5
  %8 = bitcast %"struct.blink::FetchParameters::ResourceWidth"* %7 to i32*
  store i32 %6, i32* %8, align 8
  %9 = getelementptr inbounds %"class.blink::FetchParameters", %"class.blink::FetchParameters"* %0, i64 0, i32 5, i32 1
  store i8 1, i8* %9, align 4
  br label %10

10:                                               ; preds = %2, %5
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN5blink15FetchParameters25SetSpeculativePreloadTypeENS0_22SpeculativePreloadTypeE(%"class.blink::FetchParameters"* nocapture, i32) local_unnamed_addr #4 align 2 {
  %3 = getelementptr inbounds %"class.blink::FetchParameters", %"class.blink::FetchParameters"* %0, i64 0, i32 3
  store i32 %1, i32* %3, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink15FetchParameters15MakeSynchronousEv(%"class.blink::FetchParameters"*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::FetchParameters", %"class.blink::FetchParameters"* %0, i64 0, i32 0, i32 0
  tail call void @_ZN5blink19ResourceRequestHead11SetPriorityENS_13WebURLRequest8PriorityEi(%"class.blink::ResourceRequestHead"* %2, i32 4, i32 0) #6
  %3 = tail call zeroext i1 @_ZN3WTF12IsMainThreadEv() #6
  br i1 %3, label %4, label %8

4:                                                ; preds = %1
  %5 = getelementptr inbounds %"class.blink::FetchParameters", %"class.blink::FetchParameters"* %0, i64 0, i32 0, i32 0, i32 10
  %6 = load i8, i8* %5, align 8
  %7 = or i8 %6, 1
  store i8 %7, i8* %5, align 8
  br label %8

8:                                                ; preds = %4, %1
  %9 = getelementptr inbounds %"class.blink::FetchParameters", %"class.blink::FetchParameters"* %0, i64 0, i32 2, i32 4
  store i8 0, i8* %9, align 1
  ret void
}

declare void @_ZN5blink19ResourceRequestHead11SetPriorityENS_13WebURLRequest8PriorityEi(%"class.blink::ResourceRequestHead"*, i32, i32) local_unnamed_addr #1

declare zeroext i1 @_ZN3WTF12IsMainThreadEv() local_unnamed_addr #1

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN5blink15FetchParameters20SetLazyImageDeferredEv(%"class.blink::FetchParameters"* nocapture) local_unnamed_addr #4 align 2 {
  %2 = getelementptr inbounds %"class.blink::FetchParameters", %"class.blink::FetchParameters"* %0, i64 0, i32 7
  store i32 1, i32* %2, align 8
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN5blink15FetchParameters23SetLazyImageNonBlockingEv(%"class.blink::FetchParameters"* nocapture) local_unnamed_addr #4 align 2 {
  %2 = getelementptr inbounds %"class.blink::FetchParameters", %"class.blink::FetchParameters"* %0, i64 0, i32 7
  store i32 2, i32* %2, align 8
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN5blink15FetchParameters15SetModuleScriptEv(%"class.blink::FetchParameters"* nocapture) local_unnamed_addr #4 align 2 {
  %2 = getelementptr inbounds %"class.blink::FetchParameters", %"class.blink::FetchParameters"* %0, i64 0, i32 8
  store i32 1, i32* %2, align 4
  ret void
}

declare void @_ZN5blink4KURLC1ERKS0_(%"class.blink::KURL"*, %"class.blink::KURL"* dereferenceable(112)) unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN5blink4KURLD1Ev(%"class.blink::KURL"*) unnamed_addr #2

declare void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"*) local_unnamed_addr #1

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink14SecurityOriginD2Ev(%"class.blink::SecurityOrigin"*) unnamed_addr #5 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::SecurityOrigin", %"class.blink::SecurityOrigin"* %0, i64 0, i32 13, i32 0
  %3 = load %"class.blink::SecurityOrigin"*, %"class.blink::SecurityOrigin"** %2, align 8
  %4 = icmp eq %"class.blink::SecurityOrigin"* %3, null
  br i1 %4, label %12, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.blink::SecurityOrigin", %"class.blink::SecurityOrigin"* %3, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %6) #6
  %7 = getelementptr inbounds %"class.blink::SecurityOrigin", %"class.blink::SecurityOrigin"* %3, i64 0, i32 0, i32 0, i32 0, i32 0
  %8 = load i32, i32* %7, align 4
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %10, label %12

10:                                               ; preds = %5
  tail call void @_ZN5blink14SecurityOriginD2Ev(%"class.blink::SecurityOrigin"* nonnull %3) #6
  %11 = bitcast %"class.blink::SecurityOrigin"* %3 to i8*
  tail call void @free(i8* %11) #6
  br label %12

12:                                               ; preds = %5, %10, %1
  %13 = getelementptr inbounds %"class.blink::SecurityOrigin", %"class.blink::SecurityOrigin"* %0, i64 0, i32 3, i32 0, i32 0
  %14 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %13, align 8
  %15 = icmp eq %"class.WTF::StringImpl"* %14, null
  br i1 %15, label %29, label %16

16:                                               ; preds = %12
  %17 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %14, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %18 = load atomic i32, i32* %17 monotonic, align 4
  %19 = and i32 %18, 2
  %20 = icmp eq i32 %19, 0
  %21 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %14, i64 0, i32 0
  %22 = load i32, i32* %21, align 4
  br i1 %20, label %23, label %25

23:                                               ; preds = %16
  %24 = add i32 %22, -1
  store i32 %24, i32* %21, align 4
  br label %25

25:                                               ; preds = %23, %16
  %26 = phi i32 [ %24, %23 ], [ %22, %16 ]
  %27 = icmp eq i32 %26, 0
  br i1 %27, label %28, label %29

28:                                               ; preds = %25
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %14) #6
  br label %29

29:                                               ; preds = %12, %25, %28
  %30 = getelementptr inbounds %"class.blink::SecurityOrigin", %"class.blink::SecurityOrigin"* %0, i64 0, i32 2, i32 0, i32 0
  %31 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %30, align 8
  %32 = icmp eq %"class.WTF::StringImpl"* %31, null
  br i1 %32, label %46, label %33

33:                                               ; preds = %29
  %34 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %31, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %35 = load atomic i32, i32* %34 monotonic, align 4
  %36 = and i32 %35, 2
  %37 = icmp eq i32 %36, 0
  %38 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %31, i64 0, i32 0
  %39 = load i32, i32* %38, align 4
  br i1 %37, label %40, label %42

40:                                               ; preds = %33
  %41 = add i32 %39, -1
  store i32 %41, i32* %38, align 4
  br label %42

42:                                               ; preds = %40, %33
  %43 = phi i32 [ %41, %40 ], [ %39, %33 ]
  %44 = icmp eq i32 %43, 0
  br i1 %44, label %45, label %46

45:                                               ; preds = %42
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %31) #6
  br label %46

46:                                               ; preds = %29, %42, %45
  %47 = getelementptr inbounds %"class.blink::SecurityOrigin", %"class.blink::SecurityOrigin"* %0, i64 0, i32 1, i32 0, i32 0
  %48 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %47, align 8
  %49 = icmp eq %"class.WTF::StringImpl"* %48, null
  br i1 %49, label %63, label %50

50:                                               ; preds = %46
  %51 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %48, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %52 = load atomic i32, i32* %51 monotonic, align 4
  %53 = and i32 %52, 2
  %54 = icmp eq i32 %53, 0
  %55 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %48, i64 0, i32 0
  %56 = load i32, i32* %55, align 4
  br i1 %54, label %57, label %59

57:                                               ; preds = %50
  %58 = add i32 %56, -1
  store i32 %58, i32* %55, align 4
  br label %59

59:                                               ; preds = %57, %50
  %60 = phi i32 [ %58, %57 ], [ %56, %50 ]
  %61 = icmp eq i32 %60, 0
  br i1 %61, label %62, label %63

62:                                               ; preds = %59
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %48) #6
  br label %63

63:                                               ; preds = %46, %59, %62
  ret void
}

declare void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @free(i8* nocapture) local_unnamed_addr #2

declare void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"*) local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #3

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { argmemonly nounwind }
attributes #4 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
