; ModuleID = '../../third_party/boringssl/src/crypto/x509/x_algor.c'
source_filename = "../../third_party/boringssl/src/crypto/x509/x_algor.c"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.ASN1_TEMPLATE_st = type { i64, i64, i64, i8*, %struct.ASN1_ITEM_st* }
%struct.ASN1_ITEM_st = type { i8, i64, %struct.ASN1_TEMPLATE_st*, i64, i8*, i64, i8* }
%struct.X509_algor_st = type { %struct.asn1_object_st*, %struct.asn1_type_st* }
%struct.asn1_object_st = type { i8*, i8*, i32, i32, i8*, i32 }
%struct.asn1_type_st = type { i32, %union.anon }
%union.anon = type { i8* }
%struct.ASN1_VALUE_st = type opaque
%struct.stack_st_X509_ALGOR = type opaque
%struct.env_md_st = type opaque

@X509_ALGOR_seq_tt = internal constant [2 x %struct.ASN1_TEMPLATE_st] [%struct.ASN1_TEMPLATE_st { i64 0, i64 0, i64 0, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.2, i32 0, i32 0), %struct.ASN1_ITEM_st* @ASN1_OBJECT_it }, %struct.ASN1_TEMPLATE_st { i64 1, i64 0, i64 8, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.3, i32 0, i32 0), %struct.ASN1_ITEM_st* @ASN1_ANY_it }], align 16
@.str = private unnamed_addr constant [11 x i8] c"X509_ALGOR\00", align 1
@X509_ALGOR_it = hidden constant %struct.ASN1_ITEM_st { i8 1, i64 16, %struct.ASN1_TEMPLATE_st* getelementptr inbounds ([2 x %struct.ASN1_TEMPLATE_st], [2 x %struct.ASN1_TEMPLATE_st]* @X509_ALGOR_seq_tt, i32 0, i32 0), i64 2, i8* null, i64 16, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str, i32 0, i32 0) }, align 8
@X509_ALGORS_item_tt = internal constant %struct.ASN1_TEMPLATE_st { i64 4, i64 0, i64 0, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.4, i32 0, i32 0), %struct.ASN1_ITEM_st* @X509_ALGOR_it }, align 8
@.str.1 = private unnamed_addr constant [12 x i8] c"X509_ALGORS\00", align 1
@X509_ALGORS_it = hidden constant %struct.ASN1_ITEM_st { i8 0, i64 -1, %struct.ASN1_TEMPLATE_st* @X509_ALGORS_item_tt, i64 0, i8* null, i64 0, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.1, i32 0, i32 0) }, align 8
@.str.2 = private unnamed_addr constant [10 x i8] c"algorithm\00", align 1
@ASN1_OBJECT_it = external constant %struct.ASN1_ITEM_st, align 8
@.str.3 = private unnamed_addr constant [10 x i8] c"parameter\00", align 1
@ASN1_ANY_it = external constant %struct.ASN1_ITEM_st, align 8
@.str.4 = private unnamed_addr constant [11 x i8] c"algorithms\00", align 1

; Function Attrs: nounwind ssp uwtable
define hidden %struct.X509_algor_st* @d2i_X509_ALGOR(%struct.X509_algor_st**, i8**, i64) local_unnamed_addr #0 {
  %4 = bitcast %struct.X509_algor_st** %0 to %struct.ASN1_VALUE_st**
  %5 = tail call %struct.ASN1_VALUE_st* @ASN1_item_d2i(%struct.ASN1_VALUE_st** %4, i8** %1, i64 %2, %struct.ASN1_ITEM_st* nonnull @X509_ALGOR_it) #2
  %6 = bitcast %struct.ASN1_VALUE_st* %5 to %struct.X509_algor_st*
  ret %struct.X509_algor_st* %6
}

declare %struct.ASN1_VALUE_st* @ASN1_item_d2i(%struct.ASN1_VALUE_st**, i8**, i64, %struct.ASN1_ITEM_st*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden i32 @i2d_X509_ALGOR(%struct.X509_algor_st*, i8**) local_unnamed_addr #0 {
  %3 = bitcast %struct.X509_algor_st* %0 to %struct.ASN1_VALUE_st*
  %4 = tail call i32 @ASN1_item_i2d(%struct.ASN1_VALUE_st* %3, i8** %1, %struct.ASN1_ITEM_st* nonnull @X509_ALGOR_it) #2
  ret i32 %4
}

declare i32 @ASN1_item_i2d(%struct.ASN1_VALUE_st*, i8**, %struct.ASN1_ITEM_st*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden %struct.X509_algor_st* @X509_ALGOR_new() local_unnamed_addr #0 {
  %1 = tail call %struct.ASN1_VALUE_st* @ASN1_item_new(%struct.ASN1_ITEM_st* nonnull @X509_ALGOR_it) #2
  %2 = bitcast %struct.ASN1_VALUE_st* %1 to %struct.X509_algor_st*
  ret %struct.X509_algor_st* %2
}

declare %struct.ASN1_VALUE_st* @ASN1_item_new(%struct.ASN1_ITEM_st*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @X509_ALGOR_free(%struct.X509_algor_st*) local_unnamed_addr #0 {
  %2 = bitcast %struct.X509_algor_st* %0 to %struct.ASN1_VALUE_st*
  tail call void @ASN1_item_free(%struct.ASN1_VALUE_st* %2, %struct.ASN1_ITEM_st* nonnull @X509_ALGOR_it) #2
  ret void
}

declare void @ASN1_item_free(%struct.ASN1_VALUE_st*, %struct.ASN1_ITEM_st*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden %struct.stack_st_X509_ALGOR* @d2i_X509_ALGORS(%struct.stack_st_X509_ALGOR**, i8**, i64) local_unnamed_addr #0 {
  %4 = bitcast %struct.stack_st_X509_ALGOR** %0 to %struct.ASN1_VALUE_st**
  %5 = tail call %struct.ASN1_VALUE_st* @ASN1_item_d2i(%struct.ASN1_VALUE_st** %4, i8** %1, i64 %2, %struct.ASN1_ITEM_st* nonnull @X509_ALGORS_it) #2
  %6 = bitcast %struct.ASN1_VALUE_st* %5 to %struct.stack_st_X509_ALGOR*
  ret %struct.stack_st_X509_ALGOR* %6
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @i2d_X509_ALGORS(%struct.stack_st_X509_ALGOR*, i8**) local_unnamed_addr #0 {
  %3 = bitcast %struct.stack_st_X509_ALGOR* %0 to %struct.ASN1_VALUE_st*
  %4 = tail call i32 @ASN1_item_i2d(%struct.ASN1_VALUE_st* %3, i8** %1, %struct.ASN1_ITEM_st* nonnull @X509_ALGORS_it) #2
  ret i32 %4
}

; Function Attrs: nounwind ssp uwtable
define hidden %struct.X509_algor_st* @X509_ALGOR_dup(%struct.X509_algor_st*) local_unnamed_addr #0 {
  %2 = bitcast %struct.X509_algor_st* %0 to i8*
  %3 = tail call i8* @ASN1_item_dup(%struct.ASN1_ITEM_st* nonnull @X509_ALGOR_it, i8* %2) #2
  %4 = bitcast i8* %3 to %struct.X509_algor_st*
  ret %struct.X509_algor_st* %4
}

declare i8* @ASN1_item_dup(%struct.ASN1_ITEM_st*, i8*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden i32 @X509_ALGOR_set0(%struct.X509_algor_st*, %struct.asn1_object_st*, i32, i8*) local_unnamed_addr #0 {
  %5 = icmp eq %struct.X509_algor_st* %0, null
  br i1 %5, label %26, label %6

6:                                                ; preds = %4
  %7 = icmp eq i32 %2, -1
  br i1 %7, label %15, label %8

8:                                                ; preds = %6
  %9 = getelementptr inbounds %struct.X509_algor_st, %struct.X509_algor_st* %0, i64 0, i32 1
  %10 = load %struct.asn1_type_st*, %struct.asn1_type_st** %9, align 8
  %11 = icmp eq %struct.asn1_type_st* %10, null
  br i1 %11, label %12, label %15

12:                                               ; preds = %8
  %13 = tail call %struct.asn1_type_st* @ASN1_TYPE_new() #2
  store %struct.asn1_type_st* %13, %struct.asn1_type_st** %9, align 8
  %14 = icmp eq %struct.asn1_type_st* %13, null
  br i1 %14, label %26, label %15

15:                                               ; preds = %8, %12, %6
  %16 = getelementptr inbounds %struct.X509_algor_st, %struct.X509_algor_st* %0, i64 0, i32 0
  %17 = load %struct.asn1_object_st*, %struct.asn1_object_st** %16, align 8
  tail call void @ASN1_OBJECT_free(%struct.asn1_object_st* %17) #2
  store %struct.asn1_object_st* %1, %struct.asn1_object_st** %16, align 8
  %18 = icmp eq i32 %2, 0
  br i1 %18, label %26, label %19

19:                                               ; preds = %15
  %20 = getelementptr inbounds %struct.X509_algor_st, %struct.X509_algor_st* %0, i64 0, i32 1
  %21 = load %struct.asn1_type_st*, %struct.asn1_type_st** %20, align 8
  br i1 %7, label %22, label %25

22:                                               ; preds = %19
  %23 = icmp eq %struct.asn1_type_st* %21, null
  br i1 %23, label %26, label %24

24:                                               ; preds = %22
  tail call void @ASN1_TYPE_free(%struct.asn1_type_st* nonnull %21) #2
  store %struct.asn1_type_st* null, %struct.asn1_type_st** %20, align 8
  br label %26

25:                                               ; preds = %19
  tail call void @ASN1_TYPE_set(%struct.asn1_type_st* %21, i32 %2, i8* %3) #2
  br label %26

26:                                               ; preds = %25, %24, %22, %15, %12, %4
  %27 = phi i32 [ 0, %4 ], [ 0, %12 ], [ 1, %15 ], [ 1, %22 ], [ 1, %24 ], [ 1, %25 ]
  ret i32 %27
}

declare %struct.asn1_type_st* @ASN1_TYPE_new() local_unnamed_addr #1

declare void @ASN1_OBJECT_free(%struct.asn1_object_st*) local_unnamed_addr #1

declare void @ASN1_TYPE_free(%struct.asn1_type_st*) local_unnamed_addr #1

declare void @ASN1_TYPE_set(%struct.asn1_type_st*, i32, i8*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @X509_ALGOR_get0(%struct.asn1_object_st**, i32*, i8**, %struct.X509_algor_st* nocapture readonly) local_unnamed_addr #0 {
  %5 = icmp eq %struct.asn1_object_st** %0, null
  br i1 %5, label %10, label %6

6:                                                ; preds = %4
  %7 = bitcast %struct.X509_algor_st* %3 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = bitcast %struct.asn1_object_st** %0 to i64*
  store i64 %8, i64* %9, align 8
  br label %10

10:                                               ; preds = %4, %6
  %11 = icmp eq i32* %1, null
  br i1 %11, label %25, label %12

12:                                               ; preds = %10
  %13 = getelementptr inbounds %struct.X509_algor_st, %struct.X509_algor_st* %3, i64 0, i32 1
  %14 = load %struct.asn1_type_st*, %struct.asn1_type_st** %13, align 8
  %15 = icmp eq %struct.asn1_type_st* %14, null
  br i1 %15, label %20, label %16

16:                                               ; preds = %12
  %17 = getelementptr inbounds %struct.asn1_type_st, %struct.asn1_type_st* %14, i64 0, i32 0
  %18 = load i32, i32* %17, align 8
  %19 = tail call i8* @asn1_type_value_as_pointer(%struct.asn1_type_st* nonnull %14) #2
  br label %20

20:                                               ; preds = %12, %16
  %21 = phi i32 [ %18, %16 ], [ -1, %12 ]
  %22 = phi i8* [ %19, %16 ], [ null, %12 ]
  store i32 %21, i32* %1, align 4
  %23 = icmp eq i8** %2, null
  br i1 %23, label %25, label %24

24:                                               ; preds = %20
  store i8* %22, i8** %2, align 8
  br label %25

25:                                               ; preds = %24, %20, %10
  ret void
}

declare i8* @asn1_type_value_as_pointer(%struct.asn1_type_st*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @X509_ALGOR_set_md(%struct.X509_algor_st*, %struct.env_md_st*) local_unnamed_addr #0 {
  %3 = tail call i32 @EVP_MD_flags(%struct.env_md_st* %1) #2
  %4 = and i32 %3, 2
  %5 = icmp eq i32 %4, 0
  %6 = select i1 %5, i32 5, i32 -1
  %7 = tail call i32 @EVP_MD_type(%struct.env_md_st* %1) #2
  %8 = tail call %struct.asn1_object_st* @OBJ_nid2obj(i32 %7) #2
  %9 = icmp eq %struct.X509_algor_st* %0, null
  br i1 %9, label %27, label %10

10:                                               ; preds = %2
  br i1 %5, label %11, label %18

11:                                               ; preds = %10
  %12 = getelementptr inbounds %struct.X509_algor_st, %struct.X509_algor_st* %0, i64 0, i32 1
  %13 = load %struct.asn1_type_st*, %struct.asn1_type_st** %12, align 8
  %14 = icmp eq %struct.asn1_type_st* %13, null
  br i1 %14, label %15, label %18

15:                                               ; preds = %11
  %16 = tail call %struct.asn1_type_st* @ASN1_TYPE_new() #2
  store %struct.asn1_type_st* %16, %struct.asn1_type_st** %12, align 8
  %17 = icmp eq %struct.asn1_type_st* %16, null
  br i1 %17, label %27, label %18

18:                                               ; preds = %10, %15, %11
  %19 = getelementptr inbounds %struct.X509_algor_st, %struct.X509_algor_st* %0, i64 0, i32 0
  %20 = load %struct.asn1_object_st*, %struct.asn1_object_st** %19, align 8
  tail call void @ASN1_OBJECT_free(%struct.asn1_object_st* %20) #2
  store %struct.asn1_object_st* %8, %struct.asn1_object_st** %19, align 8
  %21 = getelementptr inbounds %struct.X509_algor_st, %struct.X509_algor_st* %0, i64 0, i32 1
  %22 = load %struct.asn1_type_st*, %struct.asn1_type_st** %21, align 8
  br i1 %5, label %26, label %23

23:                                               ; preds = %18
  %24 = icmp eq %struct.asn1_type_st* %22, null
  br i1 %24, label %27, label %25

25:                                               ; preds = %23
  tail call void @ASN1_TYPE_free(%struct.asn1_type_st* nonnull %22) #2
  store %struct.asn1_type_st* null, %struct.asn1_type_st** %21, align 8
  br label %27

26:                                               ; preds = %18
  tail call void @ASN1_TYPE_set(%struct.asn1_type_st* %22, i32 %6, i8* null) #2
  br label %27

27:                                               ; preds = %2, %15, %23, %25, %26
  ret void
}

declare i32 @EVP_MD_flags(%struct.env_md_st*) local_unnamed_addr #1

declare %struct.asn1_object_st* @OBJ_nid2obj(i32) local_unnamed_addr #1

declare i32 @EVP_MD_type(%struct.env_md_st*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden i32 @X509_ALGOR_cmp(%struct.X509_algor_st* nocapture readonly, %struct.X509_algor_st* nocapture readonly) local_unnamed_addr #0 {
  %3 = getelementptr inbounds %struct.X509_algor_st, %struct.X509_algor_st* %0, i64 0, i32 0
  %4 = load %struct.asn1_object_st*, %struct.asn1_object_st** %3, align 8
  %5 = getelementptr inbounds %struct.X509_algor_st, %struct.X509_algor_st* %1, i64 0, i32 0
  %6 = load %struct.asn1_object_st*, %struct.asn1_object_st** %5, align 8
  %7 = tail call i32 @OBJ_cmp(%struct.asn1_object_st* %4, %struct.asn1_object_st* %6) #2
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %9, label %19

9:                                                ; preds = %2
  %10 = getelementptr inbounds %struct.X509_algor_st, %struct.X509_algor_st* %0, i64 0, i32 1
  %11 = load %struct.asn1_type_st*, %struct.asn1_type_st** %10, align 8
  %12 = icmp eq %struct.asn1_type_st* %11, null
  %13 = getelementptr inbounds %struct.X509_algor_st, %struct.X509_algor_st* %1, i64 0, i32 1
  %14 = load %struct.asn1_type_st*, %struct.asn1_type_st** %13, align 8
  %15 = icmp eq %struct.asn1_type_st* %14, null
  %16 = and i1 %12, %15
  br i1 %16, label %19, label %17

17:                                               ; preds = %9
  %18 = tail call i32 @ASN1_TYPE_cmp(%struct.asn1_type_st* %11, %struct.asn1_type_st* %14) #2
  br label %19

19:                                               ; preds = %9, %2, %17
  %20 = phi i32 [ %18, %17 ], [ %7, %2 ], [ 0, %9 ]
  ret i32 %20
}

declare i32 @OBJ_cmp(%struct.asn1_object_st*, %struct.asn1_object_st*) local_unnamed_addr #1

declare i32 @ASN1_TYPE_cmp(%struct.asn1_type_st*, %struct.asn1_type_st*) local_unnamed_addr #1

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
