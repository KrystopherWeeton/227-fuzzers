; ModuleID = '../../third_party/blink/renderer/modules/peerconnection/thermal_resource.cc'
source_filename = "../../third_party/blink/renderer/modules/peerconnection/thermal_resource.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"struct.base::Feature" = type { i8*, i32 }
%"class.blink::ThermalResource" = type { %"class.webrtc::Resource", %class.scoped_refptr.0, %"class.base::Lock", %"class.webrtc::ResourceListener"*, i32, i64 }
%"class.webrtc::Resource" = type { %"class.rtc::RefCountInterface" }
%"class.rtc::RefCountInterface" = type { i32 (...)** }
%class.scoped_refptr.0 = type { %"class.base::SequencedTaskRunner"* }
%"class.base::Lock" = type { %"class.base::internal::LockImpl" }
%"class.base::internal::LockImpl" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"class.webrtc::ResourceListener" = type { i32 (...)** }
%"class.base::SequencedTaskRunner" = type { %"class.base::TaskRunner.base", [4 x i8] }
%"class.base::TaskRunner.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe" }>
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.1" }
%"struct.std::__1::__atomic_base.1" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.rtc::scoped_refptr" = type { %"class.webrtc::Resource"* }
%"class.base::Location" = type { i8*, i8*, i32, i8* }
%"class.base::OnceCallback" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr.3 }
%class.scoped_refptr.3 = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe.4", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe.4" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::TaskRunner" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe", [4 x i8] }>
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }
%"class.rtc::RefCountedObject" = type <{ %"class.blink::ThermalResource", %"class.webrtc::webrtc_impl::RefCounter", [4 x i8] }>
%"class.webrtc::webrtc_impl::RefCounter" = type { %"struct.std::__1::atomic" }

$_ZN5blink15ThermalResourceD0Ev = comdat any

$_ZNK3rtc16RefCountedObjectIN5blink15ThermalResourceEE6AddRefEv = comdat any

$_ZNK3rtc16RefCountedObjectIN5blink15ThermalResourceEE7ReleaseEv = comdat any

$_ZN5blink15ThermalResourceD2Ev = comdat any

$_ZN3rtc16RefCountedObjectIN5blink15ThermalResourceEED0Ev = comdat any

$_ZNK3rtc16RefCountedObjectIN5blink15ThermalResourceEE9HasOneRefEv = comdat any

$_ZN4base8internal7InvokerINS0_9BindStateIMN5blink15ThermalResourceEFvmEJ13scoped_refptrIS4_EmEEEFvvEE7RunOnceEPNS0_13BindStateBaseE = comdat any

$_ZN4base8internal9BindStateIMN5blink15ThermalResourceEFvmEJ13scoped_refptrIS3_EmEE7DestroyEPKNS0_13BindStateBaseE = comdat any

$_ZTVN3rtc16RefCountedObjectIN5blink15ThermalResourceEEE = comdat any

@.str = private unnamed_addr constant [22 x i8] c"WebRtcThermalResource\00", align 1
@_ZN5blink22kWebRtcThermalResourceE = hidden local_unnamed_addr constant %"struct.base::Feature" { i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str, i32 0, i32 0), i32 0 }, align 8
@_ZTVN5blink15ThermalResourceE = hidden unnamed_addr constant { [8 x i8*] } { [8 x i8*] [i8* null, i8* null, i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void (%"class.blink::ThermalResource"*)* @_ZN5blink15ThermalResourceD2Ev to i8*), i8* bitcast (void (%"class.blink::ThermalResource"*)* @_ZN5blink15ThermalResourceD0Ev to i8*), i8* bitcast (void (%"class.std::__1::basic_string"*, %"class.blink::ThermalResource"*)* @_ZNK5blink15ThermalResource4NameEv to i8*), i8* bitcast (void (%"class.blink::ThermalResource"*, %"class.webrtc::ResourceListener"*)* @_ZN5blink15ThermalResource19SetResourceListenerEPN6webrtc16ResourceListenerE to i8*)] }, align 8
@.str.1 = private unnamed_addr constant [16 x i8] c"ThermalResource\00", align 1
@.str.2 = private unnamed_addr constant [34 x i8] c"ReportMeasurementWhileHoldingLock\00", align 1
@.str.3 = private unnamed_addr constant [76 x i8] c"../../third_party/blink/renderer/modules/peerconnection/thermal_resource.cc\00", align 1
@_ZTVN3rtc16RefCountedObjectIN5blink15ThermalResourceEEE = linkonce_odr hidden unnamed_addr constant { [9 x i8*] } { [9 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.rtc::RefCountedObject"*)* @_ZNK3rtc16RefCountedObjectIN5blink15ThermalResourceEE6AddRefEv to i8*), i8* bitcast (i32 (%"class.rtc::RefCountedObject"*)* @_ZNK3rtc16RefCountedObjectIN5blink15ThermalResourceEE7ReleaseEv to i8*), i8* bitcast (void (%"class.blink::ThermalResource"*)* @_ZN5blink15ThermalResourceD2Ev to i8*), i8* bitcast (void (%"class.rtc::RefCountedObject"*)* @_ZN3rtc16RefCountedObjectIN5blink15ThermalResourceEED0Ev to i8*), i8* bitcast (void (%"class.std::__1::basic_string"*, %"class.blink::ThermalResource"*)* @_ZNK5blink15ThermalResource4NameEv to i8*), i8* bitcast (void (%"class.blink::ThermalResource"*, %"class.webrtc::ResourceListener"*)* @_ZN5blink15ThermalResource19SetResourceListenerEPN6webrtc16ResourceListenerE to i8*), i8* bitcast (i1 (%"class.rtc::RefCountedObject"*)* @_ZNK3rtc16RefCountedObjectIN5blink15ThermalResourceEE9HasOneRefEv to i8*)] }, comdat, align 8

; Function Attrs: nounwind ssp uwtable
define hidden nonnull %"class.blink::ThermalResource"* @_ZN5blink15ThermalResource6CreateE13scoped_refptrIN4base19SequencedTaskRunnerEE(%"class.base::SequencedTaskRunner"*) local_unnamed_addr #0 align 2 {
  %2 = ptrtoint %"class.base::SequencedTaskRunner"* %0 to i64
  %3 = tail call i8* @_Znwm(i64 88) #7
  %4 = bitcast i8* %3 to %"class.webrtc::Resource"*
  tail call void @_ZN6webrtc8ResourceC2Ev(%"class.webrtc::Resource"* nonnull %4) #8
  %5 = bitcast i8* %3 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [8 x i8*] }, { [8 x i8*] }* @_ZTVN5blink15ThermalResourceE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %5, align 8
  %6 = getelementptr inbounds i8, i8* %3, i64 8
  %7 = bitcast i8* %6 to i64*
  store i64 %2, i64* %7, align 8
  %8 = getelementptr inbounds i8, i8* %3, i64 16
  %9 = bitcast i8* %8 to %"class.base::internal::LockImpl"*
  tail call void @_ZN4base8internal8LockImplC1Ev(%"class.base::internal::LockImpl"* %9) #8
  %10 = getelementptr inbounds i8, i8* %3, i64 56
  %11 = bitcast i8* %10 to %"class.webrtc::ResourceListener"**
  store %"class.webrtc::ResourceListener"* null, %"class.webrtc::ResourceListener"** %11, align 8
  %12 = getelementptr inbounds i8, i8* %3, i64 64
  %13 = bitcast i8* %12 to i32*
  store i32 0, i32* %13, align 8
  %14 = getelementptr inbounds i8, i8* %3, i64 72
  %15 = bitcast i8* %14 to i64*
  store i64 0, i64* %15, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN3rtc16RefCountedObjectIN5blink15ThermalResourceEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %5, align 8
  %16 = getelementptr inbounds i8, i8* %3, i64 80
  %17 = bitcast i8* %16 to i32*
  store i32 0, i32* %17, align 4
  %18 = bitcast i8* %3 to %"class.blink::ThermalResource"*
  %19 = atomicrmw add i32* %17, i32 1 monotonic
  ret %"class.blink::ThermalResource"* %18
}

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink15ThermalResourceC2E13scoped_refptrIN4base19SequencedTaskRunnerEE(%"class.blink::ThermalResource"*, %"class.base::SequencedTaskRunner"*) unnamed_addr #0 align 2 {
  %3 = ptrtoint %"class.base::SequencedTaskRunner"* %1 to i64
  %4 = getelementptr inbounds %"class.blink::ThermalResource", %"class.blink::ThermalResource"* %0, i64 0, i32 0
  tail call void @_ZN6webrtc8ResourceC2Ev(%"class.webrtc::Resource"* %4) #8
  %5 = getelementptr inbounds %"class.blink::ThermalResource", %"class.blink::ThermalResource"* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [8 x i8*] }, { [8 x i8*] }* @_ZTVN5blink15ThermalResourceE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %5, align 8
  %6 = getelementptr inbounds %"class.blink::ThermalResource", %"class.blink::ThermalResource"* %0, i64 0, i32 1
  %7 = bitcast %class.scoped_refptr.0* %6 to i64*
  store i64 %3, i64* %7, align 8
  %8 = getelementptr inbounds %"class.blink::ThermalResource", %"class.blink::ThermalResource"* %0, i64 0, i32 2, i32 0
  tail call void @_ZN4base8internal8LockImplC1Ev(%"class.base::internal::LockImpl"* %8) #8
  %9 = getelementptr inbounds %"class.blink::ThermalResource", %"class.blink::ThermalResource"* %0, i64 0, i32 3
  store %"class.webrtc::ResourceListener"* null, %"class.webrtc::ResourceListener"** %9, align 8
  %10 = getelementptr inbounds %"class.blink::ThermalResource", %"class.blink::ThermalResource"* %0, i64 0, i32 4
  store i32 0, i32* %10, align 8
  %11 = getelementptr inbounds %"class.blink::ThermalResource", %"class.blink::ThermalResource"* %0, i64 0, i32 5
  store i64 0, i64* %11, align 8
  ret void
}

declare void @_ZN6webrtc8ResourceC2Ev(%"class.webrtc::Resource"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink15ThermalResource20OnThermalMeasurementENS_5mojom18DeviceThermalStateE(%"class.blink::ThermalResource"*, i32) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::ThermalResource", %"class.blink::ThermalResource"* %0, i64 0, i32 2
  %4 = getelementptr inbounds %"class.base::Lock", %"class.base::Lock"* %3, i64 0, i32 0, i32 0
  %5 = tail call i32 @pthread_mutex_trylock(%union.pthread_mutex_t* %4) #8
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %9, label %7, !prof !2

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"class.base::Lock", %"class.base::Lock"* %3, i64 0, i32 0
  tail call void @_ZN4base8internal8LockImpl24LockInternalWithTrackingEv(%"class.base::internal::LockImpl"* %8) #8
  br label %9

9:                                                ; preds = %2, %7
  %10 = getelementptr inbounds %"class.blink::ThermalResource", %"class.blink::ThermalResource"* %0, i64 0, i32 4
  store i32 %1, i32* %10, align 8
  %11 = getelementptr inbounds %"class.blink::ThermalResource", %"class.blink::ThermalResource"* %0, i64 0, i32 5
  %12 = load i64, i64* %11, align 8
  %13 = add i64 %12, 1
  store i64 %13, i64* %11, align 8
  tail call void @_ZN5blink15ThermalResource33ReportMeasurementWhileHoldingLockEm(%"class.blink::ThermalResource"* %0, i64 %13)
  %14 = tail call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* %4) #8
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink15ThermalResource33ReportMeasurementWhileHoldingLockEm(%"class.blink::ThermalResource"*, i64) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.rtc::scoped_refptr", align 8
  %4 = alloca %"class.rtc::scoped_refptr", align 8
  %5 = alloca %"class.base::Location", align 8
  %6 = alloca %"class.base::OnceCallback", align 8
  %7 = getelementptr inbounds %"class.blink::ThermalResource", %"class.blink::ThermalResource"* %0, i64 0, i32 5
  %8 = load i64, i64* %7, align 8
  %9 = icmp eq i64 %8, %1
  br i1 %9, label %10, label %90

10:                                               ; preds = %2
  %11 = getelementptr inbounds %"class.blink::ThermalResource", %"class.blink::ThermalResource"* %0, i64 0, i32 3
  %12 = load %"class.webrtc::ResourceListener"*, %"class.webrtc::ResourceListener"** %11, align 8
  %13 = icmp eq %"class.webrtc::ResourceListener"* %12, null
  br i1 %13, label %90, label %14

14:                                               ; preds = %10
  %15 = getelementptr inbounds %"class.blink::ThermalResource", %"class.blink::ThermalResource"* %0, i64 0, i32 4
  %16 = load i32, i32* %15, align 8
  switch i32 %16, label %63 [
    i32 0, label %90
    i32 1, label %17
    i32 2, label %17
    i32 3, label %40
    i32 4, label %40
  ]

17:                                               ; preds = %14, %14
  %18 = getelementptr inbounds %"class.blink::ThermalResource", %"class.blink::ThermalResource"* %0, i64 0, i32 0
  %19 = getelementptr inbounds %"class.rtc::scoped_refptr", %"class.rtc::scoped_refptr"* %3, i64 0, i32 0
  store %"class.webrtc::Resource"* %18, %"class.webrtc::Resource"** %19, align 8
  %20 = icmp eq %"class.blink::ThermalResource"* %0, null
  br i1 %20, label %26, label %21

21:                                               ; preds = %17
  %22 = getelementptr inbounds %"class.blink::ThermalResource", %"class.blink::ThermalResource"* %0, i64 0, i32 0, i32 0
  %23 = bitcast %"class.blink::ThermalResource"* %0 to void (%"class.rtc::RefCountInterface"*)***
  %24 = load void (%"class.rtc::RefCountInterface"*)**, void (%"class.rtc::RefCountInterface"*)*** %23, align 8
  %25 = load void (%"class.rtc::RefCountInterface"*)*, void (%"class.rtc::RefCountInterface"*)** %24, align 8
  tail call void %25(%"class.rtc::RefCountInterface"* %22) #8
  br label %26

26:                                               ; preds = %17, %21
  %27 = bitcast %"class.webrtc::ResourceListener"* %12 to void (%"class.webrtc::ResourceListener"*, %"class.rtc::scoped_refptr"*, i32)***
  %28 = load void (%"class.webrtc::ResourceListener"*, %"class.rtc::scoped_refptr"*, i32)**, void (%"class.webrtc::ResourceListener"*, %"class.rtc::scoped_refptr"*, i32)*** %27, align 8
  %29 = getelementptr inbounds void (%"class.webrtc::ResourceListener"*, %"class.rtc::scoped_refptr"*, i32)*, void (%"class.webrtc::ResourceListener"*, %"class.rtc::scoped_refptr"*, i32)** %28, i64 2
  %30 = load void (%"class.webrtc::ResourceListener"*, %"class.rtc::scoped_refptr"*, i32)*, void (%"class.webrtc::ResourceListener"*, %"class.rtc::scoped_refptr"*, i32)** %29, align 8
  call void %30(%"class.webrtc::ResourceListener"* nonnull %12, %"class.rtc::scoped_refptr"* nonnull %3, i32 1) #8
  %31 = load %"class.webrtc::Resource"*, %"class.webrtc::Resource"** %19, align 8
  %32 = icmp eq %"class.webrtc::Resource"* %31, null
  br i1 %32, label %63, label %33

33:                                               ; preds = %26
  %34 = getelementptr inbounds %"class.webrtc::Resource", %"class.webrtc::Resource"* %31, i64 0, i32 0
  %35 = bitcast %"class.webrtc::Resource"* %31 to i32 (%"class.rtc::RefCountInterface"*)***
  %36 = load i32 (%"class.rtc::RefCountInterface"*)**, i32 (%"class.rtc::RefCountInterface"*)*** %35, align 8
  %37 = getelementptr inbounds i32 (%"class.rtc::RefCountInterface"*)*, i32 (%"class.rtc::RefCountInterface"*)** %36, i64 1
  %38 = load i32 (%"class.rtc::RefCountInterface"*)*, i32 (%"class.rtc::RefCountInterface"*)** %37, align 8
  %39 = call i32 %38(%"class.rtc::RefCountInterface"* %34) #8
  br label %63

40:                                               ; preds = %14, %14
  %41 = getelementptr inbounds %"class.blink::ThermalResource", %"class.blink::ThermalResource"* %0, i64 0, i32 0
  %42 = getelementptr inbounds %"class.rtc::scoped_refptr", %"class.rtc::scoped_refptr"* %4, i64 0, i32 0
  store %"class.webrtc::Resource"* %41, %"class.webrtc::Resource"** %42, align 8
  %43 = icmp eq %"class.blink::ThermalResource"* %0, null
  br i1 %43, label %49, label %44

44:                                               ; preds = %40
  %45 = getelementptr inbounds %"class.blink::ThermalResource", %"class.blink::ThermalResource"* %0, i64 0, i32 0, i32 0
  %46 = bitcast %"class.blink::ThermalResource"* %0 to void (%"class.rtc::RefCountInterface"*)***
  %47 = load void (%"class.rtc::RefCountInterface"*)**, void (%"class.rtc::RefCountInterface"*)*** %46, align 8
  %48 = load void (%"class.rtc::RefCountInterface"*)*, void (%"class.rtc::RefCountInterface"*)** %47, align 8
  tail call void %48(%"class.rtc::RefCountInterface"* %45) #8
  br label %49

49:                                               ; preds = %40, %44
  %50 = bitcast %"class.webrtc::ResourceListener"* %12 to void (%"class.webrtc::ResourceListener"*, %"class.rtc::scoped_refptr"*, i32)***
  %51 = load void (%"class.webrtc::ResourceListener"*, %"class.rtc::scoped_refptr"*, i32)**, void (%"class.webrtc::ResourceListener"*, %"class.rtc::scoped_refptr"*, i32)*** %50, align 8
  %52 = getelementptr inbounds void (%"class.webrtc::ResourceListener"*, %"class.rtc::scoped_refptr"*, i32)*, void (%"class.webrtc::ResourceListener"*, %"class.rtc::scoped_refptr"*, i32)** %51, i64 2
  %53 = load void (%"class.webrtc::ResourceListener"*, %"class.rtc::scoped_refptr"*, i32)*, void (%"class.webrtc::ResourceListener"*, %"class.rtc::scoped_refptr"*, i32)** %52, align 8
  call void %53(%"class.webrtc::ResourceListener"* nonnull %12, %"class.rtc::scoped_refptr"* nonnull %4, i32 0) #8
  %54 = load %"class.webrtc::Resource"*, %"class.webrtc::Resource"** %42, align 8
  %55 = icmp eq %"class.webrtc::Resource"* %54, null
  br i1 %55, label %63, label %56

56:                                               ; preds = %49
  %57 = getelementptr inbounds %"class.webrtc::Resource", %"class.webrtc::Resource"* %54, i64 0, i32 0
  %58 = bitcast %"class.webrtc::Resource"* %54 to i32 (%"class.rtc::RefCountInterface"*)***
  %59 = load i32 (%"class.rtc::RefCountInterface"*)**, i32 (%"class.rtc::RefCountInterface"*)*** %58, align 8
  %60 = getelementptr inbounds i32 (%"class.rtc::RefCountInterface"*)*, i32 (%"class.rtc::RefCountInterface"*)** %59, i64 1
  %61 = load i32 (%"class.rtc::RefCountInterface"*)*, i32 (%"class.rtc::RefCountInterface"*)** %60, align 8
  %62 = call i32 %61(%"class.rtc::RefCountInterface"* %57) #8
  br label %63

63:                                               ; preds = %56, %49, %33, %26, %14
  %64 = getelementptr inbounds %"class.blink::ThermalResource", %"class.blink::ThermalResource"* %0, i64 0, i32 1, i32 0
  %65 = load %"class.base::SequencedTaskRunner"*, %"class.base::SequencedTaskRunner"** %64, align 8
  %66 = bitcast %"class.base::SequencedTaskRunner"* %65 to %"class.base::TaskRunner"*
  %67 = bitcast %"class.base::Location"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %67) #8
  call void @_ZN4base8Location7CurrentEPKcS2_i(%"class.base::Location"* nonnull sret %5, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.2, i64 0, i64 0), i8* getelementptr inbounds ([76 x i8], [76 x i8]* @.str.3, i64 0, i64 0), i32 87) #8
  %68 = ptrtoint %"class.blink::ThermalResource"* %0 to i64
  %69 = icmp eq %"class.blink::ThermalResource"* %0, null
  br i1 %69, label %75, label %70

70:                                               ; preds = %63
  %71 = getelementptr inbounds %"class.blink::ThermalResource", %"class.blink::ThermalResource"* %0, i64 0, i32 0, i32 0
  %72 = bitcast %"class.blink::ThermalResource"* %0 to void (%"class.rtc::RefCountInterface"*)***
  %73 = load void (%"class.rtc::RefCountInterface"*)**, void (%"class.rtc::RefCountInterface"*)*** %72, align 8
  %74 = load void (%"class.rtc::RefCountInterface"*)*, void (%"class.rtc::RefCountInterface"*)** %73, align 8
  call void %74(%"class.rtc::RefCountInterface"* %71) #8
  br label %75

75:                                               ; preds = %70, %63
  %76 = call i8* @_Znwm(i64 64) #7, !noalias !3
  %77 = bitcast i8* %76 to %"class.base::internal::BindStateBase"*
  call void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_E(%"class.base::internal::BindStateBase"* nonnull %77, void ()* bitcast (void (%"class.base::internal::BindStateBase"*)* @_ZN4base8internal7InvokerINS0_9BindStateIMN5blink15ThermalResourceEFvmEJ13scoped_refptrIS4_EmEEEFvvEE7RunOnceEPNS0_13BindStateBaseE to void ()*), void (%"class.base::internal::BindStateBase"*)* nonnull @_ZN4base8internal9BindStateIMN5blink15ThermalResourceEFvmEJ13scoped_refptrIS3_EmEE7DestroyEPKNS0_13BindStateBaseE) #8, !noalias !3
  %78 = getelementptr inbounds i8, i8* %76, i64 32
  %79 = bitcast i8* %78 to <2 x i64>*
  store <2 x i64> <i64 ptrtoint (void (%"class.blink::ThermalResource"*, i64)* @_ZN5blink15ThermalResource17ReportMeasurementEm to i64), i64 0>, <2 x i64>* %79, align 8, !noalias !3
  %80 = getelementptr inbounds i8, i8* %76, i64 48
  %81 = bitcast i8* %80 to i64*
  store i64 %68, i64* %81, align 8, !noalias !3
  %82 = getelementptr inbounds i8, i8* %76, i64 56
  %83 = bitcast i8* %82 to i64*
  store i64 %1, i64* %83, align 8, !noalias !3
  %84 = bitcast %"class.base::OnceCallback"* %6 to i8**
  store i8* %76, i8** %84, align 8, !alias.scope !3
  %85 = bitcast %"class.base::SequencedTaskRunner"* %65 to i1 (%"class.base::TaskRunner"*, %"class.base::Location"*, %"class.base::OnceCallback"*, i64)***
  %86 = load i1 (%"class.base::TaskRunner"*, %"class.base::Location"*, %"class.base::OnceCallback"*, i64)**, i1 (%"class.base::TaskRunner"*, %"class.base::Location"*, %"class.base::OnceCallback"*, i64)*** %85, align 8
  %87 = load i1 (%"class.base::TaskRunner"*, %"class.base::Location"*, %"class.base::OnceCallback"*, i64)*, i1 (%"class.base::TaskRunner"*, %"class.base::Location"*, %"class.base::OnceCallback"*, i64)** %86, align 8
  %88 = call zeroext i1 %87(%"class.base::TaskRunner"* %66, %"class.base::Location"* nonnull dereferenceable(32) %5, %"class.base::OnceCallback"* nonnull %6, i64 10000000) #8
  %89 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %6, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %89) #8
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %67) #8
  br label %90

90:                                               ; preds = %10, %2, %14, %75
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK5blink15ThermalResource4NameEv(%"class.std::__1::basic_string"* noalias sret, %"class.blink::ThermalResource"* nocapture readnone) unnamed_addr #0 align 2 {
  %3 = bitcast %"class.std::__1::basic_string"* %0 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %4 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %3, i64 0, i32 1, i32 0
  store i8 15, i8* %4, align 1
  %5 = bitcast %"class.std::__1::basic_string"* %0 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %5, i8* align 1 getelementptr inbounds ([16 x i8], [16 x i8]* @.str.1, i64 0, i64 0), i64 15, i1 false) #8
  %6 = getelementptr inbounds i8, i8* %5, i64 15
  store i8 0, i8* %6, align 1
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink15ThermalResource19SetResourceListenerEPN6webrtc16ResourceListenerE(%"class.blink::ThermalResource"*, %"class.webrtc::ResourceListener"*) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::ThermalResource", %"class.blink::ThermalResource"* %0, i64 0, i32 2
  %4 = getelementptr inbounds %"class.base::Lock", %"class.base::Lock"* %3, i64 0, i32 0, i32 0
  %5 = tail call i32 @pthread_mutex_trylock(%union.pthread_mutex_t* %4) #8
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %9, label %7, !prof !2

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"class.base::Lock", %"class.base::Lock"* %3, i64 0, i32 0
  tail call void @_ZN4base8internal8LockImpl24LockInternalWithTrackingEv(%"class.base::internal::LockImpl"* %8) #8
  br label %9

9:                                                ; preds = %2, %7
  %10 = getelementptr inbounds %"class.blink::ThermalResource", %"class.blink::ThermalResource"* %0, i64 0, i32 3
  store %"class.webrtc::ResourceListener"* %1, %"class.webrtc::ResourceListener"** %10, align 8
  %11 = icmp eq %"class.webrtc::ResourceListener"* %1, null
  br i1 %11, label %19, label %12

12:                                               ; preds = %9
  %13 = getelementptr inbounds %"class.blink::ThermalResource", %"class.blink::ThermalResource"* %0, i64 0, i32 4
  %14 = load i32, i32* %13, align 8
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %19, label %16

16:                                               ; preds = %12
  %17 = getelementptr inbounds %"class.blink::ThermalResource", %"class.blink::ThermalResource"* %0, i64 0, i32 5
  %18 = load i64, i64* %17, align 8
  tail call void @_ZN5blink15ThermalResource33ReportMeasurementWhileHoldingLockEm(%"class.blink::ThermalResource"* %0, i64 %18)
  br label %19

19:                                               ; preds = %12, %9, %16
  %20 = tail call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* %4) #8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink15ThermalResource17ReportMeasurementEm(%"class.blink::ThermalResource"*, i64) #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::ThermalResource", %"class.blink::ThermalResource"* %0, i64 0, i32 2
  %4 = getelementptr inbounds %"class.base::Lock", %"class.base::Lock"* %3, i64 0, i32 0, i32 0
  %5 = tail call i32 @pthread_mutex_trylock(%union.pthread_mutex_t* %4) #8
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %9, label %7, !prof !2

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"class.base::Lock", %"class.base::Lock"* %3, i64 0, i32 0
  tail call void @_ZN4base8internal8LockImpl24LockInternalWithTrackingEv(%"class.base::internal::LockImpl"* %8) #8
  br label %9

9:                                                ; preds = %2, %7
  tail call void @_ZN5blink15ThermalResource33ReportMeasurementWhileHoldingLockEm(%"class.blink::ThermalResource"* %0, i64 %1)
  %10 = tail call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* %4) #8
  ret void
}

declare void @_ZN4base8Location7CurrentEPKcS2_i(%"class.base::Location"* sret, i8*, i8*, i32) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"*) unnamed_addr #4

declare void @__cxa_pure_virtual() unnamed_addr

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink15ThermalResourceD0Ev(%"class.blink::ThermalResource"*) unnamed_addr #0 comdat align 2 {
  tail call void @llvm.trap() #9
  unreachable
}

declare void @_ZN4base8internal8LockImplC1Ev(%"class.base::internal::LockImpl"*) unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN6webrtc8ResourceD2Ev(%"class.webrtc::Resource"*) unnamed_addr #4

; Function Attrs: nounwind
declare void @_ZN4base8internal8LockImplD1Ev(%"class.base::internal::LockImpl"*) unnamed_addr #4

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #5

declare void @_ZN4base16TaskRunnerTraits8DestructEPKNS_10TaskRunnerE(%"class.base::TaskRunner"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK3rtc16RefCountedObjectIN5blink15ThermalResourceEE6AddRefEv(%"class.rtc::RefCountedObject"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.rtc::RefCountedObject", %"class.rtc::RefCountedObject"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %3 = atomicrmw add i32* %2, i32 1 monotonic
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK3rtc16RefCountedObjectIN5blink15ThermalResourceEE7ReleaseEv(%"class.rtc::RefCountedObject"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.rtc::RefCountedObject", %"class.rtc::RefCountedObject"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %3 = atomicrmw sub i32* %2, i32 1 acq_rel
  %4 = icmp ne i32 %3, 1
  %5 = zext i1 %4 to i32
  %6 = icmp eq %"class.rtc::RefCountedObject"* %0, null
  %7 = or i1 %6, %4
  br i1 %7, label %13, label %8

8:                                                ; preds = %1
  %9 = bitcast %"class.rtc::RefCountedObject"* %0 to void (%"class.rtc::RefCountedObject"*)***
  %10 = load void (%"class.rtc::RefCountedObject"*)**, void (%"class.rtc::RefCountedObject"*)*** %9, align 8
  %11 = getelementptr inbounds void (%"class.rtc::RefCountedObject"*)*, void (%"class.rtc::RefCountedObject"*)** %10, i64 3
  %12 = load void (%"class.rtc::RefCountedObject"*)*, void (%"class.rtc::RefCountedObject"*)** %11, align 8
  tail call void %12(%"class.rtc::RefCountedObject"* nonnull %0) #8
  br label %13

13:                                               ; preds = %1, %8
  ret i32 %5
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink15ThermalResourceD2Ev(%"class.blink::ThermalResource"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::ThermalResource", %"class.blink::ThermalResource"* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [8 x i8*] }, { [8 x i8*] }* @_ZTVN5blink15ThermalResourceE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.blink::ThermalResource", %"class.blink::ThermalResource"* %0, i64 0, i32 2, i32 0
  tail call void @_ZN4base8internal8LockImplD1Ev(%"class.base::internal::LockImpl"* %3) #8
  %4 = getelementptr inbounds %"class.blink::ThermalResource", %"class.blink::ThermalResource"* %0, i64 0, i32 1, i32 0
  %5 = load %"class.base::SequencedTaskRunner"*, %"class.base::SequencedTaskRunner"** %4, align 8
  %6 = icmp eq %"class.base::SequencedTaskRunner"* %5, null
  br i1 %6, label %15, label %7

7:                                                ; preds = %1
  %8 = getelementptr inbounds %"class.base::SequencedTaskRunner", %"class.base::SequencedTaskRunner"* %5, i64 0, i32 0, i32 1
  %9 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %10 = atomicrmw sub i32* %9, i32 1 acq_rel
  %11 = icmp eq i32 %10, 1
  br i1 %11, label %12, label %15

12:                                               ; preds = %7
  %13 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %8, i64 -2
  %14 = bitcast %"class.base::RefCountedThreadSafe"* %13 to %"class.base::TaskRunner"*
  tail call void @_ZN4base16TaskRunnerTraits8DestructEPKNS_10TaskRunnerE(%"class.base::TaskRunner"* %14) #8
  br label %15

15:                                               ; preds = %1, %7, %12
  %16 = getelementptr inbounds %"class.blink::ThermalResource", %"class.blink::ThermalResource"* %0, i64 0, i32 0
  tail call void @_ZN6webrtc8ResourceD2Ev(%"class.webrtc::Resource"* %16) #8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3rtc16RefCountedObjectIN5blink15ThermalResourceEED0Ev(%"class.rtc::RefCountedObject"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.rtc::RefCountedObject", %"class.rtc::RefCountedObject"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [8 x i8*] }, { [8 x i8*] }* @_ZTVN5blink15ThermalResourceE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.rtc::RefCountedObject", %"class.rtc::RefCountedObject"* %0, i64 0, i32 0, i32 2, i32 0
  tail call void @_ZN4base8internal8LockImplD1Ev(%"class.base::internal::LockImpl"* %3) #8
  %4 = getelementptr inbounds %"class.rtc::RefCountedObject", %"class.rtc::RefCountedObject"* %0, i64 0, i32 0, i32 1, i32 0
  %5 = load %"class.base::SequencedTaskRunner"*, %"class.base::SequencedTaskRunner"** %4, align 8
  %6 = icmp eq %"class.base::SequencedTaskRunner"* %5, null
  br i1 %6, label %15, label %7

7:                                                ; preds = %1
  %8 = getelementptr inbounds %"class.base::SequencedTaskRunner", %"class.base::SequencedTaskRunner"* %5, i64 0, i32 0, i32 1
  %9 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %10 = atomicrmw sub i32* %9, i32 1 acq_rel
  %11 = icmp eq i32 %10, 1
  br i1 %11, label %12, label %15

12:                                               ; preds = %7
  %13 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %8, i64 -2
  %14 = bitcast %"class.base::RefCountedThreadSafe"* %13 to %"class.base::TaskRunner"*
  tail call void @_ZN4base16TaskRunnerTraits8DestructEPKNS_10TaskRunnerE(%"class.base::TaskRunner"* %14) #8
  br label %15

15:                                               ; preds = %1, %7, %12
  %16 = getelementptr inbounds %"class.rtc::RefCountedObject", %"class.rtc::RefCountedObject"* %0, i64 0, i32 0, i32 0
  tail call void @_ZN6webrtc8ResourceD2Ev(%"class.webrtc::Resource"* %16) #8
  %17 = bitcast %"class.rtc::RefCountedObject"* %0 to i8*
  tail call void @_ZdlPv(i8* %17) #7
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK3rtc16RefCountedObjectIN5blink15ThermalResourceEE9HasOneRefEv(%"class.rtc::RefCountedObject"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.rtc::RefCountedObject", %"class.rtc::RefCountedObject"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %3 = load atomic i32, i32* %2 acquire, align 4
  %4 = icmp eq i32 %3, 1
  ret i1 %4
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #6

declare void @_ZN4base8internal8LockImpl24LockInternalWithTrackingEv(%"class.base::internal::LockImpl"*) local_unnamed_addr #2

; Function Attrs: nounwind
declare i32 @pthread_mutex_trylock(%union.pthread_mutex_t*) local_unnamed_addr #4

; Function Attrs: nounwind
declare i32 @pthread_mutex_unlock(%union.pthread_mutex_t*) local_unnamed_addr #4

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal7InvokerINS0_9BindStateIMN5blink15ThermalResourceEFvmEJ13scoped_refptrIS4_EmEEEFvvEE7RunOnceEPNS0_13BindStateBaseE(%"class.base::internal::BindStateBase"*) #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1
  %3 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 2
  %4 = getelementptr inbounds void (%"class.base::internal::BindStateBase"*)*, void (%"class.base::internal::BindStateBase"*)** %3, i64 1
  %5 = bitcast void (%"class.base::internal::BindStateBase"*)** %4 to i64*
  %6 = bitcast %"class.base::internal::BindStateBase"* %2 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 1
  %9 = bitcast void ()** %8 to i64*
  %10 = load i64, i64* %9, align 8
  %11 = bitcast void (%"class.base::internal::BindStateBase"*)** %3 to i8**
  %12 = load i8*, i8** %11, align 8
  %13 = getelementptr inbounds i8, i8* %12, i64 %10
  %14 = bitcast i8* %13 to %"class.blink::ThermalResource"*
  %15 = and i64 %7, 1
  %16 = icmp eq i64 %15, 0
  br i1 %16, label %24, label %17

17:                                               ; preds = %1
  %18 = bitcast i8* %13 to i8**
  %19 = load i8*, i8** %18, align 8
  %20 = add i64 %7, -1
  %21 = getelementptr i8, i8* %19, i64 %20
  %22 = bitcast i8* %21 to void (%"class.blink::ThermalResource"*, i64)**
  %23 = load void (%"class.blink::ThermalResource"*, i64)*, void (%"class.blink::ThermalResource"*, i64)** %22, align 8
  br label %26

24:                                               ; preds = %1
  %25 = inttoptr i64 %7 to void (%"class.blink::ThermalResource"*, i64)*
  br label %26

26:                                               ; preds = %17, %24
  %27 = phi void (%"class.blink::ThermalResource"*, i64)* [ %23, %17 ], [ %25, %24 ]
  %28 = load i64, i64* %5, align 8
  tail call void %27(%"class.blink::ThermalResource"* %14, i64 %28) #8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal9BindStateIMN5blink15ThermalResourceEFvmEJ13scoped_refptrIS3_EmEE7DestroyEPKNS0_13BindStateBaseE(%"class.base::internal::BindStateBase"*) #0 comdat align 2 {
  %2 = icmp eq %"class.base::internal::BindStateBase"* %0, null
  br i1 %2, label %17, label %3

3:                                                ; preds = %1
  %4 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 2
  %5 = bitcast void (%"class.base::internal::BindStateBase"*)** %4 to %"class.blink::ThermalResource"**
  %6 = load %"class.blink::ThermalResource"*, %"class.blink::ThermalResource"** %5, align 8
  %7 = icmp eq %"class.blink::ThermalResource"* %6, null
  br i1 %7, label %15, label %8

8:                                                ; preds = %3
  %9 = getelementptr inbounds %"class.blink::ThermalResource", %"class.blink::ThermalResource"* %6, i64 0, i32 0, i32 0
  %10 = bitcast %"class.blink::ThermalResource"* %6 to i32 (%"class.rtc::RefCountInterface"*)***
  %11 = load i32 (%"class.rtc::RefCountInterface"*)**, i32 (%"class.rtc::RefCountInterface"*)*** %10, align 8
  %12 = getelementptr inbounds i32 (%"class.rtc::RefCountInterface"*)*, i32 (%"class.rtc::RefCountInterface"*)** %11, i64 1
  %13 = load i32 (%"class.rtc::RefCountInterface"*)*, i32 (%"class.rtc::RefCountInterface"*)** %12, align 8
  %14 = tail call i32 %13(%"class.rtc::RefCountInterface"* %9) #8
  br label %15

15:                                               ; preds = %3, %8
  %16 = bitcast %"class.base::internal::BindStateBase"* %0 to i8*
  tail call void @_ZdlPv(i8* %16) #7
  br label %17

17:                                               ; preds = %15, %1
  ret void
}

declare void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_E(%"class.base::internal::BindStateBase"*, void ()*, void (%"class.base::internal::BindStateBase"*)*) unnamed_addr #2

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { argmemonly nounwind }
attributes #4 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { cold noreturn nounwind }
attributes #6 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { builtin nounwind }
attributes #8 = { nounwind }
attributes #9 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!"branch_weights", i32 2000, i32 1}
!3 = !{!4, !6}
!4 = distinct !{!4, !5, !"_ZN4base8internal8BindImplINS_12OnceCallbackEMN5blink15ThermalResourceEFvmEJ13scoped_refptrIS4_ERmEEEDcOT0_DpOT1_: argument 0"}
!5 = distinct !{!5, !"_ZN4base8internal8BindImplINS_12OnceCallbackEMN5blink15ThermalResourceEFvmEJ13scoped_refptrIS4_ERmEEEDcOT0_DpOT1_"}
!6 = distinct !{!6, !7, !"_ZN4base8BindOnceIMN5blink15ThermalResourceEFvmEJ13scoped_refptrIS2_ERmEEENS_12OnceCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSB_DpOSC_: argument 0"}
!7 = distinct !{!7, !"_ZN4base8BindOnceIMN5blink15ThermalResourceEFvmEJ13scoped_refptrIS2_ERmEEENS_12OnceCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSB_DpOSC_"}
