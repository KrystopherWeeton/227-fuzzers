; ModuleID = '../../chrome/browser/devtools/remote_debugging_server.cc'
source_filename = "../../chrome/browser/devtools/remote_debugging_server.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.base::LazyInstance" = type { i64, [1 x i8] }
%class.RemoteDebuggingServer = type { i32 (...)** }
%"class.base::OnceCallback" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr }
%class.scoped_refptr = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.14" }
%"struct.std::__1::__atomic_base.14" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.base::FilePath" = type { %"class.std::__1::basic_string" }
%class.GURL = type { %"class.std::__1::basic_string", i8, %"struct.url::Parsed", %"class.std::__1::unique_ptr" }
%"struct.url::Parsed" = type { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, %"struct.url::Parsed"* }
%"struct.url::Component" = type { i32, i32 }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair.15" }
%"class.std::__1::__compressed_pair.15" = type { %"struct.std::__1::__compressed_pair_elem.16" }
%"struct.std::__1::__compressed_pair_elem.16" = type { %class.GURL* }
%"class.base::CommandLine" = type { %"class.std::__1::vector", %"class.std::__1::map", i64 }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"*, %"class.std::__1::__compressed_pair.1" }
%"class.std::__1::__compressed_pair.1" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"struct.std::__1::__compressed_pair_elem.2" = type { %"class.std::__1::basic_string"* }
%"class.std::__1::map" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.6", %"class.std::__1::__compressed_pair.11" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8, [7 x i8] }>
%"class.std::__1::__compressed_pair.6" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"struct.std::__1::__compressed_pair_elem.7" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.11" = type { %"struct.std::__1::__compressed_pair_elem.12" }
%"struct.std::__1::__compressed_pair_elem.12" = type { i64 }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }
%"class.content::DevToolsSocketFactory" = type { i32 (...)** }
%"class.(anonymous namespace)::TCPServerSocketFactory" = type <{ %"class.content::DevToolsSocketFactory", %"class.std::__1::basic_string", i16, i16, [4 x i8] }>
%"class.net::ServerSocket" = type { i32 (...)** }
%"struct.net::NetLogSource" = type { i32, i32, %"class.base::TimeTicks" }
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.net::TCPServerSocket" = type <{ %"class.net::ServerSocket", %"class.std::__1::unique_ptr.42", %"class.std::__1::unique_ptr.42", %"class.net::IPEndPoint", i8, [3 x i8] }>
%"class.std::__1::unique_ptr.42" = type { %"class.std::__1::__compressed_pair.43" }
%"class.std::__1::__compressed_pair.43" = type { %"struct.std::__1::__compressed_pair_elem.44" }
%"struct.std::__1::__compressed_pair_elem.44" = type { %"class.net::TCPSocketPosix"* }
%"class.net::TCPSocketPosix" = type <{ i32 (...)**, %"class.std::__1::unique_ptr.45", %"class.std::__1::unique_ptr.45", %"class.std::__1::unique_ptr.51", i8, [7 x i8], %"class.net::NetLogWithSource", %"class.net::SocketTag", [7 x i8] }>
%"class.std::__1::unique_ptr.45" = type { %"class.std::__1::__compressed_pair.46" }
%"class.std::__1::__compressed_pair.46" = type { %"struct.std::__1::__compressed_pair_elem.47" }
%"struct.std::__1::__compressed_pair_elem.47" = type { %"class.net::SocketPosix"* }
%"class.net::SocketPosix" = type opaque
%"class.std::__1::unique_ptr.51" = type { %"class.std::__1::__compressed_pair.52" }
%"class.std::__1::__compressed_pair.52" = type { %"struct.std::__1::__compressed_pair_elem.53" }
%"struct.std::__1::__compressed_pair_elem.53" = type { %"class.net::SocketPerformanceWatcher"* }
%"class.net::SocketPerformanceWatcher" = type { i32 (...)** }
%"class.net::NetLogWithSource" = type { %"struct.net::NetLogSource", %"class.net::NetLog"* }
%"class.net::NetLog" = type { i32 (...)**, %"class.base::Lock", i32, i32, %"class.std::__1::vector.57", %"class.std::__1::vector.64" }
%"class.base::Lock" = type { %"class.base::internal::LockImpl" }
%"class.base::internal::LockImpl" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"class.std::__1::vector.57" = type { %"class.std::__1::__vector_base.58" }
%"class.std::__1::__vector_base.58" = type { %"class.net::NetLog::ThreadSafeObserver"**, %"class.net::NetLog::ThreadSafeObserver"**, %"class.std::__1::__compressed_pair.59" }
%"class.net::NetLog::ThreadSafeObserver" = type { i32 (...)**, i32, %"class.net::NetLog"* }
%"class.std::__1::__compressed_pair.59" = type { %"struct.std::__1::__compressed_pair_elem.60" }
%"struct.std::__1::__compressed_pair_elem.60" = type { %"class.net::NetLog::ThreadSafeObserver"** }
%"class.std::__1::vector.64" = type { %"class.std::__1::__vector_base.65" }
%"class.std::__1::__vector_base.65" = type { %"class.net::NetLog::ThreadSafeCaptureModeObserver"**, %"class.net::NetLog::ThreadSafeCaptureModeObserver"**, %"class.std::__1::__compressed_pair.66" }
%"class.net::NetLog::ThreadSafeCaptureModeObserver" = type { i32 (...)**, %"class.net::NetLog"* }
%"class.std::__1::__compressed_pair.66" = type { %"struct.std::__1::__compressed_pair_elem.67" }
%"struct.std::__1::__compressed_pair_elem.67" = type { %"class.net::NetLog::ThreadSafeCaptureModeObserver"** }
%"class.net::SocketTag" = type { i8 }
%"class.net::IPEndPoint" = type { %"class.net::IPAddress", i16 }
%"class.net::IPAddress" = type { %"class.net::IPAddressBytes" }
%"class.net::IPAddressBytes" = type { %"struct.std::__1::array", i8 }
%"struct.std::__1::array" = type { [16 x i8] }

$_ZN4base8internal7InvokerINS0_9BindStateIPFvvEJEEES3_E7RunOnceEPNS0_13BindStateBaseE = comdat any

$_ZN4base8internal9BindStateIPFvvEJEE7DestroyEPKNS0_13BindStateBaseE = comdat any

@_ZN12_GLOBAL__N_119g_tethering_enabledE = internal global %"class.base::LazyInstance" zeroinitializer, align 8
@_ZTV21RemoteDebuggingServer = hidden unnamed_addr constant { [4 x i8*] } { [4 x i8*] [i8* null, i8* null, i8* bitcast (void (%class.RemoteDebuggingServer*)* @_ZN21RemoteDebuggingServerD2Ev to i8*), i8* bitcast (void (%class.RemoteDebuggingServer*)* @_ZN21RemoteDebuggingServerD0Ev to i8*)] }, align 8
@_ZN8switches20kRemoteDebuggingPipeE = external constant [0 x i8], align 1
@_ZN8switches20kRemoteDebuggingPortE = external constant [0 x i8], align 1
@_ZN8switches23kCustomDevtoolsFrontendE = external constant [0 x i8], align 1
@_ZN3url11kFileSchemeE = external constant [0 x i8], align 1
@_ZTVN12_GLOBAL__N_122TCPServerSocketFactoryE = internal unnamed_addr constant { [6 x i8*] } { [6 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.(anonymous namespace)::TCPServerSocketFactory"*)* @_ZN12_GLOBAL__N_122TCPServerSocketFactoryD2Ev to i8*), i8* bitcast (void (%"class.(anonymous namespace)::TCPServerSocketFactory"*)* @_ZN12_GLOBAL__N_122TCPServerSocketFactoryD0Ev to i8*), i8* bitcast (%"class.net::ServerSocket"* (%"class.(anonymous namespace)::TCPServerSocketFactory"*)* @_ZN12_GLOBAL__N_122TCPServerSocketFactory19CreateForHttpServerEv to i8*), i8* bitcast (%"class.net::ServerSocket"* (%"class.(anonymous namespace)::TCPServerSocketFactory"*, %"class.std::__1::basic_string"*)* @_ZN12_GLOBAL__N_122TCPServerSocketFactory18CreateForTetheringEPNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE to i8*)] }, align 8
@.str.2 = private unnamed_addr constant [10 x i8] c"127.0.0.1\00", align 1
@.str.3 = private unnamed_addr constant [4 x i8] c"::1\00", align 1

@_ZN21RemoteDebuggingServerC1Ev = hidden unnamed_addr alias void (%class.RemoteDebuggingServer*), void (%class.RemoteDebuggingServer*)* @_ZN21RemoteDebuggingServerC2Ev
@_ZN21RemoteDebuggingServerD1Ev = hidden unnamed_addr alias void (%class.RemoteDebuggingServer*), void (%class.RemoteDebuggingServer*)* @_ZN21RemoteDebuggingServerD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN21RemoteDebuggingServer23EnableTetheringForDebugEv() local_unnamed_addr #0 align 2 {
  %1 = load atomic i64, i64* getelementptr inbounds (%"class.base::LazyInstance", %"class.base::LazyInstance"* @_ZN12_GLOBAL__N_119g_tethering_enabledE, i64 0, i32 0) acquire, align 8
  %2 = icmp ugt i64 %1, 1
  br i1 %2, label %8, label %3

3:                                                ; preds = %0
  %4 = tail call zeroext i1 @_ZN4base8internal17NeedsLazyInstanceEPl(i64* getelementptr inbounds (%"class.base::LazyInstance", %"class.base::LazyInstance"* @_ZN12_GLOBAL__N_119g_tethering_enabledE, i64 0, i32 0)) #8
  br i1 %4, label %5, label %6

5:                                                ; preds = %3
  store i8 0, i8* getelementptr inbounds (%"class.base::LazyInstance", %"class.base::LazyInstance"* @_ZN12_GLOBAL__N_119g_tethering_enabledE, i64 0, i32 1, i64 0), align 8
  tail call void @_ZN4base8internal20CompleteLazyInstanceEPllPFvPvES2_(i64* getelementptr inbounds (%"class.base::LazyInstance", %"class.base::LazyInstance"* @_ZN12_GLOBAL__N_119g_tethering_enabledE, i64 0, i32 0), i64 ptrtoint (i8* getelementptr inbounds (%"class.base::LazyInstance", %"class.base::LazyInstance"* @_ZN12_GLOBAL__N_119g_tethering_enabledE, i64 0, i32 1, i64 0) to i64), void (i8*)* null, i8* bitcast (%"class.base::LazyInstance"* @_ZN12_GLOBAL__N_119g_tethering_enabledE to i8*)) #8
  br label %8

6:                                                ; preds = %3
  %7 = load atomic i64, i64* getelementptr inbounds (%"class.base::LazyInstance", %"class.base::LazyInstance"* @_ZN12_GLOBAL__N_119g_tethering_enabledE, i64 0, i32 0) acquire, align 8
  br label %8

8:                                                ; preds = %0, %5, %6
  %9 = phi i64 [ %1, %0 ], [ ptrtoint (i8* getelementptr inbounds (%"class.base::LazyInstance", %"class.base::LazyInstance"* @_ZN12_GLOBAL__N_119g_tethering_enabledE, i64 0, i32 1, i64 0) to i64), %5 ], [ %7, %6 ]
  %10 = inttoptr i64 %9 to i8*
  store i8 1, i8* %10, align 1
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN21RemoteDebuggingServerC2Ev(%class.RemoteDebuggingServer* nocapture) unnamed_addr #0 align 2 {
  %2 = alloca %"class.base::OnceCallback", align 8
  %3 = alloca %"class.std::__1::basic_string", align 8
  %4 = alloca i32, align 4
  %5 = alloca %"class.base::FilePath", align 8
  %6 = alloca %"class.base::FilePath", align 8
  %7 = alloca %class.GURL, align 8
  %8 = alloca %"class.std::__1::basic_string", align 8
  %9 = getelementptr inbounds %class.RemoteDebuggingServer, %class.RemoteDebuggingServer* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTV21RemoteDebuggingServer, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %9, align 8
  %10 = tail call %"class.base::CommandLine"* @_ZN4base11CommandLine17ForCurrentProcessEv() #8
  %11 = tail call zeroext i1 @_ZNK4base11CommandLine9HasSwitchEPKc(%"class.base::CommandLine"* %10, i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN8switches20kRemoteDebuggingPipeE, i64 0, i64 0)) #8
  br i1 %11, label %12, label %19

12:                                               ; preds = %1
  %13 = tail call i8* @_Znwm(i64 48) #9, !noalias !2
  %14 = bitcast i8* %13 to %"class.base::internal::BindStateBase"*
  tail call void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_E(%"class.base::internal::BindStateBase"* nonnull %14, void ()* bitcast (void (%"class.base::internal::BindStateBase"*)* @_ZN4base8internal7InvokerINS0_9BindStateIPFvvEJEEES3_E7RunOnceEPNS0_13BindStateBaseE to void ()*), void (%"class.base::internal::BindStateBase"*)* nonnull @_ZN4base8internal9BindStateIPFvvEJEE7DestroyEPKNS0_13BindStateBaseE) #8, !noalias !2
  %15 = getelementptr inbounds i8, i8* %13, i64 32
  %16 = bitcast i8* %15 to i64*
  store i64 ptrtoint (void ()* @_ZN29ChromeDevToolsManagerDelegate16CloseBrowserSoonEv to i64), i64* %16, align 8, !noalias !2
  %17 = bitcast %"class.base::OnceCallback"* %2 to i8**
  store i8* %13, i8** %17, align 8, !alias.scope !2
  call void @_ZN7content17DevToolsAgentHost31StartRemoteDebuggingPipeHandlerEN4base12OnceCallbackIFvvEEE(%"class.base::OnceCallback"* nonnull %2) #8
  %18 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %2, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %18) #8
  br label %19

19:                                               ; preds = %12, %1
  %20 = bitcast %"class.std::__1::basic_string"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %20) #8
  %21 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %22 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %23 = bitcast %"class.std::__1::basic_string"* %3 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %23, i8 -86, i64 24, i1 false)
  %24 = call i64 @strlen(i8* nonnull getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN8switches20kRemoteDebuggingPortE, i64 0, i64 0)) #8
  call void @_ZNK4base11CommandLine19GetSwitchValueASCIIENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.std::__1::basic_string"* nonnull sret %3, %"class.base::CommandLine"* %10, i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN8switches20kRemoteDebuggingPortE, i64 0, i64 0), i64 %24) #8
  %25 = bitcast i32* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %25) #8
  store i32 -1431655766, i32* %4, align 4
  %26 = bitcast %"class.std::__1::basic_string"* %3 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %27 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %26, i64 0, i32 1, i32 0
  %28 = load i8, i8* %27, align 1
  %29 = icmp slt i8 %28, 0
  %30 = load i8*, i8** %21, align 8
  %31 = select i1 %29, i8* %30, i8* %20
  %32 = load i64, i64* %22, align 8
  %33 = zext i8 %28 to i64
  %34 = select i1 %29, i64 %32, i64 %33
  %35 = call zeroext i1 @_ZN4base11StringToIntENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEEPi(i8* %31, i64 %34, i32* nonnull %4) #8
  %36 = xor i1 %35, true
  %37 = load i32, i32* %4, align 4
  %38 = icmp ugt i32 %37, 65534
  %39 = or i1 %38, %36
  br i1 %39, label %87, label %40

40:                                               ; preds = %19
  %41 = bitcast %"class.base::FilePath"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %41) #8
  %42 = bitcast %"class.base::FilePath"* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %42, i8 -86, i64 24, i1 false)
  call void @_ZN4base8FilePathC1Ev(%"class.base::FilePath"* nonnull %5) #8
  %43 = load i32, i32* %4, align 4
  %44 = icmp eq i32 %43, 0
  br i1 %44, label %45, label %47

45:                                               ; preds = %40
  %46 = call zeroext i1 @_ZN4base11PathService3GetEiPNS_8FilePathE(i32 1002, %"class.base::FilePath"* nonnull %5) #8
  br label %47

47:                                               ; preds = %40, %45
  %48 = bitcast %"class.base::FilePath"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %48) #8
  %49 = bitcast %"class.base::FilePath"* %6 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %49, i8 -86, i64 24, i1 false)
  call void @_ZN4base8FilePathC1Ev(%"class.base::FilePath"* nonnull %6) #8
  %50 = call zeroext i1 @_ZNK4base11CommandLine9HasSwitchEPKc(%"class.base::CommandLine"* %10, i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN8switches23kCustomDevtoolsFrontendE, i64 0, i64 0)) #8
  br i1 %50, label %51, label %76

51:                                               ; preds = %47
  %52 = bitcast %class.GURL* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 120, i8* nonnull %52) #8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %52, i8 -86, i64 120, i1 false)
  %53 = bitcast %"class.std::__1::basic_string"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %53) #8
  %54 = call i64 @strlen(i8* nonnull getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN8switches23kCustomDevtoolsFrontendE, i64 0, i64 0)) #8
  call void @_ZNK4base11CommandLine19GetSwitchValueASCIIENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.std::__1::basic_string"* nonnull sret %8, %"class.base::CommandLine"* %10, i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN8switches23kCustomDevtoolsFrontendE, i64 0, i64 0), i64 %54) #8
  %55 = bitcast %"class.std::__1::basic_string"* %8 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %56 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %55, i64 0, i32 1, i32 0
  %57 = load i8, i8* %56, align 1
  %58 = icmp slt i8 %57, 0
  %59 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %60 = load i8*, i8** %59, align 8
  %61 = select i1 %58, i8* %60, i8* %53
  %62 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %63 = load i64, i64* %62, align 8
  %64 = zext i8 %57 to i64
  %65 = select i1 %58, i64 %63, i64 %64
  call void @_ZN4GURLC1EN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%class.GURL* nonnull %7, i8* %61, i64 %65) #8
  %66 = load i8, i8* %56, align 1
  %67 = icmp slt i8 %66, 0
  br i1 %67, label %68, label %70

68:                                               ; preds = %51
  %69 = load i8*, i8** %59, align 8
  call void @_ZdlPv(i8* %69) #9
  br label %70

70:                                               ; preds = %51, %68
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %53) #8
  %71 = call i64 @strlen(i8* nonnull getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN3url11kFileSchemeE, i64 0, i64 0)) #8
  %72 = call zeroext i1 @_ZNK4GURL8SchemeIsEN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%class.GURL* nonnull %7, i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN3url11kFileSchemeE, i64 0, i64 0), i64 %71) #8
  br i1 %72, label %73, label %75

73:                                               ; preds = %70
  %74 = call zeroext i1 @_ZN3net17FileURLToFilePathERK4GURLPN4base8FilePathE(%class.GURL* nonnull dereferenceable(120) %7, %"class.base::FilePath"* nonnull %6) #8
  br label %75

75:                                               ; preds = %73, %70
  call void @_ZN4GURLD1Ev(%class.GURL* nonnull %7) #8
  call void @llvm.lifetime.end.p0i8(i64 120, i8* nonnull %52) #8
  br label %76

76:                                               ; preds = %47, %75
  %77 = call i8* @_Znwm(i64 40) #9
  %78 = load i32, i32* %4, align 4
  %79 = trunc i32 %78 to i16
  %80 = bitcast i8* %77 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN12_GLOBAL__N_122TCPServerSocketFactoryE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %80, align 8
  %81 = getelementptr inbounds i8, i8* %77, i64 8
  call void @llvm.memset.p0i8.i64(i8* align 8 %81, i8 0, i64 24, i1 false) #8
  %82 = getelementptr inbounds i8, i8* %77, i64 32
  %83 = bitcast i8* %82 to i16*
  store i16 %79, i16* %83, align 8
  %84 = getelementptr inbounds i8, i8* %77, i64 34
  %85 = bitcast i8* %84 to i16*
  store i16 9333, i16* %85, align 2
  %86 = bitcast i8* %77 to %"class.content::DevToolsSocketFactory"*
  call void @_ZN7content17DevToolsAgentHost26StartRemoteDebuggingServerENSt3__110unique_ptrINS_21DevToolsSocketFactoryENS1_14default_deleteIS3_EEEERKN4base8FilePathESA_(%"class.content::DevToolsSocketFactory"* nonnull %86, %"class.base::FilePath"* nonnull dereferenceable(24) %5, %"class.base::FilePath"* nonnull dereferenceable(24) %6) #8
  call void @_ZN4base8FilePathD1Ev(%"class.base::FilePath"* nonnull %6) #8
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %48) #8
  call void @_ZN4base8FilePathD1Ev(%"class.base::FilePath"* nonnull %5) #8
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %41) #8
  br label %87

87:                                               ; preds = %19, %76
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %25) #8
  %88 = load i8, i8* %27, align 1
  %89 = icmp slt i8 %88, 0
  br i1 %89, label %90, label %92

90:                                               ; preds = %87
  %91 = load i8*, i8** %21, align 8
  call void @_ZdlPv(i8* %91) #9
  br label %92

92:                                               ; preds = %87, %90
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %20) #8
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

declare %"class.base::CommandLine"* @_ZN4base11CommandLine17ForCurrentProcessEv() local_unnamed_addr #2

declare zeroext i1 @_ZNK4base11CommandLine9HasSwitchEPKc(%"class.base::CommandLine"*, i8*) local_unnamed_addr #2

declare void @_ZN7content17DevToolsAgentHost31StartRemoteDebuggingPipeHandlerEN4base12OnceCallbackIFvvEEE(%"class.base::OnceCallback"*) local_unnamed_addr #2

declare void @_ZN29ChromeDevToolsManagerDelegate16CloseBrowserSoonEv() #2

; Function Attrs: nounwind
declare void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"*) unnamed_addr #3

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

declare void @_ZNK4base11CommandLine19GetSwitchValueASCIIENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.std::__1::basic_string"* sret, %"class.base::CommandLine"*, i8*, i64) local_unnamed_addr #2

declare zeroext i1 @_ZN4base11StringToIntENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEEPi(i8*, i64, i32*) local_unnamed_addr #2

declare void @_ZN4base8FilePathC1Ev(%"class.base::FilePath"*) unnamed_addr #2

declare zeroext i1 @_ZN4base11PathService3GetEiPNS_8FilePathE(i32, %"class.base::FilePath"*) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

declare void @_ZN4GURLC1EN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%class.GURL*, i8*, i64) unnamed_addr #2

declare zeroext i1 @_ZN3net17FileURLToFilePathERK4GURLPN4base8FilePathE(%class.GURL* dereferenceable(120), %"class.base::FilePath"*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN4GURLD1Ev(%class.GURL*) unnamed_addr #3

declare void @_ZN7content17DevToolsAgentHost26StartRemoteDebuggingServerENSt3__110unique_ptrINS_21DevToolsSocketFactoryENS1_14default_deleteIS3_EEEERKN4base8FilePathESA_(%"class.content::DevToolsSocketFactory"*, %"class.base::FilePath"* dereferenceable(24), %"class.base::FilePath"* dereferenceable(24)) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN4base8FilePathD1Ev(%"class.base::FilePath"*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN21RemoteDebuggingServerD2Ev(%class.RemoteDebuggingServer* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %class.RemoteDebuggingServer, %class.RemoteDebuggingServer* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTV21RemoteDebuggingServer, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  tail call void @_ZN7content17DevToolsAgentHost25StopRemoteDebuggingServerEv() #8
  tail call void @_ZN7content17DevToolsAgentHost30StopRemoteDebuggingPipeHandlerEv() #8
  ret void
}

declare void @_ZN7content17DevToolsAgentHost25StopRemoteDebuggingServerEv() local_unnamed_addr #2

declare void @_ZN7content17DevToolsAgentHost30StopRemoteDebuggingPipeHandlerEv() local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN21RemoteDebuggingServerD0Ev(%class.RemoteDebuggingServer*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %class.RemoteDebuggingServer, %class.RemoteDebuggingServer* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTV21RemoteDebuggingServer, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  tail call void @_ZN7content17DevToolsAgentHost25StopRemoteDebuggingServerEv() #8
  tail call void @_ZN7content17DevToolsAgentHost30StopRemoteDebuggingPipeHandlerEv() #8
  %3 = bitcast %class.RemoteDebuggingServer* %0 to i8*
  tail call void @_ZdlPv(i8* %3) #9
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #4

; Function Attrs: argmemonly nofree nounwind readonly
declare i64 @strlen(i8* nocapture) local_unnamed_addr #5

declare zeroext i1 @_ZNK4GURL8SchemeIsEN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%class.GURL*, i8*, i64) local_unnamed_addr #2

declare zeroext i1 @_ZN4base8internal17NeedsLazyInstanceEPl(i64*) local_unnamed_addr #2

declare void @_ZN4base8internal20CompleteLazyInstanceEPllPFvPvES2_(i64*, i64, void (i8*)*, i8*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal7InvokerINS0_9BindStateIPFvvEJEEES3_E7RunOnceEPNS0_13BindStateBaseE(%"class.base::internal::BindStateBase"*) #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1
  %3 = bitcast %"class.base::internal::BindStateBase"* %2 to void ()**
  %4 = load void ()*, void ()** %3, align 8
  tail call void %4() #8
  ret void
}

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #6

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal9BindStateIPFvvEJEE7DestroyEPKNS0_13BindStateBaseE(%"class.base::internal::BindStateBase"*) #0 comdat align 2 {
  %2 = icmp eq %"class.base::internal::BindStateBase"* %0, null
  br i1 %2, label %5, label %3

3:                                                ; preds = %1
  %4 = bitcast %"class.base::internal::BindStateBase"* %0 to i8*
  tail call void @_ZdlPv(i8* %4) #9
  br label %5

5:                                                ; preds = %3, %1
  ret void
}

declare void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_E(%"class.base::internal::BindStateBase"*, void ()*, void (%"class.base::internal::BindStateBase"*)*) unnamed_addr #2

; Function Attrs: inlinehint nounwind ssp uwtable
define internal void @_ZN12_GLOBAL__N_122TCPServerSocketFactoryD2Ev(%"class.(anonymous namespace)::TCPServerSocketFactory"* nocapture) unnamed_addr #7 align 2 {
  %2 = getelementptr inbounds %"class.(anonymous namespace)::TCPServerSocketFactory", %"class.(anonymous namespace)::TCPServerSocketFactory"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN12_GLOBAL__N_122TCPServerSocketFactoryE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.(anonymous namespace)::TCPServerSocketFactory", %"class.(anonymous namespace)::TCPServerSocketFactory"* %0, i64 0, i32 1
  %4 = bitcast %"class.std::__1::basic_string"* %3 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %5 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %4, i64 0, i32 1, i32 0
  %6 = load i8, i8* %5, align 1
  %7 = icmp slt i8 %6, 0
  br i1 %7, label %8, label %11

8:                                                ; preds = %1
  %9 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %10 = load i8*, i8** %9, align 8
  tail call void @_ZdlPv(i8* %10) #9
  br label %11

11:                                               ; preds = %1, %8
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define internal void @_ZN12_GLOBAL__N_122TCPServerSocketFactoryD0Ev(%"class.(anonymous namespace)::TCPServerSocketFactory"*) unnamed_addr #7 align 2 {
  %2 = getelementptr inbounds %"class.(anonymous namespace)::TCPServerSocketFactory", %"class.(anonymous namespace)::TCPServerSocketFactory"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN12_GLOBAL__N_122TCPServerSocketFactoryE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.(anonymous namespace)::TCPServerSocketFactory", %"class.(anonymous namespace)::TCPServerSocketFactory"* %0, i64 0, i32 1
  %4 = bitcast %"class.std::__1::basic_string"* %3 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %5 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %4, i64 0, i32 1, i32 0
  %6 = load i8, i8* %5, align 1
  %7 = icmp slt i8 %6, 0
  br i1 %7, label %8, label %11

8:                                                ; preds = %1
  %9 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %10 = load i8*, i8** %9, align 8
  tail call void @_ZdlPv(i8* %10) #9
  br label %11

11:                                               ; preds = %1, %8
  %12 = bitcast %"class.(anonymous namespace)::TCPServerSocketFactory"* %0 to i8*
  tail call void @_ZdlPv(i8* %12) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal %"class.net::ServerSocket"* @_ZN12_GLOBAL__N_122TCPServerSocketFactory19CreateForHttpServerEv(%"class.(anonymous namespace)::TCPServerSocketFactory"* nocapture readonly) unnamed_addr #0 align 2 {
  %2 = alloca %"struct.net::NetLogSource", align 8
  %3 = tail call i8* @_Znwm(i64 48) #9
  %4 = bitcast i8* %3 to %"class.net::TCPServerSocket"*
  %5 = bitcast %"struct.net::NetLogSource"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %5) #8
  call void @_ZN3net12NetLogSourceC1Ev(%"struct.net::NetLogSource"* nonnull %2) #8
  call void @_ZN3net15TCPServerSocketC1EPNS_6NetLogERKNS_12NetLogSourceE(%"class.net::TCPServerSocket"* nonnull %4, %"class.net::NetLog"* null, %"struct.net::NetLogSource"* nonnull dereferenceable(16) %2) #8
  %6 = bitcast i8* %3 to %"class.net::ServerSocket"*
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %5) #8
  %7 = getelementptr inbounds %"class.(anonymous namespace)::TCPServerSocketFactory", %"class.(anonymous namespace)::TCPServerSocketFactory"* %0, i64 0, i32 2
  %8 = load i16, i16* %7, align 8
  %9 = zext i16 %8 to i32
  %10 = call fastcc %"class.net::ServerSocket"* @_ZN12_GLOBAL__N_122TCPServerSocketFactory27CreateLocalHostServerSocketEi(i32 %9)
  %11 = bitcast i8* %3 to void (%"class.net::ServerSocket"*)***
  %12 = load void (%"class.net::ServerSocket"*)**, void (%"class.net::ServerSocket"*)*** %11, align 8
  %13 = getelementptr inbounds void (%"class.net::ServerSocket"*)*, void (%"class.net::ServerSocket"*)** %12, i64 1
  %14 = load void (%"class.net::ServerSocket"*)*, void (%"class.net::ServerSocket"*)** %13, align 8
  call void %14(%"class.net::ServerSocket"* nonnull %6) #8
  ret %"class.net::ServerSocket"* %10
}

; Function Attrs: nounwind ssp uwtable
define internal %"class.net::ServerSocket"* @_ZN12_GLOBAL__N_122TCPServerSocketFactory18CreateForTetheringEPNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.(anonymous namespace)::TCPServerSocketFactory"* nocapture, %"class.std::__1::basic_string"* nocapture) unnamed_addr #0 align 2 {
  %3 = alloca %"class.std::__1::basic_string", align 8
  %4 = load atomic i64, i64* getelementptr inbounds (%"class.base::LazyInstance", %"class.base::LazyInstance"* @_ZN12_GLOBAL__N_119g_tethering_enabledE, i64 0, i32 0) acquire, align 8
  %5 = icmp ugt i64 %4, 1
  br i1 %5, label %11, label %6

6:                                                ; preds = %2
  %7 = tail call zeroext i1 @_ZN4base8internal17NeedsLazyInstanceEPl(i64* getelementptr inbounds (%"class.base::LazyInstance", %"class.base::LazyInstance"* @_ZN12_GLOBAL__N_119g_tethering_enabledE, i64 0, i32 0)) #8
  br i1 %7, label %8, label %9

8:                                                ; preds = %6
  store i8 0, i8* getelementptr inbounds (%"class.base::LazyInstance", %"class.base::LazyInstance"* @_ZN12_GLOBAL__N_119g_tethering_enabledE, i64 0, i32 1, i64 0), align 8
  tail call void @_ZN4base8internal20CompleteLazyInstanceEPllPFvPvES2_(i64* getelementptr inbounds (%"class.base::LazyInstance", %"class.base::LazyInstance"* @_ZN12_GLOBAL__N_119g_tethering_enabledE, i64 0, i32 0), i64 ptrtoint (i8* getelementptr inbounds (%"class.base::LazyInstance", %"class.base::LazyInstance"* @_ZN12_GLOBAL__N_119g_tethering_enabledE, i64 0, i32 1, i64 0) to i64), void (i8*)* null, i8* bitcast (%"class.base::LazyInstance"* @_ZN12_GLOBAL__N_119g_tethering_enabledE to i8*)) #8
  br label %11

9:                                                ; preds = %6
  %10 = load atomic i64, i64* getelementptr inbounds (%"class.base::LazyInstance", %"class.base::LazyInstance"* @_ZN12_GLOBAL__N_119g_tethering_enabledE, i64 0, i32 0) acquire, align 8
  br label %11

11:                                               ; preds = %2, %8, %9
  %12 = phi i64 [ %4, %2 ], [ ptrtoint (i8* getelementptr inbounds (%"class.base::LazyInstance", %"class.base::LazyInstance"* @_ZN12_GLOBAL__N_119g_tethering_enabledE, i64 0, i32 1, i64 0) to i64), %8 ], [ %10, %9 ]
  %13 = inttoptr i64 %12 to i8*
  %14 = load i8, i8* %13, align 1, !range !7
  %15 = icmp eq i8 %14, 0
  br i1 %15, label %36, label %16

16:                                               ; preds = %11
  %17 = getelementptr inbounds %"class.(anonymous namespace)::TCPServerSocketFactory", %"class.(anonymous namespace)::TCPServerSocketFactory"* %0, i64 0, i32 3
  %18 = load i16, i16* %17, align 2
  %19 = icmp eq i16 %18, 9444
  br i1 %19, label %20, label %21

20:                                               ; preds = %16
  store i16 9333, i16* %17, align 2
  br label %21

21:                                               ; preds = %20, %16
  %22 = phi i16 [ 9333, %20 ], [ %18, %16 ]
  %23 = add i16 %22, 1
  store i16 %23, i16* %17, align 2
  %24 = bitcast %"class.std::__1::basic_string"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %24) #8
  %25 = zext i16 %23 to i32
  call void @_ZN4base14NumberToStringEi(%"class.std::__1::basic_string"* nonnull sret %3, i32 %25) #8
  %26 = bitcast %"class.std::__1::basic_string"* %1 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %27 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %26, i64 0, i32 1, i32 0
  %28 = load i8, i8* %27, align 1
  %29 = icmp slt i8 %28, 0
  br i1 %29, label %30, label %33

30:                                               ; preds = %21
  %31 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %32 = load i8*, i8** %31, align 8
  call void @_ZdlPv(i8* %32) #9
  br label %33

33:                                               ; preds = %30, %21
  %34 = bitcast %"class.std::__1::basic_string"* %1 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %34, i8* nonnull align 8 %24, i64 24, i1 false) #8
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %24) #8
  %35 = call fastcc %"class.net::ServerSocket"* @_ZN12_GLOBAL__N_122TCPServerSocketFactory27CreateLocalHostServerSocketEi(i32 %25)
  br label %36

36:                                               ; preds = %11, %33
  %37 = phi %"class.net::ServerSocket"* [ %35, %33 ], [ null, %11 ]
  ret %"class.net::ServerSocket"* %37
}

declare void @_ZN3net12NetLogSourceC1Ev(%"struct.net::NetLogSource"*) unnamed_addr #2

declare void @_ZN3net15TCPServerSocketC1EPNS_6NetLogERKNS_12NetLogSourceE(%"class.net::TCPServerSocket"*, %"class.net::NetLog"*, %"struct.net::NetLogSource"* dereferenceable(16)) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define internal fastcc %"class.net::ServerSocket"* @_ZN12_GLOBAL__N_122TCPServerSocketFactory27CreateLocalHostServerSocketEi(i32) unnamed_addr #0 align 2 {
  %2 = alloca %"struct.net::NetLogSource", align 8
  %3 = alloca %"class.std::__1::basic_string", align 8
  %4 = alloca %"class.std::__1::basic_string", align 8
  %5 = tail call i8* @_Znwm(i64 48) #9
  %6 = bitcast i8* %5 to %"class.net::TCPServerSocket"*
  %7 = bitcast %"struct.net::NetLogSource"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %7) #8
  call void @_ZN3net12NetLogSourceC1Ev(%"struct.net::NetLogSource"* nonnull %2) #8
  call void @_ZN3net15TCPServerSocketC1EPNS_6NetLogERKNS_12NetLogSourceE(%"class.net::TCPServerSocket"* nonnull %6, %"class.net::NetLog"* null, %"struct.net::NetLogSource"* nonnull dereferenceable(16) %2) #8
  %8 = bitcast i8* %5 to %"class.net::ServerSocket"*
  %9 = ptrtoint i8* %5 to i64
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %7) #8
  %10 = bitcast %"class.std::__1::basic_string"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %10) #8
  %11 = bitcast %"class.std::__1::basic_string"* %3 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %12 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %11, i64 0, i32 1, i32 0
  store i8 9, i8* %12, align 1
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %10, i8* align 1 getelementptr inbounds ([10 x i8], [10 x i8]* @.str.2, i64 0, i64 0), i64 9, i1 false) #8
  %13 = getelementptr inbounds i8, i8* %10, i64 9
  store i8 0, i8* %13, align 1
  %14 = trunc i32 %0 to i16
  %15 = bitcast i8* %5 to i32 (%"class.net::ServerSocket"*, %"class.std::__1::basic_string"*, i16, i32)***
  %16 = load i32 (%"class.net::ServerSocket"*, %"class.std::__1::basic_string"*, i16, i32)**, i32 (%"class.net::ServerSocket"*, %"class.std::__1::basic_string"*, i16, i32)*** %15, align 8
  %17 = getelementptr inbounds i32 (%"class.net::ServerSocket"*, %"class.std::__1::basic_string"*, i16, i32)*, i32 (%"class.net::ServerSocket"*, %"class.std::__1::basic_string"*, i16, i32)** %16, i64 3
  %18 = load i32 (%"class.net::ServerSocket"*, %"class.std::__1::basic_string"*, i16, i32)*, i32 (%"class.net::ServerSocket"*, %"class.std::__1::basic_string"*, i16, i32)** %17, align 8
  %19 = call i32 %18(%"class.net::ServerSocket"* nonnull %8, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %3, i16 zeroext %14, i32 10) #8
  %20 = icmp eq i32 %19, 0
  %21 = load i8, i8* %12, align 1
  %22 = icmp slt i8 %21, 0
  br i1 %22, label %23, label %26

23:                                               ; preds = %1
  %24 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %25 = load i8*, i8** %24, align 8
  call void @_ZdlPv(i8* %25) #9
  br label %26

26:                                               ; preds = %1, %23
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %10) #8
  br i1 %20, label %48, label %27

27:                                               ; preds = %26
  %28 = bitcast %"class.std::__1::basic_string"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %28) #8
  %29 = bitcast %"class.std::__1::basic_string"* %4 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %30 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %29, i64 0, i32 1, i32 0
  store i8 3, i8* %30, align 1
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %28, i8* align 1 getelementptr inbounds ([4 x i8], [4 x i8]* @.str.3, i64 0, i64 0), i64 3, i1 false) #8
  %31 = getelementptr inbounds i8, i8* %28, i64 3
  store i8 0, i8* %31, align 1
  %32 = load i32 (%"class.net::ServerSocket"*, %"class.std::__1::basic_string"*, i16, i32)**, i32 (%"class.net::ServerSocket"*, %"class.std::__1::basic_string"*, i16, i32)*** %15, align 8
  %33 = getelementptr inbounds i32 (%"class.net::ServerSocket"*, %"class.std::__1::basic_string"*, i16, i32)*, i32 (%"class.net::ServerSocket"*, %"class.std::__1::basic_string"*, i16, i32)** %32, i64 3
  %34 = load i32 (%"class.net::ServerSocket"*, %"class.std::__1::basic_string"*, i16, i32)*, i32 (%"class.net::ServerSocket"*, %"class.std::__1::basic_string"*, i16, i32)** %33, align 8
  %35 = call i32 %34(%"class.net::ServerSocket"* nonnull %8, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %4, i16 zeroext %14, i32 10) #8
  %36 = icmp eq i32 %35, 0
  %37 = load i8, i8* %30, align 1
  %38 = icmp slt i8 %37, 0
  br i1 %38, label %39, label %42

39:                                               ; preds = %27
  %40 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %41 = load i8*, i8** %40, align 8
  call void @_ZdlPv(i8* %41) #9
  br label %42

42:                                               ; preds = %27, %39
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %28) #8
  br i1 %36, label %48, label %43

43:                                               ; preds = %42
  %44 = bitcast i8* %5 to void (%"class.net::ServerSocket"*)***
  %45 = load void (%"class.net::ServerSocket"*)**, void (%"class.net::ServerSocket"*)*** %44, align 8
  %46 = getelementptr inbounds void (%"class.net::ServerSocket"*)*, void (%"class.net::ServerSocket"*)** %45, i64 1
  %47 = load void (%"class.net::ServerSocket"*)*, void (%"class.net::ServerSocket"*)** %46, align 8
  call void %47(%"class.net::ServerSocket"* nonnull %8) #8
  br label %48

48:                                               ; preds = %42, %26, %43
  %49 = phi i64 [ 0, %43 ], [ %9, %26 ], [ %9, %42 ]
  %50 = inttoptr i64 %49 to %"class.net::ServerSocket"*
  ret %"class.net::ServerSocket"* %50
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

declare void @_ZN4base14NumberToStringEi(%"class.std::__1::basic_string"* sret, i32) local_unnamed_addr #2

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { argmemonly nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nounwind }
attributes #9 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!3, !5}
!3 = distinct !{!3, !4, !"_ZN4base8internal8BindImplINS_12OnceCallbackEPFvvEJEEEDcOT0_DpOT1_: argument 0"}
!4 = distinct !{!4, !"_ZN4base8internal8BindImplINS_12OnceCallbackEPFvvEJEEEDcOT0_DpOT1_"}
!5 = distinct !{!5, !6, !"_ZN4base8BindOnceIPFvvEJEEENS_12OnceCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOS6_DpOS7_: argument 0"}
!6 = distinct !{!6, !"_ZN4base8BindOnceIPFvvEJEEENS_12OnceCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOS6_DpOS7_"}
!7 = !{i8 0, i8 2}
