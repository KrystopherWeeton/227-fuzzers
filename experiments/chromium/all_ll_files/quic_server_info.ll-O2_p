; ModuleID = '../../net/quic/quic_server_info.cc'
source_filename = "../../net/quic/quic_server_info.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"struct.net::QuicServerInfo::State" = type { %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::vector", %"class.std::__1::basic_string" }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"*, %"class.std::__1::__compressed_pair.1" }
%"class.std::__1::__compressed_pair.1" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"struct.std::__1::__compressed_pair_elem.2" = type { %"class.std::__1::basic_string"* }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.net::QuicServerInfo" = type { i32 (...)**, %"struct.net::QuicServerInfo::State", %"class.quic::QuicServerId" }
%"class.quic::QuicServerId" = type <{ %"class.std::__1::basic_string", i16, i8, [5 x i8] }>
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }
%"class.base::Pickle" = type { i32 (...)**, %"struct.base::Pickle::Header"*, i64, i64, i64 }
%"struct.base::Pickle::Header" = type { i32 }
%"class.base::PickleIterator" = type { i8*, i64, i64 }
%"class.base::BasicStringPiece" = type { i8*, i64 }
%"class.std::__1::__basic_string_common" = type { i8 }
%"class.std::__1::__vector_base_common" = type { i8 }

$_ZNSt3__16vectorINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS4_IS6_EEE7reserveEm = comdat any

$_ZNSt3__16vectorINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS4_IS6_EEE21__push_back_slow_pathIRKS6_EEvOT_ = comdat any

@_ZTVN3net14QuicServerInfoE = hidden unnamed_addr constant { [7 x i8*] } { [7 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.net::QuicServerInfo"*)* @_ZN3net14QuicServerInfoD2Ev to i8*), i8* bitcast (void (%"class.net::QuicServerInfo"*)* @_ZN3net14QuicServerInfoD0Ev to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*)] }, align 8

@_ZN3net14QuicServerInfo5StateC1Ev = hidden unnamed_addr alias void (%"struct.net::QuicServerInfo::State"*), void (%"struct.net::QuicServerInfo::State"*)* @_ZN3net14QuicServerInfo5StateC2Ev
@_ZN3net14QuicServerInfo5StateD1Ev = hidden unnamed_addr alias void (%"struct.net::QuicServerInfo::State"*), void (%"struct.net::QuicServerInfo::State"*)* @_ZN3net14QuicServerInfo5StateD2Ev
@_ZN3net14QuicServerInfoD1Ev = hidden unnamed_addr alias void (%"class.net::QuicServerInfo"*), void (%"class.net::QuicServerInfo"*)* @_ZN3net14QuicServerInfoD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net14QuicServerInfo5StateC2Ev(%"struct.net::QuicServerInfo::State"* nocapture) unnamed_addr #0 align 2 {
  %2 = bitcast %"struct.net::QuicServerInfo::State"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %2, i8 0, i64 144, i1 false)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net14QuicServerInfo5StateD2Ev(%"struct.net::QuicServerInfo::State"* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"struct.net::QuicServerInfo::State", %"struct.net::QuicServerInfo::State"* %0, i64 0, i32 5
  %3 = bitcast %"class.std::__1::basic_string"* %2 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %4 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %3, i64 0, i32 1, i32 0
  %5 = load i8, i8* %4, align 1
  %6 = icmp slt i8 %5, 0
  br i1 %6, label %7, label %10

7:                                                ; preds = %1
  %8 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %9 = load i8*, i8** %8, align 8
  tail call void @_ZdlPv(i8* %9) #12
  br label %10

10:                                               ; preds = %1, %7
  %11 = getelementptr inbounds %"struct.net::QuicServerInfo::State", %"struct.net::QuicServerInfo::State"* %0, i64 0, i32 4
  %12 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %11, i64 0, i32 0, i32 0
  %13 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %12, align 8
  %14 = icmp eq %"class.std::__1::basic_string"* %13, null
  br i1 %14, label %37, label %15

15:                                               ; preds = %10
  %16 = bitcast %"class.std::__1::basic_string"* %13 to i8*
  %17 = getelementptr inbounds %"struct.net::QuicServerInfo::State", %"struct.net::QuicServerInfo::State"* %0, i64 0, i32 4, i32 0, i32 1
  %18 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %17, align 8
  %19 = icmp eq %"class.std::__1::basic_string"* %18, %13
  br i1 %19, label %35, label %20

20:                                               ; preds = %15, %30
  %21 = phi %"class.std::__1::basic_string"* [ %22, %30 ], [ %18, %15 ]
  %22 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %21, i64 -1
  %23 = bitcast %"class.std::__1::basic_string"* %22 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %24 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %23, i64 0, i32 1, i32 0
  %25 = load i8, i8* %24, align 1
  %26 = icmp slt i8 %25, 0
  br i1 %26, label %27, label %30

27:                                               ; preds = %20
  %28 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %22, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %29 = load i8*, i8** %28, align 8
  tail call void @_ZdlPv(i8* %29) #12
  br label %30

30:                                               ; preds = %27, %20
  %31 = icmp eq %"class.std::__1::basic_string"* %22, %13
  br i1 %31, label %32, label %20

32:                                               ; preds = %30
  %33 = bitcast %"class.std::__1::vector"* %11 to i8**
  %34 = load i8*, i8** %33, align 8
  br label %35

35:                                               ; preds = %32, %15
  %36 = phi i8* [ %34, %32 ], [ %16, %15 ]
  store %"class.std::__1::basic_string"* %13, %"class.std::__1::basic_string"** %17, align 8
  tail call void @_ZdlPv(i8* %36) #12
  br label %37

37:                                               ; preds = %10, %35
  %38 = getelementptr inbounds %"struct.net::QuicServerInfo::State", %"struct.net::QuicServerInfo::State"* %0, i64 0, i32 3
  %39 = bitcast %"class.std::__1::basic_string"* %38 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %40 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %39, i64 0, i32 1, i32 0
  %41 = load i8, i8* %40, align 1
  %42 = icmp slt i8 %41, 0
  br i1 %42, label %43, label %46

43:                                               ; preds = %37
  %44 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %38, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %45 = load i8*, i8** %44, align 8
  tail call void @_ZdlPv(i8* %45) #12
  br label %46

46:                                               ; preds = %37, %43
  %47 = getelementptr inbounds %"struct.net::QuicServerInfo::State", %"struct.net::QuicServerInfo::State"* %0, i64 0, i32 2
  %48 = bitcast %"class.std::__1::basic_string"* %47 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %49 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %48, i64 0, i32 1, i32 0
  %50 = load i8, i8* %49, align 1
  %51 = icmp slt i8 %50, 0
  br i1 %51, label %52, label %55

52:                                               ; preds = %46
  %53 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %47, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %54 = load i8*, i8** %53, align 8
  tail call void @_ZdlPv(i8* %54) #12
  br label %55

55:                                               ; preds = %46, %52
  %56 = getelementptr inbounds %"struct.net::QuicServerInfo::State", %"struct.net::QuicServerInfo::State"* %0, i64 0, i32 1
  %57 = bitcast %"class.std::__1::basic_string"* %56 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %58 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %57, i64 0, i32 1, i32 0
  %59 = load i8, i8* %58, align 1
  %60 = icmp slt i8 %59, 0
  br i1 %60, label %61, label %64

61:                                               ; preds = %55
  %62 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %56, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %63 = load i8*, i8** %62, align 8
  tail call void @_ZdlPv(i8* %63) #12
  br label %64

64:                                               ; preds = %55, %61
  %65 = bitcast %"struct.net::QuicServerInfo::State"* %0 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %66 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %65, i64 0, i32 1, i32 0
  %67 = load i8, i8* %66, align 1
  %68 = icmp slt i8 %67, 0
  br i1 %68, label %69, label %72

69:                                               ; preds = %64
  %70 = getelementptr inbounds %"struct.net::QuicServerInfo::State", %"struct.net::QuicServerInfo::State"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %71 = load i8*, i8** %70, align 8
  tail call void @_ZdlPv(i8* %71) #12
  br label %72

72:                                               ; preds = %64, %69
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net14QuicServerInfo5State5ClearEv(%"struct.net::QuicServerInfo::State"*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"struct.net::QuicServerInfo::State", %"struct.net::QuicServerInfo::State"* %0, i64 0, i32 0
  %3 = getelementptr inbounds %"struct.net::QuicServerInfo::State", %"struct.net::QuicServerInfo::State"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %4 = load i8*, i8** %3, align 8
  %5 = getelementptr inbounds %"struct.net::QuicServerInfo::State", %"struct.net::QuicServerInfo::State"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %6 = load i64, i64* %5, align 8
  %7 = bitcast %"struct.net::QuicServerInfo::State"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %7, i8 0, i64 24, i1 false) #13
  tail call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7reserveEm(%"class.std::__1::basic_string"* %2, i64 0) #13
  %8 = lshr i64 %6, 56
  %9 = trunc i64 %8 to i8
  %10 = icmp slt i8 %9, 0
  br i1 %10, label %11, label %12

11:                                               ; preds = %1
  tail call void @_ZdlPv(i8* %4) #12
  br label %12

12:                                               ; preds = %1, %11
  %13 = getelementptr inbounds %"struct.net::QuicServerInfo::State", %"struct.net::QuicServerInfo::State"* %0, i64 0, i32 1
  %14 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %13, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %15 = load i8*, i8** %14, align 8
  %16 = getelementptr inbounds %"struct.net::QuicServerInfo::State", %"struct.net::QuicServerInfo::State"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %17 = load i64, i64* %16, align 8
  %18 = bitcast %"class.std::__1::basic_string"* %13 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %18, i8 0, i64 24, i1 false) #13
  tail call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7reserveEm(%"class.std::__1::basic_string"* %13, i64 0) #13
  %19 = lshr i64 %17, 56
  %20 = trunc i64 %19 to i8
  %21 = icmp slt i8 %20, 0
  br i1 %21, label %22, label %23

22:                                               ; preds = %12
  tail call void @_ZdlPv(i8* %15) #12
  br label %23

23:                                               ; preds = %12, %22
  %24 = getelementptr inbounds %"struct.net::QuicServerInfo::State", %"struct.net::QuicServerInfo::State"* %0, i64 0, i32 2
  %25 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %24, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %26 = load i8*, i8** %25, align 8
  %27 = getelementptr inbounds %"struct.net::QuicServerInfo::State", %"struct.net::QuicServerInfo::State"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %28 = load i64, i64* %27, align 8
  %29 = bitcast %"class.std::__1::basic_string"* %24 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %29, i8 0, i64 24, i1 false) #13
  tail call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7reserveEm(%"class.std::__1::basic_string"* %24, i64 0) #13
  %30 = lshr i64 %28, 56
  %31 = trunc i64 %30 to i8
  %32 = icmp slt i8 %31, 0
  br i1 %32, label %33, label %34

33:                                               ; preds = %23
  tail call void @_ZdlPv(i8* %26) #12
  br label %34

34:                                               ; preds = %23, %33
  %35 = getelementptr inbounds %"struct.net::QuicServerInfo::State", %"struct.net::QuicServerInfo::State"* %0, i64 0, i32 3
  %36 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %35, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %37 = load i8*, i8** %36, align 8
  %38 = getelementptr inbounds %"struct.net::QuicServerInfo::State", %"struct.net::QuicServerInfo::State"* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %39 = load i64, i64* %38, align 8
  %40 = bitcast %"class.std::__1::basic_string"* %35 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %40, i8 0, i64 24, i1 false) #13
  tail call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7reserveEm(%"class.std::__1::basic_string"* %35, i64 0) #13
  %41 = lshr i64 %39, 56
  %42 = trunc i64 %41 to i8
  %43 = icmp slt i8 %42, 0
  br i1 %43, label %44, label %45

44:                                               ; preds = %34
  tail call void @_ZdlPv(i8* %37) #12
  br label %45

45:                                               ; preds = %34, %44
  %46 = getelementptr inbounds %"struct.net::QuicServerInfo::State", %"struct.net::QuicServerInfo::State"* %0, i64 0, i32 5
  %47 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %46, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %48 = load i8*, i8** %47, align 8
  %49 = getelementptr inbounds %"struct.net::QuicServerInfo::State", %"struct.net::QuicServerInfo::State"* %0, i64 0, i32 5, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %50 = load i64, i64* %49, align 8
  %51 = bitcast %"class.std::__1::basic_string"* %46 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %51, i8 0, i64 24, i1 false) #13
  tail call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7reserveEm(%"class.std::__1::basic_string"* %46, i64 0) #13
  %52 = lshr i64 %50, 56
  %53 = trunc i64 %52 to i8
  %54 = icmp slt i8 %53, 0
  br i1 %54, label %55, label %56

55:                                               ; preds = %45
  tail call void @_ZdlPv(i8* %48) #12
  br label %56

56:                                               ; preds = %45, %55
  %57 = getelementptr inbounds %"struct.net::QuicServerInfo::State", %"struct.net::QuicServerInfo::State"* %0, i64 0, i32 4
  %58 = bitcast %"class.std::__1::vector"* %57 to i64*
  %59 = load i64, i64* %58, align 8
  store i64 0, i64* %58, align 8
  %60 = getelementptr inbounds %"struct.net::QuicServerInfo::State", %"struct.net::QuicServerInfo::State"* %0, i64 0, i32 4, i32 0, i32 1
  %61 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %60, align 8
  %62 = bitcast %"class.std::__1::basic_string"** %60 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %62, i8 0, i64 16, i1 false) #13
  tail call void @_ZNSt3__16vectorINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS4_IS6_EEE7reserveEm(%"class.std::__1::vector"* %57, i64 0) #13
  %63 = inttoptr i64 %59 to %"class.std::__1::basic_string"*
  %64 = icmp eq i64 %59, 0
  br i1 %64, label %81, label %65

65:                                               ; preds = %56
  %66 = icmp eq %"class.std::__1::basic_string"* %61, %63
  br i1 %66, label %79, label %67

67:                                               ; preds = %65, %77
  %68 = phi %"class.std::__1::basic_string"* [ %69, %77 ], [ %61, %65 ]
  %69 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %68, i64 -1
  %70 = bitcast %"class.std::__1::basic_string"* %69 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %71 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %70, i64 0, i32 1, i32 0
  %72 = load i8, i8* %71, align 1
  %73 = icmp slt i8 %72, 0
  br i1 %73, label %74, label %77

74:                                               ; preds = %67
  %75 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %69, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %76 = load i8*, i8** %75, align 8
  tail call void @_ZdlPv(i8* %76) #12
  br label %77

77:                                               ; preds = %74, %67
  %78 = icmp eq %"class.std::__1::basic_string"* %69, %63
  br i1 %78, label %79, label %67

79:                                               ; preds = %77, %65
  %80 = inttoptr i64 %59 to i8*
  tail call void @_ZdlPv(i8* %80) #12
  br label %81

81:                                               ; preds = %56, %79
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net14QuicServerInfoC2ERKN4quic12QuicServerIdE(%"class.net::QuicServerInfo"*, %"class.quic::QuicServerId"* nocapture readonly dereferenceable(32)) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.net::QuicServerInfo", %"class.net::QuicServerInfo"* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVN3net14QuicServerInfoE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %3, align 8
  %4 = getelementptr inbounds %"class.net::QuicServerInfo", %"class.net::QuicServerInfo"* %0, i64 0, i32 1
  %5 = bitcast %"struct.net::QuicServerInfo::State"* %4 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %5, i8 0, i64 144, i1 false) #13
  %6 = getelementptr inbounds %"class.net::QuicServerInfo", %"class.net::QuicServerInfo"* %0, i64 0, i32 2
  %7 = bitcast %"class.quic::QuicServerId"* %1 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %8 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %7, i64 0, i32 1, i32 0
  %9 = load i8, i8* %8, align 1
  %10 = icmp slt i8 %9, 0
  br i1 %10, label %14, label %11

11:                                               ; preds = %2
  %12 = bitcast %"class.quic::QuicServerId"* %6 to i8*
  %13 = bitcast %"class.quic::QuicServerId"* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %12, i8* align 8 %13, i64 24, i1 false) #13
  br label %20

14:                                               ; preds = %2
  %15 = getelementptr inbounds %"class.quic::QuicServerId", %"class.quic::QuicServerId"* %6, i64 0, i32 0
  %16 = getelementptr inbounds %"class.quic::QuicServerId", %"class.quic::QuicServerId"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %17 = load i8*, i8** %16, align 8
  %18 = getelementptr inbounds %"class.quic::QuicServerId", %"class.quic::QuicServerId"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %19 = load i64, i64* %18, align 8
  tail call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* %15, i8* %17, i64 %19) #13
  br label %20

20:                                               ; preds = %11, %14
  %21 = getelementptr inbounds %"class.net::QuicServerInfo", %"class.net::QuicServerInfo"* %0, i64 0, i32 2, i32 1
  %22 = getelementptr inbounds %"class.quic::QuicServerId", %"class.quic::QuicServerId"* %1, i64 0, i32 1
  %23 = bitcast i16* %21 to i8*
  %24 = bitcast i16* %22 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %23, i8* align 8 %24, i64 3, i1 false) #13
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net14QuicServerInfoD2Ev(%"class.net::QuicServerInfo"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.net::QuicServerInfo", %"class.net::QuicServerInfo"* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVN3net14QuicServerInfoE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.net::QuicServerInfo", %"class.net::QuicServerInfo"* %0, i64 0, i32 2
  tail call void @_ZN4quic12QuicServerIdD1Ev(%"class.quic::QuicServerId"* %3) #13
  %4 = getelementptr inbounds %"class.net::QuicServerInfo", %"class.net::QuicServerInfo"* %0, i64 0, i32 1
  tail call void @_ZN3net14QuicServerInfo5StateD2Ev(%"struct.net::QuicServerInfo::State"* %4) #13
  ret void
}

; Function Attrs: nounwind
declare void @_ZN4quic12QuicServerIdD1Ev(%"class.quic::QuicServerId"*) unnamed_addr #1

; Function Attrs: noreturn nounwind ssp uwtable
define hidden void @_ZN3net14QuicServerInfoD0Ev(%"class.net::QuicServerInfo"* nocapture readnone) unnamed_addr #2 align 2 {
  tail call void @llvm.trap() #14
  unreachable
}

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #3

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden dereferenceable(144) %"struct.net::QuicServerInfo::State"* @_ZNK3net14QuicServerInfo5stateEv(%"class.net::QuicServerInfo"* readnone) local_unnamed_addr #4 align 2 {
  %2 = getelementptr inbounds %"class.net::QuicServerInfo", %"class.net::QuicServerInfo"* %0, i64 0, i32 1
  ret %"struct.net::QuicServerInfo::State"* %2
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden %"struct.net::QuicServerInfo::State"* @_ZN3net14QuicServerInfo13mutable_stateEv(%"class.net::QuicServerInfo"* readnone) local_unnamed_addr #4 align 2 {
  %2 = getelementptr inbounds %"class.net::QuicServerInfo", %"class.net::QuicServerInfo"* %0, i64 0, i32 1
  ret %"struct.net::QuicServerInfo::State"* %2
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN3net14QuicServerInfo5ParseERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.net::QuicServerInfo"*, %"class.std::__1::basic_string"* dereferenceable(24)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.net::QuicServerInfo", %"class.net::QuicServerInfo"* %0, i64 0, i32 1
  tail call void @_ZN3net14QuicServerInfo5State5ClearEv(%"struct.net::QuicServerInfo::State"* %3)
  %4 = tail call zeroext i1 @_ZN3net14QuicServerInfo10ParseInnerERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.net::QuicServerInfo"* %0, %"class.std::__1::basic_string"* dereferenceable(24) %1)
  br i1 %4, label %6, label %5

5:                                                ; preds = %2
  tail call void @_ZN3net14QuicServerInfo5State5ClearEv(%"struct.net::QuicServerInfo::State"* %3)
  br label %6

6:                                                ; preds = %5, %2
  ret i1 %4
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #5

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN3net14QuicServerInfo10ParseInnerERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.net::QuicServerInfo"*, %"class.std::__1::basic_string"* dereferenceable(24)) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.base::Pickle", align 8
  %4 = alloca %"class.base::PickleIterator", align 8
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = alloca %"class.std::__1::basic_string", align 8
  %8 = bitcast %"class.std::__1::basic_string"* %1 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %9 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %8, i64 0, i32 1, i32 0
  %10 = load i8, i8* %9, align 1
  %11 = icmp slt i8 %10, 0
  %12 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %13 = load i64, i64* %12, align 8
  %14 = zext i8 %10 to i64
  %15 = select i1 %11, i64 %13, i64 %14
  %16 = icmp eq i64 %15, 0
  br i1 %16, label %97, label %17

17:                                               ; preds = %2
  %18 = bitcast %"class.base::Pickle"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %18) #13
  %19 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %20 = bitcast %"class.base::Pickle"* %3 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %20, i8 -86, i64 40, i1 false)
  %21 = load i8*, i8** %19, align 8
  %22 = bitcast %"class.std::__1::basic_string"* %1 to i8*
  %23 = select i1 %11, i8* %21, i8* %22
  call void @_ZN4base6PickleC1EPKcm(%"class.base::Pickle"* nonnull %3, i8* %23, i64 %15) #13
  %24 = bitcast %"class.base::PickleIterator"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %24) #13
  %25 = bitcast %"class.base::PickleIterator"* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %25, i8 -86, i64 24, i1 false)
  call void @_ZN4base14PickleIteratorC1ERKNS_6PickleE(%"class.base::PickleIterator"* nonnull %4, %"class.base::Pickle"* nonnull dereferenceable(40) %3) #13
  %26 = bitcast i32* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %26) #13
  store i32 -1, i32* %5, align 4
  %27 = call zeroext i1 @_ZN4base14PickleIterator7ReadIntEPi(%"class.base::PickleIterator"* nonnull %4, i32* nonnull %5) #13
  %28 = load i32, i32* %5, align 4
  %29 = icmp eq i32 %28, 2
  %30 = and i1 %27, %29
  br i1 %30, label %31, label %95

31:                                               ; preds = %17
  %32 = getelementptr inbounds %"class.net::QuicServerInfo", %"class.net::QuicServerInfo"* %0, i64 0, i32 1, i32 0
  %33 = call zeroext i1 @_ZN4base14PickleIterator10ReadStringEPNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.base::PickleIterator"* nonnull %4, %"class.std::__1::basic_string"* %32) #13
  br i1 %33, label %34, label %95

34:                                               ; preds = %31
  %35 = getelementptr inbounds %"class.net::QuicServerInfo", %"class.net::QuicServerInfo"* %0, i64 0, i32 1, i32 1
  %36 = call zeroext i1 @_ZN4base14PickleIterator10ReadStringEPNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.base::PickleIterator"* nonnull %4, %"class.std::__1::basic_string"* %35) #13
  br i1 %36, label %37, label %95

37:                                               ; preds = %34
  %38 = getelementptr inbounds %"class.net::QuicServerInfo", %"class.net::QuicServerInfo"* %0, i64 0, i32 1, i32 2
  %39 = call zeroext i1 @_ZN4base14PickleIterator10ReadStringEPNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.base::PickleIterator"* nonnull %4, %"class.std::__1::basic_string"* %38) #13
  br i1 %39, label %40, label %95

40:                                               ; preds = %37
  %41 = getelementptr inbounds %"class.net::QuicServerInfo", %"class.net::QuicServerInfo"* %0, i64 0, i32 1, i32 3
  %42 = call zeroext i1 @_ZN4base14PickleIterator10ReadStringEPNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.base::PickleIterator"* nonnull %4, %"class.std::__1::basic_string"* %41) #13
  br i1 %42, label %43, label %95

43:                                               ; preds = %40
  %44 = getelementptr inbounds %"class.net::QuicServerInfo", %"class.net::QuicServerInfo"* %0, i64 0, i32 1, i32 5
  %45 = call zeroext i1 @_ZN4base14PickleIterator10ReadStringEPNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.base::PickleIterator"* nonnull %4, %"class.std::__1::basic_string"* %44) #13
  br i1 %45, label %46, label %95

46:                                               ; preds = %43
  %47 = bitcast i32* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %47) #13
  store i32 -1431655766, i32* %6, align 4
  %48 = call zeroext i1 @_ZN4base14PickleIterator10ReadUInt32EPj(%"class.base::PickleIterator"* nonnull %4, i32* nonnull %6) #13
  br i1 %48, label %49, label %93

49:                                               ; preds = %46
  %50 = load i32, i32* %6, align 4
  %51 = icmp eq i32 %50, 0
  br i1 %51, label %93, label %52

52:                                               ; preds = %49
  %53 = bitcast %"class.std::__1::basic_string"* %7 to i8*
  %54 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %55 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %56 = getelementptr inbounds %"class.net::QuicServerInfo", %"class.net::QuicServerInfo"* %0, i64 0, i32 1, i32 4, i32 0, i32 1
  %57 = getelementptr inbounds %"class.net::QuicServerInfo", %"class.net::QuicServerInfo"* %0, i64 0, i32 1, i32 4, i32 0, i32 2, i32 0, i32 0
  %58 = bitcast %"class.std::__1::basic_string"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %59 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %58, i64 0, i32 1, i32 0
  %60 = bitcast %"class.std::__1::basic_string"** %56 to i64*
  %61 = getelementptr inbounds %"class.net::QuicServerInfo", %"class.net::QuicServerInfo"* %0, i64 0, i32 1, i32 4
  br label %65

62:                                               ; preds = %90
  %63 = load i32, i32* %6, align 4
  %64 = icmp ult i32 %92, %63
  br i1 %64, label %65, label %93

65:                                               ; preds = %52, %62
  %66 = phi i32 [ 0, %52 ], [ %92, %62 ]
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %53) #13
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %53, i8 0, i64 24, i1 false) #13
  %67 = call zeroext i1 @_ZN4base14PickleIterator10ReadStringEPNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.base::PickleIterator"* nonnull %4, %"class.std::__1::basic_string"* nonnull %7) #13
  br i1 %67, label %68, label %84

68:                                               ; preds = %65
  %69 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %56, align 8
  %70 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %57, align 8
  %71 = icmp eq %"class.std::__1::basic_string"* %69, %70
  br i1 %71, label %83, label %72

72:                                               ; preds = %68
  %73 = load i8, i8* %59, align 1
  %74 = icmp slt i8 %73, 0
  br i1 %74, label %77, label %75

75:                                               ; preds = %72
  %76 = bitcast %"class.std::__1::basic_string"* %69 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %76, i8* nonnull align 8 %53, i64 24, i1 false) #13
  br label %80

77:                                               ; preds = %72
  %78 = load i8*, i8** %54, align 8
  %79 = load i64, i64* %55, align 8
  call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* %69, i8* %78, i64 %79) #13
  br label %80

80:                                               ; preds = %77, %75
  %81 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %69, i64 1
  %82 = ptrtoint %"class.std::__1::basic_string"* %81 to i64
  store i64 %82, i64* %60, align 8
  br label %84

83:                                               ; preds = %68
  call void @_ZNSt3__16vectorINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS4_IS6_EEE21__push_back_slow_pathIRKS6_EEvOT_(%"class.std::__1::vector"* %61, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %7) #13
  br label %84

84:                                               ; preds = %83, %80, %65
  %85 = phi i32 [ 1, %65 ], [ 0, %80 ], [ 0, %83 ]
  %86 = load i8, i8* %59, align 1
  %87 = icmp slt i8 %86, 0
  br i1 %87, label %88, label %90

88:                                               ; preds = %84
  %89 = load i8*, i8** %54, align 8
  call void @_ZdlPv(i8* %89) #12
  br label %90

90:                                               ; preds = %84, %88
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %53) #13
  %91 = icmp eq i32 %85, 0
  %92 = add nuw i32 %66, 1
  br i1 %91, label %62, label %93

93:                                               ; preds = %62, %90, %49, %46
  %94 = phi i1 [ false, %46 ], [ true, %49 ], [ true, %62 ], [ false, %90 ]
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %47) #13
  br label %95

95:                                               ; preds = %43, %40, %37, %34, %31, %17, %93
  %96 = phi i1 [ %94, %93 ], [ false, %17 ], [ false, %31 ], [ false, %34 ], [ false, %37 ], [ false, %40 ], [ false, %43 ]
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %26) #13
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %24) #13
  call void @_ZN4base6PickleD1Ev(%"class.base::Pickle"* nonnull %3) #13
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %18) #13
  br label %97

97:                                               ; preds = %2, %95
  %98 = phi i1 [ %96, %95 ], [ false, %2 ]
  ret i1 %98
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #5

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #5

declare void @_ZN4base6PickleC1EPKcm(%"class.base::Pickle"*, i8*, i64) unnamed_addr #6

declare void @_ZN4base14PickleIteratorC1ERKNS_6PickleE(%"class.base::PickleIterator"*, %"class.base::Pickle"* dereferenceable(40)) unnamed_addr #6

declare zeroext i1 @_ZN4base14PickleIterator7ReadIntEPi(%"class.base::PickleIterator"*, i32*) local_unnamed_addr #6

declare zeroext i1 @_ZN4base14PickleIterator10ReadStringEPNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.base::PickleIterator"*, %"class.std::__1::basic_string"*) local_unnamed_addr #6

declare zeroext i1 @_ZN4base14PickleIterator10ReadUInt32EPj(%"class.base::PickleIterator"*, i32*) local_unnamed_addr #6

; Function Attrs: nounwind
declare void @_ZN4base6PickleD1Ev(%"class.base::Pickle"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net14QuicServerInfo9SerializeEv(%"class.std::__1::basic_string"* noalias sret, %"class.net::QuicServerInfo"*) local_unnamed_addr #0 align 2 {
  %3 = bitcast %"class.std::__1::basic_string"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %3, i8 -86, i64 24, i1 false)
  tail call void @_ZNK3net14QuicServerInfo14SerializeInnerEv(%"class.std::__1::basic_string"* sret %0, %"class.net::QuicServerInfo"* %1)
  %4 = getelementptr inbounds %"class.net::QuicServerInfo", %"class.net::QuicServerInfo"* %1, i64 0, i32 1
  tail call void @_ZN3net14QuicServerInfo5State5ClearEv(%"struct.net::QuicServerInfo::State"* %4)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK3net14QuicServerInfo14SerializeInnerEv(%"class.std::__1::basic_string"* noalias sret, %"class.net::QuicServerInfo"*) local_unnamed_addr #0 align 2 {
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca %"class.base::Pickle", align 8
  %6 = alloca %"class.base::BasicStringPiece", align 8
  %7 = alloca %"class.base::BasicStringPiece", align 8
  %8 = alloca %"class.base::BasicStringPiece", align 8
  %9 = alloca %"class.base::BasicStringPiece", align 8
  %10 = alloca %"class.base::BasicStringPiece", align 8
  %11 = alloca %"class.base::BasicStringPiece", align 8
  %12 = getelementptr inbounds %"class.net::QuicServerInfo", %"class.net::QuicServerInfo"* %1, i64 0, i32 1, i32 4
  %13 = getelementptr inbounds %"class.net::QuicServerInfo", %"class.net::QuicServerInfo"* %1, i64 0, i32 1, i32 4, i32 0, i32 1
  %14 = bitcast %"class.std::__1::basic_string"** %13 to i64*
  %15 = load i64, i64* %14, align 8
  %16 = bitcast %"class.std::__1::vector"* %12 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = sub i64 %15, %17
  %19 = sdiv exact i64 %18, 24
  %20 = icmp ugt i64 %19, 4294967295
  br i1 %20, label %21, label %23

21:                                               ; preds = %2
  %22 = bitcast %"class.std::__1::basic_string"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %22, i8 0, i64 24, i1 false) #13
  br label %179

23:                                               ; preds = %2
  %24 = bitcast %"class.base::Pickle"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %24) #13
  %25 = getelementptr inbounds %"class.base::Pickle", %"class.base::Pickle"* %5, i64 0, i32 1
  %26 = getelementptr inbounds %"class.base::Pickle", %"class.base::Pickle"* %5, i64 0, i32 2
  %27 = bitcast %"class.base::Pickle"* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %27, i8 -86, i64 40, i1 false)
  call void @_ZN4base6PickleC1Ev(%"class.base::Pickle"* nonnull %5) #13
  %28 = bitcast i32* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %28)
  store i32 2, i32* %3, align 4
  call void @_ZN4base6Pickle16WriteBytesStaticILm4EEEvPKv(%"class.base::Pickle"* nonnull %5, i8* nonnull %28) #13
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %28)
  %29 = bitcast %"class.base::BasicStringPiece"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %29) #13
  %30 = getelementptr inbounds %"class.net::QuicServerInfo", %"class.net::QuicServerInfo"* %1, i64 0, i32 1, i32 0
  %31 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %6, i64 0, i32 0
  %32 = bitcast %"class.std::__1::basic_string"* %30 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %33 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %32, i64 0, i32 1, i32 0
  %34 = load i8, i8* %33, align 1
  %35 = icmp slt i8 %34, 0
  %36 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %30, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %37 = load i8*, i8** %36, align 8
  %38 = bitcast %"class.std::__1::basic_string"* %30 to i8*
  %39 = select i1 %35, i8* %37, i8* %38
  store i8* %39, i8** %31, align 8
  %40 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %6, i64 0, i32 1
  %41 = getelementptr inbounds %"class.net::QuicServerInfo", %"class.net::QuicServerInfo"* %1, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %42 = load i64, i64* %41, align 8
  %43 = zext i8 %34 to i64
  %44 = select i1 %35, i64 %42, i64 %43
  store i64 %44, i64* %40, align 8
  call void @_ZN4base6Pickle11WriteStringERKNS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.base::Pickle"* nonnull %5, %"class.base::BasicStringPiece"* nonnull dereferenceable(16) %6) #13
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %29) #13
  %45 = bitcast %"class.base::BasicStringPiece"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %45) #13
  %46 = getelementptr inbounds %"class.net::QuicServerInfo", %"class.net::QuicServerInfo"* %1, i64 0, i32 1, i32 1
  %47 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %7, i64 0, i32 0
  %48 = bitcast %"class.std::__1::basic_string"* %46 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %49 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %48, i64 0, i32 1, i32 0
  %50 = load i8, i8* %49, align 1
  %51 = icmp slt i8 %50, 0
  %52 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %46, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %53 = load i8*, i8** %52, align 8
  %54 = bitcast %"class.std::__1::basic_string"* %46 to i8*
  %55 = select i1 %51, i8* %53, i8* %54
  store i8* %55, i8** %47, align 8
  %56 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %7, i64 0, i32 1
  %57 = getelementptr inbounds %"class.net::QuicServerInfo", %"class.net::QuicServerInfo"* %1, i64 0, i32 1, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %58 = load i64, i64* %57, align 8
  %59 = zext i8 %50 to i64
  %60 = select i1 %51, i64 %58, i64 %59
  store i64 %60, i64* %56, align 8
  call void @_ZN4base6Pickle11WriteStringERKNS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.base::Pickle"* nonnull %5, %"class.base::BasicStringPiece"* nonnull dereferenceable(16) %7) #13
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %45) #13
  %61 = bitcast %"class.base::BasicStringPiece"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %61) #13
  %62 = getelementptr inbounds %"class.net::QuicServerInfo", %"class.net::QuicServerInfo"* %1, i64 0, i32 1, i32 2
  %63 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %8, i64 0, i32 0
  %64 = bitcast %"class.std::__1::basic_string"* %62 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %65 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %64, i64 0, i32 1, i32 0
  %66 = load i8, i8* %65, align 1
  %67 = icmp slt i8 %66, 0
  %68 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %62, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %69 = load i8*, i8** %68, align 8
  %70 = bitcast %"class.std::__1::basic_string"* %62 to i8*
  %71 = select i1 %67, i8* %69, i8* %70
  store i8* %71, i8** %63, align 8
  %72 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %8, i64 0, i32 1
  %73 = getelementptr inbounds %"class.net::QuicServerInfo", %"class.net::QuicServerInfo"* %1, i64 0, i32 1, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %74 = load i64, i64* %73, align 8
  %75 = zext i8 %66 to i64
  %76 = select i1 %67, i64 %74, i64 %75
  store i64 %76, i64* %72, align 8
  call void @_ZN4base6Pickle11WriteStringERKNS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.base::Pickle"* nonnull %5, %"class.base::BasicStringPiece"* nonnull dereferenceable(16) %8) #13
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %61) #13
  %77 = bitcast %"class.base::BasicStringPiece"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %77) #13
  %78 = getelementptr inbounds %"class.net::QuicServerInfo", %"class.net::QuicServerInfo"* %1, i64 0, i32 1, i32 3
  %79 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %9, i64 0, i32 0
  %80 = bitcast %"class.std::__1::basic_string"* %78 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %81 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %80, i64 0, i32 1, i32 0
  %82 = load i8, i8* %81, align 1
  %83 = icmp slt i8 %82, 0
  %84 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %78, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %85 = load i8*, i8** %84, align 8
  %86 = bitcast %"class.std::__1::basic_string"* %78 to i8*
  %87 = select i1 %83, i8* %85, i8* %86
  store i8* %87, i8** %79, align 8
  %88 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %9, i64 0, i32 1
  %89 = getelementptr inbounds %"class.net::QuicServerInfo", %"class.net::QuicServerInfo"* %1, i64 0, i32 1, i32 3, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %90 = load i64, i64* %89, align 8
  %91 = zext i8 %82 to i64
  %92 = select i1 %83, i64 %90, i64 %91
  store i64 %92, i64* %88, align 8
  call void @_ZN4base6Pickle11WriteStringERKNS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.base::Pickle"* nonnull %5, %"class.base::BasicStringPiece"* nonnull dereferenceable(16) %9) #13
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %77) #13
  %93 = bitcast %"class.base::BasicStringPiece"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %93) #13
  %94 = getelementptr inbounds %"class.net::QuicServerInfo", %"class.net::QuicServerInfo"* %1, i64 0, i32 1, i32 5
  %95 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %10, i64 0, i32 0
  %96 = bitcast %"class.std::__1::basic_string"* %94 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %97 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %96, i64 0, i32 1, i32 0
  %98 = load i8, i8* %97, align 1
  %99 = icmp slt i8 %98, 0
  %100 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %94, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %101 = load i8*, i8** %100, align 8
  %102 = bitcast %"class.std::__1::basic_string"* %94 to i8*
  %103 = select i1 %99, i8* %101, i8* %102
  store i8* %103, i8** %95, align 8
  %104 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %10, i64 0, i32 1
  %105 = getelementptr inbounds %"class.net::QuicServerInfo", %"class.net::QuicServerInfo"* %1, i64 0, i32 1, i32 5, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %106 = load i64, i64* %105, align 8
  %107 = zext i8 %98 to i64
  %108 = select i1 %99, i64 %106, i64 %107
  store i64 %108, i64* %104, align 8
  call void @_ZN4base6Pickle11WriteStringERKNS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.base::Pickle"* nonnull %5, %"class.base::BasicStringPiece"* nonnull dereferenceable(16) %10) #13
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %93) #13
  %109 = load i64, i64* %14, align 8
  %110 = load i64, i64* %16, align 8
  %111 = sub i64 %109, %110
  %112 = sdiv exact i64 %111, 24
  %113 = trunc i64 %112 to i32
  %114 = bitcast i32* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %114)
  store i32 %113, i32* %4, align 4
  call void @_ZN4base6Pickle16WriteBytesStaticILm4EEEvPKv(%"class.base::Pickle"* nonnull %5, i8* nonnull %114) #13
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %114)
  %115 = load i64, i64* %14, align 8
  %116 = load i64, i64* %16, align 8
  %117 = icmp eq i64 %115, %116
  br i1 %117, label %122, label %118

118:                                              ; preds = %23
  %119 = bitcast %"class.base::BasicStringPiece"* %11 to i8*
  %120 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %11, i64 0, i32 0
  %121 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %11, i64 0, i32 1
  br label %154

122:                                              ; preds = %154, %23
  %123 = bitcast %"struct.base::Pickle::Header"** %25 to i8**
  %124 = load i8*, i8** %123, align 8
  %125 = load i64, i64* %26, align 8
  %126 = bitcast i8* %124 to i32*
  %127 = load i32, i32* %126, align 4
  %128 = zext i32 %127 to i64
  %129 = add i64 %125, %128
  %130 = icmp ugt i64 %129, -17
  br i1 %130, label %131, label %133

131:                                              ; preds = %122
  %132 = bitcast %"class.std::__1::basic_string"* %0 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* %132) #14
  unreachable

133:                                              ; preds = %122
  %134 = icmp ult i64 %129, 23
  br i1 %134, label %143, label %135

135:                                              ; preds = %133
  %136 = add nuw i64 %129, 16
  %137 = and i64 %136, -16
  %138 = call i8* @_Znwm(i64 %137) #12
  %139 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %138, i8** %139, align 8
  %140 = or i64 %137, -9223372036854775808
  %141 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %140, i64* %141, align 8
  %142 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %129, i64* %142, align 8
  br label %149

143:                                              ; preds = %133
  %144 = trunc i64 %129 to i8
  %145 = bitcast %"class.std::__1::basic_string"* %0 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %146 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %145, i64 0, i32 1, i32 0
  store i8 %144, i8* %146, align 1
  %147 = bitcast %"class.std::__1::basic_string"* %0 to i8*
  %148 = icmp eq i64 %129, 0
  br i1 %148, label %151, label %149

149:                                              ; preds = %143, %135
  %150 = phi i8* [ %138, %135 ], [ %147, %143 ]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %150, i8* align 1 %124, i64 %129, i1 false) #13
  br label %151

151:                                              ; preds = %143, %149
  %152 = phi i8* [ %147, %143 ], [ %150, %149 ]
  %153 = getelementptr inbounds i8, i8* %152, i64 %129
  store i8 0, i8* %153, align 1
  call void @_ZN4base6PickleD1Ev(%"class.base::Pickle"* nonnull %5) #13
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %24) #13
  br label %179

154:                                              ; preds = %118, %154
  %155 = phi i64 [ %116, %118 ], [ %175, %154 ]
  %156 = phi i64 [ 0, %118 ], [ %173, %154 ]
  %157 = inttoptr i64 %155 to %"class.std::__1::basic_string"*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %119) #13
  %158 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %157, i64 %156
  %159 = bitcast %"class.std::__1::basic_string"* %158 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %160 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %159, i64 0, i32 1, i32 0
  %161 = load i8, i8* %160, align 1
  %162 = icmp slt i8 %161, 0
  %163 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %158, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %164 = load i8*, i8** %163, align 8
  %165 = bitcast %"class.std::__1::basic_string"* %158 to i8*
  %166 = select i1 %162, i8* %164, i8* %165
  store i8* %166, i8** %120, align 8
  %167 = load i8, i8* %160, align 1
  %168 = icmp slt i8 %167, 0
  %169 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %157, i64 %156, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %170 = load i64, i64* %169, align 8
  %171 = zext i8 %167 to i64
  %172 = select i1 %168, i64 %170, i64 %171
  store i64 %172, i64* %121, align 8
  call void @_ZN4base6Pickle11WriteStringERKNS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.base::Pickle"* nonnull %5, %"class.base::BasicStringPiece"* nonnull dereferenceable(16) %11) #13
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %119) #13
  %173 = add nuw i64 %156, 1
  %174 = load i64, i64* %14, align 8
  %175 = load i64, i64* %16, align 8
  %176 = sub i64 %174, %175
  %177 = sdiv exact i64 %176, 24
  %178 = icmp ult i64 %173, %177
  br i1 %178, label %154, label %122

179:                                              ; preds = %151, %21
  ret void
}

declare void @_ZN4base6PickleC1Ev(%"class.base::Pickle"*) unnamed_addr #6

declare void @_ZN4base6Pickle11WriteStringERKNS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.base::Pickle"*, %"class.base::BasicStringPiece"* dereferenceable(16)) local_unnamed_addr #6

declare void @__cxa_pure_virtual() unnamed_addr

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #5

declare void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"*, i8*, i64) local_unnamed_addr #6

declare void @_ZN4base6Pickle16WriteBytesStaticILm4EEEvPKv(%"class.base::Pickle"*, i8*) local_unnamed_addr #6

; Function Attrs: noreturn
declare void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"*) local_unnamed_addr #7

; Function Attrs: noreturn nounwind
declare void @abort() local_unnamed_addr #8

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #9

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #10

declare void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7reserveEm(%"class.std::__1::basic_string"*, i64) local_unnamed_addr #6

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS4_IS6_EEE7reserveEm(%"class.std::__1::vector"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %4 = bitcast %"class.std::__1::basic_string"** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.std::__1::vector"* %0 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = sub i64 %5, %7
  %9 = sdiv exact i64 %8, 24
  %10 = icmp ult i64 %9, %1
  %11 = inttoptr i64 %7 to %"class.std::__1::basic_string"*
  br i1 %10, label %12, label %62

12:                                               ; preds = %2
  %13 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 1
  %14 = bitcast %"class.std::__1::basic_string"** %13 to i64*
  %15 = icmp ugt i64 %1, 768614336404564650
  br i1 %15, label %16, label %17

16:                                               ; preds = %12
  tail call void @abort() #14
  unreachable

17:                                               ; preds = %12
  %18 = load i64, i64* %14, align 8
  %19 = sub i64 %18, %7
  %20 = sdiv exact i64 %19, 24
  %21 = mul i64 %1, 24
  %22 = tail call i8* @_Znwm(i64 %21) #12
  %23 = bitcast i8* %22 to %"class.std::__1::basic_string"*
  %24 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %23, i64 %20
  %25 = ptrtoint %"class.std::__1::basic_string"* %24 to i64
  %26 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %23, i64 %1
  %27 = ptrtoint %"class.std::__1::basic_string"* %26 to i64
  %28 = inttoptr i64 %18 to %"class.std::__1::basic_string"*
  %29 = icmp eq %"class.std::__1::basic_string"* %28, %11
  br i1 %29, label %30, label %31

30:                                               ; preds = %17
  store i64 %25, i64* %6, align 8
  store i64 %25, i64* %14, align 8
  store i64 %27, i64* %4, align 8
  br label %57

31:                                               ; preds = %17, %31
  %32 = phi %"class.std::__1::basic_string"* [ %34, %31 ], [ %24, %17 ]
  %33 = phi %"class.std::__1::basic_string"* [ %35, %31 ], [ %28, %17 ]
  %34 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %32, i64 -1
  %35 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %33, i64 -1
  %36 = bitcast %"class.std::__1::basic_string"* %34 to i8*
  %37 = bitcast %"class.std::__1::basic_string"* %35 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %36, i8* align 8 %37, i64 24, i1 false) #13
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %37, i8 0, i64 24, i1 false) #13
  %38 = icmp eq %"class.std::__1::basic_string"* %35, %11
  br i1 %38, label %39, label %31

39:                                               ; preds = %31
  %40 = ptrtoint %"class.std::__1::basic_string"* %34 to i64
  %41 = load i64, i64* %6, align 8
  %42 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %13, align 8
  %43 = inttoptr i64 %41 to %"class.std::__1::basic_string"*
  store i64 %40, i64* %6, align 8
  store i64 %25, i64* %14, align 8
  store i64 %27, i64* %4, align 8
  %44 = icmp eq %"class.std::__1::basic_string"* %42, %43
  br i1 %44, label %57, label %45

45:                                               ; preds = %39, %55
  %46 = phi %"class.std::__1::basic_string"* [ %47, %55 ], [ %42, %39 ]
  %47 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %46, i64 -1
  %48 = bitcast %"class.std::__1::basic_string"* %47 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %49 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %48, i64 0, i32 1, i32 0
  %50 = load i8, i8* %49, align 1
  %51 = icmp slt i8 %50, 0
  br i1 %51, label %52, label %55

52:                                               ; preds = %45
  %53 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %47, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %54 = load i8*, i8** %53, align 8
  tail call void @_ZdlPv(i8* %54) #12
  br label %55

55:                                               ; preds = %52, %45
  %56 = icmp eq %"class.std::__1::basic_string"* %47, %43
  br i1 %56, label %57, label %45

57:                                               ; preds = %55, %30, %39
  %58 = phi i64 [ %7, %30 ], [ %41, %39 ], [ %41, %55 ]
  %59 = icmp eq i64 %58, 0
  br i1 %59, label %62, label %60

60:                                               ; preds = %57
  %61 = inttoptr i64 %58 to i8*
  tail call void @_ZdlPv(i8* %61) #12
  br label %62

62:                                               ; preds = %60, %57, %2
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS4_IS6_EEE21__push_back_slow_pathIRKS6_EEvOT_(%"class.std::__1::vector"*, %"class.std::__1::basic_string"* dereferenceable(24)) local_unnamed_addr #11 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 1
  %4 = bitcast %"class.std::__1::basic_string"** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.std::__1::vector"* %0 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = sub i64 %5, %7
  %9 = sdiv exact i64 %8, 24
  %10 = add nsw i64 %9, 1
  %11 = icmp ugt i64 %10, 768614336404564650
  br i1 %11, label %12, label %14

12:                                               ; preds = %2
  %13 = bitcast %"class.std::__1::vector"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %13) #14
  unreachable

14:                                               ; preds = %2
  %15 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %16 = bitcast %"class.std::__1::basic_string"** %15 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = sub i64 %17, %7
  %19 = sdiv exact i64 %18, 24
  %20 = icmp ult i64 %19, 384307168202282325
  br i1 %20, label %21, label %26

21:                                               ; preds = %14
  %22 = shl nsw i64 %19, 1
  %23 = icmp ult i64 %22, %10
  %24 = select i1 %23, i64 %10, i64 %22
  %25 = icmp eq i64 %24, 0
  br i1 %25, label %31, label %26

26:                                               ; preds = %14, %21
  %27 = phi i64 [ %24, %21 ], [ 768614336404564650, %14 ]
  %28 = mul i64 %27, 24
  %29 = tail call i8* @_Znwm(i64 %28) #12
  %30 = bitcast i8* %29 to %"class.std::__1::basic_string"*
  br label %31

31:                                               ; preds = %21, %26
  %32 = phi i64 [ %27, %26 ], [ 0, %21 ]
  %33 = phi %"class.std::__1::basic_string"* [ %30, %26 ], [ null, %21 ]
  %34 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %33, i64 %9
  %35 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %33, i64 %32
  %36 = ptrtoint %"class.std::__1::basic_string"* %35 to i64
  %37 = bitcast %"class.std::__1::basic_string"* %1 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %38 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %37, i64 0, i32 1, i32 0
  %39 = load i8, i8* %38, align 1
  %40 = icmp slt i8 %39, 0
  br i1 %40, label %44, label %41

41:                                               ; preds = %31
  %42 = bitcast %"class.std::__1::basic_string"* %34 to i8*
  %43 = bitcast %"class.std::__1::basic_string"* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %42, i8* align 8 %43, i64 24, i1 false) #13
  br label %49

44:                                               ; preds = %31
  %45 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %46 = load i8*, i8** %45, align 8
  %47 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %48 = load i64, i64* %47, align 8
  tail call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* %34, i8* %46, i64 %48) #13
  br label %49

49:                                               ; preds = %41, %44
  %50 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %34, i64 1
  %51 = ptrtoint %"class.std::__1::basic_string"* %50 to i64
  %52 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 0
  %53 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %52, align 8
  %54 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %3, align 8
  %55 = icmp eq %"class.std::__1::basic_string"* %54, %53
  br i1 %55, label %56, label %58

56:                                               ; preds = %49
  %57 = ptrtoint %"class.std::__1::basic_string"* %53 to i64
  br label %69

58:                                               ; preds = %49, %58
  %59 = phi %"class.std::__1::basic_string"* [ %61, %58 ], [ %34, %49 ]
  %60 = phi %"class.std::__1::basic_string"* [ %62, %58 ], [ %54, %49 ]
  %61 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %59, i64 -1
  %62 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %60, i64 -1
  %63 = bitcast %"class.std::__1::basic_string"* %61 to i8*
  %64 = bitcast %"class.std::__1::basic_string"* %62 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %63, i8* align 8 %64, i64 24, i1 false) #13
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %64, i8 0, i64 24, i1 false) #13
  %65 = icmp eq %"class.std::__1::basic_string"* %62, %53
  br i1 %65, label %66, label %58

66:                                               ; preds = %58
  %67 = load i64, i64* %6, align 8
  %68 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %3, align 8
  br label %69

69:                                               ; preds = %56, %66
  %70 = phi %"class.std::__1::basic_string"* [ %53, %56 ], [ %68, %66 ]
  %71 = phi %"class.std::__1::basic_string"* [ %34, %56 ], [ %61, %66 ]
  %72 = phi i64 [ %57, %56 ], [ %67, %66 ]
  %73 = ptrtoint %"class.std::__1::basic_string"* %71 to i64
  store i64 %73, i64* %6, align 8
  store i64 %51, i64* %4, align 8
  store i64 %36, i64* %16, align 8
  %74 = inttoptr i64 %72 to %"class.std::__1::basic_string"*
  %75 = icmp eq %"class.std::__1::basic_string"* %70, %74
  br i1 %75, label %88, label %76

76:                                               ; preds = %69, %86
  %77 = phi %"class.std::__1::basic_string"* [ %78, %86 ], [ %70, %69 ]
  %78 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %77, i64 -1
  %79 = bitcast %"class.std::__1::basic_string"* %78 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %80 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %79, i64 0, i32 1, i32 0
  %81 = load i8, i8* %80, align 1
  %82 = icmp slt i8 %81, 0
  br i1 %82, label %83, label %86

83:                                               ; preds = %76
  %84 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %78, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %85 = load i8*, i8** %84, align 8
  tail call void @_ZdlPv(i8* %85) #12
  br label %86

86:                                               ; preds = %83, %76
  %87 = icmp eq %"class.std::__1::basic_string"* %78, %74
  br i1 %87, label %88, label %76

88:                                               ; preds = %86, %69
  %89 = icmp eq i64 %72, 0
  br i1 %89, label %92, label %90

90:                                               ; preds = %88
  %91 = inttoptr i64 %72 to i8*
  tail call void @_ZdlPv(i8* %91) #12
  br label %92

92:                                               ; preds = %88, %90
  ret void
}

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #7

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { noreturn nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { cold noreturn nounwind }
attributes #4 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { argmemonly nounwind }
attributes #6 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #11 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #12 = { builtin nounwind }
attributes #13 = { nounwind }
attributes #14 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
