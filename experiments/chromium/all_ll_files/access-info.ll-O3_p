; ModuleID = '../../v8/src/compiler/access-info.cc'
source_filename = "../../v8/src/compiler/access-info.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.v8::internal::SoleReadOnlyHeap" = type { %"class.v8::internal::ReadOnlyHeap", [587 x i64] }
%"class.v8::internal::ReadOnlyHeap" = type { i32 (...)**, i8, %"class.v8::internal::ReadOnlySpace"*, %"class.std::__1::vector.568" }
%"class.v8::internal::ReadOnlySpace" = type { %"class.v8::internal::BaseSpace", i8, %"class.v8::internal::AllocationStats", %"class.std::__1::vector.184", i64, i64, i8, i64, i64 }
%"class.v8::internal::BaseSpace" = type { i32 (...)**, %"class.v8::internal::Heap"*, i32, %"struct.std::__1::atomic", i64 }
%"class.v8::internal::Heap" = type { %"class.std::__1::unordered_map", %"struct.std::__1::atomic", %"class.v8::internal::Heap::ExternalMemoryAccounting", %"class.v8::internal::Isolate"*, i64, i64, i64, i64, %"struct.std::__1::atomic", i64, i64, i64, i64, i64, i8, i64, i64, %"struct.std::__1::atomic", i64, i64, %"struct.std::__1::atomic", %"struct.std::__1::atomic.71", %"class.std::__1::vector.75", i32, %"class.v8::internal::NewSpace"*, %"class.v8::internal::OldSpace"*, %"class.v8::internal::CodeSpace"*, %"class.v8::internal::MapSpace"*, %"class.v8::internal::OldLargeObjectSpace"*, %"class.v8::internal::CodeLargeObjectSpace"*, %"class.v8::internal::NewLargeObjectSpace"*, %"class.v8::internal::ReadOnlySpace"*, %"class.v8::internal::OldSpace"*, %"class.v8::internal::MapSpace"*, %"class.std::__1::unique_ptr.191", %"class.std::__1::unique_ptr.191", [8 x %"class.v8::internal::Space"*], %"class.v8::internal::LocalHeap"*, %"class.v8::internal::ArrayBufferExtension"*, %"class.v8::internal::ArrayBufferExtension"*, i8, i64, %"struct.std::__1::atomic.206", i32, i32, i32, i32, %"class.v8::internal::AllocationObserver"*, %"class.v8::internal::StressScavengeObserver"*, double, i32, i32, i32, i64, i32, [128 x i64], %"struct.std::__1::atomic", i64, i8, %"struct.std::__1::atomic", %"class.v8::internal::Object", %"class.v8::internal::Object", %"class.v8::internal::Object", %"class.std::__1::vector.210", %"class.std::__1::vector.210", i64 ()*, [113 x i32], i64, double, double, i64, i64, double, i32, i32, i32, i32, double, double, double, %"class.std::__1::unique_ptr.217", %"class.std::__1::unique_ptr.223", %"class.v8::internal::MinorMarkCompactCollector"*, %"class.std::__1::unique_ptr.353", %"class.std::__1::unique_ptr.359", %"class.std::__1::unique_ptr.365", %"class.std::__1::unique_ptr.404", %"class.std::__1::unique_ptr.443", %"class.std::__1::unique_ptr.473", %"class.std::__1::unique_ptr.479", %"class.std::__1::unique_ptr.489", %"class.std::__1::unique_ptr.495", %"class.std::__1::unique_ptr.495", %"class.std::__1::unique_ptr.501", %"class.std::__1::unique_ptr.507", %"class.std::__1::unique_ptr.507", %"class.std::__1::unique_ptr.513", %"class.std::__1::unique_ptr.519", %"class.std::__1::shared_ptr.525", %"class.v8::CppHeap"*, %"class.v8::EmbedderRootsHandler"*, %"class.v8::internal::StrongRootsEntry"*, %"class.v8::base::Mutex", i8, i64, i64, i64, i64, %"class.std::__1::unordered_map.530", %"class.std::__1::unique_ptr.556", [512 x i8], i8, i8, i64, i8, i32, i32, %"class.std::__1::unique_ptr.562", i8, %"class.v8::internal::Heap::ExternalStringTable", %"class.v8::base::Mutex", %"class.std::__1::unique_ptr.575", i32, i8, i8, i8, i8, i8, %"class.v8::internal::HeapObject", %"class.v8::base::SharedMutex", %"class.v8::base::Mutex", %"class.std::__1::unordered_set.375", i8, [7 x i8], %"class.std::__1::unordered_map.581", %"class.std::__1::unordered_map.607", %"class.std::__1::unordered_map.581", %"class.std::__1::unordered_map.631", %"class.std::__1::vector.659", i8, %"class.std::__1::unique_ptr.666", i32, i32 }
%"class.std::__1::unordered_map" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.48", %"class.std::__1::__compressed_pair.56", %"class.std::__1::__compressed_pair.61", %"class.std::__1::__compressed_pair.63", [4 x i8] }>
%"class.std::__1::unique_ptr.48" = type { %"class.std::__1::__compressed_pair.49" }
%"class.std::__1::__compressed_pair.49" = type { %"struct.std::__1::__compressed_pair_elem.50", %"struct.std::__1::__compressed_pair_elem.51" }
%"struct.std::__1::__compressed_pair_elem.50" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.51" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.52" }
%"class.std::__1::__compressed_pair.52" = type { %"struct.std::__1::__compressed_pair_elem.12" }
%"struct.std::__1::__compressed_pair_elem.12" = type { i64 }
%"class.std::__1::__compressed_pair.56" = type { %"struct.std::__1::__compressed_pair_elem.57" }
%"struct.std::__1::__compressed_pair_elem.57" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.61" = type { %"struct.std::__1::__compressed_pair_elem.12" }
%"class.std::__1::__compressed_pair.63" = type { %"struct.std::__1::__compressed_pair_elem.64" }
%"struct.std::__1::__compressed_pair_elem.64" = type { float }
%"class.v8::internal::Heap::ExternalMemoryAccounting" = type { %"struct.std::__1::atomic.66", %"struct.std::__1::atomic.66", %"struct.std::__1::atomic.66" }
%"struct.std::__1::atomic.66" = type { %"struct.std::__1::__atomic_base.67" }
%"struct.std::__1::__atomic_base.67" = type { %"struct.std::__1::__atomic_base.68" }
%"struct.std::__1::__atomic_base.68" = type { %"struct.std::__1::__cxx_atomic_impl.69" }
%"struct.std::__1::__cxx_atomic_impl.69" = type { %"struct.std::__1::__cxx_atomic_base_impl.70" }
%"struct.std::__1::__cxx_atomic_base_impl.70" = type { i64 }
%"class.v8::internal::Isolate" = type { %"class.v8::internal::IsolateData", %"class.std::__1::unique_ptr.42", %"class.v8::internal::Heap", %"class.v8::internal::ReadOnlyHeap"*, %"class.std::__1::shared_ptr.672", %"class.std::__1::unique_ptr.693", i32, %"class.v8::internal::Isolate::EntryStackItem"*, i32, %"class.v8::internal::StringStream"*, [13 x i64], %"class.v8::internal::Bootstrapper"*, %"class.v8::internal::RuntimeProfiler"*, %"class.v8::internal::CompilationCache"*, %"class.std::__1::shared_ptr.703", %"class.v8::base::RecursiveMutex", %"class.v8::base::SharedMutex", %"class.v8::base::SharedMutex", %"class.v8::base::SharedMutex", %"class.v8::base::SharedMutex", %"class.v8::base::SharedMutex", %"class.v8::internal::Logger"*, %"class.v8::internal::StubCache"*, %"class.v8::internal::StubCache"*, %"class.v8::internal::Deoptimizer"*, i8, %"class.v8::internal::MaterializedObjectStore"*, i8, i32, i32, %"class.v8::internal::DescriptorLookupCache"*, %"struct.v8::internal::HandleScopeData", %"class.v8::internal::HandleScopeImplementer"*, %"class.v8::internal::UnicodeCache"*, %"class.v8::internal::AccountingAllocator"*, %"class.v8::internal::InnerPointerToCodeCache"*, %"class.v8::internal::GlobalHandles"*, %"class.v8::internal::EternalHandles"*, %"class.v8::internal::ThreadManager"*, %"class.v8::bigint::Processor"*, %"class.v8::internal::RuntimeState", %"class.v8::internal::Builtins", %"class.v8::internal::SetupIsolateDelegate"*, %"class.v8::internal::RegExpStack"*, %"class.std::__1::vector.836", %"class.v8::internal::DateCache"*, %"class.v8::base::RandomNumberGenerator"*, %"class.v8::base::RandomNumberGenerator"*, %"struct.std::__1::atomic.849", {}*, i8*, void (i32, %"class.v8::Promise"*, %"class.v8::Value"*)*, {}*, {}*, %"struct.std::__1::atomic.859", {}*, %"class.v8::base::Mutex", double, %"class.std::__1::basic_string", %"class.std::__1::unordered_map.870", %"struct.std::__1::atomic.197", i8, i8, i8, i8, i8, i8, double, %"class.v8::internal::Debug"*, %"class.v8::internal::HeapProfiler"*, %"class.std::__1::unique_ptr.945", %"class.v8::internal::AstStringConstants"*, %"class.v8::internal::interpreter::Interpreter"*, %"class.v8::internal::compiler::PerIsolateCompilerCache"*, %"class.v8::internal::Zone"*, %"class.v8::internal::CompilerDispatcher"*, %"class.std::__1::queue", void (i8*, i8*)*, void (i8*, i1)*, void (i8*, i32)*, i1 (%"class.v8::Context"*, %"class.v8::String"*)*, { i8, %"class.v8::String"* } (%"class.v8::Context"*, %"class.v8::Value"*)*, { i8, %"class.v8::String"* } (%"class.v8::Context"*, %"class.v8::Value"*, i1)*, i1 (%"class.v8::Context"*, %"class.v8::String"*)*, i1 (%"class.v8::FunctionCallbackInfo"*)*, i1 (%"class.v8::FunctionCallbackInfo"*)*, i1 (%"class.v8::Context"*)*, void (%"class.v8::FunctionCallbackInfo"*)*, %"class.v8::String"* (%"class.v8::Isolate"*, i8*)*, i1 (%"class.v8::Context"*)*, i1 (%"class.v8::Context"*)*, %"class.v8::internal::Relocatable"*, %"class.std::__1::vector.988"*, %"class.v8::internal::Object", i64*, %"class.v8::internal::AddressToIndexHashMap"*, %"class.v8::internal::HeapObjectToIndexHashMap"*, %"class.v8::internal::MicrotaskQueue"*, %"class.v8::internal::CompilationStatistics"*, %"class.v8::internal::CodeTracer"*, i32, void (%"class.v8::PromiseRejectMessage"*)*, %"class.v8::StartupData"*, i32, i32, i32, i64, i8, i8, i32, i8, i32, %"class.v8_inspector::V8Inspector"*, i8, i8, i8, i32, i32, %"class.v8::internal::compiler::NodeObserver"*, i8, [128 x i32], [256 x i32], [251 x i32], [251 x i32], %"class.v8::internal::OptimizingCompileDispatcher"*, %"class.std::__1::unique_ptr.997", i32, i8, i8, i32, i32, %"class.std::__1::vector.1003", %"class.std::__1::vector.1003", void (%"class.v8::Isolate"*, i32)*, %"class.std::__1::shared_ptr.1010", i64, %"class.std::__1::unordered_map.1011", i64, %"struct.v8::metrics::LongTaskStats", %"class.std::__1::vector.568", %"class.v8::internal::BuiltinsConstantsTableBuilder"*, i8*, i32, i8*, i32, %"class.v8::ArrayBuffer::Allocator"*, %"class.std::__1::shared_ptr.205", %"class.v8::internal::FutexWaitListNode", %"class.v8::internal::CancelableTaskManager"*, %"class.v8::debug::ConsoleDelegate"*, %"class.v8::debug::AsyncEventDelegate"*, i32, i32, %"class.std::__1::unique_ptr.1067", i1 (%"class.v8::Isolate"*)*, i8, %"class.v8::base::Mutex", %"struct.v8::internal::ManagedPtrDestructor"*, i64, i64, %"class.v8::internal::wasm::WasmEngine"*, %"class.std::__1::unique_ptr.1105", %"class.v8::internal::EmbeddedFileWriterInterface"*, %"class.v8::Context::BackupIncumbentScope"*, {}*, %"class.v8::base::Mutex", %"class.v8::internal::Isolate::ThreadDataTable", i8, %"class.v8::internal::Isolate"*, %"class.v8::base::Mutex", %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"*, %"struct.std::__1::atomic.1139", %"class.std::__1::vector.1143", %"class.std::__1::vector.1143", void (i32, %"class.std::__1::basic_string"*)* }
%"class.v8::internal::IsolateData" = type { [4 x i8*], i64, i64, i64, i64, i64, %"class.v8::internal::StackGuard", %"class.v8::internal::RootsTable", %"class.v8::internal::ExternalReferenceTable", %"class.v8::internal::ThreadLocalTop", [1711 x i64], [1711 x i64], i8, [15 x i8] }
%"class.v8::internal::StackGuard" = type { %"class.v8::internal::Isolate"*, %"class.v8::internal::StackGuard::ThreadLocal" }
%"class.v8::internal::StackGuard::ThreadLocal" = type { i64, i64, i64, i64, %"class.v8::internal::InterruptsScope"*, i64 }
%"class.v8::internal::InterruptsScope" = type { i32 (...)**, %"class.v8::internal::StackGuard"*, i64, i64, i32, %"class.v8::internal::InterruptsScope"* }
%"class.v8::internal::RootsTable" = type { [669 x i64] }
%"class.v8::internal::ExternalReferenceTable" = type { [1042 x i64], i32, i32 }
%"class.v8::internal::ThreadLocalTop" = type { %"class.v8::TryCatch"*, %"class.v8::internal::Isolate"*, %"class.v8::internal::Context", %"struct.std::__1::atomic.37", %"class.v8::internal::Object", %"class.v8::internal::Context", i64, i64, i64, i64, i64, %"class.v8::internal::Object", i8, i8, %"class.v8::internal::Object", i64, i64, i64, %"class.v8::internal::PromiseOnStack"*, %"class.v8::internal::Simulator"*, i64, %"class.v8::internal::ExternalCallbackScope"*, i32, void (%"class.v8::Object"*, i32, %"class.v8::Value"*)*, i64 }
%"class.v8::TryCatch" = type <{ %"class.v8::internal::Isolate"*, %"class.v8::TryCatch"*, i8*, i8*, i8*, i8, [7 x i8] }>
%"struct.std::__1::atomic.37" = type { %"struct.std::__1::__atomic_base.38" }
%"struct.std::__1::__atomic_base.38" = type { %"struct.std::__1::__cxx_atomic_impl.39" }
%"struct.std::__1::__cxx_atomic_impl.39" = type { %"struct.std::__1::__cxx_atomic_base_impl.40" }
%"struct.std::__1::__cxx_atomic_base_impl.40" = type { %"class.v8::internal::ThreadId" }
%"class.v8::internal::ThreadId" = type { i32 }
%"class.v8::internal::Context" = type { %"class.v8::internal::TorqueGeneratedContext" }
%"class.v8::internal::TorqueGeneratedContext" = type { %"class.v8::internal::HeapObject" }
%"class.v8::internal::PromiseOnStack" = type { %"class.v8::internal::Handle.32", %"class.v8::internal::PromiseOnStack"* }
%"class.v8::internal::Handle.32" = type { %"class.v8::internal::HandleBase" }
%"class.v8::internal::HandleBase" = type { i64* }
%"class.v8::internal::Simulator" = type opaque
%"class.v8::internal::ExternalCallbackScope" = type opaque
%"class.v8::Object" = type { i8 }
%"class.v8::Value" = type { i8 }
%"class.std::__1::unique_ptr.42" = type { %"class.std::__1::__compressed_pair.43" }
%"class.std::__1::__compressed_pair.43" = type { %"struct.std::__1::__compressed_pair_elem.44" }
%"struct.std::__1::__compressed_pair_elem.44" = type { %"class.v8::internal::IsolateAllocator"* }
%"class.v8::internal::IsolateAllocator" = type { i8*, %"class.v8::PageAllocator"* }
%"class.v8::PageAllocator" = type { i32 (...)** }
%"class.std::__1::shared_ptr.672" = type { %"class.v8::internal::ReadOnlyArtifacts"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::internal::ReadOnlyArtifacts" = type { i32 (...)**, %"class.std::__1::vector.184", %"class.v8::internal::AllocationStats", %"class.std::__1::unique_ptr.673", %"class.std::__1::unique_ptr.687" }
%"class.std::__1::unique_ptr.673" = type { %"class.std::__1::__compressed_pair.674" }
%"class.std::__1::__compressed_pair.674" = type { %"struct.std::__1::__compressed_pair_elem.675" }
%"struct.std::__1::__compressed_pair_elem.675" = type { %"class.v8::internal::SharedReadOnlySpace"* }
%"class.v8::internal::SharedReadOnlySpace" = type { %"class.v8::internal::ReadOnlySpace", %"class.std::__1::vector.676" }
%"class.std::__1::vector.676" = type { %"class.std::__1::__vector_base.677" }
%"class.std::__1::__vector_base.677" = type { %"class.std::__1::unique_ptr.678"*, %"class.std::__1::unique_ptr.678"*, %"class.std::__1::__compressed_pair.679" }
%"class.std::__1::unique_ptr.678" = type { %"class.std::__1::__compressed_pair.1329" }
%"class.std::__1::__compressed_pair.1329" = type { %"struct.std::__1::__compressed_pair_elem.1330" }
%"struct.std::__1::__compressed_pair_elem.1330" = type { %"class.v8::PageAllocator::SharedMemoryMapping"* }
%"class.v8::PageAllocator::SharedMemoryMapping" = type { i32 (...)** }
%"class.std::__1::__compressed_pair.679" = type { %"struct.std::__1::__compressed_pair_elem.680" }
%"struct.std::__1::__compressed_pair_elem.680" = type { %"class.std::__1::unique_ptr.678"* }
%"class.std::__1::unique_ptr.687" = type { %"class.std::__1::__compressed_pair.688" }
%"class.std::__1::__compressed_pair.688" = type { %"struct.std::__1::__compressed_pair_elem.689" }
%"struct.std::__1::__compressed_pair_elem.689" = type { %"class.v8::internal::ReadOnlyHeap"* }
%"class.std::__1::__shared_weak_count" = type { %"class.std::__1::__shared_count", i64 }
%"class.std::__1::__shared_count" = type { i32 (...)**, i64 }
%"class.std::__1::unique_ptr.693" = type { %"class.std::__1::__compressed_pair.694" }
%"class.std::__1::__compressed_pair.694" = type { %"struct.std::__1::__compressed_pair_elem.695" }
%"struct.std::__1::__compressed_pair_elem.695" = type { %"class.v8::internal::StringTable"* }
%"class.v8::internal::StringTable" = type { %"struct.std::__1::atomic.696", %"class.v8::base::Mutex" }
%"struct.std::__1::atomic.696" = type { %"struct.std::__1::__atomic_base.697" }
%"struct.std::__1::__atomic_base.697" = type { %"struct.std::__1::__cxx_atomic_impl.698" }
%"struct.std::__1::__cxx_atomic_impl.698" = type { %"struct.std::__1::__cxx_atomic_base_impl.699" }
%"struct.std::__1::__cxx_atomic_base_impl.699" = type { %"class.v8::internal::StringTable::Data"* }
%"class.v8::internal::StringTable::Data" = type opaque
%"class.v8::internal::Isolate::EntryStackItem" = type { i32, %"class.v8::internal::Isolate::PerIsolateThreadData"*, %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate::EntryStackItem"* }
%"class.v8::internal::Isolate::PerIsolateThreadData" = type { %"class.v8::internal::Isolate"*, %"class.v8::internal::ThreadId", i64, %"class.v8::internal::ThreadState"* }
%"class.v8::internal::ThreadState" = type opaque
%"class.v8::internal::StringStream" = type opaque
%"class.v8::internal::Bootstrapper" = type { %"class.v8::internal::Isolate"*, i32, %"class.v8::internal::SourceCodeCache" }
%"class.v8::internal::SourceCodeCache" = type { i32, %"class.v8::internal::FixedArray" }
%"class.v8::internal::FixedArray" = type { %"class.v8::internal::TorqueGeneratedFixedArray" }
%"class.v8::internal::TorqueGeneratedFixedArray" = type { %"class.v8::internal::FixedArrayBase" }
%"class.v8::internal::FixedArrayBase" = type { %"class.v8::internal::TorqueGeneratedFixedArrayBase" }
%"class.v8::internal::TorqueGeneratedFixedArrayBase" = type { %"class.v8::internal::HeapObject" }
%"class.v8::internal::RuntimeProfiler" = type opaque
%"class.v8::internal::CompilationCache" = type opaque
%"class.std::__1::shared_ptr.703" = type { %"class.v8::internal::Counters"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::internal::Counters" = type { %"class.std::__1::enable_shared_from_this", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::AggregatableHistogramTimer", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounterThreadSafe", %"class.v8::internal::StatsCounterThreadSafe", %"class.v8::internal::StatsCounterThreadSafe", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::RuntimeCallStats", %"class.v8::internal::WorkerThreadRuntimeCallStats", %"class.v8::internal::Isolate"*, %"class.v8::internal::StatsTable" }
%"class.std::__1::enable_shared_from_this" = type { %"class.std::__1::weak_ptr" }
%"class.std::__1::weak_ptr" = type { %"class.v8::internal::Counters"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::internal::HistogramTimer" = type { %"class.v8::internal::TimedHistogram.base", %"class.v8::base::ElapsedTimer" }
%"class.v8::internal::TimedHistogram.base" = type <{ %"class.v8::internal::Histogram", i32 }>
%"class.v8::base::ElapsedTimer" = type { %"class.v8::base::TimeTicks" }
%"class.v8::base::TimeTicks" = type { %"class.v8::base::time_internal::TimeBase" }
%"class.v8::base::time_internal::TimeBase" = type { i64 }
%"class.v8::internal::TimedHistogram" = type <{ %"class.v8::internal::Histogram", i32, [4 x i8] }>
%"class.v8::internal::AggregatableHistogramTimer" = type { %"class.v8::internal::Histogram", %"class.v8::base::TimeDelta" }
%"class.v8::base::TimeDelta" = type { i64 }
%"class.v8::internal::Histogram" = type { i8*, i32, i32, i32, i8*, %"class.v8::internal::Counters"* }
%"class.v8::internal::StatsCounterThreadSafe" = type { %"class.v8::internal::StatsCounterBase", %"class.v8::base::Mutex" }
%"class.v8::internal::StatsCounterBase" = type { %"class.v8::internal::Counters"*, i8*, i32* }
%"class.v8::internal::StatsCounter" = type <{ %"class.v8::internal::StatsCounterBase", i8, [7 x i8] }>
%"class.v8::internal::RuntimeCallStats" = type { %"class.v8::base::AtomicValue", %"class.v8::base::AtomicValue.704", i8, i32, %"class.v8::internal::ThreadId", [1370 x %"class.v8::internal::RuntimeCallCounter"] }
%"class.v8::base::AtomicValue" = type { i64 }
%"class.v8::base::AtomicValue.704" = type { i64 }
%"class.v8::internal::RuntimeCallCounter" = type { i8*, i64, i64 }
%"class.v8::internal::WorkerThreadRuntimeCallStats" = type <{ %"class.v8::base::Mutex", %"class.std::__1::vector.705", %"class.v8::base::Optional", %"class.v8::internal::ThreadId", [4 x i8] }>
%"class.std::__1::vector.705" = type { %"class.std::__1::__vector_base.706" }
%"class.std::__1::__vector_base.706" = type { %"class.std::__1::unique_ptr.707"*, %"class.std::__1::unique_ptr.707"*, %"class.std::__1::__compressed_pair.708" }
%"class.std::__1::unique_ptr.707" = type opaque
%"class.std::__1::__compressed_pair.708" = type { %"struct.std::__1::__compressed_pair_elem.709" }
%"struct.std::__1::__compressed_pair_elem.709" = type { %"class.std::__1::unique_ptr.707"* }
%"class.v8::base::Optional" = type { %"class.v8::base::internal::OptionalBase" }
%"class.v8::base::internal::OptionalBase" = type { %"struct.v8::base::internal::OptionalStorage" }
%"struct.v8::base::internal::OptionalStorage" = type { %"struct.v8::base::internal::OptionalStorageBase" }
%"struct.v8::base::internal::OptionalStorageBase" = type { i8, %union.anon }
%union.anon = type { i32 }
%"class.v8::internal::StatsTable" = type { i32* (i8*)*, i8* (i8*, i32, i32, i64)*, void (i8*, i32)* }
%"class.v8::base::RecursiveMutex" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"class.v8::internal::Logger" = type { %"class.v8::internal::CodeEventListener", %"class.v8::internal::Isolate"*, %"class.std::__1::unique_ptr.713", %"class.std::__1::unique_ptr.719", %"struct.std::__1::atomic.197", %"class.std::__1::unique_ptr.725", %"class.std::__1::unique_ptr.731", %"class.std::__1::unique_ptr.737", %"class.std::__1::unique_ptr.743", %"class.std::__1::unique_ptr.749", %"class.std::__1::set.755", i32, i8, %"class.v8::internal::ExistingCodeLogger", %"class.v8::base::ElapsedTimer" }
%"class.v8::internal::CodeEventListener" = type { i32 (...)** }
%"class.std::__1::unique_ptr.713" = type { %"class.std::__1::__compressed_pair.714" }
%"class.std::__1::__compressed_pair.714" = type { %"struct.std::__1::__compressed_pair_elem.715" }
%"struct.std::__1::__compressed_pair_elem.715" = type { %"class.v8::internal::Ticker"* }
%"class.v8::internal::Ticker" = type opaque
%"class.std::__1::unique_ptr.719" = type { %"class.std::__1::__compressed_pair.720" }
%"class.std::__1::__compressed_pair.720" = type { %"struct.std::__1::__compressed_pair_elem.721" }
%"struct.std::__1::__compressed_pair_elem.721" = type { %"class.v8::internal::Profiler"* }
%"class.v8::internal::Profiler" = type opaque
%"class.std::__1::unique_ptr.725" = type { %"class.std::__1::__compressed_pair.726" }
%"class.std::__1::__compressed_pair.726" = type { %"struct.std::__1::__compressed_pair_elem.727" }
%"struct.std::__1::__compressed_pair_elem.727" = type { %"class.v8::internal::Log"* }
%"class.v8::internal::Log" = type opaque
%"class.std::__1::unique_ptr.731" = type { %"class.std::__1::__compressed_pair.732" }
%"class.std::__1::__compressed_pair.732" = type { %"struct.std::__1::__compressed_pair_elem.733" }
%"struct.std::__1::__compressed_pair_elem.733" = type { %"class.v8::internal::PerfBasicLogger"* }
%"class.v8::internal::PerfBasicLogger" = type opaque
%"class.std::__1::unique_ptr.737" = type { %"class.std::__1::__compressed_pair.738" }
%"class.std::__1::__compressed_pair.738" = type { %"struct.std::__1::__compressed_pair_elem.739" }
%"struct.std::__1::__compressed_pair_elem.739" = type { %"class.v8::internal::PerfJitLogger"* }
%"class.v8::internal::PerfJitLogger" = type opaque
%"class.std::__1::unique_ptr.743" = type { %"class.std::__1::__compressed_pair.744" }
%"class.std::__1::__compressed_pair.744" = type { %"struct.std::__1::__compressed_pair_elem.745" }
%"struct.std::__1::__compressed_pair_elem.745" = type { %"class.v8::internal::LowLevelLogger"* }
%"class.v8::internal::LowLevelLogger" = type opaque
%"class.std::__1::unique_ptr.749" = type { %"class.std::__1::__compressed_pair.750" }
%"class.std::__1::__compressed_pair.750" = type { %"struct.std::__1::__compressed_pair_elem.751" }
%"struct.std::__1::__compressed_pair_elem.751" = type { %"class.v8::internal::JitLogger"* }
%"class.v8::internal::JitLogger" = type opaque
%"class.std::__1::set.755" = type { %"class.std::__1::__tree.756" }
%"class.std::__1::__tree.756" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.757", %"class.std::__1::__compressed_pair.761" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8, [7 x i8] }>
%"class.std::__1::__compressed_pair.757" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"struct.std::__1::__compressed_pair_elem.9" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.761" = type { %"struct.std::__1::__compressed_pair_elem.12" }
%"class.v8::internal::ExistingCodeLogger" = type { %"class.v8::internal::Isolate"*, %"class.v8::internal::CodeEventListener"* }
%"class.v8::internal::StubCache" = type { [2048 x %"struct.v8::internal::StubCache::Entry"], [512 x %"struct.v8::internal::StubCache::Entry"], %"class.v8::internal::Isolate"* }
%"struct.v8::internal::StubCache::Entry" = type { %"class.v8::internal::StrongTaggedValue", %"class.v8::internal::TaggedValue", %"class.v8::internal::StrongTaggedValue" }
%"class.v8::internal::TaggedValue" = type { %"class.v8::internal::TaggedImpl.764" }
%"class.v8::internal::TaggedImpl.764" = type { i32 }
%"class.v8::internal::StrongTaggedValue" = type { %"class.v8::internal::TaggedImpl.763" }
%"class.v8::internal::TaggedImpl.763" = type { i32 }
%"class.v8::internal::Deoptimizer" = type opaque
%"class.v8::internal::MaterializedObjectStore" = type opaque
%"class.v8::internal::DescriptorLookupCache" = type { [64 x %"struct.v8::internal::DescriptorLookupCache::Key"], [64 x i32] }
%"struct.v8::internal::DescriptorLookupCache::Key" = type { %"class.v8::internal::Map", %"class.v8::internal::Name" }
%"class.v8::internal::Map" = type { %"class.v8::internal::HeapObject" }
%"class.v8::internal::Name" = type { %"class.v8::internal::TorqueGeneratedName" }
%"class.v8::internal::TorqueGeneratedName" = type { %"class.v8::internal::PrimitiveHeapObject" }
%"class.v8::internal::PrimitiveHeapObject" = type { %"class.v8::internal::TorqueGeneratedPrimitiveHeapObject" }
%"class.v8::internal::TorqueGeneratedPrimitiveHeapObject" = type { %"class.v8::internal::HeapObject" }
%"struct.v8::internal::HandleScopeData" = type { i64*, i64*, i32, i32, %"class.v8::internal::CanonicalHandleScope"* }
%"class.v8::internal::CanonicalHandleScope" = type { %"class.v8::internal::Isolate"*, %"class.v8::internal::OptimizedCompilationInfo"*, %"class.v8::internal::Zone"*, %"class.v8::internal::RootIndexMap"*, %"class.std::__1::unique_ptr.765", i32, %"class.v8::internal::CanonicalHandleScope"* }
%"class.v8::internal::OptimizedCompilationInfo" = type opaque
%"class.v8::internal::RootIndexMap" = type { %"class.v8::internal::HeapObjectToIndexHashMap"* }
%"class.std::__1::unique_ptr.765" = type { %"class.std::__1::__compressed_pair.766" }
%"class.std::__1::__compressed_pair.766" = type { %"struct.std::__1::__compressed_pair_elem.767" }
%"struct.std::__1::__compressed_pair_elem.767" = type { %"class.v8::internal::IdentityMap"* }
%"class.v8::internal::IdentityMap" = type { %"class.v8::internal::IdentityMapBase.base", %"class.v8::internal::ZoneAllocationPolicy" }
%"class.v8::internal::IdentityMapBase.base" = type <{ i32 (...)**, %"struct.v8::base::hash", [7 x i8], %"class.v8::internal::Heap"*, i32, i32, i32, i32, i64*, %"class.v8::internal::StrongRootsEntry"*, i64*, i8 }>
%"struct.v8::base::hash" = type { i8 }
%"class.v8::internal::ZoneAllocationPolicy" = type { %"class.v8::internal::Zone"* }
%"class.v8::internal::HandleScopeImplementer" = type { %"class.v8::internal::Isolate"*, %"class.v8::internal::DetachableVector", %"class.v8::internal::DetachableVector.771", %"class.v8::internal::DetachableVector.772", %"class.v8::internal::DetachableVector.771", i64*, i64*, %"struct.v8::internal::HandleScopeData" }
%"class.v8::internal::DetachableVector" = type { %"class.v8::internal::DetachableVectorBase" }
%"class.v8::internal::DetachableVectorBase" = type { i8*, i64, i64 }
%"class.v8::internal::DetachableVector.772" = type { %"class.v8::internal::DetachableVectorBase" }
%"class.v8::internal::DetachableVector.771" = type { %"class.v8::internal::DetachableVectorBase" }
%"class.v8::internal::UnicodeCache" = type opaque
%"class.v8::internal::AccountingAllocator" = type { i32 (...)**, %"struct.std::__1::atomic", %"struct.std::__1::atomic", %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr.5" }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair.2" }
%"class.std::__1::__compressed_pair.2" = type { %"struct.std::__1::__compressed_pair_elem.3" }
%"struct.std::__1::__compressed_pair_elem.3" = type { %"class.v8::internal::VirtualMemory"* }
%"class.v8::internal::VirtualMemory" = type { %"class.v8::PageAllocator"*, %"class.v8::base::AddressRegion" }
%"class.v8::base::AddressRegion" = type { i64, i64 }
%"class.std::__1::unique_ptr.5" = type { %"class.std::__1::__compressed_pair.6" }
%"class.std::__1::__compressed_pair.6" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"struct.std::__1::__compressed_pair_elem.7" = type { %"class.v8::base::BoundedPageAllocator"* }
%"class.v8::base::BoundedPageAllocator" = type { %"class.v8::PageAllocator", %"class.v8::base::Mutex", i64, i64, %"class.v8::PageAllocator"*, %"class.v8::base::RegionAllocator" }
%"class.v8::base::RegionAllocator" = type { %"class.v8::base::RegionAllocator::Region", i64, i64, i64, i64, %"class.std::__1::set", %"class.std::__1::set.14" }
%"class.v8::base::RegionAllocator::Region" = type <{ %"class.v8::base::AddressRegion", i32, [4 x i8] }>
%"class.std::__1::set" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.8", %"class.std::__1::__compressed_pair.11" }
%"class.std::__1::__compressed_pair.8" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"class.std::__1::__compressed_pair.11" = type { %"struct.std::__1::__compressed_pair_elem.12" }
%"class.std::__1::set.14" = type { %"class.std::__1::__tree.15" }
%"class.std::__1::__tree.15" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.8", %"class.std::__1::__compressed_pair.16" }
%"class.std::__1::__compressed_pair.16" = type { %"struct.std::__1::__compressed_pair_elem.12" }
%"class.v8::internal::InnerPointerToCodeCache" = type opaque
%"class.v8::internal::GlobalHandles" = type { %"class.v8::internal::Isolate"*, %"class.std::__1::unique_ptr.773", %"class.std::__1::vector.779", %"class.std::__1::unique_ptr.786", %"class.std::__1::vector.793", %"class.std::__1::unique_ptr.800", i64, %"class.std::__1::vector.806", %"class.std::__1::vector.814", %"class.std::__1::vector.822", i8, i8, i32 }
%"class.std::__1::unique_ptr.773" = type { %"class.std::__1::__compressed_pair.774" }
%"class.std::__1::__compressed_pair.774" = type { %"struct.std::__1::__compressed_pair_elem.775" }
%"struct.std::__1::__compressed_pair_elem.775" = type { %"class.v8::internal::GlobalHandles::NodeSpace"* }
%"class.v8::internal::GlobalHandles::NodeSpace" = type opaque
%"class.std::__1::vector.779" = type { %"class.std::__1::__vector_base.780" }
%"class.std::__1::__vector_base.780" = type { %"class.v8::internal::GlobalHandles::Node"**, %"class.v8::internal::GlobalHandles::Node"**, %"class.std::__1::__compressed_pair.781" }
%"class.v8::internal::GlobalHandles::Node" = type opaque
%"class.std::__1::__compressed_pair.781" = type { %"struct.std::__1::__compressed_pair_elem.782" }
%"struct.std::__1::__compressed_pair_elem.782" = type { %"class.v8::internal::GlobalHandles::Node"** }
%"class.std::__1::unique_ptr.786" = type { %"class.std::__1::__compressed_pair.787" }
%"class.std::__1::__compressed_pair.787" = type { %"struct.std::__1::__compressed_pair_elem.788" }
%"struct.std::__1::__compressed_pair_elem.788" = type { %"class.v8::internal::GlobalHandles::NodeSpace.789"* }
%"class.v8::internal::GlobalHandles::NodeSpace.789" = type opaque
%"class.std::__1::vector.793" = type { %"class.std::__1::__vector_base.794" }
%"class.std::__1::__vector_base.794" = type { %"class.v8::internal::GlobalHandles::TracedNode"**, %"class.v8::internal::GlobalHandles::TracedNode"**, %"class.std::__1::__compressed_pair.795" }
%"class.v8::internal::GlobalHandles::TracedNode" = type opaque
%"class.std::__1::__compressed_pair.795" = type { %"struct.std::__1::__compressed_pair_elem.796" }
%"struct.std::__1::__compressed_pair_elem.796" = type { %"class.v8::internal::GlobalHandles::TracedNode"** }
%"class.std::__1::unique_ptr.800" = type { %"class.std::__1::__compressed_pair.801" }
%"class.std::__1::__compressed_pair.801" = type { %"struct.std::__1::__compressed_pair_elem.802" }
%"struct.std::__1::__compressed_pair_elem.802" = type { %"class.v8::internal::GlobalHandles::OnStackTracedNodeSpace"* }
%"class.v8::internal::GlobalHandles::OnStackTracedNodeSpace" = type opaque
%"class.std::__1::vector.806" = type { %"class.std::__1::__vector_base.807" }
%"class.std::__1::__vector_base.807" = type { %"struct.std::__1::pair.808"*, %"struct.std::__1::pair.808"*, %"class.std::__1::__compressed_pair.809" }
%"struct.std::__1::pair.808" = type opaque
%"class.std::__1::__compressed_pair.809" = type { %"struct.std::__1::__compressed_pair_elem.810" }
%"struct.std::__1::__compressed_pair_elem.810" = type { %"struct.std::__1::pair.808"* }
%"class.std::__1::vector.814" = type { %"class.std::__1::__vector_base.815" }
%"class.std::__1::__vector_base.815" = type { %"struct.std::__1::pair.816"*, %"struct.std::__1::pair.816"*, %"class.std::__1::__compressed_pair.817" }
%"struct.std::__1::pair.816" = type opaque
%"class.std::__1::__compressed_pair.817" = type { %"struct.std::__1::__compressed_pair_elem.818" }
%"struct.std::__1::__compressed_pair_elem.818" = type { %"struct.std::__1::pair.816"* }
%"class.std::__1::vector.822" = type { %"class.std::__1::__vector_base.823" }
%"class.std::__1::__vector_base.823" = type { %"class.v8::internal::GlobalHandles::PendingPhantomCallback"*, %"class.v8::internal::GlobalHandles::PendingPhantomCallback"*, %"class.std::__1::__compressed_pair.824" }
%"class.v8::internal::GlobalHandles::PendingPhantomCallback" = type { void (%"class.v8::WeakCallbackInfo"*)*, i8*, [2 x i8*] }
%"class.v8::WeakCallbackInfo" = type { %"class.v8::Isolate"*, i8*, {}**, [2 x i8*] }
%"class.v8::Isolate" = type { i8 }
%"class.std::__1::__compressed_pair.824" = type { %"struct.std::__1::__compressed_pair_elem.825" }
%"struct.std::__1::__compressed_pair_elem.825" = type { %"class.v8::internal::GlobalHandles::PendingPhantomCallback"* }
%"class.v8::internal::EternalHandles" = type { i32, %"class.std::__1::vector.829", %"class.std::__1::vector.836" }
%"class.std::__1::vector.829" = type { %"class.std::__1::__vector_base.830" }
%"class.std::__1::__vector_base.830" = type { i64**, i64**, %"class.std::__1::__compressed_pair.831" }
%"class.std::__1::__compressed_pair.831" = type { %"struct.std::__1::__compressed_pair_elem.832" }
%"struct.std::__1::__compressed_pair_elem.832" = type { i64** }
%"class.v8::internal::ThreadManager" = type opaque
%"class.v8::bigint::Processor" = type opaque
%"class.v8::internal::RuntimeState" = type { %"class.std::__1::unique_ptr.843" }
%"class.std::__1::unique_ptr.843" = type { %"class.std::__1::__compressed_pair.844" }
%"class.std::__1::__compressed_pair.844" = type { %"struct.std::__1::__compressed_pair_elem.845" }
%"struct.std::__1::__compressed_pair_elem.845" = type { %"struct.v8::internal::Runtime::Function"* }
%"struct.v8::internal::Runtime::Function" = type { i32, i32, i8*, i64, i8, i8 }
%"class.v8::internal::Builtins" = type { %"class.v8::internal::Isolate"*, i8, i32 }
%"class.v8::internal::SetupIsolateDelegate" = type opaque
%"class.v8::internal::RegExpStack" = type opaque
%"class.std::__1::vector.836" = type { %"class.std::__1::__vector_base.837" }
%"class.std::__1::__vector_base.837" = type { i32*, i32*, %"class.std::__1::__compressed_pair.838" }
%"class.std::__1::__compressed_pair.838" = type { %"struct.std::__1::__compressed_pair_elem.839" }
%"struct.std::__1::__compressed_pair_elem.839" = type { i32* }
%"class.v8::internal::DateCache" = type { i32 (...)**, %"class.v8::internal::Smi", [32 x %"struct.v8::internal::DateCache::DST"], i32, %"struct.v8::internal::DateCache::DST"*, %"struct.v8::internal::DateCache::DST"*, i32, i8, i32, i32, i32, i32, i8*, i8*, %"class.v8::base::TimezoneCache"* }
%"class.v8::internal::Smi" = type { %"class.v8::internal::Object" }
%"struct.v8::internal::DateCache::DST" = type { i32, i32, i32, i32 }
%"class.v8::base::TimezoneCache" = type { i32 (...)** }
%"class.v8::base::RandomNumberGenerator" = type { i64, i64, i64 }
%"struct.std::__1::atomic.849" = type { %"struct.std::__1::__atomic_base.850" }
%"struct.std::__1::__atomic_base.850" = type { %"struct.std::__1::__cxx_atomic_impl.851" }
%"struct.std::__1::__cxx_atomic_impl.851" = type { %"struct.std::__1::__cxx_atomic_base_impl.852" }
%"struct.std::__1::__cxx_atomic_base_impl.852" = type { i32 }
%"class.v8::Promise" = type { i8 }
%"struct.std::__1::atomic.859" = type { %"struct.std::__1::__atomic_base.860" }
%"struct.std::__1::__atomic_base.860" = type { %"struct.std::__1::__cxx_atomic_impl.861" }
%"struct.std::__1::__cxx_atomic_impl.861" = type { %"struct.std::__1::__cxx_atomic_base_impl.862" }
%"struct.std::__1::__cxx_atomic_base_impl.862" = type { i32 }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.864" }
%"class.std::__1::__compressed_pair.864" = type { %"struct.std::__1::__compressed_pair_elem.865" }
%"struct.std::__1::__compressed_pair_elem.865" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon.866 }
%union.anon.866 = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::unordered_map.870" = type { %"class.std::__1::__hash_table.871" }
%"class.std::__1::__hash_table.871" = type <{ %"class.std::__1::unique_ptr.872", %"class.std::__1::__compressed_pair.882", %"class.std::__1::__compressed_pair.887", %"class.std::__1::__compressed_pair.890", [4 x i8] }>
%"class.std::__1::unique_ptr.872" = type { %"class.std::__1::__compressed_pair.873" }
%"class.std::__1::__compressed_pair.873" = type { %"struct.std::__1::__compressed_pair_elem.874", %"struct.std::__1::__compressed_pair_elem.876" }
%"struct.std::__1::__compressed_pair_elem.874" = type { %"struct.std::__1::__hash_node_base.875"** }
%"struct.std::__1::__hash_node_base.875" = type { %"struct.std::__1::__hash_node_base.875"* }
%"struct.std::__1::__compressed_pair_elem.876" = type { %"class.std::__1::__bucket_list_deallocator.877" }
%"class.std::__1::__bucket_list_deallocator.877" = type { %"class.std::__1::__compressed_pair.878" }
%"class.std::__1::__compressed_pair.878" = type { %"struct.std::__1::__compressed_pair_elem.12" }
%"class.std::__1::__compressed_pair.882" = type { %"struct.std::__1::__compressed_pair_elem.883" }
%"struct.std::__1::__compressed_pair_elem.883" = type { %"struct.std::__1::__hash_node_base.875" }
%"class.std::__1::__compressed_pair.887" = type { %"struct.std::__1::__compressed_pair_elem.12" }
%"class.std::__1::__compressed_pair.890" = type { %"struct.std::__1::__compressed_pair_elem.64" }
%"struct.std::__1::atomic.197" = type { %"struct.std::__1::__atomic_base.198" }
%"struct.std::__1::__atomic_base.198" = type { %"struct.std::__1::__cxx_atomic_impl.199" }
%"struct.std::__1::__cxx_atomic_impl.199" = type { %"struct.std::__1::__cxx_atomic_base_impl.200" }
%"struct.std::__1::__cxx_atomic_base_impl.200" = type { i8 }
%"class.v8::internal::Debug" = type { %"class.v8::debug::DebugDelegate"*, i8, i8, i8, i8, i8, i8, i8, i8, i8, %"class.v8::internal::DebugInfoListNode"*, %"class.std::__1::unique_ptr.896", %"class.v8::internal::Handle.902", %"class.v8::internal::DebugFeatureTracker", %"class.v8::internal::Debug::ThreadLocal", %"class.v8::internal::Handle.903", %"class.v8::internal::Isolate"* }
%"class.v8::debug::DebugDelegate" = type { i32 (...)** }
%"class.v8::internal::DebugInfoListNode" = type { i64*, %"class.v8::internal::DebugInfoListNode"* }
%"class.std::__1::unique_ptr.896" = type { %"class.std::__1::__compressed_pair.897" }
%"class.std::__1::__compressed_pair.897" = type { %"struct.std::__1::__compressed_pair_elem.898" }
%"struct.std::__1::__compressed_pair_elem.898" = type { %"class.v8::internal::Debug::TemporaryObjectsTracker"* }
%"class.v8::internal::Debug::TemporaryObjectsTracker" = type opaque
%"class.v8::internal::Handle.902" = type { %"class.v8::internal::HandleBase" }
%"class.v8::internal::DebugFeatureTracker" = type <{ %"class.v8::internal::Isolate"*, i32, [4 x i8] }>
%"class.v8::internal::Debug::ThreadLocal" = type <{ i64, i32, i8, [3 x i8], %"class.v8::internal::Object", i8, [3 x i8], i32, i32, i32, %"class.v8::internal::Object", %"class.v8::internal::Object", i32, i8, [3 x i8] }>
%"class.v8::internal::Handle.903" = type { %"class.v8::internal::HandleBase" }
%"class.v8::internal::HeapProfiler" = type { %"class.v8::internal::HeapObjectAllocationTracker", %"class.std::__1::unique_ptr.904", %"class.std::__1::vector.910", %"class.std::__1::unique_ptr.918", %"class.std::__1::unique_ptr.924", i8, i8, %"class.v8::base::Mutex", %"class.std::__1::unique_ptr.930", %"class.std::__1::vector.936", %"struct.std::__1::pair.944" }
%"class.v8::internal::HeapObjectAllocationTracker" = type { i32 (...)** }
%"class.std::__1::unique_ptr.904" = type { %"class.std::__1::__compressed_pair.905" }
%"class.std::__1::__compressed_pair.905" = type { %"struct.std::__1::__compressed_pair_elem.906" }
%"struct.std::__1::__compressed_pair_elem.906" = type { %"class.v8::internal::HeapObjectsMap"* }
%"class.v8::internal::HeapObjectsMap" = type opaque
%"class.std::__1::vector.910" = type { %"class.std::__1::__vector_base.911" }
%"class.std::__1::__vector_base.911" = type { %"class.std::__1::unique_ptr.912"*, %"class.std::__1::unique_ptr.912"*, %"class.std::__1::__compressed_pair.913" }
%"class.std::__1::unique_ptr.912" = type opaque
%"class.std::__1::__compressed_pair.913" = type { %"struct.std::__1::__compressed_pair_elem.914" }
%"struct.std::__1::__compressed_pair_elem.914" = type { %"class.std::__1::unique_ptr.912"* }
%"class.std::__1::unique_ptr.918" = type { %"class.std::__1::__compressed_pair.919" }
%"class.std::__1::__compressed_pair.919" = type { %"struct.std::__1::__compressed_pair_elem.920" }
%"struct.std::__1::__compressed_pair_elem.920" = type { %"class.v8::internal::StringsStorage"* }
%"class.v8::internal::StringsStorage" = type opaque
%"class.std::__1::unique_ptr.924" = type { %"class.std::__1::__compressed_pair.925" }
%"class.std::__1::__compressed_pair.925" = type { %"struct.std::__1::__compressed_pair_elem.926" }
%"struct.std::__1::__compressed_pair_elem.926" = type { %"class.v8::internal::AllocationTracker"* }
%"class.v8::internal::AllocationTracker" = type opaque
%"class.std::__1::unique_ptr.930" = type { %"class.std::__1::__compressed_pair.931" }
%"class.std::__1::__compressed_pair.931" = type { %"struct.std::__1::__compressed_pair_elem.932" }
%"struct.std::__1::__compressed_pair_elem.932" = type { %"class.v8::internal::SamplingHeapProfiler"* }
%"class.v8::internal::SamplingHeapProfiler" = type opaque
%"class.std::__1::vector.936" = type { %"class.std::__1::__vector_base.937" }
%"class.std::__1::__vector_base.937" = type { %"struct.std::__1::pair.938"*, %"struct.std::__1::pair.938"*, %"class.std::__1::__compressed_pair.939" }
%"struct.std::__1::pair.938" = type opaque
%"class.std::__1::__compressed_pair.939" = type { %"struct.std::__1::__compressed_pair_elem.940" }
%"struct.std::__1::__compressed_pair_elem.940" = type { %"struct.std::__1::pair.938"* }
%"struct.std::__1::pair.944" = type { i8 (%"class.v8::Isolate"*, %"class.v8::Local.41"*, i16, i8*)*, i8* }
%"class.v8::Local.41" = type { %"class.v8::Value"* }
%"class.std::__1::unique_ptr.945" = type { %"class.std::__1::__compressed_pair.946" }
%"class.std::__1::__compressed_pair.946" = type { %"struct.std::__1::__compressed_pair_elem.947" }
%"struct.std::__1::__compressed_pair_elem.947" = type { %"class.v8::internal::CodeEventDispatcher"* }
%"class.v8::internal::CodeEventDispatcher" = type { %"class.v8::internal::CodeEventListener", %"class.std::__1::unordered_set.948", %"class.v8::base::Mutex" }
%"class.std::__1::unordered_set.948" = type { %"class.std::__1::__hash_table.949" }
%"class.std::__1::__hash_table.949" = type <{ %"class.std::__1::unique_ptr.950", %"class.std::__1::__compressed_pair.960", %"class.std::__1::__compressed_pair.965", %"class.std::__1::__compressed_pair.969", [4 x i8] }>
%"class.std::__1::unique_ptr.950" = type { %"class.std::__1::__compressed_pair.951" }
%"class.std::__1::__compressed_pair.951" = type { %"struct.std::__1::__compressed_pair_elem.952", %"struct.std::__1::__compressed_pair_elem.954" }
%"struct.std::__1::__compressed_pair_elem.952" = type { %"struct.std::__1::__hash_node_base.953"** }
%"struct.std::__1::__hash_node_base.953" = type { %"struct.std::__1::__hash_node_base.953"* }
%"struct.std::__1::__compressed_pair_elem.954" = type { %"class.std::__1::__bucket_list_deallocator.955" }
%"class.std::__1::__bucket_list_deallocator.955" = type { %"class.std::__1::__compressed_pair.956" }
%"class.std::__1::__compressed_pair.956" = type { %"struct.std::__1::__compressed_pair_elem.12" }
%"class.std::__1::__compressed_pair.960" = type { %"struct.std::__1::__compressed_pair_elem.961" }
%"struct.std::__1::__compressed_pair_elem.961" = type { %"struct.std::__1::__hash_node_base.953" }
%"class.std::__1::__compressed_pair.965" = type { %"struct.std::__1::__compressed_pair_elem.12" }
%"class.std::__1::__compressed_pair.969" = type { %"struct.std::__1::__compressed_pair_elem.64" }
%"class.v8::internal::AstStringConstants" = type opaque
%"class.v8::internal::interpreter::Interpreter" = type opaque
%"class.v8::internal::compiler::PerIsolateCompilerCache" = type opaque
%"class.v8::internal::Zone" = type <{ i64, i64, i64, i64, %"class.v8::internal::AccountingAllocator"*, %"class.v8::internal::Segment"*, i8*, i8, i8, [6 x i8] }>
%"class.v8::internal::Segment" = type { %"class.v8::internal::Zone"*, %"class.v8::internal::Segment"*, i64 }
%"class.v8::internal::CompilerDispatcher" = type opaque
%"class.std::__1::queue" = type { %"class.std::__1::deque" }
%"class.std::__1::deque" = type { %"class.std::__1::__deque_base" }
%"class.std::__1::__deque_base" = type { %"struct.std::__1::__split_buffer", i64, %"class.std::__1::__compressed_pair.983" }
%"struct.std::__1::__split_buffer" = type { %"struct.std::__1::pair.977"**, %"struct.std::__1::pair.977"**, %"struct.std::__1::pair.977"**, %"class.std::__1::__compressed_pair.978" }
%"struct.std::__1::pair.977" = type opaque
%"class.std::__1::__compressed_pair.978" = type { %"struct.std::__1::__compressed_pair_elem.979" }
%"struct.std::__1::__compressed_pair_elem.979" = type { %"struct.std::__1::pair.977"** }
%"class.std::__1::__compressed_pair.983" = type { %"struct.std::__1::__compressed_pair_elem.12" }
%"class.v8::String" = type { i8 }
%"class.v8::Context" = type { i8 }
%"class.v8::FunctionCallbackInfo" = type <{ i64*, i64*, i32, [4 x i8] }>
%"class.v8::internal::Relocatable" = type { i32 (...)**, %"class.v8::internal::Isolate"*, %"class.v8::internal::Relocatable"* }
%"class.std::__1::vector.988" = type { %"class.std::__1::__vector_base.989" }
%"class.std::__1::__vector_base.989" = type { %"class.v8::internal::Handle.990"*, %"class.v8::internal::Handle.990"*, %"class.std::__1::__compressed_pair.991" }
%"class.v8::internal::Handle.990" = type { %"class.v8::internal::HandleBase" }
%"class.std::__1::__compressed_pair.991" = type { %"struct.std::__1::__compressed_pair_elem.992" }
%"struct.std::__1::__compressed_pair_elem.992" = type { %"class.v8::internal::Handle.990"* }
%"class.v8::internal::AddressToIndexHashMap" = type { %"class.v8::internal::PointerToIndexHashMap.996" }
%"class.v8::internal::PointerToIndexHashMap.996" = type { %"class.v8::base::TemplateHashMapImpl" }
%"class.v8::base::TemplateHashMapImpl" = type { %"struct.v8::base::TemplateHashMapImpl<unsigned long, unsigned int, v8::base::KeyEqualityMatcher<long>, v8::base::DefaultAllocationPolicy>::Impl" }
%"struct.v8::base::TemplateHashMapImpl<unsigned long, unsigned int, v8::base::KeyEqualityMatcher<long>, v8::base::DefaultAllocationPolicy>::Impl" = type { %"struct.v8::base::TemplateHashMapEntry"*, i32, i32 }
%"struct.v8::base::TemplateHashMapEntry" = type <{ i64, i32, i32, i8, [7 x i8] }>
%"class.v8::internal::HeapObjectToIndexHashMap" = type { %"class.v8::internal::PointerToIndexHashMap" }
%"class.v8::internal::PointerToIndexHashMap" = type { %"class.v8::base::TemplateHashMapImpl" }
%"class.v8::internal::MicrotaskQueue" = type opaque
%"class.v8::internal::CompilationStatistics" = type opaque
%"class.v8::internal::CodeTracer" = type <{ %"class.v8::internal::EmbeddedVector", %struct._IO_FILE*, i32, [4 x i8] }>
%"class.v8::internal::EmbeddedVector" = type { %"class.v8::internal::Vector", [128 x i8] }
%"class.v8::internal::Vector" = type { i8*, i64 }
%struct._IO_FILE = type { i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, %struct._IO_marker*, %struct._IO_FILE*, i32, i32, i64, i16, i8, [1 x i8], i8*, i64, %struct._IO_codecvt*, %struct._IO_wide_data*, %struct._IO_FILE*, i8*, i64, i32, [20 x i8] }
%struct._IO_marker = type opaque
%struct._IO_codecvt = type opaque
%struct._IO_wide_data = type opaque
%"class.v8::PromiseRejectMessage" = type { %"class.v8::Local.854", i32, %"class.v8::Local.41" }
%"class.v8::Local.854" = type { %"class.v8::Promise"* }
%"class.v8::StartupData" = type { i8*, i32 }
%"class.v8_inspector::V8Inspector" = type opaque
%"class.v8::internal::compiler::NodeObserver" = type opaque
%"class.v8::internal::OptimizingCompileDispatcher" = type opaque
%"class.std::__1::unique_ptr.997" = type { %"class.std::__1::__compressed_pair.998" }
%"class.std::__1::__compressed_pair.998" = type { %"struct.std::__1::__compressed_pair_elem.999" }
%"struct.std::__1::__compressed_pair_elem.999" = type { %"class.v8::internal::PersistentHandlesList"* }
%"class.v8::internal::PersistentHandlesList" = type { %"class.v8::base::Mutex", %"class.v8::internal::PersistentHandles"* }
%"class.v8::internal::PersistentHandles" = type { %"class.v8::internal::Isolate"*, %"class.std::__1::vector.829", i64*, i64*, %"class.v8::internal::PersistentHandles"*, %"class.v8::internal::PersistentHandles"* }
%"class.std::__1::vector.1003" = type { %"class.std::__1::__vector_base.1004" }
%"class.std::__1::__vector_base.1004" = type { void (%"class.v8::Isolate"*)**, void (%"class.v8::Isolate"*)**, %"class.std::__1::__compressed_pair.1005" }
%"class.std::__1::__compressed_pair.1005" = type { %"struct.std::__1::__compressed_pair_elem.1006" }
%"struct.std::__1::__compressed_pair_elem.1006" = type { void (%"class.v8::Isolate"*)** }
%"class.std::__1::shared_ptr.1010" = type { %"class.v8::internal::metrics::Recorder"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::internal::metrics::Recorder" = type opaque
%"class.std::__1::unordered_map.1011" = type { %"class.std::__1::__hash_table.1012" }
%"class.std::__1::__hash_table.1012" = type <{ %"class.std::__1::unique_ptr.1013", %"class.std::__1::__compressed_pair.1023", %"class.std::__1::__compressed_pair.1028", %"class.std::__1::__compressed_pair.1031", [4 x i8] }>
%"class.std::__1::unique_ptr.1013" = type { %"class.std::__1::__compressed_pair.1014" }
%"class.std::__1::__compressed_pair.1014" = type { %"struct.std::__1::__compressed_pair_elem.1015", %"struct.std::__1::__compressed_pair_elem.1017" }
%"struct.std::__1::__compressed_pair_elem.1015" = type { %"struct.std::__1::__hash_node_base.1016"** }
%"struct.std::__1::__hash_node_base.1016" = type { %"struct.std::__1::__hash_node_base.1016"* }
%"struct.std::__1::__compressed_pair_elem.1017" = type { %"class.std::__1::__bucket_list_deallocator.1018" }
%"class.std::__1::__bucket_list_deallocator.1018" = type { %"class.std::__1::__compressed_pair.1019" }
%"class.std::__1::__compressed_pair.1019" = type { %"struct.std::__1::__compressed_pair_elem.12" }
%"class.std::__1::__compressed_pair.1023" = type { %"struct.std::__1::__compressed_pair_elem.1024" }
%"struct.std::__1::__compressed_pair_elem.1024" = type { %"struct.std::__1::__hash_node_base.1016" }
%"class.std::__1::__compressed_pair.1028" = type { %"struct.std::__1::__compressed_pair_elem.12" }
%"class.std::__1::__compressed_pair.1031" = type { %"struct.std::__1::__compressed_pair_elem.64" }
%"struct.v8::metrics::LongTaskStats" = type { i64, i64, i64 }
%"class.v8::internal::BuiltinsConstantsTableBuilder" = type opaque
%"class.v8::ArrayBuffer::Allocator" = type { i32 (...)** }
%"class.std::__1::shared_ptr.205" = type { %"class.v8::ArrayBuffer::Allocator"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::internal::FutexWaitListNode" = type { %"class.v8::internal::Isolate"*, %"class.std::__1::shared_ptr.1035", %"class.v8::internal::CancelableTaskManager"*, %"class.v8::base::ConditionVariable", %"class.v8::internal::FutexWaitListNode"*, %"class.v8::internal::FutexWaitListNode"*, %"class.std::__1::weak_ptr.1064", i64, i8*, i8, i8, %"class.v8::Global", %"class.v8::Global.1065", %"class.v8::base::TimeTicks", i64 }
%"class.std::__1::shared_ptr.1035" = type { %"class.v8::TaskRunner"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::TaskRunner" = type { i32 (...)** }
%"class.v8::base::ConditionVariable" = type { %union.pthread_cond_t }
%union.pthread_cond_t = type { %struct.__pthread_cond_s }
%struct.__pthread_cond_s = type { %union.anon.1060, %union.anon.1062, [2 x i32], [2 x i32], i32, i32, [2 x i32] }
%union.anon.1060 = type { i64 }
%union.anon.1062 = type { i64 }
%"class.std::__1::weak_ptr.1064" = type { %"class.v8::internal::BackingStore"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::internal::BackingStore" = type <{ i8*, %"struct.std::__1::atomic", i64, %"union.v8::internal::BackingStore::TypeSpecificData", i16, [6 x i8] }>
%"union.v8::internal::BackingStore::TypeSpecificData" = type { %"class.std::__1::shared_ptr.205" }
%"class.v8::Global" = type { %"class.v8::PersistentBase" }
%"class.v8::PersistentBase" = type { %"class.v8::Promise"* }
%"class.v8::Global.1065" = type { %"class.v8::PersistentBase.1066" }
%"class.v8::PersistentBase.1066" = type { %"class.v8::Context"* }
%"class.v8::internal::CancelableTaskManager" = type <{ i64, %"class.std::__1::unordered_map.1036", %"class.v8::base::ConditionVariable", %"class.v8::base::Mutex", i8, [7 x i8] }>
%"class.std::__1::unordered_map.1036" = type { %"class.std::__1::__hash_table.1037" }
%"class.std::__1::__hash_table.1037" = type <{ %"class.std::__1::unique_ptr.1038", %"class.std::__1::__compressed_pair.1048", %"class.std::__1::__compressed_pair.1053", %"class.std::__1::__compressed_pair.1056", [4 x i8] }>
%"class.std::__1::unique_ptr.1038" = type { %"class.std::__1::__compressed_pair.1039" }
%"class.std::__1::__compressed_pair.1039" = type { %"struct.std::__1::__compressed_pair_elem.1040", %"struct.std::__1::__compressed_pair_elem.1042" }
%"struct.std::__1::__compressed_pair_elem.1040" = type { %"struct.std::__1::__hash_node_base.1041"** }
%"struct.std::__1::__hash_node_base.1041" = type { %"struct.std::__1::__hash_node_base.1041"* }
%"struct.std::__1::__compressed_pair_elem.1042" = type { %"class.std::__1::__bucket_list_deallocator.1043" }
%"class.std::__1::__bucket_list_deallocator.1043" = type { %"class.std::__1::__compressed_pair.1044" }
%"class.std::__1::__compressed_pair.1044" = type { %"struct.std::__1::__compressed_pair_elem.12" }
%"class.std::__1::__compressed_pair.1048" = type { %"struct.std::__1::__compressed_pair_elem.1049" }
%"struct.std::__1::__compressed_pair_elem.1049" = type { %"struct.std::__1::__hash_node_base.1041" }
%"class.std::__1::__compressed_pair.1053" = type { %"struct.std::__1::__compressed_pair_elem.12" }
%"class.std::__1::__compressed_pair.1056" = type { %"struct.std::__1::__compressed_pair_elem.64" }
%"class.v8::debug::ConsoleDelegate" = type { i32 (...)** }
%"class.v8::debug::AsyncEventDelegate" = type { i32 (...)** }
%"class.std::__1::unique_ptr.1067" = type { %"class.std::__1::__compressed_pair.1068" }
%"class.std::__1::__compressed_pair.1068" = type { %"struct.std::__1::__compressed_pair_elem.1069" }
%"struct.std::__1::__compressed_pair_elem.1069" = type { %"class.v8::internal::LocalIsolate"* }
%"class.v8::internal::LocalIsolate" = type { %"class.v8::internal::HiddenLocalFactory", %"class.v8::internal::LocalHeap", %"class.v8::internal::Isolate"*, %"class.std::__1::unique_ptr.1096", %"class.v8::internal::ThreadId", i64, %"class.v8::internal::RuntimeCallStats"* }
%"class.v8::internal::HiddenLocalFactory" = type { %"class.v8::internal::LocalFactory" }
%"class.v8::internal::LocalFactory" = type { %"class.v8::internal::ReadOnlyRoots" }
%"class.v8::internal::ReadOnlyRoots" = type { i64* }
%"class.v8::internal::LocalHeap" = type { %"class.v8::internal::Heap"*, i8, %"struct.std::__1::atomic.1072", i8, i8, %"class.v8::internal::LocalHeap"*, %"class.v8::internal::LocalHeap"*, %"class.std::__1::unique_ptr.1076", %"class.std::__1::unique_ptr.1082", %"class.std::__1::unique_ptr.519", %"class.std::__1::vector.1088", %"class.v8::internal::ConcurrentAllocator" }
%"struct.std::__1::atomic.1072" = type { %"struct.std::__1::__atomic_base.1073" }
%"struct.std::__1::__atomic_base.1073" = type { %"struct.std::__1::__cxx_atomic_impl.1074" }
%"struct.std::__1::__cxx_atomic_impl.1074" = type { %"struct.std::__1::__cxx_atomic_base_impl.1075" }
%"struct.std::__1::__cxx_atomic_base_impl.1075" = type { i32 }
%"class.std::__1::unique_ptr.1076" = type { %"class.std::__1::__compressed_pair.1077" }
%"class.std::__1::__compressed_pair.1077" = type { %"struct.std::__1::__compressed_pair_elem.1078" }
%"struct.std::__1::__compressed_pair_elem.1078" = type { %"class.v8::internal::LocalHandles"* }
%"class.v8::internal::LocalHandles" = type { %"struct.v8::internal::HandleScopeData", %"class.std::__1::vector.829" }
%"class.std::__1::unique_ptr.1082" = type { %"class.std::__1::__compressed_pair.1083" }
%"class.std::__1::__compressed_pair.1083" = type { %"struct.std::__1::__compressed_pair_elem.1084" }
%"struct.std::__1::__compressed_pair_elem.1084" = type { %"class.v8::internal::PersistentHandles"* }
%"class.std::__1::vector.1088" = type { %"class.std::__1::__vector_base.1089" }
%"class.std::__1::__vector_base.1089" = type { %"struct.std::__1::pair.1090"*, %"struct.std::__1::pair.1090"*, %"class.std::__1::__compressed_pair.1091" }
%"struct.std::__1::pair.1090" = type opaque
%"class.std::__1::__compressed_pair.1091" = type { %"struct.std::__1::__compressed_pair_elem.1092" }
%"struct.std::__1::__compressed_pair_elem.1092" = type { %"struct.std::__1::pair.1090"* }
%"class.v8::internal::ConcurrentAllocator" = type { %"class.v8::internal::LocalHeap"*, %"class.v8::internal::PagedSpace"*, %"class.v8::internal::LocalAllocationBuffer" }
%"class.v8::internal::PagedSpace" = type { %"class.v8::internal::SpaceWithLinearArea", i32, i32, i64, %"class.v8::internal::AllocationStats", %"class.v8::base::Mutex", i64, i64 }
%"class.v8::internal::SpaceWithLinearArea" = type { %"class.v8::internal::Space", %"class.v8::internal::LinearAllocationArea", [3 x i64] }
%"class.v8::internal::Space" = type { %"class.v8::internal::BaseSpace", %"class.v8::internal::AllocationCounter", %"class.v8::internal::heap::List", %"struct.std::__1::atomic"*, %"class.std::__1::unique_ptr.142" }
%"class.v8::internal::AllocationCounter" = type <{ %"class.std::__1::vector.82", %"class.std::__1::vector.82", %"class.std::__1::unordered_set", i8, [7 x i8], i64, i64, i8, [7 x i8] }>
%"class.std::__1::vector.82" = type { %"class.std::__1::__vector_base.83" }
%"class.std::__1::__vector_base.83" = type { %"struct.v8::internal::AllocationCounter::AllocationObserverCounter"*, %"struct.v8::internal::AllocationCounter::AllocationObserverCounter"*, %"class.std::__1::__compressed_pair.84" }
%"struct.v8::internal::AllocationCounter::AllocationObserverCounter" = type { %"class.v8::internal::AllocationObserver"*, i64, i64 }
%"class.std::__1::__compressed_pair.84" = type { %"struct.std::__1::__compressed_pair_elem.85" }
%"struct.std::__1::__compressed_pair_elem.85" = type { %"struct.v8::internal::AllocationCounter::AllocationObserverCounter"* }
%"class.std::__1::unordered_set" = type { %"class.std::__1::__hash_table.89" }
%"class.std::__1::__hash_table.89" = type <{ %"class.std::__1::unique_ptr.90", %"class.std::__1::__compressed_pair.100", %"class.std::__1::__compressed_pair.105", %"class.std::__1::__compressed_pair.107", [4 x i8] }>
%"class.std::__1::unique_ptr.90" = type { %"class.std::__1::__compressed_pair.91" }
%"class.std::__1::__compressed_pair.91" = type { %"struct.std::__1::__compressed_pair_elem.92", %"struct.std::__1::__compressed_pair_elem.94" }
%"struct.std::__1::__compressed_pair_elem.92" = type { %"struct.std::__1::__hash_node_base.93"** }
%"struct.std::__1::__hash_node_base.93" = type { %"struct.std::__1::__hash_node_base.93"* }
%"struct.std::__1::__compressed_pair_elem.94" = type { %"class.std::__1::__bucket_list_deallocator.95" }
%"class.std::__1::__bucket_list_deallocator.95" = type { %"class.std::__1::__compressed_pair.96" }
%"class.std::__1::__compressed_pair.96" = type { %"struct.std::__1::__compressed_pair_elem.12" }
%"class.std::__1::__compressed_pair.100" = type { %"struct.std::__1::__compressed_pair_elem.101" }
%"struct.std::__1::__compressed_pair_elem.101" = type { %"struct.std::__1::__hash_node_base.93" }
%"class.std::__1::__compressed_pair.105" = type { %"struct.std::__1::__compressed_pair_elem.12" }
%"class.std::__1::__compressed_pair.107" = type { %"struct.std::__1::__compressed_pair_elem.64" }
%"class.v8::internal::heap::List" = type { %"class.v8::internal::MemoryChunk"*, %"class.v8::internal::MemoryChunk"* }
%"class.v8::internal::MemoryChunk" = type { %"class.v8::internal::BasicMemoryChunk", [2 x %"class.v8::internal::SlotSet"*], %"struct.std::__1::atomic", %"struct.std::__1::atomic.66", %"class.v8::internal::SlotSet"*, [2 x %"class.v8::internal::TypedSlotSet"*], [2 x %"class.std::__1::set.123"*], %"class.v8::base::Mutex"*, %"struct.std::__1::atomic.131", %"class.v8::base::Mutex"*, i64, [2 x %"struct.std::__1::atomic"], %"class.v8::internal::heap::ListNode", %"class.v8::internal::FreeListCategory"**, %"struct.std::__1::atomic.66", %"class.v8::internal::Bitmap"*, %"class.v8::internal::CodeObjectRegistry"*, %"class.v8::internal::PossiblyEmptyBuckets" }
%"class.v8::internal::BasicMemoryChunk" = type { i64, i64, %"class.v8::internal::Heap"*, i64, i64, i64, i64, %"struct.std::__1::atomic.66", %"struct.std::__1::atomic.112", %"class.v8::internal::VirtualMemory" }
%"struct.std::__1::atomic.112" = type { %"struct.std::__1::__atomic_base.113" }
%"struct.std::__1::__atomic_base.113" = type { %"struct.std::__1::__cxx_atomic_impl.114" }
%"struct.std::__1::__cxx_atomic_impl.114" = type { %"struct.std::__1::__cxx_atomic_base_impl.115" }
%"struct.std::__1::__cxx_atomic_base_impl.115" = type { %"class.v8::internal::BaseSpace"* }
%"class.v8::internal::SlotSet" = type { i8 }
%"class.v8::internal::TypedSlotSet" = type { %"class.v8::internal::TypedSlots", i64 }
%"class.v8::internal::TypedSlots" = type { i32 (...)**, %"struct.v8::internal::TypedSlots::Chunk"*, %"struct.v8::internal::TypedSlots::Chunk"* }
%"struct.v8::internal::TypedSlots::Chunk" = type { %"struct.v8::internal::TypedSlots::Chunk"*, %"class.std::__1::vector.116" }
%"class.std::__1::vector.116" = type { %"class.std::__1::__vector_base.117" }
%"class.std::__1::__vector_base.117" = type { %"struct.v8::internal::TypedSlots::TypedSlot"*, %"struct.v8::internal::TypedSlots::TypedSlot"*, %"class.std::__1::__compressed_pair.118" }
%"struct.v8::internal::TypedSlots::TypedSlot" = type { i32 }
%"class.std::__1::__compressed_pair.118" = type { %"struct.std::__1::__compressed_pair_elem.119" }
%"struct.std::__1::__compressed_pair_elem.119" = type { %"struct.v8::internal::TypedSlots::TypedSlot"* }
%"class.std::__1::set.123" = type { %"class.std::__1::__tree.124" }
%"class.std::__1::__tree.124" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.125", %"class.std::__1::__compressed_pair.129" }
%"class.std::__1::__compressed_pair.125" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"class.std::__1::__compressed_pair.129" = type { %"struct.std::__1::__compressed_pair_elem.12" }
%"struct.std::__1::atomic.131" = type { %"struct.std::__1::__atomic_base.132" }
%"struct.std::__1::__atomic_base.132" = type { %"struct.std::__1::__cxx_atomic_impl.133" }
%"struct.std::__1::__cxx_atomic_impl.133" = type { %"struct.std::__1::__cxx_atomic_base_impl.134" }
%"struct.std::__1::__cxx_atomic_base_impl.134" = type { i64 }
%"class.v8::internal::heap::ListNode" = type { %"class.v8::internal::MemoryChunk"*, %"class.v8::internal::MemoryChunk"* }
%"class.v8::internal::FreeListCategory" = type { i32, i32, %"class.v8::internal::FreeSpace", %"class.v8::internal::FreeListCategory"*, %"class.v8::internal::FreeListCategory"* }
%"class.v8::internal::FreeSpace" = type { %"class.v8::internal::TorqueGeneratedFreeSpace" }
%"class.v8::internal::TorqueGeneratedFreeSpace" = type { %"class.v8::internal::HeapObject" }
%"class.v8::internal::Bitmap" = type { i8 }
%"class.v8::internal::CodeObjectRegistry" = type <{ %"class.std::__1::vector.135", i8, [7 x i8] }>
%"class.std::__1::vector.135" = type { %"class.std::__1::__vector_base.136" }
%"class.std::__1::__vector_base.136" = type { i64*, i64*, %"class.std::__1::__compressed_pair.137" }
%"class.std::__1::__compressed_pair.137" = type { %"struct.std::__1::__compressed_pair_elem.138" }
%"struct.std::__1::__compressed_pair_elem.138" = type { i64* }
%"class.v8::internal::PossiblyEmptyBuckets" = type { i64 }
%"class.std::__1::unique_ptr.142" = type { %"class.std::__1::__compressed_pair.143" }
%"class.std::__1::__compressed_pair.143" = type { %"struct.std::__1::__compressed_pair_elem.144" }
%"struct.std::__1::__compressed_pair_elem.144" = type { %"class.v8::internal::FreeList"* }
%"class.v8::internal::FreeList" = type { i32 (...)**, i32, i32, i64, %"struct.std::__1::atomic", %"class.v8::internal::FreeListCategory"**, i64 }
%"class.v8::internal::LinearAllocationArea" = type { i64, i64, i64 }
%"class.v8::internal::LocalAllocationBuffer" = type { %"class.v8::internal::Heap"*, %"class.v8::internal::LinearAllocationArea" }
%"class.std::__1::unique_ptr.1096" = type { %"class.std::__1::__compressed_pair.1097" }
%"class.std::__1::__compressed_pair.1097" = type { %"struct.std::__1::__compressed_pair_elem.1098" }
%"struct.std::__1::__compressed_pair_elem.1098" = type { %"class.v8::internal::LocalLogger"* }
%"class.v8::internal::LocalLogger" = type opaque
%"struct.v8::internal::ManagedPtrDestructor" = type { i64, %"struct.v8::internal::ManagedPtrDestructor"*, %"struct.v8::internal::ManagedPtrDestructor"*, i8*, void (i8*)*, i64* }
%"class.v8::internal::wasm::WasmEngine" = type opaque
%"class.std::__1::unique_ptr.1105" = type { %"class.std::__1::__compressed_pair.1106" }
%"class.std::__1::__compressed_pair.1106" = type { %"struct.std::__1::__compressed_pair_elem.1107" }
%"struct.std::__1::__compressed_pair_elem.1107" = type { %"class.v8::internal::TracingCpuProfilerImpl"* }
%"class.v8::internal::TracingCpuProfilerImpl" = type opaque
%"class.v8::internal::EmbeddedFileWriterInterface" = type opaque
%"class.v8::Context::BackupIncumbentScope" = type { %"class.v8::Local.855", i64, %"class.v8::Context::BackupIncumbentScope"* }
%"class.v8::Local.855" = type { %"class.v8::Context"* }
%"class.v8::internal::Isolate::ThreadDataTable" = type { %"class.std::__1::unordered_map.1113" }
%"class.std::__1::unordered_map.1113" = type { %"class.std::__1::__hash_table.1114" }
%"class.std::__1::__hash_table.1114" = type <{ %"class.std::__1::unique_ptr.1115", %"class.std::__1::__compressed_pair.1125", %"class.std::__1::__compressed_pair.1130", %"class.std::__1::__compressed_pair.1133", [4 x i8] }>
%"class.std::__1::unique_ptr.1115" = type { %"class.std::__1::__compressed_pair.1116" }
%"class.std::__1::__compressed_pair.1116" = type { %"struct.std::__1::__compressed_pair_elem.1117", %"struct.std::__1::__compressed_pair_elem.1119" }
%"struct.std::__1::__compressed_pair_elem.1117" = type { %"struct.std::__1::__hash_node_base.1118"** }
%"struct.std::__1::__hash_node_base.1118" = type { %"struct.std::__1::__hash_node_base.1118"* }
%"struct.std::__1::__compressed_pair_elem.1119" = type { %"class.std::__1::__bucket_list_deallocator.1120" }
%"class.std::__1::__bucket_list_deallocator.1120" = type { %"class.std::__1::__compressed_pair.1121" }
%"class.std::__1::__compressed_pair.1121" = type { %"struct.std::__1::__compressed_pair_elem.12" }
%"class.std::__1::__compressed_pair.1125" = type { %"struct.std::__1::__compressed_pair_elem.1126" }
%"struct.std::__1::__compressed_pair_elem.1126" = type { %"struct.std::__1::__hash_node_base.1118" }
%"class.std::__1::__compressed_pair.1130" = type { %"struct.std::__1::__compressed_pair_elem.12" }
%"class.std::__1::__compressed_pair.1133" = type { %"struct.std::__1::__compressed_pair_elem.64" }
%"struct.std::__1::atomic.1139" = type { %"struct.std::__1::__atomic_base.1140" }
%"struct.std::__1::__atomic_base.1140" = type { %"struct.std::__1::__cxx_atomic_impl.1141" }
%"struct.std::__1::__cxx_atomic_impl.1141" = type { %"struct.std::__1::__cxx_atomic_base_impl.1142" }
%"struct.std::__1::__cxx_atomic_base_impl.1142" = type { %"class.std::__1::vector.1143"* }
%"class.std::__1::vector.1143" = type { %"class.std::__1::__vector_base.1144" }
%"class.std::__1::__vector_base.1144" = type { %"struct.v8::MemoryRange"*, %"struct.v8::MemoryRange"*, %"class.std::__1::__compressed_pair.1145" }
%"struct.v8::MemoryRange" = type { i8*, i64 }
%"class.std::__1::__compressed_pair.1145" = type { %"struct.std::__1::__compressed_pair_elem.1146" }
%"struct.std::__1::__compressed_pair_elem.1146" = type { %"struct.v8::MemoryRange"* }
%"struct.std::__1::atomic.71" = type { %"struct.std::__1::__atomic_base.72" }
%"struct.std::__1::__atomic_base.72" = type { %"struct.std::__1::__cxx_atomic_impl.73" }
%"struct.std::__1::__cxx_atomic_impl.73" = type { %"struct.std::__1::__cxx_atomic_base_impl.74" }
%"struct.std::__1::__cxx_atomic_base_impl.74" = type { i32 }
%"class.std::__1::vector.75" = type { %"class.std::__1::__vector_base.76" }
%"class.std::__1::__vector_base.76" = type { %"struct.std::__1::pair"*, %"struct.std::__1::pair"*, %"class.std::__1::__compressed_pair.77" }
%"struct.std::__1::pair" = type opaque
%"class.std::__1::__compressed_pair.77" = type { %"struct.std::__1::__compressed_pair_elem.78" }
%"struct.std::__1::__compressed_pair_elem.78" = type { %"struct.std::__1::pair"* }
%"class.v8::internal::NewSpace" = type { %"class.v8::internal::SpaceWithLinearArea", %"class.v8::base::Mutex", %"struct.std::__1::atomic", %"struct.std::__1::atomic", %"class.v8::internal::SemiSpace", %"class.v8::internal::SemiSpace", %"class.v8::internal::VirtualMemory", %"class.std::__1::vector.148" }
%"class.v8::internal::SemiSpace" = type { %"class.v8::internal::Space", i64, i64, i64, i64, i64, i32, %"class.v8::internal::Page"* }
%"class.v8::internal::Page" = type { %"class.v8::internal::MemoryChunk" }
%"class.std::__1::vector.148" = type { %"class.std::__1::__vector_base.149" }
%"class.std::__1::__vector_base.149" = type { %"struct.std::__1::pair.150"*, %"struct.std::__1::pair.150"*, %"class.std::__1::__compressed_pair.151" }
%"struct.std::__1::pair.150" = type { i32, i64 }
%"class.std::__1::__compressed_pair.151" = type { %"struct.std::__1::__compressed_pair_elem.152" }
%"struct.std::__1::__compressed_pair_elem.152" = type { %"struct.std::__1::pair.150"* }
%"class.v8::internal::CodeSpace" = type { %"class.v8::internal::PagedSpace" }
%"class.v8::internal::OldLargeObjectSpace" = type { %"class.v8::internal::LargeObjectSpace" }
%"class.v8::internal::LargeObjectSpace" = type { %"class.v8::internal::Space", %"struct.std::__1::atomic", i32, %"struct.std::__1::atomic", %"class.v8::base::Mutex", %"struct.std::__1::atomic" }
%"class.v8::internal::CodeLargeObjectSpace" = type { %"class.v8::internal::OldLargeObjectSpace", %"class.std::__1::unordered_map.156" }
%"class.std::__1::unordered_map.156" = type { %"class.std::__1::__hash_table.157" }
%"class.std::__1::__hash_table.157" = type <{ %"class.std::__1::unique_ptr.158", %"class.std::__1::__compressed_pair.168", %"class.std::__1::__compressed_pair.173", %"class.std::__1::__compressed_pair.178", [4 x i8] }>
%"class.std::__1::unique_ptr.158" = type { %"class.std::__1::__compressed_pair.159" }
%"class.std::__1::__compressed_pair.159" = type { %"struct.std::__1::__compressed_pair_elem.160", %"struct.std::__1::__compressed_pair_elem.162" }
%"struct.std::__1::__compressed_pair_elem.160" = type { %"struct.std::__1::__hash_node_base.161"** }
%"struct.std::__1::__hash_node_base.161" = type { %"struct.std::__1::__hash_node_base.161"* }
%"struct.std::__1::__compressed_pair_elem.162" = type { %"class.std::__1::__bucket_list_deallocator.163" }
%"class.std::__1::__bucket_list_deallocator.163" = type { %"class.std::__1::__compressed_pair.164" }
%"class.std::__1::__compressed_pair.164" = type { %"struct.std::__1::__compressed_pair_elem.12" }
%"class.std::__1::__compressed_pair.168" = type { %"struct.std::__1::__compressed_pair_elem.169" }
%"struct.std::__1::__compressed_pair_elem.169" = type { %"struct.std::__1::__hash_node_base.161" }
%"class.std::__1::__compressed_pair.173" = type { %"struct.std::__1::__compressed_pair_elem.12" }
%"class.std::__1::__compressed_pair.178" = type { %"struct.std::__1::__compressed_pair_elem.64" }
%"class.v8::internal::NewLargeObjectSpace" = type { %"class.v8::internal::LargeObjectSpace", i64 }
%"class.v8::internal::OldSpace" = type { %"class.v8::internal::PagedSpace" }
%"class.v8::internal::MapSpace" = type { %"class.v8::internal::PagedSpace" }
%"class.std::__1::unique_ptr.191" = type { %"class.std::__1::__compressed_pair.192" }
%"class.std::__1::__compressed_pair.192" = type { %"struct.std::__1::__compressed_pair_elem.193" }
%"struct.std::__1::__compressed_pair_elem.193" = type { %"class.v8::internal::ConcurrentAllocator"* }
%"class.v8::internal::ArrayBufferExtension" = type { %"struct.std::__1::atomic.197", %"struct.std::__1::atomic.201", %"class.std::__1::shared_ptr", %"class.v8::internal::ArrayBufferExtension"*, %"struct.std::__1::atomic" }
%"struct.std::__1::atomic.201" = type { %"struct.std::__1::__atomic_base.202" }
%"struct.std::__1::__atomic_base.202" = type { %"struct.std::__1::__cxx_atomic_impl.203" }
%"struct.std::__1::__cxx_atomic_impl.203" = type { %"struct.std::__1::__cxx_atomic_base_impl.204" }
%"struct.std::__1::__cxx_atomic_base_impl.204" = type { i8 }
%"class.std::__1::shared_ptr" = type { %"class.v8::internal::BackingStore"*, %"class.std::__1::__shared_weak_count"* }
%"struct.std::__1::atomic.206" = type { %"struct.std::__1::__atomic_base.207" }
%"struct.std::__1::__atomic_base.207" = type { %"struct.std::__1::__cxx_atomic_impl.208" }
%"struct.std::__1::__cxx_atomic_impl.208" = type { %"struct.std::__1::__cxx_atomic_base_impl.209" }
%"struct.std::__1::__cxx_atomic_base_impl.209" = type { i32 }
%"class.v8::internal::AllocationObserver" = type { i32 (...)**, i64 }
%"class.v8::internal::StressScavengeObserver" = type opaque
%"class.v8::internal::Object" = type { %"class.v8::internal::TaggedImpl" }
%"class.v8::internal::TaggedImpl" = type { i64 }
%"class.std::__1::vector.210" = type { %"class.std::__1::__vector_base.211" }
%"class.std::__1::__vector_base.211" = type { %"struct.v8::internal::Heap::GCCallbackTuple"*, %"struct.v8::internal::Heap::GCCallbackTuple"*, %"class.std::__1::__compressed_pair.212" }
%"struct.v8::internal::Heap::GCCallbackTuple" = type { void (%"class.v8::Isolate"*, i32, i32, i8*)*, i32, i8* }
%"class.std::__1::__compressed_pair.212" = type { %"struct.std::__1::__compressed_pair_elem.213" }
%"struct.std::__1::__compressed_pair_elem.213" = type { %"struct.v8::internal::Heap::GCCallbackTuple"* }
%"class.std::__1::unique_ptr.217" = type { %"class.std::__1::__compressed_pair.218" }
%"class.std::__1::__compressed_pair.218" = type { %"struct.std::__1::__compressed_pair_elem.219" }
%"struct.std::__1::__compressed_pair_elem.219" = type { %"class.v8::internal::GCTracer"* }
%"class.v8::internal::GCTracer" = type opaque
%"class.std::__1::unique_ptr.223" = type { %"class.std::__1::__compressed_pair.224" }
%"class.std::__1::__compressed_pair.224" = type { %"struct.std::__1::__compressed_pair_elem.225" }
%"struct.std::__1::__compressed_pair_elem.225" = type { %"class.v8::internal::MarkCompactCollector"* }
%"class.v8::internal::MarkCompactCollector" = type <{ %"class.v8::internal::MarkCompactCollectorBase", %"class.v8::base::Mutex", %"class.v8::base::Semaphore", i8, i8, i8, i8, i8, i8, [2 x i8], %"class.v8::internal::MarkingWorklists", %"class.v8::internal::WeakObjects", %"struct.v8::internal::EphemeronMarking", %"class.std::__1::unique_ptr.265", %"class.std::__1::unique_ptr.271", %"class.v8::internal::NativeContextInferrer", [7 x i8], %"class.v8::internal::NativeContextStats", %"class.std::__1::vector.325", %"class.std::__1::vector.325", %"class.std::__1::vector.325", %"class.std::__1::vector.332", %"class.v8::internal::Sweeper"*, %"class.v8::internal::MajorMarkingState", %"class.v8::internal::MajorNonAtomicMarkingState", [2 x i8], i32, i32, [4 x i8] }>
%"class.v8::internal::MarkCompactCollectorBase" = type { i32 (...)**, %"class.v8::internal::Heap"* }
%"class.v8::base::Semaphore" = type { %union.sem_t }
%union.sem_t = type { i64, [24 x i8] }
%"class.v8::internal::MarkingWorklists" = type { %"class.heap::base::Worklist", %"class.heap::base::Worklist", %"class.heap::base::Worklist.226", %"class.std::__1::vector.227", %"class.std::__1::vector.234", %"class.heap::base::Worklist" }
%"class.heap::base::Worklist.226" = type { %"class.v8::base::Mutex", %"class.heap::base::Worklist<v8::internal::HeapObject, 16>::Segment"*, %"struct.std::__1::atomic" }
%"class.heap::base::Worklist<v8::internal::HeapObject, 16>::Segment" = type opaque
%"class.std::__1::vector.227" = type { %"class.std::__1::__vector_base.228" }
%"class.std::__1::__vector_base.228" = type { %"struct.v8::internal::ContextWorklistPair"*, %"struct.v8::internal::ContextWorklistPair"*, %"class.std::__1::__compressed_pair.229" }
%"struct.v8::internal::ContextWorklistPair" = type { i64, %"class.heap::base::Worklist"* }
%"class.std::__1::__compressed_pair.229" = type { %"struct.std::__1::__compressed_pair_elem.230" }
%"struct.std::__1::__compressed_pair_elem.230" = type { %"struct.v8::internal::ContextWorklistPair"* }
%"class.std::__1::vector.234" = type { %"class.std::__1::__vector_base.235" }
%"class.std::__1::__vector_base.235" = type { %"class.std::__1::unique_ptr.236"*, %"class.std::__1::unique_ptr.236"*, %"class.std::__1::__compressed_pair.237" }
%"class.std::__1::unique_ptr.236" = type opaque
%"class.std::__1::__compressed_pair.237" = type { %"struct.std::__1::__compressed_pair_elem.238" }
%"struct.std::__1::__compressed_pair_elem.238" = type { %"class.std::__1::unique_ptr.236"* }
%"class.heap::base::Worklist" = type { %"class.v8::base::Mutex", %"class.heap::base::Worklist<v8::internal::HeapObject, 64>::Segment"*, %"struct.std::__1::atomic" }
%"class.heap::base::Worklist<v8::internal::HeapObject, 64>::Segment" = type opaque
%"class.v8::internal::WeakObjects" = type { %"class.v8::internal::Worklist", %"class.v8::internal::Worklist.242", %"class.v8::internal::Worklist.244", %"class.v8::internal::Worklist.244", %"class.v8::internal::Worklist.244", %"class.v8::internal::Worklist.246", %"class.v8::internal::Worklist.248", %"class.v8::internal::Worklist.250", %"class.v8::internal::Worklist.252", %"class.v8::internal::Worklist.254", %"class.v8::internal::Worklist.256" }
%"class.v8::internal::Worklist" = type <{ [8 x %"struct.v8::internal::Worklist<v8::internal::TransitionArray, 64>::PrivateSegmentHolder"], %"class.v8::internal::Worklist<v8::internal::TransitionArray, 64>::GlobalPool", i32, [4 x i8] }>
%"struct.v8::internal::Worklist<v8::internal::TransitionArray, 64>::PrivateSegmentHolder" = type { %"class.v8::internal::Worklist<v8::internal::TransitionArray, 64>::Segment"*, %"class.v8::internal::Worklist<v8::internal::TransitionArray, 64>::Segment"*, [64 x i8] }
%"class.v8::internal::Worklist<v8::internal::TransitionArray, 64>::Segment" = type opaque
%"class.v8::internal::Worklist<v8::internal::TransitionArray, 64>::GlobalPool" = type { %"class.v8::base::Mutex", %"class.v8::internal::Worklist<v8::internal::TransitionArray, 64>::Segment"*, %"struct.std::__1::atomic" }
%"class.v8::internal::Worklist.242" = type <{ [8 x %"struct.v8::internal::Worklist<v8::internal::EphemeronHashTable, 64>::PrivateSegmentHolder"], %"class.v8::internal::Worklist<v8::internal::EphemeronHashTable, 64>::GlobalPool", i32, [4 x i8] }>
%"struct.v8::internal::Worklist<v8::internal::EphemeronHashTable, 64>::PrivateSegmentHolder" = type { %"class.v8::internal::Worklist<v8::internal::EphemeronHashTable, 64>::Segment"*, %"class.v8::internal::Worklist<v8::internal::EphemeronHashTable, 64>::Segment"*, [64 x i8] }
%"class.v8::internal::Worklist<v8::internal::EphemeronHashTable, 64>::Segment" = type opaque
%"class.v8::internal::Worklist<v8::internal::EphemeronHashTable, 64>::GlobalPool" = type { %"class.v8::base::Mutex", %"class.v8::internal::Worklist<v8::internal::EphemeronHashTable, 64>::Segment"*, %"struct.std::__1::atomic" }
%"class.v8::internal::Worklist.244" = type <{ [8 x %"struct.v8::internal::Worklist<v8::internal::Ephemeron, 64>::PrivateSegmentHolder"], %"class.v8::internal::Worklist<v8::internal::Ephemeron, 64>::GlobalPool", i32, [4 x i8] }>
%"struct.v8::internal::Worklist<v8::internal::Ephemeron, 64>::PrivateSegmentHolder" = type { %"class.v8::internal::Worklist<v8::internal::Ephemeron, 64>::Segment"*, %"class.v8::internal::Worklist<v8::internal::Ephemeron, 64>::Segment"*, [64 x i8] }
%"class.v8::internal::Worklist<v8::internal::Ephemeron, 64>::Segment" = type opaque
%"class.v8::internal::Worklist<v8::internal::Ephemeron, 64>::GlobalPool" = type { %"class.v8::base::Mutex", %"class.v8::internal::Worklist<v8::internal::Ephemeron, 64>::Segment"*, %"struct.std::__1::atomic" }
%"class.v8::internal::Worklist.246" = type <{ [8 x %"struct.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::CompressedHeapObjectSlot>, 64>::PrivateSegmentHolder"], %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::CompressedHeapObjectSlot>, 64>::GlobalPool", i32, [4 x i8] }>
%"struct.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::CompressedHeapObjectSlot>, 64>::PrivateSegmentHolder" = type { %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::CompressedHeapObjectSlot>, 64>::Segment"*, %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::CompressedHeapObjectSlot>, 64>::Segment"*, [64 x i8] }
%"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::CompressedHeapObjectSlot>, 64>::Segment" = type opaque
%"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::CompressedHeapObjectSlot>, 64>::GlobalPool" = type { %"class.v8::base::Mutex", %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::CompressedHeapObjectSlot>, 64>::Segment"*, %"struct.std::__1::atomic" }
%"class.v8::internal::Worklist.248" = type <{ [8 x %"struct.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::Code>, 64>::PrivateSegmentHolder"], %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::Code>, 64>::GlobalPool", i32, [4 x i8] }>
%"struct.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::Code>, 64>::PrivateSegmentHolder" = type { %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::Code>, 64>::Segment"*, %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::Code>, 64>::Segment"*, [64 x i8] }
%"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::Code>, 64>::Segment" = type opaque
%"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::Code>, 64>::GlobalPool" = type { %"class.v8::base::Mutex", %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::Code>, 64>::Segment"*, %"struct.std::__1::atomic" }
%"class.v8::internal::Worklist.250" = type <{ [8 x %"struct.v8::internal::Worklist<v8::internal::JSWeakRef, 64>::PrivateSegmentHolder"], %"class.v8::internal::Worklist<v8::internal::JSWeakRef, 64>::GlobalPool", i32, [4 x i8] }>
%"struct.v8::internal::Worklist<v8::internal::JSWeakRef, 64>::PrivateSegmentHolder" = type { %"class.v8::internal::Worklist<v8::internal::JSWeakRef, 64>::Segment"*, %"class.v8::internal::Worklist<v8::internal::JSWeakRef, 64>::Segment"*, [64 x i8] }
%"class.v8::internal::Worklist<v8::internal::JSWeakRef, 64>::Segment" = type opaque
%"class.v8::internal::Worklist<v8::internal::JSWeakRef, 64>::GlobalPool" = type { %"class.v8::base::Mutex", %"class.v8::internal::Worklist<v8::internal::JSWeakRef, 64>::Segment"*, %"struct.std::__1::atomic" }
%"class.v8::internal::Worklist.252" = type <{ [8 x %"struct.v8::internal::Worklist<v8::internal::WeakCell, 64>::PrivateSegmentHolder"], %"class.v8::internal::Worklist<v8::internal::WeakCell, 64>::GlobalPool", i32, [4 x i8] }>
%"struct.v8::internal::Worklist<v8::internal::WeakCell, 64>::PrivateSegmentHolder" = type { %"class.v8::internal::Worklist<v8::internal::WeakCell, 64>::Segment"*, %"class.v8::internal::Worklist<v8::internal::WeakCell, 64>::Segment"*, [64 x i8] }
%"class.v8::internal::Worklist<v8::internal::WeakCell, 64>::Segment" = type opaque
%"class.v8::internal::Worklist<v8::internal::WeakCell, 64>::GlobalPool" = type { %"class.v8::base::Mutex", %"class.v8::internal::Worklist<v8::internal::WeakCell, 64>::Segment"*, %"struct.std::__1::atomic" }
%"class.v8::internal::Worklist.254" = type <{ [8 x %"struct.v8::internal::Worklist<v8::internal::SharedFunctionInfo, 64>::PrivateSegmentHolder"], %"class.v8::internal::Worklist<v8::internal::SharedFunctionInfo, 64>::GlobalPool", i32, [4 x i8] }>
%"struct.v8::internal::Worklist<v8::internal::SharedFunctionInfo, 64>::PrivateSegmentHolder" = type { %"class.v8::internal::Worklist<v8::internal::SharedFunctionInfo, 64>::Segment"*, %"class.v8::internal::Worklist<v8::internal::SharedFunctionInfo, 64>::Segment"*, [64 x i8] }
%"class.v8::internal::Worklist<v8::internal::SharedFunctionInfo, 64>::Segment" = type opaque
%"class.v8::internal::Worklist<v8::internal::SharedFunctionInfo, 64>::GlobalPool" = type { %"class.v8::base::Mutex", %"class.v8::internal::Worklist<v8::internal::SharedFunctionInfo, 64>::Segment"*, %"struct.std::__1::atomic" }
%"class.v8::internal::Worklist.256" = type <{ [8 x %"struct.v8::internal::Worklist<v8::internal::JSFunction, 64>::PrivateSegmentHolder"], %"class.v8::internal::Worklist<v8::internal::JSFunction, 64>::GlobalPool", i32, [4 x i8] }>
%"struct.v8::internal::Worklist<v8::internal::JSFunction, 64>::PrivateSegmentHolder" = type { %"class.v8::internal::Worklist<v8::internal::JSFunction, 64>::Segment"*, %"class.v8::internal::Worklist<v8::internal::JSFunction, 64>::Segment"*, [64 x i8] }
%"class.v8::internal::Worklist<v8::internal::JSFunction, 64>::Segment" = type opaque
%"class.v8::internal::Worklist<v8::internal::JSFunction, 64>::GlobalPool" = type { %"class.v8::base::Mutex", %"class.v8::internal::Worklist<v8::internal::JSFunction, 64>::Segment"*, %"struct.std::__1::atomic" }
%"struct.v8::internal::EphemeronMarking" = type { %"class.std::__1::vector.258", i8, i64 }
%"class.std::__1::vector.258" = type { %"class.std::__1::__vector_base.259" }
%"class.std::__1::__vector_base.259" = type { %"class.v8::internal::HeapObject"*, %"class.v8::internal::HeapObject"*, %"class.std::__1::__compressed_pair.260" }
%"class.std::__1::__compressed_pair.260" = type { %"struct.std::__1::__compressed_pair_elem.261" }
%"struct.std::__1::__compressed_pair_elem.261" = type { %"class.v8::internal::HeapObject"* }
%"class.std::__1::unique_ptr.265" = type { %"class.std::__1::__compressed_pair.266" }
%"class.std::__1::__compressed_pair.266" = type { %"struct.std::__1::__compressed_pair_elem.267" }
%"struct.std::__1::__compressed_pair_elem.267" = type { %"class.v8::internal::MainMarkingVisitor"* }
%"class.v8::internal::MainMarkingVisitor" = type opaque
%"class.std::__1::unique_ptr.271" = type { %"class.std::__1::__compressed_pair.272" }
%"class.std::__1::__compressed_pair.272" = type { %"struct.std::__1::__compressed_pair_elem.273" }
%"struct.std::__1::__compressed_pair_elem.273" = type { %"class.v8::internal::MarkingWorklists::Local"* }
%"class.v8::internal::MarkingWorklists::Local" = type { %"class.heap::base::Worklist<v8::internal::HeapObject, 64>::Local", %"class.heap::base::Worklist<v8::internal::HeapObject, 16>::Local", %"class.heap::base::Worklist<v8::internal::HeapObject, 64>::Local", i64, %"class.heap::base::Worklist<v8::internal::HeapObject, 64>::Local"*, i8, [7 x i8], %"class.std::__1::unordered_map.274" }
%"class.heap::base::Worklist<v8::internal::HeapObject, 16>::Local" = type { %"class.heap::base::Worklist.226"*, %"class.heap::base::internal::SegmentBase"*, %"class.heap::base::internal::SegmentBase"* }
%"class.heap::base::internal::SegmentBase" = type { i16, i16 }
%"class.heap::base::Worklist<v8::internal::HeapObject, 64>::Local" = type { %"class.heap::base::Worklist"*, %"class.heap::base::internal::SegmentBase"*, %"class.heap::base::internal::SegmentBase"* }
%"class.std::__1::unordered_map.274" = type { %"class.std::__1::__hash_table.275" }
%"class.std::__1::__hash_table.275" = type <{ %"class.std::__1::unique_ptr.276", %"class.std::__1::__compressed_pair.286", %"class.std::__1::__compressed_pair.291", %"class.std::__1::__compressed_pair.294", [4 x i8] }>
%"class.std::__1::unique_ptr.276" = type { %"class.std::__1::__compressed_pair.277" }
%"class.std::__1::__compressed_pair.277" = type { %"struct.std::__1::__compressed_pair_elem.278", %"struct.std::__1::__compressed_pair_elem.280" }
%"struct.std::__1::__compressed_pair_elem.278" = type { %"struct.std::__1::__hash_node_base.279"** }
%"struct.std::__1::__hash_node_base.279" = type { %"struct.std::__1::__hash_node_base.279"* }
%"struct.std::__1::__compressed_pair_elem.280" = type { %"class.std::__1::__bucket_list_deallocator.281" }
%"class.std::__1::__bucket_list_deallocator.281" = type { %"class.std::__1::__compressed_pair.282" }
%"class.std::__1::__compressed_pair.282" = type { %"struct.std::__1::__compressed_pair_elem.12" }
%"class.std::__1::__compressed_pair.286" = type { %"struct.std::__1::__compressed_pair_elem.287" }
%"struct.std::__1::__compressed_pair_elem.287" = type { %"struct.std::__1::__hash_node_base.279" }
%"class.std::__1::__compressed_pair.291" = type { %"struct.std::__1::__compressed_pair_elem.12" }
%"class.std::__1::__compressed_pair.294" = type { %"struct.std::__1::__compressed_pair_elem.64" }
%"class.v8::internal::NativeContextInferrer" = type { i8 }
%"class.v8::internal::NativeContextStats" = type { %"class.std::__1::unordered_map.301" }
%"class.std::__1::unordered_map.301" = type { %"class.std::__1::__hash_table.302" }
%"class.std::__1::__hash_table.302" = type <{ %"class.std::__1::unique_ptr.303", %"class.std::__1::__compressed_pair.313", %"class.std::__1::__compressed_pair.318", %"class.std::__1::__compressed_pair.321", [4 x i8] }>
%"class.std::__1::unique_ptr.303" = type { %"class.std::__1::__compressed_pair.304" }
%"class.std::__1::__compressed_pair.304" = type { %"struct.std::__1::__compressed_pair_elem.305", %"struct.std::__1::__compressed_pair_elem.307" }
%"struct.std::__1::__compressed_pair_elem.305" = type { %"struct.std::__1::__hash_node_base.306"** }
%"struct.std::__1::__hash_node_base.306" = type { %"struct.std::__1::__hash_node_base.306"* }
%"struct.std::__1::__compressed_pair_elem.307" = type { %"class.std::__1::__bucket_list_deallocator.308" }
%"class.std::__1::__bucket_list_deallocator.308" = type { %"class.std::__1::__compressed_pair.309" }
%"class.std::__1::__compressed_pair.309" = type { %"struct.std::__1::__compressed_pair_elem.12" }
%"class.std::__1::__compressed_pair.313" = type { %"struct.std::__1::__compressed_pair_elem.314" }
%"struct.std::__1::__compressed_pair_elem.314" = type { %"struct.std::__1::__hash_node_base.306" }
%"class.std::__1::__compressed_pair.318" = type { %"struct.std::__1::__compressed_pair_elem.12" }
%"class.std::__1::__compressed_pair.321" = type { %"struct.std::__1::__compressed_pair_elem.64" }
%"class.std::__1::vector.325" = type { %"class.std::__1::__vector_base.326" }
%"class.std::__1::__vector_base.326" = type { %"class.v8::internal::Page"**, %"class.v8::internal::Page"**, %"class.std::__1::__compressed_pair.327" }
%"class.std::__1::__compressed_pair.327" = type { %"struct.std::__1::__compressed_pair_elem.328" }
%"struct.std::__1::__compressed_pair_elem.328" = type { %"class.v8::internal::Page"** }
%"class.std::__1::vector.332" = type { %"class.std::__1::__vector_base.333" }
%"class.std::__1::__vector_base.333" = type { %"struct.std::__1::pair.334"*, %"struct.std::__1::pair.334"*, %"class.std::__1::__compressed_pair.335" }
%"struct.std::__1::pair.334" = type opaque
%"class.std::__1::__compressed_pair.335" = type { %"struct.std::__1::__compressed_pair_elem.336" }
%"struct.std::__1::__compressed_pair_elem.336" = type { %"struct.std::__1::pair.334"* }
%"class.v8::internal::Sweeper" = type <{ %"class.v8::internal::Heap"*, %"class.v8::internal::MajorNonAtomicMarkingState"*, %"class.std::__1::unique_ptr.340", %"class.v8::base::Mutex", [3 x %"class.std::__1::vector.325"], [3 x %"class.std::__1::vector.325"], i8, %"struct.std::__1::atomic.197", [6 x i8], %"class.std::__1::vector.325", i64, %"class.v8::base::Semaphore", i8, i8, i8, [5 x i8] }>
%"class.std::__1::unique_ptr.340" = type { %"class.std::__1::__compressed_pair.341" }
%"class.std::__1::__compressed_pair.341" = type { %"struct.std::__1::__compressed_pair_elem.342" }
%"struct.std::__1::__compressed_pair_elem.342" = type { %"class.v8::JobHandle"* }
%"class.v8::JobHandle" = type { i32 (...)** }
%"class.v8::internal::MajorMarkingState" = type { i8 }
%"class.v8::internal::MajorNonAtomicMarkingState" = type { i8 }
%"class.v8::internal::MinorMarkCompactCollector" = type <{ %"class.v8::internal::MarkCompactCollectorBase", %"class.v8::internal::Worklist.350"*, %"class.v8::internal::YoungGenerationMarkingVisitor"*, %"class.v8::base::Semaphore", %"class.std::__1::vector.325", %"class.std::__1::vector.325", %"class.v8::internal::MinorMarkingState", %"class.v8::internal::MinorNonAtomicMarkingState", [6 x i8] }>
%"class.v8::internal::Worklist.350" = type opaque
%"class.v8::internal::YoungGenerationMarkingVisitor" = type opaque
%"class.v8::internal::MinorMarkingState" = type { i8 }
%"class.v8::internal::MinorNonAtomicMarkingState" = type { i8 }
%"class.std::__1::unique_ptr.353" = type { %"class.std::__1::__compressed_pair.354" }
%"class.std::__1::__compressed_pair.354" = type { %"struct.std::__1::__compressed_pair_elem.355" }
%"struct.std::__1::__compressed_pair_elem.355" = type { %"class.v8::internal::ScavengerCollector"* }
%"class.v8::internal::ScavengerCollector" = type opaque
%"class.std::__1::unique_ptr.359" = type { %"class.std::__1::__compressed_pair.360" }
%"class.std::__1::__compressed_pair.360" = type { %"struct.std::__1::__compressed_pair_elem.361" }
%"struct.std::__1::__compressed_pair_elem.361" = type { %"class.v8::internal::ArrayBufferSweeper"* }
%"class.v8::internal::ArrayBufferSweeper" = type opaque
%"class.std::__1::unique_ptr.365" = type { %"class.std::__1::__compressed_pair.366" }
%"class.std::__1::__compressed_pair.366" = type { %"struct.std::__1::__compressed_pair_elem.367" }
%"struct.std::__1::__compressed_pair_elem.367" = type { %"class.v8::internal::MemoryAllocator"* }
%"class.v8::internal::MemoryAllocator" = type { %"class.v8::internal::Isolate"*, %"class.v8::PageAllocator"*, %"class.v8::PageAllocator"*, i64, %"struct.std::__1::atomic", %"struct.std::__1::atomic", %"struct.std::__1::atomic", %"struct.std::__1::atomic", %"class.v8::internal::VirtualMemory", %"class.v8::internal::MemoryAllocator::Unmapper", %"class.std::__1::unordered_set.375", %"class.v8::base::Mutex" }
%"class.v8::internal::MemoryAllocator::Unmapper" = type { %"class.v8::internal::Heap"*, %"class.v8::internal::MemoryAllocator"*, %"class.v8::base::Mutex", [3 x %"class.std::__1::vector.368"], %"class.std::__1::unique_ptr.340" }
%"class.std::__1::vector.368" = type { %"class.std::__1::__vector_base.369" }
%"class.std::__1::__vector_base.369" = type { %"class.v8::internal::MemoryChunk"**, %"class.v8::internal::MemoryChunk"**, %"class.std::__1::__compressed_pair.370" }
%"class.std::__1::__compressed_pair.370" = type { %"struct.std::__1::__compressed_pair_elem.371" }
%"struct.std::__1::__compressed_pair_elem.371" = type { %"class.v8::internal::MemoryChunk"** }
%"class.std::__1::unique_ptr.404" = type { %"class.std::__1::__compressed_pair.405" }
%"class.std::__1::__compressed_pair.405" = type { %"struct.std::__1::__compressed_pair_elem.406" }
%"struct.std::__1::__compressed_pair_elem.406" = type { %"class.v8::internal::IncrementalMarking"* }
%"class.v8::internal::IncrementalMarking" = type { %"class.v8::internal::Heap"*, %"class.v8::internal::MarkCompactCollector"*, %"class.v8::internal::WeakObjects"*, double, double, i64, i64, i64, i64, double, i64, %"struct.std::__1::atomic.407", i8, i8, i8, i8, [3 x i8], %"class.v8::internal::IncrementalMarkingJob", %"struct.std::__1::atomic.411", %"class.v8::internal::IncrementalMarking::Observer", %"class.v8::internal::IncrementalMarking::Observer", %"class.v8::internal::MajorMarkingState", %"class.v8::internal::MajorAtomicMarkingState", %"class.v8::internal::MajorNonAtomicMarkingState", %"class.v8::base::Mutex", %"class.std::__1::unordered_map.416" }
%"struct.std::__1::atomic.407" = type { %"struct.std::__1::__atomic_base.408" }
%"struct.std::__1::__atomic_base.408" = type { %"struct.std::__1::__cxx_atomic_impl.409" }
%"struct.std::__1::__cxx_atomic_impl.409" = type { %"struct.std::__1::__cxx_atomic_base_impl.410" }
%"struct.std::__1::__cxx_atomic_base_impl.410" = type { i8 }
%"class.v8::internal::IncrementalMarkingJob" = type <{ %"class.v8::base::Mutex", double, i8, i8, [6 x i8] }>
%"struct.std::__1::atomic.411" = type { %"struct.std::__1::__atomic_base.412" }
%"struct.std::__1::__atomic_base.412" = type { %"struct.std::__1::__cxx_atomic_impl.413" }
%"struct.std::__1::__cxx_atomic_impl.413" = type { %"struct.std::__1::__cxx_atomic_base_impl.414" }
%"struct.std::__1::__cxx_atomic_base_impl.414" = type { i32 }
%"class.v8::internal::IncrementalMarking::Observer" = type { %"class.v8::internal::AllocationObserver", %"class.v8::internal::IncrementalMarking"* }
%"class.v8::internal::MajorAtomicMarkingState" = type { i8 }
%"class.std::__1::unordered_map.416" = type { %"class.std::__1::__hash_table.417" }
%"class.std::__1::__hash_table.417" = type <{ %"class.std::__1::unique_ptr.418", %"class.std::__1::__compressed_pair.428", %"class.std::__1::__compressed_pair.433", %"class.std::__1::__compressed_pair.436", [4 x i8] }>
%"class.std::__1::unique_ptr.418" = type { %"class.std::__1::__compressed_pair.419" }
%"class.std::__1::__compressed_pair.419" = type { %"struct.std::__1::__compressed_pair_elem.420", %"struct.std::__1::__compressed_pair_elem.422" }
%"struct.std::__1::__compressed_pair_elem.420" = type { %"struct.std::__1::__hash_node_base.421"** }
%"struct.std::__1::__hash_node_base.421" = type { %"struct.std::__1::__hash_node_base.421"* }
%"struct.std::__1::__compressed_pair_elem.422" = type { %"class.std::__1::__bucket_list_deallocator.423" }
%"class.std::__1::__bucket_list_deallocator.423" = type { %"class.std::__1::__compressed_pair.424" }
%"class.std::__1::__compressed_pair.424" = type { %"struct.std::__1::__compressed_pair_elem.12" }
%"class.std::__1::__compressed_pair.428" = type { %"struct.std::__1::__compressed_pair_elem.429" }
%"struct.std::__1::__compressed_pair_elem.429" = type { %"struct.std::__1::__hash_node_base.421" }
%"class.std::__1::__compressed_pair.433" = type { %"struct.std::__1::__compressed_pair_elem.12" }
%"class.std::__1::__compressed_pair.436" = type { %"struct.std::__1::__compressed_pair_elem.64" }
%"class.std::__1::unique_ptr.443" = type { %"class.std::__1::__compressed_pair.444" }
%"class.std::__1::__compressed_pair.444" = type { %"struct.std::__1::__compressed_pair_elem.445" }
%"struct.std::__1::__compressed_pair_elem.445" = type { %"class.v8::internal::ConcurrentMarking"* }
%"class.v8::internal::ConcurrentMarking" = type <{ %"class.std::__1::unique_ptr.340", %"class.v8::internal::Heap"*, %"class.v8::internal::MarkingWorklists"*, %"class.v8::internal::WeakObjects"*, [8 x %"struct.v8::internal::ConcurrentMarking::TaskState"], %"struct.std::__1::atomic", %"struct.std::__1::atomic.197", [7 x i8] }>
%"struct.v8::internal::ConcurrentMarking::TaskState" = type { i64, %"class.std::__1::unordered_map.446", %"class.v8::internal::NativeContextInferrer", [7 x i8], %"class.v8::internal::NativeContextStats", [64 x i8] }
%"class.std::__1::unordered_map.446" = type { %"class.std::__1::__hash_table.447" }
%"class.std::__1::__hash_table.447" = type <{ %"class.std::__1::unique_ptr.448", %"class.std::__1::__compressed_pair.458", %"class.std::__1::__compressed_pair.463", %"class.std::__1::__compressed_pair.466", [4 x i8] }>
%"class.std::__1::unique_ptr.448" = type { %"class.std::__1::__compressed_pair.449" }
%"class.std::__1::__compressed_pair.449" = type { %"struct.std::__1::__compressed_pair_elem.450", %"struct.std::__1::__compressed_pair_elem.452" }
%"struct.std::__1::__compressed_pair_elem.450" = type { %"struct.std::__1::__hash_node_base.451"** }
%"struct.std::__1::__hash_node_base.451" = type { %"struct.std::__1::__hash_node_base.451"* }
%"struct.std::__1::__compressed_pair_elem.452" = type { %"class.std::__1::__bucket_list_deallocator.453" }
%"class.std::__1::__bucket_list_deallocator.453" = type { %"class.std::__1::__compressed_pair.454" }
%"class.std::__1::__compressed_pair.454" = type { %"struct.std::__1::__compressed_pair_elem.12" }
%"class.std::__1::__compressed_pair.458" = type { %"struct.std::__1::__compressed_pair_elem.459" }
%"struct.std::__1::__compressed_pair_elem.459" = type { %"struct.std::__1::__hash_node_base.451" }
%"class.std::__1::__compressed_pair.463" = type { %"struct.std::__1::__compressed_pair_elem.12" }
%"class.std::__1::__compressed_pair.466" = type { %"struct.std::__1::__compressed_pair_elem.64" }
%"class.std::__1::unique_ptr.473" = type { %"class.std::__1::__compressed_pair.474" }
%"class.std::__1::__compressed_pair.474" = type { %"struct.std::__1::__compressed_pair_elem.475" }
%"struct.std::__1::__compressed_pair_elem.475" = type { %"class.v8::internal::GCIdleTimeHandler"* }
%"class.v8::internal::GCIdleTimeHandler" = type opaque
%"class.std::__1::unique_ptr.479" = type { %"class.std::__1::__compressed_pair.480" }
%"class.std::__1::__compressed_pair.480" = type { %"struct.std::__1::__compressed_pair_elem.481" }
%"struct.std::__1::__compressed_pair_elem.481" = type { %"class.v8::internal::MemoryMeasurement"* }
%"class.v8::internal::MemoryMeasurement" = type { %"class.std::__1::list", %"class.std::__1::list", %"class.std::__1::list", %"class.v8::internal::Isolate"*, i8, i8, i8, %"class.v8::base::RandomNumberGenerator" }
%"class.std::__1::list" = type { %"class.std::__1::__list_imp" }
%"class.std::__1::__list_imp" = type { %"struct.std::__1::__list_node_base", %"class.std::__1::__compressed_pair.482" }
%"struct.std::__1::__list_node_base" = type { %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"* }
%"class.std::__1::__compressed_pair.482" = type { %"struct.std::__1::__compressed_pair_elem.12" }
%"class.std::__1::unique_ptr.489" = type { %"class.std::__1::__compressed_pair.490" }
%"class.std::__1::__compressed_pair.490" = type { %"struct.std::__1::__compressed_pair_elem.491" }
%"struct.std::__1::__compressed_pair_elem.491" = type { %"class.v8::internal::MemoryReducer"* }
%"class.v8::internal::MemoryReducer" = type opaque
%"class.std::__1::unique_ptr.495" = type { %"class.std::__1::__compressed_pair.496" }
%"class.std::__1::__compressed_pair.496" = type { %"struct.std::__1::__compressed_pair_elem.497" }
%"struct.std::__1::__compressed_pair_elem.497" = type { %"class.v8::internal::ObjectStats"* }
%"class.v8::internal::ObjectStats" = type opaque
%"class.std::__1::unique_ptr.501" = type { %"class.std::__1::__compressed_pair.502" }
%"class.std::__1::__compressed_pair.502" = type { %"struct.std::__1::__compressed_pair_elem.503" }
%"struct.std::__1::__compressed_pair_elem.503" = type { %"class.v8::internal::ScavengeJob"* }
%"class.v8::internal::ScavengeJob" = type opaque
%"class.std::__1::unique_ptr.507" = type { %"class.std::__1::__compressed_pair.508" }
%"class.std::__1::__compressed_pair.508" = type { %"struct.std::__1::__compressed_pair_elem.509" }
%"struct.std::__1::__compressed_pair_elem.509" = type { %"class.v8::internal::AllocationObserver"* }
%"class.std::__1::unique_ptr.513" = type { %"class.std::__1::__compressed_pair.514" }
%"class.std::__1::__compressed_pair.514" = type { %"struct.std::__1::__compressed_pair_elem.515" }
%"struct.std::__1::__compressed_pair_elem.515" = type { %"class.v8::internal::LocalEmbedderHeapTracer"* }
%"class.v8::internal::LocalEmbedderHeapTracer" = type opaque
%"class.std::__1::unique_ptr.519" = type { %"class.std::__1::__compressed_pair.520" }
%"class.std::__1::__compressed_pair.520" = type { %"struct.std::__1::__compressed_pair_elem.521" }
%"struct.std::__1::__compressed_pair_elem.521" = type { %"class.v8::internal::MarkingBarrier"* }
%"class.v8::internal::MarkingBarrier" = type opaque
%"class.std::__1::shared_ptr.525" = type { %"class.v8::internal::CodeRange"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::internal::CodeRange" = type { %"class.v8::internal::VirtualMemoryCage", %"struct.std::__1::atomic.526", %"class.v8::base::Mutex" }
%"class.v8::internal::VirtualMemoryCage" = type { i32 (...)**, i64, %"class.std::__1::unique_ptr.5", %"class.v8::internal::VirtualMemory" }
%"struct.std::__1::atomic.526" = type { %"struct.std::__1::__atomic_base.527" }
%"struct.std::__1::__atomic_base.527" = type { %"struct.std::__1::__cxx_atomic_impl.528" }
%"struct.std::__1::__cxx_atomic_impl.528" = type { %"struct.std::__1::__cxx_atomic_base_impl.529" }
%"struct.std::__1::__cxx_atomic_base_impl.529" = type { i8* }
%"class.v8::CppHeap" = type opaque
%"class.v8::EmbedderRootsHandler" = type { i32 (...)** }
%"class.v8::internal::StrongRootsEntry" = type { %"class.v8::internal::FullObjectSlot", %"class.v8::internal::FullObjectSlot", %"class.v8::internal::StrongRootsEntry"*, %"class.v8::internal::StrongRootsEntry"* }
%"class.v8::internal::FullObjectSlot" = type { %"class.v8::internal::SlotBase" }
%"class.v8::internal::SlotBase" = type { i64 }
%"class.std::__1::unordered_map.530" = type { %"class.std::__1::__hash_table.531" }
%"class.std::__1::__hash_table.531" = type <{ %"class.std::__1::unique_ptr.532", %"class.std::__1::__compressed_pair.542", %"class.std::__1::__compressed_pair.547", %"class.std::__1::__compressed_pair.550", [4 x i8] }>
%"class.std::__1::unique_ptr.532" = type { %"class.std::__1::__compressed_pair.533" }
%"class.std::__1::__compressed_pair.533" = type { %"struct.std::__1::__compressed_pair_elem.534", %"struct.std::__1::__compressed_pair_elem.536" }
%"struct.std::__1::__compressed_pair_elem.534" = type { %"struct.std::__1::__hash_node_base.535"** }
%"struct.std::__1::__hash_node_base.535" = type { %"struct.std::__1::__hash_node_base.535"* }
%"struct.std::__1::__compressed_pair_elem.536" = type { %"class.std::__1::__bucket_list_deallocator.537" }
%"class.std::__1::__bucket_list_deallocator.537" = type { %"class.std::__1::__compressed_pair.538" }
%"class.std::__1::__compressed_pair.538" = type { %"struct.std::__1::__compressed_pair_elem.12" }
%"class.std::__1::__compressed_pair.542" = type { %"struct.std::__1::__compressed_pair_elem.543" }
%"struct.std::__1::__compressed_pair_elem.543" = type { %"struct.std::__1::__hash_node_base.535" }
%"class.std::__1::__compressed_pair.547" = type { %"struct.std::__1::__compressed_pair_elem.12" }
%"class.std::__1::__compressed_pair.550" = type { %"struct.std::__1::__compressed_pair_elem.64" }
%"class.std::__1::unique_ptr.556" = type { %"class.std::__1::__compressed_pair.557" }
%"class.std::__1::__compressed_pair.557" = type { %"struct.std::__1::__compressed_pair_elem.558" }
%"struct.std::__1::__compressed_pair_elem.558" = type { %"class.v8::internal::GlobalHandleVector"* }
%"class.v8::internal::GlobalHandleVector" = type opaque
%"class.std::__1::unique_ptr.562" = type { %"class.std::__1::__compressed_pair.563" }
%"class.std::__1::__compressed_pair.563" = type { %"struct.std::__1::__compressed_pair_elem.564" }
%"struct.std::__1::__compressed_pair_elem.564" = type { %"class.v8::internal::GlobalSafepoint"* }
%"class.v8::internal::GlobalSafepoint" = type opaque
%"class.v8::internal::Heap::ExternalStringTable" = type { %"class.v8::internal::Heap"*, %"class.std::__1::vector.568", %"class.std::__1::vector.568" }
%"class.std::__1::unique_ptr.575" = type { %"class.std::__1::__compressed_pair.576" }
%"class.std::__1::__compressed_pair.576" = type { %"struct.std::__1::__compressed_pair_elem.577" }
%"struct.std::__1::__compressed_pair_elem.577" = type { %"class.v8::internal::CollectionBarrier"* }
%"class.v8::internal::CollectionBarrier" = type opaque
%"class.v8::internal::HeapObject" = type { %"class.v8::internal::Object" }
%"class.v8::base::SharedMutex" = type { %union.pthread_rwlock_t }
%union.pthread_rwlock_t = type { %struct.__pthread_rwlock_arch_t }
%struct.__pthread_rwlock_arch_t = type { i32, i32, i32, i32, i32, i32, i32, i32, i8, [7 x i8], i64, i32 }
%"class.v8::base::Mutex" = type { %union.pthread_mutex_t }
%"class.std::__1::unordered_set.375" = type { %"class.std::__1::__hash_table.376" }
%"class.std::__1::__hash_table.376" = type <{ %"class.std::__1::unique_ptr.377", %"class.std::__1::__compressed_pair.387", %"class.std::__1::__compressed_pair.392", %"class.std::__1::__compressed_pair.396", [4 x i8] }>
%"class.std::__1::unique_ptr.377" = type { %"class.std::__1::__compressed_pair.378" }
%"class.std::__1::__compressed_pair.378" = type { %"struct.std::__1::__compressed_pair_elem.379", %"struct.std::__1::__compressed_pair_elem.381" }
%"struct.std::__1::__compressed_pair_elem.379" = type { %"struct.std::__1::__hash_node_base.380"** }
%"struct.std::__1::__hash_node_base.380" = type { %"struct.std::__1::__hash_node_base.380"* }
%"struct.std::__1::__compressed_pair_elem.381" = type { %"class.std::__1::__bucket_list_deallocator.382" }
%"class.std::__1::__bucket_list_deallocator.382" = type { %"class.std::__1::__compressed_pair.383" }
%"class.std::__1::__compressed_pair.383" = type { %"struct.std::__1::__compressed_pair_elem.12" }
%"class.std::__1::__compressed_pair.387" = type { %"struct.std::__1::__compressed_pair_elem.388" }
%"struct.std::__1::__compressed_pair_elem.388" = type { %"struct.std::__1::__hash_node_base.380" }
%"class.std::__1::__compressed_pair.392" = type { %"struct.std::__1::__compressed_pair_elem.12" }
%"class.std::__1::__compressed_pair.396" = type { %"struct.std::__1::__compressed_pair_elem.64" }
%"class.std::__1::unordered_map.607" = type { %"class.std::__1::__hash_table.608" }
%"class.std::__1::__hash_table.608" = type <{ %"class.std::__1::unique_ptr.609", %"class.std::__1::__compressed_pair.619", %"class.std::__1::__compressed_pair.624", %"class.std::__1::__compressed_pair.627", [4 x i8] }>
%"class.std::__1::unique_ptr.609" = type { %"class.std::__1::__compressed_pair.610" }
%"class.std::__1::__compressed_pair.610" = type { %"struct.std::__1::__compressed_pair_elem.611", %"struct.std::__1::__compressed_pair_elem.613" }
%"struct.std::__1::__compressed_pair_elem.611" = type { %"struct.std::__1::__hash_node_base.612"** }
%"struct.std::__1::__hash_node_base.612" = type { %"struct.std::__1::__hash_node_base.612"* }
%"struct.std::__1::__compressed_pair_elem.613" = type { %"class.std::__1::__bucket_list_deallocator.614" }
%"class.std::__1::__bucket_list_deallocator.614" = type { %"class.std::__1::__compressed_pair.615" }
%"class.std::__1::__compressed_pair.615" = type { %"struct.std::__1::__compressed_pair_elem.12" }
%"class.std::__1::__compressed_pair.619" = type { %"struct.std::__1::__compressed_pair_elem.620" }
%"struct.std::__1::__compressed_pair_elem.620" = type { %"struct.std::__1::__hash_node_base.612" }
%"class.std::__1::__compressed_pair.624" = type { %"struct.std::__1::__compressed_pair_elem.12" }
%"class.std::__1::__compressed_pair.627" = type { %"struct.std::__1::__compressed_pair_elem.64" }
%"class.std::__1::unordered_map.581" = type { %"class.std::__1::__hash_table.582" }
%"class.std::__1::__hash_table.582" = type <{ %"class.std::__1::unique_ptr.583", %"class.std::__1::__compressed_pair.593", %"class.std::__1::__compressed_pair.598", %"class.std::__1::__compressed_pair.601", [4 x i8] }>
%"class.std::__1::unique_ptr.583" = type { %"class.std::__1::__compressed_pair.584" }
%"class.std::__1::__compressed_pair.584" = type { %"struct.std::__1::__compressed_pair_elem.585", %"struct.std::__1::__compressed_pair_elem.587" }
%"struct.std::__1::__compressed_pair_elem.585" = type { %"struct.std::__1::__hash_node_base.586"** }
%"struct.std::__1::__hash_node_base.586" = type { %"struct.std::__1::__hash_node_base.586"* }
%"struct.std::__1::__compressed_pair_elem.587" = type { %"class.std::__1::__bucket_list_deallocator.588" }
%"class.std::__1::__bucket_list_deallocator.588" = type { %"class.std::__1::__compressed_pair.589" }
%"class.std::__1::__compressed_pair.589" = type { %"struct.std::__1::__compressed_pair_elem.12" }
%"class.std::__1::__compressed_pair.593" = type { %"struct.std::__1::__compressed_pair_elem.594" }
%"struct.std::__1::__compressed_pair_elem.594" = type { %"struct.std::__1::__hash_node_base.586" }
%"class.std::__1::__compressed_pair.598" = type { %"struct.std::__1::__compressed_pair_elem.12" }
%"class.std::__1::__compressed_pair.601" = type { %"struct.std::__1::__compressed_pair_elem.64" }
%"class.std::__1::unordered_map.631" = type { %"class.std::__1::__hash_table.632" }
%"class.std::__1::__hash_table.632" = type <{ %"class.std::__1::unique_ptr.633", %"class.std::__1::__compressed_pair.643", %"class.std::__1::__compressed_pair.648", %"class.std::__1::__compressed_pair.653", [4 x i8] }>
%"class.std::__1::unique_ptr.633" = type { %"class.std::__1::__compressed_pair.634" }
%"class.std::__1::__compressed_pair.634" = type { %"struct.std::__1::__compressed_pair_elem.635", %"struct.std::__1::__compressed_pair_elem.637" }
%"struct.std::__1::__compressed_pair_elem.635" = type { %"struct.std::__1::__hash_node_base.636"** }
%"struct.std::__1::__hash_node_base.636" = type { %"struct.std::__1::__hash_node_base.636"* }
%"struct.std::__1::__compressed_pair_elem.637" = type { %"class.std::__1::__bucket_list_deallocator.638" }
%"class.std::__1::__bucket_list_deallocator.638" = type { %"class.std::__1::__compressed_pair.639" }
%"class.std::__1::__compressed_pair.639" = type { %"struct.std::__1::__compressed_pair_elem.12" }
%"class.std::__1::__compressed_pair.643" = type { %"struct.std::__1::__compressed_pair_elem.644" }
%"struct.std::__1::__compressed_pair_elem.644" = type { %"struct.std::__1::__hash_node_base.636" }
%"class.std::__1::__compressed_pair.648" = type { %"struct.std::__1::__compressed_pair_elem.12" }
%"class.std::__1::__compressed_pair.653" = type { %"struct.std::__1::__compressed_pair_elem.64" }
%"class.std::__1::vector.659" = type { %"class.std::__1::__vector_base.660" }
%"class.std::__1::__vector_base.660" = type { %"class.v8::internal::HeapObjectAllocationTracker"**, %"class.v8::internal::HeapObjectAllocationTracker"**, %"class.std::__1::__compressed_pair.661" }
%"class.std::__1::__compressed_pair.661" = type { %"struct.std::__1::__compressed_pair_elem.662" }
%"struct.std::__1::__compressed_pair_elem.662" = type { %"class.v8::internal::HeapObjectAllocationTracker"** }
%"class.std::__1::unique_ptr.666" = type { %"class.std::__1::__compressed_pair.667" }
%"class.std::__1::__compressed_pair.667" = type { %"struct.std::__1::__compressed_pair_elem.668" }
%"struct.std::__1::__compressed_pair_elem.668" = type { %"class.v8::internal::third_party_heap::Heap"* }
%"class.v8::internal::third_party_heap::Heap" = type { i8 }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.1" }
%"struct.std::__1::__atomic_base.1" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i64 }
%"class.v8::internal::AllocationStats" = type { %"struct.std::__1::atomic", i64, %"struct.std::__1::atomic" }
%"class.std::__1::vector.184" = type { %"class.std::__1::__vector_base.185" }
%"class.std::__1::__vector_base.185" = type { %"class.v8::internal::ReadOnlyPage"**, %"class.v8::internal::ReadOnlyPage"**, %"class.std::__1::__compressed_pair.186" }
%"class.v8::internal::ReadOnlyPage" = type { %"class.v8::internal::BasicMemoryChunk" }
%"class.std::__1::__compressed_pair.186" = type { %"struct.std::__1::__compressed_pair_elem.187" }
%"struct.std::__1::__compressed_pair_elem.187" = type { %"class.v8::internal::ReadOnlyPage"** }
%"class.std::__1::vector.568" = type { %"class.std::__1::__vector_base.569" }
%"class.std::__1::__vector_base.569" = type { %"class.v8::internal::Object"*, %"class.v8::internal::Object"*, %"class.std::__1::__compressed_pair.570" }
%"class.std::__1::__compressed_pair.570" = type { %"struct.std::__1::__compressed_pair_elem.571" }
%"struct.std::__1::__compressed_pair_elem.571" = type { %"class.v8::internal::Object"* }
%"class.std::__1::locale::id" = type <{ %"struct.std::__1::once_flag", i32, [4 x i8] }>
%"struct.std::__1::once_flag" = type { i64 }
%"class.v8::internal::compiler::ElementAccessInfo" = type { i8, %"class.v8::internal::ZoneVector", %"class.v8::internal::ZoneVector" }
%"class.v8::internal::ZoneVector" = type { %"class.std::__1::vector" }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.v8::internal::Handle"*, %"class.v8::internal::Handle"*, %"class.std::__1::__compressed_pair" }
%"class.v8::internal::Handle" = type { %"class.v8::internal::HandleBase" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem", %"struct.std::__1::__compressed_pair_elem.0" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.v8::internal::Handle"* }
%"struct.std::__1::__compressed_pair_elem.0" = type { %"class.v8::internal::ZoneAllocator" }
%"class.v8::internal::ZoneAllocator" = type { %"class.v8::internal::Zone"* }
%"class.v8::internal::compiler::PropertyAccessInfo" = type { i32, %"class.v8::internal::ZoneVector", %"class.v8::internal::Handle.21", %"class.v8::internal::MaybeHandle", %"class.v8::internal::ZoneVector.22", %"class.v8::internal::MaybeHandle.29", %"class.v8::internal::FieldIndex", %"class.v8::internal::Representation", %"class.v8::internal::compiler::Type", %"class.v8::internal::MaybeHandle.29", %"class.v8::internal::MaybeHandle.29", %"class.v8::internal::InternalIndex", %"class.v8::internal::MaybeHandle.30" }
%"class.v8::internal::Handle.21" = type { %"class.v8::internal::HandleBase" }
%"class.v8::internal::MaybeHandle" = type { i64* }
%"class.v8::internal::ZoneVector.22" = type { %"class.std::__1::vector.23" }
%"class.std::__1::vector.23" = type { %"class.std::__1::__vector_base.24" }
%"class.std::__1::__vector_base.24" = type { %"class.v8::internal::compiler::CompilationDependency"**, %"class.v8::internal::compiler::CompilationDependency"**, %"class.std::__1::__compressed_pair.25" }
%"class.v8::internal::compiler::CompilationDependency" = type { i32 (...)** }
%"class.std::__1::__compressed_pair.25" = type { %"struct.std::__1::__compressed_pair_elem.26", %"struct.std::__1::__compressed_pair_elem.27" }
%"struct.std::__1::__compressed_pair_elem.26" = type { %"class.v8::internal::compiler::CompilationDependency"** }
%"struct.std::__1::__compressed_pair_elem.27" = type { %"class.v8::internal::ZoneAllocator.28" }
%"class.v8::internal::ZoneAllocator.28" = type { %"class.v8::internal::Zone"* }
%"class.v8::internal::FieldIndex" = type { i64 }
%"class.v8::internal::Representation" = type { i8 }
%"class.v8::internal::compiler::Type" = type { i64 }
%"class.v8::internal::MaybeHandle.29" = type { i64* }
%"class.v8::internal::InternalIndex" = type { i64 }
%"class.v8::internal::MaybeHandle.30" = type { i64* }
%"class.v8::internal::compiler::MinimorphicLoadPropertyAccessInfo" = type { i32, i8, i32, %"class.v8::internal::Representation", %"class.v8::internal::compiler::Type" }
%"class.v8::internal::compiler::AccessInfoFactory" = type { %"class.v8::internal::compiler::JSHeapBroker"*, %"class.v8::internal::compiler::CompilationDependencies"*, %"class.v8::internal::compiler::TypeCache"*, %"class.v8::internal::Zone"* }
%"class.v8::internal::compiler::TypeCache" = type { %"class.v8::internal::AccountingAllocator", %"class.v8::internal::Zone", %"class.v8::internal::compiler::Type", %"class.v8::internal::compiler::Type", %"class.v8::internal::compiler::Type", %"class.v8::internal::compiler::Type", %"class.v8::internal::compiler::Type", %"class.v8::internal::compiler::Type", %"class.v8::internal::compiler::Type", %"class.v8::internal::compiler::Type", %"class.v8::internal::compiler::Type", %"class.v8::internal::compiler::Type", %"class.v8::internal::compiler::Type", %"class.v8::internal::compiler::Type", %"class.v8::internal::compiler::Type", %"class.v8::internal::compiler::Type", %"class.v8::internal::compiler::Type", %"class.v8::internal::compiler::Type", %"class.v8::internal::compiler::Type", %"class.v8::internal::compiler::Type", %"class.v8::internal::compiler::Type", %"class.v8::internal::compiler::Type", %"class.v8::internal::compiler::Type", %"class.v8::internal::compiler::Type", %"class.v8::internal::compiler::Type", %"class.v8::internal::compiler::Type", %"class.v8::internal::compiler::Type", %"class.v8::internal::compiler::Type", %"class.v8::internal::compiler::Type", %"class.v8::internal::compiler::Type", %"class.v8::internal::compiler::Type", %"class.v8::internal::compiler::Type", %"class.v8::internal::compiler::Type", %"class.v8::internal::compiler::Type", %"class.v8::internal::compiler::Type", %"class.v8::internal::compiler::Type", %"class.v8::internal::compiler::Type", %"class.v8::internal::compiler::Type", %"class.v8::internal::compiler::Type", %"class.v8::internal::compiler::Type", %"class.v8::internal::compiler::Type", %"class.v8::internal::compiler::Type", %"class.v8::internal::compiler::Type", %"class.v8::internal::compiler::Type", %"class.v8::internal::compiler::Type", %"class.v8::internal::compiler::Type", %"class.v8::internal::compiler::Type", %"class.v8::internal::compiler::Type", %"class.v8::internal::compiler::Type", %"class.v8::internal::compiler::Type", %"class.v8::internal::compiler::Type", %"class.v8::internal::compiler::Type", %"class.v8::internal::compiler::Type", %"class.v8::internal::compiler::Type", %"class.v8::internal::compiler::Type", %"class.v8::internal::compiler::Type", %"class.v8::internal::compiler::Type", %"class.v8::internal::compiler::Type", %"class.v8::internal::compiler::Type", %"class.v8::internal::compiler::Type", %"class.v8::internal::compiler::Type", %"class.v8::internal::compiler::Type", %"class.v8::internal::compiler::Type", %"class.v8::internal::compiler::Type", %"class.v8::internal::compiler::Type" }
%"class.v8::internal::compiler::JSHeapBroker" = type <{ %"class.v8::internal::Isolate"*, %"class.v8::internal::Zone"*, %"class.v8::base::Optional.1150", %"class.v8::internal::compiler::RefsMap"*, %"class.v8::internal::RootIndexMap", %"class.v8::internal::ZoneUnorderedSet", i32, i8, i8, i8, i8, i32, [4 x i8], %"class.std::__1::unique_ptr.1082", %"class.v8::internal::LocalIsolate"*, %"class.std::__1::unique_ptr.765", i32, [4 x i8], %"class.v8::internal::compiler::PerIsolateCompilerCache"*, %"class.v8::internal::ZoneUnorderedMap", %"class.v8::internal::ZoneUnorderedMap.1200", %"class.v8::internal::ZoneUnorderedMap.1223", %"class.v8::internal::ZoneVector.1246", %"class.v8::internal::ZoneMultimap", i32, [4 x i8] }>
%"class.v8::base::Optional.1150" = type { %"class.v8::base::internal::OptionalBase.1151" }
%"class.v8::base::internal::OptionalBase.1151" = type { %"struct.v8::base::internal::OptionalStorage.1152" }
%"struct.v8::base::internal::OptionalStorage.1152" = type { %"struct.v8::base::internal::OptionalStorageBase.1153" }
%"struct.v8::base::internal::OptionalStorageBase.1153" = type { i8, %union.anon.1154 }
%union.anon.1154 = type { %"class.v8::internal::compiler::NativeContextRef" }
%"class.v8::internal::compiler::NativeContextRef" = type { %"class.v8::internal::compiler::ContextRef" }
%"class.v8::internal::compiler::ContextRef" = type { %"class.v8::internal::compiler::HeapObjectRef" }
%"class.v8::internal::compiler::HeapObjectRef" = type { %"class.v8::internal::compiler::ObjectRef" }
%"class.v8::internal::compiler::ObjectRef" = type { %"class.v8::internal::compiler::ObjectData"*, %"class.v8::internal::compiler::JSHeapBroker"* }
%"class.v8::internal::compiler::ObjectData" = type opaque
%"class.v8::internal::compiler::RefsMap" = type { %"class.v8::base::TemplateHashMapImpl.1155" }
%"class.v8::base::TemplateHashMapImpl.1155" = type { %"struct.v8::base::TemplateHashMapImpl<unsigned long, v8::internal::compiler::ObjectData *, v8::internal::compiler::AddressMatcher, v8::internal::ZoneAllocationPolicy>::Impl" }
%"struct.v8::base::TemplateHashMapImpl<unsigned long, v8::internal::compiler::ObjectData *, v8::internal::compiler::AddressMatcher, v8::internal::ZoneAllocationPolicy>::Impl" = type { %"class.v8::internal::ZoneAllocationPolicy", %"struct.v8::base::TemplateHashMapEntry.1157"*, i32, i32 }
%"struct.v8::base::TemplateHashMapEntry.1157" = type opaque
%"class.v8::internal::ZoneUnorderedSet" = type { %"class.std::__1::unordered_set.1158" }
%"class.std::__1::unordered_set.1158" = type { %"class.std::__1::__hash_table.1159" }
%"class.std::__1::__hash_table.1159" = type <{ %"class.std::__1::unique_ptr.1160", %"class.std::__1::__compressed_pair.1169", %"class.std::__1::__compressed_pair.1173", %"class.std::__1::__compressed_pair.1175", [4 x i8] }>
%"class.std::__1::unique_ptr.1160" = type { %"class.std::__1::__compressed_pair.1161" }
%"class.std::__1::__compressed_pair.1161" = type { %"struct.std::__1::__compressed_pair_elem.1162", %"struct.std::__1::__compressed_pair_elem.1164" }
%"struct.std::__1::__compressed_pair_elem.1162" = type { %"struct.std::__1::__hash_node_base.1163"** }
%"struct.std::__1::__hash_node_base.1163" = type { %"struct.std::__1::__hash_node_base.1163"* }
%"struct.std::__1::__compressed_pair_elem.1164" = type { %"class.std::__1::__bucket_list_deallocator.1165" }
%"class.std::__1::__bucket_list_deallocator.1165" = type { %"class.std::__1::__compressed_pair.1166" }
%"class.std::__1::__compressed_pair.1166" = type { %"struct.std::__1::__compressed_pair_elem.12", %"struct.std::__1::__compressed_pair_elem.1167" }
%"struct.std::__1::__compressed_pair_elem.1167" = type { %"class.v8::internal::ZoneAllocator.1168" }
%"class.v8::internal::ZoneAllocator.1168" = type { %"class.v8::internal::Zone"* }
%"class.std::__1::__compressed_pair.1169" = type { %"struct.std::__1::__compressed_pair_elem.1170", %"struct.std::__1::__compressed_pair_elem.1171" }
%"struct.std::__1::__compressed_pair_elem.1170" = type { %"struct.std::__1::__hash_node_base.1163" }
%"struct.std::__1::__compressed_pair_elem.1171" = type { %"class.v8::internal::ZoneAllocator.1172" }
%"class.v8::internal::ZoneAllocator.1172" = type { %"class.v8::internal::Zone"* }
%"class.std::__1::__compressed_pair.1173" = type { %"struct.std::__1::__compressed_pair_elem.12" }
%"class.std::__1::__compressed_pair.1175" = type { %"struct.std::__1::__compressed_pair_elem.64" }
%"class.v8::internal::ZoneUnorderedMap" = type { %"class.std::__1::unordered_map.1178" }
%"class.std::__1::unordered_map.1178" = type { %"class.std::__1::__hash_table.1179" }
%"class.std::__1::__hash_table.1179" = type <{ %"class.std::__1::unique_ptr.1180", %"class.std::__1::__compressed_pair.1189", %"class.std::__1::__compressed_pair.1193", %"class.std::__1::__compressed_pair.1196", [4 x i8] }>
%"class.std::__1::unique_ptr.1180" = type { %"class.std::__1::__compressed_pair.1181" }
%"class.std::__1::__compressed_pair.1181" = type { %"struct.std::__1::__compressed_pair_elem.1182", %"struct.std::__1::__compressed_pair_elem.1184" }
%"struct.std::__1::__compressed_pair_elem.1182" = type { %"struct.std::__1::__hash_node_base.1183"** }
%"struct.std::__1::__hash_node_base.1183" = type { %"struct.std::__1::__hash_node_base.1183"* }
%"struct.std::__1::__compressed_pair_elem.1184" = type { %"class.std::__1::__bucket_list_deallocator.1185" }
%"class.std::__1::__bucket_list_deallocator.1185" = type { %"class.std::__1::__compressed_pair.1186" }
%"class.std::__1::__compressed_pair.1186" = type { %"struct.std::__1::__compressed_pair_elem.12", %"struct.std::__1::__compressed_pair_elem.1187" }
%"struct.std::__1::__compressed_pair_elem.1187" = type { %"class.v8::internal::ZoneAllocator.1188" }
%"class.v8::internal::ZoneAllocator.1188" = type { %"class.v8::internal::Zone"* }
%"class.std::__1::__compressed_pair.1189" = type { %"struct.std::__1::__compressed_pair_elem.1190", %"struct.std::__1::__compressed_pair_elem.1191" }
%"struct.std::__1::__compressed_pair_elem.1190" = type { %"struct.std::__1::__hash_node_base.1183" }
%"struct.std::__1::__compressed_pair_elem.1191" = type { %"class.v8::internal::ZoneAllocator.1192" }
%"class.v8::internal::ZoneAllocator.1192" = type { %"class.v8::internal::Zone"* }
%"class.std::__1::__compressed_pair.1193" = type { %"struct.std::__1::__compressed_pair_elem.12" }
%"class.std::__1::__compressed_pair.1196" = type { %"struct.std::__1::__compressed_pair_elem.64" }
%"class.v8::internal::ZoneUnorderedMap.1200" = type { %"class.std::__1::unordered_map.1201" }
%"class.std::__1::unordered_map.1201" = type { %"class.std::__1::__hash_table.1202" }
%"class.std::__1::__hash_table.1202" = type <{ %"class.std::__1::unique_ptr.1203", %"class.std::__1::__compressed_pair.1212", %"class.std::__1::__compressed_pair.1216", %"class.std::__1::__compressed_pair.1219", [4 x i8] }>
%"class.std::__1::unique_ptr.1203" = type { %"class.std::__1::__compressed_pair.1204" }
%"class.std::__1::__compressed_pair.1204" = type { %"struct.std::__1::__compressed_pair_elem.1205", %"struct.std::__1::__compressed_pair_elem.1207" }
%"struct.std::__1::__compressed_pair_elem.1205" = type { %"struct.std::__1::__hash_node_base.1206"** }
%"struct.std::__1::__hash_node_base.1206" = type { %"struct.std::__1::__hash_node_base.1206"* }
%"struct.std::__1::__compressed_pair_elem.1207" = type { %"class.std::__1::__bucket_list_deallocator.1208" }
%"class.std::__1::__bucket_list_deallocator.1208" = type { %"class.std::__1::__compressed_pair.1209" }
%"class.std::__1::__compressed_pair.1209" = type { %"struct.std::__1::__compressed_pair_elem.12", %"struct.std::__1::__compressed_pair_elem.1210" }
%"struct.std::__1::__compressed_pair_elem.1210" = type { %"class.v8::internal::ZoneAllocator.1211" }
%"class.v8::internal::ZoneAllocator.1211" = type { %"class.v8::internal::Zone"* }
%"class.std::__1::__compressed_pair.1212" = type { %"struct.std::__1::__compressed_pair_elem.1213", %"struct.std::__1::__compressed_pair_elem.1214" }
%"struct.std::__1::__compressed_pair_elem.1213" = type { %"struct.std::__1::__hash_node_base.1206" }
%"struct.std::__1::__compressed_pair_elem.1214" = type { %"class.v8::internal::ZoneAllocator.1215" }
%"class.v8::internal::ZoneAllocator.1215" = type { %"class.v8::internal::Zone"* }
%"class.std::__1::__compressed_pair.1216" = type { %"struct.std::__1::__compressed_pair_elem.12" }
%"class.std::__1::__compressed_pair.1219" = type { %"struct.std::__1::__compressed_pair_elem.64" }
%"class.v8::internal::ZoneUnorderedMap.1223" = type { %"class.std::__1::unordered_map.1224" }
%"class.std::__1::unordered_map.1224" = type { %"class.std::__1::__hash_table.1225" }
%"class.std::__1::__hash_table.1225" = type <{ %"class.std::__1::unique_ptr.1226", %"class.std::__1::__compressed_pair.1235", %"class.std::__1::__compressed_pair.1239", %"class.std::__1::__compressed_pair.1242", [4 x i8] }>
%"class.std::__1::unique_ptr.1226" = type { %"class.std::__1::__compressed_pair.1227" }
%"class.std::__1::__compressed_pair.1227" = type { %"struct.std::__1::__compressed_pair_elem.1228", %"struct.std::__1::__compressed_pair_elem.1230" }
%"struct.std::__1::__compressed_pair_elem.1228" = type { %"struct.std::__1::__hash_node_base.1229"** }
%"struct.std::__1::__hash_node_base.1229" = type { %"struct.std::__1::__hash_node_base.1229"* }
%"struct.std::__1::__compressed_pair_elem.1230" = type { %"class.std::__1::__bucket_list_deallocator.1231" }
%"class.std::__1::__bucket_list_deallocator.1231" = type { %"class.std::__1::__compressed_pair.1232" }
%"class.std::__1::__compressed_pair.1232" = type { %"struct.std::__1::__compressed_pair_elem.12", %"struct.std::__1::__compressed_pair_elem.1233" }
%"struct.std::__1::__compressed_pair_elem.1233" = type { %"class.v8::internal::ZoneAllocator.1234" }
%"class.v8::internal::ZoneAllocator.1234" = type { %"class.v8::internal::Zone"* }
%"class.std::__1::__compressed_pair.1235" = type { %"struct.std::__1::__compressed_pair_elem.1236", %"struct.std::__1::__compressed_pair_elem.1237" }
%"struct.std::__1::__compressed_pair_elem.1236" = type { %"struct.std::__1::__hash_node_base.1229" }
%"struct.std::__1::__compressed_pair_elem.1237" = type { %"class.v8::internal::ZoneAllocator.1238" }
%"class.v8::internal::ZoneAllocator.1238" = type { %"class.v8::internal::Zone"* }
%"class.std::__1::__compressed_pair.1239" = type { %"struct.std::__1::__compressed_pair_elem.12" }
%"class.std::__1::__compressed_pair.1242" = type { %"struct.std::__1::__compressed_pair_elem.64" }
%"class.v8::internal::ZoneVector.1246" = type { %"class.std::__1::vector.1247" }
%"class.std::__1::vector.1247" = type { %"class.std::__1::__vector_base.1248" }
%"class.std::__1::__vector_base.1248" = type { %"class.v8::internal::compiler::ObjectData"**, %"class.v8::internal::compiler::ObjectData"**, %"class.std::__1::__compressed_pair.1249" }
%"class.std::__1::__compressed_pair.1249" = type { %"struct.std::__1::__compressed_pair_elem.1250", %"struct.std::__1::__compressed_pair_elem.1251" }
%"struct.std::__1::__compressed_pair_elem.1250" = type { %"class.v8::internal::compiler::ObjectData"** }
%"struct.std::__1::__compressed_pair_elem.1251" = type { %"class.v8::internal::ZoneAllocator.1252" }
%"class.v8::internal::ZoneAllocator.1252" = type { %"class.v8::internal::Zone"* }
%"class.v8::internal::ZoneMultimap" = type { %"class.std::__1::multimap" }
%"class.std::__1::multimap" = type { %"class.std::__1::__tree.1253" }
%"class.std::__1::__tree.1253" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.1254", %"class.std::__1::__compressed_pair.1257" }
%"class.std::__1::__compressed_pair.1254" = type { %"struct.std::__1::__compressed_pair_elem.9", %"struct.std::__1::__compressed_pair_elem.1255" }
%"struct.std::__1::__compressed_pair_elem.1255" = type { %"class.v8::internal::ZoneAllocator.1256" }
%"class.v8::internal::ZoneAllocator.1256" = type { %"class.v8::internal::Zone"* }
%"class.std::__1::__compressed_pair.1257" = type { %"struct.std::__1::__compressed_pair_elem.12" }
%"class.v8::internal::compiler::CompilationDependencies" = type { %"class.v8::internal::Zone"*, %"class.v8::internal::compiler::JSHeapBroker"*, %"class.v8::internal::ZoneForwardList" }
%"class.v8::internal::ZoneForwardList" = type { %"class.std::__1::forward_list" }
%"class.std::__1::forward_list" = type { %"class.std::__1::__forward_list_base" }
%"class.std::__1::__forward_list_base" = type { %"class.std::__1::__compressed_pair.1261" }
%"class.std::__1::__compressed_pair.1261" = type { %"struct.std::__1::__compressed_pair_elem.1262", %"struct.std::__1::__compressed_pair_elem.1263" }
%"struct.std::__1::__compressed_pair_elem.1262" = type { %"struct.std::__1::__forward_begin_node" }
%"struct.std::__1::__forward_begin_node" = type { %"struct.std::__1::__forward_list_node"* }
%"struct.std::__1::__forward_list_node" = type { %"struct.std::__1::__forward_begin_node", %"class.v8::internal::compiler::CompilationDependency"* }
%"struct.std::__1::__compressed_pair_elem.1263" = type { %"class.v8::internal::ZoneAllocator.1264" }
%"class.v8::internal::ZoneAllocator.1264" = type { %"class.v8::internal::Zone"* }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::__vector_base_common" = type { i8 }
%"class.v8::base::Optional.1265" = type { %"class.v8::base::internal::OptionalBase.1266" }
%"class.v8::base::internal::OptionalBase.1266" = type { %"struct.v8::base::internal::OptionalStorage.1267" }
%"struct.v8::base::internal::OptionalStorage.1267" = type { %"struct.v8::base::internal::OptionalStorageBase.1268" }
%"struct.v8::base::internal::OptionalStorageBase.1268" = type { i8, %union.anon.1269 }
%union.anon.1269 = type { %"class.v8::internal::compiler::ElementAccessInfo" }
%"class.v8::base::Optional.1270" = type { %"class.v8::base::internal::OptionalBase.1271" }
%"class.v8::base::internal::OptionalBase.1271" = type { %"struct.v8::base::internal::OptionalStorage.1272" }
%"struct.v8::base::internal::OptionalStorage.1272" = type { %"struct.v8::base::internal::OptionalStorageBase.1273" }
%"struct.v8::base::internal::OptionalStorageBase.1273" = type { i8, %union.anon.1274 }
%union.anon.1274 = type { %"class.v8::internal::compiler::MapRef" }
%"class.v8::internal::compiler::MapRef" = type { %"class.v8::internal::compiler::HeapObjectRef" }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.v8::internal::StdoutStream" = type { %"class.v8::internal::OFStream.base", %"class.v8::base::LockGuard", %"class.std::__1::basic_ios.base" }
%"class.v8::internal::OFStream.base" = type { %"class.std::__1::basic_ostream.base", %"class.v8::internal::OFStreamBase" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.v8::internal::OFStreamBase" = type { %"class.std::__1::basic_streambuf", %struct._IO_FILE* }
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.v8::base::LockGuard" = type { %"class.v8::base::RecursiveMutex"* }
%"struct.v8::internal::Brief" = type { i64 }
%"class.v8::internal::OFStream" = type { %"class.std::__1::basic_ostream.base", %"class.v8::internal::OFStreamBase", %"class.std::__1::basic_ios.base" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }
%"class.std::__1::locale::facet" = type { %"class.std::__1::__shared_count" }
%"class.std::__1::ctype" = type <{ %"class.std::__1::locale::facet", i16*, i8, [7 x i8] }>
%"class.std::__1::basic_ios" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32, [4 x i8] }>
%"class.v8::internal::compiler::ElementAccessFeedback" = type { %"class.v8::internal::compiler::ProcessedFeedback.base", %"class.v8::internal::compiler::KeyedAccessMode", %"class.v8::internal::ZoneVector.1275" }
%"class.v8::internal::compiler::ProcessedFeedback.base" = type <{ i32, i8 }>
%"class.v8::internal::compiler::KeyedAccessMode" = type { i32, %"union.v8::internal::compiler::KeyedAccessMode::LoadStoreMode" }
%"union.v8::internal::compiler::KeyedAccessMode::LoadStoreMode" = type { i32 }
%"class.v8::internal::ZoneVector.1275" = type { %"class.std::__1::vector.1276" }
%"class.std::__1::vector.1276" = type { %"class.std::__1::__vector_base.1277" }
%"class.std::__1::__vector_base.1277" = type { %"class.v8::internal::ZoneVector"*, %"class.v8::internal::ZoneVector"*, %"class.std::__1::__compressed_pair.1278" }
%"class.std::__1::__compressed_pair.1278" = type { %"struct.std::__1::__compressed_pair_elem.1279", %"struct.std::__1::__compressed_pair_elem.1280" }
%"struct.std::__1::__compressed_pair_elem.1279" = type { %"class.v8::internal::ZoneVector"* }
%"struct.std::__1::__compressed_pair_elem.1280" = type { %"class.v8::internal::ZoneAllocator.1281" }
%"class.v8::internal::ZoneAllocator.1281" = type { %"class.v8::internal::Zone"* }
%"class.v8::internal::ZoneVector.1282" = type { %"class.std::__1::vector.1283" }
%"class.std::__1::vector.1283" = type { %"class.std::__1::__vector_base.1284" }
%"class.std::__1::__vector_base.1284" = type { %"class.v8::internal::compiler::ElementAccessInfo"*, %"class.v8::internal::compiler::ElementAccessInfo"*, %"class.std::__1::__compressed_pair.1285" }
%"class.std::__1::__compressed_pair.1285" = type { %"struct.std::__1::__compressed_pair_elem.1286", %"struct.std::__1::__compressed_pair_elem.1287" }
%"struct.std::__1::__compressed_pair_elem.1286" = type { %"class.v8::internal::compiler::ElementAccessInfo"* }
%"struct.std::__1::__compressed_pair_elem.1287" = type { %"class.v8::internal::ZoneAllocator.1288" }
%"class.v8::internal::ZoneAllocator.1288" = type { %"class.v8::internal::Zone"* }
%"class.v8::internal::Handle<v8::internal::FieldType>::ObjectRef" = type { %"class.v8::internal::FieldType" }
%"class.v8::internal::FieldType" = type { %"class.v8::internal::Object" }
%"class.v8::internal::Handle<v8::internal::Map>::ObjectRef" = type { %"class.v8::internal::Map" }
%"class.v8::internal::IdentityMapBase" = type <{ i32 (...)**, %"struct.v8::base::hash", [7 x i8], %"class.v8::internal::Heap"*, i32, i32, i32, i32, i64*, %"class.v8::internal::StrongRootsEntry"*, i64*, i8, [7 x i8] }>
%"class.v8::internal::JSReceiver" = type { %"class.v8::internal::HeapObject" }
%"class.v8::internal::ObjectHashTable" = type { %"class.v8::internal::ObjectHashTableBase" }
%"class.v8::internal::ObjectHashTableBase" = type { %"class.v8::internal::HashTable.1349" }
%"class.v8::internal::HashTable.1349" = type { %"class.v8::internal::HashTableBase" }
%"class.v8::internal::HashTableBase" = type { %"class.v8::internal::FixedArray" }
%"class.v8::internal::CallOptimization" = type <{ %"class.v8::internal::Handle.1305", %"class.v8::internal::Handle.1351", %"class.v8::internal::Handle.1352", i8, i8, [6 x i8] }>
%"class.v8::internal::Handle.1305" = type { %"class.v8::internal::HandleBase" }
%"class.v8::internal::Handle.1351" = type { %"class.v8::internal::HandleBase" }
%"class.v8::internal::Handle.1352" = type { %"class.v8::internal::HandleBase" }
%"class.v8::internal::compiler::MinimorphicLoadPropertyAccessFeedback" = type <{ %"class.v8::internal::compiler::ProcessedFeedback.base", [3 x i8], %"class.v8::internal::compiler::NameRef", %"class.v8::internal::Handle.21", %"class.v8::internal::ZoneVector", i8, [7 x i8] }>
%"class.v8::internal::compiler::NameRef" = type { %"class.v8::internal::compiler::HeapObjectRef" }
%"class.v8::internal::PropertyDetails" = type { i32 }
%"class.v8::internal::DescriptorArray" = type { %"class.v8::internal::TorqueGeneratedDescriptorArray" }
%"class.v8::internal::TorqueGeneratedDescriptorArray" = type { %"class.v8::internal::HeapObject" }
%"class.v8::internal::TransitionsAccessor" = type <{ %"class.v8::internal::Isolate"*, %"class.v8::internal::Handle", %"class.v8::internal::Map", %"class.v8::internal::MaybeObject", i32, i8, [3 x i8] }>
%"class.v8::internal::MaybeObject" = type { %"class.v8::internal::TaggedImpl.1328" }
%"class.v8::internal::TaggedImpl.1328" = type { i64 }
%"class.v8::internal::ZoneVector.1312" = type { %"class.std::__1::vector.1313" }
%"class.std::__1::vector.1313" = type { %"class.std::__1::__vector_base.1314" }
%"class.std::__1::__vector_base.1314" = type { %"class.v8::internal::compiler::PropertyAccessInfo"*, %"class.v8::internal::compiler::PropertyAccessInfo"*, %"class.std::__1::__compressed_pair.1315" }
%"class.std::__1::__compressed_pair.1315" = type { %"struct.std::__1::__compressed_pair_elem.1316", %"struct.std::__1::__compressed_pair_elem.1317" }
%"struct.std::__1::__compressed_pair_elem.1316" = type { %"class.v8::internal::compiler::PropertyAccessInfo"* }
%"struct.std::__1::__compressed_pair_elem.1317" = type { %"class.v8::internal::ZoneAllocator.1318" }
%"class.v8::internal::ZoneAllocator.1318" = type { %"class.v8::internal::Zone"* }
%"class.std::__1::vector.1319" = type { %"class.std::__1::__vector_base.1320" }
%"class.std::__1::__vector_base.1320" = type { %"class.v8::internal::Handle"*, %"class.v8::internal::Handle"*, %"class.std::__1::__compressed_pair.1321" }
%"class.std::__1::__compressed_pair.1321" = type { %"struct.std::__1::__compressed_pair_elem" }
%"class.v8::internal::String" = type { %"class.v8::internal::TorqueGeneratedString" }
%"class.v8::internal::TorqueGeneratedString" = type { %"class.v8::internal::Name" }
%"class.v8::internal::SharedFunctionInfo" = type { %"class.v8::internal::TorqueGeneratedSharedFunctionInfo" }
%"class.v8::internal::TorqueGeneratedSharedFunctionInfo" = type { %"class.v8::internal::HeapObject" }
%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry" = type { i8, %"class.std::__1::basic_ostream"* }

$_ZNSt3__16vectorIN2v88internal6HandleINS2_3MapEEENS2_13ZoneAllocatorIS5_EEE6insertINS_11__wrap_iterIPKS5_EEEENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIS5_NS_15iterator_traitsISF_E9referenceEEE5valueENSA_IPS5_EEE4typeESD_SF_SF_ = comdat any

$_ZNSt3__16vectorIPKN2v88internal8compiler21CompilationDependencyENS2_13ZoneAllocatorIS6_EEE6insertINS_11__wrap_iterIPKS6_EEEENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIS6_NS_15iterator_traitsISG_E9referenceEEE5valueENSB_IPS6_EEE4typeESE_SG_SG_ = comdat any

$_ZN2v88internal8compiler10TryMakeRefINS0_3MapEvEENS_4base8OptionalINS1_10ref_traitsIT_E8ref_typeEEEPNS1_12JSHeapBrokerENS0_6HandleIS7_EENS4_5FlagsINS1_19GetOrCreateDataFlagEiEE = comdat any

$_ZN2v88internal8compiler12JSHeapBroker25CanonicalPersistentHandleINS0_15DescriptorArrayEEENS0_6HandleIT_EES6_ = comdat any

$_ZN2v88internal8compiler12JSHeapBroker25CanonicalPersistentHandleINS0_9FieldTypeEEENS0_6HandleIT_EES6_ = comdat any

$_ZN2v88internal8compiler12JSHeapBroker25CanonicalPersistentHandleINS0_3MapEEENS0_6HandleIT_EES6_ = comdat any

$_ZN2v88internal8compiler12JSHeapBroker25CanonicalPersistentHandleINS0_8JSObjectEEENS0_6HandleIT_EES6_ = comdat any

$_ZN2v88internal8compiler18PropertyAccessInfoC2ERKS2_ = comdat any

$_ZNK2v88internal14Representation8MnemonicEv = comdat any

$_ZN2v88internal8compiler12JSHeapBroker25CanonicalPersistentHandleINS0_13PrototypeInfoEEENS0_6HandleIT_EES6_ = comdat any

$_ZN2v88internal8compiler12JSHeapBroker25CanonicalPersistentHandleINS0_17JSModuleNamespaceEEENS0_6HandleIT_EES6_ = comdat any

$_ZN2v88internal8compiler12JSHeapBroker25CanonicalPersistentHandleINS0_4CellEEENS0_6HandleIT_EES6_ = comdat any

$_ZN2v88internal8compiler12JSHeapBroker25CanonicalPersistentHandleINS0_6ObjectEEENS0_6HandleIT_EES6_ = comdat any

$_ZN2v88internal8compiler12JSHeapBroker25CanonicalPersistentHandleINS0_4NameEEENS0_6HandleIT_EES6_ = comdat any

$_ZN2v88internal6Object13GetSimpleHashES1_ = comdat any

$_ZN2v88internal12BinarySearchILNS0_10SearchModeE1ENS0_15DescriptorArrayEEEiPT0_NS0_4NameEiPi = comdat any

$_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m = comdat any

$_ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_ = comdat any

$_ZN2v88internal12StdoutStreamD1Ev = comdat any

$_ZN2v88internal8OFStreamD1Ev = comdat any

$_ZN2v88internal8OFStreamD0Ev = comdat any

$_ZTv0_n24_N2v88internal8OFStreamD1Ev = comdat any

$_ZTv0_n24_N2v88internal8OFStreamD0Ev = comdat any

$_ZN2v88internal12StdoutStreamD0Ev = comdat any

$_ZTv0_n24_N2v88internal12StdoutStreamD1Ev = comdat any

$_ZTv0_n24_N2v88internal12StdoutStreamD0Ev = comdat any

$_ZNSt3__16vectorIN2v88internal8compiler17ElementAccessInfoENS2_13ZoneAllocatorIS4_EEE21__push_back_slow_pathIRKS4_EEvOT_ = comdat any

$_ZN2v88internal8compiler17ElementAccessInfoC2ERKS2_ = comdat any

$_ZNSt3__16vectorIN2v88internal8compiler18PropertyAccessInfoENS2_13ZoneAllocatorIS4_EEE21__push_back_slow_pathIS4_EEvOT_ = comdat any

$_ZNSt3__16vectorIN2v88internal8compiler18PropertyAccessInfoENS2_13ZoneAllocatorIS4_EEE21__push_back_slow_pathIRKS4_EEvOT_ = comdat any

$_ZTVN2v88internal12StdoutStreamE = comdat any

$_ZTTN2v88internal12StdoutStreamE = comdat any

$_ZTCN2v88internal12StdoutStreamE0_NS0_8OFStreamE = comdat any

$_ZTCN2v88internal12StdoutStreamE0_NSt3__113basic_ostreamIcNS1_11char_traitsIcEEEE = comdat any

$_ZTVN2v88internal8OFStreamE = comdat any

$_ZTTN2v88internal8OFStreamE = comdat any

$_ZTCN2v88internal8OFStreamE0_NSt3__113basic_ostreamIcNS1_11char_traitsIcEEEE = comdat any

@.str = private unnamed_addr constant [5 x i8] c"Load\00", align 1
@.str.1 = private unnamed_addr constant [6 x i8] c"Store\00", align 1
@.str.2 = private unnamed_addr constant [15 x i8] c"StoreInLiteral\00", align 1
@.str.3 = private unnamed_addr constant [4 x i8] c"Has\00", align 1
@.str.4 = private unnamed_addr constant [17 x i8] c"unreachable code\00", align 1
@.str.5 = private unnamed_addr constant [18 x i8] c"Check failed: %s.\00", align 1
@.str.6 = private unnamed_addr constant [34 x i8] c"!lookup_start_object_maps.empty()\00", align 1
@.str.7 = private unnamed_addr constant [34 x i8] c"details_representation.IsTagged()\00", align 1
@.str.8 = private unnamed_addr constant [37 x i8] c"V8_DICT_PROPERTY_CONST_TRACKING_BOOL\00", align 1
@.str.9 = private unnamed_addr constant [21 x i8] c"name->IsUniqueName()\00", align 1
@.str.10 = private unnamed_addr constant [22 x i8] c"!map->is_deprecated()\00", align 1
@.str.11 = private unnamed_addr constant [51 x i8] c"!map->is_dictionary_map() implies map->is_stable()\00", align 1
@.str.12 = private unnamed_addr constant [17 x i8] c"!result->empty()\00", align 1
@.str.13 = private unnamed_addr constant [38 x i8] c"lookup_start_object_maps_.size() == 1\00", align 1
@.str.14 = private unnamed_addr constant [4 x i8] c"%s\0A\00", align 1
@.str.15 = private unnamed_addr constant [2 x i8] c"v\00", align 1
@.str.16 = private unnamed_addr constant [2 x i8] c"t\00", align 1
@.str.17 = private unnamed_addr constant [2 x i8] c"s\00", align 1
@.str.18 = private unnamed_addr constant [2 x i8] c"d\00", align 1
@.str.19 = private unnamed_addr constant [2 x i8] c"h\00", align 1
@.str.20 = private unnamed_addr constant [2 x i8] c"w\00", align 1
@.str.21 = private unnamed_addr constant [23 x i8] c"storage_.is_populated_\00", align 1
@_ZN2v88internal16SoleReadOnlyHeap15shared_ro_heap_E = external local_unnamed_addr global %"class.v8::internal::SoleReadOnlyHeap"*, align 8
@_ZNSt3__15ctypeIcE2idE = external global %"class.std::__1::locale::id", align 8
@.str.23 = private unnamed_addr constant [23 x i8] c"(location_) != nullptr\00", align 1
@.str.24 = private unnamed_addr constant [9 x i8] c"Missing \00", align 1
@.str.25 = private unnamed_addr constant [16 x i8] c"ObjectData for \00", align 1
@.str.26 = private unnamed_addr constant [3 x i8] c" (\00", align 1
@.str.27 = private unnamed_addr constant [39 x i8] c"../../v8/src/compiler/js-heap-broker.h\00", align 1
@.str.28 = private unnamed_addr constant [2 x i8] c":\00", align 1
@.str.29 = private unnamed_addr constant [2 x i8] c")\00", align 1
@stdout = external local_unnamed_addr global %struct._IO_FILE*, align 8
@_ZTVN2v88internal12StdoutStreamE = linkonce_odr hidden unnamed_addr constant { [5 x i8*], [5 x i8*] } { [5 x i8*] [i8* inttoptr (i64 88 to i8*), i8* null, i8* null, i8* bitcast (void (%"class.v8::internal::StdoutStream"*)* @_ZN2v88internal12StdoutStreamD1Ev to i8*), i8* bitcast (void (%"class.v8::internal::StdoutStream"*)* @_ZN2v88internal12StdoutStreamD0Ev to i8*)], [5 x i8*] [i8* inttoptr (i64 -88 to i8*), i8* inttoptr (i64 -88 to i8*), i8* null, i8* bitcast (void (%"class.v8::internal::StdoutStream"*)* @_ZTv0_n24_N2v88internal12StdoutStreamD1Ev to i8*), i8* bitcast (void (%"class.v8::internal::StdoutStream"*)* @_ZTv0_n24_N2v88internal12StdoutStreamD0Ev to i8*)] }, comdat, align 8
@_ZTTN2v88internal12StdoutStreamE = linkonce_odr hidden unnamed_addr constant [6 x i8*] [i8* bitcast (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTVN2v88internal12StdoutStreamE, i32 0, inrange i32 0, i32 3) to i8*), i8* bitcast (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTCN2v88internal12StdoutStreamE0_NS0_8OFStreamE, i32 0, inrange i32 0, i32 3) to i8*), i8* bitcast (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTCN2v88internal12StdoutStreamE0_NSt3__113basic_ostreamIcNS1_11char_traitsIcEEEE, i32 0, inrange i32 0, i32 3) to i8*), i8* bitcast (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTCN2v88internal12StdoutStreamE0_NSt3__113basic_ostreamIcNS1_11char_traitsIcEEEE, i32 0, inrange i32 1, i32 3) to i8*), i8* bitcast (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTCN2v88internal12StdoutStreamE0_NS0_8OFStreamE, i32 0, inrange i32 1, i32 3) to i8*), i8* bitcast (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTVN2v88internal12StdoutStreamE, i32 0, inrange i32 1, i32 3) to i8*)], comdat, align 8
@_ZTCN2v88internal12StdoutStreamE0_NS0_8OFStreamE = linkonce_odr hidden unnamed_addr constant { [5 x i8*], [5 x i8*] } { [5 x i8*] [i8* inttoptr (i64 88 to i8*), i8* null, i8* null, i8* bitcast (void (%"class.v8::internal::OFStream"*)* @_ZN2v88internal8OFStreamD1Ev to i8*), i8* bitcast (void (%"class.v8::internal::OFStream"*)* @_ZN2v88internal8OFStreamD0Ev to i8*)], [5 x i8*] [i8* inttoptr (i64 -88 to i8*), i8* inttoptr (i64 -88 to i8*), i8* null, i8* bitcast (void (%"class.v8::internal::OFStream"*)* @_ZTv0_n24_N2v88internal8OFStreamD1Ev to i8*), i8* bitcast (void (%"class.v8::internal::OFStream"*)* @_ZTv0_n24_N2v88internal8OFStreamD0Ev to i8*)] }, comdat, align 8
@_ZTCN2v88internal12StdoutStreamE0_NSt3__113basic_ostreamIcNS1_11char_traitsIcEEEE = linkonce_odr hidden unnamed_addr constant { [5 x i8*], [5 x i8*] } { [5 x i8*] [i8* inttoptr (i64 88 to i8*), i8* null, i8* null, i8* bitcast (void (%"class.std::__1::basic_ostream"*)* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEED1Ev to i8*), i8* bitcast (void (%"class.std::__1::basic_ostream"*)* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEED0Ev to i8*)], [5 x i8*] [i8* inttoptr (i64 -88 to i8*), i8* inttoptr (i64 -88 to i8*), i8* null, i8* bitcast (void (%"class.std::__1::basic_ostream"*)* @_ZTv0_n24_NSt3__113basic_ostreamIcNS_11char_traitsIcEEED1Ev to i8*), i8* bitcast (void (%"class.std::__1::basic_ostream"*)* @_ZTv0_n24_NSt3__113basic_ostreamIcNS_11char_traitsIcEEED0Ev to i8*)] }, comdat, align 8
@_ZTVNSt3__19basic_iosIcNS_11char_traitsIcEEEE = external unnamed_addr constant { [4 x i8*] }, align 8
@_ZTVN2v88internal8OFStreamE = linkonce_odr hidden unnamed_addr constant { [5 x i8*], [5 x i8*] } { [5 x i8*] [i8* inttoptr (i64 80 to i8*), i8* null, i8* null, i8* bitcast (void (%"class.v8::internal::OFStream"*)* @_ZN2v88internal8OFStreamD1Ev to i8*), i8* bitcast (void (%"class.v8::internal::OFStream"*)* @_ZN2v88internal8OFStreamD0Ev to i8*)], [5 x i8*] [i8* inttoptr (i64 -80 to i8*), i8* inttoptr (i64 -80 to i8*), i8* null, i8* bitcast (void (%"class.v8::internal::OFStream"*)* @_ZTv0_n24_N2v88internal8OFStreamD1Ev to i8*), i8* bitcast (void (%"class.v8::internal::OFStream"*)* @_ZTv0_n24_N2v88internal8OFStreamD0Ev to i8*)] }, comdat, align 8
@_ZTTN2v88internal8OFStreamE = linkonce_odr hidden unnamed_addr constant [4 x i8*] [i8* bitcast (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTVN2v88internal8OFStreamE, i32 0, inrange i32 0, i32 3) to i8*), i8* bitcast (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTCN2v88internal8OFStreamE0_NSt3__113basic_ostreamIcNS1_11char_traitsIcEEEE, i32 0, inrange i32 0, i32 3) to i8*), i8* bitcast (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTCN2v88internal8OFStreamE0_NSt3__113basic_ostreamIcNS1_11char_traitsIcEEEE, i32 0, inrange i32 1, i32 3) to i8*), i8* bitcast (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTVN2v88internal8OFStreamE, i32 0, inrange i32 1, i32 3) to i8*)], comdat, align 8
@_ZTCN2v88internal8OFStreamE0_NSt3__113basic_ostreamIcNS1_11char_traitsIcEEEE = linkonce_odr hidden unnamed_addr constant { [5 x i8*], [5 x i8*] } { [5 x i8*] [i8* inttoptr (i64 80 to i8*), i8* null, i8* null, i8* bitcast (void (%"class.std::__1::basic_ostream"*)* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEED1Ev to i8*), i8* bitcast (void (%"class.std::__1::basic_ostream"*)* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEED0Ev to i8*)], [5 x i8*] [i8* inttoptr (i64 -80 to i8*), i8* inttoptr (i64 -80 to i8*), i8* null, i8* bitcast (void (%"class.std::__1::basic_ostream"*)* @_ZTv0_n24_NSt3__113basic_ostreamIcNS_11char_traitsIcEEED1Ev to i8*), i8* bitcast (void (%"class.std::__1::basic_ostream"*)* @_ZTv0_n24_NSt3__113basic_ostreamIcNS_11char_traitsIcEEED0Ev to i8*)] }, comdat, align 8
@.str.30 = private unnamed_addr constant [8 x i8] c"IsMap()\00", align 1
@switch.table._ZNK2v88internal8compiler17AccessInfoFactory16LookupTransitionENS0_6HandleINS0_3MapEEENS3_INS0_4NameEEENS0_11MaybeHandleINS0_8JSObjectEEE = private unnamed_addr constant [5 x i64] [i64 0, i64 0, i64 16384, i64 0, i64 0], align 8
@switch.table._ZNK2v88internal14Representation8MnemonicEv = private unnamed_addr constant [6 x i8*] [i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.15, i64 0, i64 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.17, i64 0, i64 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.18, i64 0, i64 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.19, i64 0, i64 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.16, i64 0, i64 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.20, i64 0, i64 0)], align 8

@_ZN2v88internal8compiler17ElementAccessInfoC1EONS0_10ZoneVectorINS0_6HandleINS0_3MapEEEEENS0_12ElementsKindEPNS0_4ZoneE = hidden unnamed_addr alias void (%"class.v8::internal::compiler::ElementAccessInfo"*, %"class.v8::internal::ZoneVector"*, i8, %"class.v8::internal::Zone"*), void (%"class.v8::internal::compiler::ElementAccessInfo"*, %"class.v8::internal::ZoneVector"*, i8, %"class.v8::internal::Zone"*)* @_ZN2v88internal8compiler17ElementAccessInfoC2EONS0_10ZoneVectorINS0_6HandleINS0_3MapEEEEENS0_12ElementsKindEPNS0_4ZoneE
@_ZN2v88internal8compiler18PropertyAccessInfoC1EPNS0_4ZoneE = hidden unnamed_addr alias void (%"class.v8::internal::compiler::PropertyAccessInfo"*, %"class.v8::internal::Zone"*), void (%"class.v8::internal::compiler::PropertyAccessInfo"*, %"class.v8::internal::Zone"*)* @_ZN2v88internal8compiler18PropertyAccessInfoC2EPNS0_4ZoneE
@_ZN2v88internal8compiler18PropertyAccessInfoC1EPNS0_4ZoneENS2_4KindENS0_11MaybeHandleINS0_8JSObjectEEEONS0_10ZoneVectorINS0_6HandleINS0_3MapEEEEE = hidden unnamed_addr alias void (%"class.v8::internal::compiler::PropertyAccessInfo"*, %"class.v8::internal::Zone"*, i32, i64*, %"class.v8::internal::ZoneVector"*), void (%"class.v8::internal::compiler::PropertyAccessInfo"*, %"class.v8::internal::Zone"*, i32, i64*, %"class.v8::internal::ZoneVector"*)* @_ZN2v88internal8compiler18PropertyAccessInfoC2EPNS0_4ZoneENS2_4KindENS0_11MaybeHandleINS0_8JSObjectEEEONS0_10ZoneVectorINS0_6HandleINS0_3MapEEEEE
@_ZN2v88internal8compiler18PropertyAccessInfoC1EPNS0_4ZoneENS2_4KindENS0_11MaybeHandleINS0_8JSObjectEEENS0_6HandleINS0_6ObjectEEENS6_INS0_4NameEEEONS0_10ZoneVectorINS9_INS0_3MapEEEEE = hidden unnamed_addr alias void (%"class.v8::internal::compiler::PropertyAccessInfo"*, %"class.v8::internal::Zone"*, i32, i64*, i64*, i64*, %"class.v8::internal::ZoneVector"*), void (%"class.v8::internal::compiler::PropertyAccessInfo"*, %"class.v8::internal::Zone"*, i32, i64*, i64*, i64*, %"class.v8::internal::ZoneVector"*)* @_ZN2v88internal8compiler18PropertyAccessInfoC2EPNS0_4ZoneENS2_4KindENS0_11MaybeHandleINS0_8JSObjectEEENS0_6HandleINS0_6ObjectEEENS6_INS0_4NameEEEONS0_10ZoneVectorINS9_INS0_3MapEEEEE
@_ZN2v88internal8compiler18PropertyAccessInfoC1ENS2_4KindENS0_11MaybeHandleINS0_8JSObjectEEENS4_INS0_3MapEEENS0_10FieldIndexENS0_14RepresentationENS1_4TypeENS0_6HandleIS7_EES8_ONS0_10ZoneVectorISD_EEONSE_IPKNS1_21CompilationDependencyEEE = hidden unnamed_addr alias void (%"class.v8::internal::compiler::PropertyAccessInfo"*, i32, i64*, i64*, i64, i8, i64, i64, i64, %"class.v8::internal::ZoneVector"*, %"class.v8::internal::ZoneVector.22"*), void (%"class.v8::internal::compiler::PropertyAccessInfo"*, i32, i64*, i64*, i64, i8, i64, i64, i64, %"class.v8::internal::ZoneVector"*, %"class.v8::internal::ZoneVector.22"*)* @_ZN2v88internal8compiler18PropertyAccessInfoC2ENS2_4KindENS0_11MaybeHandleINS0_8JSObjectEEENS4_INS0_3MapEEENS0_10FieldIndexENS0_14RepresentationENS1_4TypeENS0_6HandleIS7_EES8_ONS0_10ZoneVectorISD_EEONSE_IPKNS1_21CompilationDependencyEEE
@_ZN2v88internal8compiler18PropertyAccessInfoC1EPNS0_4ZoneENS2_4KindENS0_11MaybeHandleINS0_8JSObjectEEEONS0_10ZoneVectorINS0_6HandleINS0_3MapEEEEENS0_13InternalIndexENSA_INS0_4NameEEE = hidden unnamed_addr alias void (%"class.v8::internal::compiler::PropertyAccessInfo"*, %"class.v8::internal::Zone"*, i32, i64*, %"class.v8::internal::ZoneVector"*, i64, i64), void (%"class.v8::internal::compiler::PropertyAccessInfo"*, %"class.v8::internal::Zone"*, i32, i64*, %"class.v8::internal::ZoneVector"*, i64, i64)* @_ZN2v88internal8compiler18PropertyAccessInfoC2EPNS0_4ZoneENS2_4KindENS0_11MaybeHandleINS0_8JSObjectEEEONS0_10ZoneVectorINS0_6HandleINS0_3MapEEEEENS0_13InternalIndexENSA_INS0_4NameEEE
@_ZN2v88internal8compiler33MinimorphicLoadPropertyAccessInfoC1ENS2_4KindEibNS0_14RepresentationENS1_4TypeE = hidden unnamed_addr alias void (%"class.v8::internal::compiler::MinimorphicLoadPropertyAccessInfo"*, i32, i32, i1, i8, i64), void (%"class.v8::internal::compiler::MinimorphicLoadPropertyAccessInfo"*, i32, i32, i1, i8, i64)* @_ZN2v88internal8compiler33MinimorphicLoadPropertyAccessInfoC2ENS2_4KindEibNS0_14RepresentationENS1_4TypeE
@_ZN2v88internal8compiler17AccessInfoFactoryC1EPNS1_12JSHeapBrokerEPNS1_23CompilationDependenciesEPNS0_4ZoneE = hidden unnamed_addr alias void (%"class.v8::internal::compiler::AccessInfoFactory"*, %"class.v8::internal::compiler::JSHeapBroker"*, %"class.v8::internal::compiler::CompilationDependencies"*, %"class.v8::internal::Zone"*), void (%"class.v8::internal::compiler::AccessInfoFactory"*, %"class.v8::internal::compiler::JSHeapBroker"*, %"class.v8::internal::compiler::CompilationDependencies"*, %"class.v8::internal::Zone"*)* @_ZN2v88internal8compiler17AccessInfoFactoryC2EPNS1_12JSHeapBrokerEPNS1_23CompilationDependenciesEPNS0_4ZoneE

; Function Attrs: nounwind ssp uwtable
define hidden dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN2v88internal8compilerlsERNSt3__113basic_ostreamIcNS2_11char_traitsIcEEEENS1_10AccessModeE(%"class.std::__1::basic_ostream"* dereferenceable(160), i32) local_unnamed_addr #0 {
  switch i32 %1, label %11 [
    i32 0, label %3
    i32 1, label %5
    i32 2, label %7
    i32 3, label %9
  ]

3:                                                ; preds = %2
  %4 = tail call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %0, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i64 0, i64 0), i64 4) #8
  br label %12

5:                                                ; preds = %2
  %6 = tail call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %0, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.1, i64 0, i64 0), i64 5) #8
  br label %12

7:                                                ; preds = %2
  %8 = tail call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %0, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.2, i64 0, i64 0), i64 14) #8
  br label %12

9:                                                ; preds = %2
  %10 = tail call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %0, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.3, i64 0, i64 0), i64 3) #8
  br label %12

11:                                               ; preds = %2
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.4, i64 0, i64 0)) #12
  unreachable

12:                                               ; preds = %9, %7, %5, %3
  %13 = phi %"class.std::__1::basic_ostream"* [ %10, %9 ], [ %8, %7 ], [ %6, %5 ], [ %4, %3 ]
  ret %"class.std::__1::basic_ostream"* %13
}

; Function Attrs: noreturn
declare void @_Z8V8_FatalPKcz(i8*, ...) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal8compiler17ElementAccessInfoC2EONS0_10ZoneVectorINS0_6HandleINS0_3MapEEEEENS0_12ElementsKindEPNS0_4ZoneE(%"class.v8::internal::compiler::ElementAccessInfo"*, %"class.v8::internal::ZoneVector"* nocapture readonly dereferenceable(32), i8 zeroext, %"class.v8::internal::Zone"*) unnamed_addr #0 align 2 {
  %5 = getelementptr inbounds %"class.v8::internal::compiler::ElementAccessInfo", %"class.v8::internal::compiler::ElementAccessInfo"* %0, i64 0, i32 0
  store i8 %2, i8* %5, align 8
  %6 = getelementptr inbounds %"class.v8::internal::compiler::ElementAccessInfo", %"class.v8::internal::compiler::ElementAccessInfo"* %0, i64 0, i32 1
  %7 = getelementptr inbounds %"class.v8::internal::ZoneVector", %"class.v8::internal::ZoneVector"* %1, i64 0, i32 0, i32 0, i32 2, i32 1, i32 0, i32 0
  %8 = bitcast %"class.v8::internal::Zone"** %7 to i64*
  %9 = load i64, i64* %8, align 8
  %10 = getelementptr inbounds %"class.v8::internal::compiler::ElementAccessInfo", %"class.v8::internal::compiler::ElementAccessInfo"* %0, i64 0, i32 1, i32 0, i32 0, i32 2, i32 1
  %11 = bitcast %"struct.std::__1::__compressed_pair_elem.0"* %10 to i64*
  %12 = bitcast %"class.v8::internal::ZoneVector"* %6 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %12, i8 0, i64 24, i1 false) #8
  store i64 %9, i64* %11, align 8
  %13 = getelementptr inbounds %"class.v8::internal::ZoneVector", %"class.v8::internal::ZoneVector"* %1, i64 0, i32 0, i32 0, i32 1
  %14 = bitcast %"class.v8::internal::Handle"** %13 to i64*
  %15 = load i64, i64* %14, align 8
  %16 = bitcast %"class.v8::internal::ZoneVector"* %1 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = sub i64 %15, %17
  %19 = ashr exact i64 %18, 3
  %20 = icmp eq i64 %18, 0
  %21 = inttoptr i64 %9 to %"class.v8::internal::Zone"*
  br i1 %20, label %129, label %22

22:                                               ; preds = %4
  %23 = icmp ugt i64 %19, 268435455
  br i1 %23, label %24, label %26

24:                                               ; preds = %22
  %25 = bitcast %"class.v8::internal::ZoneVector"* %6 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %25) #12
  unreachable

26:                                               ; preds = %22
  %27 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %21, i64 0, i32 2
  %28 = load i64, i64* %27, align 8
  %29 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %21, i64 0, i32 3
  %30 = load i64, i64* %29, align 8
  %31 = sub i64 %30, %28
  %32 = icmp ugt i64 %18, %31
  br i1 %32, label %33, label %35, !prof !2

33:                                               ; preds = %26
  %34 = tail call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %21, i64 %18) #8
  br label %37

35:                                               ; preds = %26
  %36 = add i64 %28, %18
  store i64 %36, i64* %27, align 8
  br label %37

37:                                               ; preds = %35, %33
  %38 = phi i64 [ %34, %33 ], [ %28, %35 ]
  %39 = inttoptr i64 %38 to %"class.v8::internal::Handle"*
  %40 = getelementptr inbounds %"class.v8::internal::compiler::ElementAccessInfo", %"class.v8::internal::compiler::ElementAccessInfo"* %0, i64 0, i32 1, i32 0, i32 0, i32 1
  store %"class.v8::internal::Handle"* %39, %"class.v8::internal::Handle"** %40, align 8
  %41 = getelementptr inbounds %"class.v8::internal::ZoneVector", %"class.v8::internal::ZoneVector"* %6, i64 0, i32 0, i32 0, i32 0
  store %"class.v8::internal::Handle"* %39, %"class.v8::internal::Handle"** %41, align 8
  %42 = getelementptr inbounds %"class.v8::internal::Handle", %"class.v8::internal::Handle"* %39, i64 %19
  %43 = getelementptr inbounds %"class.v8::internal::compiler::ElementAccessInfo", %"class.v8::internal::compiler::ElementAccessInfo"* %0, i64 0, i32 1, i32 0, i32 0, i32 2, i32 0, i32 0
  store %"class.v8::internal::Handle"* %42, %"class.v8::internal::Handle"** %43, align 8
  %44 = getelementptr inbounds %"class.v8::internal::ZoneVector", %"class.v8::internal::ZoneVector"* %1, i64 0, i32 0, i32 0, i32 0
  %45 = load %"class.v8::internal::Handle"*, %"class.v8::internal::Handle"** %44, align 8
  %46 = load %"class.v8::internal::Handle"*, %"class.v8::internal::Handle"** %13, align 8
  %47 = bitcast %"class.v8::internal::Handle"** %40 to i64*
  %48 = icmp eq %"class.v8::internal::Handle"* %45, %46
  br i1 %48, label %127, label %49

49:                                               ; preds = %37
  %50 = ptrtoint %"class.v8::internal::Handle"* %45 to i64
  %51 = inttoptr i64 %38 to i64*
  %52 = getelementptr %"class.v8::internal::Handle", %"class.v8::internal::Handle"* %46, i64 -1, i32 0, i32 0
  %53 = ptrtoint i64** %52 to i64
  %54 = sub i64 %53, %50
  %55 = lshr i64 %54, 3
  %56 = add nuw nsw i64 %55, 1
  %57 = and i64 %56, 7
  %58 = icmp eq i64 %57, 0
  br i1 %58, label %73, label %59

59:                                               ; preds = %49, %59
  %60 = phi %"class.v8::internal::Handle"* [ %67, %59 ], [ %39, %49 ]
  %61 = phi i64* [ %68, %59 ], [ %51, %49 ]
  %62 = phi %"class.v8::internal::Handle"* [ %66, %59 ], [ %45, %49 ]
  %63 = phi i64 [ %69, %59 ], [ %57, %49 ]
  %64 = bitcast %"class.v8::internal::Handle"* %62 to i64*
  %65 = load i64, i64* %64, align 8
  store i64 %65, i64* %61, align 8
  %66 = getelementptr inbounds %"class.v8::internal::Handle", %"class.v8::internal::Handle"* %62, i64 1
  %67 = getelementptr inbounds %"class.v8::internal::Handle", %"class.v8::internal::Handle"* %60, i64 1
  %68 = bitcast %"class.v8::internal::Handle"* %67 to i64*
  %69 = add i64 %63, -1
  %70 = icmp eq i64 %69, 0
  br i1 %70, label %71, label %59, !llvm.loop !3

71:                                               ; preds = %59
  %72 = bitcast %"class.v8::internal::Handle"* %67 to i64*
  br label %73

73:                                               ; preds = %49, %71
  %74 = phi %"class.v8::internal::Handle"* [ undef, %49 ], [ %67, %71 ]
  %75 = phi %"class.v8::internal::Handle"* [ %39, %49 ], [ %67, %71 ]
  %76 = phi i64* [ %51, %49 ], [ %72, %71 ]
  %77 = phi %"class.v8::internal::Handle"* [ %45, %49 ], [ %66, %71 ]
  %78 = icmp ult i64 %54, 56
  br i1 %78, label %124, label %79

79:                                               ; preds = %73, %79
  %80 = phi %"class.v8::internal::Handle"* [ %121, %79 ], [ %75, %73 ]
  %81 = phi i64* [ %123, %79 ], [ %76, %73 ]
  %82 = phi %"class.v8::internal::Handle"* [ %120, %79 ], [ %77, %73 ]
  %83 = bitcast %"class.v8::internal::Handle"* %82 to i64*
  %84 = load i64, i64* %83, align 8
  store i64 %84, i64* %81, align 8
  %85 = getelementptr inbounds %"class.v8::internal::Handle", %"class.v8::internal::Handle"* %82, i64 1
  %86 = getelementptr inbounds %"class.v8::internal::Handle", %"class.v8::internal::Handle"* %80, i64 1
  %87 = bitcast %"class.v8::internal::Handle"* %86 to i64*
  %88 = bitcast %"class.v8::internal::Handle"* %85 to i64*
  %89 = load i64, i64* %88, align 8
  store i64 %89, i64* %87, align 8
  %90 = getelementptr inbounds %"class.v8::internal::Handle", %"class.v8::internal::Handle"* %82, i64 2
  %91 = getelementptr inbounds %"class.v8::internal::Handle", %"class.v8::internal::Handle"* %80, i64 2
  %92 = bitcast %"class.v8::internal::Handle"* %91 to i64*
  %93 = bitcast %"class.v8::internal::Handle"* %90 to i64*
  %94 = load i64, i64* %93, align 8
  store i64 %94, i64* %92, align 8
  %95 = getelementptr inbounds %"class.v8::internal::Handle", %"class.v8::internal::Handle"* %82, i64 3
  %96 = getelementptr inbounds %"class.v8::internal::Handle", %"class.v8::internal::Handle"* %80, i64 3
  %97 = bitcast %"class.v8::internal::Handle"* %96 to i64*
  %98 = bitcast %"class.v8::internal::Handle"* %95 to i64*
  %99 = load i64, i64* %98, align 8
  store i64 %99, i64* %97, align 8
  %100 = getelementptr inbounds %"class.v8::internal::Handle", %"class.v8::internal::Handle"* %82, i64 4
  %101 = getelementptr inbounds %"class.v8::internal::Handle", %"class.v8::internal::Handle"* %80, i64 4
  %102 = bitcast %"class.v8::internal::Handle"* %101 to i64*
  %103 = bitcast %"class.v8::internal::Handle"* %100 to i64*
  %104 = load i64, i64* %103, align 8
  store i64 %104, i64* %102, align 8
  %105 = getelementptr inbounds %"class.v8::internal::Handle", %"class.v8::internal::Handle"* %82, i64 5
  %106 = getelementptr inbounds %"class.v8::internal::Handle", %"class.v8::internal::Handle"* %80, i64 5
  %107 = bitcast %"class.v8::internal::Handle"* %106 to i64*
  %108 = bitcast %"class.v8::internal::Handle"* %105 to i64*
  %109 = load i64, i64* %108, align 8
  store i64 %109, i64* %107, align 8
  %110 = getelementptr inbounds %"class.v8::internal::Handle", %"class.v8::internal::Handle"* %82, i64 6
  %111 = getelementptr inbounds %"class.v8::internal::Handle", %"class.v8::internal::Handle"* %80, i64 6
  %112 = bitcast %"class.v8::internal::Handle"* %111 to i64*
  %113 = bitcast %"class.v8::internal::Handle"* %110 to i64*
  %114 = load i64, i64* %113, align 8
  store i64 %114, i64* %112, align 8
  %115 = getelementptr inbounds %"class.v8::internal::Handle", %"class.v8::internal::Handle"* %82, i64 7
  %116 = getelementptr inbounds %"class.v8::internal::Handle", %"class.v8::internal::Handle"* %80, i64 7
  %117 = bitcast %"class.v8::internal::Handle"* %116 to i64*
  %118 = bitcast %"class.v8::internal::Handle"* %115 to i64*
  %119 = load i64, i64* %118, align 8
  store i64 %119, i64* %117, align 8
  %120 = getelementptr inbounds %"class.v8::internal::Handle", %"class.v8::internal::Handle"* %82, i64 8
  %121 = getelementptr inbounds %"class.v8::internal::Handle", %"class.v8::internal::Handle"* %80, i64 8
  %122 = icmp eq %"class.v8::internal::Handle"* %120, %46
  %123 = bitcast %"class.v8::internal::Handle"* %121 to i64*
  br i1 %122, label %124, label %79

124:                                              ; preds = %79, %73
  %125 = phi %"class.v8::internal::Handle"* [ %74, %73 ], [ %121, %79 ]
  %126 = ptrtoint %"class.v8::internal::Handle"* %125 to i64
  br label %127

127:                                              ; preds = %124, %37
  %128 = phi i64 [ %38, %37 ], [ %126, %124 ]
  store i64 %128, i64* %47, align 8
  br label %129

129:                                              ; preds = %4, %127
  %130 = getelementptr inbounds %"class.v8::internal::compiler::ElementAccessInfo", %"class.v8::internal::compiler::ElementAccessInfo"* %0, i64 0, i32 2
  %131 = ptrtoint %"class.v8::internal::Zone"* %3 to i64
  %132 = getelementptr inbounds %"class.v8::internal::compiler::ElementAccessInfo", %"class.v8::internal::compiler::ElementAccessInfo"* %0, i64 0, i32 2, i32 0, i32 0, i32 2, i32 1
  %133 = bitcast %"struct.std::__1::__compressed_pair_elem.0"* %132 to i64*
  %134 = bitcast %"class.v8::internal::ZoneVector"* %130 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %134, i8 0, i64 24, i1 false) #8
  store i64 %131, i64* %133, align 8
  %135 = getelementptr inbounds %"class.v8::internal::ZoneVector", %"class.v8::internal::ZoneVector"* %1, i64 0, i32 0, i32 0, i32 0
  %136 = load %"class.v8::internal::Handle"*, %"class.v8::internal::Handle"** %135, align 8
  %137 = load %"class.v8::internal::Handle"*, %"class.v8::internal::Handle"** %13, align 8
  %138 = icmp eq %"class.v8::internal::Handle"* %136, %137
  br i1 %138, label %139, label %140, !prof !2

139:                                              ; preds = %129
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.5, i64 0, i64 0), i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.6, i64 0, i64 0)) #12
  unreachable

140:                                              ; preds = %129
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal8compiler18PropertyAccessInfo7InvalidEPNS0_4ZoneE(%"class.v8::internal::compiler::PropertyAccessInfo"* noalias nocapture sret, %"class.v8::internal::Zone"*) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.v8::internal::compiler::PropertyAccessInfo", %"class.v8::internal::compiler::PropertyAccessInfo"* %0, i64 0, i32 0
  store i32 0, i32* %3, align 8
  %4 = getelementptr inbounds %"class.v8::internal::compiler::PropertyAccessInfo", %"class.v8::internal::compiler::PropertyAccessInfo"* %0, i64 0, i32 1
  %5 = ptrtoint %"class.v8::internal::Zone"* %1 to i64
  %6 = getelementptr inbounds %"class.v8::internal::compiler::PropertyAccessInfo", %"class.v8::internal::compiler::PropertyAccessInfo"* %0, i64 0, i32 1, i32 0, i32 0, i32 2, i32 1
  %7 = bitcast %"struct.std::__1::__compressed_pair_elem.0"* %6 to i64*
  %8 = bitcast %"class.v8::internal::ZoneVector"* %4 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %8, i8 0, i64 24, i1 false) #8
  store i64 %5, i64* %7, align 8
  %9 = getelementptr inbounds %"class.v8::internal::compiler::PropertyAccessInfo", %"class.v8::internal::compiler::PropertyAccessInfo"* %0, i64 0, i32 2, i32 0, i32 0
  %10 = getelementptr inbounds %"class.v8::internal::compiler::PropertyAccessInfo", %"class.v8::internal::compiler::PropertyAccessInfo"* %0, i64 0, i32 4, i32 0, i32 0, i32 2, i32 1
  %11 = bitcast %"struct.std::__1::__compressed_pair_elem.27"* %10 to i64*
  %12 = bitcast i64** %9 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %12, i8 0, i64 40, i1 false) #8
  store i64 %5, i64* %11, align 8
  %13 = getelementptr inbounds %"class.v8::internal::compiler::PropertyAccessInfo", %"class.v8::internal::compiler::PropertyAccessInfo"* %0, i64 0, i32 5, i32 0
  %14 = getelementptr inbounds %"class.v8::internal::compiler::PropertyAccessInfo", %"class.v8::internal::compiler::PropertyAccessInfo"* %0, i64 0, i32 8, i32 0
  %15 = bitcast i64** %13 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %15, i8 0, i64 17, i1 false) #8
  store i64 1, i64* %14, align 8
  %16 = getelementptr inbounds %"class.v8::internal::compiler::PropertyAccessInfo", %"class.v8::internal::compiler::PropertyAccessInfo"* %0, i64 0, i32 9, i32 0
  %17 = getelementptr inbounds %"class.v8::internal::compiler::PropertyAccessInfo", %"class.v8::internal::compiler::PropertyAccessInfo"* %0, i64 0, i32 11, i32 0
  %18 = bitcast i64** %16 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %18, i8 0, i64 16, i1 false) #8
  store i64 -1, i64* %17, align 8
  %19 = getelementptr inbounds %"class.v8::internal::compiler::PropertyAccessInfo", %"class.v8::internal::compiler::PropertyAccessInfo"* %0, i64 0, i32 12, i32 0
  store i64* null, i64** %19, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal8compiler18PropertyAccessInfo8NotFoundEPNS0_4ZoneENS0_6HandleINS0_3MapEEENS0_11MaybeHandleINS0_8JSObjectEEE(%"class.v8::internal::compiler::PropertyAccessInfo"* noalias sret, %"class.v8::internal::Zone"*, i64*, i64*) local_unnamed_addr #0 align 2 {
  %5 = ptrtoint %"class.v8::internal::Zone"* %1 to i64
  %6 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %1, i64 0, i32 2
  %7 = load i64, i64* %6, align 8
  %8 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %1, i64 0, i32 3
  %9 = load i64, i64* %8, align 8
  %10 = sub i64 %9, %7
  %11 = icmp ult i64 %10, 8
  %12 = ptrtoint i64* %2 to i64
  br i1 %11, label %13, label %15, !prof !2

13:                                               ; preds = %4
  %14 = tail call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %1, i64 8) #8
  br label %17

15:                                               ; preds = %4
  %16 = add i64 %7, 8
  store i64 %16, i64* %6, align 8
  br label %17

17:                                               ; preds = %15, %13
  %18 = phi i64 [ %14, %13 ], [ %7, %15 ]
  %19 = inttoptr i64 %18 to %"class.v8::internal::Handle"*
  %20 = inttoptr i64 %18 to i64*
  store i64 %12, i64* %20, align 8
  %21 = getelementptr inbounds %"class.v8::internal::Handle", %"class.v8::internal::Handle"* %19, i64 1
  %22 = ptrtoint %"class.v8::internal::Handle"* %21 to i64
  %23 = getelementptr inbounds %"class.v8::internal::compiler::PropertyAccessInfo", %"class.v8::internal::compiler::PropertyAccessInfo"* %0, i64 0, i32 0
  store i32 1, i32* %23, align 8
  %24 = getelementptr inbounds %"class.v8::internal::compiler::PropertyAccessInfo", %"class.v8::internal::compiler::PropertyAccessInfo"* %0, i64 0, i32 1
  %25 = getelementptr inbounds %"class.v8::internal::compiler::PropertyAccessInfo", %"class.v8::internal::compiler::PropertyAccessInfo"* %0, i64 0, i32 1, i32 0, i32 0, i32 2, i32 1
  %26 = bitcast %"struct.std::__1::__compressed_pair_elem.0"* %25 to i64*
  %27 = bitcast %"class.v8::internal::ZoneVector"* %24 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %27, i8 0, i64 24, i1 false) #8
  store i64 %5, i64* %26, align 8
  %28 = sub i64 %22, %18
  %29 = ashr exact i64 %28, 3
  %30 = icmp eq i64 %28, 0
  br i1 %30, label %57, label %31

31:                                               ; preds = %17
  %32 = icmp ugt i64 %29, 268435455
  br i1 %32, label %33, label %35

33:                                               ; preds = %31
  %34 = bitcast %"class.v8::internal::ZoneVector"* %24 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %34) #12
  unreachable

35:                                               ; preds = %31
  %36 = load i64, i64* %6, align 8
  %37 = load i64, i64* %8, align 8
  %38 = sub i64 %37, %36
  %39 = icmp ugt i64 %28, %38
  br i1 %39, label %40, label %42, !prof !2

40:                                               ; preds = %35
  %41 = call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %1, i64 %28) #8
  br label %44

42:                                               ; preds = %35
  %43 = add i64 %36, %28
  store i64 %43, i64* %6, align 8
  br label %44

44:                                               ; preds = %40, %42
  %45 = phi i64 [ %41, %40 ], [ %36, %42 ]
  %46 = inttoptr i64 %45 to %"class.v8::internal::Handle"*
  %47 = getelementptr inbounds %"class.v8::internal::compiler::PropertyAccessInfo", %"class.v8::internal::compiler::PropertyAccessInfo"* %0, i64 0, i32 1, i32 0, i32 0, i32 1
  store %"class.v8::internal::Handle"* %46, %"class.v8::internal::Handle"** %47, align 8
  %48 = getelementptr inbounds %"class.v8::internal::ZoneVector", %"class.v8::internal::ZoneVector"* %24, i64 0, i32 0, i32 0, i32 0
  store %"class.v8::internal::Handle"* %46, %"class.v8::internal::Handle"** %48, align 8
  %49 = getelementptr inbounds %"class.v8::internal::Handle", %"class.v8::internal::Handle"* %46, i64 %29
  %50 = getelementptr inbounds %"class.v8::internal::compiler::PropertyAccessInfo", %"class.v8::internal::compiler::PropertyAccessInfo"* %0, i64 0, i32 1, i32 0, i32 0, i32 2, i32 0, i32 0
  store %"class.v8::internal::Handle"* %49, %"class.v8::internal::Handle"** %50, align 8
  %51 = inttoptr i64 %45 to i64*
  %52 = bitcast %"class.v8::internal::Handle"** %47 to i64*
  %53 = inttoptr i64 %18 to i64*
  %54 = load i64, i64* %53, align 8
  store i64 %54, i64* %51, align 8
  %55 = getelementptr inbounds %"class.v8::internal::Handle", %"class.v8::internal::Handle"* %46, i64 1
  %56 = ptrtoint %"class.v8::internal::Handle"* %55 to i64
  store i64 %56, i64* %52, align 8
  br label %57

57:                                               ; preds = %17, %44
  %58 = getelementptr inbounds %"class.v8::internal::compiler::PropertyAccessInfo", %"class.v8::internal::compiler::PropertyAccessInfo"* %0, i64 0, i32 2, i32 0, i32 0
  store i64* null, i64** %58, align 8
  %59 = getelementptr inbounds %"class.v8::internal::compiler::PropertyAccessInfo", %"class.v8::internal::compiler::PropertyAccessInfo"* %0, i64 0, i32 3, i32 0
  store i64* %3, i64** %59, align 8
  %60 = getelementptr inbounds %"class.v8::internal::compiler::PropertyAccessInfo", %"class.v8::internal::compiler::PropertyAccessInfo"* %0, i64 0, i32 4
  %61 = getelementptr inbounds %"class.v8::internal::compiler::PropertyAccessInfo", %"class.v8::internal::compiler::PropertyAccessInfo"* %0, i64 0, i32 4, i32 0, i32 0, i32 2, i32 1
  %62 = bitcast %"struct.std::__1::__compressed_pair_elem.27"* %61 to i64*
  %63 = bitcast %"class.v8::internal::ZoneVector.22"* %60 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %63, i8 0, i64 24, i1 false) #8
  store i64 %5, i64* %62, align 8
  %64 = getelementptr inbounds %"class.v8::internal::compiler::PropertyAccessInfo", %"class.v8::internal::compiler::PropertyAccessInfo"* %0, i64 0, i32 5, i32 0
  %65 = getelementptr inbounds %"class.v8::internal::compiler::PropertyAccessInfo", %"class.v8::internal::compiler::PropertyAccessInfo"* %0, i64 0, i32 8, i32 0
  %66 = bitcast i64** %64 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %66, i8 0, i64 17, i1 false) #8
  store i64 1, i64* %65, align 8
  %67 = getelementptr inbounds %"class.v8::internal::compiler::PropertyAccessInfo", %"class.v8::internal::compiler::PropertyAccessInfo"* %0, i64 0, i32 9, i32 0
  %68 = getelementptr inbounds %"class.v8::internal::compiler::PropertyAccessInfo", %"class.v8::internal::compiler::PropertyAccessInfo"* %0, i64 0, i32 11, i32 0
  %69 = bitcast i64** %67 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %69, i8 0, i64 16, i1 false) #8
  store i64 -1, i64* %68, align 8
  %70 = getelementptr inbounds %"class.v8::internal::compiler::PropertyAccessInfo", %"class.v8::internal::compiler::PropertyAccessInfo"* %0, i64 0, i32 12, i32 0
  store i64* null, i64** %70, align 8
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal8compiler18PropertyAccessInfo9DataFieldEPNS0_4ZoneENS0_6HandleINS0_3MapEEEONS0_10ZoneVectorIPKNS1_21CompilationDependencyEEENS0_10FieldIndexENS0_14RepresentationENS1_4TypeES7_NS0_11MaybeHandleIS6_EENSH_INS0_8JSObjectEEESI_(%"class.v8::internal::compiler::PropertyAccessInfo"* noalias sret, %"class.v8::internal::Zone"*, i64*, %"class.v8::internal::ZoneVector.22"* nocapture dereferenceable(32), i64, i8, i64, i64, i64, i64, i64) local_unnamed_addr #0 align 2 {
  %12 = inttoptr i64 %9 to i64*
  %13 = inttoptr i64 %10 to i64*
  %14 = ptrtoint %"class.v8::internal::Zone"* %1 to i64
  %15 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %1, i64 0, i32 2
  %16 = load i64, i64* %15, align 8
  %17 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %1, i64 0, i32 3
  %18 = load i64, i64* %17, align 8
  %19 = sub i64 %18, %16
  %20 = icmp ult i64 %19, 8
  %21 = ptrtoint i64* %2 to i64
  br i1 %20, label %22, label %24, !prof !2

22:                                               ; preds = %11
  %23 = tail call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %1, i64 8) #8
  br label %26

24:                                               ; preds = %11
  %25 = add i64 %16, 8
  store i64 %25, i64* %15, align 8
  br label %26

26:                                               ; preds = %24, %22
  %27 = phi i64 [ %23, %22 ], [ %16, %24 ]
  %28 = inttoptr i64 %27 to %"class.v8::internal::Handle"*
  %29 = inttoptr i64 %27 to i64*
  store i64 %21, i64* %29, align 8
  %30 = getelementptr inbounds %"class.v8::internal::Handle", %"class.v8::internal::Handle"* %28, i64 1
  %31 = ptrtoint %"class.v8::internal::Handle"* %30 to i64
  %32 = inttoptr i64 %7 to i64*
  %33 = inttoptr i64 %8 to i64*
  %34 = getelementptr inbounds %"class.v8::internal::compiler::PropertyAccessInfo", %"class.v8::internal::compiler::PropertyAccessInfo"* %0, i64 0, i32 0
  store i32 2, i32* %34, align 8
  %35 = getelementptr inbounds %"class.v8::internal::compiler::PropertyAccessInfo", %"class.v8::internal::compiler::PropertyAccessInfo"* %0, i64 0, i32 1
  %36 = getelementptr inbounds %"class.v8::internal::compiler::PropertyAccessInfo", %"class.v8::internal::compiler::PropertyAccessInfo"* %0, i64 0, i32 1, i32 0, i32 0, i32 2, i32 1
  %37 = bitcast %"struct.std::__1::__compressed_pair_elem.0"* %36 to i64*
  %38 = bitcast %"class.v8::internal::ZoneVector"* %35 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %38, i8 0, i64 24, i1 false) #8
  store i64 %14, i64* %37, align 8
  %39 = sub i64 %31, %27
  %40 = ashr exact i64 %39, 3
  %41 = icmp eq i64 %39, 0
  br i1 %41, label %68, label %42

42:                                               ; preds = %26
  %43 = icmp ugt i64 %40, 268435455
  br i1 %43, label %44, label %46

44:                                               ; preds = %42
  %45 = bitcast %"class.v8::internal::ZoneVector"* %35 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %45) #12
  unreachable

46:                                               ; preds = %42
  %47 = load i64, i64* %15, align 8
  %48 = load i64, i64* %17, align 8
  %49 = sub i64 %48, %47
  %50 = icmp ugt i64 %39, %49
  br i1 %50, label %51, label %53, !prof !2

51:                                               ; preds = %46
  %52 = call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %1, i64 %39) #8
  br label %55

53:                                               ; preds = %46
  %54 = add i64 %47, %39
  store i64 %54, i64* %15, align 8
  br label %55

55:                                               ; preds = %51, %53
  %56 = phi i64 [ %52, %51 ], [ %47, %53 ]
  %57 = inttoptr i64 %56 to %"class.v8::internal::Handle"*
  %58 = getelementptr inbounds %"class.v8::internal::compiler::PropertyAccessInfo", %"class.v8::internal::compiler::PropertyAccessInfo"* %0, i64 0, i32 1, i32 0, i32 0, i32 1
  store %"class.v8::internal::Handle"* %57, %"class.v8::internal::Handle"** %58, align 8
  %59 = getelementptr inbounds %"class.v8::internal::ZoneVector", %"class.v8::internal::ZoneVector"* %35, i64 0, i32 0, i32 0, i32 0
  store %"class.v8::internal::Handle"* %57, %"class.v8::internal::Handle"** %59, align 8
  %60 = getelementptr inbounds %"class.v8::internal::Handle", %"class.v8::internal::Handle"* %57, i64 %40
  %61 = getelementptr inbounds %"class.v8::internal::compiler::PropertyAccessInfo", %"class.v8::internal::compiler::PropertyAccessInfo"* %0, i64 0, i32 1, i32 0, i32 0, i32 2, i32 0, i32 0
  store %"class.v8::internal::Handle"* %60, %"class.v8::internal::Handle"** %61, align 8
  %62 = inttoptr i64 %56 to i64*
  %63 = bitcast %"class.v8::internal::Handle"** %58 to i64*
  %64 = inttoptr i64 %27 to i64*
  %65 = load i64, i64* %64, align 8
  store i64 %65, i64* %62, align 8
  %66 = getelementptr inbounds %"class.v8::internal::Handle", %"class.v8::internal::Handle"* %57, i64 1
  %67 = ptrtoint %"class.v8::internal::Handle"* %66 to i64
  store i64 %67, i64* %63, align 8
  br label %68

68:                                               ; preds = %26, %55
  %69 = getelementptr inbounds %"class.v8::internal::compiler::PropertyAccessInfo", %"class.v8::internal::compiler::PropertyAccessInfo"* %0, i64 0, i32 2, i32 0, i32 0
  store i64* null, i64** %69, align 8
  %70 = getelementptr inbounds %"class.v8::internal::compiler::PropertyAccessInfo", %"class.v8::internal::compiler::PropertyAccessInfo"* %0, i64 0, i32 3, i32 0
  store i64* %12, i64** %70, align 8
  %71 = getelementptr inbounds %"class.v8::internal::compiler::PropertyAccessInfo", %"class.v8::internal::compiler::PropertyAccessInfo"* %0, i64 0, i32 4
  %72 = bitcast %"class.v8::internal::ZoneVector.22"* %3 to <2 x i64>*
  %73 = load <2 x i64>, <2 x i64>* %72, align 8
  %74 = bitcast %"class.v8::internal::ZoneVector.22"* %71 to <2 x i64>*
  store <2 x i64> %73, <2 x i64>* %74, align 8
  %75 = getelementptr inbounds %"class.v8::internal::ZoneVector.22", %"class.v8::internal::ZoneVector.22"* %3, i64 0, i32 0, i32 0, i32 2, i32 0, i32 0
  %76 = bitcast %"class.v8::internal::compiler::CompilationDependency"*** %75 to <2 x i64>*
  %77 = load <2 x i64>, <2 x i64>* %76, align 8
  %78 = getelementptr inbounds %"class.v8::internal::compiler::PropertyAccessInfo", %"class.v8::internal::compiler::PropertyAccessInfo"* %0, i64 0, i32 4, i32 0, i32 0, i32 2, i32 0, i32 0
  %79 = bitcast %"class.v8::internal::compiler::CompilationDependency"*** %78 to <2 x i64>*
  store <2 x i64> %77, <2 x i64>* %79, align 8
  %80 = bitcast %"class.v8::internal::ZoneVector.22"* %3 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %80, i8 0, i64 24, i1 false) #8
  %81 = getelementptr inbounds %"class.v8::internal::compiler::PropertyAccessInfo", %"class.v8::internal::compiler::PropertyAccessInfo"* %0, i64 0, i32 5, i32 0
  store i64* %13, i64** %81, align 8
  %82 = getelementptr inbounds %"class.v8::internal::compiler::PropertyAccessInfo", %"class.v8::internal::compiler::PropertyAccessInfo"* %0, i64 0, i32 6, i32 0
  store i64 %4, i64* %82, align 8
  %83 = getelementptr inbounds %"class.v8::internal::compiler::PropertyAccessInfo", %"class.v8::internal::compiler::PropertyAccessInfo"* %0, i64 0, i32 7, i32 0
  store i8 %5, i8* %83, align 8
  %84 = getelementptr inbounds %"class.v8::internal::compiler::PropertyAccessInfo", %"class.v8::internal::compiler::PropertyAccessInfo"* %0, i64 0, i32 8, i32 0
  store i64 %6, i64* %84, align 8
  %85 = getelementptr inbounds %"class.v8::internal::compiler::PropertyAccessInfo", %"class.v8::internal::compiler::PropertyAccessInfo"* %0, i64 0, i32 9, i32 0
  store i64* %32, i64** %85, align 8
  %86 = getelementptr inbounds %"class.v8::internal::compiler::PropertyAccessInfo", %"class.v8::internal::compiler::PropertyAccessInfo"* %0, i64 0, i32 10, i32 0
  store i64* %33, i64** %86, align 8
  %87 = getelementptr inbounds %"class.v8::internal::compiler::PropertyAccessInfo", %"class.v8::internal::compiler::PropertyAccessInfo"* %0, i64 0, i32 11, i32 0
  store i64 -1, i64* %87, align 8
  %88 = getelementptr inbounds %"class.v8::internal::compiler::PropertyAccessInfo", %"class.v8::internal::compiler::PropertyAccessInfo"* %0, i64 0, i32 12, i32 0
  store i64* null, i64** %88, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal8compiler18PropertyAccessInfo16FastDataConstantEPNS0_4ZoneENS0_6HandleINS0_3MapEEEONS0_10ZoneVectorIPKNS1_21CompilationDependencyEEENS0_10FieldIndexENS0_14RepresentationENS1_4TypeES7_NS0_11MaybeHandleIS6_EENSH_INS0_8JSObjectEEESI_(%"class.v8::internal::compiler::PropertyAccessInfo"* noalias sret, %"class.v8::internal::Zone"*, i64*, %"class.v8::internal::ZoneVector.22"* nocapture dereferenceable(32), i64, i8, i64, i64, i64, i64, i64) local_unnamed_addr #0 align 2 {
  %12 = inttoptr i64 %9 to i64*
  %13 = inttoptr i64 %10 to i64*
  %14 = ptrtoint %"class.v8::internal::Zone"* %1 to i64
  %15 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %1, i64 0, i32 2
  %16 = load i64, i64* %15, align 8
  %17 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %1, i64 0, i32 3
  %18 = load i64, i64* %17, align 8
  %19 = sub i64 %18, %16
  %20 = icmp ult i64 %19, 8
  %21 = ptrtoint i64* %2 to i64
  br i1 %20, label %22, label %24, !prof !2

22:                                               ; preds = %11
  %23 = tail call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %1, i64 8) #8
  br label %26

24:                                               ; preds = %11
  %25 = add i64 %16, 8
  store i64 %25, i64* %15, align 8
  br label %26

26:                                               ; preds = %24, %22
  %27 = phi i64 [ %23, %22 ], [ %16, %24 ]
  %28 = inttoptr i64 %27 to %"class.v8::internal::Handle"*
  %29 = inttoptr i64 %27 to i64*
  store i64 %21, i64* %29, align 8
  %30 = getelementptr inbounds %"class.v8::internal::Handle", %"class.v8::internal::Handle"* %28, i64 1
  %31 = ptrtoint %"class.v8::internal::Handle"* %30 to i64
  %32 = inttoptr i64 %7 to i64*
  %33 = inttoptr i64 %8 to i64*
  %34 = getelementptr inbounds %"class.v8::internal::compiler::PropertyAccessInfo", %"class.v8::internal::compiler::PropertyAccessInfo"* %0, i64 0, i32 0
  store i32 3, i32* %34, align 8
  %35 = getelementptr inbounds %"class.v8::internal::compiler::PropertyAccessInfo", %"class.v8::internal::compiler::PropertyAccessInfo"* %0, i64 0, i32 1
  %36 = getelementptr inbounds %"class.v8::internal::compiler::PropertyAccessInfo", %"class.v8::internal::compiler::PropertyAccessInfo"* %0, i64 0, i32 1, i32 0, i32 0, i32 2, i32 1
  %37 = bitcast %"struct.std::__1::__compressed_pair_elem.0"* %36 to i64*
  %38 = bitcast %"class.v8::internal::ZoneVector"* %35 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %38, i8 0, i64 24, i1 false) #8
  store i64 %14, i64* %37, align 8
  %39 = sub i64 %31, %27
  %40 = ashr exact i64 %39, 3
  %41 = icmp eq i64 %39, 0
  br i1 %41, label %68, label %42

42:                                               ; preds = %26
  %43 = icmp ugt i64 %40, 268435455
  br i1 %43, label %44, label %46

44:                                               ; preds = %42
  %45 = bitcast %"class.v8::internal::ZoneVector"* %35 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %45) #12
  unreachable

46:                                               ; preds = %42
  %47 = load i64, i64* %15, align 8
  %48 = load i64, i64* %17, align 8
  %49 = sub i64 %48, %47
  %50 = icmp ugt i64 %39, %49
  br i1 %50, label %51, label %53, !prof !2

51:                                               ; preds = %46
  %52 = call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %1, i64 %39) #8
  br label %55

53:                                               ; preds = %46
  %54 = add i64 %47, %39
  store i64 %54, i64* %15, align 8
  br label %55

55:                                               ; preds = %51, %53
  %56 = phi i64 [ %52, %51 ], [ %47, %53 ]
  %57 = inttoptr i64 %56 to %"class.v8::internal::Handle"*
  %58 = getelementptr inbounds %"class.v8::internal::compiler::PropertyAccessInfo", %"class.v8::internal::compiler::PropertyAccessInfo"* %0, i64 0, i32 1, i32 0, i32 0, i32 1
  store %"class.v8::internal::Handle"* %57, %"class.v8::internal::Handle"** %58, align 8
  %59 = getelementptr inbounds %"class.v8::internal::ZoneVector", %"class.v8::internal::ZoneVector"* %35, i64 0, i32 0, i32 0, i32 0
  store %"class.v8::internal::Handle"* %57, %"class.v8::internal::Handle"** %59, align 8
  %60 = getelementptr inbounds %"class.v8::internal::Handle", %"class.v8::internal::Handle"* %57, i64 %40
  %61 = getelementptr inbounds %"class.v8::internal::compiler::PropertyAccessInfo", %"class.v8::internal::compiler::PropertyAccessInfo"* %0, i64 0, i32 1, i32 0, i32 0, i32 2, i32 0, i32 0
  store %"class.v8::internal::Handle"* %60, %"class.v8::internal::Handle"** %61, align 8
  %62 = inttoptr i64 %56 to i64*
  %63 = bitcast %"class.v8::internal::Handle"** %58 to i64*
  %64 = inttoptr i64 %27 to i64*
  %65 = load i64, i64* %64, align 8
  store i64 %65, i64* %62, align 8
  %66 = getelementptr inbounds %"class.v8::internal::Handle", %"class.v8::internal::Handle"* %57, i64 1
  %67 = ptrtoint %"class.v8::internal::Handle"* %66 to i64
  store i64 %67, i64* %63, align 8
  br label %68

68:                                               ; preds = %26, %55
  %69 = getelementptr inbounds %"class.v8::internal::compiler::PropertyAccessInfo", %"class.v8::internal::compiler::PropertyAccessInfo"* %0, i64 0, i32 2, i32 0, i32 0
  store i64* null, i64** %69, align 8
  %70 = getelementptr inbounds %"class.v8::internal::compiler::PropertyAccessInfo", %"class.v8::internal::compiler::PropertyAccessInfo"* %0, i64 0, i32 3, i32 0
  store i64* %12, i64** %70, align 8
  %71 = getelementptr inbounds %"class.v8::internal::compiler::PropertyAccessInfo", %"class.v8::internal::compiler::PropertyAccessInfo"* %0, i64 0, i32 4
  %72 = bitcast %"class.v8::internal::ZoneVector.22"* %3 to <2 x i64>*
  %73 = load <2 x i64>, <2 x i64>* %72, align 8
  %74 = bitcast %"class.v8::internal::ZoneVector.22"* %71 to <2 x i64>*
  store <2 x i64> %73, <2 x i64>* %74, align 8
  %75 = getelementptr inbounds %"class.v8::internal::ZoneVector.22", %"class.v8::internal::ZoneVector.22"* %3, i64 0, i32 0, i32 0, i32 2, i32 0, i32 0
  %76 = bitcast %"class.v8::internal::compiler::CompilationDependency"*** %75 to <2 x i64>*
  %77 = load <2 x i64>, <2 x i64>* %76, align 8
  %78 = getelementptr inbounds %"class.v8::internal::compiler::PropertyAccessInfo", %"class.v8::internal::compiler::PropertyAccessInfo"* %0, i64 0, i32 4, i32 0, i32 0, i32 2, i32 0, i32 0
  %79 = bitcast %"class.v8::internal::compiler::CompilationDependency"*** %78 to <2 x i64>*
  store <2 x i64> %77, <2 x i64>* %79, align 8
  %80 = bitcast %"class.v8::internal::ZoneVector.22"* %3 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %80, i8 0, i64 24, i1 false) #8
  %81 = getelementptr inbounds %"class.v8::internal::compiler::PropertyAccessInfo", %"class.v8::internal::compiler::PropertyAccessInfo"* %0, i64 0, i32 5, i32 0
  store i64* %13, i64** %81, align 8
  %82 = getelementptr inbounds %"class.v8::internal::compiler::PropertyAccessInfo", %"class.v8::internal::compiler::PropertyAccessInfo"* %0, i64 0, i32 6, i32 0
  store i64 %4, i64* %82, align 8
  %83 = getelementptr inbounds %"class.v8::internal::compiler::PropertyAccessInfo", %"class.v8::internal::compiler::PropertyAccessInfo"* %0, i64 0, i32 7, i32 0
  store i8 %5, i8* %83, align 8
  %84 = getelementptr inbounds %"class.v8::internal::compiler::PropertyAccessInfo", %"class.v8::internal::compiler::PropertyAccessInfo"* %0, i64 0, i32 8, i32 0
  store i64 %6, i64* %84, align 8
  %85 = getelementptr inbounds %"class.v8::internal::compiler::PropertyAccessInfo", %"class.v8::internal::compiler::PropertyAccessInfo"* %0, i64 0, i32 9, i32 0
  store i64* %32, i64** %85, align 8
  %86 = getelementptr inbounds %"class.v8::internal::compiler::PropertyAccessInfo", %"class.v8::internal::compiler::PropertyAccessInfo"* %0, i64 0, i32 10, i32 0
  store i64* %33, i64** %86, align 8
  %87 = getelementptr inbounds %"class.v8::internal::compiler::PropertyAccessInfo", %"class.v8::internal::compiler::PropertyAccessInfo"* %0, i64 0, i32 11, i32 0
  store i64 -1, i64* %87, align 8
  %88 = getelementptr inbounds %"class.v8::internal::compiler::PropertyAccessInfo", %"class.v8::internal::compiler::PropertyAccessInfo"* %0, i64 0, i32 12, i32 0
  store i64* null, i64** %88, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal8compiler18PropertyAccessInfo20FastAccessorConstantEPNS0_4ZoneENS0_6HandleINS0_3MapEEENS5_INS0_6ObjectEEENS0_11MaybeHandleINS0_8JSObjectEEE(%"class.v8::internal::compiler::PropertyAccessInfo"* noalias sret, %"class.v8::internal::Zone"*, i64*, i64*, i64*) local_unnamed_addr #0 align 2 {
  %6 = ptrtoint %"class.v8::internal::Zone"* %1 to i64
  %7 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %1, i64 0, i32 2
  %8 = load i64, i64* %7, align 8
  %9 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %1, i64 0, i32 3
  %10 = load i64, i64* %9, align 8
  %11 = sub i64 %10, %8
  %12 = icmp ult i64 %11, 8
  %13 = ptrtoint i64* %2 to i64
  br i1 %12, label %14, label %16, !prof !2

14:                                               ; preds = %5
  %15 = tail call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %1, i64 8) #8
  br label %18

16:                                               ; preds = %5
  %17 = add i64 %8, 8
  store i64 %17, i64* %7, align 8
  br label %18

18:                                               ; preds = %16, %14
  %19 = phi i64 [ %15, %14 ], [ %8, %16 ]
  %20 = inttoptr i64 %19 to %"class.v8::internal::Handle"*
  %21 = inttoptr i64 %19 to i64*
  store i64 %13, i64* %21, align 8
  %22 = getelementptr inbounds %"class.v8::internal::Handle", %"class.v8::internal::Handle"* %20, i64 1
  %23 = ptrtoint %"class.v8::internal::Handle"* %22 to i64
  %24 = getelementptr inbounds %"class.v8::internal::compiler::PropertyAccessInfo", %"class.v8::internal::compiler::PropertyAccessInfo"* %0, i64 0, i32 0
  store i32 5, i32* %24, align 8
  %25 = getelementptr inbounds %"class.v8::internal::compiler::PropertyAccessInfo", %"class.v8::internal::compiler::PropertyAccessInfo"* %0, i64 0, i32 1
  %26 = getelementptr inbounds %"class.v8::internal::compiler::PropertyAccessInfo", %"class.v8::internal::compiler::PropertyAccessInfo"* %0, i64 0, i32 1, i32 0, i32 0, i32 2, i32 1
  %27 = bitcast %"struct.std::__1::__compressed_pair_elem.0"* %26 to i64*
  %28 = bitcast %"class.v8::internal::ZoneVector"* %25 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %28, i8 0, i64 24, i1 false) #8
  store i64 %6, i64* %27, align 8
  %29 = sub i64 %23, %19
  %30 = ashr exact i64 %29, 3
  %31 = icmp eq i64 %29, 0
  br i1 %31, label %58, label %32

32:                                               ; preds = %18
  %33 = icmp ugt i64 %30, 268435455
  br i1 %33, label %34, label %36

34:                                               ; preds = %32
  %35 = bitcast %"class.v8::internal::ZoneVector"* %25 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %35) #12
  unreachable

36:                                               ; preds = %32
  %37 = load i64, i64* %7, align 8
  %38 = load i64, i64* %9, align 8
  %39 = sub i64 %38, %37
  %40 = icmp ugt i64 %29, %39
  br i1 %40, label %41, label %43, !prof !2

41:                                               ; preds = %36
  %42 = call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %1, i64 %29) #8
  br label %45

43:                                               ; preds = %36
  %44 = add i64 %37, %29
  store i64 %44, i64* %7, align 8
  br label %45

45:                                               ; preds = %41, %43
  %46 = phi i64 [ %42, %41 ], [ %37, %43 ]
  %47 = inttoptr i64 %46 to %"class.v8::internal::Handle"*
  %48 = getelementptr inbounds %"class.v8::internal::compiler::PropertyAccessInfo", %"class.v8::internal::compiler::PropertyAccessInfo"* %0, i64 0, i32 1, i32 0, i32 0, i32 1
  store %"class.v8::internal::Handle"* %47, %"class.v8::internal::Handle"** %48, align 8
  %49 = getelementptr inbounds %"class.v8::internal::ZoneVector", %"class.v8::internal::ZoneVector"* %25, i64 0, i32 0, i32 0, i32 0
  store %"class.v8::internal::Handle"* %47, %"class.v8::internal::Handle"** %49, align 8
  %50 = getelementptr inbounds %"class.v8::internal::Handle", %"class.v8::internal::Handle"* %47, i64 %30
  %51 = getelementptr inbounds %"class.v8::internal::compiler::PropertyAccessInfo", %"class.v8::internal::compiler::PropertyAccessInfo"* %0, i64 0, i32 1, i32 0, i32 0, i32 2, i32 0, i32 0
  store %"class.v8::internal::Handle"* %50, %"class.v8::internal::Handle"** %51, align 8
  %52 = inttoptr i64 %46 to i64*
  %53 = bitcast %"class.v8::internal::Handle"** %48 to i64*
  %54 = inttoptr i64 %19 to i64*
  %55 = load i64, i64* %54, align 8
  store i64 %55, i64* %52, align 8
  %56 = getelementptr inbounds %"class.v8::internal::Handle", %"class.v8::internal::Handle"* %47, i64 1
  %57 = ptrtoint %"class.v8::internal::Handle"* %56 to i64
  store i64 %57, i64* %53, align 8
  br label %58

58:                                               ; preds = %18, %45
  %59 = getelementptr inbounds %"class.v8::internal::compiler::PropertyAccessInfo", %"class.v8::internal::compiler::PropertyAccessInfo"* %0, i64 0, i32 2, i32 0, i32 0
  store i64* %3, i64** %59, align 8
  %60 = getelementptr inbounds %"class.v8::internal::compiler::PropertyAccessInfo", %"class.v8::internal::compiler::PropertyAccessInfo"* %0, i64 0, i32 3, i32 0
  store i64* %4, i64** %60, align 8
  %61 = getelementptr inbounds %"class.v8::internal::compiler::PropertyAccessInfo", %"class.v8::internal::compiler::PropertyAccessInfo"* %0, i64 0, i32 4
  %62 = getelementptr inbounds %"class.v8::internal::compiler::PropertyAccessInfo", %"class.v8::internal::compiler::PropertyAccessInfo"* %0, i64 0, i32 4, i32 0, i32 0, i32 2, i32 1
  %63 = bitcast %"struct.std::__1::__compressed_pair_elem.27"* %62 to i64*
  %64 = bitcast %"class.v8::internal::ZoneVector.22"* %61 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %64, i8 0, i64 24, i1 false) #8
  store i64 %6, i64* %63, align 8
  %65 = getelementptr inbounds %"class.v8::internal::compiler::PropertyAccessInfo", %"class.v8::internal::compiler::PropertyAccessInfo"* %0, i64 0, i32 5, i32 0
  %66 = getelementptr inbounds %"class.v8::internal::compiler::PropertyAccessInfo", %"class.v8::internal::compiler::PropertyAccessInfo"* %0, i64 0, i32 8, i32 0
  %67 = bitcast i64** %65 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %67, i8 0, i64 17, i1 false) #8
  store i64 4294967295, i64* %66, align 8
  %68 = getelementptr inbounds %"class.v8::internal::compiler::PropertyAccessInfo", %"class.v8::internal::compiler::PropertyAccessInfo"* %0, i64 0, i32 9, i32 0
  %69 = getelementptr inbounds %"class.v8::internal::compiler::PropertyAccessInfo", %"class.v8::internal::compiler::PropertyAccessInfo"* %0, i64 0, i32 11, i32 0
  %70 = bitcast i64** %68 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %70, i8 0, i64 16, i1 false) #8
  store i64 -1, i64* %69, align 8
  %71 = getelementptr inbounds %"class.v8::internal::compiler::PropertyAccessInfo", %"class.v8::internal::compiler::PropertyAccessInfo"* %0, i64 0, i32 12, i32 0
  store i64* null, i64** %71, align 8
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal8compiler18PropertyAccessInfo12ModuleExportEPNS0_4ZoneENS0_6HandleINS0_3MapEEENS5_INS0_4CellEEE(%"class.v8::internal::compiler::PropertyAccessInfo"* noalias sret, %"class.v8::internal::Zone"*, i64*, i64*) local_unnamed_addr #0 align 2 {
  %5 = ptrtoint %"class.v8::internal::Zone"* %1 to i64
  %6 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %1, i64 0, i32 2
  %7 = load i64, i64* %6, align 8
  %8 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %1, i64 0, i32 3
  %9 = load i64, i64* %8, align 8
  %10 = sub i64 %9, %7
  %11 = icmp ult i64 %10, 8
  %12 = ptrtoint i64* %2 to i64
  br i1 %11, label %13, label %15, !prof !2

13:                                               ; preds = %4
  %14 = tail call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %1, i64 8) #8
  br label %17

15:                                               ; preds = %4
  %16 = add i64 %7, 8
  store i64 %16, i64* %6, align 8
  br label %17

17:                                               ; preds = %15, %13
  %18 = phi i64 [ %14, %13 ], [ %7, %15 ]
  %19 = inttoptr i64 %18 to %"class.v8::internal::Handle"*
  %20 = inttoptr i64 %18 to i64*
  store i64 %12, i64* %20, align 8
  %21 = getelementptr inbounds %"class.v8::internal::Handle", %"class.v8::internal::Handle"* %19, i64 1
  %22 = ptrtoint %"class.v8::internal::Handle"* %21 to i64
  %23 = getelementptr inbounds %"class.v8::internal::compiler::PropertyAccessInfo", %"class.v8::internal::compiler::PropertyAccessInfo"* %0, i64 0, i32 0
  store i32 7, i32* %23, align 8
  %24 = getelementptr inbounds %"class.v8::internal::compiler::PropertyAccessInfo", %"class.v8::internal::compiler::PropertyAccessInfo"* %0, i64 0, i32 1
  %25 = getelementptr inbounds %"class.v8::internal::compiler::PropertyAccessInfo", %"class.v8::internal::compiler::PropertyAccessInfo"* %0, i64 0, i32 1, i32 0, i32 0, i32 2, i32 1
  %26 = bitcast %"struct.std::__1::__compressed_pair_elem.0"* %25 to i64*
  %27 = bitcast %"class.v8::internal::ZoneVector"* %24 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %27, i8 0, i64 24, i1 false) #8
  store i64 %5, i64* %26, align 8
  %28 = sub i64 %22, %18
  %29 = ashr exact i64 %28, 3
  %30 = icmp eq i64 %28, 0
  br i1 %30, label %57, label %31

31:                                               ; preds = %17
  %32 = icmp ugt i64 %29, 268435455
  br i1 %32, label %33, label %35

33:                                               ; preds = %31
  %34 = bitcast %"class.v8::internal::ZoneVector"* %24 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %34) #12
  unreachable

35:                                               ; preds = %31
  %36 = load i64, i64* %6, align 8
  %37 = load i64, i64* %8, align 8
  %38 = sub i64 %37, %36
  %39 = icmp ugt i64 %28, %38
  br i1 %39, label %40, label %42, !prof !2

40:                                               ; preds = %35
  %41 = call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %1, i64 %28) #8
  br label %44

42:                                               ; preds = %35
  %43 = add i64 %36, %28
  store i64 %43, i64* %6, align 8
  br label %44

44:                                               ; preds = %40, %42
  %45 = phi i64 [ %41, %40 ], [ %36, %42 ]
  %46 = inttoptr i64 %45 to %"class.v8::internal::Handle"*
  %47 = getelementptr inbounds %"class.v8::internal::compiler::PropertyAccessInfo", %"class.v8::internal::compiler::PropertyAccessInfo"* %0, i64 0, i32 1, i32 0, i32 0, i32 1
  store %"class.v8::internal::Handle"* %46, %"class.v8::internal::Handle"** %47, align 8
  %48 = getelementptr inbounds %"class.v8::internal::ZoneVector", %"class.v8::internal::ZoneVector"* %24, i64 0, i32 0, i32 0, i32 0
  store %"class.v8::internal::Handle"* %46, %"class.v8::internal::Handle"** %48, align 8
  %49 = getelementptr inbounds %"class.v8::internal::Handle", %"class.v8::internal::Handle"* %46, i64 %29
  %50 = getelementptr inbounds %"class.v8::internal::compiler::PropertyAccessInfo", %"class.v8::internal::compiler::PropertyAccessInfo"* %0, i64 0, i32 1, i32 0, i32 0, i32 2, i32 0, i32 0
  store %"class.v8::internal::Handle"* %49, %"class.v8::internal::Handle"** %50, align 8
  %51 = inttoptr i64 %45 to i64*
  %52 = bitcast %"class.v8::internal::Handle"** %47 to i64*
  %53 = inttoptr i64 %18 to i64*
  %54 = load i64, i64* %53, align 8
  store i64 %54, i64* %51, align 8
  %55 = getelementptr inbounds %"class.v8::internal::Handle", %"class.v8::internal::Handle"* %46, i64 1
  %56 = ptrtoint %"class.v8::internal::Handle"* %55 to i64
  store i64 %56, i64* %52, align 8
  br label %57

57:                                               ; preds = %17, %44
  %58 = getelementptr inbounds %"class.v8::internal::compiler::PropertyAccessInfo", %"class.v8::internal::compiler::PropertyAccessInfo"* %0, i64 0, i32 2, i32 0, i32 0
  store i64* %3, i64** %58, align 8
  %59 = getelementptr inbounds %"class.v8::internal::compiler::PropertyAccessInfo", %"class.v8::internal::compiler::PropertyAccessInfo"* %0, i64 0, i32 3, i32 0
  %60 = getelementptr inbounds %"class.v8::internal::compiler::PropertyAccessInfo", %"class.v8::internal::compiler::PropertyAccessInfo"* %0, i64 0, i32 4, i32 0, i32 0, i32 2, i32 1
  %61 = bitcast %"struct.std::__1::__compressed_pair_elem.27"* %60 to i64*
  %62 = bitcast i64** %59 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %62, i8 0, i64 32, i1 false)
  store i64 %5, i64* %61, align 8
  %63 = getelementptr inbounds %"class.v8::internal::compiler::PropertyAccessInfo", %"class.v8::internal::compiler::PropertyAccessInfo"* %0, i64 0, i32 5, i32 0
  %64 = getelementptr inbounds %"class.v8::internal::compiler::PropertyAccessInfo", %"class.v8::internal::compiler::PropertyAccessInfo"* %0, i64 0, i32 8, i32 0
  %65 = bitcast i64** %63 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %65, i8 0, i64 17, i1 false) #8
  store i64 4294967295, i64* %64, align 8
  %66 = getelementptr inbounds %"class.v8::internal::compiler::PropertyAccessInfo", %"class.v8::internal::compiler::PropertyAccessInfo"* %0, i64 0, i32 9, i32 0
  %67 = getelementptr inbounds %"class.v8::internal::compiler::PropertyAccessInfo", %"class.v8::internal::compiler::PropertyAccessInfo"* %0, i64 0, i32 11, i32 0
  %68 = bitcast i64** %66 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %68, i8 0, i64 16, i1 false) #8
  store i64 -1, i64* %67, align 8
  %69 = getelementptr inbounds %"class.v8::internal::compiler::PropertyAccessInfo", %"class.v8::internal::compiler::PropertyAccessInfo"* %0, i64 0, i32 12, i32 0
  store i64* null, i64** %69, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal8compiler18PropertyAccessInfo12StringLengthEPNS0_4ZoneENS0_6HandleINS0_3MapEEE(%"class.v8::internal::compiler::PropertyAccessInfo"* noalias sret, %"class.v8::internal::Zone"*, i64*) local_unnamed_addr #0 align 2 {
  %4 = ptrtoint %"class.v8::internal::Zone"* %1 to i64
  %5 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %1, i64 0, i32 2
  %6 = load i64, i64* %5, align 8
  %7 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %1, i64 0, i32 3
  %8 = load i64, i64* %7, align 8
  %9 = sub i64 %8, %6
  %10 = icmp ult i64 %9, 8
  %11 = ptrtoint i64* %2 to i64
  br i1 %10, label %12, label %14, !prof !2

12:                                               ; preds = %3
  %13 = tail call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %1, i64 8) #8
  br label %16

14:                                               ; preds = %3
  %15 = add i64 %6, 8
  store i64 %15, i64* %5, align 8
  br label %16

16:                                               ; preds = %14, %12
  %17 = phi i64 [ %13, %12 ], [ %6, %14 ]
  %18 = inttoptr i64 %17 to %"class.v8::internal::Handle"*
  %19 = inttoptr i64 %17 to i64*
  store i64 %11, i64* %19, align 8
  %20 = getelementptr inbounds %"class.v8::internal::Handle", %"class.v8::internal::Handle"* %18, i64 1
  %21 = ptrtoint %"class.v8::internal::Handle"* %20 to i64
  %22 = getelementptr inbounds %"class.v8::internal::compiler::PropertyAccessInfo", %"class.v8::internal::compiler::PropertyAccessInfo"* %0, i64 0, i32 0
  store i32 8, i32* %22, align 8
  %23 = getelementptr inbounds %"class.v8::internal::compiler::PropertyAccessInfo", %"class.v8::internal::compiler::PropertyAccessInfo"* %0, i64 0, i32 1
  %24 = getelementptr inbounds %"class.v8::internal::compiler::PropertyAccessInfo", %"class.v8::internal::compiler::PropertyAccessInfo"* %0, i64 0, i32 1, i32 0, i32 0, i32 2, i32 1
  %25 = bitcast %"struct.std::__1::__compressed_pair_elem.0"* %24 to i64*
  %26 = bitcast %"class.v8::internal::ZoneVector"* %23 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %26, i8 0, i64 24, i1 false) #8
  store i64 %4, i64* %25, align 8
  %27 = sub i64 %21, %17
  %28 = ashr exact i64 %27, 3
  %29 = icmp eq i64 %27, 0
  br i1 %29, label %56, label %30

30:                                               ; preds = %16
  %31 = icmp ugt i64 %28, 268435455
  br i1 %31, label %32, label %34

32:                                               ; preds = %30
  %33 = bitcast %"class.v8::internal::ZoneVector"* %23 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %33) #12
  unreachable

34:                                               ; preds = %30
  %35 = load i64, i64* %5, align 8
  %36 = load i64, i64* %7, align 8
  %37 = sub i64 %36, %35
  %38 = icmp ugt i64 %27, %37
  br i1 %38, label %39, label %41, !prof !2

39:                                               ; preds = %34
  %40 = call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %1, i64 %27) #8
  br label %43

41:                                               ; preds = %34
  %42 = add i64 %35, %27
  store i64 %42, i64* %5, align 8
  br label %43

43:                                               ; preds = %39, %41
  %44 = phi i64 [ %40, %39 ], [ %35, %41 ]
  %45 = inttoptr i64 %44 to %"class.v8::internal::Handle"*
  %46 = getelementptr inbounds %"class.v8::internal::compiler::PropertyAccessInfo", %"class.v8::internal::compiler::PropertyAccessInfo"* %0, i64 0, i32 1, i32 0, i32 0, i32 1
  store %"class.v8::internal::Handle"* %45, %"class.v8::internal::Handle"** %46, align 8
  %47 = getelementptr inbounds %"class.v8::internal::ZoneVector", %"class.v8::internal::ZoneVector"* %23, i64 0, i32 0, i32 0, i32 0
  store %"class.v8::internal::Handle"* %45, %"class.v8::internal::Handle"** %47, align 8
  %48 = getelementptr inbounds %"class.v8::internal::Handle", %"class.v8::internal::Handle"* %45, i64 %28
  %49 = getelementptr inbounds %"class.v8::internal::compiler::PropertyAccessInfo", %"class.v8::internal::compiler::PropertyAccessInfo"* %0, i64 0, i32 1, i32 0, i32 0, i32 2, i32 0, i32 0
  store %"class.v8::internal::Handle"* %48, %"class.v8::internal::Handle"** %49, align 8
  %50 = inttoptr i64 %44 to i64*
  %51 = bitcast %"class.v8::internal::Handle"** %46 to i64*
  %52 = inttoptr i64 %17 to i64*
  %53 = load i64, i64* %52, align 8
  store i64 %53, i64* %50, align 8
  %54 = getelementptr inbounds %"class.v8::internal::Handle", %"class.v8::internal::Handle"* %45, i64 1
  %55 = ptrtoint %"class.v8::internal::Handle"* %54 to i64
  store i64 %55, i64* %51, align 8
  br label %56

56:                                               ; preds = %16, %43
  %57 = getelementptr inbounds %"class.v8::internal::compiler::PropertyAccessInfo", %"class.v8::internal::compiler::PropertyAccessInfo"* %0, i64 0, i32 2, i32 0, i32 0
  %58 = getelementptr inbounds %"class.v8::internal::compiler::PropertyAccessInfo", %"class.v8::internal::compiler::PropertyAccessInfo"* %0, i64 0, i32 4, i32 0, i32 0, i32 2, i32 1
  %59 = bitcast %"struct.std::__1::__compressed_pair_elem.27"* %58 to i64*
  %60 = bitcast i64** %57 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %60, i8 0, i64 40, i1 false)
  store i64 %4, i64* %59, align 8
  %61 = getelementptr inbounds %"class.v8::internal::compiler::PropertyAccessInfo", %"class.v8::internal::compiler::PropertyAccessInfo"* %0, i64 0, i32 5, i32 0
  %62 = getelementptr inbounds %"class.v8::internal::compiler::PropertyAccessInfo", %"class.v8::internal::compiler::PropertyAccessInfo"* %0, i64 0, i32 8, i32 0
  %63 = bitcast i64** %61 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %63, i8 0, i64 17, i1 false) #8
  store i64 1, i64* %62, align 8
  %64 = getelementptr inbounds %"class.v8::internal::compiler::PropertyAccessInfo", %"class.v8::internal::compiler::PropertyAccessInfo"* %0, i64 0, i32 9, i32 0
  %65 = getelementptr inbounds %"class.v8::internal::compiler::PropertyAccessInfo", %"class.v8::internal::compiler::PropertyAccessInfo"* %0, i64 0, i32 11, i32 0
  %66 = bitcast i64** %64 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %66, i8 0, i64 16, i1 false) #8
  store i64 -1, i64* %65, align 8
  %67 = getelementptr inbounds %"class.v8::internal::compiler::PropertyAccessInfo", %"class.v8::internal::compiler::PropertyAccessInfo"* %0, i64 0, i32 12, i32 0
  store i64* null, i64** %67, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal8compiler18PropertyAccessInfo27DictionaryProtoDataConstantEPNS0_4ZoneENS0_6HandleINS0_3MapEEENS5_INS0_8JSObjectEEENS0_13InternalIndexENS5_INS0_4NameEEE(%"class.v8::internal::compiler::PropertyAccessInfo"* noalias sret, %"class.v8::internal::Zone"*, i64*, i64*, i64, i64*) local_unnamed_addr #0 align 2 {
  %7 = ptrtoint %"class.v8::internal::Zone"* %1 to i64
  %8 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %1, i64 0, i32 2
  %9 = load i64, i64* %8, align 8
  %10 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %1, i64 0, i32 3
  %11 = load i64, i64* %10, align 8
  %12 = sub i64 %11, %9
  %13 = icmp ult i64 %12, 8
  %14 = ptrtoint i64* %2 to i64
  br i1 %13, label %15, label %17, !prof !2

15:                                               ; preds = %6
  %16 = tail call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %1, i64 8) #8
  br label %19

17:                                               ; preds = %6
  %18 = add i64 %9, 8
  store i64 %18, i64* %8, align 8
  br label %19

19:                                               ; preds = %17, %15
  %20 = phi i64 [ %16, %15 ], [ %9, %17 ]
  %21 = inttoptr i64 %20 to %"class.v8::internal::Handle"*
  %22 = inttoptr i64 %20 to i64*
  store i64 %14, i64* %22, align 8
  %23 = getelementptr inbounds %"class.v8::internal::Handle", %"class.v8::internal::Handle"* %21, i64 1
  %24 = ptrtoint %"class.v8::internal::Handle"* %23 to i64
  %25 = getelementptr inbounds %"class.v8::internal::compiler::PropertyAccessInfo", %"class.v8::internal::compiler::PropertyAccessInfo"* %0, i64 0, i32 0
  store i32 4, i32* %25, align 8
  %26 = getelementptr inbounds %"class.v8::internal::compiler::PropertyAccessInfo", %"class.v8::internal::compiler::PropertyAccessInfo"* %0, i64 0, i32 1
  %27 = getelementptr inbounds %"class.v8::internal::compiler::PropertyAccessInfo", %"class.v8::internal::compiler::PropertyAccessInfo"* %0, i64 0, i32 1, i32 0, i32 0, i32 2, i32 1
  %28 = bitcast %"struct.std::__1::__compressed_pair_elem.0"* %27 to i64*
  %29 = bitcast %"class.v8::internal::ZoneVector"* %26 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %29, i8 0, i64 24, i1 false) #8
  store i64 %7, i64* %28, align 8
  %30 = sub i64 %24, %20
  %31 = ashr exact i64 %30, 3
  %32 = icmp eq i64 %30, 0
  br i1 %32, label %59, label %33

33:                                               ; preds = %19
  %34 = icmp ugt i64 %31, 268435455
  br i1 %34, label %35, label %37

35:                                               ; preds = %33
  %36 = bitcast %"class.v8::internal::ZoneVector"* %26 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %36) #12
  unreachable

37:                                               ; preds = %33
  %38 = load i64, i64* %8, align 8
  %39 = load i64, i64* %10, align 8
  %40 = sub i64 %39, %38
  %41 = icmp ugt i64 %30, %40
  br i1 %41, label %42, label %44, !prof !2

42:                                               ; preds = %37
  %43 = call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %1, i64 %30) #8
  br label %46

44:                                               ; preds = %37
  %45 = add i64 %38, %30
  store i64 %45, i64* %8, align 8
  br label %46

46:                                               ; preds = %42, %44
  %47 = phi i64 [ %43, %42 ], [ %38, %44 ]
  %48 = inttoptr i64 %47 to %"class.v8::internal::Handle"*
  %49 = getelementptr inbounds %"class.v8::internal::compiler::PropertyAccessInfo", %"class.v8::internal::compiler::PropertyAccessInfo"* %0, i64 0, i32 1, i32 0, i32 0, i32 1
  store %"class.v8::internal::Handle"* %48, %"class.v8::internal::Handle"** %49, align 8
  %50 = getelementptr inbounds %"class.v8::internal::ZoneVector", %"class.v8::internal::ZoneVector"* %26, i64 0, i32 0, i32 0, i32 0
  store %"class.v8::internal::Handle"* %48, %"class.v8::internal::Handle"** %50, align 8
  %51 = getelementptr inbounds %"class.v8::internal::Handle", %"class.v8::internal::Handle"* %48, i64 %31
  %52 = getelementptr inbounds %"class.v8::internal::compiler::PropertyAccessInfo", %"class.v8::internal::compiler::PropertyAccessInfo"* %0, i64 0, i32 1, i32 0, i32 0, i32 2, i32 0, i32 0
  store %"class.v8::internal::Handle"* %51, %"class.v8::internal::Handle"** %52, align 8
  %53 = inttoptr i64 %47 to i64*
  %54 = bitcast %"class.v8::internal::Handle"** %49 to i64*
  %55 = inttoptr i64 %20 to i64*
  %56 = load i64, i64* %55, align 8
  store i64 %56, i64* %53, align 8
  %57 = getelementptr inbounds %"class.v8::internal::Handle", %"class.v8::internal::Handle"* %48, i64 1
  %58 = ptrtoint %"class.v8::internal::Handle"* %57 to i64
  store i64 %58, i64* %54, align 8
  br label %59

59:                                               ; preds = %19, %46
  %60 = getelementptr inbounds %"class.v8::internal::compiler::PropertyAccessInfo", %"class.v8::internal::compiler::PropertyAccessInfo"* %0, i64 0, i32 2, i32 0, i32 0
  store i64* null, i64** %60, align 8
  %61 = getelementptr inbounds %"class.v8::internal::compiler::PropertyAccessInfo", %"class.v8::internal::compiler::PropertyAccessInfo"* %0, i64 0, i32 3, i32 0
  store i64* %3, i64** %61, align 8
  %62 = getelementptr inbounds %"class.v8::internal::compiler::PropertyAccessInfo", %"class.v8::internal::compiler::PropertyAccessInfo"* %0, i64 0, i32 4
  %63 = getelementptr inbounds %"class.v8::internal::compiler::PropertyAccessInfo", %"class.v8::internal::compiler::PropertyAccessInfo"* %0, i64 0, i32 4, i32 0, i32 0, i32 2, i32 1
  %64 = bitcast %"struct.std::__1::__compressed_pair_elem.27"* %63 to i64*
  %65 = bitcast %"class.v8::internal::ZoneVector.22"* %62 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %65, i8 0, i64 24, i1 false) #8
  store i64 %7, i64* %64, align 8
  %66 = getelementptr inbounds %"class.v8::internal::compiler::PropertyAccessInfo", %"class.v8::internal::compiler::PropertyAccessInfo"* %0, i64 0, i32 5, i32 0
  %67 = getelementptr inbounds %"class.v8::internal::compiler::PropertyAccessInfo", %"class.v8::internal::compiler::PropertyAccessInfo"* %0, i64 0, i32 8, i32 0
  %68 = bitcast i64** %66 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %68, i8 0, i64 17, i1 false) #8
  store i64 4294967295, i64* %67, align 8
  %69 = getelementptr inbounds %"class.v8::internal::compiler::PropertyAccessInfo", %"class.v8::internal::compiler::PropertyAccessInfo"* %0, i64 0, i32 9, i32 0
  %70 = getelementptr inbounds %"class.v8::internal::compiler::PropertyAccessInfo", %"class.v8::internal::compiler::PropertyAccessInfo"* %0, i64 0, i32 11, i32 0
  %71 = bitcast i64** %69 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %71, i8 0, i64 16, i1 false) #8
  store i64 %4, i64* %70, align 8
  %72 = getelementptr inbounds %"class.v8::internal::compiler::PropertyAccessInfo", %"class.v8::internal::compiler::PropertyAccessInfo"* %0, i64 0, i32 12, i32 0
  store i64* %5, i64** %72, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal8compiler18PropertyAccessInfo31DictionaryProtoAccessorConstantEPNS0_4ZoneENS0_6HandleINS0_3MapEEENS0_11MaybeHandleINS0_8JSObjectEEENS5_INS0_6ObjectEEENS5_INS0_4NameEEE(%"class.v8::internal::compiler::PropertyAccessInfo"* noalias sret, %"class.v8::internal::Zone"*, i64*, i64*, i64*, i64*) local_unnamed_addr #0 align 2 {
  %7 = ptrtoint %"class.v8::internal::Zone"* %1 to i64
  %8 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %1, i64 0, i32 2
  %9 = load i64, i64* %8, align 8
  %10 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %1, i64 0, i32 3
  %11 = load i64, i64* %10, align 8
  %12 = sub i64 %11, %9
  %13 = icmp ult i64 %12, 8
  %14 = ptrtoint i64* %2 to i64
  br i1 %13, label %15, label %17, !prof !2

15:                                               ; preds = %6
  %16 = tail call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %1, i64 8) #8
  br label %19

17:                                               ; preds = %6
  %18 = add i64 %9, 8
  store i64 %18, i64* %8, align 8
  br label %19

19:                                               ; preds = %17, %15
  %20 = phi i64 [ %16, %15 ], [ %9, %17 ]
  %21 = inttoptr i64 %20 to %"class.v8::internal::Handle"*
  %22 = inttoptr i64 %20 to i64*
  store i64 %14, i64* %22, align 8
  %23 = getelementptr inbounds %"class.v8::internal::Handle", %"class.v8::internal::Handle"* %21, i64 1
  %24 = ptrtoint %"class.v8::internal::Handle"* %23 to i64
  %25 = getelementptr inbounds %"class.v8::internal::compiler::PropertyAccessInfo", %"class.v8::internal::compiler::PropertyAccessInfo"* %0, i64 0, i32 0
  store i32 6, i32* %25, align 8
  %26 = getelementptr inbounds %"class.v8::internal::compiler::PropertyAccessInfo", %"class.v8::internal::compiler::PropertyAccessInfo"* %0, i64 0, i32 1
  %27 = getelementptr inbounds %"class.v8::internal::compiler::PropertyAccessInfo", %"class.v8::internal::compiler::PropertyAccessInfo"* %0, i64 0, i32 1, i32 0, i32 0, i32 2, i32 1
  %28 = bitcast %"struct.std::__1::__compressed_pair_elem.0"* %27 to i64*
  %29 = bitcast %"class.v8::internal::ZoneVector"* %26 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %29, i8 0, i64 24, i1 false) #8
  store i64 %7, i64* %28, align 8
  %30 = sub i64 %24, %20
  %31 = ashr exact i64 %30, 3
  %32 = icmp eq i64 %30, 0
  br i1 %32, label %59, label %33

33:                                               ; preds = %19
  %34 = icmp ugt i64 %31, 268435455
  br i1 %34, label %35, label %37

35:                                               ; preds = %33
  %36 = bitcast %"class.v8::internal::ZoneVector"* %26 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %36) #12
  unreachable

37:                                               ; preds = %33
  %38 = load i64, i64* %8, align 8
  %39 = load i64, i64* %10, align 8
  %40 = sub i64 %39, %38
  %41 = icmp ugt i64 %30, %40
  br i1 %41, label %42, label %44, !prof !2

42:                                               ; preds = %37
  %43 = call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %1, i64 %30) #8
  br label %46

44:                                               ; preds = %37
  %45 = add i64 %38, %30
  store i64 %45, i64* %8, align 8
  br label %46

46:                                               ; preds = %42, %44
  %47 = phi i64 [ %43, %42 ], [ %38, %44 ]
  %48 = inttoptr i64 %47 to %"class.v8::internal::Handle"*
  %49 = getelementptr inbounds %"class.v8::internal::compiler::PropertyAccessInfo", %"class.v8::internal::compiler::PropertyAccessInfo"* %0, i64 0, i32 1, i32 0, i32 0, i32 1
  store %"class.v8::internal::Handle"* %48, %"class.v8::internal::Handle"** %49, align 8
  %50 = getelementptr inbounds %"class.v8::internal::ZoneVector", %"class.v8::internal::ZoneVector"* %26, i64 0, i32 0, i32 0, i32 0
  store %"class.v8::internal::Handle"* %48, %"class.v8::internal::Handle"** %50, align 8
  %51 = getelementptr inbounds %"class.v8::internal::Handle", %"class.v8::internal::Handle"* %48, i64 %31
  %52 = getelementptr inbounds %"class.v8::internal::compiler::PropertyAccessInfo", %"class.v8::internal::compiler::PropertyAccessInfo"* %0, i64 0, i32 1, i32 0, i32 0, i32 2, i32 0, i32 0
  store %"class.v8::internal::Handle"* %51, %"class.v8::internal::Handle"** %52, align 8
  %53 = inttoptr i64 %47 to i64*
  %54 = bitcast %"class.v8::internal::Handle"** %49 to i64*
  %55 = inttoptr i64 %20 to i64*
  %56 = load i64, i64* %55, align 8
  store i64 %56, i64* %53, align 8
  %57 = getelementptr inbounds %"class.v8::internal::Handle", %"class.v8::internal::Handle"* %48, i64 1
  %58 = ptrtoint %"class.v8::internal::Handle"* %57 to i64
  store i64 %58, i64* %54, align 8
  br label %59

59:                                               ; preds = %19, %46
  %60 = getelementptr inbounds %"class.v8::internal::compiler::PropertyAccessInfo", %"class.v8::internal::compiler::PropertyAccessInfo"* %0, i64 0, i32 2, i32 0, i32 0
  store i64* %4, i64** %60, align 8
  %61 = getelementptr inbounds %"class.v8::internal::compiler::PropertyAccessInfo", %"class.v8::internal::compiler::PropertyAccessInfo"* %0, i64 0, i32 3, i32 0
  store i64* %3, i64** %61, align 8
  %62 = getelementptr inbounds %"class.v8::internal::compiler::PropertyAccessInfo", %"class.v8::internal::compiler::PropertyAccessInfo"* %0, i64 0, i32 4
  %63 = getelementptr inbounds %"class.v8::internal::compiler::PropertyAccessInfo", %"class.v8::internal::compiler::PropertyAccessInfo"* %0, i64 0, i32 4, i32 0, i32 0, i32 2, i32 1
  %64 = bitcast %"struct.std::__1::__compressed_pair_elem.27"* %63 to i64*
  %65 = bitcast %"class.v8::internal::ZoneVector.22"* %62 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %65, i8 0, i64 24, i1 false) #8
  store i64 %7, i64* %64, align 8
  %66 = getelementptr inbounds %"class.v8::internal::compiler::PropertyAccessInfo", %"class.v8::internal::compiler::PropertyAccessInfo"* %0, i64 0, i32 5, i32 0
  %67 = getelementptr inbounds %"class.v8::internal::compiler::PropertyAccessInfo", %"class.v8::internal::compiler::PropertyAccessInfo"* %0, i64 0, i32 8, i32 0
  %68 = bitcast i64** %66 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %68, i8 0, i64 17, i1 false) #8
  store i64 4294967295, i64* %67, align 8
  %69 = getelementptr inbounds %"class.v8::internal::compiler::PropertyAccessInfo", %"class.v8::internal::compiler::PropertyAccessInfo"* %0, i64 0, i32 9, i32 0
  %70 = getelementptr inbounds %"class.v8::internal::compiler::PropertyAccessInfo", %"class.v8::internal::compiler::PropertyAccessInfo"* %0, i64 0, i32 11, i32 0
  %71 = bitcast i64** %69 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %71, i8 0, i64 16, i1 false) #8
  store i64 -1, i64* %70, align 8
  %72 = getelementptr inbounds %"class.v8::internal::compiler::PropertyAccessInfo", %"class.v8::internal::compiler::PropertyAccessInfo"* %0, i64 0, i32 12, i32 0
  store i64* %5, i64** %72, align 8
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN2v88internal8compiler33MinimorphicLoadPropertyAccessInfo9DataFieldEibNS0_14RepresentationENS1_4TypeE(%"class.v8::internal::compiler::MinimorphicLoadPropertyAccessInfo"* noalias nocapture sret, i32, i1 zeroext, i8, i64) local_unnamed_addr #3 align 2 {
  %6 = zext i1 %2 to i8
  %7 = getelementptr inbounds %"class.v8::internal::compiler::MinimorphicLoadPropertyAccessInfo", %"class.v8::internal::compiler::MinimorphicLoadPropertyAccessInfo"* %0, i64 0, i32 0
  store i32 1, i32* %7, align 8
  %8 = getelementptr inbounds %"class.v8::internal::compiler::MinimorphicLoadPropertyAccessInfo", %"class.v8::internal::compiler::MinimorphicLoadPropertyAccessInfo"* %0, i64 0, i32 1
  store i8 %6, i8* %8, align 4
  %9 = getelementptr inbounds %"class.v8::internal::compiler::MinimorphicLoadPropertyAccessInfo", %"class.v8::internal::compiler::MinimorphicLoadPropertyAccessInfo"* %0, i64 0, i32 2
  store i32 %1, i32* %9, align 8
  %10 = getelementptr inbounds %"class.v8::internal::compiler::MinimorphicLoadPropertyAccessInfo", %"class.v8::internal::compiler::MinimorphicLoadPropertyAccessInfo"* %0, i64 0, i32 3, i32 0
  store i8 %3, i8* %10, align 4
  %11 = getelementptr inbounds %"class.v8::internal::compiler::MinimorphicLoadPropertyAccessInfo", %"class.v8::internal::compiler::MinimorphicLoadPropertyAccessInfo"* %0, i64 0, i32 4, i32 0
  store i64 %4, i64* %11, align 8
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN2v88internal8compiler33MinimorphicLoadPropertyAccessInfo7InvalidEv(%"class.v8::internal::compiler::MinimorphicLoadPropertyAccessInfo"* noalias nocapture sret) local_unnamed_addr #3 align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::compiler::MinimorphicLoadPropertyAccessInfo", %"class.v8::internal::compiler::MinimorphicLoadPropertyAccessInfo"* %0, i64 0, i32 0
  store i32 0, i32* %2, align 8
  %3 = getelementptr inbounds %"class.v8::internal::compiler::MinimorphicLoadPropertyAccessInfo", %"class.v8::internal::compiler::MinimorphicLoadPropertyAccessInfo"* %0, i64 0, i32 1
  store i8 0, i8* %3, align 4
  %4 = getelementptr inbounds %"class.v8::internal::compiler::MinimorphicLoadPropertyAccessInfo", %"class.v8::internal::compiler::MinimorphicLoadPropertyAccessInfo"* %0, i64 0, i32 2
  store i32 -1, i32* %4, align 8
  %5 = getelementptr inbounds %"class.v8::internal::compiler::MinimorphicLoadPropertyAccessInfo", %"class.v8::internal::compiler::MinimorphicLoadPropertyAccessInfo"* %0, i64 0, i32 3, i32 0
  store i8 0, i8* %5, align 4
  %6 = getelementptr inbounds %"class.v8::internal::compiler::MinimorphicLoadPropertyAccessInfo", %"class.v8::internal::compiler::MinimorphicLoadPropertyAccessInfo"* %0, i64 0, i32 4, i32 0
  store i64 1, i64* %6, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal8compiler18PropertyAccessInfoC2EPNS0_4ZoneE(%"class.v8::internal::compiler::PropertyAccessInfo"* nocapture, %"class.v8::internal::Zone"*) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.v8::internal::compiler::PropertyAccessInfo", %"class.v8::internal::compiler::PropertyAccessInfo"* %0, i64 0, i32 0
  store i32 0, i32* %3, align 8
  %4 = getelementptr inbounds %"class.v8::internal::compiler::PropertyAccessInfo", %"class.v8::internal::compiler::PropertyAccessInfo"* %0, i64 0, i32 1
  %5 = ptrtoint %"class.v8::internal::Zone"* %1 to i64
  %6 = getelementptr inbounds %"class.v8::internal::compiler::PropertyAccessInfo", %"class.v8::internal::compiler::PropertyAccessInfo"* %0, i64 0, i32 1, i32 0, i32 0, i32 2, i32 1
  %7 = bitcast %"struct.std::__1::__compressed_pair_elem.0"* %6 to i64*
  %8 = bitcast %"class.v8::internal::ZoneVector"* %4 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %8, i8 0, i64 24, i1 false) #8
  store i64 %5, i64* %7, align 8
  %9 = getelementptr inbounds %"class.v8::internal::compiler::PropertyAccessInfo", %"class.v8::internal::compiler::PropertyAccessInfo"* %0, i64 0, i32 2, i32 0, i32 0
  %10 = getelementptr inbounds %"class.v8::internal::compiler::PropertyAccessInfo", %"class.v8::internal::compiler::PropertyAccessInfo"* %0, i64 0, i32 4, i32 0, i32 0, i32 2, i32 1
  %11 = bitcast %"struct.std::__1::__compressed_pair_elem.27"* %10 to i64*
  %12 = bitcast i64** %9 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %12, i8 0, i64 40, i1 false)
  store i64 %5, i64* %11, align 8
  %13 = getelementptr inbounds %"class.v8::internal::compiler::PropertyAccessInfo", %"class.v8::internal::compiler::PropertyAccessInfo"* %0, i64 0, i32 5, i32 0
  %14 = getelementptr inbounds %"class.v8::internal::compiler::PropertyAccessInfo", %"class.v8::internal::compiler::PropertyAccessInfo"* %0, i64 0, i32 8, i32 0
  %15 = bitcast i64** %13 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %15, i8 0, i64 17, i1 false)
  store i64 1, i64* %14, align 8
  %16 = getelementptr inbounds %"class.v8::internal::compiler::PropertyAccessInfo", %"class.v8::internal::compiler::PropertyAccessInfo"* %0, i64 0, i32 9, i32 0
  %17 = getelementptr inbounds %"class.v8::internal::compiler::PropertyAccessInfo", %"class.v8::internal::compiler::PropertyAccessInfo"* %0, i64 0, i32 11, i32 0
  %18 = bitcast i64** %16 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %18, i8 0, i64 16, i1 false)
  store i64 -1, i64* %17, align 8
  %19 = getelementptr inbounds %"class.v8::internal::compiler::PropertyAccessInfo", %"class.v8::internal::compiler::PropertyAccessInfo"* %0, i64 0, i32 12, i32 0
  store i64* null, i64** %19, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal8compiler18PropertyAccessInfoC2EPNS0_4ZoneENS2_4KindENS0_11MaybeHandleINS0_8JSObjectEEEONS0_10ZoneVectorINS0_6HandleINS0_3MapEEEEE(%"class.v8::internal::compiler::PropertyAccessInfo"*, %"class.v8::internal::Zone"*, i32, i64*, %"class.v8::internal::ZoneVector"* nocapture readonly dereferenceable(32)) unnamed_addr #0 align 2 {
  %6 = getelementptr inbounds %"class.v8::internal::compiler::PropertyAccessInfo", %"class.v8::internal::compiler::PropertyAccessInfo"* %0, i64 0, i32 0
  store i32 %2, i32* %6, align 8
  %7 = getelementptr inbounds %"class.v8::internal::compiler::PropertyAccessInfo", %"class.v8::internal::compiler::PropertyAccessInfo"* %0, i64 0, i32 1
  %8 = getelementptr inbounds %"class.v8::internal::ZoneVector", %"class.v8::internal::ZoneVector"* %4, i64 0, i32 0, i32 0, i32 2, i32 1, i32 0, i32 0
  %9 = bitcast %"class.v8::internal::Zone"** %8 to i64*
  %10 = load i64, i64* %9, align 8
  %11 = getelementptr inbounds %"class.v8::internal::compiler::PropertyAccessInfo", %"class.v8::internal::compiler::PropertyAccessInfo"* %0, i64 0, i32 1, i32 0, i32 0, i32 2, i32 1
  %12 = bitcast %"struct.std::__1::__compressed_pair_elem.0"* %11 to i64*
  %13 = bitcast %"class.v8::internal::ZoneVector"* %7 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %13, i8 0, i64 24, i1 false) #8
  store i64 %10, i64* %12, align 8
  %14 = getelementptr inbounds %"class.v8::internal::ZoneVector", %"class.v8::internal::ZoneVector"* %4, i64 0, i32 0, i32 0, i32 1
  %15 = bitcast %"class.v8::internal::Handle"** %14 to i64*
  %16 = load i64, i64* %15, align 8
  %17 = bitcast %"class.v8::internal::ZoneVector"* %4 to i64*
  %18 = load i64, i64* %17, align 8
  %19 = sub i64 %16, %18
  %20 = ashr exact i64 %19, 3
  %21 = icmp eq i64 %19, 0
  %22 = inttoptr i64 %10 to %"class.v8::internal::Zone"*
  br i1 %21, label %130, label %23

23:                                               ; preds = %5
  %24 = icmp ugt i64 %20, 268435455
  br i1 %24, label %25, label %27

25:                                               ; preds = %23
  %26 = bitcast %"class.v8::internal::ZoneVector"* %7 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %26) #12
  unreachable

27:                                               ; preds = %23
  %28 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %22, i64 0, i32 2
  %29 = load i64, i64* %28, align 8
  %30 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %22, i64 0, i32 3
  %31 = load i64, i64* %30, align 8
  %32 = sub i64 %31, %29
  %33 = icmp ugt i64 %19, %32
  br i1 %33, label %34, label %36, !prof !2

34:                                               ; preds = %27
  %35 = tail call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %22, i64 %19) #8
  br label %38

36:                                               ; preds = %27
  %37 = add i64 %29, %19
  store i64 %37, i64* %28, align 8
  br label %38

38:                                               ; preds = %36, %34
  %39 = phi i64 [ %35, %34 ], [ %29, %36 ]
  %40 = inttoptr i64 %39 to %"class.v8::internal::Handle"*
  %41 = getelementptr inbounds %"class.v8::internal::compiler::PropertyAccessInfo", %"class.v8::internal::compiler::PropertyAccessInfo"* %0, i64 0, i32 1, i32 0, i32 0, i32 1
  store %"class.v8::internal::Handle"* %40, %"class.v8::internal::Handle"** %41, align 8
  %42 = getelementptr inbounds %"class.v8::internal::ZoneVector", %"class.v8::internal::ZoneVector"* %7, i64 0, i32 0, i32 0, i32 0
  store %"class.v8::internal::Handle"* %40, %"class.v8::internal::Handle"** %42, align 8
  %43 = getelementptr inbounds %"class.v8::internal::Handle", %"class.v8::internal::Handle"* %40, i64 %20
  %44 = getelementptr inbounds %"class.v8::internal::compiler::PropertyAccessInfo", %"class.v8::internal::compiler::PropertyAccessInfo"* %0, i64 0, i32 1, i32 0, i32 0, i32 2, i32 0, i32 0
  store %"class.v8::internal::Handle"* %43, %"class.v8::internal::Handle"** %44, align 8
  %45 = getelementptr inbounds %"class.v8::internal::ZoneVector", %"class.v8::internal::ZoneVector"* %4, i64 0, i32 0, i32 0, i32 0
  %46 = load %"class.v8::internal::Handle"*, %"class.v8::internal::Handle"** %45, align 8
  %47 = load %"class.v8::internal::Handle"*, %"class.v8::internal::Handle"** %14, align 8
  %48 = bitcast %"class.v8::internal::Handle"** %41 to i64*
  %49 = icmp eq %"class.v8::internal::Handle"* %46, %47
  br i1 %49, label %128, label %50

50:                                               ; preds = %38
  %51 = ptrtoint %"class.v8::internal::Handle"* %46 to i64
  %52 = inttoptr i64 %39 to i64*
  %53 = getelementptr %"class.v8::internal::Handle", %"class.v8::internal::Handle"* %47, i64 -1, i32 0, i32 0
  %54 = ptrtoint i64** %53 to i64
  %55 = sub i64 %54, %51
  %56 = lshr i64 %55, 3
  %57 = add nuw nsw i64 %56, 1
  %58 = and i64 %57, 7
  %59 = icmp eq i64 %58, 0
  br i1 %59, label %74, label %60

60:                                               ; preds = %50, %60
  %61 = phi %"class.v8::internal::Handle"* [ %68, %60 ], [ %40, %50 ]
  %62 = phi i64* [ %69, %60 ], [ %52, %50 ]
  %63 = phi %"class.v8::internal::Handle"* [ %67, %60 ], [ %46, %50 ]
  %64 = phi i64 [ %70, %60 ], [ %58, %50 ]
  %65 = bitcast %"class.v8::internal::Handle"* %63 to i64*
  %66 = load i64, i64* %65, align 8
  store i64 %66, i64* %62, align 8
  %67 = getelementptr inbounds %"class.v8::internal::Handle", %"class.v8::internal::Handle"* %63, i64 1
  %68 = getelementptr inbounds %"class.v8::internal::Handle", %"class.v8::internal::Handle"* %61, i64 1
  %69 = bitcast %"class.v8::internal::Handle"* %68 to i64*
  %70 = add i64 %64, -1
  %71 = icmp eq i64 %70, 0
  br i1 %71, label %72, label %60, !llvm.loop !5

72:                                               ; preds = %60
  %73 = bitcast %"class.v8::internal::Handle"* %68 to i64*
  br label %74

74:                                               ; preds = %50, %72
  %75 = phi %"class.v8::internal::Handle"* [ undef, %50 ], [ %68, %72 ]
  %76 = phi %"class.v8::internal::Handle"* [ %40, %50 ], [ %68, %72 ]
  %77 = phi i64* [ %52, %50 ], [ %73, %72 ]
  %78 = phi %"class.v8::internal::Handle"* [ %46, %50 ], [ %67, %72 ]
  %79 = icmp ult i64 %55, 56
  br i1 %79, label %125, label %80

80:                                               ; preds = %74, %80
  %81 = phi %"class.v8::internal::Handle"* [ %122, %80 ], [ %76, %74 ]
  %82 = phi i64* [ %124, %80 ], [ %77, %74 ]
  %83 = phi %"class.v8::internal::Handle"* [ %121, %80 ], [ %78, %74 ]
  %84 = bitcast %"class.v8::internal::Handle"* %83 to i64*
  %85 = load i64, i64* %84, align 8
  store i64 %85, i64* %82, align 8
  %86 = getelementptr inbounds %"class.v8::internal::Handle", %"class.v8::internal::Handle"* %83, i64 1
  %87 = getelementptr inbounds %"class.v8::internal::Handle", %"class.v8::internal::Handle"* %81, i64 1
  %88 = bitcast %"class.v8::internal::Handle"* %87 to i64*
  %89 = bitcast %"class.v8::internal::Handle"* %86 to i64*
  %90 = load i64, i64* %89, align 8
  store i64 %90, i64* %88, align 8
  %91 = getelementptr inbounds %"class.v8::internal::Handle", %"class.v8::internal::Handle"* %83, i64 2
  %92 = getelementptr inbounds %"class.v8::internal::Handle", %"class.v8::internal::Handle"* %81, i64 2
  %93 = bitcast %"class.v8::internal::Handle"* %92 to i64*
  %94 = bitcast %"class.v8::internal::Handle"* %91 to i64*
  %95 = load i64, i64* %94, align 8
  store i64 %95, i64* %93, align 8
  %96 = getelementptr inbounds %"class.v8::internal::Handle", %"class.v8::internal::Handle"* %83, i64 3
  %97 = getelementptr inbounds %"class.v8::internal::Handle", %"class.v8::internal::Handle"* %81, i64 3
  %98 = bitcast %"class.v8::internal::Handle"* %97 to i64*
  %99 = bitcast %"class.v8::internal::Handle"* %96 to i64*
  %100 = load i64, i64* %99, align 8
  store i64 %100, i64* %98, align 8
  %101 = getelementptr inbounds %"class.v8::internal::Handle", %"class.v8::internal::Handle"* %83, i64 4
  %102 = getelementptr inbounds %"class.v8::internal::Handle", %"class.v8::internal::Handle"* %81, i64 4
  %103 = bitcast %"class.v8::internal::Handle"* %102 to i64*
  %104 = bitcast %"class.v8::internal::Handle"* %101 to i64*
  %105 = load i64, i64* %104, align 8
  store i64 %105, i64* %103, align 8
  %106 = getelementptr inbounds %"class.v8::internal::Handle", %"class.v8::internal::Handle"* %83, i64 5
  %107 = getelementptr inbounds %"class.v8::internal::Handle", %"class.v8::internal::Handle"* %81, i64 5
  %108 = bitcast %"class.v8::internal::Handle"* %107 to i64*
  %109 = bitcast %"class.v8::internal::Handle"* %106 to i64*
  %110 = load i64, i64* %109, align 8
  store i64 %110, i64* %108, align 8
  %111 = getelementptr inbounds %"class.v8::internal::Handle", %"class.v8::internal::Handle"* %83, i64 6
  %112 = getelementptr inbounds %"class.v8::internal::Handle", %"class.v8::internal::Handle"* %81, i64 6
  %113 = bitcast %"class.v8::internal::Handle"* %112 to i64*
  %114 = bitcast %"class.v8::internal::Handle"* %111 to i64*
  %115 = load i64, i64* %114, align 8
  store i64 %115, i64* %113, align 8
  %116 = getelementptr inbounds %"class.v8::internal::Handle", %"class.v8::internal::Handle"* %83, i64 7
  %117 = getelementptr inbounds %"class.v8::internal::Handle", %"class.v8::internal::Handle"* %81, i64 7
  %118 = bitcast %"class.v8::internal::Handle"* %117 to i64*
  %119 = bitcast %"class.v8::internal::Handle"* %116 to i64*
  %120 = load i64, i64* %119, align 8
  store i64 %120, i64* %118, align 8
  %121 = getelementptr inbounds %"class.v8::internal::Handle", %"class.v8::internal::Handle"* %83, i64 8
  %122 = getelementptr inbounds %"class.v8::internal::Handle", %"class.v8::internal::Handle"* %81, i64 8
  %123 = icmp eq %"class.v8::internal::Handle"* %121, %47
  %124 = bitcast %"class.v8::internal::Handle"* %122 to i64*
  br i1 %123, label %125, label %80

125:                                              ; preds = %80, %74
  %126 = phi %"class.v8::internal::Handle"* [ %75, %74 ], [ %122, %80 ]
  %127 = ptrtoint %"class.v8::internal::Handle"* %126 to i64
  br label %128

128:                                              ; preds = %125, %38
  %129 = phi i64 [ %39, %38 ], [ %127, %125 ]
  store i64 %129, i64* %48, align 8
  br label %130

130:                                              ; preds = %5, %128
  %131 = getelementptr inbounds %"class.v8::internal::compiler::PropertyAccessInfo", %"class.v8::internal::compiler::PropertyAccessInfo"* %0, i64 0, i32 2, i32 0, i32 0
  store i64* null, i64** %131, align 8
  %132 = getelementptr inbounds %"class.v8::internal::compiler::PropertyAccessInfo", %"class.v8::internal::compiler::PropertyAccessInfo"* %0, i64 0, i32 3, i32 0
  store i64* %3, i64** %132, align 8
  %133 = getelementptr inbounds %"class.v8::internal::compiler::PropertyAccessInfo", %"class.v8::internal::compiler::PropertyAccessInfo"* %0, i64 0, i32 4
  %134 = ptrtoint %"class.v8::internal::Zone"* %1 to i64
  %135 = getelementptr inbounds %"class.v8::internal::compiler::PropertyAccessInfo", %"class.v8::internal::compiler::PropertyAccessInfo"* %0, i64 0, i32 4, i32 0, i32 0, i32 2, i32 1
  %136 = bitcast %"struct.std::__1::__compressed_pair_elem.27"* %135 to i64*
  %137 = bitcast %"class.v8::internal::ZoneVector.22"* %133 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %137, i8 0, i64 24, i1 false) #8
  store i64 %134, i64* %136, align 8
  %138 = getelementptr inbounds %"class.v8::internal::compiler::PropertyAccessInfo", %"class.v8::internal::compiler::PropertyAccessInfo"* %0, i64 0, i32 5, i32 0
  %139 = getelementptr inbounds %"class.v8::internal::compiler::PropertyAccessInfo", %"class.v8::internal::compiler::PropertyAccessInfo"* %0, i64 0, i32 8, i32 0
  %140 = bitcast i64** %138 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %140, i8 0, i64 17, i1 false)
  store i64 1, i64* %139, align 8
  %141 = getelementptr inbounds %"class.v8::internal::compiler::PropertyAccessInfo", %"class.v8::internal::compiler::PropertyAccessInfo"* %0, i64 0, i32 9, i32 0
  %142 = getelementptr inbounds %"class.v8::internal::compiler::PropertyAccessInfo", %"class.v8::internal::compiler::PropertyAccessInfo"* %0, i64 0, i32 11, i32 0
  %143 = bitcast i64** %141 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %143, i8 0, i64 16, i1 false)
  store i64 -1, i64* %142, align 8
  %144 = getelementptr inbounds %"class.v8::internal::compiler::PropertyAccessInfo", %"class.v8::internal::compiler::PropertyAccessInfo"* %0, i64 0, i32 12, i32 0
  store i64* null, i64** %144, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal8compiler18PropertyAccessInfoC2EPNS0_4ZoneENS2_4KindENS0_11MaybeHandleINS0_8JSObjectEEENS0_6HandleINS0_6ObjectEEENS6_INS0_4NameEEEONS0_10ZoneVectorINS9_INS0_3MapEEEEE(%"class.v8::internal::compiler::PropertyAccessInfo"*, %"class.v8::internal::Zone"*, i32, i64*, i64*, i64*, %"class.v8::internal::ZoneVector"* nocapture readonly dereferenceable(32)) unnamed_addr #0 align 2 {
  %8 = getelementptr inbounds %"class.v8::internal::compiler::PropertyAccessInfo", %"class.v8::internal::compiler::PropertyAccessInfo"* %0, i64 0, i32 0
  store i32 %2, i32* %8, align 8
  %9 = getelementptr inbounds %"class.v8::internal::compiler::PropertyAccessInfo", %"class.v8::internal::compiler::PropertyAccessInfo"* %0, i64 0, i32 1
  %10 = getelementptr inbounds %"class.v8::internal::ZoneVector", %"class.v8::internal::ZoneVector"* %6, i64 0, i32 0, i32 0, i32 2, i32 1, i32 0, i32 0
  %11 = bitcast %"class.v8::internal::Zone"** %10 to i64*
  %12 = load i64, i64* %11, align 8
  %13 = getelementptr inbounds %"class.v8::internal::compiler::PropertyAccessInfo", %"class.v8::internal::compiler::PropertyAccessInfo"* %0, i64 0, i32 1, i32 0, i32 0, i32 2, i32 1
  %14 = bitcast %"struct.std::__1::__compressed_pair_elem.0"* %13 to i64*
  %15 = bitcast %"class.v8::internal::ZoneVector"* %9 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %15, i8 0, i64 24, i1 false) #8
  store i64 %12, i64* %14, align 8
  %16 = getelementptr inbounds %"class.v8::internal::ZoneVector", %"class.v8::internal::ZoneVector"* %6, i64 0, i32 0, i32 0, i32 1
  %17 = bitcast %"class.v8::internal::Handle"** %16 to i64*
  %18 = load i64, i64* %17, align 8
  %19 = bitcast %"class.v8::internal::ZoneVector"* %6 to i64*
  %20 = load i64, i64* %19, align 8
  %21 = sub i64 %18, %20
  %22 = ashr exact i64 %21, 3
  %23 = icmp eq i64 %21, 0
  %24 = inttoptr i64 %12 to %"class.v8::internal::Zone"*
  br i1 %23, label %132, label %25

25:                                               ; preds = %7
  %26 = icmp ugt i64 %22, 268435455
  br i1 %26, label %27, label %29

27:                                               ; preds = %25
  %28 = bitcast %"class.v8::internal::ZoneVector"* %9 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %28) #12
  unreachable

29:                                               ; preds = %25
  %30 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %24, i64 0, i32 2
  %31 = load i64, i64* %30, align 8
  %32 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %24, i64 0, i32 3
  %33 = load i64, i64* %32, align 8
  %34 = sub i64 %33, %31
  %35 = icmp ugt i64 %21, %34
  br i1 %35, label %36, label %38, !prof !2

36:                                               ; preds = %29
  %37 = tail call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %24, i64 %21) #8
  br label %40

38:                                               ; preds = %29
  %39 = add i64 %31, %21
  store i64 %39, i64* %30, align 8
  br label %40

40:                                               ; preds = %38, %36
  %41 = phi i64 [ %37, %36 ], [ %31, %38 ]
  %42 = inttoptr i64 %41 to %"class.v8::internal::Handle"*
  %43 = getelementptr inbounds %"class.v8::internal::compiler::PropertyAccessInfo", %"class.v8::internal::compiler::PropertyAccessInfo"* %0, i64 0, i32 1, i32 0, i32 0, i32 1
  store %"class.v8::internal::Handle"* %42, %"class.v8::internal::Handle"** %43, align 8
  %44 = getelementptr inbounds %"class.v8::internal::ZoneVector", %"class.v8::internal::ZoneVector"* %9, i64 0, i32 0, i32 0, i32 0
  store %"class.v8::internal::Handle"* %42, %"class.v8::internal::Handle"** %44, align 8
  %45 = getelementptr inbounds %"class.v8::internal::Handle", %"class.v8::internal::Handle"* %42, i64 %22
  %46 = getelementptr inbounds %"class.v8::internal::compiler::PropertyAccessInfo", %"class.v8::internal::compiler::PropertyAccessInfo"* %0, i64 0, i32 1, i32 0, i32 0, i32 2, i32 0, i32 0
  store %"class.v8::internal::Handle"* %45, %"class.v8::internal::Handle"** %46, align 8
  %47 = getelementptr inbounds %"class.v8::internal::ZoneVector", %"class.v8::internal::ZoneVector"* %6, i64 0, i32 0, i32 0, i32 0
  %48 = load %"class.v8::internal::Handle"*, %"class.v8::internal::Handle"** %47, align 8
  %49 = load %"class.v8::internal::Handle"*, %"class.v8::internal::Handle"** %16, align 8
  %50 = bitcast %"class.v8::internal::Handle"** %43 to i64*
  %51 = icmp eq %"class.v8::internal::Handle"* %48, %49
  br i1 %51, label %130, label %52

52:                                               ; preds = %40
  %53 = ptrtoint %"class.v8::internal::Handle"* %48 to i64
  %54 = inttoptr i64 %41 to i64*
  %55 = getelementptr %"class.v8::internal::Handle", %"class.v8::internal::Handle"* %49, i64 -1, i32 0, i32 0
  %56 = ptrtoint i64** %55 to i64
  %57 = sub i64 %56, %53
  %58 = lshr i64 %57, 3
  %59 = add nuw nsw i64 %58, 1
  %60 = and i64 %59, 7
  %61 = icmp eq i64 %60, 0
  br i1 %61, label %76, label %62

62:                                               ; preds = %52, %62
  %63 = phi %"class.v8::internal::Handle"* [ %70, %62 ], [ %42, %52 ]
  %64 = phi i64* [ %71, %62 ], [ %54, %52 ]
  %65 = phi %"class.v8::internal::Handle"* [ %69, %62 ], [ %48, %52 ]
  %66 = phi i64 [ %72, %62 ], [ %60, %52 ]
  %67 = bitcast %"class.v8::internal::Handle"* %65 to i64*
  %68 = load i64, i64* %67, align 8
  store i64 %68, i64* %64, align 8
  %69 = getelementptr inbounds %"class.v8::internal::Handle", %"class.v8::internal::Handle"* %65, i64 1
  %70 = getelementptr inbounds %"class.v8::internal::Handle", %"class.v8::internal::Handle"* %63, i64 1
  %71 = bitcast %"class.v8::internal::Handle"* %70 to i64*
  %72 = add i64 %66, -1
  %73 = icmp eq i64 %72, 0
  br i1 %73, label %74, label %62, !llvm.loop !6

74:                                               ; preds = %62
  %75 = bitcast %"class.v8::internal::Handle"* %70 to i64*
  br label %76

76:                                               ; preds = %52, %74
  %77 = phi %"class.v8::internal::Handle"* [ undef, %52 ], [ %70, %74 ]
  %78 = phi %"class.v8::internal::Handle"* [ %42, %52 ], [ %70, %74 ]
  %79 = phi i64* [ %54, %52 ], [ %75, %74 ]
  %80 = phi %"class.v8::internal::Handle"* [ %48, %52 ], [ %69, %74 ]
  %81 = icmp ult i64 %57, 56
  br i1 %81, label %127, label %82

82:                                               ; preds = %76, %82
  %83 = phi %"class.v8::internal::Handle"* [ %124, %82 ], [ %78, %76 ]
  %84 = phi i64* [ %126, %82 ], [ %79, %76 ]
  %85 = phi %"class.v8::internal::Handle"* [ %123, %82 ], [ %80, %76 ]
  %86 = bitcast %"class.v8::internal::Handle"* %85 to i64*
  %87 = load i64, i64* %86, align 8
  store i64 %87, i64* %84, align 8
  %88 = getelementptr inbounds %"class.v8::internal::Handle", %"class.v8::internal::Handle"* %85, i64 1
  %89 = getelementptr inbounds %"class.v8::internal::Handle", %"class.v8::internal::Handle"* %83, i64 1
  %90 = bitcast %"class.v8::internal::Handle"* %89 to i64*
  %91 = bitcast %"class.v8::internal::Handle"* %88 to i64*
  %92 = load i64, i64* %91, align 8
  store i64 %92, i64* %90, align 8
  %93 = getelementptr inbounds %"class.v8::internal::Handle", %"class.v8::internal::Handle"* %85, i64 2
  %94 = getelementptr inbounds %"class.v8::internal::Handle", %"class.v8::internal::Handle"* %83, i64 2
  %95 = bitcast %"class.v8::internal::Handle"* %94 to i64*
  %96 = bitcast %"class.v8::internal::Handle"* %93 to i64*
  %97 = load i64, i64* %96, align 8
  store i64 %97, i64* %95, align 8
  %98 = getelementptr inbounds %"class.v8::internal::Handle", %"class.v8::internal::Handle"* %85, i64 3
  %99 = getelementptr inbounds %"class.v8::internal::Handle", %"class.v8::internal::Handle"* %83, i64 3
  %100 = bitcast %"class.v8::internal::Handle"* %99 to i64*
  %101 = bitcast %"class.v8::internal::Handle"* %98 to i64*
  %102 = load i64, i64* %101, align 8
  store i64 %102, i64* %100, align 8
  %103 = getelementptr inbounds %"class.v8::internal::Handle", %"class.v8::internal::Handle"* %85, i64 4
  %104 = getelementptr inbounds %"class.v8::internal::Handle", %"class.v8::internal::Handle"* %83, i64 4
  %105 = bitcast %"class.v8::internal::Handle"* %104 to i64*
  %106 = bitcast %"class.v8::internal::Handle"* %103 to i64*
  %107 = load i64, i64* %106, align 8
  store i64 %107, i64* %105, align 8
  %108 = getelementptr inbounds %"class.v8::internal::Handle", %"class.v8::internal::Handle"* %85, i64 5
  %109 = getelementptr inbounds %"class.v8::internal::Handle", %"class.v8::internal::Handle"* %83, i64 5
  %110 = bitcast %"class.v8::internal::Handle"* %109 to i64*
  %111 = bitcast %"class.v8::internal::Handle"* %108 to i64*
  %112 = load i64, i64* %111, align 8
  store i64 %112, i64* %110, align 8
  %113 = getelementptr inbounds %"class.v8::internal::Handle", %"class.v8::internal::Handle"* %85, i64 6
  %114 = getelementptr inbounds %"class.v8::internal::Handle", %"class.v8::internal::Handle"* %83, i64 6
  %115 = bitcast %"class.v8::internal::Handle"* %114 to i64*
  %116 = bitcast %"class.v8::internal::Handle"* %113 to i64*
  %117 = load i64, i64* %116, align 8
  store i64 %117, i64* %115, align 8
  %118 = getelementptr inbounds %"class.v8::internal::Handle", %"class.v8::internal::Handle"* %85, i64 7
  %119 = getelementptr inbounds %"class.v8::internal::Handle", %"class.v8::internal::Handle"* %83, i64 7
  %120 = bitcast %"class.v8::internal::Handle"* %119 to i64*
  %121 = bitcast %"class.v8::internal::Handle"* %118 to i64*
  %122 = load i64, i64* %121, align 8
  store i64 %122, i64* %120, align 8
  %123 = getelementptr inbounds %"class.v8::internal::Handle", %"class.v8::internal::Handle"* %85, i64 8
  %124 = getelementptr inbounds %"class.v8::internal::Handle", %"class.v8::internal::Handle"* %83, i64 8
  %125 = icmp eq %"class.v8::internal::Handle"* %123, %49
  %126 = bitcast %"class.v8::internal::Handle"* %124 to i64*
  br i1 %125, label %127, label %82

127:                                              ; preds = %82, %76
  %128 = phi %"class.v8::internal::Handle"* [ %77, %76 ], [ %124, %82 ]
  %129 = ptrtoint %"class.v8::internal::Handle"* %128 to i64
  br label %130

130:                                              ; preds = %127, %40
  %131 = phi i64 [ %41, %40 ], [ %129, %127 ]
  store i64 %131, i64* %50, align 8
  br label %132

132:                                              ; preds = %7, %130
  %133 = getelementptr inbounds %"class.v8::internal::compiler::PropertyAccessInfo", %"class.v8::internal::compiler::PropertyAccessInfo"* %0, i64 0, i32 2, i32 0, i32 0
  store i64* %4, i64** %133, align 8
  %134 = getelementptr inbounds %"class.v8::internal::compiler::PropertyAccessInfo", %"class.v8::internal::compiler::PropertyAccessInfo"* %0, i64 0, i32 3, i32 0
  store i64* %3, i64** %134, align 8
  %135 = getelementptr inbounds %"class.v8::internal::compiler::PropertyAccessInfo", %"class.v8::internal::compiler::PropertyAccessInfo"* %0, i64 0, i32 4
  %136 = ptrtoint %"class.v8::internal::Zone"* %1 to i64
  %137 = getelementptr inbounds %"class.v8::internal::compiler::PropertyAccessInfo", %"class.v8::internal::compiler::PropertyAccessInfo"* %0, i64 0, i32 4, i32 0, i32 0, i32 2, i32 1
  %138 = bitcast %"struct.std::__1::__compressed_pair_elem.27"* %137 to i64*
  %139 = bitcast %"class.v8::internal::ZoneVector.22"* %135 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %139, i8 0, i64 24, i1 false) #8
  store i64 %136, i64* %138, align 8
  %140 = getelementptr inbounds %"class.v8::internal::compiler::PropertyAccessInfo", %"class.v8::internal::compiler::PropertyAccessInfo"* %0, i64 0, i32 5, i32 0
  %141 = getelementptr inbounds %"class.v8::internal::compiler::PropertyAccessInfo", %"class.v8::internal::compiler::PropertyAccessInfo"* %0, i64 0, i32 8, i32 0
  %142 = bitcast i64** %140 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %142, i8 0, i64 17, i1 false)
  store i64 4294967295, i64* %141, align 8
  %143 = getelementptr inbounds %"class.v8::internal::compiler::PropertyAccessInfo", %"class.v8::internal::compiler::PropertyAccessInfo"* %0, i64 0, i32 9, i32 0
  %144 = getelementptr inbounds %"class.v8::internal::compiler::PropertyAccessInfo", %"class.v8::internal::compiler::PropertyAccessInfo"* %0, i64 0, i32 11, i32 0
  %145 = bitcast i64** %143 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %145, i8 0, i64 16, i1 false)
  store i64 -1, i64* %144, align 8
  %146 = getelementptr inbounds %"class.v8::internal::compiler::PropertyAccessInfo", %"class.v8::internal::compiler::PropertyAccessInfo"* %0, i64 0, i32 12, i32 0
  store i64* %5, i64** %146, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal8compiler18PropertyAccessInfoC2ENS2_4KindENS0_11MaybeHandleINS0_8JSObjectEEENS4_INS0_3MapEEENS0_10FieldIndexENS0_14RepresentationENS1_4TypeENS0_6HandleIS7_EES8_ONS0_10ZoneVectorISD_EEONSE_IPKNS1_21CompilationDependencyEEE(%"class.v8::internal::compiler::PropertyAccessInfo"*, i32, i64*, i64*, i64, i8, i64, i64, i64, %"class.v8::internal::ZoneVector"* nocapture readonly dereferenceable(32), %"class.v8::internal::ZoneVector.22"* nocapture dereferenceable(32)) unnamed_addr #0 align 2 {
  %12 = inttoptr i64 %7 to i64*
  %13 = inttoptr i64 %8 to i64*
  %14 = getelementptr inbounds %"class.v8::internal::compiler::PropertyAccessInfo", %"class.v8::internal::compiler::PropertyAccessInfo"* %0, i64 0, i32 0
  store i32 %1, i32* %14, align 8
  %15 = getelementptr inbounds %"class.v8::internal::compiler::PropertyAccessInfo", %"class.v8::internal::compiler::PropertyAccessInfo"* %0, i64 0, i32 1
  %16 = getelementptr inbounds %"class.v8::internal::ZoneVector", %"class.v8::internal::ZoneVector"* %9, i64 0, i32 0, i32 0, i32 2, i32 1, i32 0, i32 0
  %17 = bitcast %"class.v8::internal::Zone"** %16 to i64*
  %18 = load i64, i64* %17, align 8
  %19 = getelementptr inbounds %"class.v8::internal::compiler::PropertyAccessInfo", %"class.v8::internal::compiler::PropertyAccessInfo"* %0, i64 0, i32 1, i32 0, i32 0, i32 2, i32 1
  %20 = bitcast %"struct.std::__1::__compressed_pair_elem.0"* %19 to i64*
  %21 = bitcast %"class.v8::internal::ZoneVector"* %15 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %21, i8 0, i64 24, i1 false) #8
  store i64 %18, i64* %20, align 8
  %22 = getelementptr inbounds %"class.v8::internal::ZoneVector", %"class.v8::internal::ZoneVector"* %9, i64 0, i32 0, i32 0, i32 1
  %23 = bitcast %"class.v8::internal::Handle"** %22 to i64*
  %24 = load i64, i64* %23, align 8
  %25 = bitcast %"class.v8::internal::ZoneVector"* %9 to i64*
  %26 = load i64, i64* %25, align 8
  %27 = sub i64 %24, %26
  %28 = ashr exact i64 %27, 3
  %29 = icmp eq i64 %27, 0
  %30 = inttoptr i64 %18 to %"class.v8::internal::Zone"*
  br i1 %29, label %138, label %31

31:                                               ; preds = %11
  %32 = icmp ugt i64 %28, 268435455
  br i1 %32, label %33, label %35

33:                                               ; preds = %31
  %34 = bitcast %"class.v8::internal::ZoneVector"* %15 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %34) #12
  unreachable

35:                                               ; preds = %31
  %36 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %30, i64 0, i32 2
  %37 = load i64, i64* %36, align 8
  %38 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %30, i64 0, i32 3
  %39 = load i64, i64* %38, align 8
  %40 = sub i64 %39, %37
  %41 = icmp ugt i64 %27, %40
  br i1 %41, label %42, label %44, !prof !2

42:                                               ; preds = %35
  %43 = tail call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %30, i64 %27) #8
  br label %46

44:                                               ; preds = %35
  %45 = add i64 %37, %27
  store i64 %45, i64* %36, align 8
  br label %46

46:                                               ; preds = %44, %42
  %47 = phi i64 [ %43, %42 ], [ %37, %44 ]
  %48 = inttoptr i64 %47 to %"class.v8::internal::Handle"*
  %49 = getelementptr inbounds %"class.v8::internal::compiler::PropertyAccessInfo", %"class.v8::internal::compiler::PropertyAccessInfo"* %0, i64 0, i32 1, i32 0, i32 0, i32 1
  store %"class.v8::internal::Handle"* %48, %"class.v8::internal::Handle"** %49, align 8
  %50 = getelementptr inbounds %"class.v8::internal::ZoneVector", %"class.v8::internal::ZoneVector"* %15, i64 0, i32 0, i32 0, i32 0
  store %"class.v8::internal::Handle"* %48, %"class.v8::internal::Handle"** %50, align 8
  %51 = getelementptr inbounds %"class.v8::internal::Handle", %"class.v8::internal::Handle"* %48, i64 %28
  %52 = getelementptr inbounds %"class.v8::internal::compiler::PropertyAccessInfo", %"class.v8::internal::compiler::PropertyAccessInfo"* %0, i64 0, i32 1, i32 0, i32 0, i32 2, i32 0, i32 0
  store %"class.v8::internal::Handle"* %51, %"class.v8::internal::Handle"** %52, align 8
  %53 = getelementptr inbounds %"class.v8::internal::ZoneVector", %"class.v8::internal::ZoneVector"* %9, i64 0, i32 0, i32 0, i32 0
  %54 = load %"class.v8::internal::Handle"*, %"class.v8::internal::Handle"** %53, align 8
  %55 = load %"class.v8::internal::Handle"*, %"class.v8::internal::Handle"** %22, align 8
  %56 = bitcast %"class.v8::internal::Handle"** %49 to i64*
  %57 = icmp eq %"class.v8::internal::Handle"* %54, %55
  br i1 %57, label %136, label %58

58:                                               ; preds = %46
  %59 = ptrtoint %"class.v8::internal::Handle"* %54 to i64
  %60 = inttoptr i64 %47 to i64*
  %61 = getelementptr %"class.v8::internal::Handle", %"class.v8::internal::Handle"* %55, i64 -1, i32 0, i32 0
  %62 = ptrtoint i64** %61 to i64
  %63 = sub i64 %62, %59
  %64 = lshr i64 %63, 3
  %65 = add nuw nsw i64 %64, 1
  %66 = and i64 %65, 7
  %67 = icmp eq i64 %66, 0
  br i1 %67, label %82, label %68

68:                                               ; preds = %58, %68
  %69 = phi %"class.v8::internal::Handle"* [ %76, %68 ], [ %48, %58 ]
  %70 = phi i64* [ %77, %68 ], [ %60, %58 ]
  %71 = phi %"class.v8::internal::Handle"* [ %75, %68 ], [ %54, %58 ]
  %72 = phi i64 [ %78, %68 ], [ %66, %58 ]
  %73 = bitcast %"class.v8::internal::Handle"* %71 to i64*
  %74 = load i64, i64* %73, align 8
  store i64 %74, i64* %70, align 8
  %75 = getelementptr inbounds %"class.v8::internal::Handle", %"class.v8::internal::Handle"* %71, i64 1
  %76 = getelementptr inbounds %"class.v8::internal::Handle", %"class.v8::internal::Handle"* %69, i64 1
  %77 = bitcast %"class.v8::internal::Handle"* %76 to i64*
  %78 = add i64 %72, -1
  %79 = icmp eq i64 %78, 0
  br i1 %79, label %80, label %68, !llvm.loop !7

80:                                               ; preds = %68
  %81 = bitcast %"class.v8::internal::Handle"* %76 to i64*
  br label %82

82:                                               ; preds = %58, %80
  %83 = phi %"class.v8::internal::Handle"* [ undef, %58 ], [ %76, %80 ]
  %84 = phi %"class.v8::internal::Handle"* [ %48, %58 ], [ %76, %80 ]
  %85 = phi i64* [ %60, %58 ], [ %81, %80 ]
  %86 = phi %"class.v8::internal::Handle"* [ %54, %58 ], [ %75, %80 ]
  %87 = icmp ult i64 %63, 56
  br i1 %87, label %133, label %88

88:                                               ; preds = %82, %88
  %89 = phi %"class.v8::internal::Handle"* [ %130, %88 ], [ %84, %82 ]
  %90 = phi i64* [ %132, %88 ], [ %85, %82 ]
  %91 = phi %"class.v8::internal::Handle"* [ %129, %88 ], [ %86, %82 ]
  %92 = bitcast %"class.v8::internal::Handle"* %91 to i64*
  %93 = load i64, i64* %92, align 8
  store i64 %93, i64* %90, align 8
  %94 = getelementptr inbounds %"class.v8::internal::Handle", %"class.v8::internal::Handle"* %91, i64 1
  %95 = getelementptr inbounds %"class.v8::internal::Handle", %"class.v8::internal::Handle"* %89, i64 1
  %96 = bitcast %"class.v8::internal::Handle"* %95 to i64*
  %97 = bitcast %"class.v8::internal::Handle"* %94 to i64*
  %98 = load i64, i64* %97, align 8
  store i64 %98, i64* %96, align 8
  %99 = getelementptr inbounds %"class.v8::internal::Handle", %"class.v8::internal::Handle"* %91, i64 2
  %100 = getelementptr inbounds %"class.v8::internal::Handle", %"class.v8::internal::Handle"* %89, i64 2
  %101 = bitcast %"class.v8::internal::Handle"* %100 to i64*
  %102 = bitcast %"class.v8::internal::Handle"* %99 to i64*
  %103 = load i64, i64* %102, align 8
  store i64 %103, i64* %101, align 8
  %104 = getelementptr inbounds %"class.v8::internal::Handle", %"class.v8::internal::Handle"* %91, i64 3
  %105 = getelementptr inbounds %"class.v8::internal::Handle", %"class.v8::internal::Handle"* %89, i64 3
  %106 = bitcast %"class.v8::internal::Handle"* %105 to i64*
  %107 = bitcast %"class.v8::internal::Handle"* %104 to i64*
  %108 = load i64, i64* %107, align 8
  store i64 %108, i64* %106, align 8
  %109 = getelementptr inbounds %"class.v8::internal::Handle", %"class.v8::internal::Handle"* %91, i64 4
  %110 = getelementptr inbounds %"class.v8::internal::Handle", %"class.v8::internal::Handle"* %89, i64 4
  %111 = bitcast %"class.v8::internal::Handle"* %110 to i64*
  %112 = bitcast %"class.v8::internal::Handle"* %109 to i64*
  %113 = load i64, i64* %112, align 8
  store i64 %113, i64* %111, align 8
  %114 = getelementptr inbounds %"class.v8::internal::Handle", %"class.v8::internal::Handle"* %91, i64 5
  %115 = getelementptr inbounds %"class.v8::internal::Handle", %"class.v8::internal::Handle"* %89, i64 5
  %116 = bitcast %"class.v8::internal::Handle"* %115 to i64*
  %117 = bitcast %"class.v8::internal::Handle"* %114 to i64*
  %118 = load i64, i64* %117, align 8
  store i64 %118, i64* %116, align 8
  %119 = getelementptr inbounds %"class.v8::internal::Handle", %"class.v8::internal::Handle"* %91, i64 6
  %120 = getelementptr inbounds %"class.v8::internal::Handle", %"class.v8::internal::Handle"* %89, i64 6
  %121 = bitcast %"class.v8::internal::Handle"* %120 to i64*
  %122 = bitcast %"class.v8::internal::Handle"* %119 to i64*
  %123 = load i64, i64* %122, align 8
  store i64 %123, i64* %121, align 8
  %124 = getelementptr inbounds %"class.v8::internal::Handle", %"class.v8::internal::Handle"* %91, i64 7
  %125 = getelementptr inbounds %"class.v8::internal::Handle", %"class.v8::internal::Handle"* %89, i64 7
  %126 = bitcast %"class.v8::internal::Handle"* %125 to i64*
  %127 = bitcast %"class.v8::internal::Handle"* %124 to i64*
  %128 = load i64, i64* %127, align 8
  store i64 %128, i64* %126, align 8
  %129 = getelementptr inbounds %"class.v8::internal::Handle", %"class.v8::internal::Handle"* %91, i64 8
  %130 = getelementptr inbounds %"class.v8::internal::Handle", %"class.v8::internal::Handle"* %89, i64 8
  %131 = icmp eq %"class.v8::internal::Handle"* %129, %55
  %132 = bitcast %"class.v8::internal::Handle"* %130 to i64*
  br i1 %131, label %133, label %88

133:                                              ; preds = %88, %82
  %134 = phi %"class.v8::internal::Handle"* [ %83, %82 ], [ %130, %88 ]
  %135 = ptrtoint %"class.v8::internal::Handle"* %134 to i64
  br label %136

136:                                              ; preds = %133, %46
  %137 = phi i64 [ %47, %46 ], [ %135, %133 ]
  store i64 %137, i64* %56, align 8
  br label %138

138:                                              ; preds = %11, %136
  %139 = getelementptr inbounds %"class.v8::internal::compiler::PropertyAccessInfo", %"class.v8::internal::compiler::PropertyAccessInfo"* %0, i64 0, i32 2, i32 0, i32 0
  store i64* null, i64** %139, align 8
  %140 = getelementptr inbounds %"class.v8::internal::compiler::PropertyAccessInfo", %"class.v8::internal::compiler::PropertyAccessInfo"* %0, i64 0, i32 3, i32 0
  store i64* %2, i64** %140, align 8
  %141 = getelementptr inbounds %"class.v8::internal::compiler::PropertyAccessInfo", %"class.v8::internal::compiler::PropertyAccessInfo"* %0, i64 0, i32 4
  %142 = getelementptr inbounds %"class.v8::internal::ZoneVector.22", %"class.v8::internal::ZoneVector.22"* %10, i64 0, i32 0, i32 0, i32 2, i32 1, i32 0
  %143 = getelementptr inbounds %"class.v8::internal::compiler::PropertyAccessInfo", %"class.v8::internal::compiler::PropertyAccessInfo"* %0, i64 0, i32 4, i32 0, i32 0, i32 2, i32 1
  %144 = bitcast %"class.v8::internal::ZoneAllocator.28"* %142 to i64*
  %145 = bitcast %"struct.std::__1::__compressed_pair_elem.27"* %143 to i64*
  %146 = bitcast %"class.v8::internal::ZoneVector.22"* %141 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %146, i8 0, i64 24, i1 false) #8
  %147 = load i64, i64* %144, align 8
  store i64 %147, i64* %145, align 8
  %148 = bitcast %"class.v8::internal::ZoneVector.22"* %10 to i64*
  %149 = load i64, i64* %148, align 8
  %150 = bitcast %"class.v8::internal::ZoneVector.22"* %141 to i64*
  store i64 %149, i64* %150, align 8
  %151 = getelementptr inbounds %"class.v8::internal::ZoneVector.22", %"class.v8::internal::ZoneVector.22"* %10, i64 0, i32 0, i32 0, i32 1
  %152 = bitcast %"class.v8::internal::compiler::CompilationDependency"*** %151 to i64*
  %153 = load i64, i64* %152, align 8
  %154 = getelementptr inbounds %"class.v8::internal::compiler::PropertyAccessInfo", %"class.v8::internal::compiler::PropertyAccessInfo"* %0, i64 0, i32 4, i32 0, i32 0, i32 1
  %155 = bitcast %"class.v8::internal::compiler::CompilationDependency"*** %154 to i64*
  store i64 %153, i64* %155, align 8
  %156 = getelementptr inbounds %"class.v8::internal::ZoneVector.22", %"class.v8::internal::ZoneVector.22"* %10, i64 0, i32 0, i32 0, i32 2, i32 0, i32 0
  %157 = bitcast %"class.v8::internal::compiler::CompilationDependency"*** %156 to i64*
  %158 = load i64, i64* %157, align 8
  %159 = getelementptr inbounds %"class.v8::internal::compiler::PropertyAccessInfo", %"class.v8::internal::compiler::PropertyAccessInfo"* %0, i64 0, i32 4, i32 0, i32 0, i32 2, i32 0, i32 0
  %160 = bitcast %"class.v8::internal::compiler::CompilationDependency"*** %159 to i64*
  store i64 %158, i64* %160, align 8
  %161 = bitcast %"class.v8::internal::ZoneVector.22"* %10 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %161, i8 0, i64 24, i1 false) #8
  %162 = getelementptr inbounds %"class.v8::internal::compiler::PropertyAccessInfo", %"class.v8::internal::compiler::PropertyAccessInfo"* %0, i64 0, i32 5, i32 0
  store i64* %3, i64** %162, align 8
  %163 = getelementptr inbounds %"class.v8::internal::compiler::PropertyAccessInfo", %"class.v8::internal::compiler::PropertyAccessInfo"* %0, i64 0, i32 6, i32 0
  store i64 %4, i64* %163, align 8
  %164 = getelementptr inbounds %"class.v8::internal::compiler::PropertyAccessInfo", %"class.v8::internal::compiler::PropertyAccessInfo"* %0, i64 0, i32 7, i32 0
  store i8 %5, i8* %164, align 8
  %165 = getelementptr inbounds %"class.v8::internal::compiler::PropertyAccessInfo", %"class.v8::internal::compiler::PropertyAccessInfo"* %0, i64 0, i32 8, i32 0
  store i64 %6, i64* %165, align 8
  %166 = getelementptr inbounds %"class.v8::internal::compiler::PropertyAccessInfo", %"class.v8::internal::compiler::PropertyAccessInfo"* %0, i64 0, i32 9, i32 0
  store i64* %12, i64** %166, align 8
  %167 = getelementptr inbounds %"class.v8::internal::compiler::PropertyAccessInfo", %"class.v8::internal::compiler::PropertyAccessInfo"* %0, i64 0, i32 10, i32 0
  store i64* %13, i64** %167, align 8
  %168 = getelementptr inbounds %"class.v8::internal::compiler::PropertyAccessInfo", %"class.v8::internal::compiler::PropertyAccessInfo"* %0, i64 0, i32 11, i32 0
  store i64 -1, i64* %168, align 8
  %169 = getelementptr inbounds %"class.v8::internal::compiler::PropertyAccessInfo", %"class.v8::internal::compiler::PropertyAccessInfo"* %0, i64 0, i32 12, i32 0
  store i64* null, i64** %169, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal8compiler18PropertyAccessInfoC2EPNS0_4ZoneENS2_4KindENS0_11MaybeHandleINS0_8JSObjectEEEONS0_10ZoneVectorINS0_6HandleINS0_3MapEEEEENS0_13InternalIndexENSA_INS0_4NameEEE(%"class.v8::internal::compiler::PropertyAccessInfo"*, %"class.v8::internal::Zone"*, i32, i64*, %"class.v8::internal::ZoneVector"* nocapture readonly dereferenceable(32), i64, i64) unnamed_addr #0 align 2 {
  %8 = inttoptr i64 %6 to i64*
  %9 = getelementptr inbounds %"class.v8::internal::compiler::PropertyAccessInfo", %"class.v8::internal::compiler::PropertyAccessInfo"* %0, i64 0, i32 0
  store i32 %2, i32* %9, align 8
  %10 = getelementptr inbounds %"class.v8::internal::compiler::PropertyAccessInfo", %"class.v8::internal::compiler::PropertyAccessInfo"* %0, i64 0, i32 1
  %11 = getelementptr inbounds %"class.v8::internal::ZoneVector", %"class.v8::internal::ZoneVector"* %4, i64 0, i32 0, i32 0, i32 2, i32 1, i32 0, i32 0
  %12 = bitcast %"class.v8::internal::Zone"** %11 to i64*
  %13 = load i64, i64* %12, align 8
  %14 = getelementptr inbounds %"class.v8::internal::compiler::PropertyAccessInfo", %"class.v8::internal::compiler::PropertyAccessInfo"* %0, i64 0, i32 1, i32 0, i32 0, i32 2, i32 1
  %15 = bitcast %"struct.std::__1::__compressed_pair_elem.0"* %14 to i64*
  %16 = bitcast %"class.v8::internal::ZoneVector"* %10 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %16, i8 0, i64 24, i1 false) #8
  store i64 %13, i64* %15, align 8
  %17 = getelementptr inbounds %"class.v8::internal::ZoneVector", %"class.v8::internal::ZoneVector"* %4, i64 0, i32 0, i32 0, i32 1
  %18 = bitcast %"class.v8::internal::Handle"** %17 to i64*
  %19 = load i64, i64* %18, align 8
  %20 = bitcast %"class.v8::internal::ZoneVector"* %4 to i64*
  %21 = load i64, i64* %20, align 8
  %22 = sub i64 %19, %21
  %23 = ashr exact i64 %22, 3
  %24 = icmp eq i64 %22, 0
  %25 = inttoptr i64 %13 to %"class.v8::internal::Zone"*
  br i1 %24, label %133, label %26

26:                                               ; preds = %7
  %27 = icmp ugt i64 %23, 268435455
  br i1 %27, label %28, label %30

28:                                               ; preds = %26
  %29 = bitcast %"class.v8::internal::ZoneVector"* %10 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %29) #12
  unreachable

30:                                               ; preds = %26
  %31 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %25, i64 0, i32 2
  %32 = load i64, i64* %31, align 8
  %33 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %25, i64 0, i32 3
  %34 = load i64, i64* %33, align 8
  %35 = sub i64 %34, %32
  %36 = icmp ugt i64 %22, %35
  br i1 %36, label %37, label %39, !prof !2

37:                                               ; preds = %30
  %38 = tail call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %25, i64 %22) #8
  br label %41

39:                                               ; preds = %30
  %40 = add i64 %32, %22
  store i64 %40, i64* %31, align 8
  br label %41

41:                                               ; preds = %39, %37
  %42 = phi i64 [ %38, %37 ], [ %32, %39 ]
  %43 = inttoptr i64 %42 to %"class.v8::internal::Handle"*
  %44 = getelementptr inbounds %"class.v8::internal::compiler::PropertyAccessInfo", %"class.v8::internal::compiler::PropertyAccessInfo"* %0, i64 0, i32 1, i32 0, i32 0, i32 1
  store %"class.v8::internal::Handle"* %43, %"class.v8::internal::Handle"** %44, align 8
  %45 = getelementptr inbounds %"class.v8::internal::ZoneVector", %"class.v8::internal::ZoneVector"* %10, i64 0, i32 0, i32 0, i32 0
  store %"class.v8::internal::Handle"* %43, %"class.v8::internal::Handle"** %45, align 8
  %46 = getelementptr inbounds %"class.v8::internal::Handle", %"class.v8::internal::Handle"* %43, i64 %23
  %47 = getelementptr inbounds %"class.v8::internal::compiler::PropertyAccessInfo", %"class.v8::internal::compiler::PropertyAccessInfo"* %0, i64 0, i32 1, i32 0, i32 0, i32 2, i32 0, i32 0
  store %"class.v8::internal::Handle"* %46, %"class.v8::internal::Handle"** %47, align 8
  %48 = getelementptr inbounds %"class.v8::internal::ZoneVector", %"class.v8::internal::ZoneVector"* %4, i64 0, i32 0, i32 0, i32 0
  %49 = load %"class.v8::internal::Handle"*, %"class.v8::internal::Handle"** %48, align 8
  %50 = load %"class.v8::internal::Handle"*, %"class.v8::internal::Handle"** %17, align 8
  %51 = bitcast %"class.v8::internal::Handle"** %44 to i64*
  %52 = icmp eq %"class.v8::internal::Handle"* %49, %50
  br i1 %52, label %131, label %53

53:                                               ; preds = %41
  %54 = ptrtoint %"class.v8::internal::Handle"* %49 to i64
  %55 = inttoptr i64 %42 to i64*
  %56 = getelementptr %"class.v8::internal::Handle", %"class.v8::internal::Handle"* %50, i64 -1, i32 0, i32 0
  %57 = ptrtoint i64** %56 to i64
  %58 = sub i64 %57, %54
  %59 = lshr i64 %58, 3
  %60 = add nuw nsw i64 %59, 1
  %61 = and i64 %60, 7
  %62 = icmp eq i64 %61, 0
  br i1 %62, label %77, label %63

63:                                               ; preds = %53, %63
  %64 = phi %"class.v8::internal::Handle"* [ %71, %63 ], [ %43, %53 ]
  %65 = phi i64* [ %72, %63 ], [ %55, %53 ]
  %66 = phi %"class.v8::internal::Handle"* [ %70, %63 ], [ %49, %53 ]
  %67 = phi i64 [ %73, %63 ], [ %61, %53 ]
  %68 = bitcast %"class.v8::internal::Handle"* %66 to i64*
  %69 = load i64, i64* %68, align 8
  store i64 %69, i64* %65, align 8
  %70 = getelementptr inbounds %"class.v8::internal::Handle", %"class.v8::internal::Handle"* %66, i64 1
  %71 = getelementptr inbounds %"class.v8::internal::Handle", %"class.v8::internal::Handle"* %64, i64 1
  %72 = bitcast %"class.v8::internal::Handle"* %71 to i64*
  %73 = add i64 %67, -1
  %74 = icmp eq i64 %73, 0
  br i1 %74, label %75, label %63, !llvm.loop !8

75:                                               ; preds = %63
  %76 = bitcast %"class.v8::internal::Handle"* %71 to i64*
  br label %77

77:                                               ; preds = %53, %75
  %78 = phi %"class.v8::internal::Handle"* [ undef, %53 ], [ %71, %75 ]
  %79 = phi %"class.v8::internal::Handle"* [ %43, %53 ], [ %71, %75 ]
  %80 = phi i64* [ %55, %53 ], [ %76, %75 ]
  %81 = phi %"class.v8::internal::Handle"* [ %49, %53 ], [ %70, %75 ]
  %82 = icmp ult i64 %58, 56
  br i1 %82, label %128, label %83

83:                                               ; preds = %77, %83
  %84 = phi %"class.v8::internal::Handle"* [ %125, %83 ], [ %79, %77 ]
  %85 = phi i64* [ %127, %83 ], [ %80, %77 ]
  %86 = phi %"class.v8::internal::Handle"* [ %124, %83 ], [ %81, %77 ]
  %87 = bitcast %"class.v8::internal::Handle"* %86 to i64*
  %88 = load i64, i64* %87, align 8
  store i64 %88, i64* %85, align 8
  %89 = getelementptr inbounds %"class.v8::internal::Handle", %"class.v8::internal::Handle"* %86, i64 1
  %90 = getelementptr inbounds %"class.v8::internal::Handle", %"class.v8::internal::Handle"* %84, i64 1
  %91 = bitcast %"class.v8::internal::Handle"* %90 to i64*
  %92 = bitcast %"class.v8::internal::Handle"* %89 to i64*
  %93 = load i64, i64* %92, align 8
  store i64 %93, i64* %91, align 8
  %94 = getelementptr inbounds %"class.v8::internal::Handle", %"class.v8::internal::Handle"* %86, i64 2
  %95 = getelementptr inbounds %"class.v8::internal::Handle", %"class.v8::internal::Handle"* %84, i64 2
  %96 = bitcast %"class.v8::internal::Handle"* %95 to i64*
  %97 = bitcast %"class.v8::internal::Handle"* %94 to i64*
  %98 = load i64, i64* %97, align 8
  store i64 %98, i64* %96, align 8
  %99 = getelementptr inbounds %"class.v8::internal::Handle", %"class.v8::internal::Handle"* %86, i64 3
  %100 = getelementptr inbounds %"class.v8::internal::Handle", %"class.v8::internal::Handle"* %84, i64 3
  %101 = bitcast %"class.v8::internal::Handle"* %100 to i64*
  %102 = bitcast %"class.v8::internal::Handle"* %99 to i64*
  %103 = load i64, i64* %102, align 8
  store i64 %103, i64* %101, align 8
  %104 = getelementptr inbounds %"class.v8::internal::Handle", %"class.v8::internal::Handle"* %86, i64 4
  %105 = getelementptr inbounds %"class.v8::internal::Handle", %"class.v8::internal::Handle"* %84, i64 4
  %106 = bitcast %"class.v8::internal::Handle"* %105 to i64*
  %107 = bitcast %"class.v8::internal::Handle"* %104 to i64*
  %108 = load i64, i64* %107, align 8
  store i64 %108, i64* %106, align 8
  %109 = getelementptr inbounds %"class.v8::internal::Handle", %"class.v8::internal::Handle"* %86, i64 5
  %110 = getelementptr inbounds %"class.v8::internal::Handle", %"class.v8::internal::Handle"* %84, i64 5
  %111 = bitcast %"class.v8::internal::Handle"* %110 to i64*
  %112 = bitcast %"class.v8::internal::Handle"* %109 to i64*
  %113 = load i64, i64* %112, align 8
  store i64 %113, i64* %111, align 8
  %114 = getelementptr inbounds %"class.v8::internal::Handle", %"class.v8::internal::Handle"* %86, i64 6
  %115 = getelementptr inbounds %"class.v8::internal::Handle", %"class.v8::internal::Handle"* %84, i64 6
  %116 = bitcast %"class.v8::internal::Handle"* %115 to i64*
  %117 = bitcast %"class.v8::internal::Handle"* %114 to i64*
  %118 = load i64, i64* %117, align 8
  store i64 %118, i64* %116, align 8
  %119 = getelementptr inbounds %"class.v8::internal::Handle", %"class.v8::internal::Handle"* %86, i64 7
  %120 = getelementptr inbounds %"class.v8::internal::Handle", %"class.v8::internal::Handle"* %84, i64 7
  %121 = bitcast %"class.v8::internal::Handle"* %120 to i64*
  %122 = bitcast %"class.v8::internal::Handle"* %119 to i64*
  %123 = load i64, i64* %122, align 8
  store i64 %123, i64* %121, align 8
  %124 = getelementptr inbounds %"class.v8::internal::Handle", %"class.v8::internal::Handle"* %86, i64 8
  %125 = getelementptr inbounds %"class.v8::internal::Handle", %"class.v8::internal::Handle"* %84, i64 8
  %126 = icmp eq %"class.v8::internal::Handle"* %124, %50
  %127 = bitcast %"class.v8::internal::Handle"* %125 to i64*
  br i1 %126, label %128, label %83

128:                                              ; preds = %83, %77
  %129 = phi %"class.v8::internal::Handle"* [ %78, %77 ], [ %125, %83 ]
  %130 = ptrtoint %"class.v8::internal::Handle"* %129 to i64
  br label %131

131:                                              ; preds = %128, %41
  %132 = phi i64 [ %42, %41 ], [ %130, %128 ]
  store i64 %132, i64* %51, align 8
  br label %133

133:                                              ; preds = %7, %131
  %134 = getelementptr inbounds %"class.v8::internal::compiler::PropertyAccessInfo", %"class.v8::internal::compiler::PropertyAccessInfo"* %0, i64 0, i32 2, i32 0, i32 0
  store i64* null, i64** %134, align 8
  %135 = getelementptr inbounds %"class.v8::internal::compiler::PropertyAccessInfo", %"class.v8::internal::compiler::PropertyAccessInfo"* %0, i64 0, i32 3, i32 0
  store i64* %3, i64** %135, align 8
  %136 = getelementptr inbounds %"class.v8::internal::compiler::PropertyAccessInfo", %"class.v8::internal::compiler::PropertyAccessInfo"* %0, i64 0, i32 4
  %137 = ptrtoint %"class.v8::internal::Zone"* %1 to i64
  %138 = getelementptr inbounds %"class.v8::internal::compiler::PropertyAccessInfo", %"class.v8::internal::compiler::PropertyAccessInfo"* %0, i64 0, i32 4, i32 0, i32 0, i32 2, i32 1
  %139 = bitcast %"struct.std::__1::__compressed_pair_elem.27"* %138 to i64*
  %140 = bitcast %"class.v8::internal::ZoneVector.22"* %136 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %140, i8 0, i64 24, i1 false) #8
  store i64 %137, i64* %139, align 8
  %141 = getelementptr inbounds %"class.v8::internal::compiler::PropertyAccessInfo", %"class.v8::internal::compiler::PropertyAccessInfo"* %0, i64 0, i32 5, i32 0
  %142 = getelementptr inbounds %"class.v8::internal::compiler::PropertyAccessInfo", %"class.v8::internal::compiler::PropertyAccessInfo"* %0, i64 0, i32 8, i32 0
  %143 = bitcast i64** %141 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %143, i8 0, i64 17, i1 false)
  store i64 4294967295, i64* %142, align 8
  %144 = getelementptr inbounds %"class.v8::internal::compiler::PropertyAccessInfo", %"class.v8::internal::compiler::PropertyAccessInfo"* %0, i64 0, i32 9, i32 0
  %145 = getelementptr inbounds %"class.v8::internal::compiler::PropertyAccessInfo", %"class.v8::internal::compiler::PropertyAccessInfo"* %0, i64 0, i32 11, i32 0
  %146 = bitcast i64** %144 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %146, i8 0, i64 16, i1 false)
  store i64 %5, i64* %145, align 8
  %147 = getelementptr inbounds %"class.v8::internal::compiler::PropertyAccessInfo", %"class.v8::internal::compiler::PropertyAccessInfo"* %0, i64 0, i32 12, i32 0
  store i64* %8, i64** %147, align 8
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN2v88internal8compiler33MinimorphicLoadPropertyAccessInfoC2ENS2_4KindEibNS0_14RepresentationENS1_4TypeE(%"class.v8::internal::compiler::MinimorphicLoadPropertyAccessInfo"* nocapture, i32, i32, i1 zeroext, i8, i64) unnamed_addr #3 align 2 {
  %7 = zext i1 %3 to i8
  %8 = getelementptr inbounds %"class.v8::internal::compiler::MinimorphicLoadPropertyAccessInfo", %"class.v8::internal::compiler::MinimorphicLoadPropertyAccessInfo"* %0, i64 0, i32 0
  store i32 %1, i32* %8, align 8
  %9 = getelementptr inbounds %"class.v8::internal::compiler::MinimorphicLoadPropertyAccessInfo", %"class.v8::internal::compiler::MinimorphicLoadPropertyAccessInfo"* %0, i64 0, i32 1
  store i8 %7, i8* %9, align 4
  %10 = getelementptr inbounds %"class.v8::internal::compiler::MinimorphicLoadPropertyAccessInfo", %"class.v8::internal::compiler::MinimorphicLoadPropertyAccessInfo"* %0, i64 0, i32 2
  store i32 %2, i32* %10, align 8
  %11 = getelementptr inbounds %"class.v8::internal::compiler::MinimorphicLoadPropertyAccessInfo", %"class.v8::internal::compiler::MinimorphicLoadPropertyAccessInfo"* %0, i64 0, i32 3, i32 0
  store i8 %4, i8* %11, align 4
  %12 = getelementptr inbounds %"class.v8::internal::compiler::MinimorphicLoadPropertyAccessInfo", %"class.v8::internal::compiler::MinimorphicLoadPropertyAccessInfo"* %0, i64 0, i32 4, i32 0
  store i64 %5, i64* %12, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN2v88internal8compiler18PropertyAccessInfo5MergeEPKS2_NS1_10AccessModeEPNS0_4ZoneE(%"class.v8::internal::compiler::PropertyAccessInfo"*, %"class.v8::internal::compiler::PropertyAccessInfo"* nocapture readonly, i32, %"class.v8::internal::Zone"*) local_unnamed_addr #0 align 2 {
  %5 = getelementptr inbounds %"class.v8::internal::compiler::PropertyAccessInfo", %"class.v8::internal::compiler::PropertyAccessInfo"* %0, i64 0, i32 0
  %6 = load i32, i32* %5, align 8
  %7 = getelementptr inbounds %"class.v8::internal::compiler::PropertyAccessInfo", %"class.v8::internal::compiler::PropertyAccessInfo"* %1, i64 0, i32 0
  %8 = load i32, i32* %7, align 8
  %9 = icmp eq i32 %6, %8
  br i1 %9, label %10, label %135

10:                                               ; preds = %4
  %11 = getelementptr inbounds %"class.v8::internal::compiler::PropertyAccessInfo", %"class.v8::internal::compiler::PropertyAccessInfo"* %0, i64 0, i32 3
  %12 = bitcast %"class.v8::internal::MaybeHandle"* %11 to i64*
  %13 = load i64, i64* %12, align 8
  %14 = getelementptr inbounds %"class.v8::internal::compiler::PropertyAccessInfo", %"class.v8::internal::compiler::PropertyAccessInfo"* %1, i64 0, i32 3
  %15 = bitcast %"class.v8::internal::MaybeHandle"* %14 to i64*
  %16 = load i64, i64* %15, align 8
  %17 = icmp eq i64 %13, %16
  br i1 %17, label %18, label %135

18:                                               ; preds = %10
  switch i32 %6, label %134 [
    i32 0, label %19
    i32 2, label %20
    i32 3, label %20
    i32 6, label %93
    i32 5, label %93
    i32 4, label %110
    i32 1, label %125
    i32 8, label %125
    i32 7, label %135
  ]

19:                                               ; preds = %18
  br label %135

20:                                               ; preds = %18, %18
  %21 = getelementptr inbounds %"class.v8::internal::compiler::PropertyAccessInfo", %"class.v8::internal::compiler::PropertyAccessInfo"* %0, i64 0, i32 6, i32 0
  %22 = load i64, i64* %21, align 8
  %23 = getelementptr inbounds %"class.v8::internal::compiler::PropertyAccessInfo", %"class.v8::internal::compiler::PropertyAccessInfo"* %1, i64 0, i32 6, i32 0
  %24 = load i64, i64* %23, align 8
  %25 = xor i64 %24, %22
  %26 = and i64 %25, 65535
  %27 = icmp eq i64 %26, 0
  br i1 %27, label %28, label %135

28:                                               ; preds = %20
  switch i32 %2, label %71 [
    i32 3, label %29
    i32 0, label %29
    i32 1, label %49
    i32 2, label %49
  ]

29:                                               ; preds = %28, %28
  %30 = getelementptr inbounds %"class.v8::internal::compiler::PropertyAccessInfo", %"class.v8::internal::compiler::PropertyAccessInfo"* %0, i64 0, i32 7, i32 0
  %31 = load i8, i8* %30, align 1
  %32 = getelementptr inbounds %"class.v8::internal::compiler::PropertyAccessInfo", %"class.v8::internal::compiler::PropertyAccessInfo"* %1, i64 0, i32 7, i32 0
  %33 = load i8, i8* %32, align 1
  %34 = icmp eq i8 %31, %33
  br i1 %34, label %40, label %35

35:                                               ; preds = %29
  %36 = icmp eq i8 %31, 2
  %37 = icmp eq i8 %33, 2
  %38 = or i1 %36, %37
  br i1 %38, label %135, label %39

39:                                               ; preds = %35
  store i8 4, i8* %30, align 8
  br label %40

40:                                               ; preds = %39, %29
  %41 = getelementptr inbounds %"class.v8::internal::compiler::PropertyAccessInfo", %"class.v8::internal::compiler::PropertyAccessInfo"* %0, i64 0, i32 10
  %42 = bitcast %"class.v8::internal::MaybeHandle.29"* %41 to i64*
  %43 = load i64, i64* %42, align 8
  %44 = getelementptr inbounds %"class.v8::internal::compiler::PropertyAccessInfo", %"class.v8::internal::compiler::PropertyAccessInfo"* %1, i64 0, i32 10
  %45 = bitcast %"class.v8::internal::MaybeHandle.29"* %44 to i64*
  %46 = load i64, i64* %45, align 8
  %47 = icmp eq i64 %43, %46
  br i1 %47, label %71, label %48

48:                                               ; preds = %40
  store i64 0, i64* %42, align 8
  br label %71

49:                                               ; preds = %28, %28
  %50 = getelementptr inbounds %"class.v8::internal::compiler::PropertyAccessInfo", %"class.v8::internal::compiler::PropertyAccessInfo"* %0, i64 0, i32 10
  %51 = bitcast %"class.v8::internal::MaybeHandle.29"* %50 to i64*
  %52 = load i64, i64* %51, align 8
  %53 = getelementptr inbounds %"class.v8::internal::compiler::PropertyAccessInfo", %"class.v8::internal::compiler::PropertyAccessInfo"* %1, i64 0, i32 10
  %54 = bitcast %"class.v8::internal::MaybeHandle.29"* %53 to i64*
  %55 = load i64, i64* %54, align 8
  %56 = icmp eq i64 %52, %55
  br i1 %56, label %57, label %135

57:                                               ; preds = %49
  %58 = getelementptr inbounds %"class.v8::internal::compiler::PropertyAccessInfo", %"class.v8::internal::compiler::PropertyAccessInfo"* %0, i64 0, i32 7, i32 0
  %59 = load i8, i8* %58, align 1
  %60 = getelementptr inbounds %"class.v8::internal::compiler::PropertyAccessInfo", %"class.v8::internal::compiler::PropertyAccessInfo"* %1, i64 0, i32 7, i32 0
  %61 = load i8, i8* %60, align 1
  %62 = icmp eq i8 %59, %61
  br i1 %62, label %63, label %135

63:                                               ; preds = %57
  %64 = getelementptr inbounds %"class.v8::internal::compiler::PropertyAccessInfo", %"class.v8::internal::compiler::PropertyAccessInfo"* %0, i64 0, i32 5
  %65 = bitcast %"class.v8::internal::MaybeHandle.29"* %64 to i64*
  %66 = load i64, i64* %65, align 8
  %67 = getelementptr inbounds %"class.v8::internal::compiler::PropertyAccessInfo", %"class.v8::internal::compiler::PropertyAccessInfo"* %1, i64 0, i32 5
  %68 = bitcast %"class.v8::internal::MaybeHandle.29"* %67 to i64*
  %69 = load i64, i64* %68, align 8
  %70 = icmp eq i64 %66, %69
  br i1 %70, label %71, label %135

71:                                               ; preds = %40, %63, %48, %28
  %72 = getelementptr inbounds %"class.v8::internal::compiler::PropertyAccessInfo", %"class.v8::internal::compiler::PropertyAccessInfo"* %0, i64 0, i32 8, i32 0
  %73 = load i64, i64* %72, align 8
  %74 = getelementptr inbounds %"class.v8::internal::compiler::PropertyAccessInfo", %"class.v8::internal::compiler::PropertyAccessInfo"* %1, i64 0, i32 8, i32 0
  %75 = load i64, i64* %74, align 8
  %76 = tail call i64 @_ZN2v88internal8compiler4Type5UnionES2_S2_PNS0_4ZoneE(i64 %73, i64 %75, %"class.v8::internal::Zone"* %3) #8
  store i64 %76, i64* %72, align 8
  %77 = getelementptr inbounds %"class.v8::internal::compiler::PropertyAccessInfo", %"class.v8::internal::compiler::PropertyAccessInfo"* %0, i64 0, i32 1, i32 0
  %78 = getelementptr inbounds %"class.v8::internal::compiler::PropertyAccessInfo", %"class.v8::internal::compiler::PropertyAccessInfo"* %0, i64 0, i32 1, i32 0, i32 0, i32 1
  %79 = load %"class.v8::internal::Handle"*, %"class.v8::internal::Handle"** %78, align 8
  %80 = getelementptr inbounds %"class.v8::internal::compiler::PropertyAccessInfo", %"class.v8::internal::compiler::PropertyAccessInfo"* %1, i64 0, i32 1, i32 0, i32 0, i32 0
  %81 = load %"class.v8::internal::Handle"*, %"class.v8::internal::Handle"** %80, align 8
  %82 = getelementptr inbounds %"class.v8::internal::compiler::PropertyAccessInfo", %"class.v8::internal::compiler::PropertyAccessInfo"* %1, i64 0, i32 1, i32 0, i32 0, i32 1
  %83 = load %"class.v8::internal::Handle"*, %"class.v8::internal::Handle"** %82, align 8
  %84 = tail call %"class.v8::internal::Handle"* @_ZNSt3__16vectorIN2v88internal6HandleINS2_3MapEEENS2_13ZoneAllocatorIS5_EEE6insertINS_11__wrap_iterIPKS5_EEEENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIS5_NS_15iterator_traitsISF_E9referenceEEE5valueENSA_IPS5_EEE4typeESD_SF_SF_(%"class.std::__1::vector"* %77, %"class.v8::internal::Handle"* %79, %"class.v8::internal::Handle"* %81, %"class.v8::internal::Handle"* %83)
  %85 = getelementptr inbounds %"class.v8::internal::compiler::PropertyAccessInfo", %"class.v8::internal::compiler::PropertyAccessInfo"* %0, i64 0, i32 4, i32 0
  %86 = getelementptr inbounds %"class.v8::internal::compiler::PropertyAccessInfo", %"class.v8::internal::compiler::PropertyAccessInfo"* %0, i64 0, i32 4, i32 0, i32 0, i32 1
  %87 = load %"class.v8::internal::compiler::CompilationDependency"**, %"class.v8::internal::compiler::CompilationDependency"*** %86, align 8
  %88 = getelementptr inbounds %"class.v8::internal::compiler::PropertyAccessInfo", %"class.v8::internal::compiler::PropertyAccessInfo"* %1, i64 0, i32 4, i32 0, i32 0, i32 0
  %89 = load %"class.v8::internal::compiler::CompilationDependency"**, %"class.v8::internal::compiler::CompilationDependency"*** %88, align 8
  %90 = getelementptr inbounds %"class.v8::internal::compiler::PropertyAccessInfo", %"class.v8::internal::compiler::PropertyAccessInfo"* %1, i64 0, i32 4, i32 0, i32 0, i32 1
  %91 = load %"class.v8::internal::compiler::CompilationDependency"**, %"class.v8::internal::compiler::CompilationDependency"*** %90, align 8
  %92 = tail call %"class.v8::internal::compiler::CompilationDependency"** @_ZNSt3__16vectorIPKN2v88internal8compiler21CompilationDependencyENS2_13ZoneAllocatorIS6_EEE6insertINS_11__wrap_iterIPKS6_EEEENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIS6_NS_15iterator_traitsISG_E9referenceEEE5valueENSB_IPS6_EEE4typeESE_SG_SG_(%"class.std::__1::vector.23"* %85, %"class.v8::internal::compiler::CompilationDependency"** %87, %"class.v8::internal::compiler::CompilationDependency"** %89, %"class.v8::internal::compiler::CompilationDependency"** %91)
  br label %135

93:                                               ; preds = %18, %18
  %94 = getelementptr inbounds %"class.v8::internal::compiler::PropertyAccessInfo", %"class.v8::internal::compiler::PropertyAccessInfo"* %0, i64 0, i32 2, i32 0
  %95 = bitcast %"class.v8::internal::HandleBase"* %94 to i64*
  %96 = load i64, i64* %95, align 1
  %97 = getelementptr inbounds %"class.v8::internal::compiler::PropertyAccessInfo", %"class.v8::internal::compiler::PropertyAccessInfo"* %1, i64 0, i32 2, i32 0
  %98 = bitcast %"class.v8::internal::HandleBase"* %97 to i64*
  %99 = load i64, i64* %98, align 1
  %100 = icmp eq i64 %96, %99
  br i1 %100, label %101, label %135

101:                                              ; preds = %93
  %102 = getelementptr inbounds %"class.v8::internal::compiler::PropertyAccessInfo", %"class.v8::internal::compiler::PropertyAccessInfo"* %0, i64 0, i32 1, i32 0
  %103 = getelementptr inbounds %"class.v8::internal::compiler::PropertyAccessInfo", %"class.v8::internal::compiler::PropertyAccessInfo"* %0, i64 0, i32 1, i32 0, i32 0, i32 1
  %104 = load %"class.v8::internal::Handle"*, %"class.v8::internal::Handle"** %103, align 8
  %105 = getelementptr inbounds %"class.v8::internal::compiler::PropertyAccessInfo", %"class.v8::internal::compiler::PropertyAccessInfo"* %1, i64 0, i32 1, i32 0, i32 0, i32 0
  %106 = load %"class.v8::internal::Handle"*, %"class.v8::internal::Handle"** %105, align 8
  %107 = getelementptr inbounds %"class.v8::internal::compiler::PropertyAccessInfo", %"class.v8::internal::compiler::PropertyAccessInfo"* %1, i64 0, i32 1, i32 0, i32 0, i32 1
  %108 = load %"class.v8::internal::Handle"*, %"class.v8::internal::Handle"** %107, align 8
  %109 = tail call %"class.v8::internal::Handle"* @_ZNSt3__16vectorIN2v88internal6HandleINS2_3MapEEENS2_13ZoneAllocatorIS5_EEE6insertINS_11__wrap_iterIPKS5_EEEENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIS5_NS_15iterator_traitsISF_E9referenceEEE5valueENSA_IPS5_EEE4typeESD_SF_SF_(%"class.std::__1::vector"* %102, %"class.v8::internal::Handle"* %104, %"class.v8::internal::Handle"* %106, %"class.v8::internal::Handle"* %108)
  br label %135

110:                                              ; preds = %18
  %111 = getelementptr inbounds %"class.v8::internal::compiler::PropertyAccessInfo", %"class.v8::internal::compiler::PropertyAccessInfo"* %0, i64 0, i32 11, i32 0
  %112 = load i64, i64* %111, align 8
  %113 = getelementptr inbounds %"class.v8::internal::compiler::PropertyAccessInfo", %"class.v8::internal::compiler::PropertyAccessInfo"* %1, i64 0, i32 11, i32 0
  %114 = load i64, i64* %113, align 8
  %115 = icmp eq i64 %112, %114
  br i1 %115, label %116, label %135

116:                                              ; preds = %110
  %117 = getelementptr inbounds %"class.v8::internal::compiler::PropertyAccessInfo", %"class.v8::internal::compiler::PropertyAccessInfo"* %0, i64 0, i32 1, i32 0
  %118 = getelementptr inbounds %"class.v8::internal::compiler::PropertyAccessInfo", %"class.v8::internal::compiler::PropertyAccessInfo"* %0, i64 0, i32 1, i32 0, i32 0, i32 1
  %119 = load %"class.v8::internal::Handle"*, %"class.v8::internal::Handle"** %118, align 8
  %120 = getelementptr inbounds %"class.v8::internal::compiler::PropertyAccessInfo", %"class.v8::internal::compiler::PropertyAccessInfo"* %1, i64 0, i32 1, i32 0, i32 0, i32 0
  %121 = load %"class.v8::internal::Handle"*, %"class.v8::internal::Handle"** %120, align 8
  %122 = getelementptr inbounds %"class.v8::internal::compiler::PropertyAccessInfo", %"class.v8::internal::compiler::PropertyAccessInfo"* %1, i64 0, i32 1, i32 0, i32 0, i32 1
  %123 = load %"class.v8::internal::Handle"*, %"class.v8::internal::Handle"** %122, align 8
  %124 = tail call %"class.v8::internal::Handle"* @_ZNSt3__16vectorIN2v88internal6HandleINS2_3MapEEENS2_13ZoneAllocatorIS5_EEE6insertINS_11__wrap_iterIPKS5_EEEENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIS5_NS_15iterator_traitsISF_E9referenceEEE5valueENSA_IPS5_EEE4typeESD_SF_SF_(%"class.std::__1::vector"* %117, %"class.v8::internal::Handle"* %119, %"class.v8::internal::Handle"* %121, %"class.v8::internal::Handle"* %123)
  br label %135

125:                                              ; preds = %18, %18
  %126 = getelementptr inbounds %"class.v8::internal::compiler::PropertyAccessInfo", %"class.v8::internal::compiler::PropertyAccessInfo"* %0, i64 0, i32 1, i32 0
  %127 = getelementptr inbounds %"class.v8::internal::compiler::PropertyAccessInfo", %"class.v8::internal::compiler::PropertyAccessInfo"* %0, i64 0, i32 1, i32 0, i32 0, i32 1
  %128 = load %"class.v8::internal::Handle"*, %"class.v8::internal::Handle"** %127, align 8
  %129 = getelementptr inbounds %"class.v8::internal::compiler::PropertyAccessInfo", %"class.v8::internal::compiler::PropertyAccessInfo"* %1, i64 0, i32 1, i32 0, i32 0, i32 0
  %130 = load %"class.v8::internal::Handle"*, %"class.v8::internal::Handle"** %129, align 8
  %131 = getelementptr inbounds %"class.v8::internal::compiler::PropertyAccessInfo", %"class.v8::internal::compiler::PropertyAccessInfo"* %1, i64 0, i32 1, i32 0, i32 0, i32 1
  %132 = load %"class.v8::internal::Handle"*, %"class.v8::internal::Handle"** %131, align 8
  %133 = tail call %"class.v8::internal::Handle"* @_ZNSt3__16vectorIN2v88internal6HandleINS2_3MapEEENS2_13ZoneAllocatorIS5_EEE6insertINS_11__wrap_iterIPKS5_EEEENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIS5_NS_15iterator_traitsISF_E9referenceEEE5valueENSA_IPS5_EEE4typeESD_SF_SF_(%"class.std::__1::vector"* %126, %"class.v8::internal::Handle"* %128, %"class.v8::internal::Handle"* %130, %"class.v8::internal::Handle"* %132)
  br label %135

134:                                              ; preds = %18
  unreachable

135:                                              ; preds = %18, %110, %93, %20, %57, %49, %63, %35, %10, %4, %125, %116, %101, %71, %19
  %136 = phi i1 [ true, %125 ], [ true, %116 ], [ true, %101 ], [ true, %71 ], [ true, %19 ], [ false, %4 ], [ false, %10 ], [ false, %35 ], [ false, %63 ], [ false, %49 ], [ false, %57 ], [ false, %20 ], [ false, %93 ], [ false, %110 ], [ false, %18 ]
  ret i1 %136
}

declare i64 @_ZN2v88internal8compiler4Type5UnionES2_S2_PNS0_4ZoneE(i64, i64, %"class.v8::internal::Zone"*) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.v8::internal::Handle"* @_ZNSt3__16vectorIN2v88internal6HandleINS2_3MapEEENS2_13ZoneAllocatorIS5_EEE6insertINS_11__wrap_iterIPKS5_EEEENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIS5_NS_15iterator_traitsISF_E9referenceEEE5valueENSA_IPS5_EEE4typeESD_SF_SF_(%"class.std::__1::vector"*, %"class.v8::internal::Handle"*, %"class.v8::internal::Handle"*, %"class.v8::internal::Handle"*) local_unnamed_addr #0 comdat align 2 {
  %5 = bitcast %"class.v8::internal::Handle"* %1 to i8*
  %6 = ptrtoint %"class.v8::internal::Handle"* %1 to i64
  %7 = ptrtoint %"class.v8::internal::Handle"* %2 to i64
  %8 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 0
  %9 = ptrtoint %"class.v8::internal::Handle"* %3 to i64
  %10 = sub i64 %9, %7
  %11 = ashr exact i64 %10, 3
  %12 = icmp sgt i64 %10, 0
  br i1 %12, label %13, label %846

13:                                               ; preds = %4
  %14 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %15 = bitcast %"class.v8::internal::Handle"** %14 to i64*
  %16 = load i64, i64* %15, align 8
  %17 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 1
  %18 = load %"class.v8::internal::Handle"*, %"class.v8::internal::Handle"** %17, align 8
  %19 = ptrtoint %"class.v8::internal::Handle"* %18 to i64
  %20 = sub i64 %16, %19
  %21 = ashr exact i64 %20, 3
  %22 = icmp sgt i64 %11, %21
  %23 = bitcast %"class.v8::internal::Handle"** %17 to i64*
  br i1 %22, label %359, label %24

24:                                               ; preds = %13
  %25 = sub i64 %19, %6
  %26 = ashr exact i64 %25, 3
  %27 = icmp sgt i64 %11, %26
  br i1 %27, label %28, label %213

28:                                               ; preds = %24
  %29 = getelementptr inbounds %"class.v8::internal::Handle", %"class.v8::internal::Handle"* %2, i64 %26
  %30 = icmp eq %"class.v8::internal::Handle"* %29, %3
  br i1 %30, label %208, label %31

31:                                               ; preds = %28
  %32 = xor i64 %26, -1
  %33 = getelementptr %"class.v8::internal::Handle", %"class.v8::internal::Handle"* %3, i64 %32, i32 0, i32 0
  %34 = ptrtoint i64** %33 to i64
  %35 = sub i64 %34, %7
  %36 = lshr i64 %35, 3
  %37 = add nuw nsw i64 %36, 1
  %38 = icmp ult i64 %37, 4
  br i1 %38, label %134, label %39

39:                                               ; preds = %31
  %40 = xor i64 %26, -1
  %41 = getelementptr %"class.v8::internal::Handle", %"class.v8::internal::Handle"* %3, i64 %40, i32 0, i32 0
  %42 = ptrtoint i64** %41 to i64
  %43 = sub i64 %42, %7
  %44 = lshr i64 %43, 3
  %45 = add nuw nsw i64 %44, 1
  %46 = getelementptr %"class.v8::internal::Handle", %"class.v8::internal::Handle"* %18, i64 %45
  %47 = add nsw i64 %26, %44
  %48 = add nsw i64 %47, 1
  %49 = getelementptr %"class.v8::internal::Handle", %"class.v8::internal::Handle"* %2, i64 %48
  %50 = icmp ult %"class.v8::internal::Handle"* %18, %49
  %51 = icmp ult %"class.v8::internal::Handle"* %29, %46
  %52 = and i1 %50, %51
  br i1 %52, label %134, label %53

53:                                               ; preds = %39
  %54 = and i64 %37, 4611686018427387900
  %55 = getelementptr %"class.v8::internal::Handle", %"class.v8::internal::Handle"* %18, i64 %54
  %56 = getelementptr %"class.v8::internal::Handle", %"class.v8::internal::Handle"* %29, i64 %54
  %57 = add nsw i64 %54, -4
  %58 = lshr exact i64 %57, 2
  %59 = add nuw nsw i64 %58, 1
  %60 = and i64 %59, 3
  %61 = icmp ult i64 %57, 12
  br i1 %61, label %113, label %62

62:                                               ; preds = %53
  %63 = sub nsw i64 %59, %60
  br label %64

64:                                               ; preds = %64, %62
  %65 = phi i64 [ 0, %62 ], [ %110, %64 ]
  %66 = phi i64 [ %63, %62 ], [ %111, %64 ]
  %67 = getelementptr %"class.v8::internal::Handle", %"class.v8::internal::Handle"* %18, i64 %65
  %68 = getelementptr %"class.v8::internal::Handle", %"class.v8::internal::Handle"* %29, i64 %65
  %69 = bitcast %"class.v8::internal::Handle"* %68 to <2 x i64>*
  %70 = load <2 x i64>, <2 x i64>* %69, align 8, !alias.scope !9
  %71 = getelementptr %"class.v8::internal::Handle", %"class.v8::internal::Handle"* %68, i64 2
  %72 = bitcast %"class.v8::internal::Handle"* %71 to <2 x i64>*
  %73 = load <2 x i64>, <2 x i64>* %72, align 8, !alias.scope !9
  %74 = bitcast %"class.v8::internal::Handle"* %67 to <2 x i64>*
  store <2 x i64> %70, <2 x i64>* %74, align 8, !alias.scope !12, !noalias !9
  %75 = getelementptr %"class.v8::internal::Handle", %"class.v8::internal::Handle"* %67, i64 2
  %76 = bitcast %"class.v8::internal::Handle"* %75 to <2 x i64>*
  store <2 x i64> %73, <2 x i64>* %76, align 8, !alias.scope !12, !noalias !9
  %77 = or i64 %65, 4
  %78 = getelementptr %"class.v8::internal::Handle", %"class.v8::internal::Handle"* %18, i64 %77
  %79 = getelementptr %"class.v8::internal::Handle", %"class.v8::internal::Handle"* %29, i64 %77
  %80 = bitcast %"class.v8::internal::Handle"* %79 to <2 x i64>*
  %81 = load <2 x i64>, <2 x i64>* %80, align 8, !alias.scope !9
  %82 = getelementptr %"class.v8::internal::Handle", %"class.v8::internal::Handle"* %79, i64 2
  %83 = bitcast %"class.v8::internal::Handle"* %82 to <2 x i64>*
  %84 = load <2 x i64>, <2 x i64>* %83, align 8, !alias.scope !9
  %85 = bitcast %"class.v8::internal::Handle"* %78 to <2 x i64>*
  store <2 x i64> %81, <2 x i64>* %85, align 8, !alias.scope !12, !noalias !9
  %86 = getelementptr %"class.v8::internal::Handle", %"class.v8::internal::Handle"* %78, i64 2
  %87 = bitcast %"class.v8::internal::Handle"* %86 to <2 x i64>*
  store <2 x i64> %84, <2 x i64>* %87, align 8, !alias.scope !12, !noalias !9
  %88 = or i64 %65, 8
  %89 = getelementptr %"class.v8::internal::Handle", %"class.v8::internal::Handle"* %18, i64 %88
  %90 = getelementptr %"class.v8::internal::Handle", %"class.v8::internal::Handle"* %29, i64 %88
  %91 = bitcast %"class.v8::internal::Handle"* %90 to <2 x i64>*
  %92 = load <2 x i64>, <2 x i64>* %91, align 8, !alias.scope !9
  %93 = getelementptr %"class.v8::internal::Handle", %"class.v8::internal::Handle"* %90, i64 2
  %94 = bitcast %"class.v8::internal::Handle"* %93 to <2 x i64>*
  %95 = load <2 x i64>, <2 x i64>* %94, align 8, !alias.scope !9
  %96 = bitcast %"class.v8::internal::Handle"* %89 to <2 x i64>*
  store <2 x i64> %92, <2 x i64>* %96, align 8, !alias.scope !12, !noalias !9
  %97 = getelementptr %"class.v8::internal::Handle", %"class.v8::internal::Handle"* %89, i64 2
  %98 = bitcast %"class.v8::internal::Handle"* %97 to <2 x i64>*
  store <2 x i64> %95, <2 x i64>* %98, align 8, !alias.scope !12, !noalias !9
  %99 = or i64 %65, 12
  %100 = getelementptr %"class.v8::internal::Handle", %"class.v8::internal::Handle"* %18, i64 %99
  %101 = getelementptr %"class.v8::internal::Handle", %"class.v8::internal::Handle"* %29, i64 %99
  %102 = bitcast %"class.v8::internal::Handle"* %101 to <2 x i64>*
  %103 = load <2 x i64>, <2 x i64>* %102, align 8, !alias.scope !9
  %104 = getelementptr %"class.v8::internal::Handle", %"class.v8::internal::Handle"* %101, i64 2
  %105 = bitcast %"class.v8::internal::Handle"* %104 to <2 x i64>*
  %106 = load <2 x i64>, <2 x i64>* %105, align 8, !alias.scope !9
  %107 = bitcast %"class.v8::internal::Handle"* %100 to <2 x i64>*
  store <2 x i64> %103, <2 x i64>* %107, align 8, !alias.scope !12, !noalias !9
  %108 = getelementptr %"class.v8::internal::Handle", %"class.v8::internal::Handle"* %100, i64 2
  %109 = bitcast %"class.v8::internal::Handle"* %108 to <2 x i64>*
  store <2 x i64> %106, <2 x i64>* %109, align 8, !alias.scope !12, !noalias !9
  %110 = add i64 %65, 16
  %111 = add i64 %66, -4
  %112 = icmp eq i64 %111, 0
  br i1 %112, label %113, label %64, !llvm.loop !14

113:                                              ; preds = %64, %53
  %114 = phi i64 [ 0, %53 ], [ %110, %64 ]
  %115 = icmp eq i64 %60, 0
  br i1 %115, label %132, label %116

116:                                              ; preds = %113, %116
  %117 = phi i64 [ %129, %116 ], [ %114, %113 ]
  %118 = phi i64 [ %130, %116 ], [ %60, %113 ]
  %119 = getelementptr %"class.v8::internal::Handle", %"class.v8::internal::Handle"* %18, i64 %117
  %120 = getelementptr %"class.v8::internal::Handle", %"class.v8::internal::Handle"* %29, i64 %117
  %121 = bitcast %"class.v8::internal::Handle"* %120 to <2 x i64>*
  %122 = load <2 x i64>, <2 x i64>* %121, align 8, !alias.scope !9
  %123 = getelementptr %"class.v8::internal::Handle", %"class.v8::internal::Handle"* %120, i64 2
  %124 = bitcast %"class.v8::internal::Handle"* %123 to <2 x i64>*
  %125 = load <2 x i64>, <2 x i64>* %124, align 8, !alias.scope !9
  %126 = bitcast %"class.v8::internal::Handle"* %119 to <2 x i64>*
  store <2 x i64> %122, <2 x i64>* %126, align 8, !alias.scope !12, !noalias !9
  %127 = getelementptr %"class.v8::internal::Handle", %"class.v8::internal::Handle"* %119, i64 2
  %128 = bitcast %"class.v8::internal::Handle"* %127 to <2 x i64>*
  store <2 x i64> %125, <2 x i64>* %128, align 8, !alias.scope !12, !noalias !9
  %129 = add i64 %117, 4
  %130 = add i64 %118, -1
  %131 = icmp eq i64 %130, 0
  br i1 %131, label %132, label %116, !llvm.loop !16

132:                                              ; preds = %116, %113
  %133 = icmp eq i64 %37, %54
  br i1 %133, label %205, label %134

134:                                              ; preds = %132, %39, %31
  %135 = phi %"class.v8::internal::Handle"* [ %18, %39 ], [ %18, %31 ], [ %55, %132 ]
  %136 = phi %"class.v8::internal::Handle"* [ %29, %39 ], [ %29, %31 ], [ %56, %132 ]
  %137 = ptrtoint %"class.v8::internal::Handle"* %136 to i64
  %138 = getelementptr %"class.v8::internal::Handle", %"class.v8::internal::Handle"* %3, i64 -1, i32 0, i32 0
  %139 = ptrtoint i64** %138 to i64
  %140 = sub i64 %139, %137
  %141 = lshr i64 %140, 3
  %142 = add nuw nsw i64 %141, 1
  %143 = and i64 %142, 7
  %144 = icmp eq i64 %143, 0
  br i1 %144, label %156, label %145

145:                                              ; preds = %134, %145
  %146 = phi %"class.v8::internal::Handle"* [ %153, %145 ], [ %135, %134 ]
  %147 = phi %"class.v8::internal::Handle"* [ %152, %145 ], [ %136, %134 ]
  %148 = phi i64 [ %154, %145 ], [ %143, %134 ]
  %149 = bitcast %"class.v8::internal::Handle"* %146 to i64*
  %150 = bitcast %"class.v8::internal::Handle"* %147 to i64*
  %151 = load i64, i64* %150, align 8
  store i64 %151, i64* %149, align 8
  %152 = getelementptr inbounds %"class.v8::internal::Handle", %"class.v8::internal::Handle"* %147, i64 1
  %153 = getelementptr inbounds %"class.v8::internal::Handle", %"class.v8::internal::Handle"* %146, i64 1
  %154 = add i64 %148, -1
  %155 = icmp eq i64 %154, 0
  br i1 %155, label %156, label %145, !llvm.loop !17

156:                                              ; preds = %145, %134
  %157 = phi %"class.v8::internal::Handle"* [ undef, %134 ], [ %153, %145 ]
  %158 = phi %"class.v8::internal::Handle"* [ %135, %134 ], [ %153, %145 ]
  %159 = phi %"class.v8::internal::Handle"* [ %136, %134 ], [ %152, %145 ]
  %160 = icmp ult i64 %140, 56
  br i1 %160, label %205, label %161

161:                                              ; preds = %156, %161
  %162 = phi %"class.v8::internal::Handle"* [ %203, %161 ], [ %158, %156 ]
  %163 = phi %"class.v8::internal::Handle"* [ %202, %161 ], [ %159, %156 ]
  %164 = bitcast %"class.v8::internal::Handle"* %162 to i64*
  %165 = bitcast %"class.v8::internal::Handle"* %163 to i64*
  %166 = load i64, i64* %165, align 8
  store i64 %166, i64* %164, align 8
  %167 = getelementptr inbounds %"class.v8::internal::Handle", %"class.v8::internal::Handle"* %163, i64 1
  %168 = getelementptr inbounds %"class.v8::internal::Handle", %"class.v8::internal::Handle"* %162, i64 1
  %169 = bitcast %"class.v8::internal::Handle"* %168 to i64*
  %170 = bitcast %"class.v8::internal::Handle"* %167 to i64*
  %171 = load i64, i64* %170, align 8
  store i64 %171, i64* %169, align 8
  %172 = getelementptr inbounds %"class.v8::internal::Handle", %"class.v8::internal::Handle"* %163, i64 2
  %173 = getelementptr inbounds %"class.v8::internal::Handle", %"class.v8::internal::Handle"* %162, i64 2
  %174 = bitcast %"class.v8::internal::Handle"* %173 to i64*
  %175 = bitcast %"class.v8::internal::Handle"* %172 to i64*
  %176 = load i64, i64* %175, align 8
  store i64 %176, i64* %174, align 8
  %177 = getelementptr inbounds %"class.v8::internal::Handle", %"class.v8::internal::Handle"* %163, i64 3
  %178 = getelementptr inbounds %"class.v8::internal::Handle", %"class.v8::internal::Handle"* %162, i64 3
  %179 = bitcast %"class.v8::internal::Handle"* %178 to i64*
  %180 = bitcast %"class.v8::internal::Handle"* %177 to i64*
  %181 = load i64, i64* %180, align 8
  store i64 %181, i64* %179, align 8
  %182 = getelementptr inbounds %"class.v8::internal::Handle", %"class.v8::internal::Handle"* %163, i64 4
  %183 = getelementptr inbounds %"class.v8::internal::Handle", %"class.v8::internal::Handle"* %162, i64 4
  %184 = bitcast %"class.v8::internal::Handle"* %183 to i64*
  %185 = bitcast %"class.v8::internal::Handle"* %182 to i64*
  %186 = load i64, i64* %185, align 8
  store i64 %186, i64* %184, align 8
  %187 = getelementptr inbounds %"class.v8::internal::Handle", %"class.v8::internal::Handle"* %163, i64 5
  %188 = getelementptr inbounds %"class.v8::internal::Handle", %"class.v8::internal::Handle"* %162, i64 5
  %189 = bitcast %"class.v8::internal::Handle"* %188 to i64*
  %190 = bitcast %"class.v8::internal::Handle"* %187 to i64*
  %191 = load i64, i64* %190, align 8
  store i64 %191, i64* %189, align 8
  %192 = getelementptr inbounds %"class.v8::internal::Handle", %"class.v8::internal::Handle"* %163, i64 6
  %193 = getelementptr inbounds %"class.v8::internal::Handle", %"class.v8::internal::Handle"* %162, i64 6
  %194 = bitcast %"class.v8::internal::Handle"* %193 to i64*
  %195 = bitcast %"class.v8::internal::Handle"* %192 to i64*
  %196 = load i64, i64* %195, align 8
  store i64 %196, i64* %194, align 8
  %197 = getelementptr inbounds %"class.v8::internal::Handle", %"class.v8::internal::Handle"* %163, i64 7
  %198 = getelementptr inbounds %"class.v8::internal::Handle", %"class.v8::internal::Handle"* %162, i64 7
  %199 = bitcast %"class.v8::internal::Handle"* %198 to i64*
  %200 = bitcast %"class.v8::internal::Handle"* %197 to i64*
  %201 = load i64, i64* %200, align 8
  store i64 %201, i64* %199, align 8
  %202 = getelementptr inbounds %"class.v8::internal::Handle", %"class.v8::internal::Handle"* %163, i64 8
  %203 = getelementptr inbounds %"class.v8::internal::Handle", %"class.v8::internal::Handle"* %162, i64 8
  %204 = icmp eq %"class.v8::internal::Handle"* %202, %3
  br i1 %204, label %205, label %161, !llvm.loop !18

205:                                              ; preds = %156, %161, %132
  %206 = phi %"class.v8::internal::Handle"* [ %55, %132 ], [ %157, %156 ], [ %203, %161 ]
  %207 = ptrtoint %"class.v8::internal::Handle"* %206 to i64
  br label %208

208:                                              ; preds = %205, %28
  %209 = phi i64 [ %19, %28 ], [ %207, %205 ]
  store i64 %209, i64* %23, align 8
  %210 = icmp sgt i64 %25, 0
  br i1 %210, label %211, label %846

211:                                              ; preds = %208
  %212 = inttoptr i64 %209 to %"class.v8::internal::Handle"*
  br label %213

213:                                              ; preds = %211, %24
  %214 = phi i64 [ %209, %211 ], [ %19, %24 ]
  %215 = phi %"class.v8::internal::Handle"* [ %212, %211 ], [ %18, %24 ]
  %216 = phi %"class.v8::internal::Handle"* [ %29, %211 ], [ %3, %24 ]
  %217 = getelementptr inbounds %"class.v8::internal::Handle", %"class.v8::internal::Handle"* %1, i64 %11
  %218 = ptrtoint %"class.v8::internal::Handle"* %217 to i64
  %219 = sub i64 %214, %218
  %220 = ashr exact i64 %219, 3
  %221 = getelementptr inbounds %"class.v8::internal::Handle", %"class.v8::internal::Handle"* %1, i64 %220
  %222 = icmp ult %"class.v8::internal::Handle"* %221, %18
  br i1 %222, label %223, label %336

223:                                              ; preds = %213
  %224 = sub nsw i64 0, %220
  %225 = getelementptr %"class.v8::internal::Handle", %"class.v8::internal::Handle"* %18, i64 %224, i32 0, i32 0
  %226 = bitcast i64** %225 to i8*
  %227 = xor i64 %6, -1
  %228 = getelementptr i8, i8* %226, i64 %227
  %229 = ptrtoint i8* %228 to i64
  %230 = lshr i64 %229, 3
  %231 = add nuw nsw i64 %230, 1
  %232 = icmp ult i64 %231, 4
  br i1 %232, label %233, label %236

233:                                              ; preds = %331, %236, %223
  %234 = phi %"class.v8::internal::Handle"* [ %215, %236 ], [ %215, %223 ], [ %254, %331 ]
  %235 = phi %"class.v8::internal::Handle"* [ %221, %236 ], [ %221, %223 ], [ %255, %331 ]
  br label %344

236:                                              ; preds = %223
  %237 = sub nsw i64 0, %220
  %238 = getelementptr %"class.v8::internal::Handle", %"class.v8::internal::Handle"* %18, i64 %237, i32 0, i32 0
  %239 = bitcast i64** %238 to i8*
  %240 = xor i64 %6, -1
  %241 = getelementptr i8, i8* %239, i64 %240
  %242 = ptrtoint i8* %241 to i64
  %243 = lshr i64 %242, 3
  %244 = add nuw nsw i64 %243, 1
  %245 = getelementptr %"class.v8::internal::Handle", %"class.v8::internal::Handle"* %215, i64 %244
  %246 = add nsw i64 %220, %243
  %247 = add nsw i64 %246, 1
  %248 = getelementptr %"class.v8::internal::Handle", %"class.v8::internal::Handle"* %1, i64 %247
  %249 = icmp ult %"class.v8::internal::Handle"* %215, %248
  %250 = icmp ult %"class.v8::internal::Handle"* %221, %245
  %251 = and i1 %249, %250
  br i1 %251, label %233, label %252

252:                                              ; preds = %236
  %253 = and i64 %231, 4611686018427387900
  %254 = getelementptr %"class.v8::internal::Handle", %"class.v8::internal::Handle"* %215, i64 %253
  %255 = getelementptr %"class.v8::internal::Handle", %"class.v8::internal::Handle"* %221, i64 %253
  %256 = add nsw i64 %253, -4
  %257 = lshr exact i64 %256, 2
  %258 = add nuw nsw i64 %257, 1
  %259 = and i64 %258, 3
  %260 = icmp ult i64 %256, 12
  br i1 %260, label %312, label %261

261:                                              ; preds = %252
  %262 = sub nsw i64 %258, %259
  br label %263

263:                                              ; preds = %263, %261
  %264 = phi i64 [ 0, %261 ], [ %309, %263 ]
  %265 = phi i64 [ %262, %261 ], [ %310, %263 ]
  %266 = getelementptr %"class.v8::internal::Handle", %"class.v8::internal::Handle"* %215, i64 %264
  %267 = getelementptr %"class.v8::internal::Handle", %"class.v8::internal::Handle"* %221, i64 %264
  %268 = bitcast %"class.v8::internal::Handle"* %267 to <2 x i64>*
  %269 = load <2 x i64>, <2 x i64>* %268, align 8, !alias.scope !19
  %270 = getelementptr %"class.v8::internal::Handle", %"class.v8::internal::Handle"* %267, i64 2
  %271 = bitcast %"class.v8::internal::Handle"* %270 to <2 x i64>*
  %272 = load <2 x i64>, <2 x i64>* %271, align 8, !alias.scope !19
  %273 = bitcast %"class.v8::internal::Handle"* %266 to <2 x i64>*
  store <2 x i64> %269, <2 x i64>* %273, align 8, !alias.scope !22, !noalias !19
  %274 = getelementptr %"class.v8::internal::Handle", %"class.v8::internal::Handle"* %266, i64 2
  %275 = bitcast %"class.v8::internal::Handle"* %274 to <2 x i64>*
  store <2 x i64> %272, <2 x i64>* %275, align 8, !alias.scope !22, !noalias !19
  %276 = or i64 %264, 4
  %277 = getelementptr %"class.v8::internal::Handle", %"class.v8::internal::Handle"* %215, i64 %276
  %278 = getelementptr %"class.v8::internal::Handle", %"class.v8::internal::Handle"* %221, i64 %276
  %279 = bitcast %"class.v8::internal::Handle"* %278 to <2 x i64>*
  %280 = load <2 x i64>, <2 x i64>* %279, align 8, !alias.scope !19
  %281 = getelementptr %"class.v8::internal::Handle", %"class.v8::internal::Handle"* %278, i64 2
  %282 = bitcast %"class.v8::internal::Handle"* %281 to <2 x i64>*
  %283 = load <2 x i64>, <2 x i64>* %282, align 8, !alias.scope !19
  %284 = bitcast %"class.v8::internal::Handle"* %277 to <2 x i64>*
  store <2 x i64> %280, <2 x i64>* %284, align 8, !alias.scope !22, !noalias !19
  %285 = getelementptr %"class.v8::internal::Handle", %"class.v8::internal::Handle"* %277, i64 2
  %286 = bitcast %"class.v8::internal::Handle"* %285 to <2 x i64>*
  store <2 x i64> %283, <2 x i64>* %286, align 8, !alias.scope !22, !noalias !19
  %287 = or i64 %264, 8
  %288 = getelementptr %"class.v8::internal::Handle", %"class.v8::internal::Handle"* %215, i64 %287
  %289 = getelementptr %"class.v8::internal::Handle", %"class.v8::internal::Handle"* %221, i64 %287
  %290 = bitcast %"class.v8::internal::Handle"* %289 to <2 x i64>*
  %291 = load <2 x i64>, <2 x i64>* %290, align 8, !alias.scope !19
  %292 = getelementptr %"class.v8::internal::Handle", %"class.v8::internal::Handle"* %289, i64 2
  %293 = bitcast %"class.v8::internal::Handle"* %292 to <2 x i64>*
  %294 = load <2 x i64>, <2 x i64>* %293, align 8, !alias.scope !19
  %295 = bitcast %"class.v8::internal::Handle"* %288 to <2 x i64>*
  store <2 x i64> %291, <2 x i64>* %295, align 8, !alias.scope !22, !noalias !19
  %296 = getelementptr %"class.v8::internal::Handle", %"class.v8::internal::Handle"* %288, i64 2
  %297 = bitcast %"class.v8::internal::Handle"* %296 to <2 x i64>*
  store <2 x i64> %294, <2 x i64>* %297, align 8, !alias.scope !22, !noalias !19
  %298 = or i64 %264, 12
  %299 = getelementptr %"class.v8::internal::Handle", %"class.v8::internal::Handle"* %215, i64 %298
  %300 = getelementptr %"class.v8::internal::Handle", %"class.v8::internal::Handle"* %221, i64 %298
  %301 = bitcast %"class.v8::internal::Handle"* %300 to <2 x i64>*
  %302 = load <2 x i64>, <2 x i64>* %301, align 8, !alias.scope !19
  %303 = getelementptr %"class.v8::internal::Handle", %"class.v8::internal::Handle"* %300, i64 2
  %304 = bitcast %"class.v8::internal::Handle"* %303 to <2 x i64>*
  %305 = load <2 x i64>, <2 x i64>* %304, align 8, !alias.scope !19
  %306 = bitcast %"class.v8::internal::Handle"* %299 to <2 x i64>*
  store <2 x i64> %302, <2 x i64>* %306, align 8, !alias.scope !22, !noalias !19
  %307 = getelementptr %"class.v8::internal::Handle", %"class.v8::internal::Handle"* %299, i64 2
  %308 = bitcast %"class.v8::internal::Handle"* %307 to <2 x i64>*
  store <2 x i64> %305, <2 x i64>* %308, align 8, !alias.scope !22, !noalias !19
  %309 = add i64 %264, 16
  %310 = add i64 %265, -4
  %311 = icmp eq i64 %310, 0
  br i1 %311, label %312, label %263, !llvm.loop !24

312:                                              ; preds = %263, %252
  %313 = phi i64 [ 0, %252 ], [ %309, %263 ]
  %314 = icmp eq i64 %259, 0
  br i1 %314, label %331, label %315

315:                                              ; preds = %312, %315
  %316 = phi i64 [ %328, %315 ], [ %313, %312 ]
  %317 = phi i64 [ %329, %315 ], [ %259, %312 ]
  %318 = getelementptr %"class.v8::internal::Handle", %"class.v8::internal::Handle"* %215, i64 %316
  %319 = getelementptr %"class.v8::internal::Handle", %"class.v8::internal::Handle"* %221, i64 %316
  %320 = bitcast %"class.v8::internal::Handle"* %319 to <2 x i64>*
  %321 = load <2 x i64>, <2 x i64>* %320, align 8, !alias.scope !19
  %322 = getelementptr %"class.v8::internal::Handle", %"class.v8::internal::Handle"* %319, i64 2
  %323 = bitcast %"class.v8::internal::Handle"* %322 to <2 x i64>*
  %324 = load <2 x i64>, <2 x i64>* %323, align 8, !alias.scope !19
  %325 = bitcast %"class.v8::internal::Handle"* %318 to <2 x i64>*
  store <2 x i64> %321, <2 x i64>* %325, align 8, !alias.scope !22, !noalias !19
  %326 = getelementptr %"class.v8::internal::Handle", %"class.v8::internal::Handle"* %318, i64 2
  %327 = bitcast %"class.v8::internal::Handle"* %326 to <2 x i64>*
  store <2 x i64> %324, <2 x i64>* %327, align 8, !alias.scope !22, !noalias !19
  %328 = add i64 %316, 4
  %329 = add i64 %317, -1
  %330 = icmp eq i64 %329, 0
  br i1 %330, label %331, label %315, !llvm.loop !25

331:                                              ; preds = %315, %312
  %332 = icmp eq i64 %231, %253
  br i1 %332, label %333, label %233

333:                                              ; preds = %344, %331
  %334 = phi %"class.v8::internal::Handle"* [ %254, %331 ], [ %351, %344 ]
  %335 = ptrtoint %"class.v8::internal::Handle"* %334 to i64
  br label %336

336:                                              ; preds = %333, %213
  %337 = phi i64 [ %335, %333 ], [ %214, %213 ]
  store i64 %337, i64* %23, align 8
  %338 = icmp eq i64 %219, 0
  br i1 %338, label %353, label %339

339:                                              ; preds = %336
  %340 = sub nsw i64 0, %220
  %341 = getelementptr inbounds %"class.v8::internal::Handle", %"class.v8::internal::Handle"* %215, i64 %340
  %342 = bitcast %"class.v8::internal::Handle"* %341 to i8*
  %343 = bitcast %"class.v8::internal::Handle"* %1 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %342, i8* align 8 %343, i64 %219, i1 false) #8
  br label %353

344:                                              ; preds = %233, %344
  %345 = phi %"class.v8::internal::Handle"* [ %351, %344 ], [ %234, %233 ]
  %346 = phi %"class.v8::internal::Handle"* [ %350, %344 ], [ %235, %233 ]
  %347 = bitcast %"class.v8::internal::Handle"* %346 to i64*
  %348 = bitcast %"class.v8::internal::Handle"* %345 to i64*
  %349 = load i64, i64* %347, align 8
  store i64 %349, i64* %348, align 8
  %350 = getelementptr inbounds %"class.v8::internal::Handle", %"class.v8::internal::Handle"* %346, i64 1
  %351 = getelementptr inbounds %"class.v8::internal::Handle", %"class.v8::internal::Handle"* %345, i64 1
  %352 = icmp ult %"class.v8::internal::Handle"* %350, %18
  br i1 %352, label %344, label %333, !llvm.loop !26

353:                                              ; preds = %336, %339
  %354 = ptrtoint %"class.v8::internal::Handle"* %216 to i64
  %355 = sub i64 %354, %7
  %356 = icmp eq i64 %355, 0
  br i1 %356, label %846, label %357

357:                                              ; preds = %353
  %358 = bitcast %"class.v8::internal::Handle"* %2 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %5, i8* align 8 %358, i64 %355, i1 false) #8
  br label %846

359:                                              ; preds = %13
  %360 = bitcast %"class.std::__1::vector"* %0 to i64*
  %361 = load i64, i64* %360, align 8
  %362 = sub i64 %19, %361
  %363 = ashr exact i64 %362, 3
  %364 = add nsw i64 %363, %11
  %365 = icmp ugt i64 %364, 268435455
  br i1 %365, label %366, label %368

366:                                              ; preds = %359
  %367 = bitcast %"class.std::__1::vector"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %367) #12
  unreachable

368:                                              ; preds = %359
  %369 = sub i64 %16, %361
  %370 = ashr exact i64 %369, 3
  %371 = icmp ult i64 %370, 134217727
  br i1 %371, label %375, label %372

372:                                              ; preds = %368
  %373 = sub i64 %6, %361
  %374 = ashr exact i64 %373, 3
  br label %382

375:                                              ; preds = %368
  %376 = ashr exact i64 %369, 2
  %377 = icmp ult i64 %376, %364
  %378 = select i1 %377, i64 %364, i64 %376
  %379 = sub i64 %6, %361
  %380 = ashr exact i64 %379, 3
  %381 = icmp eq i64 %378, 0
  br i1 %381, label %401, label %382

382:                                              ; preds = %372, %375
  %383 = phi i64 [ %374, %372 ], [ %380, %375 ]
  %384 = phi i64 [ 268435455, %372 ], [ %378, %375 ]
  %385 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 2, i32 1, i32 0, i32 0
  %386 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %385, align 8
  %387 = shl i64 %384, 3
  %388 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %386, i64 0, i32 2
  %389 = load i64, i64* %388, align 8
  %390 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %386, i64 0, i32 3
  %391 = load i64, i64* %390, align 8
  %392 = sub i64 %391, %389
  %393 = icmp ugt i64 %387, %392
  br i1 %393, label %394, label %396, !prof !2

394:                                              ; preds = %382
  %395 = tail call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %386, i64 %387) #8
  br label %398

396:                                              ; preds = %382
  %397 = add i64 %389, %387
  store i64 %397, i64* %388, align 8
  br label %398

398:                                              ; preds = %396, %394
  %399 = phi i64 [ %395, %394 ], [ %389, %396 ]
  %400 = inttoptr i64 %399 to %"class.v8::internal::Handle"*
  br label %401

401:                                              ; preds = %398, %375
  %402 = phi i64 [ %383, %398 ], [ %380, %375 ]
  %403 = phi i64 [ %384, %398 ], [ 0, %375 ]
  %404 = phi %"class.v8::internal::Handle"* [ %400, %398 ], [ null, %375 ]
  %405 = getelementptr inbounds %"class.v8::internal::Handle", %"class.v8::internal::Handle"* %404, i64 %402
  %406 = ptrtoint %"class.v8::internal::Handle"* %405 to i64
  %407 = getelementptr inbounds %"class.v8::internal::Handle", %"class.v8::internal::Handle"* %404, i64 %403
  %408 = ptrtoint %"class.v8::internal::Handle"* %407 to i64
  %409 = getelementptr inbounds %"class.v8::internal::Handle", %"class.v8::internal::Handle"* %405, i64 %11
  %410 = add i64 %10, -8
  %411 = lshr i64 %410, 3
  %412 = add nuw nsw i64 %411, 1
  %413 = and i64 %412, 7
  %414 = icmp eq i64 %413, 0
  br i1 %414, label %430, label %415

415:                                              ; preds = %401, %415
  %416 = phi %"class.v8::internal::Handle"* [ %423, %415 ], [ %405, %401 ]
  %417 = phi i64 [ %424, %415 ], [ %406, %401 ]
  %418 = phi %"class.v8::internal::Handle"* [ %425, %415 ], [ %2, %401 ]
  %419 = phi i64 [ %426, %415 ], [ %413, %401 ]
  %420 = bitcast %"class.v8::internal::Handle"* %418 to i64*
  %421 = inttoptr i64 %417 to i64*
  %422 = load i64, i64* %420, align 8
  store i64 %422, i64* %421, align 8
  %423 = getelementptr inbounds %"class.v8::internal::Handle", %"class.v8::internal::Handle"* %416, i64 1
  %424 = ptrtoint %"class.v8::internal::Handle"* %423 to i64
  %425 = getelementptr inbounds %"class.v8::internal::Handle", %"class.v8::internal::Handle"* %418, i64 1
  %426 = add i64 %419, -1
  %427 = icmp eq i64 %426, 0
  br i1 %427, label %428, label %415, !llvm.loop !27

428:                                              ; preds = %415
  %429 = ptrtoint %"class.v8::internal::Handle"* %423 to i64
  br label %430

430:                                              ; preds = %401, %428
  %431 = phi %"class.v8::internal::Handle"* [ %405, %401 ], [ %423, %428 ]
  %432 = phi i64 [ %406, %401 ], [ %429, %428 ]
  %433 = phi %"class.v8::internal::Handle"* [ %2, %401 ], [ %425, %428 ]
  %434 = icmp ult i64 %410, 56
  br i1 %434, label %481, label %435

435:                                              ; preds = %430, %435
  %436 = phi %"class.v8::internal::Handle"* [ %477, %435 ], [ %431, %430 ]
  %437 = phi i64 [ %478, %435 ], [ %432, %430 ]
  %438 = phi %"class.v8::internal::Handle"* [ %479, %435 ], [ %433, %430 ]
  %439 = bitcast %"class.v8::internal::Handle"* %438 to i64*
  %440 = inttoptr i64 %437 to i64*
  %441 = load i64, i64* %439, align 8
  store i64 %441, i64* %440, align 8
  %442 = getelementptr inbounds %"class.v8::internal::Handle", %"class.v8::internal::Handle"* %436, i64 1
  %443 = getelementptr inbounds %"class.v8::internal::Handle", %"class.v8::internal::Handle"* %438, i64 1
  %444 = bitcast %"class.v8::internal::Handle"* %443 to i64*
  %445 = bitcast %"class.v8::internal::Handle"* %442 to i64*
  %446 = load i64, i64* %444, align 8
  store i64 %446, i64* %445, align 8
  %447 = getelementptr inbounds %"class.v8::internal::Handle", %"class.v8::internal::Handle"* %436, i64 2
  %448 = getelementptr inbounds %"class.v8::internal::Handle", %"class.v8::internal::Handle"* %438, i64 2
  %449 = bitcast %"class.v8::internal::Handle"* %448 to i64*
  %450 = bitcast %"class.v8::internal::Handle"* %447 to i64*
  %451 = load i64, i64* %449, align 8
  store i64 %451, i64* %450, align 8
  %452 = getelementptr inbounds %"class.v8::internal::Handle", %"class.v8::internal::Handle"* %436, i64 3
  %453 = getelementptr inbounds %"class.v8::internal::Handle", %"class.v8::internal::Handle"* %438, i64 3
  %454 = bitcast %"class.v8::internal::Handle"* %453 to i64*
  %455 = bitcast %"class.v8::internal::Handle"* %452 to i64*
  %456 = load i64, i64* %454, align 8
  store i64 %456, i64* %455, align 8
  %457 = getelementptr inbounds %"class.v8::internal::Handle", %"class.v8::internal::Handle"* %436, i64 4
  %458 = getelementptr inbounds %"class.v8::internal::Handle", %"class.v8::internal::Handle"* %438, i64 4
  %459 = bitcast %"class.v8::internal::Handle"* %458 to i64*
  %460 = bitcast %"class.v8::internal::Handle"* %457 to i64*
  %461 = load i64, i64* %459, align 8
  store i64 %461, i64* %460, align 8
  %462 = getelementptr inbounds %"class.v8::internal::Handle", %"class.v8::internal::Handle"* %436, i64 5
  %463 = getelementptr inbounds %"class.v8::internal::Handle", %"class.v8::internal::Handle"* %438, i64 5
  %464 = bitcast %"class.v8::internal::Handle"* %463 to i64*
  %465 = bitcast %"class.v8::internal::Handle"* %462 to i64*
  %466 = load i64, i64* %464, align 8
  store i64 %466, i64* %465, align 8
  %467 = getelementptr inbounds %"class.v8::internal::Handle", %"class.v8::internal::Handle"* %436, i64 6
  %468 = getelementptr inbounds %"class.v8::internal::Handle", %"class.v8::internal::Handle"* %438, i64 6
  %469 = bitcast %"class.v8::internal::Handle"* %468 to i64*
  %470 = bitcast %"class.v8::internal::Handle"* %467 to i64*
  %471 = load i64, i64* %469, align 8
  store i64 %471, i64* %470, align 8
  %472 = getelementptr inbounds %"class.v8::internal::Handle", %"class.v8::internal::Handle"* %436, i64 7
  %473 = getelementptr inbounds %"class.v8::internal::Handle", %"class.v8::internal::Handle"* %438, i64 7
  %474 = bitcast %"class.v8::internal::Handle"* %473 to i64*
  %475 = bitcast %"class.v8::internal::Handle"* %472 to i64*
  %476 = load i64, i64* %474, align 8
  store i64 %476, i64* %475, align 8
  %477 = getelementptr inbounds %"class.v8::internal::Handle", %"class.v8::internal::Handle"* %436, i64 8
  %478 = ptrtoint %"class.v8::internal::Handle"* %477 to i64
  %479 = getelementptr inbounds %"class.v8::internal::Handle", %"class.v8::internal::Handle"* %438, i64 8
  %480 = icmp eq %"class.v8::internal::Handle"* %409, %477
  br i1 %480, label %481, label %435

481:                                              ; preds = %435, %430
  %482 = load %"class.v8::internal::Handle"*, %"class.v8::internal::Handle"** %8, align 8
  %483 = ptrtoint %"class.v8::internal::Handle"* %482 to i64
  %484 = icmp eq %"class.v8::internal::Handle"* %482, %1
  br i1 %484, label %657, label %485

485:                                              ; preds = %481
  %486 = getelementptr %"class.v8::internal::Handle", %"class.v8::internal::Handle"* %1, i64 -1, i32 0, i32 0
  %487 = ptrtoint i64** %486 to i64
  %488 = sub i64 %487, %483
  %489 = lshr i64 %488, 3
  %490 = add nuw nsw i64 %489, 1
  %491 = icmp ult i64 %490, 4
  br i1 %491, label %584, label %492

492:                                              ; preds = %485
  %493 = getelementptr %"class.v8::internal::Handle", %"class.v8::internal::Handle"* %1, i64 -1, i32 0, i32 0
  %494 = ptrtoint i64** %493 to i64
  %495 = sub i64 %494, %483
  %496 = lshr i64 %495, 3
  %497 = xor i64 %496, -1
  %498 = add nsw i64 %402, %497
  %499 = getelementptr %"class.v8::internal::Handle", %"class.v8::internal::Handle"* %404, i64 %498
  %500 = xor i64 %496, -1
  %501 = getelementptr %"class.v8::internal::Handle", %"class.v8::internal::Handle"* %1, i64 %500
  %502 = icmp ult %"class.v8::internal::Handle"* %499, %1
  %503 = icmp ult %"class.v8::internal::Handle"* %501, %405
  %504 = and i1 %502, %503
  br i1 %504, label %584, label %505

505:                                              ; preds = %492
  %506 = and i64 %490, 4611686018427387900
  %507 = sub nsw i64 0, %506
  %508 = getelementptr %"class.v8::internal::Handle", %"class.v8::internal::Handle"* %405, i64 %507
  %509 = sub nsw i64 0, %506
  %510 = getelementptr %"class.v8::internal::Handle", %"class.v8::internal::Handle"* %1, i64 %509
  %511 = add nsw i64 %506, -4
  %512 = lshr exact i64 %511, 2
  %513 = add nuw nsw i64 %512, 1
  %514 = and i64 %513, 1
  %515 = icmp eq i64 %511, 0
  br i1 %515, label %560, label %516

516:                                              ; preds = %505
  %517 = sub nuw nsw i64 %513, %514
  %518 = getelementptr %"class.v8::internal::Handle", %"class.v8::internal::Handle"* %405, i64 -1
  %519 = getelementptr %"class.v8::internal::Handle", %"class.v8::internal::Handle"* %1, i64 -1
  %520 = getelementptr %"class.v8::internal::Handle", %"class.v8::internal::Handle"* %405, i64 -1
  %521 = getelementptr %"class.v8::internal::Handle", %"class.v8::internal::Handle"* %1, i64 -1
  br label %522

522:                                              ; preds = %522, %516
  %523 = phi i64 [ 0, %516 ], [ %557, %522 ]
  %524 = phi i64 [ %517, %516 ], [ %558, %522 ]
  %525 = sub i64 0, %523
  %526 = sub i64 0, %523
  %527 = getelementptr inbounds %"class.v8::internal::Handle", %"class.v8::internal::Handle"* %518, i64 %525
  %528 = getelementptr inbounds %"class.v8::internal::Handle", %"class.v8::internal::Handle"* %519, i64 %526
  %529 = getelementptr inbounds %"class.v8::internal::Handle", %"class.v8::internal::Handle"* %528, i64 -1
  %530 = bitcast %"class.v8::internal::Handle"* %529 to <2 x i64>*
  %531 = load <2 x i64>, <2 x i64>* %530, align 8, !alias.scope !28
  %532 = getelementptr inbounds %"class.v8::internal::Handle", %"class.v8::internal::Handle"* %528, i64 -2
  %533 = getelementptr inbounds %"class.v8::internal::Handle", %"class.v8::internal::Handle"* %532, i64 -1
  %534 = bitcast %"class.v8::internal::Handle"* %533 to <2 x i64>*
  %535 = load <2 x i64>, <2 x i64>* %534, align 8, !alias.scope !28
  %536 = getelementptr inbounds %"class.v8::internal::Handle", %"class.v8::internal::Handle"* %527, i64 -1
  %537 = bitcast %"class.v8::internal::Handle"* %536 to <2 x i64>*
  store <2 x i64> %531, <2 x i64>* %537, align 8, !alias.scope !31, !noalias !28
  %538 = getelementptr inbounds %"class.v8::internal::Handle", %"class.v8::internal::Handle"* %527, i64 -2
  %539 = getelementptr inbounds %"class.v8::internal::Handle", %"class.v8::internal::Handle"* %538, i64 -1
  %540 = bitcast %"class.v8::internal::Handle"* %539 to <2 x i64>*
  store <2 x i64> %535, <2 x i64>* %540, align 8, !alias.scope !31, !noalias !28
  %541 = sub nuw nsw i64 -4, %523
  %542 = sub nuw nsw i64 -4, %523
  %543 = getelementptr inbounds %"class.v8::internal::Handle", %"class.v8::internal::Handle"* %520, i64 %541
  %544 = getelementptr inbounds %"class.v8::internal::Handle", %"class.v8::internal::Handle"* %521, i64 %542
  %545 = getelementptr inbounds %"class.v8::internal::Handle", %"class.v8::internal::Handle"* %544, i64 -1
  %546 = bitcast %"class.v8::internal::Handle"* %545 to <2 x i64>*
  %547 = load <2 x i64>, <2 x i64>* %546, align 8, !alias.scope !28
  %548 = getelementptr inbounds %"class.v8::internal::Handle", %"class.v8::internal::Handle"* %544, i64 -2
  %549 = getelementptr inbounds %"class.v8::internal::Handle", %"class.v8::internal::Handle"* %548, i64 -1
  %550 = bitcast %"class.v8::internal::Handle"* %549 to <2 x i64>*
  %551 = load <2 x i64>, <2 x i64>* %550, align 8, !alias.scope !28
  %552 = getelementptr inbounds %"class.v8::internal::Handle", %"class.v8::internal::Handle"* %543, i64 -1
  %553 = bitcast %"class.v8::internal::Handle"* %552 to <2 x i64>*
  store <2 x i64> %547, <2 x i64>* %553, align 8, !alias.scope !31, !noalias !28
  %554 = getelementptr inbounds %"class.v8::internal::Handle", %"class.v8::internal::Handle"* %543, i64 -2
  %555 = getelementptr inbounds %"class.v8::internal::Handle", %"class.v8::internal::Handle"* %554, i64 -1
  %556 = bitcast %"class.v8::internal::Handle"* %555 to <2 x i64>*
  store <2 x i64> %551, <2 x i64>* %556, align 8, !alias.scope !31, !noalias !28
  %557 = add i64 %523, 8
  %558 = add i64 %524, -2
  %559 = icmp eq i64 %558, 0
  br i1 %559, label %560, label %522, !llvm.loop !33

560:                                              ; preds = %522, %505
  %561 = phi i64 [ 0, %505 ], [ %557, %522 ]
  %562 = icmp eq i64 %514, 0
  br i1 %562, label %582, label %563

563:                                              ; preds = %560
  %564 = sub i64 0, %561
  %565 = getelementptr %"class.v8::internal::Handle", %"class.v8::internal::Handle"* %405, i64 -1
  %566 = sub i64 0, %561
  %567 = getelementptr %"class.v8::internal::Handle", %"class.v8::internal::Handle"* %1, i64 -1
  %568 = getelementptr inbounds %"class.v8::internal::Handle", %"class.v8::internal::Handle"* %565, i64 %564
  %569 = getelementptr inbounds %"class.v8::internal::Handle", %"class.v8::internal::Handle"* %567, i64 %566
  %570 = getelementptr inbounds %"class.v8::internal::Handle", %"class.v8::internal::Handle"* %569, i64 -1
  %571 = bitcast %"class.v8::internal::Handle"* %570 to <2 x i64>*
  %572 = load <2 x i64>, <2 x i64>* %571, align 8, !alias.scope !28
  %573 = getelementptr inbounds %"class.v8::internal::Handle", %"class.v8::internal::Handle"* %569, i64 -2
  %574 = getelementptr inbounds %"class.v8::internal::Handle", %"class.v8::internal::Handle"* %573, i64 -1
  %575 = bitcast %"class.v8::internal::Handle"* %574 to <2 x i64>*
  %576 = load <2 x i64>, <2 x i64>* %575, align 8, !alias.scope !28
  %577 = getelementptr inbounds %"class.v8::internal::Handle", %"class.v8::internal::Handle"* %568, i64 -1
  %578 = bitcast %"class.v8::internal::Handle"* %577 to <2 x i64>*
  store <2 x i64> %572, <2 x i64>* %578, align 8, !alias.scope !31, !noalias !28
  %579 = getelementptr inbounds %"class.v8::internal::Handle", %"class.v8::internal::Handle"* %568, i64 -2
  %580 = getelementptr inbounds %"class.v8::internal::Handle", %"class.v8::internal::Handle"* %579, i64 -1
  %581 = bitcast %"class.v8::internal::Handle"* %580 to <2 x i64>*
  store <2 x i64> %576, <2 x i64>* %581, align 8, !alias.scope !31, !noalias !28
  br label %582

582:                                              ; preds = %560, %563
  %583 = icmp eq i64 %490, %506
  br i1 %583, label %654, label %584

584:                                              ; preds = %582, %492, %485
  %585 = phi %"class.v8::internal::Handle"* [ %405, %492 ], [ %405, %485 ], [ %508, %582 ]
  %586 = phi %"class.v8::internal::Handle"* [ %1, %492 ], [ %1, %485 ], [ %510, %582 ]
  %587 = getelementptr %"class.v8::internal::Handle", %"class.v8::internal::Handle"* %586, i64 -1, i32 0, i32 0
  %588 = ptrtoint i64** %587 to i64
  %589 = sub i64 %588, %483
  %590 = lshr i64 %589, 3
  %591 = add nuw nsw i64 %590, 1
  %592 = and i64 %591, 7
  %593 = icmp eq i64 %592, 0
  br i1 %593, label %605, label %594

594:                                              ; preds = %584, %594
  %595 = phi %"class.v8::internal::Handle"* [ %598, %594 ], [ %585, %584 ]
  %596 = phi %"class.v8::internal::Handle"* [ %599, %594 ], [ %586, %584 ]
  %597 = phi i64 [ %603, %594 ], [ %592, %584 ]
  %598 = getelementptr inbounds %"class.v8::internal::Handle", %"class.v8::internal::Handle"* %595, i64 -1
  %599 = getelementptr inbounds %"class.v8::internal::Handle", %"class.v8::internal::Handle"* %596, i64 -1
  %600 = bitcast %"class.v8::internal::Handle"* %599 to i64*
  %601 = bitcast %"class.v8::internal::Handle"* %598 to i64*
  %602 = load i64, i64* %600, align 8
  store i64 %602, i64* %601, align 8
  %603 = add i64 %597, -1
  %604 = icmp eq i64 %603, 0
  br i1 %604, label %605, label %594, !llvm.loop !34

605:                                              ; preds = %594, %584
  %606 = phi %"class.v8::internal::Handle"* [ undef, %584 ], [ %598, %594 ]
  %607 = phi %"class.v8::internal::Handle"* [ %585, %584 ], [ %598, %594 ]
  %608 = phi %"class.v8::internal::Handle"* [ %586, %584 ], [ %599, %594 ]
  %609 = icmp ult i64 %589, 56
  br i1 %609, label %654, label %610

610:                                              ; preds = %605, %610
  %611 = phi %"class.v8::internal::Handle"* [ %648, %610 ], [ %607, %605 ]
  %612 = phi %"class.v8::internal::Handle"* [ %649, %610 ], [ %608, %605 ]
  %613 = getelementptr inbounds %"class.v8::internal::Handle", %"class.v8::internal::Handle"* %611, i64 -1
  %614 = getelementptr inbounds %"class.v8::internal::Handle", %"class.v8::internal::Handle"* %612, i64 -1
  %615 = bitcast %"class.v8::internal::Handle"* %614 to i64*
  %616 = bitcast %"class.v8::internal::Handle"* %613 to i64*
  %617 = load i64, i64* %615, align 8
  store i64 %617, i64* %616, align 8
  %618 = getelementptr inbounds %"class.v8::internal::Handle", %"class.v8::internal::Handle"* %611, i64 -2
  %619 = getelementptr inbounds %"class.v8::internal::Handle", %"class.v8::internal::Handle"* %612, i64 -2
  %620 = bitcast %"class.v8::internal::Handle"* %619 to i64*
  %621 = bitcast %"class.v8::internal::Handle"* %618 to i64*
  %622 = load i64, i64* %620, align 8
  store i64 %622, i64* %621, align 8
  %623 = getelementptr inbounds %"class.v8::internal::Handle", %"class.v8::internal::Handle"* %611, i64 -3
  %624 = getelementptr inbounds %"class.v8::internal::Handle", %"class.v8::internal::Handle"* %612, i64 -3
  %625 = bitcast %"class.v8::internal::Handle"* %624 to i64*
  %626 = bitcast %"class.v8::internal::Handle"* %623 to i64*
  %627 = load i64, i64* %625, align 8
  store i64 %627, i64* %626, align 8
  %628 = getelementptr inbounds %"class.v8::internal::Handle", %"class.v8::internal::Handle"* %611, i64 -4
  %629 = getelementptr inbounds %"class.v8::internal::Handle", %"class.v8::internal::Handle"* %612, i64 -4
  %630 = bitcast %"class.v8::internal::Handle"* %629 to i64*
  %631 = bitcast %"class.v8::internal::Handle"* %628 to i64*
  %632 = load i64, i64* %630, align 8
  store i64 %632, i64* %631, align 8
  %633 = getelementptr inbounds %"class.v8::internal::Handle", %"class.v8::internal::Handle"* %611, i64 -5
  %634 = getelementptr inbounds %"class.v8::internal::Handle", %"class.v8::internal::Handle"* %612, i64 -5
  %635 = bitcast %"class.v8::internal::Handle"* %634 to i64*
  %636 = bitcast %"class.v8::internal::Handle"* %633 to i64*
  %637 = load i64, i64* %635, align 8
  store i64 %637, i64* %636, align 8
  %638 = getelementptr inbounds %"class.v8::internal::Handle", %"class.v8::internal::Handle"* %611, i64 -6
  %639 = getelementptr inbounds %"class.v8::internal::Handle", %"class.v8::internal::Handle"* %612, i64 -6
  %640 = bitcast %"class.v8::internal::Handle"* %639 to i64*
  %641 = bitcast %"class.v8::internal::Handle"* %638 to i64*
  %642 = load i64, i64* %640, align 8
  store i64 %642, i64* %641, align 8
  %643 = getelementptr inbounds %"class.v8::internal::Handle", %"class.v8::internal::Handle"* %611, i64 -7
  %644 = getelementptr inbounds %"class.v8::internal::Handle", %"class.v8::internal::Handle"* %612, i64 -7
  %645 = bitcast %"class.v8::internal::Handle"* %644 to i64*
  %646 = bitcast %"class.v8::internal::Handle"* %643 to i64*
  %647 = load i64, i64* %645, align 8
  store i64 %647, i64* %646, align 8
  %648 = getelementptr inbounds %"class.v8::internal::Handle", %"class.v8::internal::Handle"* %611, i64 -8
  %649 = getelementptr inbounds %"class.v8::internal::Handle", %"class.v8::internal::Handle"* %612, i64 -8
  %650 = bitcast %"class.v8::internal::Handle"* %649 to i64*
  %651 = bitcast %"class.v8::internal::Handle"* %648 to i64*
  %652 = load i64, i64* %650, align 8
  store i64 %652, i64* %651, align 8
  %653 = icmp eq %"class.v8::internal::Handle"* %649, %482
  br i1 %653, label %654, label %610, !llvm.loop !35

654:                                              ; preds = %605, %610, %582
  %655 = phi %"class.v8::internal::Handle"* [ %508, %582 ], [ %606, %605 ], [ %648, %610 ]
  %656 = ptrtoint %"class.v8::internal::Handle"* %655 to i64
  br label %657

657:                                              ; preds = %654, %481
  %658 = phi i64 [ %406, %481 ], [ %656, %654 ]
  %659 = phi %"class.v8::internal::Handle"* [ %405, %481 ], [ %655, %654 ]
  %660 = load %"class.v8::internal::Handle"*, %"class.v8::internal::Handle"** %17, align 8
  %661 = icmp eq %"class.v8::internal::Handle"* %660, %1
  br i1 %661, label %662, label %664

662:                                              ; preds = %657
  %663 = ptrtoint %"class.v8::internal::Handle"* %659 to i64
  br label %842

664:                                              ; preds = %657
  %665 = getelementptr %"class.v8::internal::Handle", %"class.v8::internal::Handle"* %660, i64 -1, i32 0, i32 0
  %666 = ptrtoint i64** %665 to i64
  %667 = sub i64 %666, %6
  %668 = lshr i64 %667, 3
  %669 = add nuw nsw i64 %668, 1
  %670 = icmp ult i64 %669, 4
  br i1 %670, label %767, label %671

671:                                              ; preds = %664
  %672 = add nsw i64 %402, %11
  %673 = getelementptr %"class.v8::internal::Handle", %"class.v8::internal::Handle"* %660, i64 -1, i32 0, i32 0
  %674 = ptrtoint i64** %673 to i64
  %675 = sub i64 %674, %6
  %676 = lshr i64 %675, 3
  %677 = add nsw i64 %672, %676
  %678 = add nsw i64 %677, 1
  %679 = getelementptr %"class.v8::internal::Handle", %"class.v8::internal::Handle"* %404, i64 %678
  %680 = add nuw nsw i64 %676, 1
  %681 = getelementptr %"class.v8::internal::Handle", %"class.v8::internal::Handle"* %1, i64 %680
  %682 = icmp ult %"class.v8::internal::Handle"* %409, %681
  %683 = icmp ugt %"class.v8::internal::Handle"* %679, %1
  %684 = and i1 %682, %683
  br i1 %684, label %767, label %685

685:                                              ; preds = %671
  %686 = and i64 %669, 4611686018427387900
  %687 = getelementptr %"class.v8::internal::Handle", %"class.v8::internal::Handle"* %409, i64 %686
  %688 = getelementptr %"class.v8::internal::Handle", %"class.v8::internal::Handle"* %409, i64 %686
  %689 = getelementptr %"class.v8::internal::Handle", %"class.v8::internal::Handle"* %1, i64 %686
  %690 = add nsw i64 %686, -4
  %691 = lshr exact i64 %690, 2
  %692 = add nuw nsw i64 %691, 1
  %693 = and i64 %692, 3
  %694 = icmp ult i64 %690, 12
  br i1 %694, label %746, label %695

695:                                              ; preds = %685
  %696 = sub nsw i64 %692, %693
  br label %697

697:                                              ; preds = %697, %695
  %698 = phi i64 [ 0, %695 ], [ %743, %697 ]
  %699 = phi i64 [ %696, %695 ], [ %744, %697 ]
  %700 = getelementptr %"class.v8::internal::Handle", %"class.v8::internal::Handle"* %409, i64 %698
  %701 = getelementptr %"class.v8::internal::Handle", %"class.v8::internal::Handle"* %1, i64 %698
  %702 = bitcast %"class.v8::internal::Handle"* %701 to <2 x i64>*
  %703 = load <2 x i64>, <2 x i64>* %702, align 8, !alias.scope !36
  %704 = getelementptr %"class.v8::internal::Handle", %"class.v8::internal::Handle"* %701, i64 2
  %705 = bitcast %"class.v8::internal::Handle"* %704 to <2 x i64>*
  %706 = load <2 x i64>, <2 x i64>* %705, align 8, !alias.scope !36
  %707 = bitcast %"class.v8::internal::Handle"* %700 to <2 x i64>*
  store <2 x i64> %703, <2 x i64>* %707, align 8, !alias.scope !39, !noalias !36
  %708 = getelementptr %"class.v8::internal::Handle", %"class.v8::internal::Handle"* %700, i64 2
  %709 = bitcast %"class.v8::internal::Handle"* %708 to <2 x i64>*
  store <2 x i64> %706, <2 x i64>* %709, align 8, !alias.scope !39, !noalias !36
  %710 = or i64 %698, 4
  %711 = getelementptr %"class.v8::internal::Handle", %"class.v8::internal::Handle"* %409, i64 %710
  %712 = getelementptr %"class.v8::internal::Handle", %"class.v8::internal::Handle"* %1, i64 %710
  %713 = bitcast %"class.v8::internal::Handle"* %712 to <2 x i64>*
  %714 = load <2 x i64>, <2 x i64>* %713, align 8, !alias.scope !36
  %715 = getelementptr %"class.v8::internal::Handle", %"class.v8::internal::Handle"* %712, i64 2
  %716 = bitcast %"class.v8::internal::Handle"* %715 to <2 x i64>*
  %717 = load <2 x i64>, <2 x i64>* %716, align 8, !alias.scope !36
  %718 = bitcast %"class.v8::internal::Handle"* %711 to <2 x i64>*
  store <2 x i64> %714, <2 x i64>* %718, align 8, !alias.scope !39, !noalias !36
  %719 = getelementptr %"class.v8::internal::Handle", %"class.v8::internal::Handle"* %711, i64 2
  %720 = bitcast %"class.v8::internal::Handle"* %719 to <2 x i64>*
  store <2 x i64> %717, <2 x i64>* %720, align 8, !alias.scope !39, !noalias !36
  %721 = or i64 %698, 8
  %722 = getelementptr %"class.v8::internal::Handle", %"class.v8::internal::Handle"* %409, i64 %721
  %723 = getelementptr %"class.v8::internal::Handle", %"class.v8::internal::Handle"* %1, i64 %721
  %724 = bitcast %"class.v8::internal::Handle"* %723 to <2 x i64>*
  %725 = load <2 x i64>, <2 x i64>* %724, align 8, !alias.scope !36
  %726 = getelementptr %"class.v8::internal::Handle", %"class.v8::internal::Handle"* %723, i64 2
  %727 = bitcast %"class.v8::internal::Handle"* %726 to <2 x i64>*
  %728 = load <2 x i64>, <2 x i64>* %727, align 8, !alias.scope !36
  %729 = bitcast %"class.v8::internal::Handle"* %722 to <2 x i64>*
  store <2 x i64> %725, <2 x i64>* %729, align 8, !alias.scope !39, !noalias !36
  %730 = getelementptr %"class.v8::internal::Handle", %"class.v8::internal::Handle"* %722, i64 2
  %731 = bitcast %"class.v8::internal::Handle"* %730 to <2 x i64>*
  store <2 x i64> %728, <2 x i64>* %731, align 8, !alias.scope !39, !noalias !36
  %732 = or i64 %698, 12
  %733 = getelementptr %"class.v8::internal::Handle", %"class.v8::internal::Handle"* %409, i64 %732
  %734 = getelementptr %"class.v8::internal::Handle", %"class.v8::internal::Handle"* %1, i64 %732
  %735 = bitcast %"class.v8::internal::Handle"* %734 to <2 x i64>*
  %736 = load <2 x i64>, <2 x i64>* %735, align 8, !alias.scope !36
  %737 = getelementptr %"class.v8::internal::Handle", %"class.v8::internal::Handle"* %734, i64 2
  %738 = bitcast %"class.v8::internal::Handle"* %737 to <2 x i64>*
  %739 = load <2 x i64>, <2 x i64>* %738, align 8, !alias.scope !36
  %740 = bitcast %"class.v8::internal::Handle"* %733 to <2 x i64>*
  store <2 x i64> %736, <2 x i64>* %740, align 8, !alias.scope !39, !noalias !36
  %741 = getelementptr %"class.v8::internal::Handle", %"class.v8::internal::Handle"* %733, i64 2
  %742 = bitcast %"class.v8::internal::Handle"* %741 to <2 x i64>*
  store <2 x i64> %739, <2 x i64>* %742, align 8, !alias.scope !39, !noalias !36
  %743 = add i64 %698, 16
  %744 = add i64 %699, -4
  %745 = icmp eq i64 %744, 0
  br i1 %745, label %746, label %697, !llvm.loop !41

746:                                              ; preds = %697, %685
  %747 = phi i64 [ 0, %685 ], [ %743, %697 ]
  %748 = icmp eq i64 %693, 0
  br i1 %748, label %765, label %749

749:                                              ; preds = %746, %749
  %750 = phi i64 [ %762, %749 ], [ %747, %746 ]
  %751 = phi i64 [ %763, %749 ], [ %693, %746 ]
  %752 = getelementptr %"class.v8::internal::Handle", %"class.v8::internal::Handle"* %409, i64 %750
  %753 = getelementptr %"class.v8::internal::Handle", %"class.v8::internal::Handle"* %1, i64 %750
  %754 = bitcast %"class.v8::internal::Handle"* %753 to <2 x i64>*
  %755 = load <2 x i64>, <2 x i64>* %754, align 8, !alias.scope !36
  %756 = getelementptr %"class.v8::internal::Handle", %"class.v8::internal::Handle"* %753, i64 2
  %757 = bitcast %"class.v8::internal::Handle"* %756 to <2 x i64>*
  %758 = load <2 x i64>, <2 x i64>* %757, align 8, !alias.scope !36
  %759 = bitcast %"class.v8::internal::Handle"* %752 to <2 x i64>*
  store <2 x i64> %755, <2 x i64>* %759, align 8, !alias.scope !39, !noalias !36
  %760 = getelementptr %"class.v8::internal::Handle", %"class.v8::internal::Handle"* %752, i64 2
  %761 = bitcast %"class.v8::internal::Handle"* %760 to <2 x i64>*
  store <2 x i64> %758, <2 x i64>* %761, align 8, !alias.scope !39, !noalias !36
  %762 = add i64 %750, 4
  %763 = add i64 %751, -1
  %764 = icmp eq i64 %763, 0
  br i1 %764, label %765, label %749, !llvm.loop !42

765:                                              ; preds = %749, %746
  %766 = icmp eq i64 %669, %686
  br i1 %766, label %842, label %767

767:                                              ; preds = %765, %671, %664
  %768 = phi %"class.v8::internal::Handle"* [ %409, %671 ], [ %409, %664 ], [ %687, %765 ]
  %769 = phi %"class.v8::internal::Handle"* [ %409, %671 ], [ %409, %664 ], [ %688, %765 ]
  %770 = phi %"class.v8::internal::Handle"* [ %1, %671 ], [ %1, %664 ], [ %689, %765 ]
  %771 = ptrtoint %"class.v8::internal::Handle"* %770 to i64
  %772 = getelementptr %"class.v8::internal::Handle", %"class.v8::internal::Handle"* %660, i64 -1, i32 0, i32 0
  %773 = ptrtoint i64** %772 to i64
  %774 = sub i64 %773, %771
  %775 = lshr i64 %774, 3
  %776 = add nuw nsw i64 %775, 1
  %777 = and i64 %776, 7
  %778 = icmp eq i64 %777, 0
  br i1 %778, label %791, label %779

779:                                              ; preds = %767, %779
  %780 = phi %"class.v8::internal::Handle"* [ %788, %779 ], [ %768, %767 ]
  %781 = phi %"class.v8::internal::Handle"* [ %788, %779 ], [ %769, %767 ]
  %782 = phi %"class.v8::internal::Handle"* [ %787, %779 ], [ %770, %767 ]
  %783 = phi i64 [ %789, %779 ], [ %777, %767 ]
  %784 = bitcast %"class.v8::internal::Handle"* %781 to i64*
  %785 = bitcast %"class.v8::internal::Handle"* %782 to i64*
  %786 = load i64, i64* %785, align 8
  store i64 %786, i64* %784, align 8
  %787 = getelementptr inbounds %"class.v8::internal::Handle", %"class.v8::internal::Handle"* %782, i64 1
  %788 = getelementptr inbounds %"class.v8::internal::Handle", %"class.v8::internal::Handle"* %780, i64 1
  %789 = add i64 %783, -1
  %790 = icmp eq i64 %789, 0
  br i1 %790, label %791, label %779, !llvm.loop !43

791:                                              ; preds = %779, %767
  %792 = phi %"class.v8::internal::Handle"* [ undef, %767 ], [ %788, %779 ]
  %793 = phi %"class.v8::internal::Handle"* [ %768, %767 ], [ %788, %779 ]
  %794 = phi %"class.v8::internal::Handle"* [ %769, %767 ], [ %788, %779 ]
  %795 = phi %"class.v8::internal::Handle"* [ %770, %767 ], [ %787, %779 ]
  %796 = icmp ult i64 %774, 56
  br i1 %796, label %842, label %797

797:                                              ; preds = %791, %797
  %798 = phi %"class.v8::internal::Handle"* [ %840, %797 ], [ %793, %791 ]
  %799 = phi %"class.v8::internal::Handle"* [ %840, %797 ], [ %794, %791 ]
  %800 = phi %"class.v8::internal::Handle"* [ %839, %797 ], [ %795, %791 ]
  %801 = bitcast %"class.v8::internal::Handle"* %799 to i64*
  %802 = bitcast %"class.v8::internal::Handle"* %800 to i64*
  %803 = load i64, i64* %802, align 8
  store i64 %803, i64* %801, align 8
  %804 = getelementptr inbounds %"class.v8::internal::Handle", %"class.v8::internal::Handle"* %800, i64 1
  %805 = getelementptr inbounds %"class.v8::internal::Handle", %"class.v8::internal::Handle"* %798, i64 1
  %806 = bitcast %"class.v8::internal::Handle"* %805 to i64*
  %807 = bitcast %"class.v8::internal::Handle"* %804 to i64*
  %808 = load i64, i64* %807, align 8
  store i64 %808, i64* %806, align 8
  %809 = getelementptr inbounds %"class.v8::internal::Handle", %"class.v8::internal::Handle"* %800, i64 2
  %810 = getelementptr inbounds %"class.v8::internal::Handle", %"class.v8::internal::Handle"* %798, i64 2
  %811 = bitcast %"class.v8::internal::Handle"* %810 to i64*
  %812 = bitcast %"class.v8::internal::Handle"* %809 to i64*
  %813 = load i64, i64* %812, align 8
  store i64 %813, i64* %811, align 8
  %814 = getelementptr inbounds %"class.v8::internal::Handle", %"class.v8::internal::Handle"* %800, i64 3
  %815 = getelementptr inbounds %"class.v8::internal::Handle", %"class.v8::internal::Handle"* %798, i64 3
  %816 = bitcast %"class.v8::internal::Handle"* %815 to i64*
  %817 = bitcast %"class.v8::internal::Handle"* %814 to i64*
  %818 = load i64, i64* %817, align 8
  store i64 %818, i64* %816, align 8
  %819 = getelementptr inbounds %"class.v8::internal::Handle", %"class.v8::internal::Handle"* %800, i64 4
  %820 = getelementptr inbounds %"class.v8::internal::Handle", %"class.v8::internal::Handle"* %798, i64 4
  %821 = bitcast %"class.v8::internal::Handle"* %820 to i64*
  %822 = bitcast %"class.v8::internal::Handle"* %819 to i64*
  %823 = load i64, i64* %822, align 8
  store i64 %823, i64* %821, align 8
  %824 = getelementptr inbounds %"class.v8::internal::Handle", %"class.v8::internal::Handle"* %800, i64 5
  %825 = getelementptr inbounds %"class.v8::internal::Handle", %"class.v8::internal::Handle"* %798, i64 5
  %826 = bitcast %"class.v8::internal::Handle"* %825 to i64*
  %827 = bitcast %"class.v8::internal::Handle"* %824 to i64*
  %828 = load i64, i64* %827, align 8
  store i64 %828, i64* %826, align 8
  %829 = getelementptr inbounds %"class.v8::internal::Handle", %"class.v8::internal::Handle"* %800, i64 6
  %830 = getelementptr inbounds %"class.v8::internal::Handle", %"class.v8::internal::Handle"* %798, i64 6
  %831 = bitcast %"class.v8::internal::Handle"* %830 to i64*
  %832 = bitcast %"class.v8::internal::Handle"* %829 to i64*
  %833 = load i64, i64* %832, align 8
  store i64 %833, i64* %831, align 8
  %834 = getelementptr inbounds %"class.v8::internal::Handle", %"class.v8::internal::Handle"* %800, i64 7
  %835 = getelementptr inbounds %"class.v8::internal::Handle", %"class.v8::internal::Handle"* %798, i64 7
  %836 = bitcast %"class.v8::internal::Handle"* %835 to i64*
  %837 = bitcast %"class.v8::internal::Handle"* %834 to i64*
  %838 = load i64, i64* %837, align 8
  store i64 %838, i64* %836, align 8
  %839 = getelementptr inbounds %"class.v8::internal::Handle", %"class.v8::internal::Handle"* %800, i64 8
  %840 = getelementptr inbounds %"class.v8::internal::Handle", %"class.v8::internal::Handle"* %798, i64 8
  %841 = icmp eq %"class.v8::internal::Handle"* %839, %660
  br i1 %841, label %842, label %797, !llvm.loop !44

842:                                              ; preds = %791, %797, %765, %662
  %843 = phi %"class.v8::internal::Handle"* [ %409, %662 ], [ %687, %765 ], [ %792, %791 ], [ %840, %797 ]
  %844 = phi i64 [ %663, %662 ], [ %658, %765 ], [ %658, %797 ], [ %658, %791 ]
  %845 = ptrtoint %"class.v8::internal::Handle"* %843 to i64
  store i64 %844, i64* %360, align 8
  store i64 %845, i64* %23, align 8
  store i64 %408, i64* %15, align 8
  ret %"class.v8::internal::Handle"* %405

846:                                              ; preds = %208, %353, %357, %4
  ret %"class.v8::internal::Handle"* %1
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.v8::internal::compiler::CompilationDependency"** @_ZNSt3__16vectorIPKN2v88internal8compiler21CompilationDependencyENS2_13ZoneAllocatorIS6_EEE6insertINS_11__wrap_iterIPKS6_EEEENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIS6_NS_15iterator_traitsISG_E9referenceEEE5valueENSB_IPS6_EEE4typeESE_SG_SG_(%"class.std::__1::vector.23"*, %"class.v8::internal::compiler::CompilationDependency"**, %"class.v8::internal::compiler::CompilationDependency"**, %"class.v8::internal::compiler::CompilationDependency"**) local_unnamed_addr #0 comdat align 2 {
  %5 = bitcast %"class.v8::internal::compiler::CompilationDependency"** %1 to i8*
  %6 = ptrtoint %"class.v8::internal::compiler::CompilationDependency"** %1 to i64
  %7 = ptrtoint %"class.v8::internal::compiler::CompilationDependency"** %2 to i64
  %8 = getelementptr inbounds %"class.std::__1::vector.23", %"class.std::__1::vector.23"* %0, i64 0, i32 0, i32 0
  %9 = ptrtoint %"class.v8::internal::compiler::CompilationDependency"** %3 to i64
  %10 = sub i64 %9, %7
  %11 = ashr exact i64 %10, 3
  %12 = icmp sgt i64 %10, 0
  br i1 %12, label %13, label %846

13:                                               ; preds = %4
  %14 = getelementptr inbounds %"class.std::__1::vector.23", %"class.std::__1::vector.23"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %15 = bitcast %"class.v8::internal::compiler::CompilationDependency"*** %14 to i64*
  %16 = load i64, i64* %15, align 8
  %17 = getelementptr inbounds %"class.std::__1::vector.23", %"class.std::__1::vector.23"* %0, i64 0, i32 0, i32 1
  %18 = load %"class.v8::internal::compiler::CompilationDependency"**, %"class.v8::internal::compiler::CompilationDependency"*** %17, align 8
  %19 = ptrtoint %"class.v8::internal::compiler::CompilationDependency"** %18 to i64
  %20 = sub i64 %16, %19
  %21 = ashr exact i64 %20, 3
  %22 = icmp sgt i64 %11, %21
  %23 = bitcast %"class.v8::internal::compiler::CompilationDependency"*** %17 to i64*
  br i1 %22, label %359, label %24

24:                                               ; preds = %13
  %25 = sub i64 %19, %6
  %26 = ashr exact i64 %25, 3
  %27 = icmp sgt i64 %11, %26
  br i1 %27, label %28, label %213

28:                                               ; preds = %24
  %29 = getelementptr inbounds %"class.v8::internal::compiler::CompilationDependency"*, %"class.v8::internal::compiler::CompilationDependency"** %2, i64 %26
  %30 = icmp eq %"class.v8::internal::compiler::CompilationDependency"** %29, %3
  br i1 %30, label %208, label %31

31:                                               ; preds = %28
  %32 = xor i64 %26, -1
  %33 = getelementptr %"class.v8::internal::compiler::CompilationDependency"*, %"class.v8::internal::compiler::CompilationDependency"** %3, i64 %32
  %34 = ptrtoint %"class.v8::internal::compiler::CompilationDependency"** %33 to i64
  %35 = sub i64 %34, %7
  %36 = lshr i64 %35, 3
  %37 = add nuw nsw i64 %36, 1
  %38 = icmp ult i64 %37, 4
  br i1 %38, label %134, label %39

39:                                               ; preds = %31
  %40 = xor i64 %26, -1
  %41 = getelementptr %"class.v8::internal::compiler::CompilationDependency"*, %"class.v8::internal::compiler::CompilationDependency"** %3, i64 %40
  %42 = ptrtoint %"class.v8::internal::compiler::CompilationDependency"** %41 to i64
  %43 = sub i64 %42, %7
  %44 = lshr i64 %43, 3
  %45 = add nuw nsw i64 %44, 1
  %46 = getelementptr %"class.v8::internal::compiler::CompilationDependency"*, %"class.v8::internal::compiler::CompilationDependency"** %18, i64 %45
  %47 = add nsw i64 %26, %44
  %48 = add nsw i64 %47, 1
  %49 = getelementptr %"class.v8::internal::compiler::CompilationDependency"*, %"class.v8::internal::compiler::CompilationDependency"** %2, i64 %48
  %50 = icmp ult %"class.v8::internal::compiler::CompilationDependency"** %18, %49
  %51 = icmp ult %"class.v8::internal::compiler::CompilationDependency"** %29, %46
  %52 = and i1 %50, %51
  br i1 %52, label %134, label %53

53:                                               ; preds = %39
  %54 = and i64 %37, 4611686018427387900
  %55 = getelementptr %"class.v8::internal::compiler::CompilationDependency"*, %"class.v8::internal::compiler::CompilationDependency"** %18, i64 %54
  %56 = getelementptr %"class.v8::internal::compiler::CompilationDependency"*, %"class.v8::internal::compiler::CompilationDependency"** %29, i64 %54
  %57 = add nsw i64 %54, -4
  %58 = lshr exact i64 %57, 2
  %59 = add nuw nsw i64 %58, 1
  %60 = and i64 %59, 3
  %61 = icmp ult i64 %57, 12
  br i1 %61, label %113, label %62

62:                                               ; preds = %53
  %63 = sub nsw i64 %59, %60
  br label %64

64:                                               ; preds = %64, %62
  %65 = phi i64 [ 0, %62 ], [ %110, %64 ]
  %66 = phi i64 [ %63, %62 ], [ %111, %64 ]
  %67 = getelementptr %"class.v8::internal::compiler::CompilationDependency"*, %"class.v8::internal::compiler::CompilationDependency"** %18, i64 %65
  %68 = getelementptr %"class.v8::internal::compiler::CompilationDependency"*, %"class.v8::internal::compiler::CompilationDependency"** %29, i64 %65
  %69 = bitcast %"class.v8::internal::compiler::CompilationDependency"** %68 to <2 x i64>*
  %70 = load <2 x i64>, <2 x i64>* %69, align 8, !alias.scope !45
  %71 = getelementptr %"class.v8::internal::compiler::CompilationDependency"*, %"class.v8::internal::compiler::CompilationDependency"** %68, i64 2
  %72 = bitcast %"class.v8::internal::compiler::CompilationDependency"** %71 to <2 x i64>*
  %73 = load <2 x i64>, <2 x i64>* %72, align 8, !alias.scope !45
  %74 = bitcast %"class.v8::internal::compiler::CompilationDependency"** %67 to <2 x i64>*
  store <2 x i64> %70, <2 x i64>* %74, align 8, !alias.scope !48, !noalias !45
  %75 = getelementptr %"class.v8::internal::compiler::CompilationDependency"*, %"class.v8::internal::compiler::CompilationDependency"** %67, i64 2
  %76 = bitcast %"class.v8::internal::compiler::CompilationDependency"** %75 to <2 x i64>*
  store <2 x i64> %73, <2 x i64>* %76, align 8, !alias.scope !48, !noalias !45
  %77 = or i64 %65, 4
  %78 = getelementptr %"class.v8::internal::compiler::CompilationDependency"*, %"class.v8::internal::compiler::CompilationDependency"** %18, i64 %77
  %79 = getelementptr %"class.v8::internal::compiler::CompilationDependency"*, %"class.v8::internal::compiler::CompilationDependency"** %29, i64 %77
  %80 = bitcast %"class.v8::internal::compiler::CompilationDependency"** %79 to <2 x i64>*
  %81 = load <2 x i64>, <2 x i64>* %80, align 8, !alias.scope !45
  %82 = getelementptr %"class.v8::internal::compiler::CompilationDependency"*, %"class.v8::internal::compiler::CompilationDependency"** %79, i64 2
  %83 = bitcast %"class.v8::internal::compiler::CompilationDependency"** %82 to <2 x i64>*
  %84 = load <2 x i64>, <2 x i64>* %83, align 8, !alias.scope !45
  %85 = bitcast %"class.v8::internal::compiler::CompilationDependency"** %78 to <2 x i64>*
  store <2 x i64> %81, <2 x i64>* %85, align 8, !alias.scope !48, !noalias !45
  %86 = getelementptr %"class.v8::internal::compiler::CompilationDependency"*, %"class.v8::internal::compiler::CompilationDependency"** %78, i64 2
  %87 = bitcast %"class.v8::internal::compiler::CompilationDependency"** %86 to <2 x i64>*
  store <2 x i64> %84, <2 x i64>* %87, align 8, !alias.scope !48, !noalias !45
  %88 = or i64 %65, 8
  %89 = getelementptr %"class.v8::internal::compiler::CompilationDependency"*, %"class.v8::internal::compiler::CompilationDependency"** %18, i64 %88
  %90 = getelementptr %"class.v8::internal::compiler::CompilationDependency"*, %"class.v8::internal::compiler::CompilationDependency"** %29, i64 %88
  %91 = bitcast %"class.v8::internal::compiler::CompilationDependency"** %90 to <2 x i64>*
  %92 = load <2 x i64>, <2 x i64>* %91, align 8, !alias.scope !45
  %93 = getelementptr %"class.v8::internal::compiler::CompilationDependency"*, %"class.v8::internal::compiler::CompilationDependency"** %90, i64 2
  %94 = bitcast %"class.v8::internal::compiler::CompilationDependency"** %93 to <2 x i64>*
  %95 = load <2 x i64>, <2 x i64>* %94, align 8, !alias.scope !45
  %96 = bitcast %"class.v8::internal::compiler::CompilationDependency"** %89 to <2 x i64>*
  store <2 x i64> %92, <2 x i64>* %96, align 8, !alias.scope !48, !noalias !45
  %97 = getelementptr %"class.v8::internal::compiler::CompilationDependency"*, %"class.v8::internal::compiler::CompilationDependency"** %89, i64 2
  %98 = bitcast %"class.v8::internal::compiler::CompilationDependency"** %97 to <2 x i64>*
  store <2 x i64> %95, <2 x i64>* %98, align 8, !alias.scope !48, !noalias !45
  %99 = or i64 %65, 12
  %100 = getelementptr %"class.v8::internal::compiler::CompilationDependency"*, %"class.v8::internal::compiler::CompilationDependency"** %18, i64 %99
  %101 = getelementptr %"class.v8::internal::compiler::CompilationDependency"*, %"class.v8::internal::compiler::CompilationDependency"** %29, i64 %99
  %102 = bitcast %"class.v8::internal::compiler::CompilationDependency"** %101 to <2 x i64>*
  %103 = load <2 x i64>, <2 x i64>* %102, align 8, !alias.scope !45
  %104 = getelementptr %"class.v8::internal::compiler::CompilationDependency"*, %"class.v8::internal::compiler::CompilationDependency"** %101, i64 2
  %105 = bitcast %"class.v8::internal::compiler::CompilationDependency"** %104 to <2 x i64>*
  %106 = load <2 x i64>, <2 x i64>* %105, align 8, !alias.scope !45
  %107 = bitcast %"class.v8::internal::compiler::CompilationDependency"** %100 to <2 x i64>*
  store <2 x i64> %103, <2 x i64>* %107, align 8, !alias.scope !48, !noalias !45
  %108 = getelementptr %"class.v8::internal::compiler::CompilationDependency"*, %"class.v8::internal::compiler::CompilationDependency"** %100, i64 2
  %109 = bitcast %"class.v8::internal::compiler::CompilationDependency"** %108 to <2 x i64>*
  store <2 x i64> %106, <2 x i64>* %109, align 8, !alias.scope !48, !noalias !45
  %110 = add i64 %65, 16
  %111 = add i64 %66, -4
  %112 = icmp eq i64 %111, 0
  br i1 %112, label %113, label %64, !llvm.loop !50

113:                                              ; preds = %64, %53
  %114 = phi i64 [ 0, %53 ], [ %110, %64 ]
  %115 = icmp eq i64 %60, 0
  br i1 %115, label %132, label %116

116:                                              ; preds = %113, %116
  %117 = phi i64 [ %129, %116 ], [ %114, %113 ]
  %118 = phi i64 [ %130, %116 ], [ %60, %113 ]
  %119 = getelementptr %"class.v8::internal::compiler::CompilationDependency"*, %"class.v8::internal::compiler::CompilationDependency"** %18, i64 %117
  %120 = getelementptr %"class.v8::internal::compiler::CompilationDependency"*, %"class.v8::internal::compiler::CompilationDependency"** %29, i64 %117
  %121 = bitcast %"class.v8::internal::compiler::CompilationDependency"** %120 to <2 x i64>*
  %122 = load <2 x i64>, <2 x i64>* %121, align 8, !alias.scope !45
  %123 = getelementptr %"class.v8::internal::compiler::CompilationDependency"*, %"class.v8::internal::compiler::CompilationDependency"** %120, i64 2
  %124 = bitcast %"class.v8::internal::compiler::CompilationDependency"** %123 to <2 x i64>*
  %125 = load <2 x i64>, <2 x i64>* %124, align 8, !alias.scope !45
  %126 = bitcast %"class.v8::internal::compiler::CompilationDependency"** %119 to <2 x i64>*
  store <2 x i64> %122, <2 x i64>* %126, align 8, !alias.scope !48, !noalias !45
  %127 = getelementptr %"class.v8::internal::compiler::CompilationDependency"*, %"class.v8::internal::compiler::CompilationDependency"** %119, i64 2
  %128 = bitcast %"class.v8::internal::compiler::CompilationDependency"** %127 to <2 x i64>*
  store <2 x i64> %125, <2 x i64>* %128, align 8, !alias.scope !48, !noalias !45
  %129 = add i64 %117, 4
  %130 = add i64 %118, -1
  %131 = icmp eq i64 %130, 0
  br i1 %131, label %132, label %116, !llvm.loop !51

132:                                              ; preds = %116, %113
  %133 = icmp eq i64 %37, %54
  br i1 %133, label %205, label %134

134:                                              ; preds = %132, %39, %31
  %135 = phi %"class.v8::internal::compiler::CompilationDependency"** [ %18, %39 ], [ %18, %31 ], [ %55, %132 ]
  %136 = phi %"class.v8::internal::compiler::CompilationDependency"** [ %29, %39 ], [ %29, %31 ], [ %56, %132 ]
  %137 = ptrtoint %"class.v8::internal::compiler::CompilationDependency"** %136 to i64
  %138 = getelementptr %"class.v8::internal::compiler::CompilationDependency"*, %"class.v8::internal::compiler::CompilationDependency"** %3, i64 -1
  %139 = ptrtoint %"class.v8::internal::compiler::CompilationDependency"** %138 to i64
  %140 = sub i64 %139, %137
  %141 = lshr i64 %140, 3
  %142 = add nuw nsw i64 %141, 1
  %143 = and i64 %142, 7
  %144 = icmp eq i64 %143, 0
  br i1 %144, label %156, label %145

145:                                              ; preds = %134, %145
  %146 = phi %"class.v8::internal::compiler::CompilationDependency"** [ %153, %145 ], [ %135, %134 ]
  %147 = phi %"class.v8::internal::compiler::CompilationDependency"** [ %152, %145 ], [ %136, %134 ]
  %148 = phi i64 [ %154, %145 ], [ %143, %134 ]
  %149 = bitcast %"class.v8::internal::compiler::CompilationDependency"** %146 to i64*
  %150 = bitcast %"class.v8::internal::compiler::CompilationDependency"** %147 to i64*
  %151 = load i64, i64* %150, align 8
  store i64 %151, i64* %149, align 8
  %152 = getelementptr inbounds %"class.v8::internal::compiler::CompilationDependency"*, %"class.v8::internal::compiler::CompilationDependency"** %147, i64 1
  %153 = getelementptr inbounds %"class.v8::internal::compiler::CompilationDependency"*, %"class.v8::internal::compiler::CompilationDependency"** %146, i64 1
  %154 = add i64 %148, -1
  %155 = icmp eq i64 %154, 0
  br i1 %155, label %156, label %145, !llvm.loop !52

156:                                              ; preds = %145, %134
  %157 = phi %"class.v8::internal::compiler::CompilationDependency"** [ undef, %134 ], [ %153, %145 ]
  %158 = phi %"class.v8::internal::compiler::CompilationDependency"** [ %135, %134 ], [ %153, %145 ]
  %159 = phi %"class.v8::internal::compiler::CompilationDependency"** [ %136, %134 ], [ %152, %145 ]
  %160 = icmp ult i64 %140, 56
  br i1 %160, label %205, label %161

161:                                              ; preds = %156, %161
  %162 = phi %"class.v8::internal::compiler::CompilationDependency"** [ %203, %161 ], [ %158, %156 ]
  %163 = phi %"class.v8::internal::compiler::CompilationDependency"** [ %202, %161 ], [ %159, %156 ]
  %164 = bitcast %"class.v8::internal::compiler::CompilationDependency"** %162 to i64*
  %165 = bitcast %"class.v8::internal::compiler::CompilationDependency"** %163 to i64*
  %166 = load i64, i64* %165, align 8
  store i64 %166, i64* %164, align 8
  %167 = getelementptr inbounds %"class.v8::internal::compiler::CompilationDependency"*, %"class.v8::internal::compiler::CompilationDependency"** %163, i64 1
  %168 = getelementptr inbounds %"class.v8::internal::compiler::CompilationDependency"*, %"class.v8::internal::compiler::CompilationDependency"** %162, i64 1
  %169 = bitcast %"class.v8::internal::compiler::CompilationDependency"** %168 to i64*
  %170 = bitcast %"class.v8::internal::compiler::CompilationDependency"** %167 to i64*
  %171 = load i64, i64* %170, align 8
  store i64 %171, i64* %169, align 8
  %172 = getelementptr inbounds %"class.v8::internal::compiler::CompilationDependency"*, %"class.v8::internal::compiler::CompilationDependency"** %163, i64 2
  %173 = getelementptr inbounds %"class.v8::internal::compiler::CompilationDependency"*, %"class.v8::internal::compiler::CompilationDependency"** %162, i64 2
  %174 = bitcast %"class.v8::internal::compiler::CompilationDependency"** %173 to i64*
  %175 = bitcast %"class.v8::internal::compiler::CompilationDependency"** %172 to i64*
  %176 = load i64, i64* %175, align 8
  store i64 %176, i64* %174, align 8
  %177 = getelementptr inbounds %"class.v8::internal::compiler::CompilationDependency"*, %"class.v8::internal::compiler::CompilationDependency"** %163, i64 3
  %178 = getelementptr inbounds %"class.v8::internal::compiler::CompilationDependency"*, %"class.v8::internal::compiler::CompilationDependency"** %162, i64 3
  %179 = bitcast %"class.v8::internal::compiler::CompilationDependency"** %178 to i64*
  %180 = bitcast %"class.v8::internal::compiler::CompilationDependency"** %177 to i64*
  %181 = load i64, i64* %180, align 8
  store i64 %181, i64* %179, align 8
  %182 = getelementptr inbounds %"class.v8::internal::compiler::CompilationDependency"*, %"class.v8::internal::compiler::CompilationDependency"** %163, i64 4
  %183 = getelementptr inbounds %"class.v8::internal::compiler::CompilationDependency"*, %"class.v8::internal::compiler::CompilationDependency"** %162, i64 4
  %184 = bitcast %"class.v8::internal::compiler::CompilationDependency"** %183 to i64*
  %185 = bitcast %"class.v8::internal::compiler::CompilationDependency"** %182 to i64*
  %186 = load i64, i64* %185, align 8
  store i64 %186, i64* %184, align 8
  %187 = getelementptr inbounds %"class.v8::internal::compiler::CompilationDependency"*, %"class.v8::internal::compiler::CompilationDependency"** %163, i64 5
  %188 = getelementptr inbounds %"class.v8::internal::compiler::CompilationDependency"*, %"class.v8::internal::compiler::CompilationDependency"** %162, i64 5
  %189 = bitcast %"class.v8::internal::compiler::CompilationDependency"** %188 to i64*
  %190 = bitcast %"class.v8::internal::compiler::CompilationDependency"** %187 to i64*
  %191 = load i64, i64* %190, align 8
  store i64 %191, i64* %189, align 8
  %192 = getelementptr inbounds %"class.v8::internal::compiler::CompilationDependency"*, %"class.v8::internal::compiler::CompilationDependency"** %163, i64 6
  %193 = getelementptr inbounds %"class.v8::internal::compiler::CompilationDependency"*, %"class.v8::internal::compiler::CompilationDependency"** %162, i64 6
  %194 = bitcast %"class.v8::internal::compiler::CompilationDependency"** %193 to i64*
  %195 = bitcast %"class.v8::internal::compiler::CompilationDependency"** %192 to i64*
  %196 = load i64, i64* %195, align 8
  store i64 %196, i64* %194, align 8
  %197 = getelementptr inbounds %"class.v8::internal::compiler::CompilationDependency"*, %"class.v8::internal::compiler::CompilationDependency"** %163, i64 7
  %198 = getelementptr inbounds %"class.v8::internal::compiler::CompilationDependency"*, %"class.v8::internal::compiler::CompilationDependency"** %162, i64 7
  %199 = bitcast %"class.v8::internal::compiler::CompilationDependency"** %198 to i64*
  %200 = bitcast %"class.v8::internal::compiler::CompilationDependency"** %197 to i64*
  %201 = load i64, i64* %200, align 8
  store i64 %201, i64* %199, align 8
  %202 = getelementptr inbounds %"class.v8::internal::compiler::CompilationDependency"*, %"class.v8::internal::compiler::CompilationDependency"** %163, i64 8
  %203 = getelementptr inbounds %"class.v8::internal::compiler::CompilationDependency"*, %"class.v8::internal::compiler::CompilationDependency"** %162, i64 8
  %204 = icmp eq %"class.v8::internal::compiler::CompilationDependency"** %202, %3
  br i1 %204, label %205, label %161, !llvm.loop !53

205:                                              ; preds = %156, %161, %132
  %206 = phi %"class.v8::internal::compiler::CompilationDependency"** [ %55, %132 ], [ %157, %156 ], [ %203, %161 ]
  %207 = ptrtoint %"class.v8::internal::compiler::CompilationDependency"** %206 to i64
  br label %208

208:                                              ; preds = %205, %28
  %209 = phi i64 [ %19, %28 ], [ %207, %205 ]
  store i64 %209, i64* %23, align 8
  %210 = icmp sgt i64 %25, 0
  br i1 %210, label %211, label %846

211:                                              ; preds = %208
  %212 = inttoptr i64 %209 to %"class.v8::internal::compiler::CompilationDependency"**
  br label %213

213:                                              ; preds = %211, %24
  %214 = phi i64 [ %209, %211 ], [ %19, %24 ]
  %215 = phi %"class.v8::internal::compiler::CompilationDependency"** [ %212, %211 ], [ %18, %24 ]
  %216 = phi %"class.v8::internal::compiler::CompilationDependency"** [ %29, %211 ], [ %3, %24 ]
  %217 = getelementptr inbounds %"class.v8::internal::compiler::CompilationDependency"*, %"class.v8::internal::compiler::CompilationDependency"** %1, i64 %11
  %218 = ptrtoint %"class.v8::internal::compiler::CompilationDependency"** %217 to i64
  %219 = sub i64 %214, %218
  %220 = ashr exact i64 %219, 3
  %221 = getelementptr inbounds %"class.v8::internal::compiler::CompilationDependency"*, %"class.v8::internal::compiler::CompilationDependency"** %1, i64 %220
  %222 = icmp ult %"class.v8::internal::compiler::CompilationDependency"** %221, %18
  br i1 %222, label %223, label %336

223:                                              ; preds = %213
  %224 = sub nsw i64 0, %220
  %225 = getelementptr %"class.v8::internal::compiler::CompilationDependency"*, %"class.v8::internal::compiler::CompilationDependency"** %18, i64 %224
  %226 = bitcast %"class.v8::internal::compiler::CompilationDependency"** %225 to i8*
  %227 = xor i64 %6, -1
  %228 = getelementptr i8, i8* %226, i64 %227
  %229 = ptrtoint i8* %228 to i64
  %230 = lshr i64 %229, 3
  %231 = add nuw nsw i64 %230, 1
  %232 = icmp ult i64 %231, 4
  br i1 %232, label %233, label %236

233:                                              ; preds = %331, %236, %223
  %234 = phi %"class.v8::internal::compiler::CompilationDependency"** [ %215, %236 ], [ %215, %223 ], [ %254, %331 ]
  %235 = phi %"class.v8::internal::compiler::CompilationDependency"** [ %221, %236 ], [ %221, %223 ], [ %255, %331 ]
  br label %344

236:                                              ; preds = %223
  %237 = sub nsw i64 0, %220
  %238 = getelementptr %"class.v8::internal::compiler::CompilationDependency"*, %"class.v8::internal::compiler::CompilationDependency"** %18, i64 %237
  %239 = bitcast %"class.v8::internal::compiler::CompilationDependency"** %238 to i8*
  %240 = xor i64 %6, -1
  %241 = getelementptr i8, i8* %239, i64 %240
  %242 = ptrtoint i8* %241 to i64
  %243 = lshr i64 %242, 3
  %244 = add nuw nsw i64 %243, 1
  %245 = getelementptr %"class.v8::internal::compiler::CompilationDependency"*, %"class.v8::internal::compiler::CompilationDependency"** %215, i64 %244
  %246 = add nsw i64 %220, %243
  %247 = add nsw i64 %246, 1
  %248 = getelementptr %"class.v8::internal::compiler::CompilationDependency"*, %"class.v8::internal::compiler::CompilationDependency"** %1, i64 %247
  %249 = icmp ult %"class.v8::internal::compiler::CompilationDependency"** %215, %248
  %250 = icmp ult %"class.v8::internal::compiler::CompilationDependency"** %221, %245
  %251 = and i1 %249, %250
  br i1 %251, label %233, label %252

252:                                              ; preds = %236
  %253 = and i64 %231, 4611686018427387900
  %254 = getelementptr %"class.v8::internal::compiler::CompilationDependency"*, %"class.v8::internal::compiler::CompilationDependency"** %215, i64 %253
  %255 = getelementptr %"class.v8::internal::compiler::CompilationDependency"*, %"class.v8::internal::compiler::CompilationDependency"** %221, i64 %253
  %256 = add nsw i64 %253, -4
  %257 = lshr exact i64 %256, 2
  %258 = add nuw nsw i64 %257, 1
  %259 = and i64 %258, 3
  %260 = icmp ult i64 %256, 12
  br i1 %260, label %312, label %261

261:                                              ; preds = %252
  %262 = sub nsw i64 %258, %259
  br label %263

263:                                              ; preds = %263, %261
  %264 = phi i64 [ 0, %261 ], [ %309, %263 ]
  %265 = phi i64 [ %262, %261 ], [ %310, %263 ]
  %266 = getelementptr %"class.v8::internal::compiler::CompilationDependency"*, %"class.v8::internal::compiler::CompilationDependency"** %215, i64 %264
  %267 = getelementptr %"class.v8::internal::compiler::CompilationDependency"*, %"class.v8::internal::compiler::CompilationDependency"** %221, i64 %264
  %268 = bitcast %"class.v8::internal::compiler::CompilationDependency"** %267 to <2 x i64>*
  %269 = load <2 x i64>, <2 x i64>* %268, align 8, !alias.scope !54
  %270 = getelementptr %"class.v8::internal::compiler::CompilationDependency"*, %"class.v8::internal::compiler::CompilationDependency"** %267, i64 2
  %271 = bitcast %"class.v8::internal::compiler::CompilationDependency"** %270 to <2 x i64>*
  %272 = load <2 x i64>, <2 x i64>* %271, align 8, !alias.scope !54
  %273 = bitcast %"class.v8::internal::compiler::CompilationDependency"** %266 to <2 x i64>*
  store <2 x i64> %269, <2 x i64>* %273, align 8, !alias.scope !57, !noalias !54
  %274 = getelementptr %"class.v8::internal::compiler::CompilationDependency"*, %"class.v8::internal::compiler::CompilationDependency"** %266, i64 2
  %275 = bitcast %"class.v8::internal::compiler::CompilationDependency"** %274 to <2 x i64>*
  store <2 x i64> %272, <2 x i64>* %275, align 8, !alias.scope !57, !noalias !54
  %276 = or i64 %264, 4
  %277 = getelementptr %"class.v8::internal::compiler::CompilationDependency"*, %"class.v8::internal::compiler::CompilationDependency"** %215, i64 %276
  %278 = getelementptr %"class.v8::internal::compiler::CompilationDependency"*, %"class.v8::internal::compiler::CompilationDependency"** %221, i64 %276
  %279 = bitcast %"class.v8::internal::compiler::CompilationDependency"** %278 to <2 x i64>*
  %280 = load <2 x i64>, <2 x i64>* %279, align 8, !alias.scope !54
  %281 = getelementptr %"class.v8::internal::compiler::CompilationDependency"*, %"class.v8::internal::compiler::CompilationDependency"** %278, i64 2
  %282 = bitcast %"class.v8::internal::compiler::CompilationDependency"** %281 to <2 x i64>*
  %283 = load <2 x i64>, <2 x i64>* %282, align 8, !alias.scope !54
  %284 = bitcast %"class.v8::internal::compiler::CompilationDependency"** %277 to <2 x i64>*
  store <2 x i64> %280, <2 x i64>* %284, align 8, !alias.scope !57, !noalias !54
  %285 = getelementptr %"class.v8::internal::compiler::CompilationDependency"*, %"class.v8::internal::compiler::CompilationDependency"** %277, i64 2
  %286 = bitcast %"class.v8::internal::compiler::CompilationDependency"** %285 to <2 x i64>*
  store <2 x i64> %283, <2 x i64>* %286, align 8, !alias.scope !57, !noalias !54
  %287 = or i64 %264, 8
  %288 = getelementptr %"class.v8::internal::compiler::CompilationDependency"*, %"class.v8::internal::compiler::CompilationDependency"** %215, i64 %287
  %289 = getelementptr %"class.v8::internal::compiler::CompilationDependency"*, %"class.v8::internal::compiler::CompilationDependency"** %221, i64 %287
  %290 = bitcast %"class.v8::internal::compiler::CompilationDependency"** %289 to <2 x i64>*
  %291 = load <2 x i64>, <2 x i64>* %290, align 8, !alias.scope !54
  %292 = getelementptr %"class.v8::internal::compiler::CompilationDependency"*, %"class.v8::internal::compiler::CompilationDependency"** %289, i64 2
  %293 = bitcast %"class.v8::internal::compiler::CompilationDependency"** %292 to <2 x i64>*
  %294 = load <2 x i64>, <2 x i64>* %293, align 8, !alias.scope !54
  %295 = bitcast %"class.v8::internal::compiler::CompilationDependency"** %288 to <2 x i64>*
  store <2 x i64> %291, <2 x i64>* %295, align 8, !alias.scope !57, !noalias !54
  %296 = getelementptr %"class.v8::internal::compiler::CompilationDependency"*, %"class.v8::internal::compiler::CompilationDependency"** %288, i64 2
  %297 = bitcast %"class.v8::internal::compiler::CompilationDependency"** %296 to <2 x i64>*
  store <2 x i64> %294, <2 x i64>* %297, align 8, !alias.scope !57, !noalias !54
  %298 = or i64 %264, 12
  %299 = getelementptr %"class.v8::internal::compiler::CompilationDependency"*, %"class.v8::internal::compiler::CompilationDependency"** %215, i64 %298
  %300 = getelementptr %"class.v8::internal::compiler::CompilationDependency"*, %"class.v8::internal::compiler::CompilationDependency"** %221, i64 %298
  %301 = bitcast %"class.v8::internal::compiler::CompilationDependency"** %300 to <2 x i64>*
  %302 = load <2 x i64>, <2 x i64>* %301, align 8, !alias.scope !54
  %303 = getelementptr %"class.v8::internal::compiler::CompilationDependency"*, %"class.v8::internal::compiler::CompilationDependency"** %300, i64 2
  %304 = bitcast %"class.v8::internal::compiler::CompilationDependency"** %303 to <2 x i64>*
  %305 = load <2 x i64>, <2 x i64>* %304, align 8, !alias.scope !54
  %306 = bitcast %"class.v8::internal::compiler::CompilationDependency"** %299 to <2 x i64>*
  store <2 x i64> %302, <2 x i64>* %306, align 8, !alias.scope !57, !noalias !54
  %307 = getelementptr %"class.v8::internal::compiler::CompilationDependency"*, %"class.v8::internal::compiler::CompilationDependency"** %299, i64 2
  %308 = bitcast %"class.v8::internal::compiler::CompilationDependency"** %307 to <2 x i64>*
  store <2 x i64> %305, <2 x i64>* %308, align 8, !alias.scope !57, !noalias !54
  %309 = add i64 %264, 16
  %310 = add i64 %265, -4
  %311 = icmp eq i64 %310, 0
  br i1 %311, label %312, label %263, !llvm.loop !59

312:                                              ; preds = %263, %252
  %313 = phi i64 [ 0, %252 ], [ %309, %263 ]
  %314 = icmp eq i64 %259, 0
  br i1 %314, label %331, label %315

315:                                              ; preds = %312, %315
  %316 = phi i64 [ %328, %315 ], [ %313, %312 ]
  %317 = phi i64 [ %329, %315 ], [ %259, %312 ]
  %318 = getelementptr %"class.v8::internal::compiler::CompilationDependency"*, %"class.v8::internal::compiler::CompilationDependency"** %215, i64 %316
  %319 = getelementptr %"class.v8::internal::compiler::CompilationDependency"*, %"class.v8::internal::compiler::CompilationDependency"** %221, i64 %316
  %320 = bitcast %"class.v8::internal::compiler::CompilationDependency"** %319 to <2 x i64>*
  %321 = load <2 x i64>, <2 x i64>* %320, align 8, !alias.scope !54
  %322 = getelementptr %"class.v8::internal::compiler::CompilationDependency"*, %"class.v8::internal::compiler::CompilationDependency"** %319, i64 2
  %323 = bitcast %"class.v8::internal::compiler::CompilationDependency"** %322 to <2 x i64>*
  %324 = load <2 x i64>, <2 x i64>* %323, align 8, !alias.scope !54
  %325 = bitcast %"class.v8::internal::compiler::CompilationDependency"** %318 to <2 x i64>*
  store <2 x i64> %321, <2 x i64>* %325, align 8, !alias.scope !57, !noalias !54
  %326 = getelementptr %"class.v8::internal::compiler::CompilationDependency"*, %"class.v8::internal::compiler::CompilationDependency"** %318, i64 2
  %327 = bitcast %"class.v8::internal::compiler::CompilationDependency"** %326 to <2 x i64>*
  store <2 x i64> %324, <2 x i64>* %327, align 8, !alias.scope !57, !noalias !54
  %328 = add i64 %316, 4
  %329 = add i64 %317, -1
  %330 = icmp eq i64 %329, 0
  br i1 %330, label %331, label %315, !llvm.loop !60

331:                                              ; preds = %315, %312
  %332 = icmp eq i64 %231, %253
  br i1 %332, label %333, label %233

333:                                              ; preds = %344, %331
  %334 = phi %"class.v8::internal::compiler::CompilationDependency"** [ %254, %331 ], [ %351, %344 ]
  %335 = ptrtoint %"class.v8::internal::compiler::CompilationDependency"** %334 to i64
  br label %336

336:                                              ; preds = %333, %213
  %337 = phi i64 [ %335, %333 ], [ %214, %213 ]
  store i64 %337, i64* %23, align 8
  %338 = icmp eq i64 %219, 0
  br i1 %338, label %353, label %339

339:                                              ; preds = %336
  %340 = sub nsw i64 0, %220
  %341 = getelementptr inbounds %"class.v8::internal::compiler::CompilationDependency"*, %"class.v8::internal::compiler::CompilationDependency"** %215, i64 %340
  %342 = bitcast %"class.v8::internal::compiler::CompilationDependency"** %341 to i8*
  %343 = bitcast %"class.v8::internal::compiler::CompilationDependency"** %1 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %342, i8* align 8 %343, i64 %219, i1 false) #8
  br label %353

344:                                              ; preds = %233, %344
  %345 = phi %"class.v8::internal::compiler::CompilationDependency"** [ %351, %344 ], [ %234, %233 ]
  %346 = phi %"class.v8::internal::compiler::CompilationDependency"** [ %350, %344 ], [ %235, %233 ]
  %347 = bitcast %"class.v8::internal::compiler::CompilationDependency"** %346 to i64*
  %348 = load i64, i64* %347, align 8
  %349 = bitcast %"class.v8::internal::compiler::CompilationDependency"** %345 to i64*
  store i64 %348, i64* %349, align 8
  %350 = getelementptr inbounds %"class.v8::internal::compiler::CompilationDependency"*, %"class.v8::internal::compiler::CompilationDependency"** %346, i64 1
  %351 = getelementptr inbounds %"class.v8::internal::compiler::CompilationDependency"*, %"class.v8::internal::compiler::CompilationDependency"** %345, i64 1
  %352 = icmp ult %"class.v8::internal::compiler::CompilationDependency"** %350, %18
  br i1 %352, label %344, label %333, !llvm.loop !61

353:                                              ; preds = %336, %339
  %354 = ptrtoint %"class.v8::internal::compiler::CompilationDependency"** %216 to i64
  %355 = sub i64 %354, %7
  %356 = icmp eq i64 %355, 0
  br i1 %356, label %846, label %357

357:                                              ; preds = %353
  %358 = bitcast %"class.v8::internal::compiler::CompilationDependency"** %2 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %5, i8* align 8 %358, i64 %355, i1 false) #8
  br label %846

359:                                              ; preds = %13
  %360 = bitcast %"class.std::__1::vector.23"* %0 to i64*
  %361 = load i64, i64* %360, align 8
  %362 = sub i64 %19, %361
  %363 = ashr exact i64 %362, 3
  %364 = add nsw i64 %363, %11
  %365 = icmp ugt i64 %364, 268435455
  br i1 %365, label %366, label %368

366:                                              ; preds = %359
  %367 = bitcast %"class.std::__1::vector.23"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %367) #12
  unreachable

368:                                              ; preds = %359
  %369 = sub i64 %16, %361
  %370 = ashr exact i64 %369, 3
  %371 = icmp ult i64 %370, 134217727
  br i1 %371, label %375, label %372

372:                                              ; preds = %368
  %373 = sub i64 %6, %361
  %374 = ashr exact i64 %373, 3
  br label %382

375:                                              ; preds = %368
  %376 = ashr exact i64 %369, 2
  %377 = icmp ult i64 %376, %364
  %378 = select i1 %377, i64 %364, i64 %376
  %379 = sub i64 %6, %361
  %380 = ashr exact i64 %379, 3
  %381 = icmp eq i64 %378, 0
  br i1 %381, label %401, label %382

382:                                              ; preds = %372, %375
  %383 = phi i64 [ %374, %372 ], [ %380, %375 ]
  %384 = phi i64 [ 268435455, %372 ], [ %378, %375 ]
  %385 = getelementptr inbounds %"class.std::__1::vector.23", %"class.std::__1::vector.23"* %0, i64 0, i32 0, i32 2, i32 1, i32 0, i32 0
  %386 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %385, align 8
  %387 = shl i64 %384, 3
  %388 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %386, i64 0, i32 2
  %389 = load i64, i64* %388, align 8
  %390 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %386, i64 0, i32 3
  %391 = load i64, i64* %390, align 8
  %392 = sub i64 %391, %389
  %393 = icmp ugt i64 %387, %392
  br i1 %393, label %394, label %396, !prof !2

394:                                              ; preds = %382
  %395 = tail call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %386, i64 %387) #8
  br label %398

396:                                              ; preds = %382
  %397 = add i64 %389, %387
  store i64 %397, i64* %388, align 8
  br label %398

398:                                              ; preds = %396, %394
  %399 = phi i64 [ %395, %394 ], [ %389, %396 ]
  %400 = inttoptr i64 %399 to %"class.v8::internal::compiler::CompilationDependency"**
  br label %401

401:                                              ; preds = %398, %375
  %402 = phi i64 [ %383, %398 ], [ %380, %375 ]
  %403 = phi i64 [ %384, %398 ], [ 0, %375 ]
  %404 = phi %"class.v8::internal::compiler::CompilationDependency"** [ %400, %398 ], [ null, %375 ]
  %405 = getelementptr inbounds %"class.v8::internal::compiler::CompilationDependency"*, %"class.v8::internal::compiler::CompilationDependency"** %404, i64 %402
  %406 = ptrtoint %"class.v8::internal::compiler::CompilationDependency"** %405 to i64
  %407 = getelementptr inbounds %"class.v8::internal::compiler::CompilationDependency"*, %"class.v8::internal::compiler::CompilationDependency"** %404, i64 %403
  %408 = ptrtoint %"class.v8::internal::compiler::CompilationDependency"** %407 to i64
  %409 = getelementptr inbounds %"class.v8::internal::compiler::CompilationDependency"*, %"class.v8::internal::compiler::CompilationDependency"** %405, i64 %11
  %410 = add i64 %10, -8
  %411 = lshr i64 %410, 3
  %412 = add nuw nsw i64 %411, 1
  %413 = and i64 %412, 7
  %414 = icmp eq i64 %413, 0
  br i1 %414, label %430, label %415

415:                                              ; preds = %401, %415
  %416 = phi %"class.v8::internal::compiler::CompilationDependency"** [ %423, %415 ], [ %405, %401 ]
  %417 = phi i64 [ %424, %415 ], [ %406, %401 ]
  %418 = phi %"class.v8::internal::compiler::CompilationDependency"** [ %425, %415 ], [ %2, %401 ]
  %419 = phi i64 [ %426, %415 ], [ %413, %401 ]
  %420 = bitcast %"class.v8::internal::compiler::CompilationDependency"** %418 to i64*
  %421 = load i64, i64* %420, align 8
  %422 = inttoptr i64 %417 to i64*
  store i64 %421, i64* %422, align 8
  %423 = getelementptr inbounds %"class.v8::internal::compiler::CompilationDependency"*, %"class.v8::internal::compiler::CompilationDependency"** %416, i64 1
  %424 = ptrtoint %"class.v8::internal::compiler::CompilationDependency"** %423 to i64
  %425 = getelementptr inbounds %"class.v8::internal::compiler::CompilationDependency"*, %"class.v8::internal::compiler::CompilationDependency"** %418, i64 1
  %426 = add i64 %419, -1
  %427 = icmp eq i64 %426, 0
  br i1 %427, label %428, label %415, !llvm.loop !62

428:                                              ; preds = %415
  %429 = ptrtoint %"class.v8::internal::compiler::CompilationDependency"** %423 to i64
  br label %430

430:                                              ; preds = %401, %428
  %431 = phi %"class.v8::internal::compiler::CompilationDependency"** [ %405, %401 ], [ %423, %428 ]
  %432 = phi i64 [ %406, %401 ], [ %429, %428 ]
  %433 = phi %"class.v8::internal::compiler::CompilationDependency"** [ %2, %401 ], [ %425, %428 ]
  %434 = icmp ult i64 %410, 56
  br i1 %434, label %481, label %435

435:                                              ; preds = %430, %435
  %436 = phi %"class.v8::internal::compiler::CompilationDependency"** [ %477, %435 ], [ %431, %430 ]
  %437 = phi i64 [ %478, %435 ], [ %432, %430 ]
  %438 = phi %"class.v8::internal::compiler::CompilationDependency"** [ %479, %435 ], [ %433, %430 ]
  %439 = bitcast %"class.v8::internal::compiler::CompilationDependency"** %438 to i64*
  %440 = load i64, i64* %439, align 8
  %441 = inttoptr i64 %437 to i64*
  store i64 %440, i64* %441, align 8
  %442 = getelementptr inbounds %"class.v8::internal::compiler::CompilationDependency"*, %"class.v8::internal::compiler::CompilationDependency"** %436, i64 1
  %443 = getelementptr inbounds %"class.v8::internal::compiler::CompilationDependency"*, %"class.v8::internal::compiler::CompilationDependency"** %438, i64 1
  %444 = bitcast %"class.v8::internal::compiler::CompilationDependency"** %443 to i64*
  %445 = load i64, i64* %444, align 8
  %446 = bitcast %"class.v8::internal::compiler::CompilationDependency"** %442 to i64*
  store i64 %445, i64* %446, align 8
  %447 = getelementptr inbounds %"class.v8::internal::compiler::CompilationDependency"*, %"class.v8::internal::compiler::CompilationDependency"** %436, i64 2
  %448 = getelementptr inbounds %"class.v8::internal::compiler::CompilationDependency"*, %"class.v8::internal::compiler::CompilationDependency"** %438, i64 2
  %449 = bitcast %"class.v8::internal::compiler::CompilationDependency"** %448 to i64*
  %450 = load i64, i64* %449, align 8
  %451 = bitcast %"class.v8::internal::compiler::CompilationDependency"** %447 to i64*
  store i64 %450, i64* %451, align 8
  %452 = getelementptr inbounds %"class.v8::internal::compiler::CompilationDependency"*, %"class.v8::internal::compiler::CompilationDependency"** %436, i64 3
  %453 = getelementptr inbounds %"class.v8::internal::compiler::CompilationDependency"*, %"class.v8::internal::compiler::CompilationDependency"** %438, i64 3
  %454 = bitcast %"class.v8::internal::compiler::CompilationDependency"** %453 to i64*
  %455 = load i64, i64* %454, align 8
  %456 = bitcast %"class.v8::internal::compiler::CompilationDependency"** %452 to i64*
  store i64 %455, i64* %456, align 8
  %457 = getelementptr inbounds %"class.v8::internal::compiler::CompilationDependency"*, %"class.v8::internal::compiler::CompilationDependency"** %436, i64 4
  %458 = getelementptr inbounds %"class.v8::internal::compiler::CompilationDependency"*, %"class.v8::internal::compiler::CompilationDependency"** %438, i64 4
  %459 = bitcast %"class.v8::internal::compiler::CompilationDependency"** %458 to i64*
  %460 = load i64, i64* %459, align 8
  %461 = bitcast %"class.v8::internal::compiler::CompilationDependency"** %457 to i64*
  store i64 %460, i64* %461, align 8
  %462 = getelementptr inbounds %"class.v8::internal::compiler::CompilationDependency"*, %"class.v8::internal::compiler::CompilationDependency"** %436, i64 5
  %463 = getelementptr inbounds %"class.v8::internal::compiler::CompilationDependency"*, %"class.v8::internal::compiler::CompilationDependency"** %438, i64 5
  %464 = bitcast %"class.v8::internal::compiler::CompilationDependency"** %463 to i64*
  %465 = load i64, i64* %464, align 8
  %466 = bitcast %"class.v8::internal::compiler::CompilationDependency"** %462 to i64*
  store i64 %465, i64* %466, align 8
  %467 = getelementptr inbounds %"class.v8::internal::compiler::CompilationDependency"*, %"class.v8::internal::compiler::CompilationDependency"** %436, i64 6
  %468 = getelementptr inbounds %"class.v8::internal::compiler::CompilationDependency"*, %"class.v8::internal::compiler::CompilationDependency"** %438, i64 6
  %469 = bitcast %"class.v8::internal::compiler::CompilationDependency"** %468 to i64*
  %470 = load i64, i64* %469, align 8
  %471 = bitcast %"class.v8::internal::compiler::CompilationDependency"** %467 to i64*
  store i64 %470, i64* %471, align 8
  %472 = getelementptr inbounds %"class.v8::internal::compiler::CompilationDependency"*, %"class.v8::internal::compiler::CompilationDependency"** %436, i64 7
  %473 = getelementptr inbounds %"class.v8::internal::compiler::CompilationDependency"*, %"class.v8::internal::compiler::CompilationDependency"** %438, i64 7
  %474 = bitcast %"class.v8::internal::compiler::CompilationDependency"** %473 to i64*
  %475 = load i64, i64* %474, align 8
  %476 = bitcast %"class.v8::internal::compiler::CompilationDependency"** %472 to i64*
  store i64 %475, i64* %476, align 8
  %477 = getelementptr inbounds %"class.v8::internal::compiler::CompilationDependency"*, %"class.v8::internal::compiler::CompilationDependency"** %436, i64 8
  %478 = ptrtoint %"class.v8::internal::compiler::CompilationDependency"** %477 to i64
  %479 = getelementptr inbounds %"class.v8::internal::compiler::CompilationDependency"*, %"class.v8::internal::compiler::CompilationDependency"** %438, i64 8
  %480 = icmp eq %"class.v8::internal::compiler::CompilationDependency"** %409, %477
  br i1 %480, label %481, label %435

481:                                              ; preds = %435, %430
  %482 = load %"class.v8::internal::compiler::CompilationDependency"**, %"class.v8::internal::compiler::CompilationDependency"*** %8, align 8
  %483 = ptrtoint %"class.v8::internal::compiler::CompilationDependency"** %482 to i64
  %484 = icmp eq %"class.v8::internal::compiler::CompilationDependency"** %482, %1
  br i1 %484, label %657, label %485

485:                                              ; preds = %481
  %486 = getelementptr %"class.v8::internal::compiler::CompilationDependency"*, %"class.v8::internal::compiler::CompilationDependency"** %1, i64 -1
  %487 = ptrtoint %"class.v8::internal::compiler::CompilationDependency"** %486 to i64
  %488 = sub i64 %487, %483
  %489 = lshr i64 %488, 3
  %490 = add nuw nsw i64 %489, 1
  %491 = icmp ult i64 %490, 4
  br i1 %491, label %584, label %492

492:                                              ; preds = %485
  %493 = getelementptr %"class.v8::internal::compiler::CompilationDependency"*, %"class.v8::internal::compiler::CompilationDependency"** %1, i64 -1
  %494 = ptrtoint %"class.v8::internal::compiler::CompilationDependency"** %493 to i64
  %495 = sub i64 %494, %483
  %496 = lshr i64 %495, 3
  %497 = xor i64 %496, -1
  %498 = add nsw i64 %402, %497
  %499 = getelementptr %"class.v8::internal::compiler::CompilationDependency"*, %"class.v8::internal::compiler::CompilationDependency"** %404, i64 %498
  %500 = xor i64 %496, -1
  %501 = getelementptr %"class.v8::internal::compiler::CompilationDependency"*, %"class.v8::internal::compiler::CompilationDependency"** %1, i64 %500
  %502 = icmp ult %"class.v8::internal::compiler::CompilationDependency"** %499, %1
  %503 = icmp ult %"class.v8::internal::compiler::CompilationDependency"** %501, %405
  %504 = and i1 %502, %503
  br i1 %504, label %584, label %505

505:                                              ; preds = %492
  %506 = and i64 %490, 4611686018427387900
  %507 = sub nsw i64 0, %506
  %508 = getelementptr %"class.v8::internal::compiler::CompilationDependency"*, %"class.v8::internal::compiler::CompilationDependency"** %405, i64 %507
  %509 = sub nsw i64 0, %506
  %510 = getelementptr %"class.v8::internal::compiler::CompilationDependency"*, %"class.v8::internal::compiler::CompilationDependency"** %1, i64 %509
  %511 = add nsw i64 %506, -4
  %512 = lshr exact i64 %511, 2
  %513 = add nuw nsw i64 %512, 1
  %514 = and i64 %513, 1
  %515 = icmp eq i64 %511, 0
  br i1 %515, label %560, label %516

516:                                              ; preds = %505
  %517 = sub nuw nsw i64 %513, %514
  %518 = getelementptr %"class.v8::internal::compiler::CompilationDependency"*, %"class.v8::internal::compiler::CompilationDependency"** %405, i64 -1
  %519 = getelementptr %"class.v8::internal::compiler::CompilationDependency"*, %"class.v8::internal::compiler::CompilationDependency"** %1, i64 -1
  %520 = getelementptr %"class.v8::internal::compiler::CompilationDependency"*, %"class.v8::internal::compiler::CompilationDependency"** %405, i64 -1
  %521 = getelementptr %"class.v8::internal::compiler::CompilationDependency"*, %"class.v8::internal::compiler::CompilationDependency"** %1, i64 -1
  br label %522

522:                                              ; preds = %522, %516
  %523 = phi i64 [ 0, %516 ], [ %557, %522 ]
  %524 = phi i64 [ %517, %516 ], [ %558, %522 ]
  %525 = sub i64 0, %523
  %526 = sub i64 0, %523
  %527 = getelementptr inbounds %"class.v8::internal::compiler::CompilationDependency"*, %"class.v8::internal::compiler::CompilationDependency"** %518, i64 %525
  %528 = getelementptr inbounds %"class.v8::internal::compiler::CompilationDependency"*, %"class.v8::internal::compiler::CompilationDependency"** %519, i64 %526
  %529 = getelementptr inbounds %"class.v8::internal::compiler::CompilationDependency"*, %"class.v8::internal::compiler::CompilationDependency"** %528, i64 -1
  %530 = bitcast %"class.v8::internal::compiler::CompilationDependency"** %529 to <2 x i64>*
  %531 = load <2 x i64>, <2 x i64>* %530, align 8, !alias.scope !63
  %532 = getelementptr inbounds %"class.v8::internal::compiler::CompilationDependency"*, %"class.v8::internal::compiler::CompilationDependency"** %528, i64 -2
  %533 = getelementptr inbounds %"class.v8::internal::compiler::CompilationDependency"*, %"class.v8::internal::compiler::CompilationDependency"** %532, i64 -1
  %534 = bitcast %"class.v8::internal::compiler::CompilationDependency"** %533 to <2 x i64>*
  %535 = load <2 x i64>, <2 x i64>* %534, align 8, !alias.scope !63
  %536 = getelementptr inbounds %"class.v8::internal::compiler::CompilationDependency"*, %"class.v8::internal::compiler::CompilationDependency"** %527, i64 -1
  %537 = bitcast %"class.v8::internal::compiler::CompilationDependency"** %536 to <2 x i64>*
  store <2 x i64> %531, <2 x i64>* %537, align 8, !alias.scope !66, !noalias !63
  %538 = getelementptr inbounds %"class.v8::internal::compiler::CompilationDependency"*, %"class.v8::internal::compiler::CompilationDependency"** %527, i64 -2
  %539 = getelementptr inbounds %"class.v8::internal::compiler::CompilationDependency"*, %"class.v8::internal::compiler::CompilationDependency"** %538, i64 -1
  %540 = bitcast %"class.v8::internal::compiler::CompilationDependency"** %539 to <2 x i64>*
  store <2 x i64> %535, <2 x i64>* %540, align 8, !alias.scope !66, !noalias !63
  %541 = sub nuw nsw i64 -4, %523
  %542 = sub nuw nsw i64 -4, %523
  %543 = getelementptr inbounds %"class.v8::internal::compiler::CompilationDependency"*, %"class.v8::internal::compiler::CompilationDependency"** %520, i64 %541
  %544 = getelementptr inbounds %"class.v8::internal::compiler::CompilationDependency"*, %"class.v8::internal::compiler::CompilationDependency"** %521, i64 %542
  %545 = getelementptr inbounds %"class.v8::internal::compiler::CompilationDependency"*, %"class.v8::internal::compiler::CompilationDependency"** %544, i64 -1
  %546 = bitcast %"class.v8::internal::compiler::CompilationDependency"** %545 to <2 x i64>*
  %547 = load <2 x i64>, <2 x i64>* %546, align 8, !alias.scope !63
  %548 = getelementptr inbounds %"class.v8::internal::compiler::CompilationDependency"*, %"class.v8::internal::compiler::CompilationDependency"** %544, i64 -2
  %549 = getelementptr inbounds %"class.v8::internal::compiler::CompilationDependency"*, %"class.v8::internal::compiler::CompilationDependency"** %548, i64 -1
  %550 = bitcast %"class.v8::internal::compiler::CompilationDependency"** %549 to <2 x i64>*
  %551 = load <2 x i64>, <2 x i64>* %550, align 8, !alias.scope !63
  %552 = getelementptr inbounds %"class.v8::internal::compiler::CompilationDependency"*, %"class.v8::internal::compiler::CompilationDependency"** %543, i64 -1
  %553 = bitcast %"class.v8::internal::compiler::CompilationDependency"** %552 to <2 x i64>*
  store <2 x i64> %547, <2 x i64>* %553, align 8, !alias.scope !66, !noalias !63
  %554 = getelementptr inbounds %"class.v8::internal::compiler::CompilationDependency"*, %"class.v8::internal::compiler::CompilationDependency"** %543, i64 -2
  %555 = getelementptr inbounds %"class.v8::internal::compiler::CompilationDependency"*, %"class.v8::internal::compiler::CompilationDependency"** %554, i64 -1
  %556 = bitcast %"class.v8::internal::compiler::CompilationDependency"** %555 to <2 x i64>*
  store <2 x i64> %551, <2 x i64>* %556, align 8, !alias.scope !66, !noalias !63
  %557 = add i64 %523, 8
  %558 = add i64 %524, -2
  %559 = icmp eq i64 %558, 0
  br i1 %559, label %560, label %522, !llvm.loop !68

560:                                              ; preds = %522, %505
  %561 = phi i64 [ 0, %505 ], [ %557, %522 ]
  %562 = icmp eq i64 %514, 0
  br i1 %562, label %582, label %563

563:                                              ; preds = %560
  %564 = sub i64 0, %561
  %565 = getelementptr %"class.v8::internal::compiler::CompilationDependency"*, %"class.v8::internal::compiler::CompilationDependency"** %405, i64 -1
  %566 = sub i64 0, %561
  %567 = getelementptr %"class.v8::internal::compiler::CompilationDependency"*, %"class.v8::internal::compiler::CompilationDependency"** %1, i64 -1
  %568 = getelementptr inbounds %"class.v8::internal::compiler::CompilationDependency"*, %"class.v8::internal::compiler::CompilationDependency"** %565, i64 %564
  %569 = getelementptr inbounds %"class.v8::internal::compiler::CompilationDependency"*, %"class.v8::internal::compiler::CompilationDependency"** %567, i64 %566
  %570 = getelementptr inbounds %"class.v8::internal::compiler::CompilationDependency"*, %"class.v8::internal::compiler::CompilationDependency"** %569, i64 -1
  %571 = bitcast %"class.v8::internal::compiler::CompilationDependency"** %570 to <2 x i64>*
  %572 = load <2 x i64>, <2 x i64>* %571, align 8, !alias.scope !63
  %573 = getelementptr inbounds %"class.v8::internal::compiler::CompilationDependency"*, %"class.v8::internal::compiler::CompilationDependency"** %569, i64 -2
  %574 = getelementptr inbounds %"class.v8::internal::compiler::CompilationDependency"*, %"class.v8::internal::compiler::CompilationDependency"** %573, i64 -1
  %575 = bitcast %"class.v8::internal::compiler::CompilationDependency"** %574 to <2 x i64>*
  %576 = load <2 x i64>, <2 x i64>* %575, align 8, !alias.scope !63
  %577 = getelementptr inbounds %"class.v8::internal::compiler::CompilationDependency"*, %"class.v8::internal::compiler::CompilationDependency"** %568, i64 -1
  %578 = bitcast %"class.v8::internal::compiler::CompilationDependency"** %577 to <2 x i64>*
  store <2 x i64> %572, <2 x i64>* %578, align 8, !alias.scope !66, !noalias !63
  %579 = getelementptr inbounds %"class.v8::internal::compiler::CompilationDependency"*, %"class.v8::internal::compiler::CompilationDependency"** %568, i64 -2
  %580 = getelementptr inbounds %"class.v8::internal::compiler::CompilationDependency"*, %"class.v8::internal::compiler::CompilationDependency"** %579, i64 -1
  %581 = bitcast %"class.v8::internal::compiler::CompilationDependency"** %580 to <2 x i64>*
  store <2 x i64> %576, <2 x i64>* %581, align 8, !alias.scope !66, !noalias !63
  br label %582

582:                                              ; preds = %560, %563
  %583 = icmp eq i64 %490, %506
  br i1 %583, label %654, label %584

584:                                              ; preds = %582, %492, %485
  %585 = phi %"class.v8::internal::compiler::CompilationDependency"** [ %405, %492 ], [ %405, %485 ], [ %508, %582 ]
  %586 = phi %"class.v8::internal::compiler::CompilationDependency"** [ %1, %492 ], [ %1, %485 ], [ %510, %582 ]
  %587 = getelementptr %"class.v8::internal::compiler::CompilationDependency"*, %"class.v8::internal::compiler::CompilationDependency"** %586, i64 -1
  %588 = ptrtoint %"class.v8::internal::compiler::CompilationDependency"** %587 to i64
  %589 = sub i64 %588, %483
  %590 = lshr i64 %589, 3
  %591 = add nuw nsw i64 %590, 1
  %592 = and i64 %591, 7
  %593 = icmp eq i64 %592, 0
  br i1 %593, label %605, label %594

594:                                              ; preds = %584, %594
  %595 = phi %"class.v8::internal::compiler::CompilationDependency"** [ %598, %594 ], [ %585, %584 ]
  %596 = phi %"class.v8::internal::compiler::CompilationDependency"** [ %599, %594 ], [ %586, %584 ]
  %597 = phi i64 [ %603, %594 ], [ %592, %584 ]
  %598 = getelementptr inbounds %"class.v8::internal::compiler::CompilationDependency"*, %"class.v8::internal::compiler::CompilationDependency"** %595, i64 -1
  %599 = getelementptr inbounds %"class.v8::internal::compiler::CompilationDependency"*, %"class.v8::internal::compiler::CompilationDependency"** %596, i64 -1
  %600 = bitcast %"class.v8::internal::compiler::CompilationDependency"** %599 to i64*
  %601 = load i64, i64* %600, align 8
  %602 = bitcast %"class.v8::internal::compiler::CompilationDependency"** %598 to i64*
  store i64 %601, i64* %602, align 8
  %603 = add i64 %597, -1
  %604 = icmp eq i64 %603, 0
  br i1 %604, label %605, label %594, !llvm.loop !69

605:                                              ; preds = %594, %584
  %606 = phi %"class.v8::internal::compiler::CompilationDependency"** [ undef, %584 ], [ %598, %594 ]
  %607 = phi %"class.v8::internal::compiler::CompilationDependency"** [ %585, %584 ], [ %598, %594 ]
  %608 = phi %"class.v8::internal::compiler::CompilationDependency"** [ %586, %584 ], [ %599, %594 ]
  %609 = icmp ult i64 %589, 56
  br i1 %609, label %654, label %610

610:                                              ; preds = %605, %610
  %611 = phi %"class.v8::internal::compiler::CompilationDependency"** [ %648, %610 ], [ %607, %605 ]
  %612 = phi %"class.v8::internal::compiler::CompilationDependency"** [ %649, %610 ], [ %608, %605 ]
  %613 = getelementptr inbounds %"class.v8::internal::compiler::CompilationDependency"*, %"class.v8::internal::compiler::CompilationDependency"** %611, i64 -1
  %614 = getelementptr inbounds %"class.v8::internal::compiler::CompilationDependency"*, %"class.v8::internal::compiler::CompilationDependency"** %612, i64 -1
  %615 = bitcast %"class.v8::internal::compiler::CompilationDependency"** %614 to i64*
  %616 = load i64, i64* %615, align 8
  %617 = bitcast %"class.v8::internal::compiler::CompilationDependency"** %613 to i64*
  store i64 %616, i64* %617, align 8
  %618 = getelementptr inbounds %"class.v8::internal::compiler::CompilationDependency"*, %"class.v8::internal::compiler::CompilationDependency"** %611, i64 -2
  %619 = getelementptr inbounds %"class.v8::internal::compiler::CompilationDependency"*, %"class.v8::internal::compiler::CompilationDependency"** %612, i64 -2
  %620 = bitcast %"class.v8::internal::compiler::CompilationDependency"** %619 to i64*
  %621 = load i64, i64* %620, align 8
  %622 = bitcast %"class.v8::internal::compiler::CompilationDependency"** %618 to i64*
  store i64 %621, i64* %622, align 8
  %623 = getelementptr inbounds %"class.v8::internal::compiler::CompilationDependency"*, %"class.v8::internal::compiler::CompilationDependency"** %611, i64 -3
  %624 = getelementptr inbounds %"class.v8::internal::compiler::CompilationDependency"*, %"class.v8::internal::compiler::CompilationDependency"** %612, i64 -3
  %625 = bitcast %"class.v8::internal::compiler::CompilationDependency"** %624 to i64*
  %626 = load i64, i64* %625, align 8
  %627 = bitcast %"class.v8::internal::compiler::CompilationDependency"** %623 to i64*
  store i64 %626, i64* %627, align 8
  %628 = getelementptr inbounds %"class.v8::internal::compiler::CompilationDependency"*, %"class.v8::internal::compiler::CompilationDependency"** %611, i64 -4
  %629 = getelementptr inbounds %"class.v8::internal::compiler::CompilationDependency"*, %"class.v8::internal::compiler::CompilationDependency"** %612, i64 -4
  %630 = bitcast %"class.v8::internal::compiler::CompilationDependency"** %629 to i64*
  %631 = load i64, i64* %630, align 8
  %632 = bitcast %"class.v8::internal::compiler::CompilationDependency"** %628 to i64*
  store i64 %631, i64* %632, align 8
  %633 = getelementptr inbounds %"class.v8::internal::compiler::CompilationDependency"*, %"class.v8::internal::compiler::CompilationDependency"** %611, i64 -5
  %634 = getelementptr inbounds %"class.v8::internal::compiler::CompilationDependency"*, %"class.v8::internal::compiler::CompilationDependency"** %612, i64 -5
  %635 = bitcast %"class.v8::internal::compiler::CompilationDependency"** %634 to i64*
  %636 = load i64, i64* %635, align 8
  %637 = bitcast %"class.v8::internal::compiler::CompilationDependency"** %633 to i64*
  store i64 %636, i64* %637, align 8
  %638 = getelementptr inbounds %"class.v8::internal::compiler::CompilationDependency"*, %"class.v8::internal::compiler::CompilationDependency"** %611, i64 -6
  %639 = getelementptr inbounds %"class.v8::internal::compiler::CompilationDependency"*, %"class.v8::internal::compiler::CompilationDependency"** %612, i64 -6
  %640 = bitcast %"class.v8::internal::compiler::CompilationDependency"** %639 to i64*
  %641 = load i64, i64* %640, align 8
  %642 = bitcast %"class.v8::internal::compiler::CompilationDependency"** %638 to i64*
  store i64 %641, i64* %642, align 8
  %643 = getelementptr inbounds %"class.v8::internal::compiler::CompilationDependency"*, %"class.v8::internal::compiler::CompilationDependency"** %611, i64 -7
  %644 = getelementptr inbounds %"class.v8::internal::compiler::CompilationDependency"*, %"class.v8::internal::compiler::CompilationDependency"** %612, i64 -7
  %645 = bitcast %"class.v8::internal::compiler::CompilationDependency"** %644 to i64*
  %646 = load i64, i64* %645, align 8
  %647 = bitcast %"class.v8::internal::compiler::CompilationDependency"** %643 to i64*
  store i64 %646, i64* %647, align 8
  %648 = getelementptr inbounds %"class.v8::internal::compiler::CompilationDependency"*, %"class.v8::internal::compiler::CompilationDependency"** %611, i64 -8
  %649 = getelementptr inbounds %"class.v8::internal::compiler::CompilationDependency"*, %"class.v8::internal::compiler::CompilationDependency"** %612, i64 -8
  %650 = bitcast %"class.v8::internal::compiler::CompilationDependency"** %649 to i64*
  %651 = load i64, i64* %650, align 8
  %652 = bitcast %"class.v8::internal::compiler::CompilationDependency"** %648 to i64*
  store i64 %651, i64* %652, align 8
  %653 = icmp eq %"class.v8::internal::compiler::CompilationDependency"** %649, %482
  br i1 %653, label %654, label %610, !llvm.loop !70

654:                                              ; preds = %605, %610, %582
  %655 = phi %"class.v8::internal::compiler::CompilationDependency"** [ %508, %582 ], [ %606, %605 ], [ %648, %610 ]
  %656 = ptrtoint %"class.v8::internal::compiler::CompilationDependency"** %655 to i64
  br label %657

657:                                              ; preds = %654, %481
  %658 = phi i64 [ %406, %481 ], [ %656, %654 ]
  %659 = phi %"class.v8::internal::compiler::CompilationDependency"** [ %405, %481 ], [ %655, %654 ]
  %660 = load %"class.v8::internal::compiler::CompilationDependency"**, %"class.v8::internal::compiler::CompilationDependency"*** %17, align 8
  %661 = icmp eq %"class.v8::internal::compiler::CompilationDependency"** %660, %1
  br i1 %661, label %662, label %664

662:                                              ; preds = %657
  %663 = ptrtoint %"class.v8::internal::compiler::CompilationDependency"** %659 to i64
  br label %842

664:                                              ; preds = %657
  %665 = getelementptr %"class.v8::internal::compiler::CompilationDependency"*, %"class.v8::internal::compiler::CompilationDependency"** %660, i64 -1
  %666 = ptrtoint %"class.v8::internal::compiler::CompilationDependency"** %665 to i64
  %667 = sub i64 %666, %6
  %668 = lshr i64 %667, 3
  %669 = add nuw nsw i64 %668, 1
  %670 = icmp ult i64 %669, 4
  br i1 %670, label %767, label %671

671:                                              ; preds = %664
  %672 = add nsw i64 %402, %11
  %673 = getelementptr %"class.v8::internal::compiler::CompilationDependency"*, %"class.v8::internal::compiler::CompilationDependency"** %660, i64 -1
  %674 = ptrtoint %"class.v8::internal::compiler::CompilationDependency"** %673 to i64
  %675 = sub i64 %674, %6
  %676 = lshr i64 %675, 3
  %677 = add nsw i64 %672, %676
  %678 = add nsw i64 %677, 1
  %679 = getelementptr %"class.v8::internal::compiler::CompilationDependency"*, %"class.v8::internal::compiler::CompilationDependency"** %404, i64 %678
  %680 = add nuw nsw i64 %676, 1
  %681 = getelementptr %"class.v8::internal::compiler::CompilationDependency"*, %"class.v8::internal::compiler::CompilationDependency"** %1, i64 %680
  %682 = icmp ult %"class.v8::internal::compiler::CompilationDependency"** %409, %681
  %683 = icmp ugt %"class.v8::internal::compiler::CompilationDependency"** %679, %1
  %684 = and i1 %682, %683
  br i1 %684, label %767, label %685

685:                                              ; preds = %671
  %686 = and i64 %669, 4611686018427387900
  %687 = getelementptr %"class.v8::internal::compiler::CompilationDependency"*, %"class.v8::internal::compiler::CompilationDependency"** %409, i64 %686
  %688 = getelementptr %"class.v8::internal::compiler::CompilationDependency"*, %"class.v8::internal::compiler::CompilationDependency"** %409, i64 %686
  %689 = getelementptr %"class.v8::internal::compiler::CompilationDependency"*, %"class.v8::internal::compiler::CompilationDependency"** %1, i64 %686
  %690 = add nsw i64 %686, -4
  %691 = lshr exact i64 %690, 2
  %692 = add nuw nsw i64 %691, 1
  %693 = and i64 %692, 3
  %694 = icmp ult i64 %690, 12
  br i1 %694, label %746, label %695

695:                                              ; preds = %685
  %696 = sub nsw i64 %692, %693
  br label %697

697:                                              ; preds = %697, %695
  %698 = phi i64 [ 0, %695 ], [ %743, %697 ]
  %699 = phi i64 [ %696, %695 ], [ %744, %697 ]
  %700 = getelementptr %"class.v8::internal::compiler::CompilationDependency"*, %"class.v8::internal::compiler::CompilationDependency"** %409, i64 %698
  %701 = getelementptr %"class.v8::internal::compiler::CompilationDependency"*, %"class.v8::internal::compiler::CompilationDependency"** %1, i64 %698
  %702 = bitcast %"class.v8::internal::compiler::CompilationDependency"** %701 to <2 x i64>*
  %703 = load <2 x i64>, <2 x i64>* %702, align 8, !alias.scope !71
  %704 = getelementptr %"class.v8::internal::compiler::CompilationDependency"*, %"class.v8::internal::compiler::CompilationDependency"** %701, i64 2
  %705 = bitcast %"class.v8::internal::compiler::CompilationDependency"** %704 to <2 x i64>*
  %706 = load <2 x i64>, <2 x i64>* %705, align 8, !alias.scope !71
  %707 = bitcast %"class.v8::internal::compiler::CompilationDependency"** %700 to <2 x i64>*
  store <2 x i64> %703, <2 x i64>* %707, align 8, !alias.scope !74, !noalias !71
  %708 = getelementptr %"class.v8::internal::compiler::CompilationDependency"*, %"class.v8::internal::compiler::CompilationDependency"** %700, i64 2
  %709 = bitcast %"class.v8::internal::compiler::CompilationDependency"** %708 to <2 x i64>*
  store <2 x i64> %706, <2 x i64>* %709, align 8, !alias.scope !74, !noalias !71
  %710 = or i64 %698, 4
  %711 = getelementptr %"class.v8::internal::compiler::CompilationDependency"*, %"class.v8::internal::compiler::CompilationDependency"** %409, i64 %710
  %712 = getelementptr %"class.v8::internal::compiler::CompilationDependency"*, %"class.v8::internal::compiler::CompilationDependency"** %1, i64 %710
  %713 = bitcast %"class.v8::internal::compiler::CompilationDependency"** %712 to <2 x i64>*
  %714 = load <2 x i64>, <2 x i64>* %713, align 8, !alias.scope !71
  %715 = getelementptr %"class.v8::internal::compiler::CompilationDependency"*, %"class.v8::internal::compiler::CompilationDependency"** %712, i64 2
  %716 = bitcast %"class.v8::internal::compiler::CompilationDependency"** %715 to <2 x i64>*
  %717 = load <2 x i64>, <2 x i64>* %716, align 8, !alias.scope !71
  %718 = bitcast %"class.v8::internal::compiler::CompilationDependency"** %711 to <2 x i64>*
  store <2 x i64> %714, <2 x i64>* %718, align 8, !alias.scope !74, !noalias !71
  %719 = getelementptr %"class.v8::internal::compiler::CompilationDependency"*, %"class.v8::internal::compiler::CompilationDependency"** %711, i64 2
  %720 = bitcast %"class.v8::internal::compiler::CompilationDependency"** %719 to <2 x i64>*
  store <2 x i64> %717, <2 x i64>* %720, align 8, !alias.scope !74, !noalias !71
  %721 = or i64 %698, 8
  %722 = getelementptr %"class.v8::internal::compiler::CompilationDependency"*, %"class.v8::internal::compiler::CompilationDependency"** %409, i64 %721
  %723 = getelementptr %"class.v8::internal::compiler::CompilationDependency"*, %"class.v8::internal::compiler::CompilationDependency"** %1, i64 %721
  %724 = bitcast %"class.v8::internal::compiler::CompilationDependency"** %723 to <2 x i64>*
  %725 = load <2 x i64>, <2 x i64>* %724, align 8, !alias.scope !71
  %726 = getelementptr %"class.v8::internal::compiler::CompilationDependency"*, %"class.v8::internal::compiler::CompilationDependency"** %723, i64 2
  %727 = bitcast %"class.v8::internal::compiler::CompilationDependency"** %726 to <2 x i64>*
  %728 = load <2 x i64>, <2 x i64>* %727, align 8, !alias.scope !71
  %729 = bitcast %"class.v8::internal::compiler::CompilationDependency"** %722 to <2 x i64>*
  store <2 x i64> %725, <2 x i64>* %729, align 8, !alias.scope !74, !noalias !71
  %730 = getelementptr %"class.v8::internal::compiler::CompilationDependency"*, %"class.v8::internal::compiler::CompilationDependency"** %722, i64 2
  %731 = bitcast %"class.v8::internal::compiler::CompilationDependency"** %730 to <2 x i64>*
  store <2 x i64> %728, <2 x i64>* %731, align 8, !alias.scope !74, !noalias !71
  %732 = or i64 %698, 12
  %733 = getelementptr %"class.v8::internal::compiler::CompilationDependency"*, %"class.v8::internal::compiler::CompilationDependency"** %409, i64 %732
  %734 = getelementptr %"class.v8::internal::compiler::CompilationDependency"*, %"class.v8::internal::compiler::CompilationDependency"** %1, i64 %732
  %735 = bitcast %"class.v8::internal::compiler::CompilationDependency"** %734 to <2 x i64>*
  %736 = load <2 x i64>, <2 x i64>* %735, align 8, !alias.scope !71
  %737 = getelementptr %"class.v8::internal::compiler::CompilationDependency"*, %"class.v8::internal::compiler::CompilationDependency"** %734, i64 2
  %738 = bitcast %"class.v8::internal::compiler::CompilationDependency"** %737 to <2 x i64>*
  %739 = load <2 x i64>, <2 x i64>* %738, align 8, !alias.scope !71
  %740 = bitcast %"class.v8::internal::compiler::CompilationDependency"** %733 to <2 x i64>*
  store <2 x i64> %736, <2 x i64>* %740, align 8, !alias.scope !74, !noalias !71
  %741 = getelementptr %"class.v8::internal::compiler::CompilationDependency"*, %"class.v8::internal::compiler::CompilationDependency"** %733, i64 2
  %742 = bitcast %"class.v8::internal::compiler::CompilationDependency"** %741 to <2 x i64>*
  store <2 x i64> %739, <2 x i64>* %742, align 8, !alias.scope !74, !noalias !71
  %743 = add i64 %698, 16
  %744 = add i64 %699, -4
  %745 = icmp eq i64 %744, 0
  br i1 %745, label %746, label %697, !llvm.loop !76

746:                                              ; preds = %697, %685
  %747 = phi i64 [ 0, %685 ], [ %743, %697 ]
  %748 = icmp eq i64 %693, 0
  br i1 %748, label %765, label %749

749:                                              ; preds = %746, %749
  %750 = phi i64 [ %762, %749 ], [ %747, %746 ]
  %751 = phi i64 [ %763, %749 ], [ %693, %746 ]
  %752 = getelementptr %"class.v8::internal::compiler::CompilationDependency"*, %"class.v8::internal::compiler::CompilationDependency"** %409, i64 %750
  %753 = getelementptr %"class.v8::internal::compiler::CompilationDependency"*, %"class.v8::internal::compiler::CompilationDependency"** %1, i64 %750
  %754 = bitcast %"class.v8::internal::compiler::CompilationDependency"** %753 to <2 x i64>*
  %755 = load <2 x i64>, <2 x i64>* %754, align 8, !alias.scope !71
  %756 = getelementptr %"class.v8::internal::compiler::CompilationDependency"*, %"class.v8::internal::compiler::CompilationDependency"** %753, i64 2
  %757 = bitcast %"class.v8::internal::compiler::CompilationDependency"** %756 to <2 x i64>*
  %758 = load <2 x i64>, <2 x i64>* %757, align 8, !alias.scope !71
  %759 = bitcast %"class.v8::internal::compiler::CompilationDependency"** %752 to <2 x i64>*
  store <2 x i64> %755, <2 x i64>* %759, align 8, !alias.scope !74, !noalias !71
  %760 = getelementptr %"class.v8::internal::compiler::CompilationDependency"*, %"class.v8::internal::compiler::CompilationDependency"** %752, i64 2
  %761 = bitcast %"class.v8::internal::compiler::CompilationDependency"** %760 to <2 x i64>*
  store <2 x i64> %758, <2 x i64>* %761, align 8, !alias.scope !74, !noalias !71
  %762 = add i64 %750, 4
  %763 = add i64 %751, -1
  %764 = icmp eq i64 %763, 0
  br i1 %764, label %765, label %749, !llvm.loop !77

765:                                              ; preds = %749, %746
  %766 = icmp eq i64 %669, %686
  br i1 %766, label %842, label %767

767:                                              ; preds = %765, %671, %664
  %768 = phi %"class.v8::internal::compiler::CompilationDependency"** [ %409, %671 ], [ %409, %664 ], [ %687, %765 ]
  %769 = phi %"class.v8::internal::compiler::CompilationDependency"** [ %409, %671 ], [ %409, %664 ], [ %688, %765 ]
  %770 = phi %"class.v8::internal::compiler::CompilationDependency"** [ %1, %671 ], [ %1, %664 ], [ %689, %765 ]
  %771 = ptrtoint %"class.v8::internal::compiler::CompilationDependency"** %770 to i64
  %772 = getelementptr %"class.v8::internal::compiler::CompilationDependency"*, %"class.v8::internal::compiler::CompilationDependency"** %660, i64 -1
  %773 = ptrtoint %"class.v8::internal::compiler::CompilationDependency"** %772 to i64
  %774 = sub i64 %773, %771
  %775 = lshr i64 %774, 3
  %776 = add nuw nsw i64 %775, 1
  %777 = and i64 %776, 7
  %778 = icmp eq i64 %777, 0
  br i1 %778, label %791, label %779

779:                                              ; preds = %767, %779
  %780 = phi %"class.v8::internal::compiler::CompilationDependency"** [ %788, %779 ], [ %768, %767 ]
  %781 = phi %"class.v8::internal::compiler::CompilationDependency"** [ %788, %779 ], [ %769, %767 ]
  %782 = phi %"class.v8::internal::compiler::CompilationDependency"** [ %787, %779 ], [ %770, %767 ]
  %783 = phi i64 [ %789, %779 ], [ %777, %767 ]
  %784 = bitcast %"class.v8::internal::compiler::CompilationDependency"** %781 to i64*
  %785 = bitcast %"class.v8::internal::compiler::CompilationDependency"** %782 to i64*
  %786 = load i64, i64* %785, align 8
  store i64 %786, i64* %784, align 8
  %787 = getelementptr inbounds %"class.v8::internal::compiler::CompilationDependency"*, %"class.v8::internal::compiler::CompilationDependency"** %782, i64 1
  %788 = getelementptr inbounds %"class.v8::internal::compiler::CompilationDependency"*, %"class.v8::internal::compiler::CompilationDependency"** %780, i64 1
  %789 = add i64 %783, -1
  %790 = icmp eq i64 %789, 0
  br i1 %790, label %791, label %779, !llvm.loop !78

791:                                              ; preds = %779, %767
  %792 = phi %"class.v8::internal::compiler::CompilationDependency"** [ undef, %767 ], [ %788, %779 ]
  %793 = phi %"class.v8::internal::compiler::CompilationDependency"** [ %768, %767 ], [ %788, %779 ]
  %794 = phi %"class.v8::internal::compiler::CompilationDependency"** [ %769, %767 ], [ %788, %779 ]
  %795 = phi %"class.v8::internal::compiler::CompilationDependency"** [ %770, %767 ], [ %787, %779 ]
  %796 = icmp ult i64 %774, 56
  br i1 %796, label %842, label %797

797:                                              ; preds = %791, %797
  %798 = phi %"class.v8::internal::compiler::CompilationDependency"** [ %840, %797 ], [ %793, %791 ]
  %799 = phi %"class.v8::internal::compiler::CompilationDependency"** [ %840, %797 ], [ %794, %791 ]
  %800 = phi %"class.v8::internal::compiler::CompilationDependency"** [ %839, %797 ], [ %795, %791 ]
  %801 = bitcast %"class.v8::internal::compiler::CompilationDependency"** %799 to i64*
  %802 = bitcast %"class.v8::internal::compiler::CompilationDependency"** %800 to i64*
  %803 = load i64, i64* %802, align 8
  store i64 %803, i64* %801, align 8
  %804 = getelementptr inbounds %"class.v8::internal::compiler::CompilationDependency"*, %"class.v8::internal::compiler::CompilationDependency"** %800, i64 1
  %805 = getelementptr inbounds %"class.v8::internal::compiler::CompilationDependency"*, %"class.v8::internal::compiler::CompilationDependency"** %798, i64 1
  %806 = bitcast %"class.v8::internal::compiler::CompilationDependency"** %805 to i64*
  %807 = bitcast %"class.v8::internal::compiler::CompilationDependency"** %804 to i64*
  %808 = load i64, i64* %807, align 8
  store i64 %808, i64* %806, align 8
  %809 = getelementptr inbounds %"class.v8::internal::compiler::CompilationDependency"*, %"class.v8::internal::compiler::CompilationDependency"** %800, i64 2
  %810 = getelementptr inbounds %"class.v8::internal::compiler::CompilationDependency"*, %"class.v8::internal::compiler::CompilationDependency"** %798, i64 2
  %811 = bitcast %"class.v8::internal::compiler::CompilationDependency"** %810 to i64*
  %812 = bitcast %"class.v8::internal::compiler::CompilationDependency"** %809 to i64*
  %813 = load i64, i64* %812, align 8
  store i64 %813, i64* %811, align 8
  %814 = getelementptr inbounds %"class.v8::internal::compiler::CompilationDependency"*, %"class.v8::internal::compiler::CompilationDependency"** %800, i64 3
  %815 = getelementptr inbounds %"class.v8::internal::compiler::CompilationDependency"*, %"class.v8::internal::compiler::CompilationDependency"** %798, i64 3
  %816 = bitcast %"class.v8::internal::compiler::CompilationDependency"** %815 to i64*
  %817 = bitcast %"class.v8::internal::compiler::CompilationDependency"** %814 to i64*
  %818 = load i64, i64* %817, align 8
  store i64 %818, i64* %816, align 8
  %819 = getelementptr inbounds %"class.v8::internal::compiler::CompilationDependency"*, %"class.v8::internal::compiler::CompilationDependency"** %800, i64 4
  %820 = getelementptr inbounds %"class.v8::internal::compiler::CompilationDependency"*, %"class.v8::internal::compiler::CompilationDependency"** %798, i64 4
  %821 = bitcast %"class.v8::internal::compiler::CompilationDependency"** %820 to i64*
  %822 = bitcast %"class.v8::internal::compiler::CompilationDependency"** %819 to i64*
  %823 = load i64, i64* %822, align 8
  store i64 %823, i64* %821, align 8
  %824 = getelementptr inbounds %"class.v8::internal::compiler::CompilationDependency"*, %"class.v8::internal::compiler::CompilationDependency"** %800, i64 5
  %825 = getelementptr inbounds %"class.v8::internal::compiler::CompilationDependency"*, %"class.v8::internal::compiler::CompilationDependency"** %798, i64 5
  %826 = bitcast %"class.v8::internal::compiler::CompilationDependency"** %825 to i64*
  %827 = bitcast %"class.v8::internal::compiler::CompilationDependency"** %824 to i64*
  %828 = load i64, i64* %827, align 8
  store i64 %828, i64* %826, align 8
  %829 = getelementptr inbounds %"class.v8::internal::compiler::CompilationDependency"*, %"class.v8::internal::compiler::CompilationDependency"** %800, i64 6
  %830 = getelementptr inbounds %"class.v8::internal::compiler::CompilationDependency"*, %"class.v8::internal::compiler::CompilationDependency"** %798, i64 6
  %831 = bitcast %"class.v8::internal::compiler::CompilationDependency"** %830 to i64*
  %832 = bitcast %"class.v8::internal::compiler::CompilationDependency"** %829 to i64*
  %833 = load i64, i64* %832, align 8
  store i64 %833, i64* %831, align 8
  %834 = getelementptr inbounds %"class.v8::internal::compiler::CompilationDependency"*, %"class.v8::internal::compiler::CompilationDependency"** %800, i64 7
  %835 = getelementptr inbounds %"class.v8::internal::compiler::CompilationDependency"*, %"class.v8::internal::compiler::CompilationDependency"** %798, i64 7
  %836 = bitcast %"class.v8::internal::compiler::CompilationDependency"** %835 to i64*
  %837 = bitcast %"class.v8::internal::compiler::CompilationDependency"** %834 to i64*
  %838 = load i64, i64* %837, align 8
  store i64 %838, i64* %836, align 8
  %839 = getelementptr inbounds %"class.v8::internal::compiler::CompilationDependency"*, %"class.v8::internal::compiler::CompilationDependency"** %800, i64 8
  %840 = getelementptr inbounds %"class.v8::internal::compiler::CompilationDependency"*, %"class.v8::internal::compiler::CompilationDependency"** %798, i64 8
  %841 = icmp eq %"class.v8::internal::compiler::CompilationDependency"** %839, %660
  br i1 %841, label %842, label %797, !llvm.loop !79

842:                                              ; preds = %791, %797, %765, %662
  %843 = phi %"class.v8::internal::compiler::CompilationDependency"** [ %409, %662 ], [ %687, %765 ], [ %792, %791 ], [ %840, %797 ]
  %844 = phi i64 [ %663, %662 ], [ %658, %765 ], [ %658, %797 ], [ %658, %791 ]
  %845 = ptrtoint %"class.v8::internal::compiler::CompilationDependency"** %843 to i64
  store i64 %844, i64* %360, align 8
  store i64 %845, i64* %23, align 8
  store i64 %408, i64* %15, align 8
  ret %"class.v8::internal::compiler::CompilationDependency"** %405

846:                                              ; preds = %208, %353, %357, %4
  ret %"class.v8::internal::compiler::CompilationDependency"** %1
}

; Function Attrs: nounwind ssp uwtable
define hidden i64* @_ZNK2v88internal8compiler18PropertyAccessInfo17GetConstFieldInfoEv(%"class.v8::internal::compiler::PropertyAccessInfo"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::compiler::PropertyAccessInfo", %"class.v8::internal::compiler::PropertyAccessInfo"* %0, i64 0, i32 0
  %3 = load i32, i32* %2, align 8
  %4 = icmp eq i32 %3, 3
  br i1 %4, label %5, label %10

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.v8::internal::compiler::PropertyAccessInfo", %"class.v8::internal::compiler::PropertyAccessInfo"* %0, i64 0, i32 9, i32 0
  %7 = load i64*, i64** %6, align 8
  %8 = icmp eq i64* %7, null
  br i1 %8, label %9, label %10, !prof !2

9:                                                ; preds = %5
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.5, i64 0, i64 0), i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.23, i64 0, i64 0)) #12
  unreachable

10:                                               ; preds = %1, %5
  %11 = phi i64* [ %7, %5 ], [ null, %1 ]
  ret i64* %11
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal8compiler17AccessInfoFactoryC2EPNS1_12JSHeapBrokerEPNS1_23CompilationDependenciesEPNS0_4ZoneE(%"class.v8::internal::compiler::AccessInfoFactory"* nocapture, %"class.v8::internal::compiler::JSHeapBroker"*, %"class.v8::internal::compiler::CompilationDependencies"*, %"class.v8::internal::Zone"*) unnamed_addr #0 align 2 {
  %5 = getelementptr inbounds %"class.v8::internal::compiler::AccessInfoFactory", %"class.v8::internal::compiler::AccessInfoFactory"* %0, i64 0, i32 0
  store %"class.v8::internal::compiler::JSHeapBroker"* %1, %"class.v8::internal::compiler::JSHeapBroker"** %5, align 8
  %6 = getelementptr inbounds %"class.v8::internal::compiler::AccessInfoFactory", %"class.v8::internal::compiler::AccessInfoFactory"* %0, i64 0, i32 1
  store %"class.v8::internal::compiler::CompilationDependencies"* %2, %"class.v8::internal::compiler::CompilationDependencies"** %6, align 8
  %7 = getelementptr inbounds %"class.v8::internal::compiler::AccessInfoFactory", %"class.v8::internal::compiler::AccessInfoFactory"* %0, i64 0, i32 2
  %8 = tail call %"class.v8::internal::compiler::TypeCache"* @_ZN2v88internal8compiler9TypeCache3GetEv() #8
  store %"class.v8::internal::compiler::TypeCache"* %8, %"class.v8::internal::compiler::TypeCache"** %7, align 8
  %9 = getelementptr inbounds %"class.v8::internal::compiler::AccessInfoFactory", %"class.v8::internal::compiler::AccessInfoFactory"* %0, i64 0, i32 3
  store %"class.v8::internal::Zone"* %3, %"class.v8::internal::Zone"** %9, align 8
  ret void
}

declare %"class.v8::internal::compiler::TypeCache"* @_ZN2v88internal8compiler9TypeCache3GetEv() local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK2v88internal8compiler17AccessInfoFactory24ComputeElementAccessInfoENS0_6HandleINS0_3MapEEENS1_10AccessModeE(%"class.v8::base::Optional.1265"* noalias nocapture sret, %"class.v8::internal::compiler::AccessInfoFactory"* nocapture readonly, i64*, i32) local_unnamed_addr #0 align 2 {
  %5 = alloca %"class.v8::base::Optional.1270", align 8
  %6 = alloca %"class.v8::internal::compiler::ElementAccessInfo", align 8
  %7 = getelementptr inbounds %"class.v8::base::Optional.1270", %"class.v8::base::Optional.1270"* %5, i64 0, i32 0, i32 0, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %7) #8
  %8 = getelementptr inbounds %"class.v8::internal::compiler::AccessInfoFactory", %"class.v8::internal::compiler::AccessInfoFactory"* %1, i64 0, i32 0
  %9 = load %"class.v8::internal::compiler::JSHeapBroker"*, %"class.v8::internal::compiler::JSHeapBroker"** %8, align 8
  call void @_ZN2v88internal8compiler10TryMakeRefINS0_3MapEvEENS_4base8OptionalINS1_10ref_traitsIT_E8ref_typeEEEPNS1_12JSHeapBrokerENS0_6HandleIS7_EENS4_5FlagsINS1_19GetOrCreateDataFlagEiEE(%"class.v8::base::Optional.1270"* nonnull sret %5, %"class.v8::internal::compiler::JSHeapBroker"* %9, i64* %2, i32 0)
  %10 = load i8, i8* %7, align 8, !range !80
  %11 = icmp eq i8 %10, 0
  br i1 %11, label %12, label %14

12:                                               ; preds = %4
  %13 = getelementptr inbounds %"class.v8::base::Optional.1265", %"class.v8::base::Optional.1265"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* align 8 %13, i8 0, i64 80, i1 false)
  br label %100

14:                                               ; preds = %4
  %15 = getelementptr inbounds %"class.v8::base::Optional.1270", %"class.v8::base::Optional.1270"* %5, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  %16 = call zeroext i1 @_ZN2v88internal8compiler22CanInlineElementAccessERKNS1_6MapRefE(%"class.v8::internal::compiler::MapRef"* dereferenceable(16) %15) #8
  br i1 %16, label %20, label %17

17:                                               ; preds = %14
  %18 = getelementptr inbounds %"class.v8::base::Optional.1265", %"class.v8::base::Optional.1265"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %18, align 8
  %19 = getelementptr inbounds %"class.v8::base::Optional.1265", %"class.v8::base::Optional.1265"* %0, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0
  store i8 0, i8* %19, align 8
  br label %100

20:                                               ; preds = %14
  %21 = call zeroext i8 @_ZNK2v88internal8compiler6MapRef13elements_kindEv(%"class.v8::internal::compiler::MapRef"* %15) #8
  %22 = getelementptr inbounds %"class.v8::internal::compiler::ElementAccessInfo", %"class.v8::internal::compiler::ElementAccessInfo"* %6, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %22) #8
  %23 = getelementptr inbounds %"class.v8::internal::compiler::AccessInfoFactory", %"class.v8::internal::compiler::AccessInfoFactory"* %1, i64 0, i32 3
  %24 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %23, align 8
  %25 = ptrtoint %"class.v8::internal::Zone"* %24 to i64
  %26 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %24, i64 0, i32 2
  %27 = load i64, i64* %26, align 8
  %28 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %24, i64 0, i32 3
  %29 = load i64, i64* %28, align 8
  %30 = sub i64 %29, %27
  %31 = icmp ult i64 %30, 8
  %32 = ptrtoint i64* %2 to i64
  br i1 %31, label %33, label %35, !prof !2

33:                                               ; preds = %20
  %34 = call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %24, i64 8) #8
  br label %37

35:                                               ; preds = %20
  %36 = add i64 %27, 8
  store i64 %36, i64* %26, align 8
  br label %37

37:                                               ; preds = %35, %33
  %38 = phi i64 [ %34, %33 ], [ %27, %35 ]
  %39 = inttoptr i64 %38 to %"class.v8::internal::Handle"*
  %40 = inttoptr i64 %38 to i64*
  store i64 %32, i64* %40, align 8
  %41 = getelementptr inbounds %"class.v8::internal::Handle", %"class.v8::internal::Handle"* %39, i64 1
  %42 = ptrtoint %"class.v8::internal::Handle"* %41 to i64
  %43 = bitcast %"class.v8::internal::Zone"** %23 to i64*
  %44 = load i64, i64* %43, align 8
  store i8 %21, i8* %22, align 8
  %45 = getelementptr inbounds %"class.v8::internal::compiler::ElementAccessInfo", %"class.v8::internal::compiler::ElementAccessInfo"* %6, i64 0, i32 1
  %46 = getelementptr inbounds %"class.v8::internal::compiler::ElementAccessInfo", %"class.v8::internal::compiler::ElementAccessInfo"* %6, i64 0, i32 1, i32 0, i32 0, i32 2, i32 1
  %47 = bitcast %"struct.std::__1::__compressed_pair_elem.0"* %46 to i64*
  %48 = bitcast %"class.v8::internal::ZoneVector"* %45 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %48, i8 0, i64 24, i1 false) #8
  store i64 %25, i64* %47, align 8
  %49 = sub i64 %42, %38
  %50 = ashr exact i64 %49, 3
  %51 = icmp eq i64 %49, 0
  br i1 %51, label %78, label %52

52:                                               ; preds = %37
  %53 = icmp ugt i64 %50, 268435455
  br i1 %53, label %54, label %56

54:                                               ; preds = %52
  %55 = bitcast %"class.v8::internal::ZoneVector"* %45 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %55) #12
  unreachable

56:                                               ; preds = %52
  %57 = load i64, i64* %26, align 8
  %58 = load i64, i64* %28, align 8
  %59 = sub i64 %58, %57
  %60 = icmp ugt i64 %49, %59
  br i1 %60, label %61, label %63, !prof !2

61:                                               ; preds = %56
  %62 = call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %24, i64 %49) #8
  br label %65

63:                                               ; preds = %56
  %64 = add i64 %57, %49
  store i64 %64, i64* %26, align 8
  br label %65

65:                                               ; preds = %61, %63
  %66 = phi i64 [ %62, %61 ], [ %57, %63 ]
  %67 = inttoptr i64 %66 to %"class.v8::internal::Handle"*
  %68 = getelementptr inbounds %"class.v8::internal::compiler::ElementAccessInfo", %"class.v8::internal::compiler::ElementAccessInfo"* %6, i64 0, i32 1, i32 0, i32 0, i32 1
  store %"class.v8::internal::Handle"* %67, %"class.v8::internal::Handle"** %68, align 8
  %69 = getelementptr inbounds %"class.v8::internal::ZoneVector", %"class.v8::internal::ZoneVector"* %45, i64 0, i32 0, i32 0, i32 0
  store %"class.v8::internal::Handle"* %67, %"class.v8::internal::Handle"** %69, align 8
  %70 = getelementptr inbounds %"class.v8::internal::Handle", %"class.v8::internal::Handle"* %67, i64 %50
  %71 = getelementptr inbounds %"class.v8::internal::compiler::ElementAccessInfo", %"class.v8::internal::compiler::ElementAccessInfo"* %6, i64 0, i32 1, i32 0, i32 0, i32 2, i32 0, i32 0
  store %"class.v8::internal::Handle"* %70, %"class.v8::internal::Handle"** %71, align 8
  %72 = inttoptr i64 %66 to i64*
  %73 = bitcast %"class.v8::internal::Handle"** %68 to i64*
  %74 = inttoptr i64 %38 to i64*
  %75 = load i64, i64* %74, align 8
  store i64 %75, i64* %72, align 8
  %76 = getelementptr inbounds %"class.v8::internal::Handle", %"class.v8::internal::Handle"* %67, i64 1
  %77 = ptrtoint %"class.v8::internal::Handle"* %76 to i64
  store i64 %77, i64* %73, align 8
  br label %78

78:                                               ; preds = %37, %65
  %79 = phi i64 [ %77, %65 ], [ 0, %37 ]
  %80 = getelementptr inbounds %"class.v8::internal::compiler::ElementAccessInfo", %"class.v8::internal::compiler::ElementAccessInfo"* %6, i64 0, i32 2, i32 0, i32 0, i32 2, i32 1
  %81 = bitcast %"struct.std::__1::__compressed_pair_elem.0"* %80 to i64*
  store i64 %44, i64* %81, align 8
  %82 = getelementptr inbounds %"class.v8::base::Optional.1265", %"class.v8::base::Optional.1265"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  store i8 1, i8* %82, align 8
  %83 = getelementptr inbounds %"class.v8::base::Optional.1265", %"class.v8::base::Optional.1265"* %0, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %84 = load i8, i8* %22, align 8
  store i8 %84, i8* %83, align 8
  %85 = getelementptr inbounds %"class.v8::base::Optional.1265", %"class.v8::base::Optional.1265"* %0, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 1
  %86 = bitcast %"class.v8::internal::ZoneVector"* %45 to i64*
  %87 = load i64, i64* %86, align 8
  %88 = bitcast %"class.v8::internal::ZoneVector"* %85 to i64*
  store i64 %87, i64* %88, align 8
  %89 = getelementptr inbounds %"class.v8::base::Optional.1265", %"class.v8::base::Optional.1265"* %0, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 1, i32 0, i32 0, i32 1
  %90 = bitcast %"class.v8::internal::Handle"** %89 to i64*
  store i64 %79, i64* %90, align 8
  %91 = getelementptr inbounds %"class.v8::internal::compiler::ElementAccessInfo", %"class.v8::internal::compiler::ElementAccessInfo"* %6, i64 0, i32 1, i32 0, i32 0, i32 2, i32 0, i32 0
  %92 = bitcast %"class.v8::internal::Handle"** %91 to <2 x i64>*
  %93 = load <2 x i64>, <2 x i64>* %92, align 8
  %94 = getelementptr inbounds %"class.v8::base::Optional.1265", %"class.v8::base::Optional.1265"* %0, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 1, i32 0, i32 0, i32 2, i32 0, i32 0
  %95 = bitcast %"class.v8::internal::Handle"** %94 to <2 x i64>*
  store <2 x i64> %93, <2 x i64>* %95, align 8
  %96 = getelementptr inbounds %"class.v8::base::Optional.1265", %"class.v8::base::Optional.1265"* %0, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 2
  %97 = getelementptr inbounds %"class.v8::base::Optional.1265", %"class.v8::base::Optional.1265"* %0, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 2, i32 0, i32 0, i32 2, i32 1
  %98 = bitcast %"struct.std::__1::__compressed_pair_elem.0"* %97 to i64*
  store i64 %44, i64* %98, align 8
  %99 = bitcast %"class.v8::internal::ZoneVector"* %96 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %99, i8 0, i64 24, i1 false)
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %22) #8
  br label %100

100:                                              ; preds = %78, %17, %12
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %7) #8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2v88internal8compiler10TryMakeRefINS0_3MapEvEENS_4base8OptionalINS1_10ref_traitsIT_E8ref_typeEEEPNS1_12JSHeapBrokerENS0_6HandleIS7_EENS4_5FlagsINS1_19GetOrCreateDataFlagEiEE(%"class.v8::base::Optional.1270"* noalias sret, %"class.v8::internal::compiler::JSHeapBroker"*, i64*, i32) local_unnamed_addr #0 comdat {
  %5 = alloca %"class.std::__1::locale", align 8
  %6 = alloca %"class.v8::internal::StdoutStream", align 8
  %7 = alloca %"class.std::__1::basic_string", align 8
  %8 = alloca %"struct.v8::internal::Brief", align 8
  %9 = alloca %"class.v8::internal::compiler::MapRef", align 8
  %10 = tail call %"class.v8::internal::compiler::ObjectData"* @_ZN2v88internal8compiler12JSHeapBroker18TryGetOrCreateDataENS0_6HandleINS0_6ObjectEEENS_4base5FlagsINS1_19GetOrCreateDataFlagEiEE(%"class.v8::internal::compiler::JSHeapBroker"* %1, i64* %2, i32 %3) #8
  %11 = icmp eq %"class.v8::internal::compiler::ObjectData"* %10, null
  br i1 %11, label %12, label %79

12:                                               ; preds = %4
  %13 = getelementptr inbounds %"class.v8::internal::compiler::JSHeapBroker", %"class.v8::internal::compiler::JSHeapBroker"* %1, i64 0, i32 7
  %14 = load i8, i8* %13, align 4, !range !80
  %15 = icmp eq i8 %14, 0
  br i1 %15, label %77, label %16

16:                                               ; preds = %12
  %17 = bitcast %"class.v8::internal::StdoutStream"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 240, i8* nonnull %17) #8
  %18 = getelementptr inbounds %"class.v8::internal::StdoutStream", %"class.v8::internal::StdoutStream"* %6, i64 0, i32 2, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVNSt3__19basic_iosIcNS_11char_traitsIcEEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %18, align 8
  %19 = bitcast %"class.v8::internal::StdoutStream"* %6 to %"class.v8::internal::OFStream"*
  %20 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8
  call void @_ZN2v88internal8OFStreamC2EP8_IO_FILE(%"class.v8::internal::OFStream"* nonnull %19, i8** getelementptr inbounds ([6 x i8*], [6 x i8*]* @_ZTTN2v88internal12StdoutStreamE, i64 0, i64 1), %struct._IO_FILE* %20) #8
  %21 = getelementptr inbounds %"class.v8::internal::StdoutStream", %"class.v8::internal::StdoutStream"* %6, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTVN2v88internal12StdoutStreamE, i64 0, inrange i32 0, i64 3) to i32 (...)**), i32 (...)*** %21, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTVN2v88internal12StdoutStreamE, i64 0, inrange i32 1, i64 3) to i32 (...)**), i32 (...)*** %18, align 8
  %22 = call %"class.v8::base::RecursiveMutex"* @_ZN2v88internal12StdoutStream14GetStdoutMutexEv() #8
  %23 = getelementptr inbounds %"class.v8::internal::StdoutStream", %"class.v8::internal::StdoutStream"* %6, i64 0, i32 1, i32 0
  store %"class.v8::base::RecursiveMutex"* %22, %"class.v8::base::RecursiveMutex"** %23, align 8
  call void @_ZN2v84base14RecursiveMutex4LockEv(%"class.v8::base::RecursiveMutex"* %22) #8
  %24 = bitcast %"class.std::__1::basic_string"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %24) #8
  call void @_ZNK2v88internal8compiler12JSHeapBroker5TraceEv(%"class.std::__1::basic_string"* nonnull sret %7, %"class.v8::internal::compiler::JSHeapBroker"* %1) #8
  %25 = bitcast %"class.v8::internal::StdoutStream"* %6 to %"class.std::__1::basic_ostream"*
  %26 = bitcast %"class.std::__1::basic_string"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %27 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %26, i64 0, i32 1, i32 0
  %28 = load i8, i8* %27, align 1
  %29 = icmp slt i8 %28, 0
  %30 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %31 = load i8*, i8** %30, align 8
  %32 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %33 = load i64, i64* %32, align 8
  %34 = zext i8 %28 to i64
  %35 = select i1 %29, i8* %31, i8* %24
  %36 = select i1 %29, i64 %33, i64 %34
  %37 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* nonnull dereferenceable(160) %25, i8* %35, i64 %36) #8
  %38 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* nonnull dereferenceable(160) %25, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.24, i64 0, i64 0), i64 8) #8
  %39 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* nonnull dereferenceable(160) %25, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.25, i64 0, i64 0), i64 15) #8
  %40 = bitcast %"struct.v8::internal::Brief"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %40) #8
  %41 = load i64, i64* %2, align 8
  %42 = getelementptr inbounds %"struct.v8::internal::Brief", %"struct.v8::internal::Brief"* %8, i64 0, i32 0
  store i64 %41, i64* %42, align 8
  %43 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN2v88internallsERNSt3__113basic_ostreamIcNS1_11char_traitsIcEEEERKNS0_5BriefE(%"class.std::__1::basic_ostream"* nonnull dereferenceable(160) %25, %"struct.v8::internal::Brief"* nonnull dereferenceable(8) %8) #8
  %44 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* nonnull dereferenceable(160) %25, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.26, i64 0, i64 0), i64 2) #8
  %45 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* nonnull dereferenceable(160) %25, i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.27, i64 0, i64 0), i64 38) #8
  %46 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* nonnull dereferenceable(160) %25, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.28, i64 0, i64 0), i64 1) #8
  %47 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEi(%"class.std::__1::basic_ostream"* nonnull %25, i32 598) #8
  %48 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* nonnull dereferenceable(160) %25, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.29, i64 0, i64 0), i64 1) #8
  %49 = bitcast %"class.v8::internal::StdoutStream"* %6 to i8**
  %50 = load i8*, i8** %49, align 8
  %51 = getelementptr i8, i8* %50, i64 -24
  %52 = bitcast i8* %51 to i64*
  %53 = load i64, i64* %52, align 8
  %54 = getelementptr inbounds i8, i8* %17, i64 %53
  %55 = bitcast %"class.std::__1::locale"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %55) #8
  %56 = bitcast i8* %54 to %"class.std::__1::ios_base"*
  call void @_ZNKSt3__18ios_base6getlocEv(%"class.std::__1::locale"* nonnull sret %5, %"class.std::__1::ios_base"* %56) #8
  %57 = call %"class.std::__1::locale::facet"* @_ZNKSt3__16locale9use_facetERNS0_2idE(%"class.std::__1::locale"* nonnull %5, %"class.std::__1::locale::id"* nonnull dereferenceable(16) @_ZNSt3__15ctypeIcE2idE) #8
  %58 = bitcast %"class.std::__1::locale::facet"* %57 to %"class.std::__1::ctype"*
  %59 = bitcast %"class.std::__1::locale::facet"* %57 to i8 (%"class.std::__1::ctype"*, i8)***
  %60 = load i8 (%"class.std::__1::ctype"*, i8)**, i8 (%"class.std::__1::ctype"*, i8)*** %59, align 8
  %61 = getelementptr inbounds i8 (%"class.std::__1::ctype"*, i8)*, i8 (%"class.std::__1::ctype"*, i8)** %60, i64 7
  %62 = load i8 (%"class.std::__1::ctype"*, i8)*, i8 (%"class.std::__1::ctype"*, i8)** %61, align 8
  %63 = call signext i8 %62(%"class.std::__1::ctype"* %58, i8 signext 10) #8
  call void @_ZNSt3__16localeD1Ev(%"class.std::__1::locale"* nonnull %5) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %55) #8
  %64 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE3putEc(%"class.std::__1::basic_ostream"* nonnull %25, i8 signext %63) #8
  %65 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE5flushEv(%"class.std::__1::basic_ostream"* nonnull %25) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %40) #8
  %66 = load i8, i8* %27, align 1
  %67 = icmp slt i8 %66, 0
  br i1 %67, label %68, label %70

68:                                               ; preds = %16
  %69 = load i8*, i8** %30, align 8
  call void @_ZdlPv(i8* %69) #13
  br label %70

70:                                               ; preds = %16, %68
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %24) #8
  %71 = bitcast %"class.v8::internal::StdoutStream"* %6 to i64*
  store i64 ptrtoint (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTVN2v88internal12StdoutStreamE, i64 0, inrange i32 0, i64 3) to i64), i64* %71, align 8
  %72 = getelementptr inbounds %"class.v8::internal::StdoutStream", %"class.v8::internal::StdoutStream"* %6, i64 0, i32 2
  %73 = bitcast %"class.std::__1::basic_ios.base"* %72 to i64*
  store i64 ptrtoint (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTVN2v88internal12StdoutStreamE, i64 0, inrange i32 1, i64 3) to i64), i64* %73, align 8
  %74 = load %"class.v8::base::RecursiveMutex"*, %"class.v8::base::RecursiveMutex"** %23, align 8
  call void @_ZN2v84base14RecursiveMutex6UnlockEv(%"class.v8::base::RecursiveMutex"* %74) #8
  store i64 ptrtoint (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTCN2v88internal12StdoutStreamE0_NS0_8OFStreamE, i64 0, inrange i32 0, i64 3) to i64), i64* %71, align 8
  store i64 ptrtoint (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTCN2v88internal12StdoutStreamE0_NS0_8OFStreamE, i64 0, inrange i32 1, i64 3) to i64), i64* %73, align 8
  %75 = getelementptr inbounds %"class.v8::internal::StdoutStream", %"class.v8::internal::StdoutStream"* %6, i64 0, i32 0, i32 1, i32 0
  call void @_ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED2Ev(%"class.std::__1::basic_streambuf"* %75) #8
  call void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEED2Ev(%"class.std::__1::basic_ostream"* nonnull %25, i8** getelementptr inbounds ([6 x i8*], [6 x i8*]* @_ZTTN2v88internal12StdoutStreamE, i64 0, i64 2)) #8
  %76 = bitcast %"class.std::__1::basic_ios.base"* %72 to %"class.std::__1::basic_ios"*
  call void @_ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev(%"class.std::__1::basic_ios"* %76) #8
  call void @llvm.lifetime.end.p0i8(i64 240, i8* nonnull %17) #8
  br label %77

77:                                               ; preds = %12, %70
  %78 = getelementptr inbounds %"class.v8::base::Optional.1270", %"class.v8::base::Optional.1270"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* align 8 %78, i8 0, i64 24, i1 false)
  br label %90

79:                                               ; preds = %4
  %80 = bitcast %"class.v8::internal::compiler::MapRef"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %80) #8
  %81 = getelementptr inbounds %"class.v8::internal::compiler::MapRef", %"class.v8::internal::compiler::MapRef"* %9, i64 0, i32 0, i32 0, i32 0
  store %"class.v8::internal::compiler::ObjectData"* %10, %"class.v8::internal::compiler::ObjectData"** %81, align 8
  %82 = getelementptr inbounds %"class.v8::internal::compiler::MapRef", %"class.v8::internal::compiler::MapRef"* %9, i64 0, i32 0, i32 0, i32 1
  store %"class.v8::internal::compiler::JSHeapBroker"* %1, %"class.v8::internal::compiler::JSHeapBroker"** %82, align 8
  %83 = getelementptr inbounds %"class.v8::internal::compiler::MapRef", %"class.v8::internal::compiler::MapRef"* %9, i64 0, i32 0, i32 0
  %84 = call zeroext i1 @_ZNK2v88internal8compiler9ObjectRef5IsMapEv(%"class.v8::internal::compiler::ObjectRef"* nonnull %83) #8
  br i1 %84, label %86, label %85, !prof !81

85:                                               ; preds = %79
  call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.5, i64 0, i64 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.30, i64 0, i64 0)) #12
  unreachable

86:                                               ; preds = %79
  %87 = getelementptr inbounds %"class.v8::base::Optional.1270", %"class.v8::base::Optional.1270"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  store i8 1, i8* %87, align 8
  %88 = getelementptr inbounds %"class.v8::base::Optional.1270", %"class.v8::base::Optional.1270"* %0, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  %89 = bitcast %"class.v8::internal::compiler::MapRef"* %88 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %89, i8* nonnull align 8 %80, i64 16, i1 false) #8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %80) #8
  br label %90

90:                                               ; preds = %86, %77
  ret void
}

declare zeroext i1 @_ZN2v88internal8compiler22CanInlineElementAccessERKNS1_6MapRefE(%"class.v8::internal::compiler::MapRef"* dereferenceable(16)) local_unnamed_addr #4

declare zeroext i8 @_ZNK2v88internal8compiler6MapRef13elements_kindEv(%"class.v8::internal::compiler::MapRef"*) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK2v88internal8compiler17AccessInfoFactory25ComputeElementAccessInfosERKNS1_21ElementAccessFeedbackEPNS0_10ZoneVectorINS1_17ElementAccessInfoEEE(%"class.v8::internal::compiler::AccessInfoFactory"* nocapture readonly, %"class.v8::internal::compiler::ElementAccessFeedback"* dereferenceable(48), %"class.v8::internal::ZoneVector.1282"*) local_unnamed_addr #0 align 2 {
  %4 = alloca i64, align 8
  %5 = bitcast i64* %4 to %"class.v8::internal::compiler::KeyedAccessMode"*
  %6 = alloca %"class.v8::base::Optional.1265", align 8
  %7 = alloca %"class.v8::base::Optional.1265", align 8
  %8 = bitcast i64* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %8) #8
  %9 = tail call i64 @_ZNK2v88internal8compiler21ElementAccessFeedback10keyed_modeEv(%"class.v8::internal::compiler::ElementAccessFeedback"* %1) #8
  store i64 %9, i64* %4, align 8
  %10 = call i32 @_ZNK2v88internal8compiler15KeyedAccessMode11access_modeEv(%"class.v8::internal::compiler::KeyedAccessMode"* nonnull %5) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %8) #8
  switch i32 %10, label %49 [
    i32 3, label %11
    i32 0, label %11
  ]

11:                                               ; preds = %3, %3
  %12 = getelementptr inbounds %"class.v8::base::Optional.1265", %"class.v8::base::Optional.1265"* %6, i64 0, i32 0, i32 0, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 80, i8* nonnull %12) #8
  call void @_ZNK2v88internal8compiler17AccessInfoFactory22ConsolidateElementLoadERKNS1_21ElementAccessFeedbackE(%"class.v8::base::Optional.1265"* nonnull sret %6, %"class.v8::internal::compiler::AccessInfoFactory"* %0, %"class.v8::internal::compiler::ElementAccessFeedback"* dereferenceable(48) %1)
  %13 = load i8, i8* %12, align 8, !range !80
  %14 = icmp eq i8 %13, 0
  br i1 %14, label %48, label %15

15:                                               ; preds = %11
  %16 = getelementptr inbounds %"class.v8::base::Optional.1265", %"class.v8::base::Optional.1265"* %6, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  %17 = getelementptr inbounds %"class.v8::internal::ZoneVector.1282", %"class.v8::internal::ZoneVector.1282"* %2, i64 0, i32 0, i32 0, i32 1
  %18 = load %"class.v8::internal::compiler::ElementAccessInfo"*, %"class.v8::internal::compiler::ElementAccessInfo"** %17, align 8
  %19 = getelementptr inbounds %"class.v8::internal::ZoneVector.1282", %"class.v8::internal::ZoneVector.1282"* %2, i64 0, i32 0, i32 0, i32 2, i32 0, i32 0
  %20 = load %"class.v8::internal::compiler::ElementAccessInfo"*, %"class.v8::internal::compiler::ElementAccessInfo"** %19, align 8
  %21 = icmp eq %"class.v8::internal::compiler::ElementAccessInfo"* %18, %20
  br i1 %21, label %26, label %22

22:                                               ; preds = %15
  call void @_ZN2v88internal8compiler17ElementAccessInfoC2ERKS2_(%"class.v8::internal::compiler::ElementAccessInfo"* %18, %"class.v8::internal::compiler::ElementAccessInfo"* dereferenceable(72) %16) #8
  %23 = getelementptr inbounds %"class.v8::internal::compiler::ElementAccessInfo", %"class.v8::internal::compiler::ElementAccessInfo"* %18, i64 1
  %24 = ptrtoint %"class.v8::internal::compiler::ElementAccessInfo"* %23 to i64
  %25 = bitcast %"class.v8::internal::compiler::ElementAccessInfo"** %17 to i64*
  store i64 %24, i64* %25, align 8
  br label %28

26:                                               ; preds = %15
  %27 = getelementptr inbounds %"class.v8::internal::ZoneVector.1282", %"class.v8::internal::ZoneVector.1282"* %2, i64 0, i32 0
  call void @_ZNSt3__16vectorIN2v88internal8compiler17ElementAccessInfoENS2_13ZoneAllocatorIS4_EEE21__push_back_slow_pathIRKS4_EEvOT_(%"class.std::__1::vector.1283"* %27, %"class.v8::internal::compiler::ElementAccessInfo"* dereferenceable(72) %16) #8
  br label %28

28:                                               ; preds = %22, %26
  %29 = load i8, i8* %12, align 8, !range !80
  %30 = icmp eq i8 %29, 0
  br i1 %30, label %47, label %31

31:                                               ; preds = %28
  %32 = getelementptr inbounds %"class.v8::base::Optional.1265", %"class.v8::base::Optional.1265"* %6, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 2, i32 0, i32 0, i32 0
  %33 = load %"class.v8::internal::Handle"*, %"class.v8::internal::Handle"** %32, align 8
  %34 = icmp eq %"class.v8::internal::Handle"* %33, null
  br i1 %34, label %39, label %35

35:                                               ; preds = %31
  %36 = ptrtoint %"class.v8::internal::Handle"* %33 to i64
  %37 = getelementptr inbounds %"class.v8::base::Optional.1265", %"class.v8::base::Optional.1265"* %6, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 2, i32 0, i32 0, i32 1
  %38 = bitcast %"class.v8::internal::Handle"** %37 to i64*
  store i64 %36, i64* %38, align 8
  br label %39

39:                                               ; preds = %35, %31
  %40 = getelementptr inbounds %"class.v8::base::Optional.1265", %"class.v8::base::Optional.1265"* %6, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 1, i32 0, i32 0, i32 0
  %41 = load %"class.v8::internal::Handle"*, %"class.v8::internal::Handle"** %40, align 8
  %42 = icmp eq %"class.v8::internal::Handle"* %41, null
  br i1 %42, label %47, label %43

43:                                               ; preds = %39
  %44 = ptrtoint %"class.v8::internal::Handle"* %41 to i64
  %45 = getelementptr inbounds %"class.v8::base::Optional.1265", %"class.v8::base::Optional.1265"* %6, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 1, i32 0, i32 0, i32 1
  %46 = bitcast %"class.v8::internal::Handle"** %45 to i64*
  store i64 %44, i64* %46, align 8
  br label %47

47:                                               ; preds = %28, %39, %43
  call void @llvm.lifetime.end.p0i8(i64 80, i8* nonnull %12) #8
  ret i1 true

48:                                               ; preds = %11
  call void @llvm.lifetime.end.p0i8(i64 80, i8* nonnull %12) #8
  br label %49

49:                                               ; preds = %48, %3
  %50 = call dereferenceable(32) %"class.v8::internal::ZoneVector.1275"* @_ZNK2v88internal8compiler21ElementAccessFeedback17transition_groupsEv(%"class.v8::internal::compiler::ElementAccessFeedback"* %1) #8
  %51 = getelementptr inbounds %"class.v8::internal::ZoneVector.1275", %"class.v8::internal::ZoneVector.1275"* %50, i64 0, i32 0, i32 0, i32 0
  %52 = load %"class.v8::internal::ZoneVector"*, %"class.v8::internal::ZoneVector"** %51, align 8
  %53 = getelementptr inbounds %"class.v8::internal::ZoneVector.1275", %"class.v8::internal::ZoneVector.1275"* %50, i64 0, i32 0, i32 0, i32 1
  %54 = load %"class.v8::internal::ZoneVector"*, %"class.v8::internal::ZoneVector"** %53, align 8
  %55 = icmp eq %"class.v8::internal::ZoneVector"* %52, %54
  br i1 %55, label %368, label %56

56:                                               ; preds = %49
  %57 = getelementptr inbounds %"class.v8::base::Optional.1265", %"class.v8::base::Optional.1265"* %7, i64 0, i32 0, i32 0, i32 0, i32 0
  %58 = getelementptr inbounds %"class.v8::base::Optional.1265", %"class.v8::base::Optional.1265"* %7, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 1, i32 0
  %59 = getelementptr inbounds %"class.v8::base::Optional.1265", %"class.v8::base::Optional.1265"* %7, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 1, i32 0, i32 0, i32 1
  %60 = bitcast %"class.v8::internal::Handle"** %59 to i64*
  %61 = bitcast %"class.std::__1::vector"* %58 to i64*
  %62 = getelementptr inbounds %"class.v8::base::Optional.1265", %"class.v8::base::Optional.1265"* %7, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 2, i32 0
  %63 = getelementptr inbounds %"class.v8::base::Optional.1265", %"class.v8::base::Optional.1265"* %7, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 2, i32 0, i32 0, i32 1
  %64 = getelementptr inbounds %"class.v8::base::Optional.1265", %"class.v8::base::Optional.1265"* %7, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 2, i32 0, i32 0, i32 2, i32 0, i32 0
  %65 = bitcast %"class.v8::internal::Handle"** %63 to i64*
  %66 = bitcast %"class.std::__1::vector"* %62 to i64*
  %67 = bitcast %"class.v8::internal::Handle"** %64 to i64*
  %68 = getelementptr inbounds %"class.v8::base::Optional.1265", %"class.v8::base::Optional.1265"* %7, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 2, i32 0, i32 0, i32 2, i32 1, i32 0, i32 0
  %69 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %62, i64 0, i32 0, i32 0
  %70 = getelementptr inbounds %"class.v8::base::Optional.1265", %"class.v8::base::Optional.1265"* %7, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  %71 = getelementptr inbounds %"class.v8::internal::ZoneVector.1282", %"class.v8::internal::ZoneVector.1282"* %2, i64 0, i32 0, i32 0, i32 1
  %72 = getelementptr inbounds %"class.v8::internal::ZoneVector.1282", %"class.v8::internal::ZoneVector.1282"* %2, i64 0, i32 0, i32 0, i32 2, i32 0, i32 0
  %73 = bitcast %"class.v8::internal::compiler::ElementAccessInfo"** %71 to i64*
  %74 = getelementptr inbounds %"class.v8::internal::ZoneVector.1282", %"class.v8::internal::ZoneVector.1282"* %2, i64 0, i32 0
  %75 = getelementptr inbounds %"class.v8::base::Optional.1265", %"class.v8::base::Optional.1265"* %7, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 2, i32 0, i32 0, i32 0
  %76 = getelementptr inbounds %"class.v8::base::Optional.1265", %"class.v8::base::Optional.1265"* %7, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 1, i32 0, i32 0, i32 0
  br label %80

77:                                               ; preds = %354, %362, %365
  call void @llvm.lifetime.end.p0i8(i64 80, i8* nonnull %57) #8
  %78 = getelementptr inbounds %"class.v8::internal::ZoneVector", %"class.v8::internal::ZoneVector"* %81, i64 1
  %79 = icmp eq %"class.v8::internal::ZoneVector"* %78, %54
  br i1 %79, label %368, label %80

80:                                               ; preds = %56, %77
  %81 = phi %"class.v8::internal::ZoneVector"* [ %52, %56 ], [ %78, %77 ]
  %82 = getelementptr inbounds %"class.v8::internal::ZoneVector", %"class.v8::internal::ZoneVector"* %81, i64 0, i32 0, i32 0, i32 0
  %83 = load %"class.v8::internal::Handle"*, %"class.v8::internal::Handle"** %82, align 8
  %84 = getelementptr inbounds %"class.v8::internal::Handle", %"class.v8::internal::Handle"* %83, i64 0, i32 0, i32 0
  %85 = load i64*, i64** %84, align 8
  call void @llvm.lifetime.start.p0i8(i64 80, i8* nonnull %57) #8
  call void @_ZNK2v88internal8compiler17AccessInfoFactory24ComputeElementAccessInfoENS0_6HandleINS0_3MapEEENS1_10AccessModeE(%"class.v8::base::Optional.1265"* nonnull sret %7, %"class.v8::internal::compiler::AccessInfoFactory"* %0, i64* %85, i32 undef)
  %86 = load i8, i8* %57, align 8, !range !80
  %87 = icmp eq i8 %86, 0
  br i1 %87, label %367, label %88

88:                                               ; preds = %80
  %89 = getelementptr inbounds %"class.v8::internal::ZoneVector", %"class.v8::internal::ZoneVector"* %81, i64 0, i32 0, i32 0, i32 1
  %90 = bitcast %"class.v8::internal::Handle"** %89 to i64*
  %91 = load i64, i64* %90, align 8
  %92 = bitcast %"class.v8::internal::ZoneVector"* %81 to i64*
  %93 = load i64, i64* %92, align 8
  %94 = sub i64 %91, %93
  %95 = ashr exact i64 %94, 3
  %96 = icmp ugt i64 %95, 1
  br i1 %96, label %105, label %97

97:                                               ; preds = %347, %88
  %98 = load %"class.v8::internal::compiler::ElementAccessInfo"*, %"class.v8::internal::compiler::ElementAccessInfo"** %71, align 8
  %99 = load %"class.v8::internal::compiler::ElementAccessInfo"*, %"class.v8::internal::compiler::ElementAccessInfo"** %72, align 8
  %100 = icmp eq %"class.v8::internal::compiler::ElementAccessInfo"* %98, %99
  br i1 %100, label %104, label %101

101:                                              ; preds = %97
  call void @_ZN2v88internal8compiler17ElementAccessInfoC2ERKS2_(%"class.v8::internal::compiler::ElementAccessInfo"* %98, %"class.v8::internal::compiler::ElementAccessInfo"* dereferenceable(72) %70) #8
  %102 = getelementptr inbounds %"class.v8::internal::compiler::ElementAccessInfo", %"class.v8::internal::compiler::ElementAccessInfo"* %98, i64 1
  %103 = ptrtoint %"class.v8::internal::compiler::ElementAccessInfo"* %102 to i64
  store i64 %103, i64* %73, align 8
  br label %354

104:                                              ; preds = %97
  call void @_ZNSt3__16vectorIN2v88internal8compiler17ElementAccessInfoENS2_13ZoneAllocatorIS4_EEE21__push_back_slow_pathIRKS4_EEvOT_(%"class.std::__1::vector.1283"* %74, %"class.v8::internal::compiler::ElementAccessInfo"* dereferenceable(72) %70) #8
  br label %354

105:                                              ; preds = %88, %347
  %106 = phi i64 [ %350, %347 ], [ %93, %88 ]
  %107 = phi i64 [ %348, %347 ], [ 1, %88 ]
  %108 = inttoptr i64 %106 to %"class.v8::internal::Handle"*
  %109 = getelementptr inbounds %"class.v8::internal::Handle", %"class.v8::internal::Handle"* %108, i64 %107, i32 0, i32 0
  %110 = bitcast i64** %109 to i64*
  %111 = load i64, i64* %110, align 8
  %112 = load i64, i64* %60, align 8
  %113 = load i64, i64* %61, align 8
  %114 = sub i64 %112, %113
  %115 = icmp eq i64 %114, 8
  br i1 %115, label %117, label %116, !prof !81

116:                                              ; preds = %105
  call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.5, i64 0, i64 0), i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.13, i64 0, i64 0)) #12
  unreachable

117:                                              ; preds = %105
  %118 = load %"class.v8::internal::Handle"*, %"class.v8::internal::Handle"** %63, align 8
  %119 = load %"class.v8::internal::Handle"*, %"class.v8::internal::Handle"** %64, align 8
  %120 = icmp eq %"class.v8::internal::Handle"* %118, %119
  %121 = ptrtoint %"class.v8::internal::Handle"* %119 to i64
  br i1 %120, label %126, label %122

122:                                              ; preds = %117
  %123 = bitcast %"class.v8::internal::Handle"* %118 to i64*
  store i64 %111, i64* %123, align 8
  %124 = getelementptr inbounds %"class.v8::internal::Handle", %"class.v8::internal::Handle"* %118, i64 1
  %125 = ptrtoint %"class.v8::internal::Handle"* %124 to i64
  store i64 %125, i64* %65, align 8
  br label %347

126:                                              ; preds = %117
  %127 = ptrtoint %"class.v8::internal::Handle"* %118 to i64
  %128 = load i64, i64* %66, align 8
  %129 = sub i64 %127, %128
  %130 = ashr exact i64 %129, 3
  %131 = add nsw i64 %130, 1
  %132 = icmp ugt i64 %131, 268435455
  br i1 %132, label %133, label %135

133:                                              ; preds = %126
  %134 = bitcast %"class.std::__1::vector"* %62 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %134) #12
  unreachable

135:                                              ; preds = %126
  %136 = sub i64 %121, %128
  %137 = ashr exact i64 %136, 3
  %138 = icmp ult i64 %137, 134217727
  br i1 %138, label %139, label %144

139:                                              ; preds = %135
  %140 = ashr exact i64 %136, 2
  %141 = icmp ult i64 %140, %131
  %142 = select i1 %141, i64 %131, i64 %140
  %143 = icmp eq i64 %142, 0
  br i1 %143, label %161, label %144

144:                                              ; preds = %139, %135
  %145 = phi i64 [ %142, %139 ], [ 268435455, %135 ]
  %146 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %68, align 8
  %147 = shl i64 %145, 3
  %148 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %146, i64 0, i32 2
  %149 = load i64, i64* %148, align 8
  %150 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %146, i64 0, i32 3
  %151 = load i64, i64* %150, align 8
  %152 = sub i64 %151, %149
  %153 = icmp ugt i64 %147, %152
  br i1 %153, label %154, label %156, !prof !2

154:                                              ; preds = %144
  %155 = call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %146, i64 %147) #8
  br label %158

156:                                              ; preds = %144
  %157 = add i64 %149, %147
  store i64 %157, i64* %148, align 8
  br label %158

158:                                              ; preds = %156, %154
  %159 = phi i64 [ %155, %154 ], [ %149, %156 ]
  %160 = inttoptr i64 %159 to %"class.v8::internal::Handle"*
  br label %161

161:                                              ; preds = %158, %139
  %162 = phi i64 [ %145, %158 ], [ 0, %139 ]
  %163 = phi %"class.v8::internal::Handle"* [ %160, %158 ], [ null, %139 ]
  %164 = getelementptr inbounds %"class.v8::internal::Handle", %"class.v8::internal::Handle"* %163, i64 %130
  %165 = getelementptr inbounds %"class.v8::internal::Handle", %"class.v8::internal::Handle"* %163, i64 %162
  %166 = ptrtoint %"class.v8::internal::Handle"* %165 to i64
  %167 = bitcast %"class.v8::internal::Handle"* %164 to i64*
  store i64 %111, i64* %167, align 8
  %168 = getelementptr inbounds %"class.v8::internal::Handle", %"class.v8::internal::Handle"* %164, i64 1
  %169 = ptrtoint %"class.v8::internal::Handle"* %168 to i64
  %170 = load %"class.v8::internal::Handle"*, %"class.v8::internal::Handle"** %69, align 8
  %171 = ptrtoint %"class.v8::internal::Handle"* %170 to i64
  %172 = load %"class.v8::internal::Handle"*, %"class.v8::internal::Handle"** %63, align 8
  %173 = icmp eq %"class.v8::internal::Handle"* %172, %170
  br i1 %173, label %344, label %174

174:                                              ; preds = %161
  %175 = getelementptr %"class.v8::internal::Handle", %"class.v8::internal::Handle"* %172, i64 -1
  %176 = ptrtoint %"class.v8::internal::Handle"* %175 to i64
  %177 = sub i64 %176, %171
  %178 = lshr i64 %177, 3
  %179 = add nuw nsw i64 %178, 1
  %180 = icmp ult i64 %179, 4
  br i1 %180, label %274, label %181

181:                                              ; preds = %174
  %182 = getelementptr %"class.v8::internal::Handle", %"class.v8::internal::Handle"* %163, i64 -1
  %183 = getelementptr %"class.v8::internal::Handle", %"class.v8::internal::Handle"* %172, i64 -1
  %184 = ptrtoint %"class.v8::internal::Handle"* %183 to i64
  %185 = sub i64 %184, %171
  %186 = lshr i64 %185, 3
  %187 = sub nsw i64 %130, %186
  %188 = getelementptr %"class.v8::internal::Handle", %"class.v8::internal::Handle"* %182, i64 %187
  %189 = getelementptr %"class.v8::internal::Handle", %"class.v8::internal::Handle"* %172, i64 -1
  %190 = sub nsw i64 0, %186
  %191 = getelementptr %"class.v8::internal::Handle", %"class.v8::internal::Handle"* %189, i64 %190
  %192 = icmp ult %"class.v8::internal::Handle"* %188, %172
  %193 = icmp ult %"class.v8::internal::Handle"* %191, %164
  %194 = and i1 %192, %193
  br i1 %194, label %274, label %195

195:                                              ; preds = %181
  %196 = and i64 %179, 4611686018427387900
  %197 = sub nsw i64 0, %196
  %198 = getelementptr %"class.v8::internal::Handle", %"class.v8::internal::Handle"* %164, i64 %197
  %199 = sub nsw i64 0, %196
  %200 = getelementptr %"class.v8::internal::Handle", %"class.v8::internal::Handle"* %172, i64 %199
  %201 = add nsw i64 %196, -4
  %202 = lshr exact i64 %201, 2
  %203 = add nuw nsw i64 %202, 1
  %204 = and i64 %203, 1
  %205 = icmp eq i64 %201, 0
  br i1 %205, label %250, label %206

206:                                              ; preds = %195
  %207 = sub nuw nsw i64 %203, %204
  %208 = getelementptr %"class.v8::internal::Handle", %"class.v8::internal::Handle"* %164, i64 -1
  %209 = getelementptr %"class.v8::internal::Handle", %"class.v8::internal::Handle"* %172, i64 -1
  %210 = getelementptr %"class.v8::internal::Handle", %"class.v8::internal::Handle"* %164, i64 -1
  %211 = getelementptr %"class.v8::internal::Handle", %"class.v8::internal::Handle"* %172, i64 -1
  br label %212

212:                                              ; preds = %212, %206
  %213 = phi i64 [ 0, %206 ], [ %247, %212 ]
  %214 = phi i64 [ %207, %206 ], [ %248, %212 ]
  %215 = sub i64 0, %213
  %216 = sub i64 0, %213
  %217 = getelementptr inbounds %"class.v8::internal::Handle", %"class.v8::internal::Handle"* %208, i64 %215
  %218 = getelementptr inbounds %"class.v8::internal::Handle", %"class.v8::internal::Handle"* %209, i64 %216
  %219 = getelementptr inbounds %"class.v8::internal::Handle", %"class.v8::internal::Handle"* %218, i64 -1
  %220 = bitcast %"class.v8::internal::Handle"* %219 to <2 x i64>*
  %221 = load <2 x i64>, <2 x i64>* %220, align 8, !alias.scope !82
  %222 = getelementptr inbounds %"class.v8::internal::Handle", %"class.v8::internal::Handle"* %218, i64 -2
  %223 = getelementptr inbounds %"class.v8::internal::Handle", %"class.v8::internal::Handle"* %222, i64 -1
  %224 = bitcast %"class.v8::internal::Handle"* %223 to <2 x i64>*
  %225 = load <2 x i64>, <2 x i64>* %224, align 8, !alias.scope !82
  %226 = getelementptr inbounds %"class.v8::internal::Handle", %"class.v8::internal::Handle"* %217, i64 -1
  %227 = bitcast %"class.v8::internal::Handle"* %226 to <2 x i64>*
  store <2 x i64> %221, <2 x i64>* %227, align 8, !alias.scope !85, !noalias !82
  %228 = getelementptr inbounds %"class.v8::internal::Handle", %"class.v8::internal::Handle"* %217, i64 -2
  %229 = getelementptr inbounds %"class.v8::internal::Handle", %"class.v8::internal::Handle"* %228, i64 -1
  %230 = bitcast %"class.v8::internal::Handle"* %229 to <2 x i64>*
  store <2 x i64> %225, <2 x i64>* %230, align 8, !alias.scope !85, !noalias !82
  %231 = sub nuw nsw i64 -4, %213
  %232 = sub nuw nsw i64 -4, %213
  %233 = getelementptr inbounds %"class.v8::internal::Handle", %"class.v8::internal::Handle"* %210, i64 %231
  %234 = getelementptr inbounds %"class.v8::internal::Handle", %"class.v8::internal::Handle"* %211, i64 %232
  %235 = getelementptr inbounds %"class.v8::internal::Handle", %"class.v8::internal::Handle"* %234, i64 -1
  %236 = bitcast %"class.v8::internal::Handle"* %235 to <2 x i64>*
  %237 = load <2 x i64>, <2 x i64>* %236, align 8, !alias.scope !82
  %238 = getelementptr inbounds %"class.v8::internal::Handle", %"class.v8::internal::Handle"* %234, i64 -2
  %239 = getelementptr inbounds %"class.v8::internal::Handle", %"class.v8::internal::Handle"* %238, i64 -1
  %240 = bitcast %"class.v8::internal::Handle"* %239 to <2 x i64>*
  %241 = load <2 x i64>, <2 x i64>* %240, align 8, !alias.scope !82
  %242 = getelementptr inbounds %"class.v8::internal::Handle", %"class.v8::internal::Handle"* %233, i64 -1
  %243 = bitcast %"class.v8::internal::Handle"* %242 to <2 x i64>*
  store <2 x i64> %237, <2 x i64>* %243, align 8, !alias.scope !85, !noalias !82
  %244 = getelementptr inbounds %"class.v8::internal::Handle", %"class.v8::internal::Handle"* %233, i64 -2
  %245 = getelementptr inbounds %"class.v8::internal::Handle", %"class.v8::internal::Handle"* %244, i64 -1
  %246 = bitcast %"class.v8::internal::Handle"* %245 to <2 x i64>*
  store <2 x i64> %241, <2 x i64>* %246, align 8, !alias.scope !85, !noalias !82
  %247 = add i64 %213, 8
  %248 = add i64 %214, -2
  %249 = icmp eq i64 %248, 0
  br i1 %249, label %250, label %212, !llvm.loop !87

250:                                              ; preds = %212, %195
  %251 = phi i64 [ 0, %195 ], [ %247, %212 ]
  %252 = icmp eq i64 %204, 0
  br i1 %252, label %272, label %253

253:                                              ; preds = %250
  %254 = sub i64 0, %251
  %255 = getelementptr %"class.v8::internal::Handle", %"class.v8::internal::Handle"* %164, i64 -1
  %256 = sub i64 0, %251
  %257 = getelementptr %"class.v8::internal::Handle", %"class.v8::internal::Handle"* %172, i64 -1
  %258 = getelementptr inbounds %"class.v8::internal::Handle", %"class.v8::internal::Handle"* %255, i64 %254
  %259 = getelementptr inbounds %"class.v8::internal::Handle", %"class.v8::internal::Handle"* %257, i64 %256
  %260 = getelementptr inbounds %"class.v8::internal::Handle", %"class.v8::internal::Handle"* %259, i64 -1
  %261 = bitcast %"class.v8::internal::Handle"* %260 to <2 x i64>*
  %262 = load <2 x i64>, <2 x i64>* %261, align 8, !alias.scope !82
  %263 = getelementptr inbounds %"class.v8::internal::Handle", %"class.v8::internal::Handle"* %259, i64 -2
  %264 = getelementptr inbounds %"class.v8::internal::Handle", %"class.v8::internal::Handle"* %263, i64 -1
  %265 = bitcast %"class.v8::internal::Handle"* %264 to <2 x i64>*
  %266 = load <2 x i64>, <2 x i64>* %265, align 8, !alias.scope !82
  %267 = getelementptr inbounds %"class.v8::internal::Handle", %"class.v8::internal::Handle"* %258, i64 -1
  %268 = bitcast %"class.v8::internal::Handle"* %267 to <2 x i64>*
  store <2 x i64> %262, <2 x i64>* %268, align 8, !alias.scope !85, !noalias !82
  %269 = getelementptr inbounds %"class.v8::internal::Handle", %"class.v8::internal::Handle"* %258, i64 -2
  %270 = getelementptr inbounds %"class.v8::internal::Handle", %"class.v8::internal::Handle"* %269, i64 -1
  %271 = bitcast %"class.v8::internal::Handle"* %270 to <2 x i64>*
  store <2 x i64> %266, <2 x i64>* %271, align 8, !alias.scope !85, !noalias !82
  br label %272

272:                                              ; preds = %250, %253
  %273 = icmp eq i64 %179, %196
  br i1 %273, label %344, label %274

274:                                              ; preds = %272, %181, %174
  %275 = phi %"class.v8::internal::Handle"* [ %164, %181 ], [ %164, %174 ], [ %198, %272 ]
  %276 = phi %"class.v8::internal::Handle"* [ %172, %181 ], [ %172, %174 ], [ %200, %272 ]
  %277 = getelementptr %"class.v8::internal::Handle", %"class.v8::internal::Handle"* %276, i64 -1
  %278 = ptrtoint %"class.v8::internal::Handle"* %277 to i64
  %279 = sub i64 %278, %171
  %280 = lshr i64 %279, 3
  %281 = add nuw nsw i64 %280, 1
  %282 = and i64 %281, 7
  %283 = icmp eq i64 %282, 0
  br i1 %283, label %295, label %284

284:                                              ; preds = %274, %284
  %285 = phi %"class.v8::internal::Handle"* [ %288, %284 ], [ %275, %274 ]
  %286 = phi %"class.v8::internal::Handle"* [ %289, %284 ], [ %276, %274 ]
  %287 = phi i64 [ %293, %284 ], [ %282, %274 ]
  %288 = getelementptr inbounds %"class.v8::internal::Handle", %"class.v8::internal::Handle"* %285, i64 -1
  %289 = getelementptr inbounds %"class.v8::internal::Handle", %"class.v8::internal::Handle"* %286, i64 -1
  %290 = bitcast %"class.v8::internal::Handle"* %289 to i64*
  %291 = bitcast %"class.v8::internal::Handle"* %288 to i64*
  %292 = load i64, i64* %290, align 8
  store i64 %292, i64* %291, align 8
  %293 = add i64 %287, -1
  %294 = icmp eq i64 %293, 0
  br i1 %294, label %295, label %284, !llvm.loop !88

295:                                              ; preds = %284, %274
  %296 = phi %"class.v8::internal::Handle"* [ undef, %274 ], [ %288, %284 ]
  %297 = phi %"class.v8::internal::Handle"* [ %275, %274 ], [ %288, %284 ]
  %298 = phi %"class.v8::internal::Handle"* [ %276, %274 ], [ %289, %284 ]
  %299 = icmp ult i64 %279, 56
  br i1 %299, label %344, label %300

300:                                              ; preds = %295, %300
  %301 = phi %"class.v8::internal::Handle"* [ %338, %300 ], [ %297, %295 ]
  %302 = phi %"class.v8::internal::Handle"* [ %339, %300 ], [ %298, %295 ]
  %303 = getelementptr inbounds %"class.v8::internal::Handle", %"class.v8::internal::Handle"* %301, i64 -1
  %304 = getelementptr inbounds %"class.v8::internal::Handle", %"class.v8::internal::Handle"* %302, i64 -1
  %305 = bitcast %"class.v8::internal::Handle"* %304 to i64*
  %306 = bitcast %"class.v8::internal::Handle"* %303 to i64*
  %307 = load i64, i64* %305, align 8
  store i64 %307, i64* %306, align 8
  %308 = getelementptr inbounds %"class.v8::internal::Handle", %"class.v8::internal::Handle"* %301, i64 -2
  %309 = getelementptr inbounds %"class.v8::internal::Handle", %"class.v8::internal::Handle"* %302, i64 -2
  %310 = bitcast %"class.v8::internal::Handle"* %309 to i64*
  %311 = bitcast %"class.v8::internal::Handle"* %308 to i64*
  %312 = load i64, i64* %310, align 8
  store i64 %312, i64* %311, align 8
  %313 = getelementptr inbounds %"class.v8::internal::Handle", %"class.v8::internal::Handle"* %301, i64 -3
  %314 = getelementptr inbounds %"class.v8::internal::Handle", %"class.v8::internal::Handle"* %302, i64 -3
  %315 = bitcast %"class.v8::internal::Handle"* %314 to i64*
  %316 = bitcast %"class.v8::internal::Handle"* %313 to i64*
  %317 = load i64, i64* %315, align 8
  store i64 %317, i64* %316, align 8
  %318 = getelementptr inbounds %"class.v8::internal::Handle", %"class.v8::internal::Handle"* %301, i64 -4
  %319 = getelementptr inbounds %"class.v8::internal::Handle", %"class.v8::internal::Handle"* %302, i64 -4
  %320 = bitcast %"class.v8::internal::Handle"* %319 to i64*
  %321 = bitcast %"class.v8::internal::Handle"* %318 to i64*
  %322 = load i64, i64* %320, align 8
  store i64 %322, i64* %321, align 8
  %323 = getelementptr inbounds %"class.v8::internal::Handle", %"class.v8::internal::Handle"* %301, i64 -5
  %324 = getelementptr inbounds %"class.v8::internal::Handle", %"class.v8::internal::Handle"* %302, i64 -5
  %325 = bitcast %"class.v8::internal::Handle"* %324 to i64*
  %326 = bitcast %"class.v8::internal::Handle"* %323 to i64*
  %327 = load i64, i64* %325, align 8
  store i64 %327, i64* %326, align 8
  %328 = getelementptr inbounds %"class.v8::internal::Handle", %"class.v8::internal::Handle"* %301, i64 -6
  %329 = getelementptr inbounds %"class.v8::internal::Handle", %"class.v8::internal::Handle"* %302, i64 -6
  %330 = bitcast %"class.v8::internal::Handle"* %329 to i64*
  %331 = bitcast %"class.v8::internal::Handle"* %328 to i64*
  %332 = load i64, i64* %330, align 8
  store i64 %332, i64* %331, align 8
  %333 = getelementptr inbounds %"class.v8::internal::Handle", %"class.v8::internal::Handle"* %301, i64 -7
  %334 = getelementptr inbounds %"class.v8::internal::Handle", %"class.v8::internal::Handle"* %302, i64 -7
  %335 = bitcast %"class.v8::internal::Handle"* %334 to i64*
  %336 = bitcast %"class.v8::internal::Handle"* %333 to i64*
  %337 = load i64, i64* %335, align 8
  store i64 %337, i64* %336, align 8
  %338 = getelementptr inbounds %"class.v8::internal::Handle", %"class.v8::internal::Handle"* %301, i64 -8
  %339 = getelementptr inbounds %"class.v8::internal::Handle", %"class.v8::internal::Handle"* %302, i64 -8
  %340 = bitcast %"class.v8::internal::Handle"* %339 to i64*
  %341 = bitcast %"class.v8::internal::Handle"* %338 to i64*
  %342 = load i64, i64* %340, align 8
  store i64 %342, i64* %341, align 8
  %343 = icmp eq %"class.v8::internal::Handle"* %339, %170
  br i1 %343, label %344, label %300, !llvm.loop !89

344:                                              ; preds = %295, %300, %272, %161
  %345 = phi %"class.v8::internal::Handle"* [ %164, %161 ], [ %198, %272 ], [ %296, %295 ], [ %338, %300 ]
  %346 = ptrtoint %"class.v8::internal::Handle"* %345 to i64
  store i64 %346, i64* %66, align 8
  store i64 %169, i64* %65, align 8
  store i64 %166, i64* %67, align 8
  br label %347

347:                                              ; preds = %122, %344
  %348 = add nuw i64 %107, 1
  %349 = load i64, i64* %90, align 8
  %350 = load i64, i64* %92, align 8
  %351 = sub i64 %349, %350
  %352 = ashr exact i64 %351, 3
  %353 = icmp ult i64 %348, %352
  br i1 %353, label %105, label %97

354:                                              ; preds = %104, %101
  %355 = load i8, i8* %57, align 8
  %356 = icmp eq i8 %355, 0
  br i1 %356, label %77, label %357

357:                                              ; preds = %354
  %358 = load %"class.v8::internal::Handle"*, %"class.v8::internal::Handle"** %75, align 8
  %359 = icmp eq %"class.v8::internal::Handle"* %358, null
  br i1 %359, label %362, label %360

360:                                              ; preds = %357
  %361 = ptrtoint %"class.v8::internal::Handle"* %358 to i64
  store i64 %361, i64* %65, align 8
  br label %362

362:                                              ; preds = %360, %357
  %363 = load %"class.v8::internal::Handle"*, %"class.v8::internal::Handle"** %76, align 8
  %364 = icmp eq %"class.v8::internal::Handle"* %363, null
  br i1 %364, label %77, label %365

365:                                              ; preds = %362
  %366 = ptrtoint %"class.v8::internal::Handle"* %363 to i64
  store i64 %366, i64* %60, align 8
  br label %77

367:                                              ; preds = %80
  call void @llvm.lifetime.end.p0i8(i64 80, i8* nonnull %57) #8
  br label %368

368:                                              ; preds = %77, %367, %49
  %369 = phi i1 [ true, %49 ], [ false, %367 ], [ true, %77 ]
  ret i1 %369
}

declare i64 @_ZNK2v88internal8compiler21ElementAccessFeedback10keyed_modeEv(%"class.v8::internal::compiler::ElementAccessFeedback"*) local_unnamed_addr #4

declare i32 @_ZNK2v88internal8compiler15KeyedAccessMode11access_modeEv(%"class.v8::internal::compiler::KeyedAccessMode"*) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK2v88internal8compiler17AccessInfoFactory22ConsolidateElementLoadERKNS1_21ElementAccessFeedbackE(%"class.v8::base::Optional.1265"* noalias sret, %"class.v8::internal::compiler::AccessInfoFactory"* nocapture readonly, %"class.v8::internal::compiler::ElementAccessFeedback"* dereferenceable(48)) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.v8::base::Optional.1270", align 8
  %5 = alloca %"class.v8::internal::ZoneVector", align 8
  %6 = alloca %"class.v8::base::Optional.1270", align 8
  %7 = alloca %"class.v8::internal::compiler::ElementAccessInfo", align 8
  %8 = tail call dereferenceable(32) %"class.v8::internal::ZoneVector.1275"* @_ZNK2v88internal8compiler21ElementAccessFeedback17transition_groupsEv(%"class.v8::internal::compiler::ElementAccessFeedback"* %2) #8
  %9 = getelementptr inbounds %"class.v8::internal::ZoneVector.1275", %"class.v8::internal::ZoneVector.1275"* %8, i64 0, i32 0, i32 0, i32 0
  %10 = load %"class.v8::internal::ZoneVector"*, %"class.v8::internal::ZoneVector"** %9, align 8
  %11 = getelementptr inbounds %"class.v8::internal::ZoneVector.1275", %"class.v8::internal::ZoneVector.1275"* %8, i64 0, i32 0, i32 0, i32 1
  %12 = load %"class.v8::internal::ZoneVector"*, %"class.v8::internal::ZoneVector"** %11, align 8
  %13 = icmp eq %"class.v8::internal::ZoneVector"* %10, %12
  br i1 %13, label %14, label %17

14:                                               ; preds = %3
  %15 = getelementptr inbounds %"class.v8::base::Optional.1265", %"class.v8::base::Optional.1265"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %15, align 8
  %16 = getelementptr inbounds %"class.v8::base::Optional.1265", %"class.v8::base::Optional.1265"* %0, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0
  store i8 0, i8* %16, align 8
  br label %556

17:                                               ; preds = %3
  %18 = tail call dereferenceable(32) %"class.v8::internal::ZoneVector.1275"* @_ZNK2v88internal8compiler21ElementAccessFeedback17transition_groupsEv(%"class.v8::internal::compiler::ElementAccessFeedback"* %2) #8
  %19 = getelementptr inbounds %"class.v8::internal::ZoneVector.1275", %"class.v8::internal::ZoneVector.1275"* %18, i64 0, i32 0, i32 0, i32 0
  %20 = load %"class.v8::internal::ZoneVector"*, %"class.v8::internal::ZoneVector"** %19, align 8
  %21 = getelementptr inbounds %"class.v8::internal::ZoneVector", %"class.v8::internal::ZoneVector"* %20, i64 0, i32 0, i32 0, i32 0
  %22 = load %"class.v8::internal::Handle"*, %"class.v8::internal::Handle"** %21, align 8
  %23 = getelementptr inbounds %"class.v8::internal::Handle", %"class.v8::internal::Handle"* %22, i64 0, i32 0, i32 0
  %24 = load i64*, i64** %23, align 8
  %25 = getelementptr inbounds %"class.v8::base::Optional.1270", %"class.v8::base::Optional.1270"* %4, i64 0, i32 0, i32 0, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %25) #8
  %26 = getelementptr inbounds %"class.v8::internal::compiler::AccessInfoFactory", %"class.v8::internal::compiler::AccessInfoFactory"* %1, i64 0, i32 0
  %27 = load %"class.v8::internal::compiler::JSHeapBroker"*, %"class.v8::internal::compiler::JSHeapBroker"** %26, align 8
  call void @_ZN2v88internal8compiler10TryMakeRefINS0_3MapEvEENS_4base8OptionalINS1_10ref_traitsIT_E8ref_typeEEEPNS1_12JSHeapBrokerENS0_6HandleIS7_EENS4_5FlagsINS1_19GetOrCreateDataFlagEiEE(%"class.v8::base::Optional.1270"* nonnull sret %4, %"class.v8::internal::compiler::JSHeapBroker"* %27, i64* %24, i32 0)
  %28 = load i8, i8* %25, align 8, !range !80
  %29 = icmp eq i8 %28, 0
  br i1 %29, label %30, label %32

30:                                               ; preds = %17
  %31 = getelementptr inbounds %"class.v8::base::Optional.1265", %"class.v8::base::Optional.1265"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* align 8 %31, i8 0, i64 80, i1 false)
  br label %555

32:                                               ; preds = %17
  %33 = getelementptr inbounds %"class.v8::base::Optional.1270", %"class.v8::base::Optional.1270"* %4, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  %34 = call zeroext i16 @_ZNK2v88internal8compiler6MapRef13instance_typeEv(%"class.v8::internal::compiler::MapRef"* %33) #8
  %35 = call zeroext i8 @_ZNK2v88internal8compiler6MapRef13elements_kindEv(%"class.v8::internal::compiler::MapRef"* %33) #8
  %36 = bitcast %"class.v8::internal::ZoneVector"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %36) #8
  %37 = getelementptr inbounds %"class.v8::internal::compiler::AccessInfoFactory", %"class.v8::internal::compiler::AccessInfoFactory"* %1, i64 0, i32 3
  %38 = bitcast %"class.v8::internal::Zone"** %37 to i64*
  %39 = load i64, i64* %38, align 8
  %40 = getelementptr inbounds %"class.v8::internal::ZoneVector", %"class.v8::internal::ZoneVector"* %5, i64 0, i32 0, i32 0, i32 2, i32 1
  %41 = bitcast %"struct.std::__1::__compressed_pair_elem.0"* %40 to i64*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %36, i8 0, i64 24, i1 false) #8
  store i64 %39, i64* %41, align 8
  %42 = call dereferenceable(32) %"class.v8::internal::ZoneVector.1275"* @_ZNK2v88internal8compiler21ElementAccessFeedback17transition_groupsEv(%"class.v8::internal::compiler::ElementAccessFeedback"* %2) #8
  %43 = getelementptr inbounds %"class.v8::internal::ZoneVector.1275", %"class.v8::internal::ZoneVector.1275"* %42, i64 0, i32 0, i32 0, i32 0
  %44 = load %"class.v8::internal::ZoneVector"*, %"class.v8::internal::ZoneVector"** %43, align 8
  %45 = getelementptr inbounds %"class.v8::internal::ZoneVector.1275", %"class.v8::internal::ZoneVector.1275"* %42, i64 0, i32 0, i32 0, i32 1
  %46 = load %"class.v8::internal::ZoneVector"*, %"class.v8::internal::ZoneVector"** %45, align 8
  %47 = icmp eq %"class.v8::internal::ZoneVector"* %44, %46
  br i1 %47, label %383, label %48

48:                                               ; preds = %32
  %49 = getelementptr inbounds %"class.v8::base::Optional.1270", %"class.v8::base::Optional.1270"* %6, i64 0, i32 0, i32 0, i32 0, i32 0
  %50 = getelementptr inbounds %"class.v8::base::Optional.1270", %"class.v8::base::Optional.1270"* %6, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  %51 = getelementptr inbounds %"class.v8::internal::ZoneVector", %"class.v8::internal::ZoneVector"* %5, i64 0, i32 0, i32 0, i32 1
  %52 = getelementptr inbounds %"class.v8::internal::ZoneVector", %"class.v8::internal::ZoneVector"* %5, i64 0, i32 0, i32 0, i32 2, i32 0, i32 0
  %53 = bitcast %"class.v8::internal::Handle"** %51 to i64*
  %54 = bitcast %"class.v8::internal::ZoneVector"* %5 to i64*
  %55 = bitcast %"class.v8::internal::Handle"** %52 to i64*
  %56 = getelementptr inbounds %"class.v8::internal::ZoneVector", %"class.v8::internal::ZoneVector"* %5, i64 0, i32 0, i32 0, i32 2, i32 1, i32 0, i32 0
  %57 = getelementptr inbounds %"class.v8::internal::ZoneVector", %"class.v8::internal::ZoneVector"* %5, i64 0, i32 0, i32 0, i32 0
  br label %58

58:                                               ; preds = %48, %368
  %59 = phi %"class.v8::internal::Handle"* [ null, %48 ], [ %369, %368 ]
  %60 = phi %"class.v8::internal::Handle"* [ null, %48 ], [ %370, %368 ]
  %61 = phi %"class.v8::internal::Handle"* [ null, %48 ], [ %371, %368 ]
  %62 = phi i64 [ 0, %48 ], [ %372, %368 ]
  %63 = phi i8 [ %35, %48 ], [ %373, %368 ]
  %64 = phi %"class.v8::internal::ZoneVector"* [ %44, %48 ], [ %374, %368 ]
  %65 = getelementptr inbounds %"class.v8::internal::ZoneVector", %"class.v8::internal::ZoneVector"* %64, i64 0, i32 0, i32 0, i32 0
  %66 = load %"class.v8::internal::Handle"*, %"class.v8::internal::Handle"** %65, align 8
  %67 = getelementptr inbounds %"class.v8::internal::ZoneVector", %"class.v8::internal::ZoneVector"* %64, i64 0, i32 0, i32 0, i32 1
  %68 = load %"class.v8::internal::Handle"*, %"class.v8::internal::Handle"** %67, align 8
  %69 = icmp eq %"class.v8::internal::Handle"* %66, %68
  br i1 %69, label %368, label %70

70:                                               ; preds = %58, %363
  %71 = phi i8 [ %131, %363 ], [ %63, %58 ]
  %72 = phi %"class.v8::internal::Handle"* [ %366, %363 ], [ %66, %58 ]
  %73 = getelementptr inbounds %"class.v8::internal::Handle", %"class.v8::internal::Handle"* %72, i64 0, i32 0, i32 0
  %74 = load i64*, i64** %73, align 8
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %49) #8
  %75 = load %"class.v8::internal::compiler::JSHeapBroker"*, %"class.v8::internal::compiler::JSHeapBroker"** %26, align 8
  call void @_ZN2v88internal8compiler10TryMakeRefINS0_3MapEvEENS_4base8OptionalINS1_10ref_traitsIT_E8ref_typeEEEPNS1_12JSHeapBrokerENS0_6HandleIS7_EENS4_5FlagsINS1_19GetOrCreateDataFlagEiEE(%"class.v8::base::Optional.1270"* nonnull sret %6, %"class.v8::internal::compiler::JSHeapBroker"* %75, i64* %74, i32 0)
  %76 = load i8, i8* %49, align 8, !range !80
  %77 = icmp eq i8 %76, 0
  br i1 %77, label %78, label %80

78:                                               ; preds = %70
  %79 = getelementptr inbounds %"class.v8::base::Optional.1265", %"class.v8::base::Optional.1265"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* align 8 %79, i8 0, i64 80, i1 false)
  br label %376

80:                                               ; preds = %70
  %81 = call zeroext i16 @_ZNK2v88internal8compiler6MapRef13instance_typeEv(%"class.v8::internal::compiler::MapRef"* %50) #8
  %82 = icmp eq i16 %81, %34
  br i1 %82, label %83, label %85

83:                                               ; preds = %80
  %84 = call zeroext i1 @_ZN2v88internal8compiler22CanInlineElementAccessERKNS1_6MapRefE(%"class.v8::internal::compiler::MapRef"* dereferenceable(16) %50) #8
  br i1 %84, label %88, label %85

85:                                               ; preds = %80, %83
  %86 = getelementptr inbounds %"class.v8::base::Optional.1265", %"class.v8::base::Optional.1265"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %86, align 8
  %87 = getelementptr inbounds %"class.v8::base::Optional.1265", %"class.v8::base::Optional.1265"* %0, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0
  store i8 0, i8* %87, align 8
  br label %376

88:                                               ; preds = %83
  %89 = call zeroext i8 @_ZNK2v88internal8compiler6MapRef13elements_kindEv(%"class.v8::internal::compiler::MapRef"* %50) #8
  %90 = and i8 %71, 1
  %91 = icmp ne i8 %90, 0
  %92 = icmp ult i8 %71, 6
  %93 = and i1 %92, %91
  br i1 %93, label %94, label %101

94:                                               ; preds = %88
  switch i8 %89, label %100 [
    i8 0, label %111
    i8 4, label %95
    i8 2, label %96
    i8 6, label %97
  ]

95:                                               ; preds = %94
  br label %111

96:                                               ; preds = %94
  br label %111

97:                                               ; preds = %94
  %98 = and i8 %71, -2
  %99 = icmp eq i8 %98, 4
  br i1 %99, label %127, label %121

100:                                              ; preds = %94
  br label %111

101:                                              ; preds = %88
  %102 = and i8 %89, 1
  %103 = icmp ne i8 %102, 0
  %104 = icmp ult i8 %89, 6
  %105 = and i1 %104, %103
  br i1 %105, label %106, label %111

106:                                              ; preds = %101
  switch i8 %71, label %110 [
    i8 0, label %111
    i8 4, label %107
    i8 2, label %108
    i8 6, label %109
  ]

107:                                              ; preds = %106
  br label %111

108:                                              ; preds = %106
  br label %111

109:                                              ; preds = %106
  br label %111

110:                                              ; preds = %106
  br label %111

111:                                              ; preds = %110, %109, %108, %107, %106, %101, %100, %96, %95, %94
  %112 = phi i8 [ %71, %101 ], [ %71, %94 ], [ %71, %95 ], [ %71, %96 ], [ %71, %100 ], [ 5, %107 ], [ 3, %108 ], [ 7, %109 ], [ %71, %110 ], [ 1, %106 ]
  %113 = phi i8 [ %89, %101 ], [ 1, %94 ], [ 5, %95 ], [ 3, %96 ], [ %89, %100 ], [ %89, %107 ], [ %89, %108 ], [ %89, %109 ], [ %89, %110 ], [ %89, %106 ]
  %114 = icmp eq i8 %112, %113
  br i1 %114, label %130, label %115

115:                                              ; preds = %111
  %116 = and i8 %113, -2
  %117 = icmp eq i8 %116, 4
  %118 = and i8 %112, -2
  %119 = icmp eq i8 %118, 4
  %120 = xor i1 %119, %117
  br i1 %120, label %127, label %121

121:                                              ; preds = %115, %97
  %122 = phi i8 [ %71, %97 ], [ %112, %115 ]
  %123 = phi i8 [ 7, %97 ], [ %113, %115 ]
  %124 = call zeroext i1 @_ZN2v88internal35IsMoreGeneralElementsKindTransitionENS0_12ElementsKindES1_(i8 zeroext %123, i8 zeroext %122) #8
  br i1 %124, label %130, label %125

125:                                              ; preds = %121
  %126 = call zeroext i1 @_ZN2v88internal35IsMoreGeneralElementsKindTransitionENS0_12ElementsKindES1_(i8 zeroext %122, i8 zeroext %123) #8
  br i1 %126, label %130, label %127

127:                                              ; preds = %125, %115, %97
  %128 = getelementptr inbounds %"class.v8::base::Optional.1265", %"class.v8::base::Optional.1265"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %128, align 8
  %129 = getelementptr inbounds %"class.v8::base::Optional.1265", %"class.v8::base::Optional.1265"* %0, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0
  store i8 0, i8* %129, align 8
  br label %376

130:                                              ; preds = %111, %121, %125
  %131 = phi i8 [ %112, %111 ], [ %122, %121 ], [ %123, %125 ]
  %132 = call i64* @_ZNK2v88internal8compiler6MapRef6objectEv(%"class.v8::internal::compiler::MapRef"* %50) #8
  %133 = ptrtoint i64* %132 to i64
  %134 = load %"class.v8::internal::Handle"*, %"class.v8::internal::Handle"** %51, align 8
  %135 = load %"class.v8::internal::Handle"*, %"class.v8::internal::Handle"** %52, align 8
  %136 = icmp ult %"class.v8::internal::Handle"* %134, %135
  %137 = ptrtoint %"class.v8::internal::Handle"* %135 to i64
  br i1 %136, label %138, label %142

138:                                              ; preds = %130
  %139 = bitcast %"class.v8::internal::Handle"* %134 to i64*
  store i64 %133, i64* %139, align 8
  %140 = getelementptr inbounds %"class.v8::internal::Handle", %"class.v8::internal::Handle"* %134, i64 1
  %141 = ptrtoint %"class.v8::internal::Handle"* %140 to i64
  store i64 %141, i64* %53, align 8
  br label %363

142:                                              ; preds = %130
  %143 = ptrtoint %"class.v8::internal::Handle"* %134 to i64
  %144 = load i64, i64* %54, align 8
  %145 = sub i64 %143, %144
  %146 = ashr exact i64 %145, 3
  %147 = add nsw i64 %146, 1
  %148 = icmp ugt i64 %147, 268435455
  br i1 %148, label %149, label %151

149:                                              ; preds = %142
  %150 = bitcast %"class.v8::internal::ZoneVector"* %5 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %150) #12
  unreachable

151:                                              ; preds = %142
  %152 = sub i64 %137, %144
  %153 = ashr exact i64 %152, 3
  %154 = icmp ult i64 %153, 134217727
  br i1 %154, label %155, label %160

155:                                              ; preds = %151
  %156 = ashr exact i64 %152, 2
  %157 = icmp ult i64 %156, %147
  %158 = select i1 %157, i64 %147, i64 %156
  %159 = icmp eq i64 %158, 0
  br i1 %159, label %177, label %160

160:                                              ; preds = %155, %151
  %161 = phi i64 [ %158, %155 ], [ 268435455, %151 ]
  %162 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %56, align 8
  %163 = shl i64 %161, 3
  %164 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %162, i64 0, i32 2
  %165 = load i64, i64* %164, align 8
  %166 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %162, i64 0, i32 3
  %167 = load i64, i64* %166, align 8
  %168 = sub i64 %167, %165
  %169 = icmp ugt i64 %163, %168
  br i1 %169, label %170, label %172, !prof !2

170:                                              ; preds = %160
  %171 = call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %162, i64 %163) #8
  br label %174

172:                                              ; preds = %160
  %173 = add i64 %165, %163
  store i64 %173, i64* %164, align 8
  br label %174

174:                                              ; preds = %172, %170
  %175 = phi i64 [ %171, %170 ], [ %165, %172 ]
  %176 = inttoptr i64 %175 to %"class.v8::internal::Handle"*
  br label %177

177:                                              ; preds = %174, %155
  %178 = phi i64 [ %161, %174 ], [ 0, %155 ]
  %179 = phi %"class.v8::internal::Handle"* [ %176, %174 ], [ null, %155 ]
  %180 = getelementptr inbounds %"class.v8::internal::Handle", %"class.v8::internal::Handle"* %179, i64 %146
  %181 = getelementptr inbounds %"class.v8::internal::Handle", %"class.v8::internal::Handle"* %179, i64 %178
  %182 = ptrtoint %"class.v8::internal::Handle"* %181 to i64
  %183 = bitcast %"class.v8::internal::Handle"* %180 to i64*
  store i64 %133, i64* %183, align 8
  %184 = getelementptr inbounds %"class.v8::internal::Handle", %"class.v8::internal::Handle"* %180, i64 1
  %185 = ptrtoint %"class.v8::internal::Handle"* %184 to i64
  %186 = load %"class.v8::internal::Handle"*, %"class.v8::internal::Handle"** %57, align 8
  %187 = ptrtoint %"class.v8::internal::Handle"* %186 to i64
  %188 = load %"class.v8::internal::Handle"*, %"class.v8::internal::Handle"** %51, align 8
  %189 = icmp eq %"class.v8::internal::Handle"* %188, %186
  br i1 %189, label %360, label %190

190:                                              ; preds = %177
  %191 = getelementptr %"class.v8::internal::Handle", %"class.v8::internal::Handle"* %188, i64 -1
  %192 = ptrtoint %"class.v8::internal::Handle"* %191 to i64
  %193 = sub i64 %192, %187
  %194 = lshr i64 %193, 3
  %195 = add nuw nsw i64 %194, 1
  %196 = icmp ult i64 %195, 4
  br i1 %196, label %290, label %197

197:                                              ; preds = %190
  %198 = getelementptr %"class.v8::internal::Handle", %"class.v8::internal::Handle"* %179, i64 -1
  %199 = getelementptr %"class.v8::internal::Handle", %"class.v8::internal::Handle"* %188, i64 -1
  %200 = ptrtoint %"class.v8::internal::Handle"* %199 to i64
  %201 = sub i64 %200, %187
  %202 = lshr i64 %201, 3
  %203 = sub nsw i64 %146, %202
  %204 = getelementptr %"class.v8::internal::Handle", %"class.v8::internal::Handle"* %198, i64 %203
  %205 = getelementptr %"class.v8::internal::Handle", %"class.v8::internal::Handle"* %188, i64 -1
  %206 = sub nsw i64 0, %202
  %207 = getelementptr %"class.v8::internal::Handle", %"class.v8::internal::Handle"* %205, i64 %206
  %208 = icmp ult %"class.v8::internal::Handle"* %204, %188
  %209 = icmp ult %"class.v8::internal::Handle"* %207, %180
  %210 = and i1 %208, %209
  br i1 %210, label %290, label %211

211:                                              ; preds = %197
  %212 = and i64 %195, 4611686018427387900
  %213 = sub nsw i64 0, %212
  %214 = getelementptr %"class.v8::internal::Handle", %"class.v8::internal::Handle"* %180, i64 %213
  %215 = sub nsw i64 0, %212
  %216 = getelementptr %"class.v8::internal::Handle", %"class.v8::internal::Handle"* %188, i64 %215
  %217 = add nsw i64 %212, -4
  %218 = lshr exact i64 %217, 2
  %219 = add nuw nsw i64 %218, 1
  %220 = and i64 %219, 1
  %221 = icmp eq i64 %217, 0
  br i1 %221, label %266, label %222

222:                                              ; preds = %211
  %223 = sub nuw nsw i64 %219, %220
  %224 = getelementptr %"class.v8::internal::Handle", %"class.v8::internal::Handle"* %180, i64 -1
  %225 = getelementptr %"class.v8::internal::Handle", %"class.v8::internal::Handle"* %188, i64 -1
  %226 = getelementptr %"class.v8::internal::Handle", %"class.v8::internal::Handle"* %180, i64 -1
  %227 = getelementptr %"class.v8::internal::Handle", %"class.v8::internal::Handle"* %188, i64 -1
  br label %228

228:                                              ; preds = %228, %222
  %229 = phi i64 [ 0, %222 ], [ %263, %228 ]
  %230 = phi i64 [ %223, %222 ], [ %264, %228 ]
  %231 = sub i64 0, %229
  %232 = sub i64 0, %229
  %233 = getelementptr inbounds %"class.v8::internal::Handle", %"class.v8::internal::Handle"* %224, i64 %231
  %234 = getelementptr inbounds %"class.v8::internal::Handle", %"class.v8::internal::Handle"* %225, i64 %232
  %235 = getelementptr inbounds %"class.v8::internal::Handle", %"class.v8::internal::Handle"* %234, i64 -1
  %236 = bitcast %"class.v8::internal::Handle"* %235 to <2 x i64>*
  %237 = load <2 x i64>, <2 x i64>* %236, align 8, !alias.scope !90
  %238 = getelementptr inbounds %"class.v8::internal::Handle", %"class.v8::internal::Handle"* %234, i64 -2
  %239 = getelementptr inbounds %"class.v8::internal::Handle", %"class.v8::internal::Handle"* %238, i64 -1
  %240 = bitcast %"class.v8::internal::Handle"* %239 to <2 x i64>*
  %241 = load <2 x i64>, <2 x i64>* %240, align 8, !alias.scope !90
  %242 = getelementptr inbounds %"class.v8::internal::Handle", %"class.v8::internal::Handle"* %233, i64 -1
  %243 = bitcast %"class.v8::internal::Handle"* %242 to <2 x i64>*
  store <2 x i64> %237, <2 x i64>* %243, align 8, !alias.scope !93, !noalias !90
  %244 = getelementptr inbounds %"class.v8::internal::Handle", %"class.v8::internal::Handle"* %233, i64 -2
  %245 = getelementptr inbounds %"class.v8::internal::Handle", %"class.v8::internal::Handle"* %244, i64 -1
  %246 = bitcast %"class.v8::internal::Handle"* %245 to <2 x i64>*
  store <2 x i64> %241, <2 x i64>* %246, align 8, !alias.scope !93, !noalias !90
  %247 = sub nuw nsw i64 -4, %229
  %248 = sub nuw nsw i64 -4, %229
  %249 = getelementptr inbounds %"class.v8::internal::Handle", %"class.v8::internal::Handle"* %226, i64 %247
  %250 = getelementptr inbounds %"class.v8::internal::Handle", %"class.v8::internal::Handle"* %227, i64 %248
  %251 = getelementptr inbounds %"class.v8::internal::Handle", %"class.v8::internal::Handle"* %250, i64 -1
  %252 = bitcast %"class.v8::internal::Handle"* %251 to <2 x i64>*
  %253 = load <2 x i64>, <2 x i64>* %252, align 8, !alias.scope !90
  %254 = getelementptr inbounds %"class.v8::internal::Handle", %"class.v8::internal::Handle"* %250, i64 -2
  %255 = getelementptr inbounds %"class.v8::internal::Handle", %"class.v8::internal::Handle"* %254, i64 -1
  %256 = bitcast %"class.v8::internal::Handle"* %255 to <2 x i64>*
  %257 = load <2 x i64>, <2 x i64>* %256, align 8, !alias.scope !90
  %258 = getelementptr inbounds %"class.v8::internal::Handle", %"class.v8::internal::Handle"* %249, i64 -1
  %259 = bitcast %"class.v8::internal::Handle"* %258 to <2 x i64>*
  store <2 x i64> %253, <2 x i64>* %259, align 8, !alias.scope !93, !noalias !90
  %260 = getelementptr inbounds %"class.v8::internal::Handle", %"class.v8::internal::Handle"* %249, i64 -2
  %261 = getelementptr inbounds %"class.v8::internal::Handle", %"class.v8::internal::Handle"* %260, i64 -1
  %262 = bitcast %"class.v8::internal::Handle"* %261 to <2 x i64>*
  store <2 x i64> %257, <2 x i64>* %262, align 8, !alias.scope !93, !noalias !90
  %263 = add i64 %229, 8
  %264 = add i64 %230, -2
  %265 = icmp eq i64 %264, 0
  br i1 %265, label %266, label %228, !llvm.loop !95

266:                                              ; preds = %228, %211
  %267 = phi i64 [ 0, %211 ], [ %263, %228 ]
  %268 = icmp eq i64 %220, 0
  br i1 %268, label %288, label %269

269:                                              ; preds = %266
  %270 = sub i64 0, %267
  %271 = getelementptr %"class.v8::internal::Handle", %"class.v8::internal::Handle"* %180, i64 -1
  %272 = sub i64 0, %267
  %273 = getelementptr %"class.v8::internal::Handle", %"class.v8::internal::Handle"* %188, i64 -1
  %274 = getelementptr inbounds %"class.v8::internal::Handle", %"class.v8::internal::Handle"* %271, i64 %270
  %275 = getelementptr inbounds %"class.v8::internal::Handle", %"class.v8::internal::Handle"* %273, i64 %272
  %276 = getelementptr inbounds %"class.v8::internal::Handle", %"class.v8::internal::Handle"* %275, i64 -1
  %277 = bitcast %"class.v8::internal::Handle"* %276 to <2 x i64>*
  %278 = load <2 x i64>, <2 x i64>* %277, align 8, !alias.scope !90
  %279 = getelementptr inbounds %"class.v8::internal::Handle", %"class.v8::internal::Handle"* %275, i64 -2
  %280 = getelementptr inbounds %"class.v8::internal::Handle", %"class.v8::internal::Handle"* %279, i64 -1
  %281 = bitcast %"class.v8::internal::Handle"* %280 to <2 x i64>*
  %282 = load <2 x i64>, <2 x i64>* %281, align 8, !alias.scope !90
  %283 = getelementptr inbounds %"class.v8::internal::Handle", %"class.v8::internal::Handle"* %274, i64 -1
  %284 = bitcast %"class.v8::internal::Handle"* %283 to <2 x i64>*
  store <2 x i64> %278, <2 x i64>* %284, align 8, !alias.scope !93, !noalias !90
  %285 = getelementptr inbounds %"class.v8::internal::Handle", %"class.v8::internal::Handle"* %274, i64 -2
  %286 = getelementptr inbounds %"class.v8::internal::Handle", %"class.v8::internal::Handle"* %285, i64 -1
  %287 = bitcast %"class.v8::internal::Handle"* %286 to <2 x i64>*
  store <2 x i64> %282, <2 x i64>* %287, align 8, !alias.scope !93, !noalias !90
  br label %288

288:                                              ; preds = %266, %269
  %289 = icmp eq i64 %195, %212
  br i1 %289, label %360, label %290

290:                                              ; preds = %288, %197, %190
  %291 = phi %"class.v8::internal::Handle"* [ %180, %197 ], [ %180, %190 ], [ %214, %288 ]
  %292 = phi %"class.v8::internal::Handle"* [ %188, %197 ], [ %188, %190 ], [ %216, %288 ]
  %293 = getelementptr %"class.v8::internal::Handle", %"class.v8::internal::Handle"* %292, i64 -1
  %294 = ptrtoint %"class.v8::internal::Handle"* %293 to i64
  %295 = sub i64 %294, %187
  %296 = lshr i64 %295, 3
  %297 = add nuw nsw i64 %296, 1
  %298 = and i64 %297, 7
  %299 = icmp eq i64 %298, 0
  br i1 %299, label %311, label %300

300:                                              ; preds = %290, %300
  %301 = phi %"class.v8::internal::Handle"* [ %304, %300 ], [ %291, %290 ]
  %302 = phi %"class.v8::internal::Handle"* [ %305, %300 ], [ %292, %290 ]
  %303 = phi i64 [ %309, %300 ], [ %298, %290 ]
  %304 = getelementptr inbounds %"class.v8::internal::Handle", %"class.v8::internal::Handle"* %301, i64 -1
  %305 = getelementptr inbounds %"class.v8::internal::Handle", %"class.v8::internal::Handle"* %302, i64 -1
  %306 = bitcast %"class.v8::internal::Handle"* %305 to i64*
  %307 = bitcast %"class.v8::internal::Handle"* %304 to i64*
  %308 = load i64, i64* %306, align 8
  store i64 %308, i64* %307, align 8
  %309 = add i64 %303, -1
  %310 = icmp eq i64 %309, 0
  br i1 %310, label %311, label %300, !llvm.loop !96

311:                                              ; preds = %300, %290
  %312 = phi %"class.v8::internal::Handle"* [ undef, %290 ], [ %304, %300 ]
  %313 = phi %"class.v8::internal::Handle"* [ %291, %290 ], [ %304, %300 ]
  %314 = phi %"class.v8::internal::Handle"* [ %292, %290 ], [ %305, %300 ]
  %315 = icmp ult i64 %295, 56
  br i1 %315, label %360, label %316

316:                                              ; preds = %311, %316
  %317 = phi %"class.v8::internal::Handle"* [ %354, %316 ], [ %313, %311 ]
  %318 = phi %"class.v8::internal::Handle"* [ %355, %316 ], [ %314, %311 ]
  %319 = getelementptr inbounds %"class.v8::internal::Handle", %"class.v8::internal::Handle"* %317, i64 -1
  %320 = getelementptr inbounds %"class.v8::internal::Handle", %"class.v8::internal::Handle"* %318, i64 -1
  %321 = bitcast %"class.v8::internal::Handle"* %320 to i64*
  %322 = bitcast %"class.v8::internal::Handle"* %319 to i64*
  %323 = load i64, i64* %321, align 8
  store i64 %323, i64* %322, align 8
  %324 = getelementptr inbounds %"class.v8::internal::Handle", %"class.v8::internal::Handle"* %317, i64 -2
  %325 = getelementptr inbounds %"class.v8::internal::Handle", %"class.v8::internal::Handle"* %318, i64 -2
  %326 = bitcast %"class.v8::internal::Handle"* %325 to i64*
  %327 = bitcast %"class.v8::internal::Handle"* %324 to i64*
  %328 = load i64, i64* %326, align 8
  store i64 %328, i64* %327, align 8
  %329 = getelementptr inbounds %"class.v8::internal::Handle", %"class.v8::internal::Handle"* %317, i64 -3
  %330 = getelementptr inbounds %"class.v8::internal::Handle", %"class.v8::internal::Handle"* %318, i64 -3
  %331 = bitcast %"class.v8::internal::Handle"* %330 to i64*
  %332 = bitcast %"class.v8::internal::Handle"* %329 to i64*
  %333 = load i64, i64* %331, align 8
  store i64 %333, i64* %332, align 8
  %334 = getelementptr inbounds %"class.v8::internal::Handle", %"class.v8::internal::Handle"* %317, i64 -4
  %335 = getelementptr inbounds %"class.v8::internal::Handle", %"class.v8::internal::Handle"* %318, i64 -4
  %336 = bitcast %"class.v8::internal::Handle"* %335 to i64*
  %337 = bitcast %"class.v8::internal::Handle"* %334 to i64*
  %338 = load i64, i64* %336, align 8
  store i64 %338, i64* %337, align 8
  %339 = getelementptr inbounds %"class.v8::internal::Handle", %"class.v8::internal::Handle"* %317, i64 -5
  %340 = getelementptr inbounds %"class.v8::internal::Handle", %"class.v8::internal::Handle"* %318, i64 -5
  %341 = bitcast %"class.v8::internal::Handle"* %340 to i64*
  %342 = bitcast %"class.v8::internal::Handle"* %339 to i64*
  %343 = load i64, i64* %341, align 8
  store i64 %343, i64* %342, align 8
  %344 = getelementptr inbounds %"class.v8::internal::Handle", %"class.v8::internal::Handle"* %317, i64 -6
  %345 = getelementptr inbounds %"class.v8::internal::Handle", %"class.v8::internal::Handle"* %318, i64 -6
  %346 = bitcast %"class.v8::internal::Handle"* %345 to i64*
  %347 = bitcast %"class.v8::internal::Handle"* %344 to i64*
  %348 = load i64, i64* %346, align 8
  store i64 %348, i64* %347, align 8
  %349 = getelementptr inbounds %"class.v8::internal::Handle", %"class.v8::internal::Handle"* %317, i64 -7
  %350 = getelementptr inbounds %"class.v8::internal::Handle", %"class.v8::internal::Handle"* %318, i64 -7
  %351 = bitcast %"class.v8::internal::Handle"* %350 to i64*
  %352 = bitcast %"class.v8::internal::Handle"* %349 to i64*
  %353 = load i64, i64* %351, align 8
  store i64 %353, i64* %352, align 8
  %354 = getelementptr inbounds %"class.v8::internal::Handle", %"class.v8::internal::Handle"* %317, i64 -8
  %355 = getelementptr inbounds %"class.v8::internal::Handle", %"class.v8::internal::Handle"* %318, i64 -8
  %356 = bitcast %"class.v8::internal::Handle"* %355 to i64*
  %357 = bitcast %"class.v8::internal::Handle"* %354 to i64*
  %358 = load i64, i64* %356, align 8
  store i64 %358, i64* %357, align 8
  %359 = icmp eq %"class.v8::internal::Handle"* %355, %186
  br i1 %359, label %360, label %316, !llvm.loop !97

360:                                              ; preds = %311, %316, %288, %177
  %361 = phi %"class.v8::internal::Handle"* [ %180, %177 ], [ %214, %288 ], [ %312, %311 ], [ %354, %316 ]
  %362 = ptrtoint %"class.v8::internal::Handle"* %361 to i64
  store i64 %362, i64* %54, align 8
  store i64 %185, i64* %53, align 8
  store i64 %182, i64* %55, align 8
  br label %363

363:                                              ; preds = %138, %360
  %364 = phi %"class.v8::internal::Handle"* [ %140, %138 ], [ %184, %360 ]
  %365 = phi i64 [ %141, %138 ], [ %185, %360 ]
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %49) #8
  %366 = getelementptr inbounds %"class.v8::internal::Handle", %"class.v8::internal::Handle"* %72, i64 1
  %367 = icmp eq %"class.v8::internal::Handle"* %366, %68
  br i1 %367, label %368, label %70

368:                                              ; preds = %363, %58
  %369 = phi %"class.v8::internal::Handle"* [ %59, %58 ], [ %364, %363 ]
  %370 = phi %"class.v8::internal::Handle"* [ %60, %58 ], [ %364, %363 ]
  %371 = phi %"class.v8::internal::Handle"* [ %61, %58 ], [ %364, %363 ]
  %372 = phi i64 [ %62, %58 ], [ %365, %363 ]
  %373 = phi i8 [ %63, %58 ], [ %131, %363 ]
  %374 = getelementptr inbounds %"class.v8::internal::ZoneVector", %"class.v8::internal::ZoneVector"* %64, i64 1
  %375 = icmp eq %"class.v8::internal::ZoneVector"* %374, %46
  br i1 %375, label %378, label %58

376:                                              ; preds = %85, %127, %78
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %49) #8
  %377 = load %"class.v8::internal::Handle"*, %"class.v8::internal::Handle"** %57, align 8
  br label %547

378:                                              ; preds = %368
  %379 = bitcast %"class.v8::internal::Zone"** %56 to i64*
  %380 = load i64, i64* %379, align 8
  %381 = load i64, i64* %54, align 8
  %382 = inttoptr i64 %381 to %"class.v8::internal::Handle"*
  br label %383

383:                                              ; preds = %32, %378
  %384 = phi %"class.v8::internal::Handle"* [ %369, %378 ], [ null, %32 ]
  %385 = phi %"class.v8::internal::Handle"* [ %382, %378 ], [ null, %32 ]
  %386 = phi %"class.v8::internal::Handle"* [ %370, %378 ], [ null, %32 ]
  %387 = phi %"class.v8::internal::Handle"* [ %371, %378 ], [ null, %32 ]
  %388 = phi i64 [ %381, %378 ], [ 0, %32 ]
  %389 = phi i64 [ %372, %378 ], [ 0, %32 ]
  %390 = phi i64 [ %380, %378 ], [ %39, %32 ]
  %391 = phi i8 [ %373, %378 ], [ %35, %32 ]
  %392 = getelementptr inbounds %"class.v8::internal::compiler::ElementAccessInfo", %"class.v8::internal::compiler::ElementAccessInfo"* %7, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %392) #8
  %393 = load i64, i64* %38, align 8
  store i8 %391, i8* %392, align 8
  %394 = getelementptr inbounds %"class.v8::internal::compiler::ElementAccessInfo", %"class.v8::internal::compiler::ElementAccessInfo"* %7, i64 0, i32 1
  %395 = getelementptr inbounds %"class.v8::internal::compiler::ElementAccessInfo", %"class.v8::internal::compiler::ElementAccessInfo"* %7, i64 0, i32 1, i32 0, i32 0, i32 2, i32 1
  %396 = bitcast %"struct.std::__1::__compressed_pair_elem.0"* %395 to i64*
  %397 = bitcast %"class.v8::internal::ZoneVector"* %394 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %397, i8 0, i64 24, i1 false) #8
  store i64 %390, i64* %396, align 8
  %398 = getelementptr inbounds %"class.v8::internal::ZoneVector", %"class.v8::internal::ZoneVector"* %5, i64 0, i32 0, i32 0, i32 1
  %399 = sub i64 %389, %388
  %400 = ashr exact i64 %399, 3
  %401 = icmp eq i64 %399, 0
  %402 = inttoptr i64 %390 to %"class.v8::internal::Zone"*
  br i1 %401, label %518, label %403

403:                                              ; preds = %383
  %404 = icmp ugt i64 %400, 268435455
  br i1 %404, label %405, label %407

405:                                              ; preds = %403
  %406 = bitcast %"class.v8::internal::ZoneVector"* %394 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %406) #12
  unreachable

407:                                              ; preds = %403
  %408 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %402, i64 0, i32 2
  %409 = load i64, i64* %408, align 8
  %410 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %402, i64 0, i32 3
  %411 = load i64, i64* %410, align 8
  %412 = sub i64 %411, %409
  %413 = icmp ugt i64 %399, %412
  br i1 %413, label %414, label %419, !prof !2

414:                                              ; preds = %407
  %415 = call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %402, i64 %399) #8
  %416 = getelementptr inbounds %"class.v8::internal::ZoneVector", %"class.v8::internal::ZoneVector"* %5, i64 0, i32 0, i32 0, i32 0
  %417 = load %"class.v8::internal::Handle"*, %"class.v8::internal::Handle"** %416, align 8
  %418 = load %"class.v8::internal::Handle"*, %"class.v8::internal::Handle"** %398, align 8
  br label %421

419:                                              ; preds = %407
  %420 = add i64 %409, %399
  store i64 %420, i64* %408, align 8
  br label %421

421:                                              ; preds = %419, %414
  %422 = phi %"class.v8::internal::Handle"* [ %418, %414 ], [ %384, %419 ]
  %423 = phi %"class.v8::internal::Handle"* [ %417, %414 ], [ %385, %419 ]
  %424 = phi %"class.v8::internal::Handle"* [ %418, %414 ], [ %387, %419 ]
  %425 = phi i64 [ %415, %414 ], [ %409, %419 ]
  %426 = inttoptr i64 %425 to %"class.v8::internal::Handle"*
  %427 = getelementptr inbounds %"class.v8::internal::compiler::ElementAccessInfo", %"class.v8::internal::compiler::ElementAccessInfo"* %7, i64 0, i32 1, i32 0, i32 0, i32 1
  store %"class.v8::internal::Handle"* %426, %"class.v8::internal::Handle"** %427, align 8
  %428 = getelementptr inbounds %"class.v8::internal::ZoneVector", %"class.v8::internal::ZoneVector"* %394, i64 0, i32 0, i32 0, i32 0
  store %"class.v8::internal::Handle"* %426, %"class.v8::internal::Handle"** %428, align 8
  %429 = getelementptr inbounds %"class.v8::internal::Handle", %"class.v8::internal::Handle"* %426, i64 %400
  %430 = getelementptr inbounds %"class.v8::internal::compiler::ElementAccessInfo", %"class.v8::internal::compiler::ElementAccessInfo"* %7, i64 0, i32 1, i32 0, i32 0, i32 2, i32 0, i32 0
  store %"class.v8::internal::Handle"* %429, %"class.v8::internal::Handle"** %430, align 8
  %431 = getelementptr inbounds %"class.v8::internal::ZoneVector", %"class.v8::internal::ZoneVector"* %5, i64 0, i32 0, i32 0, i32 0
  %432 = bitcast %"class.v8::internal::Handle"** %427 to i64*
  %433 = icmp eq %"class.v8::internal::Handle"* %423, %424
  br i1 %433, label %514, label %434

434:                                              ; preds = %421
  %435 = ptrtoint %"class.v8::internal::Handle"* %423 to i64
  %436 = inttoptr i64 %425 to i64*
  %437 = getelementptr %"class.v8::internal::Handle", %"class.v8::internal::Handle"* %424, i64 -1, i32 0, i32 0
  %438 = ptrtoint i64** %437 to i64
  %439 = sub i64 %438, %435
  %440 = lshr i64 %439, 3
  %441 = add nuw nsw i64 %440, 1
  %442 = and i64 %441, 7
  %443 = icmp eq i64 %442, 0
  br i1 %443, label %458, label %444

444:                                              ; preds = %434, %444
  %445 = phi %"class.v8::internal::Handle"* [ %452, %444 ], [ %426, %434 ]
  %446 = phi i64* [ %453, %444 ], [ %436, %434 ]
  %447 = phi %"class.v8::internal::Handle"* [ %451, %444 ], [ %423, %434 ]
  %448 = phi i64 [ %454, %444 ], [ %442, %434 ]
  %449 = bitcast %"class.v8::internal::Handle"* %447 to i64*
  %450 = load i64, i64* %449, align 8
  store i64 %450, i64* %446, align 8
  %451 = getelementptr inbounds %"class.v8::internal::Handle", %"class.v8::internal::Handle"* %447, i64 1
  %452 = getelementptr inbounds %"class.v8::internal::Handle", %"class.v8::internal::Handle"* %445, i64 1
  %453 = bitcast %"class.v8::internal::Handle"* %452 to i64*
  %454 = add i64 %448, -1
  %455 = icmp eq i64 %454, 0
  br i1 %455, label %456, label %444, !llvm.loop !98

456:                                              ; preds = %444
  %457 = bitcast %"class.v8::internal::Handle"* %452 to i64*
  br label %458

458:                                              ; preds = %434, %456
  %459 = phi %"class.v8::internal::Handle"* [ undef, %434 ], [ %452, %456 ]
  %460 = phi %"class.v8::internal::Handle"* [ %426, %434 ], [ %452, %456 ]
  %461 = phi i64* [ %436, %434 ], [ %457, %456 ]
  %462 = phi %"class.v8::internal::Handle"* [ %423, %434 ], [ %451, %456 ]
  %463 = icmp ult i64 %439, 56
  br i1 %463, label %509, label %464

464:                                              ; preds = %458, %464
  %465 = phi %"class.v8::internal::Handle"* [ %506, %464 ], [ %460, %458 ]
  %466 = phi i64* [ %508, %464 ], [ %461, %458 ]
  %467 = phi %"class.v8::internal::Handle"* [ %505, %464 ], [ %462, %458 ]
  %468 = bitcast %"class.v8::internal::Handle"* %467 to i64*
  %469 = load i64, i64* %468, align 8
  store i64 %469, i64* %466, align 8
  %470 = getelementptr inbounds %"class.v8::internal::Handle", %"class.v8::internal::Handle"* %467, i64 1
  %471 = getelementptr inbounds %"class.v8::internal::Handle", %"class.v8::internal::Handle"* %465, i64 1
  %472 = bitcast %"class.v8::internal::Handle"* %471 to i64*
  %473 = bitcast %"class.v8::internal::Handle"* %470 to i64*
  %474 = load i64, i64* %473, align 8
  store i64 %474, i64* %472, align 8
  %475 = getelementptr inbounds %"class.v8::internal::Handle", %"class.v8::internal::Handle"* %467, i64 2
  %476 = getelementptr inbounds %"class.v8::internal::Handle", %"class.v8::internal::Handle"* %465, i64 2
  %477 = bitcast %"class.v8::internal::Handle"* %476 to i64*
  %478 = bitcast %"class.v8::internal::Handle"* %475 to i64*
  %479 = load i64, i64* %478, align 8
  store i64 %479, i64* %477, align 8
  %480 = getelementptr inbounds %"class.v8::internal::Handle", %"class.v8::internal::Handle"* %467, i64 3
  %481 = getelementptr inbounds %"class.v8::internal::Handle", %"class.v8::internal::Handle"* %465, i64 3
  %482 = bitcast %"class.v8::internal::Handle"* %481 to i64*
  %483 = bitcast %"class.v8::internal::Handle"* %480 to i64*
  %484 = load i64, i64* %483, align 8
  store i64 %484, i64* %482, align 8
  %485 = getelementptr inbounds %"class.v8::internal::Handle", %"class.v8::internal::Handle"* %467, i64 4
  %486 = getelementptr inbounds %"class.v8::internal::Handle", %"class.v8::internal::Handle"* %465, i64 4
  %487 = bitcast %"class.v8::internal::Handle"* %486 to i64*
  %488 = bitcast %"class.v8::internal::Handle"* %485 to i64*
  %489 = load i64, i64* %488, align 8
  store i64 %489, i64* %487, align 8
  %490 = getelementptr inbounds %"class.v8::internal::Handle", %"class.v8::internal::Handle"* %467, i64 5
  %491 = getelementptr inbounds %"class.v8::internal::Handle", %"class.v8::internal::Handle"* %465, i64 5
  %492 = bitcast %"class.v8::internal::Handle"* %491 to i64*
  %493 = bitcast %"class.v8::internal::Handle"* %490 to i64*
  %494 = load i64, i64* %493, align 8
  store i64 %494, i64* %492, align 8
  %495 = getelementptr inbounds %"class.v8::internal::Handle", %"class.v8::internal::Handle"* %467, i64 6
  %496 = getelementptr inbounds %"class.v8::internal::Handle", %"class.v8::internal::Handle"* %465, i64 6
  %497 = bitcast %"class.v8::internal::Handle"* %496 to i64*
  %498 = bitcast %"class.v8::internal::Handle"* %495 to i64*
  %499 = load i64, i64* %498, align 8
  store i64 %499, i64* %497, align 8
  %500 = getelementptr inbounds %"class.v8::internal::Handle", %"class.v8::internal::Handle"* %467, i64 7
  %501 = getelementptr inbounds %"class.v8::internal::Handle", %"class.v8::internal::Handle"* %465, i64 7
  %502 = bitcast %"class.v8::internal::Handle"* %501 to i64*
  %503 = bitcast %"class.v8::internal::Handle"* %500 to i64*
  %504 = load i64, i64* %503, align 8
  store i64 %504, i64* %502, align 8
  %505 = getelementptr inbounds %"class.v8::internal::Handle", %"class.v8::internal::Handle"* %467, i64 8
  %506 = getelementptr inbounds %"class.v8::internal::Handle", %"class.v8::internal::Handle"* %465, i64 8
  %507 = icmp eq %"class.v8::internal::Handle"* %505, %424
  %508 = bitcast %"class.v8::internal::Handle"* %506 to i64*
  br i1 %507, label %509, label %464

509:                                              ; preds = %464, %458
  %510 = phi %"class.v8::internal::Handle"* [ %459, %458 ], [ %506, %464 ]
  %511 = ptrtoint %"class.v8::internal::Handle"* %510 to i64
  %512 = load %"class.v8::internal::Handle"*, %"class.v8::internal::Handle"** %431, align 8
  %513 = load %"class.v8::internal::Handle"*, %"class.v8::internal::Handle"** %398, align 8
  br label %514

514:                                              ; preds = %509, %421
  %515 = phi %"class.v8::internal::Handle"* [ %422, %421 ], [ %513, %509 ]
  %516 = phi %"class.v8::internal::Handle"* [ %423, %421 ], [ %512, %509 ]
  %517 = phi i64 [ %425, %421 ], [ %511, %509 ]
  store i64 %517, i64* %432, align 8
  br label %518

518:                                              ; preds = %514, %383
  %519 = phi %"class.v8::internal::Handle"* [ %516, %514 ], [ %385, %383 ]
  %520 = phi i64 [ %517, %514 ], [ 0, %383 ]
  %521 = phi %"class.v8::internal::Handle"* [ %515, %514 ], [ %386, %383 ]
  %522 = getelementptr inbounds %"class.v8::internal::compiler::ElementAccessInfo", %"class.v8::internal::compiler::ElementAccessInfo"* %7, i64 0, i32 2
  %523 = getelementptr inbounds %"class.v8::internal::compiler::ElementAccessInfo", %"class.v8::internal::compiler::ElementAccessInfo"* %7, i64 0, i32 2, i32 0, i32 0, i32 2, i32 1
  %524 = bitcast %"struct.std::__1::__compressed_pair_elem.0"* %523 to i64*
  %525 = bitcast %"class.v8::internal::ZoneVector"* %522 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %525, i8 0, i64 24, i1 false) #8
  store i64 %393, i64* %524, align 8
  %526 = icmp eq %"class.v8::internal::Handle"* %519, %521
  br i1 %526, label %527, label %528, !prof !2

527:                                              ; preds = %518
  call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.5, i64 0, i64 0), i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.6, i64 0, i64 0)) #12
  unreachable

528:                                              ; preds = %518
  %529 = getelementptr inbounds %"class.v8::base::Optional.1265", %"class.v8::base::Optional.1265"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  store i8 1, i8* %529, align 8
  %530 = getelementptr inbounds %"class.v8::base::Optional.1265", %"class.v8::base::Optional.1265"* %0, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %531 = load i8, i8* %392, align 8
  store i8 %531, i8* %530, align 8
  %532 = getelementptr inbounds %"class.v8::base::Optional.1265", %"class.v8::base::Optional.1265"* %0, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 1
  %533 = bitcast %"class.v8::internal::ZoneVector"* %394 to i64*
  %534 = load i64, i64* %533, align 8
  %535 = bitcast %"class.v8::internal::ZoneVector"* %532 to i64*
  store i64 %534, i64* %535, align 8
  %536 = getelementptr inbounds %"class.v8::base::Optional.1265", %"class.v8::base::Optional.1265"* %0, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 1, i32 0, i32 0, i32 1
  %537 = bitcast %"class.v8::internal::Handle"** %536 to i64*
  store i64 %520, i64* %537, align 8
  %538 = getelementptr inbounds %"class.v8::internal::compiler::ElementAccessInfo", %"class.v8::internal::compiler::ElementAccessInfo"* %7, i64 0, i32 1, i32 0, i32 0, i32 2, i32 0, i32 0
  %539 = bitcast %"class.v8::internal::Handle"** %538 to <2 x i64>*
  %540 = load <2 x i64>, <2 x i64>* %539, align 8
  %541 = getelementptr inbounds %"class.v8::base::Optional.1265", %"class.v8::base::Optional.1265"* %0, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 1, i32 0, i32 0, i32 2, i32 0, i32 0
  %542 = bitcast %"class.v8::internal::Handle"** %541 to <2 x i64>*
  store <2 x i64> %540, <2 x i64>* %542, align 8
  %543 = getelementptr inbounds %"class.v8::base::Optional.1265", %"class.v8::base::Optional.1265"* %0, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 2
  %544 = getelementptr inbounds %"class.v8::base::Optional.1265", %"class.v8::base::Optional.1265"* %0, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 2, i32 0, i32 0, i32 2, i32 1
  %545 = bitcast %"struct.std::__1::__compressed_pair_elem.0"* %544 to i64*
  store i64 %393, i64* %545, align 8
  %546 = bitcast %"class.v8::internal::ZoneVector"* %543 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %546, i8 0, i64 24, i1 false)
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %392) #8
  br label %547

547:                                              ; preds = %376, %528
  %548 = phi %"class.v8::internal::Handle"* [ %377, %376 ], [ %519, %528 ]
  %549 = icmp eq %"class.v8::internal::Handle"* %548, null
  br i1 %549, label %554, label %550

550:                                              ; preds = %547
  %551 = ptrtoint %"class.v8::internal::Handle"* %548 to i64
  %552 = getelementptr inbounds %"class.v8::internal::ZoneVector", %"class.v8::internal::ZoneVector"* %5, i64 0, i32 0, i32 0, i32 1
  %553 = bitcast %"class.v8::internal::Handle"** %552 to i64*
  store i64 %551, i64* %553, align 8
  br label %554

554:                                              ; preds = %547, %550
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %36) #8
  br label %555

555:                                              ; preds = %554, %30
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %25) #8
  br label %556

556:                                              ; preds = %555, %14
  ret void
}

declare dereferenceable(32) %"class.v8::internal::ZoneVector.1275"* @_ZNK2v88internal8compiler21ElementAccessFeedback17transition_groupsEv(%"class.v8::internal::compiler::ElementAccessFeedback"*) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK2v88internal8compiler17AccessInfoFactory26ComputeDataFieldAccessInfoENS0_6HandleINS0_3MapEEES5_NS0_11MaybeHandleINS0_8JSObjectEEENS0_13InternalIndexENS1_10AccessModeE(%"class.v8::internal::compiler::PropertyAccessInfo"* noalias sret, %"class.v8::internal::compiler::AccessInfoFactory"* readonly, i64*, i64*, i64*, i64, i32) local_unnamed_addr #0 align 2 {
  %8 = alloca %"class.v8::internal::Representation", align 1
  %9 = alloca %"class.v8::base::Optional.1270", align 8
  %10 = alloca %"class.v8::internal::ZoneVector.22", align 8
  %11 = alloca %"class.v8::internal::Handle<v8::internal::FieldType>::ObjectRef", align 8
  %12 = alloca %"class.v8::internal::Handle<v8::internal::FieldType>::ObjectRef", align 8
  %13 = alloca %"class.v8::base::Optional.1270", align 8
  %14 = alloca %"class.v8::internal::Handle<v8::internal::Map>::ObjectRef", align 8
  %15 = getelementptr inbounds %"class.v8::internal::compiler::AccessInfoFactory", %"class.v8::internal::compiler::AccessInfoFactory"* %1, i64 0, i32 0
  %16 = load %"class.v8::internal::compiler::JSHeapBroker"*, %"class.v8::internal::compiler::JSHeapBroker"** %15, align 8
  %17 = load i64, i64* %3, align 8
  %18 = and i64 %17, -4294967296
  %19 = add i64 %17, 23
  %20 = inttoptr i64 %19 to i32*
  %21 = load atomic i32, i32* %20 acquire, align 4
  %22 = zext i32 %21 to i64
  %23 = or i64 %18, %22
  %24 = tail call i64* @_ZN2v88internal8compiler12JSHeapBroker25CanonicalPersistentHandleINS0_15DescriptorArrayEEENS0_6HandleIT_EES6_(%"class.v8::internal::compiler::JSHeapBroker"* %16, i64 %23)
  %25 = load i64, i64* %24, align 8
  %26 = mul i64 %5, 51539607552
  %27 = add i64 %26, 68719476736
  %28 = ashr exact i64 %27, 32
  %29 = or i64 %28, 3
  %30 = add i64 %25, %29
  %31 = inttoptr i64 %30 to i32*
  %32 = load atomic i32, i32* %31 monotonic, align 4
  %33 = lshr i32 %32, 7
  %34 = load atomic i32, i32* %31 monotonic, align 4
  %35 = lshr i32 %34, 20
  %36 = and i32 %35, 1023
  %37 = trunc i32 %33 to i8
  %38 = and i8 %37, 7
  %39 = icmp eq i8 %38, 0
  br i1 %39, label %40, label %60

40:                                               ; preds = %7
  %41 = getelementptr inbounds %"class.v8::internal::compiler::AccessInfoFactory", %"class.v8::internal::compiler::AccessInfoFactory"* %1, i64 0, i32 3
  %42 = bitcast %"class.v8::internal::Zone"** %41 to i64*
  %43 = load i64, i64* %42, align 8, !noalias !99
  %44 = getelementptr inbounds %"class.v8::internal::compiler::PropertyAccessInfo", %"class.v8::internal::compiler::PropertyAccessInfo"* %0, i64 0, i32 0
  store i32 0, i32* %44, align 8, !alias.scope !102
  %45 = getelementptr inbounds %"class.v8::internal::compiler::PropertyAccessInfo", %"class.v8::internal::compiler::PropertyAccessInfo"* %0, i64 0, i32 1
  %46 = getelementptr inbounds %"class.v8::internal::compiler::PropertyAccessInfo", %"class.v8::internal::compiler::PropertyAccessInfo"* %0, i64 0, i32 1, i32 0, i32 0, i32 2, i32 1
  %47 = bitcast %"struct.std::__1::__compressed_pair_elem.0"* %46 to i64*
  %48 = bitcast %"class.v8::internal::ZoneVector"* %45 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %48, i8 0, i64 24, i1 false) #8, !alias.scope !102
  store i64 %43, i64* %47, align 8, !alias.scope !102
  %49 = getelementptr inbounds %"class.v8::internal::compiler::PropertyAccessInfo", %"class.v8::internal::compiler::PropertyAccessInfo"* %0, i64 0, i32 2, i32 0, i32 0
  %50 = getelementptr inbounds %"class.v8::internal::compiler::PropertyAccessInfo", %"class.v8::internal::compiler::PropertyAccessInfo"* %0, i64 0, i32 4, i32 0, i32 0, i32 2, i32 1
  %51 = bitcast %"struct.std::__1::__compressed_pair_elem.27"* %50 to i64*
  %52 = bitcast i64** %49 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %52, i8 0, i64 40, i1 false) #8, !alias.scope !102
  store i64 %43, i64* %51, align 8, !alias.scope !102
  %53 = getelementptr inbounds %"class.v8::internal::compiler::PropertyAccessInfo", %"class.v8::internal::compiler::PropertyAccessInfo"* %0, i64 0, i32 5, i32 0
  %54 = getelementptr inbounds %"class.v8::internal::compiler::PropertyAccessInfo", %"class.v8::internal::compiler::PropertyAccessInfo"* %0, i64 0, i32 8, i32 0
  %55 = bitcast i64** %53 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %55, i8 0, i64 17, i1 false) #8, !alias.scope !102
  store i64 1, i64* %54, align 8, !alias.scope !102
  %56 = getelementptr inbounds %"class.v8::internal::compiler::PropertyAccessInfo", %"class.v8::internal::compiler::PropertyAccessInfo"* %0, i64 0, i32 9, i32 0
  %57 = getelementptr inbounds %"class.v8::internal::compiler::PropertyAccessInfo", %"class.v8::internal::compiler::PropertyAccessInfo"* %0, i64 0, i32 11, i32 0
  %58 = bitcast i64** %56 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %58, i8 0, i64 16, i1 false) #8, !alias.scope !102
  store i64 -1, i64* %57, align 8, !alias.scope !102
  %59 = getelementptr inbounds %"class.v8::internal::compiler::PropertyAccessInfo", %"class.v8::internal::compiler::PropertyAccessInfo"* %0, i64 0, i32 12, i32 0
  store i64* null, i64** %59, align 8, !alias.scope !102
  br label %1261

60:                                               ; preds = %7
  %61 = load i64, i64* %3, align 8
  %62 = add i64 %61, 3
  %63 = inttoptr i64 %62 to i8*
  %64 = load atomic i8, i8* %63 monotonic, align 1
  %65 = zext i8 %64 to i32
  %66 = add i64 %61, 4
  %67 = inttoptr i64 %66 to i8*
  %68 = load atomic i8, i8* %67 monotonic, align 1
  %69 = zext i8 %68 to i32
  %70 = sub nsw i32 %65, %69
  %71 = icmp slt i32 %36, %70
  br i1 %71, label %72, label %80

72:                                               ; preds = %60
  %73 = load atomic i8, i8* %67 monotonic, align 1
  %74 = zext i8 %73 to i64
  %75 = shl nuw nsw i64 %74, 28
  %76 = load atomic i8, i8* %67 monotonic, align 1
  %77 = zext i8 %76 to i32
  %78 = add nuw nsw i32 %36, %77
  %79 = shl nuw nsw i32 %78, 2
  br label %84

80:                                               ; preds = %60
  %81 = sub nsw i32 %36, %70
  %82 = shl nsw i32 %81, 2
  %83 = add nsw i32 %82, 8
  br label %84

84:                                               ; preds = %80, %72
  %85 = phi i32 [ %79, %72 ], [ %83, %80 ]
  %86 = phi i64 [ %75, %72 ], [ 536870912, %80 ]
  %87 = getelementptr inbounds %"class.v8::internal::Representation", %"class.v8::internal::Representation"* %8, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %87) #8
  store i8 %38, i8* %87, align 1
  %88 = icmp ult i8 %38, 5
  br i1 %88, label %91, label %89

89:                                               ; preds = %84
  %90 = call i8* @_ZNK2v88internal14Representation8MnemonicEv(%"class.v8::internal::Representation"* nonnull %8) #8
  call void (i8*, ...) @_ZN2v88internal6PrintFEPKcz(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.14, i64 0, i64 0), i8* %90) #8
  call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.4, i64 0, i64 0)) #12
  unreachable

91:                                               ; preds = %84
  %92 = zext i8 %38 to i64
  %93 = getelementptr inbounds [5 x i64], [5 x i64]* @switch.table._ZNK2v88internal8compiler17AccessInfoFactory16LookupTransitionENS0_6HandleINS0_3MapEEENS3_INS0_4NameEEENS0_11MaybeHandleINS0_8JSObjectEEE, i64 0, i64 %92
  %94 = load i64, i64* %93, align 8
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %87) #8
  %95 = zext i1 %71 to i64
  %96 = shl nuw nsw i64 %95, 13
  %97 = sext i32 %85 to i64
  %98 = sext i32 %70 to i64
  %99 = shl nsw i64 %98, 16
  %100 = or i64 %96, %99
  %101 = or i64 %100, %97
  %102 = or i64 %101, %86
  %103 = or i64 %102, %94
  %104 = getelementptr inbounds %"class.v8::base::Optional.1270", %"class.v8::base::Optional.1270"* %9, i64 0, i32 0, i32 0, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %104) #8
  %105 = load %"class.v8::internal::compiler::JSHeapBroker"*, %"class.v8::internal::compiler::JSHeapBroker"** %15, align 8
  call void @_ZN2v88internal8compiler10TryMakeRefINS0_3MapEvEENS_4base8OptionalINS1_10ref_traitsIT_E8ref_typeEEEPNS1_12JSHeapBrokerENS0_6HandleIS7_EENS4_5FlagsINS1_19GetOrCreateDataFlagEiEE(%"class.v8::base::Optional.1270"* nonnull sret %9, %"class.v8::internal::compiler::JSHeapBroker"* %105, i64* %3, i32 0)
  %106 = load i8, i8* %104, align 8, !range !80
  %107 = icmp eq i8 %106, 0
  br i1 %107, label %108, label %128

108:                                              ; preds = %91
  %109 = getelementptr inbounds %"class.v8::internal::compiler::AccessInfoFactory", %"class.v8::internal::compiler::AccessInfoFactory"* %1, i64 0, i32 3
  %110 = bitcast %"class.v8::internal::Zone"** %109 to i64*
  %111 = load i64, i64* %110, align 8, !noalias !105
  %112 = getelementptr inbounds %"class.v8::internal::compiler::PropertyAccessInfo", %"class.v8::internal::compiler::PropertyAccessInfo"* %0, i64 0, i32 0
  store i32 0, i32* %112, align 8, !alias.scope !108
  %113 = getelementptr inbounds %"class.v8::internal::compiler::PropertyAccessInfo", %"class.v8::internal::compiler::PropertyAccessInfo"* %0, i64 0, i32 1
  %114 = getelementptr inbounds %"class.v8::internal::compiler::PropertyAccessInfo", %"class.v8::internal::compiler::PropertyAccessInfo"* %0, i64 0, i32 1, i32 0, i32 0, i32 2, i32 1
  %115 = bitcast %"struct.std::__1::__compressed_pair_elem.0"* %114 to i64*
  %116 = bitcast %"class.v8::internal::ZoneVector"* %113 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %116, i8 0, i64 24, i1 false) #8, !alias.scope !108
  store i64 %111, i64* %115, align 8, !alias.scope !108
  %117 = getelementptr inbounds %"class.v8::internal::compiler::PropertyAccessInfo", %"class.v8::internal::compiler::PropertyAccessInfo"* %0, i64 0, i32 2, i32 0, i32 0
  %118 = getelementptr inbounds %"class.v8::internal::compiler::PropertyAccessInfo", %"class.v8::internal::compiler::PropertyAccessInfo"* %0, i64 0, i32 4, i32 0, i32 0, i32 2, i32 1
  %119 = bitcast %"struct.std::__1::__compressed_pair_elem.27"* %118 to i64*
  %120 = bitcast i64** %117 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %120, i8 0, i64 40, i1 false) #8, !alias.scope !108
  store i64 %111, i64* %119, align 8, !alias.scope !108
  %121 = getelementptr inbounds %"class.v8::internal::compiler::PropertyAccessInfo", %"class.v8::internal::compiler::PropertyAccessInfo"* %0, i64 0, i32 5, i32 0
  %122 = getelementptr inbounds %"class.v8::internal::compiler::PropertyAccessInfo", %"class.v8::internal::compiler::PropertyAccessInfo"* %0, i64 0, i32 8, i32 0
  %123 = bitcast i64** %121 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %123, i8 0, i64 17, i1 false) #8, !alias.scope !108
  store i64 1, i64* %122, align 8, !alias.scope !108
  %124 = getelementptr inbounds %"class.v8::internal::compiler::PropertyAccessInfo", %"class.v8::internal::compiler::PropertyAccessInfo"* %0, i64 0, i32 9, i32 0
  %125 = getelementptr inbounds %"class.v8::internal::compiler::PropertyAccessInfo", %"class.v8::internal::compiler::PropertyAccessInfo"* %0, i64 0, i32 11, i32 0
  %126 = bitcast i64** %124 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %126, i8 0, i64 16, i1 false) #8, !alias.scope !108
  store i64 -1, i64* %125, align 8, !alias.scope !108
  %127 = getelementptr inbounds %"class.v8::internal::compiler::PropertyAccessInfo", %"class.v8::internal::compiler::PropertyAccessInfo"* %0, i64 0, i32 12, i32 0
  store i64* null, i64** %127, align 8, !alias.scope !108
  br label %1260

128:                                              ; preds = %91
  %129 = bitcast %"class.v8::internal::ZoneVector.22"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %129) #8
  %130 = getelementptr inbounds %"class.v8::internal::compiler::AccessInfoFactory", %"class.v8::internal::compiler::AccessInfoFactory"* %1, i64 0, i32 3
  %131 = bitcast %"class.v8::internal::Zone"** %130 to i64*
  %132 = load i64, i64* %131, align 8
  %133 = getelementptr inbounds %"class.v8::internal::ZoneVector.22", %"class.v8::internal::ZoneVector.22"* %10, i64 0, i32 0, i32 0, i32 2, i32 1
  %134 = bitcast %"struct.std::__1::__compressed_pair_elem.27"* %133 to i64*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %129, i8 0, i64 24, i1 false) #8
  store i64 %132, i64* %134, align 8
  %135 = getelementptr inbounds %"class.v8::base::Optional.1270", %"class.v8::base::Optional.1270"* %9, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  %136 = call zeroext i1 @_ZN2v88internal8compiler6MapRef25TrySerializeOwnDescriptorENS0_13InternalIndexE(%"class.v8::internal::compiler::MapRef"* %135, i64 %5) #8
  br i1 %136, label %155, label %137

137:                                              ; preds = %128
  %138 = load i64, i64* %131, align 8, !noalias !111
  %139 = getelementptr inbounds %"class.v8::internal::compiler::PropertyAccessInfo", %"class.v8::internal::compiler::PropertyAccessInfo"* %0, i64 0, i32 0
  store i32 0, i32* %139, align 8, !alias.scope !114
  %140 = getelementptr inbounds %"class.v8::internal::compiler::PropertyAccessInfo", %"class.v8::internal::compiler::PropertyAccessInfo"* %0, i64 0, i32 1
  %141 = getelementptr inbounds %"class.v8::internal::compiler::PropertyAccessInfo", %"class.v8::internal::compiler::PropertyAccessInfo"* %0, i64 0, i32 1, i32 0, i32 0, i32 2, i32 1
  %142 = bitcast %"struct.std::__1::__compressed_pair_elem.0"* %141 to i64*
  %143 = bitcast %"class.v8::internal::ZoneVector"* %140 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %143, i8 0, i64 24, i1 false) #8, !alias.scope !114
  store i64 %138, i64* %142, align 8, !alias.scope !114
  %144 = getelementptr inbounds %"class.v8::internal::compiler::PropertyAccessInfo", %"class.v8::internal::compiler::PropertyAccessInfo"* %0, i64 0, i32 2, i32 0, i32 0
  %145 = getelementptr inbounds %"class.v8::internal::compiler::PropertyAccessInfo", %"class.v8::internal::compiler::PropertyAccessInfo"* %0, i64 0, i32 4, i32 0, i32 0, i32 2, i32 1
  %146 = bitcast %"struct.std::__1::__compressed_pair_elem.27"* %145 to i64*
  %147 = bitcast i64** %144 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %147, i8 0, i64 40, i1 false) #8, !alias.scope !114
  store i64 %138, i64* %146, align 8, !alias.scope !114
  %148 = getelementptr inbounds %"class.v8::internal::compiler::PropertyAccessInfo", %"class.v8::internal::compiler::PropertyAccessInfo"* %0, i64 0, i32 5, i32 0
  %149 = getelementptr inbounds %"class.v8::internal::compiler::PropertyAccessInfo", %"class.v8::internal::compiler::PropertyAccessInfo"* %0, i64 0, i32 8, i32 0
  %150 = bitcast i64** %148 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %150, i8 0, i64 17, i1 false) #8, !alias.scope !114
  store i64 1, i64* %149, align 8, !alias.scope !114
  %151 = getelementptr inbounds %"class.v8::internal::compiler::PropertyAccessInfo", %"class.v8::internal::compiler::PropertyAccessInfo"* %0, i64 0, i32 9, i32 0
  %152 = getelementptr inbounds %"class.v8::internal::compiler::PropertyAccessInfo", %"class.v8::internal::compiler::PropertyAccessInfo"* %0, i64 0, i32 11, i32 0
  %153 = bitcast i64** %151 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %153, i8 0, i64 16, i1 false) #8, !alias.scope !114
  store i64 -1, i64* %152, align 8, !alias.scope !114
  %154 = getelementptr inbounds %"class.v8::internal::compiler::PropertyAccessInfo", %"class.v8::internal::compiler::PropertyAccessInfo"* %0, i64 0, i32 12, i32 0
  store i64* null, i64** %154, align 8, !alias.scope !114
  br label %1251

155:                                              ; preds = %128
  switch i8 %38, label %966 [
    i8 1, label %156
    i8 2, label %400
    i8 3, label %645
    i8 4, label %967
  ], !prof !117

156:                                              ; preds = %155
  %157 = call i32 @_ZN2v88internal8compiler10BitsetType11SignedSmallEv() #8
  %158 = or i32 %157, 1
  %159 = zext i32 %158 to i64
  %160 = getelementptr inbounds %"class.v8::internal::compiler::AccessInfoFactory", %"class.v8::internal::compiler::AccessInfoFactory"* %1, i64 0, i32 1
  %161 = load %"class.v8::internal::compiler::CompilationDependencies"*, %"class.v8::internal::compiler::CompilationDependencies"** %160, align 8
  %162 = call %"class.v8::internal::compiler::CompilationDependency"* @_ZNK2v88internal8compiler23CompilationDependencies41FieldRepresentationDependencyOffTheRecordERKNS1_6MapRefENS0_13InternalIndexE(%"class.v8::internal::compiler::CompilationDependencies"* %161, %"class.v8::internal::compiler::MapRef"* dereferenceable(16) %135, i64 %5) #8
  %163 = ptrtoint %"class.v8::internal::compiler::CompilationDependency"* %162 to i64
  %164 = getelementptr inbounds %"class.v8::internal::ZoneVector.22", %"class.v8::internal::ZoneVector.22"* %10, i64 0, i32 0, i32 0, i32 1
  %165 = load %"class.v8::internal::compiler::CompilationDependency"**, %"class.v8::internal::compiler::CompilationDependency"*** %164, align 8
  %166 = getelementptr inbounds %"class.v8::internal::ZoneVector.22", %"class.v8::internal::ZoneVector.22"* %10, i64 0, i32 0, i32 0, i32 2, i32 0, i32 0
  %167 = load %"class.v8::internal::compiler::CompilationDependency"**, %"class.v8::internal::compiler::CompilationDependency"*** %166, align 8
  %168 = icmp ult %"class.v8::internal::compiler::CompilationDependency"** %165, %167
  %169 = ptrtoint %"class.v8::internal::compiler::CompilationDependency"** %167 to i64
  br i1 %168, label %170, label %175

170:                                              ; preds = %156
  %171 = bitcast %"class.v8::internal::compiler::CompilationDependency"** %165 to i64*
  store i64 %163, i64* %171, align 8
  %172 = getelementptr inbounds %"class.v8::internal::compiler::CompilationDependency"*, %"class.v8::internal::compiler::CompilationDependency"** %165, i64 1
  %173 = ptrtoint %"class.v8::internal::compiler::CompilationDependency"** %172 to i64
  %174 = bitcast %"class.v8::internal::compiler::CompilationDependency"*** %164 to i64*
  store i64 %173, i64* %174, align 8
  br label %967

175:                                              ; preds = %156
  %176 = ptrtoint %"class.v8::internal::compiler::CompilationDependency"** %165 to i64
  %177 = bitcast %"class.v8::internal::compiler::CompilationDependency"*** %164 to i64*
  %178 = bitcast %"class.v8::internal::ZoneVector.22"* %10 to i64*
  %179 = load i64, i64* %178, align 8
  %180 = sub i64 %176, %179
  %181 = ashr exact i64 %180, 3
  %182 = add nsw i64 %181, 1
  %183 = icmp ugt i64 %182, 268435455
  br i1 %183, label %184, label %186

184:                                              ; preds = %175
  %185 = bitcast %"class.v8::internal::ZoneVector.22"* %10 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %185) #12
  unreachable

186:                                              ; preds = %175
  %187 = bitcast %"class.v8::internal::compiler::CompilationDependency"*** %166 to i64*
  %188 = sub i64 %169, %179
  %189 = ashr exact i64 %188, 3
  %190 = icmp ult i64 %189, 134217727
  br i1 %190, label %191, label %196

191:                                              ; preds = %186
  %192 = ashr exact i64 %188, 2
  %193 = icmp ult i64 %192, %182
  %194 = select i1 %193, i64 %182, i64 %192
  %195 = icmp eq i64 %194, 0
  br i1 %195, label %214, label %196

196:                                              ; preds = %191, %186
  %197 = phi i64 [ %194, %191 ], [ 268435455, %186 ]
  %198 = getelementptr inbounds %"class.v8::internal::ZoneVector.22", %"class.v8::internal::ZoneVector.22"* %10, i64 0, i32 0, i32 0, i32 2, i32 1, i32 0, i32 0
  %199 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %198, align 8
  %200 = shl i64 %197, 3
  %201 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %199, i64 0, i32 2
  %202 = load i64, i64* %201, align 8
  %203 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %199, i64 0, i32 3
  %204 = load i64, i64* %203, align 8
  %205 = sub i64 %204, %202
  %206 = icmp ugt i64 %200, %205
  br i1 %206, label %207, label %209, !prof !2

207:                                              ; preds = %196
  %208 = call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %199, i64 %200) #8
  br label %211

209:                                              ; preds = %196
  %210 = add i64 %202, %200
  store i64 %210, i64* %201, align 8
  br label %211

211:                                              ; preds = %209, %207
  %212 = phi i64 [ %208, %207 ], [ %202, %209 ]
  %213 = inttoptr i64 %212 to %"class.v8::internal::compiler::CompilationDependency"**
  br label %214

214:                                              ; preds = %211, %191
  %215 = phi i64 [ %197, %211 ], [ 0, %191 ]
  %216 = phi %"class.v8::internal::compiler::CompilationDependency"** [ %213, %211 ], [ null, %191 ]
  %217 = getelementptr inbounds %"class.v8::internal::compiler::CompilationDependency"*, %"class.v8::internal::compiler::CompilationDependency"** %216, i64 %181
  %218 = getelementptr inbounds %"class.v8::internal::compiler::CompilationDependency"*, %"class.v8::internal::compiler::CompilationDependency"** %216, i64 %215
  %219 = ptrtoint %"class.v8::internal::compiler::CompilationDependency"** %218 to i64
  %220 = bitcast %"class.v8::internal::compiler::CompilationDependency"** %217 to i64*
  store i64 %163, i64* %220, align 8
  %221 = getelementptr inbounds %"class.v8::internal::compiler::CompilationDependency"*, %"class.v8::internal::compiler::CompilationDependency"** %217, i64 1
  %222 = ptrtoint %"class.v8::internal::compiler::CompilationDependency"** %221 to i64
  %223 = getelementptr inbounds %"class.v8::internal::ZoneVector.22", %"class.v8::internal::ZoneVector.22"* %10, i64 0, i32 0, i32 0, i32 0
  %224 = load %"class.v8::internal::compiler::CompilationDependency"**, %"class.v8::internal::compiler::CompilationDependency"*** %223, align 8
  %225 = ptrtoint %"class.v8::internal::compiler::CompilationDependency"** %224 to i64
  %226 = load %"class.v8::internal::compiler::CompilationDependency"**, %"class.v8::internal::compiler::CompilationDependency"*** %164, align 8
  %227 = icmp eq %"class.v8::internal::compiler::CompilationDependency"** %226, %224
  br i1 %227, label %397, label %228

228:                                              ; preds = %214
  %229 = getelementptr %"class.v8::internal::compiler::CompilationDependency"*, %"class.v8::internal::compiler::CompilationDependency"** %226, i64 -1
  %230 = ptrtoint %"class.v8::internal::compiler::CompilationDependency"** %229 to i64
  %231 = sub i64 %230, %225
  %232 = lshr i64 %231, 3
  %233 = add nuw nsw i64 %232, 1
  %234 = icmp ult i64 %233, 4
  br i1 %234, label %327, label %235

235:                                              ; preds = %228
  %236 = getelementptr %"class.v8::internal::compiler::CompilationDependency"*, %"class.v8::internal::compiler::CompilationDependency"** %226, i64 -1
  %237 = ptrtoint %"class.v8::internal::compiler::CompilationDependency"** %236 to i64
  %238 = sub i64 %237, %225
  %239 = lshr i64 %238, 3
  %240 = xor i64 %239, -1
  %241 = add nsw i64 %181, %240
  %242 = getelementptr %"class.v8::internal::compiler::CompilationDependency"*, %"class.v8::internal::compiler::CompilationDependency"** %216, i64 %241
  %243 = xor i64 %239, -1
  %244 = getelementptr %"class.v8::internal::compiler::CompilationDependency"*, %"class.v8::internal::compiler::CompilationDependency"** %226, i64 %243
  %245 = icmp ult %"class.v8::internal::compiler::CompilationDependency"** %242, %226
  %246 = icmp ult %"class.v8::internal::compiler::CompilationDependency"** %244, %217
  %247 = and i1 %245, %246
  br i1 %247, label %327, label %248

248:                                              ; preds = %235
  %249 = and i64 %233, 4611686018427387900
  %250 = sub nsw i64 0, %249
  %251 = getelementptr %"class.v8::internal::compiler::CompilationDependency"*, %"class.v8::internal::compiler::CompilationDependency"** %217, i64 %250
  %252 = sub nsw i64 0, %249
  %253 = getelementptr %"class.v8::internal::compiler::CompilationDependency"*, %"class.v8::internal::compiler::CompilationDependency"** %226, i64 %252
  %254 = add nsw i64 %249, -4
  %255 = lshr exact i64 %254, 2
  %256 = add nuw nsw i64 %255, 1
  %257 = and i64 %256, 1
  %258 = icmp eq i64 %254, 0
  br i1 %258, label %303, label %259

259:                                              ; preds = %248
  %260 = sub nuw nsw i64 %256, %257
  %261 = getelementptr %"class.v8::internal::compiler::CompilationDependency"*, %"class.v8::internal::compiler::CompilationDependency"** %217, i64 -1
  %262 = getelementptr %"class.v8::internal::compiler::CompilationDependency"*, %"class.v8::internal::compiler::CompilationDependency"** %226, i64 -1
  %263 = getelementptr %"class.v8::internal::compiler::CompilationDependency"*, %"class.v8::internal::compiler::CompilationDependency"** %217, i64 -1
  %264 = getelementptr %"class.v8::internal::compiler::CompilationDependency"*, %"class.v8::internal::compiler::CompilationDependency"** %226, i64 -1
  br label %265

265:                                              ; preds = %265, %259
  %266 = phi i64 [ 0, %259 ], [ %300, %265 ]
  %267 = phi i64 [ %260, %259 ], [ %301, %265 ]
  %268 = sub i64 0, %266
  %269 = sub i64 0, %266
  %270 = getelementptr inbounds %"class.v8::internal::compiler::CompilationDependency"*, %"class.v8::internal::compiler::CompilationDependency"** %261, i64 %268
  %271 = getelementptr inbounds %"class.v8::internal::compiler::CompilationDependency"*, %"class.v8::internal::compiler::CompilationDependency"** %262, i64 %269
  %272 = getelementptr inbounds %"class.v8::internal::compiler::CompilationDependency"*, %"class.v8::internal::compiler::CompilationDependency"** %271, i64 -1
  %273 = bitcast %"class.v8::internal::compiler::CompilationDependency"** %272 to <2 x i64>*
  %274 = load <2 x i64>, <2 x i64>* %273, align 8, !alias.scope !118
  %275 = getelementptr inbounds %"class.v8::internal::compiler::CompilationDependency"*, %"class.v8::internal::compiler::CompilationDependency"** %271, i64 -2
  %276 = getelementptr inbounds %"class.v8::internal::compiler::CompilationDependency"*, %"class.v8::internal::compiler::CompilationDependency"** %275, i64 -1
  %277 = bitcast %"class.v8::internal::compiler::CompilationDependency"** %276 to <2 x i64>*
  %278 = load <2 x i64>, <2 x i64>* %277, align 8, !alias.scope !118
  %279 = getelementptr inbounds %"class.v8::internal::compiler::CompilationDependency"*, %"class.v8::internal::compiler::CompilationDependency"** %270, i64 -1
  %280 = bitcast %"class.v8::internal::compiler::CompilationDependency"** %279 to <2 x i64>*
  store <2 x i64> %274, <2 x i64>* %280, align 8, !alias.scope !121, !noalias !118
  %281 = getelementptr inbounds %"class.v8::internal::compiler::CompilationDependency"*, %"class.v8::internal::compiler::CompilationDependency"** %270, i64 -2
  %282 = getelementptr inbounds %"class.v8::internal::compiler::CompilationDependency"*, %"class.v8::internal::compiler::CompilationDependency"** %281, i64 -1
  %283 = bitcast %"class.v8::internal::compiler::CompilationDependency"** %282 to <2 x i64>*
  store <2 x i64> %278, <2 x i64>* %283, align 8, !alias.scope !121, !noalias !118
  %284 = sub nuw nsw i64 -4, %266
  %285 = sub nuw nsw i64 -4, %266
  %286 = getelementptr inbounds %"class.v8::internal::compiler::CompilationDependency"*, %"class.v8::internal::compiler::CompilationDependency"** %263, i64 %284
  %287 = getelementptr inbounds %"class.v8::internal::compiler::CompilationDependency"*, %"class.v8::internal::compiler::CompilationDependency"** %264, i64 %285
  %288 = getelementptr inbounds %"class.v8::internal::compiler::CompilationDependency"*, %"class.v8::internal::compiler::CompilationDependency"** %287, i64 -1
  %289 = bitcast %"class.v8::internal::compiler::CompilationDependency"** %288 to <2 x i64>*
  %290 = load <2 x i64>, <2 x i64>* %289, align 8, !alias.scope !118
  %291 = getelementptr inbounds %"class.v8::internal::compiler::CompilationDependency"*, %"class.v8::internal::compiler::CompilationDependency"** %287, i64 -2
  %292 = getelementptr inbounds %"class.v8::internal::compiler::CompilationDependency"*, %"class.v8::internal::compiler::CompilationDependency"** %291, i64 -1
  %293 = bitcast %"class.v8::internal::compiler::CompilationDependency"** %292 to <2 x i64>*
  %294 = load <2 x i64>, <2 x i64>* %293, align 8, !alias.scope !118
  %295 = getelementptr inbounds %"class.v8::internal::compiler::CompilationDependency"*, %"class.v8::internal::compiler::CompilationDependency"** %286, i64 -1
  %296 = bitcast %"class.v8::internal::compiler::CompilationDependency"** %295 to <2 x i64>*
  store <2 x i64> %290, <2 x i64>* %296, align 8, !alias.scope !121, !noalias !118
  %297 = getelementptr inbounds %"class.v8::internal::compiler::CompilationDependency"*, %"class.v8::internal::compiler::CompilationDependency"** %286, i64 -2
  %298 = getelementptr inbounds %"class.v8::internal::compiler::CompilationDependency"*, %"class.v8::internal::compiler::CompilationDependency"** %297, i64 -1
  %299 = bitcast %"class.v8::internal::compiler::CompilationDependency"** %298 to <2 x i64>*
  store <2 x i64> %294, <2 x i64>* %299, align 8, !alias.scope !121, !noalias !118
  %300 = add i64 %266, 8
  %301 = add i64 %267, -2
  %302 = icmp eq i64 %301, 0
  br i1 %302, label %303, label %265, !llvm.loop !123

303:                                              ; preds = %265, %248
  %304 = phi i64 [ 0, %248 ], [ %300, %265 ]
  %305 = icmp eq i64 %257, 0
  br i1 %305, label %325, label %306

306:                                              ; preds = %303
  %307 = sub i64 0, %304
  %308 = getelementptr %"class.v8::internal::compiler::CompilationDependency"*, %"class.v8::internal::compiler::CompilationDependency"** %217, i64 -1
  %309 = sub i64 0, %304
  %310 = getelementptr %"class.v8::internal::compiler::CompilationDependency"*, %"class.v8::internal::compiler::CompilationDependency"** %226, i64 -1
  %311 = getelementptr inbounds %"class.v8::internal::compiler::CompilationDependency"*, %"class.v8::internal::compiler::CompilationDependency"** %308, i64 %307
  %312 = getelementptr inbounds %"class.v8::internal::compiler::CompilationDependency"*, %"class.v8::internal::compiler::CompilationDependency"** %310, i64 %309
  %313 = getelementptr inbounds %"class.v8::internal::compiler::CompilationDependency"*, %"class.v8::internal::compiler::CompilationDependency"** %312, i64 -1
  %314 = bitcast %"class.v8::internal::compiler::CompilationDependency"** %313 to <2 x i64>*
  %315 = load <2 x i64>, <2 x i64>* %314, align 8, !alias.scope !118
  %316 = getelementptr inbounds %"class.v8::internal::compiler::CompilationDependency"*, %"class.v8::internal::compiler::CompilationDependency"** %312, i64 -2
  %317 = getelementptr inbounds %"class.v8::internal::compiler::CompilationDependency"*, %"class.v8::internal::compiler::CompilationDependency"** %316, i64 -1
  %318 = bitcast %"class.v8::internal::compiler::CompilationDependency"** %317 to <2 x i64>*
  %319 = load <2 x i64>, <2 x i64>* %318, align 8, !alias.scope !118
  %320 = getelementptr inbounds %"class.v8::internal::compiler::CompilationDependency"*, %"class.v8::internal::compiler::CompilationDependency"** %311, i64 -1
  %321 = bitcast %"class.v8::internal::compiler::CompilationDependency"** %320 to <2 x i64>*
  store <2 x i64> %315, <2 x i64>* %321, align 8, !alias.scope !121, !noalias !118
  %322 = getelementptr inbounds %"class.v8::internal::compiler::CompilationDependency"*, %"class.v8::internal::compiler::CompilationDependency"** %311, i64 -2
  %323 = getelementptr inbounds %"class.v8::internal::compiler::CompilationDependency"*, %"class.v8::internal::compiler::CompilationDependency"** %322, i64 -1
  %324 = bitcast %"class.v8::internal::compiler::CompilationDependency"** %323 to <2 x i64>*
  store <2 x i64> %319, <2 x i64>* %324, align 8, !alias.scope !121, !noalias !118
  br label %325

325:                                              ; preds = %303, %306
  %326 = icmp eq i64 %233, %249
  br i1 %326, label %397, label %327

327:                                              ; preds = %325, %235, %228
  %328 = phi %"class.v8::internal::compiler::CompilationDependency"** [ %217, %235 ], [ %217, %228 ], [ %251, %325 ]
  %329 = phi %"class.v8::internal::compiler::CompilationDependency"** [ %226, %235 ], [ %226, %228 ], [ %253, %325 ]
  %330 = getelementptr %"class.v8::internal::compiler::CompilationDependency"*, %"class.v8::internal::compiler::CompilationDependency"** %329, i64 -1
  %331 = ptrtoint %"class.v8::internal::compiler::CompilationDependency"** %330 to i64
  %332 = sub i64 %331, %225
  %333 = lshr i64 %332, 3
  %334 = add nuw nsw i64 %333, 1
  %335 = and i64 %334, 7
  %336 = icmp eq i64 %335, 0
  br i1 %336, label %348, label %337

337:                                              ; preds = %327, %337
  %338 = phi %"class.v8::internal::compiler::CompilationDependency"** [ %341, %337 ], [ %328, %327 ]
  %339 = phi %"class.v8::internal::compiler::CompilationDependency"** [ %342, %337 ], [ %329, %327 ]
  %340 = phi i64 [ %346, %337 ], [ %335, %327 ]
  %341 = getelementptr inbounds %"class.v8::internal::compiler::CompilationDependency"*, %"class.v8::internal::compiler::CompilationDependency"** %338, i64 -1
  %342 = getelementptr inbounds %"class.v8::internal::compiler::CompilationDependency"*, %"class.v8::internal::compiler::CompilationDependency"** %339, i64 -1
  %343 = bitcast %"class.v8::internal::compiler::CompilationDependency"** %342 to i64*
  %344 = load i64, i64* %343, align 8
  %345 = bitcast %"class.v8::internal::compiler::CompilationDependency"** %341 to i64*
  store i64 %344, i64* %345, align 8
  %346 = add i64 %340, -1
  %347 = icmp eq i64 %346, 0
  br i1 %347, label %348, label %337, !llvm.loop !124

348:                                              ; preds = %337, %327
  %349 = phi %"class.v8::internal::compiler::CompilationDependency"** [ undef, %327 ], [ %341, %337 ]
  %350 = phi %"class.v8::internal::compiler::CompilationDependency"** [ %328, %327 ], [ %341, %337 ]
  %351 = phi %"class.v8::internal::compiler::CompilationDependency"** [ %329, %327 ], [ %342, %337 ]
  %352 = icmp ult i64 %332, 56
  br i1 %352, label %397, label %353

353:                                              ; preds = %348, %353
  %354 = phi %"class.v8::internal::compiler::CompilationDependency"** [ %391, %353 ], [ %350, %348 ]
  %355 = phi %"class.v8::internal::compiler::CompilationDependency"** [ %392, %353 ], [ %351, %348 ]
  %356 = getelementptr inbounds %"class.v8::internal::compiler::CompilationDependency"*, %"class.v8::internal::compiler::CompilationDependency"** %354, i64 -1
  %357 = getelementptr inbounds %"class.v8::internal::compiler::CompilationDependency"*, %"class.v8::internal::compiler::CompilationDependency"** %355, i64 -1
  %358 = bitcast %"class.v8::internal::compiler::CompilationDependency"** %357 to i64*
  %359 = load i64, i64* %358, align 8
  %360 = bitcast %"class.v8::internal::compiler::CompilationDependency"** %356 to i64*
  store i64 %359, i64* %360, align 8
  %361 = getelementptr inbounds %"class.v8::internal::compiler::CompilationDependency"*, %"class.v8::internal::compiler::CompilationDependency"** %354, i64 -2
  %362 = getelementptr inbounds %"class.v8::internal::compiler::CompilationDependency"*, %"class.v8::internal::compiler::CompilationDependency"** %355, i64 -2
  %363 = bitcast %"class.v8::internal::compiler::CompilationDependency"** %362 to i64*
  %364 = load i64, i64* %363, align 8
  %365 = bitcast %"class.v8::internal::compiler::CompilationDependency"** %361 to i64*
  store i64 %364, i64* %365, align 8
  %366 = getelementptr inbounds %"class.v8::internal::compiler::CompilationDependency"*, %"class.v8::internal::compiler::CompilationDependency"** %354, i64 -3
  %367 = getelementptr inbounds %"class.v8::internal::compiler::CompilationDependency"*, %"class.v8::internal::compiler::CompilationDependency"** %355, i64 -3
  %368 = bitcast %"class.v8::internal::compiler::CompilationDependency"** %367 to i64*
  %369 = load i64, i64* %368, align 8
  %370 = bitcast %"class.v8::internal::compiler::CompilationDependency"** %366 to i64*
  store i64 %369, i64* %370, align 8
  %371 = getelementptr inbounds %"class.v8::internal::compiler::CompilationDependency"*, %"class.v8::internal::compiler::CompilationDependency"** %354, i64 -4
  %372 = getelementptr inbounds %"class.v8::internal::compiler::CompilationDependency"*, %"class.v8::internal::compiler::CompilationDependency"** %355, i64 -4
  %373 = bitcast %"class.v8::internal::compiler::CompilationDependency"** %372 to i64*
  %374 = load i64, i64* %373, align 8
  %375 = bitcast %"class.v8::internal::compiler::CompilationDependency"** %371 to i64*
  store i64 %374, i64* %375, align 8
  %376 = getelementptr inbounds %"class.v8::internal::compiler::CompilationDependency"*, %"class.v8::internal::compiler::CompilationDependency"** %354, i64 -5
  %377 = getelementptr inbounds %"class.v8::internal::compiler::CompilationDependency"*, %"class.v8::internal::compiler::CompilationDependency"** %355, i64 -5
  %378 = bitcast %"class.v8::internal::compiler::CompilationDependency"** %377 to i64*
  %379 = load i64, i64* %378, align 8
  %380 = bitcast %"class.v8::internal::compiler::CompilationDependency"** %376 to i64*
  store i64 %379, i64* %380, align 8
  %381 = getelementptr inbounds %"class.v8::internal::compiler::CompilationDependency"*, %"class.v8::internal::compiler::CompilationDependency"** %354, i64 -6
  %382 = getelementptr inbounds %"class.v8::internal::compiler::CompilationDependency"*, %"class.v8::internal::compiler::CompilationDependency"** %355, i64 -6
  %383 = bitcast %"class.v8::internal::compiler::CompilationDependency"** %382 to i64*
  %384 = load i64, i64* %383, align 8
  %385 = bitcast %"class.v8::internal::compiler::CompilationDependency"** %381 to i64*
  store i64 %384, i64* %385, align 8
  %386 = getelementptr inbounds %"class.v8::internal::compiler::CompilationDependency"*, %"class.v8::internal::compiler::CompilationDependency"** %354, i64 -7
  %387 = getelementptr inbounds %"class.v8::internal::compiler::CompilationDependency"*, %"class.v8::internal::compiler::CompilationDependency"** %355, i64 -7
  %388 = bitcast %"class.v8::internal::compiler::CompilationDependency"** %387 to i64*
  %389 = load i64, i64* %388, align 8
  %390 = bitcast %"class.v8::internal::compiler::CompilationDependency"** %386 to i64*
  store i64 %389, i64* %390, align 8
  %391 = getelementptr inbounds %"class.v8::internal::compiler::CompilationDependency"*, %"class.v8::internal::compiler::CompilationDependency"** %354, i64 -8
  %392 = getelementptr inbounds %"class.v8::internal::compiler::CompilationDependency"*, %"class.v8::internal::compiler::CompilationDependency"** %355, i64 -8
  %393 = bitcast %"class.v8::internal::compiler::CompilationDependency"** %392 to i64*
  %394 = load i64, i64* %393, align 8
  %395 = bitcast %"class.v8::internal::compiler::CompilationDependency"** %391 to i64*
  store i64 %394, i64* %395, align 8
  %396 = icmp eq %"class.v8::internal::compiler::CompilationDependency"** %392, %224
  br i1 %396, label %397, label %353, !llvm.loop !125

397:                                              ; preds = %348, %353, %325, %214
  %398 = phi %"class.v8::internal::compiler::CompilationDependency"** [ %217, %214 ], [ %251, %325 ], [ %349, %348 ], [ %391, %353 ]
  %399 = ptrtoint %"class.v8::internal::compiler::CompilationDependency"** %398 to i64
  store i64 %399, i64* %178, align 8
  store i64 %222, i64* %177, align 8
  store i64 %219, i64* %187, align 8
  br label %967

400:                                              ; preds = %155
  %401 = getelementptr inbounds %"class.v8::internal::compiler::AccessInfoFactory", %"class.v8::internal::compiler::AccessInfoFactory"* %1, i64 0, i32 2
  %402 = load %"class.v8::internal::compiler::TypeCache"*, %"class.v8::internal::compiler::TypeCache"** %401, align 8
  %403 = getelementptr inbounds %"class.v8::internal::compiler::TypeCache", %"class.v8::internal::compiler::TypeCache"* %402, i64 0, i32 14, i32 0
  %404 = load i64, i64* %403, align 8
  %405 = getelementptr inbounds %"class.v8::internal::compiler::AccessInfoFactory", %"class.v8::internal::compiler::AccessInfoFactory"* %1, i64 0, i32 1
  %406 = load %"class.v8::internal::compiler::CompilationDependencies"*, %"class.v8::internal::compiler::CompilationDependencies"** %405, align 8
  %407 = call %"class.v8::internal::compiler::CompilationDependency"* @_ZNK2v88internal8compiler23CompilationDependencies41FieldRepresentationDependencyOffTheRecordERKNS1_6MapRefENS0_13InternalIndexE(%"class.v8::internal::compiler::CompilationDependencies"* %406, %"class.v8::internal::compiler::MapRef"* dereferenceable(16) %135, i64 %5) #8
  %408 = ptrtoint %"class.v8::internal::compiler::CompilationDependency"* %407 to i64
  %409 = getelementptr inbounds %"class.v8::internal::ZoneVector.22", %"class.v8::internal::ZoneVector.22"* %10, i64 0, i32 0, i32 0, i32 1
  %410 = load %"class.v8::internal::compiler::CompilationDependency"**, %"class.v8::internal::compiler::CompilationDependency"*** %409, align 8
  %411 = getelementptr inbounds %"class.v8::internal::ZoneVector.22", %"class.v8::internal::ZoneVector.22"* %10, i64 0, i32 0, i32 0, i32 2, i32 0, i32 0
  %412 = load %"class.v8::internal::compiler::CompilationDependency"**, %"class.v8::internal::compiler::CompilationDependency"*** %411, align 8
  %413 = icmp ult %"class.v8::internal::compiler::CompilationDependency"** %410, %412
  %414 = ptrtoint %"class.v8::internal::compiler::CompilationDependency"** %412 to i64
  br i1 %413, label %415, label %420

415:                                              ; preds = %400
  %416 = bitcast %"class.v8::internal::compiler::CompilationDependency"** %410 to i64*
  store i64 %408, i64* %416, align 8
  %417 = getelementptr inbounds %"class.v8::internal::compiler::CompilationDependency"*, %"class.v8::internal::compiler::CompilationDependency"** %410, i64 1
  %418 = ptrtoint %"class.v8::internal::compiler::CompilationDependency"** %417 to i64
  %419 = bitcast %"class.v8::internal::compiler::CompilationDependency"*** %409 to i64*
  store i64 %418, i64* %419, align 8
  br label %967

420:                                              ; preds = %400
  %421 = ptrtoint %"class.v8::internal::compiler::CompilationDependency"** %410 to i64
  %422 = bitcast %"class.v8::internal::compiler::CompilationDependency"*** %409 to i64*
  %423 = bitcast %"class.v8::internal::ZoneVector.22"* %10 to i64*
  %424 = load i64, i64* %423, align 8
  %425 = sub i64 %421, %424
  %426 = ashr exact i64 %425, 3
  %427 = add nsw i64 %426, 1
  %428 = icmp ugt i64 %427, 268435455
  br i1 %428, label %429, label %431

429:                                              ; preds = %420
  %430 = bitcast %"class.v8::internal::ZoneVector.22"* %10 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %430) #12
  unreachable

431:                                              ; preds = %420
  %432 = bitcast %"class.v8::internal::compiler::CompilationDependency"*** %411 to i64*
  %433 = sub i64 %414, %424
  %434 = ashr exact i64 %433, 3
  %435 = icmp ult i64 %434, 134217727
  br i1 %435, label %436, label %441

436:                                              ; preds = %431
  %437 = ashr exact i64 %433, 2
  %438 = icmp ult i64 %437, %427
  %439 = select i1 %438, i64 %427, i64 %437
  %440 = icmp eq i64 %439, 0
  br i1 %440, label %459, label %441

441:                                              ; preds = %436, %431
  %442 = phi i64 [ %439, %436 ], [ 268435455, %431 ]
  %443 = getelementptr inbounds %"class.v8::internal::ZoneVector.22", %"class.v8::internal::ZoneVector.22"* %10, i64 0, i32 0, i32 0, i32 2, i32 1, i32 0, i32 0
  %444 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %443, align 8
  %445 = shl i64 %442, 3
  %446 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %444, i64 0, i32 2
  %447 = load i64, i64* %446, align 8
  %448 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %444, i64 0, i32 3
  %449 = load i64, i64* %448, align 8
  %450 = sub i64 %449, %447
  %451 = icmp ugt i64 %445, %450
  br i1 %451, label %452, label %454, !prof !2

452:                                              ; preds = %441
  %453 = call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %444, i64 %445) #8
  br label %456

454:                                              ; preds = %441
  %455 = add i64 %447, %445
  store i64 %455, i64* %446, align 8
  br label %456

456:                                              ; preds = %454, %452
  %457 = phi i64 [ %453, %452 ], [ %447, %454 ]
  %458 = inttoptr i64 %457 to %"class.v8::internal::compiler::CompilationDependency"**
  br label %459

459:                                              ; preds = %456, %436
  %460 = phi i64 [ %442, %456 ], [ 0, %436 ]
  %461 = phi %"class.v8::internal::compiler::CompilationDependency"** [ %458, %456 ], [ null, %436 ]
  %462 = getelementptr inbounds %"class.v8::internal::compiler::CompilationDependency"*, %"class.v8::internal::compiler::CompilationDependency"** %461, i64 %426
  %463 = getelementptr inbounds %"class.v8::internal::compiler::CompilationDependency"*, %"class.v8::internal::compiler::CompilationDependency"** %461, i64 %460
  %464 = ptrtoint %"class.v8::internal::compiler::CompilationDependency"** %463 to i64
  %465 = bitcast %"class.v8::internal::compiler::CompilationDependency"** %462 to i64*
  store i64 %408, i64* %465, align 8
  %466 = getelementptr inbounds %"class.v8::internal::compiler::CompilationDependency"*, %"class.v8::internal::compiler::CompilationDependency"** %462, i64 1
  %467 = ptrtoint %"class.v8::internal::compiler::CompilationDependency"** %466 to i64
  %468 = getelementptr inbounds %"class.v8::internal::ZoneVector.22", %"class.v8::internal::ZoneVector.22"* %10, i64 0, i32 0, i32 0, i32 0
  %469 = load %"class.v8::internal::compiler::CompilationDependency"**, %"class.v8::internal::compiler::CompilationDependency"*** %468, align 8
  %470 = ptrtoint %"class.v8::internal::compiler::CompilationDependency"** %469 to i64
  %471 = load %"class.v8::internal::compiler::CompilationDependency"**, %"class.v8::internal::compiler::CompilationDependency"*** %409, align 8
  %472 = icmp eq %"class.v8::internal::compiler::CompilationDependency"** %471, %469
  br i1 %472, label %642, label %473

473:                                              ; preds = %459
  %474 = getelementptr %"class.v8::internal::compiler::CompilationDependency"*, %"class.v8::internal::compiler::CompilationDependency"** %471, i64 -1
  %475 = ptrtoint %"class.v8::internal::compiler::CompilationDependency"** %474 to i64
  %476 = sub i64 %475, %470
  %477 = lshr i64 %476, 3
  %478 = add nuw nsw i64 %477, 1
  %479 = icmp ult i64 %478, 4
  br i1 %479, label %572, label %480

480:                                              ; preds = %473
  %481 = getelementptr %"class.v8::internal::compiler::CompilationDependency"*, %"class.v8::internal::compiler::CompilationDependency"** %471, i64 -1
  %482 = ptrtoint %"class.v8::internal::compiler::CompilationDependency"** %481 to i64
  %483 = sub i64 %482, %470
  %484 = lshr i64 %483, 3
  %485 = xor i64 %484, -1
  %486 = add nsw i64 %426, %485
  %487 = getelementptr %"class.v8::internal::compiler::CompilationDependency"*, %"class.v8::internal::compiler::CompilationDependency"** %461, i64 %486
  %488 = xor i64 %484, -1
  %489 = getelementptr %"class.v8::internal::compiler::CompilationDependency"*, %"class.v8::internal::compiler::CompilationDependency"** %471, i64 %488
  %490 = icmp ult %"class.v8::internal::compiler::CompilationDependency"** %487, %471
  %491 = icmp ult %"class.v8::internal::compiler::CompilationDependency"** %489, %462
  %492 = and i1 %490, %491
  br i1 %492, label %572, label %493

493:                                              ; preds = %480
  %494 = and i64 %478, 4611686018427387900
  %495 = sub nsw i64 0, %494
  %496 = getelementptr %"class.v8::internal::compiler::CompilationDependency"*, %"class.v8::internal::compiler::CompilationDependency"** %462, i64 %495
  %497 = sub nsw i64 0, %494
  %498 = getelementptr %"class.v8::internal::compiler::CompilationDependency"*, %"class.v8::internal::compiler::CompilationDependency"** %471, i64 %497
  %499 = add nsw i64 %494, -4
  %500 = lshr exact i64 %499, 2
  %501 = add nuw nsw i64 %500, 1
  %502 = and i64 %501, 1
  %503 = icmp eq i64 %499, 0
  br i1 %503, label %548, label %504

504:                                              ; preds = %493
  %505 = sub nuw nsw i64 %501, %502
  %506 = getelementptr %"class.v8::internal::compiler::CompilationDependency"*, %"class.v8::internal::compiler::CompilationDependency"** %462, i64 -1
  %507 = getelementptr %"class.v8::internal::compiler::CompilationDependency"*, %"class.v8::internal::compiler::CompilationDependency"** %471, i64 -1
  %508 = getelementptr %"class.v8::internal::compiler::CompilationDependency"*, %"class.v8::internal::compiler::CompilationDependency"** %462, i64 -1
  %509 = getelementptr %"class.v8::internal::compiler::CompilationDependency"*, %"class.v8::internal::compiler::CompilationDependency"** %471, i64 -1
  br label %510

510:                                              ; preds = %510, %504
  %511 = phi i64 [ 0, %504 ], [ %545, %510 ]
  %512 = phi i64 [ %505, %504 ], [ %546, %510 ]
  %513 = sub i64 0, %511
  %514 = sub i64 0, %511
  %515 = getelementptr inbounds %"class.v8::internal::compiler::CompilationDependency"*, %"class.v8::internal::compiler::CompilationDependency"** %506, i64 %513
  %516 = getelementptr inbounds %"class.v8::internal::compiler::CompilationDependency"*, %"class.v8::internal::compiler::CompilationDependency"** %507, i64 %514
  %517 = getelementptr inbounds %"class.v8::internal::compiler::CompilationDependency"*, %"class.v8::internal::compiler::CompilationDependency"** %516, i64 -1
  %518 = bitcast %"class.v8::internal::compiler::CompilationDependency"** %517 to <2 x i64>*
  %519 = load <2 x i64>, <2 x i64>* %518, align 8, !alias.scope !126
  %520 = getelementptr inbounds %"class.v8::internal::compiler::CompilationDependency"*, %"class.v8::internal::compiler::CompilationDependency"** %516, i64 -2
  %521 = getelementptr inbounds %"class.v8::internal::compiler::CompilationDependency"*, %"class.v8::internal::compiler::CompilationDependency"** %520, i64 -1
  %522 = bitcast %"class.v8::internal::compiler::CompilationDependency"** %521 to <2 x i64>*
  %523 = load <2 x i64>, <2 x i64>* %522, align 8, !alias.scope !126
  %524 = getelementptr inbounds %"class.v8::internal::compiler::CompilationDependency"*, %"class.v8::internal::compiler::CompilationDependency"** %515, i64 -1
  %525 = bitcast %"class.v8::internal::compiler::CompilationDependency"** %524 to <2 x i64>*
  store <2 x i64> %519, <2 x i64>* %525, align 8, !alias.scope !129, !noalias !126
  %526 = getelementptr inbounds %"class.v8::internal::compiler::CompilationDependency"*, %"class.v8::internal::compiler::CompilationDependency"** %515, i64 -2
  %527 = getelementptr inbounds %"class.v8::internal::compiler::CompilationDependency"*, %"class.v8::internal::compiler::CompilationDependency"** %526, i64 -1
  %528 = bitcast %"class.v8::internal::compiler::CompilationDependency"** %527 to <2 x i64>*
  store <2 x i64> %523, <2 x i64>* %528, align 8, !alias.scope !129, !noalias !126
  %529 = sub nuw nsw i64 -4, %511
  %530 = sub nuw nsw i64 -4, %511
  %531 = getelementptr inbounds %"class.v8::internal::compiler::CompilationDependency"*, %"class.v8::internal::compiler::CompilationDependency"** %508, i64 %529
  %532 = getelementptr inbounds %"class.v8::internal::compiler::CompilationDependency"*, %"class.v8::internal::compiler::CompilationDependency"** %509, i64 %530
  %533 = getelementptr inbounds %"class.v8::internal::compiler::CompilationDependency"*, %"class.v8::internal::compiler::CompilationDependency"** %532, i64 -1
  %534 = bitcast %"class.v8::internal::compiler::CompilationDependency"** %533 to <2 x i64>*
  %535 = load <2 x i64>, <2 x i64>* %534, align 8, !alias.scope !126
  %536 = getelementptr inbounds %"class.v8::internal::compiler::CompilationDependency"*, %"class.v8::internal::compiler::CompilationDependency"** %532, i64 -2
  %537 = getelementptr inbounds %"class.v8::internal::compiler::CompilationDependency"*, %"class.v8::internal::compiler::CompilationDependency"** %536, i64 -1
  %538 = bitcast %"class.v8::internal::compiler::CompilationDependency"** %537 to <2 x i64>*
  %539 = load <2 x i64>, <2 x i64>* %538, align 8, !alias.scope !126
  %540 = getelementptr inbounds %"class.v8::internal::compiler::CompilationDependency"*, %"class.v8::internal::compiler::CompilationDependency"** %531, i64 -1
  %541 = bitcast %"class.v8::internal::compiler::CompilationDependency"** %540 to <2 x i64>*
  store <2 x i64> %535, <2 x i64>* %541, align 8, !alias.scope !129, !noalias !126
  %542 = getelementptr inbounds %"class.v8::internal::compiler::CompilationDependency"*, %"class.v8::internal::compiler::CompilationDependency"** %531, i64 -2
  %543 = getelementptr inbounds %"class.v8::internal::compiler::CompilationDependency"*, %"class.v8::internal::compiler::CompilationDependency"** %542, i64 -1
  %544 = bitcast %"class.v8::internal::compiler::CompilationDependency"** %543 to <2 x i64>*
  store <2 x i64> %539, <2 x i64>* %544, align 8, !alias.scope !129, !noalias !126
  %545 = add i64 %511, 8
  %546 = add i64 %512, -2
  %547 = icmp eq i64 %546, 0
  br i1 %547, label %548, label %510, !llvm.loop !131

548:                                              ; preds = %510, %493
  %549 = phi i64 [ 0, %493 ], [ %545, %510 ]
  %550 = icmp eq i64 %502, 0
  br i1 %550, label %570, label %551

551:                                              ; preds = %548
  %552 = sub i64 0, %549
  %553 = getelementptr %"class.v8::internal::compiler::CompilationDependency"*, %"class.v8::internal::compiler::CompilationDependency"** %462, i64 -1
  %554 = sub i64 0, %549
  %555 = getelementptr %"class.v8::internal::compiler::CompilationDependency"*, %"class.v8::internal::compiler::CompilationDependency"** %471, i64 -1
  %556 = getelementptr inbounds %"class.v8::internal::compiler::CompilationDependency"*, %"class.v8::internal::compiler::CompilationDependency"** %553, i64 %552
  %557 = getelementptr inbounds %"class.v8::internal::compiler::CompilationDependency"*, %"class.v8::internal::compiler::CompilationDependency"** %555, i64 %554
  %558 = getelementptr inbounds %"class.v8::internal::compiler::CompilationDependency"*, %"class.v8::internal::compiler::CompilationDependency"** %557, i64 -1
  %559 = bitcast %"class.v8::internal::compiler::CompilationDependency"** %558 to <2 x i64>*
  %560 = load <2 x i64>, <2 x i64>* %559, align 8, !alias.scope !126
  %561 = getelementptr inbounds %"class.v8::internal::compiler::CompilationDependency"*, %"class.v8::internal::compiler::CompilationDependency"** %557, i64 -2
  %562 = getelementptr inbounds %"class.v8::internal::compiler::CompilationDependency"*, %"class.v8::internal::compiler::CompilationDependency"** %561, i64 -1
  %563 = bitcast %"class.v8::internal::compiler::CompilationDependency"** %562 to <2 x i64>*
  %564 = load <2 x i64>, <2 x i64>* %563, align 8, !alias.scope !126
  %565 = getelementptr inbounds %"class.v8::internal::compiler::CompilationDependency"*, %"class.v8::internal::compiler::CompilationDependency"** %556, i64 -1
  %566 = bitcast %"class.v8::internal::compiler::CompilationDependency"** %565 to <2 x i64>*
  store <2 x i64> %560, <2 x i64>* %566, align 8, !alias.scope !129, !noalias !126
  %567 = getelementptr inbounds %"class.v8::internal::compiler::CompilationDependency"*, %"class.v8::internal::compiler::CompilationDependency"** %556, i64 -2
  %568 = getelementptr inbounds %"class.v8::internal::compiler::CompilationDependency"*, %"class.v8::internal::compiler::CompilationDependency"** %567, i64 -1
  %569 = bitcast %"class.v8::internal::compiler::CompilationDependency"** %568 to <2 x i64>*
  store <2 x i64> %564, <2 x i64>* %569, align 8, !alias.scope !129, !noalias !126
  br label %570

570:                                              ; preds = %548, %551
  %571 = icmp eq i64 %478, %494
  br i1 %571, label %642, label %572

572:                                              ; preds = %570, %480, %473
  %573 = phi %"class.v8::internal::compiler::CompilationDependency"** [ %462, %480 ], [ %462, %473 ], [ %496, %570 ]
  %574 = phi %"class.v8::internal::compiler::CompilationDependency"** [ %471, %480 ], [ %471, %473 ], [ %498, %570 ]
  %575 = getelementptr %"class.v8::internal::compiler::CompilationDependency"*, %"class.v8::internal::compiler::CompilationDependency"** %574, i64 -1
  %576 = ptrtoint %"class.v8::internal::compiler::CompilationDependency"** %575 to i64
  %577 = sub i64 %576, %470
  %578 = lshr i64 %577, 3
  %579 = add nuw nsw i64 %578, 1
  %580 = and i64 %579, 7
  %581 = icmp eq i64 %580, 0
  br i1 %581, label %593, label %582

582:                                              ; preds = %572, %582
  %583 = phi %"class.v8::internal::compiler::CompilationDependency"** [ %586, %582 ], [ %573, %572 ]
  %584 = phi %"class.v8::internal::compiler::CompilationDependency"** [ %587, %582 ], [ %574, %572 ]
  %585 = phi i64 [ %591, %582 ], [ %580, %572 ]
  %586 = getelementptr inbounds %"class.v8::internal::compiler::CompilationDependency"*, %"class.v8::internal::compiler::CompilationDependency"** %583, i64 -1
  %587 = getelementptr inbounds %"class.v8::internal::compiler::CompilationDependency"*, %"class.v8::internal::compiler::CompilationDependency"** %584, i64 -1
  %588 = bitcast %"class.v8::internal::compiler::CompilationDependency"** %587 to i64*
  %589 = load i64, i64* %588, align 8
  %590 = bitcast %"class.v8::internal::compiler::CompilationDependency"** %586 to i64*
  store i64 %589, i64* %590, align 8
  %591 = add i64 %585, -1
  %592 = icmp eq i64 %591, 0
  br i1 %592, label %593, label %582, !llvm.loop !132

593:                                              ; preds = %582, %572
  %594 = phi %"class.v8::internal::compiler::CompilationDependency"** [ undef, %572 ], [ %586, %582 ]
  %595 = phi %"class.v8::internal::compiler::CompilationDependency"** [ %573, %572 ], [ %586, %582 ]
  %596 = phi %"class.v8::internal::compiler::CompilationDependency"** [ %574, %572 ], [ %587, %582 ]
  %597 = icmp ult i64 %577, 56
  br i1 %597, label %642, label %598

598:                                              ; preds = %593, %598
  %599 = phi %"class.v8::internal::compiler::CompilationDependency"** [ %636, %598 ], [ %595, %593 ]
  %600 = phi %"class.v8::internal::compiler::CompilationDependency"** [ %637, %598 ], [ %596, %593 ]
  %601 = getelementptr inbounds %"class.v8::internal::compiler::CompilationDependency"*, %"class.v8::internal::compiler::CompilationDependency"** %599, i64 -1
  %602 = getelementptr inbounds %"class.v8::internal::compiler::CompilationDependency"*, %"class.v8::internal::compiler::CompilationDependency"** %600, i64 -1
  %603 = bitcast %"class.v8::internal::compiler::CompilationDependency"** %602 to i64*
  %604 = load i64, i64* %603, align 8
  %605 = bitcast %"class.v8::internal::compiler::CompilationDependency"** %601 to i64*
  store i64 %604, i64* %605, align 8
  %606 = getelementptr inbounds %"class.v8::internal::compiler::CompilationDependency"*, %"class.v8::internal::compiler::CompilationDependency"** %599, i64 -2
  %607 = getelementptr inbounds %"class.v8::internal::compiler::CompilationDependency"*, %"class.v8::internal::compiler::CompilationDependency"** %600, i64 -2
  %608 = bitcast %"class.v8::internal::compiler::CompilationDependency"** %607 to i64*
  %609 = load i64, i64* %608, align 8
  %610 = bitcast %"class.v8::internal::compiler::CompilationDependency"** %606 to i64*
  store i64 %609, i64* %610, align 8
  %611 = getelementptr inbounds %"class.v8::internal::compiler::CompilationDependency"*, %"class.v8::internal::compiler::CompilationDependency"** %599, i64 -3
  %612 = getelementptr inbounds %"class.v8::internal::compiler::CompilationDependency"*, %"class.v8::internal::compiler::CompilationDependency"** %600, i64 -3
  %613 = bitcast %"class.v8::internal::compiler::CompilationDependency"** %612 to i64*
  %614 = load i64, i64* %613, align 8
  %615 = bitcast %"class.v8::internal::compiler::CompilationDependency"** %611 to i64*
  store i64 %614, i64* %615, align 8
  %616 = getelementptr inbounds %"class.v8::internal::compiler::CompilationDependency"*, %"class.v8::internal::compiler::CompilationDependency"** %599, i64 -4
  %617 = getelementptr inbounds %"class.v8::internal::compiler::CompilationDependency"*, %"class.v8::internal::compiler::CompilationDependency"** %600, i64 -4
  %618 = bitcast %"class.v8::internal::compiler::CompilationDependency"** %617 to i64*
  %619 = load i64, i64* %618, align 8
  %620 = bitcast %"class.v8::internal::compiler::CompilationDependency"** %616 to i64*
  store i64 %619, i64* %620, align 8
  %621 = getelementptr inbounds %"class.v8::internal::compiler::CompilationDependency"*, %"class.v8::internal::compiler::CompilationDependency"** %599, i64 -5
  %622 = getelementptr inbounds %"class.v8::internal::compiler::CompilationDependency"*, %"class.v8::internal::compiler::CompilationDependency"** %600, i64 -5
  %623 = bitcast %"class.v8::internal::compiler::CompilationDependency"** %622 to i64*
  %624 = load i64, i64* %623, align 8
  %625 = bitcast %"class.v8::internal::compiler::CompilationDependency"** %621 to i64*
  store i64 %624, i64* %625, align 8
  %626 = getelementptr inbounds %"class.v8::internal::compiler::CompilationDependency"*, %"class.v8::internal::compiler::CompilationDependency"** %599, i64 -6
  %627 = getelementptr inbounds %"class.v8::internal::compiler::CompilationDependency"*, %"class.v8::internal::compiler::CompilationDependency"** %600, i64 -6
  %628 = bitcast %"class.v8::internal::compiler::CompilationDependency"** %627 to i64*
  %629 = load i64, i64* %628, align 8
  %630 = bitcast %"class.v8::internal::compiler::CompilationDependency"** %626 to i64*
  store i64 %629, i64* %630, align 8
  %631 = getelementptr inbounds %"class.v8::internal::compiler::CompilationDependency"*, %"class.v8::internal::compiler::CompilationDependency"** %599, i64 -7
  %632 = getelementptr inbounds %"class.v8::internal::compiler::CompilationDependency"*, %"class.v8::internal::compiler::CompilationDependency"** %600, i64 -7
  %633 = bitcast %"class.v8::internal::compiler::CompilationDependency"** %632 to i64*
  %634 = load i64, i64* %633, align 8
  %635 = bitcast %"class.v8::internal::compiler::CompilationDependency"** %631 to i64*
  store i64 %634, i64* %635, align 8
  %636 = getelementptr inbounds %"class.v8::internal::compiler::CompilationDependency"*, %"class.v8::internal::compiler::CompilationDependency"** %599, i64 -8
  %637 = getelementptr inbounds %"class.v8::internal::compiler::CompilationDependency"*, %"class.v8::internal::compiler::CompilationDependency"** %600, i64 -8
  %638 = bitcast %"class.v8::internal::compiler::CompilationDependency"** %637 to i64*
  %639 = load i64, i64* %638, align 8
  %640 = bitcast %"class.v8::internal::compiler::CompilationDependency"** %636 to i64*
  store i64 %639, i64* %640, align 8
  %641 = icmp eq %"class.v8::internal::compiler::CompilationDependency"** %637, %469
  br i1 %641, label %642, label %598, !llvm.loop !133

642:                                              ; preds = %593, %598, %570, %459
  %643 = phi %"class.v8::internal::compiler::CompilationDependency"** [ %462, %459 ], [ %496, %570 ], [ %594, %593 ], [ %636, %598 ]
  %644 = ptrtoint %"class.v8::internal::compiler::CompilationDependency"** %643 to i64
  store i64 %644, i64* %423, align 8
  store i64 %467, i64* %422, align 8
  store i64 %464, i64* %432, align 8
  br label %967

645:                                              ; preds = %155
  %646 = load %"class.v8::internal::compiler::JSHeapBroker"*, %"class.v8::internal::compiler::JSHeapBroker"** %15, align 8
  %647 = load i64, i64* %24, align 8
  %648 = and i64 %647, -4294967296
  %649 = add nsw i64 %28, 7
  %650 = add i64 %649, %647
  %651 = inttoptr i64 %650 to i32*
  %652 = load atomic i32, i32* %651 monotonic, align 4
  %653 = zext i32 %652 to i64
  %654 = or i64 %648, %653
  %655 = call i64 @_ZN2v88internal3Map15UnwrapFieldTypeENS0_11MaybeObjectE(i64 %654) #8
  %656 = call i64* @_ZN2v88internal8compiler12JSHeapBroker25CanonicalPersistentHandleINS0_9FieldTypeEEENS0_6HandleIT_EES6_(%"class.v8::internal::compiler::JSHeapBroker"* %646, i64 %655)
  %657 = load i64, i64* %656, align 8
  %658 = call i64 @_ZN2v88internal9FieldType4NoneEv() #8
  %659 = trunc i64 %657 to i32
  %660 = trunc i64 %658 to i32
  %661 = icmp eq i32 %659, %660
  %662 = icmp eq i32 %6, 1
  %663 = and i1 %662, %661
  br i1 %663, label %664, label %682

664:                                              ; preds = %645
  %665 = load i64, i64* %131, align 8, !noalias !134
  %666 = getelementptr inbounds %"class.v8::internal::compiler::PropertyAccessInfo", %"class.v8::internal::compiler::PropertyAccessInfo"* %0, i64 0, i32 0
  store i32 0, i32* %666, align 8, !alias.scope !137
  %667 = getelementptr inbounds %"class.v8::internal::compiler::PropertyAccessInfo", %"class.v8::internal::compiler::PropertyAccessInfo"* %0, i64 0, i32 1
  %668 = getelementptr inbounds %"class.v8::internal::compiler::PropertyAccessInfo", %"class.v8::internal::compiler::PropertyAccessInfo"* %0, i64 0, i32 1, i32 0, i32 0, i32 2, i32 1
  %669 = bitcast %"struct.std::__1::__compressed_pair_elem.0"* %668 to i64*
  %670 = bitcast %"class.v8::internal::ZoneVector"* %667 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %670, i8 0, i64 24, i1 false) #8, !alias.scope !137
  store i64 %665, i64* %669, align 8, !alias.scope !137
  %671 = getelementptr inbounds %"class.v8::internal::compiler::PropertyAccessInfo", %"class.v8::internal::compiler::PropertyAccessInfo"* %0, i64 0, i32 2, i32 0, i32 0
  %672 = getelementptr inbounds %"class.v8::internal::compiler::PropertyAccessInfo", %"class.v8::internal::compiler::PropertyAccessInfo"* %0, i64 0, i32 4, i32 0, i32 0, i32 2, i32 1
  %673 = bitcast %"struct.std::__1::__compressed_pair_elem.27"* %672 to i64*
  %674 = bitcast i64** %671 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %674, i8 0, i64 40, i1 false) #8, !alias.scope !137
  store i64 %665, i64* %673, align 8, !alias.scope !137
  %675 = getelementptr inbounds %"class.v8::internal::compiler::PropertyAccessInfo", %"class.v8::internal::compiler::PropertyAccessInfo"* %0, i64 0, i32 5, i32 0
  %676 = getelementptr inbounds %"class.v8::internal::compiler::PropertyAccessInfo", %"class.v8::internal::compiler::PropertyAccessInfo"* %0, i64 0, i32 8, i32 0
  %677 = bitcast i64** %675 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %677, i8 0, i64 17, i1 false) #8, !alias.scope !137
  store i64 1, i64* %676, align 8, !alias.scope !137
  %678 = getelementptr inbounds %"class.v8::internal::compiler::PropertyAccessInfo", %"class.v8::internal::compiler::PropertyAccessInfo"* %0, i64 0, i32 9, i32 0
  %679 = getelementptr inbounds %"class.v8::internal::compiler::PropertyAccessInfo", %"class.v8::internal::compiler::PropertyAccessInfo"* %0, i64 0, i32 11, i32 0
  %680 = bitcast i64** %678 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %680, i8 0, i64 16, i1 false) #8, !alias.scope !137
  store i64 -1, i64* %679, align 8, !alias.scope !137
  %681 = getelementptr inbounds %"class.v8::internal::compiler::PropertyAccessInfo", %"class.v8::internal::compiler::PropertyAccessInfo"* %0, i64 0, i32 12, i32 0
  store i64* null, i64** %681, align 8, !alias.scope !137
  br label %1251

682:                                              ; preds = %645
  %683 = getelementptr inbounds %"class.v8::internal::compiler::AccessInfoFactory", %"class.v8::internal::compiler::AccessInfoFactory"* %1, i64 0, i32 1
  %684 = load %"class.v8::internal::compiler::CompilationDependencies"*, %"class.v8::internal::compiler::CompilationDependencies"** %683, align 8
  %685 = call %"class.v8::internal::compiler::CompilationDependency"* @_ZNK2v88internal8compiler23CompilationDependencies41FieldRepresentationDependencyOffTheRecordERKNS1_6MapRefENS0_13InternalIndexE(%"class.v8::internal::compiler::CompilationDependencies"* %684, %"class.v8::internal::compiler::MapRef"* dereferenceable(16) %135, i64 %5) #8
  %686 = ptrtoint %"class.v8::internal::compiler::CompilationDependency"* %685 to i64
  %687 = getelementptr inbounds %"class.v8::internal::ZoneVector.22", %"class.v8::internal::ZoneVector.22"* %10, i64 0, i32 0, i32 0, i32 1
  %688 = load %"class.v8::internal::compiler::CompilationDependency"**, %"class.v8::internal::compiler::CompilationDependency"*** %687, align 8
  %689 = getelementptr inbounds %"class.v8::internal::ZoneVector.22", %"class.v8::internal::ZoneVector.22"* %10, i64 0, i32 0, i32 0, i32 2, i32 0, i32 0
  %690 = load %"class.v8::internal::compiler::CompilationDependency"**, %"class.v8::internal::compiler::CompilationDependency"*** %689, align 8
  %691 = icmp ult %"class.v8::internal::compiler::CompilationDependency"** %688, %690
  %692 = ptrtoint %"class.v8::internal::compiler::CompilationDependency"** %690 to i64
  br i1 %691, label %693, label %698

693:                                              ; preds = %682
  %694 = bitcast %"class.v8::internal::compiler::CompilationDependency"** %688 to i64*
  store i64 %686, i64* %694, align 8
  %695 = getelementptr inbounds %"class.v8::internal::compiler::CompilationDependency"*, %"class.v8::internal::compiler::CompilationDependency"** %688, i64 1
  %696 = ptrtoint %"class.v8::internal::compiler::CompilationDependency"** %695 to i64
  %697 = bitcast %"class.v8::internal::compiler::CompilationDependency"*** %687 to i64*
  store i64 %696, i64* %697, align 8
  br label %923

698:                                              ; preds = %682
  %699 = ptrtoint %"class.v8::internal::compiler::CompilationDependency"** %688 to i64
  %700 = bitcast %"class.v8::internal::compiler::CompilationDependency"*** %687 to i64*
  %701 = bitcast %"class.v8::internal::ZoneVector.22"* %10 to i64*
  %702 = load i64, i64* %701, align 8
  %703 = sub i64 %699, %702
  %704 = ashr exact i64 %703, 3
  %705 = add nsw i64 %704, 1
  %706 = icmp ugt i64 %705, 268435455
  br i1 %706, label %707, label %709

707:                                              ; preds = %698
  %708 = bitcast %"class.v8::internal::ZoneVector.22"* %10 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %708) #12
  unreachable

709:                                              ; preds = %698
  %710 = bitcast %"class.v8::internal::compiler::CompilationDependency"*** %689 to i64*
  %711 = sub i64 %692, %702
  %712 = ashr exact i64 %711, 3
  %713 = icmp ult i64 %712, 134217727
  br i1 %713, label %714, label %719

714:                                              ; preds = %709
  %715 = ashr exact i64 %711, 2
  %716 = icmp ult i64 %715, %705
  %717 = select i1 %716, i64 %705, i64 %715
  %718 = icmp eq i64 %717, 0
  br i1 %718, label %737, label %719

719:                                              ; preds = %714, %709
  %720 = phi i64 [ %717, %714 ], [ 268435455, %709 ]
  %721 = getelementptr inbounds %"class.v8::internal::ZoneVector.22", %"class.v8::internal::ZoneVector.22"* %10, i64 0, i32 0, i32 0, i32 2, i32 1, i32 0, i32 0
  %722 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %721, align 8
  %723 = shl i64 %720, 3
  %724 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %722, i64 0, i32 2
  %725 = load i64, i64* %724, align 8
  %726 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %722, i64 0, i32 3
  %727 = load i64, i64* %726, align 8
  %728 = sub i64 %727, %725
  %729 = icmp ugt i64 %723, %728
  br i1 %729, label %730, label %732, !prof !2

730:                                              ; preds = %719
  %731 = call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %722, i64 %723) #8
  br label %734

732:                                              ; preds = %719
  %733 = add i64 %725, %723
  store i64 %733, i64* %724, align 8
  br label %734

734:                                              ; preds = %732, %730
  %735 = phi i64 [ %731, %730 ], [ %725, %732 ]
  %736 = inttoptr i64 %735 to %"class.v8::internal::compiler::CompilationDependency"**
  br label %737

737:                                              ; preds = %734, %714
  %738 = phi i64 [ %720, %734 ], [ 0, %714 ]
  %739 = phi %"class.v8::internal::compiler::CompilationDependency"** [ %736, %734 ], [ null, %714 ]
  %740 = getelementptr inbounds %"class.v8::internal::compiler::CompilationDependency"*, %"class.v8::internal::compiler::CompilationDependency"** %739, i64 %704
  %741 = getelementptr inbounds %"class.v8::internal::compiler::CompilationDependency"*, %"class.v8::internal::compiler::CompilationDependency"** %739, i64 %738
  %742 = ptrtoint %"class.v8::internal::compiler::CompilationDependency"** %741 to i64
  %743 = bitcast %"class.v8::internal::compiler::CompilationDependency"** %740 to i64*
  store i64 %686, i64* %743, align 8
  %744 = getelementptr inbounds %"class.v8::internal::compiler::CompilationDependency"*, %"class.v8::internal::compiler::CompilationDependency"** %740, i64 1
  %745 = ptrtoint %"class.v8::internal::compiler::CompilationDependency"** %744 to i64
  %746 = getelementptr inbounds %"class.v8::internal::ZoneVector.22", %"class.v8::internal::ZoneVector.22"* %10, i64 0, i32 0, i32 0, i32 0
  %747 = load %"class.v8::internal::compiler::CompilationDependency"**, %"class.v8::internal::compiler::CompilationDependency"*** %746, align 8
  %748 = ptrtoint %"class.v8::internal::compiler::CompilationDependency"** %747 to i64
  %749 = load %"class.v8::internal::compiler::CompilationDependency"**, %"class.v8::internal::compiler::CompilationDependency"*** %687, align 8
  %750 = icmp eq %"class.v8::internal::compiler::CompilationDependency"** %749, %747
  br i1 %750, label %920, label %751

751:                                              ; preds = %737
  %752 = getelementptr %"class.v8::internal::compiler::CompilationDependency"*, %"class.v8::internal::compiler::CompilationDependency"** %749, i64 -1
  %753 = ptrtoint %"class.v8::internal::compiler::CompilationDependency"** %752 to i64
  %754 = sub i64 %753, %748
  %755 = lshr i64 %754, 3
  %756 = add nuw nsw i64 %755, 1
  %757 = icmp ult i64 %756, 4
  br i1 %757, label %850, label %758

758:                                              ; preds = %751
  %759 = getelementptr %"class.v8::internal::compiler::CompilationDependency"*, %"class.v8::internal::compiler::CompilationDependency"** %749, i64 -1
  %760 = ptrtoint %"class.v8::internal::compiler::CompilationDependency"** %759 to i64
  %761 = sub i64 %760, %748
  %762 = lshr i64 %761, 3
  %763 = xor i64 %762, -1
  %764 = add nsw i64 %704, %763
  %765 = getelementptr %"class.v8::internal::compiler::CompilationDependency"*, %"class.v8::internal::compiler::CompilationDependency"** %739, i64 %764
  %766 = xor i64 %762, -1
  %767 = getelementptr %"class.v8::internal::compiler::CompilationDependency"*, %"class.v8::internal::compiler::CompilationDependency"** %749, i64 %766
  %768 = icmp ult %"class.v8::internal::compiler::CompilationDependency"** %765, %749
  %769 = icmp ult %"class.v8::internal::compiler::CompilationDependency"** %767, %740
  %770 = and i1 %768, %769
  br i1 %770, label %850, label %771

771:                                              ; preds = %758
  %772 = and i64 %756, 4611686018427387900
  %773 = sub nsw i64 0, %772
  %774 = getelementptr %"class.v8::internal::compiler::CompilationDependency"*, %"class.v8::internal::compiler::CompilationDependency"** %740, i64 %773
  %775 = sub nsw i64 0, %772
  %776 = getelementptr %"class.v8::internal::compiler::CompilationDependency"*, %"class.v8::internal::compiler::CompilationDependency"** %749, i64 %775
  %777 = add nsw i64 %772, -4
  %778 = lshr exact i64 %777, 2
  %779 = add nuw nsw i64 %778, 1
  %780 = and i64 %779, 1
  %781 = icmp eq i64 %777, 0
  br i1 %781, label %826, label %782

782:                                              ; preds = %771
  %783 = sub nuw nsw i64 %779, %780
  %784 = getelementptr %"class.v8::internal::compiler::CompilationDependency"*, %"class.v8::internal::compiler::CompilationDependency"** %740, i64 -1
  %785 = getelementptr %"class.v8::internal::compiler::CompilationDependency"*, %"class.v8::internal::compiler::CompilationDependency"** %749, i64 -1
  %786 = getelementptr %"class.v8::internal::compiler::CompilationDependency"*, %"class.v8::internal::compiler::CompilationDependency"** %740, i64 -1
  %787 = getelementptr %"class.v8::internal::compiler::CompilationDependency"*, %"class.v8::internal::compiler::CompilationDependency"** %749, i64 -1
  br label %788

788:                                              ; preds = %788, %782
  %789 = phi i64 [ 0, %782 ], [ %823, %788 ]
  %790 = phi i64 [ %783, %782 ], [ %824, %788 ]
  %791 = sub i64 0, %789
  %792 = sub i64 0, %789
  %793 = getelementptr inbounds %"class.v8::internal::compiler::CompilationDependency"*, %"class.v8::internal::compiler::CompilationDependency"** %784, i64 %791
  %794 = getelementptr inbounds %"class.v8::internal::compiler::CompilationDependency"*, %"class.v8::internal::compiler::CompilationDependency"** %785, i64 %792
  %795 = getelementptr inbounds %"class.v8::internal::compiler::CompilationDependency"*, %"class.v8::internal::compiler::CompilationDependency"** %794, i64 -1
  %796 = bitcast %"class.v8::internal::compiler::CompilationDependency"** %795 to <2 x i64>*
  %797 = load <2 x i64>, <2 x i64>* %796, align 8, !alias.scope !140
  %798 = getelementptr inbounds %"class.v8::internal::compiler::CompilationDependency"*, %"class.v8::internal::compiler::CompilationDependency"** %794, i64 -2
  %799 = getelementptr inbounds %"class.v8::internal::compiler::CompilationDependency"*, %"class.v8::internal::compiler::CompilationDependency"** %798, i64 -1
  %800 = bitcast %"class.v8::internal::compiler::CompilationDependency"** %799 to <2 x i64>*
  %801 = load <2 x i64>, <2 x i64>* %800, align 8, !alias.scope !140
  %802 = getelementptr inbounds %"class.v8::internal::compiler::CompilationDependency"*, %"class.v8::internal::compiler::CompilationDependency"** %793, i64 -1
  %803 = bitcast %"class.v8::internal::compiler::CompilationDependency"** %802 to <2 x i64>*
  store <2 x i64> %797, <2 x i64>* %803, align 8, !alias.scope !143, !noalias !140
  %804 = getelementptr inbounds %"class.v8::internal::compiler::CompilationDependency"*, %"class.v8::internal::compiler::CompilationDependency"** %793, i64 -2
  %805 = getelementptr inbounds %"class.v8::internal::compiler::CompilationDependency"*, %"class.v8::internal::compiler::CompilationDependency"** %804, i64 -1
  %806 = bitcast %"class.v8::internal::compiler::CompilationDependency"** %805 to <2 x i64>*
  store <2 x i64> %801, <2 x i64>* %806, align 8, !alias.scope !143, !noalias !140
  %807 = sub nuw nsw i64 -4, %789
  %808 = sub nuw nsw i64 -4, %789
  %809 = getelementptr inbounds %"class.v8::internal::compiler::CompilationDependency"*, %"class.v8::internal::compiler::CompilationDependency"** %786, i64 %807
  %810 = getelementptr inbounds %"class.v8::internal::compiler::CompilationDependency"*, %"class.v8::internal::compiler::CompilationDependency"** %787, i64 %808
  %811 = getelementptr inbounds %"class.v8::internal::compiler::CompilationDependency"*, %"class.v8::internal::compiler::CompilationDependency"** %810, i64 -1
  %812 = bitcast %"class.v8::internal::compiler::CompilationDependency"** %811 to <2 x i64>*
  %813 = load <2 x i64>, <2 x i64>* %812, align 8, !alias.scope !140
  %814 = getelementptr inbounds %"class.v8::internal::compiler::CompilationDependency"*, %"class.v8::internal::compiler::CompilationDependency"** %810, i64 -2
  %815 = getelementptr inbounds %"class.v8::internal::compiler::CompilationDependency"*, %"class.v8::internal::compiler::CompilationDependency"** %814, i64 -1
  %816 = bitcast %"class.v8::internal::compiler::CompilationDependency"** %815 to <2 x i64>*
  %817 = load <2 x i64>, <2 x i64>* %816, align 8, !alias.scope !140
  %818 = getelementptr inbounds %"class.v8::internal::compiler::CompilationDependency"*, %"class.v8::internal::compiler::CompilationDependency"** %809, i64 -1
  %819 = bitcast %"class.v8::internal::compiler::CompilationDependency"** %818 to <2 x i64>*
  store <2 x i64> %813, <2 x i64>* %819, align 8, !alias.scope !143, !noalias !140
  %820 = getelementptr inbounds %"class.v8::internal::compiler::CompilationDependency"*, %"class.v8::internal::compiler::CompilationDependency"** %809, i64 -2
  %821 = getelementptr inbounds %"class.v8::internal::compiler::CompilationDependency"*, %"class.v8::internal::compiler::CompilationDependency"** %820, i64 -1
  %822 = bitcast %"class.v8::internal::compiler::CompilationDependency"** %821 to <2 x i64>*
  store <2 x i64> %817, <2 x i64>* %822, align 8, !alias.scope !143, !noalias !140
  %823 = add i64 %789, 8
  %824 = add i64 %790, -2
  %825 = icmp eq i64 %824, 0
  br i1 %825, label %826, label %788, !llvm.loop !145

826:                                              ; preds = %788, %771
  %827 = phi i64 [ 0, %771 ], [ %823, %788 ]
  %828 = icmp eq i64 %780, 0
  br i1 %828, label %848, label %829

829:                                              ; preds = %826
  %830 = sub i64 0, %827
  %831 = getelementptr %"class.v8::internal::compiler::CompilationDependency"*, %"class.v8::internal::compiler::CompilationDependency"** %740, i64 -1
  %832 = sub i64 0, %827
  %833 = getelementptr %"class.v8::internal::compiler::CompilationDependency"*, %"class.v8::internal::compiler::CompilationDependency"** %749, i64 -1
  %834 = getelementptr inbounds %"class.v8::internal::compiler::CompilationDependency"*, %"class.v8::internal::compiler::CompilationDependency"** %831, i64 %830
  %835 = getelementptr inbounds %"class.v8::internal::compiler::CompilationDependency"*, %"class.v8::internal::compiler::CompilationDependency"** %833, i64 %832
  %836 = getelementptr inbounds %"class.v8::internal::compiler::CompilationDependency"*, %"class.v8::internal::compiler::CompilationDependency"** %835, i64 -1
  %837 = bitcast %"class.v8::internal::compiler::CompilationDependency"** %836 to <2 x i64>*
  %838 = load <2 x i64>, <2 x i64>* %837, align 8, !alias.scope !140
  %839 = getelementptr inbounds %"class.v8::internal::compiler::CompilationDependency"*, %"class.v8::internal::compiler::CompilationDependency"** %835, i64 -2
  %840 = getelementptr inbounds %"class.v8::internal::compiler::CompilationDependency"*, %"class.v8::internal::compiler::CompilationDependency"** %839, i64 -1
  %841 = bitcast %"class.v8::internal::compiler::CompilationDependency"** %840 to <2 x i64>*
  %842 = load <2 x i64>, <2 x i64>* %841, align 8, !alias.scope !140
  %843 = getelementptr inbounds %"class.v8::internal::compiler::CompilationDependency"*, %"class.v8::internal::compiler::CompilationDependency"** %834, i64 -1
  %844 = bitcast %"class.v8::internal::compiler::CompilationDependency"** %843 to <2 x i64>*
  store <2 x i64> %838, <2 x i64>* %844, align 8, !alias.scope !143, !noalias !140
  %845 = getelementptr inbounds %"class.v8::internal::compiler::CompilationDependency"*, %"class.v8::internal::compiler::CompilationDependency"** %834, i64 -2
  %846 = getelementptr inbounds %"class.v8::internal::compiler::CompilationDependency"*, %"class.v8::internal::compiler::CompilationDependency"** %845, i64 -1
  %847 = bitcast %"class.v8::internal::compiler::CompilationDependency"** %846 to <2 x i64>*
  store <2 x i64> %842, <2 x i64>* %847, align 8, !alias.scope !143, !noalias !140
  br label %848

848:                                              ; preds = %826, %829
  %849 = icmp eq i64 %756, %772
  br i1 %849, label %920, label %850

850:                                              ; preds = %848, %758, %751
  %851 = phi %"class.v8::internal::compiler::CompilationDependency"** [ %740, %758 ], [ %740, %751 ], [ %774, %848 ]
  %852 = phi %"class.v8::internal::compiler::CompilationDependency"** [ %749, %758 ], [ %749, %751 ], [ %776, %848 ]
  %853 = getelementptr %"class.v8::internal::compiler::CompilationDependency"*, %"class.v8::internal::compiler::CompilationDependency"** %852, i64 -1
  %854 = ptrtoint %"class.v8::internal::compiler::CompilationDependency"** %853 to i64
  %855 = sub i64 %854, %748
  %856 = lshr i64 %855, 3
  %857 = add nuw nsw i64 %856, 1
  %858 = and i64 %857, 7
  %859 = icmp eq i64 %858, 0
  br i1 %859, label %871, label %860

860:                                              ; preds = %850, %860
  %861 = phi %"class.v8::internal::compiler::CompilationDependency"** [ %864, %860 ], [ %851, %850 ]
  %862 = phi %"class.v8::internal::compiler::CompilationDependency"** [ %865, %860 ], [ %852, %850 ]
  %863 = phi i64 [ %869, %860 ], [ %858, %850 ]
  %864 = getelementptr inbounds %"class.v8::internal::compiler::CompilationDependency"*, %"class.v8::internal::compiler::CompilationDependency"** %861, i64 -1
  %865 = getelementptr inbounds %"class.v8::internal::compiler::CompilationDependency"*, %"class.v8::internal::compiler::CompilationDependency"** %862, i64 -1
  %866 = bitcast %"class.v8::internal::compiler::CompilationDependency"** %865 to i64*
  %867 = load i64, i64* %866, align 8
  %868 = bitcast %"class.v8::internal::compiler::CompilationDependency"** %864 to i64*
  store i64 %867, i64* %868, align 8
  %869 = add i64 %863, -1
  %870 = icmp eq i64 %869, 0
  br i1 %870, label %871, label %860, !llvm.loop !146

871:                                              ; preds = %860, %850
  %872 = phi %"class.v8::internal::compiler::CompilationDependency"** [ undef, %850 ], [ %864, %860 ]
  %873 = phi %"class.v8::internal::compiler::CompilationDependency"** [ %851, %850 ], [ %864, %860 ]
  %874 = phi %"class.v8::internal::compiler::CompilationDependency"** [ %852, %850 ], [ %865, %860 ]
  %875 = icmp ult i64 %855, 56
  br i1 %875, label %920, label %876

876:                                              ; preds = %871, %876
  %877 = phi %"class.v8::internal::compiler::CompilationDependency"** [ %914, %876 ], [ %873, %871 ]
  %878 = phi %"class.v8::internal::compiler::CompilationDependency"** [ %915, %876 ], [ %874, %871 ]
  %879 = getelementptr inbounds %"class.v8::internal::compiler::CompilationDependency"*, %"class.v8::internal::compiler::CompilationDependency"** %877, i64 -1
  %880 = getelementptr inbounds %"class.v8::internal::compiler::CompilationDependency"*, %"class.v8::internal::compiler::CompilationDependency"** %878, i64 -1
  %881 = bitcast %"class.v8::internal::compiler::CompilationDependency"** %880 to i64*
  %882 = load i64, i64* %881, align 8
  %883 = bitcast %"class.v8::internal::compiler::CompilationDependency"** %879 to i64*
  store i64 %882, i64* %883, align 8
  %884 = getelementptr inbounds %"class.v8::internal::compiler::CompilationDependency"*, %"class.v8::internal::compiler::CompilationDependency"** %877, i64 -2
  %885 = getelementptr inbounds %"class.v8::internal::compiler::CompilationDependency"*, %"class.v8::internal::compiler::CompilationDependency"** %878, i64 -2
  %886 = bitcast %"class.v8::internal::compiler::CompilationDependency"** %885 to i64*
  %887 = load i64, i64* %886, align 8
  %888 = bitcast %"class.v8::internal::compiler::CompilationDependency"** %884 to i64*
  store i64 %887, i64* %888, align 8
  %889 = getelementptr inbounds %"class.v8::internal::compiler::CompilationDependency"*, %"class.v8::internal::compiler::CompilationDependency"** %877, i64 -3
  %890 = getelementptr inbounds %"class.v8::internal::compiler::CompilationDependency"*, %"class.v8::internal::compiler::CompilationDependency"** %878, i64 -3
  %891 = bitcast %"class.v8::internal::compiler::CompilationDependency"** %890 to i64*
  %892 = load i64, i64* %891, align 8
  %893 = bitcast %"class.v8::internal::compiler::CompilationDependency"** %889 to i64*
  store i64 %892, i64* %893, align 8
  %894 = getelementptr inbounds %"class.v8::internal::compiler::CompilationDependency"*, %"class.v8::internal::compiler::CompilationDependency"** %877, i64 -4
  %895 = getelementptr inbounds %"class.v8::internal::compiler::CompilationDependency"*, %"class.v8::internal::compiler::CompilationDependency"** %878, i64 -4
  %896 = bitcast %"class.v8::internal::compiler::CompilationDependency"** %895 to i64*
  %897 = load i64, i64* %896, align 8
  %898 = bitcast %"class.v8::internal::compiler::CompilationDependency"** %894 to i64*
  store i64 %897, i64* %898, align 8
  %899 = getelementptr inbounds %"class.v8::internal::compiler::CompilationDependency"*, %"class.v8::internal::compiler::CompilationDependency"** %877, i64 -5
  %900 = getelementptr inbounds %"class.v8::internal::compiler::CompilationDependency"*, %"class.v8::internal::compiler::CompilationDependency"** %878, i64 -5
  %901 = bitcast %"class.v8::internal::compiler::CompilationDependency"** %900 to i64*
  %902 = load i64, i64* %901, align 8
  %903 = bitcast %"class.v8::internal::compiler::CompilationDependency"** %899 to i64*
  store i64 %902, i64* %903, align 8
  %904 = getelementptr inbounds %"class.v8::internal::compiler::CompilationDependency"*, %"class.v8::internal::compiler::CompilationDependency"** %877, i64 -6
  %905 = getelementptr inbounds %"class.v8::internal::compiler::CompilationDependency"*, %"class.v8::internal::compiler::CompilationDependency"** %878, i64 -6
  %906 = bitcast %"class.v8::internal::compiler::CompilationDependency"** %905 to i64*
  %907 = load i64, i64* %906, align 8
  %908 = bitcast %"class.v8::internal::compiler::CompilationDependency"** %904 to i64*
  store i64 %907, i64* %908, align 8
  %909 = getelementptr inbounds %"class.v8::internal::compiler::CompilationDependency"*, %"class.v8::internal::compiler::CompilationDependency"** %877, i64 -7
  %910 = getelementptr inbounds %"class.v8::internal::compiler::CompilationDependency"*, %"class.v8::internal::compiler::CompilationDependency"** %878, i64 -7
  %911 = bitcast %"class.v8::internal::compiler::CompilationDependency"** %910 to i64*
  %912 = load i64, i64* %911, align 8
  %913 = bitcast %"class.v8::internal::compiler::CompilationDependency"** %909 to i64*
  store i64 %912, i64* %913, align 8
  %914 = getelementptr inbounds %"class.v8::internal::compiler::CompilationDependency"*, %"class.v8::internal::compiler::CompilationDependency"** %877, i64 -8
  %915 = getelementptr inbounds %"class.v8::internal::compiler::CompilationDependency"*, %"class.v8::internal::compiler::CompilationDependency"** %878, i64 -8
  %916 = bitcast %"class.v8::internal::compiler::CompilationDependency"** %915 to i64*
  %917 = load i64, i64* %916, align 8
  %918 = bitcast %"class.v8::internal::compiler::CompilationDependency"** %914 to i64*
  store i64 %917, i64* %918, align 8
  %919 = icmp eq %"class.v8::internal::compiler::CompilationDependency"** %915, %747
  br i1 %919, label %920, label %876, !llvm.loop !147

920:                                              ; preds = %871, %876, %848, %737
  %921 = phi %"class.v8::internal::compiler::CompilationDependency"** [ %740, %737 ], [ %774, %848 ], [ %872, %871 ], [ %914, %876 ]
  %922 = ptrtoint %"class.v8::internal::compiler::CompilationDependency"** %921 to i64
  store i64 %922, i64* %701, align 8
  store i64 %745, i64* %700, align 8
  store i64 %742, i64* %710, align 8
  br label %923

923:                                              ; preds = %693, %920
  %924 = bitcast %"class.v8::internal::Handle<v8::internal::FieldType>::ObjectRef"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %924) #8
  %925 = load i64, i64* %656, align 8
  %926 = getelementptr inbounds %"class.v8::internal::Handle<v8::internal::FieldType>::ObjectRef", %"class.v8::internal::Handle<v8::internal::FieldType>::ObjectRef"* %11, i64 0, i32 0, i32 0, i32 0, i32 0
  store i64 %925, i64* %926, align 8
  %927 = getelementptr inbounds %"class.v8::internal::Handle<v8::internal::FieldType>::ObjectRef", %"class.v8::internal::Handle<v8::internal::FieldType>::ObjectRef"* %11, i64 0, i32 0
  %928 = call zeroext i1 @_ZNK2v88internal9FieldType7IsClassEv(%"class.v8::internal::FieldType"* nonnull %927) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %924) #8
  br i1 %928, label %929, label %967

929:                                              ; preds = %923
  %930 = load %"class.v8::internal::compiler::JSHeapBroker"*, %"class.v8::internal::compiler::JSHeapBroker"** %15, align 8
  %931 = bitcast %"class.v8::internal::Handle<v8::internal::FieldType>::ObjectRef"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %931) #8
  %932 = load i64, i64* %656, align 8
  %933 = getelementptr inbounds %"class.v8::internal::Handle<v8::internal::FieldType>::ObjectRef", %"class.v8::internal::Handle<v8::internal::FieldType>::ObjectRef"* %12, i64 0, i32 0, i32 0, i32 0, i32 0
  store i64 %932, i64* %933, align 8
  %934 = getelementptr inbounds %"class.v8::internal::Handle<v8::internal::FieldType>::ObjectRef", %"class.v8::internal::Handle<v8::internal::FieldType>::ObjectRef"* %12, i64 0, i32 0
  %935 = call i64 @_ZNK2v88internal9FieldType7AsClassEv(%"class.v8::internal::FieldType"* nonnull %934) #8
  %936 = call i64* @_ZN2v88internal8compiler12JSHeapBroker25CanonicalPersistentHandleINS0_3MapEEENS0_6HandleIT_EES6_(%"class.v8::internal::compiler::JSHeapBroker"* %930, i64 %935)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %931) #8
  %937 = getelementptr inbounds %"class.v8::base::Optional.1270", %"class.v8::base::Optional.1270"* %13, i64 0, i32 0, i32 0, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %937) #8
  %938 = load %"class.v8::internal::compiler::JSHeapBroker"*, %"class.v8::internal::compiler::JSHeapBroker"** %15, align 8
  call void @_ZN2v88internal8compiler10TryMakeRefINS0_3MapEvEENS_4base8OptionalINS1_10ref_traitsIT_E8ref_typeEEEPNS1_12JSHeapBrokerENS0_6HandleIS7_EENS4_5FlagsINS1_19GetOrCreateDataFlagEiEE(%"class.v8::base::Optional.1270"* nonnull sret %13, %"class.v8::internal::compiler::JSHeapBroker"* %938, i64* %936, i32 0)
  %939 = load i8, i8* %937, align 8, !range !80
  %940 = icmp eq i8 %939, 0
  br i1 %940, label %948, label %941

941:                                              ; preds = %929
  %942 = getelementptr inbounds %"class.v8::base::Optional.1270", %"class.v8::base::Optional.1270"* %13, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  %943 = call i32 @_ZN2v88internal8compiler10BitsetType3LubINS1_6MapRefEEEjRKT_(%"class.v8::internal::compiler::MapRef"* dereferenceable(16) %942) #8
  %944 = call i32 @_ZN2v88internal8compiler10BitsetType15ExpandInternalsEj(i32 %943) #8
  %945 = or i32 %944, 1
  %946 = zext i32 %945 to i64
  %947 = ptrtoint i64* %936 to i64
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %937) #8
  br label %967

948:                                              ; preds = %929
  %949 = load i64, i64* %131, align 8, !noalias !148
  %950 = getelementptr inbounds %"class.v8::internal::compiler::PropertyAccessInfo", %"class.v8::internal::compiler::PropertyAccessInfo"* %0, i64 0, i32 0
  store i32 0, i32* %950, align 8, !alias.scope !151
  %951 = getelementptr inbounds %"class.v8::internal::compiler::PropertyAccessInfo", %"class.v8::internal::compiler::PropertyAccessInfo"* %0, i64 0, i32 1
  %952 = getelementptr inbounds %"class.v8::internal::compiler::PropertyAccessInfo", %"class.v8::internal::compiler::PropertyAccessInfo"* %0, i64 0, i32 1, i32 0, i32 0, i32 2, i32 1
  %953 = bitcast %"struct.std::__1::__compressed_pair_elem.0"* %952 to i64*
  %954 = bitcast %"class.v8::internal::ZoneVector"* %951 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %954, i8 0, i64 24, i1 false) #8, !alias.scope !151
  store i64 %949, i64* %953, align 8, !alias.scope !151
  %955 = getelementptr inbounds %"class.v8::internal::compiler::PropertyAccessInfo", %"class.v8::internal::compiler::PropertyAccessInfo"* %0, i64 0, i32 2, i32 0, i32 0
  %956 = getelementptr inbounds %"class.v8::internal::compiler::PropertyAccessInfo", %"class.v8::internal::compiler::PropertyAccessInfo"* %0, i64 0, i32 4, i32 0, i32 0, i32 2, i32 1
  %957 = bitcast %"struct.std::__1::__compressed_pair_elem.27"* %956 to i64*
  %958 = bitcast i64** %955 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %958, i8 0, i64 40, i1 false) #8, !alias.scope !151
  store i64 %949, i64* %957, align 8, !alias.scope !151
  %959 = getelementptr inbounds %"class.v8::internal::compiler::PropertyAccessInfo", %"class.v8::internal::compiler::PropertyAccessInfo"* %0, i64 0, i32 5, i32 0
  %960 = getelementptr inbounds %"class.v8::internal::compiler::PropertyAccessInfo", %"class.v8::internal::compiler::PropertyAccessInfo"* %0, i64 0, i32 8, i32 0
  %961 = bitcast i64** %959 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %961, i8 0, i64 17, i1 false) #8, !alias.scope !151
  store i64 1, i64* %960, align 8, !alias.scope !151
  %962 = getelementptr inbounds %"class.v8::internal::compiler::PropertyAccessInfo", %"class.v8::internal::compiler::PropertyAccessInfo"* %0, i64 0, i32 9, i32 0
  %963 = getelementptr inbounds %"class.v8::internal::compiler::PropertyAccessInfo", %"class.v8::internal::compiler::PropertyAccessInfo"* %0, i64 0, i32 11, i32 0
  %964 = bitcast i64** %962 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %964, i8 0, i64 16, i1 false) #8, !alias.scope !151
  store i64 -1, i64* %963, align 8, !alias.scope !151
  %965 = getelementptr inbounds %"class.v8::internal::compiler::PropertyAccessInfo", %"class.v8::internal::compiler::PropertyAccessInfo"* %0, i64 0, i32 12, i32 0
  store i64* null, i64** %965, align 8, !alias.scope !151
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %937) #8
  br label %1251

966:                                              ; preds = %155
  call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.5, i64 0, i64 0), i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.7, i64 0, i64 0)) #12
  unreachable

967:                                              ; preds = %155, %923, %941, %642, %415, %397, %170
  %968 = phi i64 [ 0, %170 ], [ 0, %397 ], [ 0, %415 ], [ 0, %642 ], [ %947, %941 ], [ 0, %923 ], [ 0, %155 ]
  %969 = phi i64 [ %159, %170 ], [ %159, %397 ], [ %404, %415 ], [ %404, %642 ], [ %946, %941 ], [ 209682431, %923 ], [ 209682431, %155 ]
  %970 = getelementptr inbounds %"class.v8::internal::compiler::AccessInfoFactory", %"class.v8::internal::compiler::AccessInfoFactory"* %1, i64 0, i32 1
  %971 = load %"class.v8::internal::compiler::CompilationDependencies"*, %"class.v8::internal::compiler::CompilationDependencies"** %970, align 8
  %972 = call %"class.v8::internal::compiler::CompilationDependency"* @_ZNK2v88internal8compiler23CompilationDependencies31FieldTypeDependencyOffTheRecordERKNS1_6MapRefENS0_13InternalIndexE(%"class.v8::internal::compiler::CompilationDependencies"* %971, %"class.v8::internal::compiler::MapRef"* dereferenceable(16) %135, i64 %5) #8
  %973 = ptrtoint %"class.v8::internal::compiler::CompilationDependency"* %972 to i64
  %974 = getelementptr inbounds %"class.v8::internal::ZoneVector.22", %"class.v8::internal::ZoneVector.22"* %10, i64 0, i32 0, i32 0, i32 1
  %975 = load %"class.v8::internal::compiler::CompilationDependency"**, %"class.v8::internal::compiler::CompilationDependency"*** %974, align 8
  %976 = getelementptr inbounds %"class.v8::internal::ZoneVector.22", %"class.v8::internal::ZoneVector.22"* %10, i64 0, i32 0, i32 0, i32 2, i32 0, i32 0
  %977 = load %"class.v8::internal::compiler::CompilationDependency"**, %"class.v8::internal::compiler::CompilationDependency"*** %976, align 8
  %978 = icmp ult %"class.v8::internal::compiler::CompilationDependency"** %975, %977
  %979 = ptrtoint %"class.v8::internal::compiler::CompilationDependency"** %977 to i64
  br i1 %978, label %980, label %985

980:                                              ; preds = %967
  %981 = bitcast %"class.v8::internal::compiler::CompilationDependency"** %975 to i64*
  store i64 %973, i64* %981, align 8
  %982 = getelementptr inbounds %"class.v8::internal::compiler::CompilationDependency"*, %"class.v8::internal::compiler::CompilationDependency"** %975, i64 1
  %983 = ptrtoint %"class.v8::internal::compiler::CompilationDependency"** %982 to i64
  %984 = bitcast %"class.v8::internal::compiler::CompilationDependency"*** %974 to i64*
  store i64 %983, i64* %984, align 8
  br label %1210

985:                                              ; preds = %967
  %986 = ptrtoint %"class.v8::internal::compiler::CompilationDependency"** %975 to i64
  %987 = bitcast %"class.v8::internal::compiler::CompilationDependency"*** %974 to i64*
  %988 = bitcast %"class.v8::internal::ZoneVector.22"* %10 to i64*
  %989 = load i64, i64* %988, align 8
  %990 = sub i64 %986, %989
  %991 = ashr exact i64 %990, 3
  %992 = add nsw i64 %991, 1
  %993 = icmp ugt i64 %992, 268435455
  br i1 %993, label %994, label %996

994:                                              ; preds = %985
  %995 = bitcast %"class.v8::internal::ZoneVector.22"* %10 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %995) #12
  unreachable

996:                                              ; preds = %985
  %997 = bitcast %"class.v8::internal::compiler::CompilationDependency"*** %976 to i64*
  %998 = sub i64 %979, %989
  %999 = ashr exact i64 %998, 3
  %1000 = icmp ult i64 %999, 134217727
  br i1 %1000, label %1001, label %1006

1001:                                             ; preds = %996
  %1002 = ashr exact i64 %998, 2
  %1003 = icmp ult i64 %1002, %992
  %1004 = select i1 %1003, i64 %992, i64 %1002
  %1005 = icmp eq i64 %1004, 0
  br i1 %1005, label %1024, label %1006

1006:                                             ; preds = %1001, %996
  %1007 = phi i64 [ %1004, %1001 ], [ 268435455, %996 ]
  %1008 = getelementptr inbounds %"class.v8::internal::ZoneVector.22", %"class.v8::internal::ZoneVector.22"* %10, i64 0, i32 0, i32 0, i32 2, i32 1, i32 0, i32 0
  %1009 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %1008, align 8
  %1010 = shl i64 %1007, 3
  %1011 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %1009, i64 0, i32 2
  %1012 = load i64, i64* %1011, align 8
  %1013 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %1009, i64 0, i32 3
  %1014 = load i64, i64* %1013, align 8
  %1015 = sub i64 %1014, %1012
  %1016 = icmp ugt i64 %1010, %1015
  br i1 %1016, label %1017, label %1019, !prof !2

1017:                                             ; preds = %1006
  %1018 = call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %1009, i64 %1010) #8
  br label %1021

1019:                                             ; preds = %1006
  %1020 = add i64 %1012, %1010
  store i64 %1020, i64* %1011, align 8
  br label %1021

1021:                                             ; preds = %1019, %1017
  %1022 = phi i64 [ %1018, %1017 ], [ %1012, %1019 ]
  %1023 = inttoptr i64 %1022 to %"class.v8::internal::compiler::CompilationDependency"**
  br label %1024

1024:                                             ; preds = %1021, %1001
  %1025 = phi i64 [ %1007, %1021 ], [ 0, %1001 ]
  %1026 = phi %"class.v8::internal::compiler::CompilationDependency"** [ %1023, %1021 ], [ null, %1001 ]
  %1027 = getelementptr inbounds %"class.v8::internal::compiler::CompilationDependency"*, %"class.v8::internal::compiler::CompilationDependency"** %1026, i64 %991
  %1028 = getelementptr inbounds %"class.v8::internal::compiler::CompilationDependency"*, %"class.v8::internal::compiler::CompilationDependency"** %1026, i64 %1025
  %1029 = ptrtoint %"class.v8::internal::compiler::CompilationDependency"** %1028 to i64
  %1030 = bitcast %"class.v8::internal::compiler::CompilationDependency"** %1027 to i64*
  store i64 %973, i64* %1030, align 8
  %1031 = getelementptr inbounds %"class.v8::internal::compiler::CompilationDependency"*, %"class.v8::internal::compiler::CompilationDependency"** %1027, i64 1
  %1032 = ptrtoint %"class.v8::internal::compiler::CompilationDependency"** %1031 to i64
  %1033 = getelementptr inbounds %"class.v8::internal::ZoneVector.22", %"class.v8::internal::ZoneVector.22"* %10, i64 0, i32 0, i32 0, i32 0
  %1034 = load %"class.v8::internal::compiler::CompilationDependency"**, %"class.v8::internal::compiler::CompilationDependency"*** %1033, align 8
  %1035 = ptrtoint %"class.v8::internal::compiler::CompilationDependency"** %1034 to i64
  %1036 = load %"class.v8::internal::compiler::CompilationDependency"**, %"class.v8::internal::compiler::CompilationDependency"*** %974, align 8
  %1037 = icmp eq %"class.v8::internal::compiler::CompilationDependency"** %1036, %1034
  br i1 %1037, label %1207, label %1038

1038:                                             ; preds = %1024
  %1039 = getelementptr %"class.v8::internal::compiler::CompilationDependency"*, %"class.v8::internal::compiler::CompilationDependency"** %1036, i64 -1
  %1040 = ptrtoint %"class.v8::internal::compiler::CompilationDependency"** %1039 to i64
  %1041 = sub i64 %1040, %1035
  %1042 = lshr i64 %1041, 3
  %1043 = add nuw nsw i64 %1042, 1
  %1044 = icmp ult i64 %1043, 4
  br i1 %1044, label %1137, label %1045

1045:                                             ; preds = %1038
  %1046 = getelementptr %"class.v8::internal::compiler::CompilationDependency"*, %"class.v8::internal::compiler::CompilationDependency"** %1036, i64 -1
  %1047 = ptrtoint %"class.v8::internal::compiler::CompilationDependency"** %1046 to i64
  %1048 = sub i64 %1047, %1035
  %1049 = lshr i64 %1048, 3
  %1050 = xor i64 %1049, -1
  %1051 = add nsw i64 %991, %1050
  %1052 = getelementptr %"class.v8::internal::compiler::CompilationDependency"*, %"class.v8::internal::compiler::CompilationDependency"** %1026, i64 %1051
  %1053 = xor i64 %1049, -1
  %1054 = getelementptr %"class.v8::internal::compiler::CompilationDependency"*, %"class.v8::internal::compiler::CompilationDependency"** %1036, i64 %1053
  %1055 = icmp ult %"class.v8::internal::compiler::CompilationDependency"** %1052, %1036
  %1056 = icmp ult %"class.v8::internal::compiler::CompilationDependency"** %1054, %1027
  %1057 = and i1 %1055, %1056
  br i1 %1057, label %1137, label %1058

1058:                                             ; preds = %1045
  %1059 = and i64 %1043, 4611686018427387900
  %1060 = sub nsw i64 0, %1059
  %1061 = getelementptr %"class.v8::internal::compiler::CompilationDependency"*, %"class.v8::internal::compiler::CompilationDependency"** %1027, i64 %1060
  %1062 = sub nsw i64 0, %1059
  %1063 = getelementptr %"class.v8::internal::compiler::CompilationDependency"*, %"class.v8::internal::compiler::CompilationDependency"** %1036, i64 %1062
  %1064 = add nsw i64 %1059, -4
  %1065 = lshr exact i64 %1064, 2
  %1066 = add nuw nsw i64 %1065, 1
  %1067 = and i64 %1066, 1
  %1068 = icmp eq i64 %1064, 0
  br i1 %1068, label %1115, label %1069

1069:                                             ; preds = %1058
  %1070 = sub nuw nsw i64 %1066, %1067
  %1071 = getelementptr %"class.v8::internal::compiler::CompilationDependency"*, %"class.v8::internal::compiler::CompilationDependency"** %1027, i64 -1
  %1072 = getelementptr %"class.v8::internal::compiler::CompilationDependency"*, %"class.v8::internal::compiler::CompilationDependency"** %1036, i64 -1
  %1073 = getelementptr %"class.v8::internal::compiler::CompilationDependency"*, %"class.v8::internal::compiler::CompilationDependency"** %1027, i64 -1
  %1074 = getelementptr %"class.v8::internal::compiler::CompilationDependency"*, %"class.v8::internal::compiler::CompilationDependency"** %1036, i64 -1
  br label %1075

1075:                                             ; preds = %1075, %1069
  %1076 = phi i64 [ 0, %1069 ], [ %1110, %1075 ]
  %1077 = phi i64 [ %1070, %1069 ], [ %1111, %1075 ]
  %1078 = sub i64 0, %1076
  %1079 = sub i64 0, %1076
  %1080 = getelementptr inbounds %"class.v8::internal::compiler::CompilationDependency"*, %"class.v8::internal::compiler::CompilationDependency"** %1071, i64 %1078
  %1081 = getelementptr inbounds %"class.v8::internal::compiler::CompilationDependency"*, %"class.v8::internal::compiler::CompilationDependency"** %1072, i64 %1079
  %1082 = getelementptr inbounds %"class.v8::internal::compiler::CompilationDependency"*, %"class.v8::internal::compiler::CompilationDependency"** %1081, i64 -1
  %1083 = bitcast %"class.v8::internal::compiler::CompilationDependency"** %1082 to <2 x i64>*
  %1084 = load <2 x i64>, <2 x i64>* %1083, align 8, !alias.scope !154
  %1085 = getelementptr inbounds %"class.v8::internal::compiler::CompilationDependency"*, %"class.v8::internal::compiler::CompilationDependency"** %1081, i64 -2
  %1086 = getelementptr inbounds %"class.v8::internal::compiler::CompilationDependency"*, %"class.v8::internal::compiler::CompilationDependency"** %1085, i64 -1
  %1087 = bitcast %"class.v8::internal::compiler::CompilationDependency"** %1086 to <2 x i64>*
  %1088 = load <2 x i64>, <2 x i64>* %1087, align 8, !alias.scope !154
  %1089 = getelementptr inbounds %"class.v8::internal::compiler::CompilationDependency"*, %"class.v8::internal::compiler::CompilationDependency"** %1080, i64 -1
  %1090 = bitcast %"class.v8::internal::compiler::CompilationDependency"** %1089 to <2 x i64>*
  store <2 x i64> %1084, <2 x i64>* %1090, align 8, !alias.scope !157, !noalias !154
  %1091 = getelementptr inbounds %"class.v8::internal::compiler::CompilationDependency"*, %"class.v8::internal::compiler::CompilationDependency"** %1080, i64 -2
  %1092 = getelementptr inbounds %"class.v8::internal::compiler::CompilationDependency"*, %"class.v8::internal::compiler::CompilationDependency"** %1091, i64 -1
  %1093 = bitcast %"class.v8::internal::compiler::CompilationDependency"** %1092 to <2 x i64>*
  store <2 x i64> %1088, <2 x i64>* %1093, align 8, !alias.scope !157, !noalias !154
  %1094 = sub nuw nsw i64 -4, %1076
  %1095 = sub nuw nsw i64 -4, %1076
  %1096 = getelementptr inbounds %"class.v8::internal::compiler::CompilationDependency"*, %"class.v8::internal::compiler::CompilationDependency"** %1073, i64 %1094
  %1097 = getelementptr inbounds %"class.v8::internal::compiler::CompilationDependency"*, %"class.v8::internal::compiler::CompilationDependency"** %1074, i64 %1095
  %1098 = getelementptr inbounds %"class.v8::internal::compiler::CompilationDependency"*, %"class.v8::internal::compiler::CompilationDependency"** %1097, i64 -1
  %1099 = bitcast %"class.v8::internal::compiler::CompilationDependency"** %1098 to <2 x i64>*
  %1100 = load <2 x i64>, <2 x i64>* %1099, align 8, !alias.scope !154
  %1101 = getelementptr inbounds %"class.v8::internal::compiler::CompilationDependency"*, %"class.v8::internal::compiler::CompilationDependency"** %1097, i64 -2
  %1102 = getelementptr inbounds %"class.v8::internal::compiler::CompilationDependency"*, %"class.v8::internal::compiler::CompilationDependency"** %1101, i64 -1
  %1103 = bitcast %"class.v8::internal::compiler::CompilationDependency"** %1102 to <2 x i64>*
  %1104 = load <2 x i64>, <2 x i64>* %1103, align 8, !alias.scope !154
  %1105 = getelementptr inbounds %"class.v8::internal::compiler::CompilationDependency"*, %"class.v8::internal::compiler::CompilationDependency"** %1096, i64 -1
  %1106 = bitcast %"class.v8::internal::compiler::CompilationDependency"** %1105 to <2 x i64>*
  store <2 x i64> %1100, <2 x i64>* %1106, align 8, !alias.scope !157, !noalias !154
  %1107 = getelementptr inbounds %"class.v8::internal::compiler::CompilationDependency"*, %"class.v8::internal::compiler::CompilationDependency"** %1096, i64 -2
  %1108 = getelementptr inbounds %"class.v8::internal::compiler::CompilationDependency"*, %"class.v8::internal::compiler::CompilationDependency"** %1107, i64 -1
  %1109 = bitcast %"class.v8::internal::compiler::CompilationDependency"** %1108 to <2 x i64>*
  store <2 x i64> %1104, <2 x i64>* %1109, align 8, !alias.scope !157, !noalias !154
  %1110 = add i64 %1076, 8
  %1111 = add i64 %1077, -2
  %1112 = icmp eq i64 %1111, 0
  br i1 %1112, label %1113, label %1075, !llvm.loop !159

1113:                                             ; preds = %1075
  %1114 = sub nuw nsw i64 -8, %1076
  br label %1115

1115:                                             ; preds = %1113, %1058
  %1116 = phi i64 [ 0, %1058 ], [ %1114, %1113 ]
  %1117 = icmp eq i64 %1067, 0
  br i1 %1117, label %1135, label %1118

1118:                                             ; preds = %1115
  %1119 = getelementptr %"class.v8::internal::compiler::CompilationDependency"*, %"class.v8::internal::compiler::CompilationDependency"** %1027, i64 -1
  %1120 = getelementptr %"class.v8::internal::compiler::CompilationDependency"*, %"class.v8::internal::compiler::CompilationDependency"** %1036, i64 -1
  %1121 = getelementptr inbounds %"class.v8::internal::compiler::CompilationDependency"*, %"class.v8::internal::compiler::CompilationDependency"** %1119, i64 %1116
  %1122 = getelementptr inbounds %"class.v8::internal::compiler::CompilationDependency"*, %"class.v8::internal::compiler::CompilationDependency"** %1120, i64 %1116
  %1123 = getelementptr inbounds %"class.v8::internal::compiler::CompilationDependency"*, %"class.v8::internal::compiler::CompilationDependency"** %1122, i64 -1
  %1124 = bitcast %"class.v8::internal::compiler::CompilationDependency"** %1123 to <2 x i64>*
  %1125 = load <2 x i64>, <2 x i64>* %1124, align 8, !alias.scope !154
  %1126 = getelementptr inbounds %"class.v8::internal::compiler::CompilationDependency"*, %"class.v8::internal::compiler::CompilationDependency"** %1122, i64 -2
  %1127 = getelementptr inbounds %"class.v8::internal::compiler::CompilationDependency"*, %"class.v8::internal::compiler::CompilationDependency"** %1126, i64 -1
  %1128 = bitcast %"class.v8::internal::compiler::CompilationDependency"** %1127 to <2 x i64>*
  %1129 = load <2 x i64>, <2 x i64>* %1128, align 8, !alias.scope !154
  %1130 = getelementptr inbounds %"class.v8::internal::compiler::CompilationDependency"*, %"class.v8::internal::compiler::CompilationDependency"** %1121, i64 -1
  %1131 = bitcast %"class.v8::internal::compiler::CompilationDependency"** %1130 to <2 x i64>*
  store <2 x i64> %1125, <2 x i64>* %1131, align 8, !alias.scope !157, !noalias !154
  %1132 = getelementptr inbounds %"class.v8::internal::compiler::CompilationDependency"*, %"class.v8::internal::compiler::CompilationDependency"** %1121, i64 -2
  %1133 = getelementptr inbounds %"class.v8::internal::compiler::CompilationDependency"*, %"class.v8::internal::compiler::CompilationDependency"** %1132, i64 -1
  %1134 = bitcast %"class.v8::internal::compiler::CompilationDependency"** %1133 to <2 x i64>*
  store <2 x i64> %1129, <2 x i64>* %1134, align 8, !alias.scope !157, !noalias !154
  br label %1135

1135:                                             ; preds = %1115, %1118
  %1136 = icmp eq i64 %1043, %1059
  br i1 %1136, label %1207, label %1137

1137:                                             ; preds = %1135, %1045, %1038
  %1138 = phi %"class.v8::internal::compiler::CompilationDependency"** [ %1027, %1045 ], [ %1027, %1038 ], [ %1061, %1135 ]
  %1139 = phi %"class.v8::internal::compiler::CompilationDependency"** [ %1036, %1045 ], [ %1036, %1038 ], [ %1063, %1135 ]
  %1140 = getelementptr %"class.v8::internal::compiler::CompilationDependency"*, %"class.v8::internal::compiler::CompilationDependency"** %1139, i64 -1
  %1141 = ptrtoint %"class.v8::internal::compiler::CompilationDependency"** %1140 to i64
  %1142 = sub i64 %1141, %1035
  %1143 = lshr i64 %1142, 3
  %1144 = add nuw nsw i64 %1143, 1
  %1145 = and i64 %1144, 7
  %1146 = icmp eq i64 %1145, 0
  br i1 %1146, label %1158, label %1147

1147:                                             ; preds = %1137, %1147
  %1148 = phi %"class.v8::internal::compiler::CompilationDependency"** [ %1151, %1147 ], [ %1138, %1137 ]
  %1149 = phi %"class.v8::internal::compiler::CompilationDependency"** [ %1152, %1147 ], [ %1139, %1137 ]
  %1150 = phi i64 [ %1156, %1147 ], [ %1145, %1137 ]
  %1151 = getelementptr inbounds %"class.v8::internal::compiler::CompilationDependency"*, %"class.v8::internal::compiler::CompilationDependency"** %1148, i64 -1
  %1152 = getelementptr inbounds %"class.v8::internal::compiler::CompilationDependency"*, %"class.v8::internal::compiler::CompilationDependency"** %1149, i64 -1
  %1153 = bitcast %"class.v8::internal::compiler::CompilationDependency"** %1152 to i64*
  %1154 = load i64, i64* %1153, align 8
  %1155 = bitcast %"class.v8::internal::compiler::CompilationDependency"** %1151 to i64*
  store i64 %1154, i64* %1155, align 8
  %1156 = add i64 %1150, -1
  %1157 = icmp eq i64 %1156, 0
  br i1 %1157, label %1158, label %1147, !llvm.loop !160

1158:                                             ; preds = %1147, %1137
  %1159 = phi %"class.v8::internal::compiler::CompilationDependency"** [ undef, %1137 ], [ %1151, %1147 ]
  %1160 = phi %"class.v8::internal::compiler::CompilationDependency"** [ %1138, %1137 ], [ %1151, %1147 ]
  %1161 = phi %"class.v8::internal::compiler::CompilationDependency"** [ %1139, %1137 ], [ %1152, %1147 ]
  %1162 = icmp ult i64 %1142, 56
  br i1 %1162, label %1207, label %1163

1163:                                             ; preds = %1158, %1163
  %1164 = phi %"class.v8::internal::compiler::CompilationDependency"** [ %1201, %1163 ], [ %1160, %1158 ]
  %1165 = phi %"class.v8::internal::compiler::CompilationDependency"** [ %1202, %1163 ], [ %1161, %1158 ]
  %1166 = getelementptr inbounds %"class.v8::internal::compiler::CompilationDependency"*, %"class.v8::internal::compiler::CompilationDependency"** %1164, i64 -1
  %1167 = getelementptr inbounds %"class.v8::internal::compiler::CompilationDependency"*, %"class.v8::internal::compiler::CompilationDependency"** %1165, i64 -1
  %1168 = bitcast %"class.v8::internal::compiler::CompilationDependency"** %1167 to i64*
  %1169 = load i64, i64* %1168, align 8
  %1170 = bitcast %"class.v8::internal::compiler::CompilationDependency"** %1166 to i64*
  store i64 %1169, i64* %1170, align 8
  %1171 = getelementptr inbounds %"class.v8::internal::compiler::CompilationDependency"*, %"class.v8::internal::compiler::CompilationDependency"** %1164, i64 -2
  %1172 = getelementptr inbounds %"class.v8::internal::compiler::CompilationDependency"*, %"class.v8::internal::compiler::CompilationDependency"** %1165, i64 -2
  %1173 = bitcast %"class.v8::internal::compiler::CompilationDependency"** %1172 to i64*
  %1174 = load i64, i64* %1173, align 8
  %1175 = bitcast %"class.v8::internal::compiler::CompilationDependency"** %1171 to i64*
  store i64 %1174, i64* %1175, align 8
  %1176 = getelementptr inbounds %"class.v8::internal::compiler::CompilationDependency"*, %"class.v8::internal::compiler::CompilationDependency"** %1164, i64 -3
  %1177 = getelementptr inbounds %"class.v8::internal::compiler::CompilationDependency"*, %"class.v8::internal::compiler::CompilationDependency"** %1165, i64 -3
  %1178 = bitcast %"class.v8::internal::compiler::CompilationDependency"** %1177 to i64*
  %1179 = load i64, i64* %1178, align 8
  %1180 = bitcast %"class.v8::internal::compiler::CompilationDependency"** %1176 to i64*
  store i64 %1179, i64* %1180, align 8
  %1181 = getelementptr inbounds %"class.v8::internal::compiler::CompilationDependency"*, %"class.v8::internal::compiler::CompilationDependency"** %1164, i64 -4
  %1182 = getelementptr inbounds %"class.v8::internal::compiler::CompilationDependency"*, %"class.v8::internal::compiler::CompilationDependency"** %1165, i64 -4
  %1183 = bitcast %"class.v8::internal::compiler::CompilationDependency"** %1182 to i64*
  %1184 = load i64, i64* %1183, align 8
  %1185 = bitcast %"class.v8::internal::compiler::CompilationDependency"** %1181 to i64*
  store i64 %1184, i64* %1185, align 8
  %1186 = getelementptr inbounds %"class.v8::internal::compiler::CompilationDependency"*, %"class.v8::internal::compiler::CompilationDependency"** %1164, i64 -5
  %1187 = getelementptr inbounds %"class.v8::internal::compiler::CompilationDependency"*, %"class.v8::internal::compiler::CompilationDependency"** %1165, i64 -5
  %1188 = bitcast %"class.v8::internal::compiler::CompilationDependency"** %1187 to i64*
  %1189 = load i64, i64* %1188, align 8
  %1190 = bitcast %"class.v8::internal::compiler::CompilationDependency"** %1186 to i64*
  store i64 %1189, i64* %1190, align 8
  %1191 = getelementptr inbounds %"class.v8::internal::compiler::CompilationDependency"*, %"class.v8::internal::compiler::CompilationDependency"** %1164, i64 -6
  %1192 = getelementptr inbounds %"class.v8::internal::compiler::CompilationDependency"*, %"class.v8::internal::compiler::CompilationDependency"** %1165, i64 -6
  %1193 = bitcast %"class.v8::internal::compiler::CompilationDependency"** %1192 to i64*
  %1194 = load i64, i64* %1193, align 8
  %1195 = bitcast %"class.v8::internal::compiler::CompilationDependency"** %1191 to i64*
  store i64 %1194, i64* %1195, align 8
  %1196 = getelementptr inbounds %"class.v8::internal::compiler::CompilationDependency"*, %"class.v8::internal::compiler::CompilationDependency"** %1164, i64 -7
  %1197 = getelementptr inbounds %"class.v8::internal::compiler::CompilationDependency"*, %"class.v8::internal::compiler::CompilationDependency"** %1165, i64 -7
  %1198 = bitcast %"class.v8::internal::compiler::CompilationDependency"** %1197 to i64*
  %1199 = load i64, i64* %1198, align 8
  %1200 = bitcast %"class.v8::internal::compiler::CompilationDependency"** %1196 to i64*
  store i64 %1199, i64* %1200, align 8
  %1201 = getelementptr inbounds %"class.v8::internal::compiler::CompilationDependency"*, %"class.v8::internal::compiler::CompilationDependency"** %1164, i64 -8
  %1202 = getelementptr inbounds %"class.v8::internal::compiler::CompilationDependency"*, %"class.v8::internal::compiler::CompilationDependency"** %1165, i64 -8
  %1203 = bitcast %"class.v8::internal::compiler::CompilationDependency"** %1202 to i64*
  %1204 = load i64, i64* %1203, align 8
  %1205 = bitcast %"class.v8::internal::compiler::CompilationDependency"** %1201 to i64*
  store i64 %1204, i64* %1205, align 8
  %1206 = icmp eq %"class.v8::internal::compiler::CompilationDependency"** %1202, %1034
  br i1 %1206, label %1207, label %1163, !llvm.loop !161

1207:                                             ; preds = %1158, %1163, %1135, %1024
  %1208 = phi %"class.v8::internal::compiler::CompilationDependency"** [ %1027, %1024 ], [ %1061, %1135 ], [ %1159, %1158 ], [ %1201, %1163 ]
  %1209 = ptrtoint %"class.v8::internal::compiler::CompilationDependency"** %1208 to i64
  store i64 %1209, i64* %988, align 8
  store i64 %1032, i64* %987, align 8
  store i64 %1029, i64* %997, align 8
  br label %1210

1210:                                             ; preds = %980, %1207
  %1211 = and i32 %32, 80
  %1212 = icmp eq i32 %1211, 80
  br i1 %1212, label %1231, label %1213

1213:                                             ; preds = %1210
  %1214 = load %"class.v8::internal::compiler::JSHeapBroker"*, %"class.v8::internal::compiler::JSHeapBroker"** %15, align 8
  %1215 = getelementptr inbounds %"class.v8::internal::compiler::JSHeapBroker", %"class.v8::internal::compiler::JSHeapBroker"* %1214, i64 0, i32 11
  %1216 = load i32, i32* %1215, align 8
  %1217 = icmp eq i32 %1216, 12
  br i1 %1217, label %1218, label %1228

1218:                                             ; preds = %1213
  %1219 = load i64, i64* %3, align 8
  %1220 = add i64 %1219, 11
  %1221 = inttoptr i64 %1220 to i32*
  %1222 = load atomic i32, i32* %1221 acquire, align 4
  %1223 = and i32 %1222, 1048576
  %1224 = icmp ne i32 %1223, 0
  %1225 = add i32 %6, -1
  %1226 = icmp ult i32 %1225, 2
  %1227 = or i1 %1226, %1224
  br i1 %1227, label %1228, label %1231

1228:                                             ; preds = %1213, %1218
  %1229 = load %"class.v8::internal::compiler::CompilationDependencies"*, %"class.v8::internal::compiler::CompilationDependencies"** %970, align 8
  %1230 = call i32 @_ZN2v88internal8compiler23CompilationDependencies22DependOnFieldConstnessERKNS1_6MapRefENS0_13InternalIndexE(%"class.v8::internal::compiler::CompilationDependencies"* %1229, %"class.v8::internal::compiler::MapRef"* dereferenceable(16) %135, i64 %5) #8
  br label %1231

1231:                                             ; preds = %1210, %1218, %1228
  %1232 = phi i32 [ %1230, %1228 ], [ 1, %1210 ], [ 0, %1218 ]
  %1233 = load %"class.v8::internal::compiler::JSHeapBroker"*, %"class.v8::internal::compiler::JSHeapBroker"** %15, align 8
  %1234 = bitcast %"class.v8::internal::Handle<v8::internal::Map>::ObjectRef"* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %1234) #8
  %1235 = load i64, i64* %3, align 8
  %1236 = getelementptr inbounds %"class.v8::internal::Handle<v8::internal::Map>::ObjectRef", %"class.v8::internal::Handle<v8::internal::Map>::ObjectRef"* %14, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i64 %1235, i64* %1236, align 8
  %1237 = getelementptr inbounds %"class.v8::internal::Handle<v8::internal::Map>::ObjectRef", %"class.v8::internal::Handle<v8::internal::Map>::ObjectRef"* %14, i64 0, i32 0
  %1238 = getelementptr inbounds %"class.v8::internal::compiler::JSHeapBroker", %"class.v8::internal::compiler::JSHeapBroker"* %1233, i64 0, i32 0
  %1239 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %1238, align 8
  %1240 = call i64 @_ZNK2v88internal3Map14FindFieldOwnerEPNS0_7IsolateENS0_13InternalIndexE(%"class.v8::internal::Map"* nonnull %1237, %"class.v8::internal::Isolate"* %1239, i64 %5) #8
  %1241 = call i64* @_ZN2v88internal8compiler12JSHeapBroker25CanonicalPersistentHandleINS0_3MapEEENS0_6HandleIT_EES6_(%"class.v8::internal::compiler::JSHeapBroker"* %1233, i64 %1240)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1234) #8
  switch i32 %1232, label %1250 [
    i32 0, label %1242
    i32 1, label %1246
  ]

1242:                                             ; preds = %1231
  %1243 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %130, align 8
  %1244 = ptrtoint i64* %1241 to i64
  %1245 = ptrtoint i64* %4 to i64
  call void @_ZN2v88internal8compiler18PropertyAccessInfo9DataFieldEPNS0_4ZoneENS0_6HandleINS0_3MapEEEONS0_10ZoneVectorIPKNS1_21CompilationDependencyEEENS0_10FieldIndexENS0_14RepresentationENS1_4TypeES7_NS0_11MaybeHandleIS6_EENSH_INS0_8JSObjectEEESI_(%"class.v8::internal::compiler::PropertyAccessInfo"* sret %0, %"class.v8::internal::Zone"* %1243, i64* %2, %"class.v8::internal::ZoneVector.22"* nonnull dereferenceable(32) %10, i64 %103, i8 %38, i64 %969, i64 %1244, i64 %968, i64 %1245, i64 0)
  br label %1251

1246:                                             ; preds = %1231
  %1247 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %130, align 8
  %1248 = ptrtoint i64* %1241 to i64
  %1249 = ptrtoint i64* %4 to i64
  call void @_ZN2v88internal8compiler18PropertyAccessInfo16FastDataConstantEPNS0_4ZoneENS0_6HandleINS0_3MapEEEONS0_10ZoneVectorIPKNS1_21CompilationDependencyEEENS0_10FieldIndexENS0_14RepresentationENS1_4TypeES7_NS0_11MaybeHandleIS6_EENSH_INS0_8JSObjectEEESI_(%"class.v8::internal::compiler::PropertyAccessInfo"* sret %0, %"class.v8::internal::Zone"* %1247, i64* %2, %"class.v8::internal::ZoneVector.22"* nonnull dereferenceable(32) %10, i64 %103, i8 %38, i64 %969, i64 %1248, i64 %968, i64 %1249, i64 0)
  br label %1251

1250:                                             ; preds = %1231
  call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.4, i64 0, i64 0)) #12
  unreachable

1251:                                             ; preds = %664, %948, %1242, %1246, %137
  %1252 = getelementptr inbounds %"class.v8::internal::ZoneVector.22", %"class.v8::internal::ZoneVector.22"* %10, i64 0, i32 0, i32 0, i32 0
  %1253 = load %"class.v8::internal::compiler::CompilationDependency"**, %"class.v8::internal::compiler::CompilationDependency"*** %1252, align 8
  %1254 = icmp eq %"class.v8::internal::compiler::CompilationDependency"** %1253, null
  br i1 %1254, label %1259, label %1255

1255:                                             ; preds = %1251
  %1256 = ptrtoint %"class.v8::internal::compiler::CompilationDependency"** %1253 to i64
  %1257 = getelementptr inbounds %"class.v8::internal::ZoneVector.22", %"class.v8::internal::ZoneVector.22"* %10, i64 0, i32 0, i32 0, i32 1
  %1258 = bitcast %"class.v8::internal::compiler::CompilationDependency"*** %1257 to i64*
  store i64 %1256, i64* %1258, align 8
  br label %1259

1259:                                             ; preds = %1251, %1255
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %129) #8
  br label %1260

1260:                                             ; preds = %1259, %108
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %104) #8
  br label %1261

1261:                                             ; preds = %1260, %40
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64* @_ZN2v88internal8compiler12JSHeapBroker25CanonicalPersistentHandleINS0_15DescriptorArrayEEENS0_6HandleIT_EES6_(%"class.v8::internal::compiler::JSHeapBroker"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca i16, align 2
  %4 = getelementptr inbounds %"class.v8::internal::compiler::JSHeapBroker", %"class.v8::internal::compiler::JSHeapBroker"* %0, i64 0, i32 15, i32 0, i32 0, i32 0
  %5 = load %"class.v8::internal::IdentityMap"*, %"class.v8::internal::IdentityMap"** %4, align 8
  %6 = icmp eq %"class.v8::internal::IdentityMap"* %5, null
  br i1 %6, label %46, label %7

7:                                                ; preds = %2
  %8 = bitcast %"class.v8::internal::IdentityMap"* %5 to %"class.v8::internal::IdentityMapBase"*
  %9 = and i64 %1, 3
  %10 = icmp eq i64 %9, 1
  br i1 %10, label %11, label %24

11:                                               ; preds = %7
  %12 = bitcast i16* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 2, i8* nonnull %12) #8
  %13 = getelementptr inbounds %"class.v8::internal::compiler::JSHeapBroker", %"class.v8::internal::compiler::JSHeapBroker"* %0, i64 0, i32 4
  %14 = call zeroext i1 @_ZNK2v88internal12RootIndexMap6LookupEmPNS0_9RootIndexE(%"class.v8::internal::RootIndexMap"* %13, i64 %1, i16* nonnull %3) #8
  br i1 %14, label %15, label %21

15:                                               ; preds = %11
  %16 = getelementptr inbounds %"class.v8::internal::compiler::JSHeapBroker", %"class.v8::internal::compiler::JSHeapBroker"* %0, i64 0, i32 0
  %17 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %16, align 8
  %18 = load i16, i16* %3, align 2
  %19 = zext i16 %18 to i64
  %20 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %17, i64 0, i32 0, i32 7, i32 0, i64 %19
  call void @llvm.lifetime.end.p0i8(i64 2, i8* nonnull %12) #8
  br label %67

21:                                               ; preds = %11
  call void @llvm.lifetime.end.p0i8(i64 2, i8* nonnull %12) #8
  %22 = bitcast %"class.v8::internal::IdentityMap"** %4 to %"class.v8::internal::IdentityMapBase"**
  %23 = load %"class.v8::internal::IdentityMapBase"*, %"class.v8::internal::IdentityMapBase"** %22, align 8
  br label %24

24:                                               ; preds = %7, %21
  %25 = phi %"class.v8::internal::IdentityMapBase"* [ %23, %21 ], [ %8, %7 ]
  %26 = call { i64*, i8 } @_ZN2v88internal15IdentityMapBase17FindOrInsertEntryEm(%"class.v8::internal::IdentityMapBase"* %25, i64 %1) #8
  %27 = extractvalue { i64*, i8 } %26, 0
  %28 = extractvalue { i64*, i8 } %26, 1
  %29 = bitcast i64* %27 to i64**
  %30 = and i8 %28, 1
  %31 = icmp eq i8 %30, 0
  br i1 %31, label %34, label %32

32:                                               ; preds = %24
  %33 = load i64*, i64** %29, align 8
  br label %67

34:                                               ; preds = %24
  %35 = getelementptr inbounds %"class.v8::internal::compiler::JSHeapBroker", %"class.v8::internal::compiler::JSHeapBroker"* %0, i64 0, i32 14
  %36 = load %"class.v8::internal::LocalIsolate"*, %"class.v8::internal::LocalIsolate"** %35, align 8
  %37 = getelementptr inbounds %"class.v8::internal::LocalIsolate", %"class.v8::internal::LocalIsolate"* %36, i64 0, i32 1, i32 8, i32 0, i32 0, i32 0
  %38 = load %"class.v8::internal::PersistentHandles"*, %"class.v8::internal::PersistentHandles"** %37, align 8
  %39 = icmp eq %"class.v8::internal::PersistentHandles"* %38, null
  br i1 %39, label %40, label %43

40:                                               ; preds = %34
  %41 = getelementptr inbounds %"class.v8::internal::LocalIsolate", %"class.v8::internal::LocalIsolate"* %36, i64 0, i32 1
  call void @_ZN2v88internal9LocalHeap23EnsurePersistentHandlesEv(%"class.v8::internal::LocalHeap"* %41) #8
  %42 = load %"class.v8::internal::PersistentHandles"*, %"class.v8::internal::PersistentHandles"** %37, align 8
  br label %43

43:                                               ; preds = %34, %40
  %44 = phi %"class.v8::internal::PersistentHandles"* [ %38, %34 ], [ %42, %40 ]
  %45 = call i64* @_ZN2v88internal17PersistentHandles9GetHandleEm(%"class.v8::internal::PersistentHandles"* %44, i64 %1) #8
  store i64* %45, i64** %29, align 8
  br label %67

46:                                               ; preds = %2
  %47 = getelementptr inbounds %"class.v8::internal::compiler::JSHeapBroker", %"class.v8::internal::compiler::JSHeapBroker"* %0, i64 0, i32 0
  %48 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %47, align 8
  %49 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %48, i64 0, i32 31, i32 4
  %50 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %49, align 8
  %51 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %50, null
  br i1 %51, label %54, label %52

52:                                               ; preds = %46
  %53 = tail call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %50, i64 %1) #8
  br label %67

54:                                               ; preds = %46
  %55 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %48, i64 0, i32 31, i32 0
  %56 = load i64*, i64** %55, align 8
  %57 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %48, i64 0, i32 31, i32 1
  %58 = load i64*, i64** %57, align 8
  %59 = icmp eq i64* %56, %58
  br i1 %59, label %60, label %62

60:                                               ; preds = %54
  %61 = tail call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %48) #8
  br label %62

62:                                               ; preds = %60, %54
  %63 = phi i64* [ %61, %60 ], [ %56, %54 ]
  %64 = ptrtoint i64* %63 to i64
  %65 = add i64 %64, 8
  %66 = inttoptr i64 %65 to i64*
  store i64* %66, i64** %55, align 8
  store i64 %1, i64* %63, align 8
  br label %67

67:                                               ; preds = %43, %32, %62, %52, %15
  %68 = phi i64* [ %20, %15 ], [ %53, %52 ], [ %63, %62 ], [ %33, %32 ], [ %45, %43 ]
  ret i64* %68
}

declare zeroext i1 @_ZN2v88internal8compiler6MapRef25TrySerializeOwnDescriptorENS0_13InternalIndexE(%"class.v8::internal::compiler::MapRef"*, i64) local_unnamed_addr #4

declare %"class.v8::internal::compiler::CompilationDependency"* @_ZNK2v88internal8compiler23CompilationDependencies41FieldRepresentationDependencyOffTheRecordERKNS1_6MapRefENS0_13InternalIndexE(%"class.v8::internal::compiler::CompilationDependencies"*, %"class.v8::internal::compiler::MapRef"* dereferenceable(16), i64) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64* @_ZN2v88internal8compiler12JSHeapBroker25CanonicalPersistentHandleINS0_9FieldTypeEEENS0_6HandleIT_EES6_(%"class.v8::internal::compiler::JSHeapBroker"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca i16, align 2
  %4 = getelementptr inbounds %"class.v8::internal::compiler::JSHeapBroker", %"class.v8::internal::compiler::JSHeapBroker"* %0, i64 0, i32 15, i32 0, i32 0, i32 0
  %5 = load %"class.v8::internal::IdentityMap"*, %"class.v8::internal::IdentityMap"** %4, align 8
  %6 = icmp eq %"class.v8::internal::IdentityMap"* %5, null
  br i1 %6, label %46, label %7

7:                                                ; preds = %2
  %8 = bitcast %"class.v8::internal::IdentityMap"* %5 to %"class.v8::internal::IdentityMapBase"*
  %9 = and i64 %1, 3
  %10 = icmp eq i64 %9, 1
  br i1 %10, label %11, label %24

11:                                               ; preds = %7
  %12 = bitcast i16* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 2, i8* nonnull %12) #8
  %13 = getelementptr inbounds %"class.v8::internal::compiler::JSHeapBroker", %"class.v8::internal::compiler::JSHeapBroker"* %0, i64 0, i32 4
  %14 = call zeroext i1 @_ZNK2v88internal12RootIndexMap6LookupEmPNS0_9RootIndexE(%"class.v8::internal::RootIndexMap"* %13, i64 %1, i16* nonnull %3) #8
  br i1 %14, label %15, label %21

15:                                               ; preds = %11
  %16 = getelementptr inbounds %"class.v8::internal::compiler::JSHeapBroker", %"class.v8::internal::compiler::JSHeapBroker"* %0, i64 0, i32 0
  %17 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %16, align 8
  %18 = load i16, i16* %3, align 2
  %19 = zext i16 %18 to i64
  %20 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %17, i64 0, i32 0, i32 7, i32 0, i64 %19
  call void @llvm.lifetime.end.p0i8(i64 2, i8* nonnull %12) #8
  br label %67

21:                                               ; preds = %11
  call void @llvm.lifetime.end.p0i8(i64 2, i8* nonnull %12) #8
  %22 = bitcast %"class.v8::internal::IdentityMap"** %4 to %"class.v8::internal::IdentityMapBase"**
  %23 = load %"class.v8::internal::IdentityMapBase"*, %"class.v8::internal::IdentityMapBase"** %22, align 8
  br label %24

24:                                               ; preds = %7, %21
  %25 = phi %"class.v8::internal::IdentityMapBase"* [ %23, %21 ], [ %8, %7 ]
  %26 = call { i64*, i8 } @_ZN2v88internal15IdentityMapBase17FindOrInsertEntryEm(%"class.v8::internal::IdentityMapBase"* %25, i64 %1) #8
  %27 = extractvalue { i64*, i8 } %26, 0
  %28 = extractvalue { i64*, i8 } %26, 1
  %29 = bitcast i64* %27 to i64**
  %30 = and i8 %28, 1
  %31 = icmp eq i8 %30, 0
  br i1 %31, label %34, label %32

32:                                               ; preds = %24
  %33 = load i64*, i64** %29, align 8
  br label %67

34:                                               ; preds = %24
  %35 = getelementptr inbounds %"class.v8::internal::compiler::JSHeapBroker", %"class.v8::internal::compiler::JSHeapBroker"* %0, i64 0, i32 14
  %36 = load %"class.v8::internal::LocalIsolate"*, %"class.v8::internal::LocalIsolate"** %35, align 8
  %37 = getelementptr inbounds %"class.v8::internal::LocalIsolate", %"class.v8::internal::LocalIsolate"* %36, i64 0, i32 1, i32 8, i32 0, i32 0, i32 0
  %38 = load %"class.v8::internal::PersistentHandles"*, %"class.v8::internal::PersistentHandles"** %37, align 8
  %39 = icmp eq %"class.v8::internal::PersistentHandles"* %38, null
  br i1 %39, label %40, label %43

40:                                               ; preds = %34
  %41 = getelementptr inbounds %"class.v8::internal::LocalIsolate", %"class.v8::internal::LocalIsolate"* %36, i64 0, i32 1
  call void @_ZN2v88internal9LocalHeap23EnsurePersistentHandlesEv(%"class.v8::internal::LocalHeap"* %41) #8
  %42 = load %"class.v8::internal::PersistentHandles"*, %"class.v8::internal::PersistentHandles"** %37, align 8
  br label %43

43:                                               ; preds = %34, %40
  %44 = phi %"class.v8::internal::PersistentHandles"* [ %38, %34 ], [ %42, %40 ]
  %45 = call i64* @_ZN2v88internal17PersistentHandles9GetHandleEm(%"class.v8::internal::PersistentHandles"* %44, i64 %1) #8
  store i64* %45, i64** %29, align 8
  br label %67

46:                                               ; preds = %2
  %47 = getelementptr inbounds %"class.v8::internal::compiler::JSHeapBroker", %"class.v8::internal::compiler::JSHeapBroker"* %0, i64 0, i32 0
  %48 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %47, align 8
  %49 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %48, i64 0, i32 31, i32 4
  %50 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %49, align 8
  %51 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %50, null
  br i1 %51, label %54, label %52

52:                                               ; preds = %46
  %53 = tail call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %50, i64 %1) #8
  br label %67

54:                                               ; preds = %46
  %55 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %48, i64 0, i32 31, i32 0
  %56 = load i64*, i64** %55, align 8
  %57 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %48, i64 0, i32 31, i32 1
  %58 = load i64*, i64** %57, align 8
  %59 = icmp eq i64* %56, %58
  br i1 %59, label %60, label %62

60:                                               ; preds = %54
  %61 = tail call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %48) #8
  br label %62

62:                                               ; preds = %60, %54
  %63 = phi i64* [ %61, %60 ], [ %56, %54 ]
  %64 = ptrtoint i64* %63 to i64
  %65 = add i64 %64, 8
  %66 = inttoptr i64 %65 to i64*
  store i64* %66, i64** %55, align 8
  store i64 %1, i64* %63, align 8
  br label %67

67:                                               ; preds = %43, %32, %62, %52, %15
  %68 = phi i64* [ %20, %15 ], [ %53, %52 ], [ %63, %62 ], [ %33, %32 ], [ %45, %43 ]
  ret i64* %68
}

declare zeroext i1 @_ZNK2v88internal9FieldType7IsClassEv(%"class.v8::internal::FieldType"*) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64* @_ZN2v88internal8compiler12JSHeapBroker25CanonicalPersistentHandleINS0_3MapEEENS0_6HandleIT_EES6_(%"class.v8::internal::compiler::JSHeapBroker"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca i16, align 2
  %4 = getelementptr inbounds %"class.v8::internal::compiler::JSHeapBroker", %"class.v8::internal::compiler::JSHeapBroker"* %0, i64 0, i32 15, i32 0, i32 0, i32 0
  %5 = load %"class.v8::internal::IdentityMap"*, %"class.v8::internal::IdentityMap"** %4, align 8
  %6 = icmp eq %"class.v8::internal::IdentityMap"* %5, null
  br i1 %6, label %46, label %7

7:                                                ; preds = %2
  %8 = bitcast %"class.v8::internal::IdentityMap"* %5 to %"class.v8::internal::IdentityMapBase"*
  %9 = and i64 %1, 3
  %10 = icmp eq i64 %9, 1
  br i1 %10, label %11, label %24

11:                                               ; preds = %7
  %12 = bitcast i16* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 2, i8* nonnull %12) #8
  %13 = getelementptr inbounds %"class.v8::internal::compiler::JSHeapBroker", %"class.v8::internal::compiler::JSHeapBroker"* %0, i64 0, i32 4
  %14 = call zeroext i1 @_ZNK2v88internal12RootIndexMap6LookupEmPNS0_9RootIndexE(%"class.v8::internal::RootIndexMap"* %13, i64 %1, i16* nonnull %3) #8
  br i1 %14, label %15, label %21

15:                                               ; preds = %11
  %16 = getelementptr inbounds %"class.v8::internal::compiler::JSHeapBroker", %"class.v8::internal::compiler::JSHeapBroker"* %0, i64 0, i32 0
  %17 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %16, align 8
  %18 = load i16, i16* %3, align 2
  %19 = zext i16 %18 to i64
  %20 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %17, i64 0, i32 0, i32 7, i32 0, i64 %19
  call void @llvm.lifetime.end.p0i8(i64 2, i8* nonnull %12) #8
  br label %67

21:                                               ; preds = %11
  call void @llvm.lifetime.end.p0i8(i64 2, i8* nonnull %12) #8
  %22 = bitcast %"class.v8::internal::IdentityMap"** %4 to %"class.v8::internal::IdentityMapBase"**
  %23 = load %"class.v8::internal::IdentityMapBase"*, %"class.v8::internal::IdentityMapBase"** %22, align 8
  br label %24

24:                                               ; preds = %7, %21
  %25 = phi %"class.v8::internal::IdentityMapBase"* [ %23, %21 ], [ %8, %7 ]
  %26 = call { i64*, i8 } @_ZN2v88internal15IdentityMapBase17FindOrInsertEntryEm(%"class.v8::internal::IdentityMapBase"* %25, i64 %1) #8
  %27 = extractvalue { i64*, i8 } %26, 0
  %28 = extractvalue { i64*, i8 } %26, 1
  %29 = bitcast i64* %27 to i64**
  %30 = and i8 %28, 1
  %31 = icmp eq i8 %30, 0
  br i1 %31, label %34, label %32

32:                                               ; preds = %24
  %33 = load i64*, i64** %29, align 8
  br label %67

34:                                               ; preds = %24
  %35 = getelementptr inbounds %"class.v8::internal::compiler::JSHeapBroker", %"class.v8::internal::compiler::JSHeapBroker"* %0, i64 0, i32 14
  %36 = load %"class.v8::internal::LocalIsolate"*, %"class.v8::internal::LocalIsolate"** %35, align 8
  %37 = getelementptr inbounds %"class.v8::internal::LocalIsolate", %"class.v8::internal::LocalIsolate"* %36, i64 0, i32 1, i32 8, i32 0, i32 0, i32 0
  %38 = load %"class.v8::internal::PersistentHandles"*, %"class.v8::internal::PersistentHandles"** %37, align 8
  %39 = icmp eq %"class.v8::internal::PersistentHandles"* %38, null
  br i1 %39, label %40, label %43

40:                                               ; preds = %34
  %41 = getelementptr inbounds %"class.v8::internal::LocalIsolate", %"class.v8::internal::LocalIsolate"* %36, i64 0, i32 1
  call void @_ZN2v88internal9LocalHeap23EnsurePersistentHandlesEv(%"class.v8::internal::LocalHeap"* %41) #8
  %42 = load %"class.v8::internal::PersistentHandles"*, %"class.v8::internal::PersistentHandles"** %37, align 8
  br label %43

43:                                               ; preds = %34, %40
  %44 = phi %"class.v8::internal::PersistentHandles"* [ %38, %34 ], [ %42, %40 ]
  %45 = call i64* @_ZN2v88internal17PersistentHandles9GetHandleEm(%"class.v8::internal::PersistentHandles"* %44, i64 %1) #8
  store i64* %45, i64** %29, align 8
  br label %67

46:                                               ; preds = %2
  %47 = getelementptr inbounds %"class.v8::internal::compiler::JSHeapBroker", %"class.v8::internal::compiler::JSHeapBroker"* %0, i64 0, i32 0
  %48 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %47, align 8
  %49 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %48, i64 0, i32 31, i32 4
  %50 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %49, align 8
  %51 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %50, null
  br i1 %51, label %54, label %52

52:                                               ; preds = %46
  %53 = tail call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %50, i64 %1) #8
  br label %67

54:                                               ; preds = %46
  %55 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %48, i64 0, i32 31, i32 0
  %56 = load i64*, i64** %55, align 8
  %57 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %48, i64 0, i32 31, i32 1
  %58 = load i64*, i64** %57, align 8
  %59 = icmp eq i64* %56, %58
  br i1 %59, label %60, label %62

60:                                               ; preds = %54
  %61 = tail call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %48) #8
  br label %62

62:                                               ; preds = %60, %54
  %63 = phi i64* [ %61, %60 ], [ %56, %54 ]
  %64 = ptrtoint i64* %63 to i64
  %65 = add i64 %64, 8
  %66 = inttoptr i64 %65 to i64*
  store i64* %66, i64** %55, align 8
  store i64 %1, i64* %63, align 8
  br label %67

67:                                               ; preds = %43, %32, %62, %52, %15
  %68 = phi i64* [ %20, %15 ], [ %53, %52 ], [ %63, %62 ], [ %33, %32 ], [ %45, %43 ]
  ret i64* %68
}

declare i64 @_ZNK2v88internal9FieldType7AsClassEv(%"class.v8::internal::FieldType"*) local_unnamed_addr #4

declare %"class.v8::internal::compiler::CompilationDependency"* @_ZNK2v88internal8compiler23CompilationDependencies31FieldTypeDependencyOffTheRecordERKNS1_6MapRefENS0_13InternalIndexE(%"class.v8::internal::compiler::CompilationDependencies"*, %"class.v8::internal::compiler::MapRef"* dereferenceable(16), i64) local_unnamed_addr #4

declare i32 @_ZN2v88internal8compiler23CompilationDependencies22DependOnFieldConstnessERKNS1_6MapRefENS0_13InternalIndexE(%"class.v8::internal::compiler::CompilationDependencies"*, %"class.v8::internal::compiler::MapRef"* dereferenceable(16), i64) local_unnamed_addr #4

declare i64 @_ZNK2v88internal3Map14FindFieldOwnerEPNS0_7IsolateENS0_13InternalIndexE(%"class.v8::internal::Map"*, %"class.v8::internal::Isolate"*, i64) local_unnamed_addr #4

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden %"class.v8::internal::Isolate"* @_ZNK2v88internal8compiler17AccessInfoFactory7isolateEv(%"class.v8::internal::compiler::AccessInfoFactory"* nocapture readonly) local_unnamed_addr #5 align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::compiler::AccessInfoFactory", %"class.v8::internal::compiler::AccessInfoFactory"* %0, i64 0, i32 0
  %3 = load %"class.v8::internal::compiler::JSHeapBroker"*, %"class.v8::internal::compiler::JSHeapBroker"** %2, align 8
  %4 = getelementptr inbounds %"class.v8::internal::compiler::JSHeapBroker", %"class.v8::internal::compiler::JSHeapBroker"* %3, i64 0, i32 0
  %5 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %4, align 8
  ret %"class.v8::internal::Isolate"* %5
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK2v88internal8compiler17AccessInfoFactory35ComputeAccessorDescriptorAccessInfoENS0_6HandleINS0_3MapEEENS3_INS0_4NameEEES5_NS0_11MaybeHandleINS0_8JSObjectEEENS0_13InternalIndexENS1_10AccessModeE(%"class.v8::internal::compiler::PropertyAccessInfo"* noalias sret, %"class.v8::internal::compiler::AccessInfoFactory"*, i64*, i64*, i64*, i64*, i64, i32) local_unnamed_addr #0 align 2 {
  %9 = alloca %"class.v8::internal::JSReceiver", align 8
  %10 = alloca %"class.v8::internal::ObjectHashTable", align 8
  %11 = alloca %"class.v8::internal::CallOptimization", align 8
  %12 = alloca <2 x i64>, align 16
  %13 = bitcast <2 x i64>* %12 to %"class.v8::internal::compiler::NativeContextRef"*
  %14 = alloca i32, align 4
  %15 = getelementptr inbounds %"class.v8::internal::compiler::AccessInfoFactory", %"class.v8::internal::compiler::AccessInfoFactory"* %1, i64 0, i32 0
  %16 = load %"class.v8::internal::compiler::JSHeapBroker"*, %"class.v8::internal::compiler::JSHeapBroker"** %15, align 8
  %17 = load i64, i64* %4, align 8
  %18 = and i64 %17, -4294967296
  %19 = add i64 %17, 23
  %20 = inttoptr i64 %19 to i32*
  %21 = load atomic i32, i32* %20 monotonic, align 4
  %22 = zext i32 %21 to i64
  %23 = or i64 %18, %22
  %24 = tail call i64* @_ZN2v88internal8compiler12JSHeapBroker25CanonicalPersistentHandleINS0_15DescriptorArrayEEENS0_6HandleIT_EES6_(%"class.v8::internal::compiler::JSHeapBroker"* %16, i64 %23)
  %25 = load %"class.v8::internal::compiler::JSHeapBroker"*, %"class.v8::internal::compiler::JSHeapBroker"** %15, align 8
  %26 = getelementptr inbounds %"class.v8::internal::compiler::JSHeapBroker", %"class.v8::internal::compiler::JSHeapBroker"* %25, i64 0, i32 0
  %27 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %26, align 8
  %28 = getelementptr inbounds %"class.v8::internal::compiler::AccessInfoFactory", %"class.v8::internal::compiler::AccessInfoFactory"* %1, i64 0, i32 3
  %29 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %28, align 8
  %30 = load i64, i64* %4, align 8
  %31 = add i64 %30, 7
  %32 = inttoptr i64 %31 to i16*
  %33 = load atomic i16, i16* %32 monotonic, align 2
  %34 = icmp eq i16 %33, 191
  br i1 %34, label %35, label %109

35:                                               ; preds = %8
  %36 = and i64 %30, -4294967296
  %37 = add i64 %30, 35
  %38 = inttoptr i64 %37 to i32*
  %39 = load i32, i32* %38, align 4
  %40 = zext i32 %39 to i64
  %41 = or i64 %36, %40
  %42 = tail call i64* @_ZN2v88internal8compiler12JSHeapBroker25CanonicalPersistentHandleINS0_13PrototypeInfoEEENS0_6HandleIT_EES6_(%"class.v8::internal::compiler::JSHeapBroker"* %25, i64 %41) #8
  %43 = load i64, i64* %42, align 8
  %44 = and i64 %43, -4294967296
  %45 = add i64 %43, 3
  %46 = inttoptr i64 %45 to i32*
  %47 = load i32, i32* %46, align 4
  %48 = zext i32 %47 to i64
  %49 = or i64 %44, %48
  %50 = tail call i64* @_ZN2v88internal8compiler12JSHeapBroker25CanonicalPersistentHandleINS0_17JSModuleNamespaceEEENS0_6HandleIT_EES6_(%"class.v8::internal::compiler::JSHeapBroker"* %25, i64 %49) #8
  %51 = bitcast %"class.v8::internal::ObjectHashTable"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %51) #8, !noalias !162
  %52 = load i64, i64* %50, align 8
  %53 = and i64 %52, -4294967296
  %54 = add i64 %52, 11
  %55 = inttoptr i64 %54 to i32*
  %56 = load i32, i32* %55, align 4
  %57 = zext i32 %56 to i64
  %58 = or i64 %53, %57
  %59 = add i64 %58, 3
  %60 = inttoptr i64 %59 to i32*
  %61 = load i32, i32* %60, align 4
  %62 = zext i32 %61 to i64
  %63 = or i64 %53, %62
  %64 = getelementptr inbounds %"class.v8::internal::ObjectHashTable", %"class.v8::internal::ObjectHashTable"* %10, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i64 %63, i64* %64, align 8, !noalias !162
  %65 = getelementptr inbounds %"class.v8::internal::ObjectHashTable", %"class.v8::internal::ObjectHashTable"* %10, i64 0, i32 0
  %66 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %27, i64 0, i32 0, i32 4
  %67 = load i64, i64* %66, align 8, !noalias !162
  %68 = load i64, i64* %3, align 8
  %69 = tail call i64 @_ZN2v88internal6Object13GetSimpleHashES1_(i64 %68) #8
  %70 = and i64 %69, 1
  %71 = icmp eq i64 %70, 0
  br i1 %71, label %76, label %72

72:                                               ; preds = %35
  %73 = bitcast %"class.v8::internal::JSReceiver"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %73) #8, !noalias !162
  %74 = getelementptr inbounds %"class.v8::internal::JSReceiver", %"class.v8::internal::JSReceiver"* %9, i64 0, i32 0, i32 0, i32 0, i32 0
  store i64 %68, i64* %74, align 8, !noalias !162
  %75 = call i64 @_ZN2v88internal10JSReceiver15GetIdentityHashEv(%"class.v8::internal::JSReceiver"* nonnull %9) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %73) #8, !noalias !162
  br label %76

76:                                               ; preds = %72, %35
  %77 = phi i64 [ %75, %72 ], [ %69, %35 ]
  %78 = trunc i64 %77 to i32
  %79 = ashr i32 %78, 1
  %80 = call i64 @_ZN2v88internal19ObjectHashTableBaseINS0_15ObjectHashTableENS0_20ObjectHashTableShapeEE6LookupENS0_16PtrComprCageBaseENS0_6HandleINS0_6ObjectEEEi(%"class.v8::internal::ObjectHashTableBase"* nonnull %65, i64 %67, i64* %3, i32 %79) #8
  %81 = call i64* @_ZN2v88internal8compiler12JSHeapBroker25CanonicalPersistentHandleINS0_4CellEEENS0_6HandleIT_EES6_(%"class.v8::internal::compiler::JSHeapBroker"* %25, i64 %80) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %51) #8, !noalias !162
  %82 = load i64, i64* %81, align 8
  %83 = add i64 %82, 3
  %84 = inttoptr i64 %83 to i32*
  %85 = load i32, i32* %84, align 4
  %86 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %27, i64 0, i32 0, i32 7, i32 0, i64 5
  %87 = load i64, i64* %86, align 8, !noalias !162
  %88 = trunc i64 %87 to i32
  %89 = icmp eq i32 %85, %88
  br i1 %89, label %90, label %108

90:                                               ; preds = %76
  %91 = getelementptr inbounds %"class.v8::internal::compiler::PropertyAccessInfo", %"class.v8::internal::compiler::PropertyAccessInfo"* %0, i64 0, i32 0
  store i32 0, i32* %91, align 8, !alias.scope !165
  %92 = getelementptr inbounds %"class.v8::internal::compiler::PropertyAccessInfo", %"class.v8::internal::compiler::PropertyAccessInfo"* %0, i64 0, i32 1
  %93 = ptrtoint %"class.v8::internal::Zone"* %29 to i64
  %94 = getelementptr inbounds %"class.v8::internal::compiler::PropertyAccessInfo", %"class.v8::internal::compiler::PropertyAccessInfo"* %0, i64 0, i32 1, i32 0, i32 0, i32 2, i32 1
  %95 = bitcast %"struct.std::__1::__compressed_pair_elem.0"* %94 to i64*
  %96 = bitcast %"class.v8::internal::ZoneVector"* %92 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %96, i8 0, i64 24, i1 false) #8, !alias.scope !165
  store i64 %93, i64* %95, align 8, !alias.scope !165
  %97 = getelementptr inbounds %"class.v8::internal::compiler::PropertyAccessInfo", %"class.v8::internal::compiler::PropertyAccessInfo"* %0, i64 0, i32 2, i32 0, i32 0
  %98 = getelementptr inbounds %"class.v8::internal::compiler::PropertyAccessInfo", %"class.v8::internal::compiler::PropertyAccessInfo"* %0, i64 0, i32 4, i32 0, i32 0, i32 2, i32 1
  %99 = bitcast %"struct.std::__1::__compressed_pair_elem.27"* %98 to i64*
  %100 = bitcast i64** %97 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %100, i8 0, i64 40, i1 false) #8, !alias.scope !165
  store i64 %93, i64* %99, align 8, !alias.scope !165
  %101 = getelementptr inbounds %"class.v8::internal::compiler::PropertyAccessInfo", %"class.v8::internal::compiler::PropertyAccessInfo"* %0, i64 0, i32 5, i32 0
  %102 = getelementptr inbounds %"class.v8::internal::compiler::PropertyAccessInfo", %"class.v8::internal::compiler::PropertyAccessInfo"* %0, i64 0, i32 8, i32 0
  %103 = bitcast i64** %101 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %103, i8 0, i64 17, i1 false) #8, !alias.scope !165
  store i64 1, i64* %102, align 8, !alias.scope !165
  %104 = getelementptr inbounds %"class.v8::internal::compiler::PropertyAccessInfo", %"class.v8::internal::compiler::PropertyAccessInfo"* %0, i64 0, i32 9, i32 0
  %105 = getelementptr inbounds %"class.v8::internal::compiler::PropertyAccessInfo", %"class.v8::internal::compiler::PropertyAccessInfo"* %0, i64 0, i32 11, i32 0
  %106 = bitcast i64** %104 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %106, i8 0, i64 16, i1 false) #8, !alias.scope !165
  store i64 -1, i64* %105, align 8, !alias.scope !165
  %107 = getelementptr inbounds %"class.v8::internal::compiler::PropertyAccessInfo", %"class.v8::internal::compiler::PropertyAccessInfo"* %0, i64 0, i32 12, i32 0
  store i64* null, i64** %107, align 8, !alias.scope !165
  br label %325

108:                                              ; preds = %76
  call void @_ZN2v88internal8compiler18PropertyAccessInfo12ModuleExportEPNS0_4ZoneENS0_6HandleINS0_3MapEEENS5_INS0_4CellEEE(%"class.v8::internal::compiler::PropertyAccessInfo"* sret %0, %"class.v8::internal::Zone"* %29, i64* %2, i64* %81) #8
  br label %325

109:                                              ; preds = %8
  %110 = icmp eq i32 %7, 3
  br i1 %110, label %111, label %112

111:                                              ; preds = %109
  tail call void @_ZN2v88internal8compiler18PropertyAccessInfo20FastAccessorConstantEPNS0_4ZoneENS0_6HandleINS0_3MapEEENS5_INS0_6ObjectEEENS0_11MaybeHandleINS0_8JSObjectEEE(%"class.v8::internal::compiler::PropertyAccessInfo"* sret %0, %"class.v8::internal::Zone"* %29, i64* %2, i64* null, i64* %5) #8
  br label %325

112:                                              ; preds = %109
  %113 = load i64, i64* %24, align 8
  %114 = and i64 %113, -4294967296
  %115 = mul i64 %6, 51539607552
  %116 = add i64 %115, 68719476736
  %117 = ashr exact i64 %116, 32
  %118 = add nsw i64 %117, 7
  %119 = add i64 %118, %113
  %120 = inttoptr i64 %119 to i32*
  %121 = load atomic i32, i32* %120 monotonic, align 4
  %122 = zext i32 %121 to i64
  %123 = or i64 %114, %122
  %124 = tail call i64* @_ZN2v88internal8compiler12JSHeapBroker25CanonicalPersistentHandleINS0_6ObjectEEENS0_6HandleIT_EES6_(%"class.v8::internal::compiler::JSHeapBroker"* %25, i64 %123) #8
  %125 = load i64, i64* %124, align 8
  %126 = and i64 %125, 1
  %127 = icmp eq i64 %126, 0
  br i1 %127, label %139, label %128

128:                                              ; preds = %112
  %129 = and i64 %125, -4294967296
  %130 = add i64 %125, -1
  %131 = inttoptr i64 %130 to i32*
  %132 = load atomic i32, i32* %131 monotonic, align 4
  %133 = zext i32 %132 to i64
  %134 = or i64 %129, %133
  %135 = add i64 %134, 7
  %136 = inttoptr i64 %135 to i16*
  %137 = load atomic i16, i16* %136 monotonic, align 2
  %138 = icmp eq i16 %137, 87
  br i1 %138, label %157, label %139

139:                                              ; preds = %112, %128
  %140 = getelementptr inbounds %"class.v8::internal::compiler::PropertyAccessInfo", %"class.v8::internal::compiler::PropertyAccessInfo"* %0, i64 0, i32 0
  store i32 0, i32* %140, align 8, !alias.scope !168
  %141 = getelementptr inbounds %"class.v8::internal::compiler::PropertyAccessInfo", %"class.v8::internal::compiler::PropertyAccessInfo"* %0, i64 0, i32 1
  %142 = ptrtoint %"class.v8::internal::Zone"* %29 to i64
  %143 = getelementptr inbounds %"class.v8::internal::compiler::PropertyAccessInfo", %"class.v8::internal::compiler::PropertyAccessInfo"* %0, i64 0, i32 1, i32 0, i32 0, i32 2, i32 1
  %144 = bitcast %"struct.std::__1::__compressed_pair_elem.0"* %143 to i64*
  %145 = bitcast %"class.v8::internal::ZoneVector"* %141 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %145, i8 0, i64 24, i1 false) #8, !alias.scope !168
  store i64 %142, i64* %144, align 8, !alias.scope !168
  %146 = getelementptr inbounds %"class.v8::internal::compiler::PropertyAccessInfo", %"class.v8::internal::compiler::PropertyAccessInfo"* %0, i64 0, i32 2, i32 0, i32 0
  %147 = getelementptr inbounds %"class.v8::internal::compiler::PropertyAccessInfo", %"class.v8::internal::compiler::PropertyAccessInfo"* %0, i64 0, i32 4, i32 0, i32 0, i32 2, i32 1
  %148 = bitcast %"struct.std::__1::__compressed_pair_elem.27"* %147 to i64*
  %149 = bitcast i64** %146 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %149, i8 0, i64 40, i1 false) #8, !alias.scope !168
  store i64 %142, i64* %148, align 8, !alias.scope !168
  %150 = getelementptr inbounds %"class.v8::internal::compiler::PropertyAccessInfo", %"class.v8::internal::compiler::PropertyAccessInfo"* %0, i64 0, i32 5, i32 0
  %151 = getelementptr inbounds %"class.v8::internal::compiler::PropertyAccessInfo", %"class.v8::internal::compiler::PropertyAccessInfo"* %0, i64 0, i32 8, i32 0
  %152 = bitcast i64** %150 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %152, i8 0, i64 17, i1 false) #8, !alias.scope !168
  store i64 1, i64* %151, align 8, !alias.scope !168
  %153 = getelementptr inbounds %"class.v8::internal::compiler::PropertyAccessInfo", %"class.v8::internal::compiler::PropertyAccessInfo"* %0, i64 0, i32 9, i32 0
  %154 = getelementptr inbounds %"class.v8::internal::compiler::PropertyAccessInfo", %"class.v8::internal::compiler::PropertyAccessInfo"* %0, i64 0, i32 11, i32 0
  %155 = bitcast i64** %153 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %155, i8 0, i64 16, i1 false) #8, !alias.scope !168
  store i64 -1, i64* %154, align 8, !alias.scope !168
  %156 = getelementptr inbounds %"class.v8::internal::compiler::PropertyAccessInfo", %"class.v8::internal::compiler::PropertyAccessInfo"* %0, i64 0, i32 12, i32 0
  store i64* null, i64** %156, align 8, !alias.scope !168
  br label %325

157:                                              ; preds = %128
  %158 = icmp eq i32 %7, 0
  %159 = select i1 %158, i64 3, i64 7
  %160 = add i64 %125, %159
  %161 = inttoptr i64 %160 to i32*
  %162 = load i32, i32* %161, align 4
  %163 = zext i32 %162 to i64
  %164 = or i64 %129, %163
  %165 = tail call i64* @_ZN2v88internal8compiler12JSHeapBroker25CanonicalPersistentHandleINS0_6ObjectEEENS0_6HandleIT_EES6_(%"class.v8::internal::compiler::JSHeapBroker"* %25, i64 %164) #8
  %166 = tail call %"class.v8::internal::compiler::ObjectData"* @_ZN2v88internal8compiler12JSHeapBroker18TryGetOrCreateDataENS0_6HandleINS0_6ObjectEEENS_4base5FlagsINS1_19GetOrCreateDataFlagEiEE(%"class.v8::internal::compiler::JSHeapBroker"* %25, i64* %165, i32 0) #8
  %167 = icmp eq %"class.v8::internal::compiler::ObjectData"* %166, null
  br i1 %167, label %168, label %186

168:                                              ; preds = %157
  %169 = getelementptr inbounds %"class.v8::internal::compiler::PropertyAccessInfo", %"class.v8::internal::compiler::PropertyAccessInfo"* %0, i64 0, i32 0
  store i32 0, i32* %169, align 8, !alias.scope !171
  %170 = getelementptr inbounds %"class.v8::internal::compiler::PropertyAccessInfo", %"class.v8::internal::compiler::PropertyAccessInfo"* %0, i64 0, i32 1
  %171 = ptrtoint %"class.v8::internal::Zone"* %29 to i64
  %172 = getelementptr inbounds %"class.v8::internal::compiler::PropertyAccessInfo", %"class.v8::internal::compiler::PropertyAccessInfo"* %0, i64 0, i32 1, i32 0, i32 0, i32 2, i32 1
  %173 = bitcast %"struct.std::__1::__compressed_pair_elem.0"* %172 to i64*
  %174 = bitcast %"class.v8::internal::ZoneVector"* %170 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %174, i8 0, i64 24, i1 false) #8, !alias.scope !171
  store i64 %171, i64* %173, align 8, !alias.scope !171
  %175 = getelementptr inbounds %"class.v8::internal::compiler::PropertyAccessInfo", %"class.v8::internal::compiler::PropertyAccessInfo"* %0, i64 0, i32 2, i32 0, i32 0
  %176 = getelementptr inbounds %"class.v8::internal::compiler::PropertyAccessInfo", %"class.v8::internal::compiler::PropertyAccessInfo"* %0, i64 0, i32 4, i32 0, i32 0, i32 2, i32 1
  %177 = bitcast %"struct.std::__1::__compressed_pair_elem.27"* %176 to i64*
  %178 = bitcast i64** %175 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %178, i8 0, i64 40, i1 false) #8, !alias.scope !171
  store i64 %171, i64* %177, align 8, !alias.scope !171
  %179 = getelementptr inbounds %"class.v8::internal::compiler::PropertyAccessInfo", %"class.v8::internal::compiler::PropertyAccessInfo"* %0, i64 0, i32 5, i32 0
  %180 = getelementptr inbounds %"class.v8::internal::compiler::PropertyAccessInfo", %"class.v8::internal::compiler::PropertyAccessInfo"* %0, i64 0, i32 8, i32 0
  %181 = bitcast i64** %179 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %181, i8 0, i64 17, i1 false) #8, !alias.scope !171
  store i64 1, i64* %180, align 8, !alias.scope !171
  %182 = getelementptr inbounds %"class.v8::internal::compiler::PropertyAccessInfo", %"class.v8::internal::compiler::PropertyAccessInfo"* %0, i64 0, i32 9, i32 0
  %183 = getelementptr inbounds %"class.v8::internal::compiler::PropertyAccessInfo", %"class.v8::internal::compiler::PropertyAccessInfo"* %0, i64 0, i32 11, i32 0
  %184 = bitcast i64** %182 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %184, i8 0, i64 16, i1 false) #8, !alias.scope !171
  store i64 -1, i64* %183, align 8, !alias.scope !171
  %185 = getelementptr inbounds %"class.v8::internal::compiler::PropertyAccessInfo", %"class.v8::internal::compiler::PropertyAccessInfo"* %0, i64 0, i32 12, i32 0
  store i64* null, i64** %185, align 8, !alias.scope !171
  br label %325

186:                                              ; preds = %157
  %187 = load i64, i64* %165, align 8
  %188 = and i64 %187, 1
  %189 = icmp eq i64 %188, 0
  br i1 %189, label %202, label %190

190:                                              ; preds = %186
  %191 = and i64 %187, -4294967296
  %192 = add i64 %187, -1
  %193 = inttoptr i64 %192 to i32*
  %194 = load atomic i32, i32* %193 monotonic, align 4
  %195 = zext i32 %194 to i64
  %196 = or i64 %191, %195
  %197 = add i64 %196, 7
  %198 = inttoptr i64 %197 to i16*
  %199 = load atomic i16, i16* %198 monotonic, align 2
  %200 = add i16 %199, -1059
  %201 = icmp ult i16 %200, 15
  br i1 %201, label %287, label %202

202:                                              ; preds = %186, %190
  %203 = bitcast %"class.v8::internal::CallOptimization"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %203) #8, !noalias !162
  %204 = getelementptr inbounds %"class.v8::internal::compiler::JSHeapBroker", %"class.v8::internal::compiler::JSHeapBroker"* %25, i64 0, i32 14
  %205 = load %"class.v8::internal::LocalIsolate"*, %"class.v8::internal::LocalIsolate"** %204, align 8, !noalias !162
  %206 = icmp eq %"class.v8::internal::LocalIsolate"* %205, null
  br i1 %206, label %207, label %211

207:                                              ; preds = %202
  %208 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %26, align 8, !noalias !162
  %209 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %208, i64 0, i32 153, i32 0, i32 0, i32 0
  %210 = load %"class.v8::internal::LocalIsolate"*, %"class.v8::internal::LocalIsolate"** %209, align 8
  br label %211

211:                                              ; preds = %207, %202
  %212 = phi %"class.v8::internal::LocalIsolate"* [ %210, %207 ], [ %205, %202 ]
  call void @_ZN2v88internal16CallOptimizationC1INS0_12LocalIsolateEEEPT_NS0_6HandleINS0_6ObjectEEE(%"class.v8::internal::CallOptimization"* nonnull %11, %"class.v8::internal::LocalIsolate"* %212, i64* %165) #8
  %213 = getelementptr inbounds %"class.v8::internal::CallOptimization", %"class.v8::internal::CallOptimization"* %11, i64 0, i32 3
  %214 = load i8, i8* %213, align 8, !range !80, !noalias !162
  %215 = icmp eq i8 %214, 0
  %216 = bitcast <2 x i64>* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %216) #8, !noalias !162
  br i1 %215, label %230, label %217

217:                                              ; preds = %211
  %218 = getelementptr inbounds %"class.v8::internal::compiler::JSHeapBroker", %"class.v8::internal::compiler::JSHeapBroker"* %25, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0
  %219 = load i8, i8* %218, align 8, !range !80, !noalias !162
  %220 = icmp eq i8 %219, 1
  br i1 %220, label %222, label %221, !prof !81

221:                                              ; preds = %217
  call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.5, i64 0, i64 0), i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.21, i64 0, i64 0)) #12
  unreachable

222:                                              ; preds = %217
  %223 = getelementptr inbounds %"class.v8::internal::compiler::JSHeapBroker", %"class.v8::internal::compiler::JSHeapBroker"* %25, i64 0, i32 2, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %224 = bitcast %"class.v8::internal::compiler::ObjectData"** %223 to <2 x i64>*
  %225 = load <2 x i64>, <2 x i64>* %224, align 8, !noalias !162
  store <2 x i64> %225, <2 x i64>* %12, align 16, !noalias !162
  %226 = call i64* @_ZNK2v88internal8compiler16NativeContextRef6objectEv(%"class.v8::internal::compiler::NativeContextRef"* nonnull %13) #8
  %227 = load i64, i64* %226, align 8
  %228 = load i64, i64* %4, align 8
  %229 = call zeroext i1 @_ZNK2v88internal16CallOptimization30IsCrossContextLazyAccessorPairENS0_7ContextENS0_3MapE(%"class.v8::internal::CallOptimization"* nonnull %11, i64 %227, i64 %228) #8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %216) #8, !noalias !162
  br i1 %229, label %231, label %249

230:                                              ; preds = %211
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %216) #8, !noalias !162
  br label %231

231:                                              ; preds = %222, %230
  %232 = getelementptr inbounds %"class.v8::internal::compiler::PropertyAccessInfo", %"class.v8::internal::compiler::PropertyAccessInfo"* %0, i64 0, i32 0
  store i32 0, i32* %232, align 8, !alias.scope !174
  %233 = getelementptr inbounds %"class.v8::internal::compiler::PropertyAccessInfo", %"class.v8::internal::compiler::PropertyAccessInfo"* %0, i64 0, i32 1
  %234 = ptrtoint %"class.v8::internal::Zone"* %29 to i64
  %235 = getelementptr inbounds %"class.v8::internal::compiler::PropertyAccessInfo", %"class.v8::internal::compiler::PropertyAccessInfo"* %0, i64 0, i32 1, i32 0, i32 0, i32 2, i32 1
  %236 = bitcast %"struct.std::__1::__compressed_pair_elem.0"* %235 to i64*
  %237 = bitcast %"class.v8::internal::ZoneVector"* %233 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %237, i8 0, i64 24, i1 false) #8, !alias.scope !174
  store i64 %234, i64* %236, align 8, !alias.scope !174
  %238 = getelementptr inbounds %"class.v8::internal::compiler::PropertyAccessInfo", %"class.v8::internal::compiler::PropertyAccessInfo"* %0, i64 0, i32 2, i32 0, i32 0
  %239 = getelementptr inbounds %"class.v8::internal::compiler::PropertyAccessInfo", %"class.v8::internal::compiler::PropertyAccessInfo"* %0, i64 0, i32 4, i32 0, i32 0, i32 2, i32 1
  %240 = bitcast %"struct.std::__1::__compressed_pair_elem.27"* %239 to i64*
  %241 = bitcast i64** %238 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %241, i8 0, i64 40, i1 false) #8, !alias.scope !174
  store i64 %234, i64* %240, align 8, !alias.scope !174
  %242 = getelementptr inbounds %"class.v8::internal::compiler::PropertyAccessInfo", %"class.v8::internal::compiler::PropertyAccessInfo"* %0, i64 0, i32 5, i32 0
  %243 = getelementptr inbounds %"class.v8::internal::compiler::PropertyAccessInfo", %"class.v8::internal::compiler::PropertyAccessInfo"* %0, i64 0, i32 8, i32 0
  %244 = bitcast i64** %242 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %244, i8 0, i64 17, i1 false) #8, !alias.scope !174
  store i64 1, i64* %243, align 8, !alias.scope !174
  %245 = getelementptr inbounds %"class.v8::internal::compiler::PropertyAccessInfo", %"class.v8::internal::compiler::PropertyAccessInfo"* %0, i64 0, i32 9, i32 0
  %246 = getelementptr inbounds %"class.v8::internal::compiler::PropertyAccessInfo", %"class.v8::internal::compiler::PropertyAccessInfo"* %0, i64 0, i32 11, i32 0
  %247 = bitcast i64** %245 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %247, i8 0, i64 16, i1 false) #8, !alias.scope !174
  store i64 -1, i64* %246, align 8, !alias.scope !174
  %248 = getelementptr inbounds %"class.v8::internal::compiler::PropertyAccessInfo", %"class.v8::internal::compiler::PropertyAccessInfo"* %0, i64 0, i32 12, i32 0
  store i64* null, i64** %248, align 8, !alias.scope !174
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %203) #8, !noalias !162
  br label %325

249:                                              ; preds = %222
  %250 = bitcast i32* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %250) #8, !noalias !162
  %251 = load %"class.v8::internal::LocalIsolate"*, %"class.v8::internal::LocalIsolate"** %204, align 8, !noalias !162
  %252 = icmp eq %"class.v8::internal::LocalIsolate"* %251, null
  br i1 %252, label %253, label %257

253:                                              ; preds = %249
  %254 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %26, align 8, !noalias !162
  %255 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %254, i64 0, i32 153, i32 0, i32 0, i32 0
  %256 = load %"class.v8::internal::LocalIsolate"*, %"class.v8::internal::LocalIsolate"** %255, align 8
  br label %257

257:                                              ; preds = %253, %249
  %258 = phi %"class.v8::internal::LocalIsolate"* [ %256, %253 ], [ %251, %249 ]
  %259 = call i64* @_ZNK2v88internal16CallOptimization26LookupHolderOfExpectedTypeINS0_12LocalIsolateEEENS0_6HandleINS0_8JSObjectEEEPT_NS4_INS0_3MapEEEPNS1_12HolderLookupE(%"class.v8::internal::CallOptimization"* nonnull %11, %"class.v8::internal::LocalIsolate"* %258, i64* %2, i32* nonnull %14) #8
  %260 = icmp eq i64* %259, null
  br i1 %260, label %264, label %261

261:                                              ; preds = %257
  %262 = load i64, i64* %259, align 8
  %263 = call i64* @_ZN2v88internal8compiler12JSHeapBroker25CanonicalPersistentHandleINS0_8JSObjectEEENS0_6HandleIT_EES6_(%"class.v8::internal::compiler::JSHeapBroker"* %25, i64 %262) #8
  br label %264

264:                                              ; preds = %261, %257
  %265 = phi i64* [ %263, %261 ], [ null, %257 ]
  %266 = load i32, i32* %14, align 4, !noalias !162
  %267 = icmp eq i32 %266, 0
  br i1 %267, label %269, label %268

268:                                              ; preds = %264
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %250) #8, !noalias !162
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %203) #8, !noalias !162
  br label %287

269:                                              ; preds = %264
  %270 = getelementptr inbounds %"class.v8::internal::compiler::PropertyAccessInfo", %"class.v8::internal::compiler::PropertyAccessInfo"* %0, i64 0, i32 0
  store i32 0, i32* %270, align 8, !alias.scope !177
  %271 = getelementptr inbounds %"class.v8::internal::compiler::PropertyAccessInfo", %"class.v8::internal::compiler::PropertyAccessInfo"* %0, i64 0, i32 1
  %272 = ptrtoint %"class.v8::internal::Zone"* %29 to i64
  %273 = getelementptr inbounds %"class.v8::internal::compiler::PropertyAccessInfo", %"class.v8::internal::compiler::PropertyAccessInfo"* %0, i64 0, i32 1, i32 0, i32 0, i32 2, i32 1
  %274 = bitcast %"struct.std::__1::__compressed_pair_elem.0"* %273 to i64*
  %275 = bitcast %"class.v8::internal::ZoneVector"* %271 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %275, i8 0, i64 24, i1 false) #8, !alias.scope !177
  store i64 %272, i64* %274, align 8, !alias.scope !177
  %276 = getelementptr inbounds %"class.v8::internal::compiler::PropertyAccessInfo", %"class.v8::internal::compiler::PropertyAccessInfo"* %0, i64 0, i32 2, i32 0, i32 0
  %277 = getelementptr inbounds %"class.v8::internal::compiler::PropertyAccessInfo", %"class.v8::internal::compiler::PropertyAccessInfo"* %0, i64 0, i32 4, i32 0, i32 0, i32 2, i32 1
  %278 = bitcast %"struct.std::__1::__compressed_pair_elem.27"* %277 to i64*
  %279 = bitcast i64** %276 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %279, i8 0, i64 40, i1 false) #8, !alias.scope !177
  store i64 %272, i64* %278, align 8, !alias.scope !177
  %280 = getelementptr inbounds %"class.v8::internal::compiler::PropertyAccessInfo", %"class.v8::internal::compiler::PropertyAccessInfo"* %0, i64 0, i32 5, i32 0
  %281 = getelementptr inbounds %"class.v8::internal::compiler::PropertyAccessInfo", %"class.v8::internal::compiler::PropertyAccessInfo"* %0, i64 0, i32 8, i32 0
  %282 = bitcast i64** %280 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %282, i8 0, i64 17, i1 false) #8, !alias.scope !177
  store i64 1, i64* %281, align 8, !alias.scope !177
  %283 = getelementptr inbounds %"class.v8::internal::compiler::PropertyAccessInfo", %"class.v8::internal::compiler::PropertyAccessInfo"* %0, i64 0, i32 9, i32 0
  %284 = getelementptr inbounds %"class.v8::internal::compiler::PropertyAccessInfo", %"class.v8::internal::compiler::PropertyAccessInfo"* %0, i64 0, i32 11, i32 0
  %285 = bitcast i64** %283 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %285, i8 0, i64 16, i1 false) #8, !alias.scope !177
  store i64 -1, i64* %284, align 8, !alias.scope !177
  %286 = getelementptr inbounds %"class.v8::internal::compiler::PropertyAccessInfo", %"class.v8::internal::compiler::PropertyAccessInfo"* %0, i64 0, i32 12, i32 0
  store i64* null, i64** %286, align 8, !alias.scope !177
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %250) #8, !noalias !162
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %203) #8, !noalias !162
  br label %325

287:                                              ; preds = %268, %190
  %288 = phi i64* [ %5, %190 ], [ %265, %268 ]
  br i1 %158, label %289, label %316

289:                                              ; preds = %287
  %290 = load i64, i64* %165, align 8
  %291 = call { i8, i64 } @_ZN2v88internal20FunctionTemplateInfo24TryGetCachedPropertyNameEPNS0_7IsolateENS0_6ObjectE(%"class.v8::internal::Isolate"* %27, i64 %290) #8
  %292 = extractvalue { i8, i64 } %291, 0
  switch i8 %292, label %293 [
    i8 0, label %316
    i8 1, label %294
  ], !prof !180

293:                                              ; preds = %289
  call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.5, i64 0, i64 0), i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.21, i64 0, i64 0)) #12
  unreachable

294:                                              ; preds = %289
  %295 = extractvalue { i8, i64 } %291, 1
  %296 = call i64* @_ZN2v88internal8compiler12JSHeapBroker25CanonicalPersistentHandleINS0_4NameEEENS0_6HandleIT_EES6_(%"class.v8::internal::compiler::JSHeapBroker"* %25, i64 %295) #8
  call void @_ZNK2v88internal8compiler17AccessInfoFactory25ComputePropertyAccessInfoENS0_6HandleINS0_3MapEEENS3_INS0_4NameEEENS1_10AccessModeE(%"class.v8::internal::compiler::PropertyAccessInfo"* sret %0, %"class.v8::internal::compiler::AccessInfoFactory"* %1, i64* %4, i64* %296, i32 0) #8
  %297 = getelementptr inbounds %"class.v8::internal::compiler::PropertyAccessInfo", %"class.v8::internal::compiler::PropertyAccessInfo"* %0, i64 0, i32 0
  %298 = load i32, i32* %297, align 8, !alias.scope !162
  %299 = icmp eq i32 %298, 0
  br i1 %299, label %300, label %325

300:                                              ; preds = %294
  %301 = getelementptr inbounds %"class.v8::internal::compiler::PropertyAccessInfo", %"class.v8::internal::compiler::PropertyAccessInfo"* %0, i64 0, i32 4, i32 0, i32 0, i32 0
  %302 = load %"class.v8::internal::compiler::CompilationDependency"**, %"class.v8::internal::compiler::CompilationDependency"*** %301, align 8, !alias.scope !162
  %303 = icmp eq %"class.v8::internal::compiler::CompilationDependency"** %302, null
  br i1 %303, label %308, label %304

304:                                              ; preds = %300
  %305 = ptrtoint %"class.v8::internal::compiler::CompilationDependency"** %302 to i64
  %306 = getelementptr inbounds %"class.v8::internal::compiler::PropertyAccessInfo", %"class.v8::internal::compiler::PropertyAccessInfo"* %0, i64 0, i32 4, i32 0, i32 0, i32 1
  %307 = bitcast %"class.v8::internal::compiler::CompilationDependency"*** %306 to i64*
  store i64 %305, i64* %307, align 8, !alias.scope !162
  br label %308

308:                                              ; preds = %304, %300
  %309 = getelementptr inbounds %"class.v8::internal::compiler::PropertyAccessInfo", %"class.v8::internal::compiler::PropertyAccessInfo"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %310 = load %"class.v8::internal::Handle"*, %"class.v8::internal::Handle"** %309, align 8, !alias.scope !162
  %311 = icmp eq %"class.v8::internal::Handle"* %310, null
  br i1 %311, label %316, label %312

312:                                              ; preds = %308
  %313 = ptrtoint %"class.v8::internal::Handle"* %310 to i64
  %314 = getelementptr inbounds %"class.v8::internal::compiler::PropertyAccessInfo", %"class.v8::internal::compiler::PropertyAccessInfo"* %0, i64 0, i32 1, i32 0, i32 0, i32 1
  %315 = bitcast %"class.v8::internal::Handle"** %314 to i64*
  store i64 %313, i64* %315, align 8, !alias.scope !162
  br label %316

316:                                              ; preds = %312, %308, %289, %287
  %317 = load i64, i64* %4, align 8
  %318 = add i64 %317, 11
  %319 = inttoptr i64 %318 to i32*
  %320 = load atomic i32, i32* %319 monotonic, align 4
  %321 = and i32 %320, 2097152
  %322 = icmp eq i32 %321, 0
  br i1 %322, label %324, label %323

323:                                              ; preds = %316
  call void @_ZN2v88internal8compiler18PropertyAccessInfo31DictionaryProtoAccessorConstantEPNS0_4ZoneENS0_6HandleINS0_3MapEEENS0_11MaybeHandleINS0_8JSObjectEEENS5_INS0_6ObjectEEENS5_INS0_4NameEEE(%"class.v8::internal::compiler::PropertyAccessInfo"* sret %0, %"class.v8::internal::Zone"* %29, i64* %2, i64* %288, i64* %165, i64* %3) #8
  br label %325

324:                                              ; preds = %316
  call void @_ZN2v88internal8compiler18PropertyAccessInfo20FastAccessorConstantEPNS0_4ZoneENS0_6HandleINS0_3MapEEENS5_INS0_6ObjectEEENS0_11MaybeHandleINS0_8JSObjectEEE(%"class.v8::internal::compiler::PropertyAccessInfo"* sret %0, %"class.v8::internal::Zone"* %29, i64* %2, i64* %165, i64* %288) #8
  br label %325

325:                                              ; preds = %294, %139, %269, %231, %324, %323, %168, %90, %108, %111
  ret void
}

; Function Attrs: noreturn nounwind ssp uwtable
define hidden void @_ZNK2v88internal8compiler17AccessInfoFactory32ComputeDictionaryProtoAccessInfoENS0_6HandleINS0_3MapEEENS3_INS0_4NameEEENS3_INS0_8JSObjectEEENS0_13InternalIndexENS1_10AccessModeENS0_15PropertyDetailsE(%"class.v8::internal::compiler::PropertyAccessInfo"* noalias nocapture readnone sret, %"class.v8::internal::compiler::AccessInfoFactory"* nocapture readnone, i64* nocapture readnone, i64* nocapture readnone, i64* nocapture readnone, i64, i32, i32) local_unnamed_addr #6 align 2 {
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.5, i64 0, i64 0), i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.8, i64 0, i64 0)) #12
  unreachable
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK2v88internal8compiler17AccessInfoFactory25ComputePropertyAccessInfoERKNS1_37MinimorphicLoadPropertyAccessFeedbackE(%"class.v8::internal::compiler::MinimorphicLoadPropertyAccessInfo"* noalias nocapture sret, %"class.v8::internal::compiler::AccessInfoFactory"* nocapture readnone, %"class.v8::internal::compiler::MinimorphicLoadPropertyAccessFeedback"* nocapture readonly dereferenceable(72)) local_unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.v8::internal::compiler::MinimorphicLoadPropertyAccessFeedback", %"class.v8::internal::compiler::MinimorphicLoadPropertyAccessFeedback"* %2, i64 0, i32 3, i32 0, i32 0
  %5 = load i64*, i64** %4, align 8
  %6 = load i64, i64* %5, align 8
  %7 = trunc i64 %6 to i32
  %8 = ashr i32 %7, 1
  %9 = and i32 %7, 512
  %10 = icmp ne i32 %9, 0
  %11 = lshr i32 %8, 7
  %12 = and i32 %11, 8188
  %13 = select i1 %10, i8 2, i8 4
  %14 = select i1 %10, i64 7263, i64 4294967295
  %15 = trunc i32 %11 to i8
  %16 = and i8 %15, 1
  %17 = getelementptr inbounds %"class.v8::internal::compiler::MinimorphicLoadPropertyAccessInfo", %"class.v8::internal::compiler::MinimorphicLoadPropertyAccessInfo"* %0, i64 0, i32 0
  store i32 1, i32* %17, align 8, !alias.scope !181
  %18 = getelementptr inbounds %"class.v8::internal::compiler::MinimorphicLoadPropertyAccessInfo", %"class.v8::internal::compiler::MinimorphicLoadPropertyAccessInfo"* %0, i64 0, i32 1
  store i8 %16, i8* %18, align 4, !alias.scope !181
  %19 = getelementptr inbounds %"class.v8::internal::compiler::MinimorphicLoadPropertyAccessInfo", %"class.v8::internal::compiler::MinimorphicLoadPropertyAccessInfo"* %0, i64 0, i32 2
  store i32 %12, i32* %19, align 8, !alias.scope !181
  %20 = getelementptr inbounds %"class.v8::internal::compiler::MinimorphicLoadPropertyAccessInfo", %"class.v8::internal::compiler::MinimorphicLoadPropertyAccessInfo"* %0, i64 0, i32 3, i32 0
  store i8 %13, i8* %20, align 4, !alias.scope !181
  %21 = getelementptr inbounds %"class.v8::internal::compiler::MinimorphicLoadPropertyAccessInfo", %"class.v8::internal::compiler::MinimorphicLoadPropertyAccessInfo"* %0, i64 0, i32 4, i32 0
  store i64 %14, i64* %21, align 8, !alias.scope !181
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK2v88internal8compiler17AccessInfoFactory22TryLoadPropertyDetailsENS0_6HandleINS0_3MapEEENS0_11MaybeHandleINS0_8JSObjectEEENS3_INS0_4NameEEEPNS0_13InternalIndexEPNS0_15PropertyDetailsE(%"class.v8::internal::compiler::AccessInfoFactory"* nocapture readonly, i64*, i64*, i64*, %"class.v8::internal::InternalIndex"* nocapture, %"class.v8::internal::PropertyDetails"* nocapture) local_unnamed_addr #0 align 2 {
  %7 = alloca %"class.v8::internal::DescriptorArray", align 8
  %8 = load i64, i64* %1, align 8
  %9 = add i64 %8, 11
  %10 = inttoptr i64 %9 to i32*
  %11 = load atomic i32, i32* %10 monotonic, align 4
  %12 = and i32 %11, 2097152
  %13 = icmp eq i32 %12, 0
  br i1 %13, label %110, label %14

14:                                               ; preds = %6
  %15 = icmp eq i64* %2, null
  br i1 %15, label %177, label %16

16:                                               ; preds = %14
  %17 = load i64, i64* %2, align 8
  %18 = and i64 %17, -4294967296
  %19 = add i64 %17, 3
  %20 = inttoptr i64 %19 to i32*
  %21 = load i32, i32* %20, align 4
  %22 = zext i32 %21 to i64
  %23 = or i64 %18, %22
  %24 = and i64 %22, 1
  %25 = icmp eq i64 %24, 0
  br i1 %25, label %26, label %47

26:                                               ; preds = %16
  %27 = load %"class.v8::internal::SoleReadOnlyHeap"*, %"class.v8::internal::SoleReadOnlyHeap"** @_ZN2v88internal16SoleReadOnlyHeap15shared_ro_heap_E, align 8
  %28 = icmp eq %"class.v8::internal::SoleReadOnlyHeap"* %27, null
  br i1 %28, label %35, label %29

29:                                               ; preds = %26
  %30 = getelementptr inbounds %"class.v8::internal::SoleReadOnlyHeap", %"class.v8::internal::SoleReadOnlyHeap"* %27, i64 0, i32 0, i32 1
  %31 = load i8, i8* %30, align 8, !range !80
  %32 = icmp eq i8 %31, 0
  br i1 %32, label %35, label %33

33:                                               ; preds = %29
  %34 = getelementptr inbounds %"class.v8::internal::SoleReadOnlyHeap", %"class.v8::internal::SoleReadOnlyHeap"* %27, i64 0, i32 1, i64 0
  br label %43

35:                                               ; preds = %29, %26
  %36 = and i64 %17, -262144
  %37 = or i64 %36, 16
  %38 = inttoptr i64 %37 to i64*
  %39 = load i64, i64* %38, align 16
  %40 = add i64 %39, -41416
  %41 = inttoptr i64 %40 to %"class.v8::internal::Isolate"*
  %42 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %41, i64 0, i32 0, i32 7, i32 0, i64 0
  br label %43

43:                                               ; preds = %35, %33
  %44 = phi i64* [ %42, %35 ], [ %34, %33 ]
  %45 = getelementptr inbounds i64, i64* %44, i64 115
  %46 = load i64, i64* %45, align 8
  br label %47

47:                                               ; preds = %16, %43
  %48 = phi i64 [ %46, %43 ], [ %23, %16 ]
  %49 = getelementptr inbounds %"class.v8::internal::compiler::AccessInfoFactory", %"class.v8::internal::compiler::AccessInfoFactory"* %0, i64 0, i32 0
  %50 = load %"class.v8::internal::compiler::JSHeapBroker"*, %"class.v8::internal::compiler::JSHeapBroker"** %49, align 8
  %51 = getelementptr inbounds %"class.v8::internal::compiler::JSHeapBroker", %"class.v8::internal::compiler::JSHeapBroker"* %50, i64 0, i32 0
  %52 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %51, align 8
  %53 = load i64, i64* %3, align 8
  %54 = add i64 %53, 3
  %55 = inttoptr i64 %54 to i32*
  %56 = load i32, i32* %55, align 4
  %57 = lshr i32 %56, 2
  %58 = add i64 %48, 15
  %59 = inttoptr i64 %58 to i32*
  %60 = load atomic i32, i32* %59 monotonic, align 4
  %61 = ashr i32 %60, 1
  %62 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %52, i64 0, i32 0, i32 7, i32 0, i64 4
  %63 = load i64, i64* %62, align 8
  %64 = add nsw i32 %61, -1
  %65 = and i32 %64, %57
  %66 = zext i32 %65 to i64
  %67 = mul i64 %66, 51539607552
  %68 = add i64 %67, 85899345920
  %69 = ashr exact i64 %68, 32
  %70 = add i64 %48, 7
  %71 = add i64 %69, %70
  %72 = inttoptr i64 %71 to i32*
  %73 = load atomic i32, i32* %72 monotonic, align 4
  %74 = trunc i64 %63 to i32
  %75 = icmp eq i32 %73, %74
  br i1 %75, label %95, label %76

76:                                               ; preds = %47
  %77 = trunc i64 %53 to i32
  %78 = icmp eq i32 %73, %77
  br i1 %78, label %99, label %82

79:                                               ; preds = %82
  %80 = add i32 %83, 1
  %81 = icmp eq i32 %93, %77
  br i1 %81, label %97, label %82

82:                                               ; preds = %76, %79
  %83 = phi i32 [ %80, %79 ], [ 1, %76 ]
  %84 = phi i32 [ %86, %79 ], [ %65, %76 ]
  %85 = add i32 %84, %83
  %86 = and i32 %85, %64
  %87 = zext i32 %86 to i64
  %88 = mul i64 %87, 51539607552
  %89 = add i64 %88, 85899345920
  %90 = ashr exact i64 %89, 32
  %91 = add i64 %90, %70
  %92 = inttoptr i64 %91 to i32*
  %93 = load atomic i32, i32* %92 monotonic, align 4
  %94 = icmp eq i32 %93, %74
  br i1 %94, label %95, label %79

95:                                               ; preds = %82, %47
  %96 = getelementptr inbounds %"class.v8::internal::InternalIndex", %"class.v8::internal::InternalIndex"* %4, i64 0, i32 0
  store i64 -1, i64* %96, align 8
  br label %177

97:                                               ; preds = %79
  %98 = zext i32 %86 to i64
  br label %99

99:                                               ; preds = %97, %76
  %100 = phi i64 [ %67, %76 ], [ %88, %97 ]
  %101 = phi i64 [ %66, %76 ], [ %98, %97 ]
  %102 = getelementptr inbounds %"class.v8::internal::InternalIndex", %"class.v8::internal::InternalIndex"* %4, i64 0, i32 0
  store i64 %101, i64* %102, align 8
  %103 = add i64 %100, 120259084288
  %104 = ashr exact i64 %103, 32
  %105 = add i64 %70, %104
  %106 = inttoptr i64 %105 to i32*
  %107 = load atomic i32, i32* %106 monotonic, align 4
  %108 = ashr i32 %107, 1
  %109 = getelementptr inbounds %"class.v8::internal::PropertyDetails", %"class.v8::internal::PropertyDetails"* %5, i64 0, i32 0
  store i32 %108, i32* %109, align 4
  br label %177

110:                                              ; preds = %6
  %111 = bitcast %"class.v8::internal::DescriptorArray"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %111) #8
  %112 = and i64 %8, -4294967296
  %113 = add i64 %8, 23
  %114 = inttoptr i64 %113 to i32*
  %115 = load atomic i32, i32* %114 acquire, align 4
  %116 = zext i32 %115 to i64
  %117 = or i64 %112, %116
  %118 = getelementptr inbounds %"class.v8::internal::DescriptorArray", %"class.v8::internal::DescriptorArray"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i64 %117, i64* %118, align 8
  %119 = load i64, i64* %3, align 8
  %120 = load i64, i64* %1, align 8
  %121 = getelementptr inbounds %"class.v8::internal::compiler::AccessInfoFactory", %"class.v8::internal::compiler::AccessInfoFactory"* %0, i64 0, i32 0
  %122 = load %"class.v8::internal::compiler::JSHeapBroker"*, %"class.v8::internal::compiler::JSHeapBroker"** %121, align 8
  %123 = getelementptr inbounds %"class.v8::internal::compiler::JSHeapBroker", %"class.v8::internal::compiler::JSHeapBroker"* %122, i64 0, i32 8
  %124 = load i8, i8* %123, align 1, !range !80
  %125 = add i64 %120, 11
  %126 = inttoptr i64 %125 to i32*
  %127 = load atomic i32, i32* %126 acquire, align 4
  %128 = lshr i32 %127, 10
  %129 = and i32 %128, 1023
  %130 = icmp eq i32 %129, 0
  br i1 %130, label %131, label %133

131:                                              ; preds = %110
  %132 = getelementptr inbounds %"class.v8::internal::InternalIndex", %"class.v8::internal::InternalIndex"* %4, i64 0, i32 0
  store i64 -1, i64* %132, align 8
  br label %176

133:                                              ; preds = %110
  %134 = icmp ne i8 %124, 0
  %135 = icmp ult i32 %129, 9
  %136 = or i1 %134, %135
  br i1 %136, label %137, label %158

137:                                              ; preds = %133
  %138 = load i64, i64* %118, align 8
  %139 = trunc i64 %119 to i32
  %140 = zext i32 %129 to i64
  %141 = add i64 %138, -1
  br label %142

142:                                              ; preds = %151, %137
  %143 = phi i64 [ 0, %137 ], [ %152, %151 ]
  %144 = mul nuw nsw i64 %143, 51539607552
  %145 = add nuw nsw i64 %144, 68719476736
  %146 = lshr exact i64 %145, 32
  %147 = add i64 %141, %146
  %148 = inttoptr i64 %147 to i32*
  %149 = load atomic i32, i32* %148 monotonic, align 4
  %150 = icmp eq i32 %149, %139
  br i1 %150, label %156, label %151

151:                                              ; preds = %142
  %152 = add nuw nsw i64 %143, 1
  %153 = icmp eq i64 %152, %140
  br i1 %153, label %154, label %142

154:                                              ; preds = %151
  %155 = getelementptr inbounds %"class.v8::internal::InternalIndex", %"class.v8::internal::InternalIndex"* %4, i64 0, i32 0
  store i64 -1, i64* %155, align 8
  br label %176

156:                                              ; preds = %142
  %157 = trunc i64 %143 to i32
  br label %160

158:                                              ; preds = %133
  %159 = call i32 @_ZN2v88internal12BinarySearchILNS0_10SearchModeE1ENS0_15DescriptorArrayEEEiPT0_NS0_4NameEiPi(%"class.v8::internal::DescriptorArray"* nonnull %7, i64 %119, i32 %129, i32* null) #8
  br label %160

160:                                              ; preds = %156, %158
  %161 = phi i32 [ %159, %158 ], [ %157, %156 ]
  %162 = sext i32 %161 to i64
  %163 = getelementptr inbounds %"class.v8::internal::InternalIndex", %"class.v8::internal::InternalIndex"* %4, i64 0, i32 0
  store i64 %162, i64* %163, align 8
  %164 = icmp eq i32 %161, -1
  br i1 %164, label %176, label %165

165:                                              ; preds = %160
  %166 = load i64, i64* %118, align 8
  %167 = mul i64 %162, 51539607552
  %168 = add i64 %167, 68719476736
  %169 = ashr exact i64 %168, 32
  %170 = or i64 %169, 3
  %171 = add i64 %166, %170
  %172 = inttoptr i64 %171 to i32*
  %173 = load atomic i32, i32* %172 monotonic, align 4
  %174 = ashr i32 %173, 1
  %175 = getelementptr inbounds %"class.v8::internal::PropertyDetails", %"class.v8::internal::PropertyDetails"* %5, i64 0, i32 0
  store i32 %174, i32* %175, align 4
  br label %176

176:                                              ; preds = %160, %154, %131, %165
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %111) #8
  br label %177

177:                                              ; preds = %14, %99, %95, %176
  %178 = phi i1 [ true, %176 ], [ true, %95 ], [ true, %99 ], [ false, %14 ]
  ret i1 %178
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK2v88internal8compiler17AccessInfoFactory25ComputePropertyAccessInfoENS0_6HandleINS0_3MapEEENS3_INS0_4NameEEENS1_10AccessModeE(%"class.v8::internal::compiler::PropertyAccessInfo"* noalias sret, %"class.v8::internal::compiler::AccessInfoFactory"*, i64*, i64*, i32) local_unnamed_addr #0 align 2 {
  %6 = alloca %"class.v8::internal::DescriptorArray", align 8
  %7 = alloca i64, align 8
  %8 = alloca %"class.v8::internal::PropertyDetails", align 4
  %9 = alloca %"class.v8::internal::InternalIndex", align 8
  %10 = alloca %"class.v8::base::Optional.1270", align 8
  %11 = alloca <2 x i64>, align 16
  %12 = bitcast <2 x i64>* %11 to %"class.v8::internal::compiler::NativeContextRef"*
  %13 = ptrtoint i64* %2 to i64
  store i64 %13, i64* %7, align 8
  %14 = load i64, i64* %3, align 8
  %15 = and i64 %14, -4294967296
  %16 = add i64 %14, -1
  %17 = inttoptr i64 %16 to i32*
  %18 = load atomic i32, i32* %17 monotonic, align 4
  %19 = zext i32 %18 to i64
  %20 = or i64 %15, %19
  %21 = add i64 %20, 7
  %22 = inttoptr i64 %21 to i16*
  %23 = load atomic i16, i16* %22 monotonic, align 2
  %24 = and i16 %23, -32
  %25 = icmp eq i16 %24, 32
  br i1 %25, label %26, label %27, !prof !2

26:                                               ; preds = %5
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.5, i64 0, i64 0), i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.9, i64 0, i64 0)) #12
  unreachable

27:                                               ; preds = %5
  %28 = getelementptr inbounds %"class.v8::internal::compiler::AccessInfoFactory", %"class.v8::internal::compiler::AccessInfoFactory"* %1, i64 0, i32 0
  %29 = load %"class.v8::internal::compiler::JSHeapBroker"*, %"class.v8::internal::compiler::JSHeapBroker"** %28, align 8
  %30 = getelementptr inbounds %"class.v8::internal::compiler::JSHeapBroker", %"class.v8::internal::compiler::JSHeapBroker"* %29, i64 0, i32 0
  %31 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %30, align 8
  %32 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %31, i64 0, i32 20
  %33 = getelementptr inbounds %"class.v8::internal::compiler::JSHeapBroker", %"class.v8::internal::compiler::JSHeapBroker"* %29, i64 0, i32 24
  %34 = load i32, i32* %33, align 8
  %35 = icmp eq i32 %34, 0
  br i1 %35, label %36, label %38

36:                                               ; preds = %27
  tail call void @_ZN2v84base11SharedMutex10LockSharedEv(%"class.v8::base::SharedMutex"* %32) #8
  %37 = load i32, i32* %33, align 8
  br label %38

38:                                               ; preds = %27, %36
  %39 = phi i32 [ %37, %36 ], [ %34, %27 ]
  %40 = phi i8 [ 1, %36 ], [ 0, %27 ]
  %41 = phi %"class.v8::base::SharedMutex"* [ %32, %36 ], [ null, %27 ]
  %42 = add nsw i32 %39, 1
  store i32 %42, i32* %33, align 8
  %43 = icmp eq i32 %4, 3
  br i1 %43, label %44, label %117

44:                                               ; preds = %38
  %45 = load i64, i64* %2, align 8
  %46 = add i64 %45, 7
  %47 = inttoptr i64 %46 to i16*
  %48 = load atomic i16, i16* %47 monotonic, align 2
  %49 = icmp ugt i16 %48, 185
  br i1 %49, label %50, label %97

50:                                               ; preds = %44
  %51 = bitcast i64* %7 to i64**
  %52 = load %"class.v8::internal::SoleReadOnlyHeap"*, %"class.v8::internal::SoleReadOnlyHeap"** @_ZN2v88internal16SoleReadOnlyHeap15shared_ro_heap_E, align 8
  %53 = icmp eq %"class.v8::internal::SoleReadOnlyHeap"* %52, null
  br i1 %53, label %60, label %54

54:                                               ; preds = %50
  %55 = getelementptr inbounds %"class.v8::internal::SoleReadOnlyHeap", %"class.v8::internal::SoleReadOnlyHeap"* %52, i64 0, i32 0, i32 1
  %56 = load i8, i8* %55, align 8, !range !80
  %57 = icmp eq i8 %56, 0
  br i1 %57, label %60, label %58

58:                                               ; preds = %54
  %59 = getelementptr inbounds %"class.v8::internal::SoleReadOnlyHeap", %"class.v8::internal::SoleReadOnlyHeap"* %52, i64 0, i32 1, i64 0
  br label %68

60:                                               ; preds = %54, %50
  %61 = and i64 %45, -262144
  %62 = or i64 %61, 16
  %63 = inttoptr i64 %62 to i64*
  %64 = load i64, i64* %63, align 16
  %65 = add i64 %64, -41416
  %66 = inttoptr i64 %65 to %"class.v8::internal::Isolate"*
  %67 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %66, i64 0, i32 0, i32 7, i32 0, i64 0
  br label %68

68:                                               ; preds = %60, %58
  %69 = phi i64* [ %67, %60 ], [ %59, %58 ]
  %70 = getelementptr inbounds i64, i64* %69, i64 96
  %71 = load i64, i64* %70, align 8
  %72 = trunc i64 %45 to i32
  %73 = trunc i64 %71 to i32
  %74 = icmp eq i32 %72, %73
  br i1 %74, label %189, label %75

75:                                               ; preds = %68
  %76 = load atomic i16, i16* %47 monotonic, align 2
  %77 = icmp ult i16 %76, 67
  br i1 %77, label %189, label %78

78:                                               ; preds = %75
  %79 = load atomic i16, i16* %47 monotonic, align 2
  %80 = icmp ugt i16 %79, 188
  br i1 %80, label %81, label %167

81:                                               ; preds = %78
  %82 = add i64 %45, 11
  %83 = inttoptr i64 %82 to i32*
  %84 = load atomic i32, i32* %83 monotonic, align 4
  %85 = and i32 %84, 2097152
  %86 = icmp eq i32 %85, 0
  br i1 %86, label %87, label %167

87:                                               ; preds = %81
  %88 = add i64 %45, 9
  %89 = inttoptr i64 %88 to i8*
  %90 = load atomic i8, i8* %89 monotonic, align 1
  %91 = and i8 %90, 4
  %92 = icmp eq i8 %91, 0
  br i1 %92, label %93, label %167

93:                                               ; preds = %87
  %94 = load atomic i8, i8* %89 monotonic, align 1
  %95 = and i8 %94, 32
  %96 = icmp eq i8 %95, 0
  br i1 %96, label %189, label %167

97:                                               ; preds = %44
  %98 = getelementptr inbounds %"class.v8::internal::compiler::AccessInfoFactory", %"class.v8::internal::compiler::AccessInfoFactory"* %1, i64 0, i32 3
  %99 = bitcast %"class.v8::internal::Zone"** %98 to i64*
  %100 = load i64, i64* %99, align 8, !noalias !184
  %101 = getelementptr inbounds %"class.v8::internal::compiler::PropertyAccessInfo", %"class.v8::internal::compiler::PropertyAccessInfo"* %0, i64 0, i32 0
  store i32 0, i32* %101, align 8, !alias.scope !187
  %102 = getelementptr inbounds %"class.v8::internal::compiler::PropertyAccessInfo", %"class.v8::internal::compiler::PropertyAccessInfo"* %0, i64 0, i32 1
  %103 = getelementptr inbounds %"class.v8::internal::compiler::PropertyAccessInfo", %"class.v8::internal::compiler::PropertyAccessInfo"* %0, i64 0, i32 1, i32 0, i32 0, i32 2, i32 1
  %104 = bitcast %"struct.std::__1::__compressed_pair_elem.0"* %103 to i64*
  %105 = bitcast %"class.v8::internal::ZoneVector"* %102 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %105, i8 0, i64 24, i1 false) #8, !alias.scope !187
  store i64 %100, i64* %104, align 8, !alias.scope !187
  %106 = getelementptr inbounds %"class.v8::internal::compiler::PropertyAccessInfo", %"class.v8::internal::compiler::PropertyAccessInfo"* %0, i64 0, i32 2, i32 0, i32 0
  %107 = getelementptr inbounds %"class.v8::internal::compiler::PropertyAccessInfo", %"class.v8::internal::compiler::PropertyAccessInfo"* %0, i64 0, i32 4, i32 0, i32 0, i32 2, i32 1
  %108 = bitcast %"struct.std::__1::__compressed_pair_elem.27"* %107 to i64*
  %109 = bitcast i64** %106 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %109, i8 0, i64 40, i1 false) #8, !alias.scope !187
  store i64 %100, i64* %108, align 8, !alias.scope !187
  %110 = getelementptr inbounds %"class.v8::internal::compiler::PropertyAccessInfo", %"class.v8::internal::compiler::PropertyAccessInfo"* %0, i64 0, i32 5, i32 0
  %111 = getelementptr inbounds %"class.v8::internal::compiler::PropertyAccessInfo", %"class.v8::internal::compiler::PropertyAccessInfo"* %0, i64 0, i32 8, i32 0
  %112 = bitcast i64** %110 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %112, i8 0, i64 17, i1 false) #8, !alias.scope !187
  store i64 1, i64* %111, align 8, !alias.scope !187
  %113 = getelementptr inbounds %"class.v8::internal::compiler::PropertyAccessInfo", %"class.v8::internal::compiler::PropertyAccessInfo"* %0, i64 0, i32 9, i32 0
  %114 = getelementptr inbounds %"class.v8::internal::compiler::PropertyAccessInfo", %"class.v8::internal::compiler::PropertyAccessInfo"* %0, i64 0, i32 11, i32 0
  %115 = bitcast i64** %113 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %115, i8 0, i64 16, i1 false) #8, !alias.scope !187
  store i64 -1, i64* %114, align 8, !alias.scope !187
  %116 = getelementptr inbounds %"class.v8::internal::compiler::PropertyAccessInfo", %"class.v8::internal::compiler::PropertyAccessInfo"* %0, i64 0, i32 12, i32 0
  store i64* null, i64** %116, align 8, !alias.scope !187
  br label %618

117:                                              ; preds = %38
  %118 = bitcast i64* %7 to i64**
  %119 = load i64, i64* %2, align 8
  %120 = load %"class.v8::internal::SoleReadOnlyHeap"*, %"class.v8::internal::SoleReadOnlyHeap"** @_ZN2v88internal16SoleReadOnlyHeap15shared_ro_heap_E, align 8
  %121 = icmp eq %"class.v8::internal::SoleReadOnlyHeap"* %120, null
  br i1 %121, label %128, label %122

122:                                              ; preds = %117
  %123 = getelementptr inbounds %"class.v8::internal::SoleReadOnlyHeap", %"class.v8::internal::SoleReadOnlyHeap"* %120, i64 0, i32 0, i32 1
  %124 = load i8, i8* %123, align 8, !range !80
  %125 = icmp eq i8 %124, 0
  br i1 %125, label %128, label %126

126:                                              ; preds = %122
  %127 = getelementptr inbounds %"class.v8::internal::SoleReadOnlyHeap", %"class.v8::internal::SoleReadOnlyHeap"* %120, i64 0, i32 1, i64 0
  br label %136

128:                                              ; preds = %122, %117
  %129 = and i64 %119, -262144
  %130 = or i64 %129, 16
  %131 = inttoptr i64 %130 to i64*
  %132 = load i64, i64* %131, align 16
  %133 = add i64 %132, -41416
  %134 = inttoptr i64 %133 to %"class.v8::internal::Isolate"*
  %135 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %134, i64 0, i32 0, i32 7, i32 0, i64 0
  br label %136

136:                                              ; preds = %128, %126
  %137 = phi i64* [ %135, %128 ], [ %127, %126 ]
  %138 = getelementptr inbounds i64, i64* %137, i64 96
  %139 = load i64, i64* %138, align 8
  %140 = trunc i64 %119 to i32
  %141 = trunc i64 %139 to i32
  %142 = icmp eq i32 %140, %141
  br i1 %142, label %187, label %143

143:                                              ; preds = %136
  %144 = add i64 %119, 7
  %145 = inttoptr i64 %144 to i16*
  %146 = load atomic i16, i16* %145 monotonic, align 2
  %147 = icmp ult i16 %146, 67
  br i1 %147, label %187, label %148

148:                                              ; preds = %143
  %149 = load atomic i16, i16* %145 monotonic, align 2
  %150 = icmp ugt i16 %149, 188
  br i1 %150, label %151, label %167

151:                                              ; preds = %148
  %152 = add i64 %119, 11
  %153 = inttoptr i64 %152 to i32*
  %154 = load atomic i32, i32* %153 monotonic, align 4
  %155 = and i32 %154, 2097152
  %156 = icmp eq i32 %155, 0
  br i1 %156, label %157, label %167

157:                                              ; preds = %151
  %158 = add i64 %119, 9
  %159 = inttoptr i64 %158 to i8*
  %160 = load atomic i8, i8* %159 monotonic, align 1
  %161 = and i8 %160, 4
  %162 = icmp eq i8 %161, 0
  br i1 %162, label %163, label %167

163:                                              ; preds = %157
  %164 = load atomic i8, i8* %159 monotonic, align 1
  %165 = and i8 %164, 32
  %166 = icmp eq i8 %165, 0
  br i1 %166, label %187, label %167

167:                                              ; preds = %157, %148, %151, %87, %78, %81, %93, %163
  %168 = getelementptr inbounds %"class.v8::internal::compiler::AccessInfoFactory", %"class.v8::internal::compiler::AccessInfoFactory"* %1, i64 0, i32 3
  %169 = bitcast %"class.v8::internal::Zone"** %168 to i64*
  %170 = load i64, i64* %169, align 8, !noalias !190
  %171 = getelementptr inbounds %"class.v8::internal::compiler::PropertyAccessInfo", %"class.v8::internal::compiler::PropertyAccessInfo"* %0, i64 0, i32 0
  store i32 0, i32* %171, align 8, !alias.scope !193
  %172 = getelementptr inbounds %"class.v8::internal::compiler::PropertyAccessInfo", %"class.v8::internal::compiler::PropertyAccessInfo"* %0, i64 0, i32 1
  %173 = getelementptr inbounds %"class.v8::internal::compiler::PropertyAccessInfo", %"class.v8::internal::compiler::PropertyAccessInfo"* %0, i64 0, i32 1, i32 0, i32 0, i32 2, i32 1
  %174 = bitcast %"struct.std::__1::__compressed_pair_elem.0"* %173 to i64*
  %175 = bitcast %"class.v8::internal::ZoneVector"* %172 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %175, i8 0, i64 24, i1 false) #8, !alias.scope !193
  store i64 %170, i64* %174, align 8, !alias.scope !193
  %176 = getelementptr inbounds %"class.v8::internal::compiler::PropertyAccessInfo", %"class.v8::internal::compiler::PropertyAccessInfo"* %0, i64 0, i32 2, i32 0, i32 0
  %177 = getelementptr inbounds %"class.v8::internal::compiler::PropertyAccessInfo", %"class.v8::internal::compiler::PropertyAccessInfo"* %0, i64 0, i32 4, i32 0, i32 0, i32 2, i32 1
  %178 = bitcast %"struct.std::__1::__compressed_pair_elem.27"* %177 to i64*
  %179 = bitcast i64** %176 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %179, i8 0, i64 40, i1 false) #8, !alias.scope !193
  store i64 %170, i64* %178, align 8, !alias.scope !193
  %180 = getelementptr inbounds %"class.v8::internal::compiler::PropertyAccessInfo", %"class.v8::internal::compiler::PropertyAccessInfo"* %0, i64 0, i32 5, i32 0
  %181 = getelementptr inbounds %"class.v8::internal::compiler::PropertyAccessInfo", %"class.v8::internal::compiler::PropertyAccessInfo"* %0, i64 0, i32 8, i32 0
  %182 = bitcast i64** %180 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %182, i8 0, i64 17, i1 false) #8, !alias.scope !193
  store i64 1, i64* %181, align 8, !alias.scope !193
  %183 = getelementptr inbounds %"class.v8::internal::compiler::PropertyAccessInfo", %"class.v8::internal::compiler::PropertyAccessInfo"* %0, i64 0, i32 9, i32 0
  %184 = getelementptr inbounds %"class.v8::internal::compiler::PropertyAccessInfo", %"class.v8::internal::compiler::PropertyAccessInfo"* %0, i64 0, i32 11, i32 0
  %185 = bitcast i64** %183 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %185, i8 0, i64 16, i1 false) #8, !alias.scope !193
  store i64 -1, i64* %184, align 8, !alias.scope !193
  %186 = getelementptr inbounds %"class.v8::internal::compiler::PropertyAccessInfo", %"class.v8::internal::compiler::PropertyAccessInfo"* %0, i64 0, i32 12, i32 0
  store i64* null, i64** %186, align 8, !alias.scope !193
  br label %618

187:                                              ; preds = %143, %136, %163
  %188 = icmp eq i32 %4, 0
  br i1 %188, label %189, label %215

189:                                              ; preds = %187, %68, %75, %93
  %190 = phi i64** [ %118, %187 ], [ %51, %93 ], [ %51, %75 ], [ %51, %68 ]
  %191 = load i64*, i64** %190, align 8
  tail call void @_ZNK2v88internal8compiler17AccessInfoFactory26LookupSpecialFieldAccessorENS0_6HandleINS0_3MapEEENS3_INS0_4NameEEE(%"class.v8::internal::compiler::PropertyAccessInfo"* sret %0, %"class.v8::internal::compiler::AccessInfoFactory"* %1, i64* %191, i64* %3)
  %192 = getelementptr inbounds %"class.v8::internal::compiler::PropertyAccessInfo", %"class.v8::internal::compiler::PropertyAccessInfo"* %0, i64 0, i32 0
  %193 = load i32, i32* %192, align 8
  %194 = icmp eq i32 %193, 0
  br i1 %194, label %195, label %618

195:                                              ; preds = %189
  %196 = getelementptr inbounds %"class.v8::internal::compiler::PropertyAccessInfo", %"class.v8::internal::compiler::PropertyAccessInfo"* %0, i64 0, i32 4, i32 0, i32 0, i32 0
  %197 = load %"class.v8::internal::compiler::CompilationDependency"**, %"class.v8::internal::compiler::CompilationDependency"*** %196, align 8
  %198 = icmp eq %"class.v8::internal::compiler::CompilationDependency"** %197, null
  br i1 %198, label %203, label %199

199:                                              ; preds = %195
  %200 = ptrtoint %"class.v8::internal::compiler::CompilationDependency"** %197 to i64
  %201 = getelementptr inbounds %"class.v8::internal::compiler::PropertyAccessInfo", %"class.v8::internal::compiler::PropertyAccessInfo"* %0, i64 0, i32 4, i32 0, i32 0, i32 1
  %202 = bitcast %"class.v8::internal::compiler::CompilationDependency"*** %201 to i64*
  store i64 %200, i64* %202, align 8
  br label %203

203:                                              ; preds = %199, %195
  %204 = getelementptr inbounds %"class.v8::internal::compiler::PropertyAccessInfo", %"class.v8::internal::compiler::PropertyAccessInfo"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %205 = load %"class.v8::internal::Handle"*, %"class.v8::internal::Handle"** %204, align 8
  %206 = icmp eq %"class.v8::internal::Handle"* %205, null
  br i1 %206, label %211, label %207

207:                                              ; preds = %203
  %208 = ptrtoint %"class.v8::internal::Handle"* %205 to i64
  %209 = getelementptr inbounds %"class.v8::internal::compiler::PropertyAccessInfo", %"class.v8::internal::compiler::PropertyAccessInfo"* %0, i64 0, i32 1, i32 0, i32 0, i32 1
  %210 = bitcast %"class.v8::internal::Handle"** %209 to i64*
  store i64 %208, i64* %210, align 8
  br label %211

211:                                              ; preds = %203, %207
  %212 = load i64*, i64** %190, align 8
  %213 = bitcast i64* %7 to i64**
  %214 = load i64, i64* %212, align 8
  br label %215

215:                                              ; preds = %211, %187
  %216 = phi i64 [ %214, %211 ], [ %119, %187 ]
  %217 = phi i64** [ %213, %211 ], [ %118, %187 ]
  %218 = phi i64* [ %212, %211 ], [ %2, %187 ]
  %219 = phi i64** [ %190, %211 ], [ %118, %187 ]
  %220 = bitcast %"class.v8::internal::PropertyDetails"* %8 to i8*
  %221 = getelementptr inbounds %"class.v8::internal::PropertyDetails", %"class.v8::internal::PropertyDetails"* %8, i64 0, i32 0
  %222 = bitcast %"class.v8::internal::InternalIndex"* %9 to i8*
  %223 = getelementptr inbounds %"class.v8::internal::InternalIndex", %"class.v8::internal::InternalIndex"* %9, i64 0, i32 0
  %224 = icmp eq i32 %4, 2
  %225 = getelementptr inbounds %"class.v8::base::Optional.1270", %"class.v8::base::Optional.1270"* %10, i64 0, i32 0, i32 0, i32 0, i32 0
  %226 = getelementptr inbounds %"class.v8::base::Optional.1270", %"class.v8::base::Optional.1270"* %10, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  %227 = getelementptr inbounds %"class.v8::internal::compiler::AccessInfoFactory", %"class.v8::internal::compiler::AccessInfoFactory"* %1, i64 0, i32 3
  %228 = bitcast %"class.v8::internal::Zone"** %227 to i64*
  %229 = getelementptr inbounds %"class.v8::internal::compiler::PropertyAccessInfo", %"class.v8::internal::compiler::PropertyAccessInfo"* %0, i64 0, i32 0
  %230 = getelementptr inbounds %"class.v8::internal::compiler::PropertyAccessInfo", %"class.v8::internal::compiler::PropertyAccessInfo"* %0, i64 0, i32 1
  %231 = getelementptr inbounds %"class.v8::internal::compiler::PropertyAccessInfo", %"class.v8::internal::compiler::PropertyAccessInfo"* %0, i64 0, i32 1, i32 0, i32 0, i32 2, i32 1
  %232 = bitcast %"struct.std::__1::__compressed_pair_elem.0"* %231 to i64*
  %233 = bitcast %"class.v8::internal::ZoneVector"* %230 to i8*
  %234 = getelementptr inbounds %"class.v8::internal::compiler::PropertyAccessInfo", %"class.v8::internal::compiler::PropertyAccessInfo"* %0, i64 0, i32 2, i32 0, i32 0
  %235 = getelementptr inbounds %"class.v8::internal::compiler::PropertyAccessInfo", %"class.v8::internal::compiler::PropertyAccessInfo"* %0, i64 0, i32 4, i32 0, i32 0, i32 2, i32 1
  %236 = bitcast %"struct.std::__1::__compressed_pair_elem.27"* %235 to i64*
  %237 = bitcast i64** %234 to i8*
  %238 = getelementptr inbounds %"class.v8::internal::compiler::PropertyAccessInfo", %"class.v8::internal::compiler::PropertyAccessInfo"* %0, i64 0, i32 5, i32 0
  %239 = getelementptr inbounds %"class.v8::internal::compiler::PropertyAccessInfo", %"class.v8::internal::compiler::PropertyAccessInfo"* %0, i64 0, i32 8, i32 0
  %240 = bitcast i64** %238 to i8*
  %241 = getelementptr inbounds %"class.v8::internal::compiler::PropertyAccessInfo", %"class.v8::internal::compiler::PropertyAccessInfo"* %0, i64 0, i32 9, i32 0
  %242 = getelementptr inbounds %"class.v8::internal::compiler::PropertyAccessInfo", %"class.v8::internal::compiler::PropertyAccessInfo"* %0, i64 0, i32 11, i32 0
  %243 = bitcast i64** %241 to i8*
  %244 = getelementptr inbounds %"class.v8::internal::compiler::PropertyAccessInfo", %"class.v8::internal::compiler::PropertyAccessInfo"* %0, i64 0, i32 12, i32 0
  %245 = bitcast <2 x i64>* %11 to i8*
  %246 = icmp eq i32 %4, 1
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %220) #8
  store i32 0, i32* %221, align 4
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %222) #8
  store i64 -1, i64* %223, align 8
  %247 = add i64 %216, 11
  %248 = inttoptr i64 %247 to i32*
  %249 = load atomic i32, i32* %248 monotonic, align 4
  %250 = and i32 %249, 2097152
  %251 = icmp eq i32 %250, 0
  br i1 %251, label %252, label %313

252:                                              ; preds = %215
  %253 = bitcast %"class.v8::internal::DescriptorArray"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %253) #8
  %254 = and i64 %216, -4294967296
  %255 = add i64 %216, 23
  %256 = inttoptr i64 %255 to i32*
  %257 = load atomic i32, i32* %256 acquire, align 4
  %258 = zext i32 %257 to i64
  %259 = or i64 %254, %258
  %260 = getelementptr inbounds %"class.v8::internal::DescriptorArray", %"class.v8::internal::DescriptorArray"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i64 %259, i64* %260, align 8
  %261 = load i64, i64* %3, align 8
  %262 = load i64, i64* %218, align 8
  %263 = load %"class.v8::internal::compiler::JSHeapBroker"*, %"class.v8::internal::compiler::JSHeapBroker"** %28, align 8
  %264 = getelementptr inbounds %"class.v8::internal::compiler::JSHeapBroker", %"class.v8::internal::compiler::JSHeapBroker"* %263, i64 0, i32 8
  %265 = load i8, i8* %264, align 1, !range !80
  %266 = add i64 %262, 11
  %267 = inttoptr i64 %266 to i32*
  %268 = load atomic i32, i32* %267 acquire, align 4
  %269 = lshr i32 %268, 10
  %270 = and i32 %269, 1023
  %271 = icmp eq i32 %270, 0
  br i1 %271, label %301, label %272

272:                                              ; preds = %252
  %273 = icmp ne i8 %265, 0
  %274 = icmp ult i32 %270, 9
  %275 = or i1 %273, %274
  br i1 %275, label %276, label %295

276:                                              ; preds = %272
  %277 = load i64, i64* %260, align 8
  %278 = trunc i64 %261 to i32
  %279 = zext i32 %270 to i64
  %280 = add i64 %277, -1
  br label %281

281:                                              ; preds = %290, %276
  %282 = phi i64 [ 0, %276 ], [ %291, %290 ]
  %283 = mul nuw nsw i64 %282, 51539607552
  %284 = add nuw nsw i64 %283, 68719476736
  %285 = lshr exact i64 %284, 32
  %286 = add i64 %280, %285
  %287 = inttoptr i64 %286 to i32*
  %288 = load atomic i32, i32* %287 monotonic, align 4
  %289 = icmp eq i32 %288, %278
  br i1 %289, label %293, label %290

290:                                              ; preds = %281
  %291 = add nuw nsw i64 %282, 1
  %292 = icmp eq i64 %291, %279
  br i1 %292, label %301, label %281

293:                                              ; preds = %281
  %294 = trunc i64 %282 to i32
  br label %297

295:                                              ; preds = %272
  %296 = call i32 @_ZN2v88internal12BinarySearchILNS0_10SearchModeE1ENS0_15DescriptorArrayEEEiPT0_NS0_4NameEiPi(%"class.v8::internal::DescriptorArray"* nonnull %6, i64 %261, i32 %270, i32* null) #8
  br label %297

297:                                              ; preds = %295, %293
  %298 = phi i32 [ %296, %295 ], [ %294, %293 ]
  %299 = sext i32 %298 to i64
  store i64 %299, i64* %223, align 8
  %300 = icmp eq i32 %298, -1
  br i1 %300, label %302, label %303

301:                                              ; preds = %290, %252
  store i64 -1, i64* %223, align 8
  br label %302

302:                                              ; preds = %301, %297
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %253) #8
  br label %363

303:                                              ; preds = %297
  %304 = load i64, i64* %260, align 8
  %305 = mul i64 %299, 51539607552
  %306 = add i64 %305, 68719476736
  %307 = ashr exact i64 %306, 32
  %308 = or i64 %307, 3
  %309 = add i64 %304, %308
  %310 = inttoptr i64 %309 to i32*
  %311 = load atomic i32, i32* %310 monotonic, align 4
  %312 = ashr i32 %311, 1
  store i32 %312, i32* %221, align 4
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %253) #8
  br label %320

313:                                              ; preds = %614, %215
  %314 = load i64, i64* %228, align 8, !noalias !196
  store i32 0, i32* %229, align 8, !alias.scope !199
  call void @llvm.memset.p0i8.i64(i8* align 8 %233, i8 0, i64 24, i1 false) #8, !alias.scope !199
  store i64 %314, i64* %232, align 8, !alias.scope !199
  call void @llvm.memset.p0i8.i64(i8* align 8 %237, i8 0, i64 40, i1 false) #8, !alias.scope !199
  store i64 %314, i64* %236, align 8, !alias.scope !199
  call void @llvm.memset.p0i8.i64(i8* align 8 %240, i8 0, i64 17, i1 false) #8, !alias.scope !199
  store i64 1, i64* %239, align 8, !alias.scope !199
  call void @llvm.memset.p0i8.i64(i8* align 8 %243, i8 0, i64 16, i1 false) #8, !alias.scope !199
  store i64 -1, i64* %242, align 8, !alias.scope !199
  store i64* null, i64** %244, align 8, !alias.scope !199
  br label %613

315:                                              ; preds = %614
  %316 = load i64, i64* %223, align 8
  %317 = icmp eq i64 %316, -1
  br i1 %317, label %363, label %318

318:                                              ; preds = %315
  %319 = ptrtoint i64* %540 to i64
  br label %320

320:                                              ; preds = %303, %318
  %321 = phi i64* [ null, %303 ], [ %540, %318 ]
  %322 = phi i64 [ 0, %303 ], [ %319, %318 ]
  %323 = phi i64* [ %218, %303 ], [ %615, %318 ]
  %324 = phi i64 [ %299, %303 ], [ %316, %318 ]
  %325 = add i32 %4, -1
  %326 = icmp ult i32 %325, 2
  br i1 %326, label %327, label %339

327:                                              ; preds = %320
  %328 = load i32, i32* %221, align 4
  %329 = and i32 %328, 8
  %330 = icmp eq i32 %329, 0
  br i1 %330, label %333, label %331

331:                                              ; preds = %327
  %332 = load i64, i64* %228, align 8, !noalias !202
  store i32 0, i32* %229, align 8, !alias.scope !205
  call void @llvm.memset.p0i8.i64(i8* align 8 %233, i8 0, i64 24, i1 false) #8, !alias.scope !205
  store i64 %332, i64* %232, align 8, !alias.scope !205
  call void @llvm.memset.p0i8.i64(i8* align 8 %237, i8 0, i64 40, i1 false) #8, !alias.scope !205
  store i64 %332, i64* %236, align 8, !alias.scope !205
  call void @llvm.memset.p0i8.i64(i8* align 8 %240, i8 0, i64 17, i1 false) #8, !alias.scope !205
  store i64 1, i64* %239, align 8, !alias.scope !205
  call void @llvm.memset.p0i8.i64(i8* align 8 %243, i8 0, i64 16, i1 false) #8, !alias.scope !205
  store i64 -1, i64* %242, align 8, !alias.scope !205
  store i64* null, i64** %244, align 8, !alias.scope !205
  br label %613

333:                                              ; preds = %327
  %334 = and i32 %328, 1
  %335 = icmp ne i32 %334, 0
  %336 = icmp eq i64 %322, 0
  %337 = or i1 %336, %335
  br i1 %337, label %339, label %338

338:                                              ; preds = %333
  call void @_ZNK2v88internal8compiler17AccessInfoFactory16LookupTransitionENS0_6HandleINS0_3MapEEENS3_INS0_4NameEEENS0_11MaybeHandleINS0_8JSObjectEEE(%"class.v8::internal::compiler::PropertyAccessInfo"* sret %0, %"class.v8::internal::compiler::AccessInfoFactory"* %1, i64* %218, i64* %3, i64* nonnull %321)
  br label %613

339:                                              ; preds = %333, %320
  %340 = load i64, i64* %323, align 8
  %341 = add i64 %340, 11
  %342 = inttoptr i64 %341 to i32*
  %343 = load atomic i32, i32* %342 monotonic, align 4
  %344 = and i32 %343, 2097152
  %345 = icmp eq i32 %344, 0
  br i1 %345, label %350, label %346

346:                                              ; preds = %339
  %347 = icmp eq i64 %322, 0
  br i1 %347, label %348, label %349, !prof !2

348:                                              ; preds = %346
  call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.5, i64 0, i64 0), i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.23, i64 0, i64 0)) #12
  unreachable

349:                                              ; preds = %346
  call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.5, i64 0, i64 0), i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.8, i64 0, i64 0)) #12
  unreachable

350:                                              ; preds = %339
  %351 = load i32, i32* %221, align 4
  %352 = and i32 %351, 2
  %353 = icmp eq i32 %352, 0
  br i1 %353, label %354, label %361

354:                                              ; preds = %350
  %355 = and i32 %351, 1
  %356 = icmp eq i32 %355, 0
  br i1 %356, label %357, label %359

357:                                              ; preds = %354
  %358 = load i64*, i64** %219, align 8
  call void @_ZNK2v88internal8compiler17AccessInfoFactory26ComputeDataFieldAccessInfoENS0_6HandleINS0_3MapEEES5_NS0_11MaybeHandleINS0_8JSObjectEEENS0_13InternalIndexENS1_10AccessModeE(%"class.v8::internal::compiler::PropertyAccessInfo"* sret %0, %"class.v8::internal::compiler::AccessInfoFactory"* %1, i64* %218, i64* %358, i64* %321, i64 %324, i32 %4)
  br label %613

359:                                              ; preds = %354
  %360 = load i64, i64* %228, align 8, !noalias !208
  store i32 0, i32* %229, align 8, !alias.scope !211
  call void @llvm.memset.p0i8.i64(i8* align 8 %233, i8 0, i64 24, i1 false) #8, !alias.scope !211
  store i64 %360, i64* %232, align 8, !alias.scope !211
  call void @llvm.memset.p0i8.i64(i8* align 8 %237, i8 0, i64 40, i1 false) #8, !alias.scope !211
  store i64 %360, i64* %236, align 8, !alias.scope !211
  call void @llvm.memset.p0i8.i64(i8* align 8 %240, i8 0, i64 17, i1 false) #8, !alias.scope !211
  store i64 1, i64* %239, align 8, !alias.scope !211
  call void @llvm.memset.p0i8.i64(i8* align 8 %243, i8 0, i64 16, i1 false) #8, !alias.scope !211
  store i64 -1, i64* %242, align 8, !alias.scope !211
  store i64* null, i64** %244, align 8, !alias.scope !211
  br label %613

361:                                              ; preds = %350
  %362 = load i64*, i64** %219, align 8
  call void @_ZNK2v88internal8compiler17AccessInfoFactory35ComputeAccessorDescriptorAccessInfoENS0_6HandleINS0_3MapEEENS3_INS0_4NameEEES5_NS0_11MaybeHandleINS0_8JSObjectEEENS0_13InternalIndexENS1_10AccessModeE(%"class.v8::internal::compiler::PropertyAccessInfo"* sret %0, %"class.v8::internal::compiler::AccessInfoFactory"* %1, i64* %218, i64* %3, i64* %362, i64* %321, i64 %324, i32 %4)
  br label %613

363:                                              ; preds = %302, %315
  %364 = phi i64* [ %615, %315 ], [ %218, %302 ]
  %365 = phi i64* [ %540, %315 ], [ null, %302 ]
  %366 = load i64, i64* %364, align 8
  %367 = add i64 %366, 7
  %368 = inttoptr i64 %367 to i16*
  %369 = load atomic i16, i16* %368 monotonic, align 2
  %370 = icmp eq i16 %369, 1080
  br i1 %370, label %371, label %398

371:                                              ; preds = %363
  %372 = load i64, i64* %3, align 8
  %373 = and i64 %372, -4294967296
  %374 = add i64 %372, -1
  %375 = inttoptr i64 %374 to i32*
  %376 = load atomic i32, i32* %375 monotonic, align 4
  %377 = zext i32 %376 to i64
  %378 = or i64 %373, %377
  %379 = add i64 %378, 7
  %380 = inttoptr i64 %379 to i16*
  %381 = load atomic i16, i16* %380 monotonic, align 2
  %382 = icmp ult i16 %381, 64
  br i1 %382, label %383, label %398

383:                                              ; preds = %371
  %384 = load %"class.v8::internal::compiler::JSHeapBroker"*, %"class.v8::internal::compiler::JSHeapBroker"** %28, align 8
  %385 = getelementptr inbounds %"class.v8::internal::compiler::JSHeapBroker", %"class.v8::internal::compiler::JSHeapBroker"* %384, i64 0, i32 14
  %386 = load %"class.v8::internal::LocalIsolate"*, %"class.v8::internal::LocalIsolate"** %385, align 8
  %387 = icmp eq %"class.v8::internal::LocalIsolate"* %386, null
  br i1 %387, label %392, label %388

388:                                              ; preds = %383
  %389 = getelementptr inbounds %"class.v8::internal::LocalIsolate", %"class.v8::internal::LocalIsolate"* %386, i64 0, i32 1, i32 1
  %390 = load i8, i8* %389, align 8, !range !80
  %391 = icmp eq i8 %390, 0
  br i1 %391, label %396, label %392

392:                                              ; preds = %388, %383
  %393 = call zeroext i1 @_ZN2v88internal14IsSpecialIndexENS0_6StringE(i64 %372) #8
  br i1 %393, label %394, label %398

394:                                              ; preds = %392
  %395 = load i64, i64* %228, align 8, !noalias !214
  store i32 0, i32* %229, align 8, !alias.scope !217
  call void @llvm.memset.p0i8.i64(i8* align 8 %233, i8 0, i64 24, i1 false) #8, !alias.scope !217
  store i64 %395, i64* %232, align 8, !alias.scope !217
  call void @llvm.memset.p0i8.i64(i8* align 8 %237, i8 0, i64 40, i1 false) #8, !alias.scope !217
  store i64 %395, i64* %236, align 8, !alias.scope !217
  call void @llvm.memset.p0i8.i64(i8* align 8 %240, i8 0, i64 17, i1 false) #8, !alias.scope !217
  store i64 1, i64* %239, align 8, !alias.scope !217
  call void @llvm.memset.p0i8.i64(i8* align 8 %243, i8 0, i64 16, i1 false) #8, !alias.scope !217
  store i64 -1, i64* %242, align 8, !alias.scope !217
  store i64* null, i64** %244, align 8, !alias.scope !217
  br label %613

396:                                              ; preds = %388
  %397 = load i64, i64* %228, align 8, !noalias !220
  store i32 0, i32* %229, align 8, !alias.scope !223
  call void @llvm.memset.p0i8.i64(i8* align 8 %233, i8 0, i64 24, i1 false) #8, !alias.scope !223
  store i64 %397, i64* %232, align 8, !alias.scope !223
  call void @llvm.memset.p0i8.i64(i8* align 8 %237, i8 0, i64 40, i1 false) #8, !alias.scope !223
  store i64 %397, i64* %236, align 8, !alias.scope !223
  call void @llvm.memset.p0i8.i64(i8* align 8 %240, i8 0, i64 17, i1 false) #8, !alias.scope !223
  store i64 1, i64* %239, align 8, !alias.scope !223
  call void @llvm.memset.p0i8.i64(i8* align 8 %243, i8 0, i64 16, i1 false) #8, !alias.scope !223
  store i64 -1, i64* %242, align 8, !alias.scope !223
  store i64* null, i64** %244, align 8, !alias.scope !223
  br label %613

398:                                              ; preds = %363, %392, %371
  br i1 %224, label %399, label %400

399:                                              ; preds = %398
  call void @_ZNK2v88internal8compiler17AccessInfoFactory16LookupTransitionENS0_6HandleINS0_3MapEEENS3_INS0_4NameEEENS0_11MaybeHandleINS0_8JSObjectEEE(%"class.v8::internal::compiler::PropertyAccessInfo"* sret %0, %"class.v8::internal::compiler::AccessInfoFactory"* %1, i64* %218, i64* %3, i64* null)
  br label %613

400:                                              ; preds = %398
  %401 = load i64, i64* %3, align 8
  %402 = and i64 %401, -4294967296
  %403 = add i64 %401, -1
  %404 = inttoptr i64 %403 to i32*
  %405 = load atomic i32, i32* %404 monotonic, align 4
  %406 = zext i32 %405 to i64
  %407 = or i64 %402, %406
  %408 = add i64 %407, 7
  %409 = inttoptr i64 %408 to i16*
  %410 = load atomic i16, i16* %409 monotonic, align 2
  %411 = icmp eq i16 %410, 64
  br i1 %411, label %412, label %420

412:                                              ; preds = %400
  %413 = add i64 %401, 7
  %414 = inttoptr i64 %413 to i32*
  %415 = load i32, i32* %414, align 4
  %416 = and i32 %415, 1
  %417 = icmp eq i32 %416, 0
  br i1 %417, label %420, label %418

418:                                              ; preds = %412
  %419 = load i64, i64* %228, align 8, !noalias !226
  store i32 0, i32* %229, align 8, !alias.scope !229
  call void @llvm.memset.p0i8.i64(i8* align 8 %233, i8 0, i64 24, i1 false) #8, !alias.scope !229
  store i64 %419, i64* %232, align 8, !alias.scope !229
  call void @llvm.memset.p0i8.i64(i8* align 8 %237, i8 0, i64 40, i1 false) #8, !alias.scope !229
  store i64 %419, i64* %236, align 8, !alias.scope !229
  call void @llvm.memset.p0i8.i64(i8* align 8 %240, i8 0, i64 17, i1 false) #8, !alias.scope !229
  store i64 1, i64* %239, align 8, !alias.scope !229
  call void @llvm.memset.p0i8.i64(i8* align 8 %243, i8 0, i64 16, i1 false) #8, !alias.scope !229
  store i64 -1, i64* %242, align 8, !alias.scope !229
  store i64* null, i64** %244, align 8, !alias.scope !229
  br label %613

420:                                              ; preds = %412, %400
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %225) #8
  %421 = load %"class.v8::internal::compiler::JSHeapBroker"*, %"class.v8::internal::compiler::JSHeapBroker"** %28, align 8
  %422 = load i64*, i64** %219, align 8
  call void @_ZN2v88internal8compiler10TryMakeRefINS0_3MapEvEENS_4base8OptionalINS1_10ref_traitsIT_E8ref_typeEEEPNS1_12JSHeapBrokerENS0_6HandleIS7_EENS4_5FlagsINS1_19GetOrCreateDataFlagEiEE(%"class.v8::base::Optional.1270"* nonnull sret %10, %"class.v8::internal::compiler::JSHeapBroker"* %421, i64* %422, i32 0)
  %423 = load i8, i8* %225, align 8, !range !80
  %424 = icmp eq i8 %423, 0
  br i1 %424, label %425, label %427

425:                                              ; preds = %420
  %426 = load i64, i64* %228, align 8, !noalias !232
  store i32 0, i32* %229, align 8, !alias.scope !235
  call void @llvm.memset.p0i8.i64(i8* align 8 %233, i8 0, i64 24, i1 false) #8, !alias.scope !235
  store i64 %426, i64* %232, align 8, !alias.scope !235
  call void @llvm.memset.p0i8.i64(i8* align 8 %237, i8 0, i64 40, i1 false) #8, !alias.scope !235
  store i64 %426, i64* %236, align 8, !alias.scope !235
  call void @llvm.memset.p0i8.i64(i8* align 8 %240, i8 0, i64 17, i1 false) #8, !alias.scope !235
  store i64 1, i64* %239, align 8, !alias.scope !235
  call void @llvm.memset.p0i8.i64(i8* align 8 %243, i8 0, i64 16, i1 false) #8, !alias.scope !235
  store i64 -1, i64* %242, align 8, !alias.scope !235
  store i64* null, i64** %244, align 8, !alias.scope !235
  br label %617

427:                                              ; preds = %420
  %428 = call zeroext i1 @_ZN2v88internal8compiler6MapRef21TrySerializePrototypeEv(%"class.v8::internal::compiler::MapRef"* %226) #8
  br i1 %428, label %431, label %429

429:                                              ; preds = %427
  %430 = load i64, i64* %228, align 8, !noalias !238
  store i32 0, i32* %229, align 8, !alias.scope !241
  call void @llvm.memset.p0i8.i64(i8* align 8 %233, i8 0, i64 24, i1 false) #8, !alias.scope !241
  store i64 %430, i64* %232, align 8, !alias.scope !241
  call void @llvm.memset.p0i8.i64(i8* align 8 %237, i8 0, i64 40, i1 false) #8, !alias.scope !241
  store i64 %430, i64* %236, align 8, !alias.scope !241
  call void @llvm.memset.p0i8.i64(i8* align 8 %240, i8 0, i64 17, i1 false) #8, !alias.scope !241
  store i64 1, i64* %239, align 8, !alias.scope !241
  call void @llvm.memset.p0i8.i64(i8* align 8 %243, i8 0, i64 16, i1 false) #8, !alias.scope !241
  store i64 -1, i64* %242, align 8, !alias.scope !241
  store i64* null, i64** %244, align 8, !alias.scope !241
  br label %617

431:                                              ; preds = %427
  %432 = load %"class.v8::internal::compiler::JSHeapBroker"*, %"class.v8::internal::compiler::JSHeapBroker"** %28, align 8
  %433 = load i64, i64* %364, align 8
  %434 = and i64 %433, -4294967296
  %435 = add i64 %433, 15
  %436 = inttoptr i64 %435 to i32*
  %437 = load i32, i32* %436, align 4
  %438 = zext i32 %437 to i64
  %439 = or i64 %434, %438
  %440 = add i64 %439, -1
  %441 = inttoptr i64 %440 to i32*
  %442 = load atomic i32, i32* %441 acquire, align 4
  %443 = zext i32 %442 to i64
  %444 = or i64 %434, %443
  %445 = call i64* @_ZN2v88internal8compiler12JSHeapBroker25CanonicalPersistentHandleINS0_3MapEEENS0_6HandleIT_EES6_(%"class.v8::internal::compiler::JSHeapBroker"* %432, i64 %444)
  %446 = load i64, i64* %445, align 8
  %447 = add i64 %446, 7
  %448 = inttoptr i64 %447 to i16*
  %449 = load atomic i16, i16* %448 monotonic, align 2
  %450 = icmp ugt i16 %449, 188
  br i1 %450, label %528, label %451

451:                                              ; preds = %431
  %452 = load i64*, i64** %217, align 8
  %453 = load i64, i64* %452, align 8
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %245) #8
  %454 = load %"class.v8::internal::compiler::JSHeapBroker"*, %"class.v8::internal::compiler::JSHeapBroker"** %28, align 8
  %455 = getelementptr inbounds %"class.v8::internal::compiler::JSHeapBroker", %"class.v8::internal::compiler::JSHeapBroker"* %454, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0
  %456 = load i8, i8* %455, align 8, !range !80
  %457 = icmp eq i8 %456, 1
  br i1 %457, label %459, label %458, !prof !81

458:                                              ; preds = %451
  call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.5, i64 0, i64 0), i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.21, i64 0, i64 0)) #12
  unreachable

459:                                              ; preds = %451
  %460 = getelementptr inbounds %"class.v8::internal::compiler::JSHeapBroker", %"class.v8::internal::compiler::JSHeapBroker"* %454, i64 0, i32 2, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %461 = bitcast %"class.v8::internal::compiler::ObjectData"** %460 to <2 x i64>*
  %462 = load <2 x i64>, <2 x i64>* %461, align 8
  store <2 x i64> %462, <2 x i64>* %11, align 16
  %463 = call i64* @_ZNK2v88internal8compiler16NativeContextRef6objectEv(%"class.v8::internal::compiler::NativeContextRef"* nonnull %12) #8
  %464 = load i64, i64* %463, align 8
  %465 = call { i8, i64 } @_ZN2v88internal3Map22GetConstructorFunctionES1_NS0_7ContextE(i64 %453, i64 %464) #8
  %466 = extractvalue { i8, i64 } %465, 0
  %467 = extractvalue { i8, i64 } %465, 1
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %245) #8
  %468 = icmp eq i8 %466, 0
  br i1 %468, label %469, label %505

469:                                              ; preds = %459
  %470 = load i64, i64* %452, align 8
  %471 = and i64 %470, -4294967296
  %472 = add i64 %470, 15
  %473 = inttoptr i64 %472 to i32*
  %474 = load i32, i32* %473, align 4
  %475 = load %"class.v8::internal::SoleReadOnlyHeap"*, %"class.v8::internal::SoleReadOnlyHeap"** @_ZN2v88internal16SoleReadOnlyHeap15shared_ro_heap_E, align 8
  %476 = icmp eq %"class.v8::internal::SoleReadOnlyHeap"* %475, null
  br i1 %476, label %483, label %477

477:                                              ; preds = %469
  %478 = getelementptr inbounds %"class.v8::internal::SoleReadOnlyHeap", %"class.v8::internal::SoleReadOnlyHeap"* %475, i64 0, i32 0, i32 1
  %479 = load i8, i8* %478, align 8, !range !80
  %480 = icmp eq i8 %479, 0
  br i1 %480, label %483, label %481

481:                                              ; preds = %477
  %482 = getelementptr inbounds %"class.v8::internal::SoleReadOnlyHeap", %"class.v8::internal::SoleReadOnlyHeap"* %475, i64 0, i32 1, i64 0
  br label %493

483:                                              ; preds = %477, %469
  %484 = and i32 %474, -262144
  %485 = zext i32 %484 to i64
  %486 = or i64 %471, %485
  %487 = or i64 %486, 16
  %488 = inttoptr i64 %487 to i64*
  %489 = load i64, i64* %488, align 16
  %490 = add i64 %489, -41416
  %491 = inttoptr i64 %490 to %"class.v8::internal::Isolate"*
  %492 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %491, i64 0, i32 0, i32 7, i32 0, i64 0
  br label %493

493:                                              ; preds = %481, %483
  %494 = phi i64* [ %492, %483 ], [ %482, %481 ]
  %495 = getelementptr inbounds i64, i64* %494, i64 6
  %496 = load i64, i64* %495, align 8
  %497 = trunc i64 %496 to i32
  %498 = icmp eq i32 %474, %497
  br i1 %498, label %499, label %503

499:                                              ; preds = %493
  br i1 %246, label %500, label %501

500:                                              ; preds = %499
  call void @_ZNK2v88internal8compiler17AccessInfoFactory16LookupTransitionENS0_6HandleINS0_3MapEEENS3_INS0_4NameEEENS0_11MaybeHandleINS0_8JSObjectEEE(%"class.v8::internal::compiler::PropertyAccessInfo"* sret %0, %"class.v8::internal::compiler::AccessInfoFactory"* %1, i64* %218, i64* %3, i64* %365)
  br label %617

501:                                              ; preds = %499
  %502 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %227, align 8
  call void @_ZN2v88internal8compiler18PropertyAccessInfo8NotFoundEPNS0_4ZoneENS0_6HandleINS0_3MapEEENS0_11MaybeHandleINS0_8JSObjectEEE(%"class.v8::internal::compiler::PropertyAccessInfo"* sret %0, %"class.v8::internal::Zone"* %502, i64* %218, i64* %365)
  br label %617

503:                                              ; preds = %493
  %504 = load i64, i64* %228, align 8, !noalias !244
  store i32 0, i32* %229, align 8, !alias.scope !247
  call void @llvm.memset.p0i8.i64(i8* align 8 %233, i8 0, i64 24, i1 false) #8, !alias.scope !247
  store i64 %504, i64* %232, align 8, !alias.scope !247
  call void @llvm.memset.p0i8.i64(i8* align 8 %237, i8 0, i64 40, i1 false) #8, !alias.scope !247
  store i64 %504, i64* %236, align 8, !alias.scope !247
  call void @llvm.memset.p0i8.i64(i8* align 8 %240, i8 0, i64 17, i1 false) #8, !alias.scope !247
  store i64 1, i64* %239, align 8, !alias.scope !247
  call void @llvm.memset.p0i8.i64(i8* align 8 %243, i8 0, i64 16, i1 false) #8, !alias.scope !247
  store i64 -1, i64* %242, align 8, !alias.scope !247
  store i64* null, i64** %244, align 8, !alias.scope !247
  br label %617

505:                                              ; preds = %459
  %506 = load %"class.v8::internal::compiler::JSHeapBroker"*, %"class.v8::internal::compiler::JSHeapBroker"** %28, align 8
  %507 = and i64 %467, -4294967296
  %508 = add i64 %467, 27
  %509 = inttoptr i64 %508 to i32*
  %510 = load atomic i32, i32* %509 acquire, align 4
  %511 = zext i32 %510 to i64
  %512 = or i64 %507, %511
  %513 = call i64* @_ZN2v88internal8compiler12JSHeapBroker25CanonicalPersistentHandleINS0_3MapEEENS0_6HandleIT_EES6_(%"class.v8::internal::compiler::JSHeapBroker"* %506, i64 %512)
  store i64* %513, i64** %219, align 8
  %514 = load %"class.v8::internal::compiler::JSHeapBroker"*, %"class.v8::internal::compiler::JSHeapBroker"** %28, align 8
  %515 = load i64, i64* %513, align 8
  %516 = and i64 %515, -4294967296
  %517 = add i64 %515, 15
  %518 = inttoptr i64 %517 to i32*
  %519 = load i32, i32* %518, align 4
  %520 = zext i32 %519 to i64
  %521 = or i64 %516, %520
  %522 = add i64 %521, -1
  %523 = inttoptr i64 %522 to i32*
  %524 = load atomic i32, i32* %523 acquire, align 4
  %525 = zext i32 %524 to i64
  %526 = or i64 %516, %525
  %527 = call i64* @_ZN2v88internal8compiler12JSHeapBroker25CanonicalPersistentHandleINS0_3MapEEENS0_6HandleIT_EES6_(%"class.v8::internal::compiler::JSHeapBroker"* %514, i64 %526)
  br label %528

528:                                              ; preds = %505, %431
  %529 = phi i64* [ %445, %431 ], [ %527, %505 ]
  %530 = ptrtoint i64* %529 to i64
  %531 = load %"class.v8::internal::compiler::JSHeapBroker"*, %"class.v8::internal::compiler::JSHeapBroker"** %28, align 8
  %532 = load i64*, i64** %217, align 8
  %533 = load i64, i64* %532, align 8
  %534 = and i64 %533, -4294967296
  %535 = add i64 %533, 15
  %536 = inttoptr i64 %535 to i32*
  %537 = load i32, i32* %536, align 4
  %538 = zext i32 %537 to i64
  %539 = or i64 %534, %538
  %540 = call i64* @_ZN2v88internal8compiler12JSHeapBroker25CanonicalPersistentHandleINS0_8JSObjectEEENS0_6HandleIT_EES6_(%"class.v8::internal::compiler::JSHeapBroker"* %531, i64 %539)
  store i64 %530, i64* %7, align 8
  %541 = load i64, i64* %529, align 8
  %542 = add i64 %541, 11
  %543 = inttoptr i64 %542 to i32*
  %544 = load atomic i32, i32* %543 acquire, align 4
  %545 = and i32 %544, 16777216
  %546 = icmp eq i32 %545, 0
  br i1 %546, label %548, label %547, !prof !81

547:                                              ; preds = %528
  call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.5, i64 0, i64 0), i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.10, i64 0, i64 0)) #12
  unreachable

548:                                              ; preds = %528
  %549 = load i64*, i64** %219, align 8
  %550 = load i64, i64* %549, align 8
  %551 = load %"class.v8::internal::SoleReadOnlyHeap"*, %"class.v8::internal::SoleReadOnlyHeap"** @_ZN2v88internal16SoleReadOnlyHeap15shared_ro_heap_E, align 8
  %552 = icmp eq %"class.v8::internal::SoleReadOnlyHeap"* %551, null
  br i1 %552, label %559, label %553

553:                                              ; preds = %548
  %554 = getelementptr inbounds %"class.v8::internal::SoleReadOnlyHeap", %"class.v8::internal::SoleReadOnlyHeap"* %551, i64 0, i32 0, i32 1
  %555 = load i8, i8* %554, align 8, !range !80
  %556 = icmp eq i8 %555, 0
  br i1 %556, label %559, label %557

557:                                              ; preds = %553
  %558 = getelementptr inbounds %"class.v8::internal::SoleReadOnlyHeap", %"class.v8::internal::SoleReadOnlyHeap"* %551, i64 0, i32 1, i64 0
  br label %567

559:                                              ; preds = %553, %548
  %560 = and i64 %550, -262144
  %561 = or i64 %560, 16
  %562 = inttoptr i64 %561 to i64*
  %563 = load i64, i64* %562, align 16
  %564 = add i64 %563, -41416
  %565 = inttoptr i64 %564 to %"class.v8::internal::Isolate"*
  %566 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %565, i64 0, i32 0, i32 7, i32 0, i64 0
  br label %567

567:                                              ; preds = %559, %557
  %568 = phi i64* [ %566, %559 ], [ %558, %557 ]
  %569 = getelementptr inbounds i64, i64* %568, i64 96
  %570 = load i64, i64* %569, align 8
  %571 = trunc i64 %550 to i32
  %572 = trunc i64 %570 to i32
  %573 = icmp eq i32 %571, %572
  br i1 %573, label %600, label %574

574:                                              ; preds = %567
  %575 = add i64 %550, 7
  %576 = inttoptr i64 %575 to i16*
  %577 = load atomic i16, i16* %576 monotonic, align 2
  %578 = icmp ult i16 %577, 67
  br i1 %578, label %600, label %579

579:                                              ; preds = %574
  %580 = load atomic i16, i16* %576 monotonic, align 2
  %581 = icmp ugt i16 %580, 188
  br i1 %581, label %582, label %598

582:                                              ; preds = %579
  %583 = add i64 %550, 11
  %584 = inttoptr i64 %583 to i32*
  %585 = load atomic i32, i32* %584 monotonic, align 4
  %586 = and i32 %585, 2097152
  %587 = icmp eq i32 %586, 0
  br i1 %587, label %588, label %598

588:                                              ; preds = %582
  %589 = add i64 %550, 9
  %590 = inttoptr i64 %589 to i8*
  %591 = load atomic i8, i8* %590 monotonic, align 1
  %592 = and i8 %591, 4
  %593 = icmp eq i8 %592, 0
  br i1 %593, label %594, label %598

594:                                              ; preds = %588
  %595 = load atomic i8, i8* %590 monotonic, align 1
  %596 = and i8 %595, 32
  %597 = icmp eq i8 %596, 0
  br i1 %597, label %600, label %598

598:                                              ; preds = %588, %579, %582, %594
  %599 = load i64, i64* %228, align 8, !noalias !250
  store i32 0, i32* %229, align 8, !alias.scope !253
  call void @llvm.memset.p0i8.i64(i8* align 8 %233, i8 0, i64 24, i1 false) #8, !alias.scope !253
  store i64 %599, i64* %232, align 8, !alias.scope !253
  call void @llvm.memset.p0i8.i64(i8* align 8 %237, i8 0, i64 40, i1 false) #8, !alias.scope !253
  store i64 %599, i64* %236, align 8, !alias.scope !253
  call void @llvm.memset.p0i8.i64(i8* align 8 %240, i8 0, i64 17, i1 false) #8, !alias.scope !253
  store i64 1, i64* %239, align 8, !alias.scope !253
  call void @llvm.memset.p0i8.i64(i8* align 8 %243, i8 0, i64 16, i1 false) #8, !alias.scope !253
  store i64 -1, i64* %242, align 8, !alias.scope !253
  store i64* null, i64** %244, align 8, !alias.scope !253
  br label %617

600:                                              ; preds = %574, %567, %594
  %601 = add i64 %550, 11
  %602 = inttoptr i64 %601 to i32*
  %603 = load atomic i32, i32* %602 monotonic, align 4
  %604 = and i32 %603, 2097152
  %605 = icmp eq i32 %604, 0
  br i1 %605, label %606, label %614

606:                                              ; preds = %600
  %607 = load atomic i32, i32* %602 acquire, align 4
  %608 = and i32 %607, 33554432
  %609 = icmp eq i32 %608, 0
  br i1 %609, label %610, label %612, !prof !81

610:                                              ; preds = %606
  %611 = load i64*, i64** %219, align 8
  br label %614

612:                                              ; preds = %606
  call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.5, i64 0, i64 0), i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str.11, i64 0, i64 0)) #12
  unreachable

613:                                              ; preds = %331, %357, %359, %361, %338, %394, %399, %418, %396, %313
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %222) #8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %220) #8
  br label %618

614:                                              ; preds = %610, %600
  %615 = phi i64* [ %611, %610 ], [ %549, %600 ]
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %225) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %222) #8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %220) #8
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %220) #8
  store i32 0, i32* %221, align 4
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %222) #8
  store i64 -1, i64* %223, align 8
  %616 = call zeroext i1 @_ZNK2v88internal8compiler17AccessInfoFactory22TryLoadPropertyDetailsENS0_6HandleINS0_3MapEEENS0_11MaybeHandleINS0_8JSObjectEEENS3_INS0_4NameEEEPNS0_13InternalIndexEPNS0_15PropertyDetailsE(%"class.v8::internal::compiler::AccessInfoFactory"* %1, i64* %615, i64* %540, i64* %3, %"class.v8::internal::InternalIndex"* nonnull %9, %"class.v8::internal::PropertyDetails"* nonnull %8)
  br i1 %616, label %315, label %313

617:                                              ; preds = %429, %425, %598, %500, %501, %503
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %225) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %222) #8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %220) #8
  br label %618

618:                                              ; preds = %617, %189, %613, %167, %97
  %619 = load i32, i32* %33, align 8
  %620 = add nsw i32 %619, -1
  store i32 %620, i32* %33, align 8
  %621 = icmp eq i8 %40, 0
  br i1 %621, label %623, label %622

622:                                              ; preds = %618
  call void @_ZN2v84base11SharedMutex12UnlockSharedEv(%"class.v8::base::SharedMutex"* %41) #8
  br label %623

623:                                              ; preds = %618, %622
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK2v88internal8compiler17AccessInfoFactory26LookupSpecialFieldAccessorENS0_6HandleINS0_3MapEEENS3_INS0_4NameEEE(%"class.v8::internal::compiler::PropertyAccessInfo"* noalias sret, %"class.v8::internal::compiler::AccessInfoFactory"* nocapture readonly, i64*, i64*) local_unnamed_addr #0 align 2 {
  %5 = alloca %"class.v8::internal::FieldIndex", align 8
  %6 = alloca %"class.v8::internal::ZoneVector.22", align 8
  %7 = ptrtoint i64* %2 to i64
  %8 = load i64, i64* %2, align 8
  %9 = add i64 %8, 7
  %10 = inttoptr i64 %9 to i16*
  %11 = load atomic i16, i16* %10 monotonic, align 2
  %12 = icmp ult i16 %11, 64
  br i1 %12, label %13, label %98

13:                                               ; preds = %4
  %14 = getelementptr inbounds %"class.v8::internal::compiler::AccessInfoFactory", %"class.v8::internal::compiler::AccessInfoFactory"* %1, i64 0, i32 0
  %15 = load %"class.v8::internal::compiler::JSHeapBroker"*, %"class.v8::internal::compiler::JSHeapBroker"** %14, align 8
  %16 = getelementptr inbounds %"class.v8::internal::compiler::JSHeapBroker", %"class.v8::internal::compiler::JSHeapBroker"* %15, i64 0, i32 0
  %17 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %16, align 8
  %18 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %17, i64 0, i32 0, i32 7, i32 0, i64 363
  %19 = icmp eq i64* %18, %3
  br i1 %19, label %75, label %20

20:                                               ; preds = %13
  %21 = icmp eq i64* %3, null
  %22 = icmp eq i64* %18, null
  %23 = or i1 %21, %22
  %24 = load i64, i64* %3, align 8
  br i1 %23, label %30, label %25

25:                                               ; preds = %20
  %26 = load i64, i64* %18, align 8
  %27 = trunc i64 %24 to i32
  %28 = trunc i64 %26 to i32
  %29 = icmp eq i32 %27, %28
  br i1 %29, label %75, label %30

30:                                               ; preds = %25, %20
  %31 = and i64 %24, -4294967296
  %32 = add i64 %24, -1
  %33 = inttoptr i64 %32 to i32*
  %34 = load atomic i32, i32* %33 monotonic, align 4
  %35 = zext i32 %34 to i64
  %36 = or i64 %31, %35
  %37 = add i64 %36, 7
  %38 = inttoptr i64 %37 to i16*
  %39 = load atomic i16, i16* %38 monotonic, align 2
  %40 = icmp ult i16 %39, 32
  br i1 %40, label %41, label %53

41:                                               ; preds = %30
  %42 = load i64, i64* %18, align 8
  %43 = and i64 %42, -4294967296
  %44 = add i64 %42, -1
  %45 = inttoptr i64 %44 to i32*
  %46 = load atomic i32, i32* %45 monotonic, align 4
  %47 = zext i32 %46 to i64
  %48 = or i64 %43, %47
  %49 = add i64 %48, 7
  %50 = inttoptr i64 %49 to i16*
  %51 = load atomic i16, i16* %50 monotonic, align 2
  %52 = icmp ult i16 %51, 32
  br i1 %52, label %78, label %53

53:                                               ; preds = %41, %30
  %54 = load atomic i32, i32* %33 monotonic, align 4
  %55 = zext i32 %54 to i64
  %56 = or i64 %31, %55
  %57 = add i64 %56, 7
  %58 = inttoptr i64 %57 to i16*
  %59 = load atomic i16, i16* %58 monotonic, align 2
  %60 = icmp eq i16 %59, 64
  br i1 %60, label %78, label %61

61:                                               ; preds = %53
  %62 = load i64, i64* %18, align 8
  %63 = and i64 %62, -4294967296
  %64 = add i64 %62, -1
  %65 = inttoptr i64 %64 to i32*
  %66 = load atomic i32, i32* %65 monotonic, align 4
  %67 = zext i32 %66 to i64
  %68 = or i64 %63, %67
  %69 = add i64 %68, 7
  %70 = inttoptr i64 %69 to i16*
  %71 = load atomic i16, i16* %70 monotonic, align 2
  %72 = icmp eq i16 %71, 64
  br i1 %72, label %78, label %73

73:                                               ; preds = %61
  %74 = tail call zeroext i1 @_ZN2v88internal6String10SlowEqualsEPNS0_7IsolateENS0_6HandleIS1_EES5_(%"class.v8::internal::Isolate"* %17, i64* %3, i64* %18) #8
  br i1 %74, label %75, label %78

75:                                               ; preds = %13, %25, %73
  %76 = getelementptr inbounds %"class.v8::internal::compiler::AccessInfoFactory", %"class.v8::internal::compiler::AccessInfoFactory"* %1, i64 0, i32 3
  %77 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %76, align 8
  tail call void @_ZN2v88internal8compiler18PropertyAccessInfo12StringLengthEPNS0_4ZoneENS0_6HandleINS0_3MapEEE(%"class.v8::internal::compiler::PropertyAccessInfo"* sret %0, %"class.v8::internal::Zone"* %77, i64* %2)
  br label %173

78:                                               ; preds = %41, %53, %61, %73
  %79 = getelementptr inbounds %"class.v8::internal::compiler::AccessInfoFactory", %"class.v8::internal::compiler::AccessInfoFactory"* %1, i64 0, i32 3
  %80 = bitcast %"class.v8::internal::Zone"** %79 to i64*
  %81 = load i64, i64* %80, align 8, !noalias !256
  %82 = getelementptr inbounds %"class.v8::internal::compiler::PropertyAccessInfo", %"class.v8::internal::compiler::PropertyAccessInfo"* %0, i64 0, i32 0
  store i32 0, i32* %82, align 8, !alias.scope !259
  %83 = getelementptr inbounds %"class.v8::internal::compiler::PropertyAccessInfo", %"class.v8::internal::compiler::PropertyAccessInfo"* %0, i64 0, i32 1
  %84 = getelementptr inbounds %"class.v8::internal::compiler::PropertyAccessInfo", %"class.v8::internal::compiler::PropertyAccessInfo"* %0, i64 0, i32 1, i32 0, i32 0, i32 2, i32 1
  %85 = bitcast %"struct.std::__1::__compressed_pair_elem.0"* %84 to i64*
  %86 = bitcast %"class.v8::internal::ZoneVector"* %83 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %86, i8 0, i64 24, i1 false) #8, !alias.scope !259
  store i64 %81, i64* %85, align 8, !alias.scope !259
  %87 = getelementptr inbounds %"class.v8::internal::compiler::PropertyAccessInfo", %"class.v8::internal::compiler::PropertyAccessInfo"* %0, i64 0, i32 2, i32 0, i32 0
  %88 = getelementptr inbounds %"class.v8::internal::compiler::PropertyAccessInfo", %"class.v8::internal::compiler::PropertyAccessInfo"* %0, i64 0, i32 4, i32 0, i32 0, i32 2, i32 1
  %89 = bitcast %"struct.std::__1::__compressed_pair_elem.27"* %88 to i64*
  %90 = bitcast i64** %87 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %90, i8 0, i64 40, i1 false) #8, !alias.scope !259
  store i64 %81, i64* %89, align 8, !alias.scope !259
  %91 = getelementptr inbounds %"class.v8::internal::compiler::PropertyAccessInfo", %"class.v8::internal::compiler::PropertyAccessInfo"* %0, i64 0, i32 5, i32 0
  %92 = getelementptr inbounds %"class.v8::internal::compiler::PropertyAccessInfo", %"class.v8::internal::compiler::PropertyAccessInfo"* %0, i64 0, i32 8, i32 0
  %93 = bitcast i64** %91 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %93, i8 0, i64 17, i1 false) #8, !alias.scope !259
  store i64 1, i64* %92, align 8, !alias.scope !259
  %94 = getelementptr inbounds %"class.v8::internal::compiler::PropertyAccessInfo", %"class.v8::internal::compiler::PropertyAccessInfo"* %0, i64 0, i32 9, i32 0
  %95 = getelementptr inbounds %"class.v8::internal::compiler::PropertyAccessInfo", %"class.v8::internal::compiler::PropertyAccessInfo"* %0, i64 0, i32 11, i32 0
  %96 = bitcast i64** %94 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %96, i8 0, i64 16, i1 false) #8, !alias.scope !259
  store i64 -1, i64* %95, align 8, !alias.scope !259
  %97 = getelementptr inbounds %"class.v8::internal::compiler::PropertyAccessInfo", %"class.v8::internal::compiler::PropertyAccessInfo"* %0, i64 0, i32 12, i32 0
  store i64* null, i64** %97, align 8, !alias.scope !259
  br label %173

98:                                               ; preds = %4
  %99 = bitcast %"class.v8::internal::FieldIndex"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %99) #8
  %100 = getelementptr inbounds %"class.v8::internal::FieldIndex", %"class.v8::internal::FieldIndex"* %5, i64 0, i32 0
  store i64 0, i64* %100, align 8
  %101 = getelementptr inbounds %"class.v8::internal::compiler::AccessInfoFactory", %"class.v8::internal::compiler::AccessInfoFactory"* %1, i64 0, i32 0
  %102 = load %"class.v8::internal::compiler::JSHeapBroker"*, %"class.v8::internal::compiler::JSHeapBroker"** %101, align 8
  %103 = getelementptr inbounds %"class.v8::internal::compiler::JSHeapBroker", %"class.v8::internal::compiler::JSHeapBroker"* %102, i64 0, i32 0
  %104 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %103, align 8
  %105 = call zeroext i1 @_ZN2v88internal9Accessors23IsJSObjectFieldAccessorEPNS0_7IsolateENS0_6HandleINS0_3MapEEENS4_INS0_4NameEEEPNS0_10FieldIndexE(%"class.v8::internal::Isolate"* %104, i64* %2, i64* %3, %"class.v8::internal::FieldIndex"* nonnull %5) #8
  br i1 %105, label %106, label %152

106:                                              ; preds = %98
  %107 = load i64, i64* %2, align 8
  %108 = add i64 %107, 7
  %109 = inttoptr i64 %108 to i16*
  %110 = load atomic i16, i16* %109 monotonic, align 2
  %111 = icmp eq i16 %110, 1085
  br i1 %111, label %112, label %134

112:                                              ; preds = %106
  %113 = add i64 %107, 10
  %114 = inttoptr i64 %113 to i8*
  %115 = load i8, i8* %114, align 1
  %116 = and i8 %115, -8
  %117 = icmp eq i8 %116, 16
  br i1 %117, label %118, label %122

118:                                              ; preds = %112
  %119 = getelementptr inbounds %"class.v8::internal::compiler::AccessInfoFactory", %"class.v8::internal::compiler::AccessInfoFactory"* %1, i64 0, i32 2
  %120 = load %"class.v8::internal::compiler::TypeCache"*, %"class.v8::internal::compiler::TypeCache"** %119, align 8
  %121 = getelementptr inbounds %"class.v8::internal::compiler::TypeCache", %"class.v8::internal::compiler::TypeCache"* %120, i64 0, i32 46, i32 0
  br label %130

122:                                              ; preds = %112
  %123 = icmp ult i8 %115, 24
  %124 = getelementptr inbounds %"class.v8::internal::compiler::AccessInfoFactory", %"class.v8::internal::compiler::AccessInfoFactory"* %1, i64 0, i32 2
  %125 = load %"class.v8::internal::compiler::TypeCache"*, %"class.v8::internal::compiler::TypeCache"** %124, align 8
  br i1 %123, label %126, label %128

126:                                              ; preds = %122
  %127 = getelementptr inbounds %"class.v8::internal::compiler::TypeCache", %"class.v8::internal::compiler::TypeCache"* %125, i64 0, i32 44, i32 0
  br label %130

128:                                              ; preds = %122
  %129 = getelementptr inbounds %"class.v8::internal::compiler::TypeCache", %"class.v8::internal::compiler::TypeCache"* %125, i64 0, i32 47, i32 0
  br label %130

130:                                              ; preds = %118, %128, %126
  %131 = phi i64* [ %127, %126 ], [ %129, %128 ], [ %121, %118 ]
  %132 = phi i8 [ 1, %126 ], [ 4, %128 ], [ 1, %118 ]
  %133 = load i64, i64* %131, align 8
  br label %134

134:                                              ; preds = %130, %106
  %135 = phi i8 [ 4, %106 ], [ %132, %130 ]
  %136 = phi i64 [ 209682431, %106 ], [ %133, %130 ]
  %137 = getelementptr inbounds %"class.v8::internal::compiler::AccessInfoFactory", %"class.v8::internal::compiler::AccessInfoFactory"* %1, i64 0, i32 3
  %138 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %137, align 8
  %139 = bitcast %"class.v8::internal::ZoneVector.22"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %139) #8
  %140 = ptrtoint %"class.v8::internal::Zone"* %138 to i64
  %141 = getelementptr inbounds %"class.v8::internal::ZoneVector.22", %"class.v8::internal::ZoneVector.22"* %6, i64 0, i32 0, i32 0, i32 2, i32 1
  %142 = bitcast %"struct.std::__1::__compressed_pair_elem.27"* %141 to i64*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %139, i8 0, i64 24, i1 false) #8
  store i64 %140, i64* %142, align 8
  %143 = load i64, i64* %100, align 8
  call void @_ZN2v88internal8compiler18PropertyAccessInfo9DataFieldEPNS0_4ZoneENS0_6HandleINS0_3MapEEEONS0_10ZoneVectorIPKNS1_21CompilationDependencyEEENS0_10FieldIndexENS0_14RepresentationENS1_4TypeES7_NS0_11MaybeHandleIS6_EENSH_INS0_8JSObjectEEESI_(%"class.v8::internal::compiler::PropertyAccessInfo"* sret %0, %"class.v8::internal::Zone"* %138, i64* %2, %"class.v8::internal::ZoneVector.22"* nonnull dereferenceable(32) %6, i64 %143, i8 %135, i64 %136, i64 %7, i64 0, i64 0, i64 0)
  %144 = getelementptr inbounds %"class.v8::internal::ZoneVector.22", %"class.v8::internal::ZoneVector.22"* %6, i64 0, i32 0, i32 0, i32 0
  %145 = load %"class.v8::internal::compiler::CompilationDependency"**, %"class.v8::internal::compiler::CompilationDependency"*** %144, align 8
  %146 = icmp eq %"class.v8::internal::compiler::CompilationDependency"** %145, null
  br i1 %146, label %151, label %147

147:                                              ; preds = %134
  %148 = ptrtoint %"class.v8::internal::compiler::CompilationDependency"** %145 to i64
  %149 = getelementptr inbounds %"class.v8::internal::ZoneVector.22", %"class.v8::internal::ZoneVector.22"* %6, i64 0, i32 0, i32 0, i32 1
  %150 = bitcast %"class.v8::internal::compiler::CompilationDependency"*** %149 to i64*
  store i64 %148, i64* %150, align 8
  br label %151

151:                                              ; preds = %134, %147
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %139) #8
  br label %172

152:                                              ; preds = %98
  %153 = getelementptr inbounds %"class.v8::internal::compiler::AccessInfoFactory", %"class.v8::internal::compiler::AccessInfoFactory"* %1, i64 0, i32 3
  %154 = bitcast %"class.v8::internal::Zone"** %153 to i64*
  %155 = load i64, i64* %154, align 8, !noalias !262
  %156 = getelementptr inbounds %"class.v8::internal::compiler::PropertyAccessInfo", %"class.v8::internal::compiler::PropertyAccessInfo"* %0, i64 0, i32 0
  store i32 0, i32* %156, align 8, !alias.scope !265
  %157 = getelementptr inbounds %"class.v8::internal::compiler::PropertyAccessInfo", %"class.v8::internal::compiler::PropertyAccessInfo"* %0, i64 0, i32 1
  %158 = getelementptr inbounds %"class.v8::internal::compiler::PropertyAccessInfo", %"class.v8::internal::compiler::PropertyAccessInfo"* %0, i64 0, i32 1, i32 0, i32 0, i32 2, i32 1
  %159 = bitcast %"struct.std::__1::__compressed_pair_elem.0"* %158 to i64*
  %160 = bitcast %"class.v8::internal::ZoneVector"* %157 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %160, i8 0, i64 24, i1 false) #8, !alias.scope !265
  store i64 %155, i64* %159, align 8, !alias.scope !265
  %161 = getelementptr inbounds %"class.v8::internal::compiler::PropertyAccessInfo", %"class.v8::internal::compiler::PropertyAccessInfo"* %0, i64 0, i32 2, i32 0, i32 0
  %162 = getelementptr inbounds %"class.v8::internal::compiler::PropertyAccessInfo", %"class.v8::internal::compiler::PropertyAccessInfo"* %0, i64 0, i32 4, i32 0, i32 0, i32 2, i32 1
  %163 = bitcast %"struct.std::__1::__compressed_pair_elem.27"* %162 to i64*
  %164 = bitcast i64** %161 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %164, i8 0, i64 40, i1 false) #8, !alias.scope !265
  store i64 %155, i64* %163, align 8, !alias.scope !265
  %165 = getelementptr inbounds %"class.v8::internal::compiler::PropertyAccessInfo", %"class.v8::internal::compiler::PropertyAccessInfo"* %0, i64 0, i32 5, i32 0
  %166 = getelementptr inbounds %"class.v8::internal::compiler::PropertyAccessInfo", %"class.v8::internal::compiler::PropertyAccessInfo"* %0, i64 0, i32 8, i32 0
  %167 = bitcast i64** %165 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %167, i8 0, i64 17, i1 false) #8, !alias.scope !265
  store i64 1, i64* %166, align 8, !alias.scope !265
  %168 = getelementptr inbounds %"class.v8::internal::compiler::PropertyAccessInfo", %"class.v8::internal::compiler::PropertyAccessInfo"* %0, i64 0, i32 9, i32 0
  %169 = getelementptr inbounds %"class.v8::internal::compiler::PropertyAccessInfo", %"class.v8::internal::compiler::PropertyAccessInfo"* %0, i64 0, i32 11, i32 0
  %170 = bitcast i64** %168 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %170, i8 0, i64 16, i1 false) #8, !alias.scope !265
  store i64 -1, i64* %169, align 8, !alias.scope !265
  %171 = getelementptr inbounds %"class.v8::internal::compiler::PropertyAccessInfo", %"class.v8::internal::compiler::PropertyAccessInfo"* %0, i64 0, i32 12, i32 0
  store i64* null, i64** %171, align 8, !alias.scope !265
  br label %172

172:                                              ; preds = %152, %151
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %99) #8
  br label %173

173:                                              ; preds = %172, %78, %75
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK2v88internal8compiler17AccessInfoFactory16LookupTransitionENS0_6HandleINS0_3MapEEENS3_INS0_4NameEEENS0_11MaybeHandleINS0_8JSObjectEEE(%"class.v8::internal::compiler::PropertyAccessInfo"* noalias sret, %"class.v8::internal::compiler::AccessInfoFactory"* readonly, i64*, i64*, i64*) local_unnamed_addr #0 align 2 {
  %6 = alloca %"class.v8::internal::Representation", align 1
  %7 = alloca %"class.v8::internal::TransitionsAccessor", align 8
  %8 = alloca %"class.v8::base::Optional.1270", align 8
  %9 = alloca %"class.v8::internal::ZoneVector.22", align 8
  %10 = alloca %"class.v8::internal::Handle<v8::internal::FieldType>::ObjectRef", align 8
  %11 = alloca %"class.v8::internal::Handle<v8::internal::FieldType>::ObjectRef", align 8
  %12 = alloca %"class.v8::base::Optional.1270", align 8
  %13 = bitcast %"class.v8::internal::TransitionsAccessor"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %13) #8
  %14 = getelementptr inbounds %"class.v8::internal::compiler::AccessInfoFactory", %"class.v8::internal::compiler::AccessInfoFactory"* %1, i64 0, i32 0
  %15 = load %"class.v8::internal::compiler::JSHeapBroker"*, %"class.v8::internal::compiler::JSHeapBroker"** %14, align 8
  %16 = getelementptr inbounds %"class.v8::internal::compiler::JSHeapBroker", %"class.v8::internal::compiler::JSHeapBroker"* %15, i64 0, i32 0
  %17 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %16, align 8
  %18 = getelementptr inbounds %"class.v8::internal::compiler::JSHeapBroker", %"class.v8::internal::compiler::JSHeapBroker"* %15, i64 0, i32 8
  %19 = load i8, i8* %18, align 1, !range !80
  %20 = ptrtoint i64* %2 to i64
  %21 = getelementptr inbounds %"class.v8::internal::TransitionsAccessor", %"class.v8::internal::TransitionsAccessor"* %7, i64 0, i32 0
  store %"class.v8::internal::Isolate"* %17, %"class.v8::internal::Isolate"** %21, align 8
  %22 = getelementptr inbounds %"class.v8::internal::TransitionsAccessor", %"class.v8::internal::TransitionsAccessor"* %7, i64 0, i32 1
  %23 = bitcast %"class.v8::internal::Handle"* %22 to i64*
  store i64 %20, i64* %23, align 8
  %24 = load i64, i64* %2, align 8
  %25 = getelementptr inbounds %"class.v8::internal::TransitionsAccessor", %"class.v8::internal::TransitionsAccessor"* %7, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0
  store i64 %24, i64* %25, align 8
  %26 = getelementptr inbounds %"class.v8::internal::TransitionsAccessor", %"class.v8::internal::TransitionsAccessor"* %7, i64 0, i32 3, i32 0, i32 0
  store i64 0, i64* %26, align 8
  %27 = getelementptr inbounds %"class.v8::internal::TransitionsAccessor", %"class.v8::internal::TransitionsAccessor"* %7, i64 0, i32 5
  store i8 %19, i8* %27, align 4
  %28 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %17, i64 0, i32 0, i32 4
  %29 = load i64, i64* %28, align 8
  %30 = add i64 %24, 35
  %31 = inttoptr i64 %30 to i32*
  %32 = load atomic i32, i32* %31 acquire, align 4
  %33 = and i64 %29, 4294967295
  %34 = icmp eq i64 %33, 0
  tail call void @llvm.assume(i1 %34) #8
  %35 = zext i32 %32 to i64
  %36 = or i64 %29, %35
  store i64 %36, i64* %26, align 8
  %37 = and i64 %35, 1
  %38 = icmp eq i64 %37, 0
  %39 = icmp eq i32 %32, 3
  %40 = or i1 %39, %38
  br i1 %40, label %41, label %43

41:                                               ; preds = %5
  %42 = getelementptr inbounds %"class.v8::internal::TransitionsAccessor", %"class.v8::internal::TransitionsAccessor"* %7, i64 0, i32 4
  store i32 1, i32* %42, align 8
  br label %71

43:                                               ; preds = %5
  %44 = and i64 %35, 3
  switch i64 %44, label %70 [
    i64 3, label %45
    i64 1, label %47
  ]

45:                                               ; preds = %43
  %46 = getelementptr inbounds %"class.v8::internal::TransitionsAccessor", %"class.v8::internal::TransitionsAccessor"* %7, i64 0, i32 4
  store i32 3, i32* %46, align 8
  br label %71

47:                                               ; preds = %43
  %48 = add i64 %36, -1
  %49 = inttoptr i64 %48 to i32*
  %50 = load atomic i32, i32* %49 monotonic, align 4
  %51 = zext i32 %50 to i64
  %52 = or i64 %29, %51
  %53 = add i64 %52, 7
  %54 = inttoptr i64 %53 to i16*
  %55 = load atomic i16, i16* %54 monotonic, align 2
  %56 = icmp eq i16 %55, 160
  br i1 %56, label %57, label %59

57:                                               ; preds = %47
  %58 = getelementptr inbounds %"class.v8::internal::TransitionsAccessor", %"class.v8::internal::TransitionsAccessor"* %7, i64 0, i32 4
  store i32 4, i32* %58, align 8
  br label %71

59:                                               ; preds = %47
  %60 = load atomic i32, i32* %49 monotonic, align 4
  %61 = zext i32 %60 to i64
  %62 = or i64 %29, %61
  %63 = add i64 %62, 7
  %64 = inttoptr i64 %63 to i16*
  %65 = load atomic i16, i16* %64 monotonic, align 2
  %66 = icmp eq i16 %65, 110
  %67 = getelementptr inbounds %"class.v8::internal::TransitionsAccessor", %"class.v8::internal::TransitionsAccessor"* %7, i64 0, i32 4
  br i1 %66, label %68, label %69

68:                                               ; preds = %59
  store i32 0, i32* %67, align 8
  br label %71

69:                                               ; preds = %59
  store i32 2, i32* %67, align 8
  br label %71

70:                                               ; preds = %43
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.4, i64 0, i64 0)) #12
  unreachable

71:                                               ; preds = %41, %45, %57, %68, %69
  %72 = load i64, i64* %3, align 8
  %73 = call i64 @_ZN2v88internal19TransitionsAccessor16SearchTransitionENS0_4NameENS0_12PropertyKindENS0_18PropertyAttributesE(%"class.v8::internal::TransitionsAccessor"* nonnull %7, i64 %72, i32 0, i32 0) #8
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %13) #8
  %74 = trunc i64 %73 to i32
  %75 = icmp eq i32 %74, 0
  br i1 %75, label %76, label %96

76:                                               ; preds = %71
  %77 = getelementptr inbounds %"class.v8::internal::compiler::AccessInfoFactory", %"class.v8::internal::compiler::AccessInfoFactory"* %1, i64 0, i32 3
  %78 = bitcast %"class.v8::internal::Zone"** %77 to i64*
  %79 = load i64, i64* %78, align 8, !noalias !268
  %80 = getelementptr inbounds %"class.v8::internal::compiler::PropertyAccessInfo", %"class.v8::internal::compiler::PropertyAccessInfo"* %0, i64 0, i32 0
  store i32 0, i32* %80, align 8, !alias.scope !271
  %81 = getelementptr inbounds %"class.v8::internal::compiler::PropertyAccessInfo", %"class.v8::internal::compiler::PropertyAccessInfo"* %0, i64 0, i32 1
  %82 = getelementptr inbounds %"class.v8::internal::compiler::PropertyAccessInfo", %"class.v8::internal::compiler::PropertyAccessInfo"* %0, i64 0, i32 1, i32 0, i32 0, i32 2, i32 1
  %83 = bitcast %"struct.std::__1::__compressed_pair_elem.0"* %82 to i64*
  %84 = bitcast %"class.v8::internal::ZoneVector"* %81 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %84, i8 0, i64 24, i1 false) #8, !alias.scope !271
  store i64 %79, i64* %83, align 8, !alias.scope !271
  %85 = getelementptr inbounds %"class.v8::internal::compiler::PropertyAccessInfo", %"class.v8::internal::compiler::PropertyAccessInfo"* %0, i64 0, i32 2, i32 0, i32 0
  %86 = getelementptr inbounds %"class.v8::internal::compiler::PropertyAccessInfo", %"class.v8::internal::compiler::PropertyAccessInfo"* %0, i64 0, i32 4, i32 0, i32 0, i32 2, i32 1
  %87 = bitcast %"struct.std::__1::__compressed_pair_elem.27"* %86 to i64*
  %88 = bitcast i64** %85 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %88, i8 0, i64 40, i1 false) #8, !alias.scope !271
  store i64 %79, i64* %87, align 8, !alias.scope !271
  %89 = getelementptr inbounds %"class.v8::internal::compiler::PropertyAccessInfo", %"class.v8::internal::compiler::PropertyAccessInfo"* %0, i64 0, i32 5, i32 0
  %90 = getelementptr inbounds %"class.v8::internal::compiler::PropertyAccessInfo", %"class.v8::internal::compiler::PropertyAccessInfo"* %0, i64 0, i32 8, i32 0
  %91 = bitcast i64** %89 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %91, i8 0, i64 17, i1 false) #8, !alias.scope !271
  store i64 1, i64* %90, align 8, !alias.scope !271
  %92 = getelementptr inbounds %"class.v8::internal::compiler::PropertyAccessInfo", %"class.v8::internal::compiler::PropertyAccessInfo"* %0, i64 0, i32 9, i32 0
  %93 = getelementptr inbounds %"class.v8::internal::compiler::PropertyAccessInfo", %"class.v8::internal::compiler::PropertyAccessInfo"* %0, i64 0, i32 11, i32 0
  %94 = bitcast i64** %92 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %94, i8 0, i64 16, i1 false) #8, !alias.scope !271
  store i64 -1, i64* %93, align 8, !alias.scope !271
  %95 = getelementptr inbounds %"class.v8::internal::compiler::PropertyAccessInfo", %"class.v8::internal::compiler::PropertyAccessInfo"* %0, i64 0, i32 12, i32 0
  store i64* null, i64** %95, align 8, !alias.scope !271
  br label %1625

96:                                               ; preds = %71
  %97 = load %"class.v8::internal::compiler::JSHeapBroker"*, %"class.v8::internal::compiler::JSHeapBroker"** %14, align 8
  %98 = call i64* @_ZN2v88internal8compiler12JSHeapBroker25CanonicalPersistentHandleINS0_3MapEEENS0_6HandleIT_EES6_(%"class.v8::internal::compiler::JSHeapBroker"* %97, i64 %73)
  %99 = load i64, i64* %98, align 8
  %100 = add i64 %99, 11
  %101 = inttoptr i64 %100 to i32*
  %102 = load atomic i32, i32* %101 acquire, align 4
  %103 = lshr i32 %102, 10
  %104 = and i32 %103, 1023
  %105 = add nsw i32 %104, -1
  %106 = sext i32 %105 to i64
  %107 = load %"class.v8::internal::compiler::JSHeapBroker"*, %"class.v8::internal::compiler::JSHeapBroker"** %14, align 8
  %108 = load i64, i64* %98, align 8
  %109 = and i64 %108, -4294967296
  %110 = add i64 %108, 23
  %111 = inttoptr i64 %110 to i32*
  %112 = load atomic i32, i32* %111 acquire, align 4
  %113 = zext i32 %112 to i64
  %114 = or i64 %109, %113
  %115 = call i64* @_ZN2v88internal8compiler12JSHeapBroker25CanonicalPersistentHandleINS0_15DescriptorArrayEEENS0_6HandleIT_EES6_(%"class.v8::internal::compiler::JSHeapBroker"* %107, i64 %114)
  %116 = load i64, i64* %115, align 8
  %117 = mul nsw i64 %106, 51539607552
  %118 = add nsw i64 %117, 68719476736
  %119 = ashr exact i64 %118, 32
  %120 = or i64 %119, 3
  %121 = add i64 %120, %116
  %122 = inttoptr i64 %121 to i32*
  %123 = load atomic i32, i32* %122 monotonic, align 4
  %124 = ashr i32 %123, 1
  %125 = and i32 %123, 16
  %126 = icmp eq i32 %125, 0
  br i1 %126, label %147, label %127

127:                                              ; preds = %96
  %128 = getelementptr inbounds %"class.v8::internal::compiler::AccessInfoFactory", %"class.v8::internal::compiler::AccessInfoFactory"* %1, i64 0, i32 3
  %129 = bitcast %"class.v8::internal::Zone"** %128 to i64*
  %130 = load i64, i64* %129, align 8, !noalias !274
  %131 = getelementptr inbounds %"class.v8::internal::compiler::PropertyAccessInfo", %"class.v8::internal::compiler::PropertyAccessInfo"* %0, i64 0, i32 0
  store i32 0, i32* %131, align 8, !alias.scope !277
  %132 = getelementptr inbounds %"class.v8::internal::compiler::PropertyAccessInfo", %"class.v8::internal::compiler::PropertyAccessInfo"* %0, i64 0, i32 1
  %133 = getelementptr inbounds %"class.v8::internal::compiler::PropertyAccessInfo", %"class.v8::internal::compiler::PropertyAccessInfo"* %0, i64 0, i32 1, i32 0, i32 0, i32 2, i32 1
  %134 = bitcast %"struct.std::__1::__compressed_pair_elem.0"* %133 to i64*
  %135 = bitcast %"class.v8::internal::ZoneVector"* %132 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %135, i8 0, i64 24, i1 false) #8, !alias.scope !277
  store i64 %130, i64* %134, align 8, !alias.scope !277
  %136 = getelementptr inbounds %"class.v8::internal::compiler::PropertyAccessInfo", %"class.v8::internal::compiler::PropertyAccessInfo"* %0, i64 0, i32 2, i32 0, i32 0
  %137 = getelementptr inbounds %"class.v8::internal::compiler::PropertyAccessInfo", %"class.v8::internal::compiler::PropertyAccessInfo"* %0, i64 0, i32 4, i32 0, i32 0, i32 2, i32 1
  %138 = bitcast %"struct.std::__1::__compressed_pair_elem.27"* %137 to i64*
  %139 = bitcast i64** %136 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %139, i8 0, i64 40, i1 false) #8, !alias.scope !277
  store i64 %130, i64* %138, align 8, !alias.scope !277
  %140 = getelementptr inbounds %"class.v8::internal::compiler::PropertyAccessInfo", %"class.v8::internal::compiler::PropertyAccessInfo"* %0, i64 0, i32 5, i32 0
  %141 = getelementptr inbounds %"class.v8::internal::compiler::PropertyAccessInfo", %"class.v8::internal::compiler::PropertyAccessInfo"* %0, i64 0, i32 8, i32 0
  %142 = bitcast i64** %140 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %142, i8 0, i64 17, i1 false) #8, !alias.scope !277
  store i64 1, i64* %141, align 8, !alias.scope !277
  %143 = getelementptr inbounds %"class.v8::internal::compiler::PropertyAccessInfo", %"class.v8::internal::compiler::PropertyAccessInfo"* %0, i64 0, i32 9, i32 0
  %144 = getelementptr inbounds %"class.v8::internal::compiler::PropertyAccessInfo", %"class.v8::internal::compiler::PropertyAccessInfo"* %0, i64 0, i32 11, i32 0
  %145 = bitcast i64** %143 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %145, i8 0, i64 16, i1 false) #8, !alias.scope !277
  store i64 -1, i64* %144, align 8, !alias.scope !277
  %146 = getelementptr inbounds %"class.v8::internal::compiler::PropertyAccessInfo", %"class.v8::internal::compiler::PropertyAccessInfo"* %0, i64 0, i32 12, i32 0
  store i64* null, i64** %146, align 8, !alias.scope !277
  br label %1625

147:                                              ; preds = %96
  %148 = and i32 %123, 4
  %149 = icmp eq i32 %148, 0
  br i1 %149, label %170, label %150

150:                                              ; preds = %147
  %151 = getelementptr inbounds %"class.v8::internal::compiler::AccessInfoFactory", %"class.v8::internal::compiler::AccessInfoFactory"* %1, i64 0, i32 3
  %152 = bitcast %"class.v8::internal::Zone"** %151 to i64*
  %153 = load i64, i64* %152, align 8, !noalias !280
  %154 = getelementptr inbounds %"class.v8::internal::compiler::PropertyAccessInfo", %"class.v8::internal::compiler::PropertyAccessInfo"* %0, i64 0, i32 0
  store i32 0, i32* %154, align 8, !alias.scope !283
  %155 = getelementptr inbounds %"class.v8::internal::compiler::PropertyAccessInfo", %"class.v8::internal::compiler::PropertyAccessInfo"* %0, i64 0, i32 1
  %156 = getelementptr inbounds %"class.v8::internal::compiler::PropertyAccessInfo", %"class.v8::internal::compiler::PropertyAccessInfo"* %0, i64 0, i32 1, i32 0, i32 0, i32 2, i32 1
  %157 = bitcast %"struct.std::__1::__compressed_pair_elem.0"* %156 to i64*
  %158 = bitcast %"class.v8::internal::ZoneVector"* %155 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %158, i8 0, i64 24, i1 false) #8, !alias.scope !283
  store i64 %153, i64* %157, align 8, !alias.scope !283
  %159 = getelementptr inbounds %"class.v8::internal::compiler::PropertyAccessInfo", %"class.v8::internal::compiler::PropertyAccessInfo"* %0, i64 0, i32 2, i32 0, i32 0
  %160 = getelementptr inbounds %"class.v8::internal::compiler::PropertyAccessInfo", %"class.v8::internal::compiler::PropertyAccessInfo"* %0, i64 0, i32 4, i32 0, i32 0, i32 2, i32 1
  %161 = bitcast %"struct.std::__1::__compressed_pair_elem.27"* %160 to i64*
  %162 = bitcast i64** %159 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %162, i8 0, i64 40, i1 false) #8, !alias.scope !283
  store i64 %153, i64* %161, align 8, !alias.scope !283
  %163 = getelementptr inbounds %"class.v8::internal::compiler::PropertyAccessInfo", %"class.v8::internal::compiler::PropertyAccessInfo"* %0, i64 0, i32 5, i32 0
  %164 = getelementptr inbounds %"class.v8::internal::compiler::PropertyAccessInfo", %"class.v8::internal::compiler::PropertyAccessInfo"* %0, i64 0, i32 8, i32 0
  %165 = bitcast i64** %163 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %165, i8 0, i64 17, i1 false) #8, !alias.scope !283
  store i64 1, i64* %164, align 8, !alias.scope !283
  %166 = getelementptr inbounds %"class.v8::internal::compiler::PropertyAccessInfo", %"class.v8::internal::compiler::PropertyAccessInfo"* %0, i64 0, i32 9, i32 0
  %167 = getelementptr inbounds %"class.v8::internal::compiler::PropertyAccessInfo", %"class.v8::internal::compiler::PropertyAccessInfo"* %0, i64 0, i32 11, i32 0
  %168 = bitcast i64** %166 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %168, i8 0, i64 16, i1 false) #8, !alias.scope !283
  store i64 -1, i64* %167, align 8, !alias.scope !283
  %169 = getelementptr inbounds %"class.v8::internal::compiler::PropertyAccessInfo", %"class.v8::internal::compiler::PropertyAccessInfo"* %0, i64 0, i32 12, i32 0
  store i64* null, i64** %169, align 8, !alias.scope !283
  br label %1625

170:                                              ; preds = %147
  %171 = lshr i32 %124, 19
  %172 = and i32 %171, 1023
  %173 = lshr i32 %124, 6
  %174 = trunc i32 %173 to i8
  %175 = and i8 %174, 7
  %176 = load i64, i64* %98, align 8
  %177 = add i64 %176, 3
  %178 = inttoptr i64 %177 to i8*
  %179 = load atomic i8, i8* %178 monotonic, align 1
  %180 = zext i8 %179 to i32
  %181 = add i64 %176, 4
  %182 = inttoptr i64 %181 to i8*
  %183 = load atomic i8, i8* %182 monotonic, align 1
  %184 = zext i8 %183 to i32
  %185 = sub nsw i32 %180, %184
  %186 = icmp slt i32 %172, %185
  br i1 %186, label %187, label %195

187:                                              ; preds = %170
  %188 = load atomic i8, i8* %182 monotonic, align 1
  %189 = zext i8 %188 to i64
  %190 = shl nuw nsw i64 %189, 28
  %191 = load atomic i8, i8* %182 monotonic, align 1
  %192 = zext i8 %191 to i32
  %193 = add nuw nsw i32 %172, %192
  %194 = shl nuw nsw i32 %193, 2
  br label %199

195:                                              ; preds = %170
  %196 = sub nsw i32 %172, %185
  %197 = shl nsw i32 %196, 2
  %198 = add nsw i32 %197, 8
  br label %199

199:                                              ; preds = %195, %187
  %200 = phi i32 [ %194, %187 ], [ %198, %195 ]
  %201 = phi i64 [ %190, %187 ], [ 536870912, %195 ]
  %202 = getelementptr inbounds %"class.v8::internal::Representation", %"class.v8::internal::Representation"* %6, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %202) #8
  store i8 %175, i8* %202, align 1
  %203 = icmp ult i8 %175, 5
  br i1 %203, label %206, label %204

204:                                              ; preds = %199
  %205 = call i8* @_ZNK2v88internal14Representation8MnemonicEv(%"class.v8::internal::Representation"* nonnull %6) #8
  call void (i8*, ...) @_ZN2v88internal6PrintFEPKcz(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.14, i64 0, i64 0), i8* %205) #8
  call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.4, i64 0, i64 0)) #12
  unreachable

206:                                              ; preds = %199
  %207 = zext i8 %175 to i64
  %208 = getelementptr inbounds [5 x i64], [5 x i64]* @switch.table._ZNK2v88internal8compiler17AccessInfoFactory16LookupTransitionENS0_6HandleINS0_3MapEEENS3_INS0_4NameEEENS0_11MaybeHandleINS0_8JSObjectEEE, i64 0, i64 %207
  %209 = load i64, i64* %208, align 8
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %202) #8
  %210 = zext i1 %186 to i64
  %211 = shl nuw nsw i64 %210, 13
  %212 = sext i32 %200 to i64
  %213 = sext i32 %185 to i64
  %214 = shl nsw i64 %213, 16
  %215 = or i64 %211, %214
  %216 = or i64 %215, %212
  %217 = or i64 %216, %201
  %218 = or i64 %217, %209
  %219 = getelementptr inbounds %"class.v8::base::Optional.1270", %"class.v8::base::Optional.1270"* %8, i64 0, i32 0, i32 0, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %219) #8
  %220 = load %"class.v8::internal::compiler::JSHeapBroker"*, %"class.v8::internal::compiler::JSHeapBroker"** %14, align 8
  call void @_ZN2v88internal8compiler10TryMakeRefINS0_3MapEvEENS_4base8OptionalINS1_10ref_traitsIT_E8ref_typeEEEPNS1_12JSHeapBrokerENS0_6HandleIS7_EENS4_5FlagsINS1_19GetOrCreateDataFlagEiEE(%"class.v8::base::Optional.1270"* nonnull sret %8, %"class.v8::internal::compiler::JSHeapBroker"* %220, i64* %98, i32 0)
  %221 = load i8, i8* %219, align 8, !range !80
  %222 = icmp eq i8 %221, 0
  br i1 %222, label %223, label %243

223:                                              ; preds = %206
  %224 = getelementptr inbounds %"class.v8::internal::compiler::AccessInfoFactory", %"class.v8::internal::compiler::AccessInfoFactory"* %1, i64 0, i32 3
  %225 = bitcast %"class.v8::internal::Zone"** %224 to i64*
  %226 = load i64, i64* %225, align 8, !noalias !286
  %227 = getelementptr inbounds %"class.v8::internal::compiler::PropertyAccessInfo", %"class.v8::internal::compiler::PropertyAccessInfo"* %0, i64 0, i32 0
  store i32 0, i32* %227, align 8, !alias.scope !289
  %228 = getelementptr inbounds %"class.v8::internal::compiler::PropertyAccessInfo", %"class.v8::internal::compiler::PropertyAccessInfo"* %0, i64 0, i32 1
  %229 = getelementptr inbounds %"class.v8::internal::compiler::PropertyAccessInfo", %"class.v8::internal::compiler::PropertyAccessInfo"* %0, i64 0, i32 1, i32 0, i32 0, i32 2, i32 1
  %230 = bitcast %"struct.std::__1::__compressed_pair_elem.0"* %229 to i64*
  %231 = bitcast %"class.v8::internal::ZoneVector"* %228 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %231, i8 0, i64 24, i1 false) #8, !alias.scope !289
  store i64 %226, i64* %230, align 8, !alias.scope !289
  %232 = getelementptr inbounds %"class.v8::internal::compiler::PropertyAccessInfo", %"class.v8::internal::compiler::PropertyAccessInfo"* %0, i64 0, i32 2, i32 0, i32 0
  %233 = getelementptr inbounds %"class.v8::internal::compiler::PropertyAccessInfo", %"class.v8::internal::compiler::PropertyAccessInfo"* %0, i64 0, i32 4, i32 0, i32 0, i32 2, i32 1
  %234 = bitcast %"struct.std::__1::__compressed_pair_elem.27"* %233 to i64*
  %235 = bitcast i64** %232 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %235, i8 0, i64 40, i1 false) #8, !alias.scope !289
  store i64 %226, i64* %234, align 8, !alias.scope !289
  %236 = getelementptr inbounds %"class.v8::internal::compiler::PropertyAccessInfo", %"class.v8::internal::compiler::PropertyAccessInfo"* %0, i64 0, i32 5, i32 0
  %237 = getelementptr inbounds %"class.v8::internal::compiler::PropertyAccessInfo", %"class.v8::internal::compiler::PropertyAccessInfo"* %0, i64 0, i32 8, i32 0
  %238 = bitcast i64** %236 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %238, i8 0, i64 17, i1 false) #8, !alias.scope !289
  store i64 1, i64* %237, align 8, !alias.scope !289
  %239 = getelementptr inbounds %"class.v8::internal::compiler::PropertyAccessInfo", %"class.v8::internal::compiler::PropertyAccessInfo"* %0, i64 0, i32 9, i32 0
  %240 = getelementptr inbounds %"class.v8::internal::compiler::PropertyAccessInfo", %"class.v8::internal::compiler::PropertyAccessInfo"* %0, i64 0, i32 11, i32 0
  %241 = bitcast i64** %239 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %241, i8 0, i64 16, i1 false) #8, !alias.scope !289
  store i64 -1, i64* %240, align 8, !alias.scope !289
  %242 = getelementptr inbounds %"class.v8::internal::compiler::PropertyAccessInfo", %"class.v8::internal::compiler::PropertyAccessInfo"* %0, i64 0, i32 12, i32 0
  store i64* null, i64** %242, align 8, !alias.scope !289
  br label %1624

243:                                              ; preds = %206
  %244 = bitcast %"class.v8::internal::ZoneVector.22"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %244) #8
  %245 = getelementptr inbounds %"class.v8::internal::compiler::AccessInfoFactory", %"class.v8::internal::compiler::AccessInfoFactory"* %1, i64 0, i32 3
  %246 = bitcast %"class.v8::internal::Zone"** %245 to i64*
  %247 = load i64, i64* %246, align 8
  %248 = getelementptr inbounds %"class.v8::internal::ZoneVector.22", %"class.v8::internal::ZoneVector.22"* %9, i64 0, i32 0, i32 0, i32 2, i32 1
  %249 = bitcast %"struct.std::__1::__compressed_pair_elem.27"* %248 to i64*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %244, i8 0, i64 24, i1 false) #8
  store i64 %247, i64* %249, align 8
  switch i8 %175, label %1359 [
    i8 1, label %250
    i8 2, label %515
    i8 3, label %781
  ]

250:                                              ; preds = %243
  %251 = call i32 @_ZN2v88internal8compiler10BitsetType11SignedSmallEv() #8
  %252 = or i32 %251, 1
  %253 = zext i32 %252 to i64
  %254 = getelementptr inbounds %"class.v8::base::Optional.1270", %"class.v8::base::Optional.1270"* %8, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  %255 = call zeroext i1 @_ZN2v88internal8compiler6MapRef25TrySerializeOwnDescriptorENS0_13InternalIndexE(%"class.v8::internal::compiler::MapRef"* %254, i64 %106) #8
  br i1 %255, label %274, label %256

256:                                              ; preds = %250
  %257 = load i64, i64* %246, align 8, !noalias !292
  %258 = getelementptr inbounds %"class.v8::internal::compiler::PropertyAccessInfo", %"class.v8::internal::compiler::PropertyAccessInfo"* %0, i64 0, i32 0
  store i32 0, i32* %258, align 8, !alias.scope !295
  %259 = getelementptr inbounds %"class.v8::internal::compiler::PropertyAccessInfo", %"class.v8::internal::compiler::PropertyAccessInfo"* %0, i64 0, i32 1
  %260 = getelementptr inbounds %"class.v8::internal::compiler::PropertyAccessInfo", %"class.v8::internal::compiler::PropertyAccessInfo"* %0, i64 0, i32 1, i32 0, i32 0, i32 2, i32 1
  %261 = bitcast %"struct.std::__1::__compressed_pair_elem.0"* %260 to i64*
  %262 = bitcast %"class.v8::internal::ZoneVector"* %259 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %262, i8 0, i64 24, i1 false) #8, !alias.scope !295
  store i64 %257, i64* %261, align 8, !alias.scope !295
  %263 = getelementptr inbounds %"class.v8::internal::compiler::PropertyAccessInfo", %"class.v8::internal::compiler::PropertyAccessInfo"* %0, i64 0, i32 2, i32 0, i32 0
  %264 = getelementptr inbounds %"class.v8::internal::compiler::PropertyAccessInfo", %"class.v8::internal::compiler::PropertyAccessInfo"* %0, i64 0, i32 4, i32 0, i32 0, i32 2, i32 1
  %265 = bitcast %"struct.std::__1::__compressed_pair_elem.27"* %264 to i64*
  %266 = bitcast i64** %263 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %266, i8 0, i64 40, i1 false) #8, !alias.scope !295
  store i64 %257, i64* %265, align 8, !alias.scope !295
  %267 = getelementptr inbounds %"class.v8::internal::compiler::PropertyAccessInfo", %"class.v8::internal::compiler::PropertyAccessInfo"* %0, i64 0, i32 5, i32 0
  %268 = getelementptr inbounds %"class.v8::internal::compiler::PropertyAccessInfo", %"class.v8::internal::compiler::PropertyAccessInfo"* %0, i64 0, i32 8, i32 0
  %269 = bitcast i64** %267 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %269, i8 0, i64 17, i1 false) #8, !alias.scope !295
  store i64 1, i64* %268, align 8, !alias.scope !295
  %270 = getelementptr inbounds %"class.v8::internal::compiler::PropertyAccessInfo", %"class.v8::internal::compiler::PropertyAccessInfo"* %0, i64 0, i32 9, i32 0
  %271 = getelementptr inbounds %"class.v8::internal::compiler::PropertyAccessInfo", %"class.v8::internal::compiler::PropertyAccessInfo"* %0, i64 0, i32 11, i32 0
  %272 = bitcast i64** %270 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %272, i8 0, i64 16, i1 false) #8, !alias.scope !295
  store i64 -1, i64* %271, align 8, !alias.scope !295
  %273 = getelementptr inbounds %"class.v8::internal::compiler::PropertyAccessInfo", %"class.v8::internal::compiler::PropertyAccessInfo"* %0, i64 0, i32 12, i32 0
  store i64* null, i64** %273, align 8, !alias.scope !295
  br label %1615

274:                                              ; preds = %250
  %275 = getelementptr inbounds %"class.v8::internal::compiler::AccessInfoFactory", %"class.v8::internal::compiler::AccessInfoFactory"* %1, i64 0, i32 1
  %276 = load %"class.v8::internal::compiler::CompilationDependencies"*, %"class.v8::internal::compiler::CompilationDependencies"** %275, align 8
  %277 = call %"class.v8::internal::compiler::CompilationDependency"* @_ZNK2v88internal8compiler23CompilationDependencies41FieldRepresentationDependencyOffTheRecordERKNS1_6MapRefENS0_13InternalIndexE(%"class.v8::internal::compiler::CompilationDependencies"* %276, %"class.v8::internal::compiler::MapRef"* dereferenceable(16) %254, i64 %106) #8
  %278 = ptrtoint %"class.v8::internal::compiler::CompilationDependency"* %277 to i64
  %279 = getelementptr inbounds %"class.v8::internal::ZoneVector.22", %"class.v8::internal::ZoneVector.22"* %9, i64 0, i32 0, i32 0, i32 1
  %280 = load %"class.v8::internal::compiler::CompilationDependency"**, %"class.v8::internal::compiler::CompilationDependency"*** %279, align 8
  %281 = getelementptr inbounds %"class.v8::internal::ZoneVector.22", %"class.v8::internal::ZoneVector.22"* %9, i64 0, i32 0, i32 0, i32 2, i32 0, i32 0
  %282 = load %"class.v8::internal::compiler::CompilationDependency"**, %"class.v8::internal::compiler::CompilationDependency"*** %281, align 8
  %283 = icmp ult %"class.v8::internal::compiler::CompilationDependency"** %280, %282
  %284 = ptrtoint %"class.v8::internal::compiler::CompilationDependency"** %282 to i64
  br i1 %283, label %285, label %290

285:                                              ; preds = %274
  %286 = bitcast %"class.v8::internal::compiler::CompilationDependency"** %280 to i64*
  store i64 %278, i64* %286, align 8
  %287 = getelementptr inbounds %"class.v8::internal::compiler::CompilationDependency"*, %"class.v8::internal::compiler::CompilationDependency"** %280, i64 1
  %288 = ptrtoint %"class.v8::internal::compiler::CompilationDependency"** %287 to i64
  %289 = bitcast %"class.v8::internal::compiler::CompilationDependency"*** %279 to i64*
  store i64 %288, i64* %289, align 8
  br label %1359

290:                                              ; preds = %274
  %291 = ptrtoint %"class.v8::internal::compiler::CompilationDependency"** %280 to i64
  %292 = bitcast %"class.v8::internal::compiler::CompilationDependency"*** %279 to i64*
  %293 = bitcast %"class.v8::internal::ZoneVector.22"* %9 to i64*
  %294 = load i64, i64* %293, align 8
  %295 = sub i64 %291, %294
  %296 = ashr exact i64 %295, 3
  %297 = add nsw i64 %296, 1
  %298 = icmp ugt i64 %297, 268435455
  br i1 %298, label %299, label %301

299:                                              ; preds = %290
  %300 = bitcast %"class.v8::internal::ZoneVector.22"* %9 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %300) #12
  unreachable

301:                                              ; preds = %290
  %302 = bitcast %"class.v8::internal::compiler::CompilationDependency"*** %281 to i64*
  %303 = sub i64 %284, %294
  %304 = ashr exact i64 %303, 3
  %305 = icmp ult i64 %304, 134217727
  br i1 %305, label %306, label %311

306:                                              ; preds = %301
  %307 = ashr exact i64 %303, 2
  %308 = icmp ult i64 %307, %297
  %309 = select i1 %308, i64 %297, i64 %307
  %310 = icmp eq i64 %309, 0
  br i1 %310, label %329, label %311

311:                                              ; preds = %306, %301
  %312 = phi i64 [ %309, %306 ], [ 268435455, %301 ]
  %313 = getelementptr inbounds %"class.v8::internal::ZoneVector.22", %"class.v8::internal::ZoneVector.22"* %9, i64 0, i32 0, i32 0, i32 2, i32 1, i32 0, i32 0
  %314 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %313, align 8
  %315 = shl i64 %312, 3
  %316 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %314, i64 0, i32 2
  %317 = load i64, i64* %316, align 8
  %318 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %314, i64 0, i32 3
  %319 = load i64, i64* %318, align 8
  %320 = sub i64 %319, %317
  %321 = icmp ugt i64 %315, %320
  br i1 %321, label %322, label %324, !prof !2

322:                                              ; preds = %311
  %323 = call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %314, i64 %315) #8
  br label %326

324:                                              ; preds = %311
  %325 = add i64 %317, %315
  store i64 %325, i64* %316, align 8
  br label %326

326:                                              ; preds = %324, %322
  %327 = phi i64 [ %323, %322 ], [ %317, %324 ]
  %328 = inttoptr i64 %327 to %"class.v8::internal::compiler::CompilationDependency"**
  br label %329

329:                                              ; preds = %326, %306
  %330 = phi i64 [ %312, %326 ], [ 0, %306 ]
  %331 = phi %"class.v8::internal::compiler::CompilationDependency"** [ %328, %326 ], [ null, %306 ]
  %332 = getelementptr inbounds %"class.v8::internal::compiler::CompilationDependency"*, %"class.v8::internal::compiler::CompilationDependency"** %331, i64 %296
  %333 = getelementptr inbounds %"class.v8::internal::compiler::CompilationDependency"*, %"class.v8::internal::compiler::CompilationDependency"** %331, i64 %330
  %334 = ptrtoint %"class.v8::internal::compiler::CompilationDependency"** %333 to i64
  %335 = bitcast %"class.v8::internal::compiler::CompilationDependency"** %332 to i64*
  store i64 %278, i64* %335, align 8
  %336 = getelementptr inbounds %"class.v8::internal::compiler::CompilationDependency"*, %"class.v8::internal::compiler::CompilationDependency"** %332, i64 1
  %337 = ptrtoint %"class.v8::internal::compiler::CompilationDependency"** %336 to i64
  %338 = getelementptr inbounds %"class.v8::internal::ZoneVector.22", %"class.v8::internal::ZoneVector.22"* %9, i64 0, i32 0, i32 0, i32 0
  %339 = load %"class.v8::internal::compiler::CompilationDependency"**, %"class.v8::internal::compiler::CompilationDependency"*** %338, align 8
  %340 = ptrtoint %"class.v8::internal::compiler::CompilationDependency"** %339 to i64
  %341 = load %"class.v8::internal::compiler::CompilationDependency"**, %"class.v8::internal::compiler::CompilationDependency"*** %279, align 8
  %342 = icmp eq %"class.v8::internal::compiler::CompilationDependency"** %341, %339
  br i1 %342, label %512, label %343

343:                                              ; preds = %329
  %344 = getelementptr %"class.v8::internal::compiler::CompilationDependency"*, %"class.v8::internal::compiler::CompilationDependency"** %341, i64 -1
  %345 = ptrtoint %"class.v8::internal::compiler::CompilationDependency"** %344 to i64
  %346 = sub i64 %345, %340
  %347 = lshr i64 %346, 3
  %348 = add nuw nsw i64 %347, 1
  %349 = icmp ult i64 %348, 4
  br i1 %349, label %442, label %350

350:                                              ; preds = %343
  %351 = getelementptr %"class.v8::internal::compiler::CompilationDependency"*, %"class.v8::internal::compiler::CompilationDependency"** %341, i64 -1
  %352 = ptrtoint %"class.v8::internal::compiler::CompilationDependency"** %351 to i64
  %353 = sub i64 %352, %340
  %354 = lshr i64 %353, 3
  %355 = xor i64 %354, -1
  %356 = add nsw i64 %296, %355
  %357 = getelementptr %"class.v8::internal::compiler::CompilationDependency"*, %"class.v8::internal::compiler::CompilationDependency"** %331, i64 %356
  %358 = xor i64 %354, -1
  %359 = getelementptr %"class.v8::internal::compiler::CompilationDependency"*, %"class.v8::internal::compiler::CompilationDependency"** %341, i64 %358
  %360 = icmp ult %"class.v8::internal::compiler::CompilationDependency"** %357, %341
  %361 = icmp ult %"class.v8::internal::compiler::CompilationDependency"** %359, %332
  %362 = and i1 %360, %361
  br i1 %362, label %442, label %363

363:                                              ; preds = %350
  %364 = and i64 %348, 4611686018427387900
  %365 = sub nsw i64 0, %364
  %366 = getelementptr %"class.v8::internal::compiler::CompilationDependency"*, %"class.v8::internal::compiler::CompilationDependency"** %332, i64 %365
  %367 = sub nsw i64 0, %364
  %368 = getelementptr %"class.v8::internal::compiler::CompilationDependency"*, %"class.v8::internal::compiler::CompilationDependency"** %341, i64 %367
  %369 = add nsw i64 %364, -4
  %370 = lshr exact i64 %369, 2
  %371 = add nuw nsw i64 %370, 1
  %372 = and i64 %371, 1
  %373 = icmp eq i64 %369, 0
  br i1 %373, label %418, label %374

374:                                              ; preds = %363
  %375 = sub nuw nsw i64 %371, %372
  %376 = getelementptr %"class.v8::internal::compiler::CompilationDependency"*, %"class.v8::internal::compiler::CompilationDependency"** %332, i64 -1
  %377 = getelementptr %"class.v8::internal::compiler::CompilationDependency"*, %"class.v8::internal::compiler::CompilationDependency"** %341, i64 -1
  %378 = getelementptr %"class.v8::internal::compiler::CompilationDependency"*, %"class.v8::internal::compiler::CompilationDependency"** %332, i64 -1
  %379 = getelementptr %"class.v8::internal::compiler::CompilationDependency"*, %"class.v8::internal::compiler::CompilationDependency"** %341, i64 -1
  br label %380

380:                                              ; preds = %380, %374
  %381 = phi i64 [ 0, %374 ], [ %415, %380 ]
  %382 = phi i64 [ %375, %374 ], [ %416, %380 ]
  %383 = sub i64 0, %381
  %384 = sub i64 0, %381
  %385 = getelementptr inbounds %"class.v8::internal::compiler::CompilationDependency"*, %"class.v8::internal::compiler::CompilationDependency"** %376, i64 %383
  %386 = getelementptr inbounds %"class.v8::internal::compiler::CompilationDependency"*, %"class.v8::internal::compiler::CompilationDependency"** %377, i64 %384
  %387 = getelementptr inbounds %"class.v8::internal::compiler::CompilationDependency"*, %"class.v8::internal::compiler::CompilationDependency"** %386, i64 -1
  %388 = bitcast %"class.v8::internal::compiler::CompilationDependency"** %387 to <2 x i64>*
  %389 = load <2 x i64>, <2 x i64>* %388, align 8, !alias.scope !298
  %390 = getelementptr inbounds %"class.v8::internal::compiler::CompilationDependency"*, %"class.v8::internal::compiler::CompilationDependency"** %386, i64 -2
  %391 = getelementptr inbounds %"class.v8::internal::compiler::CompilationDependency"*, %"class.v8::internal::compiler::CompilationDependency"** %390, i64 -1
  %392 = bitcast %"class.v8::internal::compiler::CompilationDependency"** %391 to <2 x i64>*
  %393 = load <2 x i64>, <2 x i64>* %392, align 8, !alias.scope !298
  %394 = getelementptr inbounds %"class.v8::internal::compiler::CompilationDependency"*, %"class.v8::internal::compiler::CompilationDependency"** %385, i64 -1
  %395 = bitcast %"class.v8::internal::compiler::CompilationDependency"** %394 to <2 x i64>*
  store <2 x i64> %389, <2 x i64>* %395, align 8, !alias.scope !301, !noalias !298
  %396 = getelementptr inbounds %"class.v8::internal::compiler::CompilationDependency"*, %"class.v8::internal::compiler::CompilationDependency"** %385, i64 -2
  %397 = getelementptr inbounds %"class.v8::internal::compiler::CompilationDependency"*, %"class.v8::internal::compiler::CompilationDependency"** %396, i64 -1
  %398 = bitcast %"class.v8::internal::compiler::CompilationDependency"** %397 to <2 x i64>*
  store <2 x i64> %393, <2 x i64>* %398, align 8, !alias.scope !301, !noalias !298
  %399 = sub nuw nsw i64 -4, %381
  %400 = sub nuw nsw i64 -4, %381
  %401 = getelementptr inbounds %"class.v8::internal::compiler::CompilationDependency"*, %"class.v8::internal::compiler::CompilationDependency"** %378, i64 %399
  %402 = getelementptr inbounds %"class.v8::internal::compiler::CompilationDependency"*, %"class.v8::internal::compiler::CompilationDependency"** %379, i64 %400
  %403 = getelementptr inbounds %"class.v8::internal::compiler::CompilationDependency"*, %"class.v8::internal::compiler::CompilationDependency"** %402, i64 -1
  %404 = bitcast %"class.v8::internal::compiler::CompilationDependency"** %403 to <2 x i64>*
  %405 = load <2 x i64>, <2 x i64>* %404, align 8, !alias.scope !298
  %406 = getelementptr inbounds %"class.v8::internal::compiler::CompilationDependency"*, %"class.v8::internal::compiler::CompilationDependency"** %402, i64 -2
  %407 = getelementptr inbounds %"class.v8::internal::compiler::CompilationDependency"*, %"class.v8::internal::compiler::CompilationDependency"** %406, i64 -1
  %408 = bitcast %"class.v8::internal::compiler::CompilationDependency"** %407 to <2 x i64>*
  %409 = load <2 x i64>, <2 x i64>* %408, align 8, !alias.scope !298
  %410 = getelementptr inbounds %"class.v8::internal::compiler::CompilationDependency"*, %"class.v8::internal::compiler::CompilationDependency"** %401, i64 -1
  %411 = bitcast %"class.v8::internal::compiler::CompilationDependency"** %410 to <2 x i64>*
  store <2 x i64> %405, <2 x i64>* %411, align 8, !alias.scope !301, !noalias !298
  %412 = getelementptr inbounds %"class.v8::internal::compiler::CompilationDependency"*, %"class.v8::internal::compiler::CompilationDependency"** %401, i64 -2
  %413 = getelementptr inbounds %"class.v8::internal::compiler::CompilationDependency"*, %"class.v8::internal::compiler::CompilationDependency"** %412, i64 -1
  %414 = bitcast %"class.v8::internal::compiler::CompilationDependency"** %413 to <2 x i64>*
  store <2 x i64> %409, <2 x i64>* %414, align 8, !alias.scope !301, !noalias !298
  %415 = add i64 %381, 8
  %416 = add i64 %382, -2
  %417 = icmp eq i64 %416, 0
  br i1 %417, label %418, label %380, !llvm.loop !303

418:                                              ; preds = %380, %363
  %419 = phi i64 [ 0, %363 ], [ %415, %380 ]
  %420 = icmp eq i64 %372, 0
  br i1 %420, label %440, label %421

421:                                              ; preds = %418
  %422 = sub i64 0, %419
  %423 = getelementptr %"class.v8::internal::compiler::CompilationDependency"*, %"class.v8::internal::compiler::CompilationDependency"** %332, i64 -1
  %424 = sub i64 0, %419
  %425 = getelementptr %"class.v8::internal::compiler::CompilationDependency"*, %"class.v8::internal::compiler::CompilationDependency"** %341, i64 -1
  %426 = getelementptr inbounds %"class.v8::internal::compiler::CompilationDependency"*, %"class.v8::internal::compiler::CompilationDependency"** %423, i64 %422
  %427 = getelementptr inbounds %"class.v8::internal::compiler::CompilationDependency"*, %"class.v8::internal::compiler::CompilationDependency"** %425, i64 %424
  %428 = getelementptr inbounds %"class.v8::internal::compiler::CompilationDependency"*, %"class.v8::internal::compiler::CompilationDependency"** %427, i64 -1
  %429 = bitcast %"class.v8::internal::compiler::CompilationDependency"** %428 to <2 x i64>*
  %430 = load <2 x i64>, <2 x i64>* %429, align 8, !alias.scope !298
  %431 = getelementptr inbounds %"class.v8::internal::compiler::CompilationDependency"*, %"class.v8::internal::compiler::CompilationDependency"** %427, i64 -2
  %432 = getelementptr inbounds %"class.v8::internal::compiler::CompilationDependency"*, %"class.v8::internal::compiler::CompilationDependency"** %431, i64 -1
  %433 = bitcast %"class.v8::internal::compiler::CompilationDependency"** %432 to <2 x i64>*
  %434 = load <2 x i64>, <2 x i64>* %433, align 8, !alias.scope !298
  %435 = getelementptr inbounds %"class.v8::internal::compiler::CompilationDependency"*, %"class.v8::internal::compiler::CompilationDependency"** %426, i64 -1
  %436 = bitcast %"class.v8::internal::compiler::CompilationDependency"** %435 to <2 x i64>*
  store <2 x i64> %430, <2 x i64>* %436, align 8, !alias.scope !301, !noalias !298
  %437 = getelementptr inbounds %"class.v8::internal::compiler::CompilationDependency"*, %"class.v8::internal::compiler::CompilationDependency"** %426, i64 -2
  %438 = getelementptr inbounds %"class.v8::internal::compiler::CompilationDependency"*, %"class.v8::internal::compiler::CompilationDependency"** %437, i64 -1
  %439 = bitcast %"class.v8::internal::compiler::CompilationDependency"** %438 to <2 x i64>*
  store <2 x i64> %434, <2 x i64>* %439, align 8, !alias.scope !301, !noalias !298
  br label %440

440:                                              ; preds = %418, %421
  %441 = icmp eq i64 %348, %364
  br i1 %441, label %512, label %442

442:                                              ; preds = %440, %350, %343
  %443 = phi %"class.v8::internal::compiler::CompilationDependency"** [ %332, %350 ], [ %332, %343 ], [ %366, %440 ]
  %444 = phi %"class.v8::internal::compiler::CompilationDependency"** [ %341, %350 ], [ %341, %343 ], [ %368, %440 ]
  %445 = getelementptr %"class.v8::internal::compiler::CompilationDependency"*, %"class.v8::internal::compiler::CompilationDependency"** %444, i64 -1
  %446 = ptrtoint %"class.v8::internal::compiler::CompilationDependency"** %445 to i64
  %447 = sub i64 %446, %340
  %448 = lshr i64 %447, 3
  %449 = add nuw nsw i64 %448, 1
  %450 = and i64 %449, 7
  %451 = icmp eq i64 %450, 0
  br i1 %451, label %463, label %452

452:                                              ; preds = %442, %452
  %453 = phi %"class.v8::internal::compiler::CompilationDependency"** [ %456, %452 ], [ %443, %442 ]
  %454 = phi %"class.v8::internal::compiler::CompilationDependency"** [ %457, %452 ], [ %444, %442 ]
  %455 = phi i64 [ %461, %452 ], [ %450, %442 ]
  %456 = getelementptr inbounds %"class.v8::internal::compiler::CompilationDependency"*, %"class.v8::internal::compiler::CompilationDependency"** %453, i64 -1
  %457 = getelementptr inbounds %"class.v8::internal::compiler::CompilationDependency"*, %"class.v8::internal::compiler::CompilationDependency"** %454, i64 -1
  %458 = bitcast %"class.v8::internal::compiler::CompilationDependency"** %457 to i64*
  %459 = load i64, i64* %458, align 8
  %460 = bitcast %"class.v8::internal::compiler::CompilationDependency"** %456 to i64*
  store i64 %459, i64* %460, align 8
  %461 = add i64 %455, -1
  %462 = icmp eq i64 %461, 0
  br i1 %462, label %463, label %452, !llvm.loop !304

463:                                              ; preds = %452, %442
  %464 = phi %"class.v8::internal::compiler::CompilationDependency"** [ undef, %442 ], [ %456, %452 ]
  %465 = phi %"class.v8::internal::compiler::CompilationDependency"** [ %443, %442 ], [ %456, %452 ]
  %466 = phi %"class.v8::internal::compiler::CompilationDependency"** [ %444, %442 ], [ %457, %452 ]
  %467 = icmp ult i64 %447, 56
  br i1 %467, label %512, label %468

468:                                              ; preds = %463, %468
  %469 = phi %"class.v8::internal::compiler::CompilationDependency"** [ %506, %468 ], [ %465, %463 ]
  %470 = phi %"class.v8::internal::compiler::CompilationDependency"** [ %507, %468 ], [ %466, %463 ]
  %471 = getelementptr inbounds %"class.v8::internal::compiler::CompilationDependency"*, %"class.v8::internal::compiler::CompilationDependency"** %469, i64 -1
  %472 = getelementptr inbounds %"class.v8::internal::compiler::CompilationDependency"*, %"class.v8::internal::compiler::CompilationDependency"** %470, i64 -1
  %473 = bitcast %"class.v8::internal::compiler::CompilationDependency"** %472 to i64*
  %474 = load i64, i64* %473, align 8
  %475 = bitcast %"class.v8::internal::compiler::CompilationDependency"** %471 to i64*
  store i64 %474, i64* %475, align 8
  %476 = getelementptr inbounds %"class.v8::internal::compiler::CompilationDependency"*, %"class.v8::internal::compiler::CompilationDependency"** %469, i64 -2
  %477 = getelementptr inbounds %"class.v8::internal::compiler::CompilationDependency"*, %"class.v8::internal::compiler::CompilationDependency"** %470, i64 -2
  %478 = bitcast %"class.v8::internal::compiler::CompilationDependency"** %477 to i64*
  %479 = load i64, i64* %478, align 8
  %480 = bitcast %"class.v8::internal::compiler::CompilationDependency"** %476 to i64*
  store i64 %479, i64* %480, align 8
  %481 = getelementptr inbounds %"class.v8::internal::compiler::CompilationDependency"*, %"class.v8::internal::compiler::CompilationDependency"** %469, i64 -3
  %482 = getelementptr inbounds %"class.v8::internal::compiler::CompilationDependency"*, %"class.v8::internal::compiler::CompilationDependency"** %470, i64 -3
  %483 = bitcast %"class.v8::internal::compiler::CompilationDependency"** %482 to i64*
  %484 = load i64, i64* %483, align 8
  %485 = bitcast %"class.v8::internal::compiler::CompilationDependency"** %481 to i64*
  store i64 %484, i64* %485, align 8
  %486 = getelementptr inbounds %"class.v8::internal::compiler::CompilationDependency"*, %"class.v8::internal::compiler::CompilationDependency"** %469, i64 -4
  %487 = getelementptr inbounds %"class.v8::internal::compiler::CompilationDependency"*, %"class.v8::internal::compiler::CompilationDependency"** %470, i64 -4
  %488 = bitcast %"class.v8::internal::compiler::CompilationDependency"** %487 to i64*
  %489 = load i64, i64* %488, align 8
  %490 = bitcast %"class.v8::internal::compiler::CompilationDependency"** %486 to i64*
  store i64 %489, i64* %490, align 8
  %491 = getelementptr inbounds %"class.v8::internal::compiler::CompilationDependency"*, %"class.v8::internal::compiler::CompilationDependency"** %469, i64 -5
  %492 = getelementptr inbounds %"class.v8::internal::compiler::CompilationDependency"*, %"class.v8::internal::compiler::CompilationDependency"** %470, i64 -5
  %493 = bitcast %"class.v8::internal::compiler::CompilationDependency"** %492 to i64*
  %494 = load i64, i64* %493, align 8
  %495 = bitcast %"class.v8::internal::compiler::CompilationDependency"** %491 to i64*
  store i64 %494, i64* %495, align 8
  %496 = getelementptr inbounds %"class.v8::internal::compiler::CompilationDependency"*, %"class.v8::internal::compiler::CompilationDependency"** %469, i64 -6
  %497 = getelementptr inbounds %"class.v8::internal::compiler::CompilationDependency"*, %"class.v8::internal::compiler::CompilationDependency"** %470, i64 -6
  %498 = bitcast %"class.v8::internal::compiler::CompilationDependency"** %497 to i64*
  %499 = load i64, i64* %498, align 8
  %500 = bitcast %"class.v8::internal::compiler::CompilationDependency"** %496 to i64*
  store i64 %499, i64* %500, align 8
  %501 = getelementptr inbounds %"class.v8::internal::compiler::CompilationDependency"*, %"class.v8::internal::compiler::CompilationDependency"** %469, i64 -7
  %502 = getelementptr inbounds %"class.v8::internal::compiler::CompilationDependency"*, %"class.v8::internal::compiler::CompilationDependency"** %470, i64 -7
  %503 = bitcast %"class.v8::internal::compiler::CompilationDependency"** %502 to i64*
  %504 = load i64, i64* %503, align 8
  %505 = bitcast %"class.v8::internal::compiler::CompilationDependency"** %501 to i64*
  store i64 %504, i64* %505, align 8
  %506 = getelementptr inbounds %"class.v8::internal::compiler::CompilationDependency"*, %"class.v8::internal::compiler::CompilationDependency"** %469, i64 -8
  %507 = getelementptr inbounds %"class.v8::internal::compiler::CompilationDependency"*, %"class.v8::internal::compiler::CompilationDependency"** %470, i64 -8
  %508 = bitcast %"class.v8::internal::compiler::CompilationDependency"** %507 to i64*
  %509 = load i64, i64* %508, align 8
  %510 = bitcast %"class.v8::internal::compiler::CompilationDependency"** %506 to i64*
  store i64 %509, i64* %510, align 8
  %511 = icmp eq %"class.v8::internal::compiler::CompilationDependency"** %507, %339
  br i1 %511, label %512, label %468, !llvm.loop !305

512:                                              ; preds = %463, %468, %440, %329
  %513 = phi %"class.v8::internal::compiler::CompilationDependency"** [ %332, %329 ], [ %366, %440 ], [ %464, %463 ], [ %506, %468 ]
  %514 = ptrtoint %"class.v8::internal::compiler::CompilationDependency"** %513 to i64
  store i64 %514, i64* %293, align 8
  store i64 %337, i64* %292, align 8
  store i64 %334, i64* %302, align 8
  br label %1359

515:                                              ; preds = %243
  %516 = getelementptr inbounds %"class.v8::internal::compiler::AccessInfoFactory", %"class.v8::internal::compiler::AccessInfoFactory"* %1, i64 0, i32 2
  %517 = load %"class.v8::internal::compiler::TypeCache"*, %"class.v8::internal::compiler::TypeCache"** %516, align 8
  %518 = getelementptr inbounds %"class.v8::internal::compiler::TypeCache", %"class.v8::internal::compiler::TypeCache"* %517, i64 0, i32 14, i32 0
  %519 = load i64, i64* %518, align 8
  %520 = getelementptr inbounds %"class.v8::base::Optional.1270", %"class.v8::base::Optional.1270"* %8, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  %521 = call zeroext i1 @_ZN2v88internal8compiler6MapRef25TrySerializeOwnDescriptorENS0_13InternalIndexE(%"class.v8::internal::compiler::MapRef"* %520, i64 %106) #8
  br i1 %521, label %540, label %522

522:                                              ; preds = %515
  %523 = load i64, i64* %246, align 8, !noalias !306
  %524 = getelementptr inbounds %"class.v8::internal::compiler::PropertyAccessInfo", %"class.v8::internal::compiler::PropertyAccessInfo"* %0, i64 0, i32 0
  store i32 0, i32* %524, align 8, !alias.scope !309
  %525 = getelementptr inbounds %"class.v8::internal::compiler::PropertyAccessInfo", %"class.v8::internal::compiler::PropertyAccessInfo"* %0, i64 0, i32 1
  %526 = getelementptr inbounds %"class.v8::internal::compiler::PropertyAccessInfo", %"class.v8::internal::compiler::PropertyAccessInfo"* %0, i64 0, i32 1, i32 0, i32 0, i32 2, i32 1
  %527 = bitcast %"struct.std::__1::__compressed_pair_elem.0"* %526 to i64*
  %528 = bitcast %"class.v8::internal::ZoneVector"* %525 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %528, i8 0, i64 24, i1 false) #8, !alias.scope !309
  store i64 %523, i64* %527, align 8, !alias.scope !309
  %529 = getelementptr inbounds %"class.v8::internal::compiler::PropertyAccessInfo", %"class.v8::internal::compiler::PropertyAccessInfo"* %0, i64 0, i32 2, i32 0, i32 0
  %530 = getelementptr inbounds %"class.v8::internal::compiler::PropertyAccessInfo", %"class.v8::internal::compiler::PropertyAccessInfo"* %0, i64 0, i32 4, i32 0, i32 0, i32 2, i32 1
  %531 = bitcast %"struct.std::__1::__compressed_pair_elem.27"* %530 to i64*
  %532 = bitcast i64** %529 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %532, i8 0, i64 40, i1 false) #8, !alias.scope !309
  store i64 %523, i64* %531, align 8, !alias.scope !309
  %533 = getelementptr inbounds %"class.v8::internal::compiler::PropertyAccessInfo", %"class.v8::internal::compiler::PropertyAccessInfo"* %0, i64 0, i32 5, i32 0
  %534 = getelementptr inbounds %"class.v8::internal::compiler::PropertyAccessInfo", %"class.v8::internal::compiler::PropertyAccessInfo"* %0, i64 0, i32 8, i32 0
  %535 = bitcast i64** %533 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %535, i8 0, i64 17, i1 false) #8, !alias.scope !309
  store i64 1, i64* %534, align 8, !alias.scope !309
  %536 = getelementptr inbounds %"class.v8::internal::compiler::PropertyAccessInfo", %"class.v8::internal::compiler::PropertyAccessInfo"* %0, i64 0, i32 9, i32 0
  %537 = getelementptr inbounds %"class.v8::internal::compiler::PropertyAccessInfo", %"class.v8::internal::compiler::PropertyAccessInfo"* %0, i64 0, i32 11, i32 0
  %538 = bitcast i64** %536 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %538, i8 0, i64 16, i1 false) #8, !alias.scope !309
  store i64 -1, i64* %537, align 8, !alias.scope !309
  %539 = getelementptr inbounds %"class.v8::internal::compiler::PropertyAccessInfo", %"class.v8::internal::compiler::PropertyAccessInfo"* %0, i64 0, i32 12, i32 0
  store i64* null, i64** %539, align 8, !alias.scope !309
  br label %1615

540:                                              ; preds = %515
  %541 = getelementptr inbounds %"class.v8::internal::compiler::AccessInfoFactory", %"class.v8::internal::compiler::AccessInfoFactory"* %1, i64 0, i32 1
  %542 = load %"class.v8::internal::compiler::CompilationDependencies"*, %"class.v8::internal::compiler::CompilationDependencies"** %541, align 8
  %543 = call %"class.v8::internal::compiler::CompilationDependency"* @_ZNK2v88internal8compiler23CompilationDependencies41FieldRepresentationDependencyOffTheRecordERKNS1_6MapRefENS0_13InternalIndexE(%"class.v8::internal::compiler::CompilationDependencies"* %542, %"class.v8::internal::compiler::MapRef"* dereferenceable(16) %520, i64 %106) #8
  %544 = ptrtoint %"class.v8::internal::compiler::CompilationDependency"* %543 to i64
  %545 = getelementptr inbounds %"class.v8::internal::ZoneVector.22", %"class.v8::internal::ZoneVector.22"* %9, i64 0, i32 0, i32 0, i32 1
  %546 = load %"class.v8::internal::compiler::CompilationDependency"**, %"class.v8::internal::compiler::CompilationDependency"*** %545, align 8
  %547 = getelementptr inbounds %"class.v8::internal::ZoneVector.22", %"class.v8::internal::ZoneVector.22"* %9, i64 0, i32 0, i32 0, i32 2, i32 0, i32 0
  %548 = load %"class.v8::internal::compiler::CompilationDependency"**, %"class.v8::internal::compiler::CompilationDependency"*** %547, align 8
  %549 = icmp ult %"class.v8::internal::compiler::CompilationDependency"** %546, %548
  %550 = ptrtoint %"class.v8::internal::compiler::CompilationDependency"** %548 to i64
  br i1 %549, label %551, label %556

551:                                              ; preds = %540
  %552 = bitcast %"class.v8::internal::compiler::CompilationDependency"** %546 to i64*
  store i64 %544, i64* %552, align 8
  %553 = getelementptr inbounds %"class.v8::internal::compiler::CompilationDependency"*, %"class.v8::internal::compiler::CompilationDependency"** %546, i64 1
  %554 = ptrtoint %"class.v8::internal::compiler::CompilationDependency"** %553 to i64
  %555 = bitcast %"class.v8::internal::compiler::CompilationDependency"*** %545 to i64*
  store i64 %554, i64* %555, align 8
  br label %1359

556:                                              ; preds = %540
  %557 = ptrtoint %"class.v8::internal::compiler::CompilationDependency"** %546 to i64
  %558 = bitcast %"class.v8::internal::compiler::CompilationDependency"*** %545 to i64*
  %559 = bitcast %"class.v8::internal::ZoneVector.22"* %9 to i64*
  %560 = load i64, i64* %559, align 8
  %561 = sub i64 %557, %560
  %562 = ashr exact i64 %561, 3
  %563 = add nsw i64 %562, 1
  %564 = icmp ugt i64 %563, 268435455
  br i1 %564, label %565, label %567

565:                                              ; preds = %556
  %566 = bitcast %"class.v8::internal::ZoneVector.22"* %9 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %566) #12
  unreachable

567:                                              ; preds = %556
  %568 = bitcast %"class.v8::internal::compiler::CompilationDependency"*** %547 to i64*
  %569 = sub i64 %550, %560
  %570 = ashr exact i64 %569, 3
  %571 = icmp ult i64 %570, 134217727
  br i1 %571, label %572, label %577

572:                                              ; preds = %567
  %573 = ashr exact i64 %569, 2
  %574 = icmp ult i64 %573, %563
  %575 = select i1 %574, i64 %563, i64 %573
  %576 = icmp eq i64 %575, 0
  br i1 %576, label %595, label %577

577:                                              ; preds = %572, %567
  %578 = phi i64 [ %575, %572 ], [ 268435455, %567 ]
  %579 = getelementptr inbounds %"class.v8::internal::ZoneVector.22", %"class.v8::internal::ZoneVector.22"* %9, i64 0, i32 0, i32 0, i32 2, i32 1, i32 0, i32 0
  %580 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %579, align 8
  %581 = shl i64 %578, 3
  %582 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %580, i64 0, i32 2
  %583 = load i64, i64* %582, align 8
  %584 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %580, i64 0, i32 3
  %585 = load i64, i64* %584, align 8
  %586 = sub i64 %585, %583
  %587 = icmp ugt i64 %581, %586
  br i1 %587, label %588, label %590, !prof !2

588:                                              ; preds = %577
  %589 = call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %580, i64 %581) #8
  br label %592

590:                                              ; preds = %577
  %591 = add i64 %583, %581
  store i64 %591, i64* %582, align 8
  br label %592

592:                                              ; preds = %590, %588
  %593 = phi i64 [ %589, %588 ], [ %583, %590 ]
  %594 = inttoptr i64 %593 to %"class.v8::internal::compiler::CompilationDependency"**
  br label %595

595:                                              ; preds = %592, %572
  %596 = phi i64 [ %578, %592 ], [ 0, %572 ]
  %597 = phi %"class.v8::internal::compiler::CompilationDependency"** [ %594, %592 ], [ null, %572 ]
  %598 = getelementptr inbounds %"class.v8::internal::compiler::CompilationDependency"*, %"class.v8::internal::compiler::CompilationDependency"** %597, i64 %562
  %599 = getelementptr inbounds %"class.v8::internal::compiler::CompilationDependency"*, %"class.v8::internal::compiler::CompilationDependency"** %597, i64 %596
  %600 = ptrtoint %"class.v8::internal::compiler::CompilationDependency"** %599 to i64
  %601 = bitcast %"class.v8::internal::compiler::CompilationDependency"** %598 to i64*
  store i64 %544, i64* %601, align 8
  %602 = getelementptr inbounds %"class.v8::internal::compiler::CompilationDependency"*, %"class.v8::internal::compiler::CompilationDependency"** %598, i64 1
  %603 = ptrtoint %"class.v8::internal::compiler::CompilationDependency"** %602 to i64
  %604 = getelementptr inbounds %"class.v8::internal::ZoneVector.22", %"class.v8::internal::ZoneVector.22"* %9, i64 0, i32 0, i32 0, i32 0
  %605 = load %"class.v8::internal::compiler::CompilationDependency"**, %"class.v8::internal::compiler::CompilationDependency"*** %604, align 8
  %606 = ptrtoint %"class.v8::internal::compiler::CompilationDependency"** %605 to i64
  %607 = load %"class.v8::internal::compiler::CompilationDependency"**, %"class.v8::internal::compiler::CompilationDependency"*** %545, align 8
  %608 = icmp eq %"class.v8::internal::compiler::CompilationDependency"** %607, %605
  br i1 %608, label %778, label %609

609:                                              ; preds = %595
  %610 = getelementptr %"class.v8::internal::compiler::CompilationDependency"*, %"class.v8::internal::compiler::CompilationDependency"** %607, i64 -1
  %611 = ptrtoint %"class.v8::internal::compiler::CompilationDependency"** %610 to i64
  %612 = sub i64 %611, %606
  %613 = lshr i64 %612, 3
  %614 = add nuw nsw i64 %613, 1
  %615 = icmp ult i64 %614, 4
  br i1 %615, label %708, label %616

616:                                              ; preds = %609
  %617 = getelementptr %"class.v8::internal::compiler::CompilationDependency"*, %"class.v8::internal::compiler::CompilationDependency"** %607, i64 -1
  %618 = ptrtoint %"class.v8::internal::compiler::CompilationDependency"** %617 to i64
  %619 = sub i64 %618, %606
  %620 = lshr i64 %619, 3
  %621 = xor i64 %620, -1
  %622 = add nsw i64 %562, %621
  %623 = getelementptr %"class.v8::internal::compiler::CompilationDependency"*, %"class.v8::internal::compiler::CompilationDependency"** %597, i64 %622
  %624 = xor i64 %620, -1
  %625 = getelementptr %"class.v8::internal::compiler::CompilationDependency"*, %"class.v8::internal::compiler::CompilationDependency"** %607, i64 %624
  %626 = icmp ult %"class.v8::internal::compiler::CompilationDependency"** %623, %607
  %627 = icmp ult %"class.v8::internal::compiler::CompilationDependency"** %625, %598
  %628 = and i1 %626, %627
  br i1 %628, label %708, label %629

629:                                              ; preds = %616
  %630 = and i64 %614, 4611686018427387900
  %631 = sub nsw i64 0, %630
  %632 = getelementptr %"class.v8::internal::compiler::CompilationDependency"*, %"class.v8::internal::compiler::CompilationDependency"** %598, i64 %631
  %633 = sub nsw i64 0, %630
  %634 = getelementptr %"class.v8::internal::compiler::CompilationDependency"*, %"class.v8::internal::compiler::CompilationDependency"** %607, i64 %633
  %635 = add nsw i64 %630, -4
  %636 = lshr exact i64 %635, 2
  %637 = add nuw nsw i64 %636, 1
  %638 = and i64 %637, 1
  %639 = icmp eq i64 %635, 0
  br i1 %639, label %684, label %640

640:                                              ; preds = %629
  %641 = sub nuw nsw i64 %637, %638
  %642 = getelementptr %"class.v8::internal::compiler::CompilationDependency"*, %"class.v8::internal::compiler::CompilationDependency"** %598, i64 -1
  %643 = getelementptr %"class.v8::internal::compiler::CompilationDependency"*, %"class.v8::internal::compiler::CompilationDependency"** %607, i64 -1
  %644 = getelementptr %"class.v8::internal::compiler::CompilationDependency"*, %"class.v8::internal::compiler::CompilationDependency"** %598, i64 -1
  %645 = getelementptr %"class.v8::internal::compiler::CompilationDependency"*, %"class.v8::internal::compiler::CompilationDependency"** %607, i64 -1
  br label %646

646:                                              ; preds = %646, %640
  %647 = phi i64 [ 0, %640 ], [ %681, %646 ]
  %648 = phi i64 [ %641, %640 ], [ %682, %646 ]
  %649 = sub i64 0, %647
  %650 = sub i64 0, %647
  %651 = getelementptr inbounds %"class.v8::internal::compiler::CompilationDependency"*, %"class.v8::internal::compiler::CompilationDependency"** %642, i64 %649
  %652 = getelementptr inbounds %"class.v8::internal::compiler::CompilationDependency"*, %"class.v8::internal::compiler::CompilationDependency"** %643, i64 %650
  %653 = getelementptr inbounds %"class.v8::internal::compiler::CompilationDependency"*, %"class.v8::internal::compiler::CompilationDependency"** %652, i64 -1
  %654 = bitcast %"class.v8::internal::compiler::CompilationDependency"** %653 to <2 x i64>*
  %655 = load <2 x i64>, <2 x i64>* %654, align 8, !alias.scope !312
  %656 = getelementptr inbounds %"class.v8::internal::compiler::CompilationDependency"*, %"class.v8::internal::compiler::CompilationDependency"** %652, i64 -2
  %657 = getelementptr inbounds %"class.v8::internal::compiler::CompilationDependency"*, %"class.v8::internal::compiler::CompilationDependency"** %656, i64 -1
  %658 = bitcast %"class.v8::internal::compiler::CompilationDependency"** %657 to <2 x i64>*
  %659 = load <2 x i64>, <2 x i64>* %658, align 8, !alias.scope !312
  %660 = getelementptr inbounds %"class.v8::internal::compiler::CompilationDependency"*, %"class.v8::internal::compiler::CompilationDependency"** %651, i64 -1
  %661 = bitcast %"class.v8::internal::compiler::CompilationDependency"** %660 to <2 x i64>*
  store <2 x i64> %655, <2 x i64>* %661, align 8, !alias.scope !315, !noalias !312
  %662 = getelementptr inbounds %"class.v8::internal::compiler::CompilationDependency"*, %"class.v8::internal::compiler::CompilationDependency"** %651, i64 -2
  %663 = getelementptr inbounds %"class.v8::internal::compiler::CompilationDependency"*, %"class.v8::internal::compiler::CompilationDependency"** %662, i64 -1
  %664 = bitcast %"class.v8::internal::compiler::CompilationDependency"** %663 to <2 x i64>*
  store <2 x i64> %659, <2 x i64>* %664, align 8, !alias.scope !315, !noalias !312
  %665 = sub nuw nsw i64 -4, %647
  %666 = sub nuw nsw i64 -4, %647
  %667 = getelementptr inbounds %"class.v8::internal::compiler::CompilationDependency"*, %"class.v8::internal::compiler::CompilationDependency"** %644, i64 %665
  %668 = getelementptr inbounds %"class.v8::internal::compiler::CompilationDependency"*, %"class.v8::internal::compiler::CompilationDependency"** %645, i64 %666
  %669 = getelementptr inbounds %"class.v8::internal::compiler::CompilationDependency"*, %"class.v8::internal::compiler::CompilationDependency"** %668, i64 -1
  %670 = bitcast %"class.v8::internal::compiler::CompilationDependency"** %669 to <2 x i64>*
  %671 = load <2 x i64>, <2 x i64>* %670, align 8, !alias.scope !312
  %672 = getelementptr inbounds %"class.v8::internal::compiler::CompilationDependency"*, %"class.v8::internal::compiler::CompilationDependency"** %668, i64 -2
  %673 = getelementptr inbounds %"class.v8::internal::compiler::CompilationDependency"*, %"class.v8::internal::compiler::CompilationDependency"** %672, i64 -1
  %674 = bitcast %"class.v8::internal::compiler::CompilationDependency"** %673 to <2 x i64>*
  %675 = load <2 x i64>, <2 x i64>* %674, align 8, !alias.scope !312
  %676 = getelementptr inbounds %"class.v8::internal::compiler::CompilationDependency"*, %"class.v8::internal::compiler::CompilationDependency"** %667, i64 -1
  %677 = bitcast %"class.v8::internal::compiler::CompilationDependency"** %676 to <2 x i64>*
  store <2 x i64> %671, <2 x i64>* %677, align 8, !alias.scope !315, !noalias !312
  %678 = getelementptr inbounds %"class.v8::internal::compiler::CompilationDependency"*, %"class.v8::internal::compiler::CompilationDependency"** %667, i64 -2
  %679 = getelementptr inbounds %"class.v8::internal::compiler::CompilationDependency"*, %"class.v8::internal::compiler::CompilationDependency"** %678, i64 -1
  %680 = bitcast %"class.v8::internal::compiler::CompilationDependency"** %679 to <2 x i64>*
  store <2 x i64> %675, <2 x i64>* %680, align 8, !alias.scope !315, !noalias !312
  %681 = add i64 %647, 8
  %682 = add i64 %648, -2
  %683 = icmp eq i64 %682, 0
  br i1 %683, label %684, label %646, !llvm.loop !317

684:                                              ; preds = %646, %629
  %685 = phi i64 [ 0, %629 ], [ %681, %646 ]
  %686 = icmp eq i64 %638, 0
  br i1 %686, label %706, label %687

687:                                              ; preds = %684
  %688 = sub i64 0, %685
  %689 = getelementptr %"class.v8::internal::compiler::CompilationDependency"*, %"class.v8::internal::compiler::CompilationDependency"** %598, i64 -1
  %690 = sub i64 0, %685
  %691 = getelementptr %"class.v8::internal::compiler::CompilationDependency"*, %"class.v8::internal::compiler::CompilationDependency"** %607, i64 -1
  %692 = getelementptr inbounds %"class.v8::internal::compiler::CompilationDependency"*, %"class.v8::internal::compiler::CompilationDependency"** %689, i64 %688
  %693 = getelementptr inbounds %"class.v8::internal::compiler::CompilationDependency"*, %"class.v8::internal::compiler::CompilationDependency"** %691, i64 %690
  %694 = getelementptr inbounds %"class.v8::internal::compiler::CompilationDependency"*, %"class.v8::internal::compiler::CompilationDependency"** %693, i64 -1
  %695 = bitcast %"class.v8::internal::compiler::CompilationDependency"** %694 to <2 x i64>*
  %696 = load <2 x i64>, <2 x i64>* %695, align 8, !alias.scope !312
  %697 = getelementptr inbounds %"class.v8::internal::compiler::CompilationDependency"*, %"class.v8::internal::compiler::CompilationDependency"** %693, i64 -2
  %698 = getelementptr inbounds %"class.v8::internal::compiler::CompilationDependency"*, %"class.v8::internal::compiler::CompilationDependency"** %697, i64 -1
  %699 = bitcast %"class.v8::internal::compiler::CompilationDependency"** %698 to <2 x i64>*
  %700 = load <2 x i64>, <2 x i64>* %699, align 8, !alias.scope !312
  %701 = getelementptr inbounds %"class.v8::internal::compiler::CompilationDependency"*, %"class.v8::internal::compiler::CompilationDependency"** %692, i64 -1
  %702 = bitcast %"class.v8::internal::compiler::CompilationDependency"** %701 to <2 x i64>*
  store <2 x i64> %696, <2 x i64>* %702, align 8, !alias.scope !315, !noalias !312
  %703 = getelementptr inbounds %"class.v8::internal::compiler::CompilationDependency"*, %"class.v8::internal::compiler::CompilationDependency"** %692, i64 -2
  %704 = getelementptr inbounds %"class.v8::internal::compiler::CompilationDependency"*, %"class.v8::internal::compiler::CompilationDependency"** %703, i64 -1
  %705 = bitcast %"class.v8::internal::compiler::CompilationDependency"** %704 to <2 x i64>*
  store <2 x i64> %700, <2 x i64>* %705, align 8, !alias.scope !315, !noalias !312
  br label %706

706:                                              ; preds = %684, %687
  %707 = icmp eq i64 %614, %630
  br i1 %707, label %778, label %708

708:                                              ; preds = %706, %616, %609
  %709 = phi %"class.v8::internal::compiler::CompilationDependency"** [ %598, %616 ], [ %598, %609 ], [ %632, %706 ]
  %710 = phi %"class.v8::internal::compiler::CompilationDependency"** [ %607, %616 ], [ %607, %609 ], [ %634, %706 ]
  %711 = getelementptr %"class.v8::internal::compiler::CompilationDependency"*, %"class.v8::internal::compiler::CompilationDependency"** %710, i64 -1
  %712 = ptrtoint %"class.v8::internal::compiler::CompilationDependency"** %711 to i64
  %713 = sub i64 %712, %606
  %714 = lshr i64 %713, 3
  %715 = add nuw nsw i64 %714, 1
  %716 = and i64 %715, 7
  %717 = icmp eq i64 %716, 0
  br i1 %717, label %729, label %718

718:                                              ; preds = %708, %718
  %719 = phi %"class.v8::internal::compiler::CompilationDependency"** [ %722, %718 ], [ %709, %708 ]
  %720 = phi %"class.v8::internal::compiler::CompilationDependency"** [ %723, %718 ], [ %710, %708 ]
  %721 = phi i64 [ %727, %718 ], [ %716, %708 ]
  %722 = getelementptr inbounds %"class.v8::internal::compiler::CompilationDependency"*, %"class.v8::internal::compiler::CompilationDependency"** %719, i64 -1
  %723 = getelementptr inbounds %"class.v8::internal::compiler::CompilationDependency"*, %"class.v8::internal::compiler::CompilationDependency"** %720, i64 -1
  %724 = bitcast %"class.v8::internal::compiler::CompilationDependency"** %723 to i64*
  %725 = load i64, i64* %724, align 8
  %726 = bitcast %"class.v8::internal::compiler::CompilationDependency"** %722 to i64*
  store i64 %725, i64* %726, align 8
  %727 = add i64 %721, -1
  %728 = icmp eq i64 %727, 0
  br i1 %728, label %729, label %718, !llvm.loop !318

729:                                              ; preds = %718, %708
  %730 = phi %"class.v8::internal::compiler::CompilationDependency"** [ undef, %708 ], [ %722, %718 ]
  %731 = phi %"class.v8::internal::compiler::CompilationDependency"** [ %709, %708 ], [ %722, %718 ]
  %732 = phi %"class.v8::internal::compiler::CompilationDependency"** [ %710, %708 ], [ %723, %718 ]
  %733 = icmp ult i64 %713, 56
  br i1 %733, label %778, label %734

734:                                              ; preds = %729, %734
  %735 = phi %"class.v8::internal::compiler::CompilationDependency"** [ %772, %734 ], [ %731, %729 ]
  %736 = phi %"class.v8::internal::compiler::CompilationDependency"** [ %773, %734 ], [ %732, %729 ]
  %737 = getelementptr inbounds %"class.v8::internal::compiler::CompilationDependency"*, %"class.v8::internal::compiler::CompilationDependency"** %735, i64 -1
  %738 = getelementptr inbounds %"class.v8::internal::compiler::CompilationDependency"*, %"class.v8::internal::compiler::CompilationDependency"** %736, i64 -1
  %739 = bitcast %"class.v8::internal::compiler::CompilationDependency"** %738 to i64*
  %740 = load i64, i64* %739, align 8
  %741 = bitcast %"class.v8::internal::compiler::CompilationDependency"** %737 to i64*
  store i64 %740, i64* %741, align 8
  %742 = getelementptr inbounds %"class.v8::internal::compiler::CompilationDependency"*, %"class.v8::internal::compiler::CompilationDependency"** %735, i64 -2
  %743 = getelementptr inbounds %"class.v8::internal::compiler::CompilationDependency"*, %"class.v8::internal::compiler::CompilationDependency"** %736, i64 -2
  %744 = bitcast %"class.v8::internal::compiler::CompilationDependency"** %743 to i64*
  %745 = load i64, i64* %744, align 8
  %746 = bitcast %"class.v8::internal::compiler::CompilationDependency"** %742 to i64*
  store i64 %745, i64* %746, align 8
  %747 = getelementptr inbounds %"class.v8::internal::compiler::CompilationDependency"*, %"class.v8::internal::compiler::CompilationDependency"** %735, i64 -3
  %748 = getelementptr inbounds %"class.v8::internal::compiler::CompilationDependency"*, %"class.v8::internal::compiler::CompilationDependency"** %736, i64 -3
  %749 = bitcast %"class.v8::internal::compiler::CompilationDependency"** %748 to i64*
  %750 = load i64, i64* %749, align 8
  %751 = bitcast %"class.v8::internal::compiler::CompilationDependency"** %747 to i64*
  store i64 %750, i64* %751, align 8
  %752 = getelementptr inbounds %"class.v8::internal::compiler::CompilationDependency"*, %"class.v8::internal::compiler::CompilationDependency"** %735, i64 -4
  %753 = getelementptr inbounds %"class.v8::internal::compiler::CompilationDependency"*, %"class.v8::internal::compiler::CompilationDependency"** %736, i64 -4
  %754 = bitcast %"class.v8::internal::compiler::CompilationDependency"** %753 to i64*
  %755 = load i64, i64* %754, align 8
  %756 = bitcast %"class.v8::internal::compiler::CompilationDependency"** %752 to i64*
  store i64 %755, i64* %756, align 8
  %757 = getelementptr inbounds %"class.v8::internal::compiler::CompilationDependency"*, %"class.v8::internal::compiler::CompilationDependency"** %735, i64 -5
  %758 = getelementptr inbounds %"class.v8::internal::compiler::CompilationDependency"*, %"class.v8::internal::compiler::CompilationDependency"** %736, i64 -5
  %759 = bitcast %"class.v8::internal::compiler::CompilationDependency"** %758 to i64*
  %760 = load i64, i64* %759, align 8
  %761 = bitcast %"class.v8::internal::compiler::CompilationDependency"** %757 to i64*
  store i64 %760, i64* %761, align 8
  %762 = getelementptr inbounds %"class.v8::internal::compiler::CompilationDependency"*, %"class.v8::internal::compiler::CompilationDependency"** %735, i64 -6
  %763 = getelementptr inbounds %"class.v8::internal::compiler::CompilationDependency"*, %"class.v8::internal::compiler::CompilationDependency"** %736, i64 -6
  %764 = bitcast %"class.v8::internal::compiler::CompilationDependency"** %763 to i64*
  %765 = load i64, i64* %764, align 8
  %766 = bitcast %"class.v8::internal::compiler::CompilationDependency"** %762 to i64*
  store i64 %765, i64* %766, align 8
  %767 = getelementptr inbounds %"class.v8::internal::compiler::CompilationDependency"*, %"class.v8::internal::compiler::CompilationDependency"** %735, i64 -7
  %768 = getelementptr inbounds %"class.v8::internal::compiler::CompilationDependency"*, %"class.v8::internal::compiler::CompilationDependency"** %736, i64 -7
  %769 = bitcast %"class.v8::internal::compiler::CompilationDependency"** %768 to i64*
  %770 = load i64, i64* %769, align 8
  %771 = bitcast %"class.v8::internal::compiler::CompilationDependency"** %767 to i64*
  store i64 %770, i64* %771, align 8
  %772 = getelementptr inbounds %"class.v8::internal::compiler::CompilationDependency"*, %"class.v8::internal::compiler::CompilationDependency"** %735, i64 -8
  %773 = getelementptr inbounds %"class.v8::internal::compiler::CompilationDependency"*, %"class.v8::internal::compiler::CompilationDependency"** %736, i64 -8
  %774 = bitcast %"class.v8::internal::compiler::CompilationDependency"** %773 to i64*
  %775 = load i64, i64* %774, align 8
  %776 = bitcast %"class.v8::internal::compiler::CompilationDependency"** %772 to i64*
  store i64 %775, i64* %776, align 8
  %777 = icmp eq %"class.v8::internal::compiler::CompilationDependency"** %773, %605
  br i1 %777, label %778, label %734, !llvm.loop !319

778:                                              ; preds = %729, %734, %706, %595
  %779 = phi %"class.v8::internal::compiler::CompilationDependency"** [ %598, %595 ], [ %632, %706 ], [ %730, %729 ], [ %772, %734 ]
  %780 = ptrtoint %"class.v8::internal::compiler::CompilationDependency"** %779 to i64
  store i64 %780, i64* %559, align 8
  store i64 %603, i64* %558, align 8
  store i64 %600, i64* %568, align 8
  br label %1359

781:                                              ; preds = %243
  %782 = load %"class.v8::internal::compiler::JSHeapBroker"*, %"class.v8::internal::compiler::JSHeapBroker"** %14, align 8
  %783 = load i64, i64* %115, align 8
  %784 = and i64 %783, -4294967296
  %785 = add nuw nsw i64 %119, 7
  %786 = add i64 %785, %783
  %787 = inttoptr i64 %786 to i32*
  %788 = load atomic i32, i32* %787 monotonic, align 4
  %789 = zext i32 %788 to i64
  %790 = or i64 %784, %789
  %791 = call i64 @_ZN2v88internal3Map15UnwrapFieldTypeENS0_11MaybeObjectE(i64 %790) #8
  %792 = call i64* @_ZN2v88internal8compiler12JSHeapBroker25CanonicalPersistentHandleINS0_9FieldTypeEEENS0_6HandleIT_EES6_(%"class.v8::internal::compiler::JSHeapBroker"* %782, i64 %791)
  %793 = load i64, i64* %792, align 8
  %794 = call i64 @_ZN2v88internal9FieldType4NoneEv() #8
  %795 = trunc i64 %793 to i32
  %796 = trunc i64 %794 to i32
  %797 = icmp eq i32 %795, %796
  br i1 %797, label %798, label %816

798:                                              ; preds = %781
  %799 = load i64, i64* %246, align 8, !noalias !320
  %800 = getelementptr inbounds %"class.v8::internal::compiler::PropertyAccessInfo", %"class.v8::internal::compiler::PropertyAccessInfo"* %0, i64 0, i32 0
  store i32 0, i32* %800, align 8, !alias.scope !323
  %801 = getelementptr inbounds %"class.v8::internal::compiler::PropertyAccessInfo", %"class.v8::internal::compiler::PropertyAccessInfo"* %0, i64 0, i32 1
  %802 = getelementptr inbounds %"class.v8::internal::compiler::PropertyAccessInfo", %"class.v8::internal::compiler::PropertyAccessInfo"* %0, i64 0, i32 1, i32 0, i32 0, i32 2, i32 1
  %803 = bitcast %"struct.std::__1::__compressed_pair_elem.0"* %802 to i64*
  %804 = bitcast %"class.v8::internal::ZoneVector"* %801 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %804, i8 0, i64 24, i1 false) #8, !alias.scope !323
  store i64 %799, i64* %803, align 8, !alias.scope !323
  %805 = getelementptr inbounds %"class.v8::internal::compiler::PropertyAccessInfo", %"class.v8::internal::compiler::PropertyAccessInfo"* %0, i64 0, i32 2, i32 0, i32 0
  %806 = getelementptr inbounds %"class.v8::internal::compiler::PropertyAccessInfo", %"class.v8::internal::compiler::PropertyAccessInfo"* %0, i64 0, i32 4, i32 0, i32 0, i32 2, i32 1
  %807 = bitcast %"struct.std::__1::__compressed_pair_elem.27"* %806 to i64*
  %808 = bitcast i64** %805 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %808, i8 0, i64 40, i1 false) #8, !alias.scope !323
  store i64 %799, i64* %807, align 8, !alias.scope !323
  %809 = getelementptr inbounds %"class.v8::internal::compiler::PropertyAccessInfo", %"class.v8::internal::compiler::PropertyAccessInfo"* %0, i64 0, i32 5, i32 0
  %810 = getelementptr inbounds %"class.v8::internal::compiler::PropertyAccessInfo", %"class.v8::internal::compiler::PropertyAccessInfo"* %0, i64 0, i32 8, i32 0
  %811 = bitcast i64** %809 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %811, i8 0, i64 17, i1 false) #8, !alias.scope !323
  store i64 1, i64* %810, align 8, !alias.scope !323
  %812 = getelementptr inbounds %"class.v8::internal::compiler::PropertyAccessInfo", %"class.v8::internal::compiler::PropertyAccessInfo"* %0, i64 0, i32 9, i32 0
  %813 = getelementptr inbounds %"class.v8::internal::compiler::PropertyAccessInfo", %"class.v8::internal::compiler::PropertyAccessInfo"* %0, i64 0, i32 11, i32 0
  %814 = bitcast i64** %812 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %814, i8 0, i64 16, i1 false) #8, !alias.scope !323
  store i64 -1, i64* %813, align 8, !alias.scope !323
  %815 = getelementptr inbounds %"class.v8::internal::compiler::PropertyAccessInfo", %"class.v8::internal::compiler::PropertyAccessInfo"* %0, i64 0, i32 12, i32 0
  store i64* null, i64** %815, align 8, !alias.scope !323
  br label %1615

816:                                              ; preds = %781
  %817 = getelementptr inbounds %"class.v8::base::Optional.1270", %"class.v8::base::Optional.1270"* %8, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  %818 = call zeroext i1 @_ZN2v88internal8compiler6MapRef25TrySerializeOwnDescriptorENS0_13InternalIndexE(%"class.v8::internal::compiler::MapRef"* %817, i64 %106) #8
  br i1 %818, label %837, label %819

819:                                              ; preds = %816
  %820 = load i64, i64* %246, align 8, !noalias !326
  %821 = getelementptr inbounds %"class.v8::internal::compiler::PropertyAccessInfo", %"class.v8::internal::compiler::PropertyAccessInfo"* %0, i64 0, i32 0
  store i32 0, i32* %821, align 8, !alias.scope !329
  %822 = getelementptr inbounds %"class.v8::internal::compiler::PropertyAccessInfo", %"class.v8::internal::compiler::PropertyAccessInfo"* %0, i64 0, i32 1
  %823 = getelementptr inbounds %"class.v8::internal::compiler::PropertyAccessInfo", %"class.v8::internal::compiler::PropertyAccessInfo"* %0, i64 0, i32 1, i32 0, i32 0, i32 2, i32 1
  %824 = bitcast %"struct.std::__1::__compressed_pair_elem.0"* %823 to i64*
  %825 = bitcast %"class.v8::internal::ZoneVector"* %822 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %825, i8 0, i64 24, i1 false) #8, !alias.scope !329
  store i64 %820, i64* %824, align 8, !alias.scope !329
  %826 = getelementptr inbounds %"class.v8::internal::compiler::PropertyAccessInfo", %"class.v8::internal::compiler::PropertyAccessInfo"* %0, i64 0, i32 2, i32 0, i32 0
  %827 = getelementptr inbounds %"class.v8::internal::compiler::PropertyAccessInfo", %"class.v8::internal::compiler::PropertyAccessInfo"* %0, i64 0, i32 4, i32 0, i32 0, i32 2, i32 1
  %828 = bitcast %"struct.std::__1::__compressed_pair_elem.27"* %827 to i64*
  %829 = bitcast i64** %826 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %829, i8 0, i64 40, i1 false) #8, !alias.scope !329
  store i64 %820, i64* %828, align 8, !alias.scope !329
  %830 = getelementptr inbounds %"class.v8::internal::compiler::PropertyAccessInfo", %"class.v8::internal::compiler::PropertyAccessInfo"* %0, i64 0, i32 5, i32 0
  %831 = getelementptr inbounds %"class.v8::internal::compiler::PropertyAccessInfo", %"class.v8::internal::compiler::PropertyAccessInfo"* %0, i64 0, i32 8, i32 0
  %832 = bitcast i64** %830 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %832, i8 0, i64 17, i1 false) #8, !alias.scope !329
  store i64 1, i64* %831, align 8, !alias.scope !329
  %833 = getelementptr inbounds %"class.v8::internal::compiler::PropertyAccessInfo", %"class.v8::internal::compiler::PropertyAccessInfo"* %0, i64 0, i32 9, i32 0
  %834 = getelementptr inbounds %"class.v8::internal::compiler::PropertyAccessInfo", %"class.v8::internal::compiler::PropertyAccessInfo"* %0, i64 0, i32 11, i32 0
  %835 = bitcast i64** %833 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %835, i8 0, i64 16, i1 false) #8, !alias.scope !329
  store i64 -1, i64* %834, align 8, !alias.scope !329
  %836 = getelementptr inbounds %"class.v8::internal::compiler::PropertyAccessInfo", %"class.v8::internal::compiler::PropertyAccessInfo"* %0, i64 0, i32 12, i32 0
  store i64* null, i64** %836, align 8, !alias.scope !329
  br label %1615

837:                                              ; preds = %816
  %838 = getelementptr inbounds %"class.v8::internal::compiler::AccessInfoFactory", %"class.v8::internal::compiler::AccessInfoFactory"* %1, i64 0, i32 1
  %839 = load %"class.v8::internal::compiler::CompilationDependencies"*, %"class.v8::internal::compiler::CompilationDependencies"** %838, align 8
  %840 = call %"class.v8::internal::compiler::CompilationDependency"* @_ZNK2v88internal8compiler23CompilationDependencies41FieldRepresentationDependencyOffTheRecordERKNS1_6MapRefENS0_13InternalIndexE(%"class.v8::internal::compiler::CompilationDependencies"* %839, %"class.v8::internal::compiler::MapRef"* dereferenceable(16) %817, i64 %106) #8
  %841 = ptrtoint %"class.v8::internal::compiler::CompilationDependency"* %840 to i64
  %842 = getelementptr inbounds %"class.v8::internal::ZoneVector.22", %"class.v8::internal::ZoneVector.22"* %9, i64 0, i32 0, i32 0, i32 1
  %843 = load %"class.v8::internal::compiler::CompilationDependency"**, %"class.v8::internal::compiler::CompilationDependency"*** %842, align 8
  %844 = getelementptr inbounds %"class.v8::internal::ZoneVector.22", %"class.v8::internal::ZoneVector.22"* %9, i64 0, i32 0, i32 0, i32 2, i32 0, i32 0
  %845 = load %"class.v8::internal::compiler::CompilationDependency"**, %"class.v8::internal::compiler::CompilationDependency"*** %844, align 8
  %846 = icmp ult %"class.v8::internal::compiler::CompilationDependency"** %843, %845
  %847 = ptrtoint %"class.v8::internal::compiler::CompilationDependency"** %845 to i64
  br i1 %846, label %848, label %853

848:                                              ; preds = %837
  %849 = bitcast %"class.v8::internal::compiler::CompilationDependency"** %843 to i64*
  store i64 %841, i64* %849, align 8
  %850 = getelementptr inbounds %"class.v8::internal::compiler::CompilationDependency"*, %"class.v8::internal::compiler::CompilationDependency"** %843, i64 1
  %851 = ptrtoint %"class.v8::internal::compiler::CompilationDependency"** %850 to i64
  %852 = bitcast %"class.v8::internal::compiler::CompilationDependency"*** %842 to i64*
  store i64 %851, i64* %852, align 8
  br label %1078

853:                                              ; preds = %837
  %854 = ptrtoint %"class.v8::internal::compiler::CompilationDependency"** %843 to i64
  %855 = bitcast %"class.v8::internal::compiler::CompilationDependency"*** %842 to i64*
  %856 = bitcast %"class.v8::internal::ZoneVector.22"* %9 to i64*
  %857 = load i64, i64* %856, align 8
  %858 = sub i64 %854, %857
  %859 = ashr exact i64 %858, 3
  %860 = add nsw i64 %859, 1
  %861 = icmp ugt i64 %860, 268435455
  br i1 %861, label %862, label %864

862:                                              ; preds = %853
  %863 = bitcast %"class.v8::internal::ZoneVector.22"* %9 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %863) #12
  unreachable

864:                                              ; preds = %853
  %865 = bitcast %"class.v8::internal::compiler::CompilationDependency"*** %844 to i64*
  %866 = sub i64 %847, %857
  %867 = ashr exact i64 %866, 3
  %868 = icmp ult i64 %867, 134217727
  br i1 %868, label %869, label %874

869:                                              ; preds = %864
  %870 = ashr exact i64 %866, 2
  %871 = icmp ult i64 %870, %860
  %872 = select i1 %871, i64 %860, i64 %870
  %873 = icmp eq i64 %872, 0
  br i1 %873, label %892, label %874

874:                                              ; preds = %869, %864
  %875 = phi i64 [ %872, %869 ], [ 268435455, %864 ]
  %876 = getelementptr inbounds %"class.v8::internal::ZoneVector.22", %"class.v8::internal::ZoneVector.22"* %9, i64 0, i32 0, i32 0, i32 2, i32 1, i32 0, i32 0
  %877 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %876, align 8
  %878 = shl i64 %875, 3
  %879 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %877, i64 0, i32 2
  %880 = load i64, i64* %879, align 8
  %881 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %877, i64 0, i32 3
  %882 = load i64, i64* %881, align 8
  %883 = sub i64 %882, %880
  %884 = icmp ugt i64 %878, %883
  br i1 %884, label %885, label %887, !prof !2

885:                                              ; preds = %874
  %886 = call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %877, i64 %878) #8
  br label %889

887:                                              ; preds = %874
  %888 = add i64 %880, %878
  store i64 %888, i64* %879, align 8
  br label %889

889:                                              ; preds = %887, %885
  %890 = phi i64 [ %886, %885 ], [ %880, %887 ]
  %891 = inttoptr i64 %890 to %"class.v8::internal::compiler::CompilationDependency"**
  br label %892

892:                                              ; preds = %889, %869
  %893 = phi i64 [ %875, %889 ], [ 0, %869 ]
  %894 = phi %"class.v8::internal::compiler::CompilationDependency"** [ %891, %889 ], [ null, %869 ]
  %895 = getelementptr inbounds %"class.v8::internal::compiler::CompilationDependency"*, %"class.v8::internal::compiler::CompilationDependency"** %894, i64 %859
  %896 = getelementptr inbounds %"class.v8::internal::compiler::CompilationDependency"*, %"class.v8::internal::compiler::CompilationDependency"** %894, i64 %893
  %897 = ptrtoint %"class.v8::internal::compiler::CompilationDependency"** %896 to i64
  %898 = bitcast %"class.v8::internal::compiler::CompilationDependency"** %895 to i64*
  store i64 %841, i64* %898, align 8
  %899 = getelementptr inbounds %"class.v8::internal::compiler::CompilationDependency"*, %"class.v8::internal::compiler::CompilationDependency"** %895, i64 1
  %900 = ptrtoint %"class.v8::internal::compiler::CompilationDependency"** %899 to i64
  %901 = getelementptr inbounds %"class.v8::internal::ZoneVector.22", %"class.v8::internal::ZoneVector.22"* %9, i64 0, i32 0, i32 0, i32 0
  %902 = load %"class.v8::internal::compiler::CompilationDependency"**, %"class.v8::internal::compiler::CompilationDependency"*** %901, align 8
  %903 = ptrtoint %"class.v8::internal::compiler::CompilationDependency"** %902 to i64
  %904 = load %"class.v8::internal::compiler::CompilationDependency"**, %"class.v8::internal::compiler::CompilationDependency"*** %842, align 8
  %905 = icmp eq %"class.v8::internal::compiler::CompilationDependency"** %904, %902
  br i1 %905, label %1075, label %906

906:                                              ; preds = %892
  %907 = getelementptr %"class.v8::internal::compiler::CompilationDependency"*, %"class.v8::internal::compiler::CompilationDependency"** %904, i64 -1
  %908 = ptrtoint %"class.v8::internal::compiler::CompilationDependency"** %907 to i64
  %909 = sub i64 %908, %903
  %910 = lshr i64 %909, 3
  %911 = add nuw nsw i64 %910, 1
  %912 = icmp ult i64 %911, 4
  br i1 %912, label %1005, label %913

913:                                              ; preds = %906
  %914 = getelementptr %"class.v8::internal::compiler::CompilationDependency"*, %"class.v8::internal::compiler::CompilationDependency"** %904, i64 -1
  %915 = ptrtoint %"class.v8::internal::compiler::CompilationDependency"** %914 to i64
  %916 = sub i64 %915, %903
  %917 = lshr i64 %916, 3
  %918 = xor i64 %917, -1
  %919 = add nsw i64 %859, %918
  %920 = getelementptr %"class.v8::internal::compiler::CompilationDependency"*, %"class.v8::internal::compiler::CompilationDependency"** %894, i64 %919
  %921 = xor i64 %917, -1
  %922 = getelementptr %"class.v8::internal::compiler::CompilationDependency"*, %"class.v8::internal::compiler::CompilationDependency"** %904, i64 %921
  %923 = icmp ult %"class.v8::internal::compiler::CompilationDependency"** %920, %904
  %924 = icmp ult %"class.v8::internal::compiler::CompilationDependency"** %922, %895
  %925 = and i1 %923, %924
  br i1 %925, label %1005, label %926

926:                                              ; preds = %913
  %927 = and i64 %911, 4611686018427387900
  %928 = sub nsw i64 0, %927
  %929 = getelementptr %"class.v8::internal::compiler::CompilationDependency"*, %"class.v8::internal::compiler::CompilationDependency"** %895, i64 %928
  %930 = sub nsw i64 0, %927
  %931 = getelementptr %"class.v8::internal::compiler::CompilationDependency"*, %"class.v8::internal::compiler::CompilationDependency"** %904, i64 %930
  %932 = add nsw i64 %927, -4
  %933 = lshr exact i64 %932, 2
  %934 = add nuw nsw i64 %933, 1
  %935 = and i64 %934, 1
  %936 = icmp eq i64 %932, 0
  br i1 %936, label %981, label %937

937:                                              ; preds = %926
  %938 = sub nuw nsw i64 %934, %935
  %939 = getelementptr %"class.v8::internal::compiler::CompilationDependency"*, %"class.v8::internal::compiler::CompilationDependency"** %895, i64 -1
  %940 = getelementptr %"class.v8::internal::compiler::CompilationDependency"*, %"class.v8::internal::compiler::CompilationDependency"** %904, i64 -1
  %941 = getelementptr %"class.v8::internal::compiler::CompilationDependency"*, %"class.v8::internal::compiler::CompilationDependency"** %895, i64 -1
  %942 = getelementptr %"class.v8::internal::compiler::CompilationDependency"*, %"class.v8::internal::compiler::CompilationDependency"** %904, i64 -1
  br label %943

943:                                              ; preds = %943, %937
  %944 = phi i64 [ 0, %937 ], [ %978, %943 ]
  %945 = phi i64 [ %938, %937 ], [ %979, %943 ]
  %946 = sub i64 0, %944
  %947 = sub i64 0, %944
  %948 = getelementptr inbounds %"class.v8::internal::compiler::CompilationDependency"*, %"class.v8::internal::compiler::CompilationDependency"** %939, i64 %946
  %949 = getelementptr inbounds %"class.v8::internal::compiler::CompilationDependency"*, %"class.v8::internal::compiler::CompilationDependency"** %940, i64 %947
  %950 = getelementptr inbounds %"class.v8::internal::compiler::CompilationDependency"*, %"class.v8::internal::compiler::CompilationDependency"** %949, i64 -1
  %951 = bitcast %"class.v8::internal::compiler::CompilationDependency"** %950 to <2 x i64>*
  %952 = load <2 x i64>, <2 x i64>* %951, align 8, !alias.scope !332
  %953 = getelementptr inbounds %"class.v8::internal::compiler::CompilationDependency"*, %"class.v8::internal::compiler::CompilationDependency"** %949, i64 -2
  %954 = getelementptr inbounds %"class.v8::internal::compiler::CompilationDependency"*, %"class.v8::internal::compiler::CompilationDependency"** %953, i64 -1
  %955 = bitcast %"class.v8::internal::compiler::CompilationDependency"** %954 to <2 x i64>*
  %956 = load <2 x i64>, <2 x i64>* %955, align 8, !alias.scope !332
  %957 = getelementptr inbounds %"class.v8::internal::compiler::CompilationDependency"*, %"class.v8::internal::compiler::CompilationDependency"** %948, i64 -1
  %958 = bitcast %"class.v8::internal::compiler::CompilationDependency"** %957 to <2 x i64>*
  store <2 x i64> %952, <2 x i64>* %958, align 8, !alias.scope !335, !noalias !332
  %959 = getelementptr inbounds %"class.v8::internal::compiler::CompilationDependency"*, %"class.v8::internal::compiler::CompilationDependency"** %948, i64 -2
  %960 = getelementptr inbounds %"class.v8::internal::compiler::CompilationDependency"*, %"class.v8::internal::compiler::CompilationDependency"** %959, i64 -1
  %961 = bitcast %"class.v8::internal::compiler::CompilationDependency"** %960 to <2 x i64>*
  store <2 x i64> %956, <2 x i64>* %961, align 8, !alias.scope !335, !noalias !332
  %962 = sub nuw nsw i64 -4, %944
  %963 = sub nuw nsw i64 -4, %944
  %964 = getelementptr inbounds %"class.v8::internal::compiler::CompilationDependency"*, %"class.v8::internal::compiler::CompilationDependency"** %941, i64 %962
  %965 = getelementptr inbounds %"class.v8::internal::compiler::CompilationDependency"*, %"class.v8::internal::compiler::CompilationDependency"** %942, i64 %963
  %966 = getelementptr inbounds %"class.v8::internal::compiler::CompilationDependency"*, %"class.v8::internal::compiler::CompilationDependency"** %965, i64 -1
  %967 = bitcast %"class.v8::internal::compiler::CompilationDependency"** %966 to <2 x i64>*
  %968 = load <2 x i64>, <2 x i64>* %967, align 8, !alias.scope !332
  %969 = getelementptr inbounds %"class.v8::internal::compiler::CompilationDependency"*, %"class.v8::internal::compiler::CompilationDependency"** %965, i64 -2
  %970 = getelementptr inbounds %"class.v8::internal::compiler::CompilationDependency"*, %"class.v8::internal::compiler::CompilationDependency"** %969, i64 -1
  %971 = bitcast %"class.v8::internal::compiler::CompilationDependency"** %970 to <2 x i64>*
  %972 = load <2 x i64>, <2 x i64>* %971, align 8, !alias.scope !332
  %973 = getelementptr inbounds %"class.v8::internal::compiler::CompilationDependency"*, %"class.v8::internal::compiler::CompilationDependency"** %964, i64 -1
  %974 = bitcast %"class.v8::internal::compiler::CompilationDependency"** %973 to <2 x i64>*
  store <2 x i64> %968, <2 x i64>* %974, align 8, !alias.scope !335, !noalias !332
  %975 = getelementptr inbounds %"class.v8::internal::compiler::CompilationDependency"*, %"class.v8::internal::compiler::CompilationDependency"** %964, i64 -2
  %976 = getelementptr inbounds %"class.v8::internal::compiler::CompilationDependency"*, %"class.v8::internal::compiler::CompilationDependency"** %975, i64 -1
  %977 = bitcast %"class.v8::internal::compiler::CompilationDependency"** %976 to <2 x i64>*
  store <2 x i64> %972, <2 x i64>* %977, align 8, !alias.scope !335, !noalias !332
  %978 = add i64 %944, 8
  %979 = add i64 %945, -2
  %980 = icmp eq i64 %979, 0
  br i1 %980, label %981, label %943, !llvm.loop !337

981:                                              ; preds = %943, %926
  %982 = phi i64 [ 0, %926 ], [ %978, %943 ]
  %983 = icmp eq i64 %935, 0
  br i1 %983, label %1003, label %984

984:                                              ; preds = %981
  %985 = sub i64 0, %982
  %986 = getelementptr %"class.v8::internal::compiler::CompilationDependency"*, %"class.v8::internal::compiler::CompilationDependency"** %895, i64 -1
  %987 = sub i64 0, %982
  %988 = getelementptr %"class.v8::internal::compiler::CompilationDependency"*, %"class.v8::internal::compiler::CompilationDependency"** %904, i64 -1
  %989 = getelementptr inbounds %"class.v8::internal::compiler::CompilationDependency"*, %"class.v8::internal::compiler::CompilationDependency"** %986, i64 %985
  %990 = getelementptr inbounds %"class.v8::internal::compiler::CompilationDependency"*, %"class.v8::internal::compiler::CompilationDependency"** %988, i64 %987
  %991 = getelementptr inbounds %"class.v8::internal::compiler::CompilationDependency"*, %"class.v8::internal::compiler::CompilationDependency"** %990, i64 -1
  %992 = bitcast %"class.v8::internal::compiler::CompilationDependency"** %991 to <2 x i64>*
  %993 = load <2 x i64>, <2 x i64>* %992, align 8, !alias.scope !332
  %994 = getelementptr inbounds %"class.v8::internal::compiler::CompilationDependency"*, %"class.v8::internal::compiler::CompilationDependency"** %990, i64 -2
  %995 = getelementptr inbounds %"class.v8::internal::compiler::CompilationDependency"*, %"class.v8::internal::compiler::CompilationDependency"** %994, i64 -1
  %996 = bitcast %"class.v8::internal::compiler::CompilationDependency"** %995 to <2 x i64>*
  %997 = load <2 x i64>, <2 x i64>* %996, align 8, !alias.scope !332
  %998 = getelementptr inbounds %"class.v8::internal::compiler::CompilationDependency"*, %"class.v8::internal::compiler::CompilationDependency"** %989, i64 -1
  %999 = bitcast %"class.v8::internal::compiler::CompilationDependency"** %998 to <2 x i64>*
  store <2 x i64> %993, <2 x i64>* %999, align 8, !alias.scope !335, !noalias !332
  %1000 = getelementptr inbounds %"class.v8::internal::compiler::CompilationDependency"*, %"class.v8::internal::compiler::CompilationDependency"** %989, i64 -2
  %1001 = getelementptr inbounds %"class.v8::internal::compiler::CompilationDependency"*, %"class.v8::internal::compiler::CompilationDependency"** %1000, i64 -1
  %1002 = bitcast %"class.v8::internal::compiler::CompilationDependency"** %1001 to <2 x i64>*
  store <2 x i64> %997, <2 x i64>* %1002, align 8, !alias.scope !335, !noalias !332
  br label %1003

1003:                                             ; preds = %981, %984
  %1004 = icmp eq i64 %911, %927
  br i1 %1004, label %1075, label %1005

1005:                                             ; preds = %1003, %913, %906
  %1006 = phi %"class.v8::internal::compiler::CompilationDependency"** [ %895, %913 ], [ %895, %906 ], [ %929, %1003 ]
  %1007 = phi %"class.v8::internal::compiler::CompilationDependency"** [ %904, %913 ], [ %904, %906 ], [ %931, %1003 ]
  %1008 = getelementptr %"class.v8::internal::compiler::CompilationDependency"*, %"class.v8::internal::compiler::CompilationDependency"** %1007, i64 -1
  %1009 = ptrtoint %"class.v8::internal::compiler::CompilationDependency"** %1008 to i64
  %1010 = sub i64 %1009, %903
  %1011 = lshr i64 %1010, 3
  %1012 = add nuw nsw i64 %1011, 1
  %1013 = and i64 %1012, 7
  %1014 = icmp eq i64 %1013, 0
  br i1 %1014, label %1026, label %1015

1015:                                             ; preds = %1005, %1015
  %1016 = phi %"class.v8::internal::compiler::CompilationDependency"** [ %1019, %1015 ], [ %1006, %1005 ]
  %1017 = phi %"class.v8::internal::compiler::CompilationDependency"** [ %1020, %1015 ], [ %1007, %1005 ]
  %1018 = phi i64 [ %1024, %1015 ], [ %1013, %1005 ]
  %1019 = getelementptr inbounds %"class.v8::internal::compiler::CompilationDependency"*, %"class.v8::internal::compiler::CompilationDependency"** %1016, i64 -1
  %1020 = getelementptr inbounds %"class.v8::internal::compiler::CompilationDependency"*, %"class.v8::internal::compiler::CompilationDependency"** %1017, i64 -1
  %1021 = bitcast %"class.v8::internal::compiler::CompilationDependency"** %1020 to i64*
  %1022 = load i64, i64* %1021, align 8
  %1023 = bitcast %"class.v8::internal::compiler::CompilationDependency"** %1019 to i64*
  store i64 %1022, i64* %1023, align 8
  %1024 = add i64 %1018, -1
  %1025 = icmp eq i64 %1024, 0
  br i1 %1025, label %1026, label %1015, !llvm.loop !338

1026:                                             ; preds = %1015, %1005
  %1027 = phi %"class.v8::internal::compiler::CompilationDependency"** [ undef, %1005 ], [ %1019, %1015 ]
  %1028 = phi %"class.v8::internal::compiler::CompilationDependency"** [ %1006, %1005 ], [ %1019, %1015 ]
  %1029 = phi %"class.v8::internal::compiler::CompilationDependency"** [ %1007, %1005 ], [ %1020, %1015 ]
  %1030 = icmp ult i64 %1010, 56
  br i1 %1030, label %1075, label %1031

1031:                                             ; preds = %1026, %1031
  %1032 = phi %"class.v8::internal::compiler::CompilationDependency"** [ %1069, %1031 ], [ %1028, %1026 ]
  %1033 = phi %"class.v8::internal::compiler::CompilationDependency"** [ %1070, %1031 ], [ %1029, %1026 ]
  %1034 = getelementptr inbounds %"class.v8::internal::compiler::CompilationDependency"*, %"class.v8::internal::compiler::CompilationDependency"** %1032, i64 -1
  %1035 = getelementptr inbounds %"class.v8::internal::compiler::CompilationDependency"*, %"class.v8::internal::compiler::CompilationDependency"** %1033, i64 -1
  %1036 = bitcast %"class.v8::internal::compiler::CompilationDependency"** %1035 to i64*
  %1037 = load i64, i64* %1036, align 8
  %1038 = bitcast %"class.v8::internal::compiler::CompilationDependency"** %1034 to i64*
  store i64 %1037, i64* %1038, align 8
  %1039 = getelementptr inbounds %"class.v8::internal::compiler::CompilationDependency"*, %"class.v8::internal::compiler::CompilationDependency"** %1032, i64 -2
  %1040 = getelementptr inbounds %"class.v8::internal::compiler::CompilationDependency"*, %"class.v8::internal::compiler::CompilationDependency"** %1033, i64 -2
  %1041 = bitcast %"class.v8::internal::compiler::CompilationDependency"** %1040 to i64*
  %1042 = load i64, i64* %1041, align 8
  %1043 = bitcast %"class.v8::internal::compiler::CompilationDependency"** %1039 to i64*
  store i64 %1042, i64* %1043, align 8
  %1044 = getelementptr inbounds %"class.v8::internal::compiler::CompilationDependency"*, %"class.v8::internal::compiler::CompilationDependency"** %1032, i64 -3
  %1045 = getelementptr inbounds %"class.v8::internal::compiler::CompilationDependency"*, %"class.v8::internal::compiler::CompilationDependency"** %1033, i64 -3
  %1046 = bitcast %"class.v8::internal::compiler::CompilationDependency"** %1045 to i64*
  %1047 = load i64, i64* %1046, align 8
  %1048 = bitcast %"class.v8::internal::compiler::CompilationDependency"** %1044 to i64*
  store i64 %1047, i64* %1048, align 8
  %1049 = getelementptr inbounds %"class.v8::internal::compiler::CompilationDependency"*, %"class.v8::internal::compiler::CompilationDependency"** %1032, i64 -4
  %1050 = getelementptr inbounds %"class.v8::internal::compiler::CompilationDependency"*, %"class.v8::internal::compiler::CompilationDependency"** %1033, i64 -4
  %1051 = bitcast %"class.v8::internal::compiler::CompilationDependency"** %1050 to i64*
  %1052 = load i64, i64* %1051, align 8
  %1053 = bitcast %"class.v8::internal::compiler::CompilationDependency"** %1049 to i64*
  store i64 %1052, i64* %1053, align 8
  %1054 = getelementptr inbounds %"class.v8::internal::compiler::CompilationDependency"*, %"class.v8::internal::compiler::CompilationDependency"** %1032, i64 -5
  %1055 = getelementptr inbounds %"class.v8::internal::compiler::CompilationDependency"*, %"class.v8::internal::compiler::CompilationDependency"** %1033, i64 -5
  %1056 = bitcast %"class.v8::internal::compiler::CompilationDependency"** %1055 to i64*
  %1057 = load i64, i64* %1056, align 8
  %1058 = bitcast %"class.v8::internal::compiler::CompilationDependency"** %1054 to i64*
  store i64 %1057, i64* %1058, align 8
  %1059 = getelementptr inbounds %"class.v8::internal::compiler::CompilationDependency"*, %"class.v8::internal::compiler::CompilationDependency"** %1032, i64 -6
  %1060 = getelementptr inbounds %"class.v8::internal::compiler::CompilationDependency"*, %"class.v8::internal::compiler::CompilationDependency"** %1033, i64 -6
  %1061 = bitcast %"class.v8::internal::compiler::CompilationDependency"** %1060 to i64*
  %1062 = load i64, i64* %1061, align 8
  %1063 = bitcast %"class.v8::internal::compiler::CompilationDependency"** %1059 to i64*
  store i64 %1062, i64* %1063, align 8
  %1064 = getelementptr inbounds %"class.v8::internal::compiler::CompilationDependency"*, %"class.v8::internal::compiler::CompilationDependency"** %1032, i64 -7
  %1065 = getelementptr inbounds %"class.v8::internal::compiler::CompilationDependency"*, %"class.v8::internal::compiler::CompilationDependency"** %1033, i64 -7
  %1066 = bitcast %"class.v8::internal::compiler::CompilationDependency"** %1065 to i64*
  %1067 = load i64, i64* %1066, align 8
  %1068 = bitcast %"class.v8::internal::compiler::CompilationDependency"** %1064 to i64*
  store i64 %1067, i64* %1068, align 8
  %1069 = getelementptr inbounds %"class.v8::internal::compiler::CompilationDependency"*, %"class.v8::internal::compiler::CompilationDependency"** %1032, i64 -8
  %1070 = getelementptr inbounds %"class.v8::internal::compiler::CompilationDependency"*, %"class.v8::internal::compiler::CompilationDependency"** %1033, i64 -8
  %1071 = bitcast %"class.v8::internal::compiler::CompilationDependency"** %1070 to i64*
  %1072 = load i64, i64* %1071, align 8
  %1073 = bitcast %"class.v8::internal::compiler::CompilationDependency"** %1069 to i64*
  store i64 %1072, i64* %1073, align 8
  %1074 = icmp eq %"class.v8::internal::compiler::CompilationDependency"** %1070, %902
  br i1 %1074, label %1075, label %1031, !llvm.loop !339

1075:                                             ; preds = %1026, %1031, %1003, %892
  %1076 = phi %"class.v8::internal::compiler::CompilationDependency"** [ %895, %892 ], [ %929, %1003 ], [ %1027, %1026 ], [ %1069, %1031 ]
  %1077 = ptrtoint %"class.v8::internal::compiler::CompilationDependency"** %1076 to i64
  store i64 %1077, i64* %856, align 8
  store i64 %900, i64* %855, align 8
  store i64 %897, i64* %865, align 8
  br label %1078

1078:                                             ; preds = %848, %1075
  %1079 = bitcast %"class.v8::internal::Handle<v8::internal::FieldType>::ObjectRef"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %1079) #8
  %1080 = load i64, i64* %792, align 8
  %1081 = getelementptr inbounds %"class.v8::internal::Handle<v8::internal::FieldType>::ObjectRef", %"class.v8::internal::Handle<v8::internal::FieldType>::ObjectRef"* %10, i64 0, i32 0, i32 0, i32 0, i32 0
  store i64 %1080, i64* %1081, align 8
  %1082 = getelementptr inbounds %"class.v8::internal::Handle<v8::internal::FieldType>::ObjectRef", %"class.v8::internal::Handle<v8::internal::FieldType>::ObjectRef"* %10, i64 0, i32 0
  %1083 = call zeroext i1 @_ZNK2v88internal9FieldType7IsClassEv(%"class.v8::internal::FieldType"* nonnull %1082) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1079) #8
  br i1 %1083, label %1084, label %1359

1084:                                             ; preds = %1078
  %1085 = load %"class.v8::internal::compiler::CompilationDependencies"*, %"class.v8::internal::compiler::CompilationDependencies"** %838, align 8
  %1086 = call %"class.v8::internal::compiler::CompilationDependency"* @_ZNK2v88internal8compiler23CompilationDependencies31FieldTypeDependencyOffTheRecordERKNS1_6MapRefENS0_13InternalIndexE(%"class.v8::internal::compiler::CompilationDependencies"* %1085, %"class.v8::internal::compiler::MapRef"* dereferenceable(16) %817, i64 %106) #8
  %1087 = ptrtoint %"class.v8::internal::compiler::CompilationDependency"* %1086 to i64
  %1088 = load %"class.v8::internal::compiler::CompilationDependency"**, %"class.v8::internal::compiler::CompilationDependency"*** %842, align 8
  %1089 = load %"class.v8::internal::compiler::CompilationDependency"**, %"class.v8::internal::compiler::CompilationDependency"*** %844, align 8
  %1090 = icmp ult %"class.v8::internal::compiler::CompilationDependency"** %1088, %1089
  %1091 = ptrtoint %"class.v8::internal::compiler::CompilationDependency"** %1089 to i64
  br i1 %1090, label %1092, label %1097

1092:                                             ; preds = %1084
  %1093 = bitcast %"class.v8::internal::compiler::CompilationDependency"** %1088 to i64*
  store i64 %1087, i64* %1093, align 8
  %1094 = getelementptr inbounds %"class.v8::internal::compiler::CompilationDependency"*, %"class.v8::internal::compiler::CompilationDependency"** %1088, i64 1
  %1095 = ptrtoint %"class.v8::internal::compiler::CompilationDependency"** %1094 to i64
  %1096 = bitcast %"class.v8::internal::compiler::CompilationDependency"*** %842 to i64*
  store i64 %1095, i64* %1096, align 8
  br label %1322

1097:                                             ; preds = %1084
  %1098 = ptrtoint %"class.v8::internal::compiler::CompilationDependency"** %1088 to i64
  %1099 = bitcast %"class.v8::internal::compiler::CompilationDependency"*** %842 to i64*
  %1100 = bitcast %"class.v8::internal::ZoneVector.22"* %9 to i64*
  %1101 = load i64, i64* %1100, align 8
  %1102 = sub i64 %1098, %1101
  %1103 = ashr exact i64 %1102, 3
  %1104 = add nsw i64 %1103, 1
  %1105 = icmp ugt i64 %1104, 268435455
  br i1 %1105, label %1106, label %1108

1106:                                             ; preds = %1097
  %1107 = bitcast %"class.v8::internal::ZoneVector.22"* %9 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %1107) #12
  unreachable

1108:                                             ; preds = %1097
  %1109 = bitcast %"class.v8::internal::compiler::CompilationDependency"*** %844 to i64*
  %1110 = sub i64 %1091, %1101
  %1111 = ashr exact i64 %1110, 3
  %1112 = icmp ult i64 %1111, 134217727
  br i1 %1112, label %1113, label %1118

1113:                                             ; preds = %1108
  %1114 = ashr exact i64 %1110, 2
  %1115 = icmp ult i64 %1114, %1104
  %1116 = select i1 %1115, i64 %1104, i64 %1114
  %1117 = icmp eq i64 %1116, 0
  br i1 %1117, label %1136, label %1118

1118:                                             ; preds = %1113, %1108
  %1119 = phi i64 [ %1116, %1113 ], [ 268435455, %1108 ]
  %1120 = getelementptr inbounds %"class.v8::internal::ZoneVector.22", %"class.v8::internal::ZoneVector.22"* %9, i64 0, i32 0, i32 0, i32 2, i32 1, i32 0, i32 0
  %1121 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %1120, align 8
  %1122 = shl i64 %1119, 3
  %1123 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %1121, i64 0, i32 2
  %1124 = load i64, i64* %1123, align 8
  %1125 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %1121, i64 0, i32 3
  %1126 = load i64, i64* %1125, align 8
  %1127 = sub i64 %1126, %1124
  %1128 = icmp ugt i64 %1122, %1127
  br i1 %1128, label %1129, label %1131, !prof !2

1129:                                             ; preds = %1118
  %1130 = call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %1121, i64 %1122) #8
  br label %1133

1131:                                             ; preds = %1118
  %1132 = add i64 %1124, %1122
  store i64 %1132, i64* %1123, align 8
  br label %1133

1133:                                             ; preds = %1131, %1129
  %1134 = phi i64 [ %1130, %1129 ], [ %1124, %1131 ]
  %1135 = inttoptr i64 %1134 to %"class.v8::internal::compiler::CompilationDependency"**
  br label %1136

1136:                                             ; preds = %1133, %1113
  %1137 = phi i64 [ %1119, %1133 ], [ 0, %1113 ]
  %1138 = phi %"class.v8::internal::compiler::CompilationDependency"** [ %1135, %1133 ], [ null, %1113 ]
  %1139 = getelementptr inbounds %"class.v8::internal::compiler::CompilationDependency"*, %"class.v8::internal::compiler::CompilationDependency"** %1138, i64 %1103
  %1140 = getelementptr inbounds %"class.v8::internal::compiler::CompilationDependency"*, %"class.v8::internal::compiler::CompilationDependency"** %1138, i64 %1137
  %1141 = ptrtoint %"class.v8::internal::compiler::CompilationDependency"** %1140 to i64
  %1142 = bitcast %"class.v8::internal::compiler::CompilationDependency"** %1139 to i64*
  store i64 %1087, i64* %1142, align 8
  %1143 = getelementptr inbounds %"class.v8::internal::compiler::CompilationDependency"*, %"class.v8::internal::compiler::CompilationDependency"** %1139, i64 1
  %1144 = ptrtoint %"class.v8::internal::compiler::CompilationDependency"** %1143 to i64
  %1145 = getelementptr inbounds %"class.v8::internal::ZoneVector.22", %"class.v8::internal::ZoneVector.22"* %9, i64 0, i32 0, i32 0, i32 0
  %1146 = load %"class.v8::internal::compiler::CompilationDependency"**, %"class.v8::internal::compiler::CompilationDependency"*** %1145, align 8
  %1147 = ptrtoint %"class.v8::internal::compiler::CompilationDependency"** %1146 to i64
  %1148 = load %"class.v8::internal::compiler::CompilationDependency"**, %"class.v8::internal::compiler::CompilationDependency"*** %842, align 8
  %1149 = icmp eq %"class.v8::internal::compiler::CompilationDependency"** %1148, %1146
  br i1 %1149, label %1319, label %1150

1150:                                             ; preds = %1136
  %1151 = getelementptr %"class.v8::internal::compiler::CompilationDependency"*, %"class.v8::internal::compiler::CompilationDependency"** %1148, i64 -1
  %1152 = ptrtoint %"class.v8::internal::compiler::CompilationDependency"** %1151 to i64
  %1153 = sub i64 %1152, %1147
  %1154 = lshr i64 %1153, 3
  %1155 = add nuw nsw i64 %1154, 1
  %1156 = icmp ult i64 %1155, 4
  br i1 %1156, label %1249, label %1157

1157:                                             ; preds = %1150
  %1158 = getelementptr %"class.v8::internal::compiler::CompilationDependency"*, %"class.v8::internal::compiler::CompilationDependency"** %1148, i64 -1
  %1159 = ptrtoint %"class.v8::internal::compiler::CompilationDependency"** %1158 to i64
  %1160 = sub i64 %1159, %1147
  %1161 = lshr i64 %1160, 3
  %1162 = xor i64 %1161, -1
  %1163 = add nsw i64 %1103, %1162
  %1164 = getelementptr %"class.v8::internal::compiler::CompilationDependency"*, %"class.v8::internal::compiler::CompilationDependency"** %1138, i64 %1163
  %1165 = xor i64 %1161, -1
  %1166 = getelementptr %"class.v8::internal::compiler::CompilationDependency"*, %"class.v8::internal::compiler::CompilationDependency"** %1148, i64 %1165
  %1167 = icmp ult %"class.v8::internal::compiler::CompilationDependency"** %1164, %1148
  %1168 = icmp ult %"class.v8::internal::compiler::CompilationDependency"** %1166, %1139
  %1169 = and i1 %1167, %1168
  br i1 %1169, label %1249, label %1170

1170:                                             ; preds = %1157
  %1171 = and i64 %1155, 4611686018427387900
  %1172 = sub nsw i64 0, %1171
  %1173 = getelementptr %"class.v8::internal::compiler::CompilationDependency"*, %"class.v8::internal::compiler::CompilationDependency"** %1139, i64 %1172
  %1174 = sub nsw i64 0, %1171
  %1175 = getelementptr %"class.v8::internal::compiler::CompilationDependency"*, %"class.v8::internal::compiler::CompilationDependency"** %1148, i64 %1174
  %1176 = add nsw i64 %1171, -4
  %1177 = lshr exact i64 %1176, 2
  %1178 = add nuw nsw i64 %1177, 1
  %1179 = and i64 %1178, 1
  %1180 = icmp eq i64 %1176, 0
  br i1 %1180, label %1225, label %1181

1181:                                             ; preds = %1170
  %1182 = sub nuw nsw i64 %1178, %1179
  %1183 = getelementptr %"class.v8::internal::compiler::CompilationDependency"*, %"class.v8::internal::compiler::CompilationDependency"** %1139, i64 -1
  %1184 = getelementptr %"class.v8::internal::compiler::CompilationDependency"*, %"class.v8::internal::compiler::CompilationDependency"** %1148, i64 -1
  %1185 = getelementptr %"class.v8::internal::compiler::CompilationDependency"*, %"class.v8::internal::compiler::CompilationDependency"** %1139, i64 -1
  %1186 = getelementptr %"class.v8::internal::compiler::CompilationDependency"*, %"class.v8::internal::compiler::CompilationDependency"** %1148, i64 -1
  br label %1187

1187:                                             ; preds = %1187, %1181
  %1188 = phi i64 [ 0, %1181 ], [ %1222, %1187 ]
  %1189 = phi i64 [ %1182, %1181 ], [ %1223, %1187 ]
  %1190 = sub i64 0, %1188
  %1191 = sub i64 0, %1188
  %1192 = getelementptr inbounds %"class.v8::internal::compiler::CompilationDependency"*, %"class.v8::internal::compiler::CompilationDependency"** %1183, i64 %1190
  %1193 = getelementptr inbounds %"class.v8::internal::compiler::CompilationDependency"*, %"class.v8::internal::compiler::CompilationDependency"** %1184, i64 %1191
  %1194 = getelementptr inbounds %"class.v8::internal::compiler::CompilationDependency"*, %"class.v8::internal::compiler::CompilationDependency"** %1193, i64 -1
  %1195 = bitcast %"class.v8::internal::compiler::CompilationDependency"** %1194 to <2 x i64>*
  %1196 = load <2 x i64>, <2 x i64>* %1195, align 8, !alias.scope !340
  %1197 = getelementptr inbounds %"class.v8::internal::compiler::CompilationDependency"*, %"class.v8::internal::compiler::CompilationDependency"** %1193, i64 -2
  %1198 = getelementptr inbounds %"class.v8::internal::compiler::CompilationDependency"*, %"class.v8::internal::compiler::CompilationDependency"** %1197, i64 -1
  %1199 = bitcast %"class.v8::internal::compiler::CompilationDependency"** %1198 to <2 x i64>*
  %1200 = load <2 x i64>, <2 x i64>* %1199, align 8, !alias.scope !340
  %1201 = getelementptr inbounds %"class.v8::internal::compiler::CompilationDependency"*, %"class.v8::internal::compiler::CompilationDependency"** %1192, i64 -1
  %1202 = bitcast %"class.v8::internal::compiler::CompilationDependency"** %1201 to <2 x i64>*
  store <2 x i64> %1196, <2 x i64>* %1202, align 8, !alias.scope !343, !noalias !340
  %1203 = getelementptr inbounds %"class.v8::internal::compiler::CompilationDependency"*, %"class.v8::internal::compiler::CompilationDependency"** %1192, i64 -2
  %1204 = getelementptr inbounds %"class.v8::internal::compiler::CompilationDependency"*, %"class.v8::internal::compiler::CompilationDependency"** %1203, i64 -1
  %1205 = bitcast %"class.v8::internal::compiler::CompilationDependency"** %1204 to <2 x i64>*
  store <2 x i64> %1200, <2 x i64>* %1205, align 8, !alias.scope !343, !noalias !340
  %1206 = sub nuw nsw i64 -4, %1188
  %1207 = sub nuw nsw i64 -4, %1188
  %1208 = getelementptr inbounds %"class.v8::internal::compiler::CompilationDependency"*, %"class.v8::internal::compiler::CompilationDependency"** %1185, i64 %1206
  %1209 = getelementptr inbounds %"class.v8::internal::compiler::CompilationDependency"*, %"class.v8::internal::compiler::CompilationDependency"** %1186, i64 %1207
  %1210 = getelementptr inbounds %"class.v8::internal::compiler::CompilationDependency"*, %"class.v8::internal::compiler::CompilationDependency"** %1209, i64 -1
  %1211 = bitcast %"class.v8::internal::compiler::CompilationDependency"** %1210 to <2 x i64>*
  %1212 = load <2 x i64>, <2 x i64>* %1211, align 8, !alias.scope !340
  %1213 = getelementptr inbounds %"class.v8::internal::compiler::CompilationDependency"*, %"class.v8::internal::compiler::CompilationDependency"** %1209, i64 -2
  %1214 = getelementptr inbounds %"class.v8::internal::compiler::CompilationDependency"*, %"class.v8::internal::compiler::CompilationDependency"** %1213, i64 -1
  %1215 = bitcast %"class.v8::internal::compiler::CompilationDependency"** %1214 to <2 x i64>*
  %1216 = load <2 x i64>, <2 x i64>* %1215, align 8, !alias.scope !340
  %1217 = getelementptr inbounds %"class.v8::internal::compiler::CompilationDependency"*, %"class.v8::internal::compiler::CompilationDependency"** %1208, i64 -1
  %1218 = bitcast %"class.v8::internal::compiler::CompilationDependency"** %1217 to <2 x i64>*
  store <2 x i64> %1212, <2 x i64>* %1218, align 8, !alias.scope !343, !noalias !340
  %1219 = getelementptr inbounds %"class.v8::internal::compiler::CompilationDependency"*, %"class.v8::internal::compiler::CompilationDependency"** %1208, i64 -2
  %1220 = getelementptr inbounds %"class.v8::internal::compiler::CompilationDependency"*, %"class.v8::internal::compiler::CompilationDependency"** %1219, i64 -1
  %1221 = bitcast %"class.v8::internal::compiler::CompilationDependency"** %1220 to <2 x i64>*
  store <2 x i64> %1216, <2 x i64>* %1221, align 8, !alias.scope !343, !noalias !340
  %1222 = add i64 %1188, 8
  %1223 = add i64 %1189, -2
  %1224 = icmp eq i64 %1223, 0
  br i1 %1224, label %1225, label %1187, !llvm.loop !345

1225:                                             ; preds = %1187, %1170
  %1226 = phi i64 [ 0, %1170 ], [ %1222, %1187 ]
  %1227 = icmp eq i64 %1179, 0
  br i1 %1227, label %1247, label %1228

1228:                                             ; preds = %1225
  %1229 = sub i64 0, %1226
  %1230 = getelementptr %"class.v8::internal::compiler::CompilationDependency"*, %"class.v8::internal::compiler::CompilationDependency"** %1139, i64 -1
  %1231 = sub i64 0, %1226
  %1232 = getelementptr %"class.v8::internal::compiler::CompilationDependency"*, %"class.v8::internal::compiler::CompilationDependency"** %1148, i64 -1
  %1233 = getelementptr inbounds %"class.v8::internal::compiler::CompilationDependency"*, %"class.v8::internal::compiler::CompilationDependency"** %1230, i64 %1229
  %1234 = getelementptr inbounds %"class.v8::internal::compiler::CompilationDependency"*, %"class.v8::internal::compiler::CompilationDependency"** %1232, i64 %1231
  %1235 = getelementptr inbounds %"class.v8::internal::compiler::CompilationDependency"*, %"class.v8::internal::compiler::CompilationDependency"** %1234, i64 -1
  %1236 = bitcast %"class.v8::internal::compiler::CompilationDependency"** %1235 to <2 x i64>*
  %1237 = load <2 x i64>, <2 x i64>* %1236, align 8, !alias.scope !340
  %1238 = getelementptr inbounds %"class.v8::internal::compiler::CompilationDependency"*, %"class.v8::internal::compiler::CompilationDependency"** %1234, i64 -2
  %1239 = getelementptr inbounds %"class.v8::internal::compiler::CompilationDependency"*, %"class.v8::internal::compiler::CompilationDependency"** %1238, i64 -1
  %1240 = bitcast %"class.v8::internal::compiler::CompilationDependency"** %1239 to <2 x i64>*
  %1241 = load <2 x i64>, <2 x i64>* %1240, align 8, !alias.scope !340
  %1242 = getelementptr inbounds %"class.v8::internal::compiler::CompilationDependency"*, %"class.v8::internal::compiler::CompilationDependency"** %1233, i64 -1
  %1243 = bitcast %"class.v8::internal::compiler::CompilationDependency"** %1242 to <2 x i64>*
  store <2 x i64> %1237, <2 x i64>* %1243, align 8, !alias.scope !343, !noalias !340
  %1244 = getelementptr inbounds %"class.v8::internal::compiler::CompilationDependency"*, %"class.v8::internal::compiler::CompilationDependency"** %1233, i64 -2
  %1245 = getelementptr inbounds %"class.v8::internal::compiler::CompilationDependency"*, %"class.v8::internal::compiler::CompilationDependency"** %1244, i64 -1
  %1246 = bitcast %"class.v8::internal::compiler::CompilationDependency"** %1245 to <2 x i64>*
  store <2 x i64> %1241, <2 x i64>* %1246, align 8, !alias.scope !343, !noalias !340
  br label %1247

1247:                                             ; preds = %1225, %1228
  %1248 = icmp eq i64 %1155, %1171
  br i1 %1248, label %1319, label %1249

1249:                                             ; preds = %1247, %1157, %1150
  %1250 = phi %"class.v8::internal::compiler::CompilationDependency"** [ %1139, %1157 ], [ %1139, %1150 ], [ %1173, %1247 ]
  %1251 = phi %"class.v8::internal::compiler::CompilationDependency"** [ %1148, %1157 ], [ %1148, %1150 ], [ %1175, %1247 ]
  %1252 = getelementptr %"class.v8::internal::compiler::CompilationDependency"*, %"class.v8::internal::compiler::CompilationDependency"** %1251, i64 -1
  %1253 = ptrtoint %"class.v8::internal::compiler::CompilationDependency"** %1252 to i64
  %1254 = sub i64 %1253, %1147
  %1255 = lshr i64 %1254, 3
  %1256 = add nuw nsw i64 %1255, 1
  %1257 = and i64 %1256, 7
  %1258 = icmp eq i64 %1257, 0
  br i1 %1258, label %1270, label %1259

1259:                                             ; preds = %1249, %1259
  %1260 = phi %"class.v8::internal::compiler::CompilationDependency"** [ %1263, %1259 ], [ %1250, %1249 ]
  %1261 = phi %"class.v8::internal::compiler::CompilationDependency"** [ %1264, %1259 ], [ %1251, %1249 ]
  %1262 = phi i64 [ %1268, %1259 ], [ %1257, %1249 ]
  %1263 = getelementptr inbounds %"class.v8::internal::compiler::CompilationDependency"*, %"class.v8::internal::compiler::CompilationDependency"** %1260, i64 -1
  %1264 = getelementptr inbounds %"class.v8::internal::compiler::CompilationDependency"*, %"class.v8::internal::compiler::CompilationDependency"** %1261, i64 -1
  %1265 = bitcast %"class.v8::internal::compiler::CompilationDependency"** %1264 to i64*
  %1266 = load i64, i64* %1265, align 8
  %1267 = bitcast %"class.v8::internal::compiler::CompilationDependency"** %1263 to i64*
  store i64 %1266, i64* %1267, align 8
  %1268 = add i64 %1262, -1
  %1269 = icmp eq i64 %1268, 0
  br i1 %1269, label %1270, label %1259, !llvm.loop !346

1270:                                             ; preds = %1259, %1249
  %1271 = phi %"class.v8::internal::compiler::CompilationDependency"** [ undef, %1249 ], [ %1263, %1259 ]
  %1272 = phi %"class.v8::internal::compiler::CompilationDependency"** [ %1250, %1249 ], [ %1263, %1259 ]
  %1273 = phi %"class.v8::internal::compiler::CompilationDependency"** [ %1251, %1249 ], [ %1264, %1259 ]
  %1274 = icmp ult i64 %1254, 56
  br i1 %1274, label %1319, label %1275

1275:                                             ; preds = %1270, %1275
  %1276 = phi %"class.v8::internal::compiler::CompilationDependency"** [ %1313, %1275 ], [ %1272, %1270 ]
  %1277 = phi %"class.v8::internal::compiler::CompilationDependency"** [ %1314, %1275 ], [ %1273, %1270 ]
  %1278 = getelementptr inbounds %"class.v8::internal::compiler::CompilationDependency"*, %"class.v8::internal::compiler::CompilationDependency"** %1276, i64 -1
  %1279 = getelementptr inbounds %"class.v8::internal::compiler::CompilationDependency"*, %"class.v8::internal::compiler::CompilationDependency"** %1277, i64 -1
  %1280 = bitcast %"class.v8::internal::compiler::CompilationDependency"** %1279 to i64*
  %1281 = load i64, i64* %1280, align 8
  %1282 = bitcast %"class.v8::internal::compiler::CompilationDependency"** %1278 to i64*
  store i64 %1281, i64* %1282, align 8
  %1283 = getelementptr inbounds %"class.v8::internal::compiler::CompilationDependency"*, %"class.v8::internal::compiler::CompilationDependency"** %1276, i64 -2
  %1284 = getelementptr inbounds %"class.v8::internal::compiler::CompilationDependency"*, %"class.v8::internal::compiler::CompilationDependency"** %1277, i64 -2
  %1285 = bitcast %"class.v8::internal::compiler::CompilationDependency"** %1284 to i64*
  %1286 = load i64, i64* %1285, align 8
  %1287 = bitcast %"class.v8::internal::compiler::CompilationDependency"** %1283 to i64*
  store i64 %1286, i64* %1287, align 8
  %1288 = getelementptr inbounds %"class.v8::internal::compiler::CompilationDependency"*, %"class.v8::internal::compiler::CompilationDependency"** %1276, i64 -3
  %1289 = getelementptr inbounds %"class.v8::internal::compiler::CompilationDependency"*, %"class.v8::internal::compiler::CompilationDependency"** %1277, i64 -3
  %1290 = bitcast %"class.v8::internal::compiler::CompilationDependency"** %1289 to i64*
  %1291 = load i64, i64* %1290, align 8
  %1292 = bitcast %"class.v8::internal::compiler::CompilationDependency"** %1288 to i64*
  store i64 %1291, i64* %1292, align 8
  %1293 = getelementptr inbounds %"class.v8::internal::compiler::CompilationDependency"*, %"class.v8::internal::compiler::CompilationDependency"** %1276, i64 -4
  %1294 = getelementptr inbounds %"class.v8::internal::compiler::CompilationDependency"*, %"class.v8::internal::compiler::CompilationDependency"** %1277, i64 -4
  %1295 = bitcast %"class.v8::internal::compiler::CompilationDependency"** %1294 to i64*
  %1296 = load i64, i64* %1295, align 8
  %1297 = bitcast %"class.v8::internal::compiler::CompilationDependency"** %1293 to i64*
  store i64 %1296, i64* %1297, align 8
  %1298 = getelementptr inbounds %"class.v8::internal::compiler::CompilationDependency"*, %"class.v8::internal::compiler::CompilationDependency"** %1276, i64 -5
  %1299 = getelementptr inbounds %"class.v8::internal::compiler::CompilationDependency"*, %"class.v8::internal::compiler::CompilationDependency"** %1277, i64 -5
  %1300 = bitcast %"class.v8::internal::compiler::CompilationDependency"** %1299 to i64*
  %1301 = load i64, i64* %1300, align 8
  %1302 = bitcast %"class.v8::internal::compiler::CompilationDependency"** %1298 to i64*
  store i64 %1301, i64* %1302, align 8
  %1303 = getelementptr inbounds %"class.v8::internal::compiler::CompilationDependency"*, %"class.v8::internal::compiler::CompilationDependency"** %1276, i64 -6
  %1304 = getelementptr inbounds %"class.v8::internal::compiler::CompilationDependency"*, %"class.v8::internal::compiler::CompilationDependency"** %1277, i64 -6
  %1305 = bitcast %"class.v8::internal::compiler::CompilationDependency"** %1304 to i64*
  %1306 = load i64, i64* %1305, align 8
  %1307 = bitcast %"class.v8::internal::compiler::CompilationDependency"** %1303 to i64*
  store i64 %1306, i64* %1307, align 8
  %1308 = getelementptr inbounds %"class.v8::internal::compiler::CompilationDependency"*, %"class.v8::internal::compiler::CompilationDependency"** %1276, i64 -7
  %1309 = getelementptr inbounds %"class.v8::internal::compiler::CompilationDependency"*, %"class.v8::internal::compiler::CompilationDependency"** %1277, i64 -7
  %1310 = bitcast %"class.v8::internal::compiler::CompilationDependency"** %1309 to i64*
  %1311 = load i64, i64* %1310, align 8
  %1312 = bitcast %"class.v8::internal::compiler::CompilationDependency"** %1308 to i64*
  store i64 %1311, i64* %1312, align 8
  %1313 = getelementptr inbounds %"class.v8::internal::compiler::CompilationDependency"*, %"class.v8::internal::compiler::CompilationDependency"** %1276, i64 -8
  %1314 = getelementptr inbounds %"class.v8::internal::compiler::CompilationDependency"*, %"class.v8::internal::compiler::CompilationDependency"** %1277, i64 -8
  %1315 = bitcast %"class.v8::internal::compiler::CompilationDependency"** %1314 to i64*
  %1316 = load i64, i64* %1315, align 8
  %1317 = bitcast %"class.v8::internal::compiler::CompilationDependency"** %1313 to i64*
  store i64 %1316, i64* %1317, align 8
  %1318 = icmp eq %"class.v8::internal::compiler::CompilationDependency"** %1314, %1146
  br i1 %1318, label %1319, label %1275, !llvm.loop !347

1319:                                             ; preds = %1270, %1275, %1247, %1136
  %1320 = phi %"class.v8::internal::compiler::CompilationDependency"** [ %1139, %1136 ], [ %1173, %1247 ], [ %1271, %1270 ], [ %1313, %1275 ]
  %1321 = ptrtoint %"class.v8::internal::compiler::CompilationDependency"** %1320 to i64
  store i64 %1321, i64* %1100, align 8
  store i64 %1144, i64* %1099, align 8
  store i64 %1141, i64* %1109, align 8
  br label %1322

1322:                                             ; preds = %1092, %1319
  %1323 = load %"class.v8::internal::compiler::JSHeapBroker"*, %"class.v8::internal::compiler::JSHeapBroker"** %14, align 8
  %1324 = bitcast %"class.v8::internal::Handle<v8::internal::FieldType>::ObjectRef"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %1324) #8
  %1325 = load i64, i64* %792, align 8
  %1326 = getelementptr inbounds %"class.v8::internal::Handle<v8::internal::FieldType>::ObjectRef", %"class.v8::internal::Handle<v8::internal::FieldType>::ObjectRef"* %11, i64 0, i32 0, i32 0, i32 0, i32 0
  store i64 %1325, i64* %1326, align 8
  %1327 = getelementptr inbounds %"class.v8::internal::Handle<v8::internal::FieldType>::ObjectRef", %"class.v8::internal::Handle<v8::internal::FieldType>::ObjectRef"* %11, i64 0, i32 0
  %1328 = call i64 @_ZNK2v88internal9FieldType7AsClassEv(%"class.v8::internal::FieldType"* nonnull %1327) #8
  %1329 = call i64* @_ZN2v88internal8compiler12JSHeapBroker25CanonicalPersistentHandleINS0_3MapEEENS0_6HandleIT_EES6_(%"class.v8::internal::compiler::JSHeapBroker"* %1323, i64 %1328)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1324) #8
  %1330 = getelementptr inbounds %"class.v8::base::Optional.1270", %"class.v8::base::Optional.1270"* %12, i64 0, i32 0, i32 0, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %1330) #8
  %1331 = load %"class.v8::internal::compiler::JSHeapBroker"*, %"class.v8::internal::compiler::JSHeapBroker"** %14, align 8
  call void @_ZN2v88internal8compiler10TryMakeRefINS0_3MapEvEENS_4base8OptionalINS1_10ref_traitsIT_E8ref_typeEEEPNS1_12JSHeapBrokerENS0_6HandleIS7_EENS4_5FlagsINS1_19GetOrCreateDataFlagEiEE(%"class.v8::base::Optional.1270"* nonnull sret %12, %"class.v8::internal::compiler::JSHeapBroker"* %1331, i64* %1329, i32 0)
  %1332 = load i8, i8* %1330, align 8, !range !80
  %1333 = icmp eq i8 %1332, 0
  br i1 %1333, label %1341, label %1334

1334:                                             ; preds = %1322
  %1335 = getelementptr inbounds %"class.v8::base::Optional.1270", %"class.v8::base::Optional.1270"* %12, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  %1336 = call i32 @_ZN2v88internal8compiler10BitsetType3LubINS1_6MapRefEEEjRKT_(%"class.v8::internal::compiler::MapRef"* dereferenceable(16) %1335) #8
  %1337 = call i32 @_ZN2v88internal8compiler10BitsetType15ExpandInternalsEj(i32 %1336) #8
  %1338 = or i32 %1337, 1
  %1339 = zext i32 %1338 to i64
  %1340 = ptrtoint i64* %1329 to i64
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %1330) #8
  br label %1359

1341:                                             ; preds = %1322
  %1342 = load i64, i64* %246, align 8, !noalias !348
  %1343 = getelementptr inbounds %"class.v8::internal::compiler::PropertyAccessInfo", %"class.v8::internal::compiler::PropertyAccessInfo"* %0, i64 0, i32 0
  store i32 0, i32* %1343, align 8, !alias.scope !351
  %1344 = getelementptr inbounds %"class.v8::internal::compiler::PropertyAccessInfo", %"class.v8::internal::compiler::PropertyAccessInfo"* %0, i64 0, i32 1
  %1345 = getelementptr inbounds %"class.v8::internal::compiler::PropertyAccessInfo", %"class.v8::internal::compiler::PropertyAccessInfo"* %0, i64 0, i32 1, i32 0, i32 0, i32 2, i32 1
  %1346 = bitcast %"struct.std::__1::__compressed_pair_elem.0"* %1345 to i64*
  %1347 = bitcast %"class.v8::internal::ZoneVector"* %1344 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %1347, i8 0, i64 24, i1 false) #8, !alias.scope !351
  store i64 %1342, i64* %1346, align 8, !alias.scope !351
  %1348 = getelementptr inbounds %"class.v8::internal::compiler::PropertyAccessInfo", %"class.v8::internal::compiler::PropertyAccessInfo"* %0, i64 0, i32 2, i32 0, i32 0
  %1349 = getelementptr inbounds %"class.v8::internal::compiler::PropertyAccessInfo", %"class.v8::internal::compiler::PropertyAccessInfo"* %0, i64 0, i32 4, i32 0, i32 0, i32 2, i32 1
  %1350 = bitcast %"struct.std::__1::__compressed_pair_elem.27"* %1349 to i64*
  %1351 = bitcast i64** %1348 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %1351, i8 0, i64 40, i1 false) #8, !alias.scope !351
  store i64 %1342, i64* %1350, align 8, !alias.scope !351
  %1352 = getelementptr inbounds %"class.v8::internal::compiler::PropertyAccessInfo", %"class.v8::internal::compiler::PropertyAccessInfo"* %0, i64 0, i32 5, i32 0
  %1353 = getelementptr inbounds %"class.v8::internal::compiler::PropertyAccessInfo", %"class.v8::internal::compiler::PropertyAccessInfo"* %0, i64 0, i32 8, i32 0
  %1354 = bitcast i64** %1352 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %1354, i8 0, i64 17, i1 false) #8, !alias.scope !351
  store i64 1, i64* %1353, align 8, !alias.scope !351
  %1355 = getelementptr inbounds %"class.v8::internal::compiler::PropertyAccessInfo", %"class.v8::internal::compiler::PropertyAccessInfo"* %0, i64 0, i32 9, i32 0
  %1356 = getelementptr inbounds %"class.v8::internal::compiler::PropertyAccessInfo", %"class.v8::internal::compiler::PropertyAccessInfo"* %0, i64 0, i32 11, i32 0
  %1357 = bitcast i64** %1355 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %1357, i8 0, i64 16, i1 false) #8, !alias.scope !351
  store i64 -1, i64* %1356, align 8, !alias.scope !351
  %1358 = getelementptr inbounds %"class.v8::internal::compiler::PropertyAccessInfo", %"class.v8::internal::compiler::PropertyAccessInfo"* %0, i64 0, i32 12, i32 0
  store i64* null, i64** %1358, align 8, !alias.scope !351
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %1330) #8
  br label %1615

1359:                                             ; preds = %243, %1334, %1078, %778, %551, %512, %285
  %1360 = phi i64 [ 0, %285 ], [ 0, %512 ], [ 0, %551 ], [ 0, %778 ], [ 0, %1078 ], [ %1340, %1334 ], [ 0, %243 ]
  %1361 = phi i64 [ %253, %285 ], [ %253, %512 ], [ %519, %551 ], [ %519, %778 ], [ 209682431, %1078 ], [ %1339, %1334 ], [ 209682431, %243 ]
  %1362 = getelementptr inbounds %"class.v8::internal::compiler::AccessInfoFactory", %"class.v8::internal::compiler::AccessInfoFactory"* %1, i64 0, i32 1
  %1363 = load %"class.v8::internal::compiler::CompilationDependencies"*, %"class.v8::internal::compiler::CompilationDependencies"** %1362, align 8
  %1364 = getelementptr inbounds %"class.v8::base::Optional.1270", %"class.v8::base::Optional.1270"* %8, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  %1365 = call %"class.v8::internal::compiler::CompilationDependency"* @_ZNK2v88internal8compiler23CompilationDependencies32TransitionDependencyOffTheRecordERKNS1_6MapRefE(%"class.v8::internal::compiler::CompilationDependencies"* %1363, %"class.v8::internal::compiler::MapRef"* dereferenceable(16) %1364) #8
  %1366 = ptrtoint %"class.v8::internal::compiler::CompilationDependency"* %1365 to i64
  %1367 = getelementptr inbounds %"class.v8::internal::ZoneVector.22", %"class.v8::internal::ZoneVector.22"* %9, i64 0, i32 0, i32 0, i32 1
  %1368 = load %"class.v8::internal::compiler::CompilationDependency"**, %"class.v8::internal::compiler::CompilationDependency"*** %1367, align 8
  %1369 = getelementptr inbounds %"class.v8::internal::ZoneVector.22", %"class.v8::internal::ZoneVector.22"* %9, i64 0, i32 0, i32 0, i32 2, i32 0, i32 0
  %1370 = load %"class.v8::internal::compiler::CompilationDependency"**, %"class.v8::internal::compiler::CompilationDependency"*** %1369, align 8
  %1371 = icmp ult %"class.v8::internal::compiler::CompilationDependency"** %1368, %1370
  %1372 = ptrtoint %"class.v8::internal::compiler::CompilationDependency"** %1370 to i64
  br i1 %1371, label %1373, label %1378

1373:                                             ; preds = %1359
  %1374 = bitcast %"class.v8::internal::compiler::CompilationDependency"** %1368 to i64*
  store i64 %1366, i64* %1374, align 8
  %1375 = getelementptr inbounds %"class.v8::internal::compiler::CompilationDependency"*, %"class.v8::internal::compiler::CompilationDependency"** %1368, i64 1
  %1376 = ptrtoint %"class.v8::internal::compiler::CompilationDependency"** %1375 to i64
  %1377 = bitcast %"class.v8::internal::compiler::CompilationDependency"*** %1367 to i64*
  store i64 %1376, i64* %1377, align 8
  br label %1603

1378:                                             ; preds = %1359
  %1379 = ptrtoint %"class.v8::internal::compiler::CompilationDependency"** %1368 to i64
  %1380 = bitcast %"class.v8::internal::compiler::CompilationDependency"*** %1367 to i64*
  %1381 = bitcast %"class.v8::internal::ZoneVector.22"* %9 to i64*
  %1382 = load i64, i64* %1381, align 8
  %1383 = sub i64 %1379, %1382
  %1384 = ashr exact i64 %1383, 3
  %1385 = add nsw i64 %1384, 1
  %1386 = icmp ugt i64 %1385, 268435455
  br i1 %1386, label %1387, label %1389

1387:                                             ; preds = %1378
  %1388 = bitcast %"class.v8::internal::ZoneVector.22"* %9 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %1388) #12
  unreachable

1389:                                             ; preds = %1378
  %1390 = bitcast %"class.v8::internal::compiler::CompilationDependency"*** %1369 to i64*
  %1391 = sub i64 %1372, %1382
  %1392 = ashr exact i64 %1391, 3
  %1393 = icmp ult i64 %1392, 134217727
  br i1 %1393, label %1394, label %1399

1394:                                             ; preds = %1389
  %1395 = ashr exact i64 %1391, 2
  %1396 = icmp ult i64 %1395, %1385
  %1397 = select i1 %1396, i64 %1385, i64 %1395
  %1398 = icmp eq i64 %1397, 0
  br i1 %1398, label %1417, label %1399

1399:                                             ; preds = %1394, %1389
  %1400 = phi i64 [ %1397, %1394 ], [ 268435455, %1389 ]
  %1401 = getelementptr inbounds %"class.v8::internal::ZoneVector.22", %"class.v8::internal::ZoneVector.22"* %9, i64 0, i32 0, i32 0, i32 2, i32 1, i32 0, i32 0
  %1402 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %1401, align 8
  %1403 = shl i64 %1400, 3
  %1404 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %1402, i64 0, i32 2
  %1405 = load i64, i64* %1404, align 8
  %1406 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %1402, i64 0, i32 3
  %1407 = load i64, i64* %1406, align 8
  %1408 = sub i64 %1407, %1405
  %1409 = icmp ugt i64 %1403, %1408
  br i1 %1409, label %1410, label %1412, !prof !2

1410:                                             ; preds = %1399
  %1411 = call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %1402, i64 %1403) #8
  br label %1414

1412:                                             ; preds = %1399
  %1413 = add i64 %1405, %1403
  store i64 %1413, i64* %1404, align 8
  br label %1414

1414:                                             ; preds = %1412, %1410
  %1415 = phi i64 [ %1411, %1410 ], [ %1405, %1412 ]
  %1416 = inttoptr i64 %1415 to %"class.v8::internal::compiler::CompilationDependency"**
  br label %1417

1417:                                             ; preds = %1414, %1394
  %1418 = phi i64 [ %1400, %1414 ], [ 0, %1394 ]
  %1419 = phi %"class.v8::internal::compiler::CompilationDependency"** [ %1416, %1414 ], [ null, %1394 ]
  %1420 = getelementptr inbounds %"class.v8::internal::compiler::CompilationDependency"*, %"class.v8::internal::compiler::CompilationDependency"** %1419, i64 %1384
  %1421 = getelementptr inbounds %"class.v8::internal::compiler::CompilationDependency"*, %"class.v8::internal::compiler::CompilationDependency"** %1419, i64 %1418
  %1422 = ptrtoint %"class.v8::internal::compiler::CompilationDependency"** %1421 to i64
  %1423 = bitcast %"class.v8::internal::compiler::CompilationDependency"** %1420 to i64*
  store i64 %1366, i64* %1423, align 8
  %1424 = getelementptr inbounds %"class.v8::internal::compiler::CompilationDependency"*, %"class.v8::internal::compiler::CompilationDependency"** %1420, i64 1
  %1425 = ptrtoint %"class.v8::internal::compiler::CompilationDependency"** %1424 to i64
  %1426 = getelementptr inbounds %"class.v8::internal::ZoneVector.22", %"class.v8::internal::ZoneVector.22"* %9, i64 0, i32 0, i32 0, i32 0
  %1427 = load %"class.v8::internal::compiler::CompilationDependency"**, %"class.v8::internal::compiler::CompilationDependency"*** %1426, align 8
  %1428 = ptrtoint %"class.v8::internal::compiler::CompilationDependency"** %1427 to i64
  %1429 = load %"class.v8::internal::compiler::CompilationDependency"**, %"class.v8::internal::compiler::CompilationDependency"*** %1367, align 8
  %1430 = icmp eq %"class.v8::internal::compiler::CompilationDependency"** %1429, %1427
  br i1 %1430, label %1600, label %1431

1431:                                             ; preds = %1417
  %1432 = getelementptr %"class.v8::internal::compiler::CompilationDependency"*, %"class.v8::internal::compiler::CompilationDependency"** %1429, i64 -1
  %1433 = ptrtoint %"class.v8::internal::compiler::CompilationDependency"** %1432 to i64
  %1434 = sub i64 %1433, %1428
  %1435 = lshr i64 %1434, 3
  %1436 = add nuw nsw i64 %1435, 1
  %1437 = icmp ult i64 %1436, 4
  br i1 %1437, label %1530, label %1438

1438:                                             ; preds = %1431
  %1439 = getelementptr %"class.v8::internal::compiler::CompilationDependency"*, %"class.v8::internal::compiler::CompilationDependency"** %1429, i64 -1
  %1440 = ptrtoint %"class.v8::internal::compiler::CompilationDependency"** %1439 to i64
  %1441 = sub i64 %1440, %1428
  %1442 = lshr i64 %1441, 3
  %1443 = xor i64 %1442, -1
  %1444 = add nsw i64 %1384, %1443
  %1445 = getelementptr %"class.v8::internal::compiler::CompilationDependency"*, %"class.v8::internal::compiler::CompilationDependency"** %1419, i64 %1444
  %1446 = xor i64 %1442, -1
  %1447 = getelementptr %"class.v8::internal::compiler::CompilationDependency"*, %"class.v8::internal::compiler::CompilationDependency"** %1429, i64 %1446
  %1448 = icmp ult %"class.v8::internal::compiler::CompilationDependency"** %1445, %1429
  %1449 = icmp ult %"class.v8::internal::compiler::CompilationDependency"** %1447, %1420
  %1450 = and i1 %1448, %1449
  br i1 %1450, label %1530, label %1451

1451:                                             ; preds = %1438
  %1452 = and i64 %1436, 4611686018427387900
  %1453 = sub nsw i64 0, %1452
  %1454 = getelementptr %"class.v8::internal::compiler::CompilationDependency"*, %"class.v8::internal::compiler::CompilationDependency"** %1420, i64 %1453
  %1455 = sub nsw i64 0, %1452
  %1456 = getelementptr %"class.v8::internal::compiler::CompilationDependency"*, %"class.v8::internal::compiler::CompilationDependency"** %1429, i64 %1455
  %1457 = add nsw i64 %1452, -4
  %1458 = lshr exact i64 %1457, 2
  %1459 = add nuw nsw i64 %1458, 1
  %1460 = and i64 %1459, 1
  %1461 = icmp eq i64 %1457, 0
  br i1 %1461, label %1508, label %1462

1462:                                             ; preds = %1451
  %1463 = sub nuw nsw i64 %1459, %1460
  %1464 = getelementptr %"class.v8::internal::compiler::CompilationDependency"*, %"class.v8::internal::compiler::CompilationDependency"** %1420, i64 -1
  %1465 = getelementptr %"class.v8::internal::compiler::CompilationDependency"*, %"class.v8::internal::compiler::CompilationDependency"** %1429, i64 -1
  %1466 = getelementptr %"class.v8::internal::compiler::CompilationDependency"*, %"class.v8::internal::compiler::CompilationDependency"** %1420, i64 -1
  %1467 = getelementptr %"class.v8::internal::compiler::CompilationDependency"*, %"class.v8::internal::compiler::CompilationDependency"** %1429, i64 -1
  br label %1468

1468:                                             ; preds = %1468, %1462
  %1469 = phi i64 [ 0, %1462 ], [ %1503, %1468 ]
  %1470 = phi i64 [ %1463, %1462 ], [ %1504, %1468 ]
  %1471 = sub i64 0, %1469
  %1472 = sub i64 0, %1469
  %1473 = getelementptr inbounds %"class.v8::internal::compiler::CompilationDependency"*, %"class.v8::internal::compiler::CompilationDependency"** %1464, i64 %1471
  %1474 = getelementptr inbounds %"class.v8::internal::compiler::CompilationDependency"*, %"class.v8::internal::compiler::CompilationDependency"** %1465, i64 %1472
  %1475 = getelementptr inbounds %"class.v8::internal::compiler::CompilationDependency"*, %"class.v8::internal::compiler::CompilationDependency"** %1474, i64 -1
  %1476 = bitcast %"class.v8::internal::compiler::CompilationDependency"** %1475 to <2 x i64>*
  %1477 = load <2 x i64>, <2 x i64>* %1476, align 8, !alias.scope !354
  %1478 = getelementptr inbounds %"class.v8::internal::compiler::CompilationDependency"*, %"class.v8::internal::compiler::CompilationDependency"** %1474, i64 -2
  %1479 = getelementptr inbounds %"class.v8::internal::compiler::CompilationDependency"*, %"class.v8::internal::compiler::CompilationDependency"** %1478, i64 -1
  %1480 = bitcast %"class.v8::internal::compiler::CompilationDependency"** %1479 to <2 x i64>*
  %1481 = load <2 x i64>, <2 x i64>* %1480, align 8, !alias.scope !354
  %1482 = getelementptr inbounds %"class.v8::internal::compiler::CompilationDependency"*, %"class.v8::internal::compiler::CompilationDependency"** %1473, i64 -1
  %1483 = bitcast %"class.v8::internal::compiler::CompilationDependency"** %1482 to <2 x i64>*
  store <2 x i64> %1477, <2 x i64>* %1483, align 8, !alias.scope !357, !noalias !354
  %1484 = getelementptr inbounds %"class.v8::internal::compiler::CompilationDependency"*, %"class.v8::internal::compiler::CompilationDependency"** %1473, i64 -2
  %1485 = getelementptr inbounds %"class.v8::internal::compiler::CompilationDependency"*, %"class.v8::internal::compiler::CompilationDependency"** %1484, i64 -1
  %1486 = bitcast %"class.v8::internal::compiler::CompilationDependency"** %1485 to <2 x i64>*
  store <2 x i64> %1481, <2 x i64>* %1486, align 8, !alias.scope !357, !noalias !354
  %1487 = sub nuw nsw i64 -4, %1469
  %1488 = sub nuw nsw i64 -4, %1469
  %1489 = getelementptr inbounds %"class.v8::internal::compiler::CompilationDependency"*, %"class.v8::internal::compiler::CompilationDependency"** %1466, i64 %1487
  %1490 = getelementptr inbounds %"class.v8::internal::compiler::CompilationDependency"*, %"class.v8::internal::compiler::CompilationDependency"** %1467, i64 %1488
  %1491 = getelementptr inbounds %"class.v8::internal::compiler::CompilationDependency"*, %"class.v8::internal::compiler::CompilationDependency"** %1490, i64 -1
  %1492 = bitcast %"class.v8::internal::compiler::CompilationDependency"** %1491 to <2 x i64>*
  %1493 = load <2 x i64>, <2 x i64>* %1492, align 8, !alias.scope !354
  %1494 = getelementptr inbounds %"class.v8::internal::compiler::CompilationDependency"*, %"class.v8::internal::compiler::CompilationDependency"** %1490, i64 -2
  %1495 = getelementptr inbounds %"class.v8::internal::compiler::CompilationDependency"*, %"class.v8::internal::compiler::CompilationDependency"** %1494, i64 -1
  %1496 = bitcast %"class.v8::internal::compiler::CompilationDependency"** %1495 to <2 x i64>*
  %1497 = load <2 x i64>, <2 x i64>* %1496, align 8, !alias.scope !354
  %1498 = getelementptr inbounds %"class.v8::internal::compiler::CompilationDependency"*, %"class.v8::internal::compiler::CompilationDependency"** %1489, i64 -1
  %1499 = bitcast %"class.v8::internal::compiler::CompilationDependency"** %1498 to <2 x i64>*
  store <2 x i64> %1493, <2 x i64>* %1499, align 8, !alias.scope !357, !noalias !354
  %1500 = getelementptr inbounds %"class.v8::internal::compiler::CompilationDependency"*, %"class.v8::internal::compiler::CompilationDependency"** %1489, i64 -2
  %1501 = getelementptr inbounds %"class.v8::internal::compiler::CompilationDependency"*, %"class.v8::internal::compiler::CompilationDependency"** %1500, i64 -1
  %1502 = bitcast %"class.v8::internal::compiler::CompilationDependency"** %1501 to <2 x i64>*
  store <2 x i64> %1497, <2 x i64>* %1502, align 8, !alias.scope !357, !noalias !354
  %1503 = add i64 %1469, 8
  %1504 = add i64 %1470, -2
  %1505 = icmp eq i64 %1504, 0
  br i1 %1505, label %1506, label %1468, !llvm.loop !359

1506:                                             ; preds = %1468
  %1507 = sub nuw nsw i64 -8, %1469
  br label %1508

1508:                                             ; preds = %1506, %1451
  %1509 = phi i64 [ 0, %1451 ], [ %1507, %1506 ]
  %1510 = icmp eq i64 %1460, 0
  br i1 %1510, label %1528, label %1511

1511:                                             ; preds = %1508
  %1512 = getelementptr %"class.v8::internal::compiler::CompilationDependency"*, %"class.v8::internal::compiler::CompilationDependency"** %1420, i64 -1
  %1513 = getelementptr %"class.v8::internal::compiler::CompilationDependency"*, %"class.v8::internal::compiler::CompilationDependency"** %1429, i64 -1
  %1514 = getelementptr inbounds %"class.v8::internal::compiler::CompilationDependency"*, %"class.v8::internal::compiler::CompilationDependency"** %1512, i64 %1509
  %1515 = getelementptr inbounds %"class.v8::internal::compiler::CompilationDependency"*, %"class.v8::internal::compiler::CompilationDependency"** %1513, i64 %1509
  %1516 = getelementptr inbounds %"class.v8::internal::compiler::CompilationDependency"*, %"class.v8::internal::compiler::CompilationDependency"** %1515, i64 -1
  %1517 = bitcast %"class.v8::internal::compiler::CompilationDependency"** %1516 to <2 x i64>*
  %1518 = load <2 x i64>, <2 x i64>* %1517, align 8, !alias.scope !354
  %1519 = getelementptr inbounds %"class.v8::internal::compiler::CompilationDependency"*, %"class.v8::internal::compiler::CompilationDependency"** %1515, i64 -2
  %1520 = getelementptr inbounds %"class.v8::internal::compiler::CompilationDependency"*, %"class.v8::internal::compiler::CompilationDependency"** %1519, i64 -1
  %1521 = bitcast %"class.v8::internal::compiler::CompilationDependency"** %1520 to <2 x i64>*
  %1522 = load <2 x i64>, <2 x i64>* %1521, align 8, !alias.scope !354
  %1523 = getelementptr inbounds %"class.v8::internal::compiler::CompilationDependency"*, %"class.v8::internal::compiler::CompilationDependency"** %1514, i64 -1
  %1524 = bitcast %"class.v8::internal::compiler::CompilationDependency"** %1523 to <2 x i64>*
  store <2 x i64> %1518, <2 x i64>* %1524, align 8, !alias.scope !357, !noalias !354
  %1525 = getelementptr inbounds %"class.v8::internal::compiler::CompilationDependency"*, %"class.v8::internal::compiler::CompilationDependency"** %1514, i64 -2
  %1526 = getelementptr inbounds %"class.v8::internal::compiler::CompilationDependency"*, %"class.v8::internal::compiler::CompilationDependency"** %1525, i64 -1
  %1527 = bitcast %"class.v8::internal::compiler::CompilationDependency"** %1526 to <2 x i64>*
  store <2 x i64> %1522, <2 x i64>* %1527, align 8, !alias.scope !357, !noalias !354
  br label %1528

1528:                                             ; preds = %1508, %1511
  %1529 = icmp eq i64 %1436, %1452
  br i1 %1529, label %1600, label %1530

1530:                                             ; preds = %1528, %1438, %1431
  %1531 = phi %"class.v8::internal::compiler::CompilationDependency"** [ %1420, %1438 ], [ %1420, %1431 ], [ %1454, %1528 ]
  %1532 = phi %"class.v8::internal::compiler::CompilationDependency"** [ %1429, %1438 ], [ %1429, %1431 ], [ %1456, %1528 ]
  %1533 = getelementptr %"class.v8::internal::compiler::CompilationDependency"*, %"class.v8::internal::compiler::CompilationDependency"** %1532, i64 -1
  %1534 = ptrtoint %"class.v8::internal::compiler::CompilationDependency"** %1533 to i64
  %1535 = sub i64 %1534, %1428
  %1536 = lshr i64 %1535, 3
  %1537 = add nuw nsw i64 %1536, 1
  %1538 = and i64 %1537, 7
  %1539 = icmp eq i64 %1538, 0
  br i1 %1539, label %1551, label %1540

1540:                                             ; preds = %1530, %1540
  %1541 = phi %"class.v8::internal::compiler::CompilationDependency"** [ %1544, %1540 ], [ %1531, %1530 ]
  %1542 = phi %"class.v8::internal::compiler::CompilationDependency"** [ %1545, %1540 ], [ %1532, %1530 ]
  %1543 = phi i64 [ %1549, %1540 ], [ %1538, %1530 ]
  %1544 = getelementptr inbounds %"class.v8::internal::compiler::CompilationDependency"*, %"class.v8::internal::compiler::CompilationDependency"** %1541, i64 -1
  %1545 = getelementptr inbounds %"class.v8::internal::compiler::CompilationDependency"*, %"class.v8::internal::compiler::CompilationDependency"** %1542, i64 -1
  %1546 = bitcast %"class.v8::internal::compiler::CompilationDependency"** %1545 to i64*
  %1547 = load i64, i64* %1546, align 8
  %1548 = bitcast %"class.v8::internal::compiler::CompilationDependency"** %1544 to i64*
  store i64 %1547, i64* %1548, align 8
  %1549 = add i64 %1543, -1
  %1550 = icmp eq i64 %1549, 0
  br i1 %1550, label %1551, label %1540, !llvm.loop !360

1551:                                             ; preds = %1540, %1530
  %1552 = phi %"class.v8::internal::compiler::CompilationDependency"** [ undef, %1530 ], [ %1544, %1540 ]
  %1553 = phi %"class.v8::internal::compiler::CompilationDependency"** [ %1531, %1530 ], [ %1544, %1540 ]
  %1554 = phi %"class.v8::internal::compiler::CompilationDependency"** [ %1532, %1530 ], [ %1545, %1540 ]
  %1555 = icmp ult i64 %1535, 56
  br i1 %1555, label %1600, label %1556

1556:                                             ; preds = %1551, %1556
  %1557 = phi %"class.v8::internal::compiler::CompilationDependency"** [ %1594, %1556 ], [ %1553, %1551 ]
  %1558 = phi %"class.v8::internal::compiler::CompilationDependency"** [ %1595, %1556 ], [ %1554, %1551 ]
  %1559 = getelementptr inbounds %"class.v8::internal::compiler::CompilationDependency"*, %"class.v8::internal::compiler::CompilationDependency"** %1557, i64 -1
  %1560 = getelementptr inbounds %"class.v8::internal::compiler::CompilationDependency"*, %"class.v8::internal::compiler::CompilationDependency"** %1558, i64 -1
  %1561 = bitcast %"class.v8::internal::compiler::CompilationDependency"** %1560 to i64*
  %1562 = load i64, i64* %1561, align 8
  %1563 = bitcast %"class.v8::internal::compiler::CompilationDependency"** %1559 to i64*
  store i64 %1562, i64* %1563, align 8
  %1564 = getelementptr inbounds %"class.v8::internal::compiler::CompilationDependency"*, %"class.v8::internal::compiler::CompilationDependency"** %1557, i64 -2
  %1565 = getelementptr inbounds %"class.v8::internal::compiler::CompilationDependency"*, %"class.v8::internal::compiler::CompilationDependency"** %1558, i64 -2
  %1566 = bitcast %"class.v8::internal::compiler::CompilationDependency"** %1565 to i64*
  %1567 = load i64, i64* %1566, align 8
  %1568 = bitcast %"class.v8::internal::compiler::CompilationDependency"** %1564 to i64*
  store i64 %1567, i64* %1568, align 8
  %1569 = getelementptr inbounds %"class.v8::internal::compiler::CompilationDependency"*, %"class.v8::internal::compiler::CompilationDependency"** %1557, i64 -3
  %1570 = getelementptr inbounds %"class.v8::internal::compiler::CompilationDependency"*, %"class.v8::internal::compiler::CompilationDependency"** %1558, i64 -3
  %1571 = bitcast %"class.v8::internal::compiler::CompilationDependency"** %1570 to i64*
  %1572 = load i64, i64* %1571, align 8
  %1573 = bitcast %"class.v8::internal::compiler::CompilationDependency"** %1569 to i64*
  store i64 %1572, i64* %1573, align 8
  %1574 = getelementptr inbounds %"class.v8::internal::compiler::CompilationDependency"*, %"class.v8::internal::compiler::CompilationDependency"** %1557, i64 -4
  %1575 = getelementptr inbounds %"class.v8::internal::compiler::CompilationDependency"*, %"class.v8::internal::compiler::CompilationDependency"** %1558, i64 -4
  %1576 = bitcast %"class.v8::internal::compiler::CompilationDependency"** %1575 to i64*
  %1577 = load i64, i64* %1576, align 8
  %1578 = bitcast %"class.v8::internal::compiler::CompilationDependency"** %1574 to i64*
  store i64 %1577, i64* %1578, align 8
  %1579 = getelementptr inbounds %"class.v8::internal::compiler::CompilationDependency"*, %"class.v8::internal::compiler::CompilationDependency"** %1557, i64 -5
  %1580 = getelementptr inbounds %"class.v8::internal::compiler::CompilationDependency"*, %"class.v8::internal::compiler::CompilationDependency"** %1558, i64 -5
  %1581 = bitcast %"class.v8::internal::compiler::CompilationDependency"** %1580 to i64*
  %1582 = load i64, i64* %1581, align 8
  %1583 = bitcast %"class.v8::internal::compiler::CompilationDependency"** %1579 to i64*
  store i64 %1582, i64* %1583, align 8
  %1584 = getelementptr inbounds %"class.v8::internal::compiler::CompilationDependency"*, %"class.v8::internal::compiler::CompilationDependency"** %1557, i64 -6
  %1585 = getelementptr inbounds %"class.v8::internal::compiler::CompilationDependency"*, %"class.v8::internal::compiler::CompilationDependency"** %1558, i64 -6
  %1586 = bitcast %"class.v8::internal::compiler::CompilationDependency"** %1585 to i64*
  %1587 = load i64, i64* %1586, align 8
  %1588 = bitcast %"class.v8::internal::compiler::CompilationDependency"** %1584 to i64*
  store i64 %1587, i64* %1588, align 8
  %1589 = getelementptr inbounds %"class.v8::internal::compiler::CompilationDependency"*, %"class.v8::internal::compiler::CompilationDependency"** %1557, i64 -7
  %1590 = getelementptr inbounds %"class.v8::internal::compiler::CompilationDependency"*, %"class.v8::internal::compiler::CompilationDependency"** %1558, i64 -7
  %1591 = bitcast %"class.v8::internal::compiler::CompilationDependency"** %1590 to i64*
  %1592 = load i64, i64* %1591, align 8
  %1593 = bitcast %"class.v8::internal::compiler::CompilationDependency"** %1589 to i64*
  store i64 %1592, i64* %1593, align 8
  %1594 = getelementptr inbounds %"class.v8::internal::compiler::CompilationDependency"*, %"class.v8::internal::compiler::CompilationDependency"** %1557, i64 -8
  %1595 = getelementptr inbounds %"class.v8::internal::compiler::CompilationDependency"*, %"class.v8::internal::compiler::CompilationDependency"** %1558, i64 -8
  %1596 = bitcast %"class.v8::internal::compiler::CompilationDependency"** %1595 to i64*
  %1597 = load i64, i64* %1596, align 8
  %1598 = bitcast %"class.v8::internal::compiler::CompilationDependency"** %1594 to i64*
  store i64 %1597, i64* %1598, align 8
  %1599 = icmp eq %"class.v8::internal::compiler::CompilationDependency"** %1595, %1427
  br i1 %1599, label %1600, label %1556, !llvm.loop !361

1600:                                             ; preds = %1551, %1556, %1528, %1417
  %1601 = phi %"class.v8::internal::compiler::CompilationDependency"** [ %1420, %1417 ], [ %1454, %1528 ], [ %1552, %1551 ], [ %1594, %1556 ]
  %1602 = ptrtoint %"class.v8::internal::compiler::CompilationDependency"** %1601 to i64
  store i64 %1602, i64* %1381, align 8
  store i64 %1425, i64* %1380, align 8
  store i64 %1422, i64* %1390, align 8
  br label %1603

1603:                                             ; preds = %1373, %1600
  call void @_ZN2v88internal8compiler6MapRef20SerializeBackPointerEv(%"class.v8::internal::compiler::MapRef"* %1364) #8
  %1604 = load %"class.v8::internal::compiler::CompilationDependencies"*, %"class.v8::internal::compiler::CompilationDependencies"** %1362, align 8
  %1605 = call i32 @_ZN2v88internal8compiler23CompilationDependencies22DependOnFieldConstnessERKNS1_6MapRefENS0_13InternalIndexE(%"class.v8::internal::compiler::CompilationDependencies"* %1604, %"class.v8::internal::compiler::MapRef"* dereferenceable(16) %1364, i64 %106) #8
  switch i32 %1605, label %1614 [
    i32 0, label %1606
    i32 1, label %1610
  ]

1606:                                             ; preds = %1603
  %1607 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %245, align 8
  %1608 = ptrtoint i64* %98 to i64
  %1609 = ptrtoint i64* %4 to i64
  call void @_ZN2v88internal8compiler18PropertyAccessInfo9DataFieldEPNS0_4ZoneENS0_6HandleINS0_3MapEEEONS0_10ZoneVectorIPKNS1_21CompilationDependencyEEENS0_10FieldIndexENS0_14RepresentationENS1_4TypeES7_NS0_11MaybeHandleIS6_EENSH_INS0_8JSObjectEEESI_(%"class.v8::internal::compiler::PropertyAccessInfo"* sret %0, %"class.v8::internal::Zone"* %1607, i64* %2, %"class.v8::internal::ZoneVector.22"* nonnull dereferenceable(32) %9, i64 %218, i8 %175, i64 %1361, i64 %1608, i64 %1360, i64 %1609, i64 %1608)
  br label %1615

1610:                                             ; preds = %1603
  %1611 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %245, align 8
  %1612 = ptrtoint i64* %98 to i64
  %1613 = ptrtoint i64* %4 to i64
  call void @_ZN2v88internal8compiler18PropertyAccessInfo16FastDataConstantEPNS0_4ZoneENS0_6HandleINS0_3MapEEEONS0_10ZoneVectorIPKNS1_21CompilationDependencyEEENS0_10FieldIndexENS0_14RepresentationENS1_4TypeES7_NS0_11MaybeHandleIS6_EENSH_INS0_8JSObjectEEESI_(%"class.v8::internal::compiler::PropertyAccessInfo"* sret %0, %"class.v8::internal::Zone"* %1611, i64* %2, %"class.v8::internal::ZoneVector.22"* nonnull dereferenceable(32) %9, i64 %218, i8 %175, i64 %1361, i64 %1612, i64 %1360, i64 %1613, i64 %1612)
  br label %1615

1614:                                             ; preds = %1603
  call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.4, i64 0, i64 0)) #12
  unreachable

1615:                                             ; preds = %819, %1341, %798, %1610, %1606, %522, %256
  %1616 = getelementptr inbounds %"class.v8::internal::ZoneVector.22", %"class.v8::internal::ZoneVector.22"* %9, i64 0, i32 0, i32 0, i32 0
  %1617 = load %"class.v8::internal::compiler::CompilationDependency"**, %"class.v8::internal::compiler::CompilationDependency"*** %1616, align 8
  %1618 = icmp eq %"class.v8::internal::compiler::CompilationDependency"** %1617, null
  br i1 %1618, label %1623, label %1619

1619:                                             ; preds = %1615
  %1620 = ptrtoint %"class.v8::internal::compiler::CompilationDependency"** %1617 to i64
  %1621 = getelementptr inbounds %"class.v8::internal::ZoneVector.22", %"class.v8::internal::ZoneVector.22"* %9, i64 0, i32 0, i32 0, i32 1
  %1622 = bitcast %"class.v8::internal::compiler::CompilationDependency"*** %1621 to i64*
  store i64 %1620, i64* %1622, align 8
  br label %1623

1623:                                             ; preds = %1615, %1619
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %244) #8
  br label %1624

1624:                                             ; preds = %1623, %223
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %219) #8
  br label %1625

1625:                                             ; preds = %127, %150, %1624, %76
  ret void
}

declare zeroext i1 @_ZN2v88internal14IsSpecialIndexENS0_6StringE(i64) local_unnamed_addr #4

declare zeroext i1 @_ZN2v88internal8compiler6MapRef21TrySerializePrototypeEv(%"class.v8::internal::compiler::MapRef"*) local_unnamed_addr #4

declare { i8, i64 } @_ZN2v88internal3Map22GetConstructorFunctionES1_NS0_7ContextE(i64, i64) local_unnamed_addr #4

declare i64* @_ZNK2v88internal8compiler16NativeContextRef6objectEv(%"class.v8::internal::compiler::NativeContextRef"*) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64* @_ZN2v88internal8compiler12JSHeapBroker25CanonicalPersistentHandleINS0_8JSObjectEEENS0_6HandleIT_EES6_(%"class.v8::internal::compiler::JSHeapBroker"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca i16, align 2
  %4 = getelementptr inbounds %"class.v8::internal::compiler::JSHeapBroker", %"class.v8::internal::compiler::JSHeapBroker"* %0, i64 0, i32 15, i32 0, i32 0, i32 0
  %5 = load %"class.v8::internal::IdentityMap"*, %"class.v8::internal::IdentityMap"** %4, align 8
  %6 = icmp eq %"class.v8::internal::IdentityMap"* %5, null
  br i1 %6, label %46, label %7

7:                                                ; preds = %2
  %8 = bitcast %"class.v8::internal::IdentityMap"* %5 to %"class.v8::internal::IdentityMapBase"*
  %9 = and i64 %1, 3
  %10 = icmp eq i64 %9, 1
  br i1 %10, label %11, label %24

11:                                               ; preds = %7
  %12 = bitcast i16* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 2, i8* nonnull %12) #8
  %13 = getelementptr inbounds %"class.v8::internal::compiler::JSHeapBroker", %"class.v8::internal::compiler::JSHeapBroker"* %0, i64 0, i32 4
  %14 = call zeroext i1 @_ZNK2v88internal12RootIndexMap6LookupEmPNS0_9RootIndexE(%"class.v8::internal::RootIndexMap"* %13, i64 %1, i16* nonnull %3) #8
  br i1 %14, label %15, label %21

15:                                               ; preds = %11
  %16 = getelementptr inbounds %"class.v8::internal::compiler::JSHeapBroker", %"class.v8::internal::compiler::JSHeapBroker"* %0, i64 0, i32 0
  %17 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %16, align 8
  %18 = load i16, i16* %3, align 2
  %19 = zext i16 %18 to i64
  %20 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %17, i64 0, i32 0, i32 7, i32 0, i64 %19
  call void @llvm.lifetime.end.p0i8(i64 2, i8* nonnull %12) #8
  br label %67

21:                                               ; preds = %11
  call void @llvm.lifetime.end.p0i8(i64 2, i8* nonnull %12) #8
  %22 = bitcast %"class.v8::internal::IdentityMap"** %4 to %"class.v8::internal::IdentityMapBase"**
  %23 = load %"class.v8::internal::IdentityMapBase"*, %"class.v8::internal::IdentityMapBase"** %22, align 8
  br label %24

24:                                               ; preds = %7, %21
  %25 = phi %"class.v8::internal::IdentityMapBase"* [ %23, %21 ], [ %8, %7 ]
  %26 = call { i64*, i8 } @_ZN2v88internal15IdentityMapBase17FindOrInsertEntryEm(%"class.v8::internal::IdentityMapBase"* %25, i64 %1) #8
  %27 = extractvalue { i64*, i8 } %26, 0
  %28 = extractvalue { i64*, i8 } %26, 1
  %29 = bitcast i64* %27 to i64**
  %30 = and i8 %28, 1
  %31 = icmp eq i8 %30, 0
  br i1 %31, label %34, label %32

32:                                               ; preds = %24
  %33 = load i64*, i64** %29, align 8
  br label %67

34:                                               ; preds = %24
  %35 = getelementptr inbounds %"class.v8::internal::compiler::JSHeapBroker", %"class.v8::internal::compiler::JSHeapBroker"* %0, i64 0, i32 14
  %36 = load %"class.v8::internal::LocalIsolate"*, %"class.v8::internal::LocalIsolate"** %35, align 8
  %37 = getelementptr inbounds %"class.v8::internal::LocalIsolate", %"class.v8::internal::LocalIsolate"* %36, i64 0, i32 1, i32 8, i32 0, i32 0, i32 0
  %38 = load %"class.v8::internal::PersistentHandles"*, %"class.v8::internal::PersistentHandles"** %37, align 8
  %39 = icmp eq %"class.v8::internal::PersistentHandles"* %38, null
  br i1 %39, label %40, label %43

40:                                               ; preds = %34
  %41 = getelementptr inbounds %"class.v8::internal::LocalIsolate", %"class.v8::internal::LocalIsolate"* %36, i64 0, i32 1
  call void @_ZN2v88internal9LocalHeap23EnsurePersistentHandlesEv(%"class.v8::internal::LocalHeap"* %41) #8
  %42 = load %"class.v8::internal::PersistentHandles"*, %"class.v8::internal::PersistentHandles"** %37, align 8
  br label %43

43:                                               ; preds = %34, %40
  %44 = phi %"class.v8::internal::PersistentHandles"* [ %38, %34 ], [ %42, %40 ]
  %45 = call i64* @_ZN2v88internal17PersistentHandles9GetHandleEm(%"class.v8::internal::PersistentHandles"* %44, i64 %1) #8
  store i64* %45, i64** %29, align 8
  br label %67

46:                                               ; preds = %2
  %47 = getelementptr inbounds %"class.v8::internal::compiler::JSHeapBroker", %"class.v8::internal::compiler::JSHeapBroker"* %0, i64 0, i32 0
  %48 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %47, align 8
  %49 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %48, i64 0, i32 31, i32 4
  %50 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %49, align 8
  %51 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %50, null
  br i1 %51, label %54, label %52

52:                                               ; preds = %46
  %53 = tail call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %50, i64 %1) #8
  br label %67

54:                                               ; preds = %46
  %55 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %48, i64 0, i32 31, i32 0
  %56 = load i64*, i64** %55, align 8
  %57 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %48, i64 0, i32 31, i32 1
  %58 = load i64*, i64** %57, align 8
  %59 = icmp eq i64* %56, %58
  br i1 %59, label %60, label %62

60:                                               ; preds = %54
  %61 = tail call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %48) #8
  br label %62

62:                                               ; preds = %60, %54
  %63 = phi i64* [ %61, %60 ], [ %56, %54 ]
  %64 = ptrtoint i64* %63 to i64
  %65 = add i64 %64, 8
  %66 = inttoptr i64 %65 to i64*
  store i64* %66, i64** %55, align 8
  store i64 %1, i64* %63, align 8
  br label %67

67:                                               ; preds = %43, %32, %62, %52, %15
  %68 = phi i64* [ %20, %15 ], [ %53, %52 ], [ %63, %62 ], [ %33, %32 ], [ %45, %43 ]
  ret i64* %68
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK2v88internal8compiler17AccessInfoFactory32FinalizePropertyAccessInfosAsOneENS0_10ZoneVectorINS1_18PropertyAccessInfoEEENS1_10AccessModeE(%"class.v8::internal::compiler::PropertyAccessInfo"* noalias sret, %"class.v8::internal::compiler::AccessInfoFactory"* nocapture readonly, %"class.v8::internal::ZoneVector.1312"* nocapture readonly, i32) local_unnamed_addr #0 align 2 {
  %5 = alloca %"class.v8::internal::ZoneVector.1312", align 8
  %6 = alloca %"class.v8::internal::ZoneVector.1312", align 8
  %7 = bitcast %"class.v8::internal::ZoneVector.1312"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %7) #8
  %8 = getelementptr inbounds %"class.v8::internal::compiler::AccessInfoFactory", %"class.v8::internal::compiler::AccessInfoFactory"* %1, i64 0, i32 3
  %9 = bitcast %"class.v8::internal::Zone"** %8 to i64*
  %10 = load i64, i64* %9, align 8
  %11 = getelementptr inbounds %"class.v8::internal::ZoneVector.1312", %"class.v8::internal::ZoneVector.1312"* %5, i64 0, i32 0, i32 0, i32 2, i32 1
  %12 = bitcast %"struct.std::__1::__compressed_pair_elem.1317"* %11 to i64*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %7, i8 0, i64 24, i1 false) #8
  store i64 %10, i64* %12, align 8
  %13 = getelementptr inbounds %"class.v8::internal::ZoneVector.1312", %"class.v8::internal::ZoneVector.1312"* %2, i64 0, i32 0, i32 0, i32 2, i32 1, i32 0, i32 0
  %14 = bitcast %"class.v8::internal::Zone"** %13 to i64*
  %15 = load i64, i64* %14, align 8
  %16 = getelementptr inbounds %"class.v8::internal::ZoneVector.1312", %"class.v8::internal::ZoneVector.1312"* %6, i64 0, i32 0, i32 0, i32 2, i32 1
  %17 = bitcast %"struct.std::__1::__compressed_pair_elem.1317"* %16 to i64*
  %18 = bitcast %"class.v8::internal::ZoneVector.1312"* %6 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %18, i8 0, i64 24, i1 false) #8
  store i64 %15, i64* %17, align 8
  %19 = getelementptr inbounds %"class.v8::internal::ZoneVector.1312", %"class.v8::internal::ZoneVector.1312"* %2, i64 0, i32 0, i32 0, i32 1
  %20 = bitcast %"class.v8::internal::compiler::PropertyAccessInfo"** %19 to i64*
  %21 = load i64, i64* %20, align 8
  %22 = bitcast %"class.v8::internal::ZoneVector.1312"* %2 to i64*
  %23 = load i64, i64* %22, align 8
  %24 = sub i64 %21, %23
  %25 = sdiv exact i64 %24, 152
  %26 = icmp eq i64 %24, 0
  %27 = inttoptr i64 %15 to %"class.v8::internal::Zone"*
  br i1 %26, label %101, label %28

28:                                               ; preds = %4
  %29 = icmp ugt i64 %25, 14128181
  br i1 %29, label %30, label %32

30:                                               ; preds = %28
  %31 = bitcast %"class.v8::internal::ZoneVector.1312"* %6 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %31) #12
  unreachable

32:                                               ; preds = %28
  %33 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %27, i64 0, i32 2
  %34 = load i64, i64* %33, align 8
  %35 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %27, i64 0, i32 3
  %36 = load i64, i64* %35, align 8
  %37 = sub i64 %36, %34
  %38 = icmp ugt i64 %24, %37
  br i1 %38, label %39, label %41, !prof !2

39:                                               ; preds = %32
  %40 = tail call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %27, i64 %24) #8
  br label %43

41:                                               ; preds = %32
  %42 = add i64 %34, %24
  store i64 %42, i64* %33, align 8
  br label %43

43:                                               ; preds = %41, %39
  %44 = phi i64 [ %40, %39 ], [ %34, %41 ]
  %45 = inttoptr i64 %44 to %"class.v8::internal::compiler::PropertyAccessInfo"*
  %46 = getelementptr inbounds %"class.v8::internal::ZoneVector.1312", %"class.v8::internal::ZoneVector.1312"* %6, i64 0, i32 0, i32 0, i32 1
  store %"class.v8::internal::compiler::PropertyAccessInfo"* %45, %"class.v8::internal::compiler::PropertyAccessInfo"** %46, align 8
  %47 = getelementptr inbounds %"class.v8::internal::ZoneVector.1312", %"class.v8::internal::ZoneVector.1312"* %6, i64 0, i32 0, i32 0, i32 0
  store %"class.v8::internal::compiler::PropertyAccessInfo"* %45, %"class.v8::internal::compiler::PropertyAccessInfo"** %47, align 8
  %48 = getelementptr inbounds %"class.v8::internal::compiler::PropertyAccessInfo", %"class.v8::internal::compiler::PropertyAccessInfo"* %45, i64 %25
  %49 = getelementptr inbounds %"class.v8::internal::ZoneVector.1312", %"class.v8::internal::ZoneVector.1312"* %6, i64 0, i32 0, i32 0, i32 2, i32 0, i32 0
  store %"class.v8::internal::compiler::PropertyAccessInfo"* %48, %"class.v8::internal::compiler::PropertyAccessInfo"** %49, align 8
  %50 = getelementptr inbounds %"class.v8::internal::ZoneVector.1312", %"class.v8::internal::ZoneVector.1312"* %2, i64 0, i32 0, i32 0, i32 0
  %51 = load %"class.v8::internal::compiler::PropertyAccessInfo"*, %"class.v8::internal::compiler::PropertyAccessInfo"** %50, align 8
  %52 = load %"class.v8::internal::compiler::PropertyAccessInfo"*, %"class.v8::internal::compiler::PropertyAccessInfo"** %19, align 8
  %53 = bitcast %"class.v8::internal::compiler::PropertyAccessInfo"** %46 to i64*
  %54 = icmp eq %"class.v8::internal::compiler::PropertyAccessInfo"* %51, %52
  br i1 %54, label %55, label %56

55:                                               ; preds = %43
  store i64 %44, i64* %53, align 8
  br label %101

56:                                               ; preds = %43, %56
  %57 = phi %"class.v8::internal::compiler::PropertyAccessInfo"* [ %60, %56 ], [ %45, %43 ]
  %58 = phi %"class.v8::internal::compiler::PropertyAccessInfo"* [ %59, %56 ], [ %51, %43 ]
  tail call void @_ZN2v88internal8compiler18PropertyAccessInfoC2ERKS2_(%"class.v8::internal::compiler::PropertyAccessInfo"* %57, %"class.v8::internal::compiler::PropertyAccessInfo"* dereferenceable(152) %58) #8
  %59 = getelementptr inbounds %"class.v8::internal::compiler::PropertyAccessInfo", %"class.v8::internal::compiler::PropertyAccessInfo"* %58, i64 1
  %60 = getelementptr inbounds %"class.v8::internal::compiler::PropertyAccessInfo", %"class.v8::internal::compiler::PropertyAccessInfo"* %57, i64 1
  %61 = icmp eq %"class.v8::internal::compiler::PropertyAccessInfo"* %59, %52
  br i1 %61, label %62, label %56

62:                                               ; preds = %56
  %63 = ptrtoint %"class.v8::internal::compiler::PropertyAccessInfo"* %60 to i64
  store i64 %63, i64* %53, align 8
  %64 = getelementptr inbounds %"class.v8::internal::ZoneVector.1312", %"class.v8::internal::ZoneVector.1312"* %6, i64 0, i32 0, i32 0, i32 0
  %65 = getelementptr inbounds %"class.v8::internal::ZoneVector.1312", %"class.v8::internal::ZoneVector.1312"* %6, i64 0, i32 0, i32 0, i32 1
  %66 = icmp eq %"class.v8::internal::compiler::PropertyAccessInfo"* %60, %45
  br i1 %66, label %101, label %67

67:                                               ; preds = %62
  %68 = getelementptr inbounds %"class.v8::internal::ZoneVector.1312", %"class.v8::internal::ZoneVector.1312"* %5, i64 0, i32 0, i32 0, i32 1
  %69 = getelementptr inbounds %"class.v8::internal::ZoneVector.1312", %"class.v8::internal::ZoneVector.1312"* %5, i64 0, i32 0, i32 0, i32 2, i32 0, i32 0
  %70 = bitcast %"class.v8::internal::compiler::PropertyAccessInfo"** %68 to i64*
  %71 = getelementptr inbounds %"class.v8::internal::ZoneVector.1312", %"class.v8::internal::ZoneVector.1312"* %5, i64 0, i32 0
  br label %81

72:                                               ; preds = %100
  %73 = getelementptr inbounds %"class.v8::internal::ZoneVector.1312", %"class.v8::internal::ZoneVector.1312"* %5, i64 0, i32 0, i32 0, i32 0
  %74 = load %"class.v8::internal::compiler::PropertyAccessInfo"*, %"class.v8::internal::compiler::PropertyAccessInfo"** %73, align 8
  %75 = load %"class.v8::internal::compiler::PropertyAccessInfo"*, %"class.v8::internal::compiler::PropertyAccessInfo"** %68, align 8
  %76 = ptrtoint %"class.v8::internal::compiler::PropertyAccessInfo"* %75 to i64
  %77 = ptrtoint %"class.v8::internal::compiler::PropertyAccessInfo"* %74 to i64
  %78 = getelementptr inbounds %"class.v8::internal::ZoneVector.1312", %"class.v8::internal::ZoneVector.1312"* %5, i64 0, i32 0, i32 0, i32 0
  %79 = getelementptr inbounds %"class.v8::internal::ZoneVector.1312", %"class.v8::internal::ZoneVector.1312"* %5, i64 0, i32 0, i32 0, i32 1
  %80 = icmp eq %"class.v8::internal::compiler::PropertyAccessInfo"* %74, %75
  br i1 %80, label %101, label %102, !prof !2

81:                                               ; preds = %100, %67
  %82 = phi %"class.v8::internal::compiler::PropertyAccessInfo"* [ %45, %67 ], [ %83, %100 ]
  %83 = getelementptr inbounds %"class.v8::internal::compiler::PropertyAccessInfo", %"class.v8::internal::compiler::PropertyAccessInfo"* %82, i64 1
  %84 = icmp eq %"class.v8::internal::compiler::PropertyAccessInfo"* %82, %57
  br i1 %84, label %92, label %88

85:                                               ; preds = %88
  %86 = getelementptr inbounds %"class.v8::internal::compiler::PropertyAccessInfo", %"class.v8::internal::compiler::PropertyAccessInfo"* %89, i64 1
  %87 = icmp eq %"class.v8::internal::compiler::PropertyAccessInfo"* %89, %57
  br i1 %87, label %92, label %88

88:                                               ; preds = %81, %85
  %89 = phi %"class.v8::internal::compiler::PropertyAccessInfo"* [ %86, %85 ], [ %83, %81 ]
  %90 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %8, align 8
  %91 = call zeroext i1 @_ZN2v88internal8compiler18PropertyAccessInfo5MergeEPKS2_NS1_10AccessModeEPNS0_4ZoneE(%"class.v8::internal::compiler::PropertyAccessInfo"* %89, %"class.v8::internal::compiler::PropertyAccessInfo"* %82, i32 %3, %"class.v8::internal::Zone"* %90) #8
  br i1 %91, label %100, label %85

92:                                               ; preds = %85, %81
  %93 = load %"class.v8::internal::compiler::PropertyAccessInfo"*, %"class.v8::internal::compiler::PropertyAccessInfo"** %68, align 8
  %94 = load %"class.v8::internal::compiler::PropertyAccessInfo"*, %"class.v8::internal::compiler::PropertyAccessInfo"** %69, align 8
  %95 = icmp eq %"class.v8::internal::compiler::PropertyAccessInfo"* %93, %94
  br i1 %95, label %99, label %96

96:                                               ; preds = %92
  call void @_ZN2v88internal8compiler18PropertyAccessInfoC2ERKS2_(%"class.v8::internal::compiler::PropertyAccessInfo"* %93, %"class.v8::internal::compiler::PropertyAccessInfo"* dereferenceable(152) %82) #8
  %97 = getelementptr inbounds %"class.v8::internal::compiler::PropertyAccessInfo", %"class.v8::internal::compiler::PropertyAccessInfo"* %93, i64 1
  %98 = ptrtoint %"class.v8::internal::compiler::PropertyAccessInfo"* %97 to i64
  store i64 %98, i64* %70, align 8
  br label %100

99:                                               ; preds = %92
  call void @_ZNSt3__16vectorIN2v88internal8compiler18PropertyAccessInfoENS2_13ZoneAllocatorIS4_EEE21__push_back_slow_pathIRKS4_EEvOT_(%"class.std::__1::vector.1313"* nonnull %71, %"class.v8::internal::compiler::PropertyAccessInfo"* dereferenceable(152) %82) #8
  br label %100

100:                                              ; preds = %88, %99, %96
  br i1 %84, label %72, label %81

101:                                              ; preds = %4, %55, %62, %72
  call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.5, i64 0, i64 0), i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.12, i64 0, i64 0)) #12
  unreachable

102:                                              ; preds = %72
  %103 = load %"class.v8::internal::compiler::PropertyAccessInfo"*, %"class.v8::internal::compiler::PropertyAccessInfo"** %64, align 8
  %104 = icmp eq %"class.v8::internal::compiler::PropertyAccessInfo"* %103, null
  br i1 %104, label %137, label %105

105:                                              ; preds = %102
  %106 = load %"class.v8::internal::compiler::PropertyAccessInfo"*, %"class.v8::internal::compiler::PropertyAccessInfo"** %65, align 8
  %107 = icmp eq %"class.v8::internal::compiler::PropertyAccessInfo"* %106, %103
  br i1 %107, label %133, label %108

108:                                              ; preds = %105, %126
  %109 = phi %"class.v8::internal::compiler::PropertyAccessInfo"* [ %110, %126 ], [ %106, %105 ]
  %110 = getelementptr inbounds %"class.v8::internal::compiler::PropertyAccessInfo", %"class.v8::internal::compiler::PropertyAccessInfo"* %109, i64 -1
  %111 = getelementptr inbounds %"class.v8::internal::compiler::PropertyAccessInfo", %"class.v8::internal::compiler::PropertyAccessInfo"* %109, i64 -1, i32 4, i32 0, i32 0, i32 0
  %112 = load %"class.v8::internal::compiler::CompilationDependency"**, %"class.v8::internal::compiler::CompilationDependency"*** %111, align 8
  %113 = icmp eq %"class.v8::internal::compiler::CompilationDependency"** %112, null
  br i1 %113, label %118, label %114

114:                                              ; preds = %108
  %115 = ptrtoint %"class.v8::internal::compiler::CompilationDependency"** %112 to i64
  %116 = getelementptr inbounds %"class.v8::internal::compiler::PropertyAccessInfo", %"class.v8::internal::compiler::PropertyAccessInfo"* %109, i64 -1, i32 4, i32 0, i32 0, i32 1
  %117 = bitcast %"class.v8::internal::compiler::CompilationDependency"*** %116 to i64*
  store i64 %115, i64* %117, align 8
  br label %118

118:                                              ; preds = %114, %108
  %119 = getelementptr inbounds %"class.v8::internal::compiler::PropertyAccessInfo", %"class.v8::internal::compiler::PropertyAccessInfo"* %109, i64 -1, i32 1, i32 0, i32 0, i32 0
  %120 = load %"class.v8::internal::Handle"*, %"class.v8::internal::Handle"** %119, align 8
  %121 = icmp eq %"class.v8::internal::Handle"* %120, null
  br i1 %121, label %126, label %122

122:                                              ; preds = %118
  %123 = ptrtoint %"class.v8::internal::Handle"* %120 to i64
  %124 = getelementptr inbounds %"class.v8::internal::compiler::PropertyAccessInfo", %"class.v8::internal::compiler::PropertyAccessInfo"* %109, i64 -1, i32 1, i32 0, i32 0, i32 1
  %125 = bitcast %"class.v8::internal::Handle"** %124 to i64*
  store i64 %123, i64* %125, align 8
  br label %126

126:                                              ; preds = %122, %118
  %127 = icmp eq %"class.v8::internal::compiler::PropertyAccessInfo"* %110, %103
  br i1 %127, label %128, label %108

128:                                              ; preds = %126
  %129 = bitcast %"class.v8::internal::compiler::PropertyAccessInfo"** %79 to i64*
  %130 = load i64, i64* %129, align 8
  %131 = bitcast %"class.v8::internal::ZoneVector.1312"* %5 to i64*
  %132 = load i64, i64* %131, align 8
  br label %133

133:                                              ; preds = %105, %128
  %134 = phi i64 [ %132, %128 ], [ %77, %105 ]
  %135 = phi i64 [ %130, %128 ], [ %76, %105 ]
  store %"class.v8::internal::compiler::PropertyAccessInfo"* %103, %"class.v8::internal::compiler::PropertyAccessInfo"** %65, align 8
  %136 = inttoptr i64 %134 to %"class.v8::internal::compiler::PropertyAccessInfo"*
  br label %137

137:                                              ; preds = %102, %133
  %138 = phi %"class.v8::internal::compiler::PropertyAccessInfo"* [ %136, %133 ], [ %74, %102 ]
  %139 = phi i64 [ %134, %133 ], [ %77, %102 ]
  %140 = phi i64 [ %135, %133 ], [ %76, %102 ]
  %141 = sub i64 %140, %139
  %142 = icmp eq i64 %141, 152
  br i1 %142, label %143, label %170

143:                                              ; preds = %137
  %144 = getelementptr inbounds %"class.v8::internal::compiler::PropertyAccessInfo", %"class.v8::internal::compiler::PropertyAccessInfo"* %138, i64 0, i32 0
  %145 = load i32, i32* %144, align 8
  %146 = icmp eq i32 %145, 0
  br i1 %146, label %170, label %147

147:                                              ; preds = %143
  %148 = getelementptr inbounds %"class.v8::internal::compiler::AccessInfoFactory", %"class.v8::internal::compiler::AccessInfoFactory"* %1, i64 0, i32 1
  %149 = load %"class.v8::internal::compiler::CompilationDependencies"*, %"class.v8::internal::compiler::CompilationDependencies"** %148, align 8
  %150 = getelementptr inbounds %"class.v8::internal::compiler::PropertyAccessInfo", %"class.v8::internal::compiler::PropertyAccessInfo"* %138, i64 0, i32 4, i32 0
  %151 = getelementptr inbounds %"class.std::__1::vector.23", %"class.std::__1::vector.23"* %150, i64 0, i32 0, i32 0
  %152 = load %"class.v8::internal::compiler::CompilationDependency"**, %"class.v8::internal::compiler::CompilationDependency"*** %151, align 8
  %153 = getelementptr inbounds %"class.v8::internal::compiler::PropertyAccessInfo", %"class.v8::internal::compiler::PropertyAccessInfo"* %138, i64 0, i32 4, i32 0, i32 0, i32 1
  %154 = load %"class.v8::internal::compiler::CompilationDependency"**, %"class.v8::internal::compiler::CompilationDependency"*** %153, align 8
  %155 = icmp eq %"class.v8::internal::compiler::CompilationDependency"** %152, %154
  br i1 %155, label %156, label %161

156:                                              ; preds = %147
  %157 = ptrtoint %"class.v8::internal::compiler::CompilationDependency"** %152 to i64
  br label %166

158:                                              ; preds = %161
  %159 = bitcast %"class.std::__1::vector.23"* %150 to i64*
  %160 = load i64, i64* %159, align 8
  br label %166

161:                                              ; preds = %147, %161
  %162 = phi %"class.v8::internal::compiler::CompilationDependency"** [ %164, %161 ], [ %152, %147 ]
  %163 = load %"class.v8::internal::compiler::CompilationDependency"*, %"class.v8::internal::compiler::CompilationDependency"** %162, align 8
  call void @_ZN2v88internal8compiler23CompilationDependencies16RecordDependencyEPKNS1_21CompilationDependencyE(%"class.v8::internal::compiler::CompilationDependencies"* %149, %"class.v8::internal::compiler::CompilationDependency"* %163) #8
  %164 = getelementptr inbounds %"class.v8::internal::compiler::CompilationDependency"*, %"class.v8::internal::compiler::CompilationDependency"** %162, i64 1
  %165 = icmp eq %"class.v8::internal::compiler::CompilationDependency"** %164, %154
  br i1 %165, label %158, label %161

166:                                              ; preds = %156, %158
  %167 = phi i64 [ %160, %158 ], [ %157, %156 ]
  %168 = bitcast %"class.v8::internal::compiler::CompilationDependency"*** %153 to i64*
  store i64 %167, i64* %168, align 8
  call void @_ZN2v88internal8compiler18PropertyAccessInfoC2ERKS2_(%"class.v8::internal::compiler::PropertyAccessInfo"* %0, %"class.v8::internal::compiler::PropertyAccessInfo"* dereferenceable(152) %138)
  %169 = load %"class.v8::internal::compiler::PropertyAccessInfo"*, %"class.v8::internal::compiler::PropertyAccessInfo"** %78, align 8
  br label %188

170:                                              ; preds = %143, %137
  %171 = load i64, i64* %9, align 8, !noalias !362
  %172 = getelementptr inbounds %"class.v8::internal::compiler::PropertyAccessInfo", %"class.v8::internal::compiler::PropertyAccessInfo"* %0, i64 0, i32 0
  store i32 0, i32* %172, align 8, !alias.scope !365
  %173 = getelementptr inbounds %"class.v8::internal::compiler::PropertyAccessInfo", %"class.v8::internal::compiler::PropertyAccessInfo"* %0, i64 0, i32 1
  %174 = getelementptr inbounds %"class.v8::internal::compiler::PropertyAccessInfo", %"class.v8::internal::compiler::PropertyAccessInfo"* %0, i64 0, i32 1, i32 0, i32 0, i32 2, i32 1
  %175 = bitcast %"struct.std::__1::__compressed_pair_elem.0"* %174 to i64*
  %176 = bitcast %"class.v8::internal::ZoneVector"* %173 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %176, i8 0, i64 24, i1 false) #8, !alias.scope !365
  store i64 %171, i64* %175, align 8, !alias.scope !365
  %177 = getelementptr inbounds %"class.v8::internal::compiler::PropertyAccessInfo", %"class.v8::internal::compiler::PropertyAccessInfo"* %0, i64 0, i32 2, i32 0, i32 0
  %178 = getelementptr inbounds %"class.v8::internal::compiler::PropertyAccessInfo", %"class.v8::internal::compiler::PropertyAccessInfo"* %0, i64 0, i32 4, i32 0, i32 0, i32 2, i32 1
  %179 = bitcast %"struct.std::__1::__compressed_pair_elem.27"* %178 to i64*
  %180 = bitcast i64** %177 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %180, i8 0, i64 40, i1 false) #8, !alias.scope !365
  store i64 %171, i64* %179, align 8, !alias.scope !365
  %181 = getelementptr inbounds %"class.v8::internal::compiler::PropertyAccessInfo", %"class.v8::internal::compiler::PropertyAccessInfo"* %0, i64 0, i32 5, i32 0
  %182 = getelementptr inbounds %"class.v8::internal::compiler::PropertyAccessInfo", %"class.v8::internal::compiler::PropertyAccessInfo"* %0, i64 0, i32 8, i32 0
  %183 = bitcast i64** %181 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %183, i8 0, i64 17, i1 false) #8, !alias.scope !365
  store i64 1, i64* %182, align 8, !alias.scope !365
  %184 = getelementptr inbounds %"class.v8::internal::compiler::PropertyAccessInfo", %"class.v8::internal::compiler::PropertyAccessInfo"* %0, i64 0, i32 9, i32 0
  %185 = getelementptr inbounds %"class.v8::internal::compiler::PropertyAccessInfo", %"class.v8::internal::compiler::PropertyAccessInfo"* %0, i64 0, i32 11, i32 0
  %186 = bitcast i64** %184 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %186, i8 0, i64 16, i1 false) #8, !alias.scope !365
  store i64 -1, i64* %185, align 8, !alias.scope !365
  %187 = getelementptr inbounds %"class.v8::internal::compiler::PropertyAccessInfo", %"class.v8::internal::compiler::PropertyAccessInfo"* %0, i64 0, i32 12, i32 0
  store i64* null, i64** %187, align 8, !alias.scope !365
  br label %188

188:                                              ; preds = %166, %170
  %189 = phi %"class.v8::internal::compiler::PropertyAccessInfo"* [ %169, %166 ], [ %138, %170 ]
  %190 = icmp eq %"class.v8::internal::compiler::PropertyAccessInfo"* %189, null
  br i1 %190, label %215, label %191

191:                                              ; preds = %188
  %192 = load %"class.v8::internal::compiler::PropertyAccessInfo"*, %"class.v8::internal::compiler::PropertyAccessInfo"** %79, align 8
  %193 = icmp eq %"class.v8::internal::compiler::PropertyAccessInfo"* %192, %189
  br i1 %193, label %214, label %194

194:                                              ; preds = %191, %212
  %195 = phi %"class.v8::internal::compiler::PropertyAccessInfo"* [ %196, %212 ], [ %192, %191 ]
  %196 = getelementptr inbounds %"class.v8::internal::compiler::PropertyAccessInfo", %"class.v8::internal::compiler::PropertyAccessInfo"* %195, i64 -1
  %197 = getelementptr inbounds %"class.v8::internal::compiler::PropertyAccessInfo", %"class.v8::internal::compiler::PropertyAccessInfo"* %195, i64 -1, i32 4, i32 0, i32 0, i32 0
  %198 = load %"class.v8::internal::compiler::CompilationDependency"**, %"class.v8::internal::compiler::CompilationDependency"*** %197, align 8
  %199 = icmp eq %"class.v8::internal::compiler::CompilationDependency"** %198, null
  br i1 %199, label %204, label %200

200:                                              ; preds = %194
  %201 = ptrtoint %"class.v8::internal::compiler::CompilationDependency"** %198 to i64
  %202 = getelementptr inbounds %"class.v8::internal::compiler::PropertyAccessInfo", %"class.v8::internal::compiler::PropertyAccessInfo"* %195, i64 -1, i32 4, i32 0, i32 0, i32 1
  %203 = bitcast %"class.v8::internal::compiler::CompilationDependency"*** %202 to i64*
  store i64 %201, i64* %203, align 8
  br label %204

204:                                              ; preds = %200, %194
  %205 = getelementptr inbounds %"class.v8::internal::compiler::PropertyAccessInfo", %"class.v8::internal::compiler::PropertyAccessInfo"* %195, i64 -1, i32 1, i32 0, i32 0, i32 0
  %206 = load %"class.v8::internal::Handle"*, %"class.v8::internal::Handle"** %205, align 8
  %207 = icmp eq %"class.v8::internal::Handle"* %206, null
  br i1 %207, label %212, label %208

208:                                              ; preds = %204
  %209 = ptrtoint %"class.v8::internal::Handle"* %206 to i64
  %210 = getelementptr inbounds %"class.v8::internal::compiler::PropertyAccessInfo", %"class.v8::internal::compiler::PropertyAccessInfo"* %195, i64 -1, i32 1, i32 0, i32 0, i32 1
  %211 = bitcast %"class.v8::internal::Handle"** %210 to i64*
  store i64 %209, i64* %211, align 8
  br label %212

212:                                              ; preds = %208, %204
  %213 = icmp eq %"class.v8::internal::compiler::PropertyAccessInfo"* %196, %189
  br i1 %213, label %214, label %194

214:                                              ; preds = %212, %191
  store %"class.v8::internal::compiler::PropertyAccessInfo"* %189, %"class.v8::internal::compiler::PropertyAccessInfo"** %79, align 8
  br label %215

215:                                              ; preds = %188, %214
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %7) #8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK2v88internal8compiler17AccessInfoFactory24MergePropertyAccessInfosENS0_10ZoneVectorINS1_18PropertyAccessInfoEEENS1_10AccessModeEPS5_(%"class.v8::internal::compiler::AccessInfoFactory"* nocapture readonly, %"class.v8::internal::ZoneVector.1312"* nocapture readonly, i32, %"class.v8::internal::ZoneVector.1312"*) local_unnamed_addr #0 align 2 {
  %5 = getelementptr inbounds %"class.v8::internal::ZoneVector.1312", %"class.v8::internal::ZoneVector.1312"* %1, i64 0, i32 0, i32 0, i32 0
  %6 = load %"class.v8::internal::compiler::PropertyAccessInfo"*, %"class.v8::internal::compiler::PropertyAccessInfo"** %5, align 8
  %7 = getelementptr inbounds %"class.v8::internal::ZoneVector.1312", %"class.v8::internal::ZoneVector.1312"* %1, i64 0, i32 0, i32 0, i32 1
  %8 = load %"class.v8::internal::compiler::PropertyAccessInfo"*, %"class.v8::internal::compiler::PropertyAccessInfo"** %7, align 8
  %9 = icmp eq %"class.v8::internal::compiler::PropertyAccessInfo"* %6, %8
  br i1 %9, label %16, label %10

10:                                               ; preds = %4
  %11 = getelementptr inbounds %"class.v8::internal::compiler::AccessInfoFactory", %"class.v8::internal::compiler::AccessInfoFactory"* %0, i64 0, i32 3
  %12 = getelementptr inbounds %"class.v8::internal::ZoneVector.1312", %"class.v8::internal::ZoneVector.1312"* %3, i64 0, i32 0, i32 0, i32 1
  %13 = getelementptr inbounds %"class.v8::internal::ZoneVector.1312", %"class.v8::internal::ZoneVector.1312"* %3, i64 0, i32 0, i32 0, i32 2, i32 0, i32 0
  %14 = bitcast %"class.v8::internal::compiler::PropertyAccessInfo"** %12 to i64*
  %15 = getelementptr inbounds %"class.v8::internal::ZoneVector.1312", %"class.v8::internal::ZoneVector.1312"* %3, i64 0, i32 0
  br label %22

16:                                               ; preds = %41, %4
  %17 = getelementptr inbounds %"class.v8::internal::ZoneVector.1312", %"class.v8::internal::ZoneVector.1312"* %3, i64 0, i32 0, i32 0, i32 0
  %18 = load %"class.v8::internal::compiler::PropertyAccessInfo"*, %"class.v8::internal::compiler::PropertyAccessInfo"** %17, align 8
  %19 = getelementptr inbounds %"class.v8::internal::ZoneVector.1312", %"class.v8::internal::ZoneVector.1312"* %3, i64 0, i32 0, i32 0, i32 1
  %20 = load %"class.v8::internal::compiler::PropertyAccessInfo"*, %"class.v8::internal::compiler::PropertyAccessInfo"** %19, align 8
  %21 = icmp eq %"class.v8::internal::compiler::PropertyAccessInfo"* %18, %20
  br i1 %21, label %42, label %43, !prof !2

22:                                               ; preds = %10, %41
  %23 = phi %"class.v8::internal::compiler::PropertyAccessInfo"* [ %6, %10 ], [ %24, %41 ]
  %24 = getelementptr inbounds %"class.v8::internal::compiler::PropertyAccessInfo", %"class.v8::internal::compiler::PropertyAccessInfo"* %23, i64 1
  %25 = icmp eq %"class.v8::internal::compiler::PropertyAccessInfo"* %24, %8
  br i1 %25, label %33, label %28

26:                                               ; preds = %28
  %27 = icmp eq %"class.v8::internal::compiler::PropertyAccessInfo"* %32, %8
  br i1 %27, label %33, label %28

28:                                               ; preds = %22, %26
  %29 = phi %"class.v8::internal::compiler::PropertyAccessInfo"* [ %32, %26 ], [ %24, %22 ]
  %30 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %11, align 8
  %31 = tail call zeroext i1 @_ZN2v88internal8compiler18PropertyAccessInfo5MergeEPKS2_NS1_10AccessModeEPNS0_4ZoneE(%"class.v8::internal::compiler::PropertyAccessInfo"* %29, %"class.v8::internal::compiler::PropertyAccessInfo"* %23, i32 %2, %"class.v8::internal::Zone"* %30)
  %32 = getelementptr inbounds %"class.v8::internal::compiler::PropertyAccessInfo", %"class.v8::internal::compiler::PropertyAccessInfo"* %29, i64 1
  br i1 %31, label %41, label %26

33:                                               ; preds = %26, %22
  %34 = load %"class.v8::internal::compiler::PropertyAccessInfo"*, %"class.v8::internal::compiler::PropertyAccessInfo"** %12, align 8
  %35 = load %"class.v8::internal::compiler::PropertyAccessInfo"*, %"class.v8::internal::compiler::PropertyAccessInfo"** %13, align 8
  %36 = icmp eq %"class.v8::internal::compiler::PropertyAccessInfo"* %34, %35
  br i1 %36, label %40, label %37

37:                                               ; preds = %33
  tail call void @_ZN2v88internal8compiler18PropertyAccessInfoC2ERKS2_(%"class.v8::internal::compiler::PropertyAccessInfo"* %34, %"class.v8::internal::compiler::PropertyAccessInfo"* dereferenceable(152) %23) #8
  %38 = getelementptr inbounds %"class.v8::internal::compiler::PropertyAccessInfo", %"class.v8::internal::compiler::PropertyAccessInfo"* %34, i64 1
  %39 = ptrtoint %"class.v8::internal::compiler::PropertyAccessInfo"* %38 to i64
  store i64 %39, i64* %14, align 8
  br label %41

40:                                               ; preds = %33
  tail call void @_ZNSt3__16vectorIN2v88internal8compiler18PropertyAccessInfoENS2_13ZoneAllocatorIS4_EEE21__push_back_slow_pathIRKS4_EEvOT_(%"class.std::__1::vector.1313"* %15, %"class.v8::internal::compiler::PropertyAccessInfo"* dereferenceable(152) %23) #8
  br label %41

41:                                               ; preds = %28, %40, %37
  br i1 %25, label %16, label %22

42:                                               ; preds = %16
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.5, i64 0, i64 0), i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.12, i64 0, i64 0)) #12
  unreachable

43:                                               ; preds = %16
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal8compiler18PropertyAccessInfo18RecordDependenciesEPNS1_23CompilationDependenciesE(%"class.v8::internal::compiler::PropertyAccessInfo"* nocapture, %"class.v8::internal::compiler::CompilationDependencies"*) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.v8::internal::compiler::PropertyAccessInfo", %"class.v8::internal::compiler::PropertyAccessInfo"* %0, i64 0, i32 4, i32 0
  %4 = getelementptr inbounds %"class.std::__1::vector.23", %"class.std::__1::vector.23"* %3, i64 0, i32 0, i32 0
  %5 = load %"class.v8::internal::compiler::CompilationDependency"**, %"class.v8::internal::compiler::CompilationDependency"*** %4, align 8
  %6 = getelementptr inbounds %"class.v8::internal::compiler::PropertyAccessInfo", %"class.v8::internal::compiler::PropertyAccessInfo"* %0, i64 0, i32 4, i32 0, i32 0, i32 1
  %7 = load %"class.v8::internal::compiler::CompilationDependency"**, %"class.v8::internal::compiler::CompilationDependency"*** %6, align 8
  %8 = icmp eq %"class.v8::internal::compiler::CompilationDependency"** %5, %7
  br i1 %8, label %9, label %17

9:                                                ; preds = %2
  %10 = ptrtoint %"class.v8::internal::compiler::CompilationDependency"** %5 to i64
  br label %14

11:                                               ; preds = %17
  %12 = bitcast %"class.std::__1::vector.23"* %3 to i64*
  %13 = load i64, i64* %12, align 8
  br label %14

14:                                               ; preds = %9, %11
  %15 = phi i64 [ %13, %11 ], [ %10, %9 ]
  %16 = bitcast %"class.v8::internal::compiler::CompilationDependency"*** %6 to i64*
  store i64 %15, i64* %16, align 8
  ret void

17:                                               ; preds = %2, %17
  %18 = phi %"class.v8::internal::compiler::CompilationDependency"** [ %20, %17 ], [ %5, %2 ]
  %19 = load %"class.v8::internal::compiler::CompilationDependency"*, %"class.v8::internal::compiler::CompilationDependency"** %18, align 8
  tail call void @_ZN2v88internal8compiler23CompilationDependencies16RecordDependencyEPKNS1_21CompilationDependencyE(%"class.v8::internal::compiler::CompilationDependencies"* %1, %"class.v8::internal::compiler::CompilationDependency"* %19) #8
  %20 = getelementptr inbounds %"class.v8::internal::compiler::CompilationDependency"*, %"class.v8::internal::compiler::CompilationDependency"** %18, i64 1
  %21 = icmp eq %"class.v8::internal::compiler::CompilationDependency"** %20, %7
  br i1 %21, label %11, label %17
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2v88internal8compiler18PropertyAccessInfoC2ERKS2_(%"class.v8::internal::compiler::PropertyAccessInfo"*, %"class.v8::internal::compiler::PropertyAccessInfo"* dereferenceable(152)) unnamed_addr #7 comdat align 2 {
  %3 = getelementptr inbounds %"class.v8::internal::compiler::PropertyAccessInfo", %"class.v8::internal::compiler::PropertyAccessInfo"* %0, i64 0, i32 0
  %4 = getelementptr inbounds %"class.v8::internal::compiler::PropertyAccessInfo", %"class.v8::internal::compiler::PropertyAccessInfo"* %1, i64 0, i32 0
  %5 = load i32, i32* %4, align 8
  store i32 %5, i32* %3, align 8
  %6 = getelementptr inbounds %"class.v8::internal::compiler::PropertyAccessInfo", %"class.v8::internal::compiler::PropertyAccessInfo"* %0, i64 0, i32 1
  %7 = getelementptr inbounds %"class.v8::internal::compiler::PropertyAccessInfo", %"class.v8::internal::compiler::PropertyAccessInfo"* %1, i64 0, i32 1
  %8 = getelementptr inbounds %"class.v8::internal::compiler::PropertyAccessInfo", %"class.v8::internal::compiler::PropertyAccessInfo"* %1, i64 0, i32 1, i32 0, i32 0, i32 2, i32 1, i32 0, i32 0
  %9 = bitcast %"class.v8::internal::Zone"** %8 to i64*
  %10 = load i64, i64* %9, align 8
  %11 = getelementptr inbounds %"class.v8::internal::compiler::PropertyAccessInfo", %"class.v8::internal::compiler::PropertyAccessInfo"* %0, i64 0, i32 1, i32 0, i32 0, i32 2, i32 1
  %12 = bitcast %"struct.std::__1::__compressed_pair_elem.0"* %11 to i64*
  %13 = bitcast %"class.v8::internal::ZoneVector"* %6 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %13, i8 0, i64 24, i1 false) #8
  store i64 %10, i64* %12, align 8
  %14 = getelementptr inbounds %"class.v8::internal::compiler::PropertyAccessInfo", %"class.v8::internal::compiler::PropertyAccessInfo"* %1, i64 0, i32 1, i32 0, i32 0, i32 1
  %15 = bitcast %"class.v8::internal::Handle"** %14 to i64*
  %16 = load i64, i64* %15, align 8
  %17 = bitcast %"class.v8::internal::ZoneVector"* %7 to i64*
  %18 = load i64, i64* %17, align 8
  %19 = sub i64 %16, %18
  %20 = ashr exact i64 %19, 3
  %21 = icmp eq i64 %19, 0
  %22 = inttoptr i64 %10 to %"class.v8::internal::Zone"*
  br i1 %21, label %130, label %23

23:                                               ; preds = %2
  %24 = icmp ugt i64 %20, 268435455
  br i1 %24, label %25, label %27

25:                                               ; preds = %23
  %26 = bitcast %"class.v8::internal::ZoneVector"* %6 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %26) #12
  unreachable

27:                                               ; preds = %23
  %28 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %22, i64 0, i32 2
  %29 = load i64, i64* %28, align 8
  %30 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %22, i64 0, i32 3
  %31 = load i64, i64* %30, align 8
  %32 = sub i64 %31, %29
  %33 = icmp ugt i64 %19, %32
  br i1 %33, label %34, label %36, !prof !2

34:                                               ; preds = %27
  %35 = tail call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %22, i64 %19) #8
  br label %38

36:                                               ; preds = %27
  %37 = add i64 %29, %19
  store i64 %37, i64* %28, align 8
  br label %38

38:                                               ; preds = %36, %34
  %39 = phi i64 [ %35, %34 ], [ %29, %36 ]
  %40 = inttoptr i64 %39 to %"class.v8::internal::Handle"*
  %41 = getelementptr inbounds %"class.v8::internal::compiler::PropertyAccessInfo", %"class.v8::internal::compiler::PropertyAccessInfo"* %0, i64 0, i32 1, i32 0, i32 0, i32 1
  store %"class.v8::internal::Handle"* %40, %"class.v8::internal::Handle"** %41, align 8
  %42 = getelementptr inbounds %"class.v8::internal::ZoneVector", %"class.v8::internal::ZoneVector"* %6, i64 0, i32 0, i32 0, i32 0
  store %"class.v8::internal::Handle"* %40, %"class.v8::internal::Handle"** %42, align 8
  %43 = getelementptr inbounds %"class.v8::internal::Handle", %"class.v8::internal::Handle"* %40, i64 %20
  %44 = getelementptr inbounds %"class.v8::internal::compiler::PropertyAccessInfo", %"class.v8::internal::compiler::PropertyAccessInfo"* %0, i64 0, i32 1, i32 0, i32 0, i32 2, i32 0, i32 0
  store %"class.v8::internal::Handle"* %43, %"class.v8::internal::Handle"** %44, align 8
  %45 = getelementptr inbounds %"class.v8::internal::ZoneVector", %"class.v8::internal::ZoneVector"* %7, i64 0, i32 0, i32 0, i32 0
  %46 = load %"class.v8::internal::Handle"*, %"class.v8::internal::Handle"** %45, align 8
  %47 = load %"class.v8::internal::Handle"*, %"class.v8::internal::Handle"** %14, align 8
  %48 = bitcast %"class.v8::internal::Handle"** %41 to i64*
  %49 = icmp eq %"class.v8::internal::Handle"* %46, %47
  br i1 %49, label %128, label %50

50:                                               ; preds = %38
  %51 = ptrtoint %"class.v8::internal::Handle"* %46 to i64
  %52 = inttoptr i64 %39 to i64*
  %53 = getelementptr %"class.v8::internal::Handle", %"class.v8::internal::Handle"* %47, i64 -1, i32 0, i32 0
  %54 = ptrtoint i64** %53 to i64
  %55 = sub i64 %54, %51
  %56 = lshr i64 %55, 3
  %57 = add nuw nsw i64 %56, 1
  %58 = and i64 %57, 7
  %59 = icmp eq i64 %58, 0
  br i1 %59, label %74, label %60

60:                                               ; preds = %50, %60
  %61 = phi %"class.v8::internal::Handle"* [ %68, %60 ], [ %40, %50 ]
  %62 = phi i64* [ %69, %60 ], [ %52, %50 ]
  %63 = phi %"class.v8::internal::Handle"* [ %67, %60 ], [ %46, %50 ]
  %64 = phi i64 [ %70, %60 ], [ %58, %50 ]
  %65 = bitcast %"class.v8::internal::Handle"* %63 to i64*
  %66 = load i64, i64* %65, align 8
  store i64 %66, i64* %62, align 8
  %67 = getelementptr inbounds %"class.v8::internal::Handle", %"class.v8::internal::Handle"* %63, i64 1
  %68 = getelementptr inbounds %"class.v8::internal::Handle", %"class.v8::internal::Handle"* %61, i64 1
  %69 = bitcast %"class.v8::internal::Handle"* %68 to i64*
  %70 = add i64 %64, -1
  %71 = icmp eq i64 %70, 0
  br i1 %71, label %72, label %60, !llvm.loop !368

72:                                               ; preds = %60
  %73 = bitcast %"class.v8::internal::Handle"* %68 to i64*
  br label %74

74:                                               ; preds = %50, %72
  %75 = phi %"class.v8::internal::Handle"* [ undef, %50 ], [ %68, %72 ]
  %76 = phi %"class.v8::internal::Handle"* [ %40, %50 ], [ %68, %72 ]
  %77 = phi i64* [ %52, %50 ], [ %73, %72 ]
  %78 = phi %"class.v8::internal::Handle"* [ %46, %50 ], [ %67, %72 ]
  %79 = icmp ult i64 %55, 56
  br i1 %79, label %125, label %80

80:                                               ; preds = %74, %80
  %81 = phi %"class.v8::internal::Handle"* [ %122, %80 ], [ %76, %74 ]
  %82 = phi i64* [ %124, %80 ], [ %77, %74 ]
  %83 = phi %"class.v8::internal::Handle"* [ %121, %80 ], [ %78, %74 ]
  %84 = bitcast %"class.v8::internal::Handle"* %83 to i64*
  %85 = load i64, i64* %84, align 8
  store i64 %85, i64* %82, align 8
  %86 = getelementptr inbounds %"class.v8::internal::Handle", %"class.v8::internal::Handle"* %83, i64 1
  %87 = getelementptr inbounds %"class.v8::internal::Handle", %"class.v8::internal::Handle"* %81, i64 1
  %88 = bitcast %"class.v8::internal::Handle"* %87 to i64*
  %89 = bitcast %"class.v8::internal::Handle"* %86 to i64*
  %90 = load i64, i64* %89, align 8
  store i64 %90, i64* %88, align 8
  %91 = getelementptr inbounds %"class.v8::internal::Handle", %"class.v8::internal::Handle"* %83, i64 2
  %92 = getelementptr inbounds %"class.v8::internal::Handle", %"class.v8::internal::Handle"* %81, i64 2
  %93 = bitcast %"class.v8::internal::Handle"* %92 to i64*
  %94 = bitcast %"class.v8::internal::Handle"* %91 to i64*
  %95 = load i64, i64* %94, align 8
  store i64 %95, i64* %93, align 8
  %96 = getelementptr inbounds %"class.v8::internal::Handle", %"class.v8::internal::Handle"* %83, i64 3
  %97 = getelementptr inbounds %"class.v8::internal::Handle", %"class.v8::internal::Handle"* %81, i64 3
  %98 = bitcast %"class.v8::internal::Handle"* %97 to i64*
  %99 = bitcast %"class.v8::internal::Handle"* %96 to i64*
  %100 = load i64, i64* %99, align 8
  store i64 %100, i64* %98, align 8
  %101 = getelementptr inbounds %"class.v8::internal::Handle", %"class.v8::internal::Handle"* %83, i64 4
  %102 = getelementptr inbounds %"class.v8::internal::Handle", %"class.v8::internal::Handle"* %81, i64 4
  %103 = bitcast %"class.v8::internal::Handle"* %102 to i64*
  %104 = bitcast %"class.v8::internal::Handle"* %101 to i64*
  %105 = load i64, i64* %104, align 8
  store i64 %105, i64* %103, align 8
  %106 = getelementptr inbounds %"class.v8::internal::Handle", %"class.v8::internal::Handle"* %83, i64 5
  %107 = getelementptr inbounds %"class.v8::internal::Handle", %"class.v8::internal::Handle"* %81, i64 5
  %108 = bitcast %"class.v8::internal::Handle"* %107 to i64*
  %109 = bitcast %"class.v8::internal::Handle"* %106 to i64*
  %110 = load i64, i64* %109, align 8
  store i64 %110, i64* %108, align 8
  %111 = getelementptr inbounds %"class.v8::internal::Handle", %"class.v8::internal::Handle"* %83, i64 6
  %112 = getelementptr inbounds %"class.v8::internal::Handle", %"class.v8::internal::Handle"* %81, i64 6
  %113 = bitcast %"class.v8::internal::Handle"* %112 to i64*
  %114 = bitcast %"class.v8::internal::Handle"* %111 to i64*
  %115 = load i64, i64* %114, align 8
  store i64 %115, i64* %113, align 8
  %116 = getelementptr inbounds %"class.v8::internal::Handle", %"class.v8::internal::Handle"* %83, i64 7
  %117 = getelementptr inbounds %"class.v8::internal::Handle", %"class.v8::internal::Handle"* %81, i64 7
  %118 = bitcast %"class.v8::internal::Handle"* %117 to i64*
  %119 = bitcast %"class.v8::internal::Handle"* %116 to i64*
  %120 = load i64, i64* %119, align 8
  store i64 %120, i64* %118, align 8
  %121 = getelementptr inbounds %"class.v8::internal::Handle", %"class.v8::internal::Handle"* %83, i64 8
  %122 = getelementptr inbounds %"class.v8::internal::Handle", %"class.v8::internal::Handle"* %81, i64 8
  %123 = icmp eq %"class.v8::internal::Handle"* %121, %47
  %124 = bitcast %"class.v8::internal::Handle"* %122 to i64*
  br i1 %123, label %125, label %80

125:                                              ; preds = %80, %74
  %126 = phi %"class.v8::internal::Handle"* [ %75, %74 ], [ %122, %80 ]
  %127 = ptrtoint %"class.v8::internal::Handle"* %126 to i64
  br label %128

128:                                              ; preds = %125, %38
  %129 = phi i64 [ %39, %38 ], [ %127, %125 ]
  store i64 %129, i64* %48, align 8
  br label %130

130:                                              ; preds = %2, %128
  %131 = getelementptr inbounds %"class.v8::internal::compiler::PropertyAccessInfo", %"class.v8::internal::compiler::PropertyAccessInfo"* %0, i64 0, i32 2
  %132 = getelementptr inbounds %"class.v8::internal::compiler::PropertyAccessInfo", %"class.v8::internal::compiler::PropertyAccessInfo"* %1, i64 0, i32 2
  %133 = bitcast %"class.v8::internal::Handle.21"* %131 to i8*
  %134 = bitcast %"class.v8::internal::Handle.21"* %132 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %133, i8* align 8 %134, i64 16, i1 false)
  %135 = getelementptr inbounds %"class.v8::internal::compiler::PropertyAccessInfo", %"class.v8::internal::compiler::PropertyAccessInfo"* %0, i64 0, i32 4
  %136 = getelementptr inbounds %"class.v8::internal::compiler::PropertyAccessInfo", %"class.v8::internal::compiler::PropertyAccessInfo"* %1, i64 0, i32 4
  %137 = getelementptr inbounds %"class.v8::internal::compiler::PropertyAccessInfo", %"class.v8::internal::compiler::PropertyAccessInfo"* %1, i64 0, i32 4, i32 0, i32 0, i32 2, i32 1, i32 0, i32 0
  %138 = bitcast %"class.v8::internal::Zone"** %137 to i64*
  %139 = load i64, i64* %138, align 8
  %140 = getelementptr inbounds %"class.v8::internal::compiler::PropertyAccessInfo", %"class.v8::internal::compiler::PropertyAccessInfo"* %0, i64 0, i32 4, i32 0, i32 0, i32 2, i32 1
  %141 = bitcast %"struct.std::__1::__compressed_pair_elem.27"* %140 to i64*
  %142 = bitcast %"class.v8::internal::ZoneVector.22"* %135 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %142, i8 0, i64 24, i1 false) #8
  store i64 %139, i64* %141, align 8
  %143 = getelementptr inbounds %"class.v8::internal::compiler::PropertyAccessInfo", %"class.v8::internal::compiler::PropertyAccessInfo"* %1, i64 0, i32 4, i32 0, i32 0, i32 1
  %144 = bitcast %"class.v8::internal::compiler::CompilationDependency"*** %143 to i64*
  %145 = load i64, i64* %144, align 8
  %146 = bitcast %"class.v8::internal::ZoneVector.22"* %136 to i64*
  %147 = load i64, i64* %146, align 8
  %148 = sub i64 %145, %147
  %149 = ashr exact i64 %148, 3
  %150 = icmp eq i64 %148, 0
  %151 = inttoptr i64 %139 to %"class.v8::internal::Zone"*
  br i1 %150, label %259, label %152

152:                                              ; preds = %130
  %153 = icmp ugt i64 %149, 268435455
  br i1 %153, label %154, label %156

154:                                              ; preds = %152
  %155 = bitcast %"class.v8::internal::ZoneVector.22"* %135 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %155) #12
  unreachable

156:                                              ; preds = %152
  %157 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %151, i64 0, i32 2
  %158 = load i64, i64* %157, align 8
  %159 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %151, i64 0, i32 3
  %160 = load i64, i64* %159, align 8
  %161 = sub i64 %160, %158
  %162 = icmp ugt i64 %148, %161
  br i1 %162, label %163, label %165, !prof !2

163:                                              ; preds = %156
  %164 = tail call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %151, i64 %148) #8
  br label %167

165:                                              ; preds = %156
  %166 = add i64 %158, %148
  store i64 %166, i64* %157, align 8
  br label %167

167:                                              ; preds = %165, %163
  %168 = phi i64 [ %164, %163 ], [ %158, %165 ]
  %169 = inttoptr i64 %168 to %"class.v8::internal::compiler::CompilationDependency"**
  %170 = getelementptr inbounds %"class.v8::internal::compiler::PropertyAccessInfo", %"class.v8::internal::compiler::PropertyAccessInfo"* %0, i64 0, i32 4, i32 0, i32 0, i32 1
  store %"class.v8::internal::compiler::CompilationDependency"** %169, %"class.v8::internal::compiler::CompilationDependency"*** %170, align 8
  %171 = getelementptr inbounds %"class.v8::internal::ZoneVector.22", %"class.v8::internal::ZoneVector.22"* %135, i64 0, i32 0, i32 0, i32 0
  store %"class.v8::internal::compiler::CompilationDependency"** %169, %"class.v8::internal::compiler::CompilationDependency"*** %171, align 8
  %172 = getelementptr inbounds %"class.v8::internal::compiler::CompilationDependency"*, %"class.v8::internal::compiler::CompilationDependency"** %169, i64 %149
  %173 = getelementptr inbounds %"class.v8::internal::compiler::PropertyAccessInfo", %"class.v8::internal::compiler::PropertyAccessInfo"* %0, i64 0, i32 4, i32 0, i32 0, i32 2, i32 0, i32 0
  store %"class.v8::internal::compiler::CompilationDependency"** %172, %"class.v8::internal::compiler::CompilationDependency"*** %173, align 8
  %174 = getelementptr inbounds %"class.v8::internal::ZoneVector.22", %"class.v8::internal::ZoneVector.22"* %136, i64 0, i32 0, i32 0, i32 0
  %175 = load %"class.v8::internal::compiler::CompilationDependency"**, %"class.v8::internal::compiler::CompilationDependency"*** %174, align 8
  %176 = load %"class.v8::internal::compiler::CompilationDependency"**, %"class.v8::internal::compiler::CompilationDependency"*** %143, align 8
  %177 = bitcast %"class.v8::internal::compiler::CompilationDependency"*** %170 to i64*
  %178 = icmp eq %"class.v8::internal::compiler::CompilationDependency"** %175, %176
  br i1 %178, label %257, label %179

179:                                              ; preds = %167
  %180 = ptrtoint %"class.v8::internal::compiler::CompilationDependency"** %175 to i64
  %181 = inttoptr i64 %168 to i64*
  %182 = getelementptr %"class.v8::internal::compiler::CompilationDependency"*, %"class.v8::internal::compiler::CompilationDependency"** %176, i64 -1
  %183 = ptrtoint %"class.v8::internal::compiler::CompilationDependency"** %182 to i64
  %184 = sub i64 %183, %180
  %185 = lshr i64 %184, 3
  %186 = add nuw nsw i64 %185, 1
  %187 = and i64 %186, 7
  %188 = icmp eq i64 %187, 0
  br i1 %188, label %203, label %189

189:                                              ; preds = %179, %189
  %190 = phi %"class.v8::internal::compiler::CompilationDependency"** [ %197, %189 ], [ %169, %179 ]
  %191 = phi i64* [ %198, %189 ], [ %181, %179 ]
  %192 = phi %"class.v8::internal::compiler::CompilationDependency"** [ %196, %189 ], [ %175, %179 ]
  %193 = phi i64 [ %199, %189 ], [ %187, %179 ]
  %194 = bitcast %"class.v8::internal::compiler::CompilationDependency"** %192 to i64*
  %195 = load i64, i64* %194, align 8
  store i64 %195, i64* %191, align 8
  %196 = getelementptr inbounds %"class.v8::internal::compiler::CompilationDependency"*, %"class.v8::internal::compiler::CompilationDependency"** %192, i64 1
  %197 = getelementptr inbounds %"class.v8::internal::compiler::CompilationDependency"*, %"class.v8::internal::compiler::CompilationDependency"** %190, i64 1
  %198 = bitcast %"class.v8::internal::compiler::CompilationDependency"** %197 to i64*
  %199 = add i64 %193, -1
  %200 = icmp eq i64 %199, 0
  br i1 %200, label %201, label %189, !llvm.loop !369

201:                                              ; preds = %189
  %202 = bitcast %"class.v8::internal::compiler::CompilationDependency"** %197 to i64*
  br label %203

203:                                              ; preds = %179, %201
  %204 = phi %"class.v8::internal::compiler::CompilationDependency"** [ undef, %179 ], [ %197, %201 ]
  %205 = phi %"class.v8::internal::compiler::CompilationDependency"** [ %169, %179 ], [ %197, %201 ]
  %206 = phi i64* [ %181, %179 ], [ %202, %201 ]
  %207 = phi %"class.v8::internal::compiler::CompilationDependency"** [ %175, %179 ], [ %196, %201 ]
  %208 = icmp ult i64 %184, 56
  br i1 %208, label %254, label %209

209:                                              ; preds = %203, %209
  %210 = phi %"class.v8::internal::compiler::CompilationDependency"** [ %251, %209 ], [ %205, %203 ]
  %211 = phi i64* [ %253, %209 ], [ %206, %203 ]
  %212 = phi %"class.v8::internal::compiler::CompilationDependency"** [ %250, %209 ], [ %207, %203 ]
  %213 = bitcast %"class.v8::internal::compiler::CompilationDependency"** %212 to i64*
  %214 = load i64, i64* %213, align 8
  store i64 %214, i64* %211, align 8
  %215 = getelementptr inbounds %"class.v8::internal::compiler::CompilationDependency"*, %"class.v8::internal::compiler::CompilationDependency"** %212, i64 1
  %216 = getelementptr inbounds %"class.v8::internal::compiler::CompilationDependency"*, %"class.v8::internal::compiler::CompilationDependency"** %210, i64 1
  %217 = bitcast %"class.v8::internal::compiler::CompilationDependency"** %216 to i64*
  %218 = bitcast %"class.v8::internal::compiler::CompilationDependency"** %215 to i64*
  %219 = load i64, i64* %218, align 8
  store i64 %219, i64* %217, align 8
  %220 = getelementptr inbounds %"class.v8::internal::compiler::CompilationDependency"*, %"class.v8::internal::compiler::CompilationDependency"** %212, i64 2
  %221 = getelementptr inbounds %"class.v8::internal::compiler::CompilationDependency"*, %"class.v8::internal::compiler::CompilationDependency"** %210, i64 2
  %222 = bitcast %"class.v8::internal::compiler::CompilationDependency"** %221 to i64*
  %223 = bitcast %"class.v8::internal::compiler::CompilationDependency"** %220 to i64*
  %224 = load i64, i64* %223, align 8
  store i64 %224, i64* %222, align 8
  %225 = getelementptr inbounds %"class.v8::internal::compiler::CompilationDependency"*, %"class.v8::internal::compiler::CompilationDependency"** %212, i64 3
  %226 = getelementptr inbounds %"class.v8::internal::compiler::CompilationDependency"*, %"class.v8::internal::compiler::CompilationDependency"** %210, i64 3
  %227 = bitcast %"class.v8::internal::compiler::CompilationDependency"** %226 to i64*
  %228 = bitcast %"class.v8::internal::compiler::CompilationDependency"** %225 to i64*
  %229 = load i64, i64* %228, align 8
  store i64 %229, i64* %227, align 8
  %230 = getelementptr inbounds %"class.v8::internal::compiler::CompilationDependency"*, %"class.v8::internal::compiler::CompilationDependency"** %212, i64 4
  %231 = getelementptr inbounds %"class.v8::internal::compiler::CompilationDependency"*, %"class.v8::internal::compiler::CompilationDependency"** %210, i64 4
  %232 = bitcast %"class.v8::internal::compiler::CompilationDependency"** %231 to i64*
  %233 = bitcast %"class.v8::internal::compiler::CompilationDependency"** %230 to i64*
  %234 = load i64, i64* %233, align 8
  store i64 %234, i64* %232, align 8
  %235 = getelementptr inbounds %"class.v8::internal::compiler::CompilationDependency"*, %"class.v8::internal::compiler::CompilationDependency"** %212, i64 5
  %236 = getelementptr inbounds %"class.v8::internal::compiler::CompilationDependency"*, %"class.v8::internal::compiler::CompilationDependency"** %210, i64 5
  %237 = bitcast %"class.v8::internal::compiler::CompilationDependency"** %236 to i64*
  %238 = bitcast %"class.v8::internal::compiler::CompilationDependency"** %235 to i64*
  %239 = load i64, i64* %238, align 8
  store i64 %239, i64* %237, align 8
  %240 = getelementptr inbounds %"class.v8::internal::compiler::CompilationDependency"*, %"class.v8::internal::compiler::CompilationDependency"** %212, i64 6
  %241 = getelementptr inbounds %"class.v8::internal::compiler::CompilationDependency"*, %"class.v8::internal::compiler::CompilationDependency"** %210, i64 6
  %242 = bitcast %"class.v8::internal::compiler::CompilationDependency"** %241 to i64*
  %243 = bitcast %"class.v8::internal::compiler::CompilationDependency"** %240 to i64*
  %244 = load i64, i64* %243, align 8
  store i64 %244, i64* %242, align 8
  %245 = getelementptr inbounds %"class.v8::internal::compiler::CompilationDependency"*, %"class.v8::internal::compiler::CompilationDependency"** %212, i64 7
  %246 = getelementptr inbounds %"class.v8::internal::compiler::CompilationDependency"*, %"class.v8::internal::compiler::CompilationDependency"** %210, i64 7
  %247 = bitcast %"class.v8::internal::compiler::CompilationDependency"** %246 to i64*
  %248 = bitcast %"class.v8::internal::compiler::CompilationDependency"** %245 to i64*
  %249 = load i64, i64* %248, align 8
  store i64 %249, i64* %247, align 8
  %250 = getelementptr inbounds %"class.v8::internal::compiler::CompilationDependency"*, %"class.v8::internal::compiler::CompilationDependency"** %212, i64 8
  %251 = getelementptr inbounds %"class.v8::internal::compiler::CompilationDependency"*, %"class.v8::internal::compiler::CompilationDependency"** %210, i64 8
  %252 = icmp eq %"class.v8::internal::compiler::CompilationDependency"** %250, %176
  %253 = bitcast %"class.v8::internal::compiler::CompilationDependency"** %251 to i64*
  br i1 %252, label %254, label %209

254:                                              ; preds = %209, %203
  %255 = phi %"class.v8::internal::compiler::CompilationDependency"** [ %204, %203 ], [ %251, %209 ]
  %256 = ptrtoint %"class.v8::internal::compiler::CompilationDependency"** %255 to i64
  br label %257

257:                                              ; preds = %254, %167
  %258 = phi i64 [ %168, %167 ], [ %256, %254 ]
  store i64 %258, i64* %177, align 8
  br label %259

259:                                              ; preds = %130, %257
  %260 = getelementptr inbounds %"class.v8::internal::compiler::PropertyAccessInfo", %"class.v8::internal::compiler::PropertyAccessInfo"* %0, i64 0, i32 5
  %261 = getelementptr inbounds %"class.v8::internal::compiler::PropertyAccessInfo", %"class.v8::internal::compiler::PropertyAccessInfo"* %1, i64 0, i32 5
  %262 = bitcast %"class.v8::internal::MaybeHandle.29"* %260 to i8*
  %263 = bitcast %"class.v8::internal::MaybeHandle.29"* %261 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %262, i8* align 8 %263, i64 64, i1 false)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK2v88internal8compiler17AccessInfoFactory26ComputePropertyAccessInfosERKNSt3__16vectorINS0_6HandleINS0_3MapEEENS3_9allocatorIS7_EEEENS5_INS0_4NameEEENS1_10AccessModeEPNS0_10ZoneVectorINS1_18PropertyAccessInfoEEE(%"class.v8::internal::compiler::AccessInfoFactory"*, %"class.std::__1::vector.1319"* nocapture readonly dereferenceable(24), i64*, i32, %"class.v8::internal::ZoneVector.1312"*) local_unnamed_addr #0 align 2 {
  %6 = alloca %"class.v8::internal::compiler::PropertyAccessInfo", align 8
  %7 = getelementptr inbounds %"class.std::__1::vector.1319", %"class.std::__1::vector.1319"* %1, i64 0, i32 0, i32 0
  %8 = load %"class.v8::internal::Handle"*, %"class.v8::internal::Handle"** %7, align 8
  %9 = getelementptr inbounds %"class.std::__1::vector.1319", %"class.std::__1::vector.1319"* %1, i64 0, i32 0, i32 1
  %10 = load %"class.v8::internal::Handle"*, %"class.v8::internal::Handle"** %9, align 8
  %11 = icmp eq %"class.v8::internal::Handle"* %8, %10
  br i1 %11, label %43, label %12

12:                                               ; preds = %5
  %13 = bitcast %"class.v8::internal::compiler::PropertyAccessInfo"* %6 to i8*
  %14 = getelementptr inbounds %"class.v8::internal::ZoneVector.1312", %"class.v8::internal::ZoneVector.1312"* %4, i64 0, i32 0, i32 0, i32 1
  %15 = getelementptr inbounds %"class.v8::internal::ZoneVector.1312", %"class.v8::internal::ZoneVector.1312"* %4, i64 0, i32 0, i32 0, i32 2, i32 0, i32 0
  %16 = getelementptr inbounds %"class.v8::internal::ZoneVector.1312", %"class.v8::internal::ZoneVector.1312"* %4, i64 0, i32 0
  %17 = getelementptr inbounds %"class.v8::internal::compiler::PropertyAccessInfo", %"class.v8::internal::compiler::PropertyAccessInfo"* %6, i64 0, i32 0
  %18 = getelementptr inbounds %"class.v8::internal::compiler::PropertyAccessInfo", %"class.v8::internal::compiler::PropertyAccessInfo"* %6, i64 0, i32 1
  %19 = getelementptr inbounds %"class.v8::internal::compiler::PropertyAccessInfo", %"class.v8::internal::compiler::PropertyAccessInfo"* %6, i64 0, i32 1, i32 0, i32 0, i32 2, i32 1, i32 0
  %20 = bitcast %"class.v8::internal::ZoneAllocator"* %19 to i64*
  %21 = bitcast %"class.v8::internal::ZoneVector"* %18 to i64*
  %22 = getelementptr inbounds %"class.v8::internal::compiler::PropertyAccessInfo", %"class.v8::internal::compiler::PropertyAccessInfo"* %6, i64 0, i32 1, i32 0, i32 0, i32 1
  %23 = bitcast %"class.v8::internal::Handle"** %22 to i64*
  %24 = getelementptr inbounds %"class.v8::internal::compiler::PropertyAccessInfo", %"class.v8::internal::compiler::PropertyAccessInfo"* %6, i64 0, i32 1, i32 0, i32 0, i32 2, i32 0, i32 0
  %25 = bitcast %"class.v8::internal::Handle"** %24 to i64*
  %26 = bitcast %"class.v8::internal::ZoneVector"* %18 to i8*
  %27 = getelementptr inbounds %"class.v8::internal::compiler::PropertyAccessInfo", %"class.v8::internal::compiler::PropertyAccessInfo"* %6, i64 0, i32 2
  %28 = bitcast %"class.v8::internal::Handle.21"* %27 to i8*
  %29 = getelementptr inbounds %"class.v8::internal::compiler::PropertyAccessInfo", %"class.v8::internal::compiler::PropertyAccessInfo"* %6, i64 0, i32 4
  %30 = getelementptr inbounds %"class.v8::internal::compiler::PropertyAccessInfo", %"class.v8::internal::compiler::PropertyAccessInfo"* %6, i64 0, i32 4, i32 0, i32 0, i32 2, i32 1, i32 0
  %31 = bitcast %"class.v8::internal::ZoneAllocator.28"* %30 to i64*
  %32 = bitcast %"class.v8::internal::ZoneVector.22"* %29 to i64*
  %33 = getelementptr inbounds %"class.v8::internal::compiler::PropertyAccessInfo", %"class.v8::internal::compiler::PropertyAccessInfo"* %6, i64 0, i32 4, i32 0, i32 0, i32 1
  %34 = bitcast %"class.v8::internal::compiler::CompilationDependency"*** %33 to i64*
  %35 = getelementptr inbounds %"class.v8::internal::compiler::PropertyAccessInfo", %"class.v8::internal::compiler::PropertyAccessInfo"* %6, i64 0, i32 4, i32 0, i32 0, i32 2, i32 0, i32 0
  %36 = bitcast %"class.v8::internal::compiler::CompilationDependency"*** %35 to i64*
  %37 = bitcast %"class.v8::internal::ZoneVector.22"* %29 to i8*
  %38 = getelementptr inbounds %"class.v8::internal::compiler::PropertyAccessInfo", %"class.v8::internal::compiler::PropertyAccessInfo"* %6, i64 0, i32 5
  %39 = bitcast %"class.v8::internal::MaybeHandle.29"* %38 to i8*
  %40 = bitcast %"class.v8::internal::compiler::PropertyAccessInfo"** %14 to i64*
  %41 = getelementptr inbounds %"class.v8::internal::compiler::PropertyAccessInfo", %"class.v8::internal::compiler::PropertyAccessInfo"* %6, i64 0, i32 4, i32 0, i32 0, i32 0
  %42 = getelementptr inbounds %"class.v8::internal::compiler::PropertyAccessInfo", %"class.v8::internal::compiler::PropertyAccessInfo"* %6, i64 0, i32 1, i32 0, i32 0, i32 0
  br label %44

43:                                               ; preds = %96, %5
  ret void

44:                                               ; preds = %12, %96
  %45 = phi %"class.v8::internal::Handle"* [ %8, %12 ], [ %97, %96 ]
  %46 = getelementptr inbounds %"class.v8::internal::Handle", %"class.v8::internal::Handle"* %45, i64 0, i32 0, i32 0
  %47 = load i64*, i64** %46, align 8
  call void @llvm.lifetime.start.p0i8(i64 152, i8* nonnull %13) #8
  call void @_ZNK2v88internal8compiler17AccessInfoFactory25ComputePropertyAccessInfoENS0_6HandleINS0_3MapEEENS3_INS0_4NameEEENS1_10AccessModeE(%"class.v8::internal::compiler::PropertyAccessInfo"* nonnull sret %6, %"class.v8::internal::compiler::AccessInfoFactory"* %0, i64* %47, i64* %2, i32 %3)
  %48 = load %"class.v8::internal::compiler::PropertyAccessInfo"*, %"class.v8::internal::compiler::PropertyAccessInfo"** %14, align 8
  %49 = load %"class.v8::internal::compiler::PropertyAccessInfo"*, %"class.v8::internal::compiler::PropertyAccessInfo"** %15, align 8
  %50 = icmp ult %"class.v8::internal::compiler::PropertyAccessInfo"* %48, %49
  br i1 %50, label %51, label %86

51:                                               ; preds = %44
  %52 = getelementptr inbounds %"class.v8::internal::compiler::PropertyAccessInfo", %"class.v8::internal::compiler::PropertyAccessInfo"* %48, i64 0, i32 0
  %53 = load i32, i32* %17, align 8
  store i32 %53, i32* %52, align 8
  %54 = getelementptr inbounds %"class.v8::internal::compiler::PropertyAccessInfo", %"class.v8::internal::compiler::PropertyAccessInfo"* %48, i64 0, i32 1
  %55 = getelementptr inbounds %"class.v8::internal::compiler::PropertyAccessInfo", %"class.v8::internal::compiler::PropertyAccessInfo"* %48, i64 0, i32 1, i32 0, i32 0, i32 2, i32 1
  %56 = bitcast %"struct.std::__1::__compressed_pair_elem.0"* %55 to i64*
  %57 = bitcast %"class.v8::internal::ZoneVector"* %54 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %57, i8 0, i64 24, i1 false) #8
  %58 = load i64, i64* %20, align 8
  store i64 %58, i64* %56, align 8
  %59 = load i64, i64* %21, align 8
  %60 = bitcast %"class.v8::internal::ZoneVector"* %54 to i64*
  store i64 %59, i64* %60, align 8
  %61 = load i64, i64* %23, align 8
  %62 = getelementptr inbounds %"class.v8::internal::compiler::PropertyAccessInfo", %"class.v8::internal::compiler::PropertyAccessInfo"* %48, i64 0, i32 1, i32 0, i32 0, i32 1
  %63 = bitcast %"class.v8::internal::Handle"** %62 to i64*
  store i64 %61, i64* %63, align 8
  %64 = load i64, i64* %25, align 8
  %65 = getelementptr inbounds %"class.v8::internal::compiler::PropertyAccessInfo", %"class.v8::internal::compiler::PropertyAccessInfo"* %48, i64 0, i32 1, i32 0, i32 0, i32 2, i32 0, i32 0
  %66 = bitcast %"class.v8::internal::Handle"** %65 to i64*
  store i64 %64, i64* %66, align 8
  call void @llvm.memset.p0i8.i64(i8* align 8 %26, i8 0, i64 24, i1 false) #8
  %67 = getelementptr inbounds %"class.v8::internal::compiler::PropertyAccessInfo", %"class.v8::internal::compiler::PropertyAccessInfo"* %48, i64 0, i32 2
  %68 = bitcast %"class.v8::internal::Handle.21"* %67 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %68, i8* align 8 %28, i64 16, i1 false) #8
  %69 = getelementptr inbounds %"class.v8::internal::compiler::PropertyAccessInfo", %"class.v8::internal::compiler::PropertyAccessInfo"* %48, i64 0, i32 4
  %70 = getelementptr inbounds %"class.v8::internal::compiler::PropertyAccessInfo", %"class.v8::internal::compiler::PropertyAccessInfo"* %48, i64 0, i32 4, i32 0, i32 0, i32 2, i32 1
  %71 = bitcast %"struct.std::__1::__compressed_pair_elem.27"* %70 to i64*
  %72 = bitcast %"class.v8::internal::ZoneVector.22"* %69 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %72, i8 0, i64 24, i1 false) #8
  %73 = load i64, i64* %31, align 8
  store i64 %73, i64* %71, align 8
  %74 = load i64, i64* %32, align 8
  %75 = bitcast %"class.v8::internal::ZoneVector.22"* %69 to i64*
  store i64 %74, i64* %75, align 8
  %76 = load i64, i64* %34, align 8
  %77 = getelementptr inbounds %"class.v8::internal::compiler::PropertyAccessInfo", %"class.v8::internal::compiler::PropertyAccessInfo"* %48, i64 0, i32 4, i32 0, i32 0, i32 1
  %78 = bitcast %"class.v8::internal::compiler::CompilationDependency"*** %77 to i64*
  store i64 %76, i64* %78, align 8
  %79 = load i64, i64* %36, align 8
  %80 = getelementptr inbounds %"class.v8::internal::compiler::PropertyAccessInfo", %"class.v8::internal::compiler::PropertyAccessInfo"* %48, i64 0, i32 4, i32 0, i32 0, i32 2, i32 0, i32 0
  %81 = bitcast %"class.v8::internal::compiler::CompilationDependency"*** %80 to i64*
  store i64 %79, i64* %81, align 8
  call void @llvm.memset.p0i8.i64(i8* align 8 %37, i8 0, i64 24, i1 false) #8
  %82 = getelementptr inbounds %"class.v8::internal::compiler::PropertyAccessInfo", %"class.v8::internal::compiler::PropertyAccessInfo"* %48, i64 0, i32 5
  %83 = bitcast %"class.v8::internal::MaybeHandle.29"* %82 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %83, i8* align 8 %39, i64 64, i1 false) #8
  %84 = getelementptr inbounds %"class.v8::internal::compiler::PropertyAccessInfo", %"class.v8::internal::compiler::PropertyAccessInfo"* %48, i64 1
  %85 = ptrtoint %"class.v8::internal::compiler::PropertyAccessInfo"* %84 to i64
  store i64 %85, i64* %40, align 8
  br label %91

86:                                               ; preds = %44
  call void @_ZNSt3__16vectorIN2v88internal8compiler18PropertyAccessInfoENS2_13ZoneAllocatorIS4_EEE21__push_back_slow_pathIS4_EEvOT_(%"class.std::__1::vector.1313"* %16, %"class.v8::internal::compiler::PropertyAccessInfo"* nonnull dereferenceable(152) %6) #8
  %87 = load %"class.v8::internal::compiler::CompilationDependency"**, %"class.v8::internal::compiler::CompilationDependency"*** %41, align 8
  %88 = icmp eq %"class.v8::internal::compiler::CompilationDependency"** %87, null
  br i1 %88, label %91, label %89

89:                                               ; preds = %86
  %90 = ptrtoint %"class.v8::internal::compiler::CompilationDependency"** %87 to i64
  store i64 %90, i64* %34, align 8
  br label %91

91:                                               ; preds = %51, %89, %86
  %92 = load %"class.v8::internal::Handle"*, %"class.v8::internal::Handle"** %42, align 8
  %93 = icmp eq %"class.v8::internal::Handle"* %92, null
  br i1 %93, label %96, label %94

94:                                               ; preds = %91
  %95 = ptrtoint %"class.v8::internal::Handle"* %92 to i64
  store i64 %95, i64* %23, align 8
  br label %96

96:                                               ; preds = %91, %94
  call void @llvm.lifetime.end.p0i8(i64 152, i8* nonnull %13) #8
  %97 = getelementptr inbounds %"class.v8::internal::Handle", %"class.v8::internal::Handle"* %45, i64 1
  %98 = icmp eq %"class.v8::internal::Handle"* %97, %10
  br i1 %98, label %43, label %44
}

declare void @_ZN2v88internal8compiler23CompilationDependencies16RecordDependencyEPKNS1_21CompilationDependencyE(%"class.v8::internal::compiler::CompilationDependencies"*, %"class.v8::internal::compiler::CompilationDependency"*) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK2v88internal8compiler17AccessInfoFactory27FinalizePropertyAccessInfosENS0_10ZoneVectorINS1_18PropertyAccessInfoEEENS1_10AccessModeEPS5_(%"class.v8::internal::compiler::AccessInfoFactory"* nocapture readonly, %"class.v8::internal::ZoneVector.1312"* nocapture readonly, i32, %"class.v8::internal::ZoneVector.1312"*) local_unnamed_addr #0 align 2 {
  %5 = alloca %"class.v8::internal::ZoneVector.1312", align 8
  %6 = getelementptr inbounds %"class.v8::internal::ZoneVector.1312", %"class.v8::internal::ZoneVector.1312"* %1, i64 0, i32 0, i32 0, i32 0
  %7 = load %"class.v8::internal::compiler::PropertyAccessInfo"*, %"class.v8::internal::compiler::PropertyAccessInfo"** %6, align 8
  %8 = getelementptr inbounds %"class.v8::internal::ZoneVector.1312", %"class.v8::internal::ZoneVector.1312"* %1, i64 0, i32 0, i32 0, i32 1
  %9 = load %"class.v8::internal::compiler::PropertyAccessInfo"*, %"class.v8::internal::compiler::PropertyAccessInfo"** %8, align 8
  %10 = icmp eq %"class.v8::internal::compiler::PropertyAccessInfo"* %7, %9
  br i1 %10, label %169, label %11

11:                                               ; preds = %4
  %12 = ptrtoint %"class.v8::internal::compiler::PropertyAccessInfo"* %7 to i64
  %13 = ptrtoint %"class.v8::internal::compiler::PropertyAccessInfo"* %9 to i64
  %14 = getelementptr inbounds %"class.v8::internal::ZoneVector.1312", %"class.v8::internal::ZoneVector.1312"* %1, i64 0, i32 0, i32 0, i32 2, i32 1, i32 0, i32 0
  %15 = bitcast %"class.v8::internal::Zone"** %14 to i64*
  %16 = load i64, i64* %15, align 8
  %17 = getelementptr inbounds %"class.v8::internal::ZoneVector.1312", %"class.v8::internal::ZoneVector.1312"* %5, i64 0, i32 0, i32 0, i32 2, i32 1
  %18 = bitcast %"struct.std::__1::__compressed_pair_elem.1317"* %17 to i64*
  %19 = bitcast %"class.v8::internal::ZoneVector.1312"* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %19, i8 0, i64 24, i1 false) #8
  store i64 %16, i64* %18, align 8
  %20 = sub i64 %13, %12
  %21 = sdiv exact i64 %20, 152
  %22 = icmp eq i64 %20, 0
  %23 = inttoptr i64 %16 to %"class.v8::internal::Zone"*
  br i1 %22, label %24, label %26

24:                                               ; preds = %11
  %25 = getelementptr inbounds %"class.v8::internal::ZoneVector.1312", %"class.v8::internal::ZoneVector.1312"* %5, i64 0, i32 0, i32 0, i32 1
  br label %70

26:                                               ; preds = %11
  %27 = icmp ugt i64 %21, 14128181
  br i1 %27, label %28, label %30

28:                                               ; preds = %26
  %29 = bitcast %"class.v8::internal::ZoneVector.1312"* %5 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %29) #12
  unreachable

30:                                               ; preds = %26
  %31 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %23, i64 0, i32 2
  %32 = load i64, i64* %31, align 8
  %33 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %23, i64 0, i32 3
  %34 = load i64, i64* %33, align 8
  %35 = sub i64 %34, %32
  %36 = icmp ugt i64 %20, %35
  br i1 %36, label %37, label %39, !prof !2

37:                                               ; preds = %30
  %38 = tail call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %23, i64 %20) #8
  br label %41

39:                                               ; preds = %30
  %40 = add i64 %32, %20
  store i64 %40, i64* %31, align 8
  br label %41

41:                                               ; preds = %39, %37
  %42 = phi i64 [ %38, %37 ], [ %32, %39 ]
  %43 = inttoptr i64 %42 to %"class.v8::internal::compiler::PropertyAccessInfo"*
  %44 = getelementptr inbounds %"class.v8::internal::ZoneVector.1312", %"class.v8::internal::ZoneVector.1312"* %5, i64 0, i32 0, i32 0, i32 1
  store %"class.v8::internal::compiler::PropertyAccessInfo"* %43, %"class.v8::internal::compiler::PropertyAccessInfo"** %44, align 8
  %45 = getelementptr inbounds %"class.v8::internal::ZoneVector.1312", %"class.v8::internal::ZoneVector.1312"* %5, i64 0, i32 0, i32 0, i32 0
  store %"class.v8::internal::compiler::PropertyAccessInfo"* %43, %"class.v8::internal::compiler::PropertyAccessInfo"** %45, align 8
  %46 = getelementptr inbounds %"class.v8::internal::compiler::PropertyAccessInfo", %"class.v8::internal::compiler::PropertyAccessInfo"* %43, i64 %21
  %47 = getelementptr inbounds %"class.v8::internal::ZoneVector.1312", %"class.v8::internal::ZoneVector.1312"* %5, i64 0, i32 0, i32 0, i32 2, i32 0, i32 0
  store %"class.v8::internal::compiler::PropertyAccessInfo"* %46, %"class.v8::internal::compiler::PropertyAccessInfo"** %47, align 8
  %48 = load %"class.v8::internal::compiler::PropertyAccessInfo"*, %"class.v8::internal::compiler::PropertyAccessInfo"** %6, align 8
  %49 = load %"class.v8::internal::compiler::PropertyAccessInfo"*, %"class.v8::internal::compiler::PropertyAccessInfo"** %8, align 8
  %50 = bitcast %"class.v8::internal::compiler::PropertyAccessInfo"** %44 to i64*
  %51 = icmp eq %"class.v8::internal::compiler::PropertyAccessInfo"* %48, %49
  br i1 %51, label %52, label %54

52:                                               ; preds = %41
  store i64 %42, i64* %50, align 8
  %53 = getelementptr inbounds %"class.v8::internal::ZoneVector.1312", %"class.v8::internal::ZoneVector.1312"* %5, i64 0, i32 0, i32 0, i32 1
  br label %70

54:                                               ; preds = %41, %54
  %55 = phi %"class.v8::internal::compiler::PropertyAccessInfo"* [ %58, %54 ], [ %43, %41 ]
  %56 = phi %"class.v8::internal::compiler::PropertyAccessInfo"* [ %57, %54 ], [ %48, %41 ]
  tail call void @_ZN2v88internal8compiler18PropertyAccessInfoC2ERKS2_(%"class.v8::internal::compiler::PropertyAccessInfo"* %55, %"class.v8::internal::compiler::PropertyAccessInfo"* dereferenceable(152) %56) #8
  %57 = getelementptr inbounds %"class.v8::internal::compiler::PropertyAccessInfo", %"class.v8::internal::compiler::PropertyAccessInfo"* %56, i64 1
  %58 = getelementptr inbounds %"class.v8::internal::compiler::PropertyAccessInfo", %"class.v8::internal::compiler::PropertyAccessInfo"* %55, i64 1
  %59 = icmp eq %"class.v8::internal::compiler::PropertyAccessInfo"* %57, %49
  br i1 %59, label %60, label %54

60:                                               ; preds = %54
  %61 = ptrtoint %"class.v8::internal::compiler::PropertyAccessInfo"* %58 to i64
  store i64 %61, i64* %50, align 8
  %62 = getelementptr inbounds %"class.v8::internal::ZoneVector.1312", %"class.v8::internal::ZoneVector.1312"* %5, i64 0, i32 0, i32 0, i32 1
  %63 = icmp eq %"class.v8::internal::compiler::PropertyAccessInfo"* %58, %43
  br i1 %63, label %70, label %64

64:                                               ; preds = %60
  %65 = getelementptr inbounds %"class.v8::internal::compiler::AccessInfoFactory", %"class.v8::internal::compiler::AccessInfoFactory"* %0, i64 0, i32 3
  %66 = getelementptr inbounds %"class.v8::internal::ZoneVector.1312", %"class.v8::internal::ZoneVector.1312"* %3, i64 0, i32 0, i32 0, i32 1
  %67 = getelementptr inbounds %"class.v8::internal::ZoneVector.1312", %"class.v8::internal::ZoneVector.1312"* %3, i64 0, i32 0, i32 0, i32 2, i32 0, i32 0
  %68 = bitcast %"class.v8::internal::compiler::PropertyAccessInfo"** %66 to i64*
  %69 = getelementptr inbounds %"class.v8::internal::ZoneVector.1312", %"class.v8::internal::ZoneVector.1312"* %3, i64 0, i32 0
  br label %79

70:                                               ; preds = %98, %52, %24, %60
  %71 = phi %"class.v8::internal::compiler::PropertyAccessInfo"** [ %25, %24 ], [ %62, %60 ], [ %53, %52 ], [ %62, %98 ]
  %72 = phi %"class.v8::internal::compiler::PropertyAccessInfo"* [ null, %24 ], [ %43, %60 ], [ %43, %52 ], [ %43, %98 ]
  %73 = phi %"class.v8::internal::compiler::PropertyAccessInfo"* [ null, %24 ], [ %58, %60 ], [ %43, %52 ], [ %58, %98 ]
  %74 = getelementptr inbounds %"class.v8::internal::ZoneVector.1312", %"class.v8::internal::ZoneVector.1312"* %3, i64 0, i32 0, i32 0, i32 0
  %75 = load %"class.v8::internal::compiler::PropertyAccessInfo"*, %"class.v8::internal::compiler::PropertyAccessInfo"** %74, align 8
  %76 = getelementptr inbounds %"class.v8::internal::ZoneVector.1312", %"class.v8::internal::ZoneVector.1312"* %3, i64 0, i32 0, i32 0, i32 1
  %77 = load %"class.v8::internal::compiler::PropertyAccessInfo"*, %"class.v8::internal::compiler::PropertyAccessInfo"** %76, align 8
  %78 = icmp eq %"class.v8::internal::compiler::PropertyAccessInfo"* %75, %77
  br i1 %78, label %99, label %100, !prof !2

79:                                               ; preds = %98, %64
  %80 = phi %"class.v8::internal::compiler::PropertyAccessInfo"* [ %43, %64 ], [ %81, %98 ]
  %81 = getelementptr inbounds %"class.v8::internal::compiler::PropertyAccessInfo", %"class.v8::internal::compiler::PropertyAccessInfo"* %80, i64 1
  %82 = icmp eq %"class.v8::internal::compiler::PropertyAccessInfo"* %80, %55
  br i1 %82, label %90, label %86

83:                                               ; preds = %86
  %84 = getelementptr inbounds %"class.v8::internal::compiler::PropertyAccessInfo", %"class.v8::internal::compiler::PropertyAccessInfo"* %87, i64 1
  %85 = icmp eq %"class.v8::internal::compiler::PropertyAccessInfo"* %87, %55
  br i1 %85, label %90, label %86

86:                                               ; preds = %79, %83
  %87 = phi %"class.v8::internal::compiler::PropertyAccessInfo"* [ %84, %83 ], [ %81, %79 ]
  %88 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %65, align 8
  %89 = tail call zeroext i1 @_ZN2v88internal8compiler18PropertyAccessInfo5MergeEPKS2_NS1_10AccessModeEPNS0_4ZoneE(%"class.v8::internal::compiler::PropertyAccessInfo"* %87, %"class.v8::internal::compiler::PropertyAccessInfo"* %80, i32 %2, %"class.v8::internal::Zone"* %88) #8
  br i1 %89, label %98, label %83

90:                                               ; preds = %83, %79
  %91 = load %"class.v8::internal::compiler::PropertyAccessInfo"*, %"class.v8::internal::compiler::PropertyAccessInfo"** %66, align 8
  %92 = load %"class.v8::internal::compiler::PropertyAccessInfo"*, %"class.v8::internal::compiler::PropertyAccessInfo"** %67, align 8
  %93 = icmp eq %"class.v8::internal::compiler::PropertyAccessInfo"* %91, %92
  br i1 %93, label %97, label %94

94:                                               ; preds = %90
  tail call void @_ZN2v88internal8compiler18PropertyAccessInfoC2ERKS2_(%"class.v8::internal::compiler::PropertyAccessInfo"* %91, %"class.v8::internal::compiler::PropertyAccessInfo"* dereferenceable(152) %80) #8
  %95 = getelementptr inbounds %"class.v8::internal::compiler::PropertyAccessInfo", %"class.v8::internal::compiler::PropertyAccessInfo"* %91, i64 1
  %96 = ptrtoint %"class.v8::internal::compiler::PropertyAccessInfo"* %95 to i64
  store i64 %96, i64* %68, align 8
  br label %98

97:                                               ; preds = %90
  tail call void @_ZNSt3__16vectorIN2v88internal8compiler18PropertyAccessInfoENS2_13ZoneAllocatorIS4_EEE21__push_back_slow_pathIRKS4_EEvOT_(%"class.std::__1::vector.1313"* %69, %"class.v8::internal::compiler::PropertyAccessInfo"* dereferenceable(152) %80) #8
  br label %98

98:                                               ; preds = %86, %97, %94
  br i1 %82, label %70, label %79

99:                                               ; preds = %70
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.5, i64 0, i64 0), i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.12, i64 0, i64 0)) #12
  unreachable

100:                                              ; preds = %70
  %101 = icmp eq %"class.v8::internal::compiler::PropertyAccessInfo"* %72, null
  br i1 %101, label %130, label %102

102:                                              ; preds = %100
  %103 = icmp eq %"class.v8::internal::compiler::PropertyAccessInfo"* %73, %72
  br i1 %103, label %127, label %104

104:                                              ; preds = %102, %122
  %105 = phi %"class.v8::internal::compiler::PropertyAccessInfo"* [ %106, %122 ], [ %73, %102 ]
  %106 = getelementptr inbounds %"class.v8::internal::compiler::PropertyAccessInfo", %"class.v8::internal::compiler::PropertyAccessInfo"* %105, i64 -1
  %107 = getelementptr inbounds %"class.v8::internal::compiler::PropertyAccessInfo", %"class.v8::internal::compiler::PropertyAccessInfo"* %105, i64 -1, i32 4, i32 0, i32 0, i32 0
  %108 = load %"class.v8::internal::compiler::CompilationDependency"**, %"class.v8::internal::compiler::CompilationDependency"*** %107, align 8
  %109 = icmp eq %"class.v8::internal::compiler::CompilationDependency"** %108, null
  br i1 %109, label %114, label %110

110:                                              ; preds = %104
  %111 = ptrtoint %"class.v8::internal::compiler::CompilationDependency"** %108 to i64
  %112 = getelementptr inbounds %"class.v8::internal::compiler::PropertyAccessInfo", %"class.v8::internal::compiler::PropertyAccessInfo"* %105, i64 -1, i32 4, i32 0, i32 0, i32 1
  %113 = bitcast %"class.v8::internal::compiler::CompilationDependency"*** %112 to i64*
  store i64 %111, i64* %113, align 8
  br label %114

114:                                              ; preds = %110, %104
  %115 = getelementptr inbounds %"class.v8::internal::compiler::PropertyAccessInfo", %"class.v8::internal::compiler::PropertyAccessInfo"* %105, i64 -1, i32 1, i32 0, i32 0, i32 0
  %116 = load %"class.v8::internal::Handle"*, %"class.v8::internal::Handle"** %115, align 8
  %117 = icmp eq %"class.v8::internal::Handle"* %116, null
  br i1 %117, label %122, label %118

118:                                              ; preds = %114
  %119 = ptrtoint %"class.v8::internal::Handle"* %116 to i64
  %120 = getelementptr inbounds %"class.v8::internal::compiler::PropertyAccessInfo", %"class.v8::internal::compiler::PropertyAccessInfo"* %105, i64 -1, i32 1, i32 0, i32 0, i32 1
  %121 = bitcast %"class.v8::internal::Handle"** %120 to i64*
  store i64 %119, i64* %121, align 8
  br label %122

122:                                              ; preds = %118, %114
  %123 = icmp eq %"class.v8::internal::compiler::PropertyAccessInfo"* %106, %72
  br i1 %123, label %124, label %104

124:                                              ; preds = %122
  %125 = load %"class.v8::internal::compiler::PropertyAccessInfo"*, %"class.v8::internal::compiler::PropertyAccessInfo"** %74, align 8
  %126 = load %"class.v8::internal::compiler::PropertyAccessInfo"*, %"class.v8::internal::compiler::PropertyAccessInfo"** %76, align 8
  br label %127

127:                                              ; preds = %124, %102
  %128 = phi %"class.v8::internal::compiler::PropertyAccessInfo"* [ %126, %124 ], [ %77, %102 ]
  %129 = phi %"class.v8::internal::compiler::PropertyAccessInfo"* [ %125, %124 ], [ %75, %102 ]
  store %"class.v8::internal::compiler::PropertyAccessInfo"* %72, %"class.v8::internal::compiler::PropertyAccessInfo"** %71, align 8
  br label %130

130:                                              ; preds = %100, %127
  %131 = phi %"class.v8::internal::compiler::PropertyAccessInfo"* [ %77, %100 ], [ %128, %127 ]
  %132 = phi %"class.v8::internal::compiler::PropertyAccessInfo"* [ %75, %100 ], [ %129, %127 ]
  %133 = icmp eq %"class.v8::internal::compiler::PropertyAccessInfo"* %132, %131
  br i1 %133, label %169, label %139

134:                                              ; preds = %139
  %135 = icmp eq %"class.v8::internal::compiler::PropertyAccessInfo"* %144, %131
  br i1 %135, label %136, label %139

136:                                              ; preds = %134
  br i1 %133, label %169, label %137

137:                                              ; preds = %136
  %138 = getelementptr inbounds %"class.v8::internal::compiler::AccessInfoFactory", %"class.v8::internal::compiler::AccessInfoFactory"* %0, i64 0, i32 1
  br label %145

139:                                              ; preds = %130, %134
  %140 = phi %"class.v8::internal::compiler::PropertyAccessInfo"* [ %144, %134 ], [ %132, %130 ]
  %141 = getelementptr inbounds %"class.v8::internal::compiler::PropertyAccessInfo", %"class.v8::internal::compiler::PropertyAccessInfo"* %140, i64 0, i32 0
  %142 = load i32, i32* %141, align 8
  %143 = icmp eq i32 %142, 0
  %144 = getelementptr inbounds %"class.v8::internal::compiler::PropertyAccessInfo", %"class.v8::internal::compiler::PropertyAccessInfo"* %140, i64 1
  br i1 %143, label %169, label %134

145:                                              ; preds = %137, %164
  %146 = phi %"class.v8::internal::compiler::PropertyAccessInfo"* [ %132, %137 ], [ %167, %164 ]
  %147 = load %"class.v8::internal::compiler::CompilationDependencies"*, %"class.v8::internal::compiler::CompilationDependencies"** %138, align 8
  %148 = getelementptr inbounds %"class.v8::internal::compiler::PropertyAccessInfo", %"class.v8::internal::compiler::PropertyAccessInfo"* %146, i64 0, i32 4, i32 0
  %149 = getelementptr inbounds %"class.std::__1::vector.23", %"class.std::__1::vector.23"* %148, i64 0, i32 0, i32 0
  %150 = load %"class.v8::internal::compiler::CompilationDependency"**, %"class.v8::internal::compiler::CompilationDependency"*** %149, align 8
  %151 = getelementptr inbounds %"class.v8::internal::compiler::PropertyAccessInfo", %"class.v8::internal::compiler::PropertyAccessInfo"* %146, i64 0, i32 4, i32 0, i32 0, i32 1
  %152 = load %"class.v8::internal::compiler::CompilationDependency"**, %"class.v8::internal::compiler::CompilationDependency"*** %151, align 8
  %153 = icmp eq %"class.v8::internal::compiler::CompilationDependency"** %150, %152
  br i1 %153, label %154, label %159

154:                                              ; preds = %145
  %155 = ptrtoint %"class.v8::internal::compiler::CompilationDependency"** %150 to i64
  br label %164

156:                                              ; preds = %159
  %157 = bitcast %"class.std::__1::vector.23"* %148 to i64*
  %158 = load i64, i64* %157, align 8
  br label %164

159:                                              ; preds = %145, %159
  %160 = phi %"class.v8::internal::compiler::CompilationDependency"** [ %162, %159 ], [ %150, %145 ]
  %161 = load %"class.v8::internal::compiler::CompilationDependency"*, %"class.v8::internal::compiler::CompilationDependency"** %160, align 8
  tail call void @_ZN2v88internal8compiler23CompilationDependencies16RecordDependencyEPKNS1_21CompilationDependencyE(%"class.v8::internal::compiler::CompilationDependencies"* %147, %"class.v8::internal::compiler::CompilationDependency"* %161) #8
  %162 = getelementptr inbounds %"class.v8::internal::compiler::CompilationDependency"*, %"class.v8::internal::compiler::CompilationDependency"** %160, i64 1
  %163 = icmp eq %"class.v8::internal::compiler::CompilationDependency"** %162, %152
  br i1 %163, label %156, label %159

164:                                              ; preds = %154, %156
  %165 = phi i64 [ %158, %156 ], [ %155, %154 ]
  %166 = bitcast %"class.v8::internal::compiler::CompilationDependency"*** %151 to i64*
  store i64 %165, i64* %166, align 8
  %167 = getelementptr inbounds %"class.v8::internal::compiler::PropertyAccessInfo", %"class.v8::internal::compiler::PropertyAccessInfo"* %146, i64 1
  %168 = icmp eq %"class.v8::internal::compiler::PropertyAccessInfo"* %167, %131
  br i1 %168, label %169, label %145

169:                                              ; preds = %139, %164, %130, %136, %4
  %170 = phi i1 [ false, %4 ], [ true, %136 ], [ true, %130 ], [ true, %164 ], [ false, %139 ]
  ret i1 %170
}

declare zeroext i16 @_ZNK2v88internal8compiler6MapRef13instance_typeEv(%"class.v8::internal::compiler::MapRef"*) local_unnamed_addr #4

declare i64* @_ZNK2v88internal8compiler6MapRef6objectEv(%"class.v8::internal::compiler::MapRef"*) local_unnamed_addr #4

declare zeroext i1 @_ZN2v88internal9Accessors23IsJSObjectFieldAccessorEPNS0_7IsolateENS0_6HandleINS0_3MapEEENS4_INS0_4NameEEEPNS0_10FieldIndexE(%"class.v8::internal::Isolate"*, i64*, i64*, %"class.v8::internal::FieldIndex"*) local_unnamed_addr #4

declare i64 @_ZN2v88internal19TransitionsAccessor16SearchTransitionENS0_4NameENS0_12PropertyKindENS0_18PropertyAttributesE(%"class.v8::internal::TransitionsAccessor"*, i64, i32, i32) local_unnamed_addr #4

declare %"class.v8::internal::compiler::CompilationDependency"* @_ZNK2v88internal8compiler23CompilationDependencies32TransitionDependencyOffTheRecordERKNS1_6MapRefE(%"class.v8::internal::compiler::CompilationDependencies"*, %"class.v8::internal::compiler::MapRef"* dereferenceable(16)) local_unnamed_addr #4

declare void @_ZN2v88internal8compiler6MapRef20SerializeBackPointerEv(%"class.v8::internal::compiler::MapRef"*) local_unnamed_addr #4

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #1

declare i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"*, i64) local_unnamed_addr #4

; Function Attrs: nounwind
declare void @llvm.assume(i1) #8

declare void @_ZN2v88internal6PrintFEPKcz(i8*, ...) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZNK2v88internal14Representation8MnemonicEv(%"class.v8::internal::Representation"*) local_unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::Representation", %"class.v8::internal::Representation"* %0, i64 0, i32 0
  %3 = load i8, i8* %2, align 1
  %4 = icmp ult i8 %3, 6
  br i1 %4, label %6, label %5

5:                                                ; preds = %1
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.4, i64 0, i64 0)) #12
  unreachable

6:                                                ; preds = %1
  %7 = sext i8 %3 to i64
  %8 = getelementptr inbounds [6 x i8*], [6 x i8*]* @switch.table._ZNK2v88internal14Representation8MnemonicEv, i64 0, i64 %7
  %9 = load i8*, i8** %8, align 8
  ret i8* %9
}

declare i32 @_ZN2v88internal8compiler10BitsetType11SignedSmallEv() local_unnamed_addr #4

declare i64 @_ZN2v88internal3Map15UnwrapFieldTypeENS0_11MaybeObjectE(i64) local_unnamed_addr #4

declare i64 @_ZN2v88internal9FieldType4NoneEv() local_unnamed_addr #4

declare i32 @_ZN2v88internal8compiler10BitsetType15ExpandInternalsEj(i32) local_unnamed_addr #4

declare i32 @_ZN2v88internal8compiler10BitsetType3LubINS1_6MapRefEEEjRKT_(%"class.v8::internal::compiler::MapRef"* dereferenceable(16)) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64* @_ZN2v88internal8compiler12JSHeapBroker25CanonicalPersistentHandleINS0_13PrototypeInfoEEENS0_6HandleIT_EES6_(%"class.v8::internal::compiler::JSHeapBroker"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca i16, align 2
  %4 = getelementptr inbounds %"class.v8::internal::compiler::JSHeapBroker", %"class.v8::internal::compiler::JSHeapBroker"* %0, i64 0, i32 15, i32 0, i32 0, i32 0
  %5 = load %"class.v8::internal::IdentityMap"*, %"class.v8::internal::IdentityMap"** %4, align 8
  %6 = icmp eq %"class.v8::internal::IdentityMap"* %5, null
  br i1 %6, label %46, label %7

7:                                                ; preds = %2
  %8 = bitcast %"class.v8::internal::IdentityMap"* %5 to %"class.v8::internal::IdentityMapBase"*
  %9 = and i64 %1, 3
  %10 = icmp eq i64 %9, 1
  br i1 %10, label %11, label %24

11:                                               ; preds = %7
  %12 = bitcast i16* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 2, i8* nonnull %12) #8
  %13 = getelementptr inbounds %"class.v8::internal::compiler::JSHeapBroker", %"class.v8::internal::compiler::JSHeapBroker"* %0, i64 0, i32 4
  %14 = call zeroext i1 @_ZNK2v88internal12RootIndexMap6LookupEmPNS0_9RootIndexE(%"class.v8::internal::RootIndexMap"* %13, i64 %1, i16* nonnull %3) #8
  br i1 %14, label %15, label %21

15:                                               ; preds = %11
  %16 = getelementptr inbounds %"class.v8::internal::compiler::JSHeapBroker", %"class.v8::internal::compiler::JSHeapBroker"* %0, i64 0, i32 0
  %17 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %16, align 8
  %18 = load i16, i16* %3, align 2
  %19 = zext i16 %18 to i64
  %20 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %17, i64 0, i32 0, i32 7, i32 0, i64 %19
  call void @llvm.lifetime.end.p0i8(i64 2, i8* nonnull %12) #8
  br label %67

21:                                               ; preds = %11
  call void @llvm.lifetime.end.p0i8(i64 2, i8* nonnull %12) #8
  %22 = bitcast %"class.v8::internal::IdentityMap"** %4 to %"class.v8::internal::IdentityMapBase"**
  %23 = load %"class.v8::internal::IdentityMapBase"*, %"class.v8::internal::IdentityMapBase"** %22, align 8
  br label %24

24:                                               ; preds = %7, %21
  %25 = phi %"class.v8::internal::IdentityMapBase"* [ %23, %21 ], [ %8, %7 ]
  %26 = call { i64*, i8 } @_ZN2v88internal15IdentityMapBase17FindOrInsertEntryEm(%"class.v8::internal::IdentityMapBase"* %25, i64 %1) #8
  %27 = extractvalue { i64*, i8 } %26, 0
  %28 = extractvalue { i64*, i8 } %26, 1
  %29 = bitcast i64* %27 to i64**
  %30 = and i8 %28, 1
  %31 = icmp eq i8 %30, 0
  br i1 %31, label %34, label %32

32:                                               ; preds = %24
  %33 = load i64*, i64** %29, align 8
  br label %67

34:                                               ; preds = %24
  %35 = getelementptr inbounds %"class.v8::internal::compiler::JSHeapBroker", %"class.v8::internal::compiler::JSHeapBroker"* %0, i64 0, i32 14
  %36 = load %"class.v8::internal::LocalIsolate"*, %"class.v8::internal::LocalIsolate"** %35, align 8
  %37 = getelementptr inbounds %"class.v8::internal::LocalIsolate", %"class.v8::internal::LocalIsolate"* %36, i64 0, i32 1, i32 8, i32 0, i32 0, i32 0
  %38 = load %"class.v8::internal::PersistentHandles"*, %"class.v8::internal::PersistentHandles"** %37, align 8
  %39 = icmp eq %"class.v8::internal::PersistentHandles"* %38, null
  br i1 %39, label %40, label %43

40:                                               ; preds = %34
  %41 = getelementptr inbounds %"class.v8::internal::LocalIsolate", %"class.v8::internal::LocalIsolate"* %36, i64 0, i32 1
  call void @_ZN2v88internal9LocalHeap23EnsurePersistentHandlesEv(%"class.v8::internal::LocalHeap"* %41) #8
  %42 = load %"class.v8::internal::PersistentHandles"*, %"class.v8::internal::PersistentHandles"** %37, align 8
  br label %43

43:                                               ; preds = %34, %40
  %44 = phi %"class.v8::internal::PersistentHandles"* [ %38, %34 ], [ %42, %40 ]
  %45 = call i64* @_ZN2v88internal17PersistentHandles9GetHandleEm(%"class.v8::internal::PersistentHandles"* %44, i64 %1) #8
  store i64* %45, i64** %29, align 8
  br label %67

46:                                               ; preds = %2
  %47 = getelementptr inbounds %"class.v8::internal::compiler::JSHeapBroker", %"class.v8::internal::compiler::JSHeapBroker"* %0, i64 0, i32 0
  %48 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %47, align 8
  %49 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %48, i64 0, i32 31, i32 4
  %50 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %49, align 8
  %51 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %50, null
  br i1 %51, label %54, label %52

52:                                               ; preds = %46
  %53 = tail call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %50, i64 %1) #8
  br label %67

54:                                               ; preds = %46
  %55 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %48, i64 0, i32 31, i32 0
  %56 = load i64*, i64** %55, align 8
  %57 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %48, i64 0, i32 31, i32 1
  %58 = load i64*, i64** %57, align 8
  %59 = icmp eq i64* %56, %58
  br i1 %59, label %60, label %62

60:                                               ; preds = %54
  %61 = tail call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %48) #8
  br label %62

62:                                               ; preds = %60, %54
  %63 = phi i64* [ %61, %60 ], [ %56, %54 ]
  %64 = ptrtoint i64* %63 to i64
  %65 = add i64 %64, 8
  %66 = inttoptr i64 %65 to i64*
  store i64* %66, i64** %55, align 8
  store i64 %1, i64* %63, align 8
  br label %67

67:                                               ; preds = %43, %32, %62, %52, %15
  %68 = phi i64* [ %20, %15 ], [ %53, %52 ], [ %63, %62 ], [ %33, %32 ], [ %45, %43 ]
  ret i64* %68
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64* @_ZN2v88internal8compiler12JSHeapBroker25CanonicalPersistentHandleINS0_17JSModuleNamespaceEEENS0_6HandleIT_EES6_(%"class.v8::internal::compiler::JSHeapBroker"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca i16, align 2
  %4 = getelementptr inbounds %"class.v8::internal::compiler::JSHeapBroker", %"class.v8::internal::compiler::JSHeapBroker"* %0, i64 0, i32 15, i32 0, i32 0, i32 0
  %5 = load %"class.v8::internal::IdentityMap"*, %"class.v8::internal::IdentityMap"** %4, align 8
  %6 = icmp eq %"class.v8::internal::IdentityMap"* %5, null
  br i1 %6, label %46, label %7

7:                                                ; preds = %2
  %8 = bitcast %"class.v8::internal::IdentityMap"* %5 to %"class.v8::internal::IdentityMapBase"*
  %9 = and i64 %1, 3
  %10 = icmp eq i64 %9, 1
  br i1 %10, label %11, label %24

11:                                               ; preds = %7
  %12 = bitcast i16* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 2, i8* nonnull %12) #8
  %13 = getelementptr inbounds %"class.v8::internal::compiler::JSHeapBroker", %"class.v8::internal::compiler::JSHeapBroker"* %0, i64 0, i32 4
  %14 = call zeroext i1 @_ZNK2v88internal12RootIndexMap6LookupEmPNS0_9RootIndexE(%"class.v8::internal::RootIndexMap"* %13, i64 %1, i16* nonnull %3) #8
  br i1 %14, label %15, label %21

15:                                               ; preds = %11
  %16 = getelementptr inbounds %"class.v8::internal::compiler::JSHeapBroker", %"class.v8::internal::compiler::JSHeapBroker"* %0, i64 0, i32 0
  %17 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %16, align 8
  %18 = load i16, i16* %3, align 2
  %19 = zext i16 %18 to i64
  %20 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %17, i64 0, i32 0, i32 7, i32 0, i64 %19
  call void @llvm.lifetime.end.p0i8(i64 2, i8* nonnull %12) #8
  br label %67

21:                                               ; preds = %11
  call void @llvm.lifetime.end.p0i8(i64 2, i8* nonnull %12) #8
  %22 = bitcast %"class.v8::internal::IdentityMap"** %4 to %"class.v8::internal::IdentityMapBase"**
  %23 = load %"class.v8::internal::IdentityMapBase"*, %"class.v8::internal::IdentityMapBase"** %22, align 8
  br label %24

24:                                               ; preds = %7, %21
  %25 = phi %"class.v8::internal::IdentityMapBase"* [ %23, %21 ], [ %8, %7 ]
  %26 = call { i64*, i8 } @_ZN2v88internal15IdentityMapBase17FindOrInsertEntryEm(%"class.v8::internal::IdentityMapBase"* %25, i64 %1) #8
  %27 = extractvalue { i64*, i8 } %26, 0
  %28 = extractvalue { i64*, i8 } %26, 1
  %29 = bitcast i64* %27 to i64**
  %30 = and i8 %28, 1
  %31 = icmp eq i8 %30, 0
  br i1 %31, label %34, label %32

32:                                               ; preds = %24
  %33 = load i64*, i64** %29, align 8
  br label %67

34:                                               ; preds = %24
  %35 = getelementptr inbounds %"class.v8::internal::compiler::JSHeapBroker", %"class.v8::internal::compiler::JSHeapBroker"* %0, i64 0, i32 14
  %36 = load %"class.v8::internal::LocalIsolate"*, %"class.v8::internal::LocalIsolate"** %35, align 8
  %37 = getelementptr inbounds %"class.v8::internal::LocalIsolate", %"class.v8::internal::LocalIsolate"* %36, i64 0, i32 1, i32 8, i32 0, i32 0, i32 0
  %38 = load %"class.v8::internal::PersistentHandles"*, %"class.v8::internal::PersistentHandles"** %37, align 8
  %39 = icmp eq %"class.v8::internal::PersistentHandles"* %38, null
  br i1 %39, label %40, label %43

40:                                               ; preds = %34
  %41 = getelementptr inbounds %"class.v8::internal::LocalIsolate", %"class.v8::internal::LocalIsolate"* %36, i64 0, i32 1
  call void @_ZN2v88internal9LocalHeap23EnsurePersistentHandlesEv(%"class.v8::internal::LocalHeap"* %41) #8
  %42 = load %"class.v8::internal::PersistentHandles"*, %"class.v8::internal::PersistentHandles"** %37, align 8
  br label %43

43:                                               ; preds = %34, %40
  %44 = phi %"class.v8::internal::PersistentHandles"* [ %38, %34 ], [ %42, %40 ]
  %45 = call i64* @_ZN2v88internal17PersistentHandles9GetHandleEm(%"class.v8::internal::PersistentHandles"* %44, i64 %1) #8
  store i64* %45, i64** %29, align 8
  br label %67

46:                                               ; preds = %2
  %47 = getelementptr inbounds %"class.v8::internal::compiler::JSHeapBroker", %"class.v8::internal::compiler::JSHeapBroker"* %0, i64 0, i32 0
  %48 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %47, align 8
  %49 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %48, i64 0, i32 31, i32 4
  %50 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %49, align 8
  %51 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %50, null
  br i1 %51, label %54, label %52

52:                                               ; preds = %46
  %53 = tail call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %50, i64 %1) #8
  br label %67

54:                                               ; preds = %46
  %55 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %48, i64 0, i32 31, i32 0
  %56 = load i64*, i64** %55, align 8
  %57 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %48, i64 0, i32 31, i32 1
  %58 = load i64*, i64** %57, align 8
  %59 = icmp eq i64* %56, %58
  br i1 %59, label %60, label %62

60:                                               ; preds = %54
  %61 = tail call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %48) #8
  br label %62

62:                                               ; preds = %60, %54
  %63 = phi i64* [ %61, %60 ], [ %56, %54 ]
  %64 = ptrtoint i64* %63 to i64
  %65 = add i64 %64, 8
  %66 = inttoptr i64 %65 to i64*
  store i64* %66, i64** %55, align 8
  store i64 %1, i64* %63, align 8
  br label %67

67:                                               ; preds = %43, %32, %62, %52, %15
  %68 = phi i64* [ %20, %15 ], [ %53, %52 ], [ %63, %62 ], [ %33, %32 ], [ %45, %43 ]
  ret i64* %68
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64* @_ZN2v88internal8compiler12JSHeapBroker25CanonicalPersistentHandleINS0_4CellEEENS0_6HandleIT_EES6_(%"class.v8::internal::compiler::JSHeapBroker"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca i16, align 2
  %4 = getelementptr inbounds %"class.v8::internal::compiler::JSHeapBroker", %"class.v8::internal::compiler::JSHeapBroker"* %0, i64 0, i32 15, i32 0, i32 0, i32 0
  %5 = load %"class.v8::internal::IdentityMap"*, %"class.v8::internal::IdentityMap"** %4, align 8
  %6 = icmp eq %"class.v8::internal::IdentityMap"* %5, null
  br i1 %6, label %46, label %7

7:                                                ; preds = %2
  %8 = bitcast %"class.v8::internal::IdentityMap"* %5 to %"class.v8::internal::IdentityMapBase"*
  %9 = and i64 %1, 3
  %10 = icmp eq i64 %9, 1
  br i1 %10, label %11, label %24

11:                                               ; preds = %7
  %12 = bitcast i16* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 2, i8* nonnull %12) #8
  %13 = getelementptr inbounds %"class.v8::internal::compiler::JSHeapBroker", %"class.v8::internal::compiler::JSHeapBroker"* %0, i64 0, i32 4
  %14 = call zeroext i1 @_ZNK2v88internal12RootIndexMap6LookupEmPNS0_9RootIndexE(%"class.v8::internal::RootIndexMap"* %13, i64 %1, i16* nonnull %3) #8
  br i1 %14, label %15, label %21

15:                                               ; preds = %11
  %16 = getelementptr inbounds %"class.v8::internal::compiler::JSHeapBroker", %"class.v8::internal::compiler::JSHeapBroker"* %0, i64 0, i32 0
  %17 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %16, align 8
  %18 = load i16, i16* %3, align 2
  %19 = zext i16 %18 to i64
  %20 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %17, i64 0, i32 0, i32 7, i32 0, i64 %19
  call void @llvm.lifetime.end.p0i8(i64 2, i8* nonnull %12) #8
  br label %67

21:                                               ; preds = %11
  call void @llvm.lifetime.end.p0i8(i64 2, i8* nonnull %12) #8
  %22 = bitcast %"class.v8::internal::IdentityMap"** %4 to %"class.v8::internal::IdentityMapBase"**
  %23 = load %"class.v8::internal::IdentityMapBase"*, %"class.v8::internal::IdentityMapBase"** %22, align 8
  br label %24

24:                                               ; preds = %7, %21
  %25 = phi %"class.v8::internal::IdentityMapBase"* [ %23, %21 ], [ %8, %7 ]
  %26 = call { i64*, i8 } @_ZN2v88internal15IdentityMapBase17FindOrInsertEntryEm(%"class.v8::internal::IdentityMapBase"* %25, i64 %1) #8
  %27 = extractvalue { i64*, i8 } %26, 0
  %28 = extractvalue { i64*, i8 } %26, 1
  %29 = bitcast i64* %27 to i64**
  %30 = and i8 %28, 1
  %31 = icmp eq i8 %30, 0
  br i1 %31, label %34, label %32

32:                                               ; preds = %24
  %33 = load i64*, i64** %29, align 8
  br label %67

34:                                               ; preds = %24
  %35 = getelementptr inbounds %"class.v8::internal::compiler::JSHeapBroker", %"class.v8::internal::compiler::JSHeapBroker"* %0, i64 0, i32 14
  %36 = load %"class.v8::internal::LocalIsolate"*, %"class.v8::internal::LocalIsolate"** %35, align 8
  %37 = getelementptr inbounds %"class.v8::internal::LocalIsolate", %"class.v8::internal::LocalIsolate"* %36, i64 0, i32 1, i32 8, i32 0, i32 0, i32 0
  %38 = load %"class.v8::internal::PersistentHandles"*, %"class.v8::internal::PersistentHandles"** %37, align 8
  %39 = icmp eq %"class.v8::internal::PersistentHandles"* %38, null
  br i1 %39, label %40, label %43

40:                                               ; preds = %34
  %41 = getelementptr inbounds %"class.v8::internal::LocalIsolate", %"class.v8::internal::LocalIsolate"* %36, i64 0, i32 1
  call void @_ZN2v88internal9LocalHeap23EnsurePersistentHandlesEv(%"class.v8::internal::LocalHeap"* %41) #8
  %42 = load %"class.v8::internal::PersistentHandles"*, %"class.v8::internal::PersistentHandles"** %37, align 8
  br label %43

43:                                               ; preds = %34, %40
  %44 = phi %"class.v8::internal::PersistentHandles"* [ %38, %34 ], [ %42, %40 ]
  %45 = call i64* @_ZN2v88internal17PersistentHandles9GetHandleEm(%"class.v8::internal::PersistentHandles"* %44, i64 %1) #8
  store i64* %45, i64** %29, align 8
  br label %67

46:                                               ; preds = %2
  %47 = getelementptr inbounds %"class.v8::internal::compiler::JSHeapBroker", %"class.v8::internal::compiler::JSHeapBroker"* %0, i64 0, i32 0
  %48 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %47, align 8
  %49 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %48, i64 0, i32 31, i32 4
  %50 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %49, align 8
  %51 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %50, null
  br i1 %51, label %54, label %52

52:                                               ; preds = %46
  %53 = tail call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %50, i64 %1) #8
  br label %67

54:                                               ; preds = %46
  %55 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %48, i64 0, i32 31, i32 0
  %56 = load i64*, i64** %55, align 8
  %57 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %48, i64 0, i32 31, i32 1
  %58 = load i64*, i64** %57, align 8
  %59 = icmp eq i64* %56, %58
  br i1 %59, label %60, label %62

60:                                               ; preds = %54
  %61 = tail call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %48) #8
  br label %62

62:                                               ; preds = %60, %54
  %63 = phi i64* [ %61, %60 ], [ %56, %54 ]
  %64 = ptrtoint i64* %63 to i64
  %65 = add i64 %64, 8
  %66 = inttoptr i64 %65 to i64*
  store i64* %66, i64** %55, align 8
  store i64 %1, i64* %63, align 8
  br label %67

67:                                               ; preds = %43, %32, %62, %52, %15
  %68 = phi i64* [ %20, %15 ], [ %53, %52 ], [ %63, %62 ], [ %33, %32 ], [ %45, %43 ]
  ret i64* %68
}

declare i64 @_ZN2v88internal19ObjectHashTableBaseINS0_15ObjectHashTableENS0_20ObjectHashTableShapeEE6LookupENS0_16PtrComprCageBaseENS0_6HandleINS0_6ObjectEEEi(%"class.v8::internal::ObjectHashTableBase"*, i64, i64*, i32) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64* @_ZN2v88internal8compiler12JSHeapBroker25CanonicalPersistentHandleINS0_6ObjectEEENS0_6HandleIT_EES6_(%"class.v8::internal::compiler::JSHeapBroker"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca i16, align 2
  %4 = getelementptr inbounds %"class.v8::internal::compiler::JSHeapBroker", %"class.v8::internal::compiler::JSHeapBroker"* %0, i64 0, i32 15, i32 0, i32 0, i32 0
  %5 = load %"class.v8::internal::IdentityMap"*, %"class.v8::internal::IdentityMap"** %4, align 8
  %6 = icmp eq %"class.v8::internal::IdentityMap"* %5, null
  br i1 %6, label %46, label %7

7:                                                ; preds = %2
  %8 = bitcast %"class.v8::internal::IdentityMap"* %5 to %"class.v8::internal::IdentityMapBase"*
  %9 = and i64 %1, 3
  %10 = icmp eq i64 %9, 1
  br i1 %10, label %11, label %24

11:                                               ; preds = %7
  %12 = bitcast i16* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 2, i8* nonnull %12) #8
  %13 = getelementptr inbounds %"class.v8::internal::compiler::JSHeapBroker", %"class.v8::internal::compiler::JSHeapBroker"* %0, i64 0, i32 4
  %14 = call zeroext i1 @_ZNK2v88internal12RootIndexMap6LookupEmPNS0_9RootIndexE(%"class.v8::internal::RootIndexMap"* %13, i64 %1, i16* nonnull %3) #8
  br i1 %14, label %15, label %21

15:                                               ; preds = %11
  %16 = getelementptr inbounds %"class.v8::internal::compiler::JSHeapBroker", %"class.v8::internal::compiler::JSHeapBroker"* %0, i64 0, i32 0
  %17 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %16, align 8
  %18 = load i16, i16* %3, align 2
  %19 = zext i16 %18 to i64
  %20 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %17, i64 0, i32 0, i32 7, i32 0, i64 %19
  call void @llvm.lifetime.end.p0i8(i64 2, i8* nonnull %12) #8
  br label %67

21:                                               ; preds = %11
  call void @llvm.lifetime.end.p0i8(i64 2, i8* nonnull %12) #8
  %22 = bitcast %"class.v8::internal::IdentityMap"** %4 to %"class.v8::internal::IdentityMapBase"**
  %23 = load %"class.v8::internal::IdentityMapBase"*, %"class.v8::internal::IdentityMapBase"** %22, align 8
  br label %24

24:                                               ; preds = %7, %21
  %25 = phi %"class.v8::internal::IdentityMapBase"* [ %23, %21 ], [ %8, %7 ]
  %26 = call { i64*, i8 } @_ZN2v88internal15IdentityMapBase17FindOrInsertEntryEm(%"class.v8::internal::IdentityMapBase"* %25, i64 %1) #8
  %27 = extractvalue { i64*, i8 } %26, 0
  %28 = extractvalue { i64*, i8 } %26, 1
  %29 = bitcast i64* %27 to i64**
  %30 = and i8 %28, 1
  %31 = icmp eq i8 %30, 0
  br i1 %31, label %34, label %32

32:                                               ; preds = %24
  %33 = load i64*, i64** %29, align 8
  br label %67

34:                                               ; preds = %24
  %35 = getelementptr inbounds %"class.v8::internal::compiler::JSHeapBroker", %"class.v8::internal::compiler::JSHeapBroker"* %0, i64 0, i32 14
  %36 = load %"class.v8::internal::LocalIsolate"*, %"class.v8::internal::LocalIsolate"** %35, align 8
  %37 = getelementptr inbounds %"class.v8::internal::LocalIsolate", %"class.v8::internal::LocalIsolate"* %36, i64 0, i32 1, i32 8, i32 0, i32 0, i32 0
  %38 = load %"class.v8::internal::PersistentHandles"*, %"class.v8::internal::PersistentHandles"** %37, align 8
  %39 = icmp eq %"class.v8::internal::PersistentHandles"* %38, null
  br i1 %39, label %40, label %43

40:                                               ; preds = %34
  %41 = getelementptr inbounds %"class.v8::internal::LocalIsolate", %"class.v8::internal::LocalIsolate"* %36, i64 0, i32 1
  call void @_ZN2v88internal9LocalHeap23EnsurePersistentHandlesEv(%"class.v8::internal::LocalHeap"* %41) #8
  %42 = load %"class.v8::internal::PersistentHandles"*, %"class.v8::internal::PersistentHandles"** %37, align 8
  br label %43

43:                                               ; preds = %34, %40
  %44 = phi %"class.v8::internal::PersistentHandles"* [ %38, %34 ], [ %42, %40 ]
  %45 = call i64* @_ZN2v88internal17PersistentHandles9GetHandleEm(%"class.v8::internal::PersistentHandles"* %44, i64 %1) #8
  store i64* %45, i64** %29, align 8
  br label %67

46:                                               ; preds = %2
  %47 = getelementptr inbounds %"class.v8::internal::compiler::JSHeapBroker", %"class.v8::internal::compiler::JSHeapBroker"* %0, i64 0, i32 0
  %48 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %47, align 8
  %49 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %48, i64 0, i32 31, i32 4
  %50 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %49, align 8
  %51 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %50, null
  br i1 %51, label %54, label %52

52:                                               ; preds = %46
  %53 = tail call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %50, i64 %1) #8
  br label %67

54:                                               ; preds = %46
  %55 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %48, i64 0, i32 31, i32 0
  %56 = load i64*, i64** %55, align 8
  %57 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %48, i64 0, i32 31, i32 1
  %58 = load i64*, i64** %57, align 8
  %59 = icmp eq i64* %56, %58
  br i1 %59, label %60, label %62

60:                                               ; preds = %54
  %61 = tail call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %48) #8
  br label %62

62:                                               ; preds = %60, %54
  %63 = phi i64* [ %61, %60 ], [ %56, %54 ]
  %64 = ptrtoint i64* %63 to i64
  %65 = add i64 %64, 8
  %66 = inttoptr i64 %65 to i64*
  store i64* %66, i64** %55, align 8
  store i64 %1, i64* %63, align 8
  br label %67

67:                                               ; preds = %43, %32, %62, %52, %15
  %68 = phi i64* [ %20, %15 ], [ %53, %52 ], [ %63, %62 ], [ %33, %32 ], [ %45, %43 ]
  ret i64* %68
}

declare %"class.v8::internal::compiler::ObjectData"* @_ZN2v88internal8compiler12JSHeapBroker18TryGetOrCreateDataENS0_6HandleINS0_6ObjectEEENS_4base5FlagsINS1_19GetOrCreateDataFlagEiEE(%"class.v8::internal::compiler::JSHeapBroker"*, i64*, i32) local_unnamed_addr #4

declare void @_ZN2v88internal16CallOptimizationC1INS0_12LocalIsolateEEEPT_NS0_6HandleINS0_6ObjectEEE(%"class.v8::internal::CallOptimization"*, %"class.v8::internal::LocalIsolate"*, i64*) unnamed_addr #4

declare zeroext i1 @_ZNK2v88internal16CallOptimization30IsCrossContextLazyAccessorPairENS0_7ContextENS0_3MapE(%"class.v8::internal::CallOptimization"*, i64, i64) local_unnamed_addr #4

declare i64* @_ZNK2v88internal16CallOptimization26LookupHolderOfExpectedTypeINS0_12LocalIsolateEEENS0_6HandleINS0_8JSObjectEEEPT_NS4_INS0_3MapEEEPNS1_12HolderLookupE(%"class.v8::internal::CallOptimization"*, %"class.v8::internal::LocalIsolate"*, i64*, i32*) local_unnamed_addr #4

declare { i8, i64 } @_ZN2v88internal20FunctionTemplateInfo24TryGetCachedPropertyNameEPNS0_7IsolateENS0_6ObjectE(%"class.v8::internal::Isolate"*, i64) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64* @_ZN2v88internal8compiler12JSHeapBroker25CanonicalPersistentHandleINS0_4NameEEENS0_6HandleIT_EES6_(%"class.v8::internal::compiler::JSHeapBroker"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca i16, align 2
  %4 = getelementptr inbounds %"class.v8::internal::compiler::JSHeapBroker", %"class.v8::internal::compiler::JSHeapBroker"* %0, i64 0, i32 15, i32 0, i32 0, i32 0
  %5 = load %"class.v8::internal::IdentityMap"*, %"class.v8::internal::IdentityMap"** %4, align 8
  %6 = icmp eq %"class.v8::internal::IdentityMap"* %5, null
  br i1 %6, label %46, label %7

7:                                                ; preds = %2
  %8 = bitcast %"class.v8::internal::IdentityMap"* %5 to %"class.v8::internal::IdentityMapBase"*
  %9 = and i64 %1, 3
  %10 = icmp eq i64 %9, 1
  br i1 %10, label %11, label %24

11:                                               ; preds = %7
  %12 = bitcast i16* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 2, i8* nonnull %12) #8
  %13 = getelementptr inbounds %"class.v8::internal::compiler::JSHeapBroker", %"class.v8::internal::compiler::JSHeapBroker"* %0, i64 0, i32 4
  %14 = call zeroext i1 @_ZNK2v88internal12RootIndexMap6LookupEmPNS0_9RootIndexE(%"class.v8::internal::RootIndexMap"* %13, i64 %1, i16* nonnull %3) #8
  br i1 %14, label %15, label %21

15:                                               ; preds = %11
  %16 = getelementptr inbounds %"class.v8::internal::compiler::JSHeapBroker", %"class.v8::internal::compiler::JSHeapBroker"* %0, i64 0, i32 0
  %17 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %16, align 8
  %18 = load i16, i16* %3, align 2
  %19 = zext i16 %18 to i64
  %20 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %17, i64 0, i32 0, i32 7, i32 0, i64 %19
  call void @llvm.lifetime.end.p0i8(i64 2, i8* nonnull %12) #8
  br label %67

21:                                               ; preds = %11
  call void @llvm.lifetime.end.p0i8(i64 2, i8* nonnull %12) #8
  %22 = bitcast %"class.v8::internal::IdentityMap"** %4 to %"class.v8::internal::IdentityMapBase"**
  %23 = load %"class.v8::internal::IdentityMapBase"*, %"class.v8::internal::IdentityMapBase"** %22, align 8
  br label %24

24:                                               ; preds = %7, %21
  %25 = phi %"class.v8::internal::IdentityMapBase"* [ %23, %21 ], [ %8, %7 ]
  %26 = call { i64*, i8 } @_ZN2v88internal15IdentityMapBase17FindOrInsertEntryEm(%"class.v8::internal::IdentityMapBase"* %25, i64 %1) #8
  %27 = extractvalue { i64*, i8 } %26, 0
  %28 = extractvalue { i64*, i8 } %26, 1
  %29 = bitcast i64* %27 to i64**
  %30 = and i8 %28, 1
  %31 = icmp eq i8 %30, 0
  br i1 %31, label %34, label %32

32:                                               ; preds = %24
  %33 = load i64*, i64** %29, align 8
  br label %67

34:                                               ; preds = %24
  %35 = getelementptr inbounds %"class.v8::internal::compiler::JSHeapBroker", %"class.v8::internal::compiler::JSHeapBroker"* %0, i64 0, i32 14
  %36 = load %"class.v8::internal::LocalIsolate"*, %"class.v8::internal::LocalIsolate"** %35, align 8
  %37 = getelementptr inbounds %"class.v8::internal::LocalIsolate", %"class.v8::internal::LocalIsolate"* %36, i64 0, i32 1, i32 8, i32 0, i32 0, i32 0
  %38 = load %"class.v8::internal::PersistentHandles"*, %"class.v8::internal::PersistentHandles"** %37, align 8
  %39 = icmp eq %"class.v8::internal::PersistentHandles"* %38, null
  br i1 %39, label %40, label %43

40:                                               ; preds = %34
  %41 = getelementptr inbounds %"class.v8::internal::LocalIsolate", %"class.v8::internal::LocalIsolate"* %36, i64 0, i32 1
  call void @_ZN2v88internal9LocalHeap23EnsurePersistentHandlesEv(%"class.v8::internal::LocalHeap"* %41) #8
  %42 = load %"class.v8::internal::PersistentHandles"*, %"class.v8::internal::PersistentHandles"** %37, align 8
  br label %43

43:                                               ; preds = %34, %40
  %44 = phi %"class.v8::internal::PersistentHandles"* [ %38, %34 ], [ %42, %40 ]
  %45 = call i64* @_ZN2v88internal17PersistentHandles9GetHandleEm(%"class.v8::internal::PersistentHandles"* %44, i64 %1) #8
  store i64* %45, i64** %29, align 8
  br label %67

46:                                               ; preds = %2
  %47 = getelementptr inbounds %"class.v8::internal::compiler::JSHeapBroker", %"class.v8::internal::compiler::JSHeapBroker"* %0, i64 0, i32 0
  %48 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %47, align 8
  %49 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %48, i64 0, i32 31, i32 4
  %50 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %49, align 8
  %51 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %50, null
  br i1 %51, label %54, label %52

52:                                               ; preds = %46
  %53 = tail call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %50, i64 %1) #8
  br label %67

54:                                               ; preds = %46
  %55 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %48, i64 0, i32 31, i32 0
  %56 = load i64*, i64** %55, align 8
  %57 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %48, i64 0, i32 31, i32 1
  %58 = load i64*, i64** %57, align 8
  %59 = icmp eq i64* %56, %58
  br i1 %59, label %60, label %62

60:                                               ; preds = %54
  %61 = tail call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %48) #8
  br label %62

62:                                               ; preds = %60, %54
  %63 = phi i64* [ %61, %60 ], [ %56, %54 ]
  %64 = ptrtoint i64* %63 to i64
  %65 = add i64 %64, 8
  %66 = inttoptr i64 %65 to i64*
  store i64* %66, i64** %55, align 8
  store i64 %1, i64* %63, align 8
  br label %67

67:                                               ; preds = %43, %32, %62, %52, %15
  %68 = phi i64* [ %20, %15 ], [ %53, %52 ], [ %63, %62 ], [ %33, %32 ], [ %45, %43 ]
  ret i64* %68
}

declare zeroext i1 @_ZNK2v88internal12RootIndexMap6LookupEmPNS0_9RootIndexE(%"class.v8::internal::RootIndexMap"*, i64, i16*) local_unnamed_addr #4

declare { i64*, i8 } @_ZN2v88internal15IdentityMapBase17FindOrInsertEntryEm(%"class.v8::internal::IdentityMapBase"*, i64) local_unnamed_addr #4

declare void @_ZN2v88internal9LocalHeap23EnsurePersistentHandlesEv(%"class.v8::internal::LocalHeap"*) local_unnamed_addr #4

declare i64* @_ZN2v88internal17PersistentHandles9GetHandleEm(%"class.v8::internal::PersistentHandles"*, i64) local_unnamed_addr #4

declare i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"*, i64) local_unnamed_addr #4

declare i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"*) local_unnamed_addr #4

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN2v88internal6Object13GetSimpleHashES1_(i64) local_unnamed_addr #7 comdat align 2 {
  %2 = alloca %"class.v8::internal::String", align 8
  %3 = alloca %"class.v8::internal::String", align 8
  %4 = alloca %"class.v8::internal::SharedFunctionInfo", align 8
  %5 = and i64 %0, 1
  %6 = icmp eq i64 %5, 0
  br i1 %6, label %7, label %24

7:                                                ; preds = %1
  %8 = trunc i64 %0 to i32
  %9 = ashr i32 %8, 1
  %10 = xor i32 %9, -1
  %11 = shl i32 %9, 15
  %12 = add i32 %11, %10
  %13 = lshr i32 %12, 12
  %14 = xor i32 %13, %12
  %15 = mul i32 %14, 5
  %16 = lshr i32 %15, 4
  %17 = xor i32 %16, %15
  %18 = mul i32 %17, 2057
  %19 = lshr i32 %18, 16
  %20 = and i32 %18, 1073741823
  %21 = xor i32 %20, %19
  %22 = shl nuw nsw i32 %21, 1
  %23 = zext i32 %22 to i64
  br label %180

24:                                               ; preds = %1
  %25 = and i64 %0, -4294967296
  %26 = add i64 %0, -1
  %27 = inttoptr i64 %26 to i32*
  %28 = load atomic i32, i32* %27 monotonic, align 4
  %29 = zext i32 %28 to i64
  %30 = or i64 %25, %29
  %31 = add i64 %30, 7
  %32 = inttoptr i64 %31 to i16*
  %33 = load atomic i16, i16* %32 monotonic, align 2
  %34 = icmp eq i16 %33, 66
  br i1 %34, label %35, label %81

35:                                               ; preds = %24
  %36 = add i64 %0, 3
  %37 = inttoptr i64 %36 to double*
  %38 = load double, double* %37, align 1
  %39 = fcmp uno double %38, 0.000000e+00
  br i1 %39, label %180, label %40

40:                                               ; preds = %35
  %41 = fcmp oge double %38, 0xC1E0000000000000
  %42 = fcmp ole double %38, 0x41DFFFFFFFC00000
  %43 = and i1 %41, %42
  br i1 %43, label %44, label %61

44:                                               ; preds = %40
  %45 = fptosi double %38 to i32
  %46 = sitofp i32 %45 to double
  %47 = fcmp oeq double %38, %46
  br i1 %47, label %48, label %61

48:                                               ; preds = %44
  %49 = xor i32 %45, -1
  %50 = shl i32 %45, 15
  %51 = add i32 %50, %49
  %52 = lshr i32 %51, 12
  %53 = xor i32 %52, %51
  %54 = mul i32 %53, 5
  %55 = lshr i32 %54, 4
  %56 = xor i32 %55, %54
  %57 = mul i32 %56, 2057
  %58 = lshr i32 %57, 16
  %59 = and i32 %57, 1073741823
  %60 = xor i32 %59, %58
  br label %76

61:                                               ; preds = %44, %40
  %62 = bitcast double %38 to i64
  %63 = xor i64 %62, -1
  %64 = shl i64 %62, 18
  %65 = add i64 %64, %63
  %66 = lshr i64 %65, 31
  %67 = xor i64 %66, %65
  %68 = mul i64 %67, 21
  %69 = lshr i64 %68, 11
  %70 = xor i64 %69, %68
  %71 = mul i64 %70, 65
  %72 = lshr i64 %71, 22
  %73 = xor i64 %72, %71
  %74 = trunc i64 %73 to i32
  %75 = and i32 %74, 1073741823
  br label %76

76:                                               ; preds = %61, %48
  %77 = phi i32 [ %60, %48 ], [ %75, %61 ]
  %78 = shl nsw i32 %77, 1
  %79 = and i32 %78, 2147483646
  %80 = zext i32 %79 to i64
  br label %180

81:                                               ; preds = %24
  %82 = load atomic i32, i32* %27 monotonic, align 4
  %83 = zext i32 %82 to i64
  %84 = or i64 %25, %83
  %85 = add i64 %84, 7
  %86 = inttoptr i64 %85 to i16*
  %87 = load atomic i16, i16* %86 monotonic, align 2
  %88 = icmp ult i16 %87, 65
  br i1 %88, label %89, label %105

89:                                               ; preds = %81
  %90 = add i64 %0, 3
  %91 = inttoptr i64 %90 to i32*
  %92 = load i32, i32* %91, align 4
  %93 = and i32 %92, 1
  %94 = icmp eq i32 %93, 0
  br i1 %94, label %95, label %97

95:                                               ; preds = %89
  %96 = lshr i32 %92, 2
  br label %101

97:                                               ; preds = %89
  %98 = bitcast %"class.v8::internal::String"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %98) #8
  %99 = getelementptr inbounds %"class.v8::internal::String", %"class.v8::internal::String"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i64 %0, i64* %99, align 8
  %100 = call i32 @_ZN2v88internal6String17ComputeAndSetHashEv(%"class.v8::internal::String"* nonnull %2) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %98) #8
  br label %101

101:                                              ; preds = %95, %97
  %102 = phi i32 [ %96, %95 ], [ %100, %97 ]
  %103 = sext i32 %102 to i64
  %104 = shl nsw i64 %103, 1
  br label %180

105:                                              ; preds = %81
  %106 = load atomic i32, i32* %27 monotonic, align 4
  %107 = zext i32 %106 to i64
  %108 = or i64 %25, %107
  %109 = add i64 %108, 7
  %110 = inttoptr i64 %109 to i16*
  %111 = load atomic i16, i16* %110 monotonic, align 2
  %112 = icmp eq i16 %111, 67
  br i1 %112, label %113, label %134

113:                                              ; preds = %105
  %114 = add i64 %0, 11
  %115 = inttoptr i64 %114 to i32*
  %116 = load i32, i32* %115, align 4
  %117 = zext i32 %116 to i64
  %118 = or i64 %25, %117
  %119 = add i64 %118, 3
  %120 = inttoptr i64 %119 to i32*
  %121 = load i32, i32* %120, align 4
  %122 = and i32 %121, 1
  %123 = icmp eq i32 %122, 0
  br i1 %123, label %124, label %126

124:                                              ; preds = %113
  %125 = lshr i32 %121, 2
  br label %130

126:                                              ; preds = %113
  %127 = bitcast %"class.v8::internal::String"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %127) #8
  %128 = getelementptr inbounds %"class.v8::internal::String", %"class.v8::internal::String"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i64 %118, i64* %128, align 8
  %129 = call i32 @_ZN2v88internal6String17ComputeAndSetHashEv(%"class.v8::internal::String"* nonnull %3) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %127) #8
  br label %130

130:                                              ; preds = %124, %126
  %131 = phi i32 [ %125, %124 ], [ %129, %126 ]
  %132 = sext i32 %131 to i64
  %133 = shl nsw i64 %132, 1
  br label %180

134:                                              ; preds = %105
  %135 = load atomic i32, i32* %27 monotonic, align 4
  %136 = zext i32 %135 to i64
  %137 = or i64 %25, %136
  %138 = add i64 %137, 7
  %139 = inttoptr i64 %138 to i16*
  %140 = load atomic i16, i16* %139 monotonic, align 2
  %141 = icmp eq i16 %140, 65
  br i1 %141, label %142, label %165

142:                                              ; preds = %134
  %143 = add i64 %0, 3
  %144 = inttoptr i64 %143 to i32*
  %145 = load atomic i32, i32* %144 monotonic, align 4
  %146 = and i32 %145, 2147483646
  %147 = icmp eq i32 %146, 0
  br i1 %147, label %180, label %148

148:                                              ; preds = %142
  %149 = add i64 %0, 7
  %150 = inttoptr i64 %149 to i64*
  %151 = load i64, i64* %150, align 1
  %152 = xor i64 %151, -1
  %153 = shl i64 %151, 18
  %154 = add i64 %153, %152
  %155 = lshr i64 %154, 31
  %156 = xor i64 %155, %154
  %157 = mul i64 %156, 21
  %158 = lshr i64 %157, 11
  %159 = xor i64 %158, %157
  %160 = mul i64 %159, 65
  %161 = lshr i64 %160, 22
  %162 = xor i64 %161, %160
  %163 = shl i64 %162, 1
  %164 = and i64 %163, 2147483646
  br label %180

165:                                              ; preds = %134
  %166 = load atomic i32, i32* %27 monotonic, align 4
  %167 = zext i32 %166 to i64
  %168 = or i64 %25, %167
  %169 = add i64 %168, 7
  %170 = inttoptr i64 %169 to i16*
  %171 = load atomic i16, i16* %170 monotonic, align 2
  %172 = icmp eq i16 %171, 179
  br i1 %172, label %173, label %180

173:                                              ; preds = %165
  %174 = bitcast %"class.v8::internal::SharedFunctionInfo"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %174) #8
  %175 = getelementptr inbounds %"class.v8::internal::SharedFunctionInfo", %"class.v8::internal::SharedFunctionInfo"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i64 %0, i64* %175, align 8
  %176 = call i32 @_ZN2v88internal18SharedFunctionInfo4HashEv(%"class.v8::internal::SharedFunctionInfo"* nonnull %4) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %174) #8
  %177 = shl i32 %176, 1
  %178 = and i32 %177, 2147483646
  %179 = zext i32 %178 to i64
  br label %180

180:                                              ; preds = %148, %142, %165, %35, %76, %173, %130, %101, %7
  %181 = phi i64 [ %23, %7 ], [ %104, %101 ], [ %133, %130 ], [ %179, %173 ], [ %80, %76 ], [ 2147483646, %35 ], [ %0, %165 ], [ %164, %148 ], [ 0, %142 ]
  ret i64 %181
}

declare i64 @_ZN2v88internal10JSReceiver15GetIdentityHashEv(%"class.v8::internal::JSReceiver"*) local_unnamed_addr #4

declare i32 @_ZN2v88internal18SharedFunctionInfo4HashEv(%"class.v8::internal::SharedFunctionInfo"*) local_unnamed_addr #4

declare i32 @_ZN2v88internal6String17ComputeAndSetHashEv(%"class.v8::internal::String"*) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZN2v88internal12BinarySearchILNS0_10SearchModeE1ENS0_15DescriptorArrayEEEiPT0_NS0_4NameEiPi(%"class.v8::internal::DescriptorArray"*, i64, i32, i32*) local_unnamed_addr #0 comdat {
  %5 = getelementptr inbounds %"class.v8::internal::DescriptorArray", %"class.v8::internal::DescriptorArray"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %6 = load i64, i64* %5, align 8
  %7 = add i64 %6, 5
  %8 = inttoptr i64 %7 to i16*
  %9 = load atomic i16, i16* %8 monotonic, align 2
  %10 = sext i16 %9 to i32
  %11 = add nsw i32 %10, -1
  %12 = add i64 %1, 3
  %13 = inttoptr i64 %12 to i32*
  %14 = load i32, i32* %13, align 4
  %15 = lshr i32 %14, 2
  %16 = icmp eq i32 %11, 0
  br i1 %16, label %20, label %17

17:                                               ; preds = %4
  %18 = and i64 %6, -4294967296
  %19 = add i64 %6, -1
  br label %28

20:                                               ; preds = %28, %4
  %21 = phi i32 [ 0, %4 ], [ %59, %28 ]
  %22 = icmp slt i32 %21, %10
  br i1 %22, label %23, label %96

23:                                               ; preds = %20
  %24 = and i64 %6, -4294967296
  %25 = add i64 %6, -1
  %26 = trunc i64 %1 to i32
  %27 = sext i32 %21 to i64
  br label %65

28:                                               ; preds = %17, %28
  %29 = phi i32 [ 0, %17 ], [ %60, %28 ]
  %30 = phi i32 [ %11, %17 ], [ %59, %28 ]
  %31 = sub nsw i32 %30, %29
  %32 = sdiv i32 %31, 2
  %33 = add nsw i32 %32, %29
  %34 = sext i32 %33 to i64
  %35 = mul i64 %34, 51539607552
  %36 = add i64 %35, 68719476736
  %37 = ashr exact i64 %36, 32
  %38 = or i64 %37, 3
  %39 = add i64 %38, %6
  %40 = inttoptr i64 %39 to i32*
  %41 = load atomic i32, i32* %40 monotonic, align 4
  %42 = lshr i32 %41, 10
  %43 = and i32 %42, 1023
  %44 = zext i32 %43 to i64
  %45 = mul nuw nsw i64 %44, 51539607552
  %46 = add nuw nsw i64 %45, 68719476736
  %47 = lshr exact i64 %46, 32
  %48 = add i64 %19, %47
  %49 = inttoptr i64 %48 to i32*
  %50 = load atomic i32, i32* %49 monotonic, align 4
  %51 = zext i32 %50 to i64
  %52 = or i64 %18, %51
  %53 = add i64 %52, 3
  %54 = inttoptr i64 %53 to i32*
  %55 = load i32, i32* %54, align 4
  %56 = lshr i32 %55, 2
  %57 = icmp ult i32 %56, %15
  %58 = add nsw i32 %33, 1
  %59 = select i1 %57, i32 %30, i32 %33
  %60 = select i1 %57, i32 %58, i32 %29
  %61 = icmp eq i32 %59, %60
  br i1 %61, label %20, label %28

62:                                               ; preds = %90
  %63 = trunc i64 %92 to i32
  %64 = icmp eq i32 %63, %10
  br i1 %64, label %96, label %65

65:                                               ; preds = %62, %23
  %66 = phi i64 [ %27, %23 ], [ %92, %62 ]
  %67 = mul i64 %66, 51539607552
  %68 = add i64 %67, 68719476736
  %69 = ashr exact i64 %68, 32
  %70 = or i64 %69, 3
  %71 = add i64 %70, %6
  %72 = inttoptr i64 %71 to i32*
  %73 = load atomic i32, i32* %72 monotonic, align 4
  %74 = lshr i32 %73, 10
  %75 = and i32 %74, 1023
  %76 = zext i32 %75 to i64
  %77 = mul nuw nsw i64 %76, 51539607552
  %78 = add nuw nsw i64 %77, 68719476736
  %79 = lshr exact i64 %78, 32
  %80 = add i64 %25, %79
  %81 = inttoptr i64 %80 to i32*
  %82 = load atomic i32, i32* %81 monotonic, align 4
  %83 = zext i32 %82 to i64
  %84 = or i64 %24, %83
  %85 = add i64 %84, 3
  %86 = inttoptr i64 %85 to i32*
  %87 = load i32, i32* %86, align 4
  %88 = lshr i32 %87, 2
  %89 = icmp eq i32 %88, %15
  br i1 %89, label %90, label %96

90:                                               ; preds = %65
  %91 = icmp eq i32 %82, %26
  %92 = add nsw i64 %66, 1
  br i1 %91, label %93, label %62

93:                                               ; preds = %90
  %94 = icmp slt i32 %75, %2
  %95 = select i1 %94, i32 %75, i32 -1
  br label %96

96:                                               ; preds = %65, %62, %20, %93
  %97 = phi i32 [ %95, %93 ], [ -1, %20 ], [ -1, %62 ], [ -1, %65 ]
  ret i32 %97
}

declare void @_ZN2v84base11SharedMutex12UnlockSharedEv(%"class.v8::base::SharedMutex"*) local_unnamed_addr #4

declare void @_ZN2v84base11SharedMutex10LockSharedEv(%"class.v8::base::SharedMutex"*) local_unnamed_addr #4

declare zeroext i1 @_ZN2v88internal35IsMoreGeneralElementsKindTransitionENS0_12ElementsKindES1_(i8 zeroext, i8 zeroext) local_unnamed_addr #4

declare zeroext i1 @_ZN2v88internal6String10SlowEqualsEPNS0_7IsolateENS0_6HandleIS1_EES5_(%"class.v8::internal::Isolate"*, i64*, i64*) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160), i8*, i64) local_unnamed_addr #0 comdat {
  %4 = alloca %"class.std::__1::locale", align 8
  %5 = alloca %"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry", align 8
  %6 = getelementptr inbounds %"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry", %"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"* %5, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %6) #8
  call void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryC1ERS3_(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"* nonnull %5, %"class.std::__1::basic_ostream"* dereferenceable(160) %0) #8
  %7 = load i8, i8* %6, align 8, !range !80
  %8 = icmp eq i8 %7, 0
  br i1 %8, label %58, label %9

9:                                                ; preds = %3
  %10 = bitcast %"class.std::__1::basic_ostream"* %0 to i8**
  %11 = load i8*, i8** %10, align 8
  %12 = getelementptr i8, i8* %11, i64 -24
  %13 = bitcast i8* %12 to i64*
  %14 = load i64, i64* %13, align 8
  %15 = bitcast %"class.std::__1::basic_ostream"* %0 to i8*
  %16 = getelementptr inbounds i8, i8* %15, i64 %14
  %17 = getelementptr inbounds i8, i8* %16, i64 40
  %18 = bitcast i8* %17 to %"class.std::__1::basic_streambuf"**
  %19 = load %"class.std::__1::basic_streambuf"*, %"class.std::__1::basic_streambuf"** %18, align 8
  %20 = bitcast i8* %16 to %"class.std::__1::ios_base"*
  %21 = getelementptr inbounds i8, i8* %16, i64 8
  %22 = bitcast i8* %21 to i32*
  %23 = load i32, i32* %22, align 8
  %24 = and i32 %23, 176
  %25 = icmp eq i32 %24, 32
  %26 = getelementptr inbounds i8, i8* %1, i64 %2
  %27 = select i1 %25, i8* %26, i8* %1
  %28 = getelementptr inbounds i8, i8* %16, i64 144
  %29 = bitcast i8* %28 to i32*
  %30 = load i32, i32* %29, align 8
  %31 = icmp eq i32 %30, -1
  br i1 %31, label %32, label %42

32:                                               ; preds = %9
  %33 = bitcast %"class.std::__1::locale"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %33) #8
  call void @_ZNKSt3__18ios_base6getlocEv(%"class.std::__1::locale"* nonnull sret %4, %"class.std::__1::ios_base"* %20) #8
  %34 = call %"class.std::__1::locale::facet"* @_ZNKSt3__16locale9use_facetERNS0_2idE(%"class.std::__1::locale"* nonnull %4, %"class.std::__1::locale::id"* nonnull dereferenceable(16) @_ZNSt3__15ctypeIcE2idE) #8
  %35 = bitcast %"class.std::__1::locale::facet"* %34 to %"class.std::__1::ctype"*
  %36 = bitcast %"class.std::__1::locale::facet"* %34 to i8 (%"class.std::__1::ctype"*, i8)***
  %37 = load i8 (%"class.std::__1::ctype"*, i8)**, i8 (%"class.std::__1::ctype"*, i8)*** %36, align 8
  %38 = getelementptr inbounds i8 (%"class.std::__1::ctype"*, i8)*, i8 (%"class.std::__1::ctype"*, i8)** %37, i64 7
  %39 = load i8 (%"class.std::__1::ctype"*, i8)*, i8 (%"class.std::__1::ctype"*, i8)** %38, align 8
  %40 = call signext i8 %39(%"class.std::__1::ctype"* %35, i8 signext 32) #8
  call void @_ZNSt3__16localeD1Ev(%"class.std::__1::locale"* nonnull %4) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %33) #8
  %41 = sext i8 %40 to i32
  store i32 %41, i32* %29, align 8
  br label %42

42:                                               ; preds = %9, %32
  %43 = phi i32 [ %41, %32 ], [ %30, %9 ]
  %44 = trunc i32 %43 to i8
  %45 = call %"class.std::__1::basic_streambuf"* @_ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_(%"class.std::__1::basic_streambuf"* %19, i8* %1, i8* %27, i8* %26, %"class.std::__1::ios_base"* dereferenceable(136) %20, i8 signext %44)
  %46 = icmp eq %"class.std::__1::basic_streambuf"* %45, null
  br i1 %46, label %47, label %58

47:                                               ; preds = %42
  %48 = load i8*, i8** %10, align 8
  %49 = getelementptr i8, i8* %48, i64 -24
  %50 = bitcast i8* %49 to i64*
  %51 = load i64, i64* %50, align 8
  %52 = getelementptr inbounds i8, i8* %15, i64 %51
  %53 = bitcast i8* %52 to %"class.std::__1::ios_base"*
  %54 = getelementptr inbounds i8, i8* %52, i64 32
  %55 = bitcast i8* %54 to i32*
  %56 = load i32, i32* %55, align 8
  %57 = or i32 %56, 5
  call void @_ZNSt3__18ios_base5clearEj(%"class.std::__1::ios_base"* %53, i32 %57) #8
  br label %58

58:                                               ; preds = %3, %42, %47
  call void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryD1Ev(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"* nonnull %5) #8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %6) #8
  ret %"class.std::__1::basic_ostream"* %0
}

declare void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryC1ERS3_(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"*, %"class.std::__1::basic_ostream"* dereferenceable(160)) unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.std::__1::basic_streambuf"* @_ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_(%"class.std::__1::basic_streambuf"*, i8*, i8*, i8*, %"class.std::__1::ios_base"* dereferenceable(136), i8 signext) local_unnamed_addr #0 comdat {
  %7 = alloca %"class.std::__1::basic_string", align 8
  %8 = icmp eq %"class.std::__1::basic_streambuf"* %0, null
  br i1 %8, label %78, label %9

9:                                                ; preds = %6
  %10 = ptrtoint i8* %3 to i64
  %11 = ptrtoint i8* %1 to i64
  %12 = sub i64 %10, %11
  %13 = getelementptr inbounds %"class.std::__1::ios_base", %"class.std::__1::ios_base"* %4, i64 0, i32 3
  %14 = load i64, i64* %13, align 8
  %15 = icmp sgt i64 %14, %12
  %16 = sub nsw i64 %14, %12
  %17 = select i1 %15, i64 %16, i64 0
  %18 = ptrtoint i8* %2 to i64
  %19 = sub i64 %18, %11
  %20 = icmp sgt i64 %19, 0
  br i1 %20, label %21, label %28

21:                                               ; preds = %9
  %22 = bitcast %"class.std::__1::basic_streambuf"* %0 to i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)***
  %23 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)**, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*** %22, align 8
  %24 = getelementptr inbounds i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %23, i64 12
  %25 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %24, align 8
  %26 = tail call i64 %25(%"class.std::__1::basic_streambuf"* nonnull %0, i8* %1, i64 %19) #8
  %27 = icmp eq i64 %26, %19
  br i1 %27, label %28, label %78

28:                                               ; preds = %21, %9
  %29 = icmp sgt i64 %17, 0
  br i1 %29, label %30, label %67

30:                                               ; preds = %28
  %31 = bitcast %"class.std::__1::basic_string"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %31) #8
  %32 = icmp ult i64 %17, 23
  br i1 %32, label %42, label %33

33:                                               ; preds = %30
  %34 = add nuw i64 %17, 16
  %35 = and i64 %34, -16
  %36 = tail call i8* @_Znwm(i64 %35) #13
  %37 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %36, i8** %37, align 8
  %38 = or i64 %35, -9223372036854775808
  %39 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %38, i64* %39, align 8
  %40 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %17, i64* %40, align 8
  %41 = bitcast %"class.std::__1::basic_string"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  br label %46

42:                                               ; preds = %30
  %43 = trunc i64 %17 to i8
  %44 = bitcast %"class.std::__1::basic_string"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %45 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %44, i64 0, i32 1, i32 0
  store i8 %43, i8* %45, align 1
  br label %46

46:                                               ; preds = %33, %42
  %47 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %41, %33 ], [ %44, %42 ]
  %48 = phi i8* [ %36, %33 ], [ %31, %42 ]
  call void @llvm.memset.p0i8.i64(i8* nonnull align 1 %48, i8 %5, i64 %17, i1 false) #8
  %49 = getelementptr inbounds i8, i8* %48, i64 %17
  store i8 0, i8* %49, align 1
  %50 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %47, i64 0, i32 1, i32 0
  %51 = load i8, i8* %50, align 1
  %52 = icmp slt i8 %51, 0
  %53 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %54 = load i8*, i8** %53, align 8
  %55 = select i1 %52, i8* %54, i8* %31
  %56 = bitcast %"class.std::__1::basic_streambuf"* %0 to i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)***
  %57 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)**, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*** %56, align 8
  %58 = getelementptr inbounds i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %57, i64 12
  %59 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %58, align 8
  %60 = call i64 %59(%"class.std::__1::basic_streambuf"* nonnull %0, i8* %55, i64 %17) #8
  %61 = icmp eq i64 %60, %17
  %62 = load i8, i8* %50, align 1
  %63 = icmp slt i8 %62, 0
  br i1 %63, label %64, label %66

64:                                               ; preds = %46
  %65 = load i8*, i8** %53, align 8
  call void @_ZdlPv(i8* %65) #13
  br label %66

66:                                               ; preds = %46, %64
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %31) #8
  br i1 %61, label %67, label %78

67:                                               ; preds = %66, %28
  %68 = sub i64 %10, %18
  %69 = icmp sgt i64 %68, 0
  br i1 %69, label %70, label %77

70:                                               ; preds = %67
  %71 = bitcast %"class.std::__1::basic_streambuf"* %0 to i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)***
  %72 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)**, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*** %71, align 8
  %73 = getelementptr inbounds i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %72, i64 12
  %74 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %73, align 8
  %75 = call i64 %74(%"class.std::__1::basic_streambuf"* nonnull %0, i8* %2, i64 %68) #8
  %76 = icmp eq i64 %75, %68
  br i1 %76, label %77, label %78

77:                                               ; preds = %70, %67
  store i64 0, i64* %13, align 8
  br label %78

78:                                               ; preds = %77, %66, %21, %70, %6
  %79 = phi %"class.std::__1::basic_streambuf"* [ null, %6 ], [ %0, %77 ], [ null, %66 ], [ null, %21 ], [ null, %70 ]
  ret %"class.std::__1::basic_streambuf"* %79
}

; Function Attrs: nounwind
declare void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryD1Ev(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"*) unnamed_addr #9

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #10

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #11

declare void @_ZNKSt3__18ios_base6getlocEv(%"class.std::__1::locale"* sret, %"class.std::__1::ios_base"*) local_unnamed_addr #4

; Function Attrs: nounwind
declare void @_ZNSt3__16localeD1Ev(%"class.std::__1::locale"*) unnamed_addr #9

declare %"class.std::__1::locale::facet"* @_ZNKSt3__16locale9use_facetERNS0_2idE(%"class.std::__1::locale"*, %"class.std::__1::locale::id"* dereferenceable(16)) local_unnamed_addr #4

declare void @_ZNSt3__18ios_base5clearEj(%"class.std::__1::ios_base"*, i32) local_unnamed_addr #4

; Function Attrs: argmemonly nounwind
declare void @llvm.memmove.p0i8.p0i8.i64(i8* nocapture, i8* nocapture readonly, i64, i1 immarg) #2

declare void @_ZNK2v88internal8compiler12JSHeapBroker5TraceEv(%"class.std::__1::basic_string"* sret, %"class.v8::internal::compiler::JSHeapBroker"*) local_unnamed_addr #4

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2v88internal12StdoutStreamD1Ev(%"class.v8::internal::StdoutStream"*) unnamed_addr #7 comdat align 2 {
  %2 = bitcast %"class.v8::internal::StdoutStream"* %0 to i64*
  store i64 ptrtoint (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTVN2v88internal12StdoutStreamE, i64 0, inrange i32 0, i64 3) to i64), i64* %2, align 8
  %3 = getelementptr inbounds %"class.v8::internal::StdoutStream", %"class.v8::internal::StdoutStream"* %0, i64 0, i32 2
  %4 = bitcast %"class.std::__1::basic_ios.base"* %3 to i64*
  store i64 ptrtoint (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTVN2v88internal12StdoutStreamE, i64 0, inrange i32 1, i64 3) to i64), i64* %4, align 8
  %5 = getelementptr inbounds %"class.v8::internal::StdoutStream", %"class.v8::internal::StdoutStream"* %0, i64 0, i32 1, i32 0
  %6 = load %"class.v8::base::RecursiveMutex"*, %"class.v8::base::RecursiveMutex"** %5, align 8
  tail call void @_ZN2v84base14RecursiveMutex6UnlockEv(%"class.v8::base::RecursiveMutex"* %6) #8
  store i64 ptrtoint (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTCN2v88internal12StdoutStreamE0_NS0_8OFStreamE, i64 0, inrange i32 0, i64 3) to i64), i64* %2, align 8
  store i64 ptrtoint (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTCN2v88internal12StdoutStreamE0_NS0_8OFStreamE, i64 0, inrange i32 1, i64 3) to i64), i64* %4, align 8
  %7 = getelementptr inbounds %"class.v8::internal::StdoutStream", %"class.v8::internal::StdoutStream"* %0, i64 0, i32 0, i32 1, i32 0
  tail call void @_ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED2Ev(%"class.std::__1::basic_streambuf"* %7) #8
  %8 = bitcast %"class.v8::internal::StdoutStream"* %0 to %"class.std::__1::basic_ostream"*
  tail call void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEED2Ev(%"class.std::__1::basic_ostream"* %8, i8** getelementptr inbounds ([6 x i8*], [6 x i8*]* @_ZTTN2v88internal12StdoutStreamE, i64 0, i64 2)) #8
  %9 = bitcast %"class.std::__1::basic_ios.base"* %3 to %"class.std::__1::basic_ios"*
  tail call void @_ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev(%"class.std::__1::basic_ios"* %9) #8
  ret void
}

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEi(%"class.std::__1::basic_ostream"*, i32) local_unnamed_addr #4

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN2v88internallsERNSt3__113basic_ostreamIcNS1_11char_traitsIcEEEERKNS0_5BriefE(%"class.std::__1::basic_ostream"* dereferenceable(160), %"struct.v8::internal::Brief"* dereferenceable(8)) local_unnamed_addr #4

declare void @_ZN2v88internal8OFStreamC2EP8_IO_FILE(%"class.v8::internal::OFStream"*, i8**, %struct._IO_FILE*) unnamed_addr #4

declare %"class.v8::base::RecursiveMutex"* @_ZN2v88internal12StdoutStream14GetStdoutMutexEv() local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2v88internal8OFStreamD1Ev(%"class.v8::internal::OFStream"*) unnamed_addr #0 comdat align 2 {
  %2 = bitcast %"class.v8::internal::OFStream"* %0 to i64*
  store i64 ptrtoint (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTVN2v88internal8OFStreamE, i64 0, inrange i32 0, i64 3) to i64), i64* %2, align 8
  %3 = getelementptr inbounds %"class.v8::internal::OFStream", %"class.v8::internal::OFStream"* %0, i64 0, i32 2
  %4 = bitcast %"class.std::__1::basic_ios.base"* %3 to i64*
  store i64 ptrtoint (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTVN2v88internal8OFStreamE, i64 0, inrange i32 1, i64 3) to i64), i64* %4, align 8
  %5 = getelementptr inbounds %"class.v8::internal::OFStream", %"class.v8::internal::OFStream"* %0, i64 0, i32 1, i32 0
  tail call void @_ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED2Ev(%"class.std::__1::basic_streambuf"* %5) #8
  %6 = bitcast %"class.v8::internal::OFStream"* %0 to %"class.std::__1::basic_ostream"*
  tail call void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEED2Ev(%"class.std::__1::basic_ostream"* %6, i8** getelementptr inbounds ([4 x i8*], [4 x i8*]* @_ZTTN2v88internal8OFStreamE, i64 0, i64 1)) #8
  %7 = bitcast %"class.std::__1::basic_ios.base"* %3 to %"class.std::__1::basic_ios"*
  tail call void @_ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev(%"class.std::__1::basic_ios"* %7) #8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2v88internal8OFStreamD0Ev(%"class.v8::internal::OFStream"*) unnamed_addr #0 comdat align 2 {
  %2 = bitcast %"class.v8::internal::OFStream"* %0 to i64*
  store i64 ptrtoint (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTVN2v88internal8OFStreamE, i64 0, inrange i32 0, i64 3) to i64), i64* %2, align 8
  %3 = getelementptr inbounds %"class.v8::internal::OFStream", %"class.v8::internal::OFStream"* %0, i64 0, i32 2
  %4 = bitcast %"class.std::__1::basic_ios.base"* %3 to i64*
  store i64 ptrtoint (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTVN2v88internal8OFStreamE, i64 0, inrange i32 1, i64 3) to i64), i64* %4, align 8
  %5 = getelementptr inbounds %"class.v8::internal::OFStream", %"class.v8::internal::OFStream"* %0, i64 0, i32 1, i32 0
  tail call void @_ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED2Ev(%"class.std::__1::basic_streambuf"* %5) #8
  %6 = bitcast %"class.v8::internal::OFStream"* %0 to %"class.std::__1::basic_ostream"*
  tail call void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEED2Ev(%"class.std::__1::basic_ostream"* %6, i8** getelementptr inbounds ([4 x i8*], [4 x i8*]* @_ZTTN2v88internal8OFStreamE, i64 0, i64 1)) #8
  %7 = bitcast %"class.std::__1::basic_ios.base"* %3 to %"class.std::__1::basic_ios"*
  tail call void @_ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev(%"class.std::__1::basic_ios"* %7) #8
  %8 = bitcast %"class.v8::internal::OFStream"* %0 to i8*
  tail call void @_ZdlPv(i8* %8) #13
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZTv0_n24_N2v88internal8OFStreamD1Ev(%"class.v8::internal::OFStream"*) unnamed_addr #0 comdat align 2 {
  %2 = bitcast %"class.v8::internal::OFStream"* %0 to i8*
  %3 = bitcast %"class.v8::internal::OFStream"* %0 to i8**
  %4 = load i8*, i8** %3, align 8
  %5 = getelementptr inbounds i8, i8* %4, i64 -24
  %6 = bitcast i8* %5 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = getelementptr inbounds i8, i8* %2, i64 %7
  %9 = bitcast i8* %8 to i64*
  store i64 ptrtoint (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTVN2v88internal8OFStreamE, i64 0, inrange i32 0, i64 3) to i64), i64* %9, align 8
  %10 = getelementptr inbounds i8, i8* %8, i64 80
  %11 = bitcast i8* %10 to i64*
  store i64 ptrtoint (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTVN2v88internal8OFStreamE, i64 0, inrange i32 1, i64 3) to i64), i64* %11, align 8
  %12 = getelementptr inbounds i8, i8* %8, i64 8
  %13 = bitcast i8* %12 to %"class.std::__1::basic_streambuf"*
  tail call void @_ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED2Ev(%"class.std::__1::basic_streambuf"* %13) #8
  %14 = bitcast i8* %8 to %"class.std::__1::basic_ostream"*
  tail call void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEED2Ev(%"class.std::__1::basic_ostream"* %14, i8** getelementptr inbounds ([4 x i8*], [4 x i8*]* @_ZTTN2v88internal8OFStreamE, i64 0, i64 1)) #8
  %15 = bitcast i8* %10 to %"class.std::__1::basic_ios"*
  tail call void @_ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev(%"class.std::__1::basic_ios"* %15) #8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZTv0_n24_N2v88internal8OFStreamD0Ev(%"class.v8::internal::OFStream"*) unnamed_addr #0 comdat align 2 {
  %2 = bitcast %"class.v8::internal::OFStream"* %0 to i8*
  %3 = bitcast %"class.v8::internal::OFStream"* %0 to i8**
  %4 = load i8*, i8** %3, align 8
  %5 = getelementptr inbounds i8, i8* %4, i64 -24
  %6 = bitcast i8* %5 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = getelementptr inbounds i8, i8* %2, i64 %7
  %9 = bitcast i8* %8 to i64*
  store i64 ptrtoint (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTVN2v88internal8OFStreamE, i64 0, inrange i32 0, i64 3) to i64), i64* %9, align 8
  %10 = getelementptr inbounds i8, i8* %8, i64 80
  %11 = bitcast i8* %10 to i64*
  store i64 ptrtoint (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTVN2v88internal8OFStreamE, i64 0, inrange i32 1, i64 3) to i64), i64* %11, align 8
  %12 = getelementptr inbounds i8, i8* %8, i64 8
  %13 = bitcast i8* %12 to %"class.std::__1::basic_streambuf"*
  tail call void @_ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED2Ev(%"class.std::__1::basic_streambuf"* %13) #8
  %14 = bitcast i8* %8 to %"class.std::__1::basic_ostream"*
  tail call void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEED2Ev(%"class.std::__1::basic_ostream"* %14, i8** getelementptr inbounds ([4 x i8*], [4 x i8*]* @_ZTTN2v88internal8OFStreamE, i64 0, i64 1)) #8
  %15 = bitcast i8* %10 to %"class.std::__1::basic_ios"*
  tail call void @_ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev(%"class.std::__1::basic_ios"* %15) #8
  tail call void @_ZdlPv(i8* %8) #13
  ret void
}

; Function Attrs: nounwind
declare void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEED1Ev(%"class.std::__1::basic_ostream"*) unnamed_addr #9

; Function Attrs: nounwind
declare void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEED0Ev(%"class.std::__1::basic_ostream"*) unnamed_addr #9

; Function Attrs: nounwind ssp uwtable
declare void @_ZTv0_n24_NSt3__113basic_ostreamIcNS_11char_traitsIcEEED1Ev(%"class.std::__1::basic_ostream"*) unnamed_addr #0 align 2

; Function Attrs: nounwind ssp uwtable
declare void @_ZTv0_n24_NSt3__113basic_ostreamIcNS_11char_traitsIcEEED0Ev(%"class.std::__1::basic_ostream"*) unnamed_addr #0 align 2

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2v88internal12StdoutStreamD0Ev(%"class.v8::internal::StdoutStream"*) unnamed_addr #7 comdat align 2 {
  %2 = bitcast %"class.v8::internal::StdoutStream"* %0 to i64*
  store i64 ptrtoint (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTVN2v88internal12StdoutStreamE, i64 0, inrange i32 0, i64 3) to i64), i64* %2, align 8
  %3 = getelementptr inbounds %"class.v8::internal::StdoutStream", %"class.v8::internal::StdoutStream"* %0, i64 0, i32 2
  %4 = bitcast %"class.std::__1::basic_ios.base"* %3 to i64*
  store i64 ptrtoint (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTVN2v88internal12StdoutStreamE, i64 0, inrange i32 1, i64 3) to i64), i64* %4, align 8
  %5 = getelementptr inbounds %"class.v8::internal::StdoutStream", %"class.v8::internal::StdoutStream"* %0, i64 0, i32 1, i32 0
  %6 = load %"class.v8::base::RecursiveMutex"*, %"class.v8::base::RecursiveMutex"** %5, align 8
  tail call void @_ZN2v84base14RecursiveMutex6UnlockEv(%"class.v8::base::RecursiveMutex"* %6) #8
  store i64 ptrtoint (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTCN2v88internal12StdoutStreamE0_NS0_8OFStreamE, i64 0, inrange i32 0, i64 3) to i64), i64* %2, align 8
  store i64 ptrtoint (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTCN2v88internal12StdoutStreamE0_NS0_8OFStreamE, i64 0, inrange i32 1, i64 3) to i64), i64* %4, align 8
  %7 = getelementptr inbounds %"class.v8::internal::StdoutStream", %"class.v8::internal::StdoutStream"* %0, i64 0, i32 0, i32 1, i32 0
  tail call void @_ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED2Ev(%"class.std::__1::basic_streambuf"* %7) #8
  %8 = bitcast %"class.v8::internal::StdoutStream"* %0 to %"class.std::__1::basic_ostream"*
  tail call void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEED2Ev(%"class.std::__1::basic_ostream"* %8, i8** getelementptr inbounds ([6 x i8*], [6 x i8*]* @_ZTTN2v88internal12StdoutStreamE, i64 0, i64 2)) #8
  %9 = bitcast %"class.std::__1::basic_ios.base"* %3 to %"class.std::__1::basic_ios"*
  tail call void @_ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev(%"class.std::__1::basic_ios"* %9) #8
  %10 = bitcast %"class.v8::internal::StdoutStream"* %0 to i8*
  tail call void @_ZdlPv(i8* %10) #13
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZTv0_n24_N2v88internal12StdoutStreamD1Ev(%"class.v8::internal::StdoutStream"*) unnamed_addr #7 comdat align 2 {
  %2 = bitcast %"class.v8::internal::StdoutStream"* %0 to i8*
  %3 = bitcast %"class.v8::internal::StdoutStream"* %0 to i8**
  %4 = load i8*, i8** %3, align 8
  %5 = getelementptr inbounds i8, i8* %4, i64 -24
  %6 = bitcast i8* %5 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = getelementptr inbounds i8, i8* %2, i64 %7
  %9 = bitcast i8* %8 to i64*
  store i64 ptrtoint (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTVN2v88internal12StdoutStreamE, i64 0, inrange i32 0, i64 3) to i64), i64* %9, align 8
  %10 = getelementptr inbounds i8, i8* %8, i64 88
  %11 = bitcast i8* %10 to i64*
  store i64 ptrtoint (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTVN2v88internal12StdoutStreamE, i64 0, inrange i32 1, i64 3) to i64), i64* %11, align 8
  %12 = getelementptr inbounds i8, i8* %8, i64 80
  %13 = bitcast i8* %12 to %"class.v8::base::RecursiveMutex"**
  %14 = load %"class.v8::base::RecursiveMutex"*, %"class.v8::base::RecursiveMutex"** %13, align 8
  tail call void @_ZN2v84base14RecursiveMutex6UnlockEv(%"class.v8::base::RecursiveMutex"* %14) #8
  store i64 ptrtoint (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTCN2v88internal12StdoutStreamE0_NS0_8OFStreamE, i64 0, inrange i32 0, i64 3) to i64), i64* %9, align 8
  store i64 ptrtoint (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTCN2v88internal12StdoutStreamE0_NS0_8OFStreamE, i64 0, inrange i32 1, i64 3) to i64), i64* %11, align 8
  %15 = getelementptr inbounds i8, i8* %8, i64 8
  %16 = bitcast i8* %15 to %"class.std::__1::basic_streambuf"*
  tail call void @_ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED2Ev(%"class.std::__1::basic_streambuf"* %16) #8
  %17 = bitcast i8* %8 to %"class.std::__1::basic_ostream"*
  tail call void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEED2Ev(%"class.std::__1::basic_ostream"* %17, i8** getelementptr inbounds ([6 x i8*], [6 x i8*]* @_ZTTN2v88internal12StdoutStreamE, i64 0, i64 2)) #8
  %18 = bitcast i8* %10 to %"class.std::__1::basic_ios"*
  tail call void @_ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev(%"class.std::__1::basic_ios"* %18) #8
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZTv0_n24_N2v88internal12StdoutStreamD0Ev(%"class.v8::internal::StdoutStream"*) unnamed_addr #7 comdat align 2 {
  %2 = bitcast %"class.v8::internal::StdoutStream"* %0 to i8*
  %3 = bitcast %"class.v8::internal::StdoutStream"* %0 to i8**
  %4 = load i8*, i8** %3, align 8
  %5 = getelementptr inbounds i8, i8* %4, i64 -24
  %6 = bitcast i8* %5 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = getelementptr inbounds i8, i8* %2, i64 %7
  %9 = bitcast i8* %8 to i64*
  store i64 ptrtoint (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTVN2v88internal12StdoutStreamE, i64 0, inrange i32 0, i64 3) to i64), i64* %9, align 8
  %10 = getelementptr inbounds i8, i8* %8, i64 88
  %11 = bitcast i8* %10 to i64*
  store i64 ptrtoint (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTVN2v88internal12StdoutStreamE, i64 0, inrange i32 1, i64 3) to i64), i64* %11, align 8
  %12 = getelementptr inbounds i8, i8* %8, i64 80
  %13 = bitcast i8* %12 to %"class.v8::base::RecursiveMutex"**
  %14 = load %"class.v8::base::RecursiveMutex"*, %"class.v8::base::RecursiveMutex"** %13, align 8
  tail call void @_ZN2v84base14RecursiveMutex6UnlockEv(%"class.v8::base::RecursiveMutex"* %14) #8
  store i64 ptrtoint (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTCN2v88internal12StdoutStreamE0_NS0_8OFStreamE, i64 0, inrange i32 0, i64 3) to i64), i64* %9, align 8
  store i64 ptrtoint (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTCN2v88internal12StdoutStreamE0_NS0_8OFStreamE, i64 0, inrange i32 1, i64 3) to i64), i64* %11, align 8
  %15 = getelementptr inbounds i8, i8* %8, i64 8
  %16 = bitcast i8* %15 to %"class.std::__1::basic_streambuf"*
  tail call void @_ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED2Ev(%"class.std::__1::basic_streambuf"* %16) #8
  %17 = bitcast i8* %8 to %"class.std::__1::basic_ostream"*
  tail call void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEED2Ev(%"class.std::__1::basic_ostream"* %17, i8** getelementptr inbounds ([6 x i8*], [6 x i8*]* @_ZTTN2v88internal12StdoutStreamE, i64 0, i64 2)) #8
  %18 = bitcast i8* %10 to %"class.std::__1::basic_ios"*
  tail call void @_ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev(%"class.std::__1::basic_ios"* %18) #8
  tail call void @_ZdlPv(i8* %8) #13
  ret void
}

declare void @_ZN2v84base14RecursiveMutex4LockEv(%"class.v8::base::RecursiveMutex"*) local_unnamed_addr #4

; Function Attrs: nounwind
declare void @_ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev(%"class.std::__1::basic_ios"*) unnamed_addr #9

; Function Attrs: nounwind
declare void @_ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED2Ev(%"class.std::__1::basic_streambuf"*) unnamed_addr #9

; Function Attrs: nounwind
declare void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEED2Ev(%"class.std::__1::basic_ostream"*, i8**) unnamed_addr #9

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE3putEc(%"class.std::__1::basic_ostream"*, i8 signext) local_unnamed_addr #4

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE5flushEv(%"class.std::__1::basic_ostream"*) local_unnamed_addr #4

declare void @_ZN2v84base14RecursiveMutex6UnlockEv(%"class.v8::base::RecursiveMutex"*) local_unnamed_addr #4

declare zeroext i1 @_ZNK2v88internal8compiler9ObjectRef5IsMapEv(%"class.v8::internal::compiler::ObjectRef"*) local_unnamed_addr #4

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorIN2v88internal8compiler17ElementAccessInfoENS2_13ZoneAllocatorIS4_EEE21__push_back_slow_pathIRKS4_EEvOT_(%"class.std::__1::vector.1283"*, %"class.v8::internal::compiler::ElementAccessInfo"* dereferenceable(72)) local_unnamed_addr #7 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector.1283", %"class.std::__1::vector.1283"* %0, i64 0, i32 0, i32 1
  %4 = bitcast %"class.v8::internal::compiler::ElementAccessInfo"** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.std::__1::vector.1283"* %0 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = sub i64 %5, %7
  %9 = sdiv exact i64 %8, 72
  %10 = add nsw i64 %9, 1
  %11 = icmp ugt i64 %10, 29826161
  br i1 %11, label %12, label %14

12:                                               ; preds = %2
  %13 = bitcast %"class.std::__1::vector.1283"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %13) #12
  unreachable

14:                                               ; preds = %2
  %15 = getelementptr inbounds %"class.std::__1::vector.1283", %"class.std::__1::vector.1283"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %16 = bitcast %"class.v8::internal::compiler::ElementAccessInfo"** %15 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = sub i64 %17, %7
  %19 = sdiv exact i64 %18, 72
  %20 = icmp ult i64 %19, 14913080
  br i1 %20, label %21, label %26

21:                                               ; preds = %14
  %22 = shl nsw i64 %19, 1
  %23 = icmp ult i64 %22, %10
  %24 = select i1 %23, i64 %10, i64 %22
  %25 = icmp eq i64 %24, 0
  br i1 %25, label %44, label %26

26:                                               ; preds = %14, %21
  %27 = phi i64 [ %24, %21 ], [ 29826161, %14 ]
  %28 = getelementptr inbounds %"class.std::__1::vector.1283", %"class.std::__1::vector.1283"* %0, i64 0, i32 0, i32 2, i32 1, i32 0, i32 0
  %29 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %28, align 8
  %30 = mul i64 %27, 72
  %31 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %29, i64 0, i32 2
  %32 = load i64, i64* %31, align 8
  %33 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %29, i64 0, i32 3
  %34 = load i64, i64* %33, align 8
  %35 = sub i64 %34, %32
  %36 = icmp ugt i64 %30, %35
  br i1 %36, label %37, label %39, !prof !2

37:                                               ; preds = %26
  %38 = tail call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %29, i64 %30) #8
  br label %41

39:                                               ; preds = %26
  %40 = add i64 %32, %30
  store i64 %40, i64* %31, align 8
  br label %41

41:                                               ; preds = %39, %37
  %42 = phi i64 [ %38, %37 ], [ %32, %39 ]
  %43 = inttoptr i64 %42 to %"class.v8::internal::compiler::ElementAccessInfo"*
  br label %44

44:                                               ; preds = %21, %41
  %45 = phi i64 [ %27, %41 ], [ 0, %21 ]
  %46 = phi %"class.v8::internal::compiler::ElementAccessInfo"* [ %43, %41 ], [ null, %21 ]
  %47 = getelementptr inbounds %"class.v8::internal::compiler::ElementAccessInfo", %"class.v8::internal::compiler::ElementAccessInfo"* %46, i64 %9
  %48 = getelementptr inbounds %"class.v8::internal::compiler::ElementAccessInfo", %"class.v8::internal::compiler::ElementAccessInfo"* %46, i64 %45
  %49 = ptrtoint %"class.v8::internal::compiler::ElementAccessInfo"* %48 to i64
  tail call void @_ZN2v88internal8compiler17ElementAccessInfoC2ERKS2_(%"class.v8::internal::compiler::ElementAccessInfo"* %47, %"class.v8::internal::compiler::ElementAccessInfo"* dereferenceable(72) %1) #8
  %50 = getelementptr inbounds %"class.v8::internal::compiler::ElementAccessInfo", %"class.v8::internal::compiler::ElementAccessInfo"* %47, i64 1
  %51 = ptrtoint %"class.v8::internal::compiler::ElementAccessInfo"* %50 to i64
  %52 = getelementptr inbounds %"class.std::__1::vector.1283", %"class.std::__1::vector.1283"* %0, i64 0, i32 0, i32 0
  %53 = load %"class.v8::internal::compiler::ElementAccessInfo"*, %"class.v8::internal::compiler::ElementAccessInfo"** %52, align 8
  %54 = load %"class.v8::internal::compiler::ElementAccessInfo"*, %"class.v8::internal::compiler::ElementAccessInfo"** %3, align 8
  %55 = icmp eq %"class.v8::internal::compiler::ElementAccessInfo"* %54, %53
  br i1 %55, label %56, label %58

56:                                               ; preds = %44
  %57 = ptrtoint %"class.v8::internal::compiler::ElementAccessInfo"* %53 to i64
  br label %114

58:                                               ; preds = %44, %58
  %59 = phi %"class.v8::internal::compiler::ElementAccessInfo"* [ %109, %58 ], [ %47, %44 ]
  %60 = phi %"class.v8::internal::compiler::ElementAccessInfo"* [ %61, %58 ], [ %54, %44 ]
  %61 = getelementptr inbounds %"class.v8::internal::compiler::ElementAccessInfo", %"class.v8::internal::compiler::ElementAccessInfo"* %60, i64 -1
  %62 = getelementptr inbounds %"class.v8::internal::compiler::ElementAccessInfo", %"class.v8::internal::compiler::ElementAccessInfo"* %59, i64 -1, i32 0
  %63 = getelementptr inbounds %"class.v8::internal::compiler::ElementAccessInfo", %"class.v8::internal::compiler::ElementAccessInfo"* %61, i64 0, i32 0
  %64 = load i8, i8* %63, align 8
  store i8 %64, i8* %62, align 8
  %65 = getelementptr inbounds %"class.v8::internal::compiler::ElementAccessInfo", %"class.v8::internal::compiler::ElementAccessInfo"* %59, i64 -1, i32 1
  %66 = getelementptr inbounds %"class.v8::internal::compiler::ElementAccessInfo", %"class.v8::internal::compiler::ElementAccessInfo"* %60, i64 -1, i32 1
  %67 = getelementptr inbounds %"class.v8::internal::compiler::ElementAccessInfo", %"class.v8::internal::compiler::ElementAccessInfo"* %60, i64 -1, i32 1, i32 0, i32 0, i32 2, i32 1, i32 0
  %68 = getelementptr inbounds %"class.v8::internal::compiler::ElementAccessInfo", %"class.v8::internal::compiler::ElementAccessInfo"* %59, i64 -1, i32 1, i32 0, i32 0, i32 2, i32 1
  %69 = bitcast %"class.v8::internal::ZoneAllocator"* %67 to i64*
  %70 = bitcast %"struct.std::__1::__compressed_pair_elem.0"* %68 to i64*
  %71 = bitcast %"class.v8::internal::ZoneVector"* %65 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %71, i8 0, i64 24, i1 false) #8
  %72 = load i64, i64* %69, align 8
  store i64 %72, i64* %70, align 8
  %73 = bitcast %"class.v8::internal::ZoneVector"* %66 to i64*
  %74 = load i64, i64* %73, align 8
  %75 = bitcast %"class.v8::internal::ZoneVector"* %65 to i64*
  store i64 %74, i64* %75, align 8
  %76 = getelementptr inbounds %"class.v8::internal::compiler::ElementAccessInfo", %"class.v8::internal::compiler::ElementAccessInfo"* %60, i64 -1, i32 1, i32 0, i32 0, i32 1
  %77 = bitcast %"class.v8::internal::Handle"** %76 to i64*
  %78 = load i64, i64* %77, align 8
  %79 = getelementptr inbounds %"class.v8::internal::compiler::ElementAccessInfo", %"class.v8::internal::compiler::ElementAccessInfo"* %59, i64 -1, i32 1, i32 0, i32 0, i32 1
  %80 = bitcast %"class.v8::internal::Handle"** %79 to i64*
  store i64 %78, i64* %80, align 8
  %81 = getelementptr inbounds %"class.v8::internal::compiler::ElementAccessInfo", %"class.v8::internal::compiler::ElementAccessInfo"* %60, i64 -1, i32 1, i32 0, i32 0, i32 2, i32 0, i32 0
  %82 = bitcast %"class.v8::internal::Handle"** %81 to i64*
  %83 = load i64, i64* %82, align 8
  %84 = getelementptr inbounds %"class.v8::internal::compiler::ElementAccessInfo", %"class.v8::internal::compiler::ElementAccessInfo"* %59, i64 -1, i32 1, i32 0, i32 0, i32 2, i32 0, i32 0
  %85 = bitcast %"class.v8::internal::Handle"** %84 to i64*
  store i64 %83, i64* %85, align 8
  %86 = bitcast %"class.v8::internal::ZoneVector"* %66 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %86, i8 0, i64 24, i1 false) #8
  %87 = getelementptr inbounds %"class.v8::internal::compiler::ElementAccessInfo", %"class.v8::internal::compiler::ElementAccessInfo"* %59, i64 -1, i32 2
  %88 = getelementptr inbounds %"class.v8::internal::compiler::ElementAccessInfo", %"class.v8::internal::compiler::ElementAccessInfo"* %60, i64 -1, i32 2
  %89 = getelementptr inbounds %"class.v8::internal::compiler::ElementAccessInfo", %"class.v8::internal::compiler::ElementAccessInfo"* %60, i64 -1, i32 2, i32 0, i32 0, i32 2, i32 1, i32 0
  %90 = getelementptr inbounds %"class.v8::internal::compiler::ElementAccessInfo", %"class.v8::internal::compiler::ElementAccessInfo"* %59, i64 -1, i32 2, i32 0, i32 0, i32 2, i32 1
  %91 = bitcast %"class.v8::internal::ZoneAllocator"* %89 to i64*
  %92 = bitcast %"struct.std::__1::__compressed_pair_elem.0"* %90 to i64*
  %93 = bitcast %"class.v8::internal::ZoneVector"* %87 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %93, i8 0, i64 24, i1 false) #8
  %94 = load i64, i64* %91, align 8
  store i64 %94, i64* %92, align 8
  %95 = bitcast %"class.v8::internal::ZoneVector"* %88 to i64*
  %96 = load i64, i64* %95, align 8
  %97 = bitcast %"class.v8::internal::ZoneVector"* %87 to i64*
  store i64 %96, i64* %97, align 8
  %98 = getelementptr inbounds %"class.v8::internal::compiler::ElementAccessInfo", %"class.v8::internal::compiler::ElementAccessInfo"* %60, i64 -1, i32 2, i32 0, i32 0, i32 1
  %99 = bitcast %"class.v8::internal::Handle"** %98 to i64*
  %100 = load i64, i64* %99, align 8
  %101 = getelementptr inbounds %"class.v8::internal::compiler::ElementAccessInfo", %"class.v8::internal::compiler::ElementAccessInfo"* %59, i64 -1, i32 2, i32 0, i32 0, i32 1
  %102 = bitcast %"class.v8::internal::Handle"** %101 to i64*
  store i64 %100, i64* %102, align 8
  %103 = getelementptr inbounds %"class.v8::internal::compiler::ElementAccessInfo", %"class.v8::internal::compiler::ElementAccessInfo"* %60, i64 -1, i32 2, i32 0, i32 0, i32 2, i32 0, i32 0
  %104 = bitcast %"class.v8::internal::Handle"** %103 to i64*
  %105 = load i64, i64* %104, align 8
  %106 = getelementptr inbounds %"class.v8::internal::compiler::ElementAccessInfo", %"class.v8::internal::compiler::ElementAccessInfo"* %59, i64 -1, i32 2, i32 0, i32 0, i32 2, i32 0, i32 0
  %107 = bitcast %"class.v8::internal::Handle"** %106 to i64*
  store i64 %105, i64* %107, align 8
  %108 = bitcast %"class.v8::internal::ZoneVector"* %88 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %108, i8 0, i64 24, i1 false) #8
  %109 = getelementptr inbounds %"class.v8::internal::compiler::ElementAccessInfo", %"class.v8::internal::compiler::ElementAccessInfo"* %59, i64 -1
  %110 = icmp eq %"class.v8::internal::compiler::ElementAccessInfo"* %61, %53
  br i1 %110, label %111, label %58

111:                                              ; preds = %58
  %112 = load i64, i64* %6, align 8
  %113 = load %"class.v8::internal::compiler::ElementAccessInfo"*, %"class.v8::internal::compiler::ElementAccessInfo"** %3, align 8
  br label %114

114:                                              ; preds = %56, %111
  %115 = phi %"class.v8::internal::compiler::ElementAccessInfo"* [ %53, %56 ], [ %113, %111 ]
  %116 = phi %"class.v8::internal::compiler::ElementAccessInfo"* [ %47, %56 ], [ %109, %111 ]
  %117 = phi i64 [ %57, %56 ], [ %112, %111 ]
  %118 = ptrtoint %"class.v8::internal::compiler::ElementAccessInfo"* %116 to i64
  store i64 %118, i64* %6, align 8
  store i64 %51, i64* %4, align 8
  store i64 %49, i64* %16, align 8
  %119 = inttoptr i64 %117 to %"class.v8::internal::compiler::ElementAccessInfo"*
  %120 = icmp eq %"class.v8::internal::compiler::ElementAccessInfo"* %115, %119
  br i1 %120, label %141, label %121

121:                                              ; preds = %114, %139
  %122 = phi %"class.v8::internal::compiler::ElementAccessInfo"* [ %123, %139 ], [ %115, %114 ]
  %123 = getelementptr inbounds %"class.v8::internal::compiler::ElementAccessInfo", %"class.v8::internal::compiler::ElementAccessInfo"* %122, i64 -1
  %124 = getelementptr inbounds %"class.v8::internal::compiler::ElementAccessInfo", %"class.v8::internal::compiler::ElementAccessInfo"* %122, i64 -1, i32 2, i32 0, i32 0, i32 0
  %125 = load %"class.v8::internal::Handle"*, %"class.v8::internal::Handle"** %124, align 8
  %126 = icmp eq %"class.v8::internal::Handle"* %125, null
  br i1 %126, label %131, label %127

127:                                              ; preds = %121
  %128 = ptrtoint %"class.v8::internal::Handle"* %125 to i64
  %129 = getelementptr inbounds %"class.v8::internal::compiler::ElementAccessInfo", %"class.v8::internal::compiler::ElementAccessInfo"* %122, i64 -1, i32 2, i32 0, i32 0, i32 1
  %130 = bitcast %"class.v8::internal::Handle"** %129 to i64*
  store i64 %128, i64* %130, align 8
  br label %131

131:                                              ; preds = %127, %121
  %132 = getelementptr inbounds %"class.v8::internal::compiler::ElementAccessInfo", %"class.v8::internal::compiler::ElementAccessInfo"* %122, i64 -1, i32 1, i32 0, i32 0, i32 0
  %133 = load %"class.v8::internal::Handle"*, %"class.v8::internal::Handle"** %132, align 8
  %134 = icmp eq %"class.v8::internal::Handle"* %133, null
  br i1 %134, label %139, label %135

135:                                              ; preds = %131
  %136 = ptrtoint %"class.v8::internal::Handle"* %133 to i64
  %137 = getelementptr inbounds %"class.v8::internal::compiler::ElementAccessInfo", %"class.v8::internal::compiler::ElementAccessInfo"* %122, i64 -1, i32 1, i32 0, i32 0, i32 1
  %138 = bitcast %"class.v8::internal::Handle"** %137 to i64*
  store i64 %136, i64* %138, align 8
  br label %139

139:                                              ; preds = %135, %131
  %140 = icmp eq %"class.v8::internal::compiler::ElementAccessInfo"* %123, %119
  br i1 %140, label %141, label %121

141:                                              ; preds = %139, %114
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2v88internal8compiler17ElementAccessInfoC2ERKS2_(%"class.v8::internal::compiler::ElementAccessInfo"*, %"class.v8::internal::compiler::ElementAccessInfo"* dereferenceable(72)) unnamed_addr #7 comdat align 2 {
  %3 = getelementptr inbounds %"class.v8::internal::compiler::ElementAccessInfo", %"class.v8::internal::compiler::ElementAccessInfo"* %0, i64 0, i32 0
  %4 = getelementptr inbounds %"class.v8::internal::compiler::ElementAccessInfo", %"class.v8::internal::compiler::ElementAccessInfo"* %1, i64 0, i32 0
  %5 = load i8, i8* %4, align 8
  store i8 %5, i8* %3, align 8
  %6 = getelementptr inbounds %"class.v8::internal::compiler::ElementAccessInfo", %"class.v8::internal::compiler::ElementAccessInfo"* %0, i64 0, i32 1
  %7 = getelementptr inbounds %"class.v8::internal::compiler::ElementAccessInfo", %"class.v8::internal::compiler::ElementAccessInfo"* %1, i64 0, i32 1
  %8 = getelementptr inbounds %"class.v8::internal::compiler::ElementAccessInfo", %"class.v8::internal::compiler::ElementAccessInfo"* %1, i64 0, i32 1, i32 0, i32 0, i32 2, i32 1, i32 0, i32 0
  %9 = bitcast %"class.v8::internal::Zone"** %8 to i64*
  %10 = load i64, i64* %9, align 8
  %11 = getelementptr inbounds %"class.v8::internal::compiler::ElementAccessInfo", %"class.v8::internal::compiler::ElementAccessInfo"* %0, i64 0, i32 1, i32 0, i32 0, i32 2, i32 1
  %12 = bitcast %"struct.std::__1::__compressed_pair_elem.0"* %11 to i64*
  %13 = bitcast %"class.v8::internal::ZoneVector"* %6 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %13, i8 0, i64 24, i1 false) #8
  store i64 %10, i64* %12, align 8
  %14 = getelementptr inbounds %"class.v8::internal::compiler::ElementAccessInfo", %"class.v8::internal::compiler::ElementAccessInfo"* %1, i64 0, i32 1, i32 0, i32 0, i32 1
  %15 = bitcast %"class.v8::internal::Handle"** %14 to i64*
  %16 = load i64, i64* %15, align 8
  %17 = bitcast %"class.v8::internal::ZoneVector"* %7 to i64*
  %18 = load i64, i64* %17, align 8
  %19 = sub i64 %16, %18
  %20 = ashr exact i64 %19, 3
  %21 = icmp eq i64 %19, 0
  %22 = inttoptr i64 %10 to %"class.v8::internal::Zone"*
  br i1 %21, label %130, label %23

23:                                               ; preds = %2
  %24 = icmp ugt i64 %20, 268435455
  br i1 %24, label %25, label %27

25:                                               ; preds = %23
  %26 = bitcast %"class.v8::internal::ZoneVector"* %6 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %26) #12
  unreachable

27:                                               ; preds = %23
  %28 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %22, i64 0, i32 2
  %29 = load i64, i64* %28, align 8
  %30 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %22, i64 0, i32 3
  %31 = load i64, i64* %30, align 8
  %32 = sub i64 %31, %29
  %33 = icmp ugt i64 %19, %32
  br i1 %33, label %34, label %36, !prof !2

34:                                               ; preds = %27
  %35 = tail call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %22, i64 %19) #8
  br label %38

36:                                               ; preds = %27
  %37 = add i64 %29, %19
  store i64 %37, i64* %28, align 8
  br label %38

38:                                               ; preds = %36, %34
  %39 = phi i64 [ %35, %34 ], [ %29, %36 ]
  %40 = inttoptr i64 %39 to %"class.v8::internal::Handle"*
  %41 = getelementptr inbounds %"class.v8::internal::compiler::ElementAccessInfo", %"class.v8::internal::compiler::ElementAccessInfo"* %0, i64 0, i32 1, i32 0, i32 0, i32 1
  store %"class.v8::internal::Handle"* %40, %"class.v8::internal::Handle"** %41, align 8
  %42 = getelementptr inbounds %"class.v8::internal::ZoneVector", %"class.v8::internal::ZoneVector"* %6, i64 0, i32 0, i32 0, i32 0
  store %"class.v8::internal::Handle"* %40, %"class.v8::internal::Handle"** %42, align 8
  %43 = getelementptr inbounds %"class.v8::internal::Handle", %"class.v8::internal::Handle"* %40, i64 %20
  %44 = getelementptr inbounds %"class.v8::internal::compiler::ElementAccessInfo", %"class.v8::internal::compiler::ElementAccessInfo"* %0, i64 0, i32 1, i32 0, i32 0, i32 2, i32 0, i32 0
  store %"class.v8::internal::Handle"* %43, %"class.v8::internal::Handle"** %44, align 8
  %45 = getelementptr inbounds %"class.v8::internal::ZoneVector", %"class.v8::internal::ZoneVector"* %7, i64 0, i32 0, i32 0, i32 0
  %46 = load %"class.v8::internal::Handle"*, %"class.v8::internal::Handle"** %45, align 8
  %47 = load %"class.v8::internal::Handle"*, %"class.v8::internal::Handle"** %14, align 8
  %48 = bitcast %"class.v8::internal::Handle"** %41 to i64*
  %49 = icmp eq %"class.v8::internal::Handle"* %46, %47
  br i1 %49, label %128, label %50

50:                                               ; preds = %38
  %51 = ptrtoint %"class.v8::internal::Handle"* %46 to i64
  %52 = inttoptr i64 %39 to i64*
  %53 = getelementptr %"class.v8::internal::Handle", %"class.v8::internal::Handle"* %47, i64 -1, i32 0, i32 0
  %54 = ptrtoint i64** %53 to i64
  %55 = sub i64 %54, %51
  %56 = lshr i64 %55, 3
  %57 = add nuw nsw i64 %56, 1
  %58 = and i64 %57, 7
  %59 = icmp eq i64 %58, 0
  br i1 %59, label %74, label %60

60:                                               ; preds = %50, %60
  %61 = phi %"class.v8::internal::Handle"* [ %68, %60 ], [ %40, %50 ]
  %62 = phi i64* [ %69, %60 ], [ %52, %50 ]
  %63 = phi %"class.v8::internal::Handle"* [ %67, %60 ], [ %46, %50 ]
  %64 = phi i64 [ %70, %60 ], [ %58, %50 ]
  %65 = bitcast %"class.v8::internal::Handle"* %63 to i64*
  %66 = load i64, i64* %65, align 8
  store i64 %66, i64* %62, align 8
  %67 = getelementptr inbounds %"class.v8::internal::Handle", %"class.v8::internal::Handle"* %63, i64 1
  %68 = getelementptr inbounds %"class.v8::internal::Handle", %"class.v8::internal::Handle"* %61, i64 1
  %69 = bitcast %"class.v8::internal::Handle"* %68 to i64*
  %70 = add i64 %64, -1
  %71 = icmp eq i64 %70, 0
  br i1 %71, label %72, label %60, !llvm.loop !370

72:                                               ; preds = %60
  %73 = bitcast %"class.v8::internal::Handle"* %68 to i64*
  br label %74

74:                                               ; preds = %50, %72
  %75 = phi %"class.v8::internal::Handle"* [ undef, %50 ], [ %68, %72 ]
  %76 = phi %"class.v8::internal::Handle"* [ %40, %50 ], [ %68, %72 ]
  %77 = phi i64* [ %52, %50 ], [ %73, %72 ]
  %78 = phi %"class.v8::internal::Handle"* [ %46, %50 ], [ %67, %72 ]
  %79 = icmp ult i64 %55, 56
  br i1 %79, label %125, label %80

80:                                               ; preds = %74, %80
  %81 = phi %"class.v8::internal::Handle"* [ %122, %80 ], [ %76, %74 ]
  %82 = phi i64* [ %124, %80 ], [ %77, %74 ]
  %83 = phi %"class.v8::internal::Handle"* [ %121, %80 ], [ %78, %74 ]
  %84 = bitcast %"class.v8::internal::Handle"* %83 to i64*
  %85 = load i64, i64* %84, align 8
  store i64 %85, i64* %82, align 8
  %86 = getelementptr inbounds %"class.v8::internal::Handle", %"class.v8::internal::Handle"* %83, i64 1
  %87 = getelementptr inbounds %"class.v8::internal::Handle", %"class.v8::internal::Handle"* %81, i64 1
  %88 = bitcast %"class.v8::internal::Handle"* %87 to i64*
  %89 = bitcast %"class.v8::internal::Handle"* %86 to i64*
  %90 = load i64, i64* %89, align 8
  store i64 %90, i64* %88, align 8
  %91 = getelementptr inbounds %"class.v8::internal::Handle", %"class.v8::internal::Handle"* %83, i64 2
  %92 = getelementptr inbounds %"class.v8::internal::Handle", %"class.v8::internal::Handle"* %81, i64 2
  %93 = bitcast %"class.v8::internal::Handle"* %92 to i64*
  %94 = bitcast %"class.v8::internal::Handle"* %91 to i64*
  %95 = load i64, i64* %94, align 8
  store i64 %95, i64* %93, align 8
  %96 = getelementptr inbounds %"class.v8::internal::Handle", %"class.v8::internal::Handle"* %83, i64 3
  %97 = getelementptr inbounds %"class.v8::internal::Handle", %"class.v8::internal::Handle"* %81, i64 3
  %98 = bitcast %"class.v8::internal::Handle"* %97 to i64*
  %99 = bitcast %"class.v8::internal::Handle"* %96 to i64*
  %100 = load i64, i64* %99, align 8
  store i64 %100, i64* %98, align 8
  %101 = getelementptr inbounds %"class.v8::internal::Handle", %"class.v8::internal::Handle"* %83, i64 4
  %102 = getelementptr inbounds %"class.v8::internal::Handle", %"class.v8::internal::Handle"* %81, i64 4
  %103 = bitcast %"class.v8::internal::Handle"* %102 to i64*
  %104 = bitcast %"class.v8::internal::Handle"* %101 to i64*
  %105 = load i64, i64* %104, align 8
  store i64 %105, i64* %103, align 8
  %106 = getelementptr inbounds %"class.v8::internal::Handle", %"class.v8::internal::Handle"* %83, i64 5
  %107 = getelementptr inbounds %"class.v8::internal::Handle", %"class.v8::internal::Handle"* %81, i64 5
  %108 = bitcast %"class.v8::internal::Handle"* %107 to i64*
  %109 = bitcast %"class.v8::internal::Handle"* %106 to i64*
  %110 = load i64, i64* %109, align 8
  store i64 %110, i64* %108, align 8
  %111 = getelementptr inbounds %"class.v8::internal::Handle", %"class.v8::internal::Handle"* %83, i64 6
  %112 = getelementptr inbounds %"class.v8::internal::Handle", %"class.v8::internal::Handle"* %81, i64 6
  %113 = bitcast %"class.v8::internal::Handle"* %112 to i64*
  %114 = bitcast %"class.v8::internal::Handle"* %111 to i64*
  %115 = load i64, i64* %114, align 8
  store i64 %115, i64* %113, align 8
  %116 = getelementptr inbounds %"class.v8::internal::Handle", %"class.v8::internal::Handle"* %83, i64 7
  %117 = getelementptr inbounds %"class.v8::internal::Handle", %"class.v8::internal::Handle"* %81, i64 7
  %118 = bitcast %"class.v8::internal::Handle"* %117 to i64*
  %119 = bitcast %"class.v8::internal::Handle"* %116 to i64*
  %120 = load i64, i64* %119, align 8
  store i64 %120, i64* %118, align 8
  %121 = getelementptr inbounds %"class.v8::internal::Handle", %"class.v8::internal::Handle"* %83, i64 8
  %122 = getelementptr inbounds %"class.v8::internal::Handle", %"class.v8::internal::Handle"* %81, i64 8
  %123 = icmp eq %"class.v8::internal::Handle"* %121, %47
  %124 = bitcast %"class.v8::internal::Handle"* %122 to i64*
  br i1 %123, label %125, label %80

125:                                              ; preds = %80, %74
  %126 = phi %"class.v8::internal::Handle"* [ %75, %74 ], [ %122, %80 ]
  %127 = ptrtoint %"class.v8::internal::Handle"* %126 to i64
  br label %128

128:                                              ; preds = %125, %38
  %129 = phi i64 [ %39, %38 ], [ %127, %125 ]
  store i64 %129, i64* %48, align 8
  br label %130

130:                                              ; preds = %2, %128
  %131 = getelementptr inbounds %"class.v8::internal::compiler::ElementAccessInfo", %"class.v8::internal::compiler::ElementAccessInfo"* %0, i64 0, i32 2
  %132 = getelementptr inbounds %"class.v8::internal::compiler::ElementAccessInfo", %"class.v8::internal::compiler::ElementAccessInfo"* %1, i64 0, i32 2
  %133 = getelementptr inbounds %"class.v8::internal::compiler::ElementAccessInfo", %"class.v8::internal::compiler::ElementAccessInfo"* %1, i64 0, i32 2, i32 0, i32 0, i32 2, i32 1, i32 0, i32 0
  %134 = bitcast %"class.v8::internal::Zone"** %133 to i64*
  %135 = load i64, i64* %134, align 8
  %136 = getelementptr inbounds %"class.v8::internal::compiler::ElementAccessInfo", %"class.v8::internal::compiler::ElementAccessInfo"* %0, i64 0, i32 2, i32 0, i32 0, i32 2, i32 1
  %137 = bitcast %"struct.std::__1::__compressed_pair_elem.0"* %136 to i64*
  %138 = bitcast %"class.v8::internal::ZoneVector"* %131 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %138, i8 0, i64 24, i1 false) #8
  store i64 %135, i64* %137, align 8
  %139 = getelementptr inbounds %"class.v8::internal::compiler::ElementAccessInfo", %"class.v8::internal::compiler::ElementAccessInfo"* %1, i64 0, i32 2, i32 0, i32 0, i32 1
  %140 = bitcast %"class.v8::internal::Handle"** %139 to i64*
  %141 = load i64, i64* %140, align 8
  %142 = bitcast %"class.v8::internal::ZoneVector"* %132 to i64*
  %143 = load i64, i64* %142, align 8
  %144 = sub i64 %141, %143
  %145 = ashr exact i64 %144, 3
  %146 = icmp eq i64 %144, 0
  %147 = inttoptr i64 %135 to %"class.v8::internal::Zone"*
  br i1 %146, label %255, label %148

148:                                              ; preds = %130
  %149 = icmp ugt i64 %145, 268435455
  br i1 %149, label %150, label %152

150:                                              ; preds = %148
  %151 = bitcast %"class.v8::internal::ZoneVector"* %131 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %151) #12
  unreachable

152:                                              ; preds = %148
  %153 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %147, i64 0, i32 2
  %154 = load i64, i64* %153, align 8
  %155 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %147, i64 0, i32 3
  %156 = load i64, i64* %155, align 8
  %157 = sub i64 %156, %154
  %158 = icmp ugt i64 %144, %157
  br i1 %158, label %159, label %161, !prof !2

159:                                              ; preds = %152
  %160 = tail call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %147, i64 %144) #8
  br label %163

161:                                              ; preds = %152
  %162 = add i64 %154, %144
  store i64 %162, i64* %153, align 8
  br label %163

163:                                              ; preds = %161, %159
  %164 = phi i64 [ %160, %159 ], [ %154, %161 ]
  %165 = inttoptr i64 %164 to %"class.v8::internal::Handle"*
  %166 = getelementptr inbounds %"class.v8::internal::compiler::ElementAccessInfo", %"class.v8::internal::compiler::ElementAccessInfo"* %0, i64 0, i32 2, i32 0, i32 0, i32 1
  store %"class.v8::internal::Handle"* %165, %"class.v8::internal::Handle"** %166, align 8
  %167 = getelementptr inbounds %"class.v8::internal::ZoneVector", %"class.v8::internal::ZoneVector"* %131, i64 0, i32 0, i32 0, i32 0
  store %"class.v8::internal::Handle"* %165, %"class.v8::internal::Handle"** %167, align 8
  %168 = getelementptr inbounds %"class.v8::internal::Handle", %"class.v8::internal::Handle"* %165, i64 %145
  %169 = getelementptr inbounds %"class.v8::internal::compiler::ElementAccessInfo", %"class.v8::internal::compiler::ElementAccessInfo"* %0, i64 0, i32 2, i32 0, i32 0, i32 2, i32 0, i32 0
  store %"class.v8::internal::Handle"* %168, %"class.v8::internal::Handle"** %169, align 8
  %170 = getelementptr inbounds %"class.v8::internal::ZoneVector", %"class.v8::internal::ZoneVector"* %132, i64 0, i32 0, i32 0, i32 0
  %171 = load %"class.v8::internal::Handle"*, %"class.v8::internal::Handle"** %170, align 8
  %172 = load %"class.v8::internal::Handle"*, %"class.v8::internal::Handle"** %139, align 8
  %173 = bitcast %"class.v8::internal::Handle"** %166 to i64*
  %174 = icmp eq %"class.v8::internal::Handle"* %171, %172
  br i1 %174, label %253, label %175

175:                                              ; preds = %163
  %176 = ptrtoint %"class.v8::internal::Handle"* %171 to i64
  %177 = inttoptr i64 %164 to i64*
  %178 = getelementptr %"class.v8::internal::Handle", %"class.v8::internal::Handle"* %172, i64 -1, i32 0, i32 0
  %179 = ptrtoint i64** %178 to i64
  %180 = sub i64 %179, %176
  %181 = lshr i64 %180, 3
  %182 = add nuw nsw i64 %181, 1
  %183 = and i64 %182, 7
  %184 = icmp eq i64 %183, 0
  br i1 %184, label %199, label %185

185:                                              ; preds = %175, %185
  %186 = phi %"class.v8::internal::Handle"* [ %193, %185 ], [ %165, %175 ]
  %187 = phi i64* [ %194, %185 ], [ %177, %175 ]
  %188 = phi %"class.v8::internal::Handle"* [ %192, %185 ], [ %171, %175 ]
  %189 = phi i64 [ %195, %185 ], [ %183, %175 ]
  %190 = bitcast %"class.v8::internal::Handle"* %188 to i64*
  %191 = load i64, i64* %190, align 8
  store i64 %191, i64* %187, align 8
  %192 = getelementptr inbounds %"class.v8::internal::Handle", %"class.v8::internal::Handle"* %188, i64 1
  %193 = getelementptr inbounds %"class.v8::internal::Handle", %"class.v8::internal::Handle"* %186, i64 1
  %194 = bitcast %"class.v8::internal::Handle"* %193 to i64*
  %195 = add i64 %189, -1
  %196 = icmp eq i64 %195, 0
  br i1 %196, label %197, label %185, !llvm.loop !371

197:                                              ; preds = %185
  %198 = bitcast %"class.v8::internal::Handle"* %193 to i64*
  br label %199

199:                                              ; preds = %175, %197
  %200 = phi %"class.v8::internal::Handle"* [ undef, %175 ], [ %193, %197 ]
  %201 = phi %"class.v8::internal::Handle"* [ %165, %175 ], [ %193, %197 ]
  %202 = phi i64* [ %177, %175 ], [ %198, %197 ]
  %203 = phi %"class.v8::internal::Handle"* [ %171, %175 ], [ %192, %197 ]
  %204 = icmp ult i64 %180, 56
  br i1 %204, label %250, label %205

205:                                              ; preds = %199, %205
  %206 = phi %"class.v8::internal::Handle"* [ %247, %205 ], [ %201, %199 ]
  %207 = phi i64* [ %249, %205 ], [ %202, %199 ]
  %208 = phi %"class.v8::internal::Handle"* [ %246, %205 ], [ %203, %199 ]
  %209 = bitcast %"class.v8::internal::Handle"* %208 to i64*
  %210 = load i64, i64* %209, align 8
  store i64 %210, i64* %207, align 8
  %211 = getelementptr inbounds %"class.v8::internal::Handle", %"class.v8::internal::Handle"* %208, i64 1
  %212 = getelementptr inbounds %"class.v8::internal::Handle", %"class.v8::internal::Handle"* %206, i64 1
  %213 = bitcast %"class.v8::internal::Handle"* %212 to i64*
  %214 = bitcast %"class.v8::internal::Handle"* %211 to i64*
  %215 = load i64, i64* %214, align 8
  store i64 %215, i64* %213, align 8
  %216 = getelementptr inbounds %"class.v8::internal::Handle", %"class.v8::internal::Handle"* %208, i64 2
  %217 = getelementptr inbounds %"class.v8::internal::Handle", %"class.v8::internal::Handle"* %206, i64 2
  %218 = bitcast %"class.v8::internal::Handle"* %217 to i64*
  %219 = bitcast %"class.v8::internal::Handle"* %216 to i64*
  %220 = load i64, i64* %219, align 8
  store i64 %220, i64* %218, align 8
  %221 = getelementptr inbounds %"class.v8::internal::Handle", %"class.v8::internal::Handle"* %208, i64 3
  %222 = getelementptr inbounds %"class.v8::internal::Handle", %"class.v8::internal::Handle"* %206, i64 3
  %223 = bitcast %"class.v8::internal::Handle"* %222 to i64*
  %224 = bitcast %"class.v8::internal::Handle"* %221 to i64*
  %225 = load i64, i64* %224, align 8
  store i64 %225, i64* %223, align 8
  %226 = getelementptr inbounds %"class.v8::internal::Handle", %"class.v8::internal::Handle"* %208, i64 4
  %227 = getelementptr inbounds %"class.v8::internal::Handle", %"class.v8::internal::Handle"* %206, i64 4
  %228 = bitcast %"class.v8::internal::Handle"* %227 to i64*
  %229 = bitcast %"class.v8::internal::Handle"* %226 to i64*
  %230 = load i64, i64* %229, align 8
  store i64 %230, i64* %228, align 8
  %231 = getelementptr inbounds %"class.v8::internal::Handle", %"class.v8::internal::Handle"* %208, i64 5
  %232 = getelementptr inbounds %"class.v8::internal::Handle", %"class.v8::internal::Handle"* %206, i64 5
  %233 = bitcast %"class.v8::internal::Handle"* %232 to i64*
  %234 = bitcast %"class.v8::internal::Handle"* %231 to i64*
  %235 = load i64, i64* %234, align 8
  store i64 %235, i64* %233, align 8
  %236 = getelementptr inbounds %"class.v8::internal::Handle", %"class.v8::internal::Handle"* %208, i64 6
  %237 = getelementptr inbounds %"class.v8::internal::Handle", %"class.v8::internal::Handle"* %206, i64 6
  %238 = bitcast %"class.v8::internal::Handle"* %237 to i64*
  %239 = bitcast %"class.v8::internal::Handle"* %236 to i64*
  %240 = load i64, i64* %239, align 8
  store i64 %240, i64* %238, align 8
  %241 = getelementptr inbounds %"class.v8::internal::Handle", %"class.v8::internal::Handle"* %208, i64 7
  %242 = getelementptr inbounds %"class.v8::internal::Handle", %"class.v8::internal::Handle"* %206, i64 7
  %243 = bitcast %"class.v8::internal::Handle"* %242 to i64*
  %244 = bitcast %"class.v8::internal::Handle"* %241 to i64*
  %245 = load i64, i64* %244, align 8
  store i64 %245, i64* %243, align 8
  %246 = getelementptr inbounds %"class.v8::internal::Handle", %"class.v8::internal::Handle"* %208, i64 8
  %247 = getelementptr inbounds %"class.v8::internal::Handle", %"class.v8::internal::Handle"* %206, i64 8
  %248 = icmp eq %"class.v8::internal::Handle"* %246, %172
  %249 = bitcast %"class.v8::internal::Handle"* %247 to i64*
  br i1 %248, label %250, label %205

250:                                              ; preds = %205, %199
  %251 = phi %"class.v8::internal::Handle"* [ %200, %199 ], [ %247, %205 ]
  %252 = ptrtoint %"class.v8::internal::Handle"* %251 to i64
  br label %253

253:                                              ; preds = %250, %163
  %254 = phi i64 [ %164, %163 ], [ %252, %250 ]
  store i64 %254, i64* %173, align 8
  br label %255

255:                                              ; preds = %130, %253
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorIN2v88internal8compiler18PropertyAccessInfoENS2_13ZoneAllocatorIS4_EEE21__push_back_slow_pathIS4_EEvOT_(%"class.std::__1::vector.1313"*, %"class.v8::internal::compiler::PropertyAccessInfo"* dereferenceable(152)) local_unnamed_addr #7 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector.1313", %"class.std::__1::vector.1313"* %0, i64 0, i32 0, i32 1
  %4 = bitcast %"class.v8::internal::compiler::PropertyAccessInfo"** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.std::__1::vector.1313"* %0 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = sub i64 %5, %7
  %9 = sdiv exact i64 %8, 152
  %10 = add nsw i64 %9, 1
  %11 = icmp ugt i64 %10, 14128181
  br i1 %11, label %12, label %14

12:                                               ; preds = %2
  %13 = bitcast %"class.std::__1::vector.1313"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %13) #12
  unreachable

14:                                               ; preds = %2
  %15 = getelementptr inbounds %"class.std::__1::vector.1313", %"class.std::__1::vector.1313"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %16 = bitcast %"class.v8::internal::compiler::PropertyAccessInfo"** %15 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = sub i64 %17, %7
  %19 = sdiv exact i64 %18, 152
  %20 = icmp ult i64 %19, 7064090
  br i1 %20, label %21, label %26

21:                                               ; preds = %14
  %22 = shl nsw i64 %19, 1
  %23 = icmp ult i64 %22, %10
  %24 = select i1 %23, i64 %10, i64 %22
  %25 = icmp eq i64 %24, 0
  br i1 %25, label %44, label %26

26:                                               ; preds = %14, %21
  %27 = phi i64 [ %24, %21 ], [ 14128181, %14 ]
  %28 = getelementptr inbounds %"class.std::__1::vector.1313", %"class.std::__1::vector.1313"* %0, i64 0, i32 0, i32 2, i32 1, i32 0, i32 0
  %29 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %28, align 8
  %30 = mul i64 %27, 152
  %31 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %29, i64 0, i32 2
  %32 = load i64, i64* %31, align 8
  %33 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %29, i64 0, i32 3
  %34 = load i64, i64* %33, align 8
  %35 = sub i64 %34, %32
  %36 = icmp ugt i64 %30, %35
  br i1 %36, label %37, label %39, !prof !2

37:                                               ; preds = %26
  %38 = tail call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %29, i64 %30) #8
  br label %41

39:                                               ; preds = %26
  %40 = add i64 %32, %30
  store i64 %40, i64* %31, align 8
  br label %41

41:                                               ; preds = %39, %37
  %42 = phi i64 [ %38, %37 ], [ %32, %39 ]
  %43 = inttoptr i64 %42 to %"class.v8::internal::compiler::PropertyAccessInfo"*
  br label %44

44:                                               ; preds = %21, %41
  %45 = phi i64 [ %27, %41 ], [ 0, %21 ]
  %46 = phi %"class.v8::internal::compiler::PropertyAccessInfo"* [ %43, %41 ], [ null, %21 ]
  %47 = getelementptr inbounds %"class.v8::internal::compiler::PropertyAccessInfo", %"class.v8::internal::compiler::PropertyAccessInfo"* %46, i64 %9
  %48 = getelementptr inbounds %"class.v8::internal::compiler::PropertyAccessInfo", %"class.v8::internal::compiler::PropertyAccessInfo"* %46, i64 %45
  %49 = ptrtoint %"class.v8::internal::compiler::PropertyAccessInfo"* %48 to i64
  %50 = getelementptr inbounds %"class.v8::internal::compiler::PropertyAccessInfo", %"class.v8::internal::compiler::PropertyAccessInfo"* %47, i64 0, i32 0
  %51 = getelementptr inbounds %"class.v8::internal::compiler::PropertyAccessInfo", %"class.v8::internal::compiler::PropertyAccessInfo"* %1, i64 0, i32 0
  %52 = load i32, i32* %51, align 8
  store i32 %52, i32* %50, align 8
  %53 = getelementptr inbounds %"class.v8::internal::compiler::PropertyAccessInfo", %"class.v8::internal::compiler::PropertyAccessInfo"* %46, i64 %9, i32 1
  %54 = getelementptr inbounds %"class.v8::internal::compiler::PropertyAccessInfo", %"class.v8::internal::compiler::PropertyAccessInfo"* %1, i64 0, i32 1
  %55 = getelementptr inbounds %"class.v8::internal::compiler::PropertyAccessInfo", %"class.v8::internal::compiler::PropertyAccessInfo"* %1, i64 0, i32 1, i32 0, i32 0, i32 2, i32 1, i32 0
  %56 = getelementptr inbounds %"class.v8::internal::compiler::PropertyAccessInfo", %"class.v8::internal::compiler::PropertyAccessInfo"* %46, i64 %9, i32 1, i32 0, i32 0, i32 2, i32 1
  %57 = bitcast %"class.v8::internal::ZoneAllocator"* %55 to i64*
  %58 = bitcast %"struct.std::__1::__compressed_pair_elem.0"* %56 to i64*
  %59 = bitcast %"class.v8::internal::ZoneVector"* %53 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %59, i8 0, i64 24, i1 false) #8
  %60 = load i64, i64* %57, align 8
  store i64 %60, i64* %58, align 8
  %61 = bitcast %"class.v8::internal::ZoneVector"* %54 to i64*
  %62 = load i64, i64* %61, align 8
  %63 = bitcast %"class.v8::internal::ZoneVector"* %53 to i64*
  store i64 %62, i64* %63, align 8
  %64 = getelementptr inbounds %"class.v8::internal::compiler::PropertyAccessInfo", %"class.v8::internal::compiler::PropertyAccessInfo"* %1, i64 0, i32 1, i32 0, i32 0, i32 1
  %65 = bitcast %"class.v8::internal::Handle"** %64 to i64*
  %66 = load i64, i64* %65, align 8
  %67 = getelementptr inbounds %"class.v8::internal::compiler::PropertyAccessInfo", %"class.v8::internal::compiler::PropertyAccessInfo"* %46, i64 %9, i32 1, i32 0, i32 0, i32 1
  %68 = bitcast %"class.v8::internal::Handle"** %67 to i64*
  store i64 %66, i64* %68, align 8
  %69 = getelementptr inbounds %"class.v8::internal::compiler::PropertyAccessInfo", %"class.v8::internal::compiler::PropertyAccessInfo"* %1, i64 0, i32 1, i32 0, i32 0, i32 2, i32 0, i32 0
  %70 = bitcast %"class.v8::internal::Handle"** %69 to i64*
  %71 = load i64, i64* %70, align 8
  %72 = getelementptr inbounds %"class.v8::internal::compiler::PropertyAccessInfo", %"class.v8::internal::compiler::PropertyAccessInfo"* %46, i64 %9, i32 1, i32 0, i32 0, i32 2, i32 0, i32 0
  %73 = bitcast %"class.v8::internal::Handle"** %72 to i64*
  store i64 %71, i64* %73, align 8
  %74 = bitcast %"class.v8::internal::ZoneVector"* %54 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %74, i8 0, i64 24, i1 false) #8
  %75 = getelementptr inbounds %"class.v8::internal::compiler::PropertyAccessInfo", %"class.v8::internal::compiler::PropertyAccessInfo"* %46, i64 %9, i32 2
  %76 = getelementptr inbounds %"class.v8::internal::compiler::PropertyAccessInfo", %"class.v8::internal::compiler::PropertyAccessInfo"* %1, i64 0, i32 2
  %77 = bitcast %"class.v8::internal::Handle.21"* %75 to i8*
  %78 = bitcast %"class.v8::internal::Handle.21"* %76 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %77, i8* align 8 %78, i64 16, i1 false) #8
  %79 = getelementptr inbounds %"class.v8::internal::compiler::PropertyAccessInfo", %"class.v8::internal::compiler::PropertyAccessInfo"* %46, i64 %9, i32 4
  %80 = getelementptr inbounds %"class.v8::internal::compiler::PropertyAccessInfo", %"class.v8::internal::compiler::PropertyAccessInfo"* %1, i64 0, i32 4
  %81 = getelementptr inbounds %"class.v8::internal::compiler::PropertyAccessInfo", %"class.v8::internal::compiler::PropertyAccessInfo"* %1, i64 0, i32 4, i32 0, i32 0, i32 2, i32 1, i32 0
  %82 = getelementptr inbounds %"class.v8::internal::compiler::PropertyAccessInfo", %"class.v8::internal::compiler::PropertyAccessInfo"* %46, i64 %9, i32 4, i32 0, i32 0, i32 2, i32 1
  %83 = bitcast %"class.v8::internal::ZoneAllocator.28"* %81 to i64*
  %84 = bitcast %"struct.std::__1::__compressed_pair_elem.27"* %82 to i64*
  %85 = bitcast %"class.v8::internal::ZoneVector.22"* %79 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %85, i8 0, i64 24, i1 false) #8
  %86 = load i64, i64* %83, align 8
  store i64 %86, i64* %84, align 8
  %87 = bitcast %"class.v8::internal::ZoneVector.22"* %80 to i64*
  %88 = load i64, i64* %87, align 8
  %89 = bitcast %"class.v8::internal::ZoneVector.22"* %79 to i64*
  store i64 %88, i64* %89, align 8
  %90 = getelementptr inbounds %"class.v8::internal::compiler::PropertyAccessInfo", %"class.v8::internal::compiler::PropertyAccessInfo"* %1, i64 0, i32 4, i32 0, i32 0, i32 1
  %91 = bitcast %"class.v8::internal::compiler::CompilationDependency"*** %90 to i64*
  %92 = load i64, i64* %91, align 8
  %93 = getelementptr inbounds %"class.v8::internal::compiler::PropertyAccessInfo", %"class.v8::internal::compiler::PropertyAccessInfo"* %46, i64 %9, i32 4, i32 0, i32 0, i32 1
  %94 = bitcast %"class.v8::internal::compiler::CompilationDependency"*** %93 to i64*
  store i64 %92, i64* %94, align 8
  %95 = getelementptr inbounds %"class.v8::internal::compiler::PropertyAccessInfo", %"class.v8::internal::compiler::PropertyAccessInfo"* %1, i64 0, i32 4, i32 0, i32 0, i32 2, i32 0, i32 0
  %96 = bitcast %"class.v8::internal::compiler::CompilationDependency"*** %95 to i64*
  %97 = load i64, i64* %96, align 8
  %98 = getelementptr inbounds %"class.v8::internal::compiler::PropertyAccessInfo", %"class.v8::internal::compiler::PropertyAccessInfo"* %46, i64 %9, i32 4, i32 0, i32 0, i32 2, i32 0, i32 0
  %99 = bitcast %"class.v8::internal::compiler::CompilationDependency"*** %98 to i64*
  store i64 %97, i64* %99, align 8
  %100 = bitcast %"class.v8::internal::ZoneVector.22"* %80 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %100, i8 0, i64 24, i1 false) #8
  %101 = getelementptr inbounds %"class.v8::internal::compiler::PropertyAccessInfo", %"class.v8::internal::compiler::PropertyAccessInfo"* %46, i64 %9, i32 5
  %102 = getelementptr inbounds %"class.v8::internal::compiler::PropertyAccessInfo", %"class.v8::internal::compiler::PropertyAccessInfo"* %1, i64 0, i32 5
  %103 = bitcast %"class.v8::internal::MaybeHandle.29"* %101 to i8*
  %104 = bitcast %"class.v8::internal::MaybeHandle.29"* %102 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %103, i8* align 8 %104, i64 64, i1 false) #8
  %105 = getelementptr inbounds %"class.v8::internal::compiler::PropertyAccessInfo", %"class.v8::internal::compiler::PropertyAccessInfo"* %47, i64 1
  %106 = ptrtoint %"class.v8::internal::compiler::PropertyAccessInfo"* %105 to i64
  %107 = getelementptr inbounds %"class.std::__1::vector.1313", %"class.std::__1::vector.1313"* %0, i64 0, i32 0, i32 0
  %108 = load %"class.v8::internal::compiler::PropertyAccessInfo"*, %"class.v8::internal::compiler::PropertyAccessInfo"** %107, align 8
  %109 = load %"class.v8::internal::compiler::PropertyAccessInfo"*, %"class.v8::internal::compiler::PropertyAccessInfo"** %3, align 8
  %110 = icmp eq %"class.v8::internal::compiler::PropertyAccessInfo"* %109, %108
  br i1 %110, label %111, label %113

111:                                              ; preds = %44
  %112 = ptrtoint %"class.v8::internal::compiler::PropertyAccessInfo"* %108 to i64
  br label %177

113:                                              ; preds = %44, %113
  %114 = phi %"class.v8::internal::compiler::PropertyAccessInfo"* [ %172, %113 ], [ %47, %44 ]
  %115 = phi %"class.v8::internal::compiler::PropertyAccessInfo"* [ %116, %113 ], [ %109, %44 ]
  %116 = getelementptr inbounds %"class.v8::internal::compiler::PropertyAccessInfo", %"class.v8::internal::compiler::PropertyAccessInfo"* %115, i64 -1
  %117 = getelementptr inbounds %"class.v8::internal::compiler::PropertyAccessInfo", %"class.v8::internal::compiler::PropertyAccessInfo"* %114, i64 -1, i32 0
  %118 = getelementptr inbounds %"class.v8::internal::compiler::PropertyAccessInfo", %"class.v8::internal::compiler::PropertyAccessInfo"* %116, i64 0, i32 0
  %119 = load i32, i32* %118, align 8
  store i32 %119, i32* %117, align 8
  %120 = getelementptr inbounds %"class.v8::internal::compiler::PropertyAccessInfo", %"class.v8::internal::compiler::PropertyAccessInfo"* %114, i64 -1, i32 1
  %121 = getelementptr inbounds %"class.v8::internal::compiler::PropertyAccessInfo", %"class.v8::internal::compiler::PropertyAccessInfo"* %115, i64 -1, i32 1
  %122 = getelementptr inbounds %"class.v8::internal::compiler::PropertyAccessInfo", %"class.v8::internal::compiler::PropertyAccessInfo"* %115, i64 -1, i32 1, i32 0, i32 0, i32 2, i32 1, i32 0
  %123 = getelementptr inbounds %"class.v8::internal::compiler::PropertyAccessInfo", %"class.v8::internal::compiler::PropertyAccessInfo"* %114, i64 -1, i32 1, i32 0, i32 0, i32 2, i32 1
  %124 = bitcast %"class.v8::internal::ZoneAllocator"* %122 to i64*
  %125 = bitcast %"struct.std::__1::__compressed_pair_elem.0"* %123 to i64*
  %126 = bitcast %"class.v8::internal::ZoneVector"* %120 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %126, i8 0, i64 24, i1 false) #8
  %127 = load i64, i64* %124, align 8
  store i64 %127, i64* %125, align 8
  %128 = bitcast %"class.v8::internal::ZoneVector"* %121 to i64*
  %129 = load i64, i64* %128, align 8
  %130 = bitcast %"class.v8::internal::ZoneVector"* %120 to i64*
  store i64 %129, i64* %130, align 8
  %131 = getelementptr inbounds %"class.v8::internal::compiler::PropertyAccessInfo", %"class.v8::internal::compiler::PropertyAccessInfo"* %115, i64 -1, i32 1, i32 0, i32 0, i32 1
  %132 = bitcast %"class.v8::internal::Handle"** %131 to i64*
  %133 = load i64, i64* %132, align 8
  %134 = getelementptr inbounds %"class.v8::internal::compiler::PropertyAccessInfo", %"class.v8::internal::compiler::PropertyAccessInfo"* %114, i64 -1, i32 1, i32 0, i32 0, i32 1
  %135 = bitcast %"class.v8::internal::Handle"** %134 to i64*
  store i64 %133, i64* %135, align 8
  %136 = getelementptr inbounds %"class.v8::internal::compiler::PropertyAccessInfo", %"class.v8::internal::compiler::PropertyAccessInfo"* %115, i64 -1, i32 1, i32 0, i32 0, i32 2, i32 0, i32 0
  %137 = bitcast %"class.v8::internal::Handle"** %136 to i64*
  %138 = load i64, i64* %137, align 8
  %139 = getelementptr inbounds %"class.v8::internal::compiler::PropertyAccessInfo", %"class.v8::internal::compiler::PropertyAccessInfo"* %114, i64 -1, i32 1, i32 0, i32 0, i32 2, i32 0, i32 0
  %140 = bitcast %"class.v8::internal::Handle"** %139 to i64*
  store i64 %138, i64* %140, align 8
  %141 = bitcast %"class.v8::internal::ZoneVector"* %121 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %141, i8 0, i64 24, i1 false) #8
  %142 = getelementptr inbounds %"class.v8::internal::compiler::PropertyAccessInfo", %"class.v8::internal::compiler::PropertyAccessInfo"* %114, i64 -1, i32 2
  %143 = getelementptr inbounds %"class.v8::internal::compiler::PropertyAccessInfo", %"class.v8::internal::compiler::PropertyAccessInfo"* %115, i64 -1, i32 2
  %144 = bitcast %"class.v8::internal::Handle.21"* %142 to i8*
  %145 = bitcast %"class.v8::internal::Handle.21"* %143 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %144, i8* align 8 %145, i64 16, i1 false) #8
  %146 = getelementptr inbounds %"class.v8::internal::compiler::PropertyAccessInfo", %"class.v8::internal::compiler::PropertyAccessInfo"* %114, i64 -1, i32 4
  %147 = getelementptr inbounds %"class.v8::internal::compiler::PropertyAccessInfo", %"class.v8::internal::compiler::PropertyAccessInfo"* %115, i64 -1, i32 4
  %148 = getelementptr inbounds %"class.v8::internal::compiler::PropertyAccessInfo", %"class.v8::internal::compiler::PropertyAccessInfo"* %115, i64 -1, i32 4, i32 0, i32 0, i32 2, i32 1, i32 0
  %149 = getelementptr inbounds %"class.v8::internal::compiler::PropertyAccessInfo", %"class.v8::internal::compiler::PropertyAccessInfo"* %114, i64 -1, i32 4, i32 0, i32 0, i32 2, i32 1
  %150 = bitcast %"class.v8::internal::ZoneAllocator.28"* %148 to i64*
  %151 = bitcast %"struct.std::__1::__compressed_pair_elem.27"* %149 to i64*
  %152 = bitcast %"class.v8::internal::ZoneVector.22"* %146 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %152, i8 0, i64 24, i1 false) #8
  %153 = load i64, i64* %150, align 8
  store i64 %153, i64* %151, align 8
  %154 = bitcast %"class.v8::internal::ZoneVector.22"* %147 to i64*
  %155 = load i64, i64* %154, align 8
  %156 = bitcast %"class.v8::internal::ZoneVector.22"* %146 to i64*
  store i64 %155, i64* %156, align 8
  %157 = getelementptr inbounds %"class.v8::internal::compiler::PropertyAccessInfo", %"class.v8::internal::compiler::PropertyAccessInfo"* %115, i64 -1, i32 4, i32 0, i32 0, i32 1
  %158 = bitcast %"class.v8::internal::compiler::CompilationDependency"*** %157 to i64*
  %159 = load i64, i64* %158, align 8
  %160 = getelementptr inbounds %"class.v8::internal::compiler::PropertyAccessInfo", %"class.v8::internal::compiler::PropertyAccessInfo"* %114, i64 -1, i32 4, i32 0, i32 0, i32 1
  %161 = bitcast %"class.v8::internal::compiler::CompilationDependency"*** %160 to i64*
  store i64 %159, i64* %161, align 8
  %162 = getelementptr inbounds %"class.v8::internal::compiler::PropertyAccessInfo", %"class.v8::internal::compiler::PropertyAccessInfo"* %115, i64 -1, i32 4, i32 0, i32 0, i32 2, i32 0, i32 0
  %163 = bitcast %"class.v8::internal::compiler::CompilationDependency"*** %162 to i64*
  %164 = load i64, i64* %163, align 8
  %165 = getelementptr inbounds %"class.v8::internal::compiler::PropertyAccessInfo", %"class.v8::internal::compiler::PropertyAccessInfo"* %114, i64 -1, i32 4, i32 0, i32 0, i32 2, i32 0, i32 0
  %166 = bitcast %"class.v8::internal::compiler::CompilationDependency"*** %165 to i64*
  store i64 %164, i64* %166, align 8
  %167 = bitcast %"class.v8::internal::ZoneVector.22"* %147 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %167, i8 0, i64 24, i1 false) #8
  %168 = getelementptr inbounds %"class.v8::internal::compiler::PropertyAccessInfo", %"class.v8::internal::compiler::PropertyAccessInfo"* %114, i64 -1, i32 5
  %169 = getelementptr inbounds %"class.v8::internal::compiler::PropertyAccessInfo", %"class.v8::internal::compiler::PropertyAccessInfo"* %115, i64 -1, i32 5
  %170 = bitcast %"class.v8::internal::MaybeHandle.29"* %168 to i8*
  %171 = bitcast %"class.v8::internal::MaybeHandle.29"* %169 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %170, i8* align 8 %171, i64 64, i1 false) #8
  %172 = getelementptr inbounds %"class.v8::internal::compiler::PropertyAccessInfo", %"class.v8::internal::compiler::PropertyAccessInfo"* %114, i64 -1
  %173 = icmp eq %"class.v8::internal::compiler::PropertyAccessInfo"* %116, %108
  br i1 %173, label %174, label %113

174:                                              ; preds = %113
  %175 = load i64, i64* %6, align 8
  %176 = load %"class.v8::internal::compiler::PropertyAccessInfo"*, %"class.v8::internal::compiler::PropertyAccessInfo"** %3, align 8
  br label %177

177:                                              ; preds = %111, %174
  %178 = phi %"class.v8::internal::compiler::PropertyAccessInfo"* [ %108, %111 ], [ %176, %174 ]
  %179 = phi %"class.v8::internal::compiler::PropertyAccessInfo"* [ %47, %111 ], [ %172, %174 ]
  %180 = phi i64 [ %112, %111 ], [ %175, %174 ]
  %181 = ptrtoint %"class.v8::internal::compiler::PropertyAccessInfo"* %179 to i64
  store i64 %181, i64* %6, align 8
  store i64 %106, i64* %4, align 8
  store i64 %49, i64* %16, align 8
  %182 = inttoptr i64 %180 to %"class.v8::internal::compiler::PropertyAccessInfo"*
  %183 = icmp eq %"class.v8::internal::compiler::PropertyAccessInfo"* %178, %182
  br i1 %183, label %204, label %184

184:                                              ; preds = %177, %202
  %185 = phi %"class.v8::internal::compiler::PropertyAccessInfo"* [ %186, %202 ], [ %178, %177 ]
  %186 = getelementptr inbounds %"class.v8::internal::compiler::PropertyAccessInfo", %"class.v8::internal::compiler::PropertyAccessInfo"* %185, i64 -1
  %187 = getelementptr inbounds %"class.v8::internal::compiler::PropertyAccessInfo", %"class.v8::internal::compiler::PropertyAccessInfo"* %185, i64 -1, i32 4, i32 0, i32 0, i32 0
  %188 = load %"class.v8::internal::compiler::CompilationDependency"**, %"class.v8::internal::compiler::CompilationDependency"*** %187, align 8
  %189 = icmp eq %"class.v8::internal::compiler::CompilationDependency"** %188, null
  br i1 %189, label %194, label %190

190:                                              ; preds = %184
  %191 = ptrtoint %"class.v8::internal::compiler::CompilationDependency"** %188 to i64
  %192 = getelementptr inbounds %"class.v8::internal::compiler::PropertyAccessInfo", %"class.v8::internal::compiler::PropertyAccessInfo"* %185, i64 -1, i32 4, i32 0, i32 0, i32 1
  %193 = bitcast %"class.v8::internal::compiler::CompilationDependency"*** %192 to i64*
  store i64 %191, i64* %193, align 8
  br label %194

194:                                              ; preds = %190, %184
  %195 = getelementptr inbounds %"class.v8::internal::compiler::PropertyAccessInfo", %"class.v8::internal::compiler::PropertyAccessInfo"* %185, i64 -1, i32 1, i32 0, i32 0, i32 0
  %196 = load %"class.v8::internal::Handle"*, %"class.v8::internal::Handle"** %195, align 8
  %197 = icmp eq %"class.v8::internal::Handle"* %196, null
  br i1 %197, label %202, label %198

198:                                              ; preds = %194
  %199 = ptrtoint %"class.v8::internal::Handle"* %196 to i64
  %200 = getelementptr inbounds %"class.v8::internal::compiler::PropertyAccessInfo", %"class.v8::internal::compiler::PropertyAccessInfo"* %185, i64 -1, i32 1, i32 0, i32 0, i32 1
  %201 = bitcast %"class.v8::internal::Handle"** %200 to i64*
  store i64 %199, i64* %201, align 8
  br label %202

202:                                              ; preds = %198, %194
  %203 = icmp eq %"class.v8::internal::compiler::PropertyAccessInfo"* %186, %182
  br i1 %203, label %204, label %184

204:                                              ; preds = %202, %177
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorIN2v88internal8compiler18PropertyAccessInfoENS2_13ZoneAllocatorIS4_EEE21__push_back_slow_pathIRKS4_EEvOT_(%"class.std::__1::vector.1313"*, %"class.v8::internal::compiler::PropertyAccessInfo"* dereferenceable(152)) local_unnamed_addr #7 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector.1313", %"class.std::__1::vector.1313"* %0, i64 0, i32 0, i32 1
  %4 = bitcast %"class.v8::internal::compiler::PropertyAccessInfo"** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.std::__1::vector.1313"* %0 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = sub i64 %5, %7
  %9 = sdiv exact i64 %8, 152
  %10 = add nsw i64 %9, 1
  %11 = icmp ugt i64 %10, 14128181
  br i1 %11, label %12, label %14

12:                                               ; preds = %2
  %13 = bitcast %"class.std::__1::vector.1313"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %13) #12
  unreachable

14:                                               ; preds = %2
  %15 = getelementptr inbounds %"class.std::__1::vector.1313", %"class.std::__1::vector.1313"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %16 = bitcast %"class.v8::internal::compiler::PropertyAccessInfo"** %15 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = sub i64 %17, %7
  %19 = sdiv exact i64 %18, 152
  %20 = icmp ult i64 %19, 7064090
  br i1 %20, label %21, label %26

21:                                               ; preds = %14
  %22 = shl nsw i64 %19, 1
  %23 = icmp ult i64 %22, %10
  %24 = select i1 %23, i64 %10, i64 %22
  %25 = icmp eq i64 %24, 0
  br i1 %25, label %44, label %26

26:                                               ; preds = %14, %21
  %27 = phi i64 [ %24, %21 ], [ 14128181, %14 ]
  %28 = getelementptr inbounds %"class.std::__1::vector.1313", %"class.std::__1::vector.1313"* %0, i64 0, i32 0, i32 2, i32 1, i32 0, i32 0
  %29 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %28, align 8
  %30 = mul i64 %27, 152
  %31 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %29, i64 0, i32 2
  %32 = load i64, i64* %31, align 8
  %33 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %29, i64 0, i32 3
  %34 = load i64, i64* %33, align 8
  %35 = sub i64 %34, %32
  %36 = icmp ugt i64 %30, %35
  br i1 %36, label %37, label %39, !prof !2

37:                                               ; preds = %26
  %38 = tail call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %29, i64 %30) #8
  br label %41

39:                                               ; preds = %26
  %40 = add i64 %32, %30
  store i64 %40, i64* %31, align 8
  br label %41

41:                                               ; preds = %39, %37
  %42 = phi i64 [ %38, %37 ], [ %32, %39 ]
  %43 = inttoptr i64 %42 to %"class.v8::internal::compiler::PropertyAccessInfo"*
  br label %44

44:                                               ; preds = %21, %41
  %45 = phi i64 [ %27, %41 ], [ 0, %21 ]
  %46 = phi %"class.v8::internal::compiler::PropertyAccessInfo"* [ %43, %41 ], [ null, %21 ]
  %47 = getelementptr inbounds %"class.v8::internal::compiler::PropertyAccessInfo", %"class.v8::internal::compiler::PropertyAccessInfo"* %46, i64 %9
  %48 = getelementptr inbounds %"class.v8::internal::compiler::PropertyAccessInfo", %"class.v8::internal::compiler::PropertyAccessInfo"* %46, i64 %45
  %49 = ptrtoint %"class.v8::internal::compiler::PropertyAccessInfo"* %48 to i64
  tail call void @_ZN2v88internal8compiler18PropertyAccessInfoC2ERKS2_(%"class.v8::internal::compiler::PropertyAccessInfo"* %47, %"class.v8::internal::compiler::PropertyAccessInfo"* dereferenceable(152) %1) #8
  %50 = getelementptr inbounds %"class.v8::internal::compiler::PropertyAccessInfo", %"class.v8::internal::compiler::PropertyAccessInfo"* %47, i64 1
  %51 = ptrtoint %"class.v8::internal::compiler::PropertyAccessInfo"* %50 to i64
  %52 = getelementptr inbounds %"class.std::__1::vector.1313", %"class.std::__1::vector.1313"* %0, i64 0, i32 0, i32 0
  %53 = load %"class.v8::internal::compiler::PropertyAccessInfo"*, %"class.v8::internal::compiler::PropertyAccessInfo"** %52, align 8
  %54 = load %"class.v8::internal::compiler::PropertyAccessInfo"*, %"class.v8::internal::compiler::PropertyAccessInfo"** %3, align 8
  %55 = icmp eq %"class.v8::internal::compiler::PropertyAccessInfo"* %54, %53
  br i1 %55, label %56, label %58

56:                                               ; preds = %44
  %57 = ptrtoint %"class.v8::internal::compiler::PropertyAccessInfo"* %53 to i64
  br label %122

58:                                               ; preds = %44, %58
  %59 = phi %"class.v8::internal::compiler::PropertyAccessInfo"* [ %117, %58 ], [ %47, %44 ]
  %60 = phi %"class.v8::internal::compiler::PropertyAccessInfo"* [ %61, %58 ], [ %54, %44 ]
  %61 = getelementptr inbounds %"class.v8::internal::compiler::PropertyAccessInfo", %"class.v8::internal::compiler::PropertyAccessInfo"* %60, i64 -1
  %62 = getelementptr inbounds %"class.v8::internal::compiler::PropertyAccessInfo", %"class.v8::internal::compiler::PropertyAccessInfo"* %59, i64 -1, i32 0
  %63 = getelementptr inbounds %"class.v8::internal::compiler::PropertyAccessInfo", %"class.v8::internal::compiler::PropertyAccessInfo"* %61, i64 0, i32 0
  %64 = load i32, i32* %63, align 8
  store i32 %64, i32* %62, align 8
  %65 = getelementptr inbounds %"class.v8::internal::compiler::PropertyAccessInfo", %"class.v8::internal::compiler::PropertyAccessInfo"* %59, i64 -1, i32 1
  %66 = getelementptr inbounds %"class.v8::internal::compiler::PropertyAccessInfo", %"class.v8::internal::compiler::PropertyAccessInfo"* %60, i64 -1, i32 1
  %67 = getelementptr inbounds %"class.v8::internal::compiler::PropertyAccessInfo", %"class.v8::internal::compiler::PropertyAccessInfo"* %60, i64 -1, i32 1, i32 0, i32 0, i32 2, i32 1, i32 0
  %68 = getelementptr inbounds %"class.v8::internal::compiler::PropertyAccessInfo", %"class.v8::internal::compiler::PropertyAccessInfo"* %59, i64 -1, i32 1, i32 0, i32 0, i32 2, i32 1
  %69 = bitcast %"class.v8::internal::ZoneAllocator"* %67 to i64*
  %70 = bitcast %"struct.std::__1::__compressed_pair_elem.0"* %68 to i64*
  %71 = bitcast %"class.v8::internal::ZoneVector"* %65 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %71, i8 0, i64 24, i1 false) #8
  %72 = load i64, i64* %69, align 8
  store i64 %72, i64* %70, align 8
  %73 = bitcast %"class.v8::internal::ZoneVector"* %66 to i64*
  %74 = load i64, i64* %73, align 8
  %75 = bitcast %"class.v8::internal::ZoneVector"* %65 to i64*
  store i64 %74, i64* %75, align 8
  %76 = getelementptr inbounds %"class.v8::internal::compiler::PropertyAccessInfo", %"class.v8::internal::compiler::PropertyAccessInfo"* %60, i64 -1, i32 1, i32 0, i32 0, i32 1
  %77 = bitcast %"class.v8::internal::Handle"** %76 to i64*
  %78 = load i64, i64* %77, align 8
  %79 = getelementptr inbounds %"class.v8::internal::compiler::PropertyAccessInfo", %"class.v8::internal::compiler::PropertyAccessInfo"* %59, i64 -1, i32 1, i32 0, i32 0, i32 1
  %80 = bitcast %"class.v8::internal::Handle"** %79 to i64*
  store i64 %78, i64* %80, align 8
  %81 = getelementptr inbounds %"class.v8::internal::compiler::PropertyAccessInfo", %"class.v8::internal::compiler::PropertyAccessInfo"* %60, i64 -1, i32 1, i32 0, i32 0, i32 2, i32 0, i32 0
  %82 = bitcast %"class.v8::internal::Handle"** %81 to i64*
  %83 = load i64, i64* %82, align 8
  %84 = getelementptr inbounds %"class.v8::internal::compiler::PropertyAccessInfo", %"class.v8::internal::compiler::PropertyAccessInfo"* %59, i64 -1, i32 1, i32 0, i32 0, i32 2, i32 0, i32 0
  %85 = bitcast %"class.v8::internal::Handle"** %84 to i64*
  store i64 %83, i64* %85, align 8
  %86 = bitcast %"class.v8::internal::ZoneVector"* %66 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %86, i8 0, i64 24, i1 false) #8
  %87 = getelementptr inbounds %"class.v8::internal::compiler::PropertyAccessInfo", %"class.v8::internal::compiler::PropertyAccessInfo"* %59, i64 -1, i32 2
  %88 = getelementptr inbounds %"class.v8::internal::compiler::PropertyAccessInfo", %"class.v8::internal::compiler::PropertyAccessInfo"* %60, i64 -1, i32 2
  %89 = bitcast %"class.v8::internal::Handle.21"* %87 to i8*
  %90 = bitcast %"class.v8::internal::Handle.21"* %88 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %89, i8* align 8 %90, i64 16, i1 false) #8
  %91 = getelementptr inbounds %"class.v8::internal::compiler::PropertyAccessInfo", %"class.v8::internal::compiler::PropertyAccessInfo"* %59, i64 -1, i32 4
  %92 = getelementptr inbounds %"class.v8::internal::compiler::PropertyAccessInfo", %"class.v8::internal::compiler::PropertyAccessInfo"* %60, i64 -1, i32 4
  %93 = getelementptr inbounds %"class.v8::internal::compiler::PropertyAccessInfo", %"class.v8::internal::compiler::PropertyAccessInfo"* %60, i64 -1, i32 4, i32 0, i32 0, i32 2, i32 1, i32 0
  %94 = getelementptr inbounds %"class.v8::internal::compiler::PropertyAccessInfo", %"class.v8::internal::compiler::PropertyAccessInfo"* %59, i64 -1, i32 4, i32 0, i32 0, i32 2, i32 1
  %95 = bitcast %"class.v8::internal::ZoneAllocator.28"* %93 to i64*
  %96 = bitcast %"struct.std::__1::__compressed_pair_elem.27"* %94 to i64*
  %97 = bitcast %"class.v8::internal::ZoneVector.22"* %91 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %97, i8 0, i64 24, i1 false) #8
  %98 = load i64, i64* %95, align 8
  store i64 %98, i64* %96, align 8
  %99 = bitcast %"class.v8::internal::ZoneVector.22"* %92 to i64*
  %100 = load i64, i64* %99, align 8
  %101 = bitcast %"class.v8::internal::ZoneVector.22"* %91 to i64*
  store i64 %100, i64* %101, align 8
  %102 = getelementptr inbounds %"class.v8::internal::compiler::PropertyAccessInfo", %"class.v8::internal::compiler::PropertyAccessInfo"* %60, i64 -1, i32 4, i32 0, i32 0, i32 1
  %103 = bitcast %"class.v8::internal::compiler::CompilationDependency"*** %102 to i64*
  %104 = load i64, i64* %103, align 8
  %105 = getelementptr inbounds %"class.v8::internal::compiler::PropertyAccessInfo", %"class.v8::internal::compiler::PropertyAccessInfo"* %59, i64 -1, i32 4, i32 0, i32 0, i32 1
  %106 = bitcast %"class.v8::internal::compiler::CompilationDependency"*** %105 to i64*
  store i64 %104, i64* %106, align 8
  %107 = getelementptr inbounds %"class.v8::internal::compiler::PropertyAccessInfo", %"class.v8::internal::compiler::PropertyAccessInfo"* %60, i64 -1, i32 4, i32 0, i32 0, i32 2, i32 0, i32 0
  %108 = bitcast %"class.v8::internal::compiler::CompilationDependency"*** %107 to i64*
  %109 = load i64, i64* %108, align 8
  %110 = getelementptr inbounds %"class.v8::internal::compiler::PropertyAccessInfo", %"class.v8::internal::compiler::PropertyAccessInfo"* %59, i64 -1, i32 4, i32 0, i32 0, i32 2, i32 0, i32 0
  %111 = bitcast %"class.v8::internal::compiler::CompilationDependency"*** %110 to i64*
  store i64 %109, i64* %111, align 8
  %112 = bitcast %"class.v8::internal::ZoneVector.22"* %92 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %112, i8 0, i64 24, i1 false) #8
  %113 = getelementptr inbounds %"class.v8::internal::compiler::PropertyAccessInfo", %"class.v8::internal::compiler::PropertyAccessInfo"* %59, i64 -1, i32 5
  %114 = getelementptr inbounds %"class.v8::internal::compiler::PropertyAccessInfo", %"class.v8::internal::compiler::PropertyAccessInfo"* %60, i64 -1, i32 5
  %115 = bitcast %"class.v8::internal::MaybeHandle.29"* %113 to i8*
  %116 = bitcast %"class.v8::internal::MaybeHandle.29"* %114 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %115, i8* align 8 %116, i64 64, i1 false) #8
  %117 = getelementptr inbounds %"class.v8::internal::compiler::PropertyAccessInfo", %"class.v8::internal::compiler::PropertyAccessInfo"* %59, i64 -1
  %118 = icmp eq %"class.v8::internal::compiler::PropertyAccessInfo"* %61, %53
  br i1 %118, label %119, label %58

119:                                              ; preds = %58
  %120 = load i64, i64* %6, align 8
  %121 = load %"class.v8::internal::compiler::PropertyAccessInfo"*, %"class.v8::internal::compiler::PropertyAccessInfo"** %3, align 8
  br label %122

122:                                              ; preds = %56, %119
  %123 = phi %"class.v8::internal::compiler::PropertyAccessInfo"* [ %53, %56 ], [ %121, %119 ]
  %124 = phi %"class.v8::internal::compiler::PropertyAccessInfo"* [ %47, %56 ], [ %117, %119 ]
  %125 = phi i64 [ %57, %56 ], [ %120, %119 ]
  %126 = ptrtoint %"class.v8::internal::compiler::PropertyAccessInfo"* %124 to i64
  store i64 %126, i64* %6, align 8
  store i64 %51, i64* %4, align 8
  store i64 %49, i64* %16, align 8
  %127 = inttoptr i64 %125 to %"class.v8::internal::compiler::PropertyAccessInfo"*
  %128 = icmp eq %"class.v8::internal::compiler::PropertyAccessInfo"* %123, %127
  br i1 %128, label %149, label %129

129:                                              ; preds = %122, %147
  %130 = phi %"class.v8::internal::compiler::PropertyAccessInfo"* [ %131, %147 ], [ %123, %122 ]
  %131 = getelementptr inbounds %"class.v8::internal::compiler::PropertyAccessInfo", %"class.v8::internal::compiler::PropertyAccessInfo"* %130, i64 -1
  %132 = getelementptr inbounds %"class.v8::internal::compiler::PropertyAccessInfo", %"class.v8::internal::compiler::PropertyAccessInfo"* %130, i64 -1, i32 4, i32 0, i32 0, i32 0
  %133 = load %"class.v8::internal::compiler::CompilationDependency"**, %"class.v8::internal::compiler::CompilationDependency"*** %132, align 8
  %134 = icmp eq %"class.v8::internal::compiler::CompilationDependency"** %133, null
  br i1 %134, label %139, label %135

135:                                              ; preds = %129
  %136 = ptrtoint %"class.v8::internal::compiler::CompilationDependency"** %133 to i64
  %137 = getelementptr inbounds %"class.v8::internal::compiler::PropertyAccessInfo", %"class.v8::internal::compiler::PropertyAccessInfo"* %130, i64 -1, i32 4, i32 0, i32 0, i32 1
  %138 = bitcast %"class.v8::internal::compiler::CompilationDependency"*** %137 to i64*
  store i64 %136, i64* %138, align 8
  br label %139

139:                                              ; preds = %135, %129
  %140 = getelementptr inbounds %"class.v8::internal::compiler::PropertyAccessInfo", %"class.v8::internal::compiler::PropertyAccessInfo"* %130, i64 -1, i32 1, i32 0, i32 0, i32 0
  %141 = load %"class.v8::internal::Handle"*, %"class.v8::internal::Handle"** %140, align 8
  %142 = icmp eq %"class.v8::internal::Handle"* %141, null
  br i1 %142, label %147, label %143

143:                                              ; preds = %139
  %144 = ptrtoint %"class.v8::internal::Handle"* %141 to i64
  %145 = getelementptr inbounds %"class.v8::internal::compiler::PropertyAccessInfo", %"class.v8::internal::compiler::PropertyAccessInfo"* %130, i64 -1, i32 1, i32 0, i32 0, i32 1
  %146 = bitcast %"class.v8::internal::Handle"** %145 to i64*
  store i64 %144, i64* %146, align 8
  br label %147

147:                                              ; preds = %143, %139
  %148 = icmp eq %"class.v8::internal::compiler::PropertyAccessInfo"* %131, %127
  br i1 %148, label %149, label %129

149:                                              ; preds = %147, %122
  ret void
}

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind }
attributes #3 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { noreturn nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nounwind }
attributes #9 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #11 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #12 = { noreturn nounwind }
attributes #13 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!"branch_weights", i32 1, i32 2000}
!3 = distinct !{!3, !4}
!4 = !{!"llvm.loop.unroll.disable"}
!5 = distinct !{!5, !4}
!6 = distinct !{!6, !4}
!7 = distinct !{!7, !4}
!8 = distinct !{!8, !4}
!9 = !{!10}
!10 = distinct !{!10, !11}
!11 = distinct !{!11, !"LVerDomain"}
!12 = !{!13}
!13 = distinct !{!13, !11}
!14 = distinct !{!14, !15}
!15 = !{!"llvm.loop.isvectorized", i32 1}
!16 = distinct !{!16, !4}
!17 = distinct !{!17, !4}
!18 = distinct !{!18, !15}
!19 = !{!20}
!20 = distinct !{!20, !21}
!21 = distinct !{!21, !"LVerDomain"}
!22 = !{!23}
!23 = distinct !{!23, !21}
!24 = distinct !{!24, !15}
!25 = distinct !{!25, !4}
!26 = distinct !{!26, !15}
!27 = distinct !{!27, !4}
!28 = !{!29}
!29 = distinct !{!29, !30}
!30 = distinct !{!30, !"LVerDomain"}
!31 = !{!32}
!32 = distinct !{!32, !30}
!33 = distinct !{!33, !15}
!34 = distinct !{!34, !4}
!35 = distinct !{!35, !15}
!36 = !{!37}
!37 = distinct !{!37, !38}
!38 = distinct !{!38, !"LVerDomain"}
!39 = !{!40}
!40 = distinct !{!40, !38}
!41 = distinct !{!41, !15}
!42 = distinct !{!42, !4}
!43 = distinct !{!43, !4}
!44 = distinct !{!44, !15}
!45 = !{!46}
!46 = distinct !{!46, !47}
!47 = distinct !{!47, !"LVerDomain"}
!48 = !{!49}
!49 = distinct !{!49, !47}
!50 = distinct !{!50, !15}
!51 = distinct !{!51, !4}
!52 = distinct !{!52, !4}
!53 = distinct !{!53, !15}
!54 = !{!55}
!55 = distinct !{!55, !56}
!56 = distinct !{!56, !"LVerDomain"}
!57 = !{!58}
!58 = distinct !{!58, !56}
!59 = distinct !{!59, !15}
!60 = distinct !{!60, !4}
!61 = distinct !{!61, !15}
!62 = distinct !{!62, !4}
!63 = !{!64}
!64 = distinct !{!64, !65}
!65 = distinct !{!65, !"LVerDomain"}
!66 = !{!67}
!67 = distinct !{!67, !65}
!68 = distinct !{!68, !15}
!69 = distinct !{!69, !4}
!70 = distinct !{!70, !15}
!71 = !{!72}
!72 = distinct !{!72, !73}
!73 = distinct !{!73, !"LVerDomain"}
!74 = !{!75}
!75 = distinct !{!75, !73}
!76 = distinct !{!76, !15}
!77 = distinct !{!77, !4}
!78 = distinct !{!78, !4}
!79 = distinct !{!79, !15}
!80 = !{i8 0, i8 2}
!81 = !{!"branch_weights", i32 2000, i32 1}
!82 = !{!83}
!83 = distinct !{!83, !84}
!84 = distinct !{!84, !"LVerDomain"}
!85 = !{!86}
!86 = distinct !{!86, !84}
!87 = distinct !{!87, !15}
!88 = distinct !{!88, !4}
!89 = distinct !{!89, !15}
!90 = !{!91}
!91 = distinct !{!91, !92}
!92 = distinct !{!92, !"LVerDomain"}
!93 = !{!94}
!94 = distinct !{!94, !92}
!95 = distinct !{!95, !15}
!96 = distinct !{!96, !4}
!97 = distinct !{!97, !15}
!98 = distinct !{!98, !4}
!99 = !{!100}
!100 = distinct !{!100, !101, !"_ZNK2v88internal8compiler17AccessInfoFactory7InvalidEv: argument 0"}
!101 = distinct !{!101, !"_ZNK2v88internal8compiler17AccessInfoFactory7InvalidEv"}
!102 = !{!103, !100}
!103 = distinct !{!103, !104, !"_ZN2v88internal8compiler18PropertyAccessInfo7InvalidEPNS0_4ZoneE: argument 0"}
!104 = distinct !{!104, !"_ZN2v88internal8compiler18PropertyAccessInfo7InvalidEPNS0_4ZoneE"}
!105 = !{!106}
!106 = distinct !{!106, !107, !"_ZNK2v88internal8compiler17AccessInfoFactory7InvalidEv: argument 0"}
!107 = distinct !{!107, !"_ZNK2v88internal8compiler17AccessInfoFactory7InvalidEv"}
!108 = !{!109, !106}
!109 = distinct !{!109, !110, !"_ZN2v88internal8compiler18PropertyAccessInfo7InvalidEPNS0_4ZoneE: argument 0"}
!110 = distinct !{!110, !"_ZN2v88internal8compiler18PropertyAccessInfo7InvalidEPNS0_4ZoneE"}
!111 = !{!112}
!112 = distinct !{!112, !113, !"_ZNK2v88internal8compiler17AccessInfoFactory7InvalidEv: argument 0"}
!113 = distinct !{!113, !"_ZNK2v88internal8compiler17AccessInfoFactory7InvalidEv"}
!114 = !{!115, !112}
!115 = distinct !{!115, !116, !"_ZN2v88internal8compiler18PropertyAccessInfo7InvalidEPNS0_4ZoneE: argument 0"}
!116 = distinct !{!116, !"_ZN2v88internal8compiler18PropertyAccessInfo7InvalidEPNS0_4ZoneE"}
!117 = !{!"branch_weights", i32 1, i32 2001, i32 2001, i32 2001, i32 2000}
!118 = !{!119}
!119 = distinct !{!119, !120}
!120 = distinct !{!120, !"LVerDomain"}
!121 = !{!122}
!122 = distinct !{!122, !120}
!123 = distinct !{!123, !15}
!124 = distinct !{!124, !4}
!125 = distinct !{!125, !15}
!126 = !{!127}
!127 = distinct !{!127, !128}
!128 = distinct !{!128, !"LVerDomain"}
!129 = !{!130}
!130 = distinct !{!130, !128}
!131 = distinct !{!131, !15}
!132 = distinct !{!132, !4}
!133 = distinct !{!133, !15}
!134 = !{!135}
!135 = distinct !{!135, !136, !"_ZNK2v88internal8compiler17AccessInfoFactory7InvalidEv: argument 0"}
!136 = distinct !{!136, !"_ZNK2v88internal8compiler17AccessInfoFactory7InvalidEv"}
!137 = !{!138, !135}
!138 = distinct !{!138, !139, !"_ZN2v88internal8compiler18PropertyAccessInfo7InvalidEPNS0_4ZoneE: argument 0"}
!139 = distinct !{!139, !"_ZN2v88internal8compiler18PropertyAccessInfo7InvalidEPNS0_4ZoneE"}
!140 = !{!141}
!141 = distinct !{!141, !142}
!142 = distinct !{!142, !"LVerDomain"}
!143 = !{!144}
!144 = distinct !{!144, !142}
!145 = distinct !{!145, !15}
!146 = distinct !{!146, !4}
!147 = distinct !{!147, !15}
!148 = !{!149}
!149 = distinct !{!149, !150, !"_ZNK2v88internal8compiler17AccessInfoFactory7InvalidEv: argument 0"}
!150 = distinct !{!150, !"_ZNK2v88internal8compiler17AccessInfoFactory7InvalidEv"}
!151 = !{!152, !149}
!152 = distinct !{!152, !153, !"_ZN2v88internal8compiler18PropertyAccessInfo7InvalidEPNS0_4ZoneE: argument 0"}
!153 = distinct !{!153, !"_ZN2v88internal8compiler18PropertyAccessInfo7InvalidEPNS0_4ZoneE"}
!154 = !{!155}
!155 = distinct !{!155, !156}
!156 = distinct !{!156, !"LVerDomain"}
!157 = !{!158}
!158 = distinct !{!158, !156}
!159 = distinct !{!159, !15}
!160 = distinct !{!160, !4}
!161 = distinct !{!161, !15}
!162 = !{!163}
!163 = distinct !{!163, !164, !"_ZN2v88internal8compiler12_GLOBAL__N_124AccessorAccessInfoHelperEPNS0_7IsolateEPNS0_4ZoneEPNS1_12JSHeapBrokerEPKNS1_17AccessInfoFactoryENS0_6HandleINS0_3MapEEENSC_INS0_4NameEEESE_NS0_11MaybeHandleINS0_8JSObjectEEENS1_10AccessModeENSt3__18functionIFNSC_INS0_6ObjectEEEvEEE: argument 0"}
!164 = distinct !{!164, !"_ZN2v88internal8compiler12_GLOBAL__N_124AccessorAccessInfoHelperEPNS0_7IsolateEPNS0_4ZoneEPNS1_12JSHeapBrokerEPKNS1_17AccessInfoFactoryENS0_6HandleINS0_3MapEEENSC_INS0_4NameEEESE_NS0_11MaybeHandleINS0_8JSObjectEEENS1_10AccessModeENSt3__18functionIFNSC_INS0_6ObjectEEEvEEE"}
!165 = !{!166, !163}
!166 = distinct !{!166, !167, !"_ZN2v88internal8compiler18PropertyAccessInfo7InvalidEPNS0_4ZoneE: argument 0"}
!167 = distinct !{!167, !"_ZN2v88internal8compiler18PropertyAccessInfo7InvalidEPNS0_4ZoneE"}
!168 = !{!169, !163}
!169 = distinct !{!169, !170, !"_ZN2v88internal8compiler18PropertyAccessInfo7InvalidEPNS0_4ZoneE: argument 0"}
!170 = distinct !{!170, !"_ZN2v88internal8compiler18PropertyAccessInfo7InvalidEPNS0_4ZoneE"}
!171 = !{!172, !163}
!172 = distinct !{!172, !173, !"_ZN2v88internal8compiler18PropertyAccessInfo7InvalidEPNS0_4ZoneE: argument 0"}
!173 = distinct !{!173, !"_ZN2v88internal8compiler18PropertyAccessInfo7InvalidEPNS0_4ZoneE"}
!174 = !{!175, !163}
!175 = distinct !{!175, !176, !"_ZN2v88internal8compiler18PropertyAccessInfo7InvalidEPNS0_4ZoneE: argument 0"}
!176 = distinct !{!176, !"_ZN2v88internal8compiler18PropertyAccessInfo7InvalidEPNS0_4ZoneE"}
!177 = !{!178, !163}
!178 = distinct !{!178, !179, !"_ZN2v88internal8compiler18PropertyAccessInfo7InvalidEPNS0_4ZoneE: argument 0"}
!179 = distinct !{!179, !"_ZN2v88internal8compiler18PropertyAccessInfo7InvalidEPNS0_4ZoneE"}
!180 = !{!"branch_weights", i32 1, i32 2001, i32 2000}
!181 = !{!182}
!182 = distinct !{!182, !183, !"_ZN2v88internal8compiler33MinimorphicLoadPropertyAccessInfo9DataFieldEibNS0_14RepresentationENS1_4TypeE: argument 0"}
!183 = distinct !{!183, !"_ZN2v88internal8compiler33MinimorphicLoadPropertyAccessInfo9DataFieldEibNS0_14RepresentationENS1_4TypeE"}
!184 = !{!185}
!185 = distinct !{!185, !186, !"_ZNK2v88internal8compiler17AccessInfoFactory7InvalidEv: argument 0"}
!186 = distinct !{!186, !"_ZNK2v88internal8compiler17AccessInfoFactory7InvalidEv"}
!187 = !{!188, !185}
!188 = distinct !{!188, !189, !"_ZN2v88internal8compiler18PropertyAccessInfo7InvalidEPNS0_4ZoneE: argument 0"}
!189 = distinct !{!189, !"_ZN2v88internal8compiler18PropertyAccessInfo7InvalidEPNS0_4ZoneE"}
!190 = !{!191}
!191 = distinct !{!191, !192, !"_ZNK2v88internal8compiler17AccessInfoFactory7InvalidEv: argument 0"}
!192 = distinct !{!192, !"_ZNK2v88internal8compiler17AccessInfoFactory7InvalidEv"}
!193 = !{!194, !191}
!194 = distinct !{!194, !195, !"_ZN2v88internal8compiler18PropertyAccessInfo7InvalidEPNS0_4ZoneE: argument 0"}
!195 = distinct !{!195, !"_ZN2v88internal8compiler18PropertyAccessInfo7InvalidEPNS0_4ZoneE"}
!196 = !{!197}
!197 = distinct !{!197, !198, !"_ZNK2v88internal8compiler17AccessInfoFactory7InvalidEv: argument 0"}
!198 = distinct !{!198, !"_ZNK2v88internal8compiler17AccessInfoFactory7InvalidEv"}
!199 = !{!200, !197}
!200 = distinct !{!200, !201, !"_ZN2v88internal8compiler18PropertyAccessInfo7InvalidEPNS0_4ZoneE: argument 0"}
!201 = distinct !{!201, !"_ZN2v88internal8compiler18PropertyAccessInfo7InvalidEPNS0_4ZoneE"}
!202 = !{!203}
!203 = distinct !{!203, !204, !"_ZNK2v88internal8compiler17AccessInfoFactory7InvalidEv: argument 0"}
!204 = distinct !{!204, !"_ZNK2v88internal8compiler17AccessInfoFactory7InvalidEv"}
!205 = !{!206, !203}
!206 = distinct !{!206, !207, !"_ZN2v88internal8compiler18PropertyAccessInfo7InvalidEPNS0_4ZoneE: argument 0"}
!207 = distinct !{!207, !"_ZN2v88internal8compiler18PropertyAccessInfo7InvalidEPNS0_4ZoneE"}
!208 = !{!209}
!209 = distinct !{!209, !210, !"_ZNK2v88internal8compiler17AccessInfoFactory7InvalidEv: argument 0"}
!210 = distinct !{!210, !"_ZNK2v88internal8compiler17AccessInfoFactory7InvalidEv"}
!211 = !{!212, !209}
!212 = distinct !{!212, !213, !"_ZN2v88internal8compiler18PropertyAccessInfo7InvalidEPNS0_4ZoneE: argument 0"}
!213 = distinct !{!213, !"_ZN2v88internal8compiler18PropertyAccessInfo7InvalidEPNS0_4ZoneE"}
!214 = !{!215}
!215 = distinct !{!215, !216, !"_ZNK2v88internal8compiler17AccessInfoFactory7InvalidEv: argument 0"}
!216 = distinct !{!216, !"_ZNK2v88internal8compiler17AccessInfoFactory7InvalidEv"}
!217 = !{!218, !215}
!218 = distinct !{!218, !219, !"_ZN2v88internal8compiler18PropertyAccessInfo7InvalidEPNS0_4ZoneE: argument 0"}
!219 = distinct !{!219, !"_ZN2v88internal8compiler18PropertyAccessInfo7InvalidEPNS0_4ZoneE"}
!220 = !{!221}
!221 = distinct !{!221, !222, !"_ZNK2v88internal8compiler17AccessInfoFactory7InvalidEv: argument 0"}
!222 = distinct !{!222, !"_ZNK2v88internal8compiler17AccessInfoFactory7InvalidEv"}
!223 = !{!224, !221}
!224 = distinct !{!224, !225, !"_ZN2v88internal8compiler18PropertyAccessInfo7InvalidEPNS0_4ZoneE: argument 0"}
!225 = distinct !{!225, !"_ZN2v88internal8compiler18PropertyAccessInfo7InvalidEPNS0_4ZoneE"}
!226 = !{!227}
!227 = distinct !{!227, !228, !"_ZNK2v88internal8compiler17AccessInfoFactory7InvalidEv: argument 0"}
!228 = distinct !{!228, !"_ZNK2v88internal8compiler17AccessInfoFactory7InvalidEv"}
!229 = !{!230, !227}
!230 = distinct !{!230, !231, !"_ZN2v88internal8compiler18PropertyAccessInfo7InvalidEPNS0_4ZoneE: argument 0"}
!231 = distinct !{!231, !"_ZN2v88internal8compiler18PropertyAccessInfo7InvalidEPNS0_4ZoneE"}
!232 = !{!233}
!233 = distinct !{!233, !234, !"_ZNK2v88internal8compiler17AccessInfoFactory7InvalidEv: argument 0"}
!234 = distinct !{!234, !"_ZNK2v88internal8compiler17AccessInfoFactory7InvalidEv"}
!235 = !{!236, !233}
!236 = distinct !{!236, !237, !"_ZN2v88internal8compiler18PropertyAccessInfo7InvalidEPNS0_4ZoneE: argument 0"}
!237 = distinct !{!237, !"_ZN2v88internal8compiler18PropertyAccessInfo7InvalidEPNS0_4ZoneE"}
!238 = !{!239}
!239 = distinct !{!239, !240, !"_ZNK2v88internal8compiler17AccessInfoFactory7InvalidEv: argument 0"}
!240 = distinct !{!240, !"_ZNK2v88internal8compiler17AccessInfoFactory7InvalidEv"}
!241 = !{!242, !239}
!242 = distinct !{!242, !243, !"_ZN2v88internal8compiler18PropertyAccessInfo7InvalidEPNS0_4ZoneE: argument 0"}
!243 = distinct !{!243, !"_ZN2v88internal8compiler18PropertyAccessInfo7InvalidEPNS0_4ZoneE"}
!244 = !{!245}
!245 = distinct !{!245, !246, !"_ZNK2v88internal8compiler17AccessInfoFactory7InvalidEv: argument 0"}
!246 = distinct !{!246, !"_ZNK2v88internal8compiler17AccessInfoFactory7InvalidEv"}
!247 = !{!248, !245}
!248 = distinct !{!248, !249, !"_ZN2v88internal8compiler18PropertyAccessInfo7InvalidEPNS0_4ZoneE: argument 0"}
!249 = distinct !{!249, !"_ZN2v88internal8compiler18PropertyAccessInfo7InvalidEPNS0_4ZoneE"}
!250 = !{!251}
!251 = distinct !{!251, !252, !"_ZNK2v88internal8compiler17AccessInfoFactory7InvalidEv: argument 0"}
!252 = distinct !{!252, !"_ZNK2v88internal8compiler17AccessInfoFactory7InvalidEv"}
!253 = !{!254, !251}
!254 = distinct !{!254, !255, !"_ZN2v88internal8compiler18PropertyAccessInfo7InvalidEPNS0_4ZoneE: argument 0"}
!255 = distinct !{!255, !"_ZN2v88internal8compiler18PropertyAccessInfo7InvalidEPNS0_4ZoneE"}
!256 = !{!257}
!257 = distinct !{!257, !258, !"_ZNK2v88internal8compiler17AccessInfoFactory7InvalidEv: argument 0"}
!258 = distinct !{!258, !"_ZNK2v88internal8compiler17AccessInfoFactory7InvalidEv"}
!259 = !{!260, !257}
!260 = distinct !{!260, !261, !"_ZN2v88internal8compiler18PropertyAccessInfo7InvalidEPNS0_4ZoneE: argument 0"}
!261 = distinct !{!261, !"_ZN2v88internal8compiler18PropertyAccessInfo7InvalidEPNS0_4ZoneE"}
!262 = !{!263}
!263 = distinct !{!263, !264, !"_ZNK2v88internal8compiler17AccessInfoFactory7InvalidEv: argument 0"}
!264 = distinct !{!264, !"_ZNK2v88internal8compiler17AccessInfoFactory7InvalidEv"}
!265 = !{!266, !263}
!266 = distinct !{!266, !267, !"_ZN2v88internal8compiler18PropertyAccessInfo7InvalidEPNS0_4ZoneE: argument 0"}
!267 = distinct !{!267, !"_ZN2v88internal8compiler18PropertyAccessInfo7InvalidEPNS0_4ZoneE"}
!268 = !{!269}
!269 = distinct !{!269, !270, !"_ZNK2v88internal8compiler17AccessInfoFactory7InvalidEv: argument 0"}
!270 = distinct !{!270, !"_ZNK2v88internal8compiler17AccessInfoFactory7InvalidEv"}
!271 = !{!272, !269}
!272 = distinct !{!272, !273, !"_ZN2v88internal8compiler18PropertyAccessInfo7InvalidEPNS0_4ZoneE: argument 0"}
!273 = distinct !{!273, !"_ZN2v88internal8compiler18PropertyAccessInfo7InvalidEPNS0_4ZoneE"}
!274 = !{!275}
!275 = distinct !{!275, !276, !"_ZNK2v88internal8compiler17AccessInfoFactory7InvalidEv: argument 0"}
!276 = distinct !{!276, !"_ZNK2v88internal8compiler17AccessInfoFactory7InvalidEv"}
!277 = !{!278, !275}
!278 = distinct !{!278, !279, !"_ZN2v88internal8compiler18PropertyAccessInfo7InvalidEPNS0_4ZoneE: argument 0"}
!279 = distinct !{!279, !"_ZN2v88internal8compiler18PropertyAccessInfo7InvalidEPNS0_4ZoneE"}
!280 = !{!281}
!281 = distinct !{!281, !282, !"_ZNK2v88internal8compiler17AccessInfoFactory7InvalidEv: argument 0"}
!282 = distinct !{!282, !"_ZNK2v88internal8compiler17AccessInfoFactory7InvalidEv"}
!283 = !{!284, !281}
!284 = distinct !{!284, !285, !"_ZN2v88internal8compiler18PropertyAccessInfo7InvalidEPNS0_4ZoneE: argument 0"}
!285 = distinct !{!285, !"_ZN2v88internal8compiler18PropertyAccessInfo7InvalidEPNS0_4ZoneE"}
!286 = !{!287}
!287 = distinct !{!287, !288, !"_ZNK2v88internal8compiler17AccessInfoFactory7InvalidEv: argument 0"}
!288 = distinct !{!288, !"_ZNK2v88internal8compiler17AccessInfoFactory7InvalidEv"}
!289 = !{!290, !287}
!290 = distinct !{!290, !291, !"_ZN2v88internal8compiler18PropertyAccessInfo7InvalidEPNS0_4ZoneE: argument 0"}
!291 = distinct !{!291, !"_ZN2v88internal8compiler18PropertyAccessInfo7InvalidEPNS0_4ZoneE"}
!292 = !{!293}
!293 = distinct !{!293, !294, !"_ZNK2v88internal8compiler17AccessInfoFactory7InvalidEv: argument 0"}
!294 = distinct !{!294, !"_ZNK2v88internal8compiler17AccessInfoFactory7InvalidEv"}
!295 = !{!296, !293}
!296 = distinct !{!296, !297, !"_ZN2v88internal8compiler18PropertyAccessInfo7InvalidEPNS0_4ZoneE: argument 0"}
!297 = distinct !{!297, !"_ZN2v88internal8compiler18PropertyAccessInfo7InvalidEPNS0_4ZoneE"}
!298 = !{!299}
!299 = distinct !{!299, !300}
!300 = distinct !{!300, !"LVerDomain"}
!301 = !{!302}
!302 = distinct !{!302, !300}
!303 = distinct !{!303, !15}
!304 = distinct !{!304, !4}
!305 = distinct !{!305, !15}
!306 = !{!307}
!307 = distinct !{!307, !308, !"_ZNK2v88internal8compiler17AccessInfoFactory7InvalidEv: argument 0"}
!308 = distinct !{!308, !"_ZNK2v88internal8compiler17AccessInfoFactory7InvalidEv"}
!309 = !{!310, !307}
!310 = distinct !{!310, !311, !"_ZN2v88internal8compiler18PropertyAccessInfo7InvalidEPNS0_4ZoneE: argument 0"}
!311 = distinct !{!311, !"_ZN2v88internal8compiler18PropertyAccessInfo7InvalidEPNS0_4ZoneE"}
!312 = !{!313}
!313 = distinct !{!313, !314}
!314 = distinct !{!314, !"LVerDomain"}
!315 = !{!316}
!316 = distinct !{!316, !314}
!317 = distinct !{!317, !15}
!318 = distinct !{!318, !4}
!319 = distinct !{!319, !15}
!320 = !{!321}
!321 = distinct !{!321, !322, !"_ZNK2v88internal8compiler17AccessInfoFactory7InvalidEv: argument 0"}
!322 = distinct !{!322, !"_ZNK2v88internal8compiler17AccessInfoFactory7InvalidEv"}
!323 = !{!324, !321}
!324 = distinct !{!324, !325, !"_ZN2v88internal8compiler18PropertyAccessInfo7InvalidEPNS0_4ZoneE: argument 0"}
!325 = distinct !{!325, !"_ZN2v88internal8compiler18PropertyAccessInfo7InvalidEPNS0_4ZoneE"}
!326 = !{!327}
!327 = distinct !{!327, !328, !"_ZNK2v88internal8compiler17AccessInfoFactory7InvalidEv: argument 0"}
!328 = distinct !{!328, !"_ZNK2v88internal8compiler17AccessInfoFactory7InvalidEv"}
!329 = !{!330, !327}
!330 = distinct !{!330, !331, !"_ZN2v88internal8compiler18PropertyAccessInfo7InvalidEPNS0_4ZoneE: argument 0"}
!331 = distinct !{!331, !"_ZN2v88internal8compiler18PropertyAccessInfo7InvalidEPNS0_4ZoneE"}
!332 = !{!333}
!333 = distinct !{!333, !334}
!334 = distinct !{!334, !"LVerDomain"}
!335 = !{!336}
!336 = distinct !{!336, !334}
!337 = distinct !{!337, !15}
!338 = distinct !{!338, !4}
!339 = distinct !{!339, !15}
!340 = !{!341}
!341 = distinct !{!341, !342}
!342 = distinct !{!342, !"LVerDomain"}
!343 = !{!344}
!344 = distinct !{!344, !342}
!345 = distinct !{!345, !15}
!346 = distinct !{!346, !4}
!347 = distinct !{!347, !15}
!348 = !{!349}
!349 = distinct !{!349, !350, !"_ZNK2v88internal8compiler17AccessInfoFactory7InvalidEv: argument 0"}
!350 = distinct !{!350, !"_ZNK2v88internal8compiler17AccessInfoFactory7InvalidEv"}
!351 = !{!352, !349}
!352 = distinct !{!352, !353, !"_ZN2v88internal8compiler18PropertyAccessInfo7InvalidEPNS0_4ZoneE: argument 0"}
!353 = distinct !{!353, !"_ZN2v88internal8compiler18PropertyAccessInfo7InvalidEPNS0_4ZoneE"}
!354 = !{!355}
!355 = distinct !{!355, !356}
!356 = distinct !{!356, !"LVerDomain"}
!357 = !{!358}
!358 = distinct !{!358, !356}
!359 = distinct !{!359, !15}
!360 = distinct !{!360, !4}
!361 = distinct !{!361, !15}
!362 = !{!363}
!363 = distinct !{!363, !364, !"_ZNK2v88internal8compiler17AccessInfoFactory7InvalidEv: argument 0"}
!364 = distinct !{!364, !"_ZNK2v88internal8compiler17AccessInfoFactory7InvalidEv"}
!365 = !{!366, !363}
!366 = distinct !{!366, !367, !"_ZN2v88internal8compiler18PropertyAccessInfo7InvalidEPNS0_4ZoneE: argument 0"}
!367 = distinct !{!367, !"_ZN2v88internal8compiler18PropertyAccessInfo7InvalidEPNS0_4ZoneE"}
!368 = distinct !{!368, !4}
!369 = distinct !{!369, !4}
!370 = distinct !{!370, !4}
!371 = distinct !{!371, !4}
