; ModuleID = '../../third_party/skia/src/image/SkImage.cpp'
source_filename = "../../third_party/skia/src/image/SkImage.cpp"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%struct.GrFlushInfo = type { i32, %class.GrBackendSemaphore*, void (i8*)*, i8*, void (i8*, i1)*, i8* }
%class.GrBackendSemaphore = type opaque
%"class.skif::Mapping" = type { %class.SkMatrix, %class.SkMatrix }
%class.SkMatrix = type { [9 x float], i32 }
%"class.skif::LayerSpace" = type { %struct.SkIRect }
%struct.SkIRect = type { i32, i32, i32, i32 }
%class.SkImageFilterCache = type { %class.SkRefCnt.base, [4 x i8] }
%class.SkRefCnt.base = type { %class.SkRefCntBase.base }
%class.SkRefCntBase.base = type <{ i32 (...)**, %"struct.std::__1::atomic" }>
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.0" }
%"struct.std::__1::__atomic_base.0" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%class.SkColorSpace = type <{ %class.SkNVRefCnt, i32, i32, %struct.skcms_TransferFunction, %struct.skcms_Matrix3x3, %struct.skcms_TransferFunction, %struct.skcms_Matrix3x3, %class.SkOnce, [3 x i8] }>
%class.SkNVRefCnt = type { %"struct.std::__1::atomic" }
%struct.skcms_TransferFunction = type { float, float, float, float, float, float, float }
%struct.skcms_Matrix3x3 = type { [3 x [3 x float]] }
%class.SkOnce = type { %"struct.std::__1::atomic.1" }
%"struct.std::__1::atomic.1" = type { %"struct.std::__1::__atomic_base.2" }
%"struct.std::__1::__atomic_base.2" = type { %"struct.std::__1::__atomic_base.3" }
%"struct.std::__1::__atomic_base.3" = type { %"struct.std::__1::__cxx_atomic_impl.4" }
%"struct.std::__1::__cxx_atomic_impl.4" = type { %"struct.std::__1::__cxx_atomic_base_impl.5" }
%"struct.std::__1::__cxx_atomic_base_impl.5" = type { i8 }
%"class.skif::FilterResult" = type { %class.sk_sp.210, %"class.skif::LayerSpace.212" }
%class.sk_sp.210 = type { %class.SkSpecialImage* }
%class.SkSpecialImage = type { %class.SkRefCnt.base, %class.SkSurfaceProps, %struct.SkIRect, i32 }
%class.SkSurfaceProps = type { i32, i32 }
%"class.skif::LayerSpace.212" = type { %struct.SkIPoint }
%struct.SkIPoint = type { i32, i32 }
%class.SkImage = type <{ %class.SkRefCnt.base, [4 x i8], %struct.SkImageInfo, i32, [4 x i8] }>
%struct.SkImageInfo = type { %class.SkColorInfo, %struct.SkISize }
%class.SkColorInfo = type { %class.sk_sp, i32, i32 }
%class.sk_sp = type { %class.SkColorSpace* }
%struct.SkISize = type { i32, i32 }
%class.SkImage_Base = type { %class.SkImage.base, %"struct.std::__1::atomic.6", [3 x i8] }
%class.SkImage.base = type <{ %class.SkRefCnt.base, [4 x i8], %struct.SkImageInfo, i32 }>
%"struct.std::__1::atomic.6" = type { %"struct.std::__1::__atomic_base.7" }
%"struct.std::__1::__atomic_base.7" = type { %"struct.std::__1::__cxx_atomic_impl.8" }
%"struct.std::__1::__cxx_atomic_impl.8" = type { %"struct.std::__1::__cxx_atomic_base_impl.9" }
%"struct.std::__1::__cxx_atomic_base_impl.9" = type { i8 }
%class.SkMipmapBuilder = type { %class.sk_sp.165 }
%class.sk_sp.165 = type { %class.SkMipmap* }
%class.SkMipmap = type <{ %class.SkCachedData.base, [6 x i8], %class.sk_sp, %"struct.SkMipmap::Level"*, i32, [4 x i8] }>
%class.SkCachedData.base = type <{ i32 (...)**, %class.SkMutex, %union.anon.166, i8*, i64, i32, i32, i8, i8 }>
%class.SkMutex = type { %class.SkSemaphore }
%class.SkSemaphore = type { %"struct.std::__1::atomic", %class.SkOnce, %"struct.SkSemaphore::OSSemaphore"* }
%"struct.SkSemaphore::OSSemaphore" = type opaque
%union.anon.166 = type { %class.SkDiscardableMemory* }
%class.SkDiscardableMemory = type opaque
%"struct.SkMipmap::Level" = type { %class.SkPixmap, %struct.SkSize }
%class.SkPixmap = type { i8*, i64, %struct.SkImageInfo }
%struct.SkSize = type { float, float }
%struct.SkSamplingOptions = type { i8, %struct.SkCubicResampler, i32, i32 }
%struct.SkCubicResampler = type { float, float }
%class.GrDirectContext = type { %class.GrRecordingContext, %"class.GrDirectContext::DirectContextID", %"class.std::__1::unique_ptr.81", %"class.std::__1::unique_ptr.87", %class.sk_sp.93, %"class.std::__1::unique_ptr.94", %"class.std::__1::unique_ptr.133", i8, i8, %"class.GrContextOptions::PersistentCache"*, %"class.GrContextOptions::ShaderErrorHandler"*, %"class.std::__1::unique_ptr.140", %"class.std::__1::unique_ptr.146", %"class.std::__1::unique_ptr.152" }
%class.GrRecordingContext = type { %class.GrImageContext.base, %"class.GrRecordingContext::Stats", %"class.std::__1::unique_ptr.22", %"class.GrRecordingContext::OwnedArenas", %"class.std::__1::unique_ptr.61", %"class.std::__1::unique_ptr.67" }
%class.GrImageContext.base = type <{ %class.GrContext_Base, %class.GrSingleOwner }>
%class.GrContext_Base = type { %class.SkRefCnt.base, %class.sk_sp.10 }
%class.sk_sp.10 = type { %class.GrContextThreadSafeProxy* }
%class.GrContextThreadSafeProxy = type <{ %class.SkNVRefCnt.11, i32, %struct.GrContextOptions, i32, [4 x i8], %class.sk_sp.12, %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr.15", %class.sk_sp.21, %"struct.std::__1::atomic.6", [7 x i8] }>
%class.SkNVRefCnt.11 = type { %"struct.std::__1::atomic" }
%struct.GrContextOptions = type { i8, i32, i32, i32, %class.SkExecutor*, i8, i8, i8, i8, i8, i64, float, float, i32, i8, i8, i32, i32, i8, i8, i32, %"class.GrContextOptions::PersistentCache"*, i32, %"class.GrContextOptions::ShaderErrorHandler"*, i32, i32, i8, i8, %class.GrDriverBugWorkarounds }
%class.SkExecutor = type opaque
%class.GrDriverBugWorkarounds = type { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 }
%class.sk_sp.12 = type { %class.GrCaps* }
%class.GrCaps = type <{ %class.SkRefCnt.base, [4 x i8], %class.sk_sp.13, i48, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [4 x i8], i64, %class.GrDriverBugWorkarounds, i8, i8 }>
%class.sk_sp.13 = type { %class.GrShaderCaps* }
%class.GrShaderCaps = type <{ %class.SkRefCnt.base, i32, i56, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i32, i32, i32, [4 x i8] }>
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %class.GrTextBlobCache* }
%class.GrTextBlobCache = type opaque
%"class.std::__1::unique_ptr.15" = type { %"class.std::__1::__compressed_pair.16" }
%"class.std::__1::__compressed_pair.16" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"struct.std::__1::__compressed_pair_elem.17" = type { %class.GrThreadSafeCache* }
%class.GrThreadSafeCache = type opaque
%class.sk_sp.21 = type { %class.GrThreadSafePipelineBuilder* }
%class.GrThreadSafePipelineBuilder = type opaque
%class.GrSingleOwner = type { i8 }
%"class.GrRecordingContext::Stats" = type { i8 }
%"class.std::__1::unique_ptr.22" = type { %"class.std::__1::__compressed_pair.23" }
%"class.std::__1::__compressed_pair.23" = type { %"struct.std::__1::__compressed_pair_elem.24" }
%"struct.std::__1::__compressed_pair_elem.24" = type { %class.GrAuditTrail* }
%class.GrAuditTrail = type <{ %class.SkTArray, %class.SkTHashMap, %class.SkTHashMap.32, %class.SkTArray.41, %class.SkTArray.43, i32, i8, [3 x i8] }>
%class.SkTArray = type { %"class.std::__1::unique_ptr.25"*, i64 }
%"class.std::__1::unique_ptr.25" = type { %"class.std::__1::__compressed_pair.225" }
%"class.std::__1::__compressed_pair.225" = type { %"struct.std::__1::__compressed_pair_elem.226" }
%"struct.std::__1::__compressed_pair_elem.226" = type { %"struct.GrAuditTrail::Op"* }
%"struct.GrAuditTrail::Op" = type <{ %class.SkString, %class.SkTArray.43, %struct.SkRect, i32, i32, i32, [4 x i8] }>
%class.SkString = type { %class.sk_sp.44 }
%class.sk_sp.44 = type { %"struct.SkString::Rec"* }
%"struct.SkString::Rec" = type <{ i32, %"struct.std::__1::atomic", i8, [3 x i8] }>
%struct.SkRect = type { float, float, float, float }
%class.SkTHashMap = type { %class.SkTHashTable }
%class.SkTHashTable = type { i32, i32, %class.SkAutoTArray }
%class.SkAutoTArray = type { %"class.std::__1::unique_ptr.26" }
%"class.std::__1::unique_ptr.26" = type { %"class.std::__1::__compressed_pair.27" }
%"class.std::__1::__compressed_pair.27" = type { %"struct.std::__1::__compressed_pair_elem.28" }
%"struct.std::__1::__compressed_pair_elem.28" = type { %"struct.SkTHashTable<SkTHashMap<unsigned int, int, SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, int, SkGoodHash>::Pair>::Slot"* }
%"struct.SkTHashTable<SkTHashMap<unsigned int, int, SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, int, SkGoodHash>::Pair>::Slot" = type { %"struct.SkTHashMap<unsigned int, int, SkGoodHash>::Pair", i32 }
%"struct.SkTHashMap<unsigned int, int, SkGoodHash>::Pair" = type { %"struct.std::__1::pair" }
%"struct.std::__1::pair" = type { i32, i32 }
%class.SkTHashMap.32 = type { %class.SkTHashTable.33 }
%class.SkTHashTable.33 = type { i32, i32, %class.SkAutoTArray.34 }
%class.SkAutoTArray.34 = type { %"class.std::__1::unique_ptr.35" }
%"class.std::__1::unique_ptr.35" = type { %"class.std::__1::__compressed_pair.36" }
%"class.std::__1::__compressed_pair.36" = type { %"struct.std::__1::__compressed_pair_elem.37" }
%"struct.std::__1::__compressed_pair_elem.37" = type { %"struct.SkTHashTable<SkTHashMap<int, SkTArray<GrAuditTrail::Op *, false> *, SkGoodHash>::Pair, int, SkTHashMap<int, SkTArray<GrAuditTrail::Op *, false> *, SkGoodHash>::Pair>::Slot"* }
%"struct.SkTHashTable<SkTHashMap<int, SkTArray<GrAuditTrail::Op *, false> *, SkGoodHash>::Pair, int, SkTHashMap<int, SkTArray<GrAuditTrail::Op *, false> *, SkGoodHash>::Pair>::Slot" = type <{ %"struct.SkTHashMap<int, SkTArray<GrAuditTrail::Op *, false> *, SkGoodHash>::Pair", i32, [4 x i8] }>
%"struct.SkTHashMap<int, SkTArray<GrAuditTrail::Op *, false> *, SkGoodHash>::Pair" = type { %"struct.std::__1::pair.230" }
%"struct.std::__1::pair.230" = type { i32, %class.SkTArray.231* }
%class.SkTArray.231 = type { %"struct.GrAuditTrail::Op"**, i64 }
%class.SkTArray.41 = type { %"class.std::__1::unique_ptr.42"*, i64 }
%"class.std::__1::unique_ptr.42" = type { %"class.std::__1::__compressed_pair.232" }
%"class.std::__1::__compressed_pair.232" = type { %"struct.std::__1::__compressed_pair_elem.233" }
%"struct.std::__1::__compressed_pair_elem.233" = type { %"struct.GrAuditTrail::OpNode"* }
%"struct.GrAuditTrail::OpNode" = type <{ %struct.SkRect, %class.SkTArray.231, %"class.GrSurfaceProxy::UniqueID", [4 x i8] }>
%"class.GrSurfaceProxy::UniqueID" = type { i32 }
%class.SkTArray.43 = type { %class.SkString*, i64 }
%"class.GrRecordingContext::OwnedArenas" = type { i8, %"class.std::__1::unique_ptr.48", %"class.std::__1::unique_ptr.54" }
%"class.std::__1::unique_ptr.48" = type { %"class.std::__1::__compressed_pair.49" }
%"class.std::__1::__compressed_pair.49" = type { %"struct.std::__1::__compressed_pair_elem.50" }
%"struct.std::__1::__compressed_pair_elem.50" = type { %class.SkArenaAlloc* }
%class.SkArenaAlloc = type <{ i8*, i8*, i8*, %class.SkFibBlockSizes, [4 x i8] }>
%class.SkFibBlockSizes = type { i32 }
%"class.std::__1::unique_ptr.54" = type { %"class.std::__1::__compressed_pair.55" }
%"class.std::__1::__compressed_pair.55" = type { %"struct.std::__1::__compressed_pair_elem.56" }
%"struct.std::__1::__compressed_pair_elem.56" = type { %class.GrSubRunAllocator* }
%class.GrSubRunAllocator = type { %class.GrBagOfBytes }
%class.GrBagOfBytes = type { i8*, i32, %class.SkFibBlockSizes.57 }
%class.SkFibBlockSizes.57 = type { i32 }
%"class.std::__1::unique_ptr.61" = type { %"class.std::__1::__compressed_pair.62" }
%"class.std::__1::__compressed_pair.62" = type { %"struct.std::__1::__compressed_pair_elem.63" }
%"struct.std::__1::__compressed_pair_elem.63" = type { %class.GrDrawingManager* }
%class.GrDrawingManager = type opaque
%"class.std::__1::unique_ptr.67" = type { %"class.std::__1::__compressed_pair.68" }
%"class.std::__1::__compressed_pair.68" = type { %"struct.std::__1::__compressed_pair_elem.69" }
%"struct.std::__1::__compressed_pair_elem.69" = type { %class.GrProxyProvider* }
%class.GrProxyProvider = type { %class.SkTDynamicHash, %class.GrImageContext* }
%class.SkTDynamicHash = type { %class.SkTHashTable.70 }
%class.SkTHashTable.70 = type { i32, i32, %class.SkAutoTArray.71 }
%class.SkAutoTArray.71 = type { %"class.std::__1::unique_ptr.72" }
%"class.std::__1::unique_ptr.72" = type { %"class.std::__1::__compressed_pair.73" }
%"class.std::__1::__compressed_pair.73" = type { %"struct.std::__1::__compressed_pair_elem.74" }
%"struct.std::__1::__compressed_pair_elem.74" = type { %"struct.SkTHashTable<GrTextureProxy *, GrUniqueKey, SkTDynamicHash<GrTextureProxy, GrUniqueKey, GrProxyProvider::UniquelyKeyedProxyHashTraits>::AdaptedTraits>::Slot"* }
%"struct.SkTHashTable<GrTextureProxy *, GrUniqueKey, SkTDynamicHash<GrTextureProxy, GrUniqueKey, GrProxyProvider::UniquelyKeyedProxyHashTraits>::AdaptedTraits>::Slot" = type opaque
%class.GrImageContext = type <{ %class.GrContext_Base, %class.GrSingleOwner, [7 x i8] }>
%"class.GrDirectContext::DirectContextID" = type { i32 }
%"class.std::__1::unique_ptr.81" = type { %"class.std::__1::__compressed_pair.82" }
%"class.std::__1::__compressed_pair.82" = type { %"struct.std::__1::__compressed_pair_elem.83" }
%"struct.std::__1::__compressed_pair_elem.83" = type { %class.SkTaskGroup* }
%class.SkTaskGroup = type opaque
%"class.std::__1::unique_ptr.87" = type { %"class.std::__1::__compressed_pair.88" }
%"class.std::__1::__compressed_pair.88" = type { %"struct.std::__1::__compressed_pair_elem.89" }
%"struct.std::__1::__compressed_pair_elem.89" = type { %class.GrStrikeCache* }
%class.GrStrikeCache = type opaque
%class.sk_sp.93 = type { %class.GrGpu* }
%class.GrGpu = type opaque
%"class.std::__1::unique_ptr.94" = type { %"class.std::__1::__compressed_pair.95" }
%"class.std::__1::__compressed_pair.95" = type { %"struct.std::__1::__compressed_pair_elem.96" }
%"struct.std::__1::__compressed_pair_elem.96" = type { %class.GrResourceCache* }
%class.GrResourceCache = type { %class.GrProxyProvider*, %class.GrThreadSafeCache*, i32, %class.SkTDPQueue, %class.SkTDArray, %class.SkTMultiMap, %class.SkTDynamicHash.108, i64, i64, i32, i64, i64, i32, [4 x i8], %"class.SkMessageBus<GrUniqueKeyInvalidatedMessage, unsigned int, true>::Inbox", %"class.SkMessageBus<GrTextureFreedMessage, GrDirectContext::DirectContextID, true>::Inbox", %class.SkTHashMap.121, %"class.GrDirectContext::DirectContextID", i32, %class.GrSingleOwner* }
%class.SkTDPQueue = type { %class.SkTDArray }
%class.SkTDArray = type { %class.GrGpuResource**, i32, i32 }
%class.GrGpuResource = type { i32 (...)**, %class.GrIORef, i32, i32, %"class.std::__1::chrono::time_point", %class.GrScratchKey, %class.GrUniqueKey, %class.GrGpu*, i64, i8, i8, %"class.GrGpuResource::UniqueID" }
%class.GrIORef = type { %"struct.std::__1::atomic", %"struct.std::__1::atomic" }
%"class.std::__1::chrono::time_point" = type { %"class.std::__1::chrono::duration" }
%"class.std::__1::chrono::duration" = type { i64 }
%class.GrScratchKey = type { %class.GrResourceKey }
%class.GrResourceKey = type { %class.SkAutoSTMalloc }
%class.SkAutoSTMalloc = type <{ i32*, %union.anon, [4 x i8] }>
%union.anon = type { [7 x i32] }
%class.GrUniqueKey = type { %class.GrResourceKey, %class.sk_sp.97, i8* }
%class.sk_sp.97 = type { %class.SkData* }
%class.SkData = type { %class.SkNVRefCnt.98, void (i8*, i8*)*, i8*, i8*, i64 }
%class.SkNVRefCnt.98 = type { %"struct.std::__1::atomic" }
%"class.GrGpuResource::UniqueID" = type { i32 }
%class.SkTMultiMap = type <{ %class.SkTDynamicHash.99, i32, [4 x i8] }>
%class.SkTDynamicHash.99 = type { %class.SkTHashTable.100 }
%class.SkTHashTable.100 = type { i32, i32, %class.SkAutoTArray.101 }
%class.SkAutoTArray.101 = type { %"class.std::__1::unique_ptr.102" }
%"class.std::__1::unique_ptr.102" = type { %"class.std::__1::__compressed_pair.103" }
%"class.std::__1::__compressed_pair.103" = type { %"struct.std::__1::__compressed_pair_elem.104" }
%"struct.std::__1::__compressed_pair_elem.104" = type { %"struct.SkTHashTable<SkTMultiMap<GrGpuResource, GrScratchKey, GrResourceCache::ScratchMapTraits>::ValueList *, GrScratchKey, SkTDynamicHash<SkTMultiMap<GrGpuResource, GrScratchKey, GrResourceCache::ScratchMapTraits>::ValueList, GrScratchKey, SkTMultiMap<GrGpuResource, GrScratchKey, GrResourceCache::ScratchMapTraits>::ValueList>::AdaptedTraits>::Slot"* }
%"struct.SkTHashTable<SkTMultiMap<GrGpuResource, GrScratchKey, GrResourceCache::ScratchMapTraits>::ValueList *, GrScratchKey, SkTDynamicHash<SkTMultiMap<GrGpuResource, GrScratchKey, GrResourceCache::ScratchMapTraits>::ValueList, GrScratchKey, SkTMultiMap<GrGpuResource, GrScratchKey, GrResourceCache::ScratchMapTraits>::ValueList>::AdaptedTraits>::Slot" = type opaque
%class.SkTDynamicHash.108 = type { %class.SkTHashTable.109 }
%class.SkTHashTable.109 = type { i32, i32, %class.SkAutoTArray.110 }
%class.SkAutoTArray.110 = type { %"class.std::__1::unique_ptr.111" }
%"class.std::__1::unique_ptr.111" = type { %"class.std::__1::__compressed_pair.112" }
%"class.std::__1::__compressed_pair.112" = type { %"struct.std::__1::__compressed_pair_elem.113" }
%"struct.std::__1::__compressed_pair_elem.113" = type { %"struct.SkTHashTable<GrGpuResource *, GrUniqueKey, SkTDynamicHash<GrGpuResource, GrUniqueKey, GrResourceCache::UniqueHashTraits>::AdaptedTraits>::Slot"* }
%"struct.SkTHashTable<GrGpuResource *, GrUniqueKey, SkTDynamicHash<GrGpuResource, GrUniqueKey, GrResourceCache::UniqueHashTraits>::AdaptedTraits>::Slot" = type <{ %class.GrGpuResource*, i32, [4 x i8] }>
%"class.SkMessageBus<GrUniqueKeyInvalidatedMessage, unsigned int, true>::Inbox" = type <{ %class.SkTArray.117, %class.SkMutex, i32, [4 x i8] }>
%class.SkTArray.117 = type { %class.GrUniqueKeyInvalidatedMessage*, i64 }
%class.GrUniqueKeyInvalidatedMessage = type <{ %class.GrUniqueKey, i32, i8, [3 x i8] }>
%"class.SkMessageBus<GrTextureFreedMessage, GrDirectContext::DirectContextID, true>::Inbox" = type <{ %class.SkTArray.118, %class.SkMutex, %"class.GrDirectContext::DirectContextID", [4 x i8] }>
%class.SkTArray.118 = type { %struct.GrTextureFreedMessage*, i64 }
%struct.GrTextureFreedMessage = type <{ %class.GrTexture*, %"class.GrDirectContext::DirectContextID", [4 x i8] }>
%class.GrTexture = type <{ i32 (...)**, i32, i32, i32, [4 x i8], %class.GrSurface }>
%class.GrSurface = type { %class.GrGpuResource, %struct.SkISize, i32, i8, %class.sk_sp.119 }
%class.sk_sp.119 = type { %class.GrRefCntedCallback* }
%class.GrRefCntedCallback = type { %class.SkNVRefCnt.120, void (i8*)*, i8* }
%class.SkNVRefCnt.120 = type { %"struct.std::__1::atomic" }
%class.SkTHashMap.121 = type { %class.SkTHashTable.122 }
%class.SkTHashTable.122 = type { i32, i32, %class.SkAutoTArray.123 }
%class.SkAutoTArray.123 = type { %"class.std::__1::unique_ptr.124" }
%"class.std::__1::unique_ptr.124" = type { %"class.std::__1::__compressed_pair.125" }
%"class.std::__1::__compressed_pair.125" = type { %"struct.std::__1::__compressed_pair_elem.126" }
%"struct.std::__1::__compressed_pair_elem.126" = type { %"struct.SkTHashTable<SkTHashMap<unsigned int, GrResourceCache::TextureAwaitingUnref, SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, GrResourceCache::TextureAwaitingUnref, SkGoodHash>::Pair>::Slot"* }
%"struct.SkTHashTable<SkTHashMap<unsigned int, GrResourceCache::TextureAwaitingUnref, SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, GrResourceCache::TextureAwaitingUnref, SkGoodHash>::Pair>::Slot" = type opaque
%"class.std::__1::unique_ptr.133" = type { %"class.std::__1::__compressed_pair.134" }
%"class.std::__1::__compressed_pair.134" = type { %"struct.std::__1::__compressed_pair_elem.135" }
%"struct.std::__1::__compressed_pair_elem.135" = type { %class.GrResourceProvider* }
%class.GrResourceProvider = type { %class.GrResourceCache*, %class.GrGpu*, %class.sk_sp.12, %class.sk_sp.136, %class.sk_sp.136 }
%class.sk_sp.136 = type { %class.GrGpuBuffer* }
%class.GrGpuBuffer = type { %class.GrGpuResource, %class.GrBuffer, i8*, i64, i32, i32 }
%class.GrBuffer = type { i32 (...)** }
%"class.GrContextOptions::PersistentCache" = type { i32 (...)** }
%"class.GrContextOptions::ShaderErrorHandler" = type { i32 (...)** }
%"class.std::__1::unique_ptr.140" = type { %"class.std::__1::__compressed_pair.141" }
%"class.std::__1::__compressed_pair.141" = type { %"struct.std::__1::__compressed_pair_elem.142" }
%"struct.std::__1::__compressed_pair_elem.142" = type { %class.GrClientMappedBufferManager* }
%class.GrClientMappedBufferManager = type opaque
%"class.std::__1::unique_ptr.146" = type { %"class.std::__1::__compressed_pair.147" }
%"class.std::__1::__compressed_pair.147" = type { %"struct.std::__1::__compressed_pair_elem.148" }
%"struct.std::__1::__compressed_pair_elem.148" = type { %class.GrAtlasManager* }
%class.GrAtlasManager = type opaque
%"class.std::__1::unique_ptr.152" = type { %"class.std::__1::__compressed_pair.153" }
%"class.std::__1::__compressed_pair.153" = type { %"struct.std::__1::__compressed_pair_elem.154" }
%"struct.std::__1::__compressed_pair_elem.154" = type { %class.GrSmallPathAtlasMgr* }
%class.GrSmallPathAtlasMgr = type opaque
%"class.SkImage::AsyncReadResult" = type { i32 (...)** }
%class.SkBitmap = type { %class.sk_sp.164, %class.SkPixmap, %class.sk_sp.165 }
%class.sk_sp.164 = type { %class.SkPixelRef* }
%class.SkPixelRef = type opaque
%class.sk_sp.167 = type { %class.SkShader* }
%class.SkShader = type { %class.SkFlattenable.base, [4 x i8] }
%class.SkFlattenable.base = type { %class.SkRefCnt.base }
%class.sk_sp.168 = type { %class.SkImage* }
%class.SkRefCntBase = type <{ i32 (...)**, %"struct.std::__1::atomic", [4 x i8] }>
%class.SkImageGenerator = type <{ i32 (...)**, %struct.SkImageInfo, i32, [4 x i8] }>
%class.GrBackendTexture = type { i8, i32, i32, i8, i32, %union.anon.175, %class.sk_sp.177 }
%union.anon.175 = type { %class.GrGLBackendTextureInfo, [120 x i8] }
%class.GrGLBackendTextureInfo = type { %struct.GrGLTextureInfo, %class.GrGLTextureParameters* }
%struct.GrGLTextureInfo = type { i32, i32, i32 }
%class.GrGLTextureParameters = type { %class.SkNVRefCnt.176, %"struct.GrGLTextureParameters::SamplerOverriddenState", %"struct.GrGLTextureParameters::NonsamplerState", i64 }
%class.SkNVRefCnt.176 = type { %"struct.std::__1::atomic" }
%"struct.GrGLTextureParameters::SamplerOverriddenState" = type <{ i32, i32, i32, i32, float, float, i8, [3 x i8] }>
%"struct.GrGLTextureParameters::NonsamplerState" = type <{ i32, i32, i8, [3 x i8] }>
%class.sk_sp.177 = type { %class.GrBackendSurfaceMutableStateImpl* }
%class.GrBackendSurfaceMutableStateImpl = type opaque
%"class.std::__1::tuple" = type { %"struct.std::__1::__tuple_impl" }
%"struct.std::__1::__tuple_impl" = type { %"class.std::__1::__tuple_leaf", %"class.std::__1::__tuple_leaf.188", [4 x i8] }
%"class.std::__1::__tuple_leaf" = type { %class.GrSurfaceProxyView }
%class.GrSurfaceProxyView = type <{ %class.sk_sp.178, i32, %class.GrSwizzle, [2 x i8] }>
%class.sk_sp.178 = type { %class.GrSurfaceProxy* }
%class.GrSurfaceProxy = type { i32 (...)**, %class.SkNVRefCnt.179, %class.sk_sp.180, i32, [4 x i8], %class.GrBackendFormat, %struct.SkISize, i32, i8, i32, %"class.GrSurfaceProxy::UniqueID", %"class.std::__1::function", i8, i8, i8, i8, i32, %"struct.std::__1::atomic.183" }
%class.SkNVRefCnt.179 = type { %"struct.std::__1::atomic" }
%class.sk_sp.180 = type { %class.GrSurface* }
%class.GrBackendFormat = type { i32, i8, %union.anon.181, i32, [4 x i8] }
%union.anon.181 = type { %struct.anon }
%struct.anon = type { i32, [4 x i8], %struct.GrVkYcbcrConversionInfo }
%struct.GrVkYcbcrConversionInfo = type <{ i32, [4 x i8], i64, i32, i32, i32, i32, i32, i32, i32, [4 x i8] }>
%"class.std::__1::function" = type { %"class.std::__1::__function::__policy_func" }
%"class.std::__1::__function::__policy_func" = type { %"union.std::__1::__function::__policy_storage", %"struct.std::__1::__function::__policy_invoker", %"struct.std::__1::__function::__policy"* }
%"union.std::__1::__function::__policy_storage" = type { i8*, [8 x i8] }
%"struct.std::__1::__function::__policy_invoker" = type { void (%"struct.GrSurfaceProxy::LazyCallbackResult"*, %"union.std::__1::__function::__policy_storage"*, %class.GrResourceProvider*, %"struct.GrSurfaceProxy::LazySurfaceDesc"*)* }
%"struct.GrSurfaceProxy::LazyCallbackResult" = type <{ %class.sk_sp.180, i32, i8, [3 x i8] }>
%"struct.GrSurfaceProxy::LazySurfaceDesc" = type <{ %struct.SkISize, i32, i8, i8, [2 x i8], i32, [4 x i8], %class.GrBackendFormat*, i8, i8, [6 x i8] }>
%"struct.std::__1::__function::__policy" = type { i8* (i8*)*, void (i8*)*, i8, %"class.std::type_info"* }
%"class.std::type_info" = type { i32 (...)**, i8* }
%"struct.std::__1::atomic.183" = type { %"struct.std::__1::__atomic_base.184" }
%"struct.std::__1::__atomic_base.184" = type { %"struct.std::__1::__atomic_base.185" }
%"struct.std::__1::__atomic_base.185" = type { %"struct.std::__1::__cxx_atomic_impl.186" }
%"struct.std::__1::__cxx_atomic_impl.186" = type { %"struct.std::__1::__cxx_atomic_base_impl.187" }
%"struct.std::__1::__cxx_atomic_base_impl.187" = type { i64 }
%class.GrSwizzle = type { i16 }
%"class.std::__1::__tuple_leaf.188" = type { i32 }
%class.GrFragmentProcessor = type <{ %class.GrProcessor, %class.SkSTArray, %class.GrFragmentProcessor*, i32, %"struct.SkSL::SampleUsage", [4 x i8] }>
%class.GrProcessor = type { i32 (...)**, i32, i32 }
%class.SkSTArray = type { %class.SkAlignedSTStorage, %class.SkTArray.192 }
%class.SkAlignedSTStorage = type { [8 x i8] }
%class.SkTArray.192 = type { %"class.std::__1::unique_ptr.189"*, i64 }
%"class.std::__1::unique_ptr.189" = type { %"class.std::__1::__compressed_pair.190" }
%"class.std::__1::__compressed_pair.190" = type { %"struct.std::__1::__compressed_pair_elem.191" }
%"struct.std::__1::__compressed_pair_elem.191" = type { %class.GrFragmentProcessor* }
%"struct.SkSL::SampleUsage" = type <{ i32, i8, [3 x i8] }>
%class.GrTextureProxy = type { i32 (...)**, i8, i32, i8, i8, %class.GrUniqueKey, %class.GrProxyProvider*, %"class.std::__1::unique_ptr.196", %class.GrSurfaceProxy }
%"class.std::__1::unique_ptr.196" = type { %"class.std::__1::__compressed_pair.197" }
%"class.std::__1::__compressed_pair.197" = type { %"struct.std::__1::__compressed_pair_elem.198" }
%"struct.std::__1::__compressed_pair_elem.198" = type { %class.GrDeferredProxyUploader* }
%class.GrDeferredProxyUploader = type opaque
%class.sk_sp.202 = type { %class.GrTextureProxy* }
%class.sk_sp.209 = type { %class.SkPicture* }
%class.SkPicture = type <{ %class.SkRefCnt.base, i32, %"struct.std::__1::atomic.6", [7 x i8] }>
%class.SkPaint = type <{ %class.sk_sp.203, %class.sk_sp.167, %class.sk_sp.204, %class.sk_sp.205, %class.sk_sp.206, %struct.SkRGBA4f, float, float, %union.anon.207, [4 x i8] }>
%class.sk_sp.203 = type { %class.SkPathEffect* }
%class.SkPathEffect = type { %class.SkFlattenable.base, [4 x i8] }
%class.sk_sp.204 = type { %class.SkMaskFilter* }
%class.SkMaskFilter = type { %class.SkFlattenable.base, [4 x i8] }
%class.sk_sp.205 = type { %class.SkColorFilter* }
%class.SkColorFilter = type { %class.SkFlattenable.base, [4 x i8] }
%class.sk_sp.206 = type { %class.SkImageFilter* }
%class.SkImageFilter = type { %class.SkFlattenable.base, [4 x i8] }
%struct.SkRGBA4f = type { float, float, float, float }
%union.anon.207 = type { %struct.anon.208 }
%struct.anon.208 = type { i32 }
%"class.skif::Context" = type { %"class.skif::Mapping", %"class.skif::LayerSpace", %class.SkImageFilterCache*, i32, %class.SkColorSpace*, %"class.skif::FilterResult" }
%"class.skif::FilterResult.213" = type { %class.sk_sp.210, %"class.skif::LayerSpace.212" }
%class.SkImageFilter_Base = type <{ %class.SkImageFilter.base, [4 x i8], %class.SkAutoSTArray, i8, [3 x i8], %"class.SkImageFilter_Base::CropRect", i32, [4 x i8] }>
%class.SkImageFilter.base = type { %class.SkFlattenable.base }
%class.SkAutoSTArray = type { i32, %class.sk_sp.206*, [16 x i8] }
%"class.SkImageFilter_Base::CropRect" = type { %struct.SkRect, i32 }
%class.SkCachedData = type <{ i32 (...)**, %class.SkMutex, %union.anon.166, i8*, i64, i32, i32, i8, i8, [6 x i8] }>
%class.SkReadBuffer = type <{ i8*, i8*, i8*, %class.SkTHashMap.214, i32, [4 x i8], %class.sk_sp.223*, i32, [4 x i8], void (%class.sk_sp.224*, %class.SkReadBuffer*)**, i32, [4 x i8], %struct.SkDeserialProcs, i8, [7 x i8] }>
%class.SkTHashMap.214 = type { %class.SkTHashTable.215 }
%class.SkTHashTable.215 = type { i32, i32, %class.SkAutoTArray.216 }
%class.SkAutoTArray.216 = type { %"class.std::__1::unique_ptr.217" }
%"class.std::__1::unique_ptr.217" = type { %"class.std::__1::__compressed_pair.218" }
%"class.std::__1::__compressed_pair.218" = type { %"struct.std::__1::__compressed_pair_elem.219" }
%"struct.std::__1::__compressed_pair_elem.219" = type { %"struct.SkTHashTable<SkTHashMap<unsigned int, sk_sp<SkFlattenable> (*)(SkReadBuffer &), SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, sk_sp<SkFlattenable> (*)(SkReadBuffer &), SkGoodHash>::Pair>::Slot"* }
%"struct.SkTHashTable<SkTHashMap<unsigned int, sk_sp<SkFlattenable> (*)(SkReadBuffer &), SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, sk_sp<SkFlattenable> (*)(SkReadBuffer &), SkGoodHash>::Pair>::Slot" = type <{ %"struct.SkTHashMap<unsigned int, sk_sp<SkFlattenable> (*)(SkReadBuffer &), SkGoodHash>::Pair", i32, [4 x i8] }>
%"struct.SkTHashMap<unsigned int, sk_sp<SkFlattenable> (*)(SkReadBuffer &), SkGoodHash>::Pair" = type { %"struct.std::__1::pair.237" }
%"struct.std::__1::pair.237" = type { i32, void (%class.sk_sp.224*, %class.SkReadBuffer*)* }
%class.sk_sp.224 = type { %class.SkFlattenable* }
%class.SkFlattenable = type { %class.SkRefCnt.base, [4 x i8] }
%class.sk_sp.223 = type { %class.SkTypeface* }
%class.SkTypeface = type <{ %class.SkWeakRefCnt, i32, %class.SkFontStyle, %struct.SkRect, %class.SkOnce, i8, [6 x i8] }>
%class.SkWeakRefCnt = type { %class.SkRefCnt.base, %"struct.std::__1::atomic" }
%class.SkFontStyle = type { i32 }
%struct.SkDeserialProcs = type { void (%class.sk_sp.209*, i8*, i64, i8*)*, i8*, void (%class.sk_sp.168*, i8*, i64, i8*)*, i8*, void (%class.sk_sp.223*, i8*, i64, i8*)*, i8* }
%class.SkWriteBuffer = type { i32 (...)**, %struct.SkSerialProcs }
%struct.SkSerialProcs = type { void (%class.sk_sp.97*, %class.SkPicture*, i8*)*, i8*, void (%class.sk_sp.97*, %class.SkImage*, i8*)*, i8*, void (%class.sk_sp.97*, %class.SkTypeface*, i8*)*, i8* }

$_ZNK12SkRefCntBase16internal_disposeEv = comdat any

$_ZNK12SkImage_Base12onPeekPixelsEP8SkPixmap = comdat any

$_ZNK12SkImage_Base12onPeekBitmapEv = comdat any

$_ZNK12SkImage_Base10onPeekMipsEv = comdat any

$_ZNK12SkImage_Base7contextEv = comdat any

$_ZN12SkImage_Base7onFlushEP15GrDirectContextRK11GrFlushInfo = comdat any

$_ZNK12SkImage_Base6isYUVAEv = comdat any

$_ZN12SkImage_Base26generatingSurfaceIsDeletedEv = comdat any

$_ZNK12SkImage_Base14onPinAsTextureEP18GrRecordingContext = comdat any

$_ZNK12SkImage_Base16onUnpinAsTextureEP18GrRecordingContext = comdat any

$_ZNK12SkImage_Base17isPinnedOnContextEP18GrRecordingContext = comdat any

$_ZNK12SkImage_Base12onRefEncodedEv = comdat any

$_ZNK12SkImage_Base17onIsLazyGeneratedEv = comdat any

$_ZNK12SkImage_Base17onIsTextureBackedEv = comdat any

$_ZNK12SkImage_Base13onTextureSizeEv = comdat any

$_ZNK12SkImage_Base24notifyAddedToRasterCacheEv = comdat any

$_ZNK12SkImage_Base17onMakeWithMipmapsE5sk_spI8SkMipmapE = comdat any

$_ZN7SkImageD2Ev = comdat any

$_ZN7SkImageD0Ev = comdat any

$_ZN9GrSwizzleC2EPKc = comdat any

$_ZTV7SkImage = comdat any

$_ZN15GrTextureEffect14kDefaultBorderE = comdat any

@_ZTV7SkImage = linkonce_odr hidden unnamed_addr constant { [5 x i8*] } { [5 x i8*] [i8* null, i8* null, i8* bitcast (void (%class.SkImage*)* @_ZN7SkImageD2Ev to i8*), i8* bitcast (void (%class.SkImage*)* @_ZN7SkImageD0Ev to i8*), i8* bitcast (void (%class.SkRefCntBase*)* @_ZNK12SkRefCntBase16internal_disposeEv to i8*)] }, comdat, align 8
@.ref.tmp = private constant %struct.GrFlushInfo zeroinitializer, align 8
@_ZTV12SkImage_Base = hidden unnamed_addr constant { [34 x i8*] } { [34 x i8*] [i8* null, i8* null, i8* bitcast (void (%class.SkImage_Base*)* @_ZN12SkImage_BaseD2Ev to i8*), i8* bitcast (void (%class.SkImage_Base*)* @_ZN12SkImage_BaseD0Ev to i8*), i8* bitcast (void (%class.SkRefCntBase*)* @_ZNK12SkRefCntBase16internal_disposeEv to i8*), i8* bitcast (i1 (%class.SkImage_Base*, %class.SkPixmap*)* @_ZNK12SkImage_Base12onPeekPixelsEP8SkPixmap to i8*), i8* bitcast (%class.SkBitmap* (%class.SkImage_Base*)* @_ZNK12SkImage_Base12onPeekBitmapEv to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (%class.SkMipmap* (%class.SkImage_Base*)* @_ZNK12SkImage_Base10onPeekMipsEv to i8*), i8* bitcast (void (%class.SkImage_Base*, %struct.SkImageInfo*, %struct.SkIRect*, i1, i32, void (i8*, %"class.SkImage::AsyncReadResult"*)*, i8*)* @_ZN12SkImage_Base27onAsyncRescaleAndReadPixelsERK11SkImageInfoRK7SkIRectN7SkImage12RescaleGammaENS6_11RescaleModeEPFvPvNSt3__110unique_ptrIKNS6_15AsyncReadResultENSA_14default_deleteISD_EEEEES9_ to i8*), i8* bitcast (void (%class.SkImage_Base*, i32, %class.sk_sp*, %struct.SkIRect*, %struct.SkISize*, i1, i32, void (i8*, %"class.SkImage::AsyncReadResult"*)*, i8*)* @_ZN12SkImage_Base33onAsyncRescaleAndReadPixelsYUV420E15SkYUVColorSpace5sk_spI12SkColorSpaceERK7SkIRectRK7SkISizeN7SkImage12RescaleGammaENSA_11RescaleModeEPFvPvNSt3__110unique_ptrIKNSA_15AsyncReadResultENSE_14default_deleteISH_EEEEESD_ to i8*), i8* bitcast (%class.GrImageContext* (%class.SkImage_Base*)* @_ZNK12SkImage_Base7contextEv to i8*), i8* bitcast (i1 (%class.SkImage_Base*, %class.GrDirectContext*, %struct.GrFlushInfo*)* @_ZN12SkImage_Base7onFlushEP15GrDirectContextRK11GrFlushInfo to i8*), i8* bitcast (i1 (%class.SkImage_Base*)* @_ZNK12SkImage_Base6isYUVAEv to i8*), i8* bitcast (void (%class.SkImage_Base*)* @_ZN12SkImage_Base26generatingSurfaceIsDeletedEv to i8*), i8* bitcast (i1 (%class.SkImage_Base*, %class.GrRecordingContext*)* @_ZNK12SkImage_Base14onPinAsTextureEP18GrRecordingContext to i8*), i8* bitcast (void (%class.SkImage_Base*, %class.GrRecordingContext*)* @_ZNK12SkImage_Base16onUnpinAsTextureEP18GrRecordingContext to i8*), i8* bitcast (i1 (%class.SkImage_Base*, %class.GrRecordingContext*)* @_ZNK12SkImage_Base17isPinnedOnContextEP18GrRecordingContext to i8*), i8* bitcast (void (%class.GrBackendTexture*, %class.SkImage_Base*, i1, i32*)* @_ZNK12SkImage_Base19onGetBackendTextureEbP15GrSurfaceOrigin to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void (%class.sk_sp.97*, %class.SkImage_Base*)* @_ZNK12SkImage_Base12onRefEncodedEv to i8*), i8* bitcast (i1 (%class.SkImage_Base*, %class.GrDirectContext*, %class.SkBitmap*)* @_ZNK12SkImage_Base16onAsLegacyBitmapEP15GrDirectContextP8SkBitmap to i8*), i8* bitcast (i1 (%class.SkImage_Base*)* @_ZNK12SkImage_Base17onIsLazyGeneratedEv to i8*), i8* bitcast (i1 (%class.SkImage_Base*)* @_ZNK12SkImage_Base17onIsTextureBackedEv to i8*), i8* bitcast (i64 (%class.SkImage_Base*)* @_ZNK12SkImage_Base13onTextureSizeEv to i8*), i8* bitcast (void (%class.SkImage_Base*)* @_ZNK12SkImage_Base24notifyAddedToRasterCacheEv to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void (%class.sk_sp.168*, %class.SkImage_Base*, %class.sk_sp.165*)* @_ZNK12SkImage_Base17onMakeWithMipmapsE5sk_spI8SkMipmapE to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*)] }, align 8
@_ZN15GrTextureEffect14kDefaultBorderE = linkonce_odr hidden constant [4 x float] zeroinitializer, comdat, align 16
@_ZZN12SkImage_Base29FindOrMakeCachedMipmappedViewEP18GrRecordingContext18GrSurfaceProxyViewjE16kMipmappedDomain = internal global i32 0, align 4
@_ZGVZN12SkImage_Base29FindOrMakeCachedMipmappedViewEP18GrRecordingContext18GrSurfaceProxyViewjE16kMipmappedDomain = internal global i64 0, align 8
@__const._ZNK7SkImage14makeWithFilterEP18GrRecordingContextPK13SkImageFilterRK7SkIRectS7_PS5_P8SkIPoint.context = private unnamed_addr constant { %"class.skif::Mapping", %"class.skif::LayerSpace", %class.SkImageFilterCache*, i32, [4 x i8], %class.SkColorSpace*, %"class.skif::FilterResult" } { %"class.skif::Mapping" { %class.SkMatrix { [9 x float] [float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000], i32 -1431655766 }, %class.SkMatrix { [9 x float] [float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000], i32 -1431655766 } }, %"class.skif::LayerSpace" { %struct.SkIRect { i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766 } }, %class.SkImageFilterCache* inttoptr (i64 -6148914691236517206 to %class.SkImageFilterCache*), i32 -1431655766, [4 x i8] c"\AA\AA\AA\AA", %class.SkColorSpace* inttoptr (i64 -6148914691236517206 to %class.SkColorSpace*), %"class.skif::FilterResult" { %class.sk_sp.210 { %class.SkSpecialImage* inttoptr (i64 -6148914691236517206 to %class.SkSpecialImage*) }, %"class.skif::LayerSpace.212" { %struct.SkIPoint { i32 -1431655766, i32 -1431655766 } } } }, align 8
@.str = private unnamed_addr constant [5 x i8] c"rgba\00", align 1

@_ZN7SkImageC1ERK11SkImageInfoj = hidden unnamed_addr alias void (%class.SkImage*, %struct.SkImageInfo*, i32), void (%class.SkImage*, %struct.SkImageInfo*, i32)* @_ZN7SkImageC2ERK11SkImageInfoj
@_ZN12SkImage_BaseD1Ev = hidden unnamed_addr alias void (%class.SkImage_Base*), void (%class.SkImage_Base*)* @_ZN12SkImage_BaseD2Ev
@_ZN15SkMipmapBuilderC1ERK11SkImageInfo = hidden unnamed_addr alias void (%class.SkMipmapBuilder*, %struct.SkImageInfo*), void (%class.SkMipmapBuilder*, %struct.SkImageInfo*)* @_ZN15SkMipmapBuilderC2ERK11SkImageInfo
@_ZN15SkMipmapBuilderD1Ev = hidden unnamed_addr alias void (%class.SkMipmapBuilder*), void (%class.SkMipmapBuilder*)* @_ZN15SkMipmapBuilderD2Ev
@_ZN17SkSamplingOptionsC1E15SkFilterQualityNS_14MediumBehaviorE = hidden unnamed_addr alias void (%struct.SkSamplingOptions*, i32, i32), void (%struct.SkSamplingOptions*, i32, i32)* @_ZN17SkSamplingOptionsC2E15SkFilterQualityNS_14MediumBehaviorE

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN7SkImageC2ERK11SkImageInfoj(%class.SkImage* nocapture, %struct.SkImageInfo* nocapture readonly dereferenceable(24), i32) unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %class.SkImage, %class.SkImage* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  store i32 1, i32* %4, align 4
  %5 = getelementptr inbounds %class.SkImage, %class.SkImage* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTV7SkImage, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %5, align 8
  %6 = getelementptr inbounds %class.SkImage, %class.SkImage* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  %7 = getelementptr inbounds %struct.SkImageInfo, %struct.SkImageInfo* %1, i64 0, i32 0, i32 0, i32 0
  %8 = load %class.SkColorSpace*, %class.SkColorSpace** %7, align 8
  %9 = icmp eq %class.SkColorSpace* %8, null
  br i1 %9, label %13, label %10

10:                                               ; preds = %3
  %11 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %12 = atomicrmw add i32* %11, i32 1 monotonic
  br label %13

13:                                               ; preds = %3, %10
  store %class.SkColorSpace* %8, %class.SkColorSpace** %6, align 8
  %14 = getelementptr inbounds %class.SkImage, %class.SkImage* %0, i64 0, i32 2, i32 0, i32 1
  %15 = getelementptr inbounds %struct.SkImageInfo, %struct.SkImageInfo* %1, i64 0, i32 0, i32 1
  %16 = bitcast i32* %15 to i64*
  %17 = bitcast i32* %14 to i64*
  %18 = load i64, i64* %16, align 8
  store i64 %18, i64* %17, align 8
  %19 = getelementptr inbounds %class.SkImage, %class.SkImage* %0, i64 0, i32 2, i32 1
  %20 = getelementptr inbounds %struct.SkImageInfo, %struct.SkImageInfo* %1, i64 0, i32 1
  %21 = bitcast %struct.SkISize* %20 to i64*
  %22 = bitcast %struct.SkISize* %19 to i64*
  %23 = load i64, i64* %21, align 8
  store i64 %23, i64* %22, align 8
  %24 = getelementptr inbounds %class.SkImage, %class.SkImage* %0, i64 0, i32 3
  %25 = icmp eq i32 %2, 0
  br i1 %25, label %26, label %28

26:                                               ; preds = %13
  %27 = tail call i32 @_ZN8SkNextID7ImageIDEv() #13
  br label %28

28:                                               ; preds = %13, %26
  %29 = phi i32 [ %27, %26 ], [ %2, %13 ]
  store i32 %29, i32* %24, align 8
  ret void
}

declare i32 @_ZN8SkNextID7ImageIDEv() local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK7SkImage10peekPixelsEP8SkPixmap(%class.SkImage*, %class.SkPixmap*) local_unnamed_addr #0 align 2 {
  %3 = alloca %class.SkPixmap, align 8
  %4 = bitcast %class.SkPixmap* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %4) #13
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %4, i8 0, i64 40, i1 false) #13
  %5 = icmp eq %class.SkPixmap* %1, null
  %6 = select i1 %5, %class.SkPixmap* %3, %class.SkPixmap* %1
  %7 = bitcast %class.SkImage* %0 to %class.SkImage_Base*
  %8 = bitcast %class.SkImage* %0 to i1 (%class.SkImage_Base*, %class.SkPixmap*)***
  %9 = load i1 (%class.SkImage_Base*, %class.SkPixmap*)**, i1 (%class.SkImage_Base*, %class.SkPixmap*)*** %8, align 8
  %10 = getelementptr inbounds i1 (%class.SkImage_Base*, %class.SkPixmap*)*, i1 (%class.SkImage_Base*, %class.SkPixmap*)** %9, i64 3
  %11 = load i1 (%class.SkImage_Base*, %class.SkPixmap*)*, i1 (%class.SkImage_Base*, %class.SkPixmap*)** %10, align 8
  %12 = call zeroext i1 %11(%class.SkImage_Base* %7, %class.SkPixmap* %6) #13
  %13 = getelementptr inbounds %class.SkPixmap, %class.SkPixmap* %3, i64 0, i32 2, i32 0, i32 0, i32 0
  %14 = load %class.SkColorSpace*, %class.SkColorSpace** %13, align 8
  %15 = icmp eq %class.SkColorSpace* %14, null
  br i1 %15, label %22, label %16

16:                                               ; preds = %2
  %17 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %14, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %18 = atomicrmw add i32* %17, i32 -1 acq_rel
  %19 = icmp eq i32 %18, 1
  br i1 %19, label %20, label %22

20:                                               ; preds = %16
  %21 = bitcast %class.SkColorSpace* %14 to i8*
  call void @_ZdlPv(i8* %21) #14
  br label %22

22:                                               ; preds = %2, %16, %20
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %4) #13
  ret i1 %12
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK7SkImage10readPixelsEP15GrDirectContextRK11SkImageInfoPvmiiNS_11CachingHintE(%class.SkImage*, %class.GrDirectContext*, %struct.SkImageInfo* dereferenceable(24), i8*, i64, i32, i32, i32) local_unnamed_addr #0 align 2 {
  %9 = bitcast %class.SkImage* %0 to %class.SkImage_Base*
  %10 = bitcast %class.SkImage* %0 to i1 (%class.SkImage_Base*, %class.GrDirectContext*, %struct.SkImageInfo*, i8*, i64, i32, i32, i32)***
  %11 = load i1 (%class.SkImage_Base*, %class.GrDirectContext*, %struct.SkImageInfo*, i8*, i64, i32, i32, i32)**, i1 (%class.SkImage_Base*, %class.GrDirectContext*, %struct.SkImageInfo*, i8*, i64, i32, i32, i32)*** %10, align 8
  %12 = getelementptr inbounds i1 (%class.SkImage_Base*, %class.GrDirectContext*, %struct.SkImageInfo*, i8*, i64, i32, i32, i32)*, i1 (%class.SkImage_Base*, %class.GrDirectContext*, %struct.SkImageInfo*, i8*, i64, i32, i32, i32)** %11, i64 5
  %13 = load i1 (%class.SkImage_Base*, %class.GrDirectContext*, %struct.SkImageInfo*, i8*, i64, i32, i32, i32)*, i1 (%class.SkImage_Base*, %class.GrDirectContext*, %struct.SkImageInfo*, i8*, i64, i32, i32, i32)** %12, align 8
  %14 = tail call zeroext i1 %13(%class.SkImage_Base* %9, %class.GrDirectContext* %1, %struct.SkImageInfo* dereferenceable(24) %2, i8* %3, i64 %4, i32 %5, i32 %6, i32 %7) #13
  ret i1 %14
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK7SkImage10readPixelsERK11SkImageInfoPvmiiNS_11CachingHintE(%class.SkImage*, %struct.SkImageInfo* dereferenceable(24), i8*, i64, i32, i32, i32) local_unnamed_addr #0 align 2 {
  %8 = bitcast %class.SkImage* %0 to %class.SkImage_Base*
  %9 = bitcast %class.SkImage* %0 to %class.GrImageContext* (%class.SkImage_Base*)***
  %10 = load %class.GrImageContext* (%class.SkImage_Base*)**, %class.GrImageContext* (%class.SkImage_Base*)*** %9, align 8
  %11 = getelementptr inbounds %class.GrImageContext* (%class.SkImage_Base*)*, %class.GrImageContext* (%class.SkImage_Base*)** %10, i64 10
  %12 = load %class.GrImageContext* (%class.SkImage_Base*)*, %class.GrImageContext* (%class.SkImage_Base*)** %11, align 8
  %13 = tail call %class.GrImageContext* %12(%class.SkImage_Base* %8) #13
  %14 = icmp eq %class.GrImageContext* %13, null
  br i1 %14, label %22, label %15

15:                                               ; preds = %7
  %16 = getelementptr inbounds %class.GrImageContext, %class.GrImageContext* %13, i64 0, i32 0
  %17 = bitcast %class.GrImageContext* %13 to %class.GrDirectContext* (%class.GrContext_Base*)***
  %18 = load %class.GrDirectContext* (%class.GrContext_Base*)**, %class.GrDirectContext* (%class.GrContext_Base*)*** %17, align 8
  %19 = getelementptr inbounds %class.GrDirectContext* (%class.GrContext_Base*)*, %class.GrDirectContext* (%class.GrContext_Base*)** %18, i64 3
  %20 = load %class.GrDirectContext* (%class.GrContext_Base*)*, %class.GrDirectContext* (%class.GrContext_Base*)** %19, align 8
  %21 = tail call %class.GrDirectContext* %20(%class.GrContext_Base* nonnull %16) #13
  br label %22

22:                                               ; preds = %7, %15
  %23 = phi %class.GrDirectContext* [ %21, %15 ], [ null, %7 ]
  %24 = bitcast %class.SkImage* %0 to i1 (%class.SkImage_Base*, %class.GrDirectContext*, %struct.SkImageInfo*, i8*, i64, i32, i32, i32)***
  %25 = load i1 (%class.SkImage_Base*, %class.GrDirectContext*, %struct.SkImageInfo*, i8*, i64, i32, i32, i32)**, i1 (%class.SkImage_Base*, %class.GrDirectContext*, %struct.SkImageInfo*, i8*, i64, i32, i32, i32)*** %24, align 8
  %26 = getelementptr inbounds i1 (%class.SkImage_Base*, %class.GrDirectContext*, %struct.SkImageInfo*, i8*, i64, i32, i32, i32)*, i1 (%class.SkImage_Base*, %class.GrDirectContext*, %struct.SkImageInfo*, i8*, i64, i32, i32, i32)** %25, i64 5
  %27 = load i1 (%class.SkImage_Base*, %class.GrDirectContext*, %struct.SkImageInfo*, i8*, i64, i32, i32, i32)*, i1 (%class.SkImage_Base*, %class.GrDirectContext*, %struct.SkImageInfo*, i8*, i64, i32, i32, i32)** %26, align 8
  %28 = tail call zeroext i1 %27(%class.SkImage_Base* %8, %class.GrDirectContext* %23, %struct.SkImageInfo* dereferenceable(24) %1, i8* %2, i64 %3, i32 %4, i32 %5, i32 %6) #13
  ret i1 %28
}

; Function Attrs: nounwind ssp uwtable
define hidden %class.GrDirectContext* @_ZNK12SkImage_Base13directContextEv(%class.SkImage_Base*) local_unnamed_addr #0 align 2 {
  %2 = bitcast %class.SkImage_Base* %0 to %class.GrImageContext* (%class.SkImage_Base*)***
  %3 = load %class.GrImageContext* (%class.SkImage_Base*)**, %class.GrImageContext* (%class.SkImage_Base*)*** %2, align 8
  %4 = getelementptr inbounds %class.GrImageContext* (%class.SkImage_Base*)*, %class.GrImageContext* (%class.SkImage_Base*)** %3, i64 10
  %5 = load %class.GrImageContext* (%class.SkImage_Base*)*, %class.GrImageContext* (%class.SkImage_Base*)** %4, align 8
  %6 = tail call %class.GrImageContext* %5(%class.SkImage_Base* %0) #13
  %7 = icmp eq %class.GrImageContext* %6, null
  br i1 %7, label %15, label %8

8:                                                ; preds = %1
  %9 = getelementptr inbounds %class.GrImageContext, %class.GrImageContext* %6, i64 0, i32 0
  %10 = bitcast %class.GrImageContext* %6 to %class.GrDirectContext* (%class.GrContext_Base*)***
  %11 = load %class.GrDirectContext* (%class.GrContext_Base*)**, %class.GrDirectContext* (%class.GrContext_Base*)*** %10, align 8
  %12 = getelementptr inbounds %class.GrDirectContext* (%class.GrContext_Base*)*, %class.GrDirectContext* (%class.GrContext_Base*)** %11, i64 3
  %13 = load %class.GrDirectContext* (%class.GrContext_Base*)*, %class.GrDirectContext* (%class.GrContext_Base*)** %12, align 8
  %14 = tail call %class.GrDirectContext* %13(%class.GrContext_Base* nonnull %9) #13
  br label %15

15:                                               ; preds = %1, %8
  %16 = phi %class.GrDirectContext* [ %14, %8 ], [ null, %1 ]
  ret %class.GrDirectContext* %16
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN7SkImage25asyncRescaleAndReadPixelsERK11SkImageInfoRK7SkIRectNS_12RescaleGammaENS_11RescaleModeEPFvPvNSt3__110unique_ptrIKNS_15AsyncReadResultENS9_14default_deleteISC_EEEEES8_(%class.SkImage*, %struct.SkImageInfo* dereferenceable(24), %struct.SkIRect* dereferenceable(16), i1 zeroext, i32, void (i8*, %"class.SkImage::AsyncReadResult"*)*, i8*) local_unnamed_addr #0 align 2 {
  %8 = getelementptr inbounds %class.SkImage, %class.SkImage* %0, i64 0, i32 2, i32 1, i32 0
  %9 = load i32, i32* %8, align 4
  %10 = getelementptr inbounds %class.SkImage, %class.SkImage* %0, i64 0, i32 2, i32 1, i32 1
  %11 = load i32, i32* %10, align 4
  %12 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %2, i64 0, i32 2
  %13 = load i32, i32* %12, align 4
  %14 = sext i32 %13 to i64
  %15 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %2, i64 0, i32 0
  %16 = load i32, i32* %15, align 4
  %17 = sext i32 %16 to i64
  %18 = sub nsw i64 %14, %17
  %19 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %2, i64 0, i32 3
  %20 = load i32, i32* %19, align 4
  %21 = sext i32 %20 to i64
  %22 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %2, i64 0, i32 1
  %23 = load i32, i32* %22, align 4
  %24 = sext i32 %23 to i64
  %25 = sub nsw i64 %21, %24
  %26 = icmp slt i64 %18, 1
  %27 = icmp slt i64 %25, 1
  %28 = or i1 %26, %27
  br i1 %28, label %69, label %29

29:                                               ; preds = %7
  %30 = or i64 %25, %18
  %31 = add nsw i64 %30, 2147483648
  %32 = icmp ugt i64 %31, 4294967295
  br i1 %32, label %69, label %33

33:                                               ; preds = %29
  %34 = icmp slt i32 %9, 1
  %35 = icmp slt i32 %11, 1
  %36 = or i1 %34, %35
  br i1 %36, label %69, label %37

37:                                               ; preds = %33
  %38 = or i32 %11, %9
  %39 = sext i32 %38 to i64
  %40 = add nsw i64 %39, 2147483648
  %41 = icmp ugt i64 %40, 4294967295
  %42 = or i32 %23, %16
  %43 = icmp slt i32 %42, 0
  %44 = or i1 %41, %43
  %45 = icmp slt i32 %9, %13
  %46 = or i1 %45, %44
  %47 = icmp sge i32 %11, %20
  %48 = xor i1 %46, true
  %49 = and i1 %47, %48
  br i1 %49, label %50, label %69

50:                                               ; preds = %37
  %51 = getelementptr inbounds %struct.SkImageInfo, %struct.SkImageInfo* %1, i64 0, i32 1, i32 0
  %52 = load i32, i32* %51, align 4
  %53 = icmp slt i32 %52, 1
  br i1 %53, label %69, label %54

54:                                               ; preds = %50
  %55 = getelementptr inbounds %struct.SkImageInfo, %struct.SkImageInfo* %1, i64 0, i32 1, i32 1
  %56 = load i32, i32* %55, align 4
  %57 = icmp sgt i32 %52, 536870911
  %58 = add i32 %56, -1
  %59 = icmp ugt i32 %58, 536870910
  %60 = or i1 %57, %59
  br i1 %60, label %69, label %61

61:                                               ; preds = %54
  %62 = getelementptr inbounds %struct.SkImageInfo, %struct.SkImageInfo* %1, i64 0, i32 0, i32 1
  %63 = load i32, i32* %62, align 8
  %64 = icmp ne i32 %63, 0
  %65 = getelementptr inbounds %struct.SkImageInfo, %struct.SkImageInfo* %1, i64 0, i32 0, i32 2
  %66 = load i32, i32* %65, align 4
  %67 = icmp ne i32 %66, 0
  %68 = and i1 %64, %67
  br i1 %68, label %70, label %69

69:                                               ; preds = %50, %54, %7, %29, %33, %37, %61
  tail call void %5(i8* %6, %"class.SkImage::AsyncReadResult"* null) #13
  br label %76

70:                                               ; preds = %61
  %71 = bitcast %class.SkImage* %0 to %class.SkImage_Base*
  %72 = bitcast %class.SkImage* %0 to void (%class.SkImage_Base*, %struct.SkImageInfo*, %struct.SkIRect*, i1, i32, void (i8*, %"class.SkImage::AsyncReadResult"*)*, i8*)***
  %73 = load void (%class.SkImage_Base*, %struct.SkImageInfo*, %struct.SkIRect*, i1, i32, void (i8*, %"class.SkImage::AsyncReadResult"*)*, i8*)**, void (%class.SkImage_Base*, %struct.SkImageInfo*, %struct.SkIRect*, i1, i32, void (i8*, %"class.SkImage::AsyncReadResult"*)*, i8*)*** %72, align 8
  %74 = getelementptr inbounds void (%class.SkImage_Base*, %struct.SkImageInfo*, %struct.SkIRect*, i1, i32, void (i8*, %"class.SkImage::AsyncReadResult"*)*, i8*)*, void (%class.SkImage_Base*, %struct.SkImageInfo*, %struct.SkIRect*, i1, i32, void (i8*, %"class.SkImage::AsyncReadResult"*)*, i8*)** %73, i64 8
  %75 = load void (%class.SkImage_Base*, %struct.SkImageInfo*, %struct.SkIRect*, i1, i32, void (i8*, %"class.SkImage::AsyncReadResult"*)*, i8*)*, void (%class.SkImage_Base*, %struct.SkImageInfo*, %struct.SkIRect*, i1, i32, void (i8*, %"class.SkImage::AsyncReadResult"*)*, i8*)** %74, align 8
  tail call void %75(%class.SkImage_Base* %71, %struct.SkImageInfo* dereferenceable(24) %1, %struct.SkIRect* dereferenceable(16) %2, i1 zeroext %3, i32 %4, void (i8*, %"class.SkImage::AsyncReadResult"*)* %5, i8* %6) #13
  br label %76

76:                                               ; preds = %70, %69
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN7SkImage31asyncRescaleAndReadPixelsYUV420E15SkYUVColorSpace5sk_spI12SkColorSpaceERK7SkIRectRK7SkISizeNS_12RescaleGammaENS_11RescaleModeEPFvPvNSt3__110unique_ptrIKNS_15AsyncReadResultENSD_14default_deleteISG_EEEEESC_(%class.SkImage*, i32, %class.sk_sp* nocapture, %struct.SkIRect* dereferenceable(16), %struct.SkISize* dereferenceable(8), i1 zeroext, i32, void (i8*, %"class.SkImage::AsyncReadResult"*)*, i8*) local_unnamed_addr #0 align 2 {
  %10 = alloca %class.sk_sp, align 8
  %11 = getelementptr inbounds %class.SkImage, %class.SkImage* %0, i64 0, i32 2, i32 1, i32 0
  %12 = load i32, i32* %11, align 4
  %13 = getelementptr inbounds %class.SkImage, %class.SkImage* %0, i64 0, i32 2, i32 1, i32 1
  %14 = load i32, i32* %13, align 4
  %15 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %3, i64 0, i32 2
  %16 = load i32, i32* %15, align 4
  %17 = sext i32 %16 to i64
  %18 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %3, i64 0, i32 0
  %19 = load i32, i32* %18, align 4
  %20 = sext i32 %19 to i64
  %21 = sub nsw i64 %17, %20
  %22 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %3, i64 0, i32 3
  %23 = load i32, i32* %22, align 4
  %24 = sext i32 %23 to i64
  %25 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %3, i64 0, i32 1
  %26 = load i32, i32* %25, align 4
  %27 = sext i32 %26 to i64
  %28 = sub nsw i64 %24, %27
  %29 = icmp slt i64 %21, 1
  %30 = icmp slt i64 %28, 1
  %31 = or i1 %29, %30
  br i1 %31, label %71, label %32

32:                                               ; preds = %9
  %33 = or i64 %28, %21
  %34 = add nsw i64 %33, 2147483648
  %35 = icmp ugt i64 %34, 4294967295
  br i1 %35, label %71, label %36

36:                                               ; preds = %32
  %37 = icmp slt i32 %12, 1
  %38 = icmp slt i32 %14, 1
  %39 = or i1 %37, %38
  br i1 %39, label %71, label %40

40:                                               ; preds = %36
  %41 = or i32 %14, %12
  %42 = sext i32 %41 to i64
  %43 = add nsw i64 %42, 2147483648
  %44 = icmp ugt i64 %43, 4294967295
  %45 = or i32 %26, %19
  %46 = icmp slt i32 %45, 0
  %47 = or i1 %44, %46
  %48 = icmp slt i32 %12, %16
  %49 = or i1 %48, %47
  %50 = icmp sge i32 %14, %23
  %51 = xor i1 %49, true
  %52 = and i1 %50, %51
  br i1 %52, label %53, label %71

53:                                               ; preds = %40
  %54 = getelementptr inbounds %struct.SkISize, %struct.SkISize* %4, i64 0, i32 0
  %55 = load i32, i32* %54, align 4
  %56 = icmp eq i32 %55, 0
  br i1 %56, label %57, label %61

57:                                               ; preds = %53
  %58 = getelementptr inbounds %struct.SkISize, %struct.SkISize* %4, i64 0, i32 1
  %59 = load i32, i32* %58, align 4
  %60 = icmp eq i32 %59, 0
  br i1 %60, label %71, label %67

61:                                               ; preds = %53
  %62 = and i32 %55, 1
  %63 = icmp eq i32 %62, 0
  br i1 %63, label %64, label %71

64:                                               ; preds = %61
  %65 = getelementptr inbounds %struct.SkISize, %struct.SkISize* %4, i64 0, i32 1
  %66 = load i32, i32* %65, align 4
  br label %67

67:                                               ; preds = %64, %57
  %68 = phi i32 [ %66, %64 ], [ %59, %57 ]
  %69 = and i32 %68, 1
  %70 = icmp eq i32 %69, 0
  br i1 %70, label %72, label %71

71:                                               ; preds = %9, %32, %36, %40, %57, %61, %67
  tail call void %7(i8* %8, %"class.SkImage::AsyncReadResult"* null) #13
  br label %91

72:                                               ; preds = %67
  %73 = bitcast %class.SkImage* %0 to %class.SkImage_Base*
  %74 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %2, i64 0, i32 0
  %75 = bitcast %class.sk_sp* %2 to i64*
  %76 = load i64, i64* %75, align 8
  store %class.SkColorSpace* null, %class.SkColorSpace** %74, align 8
  %77 = bitcast %class.sk_sp* %10 to i64*
  store i64 %76, i64* %77, align 8
  %78 = bitcast %class.SkImage* %0 to void (%class.SkImage_Base*, i32, %class.sk_sp*, %struct.SkIRect*, %struct.SkISize*, i1, i32, void (i8*, %"class.SkImage::AsyncReadResult"*)*, i8*)***
  %79 = load void (%class.SkImage_Base*, i32, %class.sk_sp*, %struct.SkIRect*, %struct.SkISize*, i1, i32, void (i8*, %"class.SkImage::AsyncReadResult"*)*, i8*)**, void (%class.SkImage_Base*, i32, %class.sk_sp*, %struct.SkIRect*, %struct.SkISize*, i1, i32, void (i8*, %"class.SkImage::AsyncReadResult"*)*, i8*)*** %78, align 8
  %80 = getelementptr inbounds void (%class.SkImage_Base*, i32, %class.sk_sp*, %struct.SkIRect*, %struct.SkISize*, i1, i32, void (i8*, %"class.SkImage::AsyncReadResult"*)*, i8*)*, void (%class.SkImage_Base*, i32, %class.sk_sp*, %struct.SkIRect*, %struct.SkISize*, i1, i32, void (i8*, %"class.SkImage::AsyncReadResult"*)*, i8*)** %79, i64 9
  %81 = load void (%class.SkImage_Base*, i32, %class.sk_sp*, %struct.SkIRect*, %struct.SkISize*, i1, i32, void (i8*, %"class.SkImage::AsyncReadResult"*)*, i8*)*, void (%class.SkImage_Base*, i32, %class.sk_sp*, %struct.SkIRect*, %struct.SkISize*, i1, i32, void (i8*, %"class.SkImage::AsyncReadResult"*)*, i8*)** %80, align 8
  call void %81(%class.SkImage_Base* %73, i32 %1, %class.sk_sp* nonnull %10, %struct.SkIRect* dereferenceable(16) %3, %struct.SkISize* dereferenceable(8) %4, i1 zeroext %5, i32 %6, void (i8*, %"class.SkImage::AsyncReadResult"*)* %7, i8* %8) #13
  %82 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %10, i64 0, i32 0
  %83 = load %class.SkColorSpace*, %class.SkColorSpace** %82, align 8
  %84 = icmp eq %class.SkColorSpace* %83, null
  br i1 %84, label %91, label %85

85:                                               ; preds = %72
  %86 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %83, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %87 = atomicrmw add i32* %86, i32 -1 acq_rel
  %88 = icmp eq i32 %87, 1
  br i1 %88, label %89, label %91

89:                                               ; preds = %85
  %90 = bitcast %class.SkColorSpace* %83 to i8*
  call void @_ZdlPv(i8* %90) #14
  br label %91

91:                                               ; preds = %89, %85, %72, %71
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK7SkImage11scalePixelsERK8SkPixmapRK17SkSamplingOptionsNS_11CachingHintE(%class.SkImage*, %class.SkPixmap* dereferenceable(40), %struct.SkSamplingOptions* dereferenceable(20), i32) local_unnamed_addr #0 align 2 {
  %5 = alloca %class.SkBitmap, align 8
  %6 = alloca %class.SkPixmap, align 8
  %7 = bitcast %class.SkImage* %0 to %class.SkImage_Base*
  %8 = bitcast %class.SkImage* %0 to %class.GrImageContext* (%class.SkImage_Base*)***
  %9 = load %class.GrImageContext* (%class.SkImage_Base*)**, %class.GrImageContext* (%class.SkImage_Base*)*** %8, align 8
  %10 = getelementptr inbounds %class.GrImageContext* (%class.SkImage_Base*)*, %class.GrImageContext* (%class.SkImage_Base*)** %9, i64 10
  %11 = load %class.GrImageContext* (%class.SkImage_Base*)*, %class.GrImageContext* (%class.SkImage_Base*)** %10, align 8
  %12 = tail call %class.GrImageContext* %11(%class.SkImage_Base* %7) #13
  %13 = icmp eq %class.GrImageContext* %12, null
  br i1 %13, label %21, label %14

14:                                               ; preds = %4
  %15 = getelementptr inbounds %class.GrImageContext, %class.GrImageContext* %12, i64 0, i32 0
  %16 = bitcast %class.GrImageContext* %12 to %class.GrDirectContext* (%class.GrContext_Base*)***
  %17 = load %class.GrDirectContext* (%class.GrContext_Base*)**, %class.GrDirectContext* (%class.GrContext_Base*)*** %16, align 8
  %18 = getelementptr inbounds %class.GrDirectContext* (%class.GrContext_Base*)*, %class.GrDirectContext* (%class.GrContext_Base*)** %17, i64 3
  %19 = load %class.GrDirectContext* (%class.GrContext_Base*)*, %class.GrDirectContext* (%class.GrContext_Base*)** %18, align 8
  %20 = tail call %class.GrDirectContext* %19(%class.GrContext_Base* nonnull %15) #13
  br label %21

21:                                               ; preds = %4, %14
  %22 = phi %class.GrDirectContext* [ %20, %14 ], [ null, %4 ]
  %23 = getelementptr inbounds %class.SkImage, %class.SkImage* %0, i64 0, i32 2, i32 1, i32 0
  %24 = load i32, i32* %23, align 4
  %25 = getelementptr inbounds %class.SkPixmap, %class.SkPixmap* %1, i64 0, i32 2, i32 1, i32 0
  %26 = load i32, i32* %25, align 4
  %27 = icmp eq i32 %24, %26
  br i1 %27, label %28, label %45

28:                                               ; preds = %21
  %29 = getelementptr inbounds %class.SkImage, %class.SkImage* %0, i64 0, i32 2, i32 1, i32 1
  %30 = load i32, i32* %29, align 4
  %31 = getelementptr inbounds %class.SkPixmap, %class.SkPixmap* %1, i64 0, i32 2, i32 1, i32 1
  %32 = load i32, i32* %31, align 4
  %33 = icmp eq i32 %30, %32
  br i1 %33, label %34, label %45

34:                                               ; preds = %28
  %35 = getelementptr inbounds %class.SkPixmap, %class.SkPixmap* %1, i64 0, i32 2
  %36 = getelementptr inbounds %class.SkPixmap, %class.SkPixmap* %1, i64 0, i32 0
  %37 = load i8*, i8** %36, align 8
  %38 = getelementptr inbounds %class.SkPixmap, %class.SkPixmap* %1, i64 0, i32 1
  %39 = load i64, i64* %38, align 8
  %40 = bitcast %class.SkImage* %0 to i1 (%class.SkImage_Base*, %class.GrDirectContext*, %struct.SkImageInfo*, i8*, i64, i32, i32, i32)***
  %41 = load i1 (%class.SkImage_Base*, %class.GrDirectContext*, %struct.SkImageInfo*, i8*, i64, i32, i32, i32)**, i1 (%class.SkImage_Base*, %class.GrDirectContext*, %struct.SkImageInfo*, i8*, i64, i32, i32, i32)*** %40, align 8
  %42 = getelementptr inbounds i1 (%class.SkImage_Base*, %class.GrDirectContext*, %struct.SkImageInfo*, i8*, i64, i32, i32, i32)*, i1 (%class.SkImage_Base*, %class.GrDirectContext*, %struct.SkImageInfo*, i8*, i64, i32, i32, i32)** %41, i64 5
  %43 = load i1 (%class.SkImage_Base*, %class.GrDirectContext*, %struct.SkImageInfo*, i8*, i64, i32, i32, i32)*, i1 (%class.SkImage_Base*, %class.GrDirectContext*, %struct.SkImageInfo*, i8*, i64, i32, i32, i32)** %42, align 8
  %44 = tail call zeroext i1 %43(%class.SkImage_Base* %7, %class.GrDirectContext* %22, %struct.SkImageInfo* dereferenceable(24) %35, i8* %37, i64 %39, i32 0, i32 0, i32 %3) #13
  br label %71

45:                                               ; preds = %28, %21
  %46 = bitcast %class.SkBitmap* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %46) #13
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %46, i8 -86, i64 56, i1 false)
  call void @_ZN8SkBitmapC1Ev(%class.SkBitmap* nonnull %5) #13
  %47 = bitcast %class.SkImage* %0 to i1 (%class.SkImage_Base*, %class.GrDirectContext*, %class.SkBitmap*, i32)***
  %48 = load i1 (%class.SkImage_Base*, %class.GrDirectContext*, %class.SkBitmap*, i32)**, i1 (%class.SkImage_Base*, %class.GrDirectContext*, %class.SkBitmap*, i32)*** %47, align 8
  %49 = getelementptr inbounds i1 (%class.SkImage_Base*, %class.GrDirectContext*, %class.SkBitmap*, i32)*, i1 (%class.SkImage_Base*, %class.GrDirectContext*, %class.SkBitmap*, i32)** %48, i64 18
  %50 = load i1 (%class.SkImage_Base*, %class.GrDirectContext*, %class.SkBitmap*, i32)*, i1 (%class.SkImage_Base*, %class.GrDirectContext*, %class.SkBitmap*, i32)** %49, align 8
  %51 = call zeroext i1 %50(%class.SkImage_Base* %7, %class.GrDirectContext* %22, %class.SkBitmap* nonnull %5, i32 %3) #13
  br i1 %51, label %52, label %69

52:                                               ; preds = %45
  %53 = bitcast %class.SkPixmap* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %53) #13
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %53, i8 0, i64 40, i1 false) #13
  %54 = call zeroext i1 @_ZNK8SkBitmap10peekPixelsEP8SkPixmap(%class.SkBitmap* nonnull %5, %class.SkPixmap* nonnull %6) #13
  br i1 %54, label %55, label %57

55:                                               ; preds = %52
  %56 = call zeroext i1 @_ZNK8SkPixmap11scalePixelsERKS_RK17SkSamplingOptions(%class.SkPixmap* nonnull %6, %class.SkPixmap* dereferenceable(40) %1, %struct.SkSamplingOptions* dereferenceable(20) %2) #13
  br label %57

57:                                               ; preds = %55, %52
  %58 = phi i1 [ false, %52 ], [ %56, %55 ]
  %59 = getelementptr inbounds %class.SkPixmap, %class.SkPixmap* %6, i64 0, i32 2, i32 0, i32 0, i32 0
  %60 = load %class.SkColorSpace*, %class.SkColorSpace** %59, align 8
  %61 = icmp eq %class.SkColorSpace* %60, null
  br i1 %61, label %68, label %62

62:                                               ; preds = %57
  %63 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %60, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %64 = atomicrmw add i32* %63, i32 -1 acq_rel
  %65 = icmp eq i32 %64, 1
  br i1 %65, label %66, label %68

66:                                               ; preds = %62
  %67 = bitcast %class.SkColorSpace* %60 to i8*
  call void @_ZdlPv(i8* %67) #14
  br label %68

68:                                               ; preds = %57, %62, %66
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %53) #13
  br label %69

69:                                               ; preds = %45, %68
  %70 = phi i1 [ %58, %68 ], [ false, %45 ]
  call void @_ZN8SkBitmapD1Ev(%class.SkBitmap* nonnull %5) #13
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %46) #13
  br label %71

71:                                               ; preds = %69, %34
  %72 = phi i1 [ %44, %34 ], [ %70, %69 ]
  ret i1 %72
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK7SkImage10readPixelsEP15GrDirectContextRK8SkPixmapiiNS_11CachingHintE(%class.SkImage*, %class.GrDirectContext*, %class.SkPixmap* dereferenceable(40), i32, i32, i32) local_unnamed_addr #0 align 2 {
  %7 = getelementptr inbounds %class.SkPixmap, %class.SkPixmap* %2, i64 0, i32 2
  %8 = getelementptr inbounds %class.SkPixmap, %class.SkPixmap* %2, i64 0, i32 0
  %9 = load i8*, i8** %8, align 8
  %10 = getelementptr inbounds %class.SkPixmap, %class.SkPixmap* %2, i64 0, i32 1
  %11 = load i64, i64* %10, align 8
  %12 = bitcast %class.SkImage* %0 to %class.SkImage_Base*
  %13 = bitcast %class.SkImage* %0 to i1 (%class.SkImage_Base*, %class.GrDirectContext*, %struct.SkImageInfo*, i8*, i64, i32, i32, i32)***
  %14 = load i1 (%class.SkImage_Base*, %class.GrDirectContext*, %struct.SkImageInfo*, i8*, i64, i32, i32, i32)**, i1 (%class.SkImage_Base*, %class.GrDirectContext*, %struct.SkImageInfo*, i8*, i64, i32, i32, i32)*** %13, align 8
  %15 = getelementptr inbounds i1 (%class.SkImage_Base*, %class.GrDirectContext*, %struct.SkImageInfo*, i8*, i64, i32, i32, i32)*, i1 (%class.SkImage_Base*, %class.GrDirectContext*, %struct.SkImageInfo*, i8*, i64, i32, i32, i32)** %14, i64 5
  %16 = load i1 (%class.SkImage_Base*, %class.GrDirectContext*, %struct.SkImageInfo*, i8*, i64, i32, i32, i32)*, i1 (%class.SkImage_Base*, %class.GrDirectContext*, %struct.SkImageInfo*, i8*, i64, i32, i32, i32)** %15, align 8
  %17 = tail call zeroext i1 %16(%class.SkImage_Base* %12, %class.GrDirectContext* %1, %struct.SkImageInfo* dereferenceable(24) %7, i8* %9, i64 %11, i32 %3, i32 %4, i32 %5) #13
  ret i1 %17
}

declare void @_ZN8SkBitmapC1Ev(%class.SkBitmap*) unnamed_addr #1

declare zeroext i1 @_ZNK8SkBitmap10peekPixelsEP8SkPixmap(%class.SkBitmap*, %class.SkPixmap*) local_unnamed_addr #1

declare zeroext i1 @_ZNK8SkPixmap11scalePixelsERKS_RK17SkSamplingOptions(%class.SkPixmap*, %class.SkPixmap* dereferenceable(40), %struct.SkSamplingOptions* dereferenceable(20)) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN8SkBitmapD1Ev(%class.SkBitmap*) unnamed_addr #3

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i32 @_ZNK7SkImage9colorTypeEv(%class.SkImage* nocapture readonly) local_unnamed_addr #4 align 2 {
  %2 = getelementptr inbounds %class.SkImage, %class.SkImage* %0, i64 0, i32 2, i32 0, i32 1
  %3 = load i32, i32* %2, align 8
  ret i32 %3
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i32 @_ZNK7SkImage9alphaTypeEv(%class.SkImage* nocapture readonly) local_unnamed_addr #4 align 2 {
  %2 = getelementptr inbounds %class.SkImage, %class.SkImage* %0, i64 0, i32 2, i32 0, i32 2
  %3 = load i32, i32* %2, align 4
  ret i32 %3
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden %class.SkColorSpace* @_ZNK7SkImage10colorSpaceEv(%class.SkImage* nocapture readonly) local_unnamed_addr #4 align 2 {
  %2 = getelementptr inbounds %class.SkImage, %class.SkImage* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  %3 = load %class.SkColorSpace*, %class.SkColorSpace** %2, align 8
  ret %class.SkColorSpace* %3
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZNK7SkImage13refColorSpaceEv(%class.sk_sp* noalias nocapture sret, %class.SkImage* nocapture readonly) local_unnamed_addr #5 align 2 {
  %3 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %0, i64 0, i32 0
  %4 = getelementptr inbounds %class.SkImage, %class.SkImage* %1, i64 0, i32 2, i32 0, i32 0, i32 0
  %5 = load %class.SkColorSpace*, %class.SkColorSpace** %4, align 8, !noalias !2
  %6 = icmp eq %class.SkColorSpace* %5, null
  br i1 %6, label %10, label %7

7:                                                ; preds = %2
  %8 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %9 = atomicrmw add i32* %8, i32 1 monotonic, !noalias !2
  br label %10

10:                                               ; preds = %2, %7
  store %class.SkColorSpace* %5, %class.SkColorSpace** %3, align 8, !alias.scope !2
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK7SkImage10makeShaderE10SkTileModeS0_RK17SkSamplingOptionsPK8SkMatrix(%class.sk_sp.167* noalias sret, %class.SkImage*, i32, i32, %struct.SkSamplingOptions* dereferenceable(20), %class.SkMatrix*) local_unnamed_addr #0 align 2 {
  %7 = alloca %class.sk_sp.168, align 8
  %8 = icmp eq %class.SkImage* %1, null
  br i1 %8, label %12, label %9

9:                                                ; preds = %6
  %10 = getelementptr inbounds %class.SkImage, %class.SkImage* %1, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %11 = atomicrmw add i32* %10, i32 1 monotonic, !noalias !7
  br label %12

12:                                               ; preds = %6, %9
  %13 = getelementptr inbounds %class.sk_sp.168, %class.sk_sp.168* %7, i64 0, i32 0
  store %class.SkImage* %1, %class.SkImage** %13, align 8, !alias.scope !7
  call void @_ZN13SkImageShader4MakeE5sk_spI7SkImageE10SkTileModeS3_RK17SkSamplingOptionsPK8SkMatrixb(%class.sk_sp.167* sret %0, %class.sk_sp.168* nonnull %7, i32 %2, i32 %3, %struct.SkSamplingOptions* dereferenceable(20) %4, %class.SkMatrix* %5, i1 zeroext false) #13
  %14 = load %class.SkImage*, %class.SkImage** %13, align 8
  %15 = icmp eq %class.SkImage* %14, null
  br i1 %15, label %26, label %16

16:                                               ; preds = %12
  %17 = getelementptr inbounds %class.SkImage, %class.SkImage* %14, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %18 = atomicrmw add i32* %17, i32 -1 acq_rel
  %19 = icmp eq i32 %18, 1
  br i1 %19, label %20, label %26

20:                                               ; preds = %16
  %21 = bitcast %class.SkImage* %14 to %class.SkRefCntBase*
  %22 = bitcast %class.SkImage* %14 to void (%class.SkRefCntBase*)***
  %23 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %22, align 8
  %24 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %23, i64 2
  %25 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %24, align 8
  call void %25(%class.SkRefCntBase* nonnull %21) #13
  br label %26

26:                                               ; preds = %12, %16, %20
  ret void
}

declare void @_ZN13SkImageShader4MakeE5sk_spI7SkImageE10SkTileModeS3_RK17SkSamplingOptionsPK8SkMatrixb(%class.sk_sp.167* sret, %class.sk_sp.168*, i32, i32, %struct.SkSamplingOptions* dereferenceable(20), %class.SkMatrix*, i1 zeroext) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK7SkImage12encodeToDataE20SkEncodedImageFormati(%class.sk_sp.97* noalias sret, %class.SkImage*, i32, i32) local_unnamed_addr #0 align 2 {
  %5 = alloca %class.SkBitmap, align 8
  %6 = bitcast %class.SkImage* %1 to %class.SkImage_Base*
  %7 = bitcast %class.SkImage* %1 to %class.GrImageContext* (%class.SkImage_Base*)***
  %8 = load %class.GrImageContext* (%class.SkImage_Base*)**, %class.GrImageContext* (%class.SkImage_Base*)*** %7, align 8
  %9 = getelementptr inbounds %class.GrImageContext* (%class.SkImage_Base*)*, %class.GrImageContext* (%class.SkImage_Base*)** %8, i64 10
  %10 = load %class.GrImageContext* (%class.SkImage_Base*)*, %class.GrImageContext* (%class.SkImage_Base*)** %9, align 8
  %11 = tail call %class.GrImageContext* %10(%class.SkImage_Base* %6) #13
  %12 = icmp eq %class.GrImageContext* %11, null
  br i1 %12, label %20, label %13

13:                                               ; preds = %4
  %14 = getelementptr inbounds %class.GrImageContext, %class.GrImageContext* %11, i64 0, i32 0
  %15 = bitcast %class.GrImageContext* %11 to %class.GrDirectContext* (%class.GrContext_Base*)***
  %16 = load %class.GrDirectContext* (%class.GrContext_Base*)**, %class.GrDirectContext* (%class.GrContext_Base*)*** %15, align 8
  %17 = getelementptr inbounds %class.GrDirectContext* (%class.GrContext_Base*)*, %class.GrDirectContext* (%class.GrContext_Base*)** %16, i64 3
  %18 = load %class.GrDirectContext* (%class.GrContext_Base*)*, %class.GrDirectContext* (%class.GrContext_Base*)** %17, align 8
  %19 = tail call %class.GrDirectContext* %18(%class.GrContext_Base* nonnull %14) #13
  br label %20

20:                                               ; preds = %4, %13
  %21 = phi %class.GrDirectContext* [ %19, %13 ], [ null, %4 ]
  %22 = bitcast %class.SkBitmap* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %22) #13
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %22, i8 -86, i64 56, i1 false)
  call void @_ZN8SkBitmapC1Ev(%class.SkBitmap* nonnull %5) #13
  %23 = bitcast %class.SkImage* %1 to i1 (%class.SkImage_Base*, %class.GrDirectContext*, %class.SkBitmap*, i32)***
  %24 = load i1 (%class.SkImage_Base*, %class.GrDirectContext*, %class.SkBitmap*, i32)**, i1 (%class.SkImage_Base*, %class.GrDirectContext*, %class.SkBitmap*, i32)*** %23, align 8
  %25 = getelementptr inbounds i1 (%class.SkImage_Base*, %class.GrDirectContext*, %class.SkBitmap*, i32)*, i1 (%class.SkImage_Base*, %class.GrDirectContext*, %class.SkBitmap*, i32)** %24, i64 18
  %26 = load i1 (%class.SkImage_Base*, %class.GrDirectContext*, %class.SkBitmap*, i32)*, i1 (%class.SkImage_Base*, %class.GrDirectContext*, %class.SkBitmap*, i32)** %25, align 8
  %27 = call zeroext i1 %26(%class.SkImage_Base* %6, %class.GrDirectContext* %21, %class.SkBitmap* nonnull %5, i32 0) #13
  br i1 %27, label %28, label %29

28:                                               ; preds = %20
  call void @_Z14SkEncodeBitmapRK8SkBitmap20SkEncodedImageFormati(%class.sk_sp.97* sret %0, %class.SkBitmap* nonnull dereferenceable(56) %5, i32 %2, i32 %3) #13
  br label %31

29:                                               ; preds = %20
  %30 = getelementptr inbounds %class.sk_sp.97, %class.sk_sp.97* %0, i64 0, i32 0
  store %class.SkData* null, %class.SkData** %30, align 8
  br label %31

31:                                               ; preds = %29, %28
  call void @_ZN8SkBitmapD1Ev(%class.SkBitmap* nonnull %5) #13
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %22) #13
  ret void
}

declare void @_Z14SkEncodeBitmapRK8SkBitmap20SkEncodedImageFormati(%class.sk_sp.97* sret, %class.SkBitmap* dereferenceable(56), i32, i32) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK7SkImage12encodeToDataEv(%class.sk_sp.97* noalias sret, %class.SkImage*) local_unnamed_addr #0 align 2 {
  %3 = alloca %class.SkBitmap, align 8
  %4 = getelementptr inbounds %class.sk_sp.97, %class.sk_sp.97* %0, i64 0, i32 0
  store %class.SkData* inttoptr (i64 -6148914691236517206 to %class.SkData*), %class.SkData** %4, align 8
  %5 = bitcast %class.SkImage* %1 to %class.SkImage_Base*
  %6 = bitcast %class.SkImage* %1 to void (%class.sk_sp.97*, %class.SkImage_Base*)***
  %7 = load void (%class.sk_sp.97*, %class.SkImage_Base*)**, void (%class.sk_sp.97*, %class.SkImage_Base*)*** %6, align 8, !noalias !10
  %8 = getelementptr inbounds void (%class.sk_sp.97*, %class.SkImage_Base*)*, void (%class.sk_sp.97*, %class.SkImage_Base*)** %7, i64 20
  %9 = load void (%class.sk_sp.97*, %class.SkImage_Base*)*, void (%class.sk_sp.97*, %class.SkImage_Base*)** %8, align 8, !noalias !10
  tail call void %9(%class.sk_sp.97* sret %0, %class.SkImage_Base* %5) #13
  %10 = load %class.SkData*, %class.SkData** %4, align 8
  %11 = icmp eq %class.SkData* %10, null
  br i1 %11, label %12, label %37

12:                                               ; preds = %2
  %13 = bitcast %class.SkImage* %1 to %class.GrImageContext* (%class.SkImage_Base*)***
  %14 = load %class.GrImageContext* (%class.SkImage_Base*)**, %class.GrImageContext* (%class.SkImage_Base*)*** %13, align 8, !noalias !13
  %15 = getelementptr inbounds %class.GrImageContext* (%class.SkImage_Base*)*, %class.GrImageContext* (%class.SkImage_Base*)** %14, i64 10
  %16 = load %class.GrImageContext* (%class.SkImage_Base*)*, %class.GrImageContext* (%class.SkImage_Base*)** %15, align 8, !noalias !13
  %17 = tail call %class.GrImageContext* %16(%class.SkImage_Base* %5) #13, !noalias !13
  %18 = icmp eq %class.GrImageContext* %17, null
  br i1 %18, label %26, label %19

19:                                               ; preds = %12
  %20 = getelementptr inbounds %class.GrImageContext, %class.GrImageContext* %17, i64 0, i32 0
  %21 = bitcast %class.GrImageContext* %17 to %class.GrDirectContext* (%class.GrContext_Base*)***
  %22 = load %class.GrDirectContext* (%class.GrContext_Base*)**, %class.GrDirectContext* (%class.GrContext_Base*)*** %21, align 8
  %23 = getelementptr inbounds %class.GrDirectContext* (%class.GrContext_Base*)*, %class.GrDirectContext* (%class.GrContext_Base*)** %22, i64 3
  %24 = load %class.GrDirectContext* (%class.GrContext_Base*)*, %class.GrDirectContext* (%class.GrContext_Base*)** %23, align 8
  %25 = tail call %class.GrDirectContext* %24(%class.GrContext_Base* nonnull %20) #13
  br label %26

26:                                               ; preds = %19, %12
  %27 = phi %class.GrDirectContext* [ %25, %19 ], [ null, %12 ]
  %28 = bitcast %class.SkBitmap* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %28) #13, !noalias !13
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %28, i8 -86, i64 56, i1 false) #13, !noalias !13
  call void @_ZN8SkBitmapC1Ev(%class.SkBitmap* nonnull %3) #13, !noalias !13
  %29 = bitcast %class.SkImage* %1 to i1 (%class.SkImage_Base*, %class.GrDirectContext*, %class.SkBitmap*, i32)***
  %30 = load i1 (%class.SkImage_Base*, %class.GrDirectContext*, %class.SkBitmap*, i32)**, i1 (%class.SkImage_Base*, %class.GrDirectContext*, %class.SkBitmap*, i32)*** %29, align 8, !noalias !13
  %31 = getelementptr inbounds i1 (%class.SkImage_Base*, %class.GrDirectContext*, %class.SkBitmap*, i32)*, i1 (%class.SkImage_Base*, %class.GrDirectContext*, %class.SkBitmap*, i32)** %30, i64 18
  %32 = load i1 (%class.SkImage_Base*, %class.GrDirectContext*, %class.SkBitmap*, i32)*, i1 (%class.SkImage_Base*, %class.GrDirectContext*, %class.SkBitmap*, i32)** %31, align 8, !noalias !13
  %33 = call zeroext i1 %32(%class.SkImage_Base* %5, %class.GrDirectContext* %27, %class.SkBitmap* nonnull %3, i32 0) #13, !noalias !13
  br i1 %33, label %34, label %35

34:                                               ; preds = %26
  call void @_Z14SkEncodeBitmapRK8SkBitmap20SkEncodedImageFormati(%class.sk_sp.97* sret %0, %class.SkBitmap* nonnull dereferenceable(56) %3, i32 4, i32 100) #13
  br label %36

35:                                               ; preds = %26
  store %class.SkData* null, %class.SkData** %4, align 8, !alias.scope !13
  br label %36

36:                                               ; preds = %34, %35
  call void @_ZN8SkBitmapD1Ev(%class.SkBitmap* nonnull %3) #13
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %28) #13, !noalias !13
  br label %37

37:                                               ; preds = %2, %36
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK7SkImage14refEncodedDataEv(%class.sk_sp.97* noalias sret, %class.SkImage*) local_unnamed_addr #0 align 2 {
  %3 = bitcast %class.SkImage* %1 to %class.SkImage_Base*
  %4 = bitcast %class.SkImage* %1 to void (%class.sk_sp.97*, %class.SkImage_Base*)***
  %5 = load void (%class.sk_sp.97*, %class.SkImage_Base*)**, void (%class.sk_sp.97*, %class.SkImage_Base*)*** %4, align 8
  %6 = getelementptr inbounds void (%class.sk_sp.97*, %class.SkImage_Base*)*, void (%class.sk_sp.97*, %class.SkImage_Base*)** %5, i64 20
  %7 = load void (%class.sk_sp.97*, %class.SkImage_Base*)*, void (%class.sk_sp.97*, %class.SkImage_Base*)** %6, align 8
  tail call void %7(%class.sk_sp.97* sret %0, %class.SkImage_Base* %3) #13
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN7SkImage15MakeFromEncodedE5sk_spI6SkDataE(%class.sk_sp.168* noalias sret, %class.sk_sp.97* nocapture) local_unnamed_addr #0 align 2 {
  %3 = alloca %class.sk_sp.97, align 8
  %4 = getelementptr inbounds %class.sk_sp.97, %class.sk_sp.97* %1, i64 0, i32 0
  %5 = load %class.SkData*, %class.SkData** %4, align 8
  %6 = icmp eq %class.SkData* %5, null
  %7 = ptrtoint %class.SkData* %5 to i64
  br i1 %6, label %12, label %8

8:                                                ; preds = %2
  %9 = getelementptr inbounds %class.SkData, %class.SkData* %5, i64 0, i32 4
  %10 = load i64, i64* %9, align 8
  %11 = icmp eq i64 %10, 0
  br i1 %11, label %12, label %14

12:                                               ; preds = %8, %2
  %13 = getelementptr inbounds %class.sk_sp.168, %class.sk_sp.168* %0, i64 0, i32 0
  store %class.SkImage* null, %class.SkImage** %13, align 8
  br label %26

14:                                               ; preds = %8
  store %class.SkData* null, %class.SkData** %4, align 8
  %15 = bitcast %class.sk_sp.97* %3 to i64*
  store i64 %7, i64* %15, align 8
  %16 = call %class.SkImageGenerator* @_ZN16SkImageGenerator15MakeFromEncodedE5sk_spI6SkDataE(%class.sk_sp.97* nonnull %3) #13
  call void @_ZN7SkImage17MakeFromGeneratorENSt3__110unique_ptrI16SkImageGeneratorNS0_14default_deleteIS2_EEEE(%class.sk_sp.168* sret %0, %class.SkImageGenerator* %16) #13
  %17 = getelementptr inbounds %class.sk_sp.97, %class.sk_sp.97* %3, i64 0, i32 0
  %18 = load %class.SkData*, %class.SkData** %17, align 8
  %19 = icmp eq %class.SkData* %18, null
  br i1 %19, label %26, label %20

20:                                               ; preds = %14
  %21 = getelementptr inbounds %class.SkData, %class.SkData* %18, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %22 = atomicrmw add i32* %21, i32 -1 acq_rel
  %23 = icmp eq i32 %22, 1
  br i1 %23, label %24, label %26

24:                                               ; preds = %20
  call void @_ZN6SkDataD1Ev(%class.SkData* nonnull %18) #13
  %25 = bitcast %class.SkData* %18 to i8*
  call void @_ZN6SkDatadlEPv(i8* nonnull %25) #13
  br label %26

26:                                               ; preds = %24, %20, %14, %12
  ret void
}

declare void @_ZN7SkImage17MakeFromGeneratorENSt3__110unique_ptrI16SkImageGeneratorNS0_14default_deleteIS2_EEEE(%class.sk_sp.168* sret, %class.SkImageGenerator*) local_unnamed_addr #1

declare %class.SkImageGenerator* @_ZN16SkImageGenerator15MakeFromEncodedE5sk_spI6SkDataE(%class.sk_sp.97*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK7SkImage10makeSubsetERK7SkIRectP15GrDirectContext(%class.sk_sp.168* noalias sret, %class.SkImage*, %struct.SkIRect* dereferenceable(16), %class.GrDirectContext*) local_unnamed_addr #0 align 2 {
  %5 = alloca { i64, i64 }, align 8
  %6 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %2, i64 0, i32 2
  %7 = load i32, i32* %6, align 4
  %8 = sext i32 %7 to i64
  %9 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %2, i64 0, i32 0
  %10 = load i32, i32* %9, align 4
  %11 = sext i32 %10 to i64
  %12 = sub nsw i64 %8, %11
  %13 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %2, i64 0, i32 3
  %14 = load i32, i32* %13, align 4
  %15 = sext i32 %14 to i64
  %16 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %2, i64 0, i32 1
  %17 = load i32, i32* %16, align 4
  %18 = sext i32 %17 to i64
  %19 = sub nsw i64 %15, %18
  %20 = icmp slt i64 %12, 1
  %21 = icmp slt i64 %19, 1
  %22 = or i1 %20, %21
  br i1 %22, label %27, label %23

23:                                               ; preds = %4
  %24 = or i64 %19, %12
  %25 = add nsw i64 %24, 2147483648
  %26 = icmp ugt i64 %25, 4294967295
  br i1 %26, label %27, label %29

27:                                               ; preds = %4, %23
  %28 = getelementptr inbounds %class.sk_sp.168, %class.sk_sp.168* %0, i64 0, i32 0
  store %class.SkImage* null, %class.SkImage** %28, align 8
  br label %94

29:                                               ; preds = %23
  %30 = bitcast { i64, i64 }* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %30) #13
  %31 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %5, i64 0, i32 1
  %32 = getelementptr inbounds %class.SkImage, %class.SkImage* %1, i64 0, i32 2, i32 1, i32 0
  %33 = load i32, i32* %32, align 4
  %34 = getelementptr inbounds %class.SkImage, %class.SkImage* %1, i64 0, i32 2, i32 1, i32 1
  %35 = load i32, i32* %34, align 4
  %36 = zext i32 %35 to i64
  %37 = shl nuw i64 %36, 32
  %38 = zext i32 %33 to i64
  %39 = or i64 %37, %38
  %40 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %5, i64 0, i32 0
  store i64 0, i64* %40, align 8
  store i64 %39, i64* %31, align 8
  %41 = icmp slt i32 %33, 1
  %42 = icmp slt i32 %35, 1
  %43 = or i1 %41, %42
  br i1 %43, label %57, label %44

44:                                               ; preds = %29
  %45 = or i32 %35, %33
  %46 = sext i32 %45 to i64
  %47 = add nsw i64 %46, 2147483648
  %48 = icmp ugt i64 %47, 4294967295
  %49 = or i32 %17, %10
  %50 = icmp slt i32 %49, 0
  %51 = or i1 %50, %48
  %52 = icmp slt i32 %33, %7
  %53 = or i1 %52, %51
  %54 = icmp sge i32 %35, %14
  %55 = xor i1 %53, true
  %56 = and i1 %54, %55
  br i1 %56, label %59, label %57

57:                                               ; preds = %29, %44
  %58 = getelementptr inbounds %class.sk_sp.168, %class.sk_sp.168* %0, i64 0, i32 0
  store %class.SkImage* null, %class.SkImage** %58, align 8
  br label %93

59:                                               ; preds = %44
  %60 = bitcast %class.SkImage* %1 to %class.SkImage_Base*
  %61 = bitcast %class.SkImage* %1 to %class.GrImageContext* (%class.SkImage_Base*)***
  %62 = load %class.GrImageContext* (%class.SkImage_Base*)**, %class.GrImageContext* (%class.SkImage_Base*)*** %61, align 8
  %63 = getelementptr inbounds %class.GrImageContext* (%class.SkImage_Base*)*, %class.GrImageContext* (%class.SkImage_Base*)** %62, i64 10
  %64 = load %class.GrImageContext* (%class.SkImage_Base*)*, %class.GrImageContext* (%class.SkImage_Base*)** %63, align 8
  %65 = tail call %class.GrImageContext* %64(%class.SkImage_Base* %60) #13
  %66 = icmp eq %class.GrImageContext* %65, null
  br i1 %66, label %77, label %67

67:                                               ; preds = %59
  %68 = icmp eq %class.GrDirectContext* %3, null
  br i1 %68, label %75, label %69

69:                                               ; preds = %67
  %70 = getelementptr inbounds %class.GrDirectContext, %class.GrDirectContext* %3, i64 0, i32 0, i32 0, i32 0
  %71 = getelementptr inbounds %class.GrImageContext, %class.GrImageContext* %65, i64 0, i32 0
  %72 = tail call i32 @_ZNK14GrContext_Base9contextIDEv(%class.GrContext_Base* nonnull %70) #13
  %73 = tail call i32 @_ZNK14GrContext_Base9contextIDEv(%class.GrContext_Base* %71) #13
  %74 = icmp eq i32 %72, %73
  br i1 %74, label %77, label %75

75:                                               ; preds = %67, %69
  %76 = getelementptr inbounds %class.sk_sp.168, %class.sk_sp.168* %0, i64 0, i32 0
  store %class.SkImage* null, %class.SkImage** %76, align 8
  br label %93

77:                                               ; preds = %59, %69
  %78 = bitcast %struct.SkIRect* %2 to i8*
  %79 = call i32 @bcmp(i8* nonnull %30, i8* %78, i64 16) #13
  %80 = icmp eq i32 %79, 0
  br i1 %80, label %81, label %88

81:                                               ; preds = %77
  %82 = icmp eq %class.SkImage* %1, null
  br i1 %82, label %86, label %83

83:                                               ; preds = %81
  %84 = getelementptr inbounds %class.SkImage, %class.SkImage* %1, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %85 = atomicrmw add i32* %84, i32 1 monotonic, !noalias !16
  br label %86

86:                                               ; preds = %81, %83
  %87 = getelementptr inbounds %class.sk_sp.168, %class.sk_sp.168* %0, i64 0, i32 0
  store %class.SkImage* %1, %class.SkImage** %87, align 8, !alias.scope !16
  br label %93

88:                                               ; preds = %77
  %89 = bitcast %class.SkImage* %1 to void (%class.sk_sp.168*, %class.SkImage_Base*, %struct.SkIRect*, %class.GrDirectContext*)***
  %90 = load void (%class.sk_sp.168*, %class.SkImage_Base*, %struct.SkIRect*, %class.GrDirectContext*)**, void (%class.sk_sp.168*, %class.SkImage_Base*, %struct.SkIRect*, %class.GrDirectContext*)*** %89, align 8
  %91 = getelementptr inbounds void (%class.sk_sp.168*, %class.SkImage_Base*, %struct.SkIRect*, %class.GrDirectContext*)*, void (%class.sk_sp.168*, %class.SkImage_Base*, %struct.SkIRect*, %class.GrDirectContext*)** %90, i64 19
  %92 = load void (%class.sk_sp.168*, %class.SkImage_Base*, %struct.SkIRect*, %class.GrDirectContext*)*, void (%class.sk_sp.168*, %class.SkImage_Base*, %struct.SkIRect*, %class.GrDirectContext*)** %91, align 8
  tail call void %92(%class.sk_sp.168* sret %0, %class.SkImage_Base* %60, %struct.SkIRect* dereferenceable(16) %2, %class.GrDirectContext* %3) #13
  br label %93

93:                                               ; preds = %75, %86, %88, %57
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %30) #13
  br label %94

94:                                               ; preds = %93, %27
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK7SkImage15isTextureBackedEv(%class.SkImage*) local_unnamed_addr #0 align 2 {
  %2 = bitcast %class.SkImage* %0 to %class.SkImage_Base*
  %3 = bitcast %class.SkImage* %0 to i1 (%class.SkImage_Base*)***
  %4 = load i1 (%class.SkImage_Base*)**, i1 (%class.SkImage_Base*)*** %3, align 8
  %5 = getelementptr inbounds i1 (%class.SkImage_Base*)*, i1 (%class.SkImage_Base*)** %4, i64 23
  %6 = load i1 (%class.SkImage_Base*)*, i1 (%class.SkImage_Base*)** %5, align 8
  %7 = tail call zeroext i1 %6(%class.SkImage_Base* %2) #13
  ret i1 %7
}

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZNK7SkImage11textureSizeEv(%class.SkImage*) local_unnamed_addr #0 align 2 {
  %2 = bitcast %class.SkImage* %0 to %class.SkImage_Base*
  %3 = bitcast %class.SkImage* %0 to i64 (%class.SkImage_Base*)***
  %4 = load i64 (%class.SkImage_Base*)**, i64 (%class.SkImage_Base*)*** %3, align 8
  %5 = getelementptr inbounds i64 (%class.SkImage_Base*)*, i64 (%class.SkImage_Base*)** %4, i64 24
  %6 = load i64 (%class.SkImage_Base*)*, i64 (%class.SkImage_Base*)** %5, align 8
  %7 = tail call i64 %6(%class.SkImage_Base* %2) #13
  ret i64 %7
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK7SkImage17getBackendTextureEbP15GrSurfaceOrigin(%class.GrBackendTexture* noalias sret, %class.SkImage*, i1 zeroext, i32*) local_unnamed_addr #0 align 2 {
  %5 = bitcast %class.SkImage* %1 to %class.SkImage_Base*
  %6 = bitcast %class.SkImage* %1 to void (%class.GrBackendTexture*, %class.SkImage_Base*, i1, i32*)***
  %7 = load void (%class.GrBackendTexture*, %class.SkImage_Base*, i1, i32*)**, void (%class.GrBackendTexture*, %class.SkImage_Base*, i1, i32*)*** %6, align 8
  %8 = getelementptr inbounds void (%class.GrBackendTexture*, %class.SkImage_Base*, i1, i32*)*, void (%class.GrBackendTexture*, %class.SkImage_Base*, i1, i32*)** %7, i64 17
  %9 = load void (%class.GrBackendTexture*, %class.SkImage_Base*, i1, i32*)*, void (%class.GrBackendTexture*, %class.SkImage_Base*, i1, i32*)** %8, align 8
  tail call void %9(%class.GrBackendTexture* sret %0, %class.SkImage_Base* %5, i1 zeroext %2, i32* %3) #13
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK7SkImage7isValidEP18GrRecordingContext(%class.SkImage*, %class.GrRecordingContext*) local_unnamed_addr #0 align 2 {
  %3 = icmp eq %class.GrRecordingContext* %1, null
  br i1 %3, label %10, label %4

4:                                                ; preds = %2
  %5 = bitcast %class.GrRecordingContext* %1 to i1 (%class.GrRecordingContext*)***
  %6 = load i1 (%class.GrRecordingContext*)**, i1 (%class.GrRecordingContext*)*** %5, align 8
  %7 = getelementptr inbounds i1 (%class.GrRecordingContext*)*, i1 (%class.GrRecordingContext*)** %6, i64 8
  %8 = load i1 (%class.GrRecordingContext*)*, i1 (%class.GrRecordingContext*)** %7, align 8
  %9 = tail call zeroext i1 %8(%class.GrRecordingContext* nonnull %1) #13
  br i1 %9, label %17, label %10

10:                                               ; preds = %2, %4
  %11 = bitcast %class.SkImage* %0 to %class.SkImage_Base*
  %12 = bitcast %class.SkImage* %0 to i1 (%class.SkImage_Base*, %class.GrRecordingContext*)***
  %13 = load i1 (%class.SkImage_Base*, %class.GrRecordingContext*)**, i1 (%class.SkImage_Base*, %class.GrRecordingContext*)*** %12, align 8
  %14 = getelementptr inbounds i1 (%class.SkImage_Base*, %class.GrRecordingContext*)*, i1 (%class.SkImage_Base*, %class.GrRecordingContext*)** %13, i64 26
  %15 = load i1 (%class.SkImage_Base*, %class.GrRecordingContext*)*, i1 (%class.SkImage_Base*, %class.GrRecordingContext*)** %14, align 8
  %16 = tail call zeroext i1 %15(%class.SkImage_Base* %11, %class.GrRecordingContext* %1) #13
  br label %17

17:                                               ; preds = %4, %10
  %18 = phi i1 [ %16, %10 ], [ false, %4 ]
  ret i1 %18
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN7SkImage5flushEP15GrDirectContextRK11GrFlushInfo(%class.SkImage*, %class.GrDirectContext*, %struct.GrFlushInfo* dereferenceable(48)) local_unnamed_addr #0 align 2 {
  %4 = bitcast %class.SkImage* %0 to %class.SkImage_Base*
  %5 = bitcast %class.SkImage* %0 to i1 (%class.SkImage_Base*, %class.GrDirectContext*, %struct.GrFlushInfo*)***
  %6 = load i1 (%class.SkImage_Base*, %class.GrDirectContext*, %struct.GrFlushInfo*)**, i1 (%class.SkImage_Base*, %class.GrDirectContext*, %struct.GrFlushInfo*)*** %5, align 8
  %7 = getelementptr inbounds i1 (%class.SkImage_Base*, %class.GrDirectContext*, %struct.GrFlushInfo*)*, i1 (%class.SkImage_Base*, %class.GrDirectContext*, %struct.GrFlushInfo*)** %6, i64 11
  %8 = load i1 (%class.SkImage_Base*, %class.GrDirectContext*, %struct.GrFlushInfo*)*, i1 (%class.SkImage_Base*, %class.GrDirectContext*, %struct.GrFlushInfo*)** %7, align 8
  %9 = tail call zeroext i1 %8(%class.SkImage_Base* %4, %class.GrDirectContext* %1, %struct.GrFlushInfo* dereferenceable(48) %2) #13
  ret i1 %9
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN7SkImage14flushAndSubmitEP15GrDirectContext(%class.SkImage*, %class.GrDirectContext*) local_unnamed_addr #0 align 2 {
  %3 = bitcast %class.SkImage* %0 to %class.SkImage_Base*
  %4 = bitcast %class.SkImage* %0 to i1 (%class.SkImage_Base*, %class.GrDirectContext*, %struct.GrFlushInfo*)***
  %5 = load i1 (%class.SkImage_Base*, %class.GrDirectContext*, %struct.GrFlushInfo*)**, i1 (%class.SkImage_Base*, %class.GrDirectContext*, %struct.GrFlushInfo*)*** %4, align 8
  %6 = getelementptr inbounds i1 (%class.SkImage_Base*, %class.GrDirectContext*, %struct.GrFlushInfo*)*, i1 (%class.SkImage_Base*, %class.GrDirectContext*, %struct.GrFlushInfo*)** %5, i64 11
  %7 = load i1 (%class.SkImage_Base*, %class.GrDirectContext*, %struct.GrFlushInfo*)*, i1 (%class.SkImage_Base*, %class.GrDirectContext*, %struct.GrFlushInfo*)** %6, align 8
  %8 = tail call zeroext i1 %7(%class.SkImage_Base* %3, %class.GrDirectContext* %1, %struct.GrFlushInfo* nonnull dereferenceable(48) @.ref.tmp) #13
  %9 = tail call zeroext i1 @_ZN15GrDirectContext6submitEb(%class.GrDirectContext* %1, i1 zeroext false) #13
  ret void
}

declare zeroext i1 @_ZN15GrDirectContext6submitEb(%class.GrDirectContext*, i1 zeroext) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN12SkImage_BaseC2ERK11SkImageInfoj(%class.SkImage_Base* nocapture, %struct.SkImageInfo* nocapture readonly dereferenceable(24), i32) unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %class.SkImage_Base, %class.SkImage_Base* %0, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  store i32 1, i32* %4, align 4
  %5 = getelementptr inbounds %class.SkImage_Base, %class.SkImage_Base* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTV7SkImage, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %5, align 8
  %6 = getelementptr inbounds %class.SkImage_Base, %class.SkImage_Base* %0, i64 0, i32 0, i32 2, i32 0, i32 0, i32 0
  %7 = getelementptr inbounds %struct.SkImageInfo, %struct.SkImageInfo* %1, i64 0, i32 0, i32 0, i32 0
  %8 = load %class.SkColorSpace*, %class.SkColorSpace** %7, align 8
  %9 = icmp eq %class.SkColorSpace* %8, null
  br i1 %9, label %13, label %10

10:                                               ; preds = %3
  %11 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %12 = atomicrmw add i32* %11, i32 1 monotonic
  br label %13

13:                                               ; preds = %10, %3
  store %class.SkColorSpace* %8, %class.SkColorSpace** %6, align 8
  %14 = getelementptr inbounds %class.SkImage_Base, %class.SkImage_Base* %0, i64 0, i32 0, i32 2, i32 0, i32 1
  %15 = getelementptr inbounds %struct.SkImageInfo, %struct.SkImageInfo* %1, i64 0, i32 0, i32 1
  %16 = bitcast i32* %15 to i64*
  %17 = bitcast i32* %14 to i64*
  %18 = load i64, i64* %16, align 8
  store i64 %18, i64* %17, align 8
  %19 = getelementptr inbounds %class.SkImage_Base, %class.SkImage_Base* %0, i64 0, i32 0, i32 2, i32 1
  %20 = getelementptr inbounds %struct.SkImageInfo, %struct.SkImageInfo* %1, i64 0, i32 1
  %21 = bitcast %struct.SkISize* %20 to i64*
  %22 = bitcast %struct.SkISize* %19 to i64*
  %23 = load i64, i64* %21, align 8
  store i64 %23, i64* %22, align 8
  %24 = getelementptr inbounds %class.SkImage_Base, %class.SkImage_Base* %0, i64 0, i32 0, i32 3
  %25 = icmp eq i32 %2, 0
  br i1 %25, label %26, label %28

26:                                               ; preds = %13
  %27 = tail call i32 @_ZN8SkNextID7ImageIDEv() #13
  br label %28

28:                                               ; preds = %13, %26
  %29 = phi i32 [ %27, %26 ], [ %2, %13 ]
  store i32 %29, i32* %24, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [34 x i8*] }, { [34 x i8*] }* @_ZTV12SkImage_Base, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %5, align 8
  %30 = getelementptr inbounds %class.SkImage_Base, %class.SkImage_Base* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %30, align 1
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN12SkImage_BaseD2Ev(%class.SkImage_Base* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %class.SkImage_Base, %class.SkImage_Base* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [34 x i8*] }, { [34 x i8*] }* @_ZTV12SkImage_Base, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %class.SkImage_Base, %class.SkImage_Base* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %4 = load atomic i8, i8* %3 seq_cst, align 1
  %5 = and i8 %4, 1
  %6 = icmp eq i8 %5, 0
  br i1 %6, label %10, label %7

7:                                                ; preds = %1
  %8 = getelementptr inbounds %class.SkImage_Base, %class.SkImage_Base* %0, i64 0, i32 0, i32 3
  %9 = load i32, i32* %8, align 8
  tail call void @_Z26SkNotifyBitmapGenIDIsStalej(i32 %9) #13
  br label %10

10:                                               ; preds = %1, %7
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTV7SkImage, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %11 = getelementptr inbounds %class.SkImage_Base, %class.SkImage_Base* %0, i64 0, i32 0, i32 2, i32 0, i32 0, i32 0
  %12 = load %class.SkColorSpace*, %class.SkColorSpace** %11, align 8
  %13 = icmp eq %class.SkColorSpace* %12, null
  br i1 %13, label %20, label %14

14:                                               ; preds = %10
  %15 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %12, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %16 = atomicrmw add i32* %15, i32 -1 acq_rel
  %17 = icmp eq i32 %16, 1
  br i1 %17, label %18, label %20

18:                                               ; preds = %14
  %19 = bitcast %class.SkColorSpace* %12 to i8*
  tail call void @_ZdlPv(i8* %19) #14
  br label %20

20:                                               ; preds = %10, %14, %18
  ret void
}

declare void @_Z26SkNotifyBitmapGenIDIsStalej(i32) local_unnamed_addr #1

; Function Attrs: noreturn nounwind ssp uwtable
define hidden void @_ZN12SkImage_BaseD0Ev(%class.SkImage_Base* nocapture readnone) unnamed_addr #6 align 2 {
  tail call void @llvm.trap() #15
  unreachable
}

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #7

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN12SkImage_Base27onAsyncRescaleAndReadPixelsERK11SkImageInfoRK7SkIRectN7SkImage12RescaleGammaENS6_11RescaleModeEPFvPvNSt3__110unique_ptrIKNS6_15AsyncReadResultENSA_14default_deleteISD_EEEEES9_(%class.SkImage_Base*, %struct.SkImageInfo* dereferenceable(24), %struct.SkIRect* nocapture readonly dereferenceable(16), i1 zeroext, i32, void (i8*, %"class.SkImage::AsyncReadResult"*)*, i8*) unnamed_addr #0 align 2 {
  %8 = alloca %class.SkBitmap, align 8
  %9 = alloca %class.SkPixmap, align 8
  %10 = alloca %struct.SkIRect, align 8
  %11 = alloca %struct.SkImageInfo, align 8
  %12 = alloca %class.SkBitmap, align 8
  %13 = bitcast %class.SkBitmap* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %13) #13
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %13, i8 -86, i64 56, i1 false)
  call void @_ZN8SkBitmapC1Ev(%class.SkBitmap* nonnull %8) #13
  %14 = bitcast %class.SkPixmap* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %14) #13
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %14, i8 0, i64 40, i1 false) #13
  %15 = bitcast %struct.SkIRect* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %15) #13
  %16 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %10, i64 0, i32 2
  %17 = bitcast %class.SkImage_Base* %0 to i1 (%class.SkImage_Base*, %class.SkPixmap*)***
  %18 = bitcast %struct.SkIRect* %10 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %18, i8 -86, i64 16, i1 false)
  %19 = load i1 (%class.SkImage_Base*, %class.SkPixmap*)**, i1 (%class.SkImage_Base*, %class.SkPixmap*)*** %17, align 8
  %20 = getelementptr inbounds i1 (%class.SkImage_Base*, %class.SkPixmap*)*, i1 (%class.SkImage_Base*, %class.SkPixmap*)** %19, i64 3
  %21 = load i1 (%class.SkImage_Base*, %class.SkPixmap*)*, i1 (%class.SkImage_Base*, %class.SkPixmap*)** %20, align 8
  %22 = call zeroext i1 %21(%class.SkImage_Base* %0, %class.SkPixmap* nonnull %9) #13
  br i1 %22, label %23, label %26

23:                                               ; preds = %7
  %24 = call zeroext i1 @_ZN8SkBitmap13installPixelsERK8SkPixmap(%class.SkBitmap* nonnull %8, %class.SkPixmap* nonnull dereferenceable(40) %9) #13
  %25 = bitcast %struct.SkIRect* %2 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %15, i8* align 4 %25, i64 16, i1 false)
  br label %101

26:                                               ; preds = %7
  %27 = bitcast %class.SkImage_Base* %0 to %class.GrImageContext* (%class.SkImage_Base*)***
  %28 = load %class.GrImageContext* (%class.SkImage_Base*)**, %class.GrImageContext* (%class.SkImage_Base*)*** %27, align 8
  %29 = getelementptr inbounds %class.GrImageContext* (%class.SkImage_Base*)*, %class.GrImageContext* (%class.SkImage_Base*)** %28, i64 10
  %30 = load %class.GrImageContext* (%class.SkImage_Base*)*, %class.GrImageContext* (%class.SkImage_Base*)** %29, align 8
  %31 = call %class.GrImageContext* %30(%class.SkImage_Base* %0) #13
  %32 = icmp eq %class.GrImageContext* %31, null
  br i1 %32, label %40, label %33

33:                                               ; preds = %26
  %34 = getelementptr inbounds %class.GrImageContext, %class.GrImageContext* %31, i64 0, i32 0
  %35 = bitcast %class.GrImageContext* %31 to %class.GrDirectContext* (%class.GrContext_Base*)***
  %36 = load %class.GrDirectContext* (%class.GrContext_Base*)**, %class.GrDirectContext* (%class.GrContext_Base*)*** %35, align 8
  %37 = getelementptr inbounds %class.GrDirectContext* (%class.GrContext_Base*)*, %class.GrDirectContext* (%class.GrContext_Base*)** %36, i64 3
  %38 = load %class.GrDirectContext* (%class.GrContext_Base*)*, %class.GrDirectContext* (%class.GrContext_Base*)** %37, align 8
  %39 = call %class.GrDirectContext* %38(%class.GrContext_Base* nonnull %34) #13
  br label %40

40:                                               ; preds = %26, %33
  %41 = phi %class.GrDirectContext* [ %39, %33 ], [ null, %26 ]
  %42 = bitcast %struct.SkImageInfo* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %42) #13
  %43 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %2, i64 0, i32 2
  %44 = load i32, i32* %43, align 4
  %45 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %2, i64 0, i32 0
  %46 = load i32, i32* %45, align 4
  %47 = sub i32 %44, %46
  %48 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %2, i64 0, i32 3
  %49 = load i32, i32* %48, align 4
  %50 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %2, i64 0, i32 1
  %51 = load i32, i32* %50, align 4
  %52 = sub i32 %49, %51
  %53 = zext i32 %52 to i64
  %54 = shl nuw i64 %53, 32
  %55 = zext i32 %47 to i64
  %56 = or i64 %54, %55
  %57 = getelementptr inbounds %struct.SkImageInfo, %struct.SkImageInfo* %11, i64 0, i32 0, i32 0, i32 0
  %58 = getelementptr inbounds %class.SkImage_Base, %class.SkImage_Base* %0, i64 0, i32 0, i32 2, i32 0, i32 0, i32 0
  %59 = load %class.SkColorSpace*, %class.SkColorSpace** %58, align 8, !noalias !19
  %60 = icmp eq %class.SkColorSpace* %59, null
  br i1 %60, label %64, label %61

61:                                               ; preds = %40
  %62 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %59, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %63 = atomicrmw add i32* %62, i32 1 monotonic, !noalias !19
  br label %64

64:                                               ; preds = %40, %61
  store %class.SkColorSpace* %59, %class.SkColorSpace** %57, align 8, !alias.scope !19
  %65 = getelementptr inbounds %struct.SkImageInfo, %struct.SkImageInfo* %11, i64 0, i32 0, i32 1
  %66 = getelementptr inbounds %class.SkImage_Base, %class.SkImage_Base* %0, i64 0, i32 0, i32 2, i32 0, i32 1
  %67 = bitcast i32* %66 to i64*
  %68 = bitcast i32* %65 to i64*
  %69 = load i64, i64* %67, align 8, !noalias !19
  store i64 %69, i64* %68, align 8, !alias.scope !19
  %70 = getelementptr inbounds %struct.SkImageInfo, %struct.SkImageInfo* %11, i64 0, i32 1
  %71 = bitcast %struct.SkISize* %70 to i64*
  store i64 %56, i64* %71, align 8, !alias.scope !19
  %72 = call zeroext i1 @_ZN8SkBitmap7setInfoERK11SkImageInfom(%class.SkBitmap* nonnull %8, %struct.SkImageInfo* nonnull dereferenceable(24) %11, i64 0) #13
  %73 = load %class.SkColorSpace*, %class.SkColorSpace** %57, align 8
  %74 = icmp eq %class.SkColorSpace* %73, null
  br i1 %74, label %81, label %75

75:                                               ; preds = %64
  %76 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %73, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %77 = atomicrmw add i32* %76, i32 -1 acq_rel
  %78 = icmp eq i32 %77, 1
  br i1 %78, label %79, label %81

79:                                               ; preds = %75
  %80 = bitcast %class.SkColorSpace* %73 to i8*
  call void @_ZdlPv(i8* %80) #14
  br label %81

81:                                               ; preds = %64, %75, %79
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %42) #13
  call void @_ZN8SkBitmap11allocPixelsEv(%class.SkBitmap* nonnull %8) #13
  %82 = load i32, i32* %45, align 4
  %83 = load i32, i32* %50, align 4
  %84 = getelementptr inbounds %class.SkBitmap, %class.SkBitmap* %8, i64 0, i32 1, i32 2
  %85 = getelementptr inbounds %class.SkBitmap, %class.SkBitmap* %8, i64 0, i32 1, i32 0
  %86 = load i8*, i8** %85, align 8
  %87 = getelementptr inbounds %class.SkBitmap, %class.SkBitmap* %8, i64 0, i32 1, i32 1
  %88 = load i64, i64* %87, align 8
  %89 = bitcast %class.SkImage_Base* %0 to i1 (%class.SkImage_Base*, %class.GrDirectContext*, %struct.SkImageInfo*, i8*, i64, i32, i32, i32)***
  %90 = load i1 (%class.SkImage_Base*, %class.GrDirectContext*, %struct.SkImageInfo*, i8*, i64, i32, i32, i32)**, i1 (%class.SkImage_Base*, %class.GrDirectContext*, %struct.SkImageInfo*, i8*, i64, i32, i32, i32)*** %89, align 8
  %91 = getelementptr inbounds i1 (%class.SkImage_Base*, %class.GrDirectContext*, %struct.SkImageInfo*, i8*, i64, i32, i32, i32)*, i1 (%class.SkImage_Base*, %class.GrDirectContext*, %struct.SkImageInfo*, i8*, i64, i32, i32, i32)** %90, i64 5
  %92 = load i1 (%class.SkImage_Base*, %class.GrDirectContext*, %struct.SkImageInfo*, i8*, i64, i32, i32, i32)*, i1 (%class.SkImage_Base*, %class.GrDirectContext*, %struct.SkImageInfo*, i8*, i64, i32, i32, i32)** %91, align 8
  %93 = call zeroext i1 %92(%class.SkImage_Base* %0, %class.GrDirectContext* %41, %struct.SkImageInfo* dereferenceable(24) %84, i8* %86, i64 %88, i32 %82, i32 %83, i32 0) #13
  br i1 %93, label %95, label %94

94:                                               ; preds = %81
  call void %5(i8* %6, %"class.SkImage::AsyncReadResult"* null) #13
  br label %102

95:                                               ; preds = %81
  %96 = getelementptr inbounds %class.SkBitmap, %class.SkBitmap* %8, i64 0, i32 1, i32 2, i32 1
  %97 = bitcast %struct.SkISize* %96 to i64*
  %98 = load i64, i64* %97, align 8
  %99 = bitcast %struct.SkIRect* %10 to i64*
  store i64 0, i64* %99, align 8
  %100 = bitcast i32* %16 to i64*
  store i64 %98, i64* %100, align 8
  br label %101

101:                                              ; preds = %95, %23
  call void @_ZN8SkBitmapC1ERKS_(%class.SkBitmap* nonnull %12, %class.SkBitmap* nonnull dereferenceable(56) %8) #13
  call void @_Z22SkRescaleAndReadPixels8SkBitmapRK11SkImageInfoRK7SkIRectN7SkImage12RescaleGammaENS6_11RescaleModeEPFvPvNSt3__110unique_ptrIKNS6_15AsyncReadResultENSA_14default_deleteISD_EEEEES9_(%class.SkBitmap* nonnull %12, %struct.SkImageInfo* dereferenceable(24) %1, %struct.SkIRect* nonnull dereferenceable(16) %10, i1 zeroext %3, i32 %4, void (i8*, %"class.SkImage::AsyncReadResult"*)* %5, i8* %6) #13
  call void @_ZN8SkBitmapD1Ev(%class.SkBitmap* nonnull %12) #13
  br label %102

102:                                              ; preds = %94, %101
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %15) #13
  %103 = getelementptr inbounds %class.SkPixmap, %class.SkPixmap* %9, i64 0, i32 2, i32 0, i32 0, i32 0
  %104 = load %class.SkColorSpace*, %class.SkColorSpace** %103, align 8
  %105 = icmp eq %class.SkColorSpace* %104, null
  br i1 %105, label %112, label %106

106:                                              ; preds = %102
  %107 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %104, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %108 = atomicrmw add i32* %107, i32 -1 acq_rel
  %109 = icmp eq i32 %108, 1
  br i1 %109, label %110, label %112

110:                                              ; preds = %106
  %111 = bitcast %class.SkColorSpace* %104 to i8*
  call void @_ZdlPv(i8* %111) #14
  br label %112

112:                                              ; preds = %102, %106, %110
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %14) #13
  call void @_ZN8SkBitmapD1Ev(%class.SkBitmap* nonnull %8) #13
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %13) #13
  ret void
}

declare zeroext i1 @_ZN8SkBitmap13installPixelsERK8SkPixmap(%class.SkBitmap*, %class.SkPixmap* dereferenceable(40)) local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #2

declare zeroext i1 @_ZN8SkBitmap7setInfoERK11SkImageInfom(%class.SkBitmap*, %struct.SkImageInfo* dereferenceable(24), i64) local_unnamed_addr #1

declare void @_ZN8SkBitmap11allocPixelsEv(%class.SkBitmap*) local_unnamed_addr #1

declare void @_Z22SkRescaleAndReadPixels8SkBitmapRK11SkImageInfoRK7SkIRectN7SkImage12RescaleGammaENS6_11RescaleModeEPFvPvNSt3__110unique_ptrIKNS6_15AsyncReadResultENSA_14default_deleteISD_EEEEES9_(%class.SkBitmap*, %struct.SkImageInfo* dereferenceable(24), %struct.SkIRect* dereferenceable(16), i1 zeroext, i32, void (i8*, %"class.SkImage::AsyncReadResult"*)*, i8*) local_unnamed_addr #1

declare void @_ZN8SkBitmapC1ERKS_(%class.SkBitmap*, %class.SkBitmap* dereferenceable(56)) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN12SkImage_Base33onAsyncRescaleAndReadPixelsYUV420E15SkYUVColorSpace5sk_spI12SkColorSpaceERK7SkIRectRK7SkISizeN7SkImage12RescaleGammaENSA_11RescaleModeEPFvPvNSt3__110unique_ptrIKNSA_15AsyncReadResultENSE_14default_deleteISH_EEEEESD_(%class.SkImage_Base* nocapture readnone, i32, %class.sk_sp* nocapture readnone, %struct.SkIRect* nocapture readnone dereferenceable(16), %struct.SkISize* nocapture readnone dereferenceable(8), i1 zeroext, i32, void (i8*, %"class.SkImage::AsyncReadResult"*)* nocapture, i8*) unnamed_addr #0 align 2 {
  tail call void %7(i8* %8, %"class.SkImage::AsyncReadResult"* null) #13
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK12SkImage_Base6asViewEP18GrRecordingContext11GrMipmapped19GrImageTexGenPolicy(%"class.std::__1::tuple"* noalias sret, %class.SkImage_Base*, %class.GrRecordingContext*, i1 zeroext, i32) local_unnamed_addr #0 align 2 {
  %6 = icmp eq %class.GrRecordingContext* %2, null
  br i1 %6, label %7, label %11

7:                                                ; preds = %5
  %8 = getelementptr inbounds %"class.std::__1::tuple", %"class.std::__1::tuple"* %0, i64 0, i32 0, i32 0, i32 0, i32 2
  %9 = bitcast %"class.std::__1::tuple"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %9, i8 0, i64 16, i1 false) #13
  tail call void @_ZN9GrSwizzleC2EPKc(%class.GrSwizzle* %8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i64 0, i64 0)) #13
  %10 = getelementptr inbounds %"class.std::__1::tuple", %"class.std::__1::tuple"* %0, i64 0, i32 0, i32 1, i32 0
  store i32 0, i32* %10, align 4
  br label %33

11:                                               ; preds = %5
  %12 = getelementptr inbounds %class.GrRecordingContext, %class.GrRecordingContext* %2, i64 0, i32 0, i32 0
  %13 = tail call %class.GrCaps* @_ZNK14GrContext_Base4capsEv(%class.GrContext_Base* %12) #13
  %14 = getelementptr inbounds %class.GrCaps, %class.GrCaps* %13, i64 0, i32 3
  %15 = bitcast i48* %14 to i64*
  %16 = load i64, i64* %15, align 8
  %17 = and i64 %16, 2
  %18 = icmp eq i64 %17, 0
  br i1 %18, label %26, label %19

19:                                               ; preds = %11
  %20 = getelementptr inbounds %class.SkImage_Base, %class.SkImage_Base* %1, i64 0, i32 0, i32 2, i32 1, i32 0
  %21 = load i32, i32* %20, align 4
  %22 = getelementptr inbounds %class.SkImage_Base, %class.SkImage_Base* %1, i64 0, i32 0, i32 2, i32 1, i32 1
  %23 = load i32, i32* %22, align 4
  %24 = mul nsw i32 %23, %21
  %25 = icmp slt i32 %24, 2
  br i1 %25, label %26, label %27

26:                                               ; preds = %11, %19
  br label %27

27:                                               ; preds = %26, %19
  %28 = phi i1 [ false, %26 ], [ %3, %19 ]
  %29 = bitcast %class.SkImage_Base* %1 to void (%"class.std::__1::tuple"*, %class.SkImage_Base*, %class.GrRecordingContext*, i1, i32)***
  %30 = load void (%"class.std::__1::tuple"*, %class.SkImage_Base*, %class.GrRecordingContext*, i1, i32)**, void (%"class.std::__1::tuple"*, %class.SkImage_Base*, %class.GrRecordingContext*, i1, i32)*** %29, align 8
  %31 = getelementptr inbounds void (%"class.std::__1::tuple"*, %class.SkImage_Base*, %class.GrRecordingContext*, i1, i32)*, void (%"class.std::__1::tuple"*, %class.SkImage_Base*, %class.GrRecordingContext*, i1, i32)** %30, i64 30
  %32 = load void (%"class.std::__1::tuple"*, %class.SkImage_Base*, %class.GrRecordingContext*, i1, i32)*, void (%"class.std::__1::tuple"*, %class.SkImage_Base*, %class.GrRecordingContext*, i1, i32)** %31, align 8
  tail call void %32(%"class.std::__1::tuple"* sret %0, %class.SkImage_Base* %1, %class.GrRecordingContext* nonnull %2, i1 zeroext %28, i32 %4) #13
  br label %33

33:                                               ; preds = %27, %7
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden %class.GrFragmentProcessor* @_ZNK12SkImage_Base19asFragmentProcessorEP18GrRecordingContext17SkSamplingOptionsPK10SkTileModeRK8SkMatrixPK6SkRectSB_(%class.SkImage_Base*, %class.GrRecordingContext*, %struct.SkSamplingOptions* nocapture byval(%struct.SkSamplingOptions) align 8, i32*, %class.SkMatrix* dereferenceable(40), %struct.SkRect*, %struct.SkRect*) local_unnamed_addr #8 align 2 {
  %8 = icmp eq %class.GrRecordingContext* %1, null
  br i1 %8, label %50, label %9

9:                                                ; preds = %7
  %10 = getelementptr inbounds %struct.SkSamplingOptions, %struct.SkSamplingOptions* %2, i64 0, i32 0
  %11 = load i8, i8* %10, align 8, !range !24
  %12 = icmp eq i8 %11, 0
  br i1 %12, label %22, label %13

13:                                               ; preds = %9
  %14 = getelementptr inbounds %struct.SkSamplingOptions, %struct.SkSamplingOptions* %2, i64 0, i32 1
  %15 = bitcast %struct.SkCubicResampler* %14 to <2 x float>*
  %16 = load <2 x float>, <2 x float>* %15, align 4
  %17 = extractelement <2 x float> %16, i32 0
  %18 = fcmp oge float %17, 0.000000e+00
  %19 = extractelement <2 x float> %16, i32 1
  %20 = fcmp oge float %19, 0.000000e+00
  %21 = and i1 %18, %20
  br i1 %21, label %22, label %50

22:                                               ; preds = %9, %13
  %23 = getelementptr inbounds %struct.SkSamplingOptions, %struct.SkSamplingOptions* %2, i64 0, i32 3
  %24 = load i32, i32* %23, align 8
  %25 = icmp eq i32 %24, 0
  br i1 %25, label %44, label %26

26:                                               ; preds = %22
  %27 = getelementptr inbounds %class.GrRecordingContext, %class.GrRecordingContext* %1, i64 0, i32 0, i32 0
  %28 = tail call %class.GrCaps* @_ZNK14GrContext_Base4capsEv(%class.GrContext_Base* %27) #13
  %29 = getelementptr inbounds %class.GrCaps, %class.GrCaps* %28, i64 0, i32 3
  %30 = bitcast i48* %29 to i64*
  %31 = load i64, i64* %30, align 8
  %32 = and i64 %31, 2
  %33 = icmp eq i64 %32, 0
  br i1 %33, label %41, label %34

34:                                               ; preds = %26
  %35 = getelementptr inbounds %class.SkImage_Base, %class.SkImage_Base* %0, i64 0, i32 0, i32 2, i32 1, i32 0
  %36 = load i32, i32* %35, align 4
  %37 = getelementptr inbounds %class.SkImage_Base, %class.SkImage_Base* %0, i64 0, i32 0, i32 2, i32 1, i32 1
  %38 = load i32, i32* %37, align 4
  %39 = mul nsw i32 %38, %36
  %40 = icmp slt i32 %39, 2
  br i1 %40, label %41, label %44

41:                                               ; preds = %26, %34
  store i8 0, i8* %10, align 8
  %42 = getelementptr inbounds %struct.SkSamplingOptions, %struct.SkSamplingOptions* %2, i64 0, i32 1, i32 0
  store float 0.000000e+00, float* %42, align 4
  %43 = getelementptr inbounds %struct.SkSamplingOptions, %struct.SkSamplingOptions* %2, i64 0, i32 1, i32 1
  store float 0.000000e+00, float* %43, align 4
  store i32 0, i32* %23, align 8
  br label %44

44:                                               ; preds = %22, %41, %34
  %45 = bitcast %class.SkImage_Base* %0 to %class.GrFragmentProcessor* (%class.SkImage_Base*, %class.GrRecordingContext*, %struct.SkSamplingOptions*, i32*, %class.SkMatrix*, %struct.SkRect*, %struct.SkRect*)***
  %46 = load %class.GrFragmentProcessor* (%class.SkImage_Base*, %class.GrRecordingContext*, %struct.SkSamplingOptions*, i32*, %class.SkMatrix*, %struct.SkRect*, %struct.SkRect*)**, %class.GrFragmentProcessor* (%class.SkImage_Base*, %class.GrRecordingContext*, %struct.SkSamplingOptions*, i32*, %class.SkMatrix*, %struct.SkRect*, %struct.SkRect*)*** %45, align 8
  %47 = getelementptr inbounds %class.GrFragmentProcessor* (%class.SkImage_Base*, %class.GrRecordingContext*, %struct.SkSamplingOptions*, i32*, %class.SkMatrix*, %struct.SkRect*, %struct.SkRect*)*, %class.GrFragmentProcessor* (%class.SkImage_Base*, %class.GrRecordingContext*, %struct.SkSamplingOptions*, i32*, %class.SkMatrix*, %struct.SkRect*, %struct.SkRect*)** %46, i64 31
  %48 = load %class.GrFragmentProcessor* (%class.SkImage_Base*, %class.GrRecordingContext*, %struct.SkSamplingOptions*, i32*, %class.SkMatrix*, %struct.SkRect*, %struct.SkRect*)*, %class.GrFragmentProcessor* (%class.SkImage_Base*, %class.GrRecordingContext*, %struct.SkSamplingOptions*, i32*, %class.SkMatrix*, %struct.SkRect*, %struct.SkRect*)** %47, align 8
  %49 = tail call %class.GrFragmentProcessor* %48(%class.SkImage_Base* %0, %class.GrRecordingContext* nonnull %1, %struct.SkSamplingOptions* nonnull byval(%struct.SkSamplingOptions) align 8 %2, i32* %3, %class.SkMatrix* dereferenceable(40) %4, %struct.SkRect* %5, %struct.SkRect* %6) #13
  br label %50

50:                                               ; preds = %13, %7, %44
  %51 = phi %class.GrFragmentProcessor* [ %49, %44 ], [ null, %7 ], [ null, %13 ]
  ret %class.GrFragmentProcessor* %51
}

; Function Attrs: nounwind ssp uwtable
define hidden %class.GrFragmentProcessor* @_ZN12SkImage_Base29MakeFragmentProcessorFromViewEP18GrRecordingContext18GrSurfaceProxyView11SkAlphaType17SkSamplingOptionsPK10SkTileModeRK8SkMatrixPK6SkRectSD_(%class.GrRecordingContext*, %class.GrSurfaceProxyView*, i32, %struct.SkSamplingOptions* nocapture byval(%struct.SkSamplingOptions) align 8, i32* nocapture readonly, %class.SkMatrix* dereferenceable(40), %struct.SkRect*, %struct.SkRect*) local_unnamed_addr #8 align 2 {
  %9 = alloca %class.GrSurfaceProxyView, align 8
  %10 = alloca %class.GrSurfaceProxyView, align 8
  %11 = alloca %class.GrSurfaceProxyView, align 8
  %12 = alloca %class.GrSurfaceProxyView, align 8
  %13 = alloca %class.GrSurfaceProxyView, align 8
  %14 = alloca %class.GrSurfaceProxyView, align 8
  %15 = getelementptr inbounds %class.GrSurfaceProxyView, %class.GrSurfaceProxyView* %1, i64 0, i32 0, i32 0
  %16 = load %class.GrSurfaceProxy*, %class.GrSurfaceProxy** %15, align 8
  %17 = icmp eq %class.GrSurfaceProxy* %16, null
  br i1 %17, label %258, label %18

18:                                               ; preds = %8
  %19 = getelementptr inbounds %class.GrRecordingContext, %class.GrRecordingContext* %0, i64 0, i32 0, i32 0
  %20 = tail call %class.GrCaps* @_ZNK14GrContext_Base4capsEv(%class.GrContext_Base* %19) #13
  %21 = load i32, i32* %4, align 4
  %22 = icmp ult i32 %21, 4
  br i1 %22, label %24, label %23

23:                                               ; preds = %18
  tail call void @llvm.trap() #13
  unreachable

24:                                               ; preds = %18
  %25 = trunc i32 %21 to i8
  %26 = getelementptr inbounds i32, i32* %4, i64 1
  %27 = load i32, i32* %26, align 4
  %28 = icmp ult i32 %27, 4
  br i1 %28, label %30, label %29

29:                                               ; preds = %24
  tail call void @llvm.trap() #13
  unreachable

30:                                               ; preds = %24
  %31 = trunc i32 %27 to i8
  %32 = getelementptr inbounds %struct.SkSamplingOptions, %struct.SkSamplingOptions* %3, i64 0, i32 0
  %33 = load i8, i8* %32, align 8, !range !24
  %34 = icmp eq i8 %33, 0
  br i1 %34, label %130, label %35

35:                                               ; preds = %30
  %36 = icmp eq %struct.SkRect* %6, null
  br i1 %36, label %99, label %37

37:                                               ; preds = %35
  %38 = icmp eq %struct.SkRect* %7, null
  %39 = bitcast %class.GrSurfaceProxyView* %1 to i64*
  %40 = load i64, i64* %39, align 8
  store %class.GrSurfaceProxy* null, %class.GrSurfaceProxy** %15, align 8
  br i1 %38, label %70, label %41

41:                                               ; preds = %37
  %42 = bitcast %class.GrSurfaceProxyView* %9 to i64*
  store i64 %40, i64* %42, align 8
  %43 = getelementptr inbounds %class.GrSurfaceProxyView, %class.GrSurfaceProxyView* %9, i64 0, i32 1
  %44 = getelementptr inbounds %class.GrSurfaceProxyView, %class.GrSurfaceProxyView* %1, i64 0, i32 1
  %45 = load i32, i32* %44, align 8
  store i32 %45, i32* %43, align 8
  %46 = getelementptr inbounds %class.GrSurfaceProxyView, %class.GrSurfaceProxyView* %9, i64 0, i32 2, i32 0
  %47 = getelementptr inbounds %class.GrSurfaceProxyView, %class.GrSurfaceProxyView* %1, i64 0, i32 2, i32 0
  %48 = load i16, i16* %47, align 2
  store i16 %48, i16* %46, align 4
  %49 = getelementptr inbounds %struct.SkSamplingOptions, %struct.SkSamplingOptions* %3, i64 0, i32 1
  %50 = bitcast %struct.SkCubicResampler* %49 to <2 x float>*
  %51 = load <2 x float>, <2 x float>* %50, align 4
  %52 = tail call %class.GrCaps* @_ZNK14GrContext_Base4capsEv(%class.GrContext_Base* %19) #13
  %53 = call %class.GrFragmentProcessor* @_ZN15GrBicubicEffect10MakeSubsetE18GrSurfaceProxyView11SkAlphaTypeRK8SkMatrixN14GrSamplerState8WrapModeES6_RK6SkRectS9_16SkCubicResamplerNS_9DirectionERK6GrCaps(%class.GrSurfaceProxyView* nonnull %9, i32 %2, %class.SkMatrix* dereferenceable(40) %5, i8 zeroext %25, i8 zeroext %31, %struct.SkRect* nonnull dereferenceable(16) %6, %struct.SkRect* nonnull dereferenceable(16) %7, <2 x float> %51, i32 2, %class.GrCaps* dereferenceable(232) %52) #13
  %54 = ptrtoint %class.GrFragmentProcessor* %53 to i64
  %55 = getelementptr inbounds %class.GrSurfaceProxyView, %class.GrSurfaceProxyView* %9, i64 0, i32 0, i32 0
  %56 = load %class.GrSurfaceProxy*, %class.GrSurfaceProxy** %55, align 8
  %57 = icmp eq %class.GrSurfaceProxy* %56, null
  br i1 %57, label %258, label %58

58:                                               ; preds = %41
  %59 = getelementptr inbounds %class.GrSurfaceProxy, %class.GrSurfaceProxy* %56, i64 0, i32 1
  %60 = getelementptr inbounds %class.SkNVRefCnt.179, %class.SkNVRefCnt.179* %59, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %61 = atomicrmw add i32* %60, i32 -1 acq_rel
  %62 = icmp eq i32 %61, 1
  br i1 %62, label %63, label %258

63:                                               ; preds = %58
  %64 = getelementptr inbounds %class.SkNVRefCnt.179, %class.SkNVRefCnt.179* %59, i64 -2
  %65 = bitcast %class.SkNVRefCnt.179* %64 to %class.GrSurfaceProxy*
  %66 = bitcast %class.SkNVRefCnt.179* %64 to void (%class.GrSurfaceProxy*)***
  %67 = load void (%class.GrSurfaceProxy*)**, void (%class.GrSurfaceProxy*)*** %66, align 8
  %68 = getelementptr inbounds void (%class.GrSurfaceProxy*)*, void (%class.GrSurfaceProxy*)** %67, i64 1
  %69 = load void (%class.GrSurfaceProxy*)*, void (%class.GrSurfaceProxy*)** %68, align 8
  call void %69(%class.GrSurfaceProxy* nonnull %65) #13
  br label %258

70:                                               ; preds = %37
  %71 = bitcast %class.GrSurfaceProxyView* %10 to i64*
  store i64 %40, i64* %71, align 8
  %72 = getelementptr inbounds %class.GrSurfaceProxyView, %class.GrSurfaceProxyView* %10, i64 0, i32 1
  %73 = getelementptr inbounds %class.GrSurfaceProxyView, %class.GrSurfaceProxyView* %1, i64 0, i32 1
  %74 = load i32, i32* %73, align 8
  store i32 %74, i32* %72, align 8
  %75 = getelementptr inbounds %class.GrSurfaceProxyView, %class.GrSurfaceProxyView* %10, i64 0, i32 2, i32 0
  %76 = getelementptr inbounds %class.GrSurfaceProxyView, %class.GrSurfaceProxyView* %1, i64 0, i32 2, i32 0
  %77 = load i16, i16* %76, align 2
  store i16 %77, i16* %75, align 4
  %78 = getelementptr inbounds %struct.SkSamplingOptions, %struct.SkSamplingOptions* %3, i64 0, i32 1
  %79 = bitcast %struct.SkCubicResampler* %78 to <2 x float>*
  %80 = load <2 x float>, <2 x float>* %79, align 4
  %81 = tail call %class.GrCaps* @_ZNK14GrContext_Base4capsEv(%class.GrContext_Base* %19) #13
  %82 = call %class.GrFragmentProcessor* @_ZN15GrBicubicEffect10MakeSubsetE18GrSurfaceProxyView11SkAlphaTypeRK8SkMatrixN14GrSamplerState8WrapModeES6_RK6SkRect16SkCubicResamplerNS_9DirectionERK6GrCaps(%class.GrSurfaceProxyView* nonnull %10, i32 %2, %class.SkMatrix* dereferenceable(40) %5, i8 zeroext %25, i8 zeroext %31, %struct.SkRect* nonnull dereferenceable(16) %6, <2 x float> %80, i32 2, %class.GrCaps* dereferenceable(232) %81) #13
  %83 = ptrtoint %class.GrFragmentProcessor* %82 to i64
  %84 = getelementptr inbounds %class.GrSurfaceProxyView, %class.GrSurfaceProxyView* %10, i64 0, i32 0, i32 0
  %85 = load %class.GrSurfaceProxy*, %class.GrSurfaceProxy** %84, align 8
  %86 = icmp eq %class.GrSurfaceProxy* %85, null
  br i1 %86, label %258, label %87

87:                                               ; preds = %70
  %88 = getelementptr inbounds %class.GrSurfaceProxy, %class.GrSurfaceProxy* %85, i64 0, i32 1
  %89 = getelementptr inbounds %class.SkNVRefCnt.179, %class.SkNVRefCnt.179* %88, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %90 = atomicrmw add i32* %89, i32 -1 acq_rel
  %91 = icmp eq i32 %90, 1
  br i1 %91, label %92, label %258

92:                                               ; preds = %87
  %93 = getelementptr inbounds %class.SkNVRefCnt.179, %class.SkNVRefCnt.179* %88, i64 -2
  %94 = bitcast %class.SkNVRefCnt.179* %93 to %class.GrSurfaceProxy*
  %95 = bitcast %class.SkNVRefCnt.179* %93 to void (%class.GrSurfaceProxy*)***
  %96 = load void (%class.GrSurfaceProxy*)**, void (%class.GrSurfaceProxy*)*** %95, align 8
  %97 = getelementptr inbounds void (%class.GrSurfaceProxy*)*, void (%class.GrSurfaceProxy*)** %96, i64 1
  %98 = load void (%class.GrSurfaceProxy*)*, void (%class.GrSurfaceProxy*)** %97, align 8
  call void %98(%class.GrSurfaceProxy* nonnull %94) #13
  br label %258

99:                                               ; preds = %35
  %100 = bitcast %class.GrSurfaceProxyView* %1 to i64*
  %101 = load i64, i64* %100, align 8
  store %class.GrSurfaceProxy* null, %class.GrSurfaceProxy** %15, align 8
  %102 = bitcast %class.GrSurfaceProxyView* %11 to i64*
  store i64 %101, i64* %102, align 8
  %103 = getelementptr inbounds %class.GrSurfaceProxyView, %class.GrSurfaceProxyView* %11, i64 0, i32 1
  %104 = getelementptr inbounds %class.GrSurfaceProxyView, %class.GrSurfaceProxyView* %1, i64 0, i32 1
  %105 = load i32, i32* %104, align 8
  store i32 %105, i32* %103, align 8
  %106 = getelementptr inbounds %class.GrSurfaceProxyView, %class.GrSurfaceProxyView* %11, i64 0, i32 2, i32 0
  %107 = getelementptr inbounds %class.GrSurfaceProxyView, %class.GrSurfaceProxyView* %1, i64 0, i32 2, i32 0
  %108 = load i16, i16* %107, align 2
  store i16 %108, i16* %106, align 4
  %109 = getelementptr inbounds %struct.SkSamplingOptions, %struct.SkSamplingOptions* %3, i64 0, i32 1
  %110 = bitcast %struct.SkCubicResampler* %109 to <2 x float>*
  %111 = load <2 x float>, <2 x float>* %110, align 4
  %112 = tail call %class.GrCaps* @_ZNK14GrContext_Base4capsEv(%class.GrContext_Base* %19) #13
  %113 = call %class.GrFragmentProcessor* @_ZN15GrBicubicEffect4MakeE18GrSurfaceProxyView11SkAlphaTypeRK8SkMatrixN14GrSamplerState8WrapModeES6_16SkCubicResamplerNS_9DirectionERK6GrCaps(%class.GrSurfaceProxyView* nonnull %11, i32 %2, %class.SkMatrix* dereferenceable(40) %5, i8 zeroext %25, i8 zeroext %31, <2 x float> %111, i32 2, %class.GrCaps* dereferenceable(232) %112) #13
  %114 = ptrtoint %class.GrFragmentProcessor* %113 to i64
  %115 = getelementptr inbounds %class.GrSurfaceProxyView, %class.GrSurfaceProxyView* %11, i64 0, i32 0, i32 0
  %116 = load %class.GrSurfaceProxy*, %class.GrSurfaceProxy** %115, align 8
  %117 = icmp eq %class.GrSurfaceProxy* %116, null
  br i1 %117, label %258, label %118

118:                                              ; preds = %99
  %119 = getelementptr inbounds %class.GrSurfaceProxy, %class.GrSurfaceProxy* %116, i64 0, i32 1
  %120 = getelementptr inbounds %class.SkNVRefCnt.179, %class.SkNVRefCnt.179* %119, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %121 = atomicrmw add i32* %120, i32 -1 acq_rel
  %122 = icmp eq i32 %121, 1
  br i1 %122, label %123, label %258

123:                                              ; preds = %118
  %124 = getelementptr inbounds %class.SkNVRefCnt.179, %class.SkNVRefCnt.179* %119, i64 -2
  %125 = bitcast %class.SkNVRefCnt.179* %124 to %class.GrSurfaceProxy*
  %126 = bitcast %class.SkNVRefCnt.179* %124 to void (%class.GrSurfaceProxy*)***
  %127 = load void (%class.GrSurfaceProxy*)**, void (%class.GrSurfaceProxy*)*** %126, align 8
  %128 = getelementptr inbounds void (%class.GrSurfaceProxy*)*, void (%class.GrSurfaceProxy*)** %127, i64 1
  %129 = load void (%class.GrSurfaceProxy*)*, void (%class.GrSurfaceProxy*)** %128, align 8
  call void %129(%class.GrSurfaceProxy* nonnull %125) #13
  br label %258

130:                                              ; preds = %30
  %131 = load %class.GrSurfaceProxy*, %class.GrSurfaceProxy** %15, align 8
  %132 = bitcast %class.GrSurfaceProxy* %131 to %class.GrTextureProxy* (%class.GrSurfaceProxy*)***
  %133 = load %class.GrTextureProxy* (%class.GrSurfaceProxy*)**, %class.GrTextureProxy* (%class.GrSurfaceProxy*)*** %132, align 8
  %134 = getelementptr inbounds %class.GrTextureProxy* (%class.GrSurfaceProxy*)*, %class.GrTextureProxy* (%class.GrSurfaceProxy*)** %133, i64 3
  %135 = load %class.GrTextureProxy* (%class.GrSurfaceProxy*)*, %class.GrTextureProxy* (%class.GrSurfaceProxy*)** %134, align 8
  %136 = tail call %class.GrTextureProxy* %135(%class.GrSurfaceProxy* %131) #13
  %137 = tail call zeroext i1 @_ZNK14GrTextureProxy9mipmappedEv(%class.GrTextureProxy* %136) #13
  br i1 %137, label %138, label %141

138:                                              ; preds = %130
  %139 = getelementptr inbounds %struct.SkSamplingOptions, %struct.SkSamplingOptions* %3, i64 0, i32 3
  %140 = load i32, i32* %139, align 8
  br label %145

141:                                              ; preds = %130
  store i8 0, i8* %32, align 8
  %142 = getelementptr inbounds %struct.SkSamplingOptions, %struct.SkSamplingOptions* %3, i64 0, i32 1, i32 0
  store float 0.000000e+00, float* %142, align 4
  %143 = getelementptr inbounds %struct.SkSamplingOptions, %struct.SkSamplingOptions* %3, i64 0, i32 1, i32 1
  store float 0.000000e+00, float* %143, align 4
  %144 = getelementptr inbounds %struct.SkSamplingOptions, %struct.SkSamplingOptions* %3, i64 0, i32 3
  store i32 0, i32* %144, align 8
  br label %145

145:                                              ; preds = %138, %141
  %146 = phi i32 [ %140, %138 ], [ 0, %141 ]
  %147 = getelementptr inbounds %struct.SkSamplingOptions, %struct.SkSamplingOptions* %3, i64 0, i32 2
  %148 = load i32, i32* %147, align 4
  %149 = icmp eq %struct.SkRect* %6, null
  br i1 %149, label %222, label %150

150:                                              ; preds = %145
  %151 = icmp eq %struct.SkRect* %7, null
  %152 = bitcast %class.GrSurfaceProxyView* %1 to i64*
  %153 = load i64, i64* %152, align 8
  store %class.GrSurfaceProxy* null, %class.GrSurfaceProxy** %15, align 8
  br i1 %151, label %188, label %154

154:                                              ; preds = %150
  %155 = bitcast %class.GrSurfaceProxyView* %12 to i64*
  store i64 %153, i64* %155, align 8
  %156 = getelementptr inbounds %class.GrSurfaceProxyView, %class.GrSurfaceProxyView* %12, i64 0, i32 1
  %157 = getelementptr inbounds %class.GrSurfaceProxyView, %class.GrSurfaceProxyView* %1, i64 0, i32 1
  %158 = load i32, i32* %157, align 8
  store i32 %158, i32* %156, align 8
  %159 = getelementptr inbounds %class.GrSurfaceProxyView, %class.GrSurfaceProxyView* %12, i64 0, i32 2, i32 0
  %160 = getelementptr inbounds %class.GrSurfaceProxyView, %class.GrSurfaceProxyView* %1, i64 0, i32 2, i32 0
  %161 = load i16, i16* %160, align 2
  store i16 %161, i16* %159, align 4
  %162 = zext i32 %148 to i64
  %163 = shl nuw i64 %162, 32
  %164 = shl i32 %27, 8
  %165 = and i32 %164, 65280
  %166 = and i32 %21, 255
  %167 = or i32 %165, %166
  %168 = zext i32 %167 to i64
  %169 = or i64 %163, %168
  %170 = or i64 %169, 2863267840
  %171 = call %class.GrFragmentProcessor* @_ZN15GrTextureEffect10MakeSubsetE18GrSurfaceProxyView11SkAlphaTypeRK8SkMatrix14GrSamplerStateRK6SkRectS8_RK6GrCapsPKf(%class.GrSurfaceProxyView* nonnull %12, i32 %2, %class.SkMatrix* dereferenceable(40) %5, i64 %170, i32 %146, %struct.SkRect* nonnull dereferenceable(16) %6, %struct.SkRect* nonnull dereferenceable(16) %7, %class.GrCaps* dereferenceable(232) %20, float* getelementptr inbounds ([4 x float], [4 x float]* @_ZN15GrTextureEffect14kDefaultBorderE, i64 0, i64 0)) #13
  %172 = ptrtoint %class.GrFragmentProcessor* %171 to i64
  %173 = getelementptr inbounds %class.GrSurfaceProxyView, %class.GrSurfaceProxyView* %12, i64 0, i32 0, i32 0
  %174 = load %class.GrSurfaceProxy*, %class.GrSurfaceProxy** %173, align 8
  %175 = icmp eq %class.GrSurfaceProxy* %174, null
  br i1 %175, label %258, label %176

176:                                              ; preds = %154
  %177 = getelementptr inbounds %class.GrSurfaceProxy, %class.GrSurfaceProxy* %174, i64 0, i32 1
  %178 = getelementptr inbounds %class.SkNVRefCnt.179, %class.SkNVRefCnt.179* %177, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %179 = atomicrmw add i32* %178, i32 -1 acq_rel
  %180 = icmp eq i32 %179, 1
  br i1 %180, label %181, label %258

181:                                              ; preds = %176
  %182 = getelementptr inbounds %class.SkNVRefCnt.179, %class.SkNVRefCnt.179* %177, i64 -2
  %183 = bitcast %class.SkNVRefCnt.179* %182 to %class.GrSurfaceProxy*
  %184 = bitcast %class.SkNVRefCnt.179* %182 to void (%class.GrSurfaceProxy*)***
  %185 = load void (%class.GrSurfaceProxy*)**, void (%class.GrSurfaceProxy*)*** %184, align 8
  %186 = getelementptr inbounds void (%class.GrSurfaceProxy*)*, void (%class.GrSurfaceProxy*)** %185, i64 1
  %187 = load void (%class.GrSurfaceProxy*)*, void (%class.GrSurfaceProxy*)** %186, align 8
  call void %187(%class.GrSurfaceProxy* nonnull %183) #13
  br label %258

188:                                              ; preds = %150
  %189 = bitcast %class.GrSurfaceProxyView* %13 to i64*
  store i64 %153, i64* %189, align 8
  %190 = getelementptr inbounds %class.GrSurfaceProxyView, %class.GrSurfaceProxyView* %13, i64 0, i32 1
  %191 = getelementptr inbounds %class.GrSurfaceProxyView, %class.GrSurfaceProxyView* %1, i64 0, i32 1
  %192 = load i32, i32* %191, align 8
  store i32 %192, i32* %190, align 8
  %193 = getelementptr inbounds %class.GrSurfaceProxyView, %class.GrSurfaceProxyView* %13, i64 0, i32 2, i32 0
  %194 = getelementptr inbounds %class.GrSurfaceProxyView, %class.GrSurfaceProxyView* %1, i64 0, i32 2, i32 0
  %195 = load i16, i16* %194, align 2
  store i16 %195, i16* %193, align 4
  %196 = zext i32 %148 to i64
  %197 = shl nuw i64 %196, 32
  %198 = shl i32 %27, 8
  %199 = and i32 %198, 65280
  %200 = and i32 %21, 255
  %201 = or i32 %199, %200
  %202 = zext i32 %201 to i64
  %203 = or i64 %197, %202
  %204 = or i64 %203, 2863267840
  %205 = call %class.GrFragmentProcessor* @_ZN15GrTextureEffect10MakeSubsetE18GrSurfaceProxyView11SkAlphaTypeRK8SkMatrix14GrSamplerStateRK6SkRectRK6GrCapsPKfb(%class.GrSurfaceProxyView* nonnull %13, i32 %2, %class.SkMatrix* dereferenceable(40) %5, i64 %204, i32 %146, %struct.SkRect* nonnull dereferenceable(16) %6, %class.GrCaps* dereferenceable(232) %20, float* getelementptr inbounds ([4 x float], [4 x float]* @_ZN15GrTextureEffect14kDefaultBorderE, i64 0, i64 0), i1 zeroext false) #13
  %206 = ptrtoint %class.GrFragmentProcessor* %205 to i64
  %207 = getelementptr inbounds %class.GrSurfaceProxyView, %class.GrSurfaceProxyView* %13, i64 0, i32 0, i32 0
  %208 = load %class.GrSurfaceProxy*, %class.GrSurfaceProxy** %207, align 8
  %209 = icmp eq %class.GrSurfaceProxy* %208, null
  br i1 %209, label %258, label %210

210:                                              ; preds = %188
  %211 = getelementptr inbounds %class.GrSurfaceProxy, %class.GrSurfaceProxy* %208, i64 0, i32 1
  %212 = getelementptr inbounds %class.SkNVRefCnt.179, %class.SkNVRefCnt.179* %211, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %213 = atomicrmw add i32* %212, i32 -1 acq_rel
  %214 = icmp eq i32 %213, 1
  br i1 %214, label %215, label %258

215:                                              ; preds = %210
  %216 = getelementptr inbounds %class.SkNVRefCnt.179, %class.SkNVRefCnt.179* %211, i64 -2
  %217 = bitcast %class.SkNVRefCnt.179* %216 to %class.GrSurfaceProxy*
  %218 = bitcast %class.SkNVRefCnt.179* %216 to void (%class.GrSurfaceProxy*)***
  %219 = load void (%class.GrSurfaceProxy*)**, void (%class.GrSurfaceProxy*)*** %218, align 8
  %220 = getelementptr inbounds void (%class.GrSurfaceProxy*)*, void (%class.GrSurfaceProxy*)** %219, i64 1
  %221 = load void (%class.GrSurfaceProxy*)*, void (%class.GrSurfaceProxy*)** %220, align 8
  call void %221(%class.GrSurfaceProxy* nonnull %217) #13
  br label %258

222:                                              ; preds = %145
  %223 = bitcast %class.GrSurfaceProxyView* %1 to i64*
  %224 = load i64, i64* %223, align 8
  store %class.GrSurfaceProxy* null, %class.GrSurfaceProxy** %15, align 8
  %225 = bitcast %class.GrSurfaceProxyView* %14 to i64*
  store i64 %224, i64* %225, align 8
  %226 = getelementptr inbounds %class.GrSurfaceProxyView, %class.GrSurfaceProxyView* %14, i64 0, i32 1
  %227 = getelementptr inbounds %class.GrSurfaceProxyView, %class.GrSurfaceProxyView* %1, i64 0, i32 1
  %228 = load i32, i32* %227, align 8
  store i32 %228, i32* %226, align 8
  %229 = getelementptr inbounds %class.GrSurfaceProxyView, %class.GrSurfaceProxyView* %14, i64 0, i32 2, i32 0
  %230 = getelementptr inbounds %class.GrSurfaceProxyView, %class.GrSurfaceProxyView* %1, i64 0, i32 2, i32 0
  %231 = load i16, i16* %230, align 2
  store i16 %231, i16* %229, align 4
  %232 = zext i32 %148 to i64
  %233 = shl nuw i64 %232, 32
  %234 = shl i32 %27, 8
  %235 = and i32 %234, 65280
  %236 = and i32 %21, 255
  %237 = or i32 %235, %236
  %238 = zext i32 %237 to i64
  %239 = or i64 %233, %238
  %240 = or i64 %239, 2863267840
  %241 = call %class.GrFragmentProcessor* @_ZN15GrTextureEffect4MakeE18GrSurfaceProxyView11SkAlphaTypeRK8SkMatrix14GrSamplerStateRK6GrCapsPKf(%class.GrSurfaceProxyView* nonnull %14, i32 %2, %class.SkMatrix* dereferenceable(40) %5, i64 %240, i32 %146, %class.GrCaps* dereferenceable(232) %20, float* getelementptr inbounds ([4 x float], [4 x float]* @_ZN15GrTextureEffect14kDefaultBorderE, i64 0, i64 0)) #13
  %242 = ptrtoint %class.GrFragmentProcessor* %241 to i64
  %243 = getelementptr inbounds %class.GrSurfaceProxyView, %class.GrSurfaceProxyView* %14, i64 0, i32 0, i32 0
  %244 = load %class.GrSurfaceProxy*, %class.GrSurfaceProxy** %243, align 8
  %245 = icmp eq %class.GrSurfaceProxy* %244, null
  br i1 %245, label %258, label %246

246:                                              ; preds = %222
  %247 = getelementptr inbounds %class.GrSurfaceProxy, %class.GrSurfaceProxy* %244, i64 0, i32 1
  %248 = getelementptr inbounds %class.SkNVRefCnt.179, %class.SkNVRefCnt.179* %247, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %249 = atomicrmw add i32* %248, i32 -1 acq_rel
  %250 = icmp eq i32 %249, 1
  br i1 %250, label %251, label %258

251:                                              ; preds = %246
  %252 = getelementptr inbounds %class.SkNVRefCnt.179, %class.SkNVRefCnt.179* %247, i64 -2
  %253 = bitcast %class.SkNVRefCnt.179* %252 to %class.GrSurfaceProxy*
  %254 = bitcast %class.SkNVRefCnt.179* %252 to void (%class.GrSurfaceProxy*)***
  %255 = load void (%class.GrSurfaceProxy*)**, void (%class.GrSurfaceProxy*)*** %254, align 8
  %256 = getelementptr inbounds void (%class.GrSurfaceProxy*)*, void (%class.GrSurfaceProxy*)** %255, i64 1
  %257 = load void (%class.GrSurfaceProxy*)*, void (%class.GrSurfaceProxy*)** %256, align 8
  call void %257(%class.GrSurfaceProxy* nonnull %253) #13
  br label %258

258:                                              ; preds = %8, %154, %176, %181, %188, %210, %215, %222, %246, %251, %123, %118, %99, %92, %87, %70, %63, %58, %41
  %259 = phi i64 [ 0, %8 ], [ %54, %41 ], [ %54, %58 ], [ %54, %63 ], [ %83, %70 ], [ %83, %87 ], [ %83, %92 ], [ %114, %99 ], [ %114, %118 ], [ %114, %123 ], [ %172, %154 ], [ %172, %176 ], [ %172, %181 ], [ %206, %188 ], [ %206, %210 ], [ %206, %215 ], [ %242, %222 ], [ %242, %246 ], [ %242, %251 ]
  %260 = inttoptr i64 %259 to %class.GrFragmentProcessor*
  ret %class.GrFragmentProcessor* %260
}

declare %class.GrFragmentProcessor* @_ZN15GrBicubicEffect10MakeSubsetE18GrSurfaceProxyView11SkAlphaTypeRK8SkMatrixN14GrSamplerState8WrapModeES6_RK6SkRectS9_16SkCubicResamplerNS_9DirectionERK6GrCaps(%class.GrSurfaceProxyView*, i32, %class.SkMatrix* dereferenceable(40), i8 zeroext, i8 zeroext, %struct.SkRect* dereferenceable(16), %struct.SkRect* dereferenceable(16), <2 x float>, i32, %class.GrCaps* dereferenceable(232)) local_unnamed_addr #1

declare %class.GrFragmentProcessor* @_ZN15GrBicubicEffect10MakeSubsetE18GrSurfaceProxyView11SkAlphaTypeRK8SkMatrixN14GrSamplerState8WrapModeES6_RK6SkRect16SkCubicResamplerNS_9DirectionERK6GrCaps(%class.GrSurfaceProxyView*, i32, %class.SkMatrix* dereferenceable(40), i8 zeroext, i8 zeroext, %struct.SkRect* dereferenceable(16), <2 x float>, i32, %class.GrCaps* dereferenceable(232)) local_unnamed_addr #1

declare %class.GrFragmentProcessor* @_ZN15GrBicubicEffect4MakeE18GrSurfaceProxyView11SkAlphaTypeRK8SkMatrixN14GrSamplerState8WrapModeES6_16SkCubicResamplerNS_9DirectionERK6GrCaps(%class.GrSurfaceProxyView*, i32, %class.SkMatrix* dereferenceable(40), i8 zeroext, i8 zeroext, <2 x float>, i32, %class.GrCaps* dereferenceable(232)) local_unnamed_addr #1

declare zeroext i1 @_ZNK14GrTextureProxy9mipmappedEv(%class.GrTextureProxy*) local_unnamed_addr #1

declare %class.GrFragmentProcessor* @_ZN15GrTextureEffect10MakeSubsetE18GrSurfaceProxyView11SkAlphaTypeRK8SkMatrix14GrSamplerStateRK6SkRectS8_RK6GrCapsPKf(%class.GrSurfaceProxyView*, i32, %class.SkMatrix* dereferenceable(40), i64, i32, %struct.SkRect* dereferenceable(16), %struct.SkRect* dereferenceable(16), %class.GrCaps* dereferenceable(232), float*) local_unnamed_addr #1

declare %class.GrFragmentProcessor* @_ZN15GrTextureEffect10MakeSubsetE18GrSurfaceProxyView11SkAlphaTypeRK8SkMatrix14GrSamplerStateRK6SkRectRK6GrCapsPKfb(%class.GrSurfaceProxyView*, i32, %class.SkMatrix* dereferenceable(40), i64, i32, %struct.SkRect* dereferenceable(16), %class.GrCaps* dereferenceable(232), float*, i1 zeroext) local_unnamed_addr #1

declare %class.GrFragmentProcessor* @_ZN15GrTextureEffect4MakeE18GrSurfaceProxyView11SkAlphaTypeRK8SkMatrix14GrSamplerStateRK6GrCapsPKf(%class.GrSurfaceProxyView*, i32, %class.SkMatrix* dereferenceable(40), i64, i32, %class.GrCaps* dereferenceable(232), float*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN12SkImage_Base29FindOrMakeCachedMipmappedViewEP18GrRecordingContext18GrSurfaceProxyViewj(%class.GrSurfaceProxyView* noalias nocapture sret, %class.GrRecordingContext*, %class.GrSurfaceProxyView* nocapture, i32) local_unnamed_addr #0 align 2 {
  %5 = alloca %class.GrUniqueKey, align 8
  %6 = alloca { i64, i64 }, align 8
  %7 = bitcast { i64, i64 }* %6 to %struct.SkIRect*
  %8 = alloca %class.GrUniqueKey, align 8
  %9 = alloca %class.sk_sp.202, align 8
  %10 = alloca %class.GrSurfaceProxyView, align 8
  %11 = alloca %class.GrSurfaceProxyView, align 8
  %12 = getelementptr inbounds %class.GrSurfaceProxyView, %class.GrSurfaceProxyView* %2, i64 0, i32 0, i32 0
  %13 = load %class.GrSurfaceProxy*, %class.GrSurfaceProxy** %12, align 8
  %14 = icmp eq %class.GrSurfaceProxy* %13, null
  br i1 %14, label %15, label %17

15:                                               ; preds = %4
  %16 = ptrtoint %class.GrSurfaceProxy* %13 to i64
  br label %27

17:                                               ; preds = %4
  %18 = bitcast %class.GrSurfaceProxy* %13 to %class.GrTextureProxy* (%class.GrSurfaceProxy*)***
  %19 = load %class.GrTextureProxy* (%class.GrSurfaceProxy*)**, %class.GrTextureProxy* (%class.GrSurfaceProxy*)*** %18, align 8
  %20 = getelementptr inbounds %class.GrTextureProxy* (%class.GrSurfaceProxy*)*, %class.GrTextureProxy* (%class.GrSurfaceProxy*)** %19, i64 3
  %21 = load %class.GrTextureProxy* (%class.GrSurfaceProxy*)*, %class.GrTextureProxy* (%class.GrSurfaceProxy*)** %20, align 8
  %22 = tail call %class.GrTextureProxy* %21(%class.GrSurfaceProxy* nonnull %13) #13
  %23 = tail call zeroext i1 @_ZNK14GrTextureProxy9mipmappedEv(%class.GrTextureProxy* %22) #13
  br i1 %23, label %24, label %36

24:                                               ; preds = %17
  %25 = bitcast %class.GrSurfaceProxyView* %2 to i64*
  %26 = load i64, i64* %25, align 8
  br label %27

27:                                               ; preds = %15, %24
  %28 = phi i64 [ %26, %24 ], [ %16, %15 ]
  store %class.GrSurfaceProxy* null, %class.GrSurfaceProxy** %12, align 8
  %29 = bitcast %class.GrSurfaceProxyView* %0 to i64*
  store i64 %28, i64* %29, align 8
  %30 = getelementptr inbounds %class.GrSurfaceProxyView, %class.GrSurfaceProxyView* %0, i64 0, i32 1
  %31 = getelementptr inbounds %class.GrSurfaceProxyView, %class.GrSurfaceProxyView* %2, i64 0, i32 1
  %32 = load i32, i32* %31, align 8
  store i32 %32, i32* %30, align 8
  %33 = getelementptr inbounds %class.GrSurfaceProxyView, %class.GrSurfaceProxyView* %0, i64 0, i32 2, i32 0
  %34 = getelementptr inbounds %class.GrSurfaceProxyView, %class.GrSurfaceProxyView* %2, i64 0, i32 2, i32 0
  %35 = load i16, i16* %34, align 2
  store i16 %35, i16* %33, align 2
  br label %229

36:                                               ; preds = %17
  %37 = getelementptr inbounds %class.GrRecordingContext, %class.GrRecordingContext* %1, i64 0, i32 5, i32 0, i32 0, i32 0
  %38 = load %class.GrProxyProvider*, %class.GrProxyProvider** %37, align 8
  %39 = bitcast %class.GrUniqueKey* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %39) #13
  %40 = getelementptr inbounds %class.GrUniqueKey, %class.GrUniqueKey* %5, i64 0, i32 0, i32 0, i32 1, i32 0, i64 2
  %41 = bitcast i32* %40 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %41, i8 -86, i64 24, i1 false)
  %42 = getelementptr inbounds %class.GrUniqueKey, %class.GrUniqueKey* %5, i64 0, i32 0, i32 0, i32 0
  %43 = getelementptr inbounds %class.GrUniqueKey, %class.GrUniqueKey* %5, i64 0, i32 0, i32 0, i32 1, i32 0, i64 0
  store i32* %43, i32** %42, align 8
  store i32 0, i32* %43, align 8
  %44 = getelementptr inbounds %class.GrUniqueKey, %class.GrUniqueKey* %5, i64 0, i32 0, i32 0, i32 1, i32 0, i64 1
  store i32 0, i32* %44, align 4
  %45 = getelementptr inbounds %class.GrUniqueKey, %class.GrUniqueKey* %5, i64 0, i32 1, i32 0
  %46 = bitcast %class.SkData** %45 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %46, i8 0, i64 16, i1 false) #13
  %47 = bitcast { i64, i64 }* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %47) #13
  %48 = load %class.GrSurfaceProxy*, %class.GrSurfaceProxy** %12, align 8
  %49 = getelementptr inbounds %class.GrSurfaceProxy, %class.GrSurfaceProxy* %48, i64 0, i32 6
  %50 = bitcast %struct.SkISize* %49 to i64*
  %51 = load i64, i64* %50, align 8
  %52 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %6, i64 0, i32 0
  store i64 0, i64* %52, align 8
  %53 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %6, i64 0, i32 1
  store i64 %51, i64* %53, align 8
  call void @_Z20GrMakeKeyFromImageIDP11GrUniqueKeyjRK7SkIRect(%class.GrUniqueKey* nonnull %5, i32 %3, %struct.SkIRect* nonnull dereferenceable(16) %7) #13
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %47) #13
  %54 = bitcast %class.GrUniqueKey* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %54) #13
  %55 = getelementptr inbounds %class.GrUniqueKey, %class.GrUniqueKey* %8, i64 0, i32 0, i32 0, i32 1, i32 0, i64 2
  %56 = bitcast i32* %55 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %56, i8 -86, i64 24, i1 false)
  %57 = getelementptr inbounds %class.GrUniqueKey, %class.GrUniqueKey* %8, i64 0, i32 0, i32 0, i32 0
  %58 = getelementptr inbounds %class.GrUniqueKey, %class.GrUniqueKey* %8, i64 0, i32 0, i32 0, i32 1, i32 0, i64 0
  store i32* %58, i32** %57, align 8
  store i32 0, i32* %58, align 8
  %59 = getelementptr inbounds %class.GrUniqueKey, %class.GrUniqueKey* %8, i64 0, i32 0, i32 0, i32 1, i32 0, i64 1
  store i32 0, i32* %59, align 4
  %60 = getelementptr inbounds %class.GrUniqueKey, %class.GrUniqueKey* %8, i64 0, i32 1, i32 0
  %61 = bitcast %class.SkData** %60 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %61, i8 0, i64 16, i1 false) #13
  %62 = load atomic i8, i8* bitcast (i64* @_ZGVZN12SkImage_Base29FindOrMakeCachedMipmappedViewEP18GrRecordingContext18GrSurfaceProxyViewjE16kMipmappedDomain to i8*) acquire, align 8
  %63 = icmp eq i8 %62, 0
  br i1 %63, label %64, label %70, !prof !25

64:                                               ; preds = %36
  %65 = call i32 @__cxa_guard_acquire(i64* nonnull @_ZGVZN12SkImage_Base29FindOrMakeCachedMipmappedViewEP18GrRecordingContext18GrSurfaceProxyViewjE16kMipmappedDomain) #13
  %66 = icmp eq i32 %65, 0
  br i1 %66, label %70, label %67

67:                                               ; preds = %64
  %68 = call i32 @_ZN11GrUniqueKey14GenerateDomainEv() #13
  store i32 %68, i32* @_ZZN12SkImage_Base29FindOrMakeCachedMipmappedViewEP18GrRecordingContext18GrSurfaceProxyViewjE16kMipmappedDomain, align 4
  %69 = call {}* @llvm.invariant.start.p0i8(i64 4, i8* bitcast (i32* @_ZZN12SkImage_Base29FindOrMakeCachedMipmappedViewEP18GrRecordingContext18GrSurfaceProxyViewjE16kMipmappedDomain to i8*))
  call void @__cxa_guard_release(i64* nonnull @_ZGVZN12SkImage_Base29FindOrMakeCachedMipmappedViewEP18GrRecordingContext18GrSurfaceProxyViewjE16kMipmappedDomain) #13
  br label %70

70:                                               ; preds = %64, %67, %36
  %71 = load i32, i32* @_ZZN12SkImage_Base29FindOrMakeCachedMipmappedViewEP18GrRecordingContext18GrSurfaceProxyViewjE16kMipmappedDomain, align 4
  %72 = load i32*, i32** %42, align 8
  %73 = getelementptr inbounds i32, i32* %72, i64 1
  %74 = load i32, i32* %73, align 4
  %75 = lshr i32 %74, 16
  %76 = zext i32 %75 to i64
  %77 = add nuw nsw i64 %76, 17179869176
  %78 = lshr i64 %77, 2
  %79 = shl i64 %78, 32
  %80 = add i64 %79, 4294967296
  %81 = ashr exact i64 %80, 32
  %82 = add nsw i64 %81, 2
  %83 = load i32*, i32** %57, align 8
  %84 = icmp eq i32* %83, %58
  br i1 %84, label %87, label %85

85:                                               ; preds = %70
  %86 = bitcast i32* %83 to i8*
  call void @_Z7sk_freePv(i8* %86) #13
  br label %87

87:                                               ; preds = %85, %70
  %88 = icmp ugt i64 %82, 7
  br i1 %88, label %89, label %93

89:                                               ; preds = %87
  %90 = call i8* @_Z15sk_malloc_throwmm(i64 %82, i64 4) #13
  %91 = bitcast %class.GrUniqueKey* %8 to i8**
  store i8* %90, i8** %91, align 8
  %92 = bitcast i8* %90 to i32*
  br label %94

93:                                               ; preds = %87
  store i32* %58, i32** %57, align 8
  br label %94

94:                                               ; preds = %89, %93
  %95 = phi i32* [ %92, %89 ], [ %58, %93 ]
  %96 = trunc i64 %82 to i32
  %97 = shl i32 %96, 18
  %98 = or i32 %97, %71
  %99 = getelementptr inbounds i32, i32* %95, i64 1
  store i32 %98, i32* %99, align 4
  %100 = load i32*, i32** %57, align 8
  %101 = getelementptr inbounds i32, i32* %100, i64 2
  %102 = load i32*, i32** %42, align 8
  %103 = getelementptr inbounds i32, i32* %102, i64 2
  %104 = getelementptr inbounds i32, i32* %102, i64 1
  %105 = load i32, i32* %104, align 4
  %106 = and i32 %105, 65535
  %107 = getelementptr inbounds i32, i32* %100, i64 3
  store i32 %106, i32* %101, align 4
  %108 = bitcast i32* %107 to i8*
  %109 = bitcast i32* %103 to i8*
  %110 = load i32, i32* %104, align 4
  %111 = lshr i32 %110, 16
  %112 = zext i32 %111 to i64
  %113 = add nsw i64 %112, -8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %108, i8* align 4 %109, i64 %113, i1 false) #13
  %114 = getelementptr inbounds %class.GrUniqueKey, %class.GrUniqueKey* %8, i64 0, i32 2
  store i8* null, i8** %114, align 8
  %115 = getelementptr inbounds i32, i32* %100, i64 1
  %116 = load i32, i32* %115, align 4
  %117 = lshr i32 %116, 16
  %118 = zext i32 %117 to i64
  %119 = add nsw i64 %118, -4
  %120 = call i32 @_Z17GrResourceKeyHashPKjm(i32* %115, i64 %119) #13
  store i32 %120, i32* %100, align 4
  %121 = bitcast %class.sk_sp.202* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %121) #13
  %122 = getelementptr inbounds %class.sk_sp.202, %class.sk_sp.202* %9, i64 0, i32 0
  store %class.GrTextureProxy* inttoptr (i64 -6148914691236517206 to %class.GrTextureProxy*), %class.GrTextureProxy** %122, align 8
  call void @_ZN15GrProxyProvider28findOrCreateProxyByUniqueKeyERK11GrUniqueKeyN14GrSurfaceProxy12UseAllocatorE(%class.sk_sp.202* nonnull sret %9, %class.GrProxyProvider* %38, %class.GrUniqueKey* nonnull dereferenceable(56) %8, i32 1) #13
  %123 = load %class.GrTextureProxy*, %class.GrTextureProxy** %122, align 8
  %124 = icmp eq %class.GrTextureProxy* %123, null
  br i1 %124, label %141, label %125

125:                                              ; preds = %94
  store %class.GrTextureProxy* null, %class.GrTextureProxy** %122, align 8
  %126 = bitcast %class.GrTextureProxy* %123 to i8**
  %127 = load i8*, i8** %126, align 8
  %128 = getelementptr i8, i8* %127, i64 -24
  %129 = bitcast i8* %128 to i64*
  %130 = load i64, i64* %129, align 8
  %131 = bitcast %class.GrTextureProxy* %123 to i8*
  %132 = getelementptr inbounds i8, i8* %131, i64 %130
  %133 = ptrtoint i8* %132 to i64
  %134 = getelementptr inbounds %class.GrSurfaceProxyView, %class.GrSurfaceProxyView* %2, i64 0, i32 1
  %135 = load i32, i32* %134, align 8
  %136 = getelementptr inbounds %class.GrSurfaceProxyView, %class.GrSurfaceProxyView* %2, i64 0, i32 2, i32 0
  %137 = load i16, i16* %136, align 2, !noalias !26
  %138 = bitcast %class.GrSurfaceProxyView* %0 to i64*
  store i64 %133, i64* %138, align 8
  %139 = getelementptr inbounds %class.GrSurfaceProxyView, %class.GrSurfaceProxyView* %0, i64 0, i32 1
  store i32 %135, i32* %139, align 8
  %140 = getelementptr inbounds %class.GrSurfaceProxyView, %class.GrSurfaceProxyView* %0, i64 0, i32 2, i32 0
  store i16 %137, i16* %140, align 2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %121) #13
  br label %200

141:                                              ; preds = %94
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %121) #13
  %142 = bitcast %class.GrSurfaceProxyView* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %142) #13
  %143 = getelementptr inbounds %class.GrSurfaceProxyView, %class.GrSurfaceProxyView* %10, i64 0, i32 0, i32 0
  %144 = getelementptr inbounds %class.GrSurfaceProxyView, %class.GrSurfaceProxyView* %10, i64 0, i32 1
  %145 = getelementptr inbounds %class.GrSurfaceProxyView, %class.GrSurfaceProxyView* %10, i64 0, i32 2, i32 0
  %146 = getelementptr inbounds %class.GrSurfaceProxyView, %class.GrSurfaceProxyView* %11, i64 0, i32 0, i32 0
  %147 = bitcast %class.GrSurfaceProxyView* %10 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %147, i8 -86, i64 16, i1 false)
  %148 = load %class.GrSurfaceProxy*, %class.GrSurfaceProxy** %12, align 8
  %149 = icmp eq %class.GrSurfaceProxy* %148, null
  br i1 %149, label %153, label %150

150:                                              ; preds = %141
  %151 = getelementptr inbounds %class.GrSurfaceProxy, %class.GrSurfaceProxy* %148, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %152 = atomicrmw add i32* %151, i32 1 monotonic
  br label %153

153:                                              ; preds = %141, %150
  store %class.GrSurfaceProxy* %148, %class.GrSurfaceProxy** %146, align 8
  %154 = getelementptr inbounds %class.GrSurfaceProxyView, %class.GrSurfaceProxyView* %11, i64 0, i32 1
  %155 = getelementptr inbounds %class.GrSurfaceProxyView, %class.GrSurfaceProxyView* %2, i64 0, i32 1
  %156 = load i32, i32* %155, align 8
  store i32 %156, i32* %154, align 8
  %157 = getelementptr inbounds %class.GrSurfaceProxyView, %class.GrSurfaceProxyView* %11, i64 0, i32 2, i32 0
  %158 = getelementptr inbounds %class.GrSurfaceProxyView, %class.GrSurfaceProxyView* %2, i64 0, i32 2, i32 0
  %159 = load i16, i16* %158, align 2
  store i16 %159, i16* %157, align 4
  call void @_Z22GrCopyBaseMipMapToViewP18GrRecordingContext18GrSurfaceProxyView10SkBudgeted(%class.GrSurfaceProxyView* nonnull sret %10, %class.GrRecordingContext* %1, %class.GrSurfaceProxyView* nonnull %11, i1 zeroext true) #13
  %160 = load %class.GrSurfaceProxy*, %class.GrSurfaceProxy** %146, align 8
  %161 = icmp eq %class.GrSurfaceProxy* %160, null
  br i1 %161, label %174, label %162

162:                                              ; preds = %153
  %163 = getelementptr inbounds %class.GrSurfaceProxy, %class.GrSurfaceProxy* %160, i64 0, i32 1
  %164 = getelementptr inbounds %class.SkNVRefCnt.179, %class.SkNVRefCnt.179* %163, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %165 = atomicrmw add i32* %164, i32 -1 acq_rel
  %166 = icmp eq i32 %165, 1
  br i1 %166, label %167, label %174

167:                                              ; preds = %162
  %168 = getelementptr inbounds %class.SkNVRefCnt.179, %class.SkNVRefCnt.179* %163, i64 -2
  %169 = bitcast %class.SkNVRefCnt.179* %168 to %class.GrSurfaceProxy*
  %170 = bitcast %class.SkNVRefCnt.179* %168 to void (%class.GrSurfaceProxy*)***
  %171 = load void (%class.GrSurfaceProxy*)**, void (%class.GrSurfaceProxy*)*** %170, align 8
  %172 = getelementptr inbounds void (%class.GrSurfaceProxy*)*, void (%class.GrSurfaceProxy*)** %171, i64 1
  %173 = load void (%class.GrSurfaceProxy*)*, void (%class.GrSurfaceProxy*)** %172, align 8
  call void %173(%class.GrSurfaceProxy* nonnull %169) #13
  br label %174

174:                                              ; preds = %153, %162, %167
  %175 = load %class.GrSurfaceProxy*, %class.GrSurfaceProxy** %143, align 8
  %176 = icmp eq %class.GrSurfaceProxy* %175, null
  br i1 %176, label %177, label %183

177:                                              ; preds = %174
  %178 = bitcast %class.GrSurfaceProxyView* %2 to i64*
  %179 = load i64, i64* %178, align 8
  store %class.GrSurfaceProxy* null, %class.GrSurfaceProxy** %12, align 8
  %180 = bitcast %class.GrSurfaceProxyView* %0 to i64*
  store i64 %179, i64* %180, align 8
  %181 = load i32, i32* %155, align 8
  %182 = load i16, i16* %158, align 2
  br label %195

183:                                              ; preds = %174
  %184 = bitcast %class.GrSurfaceProxy* %175 to %class.GrTextureProxy* (%class.GrSurfaceProxy*)***
  %185 = load %class.GrTextureProxy* (%class.GrSurfaceProxy*)**, %class.GrTextureProxy* (%class.GrSurfaceProxy*)*** %184, align 8
  %186 = getelementptr inbounds %class.GrTextureProxy* (%class.GrSurfaceProxy*)*, %class.GrTextureProxy* (%class.GrSurfaceProxy*)** %185, i64 3
  %187 = load %class.GrTextureProxy* (%class.GrSurfaceProxy*)*, %class.GrTextureProxy* (%class.GrSurfaceProxy*)** %186, align 8
  %188 = call %class.GrTextureProxy* %187(%class.GrSurfaceProxy* nonnull %175) #13
  %189 = call zeroext i1 @_ZN15GrProxyProvider22assignUniqueKeyToProxyERK11GrUniqueKeyP14GrTextureProxy(%class.GrProxyProvider* %38, %class.GrUniqueKey* nonnull dereferenceable(56) %8, %class.GrTextureProxy* %188) #13
  %190 = bitcast %class.GrSurfaceProxyView* %10 to i64*
  %191 = load i64, i64* %190, align 8
  store %class.GrSurfaceProxy* null, %class.GrSurfaceProxy** %143, align 8
  %192 = bitcast %class.GrSurfaceProxyView* %0 to i64*
  store i64 %191, i64* %192, align 8
  %193 = load i32, i32* %144, align 8
  %194 = load i16, i16* %145, align 4
  br label %195

195:                                              ; preds = %177, %183
  %196 = phi i32 [ %193, %183 ], [ %181, %177 ]
  %197 = phi i16 [ %194, %183 ], [ %182, %177 ]
  %198 = getelementptr inbounds %class.GrSurfaceProxyView, %class.GrSurfaceProxyView* %0, i64 0, i32 1
  store i32 %196, i32* %198, align 8
  %199 = getelementptr inbounds %class.GrSurfaceProxyView, %class.GrSurfaceProxyView* %0, i64 0, i32 2, i32 0
  store i16 %197, i16* %199, align 2
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %142) #13
  br label %200

200:                                              ; preds = %125, %195
  %201 = load %class.SkData*, %class.SkData** %60, align 8
  %202 = icmp eq %class.SkData* %201, null
  br i1 %202, label %209, label %203

203:                                              ; preds = %200
  %204 = getelementptr inbounds %class.SkData, %class.SkData* %201, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %205 = atomicrmw add i32* %204, i32 -1 acq_rel
  %206 = icmp eq i32 %205, 1
  br i1 %206, label %207, label %209

207:                                              ; preds = %203
  call void @_ZN6SkDataD1Ev(%class.SkData* nonnull %201) #13
  %208 = bitcast %class.SkData* %201 to i8*
  call void @_ZN6SkDatadlEPv(i8* nonnull %208) #13
  br label %209

209:                                              ; preds = %207, %203, %200
  %210 = load i32*, i32** %57, align 8
  %211 = icmp eq i32* %210, %58
  br i1 %211, label %214, label %212

212:                                              ; preds = %209
  %213 = bitcast i32* %210 to i8*
  call void @_Z7sk_freePv(i8* %213) #13
  br label %214

214:                                              ; preds = %209, %212
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %54) #13
  %215 = load %class.SkData*, %class.SkData** %45, align 8
  %216 = icmp eq %class.SkData* %215, null
  br i1 %216, label %223, label %217

217:                                              ; preds = %214
  %218 = getelementptr inbounds %class.SkData, %class.SkData* %215, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %219 = atomicrmw add i32* %218, i32 -1 acq_rel
  %220 = icmp eq i32 %219, 1
  br i1 %220, label %221, label %223

221:                                              ; preds = %217
  call void @_ZN6SkDataD1Ev(%class.SkData* nonnull %215) #13
  %222 = bitcast %class.SkData* %215 to i8*
  call void @_ZN6SkDatadlEPv(i8* nonnull %222) #13
  br label %223

223:                                              ; preds = %221, %217, %214
  %224 = load i32*, i32** %42, align 8
  %225 = icmp eq i32* %224, %43
  br i1 %225, label %228, label %226

226:                                              ; preds = %223
  %227 = bitcast i32* %224 to i8*
  call void @_Z7sk_freePv(i8* %227) #13
  br label %228

228:                                              ; preds = %223, %226
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %39) #13
  br label %229

229:                                              ; preds = %228, %27
  ret void
}

declare void @_Z20GrMakeKeyFromImageIDP11GrUniqueKeyjRK7SkIRect(%class.GrUniqueKey*, i32, %struct.SkIRect* dereferenceable(16)) local_unnamed_addr #1

; Function Attrs: nofree nounwind
declare i32 @__cxa_guard_acquire(i64*) local_unnamed_addr #9

declare i32 @_ZN11GrUniqueKey14GenerateDomainEv() local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare {}* @llvm.invariant.start.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: nofree nounwind
declare void @__cxa_guard_release(i64*) local_unnamed_addr #9

declare void @_ZN15GrProxyProvider28findOrCreateProxyByUniqueKeyERK11GrUniqueKeyN14GrSurfaceProxy12UseAllocatorE(%class.sk_sp.202* sret, %class.GrProxyProvider*, %class.GrUniqueKey* dereferenceable(56), i32) local_unnamed_addr #1

declare void @_Z22GrCopyBaseMipMapToViewP18GrRecordingContext18GrSurfaceProxyView10SkBudgeted(%class.GrSurfaceProxyView* sret, %class.GrRecordingContext*, %class.GrSurfaceProxyView*, i1 zeroext) local_unnamed_addr #1

declare zeroext i1 @_ZN15GrProxyProvider22assignUniqueKeyToProxyERK11GrUniqueKeyP14GrTextureProxy(%class.GrProxyProvider*, %class.GrUniqueKey* dereferenceable(56), %class.GrTextureProxy*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK12SkImage_Base19onGetBackendTextureEbP15GrSurfaceOrigin(%class.GrBackendTexture* noalias sret, %class.SkImage_Base* nocapture readnone, i1 zeroext, i32* nocapture readnone) unnamed_addr #0 align 2 {
  tail call void @_ZN16GrBackendTextureC1Ev(%class.GrBackendTexture* %0) #13
  ret void
}

declare void @_ZN16GrBackendTextureC1Ev(%class.GrBackendTexture*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK7SkImage10readPixelsERK8SkPixmapiiNS_11CachingHintE(%class.SkImage*, %class.SkPixmap* dereferenceable(40), i32, i32, i32) local_unnamed_addr #0 align 2 {
  %6 = bitcast %class.SkImage* %0 to %class.SkImage_Base*
  %7 = bitcast %class.SkImage* %0 to %class.GrImageContext* (%class.SkImage_Base*)***
  %8 = load %class.GrImageContext* (%class.SkImage_Base*)**, %class.GrImageContext* (%class.SkImage_Base*)*** %7, align 8
  %9 = getelementptr inbounds %class.GrImageContext* (%class.SkImage_Base*)*, %class.GrImageContext* (%class.SkImage_Base*)** %8, i64 10
  %10 = load %class.GrImageContext* (%class.SkImage_Base*)*, %class.GrImageContext* (%class.SkImage_Base*)** %9, align 8
  %11 = tail call %class.GrImageContext* %10(%class.SkImage_Base* %6) #13
  %12 = icmp eq %class.GrImageContext* %11, null
  br i1 %12, label %20, label %13

13:                                               ; preds = %5
  %14 = getelementptr inbounds %class.GrImageContext, %class.GrImageContext* %11, i64 0, i32 0
  %15 = bitcast %class.GrImageContext* %11 to %class.GrDirectContext* (%class.GrContext_Base*)***
  %16 = load %class.GrDirectContext* (%class.GrContext_Base*)**, %class.GrDirectContext* (%class.GrContext_Base*)*** %15, align 8
  %17 = getelementptr inbounds %class.GrDirectContext* (%class.GrContext_Base*)*, %class.GrDirectContext* (%class.GrContext_Base*)** %16, i64 3
  %18 = load %class.GrDirectContext* (%class.GrContext_Base*)*, %class.GrDirectContext* (%class.GrContext_Base*)** %17, align 8
  %19 = tail call %class.GrDirectContext* %18(%class.GrContext_Base* nonnull %14) #13
  br label %20

20:                                               ; preds = %5, %13
  %21 = phi %class.GrDirectContext* [ %19, %13 ], [ null, %5 ]
  %22 = getelementptr inbounds %class.SkPixmap, %class.SkPixmap* %1, i64 0, i32 2
  %23 = getelementptr inbounds %class.SkPixmap, %class.SkPixmap* %1, i64 0, i32 0
  %24 = load i8*, i8** %23, align 8
  %25 = getelementptr inbounds %class.SkPixmap, %class.SkPixmap* %1, i64 0, i32 1
  %26 = load i64, i64* %25, align 8
  %27 = bitcast %class.SkImage* %0 to i1 (%class.SkImage_Base*, %class.GrDirectContext*, %struct.SkImageInfo*, i8*, i64, i32, i32, i32)***
  %28 = load i1 (%class.SkImage_Base*, %class.GrDirectContext*, %struct.SkImageInfo*, i8*, i64, i32, i32, i32)**, i1 (%class.SkImage_Base*, %class.GrDirectContext*, %struct.SkImageInfo*, i8*, i64, i32, i32, i32)*** %27, align 8
  %29 = getelementptr inbounds i1 (%class.SkImage_Base*, %class.GrDirectContext*, %struct.SkImageInfo*, i8*, i64, i32, i32, i32)*, i1 (%class.SkImage_Base*, %class.GrDirectContext*, %struct.SkImageInfo*, i8*, i64, i32, i32, i32)** %28, i64 5
  %30 = load i1 (%class.SkImage_Base*, %class.GrDirectContext*, %struct.SkImageInfo*, i8*, i64, i32, i32, i32)*, i1 (%class.SkImage_Base*, %class.GrDirectContext*, %struct.SkImageInfo*, i8*, i64, i32, i32, i32)** %29, align 8
  %31 = tail call zeroext i1 %30(%class.SkImage_Base* %6, %class.GrDirectContext* %21, %struct.SkImageInfo* dereferenceable(24) %22, i8* %24, i64 %26, i32 %2, i32 %3, i32 %4) #13
  ret i1 %31
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN7SkImage14MakeFromBitmapERK8SkBitmap(%class.sk_sp.168* noalias sret, %class.SkBitmap* dereferenceable(56)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %class.SkBitmap, %class.SkBitmap* %1, i64 0, i32 0, i32 0
  %4 = load %class.SkPixelRef*, %class.SkPixelRef** %3, align 8
  %5 = icmp eq %class.SkPixelRef* %4, null
  br i1 %5, label %6, label %8

6:                                                ; preds = %2
  %7 = getelementptr inbounds %class.sk_sp.168, %class.sk_sp.168* %0, i64 0, i32 0
  store %class.SkImage* null, %class.SkImage** %7, align 8
  br label %9

8:                                                ; preds = %2
  tail call void @_Z27SkMakeImageFromRasterBitmapRK8SkBitmap16SkCopyPixelsMode(%class.sk_sp.168* sret %0, %class.SkBitmap* dereferenceable(56) %1, i32 0) #13
  br label %9

9:                                                ; preds = %8, %6
  ret void
}

declare void @_Z27SkMakeImageFromRasterBitmapRK8SkBitmap16SkCopyPixelsMode(%class.sk_sp.168* sret, %class.SkBitmap* dereferenceable(56), i32) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK7SkImage14asLegacyBitmapEP8SkBitmapNS_16LegacyBitmapModeE(%class.SkImage*, %class.SkBitmap*, i32) local_unnamed_addr #0 align 2 {
  %4 = bitcast %class.SkImage* %0 to %class.SkImage_Base*
  %5 = bitcast %class.SkImage* %0 to %class.GrImageContext* (%class.SkImage_Base*)***
  %6 = load %class.GrImageContext* (%class.SkImage_Base*)**, %class.GrImageContext* (%class.SkImage_Base*)*** %5, align 8
  %7 = getelementptr inbounds %class.GrImageContext* (%class.SkImage_Base*)*, %class.GrImageContext* (%class.SkImage_Base*)** %6, i64 10
  %8 = load %class.GrImageContext* (%class.SkImage_Base*)*, %class.GrImageContext* (%class.SkImage_Base*)** %7, align 8
  %9 = tail call %class.GrImageContext* %8(%class.SkImage_Base* %4) #13
  %10 = icmp eq %class.GrImageContext* %9, null
  br i1 %10, label %18, label %11

11:                                               ; preds = %3
  %12 = getelementptr inbounds %class.GrImageContext, %class.GrImageContext* %9, i64 0, i32 0
  %13 = bitcast %class.GrImageContext* %9 to %class.GrDirectContext* (%class.GrContext_Base*)***
  %14 = load %class.GrDirectContext* (%class.GrContext_Base*)**, %class.GrDirectContext* (%class.GrContext_Base*)*** %13, align 8
  %15 = getelementptr inbounds %class.GrDirectContext* (%class.GrContext_Base*)*, %class.GrDirectContext* (%class.GrContext_Base*)** %14, i64 3
  %16 = load %class.GrDirectContext* (%class.GrContext_Base*)*, %class.GrDirectContext* (%class.GrContext_Base*)** %15, align 8
  %17 = tail call %class.GrDirectContext* %16(%class.GrContext_Base* nonnull %12) #13
  br label %18

18:                                               ; preds = %3, %11
  %19 = phi %class.GrDirectContext* [ %17, %11 ], [ null, %3 ]
  %20 = bitcast %class.SkImage* %0 to i1 (%class.SkImage_Base*, %class.GrDirectContext*, %class.SkBitmap*)***
  %21 = load i1 (%class.SkImage_Base*, %class.GrDirectContext*, %class.SkBitmap*)**, i1 (%class.SkImage_Base*, %class.GrDirectContext*, %class.SkBitmap*)*** %20, align 8
  %22 = getelementptr inbounds i1 (%class.SkImage_Base*, %class.GrDirectContext*, %class.SkBitmap*)*, i1 (%class.SkImage_Base*, %class.GrDirectContext*, %class.SkBitmap*)** %21, i64 21
  %23 = load i1 (%class.SkImage_Base*, %class.GrDirectContext*, %class.SkBitmap*)*, i1 (%class.SkImage_Base*, %class.GrDirectContext*, %class.SkBitmap*)** %22, align 8
  %24 = tail call zeroext i1 %23(%class.SkImage_Base* %4, %class.GrDirectContext* %19, %class.SkBitmap* %1) #13
  ret i1 %24
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK12SkImage_Base16onAsLegacyBitmapEP15GrDirectContextP8SkBitmap(%class.SkImage_Base*, %class.GrDirectContext*, %class.SkBitmap*) unnamed_addr #0 align 2 {
  %4 = alloca %struct.SkImageInfo, align 8
  %5 = bitcast %struct.SkImageInfo* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %5) #13
  %6 = getelementptr inbounds %struct.SkImageInfo, %struct.SkImageInfo* %4, i64 0, i32 0, i32 0, i32 0
  %7 = getelementptr inbounds %struct.SkImageInfo, %struct.SkImageInfo* %4, i64 0, i32 0, i32 1
  %8 = getelementptr inbounds %struct.SkImageInfo, %struct.SkImageInfo* %4, i64 0, i32 1, i32 0
  %9 = getelementptr inbounds %class.SkImage_Base, %class.SkImage_Base* %0, i64 0, i32 0, i32 2, i32 1
  %10 = bitcast %struct.SkISize* %9 to i64*
  %11 = bitcast %struct.SkImageInfo* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %11, i8 -86, i64 24, i1 false)
  %12 = load i64, i64* %10, align 8, !noalias !29
  %13 = getelementptr inbounds %class.SkImage_Base, %class.SkImage_Base* %0, i64 0, i32 0, i32 2, i32 0, i32 2
  %14 = load i32, i32* %13, align 4, !noalias !32
  %15 = getelementptr inbounds %class.SkImage_Base, %class.SkImage_Base* %0, i64 0, i32 0, i32 2, i32 0, i32 0, i32 0
  %16 = load %class.SkColorSpace*, %class.SkColorSpace** %15, align 8, !noalias !35
  %17 = icmp eq %class.SkColorSpace* %16, null
  br i1 %17, label %21, label %18

18:                                               ; preds = %3
  %19 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %16, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %20 = atomicrmw add i32* %19, i32 1 monotonic, !noalias !35
  br label %21

21:                                               ; preds = %18, %3
  %22 = phi i1 [ false, %18 ], [ true, %3 ]
  %23 = zext i32 %14 to i64
  %24 = shl nuw i64 %23, 32
  %25 = or i64 %24, 6
  %26 = bitcast %struct.SkImageInfo* %4 to i64*
  store i64 0, i64* %26, align 8, !alias.scope !38
  %27 = bitcast i32* %7 to i64*
  store i64 %25, i64* %27, align 8, !alias.scope !38
  %28 = getelementptr inbounds %struct.SkImageInfo, %struct.SkImageInfo* %4, i64 0, i32 1
  %29 = bitcast %struct.SkISize* %28 to i64*
  store i64 %12, i64* %29, align 8, !alias.scope !38
  br i1 %22, label %36, label %30

30:                                               ; preds = %21
  %31 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %16, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %32 = atomicrmw add i32* %31, i32 -1 acq_rel
  %33 = icmp eq i32 %32, 1
  br i1 %33, label %34, label %36

34:                                               ; preds = %30
  %35 = bitcast %class.SkColorSpace* %16 to i8*
  tail call void @_ZdlPv(i8* %35) #14
  br label %36

36:                                               ; preds = %21, %30, %34
  %37 = load i32, i32* %8, align 8
  %38 = sext i32 %37 to i64
  %39 = getelementptr inbounds %struct.SkImageInfo, %struct.SkImageInfo* %4, i64 0, i32 0
  %40 = call i32 @_ZNK11SkColorInfo13bytesPerPixelEv(%class.SkColorInfo* nonnull %39) #13
  %41 = sext i32 %40 to i64
  %42 = mul nsw i64 %41, %38
  %43 = icmp ult i64 %42, 2147483648
  %44 = select i1 %43, i64 %42, i64 0
  %45 = call zeroext i1 @_ZN8SkBitmap14tryAllocPixelsERK11SkImageInfom(%class.SkBitmap* %2, %struct.SkImageInfo* nonnull dereferenceable(24) %4, i64 %44) #13
  br i1 %45, label %46, label %59

46:                                               ; preds = %36
  %47 = getelementptr inbounds %class.SkBitmap, %class.SkBitmap* %2, i64 0, i32 1, i32 2
  %48 = getelementptr inbounds %class.SkBitmap, %class.SkBitmap* %2, i64 0, i32 1, i32 0
  %49 = load i8*, i8** %48, align 8
  %50 = getelementptr inbounds %class.SkBitmap, %class.SkBitmap* %2, i64 0, i32 1, i32 1
  %51 = load i64, i64* %50, align 8
  %52 = bitcast %class.SkImage_Base* %0 to i1 (%class.SkImage_Base*, %class.GrDirectContext*, %struct.SkImageInfo*, i8*, i64, i32, i32, i32)***
  %53 = load i1 (%class.SkImage_Base*, %class.GrDirectContext*, %struct.SkImageInfo*, i8*, i64, i32, i32, i32)**, i1 (%class.SkImage_Base*, %class.GrDirectContext*, %struct.SkImageInfo*, i8*, i64, i32, i32, i32)*** %52, align 8
  %54 = getelementptr inbounds i1 (%class.SkImage_Base*, %class.GrDirectContext*, %struct.SkImageInfo*, i8*, i64, i32, i32, i32)*, i1 (%class.SkImage_Base*, %class.GrDirectContext*, %struct.SkImageInfo*, i8*, i64, i32, i32, i32)** %53, i64 5
  %55 = load i1 (%class.SkImage_Base*, %class.GrDirectContext*, %struct.SkImageInfo*, i8*, i64, i32, i32, i32)*, i1 (%class.SkImage_Base*, %class.GrDirectContext*, %struct.SkImageInfo*, i8*, i64, i32, i32, i32)** %54, align 8
  %56 = call zeroext i1 %55(%class.SkImage_Base* %0, %class.GrDirectContext* %1, %struct.SkImageInfo* dereferenceable(24) %47, i8* %49, i64 %51, i32 0, i32 0, i32 0) #13
  br i1 %56, label %58, label %57

57:                                               ; preds = %46
  call void @_ZN8SkBitmap5resetEv(%class.SkBitmap* %2) #13
  br label %59

58:                                               ; preds = %46
  call void @_ZN8SkBitmap12setImmutableEv(%class.SkBitmap* %2) #13
  br label %59

59:                                               ; preds = %36, %58, %57
  %60 = phi i1 [ true, %58 ], [ false, %57 ], [ false, %36 ]
  %61 = load %class.SkColorSpace*, %class.SkColorSpace** %6, align 8
  %62 = icmp eq %class.SkColorSpace* %61, null
  br i1 %62, label %69, label %63

63:                                               ; preds = %59
  %64 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %61, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %65 = atomicrmw add i32* %64, i32 -1 acq_rel
  %66 = icmp eq i32 %65, 1
  br i1 %66, label %67, label %69

67:                                               ; preds = %63
  %68 = bitcast %class.SkColorSpace* %61 to i8*
  call void @_ZdlPv(i8* %68) #14
  br label %69

69:                                               ; preds = %59, %63, %67
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %5) #13
  ret i1 %60
}

declare void @_ZN8SkBitmap5resetEv(%class.SkBitmap*) local_unnamed_addr #1

declare void @_ZN8SkBitmap12setImmutableEv(%class.SkBitmap*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN7SkImage15MakeFromPictureE5sk_spI9SkPictureERK7SkISizePK8SkMatrixPK7SkPaintNS_8BitDepthES0_I12SkColorSpaceE(%class.sk_sp.168* noalias sret, %class.sk_sp.209* nocapture, %struct.SkISize* dereferenceable(8), %class.SkMatrix*, %class.SkPaint*, i32, %class.sk_sp* nocapture) local_unnamed_addr #0 align 2 {
  %8 = alloca %class.sk_sp.209, align 8
  %9 = alloca %class.sk_sp, align 8
  %10 = getelementptr inbounds %class.sk_sp.209, %class.sk_sp.209* %1, i64 0, i32 0
  %11 = bitcast %class.sk_sp.209* %1 to i64*
  %12 = load i64, i64* %11, align 8
  store %class.SkPicture* null, %class.SkPicture** %10, align 8
  %13 = bitcast %class.sk_sp.209* %8 to i64*
  store i64 %12, i64* %13, align 8
  %14 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %6, i64 0, i32 0
  %15 = bitcast %class.sk_sp* %6 to i64*
  %16 = load i64, i64* %15, align 8
  store %class.SkColorSpace* null, %class.SkColorSpace** %14, align 8
  %17 = bitcast %class.sk_sp* %9 to i64*
  store i64 %16, i64* %17, align 8
  %18 = call %class.SkImageGenerator* @_ZN16SkImageGenerator15MakeFromPictureERK7SkISize5sk_spI9SkPictureEPK8SkMatrixPK7SkPaintN7SkImage8BitDepthES3_I12SkColorSpaceE(%struct.SkISize* dereferenceable(8) %2, %class.sk_sp.209* nonnull %8, %class.SkMatrix* %3, %class.SkPaint* %4, i32 %5, %class.sk_sp* nonnull %9) #13
  call void @_ZN7SkImage17MakeFromGeneratorENSt3__110unique_ptrI16SkImageGeneratorNS0_14default_deleteIS2_EEEE(%class.sk_sp.168* sret %0, %class.SkImageGenerator* %18) #13
  %19 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %9, i64 0, i32 0
  %20 = load %class.SkColorSpace*, %class.SkColorSpace** %19, align 8
  %21 = icmp eq %class.SkColorSpace* %20, null
  br i1 %21, label %28, label %22

22:                                               ; preds = %7
  %23 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %20, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %24 = atomicrmw add i32* %23, i32 -1 acq_rel
  %25 = icmp eq i32 %24, 1
  br i1 %25, label %26, label %28

26:                                               ; preds = %22
  %27 = bitcast %class.SkColorSpace* %20 to i8*
  call void @_ZdlPv(i8* %27) #14
  br label %28

28:                                               ; preds = %7, %22, %26
  %29 = getelementptr inbounds %class.sk_sp.209, %class.sk_sp.209* %8, i64 0, i32 0
  %30 = load %class.SkPicture*, %class.SkPicture** %29, align 8
  %31 = icmp eq %class.SkPicture* %30, null
  br i1 %31, label %42, label %32

32:                                               ; preds = %28
  %33 = getelementptr inbounds %class.SkPicture, %class.SkPicture* %30, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %34 = atomicrmw add i32* %33, i32 -1 acq_rel
  %35 = icmp eq i32 %34, 1
  br i1 %35, label %36, label %42

36:                                               ; preds = %32
  %37 = bitcast %class.SkPicture* %30 to %class.SkRefCntBase*
  %38 = bitcast %class.SkPicture* %30 to void (%class.SkRefCntBase*)***
  %39 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %38, align 8
  %40 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %39, i64 2
  %41 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %40, align 8
  call void %41(%class.SkRefCntBase* nonnull %37) #13
  br label %42

42:                                               ; preds = %28, %32, %36
  ret void
}

declare %class.SkImageGenerator* @_ZN16SkImageGenerator15MakeFromPictureERK7SkISize5sk_spI9SkPictureEPK8SkMatrixPK7SkPaintN7SkImage8BitDepthES3_I12SkColorSpaceE(%struct.SkISize* dereferenceable(8), %class.sk_sp.209*, %class.SkMatrix*, %class.SkPaint*, i32, %class.sk_sp*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK7SkImage14makeWithFilterEP18GrRecordingContextPK13SkImageFilterRK7SkIRectS7_PS5_P8SkIPoint(%class.sk_sp.168* noalias sret, %class.SkImage*, %class.GrRecordingContext*, %class.SkImageFilter*, %struct.SkIRect* dereferenceable(16), %struct.SkIRect* nocapture readonly dereferenceable(16), %struct.SkIRect*, %struct.SkIPoint*) local_unnamed_addr #0 align 2 {
  %9 = alloca %class.sk_sp.210, align 8
  %10 = alloca %class.sk_sp.168, align 8
  %11 = alloca %class.SkSurfaceProps, align 4
  %12 = alloca %"class.skif::Context", align 8
  %13 = alloca %class.SkMatrix, align 16
  %14 = alloca %"class.skif::FilterResult.213", align 8
  %15 = alloca <4 x i32>, align 16
  %16 = bitcast <4 x i32>* %15 to %struct.SkIRect*
  %17 = alloca { i64, i64 }, align 8
  %18 = bitcast { i64, i64 }* %17 to %struct.SkIRect*
  %19 = icmp ne %class.SkImageFilter* %3, null
  %20 = icmp ne %struct.SkIRect* %6, null
  %21 = and i1 %19, %20
  %22 = icmp ne %struct.SkIPoint* %7, null
  %23 = and i1 %21, %22
  br i1 %23, label %24, label %67

24:                                               ; preds = %8
  %25 = getelementptr inbounds %class.SkImage, %class.SkImage* %1, i64 0, i32 2, i32 1, i32 0
  %26 = load i32, i32* %25, align 4
  %27 = getelementptr inbounds %class.SkImage, %class.SkImage* %1, i64 0, i32 2, i32 1, i32 1
  %28 = load i32, i32* %27, align 4
  %29 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %4, i64 0, i32 2
  %30 = load i32, i32* %29, align 4
  %31 = sext i32 %30 to i64
  %32 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %4, i64 0, i32 0
  %33 = load i32, i32* %32, align 4
  %34 = sext i32 %33 to i64
  %35 = sub nsw i64 %31, %34
  %36 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %4, i64 0, i32 3
  %37 = load i32, i32* %36, align 4
  %38 = sext i32 %37 to i64
  %39 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %4, i64 0, i32 1
  %40 = load i32, i32* %39, align 4
  %41 = sext i32 %40 to i64
  %42 = sub nsw i64 %38, %41
  %43 = icmp slt i64 %35, 1
  %44 = icmp slt i64 %42, 1
  %45 = or i1 %43, %44
  br i1 %45, label %67, label %46

46:                                               ; preds = %24
  %47 = or i64 %42, %35
  %48 = add nsw i64 %47, 2147483648
  %49 = icmp ugt i64 %48, 4294967295
  br i1 %49, label %67, label %50

50:                                               ; preds = %46
  %51 = icmp slt i32 %26, 1
  %52 = icmp slt i32 %28, 1
  %53 = or i1 %51, %52
  br i1 %53, label %67, label %54

54:                                               ; preds = %50
  %55 = or i32 %28, %26
  %56 = sext i32 %55 to i64
  %57 = add nsw i64 %56, 2147483648
  %58 = icmp ugt i64 %57, 4294967295
  %59 = or i32 %40, %33
  %60 = icmp slt i32 %59, 0
  %61 = or i1 %58, %60
  %62 = icmp slt i32 %26, %30
  %63 = or i1 %62, %61
  %64 = icmp sge i32 %28, %37
  %65 = xor i1 %63, true
  %66 = and i1 %64, %65
  br i1 %66, label %69, label %67

67:                                               ; preds = %24, %46, %50, %8, %54
  %68 = getelementptr inbounds %class.sk_sp.168, %class.sk_sp.168* %0, i64 0, i32 0
  store %class.SkImage* null, %class.SkImage** %68, align 8
  br label %350

69:                                               ; preds = %54
  %70 = bitcast %class.SkImage* %1 to %class.SkImage_Base*
  %71 = bitcast %class.SkImage* %1 to %class.GrImageContext* (%class.SkImage_Base*)***
  %72 = load %class.GrImageContext* (%class.SkImage_Base*)**, %class.GrImageContext* (%class.SkImage_Base*)*** %71, align 8
  %73 = getelementptr inbounds %class.GrImageContext* (%class.SkImage_Base*)*, %class.GrImageContext* (%class.SkImage_Base*)** %72, i64 10
  %74 = load %class.GrImageContext* (%class.SkImage_Base*)*, %class.GrImageContext* (%class.SkImage_Base*)** %73, align 8
  %75 = tail call %class.GrImageContext* %74(%class.SkImage_Base* %70) #13
  %76 = icmp eq %class.GrImageContext* %75, null
  br i1 %76, label %87, label %77

77:                                               ; preds = %69
  %78 = icmp eq %class.GrRecordingContext* %2, null
  br i1 %78, label %85, label %79

79:                                               ; preds = %77
  %80 = getelementptr inbounds %class.GrRecordingContext, %class.GrRecordingContext* %2, i64 0, i32 0, i32 0
  %81 = getelementptr inbounds %class.GrImageContext, %class.GrImageContext* %75, i64 0, i32 0
  %82 = tail call i32 @_ZNK14GrContext_Base9contextIDEv(%class.GrContext_Base* nonnull %80) #13
  %83 = tail call i32 @_ZNK14GrContext_Base9contextIDEv(%class.GrContext_Base* %81) #13
  %84 = icmp eq i32 %82, %83
  br i1 %84, label %87, label %85

85:                                               ; preds = %79, %77
  %86 = getelementptr inbounds %class.sk_sp.168, %class.sk_sp.168* %0, i64 0, i32 0
  store %class.SkImage* null, %class.SkImage** %86, align 8
  br label %350

87:                                               ; preds = %69, %79
  %88 = bitcast %class.sk_sp.210* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %88) #13
  %89 = icmp eq %class.SkImage* %1, null
  br i1 %89, label %93, label %90

90:                                               ; preds = %87
  %91 = getelementptr inbounds %class.SkImage, %class.SkImage* %1, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %92 = atomicrmw add i32* %91, i32 1 monotonic, !noalias !43
  br label %93

93:                                               ; preds = %90, %87
  %94 = getelementptr inbounds %class.sk_sp.168, %class.sk_sp.168* %10, i64 0, i32 0
  store %class.SkImage* %1, %class.SkImage** %94, align 8, !alias.scope !43
  %95 = bitcast %class.SkSurfaceProps* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %95) #13
  call void @_ZN14SkSurfacePropsC1Ev(%class.SkSurfaceProps* nonnull %11) #13
  call void @_ZN14SkSpecialImage13MakeFromImageEP18GrRecordingContextRK7SkIRect5sk_spI7SkImageERK14SkSurfaceProps(%class.sk_sp.210* nonnull sret %9, %class.GrRecordingContext* %2, %struct.SkIRect* dereferenceable(16) %4, %class.sk_sp.168* nonnull %10, %class.SkSurfaceProps* nonnull dereferenceable(8) %11) #13
  %96 = getelementptr inbounds %class.sk_sp.210, %class.sk_sp.210* %9, i64 0, i32 0
  %97 = bitcast %class.sk_sp.210* %9 to i64*
  %98 = load i64, i64* %97, align 8
  store %class.SkSpecialImage* null, %class.SkSpecialImage** %96, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %95) #13
  %99 = load %class.SkImage*, %class.SkImage** %94, align 8
  %100 = icmp eq %class.SkImage* %99, null
  br i1 %100, label %111, label %101

101:                                              ; preds = %93
  %102 = getelementptr inbounds %class.SkImage, %class.SkImage* %99, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %103 = atomicrmw add i32* %102, i32 -1 acq_rel
  %104 = icmp eq i32 %103, 1
  br i1 %104, label %105, label %111

105:                                              ; preds = %101
  %106 = bitcast %class.SkImage* %99 to %class.SkRefCntBase*
  %107 = bitcast %class.SkImage* %99 to void (%class.SkRefCntBase*)***
  %108 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %107, align 8
  %109 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %108, i64 2
  %110 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %109, align 8
  call void %110(%class.SkRefCntBase* nonnull %106) #13
  br label %111

111:                                              ; preds = %93, %101, %105
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %88) #13
  %112 = icmp eq i64 %98, 0
  br i1 %112, label %337, label %113

113:                                              ; preds = %111
  %114 = inttoptr i64 %98 to %class.SkSpecialImage*
  %115 = call %class.SkImageFilterCache* @_ZN18SkImageFilterCache6CreateEm(i64 33554432) #13
  %116 = bitcast %"class.skif::Context"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 136, i8* nonnull %116) #13
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %116, i8* align 8 bitcast ({ %"class.skif::Mapping", %"class.skif::LayerSpace", %class.SkImageFilterCache*, i32, [4 x i8], %class.SkColorSpace*, %"class.skif::FilterResult" }* @__const._ZNK7SkImage14makeWithFilterEP18GrRecordingContextPK13SkImageFilterRK7SkIRectS7_PS5_P8SkIPoint.context to i8*), i64 136, i1 false)
  %117 = bitcast %class.SkMatrix* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %117) #13
  %118 = load i32, i32* %32, align 4
  %119 = sub nsw i32 0, %118
  %120 = sitofp i32 %119 to float
  %121 = load i32, i32* %39, align 4
  %122 = sub nsw i32 0, %121
  %123 = sitofp i32 %122 to float
  %124 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %13, i64 0, i32 1
  %125 = bitcast %class.SkMatrix* %13 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00>, <4 x float>* %125, align 16, !alias.scope !46
  %126 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %13, i64 0, i32 0, i64 4
  %127 = bitcast float* %126 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00>, <4 x float>* %127, align 16, !alias.scope !46
  %128 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %13, i64 0, i32 0, i64 8
  store float 1.000000e+00, float* %128, align 16, !alias.scope !46
  store i32 16, i32* %124, align 4, !alias.scope !46
  %129 = call dereferenceable(40) %class.SkMatrix* @_ZN8SkMatrix12setTranslateEff(%class.SkMatrix* nonnull %13, float %120, float %123) #13
  %130 = load i32, i32* %32, align 4
  %131 = load i32, i32* %39, align 4
  %132 = sub nsw i32 0, %130
  %133 = sub nsw i32 0, %131
  %134 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %5, i64 0, i32 0
  %135 = load i32, i32* %134, align 4
  %136 = sext i32 %135 to i64
  %137 = sext i32 %132 to i64
  %138 = add nsw i64 %136, %137
  %139 = icmp slt i64 %138, 2147483647
  %140 = select i1 %139, i64 %138, i64 2147483647
  %141 = icmp sgt i64 %140, -2147483647
  %142 = select i1 %141, i64 %140, i64 -2147483647
  %143 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %5, i64 0, i32 1
  %144 = load i32, i32* %143, align 4
  %145 = sext i32 %144 to i64
  %146 = sext i32 %133 to i64
  %147 = add nsw i64 %145, %146
  %148 = icmp slt i64 %147, 2147483647
  %149 = select i1 %148, i64 %147, i64 2147483647
  %150 = icmp sgt i64 %149, -2147483647
  %151 = select i1 %150, i64 %149, i64 -2147483647
  %152 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %5, i64 0, i32 2
  %153 = load i32, i32* %152, align 4
  %154 = sext i32 %153 to i64
  %155 = add nsw i64 %154, %137
  %156 = icmp slt i64 %155, 2147483647
  %157 = select i1 %156, i64 %155, i64 2147483647
  %158 = icmp sgt i64 %157, -2147483647
  %159 = select i1 %158, i64 %157, i64 -2147483647
  %160 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %5, i64 0, i32 3
  %161 = load i32, i32* %160, align 4
  %162 = sext i32 %161 to i64
  %163 = add nsw i64 %162, %146
  %164 = icmp slt i64 %163, 2147483647
  %165 = select i1 %164, i64 %163, i64 2147483647
  %166 = icmp sgt i64 %165, -2147483647
  %167 = select i1 %166, i64 %165, i64 -2147483647
  %168 = shl nsw i64 %151, 32
  %169 = and i64 %142, 4294967295
  %170 = or i64 %168, %169
  %171 = shl nsw i64 %167, 32
  %172 = and i64 %159, 4294967295
  %173 = or i64 %171, %172
  %174 = getelementptr inbounds %class.SkImage, %class.SkImage* %1, i64 0, i32 2, i32 0, i32 1
  %175 = load i32, i32* %174, align 8
  %176 = getelementptr inbounds %class.SkImage, %class.SkImage* %1, i64 0, i32 2, i32 0, i32 0, i32 0
  %177 = bitcast %class.SkColorSpace** %176 to i64*
  %178 = load i64, i64* %177, align 8
  %179 = call dereferenceable(40) %class.SkMatrix* @_ZN8SkMatrix1IEv() #13
  %180 = bitcast %class.SkMatrix* %179 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %116, i8* align 4 %180, i64 40, i1 false) #13
  %181 = getelementptr inbounds %"class.skif::Context", %"class.skif::Context"* %12, i64 0, i32 0, i32 1
  %182 = bitcast %class.SkMatrix* %181 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %182, i8* nonnull align 16 %117, i64 40, i1 false) #13
  %183 = getelementptr inbounds %"class.skif::Context", %"class.skif::Context"* %12, i64 0, i32 1
  %184 = bitcast %"class.skif::LayerSpace"* %183 to i64*
  store i64 %170, i64* %184, align 8
  %185 = getelementptr inbounds %"class.skif::Context", %"class.skif::Context"* %12, i64 0, i32 1, i32 0, i32 2
  %186 = bitcast i32* %185 to i64*
  store i64 %173, i64* %186, align 8
  %187 = getelementptr inbounds %"class.skif::Context", %"class.skif::Context"* %12, i64 0, i32 2
  store %class.SkImageFilterCache* %115, %class.SkImageFilterCache** %187, align 8
  %188 = getelementptr inbounds %"class.skif::Context", %"class.skif::Context"* %12, i64 0, i32 3
  store i32 %175, i32* %188, align 8
  %189 = getelementptr inbounds %"class.skif::Context", %"class.skif::Context"* %12, i64 0, i32 4
  %190 = bitcast %class.SkColorSpace** %189 to i64*
  store i64 %178, i64* %190, align 8
  %191 = getelementptr inbounds %"class.skif::Context", %"class.skif::Context"* %12, i64 0, i32 5
  %192 = getelementptr inbounds %class.SkSpecialImage, %class.SkSpecialImage* %114, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %193 = atomicrmw add i32* %192, i32 1 monotonic, !noalias !49
  %194 = bitcast %"class.skif::FilterResult"* %191 to i64*
  store i64 %98, i64* %194, align 8
  %195 = getelementptr inbounds %"class.skif::Context", %"class.skif::Context"* %12, i64 0, i32 5, i32 1
  %196 = bitcast %"class.skif::LayerSpace.212"* %195 to i64*
  store i64 0, i64* %196, align 8
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %117) #13
  %197 = bitcast %"class.skif::FilterResult.213"* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %197) #13
  %198 = bitcast %class.SkImageFilter* %3 to %class.SkImageFilter_Base*
  call void @_ZNK18SkImageFilter_Base11filterImageERKN4skif7ContextE(%"class.skif::FilterResult.213"* nonnull sret %14, %class.SkImageFilter_Base* nonnull %198, %"class.skif::Context"* nonnull dereferenceable(136) %12) #13
  %199 = getelementptr inbounds %"class.skif::FilterResult.213", %"class.skif::FilterResult.213"* %14, i64 0, i32 0, i32 0
  %200 = load %class.SkSpecialImage*, %class.SkSpecialImage** %199, align 8, !noalias !52
  %201 = icmp eq %class.SkSpecialImage* %200, null
  br i1 %201, label %217, label %202

202:                                              ; preds = %113
  %203 = getelementptr inbounds %"class.skif::FilterResult.213", %"class.skif::FilterResult.213"* %14, i64 0, i32 1, i32 0
  %204 = bitcast %struct.SkIPoint* %203 to i64*
  %205 = load i64, i64* %204, align 8, !noalias !52
  %206 = bitcast %struct.SkIPoint* %7 to i64*
  store i64 %205, i64* %206, align 4, !noalias !52
  %207 = getelementptr inbounds %class.SkSpecialImage, %class.SkSpecialImage* %200, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %208 = atomicrmw add i32* %207, i32 1 monotonic, !noalias !52
  %209 = atomicrmw add i32* %207, i32 -1 acq_rel
  %210 = icmp eq i32 %209, 1
  br i1 %210, label %211, label %221

211:                                              ; preds = %202
  %212 = bitcast %class.SkSpecialImage* %200 to %class.SkRefCntBase*
  %213 = bitcast %class.SkSpecialImage* %200 to void (%class.SkRefCntBase*)***
  %214 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %213, align 8
  %215 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %214, i64 2
  %216 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %215, align 8
  call void %216(%class.SkRefCntBase* nonnull %212) #13
  br label %221

217:                                              ; preds = %113
  %218 = getelementptr inbounds %struct.SkIPoint, %struct.SkIPoint* %7, i64 0, i32 0
  store i32 0, i32* %218, align 4, !noalias !52
  %219 = getelementptr inbounds %struct.SkIPoint, %struct.SkIPoint* %7, i64 0, i32 1
  store i32 0, i32* %219, align 4, !noalias !52
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %197) #13
  %220 = getelementptr inbounds %class.sk_sp.168, %class.sk_sp.168* %0, i64 0, i32 0
  store %class.SkImage* null, %class.SkImage** %220, align 8
  br label %311

221:                                              ; preds = %202, %211
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %197) #13
  %222 = load i32, i32* %32, align 4
  %223 = getelementptr inbounds %struct.SkIPoint, %struct.SkIPoint* %7, i64 0, i32 0
  %224 = load i32, i32* %223, align 4
  %225 = add nsw i32 %224, %222
  store i32 %225, i32* %223, align 4
  %226 = load i32, i32* %39, align 4
  %227 = getelementptr inbounds %struct.SkIPoint, %struct.SkIPoint* %7, i64 0, i32 1
  %228 = load i32, i32* %227, align 4
  %229 = add nsw i32 %228, %226
  store i32 %229, i32* %227, align 4
  %230 = getelementptr inbounds %class.SkSpecialImage, %class.SkSpecialImage* %200, i64 0, i32 2, i32 0
  %231 = bitcast i32* %230 to <4 x i32>*
  %232 = load <4 x i32>, <4 x i32>* %231, align 4
  %233 = bitcast <4 x i32>* %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %233) #13
  store <4 x i32> %232, <4 x i32>* %15, align 16
  %234 = bitcast { i64, i64 }* %17 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %234) #13
  %235 = extractelement <4 x i32> %232, i32 0
  %236 = sext i32 %235 to i64
  %237 = sext i32 %225 to i64
  %238 = sub nsw i64 %236, %237
  %239 = icmp slt i64 %238, 2147483647
  %240 = select i1 %239, i64 %238, i64 2147483647
  %241 = icmp sgt i64 %240, -2147483647
  %242 = select i1 %241, i64 %240, i64 -2147483647
  %243 = extractelement <4 x i32> %232, i32 1
  %244 = sext i32 %243 to i64
  %245 = sext i32 %229 to i64
  %246 = sub nsw i64 %244, %245
  %247 = icmp slt i64 %246, 2147483647
  %248 = select i1 %247, i64 %246, i64 2147483647
  %249 = icmp sgt i64 %248, -2147483647
  %250 = select i1 %249, i64 %248, i64 -2147483647
  %251 = load i32, i32* %134, align 4
  %252 = sext i32 %251 to i64
  %253 = add nsw i64 %242, %252
  %254 = icmp slt i64 %253, 2147483647
  %255 = select i1 %254, i64 %253, i64 2147483647
  %256 = icmp sgt i64 %255, -2147483647
  %257 = select i1 %256, i64 %255, i64 -2147483647
  %258 = load i32, i32* %143, align 4
  %259 = sext i32 %258 to i64
  %260 = add nsw i64 %250, %259
  %261 = icmp slt i64 %260, 2147483647
  %262 = select i1 %261, i64 %260, i64 2147483647
  %263 = icmp sgt i64 %262, -2147483647
  %264 = select i1 %263, i64 %262, i64 -2147483647
  %265 = load i32, i32* %152, align 4
  %266 = sext i32 %265 to i64
  %267 = add nsw i64 %242, %266
  %268 = icmp slt i64 %267, 2147483647
  %269 = select i1 %268, i64 %267, i64 2147483647
  %270 = icmp sgt i64 %269, -2147483647
  %271 = select i1 %270, i64 %269, i64 -2147483647
  %272 = load i32, i32* %160, align 4
  %273 = sext i32 %272 to i64
  %274 = add nsw i64 %250, %273
  %275 = icmp slt i64 %274, 2147483647
  %276 = select i1 %275, i64 %274, i64 2147483647
  %277 = icmp sgt i64 %276, -2147483647
  %278 = select i1 %277, i64 %276, i64 -2147483647
  %279 = shl nsw i64 %264, 32
  %280 = and i64 %257, 4294967295
  %281 = or i64 %279, %280
  %282 = shl nsw i64 %278, 32
  %283 = and i64 %271, 4294967295
  %284 = or i64 %282, %283
  %285 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %17, i64 0, i32 0
  store i64 %281, i64* %285, align 8
  %286 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %17, i64 0, i32 1
  store i64 %284, i64* %286, align 8
  %287 = call zeroext i1 @_ZN7SkIRect9intersectERKS_S1_(%struct.SkIRect* nonnull %16, %struct.SkIRect* nonnull dereferenceable(16) %16, %struct.SkIRect* nonnull dereferenceable(16) %18) #13
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %234) #13
  br i1 %287, label %290, label %288

288:                                              ; preds = %221
  %289 = getelementptr inbounds %class.sk_sp.168, %class.sk_sp.168* %0, i64 0, i32 0
  store %class.SkImage* null, %class.SkImage** %289, align 8
  br label %302

290:                                              ; preds = %221
  %291 = getelementptr inbounds <4 x i32>, <4 x i32>* %15, i64 0, i64 0
  %292 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %16, i64 0, i32 1
  %293 = load i32, i32* %291, align 16
  %294 = sub i32 %293, %235
  %295 = load i32, i32* %223, align 4
  %296 = add nsw i32 %294, %295
  store i32 %296, i32* %223, align 4
  %297 = load i32, i32* %292, align 4
  %298 = sub i32 %297, %243
  %299 = load i32, i32* %227, align 4
  %300 = add nsw i32 %298, %299
  store i32 %300, i32* %227, align 4
  %301 = bitcast %struct.SkIRect* %6 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %301, i8* nonnull align 16 %233, i64 16, i1 false)
  call void @_ZNK14SkSpecialImage7asImageEPK7SkIRect(%class.sk_sp.168* sret %0, %class.SkSpecialImage* nonnull %200, %struct.SkIRect* null) #13
  br label %302

302:                                              ; preds = %290, %288
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %233) #13
  %303 = atomicrmw add i32* %207, i32 -1 acq_rel
  %304 = icmp eq i32 %303, 1
  br i1 %304, label %305, label %311

305:                                              ; preds = %302
  %306 = bitcast %class.SkSpecialImage* %200 to %class.SkRefCntBase*
  %307 = bitcast %class.SkSpecialImage* %200 to void (%class.SkRefCntBase*)***
  %308 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %307, align 8
  %309 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %308, i64 2
  %310 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %309, align 8
  call void %310(%class.SkRefCntBase* nonnull %306) #13
  br label %311

311:                                              ; preds = %217, %302, %305
  %312 = getelementptr inbounds %"class.skif::Context", %"class.skif::Context"* %12, i64 0, i32 5, i32 0, i32 0
  %313 = load %class.SkSpecialImage*, %class.SkSpecialImage** %312, align 8
  %314 = icmp eq %class.SkSpecialImage* %313, null
  br i1 %314, label %325, label %315

315:                                              ; preds = %311
  %316 = getelementptr inbounds %class.SkSpecialImage, %class.SkSpecialImage* %313, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %317 = atomicrmw add i32* %316, i32 -1 acq_rel
  %318 = icmp eq i32 %317, 1
  br i1 %318, label %319, label %325

319:                                              ; preds = %315
  %320 = bitcast %class.SkSpecialImage* %313 to %class.SkRefCntBase*
  %321 = bitcast %class.SkSpecialImage* %313 to void (%class.SkRefCntBase*)***
  %322 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %321, align 8
  %323 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %322, i64 2
  %324 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %323, align 8
  call void %324(%class.SkRefCntBase* nonnull %320) #13
  br label %325

325:                                              ; preds = %311, %315, %319
  call void @llvm.lifetime.end.p0i8(i64 136, i8* nonnull %116) #13
  %326 = icmp eq %class.SkImageFilterCache* %115, null
  br i1 %326, label %339, label %327

327:                                              ; preds = %325
  %328 = getelementptr inbounds %class.SkImageFilterCache, %class.SkImageFilterCache* %115, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %329 = atomicrmw add i32* %328, i32 -1 acq_rel
  %330 = icmp eq i32 %329, 1
  br i1 %330, label %331, label %339

331:                                              ; preds = %327
  %332 = bitcast %class.SkImageFilterCache* %115 to %class.SkRefCntBase*
  %333 = bitcast %class.SkImageFilterCache* %115 to void (%class.SkRefCntBase*)***
  %334 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %333, align 8
  %335 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %334, i64 2
  %336 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %335, align 8
  call void %336(%class.SkRefCntBase* nonnull %332) #13
  br label %339

337:                                              ; preds = %111
  %338 = getelementptr inbounds %class.sk_sp.168, %class.sk_sp.168* %0, i64 0, i32 0
  store %class.SkImage* null, %class.SkImage** %338, align 8
  br label %350

339:                                              ; preds = %331, %327, %325
  %340 = inttoptr i64 %98 to %class.SkSpecialImage*
  %341 = getelementptr inbounds %class.SkSpecialImage, %class.SkSpecialImage* %340, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %342 = atomicrmw add i32* %341, i32 -1 acq_rel
  %343 = icmp eq i32 %342, 1
  br i1 %343, label %344, label %350

344:                                              ; preds = %339
  %345 = inttoptr i64 %98 to %class.SkRefCntBase*
  %346 = inttoptr i64 %98 to void (%class.SkRefCntBase*)***
  %347 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %346, align 8
  %348 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %347, i64 2
  %349 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %348, align 8
  call void %349(%class.SkRefCntBase* nonnull %345) #13
  br label %350

350:                                              ; preds = %337, %344, %339, %85, %67
  ret void
}

declare void @_ZN14SkSpecialImage13MakeFromImageEP18GrRecordingContextRK7SkIRect5sk_spI7SkImageERK14SkSurfaceProps(%class.sk_sp.210* sret, %class.GrRecordingContext*, %struct.SkIRect* dereferenceable(16), %class.sk_sp.168*, %class.SkSurfaceProps* dereferenceable(8)) local_unnamed_addr #1

declare void @_ZN14SkSurfacePropsC1Ev(%class.SkSurfaceProps*) unnamed_addr #1

declare %class.SkImageFilterCache* @_ZN18SkImageFilterCache6CreateEm(i64) local_unnamed_addr #1

declare void @_ZNK18SkImageFilter_Base11filterImageERKN4skif7ContextE(%"class.skif::FilterResult.213"* sret, %class.SkImageFilter_Base*, %"class.skif::Context"* dereferenceable(136)) local_unnamed_addr #1

declare void @_ZNK14SkSpecialImage7asImageEPK7SkIRect(%class.sk_sp.168* sret, %class.SkSpecialImage*, %struct.SkIRect*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK7SkImage15isLazyGeneratedEv(%class.SkImage*) local_unnamed_addr #0 align 2 {
  %2 = bitcast %class.SkImage* %0 to %class.SkImage_Base*
  %3 = bitcast %class.SkImage* %0 to i1 (%class.SkImage_Base*)***
  %4 = load i1 (%class.SkImage_Base*)**, i1 (%class.SkImage_Base*)*** %3, align 8
  %5 = getelementptr inbounds i1 (%class.SkImage_Base*)*, i1 (%class.SkImage_Base*)** %4, i64 22
  %6 = load i1 (%class.SkImage_Base*)*, i1 (%class.SkImage_Base*)** %5, align 8
  %7 = tail call zeroext i1 %6(%class.SkImage_Base* %2) #13
  ret i1 %7
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK7SkImage11isAlphaOnlyEv(%class.SkImage* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %class.SkImage, %class.SkImage* %0, i64 0, i32 2, i32 0, i32 1
  %3 = load i32, i32* %2, align 8
  %4 = icmp ult i32 %3, 21
  br i1 %4, label %6, label %5

5:                                                ; preds = %1
  tail call void @llvm.trap() #13
  unreachable

6:                                                ; preds = %1
  %7 = trunc i32 %3 to i21
  %8 = lshr i21 327682, %7
  %9 = and i21 %8, 1
  %10 = icmp ne i21 %9, 0
  ret i1 %10
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK7SkImage14makeColorSpaceE5sk_spI12SkColorSpaceEP15GrDirectContext(%class.sk_sp.168* noalias sret, %class.SkImage*, %class.sk_sp* nocapture, %class.GrDirectContext*) local_unnamed_addr #0 align 2 {
  %5 = alloca %class.sk_sp, align 8
  %6 = getelementptr inbounds %class.SkImage, %class.SkImage* %1, i64 0, i32 2, i32 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %2, i64 0, i32 0
  %9 = bitcast %class.sk_sp* %2 to i64*
  %10 = load i64, i64* %9, align 8
  store %class.SkColorSpace* null, %class.SkColorSpace** %8, align 8
  %11 = bitcast %class.sk_sp* %5 to i64*
  store i64 %10, i64* %11, align 8
  call void @_ZNK7SkImage26makeColorTypeAndColorSpaceE11SkColorType5sk_spI12SkColorSpaceEP15GrDirectContext(%class.sk_sp.168* sret %0, %class.SkImage* %1, i32 %7, %class.sk_sp* nonnull %5, %class.GrDirectContext* %3)
  %12 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %5, i64 0, i32 0
  %13 = load %class.SkColorSpace*, %class.SkColorSpace** %12, align 8
  %14 = icmp eq %class.SkColorSpace* %13, null
  br i1 %14, label %21, label %15

15:                                               ; preds = %4
  %16 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %13, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %17 = atomicrmw add i32* %16, i32 -1 acq_rel
  %18 = icmp eq i32 %17, 1
  br i1 %18, label %19, label %21

19:                                               ; preds = %15
  %20 = bitcast %class.SkColorSpace* %13 to i8*
  tail call void @_ZdlPv(i8* %20) #14
  br label %21

21:                                               ; preds = %4, %15, %19
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK7SkImage26makeColorTypeAndColorSpaceE11SkColorType5sk_spI12SkColorSpaceEP15GrDirectContext(%class.sk_sp.168* noalias sret, %class.SkImage*, i32, %class.sk_sp* nocapture, %class.GrDirectContext*) local_unnamed_addr #0 align 2 {
  %6 = alloca %class.sk_sp, align 8
  %7 = icmp eq i32 %2, 0
  br i1 %7, label %12, label %8

8:                                                ; preds = %5
  %9 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %3, i64 0, i32 0
  %10 = load %class.SkColorSpace*, %class.SkColorSpace** %9, align 8
  %11 = icmp eq %class.SkColorSpace* %10, null
  br i1 %11, label %12, label %14

12:                                               ; preds = %8, %5
  %13 = getelementptr inbounds %class.sk_sp.168, %class.sk_sp.168* %0, i64 0, i32 0
  store %class.SkImage* null, %class.SkImage** %13, align 8
  br label %73

14:                                               ; preds = %8
  %15 = bitcast %class.SkImage* %1 to %class.SkImage_Base*
  %16 = bitcast %class.SkImage* %1 to %class.GrImageContext* (%class.SkImage_Base*)***
  %17 = load %class.GrImageContext* (%class.SkImage_Base*)**, %class.GrImageContext* (%class.SkImage_Base*)*** %16, align 8
  %18 = getelementptr inbounds %class.GrImageContext* (%class.SkImage_Base*)*, %class.GrImageContext* (%class.SkImage_Base*)** %17, i64 10
  %19 = load %class.GrImageContext* (%class.SkImage_Base*)*, %class.GrImageContext* (%class.SkImage_Base*)** %18, align 8
  %20 = tail call %class.GrImageContext* %19(%class.SkImage_Base* %15) #13
  %21 = icmp eq %class.GrImageContext* %20, null
  br i1 %21, label %32, label %22

22:                                               ; preds = %14
  %23 = icmp eq %class.GrDirectContext* %4, null
  br i1 %23, label %30, label %24

24:                                               ; preds = %22
  %25 = getelementptr inbounds %class.GrDirectContext, %class.GrDirectContext* %4, i64 0, i32 0, i32 0, i32 0
  %26 = getelementptr inbounds %class.GrImageContext, %class.GrImageContext* %20, i64 0, i32 0
  %27 = tail call i32 @_ZNK14GrContext_Base9contextIDEv(%class.GrContext_Base* nonnull %25) #13
  %28 = tail call i32 @_ZNK14GrContext_Base9contextIDEv(%class.GrContext_Base* %26) #13
  %29 = icmp eq i32 %27, %28
  br i1 %29, label %32, label %30

30:                                               ; preds = %22, %24
  %31 = getelementptr inbounds %class.sk_sp.168, %class.sk_sp.168* %0, i64 0, i32 0
  store %class.SkImage* null, %class.SkImage** %31, align 8
  br label %73

32:                                               ; preds = %14, %24
  %33 = getelementptr inbounds %class.SkImage, %class.SkImage* %1, i64 0, i32 2, i32 0, i32 1
  %34 = load i32, i32* %33, align 8
  %35 = getelementptr inbounds %class.SkImage, %class.SkImage* %1, i64 0, i32 2, i32 0, i32 0, i32 0
  %36 = load %class.SkColorSpace*, %class.SkColorSpace** %35, align 8
  %37 = icmp eq %class.SkColorSpace* %36, null
  br i1 %37, label %38, label %40

38:                                               ; preds = %32
  %39 = tail call %class.SkColorSpace* @_Z17sk_srgb_singletonv() #13
  br label %40

40:                                               ; preds = %32, %38
  %41 = phi %class.SkColorSpace* [ %36, %32 ], [ %39, %38 ]
  %42 = icmp eq i32 %34, %2
  br i1 %42, label %43, label %56

43:                                               ; preds = %40
  %44 = load %class.SkColorSpace*, %class.SkColorSpace** %9, align 8
  %45 = tail call zeroext i1 @_ZN12SkColorSpace6EqualsEPKS_S1_(%class.SkColorSpace* %41, %class.SkColorSpace* %44) #13
  br i1 %45, label %49, label %46

46:                                               ; preds = %43
  %47 = load i32, i32* %33, align 8
  switch i32 %47, label %48 [
    i32 0, label %56
    i32 1, label %49
    i32 2, label %56
    i32 3, label %56
    i32 4, label %56
    i32 5, label %56
    i32 6, label %56
    i32 7, label %56
    i32 9, label %56
    i32 8, label %56
    i32 10, label %56
    i32 11, label %56
    i32 12, label %56
    i32 13, label %56
    i32 14, label %56
    i32 15, label %56
    i32 18, label %49
    i32 19, label %56
    i32 16, label %49
    i32 17, label %56
    i32 20, label %56
  ]

48:                                               ; preds = %46
  tail call void @llvm.trap() #13
  unreachable

49:                                               ; preds = %46, %46, %46, %43
  %50 = icmp eq %class.SkImage* %1, null
  br i1 %50, label %54, label %51

51:                                               ; preds = %49
  %52 = getelementptr inbounds %class.SkImage, %class.SkImage* %1, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %53 = atomicrmw add i32* %52, i32 1 monotonic, !noalias !55
  br label %54

54:                                               ; preds = %49, %51
  %55 = getelementptr inbounds %class.sk_sp.168, %class.sk_sp.168* %0, i64 0, i32 0
  store %class.SkImage* %1, %class.SkImage** %55, align 8, !alias.scope !55
  br label %73

56:                                               ; preds = %46, %46, %46, %46, %46, %46, %46, %46, %46, %46, %46, %46, %46, %46, %46, %46, %46, %46, %40
  %57 = bitcast %class.sk_sp* %3 to i64*
  %58 = load i64, i64* %57, align 8
  store %class.SkColorSpace* null, %class.SkColorSpace** %9, align 8
  %59 = bitcast %class.sk_sp* %6 to i64*
  store i64 %58, i64* %59, align 8
  %60 = bitcast %class.SkImage* %1 to void (%class.sk_sp.168*, %class.SkImage_Base*, i32, %class.sk_sp*, %class.GrDirectContext*)***
  %61 = load void (%class.sk_sp.168*, %class.SkImage_Base*, i32, %class.sk_sp*, %class.GrDirectContext*)**, void (%class.sk_sp.168*, %class.SkImage_Base*, i32, %class.sk_sp*, %class.GrDirectContext*)*** %60, align 8
  %62 = getelementptr inbounds void (%class.sk_sp.168*, %class.SkImage_Base*, i32, %class.sk_sp*, %class.GrDirectContext*)*, void (%class.sk_sp.168*, %class.SkImage_Base*, i32, %class.sk_sp*, %class.GrDirectContext*)** %61, i64 27
  %63 = load void (%class.sk_sp.168*, %class.SkImage_Base*, i32, %class.sk_sp*, %class.GrDirectContext*)*, void (%class.sk_sp.168*, %class.SkImage_Base*, i32, %class.sk_sp*, %class.GrDirectContext*)** %62, align 8
  call void %63(%class.sk_sp.168* sret %0, %class.SkImage_Base* %15, i32 %2, %class.sk_sp* nonnull %6, %class.GrDirectContext* %4) #13
  %64 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %6, i64 0, i32 0
  %65 = load %class.SkColorSpace*, %class.SkColorSpace** %64, align 8
  %66 = icmp eq %class.SkColorSpace* %65, null
  br i1 %66, label %73, label %67

67:                                               ; preds = %56
  %68 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %65, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %69 = atomicrmw add i32* %68, i32 -1 acq_rel
  %70 = icmp eq i32 %69, 1
  br i1 %70, label %71, label %73

71:                                               ; preds = %67
  %72 = bitcast %class.SkColorSpace* %65 to i8*
  call void @_ZdlPv(i8* %72) #14
  br label %73

73:                                               ; preds = %71, %67, %56, %30, %54, %12
  ret void
}

declare %class.SkColorSpace* @_Z17sk_srgb_singletonv() local_unnamed_addr #1

declare zeroext i1 @_ZN12SkColorSpace6EqualsEPKS_S1_(%class.SkColorSpace*, %class.SkColorSpace*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK7SkImage21reinterpretColorSpaceE5sk_spI12SkColorSpaceE(%class.sk_sp.168* noalias sret, %class.SkImage*, %class.sk_sp* nocapture) local_unnamed_addr #0 align 2 {
  %4 = alloca %class.sk_sp, align 8
  %5 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %2, i64 0, i32 0
  %6 = load %class.SkColorSpace*, %class.SkColorSpace** %5, align 8
  %7 = icmp eq %class.SkColorSpace* %6, null
  br i1 %7, label %8, label %10

8:                                                ; preds = %3
  %9 = getelementptr inbounds %class.sk_sp.168, %class.sk_sp.168* %0, i64 0, i32 0
  store %class.SkImage* null, %class.SkImage** %9, align 8
  br label %50

10:                                               ; preds = %3
  %11 = getelementptr inbounds %class.SkImage, %class.SkImage* %1, i64 0, i32 2, i32 0, i32 0, i32 0
  %12 = load %class.SkColorSpace*, %class.SkColorSpace** %11, align 8
  %13 = icmp eq %class.SkColorSpace* %12, null
  br i1 %13, label %14, label %17

14:                                               ; preds = %10
  %15 = tail call %class.SkColorSpace* @_Z17sk_srgb_singletonv() #13
  %16 = load %class.SkColorSpace*, %class.SkColorSpace** %5, align 8
  br label %17

17:                                               ; preds = %10, %14
  %18 = phi %class.SkColorSpace* [ %6, %10 ], [ %16, %14 ]
  %19 = phi %class.SkColorSpace* [ %12, %10 ], [ %15, %14 ]
  %20 = tail call zeroext i1 @_ZN12SkColorSpace6EqualsEPKS_S1_(%class.SkColorSpace* %19, %class.SkColorSpace* %18) #13
  br i1 %20, label %25, label %21

21:                                               ; preds = %17
  %22 = getelementptr inbounds %class.SkImage, %class.SkImage* %1, i64 0, i32 2, i32 0, i32 1
  %23 = load i32, i32* %22, align 8
  switch i32 %23, label %24 [
    i32 0, label %32
    i32 1, label %25
    i32 2, label %32
    i32 3, label %32
    i32 4, label %32
    i32 5, label %32
    i32 6, label %32
    i32 7, label %32
    i32 9, label %32
    i32 8, label %32
    i32 10, label %32
    i32 11, label %32
    i32 12, label %32
    i32 13, label %32
    i32 14, label %32
    i32 15, label %32
    i32 18, label %25
    i32 19, label %32
    i32 16, label %25
    i32 17, label %32
    i32 20, label %32
  ]

24:                                               ; preds = %21
  tail call void @llvm.trap() #13
  unreachable

25:                                               ; preds = %21, %21, %21, %17
  %26 = icmp eq %class.SkImage* %1, null
  br i1 %26, label %30, label %27

27:                                               ; preds = %25
  %28 = getelementptr inbounds %class.SkImage, %class.SkImage* %1, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %29 = atomicrmw add i32* %28, i32 1 monotonic, !noalias !58
  br label %30

30:                                               ; preds = %25, %27
  %31 = getelementptr inbounds %class.sk_sp.168, %class.sk_sp.168* %0, i64 0, i32 0
  store %class.SkImage* %1, %class.SkImage** %31, align 8, !alias.scope !58
  br label %50

32:                                               ; preds = %21, %21, %21, %21, %21, %21, %21, %21, %21, %21, %21, %21, %21, %21, %21, %21, %21, %21
  %33 = bitcast %class.SkImage* %1 to %class.SkImage_Base*
  %34 = bitcast %class.sk_sp* %2 to i64*
  %35 = load i64, i64* %34, align 8
  store %class.SkColorSpace* null, %class.SkColorSpace** %5, align 8
  %36 = bitcast %class.sk_sp* %4 to i64*
  store i64 %35, i64* %36, align 8
  %37 = bitcast %class.SkImage* %1 to void (%class.sk_sp.168*, %class.SkImage_Base*, %class.sk_sp*)***
  %38 = load void (%class.sk_sp.168*, %class.SkImage_Base*, %class.sk_sp*)**, void (%class.sk_sp.168*, %class.SkImage_Base*, %class.sk_sp*)*** %37, align 8
  %39 = getelementptr inbounds void (%class.sk_sp.168*, %class.SkImage_Base*, %class.sk_sp*)*, void (%class.sk_sp.168*, %class.SkImage_Base*, %class.sk_sp*)** %38, i64 28
  %40 = load void (%class.sk_sp.168*, %class.SkImage_Base*, %class.sk_sp*)*, void (%class.sk_sp.168*, %class.SkImage_Base*, %class.sk_sp*)** %39, align 8
  call void %40(%class.sk_sp.168* sret %0, %class.SkImage_Base* %33, %class.sk_sp* nonnull %4) #13
  %41 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %4, i64 0, i32 0
  %42 = load %class.SkColorSpace*, %class.SkColorSpace** %41, align 8
  %43 = icmp eq %class.SkColorSpace* %42, null
  br i1 %43, label %50, label %44

44:                                               ; preds = %32
  %45 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %42, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %46 = atomicrmw add i32* %45, i32 -1 acq_rel
  %47 = icmp eq i32 %46, 1
  br i1 %47, label %48, label %50

48:                                               ; preds = %44
  %49 = bitcast %class.SkColorSpace* %42 to i8*
  call void @_ZdlPv(i8* %49) #14
  br label %50

50:                                               ; preds = %48, %44, %32, %30, %8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK7SkImage19makeNonTextureImageEv(%class.sk_sp.168* noalias sret, %class.SkImage*) local_unnamed_addr #0 align 2 {
  %3 = bitcast %class.SkImage* %1 to %class.SkImage_Base*
  %4 = bitcast %class.SkImage* %1 to i1 (%class.SkImage_Base*)***
  %5 = load i1 (%class.SkImage_Base*)**, i1 (%class.SkImage_Base*)*** %4, align 8
  %6 = getelementptr inbounds i1 (%class.SkImage_Base*)*, i1 (%class.SkImage_Base*)** %5, i64 23
  %7 = load i1 (%class.SkImage_Base*)*, i1 (%class.SkImage_Base*)** %6, align 8
  %8 = tail call zeroext i1 %7(%class.SkImage_Base* %3) #13
  br i1 %8, label %16, label %9

9:                                                ; preds = %2
  %10 = icmp eq %class.SkImage* %1, null
  br i1 %10, label %14, label %11

11:                                               ; preds = %9
  %12 = getelementptr inbounds %class.SkImage, %class.SkImage* %1, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %13 = atomicrmw add i32* %12, i32 1 monotonic, !noalias !61
  br label %14

14:                                               ; preds = %9, %11
  %15 = getelementptr inbounds %class.sk_sp.168, %class.sk_sp.168* %0, i64 0, i32 0
  store %class.SkImage* %1, %class.SkImage** %15, align 8, !alias.scope !61
  br label %17

16:                                               ; preds = %2
  tail call void @_ZNK7SkImage15makeRasterImageENS_11CachingHintE(%class.sk_sp.168* sret %0, %class.SkImage* %1, i32 1)
  br label %17

17:                                               ; preds = %16, %14
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK7SkImage15makeRasterImageENS_11CachingHintE(%class.sk_sp.168* noalias sret, %class.SkImage*, i32) local_unnamed_addr #0 align 2 {
  %4 = alloca %class.SkPixmap, align 8
  %5 = alloca %class.sk_sp.97, align 8
  %6 = alloca %class.sk_sp.97, align 8
  %7 = bitcast %class.SkPixmap* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %7) #13
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %7, i8 0, i64 40, i1 false) #13
  %8 = bitcast %class.SkImage* %1 to %class.SkImage_Base*
  %9 = bitcast %class.SkImage* %1 to i1 (%class.SkImage_Base*, %class.SkPixmap*)***
  %10 = load i1 (%class.SkImage_Base*, %class.SkPixmap*)**, i1 (%class.SkImage_Base*, %class.SkPixmap*)*** %9, align 8
  %11 = getelementptr inbounds i1 (%class.SkImage_Base*, %class.SkPixmap*)*, i1 (%class.SkImage_Base*, %class.SkPixmap*)** %10, i64 3
  %12 = load i1 (%class.SkImage_Base*, %class.SkPixmap*)*, i1 (%class.SkImage_Base*, %class.SkPixmap*)** %11, align 8
  %13 = call zeroext i1 %12(%class.SkImage_Base* %8, %class.SkPixmap* nonnull %4) #13
  br i1 %13, label %14, label %21

14:                                               ; preds = %3
  %15 = icmp eq %class.SkImage* %1, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %14
  %17 = getelementptr inbounds %class.SkImage, %class.SkImage* %1, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %18 = atomicrmw add i32* %17, i32 1 monotonic, !noalias !64
  br label %19

19:                                               ; preds = %14, %16
  %20 = getelementptr inbounds %class.sk_sp.168, %class.sk_sp.168* %0, i64 0, i32 0
  store %class.SkImage* %1, %class.SkImage** %20, align 8, !alias.scope !64
  br label %127

21:                                               ; preds = %3
  %22 = getelementptr inbounds %class.SkImage, %class.SkImage* %1, i64 0, i32 2
  %23 = getelementptr inbounds %class.SkImage, %class.SkImage* %1, i64 0, i32 2, i32 1, i32 0
  %24 = load i32, i32* %23, align 4
  %25 = sext i32 %24 to i64
  %26 = getelementptr inbounds %struct.SkImageInfo, %struct.SkImageInfo* %22, i64 0, i32 0
  %27 = call i32 @_ZNK11SkColorInfo13bytesPerPixelEv(%class.SkColorInfo* %26) #13
  %28 = sext i32 %27 to i64
  %29 = mul nsw i64 %28, %25
  %30 = icmp ult i64 %29, 2147483648
  %31 = select i1 %30, i64 %29, i64 0
  %32 = call i64 @_ZNK11SkImageInfo15computeByteSizeEm(%struct.SkImageInfo* %22, i64 %31) #13
  %33 = icmp eq i64 %32, -1
  br i1 %33, label %34, label %36

34:                                               ; preds = %21
  %35 = getelementptr inbounds %class.sk_sp.168, %class.sk_sp.168* %0, i64 0, i32 0
  store %class.SkImage* null, %class.SkImage** %35, align 8
  br label %127

36:                                               ; preds = %21
  %37 = bitcast %class.SkImage* %1 to %class.GrImageContext* (%class.SkImage_Base*)***
  %38 = load %class.GrImageContext* (%class.SkImage_Base*)**, %class.GrImageContext* (%class.SkImage_Base*)*** %37, align 8
  %39 = getelementptr inbounds %class.GrImageContext* (%class.SkImage_Base*)*, %class.GrImageContext* (%class.SkImage_Base*)** %38, i64 10
  %40 = load %class.GrImageContext* (%class.SkImage_Base*)*, %class.GrImageContext* (%class.SkImage_Base*)** %39, align 8
  %41 = call %class.GrImageContext* %40(%class.SkImage_Base* %8) #13
  %42 = icmp eq %class.GrImageContext* %41, null
  br i1 %42, label %50, label %43

43:                                               ; preds = %36
  %44 = getelementptr inbounds %class.GrImageContext, %class.GrImageContext* %41, i64 0, i32 0
  %45 = bitcast %class.GrImageContext* %41 to %class.GrDirectContext* (%class.GrContext_Base*)***
  %46 = load %class.GrDirectContext* (%class.GrContext_Base*)**, %class.GrDirectContext* (%class.GrContext_Base*)*** %45, align 8
  %47 = getelementptr inbounds %class.GrDirectContext* (%class.GrContext_Base*)*, %class.GrDirectContext* (%class.GrContext_Base*)** %46, i64 3
  %48 = load %class.GrDirectContext* (%class.GrContext_Base*)*, %class.GrDirectContext* (%class.GrContext_Base*)** %47, align 8
  %49 = call %class.GrDirectContext* %48(%class.GrContext_Base* nonnull %44) #13
  br label %50

50:                                               ; preds = %43, %36
  %51 = phi %class.GrDirectContext* [ %49, %43 ], [ null, %36 ]
  %52 = bitcast %class.sk_sp.97* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %52) #13
  %53 = getelementptr inbounds %class.sk_sp.97, %class.sk_sp.97* %5, i64 0, i32 0
  store %class.SkData* inttoptr (i64 -6148914691236517206 to %class.SkData*), %class.SkData** %53, align 8
  call void @_ZN6SkData17MakeUninitializedEm(%class.sk_sp.97* nonnull sret %5, i64 %32) #13
  %54 = getelementptr inbounds %class.SkImage, %class.SkImage* %1, i64 0, i32 2, i32 1
  %55 = bitcast %struct.SkISize* %54 to i64*
  %56 = load i64, i64* %55, align 8, !noalias !67
  %57 = getelementptr inbounds %class.SkImage, %class.SkImage* %1, i64 0, i32 2, i32 0, i32 1
  %58 = load i32, i32* %57, align 8, !noalias !70
  %59 = getelementptr inbounds %class.SkImage, %class.SkImage* %1, i64 0, i32 2, i32 0, i32 2
  %60 = load i32, i32* %59, align 4, !noalias !70
  %61 = zext i32 %58 to i64
  %62 = zext i32 %60 to i64
  %63 = shl nuw i64 %62, 32
  %64 = or i64 %63, %61
  %65 = load %class.SkData*, %class.SkData** %53, align 8
  %66 = getelementptr inbounds %class.SkData, %class.SkData* %65, i64 0, i32 3
  %67 = bitcast i8** %66 to i64*
  %68 = load i64, i64* %67, align 8
  %69 = shl i64 %56, 32
  %70 = ashr exact i64 %69, 32
  %71 = call i32 @_ZNK11SkColorInfo13bytesPerPixelEv(%class.SkColorInfo* %26) #13
  %72 = sext i32 %71 to i64
  %73 = mul nsw i64 %70, %72
  %74 = icmp ult i64 %73, 2147483648
  %75 = select i1 %74, i64 %73, i64 0
  %76 = getelementptr inbounds %class.SkPixmap, %class.SkPixmap* %4, i64 0, i32 0
  %77 = bitcast %class.SkPixmap* %4 to i64*
  store i64 %68, i64* %77, align 8
  %78 = getelementptr inbounds %class.SkPixmap, %class.SkPixmap* %4, i64 0, i32 1
  store i64 %75, i64* %78, align 8
  %79 = getelementptr inbounds %class.SkPixmap, %class.SkPixmap* %4, i64 0, i32 2
  %80 = getelementptr inbounds %struct.SkImageInfo, %struct.SkImageInfo* %79, i64 0, i32 0, i32 0, i32 0
  %81 = load %class.SkColorSpace*, %class.SkColorSpace** %80, align 8
  %82 = bitcast %struct.SkImageInfo* %79 to i64*
  store i64 0, i64* %82, align 8
  %83 = icmp eq %class.SkColorSpace* %81, null
  br i1 %83, label %90, label %84

84:                                               ; preds = %50
  %85 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %81, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %86 = atomicrmw add i32* %85, i32 -1 acq_rel
  %87 = icmp eq i32 %86, 1
  br i1 %87, label %88, label %90

88:                                               ; preds = %84
  %89 = bitcast %class.SkColorSpace* %81 to i8*
  call void @_ZdlPv(i8* %89) #14
  br label %90

90:                                               ; preds = %88, %84, %50
  %91 = getelementptr inbounds %class.SkPixmap, %class.SkPixmap* %4, i64 0, i32 2, i32 0, i32 1
  %92 = bitcast i32* %91 to i64*
  store i64 %64, i64* %92, align 8
  %93 = getelementptr inbounds %class.SkPixmap, %class.SkPixmap* %4, i64 0, i32 2, i32 1
  %94 = bitcast %struct.SkISize* %93 to i64*
  store i64 %56, i64* %94, align 8
  %95 = load i8*, i8** %76, align 8
  %96 = load i64, i64* %78, align 8
  %97 = bitcast %class.SkImage* %1 to i1 (%class.SkImage_Base*, %class.GrDirectContext*, %struct.SkImageInfo*, i8*, i64, i32, i32, i32)***
  %98 = load i1 (%class.SkImage_Base*, %class.GrDirectContext*, %struct.SkImageInfo*, i8*, i64, i32, i32, i32)**, i1 (%class.SkImage_Base*, %class.GrDirectContext*, %struct.SkImageInfo*, i8*, i64, i32, i32, i32)*** %97, align 8
  %99 = getelementptr inbounds i1 (%class.SkImage_Base*, %class.GrDirectContext*, %struct.SkImageInfo*, i8*, i64, i32, i32, i32)*, i1 (%class.SkImage_Base*, %class.GrDirectContext*, %struct.SkImageInfo*, i8*, i64, i32, i32, i32)** %98, i64 5
  %100 = load i1 (%class.SkImage_Base*, %class.GrDirectContext*, %struct.SkImageInfo*, i8*, i64, i32, i32, i32)*, i1 (%class.SkImage_Base*, %class.GrDirectContext*, %struct.SkImageInfo*, i8*, i64, i32, i32, i32)** %99, align 8
  %101 = call zeroext i1 %100(%class.SkImage_Base* %8, %class.GrDirectContext* %51, %struct.SkImageInfo* dereferenceable(24) %79, i8* %95, i64 %96, i32 0, i32 0, i32 %2) #13
  br i1 %101, label %104, label %102

102:                                              ; preds = %90
  %103 = getelementptr inbounds %class.sk_sp.168, %class.sk_sp.168* %0, i64 0, i32 0
  store %class.SkImage* null, %class.SkImage** %103, align 8
  br label %117

104:                                              ; preds = %90
  %105 = bitcast %class.sk_sp.97* %5 to i64*
  %106 = load i64, i64* %105, align 8
  store %class.SkData* null, %class.SkData** %53, align 8
  %107 = bitcast %class.sk_sp.97* %6 to i64*
  store i64 %106, i64* %107, align 8
  call void @_ZN7SkImage14MakeRasterDataERK11SkImageInfo5sk_spI6SkDataEm(%class.sk_sp.168* sret %0, %struct.SkImageInfo* dereferenceable(24) %22, %class.sk_sp.97* nonnull %6, i64 %31) #13
  %108 = getelementptr inbounds %class.sk_sp.97, %class.sk_sp.97* %6, i64 0, i32 0
  %109 = load %class.SkData*, %class.SkData** %108, align 8
  %110 = icmp eq %class.SkData* %109, null
  br i1 %110, label %117, label %111

111:                                              ; preds = %104
  %112 = getelementptr inbounds %class.SkData, %class.SkData* %109, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %113 = atomicrmw add i32* %112, i32 -1 acq_rel
  %114 = icmp eq i32 %113, 1
  br i1 %114, label %115, label %117

115:                                              ; preds = %111
  call void @_ZN6SkDataD1Ev(%class.SkData* nonnull %109) #13
  %116 = bitcast %class.SkData* %109 to i8*
  call void @_ZN6SkDatadlEPv(i8* nonnull %116) #13
  br label %117

117:                                              ; preds = %115, %111, %104, %102
  %118 = load %class.SkData*, %class.SkData** %53, align 8
  %119 = icmp eq %class.SkData* %118, null
  br i1 %119, label %126, label %120

120:                                              ; preds = %117
  %121 = getelementptr inbounds %class.SkData, %class.SkData* %118, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %122 = atomicrmw add i32* %121, i32 -1 acq_rel
  %123 = icmp eq i32 %122, 1
  br i1 %123, label %124, label %126

124:                                              ; preds = %120
  call void @_ZN6SkDataD1Ev(%class.SkData* nonnull %118) #13
  %125 = bitcast %class.SkData* %118 to i8*
  call void @_ZN6SkDatadlEPv(i8* nonnull %125) #13
  br label %126

126:                                              ; preds = %117, %120, %124
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %52) #13
  br label %127

127:                                              ; preds = %34, %126, %19
  %128 = getelementptr inbounds %class.SkPixmap, %class.SkPixmap* %4, i64 0, i32 2, i32 0, i32 0, i32 0
  %129 = load %class.SkColorSpace*, %class.SkColorSpace** %128, align 8
  %130 = icmp eq %class.SkColorSpace* %129, null
  br i1 %130, label %137, label %131

131:                                              ; preds = %127
  %132 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %129, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %133 = atomicrmw add i32* %132, i32 -1 acq_rel
  %134 = icmp eq i32 %133, 1
  br i1 %134, label %135, label %137

135:                                              ; preds = %131
  %136 = bitcast %class.SkColorSpace* %129 to i8*
  call void @_ZdlPv(i8* %136) #14
  br label %137

137:                                              ; preds = %127, %131, %135
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %7) #13
  ret void
}

declare i64 @_ZNK11SkImageInfo15computeByteSizeEm(%struct.SkImageInfo*, i64) local_unnamed_addr #1

declare void @_ZN6SkData17MakeUninitializedEm(%class.sk_sp.97* sret, i64) local_unnamed_addr #1

declare void @_ZN7SkImage14MakeRasterDataERK11SkImageInfo5sk_spI6SkDataEm(%class.sk_sp.168* sret, %struct.SkImageInfo* dereferenceable(24), %class.sk_sp.97*, i64) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_Z20SkImage_pinAsTexturePK7SkImageP18GrRecordingContext(%class.SkImage*, %class.GrRecordingContext*) local_unnamed_addr #0 {
  %3 = bitcast %class.SkImage* %0 to %class.SkImage_Base*
  %4 = bitcast %class.SkImage* %0 to i1 (%class.SkImage_Base*, %class.GrRecordingContext*)***
  %5 = load i1 (%class.SkImage_Base*, %class.GrRecordingContext*)**, i1 (%class.SkImage_Base*, %class.GrRecordingContext*)*** %4, align 8
  %6 = getelementptr inbounds i1 (%class.SkImage_Base*, %class.GrRecordingContext*)*, i1 (%class.SkImage_Base*, %class.GrRecordingContext*)** %5, i64 14
  %7 = load i1 (%class.SkImage_Base*, %class.GrRecordingContext*)*, i1 (%class.SkImage_Base*, %class.GrRecordingContext*)** %6, align 8
  %8 = tail call zeroext i1 %7(%class.SkImage_Base* %3, %class.GrRecordingContext* %1) #13
  ret i1 %8
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_Z22SkImage_unpinAsTexturePK7SkImageP18GrRecordingContext(%class.SkImage*, %class.GrRecordingContext*) local_unnamed_addr #0 {
  %3 = bitcast %class.SkImage* %0 to %class.SkImage_Base*
  %4 = bitcast %class.SkImage* %0 to void (%class.SkImage_Base*, %class.GrRecordingContext*)***
  %5 = load void (%class.SkImage_Base*, %class.GrRecordingContext*)**, void (%class.SkImage_Base*, %class.GrRecordingContext*)*** %4, align 8
  %6 = getelementptr inbounds void (%class.SkImage_Base*, %class.GrRecordingContext*)*, void (%class.SkImage_Base*, %class.GrRecordingContext*)** %5, i64 15
  %7 = load void (%class.SkImage_Base*, %class.GrRecordingContext*)*, void (%class.SkImage_Base*, %class.GrRecordingContext*)** %6, align 8
  tail call void %7(%class.SkImage_Base* %3, %class.GrRecordingContext* %1) #13
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN15SkMipmapBuilderC2ERK11SkImageInfo(%class.SkMipmapBuilder* nocapture, %struct.SkImageInfo* nocapture readonly dereferenceable(24)) unnamed_addr #0 align 2 {
  %3 = alloca %class.SkPixmap, align 8
  %4 = getelementptr inbounds %class.SkMipmapBuilder, %class.SkMipmapBuilder* %0, i64 0, i32 0, i32 0
  store %class.SkMipmap* null, %class.SkMipmap** %4, align 8
  %5 = bitcast %class.SkPixmap* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %5) #13
  %6 = getelementptr inbounds %class.SkPixmap, %class.SkPixmap* %3, i64 0, i32 2, i32 0, i32 0, i32 0
  %7 = getelementptr inbounds %struct.SkImageInfo, %struct.SkImageInfo* %1, i64 0, i32 0, i32 0, i32 0
  %8 = bitcast %class.SkPixmap* %3 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %8, i8 0, i64 16, i1 false)
  %9 = load %class.SkColorSpace*, %class.SkColorSpace** %7, align 8
  %10 = icmp eq %class.SkColorSpace* %9, null
  br i1 %10, label %14, label %11

11:                                               ; preds = %2
  %12 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %9, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %13 = atomicrmw add i32* %12, i32 1 monotonic
  br label %14

14:                                               ; preds = %2, %11
  store %class.SkColorSpace* %9, %class.SkColorSpace** %6, align 8
  %15 = getelementptr inbounds %class.SkPixmap, %class.SkPixmap* %3, i64 0, i32 2, i32 0, i32 1
  %16 = getelementptr inbounds %struct.SkImageInfo, %struct.SkImageInfo* %1, i64 0, i32 0, i32 1
  %17 = bitcast i32* %16 to <2 x i64>*
  %18 = load <2 x i64>, <2 x i64>* %17, align 8
  %19 = bitcast i32* %15 to <2 x i64>*
  store <2 x i64> %18, <2 x i64>* %19, align 8
  %20 = call %class.SkMipmap* @_ZN8SkMipmap5BuildERK8SkPixmapPFP19SkDiscardableMemorymEb(%class.SkPixmap* nonnull dereferenceable(40) %3, %class.SkDiscardableMemory* (i64)* null, i1 zeroext false) #13
  %21 = ptrtoint %class.SkMipmap* %20 to i64
  %22 = load %class.SkMipmap*, %class.SkMipmap** %4, align 8
  %23 = bitcast %class.SkMipmapBuilder* %0 to i64*
  store i64 %21, i64* %23, align 8
  %24 = icmp eq %class.SkMipmap* %22, null
  br i1 %24, label %27, label %25

25:                                               ; preds = %14
  %26 = bitcast %class.SkMipmap* %22 to %class.SkCachedData*
  call void @_ZNK12SkCachedData13internalUnrefEb(%class.SkCachedData* nonnull %26, i1 zeroext false) #13
  br label %27

27:                                               ; preds = %25, %14
  %28 = load %class.SkColorSpace*, %class.SkColorSpace** %6, align 8
  %29 = icmp eq %class.SkColorSpace* %28, null
  br i1 %29, label %36, label %30

30:                                               ; preds = %27
  %31 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %28, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %32 = atomicrmw add i32* %31, i32 -1 acq_rel
  %33 = icmp eq i32 %32, 1
  br i1 %33, label %34, label %36

34:                                               ; preds = %30
  %35 = bitcast %class.SkColorSpace* %28 to i8*
  call void @_ZdlPv(i8* %35) #14
  br label %36

36:                                               ; preds = %27, %30, %34
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %5) #13
  ret void
}

declare %class.SkMipmap* @_ZN8SkMipmap5BuildERK8SkPixmapPFP19SkDiscardableMemorymEb(%class.SkPixmap* dereferenceable(40), %class.SkDiscardableMemory* (i64)*, i1 zeroext) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN15SkMipmapBuilderD2Ev(%class.SkMipmapBuilder* nocapture readonly) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %class.SkMipmapBuilder, %class.SkMipmapBuilder* %0, i64 0, i32 0, i32 0
  %3 = load %class.SkMipmap*, %class.SkMipmap** %2, align 8
  %4 = icmp eq %class.SkMipmap* %3, null
  br i1 %4, label %7, label %5

5:                                                ; preds = %1
  %6 = bitcast %class.SkMipmap* %3 to %class.SkCachedData*
  tail call void @_ZNK12SkCachedData13internalUnrefEb(%class.SkCachedData* nonnull %6, i1 zeroext false) #13
  br label %7

7:                                                ; preds = %1, %5
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZNK15SkMipmapBuilder11countLevelsEv(%class.SkMipmapBuilder* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %class.SkMipmapBuilder, %class.SkMipmapBuilder* %0, i64 0, i32 0, i32 0
  %3 = load %class.SkMipmap*, %class.SkMipmap** %2, align 8
  %4 = icmp eq %class.SkMipmap* %3, null
  br i1 %4, label %7, label %5

5:                                                ; preds = %1
  %6 = tail call i32 @_ZNK8SkMipmap11countLevelsEv(%class.SkMipmap* nonnull %3) #13
  br label %7

7:                                                ; preds = %1, %5
  %8 = phi i32 [ %6, %5 ], [ 0, %1 ]
  ret i32 %8
}

declare i32 @_ZNK8SkMipmap11countLevelsEv(%class.SkMipmap*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK15SkMipmapBuilder5levelEi(%class.SkPixmap* noalias sret, %class.SkMipmapBuilder* nocapture readonly, i32) local_unnamed_addr #0 align 2 {
  %4 = alloca %"struct.SkMipmap::Level", align 8
  %5 = bitcast %class.SkPixmap* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %5, i8 0, i64 40, i1 false) #13
  %6 = bitcast %"struct.SkMipmap::Level"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %6) #13
  %7 = getelementptr inbounds %"struct.SkMipmap::Level", %"struct.SkMipmap::Level"* %4, i64 0, i32 0
  %8 = getelementptr inbounds %"struct.SkMipmap::Level", %"struct.SkMipmap::Level"* %4, i64 0, i32 1, i32 0
  store float 0xFFFFFFFFE0000000, float* %8, align 8
  %9 = getelementptr inbounds %"struct.SkMipmap::Level", %"struct.SkMipmap::Level"* %4, i64 0, i32 1, i32 1
  store float 0xFFFFFFFFE0000000, float* %9, align 4
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %6, i8 0, i64 40, i1 false) #13
  %10 = getelementptr inbounds %class.SkMipmapBuilder, %class.SkMipmapBuilder* %1, i64 0, i32 0, i32 0
  %11 = load %class.SkMipmap*, %class.SkMipmap** %10, align 8
  %12 = icmp eq %class.SkMipmap* %11, null
  br i1 %12, label %42, label %13

13:                                               ; preds = %3
  %14 = call zeroext i1 @_ZNK8SkMipmap8getLevelEiPNS_5LevelE(%class.SkMipmap* nonnull %11, i32 %2, %"struct.SkMipmap::Level"* nonnull %4) #13
  br i1 %14, label %15, label %42

15:                                               ; preds = %13
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %5, i8* nonnull align 8 %6, i64 16, i1 false) #13
  %16 = icmp eq %class.SkPixmap* %7, %0
  br i1 %16, label %36, label %17

17:                                               ; preds = %15
  %18 = getelementptr inbounds %"struct.SkMipmap::Level", %"struct.SkMipmap::Level"* %4, i64 0, i32 0, i32 2, i32 0, i32 0, i32 0
  %19 = load %class.SkColorSpace*, %class.SkColorSpace** %18, align 8
  %20 = icmp eq %class.SkColorSpace* %19, null
  br i1 %20, label %21, label %23

21:                                               ; preds = %17
  %22 = getelementptr inbounds %class.SkPixmap, %class.SkPixmap* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  store %class.SkColorSpace* %19, %class.SkColorSpace** %22, align 8
  br label %36

23:                                               ; preds = %17
  %24 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %19, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %25 = atomicrmw add i32* %24, i32 1 monotonic
  %26 = getelementptr inbounds %class.SkPixmap, %class.SkPixmap* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  %27 = load %class.SkColorSpace*, %class.SkColorSpace** %26, align 8
  %28 = bitcast %class.SkColorSpace* %27 to i8*
  %29 = getelementptr inbounds %class.SkPixmap, %class.SkPixmap* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  store %class.SkColorSpace* %19, %class.SkColorSpace** %29, align 8
  %30 = icmp eq %class.SkColorSpace* %27, null
  br i1 %30, label %36, label %31

31:                                               ; preds = %23
  %32 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %27, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %33 = atomicrmw add i32* %32, i32 -1 acq_rel
  %34 = icmp eq i32 %33, 1
  br i1 %34, label %35, label %36

35:                                               ; preds = %31
  call void @_ZdlPv(i8* %28) #14
  br label %36

36:                                               ; preds = %21, %15, %23, %31, %35
  %37 = getelementptr inbounds %class.SkPixmap, %class.SkPixmap* %0, i64 0, i32 2, i32 0, i32 1
  %38 = getelementptr inbounds %"struct.SkMipmap::Level", %"struct.SkMipmap::Level"* %4, i64 0, i32 0, i32 2, i32 0, i32 1
  %39 = bitcast i32* %38 to <2 x i64>*
  %40 = load <2 x i64>, <2 x i64>* %39, align 8
  %41 = bitcast i32* %37 to <2 x i64>*
  store <2 x i64> %40, <2 x i64>* %41, align 8
  br label %42

42:                                               ; preds = %3, %36, %13
  %43 = getelementptr inbounds %"struct.SkMipmap::Level", %"struct.SkMipmap::Level"* %4, i64 0, i32 0, i32 2, i32 0, i32 0, i32 0
  %44 = load %class.SkColorSpace*, %class.SkColorSpace** %43, align 8
  %45 = icmp eq %class.SkColorSpace* %44, null
  br i1 %45, label %52, label %46

46:                                               ; preds = %42
  %47 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %44, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %48 = atomicrmw add i32* %47, i32 -1 acq_rel
  %49 = icmp eq i32 %48, 1
  br i1 %49, label %50, label %52

50:                                               ; preds = %46
  %51 = bitcast %class.SkColorSpace* %44 to i8*
  call void @_ZdlPv(i8* %51) #14
  br label %52

52:                                               ; preds = %42, %46, %50
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %6) #13
  ret void
}

declare zeroext i1 @_ZNK8SkMipmap8getLevelEiPNS_5LevelE(%class.SkMipmap*, i32, %"struct.SkMipmap::Level"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK7SkImage10hasMipmapsEv(%class.SkImage*) local_unnamed_addr #0 align 2 {
  %2 = bitcast %class.SkImage* %0 to %class.SkImage_Base*
  %3 = bitcast %class.SkImage* %0 to i1 (%class.SkImage_Base*)***
  %4 = load i1 (%class.SkImage_Base*)**, i1 (%class.SkImage_Base*)*** %3, align 8
  %5 = getelementptr inbounds i1 (%class.SkImage_Base*)*, i1 (%class.SkImage_Base*)** %4, i64 6
  %6 = load i1 (%class.SkImage_Base*)*, i1 (%class.SkImage_Base*)** %5, align 8
  %7 = tail call zeroext i1 %6(%class.SkImage_Base* %2) #13
  ret i1 %7
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK7SkImage11withMipmapsE5sk_spI8SkMipmapE(%class.sk_sp.168* noalias sret, %class.SkImage*, %class.sk_sp.165* nocapture) local_unnamed_addr #0 align 2 {
  %4 = alloca %class.sk_sp.165, align 8
  %5 = getelementptr inbounds %class.sk_sp.165, %class.sk_sp.165* %2, i64 0, i32 0
  %6 = load %class.SkMipmap*, %class.SkMipmap** %5, align 8
  %7 = icmp eq %class.SkMipmap* %6, null
  br i1 %7, label %8, label %10

8:                                                ; preds = %3
  %9 = ptrtoint %class.SkMipmap* %6 to i64
  br label %16

10:                                               ; preds = %3
  %11 = getelementptr inbounds %class.SkImage, %class.SkImage* %1, i64 0, i32 2
  %12 = tail call zeroext i1 @_ZNK8SkMipmap17validForRootLevelERK11SkImageInfo(%class.SkMipmap* nonnull %6, %struct.SkImageInfo* dereferenceable(24) %11) #13
  br i1 %12, label %13, label %33

13:                                               ; preds = %10
  %14 = bitcast %class.sk_sp.165* %2 to i64*
  %15 = load i64, i64* %14, align 8
  br label %16

16:                                               ; preds = %8, %13
  %17 = phi i64 [ %15, %13 ], [ %9, %8 ]
  %18 = getelementptr inbounds %class.sk_sp.168, %class.sk_sp.168* %0, i64 0, i32 0
  store %class.SkImage* inttoptr (i64 -6148914691236517206 to %class.SkImage*), %class.SkImage** %18, align 8
  %19 = bitcast %class.SkImage* %1 to %class.SkImage_Base*
  store %class.SkMipmap* null, %class.SkMipmap** %5, align 8
  %20 = bitcast %class.sk_sp.165* %4 to i64*
  store i64 %17, i64* %20, align 8
  %21 = bitcast %class.SkImage* %1 to void (%class.sk_sp.168*, %class.SkImage_Base*, %class.sk_sp.165*)***
  %22 = load void (%class.sk_sp.168*, %class.SkImage_Base*, %class.sk_sp.165*)**, void (%class.sk_sp.168*, %class.SkImage_Base*, %class.sk_sp.165*)*** %21, align 8
  %23 = getelementptr inbounds void (%class.sk_sp.168*, %class.SkImage_Base*, %class.sk_sp.165*)*, void (%class.sk_sp.168*, %class.SkImage_Base*, %class.sk_sp.165*)** %22, i64 29
  %24 = load void (%class.sk_sp.168*, %class.SkImage_Base*, %class.sk_sp.165*)*, void (%class.sk_sp.168*, %class.SkImage_Base*, %class.sk_sp.165*)** %23, align 8
  call void %24(%class.sk_sp.168* sret %0, %class.SkImage_Base* %19, %class.sk_sp.165* nonnull %4) #13
  %25 = getelementptr inbounds %class.sk_sp.165, %class.sk_sp.165* %4, i64 0, i32 0
  %26 = load %class.SkMipmap*, %class.SkMipmap** %25, align 8
  %27 = icmp eq %class.SkMipmap* %26, null
  br i1 %27, label %30, label %28

28:                                               ; preds = %16
  %29 = bitcast %class.SkMipmap* %26 to %class.SkCachedData*
  call void @_ZNK12SkCachedData13internalUnrefEb(%class.SkCachedData* nonnull %29, i1 zeroext false) #13
  br label %30

30:                                               ; preds = %16, %28
  %31 = load %class.SkImage*, %class.SkImage** %18, align 8
  %32 = icmp eq %class.SkImage* %31, null
  br i1 %32, label %33, label %40

33:                                               ; preds = %30, %10
  %34 = icmp eq %class.SkImage* %1, null
  br i1 %34, label %38, label %35

35:                                               ; preds = %33
  %36 = getelementptr inbounds %class.SkImage, %class.SkImage* %1, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %37 = atomicrmw add i32* %36, i32 1 monotonic, !noalias !73
  br label %38

38:                                               ; preds = %33, %35
  %39 = getelementptr inbounds %class.sk_sp.168, %class.sk_sp.168* %0, i64 0, i32 0
  store %class.SkImage* %1, %class.SkImage** %39, align 8, !alias.scope !73
  br label %40

40:                                               ; preds = %30, %38
  ret void
}

declare zeroext i1 @_ZNK8SkMipmap17validForRootLevelERK11SkImageInfo(%class.SkMipmap*, %struct.SkImageInfo* dereferenceable(24)) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK7SkImage18withDefaultMipmapsEv(%class.sk_sp.168* noalias sret, %class.SkImage*) local_unnamed_addr #0 align 2 {
  %3 = alloca %class.sk_sp.165, align 8
  %4 = bitcast %class.sk_sp.165* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %4)
  %5 = getelementptr inbounds %class.sk_sp.168, %class.sk_sp.168* %0, i64 0, i32 0
  store %class.SkImage* inttoptr (i64 -6148914691236517206 to %class.SkImage*), %class.SkImage** %5, align 8, !alias.scope !76
  %6 = bitcast %class.SkImage* %1 to %class.SkImage_Base*
  %7 = bitcast %class.sk_sp.165* %3 to i64*
  store i64 0, i64* %7, align 8, !noalias !76
  %8 = bitcast %class.SkImage* %1 to void (%class.sk_sp.168*, %class.SkImage_Base*, %class.sk_sp.165*)***
  %9 = load void (%class.sk_sp.168*, %class.SkImage_Base*, %class.sk_sp.165*)**, void (%class.sk_sp.168*, %class.SkImage_Base*, %class.sk_sp.165*)*** %8, align 8, !noalias !76
  %10 = getelementptr inbounds void (%class.sk_sp.168*, %class.SkImage_Base*, %class.sk_sp.165*)*, void (%class.sk_sp.168*, %class.SkImage_Base*, %class.sk_sp.165*)** %9, i64 29
  %11 = load void (%class.sk_sp.168*, %class.SkImage_Base*, %class.sk_sp.165*)*, void (%class.sk_sp.168*, %class.SkImage_Base*, %class.sk_sp.165*)** %10, align 8, !noalias !76
  call void %11(%class.sk_sp.168* sret %0, %class.SkImage_Base* %6, %class.sk_sp.165* nonnull %3) #13
  %12 = getelementptr inbounds %class.sk_sp.165, %class.sk_sp.165* %3, i64 0, i32 0
  %13 = load %class.SkMipmap*, %class.SkMipmap** %12, align 8, !noalias !76
  %14 = icmp eq %class.SkMipmap* %13, null
  br i1 %14, label %17, label %15

15:                                               ; preds = %2
  %16 = bitcast %class.SkMipmap* %13 to %class.SkCachedData*
  call void @_ZNK12SkCachedData13internalUnrefEb(%class.SkCachedData* nonnull %16, i1 zeroext false) #13
  br label %17

17:                                               ; preds = %15, %2
  %18 = load %class.SkImage*, %class.SkImage** %5, align 8, !alias.scope !76
  %19 = icmp eq %class.SkImage* %18, null
  br i1 %19, label %20, label %26

20:                                               ; preds = %17
  %21 = icmp eq %class.SkImage* %1, null
  br i1 %21, label %25, label %22

22:                                               ; preds = %20
  %23 = getelementptr inbounds %class.SkImage, %class.SkImage* %1, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %24 = atomicrmw add i32* %23, i32 1 monotonic, !noalias !79
  br label %25

25:                                               ; preds = %22, %20
  store %class.SkImage* %1, %class.SkImage** %5, align 8, !alias.scope !79
  br label %26

26:                                               ; preds = %25, %17
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %4)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN15SkMipmapBuilder8attachToEPK7SkImage(%class.sk_sp.168* noalias sret, %class.SkMipmapBuilder* nocapture readonly, %class.SkImage*) local_unnamed_addr #0 align 2 {
  %4 = alloca %class.sk_sp.165, align 8
  %5 = getelementptr inbounds %class.SkMipmapBuilder, %class.SkMipmapBuilder* %1, i64 0, i32 0, i32 0
  %6 = load %class.SkMipmap*, %class.SkMipmap** %5, align 8
  %7 = icmp eq %class.SkMipmap* %6, null
  br i1 %7, label %8, label %10

8:                                                ; preds = %3
  %9 = bitcast %class.sk_sp.165* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %9)
  br label %16

10:                                               ; preds = %3
  %11 = bitcast %class.SkMipmap* %6 to %class.SkCachedData*
  tail call void @_ZNK12SkCachedData11internalRefEb(%class.SkCachedData* nonnull %11, i1 zeroext false) #13
  %12 = ptrtoint %class.SkMipmap* %6 to i64
  %13 = bitcast %class.sk_sp.165* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %13)
  %14 = getelementptr inbounds %class.SkImage, %class.SkImage* %2, i64 0, i32 2
  %15 = tail call zeroext i1 @_ZNK8SkMipmap17validForRootLevelERK11SkImageInfo(%class.SkMipmap* nonnull %6, %struct.SkImageInfo* dereferenceable(24) %14) #13
  br i1 %15, label %16, label %35

16:                                               ; preds = %10, %8
  %17 = phi i8* [ %9, %8 ], [ %13, %10 ]
  %18 = phi i64 [ 0, %8 ], [ %12, %10 ]
  %19 = getelementptr inbounds %class.sk_sp.168, %class.sk_sp.168* %0, i64 0, i32 0
  store %class.SkImage* inttoptr (i64 -6148914691236517206 to %class.SkImage*), %class.SkImage** %19, align 8, !alias.scope !82
  %20 = bitcast %class.SkImage* %2 to %class.SkImage_Base*
  %21 = bitcast %class.sk_sp.165* %4 to i64*
  store i64 %18, i64* %21, align 8, !noalias !82
  %22 = bitcast %class.SkImage* %2 to void (%class.sk_sp.168*, %class.SkImage_Base*, %class.sk_sp.165*)***
  %23 = load void (%class.sk_sp.168*, %class.SkImage_Base*, %class.sk_sp.165*)**, void (%class.sk_sp.168*, %class.SkImage_Base*, %class.sk_sp.165*)*** %22, align 8, !noalias !82
  %24 = getelementptr inbounds void (%class.sk_sp.168*, %class.SkImage_Base*, %class.sk_sp.165*)*, void (%class.sk_sp.168*, %class.SkImage_Base*, %class.sk_sp.165*)** %23, i64 29
  %25 = load void (%class.sk_sp.168*, %class.SkImage_Base*, %class.sk_sp.165*)*, void (%class.sk_sp.168*, %class.SkImage_Base*, %class.sk_sp.165*)** %24, align 8, !noalias !82
  call void %25(%class.sk_sp.168* sret %0, %class.SkImage_Base* %20, %class.sk_sp.165* nonnull %4) #13
  %26 = getelementptr inbounds %class.sk_sp.165, %class.sk_sp.165* %4, i64 0, i32 0
  %27 = load %class.SkMipmap*, %class.SkMipmap** %26, align 8, !noalias !82
  %28 = icmp eq %class.SkMipmap* %27, null
  br i1 %28, label %31, label %29

29:                                               ; preds = %16
  %30 = bitcast %class.SkMipmap* %27 to %class.SkCachedData*
  call void @_ZNK12SkCachedData13internalUnrefEb(%class.SkCachedData* nonnull %30, i1 zeroext false) #13
  br label %31

31:                                               ; preds = %29, %16
  %32 = load %class.SkImage*, %class.SkImage** %19, align 8, !alias.scope !82
  %33 = icmp eq %class.SkImage* %32, null
  br i1 %33, label %35, label %34

34:                                               ; preds = %31
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17)
  br label %47

35:                                               ; preds = %31, %10
  %36 = phi i8* [ %17, %31 ], [ %13, %10 ]
  %37 = phi i64 [ 0, %31 ], [ %12, %10 ]
  %38 = icmp eq %class.SkImage* %2, null
  br i1 %38, label %42, label %39

39:                                               ; preds = %35
  %40 = getelementptr inbounds %class.SkImage, %class.SkImage* %2, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %41 = atomicrmw add i32* %40, i32 1 monotonic, !noalias !85
  br label %42

42:                                               ; preds = %35, %39
  %43 = getelementptr inbounds %class.sk_sp.168, %class.sk_sp.168* %0, i64 0, i32 0
  store %class.SkImage* %2, %class.SkImage** %43, align 8, !alias.scope !85
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %36)
  %44 = icmp eq i64 %37, 0
  br i1 %44, label %47, label %45

45:                                               ; preds = %42
  %46 = inttoptr i64 %37 to %class.SkCachedData*
  call void @_ZNK12SkCachedData13internalUnrefEb(%class.SkCachedData* nonnull %46, i1 zeroext false) #13
  br label %47

47:                                               ; preds = %34, %42, %45
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN17SkSamplingOptionsC2E15SkFilterQualityNS_14MediumBehaviorE(%struct.SkSamplingOptions* nocapture, i32, i32) unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %struct.SkSamplingOptions, %struct.SkSamplingOptions* %0, i64 0, i32 0
  store i8 0, i8* %4, align 4
  %5 = getelementptr inbounds %struct.SkSamplingOptions, %struct.SkSamplingOptions* %0, i64 0, i32 1, i32 0
  %6 = getelementptr inbounds %struct.SkSamplingOptions, %struct.SkSamplingOptions* %0, i64 0, i32 1, i32 1
  %7 = getelementptr inbounds %struct.SkSamplingOptions, %struct.SkSamplingOptions* %0, i64 0, i32 2
  %8 = getelementptr inbounds %struct.SkSamplingOptions, %struct.SkSamplingOptions* %0, i64 0, i32 3
  %9 = bitcast float* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %9, i8 0, i64 16, i1 false)
  switch i32 %1, label %19 [
    i32 3, label %10
    i32 2, label %13
    i32 1, label %16
    i32 0, label %17
  ]

10:                                               ; preds = %3
  store i8 1, i8* %4, align 4
  %11 = getelementptr inbounds %struct.SkSamplingOptions, %struct.SkSamplingOptions* %0, i64 0, i32 1
  %12 = bitcast %struct.SkCubicResampler* %11 to <4 x i32>*
  store <4 x i32> <i32 1051372203, i32 1051372203, i32 0, i32 0>, <4 x i32>* %12, align 4
  br label %19

13:                                               ; preds = %3
  %14 = icmp eq i32 %2, 0
  %15 = select i1 %14, i32 1, i32 2
  store i8 0, i8* %4, align 4
  store float 0.000000e+00, float* %5, align 4
  store float 0.000000e+00, float* %6, align 4
  store i32 1, i32* %7, align 4
  store i32 %15, i32* %8, align 4
  br label %19

16:                                               ; preds = %3
  store i8 0, i8* %4, align 4
  store float 0.000000e+00, float* %5, align 4
  store float 0.000000e+00, float* %6, align 4
  store i32 1, i32* %7, align 4
  store i32 0, i32* %8, align 4
  br label %19

17:                                               ; preds = %3
  store i8 0, i8* %4, align 4
  %18 = bitcast float* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %18, i8 0, i64 16, i1 false)
  br label %19

19:                                               ; preds = %3, %17, %16, %13, %10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN14SkSamplingPriv4ReadER12SkReadBuffer(%struct.SkSamplingOptions* noalias nocapture sret, %class.SkReadBuffer* dereferenceable(136)) local_unnamed_addr #0 align 2 {
  %3 = tail call zeroext i1 @_ZN12SkReadBuffer8readBoolEv(%class.SkReadBuffer* %1) #13
  br i1 %3, label %4, label %7

4:                                                ; preds = %2
  %5 = tail call float @_ZN12SkReadBuffer10readScalarEv(%class.SkReadBuffer* %1) #13
  %6 = tail call float @_ZN12SkReadBuffer10readScalarEv(%class.SkReadBuffer* %1) #13
  br label %23

7:                                                ; preds = %2
  %8 = tail call i32 @_ZN12SkReadBuffer8readUIntEv(%class.SkReadBuffer* %1) #13
  %9 = icmp ugt i32 %8, 1
  br i1 %9, label %10, label %11

10:                                               ; preds = %7
  tail call void @_ZN12SkReadBuffer10setInvalidEv(%class.SkReadBuffer* %1) #13
  br label %11

11:                                               ; preds = %7, %10
  %12 = getelementptr inbounds %class.SkReadBuffer, %class.SkReadBuffer* %1, i64 0, i32 13
  %13 = load i8, i8* %12, align 8, !range !24
  %14 = icmp eq i8 %13, 0
  %15 = select i1 %14, i32 %8, i32 0
  %16 = tail call i32 @_ZN12SkReadBuffer8readUIntEv(%class.SkReadBuffer* %1) #13
  %17 = icmp ugt i32 %16, 2
  br i1 %17, label %18, label %19

18:                                               ; preds = %11
  tail call void @_ZN12SkReadBuffer10setInvalidEv(%class.SkReadBuffer* %1) #13
  br label %19

19:                                               ; preds = %11, %18
  %20 = load i8, i8* %12, align 8, !range !24
  %21 = icmp eq i8 %20, 0
  %22 = select i1 %21, i32 %16, i32 0
  br label %23

23:                                               ; preds = %19, %4
  %24 = phi i8 [ 0, %19 ], [ 1, %4 ]
  %25 = phi float [ 0.000000e+00, %19 ], [ %5, %4 ]
  %26 = phi float [ 0.000000e+00, %19 ], [ %6, %4 ]
  %27 = phi i32 [ %15, %19 ], [ 0, %4 ]
  %28 = phi i32 [ %22, %19 ], [ 0, %4 ]
  %29 = getelementptr inbounds %struct.SkSamplingOptions, %struct.SkSamplingOptions* %0, i64 0, i32 0
  store i8 %24, i8* %29, align 4
  %30 = getelementptr inbounds %struct.SkSamplingOptions, %struct.SkSamplingOptions* %0, i64 0, i32 1, i32 0
  store float %25, float* %30, align 4
  %31 = getelementptr inbounds %struct.SkSamplingOptions, %struct.SkSamplingOptions* %0, i64 0, i32 1, i32 1
  store float %26, float* %31, align 4
  %32 = getelementptr inbounds %struct.SkSamplingOptions, %struct.SkSamplingOptions* %0, i64 0, i32 2
  store i32 %27, i32* %32, align 4
  %33 = getelementptr inbounds %struct.SkSamplingOptions, %struct.SkSamplingOptions* %0, i64 0, i32 3
  store i32 %28, i32* %33, align 4
  ret void
}

declare zeroext i1 @_ZN12SkReadBuffer8readBoolEv(%class.SkReadBuffer*) local_unnamed_addr #1

declare float @_ZN12SkReadBuffer10readScalarEv(%class.SkReadBuffer*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN14SkSamplingPriv5WriteER13SkWriteBufferRK17SkSamplingOptions(%class.SkWriteBuffer* dereferenceable(56), %struct.SkSamplingOptions* nocapture readonly dereferenceable(20)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %struct.SkSamplingOptions, %struct.SkSamplingOptions* %1, i64 0, i32 0
  %4 = load i8, i8* %3, align 4, !range !24
  %5 = icmp ne i8 %4, 0
  %6 = bitcast %class.SkWriteBuffer* %0 to void (%class.SkWriteBuffer*, i1)***
  %7 = load void (%class.SkWriteBuffer*, i1)**, void (%class.SkWriteBuffer*, i1)*** %6, align 8
  %8 = getelementptr inbounds void (%class.SkWriteBuffer*, i1)*, void (%class.SkWriteBuffer*, i1)** %7, i64 4
  %9 = load void (%class.SkWriteBuffer*, i1)*, void (%class.SkWriteBuffer*, i1)** %8, align 8
  tail call void %9(%class.SkWriteBuffer* %0, i1 zeroext %5) #13
  %10 = load i8, i8* %3, align 4, !range !24
  %11 = icmp eq i8 %10, 0
  br i1 %11, label %24, label %12

12:                                               ; preds = %2
  %13 = getelementptr inbounds %struct.SkSamplingOptions, %struct.SkSamplingOptions* %1, i64 0, i32 1, i32 0
  %14 = load float, float* %13, align 4
  %15 = bitcast %class.SkWriteBuffer* %0 to void (%class.SkWriteBuffer*, float)***
  %16 = load void (%class.SkWriteBuffer*, float)**, void (%class.SkWriteBuffer*, float)*** %15, align 8
  %17 = getelementptr inbounds void (%class.SkWriteBuffer*, float)*, void (%class.SkWriteBuffer*, float)** %16, i64 5
  %18 = load void (%class.SkWriteBuffer*, float)*, void (%class.SkWriteBuffer*, float)** %17, align 8
  tail call void %18(%class.SkWriteBuffer* %0, float %14) #13
  %19 = getelementptr inbounds %struct.SkSamplingOptions, %struct.SkSamplingOptions* %1, i64 0, i32 1, i32 1
  %20 = load float, float* %19, align 4
  %21 = load void (%class.SkWriteBuffer*, float)**, void (%class.SkWriteBuffer*, float)*** %15, align 8
  %22 = getelementptr inbounds void (%class.SkWriteBuffer*, float)*, void (%class.SkWriteBuffer*, float)** %21, i64 5
  %23 = load void (%class.SkWriteBuffer*, float)*, void (%class.SkWriteBuffer*, float)** %22, align 8
  tail call void %23(%class.SkWriteBuffer* %0, float %20) #13
  br label %36

24:                                               ; preds = %2
  %25 = getelementptr inbounds %struct.SkSamplingOptions, %struct.SkSamplingOptions* %1, i64 0, i32 2
  %26 = load i32, i32* %25, align 4
  %27 = bitcast %class.SkWriteBuffer* %0 to void (%class.SkWriteBuffer*, i32)***
  %28 = load void (%class.SkWriteBuffer*, i32)**, void (%class.SkWriteBuffer*, i32)*** %27, align 8
  %29 = getelementptr inbounds void (%class.SkWriteBuffer*, i32)*, void (%class.SkWriteBuffer*, i32)** %28, i64 9
  %30 = load void (%class.SkWriteBuffer*, i32)*, void (%class.SkWriteBuffer*, i32)** %29, align 8
  tail call void %30(%class.SkWriteBuffer* %0, i32 %26) #13
  %31 = getelementptr inbounds %struct.SkSamplingOptions, %struct.SkSamplingOptions* %1, i64 0, i32 3
  %32 = load i32, i32* %31, align 4
  %33 = load void (%class.SkWriteBuffer*, i32)**, void (%class.SkWriteBuffer*, i32)*** %27, align 8
  %34 = getelementptr inbounds void (%class.SkWriteBuffer*, i32)*, void (%class.SkWriteBuffer*, i32)** %33, i64 9
  %35 = load void (%class.SkWriteBuffer*, i32)*, void (%class.SkWriteBuffer*, i32)** %34, align 8
  tail call void %35(%class.SkWriteBuffer* %0, i32 %32) #13
  br label %36

36:                                               ; preds = %24, %12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK12SkRefCntBase16internal_disposeEv(%class.SkRefCntBase*) unnamed_addr #0 comdat align 2 {
  %2 = icmp eq %class.SkRefCntBase* %0, null
  br i1 %2, label %8, label %3

3:                                                ; preds = %1
  %4 = bitcast %class.SkRefCntBase* %0 to void (%class.SkRefCntBase*)***
  %5 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %4, align 8
  %6 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %5, i64 1
  %7 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %6, align 8
  tail call void %7(%class.SkRefCntBase* nonnull %0) #13
  br label %8

8:                                                ; preds = %3, %1
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK12SkImage_Base12onPeekPixelsEP8SkPixmap(%class.SkImage_Base*, %class.SkPixmap*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %class.SkBitmap* @_ZNK12SkImage_Base12onPeekBitmapEv(%class.SkImage_Base*) unnamed_addr #0 comdat align 2 {
  ret %class.SkBitmap* null
}

declare void @__cxa_pure_virtual() unnamed_addr

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %class.SkMipmap* @_ZNK12SkImage_Base10onPeekMipsEv(%class.SkImage_Base*) unnamed_addr #0 comdat align 2 {
  ret %class.SkMipmap* null
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %class.GrImageContext* @_ZNK12SkImage_Base7contextEv(%class.SkImage_Base*) unnamed_addr #0 comdat align 2 {
  ret %class.GrImageContext* null
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN12SkImage_Base7onFlushEP15GrDirectContextRK11GrFlushInfo(%class.SkImage_Base*, %class.GrDirectContext*, %struct.GrFlushInfo* dereferenceable(48)) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK12SkImage_Base6isYUVAEv(%class.SkImage_Base*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN12SkImage_Base26generatingSurfaceIsDeletedEv(%class.SkImage_Base*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK12SkImage_Base14onPinAsTextureEP18GrRecordingContext(%class.SkImage_Base*, %class.GrRecordingContext*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK12SkImage_Base16onUnpinAsTextureEP18GrRecordingContext(%class.SkImage_Base*, %class.GrRecordingContext*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK12SkImage_Base17isPinnedOnContextEP18GrRecordingContext(%class.SkImage_Base*, %class.GrRecordingContext*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK12SkImage_Base12onRefEncodedEv(%class.sk_sp.97* noalias sret, %class.SkImage_Base*) unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %class.sk_sp.97, %class.sk_sp.97* %0, i64 0, i32 0
  store %class.SkData* null, %class.SkData** %3, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK12SkImage_Base17onIsLazyGeneratedEv(%class.SkImage_Base*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK12SkImage_Base17onIsTextureBackedEv(%class.SkImage_Base*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZNK12SkImage_Base13onTextureSizeEv(%class.SkImage_Base*) unnamed_addr #0 comdat align 2 {
  ret i64 0
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK12SkImage_Base24notifyAddedToRasterCacheEv(%class.SkImage_Base*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %class.SkImage_Base, %class.SkImage_Base* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0
  store atomic i8 1, i8* %2 seq_cst, align 1
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK12SkImage_Base17onMakeWithMipmapsE5sk_spI8SkMipmapE(%class.sk_sp.168* noalias sret, %class.SkImage_Base*, %class.sk_sp.165*) unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %class.sk_sp.168, %class.sk_sp.168* %0, i64 0, i32 0
  store %class.SkImage* null, %class.SkImage** %4, align 8
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN7SkImageD2Ev(%class.SkImage*) unnamed_addr #10 comdat align 2 {
  %2 = getelementptr inbounds %class.SkImage, %class.SkImage* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTV7SkImage, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %class.SkImage, %class.SkImage* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  %4 = load %class.SkColorSpace*, %class.SkColorSpace** %3, align 8
  %5 = icmp eq %class.SkColorSpace* %4, null
  br i1 %5, label %12, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %8 = atomicrmw add i32* %7, i32 -1 acq_rel
  %9 = icmp eq i32 %8, 1
  br i1 %9, label %10, label %12

10:                                               ; preds = %6
  %11 = bitcast %class.SkColorSpace* %4 to i8*
  tail call void @_ZdlPv(i8* %11) #14
  br label %12

12:                                               ; preds = %1, %6, %10
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN7SkImageD0Ev(%class.SkImage*) unnamed_addr #10 comdat align 2 {
  %2 = getelementptr inbounds %class.SkImage, %class.SkImage* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTV7SkImage, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %class.SkImage, %class.SkImage* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  %4 = load %class.SkColorSpace*, %class.SkColorSpace** %3, align 8
  %5 = icmp eq %class.SkColorSpace* %4, null
  br i1 %5, label %12, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %8 = atomicrmw add i32* %7, i32 -1 acq_rel
  %9 = icmp eq i32 %8, 1
  br i1 %9, label %10, label %12

10:                                               ; preds = %6
  %11 = bitcast %class.SkColorSpace* %4 to i8*
  tail call void @_ZdlPv(i8* %11) #14
  br label %12

12:                                               ; preds = %1, %6, %10
  %13 = bitcast %class.SkImage* %0 to i8*
  tail call void @_ZdlPv(i8* %13) #14
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #11

declare i32 @_ZNK14GrContext_Base9contextIDEv(%class.GrContext_Base*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN9GrSwizzleC2EPKc(%class.GrSwizzle*, i8*) unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %class.GrSwizzle, %class.GrSwizzle* %0, i64 0, i32 0
  %4 = load i8, i8* %1, align 1
  %5 = sext i8 %4 to i32
  switch i32 %5, label %11 [
    i32 114, label %12
    i32 103, label %6
    i32 98, label %7
    i32 97, label %8
    i32 48, label %9
    i32 49, label %10
  ]

6:                                                ; preds = %2
  br label %12

7:                                                ; preds = %2
  br label %12

8:                                                ; preds = %2
  br label %12

9:                                                ; preds = %2
  br label %12

10:                                               ; preds = %2
  br label %12

11:                                               ; preds = %2
  tail call void @llvm.trap() #13
  unreachable

12:                                               ; preds = %2, %6, %7, %8, %9, %10
  %13 = phi i16 [ 5, %10 ], [ 4, %9 ], [ 3, %8 ], [ 2, %7 ], [ 1, %6 ], [ 0, %2 ]
  %14 = getelementptr inbounds i8, i8* %1, i64 1
  %15 = load i8, i8* %14, align 1
  %16 = sext i8 %15 to i32
  switch i32 %16, label %22 [
    i32 114, label %23
    i32 103, label %17
    i32 98, label %18
    i32 97, label %19
    i32 48, label %20
    i32 49, label %21
  ]

17:                                               ; preds = %12
  br label %23

18:                                               ; preds = %12
  br label %23

19:                                               ; preds = %12
  br label %23

20:                                               ; preds = %12
  br label %23

21:                                               ; preds = %12
  br label %23

22:                                               ; preds = %12
  tail call void @llvm.trap() #13
  unreachable

23:                                               ; preds = %12, %17, %18, %19, %20, %21
  %24 = phi i16 [ 80, %21 ], [ 64, %20 ], [ 48, %19 ], [ 32, %18 ], [ 16, %17 ], [ 0, %12 ]
  %25 = or i16 %24, %13
  %26 = getelementptr inbounds i8, i8* %1, i64 2
  %27 = load i8, i8* %26, align 1
  %28 = sext i8 %27 to i32
  switch i32 %28, label %34 [
    i32 114, label %35
    i32 103, label %29
    i32 98, label %30
    i32 97, label %31
    i32 48, label %32
    i32 49, label %33
  ]

29:                                               ; preds = %23
  br label %35

30:                                               ; preds = %23
  br label %35

31:                                               ; preds = %23
  br label %35

32:                                               ; preds = %23
  br label %35

33:                                               ; preds = %23
  br label %35

34:                                               ; preds = %23
  tail call void @llvm.trap() #13
  unreachable

35:                                               ; preds = %23, %29, %30, %31, %32, %33
  %36 = phi i16 [ 1280, %33 ], [ 1024, %32 ], [ 768, %31 ], [ 512, %30 ], [ 256, %29 ], [ 0, %23 ]
  %37 = or i16 %25, %36
  %38 = getelementptr inbounds i8, i8* %1, i64 3
  %39 = load i8, i8* %38, align 1
  %40 = sext i8 %39 to i32
  switch i32 %40, label %46 [
    i32 114, label %47
    i32 103, label %41
    i32 98, label %42
    i32 97, label %43
    i32 48, label %44
    i32 49, label %45
  ]

41:                                               ; preds = %35
  br label %47

42:                                               ; preds = %35
  br label %47

43:                                               ; preds = %35
  br label %47

44:                                               ; preds = %35
  br label %47

45:                                               ; preds = %35
  br label %47

46:                                               ; preds = %35
  tail call void @llvm.trap() #13
  unreachable

47:                                               ; preds = %35, %41, %42, %43, %44, %45
  %48 = phi i16 [ 20480, %45 ], [ 16384, %44 ], [ 12288, %43 ], [ 8192, %42 ], [ 4096, %41 ], [ 0, %35 ]
  %49 = or i16 %37, %48
  store i16 %49, i16* %3, align 2
  ret void
}

declare %class.GrCaps* @_ZNK14GrContext_Base4capsEv(%class.GrContext_Base*) local_unnamed_addr #1

declare void @_Z7sk_freePv(i8*) local_unnamed_addr #1

declare i8* @_Z15sk_malloc_throwmm(i64, i64) local_unnamed_addr #1

declare i32 @_Z17GrResourceKeyHashPKjm(i32*, i64) local_unnamed_addr #1

declare zeroext i1 @_ZN8SkBitmap14tryAllocPixelsERK11SkImageInfom(%class.SkBitmap*, %struct.SkImageInfo* dereferenceable(24), i64) local_unnamed_addr #1

declare dereferenceable(40) %class.SkMatrix* @_ZN8SkMatrix12setTranslateEff(%class.SkMatrix*, float, float) local_unnamed_addr #1

declare dereferenceable(40) %class.SkMatrix* @_ZN8SkMatrix1IEv() local_unnamed_addr #1

declare zeroext i1 @_ZN7SkIRect9intersectERKS_S1_(%struct.SkIRect*, %struct.SkIRect* dereferenceable(16), %struct.SkIRect* dereferenceable(16)) local_unnamed_addr #1

declare i32 @_ZNK11SkColorInfo13bytesPerPixelEv(%class.SkColorInfo*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN6SkDataD1Ev(%class.SkData*) unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN6SkDatadlEPv(i8*) local_unnamed_addr #3

declare void @_ZNK12SkCachedData13internalUnrefEb(%class.SkCachedData*, i1 zeroext) local_unnamed_addr #1

declare void @_ZNK12SkCachedData11internalRefEb(%class.SkCachedData*, i1 zeroext) local_unnamed_addr #1

declare i32 @_ZN12SkReadBuffer8readUIntEv(%class.SkReadBuffer*) local_unnamed_addr #1

declare void @_ZN12SkReadBuffer10setInvalidEv(%class.SkReadBuffer*) local_unnamed_addr #1

; Function Attrs: nofree nounwind readonly
declare i32 @bcmp(i8* nocapture, i8* nocapture, i64) local_unnamed_addr #12

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind }
attributes #3 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nofree norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { noreturn nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { cold noreturn nounwind }
attributes #8 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="64" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nofree nounwind }
attributes #10 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #11 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #12 = { nofree nounwind readonly }
attributes #13 = { nounwind }
attributes #14 = { builtin nounwind }
attributes #15 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!3, !5}
!3 = distinct !{!3, !4, !"_ZNK11SkColorInfo13refColorSpaceEv: argument 0"}
!4 = distinct !{!4, !"_ZNK11SkColorInfo13refColorSpaceEv"}
!5 = distinct !{!5, !6, !"_ZNK11SkImageInfo13refColorSpaceEv: argument 0"}
!6 = distinct !{!6, !"_ZNK11SkImageInfo13refColorSpaceEv"}
!7 = !{!8}
!8 = distinct !{!8, !9, !"_Z9sk_ref_spI7SkImageE5sk_spIT_EPS2_: argument 0"}
!9 = distinct !{!9, !"_Z9sk_ref_spI7SkImageE5sk_spIT_EPS2_"}
!10 = !{!11}
!11 = distinct !{!11, !12, !"_ZNK7SkImage14refEncodedDataEv: argument 0"}
!12 = distinct !{!12, !"_ZNK7SkImage14refEncodedDataEv"}
!13 = !{!14}
!14 = distinct !{!14, !15, !"_ZNK7SkImage12encodeToDataE20SkEncodedImageFormati: argument 0"}
!15 = distinct !{!15, !"_ZNK7SkImage12encodeToDataE20SkEncodedImageFormati"}
!16 = !{!17}
!17 = distinct !{!17, !18, !"_Z9sk_ref_spI7SkImageE5sk_spIT_EPS2_: argument 0"}
!18 = distinct !{!18, !"_Z9sk_ref_spI7SkImageE5sk_spIT_EPS2_"}
!19 = !{!20, !22}
!20 = distinct !{!20, !21, !"_ZN11SkImageInfo4MakeE7SkISizeRK11SkColorInfo: argument 0"}
!21 = distinct !{!21, !"_ZN11SkImageInfo4MakeE7SkISizeRK11SkColorInfo"}
!22 = distinct !{!22, !23, !"_ZNK11SkImageInfo14makeDimensionsE7SkISize: argument 0"}
!23 = distinct !{!23, !"_ZNK11SkImageInfo14makeDimensionsE7SkISize"}
!24 = !{i8 0, i8 2}
!25 = !{!"branch_weights", i32 1, i32 1048575}
!26 = !{!27}
!27 = distinct !{!27, !28, !"_ZNK18GrSurfaceProxyView7swizzleEv: argument 0"}
!28 = distinct !{!28, !"_ZNK18GrSurfaceProxyView7swizzleEv"}
!29 = !{!30}
!30 = distinct !{!30, !31, !"_ZNK11SkImageInfo13makeColorTypeE11SkColorType: argument 0"}
!31 = distinct !{!31, !"_ZNK11SkImageInfo13makeColorTypeE11SkColorType"}
!32 = !{!33, !30}
!33 = distinct !{!33, !34, !"_ZNK11SkColorInfo13makeColorTypeE11SkColorType: argument 0"}
!34 = distinct !{!34, !"_ZNK11SkColorInfo13makeColorTypeE11SkColorType"}
!35 = !{!36, !33, !30}
!36 = distinct !{!36, !37, !"_ZNK11SkColorInfo13refColorSpaceEv: argument 0"}
!37 = distinct !{!37, !"_ZNK11SkColorInfo13refColorSpaceEv"}
!38 = !{!39, !41}
!39 = distinct !{!39, !40, !"_ZN11SkImageInfo4MakeE7SkISizeO11SkColorInfo: argument 0"}
!40 = distinct !{!40, !"_ZN11SkImageInfo4MakeE7SkISizeO11SkColorInfo"}
!41 = distinct !{!41, !42, !"_ZNK11SkImageInfo14makeColorSpaceE5sk_spI12SkColorSpaceE: argument 0"}
!42 = distinct !{!42, !"_ZNK11SkImageInfo14makeColorSpaceE5sk_spI12SkColorSpaceE"}
!43 = !{!44}
!44 = distinct !{!44, !45, !"_Z9sk_ref_spI7SkImageE5sk_spIT_EPS2_: argument 0"}
!45 = distinct !{!45, !"_Z9sk_ref_spI7SkImageE5sk_spIT_EPS2_"}
!46 = !{!47}
!47 = distinct !{!47, !48, !"_ZN8SkMatrix9TranslateEff: argument 0"}
!48 = distinct !{!48, !"_ZN8SkMatrix9TranslateEff"}
!49 = !{!50}
!50 = distinct !{!50, !51, !"_Z9sk_ref_spI14SkSpecialImageE5sk_spIT_EPKS2_: argument 0"}
!51 = distinct !{!51, !"_Z9sk_ref_spI14SkSpecialImageE5sk_spIT_EPKS2_"}
!52 = !{!53}
!53 = distinct !{!53, !54, !"_ZNK4skif12FilterResultILNS_5UsageE3EE14imageAndOffsetEP8SkIPoint: argument 0"}
!54 = distinct !{!54, !"_ZNK4skif12FilterResultILNS_5UsageE3EE14imageAndOffsetEP8SkIPoint"}
!55 = !{!56}
!56 = distinct !{!56, !57, !"_Z9sk_ref_spI7SkImageE5sk_spIT_EPS2_: argument 0"}
!57 = distinct !{!57, !"_Z9sk_ref_spI7SkImageE5sk_spIT_EPS2_"}
!58 = !{!59}
!59 = distinct !{!59, !60, !"_Z9sk_ref_spI7SkImageE5sk_spIT_EPS2_: argument 0"}
!60 = distinct !{!60, !"_Z9sk_ref_spI7SkImageE5sk_spIT_EPS2_"}
!61 = !{!62}
!62 = distinct !{!62, !63, !"_Z9sk_ref_spI7SkImageE5sk_spIT_EPS2_: argument 0"}
!63 = distinct !{!63, !"_Z9sk_ref_spI7SkImageE5sk_spIT_EPS2_"}
!64 = !{!65}
!65 = distinct !{!65, !66, !"_Z9sk_ref_spI7SkImageE5sk_spIT_EPS2_: argument 0"}
!66 = distinct !{!66, !"_Z9sk_ref_spI7SkImageE5sk_spIT_EPS2_"}
!67 = !{!68}
!68 = distinct !{!68, !69, !"_ZNK11SkImageInfo14makeColorSpaceE5sk_spI12SkColorSpaceE: argument 0"}
!69 = distinct !{!69, !"_ZNK11SkImageInfo14makeColorSpaceE5sk_spI12SkColorSpaceE"}
!70 = !{!71, !68}
!71 = distinct !{!71, !72, !"_ZNK11SkColorInfo14makeColorSpaceE5sk_spI12SkColorSpaceE: argument 0"}
!72 = distinct !{!72, !"_ZNK11SkColorInfo14makeColorSpaceE5sk_spI12SkColorSpaceE"}
!73 = !{!74}
!74 = distinct !{!74, !75, !"_Z9sk_ref_spI7SkImageE5sk_spIT_EPS2_: argument 0"}
!75 = distinct !{!75, !"_Z9sk_ref_spI7SkImageE5sk_spIT_EPS2_"}
!76 = !{!77}
!77 = distinct !{!77, !78, !"_ZNK7SkImage11withMipmapsE5sk_spI8SkMipmapE: argument 0"}
!78 = distinct !{!78, !"_ZNK7SkImage11withMipmapsE5sk_spI8SkMipmapE"}
!79 = !{!80, !77}
!80 = distinct !{!80, !81, !"_Z9sk_ref_spI7SkImageE5sk_spIT_EPS2_: argument 0"}
!81 = distinct !{!81, !"_Z9sk_ref_spI7SkImageE5sk_spIT_EPS2_"}
!82 = !{!83}
!83 = distinct !{!83, !84, !"_ZNK7SkImage11withMipmapsE5sk_spI8SkMipmapE: argument 0"}
!84 = distinct !{!84, !"_ZNK7SkImage11withMipmapsE5sk_spI8SkMipmapE"}
!85 = !{!86, !83}
!86 = distinct !{!86, !87, !"_Z9sk_ref_spI7SkImageE5sk_spIT_EPS2_: argument 0"}
!87 = distinct !{!87, !"_Z9sk_ref_spI7SkImageE5sk_spIT_EPS2_"}
