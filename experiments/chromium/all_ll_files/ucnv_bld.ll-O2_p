; ModuleID = '../../third_party/icu/source/common/ucnv_bld.cpp'
source_filename = "../../third_party/icu/source/common/ucnv_bld.cpp"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.UConverterSharedData = type { i32, i32, i8*, %struct.UConverterStaticData*, i8, i8, %struct.UConverterImpl*, i32, %struct.UConverterMBCSTable }
%struct.UConverterStaticData = type { i32, [60 x i8], i32, i8, i8, i8, i8, [4 x i8], i8, i8, i8, i8, i8, [19 x i8] }
%struct.UConverterImpl = type { i32, void (%struct.UConverterSharedData*, %struct.UConverterLoadArgs*, i8*, i32*)*, void (%struct.UConverterSharedData*)*, void (%struct.UConverter*, %struct.UConverterLoadArgs*, i32*)*, void (%struct.UConverter*)*, void (%struct.UConverter*, i32)*, void (%struct.UConverterToUnicodeArgs*, i32*)*, void (%struct.UConverterToUnicodeArgs*, i32*)*, void (%struct.UConverterFromUnicodeArgs*, i32*)*, void (%struct.UConverterFromUnicodeArgs*, i32*)*, i32 (%struct.UConverterToUnicodeArgs*, i32*)*, void (%struct.UConverter*, i8*, i32*)*, i8* (%struct.UConverter*)*, void (%struct.UConverterFromUnicodeArgs*, i32, i32*)*, %struct.UConverter* (%struct.UConverter*, i8*, i32*, i32*)*, void (%struct.UConverter*, %struct.USetAdder*, i32, i32*)*, void (%struct.UConverterFromUnicodeArgs*, %struct.UConverterToUnicodeArgs*, i32*)*, void (%struct.UConverterFromUnicodeArgs*, %struct.UConverterToUnicodeArgs*, i32*)* }
%struct.UConverterLoadArgs = type { i32, i32, i8, i8, i16, i32, i8*, i8*, i8* }
%struct.UConverter = type { void (i8*, %struct.UConverterFromUnicodeArgs*, i16*, i32, i32, i32, i32*)*, void (i8*, %struct.UConverterToUnicodeArgs*, i8*, i32, i32, i32*)*, i8*, i8*, i8*, i8*, %struct.UConverterSharedData*, i32, i8, i8, i8, i8, i8, [7 x i8], i32, i32, i32, i32, i8, i8, i8, i8, i8, i8, i8, i8, [8 x i8], [32 x i8], [2 x i16], [2 x i16], [32 x i16], i32, [19 x i16], [31 x i8], i8, i8, i8, i32 }
%struct.UConverterFromUnicodeArgs = type { i16, i8, %struct.UConverter*, i16*, i16*, i8*, i8*, i32* }
%struct.UConverterToUnicodeArgs = type { i16, i8, %struct.UConverter*, i8*, i8*, i16*, i16*, i32* }
%struct.USetAdder = type { %struct.USet*, void (%struct.USet*, i32)*, void (%struct.USet*, i32, i32)*, void (%struct.USet*, i16*, i32)*, void (%struct.USet*, i32)*, void (%struct.USet*, i32, i32)* }
%struct.USet = type opaque
%struct.UConverterMBCSTable = type { i8, i8, i8, i32, [256 x i32]*, [256 x i32]*, i16*, %struct._MBCSToUFallback*, i16*, i16*, [64 x i16], i8*, i8*, i32, i8, i8, i8, i16, i32, i8*, i8*, %struct.UConverterSharedData*, i32* }
%struct._MBCSToUFallback = type { i32, i32 }
%struct.UHashtable = type { %struct.UHashElement*, i32 (i8*)*, i8 (i8*, i8*)*, i8 (i8*, i8*)*, void (i8*)*, void (i8*)*, i32, i32, i32, i32, float, float, i8, i8 }
%struct.UHashElement = type { i32, %union.UElement, %union.UElement }
%union.UElement = type { i8* }
%"class.std::__1::mutex" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"class.icu_69::UMutex" = type { [40 x i8], %"struct.std::__1::atomic", %"class.icu_69::UMutex"* }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { %"class.std::__1::mutex"* }
%struct.anon = type { i8*, i32 }
%struct.UDataMemory = type opaque
%struct.UConverterNamePieces = type { [60 x i8], [157 x i8], i32 }
%"struct.icu_69::UInitOnce" = type { %"struct.std::__1::atomic.0", i32 }
%"struct.std::__1::atomic.0" = type { %"struct.std::__1::__atomic_base.1" }
%"struct.std::__1::__atomic_base.1" = type { %"struct.std::__1::__atomic_base.2" }
%"struct.std::__1::__atomic_base.2" = type { %"struct.std::__1::__cxx_atomic_impl.3" }
%"struct.std::__1::__cxx_atomic_impl.3" = type { %"struct.std::__1::__cxx_atomic_base_impl.4" }
%"struct.std::__1::__cxx_atomic_base_impl.4" = type { i32 }
%struct.UEnumeration = type opaque
%struct.UDataSwapper = type { i8, i8, i8, i8, i16 (i16)*, i32 (i32)*, i32 (%struct.UDataSwapper*, i8*, i32, i16*, i32)*, void (i16*, i16)*, void (i32*, i32)*, {}*, {}*, {}*, {}*, void (i8*, i8*, %struct.__va_list_tag*)*, i8* }
%struct.__va_list_tag = type { i32, i32, i8*, i8* }
%struct.UDataInfo = type { i16, i16, i8, i8, i8, i8, [4 x i8], [4 x i8], [4 x i8] }

@.str = private unnamed_addr constant [6 x i8] c"UTF-8\00", align 1
@_ZL13converterData = internal unnamed_addr constant [34 x %struct.UConverterSharedData*] [%struct.UConverterSharedData* null, %struct.UConverterSharedData* null, %struct.UConverterSharedData* @_MBCSData_69, %struct.UConverterSharedData* @_Latin1Data_69, %struct.UConverterSharedData* @_UTF8Data_69, %struct.UConverterSharedData* @_UTF16BEData_69, %struct.UConverterSharedData* @_UTF16LEData_69, %struct.UConverterSharedData* null, %struct.UConverterSharedData* null, %struct.UConverterSharedData* null, %struct.UConverterSharedData* @_ISO2022Data_69, %struct.UConverterSharedData* null, %struct.UConverterSharedData* null, %struct.UConverterSharedData* null, %struct.UConverterSharedData* null, %struct.UConverterSharedData* null, %struct.UConverterSharedData* null, %struct.UConverterSharedData* null, %struct.UConverterSharedData* null, %struct.UConverterSharedData* null, %struct.UConverterSharedData* null, %struct.UConverterSharedData* null, %struct.UConverterSharedData* null, %struct.UConverterSharedData* null, %struct.UConverterSharedData* null, %struct.UConverterSharedData* null, %struct.UConverterSharedData* @_ASCIIData_69, %struct.UConverterSharedData* null, %struct.UConverterSharedData* null, %struct.UConverterSharedData* @_UTF16Data_69, %struct.UConverterSharedData* null, %struct.UConverterSharedData* null, %struct.UConverterSharedData* null, %struct.UConverterSharedData* null], align 16
@.str.1 = private unnamed_addr constant [18 x i8] c"open converter %s\00", align 1
@.str.2 = private unnamed_addr constant [30 x i8] c"test if can open converter %s\00", align 1
@.str.3 = private unnamed_addr constant [35 x i8] c"open algorithmic converter type %d\00", align 1
@.str.4 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@.str.5 = private unnamed_addr constant [34 x i8] c"open converter %s from package %s\00", align 1
@_ZL21SHARED_DATA_HASHTABLE = internal unnamed_addr global %struct.UHashtable* null, align 8
@.str.6 = private unnamed_addr constant [53 x i8] c"ucnv_flushCache() exits with %d converters remaining\00", align 1
@_ZL24gAvailableConverterCount = internal unnamed_addr global i16 0, align 2
@_ZL20gAvailableConverters = internal unnamed_addr global i8** null, align 8
@.str.7 = private unnamed_addr constant [123 x i8] c"ucnv_swap(): data format %02x.%02x.%02x.%02x (format version %02x.%02x) is not recognized as an ICU .cnv conversion table\0A\00", align 1
@.str.8 = private unnamed_addr constant [79 x i8] c"ucnv_swap(): too few bytes (%d after header) for an ICU .cnv conversion table\0A\00", align 1
@.str.9 = private unnamed_addr constant [44 x i8] c"ucnv_swap(): error swapping converter name\0A\00", align 1
@.str.10 = private unnamed_addr constant [85 x i8] c"ucnv_swap(): too few bytes (%d after headers) for an ICU MBCS .cnv conversion table\0A\00", align 1
@.str.11 = private unnamed_addr constant [52 x i8] c"ucnv_swap(): unsupported _MBCSHeader.version %d.%d\0A\00", align 1
@.str.12 = private unnamed_addr constant [68 x i8] c"ucnv_swap(): unsupported combination of makeconv --small with SBCS\0A\00", align 1
@.str.13 = private unnamed_addr constant [48 x i8] c"ucnv_swap(): unsupported MBCS output type 0x%x\0A\00", align 1
@.str.14 = private unnamed_addr constant [105 x i8] c"ucnv_swap(): too few bytes (%d after headers) for an ICU MBCS .cnv conversion table with extension data\0A\00", align 1
@.str.15 = private unnamed_addr constant [51 x i8] c"ucnv_swap(): unknown conversionType=%d!=UCNV_MBCS\0A\00", align 1
@_ZL28gAvailableConvertersInitOnce = internal global { { { i32 } }, i32 } zeroinitializer, align 4
@.str.17 = private unnamed_addr constant [34 x i8] c"load converter %s from package %s\00", align 1
@_ZL9DATA_TYPE = internal constant [4 x i8] c"cnv\00", align 1
@.str.18 = private unnamed_addr constant [35 x i8] c"unload converter %s shared data %p\00", align 1
@_ZL13cnvCacheMutex = internal global { [40 x i8], { { %"class.std::__1::mutex"* } }, %"class.icu_69::UMutex"* } zeroinitializer, align 8
@_MBCSData_69 = external global %struct.UConverterSharedData, align 8
@_Latin1Data_69 = external global %struct.UConverterSharedData, align 8
@_UTF8Data_69 = external global %struct.UConverterSharedData, align 8
@_UTF16BEData_69 = external global %struct.UConverterSharedData, align 8
@_UTF16LEData_69 = external global %struct.UConverterSharedData, align 8
@_ISO2022Data_69 = external global %struct.UConverterSharedData, align 8
@_ASCIIData_69 = external global %struct.UConverterSharedData, align 8
@_UTF16Data_69 = external global %struct.UConverterSharedData, align 8
@.str.20 = private unnamed_addr constant [8 x i8] c"locale=\00", align 1
@.str.21 = private unnamed_addr constant [9 x i8] c"version=\00", align 1
@.str.22 = private unnamed_addr constant [9 x i8] c"swaplfnl\00", align 1
@_ZL11cnvNameType = internal unnamed_addr constant [9 x %struct.anon] [%struct.anon { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.23, i32 0, i32 0), i32 10 }, %struct.anon { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.24, i32 0, i32 0), i32 3 }, %struct.anon { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.25, i32 0, i32 0), i32 26 }, %struct.anon { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.26, i32 0, i32 0), i32 29 }, %struct.anon { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.27, i32 0, i32 0), i32 5 }, %struct.anon { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.28, i32 0, i32 0), i32 6 }, %struct.anon { i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.29, i32 0, i32 0), i32 5 }, %struct.anon { i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.30, i32 0, i32 0), i32 6 }, %struct.anon { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.31, i32 0, i32 0), i32 4 }], align 16
@.str.23 = private unnamed_addr constant [8 x i8] c"iso2022\00", align 1
@.str.24 = private unnamed_addr constant [9 x i8] c"iso88591\00", align 1
@.str.25 = private unnamed_addr constant [8 x i8] c"usascii\00", align 1
@.str.26 = private unnamed_addr constant [6 x i8] c"utf16\00", align 1
@.str.27 = private unnamed_addr constant [8 x i8] c"utf16be\00", align 1
@.str.28 = private unnamed_addr constant [8 x i8] c"utf16le\00", align 1
@.str.29 = private unnamed_addr constant [20 x i8] c"utf16oppositeendian\00", align 1
@.str.30 = private unnamed_addr constant [20 x i8] c"utf16platformendian\00", align 1
@.str.31 = private unnamed_addr constant [5 x i8] c"utf8\00", align 1

; Function Attrs: nounwind ssp uwtable
define hidden void @ucnv_enableCleanup_69() local_unnamed_addr #0 {
  tail call void @ucln_common_registerCleanup_69(i32 20, i8 ()* nonnull @_ZL12ucnv_cleanupv) #9
  ret void
}

declare void @ucln_common_registerCleanup_69(i32, i8 ()*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define internal signext i8 @_ZL12ucnv_cleanupv() #0 {
  %1 = tail call i32 @ucnv_flushCache_69()
  %2 = load %struct.UHashtable*, %struct.UHashtable** @_ZL21SHARED_DATA_HASHTABLE, align 8
  %3 = icmp eq %struct.UHashtable* %2, null
  br i1 %3, label %9, label %4

4:                                                ; preds = %0
  %5 = tail call i32 @uhash_count_69(%struct.UHashtable* nonnull %2) #9
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %7, label %9

7:                                                ; preds = %4
  %8 = load %struct.UHashtable*, %struct.UHashtable** @_ZL21SHARED_DATA_HASHTABLE, align 8
  tail call void @uhash_close_69(%struct.UHashtable* %8) #9
  store %struct.UHashtable* null, %struct.UHashtable** @_ZL21SHARED_DATA_HASHTABLE, align 8
  br label %9

9:                                                ; preds = %0, %7, %4
  store i16 0, i16* @_ZL24gAvailableConverterCount, align 2
  %10 = load i8**, i8*** @_ZL20gAvailableConverters, align 8
  %11 = icmp eq i8** %10, null
  br i1 %11, label %14, label %12

12:                                               ; preds = %9
  %13 = bitcast i8** %10 to i8*
  tail call void @uprv_free_69(i8* nonnull %13) #9
  store i8** null, i8*** @_ZL20gAvailableConverters, align 8
  br label %14

14:                                               ; preds = %9, %12
  store atomic i32 0, i32* getelementptr inbounds ({ { { i32 } }, i32 }, { { { i32 } }, i32 }* @_ZL28gAvailableConvertersInitOnce, i64 0, i32 0, i32 0, i32 0) seq_cst, align 4
  %15 = load %struct.UHashtable*, %struct.UHashtable** @_ZL21SHARED_DATA_HASHTABLE, align 8
  %16 = icmp eq %struct.UHashtable* %15, null
  %17 = zext i1 %16 to i8
  ret i8 %17
}

; Function Attrs: nounwind ssp uwtable
define hidden %struct.UConverterSharedData* @ucnv_load_69(%struct.UConverterLoadArgs*, i32*) local_unnamed_addr #0 {
  %3 = alloca i32, align 4
  %4 = icmp eq i32* %1, null
  br i1 %4, label %63, label %5

5:                                                ; preds = %2
  %6 = load i32, i32* %1, align 4
  %7 = icmp slt i32 %6, 1
  br i1 %7, label %8, label %63

8:                                                ; preds = %5
  %9 = getelementptr inbounds %struct.UConverterLoadArgs, %struct.UConverterLoadArgs* %0, i64 0, i32 6
  %10 = load i8*, i8** %9, align 8
  %11 = icmp eq i8* %10, null
  br i1 %11, label %17, label %12

12:                                               ; preds = %8
  %13 = load i8, i8* %10, align 1
  %14 = icmp eq i8 %13, 0
  br i1 %14, label %17, label %15

15:                                               ; preds = %12
  %16 = tail call fastcc %struct.UConverterSharedData* @_ZL23createConverterFromFileP18UConverterLoadArgsP10UErrorCode(%struct.UConverterLoadArgs* %0, i32* nonnull %1)
  br label %63

17:                                               ; preds = %12, %8
  %18 = load %struct.UHashtable*, %struct.UHashtable** @_ZL21SHARED_DATA_HASHTABLE, align 8
  %19 = icmp eq %struct.UHashtable* %18, null
  br i1 %19, label %25, label %20

20:                                               ; preds = %17
  %21 = getelementptr inbounds %struct.UConverterLoadArgs, %struct.UConverterLoadArgs* %0, i64 0, i32 7
  %22 = load i8*, i8** %21, align 8
  %23 = tail call i8* @uhash_get_69(%struct.UHashtable* nonnull %18, i8* %22) #9
  %24 = icmp eq i8* %23, null
  br i1 %24, label %25, label %57

25:                                               ; preds = %17, %20
  %26 = tail call fastcc %struct.UConverterSharedData* @_ZL23createConverterFromFileP18UConverterLoadArgsP10UErrorCode(%struct.UConverterLoadArgs* %0, i32* nonnull %1)
  %27 = load i32, i32* %1, align 4
  %28 = icmp sgt i32 %27, 0
  %29 = icmp eq %struct.UConverterSharedData* %26, null
  %30 = or i1 %29, %28
  br i1 %30, label %63, label %31

31:                                               ; preds = %25
  %32 = getelementptr inbounds %struct.UConverterLoadArgs, %struct.UConverterLoadArgs* %0, i64 0, i32 2
  %33 = load i8, i8* %32, align 8
  %34 = icmp eq i8 %33, 0
  br i1 %34, label %35, label %63

35:                                               ; preds = %31
  %36 = bitcast i32* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %36) #9
  store i32 0, i32* %3, align 4
  %37 = load %struct.UHashtable*, %struct.UHashtable** @_ZL21SHARED_DATA_HASHTABLE, align 8
  %38 = icmp eq %struct.UHashtable* %37, null
  br i1 %38, label %39, label %48

39:                                               ; preds = %35
  %40 = call zeroext i16 @ucnv_io_countKnownConverters_69(i32* nonnull %3) #9
  %41 = zext i16 %40 to i32
  %42 = shl nuw nsw i32 %41, 1
  %43 = call %struct.UHashtable* @uhash_openSize_69(i32 (i8*)* nonnull @uhash_hashChars_69, i8 (i8*, i8*)* nonnull @uhash_compareChars_69, i8 (i8*, i8*)* null, i32 %42, i32* nonnull %3) #9
  store %struct.UHashtable* %43, %struct.UHashtable** @_ZL21SHARED_DATA_HASHTABLE, align 8
  call void @ucln_common_registerCleanup_69(i32 20, i8 ()* nonnull @_ZL12ucnv_cleanupv) #9
  %44 = load i32, i32* %3, align 4
  %45 = icmp slt i32 %44, 1
  br i1 %45, label %46, label %56

46:                                               ; preds = %39
  %47 = load %struct.UHashtable*, %struct.UHashtable** @_ZL21SHARED_DATA_HASHTABLE, align 8
  br label %48

48:                                               ; preds = %46, %35
  %49 = phi %struct.UHashtable* [ %47, %46 ], [ %37, %35 ]
  %50 = getelementptr inbounds %struct.UConverterSharedData, %struct.UConverterSharedData* %26, i64 0, i32 4
  store i8 1, i8* %50, align 8
  %51 = getelementptr inbounds %struct.UConverterSharedData, %struct.UConverterSharedData* %26, i64 0, i32 3
  %52 = load %struct.UConverterStaticData*, %struct.UConverterStaticData** %51, align 8
  %53 = getelementptr inbounds %struct.UConverterStaticData, %struct.UConverterStaticData* %52, i64 0, i32 1, i64 0
  %54 = bitcast %struct.UConverterSharedData* %26 to i8*
  %55 = call i8* @uhash_put_69(%struct.UHashtable* %49, i8* %53, i8* %54, i32* nonnull %3) #9
  br label %56

56:                                               ; preds = %39, %48
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %36) #9
  br label %63

57:                                               ; preds = %20
  %58 = bitcast i8* %23 to %struct.UConverterSharedData*
  %59 = getelementptr inbounds i8, i8* %23, i64 4
  %60 = bitcast i8* %59 to i32*
  %61 = load i32, i32* %60, align 4
  %62 = add i32 %61, 1
  store i32 %62, i32* %60, align 4
  br label %63

63:                                               ; preds = %57, %56, %31, %25, %2, %5, %15
  %64 = phi %struct.UConverterSharedData* [ %16, %15 ], [ null, %5 ], [ null, %2 ], [ null, %25 ], [ %26, %31 ], [ %26, %56 ], [ %58, %57 ]
  ret %struct.UConverterSharedData* %64
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: nounwind ssp uwtable
define internal fastcc %struct.UConverterSharedData* @_ZL23createConverterFromFileP18UConverterLoadArgsP10UErrorCode(%struct.UConverterLoadArgs*, i32*) unnamed_addr #0 {
  %3 = tail call i32 @utrace_getLevel_69() #9
  %4 = icmp sgt i32 %3, 4
  br i1 %4, label %5, label %6

5:                                                ; preds = %2
  tail call void @utrace_entry_69(i32 4102) #9
  br label %6

6:                                                ; preds = %5, %2
  %7 = phi i32 [ -2147483648, %5 ], [ 0, %2 ]
  %8 = load i32, i32* %1, align 4
  %9 = icmp slt i32 %8, 1
  br i1 %9, label %13, label %10

10:                                               ; preds = %6
  %11 = icmp eq i32 %7, 0
  br i1 %11, label %100, label %12

12:                                               ; preds = %10
  tail call void (i32, i32, ...) @utrace_exit_69(i32 4102, i32 16, i32 %8) #9
  br label %100

13:                                               ; preds = %6
  %14 = tail call i32 @utrace_getLevel_69() #9
  %15 = icmp sgt i32 %14, 4
  br i1 %15, label %16, label %21

16:                                               ; preds = %13
  %17 = getelementptr inbounds %struct.UConverterLoadArgs, %struct.UConverterLoadArgs* %0, i64 0, i32 7
  %18 = load i8*, i8** %17, align 8
  %19 = getelementptr inbounds %struct.UConverterLoadArgs, %struct.UConverterLoadArgs* %0, i64 0, i32 6
  %20 = load i8*, i8** %19, align 8
  tail call void (i32, i32, i8*, ...) @utrace_data_69(i32 4102, i32 5, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.17, i64 0, i64 0), i8* %18, i8* %20) #9
  br label %21

21:                                               ; preds = %16, %13
  %22 = getelementptr inbounds %struct.UConverterLoadArgs, %struct.UConverterLoadArgs* %0, i64 0, i32 6
  %23 = load i8*, i8** %22, align 8
  %24 = getelementptr inbounds %struct.UConverterLoadArgs, %struct.UConverterLoadArgs* %0, i64 0, i32 7
  %25 = load i8*, i8** %24, align 8
  %26 = tail call %struct.UDataMemory* @udata_openChoice_69(i8* %23, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @_ZL9DATA_TYPE, i64 0, i64 0), i8* %25, i8 (i8*, i8*, i8*, %struct.UDataInfo*)* nonnull @_ZL15isCnvAcceptablePvPKcS1_PK9UDataInfo, i8* null, i32* %1) #9
  %27 = load i32, i32* %1, align 4
  %28 = icmp slt i32 %27, 1
  br i1 %28, label %32, label %29

29:                                               ; preds = %21
  %30 = icmp eq i32 %7, 0
  br i1 %30, label %100, label %31

31:                                               ; preds = %29
  tail call void (i32, i32, ...) @utrace_exit_69(i32 4102, i32 16, i32 %27) #9
  br label %100

32:                                               ; preds = %21
  %33 = tail call i8* @udata_getMemory_69(%struct.UDataMemory* %26) #9
  %34 = getelementptr inbounds i8, i8* %33, i64 69
  %35 = load i8, i8* %34, align 1
  %36 = load i32, i32* %1, align 4
  %37 = icmp slt i32 %36, 1
  br i1 %37, label %38, label %91

38:                                               ; preds = %32
  %39 = sext i8 %35 to i32
  %40 = and i32 %39, 65534
  %41 = icmp ugt i32 %40, 33
  br i1 %41, label %62, label %42

42:                                               ; preds = %38
  %43 = sext i8 %35 to i64
  %44 = getelementptr inbounds [34 x %struct.UConverterSharedData*], [34 x %struct.UConverterSharedData*]* @_ZL13converterData, i64 0, i64 %43
  %45 = load %struct.UConverterSharedData*, %struct.UConverterSharedData** %44, align 8
  %46 = lshr i64 16575888259, %43
  %47 = and i64 %46, 1
  %48 = icmp eq i64 %47, 0
  %49 = bitcast %struct.UConverterSharedData* %45 to i8*
  br i1 %48, label %50, label %62

50:                                               ; preds = %42
  %51 = getelementptr inbounds %struct.UConverterSharedData, %struct.UConverterSharedData* %45, i64 0, i32 5
  %52 = load i8, i8* %51, align 1
  %53 = icmp eq i8 %52, 0
  br i1 %53, label %62, label %54

54:                                               ; preds = %50
  %55 = getelementptr inbounds %struct.UConverterSharedData, %struct.UConverterSharedData* %45, i64 0, i32 1
  %56 = load i32, i32* %55, align 4
  %57 = icmp eq i32 %56, 1
  br i1 %57, label %58, label %62

58:                                               ; preds = %54
  %59 = bitcast i8* %33 to i32*
  %60 = load i32, i32* %59, align 4
  %61 = icmp eq i32 %60, 100
  br i1 %61, label %63, label %62

62:                                               ; preds = %58, %54, %50, %42, %38
  store i32 13, i32* %1, align 4
  br label %91

63:                                               ; preds = %58
  %64 = tail call noalias i8* @uprv_malloc_69(i64 296) #10
  %65 = bitcast i8* %64 to %struct.UConverterSharedData*
  %66 = icmp eq i8* %64, null
  br i1 %66, label %67, label %68

67:                                               ; preds = %63
  store i32 7, i32* %1, align 4
  br label %91

68:                                               ; preds = %63
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %64, i8* align 8 %49, i64 296, i1 false) #9
  %69 = getelementptr inbounds i8, i8* %64, i64 16
  %70 = bitcast i8* %69 to i8**
  store i8* %33, i8** %70, align 8
  %71 = getelementptr inbounds i8, i8* %64, i64 24
  store i8 0, i8* %71, align 8
  %72 = getelementptr inbounds i8, i8* %64, i64 8
  %73 = bitcast i8* %72 to %struct.UDataMemory**
  store %struct.UDataMemory* %26, %struct.UDataMemory** %73, align 8
  %74 = getelementptr inbounds i8, i8* %64, i64 32
  %75 = bitcast i8* %74 to %struct.UConverterImpl**
  %76 = load %struct.UConverterImpl*, %struct.UConverterImpl** %75, align 8
  %77 = getelementptr inbounds %struct.UConverterImpl, %struct.UConverterImpl* %76, i64 0, i32 1
  %78 = load void (%struct.UConverterSharedData*, %struct.UConverterLoadArgs*, i8*, i32*)*, void (%struct.UConverterSharedData*, %struct.UConverterLoadArgs*, i8*, i32*)** %77, align 8
  %79 = icmp eq void (%struct.UConverterSharedData*, %struct.UConverterLoadArgs*, i8*, i32*)* %78, null
  br i1 %79, label %87, label %80

80:                                               ; preds = %68
  %81 = load i32, i32* %59, align 4
  %82 = zext i32 %81 to i64
  %83 = getelementptr inbounds i8, i8* %33, i64 %82
  tail call void %78(%struct.UConverterSharedData* nonnull %65, %struct.UConverterLoadArgs* %0, i8* %83, i32* %1) #9
  %84 = load i32, i32* %1, align 4
  %85 = icmp slt i32 %84, 1
  br i1 %85, label %95, label %86

86:                                               ; preds = %80
  tail call void @uprv_free_69(i8* nonnull %64) #9
  br label %87

87:                                               ; preds = %68, %86
  %88 = phi %struct.UConverterSharedData* [ %65, %68 ], [ null, %86 ]
  %89 = load i32, i32* %1, align 4
  %90 = icmp slt i32 %89, 1
  br i1 %90, label %95, label %91

91:                                               ; preds = %67, %62, %32, %87
  tail call void @udata_close_69(%struct.UDataMemory* %26) #9
  %92 = icmp eq i32 %7, 0
  br i1 %92, label %100, label %93

93:                                               ; preds = %91
  %94 = load i32, i32* %1, align 4
  tail call void (i32, i32, ...) @utrace_exit_69(i32 4102, i32 16, i32 %94) #9
  br label %100

95:                                               ; preds = %80, %87
  %96 = phi %struct.UConverterSharedData* [ %88, %87 ], [ %65, %80 ]
  %97 = phi i32 [ %89, %87 ], [ %84, %80 ]
  %98 = icmp eq i32 %7, 0
  br i1 %98, label %100, label %99

99:                                               ; preds = %95
  tail call void (i32, i32, ...) @utrace_exit_69(i32 4102, i32 18, %struct.UConverterSharedData* %96, i32 %97) #9
  br label %100

100:                                              ; preds = %99, %95, %93, %91, %31, %29, %12, %10
  %101 = phi %struct.UConverterSharedData* [ null, %10 ], [ null, %12 ], [ null, %29 ], [ null, %31 ], [ null, %91 ], [ null, %93 ], [ %96, %95 ], [ %96, %99 ]
  ret %struct.UConverterSharedData* %101
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: nounwind ssp uwtable
define hidden void @ucnv_unload_69(%struct.UConverterSharedData*) local_unnamed_addr #0 {
  %2 = icmp eq %struct.UConverterSharedData* %0, null
  br i1 %2, label %15, label %3

3:                                                ; preds = %1
  %4 = getelementptr inbounds %struct.UConverterSharedData, %struct.UConverterSharedData* %0, i64 0, i32 1
  %5 = load i32, i32* %4, align 4
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %10, label %7

7:                                                ; preds = %3
  %8 = add i32 %5, -1
  store i32 %8, i32* %4, align 4
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %10, label %15

10:                                               ; preds = %3, %7
  %11 = getelementptr inbounds %struct.UConverterSharedData, %struct.UConverterSharedData* %0, i64 0, i32 4
  %12 = load i8, i8* %11, align 8
  %13 = icmp eq i8 %12, 0
  br i1 %13, label %14, label %15

14:                                               ; preds = %10
  tail call fastcc void @_ZL30ucnv_deleteSharedConverterDataP20UConverterSharedData(%struct.UConverterSharedData* nonnull %0)
  br label %15

15:                                               ; preds = %1, %7, %10, %14
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc void @_ZL30ucnv_deleteSharedConverterDataP20UConverterSharedData(%struct.UConverterSharedData*) unnamed_addr #0 {
  %2 = tail call i32 @utrace_getLevel_69() #9
  %3 = icmp sgt i32 %2, 4
  br i1 %3, label %4, label %5

4:                                                ; preds = %1
  tail call void @utrace_entry_69(i32 4103) #9
  br label %5

5:                                                ; preds = %1, %4
  %6 = phi i32 [ -2147483648, %4 ], [ 0, %1 ]
  %7 = tail call i32 @utrace_getLevel_69() #9
  %8 = icmp sgt i32 %7, 4
  br i1 %8, label %9, label %13

9:                                                ; preds = %5
  %10 = getelementptr inbounds %struct.UConverterSharedData, %struct.UConverterSharedData* %0, i64 0, i32 3
  %11 = load %struct.UConverterStaticData*, %struct.UConverterStaticData** %10, align 8
  %12 = getelementptr inbounds %struct.UConverterStaticData, %struct.UConverterStaticData* %11, i64 0, i32 1, i64 0
  tail call void (i32, i32, i8*, ...) @utrace_data_69(i32 4103, i32 5, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.18, i64 0, i64 0), i8* %12, %struct.UConverterSharedData* %0) #9
  br label %13

13:                                               ; preds = %9, %5
  %14 = getelementptr inbounds %struct.UConverterSharedData, %struct.UConverterSharedData* %0, i64 0, i32 1
  %15 = load i32, i32* %14, align 4
  %16 = icmp eq i32 %15, 0
  br i1 %16, label %20, label %17

17:                                               ; preds = %13
  %18 = icmp eq i32 %6, 0
  br i1 %18, label %37, label %19

19:                                               ; preds = %17
  tail call void (i32, i32, ...) @utrace_exit_69(i32 4103, i32 1, i32 0) #9
  br label %37

20:                                               ; preds = %13
  %21 = getelementptr inbounds %struct.UConverterSharedData, %struct.UConverterSharedData* %0, i64 0, i32 6
  %22 = load %struct.UConverterImpl*, %struct.UConverterImpl** %21, align 8
  %23 = getelementptr inbounds %struct.UConverterImpl, %struct.UConverterImpl* %22, i64 0, i32 2
  %24 = load void (%struct.UConverterSharedData*)*, void (%struct.UConverterSharedData*)** %23, align 8
  %25 = icmp eq void (%struct.UConverterSharedData*)* %24, null
  br i1 %25, label %27, label %26

26:                                               ; preds = %20
  tail call void %24(%struct.UConverterSharedData* %0) #9
  br label %27

27:                                               ; preds = %20, %26
  %28 = getelementptr inbounds %struct.UConverterSharedData, %struct.UConverterSharedData* %0, i64 0, i32 2
  %29 = load i8*, i8** %28, align 8
  %30 = icmp eq i8* %29, null
  br i1 %30, label %33, label %31

31:                                               ; preds = %27
  %32 = bitcast i8* %29 to %struct.UDataMemory*
  tail call void @udata_close_69(%struct.UDataMemory* nonnull %32) #9
  br label %33

33:                                               ; preds = %27, %31
  %34 = bitcast %struct.UConverterSharedData* %0 to i8*
  tail call void @uprv_free_69(i8* %34) #9
  %35 = icmp eq i32 %6, 0
  br i1 %35, label %37, label %36

36:                                               ; preds = %33
  tail call void (i32, i32, ...) @utrace_exit_69(i32 4103, i32 1, i32 1) #9
  br label %37

37:                                               ; preds = %36, %33, %19, %17
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @ucnv_unloadSharedDataIfReady_69(%struct.UConverterSharedData*) local_unnamed_addr #0 {
  %2 = icmp eq %struct.UConverterSharedData* %0, null
  br i1 %2, label %20, label %3

3:                                                ; preds = %1
  %4 = getelementptr inbounds %struct.UConverterSharedData, %struct.UConverterSharedData* %0, i64 0, i32 5
  %5 = load i8, i8* %4, align 1
  %6 = icmp eq i8 %5, 0
  br i1 %6, label %20, label %7

7:                                                ; preds = %3
  tail call void @umtx_lock_69(%"class.icu_69::UMutex"* bitcast ({ [40 x i8], { { %"class.std::__1::mutex"* } }, %"class.icu_69::UMutex"* }* @_ZL13cnvCacheMutex to %"class.icu_69::UMutex"*)) #9
  %8 = getelementptr inbounds %struct.UConverterSharedData, %struct.UConverterSharedData* %0, i64 0, i32 1
  %9 = load i32, i32* %8, align 4
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %14, label %11

11:                                               ; preds = %7
  %12 = add i32 %9, -1
  store i32 %12, i32* %8, align 4
  %13 = icmp eq i32 %12, 0
  br i1 %13, label %14, label %19

14:                                               ; preds = %11, %7
  %15 = getelementptr inbounds %struct.UConverterSharedData, %struct.UConverterSharedData* %0, i64 0, i32 4
  %16 = load i8, i8* %15, align 8
  %17 = icmp eq i8 %16, 0
  br i1 %17, label %18, label %19

18:                                               ; preds = %14
  tail call fastcc void @_ZL30ucnv_deleteSharedConverterDataP20UConverterSharedData(%struct.UConverterSharedData* nonnull %0) #9
  br label %19

19:                                               ; preds = %11, %14, %18
  tail call void @umtx_unlock_69(%"class.icu_69::UMutex"* bitcast ({ [40 x i8], { { %"class.std::__1::mutex"* } }, %"class.icu_69::UMutex"* }* @_ZL13cnvCacheMutex to %"class.icu_69::UMutex"*)) #9
  br label %20

20:                                               ; preds = %3, %1, %19
  ret void
}

declare void @umtx_lock_69(%"class.icu_69::UMutex"*) local_unnamed_addr #1

declare void @umtx_unlock_69(%"class.icu_69::UMutex"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @ucnv_incrementRefCount_69(%struct.UConverterSharedData*) local_unnamed_addr #0 {
  %2 = icmp eq %struct.UConverterSharedData* %0, null
  br i1 %2, label %11, label %3

3:                                                ; preds = %1
  %4 = getelementptr inbounds %struct.UConverterSharedData, %struct.UConverterSharedData* %0, i64 0, i32 5
  %5 = load i8, i8* %4, align 1
  %6 = icmp eq i8 %5, 0
  br i1 %6, label %11, label %7

7:                                                ; preds = %3
  tail call void @umtx_lock_69(%"class.icu_69::UMutex"* bitcast ({ [40 x i8], { { %"class.std::__1::mutex"* } }, %"class.icu_69::UMutex"* }* @_ZL13cnvCacheMutex to %"class.icu_69::UMutex"*)) #9
  %8 = getelementptr inbounds %struct.UConverterSharedData, %struct.UConverterSharedData* %0, i64 0, i32 1
  %9 = load i32, i32* %8, align 4
  %10 = add i32 %9, 1
  store i32 %10, i32* %8, align 4
  tail call void @umtx_unlock_69(%"class.icu_69::UMutex"* bitcast ({ [40 x i8], { { %"class.std::__1::mutex"* } }, %"class.icu_69::UMutex"* }* @_ZL13cnvCacheMutex to %"class.icu_69::UMutex"*)) #9
  br label %11

11:                                               ; preds = %3, %1, %7
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden %struct.UConverterSharedData* @ucnv_loadSharedData_69(i8*, %struct.UConverterNamePieces*, %struct.UConverterLoadArgs*, i32*) local_unnamed_addr #0 {
  %5 = alloca [60 x i8], align 16
  %6 = alloca %struct.UConverterNamePieces, align 4
  %7 = alloca %struct.UConverterLoadArgs, align 8
  %8 = alloca i32, align 4
  %9 = alloca i8, align 1
  %10 = getelementptr inbounds %struct.UConverterNamePieces, %struct.UConverterNamePieces* %6, i64 0, i32 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 224, i8* nonnull %10) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %10, i8 -86, i64 224, i1 false)
  %11 = bitcast %struct.UConverterLoadArgs* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %11) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %11, i8 -86, i64 40, i1 false)
  %12 = bitcast i32* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %12) #9
  store i32 0, i32* %8, align 4
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %9) #9
  store i8 1, i8* %9, align 1
  %13 = load i32, i32* %3, align 4
  %14 = icmp slt i32 %13, 1
  br i1 %14, label %15, label %133

15:                                               ; preds = %4
  %16 = icmp eq %struct.UConverterNamePieces* %1, null
  %17 = icmp eq %struct.UConverterLoadArgs* %2, null
  br i1 %16, label %18, label %20

18:                                               ; preds = %15
  br i1 %17, label %21, label %19

19:                                               ; preds = %18
  store i32 5, i32* %3, align 4
  br label %133

20:                                               ; preds = %15
  br i1 %17, label %21, label %24

21:                                               ; preds = %18, %20
  %22 = phi %struct.UConverterNamePieces* [ %1, %20 ], [ %6, %18 ]
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %11, i8 0, i64 40, i1 false)
  %23 = getelementptr inbounds %struct.UConverterLoadArgs, %struct.UConverterLoadArgs* %7, i64 0, i32 0
  store i32 40, i32* %23, align 8
  br label %24

24:                                               ; preds = %21, %20
  %25 = phi %struct.UConverterNamePieces* [ %22, %21 ], [ %1, %20 ]
  %26 = phi %struct.UConverterLoadArgs* [ %7, %21 ], [ %2, %20 ]
  %27 = getelementptr inbounds %struct.UConverterNamePieces, %struct.UConverterNamePieces* %25, i64 0, i32 0, i64 0
  store i8 0, i8* %27, align 4
  %28 = getelementptr inbounds %struct.UConverterNamePieces, %struct.UConverterNamePieces* %25, i64 0, i32 1, i64 0
  store i8 0, i8* %28, align 4
  %29 = getelementptr inbounds %struct.UConverterNamePieces, %struct.UConverterNamePieces* %25, i64 0, i32 2
  store i32 0, i32* %29, align 4
  %30 = getelementptr inbounds %struct.UConverterLoadArgs, %struct.UConverterLoadArgs* %26, i64 0, i32 7
  store i8* %0, i8** %30, align 8
  %31 = getelementptr inbounds %struct.UConverterLoadArgs, %struct.UConverterLoadArgs* %26, i64 0, i32 8
  store i8* %28, i8** %31, align 8
  %32 = load i32, i32* %29, align 4
  %33 = getelementptr inbounds %struct.UConverterLoadArgs, %struct.UConverterLoadArgs* %26, i64 0, i32 5
  store i32 %32, i32* %33, align 4
  %34 = icmp eq i8* %0, null
  br i1 %34, label %35, label %36

35:                                               ; preds = %24
  store i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str, i64 0, i64 0), i8** %30, align 8
  br label %133

36:                                               ; preds = %24
  %37 = load i8, i8* %0, align 1
  switch i8 %37, label %70 [
    i8 85, label %38
    i8 117, label %46
  ]

38:                                               ; preds = %36
  %39 = getelementptr inbounds i8, i8* %0, i64 1
  %40 = load i8, i8* %39, align 1
  %41 = icmp eq i8 %40, 84
  br i1 %41, label %42, label %70

42:                                               ; preds = %38
  %43 = getelementptr inbounds i8, i8* %0, i64 2
  %44 = load i8, i8* %43, align 1
  %45 = icmp eq i8 %44, 70
  br i1 %45, label %54, label %70

46:                                               ; preds = %36
  %47 = getelementptr inbounds i8, i8* %0, i64 1
  %48 = load i8, i8* %47, align 1
  %49 = icmp eq i8 %48, 116
  br i1 %49, label %50, label %70

50:                                               ; preds = %46
  %51 = getelementptr inbounds i8, i8* %0, i64 2
  %52 = load i8, i8* %51, align 1
  %53 = icmp eq i8 %52, 102
  br i1 %53, label %54, label %70

54:                                               ; preds = %50, %42
  %55 = getelementptr inbounds i8, i8* %0, i64 3
  %56 = load i8, i8* %55, align 1
  switch i8 %56, label %70 [
    i8 45, label %57
    i8 56, label %65
  ]

57:                                               ; preds = %54
  %58 = getelementptr inbounds i8, i8* %0, i64 4
  %59 = load i8, i8* %58, align 1
  %60 = icmp eq i8 %59, 56
  br i1 %60, label %61, label %70

61:                                               ; preds = %57
  %62 = getelementptr inbounds i8, i8* %0, i64 5
  %63 = load i8, i8* %62, align 1
  %64 = icmp eq i8 %63, 0
  br i1 %64, label %69, label %70

65:                                               ; preds = %54
  %66 = getelementptr inbounds i8, i8* %0, i64 4
  %67 = load i8, i8* %66, align 1
  %68 = icmp eq i8 %67, 0
  br i1 %68, label %69, label %70

69:                                               ; preds = %65, %61
  store i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str, i64 0, i64 0), i8** %30, align 8
  br label %133

70:                                               ; preds = %54, %36, %65, %61, %57, %50, %46, %42, %38
  call fastcc void @_ZL21parseConverterOptionsPKcP20UConverterNamePiecesP18UConverterLoadArgsP10UErrorCode(i8* nonnull %0, %struct.UConverterNamePieces* nonnull %25, %struct.UConverterLoadArgs* nonnull %26, i32* %3)
  %71 = load i32, i32* %3, align 4
  %72 = icmp slt i32 %71, 1
  br i1 %72, label %73, label %133

73:                                               ; preds = %70
  %74 = load i8*, i8** %30, align 8
  %75 = call i8* @ucnv_io_getConverterName_69(i8* %74, i8* nonnull %9, i32* nonnull %8) #9
  store i8* %75, i8** %30, align 8
  %76 = load i32, i32* %8, align 4
  %77 = icmp sgt i32 %76, 0
  %78 = icmp eq i8* %75, null
  %79 = or i1 %78, %77
  br i1 %79, label %80, label %81

80:                                               ; preds = %73
  store i8* %27, i8** %30, align 8
  br label %84

81:                                               ; preds = %73
  %82 = icmp eq i32 %76, -122
  br i1 %82, label %83, label %84

83:                                               ; preds = %81
  store i32 -122, i32* %3, align 4
  br label %84

84:                                               ; preds = %81, %83, %80
  %85 = load i8, i8* %9, align 1
  %86 = icmp eq i8 %85, 0
  br i1 %86, label %91, label %87

87:                                               ; preds = %84
  %88 = load i8*, i8** %30, align 8
  %89 = icmp eq i8* %88, %27
  br i1 %89, label %91, label %90

90:                                               ; preds = %87
  call fastcc void @_ZL21parseConverterOptionsPKcP20UConverterNamePiecesP18UConverterLoadArgsP10UErrorCode(i8* %88, %struct.UConverterNamePieces* nonnull %25, %struct.UConverterLoadArgs* nonnull %26, i32* %3)
  br label %91

91:                                               ; preds = %90, %84, %87
  %92 = load i8*, i8** %30, align 8
  %93 = getelementptr inbounds [60 x i8], [60 x i8]* %5, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 60, i8* nonnull %93) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %93, i8 -86, i64 60, i1 false) #9
  %94 = call i8* @ucnv_io_stripASCIIForCompare_69(i8* nonnull %93, i8* %92) #9
  br label %95

95:                                               ; preds = %106, %91
  %96 = phi i32 [ 4, %91 ], [ %110, %106 ]
  %97 = phi i32 [ 9, %91 ], [ %108, %106 ]
  %98 = phi i32 [ 0, %91 ], [ %107, %106 ]
  %99 = zext i32 %96 to i64
  %100 = getelementptr inbounds [9 x %struct.anon], [9 x %struct.anon]* @_ZL11cnvNameType, i64 0, i64 %99, i32 0
  %101 = load i8*, i8** %100, align 16
  %102 = call i32 @strcmp(i8* nonnull %93, i8* %101) #11
  %103 = icmp slt i32 %102, 0
  br i1 %103, label %106, label %104

104:                                              ; preds = %95
  %105 = icmp eq i32 %102, 0
  br i1 %105, label %113, label %106

106:                                              ; preds = %104, %95
  %107 = phi i32 [ %98, %95 ], [ %96, %104 ]
  %108 = phi i32 [ %96, %95 ], [ %97, %104 ]
  %109 = add i32 %108, %107
  %110 = lshr i32 %109, 1
  %111 = icmp eq i32 %96, %110
  br i1 %111, label %112, label %95

112:                                              ; preds = %106
  call void @llvm.lifetime.end.p0i8(i64 60, i8* nonnull %93) #9
  br label %123

113:                                              ; preds = %104
  %114 = zext i32 %96 to i64
  %115 = getelementptr inbounds [9 x %struct.anon], [9 x %struct.anon]* @_ZL11cnvNameType, i64 0, i64 %114, i32 1
  %116 = load i32, i32* %115, align 8
  %117 = sext i32 %116 to i64
  %118 = getelementptr inbounds [34 x %struct.UConverterSharedData*], [34 x %struct.UConverterSharedData*]* @_ZL13converterData, i64 0, i64 %117
  %119 = load %struct.UConverterSharedData*, %struct.UConverterSharedData** %118, align 8
  call void @llvm.lifetime.end.p0i8(i64 60, i8* nonnull %93) #9
  %120 = lshr i64 16575888259, %117
  %121 = and i64 %120, 1
  %122 = icmp eq i64 %121, 0
  br i1 %122, label %131, label %123

123:                                              ; preds = %113, %112
  %124 = getelementptr inbounds %struct.UConverterLoadArgs, %struct.UConverterLoadArgs* %26, i64 0, i32 1
  store i32 1, i32* %124, align 4
  %125 = getelementptr inbounds %struct.UConverterLoadArgs, %struct.UConverterLoadArgs* %26, i64 0, i32 6
  store i8* null, i8** %125, align 8
  call void @umtx_lock_69(%"class.icu_69::UMutex"* bitcast ({ [40 x i8], { { %"class.std::__1::mutex"* } }, %"class.icu_69::UMutex"* }* @_ZL13cnvCacheMutex to %"class.icu_69::UMutex"*)) #9
  %126 = call %struct.UConverterSharedData* @ucnv_load_69(%struct.UConverterLoadArgs* %26, i32* %3)
  call void @umtx_unlock_69(%"class.icu_69::UMutex"* bitcast ({ [40 x i8], { { %"class.std::__1::mutex"* } }, %"class.icu_69::UMutex"* }* @_ZL13cnvCacheMutex to %"class.icu_69::UMutex"*)) #9
  %127 = load i32, i32* %3, align 4
  %128 = icmp sgt i32 %127, 0
  %129 = icmp eq %struct.UConverterSharedData* %126, null
  %130 = or i1 %129, %128
  br i1 %130, label %133, label %131

131:                                              ; preds = %113, %123
  %132 = phi %struct.UConverterSharedData* [ %126, %123 ], [ %119, %113 ]
  br label %133

133:                                              ; preds = %123, %70, %4, %131, %69, %35, %19
  %134 = phi %struct.UConverterSharedData* [ null, %19 ], [ @_UTF8Data_69, %35 ], [ @_UTF8Data_69, %69 ], [ %132, %131 ], [ null, %4 ], [ null, %70 ], [ null, %123 ]
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %9) #9
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %12) #9
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %11) #9
  call void @llvm.lifetime.end.p0i8(i64 224, i8* nonnull %10) #9
  ret %struct.UConverterSharedData* %134
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #2

; Function Attrs: nofree nounwind ssp uwtable
define internal fastcc void @_ZL21parseConverterOptionsPKcP20UConverterNamePiecesP18UConverterLoadArgsP10UErrorCode(i8*, %struct.UConverterNamePieces*, %struct.UConverterLoadArgs* nocapture, i32* nocapture) unnamed_addr #3 {
  %5 = getelementptr inbounds %struct.UConverterNamePieces, %struct.UConverterNamePieces* %1, i64 0, i32 0, i64 0
  %6 = getelementptr inbounds %struct.UConverterLoadArgs, %struct.UConverterLoadArgs* %2, i64 0, i32 7
  store i8* %0, i8** %6, align 8
  %7 = getelementptr inbounds %struct.UConverterNamePieces, %struct.UConverterNamePieces* %1, i64 0, i32 1, i64 0
  %8 = getelementptr inbounds %struct.UConverterLoadArgs, %struct.UConverterLoadArgs* %2, i64 0, i32 8
  store i8* %7, i8** %8, align 8
  %9 = getelementptr inbounds %struct.UConverterNamePieces, %struct.UConverterNamePieces* %1, i64 0, i32 2
  %10 = load i32, i32* %9, align 4
  %11 = getelementptr inbounds %struct.UConverterLoadArgs, %struct.UConverterLoadArgs* %2, i64 0, i32 5
  store i32 %10, i32* %11, align 4
  br label %12

12:                                               ; preds = %20, %4
  %13 = phi i8* [ %0, %4 ], [ %23, %20 ]
  %14 = phi i8* [ %5, %4 ], [ %22, %20 ]
  %15 = phi i32 [ 0, %4 ], [ %21, %20 ]
  %16 = load i8, i8* %13, align 1
  switch i8 %16, label %17 [
    i8 44, label %24
    i8 0, label %24
  ]

17:                                               ; preds = %12
  %18 = icmp eq i32 %15, 59
  br i1 %18, label %19, label %20

19:                                               ; preds = %17
  store i32 1, i32* %3, align 4
  store i8 0, i8* %5, align 4
  br label %82

20:                                               ; preds = %17
  %21 = add nuw nsw i32 %15, 1
  %22 = getelementptr inbounds i8, i8* %14, i64 1
  store i8 %16, i8* %14, align 1
  %23 = getelementptr inbounds i8, i8* %13, i64 1
  br label %12

24:                                               ; preds = %12, %12
  store i8 0, i8* %14, align 1
  store i8* %5, i8** %6, align 8
  br label %25

25:                                               ; preds = %48, %24
  %26 = phi i8* [ %13, %24 ], [ %49, %48 ]
  %27 = load i8, i8* %26, align 1
  switch i8 %27, label %30 [
    i8 0, label %82
    i8 44, label %28
  ]

28:                                               ; preds = %25
  %29 = getelementptr inbounds i8, i8* %26, i64 1
  br label %30

30:                                               ; preds = %25, %28
  %31 = phi i8* [ %29, %28 ], [ %26, %25 ]
  %32 = tail call i32 @strncmp(i8* %31, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.20, i64 0, i64 0), i64 7) #11
  %33 = icmp eq i32 %32, 0
  br i1 %33, label %34, label %51

34:                                               ; preds = %30
  %35 = getelementptr inbounds i8, i8* %31, i64 7
  br label %36

36:                                               ; preds = %43, %34
  %37 = phi i8* [ %35, %34 ], [ %44, %43 ]
  %38 = phi i32 [ 0, %34 ], [ %45, %43 ]
  %39 = phi i8* [ %7, %34 ], [ %46, %43 ]
  %40 = load i8, i8* %37, align 1
  switch i8 %40, label %41 [
    i8 44, label %47
    i8 0, label %47
  ]

41:                                               ; preds = %36
  %42 = icmp eq i32 %38, 156
  br i1 %42, label %50, label %43

43:                                               ; preds = %41
  %44 = getelementptr inbounds i8, i8* %37, i64 1
  %45 = add nuw nsw i32 %38, 1
  %46 = getelementptr inbounds i8, i8* %39, i64 1
  store i8 %40, i8* %39, align 1
  br label %36

47:                                               ; preds = %36, %36
  store i8 0, i8* %39, align 1
  br label %48

48:                                               ; preds = %78, %47, %61, %66, %74
  %49 = phi i8* [ %70, %66 ], [ %55, %61 ], [ %75, %74 ], [ %37, %47 ], [ %80, %78 ]
  br label %25

50:                                               ; preds = %41
  store i32 1, i32* %3, align 4
  store i8 0, i8* %7, align 4
  br label %82

51:                                               ; preds = %30
  %52 = tail call i32 @strncmp(i8* %31, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.21, i64 0, i64 0), i64 8) #11
  %53 = icmp eq i32 %52, 0
  br i1 %53, label %54, label %71

54:                                               ; preds = %51
  %55 = getelementptr inbounds i8, i8* %31, i64 8
  %56 = load i8, i8* %55, align 1
  %57 = icmp eq i8 %56, 0
  br i1 %57, label %58, label %61

58:                                               ; preds = %54
  %59 = load i32, i32* %9, align 4
  %60 = and i32 %59, -16
  store i32 %60, i32* %9, align 4
  store i32 %60, i32* %11, align 4
  br label %82

61:                                               ; preds = %54
  %62 = sext i8 %56 to i32
  %63 = add nsw i32 %62, -48
  %64 = and i32 %63, 254
  %65 = icmp ult i32 %64, 10
  br i1 %65, label %66, label %48

66:                                               ; preds = %61
  %67 = load i32, i32* %9, align 4
  %68 = and i32 %67, -16
  %69 = or i32 %68, %63
  store i32 %69, i32* %9, align 4
  store i32 %69, i32* %11, align 4
  %70 = getelementptr inbounds i8, i8* %31, i64 9
  br label %48

71:                                               ; preds = %51
  %72 = tail call i32 @strncmp(i8* %31, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.22, i64 0, i64 0), i64 8) #11
  %73 = icmp eq i32 %72, 0
  br i1 %73, label %74, label %78

74:                                               ; preds = %71
  %75 = getelementptr inbounds i8, i8* %31, i64 8
  %76 = load i32, i32* %9, align 4
  %77 = or i32 %76, 16
  store i32 %77, i32* %9, align 4
  store i32 %77, i32* %11, align 4
  br label %48

78:                                               ; preds = %71, %78
  %79 = phi i8* [ %80, %78 ], [ %31, %71 ]
  %80 = getelementptr inbounds i8, i8* %79, i64 1
  %81 = load i8, i8* %79, align 1
  switch i8 %81, label %78 [
    i8 0, label %82
    i8 44, label %48
  ]

82:                                               ; preds = %25, %78, %50, %58, %19
  ret void
}

declare i8* @ucnv_io_getConverterName_69(i8*, i8*, i32*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden %struct.UConverter* @ucnv_createConverter_69(%struct.UConverter*, i8*, i32*) local_unnamed_addr #0 {
  %4 = alloca %struct.UConverterNamePieces, align 4
  %5 = alloca %struct.UConverterLoadArgs, align 8
  %6 = getelementptr inbounds %struct.UConverterNamePieces, %struct.UConverterNamePieces* %4, i64 0, i32 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 224, i8* nonnull %6) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %6, i8 -86, i64 224, i1 false)
  %7 = bitcast %struct.UConverterLoadArgs* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %7) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %7, i8 0, i64 40, i1 false)
  %8 = getelementptr inbounds %struct.UConverterLoadArgs, %struct.UConverterLoadArgs* %5, i64 0, i32 0
  store i32 40, i32* %8, align 8
  %9 = tail call i32 @utrace_getLevel_69() #9
  %10 = icmp sgt i32 %9, 4
  br i1 %10, label %11, label %12

11:                                               ; preds = %3
  tail call void @utrace_entry_69(i32 4096) #9
  br label %12

12:                                               ; preds = %11, %3
  %13 = phi i32 [ -2147483648, %11 ], [ 0, %3 ]
  %14 = load i32, i32* %2, align 4
  %15 = icmp sgt i32 %14, 0
  br i1 %15, label %28, label %16

16:                                               ; preds = %12
  %17 = tail call i32 @utrace_getLevel_69() #9
  %18 = icmp sgt i32 %17, 4
  br i1 %18, label %19, label %20

19:                                               ; preds = %16
  tail call void (i32, i32, i8*, ...) @utrace_data_69(i32 4096, i32 5, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.1, i64 0, i64 0), i8* %1) #9
  br label %20

20:                                               ; preds = %19, %16
  %21 = call %struct.UConverterSharedData* @ucnv_loadSharedData_69(i8* %1, %struct.UConverterNamePieces* nonnull %4, %struct.UConverterLoadArgs* nonnull %5, i32* %2)
  %22 = call %struct.UConverter* @ucnv_createConverterFromSharedData_69(%struct.UConverter* %0, %struct.UConverterSharedData* %21, %struct.UConverterLoadArgs* nonnull %5, i32* %2)
  %23 = load i32, i32* %2, align 4
  %24 = icmp sgt i32 %23, 0
  br i1 %24, label %28, label %25

25:                                               ; preds = %20
  %26 = icmp eq i32 %13, 0
  br i1 %26, label %32, label %27

27:                                               ; preds = %25
  call void (i32, i32, ...) @utrace_exit_69(i32 4096, i32 18, %struct.UConverter* %22, i32 %23) #9
  br label %32

28:                                               ; preds = %20, %12
  %29 = phi i32 [ %23, %20 ], [ %14, %12 ]
  %30 = icmp eq i32 %13, 0
  br i1 %30, label %32, label %31

31:                                               ; preds = %28
  call void (i32, i32, ...) @utrace_exit_69(i32 4096, i32 16, i32 %29) #9
  br label %32

32:                                               ; preds = %31, %28, %27, %25
  %33 = phi %struct.UConverter* [ %22, %25 ], [ %22, %27 ], [ null, %28 ], [ null, %31 ]
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %7) #9
  call void @llvm.lifetime.end.p0i8(i64 224, i8* nonnull %6) #9
  ret %struct.UConverter* %33
}

declare i32 @utrace_getLevel_69() local_unnamed_addr #1

declare void @utrace_entry_69(i32) local_unnamed_addr #1

declare void @utrace_data_69(i32, i32, i8*, ...) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden %struct.UConverter* @ucnv_createConverterFromSharedData_69(%struct.UConverter*, %struct.UConverterSharedData*, %struct.UConverterLoadArgs*, i32*) local_unnamed_addr #0 {
  %5 = load i32, i32* %3, align 4
  %6 = icmp slt i32 %5, 1
  br i1 %6, label %26, label %7

7:                                                ; preds = %4
  %8 = icmp eq %struct.UConverterSharedData* %1, null
  br i1 %8, label %105, label %9

9:                                                ; preds = %7
  %10 = getelementptr inbounds %struct.UConverterSharedData, %struct.UConverterSharedData* %1, i64 0, i32 5
  %11 = load i8, i8* %10, align 1
  %12 = icmp eq i8 %11, 0
  br i1 %12, label %105, label %13

13:                                               ; preds = %9
  tail call void @umtx_lock_69(%"class.icu_69::UMutex"* bitcast ({ [40 x i8], { { %"class.std::__1::mutex"* } }, %"class.icu_69::UMutex"* }* @_ZL13cnvCacheMutex to %"class.icu_69::UMutex"*)) #9
  %14 = getelementptr inbounds %struct.UConverterSharedData, %struct.UConverterSharedData* %1, i64 0, i32 1
  %15 = load i32, i32* %14, align 4
  %16 = icmp eq i32 %15, 0
  br i1 %16, label %20, label %17

17:                                               ; preds = %13
  %18 = add i32 %15, -1
  store i32 %18, i32* %14, align 4
  %19 = icmp eq i32 %18, 0
  br i1 %19, label %20, label %25

20:                                               ; preds = %17, %13
  %21 = getelementptr inbounds %struct.UConverterSharedData, %struct.UConverterSharedData* %1, i64 0, i32 4
  %22 = load i8, i8* %21, align 8
  %23 = icmp eq i8 %22, 0
  br i1 %23, label %24, label %25

24:                                               ; preds = %20
  tail call fastcc void @_ZL30ucnv_deleteSharedConverterDataP20UConverterSharedData(%struct.UConverterSharedData* nonnull %1) #9
  br label %25

25:                                               ; preds = %24, %20, %17
  tail call void @umtx_unlock_69(%"class.icu_69::UMutex"* bitcast ({ [40 x i8], { { %"class.std::__1::mutex"* } }, %"class.icu_69::UMutex"* }* @_ZL13cnvCacheMutex to %"class.icu_69::UMutex"*)) #9
  br label %105

26:                                               ; preds = %4
  %27 = icmp eq %struct.UConverter* %0, null
  br i1 %27, label %28, label %52

28:                                               ; preds = %26
  %29 = tail call noalias i8* @uprv_malloc_69(i64 288) #10
  %30 = icmp eq i8* %29, null
  br i1 %30, label %31, label %50

31:                                               ; preds = %28
  store i32 7, i32* %3, align 4
  %32 = icmp eq %struct.UConverterSharedData* %1, null
  br i1 %32, label %105, label %33

33:                                               ; preds = %31
  %34 = getelementptr inbounds %struct.UConverterSharedData, %struct.UConverterSharedData* %1, i64 0, i32 5
  %35 = load i8, i8* %34, align 1
  %36 = icmp eq i8 %35, 0
  br i1 %36, label %105, label %37

37:                                               ; preds = %33
  tail call void @umtx_lock_69(%"class.icu_69::UMutex"* bitcast ({ [40 x i8], { { %"class.std::__1::mutex"* } }, %"class.icu_69::UMutex"* }* @_ZL13cnvCacheMutex to %"class.icu_69::UMutex"*)) #9
  %38 = getelementptr inbounds %struct.UConverterSharedData, %struct.UConverterSharedData* %1, i64 0, i32 1
  %39 = load i32, i32* %38, align 4
  %40 = icmp eq i32 %39, 0
  br i1 %40, label %44, label %41

41:                                               ; preds = %37
  %42 = add i32 %39, -1
  store i32 %42, i32* %38, align 4
  %43 = icmp eq i32 %42, 0
  br i1 %43, label %44, label %49

44:                                               ; preds = %41, %37
  %45 = getelementptr inbounds %struct.UConverterSharedData, %struct.UConverterSharedData* %1, i64 0, i32 4
  %46 = load i8, i8* %45, align 8
  %47 = icmp eq i8 %46, 0
  br i1 %47, label %48, label %49

48:                                               ; preds = %44
  tail call fastcc void @_ZL30ucnv_deleteSharedConverterDataP20UConverterSharedData(%struct.UConverterSharedData* nonnull %1) #9
  br label %49

49:                                               ; preds = %48, %44, %41
  tail call void @umtx_unlock_69(%"class.icu_69::UMutex"* bitcast ({ [40 x i8], { { %"class.std::__1::mutex"* } }, %"class.icu_69::UMutex"* }* @_ZL13cnvCacheMutex to %"class.icu_69::UMutex"*)) #9
  br label %105

50:                                               ; preds = %28
  %51 = bitcast i8* %29 to %struct.UConverter*
  br label %52

52:                                               ; preds = %26, %50
  %53 = phi %struct.UConverter* [ %51, %50 ], [ %0, %26 ]
  %54 = phi i8 [ 0, %50 ], [ 1, %26 ]
  %55 = bitcast %struct.UConverter* %53 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %55, i8 0, i64 288, i1 false)
  %56 = getelementptr inbounds %struct.UConverter, %struct.UConverter* %53, i64 0, i32 9
  store i8 %54, i8* %56, align 1
  %57 = getelementptr inbounds %struct.UConverter, %struct.UConverter* %53, i64 0, i32 6
  store %struct.UConverterSharedData* %1, %struct.UConverterSharedData** %57, align 8
  %58 = getelementptr inbounds %struct.UConverterLoadArgs, %struct.UConverterLoadArgs* %2, i64 0, i32 5
  %59 = load i32, i32* %58, align 4
  %60 = getelementptr inbounds %struct.UConverter, %struct.UConverter* %53, i64 0, i32 7
  store i32 %59, i32* %60, align 8
  %61 = getelementptr inbounds %struct.UConverterLoadArgs, %struct.UConverterLoadArgs* %2, i64 0, i32 2
  %62 = load i8, i8* %61, align 8
  %63 = icmp eq i8 %62, 0
  br i1 %63, label %64, label %92

64:                                               ; preds = %52
  %65 = getelementptr inbounds %struct.UConverter, %struct.UConverter* %53, i64 0, i32 31
  store i32 -1, i32* %65, align 8
  %66 = getelementptr inbounds %struct.UConverter, %struct.UConverter* %53, i64 0, i32 1
  store void (i8*, %struct.UConverterToUnicodeArgs*, i8*, i32, i32, i32*)* @UCNV_TO_U_CALLBACK_SUBSTITUTE_69, void (i8*, %struct.UConverterToUnicodeArgs*, i8*, i32, i32, i32*)** %66, align 8
  %67 = getelementptr inbounds %struct.UConverter, %struct.UConverter* %53, i64 0, i32 0
  store void (i8*, %struct.UConverterFromUnicodeArgs*, i16*, i32, i32, i32, i32*)* @UCNV_FROM_U_CALLBACK_SUBSTITUTE_69, void (i8*, %struct.UConverterFromUnicodeArgs*, i16*, i32, i32, i32, i32*)** %67, align 8
  %68 = getelementptr inbounds %struct.UConverterSharedData, %struct.UConverterSharedData* %1, i64 0, i32 7
  %69 = load i32, i32* %68, align 8
  %70 = getelementptr inbounds %struct.UConverter, %struct.UConverter* %53, i64 0, i32 14
  store i32 %69, i32* %70, align 8
  %71 = getelementptr inbounds %struct.UConverterSharedData, %struct.UConverterSharedData* %1, i64 0, i32 3
  %72 = load %struct.UConverterStaticData*, %struct.UConverterStaticData** %71, align 8
  %73 = getelementptr inbounds %struct.UConverterStaticData, %struct.UConverterStaticData* %72, i64 0, i32 6
  %74 = load i8, i8* %73, align 1
  %75 = getelementptr inbounds %struct.UConverter, %struct.UConverter* %53, i64 0, i32 18
  store i8 %74, i8* %75, align 8
  %76 = load %struct.UConverterStaticData*, %struct.UConverterStaticData** %71, align 8
  %77 = getelementptr inbounds %struct.UConverterStaticData, %struct.UConverterStaticData* %76, i64 0, i32 12
  %78 = load i8, i8* %77, align 4
  %79 = getelementptr inbounds %struct.UConverter, %struct.UConverter* %53, i64 0, i32 24
  store i8 %78, i8* %79, align 2
  %80 = load %struct.UConverterStaticData*, %struct.UConverterStaticData** %71, align 8
  %81 = getelementptr inbounds %struct.UConverterStaticData, %struct.UConverterStaticData* %80, i64 0, i32 8
  %82 = load i8, i8* %81, align 4
  %83 = getelementptr inbounds %struct.UConverter, %struct.UConverter* %53, i64 0, i32 19
  store i8 %82, i8* %83, align 1
  %84 = getelementptr inbounds %struct.UConverter, %struct.UConverter* %53, i64 0, i32 28, i64 0
  %85 = bitcast i16* %84 to i8*
  %86 = getelementptr inbounds %struct.UConverter, %struct.UConverter* %53, i64 0, i32 5
  %87 = bitcast i8** %86 to i16**
  store i16* %84, i16** %87, align 8
  %88 = load %struct.UConverterStaticData*, %struct.UConverterStaticData** %71, align 8
  %89 = getelementptr inbounds %struct.UConverterStaticData, %struct.UConverterStaticData* %88, i64 0, i32 7, i64 0
  %90 = sext i8 %82 to i64
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %85, i8* align 4 %89, i64 %90, i1 false)
  %91 = getelementptr inbounds %struct.UConverter, %struct.UConverter* %53, i64 0, i32 37
  store i32 1, i32* %91, align 4
  br label %92

92:                                               ; preds = %52, %64
  %93 = getelementptr inbounds %struct.UConverterSharedData, %struct.UConverterSharedData* %1, i64 0, i32 6
  %94 = load %struct.UConverterImpl*, %struct.UConverterImpl** %93, align 8
  %95 = getelementptr inbounds %struct.UConverterImpl, %struct.UConverterImpl* %94, i64 0, i32 3
  %96 = load void (%struct.UConverter*, %struct.UConverterLoadArgs*, i32*)*, void (%struct.UConverter*, %struct.UConverterLoadArgs*, i32*)** %95, align 8
  %97 = icmp eq void (%struct.UConverter*, %struct.UConverterLoadArgs*, i32*)* %96, null
  br i1 %97, label %105, label %98

98:                                               ; preds = %92
  tail call void %96(%struct.UConverter* %53, %struct.UConverterLoadArgs* %2, i32* %3) #9
  %99 = load i32, i32* %3, align 4
  %100 = icmp slt i32 %99, 1
  br i1 %100, label %105, label %101

101:                                              ; preds = %98
  %102 = load i8, i8* %61, align 8
  %103 = icmp eq i8 %102, 0
  br i1 %103, label %104, label %105

104:                                              ; preds = %101
  tail call void @ucnv_close_69(%struct.UConverter* %53) #9
  br label %105

105:                                              ; preds = %49, %33, %31, %25, %9, %7, %92, %98, %101, %104
  %106 = phi %struct.UConverter* [ null, %104 ], [ %53, %101 ], [ %53, %98 ], [ %53, %92 ], [ %0, %7 ], [ %0, %9 ], [ %0, %25 ], [ null, %31 ], [ null, %33 ], [ null, %49 ]
  ret %struct.UConverter* %106
}

declare void @utrace_exit_69(i32, i32, ...) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden signext i8 @ucnv_canCreateConverter_69(i8*, i32*) local_unnamed_addr #0 {
  %3 = alloca %struct.UConverter, align 8
  %4 = alloca %struct.UConverterNamePieces, align 4
  %5 = alloca %struct.UConverterLoadArgs, align 8
  %6 = bitcast %struct.UConverter* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 288, i8* nonnull %6) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %6, i8 -86, i64 288, i1 false)
  %7 = getelementptr inbounds %struct.UConverterNamePieces, %struct.UConverterNamePieces* %4, i64 0, i32 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 224, i8* nonnull %7) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %7, i8 -86, i64 224, i1 false)
  %8 = bitcast %struct.UConverterLoadArgs* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %8) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %8, i8 0, i64 40, i1 false)
  %9 = getelementptr inbounds %struct.UConverterLoadArgs, %struct.UConverterLoadArgs* %5, i64 0, i32 0
  store i32 40, i32* %9, align 8
  %10 = tail call i32 @utrace_getLevel_69() #9
  %11 = icmp sgt i32 %10, 4
  br i1 %11, label %12, label %13

12:                                               ; preds = %2
  tail call void @utrace_entry_69(i32 4096) #9
  br label %13

13:                                               ; preds = %12, %2
  %14 = phi i32 [ -2147483648, %12 ], [ 0, %2 ]
  %15 = load i32, i32* %1, align 4
  %16 = icmp sgt i32 %15, 0
  br i1 %16, label %43, label %17

17:                                               ; preds = %13
  %18 = tail call i32 @utrace_getLevel_69() #9
  %19 = icmp sgt i32 %18, 4
  br i1 %19, label %20, label %21

20:                                               ; preds = %17
  tail call void (i32, i32, i8*, ...) @utrace_data_69(i32 4096, i32 5, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.2, i64 0, i64 0), i8* %0) #9
  br label %21

21:                                               ; preds = %20, %17
  %22 = getelementptr inbounds %struct.UConverterLoadArgs, %struct.UConverterLoadArgs* %5, i64 0, i32 2
  store i8 1, i8* %22, align 8
  %23 = call %struct.UConverterSharedData* @ucnv_loadSharedData_69(i8* %0, %struct.UConverterNamePieces* nonnull %4, %struct.UConverterLoadArgs* nonnull %5, i32* %1)
  %24 = call %struct.UConverter* @ucnv_createConverterFromSharedData_69(%struct.UConverter* nonnull %3, %struct.UConverterSharedData* %23, %struct.UConverterLoadArgs* nonnull %5, i32* %1)
  %25 = icmp eq %struct.UConverterSharedData* %23, null
  br i1 %25, label %43, label %26

26:                                               ; preds = %21
  %27 = getelementptr inbounds %struct.UConverterSharedData, %struct.UConverterSharedData* %23, i64 0, i32 5
  %28 = load i8, i8* %27, align 1
  %29 = icmp eq i8 %28, 0
  br i1 %29, label %43, label %30

30:                                               ; preds = %26
  call void @umtx_lock_69(%"class.icu_69::UMutex"* bitcast ({ [40 x i8], { { %"class.std::__1::mutex"* } }, %"class.icu_69::UMutex"* }* @_ZL13cnvCacheMutex to %"class.icu_69::UMutex"*)) #9
  %31 = getelementptr inbounds %struct.UConverterSharedData, %struct.UConverterSharedData* %23, i64 0, i32 1
  %32 = load i32, i32* %31, align 4
  %33 = icmp eq i32 %32, 0
  br i1 %33, label %37, label %34

34:                                               ; preds = %30
  %35 = add i32 %32, -1
  store i32 %35, i32* %31, align 4
  %36 = icmp eq i32 %35, 0
  br i1 %36, label %37, label %42

37:                                               ; preds = %34, %30
  %38 = getelementptr inbounds %struct.UConverterSharedData, %struct.UConverterSharedData* %23, i64 0, i32 4
  %39 = load i8, i8* %38, align 8
  %40 = icmp eq i8 %39, 0
  br i1 %40, label %41, label %42

41:                                               ; preds = %37
  call fastcc void @_ZL30ucnv_deleteSharedConverterDataP20UConverterSharedData(%struct.UConverterSharedData* nonnull %23) #9
  br label %42

42:                                               ; preds = %41, %37, %34
  call void @umtx_unlock_69(%"class.icu_69::UMutex"* bitcast ({ [40 x i8], { { %"class.std::__1::mutex"* } }, %"class.icu_69::UMutex"* }* @_ZL13cnvCacheMutex to %"class.icu_69::UMutex"*)) #9
  br label %43

43:                                               ; preds = %42, %26, %21, %13
  %44 = icmp eq i32 %14, 0
  br i1 %44, label %47, label %45

45:                                               ; preds = %43
  %46 = load i32, i32* %1, align 4
  call void (i32, i32, ...) @utrace_exit_69(i32 4096, i32 16, i32 %46) #9
  br label %47

47:                                               ; preds = %43, %45
  %48 = load i32, i32* %1, align 4
  %49 = icmp slt i32 %48, 1
  %50 = zext i1 %49 to i8
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %8) #9
  call void @llvm.lifetime.end.p0i8(i64 224, i8* nonnull %7) #9
  call void @llvm.lifetime.end.p0i8(i64 288, i8* nonnull %6) #9
  ret i8 %50
}

; Function Attrs: nounwind ssp uwtable
define hidden %struct.UConverter* @ucnv_createAlgorithmicConverter_69(%struct.UConverter*, i32, i8*, i32, i32*) local_unnamed_addr #0 {
  %6 = alloca %struct.UConverterLoadArgs, align 8
  %7 = bitcast %struct.UConverterLoadArgs* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %7) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %7, i8 0, i64 40, i1 false)
  %8 = getelementptr inbounds %struct.UConverterLoadArgs, %struct.UConverterLoadArgs* %6, i64 0, i32 0
  store i32 40, i32* %8, align 8
  %9 = tail call i32 @utrace_getLevel_69() #9
  %10 = icmp sgt i32 %9, 4
  br i1 %10, label %11, label %12

11:                                               ; preds = %5
  tail call void @utrace_entry_69(i32 4098) #9
  br label %12

12:                                               ; preds = %5, %11
  %13 = phi i32 [ -2147483648, %11 ], [ 0, %5 ]
  %14 = tail call i32 @utrace_getLevel_69() #9
  %15 = icmp sgt i32 %14, 4
  br i1 %15, label %16, label %17

16:                                               ; preds = %12
  tail call void (i32, i32, i8*, ...) @utrace_data_69(i32 4098, i32 5, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.3, i64 0, i64 0), i32 %1) #9
  br label %17

17:                                               ; preds = %16, %12
  %18 = icmp ugt i32 %1, 33
  br i1 %18, label %19, label %22

19:                                               ; preds = %17
  store i32 1, i32* %4, align 4
  %20 = icmp eq i32 %13, 0
  br i1 %20, label %44, label %21

21:                                               ; preds = %19
  tail call void (i32, i32, ...) @utrace_exit_69(i32 4098, i32 16, i32 1) #9
  br label %44

22:                                               ; preds = %17
  %23 = sext i32 %1 to i64
  %24 = getelementptr inbounds [34 x %struct.UConverterSharedData*], [34 x %struct.UConverterSharedData*]* @_ZL13converterData, i64 0, i64 %23
  %25 = load %struct.UConverterSharedData*, %struct.UConverterSharedData** %24, align 8
  %26 = lshr i64 16575888259, %23
  %27 = and i64 %26, 1
  %28 = icmp eq i64 %27, 0
  br i1 %28, label %29, label %33

29:                                               ; preds = %22
  %30 = getelementptr inbounds %struct.UConverterSharedData, %struct.UConverterSharedData* %25, i64 0, i32 5
  %31 = load i8, i8* %30, align 1
  %32 = icmp eq i8 %31, 0
  br i1 %32, label %36, label %33

33:                                               ; preds = %29, %22
  store i32 1, i32* %4, align 4
  %34 = icmp eq i32 %13, 0
  br i1 %34, label %44, label %35

35:                                               ; preds = %33
  tail call void (i32, i32, ...) @utrace_exit_69(i32 4098, i32 16, i32 1) #9
  br label %44

36:                                               ; preds = %29
  %37 = getelementptr inbounds %struct.UConverterLoadArgs, %struct.UConverterLoadArgs* %6, i64 0, i32 7
  store i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.4, i64 0, i64 0), i8** %37, align 8
  %38 = getelementptr inbounds %struct.UConverterLoadArgs, %struct.UConverterLoadArgs* %6, i64 0, i32 5
  store i32 %3, i32* %38, align 4
  %39 = getelementptr inbounds %struct.UConverterLoadArgs, %struct.UConverterLoadArgs* %6, i64 0, i32 8
  store i8* %2, i8** %39, align 8
  %40 = call %struct.UConverter* @ucnv_createConverterFromSharedData_69(%struct.UConverter* %0, %struct.UConverterSharedData* %25, %struct.UConverterLoadArgs* nonnull %6, i32* %4)
  %41 = icmp eq i32 %13, 0
  br i1 %41, label %44, label %42

42:                                               ; preds = %36
  %43 = load i32, i32* %4, align 4
  call void (i32, i32, ...) @utrace_exit_69(i32 4098, i32 18, %struct.UConverter* %40, i32 %43) #9
  br label %44

44:                                               ; preds = %42, %36, %35, %33, %21, %19
  %45 = phi %struct.UConverter* [ null, %19 ], [ null, %21 ], [ null, %33 ], [ null, %35 ], [ %40, %36 ], [ %40, %42 ]
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %7) #9
  ret %struct.UConverter* %45
}

; Function Attrs: nounwind ssp uwtable
define hidden %struct.UConverter* @ucnv_createConverterFromPackage_69(i8*, i8*, i32*) local_unnamed_addr #0 {
  %4 = alloca %struct.UConverterNamePieces, align 4
  %5 = alloca %struct.UConverterLoadArgs, align 8
  %6 = getelementptr inbounds %struct.UConverterNamePieces, %struct.UConverterNamePieces* %4, i64 0, i32 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 224, i8* nonnull %6) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %6, i8 -86, i64 224, i1 false)
  %7 = bitcast %struct.UConverterLoadArgs* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %7) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %7, i8 0, i64 40, i1 false)
  %8 = getelementptr inbounds %struct.UConverterLoadArgs, %struct.UConverterLoadArgs* %5, i64 0, i32 0
  store i32 40, i32* %8, align 8
  %9 = tail call i32 @utrace_getLevel_69() #9
  %10 = icmp sgt i32 %9, 4
  br i1 %10, label %11, label %12

11:                                               ; preds = %3
  tail call void @utrace_entry_69(i32 4097) #9
  br label %12

12:                                               ; preds = %11, %3
  %13 = phi i32 [ -2147483648, %11 ], [ 0, %3 ]
  %14 = load i32, i32* %2, align 4
  %15 = icmp slt i32 %14, 1
  br i1 %15, label %19, label %16

16:                                               ; preds = %12
  %17 = icmp eq i32 %13, 0
  br i1 %17, label %51, label %18

18:                                               ; preds = %16
  tail call void (i32, i32, ...) @utrace_exit_69(i32 4097, i32 16, i32 %14) #9
  br label %51

19:                                               ; preds = %12
  %20 = tail call i32 @utrace_getLevel_69() #9
  %21 = icmp sgt i32 %20, 4
  br i1 %21, label %22, label %23

22:                                               ; preds = %19
  tail call void (i32, i32, i8*, ...) @utrace_data_69(i32 4097, i32 5, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.5, i64 0, i64 0), i8* %1, i8* %0) #9
  br label %23

23:                                               ; preds = %22, %19
  store i8 0, i8* %6, align 4
  %24 = getelementptr inbounds %struct.UConverterNamePieces, %struct.UConverterNamePieces* %4, i64 0, i32 1, i64 0
  store i8 0, i8* %24, align 4
  %25 = getelementptr inbounds %struct.UConverterNamePieces, %struct.UConverterNamePieces* %4, i64 0, i32 2
  store i32 0, i32* %25, align 4
  call fastcc void @_ZL21parseConverterOptionsPKcP20UConverterNamePiecesP18UConverterLoadArgsP10UErrorCode(i8* %1, %struct.UConverterNamePieces* nonnull %4, %struct.UConverterLoadArgs* nonnull %5, i32* %2)
  %26 = load i32, i32* %2, align 4
  %27 = icmp slt i32 %26, 1
  br i1 %27, label %31, label %28

28:                                               ; preds = %23
  %29 = icmp eq i32 %13, 0
  br i1 %29, label %51, label %30

30:                                               ; preds = %28
  call void (i32, i32, ...) @utrace_exit_69(i32 4097, i32 16, i32 %26) #9
  br label %51

31:                                               ; preds = %23
  %32 = getelementptr inbounds %struct.UConverterLoadArgs, %struct.UConverterLoadArgs* %5, i64 0, i32 1
  store i32 1, i32* %32, align 4
  %33 = getelementptr inbounds %struct.UConverterLoadArgs, %struct.UConverterLoadArgs* %5, i64 0, i32 6
  store i8* %0, i8** %33, align 8
  %34 = call fastcc %struct.UConverterSharedData* @_ZL23createConverterFromFileP18UConverterLoadArgsP10UErrorCode(%struct.UConverterLoadArgs* nonnull %5, i32* %2)
  %35 = load i32, i32* %2, align 4
  %36 = icmp slt i32 %35, 1
  br i1 %36, label %40, label %37

37:                                               ; preds = %31
  %38 = icmp eq i32 %13, 0
  br i1 %38, label %51, label %39

39:                                               ; preds = %37
  call void (i32, i32, ...) @utrace_exit_69(i32 4097, i32 16, i32 %35) #9
  br label %51

40:                                               ; preds = %31
  %41 = call %struct.UConverter* @ucnv_createConverterFromSharedData_69(%struct.UConverter* null, %struct.UConverterSharedData* %34, %struct.UConverterLoadArgs* nonnull %5, i32* %2)
  %42 = load i32, i32* %2, align 4
  %43 = icmp slt i32 %42, 1
  br i1 %43, label %48, label %44

44:                                               ; preds = %40
  call void @ucnv_close_69(%struct.UConverter* %41) #9
  %45 = icmp eq i32 %13, 0
  br i1 %45, label %51, label %46

46:                                               ; preds = %44
  %47 = load i32, i32* %2, align 4
  call void (i32, i32, ...) @utrace_exit_69(i32 4097, i32 16, i32 %47) #9
  br label %51

48:                                               ; preds = %40
  %49 = icmp eq i32 %13, 0
  br i1 %49, label %51, label %50

50:                                               ; preds = %48
  call void (i32, i32, ...) @utrace_exit_69(i32 4097, i32 18, %struct.UConverter* %41, i32 %42) #9
  br label %51

51:                                               ; preds = %50, %48, %46, %44, %39, %37, %30, %28, %18, %16
  %52 = phi %struct.UConverter* [ null, %16 ], [ null, %18 ], [ null, %28 ], [ null, %30 ], [ null, %37 ], [ null, %39 ], [ null, %44 ], [ null, %46 ], [ %41, %48 ], [ %41, %50 ]
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %7) #9
  call void @llvm.lifetime.end.p0i8(i64 224, i8* nonnull %6) #9
  ret %struct.UConverter* %52
}

declare void @ucnv_close_69(%struct.UConverter*) local_unnamed_addr #1

; Function Attrs: allocsize(0)
declare noalias i8* @uprv_malloc_69(i64) local_unnamed_addr #4

declare void @UCNV_TO_U_CALLBACK_SUBSTITUTE_69(i8*, %struct.UConverterToUnicodeArgs*, i8*, i32, i32, i32*) #1

declare void @UCNV_FROM_U_CALLBACK_SUBSTITUTE_69(i8*, %struct.UConverterFromUnicodeArgs*, i16*, i32, i32, i32, i32*) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #2

; Function Attrs: nounwind ssp uwtable
define hidden i32 @ucnv_flushCache_69() local_unnamed_addr #0 {
  %1 = alloca i32, align 4
  %2 = bitcast i32* %1 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %2) #9
  store i32 -1431655766, i32* %1, align 4
  %3 = tail call i32 @utrace_getLevel_69() #9
  %4 = icmp sgt i32 %3, 4
  br i1 %4, label %5, label %6

5:                                                ; preds = %0
  tail call void @utrace_entry_69(i32 4101) #9
  br label %6

6:                                                ; preds = %5, %0
  %7 = phi i32 [ -2147483648, %5 ], [ 0, %0 ]
  tail call void @u_flushDefaultConverter_69() #9
  %8 = load %struct.UHashtable*, %struct.UHashtable** @_ZL21SHARED_DATA_HASHTABLE, align 8
  %9 = icmp eq %struct.UHashtable* %8, null
  br i1 %9, label %10, label %13

10:                                               ; preds = %6
  %11 = icmp eq i32 %7, 0
  br i1 %11, label %56, label %12

12:                                               ; preds = %10
  tail call void (i32, i32, ...) @utrace_exit_69(i32 4101, i32 1, i32 0) #9
  br label %56

13:                                               ; preds = %6
  tail call void @umtx_lock_69(%"class.icu_69::UMutex"* bitcast ({ [40 x i8], { { %"class.std::__1::mutex"* } }, %"class.icu_69::UMutex"* }* @_ZL13cnvCacheMutex to %"class.icu_69::UMutex"*)) #9
  br label %14

14:                                               ; preds = %43, %13
  %15 = phi i32 [ 0, %13 ], [ %38, %43 ]
  %16 = phi i32 [ 0, %13 ], [ 1, %43 ]
  store i32 -1, i32* %1, align 4
  %17 = load %struct.UHashtable*, %struct.UHashtable** @_ZL21SHARED_DATA_HASHTABLE, align 8
  %18 = call %struct.UHashElement* @uhash_nextElement_69(%struct.UHashtable* %17, i32* nonnull %1) #9
  %19 = icmp eq %struct.UHashElement* %18, null
  br i1 %19, label %47, label %20

20:                                               ; preds = %14, %37
  %21 = phi %struct.UHashElement* [ %41, %37 ], [ %18, %14 ]
  %22 = phi i32 [ %39, %37 ], [ 0, %14 ]
  %23 = phi i32 [ %38, %37 ], [ %15, %14 ]
  %24 = getelementptr inbounds %struct.UHashElement, %struct.UHashElement* %21, i64 0, i32 1, i32 0
  %25 = bitcast i8** %24 to %struct.UConverterSharedData**
  %26 = load %struct.UConverterSharedData*, %struct.UConverterSharedData** %25, align 8
  %27 = getelementptr inbounds %struct.UConverterSharedData, %struct.UConverterSharedData* %26, i64 0, i32 1
  %28 = load i32, i32* %27, align 4
  %29 = icmp eq i32 %28, 0
  br i1 %29, label %30, label %35

30:                                               ; preds = %20
  %31 = add nsw i32 %23, 1
  %32 = load %struct.UHashtable*, %struct.UHashtable** @_ZL21SHARED_DATA_HASHTABLE, align 8
  %33 = call i8* @uhash_removeElement_69(%struct.UHashtable* %32, %struct.UHashElement* nonnull %21) #9
  %34 = getelementptr inbounds %struct.UConverterSharedData, %struct.UConverterSharedData* %26, i64 0, i32 4
  store i8 0, i8* %34, align 8
  call fastcc void @_ZL30ucnv_deleteSharedConverterDataP20UConverterSharedData(%struct.UConverterSharedData* %26)
  br label %37

35:                                               ; preds = %20
  %36 = add nsw i32 %22, 1
  br label %37

37:                                               ; preds = %35, %30
  %38 = phi i32 [ %31, %30 ], [ %23, %35 ]
  %39 = phi i32 [ %22, %30 ], [ %36, %35 ]
  %40 = load %struct.UHashtable*, %struct.UHashtable** @_ZL21SHARED_DATA_HASHTABLE, align 8
  %41 = call %struct.UHashElement* @uhash_nextElement_69(%struct.UHashtable* %40, i32* nonnull %1) #9
  %42 = icmp eq %struct.UHashElement* %41, null
  br i1 %42, label %43, label %20

43:                                               ; preds = %37
  %44 = icmp eq i32 %16, 0
  %45 = icmp sgt i32 %39, 0
  %46 = and i1 %44, %45
  br i1 %46, label %14, label %47

47:                                               ; preds = %14, %43
  %48 = phi i32 [ %39, %43 ], [ 0, %14 ]
  %49 = phi i32 [ %38, %43 ], [ %15, %14 ]
  call void @umtx_unlock_69(%"class.icu_69::UMutex"* bitcast ({ [40 x i8], { { %"class.std::__1::mutex"* } }, %"class.icu_69::UMutex"* }* @_ZL13cnvCacheMutex to %"class.icu_69::UMutex"*)) #9
  %50 = call i32 @utrace_getLevel_69() #9
  %51 = icmp sgt i32 %50, 6
  br i1 %51, label %52, label %53

52:                                               ; preds = %47
  call void (i32, i32, i8*, ...) @utrace_data_69(i32 4101, i32 7, i8* getelementptr inbounds ([53 x i8], [53 x i8]* @.str.6, i64 0, i64 0), i32 %48) #9
  br label %53

53:                                               ; preds = %47, %52
  %54 = icmp eq i32 %7, 0
  br i1 %54, label %56, label %55

55:                                               ; preds = %53
  call void (i32, i32, ...) @utrace_exit_69(i32 4101, i32 1, i32 %49) #9
  br label %56

56:                                               ; preds = %55, %53, %12, %10
  %57 = phi i32 [ 0, %10 ], [ 0, %12 ], [ %49, %53 ], [ %49, %55 ]
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %2) #9
  ret i32 %57
}

declare void @u_flushDefaultConverter_69() local_unnamed_addr #1

declare %struct.UHashElement* @uhash_nextElement_69(%struct.UHashtable*, i32*) local_unnamed_addr #1

declare i8* @uhash_removeElement_69(%struct.UHashtable*, %struct.UHashElement*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i16 @ucnv_bld_countAvailableConverters_69(i32*) local_unnamed_addr #0 {
  %2 = tail call fastcc signext i8 @_ZL26haveAvailableConverterListP10UErrorCode(i32* %0)
  %3 = icmp eq i8 %2, 0
  %4 = load i16, i16* @_ZL24gAvailableConverterCount, align 2
  %5 = select i1 %3, i16 0, i16 %4
  ret i16 %5
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc signext i8 @_ZL26haveAvailableConverterListP10UErrorCode(i32*) unnamed_addr #0 {
  %2 = alloca i32, align 4
  %3 = alloca %struct.UConverter, align 8
  %4 = load i32, i32* %0, align 4
  %5 = icmp slt i32 %4, 1
  br i1 %5, label %6, label %50

6:                                                ; preds = %1
  %7 = load atomic i32, i32* getelementptr inbounds ({ { { i32 } }, i32 }, { { { i32 } }, i32 }* @_ZL28gAvailableConvertersInitOnce, i64 0, i32 0, i32 0, i32 0) acquire, align 4
  %8 = icmp eq i32 %7, 2
  br i1 %8, label %46, label %9

9:                                                ; preds = %6
  %10 = tail call signext i8 @_ZN6icu_6920umtx_initImplPreInitERNS_9UInitOnceE(%"struct.icu_69::UInitOnce"* dereferenceable(8) bitcast ({ { { i32 } }, i32 }* @_ZL28gAvailableConvertersInitOnce to %"struct.icu_69::UInitOnce"*)) #9
  %11 = icmp eq i8 %10, 0
  br i1 %11, label %46, label %12

12:                                               ; preds = %9
  tail call void @ucln_common_registerCleanup_69(i32 20, i8 ()* nonnull @_ZL12ucnv_cleanupv) #9
  %13 = tail call %struct.UEnumeration* @ucnv_openAllNames_69(i32* %0) #9
  %14 = tail call i32 @uenum_count_69(%struct.UEnumeration* %13, i32* %0) #9
  %15 = load i32, i32* %0, align 4
  %16 = icmp slt i32 %15, 1
  br i1 %16, label %17, label %44

17:                                               ; preds = %12
  %18 = sext i32 %14 to i64
  %19 = shl nsw i64 %18, 3
  %20 = tail call noalias i8* @uprv_malloc_69(i64 %19) #10
  store i8* %20, i8** bitcast (i8*** @_ZL20gAvailableConverters to i8**), align 8
  %21 = icmp eq i8* %20, null
  br i1 %21, label %22, label %23

22:                                               ; preds = %17
  store i32 7, i32* %0, align 4
  br label %44

23:                                               ; preds = %17
  %24 = bitcast i32* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %24) #9
  store i32 0, i32* %2, align 4
  %25 = bitcast %struct.UConverter* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 288, i8* nonnull %25) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %25, i8 -86, i64 288, i1 false) #9
  %26 = call %struct.UConverter* @ucnv_createConverter_69(%struct.UConverter* nonnull %3, i8* null, i32* nonnull %2) #9
  call void @ucnv_close_69(%struct.UConverter* %26) #9
  store i16 0, i16* @_ZL24gAvailableConverterCount, align 2
  %27 = icmp sgt i32 %14, 0
  br i1 %27, label %30, label %28

28:                                               ; preds = %41, %23
  call void @uenum_close_69(%struct.UEnumeration* %13) #9
  call void @llvm.lifetime.end.p0i8(i64 288, i8* nonnull %25) #9
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %24) #9
  %29 = load i32, i32* %0, align 4
  br label %44

30:                                               ; preds = %23, %41
  %31 = phi i32 [ %42, %41 ], [ 0, %23 ]
  store i32 0, i32* %2, align 4
  %32 = call i8* @uenum_next_69(%struct.UEnumeration* %13, i32* null, i32* nonnull %2) #9
  %33 = call signext i8 @ucnv_canCreateConverter_69(i8* %32, i32* nonnull %2) #9
  %34 = icmp eq i8 %33, 0
  br i1 %34, label %41, label %35

35:                                               ; preds = %30
  %36 = load i8**, i8*** @_ZL20gAvailableConverters, align 8
  %37 = load i16, i16* @_ZL24gAvailableConverterCount, align 2
  %38 = add i16 %37, 1
  store i16 %38, i16* @_ZL24gAvailableConverterCount, align 2
  %39 = zext i16 %37 to i64
  %40 = getelementptr inbounds i8*, i8** %36, i64 %39
  store i8* %32, i8** %40, align 8
  br label %41

41:                                               ; preds = %35, %30
  %42 = add nuw nsw i32 %31, 1
  %43 = icmp eq i32 %42, %14
  br i1 %43, label %28, label %30

44:                                               ; preds = %12, %22, %28
  %45 = phi i32 [ %15, %12 ], [ 7, %22 ], [ %29, %28 ]
  store i32 %45, i32* getelementptr inbounds ({ { { i32 } }, i32 }, { { { i32 } }, i32 }* @_ZL28gAvailableConvertersInitOnce, i64 0, i32 1), align 4
  call void @_ZN6icu_6921umtx_initImplPostInitERNS_9UInitOnceE(%"struct.icu_69::UInitOnce"* dereferenceable(8) bitcast ({ { { i32 } }, i32 }* @_ZL28gAvailableConvertersInitOnce to %"struct.icu_69::UInitOnce"*)) #9
  br label %50

46:                                               ; preds = %9, %6
  %47 = load i32, i32* getelementptr inbounds ({ { { i32 } }, i32 }, { { { i32 } }, i32 }* @_ZL28gAvailableConvertersInitOnce, i64 0, i32 1), align 4
  %48 = icmp slt i32 %47, 1
  br i1 %48, label %50, label %49

49:                                               ; preds = %46
  store i32 %47, i32* %0, align 4
  br label %50

50:                                               ; preds = %1, %44, %46, %49
  %51 = load i32, i32* %0, align 4
  %52 = icmp slt i32 %51, 1
  %53 = zext i1 %52 to i8
  ret i8 %53
}

; Function Attrs: nounwind ssp uwtable
define hidden i8* @ucnv_bld_getAvailableConverter_69(i16 zeroext, i32*) local_unnamed_addr #0 {
  %3 = tail call fastcc signext i8 @_ZL26haveAvailableConverterListP10UErrorCode(i32* %1)
  %4 = icmp eq i8 %3, 0
  br i1 %4, label %14, label %5

5:                                                ; preds = %2
  %6 = load i16, i16* @_ZL24gAvailableConverterCount, align 2
  %7 = icmp ugt i16 %6, %0
  br i1 %7, label %8, label %13

8:                                                ; preds = %5
  %9 = load i8**, i8*** @_ZL20gAvailableConverters, align 8
  %10 = zext i16 %0 to i64
  %11 = getelementptr inbounds i8*, i8** %9, i64 %10
  %12 = load i8*, i8** %11, align 8
  br label %14

13:                                               ; preds = %5
  store i32 8, i32* %1, align 4
  br label %14

14:                                               ; preds = %13, %2, %8
  %15 = phi i8* [ %12, %8 ], [ null, %2 ], [ null, %13 ]
  ret i8* %15
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden i8* @ucnv_getDefaultName_69() local_unnamed_addr #5 {
  ret i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str, i64 0, i64 0)
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @ucnv_setDefaultName_69(i8* nocapture) local_unnamed_addr #5 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @ucnv_swap_69(%struct.UDataSwapper*, i8*, i32, i8*, i32*) local_unnamed_addr #0 {
  %6 = tail call i32 @udata_swapDataHeader_69(%struct.UDataSwapper* %0, i8* %1, i32 %2, i8* %3, i32* %4) #9
  %7 = icmp eq i32* %4, null
  br i1 %7, label %421, label %8

8:                                                ; preds = %5
  %9 = load i32, i32* %4, align 4
  %10 = icmp slt i32 %9, 1
  br i1 %10, label %11, label %421

11:                                               ; preds = %8
  %12 = getelementptr inbounds i8, i8* %1, i64 12
  %13 = load i8, i8* %12, align 2
  %14 = icmp eq i8 %13, 99
  %15 = getelementptr inbounds i8, i8* %1, i64 13
  %16 = load i8, i8* %15, align 1
  %17 = icmp eq i8 %16, 110
  %18 = and i1 %14, %17
  br i1 %18, label %19, label %35

19:                                               ; preds = %11
  %20 = getelementptr inbounds i8, i8* %1, i64 14
  %21 = load i8, i8* %20, align 2
  %22 = icmp eq i8 %21, 118
  br i1 %22, label %23, label %35

23:                                               ; preds = %19
  %24 = getelementptr inbounds i8, i8* %1, i64 15
  %25 = load i8, i8* %24, align 1
  %26 = icmp eq i8 %25, 116
  br i1 %26, label %27, label %35

27:                                               ; preds = %23
  %28 = getelementptr inbounds i8, i8* %1, i64 16
  %29 = load i8, i8* %28, align 2
  %30 = icmp eq i8 %29, 6
  br i1 %30, label %31, label %35

31:                                               ; preds = %27
  %32 = getelementptr inbounds i8, i8* %1, i64 17
  %33 = load i8, i8* %32, align 1
  %34 = icmp ugt i8 %33, 1
  br i1 %34, label %51, label %35

35:                                               ; preds = %11, %31, %27, %23, %19
  %36 = phi i8 [ 110, %31 ], [ 110, %27 ], [ 110, %23 ], [ 110, %19 ], [ %16, %11 ]
  %37 = zext i8 %13 to i32
  %38 = zext i8 %36 to i32
  %39 = getelementptr inbounds i8, i8* %1, i64 14
  %40 = load i8, i8* %39, align 2
  %41 = zext i8 %40 to i32
  %42 = getelementptr inbounds i8, i8* %1, i64 15
  %43 = load i8, i8* %42, align 1
  %44 = zext i8 %43 to i32
  %45 = getelementptr inbounds i8, i8* %1, i64 16
  %46 = load i8, i8* %45, align 2
  %47 = zext i8 %46 to i32
  %48 = getelementptr inbounds i8, i8* %1, i64 17
  %49 = load i8, i8* %48, align 1
  %50 = zext i8 %49 to i32
  tail call void (%struct.UDataSwapper*, i8*, ...) @udata_printError_69(%struct.UDataSwapper* %0, i8* getelementptr inbounds ([123 x i8], [123 x i8]* @.str.7, i64 0, i64 0), i32 %37, i32 %38, i32 %41, i32 %44, i32 %47, i32 %50) #9
  store i32 16, i32* %4, align 4
  br label %421

51:                                               ; preds = %31
  %52 = sext i32 %6 to i64
  %53 = getelementptr inbounds i8, i8* %1, i64 %52
  %54 = getelementptr inbounds i8, i8* %3, i64 %52
  %55 = icmp slt i32 %2, 0
  br i1 %55, label %67, label %56

56:                                               ; preds = %51
  %57 = sub nsw i32 %2, %6
  %58 = icmp slt i32 %57, 100
  br i1 %58, label %66, label %59

59:                                               ; preds = %56
  %60 = getelementptr inbounds %struct.UDataSwapper, %struct.UDataSwapper* %0, i64 0, i32 5
  %61 = load i32 (i32)*, i32 (i32)** %60, align 8
  %62 = bitcast i8* %53 to i32*
  %63 = load i32, i32* %62, align 4
  %64 = tail call i32 %61(i32 %63) #9
  %65 = icmp ult i32 %57, %64
  br i1 %65, label %66, label %73

66:                                               ; preds = %59, %56
  tail call void (%struct.UDataSwapper*, i8*, ...) @udata_printError_69(%struct.UDataSwapper* %0, i8* getelementptr inbounds ([79 x i8], [79 x i8]* @.str.8, i64 0, i64 0), i32 %57) #9
  store i32 8, i32* %4, align 4
  br label %421

67:                                               ; preds = %51
  %68 = getelementptr inbounds %struct.UDataSwapper, %struct.UDataSwapper* %0, i64 0, i32 5
  %69 = load i32 (i32)*, i32 (i32)** %68, align 8
  %70 = bitcast i8* %53 to i32*
  %71 = load i32, i32* %70, align 4
  %72 = tail call i32 %69(i32 %71) #9
  br label %99

73:                                               ; preds = %59
  %74 = icmp eq i8* %1, %3
  br i1 %74, label %77, label %75

75:                                               ; preds = %73
  %76 = zext i32 %64 to i64
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %54, i8* align 4 %53, i64 %76, i1 false)
  br label %77

77:                                               ; preds = %73, %75
  %78 = getelementptr inbounds %struct.UDataSwapper, %struct.UDataSwapper* %0, i64 0, i32 10
  %79 = bitcast {}** %78 to i32 (%struct.UDataSwapper*, i8*, i32, i8*, i32*)**
  %80 = load i32 (%struct.UDataSwapper*, i8*, i32, i8*, i32*)*, i32 (%struct.UDataSwapper*, i8*, i32, i8*, i32*)** %79, align 8
  %81 = tail call i32 %80(%struct.UDataSwapper* %0, i8* %53, i32 4, i8* %54, i32* nonnull %4) #9
  %82 = load i32 (%struct.UDataSwapper*, i8*, i32, i8*, i32*)*, i32 (%struct.UDataSwapper*, i8*, i32, i8*, i32*)** %79, align 8
  %83 = getelementptr inbounds i8, i8* %53, i64 64
  %84 = getelementptr inbounds i8, i8* %54, i64 64
  %85 = tail call i32 %82(%struct.UDataSwapper* %0, i8* %83, i32 4, i8* %84, i32* nonnull %4) #9
  %86 = getelementptr inbounds %struct.UDataSwapper, %struct.UDataSwapper* %0, i64 0, i32 12
  %87 = bitcast {}** %86 to i32 (%struct.UDataSwapper*, i8*, i32, i8*, i32*)**
  %88 = load i32 (%struct.UDataSwapper*, i8*, i32, i8*, i32*)*, i32 (%struct.UDataSwapper*, i8*, i32, i8*, i32*)** %87, align 8
  %89 = getelementptr inbounds i8, i8* %53, i64 4
  %90 = tail call i64 @strlen(i8* %89) #11
  %91 = trunc i64 %90 to i32
  %92 = getelementptr inbounds i8, i8* %54, i64 4
  %93 = tail call i32 %88(%struct.UDataSwapper* %0, i8* %89, i32 %91, i8* %92, i32* nonnull %4) #9
  %94 = load i32, i32* %4, align 4
  %95 = icmp slt i32 %94, 1
  br i1 %95, label %97, label %96

96:                                               ; preds = %77
  tail call void (%struct.UDataSwapper*, i8*, ...) @udata_printError_69(%struct.UDataSwapper* %0, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.9, i64 0, i64 0)) #9
  br label %421

97:                                               ; preds = %77
  %98 = sub nsw i32 %57, %64
  br label %99

99:                                               ; preds = %67, %97
  %100 = phi i32 [ %64, %97 ], [ %72, %67 ]
  %101 = phi i32 [ %98, %97 ], [ %2, %67 ]
  %102 = zext i32 %100 to i64
  %103 = getelementptr inbounds i8, i8* %53, i64 %102
  %104 = getelementptr inbounds i8, i8* %54, i64 %102
  %105 = getelementptr inbounds i8, i8* %53, i64 69
  %106 = load i8, i8* %105, align 1
  %107 = icmp eq i8 %106, 2
  br i1 %107, label %108, label %416

108:                                              ; preds = %99
  %109 = icmp sgt i32 %101, -1
  %110 = icmp ult i32 %101, 40
  br i1 %110, label %111, label %112

111:                                              ; preds = %108
  tail call void (%struct.UDataSwapper*, i8*, ...) @udata_printError_69(%struct.UDataSwapper* %0, i8* getelementptr inbounds ([85 x i8], [85 x i8]* @.str.10, i64 0, i64 0), i32 %101) #9
  store i32 8, i32* %4, align 4
  br label %421

112:                                              ; preds = %108
  %113 = load i8, i8* %103, align 4
  switch i8 %113, label %139 [
    i8 4, label %114
    i8 5, label %118
  ]

114:                                              ; preds = %112
  %115 = getelementptr inbounds i8, i8* %103, i64 1
  %116 = load i8, i8* %115, align 1
  %117 = icmp eq i8 %116, 0
  br i1 %117, label %139, label %145

118:                                              ; preds = %112
  %119 = getelementptr inbounds i8, i8* %103, i64 1
  %120 = load i8, i8* %119, align 1
  %121 = icmp ugt i8 %120, 2
  br i1 %121, label %122, label %139

122:                                              ; preds = %118
  %123 = getelementptr inbounds %struct.UDataSwapper, %struct.UDataSwapper* %0, i64 0, i32 5
  %124 = load i32 (i32)*, i32 (i32)** %123, align 8
  %125 = getelementptr inbounds i8, i8* %103, i64 32
  %126 = bitcast i8* %125 to i32*
  %127 = load i32, i32* %126, align 4
  %128 = tail call i32 %124(i32 %127) #9
  %129 = and i32 %128, 65408
  %130 = icmp eq i32 %129, 0
  br i1 %130, label %133, label %131

131:                                              ; preds = %122
  %132 = load i8, i8* %103, align 4
  br label %139

133:                                              ; preds = %122
  %134 = shl i32 %128, 2
  %135 = and i32 %134, 252
  %136 = and i32 %128, 64
  %137 = icmp ne i32 %136, 0
  %138 = load i8, i8* %119, align 1
  br label %145

139:                                              ; preds = %131, %112, %114, %118
  %140 = phi i8 [ %132, %131 ], [ %113, %112 ], [ 4, %114 ], [ 5, %118 ]
  %141 = zext i8 %140 to i32
  %142 = getelementptr inbounds i8, i8* %103, i64 1
  %143 = load i8, i8* %142, align 1
  %144 = zext i8 %143 to i32
  tail call void (%struct.UDataSwapper*, i8*, ...) @udata_printError_69(%struct.UDataSwapper* %0, i8* getelementptr inbounds ([52 x i8], [52 x i8]* @.str.11, i64 0, i64 0), i32 %141, i32 %144) #9
  store i32 16, i32* %4, align 4
  br label %421

145:                                              ; preds = %114, %133
  %146 = phi i8 [ %138, %133 ], [ %116, %114 ]
  %147 = phi i32 [ %135, %133 ], [ 32, %114 ]
  %148 = phi i1 [ %137, %133 ], [ false, %114 ]
  %149 = getelementptr inbounds i8, i8* %103, i64 2
  %150 = load i8, i8* %149, align 2
  %151 = getelementptr inbounds %struct.UDataSwapper, %struct.UDataSwapper* %0, i64 0, i32 5
  %152 = load i32 (i32)*, i32 (i32)** %151, align 8
  %153 = getelementptr inbounds i8, i8* %103, i64 4
  %154 = bitcast i8* %153 to i32*
  %155 = load i32, i32* %154, align 4
  %156 = tail call i32 %152(i32 %155) #9
  %157 = load i32 (i32)*, i32 (i32)** %151, align 8
  %158 = getelementptr inbounds i8, i8* %103, i64 8
  %159 = bitcast i8* %158 to i32*
  %160 = load i32, i32* %159, align 4
  %161 = tail call i32 %157(i32 %160) #9
  %162 = load i32 (i32)*, i32 (i32)** %151, align 8
  %163 = getelementptr inbounds i8, i8* %103, i64 12
  %164 = bitcast i8* %163 to i32*
  %165 = load i32, i32* %164, align 4
  %166 = tail call i32 %162(i32 %165) #9
  %167 = load i32 (i32)*, i32 (i32)** %151, align 8
  %168 = getelementptr inbounds i8, i8* %103, i64 16
  %169 = bitcast i8* %168 to i32*
  %170 = load i32, i32* %169, align 4
  %171 = tail call i32 %167(i32 %170) #9
  %172 = load i32 (i32)*, i32 (i32)** %151, align 8
  %173 = getelementptr inbounds i8, i8* %103, i64 20
  %174 = bitcast i8* %173 to i32*
  %175 = load i32, i32* %174, align 4
  %176 = tail call i32 %172(i32 %175) #9
  %177 = load i32 (i32)*, i32 (i32)** %151, align 8
  %178 = getelementptr inbounds i8, i8* %103, i64 24
  %179 = bitcast i8* %178 to i32*
  %180 = load i32, i32* %179, align 4
  %181 = tail call i32 %177(i32 %180) #9
  %182 = load i32 (i32)*, i32 (i32)** %151, align 8
  %183 = getelementptr inbounds i8, i8* %103, i64 28
  %184 = bitcast i8* %183 to i32*
  %185 = load i32, i32* %184, align 4
  %186 = tail call i32 %182(i32 %185) #9
  %187 = lshr i32 %181, 8
  %188 = and i32 %181, 255
  %189 = icmp eq i32 %188, 0
  %190 = and i1 %148, %189
  br i1 %190, label %191, label %192

191:                                              ; preds = %145
  tail call void (%struct.UDataSwapper*, i8*, ...) @udata_printError_69(%struct.UDataSwapper* %0, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @.str.12, i64 0, i64 0)) #9
  store i32 16, i32* %4, align 4
  br label %421

192:                                              ; preds = %145
  %193 = trunc i32 %181 to i8
  switch i8 %193, label %194 [
    i8 14, label %205
    i8 0, label %205
    i8 1, label %195
    i8 2, label %195
    i8 3, label %195
    i8 8, label %195
    i8 9, label %195
    i8 12, label %195
  ]

194:                                              ; preds = %192
  tail call void (%struct.UDataSwapper*, i8*, ...) @udata_printError_69(%struct.UDataSwapper* %0, i8* getelementptr inbounds ([48 x i8], [48 x i8]* @.str.13, i64 0, i64 0), i32 %188) #9
  store i32 16, i32* %4, align 4
  br label %421

195:                                              ; preds = %192, %192, %192, %192, %192, %192
  %196 = icmp ult i8 %146, 3
  %197 = icmp eq i8 %150, 0
  %198 = or i1 %196, %197
  br i1 %198, label %205, label %199

199:                                              ; preds = %195
  %200 = zext i8 %150 to i32
  %201 = shl nuw nsw i32 %200, 8
  %202 = or i32 %201, 255
  %203 = add nuw nsw i32 %202, 1
  %204 = lshr exact i32 %203, 5
  br label %205

205:                                              ; preds = %192, %192, %195, %199
  %206 = phi i32 [ %204, %199 ], [ 0, %195 ], [ 0, %192 ], [ 0, %192 ]
  %207 = icmp eq i32 %187, 0
  br i1 %207, label %208, label %212

208:                                              ; preds = %205
  %209 = select i1 %148, i32 0, i32 %186
  %210 = add i32 %209, %176
  %211 = add i32 %210, %206
  br label %225

212:                                              ; preds = %205
  %213 = add nuw nsw i32 %187, 128
  %214 = icmp ult i32 %101, %213
  br i1 %214, label %215, label %216

215:                                              ; preds = %212
  tail call void (%struct.UDataSwapper*, i8*, ...) @udata_printError_69(%struct.UDataSwapper* %0, i8* getelementptr inbounds ([105 x i8], [105 x i8]* @.str.14, i64 0, i64 0), i32 %101) #9
  store i32 8, i32* %4, align 4
  br label %421

216:                                              ; preds = %212
  %217 = zext i32 %187 to i64
  %218 = getelementptr inbounds i8, i8* %103, i64 %217
  %219 = bitcast i8* %218 to i32*
  %220 = getelementptr inbounds i8, i8* %218, i64 124
  %221 = bitcast i8* %220 to i32*
  %222 = load i32, i32* %221, align 4
  %223 = tail call i32 @udata_readInt32_69(%struct.UDataSwapper* %0, i32 %222) #9
  %224 = add nsw i32 %223, %187
  br label %225

225:                                              ; preds = %216, %208
  %226 = phi i32 [ %211, %208 ], [ %224, %216 ]
  %227 = phi i32* [ null, %208 ], [ %219, %216 ]
  br i1 %109, label %228, label %418

228:                                              ; preds = %225
  %229 = icmp slt i32 %101, %226
  br i1 %229, label %230, label %231

230:                                              ; preds = %228
  tail call void (%struct.UDataSwapper*, i8*, ...) @udata_printError_69(%struct.UDataSwapper* %0, i8* getelementptr inbounds ([85 x i8], [85 x i8]* @.str.10, i64 0, i64 0), i32 %101) #9
  store i32 8, i32* %4, align 4
  br label %421

231:                                              ; preds = %228
  %232 = icmp eq i8* %1, %3
  br i1 %232, label %235, label %233

233:                                              ; preds = %231
  %234 = sext i32 %226 to i64
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %104, i8* align 1 %103, i64 %234, i1 false)
  br label %235

235:                                              ; preds = %231, %233
  %236 = getelementptr inbounds %struct.UDataSwapper, %struct.UDataSwapper* %0, i64 0, i32 10
  %237 = bitcast {}** %236 to i32 (%struct.UDataSwapper*, i8*, i32, i8*, i32*)**
  %238 = load i32 (%struct.UDataSwapper*, i8*, i32, i8*, i32*)*, i32 (%struct.UDataSwapper*, i8*, i32, i8*, i32*)** %237, align 8
  %239 = add nsw i32 %147, -4
  %240 = getelementptr inbounds i8, i8* %104, i64 4
  %241 = tail call i32 %238(%struct.UDataSwapper* %0, i8* %153, i32 %239, i8* %240, i32* nonnull %4) #9
  %242 = icmp eq i32 %188, 14
  br i1 %242, label %243, label %253

243:                                              ; preds = %235
  %244 = zext i32 %147 to i64
  %245 = getelementptr inbounds i8, i8* %103, i64 %244
  %246 = getelementptr inbounds i8, i8* %104, i64 %244
  %247 = getelementptr inbounds %struct.UDataSwapper, %struct.UDataSwapper* %0, i64 0, i32 12
  %248 = bitcast {}** %247 to i32 (%struct.UDataSwapper*, i8*, i32, i8*, i32*)**
  %249 = load i32 (%struct.UDataSwapper*, i8*, i32, i8*, i32*)*, i32 (%struct.UDataSwapper*, i8*, i32, i8*, i32*)** %248, align 8
  %250 = tail call i64 @strlen(i8* %245) #11
  %251 = trunc i64 %250 to i32
  %252 = tail call i32 %249(%struct.UDataSwapper* %0, i8* %245, i32 %251, i8* %246, i32* nonnull %4) #9
  br label %323

253:                                              ; preds = %235
  %254 = shl i32 %156, 10
  %255 = load i32 (%struct.UDataSwapper*, i8*, i32, i8*, i32*)*, i32 (%struct.UDataSwapper*, i8*, i32, i8*, i32*)** %237, align 8
  %256 = zext i32 %147 to i64
  %257 = getelementptr inbounds i8, i8* %103, i64 %256
  %258 = getelementptr inbounds i8, i8* %104, i64 %256
  %259 = tail call i32 %255(%struct.UDataSwapper* %0, i8* %257, i32 %254, i8* %258, i32* nonnull %4) #9
  %260 = or i32 %254, %147
  %261 = shl i32 %161, 3
  %262 = load i32 (%struct.UDataSwapper*, i8*, i32, i8*, i32*)*, i32 (%struct.UDataSwapper*, i8*, i32, i8*, i32*)** %237, align 8
  %263 = zext i32 %260 to i64
  %264 = getelementptr inbounds i8, i8* %103, i64 %263
  %265 = getelementptr inbounds i8, i8* %104, i64 %263
  %266 = tail call i32 %262(%struct.UDataSwapper* %0, i8* %264, i32 %261, i8* %265, i32* nonnull %4) #9
  %267 = sub i32 %171, %166
  %268 = getelementptr inbounds %struct.UDataSwapper, %struct.UDataSwapper* %0, i64 0, i32 9
  %269 = bitcast {}** %268 to i32 (%struct.UDataSwapper*, i8*, i32, i8*, i32*)**
  %270 = load i32 (%struct.UDataSwapper*, i8*, i32, i8*, i32*)*, i32 (%struct.UDataSwapper*, i8*, i32, i8*, i32*)** %269, align 8
  %271 = zext i32 %166 to i64
  %272 = getelementptr inbounds i8, i8* %103, i64 %271
  %273 = getelementptr inbounds i8, i8* %104, i64 %271
  %274 = tail call i32 %270(%struct.UDataSwapper* %0, i8* %272, i32 %267, i8* %273, i32* nonnull %4) #9
  br i1 %189, label %275, label %283

275:                                              ; preds = %253
  %276 = sub i32 %176, %171
  %277 = add i32 %276, %186
  %278 = load i32 (%struct.UDataSwapper*, i8*, i32, i8*, i32*)*, i32 (%struct.UDataSwapper*, i8*, i32, i8*, i32*)** %269, align 8
  %279 = zext i32 %171 to i64
  %280 = getelementptr inbounds i8, i8* %103, i64 %279
  %281 = getelementptr inbounds i8, i8* %104, i64 %279
  %282 = tail call i32 %278(%struct.UDataSwapper* %0, i8* %280, i32 %277, i8* %281, i32* nonnull %4) #9
  br label %323

283:                                              ; preds = %253
  %284 = getelementptr inbounds i8, i8* %53, i64 79
  %285 = load i8, i8* %284, align 1
  %286 = and i8 %285, 1
  %287 = icmp eq i8 %286, 0
  %288 = select i1 %287, i32 128, i32 2176
  %289 = load i32 (%struct.UDataSwapper*, i8*, i32, i8*, i32*)*, i32 (%struct.UDataSwapper*, i8*, i32, i8*, i32*)** %269, align 8
  %290 = zext i32 %171 to i64
  %291 = getelementptr inbounds i8, i8* %103, i64 %290
  %292 = getelementptr inbounds i8, i8* %104, i64 %290
  %293 = tail call i32 %289(%struct.UDataSwapper* %0, i8* %291, i32 %288, i8* %292, i32* nonnull %4) #9
  %294 = add i32 %288, %171
  %295 = sub i32 %176, %294
  %296 = load i32 (%struct.UDataSwapper*, i8*, i32, i8*, i32*)*, i32 (%struct.UDataSwapper*, i8*, i32, i8*, i32*)** %237, align 8
  %297 = zext i32 %294 to i64
  %298 = getelementptr inbounds i8, i8* %103, i64 %297
  %299 = getelementptr inbounds i8, i8* %104, i64 %297
  %300 = tail call i32 %296(%struct.UDataSwapper* %0, i8* %298, i32 %295, i8* %299, i32* nonnull %4) #9
  %301 = select i1 %148, i32 0, i32 %186
  switch i8 %193, label %314 [
    i8 1, label %302
    i8 8, label %302
    i8 12, label %302
    i8 3, label %308
  ]

302:                                              ; preds = %283, %283, %283
  %303 = load i32 (%struct.UDataSwapper*, i8*, i32, i8*, i32*)*, i32 (%struct.UDataSwapper*, i8*, i32, i8*, i32*)** %269, align 8
  %304 = zext i32 %176 to i64
  %305 = getelementptr inbounds i8, i8* %103, i64 %304
  %306 = getelementptr inbounds i8, i8* %104, i64 %304
  %307 = tail call i32 %303(%struct.UDataSwapper* %0, i8* %305, i32 %301, i8* %306, i32* nonnull %4) #9
  br label %314

308:                                              ; preds = %283
  %309 = load i32 (%struct.UDataSwapper*, i8*, i32, i8*, i32*)*, i32 (%struct.UDataSwapper*, i8*, i32, i8*, i32*)** %237, align 8
  %310 = zext i32 %176 to i64
  %311 = getelementptr inbounds i8, i8* %103, i64 %310
  %312 = getelementptr inbounds i8, i8* %104, i64 %310
  %313 = tail call i32 %309(%struct.UDataSwapper* %0, i8* %311, i32 %301, i8* %312, i32* nonnull %4) #9
  br label %314

314:                                              ; preds = %283, %308, %302
  %315 = icmp eq i32 %206, 0
  br i1 %315, label %323, label %316

316:                                              ; preds = %314
  %317 = add i32 %301, %176
  %318 = load i32 (%struct.UDataSwapper*, i8*, i32, i8*, i32*)*, i32 (%struct.UDataSwapper*, i8*, i32, i8*, i32*)** %269, align 8
  %319 = zext i32 %317 to i64
  %320 = getelementptr inbounds i8, i8* %103, i64 %319
  %321 = getelementptr inbounds i8, i8* %104, i64 %319
  %322 = tail call i32 %318(%struct.UDataSwapper* %0, i8* %320, i32 %206, i8* %321, i32* nonnull %4) #9
  br label %323

323:                                              ; preds = %314, %275, %316, %243
  br i1 %207, label %418, label %324

324:                                              ; preds = %323
  %325 = zext i32 %187 to i64
  %326 = getelementptr inbounds i8, i8* %103, i64 %325
  %327 = getelementptr inbounds i8, i8* %104, i64 %325
  %328 = getelementptr inbounds i32, i32* %227, i64 1
  %329 = load i32, i32* %328, align 4
  %330 = tail call i32 @udata_readInt32_69(%struct.UDataSwapper* %0, i32 %329) #9
  %331 = getelementptr inbounds i32, i32* %227, i64 2
  %332 = load i32, i32* %331, align 4
  %333 = tail call i32 @udata_readInt32_69(%struct.UDataSwapper* %0, i32 %332) #9
  %334 = load i32 (%struct.UDataSwapper*, i8*, i32, i8*, i32*)*, i32 (%struct.UDataSwapper*, i8*, i32, i8*, i32*)** %237, align 8
  %335 = zext i32 %330 to i64
  %336 = getelementptr inbounds i8, i8* %326, i64 %335
  %337 = shl nsw i32 %333, 2
  %338 = getelementptr inbounds i8, i8* %327, i64 %335
  %339 = tail call i32 %334(%struct.UDataSwapper* %0, i8* %336, i32 %337, i8* %338, i32* nonnull %4) #9
  %340 = getelementptr inbounds i32, i32* %227, i64 3
  %341 = load i32, i32* %340, align 4
  %342 = tail call i32 @udata_readInt32_69(%struct.UDataSwapper* %0, i32 %341) #9
  %343 = getelementptr inbounds i32, i32* %227, i64 4
  %344 = load i32, i32* %343, align 4
  %345 = tail call i32 @udata_readInt32_69(%struct.UDataSwapper* %0, i32 %344) #9
  %346 = getelementptr inbounds %struct.UDataSwapper, %struct.UDataSwapper* %0, i64 0, i32 9
  %347 = bitcast {}** %346 to i32 (%struct.UDataSwapper*, i8*, i32, i8*, i32*)**
  %348 = load i32 (%struct.UDataSwapper*, i8*, i32, i8*, i32*)*, i32 (%struct.UDataSwapper*, i8*, i32, i8*, i32*)** %347, align 8
  %349 = zext i32 %342 to i64
  %350 = getelementptr inbounds i8, i8* %326, i64 %349
  %351 = shl nsw i32 %345, 1
  %352 = getelementptr inbounds i8, i8* %327, i64 %349
  %353 = tail call i32 %348(%struct.UDataSwapper* %0, i8* %350, i32 %351, i8* %352, i32* nonnull %4) #9
  %354 = getelementptr inbounds i32, i32* %227, i64 5
  %355 = load i32, i32* %354, align 4
  %356 = tail call i32 @udata_readInt32_69(%struct.UDataSwapper* %0, i32 %355) #9
  %357 = getelementptr inbounds i32, i32* %227, i64 7
  %358 = load i32, i32* %357, align 4
  %359 = tail call i32 @udata_readInt32_69(%struct.UDataSwapper* %0, i32 %358) #9
  %360 = load i32 (%struct.UDataSwapper*, i8*, i32, i8*, i32*)*, i32 (%struct.UDataSwapper*, i8*, i32, i8*, i32*)** %347, align 8
  %361 = zext i32 %356 to i64
  %362 = getelementptr inbounds i8, i8* %326, i64 %361
  %363 = shl nsw i32 %359, 1
  %364 = getelementptr inbounds i8, i8* %327, i64 %361
  %365 = tail call i32 %360(%struct.UDataSwapper* %0, i8* %362, i32 %363, i8* %364, i32* nonnull %4) #9
  %366 = getelementptr inbounds i32, i32* %227, i64 6
  %367 = load i32, i32* %366, align 4
  %368 = tail call i32 @udata_readInt32_69(%struct.UDataSwapper* %0, i32 %367) #9
  %369 = load i32 (%struct.UDataSwapper*, i8*, i32, i8*, i32*)*, i32 (%struct.UDataSwapper*, i8*, i32, i8*, i32*)** %237, align 8
  %370 = zext i32 %368 to i64
  %371 = getelementptr inbounds i8, i8* %326, i64 %370
  %372 = shl nsw i32 %359, 2
  %373 = getelementptr inbounds i8, i8* %327, i64 %370
  %374 = tail call i32 %369(%struct.UDataSwapper* %0, i8* %371, i32 %372, i8* %373, i32* nonnull %4) #9
  %375 = getelementptr inbounds i32, i32* %227, i64 10
  %376 = load i32, i32* %375, align 4
  %377 = tail call i32 @udata_readInt32_69(%struct.UDataSwapper* %0, i32 %376) #9
  %378 = getelementptr inbounds i32, i32* %227, i64 12
  %379 = load i32, i32* %378, align 4
  %380 = tail call i32 @udata_readInt32_69(%struct.UDataSwapper* %0, i32 %379) #9
  %381 = load i32 (%struct.UDataSwapper*, i8*, i32, i8*, i32*)*, i32 (%struct.UDataSwapper*, i8*, i32, i8*, i32*)** %347, align 8
  %382 = zext i32 %377 to i64
  %383 = getelementptr inbounds i8, i8* %326, i64 %382
  %384 = shl nsw i32 %380, 1
  %385 = getelementptr inbounds i8, i8* %327, i64 %382
  %386 = tail call i32 %381(%struct.UDataSwapper* %0, i8* %383, i32 %384, i8* %385, i32* nonnull %4) #9
  %387 = getelementptr inbounds i32, i32* %227, i64 13
  %388 = load i32, i32* %387, align 4
  %389 = tail call i32 @udata_readInt32_69(%struct.UDataSwapper* %0, i32 %388) #9
  %390 = getelementptr inbounds i32, i32* %227, i64 14
  %391 = load i32, i32* %390, align 4
  %392 = tail call i32 @udata_readInt32_69(%struct.UDataSwapper* %0, i32 %391) #9
  %393 = load i32 (%struct.UDataSwapper*, i8*, i32, i8*, i32*)*, i32 (%struct.UDataSwapper*, i8*, i32, i8*, i32*)** %347, align 8
  %394 = zext i32 %389 to i64
  %395 = getelementptr inbounds i8, i8* %326, i64 %394
  %396 = shl nsw i32 %392, 1
  %397 = getelementptr inbounds i8, i8* %327, i64 %394
  %398 = tail call i32 %393(%struct.UDataSwapper* %0, i8* %395, i32 %396, i8* %397, i32* nonnull %4) #9
  %399 = getelementptr inbounds i32, i32* %227, i64 15
  %400 = load i32, i32* %399, align 4
  %401 = tail call i32 @udata_readInt32_69(%struct.UDataSwapper* %0, i32 %400) #9
  %402 = getelementptr inbounds i32, i32* %227, i64 16
  %403 = load i32, i32* %402, align 4
  %404 = tail call i32 @udata_readInt32_69(%struct.UDataSwapper* %0, i32 %403) #9
  %405 = load i32 (%struct.UDataSwapper*, i8*, i32, i8*, i32*)*, i32 (%struct.UDataSwapper*, i8*, i32, i8*, i32*)** %237, align 8
  %406 = zext i32 %401 to i64
  %407 = getelementptr inbounds i8, i8* %326, i64 %406
  %408 = shl nsw i32 %404, 2
  %409 = getelementptr inbounds i8, i8* %327, i64 %406
  %410 = tail call i32 %405(%struct.UDataSwapper* %0, i8* %407, i32 %408, i8* %409, i32* nonnull %4) #9
  %411 = load i32, i32* %227, align 4
  %412 = tail call i32 @udata_readInt32_69(%struct.UDataSwapper* %0, i32 %411) #9
  %413 = load i32 (%struct.UDataSwapper*, i8*, i32, i8*, i32*)*, i32 (%struct.UDataSwapper*, i8*, i32, i8*, i32*)** %237, align 8
  %414 = shl nsw i32 %412, 2
  %415 = tail call i32 %413(%struct.UDataSwapper* %0, i8* %326, i32 %414, i8* %327, i32* nonnull %4) #9
  br label %418

416:                                              ; preds = %99
  %417 = sext i8 %106 to i32
  tail call void (%struct.UDataSwapper*, i8*, ...) @udata_printError_69(%struct.UDataSwapper* %0, i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str.15, i64 0, i64 0), i32 %417) #9
  store i32 16, i32* %4, align 4
  br label %421

418:                                              ; preds = %323, %225, %324
  %419 = add nsw i32 %100, %6
  %420 = add nsw i32 %419, %226
  br label %421

421:                                              ; preds = %5, %8, %418, %416, %230, %215, %194, %191, %139, %111, %96, %66, %35
  %422 = phi i32 [ 0, %96 ], [ 0, %111 ], [ 0, %191 ], [ 0, %194 ], [ 0, %230 ], [ %420, %418 ], [ 0, %215 ], [ 0, %139 ], [ 0, %416 ], [ 0, %66 ], [ 0, %35 ], [ 0, %8 ], [ 0, %5 ]
  ret i32 %422
}

declare i32 @udata_swapDataHeader_69(%struct.UDataSwapper*, i8*, i32, i8*, i32*) local_unnamed_addr #1

declare void @udata_printError_69(%struct.UDataSwapper*, i8*, ...) local_unnamed_addr #1

; Function Attrs: argmemonly nofree nounwind readonly
declare i64 @strlen(i8* nocapture) local_unnamed_addr #6

declare i32 @udata_readInt32_69(%struct.UDataSwapper*, i32) local_unnamed_addr #1

declare i32 @uhash_count_69(%struct.UHashtable*) local_unnamed_addr #1

declare void @uhash_close_69(%struct.UHashtable*) local_unnamed_addr #1

declare void @uprv_free_69(i8*) local_unnamed_addr #1

declare %struct.UDataMemory* @udata_openChoice_69(i8*, i8*, i8*, i8 (i8*, i8*, i8*, %struct.UDataInfo*)*, i8*, i32*) local_unnamed_addr #1

; Function Attrs: norecurse nounwind readonly ssp uwtable
define internal signext i8 @_ZL15isCnvAcceptablePvPKcS1_PK9UDataInfo(i8* nocapture readnone, i8* nocapture readnone, i8* nocapture readnone, %struct.UDataInfo* nocapture readonly) #7 {
  %5 = getelementptr inbounds %struct.UDataInfo, %struct.UDataInfo* %3, i64 0, i32 0
  %6 = load i16, i16* %5, align 2
  %7 = icmp ugt i16 %6, 19
  br i1 %7, label %8, label %41

8:                                                ; preds = %4
  %9 = getelementptr inbounds %struct.UDataInfo, %struct.UDataInfo* %3, i64 0, i32 2
  %10 = load i8, i8* %9, align 2
  %11 = icmp eq i8 %10, 0
  br i1 %11, label %12, label %41

12:                                               ; preds = %8
  %13 = getelementptr inbounds %struct.UDataInfo, %struct.UDataInfo* %3, i64 0, i32 3
  %14 = load i8, i8* %13, align 1
  %15 = icmp eq i8 %14, 0
  br i1 %15, label %16, label %41

16:                                               ; preds = %12
  %17 = getelementptr inbounds %struct.UDataInfo, %struct.UDataInfo* %3, i64 0, i32 4
  %18 = load i8, i8* %17, align 2
  %19 = icmp eq i8 %18, 2
  br i1 %19, label %20, label %41

20:                                               ; preds = %16
  %21 = getelementptr inbounds %struct.UDataInfo, %struct.UDataInfo* %3, i64 0, i32 6, i64 0
  %22 = load i8, i8* %21, align 2
  %23 = icmp eq i8 %22, 99
  br i1 %23, label %24, label %41

24:                                               ; preds = %20
  %25 = getelementptr inbounds %struct.UDataInfo, %struct.UDataInfo* %3, i64 0, i32 6, i64 1
  %26 = load i8, i8* %25, align 1
  %27 = icmp eq i8 %26, 110
  br i1 %27, label %28, label %41

28:                                               ; preds = %24
  %29 = getelementptr inbounds %struct.UDataInfo, %struct.UDataInfo* %3, i64 0, i32 6, i64 2
  %30 = load i8, i8* %29, align 2
  %31 = icmp eq i8 %30, 118
  br i1 %31, label %32, label %41

32:                                               ; preds = %28
  %33 = getelementptr inbounds %struct.UDataInfo, %struct.UDataInfo* %3, i64 0, i32 6, i64 3
  %34 = load i8, i8* %33, align 1
  %35 = icmp eq i8 %34, 116
  br i1 %35, label %36, label %41

36:                                               ; preds = %32
  %37 = getelementptr inbounds %struct.UDataInfo, %struct.UDataInfo* %3, i64 0, i32 7, i64 0
  %38 = load i8, i8* %37, align 2
  %39 = icmp eq i8 %38, 6
  %40 = zext i1 %39 to i8
  br label %41

41:                                               ; preds = %36, %32, %28, %24, %20, %16, %12, %8, %4
  %42 = phi i8 [ 0, %32 ], [ 0, %28 ], [ 0, %24 ], [ 0, %20 ], [ 0, %16 ], [ 0, %12 ], [ 0, %8 ], [ 0, %4 ], [ %40, %36 ]
  ret i8 %42
}

declare void @udata_close_69(%struct.UDataMemory*) local_unnamed_addr #1

declare i8* @udata_getMemory_69(%struct.UDataMemory*) local_unnamed_addr #1

declare i8* @uhash_get_69(%struct.UHashtable*, i8*) local_unnamed_addr #1

declare %struct.UHashtable* @uhash_openSize_69(i32 (i8*)*, i8 (i8*, i8*)*, i8 (i8*, i8*)*, i32, i32*) local_unnamed_addr #1

declare i32 @uhash_hashChars_69(i8*) #1

declare signext i8 @uhash_compareChars_69(i8*, i8*) #1

declare zeroext i16 @ucnv_io_countKnownConverters_69(i32*) local_unnamed_addr #1

declare i8* @uhash_put_69(%struct.UHashtable*, i8*, i8*, i32*) local_unnamed_addr #1

; Function Attrs: nofree nounwind readonly
declare i32 @strncmp(i8* nocapture, i8* nocapture, i64) local_unnamed_addr #8

declare i8* @ucnv_io_stripASCIIForCompare_69(i8*, i8*) local_unnamed_addr #1

; Function Attrs: nofree nounwind readonly
declare i32 @strcmp(i8* nocapture, i8* nocapture) local_unnamed_addr #8

declare signext i8 @_ZN6icu_6920umtx_initImplPreInitERNS_9UInitOnceE(%"struct.icu_69::UInitOnce"* dereferenceable(8)) local_unnamed_addr #1

declare void @_ZN6icu_6921umtx_initImplPostInitERNS_9UInitOnceE(%"struct.icu_69::UInitOnce"* dereferenceable(8)) local_unnamed_addr #1

declare %struct.UEnumeration* @ucnv_openAllNames_69(i32*) local_unnamed_addr #1

declare i32 @uenum_count_69(%struct.UEnumeration*, i32*) local_unnamed_addr #1

declare i8* @uenum_next_69(%struct.UEnumeration*, i32*, i32*) local_unnamed_addr #1

declare void @uenum_close_69(%struct.UEnumeration*) local_unnamed_addr #1

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind }
attributes #3 = { nofree nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { allocsize(0) "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { argmemonly nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nounwind }
attributes #10 = { nounwind allocsize(0) }
attributes #11 = { nounwind readonly }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
