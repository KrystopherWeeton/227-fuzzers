; ModuleID = '../../third_party/skia/modules/skottie/src/effects/BlackAndWhiteEffect.cpp'
source_filename = "../../third_party/skia/modules/skottie/src/effects/BlackAndWhiteEffect.cpp"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%class.SkRuntimeEffect = type <{ %class.SkRefCnt.base, i32, %class.SkString, %"class.std::__1::unique_ptr.54", %"class.SkSL::FunctionDefinition"*, %"class.std::__1::vector.60", %"class.std::__1::vector.67", %"class.std::__1::vector.74", %"class.std::__1::unique_ptr.81", i32, [4 x i8] }>
%class.SkRefCnt.base = type { %class.SkRefCntBase.base }
%class.SkRefCntBase.base = type <{ i32 (...)**, %"struct.std::__1::atomic" }>
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.0" }
%"struct.std::__1::__atomic_base.0" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%class.SkString = type { %class.sk_sp.53 }
%class.sk_sp.53 = type { %"struct.SkString::Rec"* }
%"struct.SkString::Rec" = type <{ i32, %"struct.std::__1::atomic", i8, [3 x i8] }>
%"class.std::__1::unique_ptr.54" = type { %"class.std::__1::__compressed_pair.55" }
%"class.std::__1::__compressed_pair.55" = type { %"struct.std::__1::__compressed_pair_elem.56" }
%"struct.std::__1::__compressed_pair_elem.56" = type { %"struct.SkSL::Program"* }
%"struct.SkSL::Program" = type opaque
%"class.SkSL::FunctionDefinition" = type opaque
%"class.std::__1::vector.60" = type { %"class.std::__1::__vector_base.61" }
%"class.std::__1::__vector_base.61" = type { %"struct.SkRuntimeEffect::Uniform"*, %"struct.SkRuntimeEffect::Uniform"*, %"class.std::__1::__compressed_pair.62" }
%"struct.SkRuntimeEffect::Uniform" = type <{ %class.SkString, i64, i32, i32, i32, [4 x i8] }>
%"class.std::__1::__compressed_pair.62" = type { %"struct.std::__1::__compressed_pair_elem.63" }
%"struct.std::__1::__compressed_pair_elem.63" = type { %"struct.SkRuntimeEffect::Uniform"* }
%"class.std::__1::vector.67" = type { %"class.std::__1::__vector_base.68" }
%"class.std::__1::__vector_base.68" = type { %"struct.SkRuntimeEffect::Child"*, %"struct.SkRuntimeEffect::Child"*, %"class.std::__1::__compressed_pair.69" }
%"struct.SkRuntimeEffect::Child" = type { %class.SkString, i32, i32 }
%"class.std::__1::__compressed_pair.69" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"struct.std::__1::__compressed_pair_elem.70" = type { %"struct.SkRuntimeEffect::Child"* }
%"class.std::__1::vector.74" = type { %"class.std::__1::__vector_base.75" }
%"class.std::__1::__vector_base.75" = type { %"struct.SkSL::SampleUsage"*, %"struct.SkSL::SampleUsage"*, %"class.std::__1::__compressed_pair.76" }
%"struct.SkSL::SampleUsage" = type <{ i32, i8, [3 x i8] }>
%"class.std::__1::__compressed_pair.76" = type { %"struct.std::__1::__compressed_pair_elem.77" }
%"struct.std::__1::__compressed_pair_elem.77" = type { %"struct.SkSL::SampleUsage"* }
%"class.std::__1::unique_ptr.81" = type { %"class.std::__1::__compressed_pair.82" }
%"class.std::__1::__compressed_pair.82" = type { %"struct.std::__1::__compressed_pair_elem.83" }
%"struct.std::__1::__compressed_pair_elem.83" = type { %class.SkFilterColorProgram* }
%class.SkFilterColorProgram = type opaque
%"class.skottie::internal::EffectBuilder" = type { %"class.skottie::internal::AnimationBuilder"*, %"class.skottie::internal::CompositionBuilder"*, %struct.SkSize }
%"class.skottie::internal::AnimationBuilder" = type { %class.sk_sp, %"struct.skottie::internal::AnimationBuilder::LazyResolveFontMgr", %class.sk_sp.2, %class.sk_sp.3, %class.sk_sp.4, %class.sk_sp.5, %"struct.skottie::Animation::Builder::Stats"*, %struct.SkSize, float, float, i32, %"class.std::__1::vector"*, i8*, i8, %class.SkTHashMap, %class.SkTHashMap.11, %class.SkTHashMap.20 }
%class.sk_sp = type { %"class.skresources::ResourceProvider"* }
%"class.skresources::ResourceProvider" = type { %class.SkRefCnt.base, [4 x i8] }
%"struct.skottie::internal::AnimationBuilder::LazyResolveFontMgr" = type { %class.sk_sp.1 }
%class.sk_sp.1 = type { %class.SkFontMgr* }
%class.SkFontMgr = type { %class.SkRefCnt.base, [4 x i8] }
%class.sk_sp.2 = type { %"class.skottie::PropertyObserver"* }
%"class.skottie::PropertyObserver" = type { %class.SkRefCnt.base, [4 x i8] }
%class.sk_sp.3 = type { %"class.skottie::Logger"* }
%"class.skottie::Logger" = type { %class.SkRefCnt.base, [4 x i8] }
%class.sk_sp.4 = type { %"class.skottie::MarkerObserver"* }
%"class.skottie::MarkerObserver" = type { %class.SkRefCnt.base, [4 x i8] }
%class.sk_sp.5 = type { %"class.skottie::PrecompInterceptor"* }
%"class.skottie::PrecompInterceptor" = type { %class.SkRefCnt.base, [4 x i8] }
%"struct.skottie::Animation::Builder::Stats" = type { float, float, float, i64, i64 }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %class.sk_sp.6*, %class.sk_sp.6*, %"class.std::__1::__compressed_pair" }
%class.sk_sp.6 = type { %"class.skottie::internal::Animator"* }
%"class.skottie::internal::Animator" = type { %class.SkRefCnt.base, [4 x i8] }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %class.sk_sp.6* }
%class.SkTHashMap = type { %class.SkTHashTable }
%class.SkTHashTable = type { i32, i32, %class.SkAutoTArray }
%class.SkAutoTArray = type { %"class.std::__1::unique_ptr" }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair.8" }
%"class.std::__1::__compressed_pair.8" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"struct.std::__1::__compressed_pair_elem.9" = type { %"struct.SkTHashTable<SkTHashMap<SkString, skottie::internal::AnimationBuilder::AssetInfo, SkGoodHash>::Pair, SkString, SkTHashMap<SkString, skottie::internal::AnimationBuilder::AssetInfo, SkGoodHash>::Pair>::Slot"* }
%"struct.SkTHashTable<SkTHashMap<SkString, skottie::internal::AnimationBuilder::AssetInfo, SkGoodHash>::Pair, SkString, SkTHashMap<SkString, skottie::internal::AnimationBuilder::AssetInfo, SkGoodHash>::Pair>::Slot" = type opaque
%class.SkTHashMap.11 = type { %class.SkTHashTable.12 }
%class.SkTHashTable.12 = type { i32, i32, %class.SkAutoTArray.13 }
%class.SkAutoTArray.13 = type { %"class.std::__1::unique_ptr.14" }
%"class.std::__1::unique_ptr.14" = type { %"class.std::__1::__compressed_pair.15" }
%"class.std::__1::__compressed_pair.15" = type { %"struct.std::__1::__compressed_pair_elem.16" }
%"struct.std::__1::__compressed_pair_elem.16" = type { %"struct.SkTHashTable<SkTHashMap<SkString, skottie::internal::AnimationBuilder::FontInfo, SkGoodHash>::Pair, SkString, SkTHashMap<SkString, skottie::internal::AnimationBuilder::FontInfo, SkGoodHash>::Pair>::Slot"* }
%"struct.SkTHashTable<SkTHashMap<SkString, skottie::internal::AnimationBuilder::FontInfo, SkGoodHash>::Pair, SkString, SkTHashMap<SkString, skottie::internal::AnimationBuilder::FontInfo, SkGoodHash>::Pair>::Slot" = type opaque
%class.SkTHashMap.20 = type { %class.SkTHashTable.21 }
%class.SkTHashTable.21 = type { i32, i32, %class.SkAutoTArray.22 }
%class.SkAutoTArray.22 = type { %"class.std::__1::unique_ptr.23" }
%"class.std::__1::unique_ptr.23" = type { %"class.std::__1::__compressed_pair.24" }
%"class.std::__1::__compressed_pair.24" = type { %"struct.std::__1::__compressed_pair_elem.25" }
%"struct.std::__1::__compressed_pair_elem.25" = type { %"struct.SkTHashTable<SkTHashMap<SkString, skottie::internal::AnimationBuilder::FootageAssetInfo, SkGoodHash>::Pair, SkString, SkTHashMap<SkString, skottie::internal::AnimationBuilder::FootageAssetInfo, SkGoodHash>::Pair>::Slot"* }
%"struct.SkTHashTable<SkTHashMap<SkString, skottie::internal::AnimationBuilder::FootageAssetInfo, SkGoodHash>::Pair, SkString, SkTHashMap<SkString, skottie::internal::AnimationBuilder::FootageAssetInfo, SkGoodHash>::Pair>::Slot" = type opaque
%"class.skottie::internal::CompositionBuilder" = type { %struct.SkSize, %"class.std::__1::vector.29", %class.SkTHashMap.39, %class.sk_sp.31, i64, float, float }
%"class.std::__1::vector.29" = type { %"class.std::__1::__vector_base.30" }
%"class.std::__1::__vector_base.30" = type { %"class.skottie::internal::LayerBuilder"*, %"class.skottie::internal::LayerBuilder"*, %"class.std::__1::__compressed_pair.34" }
%"class.skottie::internal::LayerBuilder" = type <{ %"class.skjson::ObjectValue"*, i32, i32, i32, i8, [3 x i8], %"struct.skottie::internal::AnimationBuilder::LayerInfo", %class.sk_sp.31, [2 x %class.sk_sp.31], %class.sk_sp.32, %"class.std::__1::vector", i64, i32, [4 x i8] }>
%"class.skjson::ObjectValue" = type { %"class.skjson::VectorValue" }
%"class.skjson::VectorValue" = type { %"class.skjson::Value" }
%"class.skjson::Value" = type { [8 x i8] }
%"struct.skottie::internal::AnimationBuilder::LayerInfo" = type { %struct.SkSize, float, float }
%class.sk_sp.32 = type { %"class.sksg::RenderNode"* }
%"class.sksg::RenderNode" = type { %"class.sksg::Node.base", [6 x i8] }
%"class.sksg::Node.base" = type <{ %class.SkRefCnt.base, [4 x i8], %union.anon, %struct.SkRect, i16 }>
%union.anon = type { %"class.sksg::Node"* }
%"class.sksg::Node" = type <{ %class.SkRefCnt.base, [4 x i8], %union.anon, %struct.SkRect, i16, [6 x i8] }>
%struct.SkRect = type { float, float, float, float }
%"class.std::__1::__compressed_pair.34" = type { %"struct.std::__1::__compressed_pair_elem.35" }
%"struct.std::__1::__compressed_pair_elem.35" = type { %"class.skottie::internal::LayerBuilder"* }
%class.SkTHashMap.39 = type { %class.SkTHashTable.40 }
%class.SkTHashTable.40 = type { i32, i32, %class.SkAutoTArray.41 }
%class.SkAutoTArray.41 = type { %"class.std::__1::unique_ptr.42" }
%"class.std::__1::unique_ptr.42" = type { %"class.std::__1::__compressed_pair.43" }
%"class.std::__1::__compressed_pair.43" = type { %"struct.std::__1::__compressed_pair_elem.44" }
%"struct.std::__1::__compressed_pair_elem.44" = type { %"struct.SkTHashTable<SkTHashMap<int, unsigned long, SkGoodHash>::Pair, int, SkTHashMap<int, unsigned long, SkGoodHash>::Pair>::Slot"* }
%"struct.SkTHashTable<SkTHashMap<int, unsigned long, SkGoodHash>::Pair, int, SkTHashMap<int, unsigned long, SkGoodHash>::Pair>::Slot" = type opaque
%class.sk_sp.31 = type { %"class.sksg::Transform"* }
%"class.sksg::Transform" = type opaque
%struct.SkSize = type { float, float }
%"class.skjson::ArrayValue" = type { %"class.skjson::VectorValue.48" }
%"class.skjson::VectorValue.48" = type { %"class.skjson::Value" }
%"struct.SkRuntimeEffect::Options" = type { i8, i8 }
%"struct.SkRuntimeEffect::Result" = type { %class.sk_sp.52, %class.SkString }
%class.sk_sp.52 = type { %class.SkRuntimeEffect* }
%class.sk_sp.49 = type { %"class.sksg::ExternalColorFilter"* }
%"class.sksg::ExternalColorFilter" = type { %"class.sksg::EffectNode", %class.sk_sp.50 }
%"class.sksg::EffectNode" = type { %"class.sksg::RenderNode.base", %class.sk_sp.32 }
%"class.sksg::RenderNode.base" = type { %"class.sksg::Node.base" }
%class.sk_sp.50 = type { %class.SkColorFilter* }
%class.SkColorFilter = type { %class.SkFlattenable.base, [4 x i8] }
%class.SkFlattenable.base = type { %class.SkRefCnt.base }
%class.SkRefCntBase = type <{ i32 (...)**, %"struct.std::__1::atomic", [4 x i8] }>
%"class.skottie::internal::AnimatablePropertyContainer" = type <{ %"class.skottie::internal::Animator.base", [4 x i8], %"class.std::__1::vector", i8, [7 x i8] }>
%"class.skottie::internal::Animator.base" = type { %class.SkRefCnt.base }
%"class.skottie::internal::(anonymous namespace)::BlackAndWhiteAdapter" = type { %"class.skottie::internal::DiscardableAdapterBase", %class.sk_sp.52, [6 x float] }
%"class.skottie::internal::DiscardableAdapterBase" = type { %"class.skottie::internal::AnimatablePropertyContainer.base", %class.sk_sp.49 }
%"class.skottie::internal::AnimatablePropertyContainer.base" = type <{ %"class.skottie::internal::Animator.base", [4 x i8], %"class.std::__1::vector", i8 }>
%struct.anon = type { [6 x float] }
%class.sk_sp.87 = type { %class.SkData* }
%class.SkData = type { %class.SkNVRefCnt, void (i8*, i8*)*, i8*, i8*, i64 }
%class.SkNVRefCnt = type { %"struct.std::__1::atomic" }
%"class.std::__1::__vector_base_common" = type { i8 }

$_ZNK12SkRefCntBase16internal_disposeEv = comdat any

$_ZNSt3__16vectorI5sk_spIN7skottie8internal8AnimatorEENS_9allocatorIS5_EEE21__push_back_slow_pathIS5_EEvOT_ = comdat any

@_ZTVN7skottie8internal12_GLOBAL__N_120BlackAndWhiteAdapterE = internal unnamed_addr constant { [7 x i8*] } { [7 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.skottie::internal::(anonymous namespace)::BlackAndWhiteAdapter"*)* @_ZN7skottie8internal12_GLOBAL__N_120BlackAndWhiteAdapterD2Ev to i8*), i8* bitcast (void (%"class.skottie::internal::(anonymous namespace)::BlackAndWhiteAdapter"*)* @_ZN7skottie8internal12_GLOBAL__N_120BlackAndWhiteAdapterD0Ev to i8*), i8* bitcast (void (%class.SkRefCntBase*)* @_ZNK12SkRefCntBase16internal_disposeEv to i8*), i8* bitcast (i1 (%"class.skottie::internal::AnimatablePropertyContainer"*, float)* @_ZN7skottie8internal27AnimatablePropertyContainer6onSeekEf to i8*), i8* bitcast (void (%"class.skottie::internal::(anonymous namespace)::BlackAndWhiteAdapter"*)* @_ZN7skottie8internal12_GLOBAL__N_120BlackAndWhiteAdapter6onSyncEv to i8*)] }, align 8
@_ZTVN7skottie8internal22DiscardableAdapterBaseINS0_12_GLOBAL__N_120BlackAndWhiteAdapterEN4sksg19ExternalColorFilterEEE = internal unnamed_addr constant { [7 x i8*] } { [7 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.skottie::internal::DiscardableAdapterBase"*)* @_ZN7skottie8internal22DiscardableAdapterBaseINS0_12_GLOBAL__N_120BlackAndWhiteAdapterEN4sksg19ExternalColorFilterEED2Ev to i8*), i8* bitcast (void (%"class.skottie::internal::DiscardableAdapterBase"*)* @_ZN7skottie8internal22DiscardableAdapterBaseINS0_12_GLOBAL__N_120BlackAndWhiteAdapterEN4sksg19ExternalColorFilterEED0Ev to i8*), i8* bitcast (void (%class.SkRefCntBase*)* @_ZNK12SkRefCntBase16internal_disposeEv to i8*), i8* bitcast (i1 (%"class.skottie::internal::AnimatablePropertyContainer"*, float)* @_ZN7skottie8internal27AnimatablePropertyContainer6onSeekEf to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*)] }, align 8
@_ZTVN7skottie8internal27AnimatablePropertyContainerE = external unnamed_addr constant { [7 x i8*] }, align 8
@_ZZN7skottie8internal12_GLOBAL__N_111make_effectEvE22BLACK_AND_WHITE_EFFECT = internal constant [659 x i8] c"\0A        uniform half kR, kY, kG, kC, kB, kM;\0A\0A        half4 main(half4 c) {\0A            half m = min(min(c.r, c.g), c.b),\0A\0A                dr = c.r - m,\0A                dg = c.g - m,\0A                db = c.b - m,\0A\0A                // secondaries weights\0A                wy = min(dr,dg),\0A                wc = min(dg,db),\0A                wm = min(db,dr),\0A\0A                // primaries weights\0A                wr = dr - wy - wm,\0A                wg = dg - wy - wc,\0A                wb = db - wc - wm,\0A\0A                // final luminance\0A                l = m + kR*wr + kY*wy + kG*wg + kC*wc + kB*wb + kM*wm;\0A\0A            return half4(l, l, l, c.a);\0A        }\0A    \00", align 16
@_ZZN7skottie8internal12_GLOBAL__N_111make_effectEvE6effect = internal unnamed_addr global %class.SkRuntimeEffect* null, align 8
@_ZGVZN7skottie8internal12_GLOBAL__N_111make_effectEvE6effect = internal global i64 0, align 8

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK7skottie8internal13EffectBuilder25attachBlackAndWhiteEffectERKN6skjson10ArrayValueE5sk_spIN4sksg10RenderNodeEE(%class.sk_sp.32* noalias nocapture sret, %"class.skottie::internal::EffectBuilder"* nocapture readonly, %"class.skjson::ArrayValue"* dereferenceable(8), %class.sk_sp.32* nocapture) local_unnamed_addr #0 align 2 {
  %5 = alloca %class.SkString, align 8
  %6 = alloca %"struct.SkRuntimeEffect::Options", align 1
  %7 = alloca %"struct.SkRuntimeEffect::Result", align 8
  %8 = alloca %class.SkString, align 8
  %9 = alloca %class.sk_sp.49, align 8
  %10 = alloca %class.sk_sp.32, align 8
  %11 = alloca %class.sk_sp.6, align 8
  %12 = getelementptr inbounds %"class.skottie::internal::EffectBuilder", %"class.skottie::internal::EffectBuilder"* %1, i64 0, i32 0
  %13 = load %"class.skottie::internal::AnimationBuilder"*, %"class.skottie::internal::AnimationBuilder"** %12, align 8
  %14 = tail call i8* @_Znwm(i64 88) #12, !noalias !2
  %15 = getelementptr inbounds %class.sk_sp.32, %class.sk_sp.32* %3, i64 0, i32 0
  %16 = bitcast %class.sk_sp.32* %3 to i64*
  %17 = load i64, i64* %16, align 8, !noalias !2
  store %"class.sksg::RenderNode"* null, %"class.sksg::RenderNode"** %15, align 8, !noalias !2
  %18 = bitcast %class.sk_sp.49* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %18) #13, !noalias !2
  %19 = bitcast %class.sk_sp.32* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %19) #13, !noalias !2
  %20 = bitcast %class.sk_sp.32* %10 to i64*
  store i64 %17, i64* %20, align 8, !noalias !2
  call void @_ZN4sksg19ExternalColorFilter4MakeE5sk_spINS_10RenderNodeEE(%class.sk_sp.49* nonnull sret %9, %class.sk_sp.32* nonnull %10) #13, !noalias !2
  %21 = getelementptr inbounds i8, i8* %14, i64 8
  %22 = bitcast i8* %21 to i32*
  store i32 1, i32* %22, align 4, !noalias !2
  %23 = bitcast i8* %14 to i32 (...)***
  %24 = getelementptr inbounds i8, i8* %14, i64 16
  call void @llvm.memset.p0i8.i64(i8* align 8 %24, i8 0, i64 25, i1 false) #13, !noalias !2
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVN7skottie8internal22DiscardableAdapterBaseINS0_12_GLOBAL__N_120BlackAndWhiteAdapterEN4sksg19ExternalColorFilterEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %23, align 8, !noalias !2
  %25 = getelementptr inbounds i8, i8* %14, i64 48
  %26 = getelementptr inbounds %class.sk_sp.49, %class.sk_sp.49* %9, i64 0, i32 0
  %27 = bitcast %class.sk_sp.49* %9 to i64*
  %28 = load i64, i64* %27, align 8, !noalias !2
  store %"class.sksg::ExternalColorFilter"* null, %"class.sksg::ExternalColorFilter"** %26, align 8, !noalias !2
  %29 = bitcast i8* %25 to i64*
  store i64 %28, i64* %29, align 8, !noalias !2
  %30 = getelementptr inbounds %class.sk_sp.32, %class.sk_sp.32* %10, i64 0, i32 0
  %31 = load %"class.sksg::RenderNode"*, %"class.sksg::RenderNode"** %30, align 8, !noalias !2
  %32 = icmp eq %"class.sksg::RenderNode"* %31, null
  br i1 %32, label %43, label %33

33:                                               ; preds = %4
  %34 = getelementptr inbounds %"class.sksg::RenderNode", %"class.sksg::RenderNode"* %31, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %35 = atomicrmw add i32* %34, i32 -1 acq_rel, !noalias !7
  %36 = icmp eq i32 %35, 1
  br i1 %36, label %37, label %43

37:                                               ; preds = %33
  %38 = bitcast %"class.sksg::RenderNode"* %31 to %class.SkRefCntBase*
  %39 = bitcast %"class.sksg::RenderNode"* %31 to void (%class.SkRefCntBase*)***
  %40 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %39, align 8, !noalias !7
  %41 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %40, i64 2
  %42 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %41, align 8, !noalias !7
  call void %42(%class.SkRefCntBase* nonnull %38) #13, !noalias !7
  br label %43

43:                                               ; preds = %37, %33, %4
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVN7skottie8internal12_GLOBAL__N_120BlackAndWhiteAdapterE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %23, align 8, !noalias !2
  %44 = bitcast %class.SkString* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %44) #13, !noalias !2
  %45 = load atomic i8, i8* bitcast (i64* @_ZGVZN7skottie8internal12_GLOBAL__N_111make_effectEvE6effect to i8*) acquire, align 8, !noalias !8
  %46 = icmp eq i8 %45, 0
  br i1 %46, label %47, label %72, !prof !11

47:                                               ; preds = %43
  %48 = call i32 @__cxa_guard_acquire(i64* nonnull @_ZGVZN7skottie8internal12_GLOBAL__N_111make_effectEvE6effect) #13, !noalias !12
  %49 = icmp eq i32 %48, 0
  br i1 %49, label %72, label %50

50:                                               ; preds = %47
  %51 = bitcast %"struct.SkRuntimeEffect::Result"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %51) #13, !noalias !8
  call void @_ZN8SkStringC1EPKc(%class.SkString* nonnull %8, i8* getelementptr inbounds ([659 x i8], [659 x i8]* @_ZZN7skottie8internal12_GLOBAL__N_111make_effectEvE22BLACK_AND_WHITE_EFFECT, i64 0, i64 0)) #13, !noalias !12
  %52 = bitcast %class.SkString* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %52) #13, !noalias !8
  call void @_ZN8SkStringC1EOS_(%class.SkString* nonnull %5, %class.SkString* nonnull dereferenceable(8) %8) #13, !noalias !13
  %53 = getelementptr inbounds %"struct.SkRuntimeEffect::Options", %"struct.SkRuntimeEffect::Options"* %6, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 2, i8* nonnull %53) #13, !noalias !16
  store i8 0, i8* %53, align 1, !noalias !16
  %54 = getelementptr inbounds %"struct.SkRuntimeEffect::Options", %"struct.SkRuntimeEffect::Options"* %6, i64 0, i32 1
  store i8 1, i8* %54, align 1, !noalias !16
  call void @_ZN15SkRuntimeEffect18MakeForColorFilterE8SkStringRKNS_7OptionsE(%"struct.SkRuntimeEffect::Result"* nonnull sret %7, %class.SkString* nonnull %5, %"struct.SkRuntimeEffect::Options"* nonnull dereferenceable(2) %6) #13, !noalias !12
  call void @llvm.lifetime.end.p0i8(i64 2, i8* nonnull %53) #13, !noalias !16
  call void @_ZN8SkStringD1Ev(%class.SkString* nonnull %5) #13, !noalias !12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %52) #13, !noalias !8
  %55 = getelementptr inbounds %"struct.SkRuntimeEffect::Result", %"struct.SkRuntimeEffect::Result"* %7, i64 0, i32 0, i32 0
  %56 = bitcast %"struct.SkRuntimeEffect::Result"* %7 to i64*
  %57 = load i64, i64* %56, align 8, !noalias !8
  store %class.SkRuntimeEffect* null, %class.SkRuntimeEffect** %55, align 8, !noalias !8
  %58 = getelementptr inbounds %"struct.SkRuntimeEffect::Result", %"struct.SkRuntimeEffect::Result"* %7, i64 0, i32 1
  call void @_ZN8SkStringD1Ev(%class.SkString* %58) #13, !noalias !12
  %59 = load %class.SkRuntimeEffect*, %class.SkRuntimeEffect** %55, align 8, !noalias !8
  %60 = icmp eq %class.SkRuntimeEffect* %59, null
  br i1 %60, label %71, label %61

61:                                               ; preds = %50
  %62 = getelementptr inbounds %class.SkRuntimeEffect, %class.SkRuntimeEffect* %59, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %63 = atomicrmw add i32* %62, i32 -1 acq_rel, !noalias !12
  %64 = icmp eq i32 %63, 1
  br i1 %64, label %65, label %71

65:                                               ; preds = %61
  %66 = bitcast %class.SkRuntimeEffect* %59 to %class.SkRefCntBase*
  %67 = bitcast %class.SkRuntimeEffect* %59 to void (%class.SkRefCntBase*)***
  %68 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %67, align 8, !noalias !12
  %69 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %68, i64 2
  %70 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %69, align 8, !noalias !12
  call void %70(%class.SkRefCntBase* nonnull %66) #13, !noalias !12
  br label %71

71:                                               ; preds = %65, %61, %50
  call void @_ZN8SkStringD1Ev(%class.SkString* nonnull %8) #13, !noalias !12
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %51) #13, !noalias !8
  store i64 %57, i64* bitcast (%class.SkRuntimeEffect** @_ZZN7skottie8internal12_GLOBAL__N_111make_effectEvE6effect to i64*), align 8, !noalias !12
  call void @__cxa_guard_release(i64* nonnull @_ZGVZN7skottie8internal12_GLOBAL__N_111make_effectEvE6effect) #13, !noalias !12
  br label %72

72:                                               ; preds = %71, %47, %43
  %73 = load %class.SkRuntimeEffect*, %class.SkRuntimeEffect** @_ZZN7skottie8internal12_GLOBAL__N_111make_effectEvE6effect, align 8, !noalias !8
  %74 = icmp eq %class.SkRuntimeEffect* %73, null
  br i1 %74, label %78, label %75

75:                                               ; preds = %72
  %76 = getelementptr inbounds %class.SkRuntimeEffect, %class.SkRuntimeEffect* %73, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %77 = atomicrmw add i32* %76, i32 1 monotonic, !noalias !17
  br label %78

78:                                               ; preds = %75, %72
  %79 = getelementptr inbounds i8, i8* %14, i64 56
  %80 = bitcast i8* %79 to %class.SkRuntimeEffect**
  store %class.SkRuntimeEffect* %73, %class.SkRuntimeEffect** %80, align 8, !alias.scope !20, !noalias !2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %44) #13, !noalias !2
  %81 = bitcast i8* %14 to %"class.skottie::internal::AnimatablePropertyContainer"*
  %82 = getelementptr inbounds i8, i8* %14, i64 64
  %83 = bitcast i8* %82 to float*
  %84 = call dereferenceable(8) %"class.skjson::Value"* @_ZN7skottie8internal13EffectBuilder12GetPropValueERKN6skjson10ArrayValueEm(%"class.skjson::ArrayValue"* dereferenceable(8) %2, i64 0) #13, !noalias !2
  %85 = getelementptr inbounds %"class.skjson::Value", %"class.skjson::Value"* %84, i64 0, i32 0, i64 0
  %86 = load i8, i8* %85, align 8, !noalias !2
  %87 = and i8 %86, 7
  %88 = icmp eq i8 %87, 7
  %89 = bitcast %"class.skjson::Value"* %84 to %"class.skjson::ObjectValue"*
  %90 = select i1 %88, %"class.skjson::ObjectValue"* %89, %"class.skjson::ObjectValue"* null
  %91 = call zeroext i1 @_ZN7skottie8internal27AnimatablePropertyContainer4bindIfEEbRKNS0_16AnimationBuilderEPKN6skjson11ObjectValueEPT_(%"class.skottie::internal::AnimatablePropertyContainer"* nonnull %81, %"class.skottie::internal::AnimationBuilder"* dereferenceable(152) %13, %"class.skjson::ObjectValue"* %90, float* %83) #13, !noalias !2
  %92 = getelementptr inbounds i8, i8* %14, i64 68
  %93 = bitcast i8* %92 to float*
  %94 = call dereferenceable(8) %"class.skjson::Value"* @_ZN7skottie8internal13EffectBuilder12GetPropValueERKN6skjson10ArrayValueEm(%"class.skjson::ArrayValue"* dereferenceable(8) %2, i64 1) #13, !noalias !2
  %95 = getelementptr inbounds %"class.skjson::Value", %"class.skjson::Value"* %94, i64 0, i32 0, i64 0
  %96 = load i8, i8* %95, align 8, !noalias !2
  %97 = and i8 %96, 7
  %98 = icmp eq i8 %97, 7
  %99 = bitcast %"class.skjson::Value"* %94 to %"class.skjson::ObjectValue"*
  %100 = select i1 %98, %"class.skjson::ObjectValue"* %99, %"class.skjson::ObjectValue"* null
  %101 = call zeroext i1 @_ZN7skottie8internal27AnimatablePropertyContainer4bindIfEEbRKNS0_16AnimationBuilderEPKN6skjson11ObjectValueEPT_(%"class.skottie::internal::AnimatablePropertyContainer"* nonnull %81, %"class.skottie::internal::AnimationBuilder"* dereferenceable(152) %13, %"class.skjson::ObjectValue"* %100, float* %93) #13, !noalias !2
  %102 = getelementptr inbounds i8, i8* %14, i64 72
  %103 = bitcast i8* %102 to float*
  %104 = call dereferenceable(8) %"class.skjson::Value"* @_ZN7skottie8internal13EffectBuilder12GetPropValueERKN6skjson10ArrayValueEm(%"class.skjson::ArrayValue"* dereferenceable(8) %2, i64 2) #13, !noalias !2
  %105 = getelementptr inbounds %"class.skjson::Value", %"class.skjson::Value"* %104, i64 0, i32 0, i64 0
  %106 = load i8, i8* %105, align 8, !noalias !2
  %107 = and i8 %106, 7
  %108 = icmp eq i8 %107, 7
  %109 = bitcast %"class.skjson::Value"* %104 to %"class.skjson::ObjectValue"*
  %110 = select i1 %108, %"class.skjson::ObjectValue"* %109, %"class.skjson::ObjectValue"* null
  %111 = call zeroext i1 @_ZN7skottie8internal27AnimatablePropertyContainer4bindIfEEbRKNS0_16AnimationBuilderEPKN6skjson11ObjectValueEPT_(%"class.skottie::internal::AnimatablePropertyContainer"* nonnull %81, %"class.skottie::internal::AnimationBuilder"* dereferenceable(152) %13, %"class.skjson::ObjectValue"* %110, float* %103) #13, !noalias !2
  %112 = getelementptr inbounds i8, i8* %14, i64 76
  %113 = bitcast i8* %112 to float*
  %114 = call dereferenceable(8) %"class.skjson::Value"* @_ZN7skottie8internal13EffectBuilder12GetPropValueERKN6skjson10ArrayValueEm(%"class.skjson::ArrayValue"* dereferenceable(8) %2, i64 3) #13, !noalias !2
  %115 = getelementptr inbounds %"class.skjson::Value", %"class.skjson::Value"* %114, i64 0, i32 0, i64 0
  %116 = load i8, i8* %115, align 8, !noalias !2
  %117 = and i8 %116, 7
  %118 = icmp eq i8 %117, 7
  %119 = bitcast %"class.skjson::Value"* %114 to %"class.skjson::ObjectValue"*
  %120 = select i1 %118, %"class.skjson::ObjectValue"* %119, %"class.skjson::ObjectValue"* null
  %121 = call zeroext i1 @_ZN7skottie8internal27AnimatablePropertyContainer4bindIfEEbRKNS0_16AnimationBuilderEPKN6skjson11ObjectValueEPT_(%"class.skottie::internal::AnimatablePropertyContainer"* nonnull %81, %"class.skottie::internal::AnimationBuilder"* dereferenceable(152) %13, %"class.skjson::ObjectValue"* %120, float* %113) #13, !noalias !2
  %122 = getelementptr inbounds i8, i8* %14, i64 80
  %123 = bitcast i8* %122 to float*
  %124 = call dereferenceable(8) %"class.skjson::Value"* @_ZN7skottie8internal13EffectBuilder12GetPropValueERKN6skjson10ArrayValueEm(%"class.skjson::ArrayValue"* dereferenceable(8) %2, i64 4) #13, !noalias !2
  %125 = getelementptr inbounds %"class.skjson::Value", %"class.skjson::Value"* %124, i64 0, i32 0, i64 0
  %126 = load i8, i8* %125, align 8, !noalias !2
  %127 = and i8 %126, 7
  %128 = icmp eq i8 %127, 7
  %129 = bitcast %"class.skjson::Value"* %124 to %"class.skjson::ObjectValue"*
  %130 = select i1 %128, %"class.skjson::ObjectValue"* %129, %"class.skjson::ObjectValue"* null
  %131 = call zeroext i1 @_ZN7skottie8internal27AnimatablePropertyContainer4bindIfEEbRKNS0_16AnimationBuilderEPKN6skjson11ObjectValueEPT_(%"class.skottie::internal::AnimatablePropertyContainer"* nonnull %81, %"class.skottie::internal::AnimationBuilder"* dereferenceable(152) %13, %"class.skjson::ObjectValue"* %130, float* %123) #13, !noalias !2
  %132 = getelementptr inbounds i8, i8* %14, i64 84
  %133 = bitcast i8* %132 to float*
  %134 = call dereferenceable(8) %"class.skjson::Value"* @_ZN7skottie8internal13EffectBuilder12GetPropValueERKN6skjson10ArrayValueEm(%"class.skjson::ArrayValue"* dereferenceable(8) %2, i64 5) #13, !noalias !2
  %135 = getelementptr inbounds %"class.skjson::Value", %"class.skjson::Value"* %134, i64 0, i32 0, i64 0
  %136 = load i8, i8* %135, align 8, !noalias !2
  %137 = and i8 %136, 7
  %138 = icmp eq i8 %137, 7
  %139 = bitcast %"class.skjson::Value"* %134 to %"class.skjson::ObjectValue"*
  %140 = select i1 %138, %"class.skjson::ObjectValue"* %139, %"class.skjson::ObjectValue"* null
  %141 = call zeroext i1 @_ZN7skottie8internal27AnimatablePropertyContainer4bindIfEEbRKNS0_16AnimationBuilderEPKN6skjson11ObjectValueEPT_(%"class.skottie::internal::AnimatablePropertyContainer"* nonnull %81, %"class.skottie::internal::AnimationBuilder"* dereferenceable(152) %13, %"class.skjson::ObjectValue"* %140, float* %133) #13, !noalias !2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18) #13, !noalias !2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %19) #13, !noalias !2
  %142 = ptrtoint i8* %14 to i64
  call void @_ZN7skottie8internal27AnimatablePropertyContainer13shrink_to_fitEv(%"class.skottie::internal::AnimatablePropertyContainer"* nonnull %81) #13, !noalias !2
  %143 = bitcast i8* %25 to %"class.sksg::ExternalColorFilter"**
  %144 = load %"class.sksg::ExternalColorFilter"*, %"class.sksg::ExternalColorFilter"** %143, align 8, !noalias !21
  %145 = icmp eq %"class.sksg::ExternalColorFilter"* %144, null
  br i1 %145, label %149, label %146

146:                                              ; preds = %78
  %147 = getelementptr inbounds %"class.sksg::ExternalColorFilter", %"class.sksg::ExternalColorFilter"* %144, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %148 = atomicrmw add i32* %147, i32 1 monotonic
  br label %149

149:                                              ; preds = %78, %146
  %150 = ptrtoint %"class.sksg::ExternalColorFilter"* %144 to i64
  %151 = bitcast i8* %24 to %class.sk_sp.6**
  %152 = load %class.sk_sp.6*, %class.sk_sp.6** %151, align 8, !noalias !21
  %153 = getelementptr inbounds i8, i8* %14, i64 24
  %154 = bitcast i8* %153 to %class.sk_sp.6**
  %155 = load %class.sk_sp.6*, %class.sk_sp.6** %154, align 8, !noalias !21
  %156 = icmp eq %class.sk_sp.6* %152, %155
  br i1 %156, label %189, label %157

157:                                              ; preds = %149
  %158 = getelementptr inbounds %"class.skottie::internal::AnimationBuilder", %"class.skottie::internal::AnimationBuilder"* %13, i64 0, i32 11
  %159 = load %"class.std::__1::vector"*, %"class.std::__1::vector"** %158, align 8, !noalias !21
  %160 = bitcast %class.sk_sp.6* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %160) #13, !noalias !21
  %161 = bitcast %class.sk_sp.6* %11 to i64*
  store i64 %142, i64* %161, align 8, !noalias !21
  %162 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %159, i64 0, i32 0, i32 1
  %163 = load %class.sk_sp.6*, %class.sk_sp.6** %162, align 8
  %164 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %159, i64 0, i32 0, i32 2, i32 0, i32 0
  %165 = load %class.sk_sp.6*, %class.sk_sp.6** %164, align 8
  %166 = icmp ult %class.sk_sp.6* %163, %165
  br i1 %166, label %167, label %173

167:                                              ; preds = %157
  %168 = getelementptr inbounds %class.sk_sp.6, %class.sk_sp.6* %11, i64 0, i32 0
  store %"class.skottie::internal::Animator"* null, %"class.skottie::internal::Animator"** %168, align 8, !noalias !21
  %169 = bitcast %class.sk_sp.6* %163 to i64*
  store i64 %142, i64* %169, align 8
  %170 = getelementptr inbounds %class.sk_sp.6, %class.sk_sp.6* %163, i64 1
  %171 = ptrtoint %class.sk_sp.6* %170 to i64
  %172 = bitcast %class.sk_sp.6** %162 to i64*
  store i64 %171, i64* %172, align 8
  br label %174

173:                                              ; preds = %157
  call void @_ZNSt3__16vectorI5sk_spIN7skottie8internal8AnimatorEENS_9allocatorIS5_EEE21__push_back_slow_pathIS5_EEvOT_(%"class.std::__1::vector"* %159, %class.sk_sp.6* nonnull dereferenceable(8) %11) #13
  br label %174

174:                                              ; preds = %173, %167
  %175 = getelementptr inbounds %class.sk_sp.6, %class.sk_sp.6* %11, i64 0, i32 0
  %176 = load %"class.skottie::internal::Animator"*, %"class.skottie::internal::Animator"** %175, align 8, !noalias !21
  %177 = icmp eq %"class.skottie::internal::Animator"* %176, null
  br i1 %177, label %188, label %178

178:                                              ; preds = %174
  %179 = getelementptr inbounds %"class.skottie::internal::Animator", %"class.skottie::internal::Animator"* %176, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %180 = atomicrmw add i32* %179, i32 -1 acq_rel
  %181 = icmp eq i32 %180, 1
  br i1 %181, label %182, label %188

182:                                              ; preds = %178
  %183 = bitcast %"class.skottie::internal::Animator"* %176 to %class.SkRefCntBase*
  %184 = bitcast %"class.skottie::internal::Animator"* %176 to void (%class.SkRefCntBase*)***
  %185 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %184, align 8
  %186 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %185, i64 2
  %187 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %186, align 8
  call void %187(%class.SkRefCntBase* nonnull %183) #13
  br label %188

188:                                              ; preds = %182, %178, %174
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %160) #13, !noalias !21
  br label %204

189:                                              ; preds = %149
  %190 = bitcast i8* %14 to %"class.skottie::internal::Animator"*
  %191 = bitcast i8* %14 to i1 (%"class.skottie::internal::Animator"*, float)***
  %192 = load i1 (%"class.skottie::internal::Animator"*, float)**, i1 (%"class.skottie::internal::Animator"*, float)*** %191, align 8, !noalias !21
  %193 = getelementptr inbounds i1 (%"class.skottie::internal::Animator"*, float)*, i1 (%"class.skottie::internal::Animator"*, float)** %192, i64 3
  %194 = load i1 (%"class.skottie::internal::Animator"*, float)*, i1 (%"class.skottie::internal::Animator"*, float)** %193, align 8
  %195 = call zeroext i1 %194(%"class.skottie::internal::Animator"* nonnull %190, float 0.000000e+00) #13
  %196 = atomicrmw add i32* %22, i32 -1 acq_rel, !noalias !21
  %197 = icmp eq i32 %196, 1
  br i1 %197, label %198, label %204

198:                                              ; preds = %189
  %199 = bitcast i8* %14 to %class.SkRefCntBase*
  %200 = bitcast i8* %14 to void (%class.SkRefCntBase*)***
  %201 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %200, align 8, !noalias !21
  %202 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %201, i64 2
  %203 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %202, align 8
  call void %203(%class.SkRefCntBase* nonnull %199) #13
  br label %204

204:                                              ; preds = %198, %189, %188
  %205 = bitcast %class.sk_sp.32* %0 to i64*
  store i64 %150, i64* %205, align 8
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #2

declare void @_ZN7skottie8internal27AnimatablePropertyContainer13shrink_to_fitEv(%"class.skottie::internal::AnimatablePropertyContainer"*) local_unnamed_addr #3

declare void @_ZN4sksg19ExternalColorFilter4MakeE5sk_spINS_10RenderNodeEE(%class.sk_sp.49* sret, %class.sk_sp.32*) local_unnamed_addr #3

; Function Attrs: inlinehint nounwind ssp uwtable
define internal void @_ZN7skottie8internal12_GLOBAL__N_120BlackAndWhiteAdapterD2Ev(%"class.skottie::internal::(anonymous namespace)::BlackAndWhiteAdapter"* nocapture) unnamed_addr #4 align 2 {
  %2 = getelementptr inbounds %"class.skottie::internal::(anonymous namespace)::BlackAndWhiteAdapter", %"class.skottie::internal::(anonymous namespace)::BlackAndWhiteAdapter"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVN7skottie8internal12_GLOBAL__N_120BlackAndWhiteAdapterE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.skottie::internal::(anonymous namespace)::BlackAndWhiteAdapter", %"class.skottie::internal::(anonymous namespace)::BlackAndWhiteAdapter"* %0, i64 0, i32 1, i32 0
  %4 = load %class.SkRuntimeEffect*, %class.SkRuntimeEffect** %3, align 8
  %5 = icmp eq %class.SkRuntimeEffect* %4, null
  br i1 %5, label %16, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %class.SkRuntimeEffect, %class.SkRuntimeEffect* %4, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %8 = atomicrmw add i32* %7, i32 -1 acq_rel
  %9 = icmp eq i32 %8, 1
  br i1 %9, label %10, label %16

10:                                               ; preds = %6
  %11 = bitcast %class.SkRuntimeEffect* %4 to %class.SkRefCntBase*
  %12 = bitcast %class.SkRuntimeEffect* %4 to void (%class.SkRefCntBase*)***
  %13 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %12, align 8
  %14 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %13, i64 2
  %15 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %14, align 8
  tail call void %15(%class.SkRefCntBase* nonnull %11) #13
  br label %16

16:                                               ; preds = %1, %6, %10
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVN7skottie8internal22DiscardableAdapterBaseINS0_12_GLOBAL__N_120BlackAndWhiteAdapterEN4sksg19ExternalColorFilterEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %17 = getelementptr inbounds %"class.skottie::internal::(anonymous namespace)::BlackAndWhiteAdapter", %"class.skottie::internal::(anonymous namespace)::BlackAndWhiteAdapter"* %0, i64 0, i32 0, i32 1, i32 0
  %18 = load %"class.sksg::ExternalColorFilter"*, %"class.sksg::ExternalColorFilter"** %17, align 8
  %19 = icmp eq %"class.sksg::ExternalColorFilter"* %18, null
  br i1 %19, label %30, label %20

20:                                               ; preds = %16
  %21 = getelementptr inbounds %"class.sksg::ExternalColorFilter", %"class.sksg::ExternalColorFilter"* %18, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %22 = atomicrmw add i32* %21, i32 -1 acq_rel
  %23 = icmp eq i32 %22, 1
  br i1 %23, label %24, label %30

24:                                               ; preds = %20
  %25 = bitcast %"class.sksg::ExternalColorFilter"* %18 to %class.SkRefCntBase*
  %26 = bitcast %"class.sksg::ExternalColorFilter"* %18 to void (%class.SkRefCntBase*)***
  %27 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %26, align 8
  %28 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %27, i64 2
  %29 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %28, align 8
  tail call void %29(%class.SkRefCntBase* nonnull %25) #13
  br label %30

30:                                               ; preds = %24, %20, %16
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVN7skottie8internal27AnimatablePropertyContainerE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %31 = getelementptr inbounds %"class.skottie::internal::(anonymous namespace)::BlackAndWhiteAdapter", %"class.skottie::internal::(anonymous namespace)::BlackAndWhiteAdapter"* %0, i64 0, i32 0, i32 0, i32 2
  %32 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %31, i64 0, i32 0, i32 0
  %33 = load %class.sk_sp.6*, %class.sk_sp.6** %32, align 8
  %34 = icmp eq %class.sk_sp.6* %33, null
  br i1 %34, label %63, label %35

35:                                               ; preds = %30
  %36 = bitcast %class.sk_sp.6* %33 to i8*
  %37 = getelementptr inbounds %"class.skottie::internal::(anonymous namespace)::BlackAndWhiteAdapter", %"class.skottie::internal::(anonymous namespace)::BlackAndWhiteAdapter"* %0, i64 0, i32 0, i32 0, i32 2, i32 0, i32 1
  %38 = load %class.sk_sp.6*, %class.sk_sp.6** %37, align 8
  %39 = icmp eq %class.sk_sp.6* %38, %33
  br i1 %39, label %61, label %40

40:                                               ; preds = %35, %56
  %41 = phi %class.sk_sp.6* [ %42, %56 ], [ %38, %35 ]
  %42 = getelementptr inbounds %class.sk_sp.6, %class.sk_sp.6* %41, i64 -1
  %43 = getelementptr inbounds %class.sk_sp.6, %class.sk_sp.6* %42, i64 0, i32 0
  %44 = load %"class.skottie::internal::Animator"*, %"class.skottie::internal::Animator"** %43, align 8
  %45 = icmp eq %"class.skottie::internal::Animator"* %44, null
  br i1 %45, label %56, label %46

46:                                               ; preds = %40
  %47 = getelementptr inbounds %"class.skottie::internal::Animator", %"class.skottie::internal::Animator"* %44, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %48 = atomicrmw add i32* %47, i32 -1 acq_rel
  %49 = icmp eq i32 %48, 1
  br i1 %49, label %50, label %56

50:                                               ; preds = %46
  %51 = bitcast %"class.skottie::internal::Animator"* %44 to %class.SkRefCntBase*
  %52 = bitcast %"class.skottie::internal::Animator"* %44 to void (%class.SkRefCntBase*)***
  %53 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %52, align 8
  %54 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %53, i64 2
  %55 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %54, align 8
  tail call void %55(%class.SkRefCntBase* nonnull %51) #13
  br label %56

56:                                               ; preds = %50, %46, %40
  %57 = icmp eq %class.sk_sp.6* %42, %33
  br i1 %57, label %58, label %40

58:                                               ; preds = %56
  %59 = bitcast %"class.std::__1::vector"* %31 to i8**
  %60 = load i8*, i8** %59, align 8
  br label %61

61:                                               ; preds = %58, %35
  %62 = phi i8* [ %60, %58 ], [ %36, %35 ]
  store %class.sk_sp.6* %33, %class.sk_sp.6** %37, align 8
  tail call void @_ZdlPv(i8* %62) #12
  br label %63

63:                                               ; preds = %30, %61
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define internal void @_ZN7skottie8internal12_GLOBAL__N_120BlackAndWhiteAdapterD0Ev(%"class.skottie::internal::(anonymous namespace)::BlackAndWhiteAdapter"*) unnamed_addr #4 align 2 {
  %2 = getelementptr inbounds %"class.skottie::internal::(anonymous namespace)::BlackAndWhiteAdapter", %"class.skottie::internal::(anonymous namespace)::BlackAndWhiteAdapter"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVN7skottie8internal12_GLOBAL__N_120BlackAndWhiteAdapterE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.skottie::internal::(anonymous namespace)::BlackAndWhiteAdapter", %"class.skottie::internal::(anonymous namespace)::BlackAndWhiteAdapter"* %0, i64 0, i32 1, i32 0
  %4 = load %class.SkRuntimeEffect*, %class.SkRuntimeEffect** %3, align 8
  %5 = icmp eq %class.SkRuntimeEffect* %4, null
  br i1 %5, label %16, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %class.SkRuntimeEffect, %class.SkRuntimeEffect* %4, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %8 = atomicrmw add i32* %7, i32 -1 acq_rel
  %9 = icmp eq i32 %8, 1
  br i1 %9, label %10, label %16

10:                                               ; preds = %6
  %11 = bitcast %class.SkRuntimeEffect* %4 to %class.SkRefCntBase*
  %12 = bitcast %class.SkRuntimeEffect* %4 to void (%class.SkRefCntBase*)***
  %13 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %12, align 8
  %14 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %13, i64 2
  %15 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %14, align 8
  tail call void %15(%class.SkRefCntBase* nonnull %11) #13
  br label %16

16:                                               ; preds = %10, %6, %1
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVN7skottie8internal22DiscardableAdapterBaseINS0_12_GLOBAL__N_120BlackAndWhiteAdapterEN4sksg19ExternalColorFilterEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %17 = getelementptr inbounds %"class.skottie::internal::(anonymous namespace)::BlackAndWhiteAdapter", %"class.skottie::internal::(anonymous namespace)::BlackAndWhiteAdapter"* %0, i64 0, i32 0, i32 1, i32 0
  %18 = load %"class.sksg::ExternalColorFilter"*, %"class.sksg::ExternalColorFilter"** %17, align 8
  %19 = icmp eq %"class.sksg::ExternalColorFilter"* %18, null
  br i1 %19, label %30, label %20

20:                                               ; preds = %16
  %21 = getelementptr inbounds %"class.sksg::ExternalColorFilter", %"class.sksg::ExternalColorFilter"* %18, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %22 = atomicrmw add i32* %21, i32 -1 acq_rel
  %23 = icmp eq i32 %22, 1
  br i1 %23, label %24, label %30

24:                                               ; preds = %20
  %25 = bitcast %"class.sksg::ExternalColorFilter"* %18 to %class.SkRefCntBase*
  %26 = bitcast %"class.sksg::ExternalColorFilter"* %18 to void (%class.SkRefCntBase*)***
  %27 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %26, align 8
  %28 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %27, i64 2
  %29 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %28, align 8
  tail call void %29(%class.SkRefCntBase* nonnull %25) #13
  br label %30

30:                                               ; preds = %24, %20, %16
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVN7skottie8internal27AnimatablePropertyContainerE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %31 = getelementptr inbounds %"class.skottie::internal::(anonymous namespace)::BlackAndWhiteAdapter", %"class.skottie::internal::(anonymous namespace)::BlackAndWhiteAdapter"* %0, i64 0, i32 0, i32 0, i32 2
  %32 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %31, i64 0, i32 0, i32 0
  %33 = load %class.sk_sp.6*, %class.sk_sp.6** %32, align 8
  %34 = icmp eq %class.sk_sp.6* %33, null
  br i1 %34, label %63, label %35

35:                                               ; preds = %30
  %36 = bitcast %class.sk_sp.6* %33 to i8*
  %37 = getelementptr inbounds %"class.skottie::internal::(anonymous namespace)::BlackAndWhiteAdapter", %"class.skottie::internal::(anonymous namespace)::BlackAndWhiteAdapter"* %0, i64 0, i32 0, i32 0, i32 2, i32 0, i32 1
  %38 = load %class.sk_sp.6*, %class.sk_sp.6** %37, align 8
  %39 = icmp eq %class.sk_sp.6* %38, %33
  br i1 %39, label %61, label %40

40:                                               ; preds = %35, %56
  %41 = phi %class.sk_sp.6* [ %42, %56 ], [ %38, %35 ]
  %42 = getelementptr inbounds %class.sk_sp.6, %class.sk_sp.6* %41, i64 -1
  %43 = getelementptr inbounds %class.sk_sp.6, %class.sk_sp.6* %42, i64 0, i32 0
  %44 = load %"class.skottie::internal::Animator"*, %"class.skottie::internal::Animator"** %43, align 8
  %45 = icmp eq %"class.skottie::internal::Animator"* %44, null
  br i1 %45, label %56, label %46

46:                                               ; preds = %40
  %47 = getelementptr inbounds %"class.skottie::internal::Animator", %"class.skottie::internal::Animator"* %44, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %48 = atomicrmw add i32* %47, i32 -1 acq_rel
  %49 = icmp eq i32 %48, 1
  br i1 %49, label %50, label %56

50:                                               ; preds = %46
  %51 = bitcast %"class.skottie::internal::Animator"* %44 to %class.SkRefCntBase*
  %52 = bitcast %"class.skottie::internal::Animator"* %44 to void (%class.SkRefCntBase*)***
  %53 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %52, align 8
  %54 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %53, i64 2
  %55 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %54, align 8
  tail call void %55(%class.SkRefCntBase* nonnull %51) #13
  br label %56

56:                                               ; preds = %50, %46, %40
  %57 = icmp eq %class.sk_sp.6* %42, %33
  br i1 %57, label %58, label %40

58:                                               ; preds = %56
  %59 = bitcast %"class.std::__1::vector"* %31 to i8**
  %60 = load i8*, i8** %59, align 8
  br label %61

61:                                               ; preds = %58, %35
  %62 = phi i8* [ %60, %58 ], [ %36, %35 ]
  store %class.sk_sp.6* %33, %class.sk_sp.6** %37, align 8
  tail call void @_ZdlPv(i8* %62) #12
  br label %63

63:                                               ; preds = %30, %61
  %64 = bitcast %"class.skottie::internal::(anonymous namespace)::BlackAndWhiteAdapter"* %0 to i8*
  tail call void @_ZdlPv(i8* %64) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK12SkRefCntBase16internal_disposeEv(%class.SkRefCntBase*) unnamed_addr #0 comdat align 2 {
  %2 = icmp eq %class.SkRefCntBase* %0, null
  br i1 %2, label %8, label %3

3:                                                ; preds = %1
  %4 = bitcast %class.SkRefCntBase* %0 to void (%class.SkRefCntBase*)***
  %5 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %4, align 8
  %6 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %5, i64 1
  %7 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %6, align 8
  tail call void %7(%class.SkRefCntBase* nonnull %0) #13
  br label %8

8:                                                ; preds = %3, %1
  ret void
}

declare zeroext i1 @_ZN7skottie8internal27AnimatablePropertyContainer6onSeekEf(%"class.skottie::internal::AnimatablePropertyContainer"*, float) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN7skottie8internal12_GLOBAL__N_120BlackAndWhiteAdapter6onSyncEv(%"class.skottie::internal::(anonymous namespace)::BlackAndWhiteAdapter"* nocapture readonly) unnamed_addr #0 align 2 {
  %2 = alloca %struct.anon, align 16
  %3 = alloca %class.sk_sp.50, align 8
  %4 = alloca %class.sk_sp.87, align 8
  %5 = bitcast %struct.anon* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %5) #13
  %6 = getelementptr inbounds %struct.anon, %struct.anon* %2, i64 0, i32 0, i64 4
  %7 = getelementptr inbounds %struct.anon, %struct.anon* %2, i64 0, i32 0, i64 5
  %8 = getelementptr inbounds %"class.skottie::internal::(anonymous namespace)::BlackAndWhiteAdapter", %"class.skottie::internal::(anonymous namespace)::BlackAndWhiteAdapter"* %0, i64 0, i32 2, i64 0
  %9 = bitcast float* %8 to <4 x float>*
  %10 = load <4 x float>, <4 x float>* %9, align 8
  %11 = fdiv <4 x float> %10, <float 1.000000e+02, float 1.000000e+02, float 1.000000e+02, float 1.000000e+02>
  %12 = bitcast %struct.anon* %2 to <4 x float>*
  store <4 x float> %11, <4 x float>* %12, align 16
  %13 = getelementptr inbounds %"class.skottie::internal::(anonymous namespace)::BlackAndWhiteAdapter", %"class.skottie::internal::(anonymous namespace)::BlackAndWhiteAdapter"* %0, i64 0, i32 2, i64 4
  %14 = load float, float* %13, align 8
  %15 = fdiv float %14, 1.000000e+02
  store float %15, float* %6, align 16
  %16 = getelementptr inbounds %"class.skottie::internal::(anonymous namespace)::BlackAndWhiteAdapter", %"class.skottie::internal::(anonymous namespace)::BlackAndWhiteAdapter"* %0, i64 0, i32 2, i64 5
  %17 = load float, float* %16, align 4
  %18 = fdiv float %17, 1.000000e+02
  store float %18, float* %7, align 4
  %19 = getelementptr inbounds %"class.skottie::internal::(anonymous namespace)::BlackAndWhiteAdapter", %"class.skottie::internal::(anonymous namespace)::BlackAndWhiteAdapter"* %0, i64 0, i32 0, i32 1, i32 0
  %20 = load %"class.sksg::ExternalColorFilter"*, %"class.sksg::ExternalColorFilter"** %19, align 8
  %21 = bitcast %class.sk_sp.50* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %21) #13
  %22 = getelementptr inbounds %"class.skottie::internal::(anonymous namespace)::BlackAndWhiteAdapter", %"class.skottie::internal::(anonymous namespace)::BlackAndWhiteAdapter"* %0, i64 0, i32 1, i32 0
  %23 = load %class.SkRuntimeEffect*, %class.SkRuntimeEffect** %22, align 8
  call void @_ZN6SkData12MakeWithCopyEPKvm(%class.sk_sp.87* nonnull sret %4, i8* nonnull %5, i64 24) #13
  call void @_ZNK15SkRuntimeEffect15makeColorFilterE5sk_spI6SkDataE(%class.sk_sp.50* nonnull sret %3, %class.SkRuntimeEffect* %23, %class.sk_sp.87* nonnull %4) #13
  %24 = getelementptr inbounds %"class.sksg::ExternalColorFilter", %"class.sksg::ExternalColorFilter"* %20, i64 0, i32 1
  %25 = getelementptr inbounds %class.sk_sp.50, %class.sk_sp.50* %24, i64 0, i32 0
  %26 = load %class.SkColorFilter*, %class.SkColorFilter** %25, align 8
  %27 = getelementptr inbounds %class.sk_sp.50, %class.sk_sp.50* %3, i64 0, i32 0
  %28 = load %class.SkColorFilter*, %class.SkColorFilter** %27, align 8
  %29 = icmp eq %class.SkColorFilter* %26, %28
  br i1 %29, label %47, label %30

30:                                               ; preds = %1
  %31 = ptrtoint %class.SkColorFilter* %28 to i64
  store %class.SkColorFilter* null, %class.SkColorFilter** %27, align 8
  %32 = bitcast %class.sk_sp.50* %24 to i64*
  store i64 %31, i64* %32, align 8
  %33 = icmp eq %class.SkColorFilter* %26, null
  br i1 %33, label %44, label %34

34:                                               ; preds = %30
  %35 = getelementptr inbounds %class.SkColorFilter, %class.SkColorFilter* %26, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %36 = atomicrmw add i32* %35, i32 -1 acq_rel
  %37 = icmp eq i32 %36, 1
  br i1 %37, label %38, label %44

38:                                               ; preds = %34
  %39 = bitcast %class.SkColorFilter* %26 to %class.SkRefCntBase*
  %40 = bitcast %class.SkColorFilter* %26 to void (%class.SkRefCntBase*)***
  %41 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %40, align 8
  %42 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %41, i64 2
  %43 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %42, align 8
  call void %43(%class.SkRefCntBase* nonnull %39) #13
  br label %44

44:                                               ; preds = %38, %34, %30
  %45 = bitcast %"class.sksg::ExternalColorFilter"* %20 to %"class.sksg::Node"*
  call void @_ZN4sksg4Node10invalidateEb(%"class.sksg::Node"* %45, i1 zeroext true) #13
  %46 = load %class.SkColorFilter*, %class.SkColorFilter** %27, align 8
  br label %47

47:                                               ; preds = %1, %44
  %48 = phi %class.SkColorFilter* [ %26, %1 ], [ %46, %44 ]
  %49 = icmp eq %class.SkColorFilter* %48, null
  br i1 %49, label %60, label %50

50:                                               ; preds = %47
  %51 = getelementptr inbounds %class.SkColorFilter, %class.SkColorFilter* %48, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %52 = atomicrmw add i32* %51, i32 -1 acq_rel
  %53 = icmp eq i32 %52, 1
  br i1 %53, label %54, label %60

54:                                               ; preds = %50
  %55 = bitcast %class.SkColorFilter* %48 to %class.SkRefCntBase*
  %56 = bitcast %class.SkColorFilter* %48 to void (%class.SkRefCntBase*)***
  %57 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %56, align 8
  %58 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %57, i64 2
  %59 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %58, align 8
  call void %59(%class.SkRefCntBase* nonnull %55) #13
  br label %60

60:                                               ; preds = %47, %50, %54
  %61 = getelementptr inbounds %class.sk_sp.87, %class.sk_sp.87* %4, i64 0, i32 0
  %62 = load %class.SkData*, %class.SkData** %61, align 8
  %63 = icmp eq %class.SkData* %62, null
  br i1 %63, label %70, label %64

64:                                               ; preds = %60
  %65 = getelementptr inbounds %class.SkData, %class.SkData* %62, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %66 = atomicrmw add i32* %65, i32 -1 acq_rel
  %67 = icmp eq i32 %66, 1
  br i1 %67, label %68, label %70

68:                                               ; preds = %64
  call void @_ZN6SkDataD1Ev(%class.SkData* nonnull %62) #13
  %69 = bitcast %class.SkData* %62 to i8*
  call void @_ZN6SkDatadlEPv(i8* nonnull %69) #13
  br label %70

70:                                               ; preds = %60, %64, %68
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %21) #13
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %5) #13
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define internal void @_ZN7skottie8internal22DiscardableAdapterBaseINS0_12_GLOBAL__N_120BlackAndWhiteAdapterEN4sksg19ExternalColorFilterEED2Ev(%"class.skottie::internal::DiscardableAdapterBase"* nocapture) unnamed_addr #4 align 2 {
  %2 = getelementptr inbounds %"class.skottie::internal::DiscardableAdapterBase", %"class.skottie::internal::DiscardableAdapterBase"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVN7skottie8internal22DiscardableAdapterBaseINS0_12_GLOBAL__N_120BlackAndWhiteAdapterEN4sksg19ExternalColorFilterEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.skottie::internal::DiscardableAdapterBase", %"class.skottie::internal::DiscardableAdapterBase"* %0, i64 0, i32 1, i32 0
  %4 = load %"class.sksg::ExternalColorFilter"*, %"class.sksg::ExternalColorFilter"** %3, align 8
  %5 = icmp eq %"class.sksg::ExternalColorFilter"* %4, null
  br i1 %5, label %16, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.sksg::ExternalColorFilter", %"class.sksg::ExternalColorFilter"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %8 = atomicrmw add i32* %7, i32 -1 acq_rel
  %9 = icmp eq i32 %8, 1
  br i1 %9, label %10, label %16

10:                                               ; preds = %6
  %11 = bitcast %"class.sksg::ExternalColorFilter"* %4 to %class.SkRefCntBase*
  %12 = bitcast %"class.sksg::ExternalColorFilter"* %4 to void (%class.SkRefCntBase*)***
  %13 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %12, align 8
  %14 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %13, i64 2
  %15 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %14, align 8
  tail call void %15(%class.SkRefCntBase* nonnull %11) #13
  br label %16

16:                                               ; preds = %1, %6, %10
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVN7skottie8internal27AnimatablePropertyContainerE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %17 = getelementptr inbounds %"class.skottie::internal::DiscardableAdapterBase", %"class.skottie::internal::DiscardableAdapterBase"* %0, i64 0, i32 0, i32 2
  %18 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %17, i64 0, i32 0, i32 0
  %19 = load %class.sk_sp.6*, %class.sk_sp.6** %18, align 8
  %20 = icmp eq %class.sk_sp.6* %19, null
  br i1 %20, label %49, label %21

21:                                               ; preds = %16
  %22 = bitcast %class.sk_sp.6* %19 to i8*
  %23 = getelementptr inbounds %"class.skottie::internal::DiscardableAdapterBase", %"class.skottie::internal::DiscardableAdapterBase"* %0, i64 0, i32 0, i32 2, i32 0, i32 1
  %24 = load %class.sk_sp.6*, %class.sk_sp.6** %23, align 8
  %25 = icmp eq %class.sk_sp.6* %24, %19
  br i1 %25, label %47, label %26

26:                                               ; preds = %21, %42
  %27 = phi %class.sk_sp.6* [ %28, %42 ], [ %24, %21 ]
  %28 = getelementptr inbounds %class.sk_sp.6, %class.sk_sp.6* %27, i64 -1
  %29 = getelementptr inbounds %class.sk_sp.6, %class.sk_sp.6* %28, i64 0, i32 0
  %30 = load %"class.skottie::internal::Animator"*, %"class.skottie::internal::Animator"** %29, align 8
  %31 = icmp eq %"class.skottie::internal::Animator"* %30, null
  br i1 %31, label %42, label %32

32:                                               ; preds = %26
  %33 = getelementptr inbounds %"class.skottie::internal::Animator", %"class.skottie::internal::Animator"* %30, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %34 = atomicrmw add i32* %33, i32 -1 acq_rel
  %35 = icmp eq i32 %34, 1
  br i1 %35, label %36, label %42

36:                                               ; preds = %32
  %37 = bitcast %"class.skottie::internal::Animator"* %30 to %class.SkRefCntBase*
  %38 = bitcast %"class.skottie::internal::Animator"* %30 to void (%class.SkRefCntBase*)***
  %39 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %38, align 8
  %40 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %39, i64 2
  %41 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %40, align 8
  tail call void %41(%class.SkRefCntBase* nonnull %37) #13
  br label %42

42:                                               ; preds = %36, %32, %26
  %43 = icmp eq %class.sk_sp.6* %28, %19
  br i1 %43, label %44, label %26

44:                                               ; preds = %42
  %45 = bitcast %"class.std::__1::vector"* %17 to i8**
  %46 = load i8*, i8** %45, align 8
  br label %47

47:                                               ; preds = %44, %21
  %48 = phi i8* [ %46, %44 ], [ %22, %21 ]
  store %class.sk_sp.6* %19, %class.sk_sp.6** %23, align 8
  tail call void @_ZdlPv(i8* %48) #12
  br label %49

49:                                               ; preds = %16, %47
  ret void
}

; Function Attrs: inlinehint noreturn nounwind ssp uwtable
define internal void @_ZN7skottie8internal22DiscardableAdapterBaseINS0_12_GLOBAL__N_120BlackAndWhiteAdapterEN4sksg19ExternalColorFilterEED0Ev(%"class.skottie::internal::DiscardableAdapterBase"* nocapture readnone) unnamed_addr #5 align 2 {
  tail call void @llvm.trap() #14
  unreachable
}

declare void @__cxa_pure_virtual() unnamed_addr

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #6

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #7

; Function Attrs: nofree nounwind
declare i32 @__cxa_guard_acquire(i64*) local_unnamed_addr #8

declare void @_ZN8SkStringC1EPKc(%class.SkString*, i8*) unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN8SkStringD1Ev(%class.SkString*) unnamed_addr #9

; Function Attrs: nofree nounwind
declare void @__cxa_guard_release(i64*) local_unnamed_addr #8

declare void @_ZN15SkRuntimeEffect18MakeForColorFilterE8SkStringRKNS_7OptionsE(%"struct.SkRuntimeEffect::Result"* sret, %class.SkString*, %"struct.SkRuntimeEffect::Options"* dereferenceable(2)) local_unnamed_addr #3

declare void @_ZN8SkStringC1EOS_(%class.SkString*, %class.SkString* dereferenceable(8)) unnamed_addr #3

declare dereferenceable(8) %"class.skjson::Value"* @_ZN7skottie8internal13EffectBuilder12GetPropValueERKN6skjson10ArrayValueEm(%"class.skjson::ArrayValue"* dereferenceable(8), i64) local_unnamed_addr #3

declare zeroext i1 @_ZN7skottie8internal27AnimatablePropertyContainer4bindIfEEbRKNS0_16AnimationBuilderEPKN6skjson11ObjectValueEPT_(%"class.skottie::internal::AnimatablePropertyContainer"*, %"class.skottie::internal::AnimationBuilder"* dereferenceable(152), %"class.skjson::ObjectValue"*, float*) local_unnamed_addr #3

declare void @_ZNK15SkRuntimeEffect15makeColorFilterE5sk_spI6SkDataE(%class.sk_sp.50* sret, %class.SkRuntimeEffect*, %class.sk_sp.87*) local_unnamed_addr #3

declare void @_ZN6SkData12MakeWithCopyEPKvm(%class.sk_sp.87* sret, i8*, i64) local_unnamed_addr #3

declare void @_ZN4sksg4Node10invalidateEb(%"class.sksg::Node"*, i1 zeroext) local_unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN6SkDataD1Ev(%class.SkData*) unnamed_addr #9

; Function Attrs: nounwind
declare void @_ZN6SkDatadlEPv(i8*) local_unnamed_addr #9

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorI5sk_spIN7skottie8internal8AnimatorEENS_9allocatorIS5_EEE21__push_back_slow_pathIS5_EEvOT_(%"class.std::__1::vector"*, %class.sk_sp.6* dereferenceable(8)) local_unnamed_addr #4 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 1
  %4 = bitcast %class.sk_sp.6** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.std::__1::vector"* %0 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = sub i64 %5, %7
  %9 = ashr exact i64 %8, 3
  %10 = add nsw i64 %9, 1
  %11 = icmp ugt i64 %10, 2305843009213693951
  br i1 %11, label %12, label %14

12:                                               ; preds = %2
  %13 = bitcast %"class.std::__1::vector"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %13) #14
  unreachable

14:                                               ; preds = %2
  %15 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %16 = bitcast %class.sk_sp.6** %15 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = sub i64 %17, %7
  %19 = ashr exact i64 %18, 3
  %20 = icmp ult i64 %19, 1152921504606846975
  br i1 %20, label %21, label %29

21:                                               ; preds = %14
  %22 = ashr exact i64 %18, 2
  %23 = icmp ult i64 %22, %10
  %24 = select i1 %23, i64 %10, i64 %22
  %25 = icmp eq i64 %24, 0
  br i1 %25, label %34, label %26

26:                                               ; preds = %21
  %27 = icmp ugt i64 %24, 2305843009213693951
  br i1 %27, label %28, label %29

28:                                               ; preds = %26
  tail call void @abort() #14
  unreachable

29:                                               ; preds = %14, %26
  %30 = phi i64 [ %24, %26 ], [ 2305843009213693951, %14 ]
  %31 = shl i64 %30, 3
  %32 = tail call i8* @_Znwm(i64 %31) #12
  %33 = bitcast i8* %32 to %class.sk_sp.6*
  br label %34

34:                                               ; preds = %21, %29
  %35 = phi i64 [ %30, %29 ], [ 0, %21 ]
  %36 = phi %class.sk_sp.6* [ %33, %29 ], [ null, %21 ]
  %37 = getelementptr inbounds %class.sk_sp.6, %class.sk_sp.6* %36, i64 %9
  %38 = getelementptr inbounds %class.sk_sp.6, %class.sk_sp.6* %36, i64 %35
  %39 = ptrtoint %class.sk_sp.6* %38 to i64
  %40 = getelementptr inbounds %class.sk_sp.6, %class.sk_sp.6* %1, i64 0, i32 0
  %41 = bitcast %class.sk_sp.6* %1 to i64*
  %42 = load i64, i64* %41, align 8
  store %"class.skottie::internal::Animator"* null, %"class.skottie::internal::Animator"** %40, align 8
  %43 = bitcast %class.sk_sp.6* %37 to i64*
  store i64 %42, i64* %43, align 8
  %44 = getelementptr inbounds %class.sk_sp.6, %class.sk_sp.6* %37, i64 1
  %45 = ptrtoint %class.sk_sp.6* %44 to i64
  %46 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 0
  %47 = load %class.sk_sp.6*, %class.sk_sp.6** %46, align 8
  %48 = ptrtoint %class.sk_sp.6* %47 to i64
  %49 = load %class.sk_sp.6*, %class.sk_sp.6** %3, align 8
  %50 = icmp eq %class.sk_sp.6* %49, %47
  br i1 %50, label %132, label %51

51:                                               ; preds = %34
  %52 = getelementptr %class.sk_sp.6, %class.sk_sp.6* %49, i64 -1, i32 0
  %53 = ptrtoint %"class.skottie::internal::Animator"** %52 to i64
  %54 = sub i64 %53, %48
  %55 = lshr i64 %54, 3
  %56 = add nuw nsw i64 %55, 1
  %57 = and i64 %56, 7
  %58 = icmp eq i64 %57, 0
  br i1 %58, label %71, label %59

59:                                               ; preds = %51, %59
  %60 = phi %class.sk_sp.6* [ %63, %59 ], [ %37, %51 ]
  %61 = phi %class.sk_sp.6* [ %64, %59 ], [ %49, %51 ]
  %62 = phi i64 [ %69, %59 ], [ %57, %51 ]
  %63 = getelementptr inbounds %class.sk_sp.6, %class.sk_sp.6* %60, i64 -1
  %64 = getelementptr inbounds %class.sk_sp.6, %class.sk_sp.6* %61, i64 -1
  %65 = getelementptr inbounds %class.sk_sp.6, %class.sk_sp.6* %64, i64 0, i32 0
  %66 = bitcast %class.sk_sp.6* %64 to i64*
  %67 = load i64, i64* %66, align 8
  store %"class.skottie::internal::Animator"* null, %"class.skottie::internal::Animator"** %65, align 8
  %68 = bitcast %class.sk_sp.6* %63 to i64*
  store i64 %67, i64* %68, align 8
  %69 = add i64 %62, -1
  %70 = icmp eq i64 %69, 0
  br i1 %70, label %71, label %59, !llvm.loop !22

71:                                               ; preds = %59, %51
  %72 = phi %class.sk_sp.6* [ undef, %51 ], [ %63, %59 ]
  %73 = phi %class.sk_sp.6* [ %37, %51 ], [ %63, %59 ]
  %74 = phi %class.sk_sp.6* [ %49, %51 ], [ %64, %59 ]
  %75 = icmp ult i64 %54, 56
  br i1 %75, label %128, label %76

76:                                               ; preds = %71, %76
  %77 = phi %class.sk_sp.6* [ %121, %76 ], [ %73, %71 ]
  %78 = phi %class.sk_sp.6* [ %122, %76 ], [ %74, %71 ]
  %79 = getelementptr inbounds %class.sk_sp.6, %class.sk_sp.6* %77, i64 -1
  %80 = getelementptr inbounds %class.sk_sp.6, %class.sk_sp.6* %78, i64 -1
  %81 = getelementptr inbounds %class.sk_sp.6, %class.sk_sp.6* %80, i64 0, i32 0
  %82 = bitcast %class.sk_sp.6* %80 to i64*
  %83 = load i64, i64* %82, align 8
  store %"class.skottie::internal::Animator"* null, %"class.skottie::internal::Animator"** %81, align 8
  %84 = bitcast %class.sk_sp.6* %79 to i64*
  store i64 %83, i64* %84, align 8
  %85 = getelementptr inbounds %class.sk_sp.6, %class.sk_sp.6* %77, i64 -2
  %86 = getelementptr inbounds %class.sk_sp.6, %class.sk_sp.6* %78, i64 -2
  %87 = getelementptr inbounds %class.sk_sp.6, %class.sk_sp.6* %86, i64 0, i32 0
  %88 = bitcast %class.sk_sp.6* %86 to i64*
  %89 = load i64, i64* %88, align 8
  store %"class.skottie::internal::Animator"* null, %"class.skottie::internal::Animator"** %87, align 8
  %90 = bitcast %class.sk_sp.6* %85 to i64*
  store i64 %89, i64* %90, align 8
  %91 = getelementptr inbounds %class.sk_sp.6, %class.sk_sp.6* %77, i64 -3
  %92 = getelementptr inbounds %class.sk_sp.6, %class.sk_sp.6* %78, i64 -3
  %93 = getelementptr inbounds %class.sk_sp.6, %class.sk_sp.6* %92, i64 0, i32 0
  %94 = bitcast %class.sk_sp.6* %92 to i64*
  %95 = load i64, i64* %94, align 8
  store %"class.skottie::internal::Animator"* null, %"class.skottie::internal::Animator"** %93, align 8
  %96 = bitcast %class.sk_sp.6* %91 to i64*
  store i64 %95, i64* %96, align 8
  %97 = getelementptr inbounds %class.sk_sp.6, %class.sk_sp.6* %77, i64 -4
  %98 = getelementptr inbounds %class.sk_sp.6, %class.sk_sp.6* %78, i64 -4
  %99 = getelementptr inbounds %class.sk_sp.6, %class.sk_sp.6* %98, i64 0, i32 0
  %100 = bitcast %class.sk_sp.6* %98 to i64*
  %101 = load i64, i64* %100, align 8
  store %"class.skottie::internal::Animator"* null, %"class.skottie::internal::Animator"** %99, align 8
  %102 = bitcast %class.sk_sp.6* %97 to i64*
  store i64 %101, i64* %102, align 8
  %103 = getelementptr inbounds %class.sk_sp.6, %class.sk_sp.6* %77, i64 -5
  %104 = getelementptr inbounds %class.sk_sp.6, %class.sk_sp.6* %78, i64 -5
  %105 = getelementptr inbounds %class.sk_sp.6, %class.sk_sp.6* %104, i64 0, i32 0
  %106 = bitcast %class.sk_sp.6* %104 to i64*
  %107 = load i64, i64* %106, align 8
  store %"class.skottie::internal::Animator"* null, %"class.skottie::internal::Animator"** %105, align 8
  %108 = bitcast %class.sk_sp.6* %103 to i64*
  store i64 %107, i64* %108, align 8
  %109 = getelementptr inbounds %class.sk_sp.6, %class.sk_sp.6* %77, i64 -6
  %110 = getelementptr inbounds %class.sk_sp.6, %class.sk_sp.6* %78, i64 -6
  %111 = getelementptr inbounds %class.sk_sp.6, %class.sk_sp.6* %110, i64 0, i32 0
  %112 = bitcast %class.sk_sp.6* %110 to i64*
  %113 = load i64, i64* %112, align 8
  store %"class.skottie::internal::Animator"* null, %"class.skottie::internal::Animator"** %111, align 8
  %114 = bitcast %class.sk_sp.6* %109 to i64*
  store i64 %113, i64* %114, align 8
  %115 = getelementptr inbounds %class.sk_sp.6, %class.sk_sp.6* %77, i64 -7
  %116 = getelementptr inbounds %class.sk_sp.6, %class.sk_sp.6* %78, i64 -7
  %117 = getelementptr inbounds %class.sk_sp.6, %class.sk_sp.6* %116, i64 0, i32 0
  %118 = bitcast %class.sk_sp.6* %116 to i64*
  %119 = load i64, i64* %118, align 8
  store %"class.skottie::internal::Animator"* null, %"class.skottie::internal::Animator"** %117, align 8
  %120 = bitcast %class.sk_sp.6* %115 to i64*
  store i64 %119, i64* %120, align 8
  %121 = getelementptr inbounds %class.sk_sp.6, %class.sk_sp.6* %77, i64 -8
  %122 = getelementptr inbounds %class.sk_sp.6, %class.sk_sp.6* %78, i64 -8
  %123 = getelementptr inbounds %class.sk_sp.6, %class.sk_sp.6* %122, i64 0, i32 0
  %124 = bitcast %class.sk_sp.6* %122 to i64*
  %125 = load i64, i64* %124, align 8
  store %"class.skottie::internal::Animator"* null, %"class.skottie::internal::Animator"** %123, align 8
  %126 = bitcast %class.sk_sp.6* %121 to i64*
  store i64 %125, i64* %126, align 8
  %127 = icmp eq %class.sk_sp.6* %122, %47
  br i1 %127, label %128, label %76

128:                                              ; preds = %76, %71
  %129 = phi %class.sk_sp.6* [ %72, %71 ], [ %121, %76 ]
  %130 = load i64, i64* %6, align 8
  %131 = load %class.sk_sp.6*, %class.sk_sp.6** %3, align 8
  br label %132

132:                                              ; preds = %34, %128
  %133 = phi %class.sk_sp.6* [ %131, %128 ], [ %47, %34 ]
  %134 = phi %class.sk_sp.6* [ %129, %128 ], [ %37, %34 ]
  %135 = phi i64 [ %130, %128 ], [ %48, %34 ]
  %136 = ptrtoint %class.sk_sp.6* %134 to i64
  store i64 %136, i64* %6, align 8
  store i64 %45, i64* %4, align 8
  store i64 %39, i64* %16, align 8
  %137 = inttoptr i64 %135 to %class.sk_sp.6*
  %138 = icmp eq %class.sk_sp.6* %133, %137
  br i1 %138, label %157, label %139

139:                                              ; preds = %132, %155
  %140 = phi %class.sk_sp.6* [ %141, %155 ], [ %133, %132 ]
  %141 = getelementptr inbounds %class.sk_sp.6, %class.sk_sp.6* %140, i64 -1
  %142 = getelementptr inbounds %class.sk_sp.6, %class.sk_sp.6* %141, i64 0, i32 0
  %143 = load %"class.skottie::internal::Animator"*, %"class.skottie::internal::Animator"** %142, align 8
  %144 = icmp eq %"class.skottie::internal::Animator"* %143, null
  br i1 %144, label %155, label %145

145:                                              ; preds = %139
  %146 = getelementptr inbounds %"class.skottie::internal::Animator", %"class.skottie::internal::Animator"* %143, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %147 = atomicrmw add i32* %146, i32 -1 acq_rel
  %148 = icmp eq i32 %147, 1
  br i1 %148, label %149, label %155

149:                                              ; preds = %145
  %150 = bitcast %"class.skottie::internal::Animator"* %143 to %class.SkRefCntBase*
  %151 = bitcast %"class.skottie::internal::Animator"* %143 to void (%class.SkRefCntBase*)***
  %152 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %151, align 8
  %153 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %152, i64 2
  %154 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %153, align 8
  tail call void %154(%class.SkRefCntBase* nonnull %150) #13
  br label %155

155:                                              ; preds = %149, %145, %139
  %156 = icmp eq %class.sk_sp.6* %141, %137
  br i1 %156, label %157, label %139

157:                                              ; preds = %155, %132
  %158 = icmp eq i64 %135, 0
  br i1 %158, label %161, label %159

159:                                              ; preds = %157
  %160 = inttoptr i64 %135 to i8*
  tail call void @_ZdlPv(i8* %160) #12
  br label %161

161:                                              ; preds = %157, %159
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #10

; Function Attrs: noreturn nounwind
declare void @abort() local_unnamed_addr #11

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { inlinehint noreturn nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { cold noreturn nounwind }
attributes #8 = { nofree nounwind }
attributes #9 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #11 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #12 = { builtin nounwind }
attributes #13 = { nounwind }
attributes #14 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!3, !5}
!3 = distinct !{!3, !4, !"_ZN7skottie8internal22DiscardableAdapterBaseINS0_12_GLOBAL__N_120BlackAndWhiteAdapterEN4sksg19ExternalColorFilterEE4MakeIJRKN6skjson10ArrayValueERKNS0_16AnimationBuilderE5sk_spINS4_10RenderNodeEEEEESF_IS3_EDpOT_: argument 0"}
!4 = distinct !{!4, !"_ZN7skottie8internal22DiscardableAdapterBaseINS0_12_GLOBAL__N_120BlackAndWhiteAdapterEN4sksg19ExternalColorFilterEE4MakeIJRKN6skjson10ArrayValueERKNS0_16AnimationBuilderE5sk_spINS4_10RenderNodeEEEEESF_IS3_EDpOT_"}
!5 = distinct !{!5, !6, !"_ZNK7skottie8internal16AnimationBuilder24attachDiscardableAdapterINS0_12_GLOBAL__N_120BlackAndWhiteAdapterEJRKN6skjson10ArrayValueERKS1_5sk_spIN4sksg10RenderNodeEEEEENSt3__15decayIDTclptclsrT_4Makespclsr3stdE7forwardIT0_Efp_EE4nodeEEE4typeEDpOSI_: argument 0"}
!6 = distinct !{!6, !"_ZNK7skottie8internal16AnimationBuilder24attachDiscardableAdapterINS0_12_GLOBAL__N_120BlackAndWhiteAdapterEJRKN6skjson10ArrayValueERKS1_5sk_spIN4sksg10RenderNodeEEEEENSt3__15decayIDTclptclsrT_4Makespclsr3stdE7forwardIT0_Efp_EE4nodeEEE4typeEDpOSI_"}
!7 = !{!3}
!8 = !{!9, !3, !5}
!9 = distinct !{!9, !10, !"_ZN7skottie8internal12_GLOBAL__N_111make_effectEv: argument 0"}
!10 = distinct !{!10, !"_ZN7skottie8internal12_GLOBAL__N_111make_effectEv"}
!11 = !{!"branch_weights", i32 1, i32 1048575}
!12 = !{!9, !3}
!13 = !{!14, !9, !3}
!14 = distinct !{!14, !15, !"_ZN15SkRuntimeEffect18MakeForColorFilterE8SkString: argument 0"}
!15 = distinct !{!15, !"_ZN15SkRuntimeEffect18MakeForColorFilterE8SkString"}
!16 = !{!14, !9, !3, !5}
!17 = !{!18, !9, !3}
!18 = distinct !{!18, !19, !"_Z9sk_ref_spI15SkRuntimeEffectE5sk_spIT_EPKS2_: argument 0"}
!19 = distinct !{!19, !"_Z9sk_ref_spI15SkRuntimeEffectE5sk_spIT_EPKS2_"}
!20 = !{!18, !9}
!21 = !{!5}
!22 = distinct !{!22, !23}
!23 = !{!"llvm.loop.unroll.disable"}
