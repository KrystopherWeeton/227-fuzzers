; ModuleID = '../../v8/src/heap/cppgc/heap-growing.cc'
source_filename = "../../v8/src/heap/cppgc/heap-growing.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.cppgc::internal::HeapGrowing::HeapGrowingImpl" = type <{ %"class.cppgc::internal::StatsCollector::AllocationObserver", %"class.cppgc::internal::GarbageCollector"*, %"class.cppgc::internal::StatsCollector"*, i64, i64, i64, %"struct.cppgc::internal::SingleThreadedHandle", i8, i8, i8, [5 x i8] }>
%"class.cppgc::internal::StatsCollector::AllocationObserver" = type { i32 (...)** }
%"struct.cppgc::internal::SingleThreadedHandle" = type { %"class.std::__1::shared_ptr" }
%"class.std::__1::shared_ptr" = type { i8*, %"class.std::__1::__shared_weak_count"* }
%"class.std::__1::__shared_weak_count" = type { %"class.std::__1::__shared_count", i64 }
%"class.std::__1::__shared_count" = type { i32 (...)**, i64 }
%"class.cppgc::internal::GarbageCollector" = type { i32 (...)** }
%"class.cppgc::internal::StatsCollector" = type { i64, %"class.v8::base::TimeTicks", i64, i64, i64, i64, %"class.std::__1::vector", i8, %"struct.cppgc::internal::StatsCollector::Event", %"struct.cppgc::internal::StatsCollector::Event", %"class.std::__1::unique_ptr", %"class.cppgc::Platform"* }
%"class.v8::base::TimeTicks" = type { %"class.v8::base::time_internal::TimeBase" }
%"class.v8::base::time_internal::TimeBase" = type { i64 }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.cppgc::internal::StatsCollector::AllocationObserver"**, %"class.cppgc::internal::StatsCollector::AllocationObserver"**, %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.cppgc::internal::StatsCollector::AllocationObserver"** }
%"struct.cppgc::internal::StatsCollector::Event" = type { [6 x %"class.v8::base::TimeDelta"], [2 x i32], i64, i8, i8, i64, i64, i64 }
%"class.v8::base::TimeDelta" = type { i64 }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair.1" }
%"class.std::__1::__compressed_pair.1" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"struct.std::__1::__compressed_pair_elem.2" = type { %"class.cppgc::internal::MetricRecorder"* }
%"class.cppgc::internal::MetricRecorder" = type { i32 (...)** }
%"class.cppgc::Platform" = type { i32 (...)** }
%"class.cppgc::internal::HeapGrowing" = type { %"class.std::__1::unique_ptr.4" }
%"class.std::__1::unique_ptr.4" = type { %"class.std::__1::__compressed_pair.5" }
%"class.std::__1::__compressed_pair.5" = type { %"struct.std::__1::__compressed_pair_elem.6" }
%"struct.std::__1::__compressed_pair_elem.6" = type { %"class.cppgc::internal::HeapGrowing::HeapGrowingImpl"* }
%"struct.std::__1::__shared_ptr_emplace" = type <{ %"class.std::__1::__shared_weak_count", %"struct.std::__1::__shared_ptr_emplace<bool, std::__1::allocator<bool> >::_Storage", [7 x i8] }>
%"struct.std::__1::__shared_ptr_emplace<bool, std::__1::allocator<bool> >::_Storage" = type { [1 x i8] }
%"class.std::type_info" = type { i32 (...)**, i8* }

$_ZN5cppgc8internal11HeapGrowing15HeapGrowingImpl28AllocatedObjectSizeDecreasedEm = comdat any

$_ZN5cppgc8internal14StatsCollector18AllocationObserver22AllocatedSizeIncreasedEm = comdat any

$_ZN5cppgc8internal14StatsCollector18AllocationObserver22AllocatedSizeDecreasedEm = comdat any

$_ZNSt3__120__shared_ptr_emplaceIbNS_9allocatorIbEEED2Ev = comdat any

$_ZNSt3__120__shared_ptr_emplaceIbNS_9allocatorIbEEED0Ev = comdat any

$_ZNSt3__120__shared_ptr_emplaceIbNS_9allocatorIbEEE16__on_zero_sharedEv = comdat any

$_ZNSt3__120__shared_ptr_emplaceIbNS_9allocatorIbEEE21__on_zero_shared_weakEv = comdat any

$_ZTVNSt3__120__shared_ptr_emplaceIbNS_9allocatorIbEEEE = comdat any

@_ZTVN5cppgc8internal11HeapGrowing15HeapGrowingImplE = hidden unnamed_addr constant { [7 x i8*] } { [7 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.cppgc::internal::HeapGrowing::HeapGrowingImpl"*, i64)* @_ZN5cppgc8internal11HeapGrowing15HeapGrowingImpl28AllocatedObjectSizeIncreasedEm to i8*), i8* bitcast (void (%"class.cppgc::internal::HeapGrowing::HeapGrowingImpl"*, i64)* @_ZN5cppgc8internal11HeapGrowing15HeapGrowingImpl28AllocatedObjectSizeDecreasedEm to i8*), i8* bitcast (void (%"class.cppgc::internal::HeapGrowing::HeapGrowingImpl"*, i64)* @_ZN5cppgc8internal11HeapGrowing15HeapGrowingImpl24ResetAllocatedObjectSizeEm to i8*), i8* bitcast (void (%"class.cppgc::internal::StatsCollector::AllocationObserver"*, i64)* @_ZN5cppgc8internal14StatsCollector18AllocationObserver22AllocatedSizeIncreasedEm to i8*), i8* bitcast (void (%"class.cppgc::internal::StatsCollector::AllocationObserver"*, i64)* @_ZN5cppgc8internal14StatsCollector18AllocationObserver22AllocatedSizeDecreasedEm to i8*)] }, align 8
@_ZN5cppgc8internal26IncrementalMarkingSchedule23kEstimatedMarkingTimeMsE = external local_unnamed_addr constant double, align 8
@_ZN5cppgc8internal11HeapGrowing14kGrowingFactorE = hidden local_unnamed_addr constant double 1.500000e+00, align 8
@_ZTVNSt3__120__shared_ptr_emplaceIbNS_9allocatorIbEEEE = linkonce_odr hidden unnamed_addr constant { [7 x i8*] } { [7 x i8*] [i8* null, i8* null, i8* bitcast (void (%"struct.std::__1::__shared_ptr_emplace"*)* @_ZNSt3__120__shared_ptr_emplaceIbNS_9allocatorIbEEED2Ev to i8*), i8* bitcast (void (%"struct.std::__1::__shared_ptr_emplace"*)* @_ZNSt3__120__shared_ptr_emplaceIbNS_9allocatorIbEEED0Ev to i8*), i8* bitcast (void (%"struct.std::__1::__shared_ptr_emplace"*)* @_ZNSt3__120__shared_ptr_emplaceIbNS_9allocatorIbEEE16__on_zero_sharedEv to i8*), i8* bitcast (i8* (%"class.std::__1::__shared_weak_count"*, %"class.std::type_info"*)* @_ZNKSt3__119__shared_weak_count13__get_deleterERKSt9type_info to i8*), i8* bitcast (void (%"struct.std::__1::__shared_ptr_emplace"*)* @_ZNSt3__120__shared_ptr_emplaceIbNS_9allocatorIbEEE21__on_zero_shared_weakEv to i8*)] }, comdat, align 8

@_ZN5cppgc8internal11HeapGrowing15HeapGrowingImplC1EPNS0_16GarbageCollectorEPNS0_14StatsCollectorENS_4Heap19ResourceConstraintsENS7_11MarkingTypeENS7_12SweepingTypeE = hidden unnamed_addr alias void (%"class.cppgc::internal::HeapGrowing::HeapGrowingImpl"*, %"class.cppgc::internal::GarbageCollector"*, %"class.cppgc::internal::StatsCollector"*, i64, i8, i8), void (%"class.cppgc::internal::HeapGrowing::HeapGrowingImpl"*, %"class.cppgc::internal::GarbageCollector"*, %"class.cppgc::internal::StatsCollector"*, i64, i8, i8)* @_ZN5cppgc8internal11HeapGrowing15HeapGrowingImplC2EPNS0_16GarbageCollectorEPNS0_14StatsCollectorENS_4Heap19ResourceConstraintsENS7_11MarkingTypeENS7_12SweepingTypeE
@_ZN5cppgc8internal11HeapGrowing15HeapGrowingImplD1Ev = hidden unnamed_addr alias void (%"class.cppgc::internal::HeapGrowing::HeapGrowingImpl"*), void (%"class.cppgc::internal::HeapGrowing::HeapGrowingImpl"*)* @_ZN5cppgc8internal11HeapGrowing15HeapGrowingImplD2Ev
@_ZN5cppgc8internal11HeapGrowingC1EPNS0_16GarbageCollectorEPNS0_14StatsCollectorENS_4Heap19ResourceConstraintsENS6_11MarkingTypeENS6_12SweepingTypeE = hidden unnamed_addr alias void (%"class.cppgc::internal::HeapGrowing"*, %"class.cppgc::internal::GarbageCollector"*, %"class.cppgc::internal::StatsCollector"*, i64, i8, i8), void (%"class.cppgc::internal::HeapGrowing"*, %"class.cppgc::internal::GarbageCollector"*, %"class.cppgc::internal::StatsCollector"*, i64, i8, i8)* @_ZN5cppgc8internal11HeapGrowingC2EPNS0_16GarbageCollectorEPNS0_14StatsCollectorENS_4Heap19ResourceConstraintsENS6_11MarkingTypeENS6_12SweepingTypeE
@_ZN5cppgc8internal11HeapGrowingD1Ev = hidden unnamed_addr alias void (%"class.cppgc::internal::HeapGrowing"*), void (%"class.cppgc::internal::HeapGrowing"*)* @_ZN5cppgc8internal11HeapGrowingD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5cppgc8internal11HeapGrowing15HeapGrowingImplC2EPNS0_16GarbageCollectorEPNS0_14StatsCollectorENS_4Heap19ResourceConstraintsENS7_11MarkingTypeENS7_12SweepingTypeE(%"class.cppgc::internal::HeapGrowing::HeapGrowingImpl"*, %"class.cppgc::internal::GarbageCollector"*, %"class.cppgc::internal::StatsCollector"*, i64, i8 zeroext, i8 zeroext) unnamed_addr #0 align 2 {
  %7 = getelementptr inbounds %"class.cppgc::internal::HeapGrowing::HeapGrowingImpl", %"class.cppgc::internal::HeapGrowing::HeapGrowingImpl"* %0, i64 0, i32 0
  %8 = getelementptr inbounds %"class.cppgc::internal::HeapGrowing::HeapGrowingImpl", %"class.cppgc::internal::HeapGrowing::HeapGrowingImpl"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVN5cppgc8internal11HeapGrowing15HeapGrowingImplE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %8, align 8
  %9 = getelementptr inbounds %"class.cppgc::internal::HeapGrowing::HeapGrowingImpl", %"class.cppgc::internal::HeapGrowing::HeapGrowingImpl"* %0, i64 0, i32 1
  store %"class.cppgc::internal::GarbageCollector"* %1, %"class.cppgc::internal::GarbageCollector"** %9, align 8
  %10 = getelementptr inbounds %"class.cppgc::internal::HeapGrowing::HeapGrowingImpl", %"class.cppgc::internal::HeapGrowing::HeapGrowingImpl"* %0, i64 0, i32 2
  store %"class.cppgc::internal::StatsCollector"* %2, %"class.cppgc::internal::StatsCollector"** %10, align 8
  %11 = getelementptr inbounds %"class.cppgc::internal::HeapGrowing::HeapGrowingImpl", %"class.cppgc::internal::HeapGrowing::HeapGrowingImpl"* %0, i64 0, i32 3
  store i64 1048576, i64* %11, align 8
  %12 = getelementptr inbounds %"class.cppgc::internal::HeapGrowing::HeapGrowingImpl", %"class.cppgc::internal::HeapGrowing::HeapGrowingImpl"* %0, i64 0, i32 4
  %13 = getelementptr inbounds %"class.cppgc::internal::HeapGrowing::HeapGrowingImpl", %"class.cppgc::internal::HeapGrowing::HeapGrowingImpl"* %0, i64 0, i32 5
  %14 = bitcast i64* %12 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %14, i8 0, i64 16, i1 false)
  %15 = tail call i8* @_Znwm(i64 32) #11
  %16 = bitcast i8* %15 to i32 (...)***
  %17 = getelementptr inbounds i8, i8* %15, i64 8
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %17, i8 0, i64 16, i1 false) #12
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVNSt3__120__shared_ptr_emplaceIbNS_9allocatorIbEEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %16, align 8
  %18 = getelementptr inbounds i8, i8* %15, i64 24
  store i8 0, i8* %18, align 1
  %19 = getelementptr inbounds %"class.cppgc::internal::HeapGrowing::HeapGrowingImpl", %"class.cppgc::internal::HeapGrowing::HeapGrowingImpl"* %0, i64 0, i32 6, i32 0, i32 0
  store i8* %18, i8** %19, align 8
  %20 = getelementptr inbounds %"class.cppgc::internal::HeapGrowing::HeapGrowingImpl", %"class.cppgc::internal::HeapGrowing::HeapGrowingImpl"* %0, i64 0, i32 6, i32 0, i32 1
  %21 = bitcast %"class.std::__1::__shared_weak_count"** %20 to i8**
  store i8* %15, i8** %21, align 8
  %22 = getelementptr inbounds %"class.cppgc::internal::HeapGrowing::HeapGrowingImpl", %"class.cppgc::internal::HeapGrowing::HeapGrowingImpl"* %0, i64 0, i32 7
  store i8 0, i8* %22, align 8
  %23 = getelementptr inbounds %"class.cppgc::internal::HeapGrowing::HeapGrowingImpl", %"class.cppgc::internal::HeapGrowing::HeapGrowingImpl"* %0, i64 0, i32 8
  store i8 %4, i8* %23, align 1
  %24 = getelementptr inbounds %"class.cppgc::internal::HeapGrowing::HeapGrowingImpl", %"class.cppgc::internal::HeapGrowing::HeapGrowingImpl"* %0, i64 0, i32 9
  store i8 %5, i8* %24, align 2
  %25 = icmp eq i64 %3, 0
  br i1 %25, label %27, label %26

26:                                               ; preds = %6
  store i64 %3, i64* %11, align 8
  br label %27

27:                                               ; preds = %6, %26
  %28 = phi i64 [ 1048576, %6 ], [ %3, %26 ]
  %29 = uitofp i64 %28 to double
  %30 = fmul double %29, 1.500000e+00
  %31 = fptoui double %30 to i64
  %32 = add i64 %28, 655360
  %33 = icmp ugt i64 %32, %31
  %34 = select i1 %33, i64 %32, i64 %31
  store i64 %34, i64* %12, align 8
  %35 = load double, double* @_ZN5cppgc8internal26IncrementalMarkingSchedule23kEstimatedMarkingTimeMsE, align 8
  %36 = tail call double @_ZNK5cppgc8internal14StatsCollector36GetRecentAllocationSpeedInBytesPerMsEv(%"class.cppgc::internal::StatsCollector"* %2) #12
  %37 = fmul double %35, %36
  %38 = tail call double @llvm.ceil.f64(double %37) #12
  %39 = fptoui double %38 to i64
  %40 = load i64, i64* %12, align 8
  %41 = sub i64 %40, %39
  %42 = sub i64 %40, %28
  %43 = uitofp i64 %42 to double
  %44 = fmul double %43, 9.000000e-01
  %45 = fadd double %44, %29
  %46 = fptoui double %45 to i64
  %47 = fmul double %43, 5.000000e-01
  %48 = fadd double %47, %29
  %49 = fptoui double %48 to i64
  %50 = icmp ult i64 %41, %46
  %51 = select i1 %50, i64 %41, i64 %46
  %52 = icmp ugt i64 %51, %49
  %53 = select i1 %52, i64 %51, i64 %49
  store i64 %53, i64* %13, align 8
  tail call void @_ZN5cppgc8internal14StatsCollector16RegisterObserverEPNS1_18AllocationObserverE(%"class.cppgc::internal::StatsCollector"* %2, %"class.cppgc::internal::StatsCollector::AllocationObserver"* %7) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5cppgc8internal11HeapGrowing15HeapGrowingImpl14ConfigureLimitEm(%"class.cppgc::internal::HeapGrowing::HeapGrowingImpl"* nocapture, i64) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.cppgc::internal::HeapGrowing::HeapGrowingImpl", %"class.cppgc::internal::HeapGrowing::HeapGrowingImpl"* %0, i64 0, i32 3
  %4 = load i64, i64* %3, align 8
  %5 = icmp ugt i64 %4, %1
  %6 = select i1 %5, i64 %4, i64 %1
  %7 = uitofp i64 %6 to double
  %8 = fmul double %7, 1.500000e+00
  %9 = fptoui double %8 to i64
  %10 = add i64 %6, 655360
  %11 = icmp ugt i64 %10, %9
  %12 = select i1 %11, i64 %10, i64 %9
  %13 = getelementptr inbounds %"class.cppgc::internal::HeapGrowing::HeapGrowingImpl", %"class.cppgc::internal::HeapGrowing::HeapGrowingImpl"* %0, i64 0, i32 4
  store i64 %12, i64* %13, align 8
  %14 = load double, double* @_ZN5cppgc8internal26IncrementalMarkingSchedule23kEstimatedMarkingTimeMsE, align 8
  %15 = getelementptr inbounds %"class.cppgc::internal::HeapGrowing::HeapGrowingImpl", %"class.cppgc::internal::HeapGrowing::HeapGrowingImpl"* %0, i64 0, i32 2
  %16 = load %"class.cppgc::internal::StatsCollector"*, %"class.cppgc::internal::StatsCollector"** %15, align 8
  %17 = tail call double @_ZNK5cppgc8internal14StatsCollector36GetRecentAllocationSpeedInBytesPerMsEv(%"class.cppgc::internal::StatsCollector"* %16) #12
  %18 = fmul double %14, %17
  %19 = tail call double @llvm.ceil.f64(double %18)
  %20 = fptoui double %19 to i64
  %21 = load i64, i64* %13, align 8
  %22 = sub i64 %21, %20
  %23 = sub i64 %21, %6
  %24 = uitofp i64 %23 to double
  %25 = fmul double %24, 9.000000e-01
  %26 = fadd double %25, %7
  %27 = fptoui double %26 to i64
  %28 = fmul double %24, 5.000000e-01
  %29 = fadd double %28, %7
  %30 = fptoui double %29 to i64
  %31 = icmp ult i64 %22, %27
  %32 = select i1 %31, i64 %22, i64 %27
  %33 = icmp ugt i64 %32, %30
  %34 = select i1 %33, i64 %32, i64 %30
  %35 = getelementptr inbounds %"class.cppgc::internal::HeapGrowing::HeapGrowingImpl", %"class.cppgc::internal::HeapGrowing::HeapGrowingImpl"* %0, i64 0, i32 5
  store i64 %34, i64* %35, align 8
  ret void
}

declare void @_ZN5cppgc8internal14StatsCollector16RegisterObserverEPNS1_18AllocationObserverE(%"class.cppgc::internal::StatsCollector"*, %"class.cppgc::internal::StatsCollector::AllocationObserver"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5cppgc8internal11HeapGrowing15HeapGrowingImplD2Ev(%"class.cppgc::internal::HeapGrowing::HeapGrowingImpl"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.cppgc::internal::HeapGrowing::HeapGrowingImpl", %"class.cppgc::internal::HeapGrowing::HeapGrowingImpl"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVN5cppgc8internal11HeapGrowing15HeapGrowingImplE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.cppgc::internal::HeapGrowing::HeapGrowingImpl", %"class.cppgc::internal::HeapGrowing::HeapGrowingImpl"* %0, i64 0, i32 2
  %4 = load %"class.cppgc::internal::StatsCollector"*, %"class.cppgc::internal::StatsCollector"** %3, align 8
  %5 = getelementptr inbounds %"class.cppgc::internal::HeapGrowing::HeapGrowingImpl", %"class.cppgc::internal::HeapGrowing::HeapGrowingImpl"* %0, i64 0, i32 0
  tail call void @_ZN5cppgc8internal14StatsCollector18UnregisterObserverEPNS1_18AllocationObserverE(%"class.cppgc::internal::StatsCollector"* %4, %"class.cppgc::internal::StatsCollector::AllocationObserver"* %5) #12
  %6 = getelementptr inbounds %"class.cppgc::internal::HeapGrowing::HeapGrowingImpl", %"class.cppgc::internal::HeapGrowing::HeapGrowingImpl"* %0, i64 0, i32 6, i32 0, i32 1
  %7 = load %"class.std::__1::__shared_weak_count"*, %"class.std::__1::__shared_weak_count"** %6, align 8
  %8 = icmp eq %"class.std::__1::__shared_weak_count"* %7, null
  br i1 %8, label %19, label %9

9:                                                ; preds = %1
  %10 = getelementptr inbounds %"class.std::__1::__shared_weak_count", %"class.std::__1::__shared_weak_count"* %7, i64 0, i32 0, i32 1
  %11 = atomicrmw add i64* %10, i64 -1 acq_rel
  %12 = icmp eq i64 %11, 0
  br i1 %12, label %13, label %19

13:                                               ; preds = %9
  %14 = getelementptr inbounds %"class.std::__1::__shared_weak_count", %"class.std::__1::__shared_weak_count"* %7, i64 0, i32 0
  %15 = bitcast %"class.std::__1::__shared_weak_count"* %7 to void (%"class.std::__1::__shared_count"*)***
  %16 = load void (%"class.std::__1::__shared_count"*)**, void (%"class.std::__1::__shared_count"*)*** %15, align 8
  %17 = getelementptr inbounds void (%"class.std::__1::__shared_count"*)*, void (%"class.std::__1::__shared_count"*)** %16, i64 2
  %18 = load void (%"class.std::__1::__shared_count"*)*, void (%"class.std::__1::__shared_count"*)** %17, align 8
  tail call void %18(%"class.std::__1::__shared_count"* %14) #12
  tail call void @_ZNSt3__119__shared_weak_count14__release_weakEv(%"class.std::__1::__shared_weak_count"* nonnull %7) #12
  br label %19

19:                                               ; preds = %1, %9, %13
  ret void
}

declare void @_ZN5cppgc8internal14StatsCollector18UnregisterObserverEPNS1_18AllocationObserverE(%"class.cppgc::internal::StatsCollector"*, %"class.cppgc::internal::StatsCollector::AllocationObserver"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5cppgc8internal11HeapGrowing15HeapGrowingImpl28AllocatedObjectSizeIncreasedEm(%"class.cppgc::internal::HeapGrowing::HeapGrowingImpl"* nocapture readonly, i64) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.cppgc::internal::HeapGrowing::HeapGrowingImpl", %"class.cppgc::internal::HeapGrowing::HeapGrowingImpl"* %0, i64 0, i32 7
  %4 = load i8, i8* %3, align 8, !range !2
  %5 = icmp eq i8 %4, 0
  br i1 %5, label %6, label %44

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.cppgc::internal::HeapGrowing::HeapGrowingImpl", %"class.cppgc::internal::HeapGrowing::HeapGrowingImpl"* %0, i64 0, i32 2
  %8 = load %"class.cppgc::internal::StatsCollector"*, %"class.cppgc::internal::StatsCollector"** %7, align 8
  %9 = tail call i64 @_ZNK5cppgc8internal14StatsCollector21allocated_object_sizeEv(%"class.cppgc::internal::StatsCollector"* %8) #12
  %10 = getelementptr inbounds %"class.cppgc::internal::HeapGrowing::HeapGrowingImpl", %"class.cppgc::internal::HeapGrowing::HeapGrowingImpl"* %0, i64 0, i32 4
  %11 = load i64, i64* %10, align 8
  %12 = icmp ugt i64 %9, %11
  br i1 %12, label %13, label %23

13:                                               ; preds = %6
  %14 = getelementptr inbounds %"class.cppgc::internal::HeapGrowing::HeapGrowingImpl", %"class.cppgc::internal::HeapGrowing::HeapGrowingImpl"* %0, i64 0, i32 1
  %15 = load %"class.cppgc::internal::GarbageCollector"*, %"class.cppgc::internal::GarbageCollector"** %14, align 8
  %16 = getelementptr inbounds %"class.cppgc::internal::HeapGrowing::HeapGrowingImpl", %"class.cppgc::internal::HeapGrowing::HeapGrowingImpl"* %0, i64 0, i32 9
  %17 = load i8, i8* %16, align 2
  %18 = zext i8 %17 to i32
  %19 = shl nuw nsw i32 %18, 8
  %20 = bitcast %"class.cppgc::internal::GarbageCollector"* %15 to void (%"class.cppgc::internal::GarbageCollector"*, i64, i32)***
  %21 = load void (%"class.cppgc::internal::GarbageCollector"*, i64, i32)**, void (%"class.cppgc::internal::GarbageCollector"*, i64, i32)*** %20, align 8
  %22 = load void (%"class.cppgc::internal::GarbageCollector"*, i64, i32)*, void (%"class.cppgc::internal::GarbageCollector"*, i64, i32)** %21, align 8
  tail call void %22(%"class.cppgc::internal::GarbageCollector"* %15, i64 1, i32 %19) #12
  br label %44

23:                                               ; preds = %6
  %24 = getelementptr inbounds %"class.cppgc::internal::HeapGrowing::HeapGrowingImpl", %"class.cppgc::internal::HeapGrowing::HeapGrowingImpl"* %0, i64 0, i32 5
  %25 = load i64, i64* %24, align 8
  %26 = icmp ugt i64 %9, %25
  br i1 %26, label %27, label %44

27:                                               ; preds = %23
  %28 = getelementptr inbounds %"class.cppgc::internal::HeapGrowing::HeapGrowingImpl", %"class.cppgc::internal::HeapGrowing::HeapGrowingImpl"* %0, i64 0, i32 8
  %29 = load i8, i8* %28, align 1
  %30 = icmp eq i8 %29, 0
  br i1 %30, label %44, label %31

31:                                               ; preds = %27
  %32 = getelementptr inbounds %"class.cppgc::internal::HeapGrowing::HeapGrowingImpl", %"class.cppgc::internal::HeapGrowing::HeapGrowingImpl"* %0, i64 0, i32 1
  %33 = load %"class.cppgc::internal::GarbageCollector"*, %"class.cppgc::internal::GarbageCollector"** %32, align 8
  %34 = getelementptr inbounds %"class.cppgc::internal::HeapGrowing::HeapGrowingImpl", %"class.cppgc::internal::HeapGrowing::HeapGrowingImpl"* %0, i64 0, i32 9
  %35 = load i8, i8* %34, align 2
  %36 = zext i8 %35 to i32
  %37 = shl nuw nsw i32 %36, 8
  %38 = zext i8 %29 to i32
  %39 = or i32 %37, %38
  %40 = bitcast %"class.cppgc::internal::GarbageCollector"* %33 to void (%"class.cppgc::internal::GarbageCollector"*, i64, i32)***
  %41 = load void (%"class.cppgc::internal::GarbageCollector"*, i64, i32)**, void (%"class.cppgc::internal::GarbageCollector"*, i64, i32)*** %40, align 8
  %42 = getelementptr inbounds void (%"class.cppgc::internal::GarbageCollector"*, i64, i32)*, void (%"class.cppgc::internal::GarbageCollector"*, i64, i32)** %41, i64 1
  %43 = load void (%"class.cppgc::internal::GarbageCollector"*, i64, i32)*, void (%"class.cppgc::internal::GarbageCollector"*, i64, i32)** %42, align 8
  tail call void %43(%"class.cppgc::internal::GarbageCollector"* %33, i64 1, i32 %39) #12
  br label %44

44:                                               ; preds = %27, %23, %31, %13, %2
  ret void
}

declare i64 @_ZNK5cppgc8internal14StatsCollector21allocated_object_sizeEv(%"class.cppgc::internal::StatsCollector"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5cppgc8internal11HeapGrowing15HeapGrowingImpl24ResetAllocatedObjectSizeEm(%"class.cppgc::internal::HeapGrowing::HeapGrowingImpl"* nocapture, i64) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.cppgc::internal::HeapGrowing::HeapGrowingImpl", %"class.cppgc::internal::HeapGrowing::HeapGrowingImpl"* %0, i64 0, i32 3
  %4 = load i64, i64* %3, align 8
  %5 = icmp ugt i64 %4, %1
  %6 = select i1 %5, i64 %4, i64 %1
  %7 = uitofp i64 %6 to double
  %8 = fmul double %7, 1.500000e+00
  %9 = fptoui double %8 to i64
  %10 = add i64 %6, 655360
  %11 = icmp ugt i64 %10, %9
  %12 = select i1 %11, i64 %10, i64 %9
  %13 = getelementptr inbounds %"class.cppgc::internal::HeapGrowing::HeapGrowingImpl", %"class.cppgc::internal::HeapGrowing::HeapGrowingImpl"* %0, i64 0, i32 4
  store i64 %12, i64* %13, align 8
  %14 = load double, double* @_ZN5cppgc8internal26IncrementalMarkingSchedule23kEstimatedMarkingTimeMsE, align 8
  %15 = getelementptr inbounds %"class.cppgc::internal::HeapGrowing::HeapGrowingImpl", %"class.cppgc::internal::HeapGrowing::HeapGrowingImpl"* %0, i64 0, i32 2
  %16 = load %"class.cppgc::internal::StatsCollector"*, %"class.cppgc::internal::StatsCollector"** %15, align 8
  %17 = tail call double @_ZNK5cppgc8internal14StatsCollector36GetRecentAllocationSpeedInBytesPerMsEv(%"class.cppgc::internal::StatsCollector"* %16) #12
  %18 = fmul double %14, %17
  %19 = tail call double @llvm.ceil.f64(double %18) #12
  %20 = fptoui double %19 to i64
  %21 = load i64, i64* %13, align 8
  %22 = sub i64 %21, %20
  %23 = sub i64 %21, %6
  %24 = uitofp i64 %23 to double
  %25 = fmul double %24, 9.000000e-01
  %26 = fadd double %25, %7
  %27 = fptoui double %26 to i64
  %28 = fmul double %24, 5.000000e-01
  %29 = fadd double %28, %7
  %30 = fptoui double %29 to i64
  %31 = icmp ult i64 %22, %27
  %32 = select i1 %31, i64 %22, i64 %27
  %33 = icmp ugt i64 %32, %30
  %34 = select i1 %33, i64 %32, i64 %30
  %35 = getelementptr inbounds %"class.cppgc::internal::HeapGrowing::HeapGrowingImpl", %"class.cppgc::internal::HeapGrowing::HeapGrowingImpl"* %0, i64 0, i32 5
  store i64 %34, i64* %35, align 8
  ret void
}

declare double @_ZNK5cppgc8internal14StatsCollector36GetRecentAllocationSpeedInBytesPerMsEv(%"class.cppgc::internal::StatsCollector"*) local_unnamed_addr #1

; Function Attrs: nounwind readnone speculatable
declare double @llvm.ceil.f64(double) #2

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN5cppgc8internal11HeapGrowing15HeapGrowingImpl17DisableForTestingEv(%"class.cppgc::internal::HeapGrowing::HeapGrowingImpl"* nocapture) local_unnamed_addr #3 align 2 {
  %2 = getelementptr inbounds %"class.cppgc::internal::HeapGrowing::HeapGrowingImpl", %"class.cppgc::internal::HeapGrowing::HeapGrowingImpl"* %0, i64 0, i32 7
  store i8 1, i8* %2, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5cppgc8internal11HeapGrowingC2EPNS0_16GarbageCollectorEPNS0_14StatsCollectorENS_4Heap19ResourceConstraintsENS6_11MarkingTypeENS6_12SweepingTypeE(%"class.cppgc::internal::HeapGrowing"* nocapture, %"class.cppgc::internal::GarbageCollector"*, %"class.cppgc::internal::StatsCollector"*, i64, i8 zeroext, i8 zeroext) unnamed_addr #0 align 2 {
  %7 = tail call i8* @_Znwm(i64 72) #11
  %8 = bitcast i8* %7 to %"class.cppgc::internal::HeapGrowing::HeapGrowingImpl"*
  tail call void @_ZN5cppgc8internal11HeapGrowing15HeapGrowingImplC2EPNS0_16GarbageCollectorEPNS0_14StatsCollectorENS_4Heap19ResourceConstraintsENS7_11MarkingTypeENS7_12SweepingTypeE(%"class.cppgc::internal::HeapGrowing::HeapGrowingImpl"* nonnull %8, %"class.cppgc::internal::GarbageCollector"* %1, %"class.cppgc::internal::StatsCollector"* %2, i64 %3, i8 zeroext %4, i8 zeroext %5) #12
  %9 = bitcast %"class.cppgc::internal::HeapGrowing"* %0 to i8**
  store i8* %7, i8** %9, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5cppgc8internal11HeapGrowingD2Ev(%"class.cppgc::internal::HeapGrowing"* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.cppgc::internal::HeapGrowing", %"class.cppgc::internal::HeapGrowing"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %3 = load %"class.cppgc::internal::HeapGrowing::HeapGrowingImpl"*, %"class.cppgc::internal::HeapGrowing::HeapGrowingImpl"** %2, align 8
  store %"class.cppgc::internal::HeapGrowing::HeapGrowingImpl"* null, %"class.cppgc::internal::HeapGrowing::HeapGrowingImpl"** %2, align 8
  %4 = icmp eq %"class.cppgc::internal::HeapGrowing::HeapGrowingImpl"* %3, null
  br i1 %4, label %25, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.cppgc::internal::HeapGrowing::HeapGrowingImpl", %"class.cppgc::internal::HeapGrowing::HeapGrowingImpl"* %3, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVN5cppgc8internal11HeapGrowing15HeapGrowingImplE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %6, align 8
  %7 = getelementptr inbounds %"class.cppgc::internal::HeapGrowing::HeapGrowingImpl", %"class.cppgc::internal::HeapGrowing::HeapGrowingImpl"* %3, i64 0, i32 2
  %8 = load %"class.cppgc::internal::StatsCollector"*, %"class.cppgc::internal::StatsCollector"** %7, align 8
  %9 = getelementptr inbounds %"class.cppgc::internal::HeapGrowing::HeapGrowingImpl", %"class.cppgc::internal::HeapGrowing::HeapGrowingImpl"* %3, i64 0, i32 0
  tail call void @_ZN5cppgc8internal14StatsCollector18UnregisterObserverEPNS1_18AllocationObserverE(%"class.cppgc::internal::StatsCollector"* %8, %"class.cppgc::internal::StatsCollector::AllocationObserver"* %9) #12
  %10 = getelementptr inbounds %"class.cppgc::internal::HeapGrowing::HeapGrowingImpl", %"class.cppgc::internal::HeapGrowing::HeapGrowingImpl"* %3, i64 0, i32 6, i32 0, i32 1
  %11 = load %"class.std::__1::__shared_weak_count"*, %"class.std::__1::__shared_weak_count"** %10, align 8
  %12 = icmp eq %"class.std::__1::__shared_weak_count"* %11, null
  br i1 %12, label %23, label %13

13:                                               ; preds = %5
  %14 = getelementptr inbounds %"class.std::__1::__shared_weak_count", %"class.std::__1::__shared_weak_count"* %11, i64 0, i32 0, i32 1
  %15 = atomicrmw add i64* %14, i64 -1 acq_rel
  %16 = icmp eq i64 %15, 0
  br i1 %16, label %17, label %23

17:                                               ; preds = %13
  %18 = getelementptr inbounds %"class.std::__1::__shared_weak_count", %"class.std::__1::__shared_weak_count"* %11, i64 0, i32 0
  %19 = bitcast %"class.std::__1::__shared_weak_count"* %11 to void (%"class.std::__1::__shared_count"*)***
  %20 = load void (%"class.std::__1::__shared_count"*)**, void (%"class.std::__1::__shared_count"*)*** %19, align 8
  %21 = getelementptr inbounds void (%"class.std::__1::__shared_count"*)*, void (%"class.std::__1::__shared_count"*)** %20, i64 2
  %22 = load void (%"class.std::__1::__shared_count"*)*, void (%"class.std::__1::__shared_count"*)** %21, align 8
  tail call void %22(%"class.std::__1::__shared_count"* %18) #12
  tail call void @_ZNSt3__119__shared_weak_count14__release_weakEv(%"class.std::__1::__shared_weak_count"* nonnull %11) #12
  br label %23

23:                                               ; preds = %17, %13, %5
  %24 = bitcast %"class.cppgc::internal::HeapGrowing::HeapGrowingImpl"* %3 to i8*
  tail call void @_ZdlPv(i8* %24) #11
  br label %25

25:                                               ; preds = %1, %23
  ret void
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i64 @_ZNK5cppgc8internal11HeapGrowing19limit_for_atomic_gcEv(%"class.cppgc::internal::HeapGrowing"* nocapture readonly) local_unnamed_addr #4 align 2 {
  %2 = getelementptr inbounds %"class.cppgc::internal::HeapGrowing", %"class.cppgc::internal::HeapGrowing"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %3 = load %"class.cppgc::internal::HeapGrowing::HeapGrowingImpl"*, %"class.cppgc::internal::HeapGrowing::HeapGrowingImpl"** %2, align 8
  %4 = getelementptr inbounds %"class.cppgc::internal::HeapGrowing::HeapGrowingImpl", %"class.cppgc::internal::HeapGrowing::HeapGrowingImpl"* %3, i64 0, i32 4
  %5 = load i64, i64* %4, align 8
  ret i64 %5
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i64 @_ZNK5cppgc8internal11HeapGrowing24limit_for_incremental_gcEv(%"class.cppgc::internal::HeapGrowing"* nocapture readonly) local_unnamed_addr #4 align 2 {
  %2 = getelementptr inbounds %"class.cppgc::internal::HeapGrowing", %"class.cppgc::internal::HeapGrowing"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %3 = load %"class.cppgc::internal::HeapGrowing::HeapGrowingImpl"*, %"class.cppgc::internal::HeapGrowing::HeapGrowingImpl"** %2, align 8
  %4 = getelementptr inbounds %"class.cppgc::internal::HeapGrowing::HeapGrowingImpl", %"class.cppgc::internal::HeapGrowing::HeapGrowingImpl"* %3, i64 0, i32 5
  %5 = load i64, i64* %4, align 8
  ret i64 %5
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN5cppgc8internal11HeapGrowing17DisableForTestingEv(%"class.cppgc::internal::HeapGrowing"* nocapture readonly) local_unnamed_addr #5 align 2 {
  %2 = getelementptr inbounds %"class.cppgc::internal::HeapGrowing", %"class.cppgc::internal::HeapGrowing"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %3 = load %"class.cppgc::internal::HeapGrowing::HeapGrowingImpl"*, %"class.cppgc::internal::HeapGrowing::HeapGrowingImpl"** %2, align 8
  %4 = getelementptr inbounds %"class.cppgc::internal::HeapGrowing::HeapGrowingImpl", %"class.cppgc::internal::HeapGrowing::HeapGrowingImpl"* %3, i64 0, i32 7
  store i8 1, i8* %4, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5cppgc8internal11HeapGrowing15HeapGrowingImpl28AllocatedObjectSizeDecreasedEm(%"class.cppgc::internal::HeapGrowing::HeapGrowingImpl"*, i64) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5cppgc8internal14StatsCollector18AllocationObserver22AllocatedSizeIncreasedEm(%"class.cppgc::internal::StatsCollector::AllocationObserver"*, i64) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5cppgc8internal14StatsCollector18AllocationObserver22AllocatedSizeDecreasedEm(%"class.cppgc::internal::StatsCollector::AllocationObserver"*, i64) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #6

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__120__shared_ptr_emplaceIbNS_9allocatorIbEEED2Ev(%"struct.std::__1::__shared_ptr_emplace"*) unnamed_addr #7 comdat align 2 {
  %2 = getelementptr inbounds %"struct.std::__1::__shared_ptr_emplace", %"struct.std::__1::__shared_ptr_emplace"* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVNSt3__120__shared_ptr_emplaceIbNS_9allocatorIbEEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"struct.std::__1::__shared_ptr_emplace", %"struct.std::__1::__shared_ptr_emplace"* %0, i64 0, i32 0
  tail call void @_ZNSt3__119__shared_weak_countD2Ev(%"class.std::__1::__shared_weak_count"* %3) #12
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__120__shared_ptr_emplaceIbNS_9allocatorIbEEED0Ev(%"struct.std::__1::__shared_ptr_emplace"*) unnamed_addr #7 comdat align 2 {
  %2 = getelementptr inbounds %"struct.std::__1::__shared_ptr_emplace", %"struct.std::__1::__shared_ptr_emplace"* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVNSt3__120__shared_ptr_emplaceIbNS_9allocatorIbEEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"struct.std::__1::__shared_ptr_emplace", %"struct.std::__1::__shared_ptr_emplace"* %0, i64 0, i32 0
  tail call void @_ZNSt3__119__shared_weak_countD2Ev(%"class.std::__1::__shared_weak_count"* %3) #12
  %4 = bitcast %"struct.std::__1::__shared_ptr_emplace"* %0 to i8*
  tail call void @_ZdlPv(i8* %4) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__120__shared_ptr_emplaceIbNS_9allocatorIbEEE16__on_zero_sharedEv(%"struct.std::__1::__shared_ptr_emplace"*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind
declare i8* @_ZNKSt3__119__shared_weak_count13__get_deleterERKSt9type_info(%"class.std::__1::__shared_weak_count"*, %"class.std::type_info"* dereferenceable(16)) unnamed_addr #8

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__120__shared_ptr_emplaceIbNS_9allocatorIbEEE21__on_zero_shared_weakEv(%"struct.std::__1::__shared_ptr_emplace"*) unnamed_addr #0 comdat align 2 {
  %2 = bitcast %"struct.std::__1::__shared_ptr_emplace"* %0 to i8*
  tail call void @_ZdlPv(i8* %2) #11
  ret void
}

; Function Attrs: nounwind
declare void @_ZNSt3__119__shared_weak_countD2Ev(%"class.std::__1::__shared_weak_count"*) unnamed_addr #8

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #9

; Function Attrs: nounwind
declare void @_ZNSt3__119__shared_weak_count14__release_weakEv(%"class.std::__1::__shared_weak_count"*) local_unnamed_addr #8

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #10

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind readnone speculatable }
attributes #3 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nofree norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { argmemonly nounwind }
attributes #11 = { builtin nounwind }
attributes #12 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
