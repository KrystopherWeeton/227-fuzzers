; ModuleID = '../../third_party/blink/renderer/core/svg/svg_animate_motion_element.cc'
source_filename = "../../third_party/blink/renderer/core/svg/svg_animate_motion_element.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.blink::SVGQualifiedName" = type { %"class.blink::QualifiedName" }
%"class.blink::QualifiedName" = type { %class.scoped_refptr }
%class.scoped_refptr = type { %"class.blink::QualifiedName::QualifiedNameImpl"* }
%"class.blink::QualifiedName::QualifiedNameImpl" = type { %"class.WTF::RefCounted", i32, %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.WTF::AtomicString" }
%"class.WTF::RefCounted" = type { %"class.base::RefCounted" }
%"class.base::RefCounted" = type { %"class.base::subtle::RefCountedBase" }
%"class.base::subtle::RefCountedBase" = type { i32 }
%"class.WTF::AtomicString" = type { %"class.WTF::String" }
%"class.WTF::String" = type { %class.scoped_refptr.6 }
%class.scoped_refptr.6 = type { %"class.WTF::StringImpl"* }
%"class.WTF::StringImpl" = type { i32, i32, %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.7" }
%"struct.std::__1::__atomic_base.7" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.WTF::StaticSingleton" = type { %"class.WTF::StaticSingleton<const WTF::AtomicString>::InstanceStorage" }
%"class.WTF::StaticSingleton<const WTF::AtomicString>::InstanceStorage" = type { [8 x i8] }
%"struct.blink::WrapperTypeInfo" = type { i16, void (%"class.v8::Isolate"*, %"class.blink::DOMWrapperWorld"*, %"class.v8::Template"*)*, void (%"class.v8::Context"*, %"class.blink::DOMWrapperWorld"*, %"class.v8::Object"*, %"class.v8::Object"*, %"class.v8::Object"*, %"class.v8::Template"*, i64)*, i8*, %"struct.blink::WrapperTypeInfo"*, i8 }
%"class.v8::Isolate" = type { i8 }
%"class.blink::DOMWrapperWorld" = type opaque
%"class.v8::Template" = type { i8 }
%"class.v8::Context" = type { i8 }
%"class.v8::Object" = type { i8 }
%"class.blink::SVGAnimateMotionElement" = type { %"class.blink::SVGAnimationElement", %"class.blink::FloatPoint", %"class.blink::FloatPoint", %"class.blink::FloatPoint", %"class.blink::Path", %"class.blink::Path" }
%"class.blink::SVGAnimationElement" = type { %"class.blink::SVGSMILElement.base", i8, i8, i8, %"class.WTF::Vector.57", %"class.WTF::Vector.62", %"class.WTF::Vector.62", %"class.WTF::Vector.62", %"class.WTF::Vector.67", %"class.WTF::String", %"class.WTF::String", i32, i32 }
%"class.blink::SVGSMILElement.base" = type <{ %"class.blink::SVGElement", %"class.blink::SVGTests", %"class.blink::Member.32", %"class.blink::Member.34", %"class.blink::HeapVector", i8, i8, i8, i8, [4 x i8], %"class.blink::HeapHashSet.43", %"class.blink::SMILInstanceTimeList", %"class.blink::SMILInstanceTimeList", %"struct.blink::SMILInterval", %"struct.blink::SMILInterval", i8, [3 x i8], %"struct.blink::SVGSMILElement::ProgressState", [4 x i8], %"class.blink::Member.55", i32, i32, %"class.blink::SMILTime", %"class.blink::SMILTime", %"class.blink::SMILRepeatCount", %"class.blink::SMILTime", %"class.blink::SMILTime", i8, i8, i8 }>
%"class.blink::SVGElement" = type { %"class.blink::Element", %"class.blink::HeapHashSet", %"class.blink::HeapHashMap", %"class.blink::Member.26", %"class.blink::Member.28" }
%"class.blink::Element" = type { %"class.blink::ContainerNode", %"class.blink::Animatable", %"class.blink::QualifiedName", %"class.blink::Member.8" }
%"class.blink::ContainerNode" = type { %"class.blink::Node", %"class.blink::Member", %"class.blink::Member" }
%"class.blink::Node" = type { %"class.blink::EventTarget", i32, %"class.blink::Member", %"class.blink::Member.0", %"class.blink::Member", %"class.blink::Member", %"class.blink::Member.2" }
%"class.blink::EventTarget" = type { %"class.blink::ScriptWrappable" }
%"class.blink::ScriptWrappable" = type { %"class.blink::NameClient", %"class.blink::TraceWrapperV8Reference" }
%"class.blink::NameClient" = type { i32 (...)** }
%"class.blink::TraceWrapperV8Reference" = type { %"class.v8::TracedReference" }
%"class.v8::TracedReference" = type { %"class.v8::BasicTracedReference" }
%"class.v8::BasicTracedReference" = type { %"class.v8::TracedReferenceBase" }
%"class.v8::TracedReferenceBase" = type { i64* }
%"class.blink::Member.0" = type { %"class.blink::MemberBase.1" }
%"class.blink::MemberBase.1" = type { %"class.blink::TreeScope"* }
%"class.blink::TreeScope" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::Member.89", %"class.blink::Member.91", %"class.blink::Member.0", %"class.blink::Member.93", %"class.blink::Member.93", %"class.blink::Member.117", %"class.blink::Member.119", %"class.blink::Member.121", %"class.blink::RadioButtonGroupScope", %"class.blink::Member.126", %"class.blink::HeapVector.128" }
%"class.blink::GarbageCollectedMixin" = type { i32 (...)** }
%"class.blink::Member.89" = type { %"class.blink::MemberBase.90" }
%"class.blink::MemberBase.90" = type { %"class.blink::ContainerNode"* }
%"class.blink::Member.91" = type { %"class.blink::MemberBase.92" }
%"class.blink::MemberBase.92" = type { %"class.blink::Document"* }
%"class.blink::Member.93" = type { %"class.blink::MemberBase.94" }
%"class.blink::MemberBase.94" = type { %"class.blink::TreeOrderedMap"* }
%"class.blink::TreeOrderedMap" = type { %"class.blink::HeapHashMap.97" }
%"class.blink::HeapHashMap.97" = type { %"class.WTF::HashMap.100" }
%"class.WTF::HashMap.100" = type { %"class.WTF::HashTable.101" }
%"class.WTF::HashTable.101" = type <{ %"struct.WTF::KeyValuePair.103"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.103" = type { %"class.WTF::AtomicString", %"class.blink::Member.104" }
%"class.blink::Member.104" = type { %"class.blink::MemberBase.105" }
%"class.blink::MemberBase.105" = type { %"class.blink::TreeOrderedMap::MapEntry"* }
%"class.blink::TreeOrderedMap::MapEntry" = type { %"class.blink::Member.108", i32, %"class.blink::HeapVector.110" }
%"class.blink::Member.108" = type { %"class.blink::MemberBase.109" }
%"class.blink::MemberBase.109" = type { %"class.blink::Element"* }
%"class.blink::HeapVector.110" = type { %"class.WTF::Vector.113" }
%"class.WTF::Vector.113" = type { %"class.WTF::VectorBuffer.114" }
%"class.WTF::VectorBuffer.114" = type { %"class.WTF::VectorBufferBase.115" }
%"class.WTF::VectorBufferBase.115" = type { %"class.blink::Member.108"*, i32, i32 }
%"class.blink::Member.117" = type { %"class.blink::MemberBase.118" }
%"class.blink::MemberBase.118" = type { %"class.blink::IdTargetObserverRegistry"* }
%"class.blink::IdTargetObserverRegistry" = type opaque
%"class.blink::Member.119" = type { %"class.blink::MemberBase.120" }
%"class.blink::MemberBase.120" = type { %"class.blink::ScopedStyleResolver"* }
%"class.blink::ScopedStyleResolver" = type opaque
%"class.blink::Member.121" = type { %"class.blink::MemberBase.122" }
%"class.blink::MemberBase.122" = type { %"class.blink::DOMSelection"* }
%"class.blink::DOMSelection" = type opaque
%"class.blink::RadioButtonGroupScope" = type { %"class.blink::Member.123" }
%"class.blink::Member.123" = type { %"class.blink::MemberBase.124" }
%"class.blink::MemberBase.124" = type { %"class.blink::HeapHashMap.125"* }
%"class.blink::HeapHashMap.125" = type opaque
%"class.blink::Member.126" = type { %"class.blink::MemberBase.127" }
%"class.blink::MemberBase.127" = type { %"class.blink::SVGTreeScopeResources"* }
%"class.blink::SVGTreeScopeResources" = type opaque
%"class.blink::HeapVector.128" = type { %"class.WTF::Vector.131" }
%"class.WTF::Vector.131" = type { %"class.WTF::VectorBuffer.132" }
%"class.WTF::VectorBuffer.132" = type { %"class.WTF::VectorBufferBase.133" }
%"class.WTF::VectorBufferBase.133" = type { %"class.blink::Member.134"*, i32, i32 }
%"class.blink::Member.134" = type opaque
%"class.blink::Member.2" = type { %"class.blink::MemberBase.3" }
%"class.blink::MemberBase.3" = type { %"class.blink::NodeData"* }
%"class.blink::NodeData" = type { i16, %"class.WTF::ConcurrentlyReadBitField" }
%"class.WTF::ConcurrentlyReadBitField" = type { %"class.WTF::SingleThreadedBitField" }
%"class.WTF::SingleThreadedBitField" = type { i16 }
%"class.blink::Member" = type { %"class.blink::MemberBase" }
%"class.blink::MemberBase" = type { %"class.blink::Node"* }
%"class.blink::Animatable" = type { i32 (...)** }
%"class.blink::Member.8" = type { %"class.blink::MemberBase.9" }
%"class.blink::MemberBase.9" = type { %"class.blink::ElementData"* }
%"class.blink::ElementData" = type { %"class.WTF::ConcurrentlyReadBitField.12", %"class.blink::Member.14", %"class.blink::SpaceSplitString", %"class.WTF::AtomicString" }
%"class.WTF::ConcurrentlyReadBitField.12" = type { %"class.WTF::SingleThreadedBitField.13" }
%"class.WTF::SingleThreadedBitField.13" = type { i32 }
%"class.blink::Member.14" = type { %"class.blink::MemberBase.15" }
%"class.blink::MemberBase.15" = type { %"class.blink::CSSPropertyValueSet"* }
%"class.blink::CSSPropertyValueSet" = type opaque
%"class.blink::SpaceSplitString" = type { %class.scoped_refptr.16 }
%class.scoped_refptr.16 = type { %"class.blink::SpaceSplitString::Data"* }
%"class.blink::SpaceSplitString::Data" = type { %"class.WTF::RefCounted.17", %"class.WTF::AtomicString", %"class.WTF::Vector" }
%"class.WTF::RefCounted.17" = type { %"class.base::RefCounted.18" }
%"class.base::RefCounted.18" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector" = type { %"class.WTF::VectorBuffer" }
%"class.WTF::VectorBuffer" = type { %"class.WTF::VectorBufferBase", [32 x i8] }
%"class.WTF::VectorBufferBase" = type { %"class.WTF::AtomicString"*, i32, i32 }
%"class.blink::HeapHashSet" = type { %"class.WTF::HashSet" }
%"class.WTF::HashSet" = type { %"class.WTF::HashTable" }
%"class.WTF::HashTable" = type <{ %"class.blink::WeakMember"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember" = type opaque
%"class.blink::HeapHashMap" = type { %"class.WTF::HashMap" }
%"class.WTF::HashMap" = type { %"class.WTF::HashTable.24" }
%"class.WTF::HashTable.24" = type <{ %"struct.WTF::KeyValuePair"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair" = type opaque
%"class.blink::Member.26" = type { %"class.blink::MemberBase.27" }
%"class.blink::MemberBase.27" = type { %"class.blink::SVGElementRareData"* }
%"class.blink::SVGElementRareData" = type opaque
%"class.blink::Member.28" = type { %"class.blink::MemberBase.29" }
%"class.blink::MemberBase.29" = type { %"class.blink::SVGAnimatedString"* }
%"class.blink::SVGAnimatedString" = type opaque
%"class.blink::SVGTests" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::Member.30", %"class.blink::Member.30" }
%"class.blink::Member.30" = type { %"class.blink::MemberBase.31" }
%"class.blink::MemberBase.31" = type { %"class.blink::SVGStaticStringList"* }
%"class.blink::SVGStaticStringList" = type opaque
%"class.blink::Member.32" = type { %"class.blink::MemberBase.33" }
%"class.blink::MemberBase.33" = type { %"class.blink::SVGElement"* }
%"class.blink::Member.34" = type { %"class.blink::MemberBase.35" }
%"class.blink::MemberBase.35" = type { %"class.blink::IdTargetObserver"* }
%"class.blink::IdTargetObserver" = type opaque
%"class.blink::HeapVector" = type { %"class.WTF::Vector.38" }
%"class.WTF::Vector.38" = type { %"class.WTF::VectorBuffer.39" }
%"class.WTF::VectorBuffer.39" = type { %"class.WTF::VectorBufferBase.40" }
%"class.WTF::VectorBufferBase.40" = type { %"class.blink::Member.41"*, i32, i32 }
%"class.blink::Member.41" = type opaque
%"class.blink::HeapHashSet.43" = type { %"class.WTF::HashSet.46" }
%"class.WTF::HashSet.46" = type { %"class.WTF::HashTable.47" }
%"class.WTF::HashTable.47" = type <{ %"class.blink::Member.49"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.49" = type opaque
%"class.blink::SMILInstanceTimeList" = type <{ %"class.WTF::Vector.50", i32, [4 x i8] }>
%"class.WTF::Vector.50" = type { %"class.WTF::VectorBuffer.51" }
%"class.WTF::VectorBuffer.51" = type { %"class.WTF::VectorBufferBase.52" }
%"class.WTF::VectorBufferBase.52" = type { %"class.blink::SMILTimeWithOrigin"*, i32, i32 }
%"class.blink::SMILTimeWithOrigin" = type <{ %"class.blink::SMILTime", i32, [4 x i8] }>
%"struct.blink::SMILInterval" = type { %"class.blink::SMILTime", %"class.blink::SMILTime" }
%"struct.blink::SVGSMILElement::ProgressState" = type { float, i32 }
%"class.blink::Member.55" = type { %"class.blink::MemberBase.56" }
%"class.blink::MemberBase.56" = type { %"class.blink::SMILTimeContainer"* }
%"class.blink::SMILTimeContainer" = type opaque
%"class.blink::SMILRepeatCount" = type { double }
%"class.blink::SMILTime" = type { %"class.base::TimeDelta" }
%"class.base::TimeDelta" = type { i64 }
%"class.WTF::Vector.57" = type { %"class.WTF::VectorBuffer.58" }
%"class.WTF::VectorBuffer.58" = type { %"class.WTF::VectorBufferBase.59" }
%"class.WTF::VectorBufferBase.59" = type { %"class.WTF::String"*, i32, i32 }
%"class.WTF::Vector.62" = type { %"class.WTF::VectorBuffer.63" }
%"class.WTF::VectorBuffer.63" = type { %"class.WTF::VectorBufferBase.64" }
%"class.WTF::VectorBufferBase.64" = type { float*, i32, i32 }
%"class.WTF::Vector.67" = type { %"class.WTF::VectorBuffer.68" }
%"class.WTF::VectorBuffer.68" = type { %"class.WTF::VectorBufferBase.69" }
%"class.WTF::VectorBufferBase.69" = type { %"class.gfx::CubicBezier"*, i32, i32 }
%"class.gfx::CubicBezier" = type { double, double, double, double, double, double, double, double, double, double, [11 x double] }
%"class.blink::FloatPoint" = type { float, float }
%"class.blink::Path" = type { %class.SkPath }
%class.SkPath = type <{ %class.sk_sp, i32, %"struct.std::__1::atomic.79", %"struct.std::__1::atomic.79", i8, i8 }>
%class.sk_sp = type { %class.SkPathRef* }
%class.SkPathRef = type <{ %class.SkNVRefCnt, %struct.SkRect, [4 x i8], %class.SkTDArray, %class.SkTDArray.77, %class.SkTDArray.78, i32, [4 x i8], %"class.SkIDChangeListener::List", i8, i8, i8, i8, i8, i8, i8, i8 }>
%class.SkNVRefCnt = type { %"struct.std::__1::atomic.72" }
%"struct.std::__1::atomic.72" = type { %"struct.std::__1::__atomic_base.73" }
%"struct.std::__1::__atomic_base.73" = type { %"struct.std::__1::__atomic_base.74" }
%"struct.std::__1::__atomic_base.74" = type { %"struct.std::__1::__cxx_atomic_impl.75" }
%"struct.std::__1::__cxx_atomic_impl.75" = type { %"struct.std::__1::__cxx_atomic_base_impl.76" }
%"struct.std::__1::__cxx_atomic_base_impl.76" = type { i32 }
%struct.SkRect = type { float, float, float, float }
%class.SkTDArray = type { %struct.SkPoint*, i32, i32 }
%struct.SkPoint = type { float, float }
%class.SkTDArray.77 = type { i8*, i32, i32 }
%class.SkTDArray.78 = type { float*, i32, i32 }
%"class.SkIDChangeListener::List" = type { %class.SkMutex, %class.SkTDArray.84 }
%class.SkMutex = type { %class.SkSemaphore }
%class.SkSemaphore = type { %"struct.std::__1::atomic.72", %class.SkOnce, %"struct.SkSemaphore::OSSemaphore"* }
%class.SkOnce = type { %"struct.std::__1::atomic.79" }
%"struct.SkSemaphore::OSSemaphore" = type opaque
%class.SkTDArray.84 = type { %class.SkIDChangeListener**, i32, i32 }
%class.SkIDChangeListener = type { %class.SkRefCnt.base, %"struct.std::__1::atomic.85", [3 x i8] }
%class.SkRefCnt.base = type { %class.SkRefCntBase.base }
%class.SkRefCntBase.base = type <{ i32 (...)**, %"struct.std::__1::atomic.72" }>
%"struct.std::__1::atomic.85" = type { %"struct.std::__1::__atomic_base.86" }
%"struct.std::__1::__atomic_base.86" = type { %"struct.std::__1::__cxx_atomic_impl.87" }
%"struct.std::__1::__cxx_atomic_impl.87" = type { %"struct.std::__1::__cxx_atomic_base_impl.88" }
%"struct.std::__1::__cxx_atomic_base_impl.88" = type { i8 }
%"struct.std::__1::atomic.79" = type { %"struct.std::__1::__atomic_base.80" }
%"struct.std::__1::__atomic_base.80" = type { %"struct.std::__1::__atomic_base.81" }
%"struct.std::__1::__atomic_base.81" = type { %"struct.std::__1::__cxx_atomic_impl.82" }
%"struct.std::__1::__cxx_atomic_impl.82" = type { %"struct.std::__1::__cxx_atomic_base_impl.83" }
%"struct.std::__1::__cxx_atomic_base_impl.83" = type { i8 }
%"class.blink::Document" = type opaque
%"class.blink::SVGSMILElement" = type <{ %"class.blink::SVGElement", %"class.blink::SVGTests", %"class.blink::Member.32", %"class.blink::Member.34", %"class.blink::HeapVector", i8, i8, i8, i8, [4 x i8], %"class.blink::HeapHashSet.43", %"class.blink::SMILInstanceTimeList", %"class.blink::SMILInstanceTimeList", %"struct.blink::SMILInterval", %"struct.blink::SMILInterval", i8, [3 x i8], %"struct.blink::SVGSMILElement::ProgressState", [4 x i8], %"class.blink::Member.55", i32, i32, %"class.blink::SMILTime", %"class.blink::SMILTime", %"class.blink::SMILRepeatCount", %"class.blink::SMILTime", %"class.blink::SMILTime", i8, i8, i8, [5 x i8] }>
%"struct.blink::Element::AttributeModificationParams" = type <{ %"class.blink::QualifiedName"*, %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"*, i32, [4 x i8] }>
%"class.WTF::StringView" = type <{ %"class.WTF::StringImpl"*, i8*, i32, [4 x i8] }>
%"class.blink::SVGMPathElement" = type { %"class.blink::SVGElement", %"class.blink::SVGURIReference", %"class.blink::Member.34" }
%"class.blink::SVGURIReference" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::Member.142" }
%"class.blink::Member.142" = type { %"class.blink::MemberBase.143" }
%"class.blink::MemberBase.143" = type { %"class.blink::SVGAnimatedHref"* }
%"class.blink::SVGAnimatedHref" = type opaque
%"class.blink::SVGPathElement" = type { %"class.blink::SVGGeometryElement", %"class.blink::Member.148" }
%"class.blink::SVGGeometryElement" = type { %"class.blink::SVGGraphicsElement", %"class.blink::Member.146" }
%"class.blink::SVGGraphicsElement" = type { %"class.blink::SVGElement", %"class.blink::SVGTests", %"class.blink::Member.144" }
%"class.blink::Member.144" = type { %"class.blink::MemberBase.145" }
%"class.blink::MemberBase.145" = type { %"class.blink::SVGAnimatedTransformList"* }
%"class.blink::SVGAnimatedTransformList" = type opaque
%"class.blink::Member.146" = type { %"class.blink::MemberBase.147" }
%"class.blink::MemberBase.147" = type { %"class.blink::SVGAnimatedNumber"* }
%"class.blink::SVGAnimatedNumber" = type opaque
%"class.blink::Member.148" = type { %"class.blink::MemberBase.149" }
%"class.blink::MemberBase.149" = type { %"class.blink::SVGAnimatedPath"* }
%"class.blink::SVGAnimatedPath" = type opaque
%"class.blink::UniqueElementData" = type { %"class.blink::ElementData", %"class.blink::Member.14", %"class.WTF::Vector.364" }
%"class.WTF::Vector.364" = type { %"class.WTF::VectorBuffer.365" }
%"class.WTF::VectorBuffer.365" = type { %"class.WTF::VectorBufferBase.366", [64 x i8] }
%"class.WTF::VectorBufferBase.366" = type { %"class.blink::Attribute"*, i32, i32 }
%"class.blink::Attribute" = type { %"class.blink::QualifiedName", %"class.WTF::AtomicString" }
%"struct.blink::SMILAnimationValue" = type { %"class.blink::SVGPropertyBase"*, %"class.blink::AffineTransform" }
%"class.blink::SVGPropertyBase" = type opaque
%"class.blink::AffineTransform" = type { [6 x double] }
%"class.blink::EventTargetData" = type { %"class.blink::EventListenerMap", %"class.std::__1::unique_ptr.345" }
%"class.blink::EventListenerMap" = type { %"class.blink::HeapVector.333" }
%"class.blink::HeapVector.333" = type { %"class.WTF::Vector.336" }
%"class.WTF::Vector.336" = type { %"class.WTF::VectorBuffer.337" }
%"class.WTF::VectorBuffer.337" = type { %"class.WTF::VectorBufferBase.338", [32 x i8] }
%"class.WTF::VectorBufferBase.338" = type { %"struct.std::__1::pair.339"*, i32, i32 }
%"struct.std::__1::pair.339" = type { %"class.WTF::AtomicString", %"class.blink::Member.340" }
%"class.blink::Member.340" = type { %"class.blink::MemberBase.341" }
%"class.blink::MemberBase.341" = type { %"class.blink::HeapVector.342"* }
%"class.blink::HeapVector.342" = type opaque
%"class.std::__1::unique_ptr.345" = type { %"class.std::__1::__compressed_pair.346" }
%"class.std::__1::__compressed_pair.346" = type { %"struct.std::__1::__compressed_pair_elem.347" }
%"struct.std::__1::__compressed_pair_elem.347" = type { %"class.WTF::Vector.348"* }
%"class.WTF::Vector.348" = type opaque
%"class.blink::Visitor" = type { i32 (...)**, %"class.blink::ThreadState"* }
%"class.blink::ThreadState" = type <{ %"class.std::__1::unique_ptr", i32, [4 x i8], %"class.std::__1::unique_ptr.281", %"class.std::__1::unique_ptr.281", i8**, i8, i8, i8, i8, i8, i8, [2 x i8], i64, i64, i32, i32, i32, [4 x i8], %"class.WTF::Deque", %"class.v8::Isolate"*, void (%"class.v8::Isolate"*, %"class.v8::EmbedderGraph"*, i8*)*, %"class.std::__1::unique_ptr.291", %"class.std::__1::unique_ptr.297", %"struct.blink::ThreadState::GCData", %"class.std::__1::unique_ptr.309", %"class.std::__1::unique_ptr.315", %"class.base::JobHandle", %"class.base::JobHandle", %"struct.std::__1::atomic.85", [7 x i8], i64, i8, [7 x i8], i64, %"class.base::TimeTicks", i8, i8, [6 x i8] }>
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.blink::ThreadHeap"* }
%"class.blink::ThreadHeap" = type { %"class.blink::ThreadState"*, %"class.std::__1::unique_ptr.150", %"class.std::__1::unique_ptr.154", %"class.std::__1::unique_ptr.160", %"class.std::__1::unique_ptr.166", %"class.std::__1::unique_ptr.172", %"class.std::__1::unique_ptr.178", %"class.std::__1::unique_ptr.189", %"class.std::__1::unique_ptr.196", %"class.std::__1::unique_ptr.196", %"class.std::__1::unique_ptr.203", %"class.std::__1::unique_ptr.210", %"class.std::__1::unique_ptr.217", %"class.std::__1::unique_ptr.217", %"class.std::__1::unique_ptr.224", %"class.std::__1::unique_ptr.231", %"class.std::__1::unique_ptr.238", %"class.std::__1::unique_ptr.261", %"struct.blink::ThreadHeap::LastAllocatedRegion", [9 x %"class.blink::BaseArena"*], i64, i64 }
%"class.std::__1::unique_ptr.150" = type { %"class.std::__1::__compressed_pair.151" }
%"class.std::__1::__compressed_pair.151" = type { %"struct.std::__1::__compressed_pair_elem.152" }
%"struct.std::__1::__compressed_pair_elem.152" = type { %"class.blink::ThreadHeapStatsCollector"* }
%"class.blink::ThreadHeapStatsCollector" = type opaque
%"class.std::__1::unique_ptr.154" = type { %"class.std::__1::__compressed_pair.155" }
%"class.std::__1::__compressed_pair.155" = type { %"struct.std::__1::__compressed_pair_elem.156" }
%"struct.std::__1::__compressed_pair_elem.156" = type { %"class.blink::RegionTree"* }
%"class.blink::RegionTree" = type opaque
%"class.std::__1::unique_ptr.160" = type { %"class.std::__1::__compressed_pair.161" }
%"class.std::__1::__compressed_pair.161" = type { %"struct.std::__1::__compressed_pair_elem.162" }
%"struct.std::__1::__compressed_pair_elem.162" = type { %"class.blink::PageBloomFilter"* }
%"class.blink::PageBloomFilter" = type opaque
%"class.std::__1::unique_ptr.166" = type { %"class.std::__1::__compressed_pair.167" }
%"class.std::__1::__compressed_pair.167" = type { %"struct.std::__1::__compressed_pair_elem.168" }
%"struct.std::__1::__compressed_pair_elem.168" = type { %"class.blink::PagePool"* }
%"class.blink::PagePool" = type opaque
%"class.std::__1::unique_ptr.172" = type { %"class.std::__1::__compressed_pair.173" }
%"class.std::__1::__compressed_pair.173" = type { %"struct.std::__1::__compressed_pair_elem.174" }
%"struct.std::__1::__compressed_pair_elem.174" = type { %"class.blink::ProcessHeapReporter"* }
%"class.blink::ProcessHeapReporter" = type opaque
%"class.std::__1::unique_ptr.178" = type { %"class.std::__1::__compressed_pair.179" }
%"class.std::__1::__compressed_pair.179" = type { %"struct.std::__1::__compressed_pair_elem.180" }
%"struct.std::__1::__compressed_pair_elem.180" = type { %"class.blink::Worklist"* }
%"class.blink::Worklist" = type { [4 x %"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, i64, [512 x %"struct.blink::TraceDescriptor"] }
%"struct.blink::TraceDescriptor" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"struct.std::__1::atomic.181" }
%"class.base::Lock" = type { %"class.base::internal::LockImpl" }
%"class.base::internal::LockImpl" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"struct.std::__1::atomic.181" = type { %"struct.std::__1::__atomic_base.182" }
%"struct.std::__1::__atomic_base.182" = type { %"struct.std::__1::__atomic_base.183" }
%"struct.std::__1::__atomic_base.183" = type { %"struct.std::__1::__cxx_atomic_impl.184" }
%"struct.std::__1::__cxx_atomic_impl.184" = type { %"struct.std::__1::__cxx_atomic_base_impl.185" }
%"struct.std::__1::__cxx_atomic_base_impl.185" = type { i64 }
%"class.std::__1::unique_ptr.189" = type { %"class.std::__1::__compressed_pair.190" }
%"class.std::__1::__compressed_pair.190" = type { %"struct.std::__1::__compressed_pair_elem.191" }
%"struct.std::__1::__compressed_pair_elem.191" = type { %"class.blink::Worklist.192"* }
%"class.blink::Worklist.192" = type { [4 x %"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"struct.std::__1::atomic.181" }
%"class.std::__1::unique_ptr.196" = type { %"class.std::__1::__compressed_pair.197" }
%"class.std::__1::__compressed_pair.197" = type { %"struct.std::__1::__compressed_pair_elem.198" }
%"struct.std::__1::__compressed_pair_elem.198" = type { %"class.blink::Worklist.199"* }
%"class.blink::Worklist.199" = type { [4 x %"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"class.blink::Worklist<const void *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *, 16, 4>::Segment" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, i64, [16 x i8*] }
%"class.blink::Worklist<const void *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"struct.std::__1::atomic.181" }
%"class.std::__1::unique_ptr.203" = type { %"class.std::__1::__compressed_pair.204" }
%"class.std::__1::__compressed_pair.204" = type { %"struct.std::__1::__compressed_pair_elem.205" }
%"struct.std::__1::__compressed_pair_elem.205" = type { %"class.blink::Worklist.206"* }
%"class.blink::Worklist.206" = type { [4 x %"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.181" }
%"class.std::__1::unique_ptr.210" = type { %"class.std::__1::__compressed_pair.211" }
%"class.std::__1::__compressed_pair.211" = type { %"struct.std::__1::__compressed_pair_elem.212" }
%"struct.std::__1::__compressed_pair_elem.212" = type { %"class.blink::Worklist.213"* }
%"class.blink::Worklist.213" = type { [4 x %"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *const *, 256, 4>::Segment" = type opaque
%"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"struct.std::__1::atomic.181" }
%"class.std::__1::unique_ptr.217" = type { %"class.std::__1::__compressed_pair.218" }
%"class.std::__1::__compressed_pair.218" = type { %"struct.std::__1::__compressed_pair_elem.219" }
%"struct.std::__1::__compressed_pair_elem.219" = type { %"class.blink::Worklist.220"* }
%"class.blink::Worklist.220" = type { [4 x %"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.181" }
%"class.std::__1::unique_ptr.224" = type { %"class.std::__1::__compressed_pair.225" }
%"class.std::__1::__compressed_pair.225" = type { %"struct.std::__1::__compressed_pair_elem.226" }
%"struct.std::__1::__compressed_pair_elem.226" = type { %"class.blink::Worklist.227"* }
%"class.blink::Worklist.227" = type { [4 x %"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment" = type opaque
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"struct.std::__1::atomic.181" }
%"class.std::__1::unique_ptr.231" = type { %"class.std::__1::__compressed_pair.232" }
%"class.std::__1::__compressed_pair.232" = type { %"struct.std::__1::__compressed_pair_elem.233" }
%"struct.std::__1::__compressed_pair_elem.233" = type { %"class.blink::Worklist.234"* }
%"class.blink::Worklist.234" = type { [4 x %"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, i64, [64 x %"struct.blink::NotSafeToConcurrentlyTraceItem"] }
%"struct.blink::NotSafeToConcurrentlyTraceItem" = type { %"struct.blink::TraceDescriptor", i64 }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.181" }
%"class.std::__1::unique_ptr.238" = type { %"class.std::__1::__compressed_pair.239" }
%"class.std::__1::__compressed_pair.239" = type { %"struct.std::__1::__compressed_pair_elem.240" }
%"struct.std::__1::__compressed_pair_elem.240" = type { %"class.blink::WeakContainersWorklist"* }
%"class.blink::WeakContainersWorklist" = type { %"class.WTF::Mutex", %"class.std::__1::unordered_set" }
%"class.WTF::Mutex" = type { %"class.WTF::MutexBase" }
%"class.WTF::MutexBase" = type { %"struct.WTF::PlatformMutex" }
%"struct.WTF::PlatformMutex" = type { %union.pthread_mutex_t }
%"class.std::__1::unordered_set" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.241", %"class.std::__1::__compressed_pair.248", %"class.std::__1::__compressed_pair.253", %"class.std::__1::__compressed_pair.255", [4 x i8] }>
%"class.std::__1::unique_ptr.241" = type { %"class.std::__1::__compressed_pair.242" }
%"class.std::__1::__compressed_pair.242" = type { %"struct.std::__1::__compressed_pair_elem.243", %"struct.std::__1::__compressed_pair_elem.244" }
%"struct.std::__1::__compressed_pair_elem.243" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.244" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.245" }
%"class.std::__1::__compressed_pair.245" = type { %"struct.std::__1::__compressed_pair_elem.246" }
%"struct.std::__1::__compressed_pair_elem.246" = type { i64 }
%"class.std::__1::__compressed_pair.248" = type { %"struct.std::__1::__compressed_pair_elem.249" }
%"struct.std::__1::__compressed_pair_elem.249" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.253" = type { %"struct.std::__1::__compressed_pair_elem.246" }
%"class.std::__1::__compressed_pair.255" = type { %"struct.std::__1::__compressed_pair_elem.256" }
%"struct.std::__1::__compressed_pair_elem.256" = type { float }
%"class.std::__1::unique_ptr.261" = type { %"class.std::__1::__compressed_pair.262" }
%"class.std::__1::__compressed_pair.262" = type { %"struct.std::__1::__compressed_pair_elem.263" }
%"struct.std::__1::__compressed_pair_elem.263" = type { %"class.blink::HeapCompact"* }
%"class.blink::HeapCompact" = type <{ %"class.blink::ThreadHeap"*, %"class.std::__1::unique_ptr.264", i8, [7 x i8], i64, i64, i32, [4 x i8], i64, i8, [7 x i8] }>
%"class.std::__1::unique_ptr.264" = type { %"class.std::__1::__compressed_pair.265" }
%"class.std::__1::__compressed_pair.265" = type { %"struct.std::__1::__compressed_pair_elem.266" }
%"struct.std::__1::__compressed_pair_elem.266" = type { %"class.blink::HeapCompact::MovableObjectFixups"* }
%"class.blink::HeapCompact::MovableObjectFixups" = type opaque
%"struct.blink::ThreadHeap::LastAllocatedRegion" = type { i8*, i64 }
%"class.blink::BaseArena" = type <{ i32 (...)**, %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::ThreadState"*, i32, [4 x i8] }>
%"class.blink::PageStackThreadSafe" = type { %"class.blink::PageStack", %"class.WTF::Mutex" }
%"class.blink::PageStack" = type { %"class.WTF::Vector.273" }
%"class.WTF::Vector.273" = type { %"class.WTF::VectorBuffer.274" }
%"class.WTF::VectorBuffer.274" = type { %"class.WTF::VectorBufferBase.275" }
%"class.WTF::VectorBufferBase.275" = type { %"class.blink::BasePage"**, i32, i32 }
%"class.blink::BasePage" = type <{ i32 (...)**, %"class.blink::PageMemory"*, %"class.blink::BaseArena"*, %"class.blink::ThreadState"*, i64, i8, i8, i8, [5 x i8] }>
%"class.blink::PageMemory" = type opaque
%"class.std::__1::unique_ptr.281" = type { %"class.std::__1::__compressed_pair.282" }
%"class.std::__1::__compressed_pair.282" = type { %"struct.std::__1::__compressed_pair_elem.283" }
%"struct.std::__1::__compressed_pair_elem.283" = type { %"class.blink::PersistentRegion"* }
%"class.blink::PersistentRegion" = type { %"class.blink::PersistentRegionBase" }
%"class.blink::PersistentRegionBase" = type { %"class.blink::PersistentNode"*, %"struct.blink::PersistentNodeSlots"* }
%"class.blink::PersistentNode" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"struct.blink::PersistentNodeSlots" = type { %"struct.blink::PersistentNodeSlots"*, [256 x %"class.blink::PersistentNode"] }
%"class.WTF::Deque" = type { %"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer", i32, i32 }
%"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer" = type { %"class.WTF::VectorBuffer.289" }
%"class.WTF::VectorBuffer.289" = type { %"class.WTF::VectorBufferBase.290" }
%"class.WTF::VectorBufferBase.290" = type { %"struct.std::__1::pair"*, i32, i32 }
%"struct.std::__1::pair" = type { i8*, i1 (%"class.blink::LivenessBroker"*, i8*)* }
%"class.blink::LivenessBroker" = type { i8 }
%"class.v8::EmbedderGraph" = type opaque
%"class.std::__1::unique_ptr.291" = type { %"class.std::__1::__compressed_pair.292" }
%"class.std::__1::__compressed_pair.292" = type { %"struct.std::__1::__compressed_pair_elem.293" }
%"struct.std::__1::__compressed_pair_elem.293" = type { %"class.blink::UnifiedHeapController"* }
%"class.blink::UnifiedHeapController" = type opaque
%"class.std::__1::unique_ptr.297" = type { %"class.std::__1::__compressed_pair.298" }
%"class.std::__1::__compressed_pair.298" = type { %"struct.std::__1::__compressed_pair_elem.299" }
%"struct.std::__1::__compressed_pair_elem.299" = type { %"class.v8::EmbedderRootsHandler"* }
%"class.v8::EmbedderRootsHandler" = type { i32 (...)** }
%"struct.blink::ThreadState::GCData" = type { i32, i32, i32, i32, %"class.std::__1::unique_ptr.303" }
%"class.std::__1::unique_ptr.303" = type { %"class.std::__1::__compressed_pair.304" }
%"class.std::__1::__compressed_pair.304" = type { %"struct.std::__1::__compressed_pair_elem.305" }
%"struct.std::__1::__compressed_pair_elem.305" = type { %"class.blink::MarkingVisitor"* }
%"class.blink::MarkingVisitor" = type { %"class.blink::MarkingVisitorBase", %"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" }
%"class.blink::MarkingVisitorBase" = type { %"class.blink::Visitor", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View", %"class.blink::Worklist<const void *, 16, 4>::View", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View", %"class.blink::Worklist<const void *const *, 256, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::WeakContainersWorklist"*, i64, i32, i32 }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View" = type <{ %"class.blink::Worklist"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View" = type <{ %"class.blink::Worklist.192"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *, 16, 4>::View" = type <{ %"class.blink::Worklist.199"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View" = type <{ %"class.blink::Worklist.206"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *const *, 256, 4>::View" = type <{ %"class.blink::Worklist.213"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View" = type <{ %"class.blink::Worklist.220"*, i32, [4 x i8] }>
%"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" = type { %"class.std::__1::vector", i64 }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.blink::HeapObjectHeader"**, %"class.blink::HeapObjectHeader"**, %"class.std::__1::__compressed_pair.322" }
%"class.blink::HeapObjectHeader" = type { i32, i16, i16 }
%"class.std::__1::__compressed_pair.322" = type { %"struct.std::__1::__compressed_pair_elem.323" }
%"struct.std::__1::__compressed_pair_elem.323" = type { %"class.blink::HeapObjectHeader"** }
%"class.std::__1::unique_ptr.309" = type { %"class.std::__1::__compressed_pair.310" }
%"class.std::__1::__compressed_pair.310" = type { %"struct.std::__1::__compressed_pair_elem.311" }
%"struct.std::__1::__compressed_pair_elem.311" = type { %"class.blink::ThreadState::IncrementalMarkingScheduler"* }
%"class.blink::ThreadState::IncrementalMarkingScheduler" = type opaque
%"class.std::__1::unique_ptr.315" = type { %"class.std::__1::__compressed_pair.316" }
%"class.std::__1::__compressed_pair.316" = type { %"struct.std::__1::__compressed_pair_elem.317" }
%"struct.std::__1::__compressed_pair_elem.317" = type { %"class.blink::MarkingSchedulingOracle"* }
%"class.blink::MarkingSchedulingOracle" = type opaque
%"class.base::JobHandle" = type { %class.scoped_refptr.321 }
%class.scoped_refptr.321 = type { %"class.base::internal::JobTaskSource"* }
%"class.base::internal::JobTaskSource" = type opaque
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.v8::Value" = type { i8 }
%"class.blink::ScriptState" = type opaque
%"class.blink::ExecutionContext" = type opaque
%"class.blink::DOMWindow" = type opaque
%"class.blink::LocalDOMWindow" = type opaque
%"class.blink::MessagePort" = type opaque
%"class.blink::ServiceWorker" = type opaque
%"class.blink::PortalHost" = type opaque
%"class.blink::Event" = type opaque
%"class.blink::EventListener" = type opaque
%"class.blink::AddEventListenerOptionsResolved" = type opaque
%"class.blink::RegisteredEventListener" = type <{ %"class.blink::Member.329", i8, [7 x i8] }>
%"class.blink::Member.329" = type { %"class.blink::MemberBase.330" }
%"class.blink::MemberBase.330" = type { %"class.blink::EventListener"* }
%"class.blink::V8UnionStringOrTrustedScript" = type opaque
%"class.blink::ExceptionState" = type { i32 (...)**, %"class.blink::ExceptionContext", %"class.blink::ExceptionState::ContextScope"*, %"class.v8::Isolate"*, i32, %"class.WTF::String", %"class.blink::TraceWrapperV8Reference.352" }
%"class.blink::ExceptionContext" = type { i16, i16, i8*, i8* }
%"class.blink::ExceptionState::ContextScope" = type { %"class.blink::ExceptionState"*, %"class.blink::ExceptionState::ContextScope"*, %"class.blink::ExceptionContext" }
%"class.blink::TraceWrapperV8Reference.352" = type { %"class.v8::TracedReference.353" }
%"class.v8::TracedReference.353" = type { %"class.v8::BasicTracedReference.354" }
%"class.v8::BasicTracedReference.354" = type { %"class.v8::TracedReferenceBase" }
%"struct.blink::Node::AttachContext" = type <{ %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*, i8, i8, i8, i8, [4 x i8] }>
%"class.blink::LayoutObject" = type opaque
%"class.blink::EventDispatchHandlingState" = type opaque
%"class.blink::LayoutBox" = type opaque
%"class.blink::ComputedStyle" = type opaque
%"struct.blink::ContainerNode::ChildrenChange" = type { i8, i8, %"class.blink::Node"*, %"class.blink::Node"*, %"class.blink::Node"*, %"class.blink::HeapVector.355", %"class.WTF::String"* }
%"class.blink::HeapVector.355" = type { %"class.WTF::Vector.358" }
%"class.WTF::Vector.358" = type { %"class.WTF::VectorBuffer.359" }
%"class.WTF::VectorBuffer.359" = type { %"class.WTF::VectorBufferBase.360" }
%"class.WTF::VectorBufferBase.360" = type { %"class.blink::Member"*, i32, i32 }
%"class.WTF::HashMap.362" = type opaque
%"class.blink::MutableCSSPropertyValueSet" = type opaque
%"class.blink::Image" = type opaque
%"struct.blink::FocusParams" = type opaque
%"class.blink::FocusOptions" = type opaque
%"class.blink::InputDeviceCapabilities" = type opaque
%"class.blink::ShadowRoot" = type opaque
%"struct.blink::SVGElement::SvgAttributeChangedParams" = type <{ %"class.blink::QualifiedName"*, i32, [4 x i8] }>

$_ZN5blink19SVGAnimationElementD2Ev = comdat any

$_ZNK5blink15ScriptWrappable18HasPendingActivityEv = comdat any

$_ZNK5blink11EventTarget17HasEventListenersEv = comdat any

$_ZNK5blink23SVGAnimateMotionElement18GetWrapperTypeInfoEv = comdat any

$_ZNK5blink11EventTarget15KeepEventInNodeERKNS_5EventE = comdat any

$_ZNK5blink11EventTarget27IsWindowOrWorkerGlobalScopeEv = comdat any

$_ZNK5blink4Node11GetPseudoIdEv = comdat any

$_ZNK5blink4Node21IsMediaControlElementEv = comdat any

$_ZNK5blink4Node15IsMediaControlsEv = comdat any

$_ZNK5blink4Node14IsMediaElementEv = comdat any

$_ZNK5blink4Node20IsTextTrackContainerEv = comdat any

$_ZNK5blink4Node12IsVTTElementEv = comdat any

$_ZNK5blink4Node15IsAttributeNodeEv = comdat any

$_ZNK5blink4Node19IsCharacterDataNodeEv = comdat any

$_ZNK5blink4Node19IsFrameOwnerElementEv = comdat any

$_ZNK5blink4Node27IsMediaRemotingInterstitialEv = comdat any

$_ZNK5blink4Node30IsPictureInPictureInterstitialEv = comdat any

$_ZNK5blink7Element23CanContainRangeEndPointEv = comdat any

$_ZN5blink4Node11SheetLoadedEv = comdat any

$_ZN5blink4Node43NotifyLoadedSheetAndAllCriticalSubresourcesENS0_22LoadedSheetErrorStatusE = comdat any

$_ZN5blink4Node24StartLoadingDynamicSheetEv = comdat any

$_ZN5blink4Node36DidNotifySubtreeInsertionsToDocumentEv = comdat any

$_ZN5blink4Node23PreDispatchEventHandlerERNS_5EventE = comdat any

$_ZN5blink4Node24PostDispatchEventHandlerERNS_5EventEPNS_26EventDispatchHandlingStateE = comdat any

$_ZN5blink7Element26VirtualEnsureComputedStyleENS_8PseudoIdERKN3WTF12AtomicStringE = comdat any

$_ZNK5blink13ContainerNode20ChildrenCanHaveStyleEv = comdat any

$_ZN5blink7Element36AdditionalPresentationAttributeStyleEv = comdat any

$_ZNK5blink7Element37HasExtraStyleForPresentationAttributeEv = comdat any

$_ZN5blink7Element31CloneNonAttributePropertiesFromERKS0_NS_17CloneChildrenFlagE = comdat any

$_ZNK5blink14SVGSMILElement20LayoutObjectIsNeededERKNS_13ComputedStyleE = comdat any

$_ZNK5blink7Element14IsURLAttributeERKNS_9AttributeE = comdat any

$_ZNK5blink7Element22IsHTMLContentAttributeERKNS_9AttributeE = comdat any

$_ZNK5blink7Element43IsSVGAnimationAttributeSettingJavaScriptURLERKNS_9AttributeE = comdat any

$_ZNK5blink7Element10IsLiveLinkEv = comdat any

$_ZN5blink7Element13ImageContentsEv = comdat any

$_ZNK5blink10SVGElement13SupportsFocusEv = comdat any

$_ZNK5blink7Element14DefaultToolTipEv = comdat any

$_ZN5blink7Element20BeginParsingChildrenEv = comdat any

$_ZNK5blink7Element25MatchesDefaultPseudoClassEv = comdat any

$_ZNK5blink7Element25MatchesEnabledPseudoClassEv = comdat any

$_ZNK5blink7Element26MatchesReadOnlyPseudoClassEv = comdat any

$_ZNK5blink7Element27MatchesReadWritePseudoClassEv = comdat any

$_ZNK5blink7Element28MatchesValidityPseudoClassesEv = comdat any

$_ZNK5blink7Element25ShouldAppearIndeterminateEv = comdat any

$_ZNK5blink7Element21IsDateTimeEditElementEv = comdat any

$_ZNK5blink7Element22IsDateTimeFieldElementEv = comdat any

$_ZNK5blink7Element24IsPickerIndicatorElementEv = comdat any

$_ZNK5blink7Element20IsFormControlElementEv = comdat any

$_ZNK5blink7Element19IsSpinButtonElementEv = comdat any

$_ZNK5blink7Element13IsTextControlEv = comdat any

$_ZNK5blink7Element21IsOptionalFormControlEv = comdat any

$_ZNK5blink7Element21IsRequiredFormControlEv = comdat any

$_ZNK5blink7Element12willValidateEv = comdat any

$_ZN5blink7Element14IsValidElementEv = comdat any

$_ZNK5blink7Element9IsInRangeEv = comdat any

$_ZNK5blink7Element12IsOutOfRangeEv = comdat any

$_ZNK5blink7Element20IsClearButtonElementEv = comdat any

$_ZNK5blink7Element15IsScriptElementEv = comdat any

$_ZNK5blink7Element21IsVTTCueBackgroundBoxEv = comdat any

$_ZNK5blink7Element20IsSliderThumbElementEv = comdat any

$_ZNK5blink7Element25HasNonInBodyInsertionModeEv = comdat any

$_ZNK5blink7Element21IsDisabledFormControlEv = comdat any

$_ZNK5blink7Element11IsAdRelatedEv = comdat any

$_ZNK5blink7Element16GetNamedItemTypeEv = comdat any

$_ZN5blink7Element22ParserDidSetAttributesEv = comdat any

$_ZNK5blink7Element23AreAuthorShadowsAllowedEv = comdat any

$_ZN5blink7Element25DidAddUserAgentShadowRootERNS_10ShadowRootE = comdat any

$_ZNK5blink7Element31AlwaysCreateUserAgentShadowRootEv = comdat any

$_ZNK5blink7Element27TypeShouldForceLegacyLayoutEv = comdat any

$_ZNK5blink10SVGElement20IsSVGGeometryElementEv = comdat any

$_ZNK5blink10SVGElement20IsSVGGraphicsElementEv = comdat any

$_ZNK5blink10SVGElement14IsFilterEffectEv = comdat any

$_ZNK5blink10SVGElement13IsTextContentEv = comdat any

$_ZNK5blink10SVGElement17IsTextPositioningEv = comdat any

$_ZNK5blink10SVGElement22IsStructurallyExternalEv = comdat any

$_ZNK5blink19SVGAnimationElement7IsValidEv = comdat any

$_ZN5blink10SVGElement22AnimateMotionTransformEv = comdat any

$_ZNK5blink10SVGElement22SelfHasRelativeLengthsEv = comdat any

@_ZN5blink9svg_names17kAnimateMotionTagE = external local_unnamed_addr constant %"class.blink::SVGQualifiedName"*, align 8
@_ZTVN5blink23SVGAnimateMotionElementE = hidden unnamed_addr constant { [181 x i8*], [3 x i8*], [3 x i8*] } { [181 x i8*] [i8* null, i8* null, i8* bitcast (i8* (%"class.blink::ScriptWrappable"*)* @_ZNK5blink15ScriptWrappable18NameInHeapSnapshotEv to i8*), i8* bitcast (void (%"class.blink::SVGAnimateMotionElement"*)* @_ZN5blink23SVGAnimateMotionElementD2Ev to i8*), i8* bitcast (void (%"class.blink::SVGAnimateMotionElement"*)* @_ZN5blink23SVGAnimateMotionElementD0Ev to i8*), i8* bitcast (i1 (%"class.blink::ScriptWrappable"*)* @_ZNK5blink15ScriptWrappable18HasPendingActivityEv to i8*), i8* bitcast (i1 (%"class.blink::EventTarget"*)* @_ZNK5blink11EventTarget17HasEventListenersEv to i8*), i8* bitcast (void (%"class.blink::SVGSMILElement"*, %"class.blink::Visitor"*)* @_ZNK5blink14SVGSMILElement5TraceEPNS_7VisitorE to i8*), i8* bitcast (%"struct.blink::WrapperTypeInfo"* (%"class.blink::SVGAnimateMotionElement"*)* @_ZNK5blink23SVGAnimateMotionElement18GetWrapperTypeInfoEv to i8*), i8* bitcast (%"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)* @_ZN5blink15ScriptWrappable4WrapEPNS_11ScriptStateE to i8*), i8* bitcast (%"class.v8::Object"* (%"class.blink::ScriptWrappable"*, %"class.v8::Isolate"*, %"struct.blink::WrapperTypeInfo"*, %"class.v8::Object"*)* @_ZN5blink15ScriptWrappable20AssociateWithWrapperEPN2v87IsolateEPKNS_15WrapperTypeInfoENS1_5LocalINS1_6ObjectEEE to i8*), i8* bitcast (%"class.WTF::AtomicString"* (%"class.blink::Node"*)* @_ZNK5blink4Node13InterfaceNameEv to i8*), i8* bitcast (%"class.blink::ExecutionContext"* (%"class.blink::Node"*)* @_ZNK5blink4Node19GetExecutionContextEv to i8*), i8* bitcast (%"class.blink::Node"* (%"class.blink::Node"*)* @_ZN5blink4Node6ToNodeEv to i8*), i8* bitcast (%"class.blink::DOMWindow"* (%"class.blink::EventTarget"*)* @_ZNK5blink11EventTarget11ToDOMWindowEv to i8*), i8* bitcast (%"class.blink::LocalDOMWindow"* (%"class.blink::EventTarget"*)* @_ZNK5blink11EventTarget16ToLocalDOMWindowEv to i8*), i8* bitcast (%"class.blink::LocalDOMWindow"* (%"class.blink::EventTarget"*)* @_ZN5blink11EventTarget16ToLocalDOMWindowEv to i8*), i8* bitcast (%"class.blink::MessagePort"* (%"class.blink::EventTarget"*)* @_ZN5blink11EventTarget13ToMessagePortEv to i8*), i8* bitcast (%"class.blink::ServiceWorker"* (%"class.blink::EventTarget"*)* @_ZN5blink11EventTarget15ToServiceWorkerEv to i8*), i8* bitcast (%"class.blink::PortalHost"* (%"class.blink::EventTarget"*)* @_ZN5blink11EventTarget12ToPortalHostEv to i8*), i8* bitcast (void (%"class.blink::Node"*)* @_ZN5blink4Node23RemoveAllEventListenersEv to i8*), i8* bitcast (i1 (%"class.blink::EventTarget"*, %"class.blink::Event"*)* @_ZNK5blink11EventTarget15KeepEventInNodeERKNS_5EventE to i8*), i8* bitcast (i1 (%"class.blink::EventTarget"*)* @_ZNK5blink11EventTarget27IsWindowOrWorkerGlobalScopeEv to i8*), i8* bitcast (i1 (%"class.blink::EventTarget"*, %"class.WTF::AtomicString"*, %"class.blink::EventListener"*, %"class.blink::AddEventListenerOptionsResolved"*)* @_ZN5blink11EventTarget24AddEventListenerInternalERKN3WTF12AtomicStringEPNS_13EventListenerEPKNS_31AddEventListenerOptionsResolvedE to i8*), i8* bitcast (void (%"class.blink::SVGSMILElement"*, %"class.WTF::AtomicString"*, %"class.blink::RegisteredEventListener"*)* @_ZN5blink14SVGSMILElement18AddedEventListenerERKN3WTF12AtomicStringERNS_23RegisteredEventListenerE to i8*), i8* bitcast (void (%"class.blink::SVGElement"*, %"class.WTF::AtomicString"*, %"class.blink::RegisteredEventListener"*)* @_ZN5blink10SVGElement20RemovedEventListenerERKN3WTF12AtomicStringERKNS_23RegisteredEventListenerE to i8*), i8* bitcast (i32 (%"class.blink::Node"*, %"class.blink::Event"*)* @_ZN5blink4Node21DispatchEventInternalERNS_5EventE to i8*), i8* bitcast (%"class.blink::EventTargetData"* (%"class.blink::Node"*)* @_ZN5blink4Node18GetEventTargetDataEv to i8*), i8* bitcast (%"class.blink::EventTargetData"* (%"class.blink::Node"*)* @_ZN5blink4Node21EnsureEventTargetDataEv to i8*), i8* bitcast (%"class.WTF::StringImpl"* (%"class.blink::Element"*)* @_ZNK5blink7Element8nodeNameEv to i8*), i8* bitcast (%"class.WTF::StringImpl"* (%"class.blink::Node"*)* @_ZNK5blink4Node9nodeValueEv to i8*), i8* bitcast (void (%"class.blink::Node"*, %"class.WTF::String"*)* @_ZN5blink4Node12setNodeValueERKN3WTF6StringE to i8*), i8* bitcast (i32 (%"class.blink::Element"*)* @_ZNK5blink7Element11getNodeTypeEv to i8*), i8* bitcast (%"class.blink::Node"* (%"class.blink::Element"*, %"class.blink::Document"*, i32)* @_ZNK5blink7Element5CloneERNS_8DocumentENS_17CloneChildrenFlagE to i8*), i8* bitcast (void (%"class.blink::Node"*, %"class.WTF::String"*)* @_ZN5blink4Node14setTextContentERKN3WTF6StringE to i8*), i8* bitcast (void (%"class.blink::Node"*, %"class.blink::V8UnionStringOrTrustedScript"*, %"class.blink::ExceptionState"*)* @_ZN5blink4Node24setTextContentForBindingEPKNS_28V8UnionStringOrTrustedScriptERNS_14ExceptionStateE to i8*), i8* bitcast (i8 (%"class.blink::Node"*)* @_ZNK5blink4Node11GetPseudoIdEv to i8*), i8* bitcast (i1 (%"class.blink::Node"*)* @_ZNK5blink4Node21IsMediaControlElementEv to i8*), i8* bitcast (i1 (%"class.blink::Node"*)* @_ZNK5blink4Node15IsMediaControlsEv to i8*), i8* bitcast (i1 (%"class.blink::Node"*)* @_ZNK5blink4Node14IsMediaElementEv to i8*), i8* bitcast (i1 (%"class.blink::Node"*)* @_ZNK5blink4Node20IsTextTrackContainerEv to i8*), i8* bitcast (i1 (%"class.blink::Node"*)* @_ZNK5blink4Node12IsVTTElementEv to i8*), i8* bitcast (i1 (%"class.blink::Node"*)* @_ZNK5blink4Node15IsAttributeNodeEv to i8*), i8* bitcast (i1 (%"class.blink::Node"*)* @_ZNK5blink4Node19IsCharacterDataNodeEv to i8*), i8* bitcast (i1 (%"class.blink::Node"*)* @_ZNK5blink4Node19IsFrameOwnerElementEv to i8*), i8* bitcast (i1 (%"class.blink::Node"*)* @_ZNK5blink4Node27IsMediaRemotingInterstitialEv to i8*), i8* bitcast (i1 (%"class.blink::Node"*)* @_ZNK5blink4Node30IsPictureInPictureInterstitialEv to i8*), i8* bitcast (i1 (%"class.blink::Element"*)* @_ZNK5blink7Element23CanContainRangeEndPointEv to i8*), i8* bitcast (i1 (%"class.blink::Node"*)* @_ZN5blink4Node11SheetLoadedEv to i8*), i8* bitcast (void (%"class.blink::Node"*, i32)* @_ZN5blink4Node43NotifyLoadedSheetAndAllCriticalSubresourcesENS0_22LoadedSheetErrorStatusE to i8*), i8* bitcast (void (%"class.blink::Node"*)* @_ZN5blink4Node24StartLoadingDynamicSheetEv to i8*), i8* bitcast (void (%"class.blink::ContainerNode"*, i1, i32)* @_ZN5blink13ContainerNode10SetFocusedEbNS_5mojom9FocusTypeE to i8*), i8* bitcast (void (%"class.blink::ContainerNode"*, i1)* @_ZN5blink13ContainerNode10SetDraggedEb to i8*), i8* bitcast (i1 (%"class.blink::Node"*)* @_ZNK5blink4Node25ShouldHaveFocusAppearanceEv to i8*), i8* bitcast (void ()* @_ZNK5blink13ContainerNode11BoundingBoxEv to i8*), i8* bitcast (i1 (%"class.blink::Element"*, i32)* @_ZNK5blink7Element16ChildTypeAllowedENS_4Node8NodeTypeE to i8*), i8* bitcast (i1 (%"class.blink::Node"*)* @_ZNK5blink4Node17CanStartSelectionEv to i8*), i8* bitcast (void (%"class.blink::Element"*, %"struct.blink::Node::AttachContext"*)* @_ZN5blink7Element16AttachLayoutTreeERNS_4Node13AttachContextE to i8*), i8* bitcast (void (%"class.blink::SVGElement"*, i1)* @_ZN5blink10SVGElement16DetachLayoutTreeEb to i8*), i8* bitcast (i32 (%"class.blink::SVGSMILElement"*, %"class.blink::ContainerNode"*)* @_ZN5blink14SVGSMILElement12InsertedIntoERNS_13ContainerNodeE to i8*), i8* bitcast (void (%"class.blink::Node"*)* @_ZN5blink4Node36DidNotifySubtreeInsertionsToDocumentEv to i8*), i8* bitcast (void (%"class.blink::SVGSMILElement"*, %"class.blink::ContainerNode"*)* @_ZN5blink14SVGSMILElement11RemovedFromERNS_13ContainerNodeE to i8*), i8* bitcast (i1 (%"class.blink::Node"*)* @_ZN5blink4Node28WillRespondToMouseMoveEventsEv to i8*), i8* bitcast (i1 (%"class.blink::Node"*)* @_ZN5blink4Node29WillRespondToMouseClickEventsEv to i8*), i8* bitcast (%"class.blink::EventDispatchHandlingState"* (%"class.blink::Node"*, %"class.blink::Event"*)* @_ZN5blink4Node23PreDispatchEventHandlerERNS_5EventE to i8*), i8* bitcast (void (%"class.blink::Node"*, %"class.blink::Event"*, %"class.blink::EventDispatchHandlingState"*)* @_ZN5blink4Node24PostDispatchEventHandlerERNS_5EventEPNS_26EventDispatchHandlingStateE to i8*), i8* bitcast (void (%"class.blink::Node"*, %"class.blink::Event"*)* @_ZN5blink4Node17HandleLocalEventsERNS_5EventE to i8*), i8* bitcast (void (%"class.blink::Node"*, %"class.blink::Event"*)* @_ZN5blink4Node19DefaultEventHandlerERNS_5EventE to i8*), i8* bitcast (i1 (%"class.blink::Node"*)* @_ZNK5blink4Node21HasActivationBehaviorEv to i8*), i8* bitcast (%"class.blink::LayoutBox"* (%"class.blink::Node"*)* @_ZN5blink4Node13AutoscrollBoxEv to i8*), i8* bitcast (void (%"class.blink::Node"*)* @_ZN5blink4Node14StopAutoscrollEv to i8*), i8* bitcast (void (%"class.blink::Element"*, %"class.blink::Document"*)* @_ZN5blink7Element20DidMoveToNewDocumentERNS_8DocumentE to i8*), i8* bitcast (%"class.WTF::StringImpl"* (%"class.blink::Node"*)* @_ZNK5blink4Node13DebugNodeNameEv to i8*), i8* bitcast (%"class.blink::ComputedStyle"* (%"class.blink::Element"*, i8, %"class.WTF::AtomicString"*)* @_ZN5blink7Element26VirtualEnsureComputedStyleENS_8PseudoIdERKN3WTF12AtomicStringE to i8*), i8* bitcast (void (%"class.blink::SVGElement"*, %"struct.blink::ContainerNode::ChildrenChange"*)* @_ZN5blink10SVGElement15ChildrenChangedERKNS_13ContainerNode14ChildrenChangeE to i8*), i8* bitcast (i1 (%"class.blink::ContainerNode"*)* @_ZNK5blink13ContainerNode42ChildrenChangedAllChildrenRemovedNeedsListEv to i8*), i8* bitcast (i1 (%"class.blink::ContainerNode"*)* @_ZNK5blink13ContainerNode20ChildrenCanHaveStyleEv to i8*), i8* bitcast (%"class.blink::LayoutBox"* (%"class.blink::Element"*)* @_ZNK5blink7Element24GetLayoutBoxForScrollingEv to i8*), i8* bitcast (%"class.blink::Element"* (%"class.blink::Element"*)* @_ZN5blink7Element18GetAnimationTargetEv to i8*), i8* bitcast (%"class.WTF::HashMap.362"* (%"class.blink::Element"*)* @_ZNK5blink7Element24GetCheckedAttributeTypesEv to i8*), i8* bitcast (i32 (%"class.blink::Element"*)* @_ZN5blink7Element11scrollWidthEv to i8*), i8* bitcast (i32 (%"class.blink::Element"*)* @_ZN5blink7Element12scrollHeightEv to i8*), i8* bitcast (%"class.blink::CSSPropertyValueSet"* (%"class.blink::Element"*)* @_ZN5blink7Element36AdditionalPresentationAttributeStyleEv to i8*), i8* bitcast (i1 (%"class.blink::SVGSMILElement"*, %"class.blink::QualifiedName"*)* @_ZNK5blink14SVGSMILElement23IsPresentationAttributeERKNS_13QualifiedNameE to i8*), i8* bitcast (void (%"class.blink::SVGElement"*, %"class.blink::QualifiedName"*, %"class.WTF::AtomicString"*, %"class.blink::MutableCSSPropertyValueSet"*)* @_ZN5blink10SVGElement36CollectStyleForPresentationAttributeERKNS_13QualifiedNameERKN3WTF12AtomicStringEPNS_26MutableCSSPropertyValueSetE to i8*), i8* bitcast (i1 (%"class.blink::Element"*)* @_ZNK5blink7Element37HasExtraStyleForPresentationAttributeEv to i8*), i8* bitcast (void (%"class.blink::SVGElement"*, %"class.blink::MutableCSSPropertyValueSet"*)* @_ZN5blink10SVGElement41CollectExtraStyleForPresentationAttributeEPNS_26MutableCSSPropertyValueSetE to i8*), i8* bitcast (void (%"class.blink::SVGElement"*, %"struct.blink::Element::AttributeModificationParams"*)* @_ZN5blink10SVGElement16AttributeChangedERKNS_7Element27AttributeModificationParamsE to i8*), i8* bitcast (void (%"class.blink::SVGAnimateMotionElement"*, %"struct.blink::Element::AttributeModificationParams"*)* @_ZN5blink23SVGAnimateMotionElement14ParseAttributeERKNS_7Element27AttributeModificationParamsE to i8*), i8* bitcast (i1 (%"class.blink::Element"*, %"class.blink::QualifiedName"*)* @_ZNK5blink7Element21HasLegalLinkAttributeERKNS_13QualifiedNameE to i8*), i8* bitcast (%"class.blink::QualifiedName"* (%"class.blink::Element"*)* @_ZNK5blink7Element24SubResourceAttributeNameEv to i8*), i8* bitcast (void (%"class.blink::Element"*, %"class.blink::Element"*, i32)* @_ZN5blink7Element31CloneNonAttributePropertiesFromERKS0_NS_17CloneChildrenFlagE to i8*), i8* bitcast (%"class.blink::LayoutObject"* (%"class.blink::Element"*, %"class.blink::ComputedStyle"*, i32)* @_ZN5blink7Element18CreateLayoutObjectERKNS_13ComputedStyleENS_12LegacyLayoutE to i8*), i8* bitcast (i1 (%"class.blink::SVGSMILElement"*, %"class.blink::ComputedStyle"*)* @_ZNK5blink14SVGSMILElement20LayoutObjectIsNeededERKNS_13ComputedStyleE to i8*), i8* bitcast (void (%"class.blink::SVGElement"*, i32)* @_ZN5blink10SVGElement15AccessKeyActionENS_27SimulatedClickCreationScopeE to i8*), i8* bitcast (i1 (%"class.blink::Element"*, %"class.blink::Attribute"*)* @_ZNK5blink7Element14IsURLAttributeERKNS_9AttributeE to i8*), i8* bitcast (i1 (%"class.blink::Element"*, %"class.blink::Attribute"*)* @_ZNK5blink7Element22IsHTMLContentAttributeERKNS_9AttributeE to i8*), i8* bitcast (i1 (%"class.blink::Element"*, %"class.blink::Attribute"*)* @_ZNK5blink7Element43IsSVGAnimationAttributeSettingJavaScriptURLERKNS_9AttributeE to i8*), i8* bitcast (i1 (%"class.blink::Element"*)* @_ZNK5blink7Element10IsLiveLinkEv to i8*), i8* bitcast (%"class.WTF::StringImpl"* (%"class.blink::Element"*)* @_ZNK5blink7Element14ImageSourceURLEv to i8*), i8* bitcast (%"class.blink::Image"* (%"class.blink::Element"*)* @_ZN5blink7Element13ImageContentsEv to i8*), i8* bitcast (void (%"class.blink::Element"*, %"struct.blink::FocusParams"*)* @_ZN5blink7Element5focusERKNS_11FocusParamsE to i8*), i8* bitcast (void (%"class.blink::Element"*, i32, %"class.blink::FocusOptions"*)* @_ZN5blink7Element32UpdateFocusAppearanceWithOptionsENS_24SelectionBehaviorOnFocusEPKNS_12FocusOptionsE to i8*), i8* bitcast (void (%"class.blink::Element"*)* @_ZN5blink7Element4blurEv to i8*), i8* bitcast (i1 (%"class.blink::SVGElement"*)* @_ZNK5blink10SVGElement13SupportsFocusEv to i8*), i8* bitcast (i1 (%"class.blink::Element"*)* @_ZNK5blink7Element19IsKeyboardFocusableEv to i8*), i8* bitcast (i1 (%"class.blink::Element"*)* @_ZNK5blink7Element16IsMouseFocusableEv to i8*), i8* bitcast (void (%"class.blink::Element"*, %"class.blink::Element"*, i32, %"class.blink::InputDeviceCapabilities"*)* @_ZN5blink7Element18DispatchFocusEventEPS0_NS_5mojom9FocusTypeEPNS_23InputDeviceCapabilitiesE to i8*), i8* bitcast (void (%"class.blink::Element"*, %"class.blink::Element"*, i32, %"class.blink::InputDeviceCapabilities"*)* @_ZN5blink7Element17DispatchBlurEventEPS0_NS_5mojom9FocusTypeEPNS_23InputDeviceCapabilitiesE to i8*), i8* bitcast (void (%"class.blink::Element"*, %"class.WTF::AtomicString"*, %"class.blink::Element"*, i32, %"class.blink::InputDeviceCapabilities"*)* @_ZN5blink7Element20DispatchFocusInEventERKN3WTF12AtomicStringEPS0_NS_5mojom9FocusTypeEPNS_23InputDeviceCapabilitiesE to i8*), i8* bitcast (%"class.WTF::StringImpl"* (%"class.blink::SVGElement"*)* @_ZNK5blink10SVGElement5titleEv to i8*), i8* bitcast (%"class.WTF::StringImpl"* (%"class.blink::Element"*)* @_ZNK5blink7Element14DefaultToolTipEv to i8*), i8* bitcast (%"class.WTF::AtomicString"* (%"class.blink::Element"*)* @_ZNK5blink7Element14ShadowPseudoIdEv to i8*), i8* bitcast (void (%"class.blink::Element"*)* @_ZN5blink7Element21FinishParsingChildrenEv to i8*), i8* bitcast (void (%"class.blink::Element"*)* @_ZN5blink7Element20BeginParsingChildrenEv to i8*), i8* bitcast (i1 (%"class.blink::Element"*, i8)* @_ZNK5blink7Element24CanGeneratePseudoElementENS_8PseudoIdE to i8*), i8* bitcast (i1 (%"class.blink::Element"*)* @_ZNK5blink7Element25MatchesDefaultPseudoClassEv to i8*), i8* bitcast (i1 (%"class.blink::Element"*)* @_ZNK5blink7Element25MatchesEnabledPseudoClassEv to i8*), i8* bitcast (i1 (%"class.blink::Element"*)* @_ZNK5blink7Element26MatchesReadOnlyPseudoClassEv to i8*), i8* bitcast (i1 (%"class.blink::Element"*)* @_ZNK5blink7Element27MatchesReadWritePseudoClassEv to i8*), i8* bitcast (i1 (%"class.blink::Element"*)* @_ZNK5blink7Element28MatchesValidityPseudoClassesEv to i8*), i8* bitcast (i1 (%"class.blink::Element"*)* @_ZNK5blink7Element25MayTriggerVirtualKeyboardEv to i8*), i8* bitcast (i1 (%"class.blink::Element"*)* @_ZNK5blink7Element25ShouldAppearIndeterminateEv to i8*), i8* bitcast (i1 (%"class.blink::Element"*)* @_ZNK5blink7Element21IsDateTimeEditElementEv to i8*), i8* bitcast (i1 (%"class.blink::Element"*)* @_ZNK5blink7Element22IsDateTimeFieldElementEv to i8*), i8* bitcast (i1 (%"class.blink::Element"*)* @_ZNK5blink7Element24IsPickerIndicatorElementEv to i8*), i8* bitcast (i1 (%"class.blink::Element"*)* @_ZNK5blink7Element20IsFormControlElementEv to i8*), i8* bitcast (i1 (%"class.blink::Element"*)* @_ZNK5blink7Element19IsSpinButtonElementEv to i8*), i8* bitcast (i1 (%"class.blink::Element"*)* @_ZNK5blink7Element13IsTextControlEv to i8*), i8* bitcast (i1 (%"class.blink::Element"*)* @_ZNK5blink7Element21IsOptionalFormControlEv to i8*), i8* bitcast (i1 (%"class.blink::Element"*)* @_ZNK5blink7Element21IsRequiredFormControlEv to i8*), i8* bitcast (i1 (%"class.blink::Element"*)* @_ZNK5blink7Element12willValidateEv to i8*), i8* bitcast (i1 (%"class.blink::Element"*)* @_ZN5blink7Element14IsValidElementEv to i8*), i8* bitcast (i1 (%"class.blink::Element"*)* @_ZNK5blink7Element9IsInRangeEv to i8*), i8* bitcast (i1 (%"class.blink::Element"*)* @_ZNK5blink7Element12IsOutOfRangeEv to i8*), i8* bitcast (i1 (%"class.blink::Element"*)* @_ZNK5blink7Element20IsClearButtonElementEv to i8*), i8* bitcast (i1 (%"class.blink::Element"*)* @_ZNK5blink7Element15IsScriptElementEv to i8*), i8* bitcast (i1 (%"class.blink::Element"*)* @_ZNK5blink7Element21IsVTTCueBackgroundBoxEv to i8*), i8* bitcast (i1 (%"class.blink::Element"*)* @_ZNK5blink7Element20IsSliderThumbElementEv to i8*), i8* bitcast (i1 (%"class.blink::Element"*)* @_ZNK5blink7Element25HasNonInBodyInsertionModeEv to i8*), i8* bitcast (i1 (%"class.blink::Element"*)* @_ZNK5blink7Element21IsDisabledFormControlEv to i8*), i8* bitcast (void (%"class.blink::SVGSMILElement"*)* @_ZN5blink14SVGSMILElement20BuildPendingResourceEv to i8*), i8* bitcast (void (%"class.blink::Element"*, i1)* @_ZN5blink7Element9SetActiveEb to i8*), i8* bitcast (void (%"class.blink::Element"*, i1)* @_ZN5blink7Element10SetHoveredEb to i8*), i8* bitcast (i1 (%"class.blink::Element"*)* @_ZNK5blink7Element11IsAdRelatedEv to i8*), i8* bitcast (void (%"class.blink::SVGElement"*, i64)* @_ZN5blink10SVGElement15WillRecalcStyleENS_17StyleRecalcChangeE to i8*), i8* bitcast (void (%"class.blink::Element"*, i64)* @_ZN5blink7Element14DidRecalcStyleENS_17StyleRecalcChangeE to i8*), i8* bitcast (void ()* @_ZN5blink10SVGElement26CustomStyleForLayoutObjectERKNS_18StyleRecalcContextE to i8*), i8* bitcast (i32 (%"class.blink::Element"*)* @_ZNK5blink7Element16GetNamedItemTypeEv to i8*), i8* bitcast (i1 (%"class.blink::Element"*)* @_ZNK5blink7Element16IsFocusableStyleEv to i8*), i8* bitcast (void (%"class.blink::Element"*)* @_ZN5blink7Element22ParserDidSetAttributesEv to i8*), i8* bitcast (i1 (%"class.blink::Element"*)* @_ZNK5blink7Element23AreAuthorShadowsAllowedEv to i8*), i8* bitcast (void (%"class.blink::Element"*, %"class.blink::ShadowRoot"*)* @_ZN5blink7Element25DidAddUserAgentShadowRootERNS_10ShadowRootE to i8*), i8* bitcast (i1 (%"class.blink::Element"*)* @_ZNK5blink7Element31AlwaysCreateUserAgentShadowRootEv to i8*), i8* bitcast (i32 (%"class.blink::Element"*)* @_ZNK5blink7Element15DefaultTabIndexEv to i8*), i8* bitcast (%"class.blink::Element"* (%"class.blink::Element"*, %"class.blink::Document"*)* @_ZNK5blink7Element33CloneWithoutAttributesAndChildrenERNS_8DocumentE to i8*), i8* bitcast (i1 (%"class.blink::Element"*)* @_ZNK5blink7Element27TypeShouldForceLegacyLayoutEv to i8*), i8* bitcast (void (%"class.blink::AffineTransform"*, %"class.blink::SVGElement"*, i32)* @_ZNK5blink10SVGElement29LocalCoordinateSpaceTransformENS0_8CTMScopeE to i8*), i8* bitcast (i1 (%"class.blink::SVGElement"*)* @_ZNK5blink10SVGElement20IsSVGGeometryElementEv to i8*), i8* bitcast (i1 (%"class.blink::SVGElement"*)* @_ZNK5blink10SVGElement20IsSVGGraphicsElementEv to i8*), i8* bitcast (i1 (%"class.blink::SVGElement"*)* @_ZNK5blink10SVGElement14IsFilterEffectEv to i8*), i8* bitcast (i1 (%"class.blink::SVGElement"*)* @_ZNK5blink10SVGElement13IsTextContentEv to i8*), i8* bitcast (i1 (%"class.blink::SVGElement"*)* @_ZNK5blink10SVGElement17IsTextPositioningEv to i8*), i8* bitcast (i1 (%"class.blink::SVGElement"*)* @_ZNK5blink10SVGElement22IsStructurallyExternalEv to i8*), i8* bitcast (i1 (%"class.blink::SVGAnimationElement"*)* @_ZNK5blink19SVGAnimationElement7IsValidEv to i8*), i8* bitcast (void (%"class.blink::SVGSMILElement"*, %"struct.blink::SVGElement::SvgAttributeChangedParams"*)* @_ZN5blink14SVGSMILElement19SvgAttributeChangedERKNS_10SVGElement25SvgAttributeChangedParamsE to i8*), i8* bitcast (%"class.blink::AffineTransform"* (%"class.blink::SVGElement"*)* @_ZN5blink10SVGElement22AnimateMotionTransformEv to i8*), i8* bitcast (i1 (%"class.blink::SVGElement"*)* @_ZN5blink10SVGElement27HaveLoadedRequiredResourcesEv to i8*), i8* bitcast (i1 (%"class.blink::SVGElement"*)* @_ZNK5blink10SVGElement22SelfHasRelativeLengthsEv to i8*), i8* bitcast (void (%"class.blink::SVGAnimateMotionElement"*)* @_ZN5blink23SVGAnimateMotionElement25WillChangeAnimationTargetEv to i8*), i8* bitcast (void (%"class.blink::SVGAnimateMotionElement"*)* @_ZN5blink23SVGAnimateMotionElement24DidChangeAnimationTargetEv to i8*), i8* bitcast (void (%"struct.blink::SMILAnimationValue"*, %"class.blink::SVGAnimateMotionElement"*)* @_ZNK5blink23SVGAnimateMotionElement20CreateAnimationValueEv to i8*), i8* bitcast (void (%"class.blink::SVGAnimateMotionElement"*, %"struct.blink::SMILAnimationValue"*)* @_ZN5blink23SVGAnimateMotionElement20ApplyResultsToTargetERKNS_18SMILAnimationValueE to i8*), i8* bitcast (void (%"class.blink::SVGAnimateMotionElement"*)* @_ZN5blink23SVGAnimateMotionElement19ClearAnimationValueEv to i8*), i8* bitcast (void (%"class.blink::SVGAnimateMotionElement"*)* @_ZN5blink23SVGAnimateMotionElement19UpdateAnimationModeEv to i8*), i8* bitcast (i1 (%"class.blink::SVGAnimateMotionElement"*)* @_ZNK5blink23SVGAnimateMotionElement17HasValidAnimationEv to i8*), i8* bitcast (i1 (%"class.blink::SVGAnimateMotionElement"*, %"class.WTF::String"*)* @_ZN5blink23SVGAnimateMotionElement31CalculateToAtEndOfDurationValueERKN3WTF6StringE to i8*), i8* bitcast (i1 (%"class.blink::SVGAnimateMotionElement"*, %"class.WTF::String"*, %"class.WTF::String"*)* @_ZN5blink23SVGAnimateMotionElement24CalculateFromAndToValuesERKN3WTF6StringES4_ to i8*), i8* bitcast (i1 (%"class.blink::SVGAnimateMotionElement"*, %"class.WTF::String"*, %"class.WTF::String"*)* @_ZN5blink23SVGAnimateMotionElement24CalculateFromAndByValuesERKN3WTF6StringES4_ to i8*), i8* bitcast (void (%"class.blink::SVGAnimateMotionElement"*, %"struct.blink::SMILAnimationValue"*, float, i32)* @_ZNK5blink23SVGAnimateMotionElement23CalculateAnimationValueERNS_18SMILAnimationValueEfj to i8*), i8* bitcast (float (%"class.blink::SVGAnimateMotionElement"*, %"class.WTF::String"*, %"class.WTF::String"*)* @_ZN5blink23SVGAnimateMotionElement17CalculateDistanceERKN3WTF6StringES4_ to i8*)], [3 x i8*] [i8* inttoptr (i64 -80 to i8*), i8* null, i8* bitcast (%"class.blink::Element"* (%"class.blink::Element"*)* @_ZThn80_N5blink7Element18GetAnimationTargetEv to i8*)], [3 x i8*] [i8* inttoptr (i64 -168 to i8*), i8* null, i8* bitcast (void (%"class.blink::SVGSMILElement"*, %"class.blink::Visitor"*)* @_ZThn168_NK5blink14SVGSMILElement5TraceEPNS_7VisitorE to i8*)] }, align 8
@_ZN5blink9svg_names9kPathAttrE = external local_unnamed_addr constant %"class.blink::QualifiedName"*, align 8
@_ZZNK5blink23SVGAnimateMotionElement13GetRotateModeEvE10s_auto_val = internal global %"class.WTF::StaticSingleton" zeroinitializer, align 8
@_ZGVZNK5blink23SVGAnimateMotionElement13GetRotateModeEvE10s_auto_val = internal global i64 0, align 8
@_ZZNK5blink23SVGAnimateMotionElement13GetRotateModeEvE14s_auto_reverse = internal global %"class.WTF::StaticSingleton" zeroinitializer, align 8
@_ZGVZNK5blink23SVGAnimateMotionElement13GetRotateModeEvE14s_auto_reverse = internal global i64 0, align 8
@_ZN5blink9svg_names11kRotateAttrE = external local_unnamed_addr constant %"class.blink::QualifiedName"*, align 8
@_ZTVN5blink19SVGAnimationElementE = external unnamed_addr constant { [181 x i8*], [3 x i8*], [3 x i8*] }, align 8
@_ZN5blink9svg_names5kGTagE = external local_unnamed_addr constant %"class.blink::SVGQualifiedName"*, align 8
@_ZN5blink9svg_names8kDefsTagE = external local_unnamed_addr constant %"class.blink::SVGQualifiedName"*, align 8
@_ZN5blink9svg_names7kUseTagE = external local_unnamed_addr constant %"class.blink::SVGQualifiedName"*, align 8
@_ZN5blink9svg_names9kImageTagE = external local_unnamed_addr constant %"class.blink::SVGQualifiedName"*, align 8
@_ZN5blink9svg_names10kSwitchTagE = external local_unnamed_addr constant %"class.blink::SVGQualifiedName"*, align 8
@_ZN5blink9svg_names8kPathTagE = external local_unnamed_addr constant %"class.blink::SVGQualifiedName"*, align 8
@_ZN5blink9svg_names8kRectTagE = external local_unnamed_addr constant %"class.blink::SVGQualifiedName"*, align 8
@_ZN5blink9svg_names10kCircleTagE = external local_unnamed_addr constant %"class.blink::SVGQualifiedName"*, align 8
@_ZN5blink9svg_names11kEllipseTagE = external local_unnamed_addr constant %"class.blink::SVGQualifiedName"*, align 8
@_ZN5blink9svg_names8kLineTagE = external local_unnamed_addr constant %"class.blink::SVGQualifiedName"*, align 8
@_ZN5blink9svg_names12kPolylineTagE = external local_unnamed_addr constant %"class.blink::SVGQualifiedName"*, align 8
@_ZN5blink9svg_names11kPolygonTagE = external local_unnamed_addr constant %"class.blink::SVGQualifiedName"*, align 8
@_ZN5blink9svg_names8kTextTagE = external local_unnamed_addr constant %"class.blink::SVGQualifiedName"*, align 8
@_ZN5blink9svg_names12kClipPathTagE = external local_unnamed_addr constant %"class.blink::SVGQualifiedName"*, align 8
@_ZN5blink9svg_names8kMaskTagE = external local_unnamed_addr constant %"class.blink::SVGQualifiedName"*, align 8
@_ZN5blink9svg_names5kATagE = external local_unnamed_addr constant %"class.blink::SVGQualifiedName"*, align 8
@_ZN5blink9svg_names17kForeignObjectTagE = external local_unnamed_addr constant %"class.blink::SVGQualifiedName"*, align 8
@_ZN3WTF10StringImpl6empty_E = external local_unnamed_addr global %"class.WTF::StringImpl"*, align 8
@_ZN5blink23SVGAnimateMotionElement18wrapper_type_info_E = external local_unnamed_addr constant %"struct.blink::WrapperTypeInfo"*, align 8
@.str = private unnamed_addr constant [5 x i8] c"auto\00", align 1
@.str.1 = private unnamed_addr constant [13 x i8] c"auto-reverse\00", align 1
@_ZN5blink9svg_names9kMPathTagE = external local_unnamed_addr constant %"class.blink::SVGQualifiedName"*, align 8

@_ZN5blink23SVGAnimateMotionElementC1ERNS_8DocumentE = hidden unnamed_addr alias void (%"class.blink::SVGAnimateMotionElement"*, %"class.blink::Document"*), void (%"class.blink::SVGAnimateMotionElement"*, %"class.blink::Document"*)* @_ZN5blink23SVGAnimateMotionElementC2ERNS_8DocumentE
@_ZN5blink23SVGAnimateMotionElementD1Ev = hidden unnamed_addr alias void (%"class.blink::SVGAnimateMotionElement"*), void (%"class.blink::SVGAnimateMotionElement"*)* @_ZN5blink23SVGAnimateMotionElementD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink23SVGAnimateMotionElementC2ERNS_8DocumentE(%"class.blink::SVGAnimateMotionElement"*, %"class.blink::Document"*) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::SVGAnimateMotionElement", %"class.blink::SVGAnimateMotionElement"* %0, i64 0, i32 0
  %4 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** bitcast (%"class.blink::SVGQualifiedName"** @_ZN5blink9svg_names17kAnimateMotionTagE to %"class.blink::QualifiedName"**), align 8
  tail call void @_ZN5blink19SVGAnimationElementC2ERKNS_13QualifiedNameERNS_8DocumentE(%"class.blink::SVGAnimationElement"* %3, %"class.blink::QualifiedName"* dereferenceable(8) %4, %"class.blink::Document"* %1) #8
  %5 = getelementptr inbounds %"class.blink::SVGAnimateMotionElement", %"class.blink::SVGAnimateMotionElement"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [181 x i8*], [3 x i8*], [3 x i8*] }, { [181 x i8*], [3 x i8*], [3 x i8*] }* @_ZTVN5blink23SVGAnimateMotionElementE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %5, align 8
  %6 = getelementptr inbounds %"class.blink::SVGAnimateMotionElement", %"class.blink::SVGAnimateMotionElement"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [181 x i8*], [3 x i8*], [3 x i8*] }, { [181 x i8*], [3 x i8*], [3 x i8*] }* @_ZTVN5blink23SVGAnimateMotionElementE, i64 0, inrange i32 1, i64 2) to i32 (...)**), i32 (...)*** %6, align 8
  %7 = getelementptr inbounds %"class.blink::SVGAnimateMotionElement", %"class.blink::SVGAnimateMotionElement"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [181 x i8*], [3 x i8*], [3 x i8*] }, { [181 x i8*], [3 x i8*], [3 x i8*] }* @_ZTVN5blink23SVGAnimateMotionElementE, i64 0, inrange i32 2, i64 2) to i32 (...)**), i32 (...)*** %7, align 8
  %8 = getelementptr inbounds %"class.blink::SVGAnimateMotionElement", %"class.blink::SVGAnimateMotionElement"* %0, i64 0, i32 1, i32 0
  %9 = getelementptr inbounds %"class.blink::SVGAnimateMotionElement", %"class.blink::SVGAnimateMotionElement"* %0, i64 0, i32 4
  %10 = bitcast float* %8 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %10, i8 0, i64 24, i1 false)
  tail call void @_ZN5blink4PathC1Ev(%"class.blink::Path"* %9) #8
  %11 = getelementptr inbounds %"class.blink::SVGAnimateMotionElement", %"class.blink::SVGAnimateMotionElement"* %0, i64 0, i32 5
  tail call void @_ZN5blink4PathC1Ev(%"class.blink::Path"* %11) #8
  %12 = getelementptr inbounds %"class.blink::SVGAnimateMotionElement", %"class.blink::SVGAnimateMotionElement"* %0, i64 0, i32 0, i32 3
  store i8 0, i8* %12, align 1
  %13 = getelementptr inbounds %"class.blink::SVGAnimateMotionElement", %"class.blink::SVGAnimateMotionElement"* %0, i64 0, i32 0, i32 11
  store i32 2, i32* %13, align 8
  ret void
}

declare void @_ZN5blink19SVGAnimationElementC2ERKNS_13QualifiedNameERNS_8DocumentE(%"class.blink::SVGAnimationElement"*, %"class.blink::QualifiedName"* dereferenceable(8), %"class.blink::Document"*) unnamed_addr #1

declare void @_ZN5blink4PathC1Ev(%"class.blink::Path"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink23SVGAnimateMotionElementD2Ev(%"class.blink::SVGAnimateMotionElement"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::SVGAnimateMotionElement", %"class.blink::SVGAnimateMotionElement"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [181 x i8*], [3 x i8*], [3 x i8*] }, { [181 x i8*], [3 x i8*], [3 x i8*] }* @_ZTVN5blink23SVGAnimateMotionElementE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.blink::SVGAnimateMotionElement", %"class.blink::SVGAnimateMotionElement"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [181 x i8*], [3 x i8*], [3 x i8*] }, { [181 x i8*], [3 x i8*], [3 x i8*] }* @_ZTVN5blink23SVGAnimateMotionElementE, i64 0, inrange i32 1, i64 2) to i32 (...)**), i32 (...)*** %3, align 8
  %4 = getelementptr inbounds %"class.blink::SVGAnimateMotionElement", %"class.blink::SVGAnimateMotionElement"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [181 x i8*], [3 x i8*], [3 x i8*] }, { [181 x i8*], [3 x i8*], [3 x i8*] }* @_ZTVN5blink23SVGAnimateMotionElementE, i64 0, inrange i32 2, i64 2) to i32 (...)**), i32 (...)*** %4, align 8
  %5 = getelementptr inbounds %"class.blink::SVGAnimateMotionElement", %"class.blink::SVGAnimateMotionElement"* %0, i64 0, i32 5
  tail call void @_ZN5blink4PathD1Ev(%"class.blink::Path"* %5) #8
  %6 = getelementptr inbounds %"class.blink::SVGAnimateMotionElement", %"class.blink::SVGAnimateMotionElement"* %0, i64 0, i32 4
  tail call void @_ZN5blink4PathD1Ev(%"class.blink::Path"* %6) #8
  %7 = getelementptr inbounds %"class.blink::SVGAnimateMotionElement", %"class.blink::SVGAnimateMotionElement"* %0, i64 0, i32 0
  tail call void @_ZN5blink19SVGAnimationElementD2Ev(%"class.blink::SVGAnimationElement"* %7) #8
  ret void
}

; Function Attrs: nounwind
declare void @_ZN5blink4PathD1Ev(%"class.blink::Path"*) unnamed_addr #2

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink19SVGAnimationElementD2Ev(%"class.blink::SVGAnimationElement"*) unnamed_addr #3 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::SVGAnimationElement", %"class.blink::SVGAnimationElement"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [181 x i8*], [3 x i8*], [3 x i8*] }, { [181 x i8*], [3 x i8*], [3 x i8*] }* @_ZTVN5blink19SVGAnimationElementE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.blink::SVGAnimationElement", %"class.blink::SVGAnimationElement"* %0, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [181 x i8*], [3 x i8*], [3 x i8*] }, { [181 x i8*], [3 x i8*], [3 x i8*] }* @_ZTVN5blink19SVGAnimationElementE, i64 0, inrange i32 1, i64 2) to i32 (...)**), i32 (...)*** %3, align 8
  %4 = getelementptr inbounds %"class.blink::SVGAnimationElement", %"class.blink::SVGAnimationElement"* %0, i64 0, i32 0, i32 1, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [181 x i8*], [3 x i8*], [3 x i8*] }, { [181 x i8*], [3 x i8*], [3 x i8*] }* @_ZTVN5blink19SVGAnimationElementE, i64 0, inrange i32 2, i64 2) to i32 (...)**), i32 (...)*** %4, align 8
  %5 = getelementptr inbounds %"class.blink::SVGAnimationElement", %"class.blink::SVGAnimationElement"* %0, i64 0, i32 10, i32 0, i32 0
  %6 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %5, align 8
  %7 = icmp eq %"class.WTF::StringImpl"* %6, null
  br i1 %7, label %21, label %8

8:                                                ; preds = %1
  %9 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %6, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %10 = load atomic i32, i32* %9 monotonic, align 4
  %11 = and i32 %10, 2
  %12 = icmp eq i32 %11, 0
  %13 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %6, i64 0, i32 0
  %14 = load i32, i32* %13, align 4
  br i1 %12, label %15, label %17

15:                                               ; preds = %8
  %16 = add i32 %14, -1
  store i32 %16, i32* %13, align 4
  br label %17

17:                                               ; preds = %15, %8
  %18 = phi i32 [ %16, %15 ], [ %14, %8 ]
  %19 = icmp eq i32 %18, 0
  br i1 %19, label %20, label %21

20:                                               ; preds = %17
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %6) #8
  br label %21

21:                                               ; preds = %1, %17, %20
  %22 = getelementptr inbounds %"class.blink::SVGAnimationElement", %"class.blink::SVGAnimationElement"* %0, i64 0, i32 9, i32 0, i32 0
  %23 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %22, align 8
  %24 = icmp eq %"class.WTF::StringImpl"* %23, null
  br i1 %24, label %38, label %25

25:                                               ; preds = %21
  %26 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %23, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %27 = load atomic i32, i32* %26 monotonic, align 4
  %28 = and i32 %27, 2
  %29 = icmp eq i32 %28, 0
  %30 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %23, i64 0, i32 0
  %31 = load i32, i32* %30, align 4
  br i1 %29, label %32, label %34

32:                                               ; preds = %25
  %33 = add i32 %31, -1
  store i32 %33, i32* %30, align 4
  br label %34

34:                                               ; preds = %32, %25
  %35 = phi i32 [ %33, %32 ], [ %31, %25 ]
  %36 = icmp eq i32 %35, 0
  br i1 %36, label %37, label %38

37:                                               ; preds = %34
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %23) #8
  br label %38

38:                                               ; preds = %21, %34, %37
  %39 = getelementptr inbounds %"class.blink::SVGAnimationElement", %"class.blink::SVGAnimationElement"* %0, i64 0, i32 8, i32 0, i32 0, i32 0
  %40 = load %"class.gfx::CubicBezier"*, %"class.gfx::CubicBezier"** %39, align 8
  %41 = icmp eq %"class.gfx::CubicBezier"* %40, null
  %42 = bitcast %"class.gfx::CubicBezier"* %40 to i8*
  br i1 %41, label %49, label %43, !prof !2

43:                                               ; preds = %38
  %44 = getelementptr inbounds %"class.blink::SVGAnimationElement", %"class.blink::SVGAnimationElement"* %0, i64 0, i32 8, i32 0, i32 0, i32 2
  %45 = load i32, i32* %44, align 4
  %46 = icmp eq i32 %45, 0
  br i1 %46, label %48, label %47, !prof !3

47:                                               ; preds = %43
  store i32 0, i32* %44, align 4
  br label %48

48:                                               ; preds = %47, %43
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %42) #8
  store %"class.gfx::CubicBezier"* null, %"class.gfx::CubicBezier"** %39, align 8
  br label %49

49:                                               ; preds = %38, %48
  %50 = getelementptr inbounds %"class.blink::SVGAnimationElement", %"class.blink::SVGAnimationElement"* %0, i64 0, i32 7, i32 0, i32 0, i32 0
  %51 = load float*, float** %50, align 8
  %52 = icmp eq float* %51, null
  %53 = bitcast float* %51 to i8*
  br i1 %52, label %60, label %54, !prof !2

54:                                               ; preds = %49
  %55 = getelementptr inbounds %"class.blink::SVGAnimationElement", %"class.blink::SVGAnimationElement"* %0, i64 0, i32 7, i32 0, i32 0, i32 2
  %56 = load i32, i32* %55, align 4
  %57 = icmp eq i32 %56, 0
  br i1 %57, label %59, label %58, !prof !3

58:                                               ; preds = %54
  store i32 0, i32* %55, align 4
  br label %59

59:                                               ; preds = %58, %54
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %53) #8
  store float* null, float** %50, align 8
  br label %60

60:                                               ; preds = %49, %59
  %61 = getelementptr inbounds %"class.blink::SVGAnimationElement", %"class.blink::SVGAnimationElement"* %0, i64 0, i32 6, i32 0, i32 0, i32 0
  %62 = load float*, float** %61, align 8
  %63 = icmp eq float* %62, null
  %64 = bitcast float* %62 to i8*
  br i1 %63, label %71, label %65, !prof !2

65:                                               ; preds = %60
  %66 = getelementptr inbounds %"class.blink::SVGAnimationElement", %"class.blink::SVGAnimationElement"* %0, i64 0, i32 6, i32 0, i32 0, i32 2
  %67 = load i32, i32* %66, align 4
  %68 = icmp eq i32 %67, 0
  br i1 %68, label %70, label %69, !prof !3

69:                                               ; preds = %65
  store i32 0, i32* %66, align 4
  br label %70

70:                                               ; preds = %69, %65
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %64) #8
  store float* null, float** %61, align 8
  br label %71

71:                                               ; preds = %60, %70
  %72 = getelementptr inbounds %"class.blink::SVGAnimationElement", %"class.blink::SVGAnimationElement"* %0, i64 0, i32 5, i32 0, i32 0, i32 0
  %73 = load float*, float** %72, align 8
  %74 = icmp eq float* %73, null
  %75 = bitcast float* %73 to i8*
  br i1 %74, label %82, label %76, !prof !2

76:                                               ; preds = %71
  %77 = getelementptr inbounds %"class.blink::SVGAnimationElement", %"class.blink::SVGAnimationElement"* %0, i64 0, i32 5, i32 0, i32 0, i32 2
  %78 = load i32, i32* %77, align 4
  %79 = icmp eq i32 %78, 0
  br i1 %79, label %81, label %80, !prof !3

80:                                               ; preds = %76
  store i32 0, i32* %77, align 4
  br label %81

81:                                               ; preds = %80, %76
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %75) #8
  store float* null, float** %72, align 8
  br label %82

82:                                               ; preds = %71, %81
  %83 = getelementptr inbounds %"class.blink::SVGAnimationElement", %"class.blink::SVGAnimationElement"* %0, i64 0, i32 4
  %84 = getelementptr inbounds %"class.WTF::Vector.57", %"class.WTF::Vector.57"* %83, i64 0, i32 0, i32 0, i32 0
  %85 = load %"class.WTF::String"*, %"class.WTF::String"** %84, align 8
  %86 = icmp eq %"class.WTF::String"* %85, null
  br i1 %86, label %121, label %87, !prof !2

87:                                               ; preds = %82
  %88 = bitcast %"class.WTF::String"* %85 to i8*
  %89 = getelementptr inbounds %"class.blink::SVGAnimationElement", %"class.blink::SVGAnimationElement"* %0, i64 0, i32 4, i32 0, i32 0, i32 2
  %90 = load i32, i32* %89, align 4
  %91 = icmp eq i32 %90, 0
  br i1 %91, label %119, label %92, !prof !3

92:                                               ; preds = %87
  %93 = zext i32 %90 to i64
  %94 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %85, i64 %93
  br label %95

95:                                               ; preds = %113, %92
  %96 = phi %"class.WTF::String"* [ %114, %113 ], [ %85, %92 ]
  %97 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %96, i64 0, i32 0, i32 0
  %98 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %97, align 8
  %99 = icmp eq %"class.WTF::StringImpl"* %98, null
  br i1 %99, label %113, label %100

100:                                              ; preds = %95
  %101 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %98, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %102 = load atomic i32, i32* %101 monotonic, align 4
  %103 = and i32 %102, 2
  %104 = icmp eq i32 %103, 0
  %105 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %98, i64 0, i32 0
  %106 = load i32, i32* %105, align 4
  br i1 %104, label %107, label %109

107:                                              ; preds = %100
  %108 = add i32 %106, -1
  store i32 %108, i32* %105, align 4
  br label %109

109:                                              ; preds = %107, %100
  %110 = phi i32 [ %108, %107 ], [ %106, %100 ]
  %111 = icmp eq i32 %110, 0
  br i1 %111, label %112, label %113

112:                                              ; preds = %109
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %98) #8
  br label %113

113:                                              ; preds = %112, %109, %95
  %114 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %96, i64 1
  %115 = icmp eq %"class.WTF::String"* %114, %94
  br i1 %115, label %116, label %95

116:                                              ; preds = %113
  store i32 0, i32* %89, align 4
  %117 = bitcast %"class.WTF::Vector.57"* %83 to i8**
  %118 = load i8*, i8** %117, align 8
  br label %119

119:                                              ; preds = %116, %87
  %120 = phi i8* [ %118, %116 ], [ %88, %87 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %120) #8
  store %"class.WTF::String"* null, %"class.WTF::String"** %84, align 8
  br label %121

121:                                              ; preds = %82, %119
  %122 = bitcast %"class.blink::SVGAnimationElement"* %0 to %"class.blink::SVGSMILElement"*
  tail call void @_ZN5blink14SVGSMILElementD2Ev(%"class.blink::SVGSMILElement"* %122) #8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink23SVGAnimateMotionElementD0Ev(%"class.blink::SVGAnimateMotionElement"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::SVGAnimateMotionElement", %"class.blink::SVGAnimateMotionElement"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [181 x i8*], [3 x i8*], [3 x i8*] }, { [181 x i8*], [3 x i8*], [3 x i8*] }* @_ZTVN5blink23SVGAnimateMotionElementE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.blink::SVGAnimateMotionElement", %"class.blink::SVGAnimateMotionElement"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [181 x i8*], [3 x i8*], [3 x i8*] }, { [181 x i8*], [3 x i8*], [3 x i8*] }* @_ZTVN5blink23SVGAnimateMotionElementE, i64 0, inrange i32 1, i64 2) to i32 (...)**), i32 (...)*** %3, align 8
  %4 = getelementptr inbounds %"class.blink::SVGAnimateMotionElement", %"class.blink::SVGAnimateMotionElement"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [181 x i8*], [3 x i8*], [3 x i8*] }, { [181 x i8*], [3 x i8*], [3 x i8*] }* @_ZTVN5blink23SVGAnimateMotionElementE, i64 0, inrange i32 2, i64 2) to i32 (...)**), i32 (...)*** %4, align 8
  %5 = getelementptr inbounds %"class.blink::SVGAnimateMotionElement", %"class.blink::SVGAnimateMotionElement"* %0, i64 0, i32 5
  tail call void @_ZN5blink4PathD1Ev(%"class.blink::Path"* %5) #8
  %6 = getelementptr inbounds %"class.blink::SVGAnimateMotionElement", %"class.blink::SVGAnimateMotionElement"* %0, i64 0, i32 4
  tail call void @_ZN5blink4PathD1Ev(%"class.blink::Path"* %6) #8
  %7 = getelementptr inbounds %"class.blink::SVGAnimateMotionElement", %"class.blink::SVGAnimateMotionElement"* %0, i64 0, i32 0
  tail call void @_ZN5blink19SVGAnimationElementD2Ev(%"class.blink::SVGAnimationElement"* %7) #8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK5blink23SVGAnimateMotionElement17HasValidAnimationEv(%"class.blink::SVGAnimateMotionElement"* nocapture readonly) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::SVGAnimateMotionElement", %"class.blink::SVGAnimateMotionElement"* %0, i64 0, i32 0, i32 0, i32 2, i32 0, i32 0
  %3 = load %"class.blink::SVGElement"*, %"class.blink::SVGElement"** %2, align 8
  %4 = bitcast %"class.blink::SVGElement"* %3 to i1 (%"class.blink::SVGElement"*)***
  %5 = load i1 (%"class.blink::SVGElement"*)**, i1 (%"class.blink::SVGElement"*)*** %4, align 8
  %6 = getelementptr inbounds i1 (%"class.blink::SVGElement"*)*, i1 (%"class.blink::SVGElement"*)** %5, i64 157
  %7 = load i1 (%"class.blink::SVGElement"*)*, i1 (%"class.blink::SVGElement"*)** %6, align 8
  %8 = tail call zeroext i1 %7(%"class.blink::SVGElement"* %3) #8
  br i1 %8, label %9, label %141

9:                                                ; preds = %1
  %10 = load %"class.blink::SVGQualifiedName"*, %"class.blink::SVGQualifiedName"** @_ZN5blink9svg_names5kGTagE, align 8
  %11 = getelementptr inbounds %"class.blink::SVGElement", %"class.blink::SVGElement"* %3, i64 0, i32 0, i32 0, i32 0
  %12 = icmp eq %"class.blink::SVGElement"* %3, null
  br i1 %12, label %141, label %13

13:                                               ; preds = %9
  %14 = getelementptr inbounds %"class.blink::SVGElement", %"class.blink::SVGElement"* %3, i64 0, i32 0, i32 0, i32 0, i32 1
  %15 = load i32, i32* %14, align 8
  %16 = and i32 %15, 48
  %17 = icmp eq i32 %16, 32
  br i1 %17, label %18, label %141

18:                                               ; preds = %13
  %19 = getelementptr inbounds %"class.blink::SVGQualifiedName", %"class.blink::SVGQualifiedName"* %10, i64 0, i32 0, i32 0, i32 0
  %20 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %19, align 8
  %21 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %11, i64 1, i32 2
  %22 = bitcast %"class.blink::Member"* %21 to %"class.blink::QualifiedName::QualifiedNameImpl"**
  %23 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %22, align 8
  %24 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %23, i64 0, i32 3, i32 0, i32 0, i32 0
  %25 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %24, align 8
  %26 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %20, i64 0, i32 3, i32 0, i32 0, i32 0
  %27 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %26, align 8
  %28 = icmp eq %"class.WTF::StringImpl"* %25, %27
  br i1 %28, label %141, label %29

29:                                               ; preds = %18
  %30 = load %"class.blink::SVGQualifiedName"*, %"class.blink::SVGQualifiedName"** @_ZN5blink9svg_names8kDefsTagE, align 8
  %31 = getelementptr inbounds %"class.blink::SVGQualifiedName", %"class.blink::SVGQualifiedName"* %30, i64 0, i32 0, i32 0, i32 0
  %32 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %31, align 8
  %33 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %32, i64 0, i32 3, i32 0, i32 0, i32 0
  %34 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %33, align 8
  %35 = icmp eq %"class.WTF::StringImpl"* %25, %34
  br i1 %35, label %141, label %36

36:                                               ; preds = %29
  %37 = load %"class.blink::SVGQualifiedName"*, %"class.blink::SVGQualifiedName"** @_ZN5blink9svg_names7kUseTagE, align 8
  %38 = getelementptr inbounds %"class.blink::SVGQualifiedName", %"class.blink::SVGQualifiedName"* %37, i64 0, i32 0, i32 0, i32 0
  %39 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %38, align 8
  %40 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %39, i64 0, i32 3, i32 0, i32 0, i32 0
  %41 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %40, align 8
  %42 = icmp eq %"class.WTF::StringImpl"* %25, %41
  br i1 %42, label %141, label %43

43:                                               ; preds = %36
  %44 = load %"class.blink::SVGQualifiedName"*, %"class.blink::SVGQualifiedName"** @_ZN5blink9svg_names9kImageTagE, align 8
  %45 = getelementptr inbounds %"class.blink::SVGQualifiedName", %"class.blink::SVGQualifiedName"* %44, i64 0, i32 0, i32 0, i32 0
  %46 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %45, align 8
  %47 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %46, i64 0, i32 3, i32 0, i32 0, i32 0
  %48 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %47, align 8
  %49 = icmp eq %"class.WTF::StringImpl"* %25, %48
  br i1 %49, label %141, label %50

50:                                               ; preds = %43
  %51 = load %"class.blink::SVGQualifiedName"*, %"class.blink::SVGQualifiedName"** @_ZN5blink9svg_names10kSwitchTagE, align 8
  %52 = getelementptr inbounds %"class.blink::SVGQualifiedName", %"class.blink::SVGQualifiedName"* %51, i64 0, i32 0, i32 0, i32 0
  %53 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %52, align 8
  %54 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %53, i64 0, i32 3, i32 0, i32 0, i32 0
  %55 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %54, align 8
  %56 = icmp eq %"class.WTF::StringImpl"* %25, %55
  br i1 %56, label %141, label %57

57:                                               ; preds = %50
  %58 = load %"class.blink::SVGQualifiedName"*, %"class.blink::SVGQualifiedName"** @_ZN5blink9svg_names8kPathTagE, align 8
  %59 = getelementptr inbounds %"class.blink::SVGQualifiedName", %"class.blink::SVGQualifiedName"* %58, i64 0, i32 0, i32 0, i32 0
  %60 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %59, align 8
  %61 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %60, i64 0, i32 3, i32 0, i32 0, i32 0
  %62 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %61, align 8
  %63 = icmp eq %"class.WTF::StringImpl"* %25, %62
  br i1 %63, label %141, label %64

64:                                               ; preds = %57
  %65 = load %"class.blink::SVGQualifiedName"*, %"class.blink::SVGQualifiedName"** @_ZN5blink9svg_names8kRectTagE, align 8
  %66 = getelementptr inbounds %"class.blink::SVGQualifiedName", %"class.blink::SVGQualifiedName"* %65, i64 0, i32 0, i32 0, i32 0
  %67 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %66, align 8
  %68 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %67, i64 0, i32 3, i32 0, i32 0, i32 0
  %69 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %68, align 8
  %70 = icmp eq %"class.WTF::StringImpl"* %25, %69
  br i1 %70, label %141, label %71

71:                                               ; preds = %64
  %72 = load %"class.blink::SVGQualifiedName"*, %"class.blink::SVGQualifiedName"** @_ZN5blink9svg_names10kCircleTagE, align 8
  %73 = getelementptr inbounds %"class.blink::SVGQualifiedName", %"class.blink::SVGQualifiedName"* %72, i64 0, i32 0, i32 0, i32 0
  %74 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %73, align 8
  %75 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %74, i64 0, i32 3, i32 0, i32 0, i32 0
  %76 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %75, align 8
  %77 = icmp eq %"class.WTF::StringImpl"* %25, %76
  br i1 %77, label %141, label %78

78:                                               ; preds = %71
  %79 = load %"class.blink::SVGQualifiedName"*, %"class.blink::SVGQualifiedName"** @_ZN5blink9svg_names11kEllipseTagE, align 8
  %80 = getelementptr inbounds %"class.blink::SVGQualifiedName", %"class.blink::SVGQualifiedName"* %79, i64 0, i32 0, i32 0, i32 0
  %81 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %80, align 8
  %82 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %81, i64 0, i32 3, i32 0, i32 0, i32 0
  %83 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %82, align 8
  %84 = icmp eq %"class.WTF::StringImpl"* %25, %83
  br i1 %84, label %141, label %85

85:                                               ; preds = %78
  %86 = load %"class.blink::SVGQualifiedName"*, %"class.blink::SVGQualifiedName"** @_ZN5blink9svg_names8kLineTagE, align 8
  %87 = getelementptr inbounds %"class.blink::SVGQualifiedName", %"class.blink::SVGQualifiedName"* %86, i64 0, i32 0, i32 0, i32 0
  %88 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %87, align 8
  %89 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %88, i64 0, i32 3, i32 0, i32 0, i32 0
  %90 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %89, align 8
  %91 = icmp eq %"class.WTF::StringImpl"* %25, %90
  br i1 %91, label %141, label %92

92:                                               ; preds = %85
  %93 = load %"class.blink::SVGQualifiedName"*, %"class.blink::SVGQualifiedName"** @_ZN5blink9svg_names12kPolylineTagE, align 8
  %94 = getelementptr inbounds %"class.blink::SVGQualifiedName", %"class.blink::SVGQualifiedName"* %93, i64 0, i32 0, i32 0, i32 0
  %95 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %94, align 8
  %96 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %95, i64 0, i32 3, i32 0, i32 0, i32 0
  %97 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %96, align 8
  %98 = icmp eq %"class.WTF::StringImpl"* %25, %97
  br i1 %98, label %141, label %99

99:                                               ; preds = %92
  %100 = load %"class.blink::SVGQualifiedName"*, %"class.blink::SVGQualifiedName"** @_ZN5blink9svg_names11kPolygonTagE, align 8
  %101 = getelementptr inbounds %"class.blink::SVGQualifiedName", %"class.blink::SVGQualifiedName"* %100, i64 0, i32 0, i32 0, i32 0
  %102 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %101, align 8
  %103 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %102, i64 0, i32 3, i32 0, i32 0, i32 0
  %104 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %103, align 8
  %105 = icmp eq %"class.WTF::StringImpl"* %25, %104
  br i1 %105, label %141, label %106

106:                                              ; preds = %99
  %107 = load %"class.blink::SVGQualifiedName"*, %"class.blink::SVGQualifiedName"** @_ZN5blink9svg_names8kTextTagE, align 8
  %108 = getelementptr inbounds %"class.blink::SVGQualifiedName", %"class.blink::SVGQualifiedName"* %107, i64 0, i32 0, i32 0, i32 0
  %109 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %108, align 8
  %110 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %109, i64 0, i32 3, i32 0, i32 0, i32 0
  %111 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %110, align 8
  %112 = icmp eq %"class.WTF::StringImpl"* %25, %111
  br i1 %112, label %141, label %113

113:                                              ; preds = %106
  %114 = load %"class.blink::SVGQualifiedName"*, %"class.blink::SVGQualifiedName"** @_ZN5blink9svg_names12kClipPathTagE, align 8
  %115 = getelementptr inbounds %"class.blink::SVGQualifiedName", %"class.blink::SVGQualifiedName"* %114, i64 0, i32 0, i32 0, i32 0
  %116 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %115, align 8
  %117 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %116, i64 0, i32 3, i32 0, i32 0, i32 0
  %118 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %117, align 8
  %119 = icmp eq %"class.WTF::StringImpl"* %25, %118
  br i1 %119, label %141, label %120

120:                                              ; preds = %113
  %121 = load %"class.blink::SVGQualifiedName"*, %"class.blink::SVGQualifiedName"** @_ZN5blink9svg_names8kMaskTagE, align 8
  %122 = getelementptr inbounds %"class.blink::SVGQualifiedName", %"class.blink::SVGQualifiedName"* %121, i64 0, i32 0, i32 0, i32 0
  %123 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %122, align 8
  %124 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %123, i64 0, i32 3, i32 0, i32 0, i32 0
  %125 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %124, align 8
  %126 = icmp eq %"class.WTF::StringImpl"* %25, %125
  br i1 %126, label %141, label %127

127:                                              ; preds = %120
  %128 = load %"class.blink::SVGQualifiedName"*, %"class.blink::SVGQualifiedName"** @_ZN5blink9svg_names5kATagE, align 8
  %129 = getelementptr inbounds %"class.blink::SVGQualifiedName", %"class.blink::SVGQualifiedName"* %128, i64 0, i32 0, i32 0, i32 0
  %130 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %129, align 8
  %131 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %130, i64 0, i32 3, i32 0, i32 0, i32 0
  %132 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %131, align 8
  %133 = icmp eq %"class.WTF::StringImpl"* %25, %132
  br i1 %133, label %141, label %134

134:                                              ; preds = %127
  %135 = load %"class.blink::SVGQualifiedName"*, %"class.blink::SVGQualifiedName"** @_ZN5blink9svg_names17kForeignObjectTagE, align 8
  %136 = getelementptr inbounds %"class.blink::SVGQualifiedName", %"class.blink::SVGQualifiedName"* %135, i64 0, i32 0, i32 0, i32 0
  %137 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %136, align 8
  %138 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %137, i64 0, i32 3, i32 0, i32 0, i32 0
  %139 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %138, align 8
  %140 = icmp eq %"class.WTF::StringImpl"* %25, %139
  br label %141

141:                                              ; preds = %1, %9, %13, %18, %29, %36, %43, %50, %57, %64, %71, %78, %85, %92, %99, %106, %113, %120, %127, %134
  %142 = phi i1 [ false, %1 ], [ true, %127 ], [ true, %120 ], [ true, %113 ], [ true, %106 ], [ true, %99 ], [ true, %92 ], [ true, %85 ], [ true, %78 ], [ true, %71 ], [ true, %64 ], [ true, %57 ], [ true, %50 ], [ true, %43 ], [ true, %36 ], [ true, %29 ], [ true, %18 ], [ %140, %134 ], [ false, %9 ], [ false, %13 ]
  ret i1 %142
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink23SVGAnimateMotionElement25WillChangeAnimationTargetEv(%"class.blink::SVGAnimateMotionElement"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::SVGAnimateMotionElement", %"class.blink::SVGAnimateMotionElement"* %0, i64 0, i32 0
  tail call void @_ZN5blink19SVGAnimationElement25WillChangeAnimationTargetEv(%"class.blink::SVGAnimationElement"* %2) #8
  %3 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** bitcast (%"class.blink::SVGQualifiedName"** @_ZN5blink9svg_names17kAnimateMotionTagE to %"class.blink::QualifiedName"**), align 8
  tail call void @_ZN5blink19SVGAnimationElement19UnregisterAnimationERKNS_13QualifiedNameE(%"class.blink::SVGAnimationElement"* %2, %"class.blink::QualifiedName"* dereferenceable(8) %3) #8
  ret void
}

declare void @_ZN5blink19SVGAnimationElement25WillChangeAnimationTargetEv(%"class.blink::SVGAnimationElement"*) unnamed_addr #1

declare void @_ZN5blink19SVGAnimationElement19UnregisterAnimationERKNS_13QualifiedNameE(%"class.blink::SVGAnimationElement"*, %"class.blink::QualifiedName"* dereferenceable(8)) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink23SVGAnimateMotionElement24DidChangeAnimationTargetEv(%"class.blink::SVGAnimateMotionElement"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::SVGAnimateMotionElement", %"class.blink::SVGAnimateMotionElement"* %0, i64 0, i32 0
  %3 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** bitcast (%"class.blink::SVGQualifiedName"** @_ZN5blink9svg_names17kAnimateMotionTagE to %"class.blink::QualifiedName"**), align 8
  tail call void @_ZN5blink19SVGAnimationElement17RegisterAnimationERKNS_13QualifiedNameE(%"class.blink::SVGAnimationElement"* %2, %"class.blink::QualifiedName"* dereferenceable(8) %3) #8
  %4 = bitcast %"class.blink::SVGAnimateMotionElement"* %0 to %"class.blink::SVGSMILElement"*
  tail call void @_ZN5blink14SVGSMILElement24DidChangeAnimationTargetEv(%"class.blink::SVGSMILElement"* %4) #8
  ret void
}

declare void @_ZN5blink19SVGAnimationElement17RegisterAnimationERKNS_13QualifiedNameE(%"class.blink::SVGAnimationElement"*, %"class.blink::QualifiedName"* dereferenceable(8)) local_unnamed_addr #1

declare void @_ZN5blink14SVGSMILElement24DidChangeAnimationTargetEv(%"class.blink::SVGSMILElement"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink23SVGAnimateMotionElement14ParseAttributeERKNS_7Element27AttributeModificationParamsE(%"class.blink::SVGAnimateMotionElement"*, %"struct.blink::Element::AttributeModificationParams"* dereferenceable(32)) unnamed_addr #0 align 2 {
  %3 = alloca %"class.blink::Path", align 8
  %4 = alloca %"class.WTF::StringView", align 8
  %5 = getelementptr inbounds %"struct.blink::Element::AttributeModificationParams", %"struct.blink::Element::AttributeModificationParams"* %1, i64 0, i32 0
  %6 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** %5, align 8
  %7 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink9svg_names9kPathAttrE, align 8
  %8 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %6, i64 0, i32 0, i32 0
  %9 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %8, align 8
  %10 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %7, i64 0, i32 0, i32 0
  %11 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %10, align 8
  %12 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %9, %11
  br i1 %12, label %13, label %38

13:                                               ; preds = %2
  %14 = bitcast %"class.blink::Path"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %14) #8
  call void @_ZN5blink4PathC1Ev(%"class.blink::Path"* nonnull %3) #8
  %15 = getelementptr inbounds %"class.blink::SVGAnimateMotionElement", %"class.blink::SVGAnimateMotionElement"* %0, i64 0, i32 4
  %16 = call dereferenceable(16) %"class.blink::Path"* @_ZN5blink4PathaSERKS0_(%"class.blink::Path"* %15, %"class.blink::Path"* nonnull dereferenceable(16) %3) #8
  call void @_ZN5blink4PathD1Ev(%"class.blink::Path"* nonnull %3) #8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %14) #8
  %17 = bitcast %"class.WTF::StringView"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %17) #8
  %18 = getelementptr inbounds %"struct.blink::Element::AttributeModificationParams", %"struct.blink::Element::AttributeModificationParams"* %1, i64 0, i32 2
  %19 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** %18, align 8
  %20 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %19, i64 0, i32 0, i32 0, i32 0
  %21 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %20, align 8
  %22 = icmp eq %"class.WTF::StringImpl"* %21, null
  br i1 %22, label %23, label %27

23:                                               ; preds = %13
  %24 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %4, i64 0, i32 1
  store i8* null, i8** %24, align 8
  %25 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %26 = bitcast %"class.WTF::StringView"* %4 to i64*
  store i64 %25, i64* %26, align 8
  br label %34

27:                                               ; preds = %13
  %28 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %4, i64 0, i32 0
  store %"class.WTF::StringImpl"* %21, %"class.WTF::StringImpl"** %28, align 8
  %29 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %21, i64 0, i32 1
  %30 = load i32, i32* %29, align 4
  %31 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %21, i64 1
  %32 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %4, i64 0, i32 1
  %33 = bitcast i8** %32 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %31, %"class.WTF::StringImpl"** %33, align 8
  br label %34

34:                                               ; preds = %23, %27
  %35 = phi i32 [ %30, %27 ], [ 0, %23 ]
  %36 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %4, i64 0, i32 2
  store i32 %35, i32* %36, align 8
  %37 = call zeroext i1 @_ZN5blink19BuildPathFromStringERKN3WTF10StringViewERNS_4PathE(%"class.WTF::StringView"* nonnull dereferenceable(24) %4, %"class.blink::Path"* dereferenceable(16) %15) #8
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %17) #8
  call void @_ZN5blink23SVGAnimateMotionElement19UpdateAnimationPathEv(%"class.blink::SVGAnimateMotionElement"* %0)
  br label %40

38:                                               ; preds = %2
  %39 = getelementptr inbounds %"class.blink::SVGAnimateMotionElement", %"class.blink::SVGAnimateMotionElement"* %0, i64 0, i32 0
  tail call void @_ZN5blink19SVGAnimationElement14ParseAttributeERKNS_7Element27AttributeModificationParamsE(%"class.blink::SVGAnimationElement"* %39, %"struct.blink::Element::AttributeModificationParams"* dereferenceable(32) %1) #8
  br label %40

40:                                               ; preds = %38, %34
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #4

declare dereferenceable(16) %"class.blink::Path"* @_ZN5blink4PathaSERKS0_(%"class.blink::Path"*, %"class.blink::Path"* dereferenceable(16)) local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #4

declare zeroext i1 @_ZN5blink19BuildPathFromStringERKN3WTF10StringViewERNS_4PathE(%"class.WTF::StringView"* dereferenceable(24), %"class.blink::Path"* dereferenceable(16)) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink23SVGAnimateMotionElement19UpdateAnimationPathEv(%"class.blink::SVGAnimateMotionElement"*) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.blink::Path", align 8
  %3 = alloca %"class.blink::Path", align 8
  %4 = bitcast %"class.blink::Path"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %4) #8
  call void @_ZN5blink4PathC1Ev(%"class.blink::Path"* nonnull %2) #8
  %5 = getelementptr inbounds %"class.blink::SVGAnimateMotionElement", %"class.blink::SVGAnimateMotionElement"* %0, i64 0, i32 5
  %6 = call dereferenceable(16) %"class.blink::Path"* @_ZN5blink4PathaSERKS0_(%"class.blink::Path"* %5, %"class.blink::Path"* nonnull dereferenceable(16) %2) #8
  call void @_ZN5blink4PathD1Ev(%"class.blink::Path"* nonnull %2) #8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %4) #8
  %7 = getelementptr inbounds %"class.blink::SVGAnimateMotionElement", %"class.blink::SVGAnimateMotionElement"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %8 = load %"class.blink::Node"*, %"class.blink::Node"** %7, align 8
  %9 = icmp eq %"class.blink::Node"* %8, null
  br i1 %9, label %72, label %10

10:                                               ; preds = %1
  %11 = load %"class.blink::SVGQualifiedName"*, %"class.blink::SVGQualifiedName"** @_ZN5blink9svg_names9kMPathTagE, align 8
  %12 = getelementptr inbounds %"class.blink::SVGQualifiedName", %"class.blink::SVGQualifiedName"* %11, i64 0, i32 0, i32 0, i32 0
  br label %13

13:                                               ; preds = %29, %10
  %14 = phi %"class.blink::Node"* [ %8, %10 ], [ %31, %29 ]
  %15 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %14, i64 0, i32 1
  %16 = load i32, i32* %15, align 8
  %17 = and i32 %16, 48
  %18 = icmp eq i32 %17, 32
  br i1 %18, label %19, label %29

19:                                               ; preds = %13
  %20 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %12, align 8
  %21 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %14, i64 1, i32 2
  %22 = bitcast %"class.blink::Member"* %21 to %"class.blink::QualifiedName::QualifiedNameImpl"**
  %23 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %22, align 8
  %24 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %23, i64 0, i32 3, i32 0, i32 0, i32 0
  %25 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %24, align 8
  %26 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %20, i64 0, i32 3, i32 0, i32 0, i32 0
  %27 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %26, align 8
  %28 = icmp eq %"class.WTF::StringImpl"* %25, %27
  br i1 %28, label %33, label %29

29:                                               ; preds = %19, %13
  %30 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %14, i64 0, i32 5, i32 0, i32 0
  %31 = load %"class.blink::Node"*, %"class.blink::Node"** %30, align 8
  %32 = icmp eq %"class.blink::Node"* %31, null
  br i1 %32, label %72, label %13

33:                                               ; preds = %19
  %34 = load %"class.blink::SVGQualifiedName"*, %"class.blink::SVGQualifiedName"** @_ZN5blink9svg_names9kMPathTagE, align 8
  %35 = getelementptr inbounds %"class.blink::SVGQualifiedName", %"class.blink::SVGQualifiedName"* %34, i64 0, i32 0, i32 0, i32 0
  %36 = bitcast %"class.blink::Node"* %14 to %"class.blink::SVGMPathElement"*
  %37 = call %"class.blink::SVGPathElement"* @_ZN5blink15SVGMPathElement11PathElementEv(%"class.blink::SVGMPathElement"* nonnull %36) #8
  %38 = icmp eq %"class.blink::SVGPathElement"* %37, null
  br i1 %38, label %47, label %43

39:                                               ; preds = %58
  %40 = bitcast %"class.blink::Node"* %53 to %"class.blink::SVGMPathElement"*
  %41 = call %"class.blink::SVGPathElement"* @_ZN5blink15SVGMPathElement11PathElementEv(%"class.blink::SVGMPathElement"* nonnull %40) #8
  %42 = icmp eq %"class.blink::SVGPathElement"* %41, null
  br i1 %42, label %47, label %43

43:                                               ; preds = %39, %33
  %44 = phi %"class.blink::SVGPathElement"* [ %37, %33 ], [ %41, %39 ]
  %45 = bitcast %"class.blink::Path"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %45) #8
  call void @_ZNK5blink14SVGPathElement13AttributePathEv(%"class.blink::Path"* nonnull sret %3, %"class.blink::SVGPathElement"* nonnull %44) #8
  %46 = call dereferenceable(16) %"class.blink::Path"* @_ZN5blink4PathaSERKS0_(%"class.blink::Path"* %5, %"class.blink::Path"* nonnull dereferenceable(16) %3) #8
  call void @_ZN5blink4PathD1Ev(%"class.blink::Path"* nonnull %3) #8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %45) #8
  br label %130

47:                                               ; preds = %33, %39
  %48 = phi %"class.blink::Node"* [ %53, %39 ], [ %14, %33 ]
  %49 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %48, i64 0, i32 5, i32 0, i32 0
  %50 = load %"class.blink::Node"*, %"class.blink::Node"** %49, align 8
  %51 = icmp eq %"class.blink::Node"* %50, null
  br i1 %51, label %72, label %52

52:                                               ; preds = %47, %68
  %53 = phi %"class.blink::Node"* [ %70, %68 ], [ %50, %47 ]
  %54 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %53, i64 0, i32 1
  %55 = load i32, i32* %54, align 8
  %56 = and i32 %55, 48
  %57 = icmp eq i32 %56, 32
  br i1 %57, label %58, label %68

58:                                               ; preds = %52
  %59 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %35, align 8
  %60 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %53, i64 1, i32 2
  %61 = bitcast %"class.blink::Member"* %60 to %"class.blink::QualifiedName::QualifiedNameImpl"**
  %62 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %61, align 8
  %63 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %62, i64 0, i32 3, i32 0, i32 0, i32 0
  %64 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %63, align 8
  %65 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %59, i64 0, i32 3, i32 0, i32 0, i32 0
  %66 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %65, align 8
  %67 = icmp eq %"class.WTF::StringImpl"* %64, %66
  br i1 %67, label %39, label %68

68:                                               ; preds = %58, %52
  %69 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %53, i64 0, i32 5, i32 0, i32 0
  %70 = load %"class.blink::Node"*, %"class.blink::Node"** %69, align 8
  %71 = icmp eq %"class.blink::Node"* %70, null
  br i1 %71, label %72, label %52

72:                                               ; preds = %29, %47, %68, %1
  %73 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink9svg_names9kPathAttrE, align 8
  %74 = getelementptr inbounds %"class.blink::SVGAnimateMotionElement", %"class.blink::SVGAnimateMotionElement"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 3, i32 0, i32 0
  %75 = load %"class.blink::ElementData"*, %"class.blink::ElementData"** %74, align 8
  %76 = icmp eq %"class.blink::ElementData"* %75, null
  br i1 %76, label %130, label %77

77:                                               ; preds = %72
  %78 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %75, i64 0, i32 0, i32 0, i32 0
  %79 = load i32, i32* %78, align 4
  %80 = and i32 %79, 1
  %81 = icmp eq i32 %80, 0
  br i1 %81, label %89, label %82

82:                                               ; preds = %77
  %83 = bitcast %"class.blink::ElementData"* %75 to %"class.blink::UniqueElementData"*
  %84 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %75, i64 1, i32 1
  %85 = bitcast %"class.blink::Member.14"* %84 to %"class.blink::Attribute"**
  %86 = load %"class.blink::Attribute"*, %"class.blink::Attribute"** %85, align 8
  %87 = getelementptr inbounds %"class.blink::UniqueElementData", %"class.blink::UniqueElementData"* %83, i64 0, i32 2, i32 0, i32 0, i32 2
  %88 = load i32, i32* %87, align 4
  br label %94

89:                                               ; preds = %77
  %90 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %75, i64 1
  %91 = bitcast %"class.blink::ElementData"* %90 to %"class.blink::Attribute"*
  %92 = lshr i32 %79, 1
  %93 = and i32 %92, 268435455
  br label %94

94:                                               ; preds = %89, %82
  %95 = phi %"class.blink::Attribute"* [ %91, %89 ], [ %86, %82 ]
  %96 = phi i32 [ %93, %89 ], [ %88, %82 ]
  %97 = zext i32 %96 to i64
  %98 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %95, i64 %97
  %99 = icmp eq i32 %96, 0
  br i1 %99, label %130, label %100

100:                                              ; preds = %94
  %101 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %73, i64 0, i32 0, i32 0
  %102 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %101, align 8
  %103 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %102, i64 0, i32 3, i32 0, i32 0, i32 0
  %104 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %102, i64 0, i32 4, i32 0, i32 0, i32 0
  br label %105

105:                                              ; preds = %121, %100
  %106 = phi %"class.blink::Attribute"* [ %95, %100 ], [ %122, %121 ]
  %107 = phi i32 [ 0, %100 ], [ %123, %121 ]
  %108 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %106, i64 0, i32 0, i32 0, i32 0
  %109 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %108, align 8
  %110 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %109, %102
  br i1 %110, label %125, label %111

111:                                              ; preds = %105
  %112 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %109, i64 0, i32 3, i32 0, i32 0, i32 0
  %113 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %112, align 8
  %114 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %103, align 8
  %115 = icmp eq %"class.WTF::StringImpl"* %113, %114
  br i1 %115, label %116, label %121

116:                                              ; preds = %111
  %117 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %109, i64 0, i32 4, i32 0, i32 0, i32 0
  %118 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %117, align 8
  %119 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %104, align 8
  %120 = icmp eq %"class.WTF::StringImpl"* %118, %119
  br i1 %120, label %125, label %121

121:                                              ; preds = %116, %111
  %122 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %106, i64 1
  %123 = add i32 %107, 1
  %124 = icmp eq %"class.blink::Attribute"* %122, %98
  br i1 %124, label %130, label %105

125:                                              ; preds = %105, %116
  %126 = icmp eq i32 %107, -1
  br i1 %126, label %130, label %127

127:                                              ; preds = %125
  %128 = getelementptr inbounds %"class.blink::SVGAnimateMotionElement", %"class.blink::SVGAnimateMotionElement"* %0, i64 0, i32 4
  %129 = call dereferenceable(16) %"class.blink::Path"* @_ZN5blink4PathaSERKS0_(%"class.blink::Path"* %5, %"class.blink::Path"* dereferenceable(16) %128) #8
  br label %130

130:                                              ; preds = %121, %125, %94, %72, %43, %127
  %131 = call zeroext i1 @_ZNK5blink4Path7IsEmptyEv(%"class.blink::Path"* %5) #8
  br i1 %131, label %134, label %132

132:                                              ; preds = %130
  %133 = getelementptr inbounds %"class.blink::SVGAnimateMotionElement", %"class.blink::SVGAnimateMotionElement"* %0, i64 0, i32 0, i32 12
  store i32 6, i32* %133, align 4
  br label %136

134:                                              ; preds = %130
  %135 = getelementptr inbounds %"class.blink::SVGAnimateMotionElement", %"class.blink::SVGAnimateMotionElement"* %0, i64 0, i32 0
  call void @_ZN5blink19SVGAnimationElement19UpdateAnimationModeEv(%"class.blink::SVGAnimationElement"* %135) #8
  br label %136

136:                                              ; preds = %132, %134
  ret void
}

declare void @_ZN5blink19SVGAnimationElement14ParseAttributeERKNS_7Element27AttributeModificationParamsE(%"class.blink::SVGAnimationElement"*, %"struct.blink::Element::AttributeModificationParams"* dereferenceable(32)) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZNK5blink23SVGAnimateMotionElement13GetRotateModeEv(%"class.blink::SVGAnimateMotionElement"*) local_unnamed_addr #0 align 2 {
  %2 = load atomic i8, i8* bitcast (i64* @_ZGVZNK5blink23SVGAnimateMotionElement13GetRotateModeEvE10s_auto_val to i8*) acquire, align 8
  %3 = icmp eq i8 %2, 0
  br i1 %3, label %4, label %8, !prof !4

4:                                                ; preds = %1
  %5 = tail call i32 @__cxa_guard_acquire(i64* nonnull @_ZGVZNK5blink23SVGAnimateMotionElement13GetRotateModeEvE10s_auto_val) #8
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %8, label %7

7:                                                ; preds = %4
  tail call void @_ZN3WTF12AtomicStringC2EPKhm(%"class.WTF::AtomicString"* bitcast (%"class.WTF::StaticSingleton"* @_ZZNK5blink23SVGAnimateMotionElement13GetRotateModeEvE10s_auto_val to %"class.WTF::AtomicString"*), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i64 0, i64 0), i64 4) #8
  tail call void @__cxa_guard_release(i64* nonnull @_ZGVZNK5blink23SVGAnimateMotionElement13GetRotateModeEvE10s_auto_val) #8
  br label %8

8:                                                ; preds = %4, %7, %1
  %9 = load atomic i8, i8* bitcast (i64* @_ZGVZNK5blink23SVGAnimateMotionElement13GetRotateModeEvE14s_auto_reverse to i8*) acquire, align 8
  %10 = icmp eq i8 %9, 0
  br i1 %10, label %11, label %15, !prof !4

11:                                               ; preds = %8
  %12 = tail call i32 @__cxa_guard_acquire(i64* nonnull @_ZGVZNK5blink23SVGAnimateMotionElement13GetRotateModeEvE14s_auto_reverse) #8
  %13 = icmp eq i32 %12, 0
  br i1 %13, label %15, label %14

14:                                               ; preds = %11
  tail call void @_ZN3WTF12AtomicStringC2EPKhm(%"class.WTF::AtomicString"* bitcast (%"class.WTF::StaticSingleton"* @_ZZNK5blink23SVGAnimateMotionElement13GetRotateModeEvE14s_auto_reverse to %"class.WTF::AtomicString"*), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.1, i64 0, i64 0), i64 12) #8
  tail call void @__cxa_guard_release(i64* nonnull @_ZGVZNK5blink23SVGAnimateMotionElement13GetRotateModeEvE14s_auto_reverse) #8
  br label %15

15:                                               ; preds = %11, %14, %8
  %16 = getelementptr inbounds %"class.blink::SVGAnimateMotionElement", %"class.blink::SVGAnimateMotionElement"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %17 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink9svg_names11kRotateAttrE, align 8
  %18 = tail call dereferenceable(8) %"class.WTF::AtomicString"* @_ZNK5blink7Element12getAttributeERKNS_13QualifiedNameE(%"class.blink::Element"* %16, %"class.blink::QualifiedName"* dereferenceable(8) %17) #8
  %19 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %18, i64 0, i32 0, i32 0, i32 0
  %20 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %19, align 8
  %21 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** bitcast (%"class.WTF::StaticSingleton"* @_ZZNK5blink23SVGAnimateMotionElement13GetRotateModeEvE10s_auto_val to %"class.WTF::StringImpl"**), align 8
  %22 = icmp eq %"class.WTF::StringImpl"* %20, %21
  br i1 %22, label %27, label %23

23:                                               ; preds = %15
  %24 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** bitcast (%"class.WTF::StaticSingleton"* @_ZZNK5blink23SVGAnimateMotionElement13GetRotateModeEvE14s_auto_reverse to %"class.WTF::StringImpl"**), align 8
  %25 = icmp eq %"class.WTF::StringImpl"* %20, %24
  %26 = select i1 %25, i32 2, i32 0
  br label %27

27:                                               ; preds = %23, %15
  %28 = phi i32 [ 1, %15 ], [ %26, %23 ]
  ret i32 %28
}

; Function Attrs: nofree nounwind
declare i32 @__cxa_guard_acquire(i64*) local_unnamed_addr #5

; Function Attrs: nofree nounwind
declare void @__cxa_guard_release(i64*) local_unnamed_addr #5

declare dereferenceable(8) %"class.WTF::AtomicString"* @_ZNK5blink7Element12getAttributeERKNS_13QualifiedNameE(%"class.blink::Element"*, %"class.blink::QualifiedName"* dereferenceable(8)) local_unnamed_addr #1

declare %"class.blink::SVGPathElement"* @_ZN5blink15SVGMPathElement11PathElementEv(%"class.blink::SVGMPathElement"*) local_unnamed_addr #1

declare void @_ZNK5blink14SVGPathElement13AttributePathEv(%"class.blink::Path"* sret, %"class.blink::SVGPathElement"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink23SVGAnimateMotionElement19UpdateAnimationModeEv(%"class.blink::SVGAnimateMotionElement"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::SVGAnimateMotionElement", %"class.blink::SVGAnimateMotionElement"* %0, i64 0, i32 5
  %3 = tail call zeroext i1 @_ZNK5blink4Path7IsEmptyEv(%"class.blink::Path"* %2) #8
  br i1 %3, label %6, label %4

4:                                                ; preds = %1
  %5 = getelementptr inbounds %"class.blink::SVGAnimateMotionElement", %"class.blink::SVGAnimateMotionElement"* %0, i64 0, i32 0, i32 12
  store i32 6, i32* %5, align 4
  br label %8

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.blink::SVGAnimateMotionElement", %"class.blink::SVGAnimateMotionElement"* %0, i64 0, i32 0
  tail call void @_ZN5blink19SVGAnimationElement19UpdateAnimationModeEv(%"class.blink::SVGAnimationElement"* %7) #8
  br label %8

8:                                                ; preds = %6, %4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK5blink23SVGAnimateMotionElement20CreateAnimationValueEv(%"struct.blink::SMILAnimationValue"* noalias sret, %"class.blink::SVGAnimateMotionElement"* nocapture readnone) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"struct.blink::SMILAnimationValue", %"struct.blink::SMILAnimationValue"* %0, i64 0, i32 1
  %4 = bitcast %"struct.blink::SMILAnimationValue"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %4, i8 0, i64 56, i1 false)
  tail call void @_ZN5blink15AffineTransformC1Ev(%"class.blink::AffineTransform"* %3) #8
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #4

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink23SVGAnimateMotionElement19ClearAnimationValueEv(%"class.blink::SVGAnimateMotionElement"* nocapture readonly) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::SVGAnimateMotionElement", %"class.blink::SVGAnimateMotionElement"* %0, i64 0, i32 0, i32 0, i32 2, i32 0, i32 0
  %3 = load %"class.blink::SVGElement"*, %"class.blink::SVGElement"** %2, align 8
  tail call void @_ZN5blink10SVGElement28ClearAnimatedMotionTransformEv(%"class.blink::SVGElement"* %3) #8
  ret void
}

declare void @_ZN5blink10SVGElement28ClearAnimatedMotionTransformEv(%"class.blink::SVGElement"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN5blink23SVGAnimateMotionElement31CalculateToAtEndOfDurationValueERKN3WTF6StringE(%"class.blink::SVGAnimateMotionElement"*, %"class.WTF::String"* nocapture readonly dereferenceable(8)) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::SVGAnimateMotionElement", %"class.blink::SVGAnimateMotionElement"* %0, i64 0, i32 3
  %4 = tail call fastcc zeroext i1 @_ZN5blinkL10ParsePointERKN3WTF6StringERNS_10FloatPointE(%"class.WTF::String"* dereferenceable(8) %1, %"class.blink::FloatPoint"* dereferenceable(8) %3)
  ret i1 true
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc zeroext i1 @_ZN5blinkL10ParsePointERKN3WTF6StringERNS_10FloatPointE(%"class.WTF::String"* nocapture readonly dereferenceable(8), %"class.blink::FloatPoint"* dereferenceable(8)) unnamed_addr #0 {
  %3 = alloca i8*, align 8
  %4 = alloca float, align 4
  %5 = alloca float, align 4
  %6 = alloca i16*, align 8
  %7 = alloca float, align 4
  %8 = alloca float, align 4
  %9 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %0, i64 0, i32 0, i32 0
  %10 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %9, align 8
  %11 = icmp eq %"class.WTF::StringImpl"* %10, null
  br i1 %11, label %126, label %12

12:                                               ; preds = %2
  %13 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %10, i64 0, i32 1
  %14 = load i32, i32* %13, align 4
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %126, label %16

16:                                               ; preds = %12
  %17 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %10, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %18 = load atomic i32, i32* %17 monotonic, align 4
  %19 = and i32 %18, 1
  %20 = icmp eq i32 %19, 0
  %21 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %10, i64 1
  br i1 %20, label %82, label %22

22:                                               ; preds = %16
  %23 = bitcast %"class.WTF::StringImpl"* %21 to i8*
  %24 = zext i32 %14 to i64
  %25 = getelementptr inbounds i8, i8* %23, i64 %24
  %26 = bitcast i8** %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %26) #8
  %27 = bitcast i8** %3 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %21, %"class.WTF::StringImpl"** %27, align 8
  %28 = load i8, i8* %23, align 1
  %29 = icmp ult i8 %28, 33
  br i1 %29, label %33, label %43

30:                                               ; preds = %37
  %31 = load i8, i8* %38, align 1
  %32 = icmp ult i8 %31, 33
  br i1 %32, label %33, label %41

33:                                               ; preds = %22, %30
  %34 = phi i8 [ %31, %30 ], [ %28, %22 ]
  %35 = phi i8* [ %38, %30 ], [ %23, %22 ]
  %36 = phi i1 [ %39, %30 ], [ true, %22 ]
  switch i8 %34, label %41 [
    i8 32, label %37
    i8 10, label %37
    i8 9, label %37
    i8 13, label %37
    i8 12, label %37
  ]

37:                                               ; preds = %33, %33, %33, %33, %33
  %38 = getelementptr inbounds i8, i8* %35, i64 1
  store i8* %38, i8** %3, align 8
  %39 = icmp ult i8* %38, %25
  %40 = icmp eq i8* %38, %25
  br i1 %40, label %41, label %30

41:                                               ; preds = %37, %33, %30
  %42 = phi i1 [ %39, %30 ], [ %36, %33 ], [ %39, %37 ]
  br i1 %42, label %43, label %80

43:                                               ; preds = %41, %22
  %44 = bitcast float* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %44) #8
  store float 0.000000e+00, float* %4, align 4
  %45 = call zeroext i1 @_ZN5blink11ParseNumberERPKhS1_RfNS_14WhitespaceModeE(i8** nonnull dereferenceable(8) %3, i8* %25, float* nonnull dereferenceable(4) %4, i32 3) #8
  br i1 %45, label %46, label %78

46:                                               ; preds = %43
  %47 = bitcast float* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %47) #8
  store float 0.000000e+00, float* %5, align 4
  %48 = call zeroext i1 @_ZN5blink11ParseNumberERPKhS1_RfNS_14WhitespaceModeE(i8** nonnull dereferenceable(8) %3, i8* %25, float* nonnull dereferenceable(4) %5, i32 3) #8
  br i1 %48, label %49, label %76

49:                                               ; preds = %46
  %50 = bitcast float* %4 to i32*
  %51 = load i32, i32* %50, align 4
  %52 = bitcast float* %5 to i32*
  %53 = load i32, i32* %52, align 4
  %54 = bitcast %"class.blink::FloatPoint"* %1 to i32*
  store i32 %51, i32* %54, align 4
  %55 = getelementptr inbounds %"class.blink::FloatPoint", %"class.blink::FloatPoint"* %1, i64 0, i32 1
  %56 = bitcast float* %55 to i32*
  store i32 %53, i32* %56, align 4
  %57 = load i8*, i8** %3, align 8
  %58 = icmp ult i8* %57, %25
  br i1 %58, label %59, label %73

59:                                               ; preds = %49
  %60 = load i8, i8* %57, align 1
  %61 = icmp ult i8 %60, 33
  br i1 %61, label %65, label %73

62:                                               ; preds = %69
  %63 = load i8, i8* %70, align 1
  %64 = icmp ult i8 %63, 33
  br i1 %64, label %65, label %73

65:                                               ; preds = %59, %62
  %66 = phi i8 [ %63, %62 ], [ %60, %59 ]
  %67 = phi i8* [ %70, %62 ], [ %57, %59 ]
  %68 = phi i1 [ %71, %62 ], [ true, %59 ]
  switch i8 %66, label %73 [
    i8 32, label %69
    i8 10, label %69
    i8 9, label %69
    i8 13, label %69
    i8 12, label %69
  ]

69:                                               ; preds = %65, %65, %65, %65, %65
  %70 = getelementptr inbounds i8, i8* %67, i64 1
  store i8* %70, i8** %3, align 8
  %71 = icmp ult i8* %70, %25
  %72 = icmp eq i8* %70, %25
  br i1 %72, label %73, label %62

73:                                               ; preds = %69, %65, %62, %59, %49
  %74 = phi i1 [ false, %49 ], [ true, %59 ], [ %71, %62 ], [ %68, %65 ], [ %71, %69 ]
  %75 = xor i1 %74, true
  br label %76

76:                                               ; preds = %73, %46
  %77 = phi i1 [ %75, %73 ], [ false, %46 ]
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %47) #8
  br label %78

78:                                               ; preds = %76, %43
  %79 = phi i1 [ %77, %76 ], [ false, %43 ]
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %44) #8
  br label %80

80:                                               ; preds = %78, %41
  %81 = phi i1 [ %79, %78 ], [ false, %41 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %26) #8
  br label %126

82:                                               ; preds = %16
  %83 = bitcast %"class.WTF::StringImpl"* %21 to i16*
  %84 = zext i32 %14 to i64
  %85 = getelementptr inbounds i16, i16* %83, i64 %84
  %86 = bitcast i16** %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %86) #8
  %87 = bitcast i16** %6 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %21, %"class.WTF::StringImpl"** %87, align 8
  br label %88

88:                                               ; preds = %82, %93
  %89 = phi i16* [ %94, %93 ], [ %83, %82 ]
  %90 = load i16, i16* %89, align 2
  %91 = icmp ult i16 %90, 33
  br i1 %91, label %92, label %96

92:                                               ; preds = %88
  switch i16 %90, label %96 [
    i16 32, label %93
    i16 10, label %93
    i16 9, label %93
    i16 13, label %93
    i16 12, label %93
  ]

93:                                               ; preds = %92, %92, %92, %92, %92
  %94 = getelementptr inbounds i16, i16* %89, i64 1
  store i16* %94, i16** %6, align 8
  %95 = icmp ult i16* %94, %85
  br i1 %95, label %88, label %124

96:                                               ; preds = %92, %88
  %97 = bitcast float* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %97) #8
  store float 0.000000e+00, float* %7, align 4
  %98 = call zeroext i1 @_ZN5blink11ParseNumberERPKDsS1_RfNS_14WhitespaceModeE(i16** nonnull dereferenceable(8) %6, i16* %85, float* nonnull dereferenceable(4) %7, i32 3) #8
  br i1 %98, label %99, label %122

99:                                               ; preds = %96
  %100 = bitcast float* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %100) #8
  store float 0.000000e+00, float* %8, align 4
  %101 = call zeroext i1 @_ZN5blink11ParseNumberERPKDsS1_RfNS_14WhitespaceModeE(i16** nonnull dereferenceable(8) %6, i16* %85, float* nonnull dereferenceable(4) %8, i32 3) #8
  br i1 %101, label %102, label %120

102:                                              ; preds = %99
  %103 = bitcast float* %7 to i32*
  %104 = load i32, i32* %103, align 4
  %105 = bitcast float* %8 to i32*
  %106 = load i32, i32* %105, align 4
  %107 = bitcast %"class.blink::FloatPoint"* %1 to i32*
  store i32 %104, i32* %107, align 4
  %108 = getelementptr inbounds %"class.blink::FloatPoint", %"class.blink::FloatPoint"* %1, i64 0, i32 1
  %109 = bitcast float* %108 to i32*
  store i32 %106, i32* %109, align 4
  %110 = load i16*, i16** %6, align 8
  %111 = icmp ult i16* %110, %85
  br i1 %111, label %112, label %120

112:                                              ; preds = %102, %117
  %113 = phi i16* [ %118, %117 ], [ %110, %102 ]
  %114 = load i16, i16* %113, align 2
  %115 = icmp ult i16 %114, 33
  br i1 %115, label %116, label %120

116:                                              ; preds = %112
  switch i16 %114, label %120 [
    i16 32, label %117
    i16 10, label %117
    i16 9, label %117
    i16 13, label %117
    i16 12, label %117
  ]

117:                                              ; preds = %116, %116, %116, %116, %116
  %118 = getelementptr inbounds i16, i16* %113, i64 1
  store i16* %118, i16** %6, align 8
  %119 = icmp ult i16* %118, %85
  br i1 %119, label %112, label %120

120:                                              ; preds = %117, %116, %112, %102, %99
  %121 = phi i1 [ false, %99 ], [ true, %102 ], [ false, %116 ], [ true, %117 ], [ false, %112 ]
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %100) #8
  br label %122

122:                                              ; preds = %120, %96
  %123 = phi i1 [ %121, %120 ], [ false, %96 ]
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %97) #8
  br label %124

124:                                              ; preds = %93, %122
  %125 = phi i1 [ %123, %122 ], [ false, %93 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %86) #8
  br label %126

126:                                              ; preds = %2, %124, %80, %12
  %127 = phi i1 [ false, %12 ], [ %81, %80 ], [ %125, %124 ], [ false, %2 ]
  ret i1 %127
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN5blink23SVGAnimateMotionElement24CalculateFromAndToValuesERKN3WTF6StringES4_(%"class.blink::SVGAnimateMotionElement"*, %"class.WTF::String"* nocapture readonly dereferenceable(8), %"class.WTF::String"* nocapture readonly dereferenceable(8)) unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.blink::SVGAnimateMotionElement", %"class.blink::SVGAnimateMotionElement"* %0, i64 0, i32 1
  %5 = tail call fastcc zeroext i1 @_ZN5blinkL10ParsePointERKN3WTF6StringERNS_10FloatPointE(%"class.WTF::String"* dereferenceable(8) %1, %"class.blink::FloatPoint"* dereferenceable(8) %4)
  %6 = getelementptr inbounds %"class.blink::SVGAnimateMotionElement", %"class.blink::SVGAnimateMotionElement"* %0, i64 0, i32 2
  %7 = tail call fastcc zeroext i1 @_ZN5blinkL10ParsePointERKN3WTF6StringERNS_10FloatPointE(%"class.WTF::String"* dereferenceable(8) %2, %"class.blink::FloatPoint"* dereferenceable(8) %6)
  %8 = getelementptr inbounds %"class.blink::SVGAnimateMotionElement", %"class.blink::SVGAnimateMotionElement"* %0, i64 0, i32 3
  %9 = bitcast %"class.blink::FloatPoint"* %6 to i64*
  %10 = bitcast %"class.blink::FloatPoint"* %8 to i64*
  %11 = load i64, i64* %9, align 4
  store i64 %11, i64* %10, align 8
  ret i1 true
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN5blink23SVGAnimateMotionElement24CalculateFromAndByValuesERKN3WTF6StringES4_(%"class.blink::SVGAnimateMotionElement"*, %"class.WTF::String"* nocapture readonly dereferenceable(8), %"class.WTF::String"* nocapture readonly dereferenceable(8)) unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.blink::SVGAnimateMotionElement", %"class.blink::SVGAnimateMotionElement"* %0, i64 0, i32 1
  %5 = tail call fastcc zeroext i1 @_ZN5blinkL10ParsePointERKN3WTF6StringERNS_10FloatPointE(%"class.WTF::String"* dereferenceable(8) %1, %"class.blink::FloatPoint"* dereferenceable(8) %4) #8
  %6 = getelementptr inbounds %"class.blink::SVGAnimateMotionElement", %"class.blink::SVGAnimateMotionElement"* %0, i64 0, i32 2
  %7 = tail call fastcc zeroext i1 @_ZN5blinkL10ParsePointERKN3WTF6StringERNS_10FloatPointE(%"class.WTF::String"* dereferenceable(8) %2, %"class.blink::FloatPoint"* dereferenceable(8) %6) #8
  %8 = getelementptr inbounds %"class.blink::SVGAnimateMotionElement", %"class.blink::SVGAnimateMotionElement"* %0, i64 0, i32 3
  %9 = bitcast %"class.blink::FloatPoint"* %6 to i64*
  %10 = bitcast %"class.blink::FloatPoint"* %8 to i64*
  %11 = load i64, i64* %9, align 4
  %12 = getelementptr inbounds %"class.blink::FloatPoint", %"class.blink::FloatPoint"* %4, i64 0, i32 0
  %13 = load float, float* %12, align 4
  %14 = getelementptr inbounds %"class.blink::SVGAnimateMotionElement", %"class.blink::SVGAnimateMotionElement"* %0, i64 0, i32 1, i32 1
  %15 = load float, float* %14, align 4
  %16 = getelementptr inbounds %"class.blink::FloatPoint", %"class.blink::FloatPoint"* %6, i64 0, i32 0
  %17 = trunc i64 %11 to i32
  %18 = bitcast i32 %17 to float
  %19 = fadd float %13, %18
  store float %19, float* %16, align 4
  %20 = getelementptr inbounds %"class.blink::SVGAnimateMotionElement", %"class.blink::SVGAnimateMotionElement"* %0, i64 0, i32 2, i32 1
  %21 = load float, float* %20, align 4
  %22 = fadd float %15, %21
  store float %22, float* %20, align 4
  %23 = load i64, i64* %9, align 4
  store i64 %23, i64* %10, align 8
  ret i1 true
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK5blink23SVGAnimateMotionElement23CalculateAnimationValueERNS_18SMILAnimationValueEfj(%"class.blink::SVGAnimateMotionElement"*, %"struct.blink::SMILAnimationValue"* dereferenceable(56), float, i32) unnamed_addr #6 align 2 {
  %5 = getelementptr inbounds %"class.blink::SVGAnimateMotionElement", %"class.blink::SVGAnimateMotionElement"* %0, i64 0, i32 0
  %6 = tail call i24 @_ZNK5blink19SVGAnimationElement23ComputeEffectParametersEv(%"class.blink::SVGAnimationElement"* %5) #8
  %7 = trunc i24 %6 to i8
  %8 = lshr i24 %6, 16
  %9 = trunc i24 %8 to i8
  %10 = getelementptr inbounds %"struct.blink::SMILAnimationValue", %"struct.blink::SMILAnimationValue"* %1, i64 0, i32 1
  %11 = and i24 %6, 65280
  %12 = icmp eq i24 %11, 0
  br i1 %12, label %13, label %14

13:                                               ; preds = %4
  tail call void @_ZN5blink15AffineTransform12MakeIdentityEv(%"class.blink::AffineTransform"* %10) #8
  br label %14

14:                                               ; preds = %4, %13
  %15 = getelementptr inbounds %"class.blink::SVGAnimateMotionElement", %"class.blink::SVGAnimateMotionElement"* %0, i64 0, i32 0, i32 12
  %16 = load i32, i32* %15, align 4
  %17 = icmp eq i32 %16, 6
  br i1 %17, label %68, label %18

18:                                               ; preds = %14
  %19 = getelementptr inbounds %"class.blink::SVGAnimateMotionElement", %"class.blink::SVGAnimateMotionElement"* %0, i64 0, i32 1, i32 0
  %20 = load float, float* %19, align 4
  %21 = getelementptr inbounds %"class.blink::SVGAnimateMotionElement", %"class.blink::SVGAnimateMotionElement"* %0, i64 0, i32 2, i32 0
  %22 = load float, float* %21, align 4
  %23 = getelementptr inbounds %"class.blink::SVGAnimateMotionElement", %"class.blink::SVGAnimateMotionElement"* %0, i64 0, i32 3, i32 0
  %24 = load float, float* %23, align 4
  %25 = icmp eq i8 %7, 0
  br i1 %25, label %29, label %26

26:                                               ; preds = %18
  %27 = fcmp olt float %2, 5.000000e-01
  %28 = select i1 %27, float %20, float %22
  br label %33

29:                                               ; preds = %18
  %30 = fsub float %22, %20
  %31 = fmul float %30, %2
  %32 = fadd float %20, %31
  br label %33

33:                                               ; preds = %29, %26
  %34 = phi float [ %28, %26 ], [ %32, %29 ]
  %35 = icmp eq i32 %3, 0
  %36 = icmp eq i8 %9, 0
  %37 = or i1 %35, %36
  br i1 %37, label %42, label %38

38:                                               ; preds = %33
  %39 = uitofp i32 %3 to float
  %40 = fmul float %24, %39
  %41 = fadd float %40, %34
  br label %42

42:                                               ; preds = %33, %38
  %43 = phi float [ %41, %38 ], [ %34, %33 ]
  %44 = getelementptr inbounds %"class.blink::SVGAnimateMotionElement", %"class.blink::SVGAnimateMotionElement"* %0, i64 0, i32 1, i32 1
  %45 = load float, float* %44, align 4
  %46 = getelementptr inbounds %"class.blink::SVGAnimateMotionElement", %"class.blink::SVGAnimateMotionElement"* %0, i64 0, i32 2, i32 1
  %47 = load float, float* %46, align 4
  %48 = getelementptr inbounds %"class.blink::SVGAnimateMotionElement", %"class.blink::SVGAnimateMotionElement"* %0, i64 0, i32 3, i32 1
  %49 = load float, float* %48, align 4
  br i1 %25, label %53, label %50

50:                                               ; preds = %42
  %51 = fcmp olt float %2, 5.000000e-01
  %52 = select i1 %51, float %45, float %47
  br label %57

53:                                               ; preds = %42
  %54 = fsub float %47, %45
  %55 = fmul float %54, %2
  %56 = fadd float %45, %55
  br label %57

57:                                               ; preds = %53, %50
  %58 = phi float [ %52, %50 ], [ %56, %53 ]
  br i1 %37, label %63, label %59

59:                                               ; preds = %57
  %60 = uitofp i32 %3 to float
  %61 = fmul float %49, %60
  %62 = fadd float %61, %58
  br label %63

63:                                               ; preds = %57, %59
  %64 = phi float [ %62, %59 ], [ %58, %57 ]
  %65 = fpext float %43 to double
  %66 = fpext float %64 to double
  %67 = tail call dereferenceable(48) %"class.blink::AffineTransform"* @_ZN5blink15AffineTransform9TranslateEdd(%"class.blink::AffineTransform"* %10, double %65, double %66) #8
  br label %101

68:                                               ; preds = %14
  %69 = getelementptr inbounds %"class.blink::SVGAnimateMotionElement", %"class.blink::SVGAnimateMotionElement"* %0, i64 0, i32 5
  %70 = tail call float @_ZNK5blink4Path6lengthEv(%"class.blink::Path"* %69) #8
  %71 = fmul float %70, %2
  %72 = tail call { <2 x float>, float } @_ZNK5blink4Path22PointAndNormalAtLengthEf(%"class.blink::Path"* %69, float %71) #8
  %73 = extractvalue { <2 x float>, float } %72, 0
  %74 = extractvalue { <2 x float>, float } %72, 1
  %75 = icmp eq i32 %3, 0
  %76 = icmp eq i8 %9, 0
  %77 = or i1 %75, %76
  br i1 %77, label %85, label %78

78:                                               ; preds = %68
  %79 = tail call <2 x float> @_ZNK5blink4Path13PointAtLengthEf(%"class.blink::Path"* %69, float %70) #8
  %80 = uitofp i32 %3 to float
  %81 = insertelement <2 x float> undef, float %80, i32 0
  %82 = shufflevector <2 x float> %81, <2 x float> undef, <2 x i32> zeroinitializer
  %83 = fmul <2 x float> %79, %82
  %84 = fadd <2 x float> %73, %83
  br label %85

85:                                               ; preds = %68, %78
  %86 = phi <2 x float> [ %73, %68 ], [ %84, %78 ]
  %87 = extractelement <2 x float> %86, i32 0
  %88 = fpext float %87 to double
  %89 = extractelement <2 x float> %86, i32 1
  %90 = fpext float %89 to double
  %91 = tail call dereferenceable(48) %"class.blink::AffineTransform"* @_ZN5blink15AffineTransform9TranslateEdd(%"class.blink::AffineTransform"* %10, double %88, double %90) #8
  %92 = tail call i32 @_ZNK5blink23SVGAnimateMotionElement13GetRotateModeEv(%"class.blink::SVGAnimateMotionElement"* %0)
  %93 = add i32 %92, -1
  %94 = icmp ugt i32 %93, 1
  br i1 %94, label %101, label %95

95:                                               ; preds = %85
  %96 = icmp eq i32 %92, 2
  %97 = fadd float %74, 1.800000e+02
  %98 = select i1 %96, float %97, float %74
  %99 = fpext float %98 to double
  %100 = tail call dereferenceable(48) %"class.blink::AffineTransform"* @_ZN5blink15AffineTransform6RotateEd(%"class.blink::AffineTransform"* %10, double %99) #8
  br label %101

101:                                              ; preds = %95, %85, %63
  ret void
}

declare i24 @_ZNK5blink19SVGAnimationElement23ComputeEffectParametersEv(%"class.blink::SVGAnimationElement"*) local_unnamed_addr #1

declare void @_ZN5blink15AffineTransform12MakeIdentityEv(%"class.blink::AffineTransform"*) local_unnamed_addr #1

declare dereferenceable(48) %"class.blink::AffineTransform"* @_ZN5blink15AffineTransform9TranslateEdd(%"class.blink::AffineTransform"*, double, double) local_unnamed_addr #1

declare float @_ZNK5blink4Path6lengthEv(%"class.blink::Path"*) local_unnamed_addr #1

declare { <2 x float>, float } @_ZNK5blink4Path22PointAndNormalAtLengthEf(%"class.blink::Path"*, float) local_unnamed_addr #1

declare <2 x float> @_ZNK5blink4Path13PointAtLengthEf(%"class.blink::Path"*, float) local_unnamed_addr #1

declare dereferenceable(48) %"class.blink::AffineTransform"* @_ZN5blink15AffineTransform6RotateEd(%"class.blink::AffineTransform"*, double) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink23SVGAnimateMotionElement20ApplyResultsToTargetERKNS_18SMILAnimationValueE(%"class.blink::SVGAnimateMotionElement"* nocapture readonly, %"struct.blink::SMILAnimationValue"* dereferenceable(56)) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::SVGAnimateMotionElement", %"class.blink::SVGAnimateMotionElement"* %0, i64 0, i32 0, i32 0, i32 2, i32 0, i32 0
  %4 = load %"class.blink::SVGElement"*, %"class.blink::SVGElement"** %3, align 8
  %5 = getelementptr inbounds %"struct.blink::SMILAnimationValue", %"struct.blink::SMILAnimationValue"* %1, i64 0, i32 1
  tail call void @_ZN5blink10SVGElement26SetAnimatedMotionTransformERKNS_15AffineTransformE(%"class.blink::SVGElement"* %4, %"class.blink::AffineTransform"* dereferenceable(48) %5) #8
  ret void
}

declare void @_ZN5blink10SVGElement26SetAnimatedMotionTransformERKNS_15AffineTransformE(%"class.blink::SVGElement"*, %"class.blink::AffineTransform"* dereferenceable(48)) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden float @_ZN5blink23SVGAnimateMotionElement17CalculateDistanceERKN3WTF6StringES4_(%"class.blink::SVGAnimateMotionElement"* nocapture readnone, %"class.WTF::String"* nocapture readonly dereferenceable(8), %"class.WTF::String"* nocapture readonly dereferenceable(8)) unnamed_addr #6 align 2 {
  %4 = alloca %"class.blink::FloatPoint", align 4
  %5 = alloca %"class.blink::FloatPoint", align 4
  %6 = bitcast %"class.blink::FloatPoint"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #8
  %7 = getelementptr inbounds %"class.blink::FloatPoint", %"class.blink::FloatPoint"* %4, i64 0, i32 0
  %8 = getelementptr inbounds %"class.blink::FloatPoint", %"class.blink::FloatPoint"* %4, i64 0, i32 1
  store float 0.000000e+00, float* %7, align 4
  store float 0.000000e+00, float* %8, align 4
  %9 = bitcast %"class.blink::FloatPoint"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %9) #8
  %10 = getelementptr inbounds %"class.blink::FloatPoint", %"class.blink::FloatPoint"* %5, i64 0, i32 0
  %11 = getelementptr inbounds %"class.blink::FloatPoint", %"class.blink::FloatPoint"* %5, i64 0, i32 1
  store float 0.000000e+00, float* %10, align 4
  store float 0.000000e+00, float* %11, align 4
  %12 = call fastcc zeroext i1 @_ZN5blinkL10ParsePointERKN3WTF6StringERNS_10FloatPointE(%"class.WTF::String"* dereferenceable(8) %1, %"class.blink::FloatPoint"* nonnull dereferenceable(8) %4)
  br i1 %12, label %13, label %26

13:                                               ; preds = %3
  %14 = call fastcc zeroext i1 @_ZN5blinkL10ParsePointERKN3WTF6StringERNS_10FloatPointE(%"class.WTF::String"* dereferenceable(8) %2, %"class.blink::FloatPoint"* nonnull dereferenceable(8) %5)
  br i1 %14, label %15, label %26

15:                                               ; preds = %13
  %16 = load float, float* %10, align 4
  %17 = load float, float* %7, align 4
  %18 = fsub float %16, %17
  %19 = load float, float* %11, align 4
  %20 = load float, float* %8, align 4
  %21 = fsub float %19, %20
  %22 = fmul float %18, %18
  %23 = fmul float %21, %21
  %24 = fadd float %22, %23
  %25 = call float @sqrtf(float %24) #8
  br label %26

26:                                               ; preds = %13, %3, %15
  %27 = phi float [ %25, %15 ], [ -1.000000e+00, %3 ], [ -1.000000e+00, %13 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #8
  ret float %27
}

; Function Attrs: nofree nounwind
declare float @sqrtf(float) local_unnamed_addr #7

declare zeroext i1 @_ZNK5blink4Path7IsEmptyEv(%"class.blink::Path"*) local_unnamed_addr #1

declare void @_ZN5blink19SVGAnimationElement19UpdateAnimationModeEv(%"class.blink::SVGAnimationElement"*) unnamed_addr #1

declare i8* @_ZNK5blink15ScriptWrappable18NameInHeapSnapshotEv(%"class.blink::ScriptWrappable"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink15ScriptWrappable18HasPendingActivityEv(%"class.blink::ScriptWrappable"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink11EventTarget17HasEventListenersEv(%"class.blink::EventTarget"*) unnamed_addr #3 comdat align 2 {
  %2 = bitcast %"class.blink::EventTarget"* %0 to %"class.blink::EventTargetData"* (%"class.blink::EventTarget"*)***
  %3 = load %"class.blink::EventTargetData"* (%"class.blink::EventTarget"*)**, %"class.blink::EventTargetData"* (%"class.blink::EventTarget"*)*** %2, align 8
  %4 = getelementptr inbounds %"class.blink::EventTargetData"* (%"class.blink::EventTarget"*)*, %"class.blink::EventTargetData"* (%"class.blink::EventTarget"*)** %3, i64 25
  %5 = load %"class.blink::EventTargetData"* (%"class.blink::EventTarget"*)*, %"class.blink::EventTargetData"* (%"class.blink::EventTarget"*)** %4, align 8
  %6 = tail call %"class.blink::EventTargetData"* %5(%"class.blink::EventTarget"* %0) #8
  %7 = icmp eq %"class.blink::EventTargetData"* %6, null
  br i1 %7, label %12, label %8

8:                                                ; preds = %1
  %9 = getelementptr inbounds %"class.blink::EventTargetData", %"class.blink::EventTargetData"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %10 = load i32, i32* %9, align 4
  %11 = icmp ne i32 %10, 0
  br label %12

12:                                               ; preds = %1, %8
  %13 = phi i1 [ %11, %8 ], [ false, %1 ]
  ret i1 %13
}

declare void @_ZNK5blink14SVGSMILElement5TraceEPNS_7VisitorE(%"class.blink::SVGSMILElement"*, %"class.blink::Visitor"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.blink::WrapperTypeInfo"* @_ZNK5blink23SVGAnimateMotionElement18GetWrapperTypeInfoEv(%"class.blink::SVGAnimateMotionElement"*) unnamed_addr #0 comdat align 2 {
  %2 = load %"struct.blink::WrapperTypeInfo"*, %"struct.blink::WrapperTypeInfo"** @_ZN5blink23SVGAnimateMotionElement18wrapper_type_info_E, align 8
  ret %"struct.blink::WrapperTypeInfo"* %2
}

declare %"class.v8::Value"* @_ZN5blink15ScriptWrappable4WrapEPNS_11ScriptStateE(%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*) unnamed_addr #1

declare %"class.v8::Object"* @_ZN5blink15ScriptWrappable20AssociateWithWrapperEPN2v87IsolateEPKNS_15WrapperTypeInfoENS1_5LocalINS1_6ObjectEEE(%"class.blink::ScriptWrappable"*, %"class.v8::Isolate"*, %"struct.blink::WrapperTypeInfo"*, %"class.v8::Object"*) unnamed_addr #1

declare dereferenceable(8) %"class.WTF::AtomicString"* @_ZNK5blink4Node13InterfaceNameEv(%"class.blink::Node"*) unnamed_addr #1

declare %"class.blink::ExecutionContext"* @_ZNK5blink4Node19GetExecutionContextEv(%"class.blink::Node"*) unnamed_addr #1

declare %"class.blink::Node"* @_ZN5blink4Node6ToNodeEv(%"class.blink::Node"*) unnamed_addr #1

declare %"class.blink::DOMWindow"* @_ZNK5blink11EventTarget11ToDOMWindowEv(%"class.blink::EventTarget"*) unnamed_addr #1

declare %"class.blink::LocalDOMWindow"* @_ZNK5blink11EventTarget16ToLocalDOMWindowEv(%"class.blink::EventTarget"*) unnamed_addr #1

declare %"class.blink::LocalDOMWindow"* @_ZN5blink11EventTarget16ToLocalDOMWindowEv(%"class.blink::EventTarget"*) unnamed_addr #1

declare %"class.blink::MessagePort"* @_ZN5blink11EventTarget13ToMessagePortEv(%"class.blink::EventTarget"*) unnamed_addr #1

declare %"class.blink::ServiceWorker"* @_ZN5blink11EventTarget15ToServiceWorkerEv(%"class.blink::EventTarget"*) unnamed_addr #1

declare %"class.blink::PortalHost"* @_ZN5blink11EventTarget12ToPortalHostEv(%"class.blink::EventTarget"*) unnamed_addr #1

declare void @_ZN5blink4Node23RemoveAllEventListenersEv(%"class.blink::Node"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink11EventTarget15KeepEventInNodeERKNS_5EventE(%"class.blink::EventTarget"*, %"class.blink::Event"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink11EventTarget27IsWindowOrWorkerGlobalScopeEv(%"class.blink::EventTarget"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

declare zeroext i1 @_ZN5blink11EventTarget24AddEventListenerInternalERKN3WTF12AtomicStringEPNS_13EventListenerEPKNS_31AddEventListenerOptionsResolvedE(%"class.blink::EventTarget"*, %"class.WTF::AtomicString"* dereferenceable(8), %"class.blink::EventListener"*, %"class.blink::AddEventListenerOptionsResolved"*) unnamed_addr #1

declare void @_ZN5blink14SVGSMILElement18AddedEventListenerERKN3WTF12AtomicStringERNS_23RegisteredEventListenerE(%"class.blink::SVGSMILElement"*, %"class.WTF::AtomicString"* dereferenceable(8), %"class.blink::RegisteredEventListener"* dereferenceable(16)) unnamed_addr #1

declare void @_ZN5blink10SVGElement20RemovedEventListenerERKN3WTF12AtomicStringERKNS_23RegisteredEventListenerE(%"class.blink::SVGElement"*, %"class.WTF::AtomicString"* dereferenceable(8), %"class.blink::RegisteredEventListener"* dereferenceable(16)) unnamed_addr #1

declare i32 @_ZN5blink4Node21DispatchEventInternalERNS_5EventE(%"class.blink::Node"*, %"class.blink::Event"*) unnamed_addr #1

declare %"class.blink::EventTargetData"* @_ZN5blink4Node18GetEventTargetDataEv(%"class.blink::Node"*) unnamed_addr #1

declare dereferenceable(56) %"class.blink::EventTargetData"* @_ZN5blink4Node21EnsureEventTargetDataEv(%"class.blink::Node"*) unnamed_addr #1

declare %"class.WTF::StringImpl"* @_ZNK5blink7Element8nodeNameEv(%"class.blink::Element"*) unnamed_addr #1

declare %"class.WTF::StringImpl"* @_ZNK5blink4Node9nodeValueEv(%"class.blink::Node"*) unnamed_addr #1

declare void @_ZN5blink4Node12setNodeValueERKN3WTF6StringE(%"class.blink::Node"*, %"class.WTF::String"* dereferenceable(8)) unnamed_addr #1

declare i32 @_ZNK5blink7Element11getNodeTypeEv(%"class.blink::Element"*) unnamed_addr #1

declare %"class.blink::Node"* @_ZNK5blink7Element5CloneERNS_8DocumentENS_17CloneChildrenFlagE(%"class.blink::Element"*, %"class.blink::Document"*, i32) unnamed_addr #1

declare void @_ZN5blink4Node14setTextContentERKN3WTF6StringE(%"class.blink::Node"*, %"class.WTF::String"* dereferenceable(8)) unnamed_addr #1

declare void @_ZN5blink4Node24setTextContentForBindingEPKNS_28V8UnionStringOrTrustedScriptERNS_14ExceptionStateE(%"class.blink::Node"*, %"class.blink::V8UnionStringOrTrustedScript"*, %"class.blink::ExceptionState"* dereferenceable(72)) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i8 @_ZNK5blink4Node11GetPseudoIdEv(%"class.blink::Node"*) unnamed_addr #0 comdat align 2 {
  ret i8 0
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink4Node21IsMediaControlElementEv(%"class.blink::Node"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink4Node15IsMediaControlsEv(%"class.blink::Node"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink4Node14IsMediaElementEv(%"class.blink::Node"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink4Node20IsTextTrackContainerEv(%"class.blink::Node"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink4Node12IsVTTElementEv(%"class.blink::Node"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink4Node15IsAttributeNodeEv(%"class.blink::Node"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink4Node19IsCharacterDataNodeEv(%"class.blink::Node"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink4Node19IsFrameOwnerElementEv(%"class.blink::Node"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink4Node27IsMediaRemotingInterstitialEv(%"class.blink::Node"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink4Node30IsPictureInPictureInterstitialEv(%"class.blink::Node"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink7Element23CanContainRangeEndPointEv(%"class.blink::Element"*) unnamed_addr #0 comdat align 2 {
  ret i1 true
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN5blink4Node11SheetLoadedEv(%"class.blink::Node"*) unnamed_addr #0 comdat align 2 {
  ret i1 true
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink4Node43NotifyLoadedSheetAndAllCriticalSubresourcesENS0_22LoadedSheetErrorStatusE(%"class.blink::Node"*, i32) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink4Node24StartLoadingDynamicSheetEv(%"class.blink::Node"*) unnamed_addr #0 comdat align 2 {
  ret void
}

declare void @_ZN5blink13ContainerNode10SetFocusedEbNS_5mojom9FocusTypeE(%"class.blink::ContainerNode"*, i1 zeroext, i32) unnamed_addr #1

declare void @_ZN5blink13ContainerNode10SetDraggedEb(%"class.blink::ContainerNode"*, i1 zeroext) unnamed_addr #1

declare zeroext i1 @_ZNK5blink4Node25ShouldHaveFocusAppearanceEv(%"class.blink::Node"*) unnamed_addr #1

declare void @_ZNK5blink13ContainerNode11BoundingBoxEv() unnamed_addr

declare zeroext i1 @_ZNK5blink7Element16ChildTypeAllowedENS_4Node8NodeTypeE(%"class.blink::Element"*, i32) unnamed_addr #1

declare zeroext i1 @_ZNK5blink4Node17CanStartSelectionEv(%"class.blink::Node"*) unnamed_addr #1

declare void @_ZN5blink7Element16AttachLayoutTreeERNS_4Node13AttachContextE(%"class.blink::Element"*, %"struct.blink::Node::AttachContext"* dereferenceable(32)) unnamed_addr #1

declare void @_ZN5blink10SVGElement16DetachLayoutTreeEb(%"class.blink::SVGElement"*, i1 zeroext) unnamed_addr #1

declare i32 @_ZN5blink14SVGSMILElement12InsertedIntoERNS_13ContainerNodeE(%"class.blink::SVGSMILElement"*, %"class.blink::ContainerNode"* dereferenceable(80)) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink4Node36DidNotifySubtreeInsertionsToDocumentEv(%"class.blink::Node"*) unnamed_addr #0 comdat align 2 {
  ret void
}

declare void @_ZN5blink14SVGSMILElement11RemovedFromERNS_13ContainerNodeE(%"class.blink::SVGSMILElement"*, %"class.blink::ContainerNode"* dereferenceable(80)) unnamed_addr #1

declare zeroext i1 @_ZN5blink4Node28WillRespondToMouseMoveEventsEv(%"class.blink::Node"*) unnamed_addr #1

declare zeroext i1 @_ZN5blink4Node29WillRespondToMouseClickEventsEv(%"class.blink::Node"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::EventDispatchHandlingState"* @_ZN5blink4Node23PreDispatchEventHandlerERNS_5EventE(%"class.blink::Node"*, %"class.blink::Event"*) unnamed_addr #0 comdat align 2 {
  ret %"class.blink::EventDispatchHandlingState"* null
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink4Node24PostDispatchEventHandlerERNS_5EventEPNS_26EventDispatchHandlingStateE(%"class.blink::Node"*, %"class.blink::Event"*, %"class.blink::EventDispatchHandlingState"*) unnamed_addr #0 comdat align 2 {
  ret void
}

declare void @_ZN5blink4Node17HandleLocalEventsERNS_5EventE(%"class.blink::Node"*, %"class.blink::Event"*) unnamed_addr #1

declare void @_ZN5blink4Node19DefaultEventHandlerERNS_5EventE(%"class.blink::Node"*, %"class.blink::Event"*) unnamed_addr #1

declare zeroext i1 @_ZNK5blink4Node21HasActivationBehaviorEv(%"class.blink::Node"*) unnamed_addr #1

declare %"class.blink::LayoutBox"* @_ZN5blink4Node13AutoscrollBoxEv(%"class.blink::Node"*) unnamed_addr #1

declare void @_ZN5blink4Node14StopAutoscrollEv(%"class.blink::Node"*) unnamed_addr #1

declare void @_ZN5blink7Element20DidMoveToNewDocumentERNS_8DocumentE(%"class.blink::Element"*, %"class.blink::Document"*) unnamed_addr #1

declare %"class.WTF::StringImpl"* @_ZNK5blink4Node13DebugNodeNameEv(%"class.blink::Node"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::ComputedStyle"* @_ZN5blink7Element26VirtualEnsureComputedStyleENS_8PseudoIdERKN3WTF12AtomicStringE(%"class.blink::Element"*, i8 zeroext, %"class.WTF::AtomicString"* dereferenceable(8)) unnamed_addr #0 comdat align 2 {
  %4 = tail call %"class.blink::ComputedStyle"* @_ZN5blink7Element19EnsureComputedStyleENS_8PseudoIdERKN3WTF12AtomicStringE(%"class.blink::Element"* %0, i8 zeroext %1, %"class.WTF::AtomicString"* dereferenceable(8) %2) #8
  ret %"class.blink::ComputedStyle"* %4
}

declare void @_ZN5blink10SVGElement15ChildrenChangedERKNS_13ContainerNode14ChildrenChangeE(%"class.blink::SVGElement"*, %"struct.blink::ContainerNode::ChildrenChange"* dereferenceable(56)) unnamed_addr #1

declare zeroext i1 @_ZNK5blink13ContainerNode42ChildrenChangedAllChildrenRemovedNeedsListEv(%"class.blink::ContainerNode"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink13ContainerNode20ChildrenCanHaveStyleEv(%"class.blink::ContainerNode"*) unnamed_addr #0 comdat align 2 {
  ret i1 true
}

declare %"class.blink::LayoutBox"* @_ZNK5blink7Element24GetLayoutBoxForScrollingEv(%"class.blink::Element"*) unnamed_addr #1

declare %"class.blink::Element"* @_ZN5blink7Element18GetAnimationTargetEv(%"class.blink::Element"*) unnamed_addr #1

declare %"class.WTF::HashMap.362"* @_ZNK5blink7Element24GetCheckedAttributeTypesEv(%"class.blink::Element"*) unnamed_addr #1

declare i32 @_ZN5blink7Element11scrollWidthEv(%"class.blink::Element"*) unnamed_addr #1

declare i32 @_ZN5blink7Element12scrollHeightEv(%"class.blink::Element"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::CSSPropertyValueSet"* @_ZN5blink7Element36AdditionalPresentationAttributeStyleEv(%"class.blink::Element"*) unnamed_addr #0 comdat align 2 {
  ret %"class.blink::CSSPropertyValueSet"* null
}

declare zeroext i1 @_ZNK5blink14SVGSMILElement23IsPresentationAttributeERKNS_13QualifiedNameE(%"class.blink::SVGSMILElement"*, %"class.blink::QualifiedName"* dereferenceable(8)) unnamed_addr #1

declare void @_ZN5blink10SVGElement36CollectStyleForPresentationAttributeERKNS_13QualifiedNameERKN3WTF12AtomicStringEPNS_26MutableCSSPropertyValueSetE(%"class.blink::SVGElement"*, %"class.blink::QualifiedName"* dereferenceable(8), %"class.WTF::AtomicString"* dereferenceable(8), %"class.blink::MutableCSSPropertyValueSet"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink7Element37HasExtraStyleForPresentationAttributeEv(%"class.blink::Element"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

declare void @_ZN5blink10SVGElement41CollectExtraStyleForPresentationAttributeEPNS_26MutableCSSPropertyValueSetE(%"class.blink::SVGElement"*, %"class.blink::MutableCSSPropertyValueSet"*) unnamed_addr #1

declare void @_ZN5blink10SVGElement16AttributeChangedERKNS_7Element27AttributeModificationParamsE(%"class.blink::SVGElement"*, %"struct.blink::Element::AttributeModificationParams"* dereferenceable(32)) unnamed_addr #1

declare zeroext i1 @_ZNK5blink7Element21HasLegalLinkAttributeERKNS_13QualifiedNameE(%"class.blink::Element"*, %"class.blink::QualifiedName"* dereferenceable(8)) unnamed_addr #1

declare dereferenceable(8) %"class.blink::QualifiedName"* @_ZNK5blink7Element24SubResourceAttributeNameEv(%"class.blink::Element"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink7Element31CloneNonAttributePropertiesFromERKS0_NS_17CloneChildrenFlagE(%"class.blink::Element"*, %"class.blink::Element"* dereferenceable(104), i32) unnamed_addr #0 comdat align 2 {
  ret void
}

declare %"class.blink::LayoutObject"* @_ZN5blink7Element18CreateLayoutObjectERKNS_13ComputedStyleENS_12LegacyLayoutE(%"class.blink::Element"*, %"class.blink::ComputedStyle"*, i32) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink14SVGSMILElement20LayoutObjectIsNeededERKNS_13ComputedStyleE(%"class.blink::SVGSMILElement"*, %"class.blink::ComputedStyle"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

declare void @_ZN5blink10SVGElement15AccessKeyActionENS_27SimulatedClickCreationScopeE(%"class.blink::SVGElement"*, i32) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink7Element14IsURLAttributeERKNS_9AttributeE(%"class.blink::Element"*, %"class.blink::Attribute"* dereferenceable(16)) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink7Element22IsHTMLContentAttributeERKNS_9AttributeE(%"class.blink::Element"*, %"class.blink::Attribute"* dereferenceable(16)) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink7Element43IsSVGAnimationAttributeSettingJavaScriptURLERKNS_9AttributeE(%"class.blink::Element"*, %"class.blink::Attribute"* dereferenceable(16)) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink7Element10IsLiveLinkEv(%"class.blink::Element"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

declare %"class.WTF::StringImpl"* @_ZNK5blink7Element14ImageSourceURLEv(%"class.blink::Element"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::Image"* @_ZN5blink7Element13ImageContentsEv(%"class.blink::Element"*) unnamed_addr #0 comdat align 2 {
  ret %"class.blink::Image"* null
}

declare void @_ZN5blink7Element5focusERKNS_11FocusParamsE(%"class.blink::Element"*, %"struct.blink::FocusParams"*) unnamed_addr #1

declare void @_ZN5blink7Element32UpdateFocusAppearanceWithOptionsENS_24SelectionBehaviorOnFocusEPKNS_12FocusOptionsE(%"class.blink::Element"*, i32, %"class.blink::FocusOptions"*) unnamed_addr #1

declare void @_ZN5blink7Element4blurEv(%"class.blink::Element"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink10SVGElement13SupportsFocusEv(%"class.blink::SVGElement"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

declare zeroext i1 @_ZNK5blink7Element19IsKeyboardFocusableEv(%"class.blink::Element"*) unnamed_addr #1

declare zeroext i1 @_ZNK5blink7Element16IsMouseFocusableEv(%"class.blink::Element"*) unnamed_addr #1

declare void @_ZN5blink7Element18DispatchFocusEventEPS0_NS_5mojom9FocusTypeEPNS_23InputDeviceCapabilitiesE(%"class.blink::Element"*, %"class.blink::Element"*, i32, %"class.blink::InputDeviceCapabilities"*) unnamed_addr #1

declare void @_ZN5blink7Element17DispatchBlurEventEPS0_NS_5mojom9FocusTypeEPNS_23InputDeviceCapabilitiesE(%"class.blink::Element"*, %"class.blink::Element"*, i32, %"class.blink::InputDeviceCapabilities"*) unnamed_addr #1

declare void @_ZN5blink7Element20DispatchFocusInEventERKN3WTF12AtomicStringEPS0_NS_5mojom9FocusTypeEPNS_23InputDeviceCapabilitiesE(%"class.blink::Element"*, %"class.WTF::AtomicString"* dereferenceable(8), %"class.blink::Element"*, i32, %"class.blink::InputDeviceCapabilities"*) unnamed_addr #1

declare %"class.WTF::StringImpl"* @_ZNK5blink10SVGElement5titleEv(%"class.blink::SVGElement"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.WTF::StringImpl"* @_ZNK5blink7Element14DefaultToolTipEv(%"class.blink::Element"*) unnamed_addr #0 comdat align 2 {
  ret %"class.WTF::StringImpl"* null
}

declare dereferenceable(8) %"class.WTF::AtomicString"* @_ZNK5blink7Element14ShadowPseudoIdEv(%"class.blink::Element"*) unnamed_addr #1

declare void @_ZN5blink7Element21FinishParsingChildrenEv(%"class.blink::Element"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink7Element20BeginParsingChildrenEv(%"class.blink::Element"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %0, i64 0, i32 0, i32 0, i32 1
  %3 = load i32, i32* %2, align 8
  %4 = and i32 %3, -1025
  store i32 %4, i32* %2, align 8
  ret void
}

declare zeroext i1 @_ZNK5blink7Element24CanGeneratePseudoElementENS_8PseudoIdE(%"class.blink::Element"*, i8 zeroext) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink7Element25MatchesDefaultPseudoClassEv(%"class.blink::Element"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink7Element25MatchesEnabledPseudoClassEv(%"class.blink::Element"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink7Element26MatchesReadOnlyPseudoClassEv(%"class.blink::Element"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink7Element27MatchesReadWritePseudoClassEv(%"class.blink::Element"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink7Element28MatchesValidityPseudoClassesEv(%"class.blink::Element"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

declare zeroext i1 @_ZNK5blink7Element25MayTriggerVirtualKeyboardEv(%"class.blink::Element"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink7Element25ShouldAppearIndeterminateEv(%"class.blink::Element"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink7Element21IsDateTimeEditElementEv(%"class.blink::Element"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink7Element22IsDateTimeFieldElementEv(%"class.blink::Element"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink7Element24IsPickerIndicatorElementEv(%"class.blink::Element"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink7Element20IsFormControlElementEv(%"class.blink::Element"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink7Element19IsSpinButtonElementEv(%"class.blink::Element"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink7Element13IsTextControlEv(%"class.blink::Element"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink7Element21IsOptionalFormControlEv(%"class.blink::Element"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink7Element21IsRequiredFormControlEv(%"class.blink::Element"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink7Element12willValidateEv(%"class.blink::Element"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN5blink7Element14IsValidElementEv(%"class.blink::Element"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink7Element9IsInRangeEv(%"class.blink::Element"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink7Element12IsOutOfRangeEv(%"class.blink::Element"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink7Element20IsClearButtonElementEv(%"class.blink::Element"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink7Element15IsScriptElementEv(%"class.blink::Element"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink7Element21IsVTTCueBackgroundBoxEv(%"class.blink::Element"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink7Element20IsSliderThumbElementEv(%"class.blink::Element"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink7Element25HasNonInBodyInsertionModeEv(%"class.blink::Element"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink7Element21IsDisabledFormControlEv(%"class.blink::Element"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

declare void @_ZN5blink14SVGSMILElement20BuildPendingResourceEv(%"class.blink::SVGSMILElement"*) unnamed_addr #1

declare void @_ZN5blink7Element9SetActiveEb(%"class.blink::Element"*, i1 zeroext) unnamed_addr #1

declare void @_ZN5blink7Element10SetHoveredEb(%"class.blink::Element"*, i1 zeroext) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink7Element11IsAdRelatedEv(%"class.blink::Element"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

declare void @_ZN5blink10SVGElement15WillRecalcStyleENS_17StyleRecalcChangeE(%"class.blink::SVGElement"*, i64) unnamed_addr #1

declare void @_ZN5blink7Element14DidRecalcStyleENS_17StyleRecalcChangeE(%"class.blink::Element"*, i64) unnamed_addr #1

declare void @_ZN5blink10SVGElement26CustomStyleForLayoutObjectERKNS_18StyleRecalcContextE() unnamed_addr

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK5blink7Element16GetNamedItemTypeEv(%"class.blink::Element"*) unnamed_addr #0 comdat align 2 {
  ret i32 0
}

declare zeroext i1 @_ZNK5blink7Element16IsFocusableStyleEv(%"class.blink::Element"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink7Element22ParserDidSetAttributesEv(%"class.blink::Element"*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink7Element23AreAuthorShadowsAllowedEv(%"class.blink::Element"*) unnamed_addr #0 comdat align 2 {
  ret i1 true
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink7Element25DidAddUserAgentShadowRootERNS_10ShadowRootE(%"class.blink::Element"*, %"class.blink::ShadowRoot"*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink7Element31AlwaysCreateUserAgentShadowRootEv(%"class.blink::Element"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

declare i32 @_ZNK5blink7Element15DefaultTabIndexEv(%"class.blink::Element"*) unnamed_addr #1

declare dereferenceable(104) %"class.blink::Element"* @_ZNK5blink7Element33CloneWithoutAttributesAndChildrenERNS_8DocumentE(%"class.blink::Element"*, %"class.blink::Document"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink7Element27TypeShouldForceLegacyLayoutEv(%"class.blink::Element"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

declare void @_ZNK5blink10SVGElement29LocalCoordinateSpaceTransformENS0_8CTMScopeE(%"class.blink::AffineTransform"* sret, %"class.blink::SVGElement"*, i32) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink10SVGElement20IsSVGGeometryElementEv(%"class.blink::SVGElement"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink10SVGElement20IsSVGGraphicsElementEv(%"class.blink::SVGElement"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink10SVGElement14IsFilterEffectEv(%"class.blink::SVGElement"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink10SVGElement13IsTextContentEv(%"class.blink::SVGElement"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink10SVGElement17IsTextPositioningEv(%"class.blink::SVGElement"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink10SVGElement22IsStructurallyExternalEv(%"class.blink::SVGElement"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink19SVGAnimationElement7IsValidEv(%"class.blink::SVGAnimationElement"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::SVGAnimationElement", %"class.blink::SVGAnimationElement"* %0, i64 0, i32 0, i32 1
  %3 = tail call zeroext i1 @_ZNK5blink8SVGTests7IsValidEv(%"class.blink::SVGTests"* %2) #8
  ret i1 %3
}

declare void @_ZN5blink14SVGSMILElement19SvgAttributeChangedERKNS_10SVGElement25SvgAttributeChangedParamsE(%"class.blink::SVGSMILElement"*, %"struct.blink::SVGElement::SvgAttributeChangedParams"* dereferenceable(16)) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::AffineTransform"* @_ZN5blink10SVGElement22AnimateMotionTransformEv(%"class.blink::SVGElement"*) unnamed_addr #0 comdat align 2 {
  ret %"class.blink::AffineTransform"* null
}

declare zeroext i1 @_ZN5blink10SVGElement27HaveLoadedRequiredResourcesEv(%"class.blink::SVGElement"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink10SVGElement22SelfHasRelativeLengthsEv(%"class.blink::SVGElement"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
declare %"class.blink::Element"* @_ZThn80_N5blink7Element18GetAnimationTargetEv(%"class.blink::Element"*) unnamed_addr #0 align 2

; Function Attrs: nounwind ssp uwtable
declare void @_ZThn168_NK5blink14SVGSMILElement5TraceEPNS_7VisitorE(%"class.blink::SVGSMILElement"*, %"class.blink::Visitor"*) unnamed_addr #0 align 2

; Function Attrs: nounwind
declare void @_ZN5blink14SVGSMILElementD2Ev(%"class.blink::SVGSMILElement"*) unnamed_addr #2

declare void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"*) local_unnamed_addr #1

declare void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8*) local_unnamed_addr #1

declare void @_ZN5blink15AffineTransformC1Ev(%"class.blink::AffineTransform"*) unnamed_addr #1

declare zeroext i1 @_ZN5blink11ParseNumberERPKhS1_RfNS_14WhitespaceModeE(i8** dereferenceable(8), i8*, float* dereferenceable(4), i32) local_unnamed_addr #1

declare zeroext i1 @_ZN5blink11ParseNumberERPKDsS1_RfNS_14WhitespaceModeE(i16** dereferenceable(8), i16*, float* dereferenceable(4), i32) local_unnamed_addr #1

declare %"class.blink::ComputedStyle"* @_ZN5blink7Element19EnsureComputedStyleENS_8PseudoIdERKN3WTF12AtomicStringE(%"class.blink::Element"*, i8 zeroext, %"class.WTF::AtomicString"* dereferenceable(8)) local_unnamed_addr #1

declare zeroext i1 @_ZNK5blink8SVGTests7IsValidEv(%"class.blink::SVGTests"*) local_unnamed_addr #1

declare void @_ZN3WTF12AtomicStringC2EPKhm(%"class.WTF::AtomicString"*, i8*, i64) unnamed_addr #1

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { argmemonly nounwind }
attributes #5 = { nofree nounwind }
attributes #6 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="64" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!"branch_weights", i32 2000, i32 1}
!3 = !{!"branch_weights", i32 1, i32 2000}
!4 = !{!"branch_weights", i32 1, i32 1048575}
