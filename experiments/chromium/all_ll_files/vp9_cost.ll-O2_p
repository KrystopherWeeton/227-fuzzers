; ModuleID = '../../third_party/libvpx/source/libvpx/vp9/encoder/vp9_cost.c'
source_filename = "../../third_party/libvpx/source/libvpx/vp9/encoder/vp9_cost.c"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

@vp9_prob_cost = hidden local_unnamed_addr constant [256 x i16] [i16 4096, i16 4096, i16 3584, i16 3284, i16 3072, i16 2907, i16 2772, i16 2659, i16 2560, i16 2473, i16 2395, i16 2325, i16 2260, i16 2201, i16 2147, i16 2096, i16 2048, i16 2003, i16 1961, i16 1921, i16 1883, i16 1847, i16 1813, i16 1780, i16 1748, i16 1718, i16 1689, i16 1661, i16 1635, i16 1609, i16 1584, i16 1559, i16 1536, i16 1513, i16 1491, i16 1470, i16 1449, i16 1429, i16 1409, i16 1390, i16 1371, i16 1353, i16 1335, i16 1318, i16 1301, i16 1284, i16 1268, i16 1252, i16 1236, i16 1221, i16 1206, i16 1192, i16 1177, i16 1163, i16 1149, i16 1136, i16 1123, i16 1110, i16 1097, i16 1084, i16 1072, i16 1059, i16 1047, i16 1036, i16 1024, i16 1013, i16 1001, i16 990, i16 979, i16 968, i16 958, i16 947, i16 937, i16 927, i16 917, i16 907, i16 897, i16 887, i16 878, i16 868, i16 859, i16 850, i16 841, i16 832, i16 823, i16 814, i16 806, i16 797, i16 789, i16 780, i16 772, i16 764, i16 756, i16 748, i16 740, i16 732, i16 724, i16 717, i16 709, i16 702, i16 694, i16 687, i16 680, i16 673, i16 665, i16 658, i16 651, i16 644, i16 637, i16 631, i16 624, i16 617, i16 611, i16 604, i16 598, i16 591, i16 585, i16 578, i16 572, i16 566, i16 560, i16 554, i16 547, i16 541, i16 535, i16 530, i16 524, i16 518, i16 512, i16 506, i16 501, i16 495, i16 489, i16 484, i16 478, i16 473, i16 467, i16 462, i16 456, i16 451, i16 446, i16 441, i16 435, i16 430, i16 425, i16 420, i16 415, i16 410, i16 405, i16 400, i16 395, i16 390, i16 385, i16 380, i16 375, i16 371, i16 366, i16 361, i16 356, i16 352, i16 347, i16 343, i16 338, i16 333, i16 329, i16 324, i16 320, i16 316, i16 311, i16 307, i16 302, i16 298, i16 294, i16 289, i16 285, i16 281, i16 277, i16 273, i16 268, i16 264, i16 260, i16 256, i16 252, i16 248, i16 244, i16 240, i16 236, i16 232, i16 228, i16 224, i16 220, i16 216, i16 212, i16 209, i16 205, i16 201, i16 197, i16 194, i16 190, i16 186, i16 182, i16 179, i16 175, i16 171, i16 168, i16 164, i16 161, i16 157, i16 153, i16 150, i16 146, i16 143, i16 139, i16 136, i16 132, i16 129, i16 125, i16 122, i16 119, i16 115, i16 112, i16 109, i16 105, i16 102, i16 99, i16 95, i16 92, i16 89, i16 86, i16 82, i16 79, i16 76, i16 73, i16 70, i16 66, i16 63, i16 60, i16 57, i16 54, i16 51, i16 48, i16 45, i16 42, i16 38, i16 35, i16 32, i16 29, i16 26, i16 23, i16 20, i16 18, i16 15, i16 12, i16 9, i16 6, i16 3], align 16

; Function Attrs: nofree nounwind ssp uwtable
define hidden void @vp9_cost_tokens(i32* nocapture, i8* nocapture readonly, i8* nocapture readonly) local_unnamed_addr #0 {
  tail call fastcc void @cost(i32* %0, i8* %2, i8* %1, i32 0, i32 0)
  ret void
}

; Function Attrs: nofree nounwind ssp uwtable
define internal fastcc void @cost(i32* nocapture, i8* nocapture readonly, i8* nocapture readonly, i32, i32) unnamed_addr #0 {
  %6 = sdiv i32 %3, 2
  %7 = sext i32 %6 to i64
  %8 = getelementptr inbounds i8, i8* %2, i64 %7
  %9 = load i8, i8* %8, align 1
  %10 = zext i8 %9 to i64
  %11 = sub nuw nsw i64 256, %10
  %12 = sext i32 %3 to i64
  %13 = zext i8 %9 to i64
  %14 = getelementptr inbounds [256 x i16], [256 x i16]* @vp9_prob_cost, i64 0, i64 %13
  %15 = load i16, i16* %14, align 2
  %16 = zext i16 %15 to i32
  %17 = add nsw i32 %16, %4
  %18 = getelementptr inbounds i8, i8* %1, i64 %12
  %19 = load i8, i8* %18, align 1
  %20 = sext i8 %19 to i32
  %21 = icmp slt i8 %19, 1
  br i1 %21, label %22, label %26

22:                                               ; preds = %5
  %23 = sub nsw i32 0, %20
  %24 = sext i32 %23 to i64
  %25 = getelementptr inbounds i32, i32* %0, i64 %24
  store i32 %17, i32* %25, align 4
  br label %27

26:                                               ; preds = %5
  tail call fastcc void @cost(i32* %0, i8* %1, i8* %2, i32 %20, i32 %17)
  br label %27

27:                                               ; preds = %26, %22
  %28 = getelementptr inbounds [256 x i16], [256 x i16]* @vp9_prob_cost, i64 0, i64 %11
  %29 = load i16, i16* %28, align 2
  %30 = zext i16 %29 to i32
  %31 = add nsw i32 %30, %4
  %32 = add nsw i64 %12, 1
  %33 = getelementptr inbounds i8, i8* %1, i64 %32
  %34 = load i8, i8* %33, align 1
  %35 = sext i8 %34 to i32
  %36 = icmp slt i8 %34, 1
  br i1 %36, label %38, label %37

37:                                               ; preds = %27
  tail call fastcc void @cost(i32* %0, i8* %1, i8* %2, i32 %35, i32 %31)
  br label %42

38:                                               ; preds = %27
  %39 = sub nsw i32 0, %35
  %40 = sext i32 %39 to i64
  %41 = getelementptr inbounds i32, i32* %0, i64 %40
  store i32 %31, i32* %41, align 4
  br label %42

42:                                               ; preds = %38, %37
  ret void
}

; Function Attrs: nofree nounwind ssp uwtable
define hidden void @vp9_cost_tokens_skip(i32* nocapture, i8* nocapture readonly, i8* nocapture readonly) local_unnamed_addr #0 {
  %4 = load i8, i8* %1, align 1
  %5 = zext i8 %4 to i64
  %6 = getelementptr inbounds [256 x i16], [256 x i16]* @vp9_prob_cost, i64 0, i64 %5
  %7 = load i16, i16* %6, align 2
  %8 = zext i16 %7 to i32
  %9 = load i8, i8* %2, align 1
  %10 = sext i8 %9 to i64
  %11 = sub nsw i64 0, %10
  %12 = getelementptr inbounds i32, i32* %0, i64 %11
  store i32 %8, i32* %12, align 4
  tail call fastcc void @cost(i32* %0, i8* %2, i8* %1, i32 2, i32 0)
  ret void
}

attributes #0 = { nofree nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
