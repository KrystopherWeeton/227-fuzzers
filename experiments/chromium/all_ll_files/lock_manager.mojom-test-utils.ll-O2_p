; ModuleID = 'gen/third_party/blink/public/mojom/locks/lock_manager.mojom-test-utils.cc'
source_filename = "gen/third_party/blink/public/mojom/locks/lock_manager.mojom-test-utils.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.blink::mojom::LockHandleAsyncWaiter" = type { %"class.blink::mojom::LockHandle"* }
%"class.blink::mojom::LockHandle" = type { i32 (...)** }
%"class.blink::mojom::LockRequestAsyncWaiter" = type { %"class.blink::mojom::LockRequest"* }
%"class.blink::mojom::LockRequest" = type { i32 (...)** }
%"class.blink::mojom::LockManagerAsyncWaiter" = type { %"class.blink::mojom::LockManager"* }
%"class.blink::mojom::LockManager" = type { i32 (...)** }
%"class.blink::mojom::LockRequestInterceptorForTesting" = type { %"class.blink::mojom::LockRequest" }
%"class.mojo::PendingAssociatedRemote" = type <{ %"class.mojo::ScopedInterfaceEndpointHandle", i32, [4 x i8] }>
%"class.mojo::ScopedInterfaceEndpointHandle" = type { %class.scoped_refptr }
%class.scoped_refptr = type { %"class.mojo::ScopedInterfaceEndpointHandle::State"* }
%"class.mojo::ScopedInterfaceEndpointHandle::State" = type opaque
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.blink::mojom::LockManagerInterceptorForTesting" = type { %"class.blink::mojom::LockManager" }
%"class.mojo::PendingAssociatedRemote.1" = type <{ %"class.mojo::ScopedInterfaceEndpointHandle", i32, [4 x i8] }>
%"class.base::OnceCallback" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr.3 }
%class.scoped_refptr.3 = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.4" }
%"struct.std::__1::__atomic_base.4" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.mojo::InlinedStructPtr"*, %"class.mojo::InlinedStructPtr"*, %"class.std::__1::__compressed_pair.5" }
%"class.mojo::InlinedStructPtr" = type <{ %"class.blink::mojom::LockInfo", i32, [4 x i8] }>
%"class.blink::mojom::LockInfo" = type { %"class.std::__1::basic_string", i32, %"class.std::__1::basic_string" }
%"class.std::__1::__compressed_pair.5" = type { %"struct.std::__1::__compressed_pair_elem.6" }
%"struct.std::__1::__compressed_pair_elem.6" = type { %"class.mojo::InlinedStructPtr"* }
%"class.base::RunLoop" = type { %"class.base::RunLoop::Delegate"*, i32, i8, i8, i8, i8, i8, %class.scoped_refptr.24, %"class.base::WeakPtrFactory" }
%"class.base::RunLoop::Delegate" = type <{ i32 (...)**, %"class.std::__1::stack", %"class.base::ObserverList", i8, [7 x i8] }>
%"class.std::__1::stack" = type { %"class.std::__1::vector.10" }
%"class.std::__1::vector.10" = type { %"class.std::__1::__vector_base.11" }
%"class.std::__1::__vector_base.11" = type { %"class.base::RunLoop"**, %"class.base::RunLoop"**, %"class.std::__1::__compressed_pair.12" }
%"class.std::__1::__compressed_pair.12" = type { %"struct.std::__1::__compressed_pair_elem.13" }
%"struct.std::__1::__compressed_pair_elem.13" = type { %"class.base::RunLoop"** }
%"class.base::ObserverList" = type <{ %"class.std::__1::vector.17", %"class.base::LinkedList", i64, i32, [4 x i8] }>
%"class.std::__1::vector.17" = type { %"class.std::__1::__vector_base.18" }
%"class.std::__1::__vector_base.18" = type { %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"*, %"class.std::__1::__compressed_pair.19" }
%"class.base::internal::UncheckedObserverAdapter" = type { i8* }
%"class.std::__1::__compressed_pair.19" = type { %"struct.std::__1::__compressed_pair_elem.20" }
%"struct.std::__1::__compressed_pair_elem.20" = type { %"class.base::internal::UncheckedObserverAdapter"* }
%"class.base::LinkedList" = type { %"class.base::LinkNode" }
%"class.base::LinkNode" = type { %"class.base::internal::LinkNodeBase" }
%"class.base::internal::LinkNodeBase" = type { %"class.base::internal::LinkNodeBase"*, %"class.base::internal::LinkNodeBase"* }
%class.scoped_refptr.24 = type { %"class.base::SingleThreadTaskRunner"* }
%"class.base::SingleThreadTaskRunner" = type { %"class.base::SequencedTaskRunner.base", [4 x i8] }
%"class.base::SequencedTaskRunner.base" = type { %"class.base::TaskRunner.base" }
%"class.base::TaskRunner.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.25" }>
%"class.base::RefCountedThreadSafe.25" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::WeakPtrFactory" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.base::internal::WeakPtrFactoryBase" = type { %"class.base::internal::WeakReferenceOwner", i64 }
%"class.base::internal::WeakReferenceOwner" = type { %class.scoped_refptr.26 }
%class.scoped_refptr.26 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.base::internal::WeakReference::Flag" = type <{ %"class.base::RefCountedThreadSafe.27", %"class.base::AtomicFlag", [3 x i8] }>
%"class.base::RefCountedThreadSafe.27" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::AtomicFlag" = type { %"struct.std::__1::atomic.28" }
%"struct.std::__1::atomic.28" = type { %"struct.std::__1::__atomic_base.29" }
%"struct.std::__1::__atomic_base.29" = type { %"struct.std::__1::__atomic_base.30" }
%"struct.std::__1::__atomic_base.30" = type { %"struct.std::__1::__cxx_atomic_impl.31" }
%"struct.std::__1::__cxx_atomic_impl.31" = type { %"struct.std::__1::__cxx_atomic_base_impl.32" }
%"struct.std::__1::__cxx_atomic_base_impl.32" = type { i8 }
%"class.base::Location" = type { i8*, i8*, i32, i8* }

$_ZN5blink5mojom11LockRequestD2Ev = comdat any

$_ZN5blink5mojom32LockRequestInterceptorForTestingD0Ev = comdat any

$_ZN5blink5mojom11LockManagerD2Ev = comdat any

$_ZN5blink5mojom32LockManagerInterceptorForTestingD0Ev = comdat any

@.str = private unnamed_addr constant [11 x i8] c"QueryState\00", align 1
@.str.1 = private unnamed_addr constant [74 x i8] c"gen/third_party/blink/public/mojom/locks/lock_manager.mojom-test-utils.cc\00", align 1
@_ZTVN5blink5mojom32LockRequestInterceptorForTestingE = hidden unnamed_addr constant { [8 x i8*] } { [8 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.blink::mojom::LockRequest"*)* @_ZN5blink5mojom11LockRequestD2Ev to i8*), i8* bitcast (void (%"class.blink::mojom::LockRequestInterceptorForTesting"*)* @_ZN5blink5mojom32LockRequestInterceptorForTestingD0Ev to i8*), i8* bitcast (void (%"class.blink::mojom::LockRequestInterceptorForTesting"*, %"class.mojo::PendingAssociatedRemote"*)* @_ZN5blink5mojom32LockRequestInterceptorForTesting7GrantedEN4mojo23PendingAssociatedRemoteINS0_10LockHandleEEE to i8*), i8* bitcast (void (%"class.blink::mojom::LockRequestInterceptorForTesting"*)* @_ZN5blink5mojom32LockRequestInterceptorForTesting6FailedEv to i8*), i8* bitcast (void (%"class.blink::mojom::LockRequestInterceptorForTesting"*, %"class.std::__1::basic_string"*)* @_ZN5blink5mojom32LockRequestInterceptorForTesting5AbortERKNSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEE to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*)] }, align 8
@_ZTVN5blink5mojom32LockManagerInterceptorForTestingE = hidden unnamed_addr constant { [7 x i8*] } { [7 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.blink::mojom::LockManager"*)* @_ZN5blink5mojom11LockManagerD2Ev to i8*), i8* bitcast (void (%"class.blink::mojom::LockManagerInterceptorForTesting"*)* @_ZN5blink5mojom32LockManagerInterceptorForTestingD0Ev to i8*), i8* bitcast (void (%"class.blink::mojom::LockManagerInterceptorForTesting"*, %"class.std::__1::basic_string"*, i32, i32, %"class.mojo::PendingAssociatedRemote.1"*)* @_ZN5blink5mojom32LockManagerInterceptorForTesting11RequestLockERKNSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEENS0_8LockModeENS0_20LockManager_WaitModeEN4mojo23PendingAssociatedRemoteINS0_11LockRequestEEE to i8*), i8* bitcast (void (%"class.blink::mojom::LockManagerInterceptorForTesting"*, %"class.base::OnceCallback"*)* @_ZN5blink5mojom32LockManagerInterceptorForTesting10QueryStateEN4base12OnceCallbackIFvNSt3__16vectorIN4mojo16InlinedStructPtrINS0_8LockInfoEEENS4_9allocatorIS9_EEEESC_EEE to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*)] }, align 8

@_ZN5blink5mojom21LockHandleAsyncWaiterC1EPNS0_10LockHandleE = hidden unnamed_addr alias void (%"class.blink::mojom::LockHandleAsyncWaiter"*, %"class.blink::mojom::LockHandle"*), void (%"class.blink::mojom::LockHandleAsyncWaiter"*, %"class.blink::mojom::LockHandle"*)* @_ZN5blink5mojom21LockHandleAsyncWaiterC2EPNS0_10LockHandleE
@_ZN5blink5mojom21LockHandleAsyncWaiterD1Ev = hidden unnamed_addr alias void (%"class.blink::mojom::LockHandleAsyncWaiter"*), void (%"class.blink::mojom::LockHandleAsyncWaiter"*)* @_ZN5blink5mojom21LockHandleAsyncWaiterD2Ev
@_ZN5blink5mojom22LockRequestAsyncWaiterC1EPNS0_11LockRequestE = hidden unnamed_addr alias void (%"class.blink::mojom::LockRequestAsyncWaiter"*, %"class.blink::mojom::LockRequest"*), void (%"class.blink::mojom::LockRequestAsyncWaiter"*, %"class.blink::mojom::LockRequest"*)* @_ZN5blink5mojom22LockRequestAsyncWaiterC2EPNS0_11LockRequestE
@_ZN5blink5mojom22LockRequestAsyncWaiterD1Ev = hidden unnamed_addr alias void (%"class.blink::mojom::LockRequestAsyncWaiter"*), void (%"class.blink::mojom::LockRequestAsyncWaiter"*)* @_ZN5blink5mojom22LockRequestAsyncWaiterD2Ev
@_ZN5blink5mojom22LockManagerAsyncWaiterC1EPNS0_11LockManagerE = hidden unnamed_addr alias void (%"class.blink::mojom::LockManagerAsyncWaiter"*, %"class.blink::mojom::LockManager"*), void (%"class.blink::mojom::LockManagerAsyncWaiter"*, %"class.blink::mojom::LockManager"*)* @_ZN5blink5mojom22LockManagerAsyncWaiterC2EPNS0_11LockManagerE
@_ZN5blink5mojom22LockManagerAsyncWaiterD1Ev = hidden unnamed_addr alias void (%"class.blink::mojom::LockManagerAsyncWaiter"*), void (%"class.blink::mojom::LockManagerAsyncWaiter"*)* @_ZN5blink5mojom22LockManagerAsyncWaiterD2Ev

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN5blink5mojom21LockHandleAsyncWaiterC2EPNS0_10LockHandleE(%"class.blink::mojom::LockHandleAsyncWaiter"* nocapture, %"class.blink::mojom::LockHandle"*) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::mojom::LockHandleAsyncWaiter", %"class.blink::mojom::LockHandleAsyncWaiter"* %0, i64 0, i32 0
  store %"class.blink::mojom::LockHandle"* %1, %"class.blink::mojom::LockHandle"** %3, align 8
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @_ZN5blink5mojom21LockHandleAsyncWaiterD2Ev(%"class.blink::mojom::LockHandleAsyncWaiter"* nocapture) unnamed_addr #1 align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink5mojom32LockRequestInterceptorForTesting7GrantedEN4mojo23PendingAssociatedRemoteINS0_10LockHandleEEE(%"class.blink::mojom::LockRequestInterceptorForTesting"*, %"class.mojo::PendingAssociatedRemote"*) unnamed_addr #2 align 2 {
  %3 = alloca %"class.mojo::PendingAssociatedRemote", align 8
  %4 = bitcast %"class.blink::mojom::LockRequestInterceptorForTesting"* %0 to %"class.blink::mojom::LockRequest"* (%"class.blink::mojom::LockRequestInterceptorForTesting"*)***
  %5 = load %"class.blink::mojom::LockRequest"* (%"class.blink::mojom::LockRequestInterceptorForTesting"*)**, %"class.blink::mojom::LockRequest"* (%"class.blink::mojom::LockRequestInterceptorForTesting"*)*** %4, align 8
  %6 = getelementptr inbounds %"class.blink::mojom::LockRequest"* (%"class.blink::mojom::LockRequestInterceptorForTesting"*)*, %"class.blink::mojom::LockRequest"* (%"class.blink::mojom::LockRequestInterceptorForTesting"*)** %5, i64 5
  %7 = load %"class.blink::mojom::LockRequest"* (%"class.blink::mojom::LockRequestInterceptorForTesting"*)*, %"class.blink::mojom::LockRequest"* (%"class.blink::mojom::LockRequestInterceptorForTesting"*)** %6, align 8
  %8 = tail call %"class.blink::mojom::LockRequest"* %7(%"class.blink::mojom::LockRequestInterceptorForTesting"* %0) #10
  %9 = getelementptr inbounds %"class.mojo::PendingAssociatedRemote", %"class.mojo::PendingAssociatedRemote"* %3, i64 0, i32 0
  %10 = getelementptr inbounds %"class.mojo::PendingAssociatedRemote", %"class.mojo::PendingAssociatedRemote"* %1, i64 0, i32 0
  call void @_ZN4mojo29ScopedInterfaceEndpointHandleC1EOS0_(%"class.mojo::ScopedInterfaceEndpointHandle"* nonnull %9, %"class.mojo::ScopedInterfaceEndpointHandle"* dereferenceable(8) %10) #10
  %11 = getelementptr inbounds %"class.mojo::PendingAssociatedRemote", %"class.mojo::PendingAssociatedRemote"* %3, i64 0, i32 1
  %12 = getelementptr inbounds %"class.mojo::PendingAssociatedRemote", %"class.mojo::PendingAssociatedRemote"* %1, i64 0, i32 1
  %13 = load i32, i32* %12, align 8
  store i32 %13, i32* %11, align 8
  %14 = bitcast %"class.blink::mojom::LockRequest"* %8 to void (%"class.blink::mojom::LockRequest"*, %"class.mojo::PendingAssociatedRemote"*)***
  %15 = load void (%"class.blink::mojom::LockRequest"*, %"class.mojo::PendingAssociatedRemote"*)**, void (%"class.blink::mojom::LockRequest"*, %"class.mojo::PendingAssociatedRemote"*)*** %14, align 8
  %16 = getelementptr inbounds void (%"class.blink::mojom::LockRequest"*, %"class.mojo::PendingAssociatedRemote"*)*, void (%"class.blink::mojom::LockRequest"*, %"class.mojo::PendingAssociatedRemote"*)** %15, i64 2
  %17 = load void (%"class.blink::mojom::LockRequest"*, %"class.mojo::PendingAssociatedRemote"*)*, void (%"class.blink::mojom::LockRequest"*, %"class.mojo::PendingAssociatedRemote"*)** %16, align 8
  call void %17(%"class.blink::mojom::LockRequest"* %8, %"class.mojo::PendingAssociatedRemote"* nonnull %3) #10
  call void @_ZN4mojo29ScopedInterfaceEndpointHandleD1Ev(%"class.mojo::ScopedInterfaceEndpointHandle"* nonnull %9) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink5mojom32LockRequestInterceptorForTesting6FailedEv(%"class.blink::mojom::LockRequestInterceptorForTesting"*) unnamed_addr #2 align 2 {
  %2 = bitcast %"class.blink::mojom::LockRequestInterceptorForTesting"* %0 to %"class.blink::mojom::LockRequest"* (%"class.blink::mojom::LockRequestInterceptorForTesting"*)***
  %3 = load %"class.blink::mojom::LockRequest"* (%"class.blink::mojom::LockRequestInterceptorForTesting"*)**, %"class.blink::mojom::LockRequest"* (%"class.blink::mojom::LockRequestInterceptorForTesting"*)*** %2, align 8
  %4 = getelementptr inbounds %"class.blink::mojom::LockRequest"* (%"class.blink::mojom::LockRequestInterceptorForTesting"*)*, %"class.blink::mojom::LockRequest"* (%"class.blink::mojom::LockRequestInterceptorForTesting"*)** %3, i64 5
  %5 = load %"class.blink::mojom::LockRequest"* (%"class.blink::mojom::LockRequestInterceptorForTesting"*)*, %"class.blink::mojom::LockRequest"* (%"class.blink::mojom::LockRequestInterceptorForTesting"*)** %4, align 8
  %6 = tail call %"class.blink::mojom::LockRequest"* %5(%"class.blink::mojom::LockRequestInterceptorForTesting"* %0) #10
  %7 = bitcast %"class.blink::mojom::LockRequest"* %6 to void (%"class.blink::mojom::LockRequest"*)***
  %8 = load void (%"class.blink::mojom::LockRequest"*)**, void (%"class.blink::mojom::LockRequest"*)*** %7, align 8
  %9 = getelementptr inbounds void (%"class.blink::mojom::LockRequest"*)*, void (%"class.blink::mojom::LockRequest"*)** %8, i64 3
  %10 = load void (%"class.blink::mojom::LockRequest"*)*, void (%"class.blink::mojom::LockRequest"*)** %9, align 8
  tail call void %10(%"class.blink::mojom::LockRequest"* %6) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink5mojom32LockRequestInterceptorForTesting5AbortERKNSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEE(%"class.blink::mojom::LockRequestInterceptorForTesting"*, %"class.std::__1::basic_string"* dereferenceable(24)) unnamed_addr #2 align 2 {
  %3 = bitcast %"class.blink::mojom::LockRequestInterceptorForTesting"* %0 to %"class.blink::mojom::LockRequest"* (%"class.blink::mojom::LockRequestInterceptorForTesting"*)***
  %4 = load %"class.blink::mojom::LockRequest"* (%"class.blink::mojom::LockRequestInterceptorForTesting"*)**, %"class.blink::mojom::LockRequest"* (%"class.blink::mojom::LockRequestInterceptorForTesting"*)*** %3, align 8
  %5 = getelementptr inbounds %"class.blink::mojom::LockRequest"* (%"class.blink::mojom::LockRequestInterceptorForTesting"*)*, %"class.blink::mojom::LockRequest"* (%"class.blink::mojom::LockRequestInterceptorForTesting"*)** %4, i64 5
  %6 = load %"class.blink::mojom::LockRequest"* (%"class.blink::mojom::LockRequestInterceptorForTesting"*)*, %"class.blink::mojom::LockRequest"* (%"class.blink::mojom::LockRequestInterceptorForTesting"*)** %5, align 8
  %7 = tail call %"class.blink::mojom::LockRequest"* %6(%"class.blink::mojom::LockRequestInterceptorForTesting"* %0) #10
  %8 = bitcast %"class.blink::mojom::LockRequest"* %7 to void (%"class.blink::mojom::LockRequest"*, %"class.std::__1::basic_string"*)***
  %9 = load void (%"class.blink::mojom::LockRequest"*, %"class.std::__1::basic_string"*)**, void (%"class.blink::mojom::LockRequest"*, %"class.std::__1::basic_string"*)*** %8, align 8
  %10 = getelementptr inbounds void (%"class.blink::mojom::LockRequest"*, %"class.std::__1::basic_string"*)*, void (%"class.blink::mojom::LockRequest"*, %"class.std::__1::basic_string"*)** %9, i64 4
  %11 = load void (%"class.blink::mojom::LockRequest"*, %"class.std::__1::basic_string"*)*, void (%"class.blink::mojom::LockRequest"*, %"class.std::__1::basic_string"*)** %10, align 8
  tail call void %11(%"class.blink::mojom::LockRequest"* %7, %"class.std::__1::basic_string"* dereferenceable(24) %1) #10
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN5blink5mojom22LockRequestAsyncWaiterC2EPNS0_11LockRequestE(%"class.blink::mojom::LockRequestAsyncWaiter"* nocapture, %"class.blink::mojom::LockRequest"*) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::mojom::LockRequestAsyncWaiter", %"class.blink::mojom::LockRequestAsyncWaiter"* %0, i64 0, i32 0
  store %"class.blink::mojom::LockRequest"* %1, %"class.blink::mojom::LockRequest"** %3, align 8
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @_ZN5blink5mojom22LockRequestAsyncWaiterD2Ev(%"class.blink::mojom::LockRequestAsyncWaiter"* nocapture) unnamed_addr #1 align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink5mojom32LockManagerInterceptorForTesting11RequestLockERKNSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEENS0_8LockModeENS0_20LockManager_WaitModeEN4mojo23PendingAssociatedRemoteINS0_11LockRequestEEE(%"class.blink::mojom::LockManagerInterceptorForTesting"*, %"class.std::__1::basic_string"* dereferenceable(24), i32, i32, %"class.mojo::PendingAssociatedRemote.1"*) unnamed_addr #2 align 2 {
  %6 = alloca %"class.mojo::PendingAssociatedRemote.1", align 8
  %7 = bitcast %"class.blink::mojom::LockManagerInterceptorForTesting"* %0 to %"class.blink::mojom::LockManager"* (%"class.blink::mojom::LockManagerInterceptorForTesting"*)***
  %8 = load %"class.blink::mojom::LockManager"* (%"class.blink::mojom::LockManagerInterceptorForTesting"*)**, %"class.blink::mojom::LockManager"* (%"class.blink::mojom::LockManagerInterceptorForTesting"*)*** %7, align 8
  %9 = getelementptr inbounds %"class.blink::mojom::LockManager"* (%"class.blink::mojom::LockManagerInterceptorForTesting"*)*, %"class.blink::mojom::LockManager"* (%"class.blink::mojom::LockManagerInterceptorForTesting"*)** %8, i64 4
  %10 = load %"class.blink::mojom::LockManager"* (%"class.blink::mojom::LockManagerInterceptorForTesting"*)*, %"class.blink::mojom::LockManager"* (%"class.blink::mojom::LockManagerInterceptorForTesting"*)** %9, align 8
  %11 = tail call %"class.blink::mojom::LockManager"* %10(%"class.blink::mojom::LockManagerInterceptorForTesting"* %0) #10
  %12 = getelementptr inbounds %"class.mojo::PendingAssociatedRemote.1", %"class.mojo::PendingAssociatedRemote.1"* %6, i64 0, i32 0
  %13 = getelementptr inbounds %"class.mojo::PendingAssociatedRemote.1", %"class.mojo::PendingAssociatedRemote.1"* %4, i64 0, i32 0
  call void @_ZN4mojo29ScopedInterfaceEndpointHandleC1EOS0_(%"class.mojo::ScopedInterfaceEndpointHandle"* nonnull %12, %"class.mojo::ScopedInterfaceEndpointHandle"* dereferenceable(8) %13) #10
  %14 = getelementptr inbounds %"class.mojo::PendingAssociatedRemote.1", %"class.mojo::PendingAssociatedRemote.1"* %6, i64 0, i32 1
  %15 = getelementptr inbounds %"class.mojo::PendingAssociatedRemote.1", %"class.mojo::PendingAssociatedRemote.1"* %4, i64 0, i32 1
  %16 = load i32, i32* %15, align 8
  store i32 %16, i32* %14, align 8
  %17 = bitcast %"class.blink::mojom::LockManager"* %11 to void (%"class.blink::mojom::LockManager"*, %"class.std::__1::basic_string"*, i32, i32, %"class.mojo::PendingAssociatedRemote.1"*)***
  %18 = load void (%"class.blink::mojom::LockManager"*, %"class.std::__1::basic_string"*, i32, i32, %"class.mojo::PendingAssociatedRemote.1"*)**, void (%"class.blink::mojom::LockManager"*, %"class.std::__1::basic_string"*, i32, i32, %"class.mojo::PendingAssociatedRemote.1"*)*** %17, align 8
  %19 = getelementptr inbounds void (%"class.blink::mojom::LockManager"*, %"class.std::__1::basic_string"*, i32, i32, %"class.mojo::PendingAssociatedRemote.1"*)*, void (%"class.blink::mojom::LockManager"*, %"class.std::__1::basic_string"*, i32, i32, %"class.mojo::PendingAssociatedRemote.1"*)** %18, i64 2
  %20 = load void (%"class.blink::mojom::LockManager"*, %"class.std::__1::basic_string"*, i32, i32, %"class.mojo::PendingAssociatedRemote.1"*)*, void (%"class.blink::mojom::LockManager"*, %"class.std::__1::basic_string"*, i32, i32, %"class.mojo::PendingAssociatedRemote.1"*)** %19, align 8
  call void %20(%"class.blink::mojom::LockManager"* %11, %"class.std::__1::basic_string"* dereferenceable(24) %1, i32 %2, i32 %3, %"class.mojo::PendingAssociatedRemote.1"* nonnull %6) #10
  call void @_ZN4mojo29ScopedInterfaceEndpointHandleD1Ev(%"class.mojo::ScopedInterfaceEndpointHandle"* nonnull %12) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink5mojom32LockManagerInterceptorForTesting10QueryStateEN4base12OnceCallbackIFvNSt3__16vectorIN4mojo16InlinedStructPtrINS0_8LockInfoEEENS4_9allocatorIS9_EEEESC_EEE(%"class.blink::mojom::LockManagerInterceptorForTesting"*, %"class.base::OnceCallback"* nocapture) unnamed_addr #2 align 2 {
  %3 = alloca %"class.base::OnceCallback", align 8
  %4 = bitcast %"class.blink::mojom::LockManagerInterceptorForTesting"* %0 to %"class.blink::mojom::LockManager"* (%"class.blink::mojom::LockManagerInterceptorForTesting"*)***
  %5 = load %"class.blink::mojom::LockManager"* (%"class.blink::mojom::LockManagerInterceptorForTesting"*)**, %"class.blink::mojom::LockManager"* (%"class.blink::mojom::LockManagerInterceptorForTesting"*)*** %4, align 8
  %6 = getelementptr inbounds %"class.blink::mojom::LockManager"* (%"class.blink::mojom::LockManagerInterceptorForTesting"*)*, %"class.blink::mojom::LockManager"* (%"class.blink::mojom::LockManagerInterceptorForTesting"*)** %5, i64 4
  %7 = load %"class.blink::mojom::LockManager"* (%"class.blink::mojom::LockManagerInterceptorForTesting"*)*, %"class.blink::mojom::LockManager"* (%"class.blink::mojom::LockManagerInterceptorForTesting"*)** %6, align 8
  %8 = tail call %"class.blink::mojom::LockManager"* %7(%"class.blink::mojom::LockManagerInterceptorForTesting"* %0) #10
  %9 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %1, i64 0, i32 0, i32 0, i32 0
  %10 = bitcast %"class.base::OnceCallback"* %1 to i64*
  %11 = load i64, i64* %10, align 8
  %12 = bitcast %"class.base::OnceCallback"* %3 to i64*
  store i64 %11, i64* %12, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %9, align 8
  %13 = bitcast %"class.blink::mojom::LockManager"* %8 to void (%"class.blink::mojom::LockManager"*, %"class.base::OnceCallback"*)***
  %14 = load void (%"class.blink::mojom::LockManager"*, %"class.base::OnceCallback"*)**, void (%"class.blink::mojom::LockManager"*, %"class.base::OnceCallback"*)*** %13, align 8
  %15 = getelementptr inbounds void (%"class.blink::mojom::LockManager"*, %"class.base::OnceCallback"*)*, void (%"class.blink::mojom::LockManager"*, %"class.base::OnceCallback"*)** %14, i64 3
  %16 = load void (%"class.blink::mojom::LockManager"*, %"class.base::OnceCallback"*)*, void (%"class.blink::mojom::LockManager"*, %"class.base::OnceCallback"*)** %15, align 8
  call void %16(%"class.blink::mojom::LockManager"* %8, %"class.base::OnceCallback"* nonnull %3) #10
  %17 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %3, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %17) #10
  ret void
}

; Function Attrs: nounwind
declare void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"*) unnamed_addr #3

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN5blink5mojom22LockManagerAsyncWaiterC2EPNS0_11LockManagerE(%"class.blink::mojom::LockManagerAsyncWaiter"* nocapture, %"class.blink::mojom::LockManager"*) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::mojom::LockManagerAsyncWaiter", %"class.blink::mojom::LockManagerAsyncWaiter"* %0, i64 0, i32 0
  store %"class.blink::mojom::LockManager"* %1, %"class.blink::mojom::LockManager"** %3, align 8
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @_ZN5blink5mojom22LockManagerAsyncWaiterD2Ev(%"class.blink::mojom::LockManagerAsyncWaiter"* nocapture) unnamed_addr #1 align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink5mojom22LockManagerAsyncWaiter10QueryStateEPNSt3__16vectorIN4mojo16InlinedStructPtrINS0_8LockInfoEEENS2_9allocatorIS7_EEEESB_(%"class.blink::mojom::LockManagerAsyncWaiter"* nocapture readonly, %"class.std::__1::vector"*, %"class.std::__1::vector"*) local_unnamed_addr #2 align 2 {
  %4 = alloca %"class.base::RunLoop", align 8
  %5 = alloca %"class.base::OnceCallback", align 8
  %6 = alloca %"class.base::Location", align 8
  %7 = ptrtoint %"class.std::__1::vector"* %1 to i64
  %8 = ptrtoint %"class.std::__1::vector"* %2 to i64
  %9 = bitcast %"class.base::RunLoop"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %9) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %9, i8 -86, i64 48, i1 false)
  call void @_ZN4base7RunLoopC1ENS0_4TypeE(%"class.base::RunLoop"* nonnull %4, i32 0) #10
  %10 = getelementptr inbounds %"class.blink::mojom::LockManagerAsyncWaiter", %"class.blink::mojom::LockManagerAsyncWaiter"* %0, i64 0, i32 0
  %11 = load %"class.blink::mojom::LockManager"*, %"class.blink::mojom::LockManager"** %10, align 8
  %12 = ptrtoint %"class.base::RunLoop"* %4 to i64
  %13 = call i8* @_Znwm(i64 64) #11, !noalias !2
  %14 = bitcast i8* %13 to %"class.base::internal::BindStateBase"*
  call void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_E(%"class.base::internal::BindStateBase"* nonnull %14, void ()* bitcast (void (%"class.base::internal::BindStateBase"*, %"class.std::__1::vector"*, %"class.std::__1::vector"*)* @"_ZN4base8internal7InvokerINS0_9BindStateIZN5blink5mojom22LockManagerAsyncWaiter10QueryStateEPNSt3__16vectorIN4mojo16InlinedStructPtrINS4_8LockInfoEEENS6_9allocatorISB_EEEESF_E3$_0JPNS_7RunLoopESF_SF_EEEFvSE_SE_EE7RunOnceEPNS0_13BindStateBaseEOSE_SO_" to void ()*), void (%"class.base::internal::BindStateBase"*)* nonnull @"_ZN4base8internal9BindStateIZN5blink5mojom22LockManagerAsyncWaiter10QueryStateEPNSt3__16vectorIN4mojo16InlinedStructPtrINS3_8LockInfoEEENS5_9allocatorISA_EEEESE_E3$_0JPNS_7RunLoopESE_SE_EE7DestroyEPKNS0_13BindStateBaseE") #10, !noalias !2
  %15 = getelementptr inbounds i8, i8* %13, i64 40
  %16 = bitcast i8* %15 to i64*
  store i64 %12, i64* %16, align 8, !noalias !2
  %17 = getelementptr inbounds i8, i8* %13, i64 48
  %18 = bitcast i8* %17 to i64*
  store i64 %7, i64* %18, align 8, !noalias !2
  %19 = getelementptr inbounds i8, i8* %13, i64 56
  %20 = bitcast i8* %19 to i64*
  store i64 %8, i64* %20, align 8, !noalias !2
  %21 = bitcast %"class.base::OnceCallback"* %5 to i8**
  store i8* %13, i8** %21, align 8, !alias.scope !2
  %22 = bitcast %"class.blink::mojom::LockManager"* %11 to void (%"class.blink::mojom::LockManager"*, %"class.base::OnceCallback"*)***
  %23 = load void (%"class.blink::mojom::LockManager"*, %"class.base::OnceCallback"*)**, void (%"class.blink::mojom::LockManager"*, %"class.base::OnceCallback"*)*** %22, align 8
  %24 = getelementptr inbounds void (%"class.blink::mojom::LockManager"*, %"class.base::OnceCallback"*)*, void (%"class.blink::mojom::LockManager"*, %"class.base::OnceCallback"*)** %23, i64 3
  %25 = load void (%"class.blink::mojom::LockManager"*, %"class.base::OnceCallback"*)*, void (%"class.blink::mojom::LockManager"*, %"class.base::OnceCallback"*)** %24, align 8
  call void %25(%"class.blink::mojom::LockManager"* %11, %"class.base::OnceCallback"* nonnull %5) #10
  %26 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %5, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %26) #10
  %27 = bitcast %"class.base::Location"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %27) #10
  call void @_ZN4base8Location7CurrentEPKcS2_i(%"class.base::Location"* nonnull sret %6, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([74 x i8], [74 x i8]* @.str.1, i64 0, i64 0), i32 83) #10
  call void @_ZN4base7RunLoop3RunERKNS_8LocationE(%"class.base::RunLoop"* nonnull %4, %"class.base::Location"* nonnull dereferenceable(32) %6) #10
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %27) #10
  call void @_ZN4base7RunLoopD1Ev(%"class.base::RunLoop"* nonnull %4) #10
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %9) #10
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #4

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #4

declare void @_ZN4base7RunLoopC1ENS0_4TypeE(%"class.base::RunLoop"*, i32) unnamed_addr #5

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #4

declare void @_ZN4base7RunLoop3RunERKNS_8LocationE(%"class.base::RunLoop"*, %"class.base::Location"* dereferenceable(32)) local_unnamed_addr #5

declare void @_ZN4base8Location7CurrentEPKcS2_i(%"class.base::Location"* sret, i8*, i8*, i32) local_unnamed_addr #5

; Function Attrs: nounwind
declare void @_ZN4base7RunLoopD1Ev(%"class.base::RunLoop"*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink5mojom11LockRequestD2Ev(%"class.blink::mojom::LockRequest"*) unnamed_addr #2 comdat align 2 {
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink5mojom32LockRequestInterceptorForTestingD0Ev(%"class.blink::mojom::LockRequestInterceptorForTesting"*) unnamed_addr #6 comdat align 2 {
  tail call void @llvm.trap() #12
  unreachable
}

declare void @__cxa_pure_virtual() unnamed_addr

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink5mojom11LockManagerD2Ev(%"class.blink::mojom::LockManager"*) unnamed_addr #2 comdat align 2 {
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink5mojom32LockManagerInterceptorForTestingD0Ev(%"class.blink::mojom::LockManagerInterceptorForTesting"*) unnamed_addr #6 comdat align 2 {
  tail call void @llvm.trap() #12
  unreachable
}

; Function Attrs: nounwind
declare void @_ZN4mojo29ScopedInterfaceEndpointHandleD1Ev(%"class.mojo::ScopedInterfaceEndpointHandle"*) unnamed_addr #3

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #7

declare void @_ZN4mojo29ScopedInterfaceEndpointHandleC1EOS0_(%"class.mojo::ScopedInterfaceEndpointHandle"*, %"class.mojo::ScopedInterfaceEndpointHandle"* dereferenceable(8)) unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define internal void @"_ZN4base8internal7InvokerINS0_9BindStateIZN5blink5mojom22LockManagerAsyncWaiter10QueryStateEPNSt3__16vectorIN4mojo16InlinedStructPtrINS4_8LockInfoEEENS6_9allocatorISB_EEEESF_E3$_0JPNS_7RunLoopESF_SF_EEEFvSE_SE_EE7RunOnceEPNS0_13BindStateBaseEOSE_SO_"(%"class.base::internal::BindStateBase"* nocapture readonly, %"class.std::__1::vector"* nocapture dereferenceable(24), %"class.std::__1::vector"* nocapture dereferenceable(24)) #2 align 2 {
  %4 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 1
  %5 = bitcast void ()** %4 to %"class.base::RunLoop"**
  %6 = getelementptr inbounds void ()*, void ()** %4, i64 1
  %7 = bitcast void ()** %6 to %"class.std::__1::vector"**
  %8 = getelementptr inbounds void ()*, void ()** %4, i64 2
  %9 = bitcast void ()** %8 to %"class.std::__1::vector"**
  %10 = load %"class.base::RunLoop"*, %"class.base::RunLoop"** %5, align 8
  %11 = load %"class.std::__1::vector"*, %"class.std::__1::vector"** %7, align 8
  %12 = load %"class.std::__1::vector"*, %"class.std::__1::vector"** %9, align 8
  %13 = bitcast %"class.std::__1::vector"* %1 to <2 x i64>*
  %14 = load <2 x i64>, <2 x i64>* %13, align 8
  %15 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %1, i64 0, i32 0, i32 2, i32 0, i32 0
  %16 = bitcast %"class.mojo::InlinedStructPtr"** %15 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = bitcast %"class.std::__1::vector"* %1 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %18, i8 0, i64 24, i1 false) #10
  %19 = bitcast %"class.std::__1::vector"* %2 to <2 x i64>*
  %20 = load <2 x i64>, <2 x i64>* %19, align 8
  %21 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %2, i64 0, i32 0, i32 2, i32 0, i32 0
  %22 = bitcast %"class.mojo::InlinedStructPtr"** %21 to i64*
  %23 = load i64, i64* %22, align 8
  %24 = bitcast %"class.std::__1::vector"* %2 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %24, i8 0, i64 24, i1 false) #10
  %25 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %11, i64 0, i32 0, i32 0
  %26 = load %"class.mojo::InlinedStructPtr"*, %"class.mojo::InlinedStructPtr"** %25, align 8
  %27 = icmp eq %"class.mojo::InlinedStructPtr"* %26, null
  br i1 %27, label %44, label %28

28:                                               ; preds = %3
  %29 = bitcast %"class.mojo::InlinedStructPtr"* %26 to i8*
  %30 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %11, i64 0, i32 0, i32 1
  %31 = load %"class.mojo::InlinedStructPtr"*, %"class.mojo::InlinedStructPtr"** %30, align 8
  %32 = icmp eq %"class.mojo::InlinedStructPtr"* %31, %26
  br i1 %32, label %41, label %33

33:                                               ; preds = %28, %33
  %34 = phi %"class.mojo::InlinedStructPtr"* [ %35, %33 ], [ %31, %28 ]
  %35 = getelementptr inbounds %"class.mojo::InlinedStructPtr", %"class.mojo::InlinedStructPtr"* %34, i64 -1
  %36 = getelementptr inbounds %"class.mojo::InlinedStructPtr", %"class.mojo::InlinedStructPtr"* %35, i64 0, i32 0
  tail call void @_ZN5blink5mojom8LockInfoD1Ev(%"class.blink::mojom::LockInfo"* %36) #10
  %37 = icmp eq %"class.mojo::InlinedStructPtr"* %35, %26
  br i1 %37, label %38, label %33

38:                                               ; preds = %33
  %39 = bitcast %"class.std::__1::vector"* %11 to i8**
  %40 = load i8*, i8** %39, align 8
  br label %41

41:                                               ; preds = %38, %28
  %42 = phi i8* [ %40, %38 ], [ %29, %28 ]
  store %"class.mojo::InlinedStructPtr"* %26, %"class.mojo::InlinedStructPtr"** %30, align 8
  tail call void @_ZdlPv(i8* %42) #11
  %43 = bitcast %"class.std::__1::vector"* %11 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %43, i8 0, i64 24, i1 false) #10
  br label %44

44:                                               ; preds = %41, %3
  %45 = bitcast %"class.std::__1::vector"* %11 to <2 x i64>*
  store <2 x i64> %14, <2 x i64>* %45, align 8
  %46 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %11, i64 0, i32 0, i32 2, i32 0, i32 0
  %47 = bitcast %"class.mojo::InlinedStructPtr"** %46 to i64*
  store i64 %17, i64* %47, align 8
  %48 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %12, i64 0, i32 0, i32 0
  %49 = load %"class.mojo::InlinedStructPtr"*, %"class.mojo::InlinedStructPtr"** %48, align 8
  %50 = icmp eq %"class.mojo::InlinedStructPtr"* %49, null
  br i1 %50, label %67, label %51

51:                                               ; preds = %44
  %52 = bitcast %"class.mojo::InlinedStructPtr"* %49 to i8*
  %53 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %12, i64 0, i32 0, i32 1
  %54 = load %"class.mojo::InlinedStructPtr"*, %"class.mojo::InlinedStructPtr"** %53, align 8
  %55 = icmp eq %"class.mojo::InlinedStructPtr"* %54, %49
  br i1 %55, label %64, label %56

56:                                               ; preds = %51, %56
  %57 = phi %"class.mojo::InlinedStructPtr"* [ %58, %56 ], [ %54, %51 ]
  %58 = getelementptr inbounds %"class.mojo::InlinedStructPtr", %"class.mojo::InlinedStructPtr"* %57, i64 -1
  %59 = getelementptr inbounds %"class.mojo::InlinedStructPtr", %"class.mojo::InlinedStructPtr"* %58, i64 0, i32 0
  tail call void @_ZN5blink5mojom8LockInfoD1Ev(%"class.blink::mojom::LockInfo"* %59) #10
  %60 = icmp eq %"class.mojo::InlinedStructPtr"* %58, %49
  br i1 %60, label %61, label %56

61:                                               ; preds = %56
  %62 = bitcast %"class.std::__1::vector"* %12 to i8**
  %63 = load i8*, i8** %62, align 8
  br label %64

64:                                               ; preds = %61, %51
  %65 = phi i8* [ %63, %61 ], [ %52, %51 ]
  store %"class.mojo::InlinedStructPtr"* %49, %"class.mojo::InlinedStructPtr"** %53, align 8
  tail call void @_ZdlPv(i8* %65) #11
  %66 = bitcast %"class.std::__1::vector"* %12 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %66, i8 0, i64 24, i1 false) #10
  br label %67

67:                                               ; preds = %44, %64
  %68 = bitcast %"class.std::__1::vector"* %12 to <2 x i64>*
  store <2 x i64> %20, <2 x i64>* %68, align 8
  %69 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %12, i64 0, i32 0, i32 2, i32 0, i32 0
  %70 = bitcast %"class.mojo::InlinedStructPtr"** %69 to i64*
  store i64 %23, i64* %70, align 8
  tail call void @_ZN4base7RunLoop4QuitEv(%"class.base::RunLoop"* %10) #10
  ret void
}

declare void @_ZN4base7RunLoop4QuitEv(%"class.base::RunLoop"*) local_unnamed_addr #5

; Function Attrs: nounwind
declare void @_ZN5blink5mojom8LockInfoD1Ev(%"class.blink::mojom::LockInfo"*) unnamed_addr #3

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #8

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #9

; Function Attrs: nounwind ssp uwtable
define internal void @"_ZN4base8internal9BindStateIZN5blink5mojom22LockManagerAsyncWaiter10QueryStateEPNSt3__16vectorIN4mojo16InlinedStructPtrINS3_8LockInfoEEENS5_9allocatorISA_EEEESE_E3$_0JPNS_7RunLoopESE_SE_EE7DestroyEPKNS0_13BindStateBaseE"(%"class.base::internal::BindStateBase"*) #2 align 2 {
  %2 = icmp eq %"class.base::internal::BindStateBase"* %0, null
  br i1 %2, label %5, label %3

3:                                                ; preds = %1
  %4 = bitcast %"class.base::internal::BindStateBase"* %0 to i8*
  tail call void @_ZdlPv(i8* %4) #11
  br label %5

5:                                                ; preds = %3, %1
  ret void
}

declare void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_E(%"class.base::internal::BindStateBase"*, void ()*, void (%"class.base::internal::BindStateBase"*)*) unnamed_addr #5

attributes #0 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { argmemonly nounwind }
attributes #5 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { cold noreturn nounwind }
attributes #8 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { nounwind }
attributes #11 = { builtin nounwind }
attributes #12 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!3, !5}
!3 = distinct !{!3, !4, !"_ZN4base8internal8BindImplINS_12OnceCallbackEZN5blink5mojom22LockManagerAsyncWaiter10QueryStateEPNSt3__16vectorIN4mojo16InlinedStructPtrINS4_8LockInfoEEENS6_9allocatorISB_EEEESF_E3$_0JPNS_7RunLoopERSF_SJ_EEEDcOT0_DpOT1_: argument 0"}
!4 = distinct !{!4, !"_ZN4base8internal8BindImplINS_12OnceCallbackEZN5blink5mojom22LockManagerAsyncWaiter10QueryStateEPNSt3__16vectorIN4mojo16InlinedStructPtrINS4_8LockInfoEEENS6_9allocatorISB_EEEESF_E3$_0JPNS_7RunLoopERSF_SJ_EEEDcOT0_DpOT1_"}
!5 = distinct !{!5, !6, !"_ZN4base8BindOnceIZN5blink5mojom22LockManagerAsyncWaiter10QueryStateEPNSt3__16vectorIN4mojo16InlinedStructPtrINS2_8LockInfoEEENS4_9allocatorIS9_EEEESD_E3$_0JPNS_7RunLoopERSD_SH_EEENS_12OnceCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSL_DpOSM_: argument 0"}
!6 = distinct !{!6, !"_ZN4base8BindOnceIZN5blink5mojom22LockManagerAsyncWaiter10QueryStateEPNSt3__16vectorIN4mojo16InlinedStructPtrINS2_8LockInfoEEENS4_9allocatorIS9_EEEESD_E3$_0JPNS_7RunLoopERSD_SH_EEENS_12OnceCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSL_DpOSM_"}
