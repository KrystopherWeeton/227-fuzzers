; ModuleID = '../../device/fido/virtual_u2f_device.cc'
source_filename = "../../device/fido/virtual_u2f_device.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.device::VirtualU2fDevice" = type { %"class.device::VirtualFidoDevice", %"class.base::WeakPtrFactory" }
%"class.device::VirtualFidoDevice" = type { %"class.device::FidoDevice", %"class.std::__1::basic_string", %class.scoped_refptr }
%"class.device::FidoDevice" = type { i32 (...)**, i32, i32, %"class.absl::optional", i8, i32 }
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon }
%union.anon = type { %"struct.device::AuthenticatorGetInfoResponse" }
%"struct.device::AuthenticatorGetInfoResponse" = type { %"class.base::internal::flat_tree.1", %"class.base::internal::flat_tree.9", %"struct.std::__1::array", %"class.absl::optional.17", %"class.absl::optional.17", %"class.absl::optional.17", %"class.absl::optional.22", %"class.absl::optional.35", %"class.std::__1::vector.53", %"class.absl::optional.17", %"class.absl::optional.17", %"class.absl::optional.60", %"class.absl::optional.17", %"class.absl::optional.17", %"struct.device::AuthenticatorSupportedOptions" }
%"class.base::internal::flat_tree.1" = type { %"class.std::__1::vector.2" }
%"class.std::__1::vector.2" = type { %"class.std::__1::__vector_base.3" }
%"class.std::__1::__vector_base.3" = type { i32*, i32*, %"class.std::__1::__compressed_pair.4" }
%"class.std::__1::__compressed_pair.4" = type { %"struct.std::__1::__compressed_pair_elem.5" }
%"struct.std::__1::__compressed_pair_elem.5" = type { i32* }
%"class.base::internal::flat_tree.9" = type { %"class.std::__1::vector.10" }
%"class.std::__1::vector.10" = type { %"class.std::__1::__vector_base.11" }
%"class.std::__1::__vector_base.11" = type { i32*, i32*, %"class.std::__1::__compressed_pair.12" }
%"class.std::__1::__compressed_pair.12" = type { %"struct.std::__1::__compressed_pair_elem.13" }
%"struct.std::__1::__compressed_pair_elem.13" = type { i32* }
%"struct.std::__1::array" = type { [16 x i8] }
%"class.absl::optional.22" = type { %"class.absl::optional_internal::optional_data.23" }
%"class.absl::optional_internal::optional_data.23" = type { %"class.absl::optional_internal::optional_data_base.24" }
%"class.absl::optional_internal::optional_data_base.24" = type { %"class.absl::optional_internal::optional_data_dtor_base.25" }
%"class.absl::optional_internal::optional_data_dtor_base.25" = type { i8, %union.anon.26 }
%union.anon.26 = type { %"class.base::internal::flat_tree.27" }
%"class.base::internal::flat_tree.27" = type { %"class.std::__1::vector.28" }
%"class.std::__1::vector.28" = type { %"class.std::__1::__vector_base.29" }
%"class.std::__1::__vector_base.29" = type { i8*, i8*, %"class.std::__1::__compressed_pair.30" }
%"class.std::__1::__compressed_pair.30" = type { %"struct.std::__1::__compressed_pair_elem.31" }
%"struct.std::__1::__compressed_pair_elem.31" = type { i8* }
%"class.absl::optional.35" = type { %"class.absl::optional_internal::optional_data.36" }
%"class.absl::optional_internal::optional_data.36" = type { %"class.absl::optional_internal::optional_data_base.37" }
%"class.absl::optional_internal::optional_data_base.37" = type { %"class.absl::optional_internal::optional_data_dtor_base.38" }
%"class.absl::optional_internal::optional_data_dtor_base.38" = type { i8, %union.anon.39 }
%union.anon.39 = type { %"class.std::__1::vector.40" }
%"class.std::__1::vector.40" = type { %"class.std::__1::__vector_base.41" }
%"class.std::__1::__vector_base.41" = type { %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"*, %"class.std::__1::__compressed_pair.48" }
%"class.std::__1::__compressed_pair.48" = type { %"struct.std::__1::__compressed_pair_elem.49" }
%"struct.std::__1::__compressed_pair_elem.49" = type { %"class.std::__1::basic_string"* }
%"class.std::__1::vector.53" = type { %"class.std::__1::__vector_base.54" }
%"class.std::__1::__vector_base.54" = type { i32*, i32*, %"class.std::__1::__compressed_pair.55" }
%"class.std::__1::__compressed_pair.55" = type { %"struct.std::__1::__compressed_pair_elem.56" }
%"struct.std::__1::__compressed_pair_elem.56" = type { i32* }
%"class.absl::optional.60" = type { %"class.absl::optional_internal::optional_data.61" }
%"class.absl::optional_internal::optional_data.61" = type { %"class.absl::optional_internal::optional_data_base.62" }
%"class.absl::optional_internal::optional_data_base.62" = type { %"class.absl::optional_internal::optional_data_dtor_base.63" }
%"class.absl::optional_internal::optional_data_dtor_base.63" = type { i8, %union.anon.64 }
%union.anon.64 = type { i8 }
%"class.absl::optional.17" = type { %"class.absl::optional_internal::optional_data.18" }
%"class.absl::optional_internal::optional_data.18" = type { %"class.absl::optional_internal::optional_data_base.19" }
%"class.absl::optional_internal::optional_data_base.19" = type { %"class.absl::optional_internal::optional_data_dtor_base.20" }
%"class.absl::optional_internal::optional_data_dtor_base.20" = type { i8, %union.anon.21 }
%union.anon.21 = type { i32 }
%"struct.device::AuthenticatorSupportedOptions" = type <{ i8, i8, [2 x i8], i32, i8, i8, i8, i8, i32, i32, i8, i8, [2 x i8], i32, i8, i8, i8, i8, i8, [3 x i8] }>
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.42" }
%"class.std::__1::__compressed_pair.42" = type { %"struct.std::__1::__compressed_pair_elem.43" }
%"struct.std::__1::__compressed_pair_elem.43" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon.44 }
%union.anon.44 = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%class.scoped_refptr = type { %"class.device::VirtualFidoDevice::State"* }
%"class.device::VirtualFidoDevice::State" = type <{ %"class.base::RefCounted", [4 x i8], %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::map", %"class.base::RepeatingCallback", i8, i8, i8, i8, i8, [3 x i8], i32, i32, i8, [7 x i8], %"class.std::__1::basic_string", %"class.std::__1::unique_ptr", [32 x i8], i8, [7 x i8], %"class.absl::optional.82", i8, [3 x i8], i32, i32, i8, i8, %"class.absl::optional.87", i8, [7 x i8], %"class.std::__1::map.92", i8, i8, [6 x i8], %"class.std::__1::vector.102", %"class.std::__1::vector.109", i8, [7 x i8] }>
%"class.base::RefCounted" = type { %"class.base::subtle::RefCountedBase" }
%"class.base::subtle::RefCountedBase" = type { i32 }
%"class.std::__1::map" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.69", %"class.std::__1::__compressed_pair.74" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type opaque
%"class.std::__1::__compressed_pair.69" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"struct.std::__1::__compressed_pair_elem.70" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.74" = type { %"struct.std::__1::__compressed_pair_elem.75" }
%"struct.std::__1::__compressed_pair_elem.75" = type { i64 }
%"class.base::RepeatingCallback" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::internal::CallbackBaseCopyable" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr.77 }
%class.scoped_refptr.77 = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.78" }
%"struct.std::__1::__atomic_base.78" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair.79" }
%"class.std::__1::__compressed_pair.79" = type { %"struct.std::__1::__compressed_pair_elem.80" }
%"struct.std::__1::__compressed_pair_elem.80" = type { %struct.ec_key_st* }
%struct.ec_key_st = type opaque
%"class.absl::optional.82" = type { %"class.absl::optional_internal::optional_data.83" }
%"class.absl::optional_internal::optional_data.83" = type { %"class.absl::optional_internal::optional_data_base.84" }
%"class.absl::optional_internal::optional_data_base.84" = type { %"class.absl::optional_internal::optional_data_dtor_base.85" }
%"class.absl::optional_internal::optional_data_dtor_base.85" = type { i8, %union.anon.86 }
%union.anon.86 = type { %"class.std::__1::basic_string" }
%"class.absl::optional.87" = type { %"class.absl::optional_internal::optional_data.88" }
%"class.absl::optional_internal::optional_data.88" = type { %"class.absl::optional_internal::optional_data_base.89" }
%"class.absl::optional_internal::optional_data_base.89" = type { %"class.absl::optional_internal::optional_data_dtor_base.90" }
%"class.absl::optional_internal::optional_data_dtor_base.90" = type { i8, %union.anon.91 }
%union.anon.91 = type { i8 }
%"class.std::__1::map.92" = type { %"class.std::__1::__tree.93" }
%"class.std::__1::__tree.93" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.94", %"class.std::__1::__compressed_pair.98" }
%"class.std::__1::__compressed_pair.94" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.98" = type { %"struct.std::__1::__compressed_pair_elem.75" }
%"class.std::__1::vector.102" = type { %"class.std::__1::__vector_base.103" }
%"class.std::__1::__vector_base.103" = type { i64*, i64*, %"class.std::__1::__compressed_pair.104" }
%"class.std::__1::__compressed_pair.104" = type { %"struct.std::__1::__compressed_pair_elem.105" }
%"struct.std::__1::__compressed_pair_elem.105" = type { i64* }
%"class.std::__1::vector.109" = type { %"class.std::__1::__vector_base.110" }
%"class.std::__1::__vector_base.110" = type { i8*, i8*, %"class.std::__1::__compressed_pair.111" }
%"class.std::__1::__compressed_pair.111" = type { %"struct.std::__1::__compressed_pair_elem.112" }
%"struct.std::__1::__compressed_pair_elem.112" = type { i8* }
%"class.base::WeakPtrFactory" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.base::internal::WeakPtrFactoryBase" = type { %"class.base::internal::WeakReferenceOwner", i64 }
%"class.base::internal::WeakReferenceOwner" = type { %class.scoped_refptr.116 }
%class.scoped_refptr.116 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.base::internal::WeakReference::Flag" = type <{ %"class.base::RefCountedThreadSafe.117", %"class.base::AtomicFlag", [3 x i8] }>
%"class.base::RefCountedThreadSafe.117" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::AtomicFlag" = type { %"struct.std::__1::atomic.118" }
%"struct.std::__1::atomic.118" = type { %"struct.std::__1::__atomic_base.119" }
%"struct.std::__1::__atomic_base.119" = type { %"struct.std::__1::__atomic_base.120" }
%"struct.std::__1::__atomic_base.120" = type { %"struct.std::__1::__cxx_atomic_impl.121" }
%"struct.std::__1::__cxx_atomic_impl.121" = type { %"struct.std::__1::__cxx_atomic_base_impl.122" }
%"struct.std::__1::__cxx_atomic_base_impl.122" = type { i8 }
%"class.base::OnceCallback" = type { %"class.base::internal::CallbackBase" }
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.logging::LogMessage" = type opaque
%"class.apdu::ApduResponse" = type <{ %"class.std::__1::vector.109", i16, [6 x i8] }>
%"class.absl::optional.123" = type { %"class.absl::optional_internal::optional_data.124" }
%"class.absl::optional_internal::optional_data.124" = type { %"class.absl::optional_internal::optional_data_base.125" }
%"class.absl::optional_internal::optional_data_base.125" = type { %"class.absl::optional_internal::optional_data_dtor_base.126" }
%"class.absl::optional_internal::optional_data_dtor_base.126" = type { i8, %union.anon.127 }
%union.anon.127 = type { %"class.apdu::ApduCommand" }
%"class.apdu::ApduCommand" = type { i8, i8, i8, i8, i64, %"class.std::__1::vector.109" }
%"class.base::Location" = type { i8*, i8*, i32, i8* }
%"class.base::OnceCallback.130" = type { %"class.base::internal::CallbackBase" }
%"class.absl::optional.131" = type { %"class.absl::optional_internal::optional_data.132" }
%"class.absl::optional_internal::optional_data.132" = type { %"class.absl::optional_internal::optional_data_base.133" }
%"class.absl::optional_internal::optional_data_base.133" = type { %"class.absl::optional_internal::optional_data_dtor_base.134" }
%"class.absl::optional_internal::optional_data_dtor_base.134" = type { i8, %union.anon.135 }
%union.anon.135 = type { %"class.std::__1::vector.109" }
%"class.base::span" = type { %"struct.base::internal::ExtentStorage", i8* }
%"struct.base::internal::ExtentStorage" = type { i64 }
%class.scoped_refptr.128 = type { %"class.base::SingleThreadTaskRunner"* }
%"class.base::SingleThreadTaskRunner" = type { %"class.base::SequencedTaskRunner.base", [4 x i8] }
%"class.base::SequencedTaskRunner.base" = type { %"class.base::TaskRunner.base" }
%"class.base::TaskRunner.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.129" }>
%"class.base::RefCountedThreadSafe.129" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::TaskRunner" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.129", [4 x i8] }>
%"struct.base::internal::BindState" = type { %"class.base::internal::BindStateBase", %"class.base::OnceCallback", %"class.std::__1::tuple" }
%"class.std::__1::tuple" = type { %"struct.std::__1::__tuple_impl" }
%"struct.std::__1::__tuple_impl" = type { %"class.std::__1::__tuple_leaf" }
%"class.std::__1::__tuple_leaf" = type { %"class.absl::optional.131" }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"struct.std::__1::array.143" = type { [32 x i8] }
%"struct.device::VirtualFidoDevice::RegistrationData" = type { %"class.std::__1::unique_ptr.139", %"struct.std::__1::array.143", i32, i8, i8, i8, %"class.absl::optional.156", %"class.absl::optional.172", %"class.absl::optional.177", %"class.absl::optional.182", %"class.absl::optional.131" }
%"class.std::__1::unique_ptr.139" = type { %"class.std::__1::__compressed_pair.140" }
%"class.std::__1::__compressed_pair.140" = type { %"struct.std::__1::__compressed_pair_elem.141" }
%"struct.std::__1::__compressed_pair_elem.141" = type { %"class.device::VirtualFidoDevice::PrivateKey"* }
%"class.device::VirtualFidoDevice::PrivateKey" = type { i32 (...)** }
%"class.absl::optional.156" = type { %"class.absl::optional_internal::optional_data.157" }
%"class.absl::optional_internal::optional_data.157" = type { %"class.absl::optional_internal::optional_data_base.158" }
%"class.absl::optional_internal::optional_data_base.158" = type { %"class.absl::optional_internal::optional_data_dtor_base.159" }
%"class.absl::optional_internal::optional_data_dtor_base.159" = type { i8, %union.anon.160 }
%union.anon.160 = type { %"class.device::PublicKeyCredentialUserEntity" }
%"class.device::PublicKeyCredentialUserEntity" = type { %"class.std::__1::vector.109", %"class.absl::optional.82", %"class.absl::optional.82", %"class.absl::optional.161" }
%"class.absl::optional.161" = type { %"class.absl::optional_internal::optional_data.162" }
%"class.absl::optional_internal::optional_data.162" = type { %"class.absl::optional_internal::optional_data_base.163" }
%"class.absl::optional_internal::optional_data_base.163" = type { %"class.absl::optional_internal::optional_data_dtor_base.164" }
%"class.absl::optional_internal::optional_data_dtor_base.164" = type { i8, %union.anon.165 }
%union.anon.165 = type { %class.GURL }
%class.GURL = type { %"class.std::__1::basic_string", i8, %"struct.url::Parsed", %"class.std::__1::unique_ptr.166" }
%"struct.url::Parsed" = type { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, %"struct.url::Parsed"* }
%"struct.url::Component" = type { i32, i32 }
%"class.std::__1::unique_ptr.166" = type { %"class.std::__1::__compressed_pair.167" }
%"class.std::__1::__compressed_pair.167" = type { %"struct.std::__1::__compressed_pair_elem.168" }
%"struct.std::__1::__compressed_pair_elem.168" = type { %class.GURL* }
%"class.absl::optional.172" = type { %"class.absl::optional_internal::optional_data.173" }
%"class.absl::optional_internal::optional_data.173" = type { %"class.absl::optional_internal::optional_data_base.174" }
%"class.absl::optional_internal::optional_data_base.174" = type { %"class.absl::optional_internal::optional_data_dtor_base.175" }
%"class.absl::optional_internal::optional_data_dtor_base.175" = type { i8, %union.anon.176 }
%union.anon.176 = type { %"struct.device::PublicKeyCredentialRpEntity" }
%"struct.device::PublicKeyCredentialRpEntity" = type { %"class.std::__1::basic_string", %"class.absl::optional.82", %"class.absl::optional.161" }
%"class.absl::optional.177" = type { %"class.absl::optional_internal::optional_data.178" }
%"class.absl::optional_internal::optional_data.178" = type { %"class.absl::optional_internal::optional_data_base.179" }
%"class.absl::optional_internal::optional_data_base.179" = type { %"class.absl::optional_internal::optional_data_dtor_base.180" }
%"class.absl::optional_internal::optional_data_dtor_base.180" = type { i8, %union.anon.181 }
%union.anon.181 = type { %"struct.std::__1::pair" }
%"struct.std::__1::pair" = type { %"struct.std::__1::array.143", %"struct.std::__1::array.143" }
%"class.absl::optional.182" = type { %"class.absl::optional_internal::optional_data.183" }
%"class.absl::optional_internal::optional_data.183" = type { %"class.absl::optional_internal::optional_data_base.184" }
%"class.absl::optional_internal::optional_data_base.184" = type { %"class.absl::optional_internal::optional_data_dtor_base.185" }
%"class.absl::optional_internal::optional_data_dtor_base.185" = type { i8, %union.anon.186 }
%union.anon.186 = type { %"struct.std::__1::array.143" }
%"class.std::__1::__vector_base_common" = type { i8 }
%"class.crypto::ECPrivateKey" = type { %"class.std::__1::unique_ptr.147" }
%"class.std::__1::unique_ptr.147" = type { %"class.std::__1::__compressed_pair.148" }
%"class.std::__1::__compressed_pair.148" = type { %"struct.std::__1::__compressed_pair_elem.149" }
%"struct.std::__1::__compressed_pair_elem.149" = type { %struct.evp_pkey_st* }
%struct.evp_pkey_st = type opaque
%"class.base::WeakPtr" = type { %"class.base::internal::WeakPtrBase" }
%"class.base::internal::WeakPtrBase" = type { %"class.base::internal::WeakReference", i64 }
%"class.base::internal::WeakReference" = type { %class.scoped_refptr.137 }
%class.scoped_refptr.137 = type { %"class.base::internal::WeakReference::Flag"* }

$_ZNK4base4spanIKhLm18446744073709551615EE7subspanILm32ELm32EEENS0_IS1_XquneT0_L_ZNS_L14dynamic_extentEET0_quneLm18446744073709551615EL_ZNS_L14dynamic_extentEEmiLm18446744073709551615ET_L_ZNS_L14dynamic_extentEEEEEv = comdat any

$_ZN4base8internal9BindStateINS_12OnceCallbackIFvN4absl8optionalINSt3__16vectorIhNS5_9allocatorIhEEEEEEEEEJSA_EE6CreateISC_JSA_EEEPSD_PFvvEOT_DpOT0_ = comdat any

$_ZN4base8internal7InvokerINS0_9BindStateINS_12OnceCallbackIFvN4absl8optionalINSt3__16vectorIhNS6_9allocatorIhEEEEEEEEEJSB_EEEFvvEE7RunOnceEPNS0_13BindStateBaseE = comdat any

$_ZN4base8internal9BindStateINS_12OnceCallbackIFvN4absl8optionalINSt3__16vectorIhNS5_9allocatorIhEEEEEEEEEJSA_EE7DestroyEPKNS0_13BindStateBaseE = comdat any

$_ZN4base8internal23QueryCancellationTraitsINS0_9BindStateINS_12OnceCallbackIFvN4absl8optionalINSt3__16vectorIhNS6_9allocatorIhEEEEEEEEEJSB_EEEEEbPKNS0_13BindStateBaseENSF_21CancellationQueryModeE = comdat any

$_ZN4base8internal7InvokerINS0_9BindStateINS_12OnceCallbackIFvN4absl8optionalINSt3__16vectorIhNS6_9allocatorIhEEEEEEEEEJSA_EEEFvvEE7RunOnceEPNS0_13BindStateBaseE = comdat any

$_ZN4base8internal9BindStateINS_12OnceCallbackIFvN4absl8optionalINSt3__16vectorIhNS5_9allocatorIhEEEEEEEEEJS9_EE7DestroyEPKNS0_13BindStateBaseE = comdat any

$_ZN4base8internal23QueryCancellationTraitsINS0_9BindStateINS_12OnceCallbackIFvN4absl8optionalINSt3__16vectorIhNS6_9allocatorIhEEEEEEEEEJSA_EEEEEbPKNS0_13BindStateBaseENSF_21CancellationQueryModeE = comdat any

@.ref.tmp = private unnamed_addr constant [3 x i8] c"\00\02\01", align 1
@_ZTVN6device16VirtualU2fDeviceE = hidden unnamed_addr constant { [15 x i8*] } { [15 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.device::VirtualU2fDevice"*)* @_ZN6device16VirtualU2fDeviceD2Ev to i8*), i8* bitcast (void (%"class.device::VirtualU2fDevice"*)* @_ZN6device16VirtualU2fDeviceD0Ev to i8*), i8* bitcast (i32 (%"class.device::VirtualU2fDevice"*, %"class.std::__1::vector.109"*, %"class.base::OnceCallback"*)* @_ZN6device16VirtualU2fDevice14DeviceTransactENSt3__16vectorIhNS1_9allocatorIhEEEEN4base12OnceCallbackIFvN4absl8optionalIS5_EEEEE to i8*), i8* bitcast (void (%"class.device::VirtualFidoDevice"*, %"class.base::OnceCallback.130"*)* @_ZN6device17VirtualFidoDevice7TryWinkEN4base12OnceCallbackIFvvEEE to i8*), i8* bitcast (void (%"class.device::VirtualU2fDevice"*, i32)* @_ZN6device16VirtualU2fDevice6CancelEj to i8*), i8* bitcast (void (%"class.std::__1::basic_string"*, %"class.device::VirtualFidoDevice"*)* @_ZNK6device17VirtualFidoDevice5GetIdEv to i8*), i8* bitcast (void (%"class.std::__1::basic_string"*, %"class.device::FidoDevice"*)* @_ZNK6device10FidoDevice14GetDisplayNameEv to i8*), i8* bitcast (i8 (%"class.device::VirtualFidoDevice"*)* @_ZNK6device17VirtualFidoDevice15DeviceTransportEv to i8*), i8* bitcast (i1 (%"class.device::FidoDevice"*)* @_ZNK6device10FidoDevice15IsInPairingModeEv to i8*), i8* bitcast (i1 (%"class.device::FidoDevice"*)* @_ZNK6device10FidoDevice8IsPairedEv to i8*), i8* bitcast (i1 (%"class.device::FidoDevice"*)* @_ZNK6device10FidoDevice21RequiresBlePairingPinEv to i8*), i8* bitcast (void (%"class.base::WeakPtr"*, %"class.device::VirtualU2fDevice"*)* @_ZN6device16VirtualU2fDevice10GetWeakPtrEv to i8*), i8* bitcast (void (%"class.device::FidoDevice"*, %"class.base::OnceCallback.130"*)* @_ZN6device10FidoDevice38DiscoverSupportedProtocolAndDeviceInfoEN4base12OnceCallbackIFvvEEE to i8*)] }, align 8
@.str = private unnamed_addr constant [15 x i8] c"DeviceTransact\00", align 1
@.str.1 = private unnamed_addr constant [40 x i8] c"../../device/fido/virtual_u2f_device.cc\00", align 1
@.ref.tmp.2 = private unnamed_addr constant [3 x i8] c"\01\02\03", align 1
@.str.3 = private unnamed_addr constant [29 x i8] c"../../base/containers/span.h\00", align 1
@.str.6 = private unnamed_addr constant [45 x i8] c"Extent != dynamic_extent || Offset <= size()\00", align 1
@.str.7 = private unnamed_addr constant [80 x i8] c"Extent != dynamic_extent || Count == dynamic_extent || Count <= size() - Offset\00", align 1
@.str.8 = private unnamed_addr constant [13 x i8] c"idx < size()\00", align 1
@.str.11 = private unnamed_addr constant [27 x i8] c"../../base/bind_internal.h\00", align 1
@.str.12 = private unnamed_addr constant [18 x i8] c"!IsNull(functor_)\00", align 1

@_ZN6device16VirtualU2fDeviceC1Ev = hidden unnamed_addr alias void (%"class.device::VirtualU2fDevice"*), void (%"class.device::VirtualU2fDevice"*)* @_ZN6device16VirtualU2fDeviceC2Ev
@_ZN6device16VirtualU2fDeviceC1E13scoped_refptrINS_17VirtualFidoDevice5StateEE = hidden unnamed_addr alias void (%"class.device::VirtualU2fDevice"*, %"class.device::VirtualFidoDevice::State"*), void (%"class.device::VirtualU2fDevice"*, %"class.device::VirtualFidoDevice::State"*)* @_ZN6device16VirtualU2fDeviceC2E13scoped_refptrINS_17VirtualFidoDevice5StateEE
@_ZN6device16VirtualU2fDeviceD1Ev = hidden unnamed_addr alias void (%"class.device::VirtualU2fDevice"*), void (%"class.device::VirtualU2fDevice"*)* @_ZN6device16VirtualU2fDeviceD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN6device16VirtualU2fDevice20IsTransportSupportedENS_21FidoTransportProtocolE(i8 zeroext) local_unnamed_addr #0 align 2 {
  %2 = tail call i8* @_Znwm(i64 3) #9
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %2, i8* align 1 getelementptr inbounds ([3 x i8], [3 x i8]* @.ref.tmp, i64 0, i64 0), i64 3, i1 false) #10
  %3 = getelementptr inbounds i8, i8* %2, i64 1
  %4 = load i8, i8* %2, align 1
  %5 = icmp ugt i8 %4, 2
  br i1 %5, label %13, label %6

6:                                                ; preds = %13, %1
  %7 = phi i8* [ %3, %1 ], [ %2, %13 ]
  store i8 2, i8* %7, align 1
  %8 = getelementptr inbounds i8, i8* %2, i64 2
  %9 = load i8, i8* %8, align 1
  %10 = getelementptr inbounds i8, i8* %2, i64 1
  %11 = load i8, i8* %10, align 1
  %12 = icmp ult i8 %9, %11
  br i1 %12, label %93, label %96

13:                                               ; preds = %1
  store i8 %4, i8* %3, align 1
  br label %6

14:                                               ; preds = %112, %96
  %15 = phi i8 [ %101, %96 ], [ %115, %112 ]
  %16 = phi i64 [ 0, %96 ], [ 1, %112 ]
  %17 = add nuw nsw i64 %16, 2
  %18 = icmp eq i64 %17, 3
  br i1 %18, label %60, label %19

19:                                               ; preds = %14
  %20 = sub nsw i64 1, %16
  %21 = and i64 %20, 1
  %22 = icmp eq i64 %21, 0
  br i1 %22, label %34, label %23

23:                                               ; preds = %19
  %24 = getelementptr inbounds i8, i8* %2, i64 %17
  %25 = load i8, i8* %24, align 1
  %26 = icmp ult i8 %15, %25
  br i1 %26, label %27, label %30

27:                                               ; preds = %23
  %28 = add nuw nsw i64 %16, 1
  %29 = getelementptr inbounds i8, i8* %2, i64 %28
  store i8 %25, i8* %29, align 1
  br label %30

30:                                               ; preds = %27, %23
  %31 = phi i8 [ %15, %23 ], [ %25, %27 ]
  %32 = phi i64 [ %16, %23 ], [ %28, %27 ]
  %33 = add nuw nsw i64 %16, 3
  br label %34

34:                                               ; preds = %19, %30
  %35 = phi i64 [ undef, %19 ], [ %32, %30 ]
  %36 = phi i8 [ %15, %19 ], [ %31, %30 ]
  %37 = phi i64 [ %16, %19 ], [ %32, %30 ]
  %38 = phi i64 [ %17, %19 ], [ %33, %30 ]
  %39 = icmp eq i64 %16, 0
  br i1 %39, label %57, label %40

40:                                               ; preds = %34, %107
  %41 = phi i8 [ %108, %107 ], [ %36, %34 ]
  %42 = phi i64 [ %109, %107 ], [ %37, %34 ]
  %43 = phi i64 [ %110, %107 ], [ %38, %34 ]
  %44 = getelementptr inbounds i8, i8* %2, i64 %43
  %45 = load i8, i8* %44, align 1
  %46 = icmp ult i8 %41, %45
  br i1 %46, label %47, label %50

47:                                               ; preds = %40
  %48 = add nsw i64 %42, 1
  %49 = getelementptr inbounds i8, i8* %2, i64 %48
  store i8 %45, i8* %49, align 1
  br label %50

50:                                               ; preds = %47, %40
  %51 = phi i8 [ %41, %40 ], [ %45, %47 ]
  %52 = phi i64 [ %42, %40 ], [ %48, %47 ]
  %53 = add nuw nsw i64 %43, 1
  %54 = getelementptr inbounds i8, i8* %2, i64 %53
  %55 = load i8, i8* %54, align 1
  %56 = icmp ult i8 %51, %55
  br i1 %56, label %104, label %107

57:                                               ; preds = %107, %34
  %58 = phi i64 [ %35, %34 ], [ %109, %107 ]
  %59 = add nsw i64 %58, 1
  br label %60

60:                                               ; preds = %57, %14
  %61 = phi i64 [ %59, %57 ], [ 2, %14 ]
  %62 = getelementptr inbounds i8, i8* %2, i64 %61
  %63 = icmp eq i64 %61, 3
  %64 = ptrtoint i8* %62 to i64
  %65 = select i1 %63, i64 %99, i64 %64
  br label %66

66:                                               ; preds = %112, %60
  %67 = phi i64 [ %65, %60 ], [ %99, %112 ]
  %68 = ptrtoint i8* %2 to i64
  %69 = sub i64 %67, %68
  %70 = icmp eq i64 %69, 0
  %71 = inttoptr i64 %67 to i8*
  br i1 %70, label %85, label %72

72:                                               ; preds = %66, %72
  %73 = phi i8* [ %83, %72 ], [ %2, %66 ]
  %74 = phi i64 [ %82, %72 ], [ %69, %66 ]
  %75 = lshr i64 %74, 1
  %76 = getelementptr inbounds i8, i8* %73, i64 %75
  %77 = load i8, i8* %76, align 1
  %78 = icmp ult i8 %77, %0
  %79 = getelementptr inbounds i8, i8* %76, i64 1
  %80 = xor i64 %75, -1
  %81 = add i64 %74, %80
  %82 = select i1 %78, i64 %81, i64 %75
  %83 = select i1 %78, i8* %79, i8* %73
  %84 = icmp eq i64 %82, 0
  br i1 %84, label %85, label %72

85:                                               ; preds = %72, %66
  %86 = phi i8* [ %2, %66 ], [ %83, %72 ]
  %87 = icmp eq i8* %86, %71
  br i1 %87, label %91, label %88

88:                                               ; preds = %85
  %89 = load i8, i8* %86, align 1
  %90 = icmp ule i8 %89, %0
  br label %91

91:                                               ; preds = %85, %88
  %92 = phi i1 [ false, %85 ], [ %90, %88 ]
  tail call void @_ZdlPv(i8* nonnull %2) #9
  ret i1 %92

93:                                               ; preds = %6
  store i8 %11, i8* %8, align 1
  %94 = load i8, i8* %2, align 1
  %95 = icmp ult i8 %9, %94
  br i1 %95, label %118, label %96

96:                                               ; preds = %118, %93, %6
  %97 = phi i8* [ %8, %6 ], [ %10, %93 ], [ %2, %118 ]
  store i8 %9, i8* %97, align 1
  %98 = getelementptr inbounds i8, i8* %2, i64 3
  %99 = ptrtoint i8* %98 to i64
  %100 = getelementptr inbounds i8, i8* %2, i64 1
  %101 = load i8, i8* %2, align 1
  %102 = load i8, i8* %100, align 1
  %103 = icmp ult i8 %101, %102
  br i1 %103, label %112, label %14

104:                                              ; preds = %50
  %105 = add nsw i64 %52, 1
  %106 = getelementptr inbounds i8, i8* %2, i64 %105
  store i8 %55, i8* %106, align 1
  br label %107

107:                                              ; preds = %104, %50
  %108 = phi i8 [ %51, %50 ], [ %55, %104 ]
  %109 = phi i64 [ %52, %50 ], [ %105, %104 ]
  %110 = add nuw nsw i64 %43, 2
  %111 = icmp eq i64 %110, 3
  br i1 %111, label %57, label %40

112:                                              ; preds = %96
  %113 = getelementptr inbounds i8, i8* %2, i64 2
  %114 = getelementptr inbounds i8, i8* %2, i64 1
  %115 = load i8, i8* %114, align 1
  %116 = load i8, i8* %113, align 1
  %117 = icmp ult i8 %115, %116
  br i1 %117, label %66, label %14

118:                                              ; preds = %93
  store i8 %94, i8* %10, align 1
  br label %96
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6device16VirtualU2fDeviceC2Ev(%"class.device::VirtualU2fDevice"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.device::VirtualU2fDevice", %"class.device::VirtualU2fDevice"* %0, i64 0, i32 0
  tail call void @_ZN6device17VirtualFidoDeviceC2Ev(%"class.device::VirtualFidoDevice"* %2) #10
  %3 = getelementptr inbounds %"class.device::VirtualU2fDevice", %"class.device::VirtualU2fDevice"* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [15 x i8*] }, { [15 x i8*] }* @_ZTVN6device16VirtualU2fDeviceE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %3, align 8
  %4 = getelementptr inbounds %"class.device::VirtualU2fDevice", %"class.device::VirtualU2fDevice"* %0, i64 0, i32 1, i32 0
  %5 = ptrtoint %"class.device::VirtualU2fDevice"* %0 to i64
  tail call void @_ZN4base8internal18WeakPtrFactoryBaseC2Em(%"class.base::internal::WeakPtrFactoryBase"* %4, i64 %5) #10
  ret void
}

declare void @_ZN6device17VirtualFidoDeviceC2Ev(%"class.device::VirtualFidoDevice"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6device16VirtualU2fDeviceC2E13scoped_refptrINS_17VirtualFidoDevice5StateEE(%"class.device::VirtualU2fDevice"*, %"class.device::VirtualFidoDevice::State"*) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.device::VirtualU2fDevice", %"class.device::VirtualU2fDevice"* %0, i64 0, i32 0
  tail call void @_ZN6device17VirtualFidoDeviceC2E13scoped_refptrINS0_5StateEE(%"class.device::VirtualFidoDevice"* %3, %"class.device::VirtualFidoDevice::State"* %1) #10
  %4 = getelementptr inbounds %"class.device::VirtualU2fDevice", %"class.device::VirtualU2fDevice"* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [15 x i8*] }, { [15 x i8*] }* @_ZTVN6device16VirtualU2fDeviceE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %4, align 8
  %5 = getelementptr inbounds %"class.device::VirtualU2fDevice", %"class.device::VirtualU2fDevice"* %0, i64 0, i32 1, i32 0
  %6 = ptrtoint %"class.device::VirtualU2fDevice"* %0 to i64
  tail call void @_ZN4base8internal18WeakPtrFactoryBaseC2Em(%"class.base::internal::WeakPtrFactoryBase"* %5, i64 %6) #10
  ret void
}

declare void @_ZN6device17VirtualFidoDeviceC2E13scoped_refptrINS0_5StateEE(%"class.device::VirtualFidoDevice"*, %"class.device::VirtualFidoDevice::State"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6device16VirtualU2fDeviceD2Ev(%"class.device::VirtualU2fDevice"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.device::VirtualU2fDevice", %"class.device::VirtualU2fDevice"* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [15 x i8*] }, { [15 x i8*] }* @_ZTVN6device16VirtualU2fDeviceE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.device::VirtualU2fDevice", %"class.device::VirtualU2fDevice"* %0, i64 0, i32 1, i32 0
  tail call void @_ZN4base8internal18WeakPtrFactoryBaseD2Ev(%"class.base::internal::WeakPtrFactoryBase"* %3) #10
  %4 = getelementptr inbounds %"class.device::VirtualU2fDevice", %"class.device::VirtualU2fDevice"* %0, i64 0, i32 0
  tail call void @_ZN6device17VirtualFidoDeviceD2Ev(%"class.device::VirtualFidoDevice"* %4) #10
  ret void
}

; Function Attrs: nounwind
declare void @_ZN4base8internal18WeakPtrFactoryBaseD2Ev(%"class.base::internal::WeakPtrFactoryBase"*) unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN6device17VirtualFidoDeviceD2Ev(%"class.device::VirtualFidoDevice"*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6device16VirtualU2fDeviceD0Ev(%"class.device::VirtualU2fDevice"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.device::VirtualU2fDevice", %"class.device::VirtualU2fDevice"* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [15 x i8*] }, { [15 x i8*] }* @_ZTVN6device16VirtualU2fDeviceE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.device::VirtualU2fDevice", %"class.device::VirtualU2fDevice"* %0, i64 0, i32 1, i32 0
  tail call void @_ZN4base8internal18WeakPtrFactoryBaseD2Ev(%"class.base::internal::WeakPtrFactoryBase"* %3) #10
  %4 = getelementptr inbounds %"class.device::VirtualU2fDevice", %"class.device::VirtualU2fDevice"* %0, i64 0, i32 0
  tail call void @_ZN6device17VirtualFidoDeviceD2Ev(%"class.device::VirtualFidoDevice"* %4) #10
  %5 = bitcast %"class.device::VirtualU2fDevice"* %0 to i8*
  tail call void @_ZdlPv(i8* %5) #9
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #4

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @_ZN6device16VirtualU2fDevice6CancelEj(%"class.device::VirtualU2fDevice"* nocapture, i32) unnamed_addr #5 align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN6device16VirtualU2fDevice14DeviceTransactENSt3__16vectorIhNS1_9allocatorIhEEEEN4base12OnceCallbackIFvN4absl8optionalIS5_EEEEE(%"class.device::VirtualU2fDevice"*, %"class.std::__1::vector.109"* nocapture readonly, %"class.base::OnceCallback"*) unnamed_addr #0 align 2 {
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = alloca %"class.std::__1::vector.109", align 8
  %6 = alloca %"class.apdu::ApduResponse", align 8
  %7 = alloca %"class.std::__1::vector.109", align 8
  %8 = alloca %"class.std::__1::vector.109", align 16
  %9 = alloca %"class.apdu::ApduResponse", align 8
  %10 = alloca %"class.std::__1::vector.109", align 8
  %11 = alloca %"class.absl::optional.123", align 8
  %12 = alloca %"class.base::Location", align 8
  %13 = alloca %"class.base::OnceCallback.130", align 8
  %14 = alloca %"class.absl::optional.131", align 8
  %15 = alloca %"class.std::__1::vector.109", align 16
  %16 = alloca %"class.apdu::ApduResponse", align 8
  %17 = alloca %"class.std::__1::vector.109", align 8
  %18 = alloca %"class.base::Location", align 8
  %19 = alloca %"class.base::OnceCallback.130", align 8
  %20 = alloca %"class.absl::optional.131", align 8
  %21 = alloca %"class.absl::optional.131", align 8
  %22 = alloca %"class.base::span", align 8
  %23 = alloca %"class.absl::optional.131", align 8
  %24 = alloca %"class.base::span", align 8
  %25 = alloca %"class.base::Location", align 8
  %26 = alloca %"class.base::OnceCallback.130", align 8
  %27 = getelementptr inbounds %"class.absl::optional.123", %"class.absl::optional.123"* %11, i64 0, i32 0, i32 0, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %27) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %27, i8 -86, i64 48, i1 false)
  %28 = bitcast %"class.std::__1::vector.109"* %1 to i64*
  %29 = load i64, i64* %28, align 8
  %30 = getelementptr inbounds %"class.std::__1::vector.109", %"class.std::__1::vector.109"* %1, i64 0, i32 0, i32 1
  %31 = bitcast i8** %30 to i64*
  %32 = load i64, i64* %31, align 8
  %33 = sub i64 %32, %29
  %34 = inttoptr i64 %29 to i8*
  call void @_ZN4apdu11ApduCommand17CreateFromMessageEN4base4spanIKhLm18446744073709551615EEE(%"class.absl::optional.123"* nonnull sret %11, i64 %33, i8* %34) #10
  %35 = load i8, i8* %27, align 8, !range !2
  %36 = icmp eq i8 %35, 0
  br i1 %36, label %37, label %80

37:                                               ; preds = %3
  %38 = call dereferenceable(8) %class.scoped_refptr.128* @_ZN4base22ThreadTaskRunnerHandle3GetEv() #10
  %39 = bitcast %class.scoped_refptr.128* %38 to %"class.base::TaskRunner"**
  %40 = load %"class.base::TaskRunner"*, %"class.base::TaskRunner"** %39, align 8
  %41 = bitcast %"class.base::Location"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %41) #10
  call void @_ZN4base8Location7CurrentEPKcS2_i(%"class.base::Location"* nonnull sret %12, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.1, i64 0, i64 0), i32 79) #10
  %42 = getelementptr inbounds %"class.absl::optional.131", %"class.absl::optional.131"* %14, i64 0, i32 0, i32 0, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %42) #10
  %43 = bitcast %"class.std::__1::vector.109"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %43)
  %44 = bitcast %"class.std::__1::vector.109"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %44) #10, !noalias !3
  %45 = bitcast %"class.apdu::ApduResponse"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %45) #10, !noalias !3
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %43, i8 0, i64 24, i1 false) #10, !noalias !3
  call void @_ZN4apdu12ApduResponseC1ENSt3__16vectorIhNS1_9allocatorIhEEEENS0_6StatusE(%"class.apdu::ApduResponse"* nonnull %9, %"class.std::__1::vector.109"* nonnull %10, i16 zeroext 27904) #10, !noalias !3
  call void @_ZNK4apdu12ApduResponse18GetEncodedResponseEv(%"class.std::__1::vector.109"* nonnull sret %8, %"class.apdu::ApduResponse"* nonnull %9) #10, !noalias !3
  store i8 1, i8* %42, align 8, !alias.scope !3
  %46 = getelementptr inbounds %"class.absl::optional.131", %"class.absl::optional.131"* %14, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  %47 = bitcast %"class.std::__1::vector.109"* %8 to <2 x i64>*
  %48 = load <2 x i64>, <2 x i64>* %47, align 16, !noalias !3
  %49 = getelementptr inbounds %"class.absl::optional.131", %"class.absl::optional.131"* %14, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 1
  %50 = bitcast i8** %49 to i64*
  %51 = bitcast %"class.std::__1::vector.109"* %46 to <2 x i64>*
  store <2 x i64> %48, <2 x i64>* %51, align 8, !alias.scope !3
  %52 = getelementptr inbounds %"class.std::__1::vector.109", %"class.std::__1::vector.109"* %8, i64 0, i32 0, i32 2, i32 0, i32 0
  %53 = bitcast i8** %52 to i64*
  %54 = load i64, i64* %53, align 16, !noalias !3
  %55 = getelementptr inbounds %"class.absl::optional.131", %"class.absl::optional.131"* %14, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 2, i32 0, i32 0
  %56 = bitcast i8** %55 to i64*
  store i64 %54, i64* %56, align 8, !alias.scope !3
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %44, i8 0, i64 24, i1 false) #10, !noalias !3
  call void @_ZN4apdu12ApduResponseD1Ev(%"class.apdu::ApduResponse"* nonnull %9) #10, !noalias !3
  %57 = getelementptr inbounds %"class.std::__1::vector.109", %"class.std::__1::vector.109"* %10, i64 0, i32 0, i32 0
  %58 = load i8*, i8** %57, align 8, !noalias !3
  %59 = icmp eq i8* %58, null
  br i1 %59, label %64, label %60

60:                                               ; preds = %37
  %61 = ptrtoint i8* %58 to i64
  %62 = getelementptr inbounds %"class.std::__1::vector.109", %"class.std::__1::vector.109"* %10, i64 0, i32 0, i32 1
  %63 = bitcast i8** %62 to i64*
  store i64 %61, i64* %63, align 8, !noalias !3
  call void @_ZdlPv(i8* nonnull %58) #9, !noalias !3
  br label %64

64:                                               ; preds = %37, %60
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %45) #10, !noalias !3
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %44) #10, !noalias !3
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %43)
  %65 = call %"struct.base::internal::BindState"* @_ZN4base8internal9BindStateINS_12OnceCallbackIFvN4absl8optionalINSt3__16vectorIhNS5_9allocatorIhEEEEEEEEEJSA_EE6CreateISC_JSA_EEEPSD_PFvvEOT_DpOT0_(void ()* bitcast (void (%"class.base::internal::BindStateBase"*)* @_ZN4base8internal7InvokerINS0_9BindStateINS_12OnceCallbackIFvN4absl8optionalINSt3__16vectorIhNS6_9allocatorIhEEEEEEEEEJSB_EEEFvvEE7RunOnceEPNS0_13BindStateBaseE to void ()*), %"class.base::OnceCallback"* dereferenceable(8) %2, %"class.absl::optional.131"* nonnull dereferenceable(32) %14) #10, !noalias !6
  %66 = getelementptr inbounds %"struct.base::internal::BindState", %"struct.base::internal::BindState"* %65, i64 0, i32 0
  %67 = getelementptr inbounds %"class.base::OnceCallback.130", %"class.base::OnceCallback.130"* %13, i64 0, i32 0, i32 0, i32 0
  store %"class.base::internal::BindStateBase"* %66, %"class.base::internal::BindStateBase"** %67, align 8, !alias.scope !6
  %68 = call zeroext i1 @_ZN4base10TaskRunner8PostTaskERKNS_8LocationENS_12OnceCallbackIFvvEEE(%"class.base::TaskRunner"* %40, %"class.base::Location"* nonnull dereferenceable(32) %12, %"class.base::OnceCallback.130"* nonnull %13) #10
  %69 = getelementptr inbounds %"class.base::OnceCallback.130", %"class.base::OnceCallback.130"* %13, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %69) #10
  %70 = load i8, i8* %42, align 8, !range !2
  %71 = icmp eq i8 %70, 0
  br i1 %71, label %79, label %72

72:                                               ; preds = %64
  %73 = getelementptr inbounds %"class.absl::optional.131", %"class.absl::optional.131"* %14, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %74 = load i8*, i8** %73, align 8
  %75 = icmp eq i8* %74, null
  br i1 %75, label %78, label %76

76:                                               ; preds = %72
  %77 = ptrtoint i8* %74 to i64
  store i64 %77, i64* %50, align 8
  call void @_ZdlPv(i8* nonnull %74) #9
  br label %78

78:                                               ; preds = %76, %72
  store i8 0, i8* %42, align 8
  br label %79

79:                                               ; preds = %64, %78
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %42) #10
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %41) #10
  br label %366

80:                                               ; preds = %3
  %81 = getelementptr inbounds %"class.device::VirtualU2fDevice", %"class.device::VirtualU2fDevice"* %0, i64 0, i32 0, i32 2, i32 0
  %82 = load %"class.device::VirtualFidoDevice::State"*, %"class.device::VirtualFidoDevice::State"** %81, align 8
  %83 = getelementptr inbounds %"class.device::VirtualFidoDevice::State", %"class.device::VirtualFidoDevice::State"* %82, i64 0, i32 6
  %84 = load i8, i8* %83, align 8, !range !2
  %85 = icmp eq i8 %84, 0
  br i1 %85, label %141, label %86

86:                                               ; preds = %80
  %87 = call i8* @_Znwm(i64 3) #9
  %88 = ptrtoint i8* %87 to i64
  %89 = getelementptr inbounds i8, i8* %87, i64 3
  %90 = ptrtoint i8* %89 to i64
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %87, i8* align 1 getelementptr inbounds ([3 x i8], [3 x i8]* @.ref.tmp.2, i64 0, i64 0), i64 3, i1 false) #10
  %91 = bitcast %"class.std::__1::vector.109"* %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %91) #10
  %92 = getelementptr inbounds %"class.std::__1::vector.109", %"class.std::__1::vector.109"* %15, i64 0, i32 0, i32 0
  %93 = getelementptr inbounds %"class.std::__1::vector.109", %"class.std::__1::vector.109"* %15, i64 0, i32 0, i32 1
  %94 = getelementptr inbounds %"class.std::__1::vector.109", %"class.std::__1::vector.109"* %15, i64 0, i32 0, i32 2, i32 0, i32 0
  %95 = bitcast %"class.apdu::ApduResponse"* %16 to i8*
  %96 = bitcast %"class.std::__1::vector.109"* %15 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %96, i8 -86, i64 24, i1 false)
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %95) #10
  %97 = bitcast %"class.std::__1::vector.109"* %17 to i64*
  store i64 %88, i64* %97, align 8
  %98 = getelementptr inbounds %"class.std::__1::vector.109", %"class.std::__1::vector.109"* %17, i64 0, i32 0, i32 1
  %99 = bitcast i8** %98 to i64*
  store i64 %90, i64* %99, align 8
  %100 = getelementptr inbounds %"class.std::__1::vector.109", %"class.std::__1::vector.109"* %17, i64 0, i32 0, i32 2, i32 0, i32 0
  %101 = bitcast i8** %100 to i64*
  store i64 %90, i64* %101, align 8
  call void @_ZN4apdu12ApduResponseC1ENSt3__16vectorIhNS1_9allocatorIhEEEENS0_6StatusE(%"class.apdu::ApduResponse"* nonnull %16, %"class.std::__1::vector.109"* nonnull %17, i16 zeroext -28672) #10
  call void @_ZNK4apdu12ApduResponse18GetEncodedResponseEv(%"class.std::__1::vector.109"* nonnull sret %15, %"class.apdu::ApduResponse"* nonnull %16) #10
  call void @_ZN4apdu12ApduResponseD1Ev(%"class.apdu::ApduResponse"* nonnull %16) #10
  %102 = getelementptr inbounds %"class.std::__1::vector.109", %"class.std::__1::vector.109"* %17, i64 0, i32 0, i32 0
  %103 = load i8*, i8** %102, align 8
  %104 = icmp eq i8* %103, null
  br i1 %104, label %107, label %105

105:                                              ; preds = %86
  %106 = ptrtoint i8* %103 to i64
  store i64 %106, i64* %99, align 8
  call void @_ZdlPv(i8* nonnull %103) #9
  br label %107

107:                                              ; preds = %86, %105
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %95) #10
  %108 = call dereferenceable(8) %class.scoped_refptr.128* @_ZN4base22ThreadTaskRunnerHandle3GetEv() #10
  %109 = bitcast %class.scoped_refptr.128* %108 to %"class.base::TaskRunner"**
  %110 = load %"class.base::TaskRunner"*, %"class.base::TaskRunner"** %109, align 8
  %111 = bitcast %"class.base::Location"* %18 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %111) #10
  call void @_ZN4base8Location7CurrentEPKcS2_i(%"class.base::Location"* nonnull sret %18, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.1, i64 0, i64 0), i32 92) #10
  %112 = call i8* @_Znwm(i64 64) #9
  %113 = bitcast i8* %112 to %"class.base::internal::BindStateBase"*
  call void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_EPFbS5_NS1_21CancellationQueryModeEE(%"class.base::internal::BindStateBase"* nonnull %113, void ()* bitcast (void (%"class.base::internal::BindStateBase"*)* @_ZN4base8internal7InvokerINS0_9BindStateINS_12OnceCallbackIFvN4absl8optionalINSt3__16vectorIhNS6_9allocatorIhEEEEEEEEEJSA_EEEFvvEE7RunOnceEPNS0_13BindStateBaseE to void ()*), void (%"class.base::internal::BindStateBase"*)* nonnull @_ZN4base8internal9BindStateINS_12OnceCallbackIFvN4absl8optionalINSt3__16vectorIhNS5_9allocatorIhEEEEEEEEEJS9_EE7DestroyEPKNS0_13BindStateBaseE, i1 (%"class.base::internal::BindStateBase"*, i32)* nonnull @_ZN4base8internal23QueryCancellationTraitsINS0_9BindStateINS_12OnceCallbackIFvN4absl8optionalINSt3__16vectorIhNS6_9allocatorIhEEEEEEEEEJSA_EEEEEbPKNS0_13BindStateBaseENSF_21CancellationQueryModeE) #10
  %114 = getelementptr inbounds i8, i8* %112, i64 32
  %115 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %2, i64 0, i32 0, i32 0, i32 0
  %116 = bitcast %"class.base::OnceCallback"* %2 to i64*
  %117 = load i64, i64* %116, align 8
  %118 = bitcast i8* %114 to i64*
  store i64 %117, i64* %118, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %115, align 8
  %119 = getelementptr inbounds i8, i8* %112, i64 40
  %120 = bitcast i8** %93 to i64*
  %121 = bitcast %"class.std::__1::vector.109"* %15 to <2 x i64>*
  %122 = load <2 x i64>, <2 x i64>* %121, align 16
  %123 = bitcast i8* %119 to <2 x i64>*
  store <2 x i64> %122, <2 x i64>* %123, align 8
  %124 = bitcast i8** %94 to i64*
  %125 = load i64, i64* %124, align 16
  %126 = getelementptr inbounds i8, i8* %112, i64 56
  %127 = bitcast i8* %126 to i64*
  store i64 %125, i64* %127, align 8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %91, i8 0, i64 24, i1 false) #10
  %128 = icmp eq i64 %117, 0
  br i1 %128, label %129, label %132

129:                                              ; preds = %107
  %130 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %130) #10
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.11, i64 0, i64 0), i32 896, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.12, i64 0, i64 0)) #10
  %131 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #10
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %130) #10
  br label %132

132:                                              ; preds = %107, %129
  %133 = bitcast %"class.base::OnceCallback.130"* %19 to i8**
  store i8* %112, i8** %133, align 8, !alias.scope !11
  %134 = call zeroext i1 @_ZN4base10TaskRunner8PostTaskERKNS_8LocationENS_12OnceCallbackIFvvEEE(%"class.base::TaskRunner"* %110, %"class.base::Location"* nonnull dereferenceable(32) %18, %"class.base::OnceCallback.130"* nonnull %19) #10
  %135 = getelementptr inbounds %"class.base::OnceCallback.130", %"class.base::OnceCallback.130"* %19, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %135) #10
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %111) #10
  %136 = load i8*, i8** %92, align 16
  %137 = icmp eq i8* %136, null
  br i1 %137, label %140, label %138

138:                                              ; preds = %132
  %139 = ptrtoint i8* %136 to i64
  store i64 %139, i64* %120, align 8
  call void @_ZdlPv(i8* nonnull %136) #9
  br label %140

140:                                              ; preds = %138, %132
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %91) #10
  br label %366

141:                                              ; preds = %80
  %142 = getelementptr inbounds %"class.absl::optional.131", %"class.absl::optional.131"* %20, i64 0, i32 0, i32 0, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %142) #10
  %143 = bitcast %"class.absl::optional.131"* %20 to i64*
  store i64 -6148914691236517206, i64* %143, align 8
  store i8 0, i8* %142, align 8
  %144 = getelementptr inbounds %"class.absl::optional.131", %"class.absl::optional.131"* %20, i64 0, i32 0, i32 0, i32 0, i32 1
  %145 = bitcast %union.anon.135* %144 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %145, i8 0, i64 24, i1 false) #10
  %146 = getelementptr inbounds %"class.absl::optional.123", %"class.absl::optional.123"* %11, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 1
  %147 = load i8, i8* %146, align 1
  switch i8 %147, label %297 [
    i8 3, label %341
    i8 1, label %148
    i8 2, label %220
  ]

148:                                              ; preds = %141
  %149 = getelementptr inbounds %"class.absl::optional.131", %"class.absl::optional.131"* %21, i64 0, i32 0, i32 0, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %149) #10
  %150 = getelementptr inbounds %"class.absl::optional.123", %"class.absl::optional.123"* %11, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 2
  %151 = load i8, i8* %150, align 2
  %152 = getelementptr inbounds %"class.absl::optional.123", %"class.absl::optional.123"* %11, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 5
  %153 = bitcast %"class.std::__1::vector.109"* %152 to i64*
  %154 = load i64, i64* %153, align 8
  %155 = getelementptr inbounds %"class.absl::optional.123", %"class.absl::optional.123"* %11, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 5, i32 0, i32 1
  %156 = bitcast i8** %155 to i64*
  %157 = load i64, i64* %156, align 8
  %158 = sub i64 %157, %154
  %159 = getelementptr inbounds %"class.base::span", %"class.base::span"* %22, i64 0, i32 0, i32 0
  store i64 %158, i64* %159, align 8
  %160 = getelementptr inbounds %"class.base::span", %"class.base::span"* %22, i64 0, i32 1
  %161 = bitcast i8** %160 to i64*
  store i64 %154, i64* %161, align 8
  call void @_ZN6device16VirtualU2fDevice10DoRegisterEhhhN4base4spanIKhLm18446744073709551615EEE(%"class.absl::optional.131"* nonnull sret %21, %"class.device::VirtualU2fDevice"* %0, i8 zeroext undef, i8 zeroext %151, i8 zeroext undef, %"class.base::span"* nonnull byval(%"class.base::span") align 8 %22)
  %162 = load i8, i8* %149, align 8, !range !2
  %163 = icmp eq i8 %162, 0
  br i1 %163, label %198, label %164

164:                                              ; preds = %148
  %165 = getelementptr inbounds %"class.absl::optional.131", %"class.absl::optional.131"* %21, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  %166 = load i8, i8* %142, align 8, !range !2
  %167 = icmp eq i8 %166, 0
  %168 = getelementptr inbounds %"class.absl::optional.131", %"class.absl::optional.131"* %20, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  br i1 %167, label %188, label %169

169:                                              ; preds = %164
  %170 = getelementptr inbounds %"class.std::__1::vector.109", %"class.std::__1::vector.109"* %168, i64 0, i32 0, i32 0
  %171 = load i8*, i8** %170, align 8
  %172 = icmp eq i8* %171, null
  br i1 %172, label %178, label %173

173:                                              ; preds = %169
  %174 = ptrtoint i8* %171 to i64
  %175 = getelementptr inbounds %"class.absl::optional.131", %"class.absl::optional.131"* %20, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 1
  %176 = bitcast i8** %175 to i64*
  store i64 %174, i64* %176, align 8
  call void @_ZdlPv(i8* nonnull %171) #9
  %177 = bitcast %"class.std::__1::vector.109"* %168 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %177, i8 0, i64 24, i1 false) #10
  br label %178

178:                                              ; preds = %169, %173
  %179 = bitcast %"class.std::__1::vector.109"* %165 to <2 x i64>*
  %180 = load <2 x i64>, <2 x i64>* %179, align 8
  %181 = bitcast %"class.std::__1::vector.109"* %168 to <2 x i64>*
  store <2 x i64> %180, <2 x i64>* %181, align 8
  %182 = getelementptr inbounds %"class.absl::optional.131", %"class.absl::optional.131"* %21, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 2, i32 0, i32 0
  %183 = bitcast i8** %182 to i64*
  %184 = load i64, i64* %183, align 8
  %185 = getelementptr inbounds %"class.absl::optional.131", %"class.absl::optional.131"* %20, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 2, i32 0, i32 0
  %186 = bitcast i8** %185 to i64*
  store i64 %184, i64* %186, align 8
  %187 = bitcast %"class.std::__1::vector.109"* %165 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %187, i8 0, i64 24, i1 false) #10
  br label %209

188:                                              ; preds = %164
  %189 = bitcast %"class.std::__1::vector.109"* %165 to <2 x i64>*
  %190 = load <2 x i64>, <2 x i64>* %189, align 8
  %191 = bitcast %"class.std::__1::vector.109"* %168 to <2 x i64>*
  store <2 x i64> %190, <2 x i64>* %191, align 8
  %192 = getelementptr inbounds %"class.absl::optional.131", %"class.absl::optional.131"* %21, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 2, i32 0, i32 0
  %193 = bitcast i8** %192 to i64*
  %194 = load i64, i64* %193, align 8
  %195 = getelementptr inbounds %"class.absl::optional.131", %"class.absl::optional.131"* %20, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 2, i32 0, i32 0
  %196 = bitcast i8** %195 to i64*
  store i64 %194, i64* %196, align 8
  %197 = bitcast %"class.std::__1::vector.109"* %165 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %197, i8 0, i64 24, i1 false) #10
  store i8 1, i8* %142, align 8
  br label %209

198:                                              ; preds = %148
  %199 = load i8, i8* %142, align 8, !range !2
  %200 = icmp eq i8 %199, 0
  br i1 %200, label %219, label %201

201:                                              ; preds = %198
  %202 = getelementptr inbounds %"class.absl::optional.131", %"class.absl::optional.131"* %20, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %203 = load i8*, i8** %202, align 8
  %204 = icmp eq i8* %203, null
  br i1 %204, label %217, label %205

205:                                              ; preds = %201
  %206 = ptrtoint i8* %203 to i64
  %207 = getelementptr inbounds %"class.absl::optional.131", %"class.absl::optional.131"* %20, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 1
  %208 = bitcast i8** %207 to i64*
  store i64 %206, i64* %208, align 8
  call void @_ZdlPv(i8* nonnull %203) #9
  br label %217

209:                                              ; preds = %188, %178
  %210 = getelementptr inbounds %"class.absl::optional.131", %"class.absl::optional.131"* %21, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %211 = load i8*, i8** %210, align 8
  %212 = icmp eq i8* %211, null
  br i1 %212, label %217, label %213

213:                                              ; preds = %209
  %214 = ptrtoint i8* %211 to i64
  %215 = getelementptr inbounds %"class.absl::optional.131", %"class.absl::optional.131"* %21, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 1
  %216 = bitcast i8** %215 to i64*
  store i64 %214, i64* %216, align 8
  call void @_ZdlPv(i8* nonnull %211) #9
  br label %217

217:                                              ; preds = %209, %213, %201, %205
  %218 = phi i8* [ %142, %205 ], [ %142, %201 ], [ %149, %213 ], [ %149, %209 ]
  store i8 0, i8* %218, align 8
  br label %219

219:                                              ; preds = %217, %198
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %149) #10
  br label %341

220:                                              ; preds = %141
  %221 = getelementptr inbounds %"class.absl::optional.131", %"class.absl::optional.131"* %23, i64 0, i32 0, i32 0, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %221) #10
  %222 = getelementptr inbounds %"class.absl::optional.123", %"class.absl::optional.123"* %11, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 2
  %223 = load i8, i8* %222, align 2
  %224 = getelementptr inbounds %"class.absl::optional.123", %"class.absl::optional.123"* %11, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 3
  %225 = load i8, i8* %224, align 1
  %226 = getelementptr inbounds %"class.absl::optional.123", %"class.absl::optional.123"* %11, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 5
  %227 = bitcast %"class.std::__1::vector.109"* %226 to i64*
  %228 = load i64, i64* %227, align 8
  %229 = getelementptr inbounds %"class.absl::optional.123", %"class.absl::optional.123"* %11, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 5, i32 0, i32 1
  %230 = bitcast i8** %229 to i64*
  %231 = load i64, i64* %230, align 8
  %232 = sub i64 %231, %228
  %233 = getelementptr inbounds %"class.base::span", %"class.base::span"* %24, i64 0, i32 0, i32 0
  store i64 %232, i64* %233, align 8
  %234 = getelementptr inbounds %"class.base::span", %"class.base::span"* %24, i64 0, i32 1
  %235 = bitcast i8** %234 to i64*
  store i64 %228, i64* %235, align 8
  call void @_ZN6device16VirtualU2fDevice6DoSignEhhhN4base4spanIKhLm18446744073709551615EEE(%"class.absl::optional.131"* nonnull sret %23, %"class.device::VirtualU2fDevice"* %0, i8 zeroext undef, i8 zeroext %223, i8 zeroext %225, %"class.base::span"* nonnull byval(%"class.base::span") align 8 %24)
  %236 = load i8, i8* %221, align 8, !range !2
  %237 = icmp eq i8 %236, 0
  br i1 %237, label %272, label %238

238:                                              ; preds = %220
  %239 = getelementptr inbounds %"class.absl::optional.131", %"class.absl::optional.131"* %23, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  %240 = load i8, i8* %142, align 8, !range !2
  %241 = icmp eq i8 %240, 0
  %242 = getelementptr inbounds %"class.absl::optional.131", %"class.absl::optional.131"* %20, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  br i1 %241, label %262, label %243

243:                                              ; preds = %238
  %244 = getelementptr inbounds %"class.std::__1::vector.109", %"class.std::__1::vector.109"* %242, i64 0, i32 0, i32 0
  %245 = load i8*, i8** %244, align 8
  %246 = icmp eq i8* %245, null
  br i1 %246, label %252, label %247

247:                                              ; preds = %243
  %248 = ptrtoint i8* %245 to i64
  %249 = getelementptr inbounds %"class.absl::optional.131", %"class.absl::optional.131"* %20, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 1
  %250 = bitcast i8** %249 to i64*
  store i64 %248, i64* %250, align 8
  call void @_ZdlPv(i8* nonnull %245) #9
  %251 = bitcast %"class.std::__1::vector.109"* %242 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %251, i8 0, i64 24, i1 false) #10
  br label %252

252:                                              ; preds = %243, %247
  %253 = bitcast %"class.std::__1::vector.109"* %239 to <2 x i64>*
  %254 = load <2 x i64>, <2 x i64>* %253, align 8
  %255 = bitcast %"class.std::__1::vector.109"* %242 to <2 x i64>*
  store <2 x i64> %254, <2 x i64>* %255, align 8
  %256 = getelementptr inbounds %"class.absl::optional.131", %"class.absl::optional.131"* %23, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 2, i32 0, i32 0
  %257 = bitcast i8** %256 to i64*
  %258 = load i64, i64* %257, align 8
  %259 = getelementptr inbounds %"class.absl::optional.131", %"class.absl::optional.131"* %20, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 2, i32 0, i32 0
  %260 = bitcast i8** %259 to i64*
  store i64 %258, i64* %260, align 8
  %261 = bitcast %"class.std::__1::vector.109"* %239 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %261, i8 0, i64 24, i1 false) #10
  br label %284

262:                                              ; preds = %238
  %263 = bitcast %"class.std::__1::vector.109"* %239 to <2 x i64>*
  %264 = load <2 x i64>, <2 x i64>* %263, align 8
  %265 = bitcast %"class.std::__1::vector.109"* %242 to <2 x i64>*
  store <2 x i64> %264, <2 x i64>* %265, align 8
  %266 = getelementptr inbounds %"class.absl::optional.131", %"class.absl::optional.131"* %23, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 2, i32 0, i32 0
  %267 = bitcast i8** %266 to i64*
  %268 = load i64, i64* %267, align 8
  %269 = getelementptr inbounds %"class.absl::optional.131", %"class.absl::optional.131"* %20, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 2, i32 0, i32 0
  %270 = bitcast i8** %269 to i64*
  store i64 %268, i64* %270, align 8
  %271 = bitcast %"class.std::__1::vector.109"* %239 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %271, i8 0, i64 24, i1 false) #10
  store i8 1, i8* %142, align 8
  br label %284

272:                                              ; preds = %220
  %273 = load i8, i8* %142, align 8, !range !2
  %274 = icmp eq i8 %273, 0
  br i1 %274, label %296, label %275

275:                                              ; preds = %272
  %276 = getelementptr inbounds %"class.absl::optional.131", %"class.absl::optional.131"* %20, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %277 = load i8*, i8** %276, align 8
  %278 = icmp eq i8* %277, null
  br i1 %278, label %283, label %279

279:                                              ; preds = %275
  %280 = ptrtoint i8* %277 to i64
  %281 = getelementptr inbounds %"class.absl::optional.131", %"class.absl::optional.131"* %20, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 1
  %282 = bitcast i8** %281 to i64*
  store i64 %280, i64* %282, align 8
  call void @_ZdlPv(i8* nonnull %277) #9
  br label %283

283:                                              ; preds = %279, %275
  store i8 0, i8* %142, align 8
  br label %284

284:                                              ; preds = %252, %262, %283
  %285 = load i8, i8* %221, align 8
  %286 = icmp eq i8 %285, 0
  br i1 %286, label %296, label %287

287:                                              ; preds = %284
  %288 = getelementptr inbounds %"class.absl::optional.131", %"class.absl::optional.131"* %23, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %289 = load i8*, i8** %288, align 8
  %290 = icmp eq i8* %289, null
  br i1 %290, label %295, label %291

291:                                              ; preds = %287
  %292 = ptrtoint i8* %289 to i64
  %293 = getelementptr inbounds %"class.absl::optional.131", %"class.absl::optional.131"* %23, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 1
  %294 = bitcast i8** %293 to i64*
  store i64 %292, i64* %294, align 8
  call void @_ZdlPv(i8* nonnull %289) #9
  br label %295

295:                                              ; preds = %291, %287
  store i8 0, i8* %221, align 8
  br label %296

296:                                              ; preds = %272, %284, %295
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %221) #10
  br label %341

297:                                              ; preds = %141
  %298 = bitcast %"class.std::__1::vector.109"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %298)
  %299 = bitcast %"class.std::__1::vector.109"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %299) #10, !noalias !16
  %300 = bitcast %"class.apdu::ApduResponse"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %300) #10, !noalias !16
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %298, i8 0, i64 24, i1 false) #10, !noalias !16
  call void @_ZN4apdu12ApduResponseC1ENSt3__16vectorIhNS1_9allocatorIhEEEENS0_6StatusE(%"class.apdu::ApduResponse"* nonnull %6, %"class.std::__1::vector.109"* nonnull %7, i16 zeroext 27904) #10, !noalias !16
  call void @_ZNK4apdu12ApduResponse18GetEncodedResponseEv(%"class.std::__1::vector.109"* nonnull sret %5, %"class.apdu::ApduResponse"* nonnull %6) #10, !noalias !16
  %301 = bitcast %"class.std::__1::vector.109"* %5 to i64*
  %302 = load i64, i64* %301, align 8, !noalias !16
  %303 = getelementptr inbounds %"class.std::__1::vector.109", %"class.std::__1::vector.109"* %5, i64 0, i32 0, i32 1
  %304 = bitcast i8** %303 to i64*
  %305 = load i64, i64* %304, align 8, !noalias !16
  %306 = getelementptr inbounds %"class.std::__1::vector.109", %"class.std::__1::vector.109"* %5, i64 0, i32 0, i32 2, i32 0, i32 0
  %307 = bitcast i8** %306 to i64*
  %308 = load i64, i64* %307, align 8, !noalias !16
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %299, i8 0, i64 24, i1 false) #10, !noalias !16
  call void @_ZN4apdu12ApduResponseD1Ev(%"class.apdu::ApduResponse"* nonnull %6) #10, !noalias !16
  %309 = getelementptr inbounds %"class.std::__1::vector.109", %"class.std::__1::vector.109"* %7, i64 0, i32 0, i32 0
  %310 = load i8*, i8** %309, align 8, !noalias !16
  %311 = icmp eq i8* %310, null
  br i1 %311, label %316, label %312

312:                                              ; preds = %297
  %313 = ptrtoint i8* %310 to i64
  %314 = getelementptr inbounds %"class.std::__1::vector.109", %"class.std::__1::vector.109"* %7, i64 0, i32 0, i32 1
  %315 = bitcast i8** %314 to i64*
  store i64 %313, i64* %315, align 8, !noalias !16
  call void @_ZdlPv(i8* nonnull %310) #9, !noalias !16
  br label %316

316:                                              ; preds = %312, %297
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %300) #10, !noalias !16
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %299) #10, !noalias !16
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %298)
  %317 = load i8, i8* %142, align 8, !range !2
  %318 = icmp eq i8 %317, 0
  %319 = getelementptr inbounds %"class.absl::optional.131", %"class.absl::optional.131"* %20, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  br i1 %318, label %335, label %320

320:                                              ; preds = %316
  %321 = getelementptr inbounds %"class.std::__1::vector.109", %"class.std::__1::vector.109"* %319, i64 0, i32 0, i32 0
  %322 = load i8*, i8** %321, align 8
  %323 = icmp eq i8* %322, null
  br i1 %323, label %329, label %324

324:                                              ; preds = %320
  %325 = ptrtoint i8* %322 to i64
  %326 = getelementptr inbounds %"class.absl::optional.131", %"class.absl::optional.131"* %20, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 1
  %327 = bitcast i8** %326 to i64*
  store i64 %325, i64* %327, align 8
  call void @_ZdlPv(i8* nonnull %322) #9
  %328 = bitcast %"class.std::__1::vector.109"* %319 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %328, i8 0, i64 24, i1 false) #10
  br label %329

329:                                              ; preds = %320, %324
  %330 = bitcast %"class.std::__1::vector.109"* %319 to i64*
  store i64 %302, i64* %330, align 8
  %331 = getelementptr inbounds %"class.absl::optional.131", %"class.absl::optional.131"* %20, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 1
  %332 = bitcast i8** %331 to i64*
  store i64 %305, i64* %332, align 8
  %333 = getelementptr inbounds %"class.absl::optional.131", %"class.absl::optional.131"* %20, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 2, i32 0, i32 0
  %334 = bitcast i8** %333 to i64*
  store i64 %308, i64* %334, align 8
  br label %341

335:                                              ; preds = %316
  %336 = bitcast %"class.std::__1::vector.109"* %319 to i64*
  store i64 %302, i64* %336, align 8
  %337 = getelementptr inbounds %"class.absl::optional.131", %"class.absl::optional.131"* %20, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 1
  %338 = bitcast i8** %337 to i64*
  store i64 %305, i64* %338, align 8
  %339 = getelementptr inbounds %"class.absl::optional.131", %"class.absl::optional.131"* %20, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 2, i32 0, i32 0
  %340 = bitcast i8** %339 to i64*
  store i64 %308, i64* %340, align 8
  store i8 1, i8* %142, align 8
  br label %344

341:                                              ; preds = %329, %296, %219, %141
  %342 = load i8, i8* %142, align 8
  %343 = icmp eq i8 %342, 0
  br i1 %343, label %365, label %344

344:                                              ; preds = %341, %335
  %345 = call dereferenceable(8) %class.scoped_refptr.128* @_ZN4base22ThreadTaskRunnerHandle3GetEv() #10
  %346 = bitcast %class.scoped_refptr.128* %345 to %"class.base::TaskRunner"**
  %347 = load %"class.base::TaskRunner"*, %"class.base::TaskRunner"** %346, align 8
  %348 = bitcast %"class.base::Location"* %25 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %348) #10
  call void @_ZN4base8Location7CurrentEPKcS2_i(%"class.base::Location"* nonnull sret %25, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.1, i64 0, i64 0), i32 119) #10
  %349 = call %"struct.base::internal::BindState"* @_ZN4base8internal9BindStateINS_12OnceCallbackIFvN4absl8optionalINSt3__16vectorIhNS5_9allocatorIhEEEEEEEEEJSA_EE6CreateISC_JSA_EEEPSD_PFvvEOT_DpOT0_(void ()* bitcast (void (%"class.base::internal::BindStateBase"*)* @_ZN4base8internal7InvokerINS0_9BindStateINS_12OnceCallbackIFvN4absl8optionalINSt3__16vectorIhNS6_9allocatorIhEEEEEEEEEJSB_EEEFvvEE7RunOnceEPNS0_13BindStateBaseE to void ()*), %"class.base::OnceCallback"* dereferenceable(8) %2, %"class.absl::optional.131"* nonnull dereferenceable(32) %20) #10, !noalias !19
  %350 = getelementptr inbounds %"struct.base::internal::BindState", %"struct.base::internal::BindState"* %349, i64 0, i32 0
  %351 = getelementptr inbounds %"class.base::OnceCallback.130", %"class.base::OnceCallback.130"* %26, i64 0, i32 0, i32 0, i32 0
  store %"class.base::internal::BindStateBase"* %350, %"class.base::internal::BindStateBase"** %351, align 8, !alias.scope !19
  %352 = call zeroext i1 @_ZN4base10TaskRunner8PostTaskERKNS_8LocationENS_12OnceCallbackIFvvEEE(%"class.base::TaskRunner"* %347, %"class.base::Location"* nonnull dereferenceable(32) %25, %"class.base::OnceCallback.130"* nonnull %26) #10
  %353 = getelementptr inbounds %"class.base::OnceCallback.130", %"class.base::OnceCallback.130"* %26, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %353) #10
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %348) #10
  %354 = load i8, i8* %142, align 8, !range !2
  %355 = icmp eq i8 %354, 0
  br i1 %355, label %365, label %356

356:                                              ; preds = %344
  %357 = getelementptr inbounds %"class.absl::optional.131", %"class.absl::optional.131"* %20, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %358 = load i8*, i8** %357, align 8
  %359 = icmp eq i8* %358, null
  br i1 %359, label %364, label %360

360:                                              ; preds = %356
  %361 = ptrtoint i8* %358 to i64
  %362 = getelementptr inbounds %"class.absl::optional.131", %"class.absl::optional.131"* %20, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 1
  %363 = bitcast i8** %362 to i64*
  store i64 %361, i64* %363, align 8
  call void @_ZdlPv(i8* nonnull %358) #9
  br label %364

364:                                              ; preds = %360, %356
  store i8 0, i8* %142, align 8
  br label %365

365:                                              ; preds = %341, %344, %364
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %142) #10
  br label %366

366:                                              ; preds = %365, %140, %79
  %367 = load i8, i8* %27, align 8, !range !2
  %368 = icmp eq i8 %367, 0
  br i1 %368, label %371, label %369

369:                                              ; preds = %366
  %370 = getelementptr inbounds %"class.absl::optional.123", %"class.absl::optional.123"* %11, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  call void @_ZN4apdu11ApduCommandD1Ev(%"class.apdu::ApduCommand"* %370) #10
  store i8 0, i8* %27, align 8
  br label %371

371:                                              ; preds = %366, %369
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %27) #10
  ret i32 0
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

declare void @_ZN4apdu11ApduCommand17CreateFromMessageEN4base4spanIKhLm18446744073709551615EEE(%"class.absl::optional.123"* sret, i64, i8*) local_unnamed_addr #2

declare dereferenceable(8) %class.scoped_refptr.128* @_ZN4base22ThreadTaskRunnerHandle3GetEv() local_unnamed_addr #2

declare zeroext i1 @_ZN4base10TaskRunner8PostTaskERKNS_8LocationENS_12OnceCallbackIFvvEEE(%"class.base::TaskRunner"*, %"class.base::Location"* dereferenceable(32), %"class.base::OnceCallback.130"*) local_unnamed_addr #2

declare void @_ZN4base8Location7CurrentEPKcS2_i(%"class.base::Location"* sret, i8*, i8*, i32) local_unnamed_addr #2

declare void @_ZN4apdu12ApduResponseC1ENSt3__16vectorIhNS1_9allocatorIhEEEENS0_6StatusE(%"class.apdu::ApduResponse"*, %"class.std::__1::vector.109"*, i16 zeroext) unnamed_addr #2

declare void @_ZNK4apdu12ApduResponse18GetEncodedResponseEv(%"class.std::__1::vector.109"* sret, %"class.apdu::ApduResponse"*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN4apdu12ApduResponseD1Ev(%"class.apdu::ApduResponse"*) unnamed_addr #3

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6device16VirtualU2fDevice10DoRegisterEhhhN4base4spanIKhLm18446744073709551615EEE(%"class.absl::optional.131"* noalias nocapture sret, %"class.device::VirtualU2fDevice"*, i8 zeroext, i8 zeroext, i8 zeroext, %"class.base::span"* nocapture readonly byval(%"class.base::span") align 8) local_unnamed_addr #0 align 2 {
  %7 = alloca %"class.std::__1::vector.109", align 16
  %8 = alloca %"class.apdu::ApduResponse", align 8
  %9 = alloca %"class.std::__1::vector.109", align 8
  %10 = alloca %"class.std::__1::vector.109", align 16
  %11 = alloca %"class.apdu::ApduResponse", align 8
  %12 = alloca %"class.std::__1::vector.109", align 8
  %13 = alloca %"class.std::__1::vector.109", align 8
  %14 = alloca %"struct.std::__1::array.143", align 1
  %15 = alloca %"class.std::__1::vector.109", align 8
  %16 = alloca %"class.std::__1::vector.109", align 8
  %17 = alloca %"class.std::__1::vector.109", align 8
  %18 = alloca %"class.absl::optional.131", align 8
  %19 = alloca %"class.std::__1::vector.109", align 16
  %20 = alloca %"struct.device::VirtualFidoDevice::RegistrationData", align 8
  %21 = alloca %"struct.device::VirtualFidoDevice::RegistrationData", align 8
  %22 = alloca %"class.std::__1::vector.109", align 16
  %23 = alloca %"class.apdu::ApduResponse", align 8
  %24 = alloca %"class.std::__1::vector.109", align 16
  %25 = getelementptr inbounds %"class.base::span", %"class.base::span"* %5, i64 0, i32 0, i32 0
  %26 = load i64, i64* %25, align 8
  %27 = icmp eq i64 %26, 64
  br i1 %27, label %50, label %28

28:                                               ; preds = %6
  %29 = bitcast %"class.std::__1::vector.109"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %29)
  %30 = bitcast %"class.std::__1::vector.109"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %30) #10, !noalias !24
  %31 = bitcast %"class.apdu::ApduResponse"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %31) #10, !noalias !24
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %29, i8 0, i64 24, i1 false) #10, !noalias !24
  call void @_ZN4apdu12ApduResponseC1ENSt3__16vectorIhNS1_9allocatorIhEEEENS0_6StatusE(%"class.apdu::ApduResponse"* nonnull %11, %"class.std::__1::vector.109"* nonnull %12, i16 zeroext 26368) #10, !noalias !24
  call void @_ZNK4apdu12ApduResponse18GetEncodedResponseEv(%"class.std::__1::vector.109"* nonnull sret %10, %"class.apdu::ApduResponse"* nonnull %11) #10, !noalias !24
  %32 = getelementptr inbounds %"class.absl::optional.131", %"class.absl::optional.131"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  store i8 1, i8* %32, align 8, !alias.scope !24
  %33 = getelementptr inbounds %"class.absl::optional.131", %"class.absl::optional.131"* %0, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  %34 = bitcast %"class.std::__1::vector.109"* %10 to <2 x i64>*
  %35 = load <2 x i64>, <2 x i64>* %34, align 16, !noalias !24
  %36 = bitcast %"class.std::__1::vector.109"* %33 to <2 x i64>*
  store <2 x i64> %35, <2 x i64>* %36, align 8, !alias.scope !24
  %37 = getelementptr inbounds %"class.std::__1::vector.109", %"class.std::__1::vector.109"* %10, i64 0, i32 0, i32 2, i32 0, i32 0
  %38 = bitcast i8** %37 to i64*
  %39 = load i64, i64* %38, align 16, !noalias !24
  %40 = getelementptr inbounds %"class.absl::optional.131", %"class.absl::optional.131"* %0, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 2, i32 0, i32 0
  %41 = bitcast i8** %40 to i64*
  store i64 %39, i64* %41, align 8, !alias.scope !24
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %30, i8 0, i64 24, i1 false) #10, !noalias !24
  call void @_ZN4apdu12ApduResponseD1Ev(%"class.apdu::ApduResponse"* nonnull %11) #10, !noalias !24
  %42 = getelementptr inbounds %"class.std::__1::vector.109", %"class.std::__1::vector.109"* %12, i64 0, i32 0, i32 0
  %43 = load i8*, i8** %42, align 8, !noalias !24
  %44 = icmp eq i8* %43, null
  br i1 %44, label %49, label %45

45:                                               ; preds = %28
  %46 = ptrtoint i8* %43 to i64
  %47 = getelementptr inbounds %"class.std::__1::vector.109", %"class.std::__1::vector.109"* %12, i64 0, i32 0, i32 1
  %48 = bitcast i8** %47 to i64*
  store i64 %46, i64* %48, align 8, !noalias !24
  call void @_ZdlPv(i8* nonnull %43) #9, !noalias !24
  br label %49

49:                                               ; preds = %28, %45
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %31) #10, !noalias !24
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %30) #10, !noalias !24
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %29)
  br label %387

50:                                               ; preds = %6
  %51 = getelementptr inbounds %"class.device::VirtualU2fDevice", %"class.device::VirtualU2fDevice"* %1, i64 0, i32 0
  %52 = tail call zeroext i1 @_ZN6device17VirtualFidoDevice13SimulatePressEv(%"class.device::VirtualFidoDevice"* %51) #10
  br i1 %52, label %57, label %53

53:                                               ; preds = %50
  %54 = getelementptr inbounds %"class.absl::optional.131", %"class.absl::optional.131"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %54, align 8
  %55 = getelementptr inbounds %"class.absl::optional.131", %"class.absl::optional.131"* %0, i64 0, i32 0, i32 0, i32 0, i32 1
  %56 = bitcast %union.anon.135* %55 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %56, i8 0, i64 24, i1 false) #10
  br label %387

57:                                               ; preds = %50
  %58 = getelementptr inbounds %"class.base::span", %"class.base::span"* %5, i64 0, i32 1
  %59 = load i8*, i8** %58, align 8
  %60 = getelementptr inbounds i8, i8* %59, i64 32
  %61 = tail call %"class.device::VirtualFidoDevice::PrivateKey"* @_ZN6device17VirtualFidoDevice10PrivateKey12FreshP256KeyEv() #10
  %62 = bitcast %"class.std::__1::vector.109"* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %62) #10
  %63 = getelementptr inbounds %"class.std::__1::vector.109", %"class.std::__1::vector.109"* %13, i64 0, i32 0, i32 0
  %64 = getelementptr inbounds %"class.std::__1::vector.109", %"class.std::__1::vector.109"* %13, i64 0, i32 0, i32 1
  %65 = bitcast %"class.device::VirtualFidoDevice::PrivateKey"* %61 to void (%"class.std::__1::vector.109"*, %"class.device::VirtualFidoDevice::PrivateKey"*)***
  %66 = bitcast %"class.std::__1::vector.109"* %13 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %66, i8 -86, i64 24, i1 false)
  %67 = load void (%"class.std::__1::vector.109"*, %"class.device::VirtualFidoDevice::PrivateKey"*)**, void (%"class.std::__1::vector.109"*, %"class.device::VirtualFidoDevice::PrivateKey"*)*** %65, align 8
  %68 = getelementptr inbounds void (%"class.std::__1::vector.109"*, %"class.device::VirtualFidoDevice::PrivateKey"*)*, void (%"class.std::__1::vector.109"*, %"class.device::VirtualFidoDevice::PrivateKey"*)** %67, i64 3
  %69 = load void (%"class.std::__1::vector.109"*, %"class.device::VirtualFidoDevice::PrivateKey"*)*, void (%"class.std::__1::vector.109"*, %"class.device::VirtualFidoDevice::PrivateKey"*)** %68, align 8
  call void %69(%"class.std::__1::vector.109"* nonnull sret %13, %"class.device::VirtualFidoDevice::PrivateKey"* %61) #10
  %70 = getelementptr inbounds %"class.device::VirtualU2fDevice", %"class.device::VirtualU2fDevice"* %1, i64 0, i32 0, i32 2, i32 0
  %71 = load %"class.device::VirtualFidoDevice::State"*, %"class.device::VirtualFidoDevice::State"** %70, align 8
  %72 = getelementptr inbounds %"class.device::VirtualFidoDevice::State", %"class.device::VirtualFidoDevice::State"* %71, i64 0, i32 10
  %73 = load i8, i8* %72, align 4, !range !2
  %74 = icmp eq i8 %73, 0
  br i1 %74, label %75, label %78

75:                                               ; preds = %57
  %76 = bitcast %"class.std::__1::vector.109"* %13 to i64*
  %77 = load i64, i64* %76, align 8
  br label %85

78:                                               ; preds = %57
  %79 = load i8*, i8** %63, align 8
  %80 = getelementptr inbounds i8, i8* %79, i64 10
  %81 = load i8, i8* %80, align 1
  %82 = xor i8 %81, 1
  store i8 %82, i8* %80, align 1
  %83 = ptrtoint i8* %79 to i64
  %84 = bitcast %"class.std::__1::vector.109"* %13 to i64*
  br label %85

85:                                               ; preds = %75, %78
  %86 = phi i64* [ %76, %75 ], [ %84, %78 ]
  %87 = phi i64 [ %77, %75 ], [ %83, %78 ]
  %88 = getelementptr inbounds %"struct.std::__1::array.143", %"struct.std::__1::array.143"* %14, i64 0, i32 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %88) #10
  %89 = bitcast i8** %64 to i64*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 1 %88, i8 -86, i64 32, i1 false)
  %90 = load i64, i64* %89, align 8
  %91 = sub i64 %90, %87
  %92 = inttoptr i64 %87 to i8*
  call void @_ZN6crypto10SHA256HashEN4base4spanIKhLm18446744073709551615EEE(%"struct.std::__1::array.143"* nonnull sret %14, i64 %91, i8* %92) #10
  %93 = bitcast %"class.std::__1::vector.109"* %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %93) #10
  %94 = getelementptr inbounds %"class.std::__1::vector.109", %"class.std::__1::vector.109"* %15, i64 0, i32 0, i32 0
  %95 = getelementptr inbounds %"class.std::__1::vector.109", %"class.std::__1::vector.109"* %15, i64 0, i32 0, i32 1
  %96 = getelementptr inbounds %"class.std::__1::vector.109", %"class.std::__1::vector.109"* %15, i64 0, i32 0, i32 2, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %93, i8 0, i64 24, i1 false) #10
  %97 = load i64, i64* %89, align 8
  %98 = load i64, i64* %86, align 8
  %99 = sub i64 %97, %98
  %100 = add i64 %99, 97
  %101 = bitcast i8** %96 to i64*
  %102 = bitcast %"class.std::__1::vector.109"* %15 to i64*
  %103 = icmp eq i64 %100, 0
  br i1 %103, label %116, label %104

104:                                              ; preds = %85
  %105 = bitcast i8** %95 to i64*
  %106 = call i8* @_Znwm(i64 %100) #9
  %107 = ptrtoint i8* %106 to i64
  %108 = getelementptr inbounds i8, i8* %106, i64 %100
  %109 = ptrtoint i8* %108 to i64
  store i64 %107, i64* %102, align 8
  store i64 %107, i64* %105, align 8
  store i64 %109, i64* %101, align 8
  %110 = icmp sgt i64 %100, 0
  %111 = ptrtoint i8* %108 to i64
  br i1 %110, label %112, label %116

112:                                              ; preds = %104
  store i8 0, i8* %106, align 1
  %113 = getelementptr inbounds i8, i8* %106, i64 1
  %114 = ptrtoint i8* %113 to i64
  %115 = bitcast i8** %95 to i64*
  store i64 %114, i64* %115, align 8
  br label %156

116:                                              ; preds = %85, %104
  %117 = phi i64 [ %111, %104 ], [ 0, %85 ]
  %118 = phi i8* [ %106, %104 ], [ null, %85 ]
  %119 = phi i64 [ %107, %104 ], [ 0, %85 ]
  %120 = ptrtoint i8* %118 to i64
  %121 = bitcast i8** %95 to i64*
  %122 = sub i64 %120, %119
  %123 = add i64 %122, 1
  %124 = icmp slt i64 %123, 0
  br i1 %124, label %125, label %127

125:                                              ; preds = %116
  %126 = bitcast %"class.std::__1::vector.109"* %15 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %126) #11
  unreachable

127:                                              ; preds = %116
  %128 = sub i64 %117, %119
  %129 = icmp ult i64 %128, 4611686018427387903
  br i1 %129, label %130, label %135

130:                                              ; preds = %127
  %131 = shl i64 %128, 1
  %132 = icmp ult i64 %131, %123
  %133 = select i1 %132, i64 %123, i64 %131
  %134 = icmp eq i64 %133, 0
  br i1 %134, label %138, label %135

135:                                              ; preds = %130, %127
  %136 = phi i64 [ %133, %130 ], [ 9223372036854775807, %127 ]
  %137 = call i8* @_Znwm(i64 %136) #9
  br label %138

138:                                              ; preds = %135, %130
  %139 = phi i64 [ %136, %135 ], [ 0, %130 ]
  %140 = phi i8* [ %137, %135 ], [ null, %130 ]
  %141 = getelementptr inbounds i8, i8* %140, i64 %122
  %142 = getelementptr inbounds i8, i8* %140, i64 %139
  %143 = ptrtoint i8* %142 to i64
  store i8 0, i8* %141, align 1
  %144 = getelementptr inbounds i8, i8* %141, i64 1
  %145 = ptrtoint i8* %144 to i64
  %146 = ptrtoint i8* %118 to i64
  %147 = sub i64 %119, %146
  %148 = sub i64 0, %147
  %149 = getelementptr inbounds i8, i8* %141, i64 %148
  %150 = ptrtoint i8* %149 to i64
  %151 = icmp sgt i64 %147, 0
  br i1 %151, label %152, label %153

152:                                              ; preds = %138
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %149, i8* align 1 %118, i64 %147, i1 false) #10
  br label %153

153:                                              ; preds = %152, %138
  store i64 %150, i64* %102, align 8
  store i64 %145, i64* %121, align 8
  store i64 %143, i64* %101, align 8
  %154 = icmp eq i8* %118, null
  br i1 %154, label %156, label %155

155:                                              ; preds = %153
  call void @_ZdlPv(i8* nonnull %118) #9
  br label %156

156:                                              ; preds = %112, %153, %155
  call void @_ZN6device18fido_parsing_utils6AppendEPNSt3__16vectorIhNS1_9allocatorIhEEEEN4base4spanIKhLm18446744073709551615EEE(%"class.std::__1::vector.109"* nonnull %15, i64 32, i8* %60) #10
  call void @_ZN6device18fido_parsing_utils6AppendEPNSt3__16vectorIhNS1_9allocatorIhEEEEN4base4spanIKhLm18446744073709551615EEE(%"class.std::__1::vector.109"* nonnull %15, i64 32, i8* %59) #10
  call void @_ZN6device18fido_parsing_utils6AppendEPNSt3__16vectorIhNS1_9allocatorIhEEEEN4base4spanIKhLm18446744073709551615EEE(%"class.std::__1::vector.109"* nonnull %15, i64 32, i8* nonnull %88) #10
  %157 = load i64, i64* %86, align 8
  %158 = load i64, i64* %89, align 8
  %159 = sub i64 %158, %157
  %160 = inttoptr i64 %157 to i8*
  call void @_ZN6device18fido_parsing_utils6AppendEPNSt3__16vectorIhNS1_9allocatorIhEEEEN4base4spanIKhLm18446744073709551615EEE(%"class.std::__1::vector.109"* nonnull %15, i64 %159, i8* %160) #10
  %161 = bitcast %"class.std::__1::vector.109"* %16 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %161) #10
  %162 = getelementptr inbounds %"class.std::__1::vector.109", %"class.std::__1::vector.109"* %16, i64 0, i32 0, i32 0
  %163 = getelementptr inbounds %"class.std::__1::vector.109", %"class.std::__1::vector.109"* %16, i64 0, i32 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %161, i8 0, i64 24, i1 false) #10
  %164 = bitcast %"class.std::__1::vector.109"* %17 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %164) #10
  call void @_ZN6device17VirtualFidoDevice17GetAttestationKeyEv(%"class.std::__1::vector.109"* nonnull sret %17) #10
  %165 = bitcast %"class.std::__1::vector.109"* %17 to i64*
  %166 = load i64, i64* %165, align 8
  %167 = getelementptr inbounds %"class.std::__1::vector.109", %"class.std::__1::vector.109"* %17, i64 0, i32 0, i32 1
  %168 = bitcast i8** %167 to i64*
  %169 = load i64, i64* %168, align 8
  %170 = sub i64 %169, %166
  %171 = inttoptr i64 %166 to i8*
  %172 = call %"class.crypto::ECPrivateKey"* @_ZN6crypto12ECPrivateKey24CreateFromPrivateKeyInfoEN4base4spanIKhLm18446744073709551615EEE(i64 %170, i8* %171) #10
  %173 = getelementptr inbounds %"class.std::__1::vector.109", %"class.std::__1::vector.109"* %17, i64 0, i32 0, i32 0
  %174 = load i8*, i8** %173, align 8
  %175 = icmp eq i8* %174, null
  br i1 %175, label %178, label %176

176:                                              ; preds = %156
  %177 = ptrtoint i8* %174 to i64
  store i64 %177, i64* %168, align 8
  call void @_ZdlPv(i8* nonnull %174) #9
  br label %178

178:                                              ; preds = %156, %176
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %164) #10
  %179 = load i64, i64* %102, align 8
  %180 = bitcast i8** %95 to i64*
  %181 = load i64, i64* %180, align 8
  %182 = sub i64 %181, %179
  %183 = inttoptr i64 %179 to i8*
  %184 = call zeroext i1 @_ZN6device17VirtualFidoDevice4SignEPN6crypto12ECPrivateKeyEN4base4spanIKhLm18446744073709551615EEEPNSt3__16vectorIhNS8_9allocatorIhEEEE(%"class.crypto::ECPrivateKey"* %172, i64 %182, i8* %183, %"class.std::__1::vector.109"* nonnull %16) #10
  %185 = icmp slt i8 %3, 0
  %186 = getelementptr inbounds %"class.absl::optional.131", %"class.absl::optional.131"* %18, i64 0, i32 0, i32 0, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %186) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %186, i8 -86, i64 32, i1 false)
  call void @_ZNK6device17VirtualFidoDevice30GenerateAttestationCertificateEb(%"class.absl::optional.131"* nonnull sret %18, %"class.device::VirtualFidoDevice"* %51, i1 zeroext %185) #10
  %187 = load i8, i8* %186, align 8, !range !2
  %188 = icmp eq i8 %187, 0
  br i1 %188, label %189, label %211

189:                                              ; preds = %178
  %190 = bitcast %"class.std::__1::vector.109"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %190)
  %191 = bitcast %"class.std::__1::vector.109"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %191) #10, !noalias !27
  %192 = bitcast %"class.apdu::ApduResponse"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %192) #10, !noalias !27
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %190, i8 0, i64 24, i1 false) #10, !noalias !27
  call void @_ZN4apdu12ApduResponseC1ENSt3__16vectorIhNS1_9allocatorIhEEEENS0_6StatusE(%"class.apdu::ApduResponse"* nonnull %8, %"class.std::__1::vector.109"* nonnull %9, i16 zeroext 27904) #10, !noalias !27
  call void @_ZNK4apdu12ApduResponse18GetEncodedResponseEv(%"class.std::__1::vector.109"* nonnull sret %7, %"class.apdu::ApduResponse"* nonnull %8) #10, !noalias !27
  %193 = getelementptr inbounds %"class.absl::optional.131", %"class.absl::optional.131"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  store i8 1, i8* %193, align 8, !alias.scope !27
  %194 = getelementptr inbounds %"class.absl::optional.131", %"class.absl::optional.131"* %0, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  %195 = bitcast %"class.std::__1::vector.109"* %7 to <2 x i64>*
  %196 = load <2 x i64>, <2 x i64>* %195, align 16, !noalias !27
  %197 = bitcast %"class.std::__1::vector.109"* %194 to <2 x i64>*
  store <2 x i64> %196, <2 x i64>* %197, align 8, !alias.scope !27
  %198 = getelementptr inbounds %"class.std::__1::vector.109", %"class.std::__1::vector.109"* %7, i64 0, i32 0, i32 2, i32 0, i32 0
  %199 = bitcast i8** %198 to i64*
  %200 = load i64, i64* %199, align 16, !noalias !27
  %201 = getelementptr inbounds %"class.absl::optional.131", %"class.absl::optional.131"* %0, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 2, i32 0, i32 0
  %202 = bitcast i8** %201 to i64*
  store i64 %200, i64* %202, align 8, !alias.scope !27
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %191, i8 0, i64 24, i1 false) #10, !noalias !27
  call void @_ZN4apdu12ApduResponseD1Ev(%"class.apdu::ApduResponse"* nonnull %8) #10, !noalias !27
  %203 = getelementptr inbounds %"class.std::__1::vector.109", %"class.std::__1::vector.109"* %9, i64 0, i32 0, i32 0
  %204 = load i8*, i8** %203, align 8, !noalias !27
  %205 = icmp eq i8* %204, null
  br i1 %205, label %210, label %206

206:                                              ; preds = %189
  %207 = ptrtoint i8* %204 to i64
  %208 = getelementptr inbounds %"class.std::__1::vector.109", %"class.std::__1::vector.109"* %9, i64 0, i32 0, i32 1
  %209 = bitcast i8** %208 to i64*
  store i64 %207, i64* %209, align 8, !noalias !27
  call void @_ZdlPv(i8* nonnull %204) #9, !noalias !27
  br label %210

210:                                              ; preds = %189, %206
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %192) #10, !noalias !27
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %191) #10, !noalias !27
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %190)
  br label %347

211:                                              ; preds = %178
  %212 = bitcast %"class.std::__1::vector.109"* %19 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %212) #10
  %213 = getelementptr inbounds %"class.std::__1::vector.109", %"class.std::__1::vector.109"* %19, i64 0, i32 0, i32 0
  %214 = getelementptr inbounds %"class.std::__1::vector.109", %"class.std::__1::vector.109"* %19, i64 0, i32 0, i32 1
  %215 = getelementptr inbounds %"class.std::__1::vector.109", %"class.std::__1::vector.109"* %19, i64 0, i32 0, i32 2, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %212, i8 0, i64 24, i1 false) #10
  %216 = load i64, i64* %89, align 8
  %217 = load i64, i64* %86, align 8
  %218 = getelementptr inbounds %"class.absl::optional.131", %"class.absl::optional.131"* %18, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  %219 = getelementptr inbounds %"class.absl::optional.131", %"class.absl::optional.131"* %18, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 1
  %220 = bitcast i8** %219 to i64*
  %221 = load i64, i64* %220, align 8
  %222 = bitcast %"class.std::__1::vector.109"* %218 to i64*
  %223 = load i64, i64* %222, align 8
  %224 = bitcast i8** %163 to i64*
  %225 = load i64, i64* %224, align 8
  %226 = bitcast %"class.std::__1::vector.109"* %16 to i64*
  %227 = load i64, i64* %226, align 8
  %228 = sub i64 %225, %227
  %229 = add i64 %216, 34
  %230 = sub i64 %229, %217
  %231 = add i64 %230, %221
  %232 = sub i64 %231, %223
  %233 = add i64 %232, %228
  %234 = bitcast i8** %215 to i64*
  %235 = bitcast %"class.std::__1::vector.109"* %19 to i64*
  %236 = icmp eq i64 %233, 0
  br i1 %236, label %246, label %237

237:                                              ; preds = %211
  %238 = bitcast i8** %214 to i64*
  %239 = call i8* @_Znwm(i64 %233) #9
  %240 = ptrtoint i8* %239 to i64
  %241 = getelementptr inbounds i8, i8* %239, i64 %233
  %242 = ptrtoint i8* %241 to i64
  store i64 %240, i64* %235, align 16
  store i64 %240, i64* %238, align 8
  store i64 %242, i64* %234, align 16
  store i8 5, i8* %239, align 1
  %243 = getelementptr inbounds i8, i8* %239, i64 1
  %244 = ptrtoint i8* %243 to i64
  %245 = bitcast i8** %214 to i64*
  store i64 %244, i64* %245, align 8
  br label %254

246:                                              ; preds = %211
  %247 = call i8* @_Znwm(i64 1) #9
  store i8 5, i8* %247, align 1
  %248 = insertelement <2 x i8*> undef, i8* %247, i32 0
  %249 = shufflevector <2 x i8*> %248, <2 x i8*> undef, <2 x i32> zeroinitializer
  %250 = getelementptr i8, <2 x i8*> %249, <2 x i64> <i64 1, i64 1>
  %251 = ptrtoint <2 x i8*> %250 to <2 x i64>
  %252 = ptrtoint i8* %247 to i64
  store i64 %252, i64* %235, align 16
  %253 = bitcast i8** %214 to <2 x i64>*
  store <2 x i64> %251, <2 x i64>* %253, align 8
  br label %254

254:                                              ; preds = %246, %237
  %255 = sub i64 %216, %217
  %256 = inttoptr i64 %217 to i8*
  call void @_ZN6device18fido_parsing_utils6AppendEPNSt3__16vectorIhNS1_9allocatorIhEEEEN4base4spanIKhLm18446744073709551615EEE(%"class.std::__1::vector.109"* nonnull %19, i64 %255, i8* %256) #10
  %257 = load i8*, i8** %214, align 8
  %258 = load i8*, i8** %215, align 16
  %259 = icmp ult i8* %257, %258
  %260 = ptrtoint i8* %258 to i64
  br i1 %259, label %261, label %265

261:                                              ; preds = %254
  store i8 32, i8* %257, align 1
  %262 = getelementptr inbounds i8, i8* %257, i64 1
  %263 = ptrtoint i8* %262 to i64
  %264 = bitcast i8** %214 to i64*
  store i64 %263, i64* %264, align 8
  br label %300

265:                                              ; preds = %254
  %266 = ptrtoint i8* %257 to i64
  %267 = bitcast i8** %214 to i64*
  %268 = load i64, i64* %235, align 16
  %269 = sub i64 %266, %268
  %270 = add i64 %269, 1
  %271 = icmp slt i64 %270, 0
  %272 = inttoptr i64 %268 to i8*
  br i1 %271, label %273, label %275

273:                                              ; preds = %265
  %274 = bitcast %"class.std::__1::vector.109"* %19 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %274) #11
  unreachable

275:                                              ; preds = %265
  %276 = sub i64 %260, %268
  %277 = icmp ult i64 %276, 4611686018427387903
  br i1 %277, label %278, label %283

278:                                              ; preds = %275
  %279 = shl i64 %276, 1
  %280 = icmp ult i64 %279, %270
  %281 = select i1 %280, i64 %270, i64 %279
  %282 = icmp eq i64 %281, 0
  br i1 %282, label %286, label %283

283:                                              ; preds = %278, %275
  %284 = phi i64 [ %281, %278 ], [ 9223372036854775807, %275 ]
  %285 = call i8* @_Znwm(i64 %284) #9
  br label %286

286:                                              ; preds = %283, %278
  %287 = phi i64 [ %284, %283 ], [ 0, %278 ]
  %288 = phi i8* [ %285, %283 ], [ null, %278 ]
  %289 = getelementptr inbounds i8, i8* %288, i64 %269
  %290 = getelementptr inbounds i8, i8* %288, i64 %287
  %291 = ptrtoint i8* %290 to i64
  store i8 32, i8* %289, align 1
  %292 = getelementptr inbounds i8, i8* %289, i64 1
  %293 = ptrtoint i8* %292 to i64
  %294 = ptrtoint i8* %288 to i64
  %295 = icmp sgt i64 %269, 0
  br i1 %295, label %296, label %297

296:                                              ; preds = %286
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %288, i8* align 1 %272, i64 %269, i1 false) #10
  br label %297

297:                                              ; preds = %296, %286
  store i64 %294, i64* %235, align 16
  store i64 %293, i64* %267, align 8
  store i64 %291, i64* %234, align 16
  %298 = icmp eq i64 %268, 0
  br i1 %298, label %300, label %299

299:                                              ; preds = %297
  call void @_ZdlPv(i8* nonnull %272) #9
  br label %300

300:                                              ; preds = %261, %297, %299
  call void @_ZN6device18fido_parsing_utils6AppendEPNSt3__16vectorIhNS1_9allocatorIhEEEEN4base4spanIKhLm18446744073709551615EEE(%"class.std::__1::vector.109"* nonnull %19, i64 32, i8* nonnull %88) #10
  %301 = load i8, i8* %186, align 8, !range !2
  %302 = icmp eq i8 %301, 0
  br i1 %302, label %303, label %304, !prof !30

303:                                              ; preds = %300
  call void @llvm.trap() #10
  unreachable

304:                                              ; preds = %300
  %305 = load i64, i64* %222, align 8
  %306 = load i64, i64* %220, align 8
  %307 = sub i64 %306, %305
  %308 = inttoptr i64 %305 to i8*
  call void @_ZN6device18fido_parsing_utils6AppendEPNSt3__16vectorIhNS1_9allocatorIhEEEEN4base4spanIKhLm18446744073709551615EEE(%"class.std::__1::vector.109"* nonnull %19, i64 %307, i8* %308) #10
  %309 = load i64, i64* %226, align 8
  %310 = load i64, i64* %224, align 8
  %311 = sub i64 %310, %309
  %312 = inttoptr i64 %309 to i8*
  call void @_ZN6device18fido_parsing_utils6AppendEPNSt3__16vectorIhNS1_9allocatorIhEEEEN4base4spanIKhLm18446744073709551615EEE(%"class.std::__1::vector.109"* nonnull %19, i64 %311, i8* %312) #10
  %313 = bitcast %"struct.device::VirtualFidoDevice::RegistrationData"* %20 to i8*
  call void @llvm.lifetime.start.p0i8(i64 600, i8* nonnull %313) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %313, i8 -86, i64 600, i1 false)
  call void @_ZN6device17VirtualFidoDevice16RegistrationDataC1ENSt3__110unique_ptrINS0_10PrivateKeyENS2_14default_deleteIS4_EEEEN4base4spanIKhLm32EEEj(%"struct.device::VirtualFidoDevice::RegistrationData"* nonnull %20, %"class.device::VirtualFidoDevice::PrivateKey"* %61, i8* %60, i32 1) #10
  %314 = getelementptr inbounds %"struct.device::VirtualFidoDevice::RegistrationData", %"struct.device::VirtualFidoDevice::RegistrationData"* %20, i64 0, i32 4
  store i8 1, i8* %314, align 1
  call void @_ZN6device17VirtualFidoDevice16RegistrationDataC1EOS1_(%"struct.device::VirtualFidoDevice::RegistrationData"* nonnull %21, %"struct.device::VirtualFidoDevice::RegistrationData"* nonnull dereferenceable(600) %20) #10
  call void @_ZN6device17VirtualFidoDevice11StoreNewKeyEN4base4spanIKhLm18446744073709551615EEENS0_16RegistrationDataE(%"class.device::VirtualFidoDevice"* %51, i64 32, i8* nonnull %88, %"struct.device::VirtualFidoDevice::RegistrationData"* nonnull %21) #10
  call void @_ZN6device17VirtualFidoDevice16RegistrationDataD1Ev(%"struct.device::VirtualFidoDevice::RegistrationData"* nonnull %21) #10
  %315 = bitcast %"class.std::__1::vector.109"* %22 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %315) #10
  %316 = bitcast %"class.apdu::ApduResponse"* %23 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %316) #10
  %317 = bitcast i8** %214 to i64*
  %318 = bitcast %"class.std::__1::vector.109"* %19 to <2 x i64>*
  %319 = load <2 x i64>, <2 x i64>* %318, align 16
  %320 = bitcast %"class.std::__1::vector.109"* %24 to <2 x i64>*
  store <2 x i64> %319, <2 x i64>* %320, align 16
  %321 = load i64, i64* %234, align 16
  %322 = getelementptr inbounds %"class.std::__1::vector.109", %"class.std::__1::vector.109"* %24, i64 0, i32 0, i32 2, i32 0, i32 0
  %323 = bitcast i8** %322 to i64*
  store i64 %321, i64* %323, align 16
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %212, i8 0, i64 24, i1 false) #10
  call void @_ZN4apdu12ApduResponseC1ENSt3__16vectorIhNS1_9allocatorIhEEEENS0_6StatusE(%"class.apdu::ApduResponse"* nonnull %23, %"class.std::__1::vector.109"* nonnull %24, i16 zeroext -28672) #10
  call void @_ZNK4apdu12ApduResponse18GetEncodedResponseEv(%"class.std::__1::vector.109"* nonnull sret %22, %"class.apdu::ApduResponse"* nonnull %23) #10
  %324 = getelementptr inbounds %"class.absl::optional.131", %"class.absl::optional.131"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  store i8 1, i8* %324, align 8
  %325 = getelementptr inbounds %"class.absl::optional.131", %"class.absl::optional.131"* %0, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  %326 = bitcast %"class.std::__1::vector.109"* %22 to <2 x i64>*
  %327 = load <2 x i64>, <2 x i64>* %326, align 16
  %328 = bitcast %"class.std::__1::vector.109"* %325 to <2 x i64>*
  store <2 x i64> %327, <2 x i64>* %328, align 8
  %329 = getelementptr inbounds %"class.std::__1::vector.109", %"class.std::__1::vector.109"* %22, i64 0, i32 0, i32 2, i32 0, i32 0
  %330 = bitcast i8** %329 to i64*
  %331 = load i64, i64* %330, align 16
  %332 = getelementptr inbounds %"class.absl::optional.131", %"class.absl::optional.131"* %0, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 2, i32 0, i32 0
  %333 = bitcast i8** %332 to i64*
  store i64 %331, i64* %333, align 8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %315, i8 0, i64 24, i1 false) #10
  call void @_ZN4apdu12ApduResponseD1Ev(%"class.apdu::ApduResponse"* nonnull %23) #10
  %334 = getelementptr inbounds %"class.std::__1::vector.109", %"class.std::__1::vector.109"* %24, i64 0, i32 0, i32 0
  %335 = load i8*, i8** %334, align 16
  %336 = icmp eq i8* %335, null
  br i1 %336, label %341, label %337

337:                                              ; preds = %304
  %338 = getelementptr inbounds %"class.std::__1::vector.109", %"class.std::__1::vector.109"* %24, i64 0, i32 0, i32 1
  %339 = bitcast i8** %338 to i64*
  %340 = ptrtoint i8* %335 to i64
  store i64 %340, i64* %339, align 8
  call void @_ZdlPv(i8* nonnull %335) #9
  br label %341

341:                                              ; preds = %304, %337
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %316) #10
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %315) #10
  call void @_ZN6device17VirtualFidoDevice16RegistrationDataD1Ev(%"struct.device::VirtualFidoDevice::RegistrationData"* nonnull %20) #10
  call void @llvm.lifetime.end.p0i8(i64 600, i8* nonnull %313) #10
  %342 = load i8*, i8** %213, align 16
  %343 = icmp eq i8* %342, null
  br i1 %343, label %346, label %344

344:                                              ; preds = %341
  %345 = ptrtoint i8* %342 to i64
  store i64 %345, i64* %317, align 8
  call void @_ZdlPv(i8* nonnull %342) #9
  br label %346

346:                                              ; preds = %341, %344
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %212) #10
  br label %347

347:                                              ; preds = %346, %210
  %348 = phi %"class.device::VirtualFidoDevice::PrivateKey"* [ null, %346 ], [ %61, %210 ]
  %349 = load i8, i8* %186, align 8, !range !2
  %350 = icmp eq i8 %349, 0
  br i1 %350, label %360, label %351

351:                                              ; preds = %347
  %352 = getelementptr inbounds %"class.absl::optional.131", %"class.absl::optional.131"* %18, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %353 = load i8*, i8** %352, align 8
  %354 = icmp eq i8* %353, null
  br i1 %354, label %359, label %355

355:                                              ; preds = %351
  %356 = ptrtoint i8* %353 to i64
  %357 = getelementptr inbounds %"class.absl::optional.131", %"class.absl::optional.131"* %18, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 1
  %358 = bitcast i8** %357 to i64*
  store i64 %356, i64* %358, align 8
  call void @_ZdlPv(i8* nonnull %353) #9
  br label %359

359:                                              ; preds = %355, %351
  store i8 0, i8* %186, align 8
  br label %360

360:                                              ; preds = %347, %359
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %186) #10
  %361 = icmp eq %"class.crypto::ECPrivateKey"* %172, null
  br i1 %361, label %364, label %362

362:                                              ; preds = %360
  call void @_ZN6crypto12ECPrivateKeyD1Ev(%"class.crypto::ECPrivateKey"* nonnull %172) #10
  %363 = bitcast %"class.crypto::ECPrivateKey"* %172 to i8*
  call void @_ZdlPv(i8* %363) #9
  br label %364

364:                                              ; preds = %360, %362
  %365 = load i8*, i8** %162, align 8
  %366 = icmp eq i8* %365, null
  br i1 %366, label %370, label %367

367:                                              ; preds = %364
  %368 = ptrtoint i8* %365 to i64
  %369 = bitcast i8** %163 to i64*
  store i64 %368, i64* %369, align 8
  call void @_ZdlPv(i8* nonnull %365) #9
  br label %370

370:                                              ; preds = %364, %367
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %161) #10
  %371 = load i8*, i8** %94, align 8
  %372 = icmp eq i8* %371, null
  br i1 %372, label %375, label %373

373:                                              ; preds = %370
  %374 = ptrtoint i8* %371 to i64
  store i64 %374, i64* %180, align 8
  call void @_ZdlPv(i8* nonnull %371) #9
  br label %375

375:                                              ; preds = %370, %373
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %93) #10
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %88) #10
  %376 = load i8*, i8** %63, align 8
  %377 = icmp eq i8* %376, null
  br i1 %377, label %380, label %378

378:                                              ; preds = %375
  %379 = ptrtoint i8* %376 to i64
  store i64 %379, i64* %89, align 8
  call void @_ZdlPv(i8* nonnull %376) #9
  br label %380

380:                                              ; preds = %375, %378
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %62) #10
  %381 = icmp eq %"class.device::VirtualFidoDevice::PrivateKey"* %348, null
  br i1 %381, label %387, label %382

382:                                              ; preds = %380
  %383 = bitcast %"class.device::VirtualFidoDevice::PrivateKey"* %348 to void (%"class.device::VirtualFidoDevice::PrivateKey"*)***
  %384 = load void (%"class.device::VirtualFidoDevice::PrivateKey"*)**, void (%"class.device::VirtualFidoDevice::PrivateKey"*)*** %383, align 8
  %385 = getelementptr inbounds void (%"class.device::VirtualFidoDevice::PrivateKey"*)*, void (%"class.device::VirtualFidoDevice::PrivateKey"*)** %384, i64 1
  %386 = load void (%"class.device::VirtualFidoDevice::PrivateKey"*)*, void (%"class.device::VirtualFidoDevice::PrivateKey"*)** %385, align 8
  call void %386(%"class.device::VirtualFidoDevice::PrivateKey"* nonnull %348) #10
  br label %387

387:                                              ; preds = %382, %380, %53, %49
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6device16VirtualU2fDevice6DoSignEhhhN4base4spanIKhLm18446744073709551615EEE(%"class.absl::optional.131"* noalias sret, %"class.device::VirtualU2fDevice"*, i8 zeroext, i8 zeroext, i8 zeroext, %"class.base::span"* byval(%"class.base::span") align 8) local_unnamed_addr #0 align 2 {
  %7 = alloca %"class.std::__1::vector.109", align 16
  %8 = alloca %"class.apdu::ApduResponse", align 8
  %9 = alloca %"class.std::__1::vector.109", align 8
  %10 = alloca %"class.std::__1::vector.109", align 16
  %11 = alloca %"class.apdu::ApduResponse", align 8
  %12 = alloca %"class.std::__1::vector.109", align 8
  %13 = alloca %"class.logging::CheckError", align 8
  %14 = alloca %"class.std::__1::vector.109", align 16
  %15 = alloca %"class.apdu::ApduResponse", align 8
  %16 = alloca %"class.std::__1::vector.109", align 8
  %17 = alloca %"class.std::__1::vector.109", align 16
  %18 = alloca %"class.apdu::ApduResponse", align 8
  %19 = alloca %"class.std::__1::vector.109", align 8
  %20 = alloca %"class.std::__1::vector.109", align 8
  %21 = alloca %"class.std::__1::vector.109", align 8
  %22 = alloca %"class.std::__1::vector.109", align 8
  %23 = alloca %"class.std::__1::vector.109", align 16
  %24 = alloca %"class.apdu::ApduResponse", align 8
  %25 = alloca %"class.std::__1::vector.109", align 8
  switch i8 %3, label %28 [
    i8 7, label %26
    i8 3, label %26
    i8 -128, label %26
  ]

26:                                               ; preds = %6, %6, %6
  %27 = icmp eq i8 %4, 0
  br i1 %27, label %50, label %28

28:                                               ; preds = %6, %26
  %29 = bitcast %"class.std::__1::vector.109"* %19 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %29)
  %30 = bitcast %"class.std::__1::vector.109"* %17 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %30) #10, !noalias !31
  %31 = bitcast %"class.apdu::ApduResponse"* %18 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %31) #10, !noalias !31
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %29, i8 0, i64 24, i1 false) #10, !noalias !31
  call void @_ZN4apdu12ApduResponseC1ENSt3__16vectorIhNS1_9allocatorIhEEEENS0_6StatusE(%"class.apdu::ApduResponse"* nonnull %18, %"class.std::__1::vector.109"* nonnull %19, i16 zeroext 27264) #10, !noalias !31
  call void @_ZNK4apdu12ApduResponse18GetEncodedResponseEv(%"class.std::__1::vector.109"* nonnull sret %17, %"class.apdu::ApduResponse"* nonnull %18) #10, !noalias !31
  %32 = getelementptr inbounds %"class.absl::optional.131", %"class.absl::optional.131"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  store i8 1, i8* %32, align 8, !alias.scope !31
  %33 = getelementptr inbounds %"class.absl::optional.131", %"class.absl::optional.131"* %0, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  %34 = bitcast %"class.std::__1::vector.109"* %17 to <2 x i64>*
  %35 = load <2 x i64>, <2 x i64>* %34, align 16, !noalias !31
  %36 = bitcast %"class.std::__1::vector.109"* %33 to <2 x i64>*
  store <2 x i64> %35, <2 x i64>* %36, align 8, !alias.scope !31
  %37 = getelementptr inbounds %"class.std::__1::vector.109", %"class.std::__1::vector.109"* %17, i64 0, i32 0, i32 2, i32 0, i32 0
  %38 = bitcast i8** %37 to i64*
  %39 = load i64, i64* %38, align 16, !noalias !31
  %40 = getelementptr inbounds %"class.absl::optional.131", %"class.absl::optional.131"* %0, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 2, i32 0, i32 0
  %41 = bitcast i8** %40 to i64*
  store i64 %39, i64* %41, align 8, !alias.scope !31
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %30, i8 0, i64 24, i1 false) #10, !noalias !31
  call void @_ZN4apdu12ApduResponseD1Ev(%"class.apdu::ApduResponse"* nonnull %18) #10, !noalias !31
  %42 = getelementptr inbounds %"class.std::__1::vector.109", %"class.std::__1::vector.109"* %19, i64 0, i32 0, i32 0
  %43 = load i8*, i8** %42, align 8, !noalias !31
  %44 = icmp eq i8* %43, null
  br i1 %44, label %49, label %45

45:                                               ; preds = %28
  %46 = ptrtoint i8* %43 to i64
  %47 = getelementptr inbounds %"class.std::__1::vector.109", %"class.std::__1::vector.109"* %19, i64 0, i32 0, i32 1
  %48 = bitcast i8** %47 to i64*
  store i64 %46, i64* %48, align 8, !noalias !31
  call void @_ZdlPv(i8* nonnull %43) #9, !noalias !31
  br label %49

49:                                               ; preds = %28, %45
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %31) #10, !noalias !31
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %30) #10, !noalias !31
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %29)
  br label %436

50:                                               ; preds = %26
  %51 = getelementptr inbounds %"class.device::VirtualU2fDevice", %"class.device::VirtualU2fDevice"* %1, i64 0, i32 0
  %52 = tail call zeroext i1 @_ZN6device17VirtualFidoDevice13SimulatePressEv(%"class.device::VirtualFidoDevice"* %51) #10
  br i1 %52, label %57, label %53

53:                                               ; preds = %50
  %54 = getelementptr inbounds %"class.absl::optional.131", %"class.absl::optional.131"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %54, align 8
  %55 = getelementptr inbounds %"class.absl::optional.131", %"class.absl::optional.131"* %0, i64 0, i32 0, i32 0, i32 0, i32 1
  %56 = bitcast %union.anon.135* %55 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %56, i8 0, i64 24, i1 false) #10
  br label %436

57:                                               ; preds = %50
  %58 = getelementptr inbounds %"class.base::span", %"class.base::span"* %5, i64 0, i32 0, i32 0
  %59 = load i64, i64* %58, align 8
  %60 = icmp ult i64 %59, 65
  br i1 %60, label %61, label %83

61:                                               ; preds = %57
  %62 = bitcast %"class.std::__1::vector.109"* %16 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %62)
  %63 = bitcast %"class.std::__1::vector.109"* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %63) #10, !noalias !34
  %64 = bitcast %"class.apdu::ApduResponse"* %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %64) #10, !noalias !34
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %62, i8 0, i64 24, i1 false) #10, !noalias !34
  call void @_ZN4apdu12ApduResponseC1ENSt3__16vectorIhNS1_9allocatorIhEEEENS0_6StatusE(%"class.apdu::ApduResponse"* nonnull %15, %"class.std::__1::vector.109"* nonnull %16, i16 zeroext 26368) #10, !noalias !34
  call void @_ZNK4apdu12ApduResponse18GetEncodedResponseEv(%"class.std::__1::vector.109"* nonnull sret %14, %"class.apdu::ApduResponse"* nonnull %15) #10, !noalias !34
  %65 = getelementptr inbounds %"class.absl::optional.131", %"class.absl::optional.131"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  store i8 1, i8* %65, align 8, !alias.scope !34
  %66 = getelementptr inbounds %"class.absl::optional.131", %"class.absl::optional.131"* %0, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  %67 = bitcast %"class.std::__1::vector.109"* %14 to <2 x i64>*
  %68 = load <2 x i64>, <2 x i64>* %67, align 16, !noalias !34
  %69 = bitcast %"class.std::__1::vector.109"* %66 to <2 x i64>*
  store <2 x i64> %68, <2 x i64>* %69, align 8, !alias.scope !34
  %70 = getelementptr inbounds %"class.std::__1::vector.109", %"class.std::__1::vector.109"* %14, i64 0, i32 0, i32 2, i32 0, i32 0
  %71 = bitcast i8** %70 to i64*
  %72 = load i64, i64* %71, align 16, !noalias !34
  %73 = getelementptr inbounds %"class.absl::optional.131", %"class.absl::optional.131"* %0, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 2, i32 0, i32 0
  %74 = bitcast i8** %73 to i64*
  store i64 %72, i64* %74, align 8, !alias.scope !34
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %63, i8 0, i64 24, i1 false) #10, !noalias !34
  call void @_ZN4apdu12ApduResponseD1Ev(%"class.apdu::ApduResponse"* nonnull %15) #10, !noalias !34
  %75 = getelementptr inbounds %"class.std::__1::vector.109", %"class.std::__1::vector.109"* %16, i64 0, i32 0, i32 0
  %76 = load i8*, i8** %75, align 8, !noalias !34
  %77 = icmp eq i8* %76, null
  br i1 %77, label %82, label %78

78:                                               ; preds = %61
  %79 = ptrtoint i8* %76 to i64
  %80 = getelementptr inbounds %"class.std::__1::vector.109", %"class.std::__1::vector.109"* %16, i64 0, i32 0, i32 1
  %81 = bitcast i8** %80 to i64*
  store i64 %79, i64* %81, align 8, !noalias !34
  call void @_ZdlPv(i8* nonnull %76) #9, !noalias !34
  br label %82

82:                                               ; preds = %61, %78
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %64) #10, !noalias !34
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %63) #10, !noalias !34
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %62)
  br label %436

83:                                               ; preds = %57
  %84 = getelementptr inbounds %"class.base::span", %"class.base::span"* %5, i64 0, i32 1
  %85 = load i8*, i8** %84, align 8
  %86 = call i8* @_ZNK4base4spanIKhLm18446744073709551615EE7subspanILm32ELm32EEENS0_IS1_XquneT0_L_ZNS_L14dynamic_extentEET0_quneLm18446744073709551615EL_ZNS_L14dynamic_extentEEmiLm18446744073709551615ET_L_ZNS_L14dynamic_extentEEEEEv(%"class.base::span"* nonnull %5) #10
  %87 = load i64, i64* %58, align 8
  %88 = icmp ugt i64 %87, 64
  br i1 %88, label %93, label %89

89:                                               ; preds = %83
  %90 = bitcast %"class.logging::CheckError"* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %90) #10
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %13, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.3, i64 0, i64 0), i32 418, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.8, i64 0, i64 0)) #10
  %91 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %13) #10
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %13) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %90) #10
  %92 = load i64, i64* %58, align 8
  br label %93

93:                                               ; preds = %83, %89
  %94 = phi i64 [ %87, %83 ], [ %92, %89 ]
  %95 = load i8*, i8** %84, align 8
  %96 = getelementptr inbounds i8, i8* %95, i64 64
  %97 = load i8, i8* %96, align 1
  %98 = zext i8 %97 to i64
  %99 = add nuw nsw i64 %98, 65
  %100 = icmp eq i64 %94, %99
  br i1 %100, label %123, label %101

101:                                              ; preds = %93
  %102 = bitcast %"class.std::__1::vector.109"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %102)
  %103 = bitcast %"class.std::__1::vector.109"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %103) #10, !noalias !37
  %104 = bitcast %"class.apdu::ApduResponse"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %104) #10, !noalias !37
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %102, i8 0, i64 24, i1 false) #10, !noalias !37
  call void @_ZN4apdu12ApduResponseC1ENSt3__16vectorIhNS1_9allocatorIhEEEENS0_6StatusE(%"class.apdu::ApduResponse"* nonnull %11, %"class.std::__1::vector.109"* nonnull %12, i16 zeroext 26368) #10, !noalias !37
  call void @_ZNK4apdu12ApduResponse18GetEncodedResponseEv(%"class.std::__1::vector.109"* nonnull sret %10, %"class.apdu::ApduResponse"* nonnull %11) #10, !noalias !37
  %105 = getelementptr inbounds %"class.absl::optional.131", %"class.absl::optional.131"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  store i8 1, i8* %105, align 8, !alias.scope !37
  %106 = getelementptr inbounds %"class.absl::optional.131", %"class.absl::optional.131"* %0, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  %107 = bitcast %"class.std::__1::vector.109"* %10 to <2 x i64>*
  %108 = load <2 x i64>, <2 x i64>* %107, align 16, !noalias !37
  %109 = bitcast %"class.std::__1::vector.109"* %106 to <2 x i64>*
  store <2 x i64> %108, <2 x i64>* %109, align 8, !alias.scope !37
  %110 = getelementptr inbounds %"class.std::__1::vector.109", %"class.std::__1::vector.109"* %10, i64 0, i32 0, i32 2, i32 0, i32 0
  %111 = bitcast i8** %110 to i64*
  %112 = load i64, i64* %111, align 16, !noalias !37
  %113 = getelementptr inbounds %"class.absl::optional.131", %"class.absl::optional.131"* %0, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 2, i32 0, i32 0
  %114 = bitcast i8** %113 to i64*
  store i64 %112, i64* %114, align 8, !alias.scope !37
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %103, i8 0, i64 24, i1 false) #10, !noalias !37
  call void @_ZN4apdu12ApduResponseD1Ev(%"class.apdu::ApduResponse"* nonnull %11) #10, !noalias !37
  %115 = getelementptr inbounds %"class.std::__1::vector.109", %"class.std::__1::vector.109"* %12, i64 0, i32 0, i32 0
  %116 = load i8*, i8** %115, align 8, !noalias !37
  %117 = icmp eq i8* %116, null
  br i1 %117, label %122, label %118

118:                                              ; preds = %101
  %119 = ptrtoint i8* %116 to i64
  %120 = getelementptr inbounds %"class.std::__1::vector.109", %"class.std::__1::vector.109"* %12, i64 0, i32 0, i32 1
  %121 = bitcast i8** %120 to i64*
  store i64 %119, i64* %121, align 8, !noalias !37
  call void @_ZdlPv(i8* nonnull %116) #9, !noalias !37
  br label %122

122:                                              ; preds = %101, %118
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %104) #10, !noalias !37
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %103) #10, !noalias !37
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %102)
  br label %436

123:                                              ; preds = %93
  %124 = getelementptr inbounds i8, i8* %95, i64 65
  %125 = call %"struct.device::VirtualFidoDevice::RegistrationData"* @_ZN6device17VirtualFidoDevice20FindRegistrationDataEN4base4spanIKhLm18446744073709551615EEENS2_IS3_Lm32EEE(%"class.device::VirtualFidoDevice"* %51, i64 %98, i8* %124, i8* %86) #10
  %126 = icmp eq %"struct.device::VirtualFidoDevice::RegistrationData"* %125, null
  br i1 %126, label %127, label %149

127:                                              ; preds = %123
  %128 = bitcast %"class.std::__1::vector.109"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %128)
  %129 = bitcast %"class.std::__1::vector.109"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %129) #10, !noalias !40
  %130 = bitcast %"class.apdu::ApduResponse"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %130) #10, !noalias !40
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %128, i8 0, i64 24, i1 false) #10, !noalias !40
  call void @_ZN4apdu12ApduResponseC1ENSt3__16vectorIhNS1_9allocatorIhEEEENS0_6StatusE(%"class.apdu::ApduResponse"* nonnull %8, %"class.std::__1::vector.109"* nonnull %9, i16 zeroext 27264) #10, !noalias !40
  call void @_ZNK4apdu12ApduResponse18GetEncodedResponseEv(%"class.std::__1::vector.109"* nonnull sret %7, %"class.apdu::ApduResponse"* nonnull %8) #10, !noalias !40
  %131 = getelementptr inbounds %"class.absl::optional.131", %"class.absl::optional.131"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  store i8 1, i8* %131, align 8, !alias.scope !40
  %132 = getelementptr inbounds %"class.absl::optional.131", %"class.absl::optional.131"* %0, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  %133 = bitcast %"class.std::__1::vector.109"* %7 to <2 x i64>*
  %134 = load <2 x i64>, <2 x i64>* %133, align 16, !noalias !40
  %135 = bitcast %"class.std::__1::vector.109"* %132 to <2 x i64>*
  store <2 x i64> %134, <2 x i64>* %135, align 8, !alias.scope !40
  %136 = getelementptr inbounds %"class.std::__1::vector.109", %"class.std::__1::vector.109"* %7, i64 0, i32 0, i32 2, i32 0, i32 0
  %137 = bitcast i8** %136 to i64*
  %138 = load i64, i64* %137, align 16, !noalias !40
  %139 = getelementptr inbounds %"class.absl::optional.131", %"class.absl::optional.131"* %0, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 2, i32 0, i32 0
  %140 = bitcast i8** %139 to i64*
  store i64 %138, i64* %140, align 8, !alias.scope !40
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %129, i8 0, i64 24, i1 false) #10, !noalias !40
  call void @_ZN4apdu12ApduResponseD1Ev(%"class.apdu::ApduResponse"* nonnull %8) #10, !noalias !40
  %141 = getelementptr inbounds %"class.std::__1::vector.109", %"class.std::__1::vector.109"* %9, i64 0, i32 0, i32 0
  %142 = load i8*, i8** %141, align 8, !noalias !40
  %143 = icmp eq i8* %142, null
  br i1 %143, label %148, label %144

144:                                              ; preds = %127
  %145 = ptrtoint i8* %142 to i64
  %146 = getelementptr inbounds %"class.std::__1::vector.109", %"class.std::__1::vector.109"* %9, i64 0, i32 0, i32 1
  %147 = bitcast i8** %146 to i64*
  store i64 %145, i64* %147, align 8, !noalias !40
  call void @_ZdlPv(i8* nonnull %142) #9, !noalias !40
  br label %148

148:                                              ; preds = %127, %144
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %130) #10, !noalias !40
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %129) #10, !noalias !40
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %128)
  br label %436

149:                                              ; preds = %123
  %150 = getelementptr inbounds %"struct.device::VirtualFidoDevice::RegistrationData", %"struct.device::VirtualFidoDevice::RegistrationData"* %125, i64 0, i32 2
  %151 = load i32, i32* %150, align 8
  %152 = add i32 %151, 1
  store i32 %152, i32* %150, align 8
  %153 = bitcast %"class.std::__1::vector.109"* %20 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %153) #10
  %154 = getelementptr inbounds %"class.std::__1::vector.109", %"class.std::__1::vector.109"* %20, i64 0, i32 0, i32 0
  %155 = getelementptr inbounds %"class.std::__1::vector.109", %"class.std::__1::vector.109"* %20, i64 0, i32 0, i32 1
  %156 = getelementptr inbounds %"class.std::__1::vector.109", %"class.std::__1::vector.109"* %20, i64 0, i32 0, i32 2, i32 0, i32 0
  %157 = bitcast i8** %155 to i64*
  %158 = bitcast %"class.std::__1::vector.109"* %20 to i64*
  %159 = bitcast i8** %156 to i64*
  %160 = call i8* @_Znwm(i64 1) #9
  %161 = getelementptr inbounds i8, i8* %160, i64 1
  %162 = ptrtoint i8* %161 to i64
  store i8 1, i8* %160, align 1
  %163 = ptrtoint i8* %160 to i64
  store i64 %163, i64* %158, align 8
  store i64 %162, i64* %157, align 8
  store i64 %162, i64* %159, align 8
  %164 = lshr i32 %152, 24
  %165 = trunc i32 %164 to i8
  %166 = bitcast %"class.std::__1::vector.109"* %20 to i64*
  %167 = call i8* @_Znwm(i64 2) #9
  %168 = getelementptr inbounds i8, i8* %167, i64 1
  store i8 %165, i8* %168, align 1
  %169 = insertelement <2 x i8*> undef, i8* %167, i32 0
  %170 = shufflevector <2 x i8*> %169, <2 x i8*> undef, <2 x i32> zeroinitializer
  %171 = getelementptr i8, <2 x i8*> %170, <2 x i64> <i64 2, i64 2>
  %172 = ptrtoint <2 x i8*> %171 to <2 x i64>
  %173 = ptrtoint i8* %167 to i64
  %174 = load i8, i8* %160, align 1
  store i8 %174, i8* %167, align 1
  store i64 %173, i64* %166, align 8
  %175 = bitcast i8** %155 to <2 x i64>*
  store <2 x i64> %172, <2 x i64>* %175, align 8
  call void @_ZdlPv(i8* nonnull %160) #9
  %176 = load i8*, i8** %155, align 8
  %177 = ptrtoint i8* %176 to i64
  %178 = load i32, i32* %150, align 8
  %179 = lshr i32 %178, 16
  %180 = trunc i32 %179 to i8
  %181 = load i8*, i8** %156, align 8
  %182 = icmp ult i8* %176, %181
  %183 = ptrtoint i8* %181 to i64
  br i1 %182, label %184, label %188

184:                                              ; preds = %149
  store i8 %180, i8* %176, align 1
  %185 = getelementptr inbounds i8, i8* %176, i64 1
  %186 = ptrtoint i8* %185 to i64
  %187 = bitcast i8** %155 to i64*
  store i64 %186, i64* %187, align 8
  br label %230

188:                                              ; preds = %149
  %189 = ptrtoint i8* %176 to i64
  %190 = bitcast i8** %155 to i64*
  %191 = bitcast %"class.std::__1::vector.109"* %20 to i64*
  %192 = load i64, i64* %191, align 8
  %193 = sub i64 %189, %192
  %194 = add i64 %193, 1
  %195 = icmp slt i64 %194, 0
  %196 = inttoptr i64 %192 to i8*
  br i1 %195, label %197, label %199

197:                                              ; preds = %188
  %198 = bitcast %"class.std::__1::vector.109"* %20 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %198) #11
  unreachable

199:                                              ; preds = %188
  %200 = bitcast i8** %156 to i64*
  %201 = sub i64 %183, %192
  %202 = icmp ult i64 %201, 4611686018427387903
  br i1 %202, label %203, label %208

203:                                              ; preds = %199
  %204 = shl i64 %201, 1
  %205 = icmp ult i64 %204, %194
  %206 = select i1 %205, i64 %194, i64 %204
  %207 = icmp eq i64 %206, 0
  br i1 %207, label %211, label %208

208:                                              ; preds = %203, %199
  %209 = phi i64 [ %206, %203 ], [ 9223372036854775807, %199 ]
  %210 = call i8* @_Znwm(i64 %209) #9
  br label %211

211:                                              ; preds = %208, %203
  %212 = phi i64 [ %209, %208 ], [ 0, %203 ]
  %213 = phi i8* [ %210, %208 ], [ null, %203 ]
  %214 = getelementptr inbounds i8, i8* %213, i64 %193
  %215 = getelementptr inbounds i8, i8* %213, i64 %212
  %216 = ptrtoint i8* %215 to i64
  store i8 %180, i8* %214, align 1
  %217 = getelementptr inbounds i8, i8* %214, i64 1
  %218 = ptrtoint i8* %217 to i64
  %219 = sub i64 %177, %192
  %220 = sub i64 0, %219
  %221 = getelementptr inbounds i8, i8* %214, i64 %220
  %222 = ptrtoint i8* %221 to i64
  %223 = icmp sgt i64 %219, 0
  br i1 %223, label %224, label %225

224:                                              ; preds = %211
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %221, i8* align 1 %196, i64 %219, i1 false) #10
  br label %225

225:                                              ; preds = %224, %211
  store i64 %222, i64* %191, align 8
  store i64 %218, i64* %190, align 8
  store i64 %216, i64* %200, align 8
  %226 = icmp eq i64 %192, 0
  br i1 %226, label %230, label %227

227:                                              ; preds = %225
  call void @_ZdlPv(i8* nonnull %196) #9
  %228 = load i8*, i8** %155, align 8
  %229 = ptrtoint i8* %228 to i64
  br label %230

230:                                              ; preds = %184, %225, %227
  %231 = phi i64 [ %186, %184 ], [ %218, %225 ], [ %229, %227 ]
  %232 = phi i8* [ %185, %184 ], [ %217, %225 ], [ %228, %227 ]
  %233 = load i32, i32* %150, align 8
  %234 = lshr i32 %233, 8
  %235 = trunc i32 %234 to i8
  %236 = load i8*, i8** %156, align 8
  %237 = icmp ult i8* %232, %236
  %238 = ptrtoint i8* %236 to i64
  br i1 %237, label %239, label %243

239:                                              ; preds = %230
  store i8 %235, i8* %232, align 1
  %240 = getelementptr inbounds i8, i8* %232, i64 1
  %241 = ptrtoint i8* %240 to i64
  %242 = bitcast i8** %155 to i64*
  store i64 %241, i64* %242, align 8
  br label %285

243:                                              ; preds = %230
  %244 = ptrtoint i8* %232 to i64
  %245 = bitcast i8** %155 to i64*
  %246 = bitcast %"class.std::__1::vector.109"* %20 to i64*
  %247 = load i64, i64* %246, align 8
  %248 = sub i64 %244, %247
  %249 = add i64 %248, 1
  %250 = icmp slt i64 %249, 0
  %251 = inttoptr i64 %247 to i8*
  br i1 %250, label %252, label %254

252:                                              ; preds = %243
  %253 = bitcast %"class.std::__1::vector.109"* %20 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %253) #11
  unreachable

254:                                              ; preds = %243
  %255 = bitcast i8** %156 to i64*
  %256 = sub i64 %238, %247
  %257 = icmp ult i64 %256, 4611686018427387903
  br i1 %257, label %258, label %263

258:                                              ; preds = %254
  %259 = shl i64 %256, 1
  %260 = icmp ult i64 %259, %249
  %261 = select i1 %260, i64 %249, i64 %259
  %262 = icmp eq i64 %261, 0
  br i1 %262, label %266, label %263

263:                                              ; preds = %258, %254
  %264 = phi i64 [ %261, %258 ], [ 9223372036854775807, %254 ]
  %265 = call i8* @_Znwm(i64 %264) #9
  br label %266

266:                                              ; preds = %263, %258
  %267 = phi i64 [ %264, %263 ], [ 0, %258 ]
  %268 = phi i8* [ %265, %263 ], [ null, %258 ]
  %269 = getelementptr inbounds i8, i8* %268, i64 %248
  %270 = getelementptr inbounds i8, i8* %268, i64 %267
  %271 = ptrtoint i8* %270 to i64
  store i8 %235, i8* %269, align 1
  %272 = getelementptr inbounds i8, i8* %269, i64 1
  %273 = ptrtoint i8* %272 to i64
  %274 = sub i64 %231, %247
  %275 = sub i64 0, %274
  %276 = getelementptr inbounds i8, i8* %269, i64 %275
  %277 = ptrtoint i8* %276 to i64
  %278 = icmp sgt i64 %274, 0
  br i1 %278, label %279, label %280

279:                                              ; preds = %266
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %276, i8* align 1 %251, i64 %274, i1 false) #10
  br label %280

280:                                              ; preds = %279, %266
  store i64 %277, i64* %246, align 8
  store i64 %273, i64* %245, align 8
  store i64 %271, i64* %255, align 8
  %281 = icmp eq i64 %247, 0
  br i1 %281, label %285, label %282

282:                                              ; preds = %280
  call void @_ZdlPv(i8* nonnull %251) #9
  %283 = load i8*, i8** %155, align 8
  %284 = ptrtoint i8* %283 to i64
  br label %285

285:                                              ; preds = %239, %280, %282
  %286 = phi i64 [ %241, %239 ], [ %273, %280 ], [ %284, %282 ]
  %287 = phi i8* [ %240, %239 ], [ %272, %280 ], [ %283, %282 ]
  %288 = load i32, i32* %150, align 8
  %289 = trunc i32 %288 to i8
  %290 = load i8*, i8** %156, align 8
  %291 = icmp ult i8* %287, %290
  %292 = ptrtoint i8* %290 to i64
  br i1 %291, label %293, label %298

293:                                              ; preds = %285
  store i8 %289, i8* %287, align 1
  %294 = getelementptr inbounds i8, i8* %287, i64 1
  %295 = ptrtoint i8* %294 to i64
  %296 = bitcast i8** %155 to i64*
  store i64 %295, i64* %296, align 8
  %297 = bitcast %"class.std::__1::vector.109"* %20 to i64*
  br label %339

298:                                              ; preds = %285
  %299 = ptrtoint i8* %287 to i64
  %300 = bitcast i8** %155 to i64*
  %301 = bitcast %"class.std::__1::vector.109"* %20 to i64*
  %302 = load i64, i64* %301, align 8
  %303 = sub i64 %299, %302
  %304 = add i64 %303, 1
  %305 = icmp slt i64 %304, 0
  %306 = inttoptr i64 %302 to i8*
  br i1 %305, label %307, label %309

307:                                              ; preds = %298
  %308 = bitcast %"class.std::__1::vector.109"* %20 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %308) #11
  unreachable

309:                                              ; preds = %298
  %310 = bitcast i8** %156 to i64*
  %311 = sub i64 %292, %302
  %312 = icmp ult i64 %311, 4611686018427387903
  br i1 %312, label %313, label %318

313:                                              ; preds = %309
  %314 = shl i64 %311, 1
  %315 = icmp ult i64 %314, %304
  %316 = select i1 %315, i64 %304, i64 %314
  %317 = icmp eq i64 %316, 0
  br i1 %317, label %321, label %318

318:                                              ; preds = %313, %309
  %319 = phi i64 [ %316, %313 ], [ 9223372036854775807, %309 ]
  %320 = call i8* @_Znwm(i64 %319) #9
  br label %321

321:                                              ; preds = %318, %313
  %322 = phi i64 [ %319, %318 ], [ 0, %313 ]
  %323 = phi i8* [ %320, %318 ], [ null, %313 ]
  %324 = getelementptr inbounds i8, i8* %323, i64 %303
  %325 = getelementptr inbounds i8, i8* %323, i64 %322
  %326 = ptrtoint i8* %325 to i64
  store i8 %289, i8* %324, align 1
  %327 = getelementptr inbounds i8, i8* %324, i64 1
  %328 = ptrtoint i8* %327 to i64
  %329 = sub i64 %286, %302
  %330 = sub i64 0, %329
  %331 = getelementptr inbounds i8, i8* %324, i64 %330
  %332 = ptrtoint i8* %331 to i64
  %333 = icmp sgt i64 %329, 0
  br i1 %333, label %334, label %335

334:                                              ; preds = %321
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %331, i8* align 1 %306, i64 %329, i1 false) #10
  br label %335

335:                                              ; preds = %334, %321
  store i64 %332, i64* %301, align 8
  store i64 %328, i64* %300, align 8
  store i64 %326, i64* %310, align 8
  %336 = icmp eq i64 %302, 0
  br i1 %336, label %339, label %337

337:                                              ; preds = %335
  call void @_ZdlPv(i8* nonnull %306) #9
  %338 = load i64, i64* %300, align 8
  br label %339

339:                                              ; preds = %293, %335, %337
  %340 = phi i64* [ %297, %293 ], [ %301, %335 ], [ %301, %337 ]
  %341 = phi i64* [ %296, %293 ], [ %300, %335 ], [ %300, %337 ]
  %342 = phi i64 [ %295, %293 ], [ %328, %335 ], [ %338, %337 ]
  %343 = bitcast %"class.std::__1::vector.109"* %21 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %343) #10
  %344 = getelementptr inbounds %"class.std::__1::vector.109", %"class.std::__1::vector.109"* %21, i64 0, i32 0, i32 0
  %345 = getelementptr inbounds %"class.std::__1::vector.109", %"class.std::__1::vector.109"* %21, i64 0, i32 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %343, i8 0, i64 24, i1 false) #10
  %346 = load i64, i64* %340, align 8
  %347 = sub i64 %342, %346
  %348 = add i64 %347, 64
  %349 = bitcast %"class.std::__1::vector.109"* %21 to i64*
  %350 = icmp eq i64 %348, 0
  %351 = bitcast i8** %345 to i64*
  br i1 %350, label %359, label %352

352:                                              ; preds = %339
  %353 = getelementptr inbounds %"class.std::__1::vector.109", %"class.std::__1::vector.109"* %21, i64 0, i32 0, i32 2, i32 0, i32 0
  %354 = bitcast i8** %353 to i64*
  %355 = call i8* @_Znwm(i64 %348) #9
  %356 = ptrtoint i8* %355 to i64
  %357 = getelementptr inbounds i8, i8* %355, i64 %348
  %358 = ptrtoint i8* %357 to i64
  store i64 %356, i64* %349, align 8
  store i64 %356, i64* %351, align 8
  store i64 %358, i64* %354, align 8
  br label %359

359:                                              ; preds = %339, %352
  call void @_ZN6device18fido_parsing_utils6AppendEPNSt3__16vectorIhNS1_9allocatorIhEEEEN4base4spanIKhLm18446744073709551615EEE(%"class.std::__1::vector.109"* nonnull %21, i64 32, i8* %86) #10
  %360 = load i64, i64* %340, align 8
  %361 = load i64, i64* %341, align 8
  %362 = sub i64 %361, %360
  %363 = inttoptr i64 %360 to i8*
  call void @_ZN6device18fido_parsing_utils6AppendEPNSt3__16vectorIhNS1_9allocatorIhEEEEN4base4spanIKhLm18446744073709551615EEE(%"class.std::__1::vector.109"* nonnull %21, i64 %362, i8* %363) #10
  call void @_ZN6device18fido_parsing_utils6AppendEPNSt3__16vectorIhNS1_9allocatorIhEEEEN4base4spanIKhLm18446744073709551615EEE(%"class.std::__1::vector.109"* nonnull %21, i64 32, i8* %85) #10
  %364 = bitcast %"class.std::__1::vector.109"* %22 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %364) #10
  %365 = getelementptr inbounds %"class.std::__1::vector.109", %"class.std::__1::vector.109"* %22, i64 0, i32 0, i32 0
  %366 = getelementptr inbounds %"class.std::__1::vector.109", %"class.std::__1::vector.109"* %22, i64 0, i32 0, i32 1
  %367 = getelementptr inbounds %"struct.device::VirtualFidoDevice::RegistrationData", %"struct.device::VirtualFidoDevice::RegistrationData"* %125, i64 0, i32 0, i32 0, i32 0, i32 0
  %368 = bitcast %"class.std::__1::vector.109"* %22 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %368, i8 -86, i64 24, i1 false)
  %369 = load %"class.device::VirtualFidoDevice::PrivateKey"*, %"class.device::VirtualFidoDevice::PrivateKey"** %367, align 8
  %370 = load i64, i64* %349, align 8
  %371 = load i64, i64* %351, align 8
  %372 = sub i64 %371, %370
  %373 = inttoptr i64 %370 to i8*
  %374 = bitcast %"class.device::VirtualFidoDevice::PrivateKey"* %369 to void (%"class.std::__1::vector.109"*, %"class.device::VirtualFidoDevice::PrivateKey"*, i64, i8*)***
  %375 = load void (%"class.std::__1::vector.109"*, %"class.device::VirtualFidoDevice::PrivateKey"*, i64, i8*)**, void (%"class.std::__1::vector.109"*, %"class.device::VirtualFidoDevice::PrivateKey"*, i64, i8*)*** %374, align 8
  %376 = getelementptr inbounds void (%"class.std::__1::vector.109"*, %"class.device::VirtualFidoDevice::PrivateKey"*, i64, i8*)*, void (%"class.std::__1::vector.109"*, %"class.device::VirtualFidoDevice::PrivateKey"*, i64, i8*)** %375, i64 2
  %377 = load void (%"class.std::__1::vector.109"*, %"class.device::VirtualFidoDevice::PrivateKey"*, i64, i8*)*, void (%"class.std::__1::vector.109"*, %"class.device::VirtualFidoDevice::PrivateKey"*, i64, i8*)** %376, align 8
  call void %377(%"class.std::__1::vector.109"* nonnull sret %22, %"class.device::VirtualFidoDevice::PrivateKey"* %369, i64 %372, i8* %373) #10
  %378 = getelementptr inbounds %"class.device::VirtualU2fDevice", %"class.device::VirtualU2fDevice"* %1, i64 0, i32 0, i32 2, i32 0
  %379 = load %"class.device::VirtualFidoDevice::State"*, %"class.device::VirtualFidoDevice::State"** %378, align 8
  %380 = getelementptr inbounds %"class.device::VirtualFidoDevice::State", %"class.device::VirtualFidoDevice::State"* %379, i64 0, i32 9
  %381 = load i8, i8* %380, align 1, !range !2
  %382 = icmp eq i8 %381, 0
  br i1 %382, label %387, label %383

383:                                              ; preds = %359
  %384 = load i8*, i8** %365, align 8
  %385 = load i8, i8* %384, align 1
  %386 = xor i8 %385, 1
  store i8 %386, i8* %384, align 1
  br label %387

387:                                              ; preds = %383, %359
  %388 = bitcast %"class.std::__1::vector.109"* %22 to i64*
  %389 = load i64, i64* %388, align 8
  %390 = bitcast i8** %366 to i64*
  %391 = load i64, i64* %390, align 8
  %392 = sub i64 %391, %389
  %393 = inttoptr i64 %389 to i8*
  call void @_ZN6device18fido_parsing_utils6AppendEPNSt3__16vectorIhNS1_9allocatorIhEEEEN4base4spanIKhLm18446744073709551615EEE(%"class.std::__1::vector.109"* nonnull %20, i64 %392, i8* %393) #10
  %394 = bitcast %"class.std::__1::vector.109"* %23 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %394) #10
  %395 = bitcast %"class.apdu::ApduResponse"* %24 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %395) #10
  %396 = load i64, i64* %340, align 8
  %397 = bitcast %"class.std::__1::vector.109"* %25 to i64*
  store i64 %396, i64* %397, align 8
  %398 = load i64, i64* %341, align 8
  %399 = getelementptr inbounds %"class.std::__1::vector.109", %"class.std::__1::vector.109"* %25, i64 0, i32 0, i32 1
  %400 = bitcast i8** %399 to i64*
  store i64 %398, i64* %400, align 8
  %401 = bitcast i8** %156 to i64*
  %402 = load i64, i64* %401, align 8
  %403 = getelementptr inbounds %"class.std::__1::vector.109", %"class.std::__1::vector.109"* %25, i64 0, i32 0, i32 2, i32 0, i32 0
  %404 = bitcast i8** %403 to i64*
  store i64 %402, i64* %404, align 8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %153, i8 0, i64 24, i1 false) #10
  call void @_ZN4apdu12ApduResponseC1ENSt3__16vectorIhNS1_9allocatorIhEEEENS0_6StatusE(%"class.apdu::ApduResponse"* nonnull %24, %"class.std::__1::vector.109"* nonnull %25, i16 zeroext -28672) #10
  call void @_ZNK4apdu12ApduResponse18GetEncodedResponseEv(%"class.std::__1::vector.109"* nonnull sret %23, %"class.apdu::ApduResponse"* nonnull %24) #10
  %405 = getelementptr inbounds %"class.absl::optional.131", %"class.absl::optional.131"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  store i8 1, i8* %405, align 8
  %406 = getelementptr inbounds %"class.absl::optional.131", %"class.absl::optional.131"* %0, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  %407 = bitcast %"class.std::__1::vector.109"* %23 to <2 x i64>*
  %408 = load <2 x i64>, <2 x i64>* %407, align 16
  %409 = bitcast %"class.std::__1::vector.109"* %406 to <2 x i64>*
  store <2 x i64> %408, <2 x i64>* %409, align 8
  %410 = getelementptr inbounds %"class.std::__1::vector.109", %"class.std::__1::vector.109"* %23, i64 0, i32 0, i32 2, i32 0, i32 0
  %411 = bitcast i8** %410 to i64*
  %412 = load i64, i64* %411, align 16
  %413 = getelementptr inbounds %"class.absl::optional.131", %"class.absl::optional.131"* %0, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 2, i32 0, i32 0
  %414 = bitcast i8** %413 to i64*
  store i64 %412, i64* %414, align 8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %394, i8 0, i64 24, i1 false) #10
  call void @_ZN4apdu12ApduResponseD1Ev(%"class.apdu::ApduResponse"* nonnull %24) #10
  %415 = getelementptr inbounds %"class.std::__1::vector.109", %"class.std::__1::vector.109"* %25, i64 0, i32 0, i32 0
  %416 = load i8*, i8** %415, align 8
  %417 = icmp eq i8* %416, null
  br i1 %417, label %420, label %418

418:                                              ; preds = %387
  %419 = ptrtoint i8* %416 to i64
  store i64 %419, i64* %400, align 8
  call void @_ZdlPv(i8* nonnull %416) #9
  br label %420

420:                                              ; preds = %387, %418
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %395) #10
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %394) #10
  %421 = load i8*, i8** %365, align 8
  %422 = icmp eq i8* %421, null
  br i1 %422, label %425, label %423

423:                                              ; preds = %420
  %424 = ptrtoint i8* %421 to i64
  store i64 %424, i64* %390, align 8
  call void @_ZdlPv(i8* nonnull %421) #9
  br label %425

425:                                              ; preds = %420, %423
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %364) #10
  %426 = load i8*, i8** %344, align 8
  %427 = icmp eq i8* %426, null
  br i1 %427, label %430, label %428

428:                                              ; preds = %425
  %429 = ptrtoint i8* %426 to i64
  store i64 %429, i64* %351, align 8
  call void @_ZdlPv(i8* nonnull %426) #9
  br label %430

430:                                              ; preds = %425, %428
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %343) #10
  %431 = load i8*, i8** %154, align 8
  %432 = icmp eq i8* %431, null
  br i1 %432, label %435, label %433

433:                                              ; preds = %430
  %434 = ptrtoint i8* %431 to i64
  store i64 %434, i64* %341, align 8
  call void @_ZdlPv(i8* nonnull %431) #9
  br label %435

435:                                              ; preds = %430, %433
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %153) #10
  br label %436

436:                                              ; preds = %122, %435, %148, %82, %53, %49
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6device16VirtualU2fDevice10GetWeakPtrEv(%"class.base::WeakPtr"* noalias sret, %"class.device::VirtualU2fDevice"*) unnamed_addr #0 align 2 {
  %3 = alloca %"class.base::internal::WeakReference", align 8
  %4 = bitcast %"class.base::internal::WeakReference"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %4) #10, !noalias !43
  %5 = getelementptr inbounds %"class.device::VirtualU2fDevice", %"class.device::VirtualU2fDevice"* %1, i64 0, i32 1, i32 0, i32 0
  call void @_ZNK4base8internal18WeakReferenceOwner6GetRefEv(%"class.base::internal::WeakReference"* nonnull sret %3, %"class.base::internal::WeakReferenceOwner"* %5) #10, !noalias !43
  %6 = getelementptr inbounds %"class.device::VirtualU2fDevice", %"class.device::VirtualU2fDevice"* %1, i64 0, i32 1, i32 0, i32 1
  %7 = load i64, i64* %6, align 8, !noalias !43
  %8 = getelementptr inbounds %"class.base::WeakPtr", %"class.base::WeakPtr"* %0, i64 0, i32 0
  call void @_ZN4base8internal11WeakPtrBaseC2ERKNS0_13WeakReferenceEm(%"class.base::internal::WeakPtrBase"* %8, %"class.base::internal::WeakReference"* nonnull dereferenceable(8) %3, i64 %7) #10
  call void @_ZN4base8internal13WeakReferenceD1Ev(%"class.base::internal::WeakReference"* nonnull %3) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %4) #10, !noalias !43
  ret void
}

declare zeroext i1 @_ZN6device17VirtualFidoDevice13SimulatePressEv(%"class.device::VirtualFidoDevice"*) local_unnamed_addr #2

declare %"class.device::VirtualFidoDevice::PrivateKey"* @_ZN6device17VirtualFidoDevice10PrivateKey12FreshP256KeyEv() local_unnamed_addr #2

declare void @_ZN6crypto10SHA256HashEN4base4spanIKhLm18446744073709551615EEE(%"struct.std::__1::array.143"* sret, i64, i8*) local_unnamed_addr #2

declare void @_ZN6device18fido_parsing_utils6AppendEPNSt3__16vectorIhNS1_9allocatorIhEEEEN4base4spanIKhLm18446744073709551615EEE(%"class.std::__1::vector.109"*, i64, i8*) local_unnamed_addr #2

declare %"class.crypto::ECPrivateKey"* @_ZN6crypto12ECPrivateKey24CreateFromPrivateKeyInfoEN4base4spanIKhLm18446744073709551615EEE(i64, i8*) local_unnamed_addr #2

declare void @_ZN6device17VirtualFidoDevice17GetAttestationKeyEv(%"class.std::__1::vector.109"* sret) local_unnamed_addr #2

declare zeroext i1 @_ZN6device17VirtualFidoDevice4SignEPN6crypto12ECPrivateKeyEN4base4spanIKhLm18446744073709551615EEEPNSt3__16vectorIhNS8_9allocatorIhEEEE(%"class.crypto::ECPrivateKey"*, i64, i8*, %"class.std::__1::vector.109"*) local_unnamed_addr #2

declare void @_ZNK6device17VirtualFidoDevice30GenerateAttestationCertificateEb(%"class.absl::optional.131"* sret, %"class.device::VirtualFidoDevice"*, i1 zeroext) local_unnamed_addr #2

declare void @_ZN6device17VirtualFidoDevice16RegistrationDataC1ENSt3__110unique_ptrINS0_10PrivateKeyENS2_14default_deleteIS4_EEEEN4base4spanIKhLm32EEEj(%"struct.device::VirtualFidoDevice::RegistrationData"*, %"class.device::VirtualFidoDevice::PrivateKey"*, i8*, i32) unnamed_addr #2

declare void @_ZN6device17VirtualFidoDevice11StoreNewKeyEN4base4spanIKhLm18446744073709551615EEENS0_16RegistrationDataE(%"class.device::VirtualFidoDevice"*, i64, i8*, %"struct.device::VirtualFidoDevice::RegistrationData"*) local_unnamed_addr #2

declare void @_ZN6device17VirtualFidoDevice16RegistrationDataC1EOS1_(%"struct.device::VirtualFidoDevice::RegistrationData"*, %"struct.device::VirtualFidoDevice::RegistrationData"* dereferenceable(600)) unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN6device17VirtualFidoDevice16RegistrationDataD1Ev(%"struct.device::VirtualFidoDevice::RegistrationData"*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZNK4base4spanIKhLm18446744073709551615EE7subspanILm32ELm32EEENS0_IS1_XquneT0_L_ZNS_L14dynamic_extentEET0_quneLm18446744073709551615EL_ZNS_L14dynamic_extentEEmiLm18446744073709551615ET_L_ZNS_L14dynamic_extentEEEEEv(%"class.base::span"*) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckError", align 8
  %3 = alloca %"class.logging::CheckError", align 8
  %4 = getelementptr inbounds %"class.base::span", %"class.base::span"* %0, i64 0, i32 0, i32 0
  %5 = load i64, i64* %4, align 8
  %6 = icmp ugt i64 %5, 31
  br i1 %6, label %11, label %7

7:                                                ; preds = %1
  %8 = bitcast %"class.logging::CheckError"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %8) #10
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %2, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.3, i64 0, i64 0), i32 381, i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.6, i64 0, i64 0)) #10
  %9 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %2) #10
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %2) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %8) #10
  %10 = load i64, i64* %4, align 8
  br label %11

11:                                               ; preds = %1, %7
  %12 = phi i64 [ %5, %1 ], [ %10, %7 ]
  %13 = and i64 %12, -32
  %14 = icmp eq i64 %13, 32
  br i1 %14, label %15, label %18

15:                                               ; preds = %11
  %16 = bitcast %"class.logging::CheckError"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %16) #10
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %3, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.3, i64 0, i64 0), i32 383, i8* getelementptr inbounds ([80 x i8], [80 x i8]* @.str.7, i64 0, i64 0)) #10
  %17 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %3) #10
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %3) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16) #10
  br label %18

18:                                               ; preds = %11, %15
  %19 = getelementptr inbounds %"class.base::span", %"class.base::span"* %0, i64 0, i32 1
  %20 = load i8*, i8** %19, align 8
  %21 = getelementptr inbounds i8, i8* %20, i64 32
  ret i8* %21
}

declare %"struct.device::VirtualFidoDevice::RegistrationData"* @_ZN6device17VirtualFidoDevice20FindRegistrationDataEN4base4spanIKhLm18446744073709551615EEENS2_IS3_Lm32EEE(%"class.device::VirtualFidoDevice"*, i64, i8*, i8*) local_unnamed_addr #2

declare void @_ZN6device17VirtualFidoDevice7TryWinkEN4base12OnceCallbackIFvvEEE(%"class.device::VirtualFidoDevice"*, %"class.base::OnceCallback.130"*) unnamed_addr #2

declare void @_ZNK6device17VirtualFidoDevice5GetIdEv(%"class.std::__1::basic_string"* sret, %"class.device::VirtualFidoDevice"*) unnamed_addr #2

declare void @_ZNK6device10FidoDevice14GetDisplayNameEv(%"class.std::__1::basic_string"* sret, %"class.device::FidoDevice"*) unnamed_addr #2

declare zeroext i8 @_ZNK6device17VirtualFidoDevice15DeviceTransportEv(%"class.device::VirtualFidoDevice"*) unnamed_addr #2

declare zeroext i1 @_ZNK6device10FidoDevice15IsInPairingModeEv(%"class.device::FidoDevice"*) unnamed_addr #2

declare zeroext i1 @_ZNK6device10FidoDevice8IsPairedEv(%"class.device::FidoDevice"*) unnamed_addr #2

declare zeroext i1 @_ZNK6device10FidoDevice21RequiresBlePairingPinEv(%"class.device::FidoDevice"*) unnamed_addr #2

declare void @_ZN6device10FidoDevice38DiscoverSupportedProtocolAndDeviceInfoEN4base12OnceCallbackIFvvEEE(%"class.device::FidoDevice"*, %"class.base::OnceCallback.130"*) unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN4apdu11ApduCommandD1Ev(%"class.apdu::ApduCommand"*) unnamed_addr #3

declare void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* sret, i8*, i32, i8*) local_unnamed_addr #2

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #3

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #6

declare void @_ZN4base8internal18WeakPtrFactoryBaseC2Em(%"class.base::internal::WeakPtrFactoryBase"*, i64) unnamed_addr #2

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #7

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #8

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.base::internal::BindState"* @_ZN4base8internal9BindStateINS_12OnceCallbackIFvN4absl8optionalINSt3__16vectorIhNS5_9allocatorIhEEEEEEEEEJSA_EE6CreateISC_JSA_EEEPSD_PFvvEOT_DpOT0_(void ()*, %"class.base::OnceCallback"* dereferenceable(8), %"class.absl::optional.131"* dereferenceable(32)) local_unnamed_addr #0 comdat align 2 {
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = tail call i8* @_Znwm(i64 72) #9
  %6 = bitcast i8* %5 to %"struct.base::internal::BindState"*
  %7 = bitcast i8* %5 to %"class.base::internal::BindStateBase"*
  tail call void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_EPFbS5_NS1_21CancellationQueryModeEE(%"class.base::internal::BindStateBase"* nonnull %7, void ()* %0, void (%"class.base::internal::BindStateBase"*)* nonnull @_ZN4base8internal9BindStateINS_12OnceCallbackIFvN4absl8optionalINSt3__16vectorIhNS5_9allocatorIhEEEEEEEEEJSA_EE7DestroyEPKNS0_13BindStateBaseE, i1 (%"class.base::internal::BindStateBase"*, i32)* nonnull @_ZN4base8internal23QueryCancellationTraitsINS0_9BindStateINS_12OnceCallbackIFvN4absl8optionalINSt3__16vectorIhNS6_9allocatorIhEEEEEEEEEJSB_EEEEEbPKNS0_13BindStateBaseENSF_21CancellationQueryModeE) #10
  %8 = getelementptr inbounds i8, i8* %5, i64 32
  %9 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %1, i64 0, i32 0, i32 0, i32 0
  %10 = bitcast %"class.base::OnceCallback"* %1 to i64*
  %11 = load i64, i64* %10, align 8
  %12 = bitcast i8* %8 to i64*
  store i64 %11, i64* %12, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %9, align 8
  %13 = getelementptr inbounds i8, i8* %5, i64 40
  %14 = getelementptr inbounds %"class.absl::optional.131", %"class.absl::optional.131"* %2, i64 0, i32 0, i32 0, i32 0, i32 0
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %13, i8 0, i64 32, i1 false) #10
  %15 = load i8, i8* %14, align 8, !range !2
  %16 = icmp eq i8 %15, 0
  br i1 %16, label %29, label %17

17:                                               ; preds = %3
  %18 = getelementptr inbounds %"class.absl::optional.131", %"class.absl::optional.131"* %2, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  %19 = getelementptr inbounds i8, i8* %5, i64 48
  %20 = bitcast %"class.std::__1::vector.109"* %18 to <2 x i64>*
  %21 = load <2 x i64>, <2 x i64>* %20, align 8
  %22 = bitcast i8* %19 to <2 x i64>*
  store <2 x i64> %21, <2 x i64>* %22, align 8
  %23 = getelementptr inbounds %"class.absl::optional.131", %"class.absl::optional.131"* %2, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 2, i32 0, i32 0
  %24 = bitcast i8** %23 to i64*
  %25 = load i64, i64* %24, align 8
  %26 = getelementptr inbounds i8, i8* %5, i64 64
  %27 = bitcast i8* %26 to i64*
  store i64 %25, i64* %27, align 8
  %28 = bitcast %"class.std::__1::vector.109"* %18 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %28, i8 0, i64 24, i1 false) #10
  store i8 1, i8* %13, align 8
  br label %29

29:                                               ; preds = %17, %3
  %30 = icmp eq i64 %11, 0
  br i1 %30, label %31, label %34

31:                                               ; preds = %29
  %32 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %32) #10
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.11, i64 0, i64 0), i32 896, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.12, i64 0, i64 0)) #10
  %33 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #10
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %32) #10
  br label %34

34:                                               ; preds = %29, %31
  ret %"struct.base::internal::BindState"* %6
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal7InvokerINS0_9BindStateINS_12OnceCallbackIFvN4absl8optionalINSt3__16vectorIhNS6_9allocatorIhEEEEEEEEEJSB_EEEFvvEE7RunOnceEPNS0_13BindStateBaseE(%"class.base::internal::BindStateBase"*) #0 comdat align 2 {
  %2 = alloca %"class.base::OnceCallback", align 8
  %3 = alloca %"class.absl::optional.131", align 8
  %4 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1
  %5 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 1
  %6 = getelementptr inbounds %"class.absl::optional.131", %"class.absl::optional.131"* %3, i64 0, i32 0, i32 0, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %6) #10
  %7 = bitcast void ()** %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %6, i8 0, i64 32, i1 false) #10
  %8 = load i8, i8* %7, align 8, !range !2
  %9 = icmp eq i8 %8, 0
  br i1 %9, label %22, label %10

10:                                               ; preds = %1
  %11 = getelementptr inbounds void ()*, void ()** %5, i64 1
  %12 = getelementptr inbounds %"class.absl::optional.131", %"class.absl::optional.131"* %3, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  %13 = bitcast void ()** %11 to <2 x i64>*
  %14 = load <2 x i64>, <2 x i64>* %13, align 8
  %15 = bitcast %"class.std::__1::vector.109"* %12 to <2 x i64>*
  store <2 x i64> %14, <2 x i64>* %15, align 8
  %16 = getelementptr inbounds void ()*, void ()** %5, i64 3
  %17 = bitcast void ()** %16 to i64*
  %18 = load i64, i64* %17, align 8
  %19 = getelementptr inbounds %"class.absl::optional.131", %"class.absl::optional.131"* %3, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 2, i32 0, i32 0
  %20 = bitcast i8** %19 to i64*
  store i64 %18, i64* %20, align 8
  %21 = bitcast void ()** %11 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %21, i8 0, i64 24, i1 false) #10
  store i8 1, i8* %6, align 8
  br label %22

22:                                               ; preds = %10, %1
  %23 = bitcast %"class.base::OnceCallback"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %23) #10
  %24 = bitcast %"class.base::internal::BindStateBase"* %4 to %"class.base::internal::BindStateBase"**
  %25 = bitcast %"class.base::internal::BindStateBase"* %4 to i64*
  %26 = load i64, i64* %25, align 8
  %27 = bitcast %"class.base::OnceCallback"* %2 to i64*
  store i64 %26, i64* %27, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %24, align 8
  %28 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %2, i64 0, i32 0
  %29 = inttoptr i64 %26 to %"class.base::internal::BindStateBase"*
  %30 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %29, i64 0, i32 1
  %31 = bitcast void ()** %30 to void (%"class.base::internal::BindStateBase"*, %"class.absl::optional.131"*)**
  %32 = load void (%"class.base::internal::BindStateBase"*, %"class.absl::optional.131"*)*, void (%"class.base::internal::BindStateBase"*, %"class.absl::optional.131"*)** %31, align 8
  call void %32(%"class.base::internal::BindStateBase"* %29, %"class.absl::optional.131"* nonnull dereferenceable(32) %3) #10
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %28) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %23) #10
  %33 = load i8, i8* %6, align 8, !range !2
  %34 = icmp eq i8 %33, 0
  br i1 %34, label %44, label %35

35:                                               ; preds = %22
  %36 = getelementptr inbounds %"class.absl::optional.131", %"class.absl::optional.131"* %3, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %37 = load i8*, i8** %36, align 8
  %38 = icmp eq i8* %37, null
  br i1 %38, label %43, label %39

39:                                               ; preds = %35
  %40 = ptrtoint i8* %37 to i64
  %41 = getelementptr inbounds %"class.absl::optional.131", %"class.absl::optional.131"* %3, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 1
  %42 = bitcast i8** %41 to i64*
  store i64 %40, i64* %42, align 8
  call void @_ZdlPv(i8* nonnull %37) #9
  br label %43

43:                                               ; preds = %39, %35
  store i8 0, i8* %6, align 8
  br label %44

44:                                               ; preds = %22, %43
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %6) #10
  ret void
}

; Function Attrs: nounwind
declare void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal9BindStateINS_12OnceCallbackIFvN4absl8optionalINSt3__16vectorIhNS5_9allocatorIhEEEEEEEEEJSA_EE7DestroyEPKNS0_13BindStateBaseE(%"class.base::internal::BindStateBase"*) #0 comdat align 2 {
  %2 = icmp eq %"class.base::internal::BindStateBase"* %0, null
  br i1 %2, label %22, label %3

3:                                                ; preds = %1
  %4 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 1
  %5 = bitcast void ()** %4 to i8*
  %6 = load i8, i8* %5, align 8, !range !2
  %7 = icmp eq i8 %6, 0
  br i1 %7, label %18, label %8

8:                                                ; preds = %3
  %9 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 2
  %10 = bitcast void (%"class.base::internal::BindStateBase"*)** %9 to i8**
  %11 = load i8*, i8** %10, align 8
  %12 = icmp eq i8* %11, null
  br i1 %12, label %17, label %13

13:                                               ; preds = %8
  %14 = ptrtoint i8* %11 to i64
  %15 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 3
  %16 = bitcast i1 (%"class.base::internal::BindStateBase"*, i32)** %15 to i64*
  store i64 %14, i64* %16, align 8
  tail call void @_ZdlPv(i8* nonnull %11) #9
  br label %17

17:                                               ; preds = %13, %8
  store i8 0, i8* %5, align 8
  br label %18

18:                                               ; preds = %3, %17
  %19 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1
  %20 = bitcast %"class.base::internal::BindStateBase"* %19 to %"class.base::internal::CallbackBase"*
  tail call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* %20) #10
  %21 = bitcast %"class.base::internal::BindStateBase"* %0 to i8*
  tail call void @_ZdlPv(i8* %21) #9
  br label %22

22:                                               ; preds = %18, %1
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN4base8internal23QueryCancellationTraitsINS0_9BindStateINS_12OnceCallbackIFvN4absl8optionalINSt3__16vectorIhNS6_9allocatorIhEEEEEEEEEJSB_EEEEEbPKNS0_13BindStateBaseENSF_21CancellationQueryModeE(%"class.base::internal::BindStateBase"*, i32) #0 comdat {
  %3 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1
  switch i32 %1, label %10 [
    i32 0, label %4
    i32 1, label %7
  ]

4:                                                ; preds = %2
  %5 = bitcast %"class.base::internal::BindStateBase"* %3 to %"class.base::internal::CallbackBase"*
  %6 = tail call zeroext i1 @_ZNK4base8internal12CallbackBase11IsCancelledEv(%"class.base::internal::CallbackBase"* %5) #10
  br label %10

7:                                                ; preds = %2
  %8 = bitcast %"class.base::internal::BindStateBase"* %3 to %"class.base::internal::CallbackBase"*
  %9 = tail call zeroext i1 @_ZNK4base8internal12CallbackBase10MaybeValidEv(%"class.base::internal::CallbackBase"* %8) #10
  br label %10

10:                                               ; preds = %2, %4, %7
  %11 = phi i1 [ %9, %7 ], [ %6, %4 ], [ false, %2 ]
  ret i1 %11
}

declare void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_EPFbS5_NS1_21CancellationQueryModeEE(%"class.base::internal::BindStateBase"*, void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)*) unnamed_addr #2

declare zeroext i1 @_ZNK4base8internal12CallbackBase11IsCancelledEv(%"class.base::internal::CallbackBase"*) local_unnamed_addr #2

declare zeroext i1 @_ZNK4base8internal12CallbackBase10MaybeValidEv(%"class.base::internal::CallbackBase"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal7InvokerINS0_9BindStateINS_12OnceCallbackIFvN4absl8optionalINSt3__16vectorIhNS6_9allocatorIhEEEEEEEEEJSA_EEEFvvEE7RunOnceEPNS0_13BindStateBaseE(%"class.base::internal::BindStateBase"*) #0 comdat align 2 {
  %2 = alloca %"class.base::OnceCallback", align 8
  %3 = alloca %"class.absl::optional.131", align 8
  %4 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1
  %5 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 1
  %6 = getelementptr inbounds %"class.absl::optional.131", %"class.absl::optional.131"* %3, i64 0, i32 0, i32 0, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %6) #10
  store i8 1, i8* %6, align 8
  %7 = getelementptr inbounds %"class.absl::optional.131", %"class.absl::optional.131"* %3, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  %8 = bitcast void ()** %5 to <2 x i64>*
  %9 = load <2 x i64>, <2 x i64>* %8, align 8
  %10 = getelementptr inbounds %"class.absl::optional.131", %"class.absl::optional.131"* %3, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 1
  %11 = bitcast i8** %10 to i64*
  %12 = bitcast %"class.std::__1::vector.109"* %7 to <2 x i64>*
  store <2 x i64> %9, <2 x i64>* %12, align 8
  %13 = getelementptr inbounds void ()*, void ()** %5, i64 2
  %14 = bitcast void ()** %13 to i64*
  %15 = load i64, i64* %14, align 8
  %16 = getelementptr inbounds %"class.absl::optional.131", %"class.absl::optional.131"* %3, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 2, i32 0, i32 0
  %17 = bitcast i8** %16 to i64*
  store i64 %15, i64* %17, align 8
  %18 = bitcast void ()** %5 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %18, i8 0, i64 24, i1 false) #10
  %19 = bitcast %"class.base::OnceCallback"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %19) #10
  %20 = bitcast %"class.base::internal::BindStateBase"* %4 to %"class.base::internal::BindStateBase"**
  %21 = bitcast %"class.base::internal::BindStateBase"* %4 to i64*
  %22 = load i64, i64* %21, align 8
  %23 = bitcast %"class.base::OnceCallback"* %2 to i64*
  store i64 %22, i64* %23, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %20, align 8
  %24 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %2, i64 0, i32 0
  %25 = inttoptr i64 %22 to %"class.base::internal::BindStateBase"*
  %26 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %25, i64 0, i32 1
  %27 = bitcast void ()** %26 to void (%"class.base::internal::BindStateBase"*, %"class.absl::optional.131"*)**
  %28 = load void (%"class.base::internal::BindStateBase"*, %"class.absl::optional.131"*)*, void (%"class.base::internal::BindStateBase"*, %"class.absl::optional.131"*)** %27, align 8
  call void %28(%"class.base::internal::BindStateBase"* %25, %"class.absl::optional.131"* nonnull dereferenceable(32) %3) #10
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %24) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %19) #10
  %29 = load i8, i8* %6, align 8, !range !2
  %30 = icmp eq i8 %29, 0
  br i1 %30, label %38, label %31

31:                                               ; preds = %1
  %32 = getelementptr inbounds %"class.absl::optional.131", %"class.absl::optional.131"* %3, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %33 = load i8*, i8** %32, align 8
  %34 = icmp eq i8* %33, null
  br i1 %34, label %37, label %35

35:                                               ; preds = %31
  %36 = ptrtoint i8* %33 to i64
  store i64 %36, i64* %11, align 8
  call void @_ZdlPv(i8* nonnull %33) #9
  br label %37

37:                                               ; preds = %35, %31
  store i8 0, i8* %6, align 8
  br label %38

38:                                               ; preds = %1, %37
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %6) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal9BindStateINS_12OnceCallbackIFvN4absl8optionalINSt3__16vectorIhNS5_9allocatorIhEEEEEEEEEJS9_EE7DestroyEPKNS0_13BindStateBaseE(%"class.base::internal::BindStateBase"*) #0 comdat align 2 {
  %2 = icmp eq %"class.base::internal::BindStateBase"* %0, null
  br i1 %2, label %16, label %3

3:                                                ; preds = %1
  %4 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 1
  %5 = bitcast void ()** %4 to i8**
  %6 = load i8*, i8** %5, align 8
  %7 = icmp eq i8* %6, null
  br i1 %7, label %12, label %8

8:                                                ; preds = %3
  %9 = ptrtoint i8* %6 to i64
  %10 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 2
  %11 = bitcast void (%"class.base::internal::BindStateBase"*)** %10 to i64*
  store i64 %9, i64* %11, align 8
  tail call void @_ZdlPv(i8* nonnull %6) #9
  br label %12

12:                                               ; preds = %3, %8
  %13 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1
  %14 = bitcast %"class.base::internal::BindStateBase"* %13 to %"class.base::internal::CallbackBase"*
  tail call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* %14) #10
  %15 = bitcast %"class.base::internal::BindStateBase"* %0 to i8*
  tail call void @_ZdlPv(i8* %15) #9
  br label %16

16:                                               ; preds = %12, %1
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN4base8internal23QueryCancellationTraitsINS0_9BindStateINS_12OnceCallbackIFvN4absl8optionalINSt3__16vectorIhNS6_9allocatorIhEEEEEEEEEJSA_EEEEEbPKNS0_13BindStateBaseENSF_21CancellationQueryModeE(%"class.base::internal::BindStateBase"*, i32) #0 comdat {
  %3 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1
  switch i32 %1, label %10 [
    i32 0, label %4
    i32 1, label %7
  ]

4:                                                ; preds = %2
  %5 = bitcast %"class.base::internal::BindStateBase"* %3 to %"class.base::internal::CallbackBase"*
  %6 = tail call zeroext i1 @_ZNK4base8internal12CallbackBase11IsCancelledEv(%"class.base::internal::CallbackBase"* %5) #10
  br label %10

7:                                                ; preds = %2
  %8 = bitcast %"class.base::internal::BindStateBase"* %3 to %"class.base::internal::CallbackBase"*
  %9 = tail call zeroext i1 @_ZNK4base8internal12CallbackBase10MaybeValidEv(%"class.base::internal::CallbackBase"* %8) #10
  br label %10

10:                                               ; preds = %2, %4, %7
  %11 = phi i1 [ %9, %7 ], [ %6, %4 ], [ false, %2 ]
  ret i1 %11
}

declare void @_ZNK4base8internal18WeakReferenceOwner6GetRefEv(%"class.base::internal::WeakReference"* sret, %"class.base::internal::WeakReferenceOwner"*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN4base8internal13WeakReferenceD1Ev(%"class.base::internal::WeakReference"*) unnamed_addr #3

declare void @_ZN4base8internal11WeakPtrBaseC2ERKNS0_13WeakReferenceEm(%"class.base::internal::WeakPtrBase"*, %"class.base::internal::WeakReference"* dereferenceable(8), i64) unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN6crypto12ECPrivateKeyD1Ev(%"class.crypto::ECPrivateKey"*) unnamed_addr #3

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { cold noreturn nounwind }
attributes #7 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { builtin nounwind }
attributes #10 = { nounwind }
attributes #11 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
!3 = !{!4}
!4 = distinct !{!4, !5, !"_ZN6device12_GLOBAL__N_111ErrorStatusEN4apdu12ApduResponse6StatusE: argument 0"}
!5 = distinct !{!5, !"_ZN6device12_GLOBAL__N_111ErrorStatusEN4apdu12ApduResponse6StatusE"}
!6 = !{!7, !9}
!7 = distinct !{!7, !8, !"_ZN4base8internal8BindImplINS_12OnceCallbackENS2_IFvN4absl8optionalINSt3__16vectorIhNS5_9allocatorIhEEEEEEEEEJSA_EEEDcOT0_DpOT1_: argument 0"}
!8 = distinct !{!8, !"_ZN4base8internal8BindImplINS_12OnceCallbackENS2_IFvN4absl8optionalINSt3__16vectorIhNS5_9allocatorIhEEEEEEEEEJSA_EEEDcOT0_DpOT1_"}
!9 = distinct !{!9, !10, !"_ZN4base8BindOnceINS_12OnceCallbackIFvN4absl8optionalINSt3__16vectorIhNS4_9allocatorIhEEEEEEEEEJS9_EEENS1_INS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSE_DpOSF_: argument 0"}
!10 = distinct !{!10, !"_ZN4base8BindOnceINS_12OnceCallbackIFvN4absl8optionalINSt3__16vectorIhNS4_9allocatorIhEEEEEEEEEJS9_EEENS1_INS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSE_DpOSF_"}
!11 = !{!12, !14}
!12 = distinct !{!12, !13, !"_ZN4base8internal8BindImplINS_12OnceCallbackENS2_IFvN4absl8optionalINSt3__16vectorIhNS5_9allocatorIhEEEEEEEEEJS9_EEEDcOT0_DpOT1_: argument 0"}
!13 = distinct !{!13, !"_ZN4base8internal8BindImplINS_12OnceCallbackENS2_IFvN4absl8optionalINSt3__16vectorIhNS5_9allocatorIhEEEEEEEEEJS9_EEEDcOT0_DpOT1_"}
!14 = distinct !{!14, !15, !"_ZN4base8BindOnceINS_12OnceCallbackIFvN4absl8optionalINSt3__16vectorIhNS4_9allocatorIhEEEEEEEEEJS8_EEENS1_INS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSE_DpOSF_: argument 0"}
!15 = distinct !{!15, !"_ZN4base8BindOnceINS_12OnceCallbackIFvN4absl8optionalINSt3__16vectorIhNS4_9allocatorIhEEEEEEEEEJS8_EEENS1_INS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSE_DpOSF_"}
!16 = !{!17}
!17 = distinct !{!17, !18, !"_ZN6device12_GLOBAL__N_111ErrorStatusEN4apdu12ApduResponse6StatusE: argument 0"}
!18 = distinct !{!18, !"_ZN6device12_GLOBAL__N_111ErrorStatusEN4apdu12ApduResponse6StatusE"}
!19 = !{!20, !22}
!20 = distinct !{!20, !21, !"_ZN4base8internal8BindImplINS_12OnceCallbackENS2_IFvN4absl8optionalINSt3__16vectorIhNS5_9allocatorIhEEEEEEEEEJSA_EEEDcOT0_DpOT1_: argument 0"}
!21 = distinct !{!21, !"_ZN4base8internal8BindImplINS_12OnceCallbackENS2_IFvN4absl8optionalINSt3__16vectorIhNS5_9allocatorIhEEEEEEEEEJSA_EEEDcOT0_DpOT1_"}
!22 = distinct !{!22, !23, !"_ZN4base8BindOnceINS_12OnceCallbackIFvN4absl8optionalINSt3__16vectorIhNS4_9allocatorIhEEEEEEEEEJS9_EEENS1_INS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSE_DpOSF_: argument 0"}
!23 = distinct !{!23, !"_ZN4base8BindOnceINS_12OnceCallbackIFvN4absl8optionalINSt3__16vectorIhNS4_9allocatorIhEEEEEEEEEJS9_EEENS1_INS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSE_DpOSF_"}
!24 = !{!25}
!25 = distinct !{!25, !26, !"_ZN6device12_GLOBAL__N_111ErrorStatusEN4apdu12ApduResponse6StatusE: argument 0"}
!26 = distinct !{!26, !"_ZN6device12_GLOBAL__N_111ErrorStatusEN4apdu12ApduResponse6StatusE"}
!27 = !{!28}
!28 = distinct !{!28, !29, !"_ZN6device12_GLOBAL__N_111ErrorStatusEN4apdu12ApduResponse6StatusE: argument 0"}
!29 = distinct !{!29, !"_ZN6device12_GLOBAL__N_111ErrorStatusEN4apdu12ApduResponse6StatusE"}
!30 = !{!"branch_weights", i32 1, i32 2000}
!31 = !{!32}
!32 = distinct !{!32, !33, !"_ZN6device12_GLOBAL__N_111ErrorStatusEN4apdu12ApduResponse6StatusE: argument 0"}
!33 = distinct !{!33, !"_ZN6device12_GLOBAL__N_111ErrorStatusEN4apdu12ApduResponse6StatusE"}
!34 = !{!35}
!35 = distinct !{!35, !36, !"_ZN6device12_GLOBAL__N_111ErrorStatusEN4apdu12ApduResponse6StatusE: argument 0"}
!36 = distinct !{!36, !"_ZN6device12_GLOBAL__N_111ErrorStatusEN4apdu12ApduResponse6StatusE"}
!37 = !{!38}
!38 = distinct !{!38, !39, !"_ZN6device12_GLOBAL__N_111ErrorStatusEN4apdu12ApduResponse6StatusE: argument 0"}
!39 = distinct !{!39, !"_ZN6device12_GLOBAL__N_111ErrorStatusEN4apdu12ApduResponse6StatusE"}
!40 = !{!41}
!41 = distinct !{!41, !42, !"_ZN6device12_GLOBAL__N_111ErrorStatusEN4apdu12ApduResponse6StatusE: argument 0"}
!42 = distinct !{!42, !"_ZN6device12_GLOBAL__N_111ErrorStatusEN4apdu12ApduResponse6StatusE"}
!43 = !{!44}
!44 = distinct !{!44, !45, !"_ZNK4base14WeakPtrFactoryIN6device10FidoDeviceEE10GetWeakPtrEv: argument 0"}
!45 = distinct !{!45, !"_ZNK4base14WeakPtrFactoryIN6device10FidoDeviceEE10GetWeakPtrEv"}
