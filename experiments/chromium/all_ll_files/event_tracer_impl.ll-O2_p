; ModuleID = '../../skia/ext/event_tracer_impl.cc'
source_filename = "../../skia/ext/event_tracer_impl.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.skia::SkChromiumEventTracer" = type { %class.SkEventTracer }
%class.SkEventTracer = type { i32 (...)** }
%"class.base::trace_event::TraceArguments" = type { i8, [2 x i8], [2 x i8*], [2 x %"union.base::trace_event::TraceValue"] }
%"union.base::trace_event::TraceValue" = type { i64 }
%"class.base::trace_event::ConvertableToTraceFormat" = type { i32 (...)** }
%"class.protozero::HeapBuffered" = type { %"class.protozero::ScatteredHeapBuffer", %"class.protozero::ScatteredStreamWriter", %"class.protozero::RootMessage" }
%"class.protozero::ScatteredHeapBuffer" = type { %"class.protozero::ScatteredStreamWriter::Delegate", i64, i64, %"class.protozero::ScatteredStreamWriter"*, %"class.std::__1::vector", %"class.protozero::ScatteredHeapBuffer::Slice" }
%"class.protozero::ScatteredStreamWriter::Delegate" = type { i32 (...)** }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.protozero::ScatteredHeapBuffer::Slice"*, %"class.protozero::ScatteredHeapBuffer::Slice"*, %"class.std::__1::__compressed_pair.1" }
%"class.std::__1::__compressed_pair.1" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"struct.std::__1::__compressed_pair_elem.2" = type { %"class.protozero::ScatteredHeapBuffer::Slice"* }
%"class.protozero::ScatteredHeapBuffer::Slice" = type { %"class.std::__1::unique_ptr", i64, i64 }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { i8* }
%"class.protozero::ScatteredStreamWriter" = type { %"class.protozero::ScatteredStreamWriter::Delegate"*, %"struct.protozero::ContiguousMemoryRange", i8*, i64 }
%"struct.protozero::ContiguousMemoryRange" = type { i8*, i8* }
%"class.protozero::RootMessage" = type { %"class.perfetto::protos::pbzero::DebugAnnotation.base", %"class.protozero::MessageArena" }
%"class.perfetto::protos::pbzero::DebugAnnotation.base" = type { %"class.protozero::Message.base" }
%"class.protozero::Message.base" = type <{ %"class.protozero::ScatteredStreamWriter"*, %"class.protozero::MessageArena"*, %"class.protozero::Message"*, i8*, i32, i32, i8 }>
%"class.protozero::Message" = type <{ %"class.protozero::ScatteredStreamWriter"*, %"class.protozero::MessageArena"*, %"class.protozero::Message"*, i8*, i32, i32, i8, [7 x i8] }>
%"class.protozero::MessageArena" = type { %"class.std::__1::list" }
%"class.std::__1::list" = type { %"class.std::__1::__list_imp" }
%"class.std::__1::__list_imp" = type { %"struct.std::__1::__list_node_base", %"class.std::__1::__compressed_pair.4" }
%"struct.std::__1::__list_node_base" = type { %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"* }
%"class.std::__1::__compressed_pair.4" = type { %"struct.std::__1::__compressed_pair_elem.5" }
%"struct.std::__1::__compressed_pair_elem.5" = type { i64 }

$_ZN13SkEventTracerD2Ev = comdat any

$_ZN4skia21SkChromiumEventTracerD0Ev = comdat any

@_ZTVN4skia21SkChromiumEventTracerE = hidden unnamed_addr constant { [8 x i8*] } { [8 x i8*] [i8* null, i8* null, i8* bitcast (void (%class.SkEventTracer*)* @_ZN13SkEventTracerD2Ev to i8*), i8* bitcast (void (%"class.skia::SkChromiumEventTracer"*)* @_ZN4skia21SkChromiumEventTracerD0Ev to i8*), i8* bitcast (i8* (%"class.skia::SkChromiumEventTracer"*, i8*)* @_ZN4skia21SkChromiumEventTracer23getCategoryGroupEnabledEPKc to i8*), i8* bitcast (i8* (%"class.skia::SkChromiumEventTracer"*, i8*)* @_ZN4skia21SkChromiumEventTracer20getCategoryGroupNameEPKh to i8*), i8* bitcast (i64 (%"class.skia::SkChromiumEventTracer"*, i8, i8*, i8*, i64, i32, i8**, i8*, i64*, i8)* @_ZN4skia21SkChromiumEventTracer13addTraceEventEcPKhPKcmiPS4_S2_PKmh to i8*), i8* bitcast (void (%"class.skia::SkChromiumEventTracer"*, i8*, i8*, i64)* @_ZN4skia21SkChromiumEventTracer24updateTraceEventDurationEPKhPKcm to i8*)] }, align 8

; Function Attrs: nounwind ssp uwtable
define hidden i8* @_ZN4skia21SkChromiumEventTracer23getCategoryGroupEnabledEPKc(%"class.skia::SkChromiumEventTracer"* nocapture readnone, i8*) unnamed_addr #0 align 2 {
  %3 = tail call i8* @_ZN4base11trace_event8TraceLog23GetCategoryGroupEnabledEPKc(i8* %1) #7
  ret i8* %3
}

declare i8* @_ZN4base11trace_event8TraceLog23GetCategoryGroupEnabledEPKc(i8*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden i8* @_ZN4skia21SkChromiumEventTracer20getCategoryGroupNameEPKh(%"class.skia::SkChromiumEventTracer"* nocapture readnone, i8*) unnamed_addr #0 align 2 {
  %3 = tail call i8* @_ZN4base11trace_event8TraceLog20GetCategoryGroupNameEPKh(i8* %1) #7
  ret i8* %3
}

declare i8* @_ZN4base11trace_event8TraceLog20GetCategoryGroupNameEPKh(i8*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZN4skia21SkChromiumEventTracer13addTraceEventEcPKhPKcmiPS4_S2_PKmh(%"class.skia::SkChromiumEventTracer"* nocapture readnone, i8 signext, i8*, i8*, i64, i32, i8**, i8*, i64*, i8 zeroext) unnamed_addr #0 align 2 {
  %11 = alloca %"class.base::trace_event::TraceArguments", align 8
  %12 = getelementptr inbounds %"class.base::trace_event::TraceArguments", %"class.base::trace_event::TraceArguments"* %11, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %12) #7
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %12, i8 -86, i64 40, i1 false)
  call void @_ZN4base11trace_event14TraceArgumentsC1EiPKPKcPKhPKy(%"class.base::trace_event::TraceArguments"* nonnull %11, i32 %5, i8** %6, i8* %7, i64* %8) #7
  %13 = zext i8 %9 to i32
  %14 = call i64 @_ZN20trace_event_internal13AddTraceEventEcPKhPKcS3_yPN4base11trace_event14TraceArgumentsEj(i8 signext %1, i8* %2, i8* %3, i8* null, i64 %4, %"class.base::trace_event::TraceArguments"* nonnull %11, i32 %13) #7
  %15 = load i8, i8* %12, align 8
  %16 = icmp eq i8 %15, 0
  br i1 %16, label %51, label %17

17:                                               ; preds = %10, %46
  %18 = phi i64 [ %47, %46 ], [ 0, %10 ]
  %19 = getelementptr inbounds %"class.base::trace_event::TraceArguments", %"class.base::trace_event::TraceArguments"* %11, i64 0, i32 1, i64 %18
  %20 = load i8, i8* %19, align 1
  %21 = icmp eq i8 %20, 8
  br i1 %21, label %22, label %33

22:                                               ; preds = %17
  %23 = getelementptr inbounds %"class.base::trace_event::TraceArguments", %"class.base::trace_event::TraceArguments"* %11, i64 0, i32 3, i64 %18
  %24 = bitcast %"union.base::trace_event::TraceValue"* %23 to %"class.base::trace_event::ConvertableToTraceFormat"**
  %25 = load %"class.base::trace_event::ConvertableToTraceFormat"*, %"class.base::trace_event::ConvertableToTraceFormat"** %24, align 8
  %26 = icmp eq %"class.base::trace_event::ConvertableToTraceFormat"* %25, null
  br i1 %26, label %46, label %27

27:                                               ; preds = %22
  %28 = bitcast %"class.base::trace_event::ConvertableToTraceFormat"* %25 to void (%"class.base::trace_event::ConvertableToTraceFormat"*)***
  %29 = load void (%"class.base::trace_event::ConvertableToTraceFormat"*)**, void (%"class.base::trace_event::ConvertableToTraceFormat"*)*** %28, align 8
  %30 = getelementptr inbounds void (%"class.base::trace_event::ConvertableToTraceFormat"*)*, void (%"class.base::trace_event::ConvertableToTraceFormat"*)** %29, i64 1
  %31 = load void (%"class.base::trace_event::ConvertableToTraceFormat"*)*, void (%"class.base::trace_event::ConvertableToTraceFormat"*)** %30, align 8
  call void %31(%"class.base::trace_event::ConvertableToTraceFormat"* nonnull %25) #7
  %32 = load i8, i8* %19, align 1
  br label %33

33:                                               ; preds = %27, %17
  %34 = phi i8 [ %20, %17 ], [ %32, %27 ]
  %35 = icmp eq i8 %34, 9
  br i1 %35, label %36, label %46

36:                                               ; preds = %33
  %37 = getelementptr inbounds %"class.base::trace_event::TraceArguments", %"class.base::trace_event::TraceArguments"* %11, i64 0, i32 3, i64 %18
  %38 = bitcast %"union.base::trace_event::TraceValue"* %37 to %"class.protozero::HeapBuffered"**
  %39 = load %"class.protozero::HeapBuffered"*, %"class.protozero::HeapBuffered"** %38, align 8
  %40 = icmp eq %"class.protozero::HeapBuffered"* %39, null
  br i1 %40, label %46, label %41

41:                                               ; preds = %36
  %42 = getelementptr inbounds %"class.protozero::HeapBuffered", %"class.protozero::HeapBuffered"* %39, i64 0, i32 2, i32 1
  call void @_ZN9protozero12MessageArenaD1Ev(%"class.protozero::MessageArena"* %42) #7
  %43 = getelementptr inbounds %"class.protozero::HeapBuffered", %"class.protozero::HeapBuffered"* %39, i64 0, i32 1
  call void @_ZN9protozero21ScatteredStreamWriterD1Ev(%"class.protozero::ScatteredStreamWriter"* %43) #7
  %44 = getelementptr inbounds %"class.protozero::HeapBuffered", %"class.protozero::HeapBuffered"* %39, i64 0, i32 0
  call void @_ZN9protozero19ScatteredHeapBufferD1Ev(%"class.protozero::ScatteredHeapBuffer"* %44) #7
  %45 = bitcast %"class.protozero::HeapBuffered"* %39 to i8*
  call void @_ZdlPv(i8* %45) #8
  br label %46

46:                                               ; preds = %41, %36, %33, %22
  %47 = add nuw nsw i64 %18, 1
  %48 = load i8, i8* %12, align 8
  %49 = zext i8 %48 to i64
  %50 = icmp ult i64 %47, %49
  br i1 %50, label %17, label %51

51:                                               ; preds = %46, %10
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %12) #7
  ret i64 %14
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #2

declare void @_ZN4base11trace_event14TraceArgumentsC1EiPKPKcPKhPKy(%"class.base::trace_event::TraceArguments"*, i32, i8**, i8*, i64*) unnamed_addr #1

declare i64 @_ZN20trace_event_internal13AddTraceEventEcPKhPKcS3_yPN4base11trace_event14TraceArgumentsEj(i8 signext, i8*, i8*, i8*, i64, %"class.base::trace_event::TraceArguments"*, i32) local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4skia21SkChromiumEventTracer24updateTraceEventDurationEPKhPKcm(%"class.skia::SkChromiumEventTracer"* nocapture readnone, i8*, i8*, i64) unnamed_addr #0 align 2 {
  tail call void @_ZN20trace_event_internal24UpdateTraceEventDurationEPKhPKcN4base11trace_event16TraceEventHandleE(i8* %1, i8* %2, i64 %3) #7
  ret void
}

declare void @_ZN20trace_event_internal24UpdateTraceEventDurationEPKhPKcN4base11trace_event16TraceEventHandleE(i8*, i8*, i64) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_Z19InitSkiaEventTracerv() local_unnamed_addr #0 {
  %1 = tail call i8* @_Znwm(i64 8) #8
  %2 = bitcast i8* %1 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [8 x i8*] }, { [8 x i8*] }* @_ZTVN4skia21SkChromiumEventTracerE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = bitcast i8* %1 to %class.SkEventTracer*
  %4 = tail call zeroext i1 @_ZN13SkEventTracer11SetInstanceEPS_(%class.SkEventTracer* nonnull %3) #7
  ret void
}

declare zeroext i1 @_ZN13SkEventTracer11SetInstanceEPS_(%class.SkEventTracer*) local_unnamed_addr #1

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN13SkEventTracerD2Ev(%class.SkEventTracer*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4skia21SkChromiumEventTracerD0Ev(%"class.skia::SkChromiumEventTracer"*) unnamed_addr #4 comdat align 2 {
  %2 = bitcast %"class.skia::SkChromiumEventTracer"* %0 to i8*
  tail call void @_ZdlPv(i8* %2) #8
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #5

; Function Attrs: nounwind
declare void @_ZN9protozero21ScatteredStreamWriterD1Ev(%"class.protozero::ScatteredStreamWriter"*) unnamed_addr #6

; Function Attrs: nounwind
declare void @_ZN9protozero19ScatteredHeapBufferD1Ev(%"class.protozero::ScatteredHeapBuffer"*) unnamed_addr #6

; Function Attrs: nounwind
declare void @_ZN9protozero12MessageArenaD1Ev(%"class.protozero::MessageArena"*) unnamed_addr #6

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind }
attributes #3 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nounwind }
attributes #8 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
