; ModuleID = '../../ui/wm/core/window_modality_controller.cc'
source_filename = "../../ui/wm/core/window_modality_controller.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"struct.ui::ClassProperty" = type opaque
%"struct.ui::ClassProperty.173" = type opaque
%"class.wm::WindowModalityController" = type { %"class.ui::EventHandler", %"class.aura::EnvObserver", %"class.aura::WindowObserver", %"class.aura::Env"*, %"class.std::__1::vector.49", %"class.ui::EventTarget"* }
%"class.ui::EventHandler" = type { i32 (...)**, %"class.std::__1::stack" }
%"class.std::__1::stack" = type { %"class.base::circular_deque" }
%"class.base::circular_deque" = type { %"class.base::internal::VectorBuffer", i64, i64 }
%"class.base::internal::VectorBuffer" = type { %"class.ui::EventDispatcher"**, i64 }
%"class.ui::EventDispatcher" = type { i32 (...)**, %"class.ui::EventDispatcherDelegate"*, %"class.ui::Event"*, %"class.std::__1::vector.20" }
%"class.ui::EventDispatcherDelegate" = type { i32 (...)**, %"class.ui::EventDispatcher"* }
%"class.ui::Event" = type { i32 (...)**, i32, %"class.base::TimeTicks", %"class.ui::LatencyInfo", i32, %"class.ui::Event"*, i8, i8, %"class.ui::EventTarget"*, i32, i32, i32, %"class.std::__1::unique_ptr.13" }
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.ui::LatencyInfo" = type { %"class.base::flat_map", i64, i64, i8, i8, i8, i32, float, float, i64 }
%"class.base::flat_map" = type { %"class.base::internal::flat_tree" }
%"class.base::internal::flat_tree" = type { %"class.std::__1::vector.6" }
%"class.std::__1::vector.6" = type { %"class.std::__1::__vector_base.7" }
%"class.std::__1::__vector_base.7" = type { %"struct.std::__1::pair"*, %"struct.std::__1::pair"*, %"class.std::__1::__compressed_pair.8" }
%"struct.std::__1::pair" = type opaque
%"class.std::__1::__compressed_pair.8" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"struct.std::__1::__compressed_pair_elem.9" = type { %"struct.std::__1::pair"* }
%"class.std::__1::unique_ptr.13" = type { %"class.std::__1::__compressed_pair.14" }
%"class.std::__1::__compressed_pair.14" = type { %"struct.std::__1::__compressed_pair_elem.15" }
%"struct.std::__1::__compressed_pair_elem.15" = type { %"class.base::flat_map.16"* }
%"class.base::flat_map.16" = type opaque
%"class.std::__1::vector.20" = type { %"class.std::__1::__vector_base.21" }
%"class.std::__1::__vector_base.21" = type { %"class.ui::EventHandler"**, %"class.ui::EventHandler"**, %"class.std::__1::__compressed_pair.22" }
%"class.std::__1::__compressed_pair.22" = type { %"struct.std::__1::__compressed_pair_elem.23" }
%"struct.std::__1::__compressed_pair_elem.23" = type { %"class.ui::EventHandler"** }
%"class.aura::EnvObserver" = type { i32 (...)** }
%"class.aura::WindowObserver" = type { %"class.base::CheckedObserver" }
%"class.base::CheckedObserver" = type { i32 (...)**, %"class.base::WeakPtrFactory" }
%"class.base::WeakPtrFactory" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.base::internal::WeakPtrFactoryBase" = type { %"class.base::internal::WeakReferenceOwner", i64 }
%"class.base::internal::WeakReferenceOwner" = type { %class.scoped_refptr.99 }
%class.scoped_refptr.99 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.base::internal::WeakReference::Flag" = type <{ %"class.base::RefCountedThreadSafe", %"class.base::AtomicFlag", [3 x i8] }>
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.78" }
%"struct.std::__1::__atomic_base.78" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.base::AtomicFlag" = type { %"struct.std::__1::atomic.79" }
%"struct.std::__1::atomic.79" = type { %"struct.std::__1::__atomic_base.80" }
%"struct.std::__1::__atomic_base.80" = type { %"struct.std::__1::__atomic_base.81" }
%"struct.std::__1::__atomic_base.81" = type { %"struct.std::__1::__cxx_atomic_impl.82" }
%"struct.std::__1::__cxx_atomic_impl.82" = type { %"struct.std::__1::__cxx_atomic_base_impl.83" }
%"struct.std::__1::__cxx_atomic_base_impl.83" = type { i8 }
%"class.std::__1::vector.49" = type { %"class.std::__1::__vector_base.50" }
%"class.std::__1::__vector_base.50" = type { %"class.aura::Window"**, %"class.aura::Window"**, %"class.std::__1::__compressed_pair.51" }
%"class.aura::Window" = type { %"class.ui::LayerDelegate", %"class.ui::LayerOwner", %"class.ui::EventTarget", %"class.ui::GestureConsumer", %"class.ui::PropertyHandler", %"class.ui::metadata::MetaDataProvider", %"class.viz::HostFrameSinkClient", %"class.gfx::Rect", %"class.aura::WindowTreeHost"*, i32, i8, i8, %"class.aura::WindowDelegate"*, %"class.aura::Window"*, %"class.std::__1::vector.49", i8, i32, %class.SkRegion, i32, i8, i8, %"class.std::__1::unique_ptr.56", %"class.std::__1::unique_ptr.62", %"class.std::__1::vector.68", i32, i32, i32, [4 x i8], %"class.base::ObserverList.75", i32, %"class.viz::SubtreeCaptureId", float, %"class.viz::FrameSinkId", i8, i8, i8, %"class.std::__1::unique_ptr.92", %"class.base::WeakPtr.98" }
%"class.ui::LayerDelegate" = type { i32 (...)** }
%"class.ui::LayerOwner" = type { i32 (...)**, %"class.std::__1::unique_ptr", %"class.ui::Layer"*, %"class.base::ObserverList" }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.ui::Layer"* }
%"class.ui::Layer" = type opaque
%"class.base::ObserverList" = type <{ %"class.std::__1::vector", %"class.base::LinkedList", i64, i32, [4 x i8] }>
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"*, %"class.std::__1::__compressed_pair.1" }
%"class.base::internal::UncheckedObserverAdapter" = type { i8* }
%"class.std::__1::__compressed_pair.1" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"struct.std::__1::__compressed_pair_elem.2" = type { %"class.base::internal::UncheckedObserverAdapter"* }
%"class.base::LinkedList" = type { %"class.base::LinkNode" }
%"class.base::LinkNode" = type { %"class.base::internal::LinkNodeBase" }
%"class.base::internal::LinkNodeBase" = type { %"class.base::internal::LinkNodeBase"*, %"class.base::internal::LinkNodeBase"* }
%"class.ui::EventTarget" = type { i32 (...)**, %"class.std::__1::vector.4", %"class.std::__1::vector.20", %"class.ui::EventHandler"* }
%"class.std::__1::vector.4" = type { %"class.std::__1::__vector_base.5" }
%"class.std::__1::__vector_base.5" = type { %"struct.ui::EventTarget::PrioritizedHandler"*, %"struct.ui::EventTarget::PrioritizedHandler"*, %"class.std::__1::__compressed_pair.27" }
%"struct.ui::EventTarget::PrioritizedHandler" = type <{ %"class.ui::EventHandler"*, i32, [4 x i8] }>
%"class.std::__1::__compressed_pair.27" = type { %"struct.std::__1::__compressed_pair_elem.28" }
%"struct.std::__1::__compressed_pair_elem.28" = type { %"struct.ui::EventTarget::PrioritizedHandler"* }
%"class.ui::GestureConsumer" = type { i32 (...)** }
%"class.ui::PropertyHandler" = type { i32 (...)**, %"class.std::__1::map" }
%"class.std::__1::map" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.32", %"class.std::__1::__compressed_pair.37" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type opaque
%"class.std::__1::__compressed_pair.32" = type { %"struct.std::__1::__compressed_pair_elem.33" }
%"struct.std::__1::__compressed_pair_elem.33" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.37" = type { %"struct.std::__1::__compressed_pair_elem.38" }
%"struct.std::__1::__compressed_pair_elem.38" = type { i64 }
%"class.ui::metadata::MetaDataProvider" = type { i32 (...)**, %"class.std::__1::map.40" }
%"class.std::__1::map.40" = type { %"class.std::__1::__tree.41" }
%"class.std::__1::__tree.41" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.42", %"class.std::__1::__compressed_pair.46" }
%"class.std::__1::__compressed_pair.42" = type { %"struct.std::__1::__compressed_pair_elem.33" }
%"class.std::__1::__compressed_pair.46" = type { %"struct.std::__1::__compressed_pair_elem.38" }
%"class.viz::HostFrameSinkClient" = type { i32 (...)** }
%"class.gfx::Rect" = type { %"class.gfx::Point", %"class.gfx::Size" }
%"class.gfx::Point" = type { i32, i32 }
%"class.gfx::Size" = type { i32, i32 }
%"class.aura::WindowTreeHost" = type opaque
%"class.aura::WindowDelegate" = type opaque
%class.SkRegion = type { %struct.SkIRect, %"struct.SkRegion::RunHead"* }
%struct.SkIRect = type { i32, i32, i32, i32 }
%"struct.SkRegion::RunHead" = type opaque
%"class.std::__1::unique_ptr.56" = type { %"class.std::__1::__compressed_pair.57" }
%"class.std::__1::__compressed_pair.57" = type { %"struct.std::__1::__compressed_pair_elem.58" }
%"struct.std::__1::__compressed_pair_elem.58" = type { %"class.aura::LayoutManager"* }
%"class.aura::LayoutManager" = type opaque
%"class.std::__1::unique_ptr.62" = type { %"class.std::__1::__compressed_pair.63" }
%"class.std::__1::__compressed_pair.63" = type { %"struct.std::__1::__compressed_pair_elem.64" }
%"struct.std::__1::__compressed_pair_elem.64" = type { %"class.aura::WindowTargeter"* }
%"class.aura::WindowTargeter" = type opaque
%"class.std::__1::vector.68" = type { %"class.std::__1::__vector_base.69" }
%"class.std::__1::__vector_base.69" = type { %"class.gfx::Rect"*, %"class.gfx::Rect"*, %"class.std::__1::__compressed_pair.70" }
%"class.std::__1::__compressed_pair.70" = type { %"struct.std::__1::__compressed_pair_elem.71" }
%"struct.std::__1::__compressed_pair_elem.71" = type { %"class.gfx::Rect"* }
%"class.base::ObserverList.75" = type <{ %"class.std::__1::vector.76", %"class.base::LinkedList.89", i64, i32, [4 x i8] }>
%"class.std::__1::vector.76" = type { %"class.std::__1::__vector_base.77" }
%"class.std::__1::__vector_base.77" = type { %"class.base::internal::CheckedObserverAdapter"*, %"class.base::internal::CheckedObserverAdapter"*, %"class.std::__1::__compressed_pair.84" }
%"class.base::internal::CheckedObserverAdapter" = type { %"class.base::WeakPtr" }
%"class.base::WeakPtr" = type { %"class.base::internal::WeakPtrBase" }
%"class.base::internal::WeakPtrBase" = type { %"class.base::internal::WeakReference", i64 }
%"class.base::internal::WeakReference" = type { %class.scoped_refptr }
%class.scoped_refptr = type { %"class.base::internal::WeakReference::Flag"* }
%"class.std::__1::__compressed_pair.84" = type { %"struct.std::__1::__compressed_pair_elem.85" }
%"struct.std::__1::__compressed_pair_elem.85" = type { %"class.base::internal::CheckedObserverAdapter"* }
%"class.base::LinkedList.89" = type { %"class.base::LinkNode.90" }
%"class.base::LinkNode.90" = type { %"class.base::internal::LinkNodeBase" }
%"class.viz::SubtreeCaptureId" = type { i32 }
%"class.viz::FrameSinkId" = type { i32, i32 }
%"class.std::__1::unique_ptr.92" = type { %"class.std::__1::__compressed_pair.93" }
%"class.std::__1::__compressed_pair.93" = type { %"struct.std::__1::__compressed_pair_elem.94" }
%"struct.std::__1::__compressed_pair_elem.94" = type { %"class.viz::ParentLocalSurfaceIdAllocator"* }
%"class.viz::ParentLocalSurfaceIdAllocator" = type opaque
%"class.base::WeakPtr.98" = type { %"class.base::internal::WeakPtrBase" }
%"class.std::__1::__compressed_pair.51" = type { %"struct.std::__1::__compressed_pair_elem.52" }
%"struct.std::__1::__compressed_pair_elem.52" = type { %"class.aura::Window"** }
%"class.aura::Env" = type { %"class.ui::EventTarget", %"class.base::SupportsUserData.base", [7 x i8], %"class.base::ObserverList.109", %"class.base::ObserverList.113", %"class.base::ObserverList.117", %"class.std::__1::set", %"class.std::__1::unique_ptr.130", i32, %"class.gfx::Point", i8, %"class.std::__1::unique_ptr.136", %"class.std::__1::unique_ptr.142", %"class.std::__1::unique_ptr.148", %"class.std::__1::unique_ptr.154", %"class.ui::ContextFactory"*, i8, %"class.std::__1::unique_ptr.160", %"class.std::__1::vector.166" }
%"class.base::SupportsUserData.base" = type <{ i32 (...)**, %"class.std::__1::map.100", %"class.base::SequenceCheckerDoNothing" }>
%"class.std::__1::map.100" = type { %"class.std::__1::__tree.101" }
%"class.std::__1::__tree.101" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.102", %"class.std::__1::__compressed_pair.106" }
%"class.std::__1::__compressed_pair.102" = type { %"struct.std::__1::__compressed_pair_elem.33" }
%"class.std::__1::__compressed_pair.106" = type { %"struct.std::__1::__compressed_pair_elem.38" }
%"class.base::SequenceCheckerDoNothing" = type { i8 }
%"class.base::ObserverList.109" = type <{ %"class.std::__1::vector", %"class.base::LinkedList.110", i64, i32, [4 x i8] }>
%"class.base::LinkedList.110" = type { %"class.base::LinkNode.111" }
%"class.base::LinkNode.111" = type { %"class.base::internal::LinkNodeBase" }
%"class.base::ObserverList.113" = type <{ %"class.std::__1::vector", %"class.base::LinkedList.114", i64, i32, [4 x i8] }>
%"class.base::LinkedList.114" = type { %"class.base::LinkNode.115" }
%"class.base::LinkNode.115" = type { %"class.base::internal::LinkNodeBase" }
%"class.base::ObserverList.117" = type <{ %"class.std::__1::vector.76", %"class.base::LinkedList.118", i64, i32, [4 x i8] }>
%"class.base::LinkedList.118" = type { %"class.base::LinkNode.119" }
%"class.base::LinkNode.119" = type { %"class.base::internal::LinkNodeBase" }
%"class.std::__1::set" = type { %"class.std::__1::__tree.121" }
%"class.std::__1::__tree.121" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.122", %"class.std::__1::__compressed_pair.126" }
%"class.std::__1::__compressed_pair.122" = type { %"struct.std::__1::__compressed_pair_elem.33" }
%"class.std::__1::__compressed_pair.126" = type { %"struct.std::__1::__compressed_pair_elem.38" }
%"class.std::__1::unique_ptr.130" = type { %"class.std::__1::__compressed_pair.131" }
%"class.std::__1::__compressed_pair.131" = type { %"struct.std::__1::__compressed_pair_elem.132" }
%"struct.std::__1::__compressed_pair_elem.132" = type { %"class.aura::EnvInputStateController"* }
%"class.aura::EnvInputStateController" = type opaque
%"class.std::__1::unique_ptr.136" = type { %"class.std::__1::__compressed_pair.137" }
%"class.std::__1::__compressed_pair.137" = type { %"struct.std::__1::__compressed_pair_elem.138" }
%"struct.std::__1::__compressed_pair_elem.138" = type { %"class.ui::GestureRecognizer"* }
%"class.ui::GestureRecognizer" = type { i32 (...)** }
%"class.std::__1::unique_ptr.142" = type { %"class.std::__1::__compressed_pair.143" }
%"class.std::__1::__compressed_pair.143" = type { %"struct.std::__1::__compressed_pair_elem.144" }
%"struct.std::__1::__compressed_pair_elem.144" = type { %"class.ui::CursorFactory"* }
%"class.ui::CursorFactory" = type opaque
%"class.std::__1::unique_ptr.148" = type { %"class.std::__1::__compressed_pair.149" }
%"class.std::__1::__compressed_pair.149" = type { %"struct.std::__1::__compressed_pair_elem.150" }
%"struct.std::__1::__compressed_pair_elem.150" = type { %"class.aura::InputStateLookup"* }
%"class.aura::InputStateLookup" = type opaque
%"class.std::__1::unique_ptr.154" = type { %"class.std::__1::__compressed_pair.155" }
%"class.std::__1::__compressed_pair.155" = type { %"struct.std::__1::__compressed_pair_elem.156" }
%"struct.std::__1::__compressed_pair_elem.156" = type { %"class.ui::PlatformEventSource"* }
%"class.ui::PlatformEventSource" = type opaque
%"class.ui::ContextFactory" = type opaque
%"class.std::__1::unique_ptr.160" = type { %"class.std::__1::__compressed_pair.161" }
%"class.std::__1::__compressed_pair.161" = type { %"struct.std::__1::__compressed_pair_elem.162" }
%"struct.std::__1::__compressed_pair_elem.162" = type { %"class.aura::WindowOcclusionTracker"* }
%"class.aura::WindowOcclusionTracker" = type opaque
%"class.std::__1::vector.166" = type { %"class.std::__1::__vector_base.167" }
%"class.std::__1::__vector_base.167" = type { %"class.aura::WindowTreeHost"**, %"class.aura::WindowTreeHost"**, %"class.std::__1::__compressed_pair.168" }
%"class.std::__1::__compressed_pair.168" = type { %"struct.std::__1::__compressed_pair_elem.169" }
%"struct.std::__1::__compressed_pair_elem.169" = type { %"class.aura::WindowTreeHost"** }
%"class.ui::KeyEvent" = type <{ %"class.ui::Event", i32, i32, i32, i8, [3 x i8], %"class.ui::DomKey", [4 x i8] }>
%"class.ui::DomKey" = type { i32 }
%"class.ui::MouseEvent" = type { %"class.ui::LocatedEvent", i32, %"class.gfx::Vector2dF", %"struct.ui::PointerDetails" }
%"class.ui::LocatedEvent" = type { %"class.ui::Event", %"class.gfx::PointF", %"class.gfx::PointF" }
%"class.gfx::PointF" = type { float, float }
%"class.gfx::Vector2dF" = type { float, float }
%"struct.ui::PointerDetails" = type { i32, float, float, float, float, float, float, float, i32, %"class.gfx::Vector2d" }
%"class.gfx::Vector2d" = type { i32, i32 }
%"class.ui::TouchEvent" = type <{ %"class.ui::LocatedEvent", i32, i8, i8, [2 x i8], %"struct.ui::PointerDetails", [4 x i8] }>
%"class.std::__1::__vector_base_common" = type { i8 }
%"class.std::__1::vector.175" = type { %"class.std::__1::__vector_base.176" }
%"class.std::__1::__vector_base.176" = type { %"class.ui::GestureConsumer"**, %"class.ui::GestureConsumer"**, %"class.std::__1::__compressed_pair.177" }
%"class.std::__1::__compressed_pair.177" = type { %"struct.std::__1::__compressed_pair_elem.178" }
%"struct.std::__1::__compressed_pair_elem.178" = type { %"class.ui::GestureConsumer"** }
%"class.std::__1::queue" = type { %"class.std::__1::deque" }
%"class.std::__1::deque" = type { %"class.std::__1::__deque_base" }
%"class.std::__1::__deque_base" = type { %"struct.std::__1::__split_buffer", i64, %"class.std::__1::__compressed_pair.187" }
%"struct.std::__1::__split_buffer" = type { %"class.aura::Window"***, %"class.aura::Window"***, %"class.aura::Window"***, %"class.std::__1::__compressed_pair.182" }
%"class.std::__1::__compressed_pair.182" = type { %"struct.std::__1::__compressed_pair_elem.183" }
%"struct.std::__1::__compressed_pair_elem.183" = type { %"class.aura::Window"*** }
%"class.std::__1::__compressed_pair.187" = type { %"struct.std::__1::__compressed_pair_elem.38" }
%"class.ui::ScrollEvent" = type <{ %"class.ui::MouseEvent", float, float, float, float, i32, i32, i32, [4 x i8] }>
%"class.ui::GestureEvent" = type <{ %"class.ui::LocatedEvent", %"struct.ui::GestureEventDetails", i32, [4 x i8] }>
%"struct.ui::GestureEventDetails" = type { i32, %"union.ui::GestureEventDetails::Details", i32, i8, i32, i32, %"class.gfx::RectF" }
%"union.ui::GestureEventDetails::Details" = type { %struct.anon }
%struct.anon = type { float, float, i8 }
%"class.gfx::RectF" = type { %"class.gfx::PointF", %"class.gfx::SizeF" }
%"class.gfx::SizeF" = type { float, float }
%"class.ui::CancelModeEvent" = type { %"class.ui::Event" }
%"struct.aura::WindowObserver::HierarchyChangeParams" = type { %"class.aura::Window"*, %"class.aura::Window"*, %"class.aura::Window"*, i32, %"class.aura::Window"* }
%"class.gfx::Transform" = type { %class.SkMatrix44 }
%class.SkMatrix44 = type <{ [4 x [4 x float]], i8, [3 x i8] }>
%"struct.std::__1::__split_buffer.202" = type { %"class.aura::Window"***, %"class.aura::Window"***, %"class.aura::Window"***, %"class.std::__1::__compressed_pair.203" }
%"class.std::__1::__compressed_pair.203" = type { %"struct.std::__1::__compressed_pair_elem.183", %"struct.std::__1::__compressed_pair_elem.204" }
%"struct.std::__1::__compressed_pair_elem.204" = type { %"class.std::__1::allocator.185"* }
%"class.std::__1::allocator.185" = type { i8 }

$_ZN4aura11EnvObserver17OnHostInitializedEPNS_14WindowTreeHostE = comdat any

$_ZN4aura11EnvObserver15OnHostDestroyedEPNS_14WindowTreeHostE = comdat any

$_ZN4aura11EnvObserver16OnWillDestroyEnvEv = comdat any

$_ZN4aura14WindowObserver25OnWindowHierarchyChangingERKNS0_21HierarchyChangeParamsE = comdat any

$_ZN4aura14WindowObserver24OnWindowHierarchyChangedERKNS0_21HierarchyChangeParamsE = comdat any

$_ZN4aura14WindowObserver13OnWindowAddedEPNS_6WindowE = comdat any

$_ZN4aura14WindowObserver18OnWillRemoveWindowEPNS_6WindowE = comdat any

$_ZN4aura14WindowObserver15OnWindowRemovedEPNS_6WindowE = comdat any

$_ZN4aura14WindowObserver21OnWindowParentChangedEPNS_6WindowES2_ = comdat any

$_ZN4aura14WindowObserver26OnWindowVisibilityChangingEPNS_6WindowEb = comdat any

$_ZN4aura14WindowObserver21OnWindowBoundsChangedEPNS_6WindowERKN3gfx4RectES6_N2ui20PropertyChangeReasonE = comdat any

$_ZN4aura14WindowObserver31OnWindowTargetTransformChangingEPNS_6WindowERKN3gfx9TransformE = comdat any

$_ZN4aura14WindowObserver19OnWindowTransformedEPNS_6WindowEN2ui20PropertyChangeReasonE = comdat any

$_ZN4aura14WindowObserver18OnWindowOpacitySetEPNS_6WindowEN2ui20PropertyChangeReasonE = comdat any

$_ZN4aura14WindowObserver21OnWindowAlphaShapeSetEPNS_6WindowE = comdat any

$_ZN4aura14WindowObserver26OnWindowTransparentChangedEPNS_6WindowEN2ui20PropertyChangeReasonE = comdat any

$_ZN4aura14WindowObserver23OnWindowStackingChangedEPNS_6WindowE = comdat any

$_ZN4aura14WindowObserver18OnWindowDestroyingEPNS_6WindowE = comdat any

$_ZN4aura14WindowObserver25OnWindowAddedToRootWindowEPNS_6WindowE = comdat any

$_ZN4aura14WindowObserver30OnWindowRemovingFromRootWindowEPNS_6WindowES2_ = comdat any

$_ZN4aura14WindowObserver20OnWindowTitleChangedEPNS_6WindowE = comdat any

$_ZN4aura14WindowObserver22OnWindowLayerRecreatedEPNS_6WindowE = comdat any

$_ZN4aura14WindowObserver24OnWindowOcclusionChangedEPNS_6WindowE = comdat any

$_ZN4aura14WindowObserver19OnResizeLoopStartedEPNS_6WindowE = comdat any

$_ZN4aura14WindowObserver17OnResizeLoopEndedEPNS_6WindowE = comdat any

$_ZN4aura14WindowObserver40OnWindowOpaqueRegionsForOcclusionChangedEPNS_6WindowE = comdat any

$_ZN4aura11EnvObserver19OnWindowInitializedEPNS_6WindowE = comdat any

$_ZN4aura11EnvObserverD2Ev = comdat any

$_ZN4aura11EnvObserverD0Ev = comdat any

$_ZNSt3__15dequeIPN4aura6WindowENS_9allocatorIS3_EEE19__add_back_capacityEv = comdat any

$_ZNSt3__114__split_bufferIPPN4aura6WindowENS_9allocatorIS4_EEE9push_backEOS4_ = comdat any

$_ZNSt3__114__split_bufferIPPN4aura6WindowENS_9allocatorIS4_EEE10push_frontEOS4_ = comdat any

$_ZNSt3__114__split_bufferIPPN4aura6WindowERNS_9allocatorIS4_EEE10push_frontERKS4_ = comdat any

$_ZTVN4aura11EnvObserverE = comdat any

@_ZN4aura6client20kChildModalParentKeyE = external local_unnamed_addr constant %"struct.ui::ClassProperty"*, align 8
@_ZTVN2wm24WindowModalityControllerE = hidden unnamed_addr constant { [16 x i8*], [8 x i8*], [30 x i8*] } { [16 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.wm::WindowModalityController"*)* @_ZN2wm24WindowModalityControllerD2Ev to i8*), i8* bitcast (void (%"class.wm::WindowModalityController"*)* @_ZN2wm24WindowModalityControllerD0Ev to i8*), i8* bitcast (void (%"class.ui::EventHandler"*, %"class.ui::Event"*)* @_ZN2ui12EventHandler7OnEventEPNS_5EventE to i8*), i8* bitcast (void (%"class.wm::WindowModalityController"*, %"class.ui::KeyEvent"*)* @_ZN2wm24WindowModalityController10OnKeyEventEPN2ui8KeyEventE to i8*), i8* bitcast (void (%"class.wm::WindowModalityController"*, %"class.ui::MouseEvent"*)* @_ZN2wm24WindowModalityController12OnMouseEventEPN2ui10MouseEventE to i8*), i8* bitcast (void (%"class.ui::EventHandler"*, %"class.ui::ScrollEvent"*)* @_ZN2ui12EventHandler13OnScrollEventEPNS_11ScrollEventE to i8*), i8* bitcast (void (%"class.wm::WindowModalityController"*, %"class.ui::TouchEvent"*)* @_ZN2wm24WindowModalityController12OnTouchEventEPN2ui10TouchEventE to i8*), i8* bitcast (void (%"class.ui::EventHandler"*, %"class.ui::GestureEvent"*)* @_ZN2ui12EventHandler14OnGestureEventEPNS_12GestureEventE to i8*), i8* bitcast (void (%"class.ui::EventHandler"*, %"class.ui::CancelModeEvent"*)* @_ZN2ui12EventHandler12OnCancelModeEPNS_15CancelModeEventE to i8*), i8* bitcast ({ i8*, i64 } (%"class.wm::WindowModalityController"*)* @_ZNK2wm24WindowModalityController13GetLogContextEv to i8*), i8* bitcast (void (%"class.wm::WindowModalityController"*, %"class.aura::Window"*)* @_ZN2wm24WindowModalityController19OnWindowInitializedEPN4aura6WindowE to i8*), i8* bitcast (void (%"class.wm::WindowModalityController"*, %"class.aura::Window"*, i8*, i64)* @_ZN2wm24WindowModalityController23OnWindowPropertyChangedEPN4aura6WindowEPKvl to i8*), i8* bitcast (void (%"class.wm::WindowModalityController"*, %"class.aura::Window"*, i1)* @_ZN2wm24WindowModalityController25OnWindowVisibilityChangedEPN4aura6WindowEb to i8*), i8* bitcast (void (%"class.wm::WindowModalityController"*, %"class.aura::Window"*)* @_ZN2wm24WindowModalityController17OnWindowDestroyedEPN4aura6WindowE to i8*)], [8 x i8*] [i8* inttoptr (i64 -40 to i8*), i8* null, i8* bitcast (void (%"class.wm::WindowModalityController"*, %"class.aura::Window"*)* @_ZThn40_N2wm24WindowModalityController19OnWindowInitializedEPN4aura6WindowE to i8*), i8* bitcast (void (%"class.aura::EnvObserver"*, %"class.aura::WindowTreeHost"*)* @_ZN4aura11EnvObserver17OnHostInitializedEPNS_14WindowTreeHostE to i8*), i8* bitcast (void (%"class.aura::EnvObserver"*, %"class.aura::WindowTreeHost"*)* @_ZN4aura11EnvObserver15OnHostDestroyedEPNS_14WindowTreeHostE to i8*), i8* bitcast (void (%"class.aura::EnvObserver"*)* @_ZN4aura11EnvObserver16OnWillDestroyEnvEv to i8*), i8* bitcast (void (%"class.wm::WindowModalityController"*)* @_ZThn40_N2wm24WindowModalityControllerD1Ev to i8*), i8* bitcast (void (%"class.wm::WindowModalityController"*)* @_ZThn40_N2wm24WindowModalityControllerD0Ev to i8*)], [30 x i8*] [i8* inttoptr (i64 -48 to i8*), i8* null, i8* bitcast (void (%"class.wm::WindowModalityController"*)* @_ZThn48_N2wm24WindowModalityControllerD1Ev to i8*), i8* bitcast (void (%"class.wm::WindowModalityController"*)* @_ZThn48_N2wm24WindowModalityControllerD0Ev to i8*), i8* bitcast (void (%"class.aura::WindowObserver"*, %"struct.aura::WindowObserver::HierarchyChangeParams"*)* @_ZN4aura14WindowObserver25OnWindowHierarchyChangingERKNS0_21HierarchyChangeParamsE to i8*), i8* bitcast (void (%"class.aura::WindowObserver"*, %"struct.aura::WindowObserver::HierarchyChangeParams"*)* @_ZN4aura14WindowObserver24OnWindowHierarchyChangedERKNS0_21HierarchyChangeParamsE to i8*), i8* bitcast (void (%"class.aura::WindowObserver"*, %"class.aura::Window"*)* @_ZN4aura14WindowObserver13OnWindowAddedEPNS_6WindowE to i8*), i8* bitcast (void (%"class.aura::WindowObserver"*, %"class.aura::Window"*)* @_ZN4aura14WindowObserver18OnWillRemoveWindowEPNS_6WindowE to i8*), i8* bitcast (void (%"class.aura::WindowObserver"*, %"class.aura::Window"*)* @_ZN4aura14WindowObserver15OnWindowRemovedEPNS_6WindowE to i8*), i8* bitcast (void (%"class.aura::WindowObserver"*, %"class.aura::Window"*, %"class.aura::Window"*)* @_ZN4aura14WindowObserver21OnWindowParentChangedEPNS_6WindowES2_ to i8*), i8* bitcast (void (%"class.wm::WindowModalityController"*, %"class.aura::Window"*, i8*, i64)* @_ZThn48_N2wm24WindowModalityController23OnWindowPropertyChangedEPN4aura6WindowEPKvl to i8*), i8* bitcast (void (%"class.aura::WindowObserver"*, %"class.aura::Window"*, i1)* @_ZN4aura14WindowObserver26OnWindowVisibilityChangingEPNS_6WindowEb to i8*), i8* bitcast (void (%"class.wm::WindowModalityController"*, %"class.aura::Window"*, i1)* @_ZThn48_N2wm24WindowModalityController25OnWindowVisibilityChangedEPN4aura6WindowEb to i8*), i8* bitcast (void (%"class.aura::WindowObserver"*, %"class.aura::Window"*, %"class.gfx::Rect"*, %"class.gfx::Rect"*, i32)* @_ZN4aura14WindowObserver21OnWindowBoundsChangedEPNS_6WindowERKN3gfx4RectES6_N2ui20PropertyChangeReasonE to i8*), i8* bitcast (void (%"class.aura::WindowObserver"*, %"class.aura::Window"*, %"class.gfx::Transform"*)* @_ZN4aura14WindowObserver31OnWindowTargetTransformChangingEPNS_6WindowERKN3gfx9TransformE to i8*), i8* bitcast (void (%"class.aura::WindowObserver"*, %"class.aura::Window"*, i32)* @_ZN4aura14WindowObserver19OnWindowTransformedEPNS_6WindowEN2ui20PropertyChangeReasonE to i8*), i8* bitcast (void (%"class.aura::WindowObserver"*, %"class.aura::Window"*, i32)* @_ZN4aura14WindowObserver18OnWindowOpacitySetEPNS_6WindowEN2ui20PropertyChangeReasonE to i8*), i8* bitcast (void (%"class.aura::WindowObserver"*, %"class.aura::Window"*)* @_ZN4aura14WindowObserver21OnWindowAlphaShapeSetEPNS_6WindowE to i8*), i8* bitcast (void (%"class.aura::WindowObserver"*, %"class.aura::Window"*, i32)* @_ZN4aura14WindowObserver26OnWindowTransparentChangedEPNS_6WindowEN2ui20PropertyChangeReasonE to i8*), i8* bitcast (void (%"class.aura::WindowObserver"*, %"class.aura::Window"*)* @_ZN4aura14WindowObserver23OnWindowStackingChangedEPNS_6WindowE to i8*), i8* bitcast (void (%"class.aura::WindowObserver"*, %"class.aura::Window"*)* @_ZN4aura14WindowObserver18OnWindowDestroyingEPNS_6WindowE to i8*), i8* bitcast (void (%"class.wm::WindowModalityController"*, %"class.aura::Window"*)* @_ZThn48_N2wm24WindowModalityController17OnWindowDestroyedEPN4aura6WindowE to i8*), i8* bitcast (void (%"class.aura::WindowObserver"*, %"class.aura::Window"*)* @_ZN4aura14WindowObserver25OnWindowAddedToRootWindowEPNS_6WindowE to i8*), i8* bitcast (void (%"class.aura::WindowObserver"*, %"class.aura::Window"*, %"class.aura::Window"*)* @_ZN4aura14WindowObserver30OnWindowRemovingFromRootWindowEPNS_6WindowES2_ to i8*), i8* bitcast (void (%"class.aura::WindowObserver"*, %"class.aura::Window"*)* @_ZN4aura14WindowObserver20OnWindowTitleChangedEPNS_6WindowE to i8*), i8* bitcast (void (%"class.aura::WindowObserver"*, %"class.aura::Window"*)* @_ZN4aura14WindowObserver22OnWindowLayerRecreatedEPNS_6WindowE to i8*), i8* bitcast (void (%"class.aura::WindowObserver"*, %"class.aura::Window"*)* @_ZN4aura14WindowObserver24OnWindowOcclusionChangedEPNS_6WindowE to i8*), i8* bitcast (void (%"class.aura::WindowObserver"*, %"class.aura::Window"*)* @_ZN4aura14WindowObserver19OnResizeLoopStartedEPNS_6WindowE to i8*), i8* bitcast (void (%"class.aura::WindowObserver"*, %"class.aura::Window"*)* @_ZN4aura14WindowObserver17OnResizeLoopEndedEPNS_6WindowE to i8*), i8* bitcast (void (%"class.aura::WindowObserver"*, %"class.aura::Window"*)* @_ZN4aura14WindowObserver40OnWindowOpaqueRegionsForOcclusionChangedEPNS_6WindowE to i8*)] }, align 8
@.str = private unnamed_addr constant [25 x i8] c"WindowModalityController\00", align 1
@_ZN4aura6client9kModalKeyE = external local_unnamed_addr constant %"struct.ui::ClassProperty.173"*, align 8
@_ZTVN4aura11EnvObserverE = linkonce_odr hidden unnamed_addr constant { [8 x i8*] } { [8 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.aura::EnvObserver"*, %"class.aura::Window"*)* @_ZN4aura11EnvObserver19OnWindowInitializedEPNS_6WindowE to i8*), i8* bitcast (void (%"class.aura::EnvObserver"*, %"class.aura::WindowTreeHost"*)* @_ZN4aura11EnvObserver17OnHostInitializedEPNS_14WindowTreeHostE to i8*), i8* bitcast (void (%"class.aura::EnvObserver"*, %"class.aura::WindowTreeHost"*)* @_ZN4aura11EnvObserver15OnHostDestroyedEPNS_14WindowTreeHostE to i8*), i8* bitcast (void (%"class.aura::EnvObserver"*)* @_ZN4aura11EnvObserver16OnWillDestroyEnvEv to i8*), i8* bitcast (void (%"class.aura::EnvObserver"*)* @_ZN4aura11EnvObserverD2Ev to i8*), i8* bitcast (void (%"class.aura::EnvObserver"*)* @_ZN4aura11EnvObserverD0Ev to i8*)] }, comdat, align 8

@_ZN2wm24WindowModalityControllerC1EPN2ui11EventTargetEPN4aura3EnvE = hidden unnamed_addr alias void (%"class.wm::WindowModalityController"*, %"class.ui::EventTarget"*, %"class.aura::Env"*), void (%"class.wm::WindowModalityController"*, %"class.ui::EventTarget"*, %"class.aura::Env"*)* @_ZN2wm24WindowModalityControllerC2EPN2ui11EventTargetEPN4aura3EnvE
@_ZN2wm24WindowModalityControllerD1Ev = hidden unnamed_addr alias void (%"class.wm::WindowModalityController"*), void (%"class.wm::WindowModalityController"*)* @_ZN2wm24WindowModalityControllerD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2wm14SetModalParentEPN4aura6WindowES2_(%"class.aura::Window"*, %"class.aura::Window"*) local_unnamed_addr #0 {
  %3 = getelementptr inbounds %"class.aura::Window", %"class.aura::Window"* %0, i64 0, i32 4
  %4 = load %"struct.ui::ClassProperty"*, %"struct.ui::ClassProperty"** @_ZN4aura6client20kChildModalParentKeyE, align 8
  tail call void @_ZN2ui15PropertyHandler11SetPropertyIPN4aura6WindowEEEvPKNS_13ClassPropertyIT_EES6_(%"class.ui::PropertyHandler"* %3, %"struct.ui::ClassProperty"* %4, %"class.aura::Window"* %1) #9
  ret void
}

declare void @_ZN2ui15PropertyHandler11SetPropertyIPN4aura6WindowEEEvPKNS_13ClassPropertyIT_EES6_(%"class.ui::PropertyHandler"*, %"struct.ui::ClassProperty"*, %"class.aura::Window"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden %"class.aura::Window"* @_ZN2wm17GetModalTransientEPN4aura6WindowE(%"class.aura::Window"*) local_unnamed_addr #0 {
  %2 = icmp eq %"class.aura::Window"* %0, null
  br i1 %2, label %8, label %3

3:                                                ; preds = %1
  %4 = tail call %"class.aura::Window"* @_ZN2wm17GetToplevelWindowEPKN4aura6WindowE(%"class.aura::Window"* nonnull %0) #9
  %5 = icmp eq %"class.aura::Window"* %4, null
  br i1 %5, label %8, label %6

6:                                                ; preds = %3
  %7 = tail call fastcc %"class.aura::Window"* @_ZN2wm12_GLOBAL__N_122GetModalTransientChildEPKN4aura6WindowES4_(%"class.aura::Window"* nonnull %4, %"class.aura::Window"* nonnull %0) #9
  br label %8

8:                                                ; preds = %1, %3, %6
  %9 = phi %"class.aura::Window"* [ null, %1 ], [ %7, %6 ], [ null, %3 ]
  ret %"class.aura::Window"* %9
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.aura::Window"* @_ZN2wm17GetModalTransientEPKN4aura6WindowE(%"class.aura::Window"*) local_unnamed_addr #0 {
  %2 = icmp eq %"class.aura::Window"* %0, null
  br i1 %2, label %8, label %3

3:                                                ; preds = %1
  %4 = tail call %"class.aura::Window"* @_ZN2wm17GetToplevelWindowEPKN4aura6WindowE(%"class.aura::Window"* nonnull %0) #9
  %5 = icmp eq %"class.aura::Window"* %4, null
  br i1 %5, label %8, label %6

6:                                                ; preds = %3
  %7 = tail call fastcc %"class.aura::Window"* @_ZN2wm12_GLOBAL__N_122GetModalTransientChildEPKN4aura6WindowES4_(%"class.aura::Window"* nonnull %4, %"class.aura::Window"* nonnull %0)
  br label %8

8:                                                ; preds = %6, %3, %1
  %9 = phi %"class.aura::Window"* [ null, %1 ], [ %7, %6 ], [ null, %3 ]
  ret %"class.aura::Window"* %9
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

declare %"class.aura::Window"* @_ZN2wm17GetToplevelWindowEPKN4aura6WindowE(%"class.aura::Window"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define internal fastcc %"class.aura::Window"* @_ZN2wm12_GLOBAL__N_122GetModalTransientChildEPKN4aura6WindowES4_(%"class.aura::Window"*, %"class.aura::Window"*) unnamed_addr #0 {
  %3 = tail call dereferenceable(24) %"class.std::__1::vector.49"* @_ZN2wm20GetTransientChildrenEPKN4aura6WindowE(%"class.aura::Window"* %0) #9
  %4 = getelementptr inbounds %"class.std::__1::vector.49", %"class.std::__1::vector.49"* %3, i64 0, i32 0, i32 0
  %5 = load %"class.aura::Window"**, %"class.aura::Window"*** %4, align 8
  %6 = getelementptr inbounds %"class.std::__1::vector.49", %"class.std::__1::vector.49"* %3, i64 0, i32 0, i32 1
  %7 = load %"class.aura::Window"**, %"class.aura::Window"*** %6, align 8
  %8 = icmp eq %"class.aura::Window"** %5, %7
  br i1 %8, label %45, label %9

9:                                                ; preds = %2
  %10 = load %"struct.ui::ClassProperty.173"*, %"struct.ui::ClassProperty.173"** @_ZN4aura6client9kModalKeyE, align 8
  %11 = load %"struct.ui::ClassProperty"*, %"struct.ui::ClassProperty"** @_ZN4aura6client20kChildModalParentKeyE, align 8
  br label %12

12:                                               ; preds = %9, %42
  %13 = phi %"class.aura::Window"** [ %5, %9 ], [ %43, %42 ]
  %14 = load %"class.aura::Window"*, %"class.aura::Window"** %13, align 8
  %15 = tail call zeroext i1 @_ZNK4aura6Window9IsVisibleEv(%"class.aura::Window"* %14) #9
  br i1 %15, label %16, label %42

16:                                               ; preds = %12
  %17 = getelementptr inbounds %"class.aura::Window", %"class.aura::Window"* %14, i64 0, i32 4
  %18 = tail call i32 @_ZNK2ui15PropertyHandler11GetPropertyINS_9ModalTypeEEET_PKNS_13ClassPropertyIS3_EE(%"class.ui::PropertyHandler"* %17, %"struct.ui::ClassProperty.173"* %10) #9
  %19 = icmp eq i32 %18, 1
  br i1 %19, label %31, label %20

20:                                               ; preds = %16
  %21 = tail call i32 @_ZNK2ui15PropertyHandler11GetPropertyINS_9ModalTypeEEET_PKNS_13ClassPropertyIS3_EE(%"class.ui::PropertyHandler"* %17, %"struct.ui::ClassProperty.173"* %10) #9
  %22 = icmp eq i32 %21, 3
  br i1 %22, label %31, label %23

23:                                               ; preds = %20
  %24 = tail call i32 @_ZNK2ui15PropertyHandler11GetPropertyINS_9ModalTypeEEET_PKNS_13ClassPropertyIS3_EE(%"class.ui::PropertyHandler"* %17, %"struct.ui::ClassProperty.173"* %10) #9
  %25 = icmp eq i32 %24, 2
  br i1 %25, label %26, label %42

26:                                               ; preds = %23
  %27 = tail call %"class.aura::Window"* @_ZNK2ui15PropertyHandler11GetPropertyIPN4aura6WindowEEET_PKNS_13ClassPropertyIS5_EE(%"class.ui::PropertyHandler"* %17, %"struct.ui::ClassProperty"* %11) #9
  %28 = icmp eq %"class.aura::Window"* %27, null
  br i1 %28, label %42, label %29

29:                                               ; preds = %26
  %30 = tail call zeroext i1 @_ZNK4aura6Window8ContainsEPKS0_(%"class.aura::Window"* nonnull %27, %"class.aura::Window"* %1) #9
  br i1 %30, label %31, label %42

31:                                               ; preds = %16, %20, %29
  %32 = tail call dereferenceable(24) %"class.std::__1::vector.49"* @_ZN2wm20GetTransientChildrenEPKN4aura6WindowE(%"class.aura::Window"* %14) #9
  %33 = getelementptr inbounds %"class.std::__1::vector.49", %"class.std::__1::vector.49"* %32, i64 0, i32 0, i32 0
  %34 = load %"class.aura::Window"**, %"class.aura::Window"*** %33, align 8
  %35 = getelementptr inbounds %"class.std::__1::vector.49", %"class.std::__1::vector.49"* %32, i64 0, i32 0, i32 1
  %36 = load %"class.aura::Window"**, %"class.aura::Window"*** %35, align 8
  %37 = icmp eq %"class.aura::Window"** %34, %36
  br i1 %37, label %45, label %38

38:                                               ; preds = %31
  %39 = tail call fastcc %"class.aura::Window"* @_ZN2wm12_GLOBAL__N_122GetModalTransientChildEPKN4aura6WindowES4_(%"class.aura::Window"* %14, %"class.aura::Window"* %1)
  %40 = icmp eq %"class.aura::Window"* %39, null
  %41 = select i1 %40, %"class.aura::Window"* %14, %"class.aura::Window"* %39
  ret %"class.aura::Window"* %41

42:                                               ; preds = %26, %23, %12, %29
  %43 = getelementptr inbounds %"class.aura::Window"*, %"class.aura::Window"** %13, i64 1
  %44 = icmp eq %"class.aura::Window"** %43, %7
  br i1 %44, label %45, label %12

45:                                               ; preds = %42, %2, %31
  %46 = phi %"class.aura::Window"* [ %14, %31 ], [ null, %2 ], [ null, %42 ]
  ret %"class.aura::Window"* %46
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2wm24WindowModalityControllerC2EPN2ui11EventTargetEPN4aura3EnvE(%"class.wm::WindowModalityController"*, %"class.ui::EventTarget"*, %"class.aura::Env"*) unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.wm::WindowModalityController", %"class.wm::WindowModalityController"* %0, i64 0, i32 0
  tail call void @_ZN2ui12EventHandlerC2Ev(%"class.ui::EventHandler"* %4) #9
  %5 = getelementptr inbounds %"class.wm::WindowModalityController", %"class.wm::WindowModalityController"* %0, i64 0, i32 1
  %6 = getelementptr inbounds %"class.aura::EnvObserver", %"class.aura::EnvObserver"* %5, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [8 x i8*] }, { [8 x i8*] }* @_ZTVN4aura11EnvObserverE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %6, align 8
  %7 = getelementptr inbounds %"class.wm::WindowModalityController", %"class.wm::WindowModalityController"* %0, i64 0, i32 2
  tail call void @_ZN4aura14WindowObserverC2Ev(%"class.aura::WindowObserver"* %7) #9
  %8 = getelementptr inbounds %"class.wm::WindowModalityController", %"class.wm::WindowModalityController"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*], [8 x i8*], [30 x i8*] }, { [16 x i8*], [8 x i8*], [30 x i8*] }* @_ZTVN2wm24WindowModalityControllerE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %8, align 8
  %9 = bitcast %"class.aura::EnvObserver"* %5 to <2 x i32 (...)**>*
  store <2 x i32 (...)**> <i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*], [8 x i8*], [30 x i8*] }, { [16 x i8*], [8 x i8*], [30 x i8*] }* @_ZTVN2wm24WindowModalityControllerE, i64 0, inrange i32 1, i64 2) to i32 (...)**), i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*], [8 x i8*], [30 x i8*] }, { [16 x i8*], [8 x i8*], [30 x i8*] }* @_ZTVN2wm24WindowModalityControllerE, i64 0, inrange i32 2, i64 2) to i32 (...)**)>, <2 x i32 (...)**>* %9, align 8
  %10 = getelementptr inbounds %"class.wm::WindowModalityController", %"class.wm::WindowModalityController"* %0, i64 0, i32 3
  %11 = icmp eq %"class.aura::Env"* %2, null
  br i1 %11, label %12, label %14

12:                                               ; preds = %3
  %13 = tail call %"class.aura::Env"* @_ZN4aura3Env11GetInstanceEv() #9
  br label %14

14:                                               ; preds = %3, %12
  %15 = phi %"class.aura::Env"* [ %13, %12 ], [ %2, %3 ]
  store %"class.aura::Env"* %15, %"class.aura::Env"** %10, align 8
  %16 = getelementptr inbounds %"class.wm::WindowModalityController", %"class.wm::WindowModalityController"* %0, i64 0, i32 4
  %17 = bitcast %"class.std::__1::vector.49"* %16 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %17, i8 0, i64 24, i1 false) #9
  %18 = getelementptr inbounds %"class.wm::WindowModalityController", %"class.wm::WindowModalityController"* %0, i64 0, i32 5
  store %"class.ui::EventTarget"* %1, %"class.ui::EventTarget"** %18, align 8
  tail call void @_ZN4aura3Env11AddObserverEPNS_11EnvObserverE(%"class.aura::Env"* %15, %"class.aura::EnvObserver"* %5) #9
  %19 = load %"class.ui::EventTarget"*, %"class.ui::EventTarget"** %18, align 8
  tail call void @_ZN2ui11EventTarget19AddPreTargetHandlerEPNS_12EventHandlerENS0_8PriorityE(%"class.ui::EventTarget"* %19, %"class.ui::EventHandler"* %4, i32 2) #9
  ret void
}

declare void @_ZN2ui12EventHandlerC2Ev(%"class.ui::EventHandler"*) unnamed_addr #1

declare void @_ZN4aura14WindowObserverC2Ev(%"class.aura::WindowObserver"*) unnamed_addr #1

declare %"class.aura::Env"* @_ZN4aura3Env11GetInstanceEv() local_unnamed_addr #1

declare void @_ZN4aura3Env11AddObserverEPNS_11EnvObserverE(%"class.aura::Env"*, %"class.aura::EnvObserver"*) local_unnamed_addr #1

declare void @_ZN2ui11EventTarget19AddPreTargetHandlerEPNS_12EventHandlerENS0_8PriorityE(%"class.ui::EventTarget"*, %"class.ui::EventHandler"*, i32) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2wm24WindowModalityControllerD2Ev(%"class.wm::WindowModalityController"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.wm::WindowModalityController", %"class.wm::WindowModalityController"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*], [8 x i8*], [30 x i8*] }, { [16 x i8*], [8 x i8*], [30 x i8*] }* @_ZTVN2wm24WindowModalityControllerE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.wm::WindowModalityController", %"class.wm::WindowModalityController"* %0, i64 0, i32 1
  %4 = getelementptr inbounds %"class.wm::WindowModalityController", %"class.wm::WindowModalityController"* %0, i64 0, i32 2
  %5 = bitcast %"class.aura::EnvObserver"* %3 to <2 x i32 (...)**>*
  store <2 x i32 (...)**> <i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*], [8 x i8*], [30 x i8*] }, { [16 x i8*], [8 x i8*], [30 x i8*] }* @_ZTVN2wm24WindowModalityControllerE, i64 0, inrange i32 1, i64 2) to i32 (...)**), i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*], [8 x i8*], [30 x i8*] }, { [16 x i8*], [8 x i8*], [30 x i8*] }* @_ZTVN2wm24WindowModalityControllerE, i64 0, inrange i32 2, i64 2) to i32 (...)**)>, <2 x i32 (...)**>* %5, align 8
  %6 = getelementptr inbounds %"class.wm::WindowModalityController", %"class.wm::WindowModalityController"* %0, i64 0, i32 5
  %7 = load %"class.ui::EventTarget"*, %"class.ui::EventTarget"** %6, align 8
  %8 = getelementptr inbounds %"class.wm::WindowModalityController", %"class.wm::WindowModalityController"* %0, i64 0, i32 0
  tail call void @_ZN2ui11EventTarget22RemovePreTargetHandlerEPNS_12EventHandlerE(%"class.ui::EventTarget"* %7, %"class.ui::EventHandler"* %8) #9
  %9 = getelementptr inbounds %"class.wm::WindowModalityController", %"class.wm::WindowModalityController"* %0, i64 0, i32 3
  %10 = load %"class.aura::Env"*, %"class.aura::Env"** %9, align 8
  tail call void @_ZN4aura3Env14RemoveObserverEPNS_11EnvObserverE(%"class.aura::Env"* %10, %"class.aura::EnvObserver"* %3) #9
  %11 = getelementptr inbounds %"class.wm::WindowModalityController", %"class.wm::WindowModalityController"* %0, i64 0, i32 4
  %12 = getelementptr inbounds %"class.wm::WindowModalityController", %"class.wm::WindowModalityController"* %0, i64 0, i32 4, i32 0, i32 1
  %13 = bitcast %"class.aura::Window"*** %12 to i64*
  %14 = load i64, i64* %13, align 8
  %15 = bitcast %"class.std::__1::vector.49"* %11 to i64*
  %16 = load i64, i64* %15, align 8
  %17 = icmp eq i64 %14, %16
  br i1 %17, label %18, label %24

18:                                               ; preds = %24, %1
  %19 = phi i64 [ %14, %1 ], [ %32, %24 ]
  %20 = icmp eq i64 %19, 0
  br i1 %20, label %23, label %21

21:                                               ; preds = %18
  store i64 %19, i64* %13, align 8
  %22 = inttoptr i64 %19 to i8*
  tail call void @_ZdlPv(i8* %22) #10
  br label %23

23:                                               ; preds = %18, %21
  tail call void @_ZN4aura14WindowObserverD2Ev(%"class.aura::WindowObserver"* %4) #9
  tail call void @_ZN2ui12EventHandlerD2Ev(%"class.ui::EventHandler"* %8) #9
  ret void

24:                                               ; preds = %1, %24
  %25 = phi i64 [ %32, %24 ], [ %16, %1 ]
  %26 = phi i64 [ %30, %24 ], [ 0, %1 ]
  %27 = inttoptr i64 %25 to %"class.aura::Window"**
  %28 = getelementptr inbounds %"class.aura::Window"*, %"class.aura::Window"** %27, i64 %26
  %29 = load %"class.aura::Window"*, %"class.aura::Window"** %28, align 8
  tail call void @_ZN4aura6Window14RemoveObserverEPNS_14WindowObserverE(%"class.aura::Window"* %29, %"class.aura::WindowObserver"* %4) #9
  %30 = add nuw i64 %26, 1
  %31 = load i64, i64* %13, align 8
  %32 = load i64, i64* %15, align 8
  %33 = sub i64 %31, %32
  %34 = ashr exact i64 %33, 3
  %35 = icmp ult i64 %30, %34
  br i1 %35, label %24, label %18
}

declare void @_ZN2ui11EventTarget22RemovePreTargetHandlerEPNS_12EventHandlerE(%"class.ui::EventTarget"*, %"class.ui::EventHandler"*) local_unnamed_addr #1

declare void @_ZN4aura3Env14RemoveObserverEPNS_11EnvObserverE(%"class.aura::Env"*, %"class.aura::EnvObserver"*) local_unnamed_addr #1

declare void @_ZN4aura6Window14RemoveObserverEPNS_14WindowObserverE(%"class.aura::Window"*, %"class.aura::WindowObserver"*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN4aura14WindowObserverD2Ev(%"class.aura::WindowObserver"*) unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN2ui12EventHandlerD2Ev(%"class.ui::EventHandler"*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn40_N2wm24WindowModalityControllerD1Ev(%"class.wm::WindowModalityController"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.wm::WindowModalityController", %"class.wm::WindowModalityController"* %0, i64 -1, i32 3
  %3 = bitcast %"class.aura::Env"** %2 to %"class.wm::WindowModalityController"*
  tail call void @_ZN2wm24WindowModalityControllerD2Ev(%"class.wm::WindowModalityController"* %3) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn48_N2wm24WindowModalityControllerD1Ev(%"class.wm::WindowModalityController"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.wm::WindowModalityController", %"class.wm::WindowModalityController"* %0, i64 -1, i32 2, i32 0, i32 1, i32 0, i32 1
  %3 = bitcast i64* %2 to %"class.wm::WindowModalityController"*
  tail call void @_ZN2wm24WindowModalityControllerD2Ev(%"class.wm::WindowModalityController"* %3) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2wm24WindowModalityControllerD0Ev(%"class.wm::WindowModalityController"*) unnamed_addr #0 align 2 {
  tail call void @_ZN2wm24WindowModalityControllerD2Ev(%"class.wm::WindowModalityController"* %0) #9
  %2 = bitcast %"class.wm::WindowModalityController"* %0 to i8*
  tail call void @_ZdlPv(i8* %2) #10
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn40_N2wm24WindowModalityControllerD0Ev(%"class.wm::WindowModalityController"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.wm::WindowModalityController", %"class.wm::WindowModalityController"* %0, i64 -1, i32 3
  %3 = bitcast %"class.aura::Env"** %2 to %"class.wm::WindowModalityController"*
  tail call void @_ZN2wm24WindowModalityControllerD2Ev(%"class.wm::WindowModalityController"* %3) #9
  %4 = bitcast %"class.aura::Env"** %2 to i8*
  tail call void @_ZdlPv(i8* %4) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn48_N2wm24WindowModalityControllerD0Ev(%"class.wm::WindowModalityController"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.wm::WindowModalityController", %"class.wm::WindowModalityController"* %0, i64 -1, i32 2, i32 0, i32 1, i32 0, i32 1
  %3 = bitcast i64* %2 to %"class.wm::WindowModalityController"*
  tail call void @_ZN2wm24WindowModalityControllerD2Ev(%"class.wm::WindowModalityController"* %3) #9
  %4 = bitcast i64* %2 to i8*
  tail call void @_ZdlPv(i8* %4) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2wm24WindowModalityController10OnKeyEventEPN2ui8KeyEventE(%"class.wm::WindowModalityController"* nocapture readnone, %"class.ui::KeyEvent"*) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.ui::KeyEvent", %"class.ui::KeyEvent"* %1, i64 0, i32 0
  %4 = getelementptr inbounds %"class.ui::KeyEvent", %"class.ui::KeyEvent"* %1, i64 0, i32 0, i32 8
  %5 = load %"class.ui::EventTarget"*, %"class.ui::EventTarget"** %4, align 8
  %6 = icmp eq %"class.ui::EventTarget"* %5, null
  %7 = getelementptr inbounds %"class.ui::EventTarget", %"class.ui::EventTarget"* %5, i64 -2, i32 2, i32 0, i32 1
  %8 = bitcast %"class.ui::EventHandler"*** %7 to %"class.aura::Window"*
  %9 = icmp eq %"class.ui::EventHandler"*** %7, null
  %10 = or i1 %6, %9
  br i1 %10, label %18, label %11

11:                                               ; preds = %2
  %12 = tail call %"class.aura::Window"* @_ZN2wm17GetToplevelWindowEPKN4aura6WindowE(%"class.aura::Window"* nonnull %8) #9
  %13 = icmp eq %"class.aura::Window"* %12, null
  br i1 %13, label %18, label %14

14:                                               ; preds = %11
  %15 = tail call fastcc %"class.aura::Window"* @_ZN2wm12_GLOBAL__N_122GetModalTransientChildEPKN4aura6WindowES4_(%"class.aura::Window"* nonnull %12, %"class.aura::Window"* nonnull %8) #9
  %16 = icmp eq %"class.aura::Window"* %15, null
  br i1 %16, label %18, label %17

17:                                               ; preds = %14
  tail call void @_ZN2ui5Event10SetHandledEv(%"class.ui::Event"* %3) #9
  br label %18

18:                                               ; preds = %11, %2, %14, %17
  ret void
}

declare void @_ZN2ui5Event10SetHandledEv(%"class.ui::Event"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2wm24WindowModalityController12OnMouseEventEPN2ui10MouseEventE(%"class.wm::WindowModalityController"* nocapture readnone, %"class.ui::MouseEvent"*) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.ui::MouseEvent", %"class.ui::MouseEvent"* %1, i64 0, i32 0, i32 0, i32 8
  %4 = load %"class.ui::EventTarget"*, %"class.ui::EventTarget"** %3, align 8
  %5 = icmp eq %"class.ui::EventTarget"* %4, null
  %6 = getelementptr inbounds %"class.ui::EventTarget", %"class.ui::EventTarget"* %4, i64 -2, i32 2, i32 0, i32 1
  %7 = bitcast %"class.ui::EventHandler"*** %6 to %"class.aura::Window"*
  %8 = select i1 %5, %"class.aura::Window"* null, %"class.aura::Window"* %7
  %9 = getelementptr inbounds %"class.ui::MouseEvent", %"class.ui::MouseEvent"* %1, i64 0, i32 0
  %10 = tail call zeroext i1 @_ZN2wm24WindowModalityController19ProcessLocatedEventEPN4aura6WindowEPN2ui12LocatedEventE(%"class.wm::WindowModalityController"* undef, %"class.aura::Window"* %8, %"class.ui::LocatedEvent"* %9)
  br i1 %10, label %11, label %13

11:                                               ; preds = %2
  %12 = getelementptr inbounds %"class.ui::MouseEvent", %"class.ui::MouseEvent"* %1, i64 0, i32 0, i32 0
  tail call void @_ZN2ui5Event10SetHandledEv(%"class.ui::Event"* %12) #9
  br label %13

13:                                               ; preds = %11, %2
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN2wm24WindowModalityController19ProcessLocatedEventEPN4aura6WindowEPN2ui12LocatedEventE(%"class.wm::WindowModalityController"* nocapture readnone, %"class.aura::Window"*, %"class.ui::LocatedEvent"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.ui::LocatedEvent", %"class.ui::LocatedEvent"* %2, i64 0, i32 0, i32 10
  %5 = load i32, i32* %4, align 4
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %7, label %33

7:                                                ; preds = %3
  %8 = icmp eq %"class.aura::Window"* %1, null
  br i1 %8, label %27, label %9

9:                                                ; preds = %7
  %10 = tail call %"class.aura::Window"* @_ZN2wm17GetToplevelWindowEPKN4aura6WindowE(%"class.aura::Window"* nonnull %1) #9
  %11 = icmp eq %"class.aura::Window"* %10, null
  br i1 %11, label %27, label %12

12:                                               ; preds = %9
  %13 = tail call fastcc %"class.aura::Window"* @_ZN2wm12_GLOBAL__N_122GetModalTransientChildEPKN4aura6WindowES4_(%"class.aura::Window"* nonnull %10, %"class.aura::Window"* nonnull %1) #9
  %14 = icmp eq %"class.aura::Window"* %13, null
  br i1 %14, label %27, label %15

15:                                               ; preds = %12
  %16 = getelementptr inbounds %"class.ui::LocatedEvent", %"class.ui::LocatedEvent"* %2, i64 0, i32 0, i32 1
  %17 = load i32, i32* %16, align 8
  switch i32 %17, label %27 [
    i32 1, label %18
    i32 12, label %18
  ]

18:                                               ; preds = %15, %15
  %19 = getelementptr inbounds %"class.aura::Window", %"class.aura::Window"* %13, i64 0, i32 4
  %20 = load %"struct.ui::ClassProperty.173"*, %"struct.ui::ClassProperty.173"** @_ZN4aura6client9kModalKeyE, align 8
  %21 = tail call i32 @_ZNK2ui15PropertyHandler11GetPropertyINS_9ModalTypeEEET_PKNS_13ClassPropertyIS3_EE(%"class.ui::PropertyHandler"* %19, %"struct.ui::ClassProperty.173"* %20) #9
  %22 = icmp eq i32 %21, 1
  br i1 %22, label %23, label %25

23:                                               ; preds = %18
  %24 = tail call %"class.aura::Window"* @_ZN2wm17GetToplevelWindowEPN4aura6WindowE(%"class.aura::Window"* nonnull %1) #9
  tail call void @_ZN2wm14ActivateWindowEPN4aura6WindowE(%"class.aura::Window"* %24) #9
  br label %25

25:                                               ; preds = %23, %18
  %26 = tail call zeroext i1 @_ZN2wm13AnimateWindowEPN4aura6WindowENS_19WindowAnimationTypeE(%"class.aura::Window"* nonnull %13, i32 0) #9
  br label %27

27:                                               ; preds = %12, %15, %9, %7, %25
  %28 = phi i1 [ true, %25 ], [ false, %12 ], [ false, %7 ], [ false, %9 ], [ true, %15 ]
  %29 = getelementptr inbounds %"class.ui::LocatedEvent", %"class.ui::LocatedEvent"* %2, i64 0, i32 0, i32 1
  %30 = load i32, i32* %29, align 8
  %31 = icmp ne i32 %30, 14
  %32 = and i1 %28, %31
  br label %33

33:                                               ; preds = %3, %27
  %34 = phi i1 [ %32, %27 ], [ false, %3 ]
  ret i1 %34
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2wm24WindowModalityController12OnTouchEventEPN2ui10TouchEventE(%"class.wm::WindowModalityController"* nocapture readnone, %"class.ui::TouchEvent"*) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.ui::TouchEvent", %"class.ui::TouchEvent"* %1, i64 0, i32 0, i32 0, i32 8
  %4 = load %"class.ui::EventTarget"*, %"class.ui::EventTarget"** %3, align 8
  %5 = icmp eq %"class.ui::EventTarget"* %4, null
  %6 = getelementptr inbounds %"class.ui::EventTarget", %"class.ui::EventTarget"* %4, i64 -2, i32 2, i32 0, i32 1
  %7 = bitcast %"class.ui::EventHandler"*** %6 to %"class.aura::Window"*
  %8 = select i1 %5, %"class.aura::Window"* null, %"class.aura::Window"* %7
  %9 = getelementptr inbounds %"class.ui::TouchEvent", %"class.ui::TouchEvent"* %1, i64 0, i32 0
  %10 = tail call zeroext i1 @_ZN2wm24WindowModalityController19ProcessLocatedEventEPN4aura6WindowEPN2ui12LocatedEventE(%"class.wm::WindowModalityController"* undef, %"class.aura::Window"* %8, %"class.ui::LocatedEvent"* %9)
  br i1 %10, label %11, label %13

11:                                               ; preds = %2
  %12 = getelementptr inbounds %"class.ui::TouchEvent", %"class.ui::TouchEvent"* %1, i64 0, i32 0, i32 0
  tail call void @_ZN2ui5Event10SetHandledEv(%"class.ui::Event"* %12) #9
  br label %13

13:                                               ; preds = %11, %2
  ret void
}

; Function Attrs: nounwind readnone ssp uwtable
define hidden { i8*, i64 } @_ZNK2wm24WindowModalityController13GetLogContextEv(%"class.wm::WindowModalityController"* nocapture readnone) unnamed_addr #5 align 2 {
  ret { i8*, i64 } { i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str, i64 0, i64 0), i64 24 }
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2wm24WindowModalityController19OnWindowInitializedEPN4aura6WindowE(%"class.wm::WindowModalityController"*, %"class.aura::Window"*) unnamed_addr #0 align 2 {
  %3 = ptrtoint %"class.aura::Window"* %1 to i64
  %4 = getelementptr inbounds %"class.wm::WindowModalityController", %"class.wm::WindowModalityController"* %0, i64 0, i32 4
  %5 = getelementptr inbounds %"class.wm::WindowModalityController", %"class.wm::WindowModalityController"* %0, i64 0, i32 4, i32 0, i32 1
  %6 = load %"class.aura::Window"**, %"class.aura::Window"*** %5, align 8
  %7 = getelementptr inbounds %"class.wm::WindowModalityController", %"class.wm::WindowModalityController"* %0, i64 0, i32 4, i32 0, i32 2, i32 0, i32 0
  %8 = load %"class.aura::Window"**, %"class.aura::Window"*** %7, align 8
  %9 = icmp eq %"class.aura::Window"** %6, %8
  %10 = ptrtoint %"class.aura::Window"** %8 to i64
  br i1 %9, label %16, label %11

11:                                               ; preds = %2
  %12 = bitcast %"class.aura::Window"** %6 to i64*
  store i64 %3, i64* %12, align 8
  %13 = getelementptr inbounds %"class.aura::Window"*, %"class.aura::Window"** %6, i64 1
  %14 = ptrtoint %"class.aura::Window"** %13 to i64
  %15 = bitcast %"class.aura::Window"*** %5 to i64*
  store i64 %14, i64* %15, align 8
  br label %73

16:                                               ; preds = %2
  %17 = ptrtoint %"class.aura::Window"** %6 to i64
  %18 = bitcast %"class.aura::Window"*** %5 to i64*
  %19 = bitcast %"class.std::__1::vector.49"* %4 to i64*
  %20 = load i64, i64* %19, align 8
  %21 = sub i64 %17, %20
  %22 = ashr exact i64 %21, 3
  %23 = add nsw i64 %22, 1
  %24 = icmp ugt i64 %23, 2305843009213693951
  br i1 %24, label %25, label %27

25:                                               ; preds = %16
  %26 = bitcast %"class.std::__1::vector.49"* %4 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %26) #11
  unreachable

27:                                               ; preds = %16
  %28 = bitcast %"class.aura::Window"*** %7 to i64*
  %29 = sub i64 %10, %20
  %30 = ashr exact i64 %29, 3
  %31 = icmp ult i64 %30, 1152921504606846975
  br i1 %31, label %32, label %40

32:                                               ; preds = %27
  %33 = ashr exact i64 %29, 2
  %34 = icmp ult i64 %33, %23
  %35 = select i1 %34, i64 %23, i64 %33
  %36 = icmp eq i64 %35, 0
  br i1 %36, label %45, label %37

37:                                               ; preds = %32
  %38 = icmp ugt i64 %35, 2305843009213693951
  br i1 %38, label %39, label %40

39:                                               ; preds = %37
  tail call void @abort() #11
  unreachable

40:                                               ; preds = %37, %27
  %41 = phi i64 [ %35, %37 ], [ 2305843009213693951, %27 ]
  %42 = shl i64 %41, 3
  %43 = tail call i8* @_Znwm(i64 %42) #10
  %44 = bitcast i8* %43 to %"class.aura::Window"**
  br label %45

45:                                               ; preds = %40, %32
  %46 = phi i64 [ %41, %40 ], [ 0, %32 ]
  %47 = phi %"class.aura::Window"** [ %44, %40 ], [ null, %32 ]
  %48 = getelementptr inbounds %"class.aura::Window"*, %"class.aura::Window"** %47, i64 %22
  %49 = getelementptr inbounds %"class.aura::Window"*, %"class.aura::Window"** %47, i64 %46
  %50 = ptrtoint %"class.aura::Window"** %49 to i64
  %51 = bitcast %"class.aura::Window"** %48 to i64*
  store i64 %3, i64* %51, align 8
  %52 = getelementptr inbounds %"class.aura::Window"*, %"class.aura::Window"** %48, i64 1
  %53 = ptrtoint %"class.aura::Window"** %52 to i64
  %54 = getelementptr inbounds %"class.std::__1::vector.49", %"class.std::__1::vector.49"* %4, i64 0, i32 0, i32 0
  %55 = load %"class.aura::Window"**, %"class.aura::Window"*** %54, align 8
  %56 = load i64, i64* %18, align 8
  %57 = ptrtoint %"class.aura::Window"** %55 to i64
  %58 = sub i64 %56, %57
  %59 = ashr exact i64 %58, 3
  %60 = sub nsw i64 0, %59
  %61 = getelementptr inbounds %"class.aura::Window"*, %"class.aura::Window"** %48, i64 %60
  %62 = ptrtoint %"class.aura::Window"** %61 to i64
  %63 = icmp sgt i64 %58, 0
  br i1 %63, label %64, label %68

64:                                               ; preds = %45
  %65 = bitcast %"class.aura::Window"** %61 to i8*
  %66 = bitcast %"class.aura::Window"** %55 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %65, i8* align 8 %66, i64 %58, i1 false) #9
  %67 = load %"class.aura::Window"**, %"class.aura::Window"*** %54, align 8
  br label %68

68:                                               ; preds = %64, %45
  %69 = phi %"class.aura::Window"** [ %55, %45 ], [ %67, %64 ]
  store i64 %62, i64* %19, align 8
  store i64 %53, i64* %18, align 8
  store i64 %50, i64* %28, align 8
  %70 = icmp eq %"class.aura::Window"** %69, null
  br i1 %70, label %73, label %71

71:                                               ; preds = %68
  %72 = bitcast %"class.aura::Window"** %69 to i8*
  tail call void @_ZdlPv(i8* %72) #10
  br label %73

73:                                               ; preds = %11, %68, %71
  %74 = getelementptr inbounds %"class.wm::WindowModalityController", %"class.wm::WindowModalityController"* %0, i64 0, i32 2
  tail call void @_ZN4aura6Window11AddObserverEPNS_14WindowObserverE(%"class.aura::Window"* %1, %"class.aura::WindowObserver"* %74) #9
  ret void
}

declare void @_ZN4aura6Window11AddObserverEPNS_14WindowObserverE(%"class.aura::Window"*, %"class.aura::WindowObserver"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn40_N2wm24WindowModalityController19OnWindowInitializedEPN4aura6WindowE(%"class.wm::WindowModalityController"*, %"class.aura::Window"*) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.wm::WindowModalityController", %"class.wm::WindowModalityController"* %0, i64 -1, i32 3
  %4 = bitcast %"class.aura::Env"** %3 to %"class.wm::WindowModalityController"*
  tail call void @_ZN2wm24WindowModalityController19OnWindowInitializedEPN4aura6WindowE(%"class.wm::WindowModalityController"* %4, %"class.aura::Window"* %1)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2wm24WindowModalityController23OnWindowPropertyChangedEPN4aura6WindowEPKvl(%"class.wm::WindowModalityController"* nocapture readonly, %"class.aura::Window"*, i8* readnone, i64) unnamed_addr #0 align 2 {
  %5 = load %"struct.ui::ClassProperty.173"*, %"struct.ui::ClassProperty.173"** @_ZN4aura6client9kModalKeyE, align 8
  %6 = bitcast %"struct.ui::ClassProperty.173"* %5 to i8*
  %7 = icmp eq i8* %6, %2
  br i1 %7, label %8, label %15

8:                                                ; preds = %4
  %9 = getelementptr inbounds %"class.aura::Window", %"class.aura::Window"* %1, i64 0, i32 4
  %10 = tail call i32 @_ZNK2ui15PropertyHandler11GetPropertyINS_9ModalTypeEEET_PKNS_13ClassPropertyIS3_EE(%"class.ui::PropertyHandler"* %9, %"struct.ui::ClassProperty.173"* %5) #9
  %11 = icmp eq i32 %10, 0
  br i1 %11, label %15, label %12

12:                                               ; preds = %8
  %13 = tail call zeroext i1 @_ZNK4aura6Window9IsVisibleEv(%"class.aura::Window"* %1) #9
  br i1 %13, label %14, label %15

14:                                               ; preds = %12
  tail call void @_ZN2wm14ActivateWindowEPN4aura6WindowE(%"class.aura::Window"* %1) #9
  tail call void @_ZN2wm24WindowModalityController34CancelTouchesOnTransientWindowTreeEPN4aura6WindowE(%"class.wm::WindowModalityController"* %0, %"class.aura::Window"* %1)
  br label %15

15:                                               ; preds = %8, %14, %12, %4
  ret void
}

declare i32 @_ZNK2ui15PropertyHandler11GetPropertyINS_9ModalTypeEEET_PKNS_13ClassPropertyIS3_EE(%"class.ui::PropertyHandler"*, %"struct.ui::ClassProperty.173"*) local_unnamed_addr #1

declare zeroext i1 @_ZNK4aura6Window9IsVisibleEv(%"class.aura::Window"*) local_unnamed_addr #1

declare void @_ZN2wm14ActivateWindowEPN4aura6WindowE(%"class.aura::Window"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2wm24WindowModalityController34CancelTouchesOnTransientWindowTreeEPN4aura6WindowE(%"class.wm::WindowModalityController"* nocapture readonly, %"class.aura::Window"*) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.std::__1::vector.175", align 8
  %4 = alloca %"class.std::__1::queue", align 8
  %5 = tail call %"class.aura::Window"* @_ZN2wm18GetTransientParentEPN4aura6WindowE(%"class.aura::Window"* %1) #9
  %6 = icmp eq %"class.aura::Window"* %5, null
  br i1 %6, label %12, label %7

7:                                                ; preds = %2, %7
  %8 = phi %"class.aura::Window"* [ %9, %7 ], [ %1, %2 ]
  %9 = tail call %"class.aura::Window"* @_ZN2wm18GetTransientParentEPN4aura6WindowE(%"class.aura::Window"* %8) #9
  %10 = tail call %"class.aura::Window"* @_ZN2wm18GetTransientParentEPN4aura6WindowE(%"class.aura::Window"* %9) #9
  %11 = icmp eq %"class.aura::Window"* %10, null
  br i1 %11, label %12, label %7

12:                                               ; preds = %7, %2
  %13 = phi %"class.aura::Window"* [ %1, %2 ], [ %9, %7 ]
  %14 = ptrtoint %"class.aura::Window"* %13 to i64
  %15 = bitcast %"class.std::__1::vector.175"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %15) #9
  %16 = getelementptr inbounds %"class.std::__1::vector.175", %"class.std::__1::vector.175"* %3, i64 0, i32 0, i32 0
  %17 = getelementptr inbounds %"class.std::__1::vector.175", %"class.std::__1::vector.175"* %3, i64 0, i32 0, i32 1
  %18 = getelementptr inbounds %"class.std::__1::vector.175", %"class.std::__1::vector.175"* %3, i64 0, i32 0, i32 2, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %15, i8 0, i64 24, i1 false) #9
  %19 = bitcast %"class.std::__1::queue"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %19) #9
  %20 = getelementptr inbounds %"class.std::__1::queue", %"class.std::__1::queue"* %4, i64 0, i32 0, i32 0, i32 0, i32 0
  %21 = getelementptr inbounds %"class.std::__1::queue", %"class.std::__1::queue"* %4, i64 0, i32 0, i32 0, i32 0, i32 1
  %22 = getelementptr inbounds %"class.std::__1::queue", %"class.std::__1::queue"* %4, i64 0, i32 0, i32 0, i32 0, i32 2
  %23 = getelementptr inbounds %"class.std::__1::queue", %"class.std::__1::queue"* %4, i64 0, i32 0, i32 0, i32 1
  %24 = getelementptr inbounds %"class.std::__1::queue", %"class.std::__1::queue"* %4, i64 0, i32 0, i32 0, i32 2, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %19, i8 0, i64 48, i1 false) #9
  %25 = bitcast %"class.aura::Window"**** %22 to i64*
  %26 = bitcast %"class.aura::Window"**** %21 to i64*
  %27 = getelementptr inbounds %"class.std::__1::queue", %"class.std::__1::queue"* %4, i64 0, i32 0
  call void @_ZNSt3__15dequeIPN4aura6WindowENS_9allocatorIS3_EEE19__add_back_capacityEv(%"class.std::__1::deque"* nonnull %27) #9
  %28 = load i64, i64* %24, align 8
  %29 = load i64, i64* %23, align 8
  %30 = load %"class.aura::Window"***, %"class.aura::Window"**** %21, align 8
  %31 = load %"class.aura::Window"***, %"class.aura::Window"**** %22, align 8
  %32 = add i64 %29, %28
  %33 = icmp eq %"class.aura::Window"*** %31, %30
  br i1 %33, label %41, label %34

34:                                               ; preds = %12
  %35 = lshr i64 %32, 9
  %36 = getelementptr inbounds %"class.aura::Window"**, %"class.aura::Window"*** %30, i64 %35
  %37 = load %"class.aura::Window"**, %"class.aura::Window"*** %36, align 8
  %38 = and i64 %32, 511
  %39 = getelementptr inbounds %"class.aura::Window"*, %"class.aura::Window"** %37, i64 %38
  %40 = bitcast %"class.aura::Window"** %39 to i64*
  br label %41

41:                                               ; preds = %12, %34
  %42 = phi i64* [ %40, %34 ], [ null, %12 ]
  store i64 %14, i64* %42, align 8
  %43 = load i64, i64* %24, align 8
  %44 = add i64 %43, 1
  store i64 %44, i64* %24, align 8
  %45 = icmp eq i64 %44, 0
  br i1 %45, label %184, label %46

46:                                               ; preds = %41
  %47 = bitcast %"class.ui::GestureConsumer"*** %17 to i64*
  %48 = bitcast %"class.std::__1::vector.175"* %3 to i64*
  %49 = bitcast %"class.ui::GestureConsumer"*** %18 to i64*
  %50 = getelementptr inbounds %"class.std::__1::queue", %"class.std::__1::queue"* %4, i64 0, i32 0
  br label %51

51:                                               ; preds = %46, %140
  %52 = phi i64 [ %44, %46 ], [ %141, %140 ]
  %53 = load %"class.aura::Window"***, %"class.aura::Window"**** %21, align 8
  %54 = load i64, i64* %23, align 8
  %55 = lshr i64 %54, 9
  %56 = getelementptr inbounds %"class.aura::Window"**, %"class.aura::Window"*** %53, i64 %55
  %57 = load %"class.aura::Window"**, %"class.aura::Window"*** %56, align 8
  %58 = and i64 %54, 511
  %59 = getelementptr inbounds %"class.aura::Window"*, %"class.aura::Window"** %57, i64 %58
  %60 = bitcast %"class.aura::Window"** %59 to i64*
  %61 = load i64, i64* %60, align 8
  %62 = add i64 %52, -1
  store i64 %62, i64* %24, align 8
  %63 = add i64 %54, 1
  store i64 %63, i64* %23, align 8
  %64 = icmp ult i64 %63, 1024
  br i1 %64, label %72, label %65

65:                                               ; preds = %51
  %66 = bitcast %"class.aura::Window"*** %53 to i8**
  %67 = load i8*, i8** %66, align 8
  call void @_ZdlPv(i8* %67) #10
  %68 = load %"class.aura::Window"***, %"class.aura::Window"**** %21, align 8
  %69 = getelementptr inbounds %"class.aura::Window"**, %"class.aura::Window"*** %68, i64 1
  store %"class.aura::Window"*** %69, %"class.aura::Window"**** %21, align 8
  %70 = load i64, i64* %23, align 8
  %71 = add i64 %70, -512
  store i64 %71, i64* %23, align 8
  br label %72

72:                                               ; preds = %51, %65
  %73 = load %"class.ui::GestureConsumer"**, %"class.ui::GestureConsumer"*** %17, align 8
  %74 = load %"class.ui::GestureConsumer"**, %"class.ui::GestureConsumer"*** %18, align 8
  %75 = icmp ult %"class.ui::GestureConsumer"** %73, %74
  %76 = ptrtoint %"class.ui::GestureConsumer"** %74 to i64
  br i1 %75, label %77, label %84

77:                                               ; preds = %72
  %78 = inttoptr i64 %61 to %"class.aura::Window"*
  %79 = icmp eq i64 %61, 0
  %80 = getelementptr inbounds %"class.aura::Window", %"class.aura::Window"* %78, i64 0, i32 3
  %81 = select i1 %79, %"class.ui::GestureConsumer"* null, %"class.ui::GestureConsumer"* %80
  store %"class.ui::GestureConsumer"* %81, %"class.ui::GestureConsumer"** %73, align 8
  %82 = getelementptr inbounds %"class.ui::GestureConsumer"*, %"class.ui::GestureConsumer"** %73, i64 1
  %83 = ptrtoint %"class.ui::GestureConsumer"** %82 to i64
  store i64 %83, i64* %47, align 8
  br label %131

84:                                               ; preds = %72
  %85 = ptrtoint %"class.ui::GestureConsumer"** %73 to i64
  %86 = load i64, i64* %48, align 8
  %87 = sub i64 %85, %86
  %88 = ashr exact i64 %87, 3
  %89 = add nsw i64 %88, 1
  %90 = icmp ugt i64 %89, 2305843009213693951
  br i1 %90, label %91, label %93

91:                                               ; preds = %84
  %92 = bitcast %"class.std::__1::vector.175"* %3 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %92) #11
  unreachable

93:                                               ; preds = %84
  %94 = sub i64 %76, %86
  %95 = ashr exact i64 %94, 3
  %96 = icmp ult i64 %95, 1152921504606846975
  br i1 %96, label %97, label %105

97:                                               ; preds = %93
  %98 = ashr exact i64 %94, 2
  %99 = icmp ult i64 %98, %89
  %100 = select i1 %99, i64 %89, i64 %98
  %101 = icmp eq i64 %100, 0
  br i1 %101, label %110, label %102

102:                                              ; preds = %97
  %103 = icmp ugt i64 %100, 2305843009213693951
  br i1 %103, label %104, label %105

104:                                              ; preds = %102
  call void @abort() #11
  unreachable

105:                                              ; preds = %102, %93
  %106 = phi i64 [ %100, %102 ], [ 2305843009213693951, %93 ]
  %107 = shl i64 %106, 3
  %108 = call i8* @_Znwm(i64 %107) #10
  %109 = bitcast i8* %108 to %"class.ui::GestureConsumer"**
  br label %110

110:                                              ; preds = %105, %97
  %111 = phi i64 [ %106, %105 ], [ 0, %97 ]
  %112 = phi i8* [ %108, %105 ], [ null, %97 ]
  %113 = phi %"class.ui::GestureConsumer"** [ %109, %105 ], [ null, %97 ]
  %114 = getelementptr inbounds %"class.ui::GestureConsumer"*, %"class.ui::GestureConsumer"** %113, i64 %88
  %115 = getelementptr inbounds %"class.ui::GestureConsumer"*, %"class.ui::GestureConsumer"** %113, i64 %111
  %116 = ptrtoint %"class.ui::GestureConsumer"** %115 to i64
  %117 = inttoptr i64 %61 to %"class.aura::Window"*
  %118 = icmp eq i64 %61, 0
  %119 = getelementptr inbounds %"class.aura::Window", %"class.aura::Window"* %117, i64 0, i32 3
  %120 = select i1 %118, %"class.ui::GestureConsumer"* null, %"class.ui::GestureConsumer"* %119
  store %"class.ui::GestureConsumer"* %120, %"class.ui::GestureConsumer"** %114, align 8
  %121 = getelementptr inbounds %"class.ui::GestureConsumer"*, %"class.ui::GestureConsumer"** %114, i64 1
  %122 = ptrtoint %"class.ui::GestureConsumer"** %121 to i64
  %123 = ptrtoint %"class.ui::GestureConsumer"** %113 to i64
  %124 = icmp sgt i64 %87, 0
  br i1 %124, label %125, label %127

125:                                              ; preds = %110
  %126 = inttoptr i64 %86 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %112, i8* align 8 %126, i64 %87, i1 false) #9
  br label %127

127:                                              ; preds = %125, %110
  store i64 %123, i64* %48, align 8
  store i64 %122, i64* %47, align 8
  store i64 %116, i64* %49, align 8
  %128 = icmp eq i64 %86, 0
  br i1 %128, label %131, label %129

129:                                              ; preds = %127
  %130 = inttoptr i64 %86 to i8*
  call void @_ZdlPv(i8* %130) #10
  br label %131

131:                                              ; preds = %129, %127, %77
  %132 = phi %"class.aura::Window"* [ %117, %129 ], [ %117, %127 ], [ %78, %77 ]
  %133 = call dereferenceable(24) %"class.std::__1::vector.49"* @_ZN2wm20GetTransientChildrenEPKN4aura6WindowE(%"class.aura::Window"* %132) #9
  %134 = getelementptr inbounds %"class.std::__1::vector.49", %"class.std::__1::vector.49"* %133, i64 0, i32 0, i32 0
  %135 = load %"class.aura::Window"**, %"class.aura::Window"*** %134, align 8
  %136 = getelementptr inbounds %"class.std::__1::vector.49", %"class.std::__1::vector.49"* %133, i64 0, i32 0, i32 1
  %137 = load %"class.aura::Window"**, %"class.aura::Window"*** %136, align 8
  %138 = icmp eq %"class.aura::Window"** %135, %137
  %139 = load i64, i64* %24, align 8
  br i1 %138, label %140, label %143

140:                                              ; preds = %178, %131
  %141 = phi i64 [ %139, %131 ], [ %181, %178 ]
  %142 = icmp eq i64 %141, 0
  br i1 %142, label %184, label %51

143:                                              ; preds = %131, %178
  %144 = phi i64 [ %181, %178 ], [ %139, %131 ]
  %145 = phi %"class.aura::Window"** [ %182, %178 ], [ %135, %131 ]
  %146 = bitcast %"class.aura::Window"** %145 to i64*
  %147 = load i64, i64* %146, align 8
  %148 = load i64, i64* %25, align 8
  %149 = load i64, i64* %26, align 8
  %150 = sub i64 %148, %149
  %151 = icmp eq i64 %150, 0
  %152 = shl i64 %150, 6
  %153 = add i64 %152, -1
  %154 = select i1 %151, i64 0, i64 %153
  %155 = load i64, i64* %23, align 8
  %156 = add i64 %144, %155
  %157 = icmp eq i64 %154, %156
  %158 = inttoptr i64 %149 to %"class.aura::Window"***
  %159 = inttoptr i64 %148 to %"class.aura::Window"***
  br i1 %157, label %160, label %166

160:                                              ; preds = %143
  call void @_ZNSt3__15dequeIPN4aura6WindowENS_9allocatorIS3_EEE19__add_back_capacityEv(%"class.std::__1::deque"* nonnull %50) #9
  %161 = load i64, i64* %24, align 8
  %162 = load i64, i64* %23, align 8
  %163 = load %"class.aura::Window"***, %"class.aura::Window"**** %21, align 8
  %164 = load %"class.aura::Window"***, %"class.aura::Window"**** %22, align 8
  %165 = add i64 %162, %161
  br label %166

166:                                              ; preds = %160, %143
  %167 = phi i64 [ %165, %160 ], [ %156, %143 ]
  %168 = phi %"class.aura::Window"*** [ %164, %160 ], [ %159, %143 ]
  %169 = phi %"class.aura::Window"*** [ %163, %160 ], [ %158, %143 ]
  %170 = icmp eq %"class.aura::Window"*** %168, %169
  br i1 %170, label %178, label %171

171:                                              ; preds = %166
  %172 = lshr i64 %167, 9
  %173 = getelementptr inbounds %"class.aura::Window"**, %"class.aura::Window"*** %169, i64 %172
  %174 = load %"class.aura::Window"**, %"class.aura::Window"*** %173, align 8
  %175 = and i64 %167, 511
  %176 = getelementptr inbounds %"class.aura::Window"*, %"class.aura::Window"** %174, i64 %175
  %177 = bitcast %"class.aura::Window"** %176 to i64*
  br label %178

178:                                              ; preds = %166, %171
  %179 = phi i64* [ %177, %171 ], [ null, %166 ]
  store i64 %147, i64* %179, align 8
  %180 = load i64, i64* %24, align 8
  %181 = add i64 %180, 1
  store i64 %181, i64* %24, align 8
  %182 = getelementptr inbounds %"class.aura::Window"*, %"class.aura::Window"** %145, i64 1
  %183 = icmp eq %"class.aura::Window"** %182, %137
  br i1 %183, label %140, label %143

184:                                              ; preds = %140, %41
  %185 = getelementptr inbounds %"class.wm::WindowModalityController", %"class.wm::WindowModalityController"* %0, i64 0, i32 3
  %186 = load %"class.aura::Env"*, %"class.aura::Env"** %185, align 8
  %187 = getelementptr inbounds %"class.aura::Env", %"class.aura::Env"* %186, i64 0, i32 11, i32 0, i32 0, i32 0
  %188 = load %"class.ui::GestureRecognizer"*, %"class.ui::GestureRecognizer"** %187, align 8
  %189 = bitcast %"class.ui::GestureRecognizer"* %188 to void (%"class.ui::GestureRecognizer"*, %"class.std::__1::vector.175"*)***
  %190 = load void (%"class.ui::GestureRecognizer"*, %"class.std::__1::vector.175"*)**, void (%"class.ui::GestureRecognizer"*, %"class.std::__1::vector.175"*)*** %189, align 8
  %191 = getelementptr inbounds void (%"class.ui::GestureRecognizer"*, %"class.std::__1::vector.175"*)*, void (%"class.ui::GestureRecognizer"*, %"class.std::__1::vector.175"*)** %190, i64 8
  %192 = load void (%"class.ui::GestureRecognizer"*, %"class.std::__1::vector.175"*)*, void (%"class.ui::GestureRecognizer"*, %"class.std::__1::vector.175"*)** %191, align 8
  call void %192(%"class.ui::GestureRecognizer"* %188, %"class.std::__1::vector.175"* nonnull dereferenceable(24) %3) #9
  %193 = load %"class.aura::Window"***, %"class.aura::Window"**** %21, align 8
  %194 = load i64, i64* %23, align 8
  %195 = lshr i64 %194, 9
  %196 = getelementptr inbounds %"class.aura::Window"**, %"class.aura::Window"*** %193, i64 %195
  %197 = load %"class.aura::Window"***, %"class.aura::Window"**** %22, align 8
  %198 = icmp eq %"class.aura::Window"*** %197, %193
  %199 = ptrtoint %"class.aura::Window"*** %197 to i64
  %200 = ptrtoint %"class.aura::Window"*** %193 to i64
  br i1 %198, label %213, label %201

201:                                              ; preds = %184
  %202 = load %"class.aura::Window"**, %"class.aura::Window"*** %196, align 8
  %203 = and i64 %194, 511
  %204 = getelementptr inbounds %"class.aura::Window"*, %"class.aura::Window"** %202, i64 %203
  %205 = load i64, i64* %24, align 8
  %206 = add i64 %205, %194
  %207 = lshr i64 %206, 9
  %208 = getelementptr inbounds %"class.aura::Window"**, %"class.aura::Window"*** %193, i64 %207
  %209 = load %"class.aura::Window"**, %"class.aura::Window"*** %208, align 8
  %210 = and i64 %206, 511
  %211 = getelementptr inbounds %"class.aura::Window"*, %"class.aura::Window"** %209, i64 %210
  %212 = icmp eq %"class.aura::Window"** %211, %204
  br i1 %212, label %213, label %217

213:                                              ; preds = %230, %184, %201
  store i64 0, i64* %24, align 8
  %214 = sub i64 %199, %200
  %215 = ashr exact i64 %214, 3
  %216 = icmp ugt i64 %215, 2
  br i1 %216, label %235, label %248

217:                                              ; preds = %201, %230
  %218 = phi %"class.aura::Window"** [ %233, %230 ], [ %204, %201 ]
  %219 = phi %"class.aura::Window"*** [ %232, %230 ], [ %196, %201 ]
  %220 = getelementptr inbounds %"class.aura::Window"*, %"class.aura::Window"** %218, i64 1
  %221 = ptrtoint %"class.aura::Window"** %220 to i64
  %222 = bitcast %"class.aura::Window"*** %219 to i64*
  %223 = load i64, i64* %222, align 8
  %224 = sub i64 %221, %223
  %225 = icmp eq i64 %224, 4096
  br i1 %225, label %226, label %230

226:                                              ; preds = %217
  %227 = getelementptr inbounds %"class.aura::Window"**, %"class.aura::Window"*** %219, i64 1
  %228 = bitcast %"class.aura::Window"*** %227 to i64*
  %229 = load i64, i64* %228, align 8
  br label %230

230:                                              ; preds = %226, %217
  %231 = phi i64 [ %229, %226 ], [ %221, %217 ]
  %232 = phi %"class.aura::Window"*** [ %227, %226 ], [ %219, %217 ]
  %233 = inttoptr i64 %231 to %"class.aura::Window"**
  %234 = icmp eq %"class.aura::Window"** %211, %233
  br i1 %234, label %213, label %217

235:                                              ; preds = %213, %235
  %236 = phi %"class.aura::Window"*** [ %240, %235 ], [ %193, %213 ]
  %237 = bitcast %"class.aura::Window"*** %236 to i8**
  %238 = load i8*, i8** %237, align 8
  call void @_ZdlPv(i8* %238) #10
  %239 = load %"class.aura::Window"***, %"class.aura::Window"**** %21, align 8
  %240 = getelementptr inbounds %"class.aura::Window"**, %"class.aura::Window"*** %239, i64 1
  store %"class.aura::Window"*** %240, %"class.aura::Window"**** %21, align 8
  %241 = load i64, i64* %25, align 8
  %242 = ptrtoint %"class.aura::Window"*** %240 to i64
  %243 = sub i64 %241, %242
  %244 = ashr exact i64 %243, 3
  %245 = icmp ugt i64 %244, 2
  br i1 %245, label %235, label %246

246:                                              ; preds = %235
  %247 = inttoptr i64 %241 to %"class.aura::Window"***
  br label %248

248:                                              ; preds = %246, %213
  %249 = phi %"class.aura::Window"*** [ %197, %213 ], [ %247, %246 ]
  %250 = phi %"class.aura::Window"*** [ %193, %213 ], [ %240, %246 ]
  %251 = phi i64 [ %215, %213 ], [ %244, %246 ]
  switch i64 %251, label %255 [
    i64 1, label %253
    i64 2, label %252
  ]

252:                                              ; preds = %248
  br label %253

253:                                              ; preds = %248, %252
  %254 = phi i64 [ 512, %252 ], [ 256, %248 ]
  store i64 %254, i64* %23, align 8
  br label %255

255:                                              ; preds = %253, %248
  %256 = icmp eq %"class.aura::Window"*** %250, %249
  br i1 %256, label %275, label %257

257:                                              ; preds = %255, %257
  %258 = phi %"class.aura::Window"*** [ %261, %257 ], [ %250, %255 ]
  %259 = bitcast %"class.aura::Window"*** %258 to i8**
  %260 = load i8*, i8** %259, align 8
  call void @_ZdlPv(i8* %260) #10
  %261 = getelementptr inbounds %"class.aura::Window"**, %"class.aura::Window"*** %258, i64 1
  %262 = icmp eq %"class.aura::Window"*** %261, %249
  br i1 %262, label %263, label %257

263:                                              ; preds = %257
  %264 = load %"class.aura::Window"***, %"class.aura::Window"**** %21, align 8
  %265 = load %"class.aura::Window"***, %"class.aura::Window"**** %22, align 8
  %266 = icmp eq %"class.aura::Window"*** %265, %264
  br i1 %266, label %275, label %267

267:                                              ; preds = %263
  %268 = ptrtoint %"class.aura::Window"*** %264 to i64
  %269 = getelementptr %"class.aura::Window"**, %"class.aura::Window"*** %265, i64 -1
  %270 = ptrtoint %"class.aura::Window"*** %269 to i64
  %271 = sub i64 %270, %268
  %272 = lshr i64 %271, 3
  %273 = xor i64 %272, -1
  %274 = getelementptr %"class.aura::Window"**, %"class.aura::Window"*** %265, i64 %273
  store %"class.aura::Window"*** %274, %"class.aura::Window"**** %22, align 8
  br label %275

275:                                              ; preds = %267, %263, %255
  %276 = load %"class.aura::Window"***, %"class.aura::Window"**** %20, align 8
  %277 = icmp eq %"class.aura::Window"*** %276, null
  br i1 %277, label %280, label %278

278:                                              ; preds = %275
  %279 = bitcast %"class.aura::Window"*** %276 to i8*
  call void @_ZdlPv(i8* %279) #10
  br label %280

280:                                              ; preds = %275, %278
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %19) #9
  %281 = load %"class.ui::GestureConsumer"**, %"class.ui::GestureConsumer"*** %16, align 8
  %282 = icmp eq %"class.ui::GestureConsumer"** %281, null
  br i1 %282, label %287, label %283

283:                                              ; preds = %280
  %284 = ptrtoint %"class.ui::GestureConsumer"** %281 to i64
  %285 = bitcast %"class.ui::GestureConsumer"*** %17 to i64*
  store i64 %284, i64* %285, align 8
  %286 = bitcast %"class.ui::GestureConsumer"** %281 to i8*
  call void @_ZdlPv(i8* %286) #10
  br label %287

287:                                              ; preds = %280, %283
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %15) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn48_N2wm24WindowModalityController23OnWindowPropertyChangedEPN4aura6WindowEPKvl(%"class.wm::WindowModalityController"* nocapture readonly, %"class.aura::Window"*, i8* readnone, i64) unnamed_addr #0 align 2 {
  %5 = getelementptr inbounds %"class.wm::WindowModalityController", %"class.wm::WindowModalityController"* %0, i64 -1, i32 2, i32 0, i32 1, i32 0, i32 1
  %6 = bitcast i64* %5 to %"class.wm::WindowModalityController"*
  %7 = load %"struct.ui::ClassProperty.173"*, %"struct.ui::ClassProperty.173"** @_ZN4aura6client9kModalKeyE, align 8
  %8 = bitcast %"struct.ui::ClassProperty.173"* %7 to i8*
  %9 = icmp eq i8* %8, %2
  br i1 %9, label %10, label %17

10:                                               ; preds = %4
  %11 = getelementptr inbounds %"class.aura::Window", %"class.aura::Window"* %1, i64 0, i32 4
  %12 = tail call i32 @_ZNK2ui15PropertyHandler11GetPropertyINS_9ModalTypeEEET_PKNS_13ClassPropertyIS3_EE(%"class.ui::PropertyHandler"* %11, %"struct.ui::ClassProperty.173"* %7) #9
  %13 = icmp eq i32 %12, 0
  br i1 %13, label %17, label %14

14:                                               ; preds = %10
  %15 = tail call zeroext i1 @_ZNK4aura6Window9IsVisibleEv(%"class.aura::Window"* %1) #9
  br i1 %15, label %16, label %17

16:                                               ; preds = %14
  tail call void @_ZN2wm14ActivateWindowEPN4aura6WindowE(%"class.aura::Window"* %1) #9
  tail call void @_ZN2wm24WindowModalityController34CancelTouchesOnTransientWindowTreeEPN4aura6WindowE(%"class.wm::WindowModalityController"* %6, %"class.aura::Window"* %1) #9
  br label %17

17:                                               ; preds = %4, %10, %14, %16
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2wm24WindowModalityController25OnWindowVisibilityChangedEPN4aura6WindowEb(%"class.wm::WindowModalityController"* nocapture readonly, %"class.aura::Window"*, i1 zeroext) unnamed_addr #0 align 2 {
  br i1 %2, label %4, label %22

4:                                                ; preds = %3
  %5 = getelementptr inbounds %"class.aura::Window", %"class.aura::Window"* %1, i64 0, i32 4
  %6 = load %"struct.ui::ClassProperty.173"*, %"struct.ui::ClassProperty.173"** @_ZN4aura6client9kModalKeyE, align 8
  %7 = tail call i32 @_ZNK2ui15PropertyHandler11GetPropertyINS_9ModalTypeEEET_PKNS_13ClassPropertyIS3_EE(%"class.ui::PropertyHandler"* %5, %"struct.ui::ClassProperty.173"* %6) #9
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %22, label %9

9:                                                ; preds = %4
  tail call void @_ZN2wm24WindowModalityController34CancelTouchesOnTransientWindowTreeEPN4aura6WindowE(%"class.wm::WindowModalityController"* %0, %"class.aura::Window"* %1)
  %10 = tail call %"class.aura::Window"* @_ZN4aura6client16GetCaptureWindowEPNS_6WindowE(%"class.aura::Window"* %1) #9
  %11 = icmp eq %"class.aura::Window"* %10, null
  br i1 %11, label %22, label %12

12:                                               ; preds = %9
  %13 = tail call i32 @_ZNK2ui15PropertyHandler11GetPropertyINS_9ModalTypeEEET_PKNS_13ClassPropertyIS3_EE(%"class.ui::PropertyHandler"* %5, %"struct.ui::ClassProperty.173"* %6) #9
  %14 = icmp eq i32 %13, 2
  br i1 %14, label %15, label %21

15:                                               ; preds = %12
  %16 = load %"struct.ui::ClassProperty"*, %"struct.ui::ClassProperty"** @_ZN4aura6client20kChildModalParentKeyE, align 8
  %17 = tail call %"class.aura::Window"* @_ZNK2ui15PropertyHandler11GetPropertyIPN4aura6WindowEEET_PKNS_13ClassPropertyIS5_EE(%"class.ui::PropertyHandler"* %5, %"struct.ui::ClassProperty"* %16) #9
  %18 = icmp eq %"class.aura::Window"* %17, null
  br i1 %18, label %22, label %19

19:                                               ; preds = %15
  %20 = tail call zeroext i1 @_ZNK4aura6Window8ContainsEPKS0_(%"class.aura::Window"* nonnull %17, %"class.aura::Window"* nonnull %10) #9
  br i1 %20, label %21, label %22

21:                                               ; preds = %19, %12
  tail call void @_ZN4aura6Window14ReleaseCaptureEv(%"class.aura::Window"* nonnull %10) #9
  br label %22

22:                                               ; preds = %15, %19, %9, %21, %4, %3
  ret void
}

declare %"class.aura::Window"* @_ZN4aura6client16GetCaptureWindowEPNS_6WindowE(%"class.aura::Window"*) local_unnamed_addr #1

declare void @_ZN4aura6Window14ReleaseCaptureEv(%"class.aura::Window"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn48_N2wm24WindowModalityController25OnWindowVisibilityChangedEPN4aura6WindowEb(%"class.wm::WindowModalityController"* nocapture readonly, %"class.aura::Window"*, i1 zeroext) unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.wm::WindowModalityController", %"class.wm::WindowModalityController"* %0, i64 -1, i32 2, i32 0, i32 1, i32 0, i32 1
  %5 = bitcast i64* %4 to %"class.wm::WindowModalityController"*
  tail call void @_ZN2wm24WindowModalityController25OnWindowVisibilityChangedEPN4aura6WindowEb(%"class.wm::WindowModalityController"* %5, %"class.aura::Window"* %1, i1 zeroext %2)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2wm24WindowModalityController17OnWindowDestroyedEPN4aura6WindowE(%"class.wm::WindowModalityController"*, %"class.aura::Window"*) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.wm::WindowModalityController", %"class.wm::WindowModalityController"* %0, i64 0, i32 4, i32 0, i32 0
  %4 = load %"class.aura::Window"**, %"class.aura::Window"*** %3, align 8
  %5 = getelementptr inbounds %"class.wm::WindowModalityController", %"class.wm::WindowModalityController"* %0, i64 0, i32 4, i32 0, i32 1
  %6 = load %"class.aura::Window"**, %"class.aura::Window"*** %5, align 8
  %7 = icmp eq %"class.aura::Window"** %4, %6
  %8 = ptrtoint %"class.aura::Window"** %6 to i64
  br i1 %7, label %16, label %9

9:                                                ; preds = %2, %13
  %10 = phi %"class.aura::Window"** [ %14, %13 ], [ %4, %2 ]
  %11 = load %"class.aura::Window"*, %"class.aura::Window"** %10, align 8
  %12 = icmp eq %"class.aura::Window"* %11, %1
  br i1 %12, label %16, label %13

13:                                               ; preds = %9
  %14 = getelementptr inbounds %"class.aura::Window"*, %"class.aura::Window"** %10, i64 1
  %15 = icmp eq %"class.aura::Window"** %14, %6
  br i1 %15, label %16, label %9

16:                                               ; preds = %9, %13, %2
  %17 = phi %"class.aura::Window"** [ %4, %2 ], [ %10, %9 ], [ %6, %13 ]
  %18 = getelementptr inbounds %"class.aura::Window"*, %"class.aura::Window"** %17, i64 1
  %19 = ptrtoint %"class.aura::Window"** %18 to i64
  %20 = sub i64 %8, %19
  %21 = ashr exact i64 %20, 3
  %22 = icmp eq i64 %20, 0
  br i1 %22, label %26, label %23

23:                                               ; preds = %16
  %24 = bitcast %"class.aura::Window"** %17 to i8*
  %25 = bitcast %"class.aura::Window"** %18 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %24, i8* align 8 %25, i64 %20, i1 false) #9
  br label %26

26:                                               ; preds = %16, %23
  %27 = getelementptr inbounds %"class.aura::Window"*, %"class.aura::Window"** %17, i64 %21
  store %"class.aura::Window"** %27, %"class.aura::Window"*** %5, align 8
  %28 = getelementptr inbounds %"class.wm::WindowModalityController", %"class.wm::WindowModalityController"* %0, i64 0, i32 2
  tail call void @_ZN4aura6Window14RemoveObserverEPNS_14WindowObserverE(%"class.aura::Window"* %1, %"class.aura::WindowObserver"* %28) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn48_N2wm24WindowModalityController17OnWindowDestroyedEPN4aura6WindowE(%"class.wm::WindowModalityController"*, %"class.aura::Window"*) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.wm::WindowModalityController", %"class.wm::WindowModalityController"* %0, i64 -1, i32 2, i32 0, i32 1, i32 0, i32 1
  %4 = getelementptr inbounds i64, i64* %3, i64 10
  %5 = bitcast i64* %4 to %"class.aura::Window"***
  %6 = load %"class.aura::Window"**, %"class.aura::Window"*** %5, align 8
  %7 = getelementptr inbounds i64, i64* %3, i64 11
  %8 = bitcast i64* %7 to %"class.aura::Window"***
  %9 = load %"class.aura::Window"**, %"class.aura::Window"*** %8, align 8
  %10 = icmp eq %"class.aura::Window"** %6, %9
  %11 = ptrtoint %"class.aura::Window"** %9 to i64
  br i1 %10, label %19, label %12

12:                                               ; preds = %2, %16
  %13 = phi %"class.aura::Window"** [ %17, %16 ], [ %6, %2 ]
  %14 = load %"class.aura::Window"*, %"class.aura::Window"** %13, align 8
  %15 = icmp eq %"class.aura::Window"* %14, %1
  br i1 %15, label %19, label %16

16:                                               ; preds = %12
  %17 = getelementptr inbounds %"class.aura::Window"*, %"class.aura::Window"** %13, i64 1
  %18 = icmp eq %"class.aura::Window"** %17, %9
  br i1 %18, label %19, label %12

19:                                               ; preds = %16, %12, %2
  %20 = phi %"class.aura::Window"** [ %6, %2 ], [ %9, %16 ], [ %13, %12 ]
  %21 = getelementptr inbounds %"class.aura::Window"*, %"class.aura::Window"** %20, i64 1
  %22 = ptrtoint %"class.aura::Window"** %21 to i64
  %23 = sub i64 %11, %22
  %24 = ashr exact i64 %23, 3
  %25 = icmp eq i64 %23, 0
  br i1 %25, label %29, label %26

26:                                               ; preds = %19
  %27 = bitcast %"class.aura::Window"** %20 to i8*
  %28 = bitcast %"class.aura::Window"** %21 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %27, i8* align 8 %28, i64 %23, i1 false) #9
  br label %29

29:                                               ; preds = %19, %26
  %30 = getelementptr inbounds %"class.aura::Window"*, %"class.aura::Window"** %20, i64 %24
  store %"class.aura::Window"** %30, %"class.aura::Window"*** %8, align 8
  %31 = getelementptr inbounds i64, i64* %3, i64 6
  %32 = bitcast i64* %31 to %"class.aura::WindowObserver"*
  tail call void @_ZN4aura6Window14RemoveObserverEPNS_14WindowObserverE(%"class.aura::Window"* %1, %"class.aura::WindowObserver"* %32) #9
  ret void
}

declare %"class.aura::Window"* @_ZN2wm17GetToplevelWindowEPN4aura6WindowE(%"class.aura::Window"*) local_unnamed_addr #1

declare zeroext i1 @_ZN2wm13AnimateWindowEPN4aura6WindowENS_19WindowAnimationTypeE(%"class.aura::Window"*, i32) local_unnamed_addr #1

declare %"class.aura::Window"* @_ZN2wm18GetTransientParentEPN4aura6WindowE(%"class.aura::Window"*) local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #2

declare dereferenceable(24) %"class.std::__1::vector.49"* @_ZN2wm20GetTransientChildrenEPKN4aura6WindowE(%"class.aura::Window"*) local_unnamed_addr #1

declare void @_ZN2ui12EventHandler7OnEventEPNS_5EventE(%"class.ui::EventHandler"*, %"class.ui::Event"*) unnamed_addr #1

declare void @_ZN2ui12EventHandler13OnScrollEventEPNS_11ScrollEventE(%"class.ui::EventHandler"*, %"class.ui::ScrollEvent"*) unnamed_addr #1

declare void @_ZN2ui12EventHandler14OnGestureEventEPNS_12GestureEventE(%"class.ui::EventHandler"*, %"class.ui::GestureEvent"*) unnamed_addr #1

declare void @_ZN2ui12EventHandler12OnCancelModeEPNS_15CancelModeEventE(%"class.ui::EventHandler"*, %"class.ui::CancelModeEvent"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4aura11EnvObserver17OnHostInitializedEPNS_14WindowTreeHostE(%"class.aura::EnvObserver"*, %"class.aura::WindowTreeHost"*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4aura11EnvObserver15OnHostDestroyedEPNS_14WindowTreeHostE(%"class.aura::EnvObserver"*, %"class.aura::WindowTreeHost"*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4aura11EnvObserver16OnWillDestroyEnvEv(%"class.aura::EnvObserver"*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4aura14WindowObserver25OnWindowHierarchyChangingERKNS0_21HierarchyChangeParamsE(%"class.aura::WindowObserver"*, %"struct.aura::WindowObserver::HierarchyChangeParams"* dereferenceable(40)) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4aura14WindowObserver24OnWindowHierarchyChangedERKNS0_21HierarchyChangeParamsE(%"class.aura::WindowObserver"*, %"struct.aura::WindowObserver::HierarchyChangeParams"* dereferenceable(40)) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4aura14WindowObserver13OnWindowAddedEPNS_6WindowE(%"class.aura::WindowObserver"*, %"class.aura::Window"*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4aura14WindowObserver18OnWillRemoveWindowEPNS_6WindowE(%"class.aura::WindowObserver"*, %"class.aura::Window"*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4aura14WindowObserver15OnWindowRemovedEPNS_6WindowE(%"class.aura::WindowObserver"*, %"class.aura::Window"*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4aura14WindowObserver21OnWindowParentChangedEPNS_6WindowES2_(%"class.aura::WindowObserver"*, %"class.aura::Window"*, %"class.aura::Window"*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4aura14WindowObserver26OnWindowVisibilityChangingEPNS_6WindowEb(%"class.aura::WindowObserver"*, %"class.aura::Window"*, i1 zeroext) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4aura14WindowObserver21OnWindowBoundsChangedEPNS_6WindowERKN3gfx4RectES6_N2ui20PropertyChangeReasonE(%"class.aura::WindowObserver"*, %"class.aura::Window"*, %"class.gfx::Rect"* dereferenceable(16), %"class.gfx::Rect"* dereferenceable(16), i32) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4aura14WindowObserver31OnWindowTargetTransformChangingEPNS_6WindowERKN3gfx9TransformE(%"class.aura::WindowObserver"*, %"class.aura::Window"*, %"class.gfx::Transform"* dereferenceable(68)) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4aura14WindowObserver19OnWindowTransformedEPNS_6WindowEN2ui20PropertyChangeReasonE(%"class.aura::WindowObserver"*, %"class.aura::Window"*, i32) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4aura14WindowObserver18OnWindowOpacitySetEPNS_6WindowEN2ui20PropertyChangeReasonE(%"class.aura::WindowObserver"*, %"class.aura::Window"*, i32) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4aura14WindowObserver21OnWindowAlphaShapeSetEPNS_6WindowE(%"class.aura::WindowObserver"*, %"class.aura::Window"*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4aura14WindowObserver26OnWindowTransparentChangedEPNS_6WindowEN2ui20PropertyChangeReasonE(%"class.aura::WindowObserver"*, %"class.aura::Window"*, i32) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4aura14WindowObserver23OnWindowStackingChangedEPNS_6WindowE(%"class.aura::WindowObserver"*, %"class.aura::Window"*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4aura14WindowObserver18OnWindowDestroyingEPNS_6WindowE(%"class.aura::WindowObserver"*, %"class.aura::Window"*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4aura14WindowObserver25OnWindowAddedToRootWindowEPNS_6WindowE(%"class.aura::WindowObserver"*, %"class.aura::Window"*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4aura14WindowObserver30OnWindowRemovingFromRootWindowEPNS_6WindowES2_(%"class.aura::WindowObserver"*, %"class.aura::Window"*, %"class.aura::Window"*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4aura14WindowObserver20OnWindowTitleChangedEPNS_6WindowE(%"class.aura::WindowObserver"*, %"class.aura::Window"*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4aura14WindowObserver22OnWindowLayerRecreatedEPNS_6WindowE(%"class.aura::WindowObserver"*, %"class.aura::Window"*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4aura14WindowObserver24OnWindowOcclusionChangedEPNS_6WindowE(%"class.aura::WindowObserver"*, %"class.aura::Window"*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4aura14WindowObserver19OnResizeLoopStartedEPNS_6WindowE(%"class.aura::WindowObserver"*, %"class.aura::Window"*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4aura14WindowObserver17OnResizeLoopEndedEPNS_6WindowE(%"class.aura::WindowObserver"*, %"class.aura::Window"*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4aura14WindowObserver40OnWindowOpaqueRegionsForOcclusionChangedEPNS_6WindowE(%"class.aura::WindowObserver"*, %"class.aura::Window"*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4aura11EnvObserver19OnWindowInitializedEPNS_6WindowE(%"class.aura::EnvObserver"*, %"class.aura::Window"*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4aura11EnvObserverD2Ev(%"class.aura::EnvObserver"*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4aura11EnvObserverD0Ev(%"class.aura::EnvObserver"*) unnamed_addr #0 comdat align 2 {
  %2 = bitcast %"class.aura::EnvObserver"* %0 to i8*
  tail call void @_ZdlPv(i8* %2) #10
  ret void
}

declare zeroext i1 @_ZNK4aura6Window8ContainsEPKS0_(%"class.aura::Window"*, %"class.aura::Window"*) local_unnamed_addr #1

declare %"class.aura::Window"* @_ZNK2ui15PropertyHandler11GetPropertyIPN4aura6WindowEEET_PKNS_13ClassPropertyIS5_EE(%"class.ui::PropertyHandler"*, %"struct.ui::ClassProperty"*) local_unnamed_addr #1

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #6

; Function Attrs: noreturn nounwind
declare void @abort() local_unnamed_addr #7

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #8

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memmove.p0i8.p0i8.i64(i8* nocapture, i8* nocapture readonly, i64, i1 immarg) #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__15dequeIPN4aura6WindowENS_9allocatorIS3_EEE19__add_back_capacityEv(%"class.std::__1::deque"*) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.aura::Window"**, align 8
  %3 = alloca %"class.aura::Window"**, align 8
  %4 = alloca %"struct.std::__1::__split_buffer.202", align 8
  %5 = getelementptr inbounds %"class.std::__1::deque", %"class.std::__1::deque"* %0, i64 0, i32 0, i32 1
  %6 = load i64, i64* %5, align 8
  %7 = icmp ugt i64 %6, 511
  br i1 %7, label %8, label %162

8:                                                ; preds = %1
  %9 = add i64 %6, -512
  store i64 %9, i64* %5, align 8
  %10 = getelementptr inbounds %"class.std::__1::deque", %"class.std::__1::deque"* %0, i64 0, i32 0, i32 0, i32 1
  %11 = load %"class.aura::Window"***, %"class.aura::Window"**** %10, align 8
  %12 = bitcast %"class.aura::Window"*** %11 to i64*
  %13 = load i64, i64* %12, align 8
  %14 = getelementptr inbounds %"class.aura::Window"**, %"class.aura::Window"*** %11, i64 1
  store %"class.aura::Window"*** %14, %"class.aura::Window"**** %10, align 8
  %15 = getelementptr inbounds %"class.std::__1::deque", %"class.std::__1::deque"* %0, i64 0, i32 0, i32 0, i32 2
  %16 = load %"class.aura::Window"***, %"class.aura::Window"**** %15, align 8
  %17 = getelementptr inbounds %"class.std::__1::deque", %"class.std::__1::deque"* %0, i64 0, i32 0, i32 0, i32 3, i32 0, i32 0
  %18 = load %"class.aura::Window"***, %"class.aura::Window"**** %17, align 8
  %19 = icmp eq %"class.aura::Window"*** %16, %18
  %20 = ptrtoint %"class.aura::Window"*** %18 to i64
  %21 = bitcast %"class.aura::Window"*** %16 to i64*
  br i1 %19, label %22, label %158

22:                                               ; preds = %8
  %23 = getelementptr inbounds %"class.std::__1::deque", %"class.std::__1::deque"* %0, i64 0, i32 0, i32 0, i32 0
  %24 = load %"class.aura::Window"***, %"class.aura::Window"**** %23, align 8
  %25 = icmp ugt %"class.aura::Window"*** %14, %24
  %26 = ptrtoint %"class.aura::Window"*** %24 to i64
  br i1 %25, label %27, label %47

27:                                               ; preds = %22
  %28 = ptrtoint %"class.aura::Window"*** %14 to i64
  %29 = sub i64 %28, %26
  %30 = ashr exact i64 %29, 3
  %31 = add nsw i64 %30, 1
  %32 = sdiv i64 %31, -2
  %33 = getelementptr inbounds %"class.aura::Window"**, %"class.aura::Window"*** %14, i64 %32
  %34 = ptrtoint %"class.aura::Window"*** %16 to i64
  %35 = sub i64 %34, %28
  %36 = ashr exact i64 %35, 3
  %37 = icmp eq i64 %35, 0
  br i1 %37, label %42, label %38

38:                                               ; preds = %27
  %39 = bitcast %"class.aura::Window"*** %33 to i8*
  %40 = bitcast %"class.aura::Window"*** %14 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %39, i8* align 8 %40, i64 %35, i1 false) #9
  %41 = load %"class.aura::Window"***, %"class.aura::Window"**** %10, align 8
  br label %42

42:                                               ; preds = %38, %27
  %43 = phi %"class.aura::Window"*** [ %14, %27 ], [ %41, %38 ]
  %44 = getelementptr inbounds %"class.aura::Window"**, %"class.aura::Window"*** %33, i64 %36
  store %"class.aura::Window"*** %44, %"class.aura::Window"**** %15, align 8
  %45 = getelementptr inbounds %"class.aura::Window"**, %"class.aura::Window"*** %43, i64 %32
  store %"class.aura::Window"*** %45, %"class.aura::Window"**** %10, align 8
  %46 = bitcast %"class.aura::Window"*** %44 to i64*
  br label %158

47:                                               ; preds = %22
  %48 = bitcast %"class.aura::Window"**** %17 to i64*
  %49 = bitcast %"class.std::__1::deque"* %0 to i64*
  %50 = sub i64 %20, %26
  %51 = ashr exact i64 %50, 2
  %52 = icmp eq i64 %50, 0
  %53 = select i1 %52, i64 1, i64 %51
  %54 = icmp ugt i64 %53, 2305843009213693951
  br i1 %54, label %55, label %56

55:                                               ; preds = %47
  tail call void @abort() #11
  unreachable

56:                                               ; preds = %47
  %57 = lshr i64 %53, 2
  %58 = shl i64 %53, 3
  %59 = tail call i8* @_Znwm(i64 %58) #10
  %60 = bitcast i8* %59 to %"class.aura::Window"***
  %61 = ptrtoint i8* %59 to i64
  %62 = getelementptr inbounds %"class.aura::Window"**, %"class.aura::Window"*** %60, i64 %57
  %63 = ptrtoint %"class.aura::Window"*** %62 to i64
  %64 = getelementptr inbounds %"class.aura::Window"**, %"class.aura::Window"*** %60, i64 %53
  %65 = ptrtoint %"class.aura::Window"*** %64 to i64
  %66 = ptrtoint %"class.aura::Window"*** %14 to i64
  %67 = ptrtoint %"class.aura::Window"*** %16 to i64
  %68 = sub i64 %67, %66
  %69 = ashr exact i64 %68, 3
  %70 = getelementptr inbounds %"class.aura::Window"**, %"class.aura::Window"*** %62, i64 %69
  %71 = icmp eq i64 %68, 0
  br i1 %71, label %147, label %72

72:                                               ; preds = %56
  %73 = add i64 %68, -8
  %74 = lshr i64 %73, 3
  %75 = add nuw nsw i64 %74, 1
  %76 = and i64 %75, 7
  %77 = icmp eq i64 %76, 0
  br i1 %77, label %93, label %78

78:                                               ; preds = %72, %78
  %79 = phi %"class.aura::Window"*** [ %86, %78 ], [ %62, %72 ]
  %80 = phi i64 [ %87, %78 ], [ %63, %72 ]
  %81 = phi %"class.aura::Window"*** [ %88, %78 ], [ %14, %72 ]
  %82 = phi i64 [ %89, %78 ], [ %76, %72 ]
  %83 = bitcast %"class.aura::Window"*** %81 to i64*
  %84 = load i64, i64* %83, align 8
  %85 = inttoptr i64 %80 to i64*
  store i64 %84, i64* %85, align 8
  %86 = getelementptr inbounds %"class.aura::Window"**, %"class.aura::Window"*** %79, i64 1
  %87 = ptrtoint %"class.aura::Window"*** %86 to i64
  %88 = getelementptr inbounds %"class.aura::Window"**, %"class.aura::Window"*** %81, i64 1
  %89 = add i64 %82, -1
  %90 = icmp eq i64 %89, 0
  br i1 %90, label %91, label %78, !llvm.loop !2

91:                                               ; preds = %78
  %92 = ptrtoint %"class.aura::Window"*** %86 to i64
  br label %93

93:                                               ; preds = %72, %91
  %94 = phi %"class.aura::Window"*** [ %62, %72 ], [ %86, %91 ]
  %95 = phi i64 [ %63, %72 ], [ %92, %91 ]
  %96 = phi %"class.aura::Window"*** [ %14, %72 ], [ %88, %91 ]
  %97 = icmp ult i64 %73, 56
  br i1 %97, label %144, label %98

98:                                               ; preds = %93, %98
  %99 = phi %"class.aura::Window"*** [ %140, %98 ], [ %94, %93 ]
  %100 = phi i64 [ %141, %98 ], [ %95, %93 ]
  %101 = phi %"class.aura::Window"*** [ %142, %98 ], [ %96, %93 ]
  %102 = bitcast %"class.aura::Window"*** %101 to i64*
  %103 = load i64, i64* %102, align 8
  %104 = inttoptr i64 %100 to i64*
  store i64 %103, i64* %104, align 8
  %105 = getelementptr inbounds %"class.aura::Window"**, %"class.aura::Window"*** %99, i64 1
  %106 = getelementptr inbounds %"class.aura::Window"**, %"class.aura::Window"*** %101, i64 1
  %107 = bitcast %"class.aura::Window"*** %106 to i64*
  %108 = load i64, i64* %107, align 8
  %109 = bitcast %"class.aura::Window"*** %105 to i64*
  store i64 %108, i64* %109, align 8
  %110 = getelementptr inbounds %"class.aura::Window"**, %"class.aura::Window"*** %99, i64 2
  %111 = getelementptr inbounds %"class.aura::Window"**, %"class.aura::Window"*** %101, i64 2
  %112 = bitcast %"class.aura::Window"*** %111 to i64*
  %113 = load i64, i64* %112, align 8
  %114 = bitcast %"class.aura::Window"*** %110 to i64*
  store i64 %113, i64* %114, align 8
  %115 = getelementptr inbounds %"class.aura::Window"**, %"class.aura::Window"*** %99, i64 3
  %116 = getelementptr inbounds %"class.aura::Window"**, %"class.aura::Window"*** %101, i64 3
  %117 = bitcast %"class.aura::Window"*** %116 to i64*
  %118 = load i64, i64* %117, align 8
  %119 = bitcast %"class.aura::Window"*** %115 to i64*
  store i64 %118, i64* %119, align 8
  %120 = getelementptr inbounds %"class.aura::Window"**, %"class.aura::Window"*** %99, i64 4
  %121 = getelementptr inbounds %"class.aura::Window"**, %"class.aura::Window"*** %101, i64 4
  %122 = bitcast %"class.aura::Window"*** %121 to i64*
  %123 = load i64, i64* %122, align 8
  %124 = bitcast %"class.aura::Window"*** %120 to i64*
  store i64 %123, i64* %124, align 8
  %125 = getelementptr inbounds %"class.aura::Window"**, %"class.aura::Window"*** %99, i64 5
  %126 = getelementptr inbounds %"class.aura::Window"**, %"class.aura::Window"*** %101, i64 5
  %127 = bitcast %"class.aura::Window"*** %126 to i64*
  %128 = load i64, i64* %127, align 8
  %129 = bitcast %"class.aura::Window"*** %125 to i64*
  store i64 %128, i64* %129, align 8
  %130 = getelementptr inbounds %"class.aura::Window"**, %"class.aura::Window"*** %99, i64 6
  %131 = getelementptr inbounds %"class.aura::Window"**, %"class.aura::Window"*** %101, i64 6
  %132 = bitcast %"class.aura::Window"*** %131 to i64*
  %133 = load i64, i64* %132, align 8
  %134 = bitcast %"class.aura::Window"*** %130 to i64*
  store i64 %133, i64* %134, align 8
  %135 = getelementptr inbounds %"class.aura::Window"**, %"class.aura::Window"*** %99, i64 7
  %136 = getelementptr inbounds %"class.aura::Window"**, %"class.aura::Window"*** %101, i64 7
  %137 = bitcast %"class.aura::Window"*** %136 to i64*
  %138 = load i64, i64* %137, align 8
  %139 = bitcast %"class.aura::Window"*** %135 to i64*
  store i64 %138, i64* %139, align 8
  %140 = getelementptr inbounds %"class.aura::Window"**, %"class.aura::Window"*** %99, i64 8
  %141 = ptrtoint %"class.aura::Window"*** %140 to i64
  %142 = getelementptr inbounds %"class.aura::Window"**, %"class.aura::Window"*** %101, i64 8
  %143 = icmp eq %"class.aura::Window"*** %70, %140
  br i1 %143, label %144, label %98

144:                                              ; preds = %98, %93
  %145 = ptrtoint %"class.aura::Window"*** %70 to i64
  %146 = load %"class.aura::Window"***, %"class.aura::Window"**** %23, align 8
  br label %147

147:                                              ; preds = %144, %56
  %148 = phi %"class.aura::Window"*** [ %146, %144 ], [ %24, %56 ]
  %149 = phi i64 [ %145, %144 ], [ %63, %56 ]
  store i64 %61, i64* %49, align 8
  %150 = bitcast %"class.aura::Window"**** %10 to i64*
  store i64 %63, i64* %150, align 8
  %151 = bitcast %"class.aura::Window"**** %15 to i64*
  store i64 %149, i64* %151, align 8
  store i64 %65, i64* %48, align 8
  %152 = icmp eq %"class.aura::Window"*** %148, null
  %153 = inttoptr i64 %149 to i64*
  br i1 %152, label %158, label %154

154:                                              ; preds = %147
  %155 = bitcast %"class.aura::Window"*** %148 to i8*
  tail call void @_ZdlPv(i8* %155) #10
  %156 = bitcast %"class.aura::Window"**** %15 to i64**
  %157 = load i64*, i64** %156, align 8
  br label %158

158:                                              ; preds = %8, %42, %147, %154
  %159 = phi i64* [ %157, %154 ], [ %153, %147 ], [ %46, %42 ], [ %21, %8 ]
  store i64 %13, i64* %159, align 8
  %160 = load %"class.aura::Window"***, %"class.aura::Window"**** %15, align 8
  %161 = getelementptr inbounds %"class.aura::Window"**, %"class.aura::Window"*** %160, i64 1
  store %"class.aura::Window"*** %161, %"class.aura::Window"**** %15, align 8
  br label %460

162:                                              ; preds = %1
  %163 = getelementptr inbounds %"class.std::__1::deque", %"class.std::__1::deque"* %0, i64 0, i32 0, i32 0
  %164 = getelementptr inbounds %"class.std::__1::deque", %"class.std::__1::deque"* %0, i64 0, i32 0, i32 0, i32 2
  %165 = bitcast %"class.aura::Window"**** %164 to i64*
  %166 = load i64, i64* %165, align 8
  %167 = getelementptr inbounds %"class.std::__1::deque", %"class.std::__1::deque"* %0, i64 0, i32 0, i32 0, i32 1
  %168 = bitcast %"class.aura::Window"**** %167 to i64*
  %169 = load i64, i64* %168, align 8
  %170 = sub i64 %166, %169
  %171 = ashr exact i64 %170, 3
  %172 = getelementptr inbounds %"class.std::__1::deque", %"class.std::__1::deque"* %0, i64 0, i32 0, i32 0, i32 3, i32 0, i32 0
  %173 = bitcast %"class.aura::Window"**** %172 to i64*
  %174 = load i64, i64* %173, align 8
  %175 = bitcast %"class.std::__1::deque"* %0 to i64*
  %176 = load i64, i64* %175, align 8
  %177 = sub i64 %174, %176
  %178 = ashr exact i64 %177, 3
  %179 = icmp ult i64 %171, %178
  %180 = inttoptr i64 %166 to %"class.aura::Window"***
  %181 = inttoptr i64 %169 to %"class.aura::Window"***
  br i1 %179, label %182, label %337

182:                                              ; preds = %162
  %183 = icmp eq i64 %174, %166
  br i1 %183, label %188, label %184

184:                                              ; preds = %182
  %185 = bitcast %"class.aura::Window"*** %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %185) #9
  %186 = tail call i8* @_Znwm(i64 4096) #10
  %187 = bitcast %"class.aura::Window"*** %2 to i8**
  store i8* %186, i8** %187, align 8
  call void @_ZNSt3__114__split_bufferIPPN4aura6WindowENS_9allocatorIS4_EEE9push_backEOS4_(%"struct.std::__1::__split_buffer"* %163, %"class.aura::Window"*** nonnull dereferenceable(8) %2)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %185) #9
  br label %460

188:                                              ; preds = %182
  %189 = bitcast %"class.aura::Window"*** %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %189) #9
  %190 = tail call i8* @_Znwm(i64 4096) #10
  %191 = bitcast %"class.aura::Window"*** %3 to i8**
  store i8* %190, i8** %191, align 8
  call void @_ZNSt3__114__split_bufferIPPN4aura6WindowENS_9allocatorIS4_EEE10push_frontEOS4_(%"struct.std::__1::__split_buffer"* %163, %"class.aura::Window"*** nonnull dereferenceable(8) %3)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %189) #9
  %192 = load %"class.aura::Window"***, %"class.aura::Window"**** %167, align 8
  %193 = bitcast %"class.aura::Window"*** %192 to i64*
  %194 = load i64, i64* %193, align 8
  %195 = getelementptr inbounds %"class.aura::Window"**, %"class.aura::Window"*** %192, i64 1
  store %"class.aura::Window"*** %195, %"class.aura::Window"**** %167, align 8
  %196 = load %"class.aura::Window"***, %"class.aura::Window"**** %164, align 8
  %197 = load %"class.aura::Window"***, %"class.aura::Window"**** %172, align 8
  %198 = icmp eq %"class.aura::Window"*** %196, %197
  %199 = ptrtoint %"class.aura::Window"*** %197 to i64
  %200 = bitcast %"class.aura::Window"*** %196 to i64*
  br i1 %198, label %201, label %333

201:                                              ; preds = %188
  %202 = getelementptr inbounds %"class.std::__1::deque", %"class.std::__1::deque"* %0, i64 0, i32 0, i32 0, i32 0
  %203 = load %"class.aura::Window"***, %"class.aura::Window"**** %202, align 8
  %204 = icmp ugt %"class.aura::Window"*** %195, %203
  %205 = ptrtoint %"class.aura::Window"*** %203 to i64
  br i1 %204, label %206, label %226

206:                                              ; preds = %201
  %207 = ptrtoint %"class.aura::Window"*** %195 to i64
  %208 = sub i64 %207, %205
  %209 = ashr exact i64 %208, 3
  %210 = add nsw i64 %209, 1
  %211 = sdiv i64 %210, -2
  %212 = getelementptr inbounds %"class.aura::Window"**, %"class.aura::Window"*** %195, i64 %211
  %213 = ptrtoint %"class.aura::Window"*** %196 to i64
  %214 = sub i64 %213, %207
  %215 = ashr exact i64 %214, 3
  %216 = icmp eq i64 %214, 0
  br i1 %216, label %221, label %217

217:                                              ; preds = %206
  %218 = bitcast %"class.aura::Window"*** %212 to i8*
  %219 = bitcast %"class.aura::Window"*** %195 to i8*
  call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %218, i8* align 8 %219, i64 %214, i1 false) #9
  %220 = load %"class.aura::Window"***, %"class.aura::Window"**** %167, align 8
  br label %221

221:                                              ; preds = %217, %206
  %222 = phi %"class.aura::Window"*** [ %195, %206 ], [ %220, %217 ]
  %223 = getelementptr inbounds %"class.aura::Window"**, %"class.aura::Window"*** %212, i64 %215
  store %"class.aura::Window"*** %223, %"class.aura::Window"**** %164, align 8
  %224 = getelementptr inbounds %"class.aura::Window"**, %"class.aura::Window"*** %222, i64 %211
  store %"class.aura::Window"*** %224, %"class.aura::Window"**** %167, align 8
  %225 = bitcast %"class.aura::Window"*** %223 to i64*
  br label %333

226:                                              ; preds = %201
  %227 = sub i64 %199, %205
  %228 = ashr exact i64 %227, 2
  %229 = icmp eq i64 %227, 0
  %230 = select i1 %229, i64 1, i64 %228
  %231 = icmp ugt i64 %230, 2305843009213693951
  br i1 %231, label %232, label %233

232:                                              ; preds = %226
  call void @abort() #11
  unreachable

233:                                              ; preds = %226
  %234 = lshr i64 %230, 2
  %235 = shl i64 %230, 3
  %236 = call i8* @_Znwm(i64 %235) #10
  %237 = bitcast i8* %236 to %"class.aura::Window"***
  %238 = ptrtoint i8* %236 to i64
  %239 = getelementptr inbounds %"class.aura::Window"**, %"class.aura::Window"*** %237, i64 %234
  %240 = ptrtoint %"class.aura::Window"*** %239 to i64
  %241 = getelementptr inbounds %"class.aura::Window"**, %"class.aura::Window"*** %237, i64 %230
  %242 = ptrtoint %"class.aura::Window"*** %241 to i64
  %243 = ptrtoint %"class.aura::Window"*** %195 to i64
  %244 = ptrtoint %"class.aura::Window"*** %196 to i64
  %245 = sub i64 %244, %243
  %246 = ashr exact i64 %245, 3
  %247 = getelementptr inbounds %"class.aura::Window"**, %"class.aura::Window"*** %239, i64 %246
  %248 = icmp eq i64 %245, 0
  br i1 %248, label %324, label %249

249:                                              ; preds = %233
  %250 = add i64 %245, -8
  %251 = lshr i64 %250, 3
  %252 = add nuw nsw i64 %251, 1
  %253 = and i64 %252, 7
  %254 = icmp eq i64 %253, 0
  br i1 %254, label %270, label %255

255:                                              ; preds = %249, %255
  %256 = phi %"class.aura::Window"*** [ %263, %255 ], [ %239, %249 ]
  %257 = phi i64 [ %264, %255 ], [ %240, %249 ]
  %258 = phi %"class.aura::Window"*** [ %265, %255 ], [ %195, %249 ]
  %259 = phi i64 [ %266, %255 ], [ %253, %249 ]
  %260 = bitcast %"class.aura::Window"*** %258 to i64*
  %261 = load i64, i64* %260, align 8
  %262 = inttoptr i64 %257 to i64*
  store i64 %261, i64* %262, align 8
  %263 = getelementptr inbounds %"class.aura::Window"**, %"class.aura::Window"*** %256, i64 1
  %264 = ptrtoint %"class.aura::Window"*** %263 to i64
  %265 = getelementptr inbounds %"class.aura::Window"**, %"class.aura::Window"*** %258, i64 1
  %266 = add i64 %259, -1
  %267 = icmp eq i64 %266, 0
  br i1 %267, label %268, label %255, !llvm.loop !4

268:                                              ; preds = %255
  %269 = ptrtoint %"class.aura::Window"*** %263 to i64
  br label %270

270:                                              ; preds = %249, %268
  %271 = phi %"class.aura::Window"*** [ %239, %249 ], [ %263, %268 ]
  %272 = phi i64 [ %240, %249 ], [ %269, %268 ]
  %273 = phi %"class.aura::Window"*** [ %195, %249 ], [ %265, %268 ]
  %274 = icmp ult i64 %250, 56
  br i1 %274, label %321, label %275

275:                                              ; preds = %270, %275
  %276 = phi %"class.aura::Window"*** [ %317, %275 ], [ %271, %270 ]
  %277 = phi i64 [ %318, %275 ], [ %272, %270 ]
  %278 = phi %"class.aura::Window"*** [ %319, %275 ], [ %273, %270 ]
  %279 = bitcast %"class.aura::Window"*** %278 to i64*
  %280 = load i64, i64* %279, align 8
  %281 = inttoptr i64 %277 to i64*
  store i64 %280, i64* %281, align 8
  %282 = getelementptr inbounds %"class.aura::Window"**, %"class.aura::Window"*** %276, i64 1
  %283 = getelementptr inbounds %"class.aura::Window"**, %"class.aura::Window"*** %278, i64 1
  %284 = bitcast %"class.aura::Window"*** %283 to i64*
  %285 = load i64, i64* %284, align 8
  %286 = bitcast %"class.aura::Window"*** %282 to i64*
  store i64 %285, i64* %286, align 8
  %287 = getelementptr inbounds %"class.aura::Window"**, %"class.aura::Window"*** %276, i64 2
  %288 = getelementptr inbounds %"class.aura::Window"**, %"class.aura::Window"*** %278, i64 2
  %289 = bitcast %"class.aura::Window"*** %288 to i64*
  %290 = load i64, i64* %289, align 8
  %291 = bitcast %"class.aura::Window"*** %287 to i64*
  store i64 %290, i64* %291, align 8
  %292 = getelementptr inbounds %"class.aura::Window"**, %"class.aura::Window"*** %276, i64 3
  %293 = getelementptr inbounds %"class.aura::Window"**, %"class.aura::Window"*** %278, i64 3
  %294 = bitcast %"class.aura::Window"*** %293 to i64*
  %295 = load i64, i64* %294, align 8
  %296 = bitcast %"class.aura::Window"*** %292 to i64*
  store i64 %295, i64* %296, align 8
  %297 = getelementptr inbounds %"class.aura::Window"**, %"class.aura::Window"*** %276, i64 4
  %298 = getelementptr inbounds %"class.aura::Window"**, %"class.aura::Window"*** %278, i64 4
  %299 = bitcast %"class.aura::Window"*** %298 to i64*
  %300 = load i64, i64* %299, align 8
  %301 = bitcast %"class.aura::Window"*** %297 to i64*
  store i64 %300, i64* %301, align 8
  %302 = getelementptr inbounds %"class.aura::Window"**, %"class.aura::Window"*** %276, i64 5
  %303 = getelementptr inbounds %"class.aura::Window"**, %"class.aura::Window"*** %278, i64 5
  %304 = bitcast %"class.aura::Window"*** %303 to i64*
  %305 = load i64, i64* %304, align 8
  %306 = bitcast %"class.aura::Window"*** %302 to i64*
  store i64 %305, i64* %306, align 8
  %307 = getelementptr inbounds %"class.aura::Window"**, %"class.aura::Window"*** %276, i64 6
  %308 = getelementptr inbounds %"class.aura::Window"**, %"class.aura::Window"*** %278, i64 6
  %309 = bitcast %"class.aura::Window"*** %308 to i64*
  %310 = load i64, i64* %309, align 8
  %311 = bitcast %"class.aura::Window"*** %307 to i64*
  store i64 %310, i64* %311, align 8
  %312 = getelementptr inbounds %"class.aura::Window"**, %"class.aura::Window"*** %276, i64 7
  %313 = getelementptr inbounds %"class.aura::Window"**, %"class.aura::Window"*** %278, i64 7
  %314 = bitcast %"class.aura::Window"*** %313 to i64*
  %315 = load i64, i64* %314, align 8
  %316 = bitcast %"class.aura::Window"*** %312 to i64*
  store i64 %315, i64* %316, align 8
  %317 = getelementptr inbounds %"class.aura::Window"**, %"class.aura::Window"*** %276, i64 8
  %318 = ptrtoint %"class.aura::Window"*** %317 to i64
  %319 = getelementptr inbounds %"class.aura::Window"**, %"class.aura::Window"*** %278, i64 8
  %320 = icmp eq %"class.aura::Window"*** %247, %317
  br i1 %320, label %321, label %275

321:                                              ; preds = %275, %270
  %322 = ptrtoint %"class.aura::Window"*** %247 to i64
  %323 = load %"class.aura::Window"***, %"class.aura::Window"**** %202, align 8
  br label %324

324:                                              ; preds = %321, %233
  %325 = phi %"class.aura::Window"*** [ %323, %321 ], [ %203, %233 ]
  %326 = phi i64 [ %322, %321 ], [ %240, %233 ]
  store i64 %238, i64* %175, align 8
  store i64 %240, i64* %168, align 8
  store i64 %326, i64* %165, align 8
  store i64 %242, i64* %173, align 8
  %327 = icmp eq %"class.aura::Window"*** %325, null
  %328 = inttoptr i64 %326 to i64*
  br i1 %327, label %333, label %329

329:                                              ; preds = %324
  %330 = bitcast %"class.aura::Window"*** %325 to i8*
  call void @_ZdlPv(i8* %330) #10
  %331 = bitcast %"class.aura::Window"**** %164 to i64**
  %332 = load i64*, i64** %331, align 8
  br label %333

333:                                              ; preds = %188, %221, %324, %329
  %334 = phi i64* [ %332, %329 ], [ %328, %324 ], [ %225, %221 ], [ %200, %188 ]
  store i64 %194, i64* %334, align 8
  %335 = load %"class.aura::Window"***, %"class.aura::Window"**** %164, align 8
  %336 = getelementptr inbounds %"class.aura::Window"**, %"class.aura::Window"*** %335, i64 1
  store %"class.aura::Window"*** %336, %"class.aura::Window"**** %164, align 8
  br label %460

337:                                              ; preds = %162
  %338 = bitcast %"struct.std::__1::__split_buffer.202"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %338) #9
  %339 = getelementptr inbounds %"struct.std::__1::__split_buffer.202", %"struct.std::__1::__split_buffer.202"* %4, i64 0, i32 1
  %340 = getelementptr inbounds %"struct.std::__1::__split_buffer.202", %"struct.std::__1::__split_buffer.202"* %4, i64 0, i32 2
  %341 = getelementptr inbounds %"struct.std::__1::__split_buffer.202", %"struct.std::__1::__split_buffer.202"* %4, i64 0, i32 3, i32 0, i32 0
  %342 = getelementptr inbounds %"struct.std::__1::__split_buffer.202", %"struct.std::__1::__split_buffer.202"* %4, i64 0, i32 3, i32 1, i32 0
  %343 = ashr exact i64 %177, 2
  %344 = icmp eq i64 %177, 0
  %345 = select i1 %344, i64 1, i64 %343
  %346 = getelementptr inbounds %"class.std::__1::deque", %"class.std::__1::deque"* %0, i64 0, i32 0, i32 0, i32 3
  %347 = bitcast %"struct.std::__1::__split_buffer.202"* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %347, i8 -86, i64 24, i1 false)
  store %"class.aura::Window"*** null, %"class.aura::Window"**** %341, align 8
  %348 = bitcast %"class.std::__1::allocator.185"** %342 to %"class.std::__1::__compressed_pair.182"**
  store %"class.std::__1::__compressed_pair.182"* %346, %"class.std::__1::__compressed_pair.182"** %348, align 8
  %349 = icmp ugt i64 %345, 2305843009213693951
  br i1 %349, label %350, label %351

350:                                              ; preds = %337
  tail call void @abort() #11
  unreachable

351:                                              ; preds = %337
  %352 = shl i64 %345, 3
  %353 = tail call i8* @_Znwm(i64 %352) #10
  %354 = bitcast i8* %353 to %"class.aura::Window"***
  %355 = bitcast %"struct.std::__1::__split_buffer.202"* %4 to i8**
  store i8* %353, i8** %355, align 8
  %356 = getelementptr inbounds %"class.aura::Window"**, %"class.aura::Window"*** %354, i64 %171
  store %"class.aura::Window"*** %356, %"class.aura::Window"**** %340, align 8
  store %"class.aura::Window"*** %356, %"class.aura::Window"**** %339, align 8
  %357 = getelementptr inbounds %"class.aura::Window"**, %"class.aura::Window"*** %354, i64 %345
  store %"class.aura::Window"*** %357, %"class.aura::Window"**** %341, align 8
  %358 = tail call i8* @_Znwm(i64 4096) #10
  %359 = ptrtoint i8* %358 to i64
  %360 = icmp eq i64 %171, %345
  %361 = ptrtoint %"class.aura::Window"*** %357 to i64
  %362 = ptrtoint i8* %353 to i64
  %363 = ptrtoint %"class.aura::Window"*** %356 to i64
  br i1 %360, label %364, label %398

364:                                              ; preds = %351
  %365 = icmp ugt %"class.aura::Window"*** %356, %354
  br i1 %365, label %366, label %373

366:                                              ; preds = %364
  %367 = sub i64 %363, %362
  %368 = ashr exact i64 %367, 3
  %369 = add nsw i64 %368, 1
  %370 = sdiv i64 %369, -2
  %371 = getelementptr inbounds %"class.aura::Window"**, %"class.aura::Window"*** %356, i64 %370
  store %"class.aura::Window"*** %371, %"class.aura::Window"**** %340, align 8
  store %"class.aura::Window"*** %371, %"class.aura::Window"**** %339, align 8
  %372 = ptrtoint %"class.aura::Window"*** %371 to i64
  br label %398

373:                                              ; preds = %364
  %374 = sub i64 %361, %362
  %375 = ashr exact i64 %374, 2
  %376 = icmp eq i64 %374, 0
  %377 = select i1 %376, i64 1, i64 %375
  %378 = icmp ugt i64 %377, 2305843009213693951
  br i1 %378, label %379, label %380

379:                                              ; preds = %373
  tail call void @abort() #11
  unreachable

380:                                              ; preds = %373
  %381 = bitcast %"struct.std::__1::__split_buffer.202"* %4 to i64*
  %382 = bitcast %"class.aura::Window"**** %341 to i64*
  %383 = lshr i64 %377, 2
  %384 = shl i64 %377, 3
  %385 = tail call i8* @_Znwm(i64 %384) #10
  %386 = bitcast i8* %385 to %"class.aura::Window"***
  %387 = ptrtoint i8* %385 to i64
  %388 = getelementptr inbounds %"class.aura::Window"**, %"class.aura::Window"*** %386, i64 %383
  %389 = ptrtoint %"class.aura::Window"*** %388 to i64
  %390 = getelementptr inbounds %"class.aura::Window"**, %"class.aura::Window"*** %386, i64 %377
  %391 = ptrtoint %"class.aura::Window"*** %390 to i64
  store i64 %387, i64* %381, align 8
  %392 = bitcast %"class.aura::Window"**** %339 to i64*
  store i64 %389, i64* %392, align 8
  %393 = bitcast %"class.aura::Window"**** %340 to i64*
  store i64 %389, i64* %393, align 8
  store i64 %391, i64* %382, align 8
  tail call void @_ZdlPv(i8* nonnull %353) #10
  %394 = load %"class.aura::Window"***, %"class.aura::Window"**** %164, align 8
  %395 = load %"class.aura::Window"***, %"class.aura::Window"**** %167, align 8
  %396 = ptrtoint %"class.aura::Window"*** %395 to i64
  %397 = ptrtoint %"class.aura::Window"*** %394 to i64
  br label %398

398:                                              ; preds = %351, %366, %380
  %399 = phi i64 [ %391, %380 ], [ %361, %366 ], [ %361, %351 ]
  %400 = phi i64 [ %397, %380 ], [ %166, %366 ], [ %166, %351 ]
  %401 = phi i64 [ %389, %380 ], [ %372, %366 ], [ %363, %351 ]
  %402 = phi i64 [ %396, %380 ], [ %169, %366 ], [ %169, %351 ]
  %403 = phi i64 [ %387, %380 ], [ %362, %366 ], [ %362, %351 ]
  %404 = phi %"class.aura::Window"*** [ %395, %380 ], [ %181, %366 ], [ %181, %351 ]
  %405 = phi %"class.aura::Window"*** [ %394, %380 ], [ %180, %366 ], [ %180, %351 ]
  %406 = phi %"class.aura::Window"*** [ %388, %380 ], [ %371, %366 ], [ %356, %351 ]
  %407 = bitcast %"class.aura::Window"*** %406 to i64*
  store i64 %359, i64* %407, align 8
  %408 = getelementptr inbounds %"class.aura::Window"**, %"class.aura::Window"*** %406, i64 1
  store %"class.aura::Window"*** %408, %"class.aura::Window"**** %340, align 8
  %409 = icmp eq %"class.aura::Window"*** %405, %404
  br i1 %409, label %410, label %455

410:                                              ; preds = %398
  %411 = ptrtoint %"class.aura::Window"*** %408 to i64
  %412 = bitcast %"struct.std::__1::__split_buffer.202"* %4 to i64*
  %413 = bitcast %"class.aura::Window"**** %339 to i64*
  %414 = bitcast %"class.aura::Window"**** %340 to i64*
  %415 = bitcast %"class.aura::Window"**** %341 to i64*
  br label %427

416:                                              ; preds = %455
  %417 = ptrtoint %"class.aura::Window"*** %458 to i64
  %418 = bitcast %"struct.std::__1::__split_buffer.202"* %4 to i64*
  %419 = load i64, i64* %418, align 8
  %420 = bitcast %"class.aura::Window"**** %339 to i64*
  %421 = load i64, i64* %420, align 8
  %422 = load i64, i64* %165, align 8
  %423 = bitcast %"class.aura::Window"**** %340 to i64*
  %424 = load i64, i64* %423, align 8
  %425 = bitcast %"class.aura::Window"**** %341 to i64*
  %426 = load i64, i64* %425, align 8
  br label %427

427:                                              ; preds = %410, %416
  %428 = phi i64* [ %415, %410 ], [ %425, %416 ]
  %429 = phi i64* [ %414, %410 ], [ %423, %416 ]
  %430 = phi i64* [ %413, %410 ], [ %420, %416 ]
  %431 = phi i64* [ %412, %410 ], [ %418, %416 ]
  %432 = phi i64 [ %399, %410 ], [ %426, %416 ]
  %433 = phi i64 [ %411, %410 ], [ %424, %416 ]
  %434 = phi i64 [ %400, %410 ], [ %422, %416 ]
  %435 = phi i64 [ %401, %410 ], [ %421, %416 ]
  %436 = phi i64 [ %402, %410 ], [ %417, %416 ]
  %437 = phi i64 [ %403, %410 ], [ %419, %416 ]
  %438 = load i64, i64* %175, align 8
  store i64 %437, i64* %175, align 8
  store i64 %438, i64* %431, align 8
  store i64 %435, i64* %168, align 8
  store i64 %436, i64* %430, align 8
  store i64 %433, i64* %165, align 8
  store i64 %434, i64* %429, align 8
  %439 = load i64, i64* %173, align 8
  store i64 %432, i64* %173, align 8
  store i64 %439, i64* %428, align 8
  %440 = inttoptr i64 %436 to %"class.aura::Window"***
  %441 = inttoptr i64 %434 to %"class.aura::Window"***
  %442 = icmp eq %"class.aura::Window"*** %441, %440
  br i1 %442, label %450, label %443

443:                                              ; preds = %427
  %444 = getelementptr %"class.aura::Window"**, %"class.aura::Window"*** %441, i64 -1
  %445 = ptrtoint %"class.aura::Window"*** %444 to i64
  %446 = sub i64 %445, %436
  %447 = lshr i64 %446, 3
  %448 = xor i64 %447, -1
  %449 = getelementptr %"class.aura::Window"**, %"class.aura::Window"*** %441, i64 %448
  store %"class.aura::Window"*** %449, %"class.aura::Window"**** %340, align 8
  br label %450

450:                                              ; preds = %443, %427
  %451 = icmp eq i64 %438, 0
  br i1 %451, label %454, label %452

452:                                              ; preds = %450
  %453 = inttoptr i64 %438 to i8*
  call void @_ZdlPv(i8* %453) #10
  br label %454

454:                                              ; preds = %450, %452
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %338) #9
  br label %460

455:                                              ; preds = %398, %455
  %456 = phi %"class.aura::Window"*** [ %457, %455 ], [ %405, %398 ]
  %457 = getelementptr inbounds %"class.aura::Window"**, %"class.aura::Window"*** %456, i64 -1
  call void @_ZNSt3__114__split_bufferIPPN4aura6WindowERNS_9allocatorIS4_EEE10push_frontERKS4_(%"struct.std::__1::__split_buffer.202"* nonnull %4, %"class.aura::Window"*** dereferenceable(8) %457)
  %458 = load %"class.aura::Window"***, %"class.aura::Window"**** %167, align 8
  %459 = icmp eq %"class.aura::Window"*** %457, %458
  br i1 %459, label %416, label %455

460:                                              ; preds = %454, %333, %184, %158
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__114__split_bufferIPPN4aura6WindowENS_9allocatorIS4_EEE9push_backEOS4_(%"struct.std::__1::__split_buffer"*, %"class.aura::Window"*** dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"struct.std::__1::__split_buffer", %"struct.std::__1::__split_buffer"* %0, i64 0, i32 2
  %4 = load %"class.aura::Window"***, %"class.aura::Window"**** %3, align 8
  %5 = getelementptr inbounds %"struct.std::__1::__split_buffer", %"struct.std::__1::__split_buffer"* %0, i64 0, i32 3, i32 0, i32 0
  %6 = load %"class.aura::Window"***, %"class.aura::Window"**** %5, align 8
  %7 = icmp eq %"class.aura::Window"*** %4, %6
  %8 = ptrtoint %"class.aura::Window"*** %6 to i64
  %9 = bitcast %"class.aura::Window"*** %4 to i64*
  br i1 %7, label %10, label %148

10:                                               ; preds = %2
  %11 = getelementptr inbounds %"struct.std::__1::__split_buffer", %"struct.std::__1::__split_buffer"* %0, i64 0, i32 1
  %12 = load %"class.aura::Window"***, %"class.aura::Window"**** %11, align 8
  %13 = getelementptr inbounds %"struct.std::__1::__split_buffer", %"struct.std::__1::__split_buffer"* %0, i64 0, i32 0
  %14 = load %"class.aura::Window"***, %"class.aura::Window"**** %13, align 8
  %15 = icmp ugt %"class.aura::Window"*** %12, %14
  %16 = ptrtoint %"class.aura::Window"*** %14 to i64
  br i1 %15, label %17, label %37

17:                                               ; preds = %10
  %18 = ptrtoint %"class.aura::Window"*** %12 to i64
  %19 = sub i64 %18, %16
  %20 = ashr exact i64 %19, 3
  %21 = add nsw i64 %20, 1
  %22 = sdiv i64 %21, -2
  %23 = getelementptr inbounds %"class.aura::Window"**, %"class.aura::Window"*** %12, i64 %22
  %24 = ptrtoint %"class.aura::Window"*** %4 to i64
  %25 = sub i64 %24, %18
  %26 = ashr exact i64 %25, 3
  %27 = icmp eq i64 %25, 0
  br i1 %27, label %32, label %28

28:                                               ; preds = %17
  %29 = bitcast %"class.aura::Window"*** %23 to i8*
  %30 = bitcast %"class.aura::Window"*** %12 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %29, i8* align 8 %30, i64 %25, i1 false) #9
  %31 = load %"class.aura::Window"***, %"class.aura::Window"**** %11, align 8
  br label %32

32:                                               ; preds = %17, %28
  %33 = phi %"class.aura::Window"*** [ %12, %17 ], [ %31, %28 ]
  %34 = getelementptr inbounds %"class.aura::Window"**, %"class.aura::Window"*** %23, i64 %26
  store %"class.aura::Window"*** %34, %"class.aura::Window"**** %3, align 8
  %35 = getelementptr inbounds %"class.aura::Window"**, %"class.aura::Window"*** %33, i64 %22
  store %"class.aura::Window"*** %35, %"class.aura::Window"**** %11, align 8
  %36 = bitcast %"class.aura::Window"*** %34 to i64*
  br label %148

37:                                               ; preds = %10
  %38 = bitcast %"class.aura::Window"**** %5 to i64*
  %39 = bitcast %"struct.std::__1::__split_buffer"* %0 to i64*
  %40 = sub i64 %8, %16
  %41 = ashr exact i64 %40, 2
  %42 = icmp eq i64 %40, 0
  %43 = select i1 %42, i64 1, i64 %41
  %44 = icmp ugt i64 %43, 2305843009213693951
  br i1 %44, label %45, label %46

45:                                               ; preds = %37
  tail call void @abort() #11
  unreachable

46:                                               ; preds = %37
  %47 = lshr i64 %43, 2
  %48 = shl i64 %43, 3
  %49 = tail call i8* @_Znwm(i64 %48) #10
  %50 = bitcast i8* %49 to %"class.aura::Window"***
  %51 = ptrtoint i8* %49 to i64
  %52 = getelementptr inbounds %"class.aura::Window"**, %"class.aura::Window"*** %50, i64 %47
  %53 = ptrtoint %"class.aura::Window"*** %52 to i64
  %54 = getelementptr inbounds %"class.aura::Window"**, %"class.aura::Window"*** %50, i64 %43
  %55 = ptrtoint %"class.aura::Window"*** %54 to i64
  %56 = ptrtoint %"class.aura::Window"*** %12 to i64
  %57 = ptrtoint %"class.aura::Window"*** %4 to i64
  %58 = sub i64 %57, %56
  %59 = ashr exact i64 %58, 3
  %60 = getelementptr inbounds %"class.aura::Window"**, %"class.aura::Window"*** %52, i64 %59
  %61 = icmp eq i64 %58, 0
  br i1 %61, label %137, label %62

62:                                               ; preds = %46
  %63 = add i64 %58, -8
  %64 = lshr i64 %63, 3
  %65 = add nuw nsw i64 %64, 1
  %66 = and i64 %65, 7
  %67 = icmp eq i64 %66, 0
  br i1 %67, label %83, label %68

68:                                               ; preds = %62, %68
  %69 = phi %"class.aura::Window"*** [ %76, %68 ], [ %52, %62 ]
  %70 = phi i64 [ %77, %68 ], [ %53, %62 ]
  %71 = phi %"class.aura::Window"*** [ %78, %68 ], [ %12, %62 ]
  %72 = phi i64 [ %79, %68 ], [ %66, %62 ]
  %73 = bitcast %"class.aura::Window"*** %71 to i64*
  %74 = load i64, i64* %73, align 8
  %75 = inttoptr i64 %70 to i64*
  store i64 %74, i64* %75, align 8
  %76 = getelementptr inbounds %"class.aura::Window"**, %"class.aura::Window"*** %69, i64 1
  %77 = ptrtoint %"class.aura::Window"*** %76 to i64
  %78 = getelementptr inbounds %"class.aura::Window"**, %"class.aura::Window"*** %71, i64 1
  %79 = add i64 %72, -1
  %80 = icmp eq i64 %79, 0
  br i1 %80, label %81, label %68, !llvm.loop !5

81:                                               ; preds = %68
  %82 = ptrtoint %"class.aura::Window"*** %76 to i64
  br label %83

83:                                               ; preds = %62, %81
  %84 = phi %"class.aura::Window"*** [ %52, %62 ], [ %76, %81 ]
  %85 = phi i64 [ %53, %62 ], [ %82, %81 ]
  %86 = phi %"class.aura::Window"*** [ %12, %62 ], [ %78, %81 ]
  %87 = icmp ult i64 %63, 56
  br i1 %87, label %134, label %88

88:                                               ; preds = %83, %88
  %89 = phi %"class.aura::Window"*** [ %130, %88 ], [ %84, %83 ]
  %90 = phi i64 [ %131, %88 ], [ %85, %83 ]
  %91 = phi %"class.aura::Window"*** [ %132, %88 ], [ %86, %83 ]
  %92 = bitcast %"class.aura::Window"*** %91 to i64*
  %93 = load i64, i64* %92, align 8
  %94 = inttoptr i64 %90 to i64*
  store i64 %93, i64* %94, align 8
  %95 = getelementptr inbounds %"class.aura::Window"**, %"class.aura::Window"*** %89, i64 1
  %96 = getelementptr inbounds %"class.aura::Window"**, %"class.aura::Window"*** %91, i64 1
  %97 = bitcast %"class.aura::Window"*** %96 to i64*
  %98 = load i64, i64* %97, align 8
  %99 = bitcast %"class.aura::Window"*** %95 to i64*
  store i64 %98, i64* %99, align 8
  %100 = getelementptr inbounds %"class.aura::Window"**, %"class.aura::Window"*** %89, i64 2
  %101 = getelementptr inbounds %"class.aura::Window"**, %"class.aura::Window"*** %91, i64 2
  %102 = bitcast %"class.aura::Window"*** %101 to i64*
  %103 = load i64, i64* %102, align 8
  %104 = bitcast %"class.aura::Window"*** %100 to i64*
  store i64 %103, i64* %104, align 8
  %105 = getelementptr inbounds %"class.aura::Window"**, %"class.aura::Window"*** %89, i64 3
  %106 = getelementptr inbounds %"class.aura::Window"**, %"class.aura::Window"*** %91, i64 3
  %107 = bitcast %"class.aura::Window"*** %106 to i64*
  %108 = load i64, i64* %107, align 8
  %109 = bitcast %"class.aura::Window"*** %105 to i64*
  store i64 %108, i64* %109, align 8
  %110 = getelementptr inbounds %"class.aura::Window"**, %"class.aura::Window"*** %89, i64 4
  %111 = getelementptr inbounds %"class.aura::Window"**, %"class.aura::Window"*** %91, i64 4
  %112 = bitcast %"class.aura::Window"*** %111 to i64*
  %113 = load i64, i64* %112, align 8
  %114 = bitcast %"class.aura::Window"*** %110 to i64*
  store i64 %113, i64* %114, align 8
  %115 = getelementptr inbounds %"class.aura::Window"**, %"class.aura::Window"*** %89, i64 5
  %116 = getelementptr inbounds %"class.aura::Window"**, %"class.aura::Window"*** %91, i64 5
  %117 = bitcast %"class.aura::Window"*** %116 to i64*
  %118 = load i64, i64* %117, align 8
  %119 = bitcast %"class.aura::Window"*** %115 to i64*
  store i64 %118, i64* %119, align 8
  %120 = getelementptr inbounds %"class.aura::Window"**, %"class.aura::Window"*** %89, i64 6
  %121 = getelementptr inbounds %"class.aura::Window"**, %"class.aura::Window"*** %91, i64 6
  %122 = bitcast %"class.aura::Window"*** %121 to i64*
  %123 = load i64, i64* %122, align 8
  %124 = bitcast %"class.aura::Window"*** %120 to i64*
  store i64 %123, i64* %124, align 8
  %125 = getelementptr inbounds %"class.aura::Window"**, %"class.aura::Window"*** %89, i64 7
  %126 = getelementptr inbounds %"class.aura::Window"**, %"class.aura::Window"*** %91, i64 7
  %127 = bitcast %"class.aura::Window"*** %126 to i64*
  %128 = load i64, i64* %127, align 8
  %129 = bitcast %"class.aura::Window"*** %125 to i64*
  store i64 %128, i64* %129, align 8
  %130 = getelementptr inbounds %"class.aura::Window"**, %"class.aura::Window"*** %89, i64 8
  %131 = ptrtoint %"class.aura::Window"*** %130 to i64
  %132 = getelementptr inbounds %"class.aura::Window"**, %"class.aura::Window"*** %91, i64 8
  %133 = icmp eq %"class.aura::Window"*** %60, %130
  br i1 %133, label %134, label %88

134:                                              ; preds = %88, %83
  %135 = ptrtoint %"class.aura::Window"*** %60 to i64
  %136 = load %"class.aura::Window"***, %"class.aura::Window"**** %13, align 8
  br label %137

137:                                              ; preds = %46, %134
  %138 = phi %"class.aura::Window"*** [ %136, %134 ], [ %14, %46 ]
  %139 = phi i64 [ %135, %134 ], [ %53, %46 ]
  store i64 %51, i64* %39, align 8
  %140 = bitcast %"class.aura::Window"**** %11 to i64*
  store i64 %53, i64* %140, align 8
  %141 = bitcast %"class.aura::Window"**** %3 to i64*
  store i64 %139, i64* %141, align 8
  store i64 %55, i64* %38, align 8
  %142 = icmp eq %"class.aura::Window"*** %138, null
  %143 = inttoptr i64 %139 to i64*
  br i1 %142, label %148, label %144

144:                                              ; preds = %137
  %145 = bitcast %"class.aura::Window"*** %138 to i8*
  tail call void @_ZdlPv(i8* %145) #10
  %146 = bitcast %"class.aura::Window"**** %3 to i64**
  %147 = load i64*, i64** %146, align 8
  br label %148

148:                                              ; preds = %144, %137, %32, %2
  %149 = phi i64* [ %147, %144 ], [ %143, %137 ], [ %36, %32 ], [ %9, %2 ]
  %150 = bitcast %"class.aura::Window"*** %1 to i64*
  %151 = load i64, i64* %150, align 8
  store i64 %151, i64* %149, align 8
  %152 = load %"class.aura::Window"***, %"class.aura::Window"**** %3, align 8
  %153 = getelementptr inbounds %"class.aura::Window"**, %"class.aura::Window"*** %152, i64 1
  store %"class.aura::Window"*** %153, %"class.aura::Window"**** %3, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__114__split_bufferIPPN4aura6WindowENS_9allocatorIS4_EEE10push_frontEOS4_(%"struct.std::__1::__split_buffer"*, %"class.aura::Window"*** dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"struct.std::__1::__split_buffer", %"struct.std::__1::__split_buffer"* %0, i64 0, i32 1
  %4 = load %"class.aura::Window"***, %"class.aura::Window"**** %3, align 8
  %5 = getelementptr inbounds %"struct.std::__1::__split_buffer", %"struct.std::__1::__split_buffer"* %0, i64 0, i32 0
  %6 = load %"class.aura::Window"***, %"class.aura::Window"**** %5, align 8
  %7 = icmp eq %"class.aura::Window"*** %4, %6
  %8 = ptrtoint %"class.aura::Window"*** %6 to i64
  br i1 %7, label %9, label %147

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"struct.std::__1::__split_buffer", %"struct.std::__1::__split_buffer"* %0, i64 0, i32 2
  %11 = load %"class.aura::Window"***, %"class.aura::Window"**** %10, align 8
  %12 = getelementptr inbounds %"struct.std::__1::__split_buffer", %"struct.std::__1::__split_buffer"* %0, i64 0, i32 3, i32 0, i32 0
  %13 = load %"class.aura::Window"***, %"class.aura::Window"**** %12, align 8
  %14 = icmp ult %"class.aura::Window"*** %11, %13
  %15 = bitcast %"class.aura::Window"**** %12 to i64*
  %16 = ptrtoint %"class.aura::Window"*** %13 to i64
  br i1 %14, label %17, label %38

17:                                               ; preds = %9
  %18 = ptrtoint %"class.aura::Window"*** %11 to i64
  %19 = sub i64 %16, %18
  %20 = ashr exact i64 %19, 3
  %21 = add nsw i64 %20, 1
  %22 = sdiv i64 %21, 2
  %23 = getelementptr inbounds %"class.aura::Window"**, %"class.aura::Window"*** %11, i64 %22
  %24 = ptrtoint %"class.aura::Window"*** %4 to i64
  %25 = sub i64 %18, %24
  %26 = icmp eq i64 %25, 0
  br i1 %26, label %34, label %27

27:                                               ; preds = %17
  %28 = ashr exact i64 %25, 3
  %29 = sub nsw i64 0, %28
  %30 = getelementptr inbounds %"class.aura::Window"**, %"class.aura::Window"*** %23, i64 %29
  %31 = bitcast %"class.aura::Window"*** %30 to i8*
  %32 = bitcast %"class.aura::Window"*** %4 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %31, i8* align 8 %32, i64 %25, i1 false) #9
  %33 = load %"class.aura::Window"***, %"class.aura::Window"**** %10, align 8
  br label %34

34:                                               ; preds = %17, %27
  %35 = phi %"class.aura::Window"*** [ %33, %27 ], [ %11, %17 ]
  %36 = phi %"class.aura::Window"*** [ %30, %27 ], [ %23, %17 ]
  store %"class.aura::Window"*** %36, %"class.aura::Window"**** %3, align 8
  %37 = getelementptr inbounds %"class.aura::Window"**, %"class.aura::Window"*** %35, i64 %22
  store %"class.aura::Window"*** %37, %"class.aura::Window"**** %10, align 8
  br label %147

38:                                               ; preds = %9
  %39 = bitcast %"struct.std::__1::__split_buffer"* %0 to i64*
  %40 = sub i64 %16, %8
  %41 = ashr exact i64 %40, 2
  %42 = icmp eq i64 %40, 0
  %43 = select i1 %42, i64 1, i64 %41
  %44 = icmp ugt i64 %43, 2305843009213693951
  br i1 %44, label %45, label %46

45:                                               ; preds = %38
  tail call void @abort() #11
  unreachable

46:                                               ; preds = %38
  %47 = add nuw nsw i64 %43, 3
  %48 = lshr i64 %47, 2
  %49 = shl i64 %43, 3
  %50 = tail call i8* @_Znwm(i64 %49) #10
  %51 = bitcast i8* %50 to %"class.aura::Window"***
  %52 = ptrtoint i8* %50 to i64
  %53 = getelementptr inbounds %"class.aura::Window"**, %"class.aura::Window"*** %51, i64 %48
  %54 = ptrtoint %"class.aura::Window"*** %53 to i64
  %55 = getelementptr inbounds %"class.aura::Window"**, %"class.aura::Window"*** %51, i64 %43
  %56 = ptrtoint %"class.aura::Window"*** %55 to i64
  %57 = ptrtoint %"class.aura::Window"*** %4 to i64
  %58 = ptrtoint %"class.aura::Window"*** %11 to i64
  %59 = sub i64 %58, %57
  %60 = ashr exact i64 %59, 3
  %61 = getelementptr inbounds %"class.aura::Window"**, %"class.aura::Window"*** %53, i64 %60
  %62 = icmp eq i64 %59, 0
  br i1 %62, label %138, label %63

63:                                               ; preds = %46
  %64 = add i64 %59, -8
  %65 = lshr i64 %64, 3
  %66 = add nuw nsw i64 %65, 1
  %67 = and i64 %66, 7
  %68 = icmp eq i64 %67, 0
  br i1 %68, label %84, label %69

69:                                               ; preds = %63, %69
  %70 = phi %"class.aura::Window"*** [ %77, %69 ], [ %53, %63 ]
  %71 = phi i64 [ %78, %69 ], [ %54, %63 ]
  %72 = phi %"class.aura::Window"*** [ %79, %69 ], [ %4, %63 ]
  %73 = phi i64 [ %80, %69 ], [ %67, %63 ]
  %74 = bitcast %"class.aura::Window"*** %72 to i64*
  %75 = load i64, i64* %74, align 8
  %76 = inttoptr i64 %71 to i64*
  store i64 %75, i64* %76, align 8
  %77 = getelementptr inbounds %"class.aura::Window"**, %"class.aura::Window"*** %70, i64 1
  %78 = ptrtoint %"class.aura::Window"*** %77 to i64
  %79 = getelementptr inbounds %"class.aura::Window"**, %"class.aura::Window"*** %72, i64 1
  %80 = add i64 %73, -1
  %81 = icmp eq i64 %80, 0
  br i1 %81, label %82, label %69, !llvm.loop !6

82:                                               ; preds = %69
  %83 = ptrtoint %"class.aura::Window"*** %77 to i64
  br label %84

84:                                               ; preds = %63, %82
  %85 = phi %"class.aura::Window"*** [ %53, %63 ], [ %77, %82 ]
  %86 = phi i64 [ %54, %63 ], [ %83, %82 ]
  %87 = phi %"class.aura::Window"*** [ %4, %63 ], [ %79, %82 ]
  %88 = icmp ult i64 %64, 56
  br i1 %88, label %135, label %89

89:                                               ; preds = %84, %89
  %90 = phi %"class.aura::Window"*** [ %131, %89 ], [ %85, %84 ]
  %91 = phi i64 [ %132, %89 ], [ %86, %84 ]
  %92 = phi %"class.aura::Window"*** [ %133, %89 ], [ %87, %84 ]
  %93 = bitcast %"class.aura::Window"*** %92 to i64*
  %94 = load i64, i64* %93, align 8
  %95 = inttoptr i64 %91 to i64*
  store i64 %94, i64* %95, align 8
  %96 = getelementptr inbounds %"class.aura::Window"**, %"class.aura::Window"*** %90, i64 1
  %97 = getelementptr inbounds %"class.aura::Window"**, %"class.aura::Window"*** %92, i64 1
  %98 = bitcast %"class.aura::Window"*** %97 to i64*
  %99 = load i64, i64* %98, align 8
  %100 = bitcast %"class.aura::Window"*** %96 to i64*
  store i64 %99, i64* %100, align 8
  %101 = getelementptr inbounds %"class.aura::Window"**, %"class.aura::Window"*** %90, i64 2
  %102 = getelementptr inbounds %"class.aura::Window"**, %"class.aura::Window"*** %92, i64 2
  %103 = bitcast %"class.aura::Window"*** %102 to i64*
  %104 = load i64, i64* %103, align 8
  %105 = bitcast %"class.aura::Window"*** %101 to i64*
  store i64 %104, i64* %105, align 8
  %106 = getelementptr inbounds %"class.aura::Window"**, %"class.aura::Window"*** %90, i64 3
  %107 = getelementptr inbounds %"class.aura::Window"**, %"class.aura::Window"*** %92, i64 3
  %108 = bitcast %"class.aura::Window"*** %107 to i64*
  %109 = load i64, i64* %108, align 8
  %110 = bitcast %"class.aura::Window"*** %106 to i64*
  store i64 %109, i64* %110, align 8
  %111 = getelementptr inbounds %"class.aura::Window"**, %"class.aura::Window"*** %90, i64 4
  %112 = getelementptr inbounds %"class.aura::Window"**, %"class.aura::Window"*** %92, i64 4
  %113 = bitcast %"class.aura::Window"*** %112 to i64*
  %114 = load i64, i64* %113, align 8
  %115 = bitcast %"class.aura::Window"*** %111 to i64*
  store i64 %114, i64* %115, align 8
  %116 = getelementptr inbounds %"class.aura::Window"**, %"class.aura::Window"*** %90, i64 5
  %117 = getelementptr inbounds %"class.aura::Window"**, %"class.aura::Window"*** %92, i64 5
  %118 = bitcast %"class.aura::Window"*** %117 to i64*
  %119 = load i64, i64* %118, align 8
  %120 = bitcast %"class.aura::Window"*** %116 to i64*
  store i64 %119, i64* %120, align 8
  %121 = getelementptr inbounds %"class.aura::Window"**, %"class.aura::Window"*** %90, i64 6
  %122 = getelementptr inbounds %"class.aura::Window"**, %"class.aura::Window"*** %92, i64 6
  %123 = bitcast %"class.aura::Window"*** %122 to i64*
  %124 = load i64, i64* %123, align 8
  %125 = bitcast %"class.aura::Window"*** %121 to i64*
  store i64 %124, i64* %125, align 8
  %126 = getelementptr inbounds %"class.aura::Window"**, %"class.aura::Window"*** %90, i64 7
  %127 = getelementptr inbounds %"class.aura::Window"**, %"class.aura::Window"*** %92, i64 7
  %128 = bitcast %"class.aura::Window"*** %127 to i64*
  %129 = load i64, i64* %128, align 8
  %130 = bitcast %"class.aura::Window"*** %126 to i64*
  store i64 %129, i64* %130, align 8
  %131 = getelementptr inbounds %"class.aura::Window"**, %"class.aura::Window"*** %90, i64 8
  %132 = ptrtoint %"class.aura::Window"*** %131 to i64
  %133 = getelementptr inbounds %"class.aura::Window"**, %"class.aura::Window"*** %92, i64 8
  %134 = icmp eq %"class.aura::Window"*** %61, %131
  br i1 %134, label %135, label %89

135:                                              ; preds = %89, %84
  %136 = ptrtoint %"class.aura::Window"*** %61 to i64
  %137 = load %"class.aura::Window"***, %"class.aura::Window"**** %5, align 8
  br label %138

138:                                              ; preds = %46, %135
  %139 = phi %"class.aura::Window"*** [ %137, %135 ], [ %4, %46 ]
  %140 = phi i64 [ %136, %135 ], [ %54, %46 ]
  store i64 %52, i64* %39, align 8
  %141 = bitcast %"class.aura::Window"**** %3 to i64*
  store i64 %54, i64* %141, align 8
  %142 = bitcast %"class.aura::Window"**** %10 to i64*
  store i64 %140, i64* %142, align 8
  store i64 %56, i64* %15, align 8
  %143 = icmp eq %"class.aura::Window"*** %139, null
  br i1 %143, label %147, label %144

144:                                              ; preds = %138
  %145 = bitcast %"class.aura::Window"*** %139 to i8*
  tail call void @_ZdlPv(i8* %145) #10
  %146 = load %"class.aura::Window"***, %"class.aura::Window"**** %3, align 8
  br label %147

147:                                              ; preds = %144, %138, %34, %2
  %148 = phi %"class.aura::Window"*** [ %146, %144 ], [ %53, %138 ], [ %36, %34 ], [ %4, %2 ]
  %149 = getelementptr inbounds %"class.aura::Window"**, %"class.aura::Window"*** %148, i64 -1
  %150 = bitcast %"class.aura::Window"*** %1 to i64*
  %151 = load i64, i64* %150, align 8
  %152 = bitcast %"class.aura::Window"*** %149 to i64*
  store i64 %151, i64* %152, align 8
  %153 = load %"class.aura::Window"***, %"class.aura::Window"**** %3, align 8
  %154 = getelementptr inbounds %"class.aura::Window"**, %"class.aura::Window"*** %153, i64 -1
  store %"class.aura::Window"*** %154, %"class.aura::Window"**** %3, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__114__split_bufferIPPN4aura6WindowERNS_9allocatorIS4_EEE10push_frontERKS4_(%"struct.std::__1::__split_buffer.202"*, %"class.aura::Window"*** dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"struct.std::__1::__split_buffer.202", %"struct.std::__1::__split_buffer.202"* %0, i64 0, i32 1
  %4 = load %"class.aura::Window"***, %"class.aura::Window"**** %3, align 8
  %5 = getelementptr inbounds %"struct.std::__1::__split_buffer.202", %"struct.std::__1::__split_buffer.202"* %0, i64 0, i32 0
  %6 = load %"class.aura::Window"***, %"class.aura::Window"**** %5, align 8
  %7 = icmp eq %"class.aura::Window"*** %4, %6
  %8 = ptrtoint %"class.aura::Window"*** %6 to i64
  br i1 %7, label %9, label %147

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"struct.std::__1::__split_buffer.202", %"struct.std::__1::__split_buffer.202"* %0, i64 0, i32 2
  %11 = load %"class.aura::Window"***, %"class.aura::Window"**** %10, align 8
  %12 = getelementptr inbounds %"struct.std::__1::__split_buffer.202", %"struct.std::__1::__split_buffer.202"* %0, i64 0, i32 3, i32 0, i32 0
  %13 = load %"class.aura::Window"***, %"class.aura::Window"**** %12, align 8
  %14 = icmp ult %"class.aura::Window"*** %11, %13
  %15 = bitcast %"class.aura::Window"**** %12 to i64*
  %16 = ptrtoint %"class.aura::Window"*** %13 to i64
  br i1 %14, label %17, label %38

17:                                               ; preds = %9
  %18 = ptrtoint %"class.aura::Window"*** %11 to i64
  %19 = sub i64 %16, %18
  %20 = ashr exact i64 %19, 3
  %21 = add nsw i64 %20, 1
  %22 = sdiv i64 %21, 2
  %23 = getelementptr inbounds %"class.aura::Window"**, %"class.aura::Window"*** %11, i64 %22
  %24 = ptrtoint %"class.aura::Window"*** %4 to i64
  %25 = sub i64 %18, %24
  %26 = icmp eq i64 %25, 0
  br i1 %26, label %34, label %27

27:                                               ; preds = %17
  %28 = ashr exact i64 %25, 3
  %29 = sub nsw i64 0, %28
  %30 = getelementptr inbounds %"class.aura::Window"**, %"class.aura::Window"*** %23, i64 %29
  %31 = bitcast %"class.aura::Window"*** %30 to i8*
  %32 = bitcast %"class.aura::Window"*** %4 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %31, i8* align 8 %32, i64 %25, i1 false) #9
  %33 = load %"class.aura::Window"***, %"class.aura::Window"**** %10, align 8
  br label %34

34:                                               ; preds = %17, %27
  %35 = phi %"class.aura::Window"*** [ %33, %27 ], [ %11, %17 ]
  %36 = phi %"class.aura::Window"*** [ %30, %27 ], [ %23, %17 ]
  store %"class.aura::Window"*** %36, %"class.aura::Window"**** %3, align 8
  %37 = getelementptr inbounds %"class.aura::Window"**, %"class.aura::Window"*** %35, i64 %22
  store %"class.aura::Window"*** %37, %"class.aura::Window"**** %10, align 8
  br label %147

38:                                               ; preds = %9
  %39 = bitcast %"struct.std::__1::__split_buffer.202"* %0 to i64*
  %40 = sub i64 %16, %8
  %41 = ashr exact i64 %40, 2
  %42 = icmp eq i64 %40, 0
  %43 = select i1 %42, i64 1, i64 %41
  %44 = icmp ugt i64 %43, 2305843009213693951
  br i1 %44, label %45, label %46

45:                                               ; preds = %38
  tail call void @abort() #11
  unreachable

46:                                               ; preds = %38
  %47 = add nuw nsw i64 %43, 3
  %48 = lshr i64 %47, 2
  %49 = shl i64 %43, 3
  %50 = tail call i8* @_Znwm(i64 %49) #10
  %51 = bitcast i8* %50 to %"class.aura::Window"***
  %52 = ptrtoint i8* %50 to i64
  %53 = getelementptr inbounds %"class.aura::Window"**, %"class.aura::Window"*** %51, i64 %48
  %54 = ptrtoint %"class.aura::Window"*** %53 to i64
  %55 = getelementptr inbounds %"class.aura::Window"**, %"class.aura::Window"*** %51, i64 %43
  %56 = ptrtoint %"class.aura::Window"*** %55 to i64
  %57 = ptrtoint %"class.aura::Window"*** %4 to i64
  %58 = ptrtoint %"class.aura::Window"*** %11 to i64
  %59 = sub i64 %58, %57
  %60 = ashr exact i64 %59, 3
  %61 = getelementptr inbounds %"class.aura::Window"**, %"class.aura::Window"*** %53, i64 %60
  %62 = icmp eq i64 %59, 0
  br i1 %62, label %138, label %63

63:                                               ; preds = %46
  %64 = add i64 %59, -8
  %65 = lshr i64 %64, 3
  %66 = add nuw nsw i64 %65, 1
  %67 = and i64 %66, 7
  %68 = icmp eq i64 %67, 0
  br i1 %68, label %84, label %69

69:                                               ; preds = %63, %69
  %70 = phi %"class.aura::Window"*** [ %77, %69 ], [ %53, %63 ]
  %71 = phi i64 [ %78, %69 ], [ %54, %63 ]
  %72 = phi %"class.aura::Window"*** [ %79, %69 ], [ %4, %63 ]
  %73 = phi i64 [ %80, %69 ], [ %67, %63 ]
  %74 = bitcast %"class.aura::Window"*** %72 to i64*
  %75 = load i64, i64* %74, align 8
  %76 = inttoptr i64 %71 to i64*
  store i64 %75, i64* %76, align 8
  %77 = getelementptr inbounds %"class.aura::Window"**, %"class.aura::Window"*** %70, i64 1
  %78 = ptrtoint %"class.aura::Window"*** %77 to i64
  %79 = getelementptr inbounds %"class.aura::Window"**, %"class.aura::Window"*** %72, i64 1
  %80 = add i64 %73, -1
  %81 = icmp eq i64 %80, 0
  br i1 %81, label %82, label %69, !llvm.loop !7

82:                                               ; preds = %69
  %83 = ptrtoint %"class.aura::Window"*** %77 to i64
  br label %84

84:                                               ; preds = %63, %82
  %85 = phi %"class.aura::Window"*** [ %53, %63 ], [ %77, %82 ]
  %86 = phi i64 [ %54, %63 ], [ %83, %82 ]
  %87 = phi %"class.aura::Window"*** [ %4, %63 ], [ %79, %82 ]
  %88 = icmp ult i64 %64, 56
  br i1 %88, label %135, label %89

89:                                               ; preds = %84, %89
  %90 = phi %"class.aura::Window"*** [ %131, %89 ], [ %85, %84 ]
  %91 = phi i64 [ %132, %89 ], [ %86, %84 ]
  %92 = phi %"class.aura::Window"*** [ %133, %89 ], [ %87, %84 ]
  %93 = bitcast %"class.aura::Window"*** %92 to i64*
  %94 = load i64, i64* %93, align 8
  %95 = inttoptr i64 %91 to i64*
  store i64 %94, i64* %95, align 8
  %96 = getelementptr inbounds %"class.aura::Window"**, %"class.aura::Window"*** %90, i64 1
  %97 = getelementptr inbounds %"class.aura::Window"**, %"class.aura::Window"*** %92, i64 1
  %98 = bitcast %"class.aura::Window"*** %97 to i64*
  %99 = load i64, i64* %98, align 8
  %100 = bitcast %"class.aura::Window"*** %96 to i64*
  store i64 %99, i64* %100, align 8
  %101 = getelementptr inbounds %"class.aura::Window"**, %"class.aura::Window"*** %90, i64 2
  %102 = getelementptr inbounds %"class.aura::Window"**, %"class.aura::Window"*** %92, i64 2
  %103 = bitcast %"class.aura::Window"*** %102 to i64*
  %104 = load i64, i64* %103, align 8
  %105 = bitcast %"class.aura::Window"*** %101 to i64*
  store i64 %104, i64* %105, align 8
  %106 = getelementptr inbounds %"class.aura::Window"**, %"class.aura::Window"*** %90, i64 3
  %107 = getelementptr inbounds %"class.aura::Window"**, %"class.aura::Window"*** %92, i64 3
  %108 = bitcast %"class.aura::Window"*** %107 to i64*
  %109 = load i64, i64* %108, align 8
  %110 = bitcast %"class.aura::Window"*** %106 to i64*
  store i64 %109, i64* %110, align 8
  %111 = getelementptr inbounds %"class.aura::Window"**, %"class.aura::Window"*** %90, i64 4
  %112 = getelementptr inbounds %"class.aura::Window"**, %"class.aura::Window"*** %92, i64 4
  %113 = bitcast %"class.aura::Window"*** %112 to i64*
  %114 = load i64, i64* %113, align 8
  %115 = bitcast %"class.aura::Window"*** %111 to i64*
  store i64 %114, i64* %115, align 8
  %116 = getelementptr inbounds %"class.aura::Window"**, %"class.aura::Window"*** %90, i64 5
  %117 = getelementptr inbounds %"class.aura::Window"**, %"class.aura::Window"*** %92, i64 5
  %118 = bitcast %"class.aura::Window"*** %117 to i64*
  %119 = load i64, i64* %118, align 8
  %120 = bitcast %"class.aura::Window"*** %116 to i64*
  store i64 %119, i64* %120, align 8
  %121 = getelementptr inbounds %"class.aura::Window"**, %"class.aura::Window"*** %90, i64 6
  %122 = getelementptr inbounds %"class.aura::Window"**, %"class.aura::Window"*** %92, i64 6
  %123 = bitcast %"class.aura::Window"*** %122 to i64*
  %124 = load i64, i64* %123, align 8
  %125 = bitcast %"class.aura::Window"*** %121 to i64*
  store i64 %124, i64* %125, align 8
  %126 = getelementptr inbounds %"class.aura::Window"**, %"class.aura::Window"*** %90, i64 7
  %127 = getelementptr inbounds %"class.aura::Window"**, %"class.aura::Window"*** %92, i64 7
  %128 = bitcast %"class.aura::Window"*** %127 to i64*
  %129 = load i64, i64* %128, align 8
  %130 = bitcast %"class.aura::Window"*** %126 to i64*
  store i64 %129, i64* %130, align 8
  %131 = getelementptr inbounds %"class.aura::Window"**, %"class.aura::Window"*** %90, i64 8
  %132 = ptrtoint %"class.aura::Window"*** %131 to i64
  %133 = getelementptr inbounds %"class.aura::Window"**, %"class.aura::Window"*** %92, i64 8
  %134 = icmp eq %"class.aura::Window"*** %61, %131
  br i1 %134, label %135, label %89

135:                                              ; preds = %89, %84
  %136 = ptrtoint %"class.aura::Window"*** %61 to i64
  %137 = load %"class.aura::Window"***, %"class.aura::Window"**** %5, align 8
  br label %138

138:                                              ; preds = %46, %135
  %139 = phi %"class.aura::Window"*** [ %137, %135 ], [ %4, %46 ]
  %140 = phi i64 [ %136, %135 ], [ %54, %46 ]
  store i64 %52, i64* %39, align 8
  %141 = bitcast %"class.aura::Window"**** %3 to i64*
  store i64 %54, i64* %141, align 8
  %142 = bitcast %"class.aura::Window"**** %10 to i64*
  store i64 %140, i64* %142, align 8
  store i64 %56, i64* %15, align 8
  %143 = icmp eq %"class.aura::Window"*** %139, null
  br i1 %143, label %147, label %144

144:                                              ; preds = %138
  %145 = bitcast %"class.aura::Window"*** %139 to i8*
  tail call void @_ZdlPv(i8* %145) #10
  %146 = load %"class.aura::Window"***, %"class.aura::Window"**** %3, align 8
  br label %147

147:                                              ; preds = %144, %138, %34, %2
  %148 = phi %"class.aura::Window"*** [ %146, %144 ], [ %53, %138 ], [ %36, %34 ], [ %4, %2 ]
  %149 = getelementptr inbounds %"class.aura::Window"**, %"class.aura::Window"*** %148, i64 -1
  %150 = bitcast %"class.aura::Window"*** %1 to i64*
  %151 = load i64, i64* %150, align 8
  %152 = bitcast %"class.aura::Window"*** %149 to i64*
  store i64 %151, i64* %152, align 8
  %153 = load %"class.aura::Window"***, %"class.aura::Window"**** %3, align 8
  %154 = getelementptr inbounds %"class.aura::Window"**, %"class.aura::Window"*** %153, i64 -1
  store %"class.aura::Window"*** %154, %"class.aura::Window"**** %3, align 8
  ret void
}

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind }
attributes #3 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nounwind }
attributes #10 = { builtin nounwind }
attributes #11 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = distinct !{!2, !3}
!3 = !{!"llvm.loop.unroll.disable"}
!4 = distinct !{!4, !3}
!5 = distinct !{!5, !3}
!6 = distinct !{!6, !3}
!7 = distinct !{!7, !3}
