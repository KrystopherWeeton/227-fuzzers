; ModuleID = '../../net/reporting/reporting_report.cc'
source_filename = "../../net/reporting/reporting_report.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"struct.net::ReportingReport" = type <{ %"class.net::NetworkIsolationKey", %class.GURL, %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::unique_ptr.10", i32, [4 x i8], %"class.base::TimeTicks", i32, i32, i32, [4 x i8] }>
%"class.net::NetworkIsolationKey" = type { i8, %"class.absl::optional", %"class.absl::optional" }
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon }
%union.anon = type { %"class.net::SchemefulSite" }
%"class.net::SchemefulSite" = type { %"class.url::Origin" }
%"class.url::Origin" = type { %"class.url::SchemeHostPort", %"class.absl::optional.2" }
%"class.url::SchemeHostPort" = type <{ %"class.std::__1::basic_string", %"class.std::__1::basic_string", i16, [6 x i8] }>
%"class.absl::optional.2" = type { %"class.absl::optional_internal::optional_data.3" }
%"class.absl::optional_internal::optional_data.3" = type { %"class.absl::optional_internal::optional_data_base.4" }
%"class.absl::optional_internal::optional_data_base.4" = type { %"class.absl::optional_internal::optional_data_dtor_base.5" }
%"class.absl::optional_internal::optional_data_dtor_base.5" = type { i8, %union.anon.6 }
%union.anon.6 = type { %"class.url::Origin::Nonce" }
%"class.url::Origin::Nonce" = type { %"class.base::UnguessableToken" }
%"class.base::UnguessableToken" = type { %"class.base::Token" }
%"class.base::Token" = type { i64, i64 }
%class.GURL = type { %"class.std::__1::basic_string", i8, %"struct.url::Parsed", %"class.std::__1::unique_ptr" }
%"struct.url::Parsed" = type { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, %"struct.url::Parsed"* }
%"struct.url::Component" = type { i32, i32 }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair.7" }
%"class.std::__1::__compressed_pair.7" = type { %"struct.std::__1::__compressed_pair_elem.8" }
%"struct.std::__1::__compressed_pair_elem.8" = type { %class.GURL* }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon.0 }
%union.anon.0 = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::unique_ptr.10" = type { %"class.std::__1::__compressed_pair.11" }
%"class.std::__1::__compressed_pair.11" = type { %"struct.std::__1::__compressed_pair_elem.12" }
%"struct.std::__1::__compressed_pair_elem.12" = type { %"class.base::Value"* }
%"class.base::Value" = type { %"class.absl::variant" }
%"class.absl::variant" = type { %"class.absl::variant_internal::VariantCopyAssignBaseNontrivial" }
%"class.absl::variant_internal::VariantCopyAssignBaseNontrivial" = type { %"class.absl::variant_internal::VariantMoveAssignBaseNontrivial" }
%"class.absl::variant_internal::VariantMoveAssignBaseNontrivial" = type { %"class.absl::variant_internal::VariantCopyBaseNontrivial" }
%"class.absl::variant_internal::VariantCopyBaseNontrivial" = type { %"class.absl::variant_internal::VariantMoveBaseNontrivial" }
%"class.absl::variant_internal::VariantMoveBaseNontrivial" = type { %"class.absl::variant_internal::VariantStateBaseDestructorNontrivial" }
%"class.absl::variant_internal::VariantStateBaseDestructorNontrivial" = type { %"class.absl::variant_internal::VariantStateBase" }
%"class.absl::variant_internal::VariantStateBase" = type { %"union.absl::variant_internal::DestructibleUnionImpl", i64 }
%"union.absl::variant_internal::DestructibleUnionImpl" = type { %"union.absl::variant_internal::DestructibleUnionImpl.13" }
%"union.absl::variant_internal::DestructibleUnionImpl.13" = type { %"union.absl::variant_internal::DestructibleUnionImpl.14" }
%"union.absl::variant_internal::DestructibleUnionImpl.14" = type { %"union.absl::variant_internal::DestructibleUnionImpl.15" }
%"union.absl::variant_internal::DestructibleUnionImpl.15" = type { %"union.absl::variant_internal::DestructibleUnionImpl.16" }
%"union.absl::variant_internal::DestructibleUnionImpl.16" = type { %"class.std::__1::basic_string" }
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }
%"class.base::HistogramBase" = type <{ i32 (...)**, i8*, %"struct.std::__1::atomic.44", [4 x i8] }>
%"struct.std::__1::atomic.44" = type { %"struct.std::__1::__atomic_base.45" }
%"struct.std::__1::__atomic_base.45" = type { %"struct.std::__1::__atomic_base.46" }
%"struct.std::__1::__atomic_base.46" = type { %"struct.std::__1::__cxx_atomic_impl.47" }
%"struct.std::__1::__cxx_atomic_impl.47" = type { %"struct.std::__1::__cxx_atomic_base_impl.48" }
%"struct.std::__1::__cxx_atomic_base_impl.48" = type { i32 }
%"struct.net::ReportingEndpointGroupKey" = type { %"class.net::NetworkIsolationKey", %"class.url::Origin", %"class.std::__1::basic_string" }

@.str = private unnamed_addr constant [28 x i8] c"Net.Reporting.ReportOutcome\00", align 1
@_ZZN3net12_GLOBAL__N_119RecordReportOutcomeENS_15ReportingReport7OutcomeEE24atomic_histogram_pointer.0.0.0.0.0 = internal unnamed_addr global i64 0, align 8

@_ZN3net15ReportingReportC1ERKNS_19NetworkIsolationKeyERK4GURLRKNSt3__112basic_stringIcNS7_11char_traitsIcEENS7_9allocatorIcEEEESF_SF_NS7_10unique_ptrIKN4base5ValueENS7_14default_deleteISJ_EEEEiNSH_9TimeTicksEi = hidden unnamed_addr alias void (%"struct.net::ReportingReport"*, %"class.net::NetworkIsolationKey"*, %class.GURL*, %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"*, i64, i32, i64, i32), void (%"struct.net::ReportingReport"*, %"class.net::NetworkIsolationKey"*, %class.GURL*, %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"*, i64, i32, i64, i32)* @_ZN3net15ReportingReportC2ERKNS_19NetworkIsolationKeyERK4GURLRKNSt3__112basic_stringIcNS7_11char_traitsIcEENS7_9allocatorIcEEEESF_SF_NS7_10unique_ptrIKN4base5ValueENS7_14default_deleteISJ_EEEEiNSH_9TimeTicksEi
@_ZN3net15ReportingReportD1Ev = hidden unnamed_addr alias void (%"struct.net::ReportingReport"*), void (%"struct.net::ReportingReport"*)* @_ZN3net15ReportingReportD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net15ReportingReportC2ERKNS_19NetworkIsolationKeyERK4GURLRKNSt3__112basic_stringIcNS7_11char_traitsIcEENS7_9allocatorIcEEEESF_SF_NS7_10unique_ptrIKN4base5ValueENS7_14default_deleteISJ_EEEEiNSH_9TimeTicksEi(%"struct.net::ReportingReport"*, %"class.net::NetworkIsolationKey"* dereferenceable(184), %class.GURL* dereferenceable(120), %"class.std::__1::basic_string"* nocapture readonly dereferenceable(24), %"class.std::__1::basic_string"* nocapture readonly dereferenceable(24), %"class.std::__1::basic_string"* nocapture readonly dereferenceable(24), i64, i32, i64, i32) unnamed_addr #0 align 2 {
  %11 = getelementptr inbounds %"struct.net::ReportingReport", %"struct.net::ReportingReport"* %0, i64 0, i32 0
  tail call void @_ZN3net19NetworkIsolationKeyC1ERKS0_(%"class.net::NetworkIsolationKey"* %11, %"class.net::NetworkIsolationKey"* dereferenceable(184) %1) #6
  %12 = getelementptr inbounds %"struct.net::ReportingReport", %"struct.net::ReportingReport"* %0, i64 0, i32 1
  tail call void @_ZN4GURLC1ERKS_(%class.GURL* %12, %class.GURL* dereferenceable(120) %2) #6
  %13 = getelementptr inbounds %"struct.net::ReportingReport", %"struct.net::ReportingReport"* %0, i64 0, i32 2
  %14 = bitcast %"class.std::__1::basic_string"* %3 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %15 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %14, i64 0, i32 1, i32 0
  %16 = load i8, i8* %15, align 1
  %17 = icmp slt i8 %16, 0
  br i1 %17, label %21, label %18

18:                                               ; preds = %10
  %19 = bitcast %"class.std::__1::basic_string"* %13 to i8*
  %20 = bitcast %"class.std::__1::basic_string"* %3 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %19, i8* align 8 %20, i64 24, i1 false) #6
  br label %26

21:                                               ; preds = %10
  %22 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %23 = load i8*, i8** %22, align 8
  %24 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %25 = load i64, i64* %24, align 8
  tail call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* %13, i8* %23, i64 %25) #6
  br label %26

26:                                               ; preds = %18, %21
  %27 = getelementptr inbounds %"struct.net::ReportingReport", %"struct.net::ReportingReport"* %0, i64 0, i32 3
  %28 = bitcast %"class.std::__1::basic_string"* %4 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %29 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %28, i64 0, i32 1, i32 0
  %30 = load i8, i8* %29, align 1
  %31 = icmp slt i8 %30, 0
  br i1 %31, label %35, label %32

32:                                               ; preds = %26
  %33 = bitcast %"class.std::__1::basic_string"* %27 to i8*
  %34 = bitcast %"class.std::__1::basic_string"* %4 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %33, i8* align 8 %34, i64 24, i1 false) #6
  br label %40

35:                                               ; preds = %26
  %36 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %37 = load i8*, i8** %36, align 8
  %38 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %39 = load i64, i64* %38, align 8
  tail call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* %27, i8* %37, i64 %39) #6
  br label %40

40:                                               ; preds = %32, %35
  %41 = getelementptr inbounds %"struct.net::ReportingReport", %"struct.net::ReportingReport"* %0, i64 0, i32 4
  %42 = bitcast %"class.std::__1::basic_string"* %5 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %43 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %42, i64 0, i32 1, i32 0
  %44 = load i8, i8* %43, align 1
  %45 = icmp slt i8 %44, 0
  br i1 %45, label %49, label %46

46:                                               ; preds = %40
  %47 = bitcast %"class.std::__1::basic_string"* %41 to i8*
  %48 = bitcast %"class.std::__1::basic_string"* %5 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %47, i8* align 8 %48, i64 24, i1 false) #6
  br label %54

49:                                               ; preds = %40
  %50 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %51 = load i8*, i8** %50, align 8
  %52 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %53 = load i64, i64* %52, align 8
  tail call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* %41, i8* %51, i64 %53) #6
  br label %54

54:                                               ; preds = %49, %46
  %55 = getelementptr inbounds %"struct.net::ReportingReport", %"struct.net::ReportingReport"* %0, i64 0, i32 5
  %56 = bitcast %"class.std::__1::unique_ptr.10"* %55 to i64*
  store i64 %6, i64* %56, align 8
  %57 = getelementptr inbounds %"struct.net::ReportingReport", %"struct.net::ReportingReport"* %0, i64 0, i32 6
  store i32 %7, i32* %57, align 8
  %58 = getelementptr inbounds %"struct.net::ReportingReport", %"struct.net::ReportingReport"* %0, i64 0, i32 8, i32 0, i32 0
  store i64 %8, i64* %58, align 8
  %59 = getelementptr inbounds %"struct.net::ReportingReport", %"struct.net::ReportingReport"* %0, i64 0, i32 9
  store i32 %9, i32* %59, align 8
  %60 = getelementptr inbounds %"struct.net::ReportingReport", %"struct.net::ReportingReport"* %0, i64 0, i32 10
  store i32 0, i32* %60, align 4
  %61 = getelementptr inbounds %"struct.net::ReportingReport", %"struct.net::ReportingReport"* %0, i64 0, i32 11
  store i32 0, i32* %61, align 8
  ret void
}

declare void @_ZN3net19NetworkIsolationKeyC1ERKS0_(%"class.net::NetworkIsolationKey"*, %"class.net::NetworkIsolationKey"* dereferenceable(184)) unnamed_addr #1

declare void @_ZN4GURLC1ERKS_(%class.GURL*, %class.GURL* dereferenceable(120)) unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net15ReportingReportD2Ev(%"struct.net::ReportingReport"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"struct.net::ReportingReport", %"struct.net::ReportingReport"* %0, i64 0, i32 10
  %3 = load i32, i32* %2, align 4
  %4 = load atomic i64, i64* @_ZZN3net12_GLOBAL__N_119RecordReportOutcomeENS_15ReportingReport7OutcomeEE24atomic_histogram_pointer.0.0.0.0.0 acquire, align 8
  %5 = inttoptr i64 %4 to %"class.base::HistogramBase"*
  %6 = icmp eq i64 %4, 0
  br i1 %6, label %7, label %10

7:                                                ; preds = %1
  %8 = tail call %"class.base::HistogramBase"* @_ZN4base15LinearHistogram10FactoryGetEPKciiji(i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str, i64 0, i64 0), i32 1, i32 10, i32 11, i32 1) #6
  %9 = ptrtoint %"class.base::HistogramBase"* %8 to i64
  store atomic i64 %9, i64* @_ZZN3net12_GLOBAL__N_119RecordReportOutcomeENS_15ReportingReport7OutcomeEE24atomic_histogram_pointer.0.0.0.0.0 release, align 8
  br label %10

10:                                               ; preds = %1, %7
  %11 = phi %"class.base::HistogramBase"* [ %5, %1 ], [ %8, %7 ]
  %12 = bitcast %"class.base::HistogramBase"* %11 to void (%"class.base::HistogramBase"*, i32)***
  %13 = load void (%"class.base::HistogramBase"*, i32)**, void (%"class.base::HistogramBase"*, i32)*** %12, align 8
  %14 = getelementptr inbounds void (%"class.base::HistogramBase"*, i32)*, void (%"class.base::HistogramBase"*, i32)** %13, i64 6
  %15 = load void (%"class.base::HistogramBase"*, i32)*, void (%"class.base::HistogramBase"*, i32)** %14, align 8
  tail call void %15(%"class.base::HistogramBase"* %11, i32 %3) #6
  %16 = getelementptr inbounds %"struct.net::ReportingReport", %"struct.net::ReportingReport"* %0, i64 0, i32 5, i32 0, i32 0, i32 0
  %17 = load %"class.base::Value"*, %"class.base::Value"** %16, align 8
  store %"class.base::Value"* null, %"class.base::Value"** %16, align 8
  %18 = icmp eq %"class.base::Value"* %17, null
  br i1 %18, label %21, label %19

19:                                               ; preds = %10
  tail call void @_ZN4base5ValueD1Ev(%"class.base::Value"* nonnull %17) #6
  %20 = bitcast %"class.base::Value"* %17 to i8*
  tail call void @_ZdlPv(i8* %20) #7
  br label %21

21:                                               ; preds = %10, %19
  %22 = getelementptr inbounds %"struct.net::ReportingReport", %"struct.net::ReportingReport"* %0, i64 0, i32 4
  %23 = bitcast %"class.std::__1::basic_string"* %22 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %24 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %23, i64 0, i32 1, i32 0
  %25 = load i8, i8* %24, align 1
  %26 = icmp slt i8 %25, 0
  br i1 %26, label %27, label %30

27:                                               ; preds = %21
  %28 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %22, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %29 = load i8*, i8** %28, align 8
  tail call void @_ZdlPv(i8* %29) #7
  br label %30

30:                                               ; preds = %21, %27
  %31 = getelementptr inbounds %"struct.net::ReportingReport", %"struct.net::ReportingReport"* %0, i64 0, i32 3
  %32 = bitcast %"class.std::__1::basic_string"* %31 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %33 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %32, i64 0, i32 1, i32 0
  %34 = load i8, i8* %33, align 1
  %35 = icmp slt i8 %34, 0
  br i1 %35, label %36, label %39

36:                                               ; preds = %30
  %37 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %31, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %38 = load i8*, i8** %37, align 8
  tail call void @_ZdlPv(i8* %38) #7
  br label %39

39:                                               ; preds = %30, %36
  %40 = getelementptr inbounds %"struct.net::ReportingReport", %"struct.net::ReportingReport"* %0, i64 0, i32 2
  %41 = bitcast %"class.std::__1::basic_string"* %40 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %42 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %41, i64 0, i32 1, i32 0
  %43 = load i8, i8* %42, align 1
  %44 = icmp slt i8 %43, 0
  br i1 %44, label %45, label %48

45:                                               ; preds = %39
  %46 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %40, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %47 = load i8*, i8** %46, align 8
  tail call void @_ZdlPv(i8* %47) #7
  br label %48

48:                                               ; preds = %39, %45
  %49 = getelementptr inbounds %"struct.net::ReportingReport", %"struct.net::ReportingReport"* %0, i64 0, i32 1
  tail call void @_ZN4GURLD1Ev(%class.GURL* %49) #6
  %50 = getelementptr inbounds %"struct.net::ReportingReport", %"struct.net::ReportingReport"* %0, i64 0, i32 0
  tail call void @_ZN3net19NetworkIsolationKeyD1Ev(%"class.net::NetworkIsolationKey"* %50) #6
  ret void
}

; Function Attrs: nounwind
declare void @_ZN4GURLD1Ev(%class.GURL*) unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN3net19NetworkIsolationKeyD1Ev(%"class.net::NetworkIsolationKey"*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK3net15ReportingReport11GetGroupKeyEv(%"struct.net::ReportingEndpointGroupKey"* noalias sret, %"struct.net::ReportingReport"*) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.url::Origin", align 8
  %4 = getelementptr inbounds %"struct.net::ReportingReport", %"struct.net::ReportingReport"* %1, i64 0, i32 0
  %5 = bitcast %"class.url::Origin"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 80, i8* nonnull %5) #6
  %6 = getelementptr inbounds %"struct.net::ReportingReport", %"struct.net::ReportingReport"* %1, i64 0, i32 1
  call void @_ZN3url6Origin6CreateERK4GURL(%"class.url::Origin"* nonnull sret %3, %class.GURL* dereferenceable(120) %6) #6
  %7 = getelementptr inbounds %"struct.net::ReportingReport", %"struct.net::ReportingReport"* %1, i64 0, i32 3
  call void @_ZN3net25ReportingEndpointGroupKeyC1ERKNS_19NetworkIsolationKeyERKN3url6OriginERKNSt3__112basic_stringIcNS8_11char_traitsIcEENS8_9allocatorIcEEEE(%"struct.net::ReportingEndpointGroupKey"* %0, %"class.net::NetworkIsolationKey"* dereferenceable(184) %4, %"class.url::Origin"* nonnull dereferenceable(80) %3, %"class.std::__1::basic_string"* dereferenceable(24) %7) #6
  call void @_ZN3url6OriginD1Ev(%"class.url::Origin"* nonnull %3) #6
  call void @llvm.lifetime.end.p0i8(i64 80, i8* nonnull %5) #6
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

declare void @_ZN3url6Origin6CreateERK4GURL(%"class.url::Origin"* sret, %class.GURL* dereferenceable(120)) local_unnamed_addr #1

declare void @_ZN3net25ReportingEndpointGroupKeyC1ERKNS_19NetworkIsolationKeyERKN3url6OriginERKNSt3__112basic_stringIcNS8_11char_traitsIcEENS8_9allocatorIcEEEE(%"struct.net::ReportingEndpointGroupKey"*, %"class.net::NetworkIsolationKey"* dereferenceable(184), %"class.url::Origin"* dereferenceable(80), %"class.std::__1::basic_string"* dereferenceable(24)) unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN3url6OriginD1Ev(%"class.url::Origin"*) unnamed_addr #3

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net15ReportingReport43RecordReportDiscardedForNoURLRequestContextEv() local_unnamed_addr #0 align 2 {
  %1 = load atomic i64, i64* @_ZZN3net12_GLOBAL__N_119RecordReportOutcomeENS_15ReportingReport7OutcomeEE24atomic_histogram_pointer.0.0.0.0.0 acquire, align 8
  %2 = inttoptr i64 %1 to %"class.base::HistogramBase"*
  %3 = icmp eq i64 %1, 0
  br i1 %3, label %4, label %7

4:                                                ; preds = %0
  %5 = tail call %"class.base::HistogramBase"* @_ZN4base15LinearHistogram10FactoryGetEPKciiji(i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str, i64 0, i64 0), i32 1, i32 10, i32 11, i32 1) #6
  %6 = ptrtoint %"class.base::HistogramBase"* %5 to i64
  store atomic i64 %6, i64* @_ZZN3net12_GLOBAL__N_119RecordReportOutcomeENS_15ReportingReport7OutcomeEE24atomic_histogram_pointer.0.0.0.0.0 release, align 8
  br label %7

7:                                                ; preds = %0, %4
  %8 = phi %"class.base::HistogramBase"* [ %2, %0 ], [ %5, %4 ]
  %9 = bitcast %"class.base::HistogramBase"* %8 to void (%"class.base::HistogramBase"*, i32)***
  %10 = load void (%"class.base::HistogramBase"*, i32)**, void (%"class.base::HistogramBase"*, i32)*** %9, align 8
  %11 = getelementptr inbounds void (%"class.base::HistogramBase"*, i32)*, void (%"class.base::HistogramBase"*, i32)** %10, i64 6
  %12 = load void (%"class.base::HistogramBase"*, i32)*, void (%"class.base::HistogramBase"*, i32)** %11, align 8
  tail call void %12(%"class.base::HistogramBase"* %8, i32 1) #6
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net15ReportingReport42RecordReportDiscardedForNoReportingServiceEv() local_unnamed_addr #0 align 2 {
  %1 = load atomic i64, i64* @_ZZN3net12_GLOBAL__N_119RecordReportOutcomeENS_15ReportingReport7OutcomeEE24atomic_histogram_pointer.0.0.0.0.0 acquire, align 8
  %2 = inttoptr i64 %1 to %"class.base::HistogramBase"*
  %3 = icmp eq i64 %1, 0
  br i1 %3, label %4, label %7

4:                                                ; preds = %0
  %5 = tail call %"class.base::HistogramBase"* @_ZN4base15LinearHistogram10FactoryGetEPKciiji(i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str, i64 0, i64 0), i32 1, i32 10, i32 11, i32 1) #6
  %6 = ptrtoint %"class.base::HistogramBase"* %5 to i64
  store atomic i64 %6, i64* @_ZZN3net12_GLOBAL__N_119RecordReportOutcomeENS_15ReportingReport7OutcomeEE24atomic_histogram_pointer.0.0.0.0.0 release, align 8
  br label %7

7:                                                ; preds = %0, %4
  %8 = phi %"class.base::HistogramBase"* [ %2, %0 ], [ %5, %4 ]
  %9 = bitcast %"class.base::HistogramBase"* %8 to void (%"class.base::HistogramBase"*, i32)***
  %10 = load void (%"class.base::HistogramBase"*, i32)**, void (%"class.base::HistogramBase"*, i32)*** %9, align 8
  %11 = getelementptr inbounds void (%"class.base::HistogramBase"*, i32)*, void (%"class.base::HistogramBase"*, i32)** %10, i64 6
  %12 = load void (%"class.base::HistogramBase"*, i32)*, void (%"class.base::HistogramBase"*, i32)** %11, align 8
  tail call void %12(%"class.base::HistogramBase"* %8, i32 2) #6
  ret void
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK3net15ReportingReport15IsUploadPendingEv(%"struct.net::ReportingReport"* nocapture readonly) local_unnamed_addr #4 align 2 {
  %2 = getelementptr inbounds %"struct.net::ReportingReport", %"struct.net::ReportingReport"* %0, i64 0, i32 11
  %3 = load i32, i32* %2, align 8
  %4 = add i32 %3, -1
  %5 = icmp ult i32 %4, 2
  ret i1 %5
}

declare %"class.base::HistogramBase"* @_ZN4base15LinearHistogram10FactoryGetEPKciiji(i8*, i32, i32, i32, i32) local_unnamed_addr #1

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #5

declare void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"*, i8*, i64) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN4base5ValueD1Ev(%"class.base::Value"*) unnamed_addr #3

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind }
attributes #3 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nounwind }
attributes #7 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
