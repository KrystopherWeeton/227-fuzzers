; ModuleID = '../../third_party/harfbuzz-ng/src/src/hb-ot-name.cc'
source_filename = "../../third_party/harfbuzz-ng/src/src/hb-ot-name.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%struct.hb_ot_name_entry_t = type { i32, %union._hb_var_int_t, %struct.hb_language_impl_t* }
%union._hb_var_int_t = type { i32 }
%struct.hb_language_impl_t = type opaque
%struct.hb_face_t = type { %struct.hb_object_header_t, %struct.hb_blob_t* (%struct.hb_face_t*, i32, i8*)*, i8*, void (i8*)*, i32, %struct.hb_atomic_int_t, %struct.hb_atomic_int_t, %struct.hb_shaper_object_dataset_t, %struct.hb_ot_face_t, %struct.hb_atomic_ptr_t.127 }
%struct.hb_object_header_t = type { %struct.hb_reference_count_t, %struct.hb_atomic_int_t, %struct.hb_atomic_ptr_t }
%struct.hb_reference_count_t = type { %struct.hb_atomic_int_t }
%struct.hb_atomic_ptr_t = type { %struct.hb_user_data_array_t* }
%struct.hb_user_data_array_t = type { %struct.hb_mutex_t, %struct.hb_lockable_set_t }
%struct.hb_mutex_t = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%struct.hb_lockable_set_t = type { %struct.hb_vector_t }
%struct.hb_vector_t = type { i32, i32, %"struct.hb_user_data_array_t::hb_user_data_item_t"* }
%"struct.hb_user_data_array_t::hb_user_data_item_t" = type { %struct.hb_user_data_key_t*, i8*, void (i8*)* }
%struct.hb_user_data_key_t = type { i8 }
%struct.hb_blob_t = type { %struct.hb_object_header_t, i8*, i32, i32, i8*, void (i8*)* }
%struct.hb_atomic_int_t = type { i32 }
%struct.hb_shaper_object_dataset_t = type { %struct.hb_face_t*, %struct.hb_shaper_lazy_loader_t }
%struct.hb_shaper_lazy_loader_t = type { %struct.hb_lazy_loader_t }
%struct.hb_lazy_loader_t = type { %struct.hb_atomic_ptr_t.0 }
%struct.hb_atomic_ptr_t.0 = type { %struct.hb_ot_face_data_t* }
%struct.hb_ot_face_data_t = type opaque
%struct.hb_ot_face_t = type { %struct.hb_face_t*, %struct.hb_table_lazy_loader_t, %struct.hb_face_lazy_loader_t, %struct.hb_table_lazy_loader_t.6, %struct.hb_face_lazy_loader_t.9, %struct.hb_table_lazy_loader_t.13, %struct.hb_face_lazy_loader_t.16, %struct.hb_face_lazy_loader_t.20, %struct.hb_table_lazy_loader_t.25, %struct.hb_face_lazy_loader_t.28, %struct.hb_table_lazy_loader_t.32, %struct.hb_face_lazy_loader_t.35, %struct.hb_face_lazy_loader_t.39, %struct.hb_face_lazy_loader_t.43, %struct.hb_face_lazy_loader_t.47, %struct.hb_table_lazy_loader_t.51, %struct.hb_table_lazy_loader_t.54, %struct.hb_table_lazy_loader_t.57, %struct.hb_face_lazy_loader_t.60, %struct.hb_table_lazy_loader_t.64, %struct.hb_table_lazy_loader_t.67, %struct.hb_face_lazy_loader_t.70, %struct.hb_face_lazy_loader_t.74, %struct.hb_face_lazy_loader_t.78, %struct.hb_table_lazy_loader_t.82, %struct.hb_table_lazy_loader_t.85, %struct.hb_table_lazy_loader_t.88, %struct.hb_table_lazy_loader_t.91, %struct.hb_table_lazy_loader_t.94, %struct.hb_table_lazy_loader_t.97, %struct.hb_table_lazy_loader_t.100, %struct.hb_table_lazy_loader_t.103, %struct.hb_table_lazy_loader_t.106, %struct.hb_table_lazy_loader_t.109, %struct.hb_face_lazy_loader_t.112, %struct.hb_face_lazy_loader_t.116, %struct.hb_face_lazy_loader_t.120, %struct.hb_table_lazy_loader_t.124 }
%struct.hb_table_lazy_loader_t = type { %struct.hb_lazy_loader_t.1 }
%struct.hb_lazy_loader_t.1 = type { %struct.hb_atomic_ptr_t.2 }
%struct.hb_atomic_ptr_t.2 = type { %struct.hb_blob_t* }
%struct.hb_face_lazy_loader_t = type { %struct.hb_lazy_loader_t.3 }
%struct.hb_lazy_loader_t.3 = type { %struct.hb_atomic_ptr_t.5 }
%struct.hb_atomic_ptr_t.5 = type { %"struct.OT::cmap_accelerator_t"* }
%"struct.OT::cmap_accelerator_t" = type opaque
%struct.hb_table_lazy_loader_t.6 = type { %struct.hb_lazy_loader_t.7 }
%struct.hb_lazy_loader_t.7 = type { %struct.hb_atomic_ptr_t.2 }
%struct.hb_face_lazy_loader_t.9 = type { %struct.hb_lazy_loader_t.10 }
%struct.hb_lazy_loader_t.10 = type { %struct.hb_atomic_ptr_t.12 }
%struct.hb_atomic_ptr_t.12 = type { %"struct.OT::hmtx_accelerator_t"* }
%"struct.OT::hmtx_accelerator_t" = type opaque
%struct.hb_table_lazy_loader_t.13 = type { %struct.hb_lazy_loader_t.14 }
%struct.hb_lazy_loader_t.14 = type { %struct.hb_atomic_ptr_t.2 }
%struct.hb_face_lazy_loader_t.16 = type { %struct.hb_lazy_loader_t.17 }
%struct.hb_lazy_loader_t.17 = type { %struct.hb_atomic_ptr_t.19 }
%struct.hb_atomic_ptr_t.19 = type { %"struct.OT::post_accelerator_t"* }
%"struct.OT::post_accelerator_t" = type opaque
%struct.hb_face_lazy_loader_t.20 = type { %struct.hb_lazy_loader_t.21 }
%struct.hb_lazy_loader_t.21 = type { %struct.hb_atomic_ptr_t.23 }
%struct.hb_atomic_ptr_t.23 = type { %"struct.OT::name_accelerator_t"* }
%"struct.OT::name_accelerator_t" = type { %"struct.OT::name::accelerator_t" }
%"struct.OT::name::accelerator_t" = type { i8*, i32, %struct.hb_blob_ptr_t, %struct.hb_vector_t.24 }
%struct.hb_blob_ptr_t = type { %struct.hb_nonnull_ptr_t }
%struct.hb_nonnull_ptr_t = type { %struct.hb_blob_t* }
%struct.hb_vector_t.24 = type { i32, i32, %struct.hb_ot_name_entry_t* }
%struct.hb_table_lazy_loader_t.25 = type { %struct.hb_lazy_loader_t.26 }
%struct.hb_lazy_loader_t.26 = type { %struct.hb_atomic_ptr_t.2 }
%struct.hb_face_lazy_loader_t.28 = type { %struct.hb_lazy_loader_t.29 }
%struct.hb_lazy_loader_t.29 = type { %struct.hb_atomic_ptr_t.31 }
%struct.hb_atomic_ptr_t.31 = type { %"struct.OT::meta_accelerator_t"* }
%"struct.OT::meta_accelerator_t" = type opaque
%struct.hb_table_lazy_loader_t.32 = type { %struct.hb_lazy_loader_t.33 }
%struct.hb_lazy_loader_t.33 = type { %struct.hb_atomic_ptr_t.2 }
%struct.hb_face_lazy_loader_t.35 = type { %struct.hb_lazy_loader_t.36 }
%struct.hb_lazy_loader_t.36 = type { %struct.hb_atomic_ptr_t.38 }
%struct.hb_atomic_ptr_t.38 = type { %"struct.OT::vmtx_accelerator_t"* }
%"struct.OT::vmtx_accelerator_t" = type opaque
%struct.hb_face_lazy_loader_t.39 = type { %struct.hb_lazy_loader_t.40 }
%struct.hb_lazy_loader_t.40 = type { %struct.hb_atomic_ptr_t.42 }
%struct.hb_atomic_ptr_t.42 = type { %"struct.OT::glyf_accelerator_t"* }
%"struct.OT::glyf_accelerator_t" = type opaque
%struct.hb_face_lazy_loader_t.43 = type { %struct.hb_lazy_loader_t.44 }
%struct.hb_lazy_loader_t.44 = type { %struct.hb_atomic_ptr_t.46 }
%struct.hb_atomic_ptr_t.46 = type { %"struct.OT::cff1_accelerator_t"* }
%"struct.OT::cff1_accelerator_t" = type opaque
%struct.hb_face_lazy_loader_t.47 = type { %struct.hb_lazy_loader_t.48 }
%struct.hb_lazy_loader_t.48 = type { %struct.hb_atomic_ptr_t.50 }
%struct.hb_atomic_ptr_t.50 = type { %"struct.OT::cff2_accelerator_t"* }
%"struct.OT::cff2_accelerator_t" = type opaque
%struct.hb_table_lazy_loader_t.51 = type { %struct.hb_lazy_loader_t.52 }
%struct.hb_lazy_loader_t.52 = type { %struct.hb_atomic_ptr_t.2 }
%struct.hb_table_lazy_loader_t.54 = type { %struct.hb_lazy_loader_t.55 }
%struct.hb_lazy_loader_t.55 = type { %struct.hb_atomic_ptr_t.2 }
%struct.hb_table_lazy_loader_t.57 = type { %struct.hb_lazy_loader_t.58 }
%struct.hb_lazy_loader_t.58 = type { %struct.hb_atomic_ptr_t.2 }
%struct.hb_face_lazy_loader_t.60 = type { %struct.hb_lazy_loader_t.61 }
%struct.hb_lazy_loader_t.61 = type { %struct.hb_atomic_ptr_t.63 }
%struct.hb_atomic_ptr_t.63 = type { %"struct.OT::gvar_accelerator_t"* }
%"struct.OT::gvar_accelerator_t" = type opaque
%struct.hb_table_lazy_loader_t.64 = type { %struct.hb_lazy_loader_t.65 }
%struct.hb_lazy_loader_t.65 = type { %struct.hb_atomic_ptr_t.2 }
%struct.hb_table_lazy_loader_t.67 = type { %struct.hb_lazy_loader_t.68 }
%struct.hb_lazy_loader_t.68 = type { %struct.hb_atomic_ptr_t.2 }
%struct.hb_face_lazy_loader_t.70 = type { %struct.hb_lazy_loader_t.71 }
%struct.hb_lazy_loader_t.71 = type { %struct.hb_atomic_ptr_t.73 }
%struct.hb_atomic_ptr_t.73 = type { %"struct.OT::GDEF_accelerator_t"* }
%"struct.OT::GDEF_accelerator_t" = type opaque
%struct.hb_face_lazy_loader_t.74 = type { %struct.hb_lazy_loader_t.75 }
%struct.hb_lazy_loader_t.75 = type { %struct.hb_atomic_ptr_t.77 }
%struct.hb_atomic_ptr_t.77 = type { %"struct.OT::GSUB_accelerator_t"* }
%"struct.OT::GSUB_accelerator_t" = type opaque
%struct.hb_face_lazy_loader_t.78 = type { %struct.hb_lazy_loader_t.79 }
%struct.hb_lazy_loader_t.79 = type { %struct.hb_atomic_ptr_t.81 }
%struct.hb_atomic_ptr_t.81 = type { %"struct.OT::GPOS_accelerator_t"* }
%"struct.OT::GPOS_accelerator_t" = type opaque
%struct.hb_table_lazy_loader_t.82 = type { %struct.hb_lazy_loader_t.83 }
%struct.hb_lazy_loader_t.83 = type { %struct.hb_atomic_ptr_t.2 }
%struct.hb_table_lazy_loader_t.85 = type { %struct.hb_lazy_loader_t.86 }
%struct.hb_lazy_loader_t.86 = type { %struct.hb_atomic_ptr_t.2 }
%struct.hb_table_lazy_loader_t.88 = type { %struct.hb_lazy_loader_t.89 }
%struct.hb_lazy_loader_t.89 = type { %struct.hb_atomic_ptr_t.2 }
%struct.hb_table_lazy_loader_t.91 = type { %struct.hb_lazy_loader_t.92 }
%struct.hb_lazy_loader_t.92 = type { %struct.hb_atomic_ptr_t.2 }
%struct.hb_table_lazy_loader_t.94 = type { %struct.hb_lazy_loader_t.95 }
%struct.hb_lazy_loader_t.95 = type { %struct.hb_atomic_ptr_t.2 }
%struct.hb_table_lazy_loader_t.97 = type { %struct.hb_lazy_loader_t.98 }
%struct.hb_lazy_loader_t.98 = type { %struct.hb_atomic_ptr_t.2 }
%struct.hb_table_lazy_loader_t.100 = type { %struct.hb_lazy_loader_t.101 }
%struct.hb_lazy_loader_t.101 = type { %struct.hb_atomic_ptr_t.2 }
%struct.hb_table_lazy_loader_t.103 = type { %struct.hb_lazy_loader_t.104 }
%struct.hb_lazy_loader_t.104 = type { %struct.hb_atomic_ptr_t.2 }
%struct.hb_table_lazy_loader_t.106 = type { %struct.hb_lazy_loader_t.107 }
%struct.hb_lazy_loader_t.107 = type { %struct.hb_atomic_ptr_t.2 }
%struct.hb_table_lazy_loader_t.109 = type { %struct.hb_lazy_loader_t.110 }
%struct.hb_lazy_loader_t.110 = type { %struct.hb_atomic_ptr_t.2 }
%struct.hb_face_lazy_loader_t.112 = type { %struct.hb_lazy_loader_t.113 }
%struct.hb_lazy_loader_t.113 = type { %struct.hb_atomic_ptr_t.115 }
%struct.hb_atomic_ptr_t.115 = type { %"struct.OT::CBDT_accelerator_t"* }
%"struct.OT::CBDT_accelerator_t" = type opaque
%struct.hb_face_lazy_loader_t.116 = type { %struct.hb_lazy_loader_t.117 }
%struct.hb_lazy_loader_t.117 = type { %struct.hb_atomic_ptr_t.119 }
%struct.hb_atomic_ptr_t.119 = type { %"struct.OT::sbix_accelerator_t"* }
%"struct.OT::sbix_accelerator_t" = type opaque
%struct.hb_face_lazy_loader_t.120 = type { %struct.hb_lazy_loader_t.121 }
%struct.hb_lazy_loader_t.121 = type { %struct.hb_atomic_ptr_t.123 }
%struct.hb_atomic_ptr_t.123 = type { %"struct.OT::SVG_accelerator_t"* }
%"struct.OT::SVG_accelerator_t" = type opaque
%struct.hb_table_lazy_loader_t.124 = type { %struct.hb_lazy_loader_t.125 }
%struct.hb_lazy_loader_t.125 = type { %struct.hb_atomic_ptr_t.2 }
%struct.hb_atomic_ptr_t.127 = type { %"struct.hb_face_t::plan_node_t"* }
%"struct.hb_face_t::plan_node_t" = type { %struct.hb_shape_plan_t*, %"struct.hb_face_t::plan_node_t"* }
%struct.hb_shape_plan_t = type { %struct.hb_object_header_t, %struct.hb_face_t*, %struct.hb_shape_plan_key_t, %struct.hb_ot_shape_plan_t }
%struct.hb_shape_plan_key_t = type { %struct.hb_segment_properties_t, %struct.hb_feature_t*, i32, %struct.hb_ot_shape_plan_key_t, i32 (%struct.hb_shape_plan_t*, %struct.hb_font_t*, %struct.hb_buffer_t*, %struct.hb_feature_t*, i32)*, i8* }
%struct.hb_segment_properties_t = type { i32, i32, %struct.hb_language_impl_t*, i8*, i8* }
%struct.hb_feature_t = type { i32, i32, i32, i32 }
%struct.hb_ot_shape_plan_key_t = type { [2 x i32] }
%struct.hb_font_t = type { %struct.hb_object_header_t, %struct.hb_font_t*, %struct.hb_face_t*, i32, i32, i64, i64, i32, i32, float, i32, i32*, float*, %struct.hb_font_funcs_t*, i8*, void (i8*)*, %struct.hb_shaper_object_dataset_t.129 }
%struct.hb_font_funcs_t = type { %struct.hb_object_header_t, %struct.anon, %struct.anon.128, %"union.hb_font_funcs_t::get_t" }
%struct.anon = type { i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8* }
%struct.anon.128 = type { void (i8*)*, void (i8*)*, void (i8*)*, void (i8*)*, void (i8*)*, void (i8*)*, void (i8*)*, void (i8*)*, void (i8*)*, void (i8*)*, void (i8*)*, void (i8*)*, void (i8*)*, void (i8*)*, void (i8*)*, void (i8*)*, void (i8*)* }
%"union.hb_font_funcs_t::get_t" = type { %"struct.hb_font_funcs_t::get_t::get_funcs_t" }
%"struct.hb_font_funcs_t::get_t::get_funcs_t" = type { i32 (%struct.hb_font_t*, i8*, %struct.hb_font_extents_t*, i8*)*, i32 (%struct.hb_font_t*, i8*, %struct.hb_font_extents_t*, i8*)*, i32 (%struct.hb_font_t*, i8*, i32, i32*, i8*)*, i32 (%struct.hb_font_t*, i8*, i32, i32*, i32, i32*, i32, i8*)*, i32 (%struct.hb_font_t*, i8*, i32, i32, i32*, i8*)*, i32 (%struct.hb_font_t*, i8*, i32, i8*)*, i32 (%struct.hb_font_t*, i8*, i32, i8*)*, void (%struct.hb_font_t*, i8*, i32, i32*, i32, i32*, i32, i8*)*, void (%struct.hb_font_t*, i8*, i32, i32*, i32, i32*, i32, i8*)*, i32 (%struct.hb_font_t*, i8*, i32, i32*, i32*, i8*)*, i32 (%struct.hb_font_t*, i8*, i32, i32*, i32*, i8*)*, i32 (%struct.hb_font_t*, i8*, i32, i32, i8*)*, i32 (%struct.hb_font_t*, i8*, i32, i32, i8*)*, i32 (%struct.hb_font_t*, i8*, i32, %struct.hb_glyph_extents_t*, i8*)*, i32 (%struct.hb_font_t*, i8*, i32, i32, i32*, i32*, i8*)*, i32 (%struct.hb_font_t*, i8*, i32, i8*, i32, i8*)*, i32 (%struct.hb_font_t*, i8*, i8*, i32, i32*, i8*)* }
%struct.hb_font_extents_t = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.hb_glyph_extents_t = type { i32, i32, i32, i32 }
%struct.hb_shaper_object_dataset_t.129 = type { %struct.hb_font_t*, %struct.hb_shaper_lazy_loader_t.130 }
%struct.hb_shaper_lazy_loader_t.130 = type { %struct.hb_lazy_loader_t.131 }
%struct.hb_lazy_loader_t.131 = type { %struct.hb_atomic_ptr_t.133 }
%struct.hb_atomic_ptr_t.133 = type { %struct.hb_ot_font_data_t* }
%struct.hb_ot_font_data_t = type opaque
%struct.hb_buffer_t = type { %struct.hb_object_header_t, %struct.hb_unicode_funcs_t*, i32, i32, i32, i32, i32, i32, i32, i32, %struct.hb_segment_properties_t, i8, i8, i8, i32, i32, i32, i32, %struct.hb_glyph_info_t*, %struct.hb_glyph_info_t*, %struct.hb_glyph_position_t*, i32, [2 x [5 x i32]], [2 x i32], i32 (%struct.hb_buffer_t*, %struct.hb_font_t*, i8*, i8*)*, i8*, void (i8*)* }
%struct.hb_unicode_funcs_t = type { %struct.hb_object_header_t, %struct.hb_unicode_funcs_t*, %struct.anon.134, %struct.anon.135, %struct.anon.136 }
%struct.anon.134 = type { i32 (%struct.hb_unicode_funcs_t*, i32, i8*)*, i32 (%struct.hb_unicode_funcs_t*, i32, i8*)*, i32 (%struct.hb_unicode_funcs_t*, i32, i8*)*, i32 (%struct.hb_unicode_funcs_t*, i32, i8*)*, i32 (%struct.hb_unicode_funcs_t*, i32, i8*)*, i32 (%struct.hb_unicode_funcs_t*, i32, i32, i32*, i8*)*, i32 (%struct.hb_unicode_funcs_t*, i32, i32*, i32*, i8*)*, i32 (%struct.hb_unicode_funcs_t*, i32, i32*, i8*)* }
%struct.anon.135 = type { i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8* }
%struct.anon.136 = type { void (i8*)*, void (i8*)*, void (i8*)*, void (i8*)*, void (i8*)*, void (i8*)*, void (i8*)*, void (i8*)* }
%struct.hb_glyph_info_t = type { i32, i32, i32, %union._hb_var_int_t, %union._hb_var_int_t }
%struct.hb_glyph_position_t = type { i32, i32, i32, i32, %union._hb_var_int_t }
%struct.hb_ot_shape_plan_t = type <{ %struct.hb_segment_properties_t, %struct.hb_ot_complex_shaper_t*, %struct.hb_ot_map_t, %struct.hb_aat_map_t, i8*, i32, i32, i32, i32, i32, i32, i16, [6 x i8] }>
%struct.hb_ot_complex_shaper_t = type opaque
%struct.hb_ot_map_t = type { [2 x i32], [2 x i8], i32, %struct.hb_sorted_vector_t, [2 x %struct.hb_vector_t.138], [2 x %struct.hb_vector_t.139] }
%struct.hb_sorted_vector_t = type { %struct.hb_vector_t.137 }
%struct.hb_vector_t.137 = type { i32, i32, %"struct.hb_ot_map_t::feature_map_t"* }
%"struct.hb_ot_map_t::feature_map_t" = type { i32, [2 x i32], [2 x i32], i32, i32, i32, i8 }
%struct.hb_vector_t.138 = type { i32, i32, %"struct.hb_ot_map_t::lookup_map_t"* }
%"struct.hb_ot_map_t::lookup_map_t" = type { i16, i8, i32 }
%struct.hb_vector_t.139 = type { i32, i32, %"struct.hb_ot_map_t::stage_map_t"* }
%"struct.hb_ot_map_t::stage_map_t" = type { i32, void (%struct.hb_ot_shape_plan_t*, %struct.hb_font_t*, %struct.hb_buffer_t*)* }
%struct.hb_aat_map_t = type { %struct.hb_vector_t.140 }
%struct.hb_vector_t.140 = type { i32, i32, i32* }
%"struct.OT::name" = type { %"struct.OT::IntType.141", %"struct.OT::IntType.141", %"struct.OT::OffsetTo", %"struct.OT::UnsizedArrayOf.143" }
%"struct.OT::IntType.141" = type { %struct.BEInt.142 }
%struct.BEInt.142 = type { [2 x i8] }
%"struct.OT::OffsetTo" = type { %"struct.OT::Offset" }
%"struct.OT::Offset" = type { %"struct.OT::IntType.141" }
%"struct.OT::UnsizedArrayOf.143" = type { [1 x %"struct.OT::NameRecord"] }
%"struct.OT::NameRecord" = type { %"struct.OT::IntType.141", %"struct.OT::IntType.141", %"struct.OT::IntType.141", %"struct.OT::IntType.141", %"struct.OT::IntType.141", %"struct.OT::OffsetTo" }
%struct.hb_sanitize_context_t = type <{ %struct.hb_dispatch_context_t, [4 x i8], i8*, i8*, i32, i32, i8, [3 x i8], i32, %struct.hb_blob_t*, i32, i8, [3 x i8] }>
%struct.hb_dispatch_context_t = type { i32 }
%"struct.AAT::ltag" = type { %"struct.OT::IntType.169", %"struct.OT::IntType.169", %"struct.OT::ArrayOf" }
%"struct.OT::IntType.169" = type { %struct.BEInt.170 }
%struct.BEInt.170 = type { [4 x i8] }
%"struct.OT::ArrayOf" = type { %"struct.OT::IntType.169", [1 x %"struct.AAT::FTStringRange"] }
%"struct.AAT::FTStringRange" = type { %"struct.OT::OffsetTo", %"struct.OT::IntType.141" }

$_ZNK16hb_lazy_loader_tIN2OT18name_accelerator_tE21hb_face_lazy_loader_tIS1_Lj7EE9hb_face_tLj7ES1_E10get_storedEv = comdat any

$_ZN2OT4name13accelerator_t4initEP9hb_face_t = comdat any

$_ZNK2OT10NameRecord8languageEP9hb_face_t = comdat any

$_ZN21hb_sanitize_context_t13sanitize_blobIN2OT4nameEEEP9hb_blob_tS4_ = comdat any

$_ZNK2OT4name8sanitizeEP21hb_sanitize_context_t = comdat any

$_ZNK2OT14UnsizedArrayOfINS_10NameRecordEE8sanitizeIJRPKvEEEbP21hb_sanitize_context_tjDpOT_ = comdat any

$_ZNK16hb_lazy_loader_tIN3AAT4ltagE22hb_table_lazy_loader_tIS1_Lj30EE9hb_face_tLj30E9hb_blob_tE10get_storedEv = comdat any

$_ZN21hb_sanitize_context_t13sanitize_blobIN3AAT4ltagEEEP9hb_blob_tS4_ = comdat any

$_ZNK2OT7ArrayOfIN3AAT13FTStringRangeENS_7IntTypeIjLj4EEEE8sanitizeIJPKNS1_4ltagEEEEbP21hb_sanitize_context_tDpOT_ = comdat any

$_ZNK2OT4name13accelerator_t9get_indexEjPK18hb_language_impl_tPj = comdat any

@_hb_NullPool = external hidden constant [48 x i64], align 16
@_hb_CrapPool = external hidden local_unnamed_addr global [48 x i64], align 16
@.str.12 = private unnamed_addr constant [3 x i8] c"en\00", align 1

; Function Attrs: nounwind ssp uwtable
define hidden %struct.hb_ot_name_entry_t* @hb_ot_name_list_names(%struct.hb_face_t*, i32*) local_unnamed_addr #0 {
  %3 = getelementptr inbounds %struct.hb_face_t, %struct.hb_face_t* %0, i64 0, i32 8, i32 7, i32 0
  %4 = tail call %"struct.OT::name_accelerator_t"* @_ZNK16hb_lazy_loader_tIN2OT18name_accelerator_tE21hb_face_lazy_loader_tIS1_Lj7EE9hb_face_tLj7ES1_E10get_storedEv(%struct.hb_lazy_loader_t.21* %3) #9
  %5 = icmp eq i32* %1, null
  br i1 %5, label %9, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"struct.OT::name_accelerator_t", %"struct.OT::name_accelerator_t"* %4, i64 0, i32 0, i32 3, i32 1
  %8 = load i32, i32* %7, align 4
  store i32 %8, i32* %1, align 4
  br label %9

9:                                                ; preds = %2, %6
  %10 = getelementptr inbounds %"struct.OT::name_accelerator_t", %"struct.OT::name_accelerator_t"* %4, i64 0, i32 0, i32 3, i32 2
  %11 = load %struct.hb_ot_name_entry_t*, %struct.hb_ot_name_entry_t** %10, align 8
  ret %struct.hb_ot_name_entry_t* %11
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define hidden i32 @hb_ot_name_get_utf8(%struct.hb_face_t*, i32, %struct.hb_language_impl_t*, i32*, i8*) local_unnamed_addr #0 {
  %6 = alloca i32, align 4
  %7 = getelementptr inbounds %struct.hb_face_t, %struct.hb_face_t* %0, i64 0, i32 8, i32 7, i32 0
  %8 = tail call %"struct.OT::name_accelerator_t"* @_ZNK16hb_lazy_loader_tIN2OT18name_accelerator_tE21hb_face_lazy_loader_tIS1_Lj7EE9hb_face_tLj7ES1_E10get_storedEv(%struct.hb_lazy_loader_t.21* %7) #9
  %9 = icmp eq %struct.hb_language_impl_t* %2, null
  br i1 %9, label %10, label %12

10:                                               ; preds = %5
  %11 = tail call %struct.hb_language_impl_t* @hb_language_from_string(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.12, i64 0, i64 0), i32 2) #9
  br label %12

12:                                               ; preds = %10, %5
  %13 = phi %struct.hb_language_impl_t* [ %2, %5 ], [ %11, %10 ]
  %14 = bitcast i32* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %14) #9
  store i32 -1431655766, i32* %6, align 4
  %15 = getelementptr inbounds %"struct.OT::name_accelerator_t", %"struct.OT::name_accelerator_t"* %8, i64 0, i32 0
  %16 = call i32 @_ZNK2OT4name13accelerator_t9get_indexEjPK18hb_language_impl_tPj(%"struct.OT::name::accelerator_t"* %15, i32 %1, %struct.hb_language_impl_t* %13, i32* nonnull %6) #9
  %17 = icmp eq i32 %16, -1
  br i1 %17, label %382, label %18

18:                                               ; preds = %12
  %19 = getelementptr inbounds %"struct.OT::name_accelerator_t", %"struct.OT::name_accelerator_t"* %8, i64 0, i32 0, i32 2, i32 0, i32 0
  %20 = load %struct.hb_blob_t*, %struct.hb_blob_t** %19, align 8
  %21 = icmp eq %struct.hb_blob_t* %20, null
  %22 = select i1 %21, %struct.hb_blob_t* bitcast ([48 x i64]* @_hb_NullPool to %struct.hb_blob_t*), %struct.hb_blob_t* %20
  %23 = getelementptr inbounds %struct.hb_blob_t, %struct.hb_blob_t* %22, i64 0, i32 1
  %24 = bitcast i8** %23 to %"struct.OT::name"**
  %25 = load %"struct.OT::name"*, %"struct.OT::name"** %24, align 8
  %26 = getelementptr inbounds %struct.hb_blob_t, %struct.hb_blob_t* %22, i64 0, i32 2
  %27 = load i32, i32* %26, align 8
  %28 = icmp ult i32 %27, 6
  %29 = select i1 %28, %"struct.OT::name"* bitcast ([48 x i64]* @_hb_NullPool to %"struct.OT::name"*), %"struct.OT::name"* %25
  %30 = getelementptr inbounds %"struct.OT::name", %"struct.OT::name"* %29, i64 0, i32 1
  %31 = bitcast %"struct.OT::IntType.141"* %30 to i16*
  %32 = load i16, i16* %31, align 1
  %33 = call i16 @llvm.bswap.i16(i16 %32) #9
  %34 = zext i16 %33 to i32
  %35 = icmp ult i32 %16, %34
  %36 = zext i32 %16 to i64
  %37 = getelementptr inbounds %"struct.OT::name", %"struct.OT::name"* %29, i64 0, i32 3, i32 0, i64 %36
  %38 = select i1 %35, %"struct.OT::NameRecord"* %37, %"struct.OT::NameRecord"* bitcast ([48 x i64]* @_hb_NullPool to %"struct.OT::NameRecord"*), !prof !2
  %39 = getelementptr inbounds %"struct.OT::name_accelerator_t", %"struct.OT::name_accelerator_t"* %8, i64 0, i32 0, i32 0
  %40 = load i8*, i8** %39, align 8
  %41 = getelementptr inbounds %"struct.OT::name_accelerator_t", %"struct.OT::name_accelerator_t"* %8, i64 0, i32 0, i32 1
  %42 = load i32, i32* %41, align 8
  %43 = getelementptr inbounds %"struct.OT::NameRecord", %"struct.OT::NameRecord"* %38, i64 0, i32 5, i32 0, i32 0
  %44 = bitcast %"struct.OT::IntType.141"* %43 to i16*
  %45 = load i16, i16* %44, align 1
  %46 = call i16 @llvm.bswap.i16(i16 %45) #9
  %47 = zext i16 %46 to i32
  %48 = getelementptr inbounds %"struct.OT::NameRecord", %"struct.OT::NameRecord"* %38, i64 0, i32 4
  %49 = bitcast %"struct.OT::IntType.141"* %48 to i16*
  %50 = load i16, i16* %49, align 1
  %51 = call i16 @llvm.bswap.i16(i16 %50) #9
  %52 = zext i16 %51 to i32
  %53 = call i32 @llvm.usub.sat.i32(i32 %42, i32 %47) #9
  %54 = icmp ugt i32 %53, %52
  %55 = select i1 %54, i32 %52, i32 %53
  %56 = zext i16 %46 to i64
  %57 = getelementptr inbounds i8, i8* %40, i64 %56
  %58 = zext i32 %55 to i64
  %59 = load i32, i32* %6, align 4
  switch i32 %59, label %382 [
    i32 2, label %60
    i32 1, label %235
  ]

60:                                               ; preds = %18
  %61 = lshr i64 %58, 1
  %62 = bitcast i8* %57 to %"struct.OT::IntType.141"*
  %63 = getelementptr inbounds %"struct.OT::IntType.141", %"struct.OT::IntType.141"* %62, i64 %61
  %64 = icmp eq i32* %3, null
  br i1 %64, label %185, label %65

65:                                               ; preds = %60
  %66 = load i32, i32* %3, align 4
  %67 = icmp eq i32 %66, 0
  br i1 %67, label %185, label %68

68:                                               ; preds = %65
  %69 = add i32 %66, -1
  store i32 %69, i32* %3, align 4
  %70 = zext i32 %69 to i64
  %71 = getelementptr inbounds i8, i8* %4, i64 %70
  %72 = ptrtoint i8* %71 to i64
  %73 = icmp ugt %"struct.OT::IntType.141"* %63, %62
  %74 = icmp ne i32 %69, 0
  %75 = and i1 %73, %74
  br i1 %75, label %76, label %178

76:                                               ; preds = %68, %173
  %77 = phi %"struct.OT::IntType.141"* [ %104, %173 ], [ %62, %68 ]
  %78 = phi i8* [ %174, %173 ], [ %4, %68 ]
  %79 = getelementptr inbounds %"struct.OT::IntType.141", %"struct.OT::IntType.141"* %77, i64 1
  %80 = bitcast %"struct.OT::IntType.141"* %77 to i16*
  %81 = load i16, i16* %80, align 1
  %82 = call i16 @llvm.bswap.i16(i16 %81) #9
  %83 = zext i16 %82 to i32
  %84 = and i32 %83, 63488
  %85 = icmp eq i32 %84, 55296
  br i1 %85, label %86, label %102, !prof !3

86:                                               ; preds = %76
  %87 = icmp ult i16 %82, -9216
  %88 = icmp ult %"struct.OT::IntType.141"* %79, %63
  %89 = and i1 %88, %87
  br i1 %89, label %90, label %102, !prof !2

90:                                               ; preds = %86
  %91 = bitcast %"struct.OT::IntType.141"* %79 to i16*
  %92 = load i16, i16* %91, align 1
  %93 = call i16 @llvm.bswap.i16(i16 %92) #9
  %94 = zext i16 %93 to i32
  %95 = and i32 %94, 64512
  %96 = icmp eq i32 %95, 56320
  br i1 %96, label %97, label %102, !prof !2

97:                                               ; preds = %90
  %98 = shl nuw nsw i32 %83, 10
  %99 = add nsw i32 %98, -56613888
  %100 = add nsw i32 %99, %94
  %101 = getelementptr inbounds %"struct.OT::IntType.141", %"struct.OT::IntType.141"* %77, i64 2
  br label %102

102:                                              ; preds = %97, %90, %86, %76
  %103 = phi i32 [ %100, %97 ], [ %83, %76 ], [ 65533, %90 ], [ 65533, %86 ]
  %104 = phi %"struct.OT::IntType.141"* [ %101, %97 ], [ %79, %76 ], [ %79, %90 ], [ %79, %86 ]
  %105 = icmp ugt i32 %103, 55295
  %106 = add nsw i32 %103, -57344
  %107 = icmp ugt i32 %106, 1056767
  %108 = and i1 %105, %107
  %109 = select i1 %108, i32 65533, i32 %103, !prof !3
  %110 = icmp ult i32 %109, 128
  br i1 %110, label %111, label %114

111:                                              ; preds = %102
  %112 = trunc i32 %109 to i8
  %113 = getelementptr inbounds i8, i8* %78, i64 1
  store i8 %112, i8* %78, align 1
  br label %173

114:                                              ; preds = %102
  %115 = icmp ult i32 %109, 2048
  br i1 %115, label %116, label %130

116:                                              ; preds = %114
  %117 = ptrtoint i8* %78 to i64
  %118 = sub i64 %72, %117
  %119 = icmp sgt i64 %118, 1
  br i1 %119, label %120, label %178

120:                                              ; preds = %116
  %121 = lshr i32 %109, 6
  %122 = trunc i32 %121 to i8
  %123 = and i8 %122, 31
  %124 = or i8 %123, -64
  %125 = getelementptr inbounds i8, i8* %78, i64 1
  store i8 %124, i8* %78, align 1
  %126 = trunc i32 %109 to i8
  %127 = and i8 %126, 63
  %128 = or i8 %127, -128
  %129 = getelementptr inbounds i8, i8* %78, i64 2
  store i8 %128, i8* %125, align 1
  br label %173

130:                                              ; preds = %114
  %131 = icmp ult i32 %109, 65536
  %132 = ptrtoint i8* %78 to i64
  %133 = sub i64 %72, %132
  br i1 %131, label %134, label %151

134:                                              ; preds = %130
  %135 = icmp sgt i64 %133, 2
  br i1 %135, label %136, label %178

136:                                              ; preds = %134
  %137 = lshr i32 %109, 12
  %138 = trunc i32 %137 to i8
  %139 = and i8 %138, 15
  %140 = or i8 %139, -32
  %141 = getelementptr inbounds i8, i8* %78, i64 1
  store i8 %140, i8* %78, align 1
  %142 = lshr i32 %109, 6
  %143 = trunc i32 %142 to i8
  %144 = and i8 %143, 63
  %145 = or i8 %144, -128
  %146 = getelementptr inbounds i8, i8* %78, i64 2
  store i8 %145, i8* %141, align 1
  %147 = trunc i32 %109 to i8
  %148 = and i8 %147, 63
  %149 = or i8 %148, -128
  %150 = getelementptr inbounds i8, i8* %78, i64 3
  store i8 %149, i8* %146, align 1
  br label %173

151:                                              ; preds = %130
  %152 = icmp sgt i64 %133, 3
  br i1 %152, label %153, label %178

153:                                              ; preds = %151
  %154 = lshr i32 %109, 18
  %155 = trunc i32 %154 to i8
  %156 = and i8 %155, 7
  %157 = or i8 %156, -16
  %158 = getelementptr inbounds i8, i8* %78, i64 1
  store i8 %157, i8* %78, align 1
  %159 = lshr i32 %109, 12
  %160 = trunc i32 %159 to i8
  %161 = and i8 %160, 63
  %162 = or i8 %161, -128
  %163 = getelementptr inbounds i8, i8* %78, i64 2
  store i8 %162, i8* %158, align 1
  %164 = lshr i32 %109, 6
  %165 = trunc i32 %164 to i8
  %166 = and i8 %165, 63
  %167 = or i8 %166, -128
  %168 = getelementptr inbounds i8, i8* %78, i64 3
  store i8 %167, i8* %163, align 1
  %169 = trunc i32 %109 to i8
  %170 = and i8 %169, 63
  %171 = or i8 %170, -128
  %172 = getelementptr inbounds i8, i8* %78, i64 4
  store i8 %171, i8* %168, align 1
  br label %173

173:                                              ; preds = %153, %136, %120, %111
  %174 = phi i8* [ %113, %111 ], [ %129, %120 ], [ %150, %136 ], [ %172, %153 ]
  %175 = icmp ult %"struct.OT::IntType.141"* %104, %63
  %176 = icmp ult i8* %174, %71
  %177 = and i1 %175, %176
  br i1 %177, label %76, label %178

178:                                              ; preds = %173, %151, %134, %116, %68
  %179 = phi i8* [ %4, %68 ], [ %78, %151 ], [ %78, %134 ], [ %78, %116 ], [ %174, %173 ]
  %180 = phi %"struct.OT::IntType.141"* [ %62, %68 ], [ %77, %151 ], [ %77, %134 ], [ %77, %116 ], [ %104, %173 ]
  %181 = ptrtoint i8* %179 to i64
  %182 = ptrtoint i8* %4 to i64
  %183 = sub i64 %181, %182
  %184 = trunc i64 %183 to i32
  store i32 %184, i32* %3, align 4
  store i8 0, i8* %179, align 1
  br label %185

185:                                              ; preds = %178, %65, %60
  %186 = phi i8* [ %179, %178 ], [ %4, %65 ], [ %4, %60 ]
  %187 = phi %"struct.OT::IntType.141"* [ %180, %178 ], [ %62, %65 ], [ %62, %60 ]
  %188 = ptrtoint i8* %186 to i64
  %189 = ptrtoint i8* %4 to i64
  %190 = sub i64 %188, %189
  %191 = trunc i64 %190 to i32
  %192 = icmp ult %"struct.OT::IntType.141"* %187, %63
  br i1 %192, label %193, label %389

193:                                              ; preds = %185, %230
  %194 = phi i32 [ %233, %230 ], [ %191, %185 ]
  %195 = phi %"struct.OT::IntType.141"* [ %231, %230 ], [ %187, %185 ]
  %196 = getelementptr inbounds %"struct.OT::IntType.141", %"struct.OT::IntType.141"* %195, i64 1
  %197 = bitcast %"struct.OT::IntType.141"* %195 to i16*
  %198 = load i16, i16* %197, align 1
  %199 = call i16 @llvm.bswap.i16(i16 %198) #9
  %200 = zext i16 %199 to i32
  %201 = and i32 %200, 63488
  %202 = icmp eq i32 %201, 55296
  br i1 %202, label %203, label %219, !prof !3

203:                                              ; preds = %193
  %204 = icmp ult i16 %199, -9216
  %205 = icmp ult %"struct.OT::IntType.141"* %196, %63
  %206 = and i1 %205, %204
  br i1 %206, label %207, label %230, !prof !2

207:                                              ; preds = %203
  %208 = bitcast %"struct.OT::IntType.141"* %196 to i16*
  %209 = load i16, i16* %208, align 1
  %210 = call i16 @llvm.bswap.i16(i16 %209) #9
  %211 = zext i16 %210 to i32
  %212 = and i32 %211, 64512
  %213 = icmp eq i32 %212, 56320
  br i1 %213, label %214, label %230, !prof !2

214:                                              ; preds = %207
  %215 = shl nuw nsw i32 %200, 10
  %216 = add nsw i32 %215, -56613888
  %217 = add nsw i32 %216, %211
  %218 = getelementptr inbounds %"struct.OT::IntType.141", %"struct.OT::IntType.141"* %195, i64 2
  br label %219

219:                                              ; preds = %214, %193
  %220 = phi i32 [ %217, %214 ], [ %200, %193 ]
  %221 = phi %"struct.OT::IntType.141"* [ %218, %214 ], [ %196, %193 ]
  %222 = icmp ult i32 %220, 128
  br i1 %222, label %230, label %223

223:                                              ; preds = %219
  %224 = icmp ult i32 %220, 2048
  br i1 %224, label %230, label %225

225:                                              ; preds = %223
  %226 = icmp ult i32 %220, 65536
  br i1 %226, label %230, label %227

227:                                              ; preds = %225
  %228 = icmp ult i32 %220, 1114112
  %229 = select i1 %228, i32 4, i32 3
  br label %230

230:                                              ; preds = %227, %225, %223, %219, %207, %203
  %231 = phi %"struct.OT::IntType.141"* [ %221, %219 ], [ %221, %223 ], [ %221, %225 ], [ %221, %227 ], [ %196, %207 ], [ %196, %203 ]
  %232 = phi i32 [ 1, %219 ], [ 2, %223 ], [ 3, %225 ], [ %229, %227 ], [ 3, %207 ], [ 3, %203 ]
  %233 = add i32 %232, %194
  %234 = icmp ult %"struct.OT::IntType.141"* %231, %63
  br i1 %234, label %193, label %389

235:                                              ; preds = %18
  %236 = getelementptr inbounds i8, i8* %57, i64 %58
  %237 = icmp eq i32* %3, null
  br i1 %237, label %310, label %238

238:                                              ; preds = %235
  %239 = load i32, i32* %3, align 4
  %240 = icmp eq i32 %239, 0
  br i1 %240, label %310, label %241

241:                                              ; preds = %238
  %242 = add i32 %239, -1
  store i32 %242, i32* %3, align 4
  %243 = zext i32 %242 to i64
  %244 = getelementptr inbounds i8, i8* %4, i64 %243
  %245 = icmp ne i32 %55, 0
  %246 = icmp ne i32 %242, 0
  %247 = and i1 %245, %246
  br i1 %247, label %248, label %303

248:                                              ; preds = %241
  %249 = ptrtoint i8* %244 to i64
  br label %250

250:                                              ; preds = %298, %248
  %251 = phi i8* [ %57, %248 ], [ %253, %298 ]
  %252 = phi i8* [ %4, %248 ], [ %299, %298 ]
  %253 = getelementptr inbounds i8, i8* %251, i64 1
  %254 = load i8, i8* %251, align 1
  %255 = zext i8 %254 to i32
  %256 = icmp slt i8 %254, 0
  %257 = select i1 %256, i32 65533, i32 %255
  %258 = add nsw i32 %257, -57344
  %259 = icmp ugt i32 %258, 1056767
  %260 = and i1 %256, %259
  %261 = select i1 %260, i32 65533, i32 %257, !prof !3
  %262 = icmp ult i32 %261, 128
  br i1 %262, label %263, label %266

263:                                              ; preds = %250
  %264 = trunc i32 %261 to i8
  %265 = getelementptr inbounds i8, i8* %252, i64 1
  store i8 %264, i8* %252, align 1
  br label %298

266:                                              ; preds = %250
  %267 = icmp ult i32 %261, 2048
  %268 = ptrtoint i8* %252 to i64
  %269 = sub i64 %249, %268
  br i1 %267, label %270, label %282

270:                                              ; preds = %266
  %271 = icmp sgt i64 %269, 1
  br i1 %271, label %272, label %303

272:                                              ; preds = %270
  %273 = lshr i32 %261, 6
  %274 = trunc i32 %273 to i8
  %275 = and i8 %274, 31
  %276 = or i8 %275, -64
  %277 = getelementptr inbounds i8, i8* %252, i64 1
  store i8 %276, i8* %252, align 1
  %278 = trunc i32 %261 to i8
  %279 = and i8 %278, 63
  %280 = or i8 %279, -128
  %281 = getelementptr inbounds i8, i8* %252, i64 2
  store i8 %280, i8* %277, align 1
  br label %298

282:                                              ; preds = %266
  %283 = icmp sgt i64 %269, 2
  br i1 %283, label %284, label %303

284:                                              ; preds = %282
  %285 = lshr i32 %261, 12
  %286 = trunc i32 %285 to i8
  %287 = or i8 %286, -32
  %288 = getelementptr inbounds i8, i8* %252, i64 1
  store i8 %287, i8* %252, align 1
  %289 = lshr i32 %261, 6
  %290 = trunc i32 %289 to i8
  %291 = and i8 %290, 63
  %292 = or i8 %291, -128
  %293 = getelementptr inbounds i8, i8* %252, i64 2
  store i8 %292, i8* %288, align 1
  %294 = trunc i32 %261 to i8
  %295 = and i8 %294, 63
  %296 = or i8 %295, -128
  %297 = getelementptr inbounds i8, i8* %252, i64 3
  store i8 %296, i8* %293, align 1
  br label %298

298:                                              ; preds = %284, %272, %263
  %299 = phi i8* [ %265, %263 ], [ %281, %272 ], [ %297, %284 ]
  %300 = icmp ult i8* %253, %236
  %301 = icmp ult i8* %299, %244
  %302 = and i1 %300, %301
  br i1 %302, label %250, label %303

303:                                              ; preds = %298, %282, %270, %241
  %304 = phi i8* [ %4, %241 ], [ %252, %282 ], [ %252, %270 ], [ %299, %298 ]
  %305 = phi i8* [ %57, %241 ], [ %251, %282 ], [ %251, %270 ], [ %253, %298 ]
  %306 = ptrtoint i8* %304 to i64
  %307 = ptrtoint i8* %4 to i64
  %308 = sub i64 %306, %307
  %309 = trunc i64 %308 to i32
  store i32 %309, i32* %3, align 4
  store i8 0, i8* %304, align 1
  br label %310

310:                                              ; preds = %303, %238, %235
  %311 = phi i8* [ %304, %303 ], [ %4, %238 ], [ %4, %235 ]
  %312 = phi i8* [ %305, %303 ], [ %57, %238 ], [ %57, %235 ]
  %313 = ptrtoint i8* %311 to i64
  %314 = ptrtoint i8* %4 to i64
  %315 = sub i64 %313, %314
  %316 = trunc i64 %315 to i32
  %317 = icmp ult i8* %312, %236
  br i1 %317, label %318, label %389

318:                                              ; preds = %310
  %319 = ptrtoint i8* %312 to i64
  %320 = add nuw nsw i64 %56, %58
  %321 = sub i64 %320, %319
  %322 = getelementptr i8, i8* %40, i64 %321
  %323 = ptrtoint i8* %322 to i64
  %324 = icmp ult i8* %322, inttoptr (i64 8 to i8*)
  br i1 %324, label %365, label %325

325:                                              ; preds = %318
  %326 = and i64 %323, -8
  %327 = getelementptr i8, i8* %312, i64 %326
  %328 = insertelement <4 x i32> <i32 undef, i32 0, i32 0, i32 0>, i32 %316, i32 0
  br label %329

329:                                              ; preds = %329, %325
  %330 = phi i64 [ 0, %325 ], [ %355, %329 ]
  %331 = phi <4 x i32> [ %328, %325 ], [ %353, %329 ]
  %332 = phi <4 x i32> [ zeroinitializer, %325 ], [ %354, %329 ]
  %333 = getelementptr i8, i8* %312, i64 %330
  %334 = bitcast i8* %333 to <4 x i8>*
  %335 = load <4 x i8>, <4 x i8>* %334, align 1
  %336 = getelementptr i8, i8* %333, i64 4
  %337 = bitcast i8* %336 to <4 x i8>*
  %338 = load <4 x i8>, <4 x i8>* %337, align 1
  %339 = zext <4 x i8> %335 to <4 x i32>
  %340 = zext <4 x i8> %338 to <4 x i32>
  %341 = icmp slt <4 x i8> %335, zeroinitializer
  %342 = icmp slt <4 x i8> %338, zeroinitializer
  %343 = select <4 x i1> %341, <4 x i32> <i32 65533, i32 65533, i32 65533, i32 65533>, <4 x i32> %339
  %344 = select <4 x i1> %342, <4 x i32> <i32 65533, i32 65533, i32 65533, i32 65533>, <4 x i32> %340
  %345 = icmp ult <4 x i32> %343, <i32 128, i32 128, i32 128, i32 128>
  %346 = icmp ult <4 x i32> %344, <i32 128, i32 128, i32 128, i32 128>
  %347 = icmp ult <4 x i32> %343, <i32 2048, i32 2048, i32 2048, i32 2048>
  %348 = icmp ult <4 x i32> %344, <i32 2048, i32 2048, i32 2048, i32 2048>
  %349 = select <4 x i1> %347, <4 x i32> <i32 2, i32 2, i32 2, i32 2>, <4 x i32> <i32 3, i32 3, i32 3, i32 3>
  %350 = select <4 x i1> %348, <4 x i32> <i32 2, i32 2, i32 2, i32 2>, <4 x i32> <i32 3, i32 3, i32 3, i32 3>
  %351 = select <4 x i1> %345, <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32> %349
  %352 = select <4 x i1> %346, <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32> %350
  %353 = add <4 x i32> %351, %331
  %354 = add <4 x i32> %352, %332
  %355 = add i64 %330, 8
  %356 = icmp eq i64 %355, %326
  br i1 %356, label %357, label %329, !llvm.loop !4

357:                                              ; preds = %329
  %358 = add <4 x i32> %354, %353
  %359 = shufflevector <4 x i32> %358, <4 x i32> undef, <4 x i32> <i32 2, i32 3, i32 undef, i32 undef>
  %360 = add <4 x i32> %358, %359
  %361 = shufflevector <4 x i32> %360, <4 x i32> undef, <4 x i32> <i32 1, i32 undef, i32 undef, i32 undef>
  %362 = add <4 x i32> %360, %361
  %363 = extractelement <4 x i32> %362, i32 0
  %364 = icmp eq i64 %326, %323
  br i1 %364, label %389, label %365

365:                                              ; preds = %357, %318
  %366 = phi i32 [ %316, %318 ], [ %363, %357 ]
  %367 = phi i8* [ %312, %318 ], [ %327, %357 ]
  br label %368

368:                                              ; preds = %365, %368
  %369 = phi i32 [ %380, %368 ], [ %366, %365 ]
  %370 = phi i8* [ %371, %368 ], [ %367, %365 ]
  %371 = getelementptr inbounds i8, i8* %370, i64 1
  %372 = load i8, i8* %370, align 1
  %373 = zext i8 %372 to i32
  %374 = icmp slt i8 %372, 0
  %375 = select i1 %374, i32 65533, i32 %373
  %376 = icmp ult i32 %375, 128
  %377 = icmp ult i32 %375, 2048
  %378 = select i1 %377, i32 2, i32 3
  %379 = select i1 %376, i32 1, i32 %378
  %380 = add i32 %379, %369
  %381 = icmp eq i8* %371, %236
  br i1 %381, label %389, label %368, !llvm.loop !6

382:                                              ; preds = %18, %12
  %383 = icmp eq i32* %3, null
  br i1 %383, label %389, label %384

384:                                              ; preds = %382
  %385 = load i32, i32* %3, align 4
  %386 = icmp eq i32 %385, 0
  br i1 %386, label %388, label %387

387:                                              ; preds = %384
  store i8 0, i8* %4, align 1
  br label %388

388:                                              ; preds = %387, %384
  store i32 0, i32* %3, align 4
  br label %389

389:                                              ; preds = %368, %230, %357, %185, %310, %382, %388
  %390 = phi i32 [ 0, %382 ], [ 0, %388 ], [ %316, %310 ], [ %191, %185 ], [ %363, %357 ], [ %233, %230 ], [ %380, %368 ]
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %14) #9
  ret i32 %390
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @hb_ot_name_get_utf16(%struct.hb_face_t*, i32, %struct.hb_language_impl_t*, i32*, i16*) local_unnamed_addr #0 {
  %6 = alloca i32, align 4
  %7 = getelementptr inbounds %struct.hb_face_t, %struct.hb_face_t* %0, i64 0, i32 8, i32 7, i32 0
  %8 = tail call %"struct.OT::name_accelerator_t"* @_ZNK16hb_lazy_loader_tIN2OT18name_accelerator_tE21hb_face_lazy_loader_tIS1_Lj7EE9hb_face_tLj7ES1_E10get_storedEv(%struct.hb_lazy_loader_t.21* %7) #9
  %9 = icmp eq %struct.hb_language_impl_t* %2, null
  br i1 %9, label %10, label %12

10:                                               ; preds = %5
  %11 = tail call %struct.hb_language_impl_t* @hb_language_from_string(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.12, i64 0, i64 0), i32 2) #9
  br label %12

12:                                               ; preds = %10, %5
  %13 = phi %struct.hb_language_impl_t* [ %2, %5 ], [ %11, %10 ]
  %14 = bitcast i32* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %14) #9
  store i32 -1431655766, i32* %6, align 4
  %15 = getelementptr inbounds %"struct.OT::name_accelerator_t", %"struct.OT::name_accelerator_t"* %8, i64 0, i32 0
  %16 = call i32 @_ZNK2OT4name13accelerator_t9get_indexEjPK18hb_language_impl_tPj(%"struct.OT::name::accelerator_t"* %15, i32 %1, %struct.hb_language_impl_t* %13, i32* nonnull %6) #9
  %17 = icmp eq i32 %16, -1
  br i1 %17, label %242, label %18

18:                                               ; preds = %12
  %19 = getelementptr inbounds %"struct.OT::name_accelerator_t", %"struct.OT::name_accelerator_t"* %8, i64 0, i32 0, i32 2, i32 0, i32 0
  %20 = load %struct.hb_blob_t*, %struct.hb_blob_t** %19, align 8
  %21 = icmp eq %struct.hb_blob_t* %20, null
  %22 = select i1 %21, %struct.hb_blob_t* bitcast ([48 x i64]* @_hb_NullPool to %struct.hb_blob_t*), %struct.hb_blob_t* %20
  %23 = getelementptr inbounds %struct.hb_blob_t, %struct.hb_blob_t* %22, i64 0, i32 1
  %24 = bitcast i8** %23 to %"struct.OT::name"**
  %25 = load %"struct.OT::name"*, %"struct.OT::name"** %24, align 8
  %26 = getelementptr inbounds %struct.hb_blob_t, %struct.hb_blob_t* %22, i64 0, i32 2
  %27 = load i32, i32* %26, align 8
  %28 = icmp ult i32 %27, 6
  %29 = select i1 %28, %"struct.OT::name"* bitcast ([48 x i64]* @_hb_NullPool to %"struct.OT::name"*), %"struct.OT::name"* %25
  %30 = getelementptr inbounds %"struct.OT::name", %"struct.OT::name"* %29, i64 0, i32 1
  %31 = bitcast %"struct.OT::IntType.141"* %30 to i16*
  %32 = load i16, i16* %31, align 1
  %33 = call i16 @llvm.bswap.i16(i16 %32) #9
  %34 = zext i16 %33 to i32
  %35 = icmp ult i32 %16, %34
  %36 = zext i32 %16 to i64
  %37 = getelementptr inbounds %"struct.OT::name", %"struct.OT::name"* %29, i64 0, i32 3, i32 0, i64 %36
  %38 = select i1 %35, %"struct.OT::NameRecord"* %37, %"struct.OT::NameRecord"* bitcast ([48 x i64]* @_hb_NullPool to %"struct.OT::NameRecord"*), !prof !2
  %39 = getelementptr inbounds %"struct.OT::name_accelerator_t", %"struct.OT::name_accelerator_t"* %8, i64 0, i32 0, i32 0
  %40 = load i8*, i8** %39, align 8
  %41 = getelementptr inbounds %"struct.OT::name_accelerator_t", %"struct.OT::name_accelerator_t"* %8, i64 0, i32 0, i32 1
  %42 = load i32, i32* %41, align 8
  %43 = getelementptr inbounds %"struct.OT::NameRecord", %"struct.OT::NameRecord"* %38, i64 0, i32 5, i32 0, i32 0
  %44 = bitcast %"struct.OT::IntType.141"* %43 to i16*
  %45 = load i16, i16* %44, align 1
  %46 = call i16 @llvm.bswap.i16(i16 %45) #9
  %47 = zext i16 %46 to i32
  %48 = getelementptr inbounds %"struct.OT::NameRecord", %"struct.OT::NameRecord"* %38, i64 0, i32 4
  %49 = bitcast %"struct.OT::IntType.141"* %48 to i16*
  %50 = load i16, i16* %49, align 1
  %51 = call i16 @llvm.bswap.i16(i16 %50) #9
  %52 = zext i16 %51 to i32
  %53 = call i32 @llvm.usub.sat.i32(i32 %42, i32 %47) #9
  %54 = icmp ugt i32 %53, %52
  %55 = select i1 %54, i32 %52, i32 %53
  %56 = zext i16 %46 to i64
  %57 = getelementptr inbounds i8, i8* %40, i64 %56
  %58 = zext i32 %55 to i64
  %59 = load i32, i32* %6, align 4
  switch i32 %59, label %242 [
    i32 2, label %60
    i32 1, label %184
  ]

60:                                               ; preds = %18
  %61 = lshr i64 %58, 1
  %62 = bitcast i8* %57 to %"struct.OT::IntType.141"*
  %63 = getelementptr inbounds %"struct.OT::IntType.141", %"struct.OT::IntType.141"* %62, i64 %61
  %64 = icmp eq i32* %3, null
  br i1 %64, label %141, label %65

65:                                               ; preds = %60
  %66 = load i32, i32* %3, align 4
  %67 = icmp eq i32 %66, 0
  br i1 %67, label %141, label %68

68:                                               ; preds = %65
  %69 = add i32 %66, -1
  store i32 %69, i32* %3, align 4
  %70 = zext i32 %69 to i64
  %71 = getelementptr inbounds i16, i16* %4, i64 %70
  %72 = ptrtoint i16* %71 to i64
  %73 = icmp ugt %"struct.OT::IntType.141"* %63, %62
  %74 = icmp ne i32 %69, 0
  %75 = and i1 %73, %74
  br i1 %75, label %76, label %133

76:                                               ; preds = %68, %128
  %77 = phi %"struct.OT::IntType.141"* [ %104, %128 ], [ %62, %68 ]
  %78 = phi i16* [ %129, %128 ], [ %4, %68 ]
  %79 = getelementptr inbounds %"struct.OT::IntType.141", %"struct.OT::IntType.141"* %77, i64 1
  %80 = bitcast %"struct.OT::IntType.141"* %77 to i16*
  %81 = load i16, i16* %80, align 1
  %82 = call i16 @llvm.bswap.i16(i16 %81) #9
  %83 = zext i16 %82 to i32
  %84 = and i32 %83, 63488
  %85 = icmp eq i32 %84, 55296
  br i1 %85, label %86, label %102, !prof !3

86:                                               ; preds = %76
  %87 = icmp ult i16 %82, -9216
  %88 = icmp ult %"struct.OT::IntType.141"* %79, %63
  %89 = and i1 %88, %87
  br i1 %89, label %90, label %102, !prof !2

90:                                               ; preds = %86
  %91 = bitcast %"struct.OT::IntType.141"* %79 to i16*
  %92 = load i16, i16* %91, align 1
  %93 = call i16 @llvm.bswap.i16(i16 %92) #9
  %94 = zext i16 %93 to i32
  %95 = and i32 %94, 64512
  %96 = icmp eq i32 %95, 56320
  br i1 %96, label %97, label %102, !prof !2

97:                                               ; preds = %90
  %98 = shl nuw nsw i32 %83, 10
  %99 = add nsw i32 %98, -56613888
  %100 = add nsw i32 %99, %94
  %101 = getelementptr inbounds %"struct.OT::IntType.141", %"struct.OT::IntType.141"* %77, i64 2
  br label %102

102:                                              ; preds = %97, %90, %86, %76
  %103 = phi i32 [ %100, %97 ], [ %83, %76 ], [ 65533, %90 ], [ 65533, %86 ]
  %104 = phi %"struct.OT::IntType.141"* [ %101, %97 ], [ %79, %76 ], [ %79, %90 ], [ %79, %86 ]
  %105 = icmp ugt i32 %103, 55295
  %106 = add nsw i32 %103, -57344
  %107 = icmp ugt i32 %106, 1056767
  %108 = and i1 %105, %107
  %109 = select i1 %108, i32 65533, i32 %103, !prof !3
  %110 = icmp ult i32 %109, 65536
  br i1 %110, label %111, label %114

111:                                              ; preds = %102
  %112 = trunc i32 %109 to i16
  %113 = getelementptr inbounds i16, i16* %78, i64 1
  store i16 %112, i16* %78, align 2
  br label %128

114:                                              ; preds = %102
  %115 = ptrtoint i16* %78 to i64
  %116 = sub i64 %72, %115
  %117 = icmp sgt i64 %116, 2
  br i1 %117, label %118, label %133

118:                                              ; preds = %114
  %119 = add nsw i32 %109, -65536
  %120 = lshr i32 %119, 10
  %121 = trunc i32 %120 to i16
  %122 = add i16 %121, -10240
  %123 = getelementptr inbounds i16, i16* %78, i64 1
  store i16 %122, i16* %78, align 2
  %124 = trunc i32 %119 to i16
  %125 = and i16 %124, 1023
  %126 = or i16 %125, -9216
  %127 = getelementptr inbounds i16, i16* %78, i64 2
  store i16 %126, i16* %123, align 2
  br label %128

128:                                              ; preds = %118, %111
  %129 = phi i16* [ %113, %111 ], [ %127, %118 ]
  %130 = icmp ult %"struct.OT::IntType.141"* %104, %63
  %131 = icmp ult i16* %129, %71
  %132 = and i1 %130, %131
  br i1 %132, label %76, label %133

133:                                              ; preds = %128, %114, %68
  %134 = phi i16* [ %4, %68 ], [ %78, %114 ], [ %129, %128 ]
  %135 = phi %"struct.OT::IntType.141"* [ %62, %68 ], [ %77, %114 ], [ %104, %128 ]
  %136 = ptrtoint i16* %134 to i64
  %137 = ptrtoint i16* %4 to i64
  %138 = sub i64 %136, %137
  %139 = lshr exact i64 %138, 1
  %140 = trunc i64 %139 to i32
  store i32 %140, i32* %3, align 4
  store i16 0, i16* %134, align 2
  br label %141

141:                                              ; preds = %133, %65, %60
  %142 = phi i16* [ %134, %133 ], [ %4, %65 ], [ %4, %60 ]
  %143 = phi %"struct.OT::IntType.141"* [ %135, %133 ], [ %62, %65 ], [ %62, %60 ]
  %144 = ptrtoint i16* %142 to i64
  %145 = ptrtoint i16* %4 to i64
  %146 = sub i64 %144, %145
  %147 = lshr exact i64 %146, 1
  %148 = trunc i64 %147 to i32
  %149 = icmp ult %"struct.OT::IntType.141"* %143, %63
  br i1 %149, label %150, label %249

150:                                              ; preds = %141, %179
  %151 = phi i32 [ %182, %179 ], [ %148, %141 ]
  %152 = phi %"struct.OT::IntType.141"* [ %180, %179 ], [ %143, %141 ]
  %153 = getelementptr inbounds %"struct.OT::IntType.141", %"struct.OT::IntType.141"* %152, i64 1
  %154 = bitcast %"struct.OT::IntType.141"* %152 to i16*
  %155 = load i16, i16* %154, align 1
  %156 = call i16 @llvm.bswap.i16(i16 %155) #9
  %157 = zext i16 %156 to i32
  %158 = and i32 %157, 63488
  %159 = icmp eq i32 %158, 55296
  br i1 %159, label %160, label %177, !prof !3

160:                                              ; preds = %150
  %161 = icmp ult i16 %156, -9216
  %162 = icmp ult %"struct.OT::IntType.141"* %153, %63
  %163 = and i1 %162, %161
  br i1 %163, label %164, label %177, !prof !2

164:                                              ; preds = %160
  %165 = bitcast %"struct.OT::IntType.141"* %153 to i16*
  %166 = load i16, i16* %165, align 1
  %167 = call i16 @llvm.bswap.i16(i16 %166) #9
  %168 = zext i16 %167 to i32
  %169 = and i32 %168, 64512
  %170 = icmp eq i32 %169, 56320
  br i1 %170, label %171, label %177, !prof !2

171:                                              ; preds = %164
  %172 = shl nuw nsw i32 %157, 10
  %173 = add nsw i32 %172, -56613888
  %174 = add nsw i32 %173, %168
  %175 = getelementptr inbounds %"struct.OT::IntType.141", %"struct.OT::IntType.141"* %152, i64 2
  %176 = icmp ult i32 %174, 65536
  br i1 %176, label %177, label %179

177:                                              ; preds = %171, %164, %160, %150
  %178 = phi %"struct.OT::IntType.141"* [ %175, %171 ], [ %153, %150 ], [ %153, %164 ], [ %153, %160 ]
  br label %179

179:                                              ; preds = %177, %171
  %180 = phi %"struct.OT::IntType.141"* [ %178, %177 ], [ %175, %171 ]
  %181 = phi i32 [ 1, %177 ], [ 2, %171 ]
  %182 = add i32 %181, %151
  %183 = icmp ult %"struct.OT::IntType.141"* %180, %63
  br i1 %183, label %150, label %249

184:                                              ; preds = %18
  %185 = ptrtoint i8* %57 to i64
  %186 = getelementptr inbounds i8, i8* %57, i64 %58
  %187 = icmp eq i32* %3, null
  br i1 %187, label %226, label %188

188:                                              ; preds = %184
  %189 = load i32, i32* %3, align 4
  %190 = icmp eq i32 %189, 0
  br i1 %190, label %226, label %191

191:                                              ; preds = %188
  %192 = add i32 %189, -1
  store i32 %192, i32* %3, align 4
  %193 = zext i32 %192 to i64
  %194 = getelementptr inbounds i16, i16* %4, i64 %193
  %195 = icmp ne i32 %55, 0
  %196 = icmp ne i32 %192, 0
  %197 = and i1 %195, %196
  br i1 %197, label %198, label %217

198:                                              ; preds = %191, %198
  %199 = phi i8* [ %201, %198 ], [ %57, %191 ]
  %200 = phi i16* [ %211, %198 ], [ %4, %191 ]
  %201 = getelementptr inbounds i8, i8* %199, i64 1
  %202 = load i8, i8* %199, align 1
  %203 = zext i8 %202 to i32
  %204 = icmp slt i8 %202, 0
  %205 = select i1 %204, i32 65533, i32 %203
  %206 = add nsw i32 %205, -57344
  %207 = icmp ugt i32 %206, 1056767
  %208 = and i1 %204, %207
  %209 = trunc i32 %205 to i16
  %210 = select i1 %208, i16 -3, i16 %209, !prof !3
  %211 = getelementptr inbounds i16, i16* %200, i64 1
  store i16 %210, i16* %200, align 2
  %212 = icmp ult i8* %201, %186
  %213 = icmp ult i16* %211, %194
  %214 = and i1 %212, %213
  br i1 %214, label %198, label %215

215:                                              ; preds = %198
  %216 = ptrtoint i8* %201 to i64
  br label %217

217:                                              ; preds = %215, %191
  %218 = phi i64 [ %216, %215 ], [ %185, %191 ]
  %219 = phi i16* [ %211, %215 ], [ %4, %191 ]
  %220 = phi i8* [ %201, %215 ], [ %57, %191 ]
  %221 = ptrtoint i16* %219 to i64
  %222 = ptrtoint i16* %4 to i64
  %223 = sub i64 %221, %222
  %224 = lshr exact i64 %223, 1
  %225 = trunc i64 %224 to i32
  store i32 %225, i32* %3, align 4
  store i16 0, i16* %219, align 2
  br label %226

226:                                              ; preds = %217, %188, %184
  %227 = phi i64 [ %185, %188 ], [ %185, %184 ], [ %218, %217 ]
  %228 = phi i16* [ %4, %188 ], [ %4, %184 ], [ %219, %217 ]
  %229 = phi i8* [ %57, %188 ], [ %57, %184 ], [ %220, %217 ]
  %230 = ptrtoint i16* %228 to i64
  %231 = ptrtoint i16* %4 to i64
  %232 = sub i64 %230, %231
  %233 = lshr exact i64 %232, 1
  %234 = trunc i64 %233 to i32
  %235 = icmp ult i8* %229, %186
  br i1 %235, label %236, label %249

236:                                              ; preds = %226
  %237 = trunc i64 %185 to i32
  %238 = add i32 %55, %237
  %239 = trunc i64 %227 to i32
  %240 = sub i32 %238, %239
  %241 = add i32 %240, %234
  br label %249

242:                                              ; preds = %18, %12
  %243 = icmp eq i32* %3, null
  br i1 %243, label %249, label %244

244:                                              ; preds = %242
  %245 = load i32, i32* %3, align 4
  %246 = icmp eq i32 %245, 0
  br i1 %246, label %248, label %247

247:                                              ; preds = %244
  store i16 0, i16* %4, align 2
  br label %248

248:                                              ; preds = %247, %244
  store i32 0, i32* %3, align 4
  br label %249

249:                                              ; preds = %179, %141, %226, %236, %242, %248
  %250 = phi i32 [ 0, %242 ], [ 0, %248 ], [ %241, %236 ], [ %234, %226 ], [ %148, %141 ], [ %182, %179 ]
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %14) #9
  ret i32 %250
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @hb_ot_name_get_utf32(%struct.hb_face_t*, i32, %struct.hb_language_impl_t*, i32*, i32*) local_unnamed_addr #0 {
  %6 = alloca i32, align 4
  %7 = getelementptr inbounds %struct.hb_face_t, %struct.hb_face_t* %0, i64 0, i32 8, i32 7, i32 0
  %8 = tail call %"struct.OT::name_accelerator_t"* @_ZNK16hb_lazy_loader_tIN2OT18name_accelerator_tE21hb_face_lazy_loader_tIS1_Lj7EE9hb_face_tLj7ES1_E10get_storedEv(%struct.hb_lazy_loader_t.21* %7) #9
  %9 = icmp eq %struct.hb_language_impl_t* %2, null
  br i1 %9, label %10, label %12

10:                                               ; preds = %5
  %11 = tail call %struct.hb_language_impl_t* @hb_language_from_string(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.12, i64 0, i64 0), i32 2) #9
  br label %12

12:                                               ; preds = %10, %5
  %13 = phi %struct.hb_language_impl_t* [ %2, %5 ], [ %11, %10 ]
  %14 = bitcast i32* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %14) #9
  store i32 -1431655766, i32* %6, align 4
  %15 = getelementptr inbounds %"struct.OT::name_accelerator_t", %"struct.OT::name_accelerator_t"* %8, i64 0, i32 0
  %16 = call i32 @_ZNK2OT4name13accelerator_t9get_indexEjPK18hb_language_impl_tPj(%"struct.OT::name::accelerator_t"* %15, i32 %1, %struct.hb_language_impl_t* %13, i32* nonnull %6) #9
  %17 = icmp eq i32 %16, -1
  br i1 %17, label %211, label %18

18:                                               ; preds = %12
  %19 = getelementptr inbounds %"struct.OT::name_accelerator_t", %"struct.OT::name_accelerator_t"* %8, i64 0, i32 0, i32 2, i32 0, i32 0
  %20 = load %struct.hb_blob_t*, %struct.hb_blob_t** %19, align 8
  %21 = icmp eq %struct.hb_blob_t* %20, null
  %22 = select i1 %21, %struct.hb_blob_t* bitcast ([48 x i64]* @_hb_NullPool to %struct.hb_blob_t*), %struct.hb_blob_t* %20
  %23 = getelementptr inbounds %struct.hb_blob_t, %struct.hb_blob_t* %22, i64 0, i32 1
  %24 = bitcast i8** %23 to %"struct.OT::name"**
  %25 = load %"struct.OT::name"*, %"struct.OT::name"** %24, align 8
  %26 = getelementptr inbounds %struct.hb_blob_t, %struct.hb_blob_t* %22, i64 0, i32 2
  %27 = load i32, i32* %26, align 8
  %28 = icmp ult i32 %27, 6
  %29 = select i1 %28, %"struct.OT::name"* bitcast ([48 x i64]* @_hb_NullPool to %"struct.OT::name"*), %"struct.OT::name"* %25
  %30 = getelementptr inbounds %"struct.OT::name", %"struct.OT::name"* %29, i64 0, i32 1
  %31 = bitcast %"struct.OT::IntType.141"* %30 to i16*
  %32 = load i16, i16* %31, align 1
  %33 = call i16 @llvm.bswap.i16(i16 %32) #9
  %34 = zext i16 %33 to i32
  %35 = icmp ult i32 %16, %34
  %36 = zext i32 %16 to i64
  %37 = getelementptr inbounds %"struct.OT::name", %"struct.OT::name"* %29, i64 0, i32 3, i32 0, i64 %36
  %38 = select i1 %35, %"struct.OT::NameRecord"* %37, %"struct.OT::NameRecord"* bitcast ([48 x i64]* @_hb_NullPool to %"struct.OT::NameRecord"*), !prof !2
  %39 = getelementptr inbounds %"struct.OT::name_accelerator_t", %"struct.OT::name_accelerator_t"* %8, i64 0, i32 0, i32 0
  %40 = load i8*, i8** %39, align 8
  %41 = getelementptr inbounds %"struct.OT::name_accelerator_t", %"struct.OT::name_accelerator_t"* %8, i64 0, i32 0, i32 1
  %42 = load i32, i32* %41, align 8
  %43 = getelementptr inbounds %"struct.OT::NameRecord", %"struct.OT::NameRecord"* %38, i64 0, i32 5, i32 0, i32 0
  %44 = bitcast %"struct.OT::IntType.141"* %43 to i16*
  %45 = load i16, i16* %44, align 1
  %46 = call i16 @llvm.bswap.i16(i16 %45) #9
  %47 = zext i16 %46 to i32
  %48 = getelementptr inbounds %"struct.OT::NameRecord", %"struct.OT::NameRecord"* %38, i64 0, i32 4
  %49 = bitcast %"struct.OT::IntType.141"* %48 to i16*
  %50 = load i16, i16* %49, align 1
  %51 = call i16 @llvm.bswap.i16(i16 %50) #9
  %52 = zext i16 %51 to i32
  %53 = call i32 @llvm.usub.sat.i32(i32 %42, i32 %47) #9
  %54 = icmp ugt i32 %53, %52
  %55 = select i1 %54, i32 %52, i32 %53
  %56 = zext i16 %46 to i64
  %57 = getelementptr inbounds i8, i8* %40, i64 %56
  %58 = zext i32 %55 to i64
  %59 = load i32, i32* %6, align 4
  switch i32 %59, label %211 [
    i32 2, label %60
    i32 1, label %154
  ]

60:                                               ; preds = %18
  %61 = lshr i64 %58, 1
  %62 = bitcast i8* %57 to %"struct.OT::IntType.141"*
  %63 = getelementptr inbounds %"struct.OT::IntType.141", %"struct.OT::IntType.141"* %62, i64 %61
  %64 = icmp eq i32* %3, null
  br i1 %64, label %121, label %65

65:                                               ; preds = %60
  %66 = load i32, i32* %3, align 4
  %67 = icmp eq i32 %66, 0
  br i1 %67, label %121, label %68

68:                                               ; preds = %65
  %69 = add i32 %66, -1
  store i32 %69, i32* %3, align 4
  %70 = zext i32 %69 to i64
  %71 = getelementptr inbounds i32, i32* %4, i64 %70
  %72 = icmp ugt %"struct.OT::IntType.141"* %63, %62
  %73 = icmp ne i32 %69, 0
  %74 = and i1 %72, %73
  br i1 %74, label %75, label %113

75:                                               ; preds = %68, %101
  %76 = phi %"struct.OT::IntType.141"* [ %103, %101 ], [ %62, %68 ]
  %77 = phi i32* [ %109, %101 ], [ %4, %68 ]
  %78 = getelementptr inbounds %"struct.OT::IntType.141", %"struct.OT::IntType.141"* %76, i64 1
  %79 = bitcast %"struct.OT::IntType.141"* %76 to i16*
  %80 = load i16, i16* %79, align 1
  %81 = call i16 @llvm.bswap.i16(i16 %80) #9
  %82 = zext i16 %81 to i32
  %83 = and i32 %82, 63488
  %84 = icmp eq i32 %83, 55296
  br i1 %84, label %85, label %101, !prof !3

85:                                               ; preds = %75
  %86 = icmp ult i16 %81, -9216
  %87 = icmp ult %"struct.OT::IntType.141"* %78, %63
  %88 = and i1 %87, %86
  br i1 %88, label %89, label %101, !prof !2

89:                                               ; preds = %85
  %90 = bitcast %"struct.OT::IntType.141"* %78 to i16*
  %91 = load i16, i16* %90, align 1
  %92 = call i16 @llvm.bswap.i16(i16 %91) #9
  %93 = zext i16 %92 to i32
  %94 = and i32 %93, 64512
  %95 = icmp eq i32 %94, 56320
  br i1 %95, label %96, label %101, !prof !2

96:                                               ; preds = %89
  %97 = shl nuw nsw i32 %82, 10
  %98 = add nsw i32 %97, -56613888
  %99 = add nsw i32 %98, %93
  %100 = getelementptr inbounds %"struct.OT::IntType.141", %"struct.OT::IntType.141"* %76, i64 2
  br label %101

101:                                              ; preds = %96, %89, %85, %75
  %102 = phi i32 [ %99, %96 ], [ %82, %75 ], [ 65533, %89 ], [ 65533, %85 ]
  %103 = phi %"struct.OT::IntType.141"* [ %100, %96 ], [ %78, %75 ], [ %78, %89 ], [ %78, %85 ]
  %104 = icmp ugt i32 %102, 55295
  %105 = add nsw i32 %102, -57344
  %106 = icmp ugt i32 %105, 1056767
  %107 = and i1 %104, %106
  %108 = select i1 %107, i32 65533, i32 %102, !prof !3
  %109 = getelementptr inbounds i32, i32* %77, i64 1
  store i32 %108, i32* %77, align 4
  %110 = icmp ult %"struct.OT::IntType.141"* %103, %63
  %111 = icmp ult i32* %109, %71
  %112 = and i1 %111, %110
  br i1 %112, label %75, label %113

113:                                              ; preds = %101, %68
  %114 = phi i32* [ %4, %68 ], [ %109, %101 ]
  %115 = phi %"struct.OT::IntType.141"* [ %62, %68 ], [ %103, %101 ]
  %116 = ptrtoint i32* %114 to i64
  %117 = ptrtoint i32* %4 to i64
  %118 = sub i64 %116, %117
  %119 = lshr exact i64 %118, 2
  %120 = trunc i64 %119 to i32
  store i32 %120, i32* %3, align 4
  store i32 0, i32* %114, align 4
  br label %121

121:                                              ; preds = %113, %65, %60
  %122 = phi i32* [ %114, %113 ], [ %4, %65 ], [ %4, %60 ]
  %123 = phi %"struct.OT::IntType.141"* [ %115, %113 ], [ %62, %65 ], [ %62, %60 ]
  %124 = ptrtoint i32* %122 to i64
  %125 = ptrtoint i32* %4 to i64
  %126 = sub i64 %124, %125
  %127 = lshr exact i64 %126, 2
  %128 = trunc i64 %127 to i32
  %129 = icmp ult %"struct.OT::IntType.141"* %123, %63
  br i1 %129, label %130, label %218

130:                                              ; preds = %121, %150
  %131 = phi i32 [ %152, %150 ], [ %128, %121 ]
  %132 = phi %"struct.OT::IntType.141"* [ %151, %150 ], [ %123, %121 ]
  %133 = getelementptr inbounds %"struct.OT::IntType.141", %"struct.OT::IntType.141"* %132, i64 1
  %134 = bitcast %"struct.OT::IntType.141"* %132 to i16*
  %135 = load i16, i16* %134, align 1
  %136 = call i16 @llvm.bswap.i16(i16 %135) #9
  %137 = and i16 %136, -2048
  %138 = icmp eq i16 %137, -10240
  br i1 %138, label %139, label %150, !prof !3

139:                                              ; preds = %130
  %140 = icmp ult i16 %136, -9216
  %141 = icmp ult %"struct.OT::IntType.141"* %133, %63
  %142 = and i1 %141, %140
  br i1 %142, label %143, label %150, !prof !2

143:                                              ; preds = %139
  %144 = bitcast %"struct.OT::IntType.141"* %133 to i16*
  %145 = load i16, i16* %144, align 1
  %146 = and i16 %145, 252
  %147 = icmp eq i16 %146, 220
  %148 = getelementptr inbounds %"struct.OT::IntType.141", %"struct.OT::IntType.141"* %132, i64 2
  %149 = select i1 %147, %"struct.OT::IntType.141"* %148, %"struct.OT::IntType.141"* %133, !prof !2
  br label %150

150:                                              ; preds = %143, %139, %130
  %151 = phi %"struct.OT::IntType.141"* [ %133, %130 ], [ %133, %139 ], [ %149, %143 ]
  %152 = add i32 %131, 1
  %153 = icmp ult %"struct.OT::IntType.141"* %151, %63
  br i1 %153, label %130, label %218

154:                                              ; preds = %18
  %155 = ptrtoint i8* %57 to i64
  %156 = getelementptr inbounds i8, i8* %57, i64 %58
  %157 = icmp eq i32* %3, null
  br i1 %157, label %195, label %158

158:                                              ; preds = %154
  %159 = load i32, i32* %3, align 4
  %160 = icmp eq i32 %159, 0
  br i1 %160, label %195, label %161

161:                                              ; preds = %158
  %162 = add i32 %159, -1
  store i32 %162, i32* %3, align 4
  %163 = zext i32 %162 to i64
  %164 = getelementptr inbounds i32, i32* %4, i64 %163
  %165 = icmp ne i32 %55, 0
  %166 = icmp ne i32 %162, 0
  %167 = and i1 %165, %166
  br i1 %167, label %168, label %186

168:                                              ; preds = %161, %168
  %169 = phi i8* [ %171, %168 ], [ %57, %161 ]
  %170 = phi i32* [ %180, %168 ], [ %4, %161 ]
  %171 = getelementptr inbounds i8, i8* %169, i64 1
  %172 = load i8, i8* %169, align 1
  %173 = zext i8 %172 to i32
  %174 = icmp slt i8 %172, 0
  %175 = select i1 %174, i32 65533, i32 %173
  %176 = add nsw i32 %175, -57344
  %177 = icmp ugt i32 %176, 1056767
  %178 = and i1 %174, %177
  %179 = select i1 %178, i32 65533, i32 %175, !prof !3
  %180 = getelementptr inbounds i32, i32* %170, i64 1
  store i32 %179, i32* %170, align 4
  %181 = icmp ult i8* %171, %156
  %182 = icmp ult i32* %180, %164
  %183 = and i1 %181, %182
  br i1 %183, label %168, label %184

184:                                              ; preds = %168
  %185 = ptrtoint i8* %171 to i64
  br label %186

186:                                              ; preds = %184, %161
  %187 = phi i64 [ %185, %184 ], [ %155, %161 ]
  %188 = phi i32* [ %180, %184 ], [ %4, %161 ]
  %189 = phi i8* [ %171, %184 ], [ %57, %161 ]
  %190 = ptrtoint i32* %188 to i64
  %191 = ptrtoint i32* %4 to i64
  %192 = sub i64 %190, %191
  %193 = lshr exact i64 %192, 2
  %194 = trunc i64 %193 to i32
  store i32 %194, i32* %3, align 4
  store i32 0, i32* %188, align 4
  br label %195

195:                                              ; preds = %186, %158, %154
  %196 = phi i64 [ %155, %158 ], [ %155, %154 ], [ %187, %186 ]
  %197 = phi i32* [ %4, %158 ], [ %4, %154 ], [ %188, %186 ]
  %198 = phi i8* [ %57, %158 ], [ %57, %154 ], [ %189, %186 ]
  %199 = ptrtoint i32* %197 to i64
  %200 = ptrtoint i32* %4 to i64
  %201 = sub i64 %199, %200
  %202 = lshr exact i64 %201, 2
  %203 = trunc i64 %202 to i32
  %204 = icmp ult i8* %198, %156
  br i1 %204, label %205, label %218

205:                                              ; preds = %195
  %206 = trunc i64 %155 to i32
  %207 = add i32 %55, %206
  %208 = trunc i64 %196 to i32
  %209 = sub i32 %207, %208
  %210 = add i32 %209, %203
  br label %218

211:                                              ; preds = %18, %12
  %212 = icmp eq i32* %3, null
  br i1 %212, label %218, label %213

213:                                              ; preds = %211
  %214 = load i32, i32* %3, align 4
  %215 = icmp eq i32 %214, 0
  br i1 %215, label %217, label %216

216:                                              ; preds = %213
  store i32 0, i32* %4, align 4
  br label %217

217:                                              ; preds = %216, %213
  store i32 0, i32* %3, align 4
  br label %218

218:                                              ; preds = %150, %121, %195, %205, %211, %217
  %219 = phi i32 [ 0, %211 ], [ 0, %217 ], [ %210, %205 ], [ %203, %195 ], [ %128, %121 ], [ %152, %150 ]
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %14) #9
  ret i32 %219
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.OT::name_accelerator_t"* @_ZNK16hb_lazy_loader_tIN2OT18name_accelerator_tE21hb_face_lazy_loader_tIS1_Lj7EE9hb_face_tLj7ES1_E10get_storedEv(%struct.hb_lazy_loader_t.21*) local_unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %struct.hb_lazy_loader_t.21, %struct.hb_lazy_loader_t.21* %0, i64 -7
  %3 = bitcast %struct.hb_lazy_loader_t.21* %2 to %struct.hb_face_t**
  %4 = bitcast %struct.hb_lazy_loader_t.21* %0 to i64*
  %5 = load atomic i64, i64* %4 acquire, align 8
  %6 = inttoptr i64 %5 to %"struct.OT::name_accelerator_t"*
  %7 = icmp eq i64 %5, 0
  br i1 %7, label %8, label %41, !prof !3

8:                                                ; preds = %1, %36
  %9 = load %struct.hb_face_t*, %struct.hb_face_t** %3, align 8
  %10 = icmp eq %struct.hb_face_t* %9, null
  br i1 %10, label %41, label %11, !prof !3

11:                                               ; preds = %8
  %12 = tail call noalias i8* @calloc(i64 1, i64 40) #9
  %13 = bitcast i8* %12 to %"struct.OT::name_accelerator_t"*
  %14 = icmp eq i8* %12, null
  br i1 %14, label %17, label %15, !prof !3

15:                                               ; preds = %11
  %16 = bitcast i8* %12 to %"struct.OT::name::accelerator_t"*
  tail call void @_ZN2OT4name13accelerator_t4initEP9hb_face_t(%"struct.OT::name::accelerator_t"* nonnull %16, %struct.hb_face_t* nonnull %9) #9
  br label %17

17:                                               ; preds = %11, %15
  %18 = select i1 %14, %"struct.OT::name_accelerator_t"* bitcast ([48 x i64]* @_hb_NullPool to %"struct.OT::name_accelerator_t"*), %"struct.OT::name_accelerator_t"* %13, !prof !3
  %19 = ptrtoint %"struct.OT::name_accelerator_t"* %18 to i64
  %20 = cmpxchg weak i64* %4, i64 0, i64 %19 acq_rel monotonic
  %21 = extractvalue { i64, i1 } %20, 1
  br i1 %21, label %41, label %22, !prof !2

22:                                               ; preds = %17
  %23 = icmp eq %"struct.OT::name_accelerator_t"* %18, null
  %24 = or i1 %14, %23
  br i1 %24, label %36, label %25

25:                                               ; preds = %22
  %26 = getelementptr inbounds %"struct.OT::name_accelerator_t", %"struct.OT::name_accelerator_t"* %18, i64 0, i32 0, i32 3
  %27 = getelementptr inbounds %"struct.OT::name_accelerator_t", %"struct.OT::name_accelerator_t"* %18, i64 0, i32 0, i32 3, i32 2
  %28 = bitcast %struct.hb_ot_name_entry_t** %27 to i8**
  %29 = load i8*, i8** %28, align 8
  tail call void @free(i8* %29) #9
  %30 = bitcast %struct.hb_vector_t.24* %26 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %30, i8 0, i64 16, i1 false) #9
  %31 = getelementptr inbounds %"struct.OT::name_accelerator_t", %"struct.OT::name_accelerator_t"* %18, i64 0, i32 0, i32 2, i32 0, i32 0
  %32 = load %struct.hb_blob_t*, %struct.hb_blob_t** %31, align 8
  %33 = icmp eq %struct.hb_blob_t* %32, null
  %34 = select i1 %33, %struct.hb_blob_t* bitcast ([48 x i64]* @_hb_NullPool to %struct.hb_blob_t*), %struct.hb_blob_t* %32
  tail call void @hb_blob_destroy(%struct.hb_blob_t* %34) #9
  %35 = bitcast %"struct.OT::name_accelerator_t"* %18 to i8*
  tail call void @free(i8* %35) #9
  br label %36

36:                                               ; preds = %25, %22
  %37 = load atomic i64, i64* %4 acquire, align 8
  %38 = icmp eq i64 %37, 0
  br i1 %38, label %8, label %39, !prof !3

39:                                               ; preds = %36
  %40 = inttoptr i64 %37 to %"struct.OT::name_accelerator_t"*
  br label %41

41:                                               ; preds = %8, %17, %39, %1
  %42 = phi %"struct.OT::name_accelerator_t"* [ %40, %39 ], [ %6, %1 ], [ %18, %17 ], [ bitcast ([48 x i64]* @_hb_NullPool to %"struct.OT::name_accelerator_t"*), %8 ]
  ret %"struct.OT::name_accelerator_t"* %42
}

; Function Attrs: nofree nounwind
declare noalias i8* @calloc(i64, i64) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2OT4name13accelerator_t4initEP9hb_face_t(%"struct.OT::name::accelerator_t"*, %struct.hb_face_t*) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %struct.hb_sanitize_context_t, align 8
  %4 = bitcast %struct.hb_sanitize_context_t* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %4) #9
  %5 = getelementptr inbounds %struct.hb_sanitize_context_t, %struct.hb_sanitize_context_t* %3, i64 0, i32 0, i32 0
  store i32 0, i32* %5, align 8
  %6 = getelementptr inbounds %struct.hb_sanitize_context_t, %struct.hb_sanitize_context_t* %3, i64 0, i32 2
  %7 = getelementptr inbounds %struct.hb_sanitize_context_t, %struct.hb_sanitize_context_t* %3, i64 0, i32 8
  store i32 0, i32* %7, align 4
  %8 = getelementptr inbounds %struct.hb_sanitize_context_t, %struct.hb_sanitize_context_t* %3, i64 0, i32 9
  store %struct.hb_blob_t* null, %struct.hb_blob_t** %8, align 8
  %9 = getelementptr inbounds %struct.hb_sanitize_context_t, %struct.hb_sanitize_context_t* %3, i64 0, i32 10
  %10 = bitcast i8** %6 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %10, i8 0, i64 25, i1 false) #9
  %11 = getelementptr inbounds %struct.hb_sanitize_context_t, %struct.hb_sanitize_context_t* %3, i64 0, i32 11
  %12 = tail call i32 @hb_face_get_glyph_count(%struct.hb_face_t* %1) #9
  store i32 %12, i32* %9, align 8
  store i8 1, i8* %11, align 4
  %13 = tail call %struct.hb_blob_t* @hb_face_reference_table(%struct.hb_face_t* %1, i32 1851878757) #9
  %14 = call %struct.hb_blob_t* @_ZN21hb_sanitize_context_t13sanitize_blobIN2OT4nameEEEP9hb_blob_tS4_(%struct.hb_sanitize_context_t* nonnull %3, %struct.hb_blob_t* %13) #9
  %15 = getelementptr inbounds %"struct.OT::name::accelerator_t", %"struct.OT::name::accelerator_t"* %0, i64 0, i32 2, i32 0, i32 0
  store %struct.hb_blob_t* %14, %struct.hb_blob_t** %15, align 8
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %4) #9
  %16 = icmp eq %struct.hb_blob_t* %14, null
  %17 = select i1 %16, %struct.hb_blob_t* bitcast ([48 x i64]* @_hb_NullPool to %struct.hb_blob_t*), %struct.hb_blob_t* %14
  %18 = getelementptr inbounds %struct.hb_blob_t, %struct.hb_blob_t* %17, i64 0, i32 1
  %19 = bitcast i8** %18 to %"struct.OT::name"**
  %20 = load %"struct.OT::name"*, %"struct.OT::name"** %19, align 8
  %21 = getelementptr inbounds %struct.hb_blob_t, %struct.hb_blob_t* %17, i64 0, i32 2
  %22 = load i32, i32* %21, align 8
  %23 = icmp ult i32 %22, 6
  %24 = select i1 %23, %"struct.OT::name"* bitcast ([48 x i64]* @_hb_NullPool to %"struct.OT::name"*), %"struct.OT::name"* %20
  %25 = getelementptr inbounds %"struct.OT::name", %"struct.OT::name"* %24, i64 0, i32 2
  %26 = bitcast %"struct.OT::OffsetTo"* %25 to i16*
  %27 = load i16, i16* %26, align 1
  %28 = call i16 @llvm.bswap.i16(i16 %27) #9
  %29 = zext i16 %28 to i64
  %30 = getelementptr inbounds %"struct.OT::name", %"struct.OT::name"* %24, i64 0, i32 0, i32 0, i32 0, i64 %29
  %31 = getelementptr inbounds %"struct.OT::name::accelerator_t", %"struct.OT::name::accelerator_t"* %0, i64 0, i32 0
  store i8* %30, i8** %31, align 8
  %32 = load i32, i32* %21, align 8
  %33 = load %"struct.OT::name"*, %"struct.OT::name"** %19, align 8
  %34 = icmp ult i32 %32, 6
  %35 = select i1 %34, %"struct.OT::name"* bitcast ([48 x i64]* @_hb_NullPool to %"struct.OT::name"*), %"struct.OT::name"* %33
  %36 = getelementptr inbounds %"struct.OT::name", %"struct.OT::name"* %35, i64 0, i32 2, i32 0, i32 0
  %37 = bitcast %"struct.OT::IntType.141"* %36 to i16*
  %38 = load i16, i16* %37, align 1
  %39 = call i16 @llvm.bswap.i16(i16 %38) #9
  %40 = zext i16 %39 to i32
  %41 = sub i32 %32, %40
  %42 = getelementptr inbounds %"struct.OT::name::accelerator_t", %"struct.OT::name::accelerator_t"* %0, i64 0, i32 1
  store i32 %41, i32* %42, align 8
  %43 = load %"struct.OT::name"*, %"struct.OT::name"** %19, align 8
  %44 = load i32, i32* %21, align 8
  %45 = icmp ult i32 %44, 6
  %46 = select i1 %45, %"struct.OT::name"* bitcast ([48 x i64]* @_hb_NullPool to %"struct.OT::name"*), %"struct.OT::name"* %43
  %47 = getelementptr inbounds %"struct.OT::name", %"struct.OT::name"* %46, i64 0, i32 1
  %48 = bitcast %"struct.OT::IntType.141"* %47 to i16*
  %49 = load i16, i16* %48, align 1
  %50 = call i16 @llvm.bswap.i16(i16 %49) #9
  %51 = zext i16 %50 to i32
  %52 = getelementptr inbounds %"struct.OT::name::accelerator_t", %"struct.OT::name::accelerator_t"* %0, i64 0, i32 3
  %53 = bitcast %struct.hb_vector_t.24* %52 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %53, i8 0, i64 16, i1 false) #9
  %54 = getelementptr inbounds %struct.hb_vector_t.24, %struct.hb_vector_t.24* %52, i64 0, i32 0
  %55 = icmp eq i16 %49, 0
  br i1 %55, label %56, label %58, !prof !8

56:                                               ; preds = %2
  %57 = getelementptr inbounds %"struct.OT::name::accelerator_t", %"struct.OT::name::accelerator_t"* %0, i64 0, i32 3, i32 1
  br label %206

58:                                               ; preds = %2, %58
  %59 = phi i32 [ %62, %58 ], [ 0, %2 ]
  %60 = lshr i32 %59, 1
  %61 = add i32 %59, 8
  %62 = add i32 %61, %60
  %63 = icmp ugt i32 %62, %51
  br i1 %63, label %64, label %58

64:                                               ; preds = %58
  %65 = icmp ult i32 %62, 268435455
  br i1 %65, label %66, label %74, !prof !9

66:                                               ; preds = %64
  %67 = zext i32 %62 to i64
  %68 = shl nuw nsw i64 %67, 4
  %69 = call i8* @malloc(i64 %68)
  %70 = icmp eq i8* %69, null
  br i1 %70, label %74, label %71, !prof !3

71:                                               ; preds = %66
  %72 = getelementptr inbounds %"struct.OT::name::accelerator_t", %"struct.OT::name::accelerator_t"* %0, i64 0, i32 3, i32 2
  %73 = bitcast %struct.hb_ot_name_entry_t** %72 to i8**
  store i8* %69, i8** %73, align 8
  br label %74

74:                                               ; preds = %64, %66, %71
  %75 = phi i32 [ %62, %71 ], [ -1, %66 ], [ -1, %64 ]
  store i32 %75, i32* %54, align 8
  %76 = getelementptr inbounds %"struct.OT::name::accelerator_t", %"struct.OT::name::accelerator_t"* %0, i64 0, i32 3, i32 1
  %77 = load i32, i32* %76, align 4
  %78 = icmp eq i16 %49, 0
  %79 = getelementptr inbounds %"struct.OT::name::accelerator_t", %"struct.OT::name::accelerator_t"* %0, i64 0, i32 3, i32 1
  br i1 %78, label %84, label %80

80:                                               ; preds = %74
  %81 = getelementptr inbounds %"struct.OT::name::accelerator_t", %"struct.OT::name::accelerator_t"* %0, i64 0, i32 3, i32 2
  %82 = bitcast %struct.hb_ot_name_entry_t** %81 to i8**
  %83 = zext i16 %50 to i64
  br label %96

84:                                               ; preds = %190, %74
  %85 = phi i32 [ %77, %74 ], [ %199, %190 ]
  %86 = icmp eq i32 %85, 0
  br i1 %86, label %206, label %87, !prof !3

87:                                               ; preds = %84
  %88 = zext i32 %85 to i64
  %89 = getelementptr inbounds %"struct.OT::name::accelerator_t", %"struct.OT::name::accelerator_t"* %0, i64 0, i32 3, i32 2
  %90 = bitcast %struct.hb_ot_name_entry_t** %89 to i8**
  %91 = load i8*, i8** %90, align 8
  call fastcc void @_ZL13sort_r_simpleIJEEvPvmmPFiPKvS2_DpT_ES4_(i8* %91, i64 %88, i64 16, i32 (i8*, i8*)* nonnull @_ZN2OTL21_hb_ot_name_entry_cmpEPKvS1_) #9
  %92 = load i32, i32* %79, align 4
  %93 = icmp eq i32 %92, 0
  br i1 %93, label %206, label %94

94:                                               ; preds = %87
  %95 = getelementptr inbounds %"struct.OT::name::accelerator_t", %"struct.OT::name::accelerator_t"* %0, i64 0, i32 3, i32 2
  br label %249

96:                                               ; preds = %200, %80
  %97 = phi i32 [ %75, %80 ], [ %202, %200 ]
  %98 = phi i64 [ 0, %80 ], [ %197, %200 ]
  %99 = phi i32 [ %77, %80 ], [ %199, %200 ]
  %100 = phi i32 [ 0, %80 ], [ %201, %200 ]
  %101 = add i32 %99, 1
  %102 = icmp sgt i32 %101, 0
  %103 = select i1 %102, i32 %101, i32 0
  %104 = icmp slt i32 %97, 0
  br i1 %104, label %137, label %105, !prof !3

105:                                              ; preds = %96
  %106 = icmp ult i32 %97, %103
  br i1 %106, label %107, label %126, !prof !3

107:                                              ; preds = %105, %107
  %108 = phi i32 [ %111, %107 ], [ %97, %105 ]
  %109 = lshr i32 %108, 1
  %110 = add i32 %108, 8
  %111 = add i32 %110, %109
  %112 = icmp ugt i32 %111, %103
  br i1 %112, label %113, label %107

113:                                              ; preds = %107
  %114 = icmp uge i32 %111, %97
  %115 = icmp ult i32 %111, 268435455
  %116 = and i1 %114, %115
  br i1 %116, label %117, label %123, !prof !9

117:                                              ; preds = %113
  %118 = load i8*, i8** %82, align 8
  %119 = zext i32 %111 to i64
  %120 = shl nuw nsw i64 %119, 4
  %121 = call i8* @realloc(i8* %118, i64 %120) #9
  %122 = icmp eq i8* %121, null
  br i1 %122, label %123, label %124, !prof !3

123:                                              ; preds = %117, %113
  store i32 -1, i32* %54, align 8
  br label %137

124:                                              ; preds = %117
  store i8* %121, i8** %82, align 8
  store i32 %111, i32* %54, align 8
  %125 = load i32, i32* %79, align 4
  br label %126

126:                                              ; preds = %124, %105
  %127 = phi i32 [ %125, %124 ], [ %99, %105 ]
  %128 = icmp ugt i32 %103, %127
  br i1 %128, label %129, label %138

129:                                              ; preds = %126
  %130 = load %struct.hb_ot_name_entry_t*, %struct.hb_ot_name_entry_t** %81, align 8
  %131 = zext i32 %127 to i64
  %132 = getelementptr inbounds %struct.hb_ot_name_entry_t, %struct.hb_ot_name_entry_t* %130, i64 %131
  %133 = bitcast %struct.hb_ot_name_entry_t* %132 to i8*
  %134 = sub i32 %103, %127
  %135 = zext i32 %134 to i64
  %136 = shl nuw nsw i64 %135, 4
  call void @llvm.memset.p0i8.i64(i8* align 8 %133, i8 0, i64 %136, i1 false) #9
  br label %138

137:                                              ; preds = %123, %96
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 bitcast ([48 x i64]* @_hb_CrapPool to i8*), i8* align 16 bitcast ([48 x i64]* @_hb_NullPool to i8*), i64 16, i1 false) #9
  br label %143

138:                                              ; preds = %129, %126
  store i32 %103, i32* %79, align 4
  %139 = load %struct.hb_ot_name_entry_t*, %struct.hb_ot_name_entry_t** %81, align 8
  %140 = add nsw i32 %103, -1
  %141 = zext i32 %140 to i64
  %142 = getelementptr inbounds %struct.hb_ot_name_entry_t, %struct.hb_ot_name_entry_t* %139, i64 %141
  br label %143

143:                                              ; preds = %137, %138
  %144 = phi %struct.hb_ot_name_entry_t* [ bitcast ([48 x i64]* @_hb_CrapPool to %struct.hb_ot_name_entry_t*), %137 ], [ %142, %138 ]
  %145 = getelementptr inbounds %"struct.OT::name", %"struct.OT::name"* %46, i64 0, i32 3, i32 0, i64 %98, i32 3
  %146 = bitcast %"struct.OT::IntType.141"* %145 to i16*
  %147 = load i16, i16* %146, align 1
  %148 = call i16 @llvm.bswap.i16(i16 %147) #9
  %149 = zext i16 %148 to i32
  %150 = getelementptr inbounds %struct.hb_ot_name_entry_t, %struct.hb_ot_name_entry_t* %144, i64 0, i32 0
  store i32 %149, i32* %150, align 8
  %151 = getelementptr inbounds %"struct.OT::name", %"struct.OT::name"* %46, i64 0, i32 3, i32 0, i64 %98
  %152 = call %struct.hb_language_impl_t* @_ZNK2OT10NameRecord8languageEP9hb_face_t(%"struct.OT::NameRecord"* %151, %struct.hb_face_t* %1)
  %153 = getelementptr inbounds %struct.hb_ot_name_entry_t, %struct.hb_ot_name_entry_t* %144, i64 0, i32 2
  store %struct.hb_language_impl_t* %152, %struct.hb_language_impl_t** %153, align 8
  %154 = bitcast %"struct.OT::NameRecord"* %151 to i16*
  %155 = load i16, i16* %154, align 1
  %156 = getelementptr inbounds %"struct.OT::name", %"struct.OT::name"* %46, i64 0, i32 3, i32 0, i64 %98, i32 1
  %157 = bitcast %"struct.OT::IntType.141"* %156 to i16*
  %158 = load i16, i16* %157, align 1
  %159 = icmp eq i16 %155, 768
  %160 = icmp eq i16 %158, 2560
  %161 = and i1 %159, %160
  br i1 %161, label %190, label %162

162:                                              ; preds = %143
  %163 = icmp eq i16 %155, 0
  %164 = icmp eq i16 %158, 1536
  %165 = and i1 %163, %164
  br i1 %165, label %190, label %166

166:                                              ; preds = %162
  %167 = icmp eq i16 %158, 1024
  %168 = and i1 %163, %167
  br i1 %168, label %190, label %169

169:                                              ; preds = %166
  %170 = icmp eq i16 %158, 256
  %171 = and i1 %159, %170
  br i1 %171, label %190, label %172

172:                                              ; preds = %169
  %173 = icmp eq i16 %158, 768
  %174 = and i1 %163, %173
  br i1 %174, label %190, label %175

175:                                              ; preds = %172
  %176 = icmp eq i16 %158, 512
  %177 = and i1 %163, %176
  br i1 %177, label %190, label %178

178:                                              ; preds = %175
  %179 = and i1 %163, %170
  br i1 %179, label %190, label %180

180:                                              ; preds = %178
  %181 = icmp eq i16 %158, 0
  %182 = or i16 %158, %155
  %183 = icmp eq i16 %182, 0
  br i1 %183, label %190, label %184

184:                                              ; preds = %180
  %185 = and i1 %159, %181
  br i1 %185, label %190, label %186

186:                                              ; preds = %184
  %187 = icmp eq i16 %155, 256
  %188 = and i1 %187, %181
  %189 = select i1 %188, i16 10, i16 42
  br label %190

190:                                              ; preds = %143, %162, %166, %169, %172, %175, %178, %180, %184, %186
  %191 = phi i16 [ 0, %143 ], [ 1, %162 ], [ 2, %166 ], [ 3, %169 ], [ 4, %172 ], [ 5, %175 ], [ 6, %178 ], [ 7, %180 ], [ 8, %184 ], [ %189, %186 ]
  %192 = getelementptr inbounds %struct.hb_ot_name_entry_t, %struct.hb_ot_name_entry_t* %144, i64 0, i32 1
  %193 = bitcast %union._hb_var_int_t* %192 to [2 x i16]*
  %194 = bitcast %union._hb_var_int_t* %192 to i16*
  store i16 %191, i16* %194, align 4
  %195 = trunc i32 %100 to i16
  %196 = getelementptr inbounds [2 x i16], [2 x i16]* %193, i64 0, i64 1
  store i16 %195, i16* %196, align 2
  %197 = add nuw nsw i64 %98, 1
  %198 = icmp ult i64 %197, %83
  %199 = load i32, i32* %79, align 4
  br i1 %198, label %200, label %84

200:                                              ; preds = %190
  %201 = add nuw nsw i32 %100, 1
  %202 = load i32, i32* %54, align 8
  br label %96

203:                                              ; preds = %337
  %204 = icmp sgt i32 %339, 0
  %205 = select i1 %204, i32 %339, i32 0
  br label %206

206:                                              ; preds = %203, %56, %84, %87
  %207 = phi i32 [ 0, %87 ], [ 0, %84 ], [ 0, %56 ], [ %338, %203 ]
  %208 = phi i32* [ %79, %87 ], [ %79, %84 ], [ %57, %56 ], [ %79, %203 ]
  %209 = phi i32 [ 0, %87 ], [ 0, %84 ], [ 0, %56 ], [ %205, %203 ]
  %210 = load i32, i32* %54, align 8
  %211 = icmp slt i32 %210, 0
  br i1 %211, label %248, label %212, !prof !3

212:                                              ; preds = %206
  %213 = icmp ult i32 %210, %209
  br i1 %213, label %214, label %235, !prof !3

214:                                              ; preds = %212, %214
  %215 = phi i32 [ %218, %214 ], [ %210, %212 ]
  %216 = lshr i32 %215, 1
  %217 = add i32 %215, 8
  %218 = add i32 %217, %216
  %219 = icmp ugt i32 %218, %209
  br i1 %219, label %220, label %214

220:                                              ; preds = %214
  %221 = icmp uge i32 %218, %210
  %222 = icmp ult i32 %218, 268435455
  %223 = and i1 %221, %222
  br i1 %223, label %224, label %232, !prof !9

224:                                              ; preds = %220
  %225 = getelementptr inbounds %"struct.OT::name::accelerator_t", %"struct.OT::name::accelerator_t"* %0, i64 0, i32 3, i32 2
  %226 = bitcast %struct.hb_ot_name_entry_t** %225 to i8**
  %227 = load i8*, i8** %226, align 8
  %228 = zext i32 %218 to i64
  %229 = shl nuw nsw i64 %228, 4
  %230 = call i8* @realloc(i8* %227, i64 %229) #9
  %231 = icmp eq i8* %230, null
  br i1 %231, label %232, label %233, !prof !3

232:                                              ; preds = %224, %220
  store i32 -1, i32* %54, align 8
  br label %248

233:                                              ; preds = %224
  store i8* %230, i8** %226, align 8
  store i32 %218, i32* %54, align 8
  %234 = load i32, i32* %208, align 4
  br label %235

235:                                              ; preds = %233, %212
  %236 = phi i32 [ %234, %233 ], [ %207, %212 ]
  %237 = icmp ugt i32 %209, %236
  br i1 %237, label %238, label %247

238:                                              ; preds = %235
  %239 = getelementptr inbounds %"struct.OT::name::accelerator_t", %"struct.OT::name::accelerator_t"* %0, i64 0, i32 3, i32 2
  %240 = load %struct.hb_ot_name_entry_t*, %struct.hb_ot_name_entry_t** %239, align 8
  %241 = zext i32 %236 to i64
  %242 = getelementptr inbounds %struct.hb_ot_name_entry_t, %struct.hb_ot_name_entry_t* %240, i64 %241
  %243 = bitcast %struct.hb_ot_name_entry_t* %242 to i8*
  %244 = sub i32 %209, %236
  %245 = zext i32 %244 to i64
  %246 = shl nuw nsw i64 %245, 4
  call void @llvm.memset.p0i8.i64(i8* align 8 %243, i8 0, i64 %246, i1 false) #9
  br label %247

247:                                              ; preds = %238, %235
  store i32 %209, i32* %208, align 4
  br label %248

248:                                              ; preds = %206, %232, %247
  ret void

249:                                              ; preds = %94, %337
  %250 = phi i32 [ %92, %94 ], [ %338, %337 ]
  %251 = phi i64 [ 0, %94 ], [ %340, %337 ]
  %252 = phi i32 [ 0, %94 ], [ %339, %337 ]
  %253 = zext i32 %250 to i64
  %254 = icmp ult i64 %251, %253
  br i1 %254, label %256, label %255, !prof !2

255:                                              ; preds = %249
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 bitcast ([48 x i64]* @_hb_CrapPool to i8*), i8* align 16 bitcast ([48 x i64]* @_hb_NullPool to i8*), i64 16, i1 false) #9
  br label %259

256:                                              ; preds = %249
  %257 = load %struct.hb_ot_name_entry_t*, %struct.hb_ot_name_entry_t** %95, align 8
  %258 = getelementptr inbounds %struct.hb_ot_name_entry_t, %struct.hb_ot_name_entry_t* %257, i64 %251
  br label %259

259:                                              ; preds = %255, %256
  %260 = phi %struct.hb_ot_name_entry_t* [ bitcast ([48 x i64]* @_hb_CrapPool to %struct.hb_ot_name_entry_t*), %255 ], [ %258, %256 ]
  %261 = getelementptr inbounds %struct.hb_ot_name_entry_t, %struct.hb_ot_name_entry_t* %260, i64 0, i32 1
  %262 = bitcast %union._hb_var_int_t* %261 to i16*
  %263 = load i16, i16* %262, align 4
  %264 = icmp eq i16 %263, 42
  br i1 %264, label %337, label %265

265:                                              ; preds = %259
  br i1 %254, label %267, label %266, !prof !2

266:                                              ; preds = %265
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 bitcast ([48 x i64]* @_hb_CrapPool to i8*), i8* align 16 bitcast ([48 x i64]* @_hb_NullPool to i8*), i64 16, i1 false) #9
  br label %270

267:                                              ; preds = %265
  %268 = load %struct.hb_ot_name_entry_t*, %struct.hb_ot_name_entry_t** %95, align 8
  %269 = getelementptr inbounds %struct.hb_ot_name_entry_t, %struct.hb_ot_name_entry_t* %268, i64 %251
  br label %270

270:                                              ; preds = %266, %267
  %271 = phi %struct.hb_ot_name_entry_t* [ bitcast ([48 x i64]* @_hb_CrapPool to %struct.hb_ot_name_entry_t*), %266 ], [ %269, %267 ]
  %272 = getelementptr inbounds %struct.hb_ot_name_entry_t, %struct.hb_ot_name_entry_t* %271, i64 0, i32 2
  %273 = load %struct.hb_language_impl_t*, %struct.hb_language_impl_t** %272, align 8
  %274 = icmp eq %struct.hb_language_impl_t* %273, null
  br i1 %274, label %337, label %275

275:                                              ; preds = %270
  %276 = icmp eq i64 %251, 0
  br i1 %276, label %318, label %277

277:                                              ; preds = %275
  %278 = trunc i64 %251 to i32
  %279 = add i32 %278, -1
  %280 = icmp ugt i32 %250, %279
  br i1 %280, label %282, label %281, !prof !2

281:                                              ; preds = %277
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 bitcast ([48 x i64]* @_hb_CrapPool to i8*), i8* align 16 bitcast ([48 x i64]* @_hb_NullPool to i8*), i64 16, i1 false) #9
  br label %286

282:                                              ; preds = %277
  %283 = load %struct.hb_ot_name_entry_t*, %struct.hb_ot_name_entry_t** %95, align 8
  %284 = zext i32 %279 to i64
  %285 = getelementptr inbounds %struct.hb_ot_name_entry_t, %struct.hb_ot_name_entry_t* %283, i64 %284
  br label %286

286:                                              ; preds = %281, %282
  %287 = phi %struct.hb_ot_name_entry_t* [ bitcast ([48 x i64]* @_hb_CrapPool to %struct.hb_ot_name_entry_t*), %281 ], [ %285, %282 ]
  %288 = getelementptr inbounds %struct.hb_ot_name_entry_t, %struct.hb_ot_name_entry_t* %287, i64 0, i32 0
  %289 = load i32, i32* %288, align 8
  br i1 %254, label %291, label %290, !prof !2

290:                                              ; preds = %286
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 bitcast ([48 x i64]* @_hb_CrapPool to i8*), i8* align 16 bitcast ([48 x i64]* @_hb_NullPool to i8*), i64 16, i1 false) #9
  br label %294

291:                                              ; preds = %286
  %292 = load %struct.hb_ot_name_entry_t*, %struct.hb_ot_name_entry_t** %95, align 8
  %293 = getelementptr inbounds %struct.hb_ot_name_entry_t, %struct.hb_ot_name_entry_t* %292, i64 %251
  br label %294

294:                                              ; preds = %290, %291
  %295 = phi %struct.hb_ot_name_entry_t* [ bitcast ([48 x i64]* @_hb_CrapPool to %struct.hb_ot_name_entry_t*), %290 ], [ %293, %291 ]
  %296 = getelementptr inbounds %struct.hb_ot_name_entry_t, %struct.hb_ot_name_entry_t* %295, i64 0, i32 0
  %297 = load i32, i32* %296, align 8
  %298 = icmp eq i32 %289, %297
  br i1 %298, label %299, label %318

299:                                              ; preds = %294
  br i1 %280, label %301, label %300, !prof !2

300:                                              ; preds = %299
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 bitcast ([48 x i64]* @_hb_CrapPool to i8*), i8* align 16 bitcast ([48 x i64]* @_hb_NullPool to i8*), i64 16, i1 false) #9
  br label %305

301:                                              ; preds = %299
  %302 = load %struct.hb_ot_name_entry_t*, %struct.hb_ot_name_entry_t** %95, align 8
  %303 = zext i32 %279 to i64
  %304 = getelementptr inbounds %struct.hb_ot_name_entry_t, %struct.hb_ot_name_entry_t* %302, i64 %303
  br label %305

305:                                              ; preds = %300, %301
  %306 = phi %struct.hb_ot_name_entry_t* [ bitcast ([48 x i64]* @_hb_CrapPool to %struct.hb_ot_name_entry_t*), %300 ], [ %304, %301 ]
  %307 = getelementptr inbounds %struct.hb_ot_name_entry_t, %struct.hb_ot_name_entry_t* %306, i64 0, i32 2
  %308 = load %struct.hb_language_impl_t*, %struct.hb_language_impl_t** %307, align 8
  br i1 %254, label %310, label %309, !prof !2

309:                                              ; preds = %305
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 bitcast ([48 x i64]* @_hb_CrapPool to i8*), i8* align 16 bitcast ([48 x i64]* @_hb_NullPool to i8*), i64 16, i1 false) #9
  br label %313

310:                                              ; preds = %305
  %311 = load %struct.hb_ot_name_entry_t*, %struct.hb_ot_name_entry_t** %95, align 8
  %312 = getelementptr inbounds %struct.hb_ot_name_entry_t, %struct.hb_ot_name_entry_t* %311, i64 %251
  br label %313

313:                                              ; preds = %309, %310
  %314 = phi %struct.hb_ot_name_entry_t* [ bitcast ([48 x i64]* @_hb_CrapPool to %struct.hb_ot_name_entry_t*), %309 ], [ %312, %310 ]
  %315 = getelementptr inbounds %struct.hb_ot_name_entry_t, %struct.hb_ot_name_entry_t* %314, i64 0, i32 2
  %316 = load %struct.hb_language_impl_t*, %struct.hb_language_impl_t** %315, align 8
  %317 = icmp eq %struct.hb_language_impl_t* %308, %316
  br i1 %317, label %337, label %318

318:                                              ; preds = %275, %313, %294
  br i1 %254, label %320, label %319, !prof !2

319:                                              ; preds = %318
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 bitcast ([48 x i64]* @_hb_CrapPool to i8*), i8* align 16 bitcast ([48 x i64]* @_hb_NullPool to i8*), i64 16, i1 false) #9
  br label %323

320:                                              ; preds = %318
  %321 = load %struct.hb_ot_name_entry_t*, %struct.hb_ot_name_entry_t** %95, align 8
  %322 = getelementptr inbounds %struct.hb_ot_name_entry_t, %struct.hb_ot_name_entry_t* %321, i64 %251
  br label %323

323:                                              ; preds = %319, %320
  %324 = phi %struct.hb_ot_name_entry_t* [ bitcast ([48 x i64]* @_hb_CrapPool to %struct.hb_ot_name_entry_t*), %319 ], [ %322, %320 ]
  %325 = add i32 %252, 1
  %326 = icmp ugt i32 %250, %252
  br i1 %326, label %328, label %327, !prof !2

327:                                              ; preds = %323
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 bitcast ([48 x i64]* @_hb_CrapPool to i8*), i8* align 16 bitcast ([48 x i64]* @_hb_NullPool to i8*), i64 16, i1 false) #9
  br label %332

328:                                              ; preds = %323
  %329 = load %struct.hb_ot_name_entry_t*, %struct.hb_ot_name_entry_t** %95, align 8
  %330 = zext i32 %252 to i64
  %331 = getelementptr inbounds %struct.hb_ot_name_entry_t, %struct.hb_ot_name_entry_t* %329, i64 %330
  br label %332

332:                                              ; preds = %327, %328
  %333 = phi %struct.hb_ot_name_entry_t* [ bitcast ([48 x i64]* @_hb_CrapPool to %struct.hb_ot_name_entry_t*), %327 ], [ %331, %328 ]
  %334 = bitcast %struct.hb_ot_name_entry_t* %333 to i8*
  %335 = bitcast %struct.hb_ot_name_entry_t* %324 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %334, i8* align 8 %335, i64 16, i1 false)
  %336 = load i32, i32* %79, align 4
  br label %337

337:                                              ; preds = %313, %259, %270, %332
  %338 = phi i32 [ %250, %259 ], [ %250, %270 ], [ %250, %313 ], [ %336, %332 ]
  %339 = phi i32 [ %252, %259 ], [ %252, %270 ], [ %252, %313 ], [ %325, %332 ]
  %340 = add nuw nsw i64 %251, 1
  %341 = zext i32 %338 to i64
  %342 = icmp ult i64 %340, %341
  br i1 %342, label %249, label %203
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %struct.hb_language_impl_t* @_ZNK2OT10NameRecord8languageEP9hb_face_t(%"struct.OT::NameRecord"*, %struct.hb_face_t*) local_unnamed_addr #0 comdat align 2 {
  %3 = bitcast %"struct.OT::NameRecord"* %0 to i16*
  %4 = load i16, i16* %3, align 1
  %5 = tail call i16 @llvm.bswap.i16(i16 %4) #9
  %6 = getelementptr inbounds %"struct.OT::NameRecord", %"struct.OT::NameRecord"* %0, i64 0, i32 2
  %7 = bitcast %"struct.OT::IntType.141"* %6 to i16*
  %8 = load i16, i16* %7, align 1
  %9 = tail call i16 @llvm.bswap.i16(i16 %8) #9
  %10 = zext i16 %9 to i32
  switch i16 %5, label %58 [
    i16 3, label %11
    i16 1, label %13
    i16 0, label %15
  ]

11:                                               ; preds = %2
  %12 = tail call %struct.hb_language_impl_t* @_Z32_hb_ot_name_language_for_ms_codej(i32 %10) #9
  br label %58

13:                                               ; preds = %2
  %14 = tail call %struct.hb_language_impl_t* @_Z33_hb_ot_name_language_for_mac_codej(i32 %10) #9
  br label %58

15:                                               ; preds = %2
  %16 = getelementptr inbounds %struct.hb_face_t, %struct.hb_face_t* %1, i64 0, i32 8, i32 30, i32 0
  %17 = tail call %struct.hb_blob_t* @_ZNK16hb_lazy_loader_tIN3AAT4ltagE22hb_table_lazy_loader_tIS1_Lj30EE9hb_face_tLj30E9hb_blob_tE10get_storedEv(%struct.hb_lazy_loader_t.101* %16) #9
  %18 = getelementptr inbounds %struct.hb_blob_t, %struct.hb_blob_t* %17, i64 0, i32 1
  %19 = bitcast i8** %18 to %"struct.AAT::ltag"**
  %20 = load %"struct.AAT::ltag"*, %"struct.AAT::ltag"** %19, align 8
  %21 = getelementptr inbounds %struct.hb_blob_t, %struct.hb_blob_t* %17, i64 0, i32 2
  %22 = load i32, i32* %21, align 8
  %23 = icmp ult i32 %22, 12
  %24 = select i1 %23, %"struct.AAT::ltag"* bitcast ([48 x i64]* @_hb_NullPool to %"struct.AAT::ltag"*), %"struct.AAT::ltag"* %20
  %25 = getelementptr inbounds %"struct.AAT::ltag", %"struct.AAT::ltag"* %24, i64 0, i32 2, i32 0, i32 0, i32 0, i64 0
  %26 = load i8, i8* %25, align 1
  %27 = zext i8 %26 to i32
  %28 = shl nuw i32 %27, 24
  %29 = getelementptr inbounds %"struct.AAT::ltag", %"struct.AAT::ltag"* %24, i64 0, i32 2, i32 0, i32 0, i32 0, i64 1
  %30 = load i8, i8* %29, align 1
  %31 = zext i8 %30 to i32
  %32 = shl nuw nsw i32 %31, 16
  %33 = or i32 %32, %28
  %34 = getelementptr inbounds %"struct.AAT::ltag", %"struct.AAT::ltag"* %24, i64 0, i32 2, i32 0, i32 0, i32 0, i64 2
  %35 = load i8, i8* %34, align 1
  %36 = zext i8 %35 to i32
  %37 = shl nuw nsw i32 %36, 8
  %38 = or i32 %33, %37
  %39 = getelementptr inbounds %"struct.AAT::ltag", %"struct.AAT::ltag"* %24, i64 0, i32 2, i32 0, i32 0, i32 0, i64 3
  %40 = load i8, i8* %39, align 1
  %41 = zext i8 %40 to i32
  %42 = or i32 %38, %41
  %43 = icmp ugt i32 %42, %10
  %44 = zext i16 %9 to i64
  %45 = getelementptr inbounds %"struct.AAT::ltag", %"struct.AAT::ltag"* %24, i64 0, i32 2, i32 1, i64 %44
  %46 = select i1 %43, %"struct.AAT::FTStringRange"* %45, %"struct.AAT::FTStringRange"* bitcast ([48 x i64]* @_hb_NullPool to %"struct.AAT::FTStringRange"*), !prof !2
  %47 = bitcast %"struct.AAT::FTStringRange"* %46 to i16*
  %48 = load i16, i16* %47, align 1
  %49 = tail call i16 @llvm.bswap.i16(i16 %48) #9
  %50 = zext i16 %49 to i64
  %51 = getelementptr inbounds %"struct.AAT::ltag", %"struct.AAT::ltag"* %24, i64 0, i32 0, i32 0, i32 0, i64 %50
  %52 = getelementptr inbounds %"struct.AAT::FTStringRange", %"struct.AAT::FTStringRange"* %46, i64 0, i32 1
  %53 = bitcast %"struct.OT::IntType.141"* %52 to i16*
  %54 = load i16, i16* %53, align 1
  %55 = tail call i16 @llvm.bswap.i16(i16 %54) #9
  %56 = zext i16 %55 to i32
  %57 = tail call %struct.hb_language_impl_t* @hb_language_from_string(i8* %51, i32 %56) #9
  br label %58

58:                                               ; preds = %2, %15, %13, %11
  %59 = phi %struct.hb_language_impl_t* [ %12, %11 ], [ %14, %13 ], [ %57, %15 ], [ null, %2 ]
  ret %struct.hb_language_impl_t* %59
}

; Function Attrs: nounwind ssp uwtable
define internal i32 @_ZN2OTL21_hb_ot_name_entry_cmpEPKvS1_(i8* nocapture readonly, i8* nocapture readonly) #0 {
  %3 = bitcast i8* %0 to i32*
  %4 = load i32, i32* %3, align 8
  %5 = bitcast i8* %1 to i32*
  %6 = load i32, i32* %5, align 8
  %7 = icmp eq i32 %4, %6
  br i1 %7, label %10, label %8

8:                                                ; preds = %2
  %9 = sub i32 %4, %6
  br label %27

10:                                               ; preds = %2
  %11 = getelementptr inbounds i8, i8* %0, i64 8
  %12 = bitcast i8* %11 to %struct.hb_language_impl_t**
  %13 = load %struct.hb_language_impl_t*, %struct.hb_language_impl_t** %12, align 8
  %14 = getelementptr inbounds i8, i8* %1, i64 8
  %15 = bitcast i8* %14 to %struct.hb_language_impl_t**
  %16 = load %struct.hb_language_impl_t*, %struct.hb_language_impl_t** %15, align 8
  %17 = icmp eq %struct.hb_language_impl_t* %13, %16
  br i1 %17, label %30, label %18

18:                                               ; preds = %10
  %19 = icmp eq %struct.hb_language_impl_t* %13, null
  br i1 %19, label %54, label %20

20:                                               ; preds = %18
  %21 = icmp eq %struct.hb_language_impl_t* %16, null
  br i1 %21, label %54, label %22

22:                                               ; preds = %20
  %23 = tail call i8* @hb_language_to_string(%struct.hb_language_impl_t* nonnull %13) #9
  %24 = load %struct.hb_language_impl_t*, %struct.hb_language_impl_t** %15, align 8
  %25 = tail call i8* @hb_language_to_string(%struct.hb_language_impl_t* %24) #9
  %26 = tail call i32 @strcmp(i8* %23, i8* %25) #10
  br label %27

27:                                               ; preds = %8, %22
  %28 = phi i32 [ %9, %8 ], [ %26, %22 ]
  %29 = icmp eq i32 %28, 0
  br i1 %29, label %30, label %54

30:                                               ; preds = %10, %27
  %31 = getelementptr inbounds i8, i8* %0, i64 4
  %32 = bitcast i8* %31 to i16*
  %33 = load i16, i16* %32, align 4
  %34 = getelementptr inbounds i8, i8* %1, i64 4
  %35 = bitcast i8* %34 to i16*
  %36 = load i16, i16* %35, align 4
  %37 = icmp eq i16 %33, %36
  br i1 %37, label %42, label %38

38:                                               ; preds = %30
  %39 = zext i16 %33 to i32
  %40 = zext i16 %36 to i32
  %41 = sub nsw i32 %39, %40
  br label %54

42:                                               ; preds = %30
  %43 = getelementptr inbounds i8, i8* %0, i64 6
  %44 = bitcast i8* %43 to i16*
  %45 = load i16, i16* %44, align 2
  %46 = getelementptr inbounds i8, i8* %1, i64 6
  %47 = bitcast i8* %46 to i16*
  %48 = load i16, i16* %47, align 2
  %49 = icmp eq i16 %45, %48
  br i1 %49, label %54, label %50

50:                                               ; preds = %42
  %51 = zext i16 %45 to i32
  %52 = zext i16 %48 to i32
  %53 = sub nsw i32 %51, %52
  br label %54

54:                                               ; preds = %20, %18, %38, %50, %42, %27
  %55 = phi i32 [ %28, %27 ], [ %41, %38 ], [ %53, %50 ], [ 0, %42 ], [ 1, %20 ], [ -1, %18 ]
  ret i32 %55
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

declare i32 @hb_face_get_glyph_count(%struct.hb_face_t*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %struct.hb_blob_t* @_ZN21hb_sanitize_context_t13sanitize_blobIN2OT4nameEEEP9hb_blob_tS4_(%struct.hb_sanitize_context_t*, %struct.hb_blob_t*) local_unnamed_addr #0 comdat align 2 {
  %3 = tail call %struct.hb_blob_t* @hb_blob_reference(%struct.hb_blob_t* %1) #9
  %4 = getelementptr inbounds %struct.hb_sanitize_context_t, %struct.hb_sanitize_context_t* %0, i64 0, i32 9
  store %struct.hb_blob_t* %3, %struct.hb_blob_t** %4, align 8
  %5 = getelementptr inbounds %struct.hb_sanitize_context_t, %struct.hb_sanitize_context_t* %0, i64 0, i32 6
  %6 = getelementptr inbounds %struct.hb_sanitize_context_t, %struct.hb_sanitize_context_t* %0, i64 0, i32 2
  %7 = getelementptr inbounds %struct.hb_sanitize_context_t, %struct.hb_sanitize_context_t* %0, i64 0, i32 3
  %8 = getelementptr inbounds %struct.hb_sanitize_context_t, %struct.hb_sanitize_context_t* %0, i64 0, i32 4
  %9 = getelementptr inbounds %struct.hb_sanitize_context_t, %struct.hb_sanitize_context_t* %0, i64 0, i32 8
  %10 = getelementptr inbounds %struct.hb_sanitize_context_t, %struct.hb_sanitize_context_t* %0, i64 0, i32 0, i32 0
  %11 = getelementptr inbounds %struct.hb_blob_t, %struct.hb_blob_t* %1, i64 0, i32 2
  br label %12

12:                                               ; preds = %52, %2
  %13 = phi %struct.hb_blob_t* [ %3, %2 ], [ %58, %52 ]
  %14 = phi i8 [ 0, %2 ], [ 1, %52 ]
  store i8 %14, i8* %5, align 8
  %15 = getelementptr inbounds %struct.hb_blob_t, %struct.hb_blob_t* %13, i64 0, i32 1
  %16 = load i8*, i8** %15, align 8
  store i8* %16, i8** %6, align 8
  %17 = getelementptr inbounds %struct.hb_blob_t, %struct.hb_blob_t* %13, i64 0, i32 2
  %18 = load i32, i32* %17, align 8
  %19 = zext i32 %18 to i64
  %20 = getelementptr inbounds i8, i8* %16, i64 %19
  store i8* %20, i8** %7, align 8
  %21 = icmp ugt i32 %18, 67108862
  br i1 %21, label %28, label %22, !prof !3

22:                                               ; preds = %12
  %23 = shl i32 %18, 6
  %24 = icmp ugt i32 %23, 16384
  %25 = select i1 %24, i32 %23, i32 16384
  %26 = icmp ult i32 %25, 1073741823
  %27 = select i1 %26, i32 %25, i32 1073741823
  br label %28

28:                                               ; preds = %12, %22
  %29 = phi i32 [ %27, %22 ], [ 1073741823, %12 ]
  store i32 %29, i32* %8, align 8
  store i32 0, i32* %9, align 4
  store i32 0, i32* %10, align 8
  %30 = icmp eq i8* %16, null
  br i1 %30, label %31, label %33, !prof !3

31:                                               ; preds = %28
  tail call void @hb_blob_destroy(%struct.hb_blob_t* %13) #9
  store %struct.hb_blob_t* null, %struct.hb_blob_t** %4, align 8
  %32 = bitcast i8** %6 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %32, i8 0, i64 16, i1 false) #9
  br label %70

33:                                               ; preds = %28
  %34 = bitcast i8* %16 to %"struct.OT::name"*
  %35 = tail call zeroext i1 @_ZNK2OT4name8sanitizeEP21hb_sanitize_context_t(%"struct.OT::name"* nonnull %34, %struct.hb_sanitize_context_t* %0)
  %36 = load i32, i32* %9, align 4
  %37 = icmp ne i32 %36, 0
  br i1 %35, label %38, label %48

38:                                               ; preds = %33
  br i1 %37, label %39, label %59

39:                                               ; preds = %38
  %40 = bitcast i8* %16 to %"struct.OT::name"*
  store i32 0, i32* %9, align 4
  %41 = tail call zeroext i1 @_ZNK2OT4name8sanitizeEP21hb_sanitize_context_t(%"struct.OT::name"* nonnull %40, %struct.hb_sanitize_context_t* %0)
  %42 = load i32, i32* %9, align 4
  %43 = icmp ne i32 %42, 0
  %44 = load %struct.hb_blob_t*, %struct.hb_blob_t** %4, align 8
  tail call void @hb_blob_destroy(%struct.hb_blob_t* %44) #9
  store %struct.hb_blob_t* null, %struct.hb_blob_t** %4, align 8
  %45 = bitcast i8** %6 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %45, i8 0, i64 16, i1 false) #9
  %46 = xor i1 %41, true
  %47 = or i1 %43, %46
  br i1 %47, label %68, label %62

48:                                               ; preds = %33
  br i1 %37, label %49, label %63

49:                                               ; preds = %48
  %50 = load i8, i8* %5, align 8, !range !10
  %51 = icmp eq i8 %50, 0
  br i1 %51, label %52, label %63

52:                                               ; preds = %49
  %53 = tail call i8* @hb_blob_get_data_writable(%struct.hb_blob_t* %1, i32* null) #9
  store i8* %53, i8** %6, align 8
  %54 = load i32, i32* %11, align 8
  %55 = zext i32 %54 to i64
  %56 = getelementptr inbounds i8, i8* %53, i64 %55
  store i8* %56, i8** %7, align 8
  %57 = icmp eq i8* %53, null
  %58 = load %struct.hb_blob_t*, %struct.hb_blob_t** %4, align 8
  br i1 %57, label %65, label %12

59:                                               ; preds = %38
  %60 = load %struct.hb_blob_t*, %struct.hb_blob_t** %4, align 8
  tail call void @hb_blob_destroy(%struct.hb_blob_t* %60) #9
  store %struct.hb_blob_t* null, %struct.hb_blob_t** %4, align 8
  %61 = bitcast i8** %6 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %61, i8 0, i64 16, i1 false) #9
  br label %62

62:                                               ; preds = %39, %59
  tail call void @hb_blob_make_immutable(%struct.hb_blob_t* %1) #9
  br label %70

63:                                               ; preds = %48, %49
  %64 = load %struct.hb_blob_t*, %struct.hb_blob_t** %4, align 8
  br label %65

65:                                               ; preds = %52, %63
  %66 = phi %struct.hb_blob_t* [ %64, %63 ], [ %58, %52 ]
  tail call void @hb_blob_destroy(%struct.hb_blob_t* %66) #9
  store %struct.hb_blob_t* null, %struct.hb_blob_t** %4, align 8
  %67 = bitcast i8** %6 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %67, i8 0, i64 16, i1 false) #9
  br label %68

68:                                               ; preds = %65, %39
  tail call void @hb_blob_destroy(%struct.hb_blob_t* %1) #9
  %69 = tail call %struct.hb_blob_t* @hb_blob_get_empty() #9
  br label %70

70:                                               ; preds = %68, %62, %31
  %71 = phi %struct.hb_blob_t* [ %1, %31 ], [ %69, %68 ], [ %1, %62 ]
  ret %struct.hb_blob_t* %71
}

declare %struct.hb_blob_t* @hb_face_reference_table(%struct.hb_face_t*, i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK2OT4name8sanitizeEP21hb_sanitize_context_t(%"struct.OT::name"*, %struct.hb_sanitize_context_t*) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca i8*, align 8
  %4 = getelementptr inbounds %"struct.OT::name", %"struct.OT::name"* %0, i64 0, i32 0, i32 0, i32 0, i64 0
  %5 = getelementptr inbounds %struct.hb_sanitize_context_t, %struct.hb_sanitize_context_t* %1, i64 0, i32 2
  %6 = load i8*, i8** %5, align 8
  %7 = icmp ugt i8* %6, %4
  br i1 %7, label %78, label %8, !prof !3

8:                                                ; preds = %2
  %9 = getelementptr inbounds %struct.hb_sanitize_context_t, %struct.hb_sanitize_context_t* %1, i64 0, i32 3
  %10 = load i8*, i8** %9, align 8
  %11 = icmp ult i8* %10, %4
  br i1 %11, label %78, label %12, !prof !3

12:                                               ; preds = %8
  %13 = ptrtoint i8* %10 to i64
  %14 = ptrtoint %"struct.OT::name"* %0 to i64
  %15 = sub i64 %13, %14
  %16 = trunc i64 %15 to i32
  %17 = icmp ult i32 %16, 6
  br i1 %17, label %78, label %18, !prof !3

18:                                               ; preds = %12
  %19 = getelementptr inbounds %struct.hb_sanitize_context_t, %struct.hb_sanitize_context_t* %1, i64 0, i32 4
  %20 = load i32, i32* %19, align 8
  %21 = add i32 %20, -6
  store i32 %21, i32* %19, align 8
  %22 = icmp sgt i32 %21, 0
  br i1 %22, label %23, label %78

23:                                               ; preds = %18
  %24 = bitcast %"struct.OT::name"* %0 to i16*
  %25 = load i16, i16* %24, align 1
  %26 = tail call i16 @llvm.bswap.i16(i16 %25) #9
  %27 = icmp ult i16 %26, 2
  br i1 %27, label %28, label %78, !prof !11

28:                                               ; preds = %23
  %29 = getelementptr inbounds %"struct.OT::name", %"struct.OT::name"* %0, i64 0, i32 3, i32 0, i64 0
  %30 = getelementptr inbounds %"struct.OT::name", %"struct.OT::name"* %0, i64 0, i32 1
  %31 = bitcast %"struct.OT::IntType.141"* %30 to i16*
  %32 = load i16, i16* %31, align 1
  %33 = tail call i16 @llvm.bswap.i16(i16 %32) #9
  %34 = zext i16 %33 to i32
  %35 = getelementptr inbounds %"struct.OT::NameRecord", %"struct.OT::NameRecord"* %29, i64 0, i32 0, i32 0, i32 0, i64 0
  %36 = mul nuw nsw i32 %34, 12
  %37 = icmp eq i16 %32, 0
  br i1 %37, label %50, label %38

38:                                               ; preds = %28
  %39 = icmp ugt i8* %6, %35
  %40 = icmp ult i8* %10, %35
  %41 = or i1 %39, %40
  br i1 %41, label %78, label %42, !prof !12

42:                                               ; preds = %38
  %43 = ptrtoint %"struct.OT::NameRecord"* %29 to i64
  %44 = sub i64 %13, %43
  %45 = trunc i64 %44 to i32
  %46 = icmp ugt i32 %36, %45
  br i1 %46, label %78, label %47, !prof !3

47:                                               ; preds = %42
  %48 = sub nsw i32 %21, %36
  store i32 %48, i32* %19, align 8
  %49 = icmp sgt i32 %48, 0
  br i1 %49, label %50, label %78

50:                                               ; preds = %28, %47
  %51 = phi i32 [ %21, %28 ], [ %48, %47 ]
  %52 = getelementptr inbounds %"struct.OT::name", %"struct.OT::name"* %0, i64 0, i32 2, i32 0, i32 0
  %53 = bitcast %"struct.OT::IntType.141"* %52 to i16*
  %54 = load i16, i16* %53, align 1
  %55 = tail call i16 @llvm.bswap.i16(i16 %54) #9
  %56 = zext i16 %55 to i32
  %57 = icmp eq i16 %54, 0
  br i1 %57, label %67, label %58

58:                                               ; preds = %50
  %59 = icmp ult i32 %16, %56
  br i1 %59, label %78, label %60, !prof !3

60:                                               ; preds = %58
  %61 = sub nsw i32 %51, %56
  store i32 %61, i32* %19, align 8
  %62 = icmp sgt i32 %61, 0
  br i1 %62, label %63, label %78

63:                                               ; preds = %60
  %64 = getelementptr inbounds %"struct.OT::name", %"struct.OT::name"* %0, i64 0, i32 2
  %65 = bitcast %"struct.OT::OffsetTo"* %64 to i16*
  %66 = load i16, i16* %65, align 1
  br label %67

67:                                               ; preds = %50, %63
  %68 = phi i16 [ %66, %63 ], [ 0, %50 ]
  %69 = bitcast i8** %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %69) #9
  %70 = tail call i16 @llvm.bswap.i16(i16 %68) #9
  %71 = zext i16 %70 to i64
  %72 = getelementptr inbounds %"struct.OT::name", %"struct.OT::name"* %0, i64 0, i32 0, i32 0, i32 0, i64 %71
  store i8* %72, i8** %3, align 8
  %73 = getelementptr inbounds %"struct.OT::name", %"struct.OT::name"* %0, i64 0, i32 3
  %74 = load i16, i16* %31, align 1
  %75 = tail call i16 @llvm.bswap.i16(i16 %74) #9
  %76 = zext i16 %75 to i32
  %77 = call zeroext i1 @_ZNK2OT14UnsizedArrayOfINS_10NameRecordEE8sanitizeIJRPKvEEEbP21hb_sanitize_context_tjDpOT_(%"struct.OT::UnsizedArrayOf.143"* %73, %struct.hb_sanitize_context_t* %1, i32 %76, i8** nonnull dereferenceable(8) %3) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %69) #9
  br label %78

78:                                               ; preds = %23, %58, %38, %42, %2, %8, %12, %67, %60, %47, %18
  %79 = phi i1 [ false, %60 ], [ false, %47 ], [ false, %18 ], [ %77, %67 ], [ false, %12 ], [ false, %8 ], [ false, %2 ], [ false, %42 ], [ false, %38 ], [ false, %58 ], [ false, %23 ]
  ret i1 %79
}

declare i8* @hb_blob_get_data_writable(%struct.hb_blob_t*, i32*) local_unnamed_addr #3

declare void @hb_blob_make_immutable(%struct.hb_blob_t*) local_unnamed_addr #3

declare void @hb_blob_destroy(%struct.hb_blob_t*) local_unnamed_addr #3

declare %struct.hb_blob_t* @hb_blob_get_empty() local_unnamed_addr #3

declare %struct.hb_blob_t* @hb_blob_reference(%struct.hb_blob_t*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK2OT14UnsizedArrayOfINS_10NameRecordEE8sanitizeIJRPKvEEEbP21hb_sanitize_context_tjDpOT_(%"struct.OT::UnsizedArrayOf.143"*, %struct.hb_sanitize_context_t*, i32, i8** dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %5 = icmp ult i32 %2, 357913941
  br i1 %5, label %6, label %97, !prof !13

6:                                                ; preds = %4
  %7 = getelementptr inbounds %"struct.OT::UnsizedArrayOf.143", %"struct.OT::UnsizedArrayOf.143"* %0, i64 0, i32 0, i64 0, i32 0, i32 0, i32 0, i64 0
  %8 = mul i32 %2, 12
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %29, label %10

10:                                               ; preds = %6
  %11 = getelementptr inbounds %struct.hb_sanitize_context_t, %struct.hb_sanitize_context_t* %1, i64 0, i32 2
  %12 = load i8*, i8** %11, align 8
  %13 = icmp ugt i8* %12, %7
  br i1 %13, label %97, label %14, !prof !3

14:                                               ; preds = %10
  %15 = getelementptr inbounds %struct.hb_sanitize_context_t, %struct.hb_sanitize_context_t* %1, i64 0, i32 3
  %16 = load i8*, i8** %15, align 8
  %17 = icmp ult i8* %16, %7
  br i1 %17, label %97, label %18, !prof !3

18:                                               ; preds = %14
  %19 = ptrtoint i8* %16 to i64
  %20 = ptrtoint %"struct.OT::UnsizedArrayOf.143"* %0 to i64
  %21 = sub i64 %19, %20
  %22 = trunc i64 %21 to i32
  %23 = icmp ugt i32 %8, %22
  br i1 %23, label %97, label %24, !prof !3

24:                                               ; preds = %18
  %25 = getelementptr inbounds %struct.hb_sanitize_context_t, %struct.hb_sanitize_context_t* %1, i64 0, i32 4
  %26 = load i32, i32* %25, align 8
  %27 = sub i32 %26, %8
  store i32 %27, i32* %25, align 8
  %28 = icmp sgt i32 %27, 0
  br i1 %28, label %29, label %97, !prof !2

29:                                               ; preds = %24, %6
  %30 = getelementptr inbounds %struct.hb_sanitize_context_t, %struct.hb_sanitize_context_t* %1, i64 0, i32 3
  %31 = getelementptr inbounds %struct.hb_sanitize_context_t, %struct.hb_sanitize_context_t* %1, i64 0, i32 4
  %32 = icmp eq i32 %2, 0
  br i1 %32, label %97, label %33

33:                                               ; preds = %29
  %34 = getelementptr inbounds %struct.hb_sanitize_context_t, %struct.hb_sanitize_context_t* %1, i64 0, i32 2
  %35 = zext i32 %2 to i64
  %36 = load i8*, i8** %34, align 8
  br label %37

37:                                               ; preds = %94, %33
  %38 = phi i64 [ 0, %33 ], [ %95, %94 ]
  %39 = getelementptr inbounds %"struct.OT::UnsizedArrayOf.143", %"struct.OT::UnsizedArrayOf.143"* %0, i64 0, i32 0, i64 %38
  %40 = load i8*, i8** %3, align 8
  %41 = getelementptr inbounds %"struct.OT::NameRecord", %"struct.OT::NameRecord"* %39, i64 0, i32 0, i32 0, i32 0, i64 0
  %42 = icmp ugt i8* %36, %41
  br i1 %42, label %97, label %43, !prof !3

43:                                               ; preds = %37
  %44 = load i8*, i8** %30, align 8
  %45 = icmp ult i8* %44, %41
  br i1 %45, label %97, label %46, !prof !3

46:                                               ; preds = %43
  %47 = ptrtoint i8* %44 to i64
  %48 = ptrtoint %"struct.OT::NameRecord"* %39 to i64
  %49 = sub i64 %47, %48
  %50 = trunc i64 %49 to i32
  %51 = icmp ult i32 %50, 12
  br i1 %51, label %97, label %52, !prof !3

52:                                               ; preds = %46
  %53 = load i32, i32* %31, align 8
  %54 = add i32 %53, -12
  store i32 %54, i32* %31, align 8
  %55 = icmp sgt i32 %54, 0
  br i1 %55, label %56, label %97, !prof !13

56:                                               ; preds = %52
  %57 = getelementptr inbounds %"struct.OT::UnsizedArrayOf.143", %"struct.OT::UnsizedArrayOf.143"* %0, i64 0, i32 0, i64 %38, i32 5
  %58 = getelementptr inbounds %"struct.OT::UnsizedArrayOf.143", %"struct.OT::UnsizedArrayOf.143"* %0, i64 0, i32 0, i64 %38, i32 4
  %59 = getelementptr inbounds %"struct.OT::OffsetTo", %"struct.OT::OffsetTo"* %57, i64 0, i32 0, i32 0, i32 0, i32 0, i64 0
  %60 = icmp ugt i8* %36, %59
  %61 = icmp ult i8* %44, %59
  %62 = or i1 %60, %61
  br i1 %62, label %97, label %63, !prof !12

63:                                               ; preds = %56
  %64 = ptrtoint %"struct.OT::OffsetTo"* %57 to i64
  %65 = sub i64 %47, %64
  %66 = trunc i64 %65 to i32
  %67 = icmp ult i32 %66, 2
  br i1 %67, label %97, label %68, !prof !3

68:                                               ; preds = %63
  %69 = add i32 %53, -14
  store i32 %69, i32* %31, align 8
  %70 = icmp sgt i32 %69, 0
  br i1 %70, label %71, label %97, !prof !13

71:                                               ; preds = %68
  %72 = bitcast %"struct.OT::OffsetTo"* %57 to i16*
  %73 = load i16, i16* %72, align 1
  %74 = tail call i16 @llvm.bswap.i16(i16 %73) #9
  %75 = zext i16 %74 to i64
  %76 = getelementptr inbounds i8, i8* %40, i64 %75
  %77 = bitcast %"struct.OT::IntType.141"* %58 to i16*
  %78 = load i16, i16* %77, align 1
  %79 = tail call i16 @llvm.bswap.i16(i16 %78) #9
  %80 = zext i16 %79 to i32
  %81 = icmp eq i16 %78, 0
  br i1 %81, label %94, label %82

82:                                               ; preds = %71
  %83 = icmp ugt i8* %36, %76
  %84 = icmp ult i8* %44, %76
  %85 = or i1 %83, %84
  br i1 %85, label %97, label %86, !prof !12

86:                                               ; preds = %82
  %87 = ptrtoint i8* %76 to i64
  %88 = sub i64 %47, %87
  %89 = trunc i64 %88 to i32
  %90 = icmp ult i32 %89, %80
  br i1 %90, label %97, label %91, !prof !3

91:                                               ; preds = %86
  %92 = sub nsw i32 %69, %80
  store i32 %92, i32* %31, align 8
  %93 = icmp sgt i32 %92, 0
  br i1 %93, label %94, label %97, !prof !2

94:                                               ; preds = %91, %71
  %95 = add nuw nsw i64 %38, 1
  %96 = icmp eq i64 %95, %35
  br i1 %96, label %97, label %37

97:                                               ; preds = %52, %46, %43, %37, %68, %63, %56, %91, %86, %82, %94, %29, %10, %14, %18, %4, %24
  %98 = phi i1 [ false, %24 ], [ false, %4 ], [ false, %18 ], [ false, %14 ], [ false, %10 ], [ true, %29 ], [ true, %94 ], [ false, %52 ], [ false, %46 ], [ false, %43 ], [ false, %37 ], [ false, %68 ], [ false, %63 ], [ false, %56 ], [ false, %91 ], [ false, %86 ], [ false, %82 ]
  ret i1 %98
}

; Function Attrs: nounwind readnone speculatable
declare i16 @llvm.bswap.i16(i16) #4

; Function Attrs: nounwind
declare noalias i8* @realloc(i8* nocapture, i64) local_unnamed_addr #5

declare hidden %struct.hb_language_impl_t* @_Z32_hb_ot_name_language_for_ms_codej(i32) local_unnamed_addr #3

declare hidden %struct.hb_language_impl_t* @_Z33_hb_ot_name_language_for_mac_codej(i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %struct.hb_blob_t* @_ZNK16hb_lazy_loader_tIN3AAT4ltagE22hb_table_lazy_loader_tIS1_Lj30EE9hb_face_tLj30E9hb_blob_tE10get_storedEv(%struct.hb_lazy_loader_t.101*) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %struct.hb_sanitize_context_t, align 8
  %3 = bitcast %struct.hb_lazy_loader_t.101* %0 to i64*
  %4 = load atomic i64, i64* %3 acquire, align 8
  %5 = inttoptr i64 %4 to %struct.hb_blob_t*
  %6 = icmp eq i64 %4, 0
  br i1 %6, label %7, label %46, !prof !3

7:                                                ; preds = %1
  %8 = getelementptr inbounds %struct.hb_lazy_loader_t.101, %struct.hb_lazy_loader_t.101* %0, i64 -30
  %9 = bitcast %struct.hb_lazy_loader_t.101* %8 to %struct.hb_face_t**
  %10 = bitcast %struct.hb_sanitize_context_t* %2 to i8*
  %11 = getelementptr inbounds %struct.hb_sanitize_context_t, %struct.hb_sanitize_context_t* %2, i64 0, i32 0, i32 0
  %12 = getelementptr inbounds %struct.hb_sanitize_context_t, %struct.hb_sanitize_context_t* %2, i64 0, i32 2
  %13 = getelementptr inbounds %struct.hb_sanitize_context_t, %struct.hb_sanitize_context_t* %2, i64 0, i32 8
  %14 = getelementptr inbounds %struct.hb_sanitize_context_t, %struct.hb_sanitize_context_t* %2, i64 0, i32 9
  %15 = getelementptr inbounds %struct.hb_sanitize_context_t, %struct.hb_sanitize_context_t* %2, i64 0, i32 10
  %16 = bitcast i8** %12 to i8*
  %17 = getelementptr inbounds %struct.hb_sanitize_context_t, %struct.hb_sanitize_context_t* %2, i64 0, i32 11
  br label %18

18:                                               ; preds = %7, %41
  %19 = load %struct.hb_face_t*, %struct.hb_face_t** %9, align 8
  %20 = icmp eq %struct.hb_face_t* %19, null
  br i1 %20, label %21, label %23, !prof !3

21:                                               ; preds = %18
  %22 = call %struct.hb_blob_t* @hb_blob_get_empty() #9
  br label %46

23:                                               ; preds = %18
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %10) #9
  store i32 0, i32* %11, align 8
  store i32 0, i32* %13, align 4
  store %struct.hb_blob_t* null, %struct.hb_blob_t** %14, align 8
  call void @llvm.memset.p0i8.i64(i8* align 8 %16, i8 0, i64 25, i1 false) #9
  %24 = call i32 @hb_face_get_glyph_count(%struct.hb_face_t* nonnull %19) #9
  store i32 %24, i32* %15, align 8
  store i8 1, i8* %17, align 4
  %25 = call %struct.hb_blob_t* @hb_face_reference_table(%struct.hb_face_t* nonnull %19, i32 1819566439) #9
  %26 = call %struct.hb_blob_t* @_ZN21hb_sanitize_context_t13sanitize_blobIN3AAT4ltagEEEP9hb_blob_tS4_(%struct.hb_sanitize_context_t* nonnull %2, %struct.hb_blob_t* %25) #9
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %10) #9
  %27 = icmp eq %struct.hb_blob_t* %26, null
  br i1 %27, label %28, label %30, !prof !3

28:                                               ; preds = %23
  %29 = call %struct.hb_blob_t* @hb_blob_get_empty() #9
  br label %30

30:                                               ; preds = %28, %23
  %31 = phi %struct.hb_blob_t* [ %29, %28 ], [ %26, %23 ]
  %32 = ptrtoint %struct.hb_blob_t* %31 to i64
  %33 = cmpxchg weak i64* %3, i64 0, i64 %32 acq_rel monotonic
  %34 = extractvalue { i64, i1 } %33, 1
  br i1 %34, label %46, label %35, !prof !2

35:                                               ; preds = %30
  %36 = icmp eq %struct.hb_blob_t* %31, null
  br i1 %36, label %41, label %37

37:                                               ; preds = %35
  %38 = call %struct.hb_blob_t* @hb_blob_get_empty() #9
  %39 = icmp eq %struct.hb_blob_t* %38, %31
  br i1 %39, label %41, label %40

40:                                               ; preds = %37
  call void @hb_blob_destroy(%struct.hb_blob_t* nonnull %31) #9
  br label %41

41:                                               ; preds = %40, %37, %35
  %42 = load atomic i64, i64* %3 acquire, align 8
  %43 = icmp eq i64 %42, 0
  br i1 %43, label %18, label %44, !prof !3

44:                                               ; preds = %41
  %45 = inttoptr i64 %42 to %struct.hb_blob_t*
  br label %46

46:                                               ; preds = %30, %1, %44, %21
  %47 = phi %struct.hb_blob_t* [ %22, %21 ], [ %45, %44 ], [ %5, %1 ], [ %31, %30 ]
  ret %struct.hb_blob_t* %47
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %struct.hb_blob_t* @_ZN21hb_sanitize_context_t13sanitize_blobIN3AAT4ltagEEEP9hb_blob_tS4_(%struct.hb_sanitize_context_t*, %struct.hb_blob_t*) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"struct.AAT::ltag"*, align 8
  %4 = alloca %"struct.AAT::ltag"*, align 8
  %5 = tail call %struct.hb_blob_t* @hb_blob_reference(%struct.hb_blob_t* %1) #9
  %6 = getelementptr inbounds %struct.hb_sanitize_context_t, %struct.hb_sanitize_context_t* %0, i64 0, i32 9
  store %struct.hb_blob_t* %5, %struct.hb_blob_t** %6, align 8
  %7 = getelementptr inbounds %struct.hb_sanitize_context_t, %struct.hb_sanitize_context_t* %0, i64 0, i32 6
  %8 = getelementptr inbounds %struct.hb_sanitize_context_t, %struct.hb_sanitize_context_t* %0, i64 0, i32 2
  %9 = getelementptr inbounds %struct.hb_sanitize_context_t, %struct.hb_sanitize_context_t* %0, i64 0, i32 3
  %10 = getelementptr inbounds %struct.hb_sanitize_context_t, %struct.hb_sanitize_context_t* %0, i64 0, i32 4
  %11 = getelementptr inbounds %struct.hb_sanitize_context_t, %struct.hb_sanitize_context_t* %0, i64 0, i32 8
  %12 = getelementptr inbounds %struct.hb_sanitize_context_t, %struct.hb_sanitize_context_t* %0, i64 0, i32 0, i32 0
  %13 = bitcast %"struct.AAT::ltag"** %4 to i8*
  %14 = bitcast %"struct.AAT::ltag"** %4 to i8**
  %15 = getelementptr inbounds %struct.hb_blob_t, %struct.hb_blob_t* %1, i64 0, i32 2
  br label %16

16:                                               ; preds = %123, %2
  %17 = phi %struct.hb_blob_t* [ %5, %2 ], [ %129, %123 ]
  %18 = phi i8 [ 0, %2 ], [ 1, %123 ]
  store i8 %18, i8* %7, align 8
  %19 = getelementptr inbounds %struct.hb_blob_t, %struct.hb_blob_t* %17, i64 0, i32 1
  %20 = load i8*, i8** %19, align 8
  store i8* %20, i8** %8, align 8
  %21 = getelementptr inbounds %struct.hb_blob_t, %struct.hb_blob_t* %17, i64 0, i32 2
  %22 = load i32, i32* %21, align 8
  %23 = zext i32 %22 to i64
  %24 = getelementptr inbounds i8, i8* %20, i64 %23
  store i8* %24, i8** %9, align 8
  %25 = icmp ugt i32 %22, 67108862
  br i1 %25, label %32, label %26, !prof !3

26:                                               ; preds = %16
  %27 = shl i32 %22, 6
  %28 = icmp ugt i32 %27, 16384
  %29 = select i1 %28, i32 %27, i32 16384
  %30 = icmp ult i32 %29, 1073741823
  %31 = select i1 %30, i32 %29, i32 1073741823
  br label %32

32:                                               ; preds = %16, %26
  %33 = phi i32 [ %31, %26 ], [ 1073741823, %16 ]
  store i32 %33, i32* %10, align 8
  store i32 0, i32* %11, align 4
  store i32 0, i32* %12, align 8
  %34 = icmp eq i8* %20, null
  br i1 %34, label %35, label %37, !prof !3

35:                                               ; preds = %32
  call void @hb_blob_destroy(%struct.hb_blob_t* %17) #9
  store %struct.hb_blob_t* null, %struct.hb_blob_t** %6, align 8
  %36 = bitcast i8** %8 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %36, i8 0, i64 16, i1 false) #9
  br label %144

37:                                               ; preds = %32
  %38 = icmp ult i32 %22, 12
  br i1 %38, label %39, label %40, !prof !3

39:                                               ; preds = %37
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %13) #9
  br label %138

40:                                               ; preds = %37
  %41 = add nsw i32 %33, -12
  store i32 %41, i32* %10, align 8
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %13) #9
  %42 = load i8, i8* %20, align 1
  %43 = zext i8 %42 to i32
  %44 = shl nuw i32 %43, 24
  %45 = getelementptr inbounds i8, i8* %20, i64 1
  %46 = load i8, i8* %45, align 1
  %47 = zext i8 %46 to i32
  %48 = shl nuw nsw i32 %47, 16
  %49 = or i32 %48, %44
  %50 = getelementptr inbounds i8, i8* %20, i64 2
  %51 = load i8, i8* %50, align 1
  %52 = zext i8 %51 to i32
  %53 = shl nuw nsw i32 %52, 8
  %54 = or i32 %49, %53
  %55 = getelementptr inbounds i8, i8* %20, i64 3
  %56 = load i8, i8* %55, align 1
  %57 = zext i8 %56 to i32
  %58 = or i32 %54, %57
  %59 = icmp eq i32 %58, 0
  br i1 %59, label %138, label %60, !prof !3

60:                                               ; preds = %40
  %61 = getelementptr inbounds i8, i8* %20, i64 8
  %62 = bitcast i8* %61 to %"struct.OT::ArrayOf"*
  store i8* %20, i8** %14, align 8
  %63 = call zeroext i1 @_ZNK2OT7ArrayOfIN3AAT13FTStringRangeENS_7IntTypeIjLj4EEEE8sanitizeIJPKNS1_4ltagEEEEbP21hb_sanitize_context_tDpOT_(%"struct.OT::ArrayOf"* %62, %struct.hb_sanitize_context_t* %0, %"struct.AAT::ltag"** nonnull dereferenceable(8) %4) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %13) #9
  %64 = load i32, i32* %11, align 4
  %65 = icmp ne i32 %64, 0
  br i1 %63, label %66, label %119

66:                                               ; preds = %60
  %67 = getelementptr inbounds i8, i8* %20, i64 1
  %68 = getelementptr inbounds i8, i8* %20, i64 2
  %69 = getelementptr inbounds i8, i8* %20, i64 3
  %70 = bitcast i8* %61 to %"struct.OT::ArrayOf"*
  br i1 %65, label %71, label %130

71:                                               ; preds = %66
  store i32 0, i32* %11, align 4
  %72 = load i8*, i8** %8, align 8
  %73 = icmp ugt i8* %72, %20
  br i1 %73, label %83, label %74, !prof !3

74:                                               ; preds = %71
  %75 = load i8*, i8** %9, align 8
  %76 = icmp ult i8* %75, %20
  br i1 %76, label %83, label %77, !prof !3

77:                                               ; preds = %74
  %78 = ptrtoint i8* %75 to i64
  %79 = ptrtoint i8* %20 to i64
  %80 = sub i64 %78, %79
  %81 = trunc i64 %80 to i32
  %82 = icmp ult i32 %81, 12
  br i1 %82, label %83, label %85, !prof !3

83:                                               ; preds = %77, %74, %71
  %84 = bitcast %"struct.AAT::ltag"** %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %84) #9
  br label %112

85:                                               ; preds = %77
  %86 = load i32, i32* %10, align 8
  %87 = add i32 %86, -12
  store i32 %87, i32* %10, align 8
  %88 = icmp sgt i32 %87, 0
  %89 = bitcast %"struct.AAT::ltag"** %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %89) #9
  br i1 %88, label %90, label %112, !prof !2

90:                                               ; preds = %85
  %91 = load i8, i8* %20, align 1
  %92 = zext i8 %91 to i32
  %93 = shl nuw i32 %92, 24
  %94 = load i8, i8* %67, align 1
  %95 = zext i8 %94 to i32
  %96 = shl nuw nsw i32 %95, 16
  %97 = or i32 %96, %93
  %98 = load i8, i8* %68, align 1
  %99 = zext i8 %98 to i32
  %100 = shl nuw nsw i32 %99, 8
  %101 = or i32 %97, %100
  %102 = load i8, i8* %69, align 1
  %103 = zext i8 %102 to i32
  %104 = or i32 %101, %103
  %105 = icmp eq i32 %104, 0
  br i1 %105, label %112, label %106, !prof !3

106:                                              ; preds = %90
  %107 = bitcast %"struct.AAT::ltag"** %3 to i8**
  store i8* %20, i8** %107, align 8
  %108 = call zeroext i1 @_ZNK2OT7ArrayOfIN3AAT13FTStringRangeENS_7IntTypeIjLj4EEEE8sanitizeIJPKNS1_4ltagEEEEbP21hb_sanitize_context_tDpOT_(%"struct.OT::ArrayOf"* %70, %struct.hb_sanitize_context_t* %0, %"struct.AAT::ltag"** nonnull dereferenceable(8) %3) #9
  %109 = xor i1 %108, true
  %110 = load i32, i32* %11, align 4
  %111 = icmp ne i32 %110, 0
  br label %112

112:                                              ; preds = %83, %85, %90, %106
  %113 = phi i1 [ false, %90 ], [ false, %85 ], [ %111, %106 ], [ false, %83 ]
  %114 = phi i8* [ %89, %90 ], [ %89, %85 ], [ %89, %106 ], [ %84, %83 ]
  %115 = phi i1 [ true, %90 ], [ true, %85 ], [ %109, %106 ], [ true, %83 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %114) #9
  %116 = load %struct.hb_blob_t*, %struct.hb_blob_t** %6, align 8
  call void @hb_blob_destroy(%struct.hb_blob_t* %116) #9
  store %struct.hb_blob_t* null, %struct.hb_blob_t** %6, align 8
  %117 = bitcast i8** %8 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %117, i8 0, i64 16, i1 false) #9
  %118 = or i1 %115, %113
  br i1 %118, label %142, label %133

119:                                              ; preds = %60
  br i1 %65, label %120, label %136

120:                                              ; preds = %119
  %121 = load i8, i8* %7, align 8, !range !10
  %122 = icmp eq i8 %121, 0
  br i1 %122, label %123, label %134

123:                                              ; preds = %120
  %124 = call i8* @hb_blob_get_data_writable(%struct.hb_blob_t* %1, i32* null) #9
  store i8* %124, i8** %8, align 8
  %125 = load i32, i32* %15, align 8
  %126 = zext i32 %125 to i64
  %127 = getelementptr inbounds i8, i8* %124, i64 %126
  store i8* %127, i8** %9, align 8
  %128 = icmp eq i8* %124, null
  %129 = load %struct.hb_blob_t*, %struct.hb_blob_t** %6, align 8
  br i1 %128, label %139, label %16

130:                                              ; preds = %66
  %131 = load %struct.hb_blob_t*, %struct.hb_blob_t** %6, align 8
  call void @hb_blob_destroy(%struct.hb_blob_t* %131) #9
  store %struct.hb_blob_t* null, %struct.hb_blob_t** %6, align 8
  %132 = bitcast i8** %8 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %132, i8 0, i64 16, i1 false) #9
  br label %133

133:                                              ; preds = %112, %130
  call void @hb_blob_make_immutable(%struct.hb_blob_t* %1) #9
  br label %144

134:                                              ; preds = %120
  %135 = load %struct.hb_blob_t*, %struct.hb_blob_t** %6, align 8
  br label %139

136:                                              ; preds = %119
  %137 = load %struct.hb_blob_t*, %struct.hb_blob_t** %6, align 8
  br label %139

138:                                              ; preds = %40, %39
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %13) #9
  br label %139

139:                                              ; preds = %123, %134, %136, %138
  %140 = phi %struct.hb_blob_t* [ %17, %138 ], [ %137, %136 ], [ %135, %134 ], [ %129, %123 ]
  call void @hb_blob_destroy(%struct.hb_blob_t* %140) #9
  store %struct.hb_blob_t* null, %struct.hb_blob_t** %6, align 8
  %141 = bitcast i8** %8 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %141, i8 0, i64 16, i1 false) #9
  br label %142

142:                                              ; preds = %139, %112
  call void @hb_blob_destroy(%struct.hb_blob_t* %1) #9
  %143 = call %struct.hb_blob_t* @hb_blob_get_empty() #9
  br label %144

144:                                              ; preds = %142, %133, %35
  %145 = phi %struct.hb_blob_t* [ %1, %35 ], [ %143, %142 ], [ %1, %133 ]
  ret %struct.hb_blob_t* %145
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK2OT7ArrayOfIN3AAT13FTStringRangeENS_7IntTypeIjLj4EEEE8sanitizeIJPKNS1_4ltagEEEEbP21hb_sanitize_context_tDpOT_(%"struct.OT::ArrayOf"*, %struct.hb_sanitize_context_t*, %"struct.AAT::ltag"** dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"struct.OT::ArrayOf", %"struct.OT::ArrayOf"* %0, i64 0, i32 0, i32 0, i32 0, i64 0
  %5 = getelementptr inbounds %struct.hb_sanitize_context_t, %struct.hb_sanitize_context_t* %1, i64 0, i32 2
  %6 = load i8*, i8** %5, align 8
  %7 = icmp ugt i8* %6, %4
  br i1 %7, label %126, label %8, !prof !3

8:                                                ; preds = %3
  %9 = getelementptr inbounds %struct.hb_sanitize_context_t, %struct.hb_sanitize_context_t* %1, i64 0, i32 3
  %10 = load i8*, i8** %9, align 8
  %11 = icmp ult i8* %10, %4
  br i1 %11, label %126, label %12, !prof !3

12:                                               ; preds = %8
  %13 = ptrtoint i8* %10 to i64
  %14 = ptrtoint %"struct.OT::ArrayOf"* %0 to i64
  %15 = sub i64 %13, %14
  %16 = trunc i64 %15 to i32
  %17 = icmp ult i32 %16, 4
  br i1 %17, label %126, label %18, !prof !3

18:                                               ; preds = %12
  %19 = getelementptr inbounds %struct.hb_sanitize_context_t, %struct.hb_sanitize_context_t* %1, i64 0, i32 4
  %20 = load i32, i32* %19, align 8
  %21 = add i32 %20, -4
  store i32 %21, i32* %19, align 8
  %22 = icmp sgt i32 %21, 0
  br i1 %22, label %23, label %126, !prof !13

23:                                               ; preds = %18
  %24 = getelementptr inbounds %"struct.OT::ArrayOf", %"struct.OT::ArrayOf"* %0, i64 0, i32 1, i64 0
  %25 = load i8, i8* %4, align 1
  %26 = zext i8 %25 to i32
  %27 = shl nuw i32 %26, 24
  %28 = getelementptr inbounds %"struct.OT::ArrayOf", %"struct.OT::ArrayOf"* %0, i64 0, i32 0, i32 0, i32 0, i64 1
  %29 = load i8, i8* %28, align 1
  %30 = zext i8 %29 to i32
  %31 = shl nuw nsw i32 %30, 16
  %32 = or i32 %31, %27
  %33 = getelementptr inbounds %"struct.OT::ArrayOf", %"struct.OT::ArrayOf"* %0, i64 0, i32 0, i32 0, i32 0, i64 2
  %34 = load i8, i8* %33, align 1
  %35 = zext i8 %34 to i32
  %36 = shl nuw nsw i32 %35, 8
  %37 = or i32 %32, %36
  %38 = getelementptr inbounds %"struct.OT::ArrayOf", %"struct.OT::ArrayOf"* %0, i64 0, i32 0, i32 0, i32 0, i64 3
  %39 = load i8, i8* %38, align 1
  %40 = zext i8 %39 to i32
  %41 = or i32 %37, %40
  %42 = icmp ult i32 %41, 1073741823
  br i1 %42, label %43, label %126, !prof !13

43:                                               ; preds = %23
  %44 = getelementptr inbounds %"struct.AAT::FTStringRange", %"struct.AAT::FTStringRange"* %24, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i64 0
  %45 = shl i32 %41, 2
  %46 = icmp eq i32 %45, 0
  br i1 %46, label %74, label %47

47:                                               ; preds = %43
  %48 = icmp ugt i8* %6, %44
  %49 = icmp ult i8* %10, %44
  %50 = or i1 %48, %49
  br i1 %50, label %126, label %51, !prof !12

51:                                               ; preds = %47
  %52 = ptrtoint %"struct.AAT::FTStringRange"* %24 to i64
  %53 = sub i64 %13, %52
  %54 = trunc i64 %53 to i32
  %55 = icmp ugt i32 %45, %54
  br i1 %55, label %126, label %56, !prof !3

56:                                               ; preds = %51
  %57 = sub i32 %21, %45
  store i32 %57, i32* %19, align 8
  %58 = icmp sgt i32 %57, 0
  br i1 %58, label %59, label %126, !prof !2

59:                                               ; preds = %56
  %60 = load i8, i8* %4, align 1
  %61 = load i8, i8* %28, align 1
  %62 = load i8, i8* %33, align 1
  %63 = load i8, i8* %38, align 1
  %64 = zext i8 %60 to i32
  %65 = shl nuw i32 %64, 24
  %66 = zext i8 %61 to i32
  %67 = shl nuw nsw i32 %66, 16
  %68 = or i32 %67, %65
  %69 = zext i8 %62 to i32
  %70 = shl nuw nsw i32 %69, 8
  %71 = or i32 %68, %70
  %72 = zext i8 %63 to i32
  %73 = or i32 %71, %72
  br label %74

74:                                               ; preds = %59, %43
  %75 = phi i32 [ %73, %59 ], [ %41, %43 ]
  %76 = phi i32 [ %57, %59 ], [ %21, %43 ]
  %77 = icmp eq i32 %75, 0
  br i1 %77, label %126, label %78

78:                                               ; preds = %74
  %79 = bitcast %"struct.AAT::ltag"** %2 to i8**
  %80 = zext i32 %75 to i64
  br label %81

81:                                               ; preds = %122, %78
  %82 = phi i32 [ %76, %78 ], [ %123, %122 ]
  %83 = phi i64 [ 0, %78 ], [ %124, %122 ]
  %84 = getelementptr inbounds %"struct.OT::ArrayOf", %"struct.OT::ArrayOf"* %0, i64 0, i32 1, i64 %83
  %85 = load i8*, i8** %79, align 8
  %86 = getelementptr inbounds %"struct.AAT::FTStringRange", %"struct.AAT::FTStringRange"* %84, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i64 0
  %87 = icmp ugt i8* %6, %86
  %88 = icmp ult i8* %10, %86
  %89 = or i1 %87, %88
  br i1 %89, label %126, label %90, !prof !12

90:                                               ; preds = %81
  %91 = ptrtoint %"struct.AAT::FTStringRange"* %84 to i64
  %92 = sub i64 %13, %91
  %93 = trunc i64 %92 to i32
  %94 = icmp ult i32 %93, 4
  br i1 %94, label %126, label %95, !prof !3

95:                                               ; preds = %90
  %96 = add i32 %82, -4
  store i32 %96, i32* %19, align 8
  %97 = icmp sgt i32 %96, 0
  br i1 %97, label %98, label %126, !prof !13

98:                                               ; preds = %95
  %99 = bitcast %"struct.AAT::FTStringRange"* %84 to i16*
  %100 = load i16, i16* %99, align 1
  %101 = tail call i16 @llvm.bswap.i16(i16 %100) #9
  %102 = zext i16 %101 to i64
  %103 = getelementptr inbounds i8, i8* %85, i64 %102
  %104 = getelementptr inbounds %"struct.OT::ArrayOf", %"struct.OT::ArrayOf"* %0, i64 0, i32 1, i64 %83, i32 1
  %105 = bitcast %"struct.OT::IntType.141"* %104 to i16*
  %106 = load i16, i16* %105, align 1
  %107 = tail call i16 @llvm.bswap.i16(i16 %106) #9
  %108 = zext i16 %107 to i32
  %109 = icmp eq i16 %106, 0
  br i1 %109, label %122, label %110

110:                                              ; preds = %98
  %111 = icmp ugt i8* %6, %103
  %112 = icmp ult i8* %10, %103
  %113 = or i1 %111, %112
  br i1 %113, label %126, label %114, !prof !12

114:                                              ; preds = %110
  %115 = ptrtoint i8* %103 to i64
  %116 = sub i64 %13, %115
  %117 = trunc i64 %116 to i32
  %118 = icmp ult i32 %117, %108
  br i1 %118, label %126, label %119, !prof !3

119:                                              ; preds = %114
  %120 = sub nsw i32 %96, %108
  store i32 %120, i32* %19, align 8
  %121 = icmp sgt i32 %120, 0
  br i1 %121, label %122, label %126, !prof !2

122:                                              ; preds = %119, %98
  %123 = phi i32 [ %120, %119 ], [ %96, %98 ]
  %124 = add nuw nsw i64 %83, 1
  %125 = icmp eq i64 %124, %80
  br i1 %125, label %126, label %81

126:                                              ; preds = %95, %90, %81, %119, %114, %110, %122, %74, %47, %51, %23, %3, %8, %12, %18, %56
  %127 = phi i1 [ false, %56 ], [ false, %18 ], [ false, %12 ], [ false, %8 ], [ false, %3 ], [ false, %23 ], [ false, %51 ], [ false, %47 ], [ true, %74 ], [ true, %122 ], [ false, %95 ], [ false, %90 ], [ false, %81 ], [ false, %119 ], [ false, %114 ], [ false, %110 ]
  ret i1 %127
}

declare %struct.hb_language_impl_t* @hb_language_from_string(i8*, i32) local_unnamed_addr #3

; Function Attrs: inlinehint nounwind ssp uwtable
define internal fastcc void @_ZL13sort_r_simpleIJEEvPvmmPFiPKvS2_DpT_ES4_(i8*, i64, i64, i32 (i8*, i8*)*) unnamed_addr #6 {
  %5 = mul i64 %1, %2
  %6 = getelementptr inbounds i8, i8* %0, i64 %5
  %7 = icmp ult i64 %1, 10
  br i1 %7, label %12, label %8

8:                                                ; preds = %4
  %9 = sub i64 0, %2
  %10 = icmp sgt i64 %2, 0
  %11 = sub i64 1, %2
  br label %152

12:                                               ; preds = %1030, %4
  %13 = phi i8* [ %0, %4 ], [ %1033, %1030 ]
  %14 = phi i8* [ %6, %4 ], [ %1036, %1030 ]
  %15 = ptrtoint i8* %13 to i64
  %16 = getelementptr inbounds i8, i8* %13, i64 %2
  %17 = icmp ult i8* %16, %14
  br i1 %17, label %18, label %1038

18:                                               ; preds = %12
  %19 = sub i64 0, %2
  %20 = icmp sgt i64 %2, 0
  br i1 %20, label %21, label %139

21:                                               ; preds = %18, %30
  %22 = phi i64 [ %33, %30 ], [ 0, %18 ]
  %23 = phi i8* [ %31, %30 ], [ %16, %18 ]
  %24 = mul i64 %22, %2
  %25 = add i64 %24, %2
  %26 = add i64 %24, 1
  %27 = mul i64 %22, %2
  %28 = add i64 %27, %15
  %29 = icmp ugt i8* %23, %13
  br i1 %29, label %34, label %30

30:                                               ; preds = %128, %34, %21
  %31 = getelementptr inbounds i8, i8* %23, i64 %2
  %32 = icmp ult i8* %31, %14
  %33 = add i64 %22, 1
  br i1 %32, label %21, label %1038

34:                                               ; preds = %21, %128
  %35 = phi i64 [ %130, %128 ], [ 0, %21 ]
  %36 = phi i8* [ %42, %128 ], [ %23, %21 ]
  %37 = mul i64 %35, %2
  %38 = sub i64 %25, %37
  %39 = getelementptr i8, i8* %13, i64 %38
  %40 = sub i64 %26, %37
  %41 = getelementptr i8, i8* %13, i64 %40
  %42 = getelementptr inbounds i8, i8* %36, i64 %19
  %43 = tail call i32 %3(i8* %42, i8* %36) #9
  %44 = icmp sgt i32 %43, 0
  br i1 %44, label %45, label %30

45:                                               ; preds = %34
  %46 = icmp ugt i8* %39, %41
  %47 = select i1 %46, i8* %39, i8* %41
  %48 = mul i64 %35, %2
  %49 = sub i64 %48, %28
  %50 = getelementptr i8, i8* %47, i64 %49
  %51 = ptrtoint i8* %50 to i64
  %52 = icmp ult i8* %50, inttoptr (i64 32 to i8*)
  br i1 %52, label %53, label %56

53:                                               ; preds = %126, %45
  %54 = phi i8* [ %42, %45 ], [ %58, %126 ]
  %55 = phi i8* [ %36, %45 ], [ %59, %126 ]
  br label %131

56:                                               ; preds = %45
  %57 = and i64 %51, -32
  %58 = getelementptr i8, i8* %42, i64 %57
  %59 = getelementptr i8, i8* %36, i64 %57
  %60 = add i64 %57, -32
  %61 = lshr exact i64 %60, 5
  %62 = add nuw nsw i64 %61, 1
  %63 = and i64 %62, 1
  %64 = icmp eq i64 %60, 0
  br i1 %64, label %106, label %65

65:                                               ; preds = %56
  %66 = sub nuw nsw i64 %62, %63
  br label %67

67:                                               ; preds = %67, %65
  %68 = phi i64 [ 0, %65 ], [ %103, %67 ]
  %69 = phi i64 [ %66, %65 ], [ %104, %67 ]
  %70 = getelementptr i8, i8* %42, i64 %68
  %71 = getelementptr i8, i8* %36, i64 %68
  %72 = bitcast i8* %70 to <16 x i8>*
  %73 = load <16 x i8>, <16 x i8>* %72, align 1, !alias.scope !14, !noalias !19
  %74 = getelementptr i8, i8* %70, i64 16
  %75 = bitcast i8* %74 to <16 x i8>*
  %76 = load <16 x i8>, <16 x i8>* %75, align 1, !alias.scope !14, !noalias !19
  %77 = bitcast i8* %71 to <16 x i8>*
  %78 = load <16 x i8>, <16 x i8>* %77, align 1, !alias.scope !19, !noalias !14
  %79 = getelementptr i8, i8* %71, i64 16
  %80 = bitcast i8* %79 to <16 x i8>*
  %81 = load <16 x i8>, <16 x i8>* %80, align 1, !alias.scope !19, !noalias !14
  %82 = bitcast i8* %70 to <16 x i8>*
  store <16 x i8> %78, <16 x i8>* %82, align 1, !alias.scope !14, !noalias !19
  %83 = bitcast i8* %74 to <16 x i8>*
  store <16 x i8> %81, <16 x i8>* %83, align 1, !alias.scope !14, !noalias !19
  %84 = bitcast i8* %71 to <16 x i8>*
  store <16 x i8> %73, <16 x i8>* %84, align 1, !alias.scope !19, !noalias !14
  %85 = bitcast i8* %79 to <16 x i8>*
  store <16 x i8> %76, <16 x i8>* %85, align 1, !alias.scope !19, !noalias !14
  %86 = or i64 %68, 32
  %87 = getelementptr i8, i8* %42, i64 %86
  %88 = getelementptr i8, i8* %36, i64 %86
  %89 = bitcast i8* %87 to <16 x i8>*
  %90 = load <16 x i8>, <16 x i8>* %89, align 1, !alias.scope !14, !noalias !19
  %91 = getelementptr i8, i8* %87, i64 16
  %92 = bitcast i8* %91 to <16 x i8>*
  %93 = load <16 x i8>, <16 x i8>* %92, align 1, !alias.scope !14, !noalias !19
  %94 = bitcast i8* %88 to <16 x i8>*
  %95 = load <16 x i8>, <16 x i8>* %94, align 1, !alias.scope !19, !noalias !14
  %96 = getelementptr i8, i8* %88, i64 16
  %97 = bitcast i8* %96 to <16 x i8>*
  %98 = load <16 x i8>, <16 x i8>* %97, align 1, !alias.scope !19, !noalias !14
  %99 = bitcast i8* %87 to <16 x i8>*
  store <16 x i8> %95, <16 x i8>* %99, align 1, !alias.scope !14, !noalias !19
  %100 = bitcast i8* %91 to <16 x i8>*
  store <16 x i8> %98, <16 x i8>* %100, align 1, !alias.scope !14, !noalias !19
  %101 = bitcast i8* %88 to <16 x i8>*
  store <16 x i8> %90, <16 x i8>* %101, align 1, !alias.scope !19, !noalias !14
  %102 = bitcast i8* %96 to <16 x i8>*
  store <16 x i8> %93, <16 x i8>* %102, align 1, !alias.scope !19, !noalias !14
  %103 = add i64 %68, 64
  %104 = add i64 %69, -2
  %105 = icmp eq i64 %104, 0
  br i1 %105, label %106, label %67, !llvm.loop !22

106:                                              ; preds = %67, %56
  %107 = phi i64 [ 0, %56 ], [ %103, %67 ]
  %108 = icmp eq i64 %63, 0
  br i1 %108, label %126, label %109

109:                                              ; preds = %106
  %110 = getelementptr i8, i8* %42, i64 %107
  %111 = getelementptr i8, i8* %36, i64 %107
  %112 = bitcast i8* %110 to <16 x i8>*
  %113 = load <16 x i8>, <16 x i8>* %112, align 1, !alias.scope !14, !noalias !19
  %114 = getelementptr i8, i8* %110, i64 16
  %115 = bitcast i8* %114 to <16 x i8>*
  %116 = load <16 x i8>, <16 x i8>* %115, align 1, !alias.scope !14, !noalias !19
  %117 = bitcast i8* %111 to <16 x i8>*
  %118 = load <16 x i8>, <16 x i8>* %117, align 1, !alias.scope !19, !noalias !14
  %119 = getelementptr i8, i8* %111, i64 16
  %120 = bitcast i8* %119 to <16 x i8>*
  %121 = load <16 x i8>, <16 x i8>* %120, align 1, !alias.scope !19, !noalias !14
  %122 = bitcast i8* %110 to <16 x i8>*
  store <16 x i8> %118, <16 x i8>* %122, align 1, !alias.scope !14, !noalias !19
  %123 = bitcast i8* %114 to <16 x i8>*
  store <16 x i8> %121, <16 x i8>* %123, align 1, !alias.scope !14, !noalias !19
  %124 = bitcast i8* %111 to <16 x i8>*
  store <16 x i8> %113, <16 x i8>* %124, align 1, !alias.scope !19, !noalias !14
  %125 = bitcast i8* %119 to <16 x i8>*
  store <16 x i8> %116, <16 x i8>* %125, align 1, !alias.scope !19, !noalias !14
  br label %126

126:                                              ; preds = %106, %109
  %127 = icmp eq i64 %57, %51
  br i1 %127, label %128, label %53

128:                                              ; preds = %131, %126
  %129 = icmp ugt i8* %42, %13
  %130 = add i64 %35, 1
  br i1 %129, label %34, label %30

131:                                              ; preds = %53, %131
  %132 = phi i8* [ %136, %131 ], [ %54, %53 ]
  %133 = phi i8* [ %137, %131 ], [ %55, %53 ]
  %134 = load i8, i8* %132, align 1, !alias.scope !14, !noalias !19
  %135 = load i8, i8* %133, align 1, !alias.scope !19, !noalias !14
  store i8 %135, i8* %132, align 1, !alias.scope !14, !noalias !19
  store i8 %134, i8* %133, align 1, !alias.scope !19, !noalias !14
  %136 = getelementptr inbounds i8, i8* %132, i64 1
  %137 = getelementptr inbounds i8, i8* %133, i64 1
  %138 = icmp ult i8* %136, %36
  br i1 %138, label %131, label %128, !llvm.loop !23

139:                                              ; preds = %18, %149
  %140 = phi i8* [ %150, %149 ], [ %16, %18 ]
  %141 = icmp ugt i8* %140, %13
  br i1 %141, label %142, label %149

142:                                              ; preds = %139, %142
  %143 = phi i8* [ %144, %142 ], [ %140, %139 ]
  %144 = getelementptr inbounds i8, i8* %143, i64 %19
  %145 = tail call i32 %3(i8* %144, i8* %143) #9
  %146 = icmp sgt i32 %145, 0
  %147 = icmp ugt i8* %144, %13
  %148 = and i1 %146, %147
  br i1 %148, label %142, label %149

149:                                              ; preds = %142, %139
  %150 = getelementptr inbounds i8, i8* %140, i64 %2
  %151 = icmp ult i8* %150, %14
  br i1 %151, label %139, label %1038

152:                                              ; preds = %8, %1030
  %153 = phi i8* [ %6, %8 ], [ %1036, %1030 ]
  %154 = phi i64 [ %1, %8 ], [ %1034, %1030 ]
  %155 = phi i8* [ %0, %8 ], [ %1033, %1030 ]
  %156 = ptrtoint i8* %155 to i64
  %157 = add i64 %154, -1
  %158 = mul i64 %157, %2
  %159 = getelementptr inbounds i8, i8* %155, i64 %158
  %160 = getelementptr inbounds i8, i8* %155, i64 %2
  %161 = lshr i64 %154, 1
  %162 = mul i64 %161, %2
  %163 = getelementptr inbounds i8, i8* %155, i64 %162
  %164 = getelementptr inbounds i8, i8* %159, i64 %9
  %165 = tail call i32 %3(i8* %160, i8* %163) #9
  %166 = icmp sgt i32 %165, 0
  %167 = select i1 %166, i8* %160, i8* %163
  %168 = select i1 %166, i8* %163, i8* %160
  %169 = tail call i32 %3(i8* %167, i8* %164) #9
  %170 = icmp sgt i32 %169, 0
  br i1 %170, label %171, label %175

171:                                              ; preds = %152
  %172 = tail call i32 %3(i8* %168, i8* %164) #9
  %173 = icmp sgt i32 %172, 0
  %174 = select i1 %173, i8* %168, i8* %164
  br label %175

175:                                              ; preds = %171, %152
  %176 = phi i8* [ %167, %152 ], [ %174, %171 ]
  %177 = ptrtoint i8* %176 to i64
  %178 = icmp eq i8* %176, %159
  br i1 %178, label %271, label %179

179:                                              ; preds = %175
  %180 = getelementptr inbounds i8, i8* %176, i64 %2
  br i1 %10, label %181, label %271

181:                                              ; preds = %179
  %182 = getelementptr i8, i8* %176, i64 1
  %183 = icmp ugt i8* %180, %182
  %184 = select i1 %183, i8* %180, i8* %182
  %185 = ptrtoint i8* %184 to i64
  %186 = sub i64 %185, %177
  %187 = icmp ult i64 %186, 32
  br i1 %187, label %260, label %188

188:                                              ; preds = %181
  %189 = and i64 %186, -32
  %190 = getelementptr i8, i8* %176, i64 %189
  %191 = getelementptr i8, i8* %159, i64 %189
  %192 = add i64 %189, -32
  %193 = lshr exact i64 %192, 5
  %194 = add nuw nsw i64 %193, 1
  %195 = and i64 %194, 1
  %196 = icmp eq i64 %192, 0
  br i1 %196, label %238, label %197

197:                                              ; preds = %188
  %198 = sub nuw nsw i64 %194, %195
  br label %199

199:                                              ; preds = %199, %197
  %200 = phi i64 [ 0, %197 ], [ %235, %199 ]
  %201 = phi i64 [ %198, %197 ], [ %236, %199 ]
  %202 = getelementptr i8, i8* %176, i64 %200
  %203 = getelementptr i8, i8* %159, i64 %200
  %204 = bitcast i8* %202 to <16 x i8>*
  %205 = load <16 x i8>, <16 x i8>* %204, align 1, !alias.scope !24, !noalias !27
  %206 = getelementptr i8, i8* %202, i64 16
  %207 = bitcast i8* %206 to <16 x i8>*
  %208 = load <16 x i8>, <16 x i8>* %207, align 1, !alias.scope !24, !noalias !27
  %209 = bitcast i8* %203 to <16 x i8>*
  %210 = load <16 x i8>, <16 x i8>* %209, align 1, !alias.scope !27, !noalias !24
  %211 = getelementptr i8, i8* %203, i64 16
  %212 = bitcast i8* %211 to <16 x i8>*
  %213 = load <16 x i8>, <16 x i8>* %212, align 1, !alias.scope !27, !noalias !24
  %214 = bitcast i8* %202 to <16 x i8>*
  store <16 x i8> %210, <16 x i8>* %214, align 1, !alias.scope !24, !noalias !27
  %215 = bitcast i8* %206 to <16 x i8>*
  store <16 x i8> %213, <16 x i8>* %215, align 1, !alias.scope !24, !noalias !27
  %216 = bitcast i8* %203 to <16 x i8>*
  store <16 x i8> %205, <16 x i8>* %216, align 1, !alias.scope !27, !noalias !24
  %217 = bitcast i8* %211 to <16 x i8>*
  store <16 x i8> %208, <16 x i8>* %217, align 1, !alias.scope !27, !noalias !24
  %218 = or i64 %200, 32
  %219 = getelementptr i8, i8* %176, i64 %218
  %220 = getelementptr i8, i8* %159, i64 %218
  %221 = bitcast i8* %219 to <16 x i8>*
  %222 = load <16 x i8>, <16 x i8>* %221, align 1, !alias.scope !24, !noalias !27
  %223 = getelementptr i8, i8* %219, i64 16
  %224 = bitcast i8* %223 to <16 x i8>*
  %225 = load <16 x i8>, <16 x i8>* %224, align 1, !alias.scope !24, !noalias !27
  %226 = bitcast i8* %220 to <16 x i8>*
  %227 = load <16 x i8>, <16 x i8>* %226, align 1, !alias.scope !27, !noalias !24
  %228 = getelementptr i8, i8* %220, i64 16
  %229 = bitcast i8* %228 to <16 x i8>*
  %230 = load <16 x i8>, <16 x i8>* %229, align 1, !alias.scope !27, !noalias !24
  %231 = bitcast i8* %219 to <16 x i8>*
  store <16 x i8> %227, <16 x i8>* %231, align 1, !alias.scope !24, !noalias !27
  %232 = bitcast i8* %223 to <16 x i8>*
  store <16 x i8> %230, <16 x i8>* %232, align 1, !alias.scope !24, !noalias !27
  %233 = bitcast i8* %220 to <16 x i8>*
  store <16 x i8> %222, <16 x i8>* %233, align 1, !alias.scope !27, !noalias !24
  %234 = bitcast i8* %228 to <16 x i8>*
  store <16 x i8> %225, <16 x i8>* %234, align 1, !alias.scope !27, !noalias !24
  %235 = add i64 %200, 64
  %236 = add i64 %201, -2
  %237 = icmp eq i64 %236, 0
  br i1 %237, label %238, label %199, !llvm.loop !29

238:                                              ; preds = %199, %188
  %239 = phi i64 [ 0, %188 ], [ %235, %199 ]
  %240 = icmp eq i64 %195, 0
  br i1 %240, label %258, label %241

241:                                              ; preds = %238
  %242 = getelementptr i8, i8* %176, i64 %239
  %243 = getelementptr i8, i8* %159, i64 %239
  %244 = bitcast i8* %242 to <16 x i8>*
  %245 = load <16 x i8>, <16 x i8>* %244, align 1, !alias.scope !24, !noalias !27
  %246 = getelementptr i8, i8* %242, i64 16
  %247 = bitcast i8* %246 to <16 x i8>*
  %248 = load <16 x i8>, <16 x i8>* %247, align 1, !alias.scope !24, !noalias !27
  %249 = bitcast i8* %243 to <16 x i8>*
  %250 = load <16 x i8>, <16 x i8>* %249, align 1, !alias.scope !27, !noalias !24
  %251 = getelementptr i8, i8* %243, i64 16
  %252 = bitcast i8* %251 to <16 x i8>*
  %253 = load <16 x i8>, <16 x i8>* %252, align 1, !alias.scope !27, !noalias !24
  %254 = bitcast i8* %242 to <16 x i8>*
  store <16 x i8> %250, <16 x i8>* %254, align 1, !alias.scope !24, !noalias !27
  %255 = bitcast i8* %246 to <16 x i8>*
  store <16 x i8> %253, <16 x i8>* %255, align 1, !alias.scope !24, !noalias !27
  %256 = bitcast i8* %243 to <16 x i8>*
  store <16 x i8> %245, <16 x i8>* %256, align 1, !alias.scope !27, !noalias !24
  %257 = bitcast i8* %251 to <16 x i8>*
  store <16 x i8> %248, <16 x i8>* %257, align 1, !alias.scope !27, !noalias !24
  br label %258

258:                                              ; preds = %238, %241
  %259 = icmp eq i64 %186, %189
  br i1 %259, label %271, label %260

260:                                              ; preds = %258, %181
  %261 = phi i8* [ %176, %181 ], [ %190, %258 ]
  %262 = phi i8* [ %159, %181 ], [ %191, %258 ]
  br label %263

263:                                              ; preds = %260, %263
  %264 = phi i8* [ %268, %263 ], [ %261, %260 ]
  %265 = phi i8* [ %269, %263 ], [ %262, %260 ]
  %266 = load i8, i8* %264, align 1, !alias.scope !24, !noalias !27
  %267 = load i8, i8* %265, align 1, !alias.scope !27, !noalias !24
  store i8 %267, i8* %264, align 1, !alias.scope !24, !noalias !27
  store i8 %266, i8* %265, align 1, !alias.scope !27, !noalias !24
  %268 = getelementptr inbounds i8, i8* %264, i64 1
  %269 = getelementptr inbounds i8, i8* %265, i64 1
  %270 = icmp ult i8* %268, %180
  br i1 %270, label %263, label %271, !llvm.loop !30

271:                                              ; preds = %263, %258, %179, %175
  %272 = icmp sgt i64 %158, 0
  br i1 %272, label %273, label %635

273:                                              ; preds = %271, %630
  %274 = phi i8* [ %631, %630 ], [ %159, %271 ]
  %275 = phi i8* [ %633, %630 ], [ %159, %271 ]
  %276 = phi i8* [ %395, %630 ], [ %155, %271 ]
  %277 = phi i8* [ %632, %630 ], [ %155, %271 ]
  %278 = ptrtoint i8* %275 to i64
  %279 = icmp ult i8* %277, %275
  br i1 %279, label %280, label %635

280:                                              ; preds = %273
  br i1 %10, label %281, label %388

281:                                              ; preds = %280, %384
  %282 = phi i8* [ %385, %384 ], [ %276, %280 ]
  %283 = phi i8* [ %386, %384 ], [ %277, %280 ]
  %284 = ptrtoint i8* %282 to i64
  %285 = tail call i32 %3(i8* %283, i8* %159) #9
  %286 = icmp sgt i32 %285, 0
  br i1 %286, label %393, label %287

287:                                              ; preds = %281
  %288 = icmp eq i32 %285, 0
  br i1 %288, label %289, label %384

289:                                              ; preds = %287
  %290 = icmp ult i8* %282, %283
  br i1 %290, label %291, label %382

291:                                              ; preds = %289
  %292 = getelementptr inbounds i8, i8* %282, i64 %2
  %293 = getelementptr i8, i8* %282, i64 1
  %294 = icmp ugt i8* %292, %293
  %295 = select i1 %294, i8* %292, i8* %293
  %296 = ptrtoint i8* %295 to i64
  %297 = sub i64 %296, %284
  %298 = icmp ult i64 %297, 32
  br i1 %298, label %371, label %299

299:                                              ; preds = %291
  %300 = and i64 %297, -32
  %301 = getelementptr i8, i8* %282, i64 %300
  %302 = getelementptr i8, i8* %283, i64 %300
  %303 = add i64 %300, -32
  %304 = lshr exact i64 %303, 5
  %305 = add nuw nsw i64 %304, 1
  %306 = and i64 %305, 1
  %307 = icmp eq i64 %303, 0
  br i1 %307, label %349, label %308

308:                                              ; preds = %299
  %309 = sub nuw nsw i64 %305, %306
  br label %310

310:                                              ; preds = %310, %308
  %311 = phi i64 [ 0, %308 ], [ %346, %310 ]
  %312 = phi i64 [ %309, %308 ], [ %347, %310 ]
  %313 = getelementptr i8, i8* %282, i64 %311
  %314 = getelementptr i8, i8* %283, i64 %311
  %315 = bitcast i8* %313 to <16 x i8>*
  %316 = load <16 x i8>, <16 x i8>* %315, align 1, !alias.scope !31, !noalias !34
  %317 = getelementptr i8, i8* %313, i64 16
  %318 = bitcast i8* %317 to <16 x i8>*
  %319 = load <16 x i8>, <16 x i8>* %318, align 1, !alias.scope !31, !noalias !34
  %320 = bitcast i8* %314 to <16 x i8>*
  %321 = load <16 x i8>, <16 x i8>* %320, align 1, !alias.scope !34, !noalias !31
  %322 = getelementptr i8, i8* %314, i64 16
  %323 = bitcast i8* %322 to <16 x i8>*
  %324 = load <16 x i8>, <16 x i8>* %323, align 1, !alias.scope !34, !noalias !31
  %325 = bitcast i8* %313 to <16 x i8>*
  store <16 x i8> %321, <16 x i8>* %325, align 1, !alias.scope !31, !noalias !34
  %326 = bitcast i8* %317 to <16 x i8>*
  store <16 x i8> %324, <16 x i8>* %326, align 1, !alias.scope !31, !noalias !34
  %327 = bitcast i8* %314 to <16 x i8>*
  store <16 x i8> %316, <16 x i8>* %327, align 1, !alias.scope !34, !noalias !31
  %328 = bitcast i8* %322 to <16 x i8>*
  store <16 x i8> %319, <16 x i8>* %328, align 1, !alias.scope !34, !noalias !31
  %329 = or i64 %311, 32
  %330 = getelementptr i8, i8* %282, i64 %329
  %331 = getelementptr i8, i8* %283, i64 %329
  %332 = bitcast i8* %330 to <16 x i8>*
  %333 = load <16 x i8>, <16 x i8>* %332, align 1, !alias.scope !31, !noalias !34
  %334 = getelementptr i8, i8* %330, i64 16
  %335 = bitcast i8* %334 to <16 x i8>*
  %336 = load <16 x i8>, <16 x i8>* %335, align 1, !alias.scope !31, !noalias !34
  %337 = bitcast i8* %331 to <16 x i8>*
  %338 = load <16 x i8>, <16 x i8>* %337, align 1, !alias.scope !34, !noalias !31
  %339 = getelementptr i8, i8* %331, i64 16
  %340 = bitcast i8* %339 to <16 x i8>*
  %341 = load <16 x i8>, <16 x i8>* %340, align 1, !alias.scope !34, !noalias !31
  %342 = bitcast i8* %330 to <16 x i8>*
  store <16 x i8> %338, <16 x i8>* %342, align 1, !alias.scope !31, !noalias !34
  %343 = bitcast i8* %334 to <16 x i8>*
  store <16 x i8> %341, <16 x i8>* %343, align 1, !alias.scope !31, !noalias !34
  %344 = bitcast i8* %331 to <16 x i8>*
  store <16 x i8> %333, <16 x i8>* %344, align 1, !alias.scope !34, !noalias !31
  %345 = bitcast i8* %339 to <16 x i8>*
  store <16 x i8> %336, <16 x i8>* %345, align 1, !alias.scope !34, !noalias !31
  %346 = add i64 %311, 64
  %347 = add i64 %312, -2
  %348 = icmp eq i64 %347, 0
  br i1 %348, label %349, label %310, !llvm.loop !36

349:                                              ; preds = %310, %299
  %350 = phi i64 [ 0, %299 ], [ %346, %310 ]
  %351 = icmp eq i64 %306, 0
  br i1 %351, label %369, label %352

352:                                              ; preds = %349
  %353 = getelementptr i8, i8* %282, i64 %350
  %354 = getelementptr i8, i8* %283, i64 %350
  %355 = bitcast i8* %353 to <16 x i8>*
  %356 = load <16 x i8>, <16 x i8>* %355, align 1, !alias.scope !31, !noalias !34
  %357 = getelementptr i8, i8* %353, i64 16
  %358 = bitcast i8* %357 to <16 x i8>*
  %359 = load <16 x i8>, <16 x i8>* %358, align 1, !alias.scope !31, !noalias !34
  %360 = bitcast i8* %354 to <16 x i8>*
  %361 = load <16 x i8>, <16 x i8>* %360, align 1, !alias.scope !34, !noalias !31
  %362 = getelementptr i8, i8* %354, i64 16
  %363 = bitcast i8* %362 to <16 x i8>*
  %364 = load <16 x i8>, <16 x i8>* %363, align 1, !alias.scope !34, !noalias !31
  %365 = bitcast i8* %353 to <16 x i8>*
  store <16 x i8> %361, <16 x i8>* %365, align 1, !alias.scope !31, !noalias !34
  %366 = bitcast i8* %357 to <16 x i8>*
  store <16 x i8> %364, <16 x i8>* %366, align 1, !alias.scope !31, !noalias !34
  %367 = bitcast i8* %354 to <16 x i8>*
  store <16 x i8> %356, <16 x i8>* %367, align 1, !alias.scope !34, !noalias !31
  %368 = bitcast i8* %362 to <16 x i8>*
  store <16 x i8> %359, <16 x i8>* %368, align 1, !alias.scope !34, !noalias !31
  br label %369

369:                                              ; preds = %349, %352
  %370 = icmp eq i64 %297, %300
  br i1 %370, label %382, label %371

371:                                              ; preds = %369, %291
  %372 = phi i8* [ %282, %291 ], [ %301, %369 ]
  %373 = phi i8* [ %283, %291 ], [ %302, %369 ]
  br label %374

374:                                              ; preds = %371, %374
  %375 = phi i8* [ %379, %374 ], [ %372, %371 ]
  %376 = phi i8* [ %380, %374 ], [ %373, %371 ]
  %377 = load i8, i8* %375, align 1, !alias.scope !31, !noalias !34
  %378 = load i8, i8* %376, align 1, !alias.scope !34, !noalias !31
  store i8 %378, i8* %375, align 1, !alias.scope !31, !noalias !34
  store i8 %377, i8* %376, align 1, !alias.scope !34, !noalias !31
  %379 = getelementptr inbounds i8, i8* %375, i64 1
  %380 = getelementptr inbounds i8, i8* %376, i64 1
  %381 = icmp ult i8* %379, %292
  br i1 %381, label %374, label %382, !llvm.loop !37

382:                                              ; preds = %374, %369, %289
  %383 = getelementptr inbounds i8, i8* %282, i64 %2
  br label %384

384:                                              ; preds = %382, %287
  %385 = phi i8* [ %383, %382 ], [ %282, %287 ]
  %386 = getelementptr inbounds i8, i8* %283, i64 %2
  %387 = icmp ult i8* %386, %275
  br i1 %387, label %281, label %635

388:                                              ; preds = %280, %513
  %389 = phi i8* [ %516, %513 ], [ %276, %280 ]
  %390 = phi i8* [ %517, %513 ], [ %277, %280 ]
  %391 = tail call i32 %3(i8* %390, i8* %159) #9
  %392 = icmp sgt i32 %391, 0
  br i1 %392, label %393, label %513

393:                                              ; preds = %388, %281
  %394 = phi i8* [ %283, %281 ], [ %390, %388 ]
  %395 = phi i8* [ %282, %281 ], [ %389, %388 ]
  %396 = ptrtoint i8* %394 to i64
  %397 = icmp ult i8* %394, %275
  br i1 %397, label %398, label %630

398:                                              ; preds = %393
  br i1 %10, label %399, label %519

399:                                              ; preds = %398
  %400 = sub i64 %2, %278
  br label %401

401:                                              ; preds = %399, %509
  %402 = phi i64 [ 0, %399 ], [ %512, %509 ]
  %403 = phi i8* [ %274, %399 ], [ %510, %509 ]
  %404 = phi i8* [ %275, %399 ], [ %415, %509 ]
  %405 = mul i64 %402, %2
  %406 = sub i64 0, %405
  %407 = getelementptr i8, i8* %275, i64 %406
  %408 = sub i64 %11, %405
  %409 = getelementptr i8, i8* %275, i64 %408
  %410 = icmp ugt i8* %407, %409
  %411 = select i1 %410, i8* %407, i8* %409
  %412 = mul i64 %402, %2
  %413 = add i64 %400, %412
  %414 = getelementptr i8, i8* %411, i64 %413
  %415 = getelementptr inbounds i8, i8* %404, i64 %9
  %416 = tail call i32 %3(i8* %415, i8* %159) #9
  %417 = icmp eq i32 %416, 0
  br i1 %417, label %420, label %418

418:                                              ; preds = %401
  %419 = icmp slt i32 %416, 0
  br i1 %419, label %529, label %509

420:                                              ; preds = %401
  %421 = getelementptr inbounds i8, i8* %403, i64 %9
  %422 = icmp ult i8* %404, %403
  br i1 %422, label %423, label %509

423:                                              ; preds = %420
  %424 = ptrtoint i8* %414 to i64
  %425 = icmp ult i8* %414, inttoptr (i64 32 to i8*)
  br i1 %425, label %498, label %426

426:                                              ; preds = %423
  %427 = and i64 %424, -32
  %428 = getelementptr i8, i8* %415, i64 %427
  %429 = getelementptr i8, i8* %421, i64 %427
  %430 = add i64 %427, -32
  %431 = lshr exact i64 %430, 5
  %432 = add nuw nsw i64 %431, 1
  %433 = and i64 %432, 1
  %434 = icmp eq i64 %430, 0
  br i1 %434, label %476, label %435

435:                                              ; preds = %426
  %436 = sub nuw nsw i64 %432, %433
  br label %437

437:                                              ; preds = %437, %435
  %438 = phi i64 [ 0, %435 ], [ %473, %437 ]
  %439 = phi i64 [ %436, %435 ], [ %474, %437 ]
  %440 = getelementptr i8, i8* %415, i64 %438
  %441 = getelementptr i8, i8* %421, i64 %438
  %442 = bitcast i8* %440 to <16 x i8>*
  %443 = load <16 x i8>, <16 x i8>* %442, align 1, !alias.scope !38, !noalias !41
  %444 = getelementptr i8, i8* %440, i64 16
  %445 = bitcast i8* %444 to <16 x i8>*
  %446 = load <16 x i8>, <16 x i8>* %445, align 1, !alias.scope !38, !noalias !41
  %447 = bitcast i8* %441 to <16 x i8>*
  %448 = load <16 x i8>, <16 x i8>* %447, align 1, !alias.scope !41, !noalias !38
  %449 = getelementptr i8, i8* %441, i64 16
  %450 = bitcast i8* %449 to <16 x i8>*
  %451 = load <16 x i8>, <16 x i8>* %450, align 1, !alias.scope !41, !noalias !38
  %452 = bitcast i8* %440 to <16 x i8>*
  store <16 x i8> %448, <16 x i8>* %452, align 1, !alias.scope !38, !noalias !41
  %453 = bitcast i8* %444 to <16 x i8>*
  store <16 x i8> %451, <16 x i8>* %453, align 1, !alias.scope !38, !noalias !41
  %454 = bitcast i8* %441 to <16 x i8>*
  store <16 x i8> %443, <16 x i8>* %454, align 1, !alias.scope !41, !noalias !38
  %455 = bitcast i8* %449 to <16 x i8>*
  store <16 x i8> %446, <16 x i8>* %455, align 1, !alias.scope !41, !noalias !38
  %456 = or i64 %438, 32
  %457 = getelementptr i8, i8* %415, i64 %456
  %458 = getelementptr i8, i8* %421, i64 %456
  %459 = bitcast i8* %457 to <16 x i8>*
  %460 = load <16 x i8>, <16 x i8>* %459, align 1, !alias.scope !38, !noalias !41
  %461 = getelementptr i8, i8* %457, i64 16
  %462 = bitcast i8* %461 to <16 x i8>*
  %463 = load <16 x i8>, <16 x i8>* %462, align 1, !alias.scope !38, !noalias !41
  %464 = bitcast i8* %458 to <16 x i8>*
  %465 = load <16 x i8>, <16 x i8>* %464, align 1, !alias.scope !41, !noalias !38
  %466 = getelementptr i8, i8* %458, i64 16
  %467 = bitcast i8* %466 to <16 x i8>*
  %468 = load <16 x i8>, <16 x i8>* %467, align 1, !alias.scope !41, !noalias !38
  %469 = bitcast i8* %457 to <16 x i8>*
  store <16 x i8> %465, <16 x i8>* %469, align 1, !alias.scope !38, !noalias !41
  %470 = bitcast i8* %461 to <16 x i8>*
  store <16 x i8> %468, <16 x i8>* %470, align 1, !alias.scope !38, !noalias !41
  %471 = bitcast i8* %458 to <16 x i8>*
  store <16 x i8> %460, <16 x i8>* %471, align 1, !alias.scope !41, !noalias !38
  %472 = bitcast i8* %466 to <16 x i8>*
  store <16 x i8> %463, <16 x i8>* %472, align 1, !alias.scope !41, !noalias !38
  %473 = add i64 %438, 64
  %474 = add i64 %439, -2
  %475 = icmp eq i64 %474, 0
  br i1 %475, label %476, label %437, !llvm.loop !43

476:                                              ; preds = %437, %426
  %477 = phi i64 [ 0, %426 ], [ %473, %437 ]
  %478 = icmp eq i64 %433, 0
  br i1 %478, label %496, label %479

479:                                              ; preds = %476
  %480 = getelementptr i8, i8* %415, i64 %477
  %481 = getelementptr i8, i8* %421, i64 %477
  %482 = bitcast i8* %480 to <16 x i8>*
  %483 = load <16 x i8>, <16 x i8>* %482, align 1, !alias.scope !38, !noalias !41
  %484 = getelementptr i8, i8* %480, i64 16
  %485 = bitcast i8* %484 to <16 x i8>*
  %486 = load <16 x i8>, <16 x i8>* %485, align 1, !alias.scope !38, !noalias !41
  %487 = bitcast i8* %481 to <16 x i8>*
  %488 = load <16 x i8>, <16 x i8>* %487, align 1, !alias.scope !41, !noalias !38
  %489 = getelementptr i8, i8* %481, i64 16
  %490 = bitcast i8* %489 to <16 x i8>*
  %491 = load <16 x i8>, <16 x i8>* %490, align 1, !alias.scope !41, !noalias !38
  %492 = bitcast i8* %480 to <16 x i8>*
  store <16 x i8> %488, <16 x i8>* %492, align 1, !alias.scope !38, !noalias !41
  %493 = bitcast i8* %484 to <16 x i8>*
  store <16 x i8> %491, <16 x i8>* %493, align 1, !alias.scope !38, !noalias !41
  %494 = bitcast i8* %481 to <16 x i8>*
  store <16 x i8> %483, <16 x i8>* %494, align 1, !alias.scope !41, !noalias !38
  %495 = bitcast i8* %489 to <16 x i8>*
  store <16 x i8> %486, <16 x i8>* %495, align 1, !alias.scope !41, !noalias !38
  br label %496

496:                                              ; preds = %476, %479
  %497 = icmp eq i64 %427, %424
  br i1 %497, label %509, label %498

498:                                              ; preds = %496, %423
  %499 = phi i8* [ %415, %423 ], [ %428, %496 ]
  %500 = phi i8* [ %421, %423 ], [ %429, %496 ]
  br label %501

501:                                              ; preds = %498, %501
  %502 = phi i8* [ %506, %501 ], [ %499, %498 ]
  %503 = phi i8* [ %507, %501 ], [ %500, %498 ]
  %504 = load i8, i8* %502, align 1, !alias.scope !38, !noalias !41
  %505 = load i8, i8* %503, align 1, !alias.scope !41, !noalias !38
  store i8 %505, i8* %502, align 1, !alias.scope !38, !noalias !41
  store i8 %504, i8* %503, align 1, !alias.scope !41, !noalias !38
  %506 = getelementptr inbounds i8, i8* %502, i64 1
  %507 = getelementptr inbounds i8, i8* %503, i64 1
  %508 = icmp ult i8* %506, %404
  br i1 %508, label %501, label %509, !llvm.loop !44

509:                                              ; preds = %501, %496, %420, %418
  %510 = phi i8* [ %421, %420 ], [ %403, %418 ], [ %421, %496 ], [ %421, %501 ]
  %511 = icmp ult i8* %394, %415
  %512 = add i64 %402, 1
  br i1 %511, label %401, label %630

513:                                              ; preds = %388
  %514 = icmp eq i32 %391, 0
  %515 = getelementptr inbounds i8, i8* %389, i64 %2
  %516 = select i1 %514, i8* %515, i8* %389
  %517 = getelementptr inbounds i8, i8* %390, i64 %2
  %518 = icmp ult i8* %517, %275
  br i1 %518, label %388, label %635

519:                                              ; preds = %398, %627
  %520 = phi i8* [ %628, %627 ], [ %274, %398 ]
  %521 = phi i8* [ %522, %627 ], [ %275, %398 ]
  %522 = getelementptr inbounds i8, i8* %521, i64 %9
  %523 = tail call i32 %3(i8* %522, i8* %159) #9
  %524 = icmp eq i32 %523, 0
  br i1 %524, label %525, label %527

525:                                              ; preds = %519
  %526 = getelementptr inbounds i8, i8* %520, i64 %9
  br label %627

527:                                              ; preds = %519
  %528 = icmp slt i32 %523, 0
  br i1 %528, label %529, label %627

529:                                              ; preds = %527, %418
  %530 = phi i8* [ %415, %418 ], [ %522, %527 ]
  %531 = phi i8* [ %403, %418 ], [ %520, %527 ]
  %532 = icmp ult i8* %394, %530
  br i1 %532, label %533, label %625

533:                                              ; preds = %529
  %534 = getelementptr inbounds i8, i8* %394, i64 %2
  br i1 %10, label %535, label %625

535:                                              ; preds = %533
  %536 = getelementptr i8, i8* %394, i64 1
  %537 = icmp ugt i8* %534, %536
  %538 = select i1 %537, i8* %534, i8* %536
  %539 = ptrtoint i8* %538 to i64
  %540 = sub i64 %539, %396
  %541 = icmp ult i64 %540, 32
  br i1 %541, label %614, label %542

542:                                              ; preds = %535
  %543 = and i64 %540, -32
  %544 = getelementptr i8, i8* %394, i64 %543
  %545 = getelementptr i8, i8* %530, i64 %543
  %546 = add i64 %543, -32
  %547 = lshr exact i64 %546, 5
  %548 = add nuw nsw i64 %547, 1
  %549 = and i64 %548, 1
  %550 = icmp eq i64 %546, 0
  br i1 %550, label %592, label %551

551:                                              ; preds = %542
  %552 = sub nuw nsw i64 %548, %549
  br label %553

553:                                              ; preds = %553, %551
  %554 = phi i64 [ 0, %551 ], [ %589, %553 ]
  %555 = phi i64 [ %552, %551 ], [ %590, %553 ]
  %556 = getelementptr i8, i8* %394, i64 %554
  %557 = getelementptr i8, i8* %530, i64 %554
  %558 = bitcast i8* %556 to <16 x i8>*
  %559 = load <16 x i8>, <16 x i8>* %558, align 1, !alias.scope !45, !noalias !48
  %560 = getelementptr i8, i8* %556, i64 16
  %561 = bitcast i8* %560 to <16 x i8>*
  %562 = load <16 x i8>, <16 x i8>* %561, align 1, !alias.scope !45, !noalias !48
  %563 = bitcast i8* %557 to <16 x i8>*
  %564 = load <16 x i8>, <16 x i8>* %563, align 1, !alias.scope !48, !noalias !45
  %565 = getelementptr i8, i8* %557, i64 16
  %566 = bitcast i8* %565 to <16 x i8>*
  %567 = load <16 x i8>, <16 x i8>* %566, align 1, !alias.scope !48, !noalias !45
  %568 = bitcast i8* %556 to <16 x i8>*
  store <16 x i8> %564, <16 x i8>* %568, align 1, !alias.scope !45, !noalias !48
  %569 = bitcast i8* %560 to <16 x i8>*
  store <16 x i8> %567, <16 x i8>* %569, align 1, !alias.scope !45, !noalias !48
  %570 = bitcast i8* %557 to <16 x i8>*
  store <16 x i8> %559, <16 x i8>* %570, align 1, !alias.scope !48, !noalias !45
  %571 = bitcast i8* %565 to <16 x i8>*
  store <16 x i8> %562, <16 x i8>* %571, align 1, !alias.scope !48, !noalias !45
  %572 = or i64 %554, 32
  %573 = getelementptr i8, i8* %394, i64 %572
  %574 = getelementptr i8, i8* %530, i64 %572
  %575 = bitcast i8* %573 to <16 x i8>*
  %576 = load <16 x i8>, <16 x i8>* %575, align 1, !alias.scope !45, !noalias !48
  %577 = getelementptr i8, i8* %573, i64 16
  %578 = bitcast i8* %577 to <16 x i8>*
  %579 = load <16 x i8>, <16 x i8>* %578, align 1, !alias.scope !45, !noalias !48
  %580 = bitcast i8* %574 to <16 x i8>*
  %581 = load <16 x i8>, <16 x i8>* %580, align 1, !alias.scope !48, !noalias !45
  %582 = getelementptr i8, i8* %574, i64 16
  %583 = bitcast i8* %582 to <16 x i8>*
  %584 = load <16 x i8>, <16 x i8>* %583, align 1, !alias.scope !48, !noalias !45
  %585 = bitcast i8* %573 to <16 x i8>*
  store <16 x i8> %581, <16 x i8>* %585, align 1, !alias.scope !45, !noalias !48
  %586 = bitcast i8* %577 to <16 x i8>*
  store <16 x i8> %584, <16 x i8>* %586, align 1, !alias.scope !45, !noalias !48
  %587 = bitcast i8* %574 to <16 x i8>*
  store <16 x i8> %576, <16 x i8>* %587, align 1, !alias.scope !48, !noalias !45
  %588 = bitcast i8* %582 to <16 x i8>*
  store <16 x i8> %579, <16 x i8>* %588, align 1, !alias.scope !48, !noalias !45
  %589 = add i64 %554, 64
  %590 = add i64 %555, -2
  %591 = icmp eq i64 %590, 0
  br i1 %591, label %592, label %553, !llvm.loop !50

592:                                              ; preds = %553, %542
  %593 = phi i64 [ 0, %542 ], [ %589, %553 ]
  %594 = icmp eq i64 %549, 0
  br i1 %594, label %612, label %595

595:                                              ; preds = %592
  %596 = getelementptr i8, i8* %394, i64 %593
  %597 = getelementptr i8, i8* %530, i64 %593
  %598 = bitcast i8* %596 to <16 x i8>*
  %599 = load <16 x i8>, <16 x i8>* %598, align 1, !alias.scope !45, !noalias !48
  %600 = getelementptr i8, i8* %596, i64 16
  %601 = bitcast i8* %600 to <16 x i8>*
  %602 = load <16 x i8>, <16 x i8>* %601, align 1, !alias.scope !45, !noalias !48
  %603 = bitcast i8* %597 to <16 x i8>*
  %604 = load <16 x i8>, <16 x i8>* %603, align 1, !alias.scope !48, !noalias !45
  %605 = getelementptr i8, i8* %597, i64 16
  %606 = bitcast i8* %605 to <16 x i8>*
  %607 = load <16 x i8>, <16 x i8>* %606, align 1, !alias.scope !48, !noalias !45
  %608 = bitcast i8* %596 to <16 x i8>*
  store <16 x i8> %604, <16 x i8>* %608, align 1, !alias.scope !45, !noalias !48
  %609 = bitcast i8* %600 to <16 x i8>*
  store <16 x i8> %607, <16 x i8>* %609, align 1, !alias.scope !45, !noalias !48
  %610 = bitcast i8* %597 to <16 x i8>*
  store <16 x i8> %599, <16 x i8>* %610, align 1, !alias.scope !48, !noalias !45
  %611 = bitcast i8* %605 to <16 x i8>*
  store <16 x i8> %602, <16 x i8>* %611, align 1, !alias.scope !48, !noalias !45
  br label %612

612:                                              ; preds = %592, %595
  %613 = icmp eq i64 %540, %543
  br i1 %613, label %625, label %614

614:                                              ; preds = %612, %535
  %615 = phi i8* [ %394, %535 ], [ %544, %612 ]
  %616 = phi i8* [ %530, %535 ], [ %545, %612 ]
  br label %617

617:                                              ; preds = %614, %617
  %618 = phi i8* [ %622, %617 ], [ %615, %614 ]
  %619 = phi i8* [ %623, %617 ], [ %616, %614 ]
  %620 = load i8, i8* %618, align 1, !alias.scope !45, !noalias !48
  %621 = load i8, i8* %619, align 1, !alias.scope !48, !noalias !45
  store i8 %621, i8* %618, align 1, !alias.scope !45, !noalias !48
  store i8 %620, i8* %619, align 1, !alias.scope !48, !noalias !45
  %622 = getelementptr inbounds i8, i8* %618, i64 1
  %623 = getelementptr inbounds i8, i8* %619, i64 1
  %624 = icmp ult i8* %622, %534
  br i1 %624, label %617, label %625, !llvm.loop !51

625:                                              ; preds = %617, %612, %533, %529
  %626 = getelementptr inbounds i8, i8* %394, i64 %2
  br label %630

627:                                              ; preds = %525, %527
  %628 = phi i8* [ %526, %525 ], [ %520, %527 ]
  %629 = icmp ult i8* %394, %522
  br i1 %629, label %519, label %630

630:                                              ; preds = %627, %509, %393, %625
  %631 = phi i8* [ %531, %625 ], [ %274, %393 ], [ %510, %509 ], [ %628, %627 ]
  %632 = phi i8* [ %626, %625 ], [ %394, %393 ], [ %394, %509 ], [ %394, %627 ]
  %633 = phi i8* [ %530, %625 ], [ %275, %393 ], [ %415, %509 ], [ %522, %627 ]
  %634 = icmp ult i8* %632, %633
  br i1 %634, label %273, label %635

635:                                              ; preds = %630, %273, %513, %384, %271
  %636 = phi i8* [ %159, %271 ], [ %275, %384 ], [ %275, %513 ], [ %275, %273 ], [ %633, %630 ]
  %637 = phi i8* [ %159, %271 ], [ %274, %384 ], [ %274, %513 ], [ %274, %273 ], [ %631, %630 ]
  %638 = phi i8* [ %155, %271 ], [ %385, %384 ], [ %516, %513 ], [ %276, %273 ], [ %395, %630 ]
  %639 = ptrtoint i8* %636 to i64
  %640 = ptrtoint i8* %638 to i64
  %641 = sub i64 %640, %156
  %642 = sub i64 %639, %640
  %643 = icmp ne i64 %641, 0
  %644 = icmp ne i64 %642, 0
  %645 = and i1 %643, %644
  br i1 %645, label %646, label %834

646:                                              ; preds = %635
  %647 = icmp ugt i64 %641, %642
  br i1 %647, label %648, label %741

648:                                              ; preds = %646
  %649 = getelementptr inbounds i8, i8* %155, i64 %642
  %650 = icmp sgt i64 %642, 0
  br i1 %650, label %651, label %834

651:                                              ; preds = %648
  %652 = getelementptr i8, i8* %155, i64 1
  %653 = icmp ugt i8* %649, %652
  %654 = select i1 %653, i8* %649, i8* %652
  %655 = ptrtoint i8* %654 to i64
  %656 = sub i64 %655, %156
  %657 = icmp ult i64 %656, 32
  br i1 %657, label %730, label %658

658:                                              ; preds = %651
  %659 = and i64 %656, -32
  %660 = getelementptr i8, i8* %155, i64 %659
  %661 = getelementptr i8, i8* %638, i64 %659
  %662 = add i64 %659, -32
  %663 = lshr exact i64 %662, 5
  %664 = add nuw nsw i64 %663, 1
  %665 = and i64 %664, 1
  %666 = icmp eq i64 %662, 0
  br i1 %666, label %708, label %667

667:                                              ; preds = %658
  %668 = sub nuw nsw i64 %664, %665
  br label %669

669:                                              ; preds = %669, %667
  %670 = phi i64 [ 0, %667 ], [ %705, %669 ]
  %671 = phi i64 [ %668, %667 ], [ %706, %669 ]
  %672 = getelementptr i8, i8* %155, i64 %670
  %673 = getelementptr i8, i8* %638, i64 %670
  %674 = bitcast i8* %672 to <16 x i8>*
  %675 = load <16 x i8>, <16 x i8>* %674, align 1, !alias.scope !52, !noalias !55
  %676 = getelementptr i8, i8* %672, i64 16
  %677 = bitcast i8* %676 to <16 x i8>*
  %678 = load <16 x i8>, <16 x i8>* %677, align 1, !alias.scope !52, !noalias !55
  %679 = bitcast i8* %673 to <16 x i8>*
  %680 = load <16 x i8>, <16 x i8>* %679, align 1, !alias.scope !55, !noalias !52
  %681 = getelementptr i8, i8* %673, i64 16
  %682 = bitcast i8* %681 to <16 x i8>*
  %683 = load <16 x i8>, <16 x i8>* %682, align 1, !alias.scope !55, !noalias !52
  %684 = bitcast i8* %672 to <16 x i8>*
  store <16 x i8> %680, <16 x i8>* %684, align 1, !alias.scope !52, !noalias !55
  %685 = bitcast i8* %676 to <16 x i8>*
  store <16 x i8> %683, <16 x i8>* %685, align 1, !alias.scope !52, !noalias !55
  %686 = bitcast i8* %673 to <16 x i8>*
  store <16 x i8> %675, <16 x i8>* %686, align 1, !alias.scope !55, !noalias !52
  %687 = bitcast i8* %681 to <16 x i8>*
  store <16 x i8> %678, <16 x i8>* %687, align 1, !alias.scope !55, !noalias !52
  %688 = or i64 %670, 32
  %689 = getelementptr i8, i8* %155, i64 %688
  %690 = getelementptr i8, i8* %638, i64 %688
  %691 = bitcast i8* %689 to <16 x i8>*
  %692 = load <16 x i8>, <16 x i8>* %691, align 1, !alias.scope !52, !noalias !55
  %693 = getelementptr i8, i8* %689, i64 16
  %694 = bitcast i8* %693 to <16 x i8>*
  %695 = load <16 x i8>, <16 x i8>* %694, align 1, !alias.scope !52, !noalias !55
  %696 = bitcast i8* %690 to <16 x i8>*
  %697 = load <16 x i8>, <16 x i8>* %696, align 1, !alias.scope !55, !noalias !52
  %698 = getelementptr i8, i8* %690, i64 16
  %699 = bitcast i8* %698 to <16 x i8>*
  %700 = load <16 x i8>, <16 x i8>* %699, align 1, !alias.scope !55, !noalias !52
  %701 = bitcast i8* %689 to <16 x i8>*
  store <16 x i8> %697, <16 x i8>* %701, align 1, !alias.scope !52, !noalias !55
  %702 = bitcast i8* %693 to <16 x i8>*
  store <16 x i8> %700, <16 x i8>* %702, align 1, !alias.scope !52, !noalias !55
  %703 = bitcast i8* %690 to <16 x i8>*
  store <16 x i8> %692, <16 x i8>* %703, align 1, !alias.scope !55, !noalias !52
  %704 = bitcast i8* %698 to <16 x i8>*
  store <16 x i8> %695, <16 x i8>* %704, align 1, !alias.scope !55, !noalias !52
  %705 = add i64 %670, 64
  %706 = add i64 %671, -2
  %707 = icmp eq i64 %706, 0
  br i1 %707, label %708, label %669, !llvm.loop !57

708:                                              ; preds = %669, %658
  %709 = phi i64 [ 0, %658 ], [ %705, %669 ]
  %710 = icmp eq i64 %665, 0
  br i1 %710, label %728, label %711

711:                                              ; preds = %708
  %712 = getelementptr i8, i8* %155, i64 %709
  %713 = getelementptr i8, i8* %638, i64 %709
  %714 = bitcast i8* %712 to <16 x i8>*
  %715 = load <16 x i8>, <16 x i8>* %714, align 1, !alias.scope !52, !noalias !55
  %716 = getelementptr i8, i8* %712, i64 16
  %717 = bitcast i8* %716 to <16 x i8>*
  %718 = load <16 x i8>, <16 x i8>* %717, align 1, !alias.scope !52, !noalias !55
  %719 = bitcast i8* %713 to <16 x i8>*
  %720 = load <16 x i8>, <16 x i8>* %719, align 1, !alias.scope !55, !noalias !52
  %721 = getelementptr i8, i8* %713, i64 16
  %722 = bitcast i8* %721 to <16 x i8>*
  %723 = load <16 x i8>, <16 x i8>* %722, align 1, !alias.scope !55, !noalias !52
  %724 = bitcast i8* %712 to <16 x i8>*
  store <16 x i8> %720, <16 x i8>* %724, align 1, !alias.scope !52, !noalias !55
  %725 = bitcast i8* %716 to <16 x i8>*
  store <16 x i8> %723, <16 x i8>* %725, align 1, !alias.scope !52, !noalias !55
  %726 = bitcast i8* %713 to <16 x i8>*
  store <16 x i8> %715, <16 x i8>* %726, align 1, !alias.scope !55, !noalias !52
  %727 = bitcast i8* %721 to <16 x i8>*
  store <16 x i8> %718, <16 x i8>* %727, align 1, !alias.scope !55, !noalias !52
  br label %728

728:                                              ; preds = %708, %711
  %729 = icmp eq i64 %656, %659
  br i1 %729, label %834, label %730

730:                                              ; preds = %728, %651
  %731 = phi i8* [ %155, %651 ], [ %660, %728 ]
  %732 = phi i8* [ %638, %651 ], [ %661, %728 ]
  br label %733

733:                                              ; preds = %730, %733
  %734 = phi i8* [ %738, %733 ], [ %731, %730 ]
  %735 = phi i8* [ %739, %733 ], [ %732, %730 ]
  %736 = load i8, i8* %734, align 1, !alias.scope !52, !noalias !55
  %737 = load i8, i8* %735, align 1, !alias.scope !55, !noalias !52
  store i8 %737, i8* %734, align 1, !alias.scope !52, !noalias !55
  store i8 %736, i8* %735, align 1, !alias.scope !55, !noalias !52
  %738 = getelementptr inbounds i8, i8* %734, i64 1
  %739 = getelementptr inbounds i8, i8* %735, i64 1
  %740 = icmp ult i8* %738, %649
  br i1 %740, label %733, label %834, !llvm.loop !58

741:                                              ; preds = %646
  %742 = icmp sgt i64 %641, 0
  br i1 %742, label %743, label %834

743:                                              ; preds = %741
  %744 = getelementptr inbounds i8, i8* %155, i64 %642
  %745 = getelementptr i8, i8* %155, i64 1
  %746 = icmp ugt i8* %638, %745
  %747 = select i1 %746, i8* %638, i8* %745
  %748 = ptrtoint i8* %747 to i64
  %749 = sub i64 %748, %156
  %750 = icmp ult i64 %749, 32
  br i1 %750, label %823, label %751

751:                                              ; preds = %743
  %752 = and i64 %749, -32
  %753 = getelementptr i8, i8* %155, i64 %752
  %754 = getelementptr i8, i8* %744, i64 %752
  %755 = add i64 %752, -32
  %756 = lshr exact i64 %755, 5
  %757 = add nuw nsw i64 %756, 1
  %758 = and i64 %757, 1
  %759 = icmp eq i64 %755, 0
  br i1 %759, label %801, label %760

760:                                              ; preds = %751
  %761 = sub nuw nsw i64 %757, %758
  br label %762

762:                                              ; preds = %762, %760
  %763 = phi i64 [ 0, %760 ], [ %798, %762 ]
  %764 = phi i64 [ %761, %760 ], [ %799, %762 ]
  %765 = getelementptr i8, i8* %155, i64 %763
  %766 = getelementptr i8, i8* %744, i64 %763
  %767 = bitcast i8* %765 to <16 x i8>*
  %768 = load <16 x i8>, <16 x i8>* %767, align 1, !alias.scope !59, !noalias !62
  %769 = getelementptr i8, i8* %765, i64 16
  %770 = bitcast i8* %769 to <16 x i8>*
  %771 = load <16 x i8>, <16 x i8>* %770, align 1, !alias.scope !59, !noalias !62
  %772 = bitcast i8* %766 to <16 x i8>*
  %773 = load <16 x i8>, <16 x i8>* %772, align 1, !alias.scope !62, !noalias !59
  %774 = getelementptr i8, i8* %766, i64 16
  %775 = bitcast i8* %774 to <16 x i8>*
  %776 = load <16 x i8>, <16 x i8>* %775, align 1, !alias.scope !62, !noalias !59
  %777 = bitcast i8* %765 to <16 x i8>*
  store <16 x i8> %773, <16 x i8>* %777, align 1, !alias.scope !59, !noalias !62
  %778 = bitcast i8* %769 to <16 x i8>*
  store <16 x i8> %776, <16 x i8>* %778, align 1, !alias.scope !59, !noalias !62
  %779 = bitcast i8* %766 to <16 x i8>*
  store <16 x i8> %768, <16 x i8>* %779, align 1, !alias.scope !62, !noalias !59
  %780 = bitcast i8* %774 to <16 x i8>*
  store <16 x i8> %771, <16 x i8>* %780, align 1, !alias.scope !62, !noalias !59
  %781 = or i64 %763, 32
  %782 = getelementptr i8, i8* %155, i64 %781
  %783 = getelementptr i8, i8* %744, i64 %781
  %784 = bitcast i8* %782 to <16 x i8>*
  %785 = load <16 x i8>, <16 x i8>* %784, align 1, !alias.scope !59, !noalias !62
  %786 = getelementptr i8, i8* %782, i64 16
  %787 = bitcast i8* %786 to <16 x i8>*
  %788 = load <16 x i8>, <16 x i8>* %787, align 1, !alias.scope !59, !noalias !62
  %789 = bitcast i8* %783 to <16 x i8>*
  %790 = load <16 x i8>, <16 x i8>* %789, align 1, !alias.scope !62, !noalias !59
  %791 = getelementptr i8, i8* %783, i64 16
  %792 = bitcast i8* %791 to <16 x i8>*
  %793 = load <16 x i8>, <16 x i8>* %792, align 1, !alias.scope !62, !noalias !59
  %794 = bitcast i8* %782 to <16 x i8>*
  store <16 x i8> %790, <16 x i8>* %794, align 1, !alias.scope !59, !noalias !62
  %795 = bitcast i8* %786 to <16 x i8>*
  store <16 x i8> %793, <16 x i8>* %795, align 1, !alias.scope !59, !noalias !62
  %796 = bitcast i8* %783 to <16 x i8>*
  store <16 x i8> %785, <16 x i8>* %796, align 1, !alias.scope !62, !noalias !59
  %797 = bitcast i8* %791 to <16 x i8>*
  store <16 x i8> %788, <16 x i8>* %797, align 1, !alias.scope !62, !noalias !59
  %798 = add i64 %763, 64
  %799 = add i64 %764, -2
  %800 = icmp eq i64 %799, 0
  br i1 %800, label %801, label %762, !llvm.loop !64

801:                                              ; preds = %762, %751
  %802 = phi i64 [ 0, %751 ], [ %798, %762 ]
  %803 = icmp eq i64 %758, 0
  br i1 %803, label %821, label %804

804:                                              ; preds = %801
  %805 = getelementptr i8, i8* %155, i64 %802
  %806 = getelementptr i8, i8* %744, i64 %802
  %807 = bitcast i8* %805 to <16 x i8>*
  %808 = load <16 x i8>, <16 x i8>* %807, align 1, !alias.scope !59, !noalias !62
  %809 = getelementptr i8, i8* %805, i64 16
  %810 = bitcast i8* %809 to <16 x i8>*
  %811 = load <16 x i8>, <16 x i8>* %810, align 1, !alias.scope !59, !noalias !62
  %812 = bitcast i8* %806 to <16 x i8>*
  %813 = load <16 x i8>, <16 x i8>* %812, align 1, !alias.scope !62, !noalias !59
  %814 = getelementptr i8, i8* %806, i64 16
  %815 = bitcast i8* %814 to <16 x i8>*
  %816 = load <16 x i8>, <16 x i8>* %815, align 1, !alias.scope !62, !noalias !59
  %817 = bitcast i8* %805 to <16 x i8>*
  store <16 x i8> %813, <16 x i8>* %817, align 1, !alias.scope !59, !noalias !62
  %818 = bitcast i8* %809 to <16 x i8>*
  store <16 x i8> %816, <16 x i8>* %818, align 1, !alias.scope !59, !noalias !62
  %819 = bitcast i8* %806 to <16 x i8>*
  store <16 x i8> %808, <16 x i8>* %819, align 1, !alias.scope !62, !noalias !59
  %820 = bitcast i8* %814 to <16 x i8>*
  store <16 x i8> %811, <16 x i8>* %820, align 1, !alias.scope !62, !noalias !59
  br label %821

821:                                              ; preds = %801, %804
  %822 = icmp eq i64 %749, %752
  br i1 %822, label %834, label %823

823:                                              ; preds = %821, %743
  %824 = phi i8* [ %155, %743 ], [ %753, %821 ]
  %825 = phi i8* [ %744, %743 ], [ %754, %821 ]
  br label %826

826:                                              ; preds = %823, %826
  %827 = phi i8* [ %831, %826 ], [ %824, %823 ]
  %828 = phi i8* [ %832, %826 ], [ %825, %823 ]
  %829 = load i8, i8* %827, align 1, !alias.scope !59, !noalias !62
  %830 = load i8, i8* %828, align 1, !alias.scope !62, !noalias !59
  store i8 %830, i8* %827, align 1, !alias.scope !59, !noalias !62
  store i8 %829, i8* %828, align 1, !alias.scope !62, !noalias !59
  %831 = getelementptr inbounds i8, i8* %827, i64 1
  %832 = getelementptr inbounds i8, i8* %828, i64 1
  %833 = icmp ult i8* %831, %638
  br i1 %833, label %826, label %834, !llvm.loop !65

834:                                              ; preds = %826, %733, %821, %728, %635, %648, %741
  %835 = ptrtoint i8* %637 to i64
  %836 = sub i64 %835, %639
  %837 = ptrtoint i8* %153 to i64
  %838 = sub i64 %837, %835
  %839 = icmp ne i64 %836, 0
  %840 = icmp ne i64 %838, 0
  %841 = and i1 %839, %840
  br i1 %841, label %842, label %1030

842:                                              ; preds = %834
  %843 = icmp ugt i64 %836, %838
  br i1 %843, label %844, label %937

844:                                              ; preds = %842
  %845 = getelementptr inbounds i8, i8* %636, i64 %838
  %846 = icmp sgt i64 %838, 0
  br i1 %846, label %847, label %1030

847:                                              ; preds = %844
  %848 = getelementptr i8, i8* %636, i64 1
  %849 = icmp ugt i8* %845, %848
  %850 = select i1 %849, i8* %845, i8* %848
  %851 = ptrtoint i8* %850 to i64
  %852 = sub i64 %851, %639
  %853 = icmp ult i64 %852, 32
  br i1 %853, label %926, label %854

854:                                              ; preds = %847
  %855 = and i64 %852, -32
  %856 = getelementptr i8, i8* %636, i64 %855
  %857 = getelementptr i8, i8* %637, i64 %855
  %858 = add i64 %855, -32
  %859 = lshr exact i64 %858, 5
  %860 = add nuw nsw i64 %859, 1
  %861 = and i64 %860, 1
  %862 = icmp eq i64 %858, 0
  br i1 %862, label %904, label %863

863:                                              ; preds = %854
  %864 = sub nuw nsw i64 %860, %861
  br label %865

865:                                              ; preds = %865, %863
  %866 = phi i64 [ 0, %863 ], [ %901, %865 ]
  %867 = phi i64 [ %864, %863 ], [ %902, %865 ]
  %868 = getelementptr i8, i8* %636, i64 %866
  %869 = getelementptr i8, i8* %637, i64 %866
  %870 = bitcast i8* %868 to <16 x i8>*
  %871 = load <16 x i8>, <16 x i8>* %870, align 1, !alias.scope !66, !noalias !69
  %872 = getelementptr i8, i8* %868, i64 16
  %873 = bitcast i8* %872 to <16 x i8>*
  %874 = load <16 x i8>, <16 x i8>* %873, align 1, !alias.scope !66, !noalias !69
  %875 = bitcast i8* %869 to <16 x i8>*
  %876 = load <16 x i8>, <16 x i8>* %875, align 1, !alias.scope !69, !noalias !66
  %877 = getelementptr i8, i8* %869, i64 16
  %878 = bitcast i8* %877 to <16 x i8>*
  %879 = load <16 x i8>, <16 x i8>* %878, align 1, !alias.scope !69, !noalias !66
  %880 = bitcast i8* %868 to <16 x i8>*
  store <16 x i8> %876, <16 x i8>* %880, align 1, !alias.scope !66, !noalias !69
  %881 = bitcast i8* %872 to <16 x i8>*
  store <16 x i8> %879, <16 x i8>* %881, align 1, !alias.scope !66, !noalias !69
  %882 = bitcast i8* %869 to <16 x i8>*
  store <16 x i8> %871, <16 x i8>* %882, align 1, !alias.scope !69, !noalias !66
  %883 = bitcast i8* %877 to <16 x i8>*
  store <16 x i8> %874, <16 x i8>* %883, align 1, !alias.scope !69, !noalias !66
  %884 = or i64 %866, 32
  %885 = getelementptr i8, i8* %636, i64 %884
  %886 = getelementptr i8, i8* %637, i64 %884
  %887 = bitcast i8* %885 to <16 x i8>*
  %888 = load <16 x i8>, <16 x i8>* %887, align 1, !alias.scope !66, !noalias !69
  %889 = getelementptr i8, i8* %885, i64 16
  %890 = bitcast i8* %889 to <16 x i8>*
  %891 = load <16 x i8>, <16 x i8>* %890, align 1, !alias.scope !66, !noalias !69
  %892 = bitcast i8* %886 to <16 x i8>*
  %893 = load <16 x i8>, <16 x i8>* %892, align 1, !alias.scope !69, !noalias !66
  %894 = getelementptr i8, i8* %886, i64 16
  %895 = bitcast i8* %894 to <16 x i8>*
  %896 = load <16 x i8>, <16 x i8>* %895, align 1, !alias.scope !69, !noalias !66
  %897 = bitcast i8* %885 to <16 x i8>*
  store <16 x i8> %893, <16 x i8>* %897, align 1, !alias.scope !66, !noalias !69
  %898 = bitcast i8* %889 to <16 x i8>*
  store <16 x i8> %896, <16 x i8>* %898, align 1, !alias.scope !66, !noalias !69
  %899 = bitcast i8* %886 to <16 x i8>*
  store <16 x i8> %888, <16 x i8>* %899, align 1, !alias.scope !69, !noalias !66
  %900 = bitcast i8* %894 to <16 x i8>*
  store <16 x i8> %891, <16 x i8>* %900, align 1, !alias.scope !69, !noalias !66
  %901 = add i64 %866, 64
  %902 = add i64 %867, -2
  %903 = icmp eq i64 %902, 0
  br i1 %903, label %904, label %865, !llvm.loop !71

904:                                              ; preds = %865, %854
  %905 = phi i64 [ 0, %854 ], [ %901, %865 ]
  %906 = icmp eq i64 %861, 0
  br i1 %906, label %924, label %907

907:                                              ; preds = %904
  %908 = getelementptr i8, i8* %636, i64 %905
  %909 = getelementptr i8, i8* %637, i64 %905
  %910 = bitcast i8* %908 to <16 x i8>*
  %911 = load <16 x i8>, <16 x i8>* %910, align 1, !alias.scope !66, !noalias !69
  %912 = getelementptr i8, i8* %908, i64 16
  %913 = bitcast i8* %912 to <16 x i8>*
  %914 = load <16 x i8>, <16 x i8>* %913, align 1, !alias.scope !66, !noalias !69
  %915 = bitcast i8* %909 to <16 x i8>*
  %916 = load <16 x i8>, <16 x i8>* %915, align 1, !alias.scope !69, !noalias !66
  %917 = getelementptr i8, i8* %909, i64 16
  %918 = bitcast i8* %917 to <16 x i8>*
  %919 = load <16 x i8>, <16 x i8>* %918, align 1, !alias.scope !69, !noalias !66
  %920 = bitcast i8* %908 to <16 x i8>*
  store <16 x i8> %916, <16 x i8>* %920, align 1, !alias.scope !66, !noalias !69
  %921 = bitcast i8* %912 to <16 x i8>*
  store <16 x i8> %919, <16 x i8>* %921, align 1, !alias.scope !66, !noalias !69
  %922 = bitcast i8* %909 to <16 x i8>*
  store <16 x i8> %911, <16 x i8>* %922, align 1, !alias.scope !69, !noalias !66
  %923 = bitcast i8* %917 to <16 x i8>*
  store <16 x i8> %914, <16 x i8>* %923, align 1, !alias.scope !69, !noalias !66
  br label %924

924:                                              ; preds = %904, %907
  %925 = icmp eq i64 %852, %855
  br i1 %925, label %1030, label %926

926:                                              ; preds = %924, %847
  %927 = phi i8* [ %636, %847 ], [ %856, %924 ]
  %928 = phi i8* [ %637, %847 ], [ %857, %924 ]
  br label %929

929:                                              ; preds = %926, %929
  %930 = phi i8* [ %934, %929 ], [ %927, %926 ]
  %931 = phi i8* [ %935, %929 ], [ %928, %926 ]
  %932 = load i8, i8* %930, align 1, !alias.scope !66, !noalias !69
  %933 = load i8, i8* %931, align 1, !alias.scope !69, !noalias !66
  store i8 %933, i8* %930, align 1, !alias.scope !66, !noalias !69
  store i8 %932, i8* %931, align 1, !alias.scope !69, !noalias !66
  %934 = getelementptr inbounds i8, i8* %930, i64 1
  %935 = getelementptr inbounds i8, i8* %931, i64 1
  %936 = icmp ult i8* %934, %845
  br i1 %936, label %929, label %1030, !llvm.loop !72

937:                                              ; preds = %842
  %938 = icmp sgt i64 %836, 0
  br i1 %938, label %939, label %1030

939:                                              ; preds = %937
  %940 = getelementptr inbounds i8, i8* %636, i64 %838
  %941 = getelementptr i8, i8* %636, i64 1
  %942 = icmp ugt i8* %637, %941
  %943 = select i1 %942, i8* %637, i8* %941
  %944 = ptrtoint i8* %943 to i64
  %945 = sub i64 %944, %639
  %946 = icmp ult i64 %945, 32
  br i1 %946, label %1019, label %947

947:                                              ; preds = %939
  %948 = and i64 %945, -32
  %949 = getelementptr i8, i8* %636, i64 %948
  %950 = getelementptr i8, i8* %940, i64 %948
  %951 = add i64 %948, -32
  %952 = lshr exact i64 %951, 5
  %953 = add nuw nsw i64 %952, 1
  %954 = and i64 %953, 1
  %955 = icmp eq i64 %951, 0
  br i1 %955, label %997, label %956

956:                                              ; preds = %947
  %957 = sub nuw nsw i64 %953, %954
  br label %958

958:                                              ; preds = %958, %956
  %959 = phi i64 [ 0, %956 ], [ %994, %958 ]
  %960 = phi i64 [ %957, %956 ], [ %995, %958 ]
  %961 = getelementptr i8, i8* %636, i64 %959
  %962 = getelementptr i8, i8* %940, i64 %959
  %963 = bitcast i8* %961 to <16 x i8>*
  %964 = load <16 x i8>, <16 x i8>* %963, align 1, !alias.scope !73, !noalias !76
  %965 = getelementptr i8, i8* %961, i64 16
  %966 = bitcast i8* %965 to <16 x i8>*
  %967 = load <16 x i8>, <16 x i8>* %966, align 1, !alias.scope !73, !noalias !76
  %968 = bitcast i8* %962 to <16 x i8>*
  %969 = load <16 x i8>, <16 x i8>* %968, align 1, !alias.scope !76, !noalias !73
  %970 = getelementptr i8, i8* %962, i64 16
  %971 = bitcast i8* %970 to <16 x i8>*
  %972 = load <16 x i8>, <16 x i8>* %971, align 1, !alias.scope !76, !noalias !73
  %973 = bitcast i8* %961 to <16 x i8>*
  store <16 x i8> %969, <16 x i8>* %973, align 1, !alias.scope !73, !noalias !76
  %974 = bitcast i8* %965 to <16 x i8>*
  store <16 x i8> %972, <16 x i8>* %974, align 1, !alias.scope !73, !noalias !76
  %975 = bitcast i8* %962 to <16 x i8>*
  store <16 x i8> %964, <16 x i8>* %975, align 1, !alias.scope !76, !noalias !73
  %976 = bitcast i8* %970 to <16 x i8>*
  store <16 x i8> %967, <16 x i8>* %976, align 1, !alias.scope !76, !noalias !73
  %977 = or i64 %959, 32
  %978 = getelementptr i8, i8* %636, i64 %977
  %979 = getelementptr i8, i8* %940, i64 %977
  %980 = bitcast i8* %978 to <16 x i8>*
  %981 = load <16 x i8>, <16 x i8>* %980, align 1, !alias.scope !73, !noalias !76
  %982 = getelementptr i8, i8* %978, i64 16
  %983 = bitcast i8* %982 to <16 x i8>*
  %984 = load <16 x i8>, <16 x i8>* %983, align 1, !alias.scope !73, !noalias !76
  %985 = bitcast i8* %979 to <16 x i8>*
  %986 = load <16 x i8>, <16 x i8>* %985, align 1, !alias.scope !76, !noalias !73
  %987 = getelementptr i8, i8* %979, i64 16
  %988 = bitcast i8* %987 to <16 x i8>*
  %989 = load <16 x i8>, <16 x i8>* %988, align 1, !alias.scope !76, !noalias !73
  %990 = bitcast i8* %978 to <16 x i8>*
  store <16 x i8> %986, <16 x i8>* %990, align 1, !alias.scope !73, !noalias !76
  %991 = bitcast i8* %982 to <16 x i8>*
  store <16 x i8> %989, <16 x i8>* %991, align 1, !alias.scope !73, !noalias !76
  %992 = bitcast i8* %979 to <16 x i8>*
  store <16 x i8> %981, <16 x i8>* %992, align 1, !alias.scope !76, !noalias !73
  %993 = bitcast i8* %987 to <16 x i8>*
  store <16 x i8> %984, <16 x i8>* %993, align 1, !alias.scope !76, !noalias !73
  %994 = add i64 %959, 64
  %995 = add i64 %960, -2
  %996 = icmp eq i64 %995, 0
  br i1 %996, label %997, label %958, !llvm.loop !78

997:                                              ; preds = %958, %947
  %998 = phi i64 [ 0, %947 ], [ %994, %958 ]
  %999 = icmp eq i64 %954, 0
  br i1 %999, label %1017, label %1000

1000:                                             ; preds = %997
  %1001 = getelementptr i8, i8* %636, i64 %998
  %1002 = getelementptr i8, i8* %940, i64 %998
  %1003 = bitcast i8* %1001 to <16 x i8>*
  %1004 = load <16 x i8>, <16 x i8>* %1003, align 1, !alias.scope !73, !noalias !76
  %1005 = getelementptr i8, i8* %1001, i64 16
  %1006 = bitcast i8* %1005 to <16 x i8>*
  %1007 = load <16 x i8>, <16 x i8>* %1006, align 1, !alias.scope !73, !noalias !76
  %1008 = bitcast i8* %1002 to <16 x i8>*
  %1009 = load <16 x i8>, <16 x i8>* %1008, align 1, !alias.scope !76, !noalias !73
  %1010 = getelementptr i8, i8* %1002, i64 16
  %1011 = bitcast i8* %1010 to <16 x i8>*
  %1012 = load <16 x i8>, <16 x i8>* %1011, align 1, !alias.scope !76, !noalias !73
  %1013 = bitcast i8* %1001 to <16 x i8>*
  store <16 x i8> %1009, <16 x i8>* %1013, align 1, !alias.scope !73, !noalias !76
  %1014 = bitcast i8* %1005 to <16 x i8>*
  store <16 x i8> %1012, <16 x i8>* %1014, align 1, !alias.scope !73, !noalias !76
  %1015 = bitcast i8* %1002 to <16 x i8>*
  store <16 x i8> %1004, <16 x i8>* %1015, align 1, !alias.scope !76, !noalias !73
  %1016 = bitcast i8* %1010 to <16 x i8>*
  store <16 x i8> %1007, <16 x i8>* %1016, align 1, !alias.scope !76, !noalias !73
  br label %1017

1017:                                             ; preds = %997, %1000
  %1018 = icmp eq i64 %945, %948
  br i1 %1018, label %1030, label %1019

1019:                                             ; preds = %1017, %939
  %1020 = phi i8* [ %636, %939 ], [ %949, %1017 ]
  %1021 = phi i8* [ %940, %939 ], [ %950, %1017 ]
  br label %1022

1022:                                             ; preds = %1019, %1022
  %1023 = phi i8* [ %1027, %1022 ], [ %1020, %1019 ]
  %1024 = phi i8* [ %1028, %1022 ], [ %1021, %1019 ]
  %1025 = load i8, i8* %1023, align 1, !alias.scope !73, !noalias !76
  %1026 = load i8, i8* %1024, align 1, !alias.scope !76, !noalias !73
  store i8 %1026, i8* %1023, align 1, !alias.scope !73, !noalias !76
  store i8 %1025, i8* %1024, align 1, !alias.scope !76, !noalias !73
  %1027 = getelementptr inbounds i8, i8* %1023, i64 1
  %1028 = getelementptr inbounds i8, i8* %1024, i64 1
  %1029 = icmp ult i8* %1027, %637
  br i1 %1029, label %1022, label %1030, !llvm.loop !79

1030:                                             ; preds = %1022, %929, %1017, %924, %834, %844, %937
  %1031 = udiv i64 %642, %2
  tail call fastcc void @_ZL13sort_r_simpleIJEEvPvmmPFiPKvS2_DpT_ES4_(i8* %155, i64 %1031, i64 %2, i32 (i8*, i8*)* %3)
  %1032 = sub i64 0, %836
  %1033 = getelementptr inbounds i8, i8* %153, i64 %1032
  %1034 = udiv i64 %836, %2
  %1035 = mul i64 %1034, %2
  %1036 = getelementptr inbounds i8, i8* %1033, i64 %1035
  %1037 = icmp ult i64 %1034, 10
  br i1 %1037, label %12, label %152

1038:                                             ; preds = %149, %30, %12
  ret void
}

; Function Attrs: nofree nounwind readonly
declare i32 @strcmp(i8* nocapture, i8* nocapture) local_unnamed_addr #7

declare i8* @hb_language_to_string(%struct.hb_language_impl_t*) local_unnamed_addr #3

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

; Function Attrs: nounwind
declare void @free(i8* nocapture) local_unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK2OT4name13accelerator_t9get_indexEjPK18hb_language_impl_tPj(%"struct.OT::name::accelerator_t"*, i32, %struct.hb_language_impl_t*, i32*) local_unnamed_addr #0 comdat align 2 {
  %5 = getelementptr inbounds %"struct.OT::name::accelerator_t", %"struct.OT::name::accelerator_t"* %0, i64 0, i32 3, i32 2
  %6 = load %struct.hb_ot_name_entry_t*, %struct.hb_ot_name_entry_t** %5, align 8
  %7 = getelementptr inbounds %"struct.OT::name::accelerator_t", %"struct.OT::name::accelerator_t"* %0, i64 0, i32 3, i32 1
  %8 = load i32, i32* %7, align 4
  %9 = icmp slt i32 %8, 1
  br i1 %9, label %93, label %10

10:                                               ; preds = %4
  %11 = add nsw i32 %8, -1
  %12 = icmp eq %struct.hb_language_impl_t* %2, null
  br i1 %12, label %13, label %39

13:                                               ; preds = %10, %35
  %14 = phi i32 [ %37, %35 ], [ %11, %10 ]
  %15 = phi i32 [ %36, %35 ], [ 0, %10 ]
  %16 = add i32 %15, %14
  %17 = lshr i32 %16, 1
  %18 = zext i32 %17 to i64
  %19 = getelementptr inbounds %struct.hb_ot_name_entry_t, %struct.hb_ot_name_entry_t* %6, i64 %18, i32 0
  %20 = load i32, i32* %19, align 8
  %21 = icmp eq i32 %20, %1
  br i1 %21, label %25, label %22

22:                                               ; preds = %13
  %23 = sub i32 %1, %20
  %24 = icmp slt i32 %23, 0
  br i1 %24, label %33, label %29

25:                                               ; preds = %13
  %26 = getelementptr inbounds %struct.hb_ot_name_entry_t, %struct.hb_ot_name_entry_t* %6, i64 %18, i32 2
  %27 = load %struct.hb_language_impl_t*, %struct.hb_language_impl_t** %26, align 8
  %28 = icmp eq %struct.hb_language_impl_t* %27, null
  br i1 %28, label %74, label %33

29:                                               ; preds = %22
  %30 = icmp eq i32 %23, 0
  br i1 %30, label %74, label %31

31:                                               ; preds = %29
  %32 = add nuw nsw i32 %17, 1
  br label %35

33:                                               ; preds = %25, %22
  %34 = add nsw i32 %17, -1
  br label %35

35:                                               ; preds = %33, %31
  %36 = phi i32 [ %15, %33 ], [ %32, %31 ]
  %37 = phi i32 [ %34, %33 ], [ %14, %31 ]
  %38 = icmp sgt i32 %36, %37
  br i1 %38, label %93, label %13

39:                                               ; preds = %10, %70
  %40 = phi i32 [ %72, %70 ], [ %11, %10 ]
  %41 = phi i32 [ %71, %70 ], [ 0, %10 ]
  %42 = add i32 %41, %40
  %43 = lshr i32 %42, 1
  %44 = zext i32 %43 to i64
  %45 = getelementptr inbounds %struct.hb_ot_name_entry_t, %struct.hb_ot_name_entry_t* %6, i64 %44, i32 0
  %46 = load i32, i32* %45, align 8
  %47 = icmp eq i32 %46, %1
  br i1 %47, label %50, label %48

48:                                               ; preds = %39
  %49 = sub i32 %1, %46
  br label %61

50:                                               ; preds = %39
  %51 = getelementptr inbounds %struct.hb_ot_name_entry_t, %struct.hb_ot_name_entry_t* %6, i64 %44, i32 2
  %52 = load %struct.hb_language_impl_t*, %struct.hb_language_impl_t** %51, align 8
  %53 = icmp eq %struct.hb_language_impl_t* %52, %2
  br i1 %53, label %74, label %54

54:                                               ; preds = %50
  %55 = icmp eq %struct.hb_language_impl_t* %52, null
  br i1 %55, label %68, label %56

56:                                               ; preds = %54
  %57 = tail call i8* @hb_language_to_string(%struct.hb_language_impl_t* nonnull %2) #9
  %58 = load %struct.hb_language_impl_t*, %struct.hb_language_impl_t** %51, align 8
  %59 = tail call i8* @hb_language_to_string(%struct.hb_language_impl_t* %58) #9
  %60 = tail call i32 @strcmp(i8* %57, i8* %59) #10
  br label %61

61:                                               ; preds = %56, %48
  %62 = phi i32 [ %49, %48 ], [ %60, %56 ]
  %63 = icmp slt i32 %62, 0
  br i1 %63, label %64, label %66

64:                                               ; preds = %61
  %65 = add nsw i32 %43, -1
  br label %70

66:                                               ; preds = %61
  %67 = icmp eq i32 %62, 0
  br i1 %67, label %74, label %68

68:                                               ; preds = %66, %54
  %69 = add nuw nsw i32 %43, 1
  br label %70

70:                                               ; preds = %68, %64
  %71 = phi i32 [ %41, %64 ], [ %69, %68 ]
  %72 = phi i32 [ %65, %64 ], [ %40, %68 ]
  %73 = icmp sgt i32 %71, %72
  br i1 %73, label %93, label %39

74:                                               ; preds = %50, %66, %25, %29
  %75 = phi i32 [ %17, %29 ], [ %17, %25 ], [ %43, %66 ], [ %43, %50 ]
  %76 = zext i32 %75 to i64
  %77 = getelementptr inbounds %struct.hb_ot_name_entry_t, %struct.hb_ot_name_entry_t* %6, i64 %76
  %78 = icmp eq %struct.hb_ot_name_entry_t* %77, null
  br i1 %78, label %93, label %79

79:                                               ; preds = %74
  %80 = icmp eq i32* %3, null
  br i1 %80, label %87, label %81

81:                                               ; preds = %79
  %82 = getelementptr inbounds %struct.hb_ot_name_entry_t, %struct.hb_ot_name_entry_t* %6, i64 %76, i32 1
  %83 = bitcast %union._hb_var_int_t* %82 to i16*
  %84 = load i16, i16* %83, align 4
  %85 = icmp ult i16 %84, 10
  %86 = select i1 %85, i32 2, i32 1
  store i32 %86, i32* %3, align 4
  br label %87

87:                                               ; preds = %79, %81
  %88 = getelementptr inbounds %struct.hb_ot_name_entry_t, %struct.hb_ot_name_entry_t* %6, i64 %76, i32 1
  %89 = bitcast %union._hb_var_int_t* %88 to [2 x i16]*
  %90 = getelementptr inbounds [2 x i16], [2 x i16]* %89, i64 0, i64 1
  %91 = load i16, i16* %90, align 2
  %92 = zext i16 %91 to i32
  br label %93

93:                                               ; preds = %70, %35, %4, %74, %87
  %94 = phi i32 [ %92, %87 ], [ -1, %74 ], [ -1, %4 ], [ -1, %35 ], [ -1, %70 ]
  ret i32 %94
}

; Function Attrs: nofree nounwind
declare noalias i8* @malloc(i64) local_unnamed_addr #8

; Function Attrs: nounwind readnone speculatable
declare i32 @llvm.usub.sat.i32(i32, i32) #4

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind readnone speculatable }
attributes #5 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nofree nounwind }
attributes #9 = { nounwind }
attributes #10 = { nounwind readonly }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!"branch_weights", i32 2000, i32 1}
!3 = !{!"branch_weights", i32 1, i32 2000}
!4 = distinct !{!4, !5}
!5 = !{!"llvm.loop.isvectorized", i32 1}
!6 = distinct !{!6, !7, !5}
!7 = !{!"llvm.loop.unroll.runtime.disable"}
!8 = !{!"branch_weights", i32 4002001, i32 2000}
!9 = !{!"branch_weights", i32 4000000, i32 4001}
!10 = !{i8 0, i8 2}
!11 = !{!"branch_weights", i32 4001, i32 1}
!12 = !{!"branch_weights", i32 4001, i32 4000000}
!13 = !{!"branch_weights", i32 2146410443, i32 1073205}
!14 = !{!15, !17}
!15 = distinct !{!15, !16, !"_ZL11sort_r_swapPcS_m: argument 0"}
!16 = distinct !{!16, !"_ZL11sort_r_swapPcS_m"}
!17 = distinct !{!17, !18, !"_ZL14sort_r_cmpswapIJEEiPcS0_mPFiPKvS2_DpT_ES4_: argument 0"}
!18 = distinct !{!18, !"_ZL14sort_r_cmpswapIJEEiPcS0_mPFiPKvS2_DpT_ES4_"}
!19 = !{!20, !21}
!20 = distinct !{!20, !16, !"_ZL11sort_r_swapPcS_m: argument 1"}
!21 = distinct !{!21, !18, !"_ZL14sort_r_cmpswapIJEEiPcS0_mPFiPKvS2_DpT_ES4_: argument 1"}
!22 = distinct !{!22, !5}
!23 = distinct !{!23, !7, !5}
!24 = !{!25}
!25 = distinct !{!25, !26, !"_ZL11sort_r_swapPcS_m: argument 0"}
!26 = distinct !{!26, !"_ZL11sort_r_swapPcS_m"}
!27 = !{!28}
!28 = distinct !{!28, !26, !"_ZL11sort_r_swapPcS_m: argument 1"}
!29 = distinct !{!29, !5}
!30 = distinct !{!30, !7, !5}
!31 = !{!32}
!32 = distinct !{!32, !33, !"_ZL11sort_r_swapPcS_m: argument 0"}
!33 = distinct !{!33, !"_ZL11sort_r_swapPcS_m"}
!34 = !{!35}
!35 = distinct !{!35, !33, !"_ZL11sort_r_swapPcS_m: argument 1"}
!36 = distinct !{!36, !5}
!37 = distinct !{!37, !7, !5}
!38 = !{!39}
!39 = distinct !{!39, !40, !"_ZL11sort_r_swapPcS_m: argument 0"}
!40 = distinct !{!40, !"_ZL11sort_r_swapPcS_m"}
!41 = !{!42}
!42 = distinct !{!42, !40, !"_ZL11sort_r_swapPcS_m: argument 1"}
!43 = distinct !{!43, !5}
!44 = distinct !{!44, !7, !5}
!45 = !{!46}
!46 = distinct !{!46, !47, !"_ZL11sort_r_swapPcS_m: argument 0"}
!47 = distinct !{!47, !"_ZL11sort_r_swapPcS_m"}
!48 = !{!49}
!49 = distinct !{!49, !47, !"_ZL11sort_r_swapPcS_m: argument 1"}
!50 = distinct !{!50, !5}
!51 = distinct !{!51, !7, !5}
!52 = !{!53}
!53 = distinct !{!53, !54, !"_ZL11sort_r_swapPcS_m: argument 0"}
!54 = distinct !{!54, !"_ZL11sort_r_swapPcS_m"}
!55 = !{!56}
!56 = distinct !{!56, !54, !"_ZL11sort_r_swapPcS_m: argument 1"}
!57 = distinct !{!57, !5}
!58 = distinct !{!58, !7, !5}
!59 = !{!60}
!60 = distinct !{!60, !61, !"_ZL11sort_r_swapPcS_m: argument 0"}
!61 = distinct !{!61, !"_ZL11sort_r_swapPcS_m"}
!62 = !{!63}
!63 = distinct !{!63, !61, !"_ZL11sort_r_swapPcS_m: argument 1"}
!64 = distinct !{!64, !5}
!65 = distinct !{!65, !7, !5}
!66 = !{!67}
!67 = distinct !{!67, !68, !"_ZL11sort_r_swapPcS_m: argument 0"}
!68 = distinct !{!68, !"_ZL11sort_r_swapPcS_m"}
!69 = !{!70}
!70 = distinct !{!70, !68, !"_ZL11sort_r_swapPcS_m: argument 1"}
!71 = distinct !{!71, !5}
!72 = distinct !{!72, !7, !5}
!73 = !{!74}
!74 = distinct !{!74, !75, !"_ZL11sort_r_swapPcS_m: argument 0"}
!75 = distinct !{!75, !"_ZL11sort_r_swapPcS_m"}
!76 = !{!77}
!77 = distinct !{!77, !75, !"_ZL11sort_r_swapPcS_m: argument 1"}
!78 = distinct !{!78, !5}
!79 = distinct !{!79, !7, !5}
