; ModuleID = '../../third_party/skia/src/gpu/ops/GrTriangulatingPathRenderer.cpp'
source_filename = "../../third_party/skia/src/gpu/ops/GrTriangulatingPathRenderer.cpp"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"struct.std::__1::atomic.261" = type { %"struct.std::__1::__atomic_base.262" }
%"struct.std::__1::__atomic_base.262" = type { %"struct.std::__1::__atomic_base.263" }
%"struct.std::__1::__atomic_base.263" = type { %"struct.std::__1::__cxx_atomic_impl.264" }
%"struct.std::__1::__cxx_atomic_impl.264" = type { %"struct.std::__1::__cxx_atomic_base_impl.265" }
%"struct.std::__1::__cxx_atomic_base_impl.265" = type { i32 }
%"struct.std::__1::__function::__policy" = type { i8* (i8*)*, void (i8*)*, i8, %"class.std::type_info"* }
%"class.std::type_info" = type { i32 (...)**, i8* }
%class.GrTriangulatingPathRenderer = type { %class.GrPathRenderer.base, i32 }
%class.GrPathRenderer.base = type { %class.SkRefCnt.base }
%class.SkRefCnt.base = type { %class.SkRefCntBase.base }
%class.SkRefCntBase.base = type <{ i32 (...)**, %"struct.std::__1::atomic" }>
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.0" }
%"struct.std::__1::__atomic_base.0" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%class.GrCpuVertexAllocator = type { %class.GrEagerVertexAllocator, %class.sk_sp, i8*, i64 }
%class.GrEagerVertexAllocator = type { i32 (...)** }
%class.sk_sp = type { %"class.GrThreadSafeCache::VertexData"* }
%"class.GrThreadSafeCache::VertexData" = type { %class.SkNVRefCnt, i8*, i32, i64, %class.sk_sp.1 }
%class.SkNVRefCnt = type { %"struct.std::__1::atomic" }
%class.sk_sp.1 = type { %class.GrGpuBuffer* }
%class.GrGpuBuffer = type { %class.GrGpuResource, %class.GrBuffer, i8*, i64, i32, i32 }
%class.GrGpuResource = type { i32 (...)**, %class.GrIORef, i32, i32, %"class.std::__1::chrono::time_point", %class.GrScratchKey, %class.GrUniqueKey, %class.GrGpu*, i64, i8, i8, %"class.GrGpuResource::UniqueID" }
%class.GrIORef = type { %"struct.std::__1::atomic", %"struct.std::__1::atomic" }
%"class.std::__1::chrono::time_point" = type { %"class.std::__1::chrono::duration" }
%"class.std::__1::chrono::duration" = type { i64 }
%class.GrScratchKey = type { %class.GrResourceKey }
%class.GrResourceKey = type { %class.SkAutoSTMalloc }
%class.SkAutoSTMalloc = type <{ i32*, %union.anon, [4 x i8] }>
%union.anon = type { [7 x i32] }
%class.GrUniqueKey = type { %class.GrResourceKey, %class.sk_sp.2, i8* }
%class.sk_sp.2 = type { %class.SkData* }
%class.SkData = type { %class.SkNVRefCnt.3, void (i8*, i8*)*, i8*, i8*, i64 }
%class.SkNVRefCnt.3 = type { %"struct.std::__1::atomic" }
%class.GrGpu = type opaque
%"class.GrGpuResource::UniqueID" = type { i32 }
%class.GrBuffer = type { i32 (...)** }
%class.GrPathRenderer = type { %class.SkRefCnt.base, [4 x i8] }
%"struct.GrPathRenderer::CanDrawPathArgs" = type { %class.GrCaps*, %class.GrRenderTargetProxy*, %struct.SkIRect*, %class.SkMatrix*, %class.GrStyledShape*, %class.GrPaint*, %class.SkSurfaceProps*, i32, i8 }
%class.GrCaps = type <{ %class.SkRefCnt.base, [4 x i8], %class.sk_sp.4, i48, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [4 x i8], i64, %class.GrDriverBugWorkarounds, i8, i8 }>
%class.sk_sp.4 = type { %class.GrShaderCaps* }
%class.GrShaderCaps = type <{ %class.SkRefCnt.base, i32, i56, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i32, i32, i32, [4 x i8] }>
%class.GrDriverBugWorkarounds = type { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 }
%class.GrRenderTargetProxy = type <{ i32 (...)**, i8, i8, i8, i8, %struct.SkIRect, [4 x i8], %class.sk_sp.5, [4 x i8], [4 x i8], %class.GrSurfaceProxy }>
%struct.SkIRect = type { i32, i32, i32, i32 }
%class.sk_sp.5 = type { %class.GrArenas* }
%class.GrArenas = type { %class.SkNVRefCnt.6, [4 x i8], %class.SkArenaAlloc, %class.GrSubRunAllocator }
%class.SkNVRefCnt.6 = type { %"struct.std::__1::atomic" }
%class.SkArenaAlloc = type <{ i8*, i8*, i8*, %class.SkFibBlockSizes, [4 x i8] }>
%class.SkFibBlockSizes = type { i32 }
%class.GrSubRunAllocator = type { %class.GrBagOfBytes }
%class.GrBagOfBytes = type { i8*, i32, %class.SkFibBlockSizes.7 }
%class.SkFibBlockSizes.7 = type { i32 }
%class.GrSurfaceProxy = type { i32 (...)**, %class.SkNVRefCnt.8, %class.sk_sp.9, i32, [4 x i8], %class.GrBackendFormat, %struct.SkISize, i32, i8, i32, %"class.GrSurfaceProxy::UniqueID", %"class.std::__1::function", i8, i8, i8, i8, i32, %"struct.std::__1::atomic.55" }
%class.SkNVRefCnt.8 = type { %"struct.std::__1::atomic" }
%class.sk_sp.9 = type { %class.GrSurface* }
%class.GrSurface = type { %class.GrGpuResource, %struct.SkISize, i32, i8, %class.sk_sp.10 }
%class.sk_sp.10 = type { %class.GrRefCntedCallback* }
%class.GrRefCntedCallback = type { %class.SkNVRefCnt.11, void (i8*)*, i8* }
%class.SkNVRefCnt.11 = type { %"struct.std::__1::atomic" }
%class.GrBackendFormat = type { i32, i8, %union.anon.12, i32, [4 x i8] }
%union.anon.12 = type { %struct.anon }
%struct.anon = type { i32, [4 x i8], %struct.GrVkYcbcrConversionInfo }
%struct.GrVkYcbcrConversionInfo = type <{ i32, [4 x i8], i64, i32, i32, i32, i32, i32, i32, i32, [4 x i8] }>
%struct.SkISize = type { i32, i32 }
%"class.GrSurfaceProxy::UniqueID" = type { i32 }
%"class.std::__1::function" = type { %"class.std::__1::__function::__policy_func" }
%"class.std::__1::__function::__policy_func" = type { %"union.std::__1::__function::__policy_storage", %"struct.std::__1::__function::__policy_invoker", %"struct.std::__1::__function::__policy"* }
%"union.std::__1::__function::__policy_storage" = type { i8*, [8 x i8] }
%"struct.std::__1::__function::__policy_invoker" = type { void (%"struct.GrSurfaceProxy::LazyCallbackResult"*, %"union.std::__1::__function::__policy_storage"*, %class.GrResourceProvider*, %"struct.GrSurfaceProxy::LazySurfaceDesc"*)* }
%"struct.GrSurfaceProxy::LazyCallbackResult" = type <{ %class.sk_sp.9, i32, i8, [3 x i8] }>
%class.GrResourceProvider = type { %class.GrResourceCache*, %class.GrGpu*, %class.sk_sp.53, %class.sk_sp.54, %class.sk_sp.54 }
%class.GrResourceCache = type { %class.GrProxyProvider*, %class.GrThreadSafeCache*, i32, %class.SkTDPQueue, %class.SkTDArray, %class.SkTMultiMap, %class.SkTDynamicHash.30, i64, i64, i32, i64, i64, i32, [4 x i8], %"class.SkMessageBus<GrUniqueKeyInvalidatedMessage, unsigned int, true>::Inbox", %"class.SkMessageBus<GrTextureFreedMessage, GrDirectContext::DirectContextID, true>::Inbox", %class.SkTHashMap, %"class.GrDirectContext::DirectContextID", i32, %class.GrSingleOwner* }
%class.GrProxyProvider = type opaque
%class.GrThreadSafeCache = type { %class.SkSpinlock, %class.SkTDynamicHash, %class.SkTInternalLList, [6656 x i8], %class.SkArenaAlloc, %"struct.GrThreadSafeCache::Entry"* }
%class.SkSpinlock = type { %"struct.std::__1::atomic.14" }
%"struct.std::__1::atomic.14" = type { %"struct.std::__1::__atomic_base.15" }
%"struct.std::__1::__atomic_base.15" = type { %"struct.std::__1::__cxx_atomic_impl.16" }
%"struct.std::__1::__cxx_atomic_impl.16" = type { %"struct.std::__1::__cxx_atomic_base_impl.17" }
%"struct.std::__1::__cxx_atomic_base_impl.17" = type { i8 }
%class.SkTDynamicHash = type { %class.SkTHashTable }
%class.SkTHashTable = type { i32, i32, %class.SkAutoTArray }
%class.SkAutoTArray = type { %"class.std::__1::unique_ptr" }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.SkTHashTable<GrThreadSafeCache::Entry *, GrUniqueKey, SkTDynamicHash<GrThreadSafeCache::Entry, GrUniqueKey, GrThreadSafeCache::Entry>::AdaptedTraits>::Slot"* }
%"struct.SkTHashTable<GrThreadSafeCache::Entry *, GrUniqueKey, SkTDynamicHash<GrThreadSafeCache::Entry, GrUniqueKey, GrThreadSafeCache::Entry>::AdaptedTraits>::Slot" = type opaque
%class.SkTInternalLList = type { %"struct.GrThreadSafeCache::Entry"*, %"struct.GrThreadSafeCache::Entry"* }
%"struct.GrThreadSafeCache::Entry" = type <{ %"class.std::__1::chrono::time_point", %"struct.GrThreadSafeCache::Entry"*, %"struct.GrThreadSafeCache::Entry"*, %class.GrUniqueKey, %union.anon.19, i32, [4 x i8] }>
%union.anon.19 = type { %class.sk_sp, [8 x i8] }
%class.SkTDPQueue = type { %class.SkTDArray }
%class.SkTDArray = type { %class.GrGpuResource**, i32, i32 }
%class.SkTMultiMap = type <{ %class.SkTDynamicHash.21, i32, [4 x i8] }>
%class.SkTDynamicHash.21 = type { %class.SkTHashTable.22 }
%class.SkTHashTable.22 = type { i32, i32, %class.SkAutoTArray.23 }
%class.SkAutoTArray.23 = type { %"class.std::__1::unique_ptr.24" }
%"class.std::__1::unique_ptr.24" = type { %"class.std::__1::__compressed_pair.25" }
%"class.std::__1::__compressed_pair.25" = type { %"struct.std::__1::__compressed_pair_elem.26" }
%"struct.std::__1::__compressed_pair_elem.26" = type { %"struct.SkTHashTable<SkTMultiMap<GrGpuResource, GrScratchKey, GrResourceCache::ScratchMapTraits>::ValueList *, GrScratchKey, SkTDynamicHash<SkTMultiMap<GrGpuResource, GrScratchKey, GrResourceCache::ScratchMapTraits>::ValueList, GrScratchKey, SkTMultiMap<GrGpuResource, GrScratchKey, GrResourceCache::ScratchMapTraits>::ValueList>::AdaptedTraits>::Slot"* }
%"struct.SkTHashTable<SkTMultiMap<GrGpuResource, GrScratchKey, GrResourceCache::ScratchMapTraits>::ValueList *, GrScratchKey, SkTDynamicHash<SkTMultiMap<GrGpuResource, GrScratchKey, GrResourceCache::ScratchMapTraits>::ValueList, GrScratchKey, SkTMultiMap<GrGpuResource, GrScratchKey, GrResourceCache::ScratchMapTraits>::ValueList>::AdaptedTraits>::Slot" = type opaque
%class.SkTDynamicHash.30 = type { %class.SkTHashTable.31 }
%class.SkTHashTable.31 = type { i32, i32, %class.SkAutoTArray.32 }
%class.SkAutoTArray.32 = type { %"class.std::__1::unique_ptr.33" }
%"class.std::__1::unique_ptr.33" = type { %"class.std::__1::__compressed_pair.34" }
%"class.std::__1::__compressed_pair.34" = type { %"struct.std::__1::__compressed_pair_elem.35" }
%"struct.std::__1::__compressed_pair_elem.35" = type { %"struct.SkTHashTable<GrGpuResource *, GrUniqueKey, SkTDynamicHash<GrGpuResource, GrUniqueKey, GrResourceCache::UniqueHashTraits>::AdaptedTraits>::Slot"* }
%"struct.SkTHashTable<GrGpuResource *, GrUniqueKey, SkTDynamicHash<GrGpuResource, GrUniqueKey, GrResourceCache::UniqueHashTraits>::AdaptedTraits>::Slot" = type <{ %class.GrGpuResource*, i32, [4 x i8] }>
%"class.SkMessageBus<GrUniqueKeyInvalidatedMessage, unsigned int, true>::Inbox" = type <{ %class.SkTArray, %class.SkMutex, i32, [4 x i8] }>
%class.SkTArray = type { %class.GrUniqueKeyInvalidatedMessage*, i64 }
%class.GrUniqueKeyInvalidatedMessage = type <{ %class.GrUniqueKey, i32, i8, [3 x i8] }>
%class.SkMutex = type { %class.SkSemaphore }
%class.SkSemaphore = type { %"struct.std::__1::atomic", %class.SkOnce, %"struct.SkSemaphore::OSSemaphore"* }
%class.SkOnce = type { %"struct.std::__1::atomic.39" }
%"struct.std::__1::atomic.39" = type { %"struct.std::__1::__atomic_base.40" }
%"struct.std::__1::__atomic_base.40" = type { %"struct.std::__1::__atomic_base.41" }
%"struct.std::__1::__atomic_base.41" = type { %"struct.std::__1::__cxx_atomic_impl.42" }
%"struct.std::__1::__cxx_atomic_impl.42" = type { %"struct.std::__1::__cxx_atomic_base_impl.43" }
%"struct.std::__1::__cxx_atomic_base_impl.43" = type { i8 }
%"struct.SkSemaphore::OSSemaphore" = type opaque
%"class.SkMessageBus<GrTextureFreedMessage, GrDirectContext::DirectContextID, true>::Inbox" = type <{ %class.SkTArray.44, %class.SkMutex, %"class.GrDirectContext::DirectContextID", [4 x i8] }>
%class.SkTArray.44 = type { %struct.GrTextureFreedMessage*, i64 }
%struct.GrTextureFreedMessage = type <{ %class.GrTexture*, %"class.GrDirectContext::DirectContextID", [4 x i8] }>
%class.GrTexture = type <{ i32 (...)**, i32, i32, i32, [4 x i8], %class.GrSurface }>
%class.SkTHashMap = type { %class.SkTHashTable.45 }
%class.SkTHashTable.45 = type { i32, i32, %class.SkAutoTArray.46 }
%class.SkAutoTArray.46 = type { %"class.std::__1::unique_ptr.47" }
%"class.std::__1::unique_ptr.47" = type { %"class.std::__1::__compressed_pair.48" }
%"class.std::__1::__compressed_pair.48" = type { %"struct.std::__1::__compressed_pair_elem.49" }
%"struct.std::__1::__compressed_pair_elem.49" = type { %"struct.SkTHashTable<SkTHashMap<unsigned int, GrResourceCache::TextureAwaitingUnref, SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, GrResourceCache::TextureAwaitingUnref, SkGoodHash>::Pair>::Slot"* }
%"struct.SkTHashTable<SkTHashMap<unsigned int, GrResourceCache::TextureAwaitingUnref, SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, GrResourceCache::TextureAwaitingUnref, SkGoodHash>::Pair>::Slot" = type opaque
%"class.GrDirectContext::DirectContextID" = type { i32 }
%class.GrSingleOwner = type { i8 }
%class.sk_sp.53 = type { %class.GrCaps* }
%class.sk_sp.54 = type { %class.GrGpuBuffer* }
%"struct.GrSurfaceProxy::LazySurfaceDesc" = type <{ %struct.SkISize, i32, i8, i8, [2 x i8], i32, [4 x i8], %class.GrBackendFormat*, i8, i8, [6 x i8] }>
%"struct.std::__1::atomic.55" = type { %"struct.std::__1::__atomic_base.56" }
%"struct.std::__1::__atomic_base.56" = type { %"struct.std::__1::__atomic_base.57" }
%"struct.std::__1::__atomic_base.57" = type { %"struct.std::__1::__cxx_atomic_impl.58" }
%"struct.std::__1::__cxx_atomic_impl.58" = type { %"struct.std::__1::__cxx_atomic_base_impl.59" }
%"struct.std::__1::__cxx_atomic_base_impl.59" = type { i64 }
%class.SkMatrix = type { [9 x float], i32 }
%class.GrStyledShape = type { %class.GrShape, %class.GrStyle, i32, i8, i8, %class.SkTLazy, %class.SkAutoSTArray.68 }
%class.GrShape = type { %union.anon.60, i8, i8, i8, i8, [4 x i8] }
%union.anon.60 = type { %class.SkRRect, [4 x i8] }
%class.SkRRect = type { %struct.SkRect, [4 x %struct.SkPoint], i32 }
%struct.SkRect = type { float, float, float, float }
%struct.SkPoint = type { float, float }
%class.GrStyle = type { %class.SkStrokeRec, %class.sk_sp.67, %"struct.GrStyle::DashInfo" }
%class.SkStrokeRec = type { float, float, float, i32 }
%class.sk_sp.67 = type { %class.SkPathEffect* }
%class.SkPathEffect = type { %class.SkFlattenable.base, [4 x i8] }
%class.SkFlattenable.base = type { %class.SkRefCnt.base }
%"struct.GrStyle::DashInfo" = type { i32, float, %class.SkAutoSTArray }
%class.SkAutoSTArray = type { i32, float*, [16 x i8] }
%class.SkTLazy = type { [16 x i8], %class.SkPath* }
%class.SkPath = type <{ %class.sk_sp.61, i32, %"struct.std::__1::atomic.39", %"struct.std::__1::atomic.39", i8, i8 }>
%class.sk_sp.61 = type { %class.SkPathRef* }
%class.SkPathRef = type <{ %class.SkNVRefCnt.62, %struct.SkRect, [4 x i8], %class.SkTDArray.63, %class.SkTDArray.64, %class.SkTDArray.65, i32, [4 x i8], %"class.SkIDChangeListener::List", i8, i8, i8, i8, i8, i8, i8, i8 }>
%class.SkNVRefCnt.62 = type { %"struct.std::__1::atomic" }
%class.SkTDArray.63 = type { %struct.SkPoint*, i32, i32 }
%class.SkTDArray.64 = type { i8*, i32, i32 }
%class.SkTDArray.65 = type { float*, i32, i32 }
%"class.SkIDChangeListener::List" = type { %class.SkMutex, %class.SkTDArray.66 }
%class.SkTDArray.66 = type { %class.SkIDChangeListener**, i32, i32 }
%class.SkIDChangeListener = type { %class.SkRefCnt.base, %"struct.std::__1::atomic.14", [3 x i8] }
%class.SkAutoSTArray.68 = type { i32, i32*, [32 x i8] }
%class.GrPaint = type <{ %class.GrXPFactory*, %"class.std::__1::unique_ptr.69", %"class.std::__1::unique_ptr.69", i8, [3 x i8], %struct.SkRGBA4f, [4 x i8] }>
%class.GrXPFactory = type { i32 (...)** }
%"class.std::__1::unique_ptr.69" = type { %"class.std::__1::__compressed_pair.70" }
%"class.std::__1::__compressed_pair.70" = type { %"struct.std::__1::__compressed_pair_elem.71" }
%"struct.std::__1::__compressed_pair_elem.71" = type { %class.GrFragmentProcessor* }
%class.GrFragmentProcessor = type <{ %class.GrProcessor, %class.SkSTArray, %class.GrFragmentProcessor*, i32, %"struct.SkSL::SampleUsage", [4 x i8] }>
%class.GrProcessor = type { i32 (...)**, i32, i32 }
%class.SkSTArray = type { %class.SkAlignedSTStorage, %class.SkTArray.72 }
%class.SkAlignedSTStorage = type { [8 x i8] }
%class.SkTArray.72 = type { %"class.std::__1::unique_ptr.69"*, i64 }
%"struct.SkSL::SampleUsage" = type <{ i32, i8, [3 x i8] }>
%struct.SkRGBA4f = type { float, float, float, float }
%class.SkSurfaceProps = type { i32, i32 }
%"struct.GrPathRenderer::DrawPathArgs" = type <{ %class.GrRecordingContext*, %class.GrPaint*, %struct.GrUserStencilSettings*, %class.GrSurfaceDrawContext*, %class.GrClip*, %struct.SkIRect*, %class.SkMatrix*, %class.GrStyledShape*, i32, i8, [3 x i8] }>
%class.GrRecordingContext = type { %class.GrImageContext.base, %"class.GrRecordingContext::Stats", %"class.std::__1::unique_ptr.77", %"class.GrRecordingContext::OwnedArenas", %"class.std::__1::unique_ptr.119", %"class.std::__1::unique_ptr.193" }
%class.GrImageContext.base = type <{ %class.GrContext_Base, %class.GrSingleOwner }>
%class.GrContext_Base = type { %class.SkRefCnt.base, %class.sk_sp.76 }
%class.sk_sp.76 = type { %class.GrContextThreadSafeProxy* }
%class.GrContextThreadSafeProxy = type opaque
%"class.GrRecordingContext::Stats" = type { i8 }
%"class.std::__1::unique_ptr.77" = type { %"class.std::__1::__compressed_pair.78" }
%"class.std::__1::__compressed_pair.78" = type { %"struct.std::__1::__compressed_pair_elem.79" }
%"struct.std::__1::__compressed_pair_elem.79" = type { %class.GrAuditTrail* }
%class.GrAuditTrail = type <{ %class.SkTArray.80, %class.SkTHashMap.82, %class.SkTHashMap.91, %class.SkTArray.100, %class.SkTArray.102, i32, i8, [3 x i8] }>
%class.SkTArray.80 = type { %"class.std::__1::unique_ptr.81"*, i64 }
%"class.std::__1::unique_ptr.81" = type { %"class.std::__1::__compressed_pair.233" }
%"class.std::__1::__compressed_pair.233" = type { %"struct.std::__1::__compressed_pair_elem.234" }
%"struct.std::__1::__compressed_pair_elem.234" = type { %"struct.GrAuditTrail::Op"* }
%"struct.GrAuditTrail::Op" = type <{ %class.SkString, %class.SkTArray.102, %struct.SkRect, i32, i32, i32, [4 x i8] }>
%class.SkString = type { %class.sk_sp.103 }
%class.sk_sp.103 = type { %"struct.SkString::Rec"* }
%"struct.SkString::Rec" = type <{ i32, %"struct.std::__1::atomic", i8, [3 x i8] }>
%class.SkTHashMap.82 = type { %class.SkTHashTable.83 }
%class.SkTHashTable.83 = type { i32, i32, %class.SkAutoTArray.84 }
%class.SkAutoTArray.84 = type { %"class.std::__1::unique_ptr.85" }
%"class.std::__1::unique_ptr.85" = type { %"class.std::__1::__compressed_pair.86" }
%"class.std::__1::__compressed_pair.86" = type { %"struct.std::__1::__compressed_pair_elem.87" }
%"struct.std::__1::__compressed_pair_elem.87" = type { %"struct.SkTHashTable<SkTHashMap<unsigned int, int, SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, int, SkGoodHash>::Pair>::Slot"* }
%"struct.SkTHashTable<SkTHashMap<unsigned int, int, SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, int, SkGoodHash>::Pair>::Slot" = type { %"struct.SkTHashMap<unsigned int, int, SkGoodHash>::Pair", i32 }
%"struct.SkTHashMap<unsigned int, int, SkGoodHash>::Pair" = type { %"struct.std::__1::pair" }
%"struct.std::__1::pair" = type { i32, i32 }
%class.SkTHashMap.91 = type { %class.SkTHashTable.92 }
%class.SkTHashTable.92 = type { i32, i32, %class.SkAutoTArray.93 }
%class.SkAutoTArray.93 = type { %"class.std::__1::unique_ptr.94" }
%"class.std::__1::unique_ptr.94" = type { %"class.std::__1::__compressed_pair.95" }
%"class.std::__1::__compressed_pair.95" = type { %"struct.std::__1::__compressed_pair_elem.96" }
%"struct.std::__1::__compressed_pair_elem.96" = type { %"struct.SkTHashTable<SkTHashMap<int, SkTArray<GrAuditTrail::Op *, false> *, SkGoodHash>::Pair, int, SkTHashMap<int, SkTArray<GrAuditTrail::Op *, false> *, SkGoodHash>::Pair>::Slot"* }
%"struct.SkTHashTable<SkTHashMap<int, SkTArray<GrAuditTrail::Op *, false> *, SkGoodHash>::Pair, int, SkTHashMap<int, SkTArray<GrAuditTrail::Op *, false> *, SkGoodHash>::Pair>::Slot" = type <{ %"struct.SkTHashMap<int, SkTArray<GrAuditTrail::Op *, false> *, SkGoodHash>::Pair", i32, [4 x i8] }>
%"struct.SkTHashMap<int, SkTArray<GrAuditTrail::Op *, false> *, SkGoodHash>::Pair" = type { %"struct.std::__1::pair.238" }
%"struct.std::__1::pair.238" = type { i32, %class.SkTArray.239* }
%class.SkTArray.239 = type { %"struct.GrAuditTrail::Op"**, i64 }
%class.SkTArray.100 = type { %"class.std::__1::unique_ptr.101"*, i64 }
%"class.std::__1::unique_ptr.101" = type { %"class.std::__1::__compressed_pair.240" }
%"class.std::__1::__compressed_pair.240" = type { %"struct.std::__1::__compressed_pair_elem.241" }
%"struct.std::__1::__compressed_pair_elem.241" = type { %"struct.GrAuditTrail::OpNode"* }
%"struct.GrAuditTrail::OpNode" = type <{ %struct.SkRect, %class.SkTArray.239, %"class.GrSurfaceProxy::UniqueID", [4 x i8] }>
%class.SkTArray.102 = type { %class.SkString*, i64 }
%"class.GrRecordingContext::OwnedArenas" = type { i8, %"class.std::__1::unique_ptr.107", %"class.std::__1::unique_ptr.113" }
%"class.std::__1::unique_ptr.107" = type { %"class.std::__1::__compressed_pair.108" }
%"class.std::__1::__compressed_pair.108" = type { %"struct.std::__1::__compressed_pair_elem.109" }
%"struct.std::__1::__compressed_pair_elem.109" = type { %class.SkArenaAlloc* }
%"class.std::__1::unique_ptr.113" = type { %"class.std::__1::__compressed_pair.114" }
%"class.std::__1::__compressed_pair.114" = type { %"struct.std::__1::__compressed_pair_elem.115" }
%"struct.std::__1::__compressed_pair_elem.115" = type { %class.GrSubRunAllocator* }
%"class.std::__1::unique_ptr.119" = type { %"class.std::__1::__compressed_pair.120" }
%"class.std::__1::__compressed_pair.120" = type { %"struct.std::__1::__compressed_pair_elem.121" }
%"struct.std::__1::__compressed_pair_elem.121" = type { %class.GrDrawingManager* }
%class.GrDrawingManager = type { %class.GrRecordingContext*, %"struct.GrPathRendererChain::Options", %class.sk_sp.122, %class.SkTArray.131, %class.GrOpsTask*, %class.SkSTArray.158, %class.SkSTArray.161, %"class.std::__1::unique_ptr.163", %class.sk_sp.179, %class.GrTokenTracker, i8, i8, %class.SkTArray.180, %class.GrHashMapWithCache }
%"struct.GrPathRendererChain::Options" = type { i8, i32 }
%class.sk_sp.122 = type { %"class.GrBufferAllocPool::CpuBufferCache"* }
%"class.GrBufferAllocPool::CpuBufferCache" = type <{ %class.GrNonAtomicRef, [4 x i8], %"class.std::__1::unique_ptr.123", i32, [4 x i8] }>
%class.GrNonAtomicRef = type { i32 }
%"class.std::__1::unique_ptr.123" = type { %"class.std::__1::__compressed_pair.124" }
%"class.std::__1::__compressed_pair.124" = type { %"struct.std::__1::__compressed_pair_elem.125" }
%"struct.std::__1::__compressed_pair_elem.125" = type { %"struct.GrBufferAllocPool::CpuBufferCache::Buffer"* }
%"struct.GrBufferAllocPool::CpuBufferCache::Buffer" = type <{ %class.sk_sp.126, i8, [7 x i8] }>
%class.sk_sp.126 = type { %class.GrCpuBuffer* }
%class.GrCpuBuffer = type { %class.GrBuffer, %class.GrNonAtomicRef.127, i8*, i64 }
%class.GrNonAtomicRef.127 = type { i32 }
%class.SkTArray.131 = type { %class.sk_sp.132*, i64 }
%class.sk_sp.132 = type { %class.GrRenderTask* }
%class.GrRenderTask = type { %class.SkRefCnt.base, %class.GrRenderTask*, %class.GrRenderTask*, %class.SkSTArray.133, %class.SkTArray.136, i32, i32, %class.SkSTArray.143, %class.SkSTArray.143, %class.GrTextureResolveRenderTask* }
%class.SkSTArray.133 = type { %class.SkAlignedSTStorage.134, %class.SkTArray.135 }
%class.SkAlignedSTStorage.134 = type { [8 x i8] }
%class.SkTArray.135 = type { %class.sk_sp.20*, i64 }
%class.sk_sp.20 = type { %class.GrSurfaceProxy* }
%class.SkTArray.136 = type { %class.GrTextureProxy**, i64 }
%class.GrTextureProxy = type { i32 (...)**, i8, i32, i8, i8, %class.GrUniqueKey, %class.GrProxyProvider*, %"class.std::__1::unique_ptr.137", %class.GrSurfaceProxy }
%"class.std::__1::unique_ptr.137" = type { %"class.std::__1::__compressed_pair.138" }
%"class.std::__1::__compressed_pair.138" = type { %"struct.std::__1::__compressed_pair_elem.139" }
%"struct.std::__1::__compressed_pair_elem.139" = type { %class.GrDeferredProxyUploader* }
%class.GrDeferredProxyUploader = type opaque
%class.SkSTArray.143 = type { %class.SkAlignedSTStorage.144, %class.SkTArray.145 }
%class.SkAlignedSTStorage.144 = type { [8 x i8] }
%class.SkTArray.145 = type { %class.GrRenderTask**, i64 }
%class.GrTextureResolveRenderTask = type opaque
%class.GrOpsTask = type { %class.GrRenderTask, %class.GrAuditTrail*, i8, %class.GrSwizzle, i32, i32, %"struct.std::__1::array", i32, i8, i32, %struct.SkIRect, i32, i32, %class.SkSTArray.146, %class.sk_sp.5, %class.SkTArray.157, %struct.SkRect, %struct.SkIRect }
%class.GrSwizzle = type { i16 }
%"struct.std::__1::array" = type { [4 x float] }
%class.SkSTArray.146 = type { %class.SkAlignedSTStorage.147, %class.SkTArray.148 }
%class.SkAlignedSTStorage.147 = type { [2000 x i8] }
%class.SkTArray.148 = type { %"class.GrOpsTask::OpChain"*, i64 }
%"class.GrOpsTask::OpChain" = type { %"class.GrOpsTask::OpChain::List", %"class.GrProcessorSet::Analysis", [4 x i8], %"class.GrXferProcessor::DstProxyView", %class.GrAppliedClip*, %struct.SkRect }
%"class.GrOpsTask::OpChain::List" = type { %"class.std::__1::unique_ptr.149", %class.GrOp* }
%"class.std::__1::unique_ptr.149" = type { %"class.std::__1::__compressed_pair.150" }
%"class.std::__1::__compressed_pair.150" = type { %"struct.std::__1::__compressed_pair_elem.151" }
%"struct.std::__1::__compressed_pair_elem.151" = type { %class.GrOp* }
%class.GrOp = type { i32 (...)**, %"class.std::__1::unique_ptr.149", %class.GrOp*, i16, i16, i32, %struct.SkRect }
%"class.GrProcessorSet::Analysis" = type { i16, [2 x i8] }
%"class.GrXferProcessor::DstProxyView" = type { %class.GrSurfaceProxyView, %struct.SkIPoint, i32, [4 x i8] }
%class.GrSurfaceProxyView = type <{ %class.sk_sp.20, i32, %class.GrSwizzle, [2 x i8] }>
%struct.SkIPoint = type { i32, i32 }
%class.GrAppliedClip = type { %class.GrAppliedHardClip, %"class.std::__1::unique_ptr.69" }
%class.GrAppliedHardClip = type <{ %class.GrScissorState, %class.GrWindowRectsState, i32, [4 x i8] }>
%class.GrScissorState = type { %struct.SkISize, %struct.SkIRect }
%class.GrWindowRectsState = type { i8, %class.GrWindowRectangles }
%class.GrWindowRectangles = type { i32, %union.anon.155 }
%union.anon.155 = type { %"struct.GrWindowRectangles::Rec"*, [8 x i8] }
%"struct.GrWindowRectangles::Rec" = type { %class.GrNonAtomicRef.156, [8 x %struct.SkIRect] }
%class.GrNonAtomicRef.156 = type { i32 }
%class.SkTArray.157 = type { %class.GrSurfaceProxy**, i64 }
%class.SkSTArray.158 = type { %class.SkAlignedSTStorage.159, %class.SkTArray.160 }
%class.SkAlignedSTStorage.159 = type { [32 x i8] }
%class.SkTArray.160 = type { i32*, i64 }
%class.SkSTArray.161 = type { %class.SkAlignedSTStorage.162, %class.SkTArray.131 }
%class.SkAlignedSTStorage.162 = type { [32 x i8] }
%"class.std::__1::unique_ptr.163" = type { %"class.std::__1::__compressed_pair.164" }
%"class.std::__1::__compressed_pair.164" = type { %"struct.std::__1::__compressed_pair_elem.165" }
%"struct.std::__1::__compressed_pair_elem.165" = type { %class.GrPathRendererChain* }
%class.GrPathRendererChain = type { %class.SkSTArray.166, %"class.std::__1::unique_ptr.170", %class.GrPathRenderer* }
%class.SkSTArray.166 = type { %class.SkAlignedSTStorage.167, %class.SkTArray.168 }
%class.SkAlignedSTStorage.167 = type { [64 x i8] }
%class.SkTArray.168 = type { %class.sk_sp.169*, i64 }
%class.sk_sp.169 = type { %class.GrPathRenderer* }
%"class.std::__1::unique_ptr.170" = type { %"class.std::__1::__compressed_pair.171" }
%"class.std::__1::__compressed_pair.171" = type { %"struct.std::__1::__compressed_pair_elem.172" }
%"struct.std::__1::__compressed_pair_elem.172" = type { %class.GrCoverageCountingPathRenderer* }
%class.GrCoverageCountingPathRenderer = type opaque
%class.sk_sp.179 = type { %class.GrSoftwarePathRenderer* }
%class.GrSoftwarePathRenderer = type opaque
%class.GrTokenTracker = type { %class.GrDeferredUploadToken, %class.GrDeferredUploadToken }
%class.GrDeferredUploadToken = type { i64 }
%class.SkTArray.180 = type { %class.GrOnFlushCallbackObject**, i64 }
%class.GrOnFlushCallbackObject = type opaque
%class.GrHashMapWithCache = type { %class.SkTHashMap.181, i32, %class.GrRenderTask** }
%class.SkTHashMap.181 = type { %class.SkTHashTable.182 }
%class.SkTHashTable.182 = type { i32, i32, %class.SkAutoTArray.183 }
%class.SkAutoTArray.183 = type { %"class.std::__1::unique_ptr.184" }
%"class.std::__1::unique_ptr.184" = type { %"class.std::__1::__compressed_pair.185" }
%"class.std::__1::__compressed_pair.185" = type { %"struct.std::__1::__compressed_pair_elem.186" }
%"struct.std::__1::__compressed_pair_elem.186" = type { %"struct.SkTHashTable<SkTHashMap<unsigned int, GrRenderTask *, GrCheapHash>::Pair, unsigned int, SkTHashMap<unsigned int, GrRenderTask *, GrCheapHash>::Pair>::Slot"* }
%"struct.SkTHashTable<SkTHashMap<unsigned int, GrRenderTask *, GrCheapHash>::Pair, unsigned int, SkTHashMap<unsigned int, GrRenderTask *, GrCheapHash>::Pair>::Slot" = type opaque
%"class.std::__1::unique_ptr.193" = type { %"class.std::__1::__compressed_pair.194" }
%"class.std::__1::__compressed_pair.194" = type { %"struct.std::__1::__compressed_pair_elem.195" }
%"struct.std::__1::__compressed_pair_elem.195" = type { %class.GrProxyProvider* }
%struct.GrUserStencilSettings = type { [2 x i16], %struct.GrTStencilFaceSettings, [2 x i16], %struct.GrTStencilFaceSettings }
%struct.GrTStencilFaceSettings = type { i16, i16, i16, i8, i8, i16 }
%class.GrSurfaceDrawContext = type { %class.GrSurfaceFillContext.base, %class.SkSurfaceProps, i8, i8, i32, %class.SkGlyphRunListPainter }
%class.GrSurfaceFillContext.base = type <{ %class.GrSurfaceContext, %class.GrSurfaceProxyView, %class.sk_sp.202, i8 }>
%class.GrSurfaceContext = type { i32 (...)**, %class.GrRecordingContext*, %class.GrSurfaceProxyView, %class.GrColorInfo }
%class.GrColorInfo = type { %class.sk_sp.199, %class.sk_sp.201, i32, i32 }
%class.sk_sp.199 = type { %class.SkColorSpace* }
%class.SkColorSpace = type <{ %class.SkNVRefCnt.200, i32, i32, %struct.skcms_TransferFunction, %struct.skcms_Matrix3x3, %struct.skcms_TransferFunction, %struct.skcms_Matrix3x3, %class.SkOnce, [3 x i8] }>
%class.SkNVRefCnt.200 = type { %"struct.std::__1::atomic" }
%struct.skcms_TransferFunction = type { float, float, float, float, float, float, float }
%struct.skcms_Matrix3x3 = type { [3 x [3 x float]] }
%class.sk_sp.201 = type { %class.GrColorSpaceXform* }
%class.GrColorSpaceXform = type { %class.SkRefCnt.base, %struct.SkColorSpaceXformSteps }
%struct.SkColorSpaceXformSteps = type { %"struct.SkColorSpaceXformSteps::Flags", %struct.skcms_TransferFunction, %struct.skcms_TransferFunction, [9 x float] }
%"struct.SkColorSpaceXformSteps::Flags" = type { i8, i8, i8, i8, i8 }
%class.sk_sp.202 = type { %class.GrOpsTask* }
%class.SkGlyphRunListPainter = type { %class.SkSurfaceProps, %class.SkSurfaceProps, i32, i32, %class.SkStrikeForGPUCacheInterface*, %class.SkDrawableGlyphBuffer, %class.SkSourceGlyphBuffer }
%class.SkStrikeForGPUCacheInterface = type { i32 (...)** }
%class.SkDrawableGlyphBuffer = type { i64, i64, i64, %class.SkAutoTArray.203, %class.SkAutoTMalloc }
%class.SkAutoTArray.203 = type { %"class.std::__1::unique_ptr.204" }
%"class.std::__1::unique_ptr.204" = type { %"class.std::__1::__compressed_pair.205" }
%"class.std::__1::__compressed_pair.205" = type { %"struct.std::__1::__compressed_pair_elem.206" }
%"struct.std::__1::__compressed_pair_elem.206" = type { %class.SkGlyphVariant* }
%class.SkGlyphVariant = type { %union.anon.207 }
%union.anon.207 = type { %class.SkGlyph* }
%class.SkGlyph = type { i16, i16, i16, i16, i8*, %"struct.SkGlyph::PathData"*, float, float, i8, i8, %struct.SkPackedGlyphID }
%"struct.SkGlyph::PathData" = type <{ %"struct.SkGlyph::Intercept"*, %class.SkPath, i8, [7 x i8] }>
%"struct.SkGlyph::Intercept" = type { %"struct.SkGlyph::Intercept"*, [2 x float], [2 x float] }
%struct.SkPackedGlyphID = type { i32 }
%class.SkAutoTMalloc = type { %"class.std::__1::unique_ptr.211" }
%"class.std::__1::unique_ptr.211" = type { %"class.std::__1::__compressed_pair.212" }
%"class.std::__1::__compressed_pair.212" = type { %"struct.std::__1::__compressed_pair_elem.213" }
%"struct.std::__1::__compressed_pair_elem.213" = type { %struct.SkPoint* }
%class.SkSourceGlyphBuffer = type { %class.SkZip, i64, i32, i32, %class.SkZip.216, %class.SkSTArray.221, %class.SkSTArray.224 }
%class.SkZip = type { %"class.std::__1::tuple", i64 }
%"class.std::__1::tuple" = type { %"struct.std::__1::__tuple_impl" }
%"struct.std::__1::__tuple_impl" = type { %"class.std::__1::__tuple_leaf", %"class.std::__1::__tuple_leaf.215" }
%"class.std::__1::__tuple_leaf" = type { i16* }
%"class.std::__1::__tuple_leaf.215" = type { %struct.SkPoint* }
%class.SkZip.216 = type { %"class.std::__1::tuple.217", i64 }
%"class.std::__1::tuple.217" = type { %"struct.std::__1::__tuple_impl.218" }
%"struct.std::__1::__tuple_impl.218" = type { %"class.std::__1::__tuple_leaf.219", %"class.std::__1::__tuple_leaf.220" }
%"class.std::__1::__tuple_leaf.219" = type { i16* }
%"class.std::__1::__tuple_leaf.220" = type { %struct.SkPoint* }
%class.SkSTArray.221 = type { %class.SkAlignedSTStorage.222, %class.SkTArray.223 }
%class.SkAlignedSTStorage.222 = type { [8 x i8] }
%class.SkTArray.223 = type { i16*, i64 }
%class.SkSTArray.224 = type { %class.SkAlignedSTStorage.225, %class.SkTArray.226 }
%class.SkAlignedSTStorage.225 = type { [32 x i8] }
%class.SkTArray.226 = type { %struct.SkPoint*, i64 }
%class.GrClip = type opaque
%"class.std::__1::function.227" = type { %"class.std::__1::__function::__policy_func.231" }
%"class.std::__1::__function::__policy_func.231" = type { %"union.std::__1::__function::__policy_storage", %"struct.std::__1::__function::__policy_invoker.232", %"struct.std::__1::__function::__policy"* }
%"struct.std::__1::__function::__policy_invoker.232" = type { void (%"union.std::__1::__function::__policy_storage"*, %class.GrOp*, i32)* }
%class.GrProcessorSet = type <{ %"class.std::__1::unique_ptr.69", %"class.std::__1::unique_ptr.69", %"union.GrProcessorSet::XP", i8, [7 x i8] }>
%"union.GrProcessorSet::XP" = type { %class.GrXPFactory* }
%"class.(anonymous namespace)::TriangulatingPathOp" = type { %class.GrMeshDrawOp, %class.GrSimpleMeshDrawOpHelperWithStencil, %struct.SkRGBA4f, %class.GrStyledShape, %class.SkMatrix, %struct.SkIRect, i8, %struct.GrSimpleMesh*, %class.GrProgramInfo*, %class.sk_sp }
%class.GrMeshDrawOp = type { %class.GrDrawOp }
%class.GrDrawOp = type { %class.GrOp }
%class.GrSimpleMeshDrawOpHelperWithStencil = type { %class.GrSimpleMeshDrawOpHelper.base, %struct.GrUserStencilSettings* }
%class.GrSimpleMeshDrawOpHelper.base = type <{ %class.GrProcessorSet*, i8, i8 }>
%struct.GrSimpleMesh = type { %class.sk_sp.246, i32, i32, i32, i32, i16, i16, i8, %class.sk_sp.246, i32, i32 }
%class.sk_sp.246 = type { %class.GrBuffer* }
%class.GrProgramInfo = type { i32, i8, %class.GrBackendFormat, i32, i8, %class.GrPipeline*, %struct.GrUserStencilSettings*, %class.GrGeometryProcessor*, i32, i8, i8, i32, i32 }
%class.GrPipeline = type <{ %class.GrSurfaceProxyView, %struct.SkIPoint, i32, [4 x i8], %class.GrWindowRectsState, i8, [7 x i8], %class.sk_sp.247, %class.SkAutoSTArray.248, i32, %class.GrSwizzle, [2 x i8] }>
%class.sk_sp.247 = type { %class.GrXferProcessor* }
%class.GrXferProcessor = type <{ %class.GrProcessor, %class.GrNonAtomicRef.245, i8, i8, [2 x i8] }>
%class.GrNonAtomicRef.245 = type { i32 }
%class.SkAutoSTArray.248 = type { i32, %"class.std::__1::unique_ptr.249"*, [24 x i8] }
%"class.std::__1::unique_ptr.249" = type { %"class.std::__1::__compressed_pair.250" }
%"class.std::__1::__compressed_pair.250" = type { %"struct.std::__1::__compressed_pair_elem.251" }
%"struct.std::__1::__compressed_pair_elem.251" = type { %class.GrFragmentProcessor* }
%class.GrGeometryProcessor = type <{ %class.GrProcessor, %class.GrNonAtomicRef.255, i32, %"class.GrGeometryProcessor::AttributeSet", %"class.GrGeometryProcessor::AttributeSet", i32, [4 x i8] }>
%class.GrNonAtomicRef.255 = type { i32 }
%"class.GrGeometryProcessor::AttributeSet" = type { %"class.GrGeometryProcessor::Attribute"*, i32, i32, i64 }
%"class.GrGeometryProcessor::Attribute" = type { i8*, i32, i32 }
%class.SkRefCntBase = type <{ i32 (...)**, %"struct.std::__1::atomic", [4 x i8] }>
%"struct.GrPathRenderer::StencilPathArgs" = type { %class.GrRecordingContext*, %class.GrSurfaceDrawContext*, %class.GrHardClip*, %struct.SkIRect*, %class.SkMatrix*, %class.GrStyledShape*, i8 }
%class.GrHardClip = type opaque
%class.GrSimpleMeshDrawOpHelper = type <{ %class.GrProcessorSet*, i8, i8, [6 x i8] }>
%"class.std::__1::function.256" = type opaque
%class.GrOpFlushState = type { %class.GrDeferredUploadTarget, %"class.GrMeshDrawOp::Target", %class.SkArenaAllocWithReset, %class.GrVertexBufferAllocPool, %class.GrIndexBufferAllocPool, %class.GrDrawIndirectBufferAllocPool, %class.SkArenaAllocList, %class.SkArenaAllocList.259, %class.SkArenaAllocList.260, %class.GrDeferredUploadToken, %"struct.GrOpFlushState::OpArgs"*, %class.SkTArray.157*, %class.GrGpu*, %class.GrResourceProvider*, %class.GrTokenTracker*, %class.GrOpsRenderPass*, %"class.SkArenaAllocList<GrOpFlushState::Draw>::Iter", %"class.SkArenaAllocList<GrOpFlushState::InlineUpload>::Iter" }
%class.GrDeferredUploadTarget = type { i32 (...)** }
%"class.GrMeshDrawOp::Target" = type { i32 (...)** }
%class.SkArenaAllocWithReset = type { %class.SkArenaAlloc.base, i8*, i32, i32 }
%class.SkArenaAlloc.base = type <{ i8*, i8*, i8*, %class.SkFibBlockSizes }>
%class.GrVertexBufferAllocPool = type { %class.GrBufferAllocPool }
%class.GrBufferAllocPool = type { i32 (...)**, i64, %class.SkTArray.257, %class.sk_sp.122, %class.sk_sp.126, %class.GrGpu*, i32, i8* }
%class.SkTArray.257 = type { %"struct.GrBufferAllocPool::BufferBlock"*, i64 }
%"struct.GrBufferAllocPool::BufferBlock" = type { i64, %class.sk_sp.258 }
%class.sk_sp.258 = type { %class.GrBuffer* }
%class.GrIndexBufferAllocPool = type { %class.GrBufferAllocPool }
%class.GrDrawIndirectBufferAllocPool = type { %class.GrBufferAllocPool }
%class.SkArenaAllocList = type { %"struct.SkArenaAllocList<std::__1::function<void (std::__1::function<bool (GrTextureProxy *, SkIRect, GrColorType, const void *, unsigned long)> &)> >::Node"*, %"struct.SkArenaAllocList<std::__1::function<void (std::__1::function<bool (GrTextureProxy *, SkIRect, GrColorType, const void *, unsigned long)> &)> >::Node"* }
%"struct.SkArenaAllocList<std::__1::function<void (std::__1::function<bool (GrTextureProxy *, SkIRect, GrColorType, const void *, unsigned long)> &)> >::Node" = type opaque
%class.SkArenaAllocList.259 = type { %"struct.SkArenaAllocList<GrOpFlushState::InlineUpload>::Node"*, %"struct.SkArenaAllocList<GrOpFlushState::InlineUpload>::Node"* }
%"struct.SkArenaAllocList<GrOpFlushState::InlineUpload>::Node" = type opaque
%class.SkArenaAllocList.260 = type { %"struct.SkArenaAllocList<GrOpFlushState::Draw>::Node"*, %"struct.SkArenaAllocList<GrOpFlushState::Draw>::Node"* }
%"struct.SkArenaAllocList<GrOpFlushState::Draw>::Node" = type opaque
%"struct.GrOpFlushState::OpArgs" = type { %class.GrOp*, %class.GrSurfaceProxyView*, %class.GrRenderTargetProxy*, i8, %class.GrAppliedClip*, %"class.GrXferProcessor::DstProxyView", i32, i32 }
%class.GrOpsRenderPass = type { i32 (...)**, i32, %class.GrRenderTarget*, %class.sk_sp.246, %class.sk_sp.246, %class.sk_sp.246, i32, i32 }
%class.GrRenderTarget = type opaque
%"class.SkArenaAllocList<GrOpFlushState::Draw>::Iter" = type { %"struct.SkArenaAllocList<GrOpFlushState::Draw>::Node"* }
%"class.SkArenaAllocList<GrOpFlushState::InlineUpload>::Iter" = type { %"struct.SkArenaAllocList<GrOpFlushState::InlineUpload>::Node"* }
%"struct.(anonymous namespace)::TessInfo" = type { i32, i8, float }
%"class.skia::tracing_internals::ScopedTracer" = type { %"struct.skia::tracing_internals::ScopedTracer::Data"*, %"struct.skia::tracing_internals::ScopedTracer::Data" }
%"struct.skia::tracing_internals::ScopedTracer::Data" = type { i8*, i8*, i64 }
%"class.std::__1::tuple.271" = type { %"struct.std::__1::__tuple_impl.272" }
%"struct.std::__1::__tuple_impl.272" = type { %"class.std::__1::__tuple_leaf.273", %"class.std::__1::__tuple_leaf.274" }
%"class.std::__1::__tuple_leaf.273" = type { %class.sk_sp }
%"class.std::__1::__tuple_leaf.274" = type { %class.sk_sp.2 }
%class.sk_sp.275 = type { %class.SkIDChangeListener* }
%class.SkEventTracer = type { i32 (...)** }
%"struct.GrDefaultGeoProcFactory::Color" = type { i32, %struct.SkRGBA4f }
%"struct.GrDefaultGeoProcFactory::Coverage" = type <{ i32, i8, [3 x i8] }>
%"struct.GrDefaultGeoProcFactory::LocalCoords" = type { i32, %class.SkMatrix* }
%"class.(anonymous namespace)::StaticVertexAllocator" = type { %class.GrEagerVertexAllocator, %class.sk_sp, %class.sk_sp.1, %class.GrResourceProvider*, i8, i8*, i64 }
%class.GrAATriangulator = type { %class.GrTriangulator, %"struct.GrTriangulator::VertexList" }
%class.GrTriangulator = type { i32 (...)**, %class.SkPath, %class.SkArenaAlloc*, i8, i8, i8, i8, [4 x i8], %"class.GrTriangulator::BreadcrumbTriangleList" }
%"class.GrTriangulator::BreadcrumbTriangleList" = type <{ %"struct.GrTriangulator::BreadcrumbTriangleList::Node"*, %"struct.GrTriangulator::BreadcrumbTriangleList::Node"**, i32, [4 x i8] }>
%"struct.GrTriangulator::BreadcrumbTriangleList::Node" = type { [3 x %struct.SkPoint], %"struct.GrTriangulator::BreadcrumbTriangleList::Node"* }
%"struct.GrTriangulator::VertexList" = type { %"struct.GrTriangulator::Vertex"*, %"struct.GrTriangulator::Vertex"* }
%"struct.GrTriangulator::Vertex" = type <{ %struct.SkPoint, %"struct.GrTriangulator::Vertex"*, %"struct.GrTriangulator::Vertex"*, %"struct.GrTriangulator::Edge"*, %"struct.GrTriangulator::Edge"*, %"struct.GrTriangulator::Edge"*, %"struct.GrTriangulator::Edge"*, %"struct.GrTriangulator::Edge"*, %"struct.GrTriangulator::Edge"*, %"struct.GrTriangulator::Vertex"*, i8, i8, [6 x i8] }>
%"struct.GrTriangulator::Edge" = type { i32, %"struct.GrTriangulator::Vertex"*, %"struct.GrTriangulator::Vertex"*, i32, %"struct.GrTriangulator::Edge"*, %"struct.GrTriangulator::Edge"*, %"struct.GrTriangulator::Edge"*, %"struct.GrTriangulator::Edge"*, %"struct.GrTriangulator::Edge"*, %"struct.GrTriangulator::Edge"*, %"struct.GrTriangulator::Poly"*, %"struct.GrTriangulator::Poly"*, %"struct.GrTriangulator::Edge"*, %"struct.GrTriangulator::Edge"*, %"struct.GrTriangulator::Edge"*, %"struct.GrTriangulator::Edge"*, i8, i8, %"struct.GrTriangulator::Line" }
%"struct.GrTriangulator::Poly" = type <{ %"struct.GrTriangulator::Vertex"*, i32, [4 x i8], %"struct.GrTriangulator::MonotonePoly"*, %"struct.GrTriangulator::MonotonePoly"*, %"struct.GrTriangulator::Poly"*, %"struct.GrTriangulator::Poly"*, i32, [4 x i8] }>
%"struct.GrTriangulator::MonotonePoly" = type <{ i32, [4 x i8], %"struct.GrTriangulator::Edge"*, %"struct.GrTriangulator::Edge"*, %"struct.GrTriangulator::MonotonePoly"*, %"struct.GrTriangulator::MonotonePoly"*, i32, [4 x i8] }>
%"struct.GrTriangulator::Line" = type { double, double, double }
%class.GrEagerDynamicVertexAllocator = type <{ %class.GrEagerVertexAllocator, %"class.GrMeshDrawOp::Target"*, %class.sk_sp.246*, i32*, i64, i32, [4 x i8] }>
%"class.(anonymous namespace)::UniqueKeyInvalidator" = type { %class.SkIDChangeListener.base, [3 x i8], %class.GrUniqueKeyInvalidatedMessage }
%class.SkIDChangeListener.base = type { %class.SkRefCnt.base, %"struct.std::__1::atomic.14" }
%class.SkMessageBus = type { %class.SkTDArray.277, %class.SkMutex }
%class.SkTDArray.277 = type { %"class.SkMessageBus<GrUniqueKeyInvalidatedMessage, unsigned int, true>::Inbox"**, i32, i32 }

$_ZN20GrCpuVertexAllocatorD2Ev = comdat any

$_ZN20GrCpuVertexAllocatorD0Ev = comdat any

$_ZN12SkRefCntBaseD2Ev = comdat any

$_ZN27GrTriangulatingPathRendererD0Ev = comdat any

$_ZNK12SkRefCntBase16internal_disposeEv = comdat any

$_ZNK27GrTriangulatingPathRenderer4nameEv = comdat any

$_ZNK27GrTriangulatingPathRenderer19onGetStencilSupportERK13GrStyledShape = comdat any

$_ZN8SkTArrayI8SkStringLb0EE12checkReallocEiNS1_11ReallocTypeE = comdat any

$_ZN13GrStyledShapeD2Ev = comdat any

$_ZN4GrOp19onCombineIfPossibleEPS_P12SkArenaAllocRK6GrCaps = comdat any

$_ZN12GrMeshDrawOp12onPrePrepareEP18GrRecordingContextRK18GrSurfaceProxyViewP13GrAppliedClipRKN15GrXferProcessor12DstProxyViewE18GrXferBarrierFlags8GrLoadOp = comdat any

$_ZN4GrOpD2Ev = comdat any

$_ZN4GrOpD0Ev = comdat any

$_ZNK4GrOp12visitProxiesERKNSt3__18functionIFvP14GrSurfaceProxy11GrMipmappedEEE = comdat any

$_ZN11GrUniqueKeyaSERKS_ = comdat any

$_ZN12SkMessageBusI29GrUniqueKeyInvalidatedMessagejLb1EE4PostES0_ = comdat any

$_ZN8SkTArrayI29GrUniqueKeyInvalidatedMessageLb0EE12checkReallocEiNS1_11ReallocTypeE = comdat any

$_ZN8SkTArrayI29GrUniqueKeyInvalidatedMessageLb0EE4moveILb0EEENSt3__19enable_ifIXntT_EvE4typeEPv = comdat any

$_ZN22GrEagerVertexAllocatorD2Ev = comdat any

$_ZN29GrEagerDynamicVertexAllocator4lockEmi = comdat any

$_ZN29GrEagerDynamicVertexAllocator6unlockEi = comdat any

$_ZN29GrEagerDynamicVertexAllocatorD0Ev = comdat any

$_ZZN12SkArenaAlloc4makeIZNS_4makeI12GrSimpleMeshJEEEPT_DpOT0_EUlPvE_EEDTclfp_LDnEEEOS3_ENUlPcE_8__invokeESC_ = comdat any

$_ZNSt3__110__function16__policy_invokerIFvP4GrOpjEE12__call_emptyEPKNS0_16__policy_storageES3_j = comdat any

$_ZNSt3__125__throw_bad_function_callEv = comdat any

$_ZTV4GrOp = comdat any

$_ZTV29GrEagerDynamicVertexAllocator = comdat any

$_ZZNSt3__110__function8__policy14__create_emptyEvE9__policy_ = comdat any

@_ZTV27GrTriangulatingPathRenderer = hidden unnamed_addr constant { [10 x i8*] } { [10 x i8*] [i8* null, i8* null, i8* bitcast (void (%class.SkRefCntBase*)* @_ZN12SkRefCntBaseD2Ev to i8*), i8* bitcast (void (%class.GrTriangulatingPathRenderer*)* @_ZN27GrTriangulatingPathRendererD0Ev to i8*), i8* bitcast (void (%class.SkRefCntBase*)* @_ZNK12SkRefCntBase16internal_disposeEv to i8*), i8* bitcast (i8* (%class.GrTriangulatingPathRenderer*)* @_ZNK27GrTriangulatingPathRenderer4nameEv to i8*), i8* bitcast (i32 (%class.GrTriangulatingPathRenderer*, %class.GrStyledShape*)* @_ZNK27GrTriangulatingPathRenderer19onGetStencilSupportERK13GrStyledShape to i8*), i8* bitcast (i1 (%class.GrTriangulatingPathRenderer*, %"struct.GrPathRenderer::DrawPathArgs"*)* @_ZN27GrTriangulatingPathRenderer10onDrawPathERKN14GrPathRenderer12DrawPathArgsE to i8*), i8* bitcast (i32 (%class.GrTriangulatingPathRenderer*, %"struct.GrPathRenderer::CanDrawPathArgs"*)* @_ZNK27GrTriangulatingPathRenderer13onCanDrawPathERKN14GrPathRenderer15CanDrawPathArgsE to i8*), i8* bitcast (void (%class.GrPathRenderer*, %"struct.GrPathRenderer::StencilPathArgs"*)* @_ZN14GrPathRenderer13onStencilPathERKNS_15StencilPathArgsE to i8*)] }, align 8
@.str = private unnamed_addr constant [40 x i8] c"GrTriangulatingPathRenderer::onDrawPath\00", align 1
@_ZTV20GrCpuVertexAllocator = hidden unnamed_addr constant { [6 x i8*] } { [6 x i8*] [i8* null, i8* null, i8* bitcast (i8* (%class.GrCpuVertexAllocator*, i64, i32)* @_ZN20GrCpuVertexAllocator4lockEmi to i8*), i8* bitcast (void (%class.GrCpuVertexAllocator*, i32)* @_ZN20GrCpuVertexAllocator6unlockEi to i8*), i8* bitcast (void (%class.GrCpuVertexAllocator*)* @_ZN20GrCpuVertexAllocatorD2Ev to i8*), i8* bitcast (void (%class.GrCpuVertexAllocator*)* @_ZN20GrCpuVertexAllocatorD0Ev to i8*)] }, align 8
@_ZTVN12_GLOBAL__N_119TriangulatingPathOpE = internal unnamed_addr constant { [16 x i8*] } { [16 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.(anonymous namespace)::TriangulatingPathOp"*)* @_ZN12_GLOBAL__N_119TriangulatingPathOpD2Ev to i8*), i8* bitcast (void (%"class.(anonymous namespace)::TriangulatingPathOp"*)* @_ZN12_GLOBAL__N_119TriangulatingPathOpD0Ev to i8*), i8* bitcast (i8* (%"class.(anonymous namespace)::TriangulatingPathOp"*)* @_ZNK12_GLOBAL__N_119TriangulatingPathOp4nameEv to i8*), i8* bitcast (void (%"class.(anonymous namespace)::TriangulatingPathOp"*, %"class.std::__1::function.256"*)* @_ZNK12_GLOBAL__N_119TriangulatingPathOp12visitProxiesERKNSt3__18functionIFvP14GrSurfaceProxy11GrMipmappedEEE to i8*), i8* bitcast (i32 (%class.GrOp*, %class.GrOp*, %class.SkArenaAlloc*, %class.GrCaps*)* @_ZN4GrOp19onCombineIfPossibleEPS_P12SkArenaAllocRK6GrCaps to i8*), i8* bitcast (void (%class.GrMeshDrawOp*, %class.GrRecordingContext*, %class.GrSurfaceProxyView*, %class.GrAppliedClip*, %"class.GrXferProcessor::DstProxyView"*, i32, i32)* @_ZN12GrMeshDrawOp12onPrePrepareEP18GrRecordingContextRK18GrSurfaceProxyViewP13GrAppliedClipRKN15GrXferProcessor12DstProxyViewE18GrXferBarrierFlags8GrLoadOp to i8*), i8* bitcast (void (%class.GrMeshDrawOp*, %class.GrOpFlushState*)* @_ZN12GrMeshDrawOp9onPrepareEP14GrOpFlushState to i8*), i8* bitcast (void (%"class.(anonymous namespace)::TriangulatingPathOp"*, %class.GrOpFlushState*, %struct.SkRect*)* @_ZN12_GLOBAL__N_119TriangulatingPathOp9onExecuteEP14GrOpFlushStateRK6SkRect to i8*), i8* bitcast (i32 (%"class.(anonymous namespace)::TriangulatingPathOp"*)* @_ZNK12_GLOBAL__N_119TriangulatingPathOp18fixedFunctionFlagsEv to i8*), i8* bitcast (i32 (%"class.(anonymous namespace)::TriangulatingPathOp"*, %class.GrCaps*, %class.GrAppliedClip*, i32)* @_ZN12_GLOBAL__N_119TriangulatingPathOp8finalizeERK6GrCapsPK13GrAppliedClip11GrClampType to i8*), i8* bitcast (void (%"class.(anonymous namespace)::TriangulatingPathOp"*, %class.GrRecordingContext*, %class.GrSurfaceProxyView*, %class.GrAppliedClip*, %"class.GrXferProcessor::DstProxyView"*, i32, i32)* @_ZN12_GLOBAL__N_119TriangulatingPathOp17onPrePrepareDrawsEP18GrRecordingContextRK18GrSurfaceProxyViewP13GrAppliedClipRKN15GrXferProcessor12DstProxyViewE18GrXferBarrierFlags8GrLoadOp to i8*), i8* bitcast (%class.GrProgramInfo* (%"class.(anonymous namespace)::TriangulatingPathOp"*)* @_ZN12_GLOBAL__N_119TriangulatingPathOp11programInfoEv to i8*), i8* bitcast (void (%"class.(anonymous namespace)::TriangulatingPathOp"*, %class.GrCaps*, %class.SkArenaAlloc*, %class.GrSurfaceProxyView*, %class.GrAppliedClip*, %"class.GrXferProcessor::DstProxyView"*, i32, i32)* @_ZN12_GLOBAL__N_119TriangulatingPathOp19onCreateProgramInfoEPK6GrCapsP12SkArenaAllocRK18GrSurfaceProxyViewO13GrAppliedClipRKN15GrXferProcessor12DstProxyViewE18GrXferBarrierFlags8GrLoadOp to i8*), i8* bitcast (void (%"class.(anonymous namespace)::TriangulatingPathOp"*, %"class.GrMeshDrawOp::Target"*)* @_ZN12_GLOBAL__N_119TriangulatingPathOp14onPrepareDrawsEPN12GrMeshDrawOp6TargetE to i8*)] }, align 8
@_ZZN12_GLOBAL__N_119TriangulatingPathOp7ClassIDEvE8kClassID = internal unnamed_addr global i32 0, align 4
@_ZGVZN12_GLOBAL__N_119TriangulatingPathOp7ClassIDEvE8kClassID = internal global i64 0, align 8
@_ZN4GrOp14gCurrOpClassIDE = external global %"struct.std::__1::atomic.261", align 4
@.str.1 = private unnamed_addr constant [42 x i8] c"../../third_party/skia/src/gpu/ops/GrOp.h\00", align 1
@.str.2 = private unnamed_addr constant [80 x i8] c"This should never wrap as it should only be called once for each GrOp subclass.\00", align 1
@_ZTV4GrOp = linkonce_odr hidden unnamed_addr constant { [10 x i8*] } { [10 x i8*] [i8* null, i8* null, i8* bitcast (void (%class.GrOp*)* @_ZN4GrOpD2Ev to i8*), i8* bitcast (void (%class.GrOp*)* @_ZN4GrOpD0Ev to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void (%class.GrOp*, %"class.std::__1::function.256"*)* @_ZNK4GrOp12visitProxiesERKNSt3__18functionIFvP14GrSurfaceProxy11GrMipmappedEEE to i8*), i8* bitcast (i32 (%class.GrOp*, %class.GrOp*, %class.SkArenaAlloc*, %class.GrCaps*)* @_ZN4GrOp19onCombineIfPossibleEPS_P12SkArenaAllocRK6GrCaps to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*)] }, comdat, align 8
@.str.3 = private unnamed_addr constant [20 x i8] c"TriangulatingPathOp\00", align 1
@.str.4 = private unnamed_addr constant [29 x i8] c"disabled-by-default-skia.gpu\00", align 1
@__PRETTY_FUNCTION__._ZN12_GLOBAL__N_119TriangulatingPathOp17onPrePrepareDrawsEP18GrRecordingContextRK18GrSurfaceProxyViewP13GrAppliedClipRKN15GrXferProcessor12DstProxyViewE18GrXferBarrierFlags8GrLoadOp = private unnamed_addr constant [211 x i8] c"virtual void (anonymous namespace)::TriangulatingPathOp::onPrePrepareDraws(GrRecordingContext *, const GrSurfaceProxyView &, GrAppliedClip *, const GrXferProcessor::DstProxyView &, GrXferBarrierFlags, GrLoadOp)\00", align 1
@_ZZN12_GLOBAL__N_119TriangulatingPathOp9CreateKeyEP11GrUniqueKeyRK13GrStyledShapeRK7SkIRectE7kDomain = internal global i32 0, align 4
@_ZGVZN12_GLOBAL__N_119TriangulatingPathOp9CreateKeyEP11GrUniqueKeyRK13GrStyledShapeRK7SkIRectE7kDomain = internal global i64 0, align 8
@.str.5 = private unnamed_addr constant [5 x i8] c"Path\00", align 1
@_ZTV14GrTriangulator = external unnamed_addr constant { [5 x i8*] }, align 8
@_ZTVN12_GLOBAL__N_120UniqueKeyInvalidatorE = internal unnamed_addr constant { [6 x i8*] } { [6 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.(anonymous namespace)::UniqueKeyInvalidator"*)* @_ZN12_GLOBAL__N_120UniqueKeyInvalidatorD2Ev to i8*), i8* bitcast (void (%"class.(anonymous namespace)::UniqueKeyInvalidator"*)* @_ZN12_GLOBAL__N_120UniqueKeyInvalidatorD0Ev to i8*), i8* bitcast (void (%class.SkRefCntBase*)* @_ZNK12SkRefCntBase16internal_disposeEv to i8*), i8* bitcast (void (%"class.(anonymous namespace)::UniqueKeyInvalidator"*)* @_ZN12_GLOBAL__N_120UniqueKeyInvalidator7changedEv to i8*)] }, align 8
@_ZTV29GrEagerDynamicVertexAllocator = linkonce_odr hidden unnamed_addr constant { [6 x i8*] } { [6 x i8*] [i8* null, i8* null, i8* bitcast (i8* (%class.GrEagerDynamicVertexAllocator*, i64, i32)* @_ZN29GrEagerDynamicVertexAllocator4lockEmi to i8*), i8* bitcast (void (%class.GrEagerDynamicVertexAllocator*, i32)* @_ZN29GrEagerDynamicVertexAllocator6unlockEi to i8*), i8* bitcast (void (%class.GrEagerVertexAllocator*)* @_ZN22GrEagerVertexAllocatorD2Ev to i8*), i8* bitcast (void (%class.GrEagerDynamicVertexAllocator*)* @_ZN29GrEagerDynamicVertexAllocatorD0Ev to i8*)] }, comdat, align 8
@_ZTV16GrAATriangulator = external unnamed_addr constant { [5 x i8*] }, align 8
@_ZTVN12_GLOBAL__N_121StaticVertexAllocatorE = internal unnamed_addr constant { [6 x i8*] } { [6 x i8*] [i8* null, i8* null, i8* bitcast (i8* (%"class.(anonymous namespace)::StaticVertexAllocator"*, i64, i32)* @_ZN12_GLOBAL__N_121StaticVertexAllocator4lockEmi to i8*), i8* bitcast (void (%"class.(anonymous namespace)::StaticVertexAllocator"*, i32)* @_ZN12_GLOBAL__N_121StaticVertexAllocator6unlockEi to i8*), i8* bitcast (void (%"class.(anonymous namespace)::StaticVertexAllocator"*)* @_ZN12_GLOBAL__N_121StaticVertexAllocatorD2Ev to i8*), i8* bitcast (void (%"class.(anonymous namespace)::StaticVertexAllocator"*)* @_ZN12_GLOBAL__N_121StaticVertexAllocatorD0Ev to i8*)] }, align 8
@.str.6 = private unnamed_addr constant [14 x i8] c"Triangulating\00", align 1
@_ZZNSt3__110__function8__policy14__create_emptyEvE9__policy_ = linkonce_odr hidden constant %"struct.std::__1::__function::__policy" { i8* (i8*)* null, void (i8*)* null, i8 1, %"class.std::type_info"* null }, comdat, align 8
@llvm.global_ctors = appending global [0 x { i32, void ()*, i8* }] zeroinitializer
@_ZZN12_GLOBAL__N_119TriangulatingPathOp17onPrePrepareDrawsEP18GrRecordingContextRK18GrSurfaceProxyViewP13GrAppliedClipRKN15GrXferProcessor12DstProxyViewE18GrXferBarrierFlags8GrLoadOpE28trace_event_unique_atomic500.0.0 = internal unnamed_addr global i64 0, align 8

@_ZN27GrTriangulatingPathRendererC1Ev = hidden unnamed_addr alias void (%class.GrTriangulatingPathRenderer*), void (%class.GrTriangulatingPathRenderer*)* @_ZN27GrTriangulatingPathRendererC2Ev

; Function Attrs: argmemonly nounwind
declare {}* @llvm.invariant.start.p0i8(i64 immarg, i8* nocapture) #0

; Function Attrs: nounwind ssp uwtable
define hidden i8* @_ZN20GrCpuVertexAllocator4lockEmi(%class.GrCpuVertexAllocator* nocapture, i64, i32) unnamed_addr #1 align 2 {
  %4 = sext i32 %2 to i64
  %5 = mul i64 %4, %1
  %6 = tail call i8* @_Z15sk_malloc_flagsmj(i64 %5, i32 2) #15
  %7 = getelementptr inbounds %class.GrCpuVertexAllocator, %class.GrCpuVertexAllocator* %0, i64 0, i32 2
  store i8* %6, i8** %7, align 8
  %8 = getelementptr inbounds %class.GrCpuVertexAllocator, %class.GrCpuVertexAllocator* %0, i64 0, i32 3
  store i64 %1, i64* %8, align 8
  ret i8* %6
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN20GrCpuVertexAllocator6unlockEi(%class.GrCpuVertexAllocator* nocapture, i32) unnamed_addr #1 align 2 {
  %3 = alloca %class.sk_sp, align 8
  %4 = getelementptr inbounds %class.GrCpuVertexAllocator, %class.GrCpuVertexAllocator* %0, i64 0, i32 2
  %5 = load i8*, i8** %4, align 8
  %6 = sext i32 %1 to i64
  %7 = getelementptr inbounds %class.GrCpuVertexAllocator, %class.GrCpuVertexAllocator* %0, i64 0, i32 3
  %8 = load i64, i64* %7, align 8
  %9 = mul i64 %8, %6
  %10 = tail call i8* @_Z16sk_realloc_throwPvm(i8* %5, i64 %9) #15
  store i8* %10, i8** %4, align 8
  %11 = bitcast %class.sk_sp* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %11) #15
  %12 = load i64, i64* %7, align 8
  call void @_ZN17GrThreadSafeCache14MakeVertexDataEPKvim(%class.sk_sp* nonnull sret %3, i8* %10, i32 %1, i64 %12) #15
  %13 = getelementptr inbounds %class.GrCpuVertexAllocator, %class.GrCpuVertexAllocator* %0, i64 0, i32 1
  %14 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %3, i64 0, i32 0
  %15 = bitcast %class.sk_sp* %3 to i64*
  %16 = load i64, i64* %15, align 8
  store %"class.GrThreadSafeCache::VertexData"* null, %"class.GrThreadSafeCache::VertexData"** %14, align 8
  %17 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %13, i64 0, i32 0
  %18 = load %"class.GrThreadSafeCache::VertexData"*, %"class.GrThreadSafeCache::VertexData"** %17, align 8
  %19 = bitcast %class.sk_sp* %13 to i64*
  store i64 %16, i64* %19, align 8
  %20 = icmp eq %"class.GrThreadSafeCache::VertexData"* %18, null
  br i1 %20, label %27, label %21

21:                                               ; preds = %2
  %22 = getelementptr inbounds %"class.GrThreadSafeCache::VertexData", %"class.GrThreadSafeCache::VertexData"* %18, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %23 = atomicrmw add i32* %22, i32 -1 acq_rel
  %24 = icmp eq i32 %23, 1
  br i1 %24, label %25, label %27

25:                                               ; preds = %21
  call void @_ZN17GrThreadSafeCache10VertexDataD1Ev(%"class.GrThreadSafeCache::VertexData"* nonnull %18) #15
  %26 = bitcast %"class.GrThreadSafeCache::VertexData"* %18 to i8*
  call void @_ZdlPv(i8* %26) #16
  br label %27

27:                                               ; preds = %2, %21, %25
  %28 = load %"class.GrThreadSafeCache::VertexData"*, %"class.GrThreadSafeCache::VertexData"** %14, align 8
  %29 = icmp eq %"class.GrThreadSafeCache::VertexData"* %28, null
  br i1 %29, label %36, label %30

30:                                               ; preds = %27
  %31 = getelementptr inbounds %"class.GrThreadSafeCache::VertexData", %"class.GrThreadSafeCache::VertexData"* %28, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %32 = atomicrmw add i32* %31, i32 -1 acq_rel
  %33 = icmp eq i32 %32, 1
  br i1 %33, label %34, label %36

34:                                               ; preds = %30
  call void @_ZN17GrThreadSafeCache10VertexDataD1Ev(%"class.GrThreadSafeCache::VertexData"* nonnull %28) #15
  %35 = bitcast %"class.GrThreadSafeCache::VertexData"* %28 to i8*
  call void @_ZdlPv(i8* %35) #16
  br label %36

36:                                               ; preds = %27, %30, %34
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %11) #15
  %37 = bitcast i8** %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %37, i8 0, i64 16, i1 false)
  ret void
}

declare i8* @_Z16sk_realloc_throwPvm(i8*, i64) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #0

declare void @_ZN17GrThreadSafeCache14MakeVertexDataEPKvim(%class.sk_sp* sret, i8*, i32, i64) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #0

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN20GrCpuVertexAllocator16detachVertexDataEv(%class.sk_sp* noalias nocapture sret, %class.GrCpuVertexAllocator* nocapture) local_unnamed_addr #3 align 2 {
  %3 = getelementptr inbounds %class.GrCpuVertexAllocator, %class.GrCpuVertexAllocator* %1, i64 0, i32 1
  %4 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %3, i64 0, i32 0
  %5 = bitcast %class.sk_sp* %3 to i64*
  %6 = load i64, i64* %5, align 8
  store %"class.GrThreadSafeCache::VertexData"* null, %"class.GrThreadSafeCache::VertexData"** %4, align 8
  %7 = bitcast %class.sk_sp* %0 to i64*
  store i64 %6, i64* %7, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN27GrTriangulatingPathRendererC2Ev(%class.GrTriangulatingPathRenderer*) unnamed_addr #1 align 2 {
  %2 = bitcast %class.GrTriangulatingPathRenderer* %0 to %class.GrPathRenderer*
  tail call void @_ZN14GrPathRendererC2Ev(%class.GrPathRenderer* %2) #15
  %3 = getelementptr inbounds %class.GrTriangulatingPathRenderer, %class.GrTriangulatingPathRenderer* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [10 x i8*] }, { [10 x i8*] }* @_ZTV27GrTriangulatingPathRenderer, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %3, align 8
  %4 = getelementptr inbounds %class.GrTriangulatingPathRenderer, %class.GrTriangulatingPathRenderer* %0, i64 0, i32 1
  store i32 100, i32* %4, align 4
  ret void
}

declare void @_ZN14GrPathRendererC2Ev(%class.GrPathRenderer*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZNK27GrTriangulatingPathRenderer13onCanDrawPathERKN14GrPathRenderer15CanDrawPathArgsE(%class.GrTriangulatingPathRenderer* nocapture readonly, %"struct.GrPathRenderer::CanDrawPathArgs"* nocapture readonly dereferenceable(64)) unnamed_addr #1 align 2 {
  %3 = alloca %class.SkPath, align 8
  %4 = getelementptr inbounds %"struct.GrPathRenderer::CanDrawPathArgs", %"struct.GrPathRenderer::CanDrawPathArgs"* %1, i64 0, i32 6
  %5 = load %class.SkSurfaceProps*, %class.SkSurfaceProps** %4, align 8
  %6 = getelementptr inbounds %class.SkSurfaceProps, %class.SkSurfaceProps* %5, i64 0, i32 0
  %7 = load i32, i32* %6, align 4
  %8 = and i32 %7, 2
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %10, label %59

10:                                               ; preds = %2
  %11 = getelementptr inbounds %"struct.GrPathRenderer::CanDrawPathArgs", %"struct.GrPathRenderer::CanDrawPathArgs"* %1, i64 0, i32 4
  %12 = load %class.GrStyledShape*, %class.GrStyledShape** %11, align 8
  %13 = getelementptr inbounds %class.GrStyledShape, %class.GrStyledShape* %12, i64 0, i32 1, i32 0
  %14 = tail call i32 @_ZNK11SkStrokeRec8getStyleEv(%class.SkStrokeRec* %13) #15
  %15 = icmp eq i32 %14, 1
  br i1 %15, label %16, label %59

16:                                               ; preds = %10
  %17 = getelementptr inbounds %class.GrStyledShape, %class.GrStyledShape* %12, i64 0, i32 1, i32 1, i32 0
  %18 = load %class.SkPathEffect*, %class.SkPathEffect** %17, align 8
  %19 = icmp eq %class.SkPathEffect* %18, null
  br i1 %19, label %20, label %59

20:                                               ; preds = %16
  %21 = load %class.GrStyledShape*, %class.GrStyledShape** %11, align 8
  %22 = getelementptr inbounds %class.GrStyledShape, %class.GrStyledShape* %21, i64 0, i32 0
  %23 = getelementptr inbounds %class.GrStyledShape, %class.GrStyledShape* %21, i64 0, i32 1, i32 0
  %24 = tail call i32 @_ZNK11SkStrokeRec8getStyleEv(%class.SkStrokeRec* %23) #15
  %25 = icmp eq i32 %24, 1
  br i1 %25, label %26, label %30

26:                                               ; preds = %20
  %27 = getelementptr inbounds %class.GrStyledShape, %class.GrStyledShape* %21, i64 0, i32 1, i32 1, i32 0
  %28 = load %class.SkPathEffect*, %class.SkPathEffect** %27, align 8
  %29 = icmp eq %class.SkPathEffect* %28, null
  br label %30

30:                                               ; preds = %20, %26
  %31 = phi i1 [ false, %20 ], [ %29, %26 ]
  %32 = tail call zeroext i1 @_ZNK7GrShape6convexEb(%class.GrShape* %22, i1 zeroext %31) #15
  br i1 %32, label %59, label %33

33:                                               ; preds = %30
  %34 = getelementptr inbounds %"struct.GrPathRenderer::CanDrawPathArgs", %"struct.GrPathRenderer::CanDrawPathArgs"* %1, i64 0, i32 7
  %35 = load i32, i32* %34, align 8
  switch i32 %35, label %58 [
    i32 0, label %36
    i32 2, label %36
    i32 1, label %40
  ]

36:                                               ; preds = %33, %33
  %37 = load %class.GrStyledShape*, %class.GrStyledShape** %11, align 8
  %38 = tail call i32 @_ZNK13GrStyledShape15unstyledKeySizeEv(%class.GrStyledShape* %37) #15
  %39 = icmp sgt i32 %38, -1
  br i1 %39, label %58, label %59

40:                                               ; preds = %33
  %41 = bitcast %class.SkPath* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %41) #15
  %42 = bitcast %class.SkPath* %3 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %42, i8 -86, i64 16, i1 false)
  call void @_ZN6SkPathC1Ev(%class.SkPath* nonnull %3) #15
  %43 = load %class.GrStyledShape*, %class.GrStyledShape** %11, align 8
  %44 = getelementptr inbounds %class.GrStyledShape, %class.GrStyledShape* %43, i64 0, i32 0
  %45 = getelementptr inbounds %class.GrStyledShape, %class.GrStyledShape* %43, i64 0, i32 1, i32 0
  %46 = call i32 @_ZNK11SkStrokeRec8getStyleEv(%class.SkStrokeRec* %45) #15
  %47 = icmp eq i32 %46, 1
  br i1 %47, label %48, label %52

48:                                               ; preds = %40
  %49 = getelementptr inbounds %class.GrStyledShape, %class.GrStyledShape* %43, i64 0, i32 1, i32 1, i32 0
  %50 = load %class.SkPathEffect*, %class.SkPathEffect** %49, align 8
  %51 = icmp eq %class.SkPathEffect* %50, null
  br label %52

52:                                               ; preds = %40, %48
  %53 = phi i1 [ false, %40 ], [ %51, %48 ]
  call void @_ZNK7GrShape6asPathEP6SkPathb(%class.GrShape* %44, %class.SkPath* nonnull %3, i1 zeroext %53) #15
  %54 = call i32 @_ZNK6SkPath10countVerbsEv(%class.SkPath* nonnull %3) #15
  %55 = getelementptr inbounds %class.GrTriangulatingPathRenderer, %class.GrTriangulatingPathRenderer* %0, i64 0, i32 1
  %56 = load i32, i32* %55, align 4
  %57 = icmp sgt i32 %54, %56
  call void @_ZN6SkPathD1Ev(%class.SkPath* nonnull %3) #15
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %41) #15
  br i1 %57, label %59, label %58

58:                                               ; preds = %52, %36, %33
  br label %59

59:                                               ; preds = %10, %36, %16, %30, %2, %52, %58
  %60 = phi i32 [ 2, %58 ], [ 0, %52 ], [ 0, %2 ], [ 0, %30 ], [ 0, %16 ], [ 0, %36 ], [ 0, %10 ]
  ret i32 %60
}

declare void @_ZN6SkPathC1Ev(%class.SkPath*) unnamed_addr #2

declare i32 @_ZNK6SkPath10countVerbsEv(%class.SkPath*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN6SkPathD1Ev(%class.SkPath*) unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN27GrTriangulatingPathRenderer10onDrawPathERKN14GrPathRenderer12DrawPathArgsE(%class.GrTriangulatingPathRenderer* nocapture readnone, %"struct.GrPathRenderer::DrawPathArgs"* nocapture readonly dereferenceable(72)) unnamed_addr #1 align 2 {
  %3 = alloca %struct.SkRGBA4f, align 4
  %4 = alloca <2 x i64>, align 16
  %5 = alloca %class.SkMatrix, align 8
  %6 = alloca %class.GrStyledShape, align 8
  %7 = alloca %class.SkString, align 8
  %8 = alloca %"class.std::__1::function.227", align 8
  %9 = getelementptr inbounds %"struct.GrPathRenderer::DrawPathArgs", %"struct.GrPathRenderer::DrawPathArgs"* %1, i64 0, i32 3
  %10 = bitcast %class.GrSurfaceDrawContext** %9 to %class.GrSurfaceContext**
  %11 = load %class.GrSurfaceContext*, %class.GrSurfaceContext** %10, align 8
  %12 = tail call %class.GrAuditTrail* @_ZN16GrSurfaceContext10auditTrailEv(%class.GrSurfaceContext* %11) #15
  %13 = getelementptr inbounds %class.GrAuditTrail, %class.GrAuditTrail* %12, i64 0, i32 6
  %14 = load i8, i8* %13, align 4, !range !2
  %15 = icmp eq i8 %14, 0
  br i1 %15, label %32, label %16

16:                                               ; preds = %2
  %17 = load %class.GrSurfaceContext*, %class.GrSurfaceContext** %10, align 8
  %18 = tail call %class.GrAuditTrail* @_ZN16GrSurfaceContext10auditTrailEv(%class.GrSurfaceContext* %17) #15
  %19 = getelementptr inbounds %class.GrAuditTrail, %class.GrAuditTrail* %18, i64 0, i32 4
  %20 = bitcast %class.SkString* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #15
  call void @_ZN8SkStringC1EPKc(%class.SkString* nonnull %7, i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str, i64 0, i64 0)) #15
  call void @_ZN8SkTArrayI8SkStringLb0EE12checkReallocEiNS1_11ReallocTypeE(%class.SkTArray.102* %19, i32 1, i32 1) #15
  %21 = getelementptr inbounds %class.SkTArray.102, %class.SkTArray.102* %19, i64 0, i32 0
  %22 = load %class.SkString*, %class.SkString** %21, align 8
  %23 = getelementptr inbounds %class.GrAuditTrail, %class.GrAuditTrail* %18, i64 0, i32 4, i32 1
  %24 = load i64, i64* %23, align 8
  %25 = lshr i64 %24, 1
  %26 = and i64 %25, 2147483647
  %27 = getelementptr inbounds %class.SkString, %class.SkString* %22, i64 %26
  %28 = add i64 %24, 2
  %29 = and i64 %28, 4294967294
  %30 = and i64 %24, -4294967295
  %31 = or i64 %29, %30
  store i64 %31, i64* %23, align 8
  call void @_ZN8SkStringC1EOS_(%class.SkString* %27, %class.SkString* nonnull dereferenceable(8) %7) #15
  call void @_ZN8SkStringD1Ev(%class.SkString* nonnull %7) #15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #15
  br label %32

32:                                               ; preds = %2, %16
  %33 = getelementptr inbounds %"struct.GrPathRenderer::DrawPathArgs", %"struct.GrPathRenderer::DrawPathArgs"* %1, i64 0, i32 1
  %34 = load %class.GrPaint*, %class.GrPaint** %33, align 8
  %35 = getelementptr inbounds %"struct.GrPathRenderer::DrawPathArgs", %"struct.GrPathRenderer::DrawPathArgs"* %1, i64 0, i32 7
  %36 = load %class.GrStyledShape*, %class.GrStyledShape** %35, align 8
  %37 = getelementptr inbounds %"struct.GrPathRenderer::DrawPathArgs", %"struct.GrPathRenderer::DrawPathArgs"* %1, i64 0, i32 6
  %38 = bitcast %class.SkMatrix** %37 to i8**
  %39 = load i8*, i8** %38, align 8
  %40 = getelementptr inbounds %"struct.GrPathRenderer::DrawPathArgs", %"struct.GrPathRenderer::DrawPathArgs"* %1, i64 0, i32 5
  %41 = bitcast %struct.SkIRect** %40 to <2 x i64>**
  %42 = load <2 x i64>*, <2 x i64>** %41, align 8
  %43 = load <2 x i64>, <2 x i64>* %42, align 4
  %44 = getelementptr inbounds %"struct.GrPathRenderer::DrawPathArgs", %"struct.GrPathRenderer::DrawPathArgs"* %1, i64 0, i32 8
  %45 = load i32, i32* %44, align 8
  %46 = getelementptr inbounds %"struct.GrPathRenderer::DrawPathArgs", %"struct.GrPathRenderer::DrawPathArgs"* %1, i64 0, i32 2
  %47 = load %struct.GrUserStencilSettings*, %struct.GrUserStencilSettings** %46, align 8
  %48 = bitcast %class.GrStyledShape* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 208, i8* nonnull %48)
  call void @_ZN13GrStyledShapeC1ERKS_(%class.GrStyledShape* nonnull %6, %class.GrStyledShape* dereferenceable(208) %36) #15
  %49 = bitcast %class.SkMatrix* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %49) #15
  %50 = bitcast <2 x i64>* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %50) #15
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %49, i8* align 4 %39, i64 40, i1 false) #15
  %51 = bitcast <2 x i64>* %4 to %struct.SkIRect*
  store <2 x i64> %43, <2 x i64>* %4, align 16
  %52 = bitcast %struct.SkRGBA4f* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %52) #15
  %53 = getelementptr inbounds %class.GrPaint, %class.GrPaint* %34, i64 0, i32 5
  %54 = bitcast %struct.SkRGBA4f* %53 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %52, i8* align 4 %54, i64 16, i1 false) #15
  %55 = getelementptr inbounds %class.GrPaint, %class.GrPaint* %34, i64 0, i32 3
  %56 = load i8, i8* %55, align 8, !range !2
  %57 = icmp eq i8 %56, 0
  br i1 %57, label %60, label %58

58:                                               ; preds = %32
  %59 = call i8* @_Znwm(i64 384) #16
  br label %64

60:                                               ; preds = %32
  %61 = call i8* @_Znwm(i64 416) #15
  %62 = getelementptr inbounds i8, i8* %61, i64 384
  %63 = bitcast i8* %62 to %class.GrProcessorSet*
  call void @_ZN14GrProcessorSetC1EO7GrPaint(%class.GrProcessorSet* %63, %class.GrPaint* dereferenceable(48) %34) #15
  br label %64

64:                                               ; preds = %58, %60
  %65 = phi i8* [ %59, %58 ], [ %61, %60 ]
  %66 = phi %class.GrProcessorSet* [ null, %58 ], [ %63, %60 ]
  %67 = bitcast i8* %65 to %"class.(anonymous namespace)::TriangulatingPathOp"*
  call fastcc void @_ZN12_GLOBAL__N_119TriangulatingPathOpC2EP14GrProcessorSetRK8SkRGBA4fIL11SkAlphaType2EERK13GrStyledShapeRK8SkMatrixRK7SkIRect8GrAATypePK21GrUserStencilSettings(%"class.(anonymous namespace)::TriangulatingPathOp"* nonnull %67, %class.GrProcessorSet* %66, %struct.SkRGBA4f* nonnull dereferenceable(16) %3, %class.GrStyledShape* nonnull dereferenceable(208) %6, %class.SkMatrix* nonnull dereferenceable(40) %5, %struct.SkIRect* nonnull dereferenceable(16) %51, i32 %45, %struct.GrUserStencilSettings* %47) #15
  %68 = bitcast i8* %65 to %class.GrOp*
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %52) #15
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %49) #15
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %50) #15
  call void @_ZN13GrStyledShapeD2Ev(%class.GrStyledShape* nonnull %6) #15
  call void @llvm.lifetime.end.p0i8(i64 208, i8* nonnull %48)
  %69 = load %class.GrSurfaceDrawContext*, %class.GrSurfaceDrawContext** %9, align 8
  %70 = getelementptr inbounds %"struct.GrPathRenderer::DrawPathArgs", %"struct.GrPathRenderer::DrawPathArgs"* %1, i64 0, i32 4
  %71 = load %class.GrClip*, %class.GrClip** %70, align 8
  %72 = bitcast %"class.std::__1::function.227"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %72) #15
  %73 = getelementptr inbounds %"class.std::__1::function.227", %"class.std::__1::function.227"* %8, i64 0, i32 0, i32 1, i32 0
  store void (%"union.std::__1::__function::__policy_storage"*, %class.GrOp*, i32)* @_ZNSt3__110__function16__policy_invokerIFvP4GrOpjEE12__call_emptyEPKNS0_16__policy_storageES3_j, void (%"union.std::__1::__function::__policy_storage"*, %class.GrOp*, i32)** %73, align 8
  %74 = getelementptr inbounds %"class.std::__1::function.227", %"class.std::__1::function.227"* %8, i64 0, i32 0, i32 2
  store %"struct.std::__1::__function::__policy"* @_ZZNSt3__110__function8__policy14__create_emptyEvE9__policy_, %"struct.std::__1::__function::__policy"** %74, align 8
  call void @_ZN20GrSurfaceDrawContext9addDrawOpEPK6GrClipNSt3__110unique_ptrI4GrOpNS3_14default_deleteIS5_EEEERKNS3_8functionIFvPS5_jEEE(%class.GrSurfaceDrawContext* %69, %class.GrClip* %71, %class.GrOp* %68, %"class.std::__1::function.227"* nonnull dereferenceable(32) %8) #15
  %75 = load %"struct.std::__1::__function::__policy"*, %"struct.std::__1::__function::__policy"** %74, align 8
  %76 = getelementptr inbounds %"struct.std::__1::__function::__policy", %"struct.std::__1::__function::__policy"* %75, i64 0, i32 1
  %77 = load void (i8*)*, void (i8*)** %76, align 8
  %78 = icmp eq void (i8*)* %77, null
  br i1 %78, label %82, label %79

79:                                               ; preds = %64
  %80 = getelementptr inbounds %"class.std::__1::function.227", %"class.std::__1::function.227"* %8, i64 0, i32 0, i32 0, i32 0
  %81 = load i8*, i8** %80, align 8
  call void %77(i8* %81) #15
  br label %82

82:                                               ; preds = %79, %64
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %72) #15
  ret i1 true
}

declare %class.GrAuditTrail* @_ZN16GrSurfaceContext10auditTrailEv(%class.GrSurfaceContext*) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #0

declare void @_ZN20GrSurfaceDrawContext9addDrawOpEPK6GrClipNSt3__110unique_ptrI4GrOpNS3_14default_deleteIS5_EEEERKNS3_8functionIFvPS5_jEEE(%class.GrSurfaceDrawContext*, %class.GrClip*, %class.GrOp*, %"class.std::__1::function.227"* dereferenceable(32)) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN20GrCpuVertexAllocatorD2Ev(%class.GrCpuVertexAllocator*) unnamed_addr #5 comdat align 2 {
  %2 = getelementptr inbounds %class.GrCpuVertexAllocator, %class.GrCpuVertexAllocator* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTV20GrCpuVertexAllocator, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %class.GrCpuVertexAllocator, %class.GrCpuVertexAllocator* %0, i64 0, i32 1, i32 0
  %4 = load %"class.GrThreadSafeCache::VertexData"*, %"class.GrThreadSafeCache::VertexData"** %3, align 8
  %5 = icmp eq %"class.GrThreadSafeCache::VertexData"* %4, null
  br i1 %5, label %12, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.GrThreadSafeCache::VertexData", %"class.GrThreadSafeCache::VertexData"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %8 = atomicrmw add i32* %7, i32 -1 acq_rel
  %9 = icmp eq i32 %8, 1
  br i1 %9, label %10, label %12

10:                                               ; preds = %6
  tail call void @_ZN17GrThreadSafeCache10VertexDataD1Ev(%"class.GrThreadSafeCache::VertexData"* nonnull %4) #15
  %11 = bitcast %"class.GrThreadSafeCache::VertexData"* %4 to i8*
  tail call void @_ZdlPv(i8* %11) #16
  br label %12

12:                                               ; preds = %1, %6, %10
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN20GrCpuVertexAllocatorD0Ev(%class.GrCpuVertexAllocator*) unnamed_addr #5 comdat align 2 {
  %2 = getelementptr inbounds %class.GrCpuVertexAllocator, %class.GrCpuVertexAllocator* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTV20GrCpuVertexAllocator, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %class.GrCpuVertexAllocator, %class.GrCpuVertexAllocator* %0, i64 0, i32 1, i32 0
  %4 = load %"class.GrThreadSafeCache::VertexData"*, %"class.GrThreadSafeCache::VertexData"** %3, align 8
  %5 = icmp eq %"class.GrThreadSafeCache::VertexData"* %4, null
  br i1 %5, label %12, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.GrThreadSafeCache::VertexData", %"class.GrThreadSafeCache::VertexData"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %8 = atomicrmw add i32* %7, i32 -1 acq_rel
  %9 = icmp eq i32 %8, 1
  br i1 %9, label %10, label %12

10:                                               ; preds = %6
  tail call void @_ZN17GrThreadSafeCache10VertexDataD1Ev(%"class.GrThreadSafeCache::VertexData"* nonnull %4) #15
  %11 = bitcast %"class.GrThreadSafeCache::VertexData"* %4 to i8*
  tail call void @_ZdlPv(i8* %11) #16
  br label %12

12:                                               ; preds = %1, %6, %10
  %13 = bitcast %class.GrCpuVertexAllocator* %0 to i8*
  tail call void @_ZdlPv(i8* %13) #16
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN12SkRefCntBaseD2Ev(%class.SkRefCntBase*) unnamed_addr #1 comdat align 2 {
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN27GrTriangulatingPathRendererD0Ev(%class.GrTriangulatingPathRenderer*) unnamed_addr #5 comdat align 2 {
  %2 = bitcast %class.GrTriangulatingPathRenderer* %0 to i8*
  tail call void @_ZdlPv(i8* %2) #16
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK12SkRefCntBase16internal_disposeEv(%class.SkRefCntBase*) unnamed_addr #1 comdat align 2 {
  %2 = icmp eq %class.SkRefCntBase* %0, null
  br i1 %2, label %8, label %3

3:                                                ; preds = %1
  %4 = bitcast %class.SkRefCntBase* %0 to void (%class.SkRefCntBase*)***
  %5 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %4, align 8
  %6 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %5, i64 1
  %7 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %6, align 8
  tail call void %7(%class.SkRefCntBase* nonnull %0) #15
  br label %8

8:                                                ; preds = %3, %1
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZNK27GrTriangulatingPathRenderer4nameEv(%class.GrTriangulatingPathRenderer*) unnamed_addr #1 comdat align 2 {
  ret i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.6, i64 0, i64 0)
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK27GrTriangulatingPathRenderer19onGetStencilSupportERK13GrStyledShape(%class.GrTriangulatingPathRenderer*, %class.GrStyledShape* dereferenceable(208)) unnamed_addr #1 comdat align 2 {
  ret i32 0
}

declare void @_ZN14GrPathRenderer13onStencilPathERKNS_15StencilPathArgsE(%class.GrPathRenderer*, %"struct.GrPathRenderer::StencilPathArgs"* dereferenceable(56)) unnamed_addr #2

declare i8* @_Z15sk_malloc_flagsmj(i64, i32) local_unnamed_addr #2

declare i32 @_ZNK11SkStrokeRec8getStyleEv(%class.SkStrokeRec*) local_unnamed_addr #2

declare zeroext i1 @_ZNK7GrShape6convexEb(%class.GrShape*, i1 zeroext) local_unnamed_addr #2

declare i32 @_ZNK13GrStyledShape15unstyledKeySizeEv(%class.GrStyledShape*) local_unnamed_addr #2

declare void @_ZNK7GrShape6asPathEP6SkPathb(%class.GrShape*, %class.SkPath*, i1 zeroext) local_unnamed_addr #2

declare void @_ZN8SkStringC1EPKc(%class.SkString*, i8*) unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN8SkStringD1Ev(%class.SkString*) unnamed_addr #4

declare void @_ZN8SkStringC1EOS_(%class.SkString*, %class.SkString* dereferenceable(8)) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN8SkTArrayI8SkStringLb0EE12checkReallocEiNS1_11ReallocTypeE(%class.SkTArray.102*, i32, i32) local_unnamed_addr #1 comdat align 2 {
  %4 = getelementptr inbounds %class.SkTArray.102, %class.SkTArray.102* %0, i64 0, i32 1
  %5 = load i64, i64* %4, align 8
  %6 = lshr i64 %5, 1
  %7 = trunc i64 %6 to i32
  %8 = and i32 %7, 2147483647
  %9 = add nsw i32 %8, %1
  %10 = sext i32 %9 to i64
  %11 = lshr i64 %5, 33
  %12 = icmp slt i64 %11, %10
  %13 = mul nsw i64 %10, 3
  %14 = icmp sle i64 %11, %13
  %15 = and i64 %5, 1
  %16 = icmp eq i64 %15, 0
  %17 = or i1 %16, %14
  br i1 %17, label %21, label %18

18:                                               ; preds = %3
  %19 = and i64 %5, 4294967296
  %20 = icmp eq i64 %19, 0
  br label %21

21:                                               ; preds = %3, %18
  %22 = phi i1 [ false, %3 ], [ %20, %18 ]
  %23 = or i1 %12, %22
  br i1 %23, label %24, label %76

24:                                               ; preds = %21
  %25 = icmp eq i32 %2, 0
  br i1 %25, label %32, label %26

26:                                               ; preds = %24
  %27 = add nsw i64 %10, 1
  %28 = ashr i64 %27, 1
  %29 = add nsw i64 %10, 7
  %30 = add nsw i64 %29, %28
  %31 = and i64 %30, -8
  br label %32

32:                                               ; preds = %24, %26
  %33 = phi i64 [ %31, %26 ], [ %10, %24 ]
  %34 = icmp eq i64 %33, %11
  br i1 %34, label %76, label %35

35:                                               ; preds = %32
  %36 = icmp slt i64 %33, 2147483647
  %37 = select i1 %36, i64 %33, i64 2147483647
  %38 = icmp sgt i64 %37, -2147483647
  %39 = select i1 %38, i64 %37, i64 -2147483647
  %40 = shl i64 %39, 33
  %41 = and i64 %5, 8589934591
  %42 = or i64 %40, %41
  store i64 %42, i64* %4, align 8
  %43 = and i64 %39, 2147483647
  %44 = tail call i8* @_Z15sk_malloc_throwmm(i64 %43, i64 8) #15
  %45 = load i64, i64* %4, align 8
  %46 = and i64 %45, 4294967294
  %47 = icmp eq i64 %46, 0
  br i1 %47, label %64, label %48

48:                                               ; preds = %35
  %49 = getelementptr inbounds %class.SkTArray.102, %class.SkTArray.102* %0, i64 0, i32 0
  br label %50

50:                                               ; preds = %50, %48
  %51 = phi i64 [ 0, %48 ], [ %59, %50 ]
  %52 = shl nuw nsw i64 %51, 3
  %53 = getelementptr inbounds i8, i8* %44, i64 %52
  %54 = bitcast i8* %53 to %class.SkString*
  %55 = load %class.SkString*, %class.SkString** %49, align 8
  %56 = getelementptr inbounds %class.SkString, %class.SkString* %55, i64 %51
  tail call void @_ZN8SkStringC1EOS_(%class.SkString* %54, %class.SkString* dereferenceable(8) %56) #15
  %57 = load %class.SkString*, %class.SkString** %49, align 8
  %58 = getelementptr inbounds %class.SkString, %class.SkString* %57, i64 %51
  tail call void @_ZN8SkStringD1Ev(%class.SkString* %58) #15
  %59 = add nuw nsw i64 %51, 1
  %60 = load i64, i64* %4, align 8
  %61 = lshr i64 %60, 1
  %62 = and i64 %61, 2147483647
  %63 = icmp ult i64 %59, %62
  br i1 %63, label %50, label %64

64:                                               ; preds = %50, %35
  %65 = phi i64 [ %45, %35 ], [ %60, %50 ]
  %66 = and i64 %65, 1
  %67 = icmp eq i64 %66, 0
  %68 = bitcast %class.SkTArray.102* %0 to i8**
  br i1 %67, label %72, label %69

69:                                               ; preds = %64
  %70 = load i8*, i8** %68, align 8
  tail call void @_Z7sk_freePv(i8* %70) #15
  %71 = load i64, i64* %4, align 8
  br label %72

72:                                               ; preds = %64, %69
  %73 = phi i64 [ %71, %69 ], [ %65, %64 ]
  store i8* %44, i8** %68, align 8
  %74 = and i64 %73, -4294967298
  %75 = or i64 %74, 1
  store i64 %75, i64* %4, align 8
  br label %76

76:                                               ; preds = %72, %32, %21
  ret void
}

declare i8* @_Z15sk_malloc_throwmm(i64, i64) local_unnamed_addr #2

declare void @_Z7sk_freePv(i8*) local_unnamed_addr #2

declare void @_ZN13GrStyledShapeC1ERKS_(%class.GrStyledShape*, %class.GrStyledShape* dereferenceable(208)) unnamed_addr #2

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN13GrStyledShapeD2Ev(%class.GrStyledShape*) unnamed_addr #5 comdat align 2 {
  %2 = getelementptr inbounds %class.GrStyledShape, %class.GrStyledShape* %0, i64 0, i32 6, i32 1
  %3 = load i32*, i32** %2, align 8
  %4 = getelementptr inbounds %class.GrStyledShape, %class.GrStyledShape* %0, i64 0, i32 6, i32 0
  %5 = load i32, i32* %4, align 8
  %6 = sext i32 %5 to i64
  %7 = getelementptr inbounds i32, i32* %3, i64 %6
  br label %8

8:                                                ; preds = %8, %1
  %9 = phi i32* [ %7, %1 ], [ %11, %8 ]
  %10 = icmp ugt i32* %9, %3
  %11 = getelementptr inbounds i32, i32* %9, i64 -1
  br i1 %10, label %8, label %12

12:                                               ; preds = %8
  %13 = bitcast i32* %3 to i8*
  %14 = icmp eq i32 %5, 0
  br i1 %14, label %19, label %15

15:                                               ; preds = %12
  %16 = icmp sgt i32 %5, 8
  br i1 %16, label %17, label %18

17:                                               ; preds = %15
  tail call void @_Z7sk_freePv(i8* %13) #15
  br label %18

18:                                               ; preds = %17, %15
  store i32* null, i32** %2, align 8
  store i32 0, i32* %4, align 8
  br label %19

19:                                               ; preds = %12, %18
  %20 = getelementptr inbounds %class.GrStyledShape, %class.GrStyledShape* %0, i64 0, i32 5, i32 1
  %21 = load %class.SkPath*, %class.SkPath** %20, align 8
  %22 = icmp eq %class.SkPath* %21, null
  br i1 %22, label %24, label %23

23:                                               ; preds = %19
  tail call void @_ZN6SkPathD1Ev(%class.SkPath* nonnull %21) #15
  store %class.SkPath* null, %class.SkPath** %20, align 8
  br label %24

24:                                               ; preds = %19, %23
  %25 = getelementptr inbounds %class.GrStyledShape, %class.GrStyledShape* %0, i64 0, i32 1, i32 2, i32 2, i32 1
  %26 = load float*, float** %25, align 8
  %27 = getelementptr inbounds %class.GrStyledShape, %class.GrStyledShape* %0, i64 0, i32 1, i32 2, i32 2, i32 0
  %28 = load i32, i32* %27, align 8
  %29 = sext i32 %28 to i64
  %30 = getelementptr inbounds float, float* %26, i64 %29
  br label %31

31:                                               ; preds = %31, %24
  %32 = phi float* [ %30, %24 ], [ %34, %31 ]
  %33 = icmp ugt float* %32, %26
  %34 = getelementptr inbounds float, float* %32, i64 -1
  br i1 %33, label %31, label %35

35:                                               ; preds = %31
  %36 = bitcast float* %26 to i8*
  %37 = icmp eq i32 %28, 0
  br i1 %37, label %42, label %38

38:                                               ; preds = %35
  %39 = icmp sgt i32 %28, 4
  br i1 %39, label %40, label %41

40:                                               ; preds = %38
  tail call void @_Z7sk_freePv(i8* %36) #15
  br label %41

41:                                               ; preds = %40, %38
  store float* null, float** %25, align 8
  store i32 0, i32* %27, align 8
  br label %42

42:                                               ; preds = %41, %35
  %43 = getelementptr inbounds %class.GrStyledShape, %class.GrStyledShape* %0, i64 0, i32 1, i32 1, i32 0
  %44 = load %class.SkPathEffect*, %class.SkPathEffect** %43, align 8
  %45 = icmp eq %class.SkPathEffect* %44, null
  br i1 %45, label %56, label %46

46:                                               ; preds = %42
  %47 = getelementptr inbounds %class.SkPathEffect, %class.SkPathEffect* %44, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %48 = atomicrmw add i32* %47, i32 -1 acq_rel
  %49 = icmp eq i32 %48, 1
  br i1 %49, label %50, label %56

50:                                               ; preds = %46
  %51 = bitcast %class.SkPathEffect* %44 to %class.SkRefCntBase*
  %52 = bitcast %class.SkPathEffect* %44 to void (%class.SkRefCntBase*)***
  %53 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %52, align 8
  %54 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %53, i64 2
  %55 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %54, align 8
  tail call void %55(%class.SkRefCntBase* nonnull %51) #15
  br label %56

56:                                               ; preds = %42, %46, %50
  %57 = getelementptr inbounds %class.GrStyledShape, %class.GrStyledShape* %0, i64 0, i32 0, i32 1
  %58 = load i8, i8* %57, align 8
  %59 = icmp eq i8 %58, 4
  br i1 %59, label %60, label %67

60:                                               ; preds = %56
  %61 = bitcast %class.GrStyledShape* %0 to %class.SkPath*
  %62 = getelementptr inbounds %class.SkPath, %class.SkPath* %61, i64 0, i32 4
  %63 = load i8, i8* %62, align 2
  %64 = getelementptr inbounds %class.GrStyledShape, %class.GrStyledShape* %0, i64 0, i32 0, i32 4
  %65 = lshr i8 %63, 1
  %66 = and i8 %65, 1
  store i8 %66, i8* %64, align 1
  tail call void @_ZN6SkPathD1Ev(%class.SkPath* %61) #15
  br label %67

67:                                               ; preds = %56, %60
  store i8 0, i8* %57, align 8
  %68 = getelementptr inbounds %class.GrStyledShape, %class.GrStyledShape* %0, i64 0, i32 0, i32 3
  store i8 1, i8* %68, align 2
  %69 = getelementptr inbounds %class.GrStyledShape, %class.GrStyledShape* %0, i64 0, i32 0, i32 2
  store i8 0, i8* %69, align 1
  %70 = getelementptr inbounds %class.GrStyledShape, %class.GrStyledShape* %0, i64 0, i32 0, i32 4
  store i8 0, i8* %70, align 1
  ret void
}

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #6

; Function Attrs: nounwind ssp uwtable
define internal fastcc void @_ZN12_GLOBAL__N_119TriangulatingPathOpC2EP14GrProcessorSetRK8SkRGBA4fIL11SkAlphaType2EERK13GrStyledShapeRK8SkMatrixRK7SkIRect8GrAATypePK21GrUserStencilSettings(%"class.(anonymous namespace)::TriangulatingPathOp"*, %class.GrProcessorSet*, %struct.SkRGBA4f* nocapture readonly dereferenceable(16), %class.GrStyledShape* dereferenceable(208), %class.SkMatrix* dereferenceable(40), %struct.SkIRect* nocapture readonly dereferenceable(16), i32, %struct.GrUserStencilSettings*) unnamed_addr #1 align 2 {
  %9 = alloca %struct.SkRect, align 4
  %10 = alloca { <2 x float>, <2 x float> }, align 8
  %11 = bitcast { <2 x float>, <2 x float> }* %10 to %struct.SkRect*
  %12 = alloca { <2 x float>, <2 x float> }, align 8
  %13 = getelementptr inbounds %"class.(anonymous namespace)::TriangulatingPathOp", %"class.(anonymous namespace)::TriangulatingPathOp"* %0, i64 0, i32 0
  %14 = load atomic i8, i8* bitcast (i64* @_ZGVZN12_GLOBAL__N_119TriangulatingPathOp7ClassIDEvE8kClassID to i8*) acquire, align 8
  %15 = icmp eq i8 %14, 0
  br i1 %15, label %16, label %24, !prof !3

16:                                               ; preds = %8
  %17 = tail call i32 @__cxa_guard_acquire(i64* nonnull @_ZGVZN12_GLOBAL__N_119TriangulatingPathOp7ClassIDEvE8kClassID) #15
  %18 = icmp eq i32 %17, 0
  br i1 %18, label %24, label %19

19:                                               ; preds = %16
  %20 = atomicrmw add i32* getelementptr inbounds (%"struct.std::__1::atomic.261", %"struct.std::__1::atomic.261"* @_ZN4GrOp14gCurrOpClassIDE, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0), i32 1 monotonic
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %22, label %23

22:                                               ; preds = %19
  tail call void (i8*, i32, i8*, ...) @_Z16SkAbort_FileLinePKciS0_z(i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.1, i64 0, i64 0), i32 329, i8* getelementptr inbounds ([80 x i8], [80 x i8]* @.str.2, i64 0, i64 0)) #17
  unreachable

23:                                               ; preds = %19
  store i32 %20, i32* @_ZZN12_GLOBAL__N_119TriangulatingPathOp7ClassIDEvE8kClassID, align 4
  tail call void @__cxa_guard_release(i64* nonnull @_ZGVZN12_GLOBAL__N_119TriangulatingPathOp7ClassIDEvE8kClassID) #15
  br label %24

24:                                               ; preds = %8, %16, %23
  %25 = load i32, i32* @_ZZN12_GLOBAL__N_119TriangulatingPathOp7ClassIDEvE8kClassID, align 4
  tail call void @_ZN12GrMeshDrawOpC2Ej(%class.GrMeshDrawOp* %13, i32 %25) #15
  %26 = getelementptr inbounds %"class.(anonymous namespace)::TriangulatingPathOp", %"class.(anonymous namespace)::TriangulatingPathOp"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTVN12_GLOBAL__N_119TriangulatingPathOpE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %26, align 8
  %27 = getelementptr inbounds %"class.(anonymous namespace)::TriangulatingPathOp", %"class.(anonymous namespace)::TriangulatingPathOp"* %0, i64 0, i32 1
  tail call void @_ZN35GrSimpleMeshDrawOpHelperWithStencilC1EP14GrProcessorSet8GrAATypePK21GrUserStencilSettingsN24GrSimpleMeshDrawOpHelper10InputFlagsE(%class.GrSimpleMeshDrawOpHelperWithStencil* %27, %class.GrProcessorSet* %1, i32 %6, %struct.GrUserStencilSettings* %7, i8 zeroext 0) #15
  %28 = getelementptr inbounds %"class.(anonymous namespace)::TriangulatingPathOp", %"class.(anonymous namespace)::TriangulatingPathOp"* %0, i64 0, i32 2
  %29 = bitcast %struct.SkRGBA4f* %28 to i8*
  %30 = bitcast %struct.SkRGBA4f* %2 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %29, i8* align 4 %30, i64 16, i1 false)
  %31 = getelementptr inbounds %"class.(anonymous namespace)::TriangulatingPathOp", %"class.(anonymous namespace)::TriangulatingPathOp"* %0, i64 0, i32 3
  tail call void @_ZN13GrStyledShapeC1ERKS_(%class.GrStyledShape* %31, %class.GrStyledShape* dereferenceable(208) %3) #15
  %32 = getelementptr inbounds %"class.(anonymous namespace)::TriangulatingPathOp", %"class.(anonymous namespace)::TriangulatingPathOp"* %0, i64 0, i32 4
  %33 = bitcast %class.SkMatrix* %32 to i8*
  %34 = bitcast %class.SkMatrix* %4 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %33, i8* align 4 %34, i64 40, i1 false)
  %35 = getelementptr inbounds %"class.(anonymous namespace)::TriangulatingPathOp", %"class.(anonymous namespace)::TriangulatingPathOp"* %0, i64 0, i32 5
  %36 = bitcast %struct.SkIRect* %35 to i8*
  %37 = bitcast %struct.SkIRect* %5 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %36, i8* align 4 %37, i64 16, i1 false)
  %38 = getelementptr inbounds %"class.(anonymous namespace)::TriangulatingPathOp", %"class.(anonymous namespace)::TriangulatingPathOp"* %0, i64 0, i32 6
  %39 = icmp eq i32 %6, 1
  %40 = zext i1 %39 to i8
  store i8 %40, i8* %38, align 8
  %41 = getelementptr inbounds %"class.(anonymous namespace)::TriangulatingPathOp", %"class.(anonymous namespace)::TriangulatingPathOp"* %0, i64 0, i32 7
  %42 = bitcast %struct.SkRect* %9 to i8*
  %43 = bitcast %struct.GrSimpleMesh** %41 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %43, i8 0, i64 24, i1 false)
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %42) #15
  %44 = bitcast { <2 x float>, <2 x float> }* %10 to i8*
  %45 = bitcast %struct.SkRect* %9 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %45, i8 -1, i64 16, i1 false)
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %44) #15
  %46 = getelementptr inbounds %class.GrStyledShape, %class.GrStyledShape* %3, i64 0, i32 0
  %47 = tail call { <2 x float>, <2 x float> } @_ZNK7GrShape6boundsEv(%class.GrShape* %46) #15
  %48 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %10, i64 0, i32 0
  %49 = extractvalue { <2 x float>, <2 x float> } %47, 0
  store <2 x float> %49, <2 x float>* %48, align 8
  %50 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %10, i64 0, i32 1
  %51 = extractvalue { <2 x float>, <2 x float> } %47, 1
  store <2 x float> %51, <2 x float>* %50, align 8
  %52 = call zeroext i1 @_ZNK8SkMatrix7mapRectEP6SkRectRKS0_22SkApplyPerspectiveClip(%class.SkMatrix* %4, %struct.SkRect* nonnull %9, %struct.SkRect* nonnull dereferenceable(16) %11, i32 1) #15
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %44) #15
  %53 = getelementptr inbounds %class.GrStyledShape, %class.GrStyledShape* %3, i64 0, i32 0, i32 1
  %54 = load i8, i8* %53, align 8
  %55 = icmp eq i8 %54, 4
  %56 = bitcast %class.GrStyledShape* %3 to %class.SkPath*
  %57 = getelementptr inbounds %class.SkPath, %class.SkPath* %56, i64 0, i32 4
  %58 = load i8, i8* %57, align 2
  %59 = and i8 %58, 2
  %60 = getelementptr inbounds %class.GrStyledShape, %class.GrStyledShape* %3, i64 0, i32 0, i32 4
  %61 = load i8, i8* %60, align 1
  %62 = select i1 %55, i8 %59, i8 %61
  %63 = icmp eq i8 %62, 0
  br i1 %63, label %85, label %64

64:                                               ; preds = %24
  %65 = bitcast { <2 x float>, <2 x float> }* %12 to %struct.SkRect*
  %66 = bitcast { <2 x float>, <2 x float> }* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %66) #15
  %67 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %35, i64 0, i32 0
  %68 = load i32, i32* %67, align 4
  %69 = sitofp i32 %68 to float
  %70 = insertelement <2 x float> undef, float %69, i32 0
  %71 = getelementptr inbounds %"class.(anonymous namespace)::TriangulatingPathOp", %"class.(anonymous namespace)::TriangulatingPathOp"* %0, i64 0, i32 5, i32 1
  %72 = load i32, i32* %71, align 4
  %73 = sitofp i32 %72 to float
  %74 = insertelement <2 x float> %70, float %73, i32 1
  %75 = getelementptr inbounds %"class.(anonymous namespace)::TriangulatingPathOp", %"class.(anonymous namespace)::TriangulatingPathOp"* %0, i64 0, i32 5, i32 2
  %76 = load i32, i32* %75, align 4
  %77 = sitofp i32 %76 to float
  %78 = insertelement <2 x float> undef, float %77, i32 0
  %79 = getelementptr inbounds %"class.(anonymous namespace)::TriangulatingPathOp", %"class.(anonymous namespace)::TriangulatingPathOp"* %0, i64 0, i32 5, i32 3
  %80 = load i32, i32* %79, align 4
  %81 = sitofp i32 %80 to float
  %82 = insertelement <2 x float> %78, float %81, i32 1
  %83 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %12, i64 0, i32 0
  store <2 x float> %74, <2 x float>* %83, align 8
  %84 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %12, i64 0, i32 1
  store <2 x float> %82, <2 x float>* %84, align 8
  call void @_ZN6SkRect4joinERKS_(%struct.SkRect* nonnull %9, %struct.SkRect* nonnull dereferenceable(16) %65) #15
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %66) #15
  br label %85

85:                                               ; preds = %24, %64
  %86 = load i8, i8* %38, align 8, !range !2
  %87 = getelementptr inbounds %"class.(anonymous namespace)::TriangulatingPathOp", %"class.(anonymous namespace)::TriangulatingPathOp"* %0, i64 0, i32 0, i32 0, i32 0, i32 6
  %88 = bitcast %struct.SkRect* %87 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %88, i8* nonnull align 4 %42, i64 16, i1 false) #15
  %89 = getelementptr inbounds %"class.(anonymous namespace)::TriangulatingPathOp", %"class.(anonymous namespace)::TriangulatingPathOp"* %0, i64 0, i32 0, i32 0, i32 0, i32 4
  %90 = zext i8 %86 to i16
  store i16 %90, i16* %89, align 2
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %42) #15
  ret void
}

declare void @_ZN12GrMeshDrawOpC2Ej(%class.GrMeshDrawOp*, i32) unnamed_addr #2

declare void @_ZN35GrSimpleMeshDrawOpHelperWithStencilC1EP14GrProcessorSet8GrAATypePK21GrUserStencilSettingsN24GrSimpleMeshDrawOpHelper10InputFlagsE(%class.GrSimpleMeshDrawOpHelperWithStencil*, %class.GrProcessorSet*, i32, %struct.GrUserStencilSettings*, i8 zeroext) unnamed_addr #2

declare zeroext i1 @_ZNK8SkMatrix7mapRectEP6SkRectRKS0_22SkApplyPerspectiveClip(%class.SkMatrix*, %struct.SkRect*, %struct.SkRect* dereferenceable(16), i32) local_unnamed_addr #2

declare void @_ZN6SkRect4joinERKS_(%struct.SkRect*, %struct.SkRect* dereferenceable(16)) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind ssp uwtable
define internal void @_ZN12_GLOBAL__N_119TriangulatingPathOpD2Ev(%"class.(anonymous namespace)::TriangulatingPathOp"*) unnamed_addr #5 align 2 {
  %2 = getelementptr inbounds %"class.(anonymous namespace)::TriangulatingPathOp", %"class.(anonymous namespace)::TriangulatingPathOp"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTVN12_GLOBAL__N_119TriangulatingPathOpE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.(anonymous namespace)::TriangulatingPathOp", %"class.(anonymous namespace)::TriangulatingPathOp"* %0, i64 0, i32 9, i32 0
  %4 = load %"class.GrThreadSafeCache::VertexData"*, %"class.GrThreadSafeCache::VertexData"** %3, align 8
  %5 = icmp eq %"class.GrThreadSafeCache::VertexData"* %4, null
  br i1 %5, label %12, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.GrThreadSafeCache::VertexData", %"class.GrThreadSafeCache::VertexData"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %8 = atomicrmw add i32* %7, i32 -1 acq_rel
  %9 = icmp eq i32 %8, 1
  br i1 %9, label %10, label %12

10:                                               ; preds = %6
  tail call void @_ZN17GrThreadSafeCache10VertexDataD1Ev(%"class.GrThreadSafeCache::VertexData"* nonnull %4) #15
  %11 = bitcast %"class.GrThreadSafeCache::VertexData"* %4 to i8*
  tail call void @_ZdlPv(i8* %11) #16
  br label %12

12:                                               ; preds = %1, %6, %10
  %13 = getelementptr inbounds %"class.(anonymous namespace)::TriangulatingPathOp", %"class.(anonymous namespace)::TriangulatingPathOp"* %0, i64 0, i32 3
  tail call void @_ZN13GrStyledShapeD2Ev(%class.GrStyledShape* %13) #15
  %14 = getelementptr inbounds %"class.(anonymous namespace)::TriangulatingPathOp", %"class.(anonymous namespace)::TriangulatingPathOp"* %0, i64 0, i32 1
  %15 = bitcast %class.GrSimpleMeshDrawOpHelperWithStencil* %14 to %class.GrSimpleMeshDrawOpHelper*
  tail call void @_ZN24GrSimpleMeshDrawOpHelperD2Ev(%class.GrSimpleMeshDrawOpHelper* %15) #15
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [10 x i8*] }, { [10 x i8*] }* @_ZTV4GrOp, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %16 = getelementptr inbounds %"class.(anonymous namespace)::TriangulatingPathOp", %"class.(anonymous namespace)::TriangulatingPathOp"* %0, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %17 = load %class.GrOp*, %class.GrOp** %16, align 8
  store %class.GrOp* null, %class.GrOp** %16, align 8
  %18 = icmp eq %class.GrOp* %17, null
  br i1 %18, label %24, label %19

19:                                               ; preds = %12
  %20 = bitcast %class.GrOp* %17 to void (%class.GrOp*)***
  %21 = load void (%class.GrOp*)**, void (%class.GrOp*)*** %20, align 8
  %22 = getelementptr inbounds void (%class.GrOp*)*, void (%class.GrOp*)** %21, i64 1
  %23 = load void (%class.GrOp*)*, void (%class.GrOp*)** %22, align 8
  tail call void %23(%class.GrOp* nonnull %17) #15
  br label %24

24:                                               ; preds = %12, %19
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define internal void @_ZN12_GLOBAL__N_119TriangulatingPathOpD0Ev(%"class.(anonymous namespace)::TriangulatingPathOp"*) unnamed_addr #5 align 2 {
  %2 = getelementptr inbounds %"class.(anonymous namespace)::TriangulatingPathOp", %"class.(anonymous namespace)::TriangulatingPathOp"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTVN12_GLOBAL__N_119TriangulatingPathOpE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.(anonymous namespace)::TriangulatingPathOp", %"class.(anonymous namespace)::TriangulatingPathOp"* %0, i64 0, i32 9, i32 0
  %4 = load %"class.GrThreadSafeCache::VertexData"*, %"class.GrThreadSafeCache::VertexData"** %3, align 8
  %5 = icmp eq %"class.GrThreadSafeCache::VertexData"* %4, null
  br i1 %5, label %12, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.GrThreadSafeCache::VertexData", %"class.GrThreadSafeCache::VertexData"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %8 = atomicrmw add i32* %7, i32 -1 acq_rel
  %9 = icmp eq i32 %8, 1
  br i1 %9, label %10, label %12

10:                                               ; preds = %6
  tail call void @_ZN17GrThreadSafeCache10VertexDataD1Ev(%"class.GrThreadSafeCache::VertexData"* nonnull %4) #15
  %11 = bitcast %"class.GrThreadSafeCache::VertexData"* %4 to i8*
  tail call void @_ZdlPv(i8* %11) #16
  br label %12

12:                                               ; preds = %10, %6, %1
  %13 = getelementptr inbounds %"class.(anonymous namespace)::TriangulatingPathOp", %"class.(anonymous namespace)::TriangulatingPathOp"* %0, i64 0, i32 3
  tail call void @_ZN13GrStyledShapeD2Ev(%class.GrStyledShape* %13) #15
  %14 = getelementptr inbounds %"class.(anonymous namespace)::TriangulatingPathOp", %"class.(anonymous namespace)::TriangulatingPathOp"* %0, i64 0, i32 1
  %15 = bitcast %class.GrSimpleMeshDrawOpHelperWithStencil* %14 to %class.GrSimpleMeshDrawOpHelper*
  tail call void @_ZN24GrSimpleMeshDrawOpHelperD2Ev(%class.GrSimpleMeshDrawOpHelper* %15) #15
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [10 x i8*] }, { [10 x i8*] }* @_ZTV4GrOp, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %16 = getelementptr inbounds %"class.(anonymous namespace)::TriangulatingPathOp", %"class.(anonymous namespace)::TriangulatingPathOp"* %0, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %17 = load %class.GrOp*, %class.GrOp** %16, align 8
  store %class.GrOp* null, %class.GrOp** %16, align 8
  %18 = icmp eq %class.GrOp* %17, null
  br i1 %18, label %24, label %19

19:                                               ; preds = %12
  %20 = bitcast %class.GrOp* %17 to void (%class.GrOp*)***
  %21 = load void (%class.GrOp*)**, void (%class.GrOp*)*** %20, align 8
  %22 = getelementptr inbounds void (%class.GrOp*)*, void (%class.GrOp*)** %21, i64 1
  %23 = load void (%class.GrOp*)*, void (%class.GrOp*)** %22, align 8
  tail call void %23(%class.GrOp* nonnull %17) #15
  br label %24

24:                                               ; preds = %12, %19
  %25 = bitcast %"class.(anonymous namespace)::TriangulatingPathOp"* %0 to i8*
  tail call void @_ZdlPv(i8* %25) #15
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define internal i8* @_ZNK12_GLOBAL__N_119TriangulatingPathOp4nameEv(%"class.(anonymous namespace)::TriangulatingPathOp"* nocapture readnone) unnamed_addr #7 align 2 {
  ret i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.3, i64 0, i64 0)
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZNK12_GLOBAL__N_119TriangulatingPathOp12visitProxiesERKNSt3__18functionIFvP14GrSurfaceProxy11GrMipmappedEEE(%"class.(anonymous namespace)::TriangulatingPathOp"* nocapture readonly, %"class.std::__1::function.256"*) unnamed_addr #1 align 2 {
  %3 = getelementptr inbounds %"class.(anonymous namespace)::TriangulatingPathOp", %"class.(anonymous namespace)::TriangulatingPathOp"* %0, i64 0, i32 8
  %4 = load %class.GrProgramInfo*, %class.GrProgramInfo** %3, align 8
  %5 = icmp eq %class.GrProgramInfo* %4, null
  br i1 %5, label %9, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %class.GrProgramInfo, %class.GrProgramInfo* %4, i64 0, i32 5
  %8 = load %class.GrPipeline*, %class.GrPipeline** %7, align 8
  tail call void @_ZNK10GrPipeline12visitProxiesERKNSt3__18functionIFvP14GrSurfaceProxy11GrMipmappedEEE(%class.GrPipeline* %8, %"class.std::__1::function.256"* %1) #15
  br label %14

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"class.(anonymous namespace)::TriangulatingPathOp", %"class.(anonymous namespace)::TriangulatingPathOp"* %0, i64 0, i32 1, i32 0, i32 0
  %11 = load %class.GrProcessorSet*, %class.GrProcessorSet** %10, align 8
  %12 = icmp eq %class.GrProcessorSet* %11, null
  br i1 %12, label %14, label %13

13:                                               ; preds = %9
  tail call void @_ZNK14GrProcessorSet12visitProxiesERKNSt3__18functionIFvP14GrSurfaceProxy11GrMipmappedEEE(%class.GrProcessorSet* nonnull %11, %"class.std::__1::function.256"* %1) #15
  br label %14

14:                                               ; preds = %13, %9, %6
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZN4GrOp19onCombineIfPossibleEPS_P12SkArenaAllocRK6GrCaps(%class.GrOp*, %class.GrOp*, %class.SkArenaAlloc*, %class.GrCaps* dereferenceable(232)) unnamed_addr #1 comdat align 2 {
  ret i32 2
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN12GrMeshDrawOp12onPrePrepareEP18GrRecordingContextRK18GrSurfaceProxyViewP13GrAppliedClipRKN15GrXferProcessor12DstProxyViewE18GrXferBarrierFlags8GrLoadOp(%class.GrMeshDrawOp*, %class.GrRecordingContext*, %class.GrSurfaceProxyView* dereferenceable(16), %class.GrAppliedClip*, %"class.GrXferProcessor::DstProxyView"* dereferenceable(32), i32, i32) unnamed_addr #1 comdat align 2 {
  %8 = bitcast %class.GrMeshDrawOp* %0 to void (%class.GrMeshDrawOp*, %class.GrRecordingContext*, %class.GrSurfaceProxyView*, %class.GrAppliedClip*, %"class.GrXferProcessor::DstProxyView"*, i32, i32)***
  %9 = load void (%class.GrMeshDrawOp*, %class.GrRecordingContext*, %class.GrSurfaceProxyView*, %class.GrAppliedClip*, %"class.GrXferProcessor::DstProxyView"*, i32, i32)**, void (%class.GrMeshDrawOp*, %class.GrRecordingContext*, %class.GrSurfaceProxyView*, %class.GrAppliedClip*, %"class.GrXferProcessor::DstProxyView"*, i32, i32)*** %8, align 8
  %10 = getelementptr inbounds void (%class.GrMeshDrawOp*, %class.GrRecordingContext*, %class.GrSurfaceProxyView*, %class.GrAppliedClip*, %"class.GrXferProcessor::DstProxyView"*, i32, i32)*, void (%class.GrMeshDrawOp*, %class.GrRecordingContext*, %class.GrSurfaceProxyView*, %class.GrAppliedClip*, %"class.GrXferProcessor::DstProxyView"*, i32, i32)** %9, i64 10
  %11 = load void (%class.GrMeshDrawOp*, %class.GrRecordingContext*, %class.GrSurfaceProxyView*, %class.GrAppliedClip*, %"class.GrXferProcessor::DstProxyView"*, i32, i32)*, void (%class.GrMeshDrawOp*, %class.GrRecordingContext*, %class.GrSurfaceProxyView*, %class.GrAppliedClip*, %"class.GrXferProcessor::DstProxyView"*, i32, i32)** %10, align 8
  tail call void %11(%class.GrMeshDrawOp* %0, %class.GrRecordingContext* %1, %class.GrSurfaceProxyView* dereferenceable(16) %2, %class.GrAppliedClip* %3, %"class.GrXferProcessor::DstProxyView"* dereferenceable(32) %4, i32 %5, i32 %6) #15
  ret void
}

declare void @_ZN12GrMeshDrawOp9onPrepareEP14GrOpFlushState(%class.GrMeshDrawOp*, %class.GrOpFlushState*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN12_GLOBAL__N_119TriangulatingPathOp9onExecuteEP14GrOpFlushStateRK6SkRect(%"class.(anonymous namespace)::TriangulatingPathOp"*, %class.GrOpFlushState*, %struct.SkRect* dereferenceable(16)) unnamed_addr #1 align 2 {
  %4 = getelementptr inbounds %"class.(anonymous namespace)::TriangulatingPathOp", %"class.(anonymous namespace)::TriangulatingPathOp"* %0, i64 0, i32 8
  %5 = load %class.GrProgramInfo*, %class.GrProgramInfo** %4, align 8
  %6 = icmp eq %class.GrProgramInfo* %5, null
  br i1 %6, label %7, label %14

7:                                                ; preds = %3
  %8 = getelementptr inbounds %"class.(anonymous namespace)::TriangulatingPathOp", %"class.(anonymous namespace)::TriangulatingPathOp"* %0, i64 0, i32 0
  %9 = icmp eq %class.GrOpFlushState* %1, null
  %10 = getelementptr inbounds %class.GrOpFlushState, %class.GrOpFlushState* %1, i64 0, i32 1
  %11 = select i1 %9, %"class.GrMeshDrawOp::Target"* null, %"class.GrMeshDrawOp::Target"* %10
  tail call void @_ZN12GrMeshDrawOp17createProgramInfoEPNS_6TargetE(%class.GrMeshDrawOp* %8, %"class.GrMeshDrawOp::Target"* %11) #15
  %12 = load %class.GrProgramInfo*, %class.GrProgramInfo** %4, align 8
  %13 = icmp eq %class.GrProgramInfo* %12, null
  br i1 %13, label %43, label %14

14:                                               ; preds = %3, %7
  %15 = phi %class.GrProgramInfo* [ %12, %7 ], [ %5, %3 ]
  %16 = getelementptr inbounds %"class.(anonymous namespace)::TriangulatingPathOp", %"class.(anonymous namespace)::TriangulatingPathOp"* %0, i64 0, i32 7
  %17 = load %struct.GrSimpleMesh*, %struct.GrSimpleMesh** %16, align 8
  %18 = icmp eq %struct.GrSimpleMesh* %17, null
  br i1 %18, label %43, label %19

19:                                               ; preds = %14
  %20 = getelementptr inbounds %class.GrOpFlushState, %class.GrOpFlushState* %1, i64 0, i32 15
  %21 = load %class.GrOpsRenderPass*, %class.GrOpsRenderPass** %20, align 8
  tail call void @_ZN15GrOpsRenderPass12bindPipelineERK13GrProgramInfoRK6SkRect(%class.GrOpsRenderPass* %21, %class.GrProgramInfo* nonnull dereferenceable(128) %15, %struct.SkRect* dereferenceable(16) %2) #15
  %22 = getelementptr inbounds %class.GrProgramInfo, %class.GrProgramInfo* %15, i64 0, i32 5
  %23 = load %class.GrPipeline*, %class.GrPipeline** %22, align 8
  %24 = getelementptr inbounds %class.GrPipeline, %class.GrPipeline* %23, i64 0, i32 5
  %25 = load i8, i8* %24, align 8
  %26 = and i8 %25, 32
  %27 = icmp eq i8 %26, 0
  br i1 %27, label %35, label %28

28:                                               ; preds = %19
  %29 = getelementptr inbounds %class.GrOpFlushState, %class.GrOpFlushState* %1, i64 0, i32 10
  %30 = load %"struct.GrOpFlushState::OpArgs"*, %"struct.GrOpFlushState::OpArgs"** %29, align 8
  %31 = getelementptr inbounds %"struct.GrOpFlushState::OpArgs", %"struct.GrOpFlushState::OpArgs"* %30, i64 0, i32 4
  %32 = load %class.GrAppliedClip*, %class.GrAppliedClip** %31, align 8
  %33 = getelementptr inbounds %class.GrAppliedClip, %class.GrAppliedClip* %32, i64 0, i32 0, i32 0, i32 1
  %34 = load %class.GrOpsRenderPass*, %class.GrOpsRenderPass** %20, align 8
  tail call void @_ZN15GrOpsRenderPass14setScissorRectERK7SkIRect(%class.GrOpsRenderPass* %34, %struct.SkIRect* dereferenceable(16) %33) #15
  br label %35

35:                                               ; preds = %19, %28
  %36 = load %class.GrProgramInfo*, %class.GrProgramInfo** %4, align 8
  %37 = getelementptr inbounds %class.GrProgramInfo, %class.GrProgramInfo* %36, i64 0, i32 7
  %38 = load %class.GrGeometryProcessor*, %class.GrGeometryProcessor** %37, align 8
  %39 = getelementptr inbounds %class.GrProgramInfo, %class.GrProgramInfo* %36, i64 0, i32 5
  %40 = load %class.GrPipeline*, %class.GrPipeline** %39, align 8
  %41 = load %class.GrOpsRenderPass*, %class.GrOpsRenderPass** %20, align 8
  tail call void @_ZN15GrOpsRenderPass12bindTexturesERK19GrGeometryProcessorPKPK14GrSurfaceProxyRK10GrPipeline(%class.GrOpsRenderPass* %41, %class.GrGeometryProcessor* dereferenceable(80) %38, %class.GrSurfaceProxy** null, %class.GrPipeline* dereferenceable(128) %40) #15
  %42 = load %struct.GrSimpleMesh*, %struct.GrSimpleMesh** %16, align 8
  tail call void @_ZN14GrOpFlushState8drawMeshERK12GrSimpleMesh(%class.GrOpFlushState* %1, %struct.GrSimpleMesh* dereferenceable(48) %42) #15
  br label %43

43:                                               ; preds = %14, %7, %35
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal i32 @_ZNK12_GLOBAL__N_119TriangulatingPathOp18fixedFunctionFlagsEv(%"class.(anonymous namespace)::TriangulatingPathOp"*) unnamed_addr #1 align 2 {
  %2 = getelementptr inbounds %"class.(anonymous namespace)::TriangulatingPathOp", %"class.(anonymous namespace)::TriangulatingPathOp"* %0, i64 0, i32 1
  %3 = tail call i32 @_ZNK35GrSimpleMeshDrawOpHelperWithStencil18fixedFunctionFlagsEv(%class.GrSimpleMeshDrawOpHelperWithStencil* %2) #15
  ret i32 %3
}

; Function Attrs: nounwind ssp uwtable
define internal i32 @_ZN12_GLOBAL__N_119TriangulatingPathOp8finalizeERK6GrCapsPK13GrAppliedClip11GrClampType(%"class.(anonymous namespace)::TriangulatingPathOp"*, %class.GrCaps* dereferenceable(232), %class.GrAppliedClip*, i32) unnamed_addr #1 align 2 {
  %5 = getelementptr inbounds %"class.(anonymous namespace)::TriangulatingPathOp", %"class.(anonymous namespace)::TriangulatingPathOp"* %0, i64 0, i32 6
  %6 = load i8, i8* %5, align 8, !range !2
  %7 = zext i8 %6 to i32
  %8 = getelementptr inbounds %"class.(anonymous namespace)::TriangulatingPathOp", %"class.(anonymous namespace)::TriangulatingPathOp"* %0, i64 0, i32 1
  %9 = getelementptr inbounds %"class.(anonymous namespace)::TriangulatingPathOp", %"class.(anonymous namespace)::TriangulatingPathOp"* %0, i64 0, i32 2
  %10 = tail call i32 @_ZN35GrSimpleMeshDrawOpHelperWithStencil18finalizeProcessorsERK6GrCapsPK13GrAppliedClip11GrClampType27GrProcessorAnalysisCoverageP8SkRGBA4fIL11SkAlphaType2EEPb(%class.GrSimpleMeshDrawOpHelperWithStencil* %8, %class.GrCaps* dereferenceable(232) %1, %class.GrAppliedClip* %2, i32 %3, i32 %7, %struct.SkRGBA4f* %9, i8* null) #15
  ret i32 %10
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN12_GLOBAL__N_119TriangulatingPathOp17onPrePrepareDrawsEP18GrRecordingContextRK18GrSurfaceProxyViewP13GrAppliedClipRKN15GrXferProcessor12DstProxyViewE18GrXferBarrierFlags8GrLoadOp(%"class.(anonymous namespace)::TriangulatingPathOp"*, %class.GrRecordingContext*, %class.GrSurfaceProxyView* dereferenceable(16), %class.GrAppliedClip*, %"class.GrXferProcessor::DstProxyView"* dereferenceable(32), i32, i32) unnamed_addr #1 align 2 {
  %8 = alloca %"struct.(anonymous namespace)::TessInfo", align 8
  %9 = alloca %"class.skia::tracing_internals::ScopedTracer", align 8
  %10 = alloca %class.GrUniqueKey, align 8
  %11 = alloca { <2 x float>, <2 x float> }, align 8
  %12 = bitcast { <2 x float>, <2 x float> }* %11 to %struct.SkRect*
  %13 = alloca %"class.std::__1::tuple.271", align 8
  %14 = alloca %class.GrCpuVertexAllocator, align 8
  %15 = alloca i8, align 1
  %16 = alloca %class.sk_sp.2, align 8
  %17 = alloca %"class.std::__1::tuple.271", align 8
  %18 = alloca %class.sk_sp, align 8
  %19 = alloca %class.sk_sp.275, align 8
  %20 = load atomic i64, i64* @_ZZN12_GLOBAL__N_119TriangulatingPathOp17onPrePrepareDrawsEP18GrRecordingContextRK18GrSurfaceProxyViewP13GrAppliedClipRKN15GrXferProcessor12DstProxyViewE18GrXferBarrierFlags8GrLoadOpE28trace_event_unique_atomic500.0.0 monotonic, align 8
  %21 = inttoptr i64 %20 to i8*
  %22 = icmp eq i64 %20, 0
  br i1 %22, label %23, label %31

23:                                               ; preds = %7
  %24 = tail call %class.SkEventTracer* @_ZN13SkEventTracer11GetInstanceEv() #15
  %25 = bitcast %class.SkEventTracer* %24 to i8* (%class.SkEventTracer*, i8*)***
  %26 = load i8* (%class.SkEventTracer*, i8*)**, i8* (%class.SkEventTracer*, i8*)*** %25, align 8
  %27 = getelementptr inbounds i8* (%class.SkEventTracer*, i8*)*, i8* (%class.SkEventTracer*, i8*)** %26, i64 2
  %28 = load i8* (%class.SkEventTracer*, i8*)*, i8* (%class.SkEventTracer*, i8*)** %27, align 8
  %29 = tail call i8* %28(%class.SkEventTracer* %24, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.4, i64 0, i64 0)) #15
  %30 = ptrtoint i8* %29 to i64
  store atomic i64 %30, i64* @_ZZN12_GLOBAL__N_119TriangulatingPathOp17onPrePrepareDrawsEP18GrRecordingContextRK18GrSurfaceProxyViewP13GrAppliedClipRKN15GrXferProcessor12DstProxyViewE18GrXferBarrierFlags8GrLoadOpE28trace_event_unique_atomic500.0.0 monotonic, align 8
  br label %31

31:                                               ; preds = %7, %23
  %32 = phi i8* [ %21, %7 ], [ %29, %23 ]
  %33 = bitcast %"class.skia::tracing_internals::ScopedTracer"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %33) #15
  %34 = getelementptr inbounds %"class.skia::tracing_internals::ScopedTracer", %"class.skia::tracing_internals::ScopedTracer"* %9, i64 0, i32 0
  %35 = getelementptr inbounds %"class.skia::tracing_internals::ScopedTracer", %"class.skia::tracing_internals::ScopedTracer"* %9, i64 0, i32 1, i32 0
  %36 = getelementptr inbounds %"class.skia::tracing_internals::ScopedTracer", %"class.skia::tracing_internals::ScopedTracer"* %9, i64 0, i32 1, i32 1
  %37 = getelementptr inbounds %"class.skia::tracing_internals::ScopedTracer", %"class.skia::tracing_internals::ScopedTracer"* %9, i64 0, i32 1, i32 2
  %38 = getelementptr inbounds %"class.skia::tracing_internals::ScopedTracer", %"class.skia::tracing_internals::ScopedTracer"* %9, i64 0, i32 1
  %39 = bitcast %"struct.skia::tracing_internals::ScopedTracer::Data"* %38 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %39, i8 -86, i64 24, i1 false)
  store %"struct.skia::tracing_internals::ScopedTracer::Data"* null, %"struct.skia::tracing_internals::ScopedTracer::Data"** %34, align 8
  %40 = load i8, i8* %32, align 1
  %41 = and i8 %40, 5
  %42 = icmp eq i8 %41, 0
  br i1 %42, label %52, label %43

43:                                               ; preds = %31
  %44 = tail call %class.SkEventTracer* @_ZN13SkEventTracer11GetInstanceEv() #15
  %45 = bitcast %class.SkEventTracer* %44 to i64 (%class.SkEventTracer*, i8, i8*, i8*, i64, i32, i8**, i8*, i64*, i8)***
  %46 = load i64 (%class.SkEventTracer*, i8, i8*, i8*, i64, i32, i8**, i8*, i64*, i8)**, i64 (%class.SkEventTracer*, i8, i8*, i8*, i64, i32, i8**, i8*, i64*, i8)*** %45, align 8
  %47 = getelementptr inbounds i64 (%class.SkEventTracer*, i8, i8*, i8*, i64, i32, i8**, i8*, i64*, i8)*, i64 (%class.SkEventTracer*, i8, i8*, i8*, i64, i32, i8**, i8*, i64*, i8)** %46, i64 4
  %48 = load i64 (%class.SkEventTracer*, i8, i8*, i8*, i64, i32, i8**, i8*, i64*, i8)*, i64 (%class.SkEventTracer*, i8, i8*, i8*, i64, i32, i8**, i8*, i64*, i8)** %47, align 8
  %49 = tail call i64 %48(%class.SkEventTracer* %44, i8 signext 88, i8* %32, i8* getelementptr inbounds ([211 x i8], [211 x i8]* @__PRETTY_FUNCTION__._ZN12_GLOBAL__N_119TriangulatingPathOp17onPrePrepareDrawsEP18GrRecordingContextRK18GrSurfaceProxyViewP13GrAppliedClipRKN15GrXferProcessor12DstProxyViewE18GrXferBarrierFlags8GrLoadOp, i64 0, i64 0), i64 0, i32 0, i8** null, i8* null, i64* null, i8 zeroext 0) #15
  %50 = getelementptr inbounds %"class.skia::tracing_internals::ScopedTracer", %"class.skia::tracing_internals::ScopedTracer"* %9, i64 0, i32 1
  %51 = getelementptr inbounds %"struct.skia::tracing_internals::ScopedTracer::Data", %"struct.skia::tracing_internals::ScopedTracer::Data"* %50, i64 0, i32 0
  store i8* %32, i8** %51, align 8
  store i8* getelementptr inbounds ([211 x i8], [211 x i8]* @__PRETTY_FUNCTION__._ZN12_GLOBAL__N_119TriangulatingPathOp17onPrePrepareDrawsEP18GrRecordingContextRK18GrSurfaceProxyViewP13GrAppliedClipRKN15GrXferProcessor12DstProxyViewE18GrXferBarrierFlags8GrLoadOp, i64 0, i64 0), i8** %36, align 8
  store i64 %49, i64* %37, align 8
  store %"struct.skia::tracing_internals::ScopedTracer::Data"* %50, %"struct.skia::tracing_internals::ScopedTracer::Data"** %34, align 8
  br label %52

52:                                               ; preds = %31, %43
  %53 = getelementptr inbounds %"class.(anonymous namespace)::TriangulatingPathOp", %"class.(anonymous namespace)::TriangulatingPathOp"* %0, i64 0, i32 0
  call void @_ZN12GrMeshDrawOp17onPrePrepareDrawsEP18GrRecordingContextRK18GrSurfaceProxyViewP13GrAppliedClipRKN15GrXferProcessor12DstProxyViewE18GrXferBarrierFlags8GrLoadOp(%class.GrMeshDrawOp* %53, %class.GrRecordingContext* %1, %class.GrSurfaceProxyView* dereferenceable(16) %2, %class.GrAppliedClip* %3, %"class.GrXferProcessor::DstProxyView"* dereferenceable(32) %4, i32 %5, i32 %6) #15
  %54 = getelementptr inbounds %"class.(anonymous namespace)::TriangulatingPathOp", %"class.(anonymous namespace)::TriangulatingPathOp"* %0, i64 0, i32 6
  %55 = load i8, i8* %54, align 8, !range !2
  %56 = icmp eq i8 %55, 0
  br i1 %56, label %57, label %293

57:                                               ; preds = %52
  %58 = call %class.GrThreadSafeCache* @_ZN18GrRecordingContext15threadSafeCacheEv(%class.GrRecordingContext* %1) #15
  %59 = bitcast %class.GrUniqueKey* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %59) #15
  %60 = getelementptr inbounds %class.GrUniqueKey, %class.GrUniqueKey* %10, i64 0, i32 0, i32 0, i32 1, i32 0, i64 2
  %61 = bitcast i32* %60 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %61, i8 -86, i64 24, i1 false)
  %62 = getelementptr inbounds %class.GrUniqueKey, %class.GrUniqueKey* %10, i64 0, i32 0, i32 0, i32 0
  %63 = getelementptr inbounds %class.GrUniqueKey, %class.GrUniqueKey* %10, i64 0, i32 0, i32 0, i32 1, i32 0, i64 0
  store i32* %63, i32** %62, align 8
  store i32 0, i32* %63, align 8
  %64 = getelementptr inbounds %class.GrUniqueKey, %class.GrUniqueKey* %10, i64 0, i32 0, i32 0, i32 1, i32 0, i64 1
  store i32 0, i32* %64, align 4
  %65 = getelementptr inbounds %class.GrUniqueKey, %class.GrUniqueKey* %10, i64 0, i32 1, i32 0
  %66 = bitcast %class.SkData** %65 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %66, i8 0, i64 16, i1 false) #15
  %67 = getelementptr inbounds %"class.(anonymous namespace)::TriangulatingPathOp", %"class.(anonymous namespace)::TriangulatingPathOp"* %0, i64 0, i32 3
  %68 = getelementptr inbounds %"class.(anonymous namespace)::TriangulatingPathOp", %"class.(anonymous namespace)::TriangulatingPathOp"* %0, i64 0, i32 5
  call fastcc void @_ZN12_GLOBAL__N_119TriangulatingPathOp9CreateKeyEP11GrUniqueKeyRK13GrStyledShapeRK7SkIRect(%class.GrUniqueKey* nonnull %10, %class.GrStyledShape* dereferenceable(208) %67, %struct.SkIRect* dereferenceable(16) %68)
  %69 = getelementptr inbounds %"class.(anonymous namespace)::TriangulatingPathOp", %"class.(anonymous namespace)::TriangulatingPathOp"* %0, i64 0, i32 4
  %70 = bitcast { <2 x float>, <2 x float> }* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %70) #15
  %71 = getelementptr inbounds %class.GrStyledShape, %class.GrStyledShape* %67, i64 0, i32 0
  %72 = call { <2 x float>, <2 x float> } @_ZNK7GrShape6boundsEv(%class.GrShape* %71) #15
  %73 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %11, i64 0, i32 0
  %74 = extractvalue { <2 x float>, <2 x float> } %72, 0
  store <2 x float> %74, <2 x float>* %73, align 8
  %75 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %11, i64 0, i32 1
  %76 = extractvalue { <2 x float>, <2 x float> } %72, 1
  store <2 x float> %76, <2 x float>* %75, align 8
  %77 = call float @_ZN11GrPathUtils19scaleToleranceToSrcEfRK8SkMatrixRK6SkRect(float 2.500000e-01, %class.SkMatrix* dereferenceable(40) %69, %struct.SkRect* nonnull dereferenceable(16) %12) #15
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %70) #15
  %78 = bitcast %"class.std::__1::tuple.271"* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %78) #15
  %79 = getelementptr inbounds %"class.std::__1::tuple.271", %"class.std::__1::tuple.271"* %13, i64 0, i32 0, i32 0, i32 0, i32 0
  %80 = getelementptr inbounds %"class.std::__1::tuple.271", %"class.std::__1::tuple.271"* %13, i64 0, i32 0, i32 1, i32 0, i32 0
  %81 = bitcast %"class.std::__1::tuple.271"* %13 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %81, i8 -86, i64 16, i1 false)
  call void @_ZN17GrThreadSafeCache17findVertsWithDataERK11GrUniqueKey(%"class.std::__1::tuple.271"* nonnull sret %13, %class.GrThreadSafeCache* %58, %class.GrUniqueKey* nonnull dereferenceable(56) %10) #15
  %82 = load %"class.GrThreadSafeCache::VertexData"*, %"class.GrThreadSafeCache::VertexData"** %79, align 8
  %83 = icmp eq %"class.GrThreadSafeCache::VertexData"* %82, null
  %84 = ptrtoint %"class.GrThreadSafeCache::VertexData"* %82 to i64
  br i1 %83, label %110, label %85

85:                                               ; preds = %57
  %86 = load %class.SkData*, %class.SkData** %80, align 8
  %87 = getelementptr inbounds %class.SkData, %class.SkData* %86, i64 0, i32 3
  %88 = load i8*, i8** %87, align 8
  %89 = getelementptr inbounds i8, i8* %88, i64 4
  %90 = load i8, i8* %89, align 4, !range !2
  %91 = icmp eq i8 %90, 0
  br i1 %91, label %92, label %98

92:                                               ; preds = %85
  %93 = getelementptr inbounds i8, i8* %88, i64 8
  %94 = bitcast i8* %93 to float*
  %95 = load float, float* %94, align 4
  %96 = fmul float %77, 3.000000e+00
  %97 = fcmp olt float %95, %96
  br i1 %97, label %98, label %110

98:                                               ; preds = %85, %92
  %99 = getelementptr inbounds %"class.(anonymous namespace)::TriangulatingPathOp", %"class.(anonymous namespace)::TriangulatingPathOp"* %0, i64 0, i32 9
  store %"class.GrThreadSafeCache::VertexData"* null, %"class.GrThreadSafeCache::VertexData"** %79, align 8
  %100 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %99, i64 0, i32 0
  %101 = load %"class.GrThreadSafeCache::VertexData"*, %"class.GrThreadSafeCache::VertexData"** %100, align 8
  %102 = bitcast %class.sk_sp* %99 to i64*
  store i64 %84, i64* %102, align 8
  %103 = icmp eq %"class.GrThreadSafeCache::VertexData"* %101, null
  br i1 %103, label %260, label %104

104:                                              ; preds = %98
  %105 = getelementptr inbounds %"class.GrThreadSafeCache::VertexData", %"class.GrThreadSafeCache::VertexData"* %101, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %106 = atomicrmw add i32* %105, i32 -1 acq_rel
  %107 = icmp eq i32 %106, 1
  br i1 %107, label %108, label %260

108:                                              ; preds = %104
  call void @_ZN17GrThreadSafeCache10VertexDataD1Ev(%"class.GrThreadSafeCache::VertexData"* nonnull %101) #15
  %109 = bitcast %"class.GrThreadSafeCache::VertexData"* %101 to i8*
  call void @_ZdlPv(i8* %109) #16
  br label %260

110:                                              ; preds = %57, %92
  %111 = bitcast %class.GrCpuVertexAllocator* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %111) #15
  %112 = getelementptr inbounds %class.GrCpuVertexAllocator, %class.GrCpuVertexAllocator* %14, i64 0, i32 0, i32 0
  %113 = getelementptr inbounds %class.GrCpuVertexAllocator, %class.GrCpuVertexAllocator* %14, i64 0, i32 1, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTV20GrCpuVertexAllocator, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %112, align 8
  %114 = bitcast %"class.GrThreadSafeCache::VertexData"** %113 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %114, i8 0, i64 24, i1 false) #15
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %15) #15
  store i8 -86, i8* %15, align 1
  %115 = getelementptr inbounds %class.GrCpuVertexAllocator, %class.GrCpuVertexAllocator* %14, i64 0, i32 0
  %116 = call fastcc i32 @_ZN12_GLOBAL__N_119TriangulatingPathOp11TriangulateEP22GrEagerVertexAllocatorRK8SkMatrixRK13GrStyledShapeRK7SkIRectfPb(%class.GrEagerVertexAllocator* nonnull %115, %class.SkMatrix* dereferenceable(40) %69, %class.GrStyledShape* dereferenceable(208) %67, %struct.SkIRect* dereferenceable(16) %68, float %77, i8* nonnull %15)
  %117 = icmp eq i32 %116, 0
  br i1 %117, label %250, label %118

118:                                              ; preds = %110
  %119 = getelementptr inbounds %class.GrCpuVertexAllocator, %class.GrCpuVertexAllocator* %14, i64 0, i32 1
  %120 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %119, i64 0, i32 0
  %121 = bitcast %class.sk_sp* %119 to i64*
  %122 = load i64, i64* %121, align 8, !noalias !4
  store %"class.GrThreadSafeCache::VertexData"* null, %"class.GrThreadSafeCache::VertexData"** %120, align 8, !noalias !4
  %123 = getelementptr inbounds %"class.(anonymous namespace)::TriangulatingPathOp", %"class.(anonymous namespace)::TriangulatingPathOp"* %0, i64 0, i32 9
  %124 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %123, i64 0, i32 0
  %125 = load %"class.GrThreadSafeCache::VertexData"*, %"class.GrThreadSafeCache::VertexData"** %124, align 8
  %126 = bitcast %class.sk_sp* %123 to i64*
  store i64 %122, i64* %126, align 8
  %127 = icmp eq %"class.GrThreadSafeCache::VertexData"* %125, null
  br i1 %127, label %134, label %128

128:                                              ; preds = %118
  %129 = getelementptr inbounds %"class.GrThreadSafeCache::VertexData", %"class.GrThreadSafeCache::VertexData"* %125, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %130 = atomicrmw add i32* %129, i32 -1 acq_rel
  %131 = icmp eq i32 %130, 1
  br i1 %131, label %132, label %134

132:                                              ; preds = %128
  call void @_ZN17GrThreadSafeCache10VertexDataD1Ev(%"class.GrThreadSafeCache::VertexData"* nonnull %125) #15
  %133 = bitcast %"class.GrThreadSafeCache::VertexData"* %125 to i8*
  call void @_ZdlPv(i8* %133) #16
  br label %134

134:                                              ; preds = %132, %128, %118
  %135 = load i8, i8* %15, align 1, !range !2
  %136 = bitcast %"struct.(anonymous namespace)::TessInfo"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %136) #15, !noalias !7
  %137 = bitcast %"struct.(anonymous namespace)::TessInfo"* %8 to i64*
  store i64 -6148914691236517206, i64* %137, align 8, !noalias !7
  %138 = getelementptr inbounds %"struct.(anonymous namespace)::TessInfo", %"struct.(anonymous namespace)::TessInfo"* %8, i64 0, i32 0
  store i32 %116, i32* %138, align 8, !noalias !7
  %139 = getelementptr inbounds %"struct.(anonymous namespace)::TessInfo", %"struct.(anonymous namespace)::TessInfo"* %8, i64 0, i32 1
  store i8 %135, i8* %139, align 4, !noalias !7
  %140 = getelementptr inbounds %"struct.(anonymous namespace)::TessInfo", %"struct.(anonymous namespace)::TessInfo"* %8, i64 0, i32 2
  store float %77, float* %140, align 8, !noalias !7
  call void @_ZN6SkData12MakeWithCopyEPKvm(%class.sk_sp.2* nonnull sret %16, i8* nonnull %136, i64 12) #15
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %136) #15, !noalias !7
  %141 = getelementptr inbounds %class.GrUniqueKey, %class.GrUniqueKey* %10, i64 0, i32 1
  %142 = getelementptr inbounds %class.sk_sp.2, %class.sk_sp.2* %16, i64 0, i32 0
  %143 = bitcast %class.sk_sp.2* %16 to i64*
  %144 = load i64, i64* %143, align 8
  store %class.SkData* null, %class.SkData** %142, align 8
  %145 = getelementptr inbounds %class.sk_sp.2, %class.sk_sp.2* %141, i64 0, i32 0
  %146 = load %class.SkData*, %class.SkData** %145, align 8
  %147 = bitcast %class.sk_sp.2* %141 to i64*
  store i64 %144, i64* %147, align 8
  %148 = icmp eq %class.SkData* %146, null
  br i1 %148, label %155, label %149

149:                                              ; preds = %134
  %150 = getelementptr inbounds %class.SkData, %class.SkData* %146, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %151 = atomicrmw add i32* %150, i32 -1 acq_rel
  %152 = icmp eq i32 %151, 1
  br i1 %152, label %153, label %155

153:                                              ; preds = %149
  call void @_ZN6SkDataD1Ev(%class.SkData* nonnull %146) #15
  %154 = bitcast %class.SkData* %146 to i8*
  call void @_ZN6SkDatadlEPv(i8* nonnull %154) #15
  br label %155

155:                                              ; preds = %134, %149, %153
  %156 = load %class.SkData*, %class.SkData** %142, align 8
  %157 = icmp eq %class.SkData* %156, null
  br i1 %157, label %164, label %158

158:                                              ; preds = %155
  %159 = getelementptr inbounds %class.SkData, %class.SkData* %156, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %160 = atomicrmw add i32* %159, i32 -1 acq_rel
  %161 = icmp eq i32 %160, 1
  br i1 %161, label %162, label %164

162:                                              ; preds = %158
  call void @_ZN6SkDataD1Ev(%class.SkData* nonnull %156) #15
  %163 = bitcast %class.SkData* %156 to i8*
  call void @_ZN6SkDatadlEPv(i8* nonnull %163) #15
  br label %164

164:                                              ; preds = %155, %158, %162
  %165 = bitcast %"class.std::__1::tuple.271"* %17 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %165) #15
  %166 = getelementptr inbounds %"class.std::__1::tuple.271", %"class.std::__1::tuple.271"* %17, i64 0, i32 0, i32 0, i32 0, i32 0
  %167 = getelementptr inbounds %"class.std::__1::tuple.271", %"class.std::__1::tuple.271"* %17, i64 0, i32 0, i32 1, i32 0, i32 0
  %168 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %18, i64 0, i32 0
  %169 = bitcast %"class.std::__1::tuple.271"* %17 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %169, i8 -86, i64 16, i1 false)
  %170 = load %"class.GrThreadSafeCache::VertexData"*, %"class.GrThreadSafeCache::VertexData"** %124, align 8
  %171 = icmp eq %"class.GrThreadSafeCache::VertexData"* %170, null
  br i1 %171, label %175, label %172

172:                                              ; preds = %164
  %173 = getelementptr inbounds %"class.GrThreadSafeCache::VertexData", %"class.GrThreadSafeCache::VertexData"* %170, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %174 = atomicrmw add i32* %173, i32 1 monotonic
  br label %175

175:                                              ; preds = %164, %172
  store %"class.GrThreadSafeCache::VertexData"* %170, %"class.GrThreadSafeCache::VertexData"** %168, align 8
  call void @_ZN17GrThreadSafeCache16addVertsWithDataERK11GrUniqueKey5sk_spINS_10VertexDataEEPFbP6SkDataS7_E(%"class.std::__1::tuple.271"* nonnull sret %17, %class.GrThreadSafeCache* %58, %class.GrUniqueKey* nonnull dereferenceable(56) %10, %class.sk_sp* nonnull %18, i1 (%class.SkData*, %class.SkData*)* nonnull @_ZN12_GLOBAL__N_115is_newer_betterEP6SkDataS1_) #15
  %176 = load %"class.GrThreadSafeCache::VertexData"*, %"class.GrThreadSafeCache::VertexData"** %168, align 8
  %177 = icmp eq %"class.GrThreadSafeCache::VertexData"* %176, null
  br i1 %177, label %184, label %178

178:                                              ; preds = %175
  %179 = getelementptr inbounds %"class.GrThreadSafeCache::VertexData", %"class.GrThreadSafeCache::VertexData"* %176, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %180 = atomicrmw add i32* %179, i32 -1 acq_rel
  %181 = icmp eq i32 %180, 1
  br i1 %181, label %182, label %184

182:                                              ; preds = %178
  call void @_ZN17GrThreadSafeCache10VertexDataD1Ev(%"class.GrThreadSafeCache::VertexData"* nonnull %176) #15
  %183 = bitcast %"class.GrThreadSafeCache::VertexData"* %176 to i8*
  call void @_ZdlPv(i8* %183) #16
  br label %184

184:                                              ; preds = %175, %178, %182
  %185 = load %"class.GrThreadSafeCache::VertexData"*, %"class.GrThreadSafeCache::VertexData"** %166, align 8
  %186 = load %"class.GrThreadSafeCache::VertexData"*, %"class.GrThreadSafeCache::VertexData"** %124, align 8
  %187 = icmp eq %"class.GrThreadSafeCache::VertexData"* %185, %186
  br i1 %187, label %197, label %188

188:                                              ; preds = %184
  %189 = ptrtoint %"class.GrThreadSafeCache::VertexData"* %185 to i64
  store %"class.GrThreadSafeCache::VertexData"* null, %"class.GrThreadSafeCache::VertexData"** %166, align 8
  store i64 %189, i64* %126, align 8
  %190 = icmp eq %"class.GrThreadSafeCache::VertexData"* %186, null
  br i1 %190, label %231, label %191

191:                                              ; preds = %188
  %192 = getelementptr inbounds %"class.GrThreadSafeCache::VertexData", %"class.GrThreadSafeCache::VertexData"* %186, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %193 = atomicrmw add i32* %192, i32 -1 acq_rel
  %194 = icmp eq i32 %193, 1
  br i1 %194, label %195, label %231

195:                                              ; preds = %191
  call void @_ZN17GrThreadSafeCache10VertexDataD1Ev(%"class.GrThreadSafeCache::VertexData"* nonnull %186) #15
  %196 = bitcast %"class.GrThreadSafeCache::VertexData"* %186 to i8*
  call void @_ZdlPv(i8* %196) #16
  br label %231

197:                                              ; preds = %184
  %198 = getelementptr inbounds %class.GrRecordingContext, %class.GrRecordingContext* %1, i64 0, i32 0, i32 0
  %199 = call i32 @_ZNK14GrContext_Base9contextIDEv(%class.GrContext_Base* %198) #15
  %200 = call i8* @_Znwm(i64 80) #16, !noalias !10
  %201 = bitcast i8* %200 to %class.SkIDChangeListener*
  call void @_ZN18SkIDChangeListenerC2Ev(%class.SkIDChangeListener* nonnull %201) #15, !noalias !10
  %202 = bitcast i8* %200 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN12_GLOBAL__N_120UniqueKeyInvalidatorE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %202, align 8, !noalias !10
  %203 = getelementptr inbounds i8, i8* %200, i64 16
  %204 = bitcast i8* %203 to %class.GrUniqueKey*
  %205 = getelementptr inbounds i8, i8* %200, i64 24
  %206 = bitcast i8* %205 to i32*
  %207 = bitcast i8* %203 to i8**
  store i8* %205, i8** %207, align 8, !noalias !10
  store i32 0, i32* %206, align 4, !noalias !10
  %208 = getelementptr inbounds i8, i8* %200, i64 28
  %209 = bitcast i8* %208 to i32*
  store i32 0, i32* %209, align 4, !noalias !10
  %210 = getelementptr inbounds i8, i8* %200, i64 56
  %211 = bitcast i8* %210 to %class.SkData**
  store %class.SkData* null, %class.SkData** %211, align 8, !noalias !10
  %212 = call dereferenceable(56) %class.GrUniqueKey* @_ZN11GrUniqueKeyaSERKS_(%class.GrUniqueKey* %204, %class.GrUniqueKey* nonnull dereferenceable(56) %10) #15, !noalias !10
  %213 = getelementptr inbounds i8, i8* %200, i64 72
  %214 = bitcast i8* %213 to i32*
  store i32 %199, i32* %214, align 8, !noalias !10
  %215 = getelementptr inbounds i8, i8* %200, i64 76
  store i8 1, i8* %215, align 4, !noalias !10
  %216 = ptrtoint i8* %200 to i64
  %217 = bitcast %class.sk_sp.275* %19 to i64*
  store i64 %216, i64* %217, align 8
  call void @_ZNK13GrStyledShape22addGenIDChangeListenerE5sk_spI18SkIDChangeListenerE(%class.GrStyledShape* %67, %class.sk_sp.275* nonnull %19) #15
  %218 = getelementptr inbounds %class.sk_sp.275, %class.sk_sp.275* %19, i64 0, i32 0
  %219 = load %class.SkIDChangeListener*, %class.SkIDChangeListener** %218, align 8
  %220 = icmp eq %class.SkIDChangeListener* %219, null
  br i1 %220, label %231, label %221

221:                                              ; preds = %197
  %222 = getelementptr inbounds %class.SkIDChangeListener, %class.SkIDChangeListener* %219, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %223 = atomicrmw add i32* %222, i32 -1 acq_rel
  %224 = icmp eq i32 %223, 1
  br i1 %224, label %225, label %231

225:                                              ; preds = %221
  %226 = bitcast %class.SkIDChangeListener* %219 to %class.SkRefCntBase*
  %227 = bitcast %class.SkIDChangeListener* %219 to void (%class.SkRefCntBase*)***
  %228 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %227, align 8
  %229 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %228, i64 2
  %230 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %229, align 8
  call void %230(%class.SkRefCntBase* nonnull %226) #15
  br label %231

231:                                              ; preds = %197, %221, %225, %195, %191, %188
  %232 = load %class.SkData*, %class.SkData** %167, align 8
  %233 = icmp eq %class.SkData* %232, null
  br i1 %233, label %240, label %234

234:                                              ; preds = %231
  %235 = getelementptr inbounds %class.SkData, %class.SkData* %232, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %236 = atomicrmw add i32* %235, i32 -1 acq_rel
  %237 = icmp eq i32 %236, 1
  br i1 %237, label %238, label %240

238:                                              ; preds = %234
  call void @_ZN6SkDataD1Ev(%class.SkData* nonnull %232) #15
  %239 = bitcast %class.SkData* %232 to i8*
  call void @_ZN6SkDatadlEPv(i8* nonnull %239) #15
  br label %240

240:                                              ; preds = %238, %234, %231
  %241 = load %"class.GrThreadSafeCache::VertexData"*, %"class.GrThreadSafeCache::VertexData"** %166, align 8
  %242 = icmp eq %"class.GrThreadSafeCache::VertexData"* %241, null
  br i1 %242, label %249, label %243

243:                                              ; preds = %240
  %244 = getelementptr inbounds %"class.GrThreadSafeCache::VertexData", %"class.GrThreadSafeCache::VertexData"* %241, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %245 = atomicrmw add i32* %244, i32 -1 acq_rel
  %246 = icmp eq i32 %245, 1
  br i1 %246, label %247, label %249

247:                                              ; preds = %243
  call void @_ZN17GrThreadSafeCache10VertexDataD1Ev(%"class.GrThreadSafeCache::VertexData"* nonnull %241) #15
  %248 = bitcast %"class.GrThreadSafeCache::VertexData"* %241 to i8*
  call void @_ZdlPv(i8* %248) #16
  br label %249

249:                                              ; preds = %240, %243, %247
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %165) #15
  br label %250

250:                                              ; preds = %110, %249
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %15) #15
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTV20GrCpuVertexAllocator, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %112, align 8
  %251 = load %"class.GrThreadSafeCache::VertexData"*, %"class.GrThreadSafeCache::VertexData"** %113, align 8
  %252 = icmp eq %"class.GrThreadSafeCache::VertexData"* %251, null
  br i1 %252, label %259, label %253

253:                                              ; preds = %250
  %254 = getelementptr inbounds %"class.GrThreadSafeCache::VertexData", %"class.GrThreadSafeCache::VertexData"* %251, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %255 = atomicrmw add i32* %254, i32 -1 acq_rel
  %256 = icmp eq i32 %255, 1
  br i1 %256, label %257, label %259

257:                                              ; preds = %253
  call void @_ZN17GrThreadSafeCache10VertexDataD1Ev(%"class.GrThreadSafeCache::VertexData"* nonnull %251) #15
  %258 = bitcast %"class.GrThreadSafeCache::VertexData"* %251 to i8*
  call void @_ZdlPv(i8* %258) #16
  br label %259

259:                                              ; preds = %250, %253, %257
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %111) #15
  br label %260

260:                                              ; preds = %108, %104, %98, %259
  %261 = load %class.SkData*, %class.SkData** %80, align 8
  %262 = icmp eq %class.SkData* %261, null
  br i1 %262, label %269, label %263

263:                                              ; preds = %260
  %264 = getelementptr inbounds %class.SkData, %class.SkData* %261, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %265 = atomicrmw add i32* %264, i32 -1 acq_rel
  %266 = icmp eq i32 %265, 1
  br i1 %266, label %267, label %269

267:                                              ; preds = %263
  call void @_ZN6SkDataD1Ev(%class.SkData* nonnull %261) #15
  %268 = bitcast %class.SkData* %261 to i8*
  call void @_ZN6SkDatadlEPv(i8* nonnull %268) #15
  br label %269

269:                                              ; preds = %267, %263, %260
  %270 = load %"class.GrThreadSafeCache::VertexData"*, %"class.GrThreadSafeCache::VertexData"** %79, align 8
  %271 = icmp eq %"class.GrThreadSafeCache::VertexData"* %270, null
  br i1 %271, label %278, label %272

272:                                              ; preds = %269
  %273 = getelementptr inbounds %"class.GrThreadSafeCache::VertexData", %"class.GrThreadSafeCache::VertexData"* %270, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %274 = atomicrmw add i32* %273, i32 -1 acq_rel
  %275 = icmp eq i32 %274, 1
  br i1 %275, label %276, label %278

276:                                              ; preds = %272
  call void @_ZN17GrThreadSafeCache10VertexDataD1Ev(%"class.GrThreadSafeCache::VertexData"* nonnull %270) #15
  %277 = bitcast %"class.GrThreadSafeCache::VertexData"* %270 to i8*
  call void @_ZdlPv(i8* %277) #16
  br label %278

278:                                              ; preds = %269, %272, %276
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %78) #15
  %279 = load %class.SkData*, %class.SkData** %65, align 8
  %280 = icmp eq %class.SkData* %279, null
  br i1 %280, label %287, label %281

281:                                              ; preds = %278
  %282 = getelementptr inbounds %class.SkData, %class.SkData* %279, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %283 = atomicrmw add i32* %282, i32 -1 acq_rel
  %284 = icmp eq i32 %283, 1
  br i1 %284, label %285, label %287

285:                                              ; preds = %281
  call void @_ZN6SkDataD1Ev(%class.SkData* nonnull %279) #15
  %286 = bitcast %class.SkData* %279 to i8*
  call void @_ZN6SkDatadlEPv(i8* nonnull %286) #15
  br label %287

287:                                              ; preds = %285, %281, %278
  %288 = load i32*, i32** %62, align 8
  %289 = icmp eq i32* %288, %63
  br i1 %289, label %292, label %290

290:                                              ; preds = %287
  %291 = bitcast i32* %288 to i8*
  call void @_Z7sk_freePv(i8* %291) #15
  br label %292

292:                                              ; preds = %287, %290
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %59) #15
  br label %293

293:                                              ; preds = %52, %292
  %294 = load %"struct.skia::tracing_internals::ScopedTracer::Data"*, %"struct.skia::tracing_internals::ScopedTracer::Data"** %34, align 8
  %295 = icmp eq %"struct.skia::tracing_internals::ScopedTracer::Data"* %294, null
  br i1 %295, label %309, label %296

296:                                              ; preds = %293
  %297 = load i8*, i8** %35, align 8
  %298 = load i8, i8* %297, align 1
  %299 = icmp eq i8 %298, 0
  br i1 %299, label %309, label %300

300:                                              ; preds = %296
  %301 = call %class.SkEventTracer* @_ZN13SkEventTracer11GetInstanceEv() #15
  %302 = load i8*, i8** %35, align 8
  %303 = load i8*, i8** %36, align 8
  %304 = load i64, i64* %37, align 8
  %305 = bitcast %class.SkEventTracer* %301 to void (%class.SkEventTracer*, i8*, i8*, i64)***
  %306 = load void (%class.SkEventTracer*, i8*, i8*, i64)**, void (%class.SkEventTracer*, i8*, i8*, i64)*** %305, align 8
  %307 = getelementptr inbounds void (%class.SkEventTracer*, i8*, i8*, i64)*, void (%class.SkEventTracer*, i8*, i8*, i64)** %306, i64 5
  %308 = load void (%class.SkEventTracer*, i8*, i8*, i64)*, void (%class.SkEventTracer*, i8*, i8*, i64)** %307, align 8
  call void %308(%class.SkEventTracer* %301, i8* %302, i8* %303, i64 %304) #15
  br label %309

309:                                              ; preds = %293, %296, %300
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %33) #15
  ret void
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define internal %class.GrProgramInfo* @_ZN12_GLOBAL__N_119TriangulatingPathOp11programInfoEv(%"class.(anonymous namespace)::TriangulatingPathOp"* nocapture readonly) unnamed_addr #8 align 2 {
  %2 = getelementptr inbounds %"class.(anonymous namespace)::TriangulatingPathOp", %"class.(anonymous namespace)::TriangulatingPathOp"* %0, i64 0, i32 8
  %3 = load %class.GrProgramInfo*, %class.GrProgramInfo** %2, align 8
  ret %class.GrProgramInfo* %3
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN12_GLOBAL__N_119TriangulatingPathOp19onCreateProgramInfoEPK6GrCapsP12SkArenaAllocRK18GrSurfaceProxyViewO13GrAppliedClipRKN15GrXferProcessor12DstProxyViewE18GrXferBarrierFlags8GrLoadOp(%"class.(anonymous namespace)::TriangulatingPathOp"*, %class.GrCaps*, %class.SkArenaAlloc*, %class.GrSurfaceProxyView* dereferenceable(16), %class.GrAppliedClip* dereferenceable(72), %"class.GrXferProcessor::DstProxyView"* dereferenceable(32), i32, i32) unnamed_addr #1 align 2 {
  %9 = alloca %"struct.GrDefaultGeoProcFactory::Color", align 4
  %10 = alloca %"struct.GrDefaultGeoProcFactory::Coverage", align 4
  %11 = alloca %"struct.GrDefaultGeoProcFactory::LocalCoords", align 8
  %12 = alloca %"struct.GrDefaultGeoProcFactory::Coverage", align 4
  %13 = alloca %"struct.GrDefaultGeoProcFactory::LocalCoords", align 8
  %14 = bitcast %"struct.GrDefaultGeoProcFactory::Color"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 20, i8* nonnull %14) #15
  %15 = getelementptr inbounds %"struct.GrDefaultGeoProcFactory::Color", %"struct.GrDefaultGeoProcFactory::Color"* %9, i64 0, i32 0
  %16 = getelementptr inbounds %"class.(anonymous namespace)::TriangulatingPathOp", %"class.(anonymous namespace)::TriangulatingPathOp"* %0, i64 0, i32 2
  store i32 0, i32* %15, align 4
  %17 = getelementptr inbounds %"struct.GrDefaultGeoProcFactory::Color", %"struct.GrDefaultGeoProcFactory::Color"* %9, i64 0, i32 1
  %18 = bitcast %struct.SkRGBA4f* %17 to i8*
  %19 = bitcast %struct.SkRGBA4f* %16 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %18, i8* align 4 %19, i64 16, i1 false) #15
  %20 = getelementptr inbounds %"class.(anonymous namespace)::TriangulatingPathOp", %"class.(anonymous namespace)::TriangulatingPathOp"* %0, i64 0, i32 1
  %21 = getelementptr inbounds %"class.(anonymous namespace)::TriangulatingPathOp", %"class.(anonymous namespace)::TriangulatingPathOp"* %0, i64 0, i32 1, i32 0, i32 2
  %22 = load i8, i8* %21, align 1
  %23 = lshr i8 %22, 2
  %24 = and i8 %23, 1
  %25 = zext i8 %24 to i32
  %26 = getelementptr inbounds %"class.(anonymous namespace)::TriangulatingPathOp", %"class.(anonymous namespace)::TriangulatingPathOp"* %0, i64 0, i32 6
  %27 = load i8, i8* %26, align 8, !range !2
  %28 = icmp eq i8 %27, 0
  br i1 %28, label %41, label %29

29:                                               ; preds = %8
  %30 = and i8 %22, 8
  %31 = icmp eq i8 %30, 0
  %32 = select i1 %31, i32 2, i32 3
  %33 = bitcast %"struct.GrDefaultGeoProcFactory::Coverage"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %33) #15
  %34 = getelementptr inbounds %"struct.GrDefaultGeoProcFactory::Coverage", %"struct.GrDefaultGeoProcFactory::Coverage"* %10, i64 0, i32 0
  store i32 %32, i32* %34, align 4
  %35 = getelementptr inbounds %"struct.GrDefaultGeoProcFactory::Coverage", %"struct.GrDefaultGeoProcFactory::Coverage"* %10, i64 0, i32 1
  store i8 -1, i8* %35, align 4
  %36 = bitcast %"struct.GrDefaultGeoProcFactory::LocalCoords"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %36) #15
  %37 = getelementptr inbounds %"struct.GrDefaultGeoProcFactory::LocalCoords", %"struct.GrDefaultGeoProcFactory::LocalCoords"* %11, i64 0, i32 0
  store i32 %25, i32* %37, align 8
  %38 = getelementptr inbounds %"struct.GrDefaultGeoProcFactory::LocalCoords", %"struct.GrDefaultGeoProcFactory::LocalCoords"* %11, i64 0, i32 1
  store %class.SkMatrix* null, %class.SkMatrix** %38, align 8
  %39 = getelementptr inbounds %"class.(anonymous namespace)::TriangulatingPathOp", %"class.(anonymous namespace)::TriangulatingPathOp"* %0, i64 0, i32 4
  %40 = call %class.GrGeometryProcessor* @_ZN23GrDefaultGeoProcFactory18MakeForDeviceSpaceEP12SkArenaAllocRKNS_5ColorERKNS_8CoverageERKNS_11LocalCoordsERK8SkMatrix(%class.SkArenaAlloc* %2, %"struct.GrDefaultGeoProcFactory::Color"* nonnull dereferenceable(20) %9, %"struct.GrDefaultGeoProcFactory::Coverage"* nonnull dereferenceable(8) %10, %"struct.GrDefaultGeoProcFactory::LocalCoords"* nonnull dereferenceable(16) %11, %class.SkMatrix* dereferenceable(40) %39) #15
  br label %50

41:                                               ; preds = %8
  %42 = bitcast %"struct.GrDefaultGeoProcFactory::Coverage"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %42) #15
  %43 = getelementptr inbounds %"struct.GrDefaultGeoProcFactory::Coverage", %"struct.GrDefaultGeoProcFactory::Coverage"* %12, i64 0, i32 0
  store i32 0, i32* %43, align 4
  %44 = getelementptr inbounds %"struct.GrDefaultGeoProcFactory::Coverage", %"struct.GrDefaultGeoProcFactory::Coverage"* %12, i64 0, i32 1
  store i8 -1, i8* %44, align 4
  %45 = bitcast %"struct.GrDefaultGeoProcFactory::LocalCoords"* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %45) #15
  %46 = getelementptr inbounds %"struct.GrDefaultGeoProcFactory::LocalCoords", %"struct.GrDefaultGeoProcFactory::LocalCoords"* %13, i64 0, i32 0
  store i32 %25, i32* %46, align 8
  %47 = getelementptr inbounds %"struct.GrDefaultGeoProcFactory::LocalCoords", %"struct.GrDefaultGeoProcFactory::LocalCoords"* %13, i64 0, i32 1
  store %class.SkMatrix* null, %class.SkMatrix** %47, align 8
  %48 = getelementptr inbounds %"class.(anonymous namespace)::TriangulatingPathOp", %"class.(anonymous namespace)::TriangulatingPathOp"* %0, i64 0, i32 4
  %49 = call %class.GrGeometryProcessor* @_ZN23GrDefaultGeoProcFactory4MakeEP12SkArenaAllocRKNS_5ColorERKNS_8CoverageERKNS_11LocalCoordsERK8SkMatrix(%class.SkArenaAlloc* %2, %"struct.GrDefaultGeoProcFactory::Color"* nonnull dereferenceable(20) %9, %"struct.GrDefaultGeoProcFactory::Coverage"* nonnull dereferenceable(8) %12, %"struct.GrDefaultGeoProcFactory::LocalCoords"* nonnull dereferenceable(16) %13, %class.SkMatrix* dereferenceable(40) %48) #15
  br label %50

50:                                               ; preds = %41, %29
  %51 = phi i8* [ %45, %41 ], [ %36, %29 ]
  %52 = phi i8* [ %42, %41 ], [ %33, %29 ]
  %53 = phi %class.GrGeometryProcessor* [ %49, %41 ], [ %40, %29 ]
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %51) #15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %52) #15
  call void @llvm.lifetime.end.p0i8(i64 20, i8* nonnull %14) #15
  %54 = icmp eq %class.GrGeometryProcessor* %53, null
  br i1 %54, label %58, label %55

55:                                               ; preds = %50
  %56 = call %class.GrProgramInfo* @_ZN35GrSimpleMeshDrawOpHelperWithStencil28createProgramInfoWithStencilEPK6GrCapsP12SkArenaAllocRK18GrSurfaceProxyViewO13GrAppliedClipRKN15GrXferProcessor12DstProxyViewEP19GrGeometryProcessor15GrPrimitiveType18GrXferBarrierFlags8GrLoadOp(%class.GrSimpleMeshDrawOpHelperWithStencil* %20, %class.GrCaps* %1, %class.SkArenaAlloc* %2, %class.GrSurfaceProxyView* dereferenceable(16) %3, %class.GrAppliedClip* dereferenceable(72) %4, %"class.GrXferProcessor::DstProxyView"* dereferenceable(32) %5, %class.GrGeometryProcessor* nonnull %53, i8 zeroext 0, i32 %6, i32 %7) #15
  %57 = getelementptr inbounds %"class.(anonymous namespace)::TriangulatingPathOp", %"class.(anonymous namespace)::TriangulatingPathOp"* %0, i64 0, i32 8
  store %class.GrProgramInfo* %56, %class.GrProgramInfo** %57, align 8
  br label %58

58:                                               ; preds = %50, %55
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN12_GLOBAL__N_119TriangulatingPathOp14onPrepareDrawsEPN12GrMeshDrawOp6TargetE(%"class.(anonymous namespace)::TriangulatingPathOp"*, %"class.GrMeshDrawOp::Target"*) unnamed_addr #1 align 2 {
  %3 = alloca %"struct.(anonymous namespace)::TessInfo", align 8
  %4 = alloca %class.GrUniqueKey, align 8
  %5 = alloca { <2 x float>, <2 x float> }, align 8
  %6 = alloca %"class.std::__1::tuple.271", align 8
  %7 = alloca %class.sk_sp.1, align 8
  %8 = alloca %"class.(anonymous namespace)::StaticVertexAllocator", align 8
  %9 = alloca i8, align 1
  %10 = alloca %class.sk_sp.2, align 8
  %11 = alloca %"class.std::__1::tuple.271", align 8
  %12 = alloca %class.sk_sp, align 8
  %13 = alloca %class.sk_sp.275, align 8
  %14 = alloca %class.SkArenaAlloc, align 8
  %15 = alloca %class.GrAATriangulator, align 8
  %16 = alloca i8, align 1
  %17 = alloca %class.SkPath, align 8
  %18 = alloca { <2 x float>, <2 x float> }, align 8
  %19 = alloca %class.sk_sp.246, align 8
  %20 = alloca i32, align 4
  %21 = alloca %class.GrEagerDynamicVertexAllocator, align 8
  %22 = getelementptr inbounds %"class.(anonymous namespace)::TriangulatingPathOp", %"class.(anonymous namespace)::TriangulatingPathOp"* %0, i64 0, i32 6
  %23 = load i8, i8* %22, align 8, !range !2
  %24 = icmp eq i8 %23, 0
  br i1 %24, label %128, label %25

25:                                               ; preds = %2
  %26 = bitcast { <2 x float>, <2 x float> }* %18 to %struct.SkRect*
  %27 = bitcast %class.SkPath* %17 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %27) #15
  %28 = getelementptr inbounds %class.SkPath, %class.SkPath* %17, i64 0, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %27, i8 -86, i64 16, i1 false) #15
  call void @_ZN6SkPathC1Ev(%class.SkPath* nonnull %17) #15
  %29 = getelementptr inbounds %"class.(anonymous namespace)::TriangulatingPathOp", %"class.(anonymous namespace)::TriangulatingPathOp"* %0, i64 0, i32 3, i32 0
  %30 = getelementptr inbounds %"class.(anonymous namespace)::TriangulatingPathOp", %"class.(anonymous namespace)::TriangulatingPathOp"* %0, i64 0, i32 3, i32 1, i32 0
  %31 = call i32 @_ZNK11SkStrokeRec8getStyleEv(%class.SkStrokeRec* %30) #15
  %32 = icmp eq i32 %31, 1
  br i1 %32, label %33, label %37

33:                                               ; preds = %25
  %34 = getelementptr inbounds %"class.(anonymous namespace)::TriangulatingPathOp", %"class.(anonymous namespace)::TriangulatingPathOp"* %0, i64 0, i32 3, i32 1, i32 1, i32 0
  %35 = load %class.SkPathEffect*, %class.SkPathEffect** %34, align 8, !noalias !13
  %36 = icmp eq %class.SkPathEffect* %35, null
  br label %37

37:                                               ; preds = %33, %25
  %38 = phi i1 [ false, %25 ], [ %36, %33 ]
  call void @_ZNK7GrShape6asPathEP6SkPathb(%class.GrShape* %29, %class.SkPath* nonnull %17, i1 zeroext %38) #15
  %39 = load %class.SkPathRef*, %class.SkPathRef** %28, align 8
  %40 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %39, i64 0, i32 4, i32 2
  %41 = load i32, i32* %40, align 4
  %42 = icmp eq i32 %41, 0
  br i1 %42, label %127, label %43

43:                                               ; preds = %37
  %44 = bitcast { <2 x float>, <2 x float> }* %18 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %44) #15
  %45 = getelementptr inbounds %"class.(anonymous namespace)::TriangulatingPathOp", %"class.(anonymous namespace)::TriangulatingPathOp"* %0, i64 0, i32 5, i32 0
  %46 = load i32, i32* %45, align 4
  %47 = sitofp i32 %46 to float
  %48 = insertelement <2 x float> undef, float %47, i32 0
  %49 = getelementptr inbounds %"class.(anonymous namespace)::TriangulatingPathOp", %"class.(anonymous namespace)::TriangulatingPathOp"* %0, i64 0, i32 5, i32 1
  %50 = load i32, i32* %49, align 4
  %51 = sitofp i32 %50 to float
  %52 = insertelement <2 x float> %48, float %51, i32 1
  %53 = getelementptr inbounds %"class.(anonymous namespace)::TriangulatingPathOp", %"class.(anonymous namespace)::TriangulatingPathOp"* %0, i64 0, i32 5, i32 2
  %54 = load i32, i32* %53, align 4
  %55 = sitofp i32 %54 to float
  %56 = insertelement <2 x float> undef, float %55, i32 0
  %57 = getelementptr inbounds %"class.(anonymous namespace)::TriangulatingPathOp", %"class.(anonymous namespace)::TriangulatingPathOp"* %0, i64 0, i32 5, i32 3
  %58 = load i32, i32* %57, align 4
  %59 = sitofp i32 %58 to float
  %60 = insertelement <2 x float> %56, float %59, i32 1
  %61 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %18, i64 0, i32 0
  store <2 x float> %52, <2 x float>* %61, align 8
  %62 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %18, i64 0, i32 1
  store <2 x float> %60, <2 x float>* %62, align 8
  %63 = getelementptr inbounds %"class.(anonymous namespace)::TriangulatingPathOp", %"class.(anonymous namespace)::TriangulatingPathOp"* %0, i64 0, i32 4
  call void @_ZNK6SkPath9transformERK8SkMatrixPS_22SkApplyPerspectiveClip(%class.SkPath* nonnull %17, %class.SkMatrix* dereferenceable(40) %63, %class.SkPath* nonnull %17, i32 1) #15
  %64 = bitcast %class.sk_sp.246* %19 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %64) #15
  %65 = getelementptr inbounds %class.sk_sp.246, %class.sk_sp.246* %19, i64 0, i32 0
  store %class.GrBuffer* null, %class.GrBuffer** %65, align 8
  %66 = bitcast i32* %20 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %66) #15
  store i32 -1431655766, i32* %20, align 4
  %67 = bitcast %class.GrEagerDynamicVertexAllocator* %21 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %67) #15
  %68 = getelementptr inbounds %class.GrEagerDynamicVertexAllocator, %class.GrEagerDynamicVertexAllocator* %21, i64 0, i32 4
  %69 = bitcast i64* %68 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %69, i8 -86, i64 16, i1 false) #15
  %70 = getelementptr inbounds %class.GrEagerDynamicVertexAllocator, %class.GrEagerDynamicVertexAllocator* %21, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTV29GrEagerDynamicVertexAllocator, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %70, align 8
  %71 = getelementptr inbounds %class.GrEagerDynamicVertexAllocator, %class.GrEagerDynamicVertexAllocator* %21, i64 0, i32 1
  store %"class.GrMeshDrawOp::Target"* %1, %"class.GrMeshDrawOp::Target"** %71, align 8
  %72 = getelementptr inbounds %class.GrEagerDynamicVertexAllocator, %class.GrEagerDynamicVertexAllocator* %21, i64 0, i32 2
  store %class.sk_sp.246* %19, %class.sk_sp.246** %72, align 8
  %73 = getelementptr inbounds %class.GrEagerDynamicVertexAllocator, %class.GrEagerDynamicVertexAllocator* %21, i64 0, i32 3
  store i32* %20, i32** %73, align 8
  %74 = getelementptr inbounds %class.GrEagerDynamicVertexAllocator, %class.GrEagerDynamicVertexAllocator* %21, i64 0, i32 5
  store i32 0, i32* %74, align 8
  %75 = getelementptr inbounds %class.GrEagerDynamicVertexAllocator, %class.GrEagerDynamicVertexAllocator* %21, i64 0, i32 0
  %76 = bitcast %class.SkArenaAlloc* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %76) #15
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %76, i8 -86, i64 32, i1 false) #15
  call void @_ZN12SkArenaAllocC2EPcmm(%class.SkArenaAlloc* nonnull %14, i8* null, i64 0, i64 16384) #15
  %77 = bitcast %class.GrAATriangulator* %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 80, i8* nonnull %77) #15
  %78 = getelementptr inbounds %class.GrAATriangulator, %class.GrAATriangulator* %15, i64 0, i32 0, i32 1
  %79 = bitcast %class.SkPath* %78 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %79, i8 -86, i64 72, i1 false) #15
  %80 = getelementptr inbounds %class.GrAATriangulator, %class.GrAATriangulator* %15, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTV14GrTriangulator, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %80, align 8
  call void @_ZN6SkPathC1ERKS_(%class.SkPath* %78, %class.SkPath* nonnull dereferenceable(16) %17) #15
  %81 = getelementptr inbounds %class.GrAATriangulator, %class.GrAATriangulator* %15, i64 0, i32 0, i32 2
  store %class.SkArenaAlloc* %14, %class.SkArenaAlloc** %81, align 8
  %82 = getelementptr inbounds %class.GrAATriangulator, %class.GrAATriangulator* %15, i64 0, i32 0, i32 3
  %83 = getelementptr inbounds %class.GrAATriangulator, %class.GrAATriangulator* %15, i64 0, i32 0, i32 8, i32 0
  store %"struct.GrTriangulator::BreadcrumbTriangleList::Node"* null, %"struct.GrTriangulator::BreadcrumbTriangleList::Node"** %83, align 8
  %84 = getelementptr inbounds %class.GrAATriangulator, %class.GrAATriangulator* %15, i64 0, i32 0, i32 8, i32 1
  %85 = bitcast i8* %82 to i32*
  store i32 257, i32* %85, align 8
  store %"struct.GrTriangulator::BreadcrumbTriangleList::Node"** %83, %"struct.GrTriangulator::BreadcrumbTriangleList::Node"*** %84, align 8
  %86 = getelementptr inbounds %class.GrAATriangulator, %class.GrAATriangulator* %15, i64 0, i32 0, i32 8, i32 2
  store i32 0, i32* %86, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTV16GrAATriangulator, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %80, align 8
  %87 = getelementptr inbounds %class.GrAATriangulator, %class.GrAATriangulator* %15, i64 0, i32 1
  %88 = bitcast %"struct.GrTriangulator::VertexList"* %87 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %88, i8 0, i64 16, i1 false) #15
  %89 = getelementptr inbounds %class.GrAATriangulator, %class.GrAATriangulator* %15, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %16) #15
  store i8 -86, i8* %16, align 1
  %90 = call %"struct.GrTriangulator::Poly"* @_ZNK14GrTriangulator11pathToPolysEfRK6SkRectPb(%class.GrTriangulator* nonnull %89, float 2.500000e-01, %struct.SkRect* nonnull dereferenceable(16) %26, i8* nonnull %16) #15
  %91 = call i32 @_ZNK16GrAATriangulator18polysToAATrianglesEPN14GrTriangulator4PolyEP22GrEagerVertexAllocator(%class.GrAATriangulator* nonnull %15, %"struct.GrTriangulator::Poly"* %90, %class.GrEagerVertexAllocator* nonnull %75) #15
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %16) #15
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTV14GrTriangulator, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %80, align 8
  call void @_ZN6SkPathD1Ev(%class.SkPath* %78) #15
  call void @llvm.lifetime.end.p0i8(i64 80, i8* nonnull %77) #15
  call void @_ZN12SkArenaAllocD1Ev(%class.SkArenaAlloc* nonnull %14) #15
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %76) #15
  %92 = icmp eq i32 %91, 0
  br i1 %92, label %118, label %93

93:                                               ; preds = %43
  %94 = bitcast %class.sk_sp.246* %19 to i64*
  %95 = load i64, i64* %94, align 8
  store %class.GrBuffer* null, %class.GrBuffer** %65, align 8
  %96 = load i32, i32* %20, align 4
  %97 = bitcast %"class.GrMeshDrawOp::Target"* %1 to %class.SkArenaAlloc* (%"class.GrMeshDrawOp::Target"*)***
  %98 = load %class.SkArenaAlloc* (%"class.GrMeshDrawOp::Target"*)**, %class.SkArenaAlloc* (%"class.GrMeshDrawOp::Target"*)*** %97, align 8
  %99 = getelementptr inbounds %class.SkArenaAlloc* (%"class.GrMeshDrawOp::Target"*)*, %class.SkArenaAlloc* (%"class.GrMeshDrawOp::Target"*)** %98, i64 29
  %100 = load %class.SkArenaAlloc* (%"class.GrMeshDrawOp::Target"*)*, %class.SkArenaAlloc* (%"class.GrMeshDrawOp::Target"*)** %99, align 8
  %101 = call %class.SkArenaAlloc* %100(%"class.GrMeshDrawOp::Target"* %1) #15
  %102 = call i8* @_ZN12SkArenaAlloc21allocObjectWithFooterEjj(%class.SkArenaAlloc* %101, i32 57, i32 8) #15
  %103 = getelementptr inbounds %class.SkArenaAlloc, %class.SkArenaAlloc* %101, i64 0, i32 1
  %104 = bitcast i8** %103 to i64*
  %105 = load i64, i64* %104, align 8
  %106 = ptrtoint i8* %102 to i64
  %107 = sub i64 %106, %105
  %108 = trunc i64 %107 to i32
  %109 = getelementptr inbounds i8, i8* %102, i64 48
  store i8* %109, i8** %103, align 8
  call void @_ZN12SkArenaAlloc13installFooterEPFPcS0_Ej(%class.SkArenaAlloc* %101, i8* (i8*)* nonnull @_ZZN12SkArenaAlloc4makeIZNS_4makeI12GrSimpleMeshJEEEPT_DpOT0_EUlPvE_EEDTclfp_LDnEEEOS3_ENUlPcE_8__invokeESC_, i32 %108) #15
  call void @llvm.memset.p0i8.i64(i8* align 8 %102, i8 0, i64 32, i1 false) #15
  %110 = getelementptr inbounds i8, i8* %102, i64 32
  %111 = bitcast i8* %110 to i64*
  store i64 %95, i64* %111, align 8
  %112 = getelementptr inbounds i8, i8* %102, i64 40
  %113 = bitcast i8* %112 to i32*
  store i32 %91, i32* %113, align 8
  %114 = getelementptr inbounds i8, i8* %102, i64 44
  %115 = bitcast i8* %114 to i32*
  store i32 %96, i32* %115, align 4
  %116 = getelementptr inbounds %"class.(anonymous namespace)::TriangulatingPathOp", %"class.(anonymous namespace)::TriangulatingPathOp"* %0, i64 0, i32 7
  %117 = bitcast %struct.GrSimpleMesh** %116 to i8**
  store i8* %102, i8** %117, align 8
  br label %118

118:                                              ; preds = %93, %43
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %67) #15
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %66) #15
  %119 = load %class.GrBuffer*, %class.GrBuffer** %65, align 8
  %120 = icmp eq %class.GrBuffer* %119, null
  br i1 %120, label %126, label %121

121:                                              ; preds = %118
  %122 = bitcast %class.GrBuffer* %119 to void (%class.GrBuffer*)***
  %123 = load void (%class.GrBuffer*)**, void (%class.GrBuffer*)*** %122, align 8
  %124 = getelementptr inbounds void (%class.GrBuffer*)*, void (%class.GrBuffer*)** %123, i64 3
  %125 = load void (%class.GrBuffer*)*, void (%class.GrBuffer*)** %124, align 8
  call void %125(%class.GrBuffer* nonnull %119) #15
  br label %126

126:                                              ; preds = %121, %118
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %64) #15
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %44) #15
  br label %127

127:                                              ; preds = %37, %126
  call void @_ZN6SkPathD1Ev(%class.SkPath* nonnull %17) #15
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %27) #15
  br label %528

128:                                              ; preds = %2
  %129 = bitcast %class.sk_sp.2* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %129)
  %130 = bitcast %class.sk_sp* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %130)
  %131 = bitcast %class.sk_sp.275* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %131)
  %132 = bitcast { <2 x float>, <2 x float> }* %5 to %struct.SkRect*
  %133 = bitcast %"class.GrMeshDrawOp::Target"* %1 to %class.GrResourceProvider* (%"class.GrMeshDrawOp::Target"*)***
  %134 = load %class.GrResourceProvider* (%"class.GrMeshDrawOp::Target"*)**, %class.GrResourceProvider* (%"class.GrMeshDrawOp::Target"*)*** %133, align 8
  %135 = getelementptr inbounds %class.GrResourceProvider* (%"class.GrMeshDrawOp::Target"*)*, %class.GrResourceProvider* (%"class.GrMeshDrawOp::Target"*)** %134, i64 22
  %136 = load %class.GrResourceProvider* (%"class.GrMeshDrawOp::Target"*)*, %class.GrResourceProvider* (%"class.GrMeshDrawOp::Target"*)** %135, align 8
  %137 = tail call %class.GrResourceProvider* %136(%"class.GrMeshDrawOp::Target"* %1) #15
  %138 = bitcast %"class.GrMeshDrawOp::Target"* %1 to %class.GrThreadSafeCache* (%"class.GrMeshDrawOp::Target"*)***
  %139 = load %class.GrThreadSafeCache* (%"class.GrMeshDrawOp::Target"*)**, %class.GrThreadSafeCache* (%"class.GrMeshDrawOp::Target"*)*** %138, align 8
  %140 = getelementptr inbounds %class.GrThreadSafeCache* (%"class.GrMeshDrawOp::Target"*)*, %class.GrThreadSafeCache* (%"class.GrMeshDrawOp::Target"*)** %139, i64 21
  %141 = load %class.GrThreadSafeCache* (%"class.GrMeshDrawOp::Target"*)*, %class.GrThreadSafeCache* (%"class.GrMeshDrawOp::Target"*)** %140, align 8
  %142 = tail call %class.GrThreadSafeCache* %141(%"class.GrMeshDrawOp::Target"* %1) #15
  %143 = bitcast %class.GrUniqueKey* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %143) #15
  %144 = getelementptr inbounds %class.GrUniqueKey, %class.GrUniqueKey* %4, i64 0, i32 0, i32 0, i32 1, i32 0, i64 2
  %145 = bitcast i32* %144 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %145, i8 -86, i64 24, i1 false) #15
  %146 = getelementptr inbounds %class.GrUniqueKey, %class.GrUniqueKey* %4, i64 0, i32 0, i32 0, i32 0
  %147 = getelementptr inbounds %class.GrUniqueKey, %class.GrUniqueKey* %4, i64 0, i32 0, i32 0, i32 1, i32 0, i64 0
  store i32* %147, i32** %146, align 8
  store i32 0, i32* %147, align 8
  %148 = getelementptr inbounds %class.GrUniqueKey, %class.GrUniqueKey* %4, i64 0, i32 0, i32 0, i32 1, i32 0, i64 1
  store i32 0, i32* %148, align 4
  %149 = getelementptr inbounds %class.GrUniqueKey, %class.GrUniqueKey* %4, i64 0, i32 1, i32 0
  %150 = bitcast %class.SkData** %149 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %150, i8 0, i64 16, i1 false) #15
  %151 = getelementptr inbounds %"class.(anonymous namespace)::TriangulatingPathOp", %"class.(anonymous namespace)::TriangulatingPathOp"* %0, i64 0, i32 3
  %152 = getelementptr inbounds %"class.(anonymous namespace)::TriangulatingPathOp", %"class.(anonymous namespace)::TriangulatingPathOp"* %0, i64 0, i32 5
  call fastcc void @_ZN12_GLOBAL__N_119TriangulatingPathOp9CreateKeyEP11GrUniqueKeyRK13GrStyledShapeRK7SkIRect(%class.GrUniqueKey* nonnull %4, %class.GrStyledShape* dereferenceable(208) %151, %struct.SkIRect* dereferenceable(16) %152) #15
  %153 = getelementptr inbounds %"class.(anonymous namespace)::TriangulatingPathOp", %"class.(anonymous namespace)::TriangulatingPathOp"* %0, i64 0, i32 4
  %154 = bitcast { <2 x float>, <2 x float> }* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %154) #15
  %155 = getelementptr inbounds %class.GrStyledShape, %class.GrStyledShape* %151, i64 0, i32 0
  %156 = call { <2 x float>, <2 x float> } @_ZNK7GrShape6boundsEv(%class.GrShape* %155) #15
  %157 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %5, i64 0, i32 0
  %158 = extractvalue { <2 x float>, <2 x float> } %156, 0
  store <2 x float> %158, <2 x float>* %157, align 8
  %159 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %5, i64 0, i32 1
  %160 = extractvalue { <2 x float>, <2 x float> } %156, 1
  store <2 x float> %160, <2 x float>* %159, align 8
  %161 = call float @_ZN11GrPathUtils19scaleToleranceToSrcEfRK8SkMatrixRK6SkRect(float 2.500000e-01, %class.SkMatrix* dereferenceable(40) %153, %struct.SkRect* nonnull dereferenceable(16) %132) #15
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %154) #15
  %162 = getelementptr inbounds %"class.(anonymous namespace)::TriangulatingPathOp", %"class.(anonymous namespace)::TriangulatingPathOp"* %0, i64 0, i32 9
  %163 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %162, i64 0, i32 0
  %164 = load %"class.GrThreadSafeCache::VertexData"*, %"class.GrThreadSafeCache::VertexData"** %163, align 8
  %165 = icmp eq %"class.GrThreadSafeCache::VertexData"* %164, null
  br i1 %165, label %166, label %217

166:                                              ; preds = %128
  %167 = bitcast %"class.std::__1::tuple.271"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %167) #15
  %168 = getelementptr inbounds %"class.std::__1::tuple.271", %"class.std::__1::tuple.271"* %6, i64 0, i32 0, i32 0, i32 0, i32 0
  %169 = getelementptr inbounds %"class.std::__1::tuple.271", %"class.std::__1::tuple.271"* %6, i64 0, i32 0, i32 1, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %167, i8 -86, i64 16, i1 false) #15
  call void @_ZN17GrThreadSafeCache17findVertsWithDataERK11GrUniqueKey(%"class.std::__1::tuple.271"* nonnull sret %6, %class.GrThreadSafeCache* %142, %class.GrUniqueKey* nonnull dereferenceable(56) %4) #15
  %170 = load %"class.GrThreadSafeCache::VertexData"*, %"class.GrThreadSafeCache::VertexData"** %168, align 8
  %171 = icmp eq %"class.GrThreadSafeCache::VertexData"* %170, null
  %172 = ptrtoint %"class.GrThreadSafeCache::VertexData"* %170 to i64
  br i1 %171, label %196, label %173

173:                                              ; preds = %166
  %174 = load %class.SkData*, %class.SkData** %169, align 8
  %175 = getelementptr inbounds %class.SkData, %class.SkData* %174, i64 0, i32 3
  %176 = load i8*, i8** %175, align 8
  %177 = getelementptr inbounds i8, i8* %176, i64 4
  %178 = load i8, i8* %177, align 4, !range !2
  %179 = icmp eq i8 %178, 0
  br i1 %179, label %180, label %186

180:                                              ; preds = %173
  %181 = getelementptr inbounds i8, i8* %176, i64 8
  %182 = bitcast i8* %181 to float*
  %183 = load float, float* %182, align 4
  %184 = fmul float %161, 3.000000e+00
  %185 = fcmp olt float %183, %184
  br i1 %185, label %186, label %196

186:                                              ; preds = %180, %173
  store %"class.GrThreadSafeCache::VertexData"* null, %"class.GrThreadSafeCache::VertexData"** %168, align 8
  %187 = load %"class.GrThreadSafeCache::VertexData"*, %"class.GrThreadSafeCache::VertexData"** %163, align 8
  %188 = bitcast %class.sk_sp* %162 to i64*
  store i64 %172, i64* %188, align 8
  %189 = icmp eq %"class.GrThreadSafeCache::VertexData"* %187, null
  br i1 %189, label %196, label %190

190:                                              ; preds = %186
  %191 = getelementptr inbounds %"class.GrThreadSafeCache::VertexData", %"class.GrThreadSafeCache::VertexData"* %187, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %192 = atomicrmw add i32* %191, i32 -1 acq_rel
  %193 = icmp eq i32 %192, 1
  br i1 %193, label %194, label %196

194:                                              ; preds = %190
  call void @_ZN17GrThreadSafeCache10VertexDataD1Ev(%"class.GrThreadSafeCache::VertexData"* nonnull %187) #15
  %195 = bitcast %"class.GrThreadSafeCache::VertexData"* %187 to i8*
  call void @_ZdlPv(i8* %195) #16
  br label %196

196:                                              ; preds = %194, %190, %186, %180, %166
  %197 = load %class.SkData*, %class.SkData** %169, align 8
  %198 = icmp eq %class.SkData* %197, null
  br i1 %198, label %205, label %199

199:                                              ; preds = %196
  %200 = getelementptr inbounds %class.SkData, %class.SkData* %197, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %201 = atomicrmw add i32* %200, i32 -1 acq_rel
  %202 = icmp eq i32 %201, 1
  br i1 %202, label %203, label %205

203:                                              ; preds = %199
  call void @_ZN6SkDataD1Ev(%class.SkData* nonnull %197) #15
  %204 = bitcast %class.SkData* %197 to i8*
  call void @_ZN6SkDatadlEPv(i8* nonnull %204) #15
  br label %205

205:                                              ; preds = %203, %199, %196
  %206 = load %"class.GrThreadSafeCache::VertexData"*, %"class.GrThreadSafeCache::VertexData"** %168, align 8
  %207 = icmp eq %"class.GrThreadSafeCache::VertexData"* %206, null
  br i1 %207, label %214, label %208

208:                                              ; preds = %205
  %209 = getelementptr inbounds %"class.GrThreadSafeCache::VertexData", %"class.GrThreadSafeCache::VertexData"* %206, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %210 = atomicrmw add i32* %209, i32 -1 acq_rel
  %211 = icmp eq i32 %210, 1
  br i1 %211, label %212, label %214

212:                                              ; preds = %208
  call void @_ZN17GrThreadSafeCache10VertexDataD1Ev(%"class.GrThreadSafeCache::VertexData"* nonnull %206) #15
  %213 = bitcast %"class.GrThreadSafeCache::VertexData"* %206 to i8*
  call void @_ZdlPv(i8* %213) #16
  br label %214

214:                                              ; preds = %212, %208, %205
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %167) #15
  %215 = load %"class.GrThreadSafeCache::VertexData"*, %"class.GrThreadSafeCache::VertexData"** %163, align 8
  %216 = icmp eq %"class.GrThreadSafeCache::VertexData"* %215, null
  br i1 %216, label %308, label %217

217:                                              ; preds = %214, %128
  %218 = phi %"class.GrThreadSafeCache::VertexData"* [ %215, %214 ], [ %164, %128 ]
  %219 = getelementptr inbounds %"class.GrThreadSafeCache::VertexData", %"class.GrThreadSafeCache::VertexData"* %218, i64 0, i32 4, i32 0
  %220 = load %class.GrGpuBuffer*, %class.GrGpuBuffer** %219, align 8
  %221 = icmp eq %class.GrGpuBuffer* %220, null
  br i1 %221, label %222, label %275

222:                                              ; preds = %217
  %223 = bitcast %class.sk_sp.1* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %223) #15
  %224 = getelementptr inbounds %class.sk_sp.1, %class.sk_sp.1* %7, i64 0, i32 0
  store %class.GrGpuBuffer* inttoptr (i64 -6148914691236517206 to %class.GrGpuBuffer*), %class.GrGpuBuffer** %224, align 8
  %225 = getelementptr inbounds %"class.GrThreadSafeCache::VertexData", %"class.GrThreadSafeCache::VertexData"* %218, i64 0, i32 2
  %226 = load i32, i32* %225, align 8
  %227 = sext i32 %226 to i64
  %228 = getelementptr inbounds %"class.GrThreadSafeCache::VertexData", %"class.GrThreadSafeCache::VertexData"* %218, i64 0, i32 3
  %229 = load i64, i64* %228, align 8
  %230 = mul i64 %229, %227
  %231 = getelementptr inbounds %"class.GrThreadSafeCache::VertexData", %"class.GrThreadSafeCache::VertexData"* %218, i64 0, i32 1
  %232 = load i8*, i8** %231, align 8
  call void @_ZN18GrResourceProvider12createBufferEm15GrGpuBufferType15GrAccessPatternPKv(%class.sk_sp.1* nonnull sret %7, %class.GrResourceProvider* %137, i64 %230, i32 0, i32 1, i8* %232) #15
  %233 = load %class.GrGpuBuffer*, %class.GrGpuBuffer** %224, align 8
  %234 = icmp eq %class.GrGpuBuffer* %233, null
  br i1 %234, label %269, label %235

235:                                              ; preds = %222
  %236 = load %"class.GrThreadSafeCache::VertexData"*, %"class.GrThreadSafeCache::VertexData"** %163, align 8
  store %class.GrGpuBuffer* null, %class.GrGpuBuffer** %224, align 8
  %237 = getelementptr inbounds %class.GrGpuBuffer, %class.GrGpuBuffer* %233, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %238 = atomicrmw add i32* %237, i32 1 monotonic
  %239 = getelementptr inbounds %"class.GrThreadSafeCache::VertexData", %"class.GrThreadSafeCache::VertexData"* %236, i64 0, i32 4, i32 0
  %240 = load %class.GrGpuBuffer*, %class.GrGpuBuffer** %239, align 8
  store %class.GrGpuBuffer* %233, %class.GrGpuBuffer** %239, align 8
  %241 = icmp eq %class.GrGpuBuffer* %240, null
  br i1 %241, label %250, label %242

242:                                              ; preds = %235
  %243 = getelementptr inbounds %class.GrGpuBuffer, %class.GrGpuBuffer* %240, i64 0, i32 0, i32 1
  %244 = getelementptr inbounds %class.GrIORef, %class.GrIORef* %243, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %245 = atomicrmw add i32* %244, i32 -1 acq_rel
  %246 = icmp eq i32 %245, 1
  br i1 %246, label %247, label %250

247:                                              ; preds = %242
  %248 = getelementptr inbounds %class.GrIORef, %class.GrIORef* %243, i64 -1
  %249 = bitcast %class.GrIORef* %248 to %class.GrGpuResource*
  call void @_ZNK13GrGpuResource19notifyARefCntIsZeroEN7GrIORefIS_E14LastRemovedRefE(%class.GrGpuResource* %249, i32 0) #15
  br label %250

250:                                              ; preds = %235, %242, %247
  %251 = getelementptr inbounds %class.GrGpuBuffer, %class.GrGpuBuffer* %233, i64 0, i32 0, i32 1
  %252 = getelementptr inbounds %class.GrIORef, %class.GrIORef* %251, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %253 = atomicrmw add i32* %252, i32 -1 acq_rel
  %254 = icmp eq i32 %253, 1
  br i1 %254, label %255, label %258

255:                                              ; preds = %250
  %256 = getelementptr inbounds %class.GrIORef, %class.GrIORef* %251, i64 -1
  %257 = bitcast %class.GrIORef* %256 to %class.GrGpuResource*
  call void @_ZNK13GrGpuResource19notifyARefCntIsZeroEN7GrIORefIS_E14LastRemovedRefE(%class.GrGpuResource* %257, i32 0) #15
  br label %258

258:                                              ; preds = %255, %250
  %259 = load %class.GrGpuBuffer*, %class.GrGpuBuffer** %224, align 8
  %260 = icmp eq %class.GrGpuBuffer* %259, null
  br i1 %260, label %270, label %261

261:                                              ; preds = %258
  %262 = getelementptr inbounds %class.GrGpuBuffer, %class.GrGpuBuffer* %259, i64 0, i32 0, i32 1
  %263 = getelementptr inbounds %class.GrIORef, %class.GrIORef* %262, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %264 = atomicrmw add i32* %263, i32 -1 acq_rel
  %265 = icmp eq i32 %264, 1
  br i1 %265, label %266, label %270

266:                                              ; preds = %261
  %267 = getelementptr inbounds %class.GrIORef, %class.GrIORef* %262, i64 -1
  %268 = bitcast %class.GrIORef* %267 to %class.GrGpuResource*
  call void @_ZNK13GrGpuResource19notifyARefCntIsZeroEN7GrIORefIS_E14LastRemovedRefE(%class.GrGpuResource* %268, i32 0) #15
  br label %270

269:                                              ; preds = %222
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %223) #15
  br label %513

270:                                              ; preds = %266, %261, %258
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %223) #15
  %271 = load %"class.GrThreadSafeCache::VertexData"*, %"class.GrThreadSafeCache::VertexData"** %163, align 8
  %272 = getelementptr inbounds %"class.GrThreadSafeCache::VertexData", %"class.GrThreadSafeCache::VertexData"* %271, i64 0, i32 4, i32 0
  %273 = load %class.GrGpuBuffer*, %class.GrGpuBuffer** %272, align 8, !noalias !16
  %274 = icmp eq %class.GrGpuBuffer* %273, null
  br i1 %274, label %282, label %275

275:                                              ; preds = %217, %270
  %276 = phi %class.GrGpuBuffer* [ %273, %270 ], [ %220, %217 ]
  %277 = getelementptr inbounds %class.GrGpuBuffer, %class.GrGpuBuffer* %276, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %278 = atomicrmw add i32* %277, i32 1 monotonic, !noalias !16
  %279 = load %"class.GrThreadSafeCache::VertexData"*, %"class.GrThreadSafeCache::VertexData"** %163, align 8
  %280 = getelementptr inbounds %class.GrGpuBuffer, %class.GrGpuBuffer* %276, i64 0, i32 1
  %281 = ptrtoint %class.GrBuffer* %280 to i64
  br label %282

282:                                              ; preds = %270, %275
  %283 = phi %"class.GrThreadSafeCache::VertexData"* [ %279, %275 ], [ %271, %270 ]
  %284 = phi i64 [ %281, %275 ], [ 0, %270 ]
  %285 = getelementptr inbounds %"class.GrThreadSafeCache::VertexData", %"class.GrThreadSafeCache::VertexData"* %283, i64 0, i32 2
  %286 = load i32, i32* %285, align 8
  %287 = bitcast %"class.GrMeshDrawOp::Target"* %1 to %class.SkArenaAlloc* (%"class.GrMeshDrawOp::Target"*)***
  %288 = load %class.SkArenaAlloc* (%"class.GrMeshDrawOp::Target"*)**, %class.SkArenaAlloc* (%"class.GrMeshDrawOp::Target"*)*** %287, align 8
  %289 = getelementptr inbounds %class.SkArenaAlloc* (%"class.GrMeshDrawOp::Target"*)*, %class.SkArenaAlloc* (%"class.GrMeshDrawOp::Target"*)** %288, i64 29
  %290 = load %class.SkArenaAlloc* (%"class.GrMeshDrawOp::Target"*)*, %class.SkArenaAlloc* (%"class.GrMeshDrawOp::Target"*)** %289, align 8
  %291 = call %class.SkArenaAlloc* %290(%"class.GrMeshDrawOp::Target"* %1) #15
  %292 = call i8* @_ZN12SkArenaAlloc21allocObjectWithFooterEjj(%class.SkArenaAlloc* %291, i32 57, i32 8) #15
  %293 = getelementptr inbounds %class.SkArenaAlloc, %class.SkArenaAlloc* %291, i64 0, i32 1
  %294 = bitcast i8** %293 to i64*
  %295 = load i64, i64* %294, align 8
  %296 = ptrtoint i8* %292 to i64
  %297 = sub i64 %296, %295
  %298 = trunc i64 %297 to i32
  %299 = getelementptr inbounds i8, i8* %292, i64 48
  store i8* %299, i8** %293, align 8
  call void @_ZN12SkArenaAlloc13installFooterEPFPcS0_Ej(%class.SkArenaAlloc* %291, i8* (i8*)* nonnull @_ZZN12SkArenaAlloc4makeIZNS_4makeI12GrSimpleMeshJEEEPT_DpOT0_EUlPvE_EEDTclfp_LDnEEEOS3_ENUlPcE_8__invokeESC_, i32 %298) #15
  call void @llvm.memset.p0i8.i64(i8* align 8 %292, i8 0, i64 32, i1 false) #15
  %300 = getelementptr inbounds i8, i8* %292, i64 32
  %301 = bitcast i8* %300 to i64*
  store i64 %284, i64* %301, align 8
  %302 = getelementptr inbounds i8, i8* %292, i64 40
  %303 = bitcast i8* %302 to i32*
  store i32 %286, i32* %303, align 8
  %304 = getelementptr inbounds i8, i8* %292, i64 44
  %305 = bitcast i8* %304 to i32*
  store i32 0, i32* %305, align 4
  %306 = getelementptr inbounds %"class.(anonymous namespace)::TriangulatingPathOp", %"class.(anonymous namespace)::TriangulatingPathOp"* %0, i64 0, i32 7
  %307 = bitcast %struct.GrSimpleMesh** %306 to i8**
  store i8* %292, i8** %307, align 8
  br label %513

308:                                              ; preds = %214
  %309 = bitcast %"class.GrMeshDrawOp::Target"* %1 to %class.GrCaps* (%"class.GrMeshDrawOp::Target"*)***
  %310 = load %class.GrCaps* (%"class.GrMeshDrawOp::Target"*)**, %class.GrCaps* (%"class.GrMeshDrawOp::Target"*)*** %309, align 8
  %311 = getelementptr inbounds %class.GrCaps* (%"class.GrMeshDrawOp::Target"*)*, %class.GrCaps* (%"class.GrMeshDrawOp::Target"*)** %310, i64 27
  %312 = load %class.GrCaps* (%"class.GrMeshDrawOp::Target"*)*, %class.GrCaps* (%"class.GrMeshDrawOp::Target"*)** %311, align 8
  %313 = call dereferenceable(232) %class.GrCaps* %312(%"class.GrMeshDrawOp::Target"* %1) #15
  %314 = getelementptr inbounds %class.GrCaps, %class.GrCaps* %313, i64 0, i32 6
  %315 = load i32, i32* %314, align 8
  %316 = icmp ne i32 %315, 0
  %317 = bitcast %"class.(anonymous namespace)::StaticVertexAllocator"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %317) #15
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %317, i8 -86, i64 40, i1 false) #15
  %318 = zext i1 %316 to i8
  %319 = getelementptr inbounds %"class.(anonymous namespace)::StaticVertexAllocator", %"class.(anonymous namespace)::StaticVertexAllocator"* %8, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN12_GLOBAL__N_121StaticVertexAllocatorE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %319, align 8
  %320 = getelementptr inbounds %"class.(anonymous namespace)::StaticVertexAllocator", %"class.(anonymous namespace)::StaticVertexAllocator"* %8, i64 0, i32 1, i32 0
  %321 = getelementptr inbounds %"class.(anonymous namespace)::StaticVertexAllocator", %"class.(anonymous namespace)::StaticVertexAllocator"* %8, i64 0, i32 3
  %322 = bitcast %"class.GrThreadSafeCache::VertexData"** %320 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %322, i8 0, i64 16, i1 false) #15
  store %class.GrResourceProvider* %137, %class.GrResourceProvider** %321, align 8
  %323 = getelementptr inbounds %"class.(anonymous namespace)::StaticVertexAllocator", %"class.(anonymous namespace)::StaticVertexAllocator"* %8, i64 0, i32 4
  store i8 %318, i8* %323, align 8
  %324 = getelementptr inbounds %"class.(anonymous namespace)::StaticVertexAllocator", %"class.(anonymous namespace)::StaticVertexAllocator"* %8, i64 0, i32 5
  %325 = bitcast i8** %324 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %325, i8 0, i64 16, i1 false) #15
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %9) #15
  store i8 -86, i8* %9, align 1
  %326 = getelementptr inbounds %"class.(anonymous namespace)::StaticVertexAllocator", %"class.(anonymous namespace)::StaticVertexAllocator"* %8, i64 0, i32 0
  %327 = call fastcc i32 @_ZN12_GLOBAL__N_119TriangulatingPathOp11TriangulateEP22GrEagerVertexAllocatorRK8SkMatrixRK13GrStyledShapeRK7SkIRectfPb(%class.GrEagerVertexAllocator* nonnull %326, %class.SkMatrix* dereferenceable(40) %153, %class.GrStyledShape* dereferenceable(208) %151, %struct.SkIRect* dereferenceable(16) %152, float %161, i8* nonnull %9) #15
  %328 = icmp eq i32 %327, 0
  br i1 %328, label %491, label %329

329:                                              ; preds = %308
  %330 = getelementptr inbounds %"class.(anonymous namespace)::StaticVertexAllocator", %"class.(anonymous namespace)::StaticVertexAllocator"* %8, i64 0, i32 1
  %331 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %330, i64 0, i32 0
  %332 = bitcast %class.sk_sp* %330 to i64*
  %333 = load i64, i64* %332, align 8, !noalias !19
  store %"class.GrThreadSafeCache::VertexData"* null, %"class.GrThreadSafeCache::VertexData"** %331, align 8, !noalias !19
  %334 = load %"class.GrThreadSafeCache::VertexData"*, %"class.GrThreadSafeCache::VertexData"** %163, align 8
  %335 = bitcast %class.sk_sp* %162 to i64*
  store i64 %333, i64* %335, align 8
  %336 = icmp eq %"class.GrThreadSafeCache::VertexData"* %334, null
  br i1 %336, label %343, label %337

337:                                              ; preds = %329
  %338 = getelementptr inbounds %"class.GrThreadSafeCache::VertexData", %"class.GrThreadSafeCache::VertexData"* %334, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %339 = atomicrmw add i32* %338, i32 -1 acq_rel
  %340 = icmp eq i32 %339, 1
  br i1 %340, label %341, label %343

341:                                              ; preds = %337
  call void @_ZN17GrThreadSafeCache10VertexDataD1Ev(%"class.GrThreadSafeCache::VertexData"* nonnull %334) #15
  %342 = bitcast %"class.GrThreadSafeCache::VertexData"* %334 to i8*
  call void @_ZdlPv(i8* %342) #16
  br label %343

343:                                              ; preds = %341, %337, %329
  %344 = load i8, i8* %9, align 1, !range !2
  %345 = bitcast %"struct.(anonymous namespace)::TessInfo"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %345) #15, !noalias !22
  %346 = bitcast %"struct.(anonymous namespace)::TessInfo"* %3 to i64*
  store i64 -6148914691236517206, i64* %346, align 8, !noalias !22
  %347 = getelementptr inbounds %"struct.(anonymous namespace)::TessInfo", %"struct.(anonymous namespace)::TessInfo"* %3, i64 0, i32 0
  store i32 %327, i32* %347, align 8, !noalias !22
  %348 = getelementptr inbounds %"struct.(anonymous namespace)::TessInfo", %"struct.(anonymous namespace)::TessInfo"* %3, i64 0, i32 1
  store i8 %344, i8* %348, align 4, !noalias !22
  %349 = getelementptr inbounds %"struct.(anonymous namespace)::TessInfo", %"struct.(anonymous namespace)::TessInfo"* %3, i64 0, i32 2
  store float %161, float* %349, align 8, !noalias !22
  call void @_ZN6SkData12MakeWithCopyEPKvm(%class.sk_sp.2* nonnull sret %10, i8* nonnull %345, i64 12) #15
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %345) #15, !noalias !22
  %350 = getelementptr inbounds %class.GrUniqueKey, %class.GrUniqueKey* %4, i64 0, i32 1
  %351 = getelementptr inbounds %class.sk_sp.2, %class.sk_sp.2* %10, i64 0, i32 0
  %352 = bitcast %class.sk_sp.2* %10 to i64*
  %353 = load i64, i64* %352, align 8
  store %class.SkData* null, %class.SkData** %351, align 8
  %354 = getelementptr inbounds %class.sk_sp.2, %class.sk_sp.2* %350, i64 0, i32 0
  %355 = load %class.SkData*, %class.SkData** %354, align 8
  %356 = bitcast %class.sk_sp.2* %350 to i64*
  store i64 %353, i64* %356, align 8
  %357 = icmp eq %class.SkData* %355, null
  br i1 %357, label %364, label %358

358:                                              ; preds = %343
  %359 = getelementptr inbounds %class.SkData, %class.SkData* %355, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %360 = atomicrmw add i32* %359, i32 -1 acq_rel
  %361 = icmp eq i32 %360, 1
  br i1 %361, label %362, label %364

362:                                              ; preds = %358
  call void @_ZN6SkDataD1Ev(%class.SkData* nonnull %355) #15
  %363 = bitcast %class.SkData* %355 to i8*
  call void @_ZN6SkDatadlEPv(i8* nonnull %363) #15
  br label %364

364:                                              ; preds = %362, %358, %343
  %365 = load %class.SkData*, %class.SkData** %351, align 8
  %366 = icmp eq %class.SkData* %365, null
  br i1 %366, label %373, label %367

367:                                              ; preds = %364
  %368 = getelementptr inbounds %class.SkData, %class.SkData* %365, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %369 = atomicrmw add i32* %368, i32 -1 acq_rel
  %370 = icmp eq i32 %369, 1
  br i1 %370, label %371, label %373

371:                                              ; preds = %367
  call void @_ZN6SkDataD1Ev(%class.SkData* nonnull %365) #15
  %372 = bitcast %class.SkData* %365 to i8*
  call void @_ZN6SkDatadlEPv(i8* nonnull %372) #15
  br label %373

373:                                              ; preds = %371, %367, %364
  %374 = bitcast %"class.std::__1::tuple.271"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %374) #15
  %375 = getelementptr inbounds %"class.std::__1::tuple.271", %"class.std::__1::tuple.271"* %11, i64 0, i32 0, i32 0, i32 0, i32 0
  %376 = getelementptr inbounds %"class.std::__1::tuple.271", %"class.std::__1::tuple.271"* %11, i64 0, i32 0, i32 1, i32 0, i32 0
  %377 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %12, i64 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %374, i8 -86, i64 16, i1 false) #15
  %378 = load %"class.GrThreadSafeCache::VertexData"*, %"class.GrThreadSafeCache::VertexData"** %163, align 8
  %379 = icmp eq %"class.GrThreadSafeCache::VertexData"* %378, null
  br i1 %379, label %383, label %380

380:                                              ; preds = %373
  %381 = getelementptr inbounds %"class.GrThreadSafeCache::VertexData", %"class.GrThreadSafeCache::VertexData"* %378, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %382 = atomicrmw add i32* %381, i32 1 monotonic
  br label %383

383:                                              ; preds = %380, %373
  store %"class.GrThreadSafeCache::VertexData"* %378, %"class.GrThreadSafeCache::VertexData"** %377, align 8
  call void @_ZN17GrThreadSafeCache16addVertsWithDataERK11GrUniqueKey5sk_spINS_10VertexDataEEPFbP6SkDataS7_E(%"class.std::__1::tuple.271"* nonnull sret %11, %class.GrThreadSafeCache* %142, %class.GrUniqueKey* nonnull dereferenceable(56) %4, %class.sk_sp* nonnull %12, i1 (%class.SkData*, %class.SkData*)* nonnull @_ZN12_GLOBAL__N_115is_newer_betterEP6SkDataS1_) #15
  %384 = load %"class.GrThreadSafeCache::VertexData"*, %"class.GrThreadSafeCache::VertexData"** %377, align 8
  %385 = icmp eq %"class.GrThreadSafeCache::VertexData"* %384, null
  br i1 %385, label %392, label %386

386:                                              ; preds = %383
  %387 = getelementptr inbounds %"class.GrThreadSafeCache::VertexData", %"class.GrThreadSafeCache::VertexData"* %384, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %388 = atomicrmw add i32* %387, i32 -1 acq_rel
  %389 = icmp eq i32 %388, 1
  br i1 %389, label %390, label %392

390:                                              ; preds = %386
  call void @_ZN17GrThreadSafeCache10VertexDataD1Ev(%"class.GrThreadSafeCache::VertexData"* nonnull %384) #15
  %391 = bitcast %"class.GrThreadSafeCache::VertexData"* %384 to i8*
  call void @_ZdlPv(i8* %391) #16
  br label %392

392:                                              ; preds = %390, %386, %383
  %393 = load %"class.GrThreadSafeCache::VertexData"*, %"class.GrThreadSafeCache::VertexData"** %375, align 8
  %394 = load %"class.GrThreadSafeCache::VertexData"*, %"class.GrThreadSafeCache::VertexData"** %163, align 8
  %395 = icmp eq %"class.GrThreadSafeCache::VertexData"* %393, %394
  br i1 %395, label %396, label %436

396:                                              ; preds = %392
  %397 = load %class.GrResourceProvider* (%"class.GrMeshDrawOp::Target"*)**, %class.GrResourceProvider* (%"class.GrMeshDrawOp::Target"*)*** %133, align 8
  %398 = getelementptr inbounds %class.GrResourceProvider* (%"class.GrMeshDrawOp::Target"*)*, %class.GrResourceProvider* (%"class.GrMeshDrawOp::Target"*)** %397, i64 22
  %399 = load %class.GrResourceProvider* (%"class.GrMeshDrawOp::Target"*)*, %class.GrResourceProvider* (%"class.GrMeshDrawOp::Target"*)** %398, align 8
  %400 = call %class.GrResourceProvider* %399(%"class.GrMeshDrawOp::Target"* %1) #15
  %401 = getelementptr inbounds %class.GrResourceProvider, %class.GrResourceProvider* %400, i64 0, i32 0
  %402 = load %class.GrResourceCache*, %class.GrResourceCache** %401, align 8
  %403 = getelementptr inbounds %class.GrResourceCache, %class.GrResourceCache* %402, i64 0, i32 18
  %404 = load i32, i32* %403, align 4
  %405 = call i8* @_Znwm(i64 80) #16, !noalias !25
  %406 = bitcast i8* %405 to %class.SkIDChangeListener*
  call void @_ZN18SkIDChangeListenerC2Ev(%class.SkIDChangeListener* nonnull %406) #15, !noalias !25
  %407 = bitcast i8* %405 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN12_GLOBAL__N_120UniqueKeyInvalidatorE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %407, align 8, !noalias !25
  %408 = getelementptr inbounds i8, i8* %405, i64 16
  %409 = bitcast i8* %408 to %class.GrUniqueKey*
  %410 = getelementptr inbounds i8, i8* %405, i64 24
  %411 = bitcast i8* %410 to i32*
  %412 = bitcast i8* %408 to i8**
  store i8* %410, i8** %412, align 8, !noalias !25
  store i32 0, i32* %411, align 4, !noalias !25
  %413 = getelementptr inbounds i8, i8* %405, i64 28
  %414 = bitcast i8* %413 to i32*
  store i32 0, i32* %414, align 4, !noalias !25
  %415 = getelementptr inbounds i8, i8* %405, i64 56
  %416 = bitcast i8* %415 to %class.SkData**
  store %class.SkData* null, %class.SkData** %416, align 8, !noalias !25
  %417 = call dereferenceable(56) %class.GrUniqueKey* @_ZN11GrUniqueKeyaSERKS_(%class.GrUniqueKey* %409, %class.GrUniqueKey* nonnull dereferenceable(56) %4) #15, !noalias !25
  %418 = getelementptr inbounds i8, i8* %405, i64 72
  %419 = bitcast i8* %418 to i32*
  store i32 %404, i32* %419, align 8, !noalias !25
  %420 = getelementptr inbounds i8, i8* %405, i64 76
  store i8 1, i8* %420, align 4, !noalias !25
  %421 = ptrtoint i8* %405 to i64
  %422 = bitcast %class.sk_sp.275* %13 to i64*
  store i64 %421, i64* %422, align 8
  call void @_ZNK13GrStyledShape22addGenIDChangeListenerE5sk_spI18SkIDChangeListenerE(%class.GrStyledShape* %151, %class.sk_sp.275* nonnull %13) #15
  %423 = getelementptr inbounds %class.sk_sp.275, %class.sk_sp.275* %13, i64 0, i32 0
  %424 = load %class.SkIDChangeListener*, %class.SkIDChangeListener** %423, align 8
  %425 = icmp eq %class.SkIDChangeListener* %424, null
  br i1 %425, label %436, label %426

426:                                              ; preds = %396
  %427 = getelementptr inbounds %class.SkIDChangeListener, %class.SkIDChangeListener* %424, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %428 = atomicrmw add i32* %427, i32 -1 acq_rel
  %429 = icmp eq i32 %428, 1
  br i1 %429, label %430, label %436

430:                                              ; preds = %426
  %431 = bitcast %class.SkIDChangeListener* %424 to %class.SkRefCntBase*
  %432 = bitcast %class.SkIDChangeListener* %424 to void (%class.SkRefCntBase*)***
  %433 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %432, align 8
  %434 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %433, i64 2
  %435 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %434, align 8
  call void %435(%class.SkRefCntBase* nonnull %431) #15
  br label %436

436:                                              ; preds = %430, %426, %396, %392
  %437 = load %"class.GrThreadSafeCache::VertexData"*, %"class.GrThreadSafeCache::VertexData"** %163, align 8
  %438 = getelementptr inbounds %"class.GrThreadSafeCache::VertexData", %"class.GrThreadSafeCache::VertexData"* %437, i64 0, i32 4, i32 0
  %439 = load %class.GrGpuBuffer*, %class.GrGpuBuffer** %438, align 8, !noalias !28
  %440 = icmp eq %class.GrGpuBuffer* %439, null
  br i1 %440, label %445, label %441

441:                                              ; preds = %436
  %442 = getelementptr inbounds %class.GrGpuBuffer, %class.GrGpuBuffer* %439, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %443 = atomicrmw add i32* %442, i32 1 monotonic, !noalias !28
  %444 = load %"class.GrThreadSafeCache::VertexData"*, %"class.GrThreadSafeCache::VertexData"** %163, align 8
  br label %445

445:                                              ; preds = %441, %436
  %446 = phi %"class.GrThreadSafeCache::VertexData"* [ %437, %436 ], [ %444, %441 ]
  %447 = getelementptr inbounds %class.GrGpuBuffer, %class.GrGpuBuffer* %439, i64 0, i32 1
  %448 = ptrtoint %class.GrBuffer* %447 to i64
  %449 = select i1 %440, i64 0, i64 %448
  %450 = getelementptr inbounds %"class.GrThreadSafeCache::VertexData", %"class.GrThreadSafeCache::VertexData"* %446, i64 0, i32 2
  %451 = load i32, i32* %450, align 8
  %452 = bitcast %"class.GrMeshDrawOp::Target"* %1 to %class.SkArenaAlloc* (%"class.GrMeshDrawOp::Target"*)***
  %453 = load %class.SkArenaAlloc* (%"class.GrMeshDrawOp::Target"*)**, %class.SkArenaAlloc* (%"class.GrMeshDrawOp::Target"*)*** %452, align 8
  %454 = getelementptr inbounds %class.SkArenaAlloc* (%"class.GrMeshDrawOp::Target"*)*, %class.SkArenaAlloc* (%"class.GrMeshDrawOp::Target"*)** %453, i64 29
  %455 = load %class.SkArenaAlloc* (%"class.GrMeshDrawOp::Target"*)*, %class.SkArenaAlloc* (%"class.GrMeshDrawOp::Target"*)** %454, align 8
  %456 = call %class.SkArenaAlloc* %455(%"class.GrMeshDrawOp::Target"* %1) #15
  %457 = call i8* @_ZN12SkArenaAlloc21allocObjectWithFooterEjj(%class.SkArenaAlloc* %456, i32 57, i32 8) #15
  %458 = getelementptr inbounds %class.SkArenaAlloc, %class.SkArenaAlloc* %456, i64 0, i32 1
  %459 = bitcast i8** %458 to i64*
  %460 = load i64, i64* %459, align 8
  %461 = ptrtoint i8* %457 to i64
  %462 = sub i64 %461, %460
  %463 = trunc i64 %462 to i32
  %464 = getelementptr inbounds i8, i8* %457, i64 48
  store i8* %464, i8** %458, align 8
  call void @_ZN12SkArenaAlloc13installFooterEPFPcS0_Ej(%class.SkArenaAlloc* %456, i8* (i8*)* nonnull @_ZZN12SkArenaAlloc4makeIZNS_4makeI12GrSimpleMeshJEEEPT_DpOT0_EUlPvE_EEDTclfp_LDnEEEOS3_ENUlPcE_8__invokeESC_, i32 %463) #15
  call void @llvm.memset.p0i8.i64(i8* align 8 %457, i8 0, i64 32, i1 false) #15
  %465 = getelementptr inbounds i8, i8* %457, i64 32
  %466 = bitcast i8* %465 to i64*
  store i64 %449, i64* %466, align 8
  %467 = load %class.SkData*, %class.SkData** %376, align 8
  %468 = bitcast %class.SkData* %467 to i8*
  %469 = getelementptr inbounds i8, i8* %457, i64 40
  %470 = bitcast i8* %469 to i32*
  store i32 %451, i32* %470, align 8
  %471 = getelementptr inbounds i8, i8* %457, i64 44
  %472 = bitcast i8* %471 to i32*
  store i32 0, i32* %472, align 4
  %473 = getelementptr inbounds %"class.(anonymous namespace)::TriangulatingPathOp", %"class.(anonymous namespace)::TriangulatingPathOp"* %0, i64 0, i32 7
  %474 = bitcast %struct.GrSimpleMesh** %473 to i8**
  store i8* %457, i8** %474, align 8
  %475 = icmp eq %class.SkData* %467, null
  br i1 %475, label %481, label %476

476:                                              ; preds = %445
  %477 = getelementptr inbounds %class.SkData, %class.SkData* %467, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %478 = atomicrmw add i32* %477, i32 -1 acq_rel
  %479 = icmp eq i32 %478, 1
  br i1 %479, label %480, label %481

480:                                              ; preds = %476
  call void @_ZN6SkDataD1Ev(%class.SkData* nonnull %467) #15
  call void @_ZN6SkDatadlEPv(i8* nonnull %468) #15
  br label %481

481:                                              ; preds = %480, %476, %445
  %482 = load %"class.GrThreadSafeCache::VertexData"*, %"class.GrThreadSafeCache::VertexData"** %375, align 8
  %483 = icmp eq %"class.GrThreadSafeCache::VertexData"* %482, null
  br i1 %483, label %490, label %484

484:                                              ; preds = %481
  %485 = getelementptr inbounds %"class.GrThreadSafeCache::VertexData", %"class.GrThreadSafeCache::VertexData"* %482, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %486 = atomicrmw add i32* %485, i32 -1 acq_rel
  %487 = icmp eq i32 %486, 1
  br i1 %487, label %488, label %490

488:                                              ; preds = %484
  call void @_ZN17GrThreadSafeCache10VertexDataD1Ev(%"class.GrThreadSafeCache::VertexData"* nonnull %482) #15
  %489 = bitcast %"class.GrThreadSafeCache::VertexData"* %482 to i8*
  call void @_ZdlPv(i8* %489) #16
  br label %490

490:                                              ; preds = %488, %484, %481
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %374) #15
  br label %491

491:                                              ; preds = %490, %308
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %9) #15
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN12_GLOBAL__N_121StaticVertexAllocatorE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %319, align 8
  %492 = getelementptr inbounds %"class.(anonymous namespace)::StaticVertexAllocator", %"class.(anonymous namespace)::StaticVertexAllocator"* %8, i64 0, i32 2, i32 0
  %493 = load %class.GrGpuBuffer*, %class.GrGpuBuffer** %492, align 8
  %494 = icmp eq %class.GrGpuBuffer* %493, null
  br i1 %494, label %503, label %495

495:                                              ; preds = %491
  %496 = getelementptr inbounds %class.GrGpuBuffer, %class.GrGpuBuffer* %493, i64 0, i32 0, i32 1
  %497 = getelementptr inbounds %class.GrIORef, %class.GrIORef* %496, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %498 = atomicrmw add i32* %497, i32 -1 acq_rel
  %499 = icmp eq i32 %498, 1
  br i1 %499, label %500, label %503

500:                                              ; preds = %495
  %501 = getelementptr inbounds %class.GrIORef, %class.GrIORef* %496, i64 -1
  %502 = bitcast %class.GrIORef* %501 to %class.GrGpuResource*
  call void @_ZNK13GrGpuResource19notifyARefCntIsZeroEN7GrIORefIS_E14LastRemovedRefE(%class.GrGpuResource* %502, i32 0) #15
  br label %503

503:                                              ; preds = %500, %495, %491
  %504 = load %"class.GrThreadSafeCache::VertexData"*, %"class.GrThreadSafeCache::VertexData"** %320, align 8
  %505 = icmp eq %"class.GrThreadSafeCache::VertexData"* %504, null
  br i1 %505, label %512, label %506

506:                                              ; preds = %503
  %507 = getelementptr inbounds %"class.GrThreadSafeCache::VertexData", %"class.GrThreadSafeCache::VertexData"* %504, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %508 = atomicrmw add i32* %507, i32 -1 acq_rel
  %509 = icmp eq i32 %508, 1
  br i1 %509, label %510, label %512

510:                                              ; preds = %506
  call void @_ZN17GrThreadSafeCache10VertexDataD1Ev(%"class.GrThreadSafeCache::VertexData"* nonnull %504) #15
  %511 = bitcast %"class.GrThreadSafeCache::VertexData"* %504 to i8*
  call void @_ZdlPv(i8* %511) #16
  br label %512

512:                                              ; preds = %510, %506, %503
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %317) #15
  br label %513

513:                                              ; preds = %512, %282, %269
  %514 = load %class.SkData*, %class.SkData** %149, align 8
  %515 = icmp eq %class.SkData* %514, null
  br i1 %515, label %522, label %516

516:                                              ; preds = %513
  %517 = getelementptr inbounds %class.SkData, %class.SkData* %514, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %518 = atomicrmw add i32* %517, i32 -1 acq_rel
  %519 = icmp eq i32 %518, 1
  br i1 %519, label %520, label %522

520:                                              ; preds = %516
  call void @_ZN6SkDataD1Ev(%class.SkData* nonnull %514) #15
  %521 = bitcast %class.SkData* %514 to i8*
  call void @_ZN6SkDatadlEPv(i8* nonnull %521) #15
  br label %522

522:                                              ; preds = %520, %516, %513
  %523 = load i32*, i32** %146, align 8
  %524 = icmp eq i32* %523, %147
  br i1 %524, label %527, label %525

525:                                              ; preds = %522
  %526 = bitcast i32* %523 to i8*
  call void @_Z7sk_freePv(i8* %526) #15
  br label %527

527:                                              ; preds = %522, %525
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %143) #15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %129)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %130)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %131)
  br label %528

528:                                              ; preds = %527, %127
  ret void
}

; Function Attrs: nofree nounwind
declare i32 @__cxa_guard_acquire(i64*) local_unnamed_addr #9

; Function Attrs: nofree nounwind
declare void @__cxa_guard_release(i64*) local_unnamed_addr #9

; Function Attrs: noreturn
declare void @_Z16SkAbort_FileLinePKciS0_z(i8*, i32, i8*, ...) local_unnamed_addr #10

declare { <2 x float>, <2 x float> } @_ZNK7GrShape6boundsEv(%class.GrShape*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN24GrSimpleMeshDrawOpHelperD2Ev(%class.GrSimpleMeshDrawOpHelper*) unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4GrOpD2Ev(%class.GrOp*) unnamed_addr #1 comdat align 2 {
  %2 = getelementptr inbounds %class.GrOp, %class.GrOp* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [10 x i8*] }, { [10 x i8*] }* @_ZTV4GrOp, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %class.GrOp, %class.GrOp* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %4 = load %class.GrOp*, %class.GrOp** %3, align 8
  store %class.GrOp* null, %class.GrOp** %3, align 8
  %5 = icmp eq %class.GrOp* %4, null
  br i1 %5, label %11, label %6

6:                                                ; preds = %1
  %7 = bitcast %class.GrOp* %4 to void (%class.GrOp*)***
  %8 = load void (%class.GrOp*)**, void (%class.GrOp*)*** %7, align 8
  %9 = getelementptr inbounds void (%class.GrOp*)*, void (%class.GrOp*)** %8, i64 1
  %10 = load void (%class.GrOp*)*, void (%class.GrOp*)** %9, align 8
  tail call void %10(%class.GrOp* nonnull %4) #15
  br label %11

11:                                               ; preds = %1, %6
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4GrOpD0Ev(%class.GrOp*) unnamed_addr #1 comdat align 2 {
  tail call void @llvm.trap() #17
  unreachable
}

declare void @__cxa_pure_virtual() unnamed_addr

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK4GrOp12visitProxiesERKNSt3__18functionIFvP14GrSurfaceProxy11GrMipmappedEEE(%class.GrOp*, %"class.std::__1::function.256"*) unnamed_addr #1 comdat align 2 {
  ret void
}

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #11

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #12

declare void @_ZNK10GrPipeline12visitProxiesERKNSt3__18functionIFvP14GrSurfaceProxy11GrMipmappedEEE(%class.GrPipeline*, %"class.std::__1::function.256"*) local_unnamed_addr #2

declare void @_ZNK14GrProcessorSet12visitProxiesERKNSt3__18functionIFvP14GrSurfaceProxy11GrMipmappedEEE(%class.GrProcessorSet*, %"class.std::__1::function.256"*) local_unnamed_addr #2

declare void @_ZN12GrMeshDrawOp17createProgramInfoEPNS_6TargetE(%class.GrMeshDrawOp*, %"class.GrMeshDrawOp::Target"*) local_unnamed_addr #2

declare void @_ZN14GrOpFlushState8drawMeshERK12GrSimpleMesh(%class.GrOpFlushState*, %struct.GrSimpleMesh* dereferenceable(48)) local_unnamed_addr #2

declare void @_ZN15GrOpsRenderPass12bindPipelineERK13GrProgramInfoRK6SkRect(%class.GrOpsRenderPass*, %class.GrProgramInfo* dereferenceable(128), %struct.SkRect* dereferenceable(16)) local_unnamed_addr #2

declare void @_ZN15GrOpsRenderPass14setScissorRectERK7SkIRect(%class.GrOpsRenderPass*, %struct.SkIRect* dereferenceable(16)) local_unnamed_addr #2

declare void @_ZN15GrOpsRenderPass12bindTexturesERK19GrGeometryProcessorPKPK14GrSurfaceProxyRK10GrPipeline(%class.GrOpsRenderPass*, %class.GrGeometryProcessor* dereferenceable(80), %class.GrSurfaceProxy**, %class.GrPipeline* dereferenceable(128)) local_unnamed_addr #2

declare i32 @_ZNK35GrSimpleMeshDrawOpHelperWithStencil18fixedFunctionFlagsEv(%class.GrSimpleMeshDrawOpHelperWithStencil*) local_unnamed_addr #2

declare i32 @_ZN35GrSimpleMeshDrawOpHelperWithStencil18finalizeProcessorsERK6GrCapsPK13GrAppliedClip11GrClampType27GrProcessorAnalysisCoverageP8SkRGBA4fIL11SkAlphaType2EEPb(%class.GrSimpleMeshDrawOpHelperWithStencil*, %class.GrCaps* dereferenceable(232), %class.GrAppliedClip*, i32, i32, %struct.SkRGBA4f*, i8*) local_unnamed_addr #2

declare %class.SkEventTracer* @_ZN13SkEventTracer11GetInstanceEv() local_unnamed_addr #2

declare void @_ZN12GrMeshDrawOp17onPrePrepareDrawsEP18GrRecordingContextRK18GrSurfaceProxyViewP13GrAppliedClipRKN15GrXferProcessor12DstProxyViewE18GrXferBarrierFlags8GrLoadOp(%class.GrMeshDrawOp*, %class.GrRecordingContext*, %class.GrSurfaceProxyView* dereferenceable(16), %class.GrAppliedClip*, %"class.GrXferProcessor::DstProxyView"* dereferenceable(32), i32, i32) unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #0

; Function Attrs: nounwind ssp uwtable
define internal fastcc void @_ZN12_GLOBAL__N_119TriangulatingPathOp9CreateKeyEP11GrUniqueKeyRK13GrStyledShapeRK7SkIRect(%class.GrUniqueKey*, %class.GrStyledShape* dereferenceable(208), %struct.SkIRect* nocapture readonly dereferenceable(16)) unnamed_addr #1 align 2 {
  %4 = load atomic i8, i8* bitcast (i64* @_ZGVZN12_GLOBAL__N_119TriangulatingPathOp9CreateKeyEP11GrUniqueKeyRK13GrStyledShapeRK7SkIRectE7kDomain to i8*) acquire, align 8
  %5 = icmp eq i8 %4, 0
  br i1 %5, label %6, label %12, !prof !3

6:                                                ; preds = %3
  %7 = tail call i32 @__cxa_guard_acquire(i64* nonnull @_ZGVZN12_GLOBAL__N_119TriangulatingPathOp9CreateKeyEP11GrUniqueKeyRK13GrStyledShapeRK7SkIRectE7kDomain) #15
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %12, label %9

9:                                                ; preds = %6
  %10 = tail call i32 @_ZN11GrUniqueKey14GenerateDomainEv() #15
  store i32 %10, i32* @_ZZN12_GLOBAL__N_119TriangulatingPathOp9CreateKeyEP11GrUniqueKeyRK13GrStyledShapeRK7SkIRectE7kDomain, align 4
  %11 = tail call {}* @llvm.invariant.start.p0i8(i64 4, i8* bitcast (i32* @_ZZN12_GLOBAL__N_119TriangulatingPathOp9CreateKeyEP11GrUniqueKeyRK13GrStyledShapeRK7SkIRectE7kDomain to i8*))
  tail call void @__cxa_guard_release(i64* nonnull @_ZGVZN12_GLOBAL__N_119TriangulatingPathOp9CreateKeyEP11GrUniqueKeyRK13GrStyledShapeRK7SkIRectE7kDomain) #15
  br label %12

12:                                               ; preds = %6, %9, %3
  %13 = getelementptr inbounds %class.GrStyledShape, %class.GrStyledShape* %1, i64 0, i32 0, i32 1
  %14 = load i8, i8* %13, align 8
  %15 = icmp eq i8 %14, 4
  %16 = bitcast %class.GrStyledShape* %1 to %class.SkPath*
  %17 = getelementptr inbounds %class.SkPath, %class.SkPath* %16, i64 0, i32 4
  %18 = load i8, i8* %17, align 2
  %19 = and i8 %18, 2
  %20 = getelementptr inbounds %class.GrStyledShape, %class.GrStyledShape* %1, i64 0, i32 0, i32 4
  %21 = load i8, i8* %20, align 1
  %22 = select i1 %15, i8 %19, i8 %21
  %23 = icmp eq i8 %22, 0
  %24 = tail call i32 @_ZNK13GrStyledShape15unstyledKeySizeEv(%class.GrStyledShape* %1) #15
  %25 = load i32, i32* @_ZZN12_GLOBAL__N_119TriangulatingPathOp9CreateKeyEP11GrUniqueKeyRK13GrStyledShapeRK7SkIRectE7kDomain, align 4
  %26 = sext i32 %24 to i64
  %27 = add nsw i64 %26, 6
  %28 = getelementptr inbounds %class.GrUniqueKey, %class.GrUniqueKey* %0, i64 0, i32 0, i32 0, i32 0
  %29 = load i32*, i32** %28, align 8
  %30 = getelementptr inbounds %class.GrUniqueKey, %class.GrUniqueKey* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i64 0
  %31 = icmp eq i32* %29, %30
  br i1 %31, label %34, label %32

32:                                               ; preds = %12
  %33 = bitcast i32* %29 to i8*
  tail call void @_Z7sk_freePv(i8* %33) #15
  br label %34

34:                                               ; preds = %32, %12
  %35 = icmp ugt i64 %27, 7
  br i1 %35, label %36, label %40

36:                                               ; preds = %34
  %37 = tail call i8* @_Z15sk_malloc_throwmm(i64 %27, i64 4) #15
  %38 = bitcast %class.GrUniqueKey* %0 to i8**
  store i8* %37, i8** %38, align 8
  %39 = bitcast i8* %37 to i32*
  br label %44

40:                                               ; preds = %34
  %41 = icmp eq i64 %27, 0
  br i1 %41, label %43, label %42

42:                                               ; preds = %40
  store i32* %30, i32** %28, align 8
  br label %44

43:                                               ; preds = %40
  store i32* null, i32** %28, align 8
  br label %44

44:                                               ; preds = %36, %42, %43
  %45 = phi i32* [ %39, %36 ], [ %30, %42 ], [ null, %43 ]
  %46 = trunc i64 %27 to i32
  %47 = shl i32 %46, 18
  %48 = or i32 %47, %25
  %49 = getelementptr inbounds i32, i32* %45, i64 1
  store i32 %48, i32* %49, align 4
  %50 = getelementptr inbounds %class.GrUniqueKey, %class.GrUniqueKey* %0, i64 0, i32 2
  store i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.5, i64 0, i64 0), i8** %50, align 8
  %51 = load i32*, i32** %28, align 8
  %52 = getelementptr inbounds i32, i32* %51, i64 2
  tail call void @_ZNK13GrStyledShape16writeUnstyledKeyEPj(%class.GrStyledShape* %1, i32* %52) #15
  %53 = add nsw i32 %24, 2
  %54 = load i32*, i32** %28, align 8
  %55 = sext i32 %53 to i64
  %56 = getelementptr inbounds i32, i32* %54, i64 %55
  %57 = bitcast i32* %56 to i8*
  br i1 %23, label %60, label %58

58:                                               ; preds = %44
  %59 = bitcast %struct.SkIRect* %2 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %57, i8* align 4 %59, i64 16, i1 false)
  br label %61

60:                                               ; preds = %44
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %57, i8 0, i64 16, i1 false)
  br label %61

61:                                               ; preds = %60, %58
  %62 = icmp eq %class.GrUniqueKey* %0, null
  br i1 %62, label %71, label %63

63:                                               ; preds = %61
  %64 = load i32*, i32** %28, align 8
  %65 = getelementptr inbounds i32, i32* %64, i64 1
  %66 = load i32, i32* %65, align 4
  %67 = lshr i32 %66, 16
  %68 = zext i32 %67 to i64
  %69 = add nsw i64 %68, -4
  %70 = tail call i32 @_Z17GrResourceKeyHashPKjm(i32* %65, i64 %69) #15
  store i32 %70, i32* %64, align 4
  br label %71

71:                                               ; preds = %63, %61
  ret void
}

declare float @_ZN11GrPathUtils19scaleToleranceToSrcEfRK8SkMatrixRK6SkRect(float, %class.SkMatrix* dereferenceable(40), %struct.SkRect* dereferenceable(16)) local_unnamed_addr #2

declare void @_ZN17GrThreadSafeCache17findVertsWithDataERK11GrUniqueKey(%"class.std::__1::tuple.271"* sret, %class.GrThreadSafeCache*, %class.GrUniqueKey* dereferenceable(56)) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define internal fastcc i32 @_ZN12_GLOBAL__N_119TriangulatingPathOp11TriangulateEP22GrEagerVertexAllocatorRK8SkMatrixRK13GrStyledShapeRK7SkIRectfPb(%class.GrEagerVertexAllocator*, %class.SkMatrix* dereferenceable(40), %class.GrStyledShape* dereferenceable(208), %struct.SkIRect* nocapture readonly dereferenceable(16), float, i8*) unnamed_addr #1 align 2 {
  %7 = alloca %class.SkArenaAlloc, align 8
  %8 = alloca %class.GrTriangulator, align 8
  %9 = alloca { <2 x float>, <2 x float> }, align 8
  %10 = bitcast { <2 x float>, <2 x float> }* %9 to %struct.SkRect*
  %11 = alloca %class.SkMatrix, align 16
  %12 = alloca %class.SkPath, align 8
  %13 = bitcast { <2 x float>, <2 x float> }* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %13) #15
  %14 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %3, i64 0, i32 0
  %15 = load i32, i32* %14, align 4
  %16 = sitofp i32 %15 to float
  %17 = insertelement <2 x float> undef, float %16, i32 0
  %18 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %3, i64 0, i32 1
  %19 = load i32, i32* %18, align 4
  %20 = sitofp i32 %19 to float
  %21 = insertelement <2 x float> %17, float %20, i32 1
  %22 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %3, i64 0, i32 2
  %23 = load i32, i32* %22, align 4
  %24 = sitofp i32 %23 to float
  %25 = insertelement <2 x float> undef, float %24, i32 0
  %26 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %3, i64 0, i32 3
  %27 = load i32, i32* %26, align 4
  %28 = sitofp i32 %27 to float
  %29 = insertelement <2 x float> %25, float %28, i32 1
  %30 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %9, i64 0, i32 0
  store <2 x float> %21, <2 x float>* %30, align 8
  %31 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %9, i64 0, i32 1
  store <2 x float> %29, <2 x float>* %31, align 8
  %32 = bitcast %class.SkMatrix* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %32) #15
  %33 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %11, i64 0, i32 1
  %34 = bitcast %class.SkMatrix* %11 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00>, <4 x float>* %34, align 16
  %35 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %11, i64 0, i32 0, i64 4
  %36 = bitcast float* %35 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00>, <4 x float>* %36, align 16
  %37 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %11, i64 0, i32 0, i64 8
  store float 1.000000e+00, float* %37, align 16
  store i32 16, i32* %33, align 4
  %38 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %1, i64 0, i32 1
  %39 = load i32, i32* %38, align 4
  %40 = trunc i32 %39 to i8
  %41 = icmp slt i8 %40, 0
  br i1 %41, label %42, label %45

42:                                               ; preds = %6
  %43 = tail call zeroext i8 @_ZNK8SkMatrix15computeTypeMaskEv(%class.SkMatrix* %1) #15
  %44 = zext i8 %43 to i32
  store i32 %44, i32* %38, align 4
  br label %45

45:                                               ; preds = %42, %6
  %46 = phi i32 [ %44, %42 ], [ %39, %6 ]
  %47 = and i32 %46, 15
  %48 = icmp eq i32 %47, 0
  br i1 %48, label %49, label %51

49:                                               ; preds = %45
  %50 = call dereferenceable(40) %class.SkMatrix* @_ZN8SkMatrix5resetEv(%class.SkMatrix* nonnull %11) #15
  br label %53

51:                                               ; preds = %45
  %52 = call zeroext i1 @_ZNK8SkMatrix17invertNonIdentityEPS_(%class.SkMatrix* %1, %class.SkMatrix* nonnull %11) #15
  br i1 %52, label %53, label %78

53:                                               ; preds = %49, %51
  %54 = call zeroext i1 @_ZNK8SkMatrix7mapRectEP6SkRectRKS0_22SkApplyPerspectiveClip(%class.SkMatrix* nonnull %11, %struct.SkRect* nonnull %10, %struct.SkRect* nonnull dereferenceable(16) %10, i32 1) #15
  %55 = bitcast %class.SkPath* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %55) #15
  %56 = bitcast %class.SkPath* %12 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %56, i8 -86, i64 16, i1 false)
  call void @_ZN6SkPathC1Ev(%class.SkPath* nonnull %12) #15
  %57 = getelementptr inbounds %class.GrStyledShape, %class.GrStyledShape* %2, i64 0, i32 0
  %58 = getelementptr inbounds %class.GrStyledShape, %class.GrStyledShape* %2, i64 0, i32 1, i32 0
  %59 = call i32 @_ZNK11SkStrokeRec8getStyleEv(%class.SkStrokeRec* %58) #15
  %60 = icmp eq i32 %59, 1
  %61 = getelementptr inbounds %class.GrStyledShape, %class.GrStyledShape* %2, i64 0, i32 1, i32 1, i32 0
  %62 = load %class.SkPathEffect*, %class.SkPathEffect** %61, align 8
  %63 = icmp eq %class.SkPathEffect* %62, null
  %64 = and i1 %60, %63
  call void @_ZNK7GrShape6asPathEP6SkPathb(%class.GrShape* %57, %class.SkPath* nonnull %12, i1 zeroext %64) #15
  %65 = bitcast %class.SkArenaAlloc* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %65) #15
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %65, i8 -86, i64 32, i1 false) #15
  call void @_ZN12SkArenaAllocC2EPcmm(%class.SkArenaAlloc* nonnull %7, i8* null, i64 0, i64 16384) #15
  %66 = bitcast %class.GrTriangulator* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %66) #15
  %67 = getelementptr inbounds %class.GrTriangulator, %class.GrTriangulator* %8, i64 0, i32 1
  %68 = bitcast %class.SkPath* %67 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %68, i8 -86, i64 56, i1 false) #15
  %69 = getelementptr inbounds %class.GrTriangulator, %class.GrTriangulator* %8, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTV14GrTriangulator, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %69, align 8
  call void @_ZN6SkPathC1ERKS_(%class.SkPath* %67, %class.SkPath* nonnull dereferenceable(16) %12) #15
  %70 = getelementptr inbounds %class.GrTriangulator, %class.GrTriangulator* %8, i64 0, i32 2
  store %class.SkArenaAlloc* %7, %class.SkArenaAlloc** %70, align 8
  %71 = getelementptr inbounds %class.GrTriangulator, %class.GrTriangulator* %8, i64 0, i32 3
  %72 = getelementptr inbounds %class.GrTriangulator, %class.GrTriangulator* %8, i64 0, i32 8, i32 0
  store %"struct.GrTriangulator::BreadcrumbTriangleList::Node"* null, %"struct.GrTriangulator::BreadcrumbTriangleList::Node"** %72, align 8
  %73 = getelementptr inbounds %class.GrTriangulator, %class.GrTriangulator* %8, i64 0, i32 8, i32 1
  %74 = bitcast i8* %71 to i32*
  store i32 0, i32* %74, align 8
  store %"struct.GrTriangulator::BreadcrumbTriangleList::Node"** %72, %"struct.GrTriangulator::BreadcrumbTriangleList::Node"*** %73, align 8
  %75 = getelementptr inbounds %class.GrTriangulator, %class.GrTriangulator* %8, i64 0, i32 8, i32 2
  store i32 0, i32* %75, align 8
  %76 = call %"struct.GrTriangulator::Poly"* @_ZNK14GrTriangulator11pathToPolysEfRK6SkRectPb(%class.GrTriangulator* nonnull %8, float %4, %struct.SkRect* nonnull dereferenceable(16) %10, i8* %5) #15
  %77 = call i32 @_ZNK14GrTriangulator16polysToTrianglesEPNS_4PolyEP22GrEagerVertexAllocator(%class.GrTriangulator* nonnull %8, %"struct.GrTriangulator::Poly"* %76, %class.GrEagerVertexAllocator* %0) #15
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTV14GrTriangulator, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %69, align 8
  call void @_ZN6SkPathD1Ev(%class.SkPath* %67) #15
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %66) #15
  call void @_ZN12SkArenaAllocD1Ev(%class.SkArenaAlloc* nonnull %7) #15
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %65) #15
  call void @_ZN6SkPathD1Ev(%class.SkPath* nonnull %12) #15
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %55) #15
  br label %78

78:                                               ; preds = %51, %53
  %79 = phi i32 [ %77, %53 ], [ 0, %51 ]
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %32) #15
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %13) #15
  ret i32 %79
}

declare void @_ZN17GrThreadSafeCache16addVertsWithDataERK11GrUniqueKey5sk_spINS_10VertexDataEEPFbP6SkDataS7_E(%"class.std::__1::tuple.271"* sret, %class.GrThreadSafeCache*, %class.GrUniqueKey* dereferenceable(56), %class.sk_sp*, i1 (%class.SkData*, %class.SkData*)*) local_unnamed_addr #2

; Function Attrs: norecurse nounwind readonly ssp uwtable
define internal zeroext i1 @_ZN12_GLOBAL__N_115is_newer_betterEP6SkDataS1_(%class.SkData* nocapture readonly, %class.SkData* nocapture readonly) #8 {
  %3 = getelementptr inbounds %class.SkData, %class.SkData* %0, i64 0, i32 3
  %4 = load i8*, i8** %3, align 8
  %5 = getelementptr inbounds i8, i8* %4, i64 4
  %6 = load i8, i8* %5, align 4, !range !2
  %7 = icmp eq i8 %6, 0
  br i1 %7, label %8, label %19

8:                                                ; preds = %2
  %9 = getelementptr inbounds %class.SkData, %class.SkData* %1, i64 0, i32 3
  %10 = load i8*, i8** %9, align 8
  %11 = getelementptr inbounds i8, i8* %4, i64 8
  %12 = bitcast i8* %11 to float*
  %13 = load float, float* %12, align 4
  %14 = getelementptr inbounds i8, i8* %10, i64 8
  %15 = bitcast i8* %14 to float*
  %16 = load float, float* %15, align 4
  %17 = fcmp ugt float %13, %16
  br i1 %17, label %18, label %19

18:                                               ; preds = %8
  br label %19

19:                                               ; preds = %2, %8, %18
  %20 = phi i1 [ true, %18 ], [ false, %8 ], [ false, %2 ]
  ret i1 %20
}

declare void @_ZNK13GrStyledShape22addGenIDChangeListenerE5sk_spI18SkIDChangeListenerE(%class.GrStyledShape*, %class.sk_sp.275*) local_unnamed_addr #2

declare %class.GrThreadSafeCache* @_ZN18GrRecordingContext15threadSafeCacheEv(%class.GrRecordingContext*) local_unnamed_addr #2

declare i32 @_ZN11GrUniqueKey14GenerateDomainEv() local_unnamed_addr #2

declare void @_ZNK13GrStyledShape16writeUnstyledKeyEPj(%class.GrStyledShape*, i32*) local_unnamed_addr #2

declare i32 @_Z17GrResourceKeyHashPKjm(i32*, i64) local_unnamed_addr #2

declare dereferenceable(40) %class.SkMatrix* @_ZN8SkMatrix5resetEv(%class.SkMatrix*) local_unnamed_addr #2

declare zeroext i1 @_ZNK8SkMatrix17invertNonIdentityEPS_(%class.SkMatrix*, %class.SkMatrix*) local_unnamed_addr #2

declare zeroext i8 @_ZNK8SkMatrix15computeTypeMaskEv(%class.SkMatrix*) local_unnamed_addr #2

declare %"struct.GrTriangulator::Poly"* @_ZNK14GrTriangulator11pathToPolysEfRK6SkRectPb(%class.GrTriangulator*, float, %struct.SkRect* dereferenceable(16), i8*) local_unnamed_addr #2

declare i32 @_ZNK14GrTriangulator16polysToTrianglesEPNS_4PolyEP22GrEagerVertexAllocator(%class.GrTriangulator*, %"struct.GrTriangulator::Poly"*, %class.GrEagerVertexAllocator*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN12SkArenaAllocD1Ev(%class.SkArenaAlloc*) unnamed_addr #4

declare void @_ZN12SkArenaAllocC2EPcmm(%class.SkArenaAlloc*, i8*, i64, i64) unnamed_addr #2

declare void @_ZN6SkPathC1ERKS_(%class.SkPath*, %class.SkPath* dereferenceable(16)) unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN6SkDataD1Ev(%class.SkData*) unnamed_addr #4

; Function Attrs: nounwind
declare void @_ZN6SkDatadlEPv(i8*) local_unnamed_addr #4

declare void @_ZN6SkData12MakeWithCopyEPKvm(%class.sk_sp.2* sret, i8*, i64) local_unnamed_addr #2

declare void @_ZN18SkIDChangeListenerC2Ev(%class.SkIDChangeListener*) unnamed_addr #2

; Function Attrs: inlinehint nounwind ssp uwtable
define internal void @_ZN12_GLOBAL__N_120UniqueKeyInvalidatorD2Ev(%"class.(anonymous namespace)::UniqueKeyInvalidator"*) unnamed_addr #5 align 2 {
  %2 = getelementptr inbounds %"class.(anonymous namespace)::UniqueKeyInvalidator", %"class.(anonymous namespace)::UniqueKeyInvalidator"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN12_GLOBAL__N_120UniqueKeyInvalidatorE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.(anonymous namespace)::UniqueKeyInvalidator", %"class.(anonymous namespace)::UniqueKeyInvalidator"* %0, i64 0, i32 2, i32 0, i32 1, i32 0
  %4 = load %class.SkData*, %class.SkData** %3, align 8
  %5 = icmp eq %class.SkData* %4, null
  br i1 %5, label %12, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %class.SkData, %class.SkData* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %8 = atomicrmw add i32* %7, i32 -1 acq_rel
  %9 = icmp eq i32 %8, 1
  br i1 %9, label %10, label %12

10:                                               ; preds = %6
  tail call void @_ZN6SkDataD1Ev(%class.SkData* nonnull %4) #15
  %11 = bitcast %class.SkData* %4 to i8*
  tail call void @_ZN6SkDatadlEPv(i8* nonnull %11) #15
  br label %12

12:                                               ; preds = %10, %6, %1
  %13 = getelementptr inbounds %"class.(anonymous namespace)::UniqueKeyInvalidator", %"class.(anonymous namespace)::UniqueKeyInvalidator"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0
  %14 = load i32*, i32** %13, align 8
  %15 = getelementptr inbounds %"class.(anonymous namespace)::UniqueKeyInvalidator", %"class.(anonymous namespace)::UniqueKeyInvalidator"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 1, i32 0, i64 0
  %16 = icmp eq i32* %14, %15
  br i1 %16, label %19, label %17

17:                                               ; preds = %12
  %18 = bitcast i32* %14 to i8*
  tail call void @_Z7sk_freePv(i8* %18) #15
  br label %19

19:                                               ; preds = %12, %17
  %20 = bitcast %"class.(anonymous namespace)::UniqueKeyInvalidator"* %0 to %class.SkIDChangeListener*
  tail call void @_ZN18SkIDChangeListenerD2Ev(%class.SkIDChangeListener* %20) #15
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define internal void @_ZN12_GLOBAL__N_120UniqueKeyInvalidatorD0Ev(%"class.(anonymous namespace)::UniqueKeyInvalidator"*) unnamed_addr #5 align 2 {
  %2 = getelementptr inbounds %"class.(anonymous namespace)::UniqueKeyInvalidator", %"class.(anonymous namespace)::UniqueKeyInvalidator"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN12_GLOBAL__N_120UniqueKeyInvalidatorE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.(anonymous namespace)::UniqueKeyInvalidator", %"class.(anonymous namespace)::UniqueKeyInvalidator"* %0, i64 0, i32 2, i32 0, i32 1, i32 0
  %4 = load %class.SkData*, %class.SkData** %3, align 8
  %5 = icmp eq %class.SkData* %4, null
  br i1 %5, label %12, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %class.SkData, %class.SkData* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %8 = atomicrmw add i32* %7, i32 -1 acq_rel
  %9 = icmp eq i32 %8, 1
  br i1 %9, label %10, label %12

10:                                               ; preds = %6
  tail call void @_ZN6SkDataD1Ev(%class.SkData* nonnull %4) #15
  %11 = bitcast %class.SkData* %4 to i8*
  tail call void @_ZN6SkDatadlEPv(i8* nonnull %11) #15
  br label %12

12:                                               ; preds = %10, %6, %1
  %13 = getelementptr inbounds %"class.(anonymous namespace)::UniqueKeyInvalidator", %"class.(anonymous namespace)::UniqueKeyInvalidator"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0
  %14 = load i32*, i32** %13, align 8
  %15 = getelementptr inbounds %"class.(anonymous namespace)::UniqueKeyInvalidator", %"class.(anonymous namespace)::UniqueKeyInvalidator"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 1, i32 0, i64 0
  %16 = icmp eq i32* %14, %15
  br i1 %16, label %19, label %17

17:                                               ; preds = %12
  %18 = bitcast i32* %14 to i8*
  tail call void @_Z7sk_freePv(i8* %18) #15
  br label %19

19:                                               ; preds = %12, %17
  %20 = bitcast %"class.(anonymous namespace)::UniqueKeyInvalidator"* %0 to %class.SkIDChangeListener*
  tail call void @_ZN18SkIDChangeListenerD2Ev(%class.SkIDChangeListener* %20) #15
  %21 = bitcast %"class.(anonymous namespace)::UniqueKeyInvalidator"* %0 to i8*
  tail call void @_ZdlPv(i8* %21) #16
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN12_GLOBAL__N_120UniqueKeyInvalidator7changedEv(%"class.(anonymous namespace)::UniqueKeyInvalidator"*) unnamed_addr #1 align 2 {
  %2 = alloca %class.GrUniqueKeyInvalidatedMessage, align 8
  %3 = getelementptr inbounds %class.GrUniqueKeyInvalidatedMessage, %class.GrUniqueKeyInvalidatedMessage* %2, i64 0, i32 0
  %4 = getelementptr inbounds %"class.(anonymous namespace)::UniqueKeyInvalidator", %"class.(anonymous namespace)::UniqueKeyInvalidator"* %0, i64 0, i32 2, i32 0
  %5 = getelementptr inbounds %class.GrUniqueKeyInvalidatedMessage, %class.GrUniqueKeyInvalidatedMessage* %2, i64 0, i32 0, i32 0, i32 0, i32 0
  %6 = getelementptr inbounds %class.GrUniqueKeyInvalidatedMessage, %class.GrUniqueKeyInvalidatedMessage* %2, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i64 0
  store i32* %6, i32** %5, align 8
  store i32 0, i32* %6, align 8
  %7 = getelementptr inbounds %class.GrUniqueKeyInvalidatedMessage, %class.GrUniqueKeyInvalidatedMessage* %2, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i64 1
  store i32 0, i32* %7, align 4
  %8 = getelementptr inbounds %class.GrUniqueKeyInvalidatedMessage, %class.GrUniqueKeyInvalidatedMessage* %2, i64 0, i32 0, i32 1, i32 0
  store %class.SkData* null, %class.SkData** %8, align 8
  %9 = call dereferenceable(56) %class.GrUniqueKey* @_ZN11GrUniqueKeyaSERKS_(%class.GrUniqueKey* nonnull %3, %class.GrUniqueKey* dereferenceable(56) %4) #15
  %10 = getelementptr inbounds %class.GrUniqueKeyInvalidatedMessage, %class.GrUniqueKeyInvalidatedMessage* %2, i64 0, i32 1
  %11 = getelementptr inbounds %"class.(anonymous namespace)::UniqueKeyInvalidator", %"class.(anonymous namespace)::UniqueKeyInvalidator"* %0, i64 0, i32 2, i32 1
  %12 = bitcast i32* %10 to i8*
  %13 = bitcast i32* %11 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %12, i8* align 8 %13, i64 5, i1 false) #15
  call void @_ZN12SkMessageBusI29GrUniqueKeyInvalidatedMessagejLb1EE4PostES0_(%class.GrUniqueKeyInvalidatedMessage* nonnull %2)
  %14 = load %class.SkData*, %class.SkData** %8, align 8
  %15 = icmp eq %class.SkData* %14, null
  br i1 %15, label %22, label %16

16:                                               ; preds = %1
  %17 = getelementptr inbounds %class.SkData, %class.SkData* %14, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %18 = atomicrmw add i32* %17, i32 -1 acq_rel
  %19 = icmp eq i32 %18, 1
  br i1 %19, label %20, label %22

20:                                               ; preds = %16
  call void @_ZN6SkDataD1Ev(%class.SkData* nonnull %14) #15
  %21 = bitcast %class.SkData* %14 to i8*
  call void @_ZN6SkDatadlEPv(i8* nonnull %21) #15
  br label %22

22:                                               ; preds = %20, %16, %1
  %23 = load i32*, i32** %5, align 8
  %24 = icmp eq i32* %23, %6
  br i1 %24, label %27, label %25

25:                                               ; preds = %22
  %26 = bitcast i32* %23 to i8*
  call void @_Z7sk_freePv(i8* %26) #15
  br label %27

27:                                               ; preds = %22, %25
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(56) %class.GrUniqueKey* @_ZN11GrUniqueKeyaSERKS_(%class.GrUniqueKey*, %class.GrUniqueKey* dereferenceable(56)) local_unnamed_addr #1 comdat align 2 {
  %3 = icmp eq %class.GrUniqueKey* %0, %1
  br i1 %3, label %44, label %4

4:                                                ; preds = %2
  %5 = getelementptr inbounds %class.GrUniqueKey, %class.GrUniqueKey* %1, i64 0, i32 0, i32 0, i32 0
  %6 = load i32*, i32** %5, align 8
  %7 = getelementptr inbounds i32, i32* %6, i64 1
  %8 = load i32, i32* %7, align 4
  %9 = and i32 %8, 65535
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %11, label %20

11:                                               ; preds = %4
  %12 = getelementptr inbounds %class.GrUniqueKey, %class.GrUniqueKey* %0, i64 0, i32 0, i32 0, i32 0
  %13 = load i32*, i32** %12, align 8
  %14 = getelementptr inbounds %class.GrUniqueKey, %class.GrUniqueKey* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i64 0
  %15 = icmp eq i32* %13, %14
  br i1 %15, label %18, label %16

16:                                               ; preds = %11
  %17 = bitcast i32* %13 to i8*
  tail call void @_Z7sk_freePv(i8* %17) #15
  br label %18

18:                                               ; preds = %16, %11
  store i32* %14, i32** %12, align 8
  store i32 0, i32* %14, align 4
  %19 = getelementptr inbounds %class.GrUniqueKey, %class.GrUniqueKey* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i64 1
  store i32 0, i32* %19, align 4
  br label %44

20:                                               ; preds = %4
  %21 = lshr i32 %8, 16
  %22 = zext i32 %21 to i64
  %23 = lshr i64 %22, 2
  %24 = getelementptr inbounds %class.GrUniqueKey, %class.GrUniqueKey* %0, i64 0, i32 0, i32 0, i32 0
  %25 = load i32*, i32** %24, align 8
  %26 = getelementptr inbounds %class.GrUniqueKey, %class.GrUniqueKey* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i64 0
  %27 = icmp eq i32* %25, %26
  br i1 %27, label %30, label %28

28:                                               ; preds = %20
  %29 = bitcast i32* %25 to i8*
  tail call void @_Z7sk_freePv(i8* %29) #15
  br label %30

30:                                               ; preds = %28, %20
  %31 = icmp ugt i32 %8, 2097151
  br i1 %31, label %32, label %35

32:                                               ; preds = %30
  %33 = tail call i8* @_Z15sk_malloc_throwmm(i64 %23, i64 4) #15
  %34 = bitcast %class.GrUniqueKey* %0 to i8**
  store i8* %33, i8** %34, align 8
  br label %40

35:                                               ; preds = %30
  %36 = icmp eq i64 %23, 0
  br i1 %36, label %39, label %37

37:                                               ; preds = %35
  store i32* %26, i32** %24, align 8
  %38 = bitcast i32* %26 to i8*
  br label %40

39:                                               ; preds = %35
  store i32* null, i32** %24, align 8
  br label %40

40:                                               ; preds = %39, %37, %32
  %41 = phi i8* [ %33, %32 ], [ %38, %37 ], [ null, %39 ]
  %42 = bitcast %class.GrUniqueKey* %1 to i8**
  %43 = load i8*, i8** %42, align 8
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %41, i8* align 4 %43, i64 %22, i1 false) #15
  br label %44

44:                                               ; preds = %2, %18, %40
  %45 = getelementptr inbounds %class.GrUniqueKey, %class.GrUniqueKey* %1, i64 0, i32 1, i32 0
  %46 = load %class.SkData*, %class.SkData** %45, align 8
  %47 = icmp eq %class.SkData* %46, null
  br i1 %47, label %51, label %48

48:                                               ; preds = %44
  %49 = getelementptr inbounds %class.SkData, %class.SkData* %46, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %50 = atomicrmw add i32* %49, i32 1 monotonic, !noalias !31
  br label %51

51:                                               ; preds = %44, %48
  %52 = ptrtoint %class.SkData* %46 to i64
  %53 = getelementptr inbounds %class.GrUniqueKey, %class.GrUniqueKey* %0, i64 0, i32 1
  %54 = getelementptr inbounds %class.sk_sp.2, %class.sk_sp.2* %53, i64 0, i32 0
  %55 = load %class.SkData*, %class.SkData** %54, align 8
  %56 = bitcast %class.sk_sp.2* %53 to i64*
  store i64 %52, i64* %56, align 8
  %57 = icmp eq %class.SkData* %55, null
  br i1 %57, label %64, label %58

58:                                               ; preds = %51
  %59 = getelementptr inbounds %class.SkData, %class.SkData* %55, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %60 = atomicrmw add i32* %59, i32 -1 acq_rel
  %61 = icmp eq i32 %60, 1
  br i1 %61, label %62, label %64

62:                                               ; preds = %58
  tail call void @_ZN6SkDataD1Ev(%class.SkData* nonnull %55) #15
  %63 = bitcast %class.SkData* %55 to i8*
  tail call void @_ZN6SkDatadlEPv(i8* nonnull %63) #15
  br label %64

64:                                               ; preds = %62, %58, %51
  %65 = getelementptr inbounds %class.GrUniqueKey, %class.GrUniqueKey* %1, i64 0, i32 2
  %66 = bitcast i8** %65 to i64*
  %67 = load i64, i64* %66, align 8
  %68 = getelementptr inbounds %class.GrUniqueKey, %class.GrUniqueKey* %0, i64 0, i32 2
  %69 = bitcast i8** %68 to i64*
  store i64 %67, i64* %69, align 8
  ret %class.GrUniqueKey* %0
}

; Function Attrs: nounwind
declare void @_ZN18SkIDChangeListenerD2Ev(%class.SkIDChangeListener*) unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN12SkMessageBusI29GrUniqueKeyInvalidatedMessagejLb1EE4PostES0_(%class.GrUniqueKeyInvalidatedMessage*) local_unnamed_addr #1 comdat align 2 {
  %2 = alloca %class.GrUniqueKeyInvalidatedMessage, align 8
  %3 = tail call %class.SkMessageBus* @_ZN12SkMessageBusI29GrUniqueKeyInvalidatedMessagejLb1EE3GetEv() #15
  %4 = getelementptr inbounds %class.SkMessageBus, %class.SkMessageBus* %3, i64 0, i32 1
  %5 = getelementptr inbounds %class.SkMutex, %class.SkMutex* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %6 = atomicrmw sub i32* %5, i32 1 acquire
  %7 = icmp slt i32 %6, 1
  br i1 %7, label %8, label %10

8:                                                ; preds = %1
  %9 = getelementptr inbounds %class.SkMutex, %class.SkMutex* %4, i64 0, i32 0
  tail call void @_ZN11SkSemaphore6osWaitEv(%class.SkSemaphore* %9) #15
  br label %10

10:                                               ; preds = %1, %8
  %11 = getelementptr inbounds %class.SkMessageBus, %class.SkMessageBus* %3, i64 0, i32 0, i32 2
  %12 = load i32, i32* %11, align 4
  %13 = icmp sgt i32 %12, 0
  br i1 %13, label %14, label %26

14:                                               ; preds = %10
  %15 = getelementptr inbounds %class.SkMessageBus, %class.SkMessageBus* %3, i64 0, i32 0, i32 0
  %16 = getelementptr inbounds %class.GrUniqueKeyInvalidatedMessage, %class.GrUniqueKeyInvalidatedMessage* %0, i64 0, i32 1
  %17 = getelementptr inbounds %class.GrUniqueKeyInvalidatedMessage, %class.GrUniqueKeyInvalidatedMessage* %2, i64 0, i32 0
  %18 = getelementptr inbounds %class.GrUniqueKeyInvalidatedMessage, %class.GrUniqueKeyInvalidatedMessage* %0, i64 0, i32 0
  %19 = getelementptr inbounds %class.GrUniqueKeyInvalidatedMessage, %class.GrUniqueKeyInvalidatedMessage* %2, i64 0, i32 0, i32 0, i32 0, i32 0
  %20 = getelementptr inbounds %class.GrUniqueKeyInvalidatedMessage, %class.GrUniqueKeyInvalidatedMessage* %2, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i64 0
  %21 = getelementptr inbounds %class.GrUniqueKeyInvalidatedMessage, %class.GrUniqueKeyInvalidatedMessage* %2, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i64 1
  %22 = getelementptr inbounds %class.GrUniqueKeyInvalidatedMessage, %class.GrUniqueKeyInvalidatedMessage* %2, i64 0, i32 0, i32 1, i32 0
  %23 = getelementptr inbounds %class.GrUniqueKeyInvalidatedMessage, %class.GrUniqueKeyInvalidatedMessage* %2, i64 0, i32 1
  %24 = bitcast i32* %23 to i8*
  %25 = bitcast i32* %16 to i8*
  br label %32

26:                                               ; preds = %88, %10
  %27 = atomicrmw add i32* %5, i32 1 release
  %28 = icmp slt i32 %27, 0
  br i1 %28, label %29, label %31

29:                                               ; preds = %26
  %30 = getelementptr inbounds %class.SkMutex, %class.SkMutex* %4, i64 0, i32 0
  call void @_ZN11SkSemaphore8osSignalEi(%class.SkSemaphore* %30, i32 1) #15
  br label %31

31:                                               ; preds = %26, %29
  ret void

32:                                               ; preds = %14, %88
  %33 = phi i64 [ 0, %14 ], [ %89, %88 ]
  %34 = load %"class.SkMessageBus<GrUniqueKeyInvalidatedMessage, unsigned int, true>::Inbox"**, %"class.SkMessageBus<GrUniqueKeyInvalidatedMessage, unsigned int, true>::Inbox"*** %15, align 8
  %35 = getelementptr inbounds %"class.SkMessageBus<GrUniqueKeyInvalidatedMessage, unsigned int, true>::Inbox"*, %"class.SkMessageBus<GrUniqueKeyInvalidatedMessage, unsigned int, true>::Inbox"** %34, i64 %33
  %36 = load %"class.SkMessageBus<GrUniqueKeyInvalidatedMessage, unsigned int, true>::Inbox"*, %"class.SkMessageBus<GrUniqueKeyInvalidatedMessage, unsigned int, true>::Inbox"** %35, align 8
  %37 = getelementptr inbounds %"class.SkMessageBus<GrUniqueKeyInvalidatedMessage, unsigned int, true>::Inbox", %"class.SkMessageBus<GrUniqueKeyInvalidatedMessage, unsigned int, true>::Inbox"* %36, i64 0, i32 2
  %38 = load i32, i32* %37, align 8
  %39 = load i32, i32* %16, align 8
  %40 = icmp eq i32 %39, %38
  br i1 %40, label %41, label %88

41:                                               ; preds = %32
  store i32* %20, i32** %19, align 8
  store i32 0, i32* %20, align 8
  store i32 0, i32* %21, align 4
  store %class.SkData* null, %class.SkData** %22, align 8
  %42 = call dereferenceable(56) %class.GrUniqueKey* @_ZN11GrUniqueKeyaSERKS_(%class.GrUniqueKey* nonnull %17, %class.GrUniqueKey* dereferenceable(56) %18) #15
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %24, i8* align 8 %25, i64 5, i1 false) #15
  %43 = getelementptr inbounds %"class.SkMessageBus<GrUniqueKeyInvalidatedMessage, unsigned int, true>::Inbox", %"class.SkMessageBus<GrUniqueKeyInvalidatedMessage, unsigned int, true>::Inbox"* %36, i64 0, i32 1
  %44 = getelementptr inbounds %class.SkMutex, %class.SkMutex* %43, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %45 = atomicrmw sub i32* %44, i32 1 acquire
  %46 = icmp slt i32 %45, 1
  br i1 %46, label %47, label %49

47:                                               ; preds = %41
  %48 = getelementptr inbounds %class.SkMutex, %class.SkMutex* %43, i64 0, i32 0
  call void @_ZN11SkSemaphore6osWaitEv(%class.SkSemaphore* %48) #15
  br label %49

49:                                               ; preds = %47, %41
  %50 = getelementptr inbounds %"class.SkMessageBus<GrUniqueKeyInvalidatedMessage, unsigned int, true>::Inbox", %"class.SkMessageBus<GrUniqueKeyInvalidatedMessage, unsigned int, true>::Inbox"* %36, i64 0, i32 0
  call void @_ZN8SkTArrayI29GrUniqueKeyInvalidatedMessageLb0EE12checkReallocEiNS1_11ReallocTypeE(%class.SkTArray* %50, i32 1, i32 1) #15
  %51 = getelementptr inbounds %"class.SkMessageBus<GrUniqueKeyInvalidatedMessage, unsigned int, true>::Inbox", %"class.SkMessageBus<GrUniqueKeyInvalidatedMessage, unsigned int, true>::Inbox"* %36, i64 0, i32 0, i32 0
  %52 = load %class.GrUniqueKeyInvalidatedMessage*, %class.GrUniqueKeyInvalidatedMessage** %51, align 8
  %53 = getelementptr inbounds %"class.SkMessageBus<GrUniqueKeyInvalidatedMessage, unsigned int, true>::Inbox", %"class.SkMessageBus<GrUniqueKeyInvalidatedMessage, unsigned int, true>::Inbox"* %36, i64 0, i32 0, i32 1
  %54 = load i64, i64* %53, align 8
  %55 = lshr i64 %54, 1
  %56 = and i64 %55, 2147483647
  %57 = getelementptr inbounds %class.GrUniqueKeyInvalidatedMessage, %class.GrUniqueKeyInvalidatedMessage* %52, i64 %56
  %58 = add i64 %54, 2
  %59 = and i64 %58, 4294967294
  %60 = and i64 %54, -4294967295
  %61 = or i64 %59, %60
  store i64 %61, i64* %53, align 8
  %62 = getelementptr inbounds %class.GrUniqueKeyInvalidatedMessage, %class.GrUniqueKeyInvalidatedMessage* %57, i64 0, i32 0
  %63 = getelementptr inbounds %class.GrUniqueKeyInvalidatedMessage, %class.GrUniqueKeyInvalidatedMessage* %57, i64 0, i32 0, i32 0, i32 0, i32 0
  %64 = getelementptr inbounds %class.GrUniqueKeyInvalidatedMessage, %class.GrUniqueKeyInvalidatedMessage* %52, i64 %56, i32 0, i32 0, i32 0, i32 1, i32 0, i64 0
  store i32* %64, i32** %63, align 8
  store i32 0, i32* %64, align 4
  %65 = getelementptr inbounds %class.GrUniqueKeyInvalidatedMessage, %class.GrUniqueKeyInvalidatedMessage* %52, i64 %56, i32 0, i32 0, i32 0, i32 1, i32 0, i64 1
  store i32 0, i32* %65, align 4
  %66 = getelementptr inbounds %class.GrUniqueKeyInvalidatedMessage, %class.GrUniqueKeyInvalidatedMessage* %52, i64 %56, i32 0, i32 1, i32 0
  store %class.SkData* null, %class.SkData** %66, align 8
  %67 = call dereferenceable(56) %class.GrUniqueKey* @_ZN11GrUniqueKeyaSERKS_(%class.GrUniqueKey* %62, %class.GrUniqueKey* nonnull dereferenceable(56) %17) #15
  %68 = getelementptr inbounds %class.GrUniqueKeyInvalidatedMessage, %class.GrUniqueKeyInvalidatedMessage* %52, i64 %56, i32 1
  %69 = bitcast i32* %68 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %69, i8* align 8 %24, i64 5, i1 false) #15
  %70 = atomicrmw add i32* %44, i32 1 release
  %71 = icmp slt i32 %70, 0
  br i1 %71, label %72, label %74

72:                                               ; preds = %49
  %73 = getelementptr inbounds %class.SkMutex, %class.SkMutex* %43, i64 0, i32 0
  call void @_ZN11SkSemaphore8osSignalEi(%class.SkSemaphore* %73, i32 1) #15
  br label %74

74:                                               ; preds = %49, %72
  %75 = load %class.SkData*, %class.SkData** %22, align 8
  %76 = icmp eq %class.SkData* %75, null
  br i1 %76, label %83, label %77

77:                                               ; preds = %74
  %78 = getelementptr inbounds %class.SkData, %class.SkData* %75, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %79 = atomicrmw add i32* %78, i32 -1 acq_rel
  %80 = icmp eq i32 %79, 1
  br i1 %80, label %81, label %83

81:                                               ; preds = %77
  call void @_ZN6SkDataD1Ev(%class.SkData* nonnull %75) #15
  %82 = bitcast %class.SkData* %75 to i8*
  call void @_ZN6SkDatadlEPv(i8* nonnull %82) #15
  br label %83

83:                                               ; preds = %81, %77, %74
  %84 = load i32*, i32** %19, align 8
  %85 = icmp eq i32* %84, %20
  br i1 %85, label %88, label %86

86:                                               ; preds = %83
  %87 = bitcast i32* %84 to i8*
  call void @_Z7sk_freePv(i8* %87) #15
  br label %88

88:                                               ; preds = %86, %83, %32
  %89 = add nuw nsw i64 %33, 1
  %90 = load i32, i32* %11, align 4
  %91 = sext i32 %90 to i64
  %92 = icmp slt i64 %89, %91
  br i1 %92, label %32, label %26
}

declare %class.SkMessageBus* @_ZN12SkMessageBusI29GrUniqueKeyInvalidatedMessagejLb1EE3GetEv() local_unnamed_addr #2

declare void @_ZN11SkSemaphore6osWaitEv(%class.SkSemaphore*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN8SkTArrayI29GrUniqueKeyInvalidatedMessageLb0EE12checkReallocEiNS1_11ReallocTypeE(%class.SkTArray*, i32, i32) local_unnamed_addr #1 comdat align 2 {
  %4 = getelementptr inbounds %class.SkTArray, %class.SkTArray* %0, i64 0, i32 1
  %5 = load i64, i64* %4, align 8
  %6 = lshr i64 %5, 1
  %7 = trunc i64 %6 to i32
  %8 = and i32 %7, 2147483647
  %9 = add nsw i32 %8, %1
  %10 = sext i32 %9 to i64
  %11 = lshr i64 %5, 33
  %12 = icmp slt i64 %11, %10
  %13 = mul nsw i64 %10, 3
  %14 = icmp sle i64 %11, %13
  %15 = and i64 %5, 1
  %16 = icmp eq i64 %15, 0
  %17 = or i1 %16, %14
  br i1 %17, label %21, label %18

18:                                               ; preds = %3
  %19 = and i64 %5, 4294967296
  %20 = icmp eq i64 %19, 0
  br label %21

21:                                               ; preds = %3, %18
  %22 = phi i1 [ false, %3 ], [ %20, %18 ]
  %23 = or i1 %12, %22
  br i1 %23, label %24, label %56

24:                                               ; preds = %21
  %25 = icmp eq i32 %2, 0
  br i1 %25, label %32, label %26

26:                                               ; preds = %24
  %27 = add nsw i64 %10, 1
  %28 = ashr i64 %27, 1
  %29 = add nsw i64 %10, 7
  %30 = add nsw i64 %29, %28
  %31 = and i64 %30, -8
  br label %32

32:                                               ; preds = %24, %26
  %33 = phi i64 [ %31, %26 ], [ %10, %24 ]
  %34 = icmp eq i64 %33, %11
  br i1 %34, label %56, label %35

35:                                               ; preds = %32
  %36 = icmp slt i64 %33, 2147483647
  %37 = select i1 %36, i64 %33, i64 2147483647
  %38 = icmp sgt i64 %37, -2147483647
  %39 = select i1 %38, i64 %37, i64 -2147483647
  %40 = shl i64 %39, 33
  %41 = and i64 %5, 8589934591
  %42 = or i64 %40, %41
  store i64 %42, i64* %4, align 8
  %43 = and i64 %39, 2147483647
  %44 = tail call i8* @_Z15sk_malloc_throwmm(i64 %43, i64 64) #15
  tail call void @_ZN8SkTArrayI29GrUniqueKeyInvalidatedMessageLb0EE4moveILb0EEENSt3__19enable_ifIXntT_EvE4typeEPv(%class.SkTArray* %0, i8* %44)
  %45 = load i64, i64* %4, align 8
  %46 = and i64 %45, 1
  %47 = icmp eq i64 %46, 0
  %48 = bitcast %class.SkTArray* %0 to i8**
  br i1 %47, label %52, label %49

49:                                               ; preds = %35
  %50 = load i8*, i8** %48, align 8
  tail call void @_Z7sk_freePv(i8* %50) #15
  %51 = load i64, i64* %4, align 8
  br label %52

52:                                               ; preds = %35, %49
  %53 = phi i64 [ %51, %49 ], [ %45, %35 ]
  store i8* %44, i8** %48, align 8
  %54 = and i64 %53, -4294967298
  %55 = or i64 %54, 1
  store i64 %55, i64* %4, align 8
  br label %56

56:                                               ; preds = %52, %32, %21
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN8SkTArrayI29GrUniqueKeyInvalidatedMessageLb0EE4moveILb0EEENSt3__19enable_ifIXntT_EvE4typeEPv(%class.SkTArray*, i8*) local_unnamed_addr #1 comdat align 2 {
  %3 = getelementptr inbounds %class.SkTArray, %class.SkTArray* %0, i64 0, i32 1
  %4 = load i64, i64* %3, align 8
  %5 = and i64 %4, 4294967294
  %6 = icmp eq i64 %5, 0
  br i1 %6, label %9, label %7

7:                                                ; preds = %2
  %8 = getelementptr inbounds %class.SkTArray, %class.SkTArray* %0, i64 0, i32 0
  br label %10

9:                                                ; preds = %45, %2
  ret void

10:                                               ; preds = %7, %45
  %11 = phi i64 [ 0, %7 ], [ %46, %45 ]
  %12 = shl nuw nsw i64 %11, 6
  %13 = getelementptr inbounds i8, i8* %1, i64 %12
  %14 = load %class.GrUniqueKeyInvalidatedMessage*, %class.GrUniqueKeyInvalidatedMessage** %8, align 8
  %15 = bitcast i8* %13 to %class.GrUniqueKey*
  %16 = getelementptr inbounds %class.GrUniqueKeyInvalidatedMessage, %class.GrUniqueKeyInvalidatedMessage* %14, i64 %11, i32 0
  %17 = getelementptr inbounds i8, i8* %13, i64 8
  %18 = bitcast i8* %17 to i32*
  %19 = bitcast i8* %13 to i8**
  store i8* %17, i8** %19, align 8
  store i32 0, i32* %18, align 4
  %20 = getelementptr inbounds i8, i8* %13, i64 12
  %21 = bitcast i8* %20 to i32*
  store i32 0, i32* %21, align 4
  %22 = getelementptr inbounds i8, i8* %13, i64 40
  %23 = bitcast i8* %22 to %class.SkData**
  store %class.SkData* null, %class.SkData** %23, align 8
  %24 = tail call dereferenceable(56) %class.GrUniqueKey* @_ZN11GrUniqueKeyaSERKS_(%class.GrUniqueKey* %15, %class.GrUniqueKey* dereferenceable(56) %16) #15
  %25 = getelementptr inbounds i8, i8* %13, i64 56
  %26 = getelementptr inbounds %class.GrUniqueKeyInvalidatedMessage, %class.GrUniqueKeyInvalidatedMessage* %14, i64 %11, i32 1
  %27 = bitcast i32* %26 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %25, i8* align 8 %27, i64 5, i1 false) #15
  %28 = load %class.GrUniqueKeyInvalidatedMessage*, %class.GrUniqueKeyInvalidatedMessage** %8, align 8
  %29 = getelementptr inbounds %class.GrUniqueKeyInvalidatedMessage, %class.GrUniqueKeyInvalidatedMessage* %28, i64 %11, i32 0, i32 1, i32 0
  %30 = load %class.SkData*, %class.SkData** %29, align 8
  %31 = icmp eq %class.SkData* %30, null
  br i1 %31, label %38, label %32

32:                                               ; preds = %10
  %33 = getelementptr inbounds %class.SkData, %class.SkData* %30, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %34 = atomicrmw add i32* %33, i32 -1 acq_rel
  %35 = icmp eq i32 %34, 1
  br i1 %35, label %36, label %38

36:                                               ; preds = %32
  tail call void @_ZN6SkDataD1Ev(%class.SkData* nonnull %30) #15
  %37 = bitcast %class.SkData* %30 to i8*
  tail call void @_ZN6SkDatadlEPv(i8* nonnull %37) #15
  br label %38

38:                                               ; preds = %36, %32, %10
  %39 = getelementptr inbounds %class.GrUniqueKeyInvalidatedMessage, %class.GrUniqueKeyInvalidatedMessage* %28, i64 %11, i32 0, i32 0, i32 0, i32 0
  %40 = load i32*, i32** %39, align 8
  %41 = getelementptr inbounds %class.GrUniqueKeyInvalidatedMessage, %class.GrUniqueKeyInvalidatedMessage* %28, i64 %11, i32 0, i32 0, i32 0, i32 1, i32 0, i64 0
  %42 = icmp eq i32* %40, %41
  br i1 %42, label %45, label %43

43:                                               ; preds = %38
  %44 = bitcast i32* %40 to i8*
  tail call void @_Z7sk_freePv(i8* %44) #15
  br label %45

45:                                               ; preds = %38, %43
  %46 = add nuw nsw i64 %11, 1
  %47 = load i64, i64* %3, align 8
  %48 = lshr i64 %47, 1
  %49 = and i64 %48, 2147483647
  %50 = icmp ult i64 %46, %49
  br i1 %50, label %10, label %9
}

declare void @_ZN11SkSemaphore8osSignalEi(%class.SkSemaphore*, i32) local_unnamed_addr #2

declare i32 @_ZNK14GrContext_Base9contextIDEv(%class.GrContext_Base*) local_unnamed_addr #2

declare %class.GrGeometryProcessor* @_ZN23GrDefaultGeoProcFactory18MakeForDeviceSpaceEP12SkArenaAllocRKNS_5ColorERKNS_8CoverageERKNS_11LocalCoordsERK8SkMatrix(%class.SkArenaAlloc*, %"struct.GrDefaultGeoProcFactory::Color"* dereferenceable(20), %"struct.GrDefaultGeoProcFactory::Coverage"* dereferenceable(8), %"struct.GrDefaultGeoProcFactory::LocalCoords"* dereferenceable(16), %class.SkMatrix* dereferenceable(40)) local_unnamed_addr #2

declare %class.GrGeometryProcessor* @_ZN23GrDefaultGeoProcFactory4MakeEP12SkArenaAllocRKNS_5ColorERKNS_8CoverageERKNS_11LocalCoordsERK8SkMatrix(%class.SkArenaAlloc*, %"struct.GrDefaultGeoProcFactory::Color"* dereferenceable(20), %"struct.GrDefaultGeoProcFactory::Coverage"* dereferenceable(8), %"struct.GrDefaultGeoProcFactory::LocalCoords"* dereferenceable(16), %class.SkMatrix* dereferenceable(40)) local_unnamed_addr #2

declare %class.GrProgramInfo* @_ZN35GrSimpleMeshDrawOpHelperWithStencil28createProgramInfoWithStencilEPK6GrCapsP12SkArenaAllocRK18GrSurfaceProxyViewO13GrAppliedClipRKN15GrXferProcessor12DstProxyViewEP19GrGeometryProcessor15GrPrimitiveType18GrXferBarrierFlags8GrLoadOp(%class.GrSimpleMeshDrawOpHelperWithStencil*, %class.GrCaps*, %class.SkArenaAlloc*, %class.GrSurfaceProxyView* dereferenceable(16), %class.GrAppliedClip* dereferenceable(72), %"class.GrXferProcessor::DstProxyView"* dereferenceable(32), %class.GrGeometryProcessor*, i8 zeroext, i32, i32) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN22GrEagerVertexAllocatorD2Ev(%class.GrEagerVertexAllocator*) unnamed_addr #1 comdat align 2 {
  ret void
}

declare void @_ZNK6SkPath9transformERK8SkMatrixPS_22SkApplyPerspectiveClip(%class.SkPath*, %class.SkMatrix* dereferenceable(40), %class.SkPath*, i32) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN29GrEagerDynamicVertexAllocator4lockEmi(%class.GrEagerDynamicVertexAllocator*, i64, i32) unnamed_addr #1 comdat align 2 {
  %4 = getelementptr inbounds %class.GrEagerDynamicVertexAllocator, %class.GrEagerDynamicVertexAllocator* %0, i64 0, i32 1
  %5 = load %"class.GrMeshDrawOp::Target"*, %"class.GrMeshDrawOp::Target"** %4, align 8
  %6 = getelementptr inbounds %class.GrEagerDynamicVertexAllocator, %class.GrEagerDynamicVertexAllocator* %0, i64 0, i32 2
  %7 = load %class.sk_sp.246*, %class.sk_sp.246** %6, align 8
  %8 = getelementptr inbounds %class.GrEagerDynamicVertexAllocator, %class.GrEagerDynamicVertexAllocator* %0, i64 0, i32 3
  %9 = load i32*, i32** %8, align 8
  %10 = bitcast %"class.GrMeshDrawOp::Target"* %5 to i8* (%"class.GrMeshDrawOp::Target"*, i64, i32, %class.sk_sp.246*, i32*)***
  %11 = load i8* (%"class.GrMeshDrawOp::Target"*, i64, i32, %class.sk_sp.246*, i32*)**, i8* (%"class.GrMeshDrawOp::Target"*, i64, i32, %class.sk_sp.246*, i32*)*** %10, align 8
  %12 = getelementptr inbounds i8* (%"class.GrMeshDrawOp::Target"*, i64, i32, %class.sk_sp.246*, i32*)*, i8* (%"class.GrMeshDrawOp::Target"*, i64, i32, %class.sk_sp.246*, i32*)** %11, i64 3
  %13 = load i8* (%"class.GrMeshDrawOp::Target"*, i64, i32, %class.sk_sp.246*, i32*)*, i8* (%"class.GrMeshDrawOp::Target"*, i64, i32, %class.sk_sp.246*, i32*)** %12, align 8
  %14 = tail call i8* %13(%"class.GrMeshDrawOp::Target"* %5, i64 %1, i32 %2, %class.sk_sp.246* %7, i32* %9) #15
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %3
  %17 = getelementptr inbounds %class.GrEagerDynamicVertexAllocator, %class.GrEagerDynamicVertexAllocator* %0, i64 0, i32 4
  store i64 %1, i64* %17, align 8
  %18 = getelementptr inbounds %class.GrEagerDynamicVertexAllocator, %class.GrEagerDynamicVertexAllocator* %0, i64 0, i32 5
  store i32 %2, i32* %18, align 8
  br label %31

19:                                               ; preds = %3
  %20 = load %class.sk_sp.246*, %class.sk_sp.246** %6, align 8
  %21 = getelementptr inbounds %class.sk_sp.246, %class.sk_sp.246* %20, i64 0, i32 0
  %22 = load %class.GrBuffer*, %class.GrBuffer** %21, align 8
  store %class.GrBuffer* null, %class.GrBuffer** %21, align 8
  %23 = icmp eq %class.GrBuffer* %22, null
  br i1 %23, label %29, label %24

24:                                               ; preds = %19
  %25 = bitcast %class.GrBuffer* %22 to void (%class.GrBuffer*)***
  %26 = load void (%class.GrBuffer*)**, void (%class.GrBuffer*)*** %25, align 8
  %27 = getelementptr inbounds void (%class.GrBuffer*)*, void (%class.GrBuffer*)** %26, i64 3
  %28 = load void (%class.GrBuffer*)*, void (%class.GrBuffer*)** %27, align 8
  tail call void %28(%class.GrBuffer* nonnull %22) #15
  br label %29

29:                                               ; preds = %19, %24
  %30 = load i32*, i32** %8, align 8
  store i32 0, i32* %30, align 4
  br label %31

31:                                               ; preds = %16, %29
  ret i8* %14
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN29GrEagerDynamicVertexAllocator6unlockEi(%class.GrEagerDynamicVertexAllocator*, i32) unnamed_addr #1 comdat align 2 {
  %3 = getelementptr inbounds %class.GrEagerDynamicVertexAllocator, %class.GrEagerDynamicVertexAllocator* %0, i64 0, i32 1
  %4 = load %"class.GrMeshDrawOp::Target"*, %"class.GrMeshDrawOp::Target"** %3, align 8
  %5 = getelementptr inbounds %class.GrEagerDynamicVertexAllocator, %class.GrEagerDynamicVertexAllocator* %0, i64 0, i32 5
  %6 = load i32, i32* %5, align 8
  %7 = sub nsw i32 %6, %1
  %8 = getelementptr inbounds %class.GrEagerDynamicVertexAllocator, %class.GrEagerDynamicVertexAllocator* %0, i64 0, i32 4
  %9 = load i64, i64* %8, align 8
  %10 = bitcast %"class.GrMeshDrawOp::Target"* %4 to void (%"class.GrMeshDrawOp::Target"*, i32, i64)***
  %11 = load void (%"class.GrMeshDrawOp::Target"*, i32, i64)**, void (%"class.GrMeshDrawOp::Target"*, i32, i64)*** %10, align 8
  %12 = getelementptr inbounds void (%"class.GrMeshDrawOp::Target"*, i32, i64)*, void (%"class.GrMeshDrawOp::Target"*, i32, i64)** %11, i64 10
  %13 = load void (%"class.GrMeshDrawOp::Target"*, i32, i64)*, void (%"class.GrMeshDrawOp::Target"*, i32, i64)** %12, align 8
  tail call void %13(%"class.GrMeshDrawOp::Target"* %4, i32 %7, i64 %9) #15
  %14 = icmp eq i32 %1, 0
  br i1 %14, label %15, label %29

15:                                               ; preds = %2
  %16 = getelementptr inbounds %class.GrEagerDynamicVertexAllocator, %class.GrEagerDynamicVertexAllocator* %0, i64 0, i32 2
  %17 = load %class.sk_sp.246*, %class.sk_sp.246** %16, align 8
  %18 = getelementptr inbounds %class.sk_sp.246, %class.sk_sp.246* %17, i64 0, i32 0
  %19 = load %class.GrBuffer*, %class.GrBuffer** %18, align 8
  store %class.GrBuffer* null, %class.GrBuffer** %18, align 8
  %20 = icmp eq %class.GrBuffer* %19, null
  br i1 %20, label %26, label %21

21:                                               ; preds = %15
  %22 = bitcast %class.GrBuffer* %19 to void (%class.GrBuffer*)***
  %23 = load void (%class.GrBuffer*)**, void (%class.GrBuffer*)*** %22, align 8
  %24 = getelementptr inbounds void (%class.GrBuffer*)*, void (%class.GrBuffer*)** %23, i64 3
  %25 = load void (%class.GrBuffer*)*, void (%class.GrBuffer*)** %24, align 8
  tail call void %25(%class.GrBuffer* nonnull %19) #15
  br label %26

26:                                               ; preds = %15, %21
  %27 = getelementptr inbounds %class.GrEagerDynamicVertexAllocator, %class.GrEagerDynamicVertexAllocator* %0, i64 0, i32 3
  %28 = load i32*, i32** %27, align 8
  store i32 0, i32* %28, align 4
  br label %29

29:                                               ; preds = %2, %26
  store i32 0, i32* %5, align 8
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN29GrEagerDynamicVertexAllocatorD0Ev(%class.GrEagerDynamicVertexAllocator*) unnamed_addr #5 comdat align 2 {
  %2 = bitcast %class.GrEagerDynamicVertexAllocator* %0 to i8*
  tail call void @_ZdlPv(i8* %2) #16
  ret void
}

declare i32 @_ZNK16GrAATriangulator18polysToAATrianglesEPN14GrTriangulator4PolyEP22GrEagerVertexAllocator(%class.GrAATriangulator*, %"struct.GrTriangulator::Poly"*, %class.GrEagerVertexAllocator*) local_unnamed_addr #2

declare i8* @_ZN12SkArenaAlloc21allocObjectWithFooterEjj(%class.SkArenaAlloc*, i32, i32) local_unnamed_addr #2

declare void @_ZN12SkArenaAlloc13installFooterEPFPcS0_Ej(%class.SkArenaAlloc*, i8* (i8*)*, i32) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZZN12SkArenaAlloc4makeIZNS_4makeI12GrSimpleMeshJEEEPT_DpOT0_EUlPvE_EEDTclfp_LDnEEEOS3_ENUlPcE_8__invokeESC_(i8*) #5 comdat align 2 {
  %2 = getelementptr inbounds i8, i8* %0, i64 -57
  %3 = getelementptr inbounds i8, i8* %0, i64 -25
  %4 = bitcast i8* %3 to %class.GrBuffer**
  %5 = load %class.GrBuffer*, %class.GrBuffer** %4, align 8
  %6 = icmp eq %class.GrBuffer* %5, null
  br i1 %6, label %12, label %7

7:                                                ; preds = %1
  %8 = bitcast %class.GrBuffer* %5 to void (%class.GrBuffer*)***
  %9 = load void (%class.GrBuffer*)**, void (%class.GrBuffer*)*** %8, align 8
  %10 = getelementptr inbounds void (%class.GrBuffer*)*, void (%class.GrBuffer*)** %9, i64 3
  %11 = load void (%class.GrBuffer*)*, void (%class.GrBuffer*)** %10, align 8
  tail call void %11(%class.GrBuffer* nonnull %5) #15
  br label %12

12:                                               ; preds = %7, %1
  %13 = bitcast i8* %2 to %class.GrBuffer**
  %14 = load %class.GrBuffer*, %class.GrBuffer** %13, align 8
  %15 = icmp eq %class.GrBuffer* %14, null
  br i1 %15, label %21, label %16

16:                                               ; preds = %12
  %17 = bitcast %class.GrBuffer* %14 to void (%class.GrBuffer*)***
  %18 = load void (%class.GrBuffer*)**, void (%class.GrBuffer*)*** %17, align 8
  %19 = getelementptr inbounds void (%class.GrBuffer*)*, void (%class.GrBuffer*)** %18, i64 3
  %20 = load void (%class.GrBuffer*)*, void (%class.GrBuffer*)** %19, align 8
  tail call void %20(%class.GrBuffer* nonnull %14) #15
  br label %21

21:                                               ; preds = %12, %16
  ret i8* %2
}

declare void @_ZN18GrResourceProvider12createBufferEm15GrGpuBufferType15GrAccessPatternPKv(%class.sk_sp.1* sret, %class.GrResourceProvider*, i64, i32, i32, i8*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind ssp uwtable
define internal void @_ZN12_GLOBAL__N_121StaticVertexAllocatorD2Ev(%"class.(anonymous namespace)::StaticVertexAllocator"* nocapture) unnamed_addr #5 align 2 {
  %2 = getelementptr inbounds %"class.(anonymous namespace)::StaticVertexAllocator", %"class.(anonymous namespace)::StaticVertexAllocator"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN12_GLOBAL__N_121StaticVertexAllocatorE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.(anonymous namespace)::StaticVertexAllocator", %"class.(anonymous namespace)::StaticVertexAllocator"* %0, i64 0, i32 2, i32 0
  %4 = load %class.GrGpuBuffer*, %class.GrGpuBuffer** %3, align 8
  %5 = icmp eq %class.GrGpuBuffer* %4, null
  br i1 %5, label %14, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %class.GrGpuBuffer, %class.GrGpuBuffer* %4, i64 0, i32 0, i32 1
  %8 = getelementptr inbounds %class.GrIORef, %class.GrIORef* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %9 = atomicrmw add i32* %8, i32 -1 acq_rel
  %10 = icmp eq i32 %9, 1
  br i1 %10, label %11, label %14

11:                                               ; preds = %6
  %12 = getelementptr inbounds %class.GrIORef, %class.GrIORef* %7, i64 -1
  %13 = bitcast %class.GrIORef* %12 to %class.GrGpuResource*
  tail call void @_ZNK13GrGpuResource19notifyARefCntIsZeroEN7GrIORefIS_E14LastRemovedRefE(%class.GrGpuResource* %13, i32 0) #15
  br label %14

14:                                               ; preds = %1, %6, %11
  %15 = getelementptr inbounds %"class.(anonymous namespace)::StaticVertexAllocator", %"class.(anonymous namespace)::StaticVertexAllocator"* %0, i64 0, i32 1, i32 0
  %16 = load %"class.GrThreadSafeCache::VertexData"*, %"class.GrThreadSafeCache::VertexData"** %15, align 8
  %17 = icmp eq %"class.GrThreadSafeCache::VertexData"* %16, null
  br i1 %17, label %24, label %18

18:                                               ; preds = %14
  %19 = getelementptr inbounds %"class.GrThreadSafeCache::VertexData", %"class.GrThreadSafeCache::VertexData"* %16, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %20 = atomicrmw add i32* %19, i32 -1 acq_rel
  %21 = icmp eq i32 %20, 1
  br i1 %21, label %22, label %24

22:                                               ; preds = %18
  tail call void @_ZN17GrThreadSafeCache10VertexDataD1Ev(%"class.GrThreadSafeCache::VertexData"* nonnull %16) #15
  %23 = bitcast %"class.GrThreadSafeCache::VertexData"* %16 to i8*
  tail call void @_ZdlPv(i8* %23) #16
  br label %24

24:                                               ; preds = %14, %18, %22
  ret void
}

declare void @_ZNK13GrGpuResource19notifyARefCntIsZeroEN7GrIORefIS_E14LastRemovedRefE(%class.GrGpuResource*, i32) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define internal i8* @_ZN12_GLOBAL__N_121StaticVertexAllocator4lockEmi(%"class.(anonymous namespace)::StaticVertexAllocator"* nocapture, i64, i32) unnamed_addr #1 align 2 {
  %4 = alloca %class.sk_sp.1, align 8
  %5 = sext i32 %2 to i64
  %6 = mul i64 %5, %1
  %7 = bitcast %class.sk_sp.1* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7) #15
  %8 = getelementptr inbounds %"class.(anonymous namespace)::StaticVertexAllocator", %"class.(anonymous namespace)::StaticVertexAllocator"* %0, i64 0, i32 3
  %9 = load %class.GrResourceProvider*, %class.GrResourceProvider** %8, align 8
  call void @_ZN18GrResourceProvider12createBufferEm15GrGpuBufferType15GrAccessPatternPKv(%class.sk_sp.1* nonnull sret %4, %class.GrResourceProvider* %9, i64 %6, i32 0, i32 1, i8* null) #15
  %10 = getelementptr inbounds %"class.(anonymous namespace)::StaticVertexAllocator", %"class.(anonymous namespace)::StaticVertexAllocator"* %0, i64 0, i32 2
  %11 = getelementptr inbounds %class.sk_sp.1, %class.sk_sp.1* %4, i64 0, i32 0
  %12 = bitcast %class.sk_sp.1* %4 to i64*
  %13 = load i64, i64* %12, align 8
  store %class.GrGpuBuffer* null, %class.GrGpuBuffer** %11, align 8
  %14 = getelementptr inbounds %class.sk_sp.1, %class.sk_sp.1* %10, i64 0, i32 0
  %15 = load %class.GrGpuBuffer*, %class.GrGpuBuffer** %14, align 8
  %16 = bitcast %class.sk_sp.1* %10 to i64*
  store i64 %13, i64* %16, align 8
  %17 = icmp eq %class.GrGpuBuffer* %15, null
  br i1 %17, label %26, label %18

18:                                               ; preds = %3
  %19 = getelementptr inbounds %class.GrGpuBuffer, %class.GrGpuBuffer* %15, i64 0, i32 0, i32 1
  %20 = getelementptr inbounds %class.GrIORef, %class.GrIORef* %19, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %21 = atomicrmw add i32* %20, i32 -1 acq_rel
  %22 = icmp eq i32 %21, 1
  br i1 %22, label %23, label %26

23:                                               ; preds = %18
  %24 = getelementptr inbounds %class.GrIORef, %class.GrIORef* %19, i64 -1
  %25 = bitcast %class.GrIORef* %24 to %class.GrGpuResource*
  call void @_ZNK13GrGpuResource19notifyARefCntIsZeroEN7GrIORefIS_E14LastRemovedRefE(%class.GrGpuResource* %25, i32 0) #15
  br label %26

26:                                               ; preds = %3, %18, %23
  %27 = load %class.GrGpuBuffer*, %class.GrGpuBuffer** %11, align 8
  %28 = icmp eq %class.GrGpuBuffer* %27, null
  br i1 %28, label %37, label %29

29:                                               ; preds = %26
  %30 = getelementptr inbounds %class.GrGpuBuffer, %class.GrGpuBuffer* %27, i64 0, i32 0, i32 1
  %31 = getelementptr inbounds %class.GrIORef, %class.GrIORef* %30, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %32 = atomicrmw add i32* %31, i32 -1 acq_rel
  %33 = icmp eq i32 %32, 1
  br i1 %33, label %34, label %37

34:                                               ; preds = %29
  %35 = getelementptr inbounds %class.GrIORef, %class.GrIORef* %30, i64 -1
  %36 = bitcast %class.GrIORef* %35 to %class.GrGpuResource*
  call void @_ZNK13GrGpuResource19notifyARefCntIsZeroEN7GrIORefIS_E14LastRemovedRefE(%class.GrGpuResource* %36, i32 0) #15
  br label %37

37:                                               ; preds = %26, %29, %34
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7) #15
  %38 = load %class.GrGpuBuffer*, %class.GrGpuBuffer** %14, align 8
  %39 = icmp eq %class.GrGpuBuffer* %38, null
  br i1 %39, label %59, label %40

40:                                               ; preds = %37
  %41 = getelementptr inbounds %"class.(anonymous namespace)::StaticVertexAllocator", %"class.(anonymous namespace)::StaticVertexAllocator"* %0, i64 0, i32 4
  %42 = load i8, i8* %41, align 8, !range !2
  %43 = icmp eq i8 %42, 0
  br i1 %43, label %44, label %47

44:                                               ; preds = %40
  %45 = getelementptr inbounds %"class.(anonymous namespace)::StaticVertexAllocator", %"class.(anonymous namespace)::StaticVertexAllocator"* %0, i64 0, i32 5
  %46 = load i8*, i8** %45, align 8
  br label %50

47:                                               ; preds = %40
  %48 = call i8* @_ZN11GrGpuBuffer3mapEv(%class.GrGpuBuffer* nonnull %38) #15
  %49 = getelementptr inbounds %"class.(anonymous namespace)::StaticVertexAllocator", %"class.(anonymous namespace)::StaticVertexAllocator"* %0, i64 0, i32 5
  store i8* %48, i8** %49, align 8
  br label %50

50:                                               ; preds = %44, %47
  %51 = phi i8* [ %46, %44 ], [ %48, %47 ]
  %52 = icmp eq i8* %51, null
  br i1 %52, label %53, label %56

53:                                               ; preds = %50
  %54 = getelementptr inbounds %"class.(anonymous namespace)::StaticVertexAllocator", %"class.(anonymous namespace)::StaticVertexAllocator"* %0, i64 0, i32 5
  %55 = call i8* @_Z15sk_malloc_flagsmj(i64 %6, i32 2) #15
  store i8* %55, i8** %54, align 8
  store i8 0, i8* %41, align 8
  br label %56

56:                                               ; preds = %50, %53
  %57 = phi i8* [ %51, %50 ], [ %55, %53 ]
  %58 = getelementptr inbounds %"class.(anonymous namespace)::StaticVertexAllocator", %"class.(anonymous namespace)::StaticVertexAllocator"* %0, i64 0, i32 6
  store i64 %1, i64* %58, align 8
  br label %59

59:                                               ; preds = %37, %56
  %60 = phi i8* [ %57, %56 ], [ null, %37 ]
  ret i8* %60
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN12_GLOBAL__N_121StaticVertexAllocator6unlockEi(%"class.(anonymous namespace)::StaticVertexAllocator"* nocapture, i32) unnamed_addr #1 align 2 {
  %3 = alloca %class.sk_sp, align 8
  %4 = alloca %class.sk_sp.1, align 8
  %5 = getelementptr inbounds %"class.(anonymous namespace)::StaticVertexAllocator", %"class.(anonymous namespace)::StaticVertexAllocator"* %0, i64 0, i32 4
  %6 = load i8, i8* %5, align 8, !range !2
  %7 = icmp eq i8 %6, 0
  %8 = getelementptr inbounds %"class.(anonymous namespace)::StaticVertexAllocator", %"class.(anonymous namespace)::StaticVertexAllocator"* %0, i64 0, i32 2
  %9 = getelementptr inbounds %class.sk_sp.1, %class.sk_sp.1* %8, i64 0, i32 0
  %10 = load %class.GrGpuBuffer*, %class.GrGpuBuffer** %9, align 8
  br i1 %7, label %12, label %11

11:                                               ; preds = %2
  tail call void @_ZN11GrGpuBuffer5unmapEv(%class.GrGpuBuffer* %10) #15
  br label %21

12:                                               ; preds = %2
  %13 = getelementptr inbounds %"class.(anonymous namespace)::StaticVertexAllocator", %"class.(anonymous namespace)::StaticVertexAllocator"* %0, i64 0, i32 5
  %14 = load i8*, i8** %13, align 8
  %15 = sext i32 %1 to i64
  %16 = getelementptr inbounds %"class.(anonymous namespace)::StaticVertexAllocator", %"class.(anonymous namespace)::StaticVertexAllocator"* %0, i64 0, i32 6
  %17 = load i64, i64* %16, align 8
  %18 = mul i64 %17, %15
  %19 = tail call zeroext i1 @_ZN11GrGpuBuffer10updateDataEPKvm(%class.GrGpuBuffer* %10, i8* %14, i64 %18) #15
  %20 = load i8*, i8** %13, align 8
  tail call void @_Z7sk_freePv(i8* %20) #15
  br label %21

21:                                               ; preds = %12, %11
  %22 = bitcast %class.sk_sp* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %22) #15
  %23 = bitcast %class.sk_sp.1* %8 to i64*
  %24 = load i64, i64* %23, align 8
  store %class.GrGpuBuffer* null, %class.GrGpuBuffer** %9, align 8
  %25 = bitcast %class.sk_sp.1* %4 to i64*
  store i64 %24, i64* %25, align 8
  %26 = getelementptr inbounds %"class.(anonymous namespace)::StaticVertexAllocator", %"class.(anonymous namespace)::StaticVertexAllocator"* %0, i64 0, i32 6
  %27 = load i64, i64* %26, align 8
  call void @_ZN17GrThreadSafeCache14MakeVertexDataE5sk_spI11GrGpuBufferEim(%class.sk_sp* nonnull sret %3, %class.sk_sp.1* nonnull %4, i32 %1, i64 %27) #15
  %28 = getelementptr inbounds %"class.(anonymous namespace)::StaticVertexAllocator", %"class.(anonymous namespace)::StaticVertexAllocator"* %0, i64 0, i32 1
  %29 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %3, i64 0, i32 0
  %30 = bitcast %class.sk_sp* %3 to i64*
  %31 = load i64, i64* %30, align 8
  store %"class.GrThreadSafeCache::VertexData"* null, %"class.GrThreadSafeCache::VertexData"** %29, align 8
  %32 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %28, i64 0, i32 0
  %33 = load %"class.GrThreadSafeCache::VertexData"*, %"class.GrThreadSafeCache::VertexData"** %32, align 8
  %34 = bitcast %class.sk_sp* %28 to i64*
  store i64 %31, i64* %34, align 8
  %35 = icmp eq %"class.GrThreadSafeCache::VertexData"* %33, null
  br i1 %35, label %42, label %36

36:                                               ; preds = %21
  %37 = getelementptr inbounds %"class.GrThreadSafeCache::VertexData", %"class.GrThreadSafeCache::VertexData"* %33, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %38 = atomicrmw add i32* %37, i32 -1 acq_rel
  %39 = icmp eq i32 %38, 1
  br i1 %39, label %40, label %42

40:                                               ; preds = %36
  call void @_ZN17GrThreadSafeCache10VertexDataD1Ev(%"class.GrThreadSafeCache::VertexData"* nonnull %33) #15
  %41 = bitcast %"class.GrThreadSafeCache::VertexData"* %33 to i8*
  call void @_ZdlPv(i8* %41) #16
  br label %42

42:                                               ; preds = %21, %36, %40
  %43 = load %"class.GrThreadSafeCache::VertexData"*, %"class.GrThreadSafeCache::VertexData"** %29, align 8
  %44 = icmp eq %"class.GrThreadSafeCache::VertexData"* %43, null
  br i1 %44, label %51, label %45

45:                                               ; preds = %42
  %46 = getelementptr inbounds %"class.GrThreadSafeCache::VertexData", %"class.GrThreadSafeCache::VertexData"* %43, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %47 = atomicrmw add i32* %46, i32 -1 acq_rel
  %48 = icmp eq i32 %47, 1
  br i1 %48, label %49, label %51

49:                                               ; preds = %45
  call void @_ZN17GrThreadSafeCache10VertexDataD1Ev(%"class.GrThreadSafeCache::VertexData"* nonnull %43) #15
  %50 = bitcast %"class.GrThreadSafeCache::VertexData"* %43 to i8*
  call void @_ZdlPv(i8* %50) #16
  br label %51

51:                                               ; preds = %42, %45, %49
  %52 = getelementptr inbounds %class.sk_sp.1, %class.sk_sp.1* %4, i64 0, i32 0
  %53 = load %class.GrGpuBuffer*, %class.GrGpuBuffer** %52, align 8
  %54 = icmp eq %class.GrGpuBuffer* %53, null
  br i1 %54, label %63, label %55

55:                                               ; preds = %51
  %56 = getelementptr inbounds %class.GrGpuBuffer, %class.GrGpuBuffer* %53, i64 0, i32 0, i32 1
  %57 = getelementptr inbounds %class.GrIORef, %class.GrIORef* %56, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %58 = atomicrmw add i32* %57, i32 -1 acq_rel
  %59 = icmp eq i32 %58, 1
  br i1 %59, label %60, label %63

60:                                               ; preds = %55
  %61 = getelementptr inbounds %class.GrIORef, %class.GrIORef* %56, i64 -1
  %62 = bitcast %class.GrIORef* %61 to %class.GrGpuResource*
  call void @_ZNK13GrGpuResource19notifyARefCntIsZeroEN7GrIORefIS_E14LastRemovedRefE(%class.GrGpuResource* %62, i32 0) #15
  br label %63

63:                                               ; preds = %51, %55, %60
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %22) #15
  %64 = getelementptr inbounds %"class.(anonymous namespace)::StaticVertexAllocator", %"class.(anonymous namespace)::StaticVertexAllocator"* %0, i64 0, i32 5
  %65 = bitcast i8** %64 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %65, i8 0, i64 16, i1 false)
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define internal void @_ZN12_GLOBAL__N_121StaticVertexAllocatorD0Ev(%"class.(anonymous namespace)::StaticVertexAllocator"*) unnamed_addr #5 align 2 {
  %2 = getelementptr inbounds %"class.(anonymous namespace)::StaticVertexAllocator", %"class.(anonymous namespace)::StaticVertexAllocator"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN12_GLOBAL__N_121StaticVertexAllocatorE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.(anonymous namespace)::StaticVertexAllocator", %"class.(anonymous namespace)::StaticVertexAllocator"* %0, i64 0, i32 2, i32 0
  %4 = load %class.GrGpuBuffer*, %class.GrGpuBuffer** %3, align 8
  %5 = icmp eq %class.GrGpuBuffer* %4, null
  br i1 %5, label %14, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %class.GrGpuBuffer, %class.GrGpuBuffer* %4, i64 0, i32 0, i32 1
  %8 = getelementptr inbounds %class.GrIORef, %class.GrIORef* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %9 = atomicrmw add i32* %8, i32 -1 acq_rel
  %10 = icmp eq i32 %9, 1
  br i1 %10, label %11, label %14

11:                                               ; preds = %6
  %12 = getelementptr inbounds %class.GrIORef, %class.GrIORef* %7, i64 -1
  %13 = bitcast %class.GrIORef* %12 to %class.GrGpuResource*
  tail call void @_ZNK13GrGpuResource19notifyARefCntIsZeroEN7GrIORefIS_E14LastRemovedRefE(%class.GrGpuResource* %13, i32 0) #15
  br label %14

14:                                               ; preds = %11, %6, %1
  %15 = getelementptr inbounds %"class.(anonymous namespace)::StaticVertexAllocator", %"class.(anonymous namespace)::StaticVertexAllocator"* %0, i64 0, i32 1, i32 0
  %16 = load %"class.GrThreadSafeCache::VertexData"*, %"class.GrThreadSafeCache::VertexData"** %15, align 8
  %17 = icmp eq %"class.GrThreadSafeCache::VertexData"* %16, null
  br i1 %17, label %24, label %18

18:                                               ; preds = %14
  %19 = getelementptr inbounds %"class.GrThreadSafeCache::VertexData", %"class.GrThreadSafeCache::VertexData"* %16, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %20 = atomicrmw add i32* %19, i32 -1 acq_rel
  %21 = icmp eq i32 %20, 1
  br i1 %21, label %22, label %24

22:                                               ; preds = %18
  tail call void @_ZN17GrThreadSafeCache10VertexDataD1Ev(%"class.GrThreadSafeCache::VertexData"* nonnull %16) #15
  %23 = bitcast %"class.GrThreadSafeCache::VertexData"* %16 to i8*
  tail call void @_ZdlPv(i8* %23) #16
  br label %24

24:                                               ; preds = %14, %18, %22
  %25 = bitcast %"class.(anonymous namespace)::StaticVertexAllocator"* %0 to i8*
  tail call void @_ZdlPv(i8* %25) #16
  ret void
}

declare i8* @_ZN11GrGpuBuffer3mapEv(%class.GrGpuBuffer*) local_unnamed_addr #2

declare void @_ZN11GrGpuBuffer5unmapEv(%class.GrGpuBuffer*) local_unnamed_addr #2

declare zeroext i1 @_ZN11GrGpuBuffer10updateDataEPKvm(%class.GrGpuBuffer*, i8*, i64) local_unnamed_addr #2

declare void @_ZN17GrThreadSafeCache14MakeVertexDataE5sk_spI11GrGpuBufferEim(%class.sk_sp* sret, %class.sk_sp.1*, i32, i64) local_unnamed_addr #2

declare void @_ZN14GrProcessorSetC1EO7GrPaint(%class.GrProcessorSet*, %class.GrPaint* dereferenceable(48)) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__110__function16__policy_invokerIFvP4GrOpjEE12__call_emptyEPKNS0_16__policy_storageES3_j(%"union.std::__1::__function::__policy_storage"*, %class.GrOp*, i32) #1 comdat align 2 {
  tail call void @_ZNSt3__125__throw_bad_function_callEv() #18
  unreachable
}

; Function Attrs: inlinehint noreturn nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__125__throw_bad_function_callEv() local_unnamed_addr #13 comdat {
  tail call void @abort() #17
  unreachable
}

; Function Attrs: noreturn nounwind
declare void @abort() local_unnamed_addr #14

; Function Attrs: nounwind
declare void @_ZN17GrThreadSafeCache10VertexDataD1Ev(%"class.GrThreadSafeCache::VertexData"*) unnamed_addr #4

attributes #0 = { argmemonly nounwind }
attributes #1 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nofree norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nofree nounwind }
attributes #10 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #11 = { cold noreturn nounwind }
attributes #12 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #13 = { inlinehint noreturn nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #14 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #15 = { nounwind }
attributes #16 = { builtin nounwind }
attributes #17 = { noreturn nounwind }
attributes #18 = { noreturn }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
!3 = !{!"branch_weights", i32 1, i32 1048575}
!4 = !{!5}
!5 = distinct !{!5, !6, !"_ZN20GrCpuVertexAllocator16detachVertexDataEv: argument 0"}
!6 = distinct !{!6, !"_ZN20GrCpuVertexAllocator16detachVertexDataEv"}
!7 = !{!8}
!8 = distinct !{!8, !9, !"_ZN12_GLOBAL__N_111create_dataEibf: argument 0"}
!9 = distinct !{!9, !"_ZN12_GLOBAL__N_111create_dataEibf"}
!10 = !{!11}
!11 = distinct !{!11, !12, !"_Z10sk_make_spIN12_GLOBAL__N_120UniqueKeyInvalidatorEJR11GrUniqueKeyjEE5sk_spIT_EDpOT0_: argument 0"}
!12 = distinct !{!12, !"_Z10sk_make_spIN12_GLOBAL__N_120UniqueKeyInvalidatorEJR11GrUniqueKeyjEE5sk_spIT_EDpOT0_"}
!13 = !{!14}
!14 = distinct !{!14, !15, !"_ZNK12_GLOBAL__N_119TriangulatingPathOp7getPathEv: argument 0"}
!15 = distinct !{!15, !"_ZNK12_GLOBAL__N_119TriangulatingPathOp7getPathEv"}
!16 = !{!17}
!17 = distinct !{!17, !18, !"_ZN17GrThreadSafeCache10VertexData12refGpuBufferEv: argument 0"}
!18 = distinct !{!18, !"_ZN17GrThreadSafeCache10VertexData12refGpuBufferEv"}
!19 = !{!20}
!20 = distinct !{!20, !21, !"_ZN12_GLOBAL__N_121StaticVertexAllocator16detachVertexDataEv: argument 0"}
!21 = distinct !{!21, !"_ZN12_GLOBAL__N_121StaticVertexAllocator16detachVertexDataEv"}
!22 = !{!23}
!23 = distinct !{!23, !24, !"_ZN12_GLOBAL__N_111create_dataEibf: argument 0"}
!24 = distinct !{!24, !"_ZN12_GLOBAL__N_111create_dataEibf"}
!25 = !{!26}
!26 = distinct !{!26, !27, !"_Z10sk_make_spIN12_GLOBAL__N_120UniqueKeyInvalidatorEJR11GrUniqueKeyjEE5sk_spIT_EDpOT0_: argument 0"}
!27 = distinct !{!27, !"_Z10sk_make_spIN12_GLOBAL__N_120UniqueKeyInvalidatorEJR11GrUniqueKeyjEE5sk_spIT_EDpOT0_"}
!28 = !{!29}
!29 = distinct !{!29, !30, !"_ZN17GrThreadSafeCache10VertexData12refGpuBufferEv: argument 0"}
!30 = distinct !{!30, !"_ZN17GrThreadSafeCache10VertexData12refGpuBufferEv"}
!31 = !{!32}
!32 = distinct !{!32, !33, !"_Z9sk_ref_spI6SkDataE5sk_spIT_EPS2_: argument 0"}
!33 = distinct !{!33, !"_Z9sk_ref_spI6SkDataE5sk_spIT_EPS2_"}
