; ModuleID = '../../third_party/skia/src/gpu/ops/GrQuadPerEdgeAA.cpp'
source_filename = "../../third_party/skia/src/gpu/ops/GrQuadPerEdgeAA.cpp"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%struct.SkRect = type { float, float, float, float }
%"class.GrGeometryProcessor::Attribute" = type { i8*, i32, i32 }
%"class.GrQuadPerEdgeAA::Tessellator" = type { %"class.GrQuadUtils::TessellationHelper", %"struct.GrQuadPerEdgeAA::VertexSpec", %struct.GrVertexWriter, void (%struct.GrVertexWriter*, %"struct.GrQuadPerEdgeAA::VertexSpec"*, %class.GrQuad*, %class.GrQuad*, float*, %struct.SkRGBA4f*, %struct.SkRect*, %struct.SkRect*)*, [8 x i8] }
%"class.GrQuadUtils::TessellationHelper" = type <{ %"struct.GrQuadUtils::TessellationHelper::Vertices", %"struct.GrQuadUtils::TessellationHelper::EdgeVectors", i32, i32, [8 x i8], %"struct.GrQuadUtils::TessellationHelper::OutsetRequest", %"struct.GrQuadUtils::TessellationHelper::EdgeEquations", i8, i8, i8, [13 x i8] }>
%"struct.GrQuadUtils::TessellationHelper::Vertices" = type { %"struct.skvx::Vec", %"struct.skvx::Vec", %"struct.skvx::Vec", %"struct.skvx::Vec", %"struct.skvx::Vec", %"struct.skvx::Vec", i32, [12 x i8] }
%"struct.skvx::Vec" = type { %"struct.skvx::Vec.0", %"struct.skvx::Vec.0" }
%"struct.skvx::Vec.0" = type { %"struct.skvx::Vec.1", %"struct.skvx::Vec.1" }
%"struct.skvx::Vec.1" = type { float }
%"struct.GrQuadUtils::TessellationHelper::EdgeVectors" = type { %"struct.skvx::Vec", %"struct.skvx::Vec", %"struct.skvx::Vec", %"struct.skvx::Vec", %"struct.skvx::Vec", %"struct.skvx::Vec", %"struct.skvx::Vec" }
%"struct.GrQuadUtils::TessellationHelper::OutsetRequest" = type <{ %"struct.skvx::Vec", i8, i8, [14 x i8] }>
%"struct.GrQuadUtils::TessellationHelper::EdgeEquations" = type { %"struct.skvx::Vec", %"struct.skvx::Vec", %"struct.skvx::Vec" }
%"struct.GrQuadPerEdgeAA::VertexSpec" = type { i16, [2 x i8] }
%struct.GrVertexWriter = type { i8* }
%class.GrQuad = type { [4 x float], [4 x float], [4 x float], i32 }
%struct.SkRGBA4f = type { float, float, float, float }
%class.sk_sp = type { %class.GrBuffer* }
%class.GrBuffer = type { i32 (...)** }
%"class.GrMeshDrawOp::Target" = type { i32 (...)** }
%class.sk_sp.32 = type { %class.GrGpuBuffer* }
%class.GrGpuBuffer = type { %class.GrGpuResource, %class.GrBuffer, i8*, i64, i32, i32 }
%class.GrGpuResource = type { i32 (...)**, %class.GrIORef, i32, i32, %"class.std::__1::chrono::time_point", %class.GrScratchKey, %class.GrUniqueKey, %class.GrGpu*, i64, i8, i8, %"class.GrGpuResource::UniqueID" }
%class.GrIORef = type { %"struct.std::__1::atomic", %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.2" }
%"struct.std::__1::__atomic_base.2" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.std::__1::chrono::time_point" = type { %"class.std::__1::chrono::duration" }
%"class.std::__1::chrono::duration" = type { i64 }
%class.GrScratchKey = type { %class.GrResourceKey }
%class.GrResourceKey = type { %class.SkAutoSTMalloc }
%class.SkAutoSTMalloc = type <{ i32*, %union.anon, [4 x i8] }>
%union.anon = type { [7 x i32] }
%class.GrUniqueKey = type { %class.GrResourceKey, %class.sk_sp.3, i8* }
%class.sk_sp.3 = type { %class.SkData* }
%class.SkData = type { %class.SkNVRefCnt, void (i8*, i8*)*, i8*, i8*, i64 }
%class.SkNVRefCnt = type { %"struct.std::__1::atomic" }
%class.GrGpu = type opaque
%"class.GrGpuResource::UniqueID" = type { i32 }
%class.GrResourceProvider = type { %class.GrResourceCache*, %class.GrGpu*, %class.sk_sp.30, %class.sk_sp.32, %class.sk_sp.32 }
%class.GrResourceCache = type { %class.GrProxyProvider*, %class.GrThreadSafeCache*, i32, %class.SkTDPQueue, %class.SkTDArray, %class.SkTMultiMap, %class.SkTDynamicHash.5, i64, i64, i32, i64, i64, i32, [4 x i8], %"class.SkMessageBus<GrUniqueKeyInvalidatedMessage, unsigned int, true>::Inbox", %"class.SkMessageBus<GrTextureFreedMessage, GrDirectContext::DirectContextID, true>::Inbox", %class.SkTHashMap, %"class.GrDirectContext::DirectContextID", i32, %class.GrSingleOwner* }
%class.GrProxyProvider = type opaque
%class.GrThreadSafeCache = type opaque
%class.SkTDPQueue = type { %class.SkTDArray }
%class.SkTDArray = type { %class.GrGpuResource**, i32, i32 }
%class.SkTMultiMap = type <{ %class.SkTDynamicHash, i32, [4 x i8] }>
%class.SkTDynamicHash = type { %class.SkTHashTable }
%class.SkTHashTable = type { i32, i32, %class.SkAutoTArray }
%class.SkAutoTArray = type { %"class.std::__1::unique_ptr" }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.SkTHashTable<SkTMultiMap<GrGpuResource, GrScratchKey, GrResourceCache::ScratchMapTraits>::ValueList *, GrScratchKey, SkTDynamicHash<SkTMultiMap<GrGpuResource, GrScratchKey, GrResourceCache::ScratchMapTraits>::ValueList, GrScratchKey, SkTMultiMap<GrGpuResource, GrScratchKey, GrResourceCache::ScratchMapTraits>::ValueList>::AdaptedTraits>::Slot"* }
%"struct.SkTHashTable<SkTMultiMap<GrGpuResource, GrScratchKey, GrResourceCache::ScratchMapTraits>::ValueList *, GrScratchKey, SkTDynamicHash<SkTMultiMap<GrGpuResource, GrScratchKey, GrResourceCache::ScratchMapTraits>::ValueList, GrScratchKey, SkTMultiMap<GrGpuResource, GrScratchKey, GrResourceCache::ScratchMapTraits>::ValueList>::AdaptedTraits>::Slot" = type opaque
%class.SkTDynamicHash.5 = type { %class.SkTHashTable.6 }
%class.SkTHashTable.6 = type { i32, i32, %class.SkAutoTArray.7 }
%class.SkAutoTArray.7 = type { %"class.std::__1::unique_ptr.8" }
%"class.std::__1::unique_ptr.8" = type { %"class.std::__1::__compressed_pair.9" }
%"class.std::__1::__compressed_pair.9" = type { %"struct.std::__1::__compressed_pair_elem.10" }
%"struct.std::__1::__compressed_pair_elem.10" = type { %"struct.SkTHashTable<GrGpuResource *, GrUniqueKey, SkTDynamicHash<GrGpuResource, GrUniqueKey, GrResourceCache::UniqueHashTraits>::AdaptedTraits>::Slot"* }
%"struct.SkTHashTable<GrGpuResource *, GrUniqueKey, SkTDynamicHash<GrGpuResource, GrUniqueKey, GrResourceCache::UniqueHashTraits>::AdaptedTraits>::Slot" = type <{ %class.GrGpuResource*, i32, [4 x i8] }>
%"class.SkMessageBus<GrUniqueKeyInvalidatedMessage, unsigned int, true>::Inbox" = type <{ %class.SkTArray, %class.SkMutex, i32, [4 x i8] }>
%class.SkTArray = type { %class.GrUniqueKeyInvalidatedMessage*, i64 }
%class.GrUniqueKeyInvalidatedMessage = type <{ %class.GrUniqueKey, i32, i8, [3 x i8] }>
%class.SkMutex = type { %class.SkSemaphore }
%class.SkSemaphore = type { %"struct.std::__1::atomic", %class.SkOnce, %"struct.SkSemaphore::OSSemaphore"* }
%class.SkOnce = type { %"struct.std::__1::atomic.14" }
%"struct.std::__1::atomic.14" = type { %"struct.std::__1::__atomic_base.15" }
%"struct.std::__1::__atomic_base.15" = type { %"struct.std::__1::__atomic_base.16" }
%"struct.std::__1::__atomic_base.16" = type { %"struct.std::__1::__cxx_atomic_impl.17" }
%"struct.std::__1::__cxx_atomic_impl.17" = type { %"struct.std::__1::__cxx_atomic_base_impl.18" }
%"struct.std::__1::__cxx_atomic_base_impl.18" = type { i8 }
%"struct.SkSemaphore::OSSemaphore" = type opaque
%"class.SkMessageBus<GrTextureFreedMessage, GrDirectContext::DirectContextID, true>::Inbox" = type <{ %class.SkTArray.19, %class.SkMutex, %"class.GrDirectContext::DirectContextID", [4 x i8] }>
%class.SkTArray.19 = type { %struct.GrTextureFreedMessage*, i64 }
%struct.GrTextureFreedMessage = type <{ %class.GrTexture*, %"class.GrDirectContext::DirectContextID", [4 x i8] }>
%class.GrTexture = type <{ i32 (...)**, i32, i32, i32, [4 x i8], %class.GrSurface }>
%class.GrSurface = type { %class.GrGpuResource, %struct.SkISize, i32, i8, %class.sk_sp.20 }
%struct.SkISize = type { i32, i32 }
%class.sk_sp.20 = type { %class.GrRefCntedCallback* }
%class.GrRefCntedCallback = type { %class.SkNVRefCnt.21, void (i8*)*, i8* }
%class.SkNVRefCnt.21 = type { %"struct.std::__1::atomic" }
%class.SkTHashMap = type { %class.SkTHashTable.22 }
%class.SkTHashTable.22 = type { i32, i32, %class.SkAutoTArray.23 }
%class.SkAutoTArray.23 = type { %"class.std::__1::unique_ptr.24" }
%"class.std::__1::unique_ptr.24" = type { %"class.std::__1::__compressed_pair.25" }
%"class.std::__1::__compressed_pair.25" = type { %"struct.std::__1::__compressed_pair_elem.26" }
%"struct.std::__1::__compressed_pair_elem.26" = type { %"struct.SkTHashTable<SkTHashMap<unsigned int, GrResourceCache::TextureAwaitingUnref, SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, GrResourceCache::TextureAwaitingUnref, SkGoodHash>::Pair>::Slot"* }
%"struct.SkTHashTable<SkTHashMap<unsigned int, GrResourceCache::TextureAwaitingUnref, SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, GrResourceCache::TextureAwaitingUnref, SkGoodHash>::Pair>::Slot" = type opaque
%"class.GrDirectContext::DirectContextID" = type { i32 }
%class.GrSingleOwner = type { i8 }
%class.sk_sp.30 = type { %class.GrCaps* }
%class.GrCaps = type <{ %class.SkRefCnt.base, [4 x i8], %class.sk_sp.31, i48, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [4 x i8], i64, %class.GrDriverBugWorkarounds, i8, i8 }>
%class.SkRefCnt.base = type { %class.SkRefCntBase.base }
%class.SkRefCntBase.base = type <{ i32 (...)**, %"struct.std::__1::atomic" }>
%class.sk_sp.31 = type { %class.GrShaderCaps* }
%class.GrShaderCaps = type <{ %class.SkRefCnt.base, i32, i56, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i32, i32, i32, [4 x i8] }>
%class.GrDriverBugWorkarounds = type { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 }
%class.GrOpsRenderPass = type { i32 (...)**, i32, %class.GrRenderTarget*, %class.sk_sp, %class.sk_sp, %class.sk_sp, i32, i32 }
%class.GrRenderTarget = type opaque
%class.GrGeometryProcessor = type <{ %class.GrProcessor, %class.GrNonAtomicRef, i32, %"class.GrGeometryProcessor::AttributeSet", %"class.GrGeometryProcessor::AttributeSet", i32, [4 x i8] }>
%class.GrProcessor = type { i32 (...)**, i32, i32 }
%class.GrNonAtomicRef = type { i32 }
%"class.GrGeometryProcessor::AttributeSet" = type { %"class.GrGeometryProcessor::Attribute"*, i32, i32, i64 }
%class.SkArenaAlloc = type <{ i8*, i8*, i8*, %class.SkFibBlockSizes, [4 x i8] }>
%class.SkFibBlockSizes = type { i32 }
%"class.GrQuadPerEdgeAA::QuadPerEdgeAAGeometryProcessor" = type { %class.GrGeometryProcessor.base, %"class.GrGeometryProcessor::Attribute", %"class.GrGeometryProcessor::Attribute", %"class.GrGeometryProcessor::Attribute", %"class.GrGeometryProcessor::Attribute", %"class.GrGeometryProcessor::Attribute", %"class.GrGeometryProcessor::Attribute", i8, i8, i32, %class.sk_sp.35, %"class.GrGeometryProcessor::TextureSampler" }
%class.GrGeometryProcessor.base = type <{ %class.GrProcessor, %class.GrNonAtomicRef, i32, %"class.GrGeometryProcessor::AttributeSet", %"class.GrGeometryProcessor::AttributeSet", i32 }>
%class.sk_sp.35 = type { %class.GrColorSpaceXform* }
%class.GrColorSpaceXform = type { %class.SkRefCnt.base, %struct.SkColorSpaceXformSteps }
%struct.SkColorSpaceXformSteps = type { %"struct.SkColorSpaceXformSteps::Flags", %struct.skcms_TransferFunction, %struct.skcms_TransferFunction, [9 x float] }
%"struct.SkColorSpaceXformSteps::Flags" = type { i8, i8, i8, i8, i8 }
%struct.skcms_TransferFunction = type { float, float, float, float, float, float, float }
%"class.GrGeometryProcessor::TextureSampler" = type <{ %class.GrSamplerState, [4 x i8], %class.GrBackendFormat, %class.GrSwizzle, i8, [5 x i8] }>
%class.GrSamplerState = type { [2 x i8], i32, i32 }
%class.GrBackendFormat = type { i32, i8, %union.anon.33, i32, [4 x i8] }
%union.anon.33 = type { %struct.anon }
%struct.anon = type { i32, [4 x i8], %struct.GrVkYcbcrConversionInfo }
%struct.GrVkYcbcrConversionInfo = type <{ i32, [4 x i8], i64, i32, i32, i32, i32, i32, i32, i32, [4 x i8] }>
%class.GrSwizzle = type { i16 }
%class.SkRefCntBase = type <{ i32 (...)**, %"struct.std::__1::atomic", [4 x i8] }>
%class.GrProcessorKeyBuilder = type { i32 (...)**, %class.SkTArray.41*, i32, i32 }
%class.SkTArray.41 = type { i32*, i64 }
%class.GrGLSLGeometryProcessor = type { i32 (...)**, %class.SkTArray.42 }
%class.SkTArray.42 = type { %"struct.GrGLSLGeometryProcessor::TransformInfo"*, i64 }
%"struct.GrGLSLGeometryProcessor::TransformInfo" = type { %class.GrShaderVar, %class.GrShaderVar, %class.GrFragmentProcessor* }
%class.GrShaderVar = type { i32, i32, i32, %class.SkString, %class.SkString, %class.SkString }
%class.SkString = type { %class.sk_sp.43 }
%class.sk_sp.43 = type { %"struct.SkString::Rec"* }
%"struct.SkString::Rec" = type <{ i32, %"struct.std::__1::atomic", i8, [3 x i8] }>
%class.GrFragmentProcessor = type <{ %class.GrProcessor, %class.SkSTArray, %class.GrFragmentProcessor*, i32, %"struct.SkSL::SampleUsage", [4 x i8] }>
%class.SkSTArray = type { %class.SkAlignedSTStorage, %class.SkTArray.44 }
%class.SkAlignedSTStorage = type { [8 x i8] }
%class.SkTArray.44 = type { %"class.std::__1::unique_ptr.45"*, i64 }
%"class.std::__1::unique_ptr.45" = type { %"class.std::__1::__compressed_pair.46" }
%"class.std::__1::__compressed_pair.46" = type { %"struct.std::__1::__compressed_pair_elem.47" }
%"struct.std::__1::__compressed_pair_elem.47" = type { %class.GrFragmentProcessor* }
%"struct.SkSL::SampleUsage" = type <{ i32, i8, [3 x i8] }>
%class.GLSLProcessor = type <{ %class.GrGLSLGeometryProcessor, %class.GrGLSLColorSpaceXformHelper, [4 x i8] }>
%class.GrGLSLColorSpaceXformHelper = type { %class.GrResourceHandle, %class.GrResourceHandle, %class.GrResourceHandle, %"struct.SkColorSpaceXformSteps::Flags", i32, i32 }
%class.GrResourceHandle = type { i32 }
%class.GrGLSLProgramDataManager = type { i32 (...)** }
%class.GrGLSLUniformHandler = type { i32 (...)**, %class.GrGLSLProgramBuilder* }
%class.GrGLSLProgramBuilder = type opaque
%"struct.GrGLSLGeometryProcessor::EmitArgs" = type { %class.GrGLSLVertexBuilder*, %class.GrGLSLGeometryBuilder*, %class.GrGLSLFPFragmentBuilder*, %class.GrGLSLVaryingHandler*, %class.GrGLSLUniformHandler*, %class.GrShaderCaps*, %class.GrGeometryProcessor*, i8*, i8*, %class.GrResourceHandle.72*, %"class.GrGLSLGeometryProcessor::FPCoordTransformHandler"* }
%class.GrGLSLVertexBuilder = type { %class.GrGLSLVertexGeoBuilder.base, [12 x i8] }
%class.GrGLSLVertexGeoBuilder.base = type { %class.GrGLSLShaderBuilder.base }
%class.GrGLSLShaderBuilder.base = type <{ i32 (...)**, %class.GrGLSLProgramBuilder*, %"class.SkSL::String", %class.SkSTArray.56, %class.SkString, %class.SkString, %class.SkString, %class.SkSTArray.59, [8 x i8], %class.GrTBlockList, %class.GrTBlockList, i32, [4 x i8], [2 x %class.SkSTArray.68], i32, i8, [3 x i8], i32 }>
%"class.SkSL::String" = type { %"class.std::__1::basic_string" }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.51" }
%"class.std::__1::__compressed_pair.51" = type { %"struct.std::__1::__compressed_pair_elem.52" }
%"struct.std::__1::__compressed_pair_elem.52" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon.53 }
%union.anon.53 = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%class.SkSTArray.56 = type { %class.SkAlignedSTStorage.57, %class.SkTArray.58 }
%class.SkAlignedSTStorage.57 = type { [120 x i8] }
%class.SkTArray.58 = type { %class.SkString*, i64 }
%class.SkSTArray.59 = type { %class.SkAlignedSTStorage.60, %class.SkTArray.61 }
%class.SkAlignedSTStorage.60 = type { [16 x i8] }
%class.SkTArray.61 = type { %"class.std::__1::unique_ptr.62"*, i64 }
%"class.std::__1::unique_ptr.62" = type { %"class.std::__1::__compressed_pair.63" }
%"class.std::__1::__compressed_pair.63" = type { %"struct.std::__1::__compressed_pair_elem.64" }
%"struct.std::__1::__compressed_pair_elem.64" = type { %"class.SkSL::Statement"* }
%"class.SkSL::Statement" = type { %"class.SkSL::IRNode" }
%"class.SkSL::IRNode" = type { i32 (...)**, i32, i32 }
%class.GrTBlockList = type { %class.GrSBlockAllocator }
%class.GrSBlockAllocator = type { [88 x i8], [8 x i8] }
%class.SkSTArray.68 = type { %class.SkAlignedSTStorage.69, %class.SkTArray.58 }
%class.SkAlignedSTStorage.69 = type { [8 x i8] }
%class.GrGLSLGeometryBuilder = type { %class.GrGLSLVertexGeoBuilder.base, i32, [8 x i8] }
%class.GrGLSLFPFragmentBuilder = type <{ i32 (...)**, [4 x i8], [4 x i8], %class.GrGLSLShaderBuilder.base, [12 x i8] }>
%class.GrGLSLVaryingHandler = type { i32 (...)**, [8 x i8], %class.GrTBlockList.70, %class.GrTBlockList, %class.GrTBlockList, %class.GrTBlockList, %class.GrTBlockList, %class.GrTBlockList, %class.GrTBlockList, %class.GrGLSLProgramBuilder*, i8* }
%class.GrTBlockList.70 = type { %class.GrSBlockAllocator.71 }
%class.GrSBlockAllocator.71 = type { [80 x i8] }
%class.GrResourceHandle.72 = type { i32 }
%"class.GrGLSLGeometryProcessor::FPCoordTransformHandler" = type { %"class.GrFragmentProcessor::CIter", %class.SkTArray.76* }
%"class.GrFragmentProcessor::CIter" = type { %class.SkSTArray.73 }
%class.SkSTArray.73 = type { %class.SkAlignedSTStorage.74, %class.SkTArray.75 }
%class.SkAlignedSTStorage.74 = type { [32 x i8] }
%class.SkTArray.75 = type { %class.GrFragmentProcessor**, i64 }
%class.SkTArray.76 = type { %class.GrShaderVar*, i64 }
%"struct.GrGLSLGeometryProcessor::GrGPArgs" = type { %class.GrShaderVar, %class.GrShaderVar }
%class.GrGLSLVarying = type { i32, i32, i8*, i8*, i8*, i8* }
%class.GrGLSLShaderBuilder = type <{ i32 (...)**, %class.GrGLSLProgramBuilder*, %"class.SkSL::String", %class.SkSTArray.56, %class.SkString, %class.SkString, %class.SkString, %class.SkSTArray.59, [8 x i8], %class.GrTBlockList, %class.GrTBlockList, i32, [4 x i8], [2 x %class.SkSTArray.68], i32, i8, [3 x i8], i32, [12 x i8] }>
%struct.__va_list_tag = type { i32, i32, i8*, i8* }

$_ZZN12SkArenaAlloc4makeIZN15GrQuadPerEdgeAA30QuadPerEdgeAAGeometryProcessor4MakeEPS_RKNS1_10VertexSpecEEUlPvE_EEDTclfp_LDnEEEOT_ENUlPcE_8__invokeESC_ = comdat any

$_ZN15GrQuadPerEdgeAA30QuadPerEdgeAAGeometryProcessor15initializeAttrsERKNS_10VertexSpecE = comdat any

$_ZN15GrQuadPerEdgeAA30QuadPerEdgeAAGeometryProcessorD2Ev = comdat any

$_ZN15GrQuadPerEdgeAA30QuadPerEdgeAAGeometryProcessorD0Ev = comdat any

$_ZNK15GrQuadPerEdgeAA30QuadPerEdgeAAGeometryProcessor4nameEv = comdat any

$_ZNK15GrQuadPerEdgeAA30QuadPerEdgeAAGeometryProcessor19getGLSLProcessorKeyERK12GrShaderCapsP21GrProcessorKeyBuilder = comdat any

$_ZNK15GrQuadPerEdgeAA30QuadPerEdgeAAGeometryProcessor18createGLSLInstanceERK12GrShaderCaps = comdat any

$_ZNK15GrQuadPerEdgeAA30QuadPerEdgeAAGeometryProcessor16onTextureSamplerEi = comdat any

$_ZN9GrSwizzleC2EPKc = comdat any

$_ZN17GrColorSpaceXform8XformKeyEPKS_ = comdat any

$_ZZNK15GrQuadPerEdgeAA30QuadPerEdgeAAGeometryProcessor18createGLSLInstanceERK12GrShaderCapsEN13GLSLProcessorD0Ev = comdat any

$_ZZNK15GrQuadPerEdgeAA30QuadPerEdgeAAGeometryProcessor18createGLSLInstanceERK12GrShaderCapsEN13GLSLProcessor7setDataERK24GrGLSLProgramDataManagerS3_RK19GrGeometryProcessor = comdat any

$_ZNK23GrGLSLGeometryProcessor24getTessControlShaderGLSLERK19GrGeometryProcessorPKcRK20GrGLSLUniformHandlerRK12GrShaderCaps = comdat any

$_ZNK23GrGLSLGeometryProcessor27getTessEvaluationShaderGLSLERK19GrGeometryProcessorPKcRK20GrGLSLUniformHandlerRK12GrShaderCaps = comdat any

$_ZZNK15GrQuadPerEdgeAA30QuadPerEdgeAAGeometryProcessor18createGLSLInstanceERK12GrShaderCapsEN13GLSLProcessor10onEmitCodeERN23GrGLSLGeometryProcessor8EmitArgsEPNS5_8GrGPArgsE = comdat any

$_ZN23GrGLSLGeometryProcessorD2Ev = comdat any

$_ZN23GrGLSLGeometryProcessorD0Ev = comdat any

$_ZN23GrGLSLGeometryProcessor13TransformInfoD2Ev = comdat any

$_ZN27GrGLSLColorSpaceXformHelper8emitCodeEP20GrGLSLUniformHandlerPK17GrColorSpaceXformj = comdat any

$_ZN19GrGLSLShaderBuilder11codeAppendfEPKcz = comdat any

$_ZZN12SkArenaAlloc4makeIZN15GrQuadPerEdgeAA30QuadPerEdgeAAGeometryProcessor4MakeEPS_RKNS1_10VertexSpecERK12GrShaderCapsRK15GrBackendFormat14GrSamplerStateRK9GrSwizzle5sk_spI17GrColorSpaceXformEN11GrTextureOp8SaturateEEUlPvE_EEDTclfp_LDnEEEOT_ENUlPcE_8__invokeESR_ = comdat any

$_ZTVN15GrQuadPerEdgeAA30QuadPerEdgeAAGeometryProcessorE = comdat any

$_ZTVZNK15GrQuadPerEdgeAA30QuadPerEdgeAAGeometryProcessor18createGLSLInstanceERK12GrShaderCapsE13GLSLProcessor = comdat any

$_ZTV23GrGLSLGeometryProcessor = comdat any

@_ZZN15GrQuadPerEdgeAA11Tessellator6appendEP6GrQuadS2_RK8SkRGBA4fIL11SkAlphaType2EERK6SkRect13GrQuadAAFlagsE13kFullCoverage = internal constant [4 x float] [float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00], align 16
@_ZZN15GrQuadPerEdgeAA11Tessellator6appendEP6GrQuadS2_RK8SkRGBA4fIL11SkAlphaType2EERK6SkRect13GrQuadAAFlagsE13kZeroCoverage = internal constant [4 x float] zeroinitializer, align 16
@_ZZN15GrQuadPerEdgeAA11Tessellator6appendEP6GrQuadS2_RK8SkRGBA4fIL11SkAlphaType2EERK6SkRect13GrQuadAAFlagsE14kIgnoredSubset = internal constant %struct.SkRect zeroinitializer, align 4
@.str = private unnamed_addr constant [53 x i8] c"../../third_party/skia/src/gpu/GrGeometryProcessor.h\00", align 1
@.str.1 = private unnamed_addr constant [28 x i8] c"Unsupported type conversion\00", align 1
@_ZTVN15GrQuadPerEdgeAA30QuadPerEdgeAAGeometryProcessorE = linkonce_odr hidden unnamed_addr constant { [8 x i8*] } { [8 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.GrQuadPerEdgeAA::QuadPerEdgeAAGeometryProcessor"*)* @_ZN15GrQuadPerEdgeAA30QuadPerEdgeAAGeometryProcessorD2Ev to i8*), i8* bitcast (void (%"class.GrQuadPerEdgeAA::QuadPerEdgeAAGeometryProcessor"*)* @_ZN15GrQuadPerEdgeAA30QuadPerEdgeAAGeometryProcessorD0Ev to i8*), i8* bitcast (i8* (%"class.GrQuadPerEdgeAA::QuadPerEdgeAAGeometryProcessor"*)* @_ZNK15GrQuadPerEdgeAA30QuadPerEdgeAAGeometryProcessor4nameEv to i8*), i8* bitcast (void (%"class.GrQuadPerEdgeAA::QuadPerEdgeAAGeometryProcessor"*, %class.GrShaderCaps*, %class.GrProcessorKeyBuilder*)* @_ZNK15GrQuadPerEdgeAA30QuadPerEdgeAAGeometryProcessor19getGLSLProcessorKeyERK12GrShaderCapsP21GrProcessorKeyBuilder to i8*), i8* bitcast (%class.GrGLSLGeometryProcessor* (%"class.GrQuadPerEdgeAA::QuadPerEdgeAAGeometryProcessor"*, %class.GrShaderCaps*)* @_ZNK15GrQuadPerEdgeAA30QuadPerEdgeAAGeometryProcessor18createGLSLInstanceERK12GrShaderCaps to i8*), i8* bitcast (%"class.GrGeometryProcessor::TextureSampler"* (%"class.GrQuadPerEdgeAA::QuadPerEdgeAAGeometryProcessor"*, i32)* @_ZNK15GrQuadPerEdgeAA30QuadPerEdgeAAGeometryProcessor16onTextureSamplerEi to i8*)] }, comdat, align 8
@.str.2 = private unnamed_addr constant [5 x i8] c"rgba\00", align 1
@.str.3 = private unnamed_addr constant [21 x i8] c"positionWithCoverage\00", align 1
@.ref.tmp = private unnamed_addr constant %"class.GrGeometryProcessor::Attribute" { i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.3, i32 0, i32 0), i32 3, i32 24 }, align 8
@.str.4 = private unnamed_addr constant [9 x i8] c"position\00", align 1
@.str.6 = private unnamed_addr constant [9 x i8] c"coverage\00", align 1
@.ref.tmp.7 = private unnamed_addr constant %"class.GrGeometryProcessor::Attribute" { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.6, i32 0, i32 0), i32 0, i32 21 }, align 8
@.ref.tmp.8 = private unnamed_addr constant %"class.GrGeometryProcessor::Attribute" { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.4, i32 0, i32 0), i32 2, i32 23 }, align 8
@.ref.tmp.9 = private unnamed_addr constant %"class.GrGeometryProcessor::Attribute" { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.4, i32 0, i32 0), i32 1, i32 22 }, align 8
@.str.10 = private unnamed_addr constant [11 x i8] c"geomSubset\00", align 1
@.ref.tmp.11 = private unnamed_addr constant %"class.GrGeometryProcessor::Attribute" { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.10, i32 0, i32 0), i32 3, i32 24 }, align 8
@.str.12 = private unnamed_addr constant [11 x i8] c"localCoord\00", align 1
@.ref.tmp.13 = private unnamed_addr constant %"class.GrGeometryProcessor::Attribute" { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.12, i32 0, i32 0), i32 2, i32 23 }, align 8
@.ref.tmp.14 = private unnamed_addr constant %"class.GrGeometryProcessor::Attribute" { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.12, i32 0, i32 0), i32 1, i32 22 }, align 8
@.str.15 = private unnamed_addr constant [6 x i8] c"color\00", align 1
@.str.16 = private unnamed_addr constant [10 x i8] c"texSubset\00", align 1
@.ref.tmp.17 = private unnamed_addr constant %"class.GrGeometryProcessor::Attribute" { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.16, i32 0, i32 0), i32 3, i32 24 }, align 8
@.str.18 = private unnamed_addr constant [31 x i8] c"QuadPerEdgeAAGeometryProcessor\00", align 1
@.str.19 = private unnamed_addr constant [7 x i8] c"subset\00", align 1
@.str.20 = private unnamed_addr constant [9 x i8] c"textured\00", align 1
@.str.21 = private unnamed_addr constant [12 x i8] c"perspective\00", align 1
@.str.22 = private unnamed_addr constant [9 x i8] c"saturate\00", align 1
@.str.23 = private unnamed_addr constant [15 x i8] c"hasLocalCoords\00", align 1
@.str.24 = private unnamed_addr constant [16 x i8] c"localCoordsType\00", align 1
@.str.25 = private unnamed_addr constant [9 x i8] c"hasColor\00", align 1
@.str.26 = private unnamed_addr constant [10 x i8] c"colorType\00", align 1
@.str.27 = private unnamed_addr constant [13 x i8] c"coverageMode\00", align 1
@.str.28 = private unnamed_addr constant [16 x i8] c"colorSpaceXform\00", align 1
@_ZTVZNK15GrQuadPerEdgeAA30QuadPerEdgeAAGeometryProcessor18createGLSLInstanceERK12GrShaderCapsE13GLSLProcessor = linkonce_odr hidden unnamed_addr constant { [8 x i8*] } { [8 x i8*] [i8* null, i8* null, i8* bitcast (void (%class.GrGLSLGeometryProcessor*)* @_ZN23GrGLSLGeometryProcessorD2Ev to i8*), i8* bitcast (void (%class.GLSLProcessor*)* @_ZZNK15GrQuadPerEdgeAA30QuadPerEdgeAAGeometryProcessor18createGLSLInstanceERK12GrShaderCapsEN13GLSLProcessorD0Ev to i8*), i8* bitcast (void (%class.GLSLProcessor*, %class.GrGLSLProgramDataManager*, %class.GrShaderCaps*, %class.GrGeometryProcessor*)* @_ZZNK15GrQuadPerEdgeAA30QuadPerEdgeAAGeometryProcessor18createGLSLInstanceERK12GrShaderCapsEN13GLSLProcessor7setDataERK24GrGLSLProgramDataManagerS3_RK19GrGeometryProcessor to i8*), i8* bitcast (void (%class.SkString*, %class.GrGLSLGeometryProcessor*, %class.GrGeometryProcessor*, i8*, %class.GrGLSLUniformHandler*, %class.GrShaderCaps*)* @_ZNK23GrGLSLGeometryProcessor24getTessControlShaderGLSLERK19GrGeometryProcessorPKcRK20GrGLSLUniformHandlerRK12GrShaderCaps to i8*), i8* bitcast (void (%class.SkString*, %class.GrGLSLGeometryProcessor*, %class.GrGeometryProcessor*, i8*, %class.GrGLSLUniformHandler*, %class.GrShaderCaps*)* @_ZNK23GrGLSLGeometryProcessor27getTessEvaluationShaderGLSLERK19GrGeometryProcessorPKcRK20GrGLSLUniformHandlerRK12GrShaderCaps to i8*), i8* bitcast (void (%class.GLSLProcessor*, %"struct.GrGLSLGeometryProcessor::EmitArgs"*, %"struct.GrGLSLGeometryProcessor::GrGPArgs"*)* @_ZZNK15GrQuadPerEdgeAA30QuadPerEdgeAAGeometryProcessor18createGLSLInstanceERK12GrShaderCapsEN13GLSLProcessor10onEmitCodeERN23GrGLSLGeometryProcessor8EmitArgsEPNS5_8GrGPArgsE to i8*)] }, comdat, align 8
@_ZTV23GrGLSLGeometryProcessor = linkonce_odr hidden unnamed_addr constant { [8 x i8*] } { [8 x i8*] [i8* null, i8* null, i8* bitcast (void (%class.GrGLSLGeometryProcessor*)* @_ZN23GrGLSLGeometryProcessorD2Ev to i8*), i8* bitcast (void (%class.GrGLSLGeometryProcessor*)* @_ZN23GrGLSLGeometryProcessorD0Ev to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void (%class.SkString*, %class.GrGLSLGeometryProcessor*, %class.GrGeometryProcessor*, i8*, %class.GrGLSLUniformHandler*, %class.GrShaderCaps*)* @_ZNK23GrGLSLGeometryProcessor24getTessControlShaderGLSLERK19GrGeometryProcessorPKcRK20GrGLSLUniformHandlerRK12GrShaderCaps to i8*), i8* bitcast (void (%class.SkString*, %class.GrGLSLGeometryProcessor*, %class.GrGeometryProcessor*, i8*, %class.GrGLSLUniformHandler*, %class.GrShaderCaps*)* @_ZNK23GrGLSLGeometryProcessor27getTessEvaluationShaderGLSLERK19GrGeometryProcessorPKcRK20GrGLSLUniformHandlerRK12GrShaderCaps to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*)] }, comdat, align 8
@.str.29 = private unnamed_addr constant [62 x i8] c"../../third_party/skia/src/gpu/glsl/GrGLSLGeometryProcessor.h\00", align 1
@.str.30 = private unnamed_addr constant [17 x i8] c"Not implemented.\00", align 1
@.str.31 = private unnamed_addr constant [26 x i8] c"float3 position = %s.xyz;\00", align 1
@.str.32 = private unnamed_addr constant [25 x i8] c"float2 position = %s.xy;\00", align 1
@.str.33 = private unnamed_addr constant [10 x i8] c"half4 %s;\00", align 1
@.str.34 = private unnamed_addr constant [21 x i8] c"half4 %s = half4(1);\00", align 1
@.str.35 = private unnamed_addr constant [17 x i8] c"float2 texCoord;\00", align 1
@.str.36 = private unnamed_addr constant [9 x i8] c"%s = %s;\00", align 1
@.str.37 = private unnamed_addr constant [25 x i8] c"texCoord = %s.xy / %s.z;\00", align 1
@.str.38 = private unnamed_addr constant [9 x i8] c"texCoord\00", align 1
@.str.39 = private unnamed_addr constant [15 x i8] c"float4 subset;\00", align 1
@.str.40 = private unnamed_addr constant [50 x i8] c"texCoord = clamp(texCoord, subset.LT, subset.RB);\00", align 1
@.str.41 = private unnamed_addr constant [9 x i8] c"%s = %s(\00", align 1
@.str.42 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@.str.43 = private unnamed_addr constant [3 x i8] c");\00", align 1
@.str.44 = private unnamed_addr constant [18 x i8] c"%s = %s.w * %s.z;\00", align 1
@.str.45 = private unnamed_addr constant [38 x i8] c"float coverage = %s * sk_FragCoord.w;\00", align 1
@.str.46 = private unnamed_addr constant [21 x i8] c"float coverage = %s;\00", align 1
@.str.47 = private unnamed_addr constant [18 x i8] c"float4 geoSubset;\00", align 1
@.str.48 = private unnamed_addr constant [10 x i8] c"geoSubset\00", align 1
@.str.49 = private unnamed_addr constant [215 x i8] c"half4 dists4 = clamp(half4(1, 1, -1, -1) * half4(sk_FragCoord.xyxy - geoSubset), 0, 1);\0Ahalf2 dists2 = dists4.xy + dists4.zw - 1;\0Ahalf subsetCoverage = dists2.x * dists2.y;\0Acoverage = min(coverage, subsetCoverage);\00", align 1
@.str.50 = private unnamed_addr constant [34 x i8] c"half4 %s = half4(half(coverage));\00", align 1
@.str.51 = private unnamed_addr constant [27 x i8] c"const half4 %s = half4(1);\00", align 1
@.str.52 = private unnamed_addr constant [6 x i8] c"SrcTF\00", align 1
@.str.53 = private unnamed_addr constant [11 x i8] c"ColorXform\00", align 1
@.str.54 = private unnamed_addr constant [6 x i8] c"DstTF\00", align 1
@switch.table._ZN15GrQuadPerEdgeAA30QuadPerEdgeAAGeometryProcessor15initializeAttrsERKNS_10VertexSpecE.59 = private unnamed_addr constant [26 x i64] [i64 4, i64 8, i64 12, i64 16, i64 4, i64 4, i64 8, i64 8, i64 12, i64 16, i64 4, i64 4, i64 4, i64 4, i64 4, i64 4, i64 4, i64 4, i64 4, i64 8, i64 4, i64 4, i64 4, i64 4, i64 4, i64 8], align 8

@_ZN15GrQuadPerEdgeAA11TessellatorC1ERKNS_10VertexSpecEPc = hidden unnamed_addr alias void (%"class.GrQuadPerEdgeAA::Tessellator"*, %"struct.GrQuadPerEdgeAA::VertexSpec"*, i8*), void (%"class.GrQuadPerEdgeAA::Tessellator"*, %"struct.GrQuadPerEdgeAA::VertexSpec"*, i8*)* @_ZN15GrQuadPerEdgeAA11TessellatorC2ERKNS_10VertexSpecEPc

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden i32 @_ZN15GrQuadPerEdgeAA21CalcIndexBufferOptionE8GrAATypei(i32, i32) local_unnamed_addr #0 {
  %3 = icmp eq i32 %0, 1
  %4 = icmp sgt i32 %1, 1
  %5 = select i1 %4, i32 1, i32 2
  %6 = select i1 %3, i32 0, i32 %5
  ret i32 %6
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden i32 @_ZN15GrQuadPerEdgeAA12MinColorTypeE8SkRGBA4fIL11SkAlphaType2EE(<2 x float>, <2 x float>) local_unnamed_addr #1 {
  %3 = extractelement <2 x float> %0, i32 0
  %4 = extractelement <2 x float> %0, i32 1
  %5 = extractelement <2 x float> %1, i32 0
  %6 = shufflevector <2 x float> %0, <2 x float> %1, <4 x i32> <i32 2, i32 1, i32 0, i32 3>
  %7 = fcmp oeq <4 x float> %6, <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>
  %8 = shufflevector <4 x i1> %7, <4 x i1> undef, <4 x i32> <i32 2, i32 3, i32 undef, i32 undef>
  %9 = and <4 x i1> %7, %8
  %10 = shufflevector <4 x i1> %9, <4 x i1> undef, <4 x i32> <i32 1, i32 undef, i32 undef, i32 undef>
  %11 = and <4 x i1> %9, %10
  %12 = extractelement <4 x i1> %11, i32 0
  br i1 %12, label %26, label %13

13:                                               ; preds = %2
  %14 = fcmp ult float %3, 0.000000e+00
  %15 = fcmp ugt float %3, 1.000000e+00
  %16 = or i1 %14, %15
  br i1 %16, label %26, label %17

17:                                               ; preds = %13
  %18 = fcmp ult float %4, 0.000000e+00
  %19 = fcmp ugt float %4, 1.000000e+00
  %20 = or i1 %18, %19
  br i1 %20, label %26, label %21

21:                                               ; preds = %17
  %22 = fcmp oge float %5, 0.000000e+00
  %23 = fcmp ole float %5, 1.000000e+00
  %24 = and i1 %22, %23
  %25 = select i1 %24, i32 1, i32 2
  ret i32 %25

26:                                               ; preds = %2, %13, %17
  %27 = phi i32 [ 2, %17 ], [ 2, %13 ], [ 0, %2 ]
  ret i32 %27
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden void (%struct.GrVertexWriter*, %"struct.GrQuadPerEdgeAA::VertexSpec"*, %class.GrQuad*, %class.GrQuad*, float*, %struct.SkRGBA4f*, %struct.SkRect*, %struct.SkRect*)* @_ZN15GrQuadPerEdgeAA11Tessellator16GetWriteQuadProcERKNS_10VertexSpecE(%"struct.GrQuadPerEdgeAA::VertexSpec"* nocapture readonly dereferenceable(4)) local_unnamed_addr #2 align 2 {
  %2 = getelementptr inbounds %"struct.GrQuadPerEdgeAA::VertexSpec", %"struct.GrQuadPerEdgeAA::VertexSpec"* %0, i64 0, i32 0
  %3 = load i16, i16* %2, align 4
  %4 = and i16 %3, 3
  %5 = icmp eq i16 %4, 3
  %6 = and i16 %3, 4096
  %7 = icmp ne i16 %6, 0
  %8 = or i1 %5, %7
  br i1 %8, label %48, label %9

9:                                                ; preds = %1
  %10 = and i16 %3, 1024
  %11 = icmp eq i16 %10, 0
  %12 = and i16 %3, 384
  br i1 %11, label %19, label %13

13:                                               ; preds = %9
  %14 = icmp eq i16 %12, 0
  %15 = and i16 %3, 6144
  %16 = icmp ne i16 %15, 2048
  %17 = or i1 %16, %14
  %18 = select i1 %17, i32 1, i32 2
  br label %19

19:                                               ; preds = %9, %13
  %20 = phi i32 [ %18, %13 ], [ 0, %9 ]
  %21 = icmp eq i16 %12, 0
  br i1 %21, label %34, label %22

22:                                               ; preds = %19
  %23 = icmp eq i32 %20, 1
  br i1 %23, label %48, label %24

24:                                               ; preds = %22
  %25 = and i16 %3, 64
  %26 = icmp eq i16 %25, 0
  br i1 %26, label %48, label %27

27:                                               ; preds = %24
  %28 = and i16 %3, 12
  %29 = icmp eq i16 %28, 12
  br i1 %29, label %48, label %30

30:                                               ; preds = %27
  %31 = and i16 %3, 512
  %32 = icmp eq i16 %31, 0
  %33 = select i1 %32, void (%struct.GrVertexWriter*, %"struct.GrQuadPerEdgeAA::VertexSpec"*, %class.GrQuad*, %class.GrQuad*, float*, %struct.SkRGBA4f*, %struct.SkRect*, %struct.SkRect*)* @_ZN12_GLOBAL__N_117write_2d_color_uvEP14GrVertexWriterRKN15GrQuadPerEdgeAA10VertexSpecEPK6GrQuadS8_PKfRK8SkRGBA4fIL11SkAlphaType2EERK6SkRectSI_, void (%struct.GrVertexWriter*, %"struct.GrQuadPerEdgeAA::VertexSpec"*, %class.GrQuad*, %class.GrQuad*, float*, %struct.SkRGBA4f*, %struct.SkRect*, %struct.SkRect*)* @_ZN12_GLOBAL__N_124write_2d_color_uv_strictEP14GrVertexWriterRKN15GrQuadPerEdgeAA10VertexSpecEPK6GrQuadS8_PKfRK8SkRGBA4fIL11SkAlphaType2EERK6SkRectSI_
  br label %48

34:                                               ; preds = %19
  %35 = and i16 %3, 64
  %36 = icmp eq i16 %35, 0
  %37 = and i16 %3, 12
  %38 = icmp eq i16 %37, 12
  %39 = or i1 %36, %38
  br i1 %39, label %48, label %40

40:                                               ; preds = %34
  %41 = icmp eq i32 %20, 1
  %42 = and i16 %3, 512
  %43 = icmp ne i16 %42, 0
  br i1 %41, label %44, label %46

44:                                               ; preds = %40
  %45 = select i1 %43, void (%struct.GrVertexWriter*, %"struct.GrQuadPerEdgeAA::VertexSpec"*, %class.GrQuad*, %class.GrQuad*, float*, %struct.SkRGBA4f*, %struct.SkRect*, %struct.SkRect*)* @_ZN12_GLOBAL__N_122write_2d_cov_uv_strictEP14GrVertexWriterRKN15GrQuadPerEdgeAA10VertexSpecEPK6GrQuadS8_PKfRK8SkRGBA4fIL11SkAlphaType2EERK6SkRectSI_, void (%struct.GrVertexWriter*, %"struct.GrQuadPerEdgeAA::VertexSpec"*, %class.GrQuad*, %class.GrQuad*, float*, %struct.SkRGBA4f*, %struct.SkRect*, %struct.SkRect*)* @_ZN12_GLOBAL__N_115write_2d_cov_uvEP14GrVertexWriterRKN15GrQuadPerEdgeAA10VertexSpecEPK6GrQuadS8_PKfRK8SkRGBA4fIL11SkAlphaType2EERK6SkRectSI_
  br label %48

46:                                               ; preds = %40
  %47 = select i1 %43, void (%struct.GrVertexWriter*, %"struct.GrQuadPerEdgeAA::VertexSpec"*, %class.GrQuad*, %class.GrQuad*, float*, %struct.SkRGBA4f*, %struct.SkRect*, %struct.SkRect*)* @_ZN12_GLOBAL__N_118write_2d_uv_strictEP14GrVertexWriterRKN15GrQuadPerEdgeAA10VertexSpecEPK6GrQuadS8_PKfRK8SkRGBA4fIL11SkAlphaType2EERK6SkRectSI_, void (%struct.GrVertexWriter*, %"struct.GrQuadPerEdgeAA::VertexSpec"*, %class.GrQuad*, %class.GrQuad*, float*, %struct.SkRGBA4f*, %struct.SkRect*, %struct.SkRect*)* @_ZN12_GLOBAL__N_111write_2d_uvEP14GrVertexWriterRKN15GrQuadPerEdgeAA10VertexSpecEPK6GrQuadS8_PKfRK8SkRGBA4fIL11SkAlphaType2EERK6SkRectSI_
  br label %48

48:                                               ; preds = %24, %34, %22, %27, %1, %30, %44, %46
  %49 = phi void (%struct.GrVertexWriter*, %"struct.GrQuadPerEdgeAA::VertexSpec"*, %class.GrQuad*, %class.GrQuad*, float*, %struct.SkRGBA4f*, %struct.SkRect*, %struct.SkRect*)* [ %33, %30 ], [ %45, %44 ], [ %47, %46 ], [ @_ZN12_GLOBAL__N_114write_2d_colorEP14GrVertexWriterRKN15GrQuadPerEdgeAA10VertexSpecEPK6GrQuadS8_PKfRK8SkRGBA4fIL11SkAlphaType2EERK6SkRectSI_, %24 ], [ @_ZN12_GLOBAL__N_118write_quad_genericEP14GrVertexWriterRKN15GrQuadPerEdgeAA10VertexSpecEPK6GrQuadS8_PKfRK8SkRGBA4fIL11SkAlphaType2EERK6SkRectSI_, %1 ], [ @_ZN12_GLOBAL__N_118write_quad_genericEP14GrVertexWriterRKN15GrQuadPerEdgeAA10VertexSpecEPK6GrQuadS8_PKfRK8SkRGBA4fIL11SkAlphaType2EERK6SkRectSI_, %27 ], [ @_ZN12_GLOBAL__N_118write_quad_genericEP14GrVertexWriterRKN15GrQuadPerEdgeAA10VertexSpecEPK6GrQuadS8_PKfRK8SkRGBA4fIL11SkAlphaType2EERK6SkRectSI_, %22 ], [ @_ZN12_GLOBAL__N_118write_quad_genericEP14GrVertexWriterRKN15GrQuadPerEdgeAA10VertexSpecEPK6GrQuadS8_PKfRK8SkRGBA4fIL11SkAlphaType2EERK6SkRectSI_, %34 ]
  ret void (%struct.GrVertexWriter*, %"struct.GrQuadPerEdgeAA::VertexSpec"*, %class.GrQuad*, %class.GrQuad*, float*, %struct.SkRGBA4f*, %struct.SkRect*, %struct.SkRect*)* %49
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #3

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i32 @_ZNK15GrQuadPerEdgeAA10VertexSpec12coverageModeEv(%"struct.GrQuadPerEdgeAA::VertexSpec"* nocapture readonly) local_unnamed_addr #2 align 2 {
  %2 = getelementptr inbounds %"struct.GrQuadPerEdgeAA::VertexSpec", %"struct.GrQuadPerEdgeAA::VertexSpec"* %0, i64 0, i32 0
  %3 = load i16, i16* %2, align 4
  %4 = and i16 %3, 1024
  %5 = icmp eq i16 %4, 0
  br i1 %5, label %13, label %6

6:                                                ; preds = %1
  %7 = and i16 %3, 384
  %8 = icmp eq i16 %7, 0
  %9 = and i16 %3, 6144
  %10 = icmp ne i16 %9, 2048
  %11 = or i1 %10, %8
  %12 = select i1 %11, i32 1, i32 2
  ret i32 %12

13:                                               ; preds = %1
  ret i32 0
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN12_GLOBAL__N_114write_2d_colorEP14GrVertexWriterRKN15GrQuadPerEdgeAA10VertexSpecEPK6GrQuadS8_PKfRK8SkRGBA4fIL11SkAlphaType2EERK6SkRectSI_(%struct.GrVertexWriter* nocapture, %"struct.GrQuadPerEdgeAA::VertexSpec"* nocapture readonly dereferenceable(4), %class.GrQuad* nocapture readonly, %class.GrQuad* nocapture readnone, float* nocapture readonly, %struct.SkRGBA4f* nocapture readonly dereferenceable(16), %struct.SkRect* nocapture readnone dereferenceable(16), %struct.SkRect* nocapture readnone dereferenceable(16)) #4 {
  %9 = alloca { <2 x float>, <2 x float> }, align 8
  %10 = bitcast { <2 x float>, <2 x float> }* %9 to %struct.SkRGBA4f*
  %11 = getelementptr inbounds %"struct.GrQuadPerEdgeAA::VertexSpec", %"struct.GrQuadPerEdgeAA::VertexSpec"* %1, i64 0, i32 0
  %12 = load i16, i16* %11, align 4
  %13 = and i16 %12, 384
  %14 = icmp eq i16 %13, 256
  %15 = bitcast { <2 x float>, <2 x float> }* %9 to i8*
  %16 = getelementptr inbounds %struct.SkRGBA4f, %struct.SkRGBA4f* %5, i64 0, i32 2
  %17 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %9, i64 0, i32 0
  %18 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %9, i64 0, i32 1
  %19 = getelementptr inbounds %struct.GrVertexWriter, %struct.GrVertexWriter* %0, i64 0, i32 0
  %20 = bitcast %struct.GrVertexWriter* %0 to i32**
  %21 = bitcast %struct.SkRGBA4f* %5 to <2 x float>*
  %22 = bitcast float* %16 to <2 x float>*
  br label %24

23:                                               ; preds = %78
  ret void

24:                                               ; preds = %78, %8
  %25 = phi i64 [ 0, %8 ], [ %79, %78 ]
  %26 = phi i32 [ undef, %8 ], [ %57, %78 ]
  %27 = phi i32 [ undef, %8 ], [ %56, %78 ]
  %28 = phi i32 [ undef, %8 ], [ %55, %78 ]
  %29 = getelementptr inbounds %class.GrQuad, %class.GrQuad* %2, i64 0, i32 0, i64 %25
  %30 = bitcast float* %29 to i32*
  %31 = load i32, i32* %30, align 4
  %32 = getelementptr inbounds %class.GrQuad, %class.GrQuad* %2, i64 0, i32 1, i64 %25
  %33 = bitcast float* %32 to i32*
  %34 = load i32, i32* %33, align 4
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %15) #14
  %35 = getelementptr inbounds float, float* %4, i64 %25
  %36 = load float, float* %35, align 4
  %37 = load <2 x float>, <2 x float>* %21, align 4
  %38 = insertelement <2 x float> undef, float %36, i32 0
  %39 = shufflevector <2 x float> %38, <2 x float> undef, <2 x i32> zeroinitializer
  %40 = fmul <2 x float> %39, %37
  %41 = load <2 x float>, <2 x float>* %22, align 4
  %42 = fmul <2 x float> %39, %41
  store <2 x float> %40, <2 x float>* %17, align 8
  store <2 x float> %42, <2 x float>* %18, align 8
  br i1 %14, label %43, label %52

43:                                               ; preds = %24
  %44 = bitcast <2 x float> %42 to <2 x i32>
  %45 = extractelement <2 x i32> %44, i32 1
  %46 = bitcast <2 x float> %42 to <2 x i32>
  %47 = extractelement <2 x i32> %46, i32 0
  %48 = bitcast <2 x float> %40 to <2 x i32>
  %49 = extractelement <2 x i32> %48, i32 1
  %50 = bitcast <2 x float> %40 to <2 x i32>
  %51 = extractelement <2 x i32> %50, i32 0
  br label %54

52:                                               ; preds = %24
  %53 = call i32 @_ZNK8SkRGBA4fIL11SkAlphaType2EE12toBytes_RGBAEv(%struct.SkRGBA4f* nonnull %10) #14
  br label %54

54:                                               ; preds = %43, %52
  %55 = phi i32 [ %45, %43 ], [ %28, %52 ]
  %56 = phi i32 [ %47, %43 ], [ %27, %52 ]
  %57 = phi i32 [ %49, %43 ], [ %26, %52 ]
  %58 = phi i32 [ %51, %43 ], [ %53, %52 ]
  %59 = load i32*, i32** %20, align 8
  store i32 %31, i32* %59, align 1
  %60 = load i8*, i8** %19, align 8
  %61 = getelementptr inbounds i8, i8* %60, i64 4
  store i8* %61, i8** %19, align 8
  %62 = bitcast i8* %61 to i32*
  store i32 %34, i32* %62, align 1
  %63 = load i8*, i8** %19, align 8
  %64 = getelementptr inbounds i8, i8* %63, i64 4
  store i8* %64, i8** %19, align 8
  %65 = bitcast i8* %64 to i32*
  store i32 %58, i32* %65, align 1
  %66 = load i8*, i8** %19, align 8
  %67 = getelementptr inbounds i8, i8* %66, i64 4
  store i8* %67, i8** %19, align 8
  br i1 %14, label %68, label %78

68:                                               ; preds = %54
  %69 = bitcast i8* %67 to i32*
  store i32 %57, i32* %69, align 1
  %70 = load i8*, i8** %19, align 8
  %71 = getelementptr inbounds i8, i8* %70, i64 4
  store i8* %71, i8** %19, align 8
  %72 = bitcast i8* %71 to i32*
  store i32 %56, i32* %72, align 1
  %73 = load i8*, i8** %19, align 8
  %74 = getelementptr inbounds i8, i8* %73, i64 4
  store i8* %74, i8** %19, align 8
  %75 = bitcast i8* %74 to i32*
  store i32 %55, i32* %75, align 1
  %76 = load i8*, i8** %19, align 8
  %77 = getelementptr inbounds i8, i8* %76, i64 4
  store i8* %77, i8** %19, align 8
  br label %78

78:                                               ; preds = %54, %68
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %15) #14
  %79 = add nuw nsw i64 %25, 1
  %80 = icmp eq i64 %79, 4
  br i1 %80, label %23, label %24
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN12_GLOBAL__N_124write_2d_color_uv_strictEP14GrVertexWriterRKN15GrQuadPerEdgeAA10VertexSpecEPK6GrQuadS8_PKfRK8SkRGBA4fIL11SkAlphaType2EERK6SkRectSI_(%struct.GrVertexWriter* nocapture, %"struct.GrQuadPerEdgeAA::VertexSpec"* nocapture readonly dereferenceable(4), %class.GrQuad* nocapture readonly, %class.GrQuad* nocapture readonly, float* nocapture readonly, %struct.SkRGBA4f* nocapture readonly dereferenceable(16), %struct.SkRect* nocapture readnone dereferenceable(16), %struct.SkRect* nocapture readonly dereferenceable(16)) #4 {
  %9 = alloca { <2 x float>, <2 x float> }, align 8
  %10 = bitcast { <2 x float>, <2 x float> }* %9 to %struct.SkRGBA4f*
  %11 = getelementptr inbounds %"struct.GrQuadPerEdgeAA::VertexSpec", %"struct.GrQuadPerEdgeAA::VertexSpec"* %1, i64 0, i32 0
  %12 = load i16, i16* %11, align 4
  %13 = and i16 %12, 384
  %14 = icmp eq i16 %13, 256
  %15 = bitcast { <2 x float>, <2 x float> }* %9 to i8*
  %16 = getelementptr inbounds %struct.SkRGBA4f, %struct.SkRGBA4f* %5, i64 0, i32 2
  %17 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %9, i64 0, i32 0
  %18 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %9, i64 0, i32 1
  %19 = getelementptr inbounds %struct.GrVertexWriter, %struct.GrVertexWriter* %0, i64 0, i32 0
  %20 = bitcast %struct.GrVertexWriter* %0 to i32**
  %21 = bitcast %struct.SkRect* %7 to i8*
  %22 = bitcast %struct.SkRGBA4f* %5 to <2 x float>*
  %23 = bitcast float* %16 to <2 x float>*
  br label %25

24:                                               ; preds = %86
  ret void

25:                                               ; preds = %86, %8
  %26 = phi i64 [ 0, %8 ], [ %95, %86 ]
  %27 = phi i32 [ undef, %8 ], [ %59, %86 ]
  %28 = phi i32 [ undef, %8 ], [ %58, %86 ]
  %29 = phi i32 [ undef, %8 ], [ %56, %86 ]
  %30 = getelementptr inbounds %class.GrQuad, %class.GrQuad* %2, i64 0, i32 0, i64 %26
  %31 = bitcast float* %30 to i32*
  %32 = load i32, i32* %31, align 4
  %33 = getelementptr inbounds %class.GrQuad, %class.GrQuad* %2, i64 0, i32 1, i64 %26
  %34 = bitcast float* %33 to i32*
  %35 = load i32, i32* %34, align 4
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %15) #14
  %36 = getelementptr inbounds float, float* %4, i64 %26
  %37 = load float, float* %36, align 4
  %38 = load <2 x float>, <2 x float>* %22, align 4
  %39 = insertelement <2 x float> undef, float %37, i32 0
  %40 = shufflevector <2 x float> %39, <2 x float> undef, <2 x i32> zeroinitializer
  %41 = fmul <2 x float> %40, %38
  %42 = load <2 x float>, <2 x float>* %23, align 4
  %43 = fmul <2 x float> %40, %42
  store <2 x float> %41, <2 x float>* %17, align 8
  store <2 x float> %43, <2 x float>* %18, align 8
  br i1 %14, label %44, label %53

44:                                               ; preds = %25
  %45 = bitcast <2 x float> %43 to <2 x i32>
  %46 = extractelement <2 x i32> %45, i32 1
  %47 = bitcast <2 x float> %43 to <2 x i32>
  %48 = extractelement <2 x i32> %47, i32 0
  %49 = bitcast <2 x float> %41 to <2 x i32>
  %50 = extractelement <2 x i32> %49, i32 1
  %51 = bitcast <2 x float> %41 to <2 x i32>
  %52 = extractelement <2 x i32> %51, i32 0
  br label %55

53:                                               ; preds = %25
  %54 = call i32 @_ZNK8SkRGBA4fIL11SkAlphaType2EE12toBytes_RGBAEv(%struct.SkRGBA4f* nonnull %10) #14
  br label %55

55:                                               ; preds = %44, %53
  %56 = phi i32 [ %50, %44 ], [ %29, %53 ]
  %57 = phi i32 [ %52, %44 ], [ %54, %53 ]
  %58 = phi i32 [ %48, %44 ], [ %28, %53 ]
  %59 = phi i32 [ %46, %44 ], [ %27, %53 ]
  %60 = getelementptr inbounds %class.GrQuad, %class.GrQuad* %3, i64 0, i32 0, i64 %26
  %61 = bitcast float* %60 to i32*
  %62 = load i32, i32* %61, align 4
  %63 = getelementptr inbounds %class.GrQuad, %class.GrQuad* %3, i64 0, i32 1, i64 %26
  %64 = bitcast float* %63 to i32*
  %65 = load i32, i32* %64, align 4
  %66 = load i32*, i32** %20, align 8
  store i32 %32, i32* %66, align 1
  %67 = load i8*, i8** %19, align 8
  %68 = getelementptr inbounds i8, i8* %67, i64 4
  store i8* %68, i8** %19, align 8
  %69 = bitcast i8* %68 to i32*
  store i32 %35, i32* %69, align 1
  %70 = load i8*, i8** %19, align 8
  %71 = getelementptr inbounds i8, i8* %70, i64 4
  store i8* %71, i8** %19, align 8
  %72 = bitcast i8* %71 to i32*
  store i32 %57, i32* %72, align 1
  %73 = load i8*, i8** %19, align 8
  %74 = getelementptr inbounds i8, i8* %73, i64 4
  store i8* %74, i8** %19, align 8
  %75 = bitcast i8* %74 to i32*
  br i1 %14, label %76, label %86

76:                                               ; preds = %55
  store i32 %56, i32* %75, align 1
  %77 = load i8*, i8** %19, align 8
  %78 = getelementptr inbounds i8, i8* %77, i64 4
  store i8* %78, i8** %19, align 8
  %79 = bitcast i8* %78 to i32*
  store i32 %58, i32* %79, align 1
  %80 = load i8*, i8** %19, align 8
  %81 = getelementptr inbounds i8, i8* %80, i64 4
  store i8* %81, i8** %19, align 8
  %82 = bitcast i8* %81 to i32*
  store i32 %59, i32* %82, align 1
  %83 = load i8*, i8** %19, align 8
  %84 = getelementptr inbounds i8, i8* %83, i64 4
  store i8* %84, i8** %19, align 8
  %85 = bitcast i8* %84 to i32*
  br label %86

86:                                               ; preds = %55, %76
  %87 = phi i32* [ %75, %55 ], [ %85, %76 ]
  store i32 %62, i32* %87, align 1
  %88 = load i8*, i8** %19, align 8
  %89 = getelementptr inbounds i8, i8* %88, i64 4
  store i8* %89, i8** %19, align 8
  %90 = bitcast i8* %89 to i32*
  store i32 %65, i32* %90, align 1
  %91 = load i8*, i8** %19, align 8
  %92 = getelementptr inbounds i8, i8* %91, i64 4
  store i8* %92, i8** %19, align 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %92, i8* align 4 %21, i64 16, i1 false) #14
  %93 = load i8*, i8** %19, align 8
  %94 = getelementptr inbounds i8, i8* %93, i64 16
  store i8* %94, i8** %19, align 8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %15) #14
  %95 = add nuw nsw i64 %26, 1
  %96 = icmp eq i64 %95, 4
  br i1 %96, label %24, label %25
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN12_GLOBAL__N_117write_2d_color_uvEP14GrVertexWriterRKN15GrQuadPerEdgeAA10VertexSpecEPK6GrQuadS8_PKfRK8SkRGBA4fIL11SkAlphaType2EERK6SkRectSI_(%struct.GrVertexWriter* nocapture, %"struct.GrQuadPerEdgeAA::VertexSpec"* nocapture readonly dereferenceable(4), %class.GrQuad* nocapture readonly, %class.GrQuad* nocapture readonly, float* nocapture readonly, %struct.SkRGBA4f* nocapture readonly dereferenceable(16), %struct.SkRect* nocapture readnone dereferenceable(16), %struct.SkRect* nocapture readnone dereferenceable(16)) #4 {
  %9 = alloca { <2 x float>, <2 x float> }, align 8
  %10 = bitcast { <2 x float>, <2 x float> }* %9 to %struct.SkRGBA4f*
  %11 = getelementptr inbounds %"struct.GrQuadPerEdgeAA::VertexSpec", %"struct.GrQuadPerEdgeAA::VertexSpec"* %1, i64 0, i32 0
  %12 = load i16, i16* %11, align 4
  %13 = and i16 %12, 384
  %14 = icmp eq i16 %13, 256
  %15 = bitcast { <2 x float>, <2 x float> }* %9 to i8*
  %16 = getelementptr inbounds %struct.SkRGBA4f, %struct.SkRGBA4f* %5, i64 0, i32 2
  %17 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %9, i64 0, i32 0
  %18 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %9, i64 0, i32 1
  %19 = getelementptr inbounds %struct.GrVertexWriter, %struct.GrVertexWriter* %0, i64 0, i32 0
  %20 = bitcast %struct.GrVertexWriter* %0 to i32**
  %21 = bitcast %struct.SkRGBA4f* %5 to <2 x float>*
  %22 = bitcast float* %16 to <2 x float>*
  br label %24

23:                                               ; preds = %85
  ret void

24:                                               ; preds = %85, %8
  %25 = phi i64 [ 0, %8 ], [ %92, %85 ]
  %26 = phi i32 [ undef, %8 ], [ %58, %85 ]
  %27 = phi i32 [ undef, %8 ], [ %57, %85 ]
  %28 = phi i32 [ undef, %8 ], [ %55, %85 ]
  %29 = getelementptr inbounds %class.GrQuad, %class.GrQuad* %2, i64 0, i32 0, i64 %25
  %30 = bitcast float* %29 to i32*
  %31 = load i32, i32* %30, align 4
  %32 = getelementptr inbounds %class.GrQuad, %class.GrQuad* %2, i64 0, i32 1, i64 %25
  %33 = bitcast float* %32 to i32*
  %34 = load i32, i32* %33, align 4
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %15) #14
  %35 = getelementptr inbounds float, float* %4, i64 %25
  %36 = load float, float* %35, align 4
  %37 = load <2 x float>, <2 x float>* %21, align 4
  %38 = insertelement <2 x float> undef, float %36, i32 0
  %39 = shufflevector <2 x float> %38, <2 x float> undef, <2 x i32> zeroinitializer
  %40 = fmul <2 x float> %39, %37
  %41 = load <2 x float>, <2 x float>* %22, align 4
  %42 = fmul <2 x float> %39, %41
  store <2 x float> %40, <2 x float>* %17, align 8
  store <2 x float> %42, <2 x float>* %18, align 8
  br i1 %14, label %43, label %52

43:                                               ; preds = %24
  %44 = bitcast <2 x float> %42 to <2 x i32>
  %45 = extractelement <2 x i32> %44, i32 1
  %46 = bitcast <2 x float> %42 to <2 x i32>
  %47 = extractelement <2 x i32> %46, i32 0
  %48 = bitcast <2 x float> %40 to <2 x i32>
  %49 = extractelement <2 x i32> %48, i32 1
  %50 = bitcast <2 x float> %40 to <2 x i32>
  %51 = extractelement <2 x i32> %50, i32 0
  br label %54

52:                                               ; preds = %24
  %53 = call i32 @_ZNK8SkRGBA4fIL11SkAlphaType2EE12toBytes_RGBAEv(%struct.SkRGBA4f* nonnull %10) #14
  br label %54

54:                                               ; preds = %43, %52
  %55 = phi i32 [ %49, %43 ], [ %28, %52 ]
  %56 = phi i32 [ %51, %43 ], [ %53, %52 ]
  %57 = phi i32 [ %47, %43 ], [ %27, %52 ]
  %58 = phi i32 [ %45, %43 ], [ %26, %52 ]
  %59 = getelementptr inbounds %class.GrQuad, %class.GrQuad* %3, i64 0, i32 0, i64 %25
  %60 = bitcast float* %59 to i32*
  %61 = load i32, i32* %60, align 4
  %62 = getelementptr inbounds %class.GrQuad, %class.GrQuad* %3, i64 0, i32 1, i64 %25
  %63 = bitcast float* %62 to i32*
  %64 = load i32, i32* %63, align 4
  %65 = load i32*, i32** %20, align 8
  store i32 %31, i32* %65, align 1
  %66 = load i8*, i8** %19, align 8
  %67 = getelementptr inbounds i8, i8* %66, i64 4
  store i8* %67, i8** %19, align 8
  %68 = bitcast i8* %67 to i32*
  store i32 %34, i32* %68, align 1
  %69 = load i8*, i8** %19, align 8
  %70 = getelementptr inbounds i8, i8* %69, i64 4
  store i8* %70, i8** %19, align 8
  %71 = bitcast i8* %70 to i32*
  store i32 %56, i32* %71, align 1
  %72 = load i8*, i8** %19, align 8
  %73 = getelementptr inbounds i8, i8* %72, i64 4
  store i8* %73, i8** %19, align 8
  %74 = bitcast i8* %73 to i32*
  br i1 %14, label %75, label %85

75:                                               ; preds = %54
  store i32 %55, i32* %74, align 1
  %76 = load i8*, i8** %19, align 8
  %77 = getelementptr inbounds i8, i8* %76, i64 4
  store i8* %77, i8** %19, align 8
  %78 = bitcast i8* %77 to i32*
  store i32 %57, i32* %78, align 1
  %79 = load i8*, i8** %19, align 8
  %80 = getelementptr inbounds i8, i8* %79, i64 4
  store i8* %80, i8** %19, align 8
  %81 = bitcast i8* %80 to i32*
  store i32 %58, i32* %81, align 1
  %82 = load i8*, i8** %19, align 8
  %83 = getelementptr inbounds i8, i8* %82, i64 4
  store i8* %83, i8** %19, align 8
  %84 = bitcast i8* %83 to i32*
  br label %85

85:                                               ; preds = %54, %75
  %86 = phi i32* [ %74, %54 ], [ %84, %75 ]
  store i32 %61, i32* %86, align 1
  %87 = load i8*, i8** %19, align 8
  %88 = getelementptr inbounds i8, i8* %87, i64 4
  store i8* %88, i8** %19, align 8
  %89 = bitcast i8* %88 to i32*
  store i32 %64, i32* %89, align 1
  %90 = load i8*, i8** %19, align 8
  %91 = getelementptr inbounds i8, i8* %90, i64 4
  store i8* %91, i8** %19, align 8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %15) #14
  %92 = add nuw nsw i64 %25, 1
  %93 = icmp eq i64 %92, 4
  br i1 %93, label %23, label %24
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN12_GLOBAL__N_122write_2d_cov_uv_strictEP14GrVertexWriterRKN15GrQuadPerEdgeAA10VertexSpecEPK6GrQuadS8_PKfRK8SkRGBA4fIL11SkAlphaType2EERK6SkRectSI_(%struct.GrVertexWriter* nocapture, %"struct.GrQuadPerEdgeAA::VertexSpec"* nocapture readnone dereferenceable(4), %class.GrQuad* nocapture readonly, %class.GrQuad* nocapture readonly, float* nocapture readonly, %struct.SkRGBA4f* nocapture readnone dereferenceable(16), %struct.SkRect* nocapture readnone dereferenceable(16), %struct.SkRect* nocapture readonly dereferenceable(16)) #4 {
  %9 = getelementptr inbounds %struct.GrVertexWriter, %struct.GrVertexWriter* %0, i64 0, i32 0
  %10 = bitcast %struct.GrVertexWriter* %0 to i32**
  %11 = bitcast %struct.SkRect* %7 to i8*
  %12 = bitcast %class.GrQuad* %2 to i32*
  %13 = load i32, i32* %12, align 4
  %14 = getelementptr inbounds %class.GrQuad, %class.GrQuad* %2, i64 0, i32 1, i64 0
  %15 = bitcast float* %14 to i32*
  %16 = load i32, i32* %15, align 4
  %17 = bitcast %class.GrQuad* %3 to i32*
  %18 = load i32, i32* %17, align 4
  %19 = getelementptr inbounds %class.GrQuad, %class.GrQuad* %3, i64 0, i32 1, i64 0
  %20 = bitcast float* %19 to i32*
  %21 = load i32, i32* %20, align 4
  %22 = load i32*, i32** %10, align 8
  store i32 %13, i32* %22, align 1
  %23 = load i8*, i8** %9, align 8
  %24 = getelementptr inbounds i8, i8* %23, i64 4
  store i8* %24, i8** %9, align 8
  %25 = bitcast i8* %24 to i32*
  store i32 %16, i32* %25, align 1
  %26 = load i8*, i8** %9, align 8
  %27 = getelementptr inbounds i8, i8* %26, i64 4
  store i8* %27, i8** %9, align 8
  %28 = bitcast i8* %27 to i32*
  %29 = bitcast float* %4 to i32*
  %30 = load i32, i32* %29, align 4
  store i32 %30, i32* %28, align 1
  %31 = load i8*, i8** %9, align 8
  %32 = getelementptr inbounds i8, i8* %31, i64 4
  store i8* %32, i8** %9, align 8
  %33 = bitcast i8* %32 to i32*
  store i32 %18, i32* %33, align 1
  %34 = load i8*, i8** %9, align 8
  %35 = getelementptr inbounds i8, i8* %34, i64 4
  store i8* %35, i8** %9, align 8
  %36 = bitcast i8* %35 to i32*
  store i32 %21, i32* %36, align 1
  %37 = load i8*, i8** %9, align 8
  %38 = getelementptr inbounds i8, i8* %37, i64 4
  store i8* %38, i8** %9, align 8
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %38, i8* align 4 %11, i64 16, i1 false) #14
  %39 = load i8*, i8** %9, align 8
  %40 = getelementptr inbounds i8, i8* %39, i64 16
  store i8* %40, i8** %9, align 8
  %41 = getelementptr inbounds %class.GrQuad, %class.GrQuad* %2, i64 0, i32 0, i64 1
  %42 = bitcast float* %41 to i32*
  %43 = load i32, i32* %42, align 4
  %44 = getelementptr inbounds %class.GrQuad, %class.GrQuad* %2, i64 0, i32 1, i64 1
  %45 = bitcast float* %44 to i32*
  %46 = load i32, i32* %45, align 4
  %47 = getelementptr inbounds float, float* %4, i64 1
  %48 = getelementptr inbounds %class.GrQuad, %class.GrQuad* %3, i64 0, i32 0, i64 1
  %49 = bitcast float* %48 to i32*
  %50 = load i32, i32* %49, align 4
  %51 = getelementptr inbounds %class.GrQuad, %class.GrQuad* %3, i64 0, i32 1, i64 1
  %52 = bitcast float* %51 to i32*
  %53 = load i32, i32* %52, align 4
  %54 = bitcast i8* %40 to i32*
  store i32 %43, i32* %54, align 1
  %55 = load i8*, i8** %9, align 8
  %56 = getelementptr inbounds i8, i8* %55, i64 4
  store i8* %56, i8** %9, align 8
  %57 = bitcast i8* %56 to i32*
  store i32 %46, i32* %57, align 1
  %58 = load i8*, i8** %9, align 8
  %59 = getelementptr inbounds i8, i8* %58, i64 4
  store i8* %59, i8** %9, align 8
  %60 = bitcast i8* %59 to i32*
  %61 = bitcast float* %47 to i32*
  %62 = load i32, i32* %61, align 4
  store i32 %62, i32* %60, align 1
  %63 = load i8*, i8** %9, align 8
  %64 = getelementptr inbounds i8, i8* %63, i64 4
  store i8* %64, i8** %9, align 8
  %65 = bitcast i8* %64 to i32*
  store i32 %50, i32* %65, align 1
  %66 = load i8*, i8** %9, align 8
  %67 = getelementptr inbounds i8, i8* %66, i64 4
  store i8* %67, i8** %9, align 8
  %68 = bitcast i8* %67 to i32*
  store i32 %53, i32* %68, align 1
  %69 = load i8*, i8** %9, align 8
  %70 = getelementptr inbounds i8, i8* %69, i64 4
  store i8* %70, i8** %9, align 8
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %70, i8* align 4 %11, i64 16, i1 false) #14
  %71 = load i8*, i8** %9, align 8
  %72 = getelementptr inbounds i8, i8* %71, i64 16
  store i8* %72, i8** %9, align 8
  %73 = getelementptr inbounds %class.GrQuad, %class.GrQuad* %2, i64 0, i32 0, i64 2
  %74 = bitcast float* %73 to i32*
  %75 = load i32, i32* %74, align 4
  %76 = getelementptr inbounds %class.GrQuad, %class.GrQuad* %2, i64 0, i32 1, i64 2
  %77 = bitcast float* %76 to i32*
  %78 = load i32, i32* %77, align 4
  %79 = getelementptr inbounds float, float* %4, i64 2
  %80 = getelementptr inbounds %class.GrQuad, %class.GrQuad* %3, i64 0, i32 0, i64 2
  %81 = bitcast float* %80 to i32*
  %82 = load i32, i32* %81, align 4
  %83 = getelementptr inbounds %class.GrQuad, %class.GrQuad* %3, i64 0, i32 1, i64 2
  %84 = bitcast float* %83 to i32*
  %85 = load i32, i32* %84, align 4
  %86 = bitcast i8* %72 to i32*
  store i32 %75, i32* %86, align 1
  %87 = load i8*, i8** %9, align 8
  %88 = getelementptr inbounds i8, i8* %87, i64 4
  store i8* %88, i8** %9, align 8
  %89 = bitcast i8* %88 to i32*
  store i32 %78, i32* %89, align 1
  %90 = load i8*, i8** %9, align 8
  %91 = getelementptr inbounds i8, i8* %90, i64 4
  store i8* %91, i8** %9, align 8
  %92 = bitcast i8* %91 to i32*
  %93 = bitcast float* %79 to i32*
  %94 = load i32, i32* %93, align 4
  store i32 %94, i32* %92, align 1
  %95 = load i8*, i8** %9, align 8
  %96 = getelementptr inbounds i8, i8* %95, i64 4
  store i8* %96, i8** %9, align 8
  %97 = bitcast i8* %96 to i32*
  store i32 %82, i32* %97, align 1
  %98 = load i8*, i8** %9, align 8
  %99 = getelementptr inbounds i8, i8* %98, i64 4
  store i8* %99, i8** %9, align 8
  %100 = bitcast i8* %99 to i32*
  store i32 %85, i32* %100, align 1
  %101 = load i8*, i8** %9, align 8
  %102 = getelementptr inbounds i8, i8* %101, i64 4
  store i8* %102, i8** %9, align 8
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %102, i8* align 4 %11, i64 16, i1 false) #14
  %103 = load i8*, i8** %9, align 8
  %104 = getelementptr inbounds i8, i8* %103, i64 16
  store i8* %104, i8** %9, align 8
  %105 = getelementptr inbounds %class.GrQuad, %class.GrQuad* %2, i64 0, i32 0, i64 3
  %106 = bitcast float* %105 to i32*
  %107 = load i32, i32* %106, align 4
  %108 = getelementptr inbounds %class.GrQuad, %class.GrQuad* %2, i64 0, i32 1, i64 3
  %109 = bitcast float* %108 to i32*
  %110 = load i32, i32* %109, align 4
  %111 = getelementptr inbounds float, float* %4, i64 3
  %112 = getelementptr inbounds %class.GrQuad, %class.GrQuad* %3, i64 0, i32 0, i64 3
  %113 = bitcast float* %112 to i32*
  %114 = load i32, i32* %113, align 4
  %115 = getelementptr inbounds %class.GrQuad, %class.GrQuad* %3, i64 0, i32 1, i64 3
  %116 = bitcast float* %115 to i32*
  %117 = load i32, i32* %116, align 4
  %118 = bitcast i8* %104 to i32*
  store i32 %107, i32* %118, align 1
  %119 = load i8*, i8** %9, align 8
  %120 = getelementptr inbounds i8, i8* %119, i64 4
  store i8* %120, i8** %9, align 8
  %121 = bitcast i8* %120 to i32*
  store i32 %110, i32* %121, align 1
  %122 = load i8*, i8** %9, align 8
  %123 = getelementptr inbounds i8, i8* %122, i64 4
  store i8* %123, i8** %9, align 8
  %124 = bitcast i8* %123 to i32*
  %125 = bitcast float* %111 to i32*
  %126 = load i32, i32* %125, align 4
  store i32 %126, i32* %124, align 1
  %127 = load i8*, i8** %9, align 8
  %128 = getelementptr inbounds i8, i8* %127, i64 4
  store i8* %128, i8** %9, align 8
  %129 = bitcast i8* %128 to i32*
  store i32 %114, i32* %129, align 1
  %130 = load i8*, i8** %9, align 8
  %131 = getelementptr inbounds i8, i8* %130, i64 4
  store i8* %131, i8** %9, align 8
  %132 = bitcast i8* %131 to i32*
  store i32 %117, i32* %132, align 1
  %133 = load i8*, i8** %9, align 8
  %134 = getelementptr inbounds i8, i8* %133, i64 4
  store i8* %134, i8** %9, align 8
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %134, i8* align 4 %11, i64 16, i1 false) #14
  %135 = load i8*, i8** %9, align 8
  %136 = getelementptr inbounds i8, i8* %135, i64 16
  store i8* %136, i8** %9, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN12_GLOBAL__N_115write_2d_cov_uvEP14GrVertexWriterRKN15GrQuadPerEdgeAA10VertexSpecEPK6GrQuadS8_PKfRK8SkRGBA4fIL11SkAlphaType2EERK6SkRectSI_(%struct.GrVertexWriter* nocapture, %"struct.GrQuadPerEdgeAA::VertexSpec"* nocapture readnone dereferenceable(4), %class.GrQuad* nocapture readonly, %class.GrQuad* nocapture readonly, float* nocapture readonly, %struct.SkRGBA4f* nocapture readnone dereferenceable(16), %struct.SkRect* nocapture readnone dereferenceable(16), %struct.SkRect* nocapture readnone dereferenceable(16)) #4 {
  %9 = getelementptr inbounds %struct.GrVertexWriter, %struct.GrVertexWriter* %0, i64 0, i32 0
  %10 = bitcast %struct.GrVertexWriter* %0 to i32**
  %11 = bitcast %class.GrQuad* %2 to i32*
  %12 = load i32, i32* %11, align 4
  %13 = getelementptr inbounds %class.GrQuad, %class.GrQuad* %2, i64 0, i32 1, i64 0
  %14 = bitcast float* %13 to i32*
  %15 = load i32, i32* %14, align 4
  %16 = bitcast %class.GrQuad* %3 to i32*
  %17 = load i32, i32* %16, align 4
  %18 = getelementptr inbounds %class.GrQuad, %class.GrQuad* %3, i64 0, i32 1, i64 0
  %19 = bitcast float* %18 to i32*
  %20 = load i32, i32* %19, align 4
  %21 = load i32*, i32** %10, align 8
  store i32 %12, i32* %21, align 1
  %22 = load i8*, i8** %9, align 8
  %23 = getelementptr inbounds i8, i8* %22, i64 4
  store i8* %23, i8** %9, align 8
  %24 = bitcast i8* %23 to i32*
  store i32 %15, i32* %24, align 1
  %25 = load i8*, i8** %9, align 8
  %26 = getelementptr inbounds i8, i8* %25, i64 4
  store i8* %26, i8** %9, align 8
  %27 = bitcast i8* %26 to i32*
  %28 = bitcast float* %4 to i32*
  %29 = load i32, i32* %28, align 4
  store i32 %29, i32* %27, align 1
  %30 = load i8*, i8** %9, align 8
  %31 = getelementptr inbounds i8, i8* %30, i64 4
  store i8* %31, i8** %9, align 8
  %32 = bitcast i8* %31 to i32*
  store i32 %17, i32* %32, align 1
  %33 = load i8*, i8** %9, align 8
  %34 = getelementptr inbounds i8, i8* %33, i64 4
  store i8* %34, i8** %9, align 8
  %35 = bitcast i8* %34 to i32*
  store i32 %20, i32* %35, align 1
  %36 = load i8*, i8** %9, align 8
  %37 = getelementptr inbounds i8, i8* %36, i64 4
  store i8* %37, i8** %9, align 8
  %38 = getelementptr inbounds %class.GrQuad, %class.GrQuad* %2, i64 0, i32 0, i64 1
  %39 = bitcast float* %38 to i32*
  %40 = load i32, i32* %39, align 4
  %41 = getelementptr inbounds %class.GrQuad, %class.GrQuad* %2, i64 0, i32 1, i64 1
  %42 = bitcast float* %41 to i32*
  %43 = load i32, i32* %42, align 4
  %44 = getelementptr inbounds float, float* %4, i64 1
  %45 = getelementptr inbounds %class.GrQuad, %class.GrQuad* %3, i64 0, i32 0, i64 1
  %46 = bitcast float* %45 to i32*
  %47 = load i32, i32* %46, align 4
  %48 = getelementptr inbounds %class.GrQuad, %class.GrQuad* %3, i64 0, i32 1, i64 1
  %49 = bitcast float* %48 to i32*
  %50 = load i32, i32* %49, align 4
  %51 = bitcast i8* %37 to i32*
  store i32 %40, i32* %51, align 1
  %52 = load i8*, i8** %9, align 8
  %53 = getelementptr inbounds i8, i8* %52, i64 4
  store i8* %53, i8** %9, align 8
  %54 = bitcast i8* %53 to i32*
  store i32 %43, i32* %54, align 1
  %55 = load i8*, i8** %9, align 8
  %56 = getelementptr inbounds i8, i8* %55, i64 4
  store i8* %56, i8** %9, align 8
  %57 = bitcast i8* %56 to i32*
  %58 = bitcast float* %44 to i32*
  %59 = load i32, i32* %58, align 4
  store i32 %59, i32* %57, align 1
  %60 = load i8*, i8** %9, align 8
  %61 = getelementptr inbounds i8, i8* %60, i64 4
  store i8* %61, i8** %9, align 8
  %62 = bitcast i8* %61 to i32*
  store i32 %47, i32* %62, align 1
  %63 = load i8*, i8** %9, align 8
  %64 = getelementptr inbounds i8, i8* %63, i64 4
  store i8* %64, i8** %9, align 8
  %65 = bitcast i8* %64 to i32*
  store i32 %50, i32* %65, align 1
  %66 = load i8*, i8** %9, align 8
  %67 = getelementptr inbounds i8, i8* %66, i64 4
  store i8* %67, i8** %9, align 8
  %68 = getelementptr inbounds %class.GrQuad, %class.GrQuad* %2, i64 0, i32 0, i64 2
  %69 = bitcast float* %68 to i32*
  %70 = load i32, i32* %69, align 4
  %71 = getelementptr inbounds %class.GrQuad, %class.GrQuad* %2, i64 0, i32 1, i64 2
  %72 = bitcast float* %71 to i32*
  %73 = load i32, i32* %72, align 4
  %74 = getelementptr inbounds float, float* %4, i64 2
  %75 = getelementptr inbounds %class.GrQuad, %class.GrQuad* %3, i64 0, i32 0, i64 2
  %76 = bitcast float* %75 to i32*
  %77 = load i32, i32* %76, align 4
  %78 = getelementptr inbounds %class.GrQuad, %class.GrQuad* %3, i64 0, i32 1, i64 2
  %79 = bitcast float* %78 to i32*
  %80 = load i32, i32* %79, align 4
  %81 = bitcast i8* %67 to i32*
  store i32 %70, i32* %81, align 1
  %82 = load i8*, i8** %9, align 8
  %83 = getelementptr inbounds i8, i8* %82, i64 4
  store i8* %83, i8** %9, align 8
  %84 = bitcast i8* %83 to i32*
  store i32 %73, i32* %84, align 1
  %85 = load i8*, i8** %9, align 8
  %86 = getelementptr inbounds i8, i8* %85, i64 4
  store i8* %86, i8** %9, align 8
  %87 = bitcast i8* %86 to i32*
  %88 = bitcast float* %74 to i32*
  %89 = load i32, i32* %88, align 4
  store i32 %89, i32* %87, align 1
  %90 = load i8*, i8** %9, align 8
  %91 = getelementptr inbounds i8, i8* %90, i64 4
  store i8* %91, i8** %9, align 8
  %92 = bitcast i8* %91 to i32*
  store i32 %77, i32* %92, align 1
  %93 = load i8*, i8** %9, align 8
  %94 = getelementptr inbounds i8, i8* %93, i64 4
  store i8* %94, i8** %9, align 8
  %95 = bitcast i8* %94 to i32*
  store i32 %80, i32* %95, align 1
  %96 = load i8*, i8** %9, align 8
  %97 = getelementptr inbounds i8, i8* %96, i64 4
  store i8* %97, i8** %9, align 8
  %98 = getelementptr inbounds %class.GrQuad, %class.GrQuad* %2, i64 0, i32 0, i64 3
  %99 = bitcast float* %98 to i32*
  %100 = load i32, i32* %99, align 4
  %101 = getelementptr inbounds %class.GrQuad, %class.GrQuad* %2, i64 0, i32 1, i64 3
  %102 = bitcast float* %101 to i32*
  %103 = load i32, i32* %102, align 4
  %104 = getelementptr inbounds float, float* %4, i64 3
  %105 = getelementptr inbounds %class.GrQuad, %class.GrQuad* %3, i64 0, i32 0, i64 3
  %106 = bitcast float* %105 to i32*
  %107 = load i32, i32* %106, align 4
  %108 = getelementptr inbounds %class.GrQuad, %class.GrQuad* %3, i64 0, i32 1, i64 3
  %109 = bitcast float* %108 to i32*
  %110 = load i32, i32* %109, align 4
  %111 = bitcast i8* %97 to i32*
  store i32 %100, i32* %111, align 1
  %112 = load i8*, i8** %9, align 8
  %113 = getelementptr inbounds i8, i8* %112, i64 4
  store i8* %113, i8** %9, align 8
  %114 = bitcast i8* %113 to i32*
  store i32 %103, i32* %114, align 1
  %115 = load i8*, i8** %9, align 8
  %116 = getelementptr inbounds i8, i8* %115, i64 4
  store i8* %116, i8** %9, align 8
  %117 = bitcast i8* %116 to i32*
  %118 = bitcast float* %104 to i32*
  %119 = load i32, i32* %118, align 4
  store i32 %119, i32* %117, align 1
  %120 = load i8*, i8** %9, align 8
  %121 = getelementptr inbounds i8, i8* %120, i64 4
  store i8* %121, i8** %9, align 8
  %122 = bitcast i8* %121 to i32*
  store i32 %107, i32* %122, align 1
  %123 = load i8*, i8** %9, align 8
  %124 = getelementptr inbounds i8, i8* %123, i64 4
  store i8* %124, i8** %9, align 8
  %125 = bitcast i8* %124 to i32*
  store i32 %110, i32* %125, align 1
  %126 = load i8*, i8** %9, align 8
  %127 = getelementptr inbounds i8, i8* %126, i64 4
  store i8* %127, i8** %9, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN12_GLOBAL__N_118write_2d_uv_strictEP14GrVertexWriterRKN15GrQuadPerEdgeAA10VertexSpecEPK6GrQuadS8_PKfRK8SkRGBA4fIL11SkAlphaType2EERK6SkRectSI_(%struct.GrVertexWriter* nocapture, %"struct.GrQuadPerEdgeAA::VertexSpec"* nocapture readnone dereferenceable(4), %class.GrQuad* nocapture readonly, %class.GrQuad* nocapture readonly, float* nocapture readnone, %struct.SkRGBA4f* nocapture readnone dereferenceable(16), %struct.SkRect* nocapture readnone dereferenceable(16), %struct.SkRect* nocapture readonly dereferenceable(16)) #4 {
  %9 = getelementptr inbounds %struct.GrVertexWriter, %struct.GrVertexWriter* %0, i64 0, i32 0
  %10 = bitcast %struct.GrVertexWriter* %0 to i32**
  %11 = bitcast %struct.SkRect* %7 to i8*
  %12 = bitcast %class.GrQuad* %2 to i32*
  %13 = load i32, i32* %12, align 4
  %14 = getelementptr inbounds %class.GrQuad, %class.GrQuad* %2, i64 0, i32 1, i64 0
  %15 = bitcast float* %14 to i32*
  %16 = load i32, i32* %15, align 4
  %17 = bitcast %class.GrQuad* %3 to i32*
  %18 = load i32, i32* %17, align 4
  %19 = getelementptr inbounds %class.GrQuad, %class.GrQuad* %3, i64 0, i32 1, i64 0
  %20 = bitcast float* %19 to i32*
  %21 = load i32, i32* %20, align 4
  %22 = load i32*, i32** %10, align 8
  store i32 %13, i32* %22, align 1
  %23 = load i8*, i8** %9, align 8
  %24 = getelementptr inbounds i8, i8* %23, i64 4
  store i8* %24, i8** %9, align 8
  %25 = bitcast i8* %24 to i32*
  store i32 %16, i32* %25, align 1
  %26 = load i8*, i8** %9, align 8
  %27 = getelementptr inbounds i8, i8* %26, i64 4
  store i8* %27, i8** %9, align 8
  %28 = bitcast i8* %27 to i32*
  store i32 %18, i32* %28, align 1
  %29 = load i8*, i8** %9, align 8
  %30 = getelementptr inbounds i8, i8* %29, i64 4
  store i8* %30, i8** %9, align 8
  %31 = bitcast i8* %30 to i32*
  store i32 %21, i32* %31, align 1
  %32 = load i8*, i8** %9, align 8
  %33 = getelementptr inbounds i8, i8* %32, i64 4
  store i8* %33, i8** %9, align 8
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %33, i8* align 4 %11, i64 16, i1 false) #14
  %34 = load i8*, i8** %9, align 8
  %35 = getelementptr inbounds i8, i8* %34, i64 16
  store i8* %35, i8** %9, align 8
  %36 = getelementptr inbounds %class.GrQuad, %class.GrQuad* %2, i64 0, i32 0, i64 1
  %37 = bitcast float* %36 to i32*
  %38 = load i32, i32* %37, align 4
  %39 = getelementptr inbounds %class.GrQuad, %class.GrQuad* %2, i64 0, i32 1, i64 1
  %40 = bitcast float* %39 to i32*
  %41 = load i32, i32* %40, align 4
  %42 = getelementptr inbounds %class.GrQuad, %class.GrQuad* %3, i64 0, i32 0, i64 1
  %43 = bitcast float* %42 to i32*
  %44 = load i32, i32* %43, align 4
  %45 = getelementptr inbounds %class.GrQuad, %class.GrQuad* %3, i64 0, i32 1, i64 1
  %46 = bitcast float* %45 to i32*
  %47 = load i32, i32* %46, align 4
  %48 = bitcast i8* %35 to i32*
  store i32 %38, i32* %48, align 1
  %49 = load i8*, i8** %9, align 8
  %50 = getelementptr inbounds i8, i8* %49, i64 4
  store i8* %50, i8** %9, align 8
  %51 = bitcast i8* %50 to i32*
  store i32 %41, i32* %51, align 1
  %52 = load i8*, i8** %9, align 8
  %53 = getelementptr inbounds i8, i8* %52, i64 4
  store i8* %53, i8** %9, align 8
  %54 = bitcast i8* %53 to i32*
  store i32 %44, i32* %54, align 1
  %55 = load i8*, i8** %9, align 8
  %56 = getelementptr inbounds i8, i8* %55, i64 4
  store i8* %56, i8** %9, align 8
  %57 = bitcast i8* %56 to i32*
  store i32 %47, i32* %57, align 1
  %58 = load i8*, i8** %9, align 8
  %59 = getelementptr inbounds i8, i8* %58, i64 4
  store i8* %59, i8** %9, align 8
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %59, i8* align 4 %11, i64 16, i1 false) #14
  %60 = load i8*, i8** %9, align 8
  %61 = getelementptr inbounds i8, i8* %60, i64 16
  store i8* %61, i8** %9, align 8
  %62 = getelementptr inbounds %class.GrQuad, %class.GrQuad* %2, i64 0, i32 0, i64 2
  %63 = bitcast float* %62 to i32*
  %64 = load i32, i32* %63, align 4
  %65 = getelementptr inbounds %class.GrQuad, %class.GrQuad* %2, i64 0, i32 1, i64 2
  %66 = bitcast float* %65 to i32*
  %67 = load i32, i32* %66, align 4
  %68 = getelementptr inbounds %class.GrQuad, %class.GrQuad* %3, i64 0, i32 0, i64 2
  %69 = bitcast float* %68 to i32*
  %70 = load i32, i32* %69, align 4
  %71 = getelementptr inbounds %class.GrQuad, %class.GrQuad* %3, i64 0, i32 1, i64 2
  %72 = bitcast float* %71 to i32*
  %73 = load i32, i32* %72, align 4
  %74 = bitcast i8* %61 to i32*
  store i32 %64, i32* %74, align 1
  %75 = load i8*, i8** %9, align 8
  %76 = getelementptr inbounds i8, i8* %75, i64 4
  store i8* %76, i8** %9, align 8
  %77 = bitcast i8* %76 to i32*
  store i32 %67, i32* %77, align 1
  %78 = load i8*, i8** %9, align 8
  %79 = getelementptr inbounds i8, i8* %78, i64 4
  store i8* %79, i8** %9, align 8
  %80 = bitcast i8* %79 to i32*
  store i32 %70, i32* %80, align 1
  %81 = load i8*, i8** %9, align 8
  %82 = getelementptr inbounds i8, i8* %81, i64 4
  store i8* %82, i8** %9, align 8
  %83 = bitcast i8* %82 to i32*
  store i32 %73, i32* %83, align 1
  %84 = load i8*, i8** %9, align 8
  %85 = getelementptr inbounds i8, i8* %84, i64 4
  store i8* %85, i8** %9, align 8
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %85, i8* align 4 %11, i64 16, i1 false) #14
  %86 = load i8*, i8** %9, align 8
  %87 = getelementptr inbounds i8, i8* %86, i64 16
  store i8* %87, i8** %9, align 8
  %88 = getelementptr inbounds %class.GrQuad, %class.GrQuad* %2, i64 0, i32 0, i64 3
  %89 = bitcast float* %88 to i32*
  %90 = load i32, i32* %89, align 4
  %91 = getelementptr inbounds %class.GrQuad, %class.GrQuad* %2, i64 0, i32 1, i64 3
  %92 = bitcast float* %91 to i32*
  %93 = load i32, i32* %92, align 4
  %94 = getelementptr inbounds %class.GrQuad, %class.GrQuad* %3, i64 0, i32 0, i64 3
  %95 = bitcast float* %94 to i32*
  %96 = load i32, i32* %95, align 4
  %97 = getelementptr inbounds %class.GrQuad, %class.GrQuad* %3, i64 0, i32 1, i64 3
  %98 = bitcast float* %97 to i32*
  %99 = load i32, i32* %98, align 4
  %100 = bitcast i8* %87 to i32*
  store i32 %90, i32* %100, align 1
  %101 = load i8*, i8** %9, align 8
  %102 = getelementptr inbounds i8, i8* %101, i64 4
  store i8* %102, i8** %9, align 8
  %103 = bitcast i8* %102 to i32*
  store i32 %93, i32* %103, align 1
  %104 = load i8*, i8** %9, align 8
  %105 = getelementptr inbounds i8, i8* %104, i64 4
  store i8* %105, i8** %9, align 8
  %106 = bitcast i8* %105 to i32*
  store i32 %96, i32* %106, align 1
  %107 = load i8*, i8** %9, align 8
  %108 = getelementptr inbounds i8, i8* %107, i64 4
  store i8* %108, i8** %9, align 8
  %109 = bitcast i8* %108 to i32*
  store i32 %99, i32* %109, align 1
  %110 = load i8*, i8** %9, align 8
  %111 = getelementptr inbounds i8, i8* %110, i64 4
  store i8* %111, i8** %9, align 8
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %111, i8* align 4 %11, i64 16, i1 false) #14
  %112 = load i8*, i8** %9, align 8
  %113 = getelementptr inbounds i8, i8* %112, i64 16
  store i8* %113, i8** %9, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN12_GLOBAL__N_111write_2d_uvEP14GrVertexWriterRKN15GrQuadPerEdgeAA10VertexSpecEPK6GrQuadS8_PKfRK8SkRGBA4fIL11SkAlphaType2EERK6SkRectSI_(%struct.GrVertexWriter* nocapture, %"struct.GrQuadPerEdgeAA::VertexSpec"* nocapture readnone dereferenceable(4), %class.GrQuad* nocapture readonly, %class.GrQuad* nocapture readonly, float* nocapture readnone, %struct.SkRGBA4f* nocapture readnone dereferenceable(16), %struct.SkRect* nocapture readnone dereferenceable(16), %struct.SkRect* nocapture readnone dereferenceable(16)) #4 {
  %9 = getelementptr inbounds %struct.GrVertexWriter, %struct.GrVertexWriter* %0, i64 0, i32 0
  %10 = bitcast %struct.GrVertexWriter* %0 to i32**
  %11 = bitcast %class.GrQuad* %2 to i32*
  %12 = load i32, i32* %11, align 4
  %13 = getelementptr inbounds %class.GrQuad, %class.GrQuad* %2, i64 0, i32 1, i64 0
  %14 = bitcast float* %13 to i32*
  %15 = load i32, i32* %14, align 4
  %16 = bitcast %class.GrQuad* %3 to i32*
  %17 = load i32, i32* %16, align 4
  %18 = getelementptr inbounds %class.GrQuad, %class.GrQuad* %3, i64 0, i32 1, i64 0
  %19 = bitcast float* %18 to i32*
  %20 = load i32, i32* %19, align 4
  %21 = load i32*, i32** %10, align 8
  store i32 %12, i32* %21, align 1
  %22 = load i8*, i8** %9, align 8
  %23 = getelementptr inbounds i8, i8* %22, i64 4
  store i8* %23, i8** %9, align 8
  %24 = bitcast i8* %23 to i32*
  store i32 %15, i32* %24, align 1
  %25 = load i8*, i8** %9, align 8
  %26 = getelementptr inbounds i8, i8* %25, i64 4
  store i8* %26, i8** %9, align 8
  %27 = bitcast i8* %26 to i32*
  store i32 %17, i32* %27, align 1
  %28 = load i8*, i8** %9, align 8
  %29 = getelementptr inbounds i8, i8* %28, i64 4
  store i8* %29, i8** %9, align 8
  %30 = bitcast i8* %29 to i32*
  store i32 %20, i32* %30, align 1
  %31 = load i8*, i8** %9, align 8
  %32 = getelementptr inbounds i8, i8* %31, i64 4
  store i8* %32, i8** %9, align 8
  %33 = getelementptr inbounds %class.GrQuad, %class.GrQuad* %2, i64 0, i32 0, i64 1
  %34 = bitcast float* %33 to i32*
  %35 = load i32, i32* %34, align 4
  %36 = getelementptr inbounds %class.GrQuad, %class.GrQuad* %2, i64 0, i32 1, i64 1
  %37 = bitcast float* %36 to i32*
  %38 = load i32, i32* %37, align 4
  %39 = getelementptr inbounds %class.GrQuad, %class.GrQuad* %3, i64 0, i32 0, i64 1
  %40 = bitcast float* %39 to i32*
  %41 = load i32, i32* %40, align 4
  %42 = getelementptr inbounds %class.GrQuad, %class.GrQuad* %3, i64 0, i32 1, i64 1
  %43 = bitcast float* %42 to i32*
  %44 = load i32, i32* %43, align 4
  %45 = bitcast i8* %32 to i32*
  store i32 %35, i32* %45, align 1
  %46 = load i8*, i8** %9, align 8
  %47 = getelementptr inbounds i8, i8* %46, i64 4
  store i8* %47, i8** %9, align 8
  %48 = bitcast i8* %47 to i32*
  store i32 %38, i32* %48, align 1
  %49 = load i8*, i8** %9, align 8
  %50 = getelementptr inbounds i8, i8* %49, i64 4
  store i8* %50, i8** %9, align 8
  %51 = bitcast i8* %50 to i32*
  store i32 %41, i32* %51, align 1
  %52 = load i8*, i8** %9, align 8
  %53 = getelementptr inbounds i8, i8* %52, i64 4
  store i8* %53, i8** %9, align 8
  %54 = bitcast i8* %53 to i32*
  store i32 %44, i32* %54, align 1
  %55 = load i8*, i8** %9, align 8
  %56 = getelementptr inbounds i8, i8* %55, i64 4
  store i8* %56, i8** %9, align 8
  %57 = getelementptr inbounds %class.GrQuad, %class.GrQuad* %2, i64 0, i32 0, i64 2
  %58 = bitcast float* %57 to i32*
  %59 = load i32, i32* %58, align 4
  %60 = getelementptr inbounds %class.GrQuad, %class.GrQuad* %2, i64 0, i32 1, i64 2
  %61 = bitcast float* %60 to i32*
  %62 = load i32, i32* %61, align 4
  %63 = getelementptr inbounds %class.GrQuad, %class.GrQuad* %3, i64 0, i32 0, i64 2
  %64 = bitcast float* %63 to i32*
  %65 = load i32, i32* %64, align 4
  %66 = getelementptr inbounds %class.GrQuad, %class.GrQuad* %3, i64 0, i32 1, i64 2
  %67 = bitcast float* %66 to i32*
  %68 = load i32, i32* %67, align 4
  %69 = bitcast i8* %56 to i32*
  store i32 %59, i32* %69, align 1
  %70 = load i8*, i8** %9, align 8
  %71 = getelementptr inbounds i8, i8* %70, i64 4
  store i8* %71, i8** %9, align 8
  %72 = bitcast i8* %71 to i32*
  store i32 %62, i32* %72, align 1
  %73 = load i8*, i8** %9, align 8
  %74 = getelementptr inbounds i8, i8* %73, i64 4
  store i8* %74, i8** %9, align 8
  %75 = bitcast i8* %74 to i32*
  store i32 %65, i32* %75, align 1
  %76 = load i8*, i8** %9, align 8
  %77 = getelementptr inbounds i8, i8* %76, i64 4
  store i8* %77, i8** %9, align 8
  %78 = bitcast i8* %77 to i32*
  store i32 %68, i32* %78, align 1
  %79 = load i8*, i8** %9, align 8
  %80 = getelementptr inbounds i8, i8* %79, i64 4
  store i8* %80, i8** %9, align 8
  %81 = getelementptr inbounds %class.GrQuad, %class.GrQuad* %2, i64 0, i32 0, i64 3
  %82 = bitcast float* %81 to i32*
  %83 = load i32, i32* %82, align 4
  %84 = getelementptr inbounds %class.GrQuad, %class.GrQuad* %2, i64 0, i32 1, i64 3
  %85 = bitcast float* %84 to i32*
  %86 = load i32, i32* %85, align 4
  %87 = getelementptr inbounds %class.GrQuad, %class.GrQuad* %3, i64 0, i32 0, i64 3
  %88 = bitcast float* %87 to i32*
  %89 = load i32, i32* %88, align 4
  %90 = getelementptr inbounds %class.GrQuad, %class.GrQuad* %3, i64 0, i32 1, i64 3
  %91 = bitcast float* %90 to i32*
  %92 = load i32, i32* %91, align 4
  %93 = bitcast i8* %80 to i32*
  store i32 %83, i32* %93, align 1
  %94 = load i8*, i8** %9, align 8
  %95 = getelementptr inbounds i8, i8* %94, i64 4
  store i8* %95, i8** %9, align 8
  %96 = bitcast i8* %95 to i32*
  store i32 %86, i32* %96, align 1
  %97 = load i8*, i8** %9, align 8
  %98 = getelementptr inbounds i8, i8* %97, i64 4
  store i8* %98, i8** %9, align 8
  %99 = bitcast i8* %98 to i32*
  store i32 %89, i32* %99, align 1
  %100 = load i8*, i8** %9, align 8
  %101 = getelementptr inbounds i8, i8* %100, i64 4
  store i8* %101, i8** %9, align 8
  %102 = bitcast i8* %101 to i32*
  store i32 %92, i32* %102, align 1
  %103 = load i8*, i8** %9, align 8
  %104 = getelementptr inbounds i8, i8* %103, i64 4
  store i8* %104, i8** %9, align 8
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #3

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN12_GLOBAL__N_118write_quad_genericEP14GrVertexWriterRKN15GrQuadPerEdgeAA10VertexSpecEPK6GrQuadS8_PKfRK8SkRGBA4fIL11SkAlphaType2EERK6SkRectSI_(%struct.GrVertexWriter* nocapture, %"struct.GrQuadPerEdgeAA::VertexSpec"* nocapture readonly dereferenceable(4), %class.GrQuad* nocapture readonly, %class.GrQuad* nocapture readonly, float* nocapture readonly, %struct.SkRGBA4f* nocapture readonly dereferenceable(16), %struct.SkRect* nocapture readonly dereferenceable(16), %struct.SkRect* nocapture readonly dereferenceable(16)) #4 {
  %9 = alloca { <2 x float>, <2 x float> }, align 8
  %10 = bitcast { <2 x float>, <2 x float> }* %9 to %struct.SkRGBA4f*
  %11 = getelementptr inbounds %"struct.GrQuadPerEdgeAA::VertexSpec", %"struct.GrQuadPerEdgeAA::VertexSpec"* %1, i64 0, i32 0
  %12 = load i16, i16* %11, align 4
  %13 = and i16 %12, 1024
  %14 = icmp eq i16 %13, 0
  br i1 %14, label %22, label %15

15:                                               ; preds = %8
  %16 = and i16 %12, 384
  %17 = icmp eq i16 %16, 0
  %18 = and i16 %12, 6144
  %19 = icmp ne i16 %18, 2048
  %20 = or i1 %19, %17
  %21 = select i1 %20, i32 1, i32 2
  br label %22

22:                                               ; preds = %8, %15
  %23 = phi i32 [ %21, %15 ], [ 0, %8 ]
  %24 = icmp eq i32 %23, 1
  %25 = getelementptr inbounds %struct.GrVertexWriter, %struct.GrVertexWriter* %0, i64 0, i32 0
  %26 = bitcast %struct.GrVertexWriter* %0 to i32**
  %27 = bitcast { <2 x float>, <2 x float> }* %9 to i8*
  %28 = icmp eq i32 %23, 2
  %29 = getelementptr inbounds %struct.SkRGBA4f, %struct.SkRGBA4f* %5, i64 0, i32 2
  %30 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %9, i64 0, i32 0
  %31 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %9, i64 0, i32 1
  %32 = bitcast %struct.SkRect* %6 to i8*
  %33 = bitcast %struct.SkRect* %7 to i8*
  %34 = load i32*, i32** %26, align 8
  %35 = bitcast %struct.SkRGBA4f* %5 to <2 x float>*
  %36 = bitcast float* %29 to <2 x float>*
  br label %38

37:                                               ; preds = %163
  ret void

38:                                               ; preds = %167, %22
  %39 = phi i32* [ %34, %22 ], [ %164, %167 ]
  %40 = phi i16 [ %12, %22 ], [ %168, %167 ]
  %41 = phi i64 [ 0, %22 ], [ %165, %167 ]
  %42 = getelementptr inbounds %class.GrQuad, %class.GrQuad* %2, i64 0, i32 0, i64 %41
  %43 = bitcast float* %42 to i32*
  %44 = load i32, i32* %43, align 4
  %45 = getelementptr inbounds %class.GrQuad, %class.GrQuad* %2, i64 0, i32 1, i64 %41
  %46 = bitcast float* %45 to i32*
  %47 = load i32, i32* %46, align 4
  %48 = and i16 %40, 3
  %49 = icmp eq i16 %48, 3
  %50 = getelementptr inbounds %class.GrQuad, %class.GrQuad* %2, i64 0, i32 2, i64 %41
  %51 = bitcast float* %50 to i32*
  %52 = load i32, i32* %51, align 4
  %53 = getelementptr inbounds float, float* %4, i64 %41
  %54 = bitcast float* %53 to i32*
  %55 = load i32, i32* %54, align 4
  store i32 %44, i32* %39, align 1
  %56 = load i8*, i8** %25, align 8
  %57 = getelementptr inbounds i8, i8* %56, i64 4
  store i8* %57, i8** %25, align 8
  %58 = bitcast i8* %57 to i32*
  store i32 %47, i32* %58, align 1
  %59 = load i8*, i8** %25, align 8
  %60 = getelementptr inbounds i8, i8* %59, i64 4
  store i8* %60, i8** %25, align 8
  %61 = bitcast i8* %60 to i32*
  br i1 %49, label %62, label %66

62:                                               ; preds = %38
  store i32 %52, i32* %61, align 1
  %63 = load i8*, i8** %25, align 8
  %64 = getelementptr inbounds i8, i8* %63, i64 4
  store i8* %64, i8** %25, align 8
  %65 = bitcast i8* %64 to i32*
  br label %66

66:                                               ; preds = %38, %62
  %67 = phi i8* [ %64, %62 ], [ %60, %38 ]
  %68 = phi i32* [ %65, %62 ], [ %61, %38 ]
  br i1 %24, label %69, label %73

69:                                               ; preds = %66
  store i32 %55, i32* %68, align 1
  %70 = load i8*, i8** %25, align 8
  %71 = getelementptr inbounds i8, i8* %70, i64 4
  store i8* %71, i8** %25, align 8
  %72 = bitcast i8* %71 to i32*
  br label %73

73:                                               ; preds = %66, %69
  %74 = phi i8* [ %67, %66 ], [ %71, %69 ]
  %75 = phi i32* [ %68, %66 ], [ %72, %69 ]
  %76 = load i16, i16* %11, align 4
  %77 = and i16 %76, 384
  %78 = icmp eq i16 %77, 0
  br i1 %78, label %114, label %79

79:                                               ; preds = %73
  %80 = icmp eq i16 %77, 256
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %27) #14
  br i1 %28, label %81, label %83

81:                                               ; preds = %79
  %82 = load float, float* %53, align 4
  br label %83

83:                                               ; preds = %79, %81
  %84 = phi float [ %82, %81 ], [ 1.000000e+00, %79 ]
  %85 = load <2 x float>, <2 x float>* %35, align 4
  %86 = insertelement <2 x float> undef, float %84, i32 0
  %87 = shufflevector <2 x float> %86, <2 x float> undef, <2 x i32> zeroinitializer
  %88 = fmul <2 x float> %87, %85
  %89 = load <2 x float>, <2 x float>* %36, align 4
  %90 = fmul <2 x float> %87, %89
  store <2 x float> %88, <2 x float>* %30, align 8
  store <2 x float> %90, <2 x float>* %31, align 8
  br i1 %80, label %94, label %91

91:                                               ; preds = %83
  %92 = call i32 @_ZNK8SkRGBA4fIL11SkAlphaType2EE12toBytes_RGBAEv(%struct.SkRGBA4f* nonnull %10) #14
  %93 = load i32*, i32** %26, align 8
  store i32 %92, i32* %93, align 1
  br label %109

94:                                               ; preds = %83
  %95 = extractelement <2 x float> %90, i32 0
  %96 = extractelement <2 x float> %90, i32 1
  %97 = extractelement <2 x float> %88, i32 0
  %98 = extractelement <2 x float> %88, i32 1
  %99 = bitcast i32* %75 to float*
  store float %97, float* %99, align 1
  %100 = load i8*, i8** %25, align 8
  %101 = getelementptr inbounds i8, i8* %100, i64 4
  store i8* %101, i8** %25, align 8
  %102 = bitcast i8* %101 to float*
  store float %98, float* %102, align 1
  %103 = load i8*, i8** %25, align 8
  %104 = getelementptr inbounds i8, i8* %103, i64 4
  store i8* %104, i8** %25, align 8
  %105 = bitcast i8* %104 to float*
  store float %95, float* %105, align 1
  %106 = load i8*, i8** %25, align 8
  %107 = getelementptr inbounds i8, i8* %106, i64 4
  store i8* %107, i8** %25, align 8
  %108 = bitcast i8* %107 to float*
  store float %96, float* %108, align 1
  br label %109

109:                                              ; preds = %91, %94
  %110 = load i8*, i8** %25, align 8
  %111 = getelementptr inbounds i8, i8* %110, i64 4
  store i8* %111, i8** %25, align 8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %27) #14
  %112 = bitcast i8* %111 to i32*
  %113 = load i16, i16* %11, align 4
  br label %114

114:                                              ; preds = %73, %109
  %115 = phi i8* [ %111, %109 ], [ %74, %73 ]
  %116 = phi i32* [ %112, %109 ], [ %75, %73 ]
  %117 = phi i16 [ %113, %109 ], [ %76, %73 ]
  %118 = and i16 %117, 64
  %119 = icmp eq i16 %118, 0
  br i1 %119, label %142, label %120

120:                                              ; preds = %114
  %121 = getelementptr inbounds %class.GrQuad, %class.GrQuad* %3, i64 0, i32 0, i64 %41
  %122 = bitcast float* %121 to i32*
  %123 = load i32, i32* %122, align 4
  %124 = getelementptr inbounds %class.GrQuad, %class.GrQuad* %3, i64 0, i32 1, i64 %41
  %125 = bitcast float* %124 to i32*
  %126 = load i32, i32* %125, align 4
  %127 = and i16 %117, 12
  %128 = icmp eq i16 %127, 12
  %129 = getelementptr inbounds %class.GrQuad, %class.GrQuad* %3, i64 0, i32 2, i64 %41
  %130 = bitcast float* %129 to i32*
  %131 = load i32, i32* %130, align 4
  store i32 %123, i32* %116, align 1
  %132 = load i8*, i8** %25, align 8
  %133 = getelementptr inbounds i8, i8* %132, i64 4
  store i8* %133, i8** %25, align 8
  %134 = bitcast i8* %133 to i32*
  store i32 %126, i32* %134, align 1
  %135 = load i8*, i8** %25, align 8
  %136 = getelementptr inbounds i8, i8* %135, i64 4
  store i8* %136, i8** %25, align 8
  %137 = bitcast i8* %136 to i32*
  br i1 %128, label %138, label %142

138:                                              ; preds = %120
  store i32 %131, i32* %137, align 1
  %139 = load i8*, i8** %25, align 8
  %140 = getelementptr inbounds i8, i8* %139, i64 4
  store i8* %140, i8** %25, align 8
  %141 = bitcast i8* %140 to i32*
  br label %142

142:                                              ; preds = %120, %114, %138
  %143 = phi i8* [ %136, %120 ], [ %115, %114 ], [ %140, %138 ]
  %144 = phi i32* [ %137, %120 ], [ %116, %114 ], [ %141, %138 ]
  %145 = load i16, i16* %11, align 4
  %146 = and i16 %145, 4096
  %147 = icmp eq i16 %146, 0
  br i1 %147, label %153, label %148

148:                                              ; preds = %142
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %143, i8* align 4 %32, i64 16, i1 false) #14
  %149 = load i8*, i8** %25, align 8
  %150 = getelementptr inbounds i8, i8* %149, i64 16
  store i8* %150, i8** %25, align 8
  %151 = bitcast i8* %150 to i32*
  %152 = load i16, i16* %11, align 4
  br label %153

153:                                              ; preds = %142, %148
  %154 = phi i8* [ %143, %142 ], [ %150, %148 ]
  %155 = phi i16 [ %145, %142 ], [ %152, %148 ]
  %156 = phi i32* [ %144, %142 ], [ %151, %148 ]
  %157 = and i16 %155, 512
  %158 = icmp eq i16 %157, 0
  br i1 %158, label %163, label %159

159:                                              ; preds = %153
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %154, i8* align 4 %33, i64 16, i1 false) #14
  %160 = load i8*, i8** %25, align 8
  %161 = getelementptr inbounds i8, i8* %160, i64 16
  store i8* %161, i8** %25, align 8
  %162 = bitcast i8* %161 to i32*
  br label %163

163:                                              ; preds = %153, %159
  %164 = phi i32* [ %156, %153 ], [ %162, %159 ]
  %165 = add nuw nsw i64 %41, 1
  %166 = icmp eq i64 %165, 4
  br i1 %166, label %37, label %167

167:                                              ; preds = %163
  %168 = load i16, i16* %11, align 4
  br label %38
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN15GrQuadPerEdgeAA11TessellatorC2ERKNS_10VertexSpecEPc(%"class.GrQuadPerEdgeAA::Tessellator"* nocapture, %"struct.GrQuadPerEdgeAA::VertexSpec"* nocapture readonly dereferenceable(4), i8*) unnamed_addr #5 align 2 {
  %4 = getelementptr inbounds %"class.GrQuadPerEdgeAA::Tessellator", %"class.GrQuadPerEdgeAA::Tessellator"* %0, i64 0, i32 0, i32 7
  store i8 0, i8* %4, align 16
  %5 = getelementptr inbounds %"class.GrQuadPerEdgeAA::Tessellator", %"class.GrQuadPerEdgeAA::Tessellator"* %0, i64 0, i32 0, i32 8
  store i8 0, i8* %5, align 1
  %6 = getelementptr inbounds %"class.GrQuadPerEdgeAA::Tessellator", %"class.GrQuadPerEdgeAA::Tessellator"* %0, i64 0, i32 0, i32 9
  store i8 0, i8* %6, align 2
  %7 = getelementptr inbounds %"class.GrQuadPerEdgeAA::Tessellator", %"class.GrQuadPerEdgeAA::Tessellator"* %0, i64 0, i32 1
  %8 = bitcast %"struct.GrQuadPerEdgeAA::VertexSpec"* %1 to i32*
  %9 = bitcast %"struct.GrQuadPerEdgeAA::VertexSpec"* %7 to i32*
  %10 = load i32, i32* %8, align 4
  store i32 %10, i32* %9, align 16
  %11 = getelementptr inbounds %"class.GrQuadPerEdgeAA::Tessellator", %"class.GrQuadPerEdgeAA::Tessellator"* %0, i64 0, i32 2, i32 0
  store i8* %2, i8** %11, align 8
  %12 = getelementptr inbounds %"class.GrQuadPerEdgeAA::Tessellator", %"class.GrQuadPerEdgeAA::Tessellator"* %0, i64 0, i32 3
  %13 = getelementptr inbounds %"struct.GrQuadPerEdgeAA::VertexSpec", %"struct.GrQuadPerEdgeAA::VertexSpec"* %1, i64 0, i32 0
  %14 = load i16, i16* %13, align 4
  %15 = and i16 %14, 3
  %16 = icmp eq i16 %15, 3
  %17 = and i16 %14, 4096
  %18 = icmp ne i16 %17, 0
  %19 = or i1 %16, %18
  br i1 %19, label %59, label %20

20:                                               ; preds = %3
  %21 = and i16 %14, 1024
  %22 = icmp eq i16 %21, 0
  %23 = and i16 %14, 384
  br i1 %22, label %30, label %24

24:                                               ; preds = %20
  %25 = icmp eq i16 %23, 0
  %26 = and i16 %14, 6144
  %27 = icmp ne i16 %26, 2048
  %28 = or i1 %27, %25
  %29 = select i1 %28, i32 1, i32 2
  br label %30

30:                                               ; preds = %24, %20
  %31 = phi i32 [ %29, %24 ], [ 0, %20 ]
  %32 = icmp eq i16 %23, 0
  br i1 %32, label %45, label %33

33:                                               ; preds = %30
  %34 = icmp eq i32 %31, 1
  br i1 %34, label %59, label %35

35:                                               ; preds = %33
  %36 = and i16 %14, 64
  %37 = icmp eq i16 %36, 0
  br i1 %37, label %59, label %38

38:                                               ; preds = %35
  %39 = and i16 %14, 12
  %40 = icmp eq i16 %39, 12
  br i1 %40, label %59, label %41

41:                                               ; preds = %38
  %42 = and i16 %14, 512
  %43 = icmp eq i16 %42, 0
  %44 = select i1 %43, void (%struct.GrVertexWriter*, %"struct.GrQuadPerEdgeAA::VertexSpec"*, %class.GrQuad*, %class.GrQuad*, float*, %struct.SkRGBA4f*, %struct.SkRect*, %struct.SkRect*)* @_ZN12_GLOBAL__N_117write_2d_color_uvEP14GrVertexWriterRKN15GrQuadPerEdgeAA10VertexSpecEPK6GrQuadS8_PKfRK8SkRGBA4fIL11SkAlphaType2EERK6SkRectSI_, void (%struct.GrVertexWriter*, %"struct.GrQuadPerEdgeAA::VertexSpec"*, %class.GrQuad*, %class.GrQuad*, float*, %struct.SkRGBA4f*, %struct.SkRect*, %struct.SkRect*)* @_ZN12_GLOBAL__N_124write_2d_color_uv_strictEP14GrVertexWriterRKN15GrQuadPerEdgeAA10VertexSpecEPK6GrQuadS8_PKfRK8SkRGBA4fIL11SkAlphaType2EERK6SkRectSI_
  br label %59

45:                                               ; preds = %30
  %46 = and i16 %14, 64
  %47 = icmp eq i16 %46, 0
  %48 = and i16 %14, 12
  %49 = icmp eq i16 %48, 12
  %50 = or i1 %47, %49
  br i1 %50, label %59, label %51

51:                                               ; preds = %45
  %52 = icmp eq i32 %31, 1
  %53 = and i16 %14, 512
  %54 = icmp ne i16 %53, 0
  br i1 %52, label %55, label %57

55:                                               ; preds = %51
  %56 = select i1 %54, void (%struct.GrVertexWriter*, %"struct.GrQuadPerEdgeAA::VertexSpec"*, %class.GrQuad*, %class.GrQuad*, float*, %struct.SkRGBA4f*, %struct.SkRect*, %struct.SkRect*)* @_ZN12_GLOBAL__N_122write_2d_cov_uv_strictEP14GrVertexWriterRKN15GrQuadPerEdgeAA10VertexSpecEPK6GrQuadS8_PKfRK8SkRGBA4fIL11SkAlphaType2EERK6SkRectSI_, void (%struct.GrVertexWriter*, %"struct.GrQuadPerEdgeAA::VertexSpec"*, %class.GrQuad*, %class.GrQuad*, float*, %struct.SkRGBA4f*, %struct.SkRect*, %struct.SkRect*)* @_ZN12_GLOBAL__N_115write_2d_cov_uvEP14GrVertexWriterRKN15GrQuadPerEdgeAA10VertexSpecEPK6GrQuadS8_PKfRK8SkRGBA4fIL11SkAlphaType2EERK6SkRectSI_
  br label %59

57:                                               ; preds = %51
  %58 = select i1 %54, void (%struct.GrVertexWriter*, %"struct.GrQuadPerEdgeAA::VertexSpec"*, %class.GrQuad*, %class.GrQuad*, float*, %struct.SkRGBA4f*, %struct.SkRect*, %struct.SkRect*)* @_ZN12_GLOBAL__N_118write_2d_uv_strictEP14GrVertexWriterRKN15GrQuadPerEdgeAA10VertexSpecEPK6GrQuadS8_PKfRK8SkRGBA4fIL11SkAlphaType2EERK6SkRectSI_, void (%struct.GrVertexWriter*, %"struct.GrQuadPerEdgeAA::VertexSpec"*, %class.GrQuad*, %class.GrQuad*, float*, %struct.SkRGBA4f*, %struct.SkRect*, %struct.SkRect*)* @_ZN12_GLOBAL__N_111write_2d_uvEP14GrVertexWriterRKN15GrQuadPerEdgeAA10VertexSpecEPK6GrQuadS8_PKfRK8SkRGBA4fIL11SkAlphaType2EERK6SkRectSI_
  br label %59

59:                                               ; preds = %3, %33, %35, %38, %41, %45, %55, %57
  %60 = phi void (%struct.GrVertexWriter*, %"struct.GrQuadPerEdgeAA::VertexSpec"*, %class.GrQuad*, %class.GrQuad*, float*, %struct.SkRGBA4f*, %struct.SkRect*, %struct.SkRect*)* [ %44, %41 ], [ %56, %55 ], [ %58, %57 ], [ @_ZN12_GLOBAL__N_114write_2d_colorEP14GrVertexWriterRKN15GrQuadPerEdgeAA10VertexSpecEPK6GrQuadS8_PKfRK8SkRGBA4fIL11SkAlphaType2EERK6SkRectSI_, %35 ], [ @_ZN12_GLOBAL__N_118write_quad_genericEP14GrVertexWriterRKN15GrQuadPerEdgeAA10VertexSpecEPK6GrQuadS8_PKfRK8SkRGBA4fIL11SkAlphaType2EERK6SkRectSI_, %3 ], [ @_ZN12_GLOBAL__N_118write_quad_genericEP14GrVertexWriterRKN15GrQuadPerEdgeAA10VertexSpecEPK6GrQuadS8_PKfRK8SkRGBA4fIL11SkAlphaType2EERK6SkRectSI_, %38 ], [ @_ZN12_GLOBAL__N_118write_quad_genericEP14GrVertexWriterRKN15GrQuadPerEdgeAA10VertexSpecEPK6GrQuadS8_PKfRK8SkRGBA4fIL11SkAlphaType2EERK6SkRectSI_, %33 ], [ @_ZN12_GLOBAL__N_118write_quad_genericEP14GrVertexWriterRKN15GrQuadPerEdgeAA10VertexSpecEPK6GrQuadS8_PKfRK8SkRGBA4fIL11SkAlphaType2EERK6SkRectSI_, %45 ]
  store void (%struct.GrVertexWriter*, %"struct.GrQuadPerEdgeAA::VertexSpec"*, %class.GrQuad*, %class.GrQuad*, float*, %struct.SkRGBA4f*, %struct.SkRect*, %struct.SkRect*)* %60, void (%struct.GrVertexWriter*, %"struct.GrQuadPerEdgeAA::VertexSpec"*, %class.GrQuad*, %class.GrQuad*, float*, %struct.SkRGBA4f*, %struct.SkRect*, %struct.SkRect*)** %12, align 16
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN15GrQuadPerEdgeAA11Tessellator6appendEP6GrQuadS2_RK8SkRGBA4fIL11SkAlphaType2EERK6SkRect13GrQuadAAFlags(%"class.GrQuadPerEdgeAA::Tessellator"*, %class.GrQuad*, %class.GrQuad*, %struct.SkRGBA4f* dereferenceable(16), %struct.SkRect* dereferenceable(16), i32) local_unnamed_addr #6 align 2 {
  %7 = alloca %struct.SkRect, align 8
  %8 = alloca <4 x float>, align 16
  %9 = bitcast <4 x float>* %8 to %"struct.skvx::Vec"*
  %10 = alloca <4 x float>, align 16
  %11 = getelementptr inbounds %"class.GrQuadPerEdgeAA::Tessellator", %"class.GrQuadPerEdgeAA::Tessellator"* %0, i64 0, i32 1
  %12 = getelementptr inbounds %"struct.GrQuadPerEdgeAA::VertexSpec", %"struct.GrQuadPerEdgeAA::VertexSpec"* %11, i64 0, i32 0
  %13 = load i16, i16* %12, align 4
  %14 = and i16 %13, 1024
  %15 = icmp eq i16 %14, 0
  br i1 %15, label %272, label %16

16:                                               ; preds = %6
  %17 = bitcast %struct.SkRect* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %17) #14
  %18 = getelementptr inbounds %struct.SkRect, %struct.SkRect* %7, i64 0, i32 2
  %19 = and i16 %13, 4096
  %20 = icmp eq i16 %19, 0
  %21 = bitcast %struct.SkRect* %7 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %21, i8 -1, i64 16, i1 false)
  br i1 %20, label %86, label %22

22:                                               ; preds = %16
  %23 = icmp eq i32 %5, 15
  %24 = select i1 %23, float 5.000000e-01, float 1.000000e+00
  %25 = getelementptr inbounds %class.GrQuad, %class.GrQuad* %1, i64 0, i32 3
  %26 = load i32, i32* %25, align 4
  %27 = icmp eq i32 %26, 3
  br i1 %27, label %28, label %32

28:                                               ; preds = %22
  %29 = tail call { <2 x float>, <2 x float> } @_ZNK6GrQuad15projectedBoundsEv(%class.GrQuad* %1) #14
  %30 = extractvalue { <2 x float>, <2 x float> } %29, 0
  %31 = extractvalue { <2 x float>, <2 x float> } %29, 1
  br label %77

32:                                               ; preds = %22
  %33 = getelementptr inbounds %class.GrQuad, %class.GrQuad* %1, i64 0, i32 0, i64 0
  %34 = getelementptr inbounds %class.GrQuad, %class.GrQuad* %1, i64 0, i32 0, i64 1
  %35 = load float, float* %34, align 4
  %36 = load float, float* %33, align 4
  %37 = fcmp olt float %35, %36
  %38 = getelementptr inbounds %class.GrQuad, %class.GrQuad* %1, i64 0, i32 0, i64 2
  %39 = getelementptr inbounds %class.GrQuad, %class.GrQuad* %1, i64 0, i32 0, i64 3
  %40 = load float, float* %39, align 4
  %41 = load float, float* %38, align 4
  %42 = fcmp olt float %40, %41
  %43 = select i1 %42, float %40, float %41
  %44 = select i1 %37, float %35, float %36
  %45 = fcmp olt float %43, %44
  %46 = select i1 %45, float %43, float %44
  %47 = insertelement <2 x float> undef, float %46, i32 0
  %48 = getelementptr inbounds %class.GrQuad, %class.GrQuad* %1, i64 0, i32 1, i64 0
  %49 = getelementptr inbounds %class.GrQuad, %class.GrQuad* %1, i64 0, i32 1, i64 1
  %50 = load float, float* %49, align 4
  %51 = load float, float* %48, align 4
  %52 = fcmp olt float %50, %51
  %53 = getelementptr inbounds %class.GrQuad, %class.GrQuad* %1, i64 0, i32 1, i64 2
  %54 = getelementptr inbounds %class.GrQuad, %class.GrQuad* %1, i64 0, i32 1, i64 3
  %55 = load float, float* %54, align 4
  %56 = load float, float* %53, align 4
  %57 = fcmp olt float %55, %56
  %58 = select i1 %57, float %55, float %56
  %59 = select i1 %52, float %50, float %51
  %60 = fcmp olt float %58, %59
  %61 = select i1 %60, float %58, float %59
  %62 = insertelement <2 x float> %47, float %61, i32 1
  %63 = fcmp olt float %36, %35
  %64 = fcmp olt float %41, %40
  %65 = select i1 %63, float %35, float %36
  %66 = select i1 %64, float %40, float %41
  %67 = fcmp olt float %65, %66
  %68 = select i1 %67, float %66, float %65
  %69 = insertelement <2 x float> undef, float %68, i32 0
  %70 = fcmp olt float %51, %50
  %71 = fcmp olt float %56, %55
  %72 = select i1 %70, float %50, float %51
  %73 = select i1 %71, float %55, float %56
  %74 = fcmp olt float %72, %73
  %75 = select i1 %74, float %73, float %72
  %76 = insertelement <2 x float> %69, float %75, i32 1
  br label %77

77:                                               ; preds = %28, %32
  %78 = phi <2 x float> [ %30, %28 ], [ %62, %32 ]
  %79 = phi <2 x float> [ %31, %28 ], [ %76, %32 ]
  %80 = insertelement <2 x float> undef, float %24, i32 0
  %81 = shufflevector <2 x float> %80, <2 x float> undef, <2 x i32> zeroinitializer
  %82 = fsub <2 x float> %78, %81
  %83 = fadd <2 x float> %81, %79
  %84 = bitcast %struct.SkRect* %7 to <2 x float>*
  store <2 x float> %82, <2 x float>* %84, align 8
  %85 = bitcast float* %18 to <2 x float>*
  store <2 x float> %83, <2 x float>* %85, align 8
  br label %86

86:                                               ; preds = %16, %77
  %87 = icmp eq i32 %5, 0
  br i1 %87, label %88, label %93

88:                                               ; preds = %86
  %89 = getelementptr inbounds %"class.GrQuadPerEdgeAA::Tessellator", %"class.GrQuadPerEdgeAA::Tessellator"* %0, i64 0, i32 3
  %90 = load void (%struct.GrVertexWriter*, %"struct.GrQuadPerEdgeAA::VertexSpec"*, %class.GrQuad*, %class.GrQuad*, float*, %struct.SkRGBA4f*, %struct.SkRect*, %struct.SkRect*)*, void (%struct.GrVertexWriter*, %"struct.GrQuadPerEdgeAA::VertexSpec"*, %class.GrQuad*, %class.GrQuad*, float*, %struct.SkRGBA4f*, %struct.SkRect*, %struct.SkRect*)** %89, align 16
  %91 = getelementptr inbounds %"class.GrQuadPerEdgeAA::Tessellator", %"class.GrQuadPerEdgeAA::Tessellator"* %0, i64 0, i32 2
  call void %90(%struct.GrVertexWriter* %91, %"struct.GrQuadPerEdgeAA::VertexSpec"* dereferenceable(4) %11, %class.GrQuad* %1, %class.GrQuad* %2, float* getelementptr inbounds ([4 x float], [4 x float]* @_ZZN15GrQuadPerEdgeAA11Tessellator6appendEP6GrQuadS2_RK8SkRGBA4fIL11SkAlphaType2EERK6SkRect13GrQuadAAFlagsE13kFullCoverage, i64 0, i64 0), %struct.SkRGBA4f* dereferenceable(16) %3, %struct.SkRect* nonnull dereferenceable(16) %7, %struct.SkRect* dereferenceable(16) %4) #14
  %92 = load void (%struct.GrVertexWriter*, %"struct.GrQuadPerEdgeAA::VertexSpec"*, %class.GrQuad*, %class.GrQuad*, float*, %struct.SkRGBA4f*, %struct.SkRect*, %struct.SkRect*)*, void (%struct.GrVertexWriter*, %"struct.GrQuadPerEdgeAA::VertexSpec"*, %class.GrQuad*, %class.GrQuad*, float*, %struct.SkRGBA4f*, %struct.SkRect*, %struct.SkRect*)** %89, align 16
  call void %92(%struct.GrVertexWriter* %91, %"struct.GrQuadPerEdgeAA::VertexSpec"* dereferenceable(4) %11, %class.GrQuad* %1, %class.GrQuad* %2, float* getelementptr inbounds ([4 x float], [4 x float]* @_ZZN15GrQuadPerEdgeAA11Tessellator6appendEP6GrQuadS2_RK8SkRGBA4fIL11SkAlphaType2EERK6SkRect13GrQuadAAFlagsE13kZeroCoverage, i64 0, i64 0), %struct.SkRGBA4f* dereferenceable(16) %3, %struct.SkRect* nonnull dereferenceable(16) %7, %struct.SkRect* dereferenceable(16) %4) #14
  br label %271

93:                                               ; preds = %86
  %94 = getelementptr inbounds %"class.GrQuadPerEdgeAA::Tessellator", %"class.GrQuadPerEdgeAA::Tessellator"* %0, i64 0, i32 0
  tail call void @_ZN11GrQuadUtils18TessellationHelper5resetERK6GrQuadPS2_(%"class.GrQuadUtils::TessellationHelper"* %94, %class.GrQuad* dereferenceable(52) %1, %class.GrQuad* %2) #14
  %95 = bitcast <4 x float>* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %95) #14
  %96 = icmp eq i32 %5, 15
  %97 = bitcast <4 x float>* %8 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %97, i8 -1, i64 16, i1 false)
  br i1 %96, label %98, label %99

98:                                               ; preds = %93
  store <4 x float> <float 5.000000e-01, float 5.000000e-01, float 5.000000e-01, float 5.000000e-01>, <4 x float>* %8, align 16
  br label %117

99:                                               ; preds = %93
  %100 = and i32 %5, 1
  %101 = icmp eq i32 %100, 0
  %102 = and i32 %5, 8
  %103 = icmp eq i32 %102, 0
  %104 = and i32 %5, 2
  %105 = icmp eq i32 %104, 0
  %106 = and i32 %5, 4
  %107 = icmp eq i32 %106, 0
  %108 = select i1 %101, i64 0, i64 1056964608
  %109 = select i1 %103, i64 0, i64 4539628424389459968
  %110 = select i1 %105, i64 0, i64 1056964608
  %111 = select i1 %107, i64 0, i64 4539628424389459968
  %112 = bitcast <4 x float>* %8 to i64*
  %113 = or i64 %109, %108
  store i64 %113, i64* %112, align 16
  %114 = getelementptr inbounds %"struct.skvx::Vec", %"struct.skvx::Vec"* %9, i64 0, i32 1
  %115 = bitcast %"struct.skvx::Vec.0"* %114 to i64*
  %116 = or i64 %111, %110
  store i64 %116, i64* %115, align 8
  br label %117

117:                                              ; preds = %99, %98
  %118 = bitcast <4 x float>* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %118) #14
  %119 = getelementptr inbounds <4 x float>, <4 x float>* %10, i64 0, i64 0
  %120 = getelementptr inbounds <4 x float>, <4 x float>* %10, i64 0, i64 2
  %121 = call { <2 x float>, <2 x float> } @_ZN11GrQuadUtils18TessellationHelper5insetERKN4skvx3VecILi4EfEEP6GrQuadS7_(%"class.GrQuadUtils::TessellationHelper"* %94, %"struct.skvx::Vec"* nonnull dereferenceable(16) %9, %class.GrQuad* %1, %class.GrQuad* %2) #14
  %122 = extractvalue { <2 x float>, <2 x float> } %121, 0
  %123 = extractvalue { <2 x float>, <2 x float> } %121, 1
  %124 = bitcast <4 x float>* %10 to <2 x float>*
  store <2 x float> %122, <2 x float>* %124, align 16
  %125 = bitcast float* %120 to <2 x float>*
  store <2 x float> %123, <2 x float>* %125, align 8
  %126 = getelementptr inbounds %"class.GrQuadPerEdgeAA::Tessellator", %"class.GrQuadPerEdgeAA::Tessellator"* %0, i64 0, i32 3
  %127 = load void (%struct.GrVertexWriter*, %"struct.GrQuadPerEdgeAA::VertexSpec"*, %class.GrQuad*, %class.GrQuad*, float*, %struct.SkRGBA4f*, %struct.SkRect*, %struct.SkRect*)*, void (%struct.GrVertexWriter*, %"struct.GrQuadPerEdgeAA::VertexSpec"*, %class.GrQuad*, %class.GrQuad*, float*, %struct.SkRGBA4f*, %struct.SkRect*, %struct.SkRect*)** %126, align 16
  %128 = getelementptr inbounds %"class.GrQuadPerEdgeAA::Tessellator", %"class.GrQuadPerEdgeAA::Tessellator"* %0, i64 0, i32 2
  call void %127(%struct.GrVertexWriter* %128, %"struct.GrQuadPerEdgeAA::VertexSpec"* dereferenceable(4) %11, %class.GrQuad* %1, %class.GrQuad* %2, float* nonnull %119, %struct.SkRGBA4f* dereferenceable(16) %3, %struct.SkRect* nonnull dereferenceable(16) %7, %struct.SkRect* dereferenceable(16) %4) #14
  %129 = load <4 x float>, <4 x float>* %10, align 16
  %130 = fcmp olt <4 x float> %129, <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>
  %131 = shufflevector <4 x i1> %130, <4 x i1> undef, <4 x i32> <i32 2, i32 3, i32 undef, i32 undef>
  %132 = and <4 x i1> %130, %131
  %133 = shufflevector <4 x i1> %132, <4 x i1> undef, <4 x i32> <i32 1, i32 undef, i32 undef, i32 undef>
  %134 = and <4 x i1> %132, %133
  %135 = extractelement <4 x i1> %134, i32 0
  br i1 %135, label %136, label %269

136:                                              ; preds = %117
  %137 = call { <2 x float>, <2 x float> } @_ZN11GrQuadUtils18TessellationHelper14getEdgeLengthsEv(%"class.GrQuadUtils::TessellationHelper"* %94) #14
  %138 = extractvalue { <2 x float>, <2 x float> } %137, 0
  %139 = shufflevector <2 x float> %138, <2 x float> undef, <4 x i32> <i32 0, i32 1, i32 undef, i32 undef>
  %140 = extractvalue { <2 x float>, <2 x float> } %137, 1
  %141 = shufflevector <2 x float> %140, <2 x float> undef, <4 x i32> <i32 undef, i32 undef, i32 0, i32 1>
  %142 = shufflevector <4 x float> %139, <4 x float> %141, <4 x i32> <i32 0, i32 1, i32 6, i32 7>
  %143 = shufflevector <4 x float> %142, <4 x float> undef, <4 x i32> <i32 1, i32 0, i32 3, i32 2>
  %144 = shufflevector <4 x float> %142, <4 x float> undef, <4 x i32> <i32 2, i32 3, i32 0, i32 1>
  %145 = fcmp olt <4 x float> %143, %144
  %146 = sext <4 x i1> %145 to <4 x i32>
  %147 = bitcast <4 x i32> %146 to <2 x i64>
  %148 = extractelement <2 x i64> %147, i32 0
  %149 = extractelement <2 x i64> %147, i32 1
  %150 = bitcast i64 %148 to <2 x i32>
  %151 = shufflevector <2 x i32> %150, <2 x i32> undef, <4 x i32> <i32 0, i32 1, i32 undef, i32 undef>
  %152 = bitcast i64 %149 to <2 x i32>
  %153 = shufflevector <2 x i32> %152, <2 x i32> undef, <4 x i32> <i32 undef, i32 undef, i32 0, i32 1>
  %154 = shufflevector <4 x i32> %151, <4 x i32> %153, <4 x i32> <i32 0, i32 1, i32 6, i32 7>
  %155 = bitcast <4 x float> %144 to <2 x i64>
  %156 = extractelement <2 x i64> %155, i32 0
  %157 = bitcast i64 %156 to <2 x i32>
  %158 = shufflevector <4 x float> %144, <4 x float> undef, <2 x i32> <i32 2, i32 3>
  %159 = bitcast <2 x float> %158 to <2 x i32>
  %160 = shufflevector <2 x i32> %157, <2 x i32> undef, <4 x i32> <i32 0, i32 1, i32 undef, i32 undef>
  %161 = shufflevector <2 x i32> %159, <2 x i32> undef, <4 x i32> <i32 undef, i32 undef, i32 0, i32 1>
  %162 = shufflevector <4 x i32> %160, <4 x i32> %161, <4 x i32> <i32 0, i32 1, i32 6, i32 7>
  %163 = and <4 x i32> %154, %162
  %164 = bitcast <4 x i32> %163 to <2 x i64>
  %165 = extractelement <2 x i64> %164, i32 0
  %166 = extractelement <2 x i64> %164, i32 1
  %167 = bitcast i64 %165 to <2 x i32>
  %168 = shufflevector <2 x i32> %167, <2 x i32> undef, <4 x i32> <i32 0, i32 1, i32 undef, i32 undef>
  %169 = bitcast i64 %166 to <2 x i32>
  %170 = shufflevector <2 x i32> %169, <2 x i32> undef, <4 x i32> <i32 undef, i32 undef, i32 0, i32 1>
  %171 = shufflevector <4 x i32> %168, <4 x i32> %170, <4 x i32> <i32 0, i32 1, i32 6, i32 7>
  %172 = bitcast <4 x i32> %154 to <2 x i64>
  %173 = xor <2 x i64> %172, <i64 -1, i64 -1>
  %174 = extractelement <2 x i64> %173, i32 0
  %175 = extractelement <2 x i64> %173, i32 1
  %176 = bitcast i64 %174 to <2 x i32>
  %177 = shufflevector <2 x i32> %176, <2 x i32> undef, <4 x i32> <i32 0, i32 1, i32 undef, i32 undef>
  %178 = bitcast i64 %175 to <2 x i32>
  %179 = shufflevector <2 x i32> %178, <2 x i32> undef, <4 x i32> <i32 undef, i32 undef, i32 0, i32 1>
  %180 = shufflevector <4 x i32> %177, <4 x i32> %179, <4 x i32> <i32 0, i32 1, i32 6, i32 7>
  %181 = bitcast <4 x float> %143 to <2 x i64>
  %182 = extractelement <2 x i64> %181, i32 0
  %183 = bitcast i64 %182 to <2 x i32>
  %184 = shufflevector <4 x float> %143, <4 x float> undef, <2 x i32> <i32 2, i32 3>
  %185 = bitcast <2 x float> %184 to <2 x i32>
  %186 = shufflevector <2 x i32> %183, <2 x i32> undef, <4 x i32> <i32 0, i32 1, i32 undef, i32 undef>
  %187 = shufflevector <2 x i32> %185, <2 x i32> undef, <4 x i32> <i32 undef, i32 undef, i32 0, i32 1>
  %188 = shufflevector <4 x i32> %186, <4 x i32> %187, <4 x i32> <i32 0, i32 1, i32 6, i32 7>
  %189 = and <4 x i32> %180, %188
  %190 = bitcast <4 x i32> %189 to <2 x i64>
  %191 = extractelement <2 x i64> %190, i32 0
  %192 = extractelement <2 x i64> %190, i32 1
  %193 = bitcast i64 %191 to <2 x i32>
  %194 = shufflevector <2 x i32> %193, <2 x i32> undef, <4 x i32> <i32 0, i32 1, i32 undef, i32 undef>
  %195 = bitcast i64 %192 to <2 x i32>
  %196 = shufflevector <2 x i32> %195, <2 x i32> undef, <4 x i32> <i32 undef, i32 undef, i32 0, i32 1>
  %197 = shufflevector <4 x i32> %194, <4 x i32> %196, <4 x i32> <i32 0, i32 1, i32 6, i32 7>
  %198 = or <4 x i32> %197, %171
  %199 = bitcast <4 x i32> %198 to <2 x i64>
  %200 = extractelement <2 x i64> %199, i32 0
  %201 = extractelement <2 x i64> %199, i32 1
  %202 = bitcast i64 %200 to <2 x float>
  %203 = bitcast i64 %201 to <2 x float>
  %204 = shufflevector <2 x float> %202, <2 x float> undef, <4 x i32> <i32 0, i32 1, i32 undef, i32 undef>
  %205 = shufflevector <2 x float> %203, <2 x float> undef, <4 x i32> <i32 undef, i32 undef, i32 0, i32 1>
  %206 = shufflevector <4 x float> %204, <4 x float> %205, <4 x i32> <i32 0, i32 1, i32 6, i32 7>
  %207 = fsub <4 x float> <float 2.000000e+00, float 2.000000e+00, float 2.000000e+00, float 2.000000e+00>, %206
  %208 = fcmp ogt <4 x float> %207, <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>
  %209 = sext <4 x i1> %208 to <4 x i32>
  %210 = bitcast <4 x i32> %209 to <2 x i64>
  %211 = extractelement <2 x i64> %210, i32 0
  %212 = extractelement <2 x i64> %210, i32 1
  %213 = bitcast i64 %211 to <2 x i32>
  %214 = shufflevector <2 x i32> %213, <2 x i32> undef, <4 x i32> <i32 0, i32 1, i32 undef, i32 undef>
  %215 = bitcast i64 %212 to <2 x i32>
  %216 = shufflevector <2 x i32> %215, <2 x i32> undef, <4 x i32> <i32 undef, i32 undef, i32 0, i32 1>
  %217 = shufflevector <4 x i32> %214, <4 x i32> %216, <4 x i32> <i32 0, i32 1, i32 6, i32 7>
  %218 = bitcast <4 x float> %207 to <2 x i64>
  %219 = extractelement <2 x i64> %218, i32 0
  %220 = bitcast i64 %219 to <2 x i32>
  %221 = shufflevector <4 x float> %207, <4 x float> undef, <2 x i32> <i32 2, i32 3>
  %222 = bitcast <2 x float> %221 to <2 x i32>
  %223 = shufflevector <2 x i32> %220, <2 x i32> undef, <4 x i32> <i32 0, i32 1, i32 undef, i32 undef>
  %224 = shufflevector <2 x i32> %222, <2 x i32> undef, <4 x i32> <i32 undef, i32 undef, i32 0, i32 1>
  %225 = shufflevector <4 x i32> %223, <4 x i32> %224, <4 x i32> <i32 0, i32 1, i32 6, i32 7>
  %226 = and <4 x i32> %217, %225
  %227 = bitcast <4 x i32> %226 to <2 x i64>
  %228 = extractelement <2 x i64> %227, i32 0
  %229 = extractelement <2 x i64> %227, i32 1
  %230 = bitcast i64 %228 to <2 x i32>
  %231 = shufflevector <2 x i32> %230, <2 x i32> undef, <4 x i32> <i32 0, i32 1, i32 undef, i32 undef>
  %232 = bitcast i64 %229 to <2 x i32>
  %233 = shufflevector <2 x i32> %232, <2 x i32> undef, <4 x i32> <i32 undef, i32 undef, i32 0, i32 1>
  %234 = shufflevector <4 x i32> %231, <4 x i32> %233, <4 x i32> <i32 0, i32 1, i32 6, i32 7>
  %235 = bitcast <4 x i32> %217 to <2 x i64>
  %236 = xor <2 x i64> %235, <i64 -1, i64 -1>
  %237 = extractelement <2 x i64> %236, i32 0
  %238 = extractelement <2 x i64> %236, i32 1
  %239 = bitcast i64 %237 to <2 x i32>
  %240 = shufflevector <2 x i32> %239, <2 x i32> undef, <4 x i32> <i32 0, i32 1, i32 undef, i32 undef>
  %241 = bitcast i64 %238 to <2 x i32>
  %242 = shufflevector <2 x i32> %241, <2 x i32> undef, <4 x i32> <i32 undef, i32 undef, i32 0, i32 1>
  %243 = shufflevector <4 x i32> %240, <4 x i32> %242, <4 x i32> <i32 0, i32 1, i32 6, i32 7>
  %244 = bitcast <4 x i32> %243 to <2 x i64>
  %245 = and <2 x i64> %244, <i64 4575657222473777152, i64 4575657222473777152>
  %246 = extractelement <2 x i64> %245, i32 0
  %247 = extractelement <2 x i64> %245, i32 1
  %248 = bitcast i64 %246 to <2 x i32>
  %249 = shufflevector <2 x i32> %248, <2 x i32> undef, <4 x i32> <i32 0, i32 1, i32 undef, i32 undef>
  %250 = bitcast i64 %247 to <2 x i32>
  %251 = shufflevector <2 x i32> %250, <2 x i32> undef, <4 x i32> <i32 undef, i32 undef, i32 0, i32 1>
  %252 = shufflevector <4 x i32> %249, <4 x i32> %251, <4 x i32> <i32 0, i32 1, i32 6, i32 7>
  %253 = or <4 x i32> %252, %234
  %254 = bitcast <4 x i32> %253 to <2 x i64>
  %255 = extractelement <2 x i64> %254, i32 0
  %256 = extractelement <2 x i64> %254, i32 1
  %257 = bitcast i64 %255 to <2 x float>
  %258 = bitcast i64 %256 to <2 x float>
  %259 = shufflevector <2 x float> %257, <2 x float> undef, <4 x i32> <i32 0, i32 1, i32 undef, i32 undef>
  %260 = shufflevector <2 x float> %258, <2 x float> undef, <4 x i32> <i32 undef, i32 undef, i32 0, i32 1>
  %261 = shufflevector <4 x float> %259, <4 x float> %260, <4 x i32> <i32 0, i32 1, i32 6, i32 7>
  %262 = load <4 x float>, <4 x float>* %8, align 16
  %263 = fmul <4 x float> %262, %261
  %264 = shufflevector <4 x float> %263, <4 x float> undef, <2 x i32> <i32 0, i32 1>
  %265 = shufflevector <4 x float> %263, <4 x float> undef, <2 x i32> <i32 2, i32 3>
  %266 = bitcast <4 x float>* %8 to <2 x float>*
  store <2 x float> %264, <2 x float>* %266, align 16
  %267 = getelementptr inbounds %"struct.skvx::Vec", %"struct.skvx::Vec"* %9, i64 0, i32 1
  %268 = bitcast %"struct.skvx::Vec.0"* %267 to <2 x float>*
  store <2 x float> %265, <2 x float>* %268, align 8
  br label %269

269:                                              ; preds = %136, %117
  call void @_ZN11GrQuadUtils18TessellationHelper6outsetERKN4skvx3VecILi4EfEEP6GrQuadS7_(%"class.GrQuadUtils::TessellationHelper"* %94, %"struct.skvx::Vec"* nonnull dereferenceable(16) %9, %class.GrQuad* %1, %class.GrQuad* %2) #14
  %270 = load void (%struct.GrVertexWriter*, %"struct.GrQuadPerEdgeAA::VertexSpec"*, %class.GrQuad*, %class.GrQuad*, float*, %struct.SkRGBA4f*, %struct.SkRect*, %struct.SkRect*)*, void (%struct.GrVertexWriter*, %"struct.GrQuadPerEdgeAA::VertexSpec"*, %class.GrQuad*, %class.GrQuad*, float*, %struct.SkRGBA4f*, %struct.SkRect*, %struct.SkRect*)** %126, align 16
  call void %270(%struct.GrVertexWriter* %128, %"struct.GrQuadPerEdgeAA::VertexSpec"* dereferenceable(4) %11, %class.GrQuad* %1, %class.GrQuad* %2, float* getelementptr inbounds ([4 x float], [4 x float]* @_ZZN15GrQuadPerEdgeAA11Tessellator6appendEP6GrQuadS2_RK8SkRGBA4fIL11SkAlphaType2EERK6SkRect13GrQuadAAFlagsE13kZeroCoverage, i64 0, i64 0), %struct.SkRGBA4f* dereferenceable(16) %3, %struct.SkRect* nonnull dereferenceable(16) %7, %struct.SkRect* dereferenceable(16) %4) #14
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %118) #14
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %95) #14
  br label %271

271:                                              ; preds = %269, %88
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %17) #14
  br label %276

272:                                              ; preds = %6
  %273 = getelementptr inbounds %"class.GrQuadPerEdgeAA::Tessellator", %"class.GrQuadPerEdgeAA::Tessellator"* %0, i64 0, i32 3
  %274 = load void (%struct.GrVertexWriter*, %"struct.GrQuadPerEdgeAA::VertexSpec"*, %class.GrQuad*, %class.GrQuad*, float*, %struct.SkRGBA4f*, %struct.SkRect*, %struct.SkRect*)*, void (%struct.GrVertexWriter*, %"struct.GrQuadPerEdgeAA::VertexSpec"*, %class.GrQuad*, %class.GrQuad*, float*, %struct.SkRGBA4f*, %struct.SkRect*, %struct.SkRect*)** %273, align 16
  %275 = getelementptr inbounds %"class.GrQuadPerEdgeAA::Tessellator", %"class.GrQuadPerEdgeAA::Tessellator"* %0, i64 0, i32 2
  tail call void %274(%struct.GrVertexWriter* %275, %"struct.GrQuadPerEdgeAA::VertexSpec"* dereferenceable(4) %11, %class.GrQuad* %1, %class.GrQuad* %2, float* getelementptr inbounds ([4 x float], [4 x float]* @_ZZN15GrQuadPerEdgeAA11Tessellator6appendEP6GrQuadS2_RK8SkRGBA4fIL11SkAlphaType2EERK6SkRect13GrQuadAAFlagsE13kFullCoverage, i64 0, i64 0), %struct.SkRGBA4f* dereferenceable(16) %3, %struct.SkRect* nonnull dereferenceable(16) @_ZZN15GrQuadPerEdgeAA11Tessellator6appendEP6GrQuadS2_RK8SkRGBA4fIL11SkAlphaType2EERK6SkRect13GrQuadAAFlagsE14kIgnoredSubset, %struct.SkRect* dereferenceable(16) %4) #14
  br label %276

276:                                              ; preds = %272, %271
  ret void
}

declare void @_ZN11GrQuadUtils18TessellationHelper5resetERK6GrQuadPS2_(%"class.GrQuadUtils::TessellationHelper"*, %class.GrQuad* dereferenceable(52), %class.GrQuad*) local_unnamed_addr #7

declare { <2 x float>, <2 x float> } @_ZN11GrQuadUtils18TessellationHelper5insetERKN4skvx3VecILi4EfEEP6GrQuadS7_(%"class.GrQuadUtils::TessellationHelper"*, %"struct.skvx::Vec"* dereferenceable(16), %class.GrQuad*, %class.GrQuad*) local_unnamed_addr #7

declare { <2 x float>, <2 x float> } @_ZN11GrQuadUtils18TessellationHelper14getEdgeLengthsEv(%"class.GrQuadUtils::TessellationHelper"*) local_unnamed_addr #7

declare void @_ZN11GrQuadUtils18TessellationHelper6outsetERKN4skvx3VecILi4EfEEP6GrQuadS7_(%"class.GrQuadUtils::TessellationHelper"*, %"struct.skvx::Vec"* dereferenceable(16), %class.GrQuad*, %class.GrQuad*) local_unnamed_addr #7

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN15GrQuadPerEdgeAA14GetIndexBufferEPN12GrMeshDrawOp6TargetENS_17IndexBufferOptionE(%class.sk_sp* noalias nocapture sret, %"class.GrMeshDrawOp::Target"*, i32) local_unnamed_addr #4 {
  %4 = alloca %class.sk_sp.32, align 8
  %5 = alloca %class.sk_sp.32, align 8
  %6 = bitcast %"class.GrMeshDrawOp::Target"* %1 to %class.GrResourceProvider* (%"class.GrMeshDrawOp::Target"*)***
  %7 = load %class.GrResourceProvider* (%"class.GrMeshDrawOp::Target"*)**, %class.GrResourceProvider* (%"class.GrMeshDrawOp::Target"*)*** %6, align 8
  %8 = getelementptr inbounds %class.GrResourceProvider* (%"class.GrMeshDrawOp::Target"*)*, %class.GrResourceProvider* (%"class.GrMeshDrawOp::Target"*)** %7, i64 22
  %9 = load %class.GrResourceProvider* (%"class.GrMeshDrawOp::Target"*)*, %class.GrResourceProvider* (%"class.GrMeshDrawOp::Target"*)** %8, align 8
  %10 = tail call %class.GrResourceProvider* %9(%"class.GrMeshDrawOp::Target"* %1) #14
  switch i32 %2, label %109 [
    i32 0, label %11
    i32 1, label %60
  ]

11:                                               ; preds = %3
  %12 = getelementptr inbounds %class.GrResourceProvider, %class.GrResourceProvider* %10, i64 0, i32 4
  %13 = getelementptr inbounds %class.sk_sp.32, %class.sk_sp.32* %12, i64 0, i32 0
  %14 = load %class.GrGpuBuffer*, %class.GrGpuBuffer** %13, align 8, !noalias !2
  %15 = icmp eq %class.GrGpuBuffer* %14, null
  br i1 %15, label %16, label %50

16:                                               ; preds = %11
  %17 = bitcast %class.sk_sp.32* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #14, !noalias !2
  call void @_ZN18GrResourceProvider23createAAQuadIndexBufferEv(%class.sk_sp.32* nonnull sret %5, %class.GrResourceProvider* %10) #14, !noalias !2
  %18 = getelementptr inbounds %class.sk_sp.32, %class.sk_sp.32* %5, i64 0, i32 0
  %19 = bitcast %class.sk_sp.32* %5 to i64*
  %20 = load i64, i64* %19, align 8, !noalias !2
  store %class.GrGpuBuffer* null, %class.GrGpuBuffer** %18, align 8, !noalias !2
  %21 = load %class.GrGpuBuffer*, %class.GrGpuBuffer** %13, align 8, !noalias !2
  %22 = bitcast %class.sk_sp.32* %12 to i64*
  store i64 %20, i64* %22, align 8, !noalias !2
  %23 = icmp eq %class.GrGpuBuffer* %21, null
  br i1 %23, label %24, label %26

24:                                               ; preds = %16
  %25 = inttoptr i64 %20 to %class.GrGpuBuffer*
  br label %47

26:                                               ; preds = %16
  %27 = getelementptr inbounds %class.GrGpuBuffer, %class.GrGpuBuffer* %21, i64 0, i32 0, i32 1
  %28 = getelementptr inbounds %class.GrIORef, %class.GrIORef* %27, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %29 = atomicrmw add i32* %28, i32 -1 acq_rel, !noalias !2
  %30 = icmp eq i32 %29, 1
  br i1 %30, label %31, label %34

31:                                               ; preds = %26
  %32 = getelementptr inbounds %class.GrIORef, %class.GrIORef* %27, i64 -1
  %33 = bitcast %class.GrIORef* %32 to %class.GrGpuResource*
  call void @_ZNK13GrGpuResource19notifyARefCntIsZeroEN7GrIORefIS_E14LastRemovedRefE(%class.GrGpuResource* %33, i32 0) #14, !noalias !2
  br label %34

34:                                               ; preds = %31, %26
  %35 = load %class.GrGpuBuffer*, %class.GrGpuBuffer** %18, align 8, !noalias !2
  %36 = icmp eq %class.GrGpuBuffer* %35, null
  br i1 %36, label %45, label %37

37:                                               ; preds = %34
  %38 = getelementptr inbounds %class.GrGpuBuffer, %class.GrGpuBuffer* %35, i64 0, i32 0, i32 1
  %39 = getelementptr inbounds %class.GrIORef, %class.GrIORef* %38, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %40 = atomicrmw add i32* %39, i32 -1 acq_rel, !noalias !2
  %41 = icmp eq i32 %40, 1
  br i1 %41, label %42, label %45

42:                                               ; preds = %37
  %43 = getelementptr inbounds %class.GrIORef, %class.GrIORef* %38, i64 -1
  %44 = bitcast %class.GrIORef* %43 to %class.GrGpuResource*
  call void @_ZNK13GrGpuResource19notifyARefCntIsZeroEN7GrIORefIS_E14LastRemovedRefE(%class.GrGpuResource* %44, i32 0) #14, !noalias !2
  br label %45

45:                                               ; preds = %42, %37, %34
  %46 = load %class.GrGpuBuffer*, %class.GrGpuBuffer** %13, align 8, !noalias !2
  br label %47

47:                                               ; preds = %45, %24
  %48 = phi %class.GrGpuBuffer* [ %46, %45 ], [ %25, %24 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #14, !noalias !2
  %49 = icmp eq %class.GrGpuBuffer* %48, null
  br i1 %49, label %54, label %50

50:                                               ; preds = %11, %47
  %51 = phi %class.GrGpuBuffer* [ %48, %47 ], [ %14, %11 ]
  %52 = getelementptr inbounds %class.GrGpuBuffer, %class.GrGpuBuffer* %51, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %53 = atomicrmw add i32* %52, i32 1 monotonic, !noalias !2
  br label %54

54:                                               ; preds = %50, %47
  %55 = phi %class.GrGpuBuffer* [ null, %47 ], [ %51, %50 ]
  %56 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %0, i64 0, i32 0
  %57 = icmp eq %class.GrGpuBuffer* %55, null
  %58 = getelementptr inbounds %class.GrGpuBuffer, %class.GrGpuBuffer* %55, i64 0, i32 1
  %59 = select i1 %57, %class.GrBuffer* null, %class.GrBuffer* %58
  store %class.GrBuffer* %59, %class.GrBuffer** %56, align 8
  br label %111

60:                                               ; preds = %3
  %61 = getelementptr inbounds %class.GrResourceProvider, %class.GrResourceProvider* %10, i64 0, i32 3
  %62 = getelementptr inbounds %class.sk_sp.32, %class.sk_sp.32* %61, i64 0, i32 0
  %63 = load %class.GrGpuBuffer*, %class.GrGpuBuffer** %62, align 8, !noalias !5
  %64 = icmp eq %class.GrGpuBuffer* %63, null
  br i1 %64, label %65, label %99

65:                                               ; preds = %60
  %66 = bitcast %class.sk_sp.32* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %66) #14, !noalias !5
  call void @_ZN18GrResourceProvider26createNonAAQuadIndexBufferEv(%class.sk_sp.32* nonnull sret %4, %class.GrResourceProvider* %10) #14, !noalias !5
  %67 = getelementptr inbounds %class.sk_sp.32, %class.sk_sp.32* %4, i64 0, i32 0
  %68 = bitcast %class.sk_sp.32* %4 to i64*
  %69 = load i64, i64* %68, align 8, !noalias !5
  store %class.GrGpuBuffer* null, %class.GrGpuBuffer** %67, align 8, !noalias !5
  %70 = load %class.GrGpuBuffer*, %class.GrGpuBuffer** %62, align 8, !noalias !5
  %71 = bitcast %class.sk_sp.32* %61 to i64*
  store i64 %69, i64* %71, align 8, !noalias !5
  %72 = icmp eq %class.GrGpuBuffer* %70, null
  br i1 %72, label %73, label %75

73:                                               ; preds = %65
  %74 = inttoptr i64 %69 to %class.GrGpuBuffer*
  br label %96

75:                                               ; preds = %65
  %76 = getelementptr inbounds %class.GrGpuBuffer, %class.GrGpuBuffer* %70, i64 0, i32 0, i32 1
  %77 = getelementptr inbounds %class.GrIORef, %class.GrIORef* %76, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %78 = atomicrmw add i32* %77, i32 -1 acq_rel, !noalias !5
  %79 = icmp eq i32 %78, 1
  br i1 %79, label %80, label %83

80:                                               ; preds = %75
  %81 = getelementptr inbounds %class.GrIORef, %class.GrIORef* %76, i64 -1
  %82 = bitcast %class.GrIORef* %81 to %class.GrGpuResource*
  call void @_ZNK13GrGpuResource19notifyARefCntIsZeroEN7GrIORefIS_E14LastRemovedRefE(%class.GrGpuResource* %82, i32 0) #14, !noalias !5
  br label %83

83:                                               ; preds = %80, %75
  %84 = load %class.GrGpuBuffer*, %class.GrGpuBuffer** %67, align 8, !noalias !5
  %85 = icmp eq %class.GrGpuBuffer* %84, null
  br i1 %85, label %94, label %86

86:                                               ; preds = %83
  %87 = getelementptr inbounds %class.GrGpuBuffer, %class.GrGpuBuffer* %84, i64 0, i32 0, i32 1
  %88 = getelementptr inbounds %class.GrIORef, %class.GrIORef* %87, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %89 = atomicrmw add i32* %88, i32 -1 acq_rel, !noalias !5
  %90 = icmp eq i32 %89, 1
  br i1 %90, label %91, label %94

91:                                               ; preds = %86
  %92 = getelementptr inbounds %class.GrIORef, %class.GrIORef* %87, i64 -1
  %93 = bitcast %class.GrIORef* %92 to %class.GrGpuResource*
  call void @_ZNK13GrGpuResource19notifyARefCntIsZeroEN7GrIORefIS_E14LastRemovedRefE(%class.GrGpuResource* %93, i32 0) #14, !noalias !5
  br label %94

94:                                               ; preds = %91, %86, %83
  %95 = load %class.GrGpuBuffer*, %class.GrGpuBuffer** %62, align 8, !noalias !5
  br label %96

96:                                               ; preds = %94, %73
  %97 = phi %class.GrGpuBuffer* [ %95, %94 ], [ %74, %73 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %66) #14, !noalias !5
  %98 = icmp eq %class.GrGpuBuffer* %97, null
  br i1 %98, label %103, label %99

99:                                               ; preds = %60, %96
  %100 = phi %class.GrGpuBuffer* [ %97, %96 ], [ %63, %60 ]
  %101 = getelementptr inbounds %class.GrGpuBuffer, %class.GrGpuBuffer* %100, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %102 = atomicrmw add i32* %101, i32 1 monotonic, !noalias !5
  br label %103

103:                                              ; preds = %99, %96
  %104 = phi %class.GrGpuBuffer* [ null, %96 ], [ %100, %99 ]
  %105 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %0, i64 0, i32 0
  %106 = icmp eq %class.GrGpuBuffer* %104, null
  %107 = getelementptr inbounds %class.GrGpuBuffer, %class.GrGpuBuffer* %104, i64 0, i32 1
  %108 = select i1 %106, %class.GrBuffer* null, %class.GrBuffer* %107
  store %class.GrBuffer* %108, %class.GrBuffer** %105, align 8
  br label %111

109:                                              ; preds = %3
  %110 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %0, i64 0, i32 0
  store %class.GrBuffer* null, %class.GrBuffer** %110, align 8
  br label %111

111:                                              ; preds = %109, %103, %54
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN15GrQuadPerEdgeAA9QuadLimitENS_17IndexBufferOptionE(i32) local_unnamed_addr #4 {
  switch i32 %0, label %6 [
    i32 0, label %2
    i32 1, label %4
    i32 2, label %7
  ]

2:                                                ; preds = %1
  %3 = tail call i32 @_ZN18GrResourceProvider13MaxNumAAQuadsEv() #14
  br label %7

4:                                                ; preds = %1
  %5 = tail call i32 @_ZN18GrResourceProvider16MaxNumNonAAQuadsEv() #14
  br label %7

6:                                                ; preds = %1
  tail call void @llvm.trap()
  unreachable

7:                                                ; preds = %1, %4, %2
  %8 = phi i32 [ %5, %4 ], [ %3, %2 ], [ 2147483647, %1 ]
  ret i32 %8
}

declare i32 @_ZN18GrResourceProvider13MaxNumAAQuadsEv() local_unnamed_addr #7

declare i32 @_ZN18GrResourceProvider16MaxNumNonAAQuadsEv() local_unnamed_addr #7

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #8

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN15GrQuadPerEdgeAA9IssueDrawERK6GrCapsP15GrOpsRenderPassRKNS_10VertexSpecEiiii(%class.GrCaps* nocapture readonly dereferenceable(232), %class.GrOpsRenderPass*, %"struct.GrQuadPerEdgeAA::VertexSpec"* nocapture readonly dereferenceable(4), i32, i32, i32, i32) local_unnamed_addr #4 {
  %8 = getelementptr inbounds %"struct.GrQuadPerEdgeAA::VertexSpec", %"struct.GrQuadPerEdgeAA::VertexSpec"* %2, i64 0, i32 0
  %9 = load i16, i16* %8, align 4
  %10 = lshr i16 %9, 4
  %11 = and i16 %10, 3
  %12 = zext i16 %11 to i32
  switch i32 %12, label %21 [
    i32 2, label %13
    i32 0, label %17
  ]

13:                                               ; preds = %7
  %14 = tail call i32 @_ZN18GrResourceProvider20NumVertsPerNonAAQuadEv() #14
  %15 = mul nsw i32 %14, %3
  %16 = add nsw i32 %15, %6
  tail call void @_ZN15GrOpsRenderPass4drawEii(%class.GrOpsRenderPass* %1, i32 4, i32 %16) #14
  br label %45

17:                                               ; preds = %7
  %18 = tail call i32 @_ZN18GrResourceProvider13MaxNumAAQuadsEv() #14
  %19 = tail call i32 @_ZN18GrResourceProvider19NumIndicesPerAAQuadEv() #14
  %20 = tail call i32 @_ZN18GrResourceProvider17NumVertsPerAAQuadEv() #14
  br label %25

21:                                               ; preds = %7
  %22 = tail call i32 @_ZN18GrResourceProvider16MaxNumNonAAQuadsEv() #14
  %23 = tail call i32 @_ZN18GrResourceProvider22NumIndicesPerNonAAQuadEv() #14
  %24 = tail call i32 @_ZN18GrResourceProvider20NumVertsPerNonAAQuadEv() #14
  br label %25

25:                                               ; preds = %21, %17
  %26 = phi i32 [ %20, %17 ], [ %24, %21 ]
  %27 = phi i32 [ %19, %17 ], [ %23, %21 ]
  %28 = phi i32 [ %18, %17 ], [ %22, %21 ]
  %29 = getelementptr inbounds %class.GrCaps, %class.GrCaps* %0, i64 0, i32 3
  %30 = bitcast i48* %29 to i64*
  %31 = load i64, i64* %30, align 8
  %32 = and i64 %31, 67108864
  %33 = icmp eq i64 %32, 0
  br i1 %33, label %37, label %34

34:                                               ; preds = %25
  %35 = mul nsw i32 %26, %3
  %36 = add nsw i32 %35, %6
  tail call void @_ZN15GrOpsRenderPass16drawIndexPatternEiiiii(%class.GrOpsRenderPass* %1, i32 %27, i32 %4, i32 %28, i32 %26, i32 %36) #14
  br label %45

37:                                               ; preds = %25
  %38 = mul nsw i32 %27, %3
  %39 = mul nsw i32 %27, %4
  %40 = mul nsw i32 %26, %3
  %41 = add nsw i32 %4, %3
  %42 = mul nsw i32 %26, %41
  %43 = trunc i32 %40 to i16
  %44 = trunc i32 %42 to i16
  tail call void @_ZN15GrOpsRenderPass11drawIndexedEiitti(%class.GrOpsRenderPass* %1, i32 %39, i32 %38, i16 zeroext %43, i16 zeroext %44, i32 %6) #14
  br label %45

45:                                               ; preds = %34, %37, %13
  ret void
}

declare i32 @_ZN18GrResourceProvider20NumVertsPerNonAAQuadEv() local_unnamed_addr #7

declare void @_ZN15GrOpsRenderPass4drawEii(%class.GrOpsRenderPass*, i32, i32) local_unnamed_addr #7

declare i32 @_ZN18GrResourceProvider19NumIndicesPerAAQuadEv() local_unnamed_addr #7

declare i32 @_ZN18GrResourceProvider17NumVertsPerAAQuadEv() local_unnamed_addr #7

declare i32 @_ZN18GrResourceProvider22NumIndicesPerNonAAQuadEv() local_unnamed_addr #7

declare void @_ZN15GrOpsRenderPass16drawIndexPatternEiiiii(%class.GrOpsRenderPass*, i32, i32, i32, i32, i32) local_unnamed_addr #7

declare void @_ZN15GrOpsRenderPass11drawIndexedEiitti(%class.GrOpsRenderPass*, i32, i32, i16 zeroext, i16 zeroext, i32) local_unnamed_addr #7

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i32 @_ZNK15GrQuadPerEdgeAA10VertexSpec20deviceDimensionalityEv(%"struct.GrQuadPerEdgeAA::VertexSpec"* nocapture readonly) local_unnamed_addr #2 align 2 {
  %2 = getelementptr inbounds %"struct.GrQuadPerEdgeAA::VertexSpec", %"struct.GrQuadPerEdgeAA::VertexSpec"* %0, i64 0, i32 0
  %3 = load i16, i16* %2, align 4
  %4 = and i16 %3, 3
  %5 = icmp eq i16 %4, 3
  %6 = select i1 %5, i32 3, i32 2
  ret i32 %6
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i32 @_ZNK15GrQuadPerEdgeAA10VertexSpec19localDimensionalityEv(%"struct.GrQuadPerEdgeAA::VertexSpec"* nocapture readonly) local_unnamed_addr #2 align 2 {
  %2 = getelementptr inbounds %"struct.GrQuadPerEdgeAA::VertexSpec", %"struct.GrQuadPerEdgeAA::VertexSpec"* %0, i64 0, i32 0
  %3 = load i16, i16* %2, align 4
  %4 = and i16 %3, 64
  %5 = icmp eq i16 %4, 0
  br i1 %5, label %10, label %6

6:                                                ; preds = %1
  %7 = and i16 %3, 12
  %8 = icmp eq i16 %7, 12
  %9 = select i1 %8, i32 3, i32 2
  br label %10

10:                                               ; preds = %1, %6
  %11 = phi i32 [ %9, %6 ], [ 0, %1 ]
  ret i32 %11
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i64 @_ZNK15GrQuadPerEdgeAA10VertexSpec10vertexSizeEv(%"struct.GrQuadPerEdgeAA::VertexSpec"* nocapture readonly) local_unnamed_addr #2 align 2 {
  %2 = getelementptr inbounds %"struct.GrQuadPerEdgeAA::VertexSpec", %"struct.GrQuadPerEdgeAA::VertexSpec"* %0, i64 0, i32 0
  %3 = load i16, i16* %2, align 4
  %4 = and i16 %3, 3
  %5 = icmp eq i16 %4, 3
  %6 = and i16 %3, 1024
  %7 = icmp eq i16 %6, 0
  br i1 %7, label %16, label %8

8:                                                ; preds = %1
  %9 = and i16 %3, 384
  %10 = icmp eq i16 %9, 0
  %11 = and i16 %3, 6144
  %12 = icmp ne i16 %11, 2048
  %13 = or i1 %12, %10
  br i1 %13, label %14, label %16

14:                                               ; preds = %8
  %15 = select i1 %5, i64 16, i64 12
  br label %18

16:                                               ; preds = %8, %1
  %17 = select i1 %5, i64 12, i64 8
  br label %18

18:                                               ; preds = %16, %14
  %19 = phi i64 [ %15, %14 ], [ %17, %16 ]
  %20 = and i16 %3, 4096
  %21 = icmp eq i16 %20, 0
  %22 = add nuw nsw i64 %19, 16
  %23 = select i1 %21, i64 %19, i64 %22
  %24 = and i16 %3, 64
  %25 = icmp eq i16 %24, 0
  br i1 %25, label %30, label %26

26:                                               ; preds = %18
  %27 = and i16 %3, 12
  %28 = icmp eq i16 %27, 12
  %29 = select i1 %28, i64 12, i64 8
  br label %30

30:                                               ; preds = %18, %26
  %31 = phi i64 [ %29, %26 ], [ 0, %18 ]
  %32 = add nuw nsw i64 %31, %23
  %33 = lshr i16 %3, 7
  %34 = and i16 %33, 3
  %35 = zext i16 %34 to i32
  switch i32 %35, label %40 [
    i32 1, label %36
    i32 2, label %38
  ]

36:                                               ; preds = %30
  %37 = add nuw nsw i64 %32, 4
  br label %40

38:                                               ; preds = %30
  %39 = add nuw nsw i64 %32, 16
  br label %40

40:                                               ; preds = %30, %38, %36
  %41 = phi i64 [ %37, %36 ], [ %39, %38 ], [ %32, %30 ]
  %42 = and i16 %3, 512
  %43 = icmp eq i16 %42, 0
  %44 = add nuw nsw i64 %41, 16
  %45 = select i1 %43, i64 %41, i64 %44
  ret i64 %45
}

; Function Attrs: nounwind ssp uwtable
define hidden %class.GrGeometryProcessor* @_ZN15GrQuadPerEdgeAA13MakeProcessorEP12SkArenaAllocRKNS_10VertexSpecE(%class.SkArenaAlloc*, %"struct.GrQuadPerEdgeAA::VertexSpec"* dereferenceable(4)) local_unnamed_addr #4 {
  %3 = tail call i8* @_ZN12SkArenaAlloc21allocObjectWithFooterEjj(%class.SkArenaAlloc* %0, i32 297, i32 8) #14
  %4 = getelementptr inbounds %class.SkArenaAlloc, %class.SkArenaAlloc* %0, i64 0, i32 1
  %5 = bitcast i8** %4 to i64*
  %6 = load i64, i64* %5, align 8
  %7 = ptrtoint i8* %3 to i64
  %8 = sub i64 %7, %6
  %9 = trunc i64 %8 to i32
  %10 = getelementptr inbounds i8, i8* %3, i64 288
  store i8* %10, i8** %4, align 8
  tail call void @_ZN12SkArenaAlloc13installFooterEPFPcS0_Ej(%class.SkArenaAlloc* %0, i8* (i8*)* nonnull @_ZZN12SkArenaAlloc4makeIZN15GrQuadPerEdgeAA30QuadPerEdgeAAGeometryProcessor4MakeEPS_RKNS1_10VertexSpecEEUlPvE_EEDTclfp_LDnEEEOT_ENUlPcE_8__invokeESC_, i32 %9) #14
  %11 = bitcast i8* %3 to %"class.GrQuadPerEdgeAA::QuadPerEdgeAAGeometryProcessor"*
  %12 = bitcast i8* %3 to %class.GrGeometryProcessor*
  tail call void @_ZN19GrGeometryProcessorC2EN11GrProcessor7ClassIDE(%class.GrGeometryProcessor* %12, i32 91) #14
  %13 = bitcast i8* %3 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [8 x i8*] }, { [8 x i8*] }* @_ZTVN15GrQuadPerEdgeAA30QuadPerEdgeAAGeometryProcessorE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %13, align 8
  %14 = getelementptr inbounds i8, i8* %3, i64 80
  %15 = getelementptr inbounds i8, i8* %3, i64 177
  store i8 0, i8* %15, align 1
  %16 = getelementptr inbounds i8, i8* %3, i64 184
  %17 = bitcast i8* %16 to %class.GrColorSpaceXform**
  store %class.GrColorSpaceXform* null, %class.GrColorSpaceXform** %17, align 8
  %18 = getelementptr inbounds i8, i8* %3, i64 192
  store i8 0, i8* %18, align 1
  %19 = getelementptr inbounds i8, i8* %3, i64 193
  store i8 0, i8* %19, align 1
  %20 = getelementptr inbounds i8, i8* %3, i64 196
  %21 = bitcast i8* %20 to i32*
  store i32 0, i32* %21, align 4
  %22 = getelementptr inbounds i8, i8* %3, i64 200
  %23 = bitcast i8* %22 to i32*
  store i32 0, i32* %23, align 4
  %24 = getelementptr inbounds i8, i8* %3, i64 208
  %25 = bitcast i8* %24 to i32*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %14, i8 0, i64 96, i1 false) #14
  store i32 5, i32* %25, align 8
  %26 = getelementptr inbounds i8, i8* %3, i64 212
  store i8 0, i8* %26, align 4
  %27 = getelementptr inbounds i8, i8* %3, i64 272
  %28 = bitcast i8* %27 to i32*
  store i32 0, i32* %28, align 8
  %29 = getelementptr inbounds i8, i8* %3, i64 280
  %30 = bitcast i8* %29 to %class.GrSwizzle*
  tail call void @_ZN9GrSwizzleC2EPKc(%class.GrSwizzle* %30, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.2, i64 0, i64 0)) #14
  %31 = getelementptr inbounds i8, i8* %3, i64 282
  store i8 0, i8* %31, align 2
  tail call void @_ZN15GrQuadPerEdgeAA30QuadPerEdgeAAGeometryProcessor15initializeAttrsERKNS_10VertexSpecE(%"class.GrQuadPerEdgeAA::QuadPerEdgeAAGeometryProcessor"* %11, %"struct.GrQuadPerEdgeAA::VertexSpec"* dereferenceable(4) %1) #14
  %32 = getelementptr inbounds i8, i8* %3, i64 72
  %33 = bitcast i8* %32 to i32*
  store i32 0, i32* %33, align 8
  ret %class.GrGeometryProcessor* %12
}

; Function Attrs: nounwind ssp uwtable
define hidden %class.GrGeometryProcessor* @_ZN15GrQuadPerEdgeAA21MakeTexturedProcessorEP12SkArenaAllocRKNS_10VertexSpecERK12GrShaderCapsRK15GrBackendFormat14GrSamplerStateRK9GrSwizzle5sk_spI17GrColorSpaceXformEN11GrTextureOp8SaturateE(%class.SkArenaAlloc*, %"struct.GrQuadPerEdgeAA::VertexSpec"* dereferenceable(4), %class.GrShaderCaps* nocapture readnone dereferenceable(144), %class.GrBackendFormat* dereferenceable(72), i64, i32, %class.GrSwizzle* dereferenceable(2), %class.sk_sp.35* nocapture, i1 zeroext) local_unnamed_addr #4 {
  %10 = getelementptr inbounds %class.sk_sp.35, %class.sk_sp.35* %7, i64 0, i32 0
  %11 = bitcast %class.sk_sp.35* %7 to i64*
  %12 = load i64, i64* %11, align 8
  store %class.GrColorSpaceXform* null, %class.GrColorSpaceXform** %10, align 8
  %13 = zext i1 %8 to i8
  %14 = tail call i8* @_ZN12SkArenaAlloc21allocObjectWithFooterEjj(%class.SkArenaAlloc* %0, i32 297, i32 8) #14
  %15 = getelementptr inbounds %class.SkArenaAlloc, %class.SkArenaAlloc* %0, i64 0, i32 1
  %16 = bitcast i8** %15 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = ptrtoint i8* %14 to i64
  %19 = sub i64 %18, %17
  %20 = trunc i64 %19 to i32
  %21 = getelementptr inbounds i8, i8* %14, i64 288
  store i8* %21, i8** %15, align 8
  tail call void @_ZN12SkArenaAlloc13installFooterEPFPcS0_Ej(%class.SkArenaAlloc* %0, i8* (i8*)* nonnull @_ZZN12SkArenaAlloc4makeIZN15GrQuadPerEdgeAA30QuadPerEdgeAAGeometryProcessor4MakeEPS_RKNS1_10VertexSpecERK12GrShaderCapsRK15GrBackendFormat14GrSamplerStateRK9GrSwizzle5sk_spI17GrColorSpaceXformEN11GrTextureOp8SaturateEEUlPvE_EEDTclfp_LDnEEEOT_ENUlPcE_8__invokeESR_, i32 %20) #14
  %22 = bitcast i8* %14 to %"class.GrQuadPerEdgeAA::QuadPerEdgeAAGeometryProcessor"*
  %23 = bitcast i8* %14 to %class.GrGeometryProcessor*
  tail call void @_ZN19GrGeometryProcessorC2EN11GrProcessor7ClassIDE(%class.GrGeometryProcessor* %23, i32 91) #14
  %24 = bitcast i8* %14 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [8 x i8*] }, { [8 x i8*] }* @_ZTVN15GrQuadPerEdgeAA30QuadPerEdgeAAGeometryProcessorE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %24, align 8
  %25 = getelementptr inbounds i8, i8* %14, i64 80
  %26 = getelementptr inbounds i8, i8* %14, i64 177
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %25, i8 0, i64 96, i1 false) #14
  store i8 %13, i8* %26, align 1
  %27 = getelementptr inbounds i8, i8* %14, i64 184
  %28 = bitcast i8* %27 to i64*
  store i64 %12, i64* %28, align 8
  %29 = getelementptr inbounds i8, i8* %14, i64 192
  %30 = bitcast i8* %29 to %"class.GrGeometryProcessor::TextureSampler"*
  tail call void @_ZN19GrGeometryProcessor14TextureSamplerC1E14GrSamplerStateRK15GrBackendFormatRK9GrSwizzle(%"class.GrGeometryProcessor::TextureSampler"* %30, i64 %4, i32 %5, %class.GrBackendFormat* dereferenceable(72) %3, %class.GrSwizzle* dereferenceable(2) %6) #14
  tail call void @_ZN15GrQuadPerEdgeAA30QuadPerEdgeAAGeometryProcessor15initializeAttrsERKNS_10VertexSpecE(%"class.GrQuadPerEdgeAA::QuadPerEdgeAAGeometryProcessor"* %22, %"struct.GrQuadPerEdgeAA::VertexSpec"* dereferenceable(4) %1) #14
  %31 = getelementptr inbounds i8, i8* %14, i64 72
  %32 = bitcast i8* %31 to i32*
  store i32 1, i32* %32, align 8
  ret %class.GrGeometryProcessor* %23
}

declare i32 @_ZNK8SkRGBA4fIL11SkAlphaType2EE12toBytes_RGBAEv(%struct.SkRGBA4f*) local_unnamed_addr #7

declare { <2 x float>, <2 x float> } @_ZNK6GrQuad15projectedBoundsEv(%class.GrQuad*) local_unnamed_addr #7

declare void @_ZN18GrResourceProvider23createAAQuadIndexBufferEv(%class.sk_sp.32* sret, %class.GrResourceProvider*) local_unnamed_addr #7

declare void @_ZNK13GrGpuResource19notifyARefCntIsZeroEN7GrIORefIS_E14LastRemovedRefE(%class.GrGpuResource*, i32) local_unnamed_addr #7

declare void @_ZN18GrResourceProvider26createNonAAQuadIndexBufferEv(%class.sk_sp.32* sret, %class.GrResourceProvider*) local_unnamed_addr #7

; Function Attrs: noreturn
declare void @_Z16SkAbort_FileLinePKciS0_z(i8*, i32, i8*, ...) local_unnamed_addr #9

declare i8* @_ZN12SkArenaAlloc21allocObjectWithFooterEjj(%class.SkArenaAlloc*, i32, i32) local_unnamed_addr #7

declare void @_ZN12SkArenaAlloc13installFooterEPFPcS0_Ej(%class.SkArenaAlloc*, i8* (i8*)*, i32) local_unnamed_addr #7

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZZN12SkArenaAlloc4makeIZN15GrQuadPerEdgeAA30QuadPerEdgeAAGeometryProcessor4MakeEPS_RKNS1_10VertexSpecEEUlPvE_EEDTclfp_LDnEEEOT_ENUlPcE_8__invokeESC_(i8*) #10 comdat align 2 {
  %2 = getelementptr inbounds i8, i8* %0, i64 -297
  %3 = bitcast i8* %2 to %"class.GrQuadPerEdgeAA::QuadPerEdgeAAGeometryProcessor"*
  %4 = bitcast i8* %2 to void (%"class.GrQuadPerEdgeAA::QuadPerEdgeAAGeometryProcessor"*)***
  %5 = load void (%"class.GrQuadPerEdgeAA::QuadPerEdgeAAGeometryProcessor"*)**, void (%"class.GrQuadPerEdgeAA::QuadPerEdgeAAGeometryProcessor"*)*** %4, align 8
  %6 = load void (%"class.GrQuadPerEdgeAA::QuadPerEdgeAAGeometryProcessor"*)*, void (%"class.GrQuadPerEdgeAA::QuadPerEdgeAAGeometryProcessor"*)** %5, align 8
  tail call void %6(%"class.GrQuadPerEdgeAA::QuadPerEdgeAAGeometryProcessor"* %3) #14
  ret i8* %2
}

declare void @_ZN19GrGeometryProcessorC2EN11GrProcessor7ClassIDE(%class.GrGeometryProcessor*, i32) unnamed_addr #7

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN15GrQuadPerEdgeAA30QuadPerEdgeAAGeometryProcessor15initializeAttrsERKNS_10VertexSpecE(%"class.GrQuadPerEdgeAA::QuadPerEdgeAAGeometryProcessor"*, %"struct.GrQuadPerEdgeAA::VertexSpec"* dereferenceable(4)) local_unnamed_addr #4 comdat align 2 {
  %3 = getelementptr inbounds %"struct.GrQuadPerEdgeAA::VertexSpec", %"struct.GrQuadPerEdgeAA::VertexSpec"* %1, i64 0, i32 0
  %4 = load i16, i16* %3, align 4
  %5 = and i16 %4, 3
  %6 = icmp eq i16 %5, 3
  %7 = getelementptr inbounds %"class.GrQuadPerEdgeAA::QuadPerEdgeAAGeometryProcessor", %"class.GrQuadPerEdgeAA::QuadPerEdgeAAGeometryProcessor"* %0, i64 0, i32 7
  %8 = zext i1 %6 to i8
  store i8 %8, i8* %7, align 8
  %9 = load i16, i16* %3, align 4
  %10 = and i16 %9, 1024
  %11 = icmp eq i16 %10, 0
  br i1 %11, label %26, label %12

12:                                               ; preds = %2
  %13 = and i16 %9, 384
  %14 = icmp eq i16 %13, 0
  %15 = and i16 %9, 6144
  %16 = icmp ne i16 %15, 2048
  %17 = or i1 %16, %14
  br i1 %17, label %18, label %26

18:                                               ; preds = %12
  %19 = getelementptr inbounds %"class.GrQuadPerEdgeAA::QuadPerEdgeAAGeometryProcessor", %"class.GrQuadPerEdgeAA::QuadPerEdgeAAGeometryProcessor"* %0, i64 0, i32 9
  store i32 1, i32* %19, align 4
  %20 = getelementptr inbounds %"class.GrQuadPerEdgeAA::QuadPerEdgeAAGeometryProcessor", %"class.GrQuadPerEdgeAA::QuadPerEdgeAAGeometryProcessor"* %0, i64 0, i32 1
  %21 = bitcast %"class.GrGeometryProcessor::Attribute"* %20 to i8*
  br i1 %6, label %22, label %23

22:                                               ; preds = %18
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %21, i8* align 8 bitcast (%"class.GrGeometryProcessor::Attribute"* @.ref.tmp to i8*), i64 16, i1 false)
  br label %33

23:                                               ; preds = %18
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %21, i8* align 8 bitcast (%"class.GrGeometryProcessor::Attribute"* @.ref.tmp.9 to i8*), i64 16, i1 false)
  %24 = getelementptr inbounds %"class.GrQuadPerEdgeAA::QuadPerEdgeAAGeometryProcessor", %"class.GrQuadPerEdgeAA::QuadPerEdgeAAGeometryProcessor"* %0, i64 0, i32 2
  %25 = bitcast %"class.GrGeometryProcessor::Attribute"* %24 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %25, i8* align 8 bitcast (%"class.GrGeometryProcessor::Attribute"* @.ref.tmp.7 to i8*), i64 16, i1 false)
  br label %33

26:                                               ; preds = %12, %2
  %27 = phi i32 [ 0, %2 ], [ 2, %12 ]
  %28 = getelementptr inbounds %"class.GrQuadPerEdgeAA::QuadPerEdgeAAGeometryProcessor", %"class.GrQuadPerEdgeAA::QuadPerEdgeAAGeometryProcessor"* %0, i64 0, i32 9
  store i32 %27, i32* %28, align 4
  %29 = getelementptr inbounds %"class.GrQuadPerEdgeAA::QuadPerEdgeAAGeometryProcessor", %"class.GrQuadPerEdgeAA::QuadPerEdgeAAGeometryProcessor"* %0, i64 0, i32 1
  %30 = bitcast %"class.GrGeometryProcessor::Attribute"* %29 to i8*
  br i1 %6, label %31, label %32

31:                                               ; preds = %26
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %30, i8* align 8 bitcast (%"class.GrGeometryProcessor::Attribute"* @.ref.tmp.8 to i8*), i64 16, i1 false)
  br label %33

32:                                               ; preds = %26
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %30, i8* align 8 bitcast (%"class.GrGeometryProcessor::Attribute"* @.ref.tmp.9 to i8*), i64 16, i1 false)
  br label %33

33:                                               ; preds = %31, %32, %22, %23
  %34 = phi i64 [ 12, %31 ], [ 8, %32 ], [ 16, %22 ], [ 8, %23 ]
  %35 = phi %"class.GrGeometryProcessor::Attribute"* [ %29, %31 ], [ %29, %32 ], [ %20, %22 ], [ %20, %23 ]
  %36 = load i16, i16* %3, align 4
  %37 = and i16 %36, 4096
  %38 = icmp eq i16 %37, 0
  br i1 %38, label %43, label %39

39:                                               ; preds = %33
  %40 = getelementptr inbounds %"class.GrQuadPerEdgeAA::QuadPerEdgeAAGeometryProcessor", %"class.GrQuadPerEdgeAA::QuadPerEdgeAAGeometryProcessor"* %0, i64 0, i32 5
  %41 = bitcast %"class.GrGeometryProcessor::Attribute"* %40 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %41, i8* align 8 bitcast (%"class.GrGeometryProcessor::Attribute"* @.ref.tmp.11 to i8*), i64 16, i1 false)
  %42 = load i16, i16* %3, align 4
  br label %43

43:                                               ; preds = %33, %39
  %44 = phi i16 [ %36, %33 ], [ %42, %39 ]
  %45 = and i16 %44, 64
  %46 = icmp eq i16 %45, 0
  br i1 %46, label %54, label %47

47:                                               ; preds = %43
  %48 = and i16 %44, 12
  %49 = icmp eq i16 %48, 12
  %50 = getelementptr inbounds %"class.GrQuadPerEdgeAA::QuadPerEdgeAAGeometryProcessor", %"class.GrQuadPerEdgeAA::QuadPerEdgeAAGeometryProcessor"* %0, i64 0, i32 4
  %51 = bitcast %"class.GrGeometryProcessor::Attribute"* %50 to i8*
  br i1 %49, label %52, label %53

52:                                               ; preds = %47
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %51, i8* align 8 bitcast (%"class.GrGeometryProcessor::Attribute"* @.ref.tmp.13 to i8*), i64 16, i1 false)
  br label %54

53:                                               ; preds = %47
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %51, i8* align 8 bitcast (%"class.GrGeometryProcessor::Attribute"* @.ref.tmp.14 to i8*), i64 16, i1 false)
  br label %54

54:                                               ; preds = %43, %53, %52
  %55 = load i16, i16* %3, align 4
  %56 = and i16 %55, 384
  %57 = icmp eq i16 %56, 0
  br i1 %57, label %65, label %58

58:                                               ; preds = %54
  %59 = icmp eq i16 %56, 256
  %60 = select i1 %59, i64 133143986179, i64 133143986193
  %61 = getelementptr inbounds %"class.GrQuadPerEdgeAA::QuadPerEdgeAAGeometryProcessor", %"class.GrQuadPerEdgeAA::QuadPerEdgeAAGeometryProcessor"* %0, i64 0, i32 3, i32 0
  store i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.15, i64 0, i64 0), i8** %61, align 8
  %62 = getelementptr inbounds %"class.GrQuadPerEdgeAA::QuadPerEdgeAAGeometryProcessor", %"class.GrQuadPerEdgeAA::QuadPerEdgeAAGeometryProcessor"* %0, i64 0, i32 3, i32 1
  %63 = bitcast i32* %62 to i64*
  store i64 %60, i64* %63, align 8
  %64 = load i16, i16* %3, align 4
  br label %65

65:                                               ; preds = %54, %58
  %66 = phi i16 [ %55, %54 ], [ %64, %58 ]
  %67 = and i16 %66, 512
  %68 = icmp eq i16 %67, 0
  br i1 %68, label %72, label %69

69:                                               ; preds = %65
  %70 = getelementptr inbounds %"class.GrQuadPerEdgeAA::QuadPerEdgeAAGeometryProcessor", %"class.GrQuadPerEdgeAA::QuadPerEdgeAAGeometryProcessor"* %0, i64 0, i32 6
  %71 = bitcast %"class.GrGeometryProcessor::Attribute"* %70 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %71, i8* align 8 bitcast (%"class.GrGeometryProcessor::Attribute"* @.ref.tmp.17 to i8*), i64 16, i1 false)
  br label %72

72:                                               ; preds = %69, %65
  %73 = getelementptr inbounds %"class.GrQuadPerEdgeAA::QuadPerEdgeAAGeometryProcessor", %"class.GrQuadPerEdgeAA::QuadPerEdgeAAGeometryProcessor"* %0, i64 0, i32 0, i32 3, i32 0
  store %"class.GrGeometryProcessor::Attribute"* %35, %"class.GrGeometryProcessor::Attribute"** %73, align 8
  %74 = getelementptr inbounds %"class.GrQuadPerEdgeAA::QuadPerEdgeAAGeometryProcessor", %"class.GrQuadPerEdgeAA::QuadPerEdgeAAGeometryProcessor"* %0, i64 0, i32 0, i32 3, i32 1
  store i32 6, i32* %74, align 8
  %75 = getelementptr inbounds %"class.GrQuadPerEdgeAA::QuadPerEdgeAAGeometryProcessor", %"class.GrQuadPerEdgeAA::QuadPerEdgeAAGeometryProcessor"* %0, i64 0, i32 0, i32 3, i32 2
  %76 = getelementptr inbounds %"class.GrQuadPerEdgeAA::QuadPerEdgeAAGeometryProcessor", %"class.GrQuadPerEdgeAA::QuadPerEdgeAAGeometryProcessor"* %0, i64 0, i32 0, i32 3, i32 3
  store i64 0, i64* %76, align 8
  %77 = getelementptr inbounds %"class.GrQuadPerEdgeAA::QuadPerEdgeAAGeometryProcessor", %"class.GrQuadPerEdgeAA::QuadPerEdgeAAGeometryProcessor"* %0, i64 0, i32 1
  store i32 1, i32* %75, align 4
  store i64 %34, i64* %76, align 8
  %78 = getelementptr inbounds %"class.GrGeometryProcessor::Attribute", %"class.GrGeometryProcessor::Attribute"* %77, i64 1, i32 2
  %79 = load i32, i32* %78, align 4
  %80 = icmp eq i32 %79, 0
  br i1 %80, label %91, label %82

81:                                               ; preds = %145, %129, %113, %97, %82
  tail call void (i8*, i32, i8*, ...) @_Z16SkAbort_FileLinePKciS0_z(i8* getelementptr inbounds ([53 x i8], [53 x i8]* @.str, i64 0, i64 0), i32 373, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.1, i64 0, i64 0)) #15
  unreachable

82:                                               ; preds = %72
  store i32 2, i32* %75, align 4
  %83 = getelementptr inbounds %"class.GrGeometryProcessor::Attribute", %"class.GrGeometryProcessor::Attribute"* %77, i64 1, i32 1
  %84 = load i32, i32* %83, align 8
  %85 = icmp ult i32 %84, 26
  br i1 %85, label %86, label %81

86:                                               ; preds = %82
  %87 = sext i32 %84 to i64
  %88 = getelementptr inbounds [26 x i64], [26 x i64]* @switch.table._ZN15GrQuadPerEdgeAA30QuadPerEdgeAAGeometryProcessor15initializeAttrsERKNS_10VertexSpecE.59, i64 0, i64 %87
  %89 = load i64, i64* %88, align 8
  %90 = add nuw nsw i64 %34, %89
  store i64 %90, i64* %76, align 8
  br label %91

91:                                               ; preds = %86, %72
  %92 = phi i64 [ %90, %86 ], [ %34, %72 ]
  %93 = phi i32 [ 2, %86 ], [ 1, %72 ]
  %94 = getelementptr inbounds %"class.GrGeometryProcessor::Attribute", %"class.GrGeometryProcessor::Attribute"* %77, i64 2, i32 2
  %95 = load i32, i32* %94, align 4
  %96 = icmp eq i32 %95, 0
  br i1 %96, label %107, label %97

97:                                               ; preds = %91
  %98 = add nuw nsw i32 %93, 1
  store i32 %98, i32* %75, align 4
  %99 = getelementptr inbounds %"class.GrGeometryProcessor::Attribute", %"class.GrGeometryProcessor::Attribute"* %77, i64 2, i32 1
  %100 = load i32, i32* %99, align 8
  %101 = icmp ult i32 %100, 26
  br i1 %101, label %102, label %81

102:                                              ; preds = %97
  %103 = sext i32 %100 to i64
  %104 = getelementptr inbounds [26 x i64], [26 x i64]* @switch.table._ZN15GrQuadPerEdgeAA30QuadPerEdgeAAGeometryProcessor15initializeAttrsERKNS_10VertexSpecE.59, i64 0, i64 %103
  %105 = load i64, i64* %104, align 8
  %106 = add nuw nsw i64 %92, %105
  store i64 %106, i64* %76, align 8
  br label %107

107:                                              ; preds = %102, %91
  %108 = phi i64 [ %106, %102 ], [ %92, %91 ]
  %109 = phi i32 [ %98, %102 ], [ %93, %91 ]
  %110 = getelementptr inbounds %"class.GrGeometryProcessor::Attribute", %"class.GrGeometryProcessor::Attribute"* %77, i64 3, i32 2
  %111 = load i32, i32* %110, align 4
  %112 = icmp eq i32 %111, 0
  br i1 %112, label %123, label %113

113:                                              ; preds = %107
  %114 = add nuw nsw i32 %109, 1
  store i32 %114, i32* %75, align 4
  %115 = getelementptr inbounds %"class.GrGeometryProcessor::Attribute", %"class.GrGeometryProcessor::Attribute"* %77, i64 3, i32 1
  %116 = load i32, i32* %115, align 8
  %117 = icmp ult i32 %116, 26
  br i1 %117, label %118, label %81

118:                                              ; preds = %113
  %119 = sext i32 %116 to i64
  %120 = getelementptr inbounds [26 x i64], [26 x i64]* @switch.table._ZN15GrQuadPerEdgeAA30QuadPerEdgeAAGeometryProcessor15initializeAttrsERKNS_10VertexSpecE.59, i64 0, i64 %119
  %121 = load i64, i64* %120, align 8
  %122 = add nuw nsw i64 %108, %121
  store i64 %122, i64* %76, align 8
  br label %123

123:                                              ; preds = %118, %107
  %124 = phi i64 [ %122, %118 ], [ %108, %107 ]
  %125 = phi i32 [ %114, %118 ], [ %109, %107 ]
  %126 = getelementptr inbounds %"class.GrGeometryProcessor::Attribute", %"class.GrGeometryProcessor::Attribute"* %77, i64 4, i32 2
  %127 = load i32, i32* %126, align 4
  %128 = icmp eq i32 %127, 0
  br i1 %128, label %139, label %129

129:                                              ; preds = %123
  %130 = add nuw nsw i32 %125, 1
  store i32 %130, i32* %75, align 4
  %131 = getelementptr inbounds %"class.GrGeometryProcessor::Attribute", %"class.GrGeometryProcessor::Attribute"* %77, i64 4, i32 1
  %132 = load i32, i32* %131, align 8
  %133 = icmp ult i32 %132, 26
  br i1 %133, label %134, label %81

134:                                              ; preds = %129
  %135 = sext i32 %132 to i64
  %136 = getelementptr inbounds [26 x i64], [26 x i64]* @switch.table._ZN15GrQuadPerEdgeAA30QuadPerEdgeAAGeometryProcessor15initializeAttrsERKNS_10VertexSpecE.59, i64 0, i64 %135
  %137 = load i64, i64* %136, align 8
  %138 = add nuw nsw i64 %124, %137
  store i64 %138, i64* %76, align 8
  br label %139

139:                                              ; preds = %134, %123
  %140 = phi i64 [ %138, %134 ], [ %124, %123 ]
  %141 = phi i32 [ %130, %134 ], [ %125, %123 ]
  %142 = getelementptr inbounds %"class.GrGeometryProcessor::Attribute", %"class.GrGeometryProcessor::Attribute"* %77, i64 5, i32 2
  %143 = load i32, i32* %142, align 4
  %144 = icmp eq i32 %143, 0
  br i1 %144, label %155, label %145

145:                                              ; preds = %139
  %146 = add nuw nsw i32 %141, 1
  store i32 %146, i32* %75, align 4
  %147 = getelementptr inbounds %"class.GrGeometryProcessor::Attribute", %"class.GrGeometryProcessor::Attribute"* %77, i64 5, i32 1
  %148 = load i32, i32* %147, align 8
  %149 = icmp ult i32 %148, 26
  br i1 %149, label %150, label %81

150:                                              ; preds = %145
  %151 = sext i32 %148 to i64
  %152 = getelementptr inbounds [26 x i64], [26 x i64]* @switch.table._ZN15GrQuadPerEdgeAA30QuadPerEdgeAAGeometryProcessor15initializeAttrsERKNS_10VertexSpecE.59, i64 0, i64 %151
  %153 = load i64, i64* %152, align 8
  %154 = add nuw nsw i64 %140, %153
  store i64 %154, i64* %76, align 8
  br label %155

155:                                              ; preds = %150, %139
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN15GrQuadPerEdgeAA30QuadPerEdgeAAGeometryProcessorD2Ev(%"class.GrQuadPerEdgeAA::QuadPerEdgeAAGeometryProcessor"*) unnamed_addr #10 comdat align 2 {
  %2 = getelementptr inbounds %"class.GrQuadPerEdgeAA::QuadPerEdgeAAGeometryProcessor", %"class.GrQuadPerEdgeAA::QuadPerEdgeAAGeometryProcessor"* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [8 x i8*] }, { [8 x i8*] }* @_ZTVN15GrQuadPerEdgeAA30QuadPerEdgeAAGeometryProcessorE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.GrQuadPerEdgeAA::QuadPerEdgeAAGeometryProcessor", %"class.GrQuadPerEdgeAA::QuadPerEdgeAAGeometryProcessor"* %0, i64 0, i32 10, i32 0
  %4 = load %class.GrColorSpaceXform*, %class.GrColorSpaceXform** %3, align 8
  %5 = icmp eq %class.GrColorSpaceXform* %4, null
  br i1 %5, label %16, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %class.GrColorSpaceXform, %class.GrColorSpaceXform* %4, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %8 = atomicrmw add i32* %7, i32 -1 acq_rel
  %9 = icmp eq i32 %8, 1
  br i1 %9, label %10, label %16

10:                                               ; preds = %6
  %11 = bitcast %class.GrColorSpaceXform* %4 to %class.SkRefCntBase*
  %12 = bitcast %class.GrColorSpaceXform* %4 to void (%class.SkRefCntBase*)***
  %13 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %12, align 8
  %14 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %13, i64 2
  %15 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %14, align 8
  tail call void %15(%class.SkRefCntBase* nonnull %11) #14
  br label %16

16:                                               ; preds = %1, %6, %10
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN15GrQuadPerEdgeAA30QuadPerEdgeAAGeometryProcessorD0Ev(%"class.GrQuadPerEdgeAA::QuadPerEdgeAAGeometryProcessor"*) unnamed_addr #10 comdat align 2 {
  %2 = getelementptr inbounds %"class.GrQuadPerEdgeAA::QuadPerEdgeAAGeometryProcessor", %"class.GrQuadPerEdgeAA::QuadPerEdgeAAGeometryProcessor"* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [8 x i8*] }, { [8 x i8*] }* @_ZTVN15GrQuadPerEdgeAA30QuadPerEdgeAAGeometryProcessorE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.GrQuadPerEdgeAA::QuadPerEdgeAAGeometryProcessor", %"class.GrQuadPerEdgeAA::QuadPerEdgeAAGeometryProcessor"* %0, i64 0, i32 10, i32 0
  %4 = load %class.GrColorSpaceXform*, %class.GrColorSpaceXform** %3, align 8
  %5 = icmp eq %class.GrColorSpaceXform* %4, null
  br i1 %5, label %16, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %class.GrColorSpaceXform, %class.GrColorSpaceXform* %4, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %8 = atomicrmw add i32* %7, i32 -1 acq_rel
  %9 = icmp eq i32 %8, 1
  br i1 %9, label %10, label %16

10:                                               ; preds = %6
  %11 = bitcast %class.GrColorSpaceXform* %4 to %class.SkRefCntBase*
  %12 = bitcast %class.GrColorSpaceXform* %4 to void (%class.SkRefCntBase*)***
  %13 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %12, align 8
  %14 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %13, i64 2
  %15 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %14, align 8
  tail call void %15(%class.SkRefCntBase* nonnull %11) #14
  br label %16

16:                                               ; preds = %1, %6, %10
  %17 = bitcast %"class.GrQuadPerEdgeAA::QuadPerEdgeAAGeometryProcessor"* %0 to i8*
  tail call void @_ZN11GrProcessordlEPv(i8* %17) #14
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZNK15GrQuadPerEdgeAA30QuadPerEdgeAAGeometryProcessor4nameEv(%"class.GrQuadPerEdgeAA::QuadPerEdgeAAGeometryProcessor"*) unnamed_addr #4 comdat align 2 {
  ret i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.18, i64 0, i64 0)
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK15GrQuadPerEdgeAA30QuadPerEdgeAAGeometryProcessor19getGLSLProcessorKeyERK12GrShaderCapsP21GrProcessorKeyBuilder(%"class.GrQuadPerEdgeAA::QuadPerEdgeAAGeometryProcessor"*, %class.GrShaderCaps* dereferenceable(144), %class.GrProcessorKeyBuilder*) unnamed_addr #4 comdat align 2 {
  %4 = getelementptr inbounds %"class.GrQuadPerEdgeAA::QuadPerEdgeAAGeometryProcessor", %"class.GrQuadPerEdgeAA::QuadPerEdgeAAGeometryProcessor"* %0, i64 0, i32 6, i32 2
  %5 = load i32, i32* %4, align 4
  %6 = icmp ne i32 %5, 0
  %7 = zext i1 %6 to i32
  %8 = bitcast %class.GrProcessorKeyBuilder* %2 to void (%class.GrProcessorKeyBuilder*, i32, i32, i8*)***
  %9 = load void (%class.GrProcessorKeyBuilder*, i32, i32, i8*)**, void (%class.GrProcessorKeyBuilder*, i32, i32, i8*)*** %8, align 8
  %10 = getelementptr inbounds void (%class.GrProcessorKeyBuilder*, i32, i32, i8*)*, void (%class.GrProcessorKeyBuilder*, i32, i32, i8*)** %9, i64 2
  %11 = load void (%class.GrProcessorKeyBuilder*, i32, i32, i8*)*, void (%class.GrProcessorKeyBuilder*, i32, i32, i8*)** %10, align 8
  tail call void %11(%class.GrProcessorKeyBuilder* %2, i32 1, i32 %7, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.19, i64 0, i64 0)) #14
  %12 = getelementptr inbounds %"class.GrQuadPerEdgeAA::QuadPerEdgeAAGeometryProcessor", %"class.GrQuadPerEdgeAA::QuadPerEdgeAAGeometryProcessor"* %0, i64 0, i32 11, i32 4
  %13 = load i8, i8* %12, align 2, !range !8
  %14 = zext i8 %13 to i32
  %15 = load void (%class.GrProcessorKeyBuilder*, i32, i32, i8*)**, void (%class.GrProcessorKeyBuilder*, i32, i32, i8*)*** %8, align 8
  %16 = getelementptr inbounds void (%class.GrProcessorKeyBuilder*, i32, i32, i8*)*, void (%class.GrProcessorKeyBuilder*, i32, i32, i8*)** %15, i64 2
  %17 = load void (%class.GrProcessorKeyBuilder*, i32, i32, i8*)*, void (%class.GrProcessorKeyBuilder*, i32, i32, i8*)** %16, align 8
  tail call void %17(%class.GrProcessorKeyBuilder* %2, i32 1, i32 %14, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.20, i64 0, i64 0)) #14
  %18 = getelementptr inbounds %"class.GrQuadPerEdgeAA::QuadPerEdgeAAGeometryProcessor", %"class.GrQuadPerEdgeAA::QuadPerEdgeAAGeometryProcessor"* %0, i64 0, i32 7
  %19 = load i8, i8* %18, align 8, !range !8
  %20 = zext i8 %19 to i32
  %21 = load void (%class.GrProcessorKeyBuilder*, i32, i32, i8*)**, void (%class.GrProcessorKeyBuilder*, i32, i32, i8*)*** %8, align 8
  %22 = getelementptr inbounds void (%class.GrProcessorKeyBuilder*, i32, i32, i8*)*, void (%class.GrProcessorKeyBuilder*, i32, i32, i8*)** %21, i64 2
  %23 = load void (%class.GrProcessorKeyBuilder*, i32, i32, i8*)*, void (%class.GrProcessorKeyBuilder*, i32, i32, i8*)** %22, align 8
  tail call void %23(%class.GrProcessorKeyBuilder* %2, i32 1, i32 %20, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.21, i64 0, i64 0)) #14
  %24 = getelementptr inbounds %"class.GrQuadPerEdgeAA::QuadPerEdgeAAGeometryProcessor", %"class.GrQuadPerEdgeAA::QuadPerEdgeAAGeometryProcessor"* %0, i64 0, i32 8
  %25 = load i8, i8* %24, align 1, !range !8
  %26 = zext i8 %25 to i32
  %27 = load void (%class.GrProcessorKeyBuilder*, i32, i32, i8*)**, void (%class.GrProcessorKeyBuilder*, i32, i32, i8*)*** %8, align 8
  %28 = getelementptr inbounds void (%class.GrProcessorKeyBuilder*, i32, i32, i8*)*, void (%class.GrProcessorKeyBuilder*, i32, i32, i8*)** %27, i64 2
  %29 = load void (%class.GrProcessorKeyBuilder*, i32, i32, i8*)*, void (%class.GrProcessorKeyBuilder*, i32, i32, i8*)** %28, align 8
  tail call void %29(%class.GrProcessorKeyBuilder* %2, i32 1, i32 %26, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.22, i64 0, i64 0)) #14
  %30 = getelementptr inbounds %"class.GrQuadPerEdgeAA::QuadPerEdgeAAGeometryProcessor", %"class.GrQuadPerEdgeAA::QuadPerEdgeAAGeometryProcessor"* %0, i64 0, i32 4, i32 2
  %31 = load i32, i32* %30, align 4
  %32 = icmp ne i32 %31, 0
  %33 = zext i1 %32 to i32
  %34 = load void (%class.GrProcessorKeyBuilder*, i32, i32, i8*)**, void (%class.GrProcessorKeyBuilder*, i32, i32, i8*)*** %8, align 8
  %35 = getelementptr inbounds void (%class.GrProcessorKeyBuilder*, i32, i32, i8*)*, void (%class.GrProcessorKeyBuilder*, i32, i32, i8*)** %34, i64 2
  %36 = load void (%class.GrProcessorKeyBuilder*, i32, i32, i8*)*, void (%class.GrProcessorKeyBuilder*, i32, i32, i8*)** %35, align 8
  tail call void %36(%class.GrProcessorKeyBuilder* %2, i32 1, i32 %33, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.23, i64 0, i64 0)) #14
  %37 = load i32, i32* %30, align 4
  %38 = icmp eq i32 %37, 0
  br i1 %38, label %47, label %39

39:                                               ; preds = %3
  %40 = getelementptr inbounds %"class.GrQuadPerEdgeAA::QuadPerEdgeAAGeometryProcessor", %"class.GrQuadPerEdgeAA::QuadPerEdgeAAGeometryProcessor"* %0, i64 0, i32 4, i32 1
  %41 = load i32, i32* %40, align 8
  %42 = icmp eq i32 %41, 2
  %43 = zext i1 %42 to i32
  %44 = load void (%class.GrProcessorKeyBuilder*, i32, i32, i8*)**, void (%class.GrProcessorKeyBuilder*, i32, i32, i8*)*** %8, align 8
  %45 = getelementptr inbounds void (%class.GrProcessorKeyBuilder*, i32, i32, i8*)*, void (%class.GrProcessorKeyBuilder*, i32, i32, i8*)** %44, i64 2
  %46 = load void (%class.GrProcessorKeyBuilder*, i32, i32, i8*)*, void (%class.GrProcessorKeyBuilder*, i32, i32, i8*)** %45, align 8
  tail call void %46(%class.GrProcessorKeyBuilder* %2, i32 1, i32 %43, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.24, i64 0, i64 0)) #14
  br label %47

47:                                               ; preds = %3, %39
  %48 = getelementptr inbounds %"class.GrQuadPerEdgeAA::QuadPerEdgeAAGeometryProcessor", %"class.GrQuadPerEdgeAA::QuadPerEdgeAAGeometryProcessor"* %0, i64 0, i32 3, i32 2
  %49 = load i32, i32* %48, align 4
  %50 = icmp ne i32 %49, 0
  %51 = zext i1 %50 to i32
  %52 = load void (%class.GrProcessorKeyBuilder*, i32, i32, i8*)**, void (%class.GrProcessorKeyBuilder*, i32, i32, i8*)*** %8, align 8
  %53 = getelementptr inbounds void (%class.GrProcessorKeyBuilder*, i32, i32, i8*)*, void (%class.GrProcessorKeyBuilder*, i32, i32, i8*)** %52, i64 2
  %54 = load void (%class.GrProcessorKeyBuilder*, i32, i32, i8*)*, void (%class.GrProcessorKeyBuilder*, i32, i32, i8*)** %53, align 8
  tail call void %54(%class.GrProcessorKeyBuilder* %2, i32 1, i32 %51, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.25, i64 0, i64 0)) #14
  %55 = load i32, i32* %48, align 4
  %56 = icmp eq i32 %55, 0
  br i1 %56, label %65, label %57

57:                                               ; preds = %47
  %58 = getelementptr inbounds %"class.GrQuadPerEdgeAA::QuadPerEdgeAAGeometryProcessor", %"class.GrQuadPerEdgeAA::QuadPerEdgeAAGeometryProcessor"* %0, i64 0, i32 3, i32 1
  %59 = load i32, i32* %58, align 8
  %60 = icmp eq i32 %59, 3
  %61 = zext i1 %60 to i32
  %62 = load void (%class.GrProcessorKeyBuilder*, i32, i32, i8*)**, void (%class.GrProcessorKeyBuilder*, i32, i32, i8*)*** %8, align 8
  %63 = getelementptr inbounds void (%class.GrProcessorKeyBuilder*, i32, i32, i8*)*, void (%class.GrProcessorKeyBuilder*, i32, i32, i8*)** %62, i64 2
  %64 = load void (%class.GrProcessorKeyBuilder*, i32, i32, i8*)*, void (%class.GrProcessorKeyBuilder*, i32, i32, i8*)** %63, align 8
  tail call void %64(%class.GrProcessorKeyBuilder* %2, i32 1, i32 %61, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.26, i64 0, i64 0)) #14
  br label %65

65:                                               ; preds = %47, %57
  %66 = getelementptr inbounds %"class.GrQuadPerEdgeAA::QuadPerEdgeAAGeometryProcessor", %"class.GrQuadPerEdgeAA::QuadPerEdgeAAGeometryProcessor"* %0, i64 0, i32 9
  %67 = load i32, i32* %66, align 4
  %68 = icmp eq i32 %67, 0
  br i1 %68, label %76, label %69

69:                                               ; preds = %65
  %70 = getelementptr inbounds %"class.GrQuadPerEdgeAA::QuadPerEdgeAAGeometryProcessor", %"class.GrQuadPerEdgeAA::QuadPerEdgeAAGeometryProcessor"* %0, i64 0, i32 5, i32 2
  %71 = load i32, i32* %70, align 4
  %72 = icmp eq i32 %71, 0
  br i1 %72, label %73, label %76

73:                                               ; preds = %69
  %74 = icmp eq i32 %67, 1
  %75 = select i1 %74, i32 1, i32 2
  br label %76

76:                                               ; preds = %69, %73, %65
  %77 = phi i32 [ 0, %65 ], [ %75, %73 ], [ 3, %69 ]
  %78 = load void (%class.GrProcessorKeyBuilder*, i32, i32, i8*)**, void (%class.GrProcessorKeyBuilder*, i32, i32, i8*)*** %8, align 8
  %79 = getelementptr inbounds void (%class.GrProcessorKeyBuilder*, i32, i32, i8*)*, void (%class.GrProcessorKeyBuilder*, i32, i32, i8*)** %78, i64 2
  %80 = load void (%class.GrProcessorKeyBuilder*, i32, i32, i8*)*, void (%class.GrProcessorKeyBuilder*, i32, i32, i8*)** %79, align 8
  tail call void %80(%class.GrProcessorKeyBuilder* %2, i32 2, i32 %77, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.27, i64 0, i64 0)) #14
  %81 = getelementptr inbounds %"class.GrQuadPerEdgeAA::QuadPerEdgeAAGeometryProcessor", %"class.GrQuadPerEdgeAA::QuadPerEdgeAAGeometryProcessor"* %0, i64 0, i32 10, i32 0
  %82 = load %class.GrColorSpaceXform*, %class.GrColorSpaceXform** %81, align 8
  %83 = tail call i32 @_ZN17GrColorSpaceXform8XformKeyEPKS_(%class.GrColorSpaceXform* %82)
  %84 = load void (%class.GrProcessorKeyBuilder*, i32, i32, i8*)**, void (%class.GrProcessorKeyBuilder*, i32, i32, i8*)*** %8, align 8
  %85 = getelementptr inbounds void (%class.GrProcessorKeyBuilder*, i32, i32, i8*)*, void (%class.GrProcessorKeyBuilder*, i32, i32, i8*)** %84, i64 2
  %86 = load void (%class.GrProcessorKeyBuilder*, i32, i32, i8*)*, void (%class.GrProcessorKeyBuilder*, i32, i32, i8*)** %85, align 8
  tail call void %86(%class.GrProcessorKeyBuilder* %2, i32 32, i32 %83, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.28, i64 0, i64 0)) #14
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %class.GrGLSLGeometryProcessor* @_ZNK15GrQuadPerEdgeAA30QuadPerEdgeAAGeometryProcessor18createGLSLInstanceERK12GrShaderCaps(%"class.GrQuadPerEdgeAA::QuadPerEdgeAAGeometryProcessor"*, %class.GrShaderCaps* dereferenceable(144)) unnamed_addr #4 comdat align 2 {
  %3 = tail call i8* @_Znwm(i64 56) #16
  %4 = bitcast i8* %3 to i32 (...)***
  %5 = getelementptr inbounds i8, i8* %3, i64 16
  %6 = bitcast i8* %5 to i64*
  %7 = getelementptr inbounds i8, i8* %3, i64 8
  %8 = bitcast i8* %7 to %"struct.GrGLSLGeometryProcessor::TransformInfo"**
  store %"struct.GrGLSLGeometryProcessor::TransformInfo"* null, %"struct.GrGLSLGeometryProcessor::TransformInfo"** %8, align 8
  store i64 1, i64* %6, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [8 x i8*] }, { [8 x i8*] }* @_ZTVZNK15GrQuadPerEdgeAA30QuadPerEdgeAAGeometryProcessor18createGLSLInstanceERK12GrShaderCapsE13GLSLProcessor, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %4, align 8
  %9 = getelementptr inbounds i8, i8* %3, i64 24
  %10 = bitcast i8* %9 to i32*
  store i32 -1, i32* %10, align 4
  %11 = getelementptr inbounds i8, i8* %3, i64 28
  %12 = bitcast i8* %11 to i32*
  store i32 -1, i32* %12, align 4
  %13 = getelementptr inbounds i8, i8* %3, i64 32
  %14 = bitcast i8* %13 to i32*
  store i32 -1, i32* %14, align 4
  %15 = getelementptr inbounds i8, i8* %3, i64 36
  tail call void @llvm.memset.p0i8.i64(i8* align 1 %15, i8 0, i64 5, i1 false) #14
  %16 = bitcast i8* %3 to %class.GrGLSLGeometryProcessor*
  ret %class.GrGLSLGeometryProcessor* %16
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(96) %"class.GrGeometryProcessor::TextureSampler"* @_ZNK15GrQuadPerEdgeAA30QuadPerEdgeAAGeometryProcessor16onTextureSamplerEi(%"class.GrQuadPerEdgeAA::QuadPerEdgeAAGeometryProcessor"*, i32) unnamed_addr #4 comdat align 2 {
  %3 = getelementptr inbounds %"class.GrQuadPerEdgeAA::QuadPerEdgeAAGeometryProcessor", %"class.GrQuadPerEdgeAA::QuadPerEdgeAAGeometryProcessor"* %0, i64 0, i32 11
  ret %"class.GrGeometryProcessor::TextureSampler"* %3
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN9GrSwizzleC2EPKc(%class.GrSwizzle*, i8*) unnamed_addr #4 comdat align 2 {
  %3 = getelementptr inbounds %class.GrSwizzle, %class.GrSwizzle* %0, i64 0, i32 0
  %4 = load i8, i8* %1, align 1
  %5 = sext i8 %4 to i32
  switch i32 %5, label %11 [
    i32 114, label %12
    i32 103, label %6
    i32 98, label %7
    i32 97, label %8
    i32 48, label %9
    i32 49, label %10
  ]

6:                                                ; preds = %2
  br label %12

7:                                                ; preds = %2
  br label %12

8:                                                ; preds = %2
  br label %12

9:                                                ; preds = %2
  br label %12

10:                                               ; preds = %2
  br label %12

11:                                               ; preds = %2
  tail call void @llvm.trap() #14
  unreachable

12:                                               ; preds = %2, %6, %7, %8, %9, %10
  %13 = phi i16 [ 5, %10 ], [ 4, %9 ], [ 3, %8 ], [ 2, %7 ], [ 1, %6 ], [ 0, %2 ]
  %14 = getelementptr inbounds i8, i8* %1, i64 1
  %15 = load i8, i8* %14, align 1
  %16 = sext i8 %15 to i32
  switch i32 %16, label %22 [
    i32 114, label %23
    i32 103, label %17
    i32 98, label %18
    i32 97, label %19
    i32 48, label %20
    i32 49, label %21
  ]

17:                                               ; preds = %12
  br label %23

18:                                               ; preds = %12
  br label %23

19:                                               ; preds = %12
  br label %23

20:                                               ; preds = %12
  br label %23

21:                                               ; preds = %12
  br label %23

22:                                               ; preds = %12
  tail call void @llvm.trap() #14
  unreachable

23:                                               ; preds = %12, %17, %18, %19, %20, %21
  %24 = phi i16 [ 80, %21 ], [ 64, %20 ], [ 48, %19 ], [ 32, %18 ], [ 16, %17 ], [ 0, %12 ]
  %25 = or i16 %24, %13
  %26 = getelementptr inbounds i8, i8* %1, i64 2
  %27 = load i8, i8* %26, align 1
  %28 = sext i8 %27 to i32
  switch i32 %28, label %34 [
    i32 114, label %35
    i32 103, label %29
    i32 98, label %30
    i32 97, label %31
    i32 48, label %32
    i32 49, label %33
  ]

29:                                               ; preds = %23
  br label %35

30:                                               ; preds = %23
  br label %35

31:                                               ; preds = %23
  br label %35

32:                                               ; preds = %23
  br label %35

33:                                               ; preds = %23
  br label %35

34:                                               ; preds = %23
  tail call void @llvm.trap() #14
  unreachable

35:                                               ; preds = %23, %29, %30, %31, %32, %33
  %36 = phi i16 [ 1280, %33 ], [ 1024, %32 ], [ 768, %31 ], [ 512, %30 ], [ 256, %29 ], [ 0, %23 ]
  %37 = or i16 %25, %36
  %38 = getelementptr inbounds i8, i8* %1, i64 3
  %39 = load i8, i8* %38, align 1
  %40 = sext i8 %39 to i32
  switch i32 %40, label %46 [
    i32 114, label %47
    i32 103, label %41
    i32 98, label %42
    i32 97, label %43
    i32 48, label %44
    i32 49, label %45
  ]

41:                                               ; preds = %35
  br label %47

42:                                               ; preds = %35
  br label %47

43:                                               ; preds = %35
  br label %47

44:                                               ; preds = %35
  br label %47

45:                                               ; preds = %35
  br label %47

46:                                               ; preds = %35
  tail call void @llvm.trap() #14
  unreachable

47:                                               ; preds = %35, %41, %42, %43, %44, %45
  %48 = phi i16 [ 20480, %45 ], [ 16384, %44 ], [ 12288, %43 ], [ 8192, %42 ], [ 4096, %41 ], [ 0, %35 ]
  %49 = or i16 %37, %48
  store i16 %49, i16* %3, align 2
  ret void
}

; Function Attrs: nounwind
declare void @_ZN11GrProcessordlEPv(i8*) local_unnamed_addr #11

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZN17GrColorSpaceXform8XformKeyEPKS_(%class.GrColorSpaceXform*) local_unnamed_addr #4 comdat align 2 {
  %2 = icmp eq %class.GrColorSpaceXform* %0, null
  br i1 %2, label %133, label %3

3:                                                ; preds = %1
  %4 = getelementptr inbounds %class.GrColorSpaceXform, %class.GrColorSpaceXform* %0, i64 0, i32 1, i32 0, i32 0
  %5 = load i8, i8* %4, align 1, !range !8
  %6 = zext i8 %5 to i32
  %7 = getelementptr inbounds %class.GrColorSpaceXform, %class.GrColorSpaceXform* %0, i64 0, i32 1, i32 0, i32 1
  %8 = load i8, i8* %7, align 1, !range !8
  %9 = icmp eq i8 %8, 0
  %10 = select i1 %9, i32 0, i32 2
  %11 = or i32 %10, %6
  %12 = getelementptr inbounds %class.GrColorSpaceXform, %class.GrColorSpaceXform* %0, i64 0, i32 1, i32 0, i32 2
  %13 = load i8, i8* %12, align 1, !range !8
  %14 = icmp eq i8 %13, 0
  %15 = select i1 %14, i32 0, i32 4
  %16 = or i32 %11, %15
  %17 = getelementptr inbounds %class.GrColorSpaceXform, %class.GrColorSpaceXform* %0, i64 0, i32 1, i32 0, i32 3
  %18 = load i8, i8* %17, align 1, !range !8
  %19 = icmp eq i8 %18, 0
  %20 = select i1 %19, i32 0, i32 8
  %21 = or i32 %16, %20
  %22 = getelementptr inbounds %class.GrColorSpaceXform, %class.GrColorSpaceXform* %0, i64 0, i32 1, i32 0, i32 4
  %23 = load i8, i8* %22, align 1, !range !8
  %24 = icmp eq i8 %23, 0
  %25 = select i1 %24, i32 0, i32 16
  %26 = or i32 %21, %25
  br i1 %9, label %79, label %27

27:                                               ; preds = %3
  %28 = getelementptr inbounds %class.GrColorSpaceXform, %class.GrColorSpaceXform* %0, i64 0, i32 1, i32 1, i32 0
  %29 = load float, float* %28, align 4
  %30 = fcmp olt float %29, 0.000000e+00
  br i1 %30, label %31, label %38

31:                                               ; preds = %27
  %32 = fptosi float %29 to i32
  %33 = sitofp i32 %32 to float
  %34 = fcmp oeq float %29, %33
  br i1 %34, label %35, label %38

35:                                               ; preds = %31
  %36 = add i32 %32, 4
  %37 = icmp ult i32 %36, 3
  br i1 %37, label %73, label %76

38:                                               ; preds = %31, %27
  %39 = getelementptr inbounds %class.GrColorSpaceXform, %class.GrColorSpaceXform* %0, i64 0, i32 1, i32 1, i32 1
  %40 = load float, float* %39, align 4
  %41 = getelementptr inbounds %class.GrColorSpaceXform, %class.GrColorSpaceXform* %0, i64 0, i32 1, i32 1, i32 2
  %42 = load float, float* %41, align 4
  %43 = fadd float %40, %42
  %44 = getelementptr inbounds %class.GrColorSpaceXform, %class.GrColorSpaceXform* %0, i64 0, i32 1, i32 1, i32 3
  %45 = load float, float* %44, align 4
  %46 = fadd float %43, %45
  %47 = getelementptr inbounds %class.GrColorSpaceXform, %class.GrColorSpaceXform* %0, i64 0, i32 1, i32 1, i32 4
  %48 = load float, float* %47, align 4
  %49 = fadd float %46, %48
  %50 = getelementptr inbounds %class.GrColorSpaceXform, %class.GrColorSpaceXform* %0, i64 0, i32 1, i32 1, i32 5
  %51 = load float, float* %50, align 4
  %52 = fadd float %49, %51
  %53 = getelementptr inbounds %class.GrColorSpaceXform, %class.GrColorSpaceXform* %0, i64 0, i32 1, i32 1, i32 6
  %54 = load float, float* %53, align 4
  %55 = fadd float %52, %54
  %56 = fadd float %29, %55
  %57 = bitcast float %56 to i32
  %58 = and i32 %57, 2139095040
  %59 = icmp eq i32 %58, 2139095040
  br i1 %59, label %72, label %60

60:                                               ; preds = %38
  %61 = fcmp ult float %40, 0.000000e+00
  %62 = fcmp ult float %45, 0.000000e+00
  %63 = or i1 %61, %62
  br i1 %63, label %72, label %64

64:                                               ; preds = %60
  %65 = fcmp ult float %48, 0.000000e+00
  %66 = fcmp ult float %29, 0.000000e+00
  %67 = or i1 %66, %65
  br i1 %67, label %72, label %68

68:                                               ; preds = %64
  %69 = fmul float %40, %48
  %70 = fadd float %42, %69
  %71 = fcmp ult float %70, 0.000000e+00
  br i1 %71, label %72, label %76

72:                                               ; preds = %68, %64, %60, %38
  br label %76

73:                                               ; preds = %35
  %74 = mul i32 %36, -256
  %75 = add i32 %74, 1024
  br label %76

76:                                               ; preds = %35, %73, %68, %72
  %77 = phi i32 [ 0, %72 ], [ 256, %68 ], [ %75, %73 ], [ 0, %35 ]
  %78 = or i32 %77, %26
  br label %79

79:                                               ; preds = %3, %76
  %80 = phi i32 [ %78, %76 ], [ %26, %3 ]
  br i1 %19, label %133, label %81

81:                                               ; preds = %79
  %82 = getelementptr inbounds %class.GrColorSpaceXform, %class.GrColorSpaceXform* %0, i64 0, i32 1, i32 2, i32 0
  %83 = load float, float* %82, align 4
  %84 = fcmp olt float %83, 0.000000e+00
  br i1 %84, label %85, label %92

85:                                               ; preds = %81
  %86 = fptosi float %83 to i32
  %87 = sitofp i32 %86 to float
  %88 = fcmp oeq float %83, %87
  br i1 %88, label %89, label %92

89:                                               ; preds = %85
  %90 = add i32 %86, 4
  %91 = icmp ult i32 %90, 3
  br i1 %91, label %127, label %130

92:                                               ; preds = %85, %81
  %93 = getelementptr inbounds %class.GrColorSpaceXform, %class.GrColorSpaceXform* %0, i64 0, i32 1, i32 2, i32 1
  %94 = load float, float* %93, align 4
  %95 = getelementptr inbounds %class.GrColorSpaceXform, %class.GrColorSpaceXform* %0, i64 0, i32 1, i32 2, i32 2
  %96 = load float, float* %95, align 4
  %97 = fadd float %94, %96
  %98 = getelementptr inbounds %class.GrColorSpaceXform, %class.GrColorSpaceXform* %0, i64 0, i32 1, i32 2, i32 3
  %99 = load float, float* %98, align 4
  %100 = fadd float %97, %99
  %101 = getelementptr inbounds %class.GrColorSpaceXform, %class.GrColorSpaceXform* %0, i64 0, i32 1, i32 2, i32 4
  %102 = load float, float* %101, align 4
  %103 = fadd float %100, %102
  %104 = getelementptr inbounds %class.GrColorSpaceXform, %class.GrColorSpaceXform* %0, i64 0, i32 1, i32 2, i32 5
  %105 = load float, float* %104, align 4
  %106 = fadd float %103, %105
  %107 = getelementptr inbounds %class.GrColorSpaceXform, %class.GrColorSpaceXform* %0, i64 0, i32 1, i32 2, i32 6
  %108 = load float, float* %107, align 4
  %109 = fadd float %106, %108
  %110 = fadd float %83, %109
  %111 = bitcast float %110 to i32
  %112 = and i32 %111, 2139095040
  %113 = icmp eq i32 %112, 2139095040
  br i1 %113, label %126, label %114

114:                                              ; preds = %92
  %115 = fcmp ult float %94, 0.000000e+00
  %116 = fcmp ult float %99, 0.000000e+00
  %117 = or i1 %115, %116
  br i1 %117, label %126, label %118

118:                                              ; preds = %114
  %119 = fcmp ult float %102, 0.000000e+00
  %120 = fcmp ult float %83, 0.000000e+00
  %121 = or i1 %120, %119
  br i1 %121, label %126, label %122

122:                                              ; preds = %118
  %123 = fmul float %94, %102
  %124 = fadd float %96, %123
  %125 = fcmp ult float %124, 0.000000e+00
  br i1 %125, label %126, label %130

126:                                              ; preds = %122, %118, %114, %92
  br label %130

127:                                              ; preds = %89
  %128 = mul i32 %90, -65536
  %129 = add i32 %128, 262144
  br label %130

130:                                              ; preds = %89, %127, %122, %126
  %131 = phi i32 [ 0, %126 ], [ 65536, %122 ], [ %129, %127 ], [ 0, %89 ]
  %132 = or i32 %131, %80
  br label %133

133:                                              ; preds = %130, %79, %1
  %134 = phi i32 [ 0, %1 ], [ %132, %130 ], [ %80, %79 ]
  ret i32 %134
}

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #12

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZZNK15GrQuadPerEdgeAA30QuadPerEdgeAAGeometryProcessor18createGLSLInstanceERK12GrShaderCapsEN13GLSLProcessorD0Ev(%class.GLSLProcessor*) unnamed_addr #10 comdat align 2 {
  %2 = getelementptr inbounds %class.GLSLProcessor, %class.GLSLProcessor* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [8 x i8*] }, { [8 x i8*] }* @_ZTV23GrGLSLGeometryProcessor, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %class.GLSLProcessor, %class.GLSLProcessor* %0, i64 0, i32 0, i32 1
  %4 = getelementptr inbounds %class.GLSLProcessor, %class.GLSLProcessor* %0, i64 0, i32 0, i32 1, i32 1
  %5 = load i64, i64* %4, align 8
  %6 = and i64 %5, 4294967294
  %7 = icmp eq i64 %6, 0
  br i1 %7, label %10, label %8

8:                                                ; preds = %1
  %9 = getelementptr inbounds %class.SkTArray.42, %class.SkTArray.42* %3, i64 0, i32 0
  br label %14

10:                                               ; preds = %14, %1
  %11 = phi i64 [ %5, %1 ], [ %24, %14 ]
  %12 = and i64 %11, 1
  %13 = icmp eq i64 %12, 0
  br i1 %13, label %31, label %28

14:                                               ; preds = %14, %8
  %15 = phi i64 [ 0, %8 ], [ %23, %14 ]
  %16 = load %"struct.GrGLSLGeometryProcessor::TransformInfo"*, %"struct.GrGLSLGeometryProcessor::TransformInfo"** %9, align 8
  %17 = getelementptr inbounds %"struct.GrGLSLGeometryProcessor::TransformInfo", %"struct.GrGLSLGeometryProcessor::TransformInfo"* %16, i64 %15, i32 1, i32 5
  tail call void @_ZN8SkStringD1Ev(%class.SkString* %17) #14
  %18 = getelementptr inbounds %"struct.GrGLSLGeometryProcessor::TransformInfo", %"struct.GrGLSLGeometryProcessor::TransformInfo"* %16, i64 %15, i32 1, i32 4
  tail call void @_ZN8SkStringD1Ev(%class.SkString* %18) #14
  %19 = getelementptr inbounds %"struct.GrGLSLGeometryProcessor::TransformInfo", %"struct.GrGLSLGeometryProcessor::TransformInfo"* %16, i64 %15, i32 1, i32 3
  tail call void @_ZN8SkStringD1Ev(%class.SkString* %19) #14
  %20 = getelementptr inbounds %"struct.GrGLSLGeometryProcessor::TransformInfo", %"struct.GrGLSLGeometryProcessor::TransformInfo"* %16, i64 %15, i32 0, i32 5
  tail call void @_ZN8SkStringD1Ev(%class.SkString* %20) #14
  %21 = getelementptr inbounds %"struct.GrGLSLGeometryProcessor::TransformInfo", %"struct.GrGLSLGeometryProcessor::TransformInfo"* %16, i64 %15, i32 0, i32 4
  tail call void @_ZN8SkStringD1Ev(%class.SkString* %21) #14
  %22 = getelementptr inbounds %"struct.GrGLSLGeometryProcessor::TransformInfo", %"struct.GrGLSLGeometryProcessor::TransformInfo"* %16, i64 %15, i32 0, i32 3
  tail call void @_ZN8SkStringD1Ev(%class.SkString* %22) #14
  %23 = add nuw nsw i64 %15, 1
  %24 = load i64, i64* %4, align 8
  %25 = lshr i64 %24, 1
  %26 = and i64 %25, 2147483647
  %27 = icmp ult i64 %23, %26
  br i1 %27, label %14, label %10

28:                                               ; preds = %10
  %29 = bitcast %class.SkTArray.42* %3 to i8**
  %30 = load i8*, i8** %29, align 8
  tail call void @_Z7sk_freePv(i8* %30) #14
  br label %31

31:                                               ; preds = %10, %28
  %32 = bitcast %class.GLSLProcessor* %0 to i8*
  tail call void @_ZdlPv(i8* %32) #16
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZZNK15GrQuadPerEdgeAA30QuadPerEdgeAAGeometryProcessor18createGLSLInstanceERK12GrShaderCapsEN13GLSLProcessor7setDataERK24GrGLSLProgramDataManagerS3_RK19GrGeometryProcessor(%class.GLSLProcessor*, %class.GrGLSLProgramDataManager* dereferenceable(8), %class.GrShaderCaps* dereferenceable(144), %class.GrGeometryProcessor* dereferenceable(80)) unnamed_addr #4 comdat align 2 {
  %5 = getelementptr inbounds %class.GrGeometryProcessor, %class.GrGeometryProcessor* %3, i64 2, i32 3
  %6 = bitcast %"class.GrGeometryProcessor::AttributeSet"* %5 to %class.GrColorSpaceXform**
  %7 = load %class.GrColorSpaceXform*, %class.GrColorSpaceXform** %6, align 8
  %8 = getelementptr inbounds %class.GLSLProcessor, %class.GLSLProcessor* %0, i64 0, i32 1, i32 3, i32 1
  %9 = load i8, i8* %8, align 1, !range !8
  %10 = icmp eq i8 %9, 0
  br i1 %10, label %19, label %11

11:                                               ; preds = %4
  %12 = getelementptr inbounds %class.GLSLProcessor, %class.GLSLProcessor* %0, i64 0, i32 1, i32 0, i32 0
  %13 = load i32, i32* %12, align 4
  %14 = getelementptr inbounds %class.GrColorSpaceXform, %class.GrColorSpaceXform* %7, i64 0, i32 1, i32 1, i32 0
  %15 = bitcast %class.GrGLSLProgramDataManager* %1 to void (%class.GrGLSLProgramDataManager*, i32, i32, float*)***
  %16 = load void (%class.GrGLSLProgramDataManager*, i32, i32, float*)**, void (%class.GrGLSLProgramDataManager*, i32, i32, float*)*** %15, align 8
  %17 = getelementptr inbounds void (%class.GrGLSLProgramDataManager*, i32, i32, float*)*, void (%class.GrGLSLProgramDataManager*, i32, i32, float*)** %16, i64 5
  %18 = load void (%class.GrGLSLProgramDataManager*, i32, i32, float*)*, void (%class.GrGLSLProgramDataManager*, i32, i32, float*)** %17, align 8
  tail call void %18(%class.GrGLSLProgramDataManager* %1, i32 %13, i32 7, float* %14) #14
  br label %19

19:                                               ; preds = %11, %4
  %20 = getelementptr inbounds %class.GLSLProcessor, %class.GLSLProcessor* %0, i64 0, i32 1, i32 3, i32 2
  %21 = load i8, i8* %20, align 2, !range !8
  %22 = icmp eq i8 %21, 0
  br i1 %22, label %31, label %23

23:                                               ; preds = %19
  %24 = getelementptr inbounds %class.GLSLProcessor, %class.GLSLProcessor* %0, i64 0, i32 1, i32 1, i32 0
  %25 = load i32, i32* %24, align 4
  %26 = getelementptr inbounds %class.GrColorSpaceXform, %class.GrColorSpaceXform* %7, i64 0, i32 1, i32 3, i64 0
  %27 = bitcast %class.GrGLSLProgramDataManager* %1 to void (%class.GrGLSLProgramDataManager*, i32, float*)***
  %28 = load void (%class.GrGLSLProgramDataManager*, i32, float*)**, void (%class.GrGLSLProgramDataManager*, i32, float*)*** %27, align 8
  %29 = getelementptr inbounds void (%class.GrGLSLProgramDataManager*, i32, float*)*, void (%class.GrGLSLProgramDataManager*, i32, float*)** %28, i64 19
  %30 = load void (%class.GrGLSLProgramDataManager*, i32, float*)*, void (%class.GrGLSLProgramDataManager*, i32, float*)** %29, align 8
  tail call void %30(%class.GrGLSLProgramDataManager* %1, i32 %25, float* %26) #14
  br label %31

31:                                               ; preds = %23, %19
  %32 = getelementptr inbounds %class.GLSLProcessor, %class.GLSLProcessor* %0, i64 0, i32 1, i32 3, i32 3
  %33 = load i8, i8* %32, align 1, !range !8
  %34 = icmp eq i8 %33, 0
  br i1 %34, label %43, label %35

35:                                               ; preds = %31
  %36 = getelementptr inbounds %class.GLSLProcessor, %class.GLSLProcessor* %0, i64 0, i32 1, i32 2, i32 0
  %37 = load i32, i32* %36, align 4
  %38 = getelementptr inbounds %class.GrColorSpaceXform, %class.GrColorSpaceXform* %7, i64 0, i32 1, i32 2, i32 0
  %39 = bitcast %class.GrGLSLProgramDataManager* %1 to void (%class.GrGLSLProgramDataManager*, i32, i32, float*)***
  %40 = load void (%class.GrGLSLProgramDataManager*, i32, i32, float*)**, void (%class.GrGLSLProgramDataManager*, i32, i32, float*)*** %39, align 8
  %41 = getelementptr inbounds void (%class.GrGLSLProgramDataManager*, i32, i32, float*)*, void (%class.GrGLSLProgramDataManager*, i32, i32, float*)** %40, i64 5
  %42 = load void (%class.GrGLSLProgramDataManager*, i32, i32, float*)*, void (%class.GrGLSLProgramDataManager*, i32, i32, float*)** %41, align 8
  tail call void %42(%class.GrGLSLProgramDataManager* %1, i32 %37, i32 7, float* %38) #14
  br label %43

43:                                               ; preds = %31, %35
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK23GrGLSLGeometryProcessor24getTessControlShaderGLSLERK19GrGeometryProcessorPKcRK20GrGLSLUniformHandlerRK12GrShaderCaps(%class.SkString* noalias sret, %class.GrGLSLGeometryProcessor*, %class.GrGeometryProcessor* dereferenceable(80), i8*, %class.GrGLSLUniformHandler* dereferenceable(16), %class.GrShaderCaps* dereferenceable(144)) unnamed_addr #4 comdat align 2 {
  tail call void (i8*, i32, i8*, ...) @_Z16SkAbort_FileLinePKciS0_z(i8* getelementptr inbounds ([62 x i8], [62 x i8]* @.str.29, i64 0, i64 0), i32 139, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.30, i64 0, i64 0)) #15
  unreachable
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK23GrGLSLGeometryProcessor27getTessEvaluationShaderGLSLERK19GrGeometryProcessorPKcRK20GrGLSLUniformHandlerRK12GrShaderCaps(%class.SkString* noalias sret, %class.GrGLSLGeometryProcessor*, %class.GrGeometryProcessor* dereferenceable(80), i8*, %class.GrGLSLUniformHandler* dereferenceable(16), %class.GrShaderCaps* dereferenceable(144)) unnamed_addr #4 comdat align 2 {
  tail call void (i8*, i32, i8*, ...) @_Z16SkAbort_FileLinePKciS0_z(i8* getelementptr inbounds ([62 x i8], [62 x i8]* @.str.29, i64 0, i64 0), i32 145, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.30, i64 0, i64 0)) #15
  unreachable
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZZNK15GrQuadPerEdgeAA30QuadPerEdgeAAGeometryProcessor18createGLSLInstanceERK12GrShaderCapsEN13GLSLProcessor10onEmitCodeERN23GrGLSLGeometryProcessor8EmitArgsEPNS5_8GrGPArgsE(%class.GLSLProcessor*, %"struct.GrGLSLGeometryProcessor::EmitArgs"* dereferenceable(88), %"struct.GrGLSLGeometryProcessor::GrGPArgs"*) unnamed_addr #4 comdat align 2 {
  %4 = alloca %class.SkString, align 8
  %5 = alloca %class.SkString, align 8
  %6 = alloca %class.SkString, align 8
  %7 = alloca %class.GrShaderVar, align 8
  %8 = alloca %class.GrShaderVar, align 8
  %9 = alloca %class.GrShaderVar, align 8
  %10 = alloca %class.GrGLSLVarying, align 8
  %11 = alloca %class.GrGLSLVarying, align 8
  %12 = getelementptr inbounds %"struct.GrGLSLGeometryProcessor::EmitArgs", %"struct.GrGLSLGeometryProcessor::EmitArgs"* %1, i64 0, i32 6
  %13 = bitcast %class.GrGeometryProcessor** %12 to %"class.GrQuadPerEdgeAA::QuadPerEdgeAAGeometryProcessor"**
  %14 = load %"class.GrQuadPerEdgeAA::QuadPerEdgeAAGeometryProcessor"*, %"class.GrQuadPerEdgeAA::QuadPerEdgeAAGeometryProcessor"** %13, align 8
  %15 = getelementptr inbounds %class.GLSLProcessor, %class.GLSLProcessor* %0, i64 0, i32 1
  %16 = getelementptr inbounds %"struct.GrGLSLGeometryProcessor::EmitArgs", %"struct.GrGLSLGeometryProcessor::EmitArgs"* %1, i64 0, i32 4
  %17 = load %class.GrGLSLUniformHandler*, %class.GrGLSLUniformHandler** %16, align 8
  %18 = getelementptr inbounds %"class.GrQuadPerEdgeAA::QuadPerEdgeAAGeometryProcessor", %"class.GrQuadPerEdgeAA::QuadPerEdgeAAGeometryProcessor"* %14, i64 0, i32 10, i32 0
  %19 = load %class.GrColorSpaceXform*, %class.GrColorSpaceXform** %18, align 8
  tail call void @_ZN27GrGLSLColorSpaceXformHelper8emitCodeEP20GrGLSLUniformHandlerPK17GrColorSpaceXformj(%class.GrGLSLColorSpaceXformHelper* %15, %class.GrGLSLUniformHandler* %17, %class.GrColorSpaceXform* %19, i32 16)
  %20 = getelementptr inbounds %"struct.GrGLSLGeometryProcessor::EmitArgs", %"struct.GrGLSLGeometryProcessor::EmitArgs"* %1, i64 0, i32 3
  %21 = load %class.GrGLSLVaryingHandler*, %class.GrGLSLVaryingHandler** %20, align 8
  %22 = bitcast %"class.GrQuadPerEdgeAA::QuadPerEdgeAAGeometryProcessor"* %14 to %class.GrGeometryProcessor*
  tail call void @_ZN20GrGLSLVaryingHandler14emitAttributesERK19GrGeometryProcessor(%class.GrGLSLVaryingHandler* %21, %class.GrGeometryProcessor* dereferenceable(80) %22) #14
  %23 = getelementptr inbounds %"class.GrQuadPerEdgeAA::QuadPerEdgeAAGeometryProcessor", %"class.GrQuadPerEdgeAA::QuadPerEdgeAAGeometryProcessor"* %14, i64 0, i32 9
  %24 = load i32, i32* %23, align 4
  %25 = icmp eq i32 %24, 1
  br i1 %25, label %26, label %46

26:                                               ; preds = %3
  %27 = getelementptr inbounds %"class.GrQuadPerEdgeAA::QuadPerEdgeAAGeometryProcessor", %"class.GrQuadPerEdgeAA::QuadPerEdgeAAGeometryProcessor"* %14, i64 0, i32 7
  %28 = load i8, i8* %27, align 8, !range !8
  %29 = icmp eq i8 %28, 0
  %30 = bitcast %"struct.GrGLSLGeometryProcessor::EmitArgs"* %1 to %class.GrGLSLShaderBuilder**
  %31 = load %class.GrGLSLShaderBuilder*, %class.GrGLSLShaderBuilder** %30, align 8
  %32 = getelementptr inbounds %"class.GrQuadPerEdgeAA::QuadPerEdgeAAGeometryProcessor", %"class.GrQuadPerEdgeAA::QuadPerEdgeAAGeometryProcessor"* %14, i64 0, i32 1, i32 0
  %33 = load i8*, i8** %32, align 8
  %34 = select i1 %29, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.32, i64 0, i64 0), i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.31, i64 0, i64 0)
  tail call void (%class.GrGLSLShaderBuilder*, i8*, ...) @_ZN19GrGLSLShaderBuilder11codeAppendfEPKcz(%class.GrGLSLShaderBuilder* %31, i8* %34, i8* %33)
  %35 = bitcast %class.GrShaderVar* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %35) #14
  %36 = load i8, i8* %27, align 8, !range !8
  %37 = icmp eq i8 %36, 0
  %38 = select i1 %37, i32 22, i32 23
  %39 = bitcast %class.SkString* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %39)
  call void @_ZN8SkStringC1EPKc(%class.SkString* nonnull %6, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.4, i64 0, i64 0)) #14
  %40 = getelementptr inbounds %class.GrShaderVar, %class.GrShaderVar* %7, i64 0, i32 0
  store i32 %38, i32* %40, align 8
  %41 = getelementptr inbounds %class.GrShaderVar, %class.GrShaderVar* %7, i64 0, i32 1
  store i32 0, i32* %41, align 4
  %42 = getelementptr inbounds %class.GrShaderVar, %class.GrShaderVar* %7, i64 0, i32 2
  store i32 0, i32* %42, align 8
  %43 = getelementptr inbounds %class.GrShaderVar, %class.GrShaderVar* %7, i64 0, i32 3
  call void @_ZN8SkStringC1EOS_(%class.SkString* %43, %class.SkString* nonnull dereferenceable(8) %6) #14
  %44 = getelementptr inbounds %class.GrShaderVar, %class.GrShaderVar* %7, i64 0, i32 4
  call void @_ZN8SkStringC1Ev(%class.SkString* %44) #14
  %45 = getelementptr inbounds %class.GrShaderVar, %class.GrShaderVar* %7, i64 0, i32 5
  call void @_ZN8SkStringC1Ev(%class.SkString* %45) #14
  call void @_ZN8SkStringD1Ev(%class.SkString* nonnull %6) #14
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %39)
  br label %59

46:                                               ; preds = %3
  %47 = bitcast %class.GrShaderVar* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %47) #14
  %48 = getelementptr inbounds %"class.GrQuadPerEdgeAA::QuadPerEdgeAAGeometryProcessor", %"class.GrQuadPerEdgeAA::QuadPerEdgeAAGeometryProcessor"* %14, i64 0, i32 1, i32 0
  %49 = load i8*, i8** %48, align 8, !noalias !9
  %50 = getelementptr inbounds %"class.GrQuadPerEdgeAA::QuadPerEdgeAAGeometryProcessor", %"class.GrQuadPerEdgeAA::QuadPerEdgeAAGeometryProcessor"* %14, i64 0, i32 1, i32 2
  %51 = load i32, i32* %50, align 4, !noalias !9
  %52 = bitcast %class.SkString* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %52) #14, !noalias !9
  call void @_ZN8SkStringC1EPKc(%class.SkString* nonnull %5, i8* %49) #14, !noalias !9
  %53 = getelementptr inbounds %class.GrShaderVar, %class.GrShaderVar* %8, i64 0, i32 0
  store i32 %51, i32* %53, align 8, !alias.scope !9
  %54 = getelementptr inbounds %class.GrShaderVar, %class.GrShaderVar* %8, i64 0, i32 1
  store i32 2, i32* %54, align 4, !alias.scope !9
  %55 = getelementptr inbounds %class.GrShaderVar, %class.GrShaderVar* %8, i64 0, i32 2
  store i32 0, i32* %55, align 8, !alias.scope !9
  %56 = getelementptr inbounds %class.GrShaderVar, %class.GrShaderVar* %8, i64 0, i32 3
  call void @_ZN8SkStringC1EOS_(%class.SkString* %56, %class.SkString* nonnull dereferenceable(8) %5) #14
  %57 = getelementptr inbounds %class.GrShaderVar, %class.GrShaderVar* %8, i64 0, i32 4
  call void @_ZN8SkStringC1Ev(%class.SkString* %57) #14
  %58 = getelementptr inbounds %class.GrShaderVar, %class.GrShaderVar* %8, i64 0, i32 5
  call void @_ZN8SkStringC1Ev(%class.SkString* %58) #14
  call void @_ZN8SkStringD1Ev(%class.SkString* nonnull %5) #14
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %52) #14, !noalias !9
  br label %59

59:                                               ; preds = %46, %26
  %60 = phi i8* [ %47, %46 ], [ %35, %26 ]
  %61 = phi %class.SkString* [ %56, %46 ], [ %43, %26 ]
  %62 = phi %class.SkString* [ %57, %46 ], [ %44, %26 ]
  %63 = phi %class.SkString* [ %58, %46 ], [ %45, %26 ]
  %64 = bitcast %"struct.GrGLSLGeometryProcessor::GrGPArgs"* %2 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %64, i8* nonnull align 8 %60, i64 12, i1 false) #14
  %65 = getelementptr inbounds %"struct.GrGLSLGeometryProcessor::GrGPArgs", %"struct.GrGLSLGeometryProcessor::GrGPArgs"* %2, i64 0, i32 0, i32 3
  %66 = call dereferenceable(8) %class.SkString* @_ZN8SkStringaSEOS_(%class.SkString* %65, %class.SkString* dereferenceable(8) %61) #14
  %67 = getelementptr inbounds %"struct.GrGLSLGeometryProcessor::GrGPArgs", %"struct.GrGLSLGeometryProcessor::GrGPArgs"* %2, i64 0, i32 0, i32 4
  %68 = call dereferenceable(8) %class.SkString* @_ZN8SkStringaSEOS_(%class.SkString* %67, %class.SkString* dereferenceable(8) %62) #14
  %69 = getelementptr inbounds %"struct.GrGLSLGeometryProcessor::GrGPArgs", %"struct.GrGLSLGeometryProcessor::GrGPArgs"* %2, i64 0, i32 0, i32 5
  %70 = call dereferenceable(8) %class.SkString* @_ZN8SkStringaSEOS_(%class.SkString* %69, %class.SkString* dereferenceable(8) %63) #14
  call void @_ZN8SkStringD1Ev(%class.SkString* %63) #14
  call void @_ZN8SkStringD1Ev(%class.SkString* %62) #14
  call void @_ZN8SkStringD1Ev(%class.SkString* %61) #14
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %60) #14
  %71 = bitcast %class.GrShaderVar* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %71) #14
  %72 = getelementptr inbounds %"class.GrQuadPerEdgeAA::QuadPerEdgeAAGeometryProcessor", %"class.GrQuadPerEdgeAA::QuadPerEdgeAAGeometryProcessor"* %14, i64 0, i32 4
  %73 = getelementptr inbounds %"class.GrGeometryProcessor::Attribute", %"class.GrGeometryProcessor::Attribute"* %72, i64 0, i32 0
  %74 = load i8*, i8** %73, align 8, !noalias !12
  %75 = getelementptr inbounds %"class.GrQuadPerEdgeAA::QuadPerEdgeAAGeometryProcessor", %"class.GrQuadPerEdgeAA::QuadPerEdgeAAGeometryProcessor"* %14, i64 0, i32 4, i32 2
  %76 = load i32, i32* %75, align 4, !noalias !12
  %77 = bitcast %class.SkString* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %77) #14, !noalias !12
  call void @_ZN8SkStringC1EPKc(%class.SkString* nonnull %4, i8* %74) #14, !noalias !12
  %78 = getelementptr inbounds %class.GrShaderVar, %class.GrShaderVar* %9, i64 0, i32 0
  store i32 %76, i32* %78, align 8, !alias.scope !12
  %79 = getelementptr inbounds %class.GrShaderVar, %class.GrShaderVar* %9, i64 0, i32 1
  store i32 2, i32* %79, align 4, !alias.scope !12
  %80 = getelementptr inbounds %class.GrShaderVar, %class.GrShaderVar* %9, i64 0, i32 2
  store i32 0, i32* %80, align 8, !alias.scope !12
  %81 = getelementptr inbounds %class.GrShaderVar, %class.GrShaderVar* %9, i64 0, i32 3
  call void @_ZN8SkStringC1EOS_(%class.SkString* %81, %class.SkString* nonnull dereferenceable(8) %4) #14
  %82 = getelementptr inbounds %class.GrShaderVar, %class.GrShaderVar* %9, i64 0, i32 4
  call void @_ZN8SkStringC1Ev(%class.SkString* %82) #14
  %83 = getelementptr inbounds %class.GrShaderVar, %class.GrShaderVar* %9, i64 0, i32 5
  call void @_ZN8SkStringC1Ev(%class.SkString* %83) #14
  call void @_ZN8SkStringD1Ev(%class.SkString* nonnull %4) #14
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %77) #14, !noalias !12
  %84 = getelementptr inbounds %"struct.GrGLSLGeometryProcessor::GrGPArgs", %"struct.GrGLSLGeometryProcessor::GrGPArgs"* %2, i64 0, i32 1
  %85 = bitcast %class.GrShaderVar* %84 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %85, i8* nonnull align 8 %71, i64 12, i1 false) #14
  %86 = getelementptr inbounds %"struct.GrGLSLGeometryProcessor::GrGPArgs", %"struct.GrGLSLGeometryProcessor::GrGPArgs"* %2, i64 0, i32 1, i32 3
  %87 = call dereferenceable(8) %class.SkString* @_ZN8SkStringaSEOS_(%class.SkString* %86, %class.SkString* dereferenceable(8) %81) #14
  %88 = getelementptr inbounds %"struct.GrGLSLGeometryProcessor::GrGPArgs", %"struct.GrGLSLGeometryProcessor::GrGPArgs"* %2, i64 0, i32 1, i32 4
  %89 = call dereferenceable(8) %class.SkString* @_ZN8SkStringaSEOS_(%class.SkString* %88, %class.SkString* dereferenceable(8) %82) #14
  %90 = getelementptr inbounds %"struct.GrGLSLGeometryProcessor::GrGPArgs", %"struct.GrGLSLGeometryProcessor::GrGPArgs"* %2, i64 0, i32 1, i32 5
  %91 = call dereferenceable(8) %class.SkString* @_ZN8SkStringaSEOS_(%class.SkString* %90, %class.SkString* dereferenceable(8) %83) #14
  call void @_ZN8SkStringD1Ev(%class.SkString* %83) #14
  call void @_ZN8SkStringD1Ev(%class.SkString* %82) #14
  call void @_ZN8SkStringD1Ev(%class.SkString* %81) #14
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %71) #14
  %92 = getelementptr inbounds %"class.GrQuadPerEdgeAA::QuadPerEdgeAAGeometryProcessor", %"class.GrQuadPerEdgeAA::QuadPerEdgeAAGeometryProcessor"* %14, i64 0, i32 3, i32 2
  %93 = load i32, i32* %92, align 4
  %94 = icmp eq i32 %93, 0
  %95 = getelementptr inbounds %"struct.GrGLSLGeometryProcessor::EmitArgs", %"struct.GrGLSLGeometryProcessor::EmitArgs"* %1, i64 0, i32 2
  %96 = load %class.GrGLSLFPFragmentBuilder*, %class.GrGLSLFPFragmentBuilder** %95, align 8
  %97 = bitcast %class.GrGLSLFPFragmentBuilder* %96 to i8**
  %98 = load i8*, i8** %97, align 8
  %99 = getelementptr i8, i8* %98, i64 -24
  %100 = bitcast i8* %99 to i64*
  %101 = load i64, i64* %100, align 8
  %102 = bitcast %class.GrGLSLFPFragmentBuilder* %96 to i8*
  %103 = getelementptr inbounds i8, i8* %102, i64 %101
  %104 = bitcast i8* %103 to %class.GrGLSLShaderBuilder*
  %105 = getelementptr inbounds %"struct.GrGLSLGeometryProcessor::EmitArgs", %"struct.GrGLSLGeometryProcessor::EmitArgs"* %1, i64 0, i32 7
  %106 = load i8*, i8** %105, align 8
  br i1 %94, label %115, label %107

107:                                              ; preds = %59
  %108 = getelementptr inbounds %"class.GrQuadPerEdgeAA::QuadPerEdgeAAGeometryProcessor", %"class.GrQuadPerEdgeAA::QuadPerEdgeAAGeometryProcessor"* %14, i64 0, i32 3
  call void (%class.GrGLSLShaderBuilder*, i8*, ...) @_ZN19GrGLSLShaderBuilder11codeAppendfEPKcz(%class.GrGLSLShaderBuilder* %104, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.33, i64 0, i64 0), i8* %106)
  %109 = load %class.GrGLSLVaryingHandler*, %class.GrGLSLVaryingHandler** %20, align 8
  %110 = load i8*, i8** %105, align 8
  %111 = load i32, i32* %23, align 4
  %112 = icmp ne i32 %111, 2
  %113 = zext i1 %112 to i32
  call void @_ZN20GrGLSLVaryingHandler23addPassThroughAttributeERKN19GrGeometryProcessor9AttributeEPKcNS_13InterpolationE(%class.GrGLSLVaryingHandler* %109, %"class.GrGeometryProcessor::Attribute"* dereferenceable(16) %108, i8* %110, i32 %113) #14
  %114 = load i8*, i8** %105, align 8
  br label %116

115:                                              ; preds = %59
  call void (%class.GrGLSLShaderBuilder*, i8*, ...) @_ZN19GrGLSLShaderBuilder11codeAppendfEPKcz(%class.GrGLSLShaderBuilder* %104, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.34, i64 0, i64 0), i8* %106)
  br label %116

116:                                              ; preds = %115, %107
  %117 = phi i8* [ %114, %107 ], [ null, %115 ]
  %118 = getelementptr inbounds %"class.GrQuadPerEdgeAA::QuadPerEdgeAAGeometryProcessor", %"class.GrQuadPerEdgeAA::QuadPerEdgeAAGeometryProcessor"* %14, i64 0, i32 11, i32 4
  %119 = load i8, i8* %118, align 2, !range !8
  %120 = icmp eq i8 %119, 0
  br i1 %120, label %250, label %121

121:                                              ; preds = %116
  %122 = load %class.GrGLSLFPFragmentBuilder*, %class.GrGLSLFPFragmentBuilder** %95, align 8
  %123 = bitcast %class.GrGLSLFPFragmentBuilder* %122 to i8**
  %124 = load i8*, i8** %123, align 8
  %125 = getelementptr i8, i8* %124, i64 -24
  %126 = bitcast i8* %125 to i64*
  %127 = load i64, i64* %126, align 8
  %128 = bitcast %class.GrGLSLFPFragmentBuilder* %122 to i8*
  %129 = getelementptr inbounds i8, i8* %128, i64 %127
  %130 = getelementptr inbounds i8, i8* %129, i64 160
  %131 = getelementptr inbounds i8, i8* %129, i64 488
  %132 = bitcast i8* %131 to i32*
  %133 = load i32, i32* %132, align 8
  %134 = bitcast i8* %130 to %class.SkString**
  %135 = load %class.SkString*, %class.SkString** %134, align 8
  %136 = sext i32 %133 to i64
  %137 = getelementptr inbounds %class.SkString, %class.SkString* %135, i64 %136
  call void @_ZN8SkString6insertEmPKc(%class.SkString* %137, i64 -1, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.35, i64 0, i64 0)) #14
  %138 = getelementptr inbounds %"class.GrQuadPerEdgeAA::QuadPerEdgeAAGeometryProcessor", %"class.GrQuadPerEdgeAA::QuadPerEdgeAAGeometryProcessor"* %14, i64 0, i32 4, i32 1
  %139 = load i32, i32* %138, align 8
  %140 = icmp eq i32 %139, 2
  br i1 %140, label %141, label %165

141:                                              ; preds = %121
  %142 = bitcast %class.GrGLSLVarying* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %142) #14
  %143 = getelementptr inbounds %class.GrGLSLVarying, %class.GrGLSLVarying* %10, i64 0, i32 0
  %144 = getelementptr inbounds %class.GrGLSLVarying, %class.GrGLSLVarying* %10, i64 0, i32 1
  %145 = getelementptr inbounds %class.GrGLSLVarying, %class.GrGLSLVarying* %10, i64 0, i32 2
  %146 = getelementptr inbounds %class.GrGLSLVarying, %class.GrGLSLVarying* %10, i64 0, i32 5
  %147 = load i32, i32* %75, align 4
  store i32 %147, i32* %143, align 8
  %148 = bitcast i32* %144 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %148, i8 0, i64 36, i1 false)
  %149 = load %class.GrGLSLVaryingHandler*, %class.GrGLSLVaryingHandler** %20, align 8
  %150 = load i8*, i8** %73, align 8
  call void @_ZN20GrGLSLVaryingHandler10addVaryingEPKcP13GrGLSLVaryingNS_13InterpolationE(%class.GrGLSLVaryingHandler* %149, i8* %150, %class.GrGLSLVarying* nonnull %10, i32 0) #14
  %151 = bitcast %"struct.GrGLSLGeometryProcessor::EmitArgs"* %1 to %class.GrGLSLShaderBuilder**
  %152 = load %class.GrGLSLShaderBuilder*, %class.GrGLSLShaderBuilder** %151, align 8
  %153 = load i8*, i8** %145, align 8
  %154 = load i8*, i8** %73, align 8
  call void (%class.GrGLSLShaderBuilder*, i8*, ...) @_ZN19GrGLSLShaderBuilder11codeAppendfEPKcz(%class.GrGLSLShaderBuilder* %152, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.36, i64 0, i64 0), i8* %153, i8* %154)
  %155 = load %class.GrGLSLFPFragmentBuilder*, %class.GrGLSLFPFragmentBuilder** %95, align 8
  %156 = bitcast %class.GrGLSLFPFragmentBuilder* %155 to i8**
  %157 = load i8*, i8** %156, align 8
  %158 = getelementptr i8, i8* %157, i64 -24
  %159 = bitcast i8* %158 to i64*
  %160 = load i64, i64* %159, align 8
  %161 = bitcast %class.GrGLSLFPFragmentBuilder* %155 to i8*
  %162 = getelementptr inbounds i8, i8* %161, i64 %160
  %163 = bitcast i8* %162 to %class.GrGLSLShaderBuilder*
  %164 = load i8*, i8** %146, align 8
  call void (%class.GrGLSLShaderBuilder*, i8*, ...) @_ZN19GrGLSLShaderBuilder11codeAppendfEPKcz(%class.GrGLSLShaderBuilder* %163, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.37, i64 0, i64 0), i8* %164, i8* %164)
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %142) #14
  br label %167

165:                                              ; preds = %121
  %166 = load %class.GrGLSLVaryingHandler*, %class.GrGLSLVaryingHandler** %20, align 8
  call void @_ZN20GrGLSLVaryingHandler23addPassThroughAttributeERKN19GrGeometryProcessor9AttributeEPKcNS_13InterpolationE(%class.GrGLSLVaryingHandler* %166, %"class.GrGeometryProcessor::Attribute"* dereferenceable(16) %72, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.38, i64 0, i64 0), i32 0) #14
  br label %167

167:                                              ; preds = %165, %141
  %168 = getelementptr inbounds %"class.GrQuadPerEdgeAA::QuadPerEdgeAAGeometryProcessor", %"class.GrQuadPerEdgeAA::QuadPerEdgeAAGeometryProcessor"* %14, i64 0, i32 6, i32 2
  %169 = load i32, i32* %168, align 4
  %170 = icmp eq i32 %169, 0
  br i1 %170, label %206, label %171

171:                                              ; preds = %167
  %172 = getelementptr inbounds %"class.GrQuadPerEdgeAA::QuadPerEdgeAAGeometryProcessor", %"class.GrQuadPerEdgeAA::QuadPerEdgeAAGeometryProcessor"* %14, i64 0, i32 6
  %173 = load %class.GrGLSLFPFragmentBuilder*, %class.GrGLSLFPFragmentBuilder** %95, align 8
  %174 = bitcast %class.GrGLSLFPFragmentBuilder* %173 to i8**
  %175 = load i8*, i8** %174, align 8
  %176 = getelementptr i8, i8* %175, i64 -24
  %177 = bitcast i8* %176 to i64*
  %178 = load i64, i64* %177, align 8
  %179 = bitcast %class.GrGLSLFPFragmentBuilder* %173 to i8*
  %180 = getelementptr inbounds i8, i8* %179, i64 %178
  %181 = getelementptr inbounds i8, i8* %180, i64 160
  %182 = getelementptr inbounds i8, i8* %180, i64 488
  %183 = bitcast i8* %182 to i32*
  %184 = load i32, i32* %183, align 8
  %185 = bitcast i8* %181 to %class.SkString**
  %186 = load %class.SkString*, %class.SkString** %185, align 8
  %187 = sext i32 %184 to i64
  %188 = getelementptr inbounds %class.SkString, %class.SkString* %186, i64 %187
  call void @_ZN8SkString6insertEmPKc(%class.SkString* %188, i64 -1, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.39, i64 0, i64 0)) #14
  %189 = load %class.GrGLSLVaryingHandler*, %class.GrGLSLVaryingHandler** %20, align 8
  call void @_ZN20GrGLSLVaryingHandler23addPassThroughAttributeERKN19GrGeometryProcessor9AttributeEPKcNS_13InterpolationE(%class.GrGLSLVaryingHandler* %189, %"class.GrGeometryProcessor::Attribute"* dereferenceable(16) %172, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.19, i64 0, i64 0), i32 1) #14
  %190 = load %class.GrGLSLFPFragmentBuilder*, %class.GrGLSLFPFragmentBuilder** %95, align 8
  %191 = bitcast %class.GrGLSLFPFragmentBuilder* %190 to i8**
  %192 = load i8*, i8** %191, align 8
  %193 = getelementptr i8, i8* %192, i64 -24
  %194 = bitcast i8* %193 to i64*
  %195 = load i64, i64* %194, align 8
  %196 = bitcast %class.GrGLSLFPFragmentBuilder* %190 to i8*
  %197 = getelementptr inbounds i8, i8* %196, i64 %195
  %198 = getelementptr inbounds i8, i8* %197, i64 160
  %199 = getelementptr inbounds i8, i8* %197, i64 488
  %200 = bitcast i8* %199 to i32*
  %201 = load i32, i32* %200, align 8
  %202 = bitcast i8* %198 to %class.SkString**
  %203 = load %class.SkString*, %class.SkString** %202, align 8
  %204 = sext i32 %201 to i64
  %205 = getelementptr inbounds %class.SkString, %class.SkString* %203, i64 %204
  call void @_ZN8SkString6insertEmPKc(%class.SkString* %205, i64 -1, i8* getelementptr inbounds ([50 x i8], [50 x i8]* @.str.40, i64 0, i64 0)) #14
  br label %206

206:                                              ; preds = %167, %171
  %207 = load %class.GrGLSLFPFragmentBuilder*, %class.GrGLSLFPFragmentBuilder** %95, align 8
  %208 = bitcast %class.GrGLSLFPFragmentBuilder* %207 to i8**
  %209 = load i8*, i8** %208, align 8
  %210 = getelementptr i8, i8* %209, i64 -24
  %211 = bitcast i8* %210 to i64*
  %212 = load i64, i64* %211, align 8
  %213 = bitcast %class.GrGLSLFPFragmentBuilder* %207 to i8*
  %214 = getelementptr inbounds i8, i8* %213, i64 %212
  %215 = bitcast i8* %214 to %class.GrGLSLShaderBuilder*
  %216 = load i8*, i8** %105, align 8
  %217 = getelementptr inbounds %"class.GrQuadPerEdgeAA::QuadPerEdgeAAGeometryProcessor", %"class.GrQuadPerEdgeAA::QuadPerEdgeAAGeometryProcessor"* %14, i64 0, i32 8
  %218 = load i8, i8* %217, align 1, !range !8
  %219 = icmp eq i8 %218, 0
  %220 = select i1 %219, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.42, i64 0, i64 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.22, i64 0, i64 0)
  call void (%class.GrGLSLShaderBuilder*, i8*, ...) @_ZN19GrGLSLShaderBuilder11codeAppendfEPKcz(%class.GrGLSLShaderBuilder* %215, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.41, i64 0, i64 0), i8* %216, i8* %220)
  %221 = load %class.GrGLSLFPFragmentBuilder*, %class.GrGLSLFPFragmentBuilder** %95, align 8
  %222 = bitcast %class.GrGLSLFPFragmentBuilder* %221 to i8**
  %223 = load i8*, i8** %222, align 8
  %224 = getelementptr i8, i8* %223, i64 -24
  %225 = bitcast i8* %224 to i64*
  %226 = load i64, i64* %225, align 8
  %227 = bitcast %class.GrGLSLFPFragmentBuilder* %221 to i8*
  %228 = getelementptr inbounds i8, i8* %227, i64 %226
  %229 = bitcast i8* %228 to %class.GrGLSLShaderBuilder*
  %230 = getelementptr inbounds %"struct.GrGLSLGeometryProcessor::EmitArgs", %"struct.GrGLSLGeometryProcessor::EmitArgs"* %1, i64 0, i32 9
  %231 = load %class.GrResourceHandle.72*, %class.GrResourceHandle.72** %230, align 8
  %232 = getelementptr inbounds %class.GrResourceHandle.72, %class.GrResourceHandle.72* %231, i64 0, i32 0
  %233 = load i32, i32* %232, align 4
  call void @_ZN19GrGLSLShaderBuilder27appendTextureLookupAndBlendEPKc11SkBlendMode16GrResourceHandleIN20GrGLSLUniformHandler17SamplerHandleKindEES1_P27GrGLSLColorSpaceXformHelper(%class.GrGLSLShaderBuilder* %229, i8* %117, i32 13, i32 %233, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.38, i64 0, i64 0), %class.GrGLSLColorSpaceXformHelper* %15) #14
  %234 = load %class.GrGLSLFPFragmentBuilder*, %class.GrGLSLFPFragmentBuilder** %95, align 8
  %235 = bitcast %class.GrGLSLFPFragmentBuilder* %234 to i8**
  %236 = load i8*, i8** %235, align 8
  %237 = getelementptr i8, i8* %236, i64 -24
  %238 = bitcast i8* %237 to i64*
  %239 = load i64, i64* %238, align 8
  %240 = bitcast %class.GrGLSLFPFragmentBuilder* %234 to i8*
  %241 = getelementptr inbounds i8, i8* %240, i64 %239
  %242 = getelementptr inbounds i8, i8* %241, i64 160
  %243 = getelementptr inbounds i8, i8* %241, i64 488
  %244 = bitcast i8* %243 to i32*
  %245 = load i32, i32* %244, align 8
  %246 = bitcast i8* %242 to %class.SkString**
  %247 = load %class.SkString*, %class.SkString** %246, align 8
  %248 = sext i32 %245 to i64
  %249 = getelementptr inbounds %class.SkString, %class.SkString* %247, i64 %248
  call void @_ZN8SkString6insertEmPKc(%class.SkString* %249, i64 -1, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.43, i64 0, i64 0)) #14
  br label %250

250:                                              ; preds = %116, %206
  %251 = load i32, i32* %23, align 4
  %252 = icmp eq i32 %251, 1
  br i1 %252, label %253, label %335

253:                                              ; preds = %250
  %254 = bitcast %class.GrGLSLVarying* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %254) #14
  %255 = getelementptr inbounds %class.GrGLSLVarying, %class.GrGLSLVarying* %11, i64 0, i32 0
  %256 = getelementptr inbounds %class.GrGLSLVarying, %class.GrGLSLVarying* %11, i64 0, i32 1
  %257 = getelementptr inbounds %class.GrGLSLVarying, %class.GrGLSLVarying* %11, i64 0, i32 2
  %258 = getelementptr inbounds %class.GrGLSLVarying, %class.GrGLSLVarying* %11, i64 0, i32 5
  store i32 21, i32* %255, align 8
  %259 = bitcast i32* %256 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %259, i8 0, i64 36, i1 false)
  %260 = load %class.GrGLSLVaryingHandler*, %class.GrGLSLVaryingHandler** %20, align 8
  call void @_ZN20GrGLSLVaryingHandler10addVaryingEPKcP13GrGLSLVaryingNS_13InterpolationE(%class.GrGLSLVaryingHandler* %260, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.6, i64 0, i64 0), %class.GrGLSLVarying* nonnull %11, i32 0) #14
  %261 = getelementptr inbounds %"class.GrQuadPerEdgeAA::QuadPerEdgeAAGeometryProcessor", %"class.GrQuadPerEdgeAA::QuadPerEdgeAAGeometryProcessor"* %14, i64 0, i32 7
  %262 = load i8, i8* %261, align 8, !range !8
  %263 = icmp eq i8 %262, 0
  %264 = bitcast %"struct.GrGLSLGeometryProcessor::EmitArgs"* %1 to %class.GrGLSLShaderBuilder**
  %265 = load %class.GrGLSLShaderBuilder*, %class.GrGLSLShaderBuilder** %264, align 8
  %266 = load i8*, i8** %257, align 8
  br i1 %263, label %270, label %267

267:                                              ; preds = %253
  %268 = getelementptr inbounds %"class.GrQuadPerEdgeAA::QuadPerEdgeAAGeometryProcessor", %"class.GrQuadPerEdgeAA::QuadPerEdgeAAGeometryProcessor"* %14, i64 0, i32 1, i32 0
  %269 = load i8*, i8** %268, align 8
  call void (%class.GrGLSLShaderBuilder*, i8*, ...) @_ZN19GrGLSLShaderBuilder11codeAppendfEPKcz(%class.GrGLSLShaderBuilder* %265, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.44, i64 0, i64 0), i8* %266, i8* %269, i8* %269)
  br label %273

270:                                              ; preds = %253
  %271 = getelementptr inbounds %"class.GrQuadPerEdgeAA::QuadPerEdgeAAGeometryProcessor", %"class.GrQuadPerEdgeAA::QuadPerEdgeAAGeometryProcessor"* %14, i64 0, i32 2, i32 0
  %272 = load i8*, i8** %271, align 8
  call void (%class.GrGLSLShaderBuilder*, i8*, ...) @_ZN19GrGLSLShaderBuilder11codeAppendfEPKcz(%class.GrGLSLShaderBuilder* %265, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.36, i64 0, i64 0), i8* %266, i8* %272)
  br label %273

273:                                              ; preds = %270, %267
  %274 = phi i8* [ getelementptr inbounds ([21 x i8], [21 x i8]* @.str.46, i64 0, i64 0), %270 ], [ getelementptr inbounds ([38 x i8], [38 x i8]* @.str.45, i64 0, i64 0), %267 ]
  %275 = load %class.GrGLSLFPFragmentBuilder*, %class.GrGLSLFPFragmentBuilder** %95, align 8
  %276 = bitcast %class.GrGLSLFPFragmentBuilder* %275 to i8**
  %277 = load i8*, i8** %276, align 8
  %278 = getelementptr i8, i8* %277, i64 -24
  %279 = bitcast i8* %278 to i64*
  %280 = load i64, i64* %279, align 8
  %281 = bitcast %class.GrGLSLFPFragmentBuilder* %275 to i8*
  %282 = getelementptr inbounds i8, i8* %281, i64 %280
  %283 = bitcast i8* %282 to %class.GrGLSLShaderBuilder*
  %284 = load i8*, i8** %258, align 8
  call void (%class.GrGLSLShaderBuilder*, i8*, ...) @_ZN19GrGLSLShaderBuilder11codeAppendfEPKcz(%class.GrGLSLShaderBuilder* %283, i8* %274, i8* %284)
  %285 = getelementptr inbounds %"class.GrQuadPerEdgeAA::QuadPerEdgeAAGeometryProcessor", %"class.GrQuadPerEdgeAA::QuadPerEdgeAAGeometryProcessor"* %14, i64 0, i32 5, i32 2
  %286 = load i32, i32* %285, align 4
  %287 = icmp eq i32 %286, 0
  br i1 %287, label %323, label %288

288:                                              ; preds = %273
  %289 = getelementptr inbounds %"class.GrQuadPerEdgeAA::QuadPerEdgeAAGeometryProcessor", %"class.GrQuadPerEdgeAA::QuadPerEdgeAAGeometryProcessor"* %14, i64 0, i32 5
  %290 = load %class.GrGLSLFPFragmentBuilder*, %class.GrGLSLFPFragmentBuilder** %95, align 8
  %291 = bitcast %class.GrGLSLFPFragmentBuilder* %290 to i8**
  %292 = load i8*, i8** %291, align 8
  %293 = getelementptr i8, i8* %292, i64 -24
  %294 = bitcast i8* %293 to i64*
  %295 = load i64, i64* %294, align 8
  %296 = bitcast %class.GrGLSLFPFragmentBuilder* %290 to i8*
  %297 = getelementptr inbounds i8, i8* %296, i64 %295
  %298 = getelementptr inbounds i8, i8* %297, i64 160
  %299 = getelementptr inbounds i8, i8* %297, i64 488
  %300 = bitcast i8* %299 to i32*
  %301 = load i32, i32* %300, align 8
  %302 = bitcast i8* %298 to %class.SkString**
  %303 = load %class.SkString*, %class.SkString** %302, align 8
  %304 = sext i32 %301 to i64
  %305 = getelementptr inbounds %class.SkString, %class.SkString* %303, i64 %304
  call void @_ZN8SkString6insertEmPKc(%class.SkString* %305, i64 -1, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.47, i64 0, i64 0)) #14
  %306 = load %class.GrGLSLVaryingHandler*, %class.GrGLSLVaryingHandler** %20, align 8
  call void @_ZN20GrGLSLVaryingHandler23addPassThroughAttributeERKN19GrGeometryProcessor9AttributeEPKcNS_13InterpolationE(%class.GrGLSLVaryingHandler* %306, %"class.GrGeometryProcessor::Attribute"* dereferenceable(16) %289, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.48, i64 0, i64 0), i32 1) #14
  %307 = load %class.GrGLSLFPFragmentBuilder*, %class.GrGLSLFPFragmentBuilder** %95, align 8
  %308 = bitcast %class.GrGLSLFPFragmentBuilder* %307 to i8**
  %309 = load i8*, i8** %308, align 8
  %310 = getelementptr i8, i8* %309, i64 -24
  %311 = bitcast i8* %310 to i64*
  %312 = load i64, i64* %311, align 8
  %313 = bitcast %class.GrGLSLFPFragmentBuilder* %307 to i8*
  %314 = getelementptr inbounds i8, i8* %313, i64 %312
  %315 = getelementptr inbounds i8, i8* %314, i64 160
  %316 = getelementptr inbounds i8, i8* %314, i64 488
  %317 = bitcast i8* %316 to i32*
  %318 = load i32, i32* %317, align 8
  %319 = bitcast i8* %315 to %class.SkString**
  %320 = load %class.SkString*, %class.SkString** %319, align 8
  %321 = sext i32 %318 to i64
  %322 = getelementptr inbounds %class.SkString, %class.SkString* %320, i64 %321
  call void @_ZN8SkString6insertEmPKc(%class.SkString* %322, i64 -1, i8* getelementptr inbounds ([215 x i8], [215 x i8]* @.str.49, i64 0, i64 0)) #14
  br label %323

323:                                              ; preds = %273, %288
  %324 = load %class.GrGLSLFPFragmentBuilder*, %class.GrGLSLFPFragmentBuilder** %95, align 8
  %325 = bitcast %class.GrGLSLFPFragmentBuilder* %324 to i8**
  %326 = load i8*, i8** %325, align 8
  %327 = getelementptr i8, i8* %326, i64 -24
  %328 = bitcast i8* %327 to i64*
  %329 = load i64, i64* %328, align 8
  %330 = bitcast %class.GrGLSLFPFragmentBuilder* %324 to i8*
  %331 = getelementptr inbounds i8, i8* %330, i64 %329
  %332 = bitcast i8* %331 to %class.GrGLSLShaderBuilder*
  %333 = getelementptr inbounds %"struct.GrGLSLGeometryProcessor::EmitArgs", %"struct.GrGLSLGeometryProcessor::EmitArgs"* %1, i64 0, i32 8
  %334 = load i8*, i8** %333, align 8
  call void (%class.GrGLSLShaderBuilder*, i8*, ...) @_ZN19GrGLSLShaderBuilder11codeAppendfEPKcz(%class.GrGLSLShaderBuilder* %332, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.50, i64 0, i64 0), i8* %334)
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %254) #14
  br label %347

335:                                              ; preds = %250
  %336 = load %class.GrGLSLFPFragmentBuilder*, %class.GrGLSLFPFragmentBuilder** %95, align 8
  %337 = bitcast %class.GrGLSLFPFragmentBuilder* %336 to i8**
  %338 = load i8*, i8** %337, align 8
  %339 = getelementptr i8, i8* %338, i64 -24
  %340 = bitcast i8* %339 to i64*
  %341 = load i64, i64* %340, align 8
  %342 = bitcast %class.GrGLSLFPFragmentBuilder* %336 to i8*
  %343 = getelementptr inbounds i8, i8* %342, i64 %341
  %344 = bitcast i8* %343 to %class.GrGLSLShaderBuilder*
  %345 = getelementptr inbounds %"struct.GrGLSLGeometryProcessor::EmitArgs", %"struct.GrGLSLGeometryProcessor::EmitArgs"* %1, i64 0, i32 8
  %346 = load i8*, i8** %345, align 8
  call void (%class.GrGLSLShaderBuilder*, i8*, ...) @_ZN19GrGLSLShaderBuilder11codeAppendfEPKcz(%class.GrGLSLShaderBuilder* %344, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.51, i64 0, i64 0), i8* %346)
  br label %347

347:                                              ; preds = %335, %323
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN23GrGLSLGeometryProcessorD2Ev(%class.GrGLSLGeometryProcessor*) unnamed_addr #4 comdat align 2 {
  %2 = getelementptr inbounds %class.GrGLSLGeometryProcessor, %class.GrGLSLGeometryProcessor* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [8 x i8*] }, { [8 x i8*] }* @_ZTV23GrGLSLGeometryProcessor, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %class.GrGLSLGeometryProcessor, %class.GrGLSLGeometryProcessor* %0, i64 0, i32 1
  %4 = getelementptr inbounds %class.GrGLSLGeometryProcessor, %class.GrGLSLGeometryProcessor* %0, i64 0, i32 1, i32 1
  %5 = load i64, i64* %4, align 8
  %6 = and i64 %5, 4294967294
  %7 = icmp eq i64 %6, 0
  br i1 %7, label %10, label %8

8:                                                ; preds = %1
  %9 = getelementptr inbounds %class.SkTArray.42, %class.SkTArray.42* %3, i64 0, i32 0
  br label %14

10:                                               ; preds = %14, %1
  %11 = phi i64 [ %5, %1 ], [ %19, %14 ]
  %12 = and i64 %11, 1
  %13 = icmp eq i64 %12, 0
  br i1 %13, label %26, label %23

14:                                               ; preds = %14, %8
  %15 = phi i64 [ 0, %8 ], [ %18, %14 ]
  %16 = load %"struct.GrGLSLGeometryProcessor::TransformInfo"*, %"struct.GrGLSLGeometryProcessor::TransformInfo"** %9, align 8
  %17 = getelementptr inbounds %"struct.GrGLSLGeometryProcessor::TransformInfo", %"struct.GrGLSLGeometryProcessor::TransformInfo"* %16, i64 %15
  tail call void @_ZN23GrGLSLGeometryProcessor13TransformInfoD2Ev(%"struct.GrGLSLGeometryProcessor::TransformInfo"* %17) #14
  %18 = add nuw nsw i64 %15, 1
  %19 = load i64, i64* %4, align 8
  %20 = lshr i64 %19, 1
  %21 = and i64 %20, 2147483647
  %22 = icmp ult i64 %18, %21
  br i1 %22, label %14, label %10

23:                                               ; preds = %10
  %24 = bitcast %class.SkTArray.42* %3 to i8**
  %25 = load i8*, i8** %24, align 8
  tail call void @_Z7sk_freePv(i8* %25) #14
  br label %26

26:                                               ; preds = %10, %23
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN23GrGLSLGeometryProcessorD0Ev(%class.GrGLSLGeometryProcessor*) unnamed_addr #4 comdat align 2 {
  tail call void @llvm.trap() #15
  unreachable
}

declare void @__cxa_pure_virtual() unnamed_addr

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN23GrGLSLGeometryProcessor13TransformInfoD2Ev(%"struct.GrGLSLGeometryProcessor::TransformInfo"*) unnamed_addr #10 comdat align 2 {
  %2 = getelementptr inbounds %"struct.GrGLSLGeometryProcessor::TransformInfo", %"struct.GrGLSLGeometryProcessor::TransformInfo"* %0, i64 0, i32 1, i32 5
  tail call void @_ZN8SkStringD1Ev(%class.SkString* %2) #14
  %3 = getelementptr inbounds %"struct.GrGLSLGeometryProcessor::TransformInfo", %"struct.GrGLSLGeometryProcessor::TransformInfo"* %0, i64 0, i32 1, i32 4
  tail call void @_ZN8SkStringD1Ev(%class.SkString* %3) #14
  %4 = getelementptr inbounds %"struct.GrGLSLGeometryProcessor::TransformInfo", %"struct.GrGLSLGeometryProcessor::TransformInfo"* %0, i64 0, i32 1, i32 3
  tail call void @_ZN8SkStringD1Ev(%class.SkString* %4) #14
  %5 = getelementptr inbounds %"struct.GrGLSLGeometryProcessor::TransformInfo", %"struct.GrGLSLGeometryProcessor::TransformInfo"* %0, i64 0, i32 0, i32 5
  tail call void @_ZN8SkStringD1Ev(%class.SkString* %5) #14
  %6 = getelementptr inbounds %"struct.GrGLSLGeometryProcessor::TransformInfo", %"struct.GrGLSLGeometryProcessor::TransformInfo"* %0, i64 0, i32 0, i32 4
  tail call void @_ZN8SkStringD1Ev(%class.SkString* %6) #14
  %7 = getelementptr inbounds %"struct.GrGLSLGeometryProcessor::TransformInfo", %"struct.GrGLSLGeometryProcessor::TransformInfo"* %0, i64 0, i32 0, i32 3
  tail call void @_ZN8SkStringD1Ev(%class.SkString* %7) #14
  ret void
}

declare void @_Z7sk_freePv(i8*) local_unnamed_addr #7

; Function Attrs: nounwind
declare void @_ZN8SkStringD1Ev(%class.SkString*) unnamed_addr #11

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #13

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN27GrGLSLColorSpaceXformHelper8emitCodeEP20GrGLSLUniformHandlerPK17GrColorSpaceXformj(%class.GrGLSLColorSpaceXformHelper*, %class.GrGLSLUniformHandler*, %class.GrColorSpaceXform*, i32) local_unnamed_addr #4 comdat align 2 {
  %5 = icmp eq %class.GrColorSpaceXform* %2, null
  br i1 %5, label %141, label %6

6:                                                ; preds = %4
  %7 = getelementptr inbounds %class.GrGLSLColorSpaceXformHelper, %class.GrGLSLColorSpaceXformHelper* %0, i64 0, i32 3, i32 0
  %8 = getelementptr inbounds %class.GrColorSpaceXform, %class.GrColorSpaceXform* %2, i64 0, i32 1, i32 0, i32 0
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %7, i8* align 1 %8, i64 5, i1 false)
  %9 = getelementptr inbounds %class.GrGLSLColorSpaceXformHelper, %class.GrGLSLColorSpaceXformHelper* %0, i64 0, i32 3, i32 1
  %10 = load i8, i8* %9, align 1, !range !8
  %11 = icmp eq i8 %10, 0
  br i1 %11, label %69, label %12

12:                                               ; preds = %6
  %13 = bitcast %class.GrGLSLUniformHandler* %1 to i32 (%class.GrGLSLUniformHandler*, %class.GrFragmentProcessor*, i32, i32, i8*, i1, i32, i8**)***
  %14 = load i32 (%class.GrGLSLUniformHandler*, %class.GrFragmentProcessor*, i32, i32, i8*, i1, i32, i8**)**, i32 (%class.GrGLSLUniformHandler*, %class.GrFragmentProcessor*, i32, i32, i8*, i1, i32, i8**)*** %13, align 8
  %15 = getelementptr inbounds i32 (%class.GrGLSLUniformHandler*, %class.GrFragmentProcessor*, i32, i32, i8*, i1, i32, i8**)*, i32 (%class.GrGLSLUniformHandler*, %class.GrFragmentProcessor*, i32, i32, i8*, i1, i32, i8**)** %14, i64 13
  %16 = load i32 (%class.GrGLSLUniformHandler*, %class.GrFragmentProcessor*, i32, i32, i8*, i1, i32, i8**)*, i32 (%class.GrGLSLUniformHandler*, %class.GrFragmentProcessor*, i32, i32, i8*, i1, i32, i8**)** %15, align 8
  %17 = tail call i32 %16(%class.GrGLSLUniformHandler* %1, %class.GrFragmentProcessor* null, i32 %3, i32 28, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.52, i64 0, i64 0), i1 zeroext true, i32 7, i8** null) #14
  %18 = getelementptr inbounds %class.GrGLSLColorSpaceXformHelper, %class.GrGLSLColorSpaceXformHelper* %0, i64 0, i32 0, i32 0
  store i32 %17, i32* %18, align 4
  %19 = getelementptr inbounds %class.GrColorSpaceXform, %class.GrColorSpaceXform* %2, i64 0, i32 1, i32 1, i32 0
  %20 = load float, float* %19, align 4
  %21 = fcmp olt float %20, 0.000000e+00
  br i1 %21, label %22, label %31

22:                                               ; preds = %12
  %23 = fptosi float %20 to i32
  %24 = sitofp i32 %23 to float
  %25 = fcmp oeq float %20, %24
  br i1 %25, label %26, label %31

26:                                               ; preds = %22
  %27 = add i32 %23, 4
  %28 = icmp ult i32 %27, 3
  %29 = sub i32 0, %23
  %30 = select i1 %28, i32 %29, i32 0
  br label %66

31:                                               ; preds = %22, %12
  %32 = getelementptr inbounds %class.GrColorSpaceXform, %class.GrColorSpaceXform* %2, i64 0, i32 1, i32 1, i32 1
  %33 = load float, float* %32, align 4
  %34 = getelementptr inbounds %class.GrColorSpaceXform, %class.GrColorSpaceXform* %2, i64 0, i32 1, i32 1, i32 2
  %35 = load float, float* %34, align 4
  %36 = fadd float %33, %35
  %37 = getelementptr inbounds %class.GrColorSpaceXform, %class.GrColorSpaceXform* %2, i64 0, i32 1, i32 1, i32 3
  %38 = load float, float* %37, align 4
  %39 = fadd float %36, %38
  %40 = getelementptr inbounds %class.GrColorSpaceXform, %class.GrColorSpaceXform* %2, i64 0, i32 1, i32 1, i32 4
  %41 = load float, float* %40, align 4
  %42 = fadd float %39, %41
  %43 = getelementptr inbounds %class.GrColorSpaceXform, %class.GrColorSpaceXform* %2, i64 0, i32 1, i32 1, i32 5
  %44 = load float, float* %43, align 4
  %45 = fadd float %42, %44
  %46 = getelementptr inbounds %class.GrColorSpaceXform, %class.GrColorSpaceXform* %2, i64 0, i32 1, i32 1, i32 6
  %47 = load float, float* %46, align 4
  %48 = fadd float %45, %47
  %49 = fadd float %20, %48
  %50 = bitcast float %49 to i32
  %51 = and i32 %50, 2139095040
  %52 = icmp eq i32 %51, 2139095040
  br i1 %52, label %65, label %53

53:                                               ; preds = %31
  %54 = fcmp ult float %33, 0.000000e+00
  %55 = fcmp ult float %38, 0.000000e+00
  %56 = or i1 %54, %55
  br i1 %56, label %65, label %57

57:                                               ; preds = %53
  %58 = fcmp ult float %41, 0.000000e+00
  %59 = fcmp ult float %20, 0.000000e+00
  %60 = or i1 %59, %58
  br i1 %60, label %65, label %61

61:                                               ; preds = %57
  %62 = fmul float %33, %41
  %63 = fadd float %35, %62
  %64 = fcmp ult float %63, 0.000000e+00
  br i1 %64, label %65, label %66

65:                                               ; preds = %61, %57, %53, %31
  br label %66

66:                                               ; preds = %26, %61, %65
  %67 = phi i32 [ 0, %65 ], [ 1, %61 ], [ %30, %26 ]
  %68 = getelementptr inbounds %class.GrGLSLColorSpaceXformHelper, %class.GrGLSLColorSpaceXformHelper* %0, i64 0, i32 4
  store i32 %67, i32* %68, align 4
  br label %69

69:                                               ; preds = %6, %66
  %70 = getelementptr inbounds %class.GrGLSLColorSpaceXformHelper, %class.GrGLSLColorSpaceXformHelper* %0, i64 0, i32 3, i32 2
  %71 = load i8, i8* %70, align 2, !range !8
  %72 = icmp eq i8 %71, 0
  br i1 %72, label %80, label %73

73:                                               ; preds = %69
  %74 = bitcast %class.GrGLSLUniformHandler* %1 to i32 (%class.GrGLSLUniformHandler*, %class.GrFragmentProcessor*, i32, i32, i8*, i1, i32, i8**)***
  %75 = load i32 (%class.GrGLSLUniformHandler*, %class.GrFragmentProcessor*, i32, i32, i8*, i1, i32, i8**)**, i32 (%class.GrGLSLUniformHandler*, %class.GrFragmentProcessor*, i32, i32, i8*, i1, i32, i8**)*** %74, align 8
  %76 = getelementptr inbounds i32 (%class.GrGLSLUniformHandler*, %class.GrFragmentProcessor*, i32, i32, i8*, i1, i32, i8**)*, i32 (%class.GrGLSLUniformHandler*, %class.GrFragmentProcessor*, i32, i32, i8*, i1, i32, i8**)** %75, i64 13
  %77 = load i32 (%class.GrGLSLUniformHandler*, %class.GrFragmentProcessor*, i32, i32, i8*, i1, i32, i8**)*, i32 (%class.GrGLSLUniformHandler*, %class.GrFragmentProcessor*, i32, i32, i8*, i1, i32, i8**)** %76, align 8
  %78 = tail call i32 %77(%class.GrGLSLUniformHandler* %1, %class.GrFragmentProcessor* null, i32 %3, i32 33, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.53, i64 0, i64 0), i1 zeroext true, i32 0, i8** null) #14
  %79 = getelementptr inbounds %class.GrGLSLColorSpaceXformHelper, %class.GrGLSLColorSpaceXformHelper* %0, i64 0, i32 1, i32 0
  store i32 %78, i32* %79, align 4
  br label %80

80:                                               ; preds = %69, %73
  %81 = getelementptr inbounds %class.GrGLSLColorSpaceXformHelper, %class.GrGLSLColorSpaceXformHelper* %0, i64 0, i32 3, i32 3
  %82 = load i8, i8* %81, align 1, !range !8
  %83 = icmp eq i8 %82, 0
  br i1 %83, label %141, label %84

84:                                               ; preds = %80
  %85 = bitcast %class.GrGLSLUniformHandler* %1 to i32 (%class.GrGLSLUniformHandler*, %class.GrFragmentProcessor*, i32, i32, i8*, i1, i32, i8**)***
  %86 = load i32 (%class.GrGLSLUniformHandler*, %class.GrFragmentProcessor*, i32, i32, i8*, i1, i32, i8**)**, i32 (%class.GrGLSLUniformHandler*, %class.GrFragmentProcessor*, i32, i32, i8*, i1, i32, i8**)*** %85, align 8
  %87 = getelementptr inbounds i32 (%class.GrGLSLUniformHandler*, %class.GrFragmentProcessor*, i32, i32, i8*, i1, i32, i8**)*, i32 (%class.GrGLSLUniformHandler*, %class.GrFragmentProcessor*, i32, i32, i8*, i1, i32, i8**)** %86, i64 13
  %88 = load i32 (%class.GrGLSLUniformHandler*, %class.GrFragmentProcessor*, i32, i32, i8*, i1, i32, i8**)*, i32 (%class.GrGLSLUniformHandler*, %class.GrFragmentProcessor*, i32, i32, i8*, i1, i32, i8**)** %87, align 8
  %89 = tail call i32 %88(%class.GrGLSLUniformHandler* %1, %class.GrFragmentProcessor* null, i32 %3, i32 28, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.54, i64 0, i64 0), i1 zeroext true, i32 7, i8** null) #14
  %90 = getelementptr inbounds %class.GrGLSLColorSpaceXformHelper, %class.GrGLSLColorSpaceXformHelper* %0, i64 0, i32 2, i32 0
  store i32 %89, i32* %90, align 4
  %91 = getelementptr inbounds %class.GrColorSpaceXform, %class.GrColorSpaceXform* %2, i64 0, i32 1, i32 2, i32 0
  %92 = load float, float* %91, align 4
  %93 = fcmp olt float %92, 0.000000e+00
  br i1 %93, label %94, label %103

94:                                               ; preds = %84
  %95 = fptosi float %92 to i32
  %96 = sitofp i32 %95 to float
  %97 = fcmp oeq float %92, %96
  br i1 %97, label %98, label %103

98:                                               ; preds = %94
  %99 = add i32 %95, 4
  %100 = icmp ult i32 %99, 3
  %101 = sub i32 0, %95
  %102 = select i1 %100, i32 %101, i32 0
  br label %138

103:                                              ; preds = %94, %84
  %104 = getelementptr inbounds %class.GrColorSpaceXform, %class.GrColorSpaceXform* %2, i64 0, i32 1, i32 2, i32 1
  %105 = load float, float* %104, align 4
  %106 = getelementptr inbounds %class.GrColorSpaceXform, %class.GrColorSpaceXform* %2, i64 0, i32 1, i32 2, i32 2
  %107 = load float, float* %106, align 4
  %108 = fadd float %105, %107
  %109 = getelementptr inbounds %class.GrColorSpaceXform, %class.GrColorSpaceXform* %2, i64 0, i32 1, i32 2, i32 3
  %110 = load float, float* %109, align 4
  %111 = fadd float %108, %110
  %112 = getelementptr inbounds %class.GrColorSpaceXform, %class.GrColorSpaceXform* %2, i64 0, i32 1, i32 2, i32 4
  %113 = load float, float* %112, align 4
  %114 = fadd float %111, %113
  %115 = getelementptr inbounds %class.GrColorSpaceXform, %class.GrColorSpaceXform* %2, i64 0, i32 1, i32 2, i32 5
  %116 = load float, float* %115, align 4
  %117 = fadd float %114, %116
  %118 = getelementptr inbounds %class.GrColorSpaceXform, %class.GrColorSpaceXform* %2, i64 0, i32 1, i32 2, i32 6
  %119 = load float, float* %118, align 4
  %120 = fadd float %117, %119
  %121 = fadd float %92, %120
  %122 = bitcast float %121 to i32
  %123 = and i32 %122, 2139095040
  %124 = icmp eq i32 %123, 2139095040
  br i1 %124, label %137, label %125

125:                                              ; preds = %103
  %126 = fcmp ult float %105, 0.000000e+00
  %127 = fcmp ult float %110, 0.000000e+00
  %128 = or i1 %126, %127
  br i1 %128, label %137, label %129

129:                                              ; preds = %125
  %130 = fcmp ult float %113, 0.000000e+00
  %131 = fcmp ult float %92, 0.000000e+00
  %132 = or i1 %131, %130
  br i1 %132, label %137, label %133

133:                                              ; preds = %129
  %134 = fmul float %105, %113
  %135 = fadd float %107, %134
  %136 = fcmp ult float %135, 0.000000e+00
  br i1 %136, label %137, label %138

137:                                              ; preds = %133, %129, %125, %103
  br label %138

138:                                              ; preds = %98, %133, %137
  %139 = phi i32 [ 0, %137 ], [ 1, %133 ], [ %102, %98 ]
  %140 = getelementptr inbounds %class.GrGLSLColorSpaceXformHelper, %class.GrGLSLColorSpaceXformHelper* %0, i64 0, i32 5
  store i32 %139, i32* %140, align 4
  br label %141

141:                                              ; preds = %80, %4, %138
  ret void
}

declare void @_ZN20GrGLSLVaryingHandler14emitAttributesERK19GrGeometryProcessor(%class.GrGLSLVaryingHandler*, %class.GrGeometryProcessor* dereferenceable(80)) local_unnamed_addr #7

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN19GrGLSLShaderBuilder11codeAppendfEPKcz(%class.GrGLSLShaderBuilder*, i8*, ...) local_unnamed_addr #4 comdat align 2 {
  %3 = alloca [1 x %struct.__va_list_tag], align 16
  %4 = bitcast [1 x %struct.__va_list_tag]* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %4) #14
  %5 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %3, i64 0, i64 0
  %6 = bitcast [1 x %struct.__va_list_tag]* %3 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %6, i8 -86, i64 24, i1 false)
  call void @llvm.va_start(i8* nonnull %4)
  %7 = getelementptr inbounds %class.GrGLSLShaderBuilder, %class.GrGLSLShaderBuilder* %0, i64 0, i32 3, i32 0, i32 0, i64 120
  %8 = getelementptr inbounds %class.GrGLSLShaderBuilder, %class.GrGLSLShaderBuilder* %0, i64 0, i32 14
  %9 = load i32, i32* %8, align 8
  %10 = bitcast i8* %7 to %class.SkString**
  %11 = load %class.SkString*, %class.SkString** %10, align 8
  %12 = sext i32 %9 to i64
  %13 = getelementptr inbounds %class.SkString, %class.SkString* %11, i64 %12
  call void @_ZN8SkString12appendVAListEPKcP13__va_list_tag(%class.SkString* %13, i8* %1, %struct.__va_list_tag* nonnull %5) #14
  call void @llvm.va_end(i8* nonnull %4)
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %4) #14
  ret void
}

declare void @_ZN20GrGLSLVaryingHandler23addPassThroughAttributeERKN19GrGeometryProcessor9AttributeEPKcNS_13InterpolationE(%class.GrGLSLVaryingHandler*, %"class.GrGeometryProcessor::Attribute"* dereferenceable(16), i8*, i32) local_unnamed_addr #7

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #3

declare void @_ZN20GrGLSLVaryingHandler10addVaryingEPKcP13GrGLSLVaryingNS_13InterpolationE(%class.GrGLSLVaryingHandler*, i8*, %class.GrGLSLVarying*, i32) local_unnamed_addr #7

declare void @_ZN19GrGLSLShaderBuilder27appendTextureLookupAndBlendEPKc11SkBlendMode16GrResourceHandleIN20GrGLSLUniformHandler17SamplerHandleKindEES1_P27GrGLSLColorSpaceXformHelper(%class.GrGLSLShaderBuilder*, i8*, i32, i32, i8*, %class.GrGLSLColorSpaceXformHelper*) local_unnamed_addr #7

; Function Attrs: nounwind
declare void @llvm.va_start(i8*) #14

declare void @_ZN8SkString12appendVAListEPKcP13__va_list_tag(%class.SkString*, i8*, %struct.__va_list_tag*) local_unnamed_addr #7

; Function Attrs: nounwind
declare void @llvm.va_end(i8*) #14

declare void @_ZN8SkStringC1EPKc(%class.SkString*, i8*) unnamed_addr #7

declare void @_ZN8SkStringC1EOS_(%class.SkString*, %class.SkString* dereferenceable(8)) unnamed_addr #7

declare void @_ZN8SkStringC1Ev(%class.SkString*) unnamed_addr #7

declare dereferenceable(8) %class.SkString* @_ZN8SkStringaSEOS_(%class.SkString*, %class.SkString* dereferenceable(8)) local_unnamed_addr #7

declare void @_ZN8SkString6insertEmPKc(%class.SkString*, i64, i8*) local_unnamed_addr #7

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZZN12SkArenaAlloc4makeIZN15GrQuadPerEdgeAA30QuadPerEdgeAAGeometryProcessor4MakeEPS_RKNS1_10VertexSpecERK12GrShaderCapsRK15GrBackendFormat14GrSamplerStateRK9GrSwizzle5sk_spI17GrColorSpaceXformEN11GrTextureOp8SaturateEEUlPvE_EEDTclfp_LDnEEEOT_ENUlPcE_8__invokeESR_(i8*) #10 comdat align 2 {
  %2 = getelementptr inbounds i8, i8* %0, i64 -297
  %3 = bitcast i8* %2 to %"class.GrQuadPerEdgeAA::QuadPerEdgeAAGeometryProcessor"*
  %4 = bitcast i8* %2 to void (%"class.GrQuadPerEdgeAA::QuadPerEdgeAAGeometryProcessor"*)***
  %5 = load void (%"class.GrQuadPerEdgeAA::QuadPerEdgeAAGeometryProcessor"*)**, void (%"class.GrQuadPerEdgeAA::QuadPerEdgeAAGeometryProcessor"*)*** %4, align 8
  %6 = load void (%"class.GrQuadPerEdgeAA::QuadPerEdgeAAGeometryProcessor"*)*, void (%"class.GrQuadPerEdgeAA::QuadPerEdgeAAGeometryProcessor"*)** %5, align 8
  tail call void %6(%"class.GrQuadPerEdgeAA::QuadPerEdgeAAGeometryProcessor"* %3) #14
  ret i8* %2
}

declare void @_ZN19GrGeometryProcessor14TextureSamplerC1E14GrSamplerStateRK15GrBackendFormatRK9GrSwizzle(%"class.GrGeometryProcessor::TextureSampler"*, i64, i32, %class.GrBackendFormat* dereferenceable(72), %class.GrSwizzle* dereferenceable(2)) unnamed_addr #7

attributes #0 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="64" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { argmemonly nounwind }
attributes #4 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nofree norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="128" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { cold noreturn nounwind }
attributes #9 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #11 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #12 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #13 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #14 = { nounwind }
attributes #15 = { noreturn nounwind }
attributes #16 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!3}
!3 = distinct !{!3, !4, !"_ZN18GrResourceProvider20refAAQuadIndexBufferEv: argument 0"}
!4 = distinct !{!4, !"_ZN18GrResourceProvider20refAAQuadIndexBufferEv"}
!5 = !{!6}
!6 = distinct !{!6, !7, !"_ZN18GrResourceProvider23refNonAAQuadIndexBufferEv: argument 0"}
!7 = distinct !{!7, !"_ZN18GrResourceProvider23refNonAAQuadIndexBufferEv"}
!8 = !{i8 0, i8 2}
!9 = !{!10}
!10 = distinct !{!10, !11, !"_ZNK19GrGeometryProcessor9Attribute11asShaderVarEv: argument 0"}
!11 = distinct !{!11, !"_ZNK19GrGeometryProcessor9Attribute11asShaderVarEv"}
!12 = !{!13}
!13 = distinct !{!13, !14, !"_ZNK19GrGeometryProcessor9Attribute11asShaderVarEv: argument 0"}
!14 = distinct !{!14, !"_ZNK19GrGeometryProcessor9Attribute11asShaderVarEv"}
