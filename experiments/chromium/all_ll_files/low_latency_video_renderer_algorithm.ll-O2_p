; ModuleID = '../../third_party/blink/renderer/modules/mediastream/low_latency_video_renderer_algorithm.cc'
source_filename = "../../third_party/blink/renderer/modules/mediastream/low_latency_video_renderer_algorithm.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.blink::LowLatencyVideoRendererAlgorithm" = type { %class.scoped_refptr, %"class.WTF::Deque", %"class.absl::optional", double, i32, i32, %"struct.blink::LowLatencyVideoRendererAlgorithm::Stats", %"class.absl::optional" }
%class.scoped_refptr = type { %"class.media::VideoFrame"* }
%"class.media::VideoFrame" = type { i32 (...)**, %"class.base::RefCountedThreadSafe", %"class.media::VideoFrameLayout", %class.scoped_refptr, i32, %"class.gfx::Rect", %"class.gfx::Size", [4 x i8*], [4 x %"struct.gpu::MailboxHolder"], %"class.base::OnceCallback", %"class.base::UnsafeSharedMemoryRegion"*, %"class.base::UnsafeSharedMemoryRegion", %"class.base::WritableSharedMemoryMapping", %"class.std::__1::unique_ptr", %class.scoped_refptr.7, %"class.std::__1::vector.8", %"class.base::TimeDelta", %"class.base::Lock", %"struct.gpu::SyncToken", %"struct.media::VideoFrameMetadata", i32, %"class.gfx::ColorSpace", %"class.absl::optional.51", [4 x i8], %"class.absl::optional.56", %"class.std::__1::unique_ptr.61" }
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.0" }
%"struct.std::__1::__atomic_base.0" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.media::VideoFrameLayout" = type { i32, %"class.gfx::Size", %"class.std::__1::vector", i8, i64, i64 }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"struct.media::ColorPlaneLayout"*, %"struct.media::ColorPlaneLayout"*, %"class.std::__1::__compressed_pair" }
%"struct.media::ColorPlaneLayout" = type { i32, i64, i64 }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.media::ColorPlaneLayout"* }
%"class.gfx::Rect" = type { %"class.gfx::Point", %"class.gfx::Size" }
%"class.gfx::Point" = type { i32, i32 }
%"class.gfx::Size" = type { i32, i32 }
%"struct.gpu::MailboxHolder" = type <{ %"struct.gpu::Mailbox", %"struct.gpu::SyncToken", i32, [4 x i8] }>
%"struct.gpu::Mailbox" = type { [16 x i8] }
%"class.base::OnceCallback" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr.2 }
%class.scoped_refptr.2 = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe.3", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe.3" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::UnsafeSharedMemoryRegion" = type { %"class.base::subtle::PlatformSharedMemoryRegion" }
%"class.base::subtle::PlatformSharedMemoryRegion" = type { %"struct.base::subtle::ScopedFDPair", i32, i64, %"class.base::UnguessableToken" }
%"struct.base::subtle::ScopedFDPair" = type { %"class.base::ScopedGeneric", %"class.base::ScopedGeneric" }
%"class.base::ScopedGeneric" = type <{ i32 (...)**, %"struct.base::ScopedGeneric<int, base::internal::ScopedFDCloseTraits>::Data", i8, [3 x i8] }>
%"struct.base::ScopedGeneric<int, base::internal::ScopedFDCloseTraits>::Data" = type { i32 }
%"class.base::UnguessableToken" = type { %"class.base::Token" }
%"class.base::Token" = type { i64, i64 }
%"class.base::WritableSharedMemoryMapping" = type { %"class.base::SharedMemoryMapping" }
%"class.base::SharedMemoryMapping" = type { i32 (...)**, i8*, i64, i64, %"class.base::UnguessableToken" }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair.4" }
%"class.std::__1::__compressed_pair.4" = type { %"struct.std::__1::__compressed_pair_elem.5" }
%"struct.std::__1::__compressed_pair_elem.5" = type { %"class.gfx::GpuMemoryBuffer"* }
%"class.gfx::GpuMemoryBuffer" = type opaque
%class.scoped_refptr.7 = type { %"class.media::VideoFrame::DmabufHolder"* }
%"class.media::VideoFrame::DmabufHolder" = type opaque
%"class.std::__1::vector.8" = type { %"class.std::__1::__vector_base.9" }
%"class.std::__1::__vector_base.9" = type { %"class.base::OnceCallback.10"*, %"class.base::OnceCallback.10"*, %"class.std::__1::__compressed_pair.11" }
%"class.base::OnceCallback.10" = type opaque
%"class.std::__1::__compressed_pair.11" = type { %"struct.std::__1::__compressed_pair_elem.12" }
%"struct.std::__1::__compressed_pair_elem.12" = type { %"class.base::OnceCallback.10"* }
%"class.base::TimeDelta" = type { i64 }
%"class.base::Lock" = type { %"class.base::internal::LockImpl" }
%"class.base::internal::LockImpl" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"struct.gpu::SyncToken" = type { i8, i8, %"class.util::IdType", i64 }
%"class.util::IdType" = type { %"class.base::StrongAlias" }
%"class.base::StrongAlias" = type { i64 }
%"struct.media::VideoFrameMetadata" = type { i8, %"class.absl::optional", %"class.absl::optional", %"class.absl::optional.16", %"class.absl::optional.21", %"class.absl::optional.26", i8, %"class.absl::optional.31", %"class.absl::optional.36", i8, %"class.absl::optional", i8, [3 x i8], %"class.absl::optional.41", i8, i8, i8, i8, i32, %"class.absl::optional.46", i8, %"class.absl::optional.36", %"class.absl::optional.36", %"class.absl::optional.36", %"class.absl::optional.36", %"class.absl::optional.36", %"class.absl::optional", %"class.absl::optional", %"class.absl::optional.31", %"class.absl::optional.36", %"class.absl::optional", %"class.absl::optional.31", %"class.absl::optional.16" }
%"class.absl::optional.21" = type { %"class.absl::optional_internal::optional_data.22" }
%"class.absl::optional_internal::optional_data.22" = type { %"class.absl::optional_internal::optional_data_base.23" }
%"class.absl::optional_internal::optional_data_base.23" = type { %"class.absl::optional_internal::optional_data_dtor_base.24" }
%"class.absl::optional_internal::optional_data_dtor_base.24" = type { i8, %union.anon.25 }
%union.anon.25 = type { %"class.gfx::Rect" }
%"class.absl::optional.26" = type { %"class.absl::optional_internal::optional_data.27" }
%"class.absl::optional_internal::optional_data.27" = type { %"class.absl::optional_internal::optional_data_base.28" }
%"class.absl::optional_internal::optional_data_base.28" = type { %"class.absl::optional_internal::optional_data_dtor_base.29" }
%"class.absl::optional_internal::optional_data_dtor_base.29" = type { i8, %union.anon.30 }
%union.anon.30 = type { i32 }
%"class.absl::optional.41" = type { %"class.absl::optional_internal::optional_data.42" }
%"class.absl::optional_internal::optional_data.42" = type { %"class.absl::optional_internal::optional_data_base.43" }
%"class.absl::optional_internal::optional_data_base.43" = type { %"class.absl::optional_internal::optional_data_dtor_base.44" }
%"class.absl::optional_internal::optional_data_dtor_base.44" = type { i8, [3 x i8], %union.anon.45 }
%union.anon.45 = type { %"struct.media::VideoTransformation" }
%"struct.media::VideoTransformation" = type <{ i32, i8, [3 x i8] }>
%"class.absl::optional.46" = type { %"class.absl::optional_internal::optional_data.47" }
%"class.absl::optional_internal::optional_data.47" = type { %"class.absl::optional_internal::optional_data_base.48" }
%"class.absl::optional_internal::optional_data_base.48" = type { %"class.absl::optional_internal::optional_data_dtor_base.49" }
%"class.absl::optional_internal::optional_data_dtor_base.49" = type { i8, %union.anon.50 }
%union.anon.50 = type { %"class.base::UnguessableToken" }
%"class.absl::optional.36" = type { %"class.absl::optional_internal::optional_data.37" }
%"class.absl::optional_internal::optional_data.37" = type { %"class.absl::optional_internal::optional_data_base.38" }
%"class.absl::optional_internal::optional_data_base.38" = type { %"class.absl::optional_internal::optional_data_dtor_base.39" }
%"class.absl::optional_internal::optional_data_dtor_base.39" = type { i8, %union.anon.40 }
%union.anon.40 = type { double }
%"class.absl::optional.31" = type { %"class.absl::optional_internal::optional_data.32" }
%"class.absl::optional_internal::optional_data.32" = type { %"class.absl::optional_internal::optional_data_base.33" }
%"class.absl::optional_internal::optional_data_base.33" = type { %"class.absl::optional_internal::optional_data_dtor_base.34" }
%"class.absl::optional_internal::optional_data_dtor_base.34" = type { i8, %union.anon.35 }
%union.anon.35 = type { %"class.base::TimeDelta" }
%"class.absl::optional.16" = type { %"class.absl::optional_internal::optional_data.17" }
%"class.absl::optional_internal::optional_data.17" = type { %"class.absl::optional_internal::optional_data_base.18" }
%"class.absl::optional_internal::optional_data_base.18" = type { %"class.absl::optional_internal::optional_data_dtor_base.19" }
%"class.absl::optional_internal::optional_data_dtor_base.19" = type { i8, %union.anon.20 }
%union.anon.20 = type { i32 }
%"class.gfx::ColorSpace" = type { i8, i8, i8, i8, [9 x float], [7 x float] }
%"class.absl::optional.51" = type { %"class.absl::optional_internal::optional_data.52" }
%"class.absl::optional_internal::optional_data.52" = type { %"class.absl::optional_internal::optional_data_base.53" }
%"class.absl::optional_internal::optional_data_base.53" = type { %"class.absl::optional_internal::optional_data_dtor_base.54" }
%"class.absl::optional_internal::optional_data_dtor_base.54" = type { i8, %union.anon.55 }
%union.anon.55 = type { %"struct.gfx::HDRMetadata" }
%"struct.gfx::HDRMetadata" = type { %"struct.gfx::MasteringMetadata", i32, i32 }
%"struct.gfx::MasteringMetadata" = type { %"class.gfx::PointF", %"class.gfx::PointF", %"class.gfx::PointF", %"class.gfx::PointF", float, float }
%"class.gfx::PointF" = type { float, float }
%"class.absl::optional.56" = type { %"class.absl::optional_internal::optional_data.57" }
%"class.absl::optional_internal::optional_data.57" = type { %"class.absl::optional_internal::optional_data_base.58" }
%"class.absl::optional_internal::optional_data_base.58" = type { %"class.absl::optional_internal::optional_data_dtor_base.59" }
%"class.absl::optional_internal::optional_data_dtor_base.59" = type { i8, [7 x i8], %union.anon.60 }
%union.anon.60 = type { %"struct.gpu::VulkanYCbCrInfo" }
%"struct.gpu::VulkanYCbCrInfo" = type <{ i32, [4 x i8], i64, i32, i32, i32, i32, i32, [4 x i8] }>
%"class.std::__1::unique_ptr.61" = type { %"class.std::__1::__compressed_pair.62" }
%"class.std::__1::__compressed_pair.62" = type { %"struct.std::__1::__compressed_pair_elem.63" }
%"struct.std::__1::__compressed_pair_elem.63" = type { i8* }
%"class.WTF::Deque" = type { %"class.WTF::Deque<scoped_refptr<media::VideoFrame>, 0, WTF::PartitionAllocator>::BackingBuffer", i32, i32 }
%"class.WTF::Deque<scoped_refptr<media::VideoFrame>, 0, WTF::PartitionAllocator>::BackingBuffer" = type { %"class.WTF::VectorBuffer" }
%"class.WTF::VectorBuffer" = type { %"class.WTF::VectorBufferBase" }
%"class.WTF::VectorBufferBase" = type { %class.scoped_refptr*, i32, i32 }
%"struct.blink::LowLatencyVideoRendererAlgorithm::Stats" = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon }
%union.anon = type { %"class.base::TimeTicks" }
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.media::MediaLog" = type { i32 (...)**, %class.scoped_refptr.65 }
%class.scoped_refptr.65 = type { %"struct.media::MediaLog::ParentLogRecord"* }
%"struct.media::MediaLog::ParentLogRecord" = type { i32 (...)**, %"class.base::RefCountedThreadSafe.66", i32, %"class.base::Lock", %"class.media::MediaLog"* }
%"class.base::RefCountedThreadSafe.66" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.WTF::ConditionalDestructor" = type { i8 }
%"class.WTF::DequeIterator" = type { %"class.WTF::DequeIteratorBase.base", [4 x i8] }
%"class.WTF::DequeIteratorBase.base" = type <{ %"class.WTF::Deque"*, i32 }>
%"class.logging::CheckOpResult" = type { i8* }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.67" }
%"class.std::__1::__compressed_pair.67" = type { %"struct.std::__1::__compressed_pair_elem.68" }
%"struct.std::__1::__compressed_pair_elem.68" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon.69 }
%union.anon.69 = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.logging::LogMessage" = type { i32 (...)**, i32, %"class.std::__1::basic_ostringstream", i64, i8*, i32, %"class.base::ScopedClearLastErrorBase" }
%"class.std::__1::basic_ostringstream" = type { %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.base::ScopedClearLastErrorBase" = type { i32 }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }

$_ZN3WTF21ConditionalDestructorINS_5DequeI13scoped_refptrIN5media10VideoFrameEELj0ENS_18PartitionAllocatorEEELb0EED2Ev = comdat any

$_ZN3WTF5DequeI13scoped_refptrIN5media10VideoFrameEELj0ENS_18PartitionAllocatorEE14ExpandCapacityEv = comdat any

$_ZN3WTF18PartitionAllocator13QuantizedSizeI13scoped_refptrIN5media10VideoFrameEEEEmm = comdat any

$_ZNK3WTF13DequeIteratorI13scoped_refptrIN5media10VideoFrameEELj0ENS_18PartitionAllocatorEEdeEv = comdat any

@.str = private unnamed_addr constant [33 x i8] c"Media.RtcLowLatencyVideoRenderer\00", align 1
@.str.1 = private unnamed_addr constant [13 x i8] c".TotalFrames\00", align 1
@.str.2 = private unnamed_addr constant [23 x i8] c".DroppedFramesPermille\00", align 1
@.str.3 = private unnamed_addr constant [23 x i8] c".DrainedFramesPermille\00", align 1
@.str.4 = private unnamed_addr constant [23 x i8] c".TryToRenderFrameCount\00", align 1
@.str.5 = private unnamed_addr constant [28 x i8] c".NoNewFrameToRenderPermille\00", align 1
@.str.6 = private unnamed_addr constant [42 x i8] c"stats_.accumulated_queue_length_count > 0\00", align 1
@.str.7 = private unnamed_addr constant [93 x i8] c"../../third_party/blink/renderer/modules/mediastream/low_latency_video_renderer_algorithm.cc\00", align 1
@.str.8 = private unnamed_addr constant [23 x i8] c".AverageQueueLengthX10\00", align 1
@.str.9 = private unnamed_addr constant [21 x i8] c".EnterDrainModeCount\00", align 1
@.str.10 = private unnamed_addr constant [24 x i8] c".ReduceSteadyStateCount\00", align 1
@.str.11 = private unnamed_addr constant [23 x i8] c".MaxSizeDropQueueCount\00", align 1
@.str.13 = private unnamed_addr constant [44 x i8] c"count <= MaxElementCountInBackingStore<T>()\00", align 1
@.str.14 = private unnamed_addr constant [78 x i8] c"../../third_party/blink/renderer/platform/wtf/allocator/partition_allocator.h\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameI13scoped_refptrIN5media10VideoFrameEEEEPKcv = private unnamed_addr constant [80 x i8] c"const char *WTF::GetStringWithTypeName() [T = scoped_refptr<media::VideoFrame>]\00", align 1
@.str.15 = private unnamed_addr constant [23 x i8] c"index_ != deque_->end_\00", align 1
@.str.16 = private unnamed_addr constant [54 x i8] c"../../third_party/blink/renderer/platform/wtf/deque.h\00", align 1

@_ZN5blink32LowLatencyVideoRendererAlgorithmC1EPN5media8MediaLogE = hidden unnamed_addr alias void (%"class.blink::LowLatencyVideoRendererAlgorithm"*, %"class.media::MediaLog"*), void (%"class.blink::LowLatencyVideoRendererAlgorithm"*, %"class.media::MediaLog"*)* @_ZN5blink32LowLatencyVideoRendererAlgorithmC2EPN5media8MediaLogE
@_ZN5blink32LowLatencyVideoRendererAlgorithmD1Ev = hidden unnamed_addr alias void (%"class.blink::LowLatencyVideoRendererAlgorithm"*), void (%"class.blink::LowLatencyVideoRendererAlgorithm"*)* @_ZN5blink32LowLatencyVideoRendererAlgorithmD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink32LowLatencyVideoRendererAlgorithmC2EPN5media8MediaLogE(%"class.blink::LowLatencyVideoRendererAlgorithm"* nocapture, %"class.media::MediaLog"* nocapture readnone) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::LowLatencyVideoRendererAlgorithm", %"class.blink::LowLatencyVideoRendererAlgorithm"* %0, i64 0, i32 7, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %3, align 8
  %4 = bitcast %"class.blink::LowLatencyVideoRendererAlgorithm"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %4, i8 0, i64 33, i1 false)
  tail call void @_ZN5blink32LowLatencyVideoRendererAlgorithm5ResetEv(%"class.blink::LowLatencyVideoRendererAlgorithm"* %0)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink32LowLatencyVideoRendererAlgorithm5ResetEv(%"class.blink::LowLatencyVideoRendererAlgorithm"* nocapture) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::LowLatencyVideoRendererAlgorithm", %"class.blink::LowLatencyVideoRendererAlgorithm"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %2, align 8
  %3 = bitcast %"class.blink::LowLatencyVideoRendererAlgorithm"* %0 to i64*
  %4 = getelementptr inbounds %"class.blink::LowLatencyVideoRendererAlgorithm", %"class.blink::LowLatencyVideoRendererAlgorithm"* %0, i64 0, i32 0, i32 0
  %5 = load %"class.media::VideoFrame"*, %"class.media::VideoFrame"** %4, align 8
  store i64 0, i64* %3, align 8
  %6 = icmp eq %"class.media::VideoFrame"* %5, null
  br i1 %6, label %19, label %7

7:                                                ; preds = %1
  %8 = getelementptr inbounds %"class.media::VideoFrame", %"class.media::VideoFrame"* %5, i64 0, i32 1
  %9 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %10 = atomicrmw sub i32* %9, i32 1 acq_rel
  %11 = icmp eq i32 %10, 1
  br i1 %11, label %12, label %19

12:                                               ; preds = %7
  %13 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %8, i64 -2
  %14 = bitcast %"class.base::RefCountedThreadSafe"* %13 to %"class.media::VideoFrame"*
  %15 = bitcast %"class.base::RefCountedThreadSafe"* %13 to void (%"class.media::VideoFrame"*)***
  %16 = load void (%"class.media::VideoFrame"*)**, void (%"class.media::VideoFrame"*)*** %15, align 8
  %17 = getelementptr inbounds void (%"class.media::VideoFrame"*)*, void (%"class.media::VideoFrame"*)** %16, i64 1
  %18 = load void (%"class.media::VideoFrame"*)*, void (%"class.media::VideoFrame"*)** %17, align 8
  tail call void %18(%"class.media::VideoFrame"* nonnull %14) #7
  br label %19

19:                                               ; preds = %1, %7, %12
  %20 = getelementptr inbounds %"class.blink::LowLatencyVideoRendererAlgorithm", %"class.blink::LowLatencyVideoRendererAlgorithm"* %0, i64 0, i32 1
  %21 = getelementptr inbounds %"class.blink::LowLatencyVideoRendererAlgorithm", %"class.blink::LowLatencyVideoRendererAlgorithm"* %0, i64 0, i32 1, i32 1
  %22 = load i32, i32* %21, align 8
  %23 = getelementptr inbounds %"class.blink::LowLatencyVideoRendererAlgorithm", %"class.blink::LowLatencyVideoRendererAlgorithm"* %0, i64 0, i32 1, i32 2
  %24 = load i32, i32* %23, align 4
  %25 = icmp ugt i32 %22, %24
  %26 = getelementptr inbounds %"class.WTF::Deque", %"class.WTF::Deque"* %20, i64 0, i32 0, i32 0, i32 0, i32 0
  %27 = load %class.scoped_refptr*, %class.scoped_refptr** %26, align 8
  %28 = zext i32 %24 to i64
  %29 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %27, i64 %28
  br i1 %25, label %55, label %30

30:                                               ; preds = %19
  %31 = icmp eq i32 %22, %24
  br i1 %31, label %111, label %32

32:                                               ; preds = %30
  %33 = zext i32 %22 to i64
  %34 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %27, i64 %33
  br label %35

35:                                               ; preds = %52, %32
  %36 = phi %class.scoped_refptr* [ %53, %52 ], [ %34, %32 ]
  %37 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %36, i64 0, i32 0
  %38 = load %"class.media::VideoFrame"*, %"class.media::VideoFrame"** %37, align 8
  %39 = icmp eq %"class.media::VideoFrame"* %38, null
  br i1 %39, label %52, label %40

40:                                               ; preds = %35
  %41 = getelementptr inbounds %"class.media::VideoFrame", %"class.media::VideoFrame"* %38, i64 0, i32 1
  %42 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %41, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %43 = atomicrmw sub i32* %42, i32 1 acq_rel
  %44 = icmp eq i32 %43, 1
  br i1 %44, label %45, label %52

45:                                               ; preds = %40
  %46 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %41, i64 -2
  %47 = bitcast %"class.base::RefCountedThreadSafe"* %46 to %"class.media::VideoFrame"*
  %48 = bitcast %"class.base::RefCountedThreadSafe"* %46 to void (%"class.media::VideoFrame"*)***
  %49 = load void (%"class.media::VideoFrame"*)**, void (%"class.media::VideoFrame"*)*** %48, align 8
  %50 = getelementptr inbounds void (%"class.media::VideoFrame"*)*, void (%"class.media::VideoFrame"*)** %49, i64 1
  %51 = load void (%"class.media::VideoFrame"*)*, void (%"class.media::VideoFrame"*)** %50, align 8
  tail call void %51(%"class.media::VideoFrame"* nonnull %47) #7
  br label %52

52:                                               ; preds = %45, %40, %35
  %53 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %36, i64 1
  %54 = icmp eq %class.scoped_refptr* %53, %29
  br i1 %54, label %111, label %35

55:                                               ; preds = %19
  %56 = icmp eq i32 %24, 0
  br i1 %56, label %80, label %57

57:                                               ; preds = %55, %74
  %58 = phi %class.scoped_refptr* [ %75, %74 ], [ %27, %55 ]
  %59 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %58, i64 0, i32 0
  %60 = load %"class.media::VideoFrame"*, %"class.media::VideoFrame"** %59, align 8
  %61 = icmp eq %"class.media::VideoFrame"* %60, null
  br i1 %61, label %74, label %62

62:                                               ; preds = %57
  %63 = getelementptr inbounds %"class.media::VideoFrame", %"class.media::VideoFrame"* %60, i64 0, i32 1
  %64 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %63, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %65 = atomicrmw sub i32* %64, i32 1 acq_rel
  %66 = icmp eq i32 %65, 1
  br i1 %66, label %67, label %74

67:                                               ; preds = %62
  %68 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %63, i64 -2
  %69 = bitcast %"class.base::RefCountedThreadSafe"* %68 to %"class.media::VideoFrame"*
  %70 = bitcast %"class.base::RefCountedThreadSafe"* %68 to void (%"class.media::VideoFrame"*)***
  %71 = load void (%"class.media::VideoFrame"*)**, void (%"class.media::VideoFrame"*)*** %70, align 8
  %72 = getelementptr inbounds void (%"class.media::VideoFrame"*)*, void (%"class.media::VideoFrame"*)** %71, i64 1
  %73 = load void (%"class.media::VideoFrame"*)*, void (%"class.media::VideoFrame"*)** %72, align 8
  tail call void %73(%"class.media::VideoFrame"* nonnull %69) #7
  br label %74

74:                                               ; preds = %67, %62, %57
  %75 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %58, i64 1
  %76 = icmp eq %class.scoped_refptr* %75, %29
  br i1 %76, label %77, label %57

77:                                               ; preds = %74
  %78 = load %class.scoped_refptr*, %class.scoped_refptr** %26, align 8
  %79 = load i32, i32* %21, align 8
  br label %80

80:                                               ; preds = %77, %55
  %81 = phi i32 [ %79, %77 ], [ %22, %55 ]
  %82 = phi %class.scoped_refptr* [ %78, %77 ], [ %27, %55 ]
  %83 = getelementptr inbounds %"class.blink::LowLatencyVideoRendererAlgorithm", %"class.blink::LowLatencyVideoRendererAlgorithm"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1
  %84 = load i32, i32* %83, align 8
  %85 = zext i32 %84 to i64
  %86 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %82, i64 %85
  %87 = icmp eq i32 %81, %84
  br i1 %87, label %111, label %88

88:                                               ; preds = %80
  %89 = zext i32 %81 to i64
  %90 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %82, i64 %89
  br label %91

91:                                               ; preds = %108, %88
  %92 = phi %class.scoped_refptr* [ %109, %108 ], [ %90, %88 ]
  %93 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %92, i64 0, i32 0
  %94 = load %"class.media::VideoFrame"*, %"class.media::VideoFrame"** %93, align 8
  %95 = icmp eq %"class.media::VideoFrame"* %94, null
  br i1 %95, label %108, label %96

96:                                               ; preds = %91
  %97 = getelementptr inbounds %"class.media::VideoFrame", %"class.media::VideoFrame"* %94, i64 0, i32 1
  %98 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %97, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %99 = atomicrmw sub i32* %98, i32 1 acq_rel
  %100 = icmp eq i32 %99, 1
  br i1 %100, label %101, label %108

101:                                              ; preds = %96
  %102 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %97, i64 -2
  %103 = bitcast %"class.base::RefCountedThreadSafe"* %102 to %"class.media::VideoFrame"*
  %104 = bitcast %"class.base::RefCountedThreadSafe"* %102 to void (%"class.media::VideoFrame"*)***
  %105 = load void (%"class.media::VideoFrame"*)**, void (%"class.media::VideoFrame"*)*** %104, align 8
  %106 = getelementptr inbounds void (%"class.media::VideoFrame"*)*, void (%"class.media::VideoFrame"*)** %105, i64 1
  %107 = load void (%"class.media::VideoFrame"*)*, void (%"class.media::VideoFrame"*)** %106, align 8
  tail call void %107(%"class.media::VideoFrame"* nonnull %103) #7
  br label %108

108:                                              ; preds = %101, %96, %91
  %109 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %92, i64 1
  %110 = icmp eq %class.scoped_refptr* %109, %86
  br i1 %110, label %111, label %91

111:                                              ; preds = %52, %108, %30, %80
  store i32 0, i32* %21, align 8
  store i32 0, i32* %23, align 4
  %112 = bitcast %"class.WTF::Deque"* %20 to i8**
  %113 = load i8*, i8** %112, align 8
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %113) #7
  %114 = bitcast %"class.WTF::Deque"* %20 to i64*
  store atomic i64 0, i64* %114 monotonic, align 8
  %115 = getelementptr inbounds %"class.blink::LowLatencyVideoRendererAlgorithm", %"class.blink::LowLatencyVideoRendererAlgorithm"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1
  store i32 0, i32* %115, align 8
  %116 = getelementptr inbounds %"class.blink::LowLatencyVideoRendererAlgorithm", %"class.blink::LowLatencyVideoRendererAlgorithm"* %0, i64 0, i32 3
  %117 = bitcast double* %116 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %117, i8 0, i64 16, i1 false)
  %118 = getelementptr inbounds %"class.blink::LowLatencyVideoRendererAlgorithm", %"class.blink::LowLatencyVideoRendererAlgorithm"* %0, i64 0, i32 6
  %119 = bitcast %"struct.blink::LowLatencyVideoRendererAlgorithm::Stats"* %118 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %119, i8 0, i64 40, i1 false)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink32LowLatencyVideoRendererAlgorithmD2Ev(%"class.blink::LowLatencyVideoRendererAlgorithm"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::LowLatencyVideoRendererAlgorithm", %"class.blink::LowLatencyVideoRendererAlgorithm"* %0, i64 0, i32 1
  %3 = bitcast %"class.WTF::Deque"* %2 to %"class.WTF::ConditionalDestructor"*
  tail call void @_ZN3WTF21ConditionalDestructorINS_5DequeI13scoped_refptrIN5media10VideoFrameEELj0ENS_18PartitionAllocatorEEELb0EED2Ev(%"class.WTF::ConditionalDestructor"* %3) #7
  %4 = getelementptr inbounds %"class.blink::LowLatencyVideoRendererAlgorithm", %"class.blink::LowLatencyVideoRendererAlgorithm"* %0, i64 0, i32 0, i32 0
  %5 = load %"class.media::VideoFrame"*, %"class.media::VideoFrame"** %4, align 8
  %6 = icmp eq %"class.media::VideoFrame"* %5, null
  br i1 %6, label %19, label %7

7:                                                ; preds = %1
  %8 = getelementptr inbounds %"class.media::VideoFrame", %"class.media::VideoFrame"* %5, i64 0, i32 1
  %9 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %10 = atomicrmw sub i32* %9, i32 1 acq_rel
  %11 = icmp eq i32 %10, 1
  br i1 %11, label %12, label %19

12:                                               ; preds = %7
  %13 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %8, i64 -2
  %14 = bitcast %"class.base::RefCountedThreadSafe"* %13 to %"class.media::VideoFrame"*
  %15 = bitcast %"class.base::RefCountedThreadSafe"* %13 to void (%"class.media::VideoFrame"*)***
  %16 = load void (%"class.media::VideoFrame"*)**, void (%"class.media::VideoFrame"*)*** %15, align 8
  %17 = getelementptr inbounds void (%"class.media::VideoFrame"*)*, void (%"class.media::VideoFrame"*)** %16, i64 1
  %18 = load void (%"class.media::VideoFrame"*)*, void (%"class.media::VideoFrame"*)** %17, align 8
  tail call void %18(%"class.media::VideoFrame"* nonnull %14) #7
  br label %19

19:                                               ; preds = %1, %7, %12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF21ConditionalDestructorINS_5DequeI13scoped_refptrIN5media10VideoFrameEELj0ENS_18PartitionAllocatorEEELb0EED2Ev(%"class.WTF::ConditionalDestructor"*) unnamed_addr #0 comdat align 2 {
  %2 = bitcast %"class.WTF::ConditionalDestructor"* %0 to %class.scoped_refptr**
  %3 = load %class.scoped_refptr*, %class.scoped_refptr** %2, align 8
  %4 = icmp eq %class.scoped_refptr* %3, null
  br i1 %4, label %100, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.WTF::ConditionalDestructor", %"class.WTF::ConditionalDestructor"* %0, i64 16
  %7 = bitcast %"class.WTF::ConditionalDestructor"* %6 to i32*
  %8 = load i32, i32* %7, align 8
  %9 = getelementptr inbounds %"class.WTF::ConditionalDestructor", %"class.WTF::ConditionalDestructor"* %0, i64 20
  %10 = bitcast %"class.WTF::ConditionalDestructor"* %9 to i32*
  %11 = load i32, i32* %10, align 4
  %12 = icmp eq i32 %8, %11
  br i1 %12, label %97, label %13

13:                                               ; preds = %5
  %14 = icmp ugt i32 %8, %11
  %15 = zext i32 %11 to i64
  %16 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %3, i64 %15
  br i1 %14, label %40, label %17

17:                                               ; preds = %13
  %18 = zext i32 %8 to i64
  %19 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %3, i64 %18
  br label %20

20:                                               ; preds = %37, %17
  %21 = phi %class.scoped_refptr* [ %38, %37 ], [ %19, %17 ]
  %22 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %21, i64 0, i32 0
  %23 = load %"class.media::VideoFrame"*, %"class.media::VideoFrame"** %22, align 8
  %24 = icmp eq %"class.media::VideoFrame"* %23, null
  br i1 %24, label %37, label %25

25:                                               ; preds = %20
  %26 = getelementptr inbounds %"class.media::VideoFrame", %"class.media::VideoFrame"* %23, i64 0, i32 1
  %27 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %26, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %28 = atomicrmw sub i32* %27, i32 1 acq_rel
  %29 = icmp eq i32 %28, 1
  br i1 %29, label %30, label %37

30:                                               ; preds = %25
  %31 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %26, i64 -2
  %32 = bitcast %"class.base::RefCountedThreadSafe"* %31 to %"class.media::VideoFrame"*
  %33 = bitcast %"class.base::RefCountedThreadSafe"* %31 to void (%"class.media::VideoFrame"*)***
  %34 = load void (%"class.media::VideoFrame"*)**, void (%"class.media::VideoFrame"*)*** %33, align 8
  %35 = getelementptr inbounds void (%"class.media::VideoFrame"*)*, void (%"class.media::VideoFrame"*)** %34, i64 1
  %36 = load void (%"class.media::VideoFrame"*)*, void (%"class.media::VideoFrame"*)** %35, align 8
  tail call void %36(%"class.media::VideoFrame"* nonnull %32) #7
  br label %37

37:                                               ; preds = %30, %25, %20
  %38 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %21, i64 1
  %39 = icmp eq %class.scoped_refptr* %38, %16
  br i1 %39, label %97, label %20

40:                                               ; preds = %13
  %41 = icmp eq i32 %11, 0
  br i1 %41, label %65, label %42

42:                                               ; preds = %40, %59
  %43 = phi %class.scoped_refptr* [ %60, %59 ], [ %3, %40 ]
  %44 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %43, i64 0, i32 0
  %45 = load %"class.media::VideoFrame"*, %"class.media::VideoFrame"** %44, align 8
  %46 = icmp eq %"class.media::VideoFrame"* %45, null
  br i1 %46, label %59, label %47

47:                                               ; preds = %42
  %48 = getelementptr inbounds %"class.media::VideoFrame", %"class.media::VideoFrame"* %45, i64 0, i32 1
  %49 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %48, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %50 = atomicrmw sub i32* %49, i32 1 acq_rel
  %51 = icmp eq i32 %50, 1
  br i1 %51, label %52, label %59

52:                                               ; preds = %47
  %53 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %48, i64 -2
  %54 = bitcast %"class.base::RefCountedThreadSafe"* %53 to %"class.media::VideoFrame"*
  %55 = bitcast %"class.base::RefCountedThreadSafe"* %53 to void (%"class.media::VideoFrame"*)***
  %56 = load void (%"class.media::VideoFrame"*)**, void (%"class.media::VideoFrame"*)*** %55, align 8
  %57 = getelementptr inbounds void (%"class.media::VideoFrame"*)*, void (%"class.media::VideoFrame"*)** %56, i64 1
  %58 = load void (%"class.media::VideoFrame"*)*, void (%"class.media::VideoFrame"*)** %57, align 8
  tail call void %58(%"class.media::VideoFrame"* nonnull %54) #7
  br label %59

59:                                               ; preds = %52, %47, %42
  %60 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %43, i64 1
  %61 = icmp eq %class.scoped_refptr* %60, %16
  br i1 %61, label %62, label %42

62:                                               ; preds = %59
  %63 = load %class.scoped_refptr*, %class.scoped_refptr** %2, align 8
  %64 = load i32, i32* %7, align 8
  br label %65

65:                                               ; preds = %62, %40
  %66 = phi i32 [ %64, %62 ], [ %8, %40 ]
  %67 = phi %class.scoped_refptr* [ %63, %62 ], [ %3, %40 ]
  %68 = getelementptr inbounds %"class.WTF::ConditionalDestructor", %"class.WTF::ConditionalDestructor"* %0, i64 8
  %69 = bitcast %"class.WTF::ConditionalDestructor"* %68 to i32*
  %70 = load i32, i32* %69, align 8
  %71 = zext i32 %70 to i64
  %72 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %67, i64 %71
  %73 = icmp eq i32 %66, %70
  br i1 %73, label %97, label %74

74:                                               ; preds = %65
  %75 = zext i32 %66 to i64
  %76 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %67, i64 %75
  br label %77

77:                                               ; preds = %94, %74
  %78 = phi %class.scoped_refptr* [ %95, %94 ], [ %76, %74 ]
  %79 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %78, i64 0, i32 0
  %80 = load %"class.media::VideoFrame"*, %"class.media::VideoFrame"** %79, align 8
  %81 = icmp eq %"class.media::VideoFrame"* %80, null
  br i1 %81, label %94, label %82

82:                                               ; preds = %77
  %83 = getelementptr inbounds %"class.media::VideoFrame", %"class.media::VideoFrame"* %80, i64 0, i32 1
  %84 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %83, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %85 = atomicrmw sub i32* %84, i32 1 acq_rel
  %86 = icmp eq i32 %85, 1
  br i1 %86, label %87, label %94

87:                                               ; preds = %82
  %88 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %83, i64 -2
  %89 = bitcast %"class.base::RefCountedThreadSafe"* %88 to %"class.media::VideoFrame"*
  %90 = bitcast %"class.base::RefCountedThreadSafe"* %88 to void (%"class.media::VideoFrame"*)***
  %91 = load void (%"class.media::VideoFrame"*)**, void (%"class.media::VideoFrame"*)*** %90, align 8
  %92 = getelementptr inbounds void (%"class.media::VideoFrame"*)*, void (%"class.media::VideoFrame"*)** %91, i64 1
  %93 = load void (%"class.media::VideoFrame"*)*, void (%"class.media::VideoFrame"*)** %92, align 8
  tail call void %93(%"class.media::VideoFrame"* nonnull %89) #7
  br label %94

94:                                               ; preds = %87, %82, %77
  %95 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %78, i64 1
  %96 = icmp eq %class.scoped_refptr* %95, %72
  br i1 %96, label %97, label %77

97:                                               ; preds = %37, %94, %65, %5
  %98 = bitcast %"class.WTF::ConditionalDestructor"* %0 to i8**
  %99 = load i8*, i8** %98, align 8
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %99) #7
  store %class.scoped_refptr* null, %class.scoped_refptr** %2, align 8
  br label %100

100:                                              ; preds = %1, %97
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.media::VideoFrame"* @_ZN5blink32LowLatencyVideoRendererAlgorithm6RenderEN4base9TimeTicksES2_Pm(%"class.blink::LowLatencyVideoRendererAlgorithm"*, i64, i64, i64*) local_unnamed_addr #0 align 2 {
  %5 = alloca %"class.base::TimeDelta", align 8
  %6 = alloca %"class.base::TimeDelta", align 8
  %7 = icmp ne i64* %3, null
  br i1 %7, label %8, label %9

8:                                                ; preds = %4
  store i64 0, i64* %3, align 8
  br label %9

9:                                                ; preds = %8, %4
  %10 = getelementptr inbounds %"class.blink::LowLatencyVideoRendererAlgorithm", %"class.blink::LowLatencyVideoRendererAlgorithm"* %0, i64 0, i32 1, i32 1
  %11 = load i32, i32* %10, align 8
  %12 = getelementptr inbounds %"class.blink::LowLatencyVideoRendererAlgorithm", %"class.blink::LowLatencyVideoRendererAlgorithm"* %0, i64 0, i32 1, i32 2
  %13 = load i32, i32* %12, align 4
  %14 = icmp ult i32 %13, %11
  br i1 %14, label %15, label %19

15:                                               ; preds = %9
  %16 = getelementptr inbounds %"class.blink::LowLatencyVideoRendererAlgorithm", %"class.blink::LowLatencyVideoRendererAlgorithm"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1
  %17 = load i32, i32* %16, align 8
  %18 = add i32 %17, %13
  br label %19

19:                                               ; preds = %9, %15
  %20 = phi i32 [ %18, %15 ], [ %13, %9 ]
  %21 = sub i32 %20, %11
  %22 = getelementptr inbounds %"class.blink::LowLatencyVideoRendererAlgorithm", %"class.blink::LowLatencyVideoRendererAlgorithm"* %0, i64 0, i32 6, i32 5
  %23 = load i32, i32* %22, align 4
  %24 = add i32 %21, %23
  store i32 %24, i32* %22, align 4
  %25 = getelementptr inbounds %"class.blink::LowLatencyVideoRendererAlgorithm", %"class.blink::LowLatencyVideoRendererAlgorithm"* %0, i64 0, i32 6, i32 6
  %26 = load i32, i32* %25, align 8
  %27 = add nsw i32 %26, 1
  store i32 %27, i32* %25, align 8
  %28 = getelementptr inbounds %"class.blink::LowLatencyVideoRendererAlgorithm", %"class.blink::LowLatencyVideoRendererAlgorithm"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0
  %29 = load i8, i8* %28, align 8, !range !2
  %30 = icmp eq i8 %29, 0
  br i1 %30, label %45, label %31

31:                                               ; preds = %19
  %32 = bitcast %"class.base::TimeDelta"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %32) #7
  %33 = getelementptr inbounds %"class.base::TimeDelta", %"class.base::TimeDelta"* %5, i64 0, i32 0
  %34 = getelementptr inbounds %"class.blink::LowLatencyVideoRendererAlgorithm", %"class.blink::LowLatencyVideoRendererAlgorithm"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %35 = load i64, i64* %34, align 8
  %36 = sub nsw i64 %1, %35
  store i64 %36, i64* %33, align 8
  %37 = call double @_ZNK4base9TimeDelta15InMillisecondsFEv(%"class.base::TimeDelta"* nonnull %5) #7
  %38 = bitcast %"class.base::TimeDelta"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %38) #7
  %39 = getelementptr inbounds %"class.base::TimeDelta", %"class.base::TimeDelta"* %6, i64 0, i32 0
  store i64 16666, i64* %39, align 8
  %40 = call double @_ZNK4base9TimeDelta15InMillisecondsFEv(%"class.base::TimeDelta"* nonnull %6) #7
  %41 = fdiv double %37, %40
  %42 = getelementptr inbounds %"class.blink::LowLatencyVideoRendererAlgorithm", %"class.blink::LowLatencyVideoRendererAlgorithm"* %0, i64 0, i32 3
  %43 = load double, double* %42, align 8
  %44 = fadd double %41, %43
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %38) #7
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %32) #7
  br label %45

45:                                               ; preds = %19, %31
  %46 = phi double [ %44, %31 ], [ 1.000000e+00, %19 ]
  %47 = call i64 @_ZN5blink32LowLatencyVideoRendererAlgorithm38DetermineModeAndNumberOfFramesToRenderEd(%"class.blink::LowLatencyVideoRendererAlgorithm"* %0, double %46)
  %48 = getelementptr inbounds %"class.blink::LowLatencyVideoRendererAlgorithm", %"class.blink::LowLatencyVideoRendererAlgorithm"* %0, i64 0, i32 4
  %49 = load i32, i32* %48, align 8
  %50 = icmp eq i32 %49, 1
  br i1 %50, label %51, label %61

51:                                               ; preds = %45
  %52 = fmul double %46, 2.000000e+00
  %53 = uitofp i64 %47 to double
  %54 = fsub double %52, %53
  %55 = getelementptr inbounds %"class.blink::LowLatencyVideoRendererAlgorithm", %"class.blink::LowLatencyVideoRendererAlgorithm"* %0, i64 0, i32 6, i32 2
  %56 = load i32, i32* %55, align 8
  %57 = sitofp i32 %56 to double
  %58 = fadd double %54, %57
  %59 = fptosi double %58 to i32
  store i32 %59, i32* %55, align 8
  %60 = fptoui double %52 to i64
  br label %89

61:                                               ; preds = %45
  %62 = icmp eq i64 %47, 0
  br i1 %62, label %89, label %63

63:                                               ; preds = %61
  %64 = load i32, i32* %10, align 8
  %65 = load i32, i32* %12, align 4
  %66 = icmp ult i32 %65, %64
  br i1 %66, label %67, label %71

67:                                               ; preds = %63
  %68 = getelementptr inbounds %"class.blink::LowLatencyVideoRendererAlgorithm", %"class.blink::LowLatencyVideoRendererAlgorithm"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1
  %69 = load i32, i32* %68, align 8
  %70 = add i32 %69, %65
  br label %71

71:                                               ; preds = %67, %63
  %72 = phi i32 [ %70, %67 ], [ %65, %63 ]
  %73 = sub i32 %72, %64
  %74 = zext i32 %73 to i64
  %75 = add i64 %47, 1
  %76 = icmp ugt i64 %75, %74
  %77 = getelementptr inbounds %"class.blink::LowLatencyVideoRendererAlgorithm", %"class.blink::LowLatencyVideoRendererAlgorithm"* %0, i64 0, i32 5
  br i1 %76, label %78, label %79

78:                                               ; preds = %71
  store i32 0, i32* %77, align 4
  br label %89

79:                                               ; preds = %71
  %80 = load i32, i32* %77, align 4
  %81 = add nsw i32 %80, 1
  %82 = icmp sgt i32 %80, 9
  %83 = select i1 %82, i32 0, i32 %81
  store i32 %83, i32* %77, align 4
  br i1 %82, label %84, label %89

84:                                               ; preds = %79
  %85 = fadd double %46, 1.000000e+00
  %86 = getelementptr inbounds %"class.blink::LowLatencyVideoRendererAlgorithm", %"class.blink::LowLatencyVideoRendererAlgorithm"* %0, i64 0, i32 6, i32 8
  %87 = load i32, i32* %86, align 8
  %88 = add nsw i32 %87, 1
  store i32 %88, i32* %86, align 8
  br label %89

89:                                               ; preds = %61, %78, %79, %84, %51
  %90 = phi i64 [ %60, %51 ], [ %75, %84 ], [ %47, %79 ], [ %47, %78 ], [ 0, %61 ]
  %91 = phi double [ %52, %51 ], [ %85, %84 ], [ %46, %79 ], [ %46, %78 ], [ %46, %61 ]
  %92 = load i32, i32* %10, align 8
  %93 = load i32, i32* %12, align 4
  %94 = icmp ult i32 %93, %92
  br i1 %94, label %95, label %99

95:                                               ; preds = %89
  %96 = getelementptr inbounds %"class.blink::LowLatencyVideoRendererAlgorithm", %"class.blink::LowLatencyVideoRendererAlgorithm"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1
  %97 = load i32, i32* %96, align 8
  %98 = add i32 %97, %93
  br label %99

99:                                               ; preds = %89, %95
  %100 = phi i32 [ %98, %95 ], [ %93, %89 ]
  %101 = sub i32 1, %92
  %102 = add i32 %101, %100
  %103 = zext i32 %102 to i64
  %104 = icmp ugt i64 %90, %103
  %105 = select i1 %104, i64 %103, i64 %90
  %106 = icmp ugt i64 %105, 1
  br i1 %106, label %107, label %110

107:                                              ; preds = %99
  %108 = getelementptr inbounds %"class.blink::LowLatencyVideoRendererAlgorithm", %"class.blink::LowLatencyVideoRendererAlgorithm"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %109 = getelementptr inbounds %"class.blink::LowLatencyVideoRendererAlgorithm", %"class.blink::LowLatencyVideoRendererAlgorithm"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1
  br label %112

110:                                              ; preds = %151, %99
  %111 = icmp eq i64 %105, 0
  br i1 %111, label %224, label %156

112:                                              ; preds = %154, %107
  %113 = phi i32 [ %92, %107 ], [ %155, %154 ]
  %114 = phi i64 [ 1, %107 ], [ %152, %154 ]
  %115 = load %class.scoped_refptr*, %class.scoped_refptr** %108, align 8
  %116 = zext i32 %113 to i64
  %117 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %115, i64 %116
  %118 = add i32 %113, 1
  %119 = zext i32 %118 to i64
  %120 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %115, i64 %119
  br label %121

121:                                              ; preds = %138, %112
  %122 = phi %class.scoped_refptr* [ %139, %138 ], [ %117, %112 ]
  %123 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %122, i64 0, i32 0
  %124 = load %"class.media::VideoFrame"*, %"class.media::VideoFrame"** %123, align 8
  %125 = icmp eq %"class.media::VideoFrame"* %124, null
  br i1 %125, label %138, label %126

126:                                              ; preds = %121
  %127 = getelementptr inbounds %"class.media::VideoFrame", %"class.media::VideoFrame"* %124, i64 0, i32 1
  %128 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %127, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %129 = atomicrmw sub i32* %128, i32 1 acq_rel
  %130 = icmp eq i32 %129, 1
  br i1 %130, label %131, label %138

131:                                              ; preds = %126
  %132 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %127, i64 -2
  %133 = bitcast %"class.base::RefCountedThreadSafe"* %132 to %"class.media::VideoFrame"*
  %134 = bitcast %"class.base::RefCountedThreadSafe"* %132 to void (%"class.media::VideoFrame"*)***
  %135 = load void (%"class.media::VideoFrame"*)**, void (%"class.media::VideoFrame"*)*** %134, align 8
  %136 = getelementptr inbounds void (%"class.media::VideoFrame"*)*, void (%"class.media::VideoFrame"*)** %135, i64 1
  %137 = load void (%"class.media::VideoFrame"*)*, void (%"class.media::VideoFrame"*)** %136, align 8
  call void %137(%"class.media::VideoFrame"* nonnull %133) #7
  br label %138

138:                                              ; preds = %131, %126, %121
  %139 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %122, i64 1
  %140 = icmp eq %class.scoped_refptr* %139, %120
  br i1 %140, label %141, label %121

141:                                              ; preds = %138
  %142 = load i32, i32* %10, align 8
  %143 = add i32 %142, 1
  %144 = load i32, i32* %109, align 8
  %145 = add i32 %144, -1
  %146 = icmp eq i32 %142, %145
  %147 = select i1 %146, i32 0, i32 %143
  store i32 %147, i32* %10, align 8
  br i1 %7, label %148, label %151

148:                                              ; preds = %141
  %149 = load i64, i64* %3, align 8
  %150 = add i64 %149, 1
  store i64 %150, i64* %3, align 8
  br label %151

151:                                              ; preds = %141, %148
  %152 = add nuw i64 %114, 1
  %153 = icmp ult i64 %152, %105
  br i1 %153, label %154, label %110

154:                                              ; preds = %151
  %155 = load i32, i32* %10, align 8
  br label %112

156:                                              ; preds = %110
  %157 = load i32, i32* %10, align 8
  %158 = load i32, i32* %12, align 4
  %159 = icmp eq i32 %157, %158
  br i1 %159, label %160, label %164

160:                                              ; preds = %156
  store i8 0, i8* %28, align 8
  %161 = getelementptr inbounds %"class.blink::LowLatencyVideoRendererAlgorithm", %"class.blink::LowLatencyVideoRendererAlgorithm"* %0, i64 0, i32 6, i32 4
  %162 = load i32, i32* %161, align 8
  %163 = add nsw i32 %162, 1
  store i32 %163, i32* %161, align 8
  br label %212

164:                                              ; preds = %156
  %165 = getelementptr inbounds %"class.blink::LowLatencyVideoRendererAlgorithm", %"class.blink::LowLatencyVideoRendererAlgorithm"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %166 = load %class.scoped_refptr*, %class.scoped_refptr** %165, align 8
  %167 = zext i32 %157 to i64
  %168 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %166, i64 %167
  %169 = bitcast %"class.blink::LowLatencyVideoRendererAlgorithm"* %0 to i64*
  %170 = load i64, i64* %169, align 8
  %171 = bitcast %class.scoped_refptr* %168 to i64*
  %172 = load i64, i64* %171, align 8
  store i64 %172, i64* %169, align 8
  store i64 %170, i64* %171, align 8
  %173 = load %class.scoped_refptr*, %class.scoped_refptr** %165, align 8
  %174 = load i32, i32* %10, align 8
  %175 = zext i32 %174 to i64
  %176 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %173, i64 %175
  %177 = add i32 %174, 1
  %178 = zext i32 %177 to i64
  %179 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %173, i64 %178
  br label %180

180:                                              ; preds = %197, %164
  %181 = phi %class.scoped_refptr* [ %198, %197 ], [ %176, %164 ]
  %182 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %181, i64 0, i32 0
  %183 = load %"class.media::VideoFrame"*, %"class.media::VideoFrame"** %182, align 8
  %184 = icmp eq %"class.media::VideoFrame"* %183, null
  br i1 %184, label %197, label %185

185:                                              ; preds = %180
  %186 = getelementptr inbounds %"class.media::VideoFrame", %"class.media::VideoFrame"* %183, i64 0, i32 1
  %187 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %186, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %188 = atomicrmw sub i32* %187, i32 1 acq_rel
  %189 = icmp eq i32 %188, 1
  br i1 %189, label %190, label %197

190:                                              ; preds = %185
  %191 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %186, i64 -2
  %192 = bitcast %"class.base::RefCountedThreadSafe"* %191 to %"class.media::VideoFrame"*
  %193 = bitcast %"class.base::RefCountedThreadSafe"* %191 to void (%"class.media::VideoFrame"*)***
  %194 = load void (%"class.media::VideoFrame"*)**, void (%"class.media::VideoFrame"*)*** %193, align 8
  %195 = getelementptr inbounds void (%"class.media::VideoFrame"*)*, void (%"class.media::VideoFrame"*)** %194, i64 1
  %196 = load void (%"class.media::VideoFrame"*)*, void (%"class.media::VideoFrame"*)** %195, align 8
  call void %196(%"class.media::VideoFrame"* nonnull %192) #7
  br label %197

197:                                              ; preds = %190, %185, %180
  %198 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %181, i64 1
  %199 = icmp eq %class.scoped_refptr* %198, %179
  br i1 %199, label %200, label %180

200:                                              ; preds = %197
  %201 = load i32, i32* %10, align 8
  %202 = add i32 %201, 1
  %203 = getelementptr inbounds %"class.blink::LowLatencyVideoRendererAlgorithm", %"class.blink::LowLatencyVideoRendererAlgorithm"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1
  %204 = load i32, i32* %203, align 8
  %205 = add i32 %204, -1
  %206 = icmp eq i32 %201, %205
  %207 = select i1 %206, i32 0, i32 %202
  store i32 %207, i32* %10, align 8
  %208 = load i8, i8* %28, align 8, !range !2
  %209 = icmp eq i8 %208, 0
  %210 = getelementptr inbounds %"class.blink::LowLatencyVideoRendererAlgorithm", %"class.blink::LowLatencyVideoRendererAlgorithm"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0
  store i64 %1, i64* %210, align 8
  br i1 %209, label %211, label %212

211:                                              ; preds = %200
  store i8 1, i8* %28, align 8
  br label %212

212:                                              ; preds = %160, %200, %211
  %213 = uitofp i64 %105 to double
  %214 = fsub double %91, %213
  %215 = getelementptr inbounds %"class.blink::LowLatencyVideoRendererAlgorithm", %"class.blink::LowLatencyVideoRendererAlgorithm"* %0, i64 0, i32 3
  store double %214, double* %215, align 8
  %216 = getelementptr inbounds %"class.blink::LowLatencyVideoRendererAlgorithm", %"class.blink::LowLatencyVideoRendererAlgorithm"* %0, i64 0, i32 6, i32 1
  %217 = load i32, i32* %216, align 4
  %218 = trunc i64 %105 to i32
  %219 = add i32 %218, -1
  %220 = add i32 %219, %217
  store i32 %220, i32* %216, align 4
  %221 = getelementptr inbounds %"class.blink::LowLatencyVideoRendererAlgorithm", %"class.blink::LowLatencyVideoRendererAlgorithm"* %0, i64 0, i32 6, i32 3
  %222 = load i32, i32* %221, align 4
  %223 = add nsw i32 %222, 1
  store i32 %223, i32* %221, align 4
  br label %224

224:                                              ; preds = %110, %212
  %225 = getelementptr inbounds %"class.blink::LowLatencyVideoRendererAlgorithm", %"class.blink::LowLatencyVideoRendererAlgorithm"* %0, i64 0, i32 7, i32 0, i32 0, i32 0, i32 0
  %226 = load i8, i8* %225, align 8, !range !2
  %227 = icmp eq i8 %226, 0
  %228 = getelementptr inbounds %"class.blink::LowLatencyVideoRendererAlgorithm", %"class.blink::LowLatencyVideoRendererAlgorithm"* %0, i64 0, i32 7, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0
  br i1 %227, label %237, label %229

229:                                              ; preds = %224
  %230 = load i64, i64* %228, align 8
  %231 = sub nsw i64 %1, %230
  %232 = icmp sgt i64 %231, 100000000
  br i1 %232, label %233, label %238

233:                                              ; preds = %229
  call void @_ZN5blink32LowLatencyVideoRendererAlgorithm19RecordAndResetStatsEv(%"class.blink::LowLatencyVideoRendererAlgorithm"* %0)
  %234 = load i8, i8* %225, align 8, !range !2
  %235 = icmp eq i8 %234, 0
  store i64 %1, i64* %228, align 8
  br i1 %235, label %236, label %238

236:                                              ; preds = %233
  store i8 1, i8* %225, align 8
  br label %238

237:                                              ; preds = %224
  store i64 %1, i64* %228, align 8
  store i8 1, i8* %225, align 8
  br label %238

238:                                              ; preds = %236, %233, %229, %237
  %239 = getelementptr inbounds %"class.blink::LowLatencyVideoRendererAlgorithm", %"class.blink::LowLatencyVideoRendererAlgorithm"* %0, i64 0, i32 0, i32 0
  %240 = load %"class.media::VideoFrame"*, %"class.media::VideoFrame"** %239, align 8
  %241 = icmp eq %"class.media::VideoFrame"* %240, null
  br i1 %241, label %245, label %242

242:                                              ; preds = %238
  %243 = getelementptr inbounds %"class.media::VideoFrame", %"class.media::VideoFrame"* %240, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %244 = atomicrmw add i32* %243, i32 1 monotonic
  br label %245

245:                                              ; preds = %238, %242
  ret %"class.media::VideoFrame"* %240
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

declare double @_ZNK4base9TimeDelta15InMillisecondsFEv(%"class.base::TimeDelta"*) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZN5blink32LowLatencyVideoRendererAlgorithm38DetermineModeAndNumberOfFramesToRenderEd(%"class.blink::LowLatencyVideoRendererAlgorithm"*, double) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.WTF::DequeIterator", align 8
  %4 = fptoui double %1 to i64
  %5 = getelementptr inbounds %"class.blink::LowLatencyVideoRendererAlgorithm", %"class.blink::LowLatencyVideoRendererAlgorithm"* %0, i64 0, i32 1
  %6 = getelementptr inbounds %"class.blink::LowLatencyVideoRendererAlgorithm", %"class.blink::LowLatencyVideoRendererAlgorithm"* %0, i64 0, i32 1, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = getelementptr inbounds %"class.blink::LowLatencyVideoRendererAlgorithm", %"class.blink::LowLatencyVideoRendererAlgorithm"* %0, i64 0, i32 1, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = icmp ult i32 %9, %7
  br i1 %10, label %11, label %15

11:                                               ; preds = %2
  %12 = getelementptr inbounds %"class.blink::LowLatencyVideoRendererAlgorithm", %"class.blink::LowLatencyVideoRendererAlgorithm"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1
  %13 = load i32, i32* %12, align 8
  %14 = add i32 %13, %9
  br label %15

15:                                               ; preds = %2, %11
  %16 = phi i32 [ %14, %11 ], [ %9, %2 ]
  %17 = sub i32 %16, %7
  %18 = zext i32 %17 to i64
  %19 = icmp ult i64 %4, %18
  br i1 %19, label %20, label %83

20:                                               ; preds = %15
  br i1 %10, label %21, label %25

21:                                               ; preds = %20
  %22 = getelementptr inbounds %"class.blink::LowLatencyVideoRendererAlgorithm", %"class.blink::LowLatencyVideoRendererAlgorithm"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1
  %23 = load i32, i32* %22, align 8
  %24 = add i32 %23, %9
  br label %25

25:                                               ; preds = %20, %21
  %26 = phi i32 [ %24, %21 ], [ %9, %20 ]
  %27 = sub i32 %26, %7
  %28 = icmp ugt i32 %27, 7
  br i1 %28, label %29, label %42

29:                                               ; preds = %25
  br i1 %10, label %30, label %34

30:                                               ; preds = %29
  %31 = getelementptr inbounds %"class.blink::LowLatencyVideoRendererAlgorithm", %"class.blink::LowLatencyVideoRendererAlgorithm"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1
  %32 = load i32, i32* %31, align 8
  %33 = add i32 %32, %9
  br label %34

34:                                               ; preds = %29, %30
  %35 = phi i32 [ %33, %30 ], [ %9, %29 ]
  %36 = sub i32 %35, %7
  %37 = zext i32 %36 to i64
  %38 = getelementptr inbounds %"class.blink::LowLatencyVideoRendererAlgorithm", %"class.blink::LowLatencyVideoRendererAlgorithm"* %0, i64 0, i32 4
  store i32 0, i32* %38, align 8
  %39 = getelementptr inbounds %"class.blink::LowLatencyVideoRendererAlgorithm", %"class.blink::LowLatencyVideoRendererAlgorithm"* %0, i64 0, i32 6, i32 9
  %40 = load i32, i32* %39, align 4
  %41 = add nsw i32 %40, 1
  store i32 %41, i32* %39, align 4
  br label %88

42:                                               ; preds = %25
  %43 = bitcast %"class.WTF::DequeIterator"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %43) #7
  %44 = getelementptr inbounds %"class.WTF::DequeIterator", %"class.WTF::DequeIterator"* %3, i64 0, i32 0, i32 0
  store %"class.WTF::Deque"* %5, %"class.WTF::Deque"** %44, align 8, !alias.scope !3
  %45 = getelementptr inbounds %"class.WTF::DequeIterator", %"class.WTF::DequeIterator"* %3, i64 0, i32 0, i32 1
  store i32 %9, i32* %45, align 8, !alias.scope !3
  %46 = icmp eq i32 %9, 0
  br i1 %46, label %47, label %50

47:                                               ; preds = %42
  %48 = getelementptr inbounds %"class.blink::LowLatencyVideoRendererAlgorithm", %"class.blink::LowLatencyVideoRendererAlgorithm"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1
  %49 = load i32, i32* %48, align 8
  br label %50

50:                                               ; preds = %42, %47
  %51 = phi i32 [ %49, %47 ], [ %9, %42 ]
  %52 = add i32 %51, -1
  store i32 %52, i32* %45, align 8
  %53 = call dereferenceable(8) %class.scoped_refptr* @_ZNK3WTF13DequeIteratorI13scoped_refptrIN5media10VideoFrameEELj0ENS_18PartitionAllocatorEEdeEv(%"class.WTF::DequeIterator"* nonnull %3) #7
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %43) #7
  %54 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %53, i64 0, i32 0
  %55 = load %"class.media::VideoFrame"*, %"class.media::VideoFrame"** %54, align 8
  %56 = getelementptr inbounds %"class.media::VideoFrame", %"class.media::VideoFrame"* %55, i64 0, i32 19, i32 32, i32 0, i32 0, i32 0, i32 0
  %57 = load i8, i8* %56, align 4, !range !2
  %58 = icmp eq i8 %57, 0
  br i1 %58, label %62, label %59

59:                                               ; preds = %50
  %60 = getelementptr inbounds %"class.media::VideoFrame", %"class.media::VideoFrame"* %55, i64 0, i32 19, i32 32, i32 0, i32 0, i32 0, i32 1, i32 0
  %61 = load i32, i32* %60, align 4
  br label %62

62:                                               ; preds = %50, %59
  %63 = phi i32 [ %61, %59 ], [ 6, %50 ]
  %64 = load i32, i32* %6, align 8
  %65 = load i32, i32* %8, align 4
  %66 = icmp ult i32 %65, %64
  br i1 %66, label %67, label %71

67:                                               ; preds = %62
  %68 = getelementptr inbounds %"class.blink::LowLatencyVideoRendererAlgorithm", %"class.blink::LowLatencyVideoRendererAlgorithm"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1
  %69 = load i32, i32* %68, align 8
  %70 = add i32 %69, %65
  br label %71

71:                                               ; preds = %62, %67
  %72 = phi i32 [ %70, %67 ], [ %65, %62 ]
  %73 = trunc i64 %4 to i32
  %74 = sub i32 1, %73
  %75 = sub i32 %74, %64
  %76 = add i32 %75, %72
  %77 = icmp slt i32 %63, %76
  br i1 %77, label %78, label %88

78:                                               ; preds = %71
  %79 = getelementptr inbounds %"class.blink::LowLatencyVideoRendererAlgorithm", %"class.blink::LowLatencyVideoRendererAlgorithm"* %0, i64 0, i32 4
  store i32 1, i32* %79, align 8
  %80 = getelementptr inbounds %"class.blink::LowLatencyVideoRendererAlgorithm", %"class.blink::LowLatencyVideoRendererAlgorithm"* %0, i64 0, i32 6, i32 7
  %81 = load i32, i32* %80, align 4
  %82 = add nsw i32 %81, 1
  store i32 %82, i32* %80, align 4
  br label %88

83:                                               ; preds = %15
  %84 = getelementptr inbounds %"class.blink::LowLatencyVideoRendererAlgorithm", %"class.blink::LowLatencyVideoRendererAlgorithm"* %0, i64 0, i32 4
  %85 = load i32, i32* %84, align 8
  %86 = icmp eq i32 %85, 1
  br i1 %86, label %87, label %88

87:                                               ; preds = %83
  store i32 0, i32* %84, align 8
  br label %88

88:                                               ; preds = %71, %78, %34, %83, %87
  %89 = phi i64 [ %4, %87 ], [ %4, %83 ], [ %37, %34 ], [ %4, %78 ], [ %4, %71 ]
  ret i64 %89
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden zeroext i1 @_ZN5blink32LowLatencyVideoRendererAlgorithm22ReduceSteadyStateQueueEm(%"class.blink::LowLatencyVideoRendererAlgorithm"* nocapture, i64) local_unnamed_addr #3 align 2 {
  %3 = icmp eq i64 %1, 0
  br i1 %3, label %27, label %4

4:                                                ; preds = %2
  %5 = getelementptr inbounds %"class.blink::LowLatencyVideoRendererAlgorithm", %"class.blink::LowLatencyVideoRendererAlgorithm"* %0, i64 0, i32 1, i32 1
  %6 = load i32, i32* %5, align 8
  %7 = getelementptr inbounds %"class.blink::LowLatencyVideoRendererAlgorithm", %"class.blink::LowLatencyVideoRendererAlgorithm"* %0, i64 0, i32 1, i32 2
  %8 = load i32, i32* %7, align 4
  %9 = icmp ult i32 %8, %6
  br i1 %9, label %10, label %14

10:                                               ; preds = %4
  %11 = getelementptr inbounds %"class.blink::LowLatencyVideoRendererAlgorithm", %"class.blink::LowLatencyVideoRendererAlgorithm"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1
  %12 = load i32, i32* %11, align 8
  %13 = add i32 %12, %8
  br label %14

14:                                               ; preds = %4, %10
  %15 = phi i32 [ %13, %10 ], [ %8, %4 ]
  %16 = sub i32 %15, %6
  %17 = zext i32 %16 to i64
  %18 = add i64 %1, 1
  %19 = icmp ugt i64 %18, %17
  %20 = getelementptr inbounds %"class.blink::LowLatencyVideoRendererAlgorithm", %"class.blink::LowLatencyVideoRendererAlgorithm"* %0, i64 0, i32 5
  br i1 %19, label %26, label %21

21:                                               ; preds = %14
  %22 = load i32, i32* %20, align 4
  %23 = add nsw i32 %22, 1
  %24 = icmp sgt i32 %22, 9
  %25 = select i1 %24, i32 0, i32 %23
  store i32 %25, i32* %20, align 4
  ret i1 %24

26:                                               ; preds = %14
  store i32 0, i32* %20, align 4
  br label %27

27:                                               ; preds = %2, %26
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink32LowLatencyVideoRendererAlgorithm45SelectNextAvailableFrameAndUpdateLastDeadlineEN4base9TimeTicksE(%"class.blink::LowLatencyVideoRendererAlgorithm"* nocapture, i64) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::LowLatencyVideoRendererAlgorithm", %"class.blink::LowLatencyVideoRendererAlgorithm"* %0, i64 0, i32 1, i32 1
  %4 = load i32, i32* %3, align 8
  %5 = getelementptr inbounds %"class.blink::LowLatencyVideoRendererAlgorithm", %"class.blink::LowLatencyVideoRendererAlgorithm"* %0, i64 0, i32 1, i32 2
  %6 = load i32, i32* %5, align 4
  %7 = icmp eq i32 %4, %6
  br i1 %7, label %8, label %13

8:                                                ; preds = %2
  %9 = getelementptr inbounds %"class.blink::LowLatencyVideoRendererAlgorithm", %"class.blink::LowLatencyVideoRendererAlgorithm"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %9, align 8
  %10 = getelementptr inbounds %"class.blink::LowLatencyVideoRendererAlgorithm", %"class.blink::LowLatencyVideoRendererAlgorithm"* %0, i64 0, i32 6, i32 4
  %11 = load i32, i32* %10, align 8
  %12 = add nsw i32 %11, 1
  store i32 %12, i32* %10, align 8
  br label %62

13:                                               ; preds = %2
  %14 = getelementptr inbounds %"class.blink::LowLatencyVideoRendererAlgorithm", %"class.blink::LowLatencyVideoRendererAlgorithm"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %15 = load %class.scoped_refptr*, %class.scoped_refptr** %14, align 8
  %16 = zext i32 %4 to i64
  %17 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %15, i64 %16
  %18 = bitcast %"class.blink::LowLatencyVideoRendererAlgorithm"* %0 to i64*
  %19 = load i64, i64* %18, align 8
  %20 = bitcast %class.scoped_refptr* %17 to i64*
  %21 = load i64, i64* %20, align 8
  store i64 %21, i64* %18, align 8
  store i64 %19, i64* %20, align 8
  %22 = load %class.scoped_refptr*, %class.scoped_refptr** %14, align 8
  %23 = load i32, i32* %3, align 8
  %24 = zext i32 %23 to i64
  %25 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %22, i64 %24
  %26 = add i32 %23, 1
  %27 = zext i32 %26 to i64
  %28 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %22, i64 %27
  br label %29

29:                                               ; preds = %46, %13
  %30 = phi %class.scoped_refptr* [ %47, %46 ], [ %25, %13 ]
  %31 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %30, i64 0, i32 0
  %32 = load %"class.media::VideoFrame"*, %"class.media::VideoFrame"** %31, align 8
  %33 = icmp eq %"class.media::VideoFrame"* %32, null
  br i1 %33, label %46, label %34

34:                                               ; preds = %29
  %35 = getelementptr inbounds %"class.media::VideoFrame", %"class.media::VideoFrame"* %32, i64 0, i32 1
  %36 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %35, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %37 = atomicrmw sub i32* %36, i32 1 acq_rel
  %38 = icmp eq i32 %37, 1
  br i1 %38, label %39, label %46

39:                                               ; preds = %34
  %40 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %35, i64 -2
  %41 = bitcast %"class.base::RefCountedThreadSafe"* %40 to %"class.media::VideoFrame"*
  %42 = bitcast %"class.base::RefCountedThreadSafe"* %40 to void (%"class.media::VideoFrame"*)***
  %43 = load void (%"class.media::VideoFrame"*)**, void (%"class.media::VideoFrame"*)*** %42, align 8
  %44 = getelementptr inbounds void (%"class.media::VideoFrame"*)*, void (%"class.media::VideoFrame"*)** %43, i64 1
  %45 = load void (%"class.media::VideoFrame"*)*, void (%"class.media::VideoFrame"*)** %44, align 8
  tail call void %45(%"class.media::VideoFrame"* nonnull %41) #7
  br label %46

46:                                               ; preds = %39, %34, %29
  %47 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %30, i64 1
  %48 = icmp eq %class.scoped_refptr* %47, %28
  br i1 %48, label %49, label %29

49:                                               ; preds = %46
  %50 = load i32, i32* %3, align 8
  %51 = add i32 %50, 1
  %52 = getelementptr inbounds %"class.blink::LowLatencyVideoRendererAlgorithm", %"class.blink::LowLatencyVideoRendererAlgorithm"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1
  %53 = load i32, i32* %52, align 8
  %54 = add i32 %53, -1
  %55 = icmp eq i32 %50, %54
  %56 = select i1 %55, i32 0, i32 %51
  store i32 %56, i32* %3, align 8
  %57 = getelementptr inbounds %"class.blink::LowLatencyVideoRendererAlgorithm", %"class.blink::LowLatencyVideoRendererAlgorithm"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0
  %58 = load i8, i8* %57, align 8, !range !2
  %59 = icmp eq i8 %58, 0
  %60 = getelementptr inbounds %"class.blink::LowLatencyVideoRendererAlgorithm", %"class.blink::LowLatencyVideoRendererAlgorithm"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0
  store i64 %1, i64* %60, align 8
  br i1 %59, label %61, label %62

61:                                               ; preds = %49
  store i8 1, i8* %57, align 8
  br label %62

62:                                               ; preds = %61, %49, %8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink32LowLatencyVideoRendererAlgorithm19RecordAndResetStatsEv(%"class.blink::LowLatencyVideoRendererAlgorithm"* nocapture) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.std::__1::basic_string", align 8
  %4 = alloca %"class.std::__1::basic_string", align 8
  %5 = alloca %"class.std::__1::basic_string", align 8
  %6 = alloca %"class.std::__1::basic_string", align 8
  %7 = alloca %"class.std::__1::basic_string", align 8
  %8 = alloca %"class.logging::CheckOpResult", align 8
  %9 = alloca %"class.logging::CheckError", align 8
  %10 = alloca %"class.std::__1::basic_string", align 8
  %11 = alloca %"class.std::__1::basic_string", align 8
  %12 = alloca %"class.std::__1::basic_string", align 8
  %13 = alloca %"class.std::__1::basic_string", align 8
  %14 = tail call i8* @_Znwm(i64 48) #8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %14, i8* align 1 getelementptr inbounds ([33 x i8], [33 x i8]* @.str, i64 0, i64 0), i64 32, i1 false) #7
  %15 = getelementptr inbounds i8, i8* %14, i64 32
  store i8 0, i8* %15, align 1
  %16 = bitcast %"class.std::__1::basic_string"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %16) #7
  %17 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %18 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %19 = tail call i8* @_Znwm(i64 48) #8
  store i8* %19, i8** %17, align 8, !alias.scope !6
  %20 = bitcast i64* %18 to <2 x i64>*
  store <2 x i64> <i64 32, i64 -9223372036854775760>, <2 x i64>* %20, align 8, !alias.scope !6
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %19, i8* nonnull align 1 %14, i64 32, i1 false) #7
  %21 = getelementptr inbounds i8, i8* %19, i64 32
  store i8 0, i8* %21, align 1
  %22 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKcm(%"class.std::__1::basic_string"* nonnull %3, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.1, i64 0, i64 0), i64 12) #7
  %23 = getelementptr inbounds %"class.blink::LowLatencyVideoRendererAlgorithm", %"class.blink::LowLatencyVideoRendererAlgorithm"* %0, i64 0, i32 6
  %24 = getelementptr inbounds %"struct.blink::LowLatencyVideoRendererAlgorithm::Stats", %"struct.blink::LowLatencyVideoRendererAlgorithm::Stats"* %23, i64 0, i32 0
  %25 = load i32, i32* %24, align 8
  call void @_ZN4base23UmaHistogramCounts10000ERKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEEi(%"class.std::__1::basic_string"* nonnull dereferenceable(24) %3, i32 %25) #7
  %26 = bitcast %"class.std::__1::basic_string"* %3 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %27 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %26, i64 0, i32 1, i32 0
  %28 = load i8, i8* %27, align 1
  %29 = icmp slt i8 %28, 0
  br i1 %29, label %30, label %32

30:                                               ; preds = %1
  %31 = load i8*, i8** %17, align 8
  call void @_ZdlPv(i8* %31) #8
  br label %32

32:                                               ; preds = %1, %30
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %16) #7
  %33 = load i32, i32* %24, align 8
  %34 = icmp sgt i32 %33, 0
  br i1 %34, label %35, label %74

35:                                               ; preds = %32
  %36 = bitcast %"class.std::__1::basic_string"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %36) #7
  %37 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %38 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %39 = call i8* @_Znwm(i64 64) #8
  store i8* %39, i8** %37, align 8, !alias.scope !9
  %40 = bitcast i64* %38 to <2 x i64>*
  store <2 x i64> <i64 32, i64 -9223372036854775744>, <2 x i64>* %40, align 8, !alias.scope !9
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %39, i8* nonnull align 1 %14, i64 32, i1 false) #7
  %41 = getelementptr inbounds i8, i8* %39, i64 32
  store i8 0, i8* %41, align 1
  %42 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKcm(%"class.std::__1::basic_string"* nonnull %4, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.2, i64 0, i64 0), i64 22) #7
  %43 = getelementptr inbounds %"class.blink::LowLatencyVideoRendererAlgorithm", %"class.blink::LowLatencyVideoRendererAlgorithm"* %0, i64 0, i32 6, i32 1
  %44 = load i32, i32* %43, align 4
  %45 = mul nsw i32 %44, 1000
  %46 = load i32, i32* %24, align 8
  %47 = sdiv i32 %45, %46
  call void @_ZN4base22UmaHistogramCounts1000ERKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEEi(%"class.std::__1::basic_string"* nonnull dereferenceable(24) %4, i32 %47) #7
  %48 = bitcast %"class.std::__1::basic_string"* %4 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %49 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %48, i64 0, i32 1, i32 0
  %50 = load i8, i8* %49, align 1
  %51 = icmp slt i8 %50, 0
  br i1 %51, label %52, label %54

52:                                               ; preds = %35
  %53 = load i8*, i8** %37, align 8
  call void @_ZdlPv(i8* %53) #8
  br label %54

54:                                               ; preds = %52, %35
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %36) #7
  %55 = bitcast %"class.std::__1::basic_string"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %55) #7
  %56 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %57 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %58 = call i8* @_Znwm(i64 64) #8
  store i8* %58, i8** %56, align 8, !alias.scope !12
  %59 = bitcast i64* %57 to <2 x i64>*
  store <2 x i64> <i64 32, i64 -9223372036854775744>, <2 x i64>* %59, align 8, !alias.scope !12
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %58, i8* nonnull align 1 %14, i64 32, i1 false) #7
  %60 = getelementptr inbounds i8, i8* %58, i64 32
  store i8 0, i8* %60, align 1
  %61 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKcm(%"class.std::__1::basic_string"* nonnull %5, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.3, i64 0, i64 0), i64 22) #7
  %62 = getelementptr inbounds %"class.blink::LowLatencyVideoRendererAlgorithm", %"class.blink::LowLatencyVideoRendererAlgorithm"* %0, i64 0, i32 6, i32 2
  %63 = load i32, i32* %62, align 8
  %64 = mul nsw i32 %63, 1000
  %65 = load i32, i32* %24, align 8
  %66 = sdiv i32 %64, %65
  call void @_ZN4base22UmaHistogramCounts1000ERKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEEi(%"class.std::__1::basic_string"* nonnull dereferenceable(24) %5, i32 %66) #7
  %67 = bitcast %"class.std::__1::basic_string"* %5 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %68 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %67, i64 0, i32 1, i32 0
  %69 = load i8, i8* %68, align 1
  %70 = icmp slt i8 %69, 0
  br i1 %70, label %71, label %73

71:                                               ; preds = %54
  %72 = load i8*, i8** %56, align 8
  call void @_ZdlPv(i8* %72) #8
  br label %73

73:                                               ; preds = %54, %71
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %55) #7
  br label %74

74:                                               ; preds = %32, %73
  %75 = bitcast %"class.std::__1::basic_string"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %75) #7
  %76 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %77 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %78 = call i8* @_Znwm(i64 64) #8
  store i8* %78, i8** %76, align 8, !alias.scope !15
  %79 = bitcast i64* %77 to <2 x i64>*
  store <2 x i64> <i64 32, i64 -9223372036854775744>, <2 x i64>* %79, align 8, !alias.scope !15
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %78, i8* nonnull align 1 %14, i64 32, i1 false) #7
  %80 = getelementptr inbounds i8, i8* %78, i64 32
  store i8 0, i8* %80, align 1
  %81 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKcm(%"class.std::__1::basic_string"* nonnull %6, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.4, i64 0, i64 0), i64 22) #7
  %82 = getelementptr inbounds %"class.blink::LowLatencyVideoRendererAlgorithm", %"class.blink::LowLatencyVideoRendererAlgorithm"* %0, i64 0, i32 6, i32 3
  %83 = load i32, i32* %82, align 4
  call void @_ZN4base23UmaHistogramCounts10000ERKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEEi(%"class.std::__1::basic_string"* nonnull dereferenceable(24) %6, i32 %83) #7
  %84 = bitcast %"class.std::__1::basic_string"* %6 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %85 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %84, i64 0, i32 1, i32 0
  %86 = load i8, i8* %85, align 1
  %87 = icmp slt i8 %86, 0
  br i1 %87, label %88, label %90

88:                                               ; preds = %74
  %89 = load i8*, i8** %76, align 8
  call void @_ZdlPv(i8* %89) #8
  br label %90

90:                                               ; preds = %74, %88
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %75) #7
  %91 = load i32, i32* %82, align 4
  %92 = icmp sgt i32 %91, 0
  br i1 %92, label %93, label %113

93:                                               ; preds = %90
  %94 = bitcast %"class.std::__1::basic_string"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %94) #7
  %95 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %96 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %97 = call i8* @_Znwm(i64 64) #8
  store i8* %97, i8** %95, align 8, !alias.scope !18
  %98 = bitcast i64* %96 to <2 x i64>*
  store <2 x i64> <i64 32, i64 -9223372036854775744>, <2 x i64>* %98, align 8, !alias.scope !18
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %97, i8* nonnull align 1 %14, i64 32, i1 false) #7
  %99 = getelementptr inbounds i8, i8* %97, i64 32
  store i8 0, i8* %99, align 1
  %100 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKcm(%"class.std::__1::basic_string"* nonnull %7, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.5, i64 0, i64 0), i64 27) #7
  %101 = getelementptr inbounds %"class.blink::LowLatencyVideoRendererAlgorithm", %"class.blink::LowLatencyVideoRendererAlgorithm"* %0, i64 0, i32 6, i32 4
  %102 = load i32, i32* %101, align 8
  %103 = mul nsw i32 %102, 1000
  %104 = load i32, i32* %82, align 4
  %105 = sdiv i32 %103, %104
  call void @_ZN4base22UmaHistogramCounts1000ERKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEEi(%"class.std::__1::basic_string"* nonnull dereferenceable(24) %7, i32 %105) #7
  %106 = bitcast %"class.std::__1::basic_string"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %107 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %106, i64 0, i32 1, i32 0
  %108 = load i8, i8* %107, align 1
  %109 = icmp slt i8 %108, 0
  br i1 %109, label %110, label %112

110:                                              ; preds = %93
  %111 = load i8*, i8** %95, align 8
  call void @_ZdlPv(i8* %111) #8
  br label %112

112:                                              ; preds = %93, %110
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %94) #7
  br label %113

113:                                              ; preds = %112, %90
  %114 = bitcast %"class.logging::CheckOpResult"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %114) #7
  %115 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %8, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %115, align 8
  %116 = getelementptr inbounds %"class.blink::LowLatencyVideoRendererAlgorithm", %"class.blink::LowLatencyVideoRendererAlgorithm"* %0, i64 0, i32 6, i32 6
  %117 = load i32, i32* %116, align 8
  %118 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %118)
  %119 = icmp sgt i32 %117, 0
  br i1 %119, label %120, label %121

120:                                              ; preds = %113
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %118)
  store i8* null, i8** %115, align 8
  br label %130

121:                                              ; preds = %113
  %122 = call i8* @_ZN7logging15CheckOpValueStrEi(i32 %117) #7
  %123 = call i8* @_ZN7logging15CheckOpValueStrEi(i32 0) #7
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.6, i64 0, i64 0), i8* %122, i8* %123) #7
  %124 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %125 = load i8*, i8** %124, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %118)
  store i8* %125, i8** %115, align 8
  %126 = icmp eq i8* %125, null
  br i1 %126, label %130, label %127

127:                                              ; preds = %121
  %128 = bitcast %"class.logging::CheckError"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %128) #7
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %9, i8* getelementptr inbounds ([93 x i8], [93 x i8]* @.str.7, i64 0, i64 0), i32 230, %"class.logging::CheckOpResult"* nonnull %8) #7
  %129 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %9) #7
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %9) #7
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %128) #7
  br label %130

130:                                              ; preds = %127, %121, %120
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %114) #7
  %131 = bitcast %"class.std::__1::basic_string"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %131) #7
  %132 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %10, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %133 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %10, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %134 = call i8* @_Znwm(i64 64) #8
  store i8* %134, i8** %132, align 8, !alias.scope !21
  %135 = bitcast i64* %133 to <2 x i64>*
  store <2 x i64> <i64 32, i64 -9223372036854775744>, <2 x i64>* %135, align 8, !alias.scope !21
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %134, i8* nonnull align 1 %14, i64 32, i1 false) #7
  %136 = getelementptr inbounds i8, i8* %134, i64 32
  store i8 0, i8* %136, align 1
  %137 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKcm(%"class.std::__1::basic_string"* nonnull %10, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.8, i64 0, i64 0), i64 22) #7
  %138 = getelementptr inbounds %"class.blink::LowLatencyVideoRendererAlgorithm", %"class.blink::LowLatencyVideoRendererAlgorithm"* %0, i64 0, i32 6, i32 5
  %139 = load i32, i32* %138, align 4
  %140 = mul nsw i32 %139, 10
  %141 = load i32, i32* %116, align 8
  %142 = sdiv i32 %140, %141
  call void @_ZN4base22UmaHistogramCounts1000ERKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEEi(%"class.std::__1::basic_string"* nonnull dereferenceable(24) %10, i32 %142) #7
  %143 = bitcast %"class.std::__1::basic_string"* %10 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %144 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %143, i64 0, i32 1, i32 0
  %145 = load i8, i8* %144, align 1
  %146 = icmp slt i8 %145, 0
  br i1 %146, label %147, label %149

147:                                              ; preds = %130
  %148 = load i8*, i8** %132, align 8
  call void @_ZdlPv(i8* %148) #8
  br label %149

149:                                              ; preds = %147, %130
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %131) #7
  %150 = bitcast %"class.std::__1::basic_string"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %150) #7
  %151 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %11, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %152 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %11, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %153 = call i8* @_Znwm(i64 64) #8
  store i8* %153, i8** %151, align 8, !alias.scope !24
  %154 = bitcast i64* %152 to <2 x i64>*
  store <2 x i64> <i64 32, i64 -9223372036854775744>, <2 x i64>* %154, align 8, !alias.scope !24
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %153, i8* nonnull align 1 %14, i64 32, i1 false) #7
  %155 = getelementptr inbounds i8, i8* %153, i64 32
  store i8 0, i8* %155, align 1
  %156 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKcm(%"class.std::__1::basic_string"* nonnull %11, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.9, i64 0, i64 0), i64 20) #7
  %157 = getelementptr inbounds %"class.blink::LowLatencyVideoRendererAlgorithm", %"class.blink::LowLatencyVideoRendererAlgorithm"* %0, i64 0, i32 6, i32 7
  %158 = load i32, i32* %157, align 4
  call void @_ZN4base23UmaHistogramCounts10000ERKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEEi(%"class.std::__1::basic_string"* nonnull dereferenceable(24) %11, i32 %158) #7
  %159 = bitcast %"class.std::__1::basic_string"* %11 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %160 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %159, i64 0, i32 1, i32 0
  %161 = load i8, i8* %160, align 1
  %162 = icmp slt i8 %161, 0
  br i1 %162, label %163, label %165

163:                                              ; preds = %149
  %164 = load i8*, i8** %151, align 8
  call void @_ZdlPv(i8* %164) #8
  br label %165

165:                                              ; preds = %163, %149
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %150) #7
  %166 = bitcast %"class.std::__1::basic_string"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %166) #7
  %167 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %12, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %168 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %12, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %169 = call i8* @_Znwm(i64 64) #8
  store i8* %169, i8** %167, align 8, !alias.scope !27
  %170 = bitcast i64* %168 to <2 x i64>*
  store <2 x i64> <i64 32, i64 -9223372036854775744>, <2 x i64>* %170, align 8, !alias.scope !27
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %169, i8* nonnull align 1 %14, i64 32, i1 false) #7
  %171 = getelementptr inbounds i8, i8* %169, i64 32
  store i8 0, i8* %171, align 1
  %172 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKcm(%"class.std::__1::basic_string"* nonnull %12, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.10, i64 0, i64 0), i64 23) #7
  %173 = getelementptr inbounds %"class.blink::LowLatencyVideoRendererAlgorithm", %"class.blink::LowLatencyVideoRendererAlgorithm"* %0, i64 0, i32 6, i32 8
  %174 = load i32, i32* %173, align 8
  call void @_ZN4base22UmaHistogramCounts1000ERKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEEi(%"class.std::__1::basic_string"* nonnull dereferenceable(24) %12, i32 %174) #7
  %175 = bitcast %"class.std::__1::basic_string"* %12 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %176 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %175, i64 0, i32 1, i32 0
  %177 = load i8, i8* %176, align 1
  %178 = icmp slt i8 %177, 0
  br i1 %178, label %179, label %181

179:                                              ; preds = %165
  %180 = load i8*, i8** %167, align 8
  call void @_ZdlPv(i8* %180) #8
  br label %181

181:                                              ; preds = %179, %165
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %166) #7
  %182 = bitcast %"class.std::__1::basic_string"* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %182) #7
  %183 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %13, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %184 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %13, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %185 = call i8* @_Znwm(i64 64) #8
  store i8* %185, i8** %183, align 8, !alias.scope !30
  %186 = bitcast i64* %184 to <2 x i64>*
  store <2 x i64> <i64 32, i64 -9223372036854775744>, <2 x i64>* %186, align 8, !alias.scope !30
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %185, i8* nonnull align 1 %14, i64 32, i1 false) #7
  %187 = getelementptr inbounds i8, i8* %185, i64 32
  store i8 0, i8* %187, align 1
  %188 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKcm(%"class.std::__1::basic_string"* nonnull %13, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.11, i64 0, i64 0), i64 22) #7
  %189 = getelementptr inbounds %"class.blink::LowLatencyVideoRendererAlgorithm", %"class.blink::LowLatencyVideoRendererAlgorithm"* %0, i64 0, i32 6, i32 9
  %190 = load i32, i32* %189, align 4
  call void @_ZN4base22UmaHistogramCounts1000ERKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEEi(%"class.std::__1::basic_string"* nonnull dereferenceable(24) %13, i32 %190) #7
  %191 = bitcast %"class.std::__1::basic_string"* %13 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %192 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %191, i64 0, i32 1, i32 0
  %193 = load i8, i8* %192, align 1
  %194 = icmp slt i8 %193, 0
  br i1 %194, label %195, label %197

195:                                              ; preds = %181
  %196 = load i8*, i8** %183, align 8
  call void @_ZdlPv(i8* %196) #8
  br label %197

197:                                              ; preds = %181, %195
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %182) #7
  %198 = bitcast %"struct.blink::LowLatencyVideoRendererAlgorithm::Stats"* %23 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %198, i8 0, i64 40, i1 false)
  call void @_ZdlPv(i8* nonnull %14) #8
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink32LowLatencyVideoRendererAlgorithm12EnqueueFrameE13scoped_refptrIN5media10VideoFrameEE(%"class.blink::LowLatencyVideoRendererAlgorithm"*, %"class.media::VideoFrame"*) local_unnamed_addr #0 align 2 {
  %3 = ptrtoint %"class.media::VideoFrame"* %1 to i64
  %4 = getelementptr inbounds %"class.blink::LowLatencyVideoRendererAlgorithm", %"class.blink::LowLatencyVideoRendererAlgorithm"* %0, i64 0, i32 1
  %5 = getelementptr inbounds %"class.blink::LowLatencyVideoRendererAlgorithm", %"class.blink::LowLatencyVideoRendererAlgorithm"* %0, i64 0, i32 1, i32 1
  %6 = load i32, i32* %5, align 8
  %7 = icmp eq i32 %6, 0
  %8 = getelementptr inbounds %"class.blink::LowLatencyVideoRendererAlgorithm", %"class.blink::LowLatencyVideoRendererAlgorithm"* %0, i64 0, i32 1, i32 2
  %9 = load i32, i32* %8, align 4
  br i1 %7, label %13, label %10

10:                                               ; preds = %2
  %11 = add i32 %9, 1
  %12 = icmp eq i32 %11, %6
  br i1 %12, label %22, label %24

13:                                               ; preds = %2
  %14 = icmp eq i32 %9, 0
  %15 = getelementptr inbounds %"class.blink::LowLatencyVideoRendererAlgorithm", %"class.blink::LowLatencyVideoRendererAlgorithm"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1
  %16 = load i32, i32* %15, align 8
  br i1 %14, label %20, label %17

17:                                               ; preds = %13
  %18 = add i32 %16, -1
  %19 = icmp eq i32 %9, %18
  br i1 %19, label %22, label %24

20:                                               ; preds = %13
  %21 = icmp eq i32 %16, 0
  br i1 %21, label %22, label %24

22:                                               ; preds = %20, %17, %10
  tail call void @_ZN3WTF5DequeI13scoped_refptrIN5media10VideoFrameEELj0ENS_18PartitionAllocatorEE14ExpandCapacityEv(%"class.WTF::Deque"* %4) #7
  %23 = load i32, i32* %8, align 4
  br label %24

24:                                               ; preds = %22, %20, %17, %10
  %25 = phi i32 [ %9, %10 ], [ %9, %17 ], [ 0, %20 ], [ %23, %22 ]
  %26 = getelementptr inbounds %"class.WTF::Deque", %"class.WTF::Deque"* %4, i64 0, i32 0, i32 0, i32 0, i32 0
  %27 = load %class.scoped_refptr*, %class.scoped_refptr** %26, align 8
  %28 = zext i32 %25 to i64
  %29 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %27, i64 %28
  %30 = getelementptr inbounds %"class.blink::LowLatencyVideoRendererAlgorithm", %"class.blink::LowLatencyVideoRendererAlgorithm"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1
  %31 = load i32, i32* %30, align 8
  %32 = add i32 %31, -1
  %33 = icmp eq i32 %25, %32
  %34 = add i32 %25, 1
  %35 = select i1 %33, i32 0, i32 %34
  store i32 %35, i32* %8, align 4
  %36 = bitcast %class.scoped_refptr* %29 to i64*
  store i64 %3, i64* %36, align 8
  %37 = getelementptr inbounds %"class.blink::LowLatencyVideoRendererAlgorithm", %"class.blink::LowLatencyVideoRendererAlgorithm"* %0, i64 0, i32 6, i32 0
  %38 = load i32, i32* %37, align 8
  %39 = add nsw i32 %38, 1
  store i32 %39, i32* %37, align 8
  ret void
}

declare void @_ZN4base23UmaHistogramCounts10000ERKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEEi(%"class.std::__1::basic_string"* dereferenceable(24), i32) local_unnamed_addr #2

declare void @_ZN4base22UmaHistogramCounts1000ERKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEEi(%"class.std::__1::basic_string"* dereferenceable(24), i32) local_unnamed_addr #2

declare void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* sret, i8*, i32, %"class.logging::CheckOpResult"*) local_unnamed_addr #2

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #4

declare void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8*) local_unnamed_addr #2

declare i8* @_ZN7logging15CheckOpValueStrEi(i32) local_unnamed_addr #2

declare void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"*, i8*, i8*, i8*) unnamed_addr #2

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #5

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #6

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF5DequeI13scoped_refptrIN5media10VideoFrameEELj0ENS_18PartitionAllocatorEE14ExpandCapacityEv(%"class.WTF::Deque"*) local_unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.WTF::Deque", %"class.WTF::Deque"* %0, i64 0, i32 0, i32 0, i32 0, i32 1
  %3 = load i32, i32* %2, align 8
  %4 = getelementptr inbounds %"class.WTF::Deque", %"class.WTF::Deque"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %5 = load %class.scoped_refptr*, %class.scoped_refptr** %4, align 8
  %6 = lshr i32 %3, 2
  %7 = add i32 %3, 1
  %8 = add i32 %7, %6
  %9 = icmp ugt i32 %8, 16
  %10 = select i1 %9, i32 %8, i32 16
  %11 = zext i32 %10 to i64
  %12 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeI13scoped_refptrIN5media10VideoFrameEEEEmm(i64 %11) #7
  %13 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeI13scoped_refptrIN5media10VideoFrameEEEEmm(i64 %11) #7
  %14 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %13, i8* getelementptr inbounds ([80 x i8], [80 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameI13scoped_refptrIN5media10VideoFrameEEEEPKcv, i64 0, i64 0)) #7
  %15 = ptrtoint i8* %14 to i64
  %16 = bitcast %"class.WTF::Deque"* %0 to i64*
  store atomic i64 %15, i64* %16 monotonic, align 8
  %17 = lshr i64 %13, 3
  %18 = trunc i64 %17 to i32
  store i32 %18, i32* %2, align 8
  %19 = getelementptr inbounds %"class.WTF::Deque", %"class.WTF::Deque"* %0, i64 0, i32 1
  %20 = load i32, i32* %19, align 8
  %21 = getelementptr inbounds %"class.WTF::Deque", %"class.WTF::Deque"* %0, i64 0, i32 2
  %22 = load i32, i32* %21, align 4
  %23 = icmp ugt i32 %20, %22
  %24 = bitcast i8* %14 to %class.scoped_refptr*
  br i1 %23, label %40, label %25

25:                                               ; preds = %1
  %26 = zext i32 %20 to i64
  %27 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %5, i64 %26
  %28 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %24, i64 %26
  %29 = icmp ne %class.scoped_refptr* %28, null
  %30 = icmp ne %class.scoped_refptr* %27, null
  %31 = and i1 %30, %29
  br i1 %31, label %32, label %73, !prof !33

32:                                               ; preds = %25
  %33 = zext i32 %22 to i64
  %34 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %5, i64 %33
  %35 = bitcast %class.scoped_refptr* %27 to i8*
  %36 = ptrtoint %class.scoped_refptr* %34 to i64
  %37 = ptrtoint %class.scoped_refptr* %27 to i64
  %38 = sub i64 %36, %37
  %39 = bitcast %class.scoped_refptr* %28 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %39, i8* nonnull align 8 %35, i64 %38, i1 false) #7
  br label %73

40:                                               ; preds = %1
  %41 = icmp ne i8* %14, null
  %42 = icmp ne %class.scoped_refptr* %5, null
  %43 = and i1 %42, %41
  br i1 %43, label %44, label %51, !prof !33

44:                                               ; preds = %40
  %45 = zext i32 %22 to i64
  %46 = bitcast %class.scoped_refptr* %5 to i8*
  %47 = shl nuw nsw i64 %45, 3
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %14, i8* nonnull align 8 %46, i64 %47, i1 false) #7
  %48 = load i32, i32* %2, align 8
  %49 = load i32, i32* %19, align 8
  %50 = load %class.scoped_refptr*, %class.scoped_refptr** %4, align 8
  br label %51

51:                                               ; preds = %40, %44
  %52 = phi %class.scoped_refptr* [ %24, %40 ], [ %50, %44 ]
  %53 = phi i32 [ %20, %40 ], [ %49, %44 ]
  %54 = phi i32 [ %18, %40 ], [ %48, %44 ]
  %55 = sub i32 %53, %3
  %56 = add i32 %55, %54
  %57 = zext i32 %53 to i64
  %58 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %5, i64 %57
  %59 = zext i32 %56 to i64
  %60 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %52, i64 %59
  %61 = icmp ne %class.scoped_refptr* %60, null
  %62 = icmp ne %class.scoped_refptr* %58, null
  %63 = and i1 %62, %61
  br i1 %63, label %64, label %72, !prof !33

64:                                               ; preds = %51
  %65 = zext i32 %3 to i64
  %66 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %5, i64 %65
  %67 = bitcast %class.scoped_refptr* %58 to i8*
  %68 = ptrtoint %class.scoped_refptr* %66 to i64
  %69 = ptrtoint %class.scoped_refptr* %58 to i64
  %70 = sub i64 %68, %69
  %71 = bitcast %class.scoped_refptr* %60 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %71, i8* nonnull align 8 %67, i64 %70, i1 false) #7
  br label %72

72:                                               ; preds = %51, %64
  store i32 %56, i32* %19, align 8
  br label %73

73:                                               ; preds = %32, %25, %72
  %74 = bitcast %class.scoped_refptr* %5 to i8*
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %74) #7
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeI13scoped_refptrIN5media10VideoFrameEEEEmm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #7
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp ugt i64 %0, 268173312
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #7
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 268173312) #7
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.13, i64 0, i64 0), i8* %11, i8* %12) #7
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #7
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([78 x i8], [78 x i8]* @.str.14, i64 0, i64 0), i32 31, %"class.logging::CheckOpResult"* nonnull %3) #7
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #7
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #7
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #7
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #7
  %20 = shl i64 %0, 3
  %21 = call i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64 %20) #7
  ret i64 %21
}

declare i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64) local_unnamed_addr #2

declare i8* @_ZN7logging15CheckOpValueStrEm(i64) local_unnamed_addr #2

declare i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64, i8*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(8) %class.scoped_refptr* @_ZNK3WTF13DequeIteratorI13scoped_refptrIN5media10VideoFrameEELj0ENS_18PartitionAllocatorEEdeEv(%"class.WTF::DequeIterator"*) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #7
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = getelementptr inbounds %"class.WTF::DequeIterator", %"class.WTF::DequeIterator"* %0, i64 0, i32 0, i32 1
  %8 = load i32, i32* %7, align 8
  %9 = getelementptr inbounds %"class.WTF::DequeIterator", %"class.WTF::DequeIterator"* %0, i64 0, i32 0, i32 0
  %10 = load %"class.WTF::Deque"*, %"class.WTF::Deque"** %9, align 8
  %11 = getelementptr inbounds %"class.WTF::Deque", %"class.WTF::Deque"* %10, i64 0, i32 2
  %12 = load i32, i32* %11, align 4
  %13 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %13) #7
  %14 = icmp eq i32 %8, %12
  br i1 %14, label %16, label %15

15:                                               ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %13) #7
  store i8* null, i8** %6, align 8
  br label %25

16:                                               ; preds = %1
  %17 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %8) #7
  %18 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %8) #7
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.15, i64 0, i64 0), i8* %17, i8* %18) #7
  %19 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %20 = load i8*, i8** %19, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %13) #7
  store i8* %20, i8** %6, align 8
  %21 = icmp eq i8* %20, null
  br i1 %21, label %25, label %22

22:                                               ; preds = %16
  %23 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %23) #7
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([54 x i8], [54 x i8]* @.str.16, i64 0, i64 0), i32 693, %"class.logging::CheckOpResult"* nonnull %3) #7
  %24 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #7
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #7
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %23) #7
  br label %25

25:                                               ; preds = %15, %16, %22
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #7
  %26 = load %"class.WTF::Deque"*, %"class.WTF::Deque"** %9, align 8
  %27 = getelementptr inbounds %"class.WTF::Deque", %"class.WTF::Deque"* %26, i64 0, i32 0, i32 0, i32 0, i32 0
  %28 = load %class.scoped_refptr*, %class.scoped_refptr** %27, align 8
  %29 = load i32, i32* %7, align 8
  %30 = zext i32 %29 to i64
  %31 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %28, i64 %30
  ret %class.scoped_refptr* %31
}

declare i8* @_ZN7logging15CheckOpValueStrEj(i32) local_unnamed_addr #2

declare dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKcm(%"class.std::__1::basic_string"*, i8*, i64) local_unnamed_addr #2

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nofree norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nounwind }
attributes #8 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
!3 = !{!4}
!4 = distinct !{!4, !5, !"_ZN3WTF5DequeI13scoped_refptrIN5media10VideoFrameEELj0ENS_18PartitionAllocatorEE3endEv: argument 0"}
!5 = distinct !{!5, !"_ZN3WTF5DequeI13scoped_refptrIN5media10VideoFrameEELj0ENS_18PartitionAllocatorEE3endEv"}
!6 = !{!7}
!7 = distinct !{!7, !8, !"_ZNSt3__1plIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_12basic_stringIT_T0_T1_EERKS9_PKS6_: argument 0"}
!8 = distinct !{!8, !"_ZNSt3__1plIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_12basic_stringIT_T0_T1_EERKS9_PKS6_"}
!9 = !{!10}
!10 = distinct !{!10, !11, !"_ZNSt3__1plIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_12basic_stringIT_T0_T1_EERKS9_PKS6_: argument 0"}
!11 = distinct !{!11, !"_ZNSt3__1plIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_12basic_stringIT_T0_T1_EERKS9_PKS6_"}
!12 = !{!13}
!13 = distinct !{!13, !14, !"_ZNSt3__1plIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_12basic_stringIT_T0_T1_EERKS9_PKS6_: argument 0"}
!14 = distinct !{!14, !"_ZNSt3__1plIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_12basic_stringIT_T0_T1_EERKS9_PKS6_"}
!15 = !{!16}
!16 = distinct !{!16, !17, !"_ZNSt3__1plIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_12basic_stringIT_T0_T1_EERKS9_PKS6_: argument 0"}
!17 = distinct !{!17, !"_ZNSt3__1plIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_12basic_stringIT_T0_T1_EERKS9_PKS6_"}
!18 = !{!19}
!19 = distinct !{!19, !20, !"_ZNSt3__1plIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_12basic_stringIT_T0_T1_EERKS9_PKS6_: argument 0"}
!20 = distinct !{!20, !"_ZNSt3__1plIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_12basic_stringIT_T0_T1_EERKS9_PKS6_"}
!21 = !{!22}
!22 = distinct !{!22, !23, !"_ZNSt3__1plIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_12basic_stringIT_T0_T1_EERKS9_PKS6_: argument 0"}
!23 = distinct !{!23, !"_ZNSt3__1plIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_12basic_stringIT_T0_T1_EERKS9_PKS6_"}
!24 = !{!25}
!25 = distinct !{!25, !26, !"_ZNSt3__1plIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_12basic_stringIT_T0_T1_EERKS9_PKS6_: argument 0"}
!26 = distinct !{!26, !"_ZNSt3__1plIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_12basic_stringIT_T0_T1_EERKS9_PKS6_"}
!27 = !{!28}
!28 = distinct !{!28, !29, !"_ZNSt3__1plIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_12basic_stringIT_T0_T1_EERKS9_PKS6_: argument 0"}
!29 = distinct !{!29, !"_ZNSt3__1plIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_12basic_stringIT_T0_T1_EERKS9_PKS6_"}
!30 = !{!31}
!31 = distinct !{!31, !32, !"_ZNSt3__1plIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_12basic_stringIT_T0_T1_EERKS9_PKS6_: argument 0"}
!32 = distinct !{!32, !"_ZNSt3__1plIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_12basic_stringIT_T0_T1_EERKS9_PKS6_"}
!33 = !{!"branch_weights", i32 2000, i32 1}
