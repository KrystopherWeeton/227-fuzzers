; ModuleID = '../../third_party/webrtc/modules/rtp_rtcp/include/rtp_rtcp_defines.cc'
source_filename = "../../third_party/webrtc/modules/rtp_rtcp/include/rtp_rtcp_defines.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"struct.webrtc::StreamDataCounters" = type { i64, %"class.absl::optional", %"struct.webrtc::RtpPacketCounter", %"struct.webrtc::RtpPacketCounter", %"struct.webrtc::RtpPacketCounter" }
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon }
%union.anon = type { i64 }
%"struct.webrtc::RtpPacketCounter" = type <{ i64, i64, i64, i32, [4 x i8] }>
%"class.webrtc::RtpPacket" = type { i8, i8, i8, i16, i32, i32, i64, i64, %"class.webrtc::RtpHeaderExtensionMap", %"class.std::__1::vector", i64, %"class.rtc::CopyOnWriteBuffer" }
%"class.webrtc::RtpHeaderExtensionMap" = type { [21 x i8], i8 }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"struct.webrtc::RtpPacket::ExtensionInfo"*, %"struct.webrtc::RtpPacket::ExtensionInfo"*, %"class.std::__1::__compressed_pair" }
%"struct.webrtc::RtpPacket::ExtensionInfo" = type { i8, i8, i16 }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.webrtc::RtpPacket::ExtensionInfo"* }
%"class.rtc::CopyOnWriteBuffer" = type { %"class.rtc::scoped_refptr", i64, i64 }
%"class.rtc::scoped_refptr" = type { %"class.rtc::FinalRefCountedObject"* }
%"class.rtc::FinalRefCountedObject" = type <{ %"class.rtc::BufferT", %"class.webrtc::webrtc_impl::RefCounter", [4 x i8] }>
%"class.rtc::BufferT" = type { i64, i64, %"class.std::__1::unique_ptr" }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair.1" }
%"class.std::__1::__compressed_pair.1" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"struct.std::__1::__compressed_pair_elem.2" = type { i8* }
%"class.webrtc::webrtc_impl::RefCounter" = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.4" }
%"struct.std::__1::__atomic_base.4" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }

@_ZN6webrtc18StreamDataCountersC1Ev = hidden unnamed_addr alias void (%"struct.webrtc::StreamDataCounters"*), void (%"struct.webrtc::StreamDataCounters"*)* @_ZN6webrtc18StreamDataCountersC2Ev
@_ZN6webrtc16RtpPacketCounterC1ERKNS_9RtpPacketE = hidden unnamed_addr alias void (%"struct.webrtc::RtpPacketCounter"*, %"class.webrtc::RtpPacket"*), void (%"struct.webrtc::RtpPacketCounter"*, %"class.webrtc::RtpPacket"*)* @_ZN6webrtc16RtpPacketCounterC2ERKNS_9RtpPacketE

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZN6webrtc14IsLegalMidNameEN4absl11string_viewE(i8*, i64) local_unnamed_addr #0 {
  %3 = add i64 %1, -1
  %4 = icmp ugt i64 %3, 15
  br i1 %4, label %23, label %5

5:                                                ; preds = %2
  %6 = getelementptr inbounds i8, i8* %0, i64 %1
  br label %10

7:                                                ; preds = %10, %10, %10, %10, %10, %10, %10, %10, %10, %10, %13, %19
  %8 = getelementptr inbounds i8, i8* %11, i64 1
  %9 = icmp eq i8* %8, %6
  br i1 %9, label %23, label %10

10:                                               ; preds = %5, %7
  %11 = phi i8* [ %8, %7 ], [ %0, %5 ]
  %12 = load i8, i8* %11, align 1
  switch i8 %12, label %13 [
    i8 39, label %7
    i8 38, label %7
    i8 37, label %7
    i8 36, label %7
    i8 35, label %7
    i8 33, label %7
    i8 46, label %7
    i8 45, label %7
    i8 43, label %7
    i8 42, label %7
  ]

13:                                               ; preds = %10
  %14 = add i8 %12, -48
  %15 = icmp ult i8 %14, 10
  %16 = add i8 %12, -65
  %17 = icmp ult i8 %16, 26
  %18 = or i1 %15, %17
  br i1 %18, label %7, label %19

19:                                               ; preds = %13
  %20 = icmp sgt i8 %12, 93
  %21 = icmp ne i8 %12, 127
  %22 = and i1 %20, %21
  br i1 %22, label %7, label %23

23:                                               ; preds = %19, %7, %2
  %24 = phi i1 [ false, %2 ], [ true, %7 ], [ false, %19 ]
  ret i1 %24
}

; Function Attrs: nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZN6webrtc15IsLegalRsidNameEN4absl11string_viewE(i8*, i64) local_unnamed_addr #1 {
  %3 = add i64 %1, -1
  %4 = icmp ugt i64 %3, 15
  br i1 %4, label %20, label %5

5:                                                ; preds = %2
  %6 = getelementptr inbounds i8, i8* %0, i64 %1
  %7 = tail call i16** @__ctype_b_loc() #6
  %8 = load i16*, i16** %7, align 8
  br label %11

9:                                                ; preds = %11
  %10 = icmp eq i8* %19, %6
  br i1 %10, label %20, label %11

11:                                               ; preds = %5, %9
  %12 = phi i8* [ %19, %9 ], [ %0, %5 ]
  %13 = load i8, i8* %12, align 1
  %14 = sext i8 %13 to i64
  %15 = getelementptr inbounds i16, i16* %8, i64 %14
  %16 = load i16, i16* %15, align 2
  %17 = and i16 %16, 8
  %18 = icmp eq i16 %17, 0
  %19 = getelementptr inbounds i8, i8* %12, i64 1
  br i1 %18, label %20, label %9

20:                                               ; preds = %11, %9, %2
  %21 = phi i1 [ false, %2 ], [ true, %9 ], [ false, %11 ]
  ret i1 %21
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6webrtc18StreamDataCountersC2Ev(%"struct.webrtc::StreamDataCounters"* nocapture) unnamed_addr #2 align 2 {
  %2 = getelementptr inbounds %"struct.webrtc::StreamDataCounters", %"struct.webrtc::StreamDataCounters"* %0, i64 0, i32 0
  store i64 -1, i64* %2, align 8
  %3 = getelementptr inbounds %"struct.webrtc::StreamDataCounters", %"struct.webrtc::StreamDataCounters"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %3, align 8
  %4 = getelementptr inbounds %"struct.webrtc::StreamDataCounters", %"struct.webrtc::StreamDataCounters"* %0, i64 0, i32 2
  %5 = bitcast %"struct.webrtc::RtpPacketCounter"* %4 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %5, i8 0, i64 28, i1 false) #7
  %6 = getelementptr inbounds %"struct.webrtc::StreamDataCounters", %"struct.webrtc::StreamDataCounters"* %0, i64 0, i32 3
  %7 = bitcast %"struct.webrtc::RtpPacketCounter"* %6 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %7, i8 0, i64 28, i1 false) #7
  %8 = getelementptr inbounds %"struct.webrtc::StreamDataCounters", %"struct.webrtc::StreamDataCounters"* %0, i64 0, i32 4
  %9 = bitcast %"struct.webrtc::RtpPacketCounter"* %8 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %9, i8 0, i64 28, i1 false) #7
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN6webrtc16RtpPacketCounterC2ERKNS_9RtpPacketE(%"struct.webrtc::RtpPacketCounter"* nocapture, %"class.webrtc::RtpPacket"* nocapture readonly dereferenceable(112)) unnamed_addr #3 align 2 {
  %3 = getelementptr inbounds %"struct.webrtc::RtpPacketCounter", %"struct.webrtc::RtpPacketCounter"* %0, i64 0, i32 0
  %4 = getelementptr inbounds %"class.webrtc::RtpPacket", %"class.webrtc::RtpPacket"* %1, i64 0, i32 6
  %5 = load i64, i64* %4, align 8
  store i64 %5, i64* %3, align 8
  %6 = getelementptr inbounds %"struct.webrtc::RtpPacketCounter", %"struct.webrtc::RtpPacketCounter"* %0, i64 0, i32 1
  %7 = getelementptr inbounds %"class.webrtc::RtpPacket", %"class.webrtc::RtpPacket"* %1, i64 0, i32 7
  %8 = load i64, i64* %7, align 8
  store i64 %8, i64* %6, align 8
  %9 = getelementptr inbounds %"struct.webrtc::RtpPacketCounter", %"struct.webrtc::RtpPacketCounter"* %0, i64 0, i32 2
  %10 = getelementptr inbounds %"class.webrtc::RtpPacket", %"class.webrtc::RtpPacket"* %1, i64 0, i32 2
  %11 = load i8, i8* %10, align 2
  %12 = zext i8 %11 to i64
  store i64 %12, i64* %9, align 8
  %13 = getelementptr inbounds %"struct.webrtc::RtpPacketCounter", %"struct.webrtc::RtpPacketCounter"* %0, i64 0, i32 3
  store i32 1, i32* %13, align 8
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN6webrtc16RtpPacketCounter9AddPacketERKNS_9RtpPacketE(%"struct.webrtc::RtpPacketCounter"* nocapture, %"class.webrtc::RtpPacket"* nocapture readonly dereferenceable(112)) local_unnamed_addr #3 align 2 {
  %3 = getelementptr inbounds %"struct.webrtc::RtpPacketCounter", %"struct.webrtc::RtpPacketCounter"* %0, i64 0, i32 3
  %4 = load i32, i32* %3, align 8
  %5 = add i32 %4, 1
  store i32 %5, i32* %3, align 8
  %6 = getelementptr inbounds %"class.webrtc::RtpPacket", %"class.webrtc::RtpPacket"* %1, i64 0, i32 6
  %7 = load i64, i64* %6, align 8
  %8 = getelementptr inbounds %"struct.webrtc::RtpPacketCounter", %"struct.webrtc::RtpPacketCounter"* %0, i64 0, i32 0
  %9 = load i64, i64* %8, align 8
  %10 = add i64 %9, %7
  store i64 %10, i64* %8, align 8
  %11 = getelementptr inbounds %"class.webrtc::RtpPacket", %"class.webrtc::RtpPacket"* %1, i64 0, i32 2
  %12 = load i8, i8* %11, align 2
  %13 = zext i8 %12 to i64
  %14 = getelementptr inbounds %"struct.webrtc::RtpPacketCounter", %"struct.webrtc::RtpPacketCounter"* %0, i64 0, i32 2
  %15 = load i64, i64* %14, align 8
  %16 = add i64 %15, %13
  store i64 %16, i64* %14, align 8
  %17 = getelementptr inbounds %"class.webrtc::RtpPacket", %"class.webrtc::RtpPacket"* %1, i64 0, i32 7
  %18 = load i64, i64* %17, align 8
  %19 = getelementptr inbounds %"struct.webrtc::RtpPacketCounter", %"struct.webrtc::RtpPacketCounter"* %0, i64 0, i32 1
  %20 = load i64, i64* %19, align 8
  %21 = add i64 %20, %18
  store i64 %21, i64* %19, align 8
  ret void
}

; Function Attrs: nounwind readnone
declare i16** @__ctype_b_loc() local_unnamed_addr #4

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #5

attributes #0 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nofree norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind readnone "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { argmemonly nounwind }
attributes #6 = { nounwind readnone }
attributes #7 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
