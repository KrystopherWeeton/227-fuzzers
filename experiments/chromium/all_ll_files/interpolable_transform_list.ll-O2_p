; ModuleID = '../../third_party/blink/renderer/core/animation/interpolable_transform_list.cc'
source_filename = "../../third_party/blink/renderer/core/animation/interpolable_transform_list.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.blink::InterpolableTransformList" = type { %"class.blink::InterpolableValue", %"class.blink::TransformOperations" }
%"class.blink::InterpolableValue" = type { i32 (...)** }
%"class.blink::TransformOperations" = type { %"class.WTF::Vector" }
%"class.WTF::Vector" = type { %"class.WTF::VectorBuffer" }
%"class.WTF::VectorBuffer" = type { %"class.WTF::VectorBufferBase" }
%"class.WTF::VectorBufferBase" = type { %class.scoped_refptr*, i32, i32 }
%class.scoped_refptr = type { %"class.blink::TransformOperation"* }
%"class.blink::TransformOperation" = type <{ i32 (...)**, %"class.WTF::RefCounted", [4 x i8] }>
%"class.WTF::RefCounted" = type { %"class.base::RefCounted" }
%"class.base::RefCounted" = type { %"class.base::subtle::RefCountedBase" }
%"class.base::subtle::RefCountedBase" = type { i32 }
%"class.blink::CSSValue" = type { i8, i8, i8 }
%"class.blink::StyleResolverState" = type <{ %"class.blink::ElementResolveContext", %"class.blink::Document"*, %class.scoped_refptr.536, %"class.blink::CSSToLengthConversionData", %class.scoped_refptr.32, %class.scoped_refptr.32, %"class.blink::CSSAnimationUpdate", i32, [4 x i8], %"class.blink::FontBuilder", %"class.blink::PseudoElement"*, %"class.blink::ElementStyleResources", i32, i8, i8, [2 x i8] }>
%"class.blink::ElementResolveContext" = type <{ %"class.blink::Element"*, %"class.blink::ContainerNode"*, %"class.blink::ContainerNode"*, %class.scoped_refptr.32, i32, [4 x i8] }>
%"class.blink::Element" = type { %"class.blink::ContainerNode", %"class.blink::Animatable", %"class.blink::QualifiedName", %"class.blink::Member.14" }
%"class.blink::ContainerNode" = type { %"class.blink::Node", %"class.blink::Member", %"class.blink::Member" }
%"class.blink::Node" = type { %"class.blink::EventTarget", i32, %"class.blink::Member", %"class.blink::Member.3", %"class.blink::Member", %"class.blink::Member", %"class.blink::Member.5" }
%"class.blink::EventTarget" = type { %"class.blink::ScriptWrappable" }
%"class.blink::ScriptWrappable" = type { %"class.blink::NameClient", %"class.blink::TraceWrapperV8Reference" }
%"class.blink::NameClient" = type { i32 (...)** }
%"class.blink::TraceWrapperV8Reference" = type { %"class.v8::TracedReference" }
%"class.v8::TracedReference" = type { %"class.v8::BasicTracedReference" }
%"class.v8::BasicTracedReference" = type { %"class.v8::TracedReferenceBase" }
%"class.v8::TracedReferenceBase" = type { i64* }
%"class.blink::Member.3" = type { %"class.blink::MemberBase.4" }
%"class.blink::MemberBase.4" = type { %"class.blink::TreeScope"* }
%"class.blink::TreeScope" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::Member.33", %"class.blink::Member.35", %"class.blink::Member.3", %"class.blink::Member.37", %"class.blink::Member.37", %"class.blink::Member.56", %"class.blink::Member.58", %"class.blink::Member.60", %"class.blink::RadioButtonGroupScope", %"class.blink::Member.65", %"class.blink::HeapVector.67" }
%"class.blink::GarbageCollectedMixin" = type { i32 (...)** }
%"class.blink::Member.33" = type { %"class.blink::MemberBase.34" }
%"class.blink::MemberBase.34" = type { %"class.blink::ContainerNode"* }
%"class.blink::Member.35" = type { %"class.blink::MemberBase.36" }
%"class.blink::MemberBase.36" = type { %"class.blink::Document"* }
%"class.blink::Member.37" = type { %"class.blink::MemberBase.38" }
%"class.blink::MemberBase.38" = type { %"class.blink::TreeOrderedMap"* }
%"class.blink::TreeOrderedMap" = type { %"class.blink::HeapHashMap" }
%"class.blink::HeapHashMap" = type { %"class.WTF::HashMap" }
%"class.WTF::HashMap" = type { %"class.WTF::HashTable" }
%"class.WTF::HashTable" = type <{ %"struct.WTF::KeyValuePair"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair" = type { %"class.WTF::AtomicString", %"class.blink::Member.44" }
%"class.WTF::AtomicString" = type { %"class.WTF::String" }
%"class.WTF::String" = type { %class.scoped_refptr.12 }
%class.scoped_refptr.12 = type { %"class.WTF::StringImpl"* }
%"class.WTF::StringImpl" = type { i32, i32, %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.13" }
%"struct.std::__1::__atomic_base.13" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.blink::Member.44" = type { %"class.blink::MemberBase.45" }
%"class.blink::MemberBase.45" = type { %"class.blink::TreeOrderedMap::MapEntry"* }
%"class.blink::TreeOrderedMap::MapEntry" = type { %"class.blink::Member.48", i32, %"class.blink::HeapVector" }
%"class.blink::Member.48" = type { %"class.blink::MemberBase.49" }
%"class.blink::MemberBase.49" = type { %"class.blink::Element"* }
%"class.blink::HeapVector" = type { %"class.WTF::Vector.52" }
%"class.WTF::Vector.52" = type { %"class.WTF::VectorBuffer.53" }
%"class.WTF::VectorBuffer.53" = type { %"class.WTF::VectorBufferBase.54" }
%"class.WTF::VectorBufferBase.54" = type { %"class.blink::Member.48"*, i32, i32 }
%"class.blink::Member.56" = type { %"class.blink::MemberBase.57" }
%"class.blink::MemberBase.57" = type { %"class.blink::IdTargetObserverRegistry"* }
%"class.blink::IdTargetObserverRegistry" = type opaque
%"class.blink::Member.58" = type { %"class.blink::MemberBase.59" }
%"class.blink::MemberBase.59" = type { %"class.blink::ScopedStyleResolver"* }
%"class.blink::ScopedStyleResolver" = type opaque
%"class.blink::Member.60" = type { %"class.blink::MemberBase.61" }
%"class.blink::MemberBase.61" = type { %"class.blink::DOMSelection"* }
%"class.blink::DOMSelection" = type opaque
%"class.blink::RadioButtonGroupScope" = type { %"class.blink::Member.62" }
%"class.blink::Member.62" = type { %"class.blink::MemberBase.63" }
%"class.blink::MemberBase.63" = type { %"class.blink::HeapHashMap.64"* }
%"class.blink::HeapHashMap.64" = type opaque
%"class.blink::Member.65" = type { %"class.blink::MemberBase.66" }
%"class.blink::MemberBase.66" = type { %"class.blink::SVGTreeScopeResources"* }
%"class.blink::SVGTreeScopeResources" = type opaque
%"class.blink::HeapVector.67" = type { %"class.WTF::Vector.70" }
%"class.WTF::Vector.70" = type { %"class.WTF::VectorBuffer.71" }
%"class.WTF::VectorBuffer.71" = type { %"class.WTF::VectorBufferBase.72" }
%"class.WTF::VectorBufferBase.72" = type { %"class.blink::Member.73"*, i32, i32 }
%"class.blink::Member.73" = type { %"class.blink::MemberBase.74" }
%"class.blink::MemberBase.74" = type { %"class.blink::CSSStyleSheet"* }
%"class.blink::CSSStyleSheet" = type opaque
%"class.blink::Member.5" = type { %"class.blink::MemberBase.6" }
%"class.blink::MemberBase.6" = type { %"class.blink::NodeData"* }
%"class.blink::NodeData" = type { i16, %"class.WTF::ConcurrentlyReadBitField" }
%"class.WTF::ConcurrentlyReadBitField" = type { %"class.WTF::SingleThreadedBitField" }
%"class.WTF::SingleThreadedBitField" = type { i16 }
%"class.blink::Member" = type { %"class.blink::MemberBase" }
%"class.blink::MemberBase" = type { %"class.blink::Node"* }
%"class.blink::Animatable" = type { i32 (...)** }
%"class.blink::QualifiedName" = type { %class.scoped_refptr.9 }
%class.scoped_refptr.9 = type { %"class.blink::QualifiedName::QualifiedNameImpl"* }
%"class.blink::QualifiedName::QualifiedNameImpl" = type { %"class.WTF::RefCounted.10", i32, %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.WTF::AtomicString" }
%"class.WTF::RefCounted.10" = type { %"class.base::RefCounted.11" }
%"class.base::RefCounted.11" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::Member.14" = type { %"class.blink::MemberBase.15" }
%"class.blink::MemberBase.15" = type { %"class.blink::ElementData"* }
%"class.blink::ElementData" = type { %"class.WTF::ConcurrentlyReadBitField.18", %"class.blink::Member.20", %"class.blink::SpaceSplitString", %"class.WTF::AtomicString" }
%"class.WTF::ConcurrentlyReadBitField.18" = type { %"class.WTF::SingleThreadedBitField.19" }
%"class.WTF::SingleThreadedBitField.19" = type { i32 }
%"class.blink::Member.20" = type { %"class.blink::MemberBase.21" }
%"class.blink::MemberBase.21" = type { %"class.blink::CSSPropertyValueSet"* }
%"class.blink::CSSPropertyValueSet" = type { i32 }
%"class.blink::SpaceSplitString" = type { %class.scoped_refptr.24 }
%class.scoped_refptr.24 = type { %"class.blink::SpaceSplitString::Data"* }
%"class.blink::SpaceSplitString::Data" = type { %"class.WTF::RefCounted.25", %"class.WTF::AtomicString", %"class.WTF::Vector.27" }
%"class.WTF::RefCounted.25" = type { %"class.base::RefCounted.26" }
%"class.base::RefCounted.26" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.27" = type { %"class.WTF::VectorBuffer.28" }
%"class.WTF::VectorBuffer.28" = type { %"class.WTF::VectorBufferBase.29", [32 x i8] }
%"class.WTF::VectorBufferBase.29" = type { %"class.WTF::AtomicString"*, i32, i32 }
%"class.blink::Document" = type { %"class.blink::ContainerNode", %"class.blink::TreeScope", %"class.blink::UseCounter", %"class.blink::Supplementable", i32, %"class.blink::DocumentLifecycle", i8, i8, %"class.WTF::Vector.83", %"class.WTF::Vector.83", i8, i32, %"class.blink::Member.94", %"class.blink::Member.96", %"class.blink::Member.98", %"class.blink::Member.100", %"class.blink::Member.102", %"class.blink::Member.104", i8, %"class.blink::KURL", %"class.blink::KURL", %"class.blink::KURL", %"class.blink::KURL", %"class.blink::KURL", %"class.std::__1::unique_ptr.112", %"class.blink::KURL", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.blink::Member.118", %"class.blink::Member.120", %"class.blink::Member.73", i32, i32, i32, i8, %"class.blink::TaskHandle", %"class.blink::TaskHandle", %"class.WTF::Vector.123", i8, i32, i8, %"class.blink::HeapTaskRunnerTimer", %"class.blink::HeapVector", %"class.blink::Member.48", %"class.blink::Member.332", %"class.blink::Member.48", %"class.blink::Member.48", %"class.blink::Member.48", %"class.blink::UserActionElementSet", %"class.blink::Member.341", double, double, i64, i64, %"class.blink::HeapHashSet", %"class.blink::HeapHashSet.348", i16, i8, %"class.blink::Member.355", %"class.blink::Member.357", %"class.blink::Member.359", %"class.blink::Member.361", %"class.blink::TextLinkColors", %"class.blink::Member.363", i8, [7 x i8], %"class.blink::HeapHashMap.365", i32, i32, i8, i8, i8, i32, i32, i32, i8, %"class.WTF::String", %"class.WTF::String", %"class.blink::Member.48", %"class.WTF::Vector.372", %"class.blink::Member.377", %"class.blink::Member.379", i8, %"class.blink::Member.48", i8, i32, i8, %"class.base::ElapsedTimer", %"class.blink::Member.381", %"class.blink::HeapVector.383", %"class.std::__1::unique_ptr.391", %"class.WTF::String", %"class.WTF::String", i8, %"class.WTF::AtomicString", %"class.blink::DocumentEncodingData", i8, i8, [6 x i8], %"class.blink::HeapHashSet.397", %"class.blink::LiveNodeListRegistry", %"class.blink::Member.410", %"class.WTF::Vector.412", i8, i8, %"class.std::__1::unique_ptr.417", %"class.blink::NthIndexCache"*, i8, i8, i8, i8, i8, i8, %"class.blink::LayoutView"*, %"class.blink::HeapVector", %"class.blink::HeapVector.423", i32, i8, %"class.blink::HeapTaskRunnerTimer", %"class.blink::HeapTaskRunnerTimer", %"class.blink::DocumentTiming", %"class.blink::Member.431", i8, i32, %"class.blink::Member.433", %"class.blink::Member.435", %"class.blink::Member.437", %"class.blink::HeapTaskRunnerTimer", %"class.blink::Member.439", %"class.WTF::HashMap.441", %"class.blink::Member.446", %"class.blink::Member.448", %"class.blink::Member.450", %"class.blink::Member.452", %"class.blink::Member.35", %"class.blink::Member.35", %"class.blink::HeapTaskRunnerTimer", %"class.blink::HeapHashSet.454", i8, i32, %"class.blink::Member.461", %"class.blink::Member.463", i32, %"class.blink::Member.465", %"class.blink::Member.467", %"class.blink::Member.469", %"class.std::__1::unique_ptr.471", i64, %"class.std::__1::unique_ptr.477", i32, i32, %"class.blink::Member.483", %"class.blink::Member.485", %"class.blink::Member.487", i8, i32, i32, i32, i32, i32, i32, i32, i8, i8, %"class.blink::Member.489", %"class.WTF::Vector.491", %"class.WTF::AtomicString", %"class.blink::HeapHashMap.496", %"class.blink::Member.503", %"class.std::__1::unique_ptr.505", %"class.blink::Member.511", i8, i8, %"class.WTF::String", %"class.blink::Member.513", i8, [7 x i8], %"class.blink::HeapHashMap.515", %"class.blink::HeapObserverSet", %"class.blink::Member.529", i8, i8, i8, i8, i8, i8, i8, %"class.blink::Member.531", i32, i8, i8, %"class.blink::WeakMember.533", %"class.blink::Member.534" }
%"class.blink::UseCounter" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::Supplementable" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.76" }
%"class.blink::HeapHashMap.76" = type { %"class.WTF::HashMap.79" }
%"class.WTF::HashMap.79" = type { %"class.WTF::HashTable.80" }
%"class.WTF::HashTable.80" = type <{ %"struct.WTF::KeyValuePair.82"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.82" = type opaque
%"class.blink::DocumentLifecycle" = type <{ i32, i32, i32, i8, i8, [2 x i8] }>
%"class.WTF::Vector.83" = type { %"class.WTF::VectorBuffer.84" }
%"class.WTF::VectorBuffer.84" = type { %"class.WTF::VectorBufferBase.85" }
%"class.WTF::VectorBufferBase.85" = type { %"class.base::OnceCallback"*, i32, i32 }
%"class.base::OnceCallback" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr.86 }
%class.scoped_refptr.86 = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic.87" }
%"struct.std::__1::atomic.87" = type { %"struct.std::__1::__atomic_base.88" }
%"struct.std::__1::__atomic_base.88" = type { %"struct.std::__1::__atomic_base.89" }
%"struct.std::__1::__atomic_base.89" = type { %"struct.std::__1::__cxx_atomic_impl.90" }
%"struct.std::__1::__cxx_atomic_impl.90" = type { %"struct.std::__1::__cxx_atomic_base_impl.91" }
%"struct.std::__1::__cxx_atomic_base_impl.91" = type { i32 }
%"class.blink::Member.94" = type { %"class.blink::MemberBase.95" }
%"class.blink::MemberBase.95" = type { %"class.blink::LocalDOMWindow"* }
%"class.blink::LocalDOMWindow" = type opaque
%"class.blink::Member.96" = type { %"class.blink::MemberBase.97" }
%"class.blink::MemberBase.97" = type { %"class.blink::ExecutionContext"* }
%"class.blink::ExecutionContext" = type <{ %"class.blink::Supplementable.847", %"class.blink::MojoBindingContext", %"class.blink::ConsoleLogger", %"class.blink::UseCounter", %"class.blink::FeatureContext", %"class.v8::Isolate"*, %"class.blink::SecurityContext", %"class.blink::Member.880", i32, i8, [3 x i8], %"class.blink::HeapVector.882", i32, i8, i8, i8, i8, i8, i8, [6 x i8], %"class.blink::Member.890", %"class.blink::Member.892", %"class.blink::DOMTimerCoordinator", i32, [4 x i8], %"class.std::__1::unique_ptr.901", %"class.blink::Member.907", %"class.blink::Member.909", i8, [7 x i8] }>
%"class.blink::Supplementable.847" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.848" }
%"class.blink::HeapHashMap.848" = type { %"class.WTF::HashMap.851" }
%"class.WTF::HashMap.851" = type { %"class.WTF::HashTable.852" }
%"class.WTF::HashTable.852" = type <{ %"struct.WTF::KeyValuePair.854"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.854" = type opaque
%"class.blink::MojoBindingContext" = type { %"class.blink::ContextLifecycleNotifier", %"class.blink::Supplementable.855" }
%"class.blink::ContextLifecycleNotifier" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapObserverSet.800" }
%"class.blink::HeapObserverSet.800" = type { i32, [4 x i8], %"class.blink::HeapHashSet.801" }
%"class.blink::HeapHashSet.801" = type { %"class.WTF::HashSet.804" }
%"class.WTF::HashSet.804" = type { %"class.WTF::HashTable.805" }
%"class.WTF::HashTable.805" = type <{ %"class.blink::WeakMember.807"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.807" = type opaque
%"class.blink::Supplementable.855" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.856" }
%"class.blink::HeapHashMap.856" = type { %"class.WTF::HashMap.859" }
%"class.WTF::HashMap.859" = type { %"class.WTF::HashTable.860" }
%"class.WTF::HashTable.860" = type <{ %"struct.WTF::KeyValuePair.862"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.862" = type { i8*, %"class.blink::Member.911" }
%"class.blink::Member.911" = type { %"class.blink::MemberBase.912" }
%"class.blink::MemberBase.912" = type { %"class.blink::Supplement"* }
%"class.blink::Supplement" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::Member.913" }
%"class.blink::Member.913" = type { %"class.blink::MemberBase.914" }
%"class.blink::MemberBase.914" = type { %"class.blink::MojoBindingContext"* }
%"class.blink::ConsoleLogger" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::FeatureContext" = type { i32 (...)** }
%"class.v8::Isolate" = type { i8 }
%"class.blink::SecurityContext" = type { i32 (...)**, i32, %class.scoped_refptr.863, %"class.std::__1::unique_ptr.864", %"class.std::__1::unique_ptr.864", %"class.std::__1::unique_ptr.870", %"class.std::__1::unique_ptr.870", %"class.blink::Member.96", i32, [4 x i8], %"class.WTF::HashSet.876", i32, i32 }
%class.scoped_refptr.863 = type { %"class.blink::SecurityOrigin"* }
%"class.blink::SecurityOrigin" = type opaque
%"class.std::__1::unique_ptr.864" = type { %"class.std::__1::__compressed_pair.865" }
%"class.std::__1::__compressed_pair.865" = type { %"struct.std::__1::__compressed_pair_elem.866" }
%"struct.std::__1::__compressed_pair_elem.866" = type { %"class.blink::PermissionsPolicy"* }
%"class.blink::PermissionsPolicy" = type opaque
%"class.std::__1::unique_ptr.870" = type { %"class.std::__1::__compressed_pair.871" }
%"class.std::__1::__compressed_pair.871" = type { %"struct.std::__1::__compressed_pair_elem.872" }
%"struct.std::__1::__compressed_pair_elem.872" = type { %"class.blink::DocumentPolicy"* }
%"class.blink::DocumentPolicy" = type opaque
%"class.WTF::HashSet.876" = type { %"class.WTF::HashTable.877" }
%"class.WTF::HashTable.877" = type <{ i32*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.880" = type { %"class.blink::MemberBase.881" }
%"class.blink::MemberBase.881" = type { %"class.blink::Agent"* }
%"class.blink::Agent" = type opaque
%"class.blink::HeapVector.882" = type { %"class.WTF::Vector.885" }
%"class.WTF::Vector.885" = type { %"class.WTF::VectorBuffer.886" }
%"class.WTF::VectorBuffer.886" = type { %"class.WTF::VectorBufferBase.887" }
%"class.WTF::VectorBufferBase.887" = type { %"class.blink::Member.888"*, i32, i32 }
%"class.blink::Member.888" = type opaque
%"class.blink::Member.890" = type { %"class.blink::MemberBase.891" }
%"class.blink::MemberBase.891" = type { %"class.blink::PublicURLManager"* }
%"class.blink::PublicURLManager" = type opaque
%"class.blink::Member.892" = type { %"class.blink::MemberBase.893" }
%"class.blink::MemberBase.893" = type { %"class.blink::ContentSecurityPolicyDelegate"* }
%"class.blink::ContentSecurityPolicyDelegate" = type opaque
%"class.blink::DOMTimerCoordinator" = type { %"class.blink::HeapHashMap.894", i32, i32 }
%"class.blink::HeapHashMap.894" = type { %"class.WTF::HashMap.897" }
%"class.WTF::HashMap.897" = type { %"class.WTF::HashTable.898" }
%"class.WTF::HashTable.898" = type <{ %"struct.WTF::KeyValuePair.900"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.900" = type opaque
%"class.std::__1::unique_ptr.901" = type { %"class.std::__1::__compressed_pair.902" }
%"class.std::__1::__compressed_pair.902" = type { %"struct.std::__1::__compressed_pair_elem.903" }
%"struct.std::__1::__compressed_pair_elem.903" = type { %"class.blink::PolicyContainer"* }
%"class.blink::PolicyContainer" = type opaque
%"class.blink::Member.907" = type { %"class.blink::MemberBase.908" }
%"class.blink::MemberBase.908" = type { %"class.blink::OriginTrialContext"* }
%"class.blink::OriginTrialContext" = type opaque
%"class.blink::Member.909" = type { %"class.blink::MemberBase.910" }
%"class.blink::MemberBase.910" = type { %"class.blink::ContentSecurityPolicy"* }
%"class.blink::ContentSecurityPolicy" = type opaque
%"class.blink::Member.98" = type { %"class.blink::MemberBase.99" }
%"class.blink::MemberBase.99" = type { %"class.blink::ResourceFetcher"* }
%"class.blink::ResourceFetcher" = type opaque
%"class.blink::Member.100" = type { %"class.blink::MemberBase.101" }
%"class.blink::MemberBase.101" = type { %"class.blink::DocumentParser"* }
%"class.blink::DocumentParser" = type opaque
%"class.blink::Member.102" = type { %"class.blink::MemberBase.103" }
%"class.blink::MemberBase.103" = type { %"class.blink::ContextFeatures"* }
%"class.blink::ContextFeatures" = type opaque
%"class.blink::Member.104" = type { %"class.blink::MemberBase.105" }
%"class.blink::MemberBase.105" = type { %"class.blink::HttpRefreshScheduler"* }
%"class.blink::HttpRefreshScheduler" = type opaque
%"class.std::__1::unique_ptr.112" = type { %"class.std::__1::__compressed_pair.113" }
%"class.std::__1::__compressed_pair.113" = type { %"struct.std::__1::__compressed_pair_elem.114" }
%"struct.std::__1::__compressed_pair_elem.114" = type { %"class.blink::OriginAccessEntry"* }
%"class.blink::OriginAccessEntry" = type opaque
%"class.blink::KURL" = type { i8, i8, %"class.WTF::String", %"struct.url::Parsed", %"class.WTF::String", %"class.std::__1::unique_ptr.106" }
%"struct.url::Parsed" = type { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, %"struct.url::Parsed"* }
%"struct.url::Component" = type { i32, i32 }
%"class.std::__1::unique_ptr.106" = type { %"class.std::__1::__compressed_pair.107" }
%"class.std::__1::__compressed_pair.107" = type { %"struct.std::__1::__compressed_pair_elem.108" }
%"struct.std::__1::__compressed_pair_elem.108" = type { %"class.blink::KURL"* }
%"class.blink::Member.118" = type { %"class.blink::MemberBase.119" }
%"class.blink::MemberBase.119" = type { %"class.blink::DocumentType"* }
%"class.blink::DocumentType" = type opaque
%"class.blink::Member.120" = type { %"class.blink::MemberBase.121" }
%"class.blink::MemberBase.121" = type { %"class.blink::DOMImplementation"* }
%"class.blink::DOMImplementation" = type opaque
%"class.blink::TaskHandle" = type { %class.scoped_refptr.122 }
%class.scoped_refptr.122 = type { %"class.blink::TaskHandle::Runner"* }
%"class.blink::TaskHandle::Runner" = type opaque
%"class.WTF::Vector.123" = type { %"class.WTF::VectorBuffer.124" }
%"class.WTF::VectorBuffer.124" = type { %"class.WTF::VectorBufferBase.125" }
%"class.WTF::VectorBufferBase.125" = type { %"struct.blink::Document::PendingJavascriptUrl"*, i32, i32 }
%"struct.blink::Document::PendingJavascriptUrl" = type { %"class.blink::KURL", %class.scoped_refptr.126 }
%class.scoped_refptr.126 = type { %"class.blink::DOMWrapperWorld"* }
%"class.blink::DOMWrapperWorld" = type { %"class.WTF::RefCounted.127", i32, i32, %"class.blink::Persistent" }
%"class.WTF::RefCounted.127" = type { %"class.base::RefCounted.128" }
%"class.base::RefCounted.128" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::Persistent" = type { %"class.blink::PersistentBase" }
%"class.blink::PersistentBase" = type { %"class.blink::DOMDataStore"*, %"class.blink::PersistentNodePtr" }
%"class.blink::DOMDataStore" = type { i32 (...)**, i8, [7 x i8], %"class.blink::HeapHashMap.131" }
%"class.blink::HeapHashMap.131" = type { %"class.WTF::HashMap.134" }
%"class.WTF::HashMap.134" = type { %"class.WTF::HashTable.135" }
%"class.WTF::HashTable.135" = type <{ %"struct.WTF::KeyValuePair.137"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.137" = type { %"class.blink::WeakMember", %"class.blink::TraceWrapperV8Reference" }
%"class.blink::WeakMember" = type { %"class.blink::MemberBase.138" }
%"class.blink::MemberBase.138" = type { %"class.blink::ScriptWrappable"* }
%"class.blink::PersistentNodePtr" = type { %"class.blink::PersistentNode"* }
%"class.blink::PersistentNode" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"class.blink::Visitor" = type { i32 (...)**, %"class.blink::ThreadState"* }
%"class.blink::ThreadState" = type <{ %"class.std::__1::unique_ptr.139", i32, [4 x i8], %"class.std::__1::unique_ptr.275", %"class.std::__1::unique_ptr.275", i8**, i8, i8, i8, i8, i8, i8, [2 x i8], i64, i64, i32, i32, i32, [4 x i8], %"class.WTF::Deque", %"class.v8::Isolate"*, void (%"class.v8::Isolate"*, %"class.v8::EmbedderGraph"*, i8*)*, %"class.std::__1::unique_ptr.285", %"class.std::__1::unique_ptr.291", %"struct.blink::ThreadState::GCData", %"class.std::__1::unique_ptr.303", %"class.std::__1::unique_ptr.309", %"class.base::JobHandle", %"class.base::JobHandle", %"struct.std::__1::atomic.316", [7 x i8], i64, i8, [7 x i8], i64, %"class.base::TimeTicks", i8, i8, [6 x i8] }>
%"class.std::__1::unique_ptr.139" = type { %"class.std::__1::__compressed_pair.140" }
%"class.std::__1::__compressed_pair.140" = type { %"struct.std::__1::__compressed_pair_elem.141" }
%"struct.std::__1::__compressed_pair_elem.141" = type { %"class.blink::ThreadHeap"* }
%"class.blink::ThreadHeap" = type { %"class.blink::ThreadState"*, %"class.std::__1::unique_ptr.142", %"class.std::__1::unique_ptr.148", %"class.std::__1::unique_ptr.154", %"class.std::__1::unique_ptr.160", %"class.std::__1::unique_ptr.166", %"class.std::__1::unique_ptr.172", %"class.std::__1::unique_ptr.183", %"class.std::__1::unique_ptr.190", %"class.std::__1::unique_ptr.190", %"class.std::__1::unique_ptr.197", %"class.std::__1::unique_ptr.204", %"class.std::__1::unique_ptr.211", %"class.std::__1::unique_ptr.211", %"class.std::__1::unique_ptr.218", %"class.std::__1::unique_ptr.225", %"class.std::__1::unique_ptr.232", %"class.std::__1::unique_ptr.255", %"struct.blink::ThreadHeap::LastAllocatedRegion", [9 x %"class.blink::BaseArena"*], i64, i64 }
%"class.std::__1::unique_ptr.142" = type { %"class.std::__1::__compressed_pair.143" }
%"class.std::__1::__compressed_pair.143" = type { %"struct.std::__1::__compressed_pair_elem.144" }
%"struct.std::__1::__compressed_pair_elem.144" = type { %"class.blink::ThreadHeapStatsCollector"* }
%"class.blink::ThreadHeapStatsCollector" = type opaque
%"class.std::__1::unique_ptr.148" = type { %"class.std::__1::__compressed_pair.149" }
%"class.std::__1::__compressed_pair.149" = type { %"struct.std::__1::__compressed_pair_elem.150" }
%"struct.std::__1::__compressed_pair_elem.150" = type { %"class.blink::RegionTree"* }
%"class.blink::RegionTree" = type opaque
%"class.std::__1::unique_ptr.154" = type { %"class.std::__1::__compressed_pair.155" }
%"class.std::__1::__compressed_pair.155" = type { %"struct.std::__1::__compressed_pair_elem.156" }
%"struct.std::__1::__compressed_pair_elem.156" = type { %"class.blink::PageBloomFilter"* }
%"class.blink::PageBloomFilter" = type opaque
%"class.std::__1::unique_ptr.160" = type { %"class.std::__1::__compressed_pair.161" }
%"class.std::__1::__compressed_pair.161" = type { %"struct.std::__1::__compressed_pair_elem.162" }
%"struct.std::__1::__compressed_pair_elem.162" = type { %"class.blink::PagePool"* }
%"class.blink::PagePool" = type opaque
%"class.std::__1::unique_ptr.166" = type { %"class.std::__1::__compressed_pair.167" }
%"class.std::__1::__compressed_pair.167" = type { %"struct.std::__1::__compressed_pair_elem.168" }
%"struct.std::__1::__compressed_pair_elem.168" = type { %"class.blink::ProcessHeapReporter"* }
%"class.blink::ProcessHeapReporter" = type opaque
%"class.std::__1::unique_ptr.172" = type { %"class.std::__1::__compressed_pair.173" }
%"class.std::__1::__compressed_pair.173" = type { %"struct.std::__1::__compressed_pair_elem.174" }
%"struct.std::__1::__compressed_pair_elem.174" = type { %"class.blink::Worklist"* }
%"class.blink::Worklist" = type { [4 x %"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, i64, [512 x %"struct.blink::TraceDescriptor"] }
%"struct.blink::TraceDescriptor" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"struct.std::__1::atomic.175" }
%"class.base::Lock" = type { %"class.base::internal::LockImpl" }
%"class.base::internal::LockImpl" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"struct.std::__1::atomic.175" = type { %"struct.std::__1::__atomic_base.176" }
%"struct.std::__1::__atomic_base.176" = type { %"struct.std::__1::__atomic_base.177" }
%"struct.std::__1::__atomic_base.177" = type { %"struct.std::__1::__cxx_atomic_impl.178" }
%"struct.std::__1::__cxx_atomic_impl.178" = type { %"struct.std::__1::__cxx_atomic_base_impl.179" }
%"struct.std::__1::__cxx_atomic_base_impl.179" = type { i64 }
%"class.std::__1::unique_ptr.183" = type { %"class.std::__1::__compressed_pair.184" }
%"class.std::__1::__compressed_pair.184" = type { %"struct.std::__1::__compressed_pair_elem.185" }
%"struct.std::__1::__compressed_pair_elem.185" = type { %"class.blink::Worklist.186"* }
%"class.blink::Worklist.186" = type { [4 x %"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"struct.std::__1::atomic.175" }
%"class.std::__1::unique_ptr.190" = type { %"class.std::__1::__compressed_pair.191" }
%"class.std::__1::__compressed_pair.191" = type { %"struct.std::__1::__compressed_pair_elem.192" }
%"struct.std::__1::__compressed_pair_elem.192" = type { %"class.blink::Worklist.193"* }
%"class.blink::Worklist.193" = type { [4 x %"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"class.blink::Worklist<const void *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *, 16, 4>::Segment" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, i64, [16 x i8*] }
%"class.blink::Worklist<const void *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"struct.std::__1::atomic.175" }
%"class.std::__1::unique_ptr.197" = type { %"class.std::__1::__compressed_pair.198" }
%"class.std::__1::__compressed_pair.198" = type { %"struct.std::__1::__compressed_pair_elem.199" }
%"struct.std::__1::__compressed_pair_elem.199" = type { %"class.blink::Worklist.200"* }
%"class.blink::Worklist.200" = type { [4 x %"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.175" }
%"class.std::__1::unique_ptr.204" = type { %"class.std::__1::__compressed_pair.205" }
%"class.std::__1::__compressed_pair.205" = type { %"struct.std::__1::__compressed_pair_elem.206" }
%"struct.std::__1::__compressed_pair_elem.206" = type { %"class.blink::Worklist.207"* }
%"class.blink::Worklist.207" = type { [4 x %"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *const *, 256, 4>::Segment" = type opaque
%"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"struct.std::__1::atomic.175" }
%"class.std::__1::unique_ptr.211" = type { %"class.std::__1::__compressed_pair.212" }
%"class.std::__1::__compressed_pair.212" = type { %"struct.std::__1::__compressed_pair_elem.213" }
%"struct.std::__1::__compressed_pair_elem.213" = type { %"class.blink::Worklist.214"* }
%"class.blink::Worklist.214" = type { [4 x %"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.175" }
%"class.std::__1::unique_ptr.218" = type { %"class.std::__1::__compressed_pair.219" }
%"class.std::__1::__compressed_pair.219" = type { %"struct.std::__1::__compressed_pair_elem.220" }
%"struct.std::__1::__compressed_pair_elem.220" = type { %"class.blink::Worklist.221"* }
%"class.blink::Worklist.221" = type { [4 x %"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment" = type opaque
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"struct.std::__1::atomic.175" }
%"class.std::__1::unique_ptr.225" = type { %"class.std::__1::__compressed_pair.226" }
%"class.std::__1::__compressed_pair.226" = type { %"struct.std::__1::__compressed_pair_elem.227" }
%"struct.std::__1::__compressed_pair_elem.227" = type { %"class.blink::Worklist.228"* }
%"class.blink::Worklist.228" = type { [4 x %"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, i64, [64 x %"struct.blink::NotSafeToConcurrentlyTraceItem"] }
%"struct.blink::NotSafeToConcurrentlyTraceItem" = type { %"struct.blink::TraceDescriptor", i64 }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.175" }
%"class.std::__1::unique_ptr.232" = type { %"class.std::__1::__compressed_pair.233" }
%"class.std::__1::__compressed_pair.233" = type { %"struct.std::__1::__compressed_pair_elem.234" }
%"struct.std::__1::__compressed_pair_elem.234" = type { %"class.blink::WeakContainersWorklist"* }
%"class.blink::WeakContainersWorklist" = type { %"class.WTF::Mutex", %"class.std::__1::unordered_set" }
%"class.WTF::Mutex" = type { %"class.WTF::MutexBase" }
%"class.WTF::MutexBase" = type { %"struct.WTF::PlatformMutex" }
%"struct.WTF::PlatformMutex" = type { %union.pthread_mutex_t }
%"class.std::__1::unordered_set" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.235", %"class.std::__1::__compressed_pair.242", %"class.std::__1::__compressed_pair.247", %"class.std::__1::__compressed_pair.249", [4 x i8] }>
%"class.std::__1::unique_ptr.235" = type { %"class.std::__1::__compressed_pair.236" }
%"class.std::__1::__compressed_pair.236" = type { %"struct.std::__1::__compressed_pair_elem.237", %"struct.std::__1::__compressed_pair_elem.238" }
%"struct.std::__1::__compressed_pair_elem.237" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.238" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.239" }
%"class.std::__1::__compressed_pair.239" = type { %"struct.std::__1::__compressed_pair_elem.240" }
%"struct.std::__1::__compressed_pair_elem.240" = type { i64 }
%"class.std::__1::__compressed_pair.242" = type { %"struct.std::__1::__compressed_pair_elem.243" }
%"struct.std::__1::__compressed_pair_elem.243" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.247" = type { %"struct.std::__1::__compressed_pair_elem.240" }
%"class.std::__1::__compressed_pair.249" = type { %"struct.std::__1::__compressed_pair_elem.250" }
%"struct.std::__1::__compressed_pair_elem.250" = type { float }
%"class.std::__1::unique_ptr.255" = type { %"class.std::__1::__compressed_pair.256" }
%"class.std::__1::__compressed_pair.256" = type { %"struct.std::__1::__compressed_pair_elem.257" }
%"struct.std::__1::__compressed_pair_elem.257" = type { %"class.blink::HeapCompact"* }
%"class.blink::HeapCompact" = type <{ %"class.blink::ThreadHeap"*, %"class.std::__1::unique_ptr.258", i8, [7 x i8], i64, i64, i32, [4 x i8], i64, i8, [7 x i8] }>
%"class.std::__1::unique_ptr.258" = type { %"class.std::__1::__compressed_pair.259" }
%"class.std::__1::__compressed_pair.259" = type { %"struct.std::__1::__compressed_pair_elem.260" }
%"struct.std::__1::__compressed_pair_elem.260" = type { %"class.blink::HeapCompact::MovableObjectFixups"* }
%"class.blink::HeapCompact::MovableObjectFixups" = type opaque
%"struct.blink::ThreadHeap::LastAllocatedRegion" = type { i8*, i64 }
%"class.blink::BaseArena" = type <{ i32 (...)**, %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::ThreadState"*, i32, [4 x i8] }>
%"class.blink::PageStackThreadSafe" = type { %"class.blink::PageStack", %"class.WTF::Mutex" }
%"class.blink::PageStack" = type { %"class.WTF::Vector.267" }
%"class.WTF::Vector.267" = type { %"class.WTF::VectorBuffer.268" }
%"class.WTF::VectorBuffer.268" = type { %"class.WTF::VectorBufferBase.269" }
%"class.WTF::VectorBufferBase.269" = type { %"class.blink::BasePage"**, i32, i32 }
%"class.blink::BasePage" = type <{ i32 (...)**, %"class.blink::PageMemory"*, %"class.blink::BaseArena"*, %"class.blink::ThreadState"*, i64, i8, i8, i8, [5 x i8] }>
%"class.blink::PageMemory" = type opaque
%"class.std::__1::unique_ptr.275" = type { %"class.std::__1::__compressed_pair.276" }
%"class.std::__1::__compressed_pair.276" = type { %"struct.std::__1::__compressed_pair_elem.277" }
%"struct.std::__1::__compressed_pair_elem.277" = type { %"class.blink::PersistentRegion"* }
%"class.blink::PersistentRegion" = type { %"class.blink::PersistentRegionBase" }
%"class.blink::PersistentRegionBase" = type { %"class.blink::PersistentNode"*, %"struct.blink::PersistentNodeSlots"* }
%"struct.blink::PersistentNodeSlots" = type { %"struct.blink::PersistentNodeSlots"*, [256 x %"class.blink::PersistentNode"] }
%"class.WTF::Deque" = type { %"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer", i32, i32 }
%"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer" = type { %"class.WTF::VectorBuffer.283" }
%"class.WTF::VectorBuffer.283" = type { %"class.WTF::VectorBufferBase.284" }
%"class.WTF::VectorBufferBase.284" = type { %"struct.std::__1::pair"*, i32, i32 }
%"struct.std::__1::pair" = type { i8*, i1 (%"class.blink::LivenessBroker"*, i8*)* }
%"class.blink::LivenessBroker" = type { i8 }
%"class.v8::EmbedderGraph" = type opaque
%"class.std::__1::unique_ptr.285" = type { %"class.std::__1::__compressed_pair.286" }
%"class.std::__1::__compressed_pair.286" = type { %"struct.std::__1::__compressed_pair_elem.287" }
%"struct.std::__1::__compressed_pair_elem.287" = type { %"class.blink::UnifiedHeapController"* }
%"class.blink::UnifiedHeapController" = type opaque
%"class.std::__1::unique_ptr.291" = type { %"class.std::__1::__compressed_pair.292" }
%"class.std::__1::__compressed_pair.292" = type { %"struct.std::__1::__compressed_pair_elem.293" }
%"struct.std::__1::__compressed_pair_elem.293" = type { %"class.v8::EmbedderRootsHandler"* }
%"class.v8::EmbedderRootsHandler" = type { i32 (...)** }
%"struct.blink::ThreadState::GCData" = type { i32, i32, i32, i32, %"class.std::__1::unique_ptr.297" }
%"class.std::__1::unique_ptr.297" = type { %"class.std::__1::__compressed_pair.298" }
%"class.std::__1::__compressed_pair.298" = type { %"struct.std::__1::__compressed_pair_elem.299" }
%"struct.std::__1::__compressed_pair_elem.299" = type { %"class.blink::MarkingVisitor"* }
%"class.blink::MarkingVisitor" = type { %"class.blink::MarkingVisitorBase", %"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" }
%"class.blink::MarkingVisitorBase" = type { %"class.blink::Visitor", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View", %"class.blink::Worklist<const void *, 16, 4>::View", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View", %"class.blink::Worklist<const void *const *, 256, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::WeakContainersWorklist"*, i64, i32, i32 }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View" = type <{ %"class.blink::Worklist"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View" = type <{ %"class.blink::Worklist.186"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *, 16, 4>::View" = type <{ %"class.blink::Worklist.193"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View" = type <{ %"class.blink::Worklist.200"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *const *, 256, 4>::View" = type <{ %"class.blink::Worklist.207"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View" = type <{ %"class.blink::Worklist.214"*, i32, [4 x i8] }>
%"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" = type { %"class.std::__1::vector", i64 }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.blink::HeapObjectHeader"**, %"class.blink::HeapObjectHeader"**, %"class.std::__1::__compressed_pair.842" }
%"class.blink::HeapObjectHeader" = type { i32, i16, i16 }
%"class.std::__1::__compressed_pair.842" = type { %"struct.std::__1::__compressed_pair_elem.843" }
%"struct.std::__1::__compressed_pair_elem.843" = type { %"class.blink::HeapObjectHeader"** }
%"class.std::__1::unique_ptr.303" = type { %"class.std::__1::__compressed_pair.304" }
%"class.std::__1::__compressed_pair.304" = type { %"struct.std::__1::__compressed_pair_elem.305" }
%"struct.std::__1::__compressed_pair_elem.305" = type { %"class.blink::ThreadState::IncrementalMarkingScheduler"* }
%"class.blink::ThreadState::IncrementalMarkingScheduler" = type opaque
%"class.std::__1::unique_ptr.309" = type { %"class.std::__1::__compressed_pair.310" }
%"class.std::__1::__compressed_pair.310" = type { %"struct.std::__1::__compressed_pair_elem.311" }
%"struct.std::__1::__compressed_pair_elem.311" = type { %"class.blink::MarkingSchedulingOracle"* }
%"class.blink::MarkingSchedulingOracle" = type opaque
%"class.base::JobHandle" = type { %class.scoped_refptr.315 }
%class.scoped_refptr.315 = type { %"class.base::internal::JobTaskSource"* }
%"class.base::internal::JobTaskSource" = type opaque
%"struct.std::__1::atomic.316" = type { %"struct.std::__1::__atomic_base.317" }
%"struct.std::__1::__atomic_base.317" = type { %"struct.std::__1::__cxx_atomic_impl.318" }
%"struct.std::__1::__cxx_atomic_impl.318" = type { %"struct.std::__1::__cxx_atomic_base_impl.319" }
%"struct.std::__1::__cxx_atomic_base_impl.319" = type { i8 }
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.blink::Member.332" = type { %"class.blink::MemberBase.333" }
%"class.blink::MemberBase.333" = type { %"class.blink::Range"* }
%"class.blink::Range" = type opaque
%"class.blink::UserActionElementSet" = type { %"class.blink::HeapHashMap.334" }
%"class.blink::HeapHashMap.334" = type { %"class.WTF::HashMap.337" }
%"class.WTF::HashMap.337" = type { %"class.WTF::HashTable.338" }
%"class.WTF::HashTable.338" = type <{ %"struct.WTF::KeyValuePair.340"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.340" = type opaque
%"class.blink::Member.341" = type { %"class.blink::MemberBase.342" }
%"class.blink::MemberBase.342" = type { %"class.blink::RootScrollerController"* }
%"class.blink::RootScrollerController" = type opaque
%"class.blink::HeapHashSet" = type { %"class.WTF::HashSet" }
%"class.WTF::HashSet" = type { %"class.WTF::HashTable.345" }
%"class.WTF::HashTable.345" = type <{ %"class.blink::WeakMember.347"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.347" = type opaque
%"class.blink::HeapHashSet.348" = type { %"class.WTF::HashSet.351" }
%"class.WTF::HashSet.351" = type { %"class.WTF::HashTable.352" }
%"class.WTF::HashTable.352" = type <{ %"class.blink::WeakMember.354"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.354" = type opaque
%"class.blink::Member.355" = type { %"class.blink::MemberBase.356" }
%"class.blink::MemberBase.356" = type { %"class.blink::ElementIntersectionObserverData"* }
%"class.blink::ElementIntersectionObserverData" = type opaque
%"class.blink::Member.357" = type { %"class.blink::MemberBase.358" }
%"class.blink::MemberBase.358" = type { %"class.blink::StyleEngine"* }
%"class.blink::StyleEngine" = type opaque
%"class.blink::Member.359" = type { %"class.blink::MemberBase.360" }
%"class.blink::MemberBase.360" = type { %"class.blink::StyleSheetList"* }
%"class.blink::StyleSheetList" = type opaque
%"class.blink::Member.361" = type { %"class.blink::MemberBase.362" }
%"class.blink::MemberBase.362" = type { %"class.blink::FormController"* }
%"class.blink::FormController" = type opaque
%"class.blink::TextLinkColors" = type { %"class.blink::Color", %"class.blink::Color", %"class.blink::Color", %"class.blink::Color", i8, i8, i8, i8 }
%"class.blink::Color" = type { i32 }
%"class.blink::Member.363" = type { %"class.blink::MemberBase.364" }
%"class.blink::MemberBase.364" = type { %"class.blink::VisitedLinkState"* }
%"class.blink::VisitedLinkState" = type opaque
%"class.blink::HeapHashMap.365" = type { %"class.WTF::HashMap.368" }
%"class.WTF::HashMap.368" = type { %"class.WTF::HashTable.369" }
%"class.WTF::HashTable.369" = type <{ %"struct.WTF::KeyValuePair.371"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.371" = type opaque
%"class.WTF::Vector.372" = type { %"class.WTF::VectorBuffer.373" }
%"class.WTF::VectorBuffer.373" = type { %"class.WTF::VectorBufferBase.374" }
%"class.WTF::VectorBufferBase.374" = type { %"class.blink::AXContext"**, i32, i32 }
%"class.blink::AXContext" = type opaque
%"class.blink::Member.377" = type { %"class.blink::MemberBase.378" }
%"class.blink::MemberBase.378" = type { %"class.blink::AXObjectCache"* }
%"class.blink::AXObjectCache" = type opaque
%"class.blink::Member.379" = type { %"class.blink::MemberBase.380" }
%"class.blink::MemberBase.380" = type { %"class.blink::DocumentMarkerController"* }
%"class.blink::DocumentMarkerController" = type opaque
%"class.base::ElapsedTimer" = type { %"class.base::TimeTicks" }
%"class.blink::Member.381" = type { %"class.blink::MemberBase.382" }
%"class.blink::MemberBase.382" = type { %"class.blink::ScriptRunner"* }
%"class.blink::ScriptRunner" = type opaque
%"class.blink::HeapVector.383" = type { %"class.WTF::Vector.386" }
%"class.WTF::Vector.386" = type { %"class.WTF::VectorBuffer.387" }
%"class.WTF::VectorBuffer.387" = type { %"class.WTF::VectorBufferBase.388" }
%"class.WTF::VectorBufferBase.388" = type { %"class.blink::Member.389"*, i32, i32 }
%"class.blink::Member.389" = type opaque
%"class.std::__1::unique_ptr.391" = type { %"class.std::__1::__compressed_pair.392" }
%"class.std::__1::__compressed_pair.392" = type { %"struct.std::__1::__compressed_pair_elem.393" }
%"struct.std::__1::__compressed_pair_elem.393" = type { %"class.blink::TransformSource"* }
%"class.blink::TransformSource" = type opaque
%"class.blink::DocumentEncodingData" = type <{ %"class.WTF::TextEncoding", i8, i8, [6 x i8] }>
%"class.WTF::TextEncoding" = type { i8* }
%"class.blink::HeapHashSet.397" = type { %"class.WTF::HashSet.400" }
%"class.WTF::HashSet.400" = type { %"class.WTF::HashTable.401" }
%"class.WTF::HashTable.401" = type <{ %"class.blink::WeakMember.403"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.403" = type opaque
%"class.blink::LiveNodeListRegistry" = type <{ %"class.WTF::Vector.404", i32, [4 x i8] }>
%"class.WTF::Vector.404" = type { %"class.WTF::VectorBuffer.405" }
%"class.WTF::VectorBuffer.405" = type { %"class.WTF::VectorBufferBase.406" }
%"class.WTF::VectorBufferBase.406" = type { %"struct.std::__1::pair.407"*, i32, i32 }
%"struct.std::__1::pair.407" = type opaque
%"class.blink::Member.410" = type { %"class.blink::MemberBase.411" }
%"class.blink::MemberBase.411" = type { %"class.blink::SVGDocumentExtensions"* }
%"class.blink::SVGDocumentExtensions" = type opaque
%"class.WTF::Vector.412" = type { %"class.WTF::VectorBuffer.413" }
%"class.WTF::VectorBuffer.413" = type { %"class.WTF::VectorBufferBase.414" }
%"class.WTF::VectorBufferBase.414" = type { %"struct.blink::AnnotatedRegionValue"*, i32, i32 }
%"struct.blink::AnnotatedRegionValue" = type opaque
%"class.std::__1::unique_ptr.417" = type { %"class.std::__1::__compressed_pair.418" }
%"class.std::__1::__compressed_pair.418" = type { %"struct.std::__1::__compressed_pair_elem.419" }
%"struct.std::__1::__compressed_pair_elem.419" = type { %"class.blink::SelectorQueryCache"* }
%"class.blink::SelectorQueryCache" = type opaque
%"class.blink::NthIndexCache" = type opaque
%"class.blink::LayoutView" = type opaque
%"class.blink::HeapVector.423" = type { %"class.WTF::Vector.426" }
%"class.WTF::Vector.426" = type { %"class.WTF::VectorBuffer.427" }
%"class.WTF::VectorBuffer.427" = type { %"class.WTF::VectorBufferBase.428" }
%"class.WTF::VectorBufferBase.428" = type { %"class.blink::Member.429"*, i32, i32 }
%"class.blink::Member.429" = type opaque
%"class.blink::DocumentTiming" = type { %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.blink::Member.35" }
%"class.blink::Member.431" = type { %"class.blink::MemberBase.432" }
%"class.blink::MemberBase.432" = type { %"class.blink::MediaQueryMatcher"* }
%"class.blink::MediaQueryMatcher" = type opaque
%"class.blink::Member.433" = type { %"class.blink::MemberBase.434" }
%"class.blink::MemberBase.434" = type { %"class.blink::ScriptedAnimationController"* }
%"class.blink::ScriptedAnimationController" = type opaque
%"class.blink::Member.435" = type { %"class.blink::MemberBase.436" }
%"class.blink::MemberBase.436" = type { %"class.blink::ScriptedIdleTaskController"* }
%"class.blink::ScriptedIdleTaskController" = type opaque
%"class.blink::Member.437" = type { %"class.blink::MemberBase.438" }
%"class.blink::MemberBase.438" = type { %"class.blink::TextAutosizer"* }
%"class.blink::TextAutosizer" = type opaque
%"class.blink::Member.439" = type { %"class.blink::MemberBase.440" }
%"class.blink::MemberBase.440" = type { %"class.blink::ElementDataCache"* }
%"class.blink::ElementDataCache" = type opaque
%"class.WTF::HashMap.441" = type { %"class.WTF::HashTable.442" }
%"class.WTF::HashTable.442" = type <{ %"struct.WTF::KeyValuePair.445"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.445" = type opaque
%"class.blink::Member.446" = type { %"class.blink::MemberBase.447" }
%"class.blink::MemberBase.447" = type { %"class.blink::DocumentAnimations"* }
%"class.blink::DocumentAnimations" = type opaque
%"class.blink::Member.448" = type { %"class.blink::MemberBase.449" }
%"class.blink::MemberBase.449" = type { %"class.blink::DocumentTimeline"* }
%"class.blink::DocumentTimeline" = type opaque
%"class.blink::Member.450" = type { %"class.blink::MemberBase.451" }
%"class.blink::MemberBase.451" = type { %"class.blink::PendingAnimations"* }
%"class.blink::PendingAnimations" = type opaque
%"class.blink::Member.452" = type { %"class.blink::MemberBase.453" }
%"class.blink::MemberBase.453" = type { %"class.blink::WorkletAnimationController"* }
%"class.blink::WorkletAnimationController" = type opaque
%"class.blink::HeapTaskRunnerTimer" = type { %"class.blink::TimerBase", %"class.blink::WeakMember.331", { i64, i64 } }
%"class.blink::TimerBase" = type { i32 (...)**, %"class.base::TimeTicks", %"class.base::TimeDelta", %"class.base::Location", %class.scoped_refptr.322, %"class.base::WeakPtrFactory" }
%"class.base::TimeDelta" = type { i64 }
%"class.base::Location" = type { i8*, i8*, i32, i8* }
%class.scoped_refptr.322 = type { %"class.base::SingleThreadTaskRunner"* }
%"class.base::SingleThreadTaskRunner" = type { %"class.base::SequencedTaskRunner.base", [4 x i8] }
%"class.base::SequencedTaskRunner.base" = type { %"class.base::TaskRunner.base" }
%"class.base::TaskRunner.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.323" }>
%"class.base::RefCountedThreadSafe.323" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::WeakPtrFactory" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.base::internal::WeakPtrFactoryBase" = type { %"class.base::internal::WeakReferenceOwner", i64 }
%"class.base::internal::WeakReferenceOwner" = type { %class.scoped_refptr.324 }
%class.scoped_refptr.324 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.base::internal::WeakReference::Flag" = type <{ %"class.base::RefCountedThreadSafe.325", %"class.base::AtomicFlag", [3 x i8] }>
%"class.base::RefCountedThreadSafe.325" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::AtomicFlag" = type { %"struct.std::__1::atomic.326" }
%"struct.std::__1::atomic.326" = type { %"struct.std::__1::__atomic_base.327" }
%"struct.std::__1::__atomic_base.327" = type { %"struct.std::__1::__atomic_base.328" }
%"struct.std::__1::__atomic_base.328" = type { %"struct.std::__1::__cxx_atomic_impl.329" }
%"struct.std::__1::__cxx_atomic_impl.329" = type { %"struct.std::__1::__cxx_atomic_base_impl.330" }
%"struct.std::__1::__cxx_atomic_base_impl.330" = type { i8 }
%"class.blink::WeakMember.331" = type { %"class.blink::MemberBase.36" }
%"class.blink::HeapHashSet.454" = type { %"class.WTF::HashSet.457" }
%"class.WTF::HashSet.457" = type { %"class.WTF::HashTable.458" }
%"class.WTF::HashTable.458" = type <{ %"class.blink::Member.460"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.460" = type opaque
%"class.blink::Member.461" = type { %"class.blink::MemberBase.462" }
%"class.blink::MemberBase.462" = type { %"class.blink::CanvasFontCache"* }
%"class.blink::CanvasFontCache" = type opaque
%"class.blink::Member.463" = type { %"class.blink::MemberBase.464" }
%"class.blink::MemberBase.464" = type { %"class.blink::IntersectionObserverController"* }
%"class.blink::IntersectionObserverController" = type opaque
%"class.blink::Member.465" = type { %"class.blink::MemberBase.466" }
%"class.blink::MemberBase.466" = type { %"class.blink::SnapCoordinator"* }
%"class.blink::SnapCoordinator" = type opaque
%"class.blink::Member.467" = type { %"class.blink::MemberBase.468" }
%"class.blink::MemberBase.468" = type { %"class.blink::PropertyRegistry"* }
%"class.blink::PropertyRegistry" = type opaque
%"class.blink::Member.469" = type { %"class.blink::MemberBase.470" }
%"class.blink::MemberBase.470" = type { %"class.blink::Document::NetworkStateObserver"* }
%"class.blink::Document::NetworkStateObserver" = type opaque
%"class.std::__1::unique_ptr.471" = type { %"class.std::__1::__compressed_pair.472" }
%"class.std::__1::__compressed_pair.472" = type { %"struct.std::__1::__compressed_pair_elem.473" }
%"struct.std::__1::__compressed_pair_elem.473" = type { %"class.ukm::UkmRecorder"* }
%"class.ukm::UkmRecorder" = type opaque
%"class.std::__1::unique_ptr.477" = type { %"class.std::__1::__compressed_pair.478" }
%"class.std::__1::__compressed_pair.478" = type { %"struct.std::__1::__compressed_pair_elem.479" }
%"struct.std::__1::__compressed_pair_elem.479" = type { %"class.blink::FontMatchingMetrics"* }
%"class.blink::FontMatchingMetrics" = type opaque
%"class.blink::Member.483" = type { %"class.blink::MemberBase.484" }
%"class.blink::MemberBase.484" = type { %"class.blink::DOMFeaturePolicy"* }
%"class.blink::DOMFeaturePolicy" = type opaque
%"class.blink::Member.485" = type { %"class.blink::MemberBase.486" }
%"class.blink::MemberBase.486" = type { %"class.blink::SlotAssignmentEngine"* }
%"class.blink::SlotAssignmentEngine" = type opaque
%"class.blink::Member.487" = type { %"class.blink::MemberBase.488" }
%"class.blink::MemberBase.488" = type { %"class.blink::ViewportData"* }
%"class.blink::ViewportData" = type opaque
%"class.blink::Member.489" = type { %"class.blink::MemberBase.490" }
%"class.blink::MemberBase.490" = type { %"class.blink::LazyLoadImageObserver"* }
%"class.blink::LazyLoadImageObserver" = type opaque
%"class.WTF::Vector.491" = type { %"class.WTF::VectorBuffer.492" }
%"class.WTF::VectorBuffer.492" = type { %"class.WTF::VectorBufferBase.493" }
%"class.WTF::VectorBufferBase.493" = type { i8*, i32, i32 }
%"class.blink::HeapHashMap.496" = type { %"class.WTF::HashMap.499" }
%"class.WTF::HashMap.499" = type { %"class.WTF::HashTable.500" }
%"class.WTF::HashTable.500" = type <{ %"struct.WTF::KeyValuePair.502"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.502" = type opaque
%"class.blink::Member.503" = type { %"class.blink::MemberBase.504" }
%"class.blink::MemberBase.504" = type { %"class.blink::BeforeUnloadEventListener"* }
%"class.blink::BeforeUnloadEventListener" = type opaque
%"class.std::__1::unique_ptr.505" = type { %"class.std::__1::__compressed_pair.506" }
%"class.std::__1::__compressed_pair.506" = type { %"struct.std::__1::__compressed_pair_elem.507" }
%"struct.std::__1::__compressed_pair_elem.507" = type { %"class.blink::DocumentResourceCoordinator"* }
%"class.blink::DocumentResourceCoordinator" = type opaque
%"class.blink::Member.511" = type { %"class.blink::MemberBase.512" }
%"class.blink::MemberBase.512" = type { %"class.blink::CookieJar"* }
%"class.blink::CookieJar" = type opaque
%"class.blink::Member.513" = type { %"class.blink::MemberBase.514" }
%"class.blink::MemberBase.514" = type { %"class.blink::FragmentDirective"* }
%"class.blink::FragmentDirective" = type { %"class.blink::ScriptWrappable" }
%"class.blink::HeapHashMap.515" = type { %"class.WTF::HashMap.518" }
%"class.WTF::HashMap.518" = type { %"class.WTF::HashTable.519" }
%"class.WTF::HashTable.519" = type <{ %"struct.WTF::KeyValuePair.521"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.521" = type opaque
%"class.blink::HeapObserverSet" = type { i32, [4 x i8], %"class.blink::HeapHashSet.522" }
%"class.blink::HeapHashSet.522" = type { %"class.WTF::HashSet.525" }
%"class.WTF::HashSet.525" = type { %"class.WTF::HashTable.526" }
%"class.WTF::HashTable.526" = type <{ %"class.blink::WeakMember.528"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.528" = type opaque
%"class.blink::Member.529" = type { %"class.blink::MemberBase.530" }
%"class.blink::MemberBase.530" = type { %"class.blink::DisplayLockDocumentState"* }
%"class.blink::DisplayLockDocumentState" = type opaque
%"class.blink::Member.531" = type { %"class.blink::MemberBase.532" }
%"class.blink::MemberBase.532" = type { %"class.blink::FontPreloadManager"* }
%"class.blink::FontPreloadManager" = type <{ %"class.blink::Member.35", %"class.blink::HeapHashSet.833", i32, [4 x i8], %"class.blink::HeapTaskRunnerTimer.840", %"class.base::TimeDelta", i32, [4 x i8] }>
%"class.blink::HeapHashSet.833" = type { %"class.WTF::HashSet.836" }
%"class.WTF::HashSet.836" = type { %"class.WTF::HashTable.837" }
%"class.WTF::HashTable.837" = type <{ %"class.blink::Member.839"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.839" = type opaque
%"class.blink::HeapTaskRunnerTimer.840" = type { %"class.blink::TimerBase", %"class.blink::WeakMember.841", { i64, i64 } }
%"class.blink::WeakMember.841" = type { %"class.blink::MemberBase.532" }
%"class.blink::WeakMember.533" = type { %"class.blink::MemberBase" }
%"class.blink::Member.534" = type { %"class.blink::MemberBase.535" }
%"class.blink::MemberBase.535" = type { %"class.blink::DocumentData"* }
%"class.blink::DocumentData" = type opaque
%class.scoped_refptr.536 = type { %"class.blink::ComputedStyle"* }
%"class.blink::ComputedStyle" = type opaque
%"class.blink::CSSToLengthConversionData" = type <{ %"class.blink::ComputedStyle"*, %"class.blink::CSSToLengthConversionData::FontSizes", %"class.blink::CSSToLengthConversionData::ViewportSize", float, [4 x i8] }>
%"class.blink::CSSToLengthConversionData::FontSizes" = type <{ float, float, %"class.blink::Font"*, float, [4 x i8] }>
%"class.blink::Font" = type opaque
%"class.blink::CSSToLengthConversionData::ViewportSize" = type { %"class.blink::DoubleSize" }
%"class.blink::DoubleSize" = type { double, double }
%class.scoped_refptr.32 = type { %"class.blink::ComputedStyle"* }
%"class.blink::CSSAnimationUpdate" = type { %"class.blink::HeapVector.537", %"class.WTF::Vector.695", %"class.blink::HeapHashSet.700", %"class.WTF::Vector.695", %"class.blink::HeapVector.707", %"class.blink::HeapVector.714", %"class.blink::HeapHashMap.721", %"class.WTF::HashSet.728", %"class.WTF::HashSet.728", %"class.blink::HeapHashMap.732", %"class.blink::HeapHashMap.732", %"class.blink::HeapHashMap.732", %"class.blink::HeapHashMap.732" }
%"class.blink::HeapVector.537" = type { %"class.WTF::Vector.540" }
%"class.WTF::Vector.540" = type { %"class.WTF::VectorBuffer.541" }
%"class.WTF::VectorBuffer.541" = type { %"class.WTF::VectorBufferBase.542" }
%"class.WTF::VectorBufferBase.542" = type { %"class.blink::NewCSSAnimation"*, i32, i32 }
%"class.blink::NewCSSAnimation" = type { %"class.WTF::AtomicString", i64, i64, %"class.blink::Member.543", %"struct.blink::Timing", %"class.blink::Member.617", i32, %"class.blink::Member.629", %"class.WTF::Vector.689" }
%"class.blink::Member.543" = type { %"class.blink::MemberBase.544" }
%"class.blink::MemberBase.544" = type { %"class.blink::InertEffect"* }
%"class.blink::InertEffect" = type { %"class.blink::AnimationEffect", %"class.blink::Member.563", i8, %"class.absl::optional", %"class.absl::optional.612" }
%"class.blink::AnimationEffect" = type { %"class.blink::ScriptWrappable", %"class.blink::Member.545", %"struct.blink::Timing", %"class.blink::Member.549", %"struct.blink::Timing::CalculatedTiming", i8, %"class.absl::optional", %"class.absl::optional.558", %"class.blink::AnimationTimeDelta" }
%"class.blink::Member.545" = type { %"class.blink::MemberBase.546" }
%"class.blink::MemberBase.546" = type { %"class.blink::AnimationEffectOwner"* }
%"class.blink::AnimationEffectOwner" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::Member.549" = type { %"class.blink::MemberBase.550" }
%"class.blink::MemberBase.550" = type { %"class.blink::AnimationEffect::EventDelegate"* }
%"class.blink::AnimationEffect::EventDelegate" = type { i32 (...)** }
%"struct.blink::Timing::CalculatedTiming" = type { i32, %"class.absl::optional.553", %"class.absl::optional.553", i8, i8, i8, %"class.absl::optional", %"class.blink::AnimationTimeDelta", %"class.blink::AnimationTimeDelta", %"class.blink::AnimationTimeDelta" }
%"class.absl::optional.553" = type { %"class.absl::optional_internal::optional_data.554" }
%"class.absl::optional_internal::optional_data.554" = type { %"class.absl::optional_internal::optional_data_base.555" }
%"class.absl::optional_internal::optional_data_base.555" = type { %"class.absl::optional_internal::optional_data_dtor_base.556" }
%"class.absl::optional_internal::optional_data_dtor_base.556" = type { i8, %union.anon.557 }
%union.anon.557 = type { double }
%"class.absl::optional.558" = type { %"class.absl::optional_internal::optional_data.559" }
%"class.absl::optional_internal::optional_data.559" = type { %"class.absl::optional_internal::optional_data_base.560" }
%"class.absl::optional_internal::optional_data_base.560" = type { %"class.absl::optional_internal::optional_data_dtor_base.561" }
%"class.absl::optional_internal::optional_data_dtor_base.561" = type { i8, %union.anon.562 }
%union.anon.562 = type { i32 }
%"class.blink::AnimationTimeDelta" = type { double }
%"class.blink::Member.563" = type { %"class.blink::MemberBase.564" }
%"class.blink::MemberBase.564" = type { %"class.blink::KeyframeEffectModelBase"* }
%"class.blink::KeyframeEffectModelBase" = type <{ %"class.blink::EffectModel", %"class.blink::HeapVector.567", %"class.blink::Member.575", %"class.blink::Member.600", i32, [4 x i8], double, %"class.blink::AnimationTimeDelta", i32, [4 x i8], %class.scoped_refptr.547, i8, i8, i8, [5 x i8] }>
%"class.blink::EffectModel" = type { i32 (...)** }
%"class.blink::HeapVector.567" = type { %"class.WTF::Vector.570" }
%"class.WTF::Vector.570" = type { %"class.WTF::VectorBuffer.571" }
%"class.WTF::VectorBuffer.571" = type { %"class.WTF::VectorBufferBase.572" }
%"class.WTF::VectorBufferBase.572" = type { %"class.blink::Member.573"*, i32, i32 }
%"class.blink::Member.573" = type { %"class.blink::MemberBase.922" }
%"class.blink::MemberBase.922" = type { %"class.blink::Keyframe"* }
%"class.blink::Keyframe" = type { i32 (...)**, %"class.absl::optional.553", %"class.absl::optional.925", %class.scoped_refptr.547 }
%"class.absl::optional.925" = type { %"class.absl::optional_internal::optional_data.926" }
%"class.absl::optional_internal::optional_data.926" = type { %"class.absl::optional_internal::optional_data_base.927" }
%"class.absl::optional_internal::optional_data_base.927" = type { %"class.absl::optional_internal::optional_data_dtor_base.928" }
%"class.absl::optional_internal::optional_data_dtor_base.928" = type { i8, %union.anon.929 }
%union.anon.929 = type { i32 }
%"class.blink::Member.575" = type { %"class.blink::MemberBase.576" }
%"class.blink::MemberBase.576" = type { %"class.blink::HeapHashMap.577"* }
%"class.blink::HeapHashMap.577" = type { %"class.WTF::HashMap.580" }
%"class.WTF::HashMap.580" = type { %"class.WTF::HashTable.581" }
%"class.WTF::HashTable.581" = type <{ %"struct.WTF::KeyValuePair.583"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.583" = type { %"class.blink::PropertyHandle", %"class.blink::Member.585" }
%"class.blink::PropertyHandle" = type { i32, %union.anon.584, %"class.WTF::AtomicString" }
%union.anon.584 = type { %"class.blink::CSSProperty"* }
%"class.blink::CSSProperty" = type <{ %"class.blink::CSSUnresolvedProperty", i32, i32, i8, [7 x i8] }>
%"class.blink::CSSUnresolvedProperty" = type { i32 (...)** }
%"class.blink::Member.585" = type { %"class.blink::MemberBase.586" }
%"class.blink::MemberBase.586" = type { %"class.blink::KeyframeEffectModelBase::PropertySpecificKeyframeGroup"* }
%"class.blink::KeyframeEffectModelBase::PropertySpecificKeyframeGroup" = type { %"class.blink::HeapVector.589" }
%"class.blink::HeapVector.589" = type { %"class.WTF::Vector.592" }
%"class.WTF::Vector.592" = type { %"class.WTF::VectorBuffer.593" }
%"class.WTF::VectorBuffer.593" = type { %"class.WTF::VectorBufferBase.594" }
%"class.WTF::VectorBufferBase.594" = type { %"class.blink::Member.595"*, i32, i32 }
%"class.blink::Member.595" = type { %"class.blink::MemberBase.596" }
%"class.blink::MemberBase.596" = type { %"class.blink::Keyframe::PropertySpecificKeyframe"* }
%"class.blink::Keyframe::PropertySpecificKeyframe" = type <{ i32 (...)**, double, %class.scoped_refptr.547, i32, [4 x i8] }>
%"class.blink::Member.600" = type { %"class.blink::MemberBase.601" }
%"class.blink::MemberBase.601" = type { %"class.blink::InterpolationEffect"* }
%"class.blink::InterpolationEffect" = type { i8, %"class.blink::HeapVector.604" }
%"class.blink::HeapVector.604" = type { %"class.WTF::Vector.607" }
%"class.WTF::Vector.607" = type { %"class.WTF::VectorBuffer.608" }
%"class.WTF::VectorBuffer.608" = type { %"class.WTF::VectorBufferBase.609" }
%"class.WTF::VectorBufferBase.609" = type { %"class.blink::Member.610"*, i32, i32 }
%"class.blink::Member.610" = type { %"class.blink::MemberBase.915" }
%"class.blink::MemberBase.915" = type { %"class.blink::InterpolationEffect::InterpolationRecord"* }
%"class.blink::InterpolationEffect::InterpolationRecord" = type { %"class.blink::Member.918", %class.scoped_refptr.547, double, double, double, double }
%"class.blink::Member.918" = type { %"class.blink::MemberBase.919" }
%"class.blink::MemberBase.919" = type { %"class.blink::Interpolation"* }
%"class.blink::Interpolation" = type { i32 (...)** }
%class.scoped_refptr.547 = type { %"class.blink::TimingFunction"* }
%"class.blink::TimingFunction" = type { i32 (...)**, %"class.WTF::ThreadSafeRefCounted", i32 }
%"class.WTF::ThreadSafeRefCounted" = type { %"class.base::RefCountedThreadSafe.548" }
%"class.base::RefCountedThreadSafe.548" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon }
%union.anon = type { %"class.blink::AnimationTimeDelta" }
%"class.absl::optional.612" = type { %"class.absl::optional_internal::optional_data.613" }
%"class.absl::optional_internal::optional_data.613" = type { %"class.absl::optional_internal::optional_data_base.614" }
%"class.absl::optional_internal::optional_data_base.614" = type { %"class.absl::optional_internal::optional_data_dtor_base.615" }
%"class.absl::optional_internal::optional_data_dtor_base.615" = type { i8, %union.anon.616 }
%union.anon.616 = type { i32 }
%"struct.blink::Timing" = type <{ %"class.blink::AnimationTimeDelta", %"class.blink::AnimationTimeDelta", i32, [4 x i8], double, double, %"class.absl::optional", i32, [4 x i8], %class.scoped_refptr.547, i16, [6 x i8] }>
%"class.blink::Member.617" = type { %"class.blink::MemberBase.618" }
%"class.blink::MemberBase.618" = type { %"class.blink::StyleRuleKeyframes"* }
%"class.blink::StyleRuleKeyframes" = type <{ %"class.blink::StyleRuleBase", [7 x i8], %"class.blink::HeapVector.621", %"class.WTF::AtomicString", i32, [4 x i8] }>
%"class.blink::StyleRuleBase" = type { i8 }
%"class.blink::HeapVector.621" = type { %"class.WTF::Vector.624" }
%"class.WTF::Vector.624" = type { %"class.WTF::VectorBuffer.625" }
%"class.WTF::VectorBuffer.625" = type { %"class.WTF::VectorBufferBase.626" }
%"class.WTF::VectorBufferBase.626" = type { %"class.blink::Member.627"*, i32, i32 }
%"class.blink::Member.627" = type opaque
%"class.blink::Member.629" = type { %"class.blink::MemberBase.630" }
%"class.blink::MemberBase.630" = type { %"class.blink::AnimationTimeline"* }
%"class.blink::AnimationTimeline" = type { %"class.blink::ScriptWrappable", %"class.blink::Member.35", i32, [4 x i8], %"class.blink::HeapHashSet.631", %"class.blink::HeapHashSet.639", %"class.std::__1::unique_ptr.646", %"class.absl::optional.679" }
%"class.blink::HeapHashSet.631" = type { %"class.WTF::HashSet.634" }
%"class.WTF::HashSet.634" = type { %"class.WTF::HashTable.635" }
%"class.WTF::HashTable.635" = type <{ %"class.blink::Member.637"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.637" = type { %"class.blink::MemberBase.638" }
%"class.blink::MemberBase.638" = type { %"class.blink::Animation"* }
%"class.blink::Animation" = type <{ %"class.blink::EventTargetWithInlineData", %"class.blink::ActiveScriptWrappable", %"class.blink::ExecutionContextLifecycleObserver.base", [4 x i8], %"class.blink::CompositorAnimationDelegate", %"class.blink::CompositorAnimationClient", %"class.blink::AnimationEffectOwner", %"class.blink::ThreadState::PrefinalizerRegistration", [7 x i8], %"class.WTF::String", i32, [4 x i8], double, %"class.absl::optional.553", %"class.absl::optional", %"class.absl::optional", %"class.absl::optional.612", %"class.absl::optional", i8, [3 x i8], i32, %"class.blink::Member.808", %"class.blink::Member.808", %"class.blink::Member.810", %"class.blink::Member.35", %"class.blink::Member.629", i32, i8, i8, i8, i8, i8, i8, i8, i8, i8, [3 x i8], %"class.blink::Member.812", %"class.blink::Member.812", %"class.blink::Member.812", %"class.std::__1::unique_ptr.814", i8, [3 x i8], i32, %"class.blink::Member.820", i8, [7 x i8], %"class.base::TimeTicks", i8, i8, i8, [5 x i8] }>
%"class.blink::EventTargetWithInlineData" = type { %"class.blink::EventTarget", %"class.blink::EventTargetData" }
%"class.blink::EventTargetData" = type { %"class.blink::EventListenerMap", %"class.std::__1::unique_ptr.791" }
%"class.blink::EventListenerMap" = type { %"class.blink::HeapVector.779" }
%"class.blink::HeapVector.779" = type { %"class.WTF::Vector.782" }
%"class.WTF::Vector.782" = type { %"class.WTF::VectorBuffer.783" }
%"class.WTF::VectorBuffer.783" = type { %"class.WTF::VectorBufferBase.784", [32 x i8] }
%"class.WTF::VectorBufferBase.784" = type { %"struct.std::__1::pair.785"*, i32, i32 }
%"struct.std::__1::pair.785" = type { %"class.WTF::AtomicString", %"class.blink::Member.786" }
%"class.blink::Member.786" = type { %"class.blink::MemberBase.787" }
%"class.blink::MemberBase.787" = type { %"class.blink::HeapVector.788"* }
%"class.blink::HeapVector.788" = type opaque
%"class.std::__1::unique_ptr.791" = type { %"class.std::__1::__compressed_pair.792" }
%"class.std::__1::__compressed_pair.792" = type { %"struct.std::__1::__compressed_pair_elem.793" }
%"struct.std::__1::__compressed_pair_elem.793" = type { %"class.WTF::Vector.794"* }
%"class.WTF::Vector.794" = type opaque
%"class.blink::ActiveScriptWrappable" = type { %"class.blink::ActiveScriptWrappableBase" }
%"class.blink::ActiveScriptWrappableBase" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::ExecutionContextLifecycleObserver.base" = type <{ %"class.blink::ContextLifecycleObserver", i32 }>
%"class.blink::ContextLifecycleObserver" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::WeakMember.798" }
%"class.blink::WeakMember.798" = type { %"class.blink::MemberBase.799" }
%"class.blink::MemberBase.799" = type { %"class.blink::ContextLifecycleNotifier"* }
%"class.blink::CompositorAnimationDelegate" = type { i32 (...)** }
%"class.blink::CompositorAnimationClient" = type { i32 (...)** }
%"class.blink::ThreadState::PrefinalizerRegistration" = type { i8 }
%"class.blink::Member.808" = type { %"class.blink::MemberBase.809" }
%"class.blink::MemberBase.809" = type { %"class.blink::ScriptPromiseProperty"* }
%"class.blink::ScriptPromiseProperty" = type opaque
%"class.blink::Member.810" = type { %"class.blink::MemberBase.811" }
%"class.blink::MemberBase.811" = type { %"class.blink::AnimationEffect"* }
%"class.blink::Member.812" = type { %"class.blink::MemberBase.813" }
%"class.blink::MemberBase.813" = type { %"class.blink::Event"* }
%"class.blink::Event" = type opaque
%"class.std::__1::unique_ptr.814" = type { %"class.std::__1::__compressed_pair.815" }
%"class.std::__1::__compressed_pair.815" = type { %"struct.std::__1::__compressed_pair_elem.816" }
%"struct.std::__1::__compressed_pair_elem.816" = type { %"class.blink::Animation::CompositorState"* }
%"class.blink::Animation::CompositorState" = type { %"class.absl::optional.553", %"class.absl::optional.553", double, i8, i32 }
%"class.blink::Member.820" = type { %"class.blink::MemberBase.821" }
%"class.blink::MemberBase.821" = type { %"class.blink::Animation::CompositorAnimationHolder"* }
%"class.blink::Animation::CompositorAnimationHolder" = type { %"class.blink::ThreadState::PrefinalizerRegistration.824", %"class.std::__1::unique_ptr.825", %"class.blink::Member.637" }
%"class.blink::ThreadState::PrefinalizerRegistration.824" = type { i8 }
%"class.std::__1::unique_ptr.825" = type { %"class.std::__1::__compressed_pair.826" }
%"class.std::__1::__compressed_pair.826" = type { %"struct.std::__1::__compressed_pair_elem.827" }
%"struct.std::__1::__compressed_pair_elem.827" = type { %"class.blink::CompositorAnimation"* }
%"class.blink::CompositorAnimation" = type opaque
%"class.blink::HeapHashSet.639" = type { %"class.WTF::HashSet.642" }
%"class.WTF::HashSet.642" = type { %"class.WTF::HashTable.643" }
%"class.WTF::HashTable.643" = type <{ %"class.blink::WeakMember.645"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.645" = type opaque
%"class.std::__1::unique_ptr.646" = type { %"class.std::__1::__compressed_pair.647" }
%"class.std::__1::__compressed_pair.647" = type { %"struct.std::__1::__compressed_pair_elem.648" }
%"struct.std::__1::__compressed_pair_elem.648" = type { %"class.blink::CompositorAnimationTimeline"* }
%"class.blink::CompositorAnimationTimeline" = type { %class.scoped_refptr.649 }
%class.scoped_refptr.649 = type { %"class.cc::AnimationTimeline"* }
%"class.cc::AnimationTimeline" = type <{ i32 (...)**, %"class.base::RefCounted.650", [4 x i8], %"class.std::__1::unordered_map", i32, [4 x i8], %"class.cc::AnimationHost"*, i8, i8, [6 x i8] }>
%"class.base::RefCounted.650" = type { %"class.base::subtle::RefCountedBase" }
%"class.std::__1::unordered_map" = type { %"class.std::__1::__hash_table.651" }
%"class.std::__1::__hash_table.651" = type <{ %"class.std::__1::unique_ptr.652", %"class.std::__1::__compressed_pair.662", %"class.std::__1::__compressed_pair.667", %"class.std::__1::__compressed_pair.671", [4 x i8] }>
%"class.std::__1::unique_ptr.652" = type { %"class.std::__1::__compressed_pair.653" }
%"class.std::__1::__compressed_pair.653" = type { %"struct.std::__1::__compressed_pair_elem.654", %"struct.std::__1::__compressed_pair_elem.656" }
%"struct.std::__1::__compressed_pair_elem.654" = type { %"struct.std::__1::__hash_node_base.655"** }
%"struct.std::__1::__hash_node_base.655" = type { %"struct.std::__1::__hash_node_base.655"* }
%"struct.std::__1::__compressed_pair_elem.656" = type { %"class.std::__1::__bucket_list_deallocator.657" }
%"class.std::__1::__bucket_list_deallocator.657" = type { %"class.std::__1::__compressed_pair.658" }
%"class.std::__1::__compressed_pair.658" = type { %"struct.std::__1::__compressed_pair_elem.240" }
%"class.std::__1::__compressed_pair.662" = type { %"struct.std::__1::__compressed_pair_elem.663" }
%"struct.std::__1::__compressed_pair_elem.663" = type { %"struct.std::__1::__hash_node_base.655" }
%"class.std::__1::__compressed_pair.667" = type { %"struct.std::__1::__compressed_pair_elem.240" }
%"class.std::__1::__compressed_pair.671" = type { %"struct.std::__1::__compressed_pair_elem.250" }
%"class.cc::AnimationHost" = type opaque
%"class.absl::optional.679" = type { %"class.absl::optional_internal::optional_data.680" }
%"class.absl::optional_internal::optional_data.680" = type { %"class.absl::optional_internal::optional_data_base.681" }
%"class.absl::optional_internal::optional_data_base.681" = type { %"class.absl::optional_internal::optional_data_dtor_base.682" }
%"class.absl::optional_internal::optional_data_dtor_base.682" = type { i8, %union.anon.683 }
%union.anon.683 = type { %"struct.blink::AnimationTimeline::PhaseAndTime" }
%"struct.blink::AnimationTimeline::PhaseAndTime" = type { i32, %"class.absl::optional.684" }
%"class.absl::optional.684" = type { %"class.absl::optional_internal::optional_data.685" }
%"class.absl::optional_internal::optional_data.685" = type { %"class.absl::optional_internal::optional_data_base.686" }
%"class.absl::optional_internal::optional_data_base.686" = type { %"class.absl::optional_internal::optional_data_dtor_base.687" }
%"class.absl::optional_internal::optional_data_dtor_base.687" = type { i8, %union.anon.688 }
%union.anon.688 = type { %"class.base::TimeDelta" }
%"class.WTF::Vector.689" = type { %"class.WTF::VectorBuffer.690" }
%"class.WTF::VectorBuffer.690" = type { %"class.WTF::VectorBufferBase.691" }
%"class.WTF::VectorBufferBase.691" = type { i32*, i32, i32 }
%"class.blink::HeapHashSet.700" = type { %"class.WTF::HashSet.703" }
%"class.WTF::HashSet.703" = type { %"class.WTF::HashTable.704" }
%"class.WTF::HashTable.704" = type <{ %"class.blink::Member.706"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.706" = type { %"class.blink::MemberBase.930" }
%"class.blink::MemberBase.930" = type { %"class.blink::Animation"* }
%"class.WTF::Vector.695" = type { %"class.WTF::VectorBuffer.696" }
%"class.WTF::VectorBuffer.696" = type { %"class.WTF::VectorBufferBase.697" }
%"class.WTF::VectorBufferBase.697" = type { i32*, i32, i32 }
%"class.blink::HeapVector.707" = type { %"class.WTF::Vector.710" }
%"class.WTF::Vector.710" = type { %"class.WTF::VectorBuffer.711" }
%"class.WTF::VectorBuffer.711" = type { %"class.WTF::VectorBufferBase.712" }
%"class.WTF::VectorBufferBase.712" = type { %"class.blink::UpdatedCSSAnimation"*, i32, i32 }
%"class.blink::UpdatedCSSAnimation" = type { i32, %"class.blink::Member.637", %"class.blink::Member.543", %"struct.blink::Timing", %"class.blink::Member.617", i32, %"class.blink::Member.629", %"class.WTF::Vector.689" }
%"class.blink::HeapVector.714" = type { %"class.WTF::Vector.717" }
%"class.WTF::Vector.717" = type { %"class.WTF::VectorBuffer.718" }
%"class.WTF::VectorBuffer.718" = type { %"class.WTF::VectorBufferBase.719" }
%"class.WTF::VectorBufferBase.719" = type { %"class.blink::Member.637"*, i32, i32 }
%"class.blink::HeapHashMap.721" = type { %"class.WTF::HashMap.724" }
%"class.WTF::HashMap.724" = type { %"class.WTF::HashTable.725" }
%"class.WTF::HashTable.725" = type <{ %"struct.WTF::KeyValuePair.727"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.727" = type { %"class.blink::PropertyHandle", %"class.blink::Member.941" }
%"class.blink::Member.941" = type { %"class.blink::MemberBase.942" }
%"class.blink::MemberBase.942" = type { %"struct.blink::CSSAnimationUpdate::NewTransition"* }
%"struct.blink::CSSAnimationUpdate::NewTransition" = type { i32 (...)**, %"class.blink::PropertyHandle", %class.scoped_refptr.32, %class.scoped_refptr.32, %class.scoped_refptr.32, double, %"class.blink::Member.543" }
%"class.WTF::HashSet.728" = type { %"class.WTF::HashTable.729" }
%"class.WTF::HashTable.729" = type <{ %"class.blink::PropertyHandle"*, i32, i32, i32, [4 x i8] }>
%"class.blink::HeapHashMap.732" = type { %"class.WTF::HashMap.735" }
%"class.WTF::HashMap.735" = type { %"class.WTF::HashTable.736" }
%"class.WTF::HashTable.736" = type <{ %"struct.WTF::KeyValuePair.738"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.738" = type { %"class.blink::PropertyHandle", %"class.blink::Member.931" }
%"class.blink::Member.931" = type { %"class.blink::MemberBase.932" }
%"class.blink::MemberBase.932" = type { %"class.blink::HeapVector.933"* }
%"class.blink::HeapVector.933" = type { %"class.WTF::Vector.936" }
%"class.WTF::Vector.936" = type { %"class.WTF::VectorBuffer.937" }
%"class.WTF::VectorBuffer.937" = type { %"class.WTF::VectorBufferBase.938", [8 x i8] }
%"class.WTF::VectorBufferBase.938" = type { %"class.blink::Member.918"*, i32, i32 }
%"class.blink::FontBuilder" = type <{ %"class.blink::Document"*, %"class.blink::TreeScope"*, %"class.blink::FontDescription", i32, [4 x i8] }>
%"class.blink::FontDescription" = type { %"class.blink::FontFamily", %class.scoped_refptr.740, %class.scoped_refptr.748, %class.scoped_refptr.758, float, float, float, float, float, float, %"struct.blink::FontSelectionRequest", %"class.blink::FontSelectionValue", %union.anon.770 }
%"class.blink::FontFamily" = type { %"class.WTF::AtomicString", %class.scoped_refptr.739 }
%class.scoped_refptr.739 = type { %"class.blink::SharedFontFamily"* }
%"class.blink::SharedFontFamily" = type <{ %"class.blink::FontFamily", %"class.WTF::RefCounted.775", [4 x i8] }>
%"class.WTF::RefCounted.775" = type { %"class.base::RefCounted.776" }
%"class.base::RefCounted.776" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.740 = type { %"class.blink::FontFeatureSettings"* }
%"class.blink::FontFeatureSettings" = type <{ %"class.blink::FontSettings", %"class.WTF::RefCounted.746", [4 x i8] }>
%"class.blink::FontSettings" = type { %"class.WTF::Vector.741" }
%"class.WTF::Vector.741" = type { %"class.WTF::VectorBuffer.742" }
%"class.WTF::VectorBuffer.742" = type { %"class.WTF::VectorBufferBase.743" }
%"class.WTF::VectorBufferBase.743" = type { %"class.blink::FontTagValuePair"*, i32, i32 }
%"class.blink::FontTagValuePair" = type { i32, i32 }
%"class.WTF::RefCounted.746" = type { %"class.base::RefCounted.747" }
%"class.base::RefCounted.747" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.748 = type { %"class.blink::FontVariationSettings"* }
%"class.blink::FontVariationSettings" = type <{ %"class.blink::FontSettings.749", %"class.WTF::RefCounted.756", [4 x i8] }>
%"class.blink::FontSettings.749" = type { %"class.WTF::Vector.750" }
%"class.WTF::Vector.750" = type { %"class.WTF::VectorBuffer.751" }
%"class.WTF::VectorBuffer.751" = type { %"class.WTF::VectorBufferBase.752" }
%"class.WTF::VectorBufferBase.752" = type { %"class.blink::FontTagValuePair.753"*, i32, i32 }
%"class.blink::FontTagValuePair.753" = type { i32, float }
%"class.WTF::RefCounted.756" = type { %"class.base::RefCounted.757" }
%"class.base::RefCounted.757" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.758 = type { %"class.blink::LayoutLocale"* }
%"class.blink::LayoutLocale" = type <{ %"class.WTF::RefCounted.759", [4 x i8], %"class.WTF::AtomicString", %"class.std::__1::basic_string", %"class.WTF::CaseMap::Locale", %class.scoped_refptr.767, %struct.hb_language_impl_t*, i32, i32, i8, [7 x i8] }>
%"class.WTF::RefCounted.759" = type { %"class.base::RefCounted.760" }
%"class.base::RefCounted.760" = type { %"class.base::subtle::RefCountedBase" }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.761" }
%"class.std::__1::__compressed_pair.761" = type { %"struct.std::__1::__compressed_pair_elem.762" }
%"struct.std::__1::__compressed_pair_elem.762" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon.763 }
%union.anon.763 = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.WTF::CaseMap::Locale" = type { i8* }
%class.scoped_refptr.767 = type { %"class.blink::Hyphenation"* }
%"class.blink::Hyphenation" = type <{ i32 (...)**, %"class.WTF::RefCounted.768", [4 x i8] }>
%"class.WTF::RefCounted.768" = type { %"class.base::RefCounted.769" }
%"class.base::RefCounted.769" = type { %"class.base::subtle::RefCountedBase" }
%struct.hb_language_impl_t = type opaque
%"struct.blink::FontSelectionRequest" = type { %"class.blink::FontSelectionValue", %"class.blink::FontSelectionValue", %"class.blink::FontSelectionValue" }
%"class.blink::FontSelectionValue" = type { i16 }
%union.anon.770 = type { %"struct.blink::FontDescription::BitFields" }
%"struct.blink::FontDescription::BitFields" = type { i56 }
%"class.blink::PseudoElement" = type opaque
%"class.blink::ElementStyleResources" = type { %"class.blink::Element"*, %"class.WTF::HashSet.771", %"class.WTF::HashSet.771", float, %"class.blink::PseudoElement"* }
%"class.WTF::HashSet.771" = type { %"class.WTF::HashTable.772" }
%"class.WTF::HashTable.772" = type <{ i32*, i32, i32, i32, [4 x i8] }>
%"class.logging::CheckOpResult" = type { i8* }
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.logging::LogMessage" = type { i32 (...)**, i32, %"class.std::__1::basic_ostringstream", i64, i8*, i32, %"class.base::ScopedClearLastErrorBase" }
%"class.std::__1::basic_ostringstream" = type { %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.base::ScopedClearLastErrorBase" = type { i32 }

$_ZN3WTF6VectorI13scoped_refptrIN5blink18TransformOperationEELj0ENS_18PartitionAllocatorEEaSERKS6_ = comdat any

$_ZN5blink25InterpolableTransformListD2Ev = comdat any

$_ZN5blink25InterpolableTransformListD0Ev = comdat any

$_ZNK5blink17InterpolableValue8IsNumberEv = comdat any

$_ZNK5blink17InterpolableValue6IsBoolEv = comdat any

$_ZNK5blink17InterpolableValue6IsListEv = comdat any

$_ZNK5blink17InterpolableValue8IsLengthEv = comdat any

$_ZNK5blink17InterpolableValue13IsAspectRatioEv = comdat any

$_ZNK5blink17InterpolableValue8IsShadowEv = comdat any

$_ZNK5blink17InterpolableValue8IsFilterEv = comdat any

$_ZNK5blink25InterpolableTransformList15IsTransformListEv = comdat any

$_ZNK5blink25InterpolableTransformList6EqualsERKNS_17InterpolableValueE = comdat any

$_ZN5blink25InterpolableTransformList5ScaleEd = comdat any

$_ZN5blink25InterpolableTransformList3AddERKNS_17InterpolableValueE = comdat any

$_ZN5blink17InterpolableValue11ScaleAndAddEdRKS0_ = comdat any

$_ZNK5blink25InterpolableTransformList8RawCloneEv = comdat any

$_ZNK5blink25InterpolableTransformList15RawCloneAndZeroEv = comdat any

$_ZN3WTF18PartitionAllocator13QuantizedSizeI13scoped_refptrIN5blink18TransformOperationEEEEmm = comdat any

$_ZN3WTF6VectorI13scoped_refptrIN5blink18TransformOperationEELj0ENS_18PartitionAllocatorEE6AppendIS4_EEvPKT_j = comdat any

@_ZTVN5blink25InterpolableTransformListE = hidden unnamed_addr constant { [20 x i8*] } { [20 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.blink::InterpolableTransformList"*)* @_ZN5blink25InterpolableTransformListD2Ev to i8*), i8* bitcast (void (%"class.blink::InterpolableTransformList"*)* @_ZN5blink25InterpolableTransformListD0Ev to i8*), i8* bitcast (void (%"class.blink::InterpolableTransformList"*, %"class.blink::InterpolableValue"*, double, %"class.blink::InterpolableValue"*)* @_ZNK5blink25InterpolableTransformList11InterpolateERKNS_17InterpolableValueEdRS1_ to i8*), i8* bitcast (i1 (%"class.blink::InterpolableValue"*)* @_ZNK5blink17InterpolableValue8IsNumberEv to i8*), i8* bitcast (i1 (%"class.blink::InterpolableValue"*)* @_ZNK5blink17InterpolableValue6IsBoolEv to i8*), i8* bitcast (i1 (%"class.blink::InterpolableValue"*)* @_ZNK5blink17InterpolableValue6IsListEv to i8*), i8* bitcast (i1 (%"class.blink::InterpolableValue"*)* @_ZNK5blink17InterpolableValue8IsLengthEv to i8*), i8* bitcast (i1 (%"class.blink::InterpolableValue"*)* @_ZNK5blink17InterpolableValue13IsAspectRatioEv to i8*), i8* bitcast (i1 (%"class.blink::InterpolableValue"*)* @_ZNK5blink17InterpolableValue8IsShadowEv to i8*), i8* bitcast (i1 (%"class.blink::InterpolableValue"*)* @_ZNK5blink17InterpolableValue8IsFilterEv to i8*), i8* bitcast (i1 (%"class.blink::InterpolableTransformList"*)* @_ZNK5blink25InterpolableTransformList15IsTransformListEv to i8*), i8* bitcast (i1 (%"class.blink::InterpolableTransformList"*, %"class.blink::InterpolableValue"*)* @_ZNK5blink25InterpolableTransformList6EqualsERKNS_17InterpolableValueE to i8*), i8* bitcast (void (%"class.blink::InterpolableTransformList"*, double)* @_ZN5blink25InterpolableTransformList5ScaleEd to i8*), i8* bitcast (void (%"class.blink::InterpolableTransformList"*, %"class.blink::InterpolableValue"*)* @_ZN5blink25InterpolableTransformList3AddERKNS_17InterpolableValueE to i8*), i8* bitcast (void (%"class.blink::InterpolableValue"*, double, %"class.blink::InterpolableValue"*)* @_ZN5blink17InterpolableValue11ScaleAndAddEdRKS0_ to i8*), i8* bitcast (void (%"class.blink::InterpolableTransformList"*, %"class.blink::InterpolableValue"*)* @_ZNK5blink25InterpolableTransformList24AssertCanInterpolateWithERKNS_17InterpolableValueE to i8*), i8* bitcast (%"class.blink::InterpolableTransformList"* (%"class.blink::InterpolableTransformList"*)* @_ZNK5blink25InterpolableTransformList8RawCloneEv to i8*), i8* bitcast (%"class.blink::InterpolableTransformList"* (%"class.blink::InterpolableTransformList"*)* @_ZNK5blink25InterpolableTransformList15RawCloneAndZeroEv to i8*)] }, align 8
@.str = private unnamed_addr constant [44 x i8] c"count <= MaxElementCountInBackingStore<T>()\00", align 1
@.str.1 = private unnamed_addr constant [78 x i8] c"../../third_party/blink/renderer/platform/wtf/allocator/partition_allocator.h\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameI13scoped_refptrIN5blink18TransformOperationEEEEPKcv = private unnamed_addr constant [88 x i8] c"const char *WTF::GetStringWithTypeName() [T = scoped_refptr<blink::TransformOperation>]\00", align 1
@.str.2 = private unnamed_addr constant [55 x i8] c"../../third_party/blink/renderer/platform/wtf/vector.h\00", align 1
@.str.4 = private unnamed_addr constant [18 x i8] c"new_size >= size_\00", align 1

; Function Attrs: nofree nounwind ssp uwtable
define hidden noalias %"class.blink::InterpolableTransformList"* @_ZN5blink25InterpolableTransformList6CreateEONS_19TransformOperationsE(%"class.blink::TransformOperations"* nocapture dereferenceable(16)) local_unnamed_addr #0 align 2 {
  %2 = tail call noalias i8* @malloc(i64 24) #8
  %3 = bitcast i8* %2 to %"class.blink::InterpolableTransformList"*
  %4 = bitcast i8* %2 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [20 x i8*] }, { [20 x i8*] }* @_ZTVN5blink25InterpolableTransformListE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %4, align 8
  %5 = getelementptr inbounds i8, i8* %2, i64 8
  %6 = getelementptr inbounds i8, i8* %2, i64 16
  %7 = bitcast i8* %6 to i32*
  %8 = getelementptr inbounds i8, i8* %2, i64 20
  %9 = bitcast i8* %8 to i32*
  %10 = bitcast %"class.blink::TransformOperations"* %0 to i64*
  %11 = bitcast i8* %5 to i64*
  store i64 0, i64* %11, align 8
  %12 = load i64, i64* %10, align 8
  store atomic i64 0, i64* %10 monotonic, align 8
  store atomic i64 %12, i64* %11 monotonic, align 8
  %13 = getelementptr inbounds %"class.blink::TransformOperations", %"class.blink::TransformOperations"* %0, i64 0, i32 0, i32 0, i32 0, i32 1
  %14 = load i32, i32* %13, align 4
  store i32 %14, i32* %7, align 4
  store i32 0, i32* %13, align 4
  %15 = getelementptr inbounds %"class.blink::TransformOperations", %"class.blink::TransformOperations"* %0, i64 0, i32 0, i32 0, i32 0, i32 2
  %16 = load i32, i32* %15, align 4
  store i32 %16, i32* %9, align 4
  store i32 0, i32* %15, align 4
  ret %"class.blink::InterpolableTransformList"* %3
}

; Function Attrs: nounwind ssp uwtable
define hidden noalias %"class.blink::InterpolableTransformList"* @_ZN5blink25InterpolableTransformList15ConvertCSSValueERKNS_8CSSValueEPKNS_18StyleResolverStateE(%"class.blink::CSSValue"* dereferenceable(3), %"class.blink::StyleResolverState"*) local_unnamed_addr #1 align 2 {
  %3 = alloca %"class.blink::TransformOperations", align 8
  %4 = bitcast %"class.blink::TransformOperations"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %4) #8
  %5 = getelementptr inbounds %"class.blink::TransformOperations", %"class.blink::TransformOperations"* %3, i64 0, i32 0, i32 0, i32 0, i32 1
  %6 = getelementptr inbounds %"class.blink::TransformOperations", %"class.blink::TransformOperations"* %3, i64 0, i32 0, i32 0, i32 0, i32 2
  %7 = getelementptr inbounds %"class.blink::StyleResolverState", %"class.blink::StyleResolverState"* %1, i64 0, i32 3
  %8 = bitcast %"class.blink::TransformOperations"* %3 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %8, i8 -86, i64 16, i1 false)
  call void @_ZN5blink16TransformBuilder25CreateTransformOperationsERKNS_8CSSValueERKNS_25CSSToLengthConversionDataE(%"class.blink::TransformOperations"* nonnull sret %3, %"class.blink::CSSValue"* dereferenceable(3) %0, %"class.blink::CSSToLengthConversionData"* dereferenceable(56) %7) #8
  %9 = call noalias i8* @malloc(i64 24) #8
  %10 = bitcast i8* %9 to %"class.blink::InterpolableTransformList"*
  %11 = bitcast i8* %9 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [20 x i8*] }, { [20 x i8*] }* @_ZTVN5blink25InterpolableTransformListE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %11, align 8
  %12 = getelementptr inbounds i8, i8* %9, i64 8
  %13 = getelementptr inbounds i8, i8* %9, i64 16
  %14 = bitcast i8* %13 to i32*
  %15 = getelementptr inbounds i8, i8* %9, i64 20
  %16 = bitcast i8* %15 to i32*
  %17 = bitcast %"class.blink::TransformOperations"* %3 to i64*
  %18 = bitcast i8* %12 to i64*
  store i64 0, i64* %18, align 8
  %19 = load i64, i64* %17, align 8
  store atomic i64 0, i64* %17 monotonic, align 8
  store atomic i64 %19, i64* %18 monotonic, align 8
  %20 = load i32, i32* %5, align 8
  store i32 %20, i32* %14, align 4
  store i32 0, i32* %5, align 8
  %21 = load i32, i32* %6, align 4
  store i32 %21, i32* %16, align 4
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %4) #8
  ret %"class.blink::InterpolableTransformList"* %10
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

declare void @_ZN5blink16TransformBuilder25CreateTransformOperationsERKNS_8CSSValueERKNS_25CSSToLengthConversionDataE(%"class.blink::TransformOperations"* sret, %"class.blink::CSSValue"* dereferenceable(3), %"class.blink::CSSToLengthConversionData"* dereferenceable(56)) local_unnamed_addr #3

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink25InterpolableTransformList9PreConcatERKS0_(%"class.blink::InterpolableTransformList"*, %"class.blink::InterpolableTransformList"* nocapture readonly dereferenceable(24)) local_unnamed_addr #1 align 2 {
  %3 = alloca %"class.WTF::Vector", align 8
  %4 = bitcast %"class.WTF::Vector"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %4) #8
  %5 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %3, i64 0, i32 0, i32 0, i32 0
  %6 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %3, i64 0, i32 0, i32 0, i32 2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %4, i8 0, i64 16, i1 false) #8
  %7 = getelementptr inbounds %"class.blink::InterpolableTransformList", %"class.blink::InterpolableTransformList"* %1, i64 0, i32 1, i32 0, i32 0, i32 0, i32 2
  %8 = load i32, i32* %7, align 4
  %9 = getelementptr inbounds %"class.blink::InterpolableTransformList", %"class.blink::InterpolableTransformList"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 2
  %10 = load i32, i32* %9, align 4
  %11 = add i32 %10, %8
  %12 = icmp eq i32 %11, 0
  br i1 %12, label %23, label %13, !prof !2

13:                                               ; preds = %2
  %14 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %3, i64 0, i32 0, i32 0, i32 1
  %15 = zext i32 %11 to i64
  %16 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeI13scoped_refptrIN5blink18TransformOperationEEEEmm(i64 %15) #8
  %17 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %16, i8* getelementptr inbounds ([88 x i8], [88 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameI13scoped_refptrIN5blink18TransformOperationEEEEPKcv, i64 0, i64 0)) #8
  %18 = ptrtoint i8* %17 to i64
  %19 = bitcast %"class.WTF::Vector"* %3 to i64*
  store atomic i64 %18, i64* %19 monotonic, align 8
  %20 = lshr i64 %16, 3
  %21 = trunc i64 %20 to i32
  store i32 %21, i32* %14, align 8
  %22 = load i32, i32* %7, align 4
  br label %23

23:                                               ; preds = %2, %13
  %24 = phi i32 [ %8, %2 ], [ %22, %13 ]
  %25 = getelementptr inbounds %"class.blink::InterpolableTransformList", %"class.blink::InterpolableTransformList"* %1, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %26 = load %class.scoped_refptr*, %class.scoped_refptr** %25, align 8
  call void @_ZN3WTF6VectorI13scoped_refptrIN5blink18TransformOperationEELj0ENS_18PartitionAllocatorEE6AppendIS4_EEvPKT_j(%"class.WTF::Vector"* nonnull %3, %class.scoped_refptr* %26, i32 %24) #8
  %27 = getelementptr inbounds %"class.blink::InterpolableTransformList", %"class.blink::InterpolableTransformList"* %0, i64 0, i32 1, i32 0
  %28 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %27, i64 0, i32 0, i32 0, i32 0
  %29 = load %class.scoped_refptr*, %class.scoped_refptr** %28, align 8
  %30 = load i32, i32* %9, align 4
  call void @_ZN3WTF6VectorI13scoped_refptrIN5blink18TransformOperationEELj0ENS_18PartitionAllocatorEE6AppendIS4_EEvPKT_j(%"class.WTF::Vector"* nonnull %3, %class.scoped_refptr* %29, i32 %30) #8
  %31 = call dereferenceable(16) %"class.WTF::Vector"* @_ZN3WTF6VectorI13scoped_refptrIN5blink18TransformOperationEELj0ENS_18PartitionAllocatorEEaSERKS6_(%"class.WTF::Vector"* %27, %"class.WTF::Vector"* nonnull dereferenceable(16) %3)
  %32 = load %class.scoped_refptr*, %class.scoped_refptr** %5, align 8
  %33 = icmp eq %class.scoped_refptr* %32, null
  br i1 %33, label %67, label %34, !prof !3

34:                                               ; preds = %23
  %35 = bitcast %class.scoped_refptr* %32 to i8*
  %36 = load i32, i32* %6, align 4
  %37 = icmp eq i32 %36, 0
  br i1 %37, label %65, label %38, !prof !2

38:                                               ; preds = %34
  %39 = zext i32 %36 to i64
  %40 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %32, i64 %39
  br label %41

41:                                               ; preds = %59, %38
  %42 = phi %class.scoped_refptr* [ %60, %59 ], [ %32, %38 ]
  %43 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %42, i64 0, i32 0
  %44 = load %"class.blink::TransformOperation"*, %"class.blink::TransformOperation"** %43, align 8
  %45 = icmp eq %"class.blink::TransformOperation"* %44, null
  br i1 %45, label %59, label %46

46:                                               ; preds = %41
  %47 = getelementptr inbounds %"class.blink::TransformOperation", %"class.blink::TransformOperation"* %44, i64 0, i32 1, i32 0
  %48 = getelementptr inbounds %"class.base::RefCounted", %"class.base::RefCounted"* %47, i64 0, i32 0
  call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %48) #8
  %49 = getelementptr inbounds %"class.base::RefCounted", %"class.base::RefCounted"* %47, i64 0, i32 0, i32 0
  %50 = load i32, i32* %49, align 4
  %51 = icmp eq i32 %50, 0
  br i1 %51, label %52, label %59

52:                                               ; preds = %46
  %53 = getelementptr inbounds %"class.base::RefCounted", %"class.base::RefCounted"* %47, i64 -2
  %54 = bitcast %"class.base::RefCounted"* %53 to %"class.blink::TransformOperation"*
  %55 = bitcast %"class.base::RefCounted"* %53 to void (%"class.blink::TransformOperation"*)***
  %56 = load void (%"class.blink::TransformOperation"*)**, void (%"class.blink::TransformOperation"*)*** %55, align 8
  %57 = getelementptr inbounds void (%"class.blink::TransformOperation"*)*, void (%"class.blink::TransformOperation"*)** %56, i64 1
  %58 = load void (%"class.blink::TransformOperation"*)*, void (%"class.blink::TransformOperation"*)** %57, align 8
  call void %58(%"class.blink::TransformOperation"* nonnull %54) #8
  br label %59

59:                                               ; preds = %52, %46, %41
  %60 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %42, i64 1
  %61 = icmp eq %class.scoped_refptr* %60, %40
  br i1 %61, label %62, label %41

62:                                               ; preds = %59
  store i32 0, i32* %6, align 4
  %63 = bitcast %"class.WTF::Vector"* %3 to i8**
  %64 = load i8*, i8** %63, align 8
  br label %65

65:                                               ; preds = %62, %34
  %66 = phi i8* [ %64, %62 ], [ %35, %34 ]
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %66) #8
  store %class.scoped_refptr* null, %class.scoped_refptr** %5, align 8
  br label %67

67:                                               ; preds = %23, %65
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %4) #8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(16) %"class.WTF::Vector"* @_ZN3WTF6VectorI13scoped_refptrIN5blink18TransformOperationEELj0ENS_18PartitionAllocatorEEaSERKS6_(%"class.WTF::Vector"*, %"class.WTF::Vector"* dereferenceable(16)) local_unnamed_addr #1 comdat align 2 {
  %3 = icmp eq %"class.WTF::Vector"* %1, %0
  br i1 %3, label %189, label %4, !prof !2

4:                                                ; preds = %2
  %5 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 2
  %6 = load i32, i32* %5, align 4
  %7 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %1, i64 0, i32 0, i32 0, i32 2
  %8 = load i32, i32* %7, align 4
  %9 = icmp ugt i32 %6, %8
  br i1 %9, label %10, label %39

10:                                               ; preds = %4
  %11 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 0
  %12 = load %class.scoped_refptr*, %class.scoped_refptr** %11, align 8
  %13 = zext i32 %6 to i64
  %14 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %12, i64 %13
  %15 = zext i32 %8 to i64
  %16 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %12, i64 %15
  br label %17

17:                                               ; preds = %35, %10
  %18 = phi %class.scoped_refptr* [ %36, %35 ], [ %16, %10 ]
  %19 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %18, i64 0, i32 0
  %20 = load %"class.blink::TransformOperation"*, %"class.blink::TransformOperation"** %19, align 8
  %21 = icmp eq %"class.blink::TransformOperation"* %20, null
  br i1 %21, label %35, label %22

22:                                               ; preds = %17
  %23 = getelementptr inbounds %"class.blink::TransformOperation", %"class.blink::TransformOperation"* %20, i64 0, i32 1, i32 0
  %24 = getelementptr inbounds %"class.base::RefCounted", %"class.base::RefCounted"* %23, i64 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %24) #8
  %25 = getelementptr inbounds %"class.base::RefCounted", %"class.base::RefCounted"* %23, i64 0, i32 0, i32 0
  %26 = load i32, i32* %25, align 4
  %27 = icmp eq i32 %26, 0
  br i1 %27, label %28, label %35

28:                                               ; preds = %22
  %29 = getelementptr inbounds %"class.base::RefCounted", %"class.base::RefCounted"* %23, i64 -2
  %30 = bitcast %"class.base::RefCounted"* %29 to %"class.blink::TransformOperation"*
  %31 = bitcast %"class.base::RefCounted"* %29 to void (%"class.blink::TransformOperation"*)***
  %32 = load void (%"class.blink::TransformOperation"*)**, void (%"class.blink::TransformOperation"*)*** %31, align 8
  %33 = getelementptr inbounds void (%"class.blink::TransformOperation"*)*, void (%"class.blink::TransformOperation"*)** %32, i64 1
  %34 = load void (%"class.blink::TransformOperation"*)*, void (%"class.blink::TransformOperation"*)** %33, align 8
  tail call void %34(%"class.blink::TransformOperation"* nonnull %30) #8
  br label %35

35:                                               ; preds = %28, %22, %17
  %36 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %18, i64 1
  %37 = icmp eq %class.scoped_refptr* %36, %14
  br i1 %37, label %38, label %17

38:                                               ; preds = %35
  store i32 %8, i32* %5, align 4
  br label %116

39:                                               ; preds = %4
  %40 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 1
  %41 = load i32, i32* %40, align 8
  %42 = icmp ugt i32 %8, %41
  br i1 %42, label %43, label %114

43:                                               ; preds = %39
  %44 = icmp eq i32 %41, 0
  br i1 %44, label %80, label %45

45:                                               ; preds = %43
  %46 = icmp eq i32 %6, 0
  br i1 %46, label %74, label %47

47:                                               ; preds = %45
  %48 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 0
  %49 = load %class.scoped_refptr*, %class.scoped_refptr** %48, align 8
  %50 = zext i32 %6 to i64
  %51 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %49, i64 %50
  br label %52

52:                                               ; preds = %70, %47
  %53 = phi %class.scoped_refptr* [ %71, %70 ], [ %49, %47 ]
  %54 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %53, i64 0, i32 0
  %55 = load %"class.blink::TransformOperation"*, %"class.blink::TransformOperation"** %54, align 8
  %56 = icmp eq %"class.blink::TransformOperation"* %55, null
  br i1 %56, label %70, label %57

57:                                               ; preds = %52
  %58 = getelementptr inbounds %"class.blink::TransformOperation", %"class.blink::TransformOperation"* %55, i64 0, i32 1, i32 0
  %59 = getelementptr inbounds %"class.base::RefCounted", %"class.base::RefCounted"* %58, i64 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %59) #8
  %60 = getelementptr inbounds %"class.base::RefCounted", %"class.base::RefCounted"* %58, i64 0, i32 0, i32 0
  %61 = load i32, i32* %60, align 4
  %62 = icmp eq i32 %61, 0
  br i1 %62, label %63, label %70

63:                                               ; preds = %57
  %64 = getelementptr inbounds %"class.base::RefCounted", %"class.base::RefCounted"* %58, i64 -2
  %65 = bitcast %"class.base::RefCounted"* %64 to %"class.blink::TransformOperation"*
  %66 = bitcast %"class.base::RefCounted"* %64 to void (%"class.blink::TransformOperation"*)***
  %67 = load void (%"class.blink::TransformOperation"*)**, void (%"class.blink::TransformOperation"*)*** %66, align 8
  %68 = getelementptr inbounds void (%"class.blink::TransformOperation"*)*, void (%"class.blink::TransformOperation"*)** %67, i64 1
  %69 = load void (%"class.blink::TransformOperation"*)*, void (%"class.blink::TransformOperation"*)** %68, align 8
  tail call void %69(%"class.blink::TransformOperation"* nonnull %65) #8
  br label %70

70:                                               ; preds = %63, %57, %52
  %71 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %53, i64 1
  %72 = icmp eq %class.scoped_refptr* %71, %51
  br i1 %72, label %73, label %52

73:                                               ; preds = %70
  store i32 0, i32* %5, align 4
  br label %74

74:                                               ; preds = %73, %45
  %75 = bitcast %"class.WTF::Vector"* %0 to i8**
  %76 = load i8*, i8** %75, align 8
  %77 = bitcast %"class.WTF::Vector"* %0 to i64*
  store atomic i64 0, i64* %77 monotonic, align 8
  store i32 0, i32* %40, align 8
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %76) #8
  %78 = load i32, i32* %7, align 4
  %79 = load i32, i32* %40, align 8
  br label %80

80:                                               ; preds = %43, %74
  %81 = phi i32 [ 0, %43 ], [ %79, %74 ]
  %82 = phi i32 [ %8, %43 ], [ %78, %74 ]
  %83 = icmp ult i32 %81, %82
  br i1 %83, label %84, label %114, !prof !3

84:                                               ; preds = %80
  %85 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 0
  %86 = load %class.scoped_refptr*, %class.scoped_refptr** %85, align 8
  %87 = icmp eq %class.scoped_refptr* %86, null
  %88 = zext i32 %82 to i64
  %89 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeI13scoped_refptrIN5blink18TransformOperationEEEEmm(i64 %88) #8
  %90 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %89, i8* getelementptr inbounds ([88 x i8], [88 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameI13scoped_refptrIN5blink18TransformOperationEEEEPKcv, i64 0, i64 0)) #8
  br i1 %87, label %91, label %96

91:                                               ; preds = %84
  %92 = ptrtoint i8* %90 to i64
  %93 = bitcast %"class.WTF::Vector"* %0 to i64*
  store atomic i64 %92, i64* %93 monotonic, align 8
  %94 = lshr i64 %89, 3
  %95 = trunc i64 %94 to i32
  store i32 %95, i32* %40, align 8
  br label %114

96:                                               ; preds = %84
  %97 = lshr i64 %89, 3
  %98 = ptrtoint i8* %90 to i64
  %99 = load %class.scoped_refptr*, %class.scoped_refptr** %85, align 8
  %100 = icmp ne i8* %90, null
  %101 = icmp ne %class.scoped_refptr* %99, null
  %102 = and i1 %100, %101
  %103 = bitcast %class.scoped_refptr* %99 to i8*
  br i1 %102, label %104, label %110, !prof !3

104:                                              ; preds = %96
  %105 = load i32, i32* %5, align 4
  %106 = zext i32 %105 to i64
  %107 = shl nuw nsw i64 %106, 3
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %90, i8* nonnull align 8 %103, i64 %107, i1 false) #8
  %108 = bitcast %"class.WTF::Vector"* %0 to i8**
  %109 = load i8*, i8** %108, align 8
  br label %110

110:                                              ; preds = %104, %96
  %111 = phi i8* [ %109, %104 ], [ %103, %96 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %111) #8
  %112 = bitcast %"class.WTF::Vector"* %0 to i64*
  store atomic i64 %98, i64* %112 monotonic, align 8
  %113 = trunc i64 %97 to i32
  store i32 %113, i32* %40, align 8
  br label %114

114:                                              ; preds = %39, %80, %91, %110
  %115 = load i32, i32* %5, align 4
  br label %116

116:                                              ; preds = %114, %38
  %117 = phi i32 [ %115, %114 ], [ %8, %38 ]
  %118 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %1, i64 0, i32 0, i32 0, i32 0
  %119 = load %class.scoped_refptr*, %class.scoped_refptr** %118, align 8
  %120 = zext i32 %117 to i64
  %121 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %119, i64 %120
  %122 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 0
  %123 = load %class.scoped_refptr*, %class.scoped_refptr** %122, align 8
  %124 = icmp eq i32 %117, 0
  br i1 %124, label %160, label %125

125:                                              ; preds = %116, %152
  %126 = phi %class.scoped_refptr* [ %154, %152 ], [ %123, %116 ]
  %127 = phi %class.scoped_refptr* [ %153, %152 ], [ %119, %116 ]
  %128 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %127, i64 0, i32 0
  %129 = load %"class.blink::TransformOperation"*, %"class.blink::TransformOperation"** %128, align 8
  %130 = icmp eq %"class.blink::TransformOperation"* %129, null
  br i1 %130, label %133, label %131

131:                                              ; preds = %125
  %132 = getelementptr inbounds %"class.blink::TransformOperation", %"class.blink::TransformOperation"* %129, i64 0, i32 1, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %132) #8
  br label %133

133:                                              ; preds = %131, %125
  %134 = ptrtoint %"class.blink::TransformOperation"* %129 to i64
  %135 = bitcast %class.scoped_refptr* %126 to i64*
  %136 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %126, i64 0, i32 0
  %137 = load %"class.blink::TransformOperation"*, %"class.blink::TransformOperation"** %136, align 8
  store i64 %134, i64* %135, align 8
  %138 = icmp eq %"class.blink::TransformOperation"* %137, null
  br i1 %138, label %152, label %139

139:                                              ; preds = %133
  %140 = getelementptr inbounds %"class.blink::TransformOperation", %"class.blink::TransformOperation"* %137, i64 0, i32 1, i32 0
  %141 = getelementptr inbounds %"class.base::RefCounted", %"class.base::RefCounted"* %140, i64 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %141) #8
  %142 = getelementptr inbounds %"class.base::RefCounted", %"class.base::RefCounted"* %140, i64 0, i32 0, i32 0
  %143 = load i32, i32* %142, align 4
  %144 = icmp eq i32 %143, 0
  br i1 %144, label %145, label %152

145:                                              ; preds = %139
  %146 = getelementptr inbounds %"class.base::RefCounted", %"class.base::RefCounted"* %140, i64 -2
  %147 = bitcast %"class.base::RefCounted"* %146 to %"class.blink::TransformOperation"*
  %148 = bitcast %"class.base::RefCounted"* %146 to void (%"class.blink::TransformOperation"*)***
  %149 = load void (%"class.blink::TransformOperation"*)**, void (%"class.blink::TransformOperation"*)*** %148, align 8
  %150 = getelementptr inbounds void (%"class.blink::TransformOperation"*)*, void (%"class.blink::TransformOperation"*)** %149, i64 1
  %151 = load void (%"class.blink::TransformOperation"*)*, void (%"class.blink::TransformOperation"*)** %150, align 8
  tail call void %151(%"class.blink::TransformOperation"* nonnull %147) #8
  br label %152

152:                                              ; preds = %145, %139, %133
  %153 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %127, i64 1
  %154 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %126, i64 1
  %155 = icmp eq %class.scoped_refptr* %153, %121
  br i1 %155, label %156, label %125

156:                                              ; preds = %152
  %157 = load %class.scoped_refptr*, %class.scoped_refptr** %118, align 8
  %158 = load i32, i32* %5, align 4
  %159 = load %class.scoped_refptr*, %class.scoped_refptr** %122, align 8
  br label %160

160:                                              ; preds = %156, %116
  %161 = phi %class.scoped_refptr* [ %159, %156 ], [ %123, %116 ]
  %162 = phi i32 [ %158, %156 ], [ 0, %116 ]
  %163 = phi %class.scoped_refptr* [ %157, %156 ], [ %119, %116 ]
  %164 = zext i32 %162 to i64
  %165 = load i32, i32* %7, align 4
  %166 = zext i32 %165 to i64
  %167 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %163, i64 %166
  %168 = icmp eq i32 %162, %165
  br i1 %168, label %187, label %169

169:                                              ; preds = %160
  %170 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %161, i64 %164
  %171 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %163, i64 %164
  br label %172

172:                                              ; preds = %169, %181
  %173 = phi %class.scoped_refptr* [ %182, %181 ], [ %170, %169 ]
  %174 = phi %class.scoped_refptr* [ %183, %181 ], [ %171, %169 ]
  %175 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %174, i64 0, i32 0
  %176 = load %"class.blink::TransformOperation"*, %"class.blink::TransformOperation"** %175, align 8
  %177 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %173, i64 0, i32 0
  store %"class.blink::TransformOperation"* %176, %"class.blink::TransformOperation"** %177, align 8
  %178 = icmp eq %"class.blink::TransformOperation"* %176, null
  br i1 %178, label %181, label %179

179:                                              ; preds = %172
  %180 = getelementptr inbounds %"class.blink::TransformOperation", %"class.blink::TransformOperation"* %176, i64 0, i32 1, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %180) #8
  br label %181

181:                                              ; preds = %179, %172
  %182 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %173, i64 1
  %183 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %174, i64 1
  %184 = icmp eq %class.scoped_refptr* %183, %167
  br i1 %184, label %185, label %172

185:                                              ; preds = %181
  %186 = load i32, i32* %7, align 4
  br label %187

187:                                              ; preds = %185, %160
  %188 = phi i32 [ %186, %185 ], [ %162, %160 ]
  store i32 %188, i32* %5, align 4
  br label %189

189:                                              ; preds = %2, %187
  ret %"class.WTF::Vector"* %0
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink25InterpolableTransformList14AccumulateOntoERKS0_(%"class.blink::InterpolableTransformList"*, %"class.blink::InterpolableTransformList"* dereferenceable(24)) local_unnamed_addr #1 align 2 {
  %3 = alloca %"class.blink::TransformOperations", align 8
  %4 = bitcast %"class.blink::TransformOperations"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %4) #8
  %5 = getelementptr inbounds %"class.blink::InterpolableTransformList", %"class.blink::InterpolableTransformList"* %1, i64 0, i32 1
  %6 = getelementptr inbounds %"class.blink::InterpolableTransformList", %"class.blink::InterpolableTransformList"* %0, i64 0, i32 1
  call void @_ZNK5blink19TransformOperations10AccumulateERKS0_(%"class.blink::TransformOperations"* nonnull sret %3, %"class.blink::TransformOperations"* %5, %"class.blink::TransformOperations"* dereferenceable(16) %6) #8
  %7 = bitcast %"class.blink::TransformOperations"* %3 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = bitcast %"class.blink::TransformOperations"* %6 to i64*
  %10 = load i64, i64* %9, align 8
  store atomic i64 %10, i64* %7 monotonic, align 8
  store atomic i64 %8, i64* %9 monotonic, align 8
  %11 = getelementptr inbounds %"class.blink::InterpolableTransformList", %"class.blink::InterpolableTransformList"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1
  %12 = getelementptr inbounds %"class.blink::TransformOperations", %"class.blink::TransformOperations"* %3, i64 0, i32 0, i32 0, i32 0, i32 1
  %13 = load i32, i32* %11, align 4
  %14 = load i32, i32* %12, align 8
  store i32 %14, i32* %11, align 4
  store i32 %13, i32* %12, align 8
  %15 = getelementptr inbounds %"class.blink::InterpolableTransformList", %"class.blink::InterpolableTransformList"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 2
  %16 = getelementptr inbounds %"class.blink::TransformOperations", %"class.blink::TransformOperations"* %3, i64 0, i32 0, i32 0, i32 0, i32 2
  %17 = load i32, i32* %15, align 4
  %18 = load i32, i32* %16, align 4
  store i32 %18, i32* %15, align 4
  store i32 %17, i32* %16, align 4
  %19 = getelementptr inbounds %"class.blink::TransformOperations", %"class.blink::TransformOperations"* %3, i64 0, i32 0, i32 0, i32 0, i32 0
  %20 = inttoptr i64 %10 to %class.scoped_refptr*
  %21 = icmp eq i64 %10, 0
  br i1 %21, label %54, label %22, !prof !3

22:                                               ; preds = %2
  %23 = inttoptr i64 %10 to i8*
  %24 = icmp eq i32 %17, 0
  br i1 %24, label %52, label %25, !prof !2

25:                                               ; preds = %22
  %26 = zext i32 %17 to i64
  %27 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %20, i64 %26
  br label %28

28:                                               ; preds = %46, %25
  %29 = phi %class.scoped_refptr* [ %47, %46 ], [ %20, %25 ]
  %30 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %29, i64 0, i32 0
  %31 = load %"class.blink::TransformOperation"*, %"class.blink::TransformOperation"** %30, align 8
  %32 = icmp eq %"class.blink::TransformOperation"* %31, null
  br i1 %32, label %46, label %33

33:                                               ; preds = %28
  %34 = getelementptr inbounds %"class.blink::TransformOperation", %"class.blink::TransformOperation"* %31, i64 0, i32 1, i32 0
  %35 = getelementptr inbounds %"class.base::RefCounted", %"class.base::RefCounted"* %34, i64 0, i32 0
  call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %35) #8
  %36 = getelementptr inbounds %"class.base::RefCounted", %"class.base::RefCounted"* %34, i64 0, i32 0, i32 0
  %37 = load i32, i32* %36, align 4
  %38 = icmp eq i32 %37, 0
  br i1 %38, label %39, label %46

39:                                               ; preds = %33
  %40 = getelementptr inbounds %"class.base::RefCounted", %"class.base::RefCounted"* %34, i64 -2
  %41 = bitcast %"class.base::RefCounted"* %40 to %"class.blink::TransformOperation"*
  %42 = bitcast %"class.base::RefCounted"* %40 to void (%"class.blink::TransformOperation"*)***
  %43 = load void (%"class.blink::TransformOperation"*)**, void (%"class.blink::TransformOperation"*)*** %42, align 8
  %44 = getelementptr inbounds void (%"class.blink::TransformOperation"*)*, void (%"class.blink::TransformOperation"*)** %43, i64 1
  %45 = load void (%"class.blink::TransformOperation"*)*, void (%"class.blink::TransformOperation"*)** %44, align 8
  call void %45(%"class.blink::TransformOperation"* nonnull %41) #8
  br label %46

46:                                               ; preds = %39, %33, %28
  %47 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %29, i64 1
  %48 = icmp eq %class.scoped_refptr* %47, %27
  br i1 %48, label %49, label %28

49:                                               ; preds = %46
  store i32 0, i32* %16, align 4
  %50 = bitcast %"class.blink::TransformOperations"* %3 to i8**
  %51 = load i8*, i8** %50, align 8
  br label %52

52:                                               ; preds = %49, %22
  %53 = phi i8* [ %51, %49 ], [ %23, %22 ]
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %53) #8
  store %class.scoped_refptr* null, %class.scoped_refptr** %19, align 8
  br label %54

54:                                               ; preds = %2, %52
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %4) #8
  ret void
}

declare void @_ZNK5blink19TransformOperations10AccumulateERKS0_(%"class.blink::TransformOperations"* sret, %"class.blink::TransformOperations"*, %"class.blink::TransformOperations"* dereferenceable(16)) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK5blink25InterpolableTransformList11InterpolateERKNS_17InterpolableValueEdRS1_(%"class.blink::InterpolableTransformList"*, %"class.blink::InterpolableValue"* dereferenceable(8), double, %"class.blink::InterpolableValue"* nocapture dereferenceable(8)) unnamed_addr #1 align 2 {
  %5 = alloca %"class.blink::TransformOperations", align 8
  %6 = bitcast %"class.blink::TransformOperations"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %6) #8
  %7 = getelementptr inbounds %"class.blink::InterpolableValue", %"class.blink::InterpolableValue"* %1, i64 1
  %8 = bitcast %"class.blink::InterpolableValue"* %7 to %"class.blink::TransformOperations"*
  %9 = getelementptr inbounds %"class.blink::InterpolableTransformList", %"class.blink::InterpolableTransformList"* %0, i64 0, i32 1
  call void @_ZNK5blink19TransformOperations5BlendERKS0_d(%"class.blink::TransformOperations"* nonnull sret %5, %"class.blink::TransformOperations"* %8, %"class.blink::TransformOperations"* dereferenceable(16) %9, double %2) #8
  %10 = getelementptr inbounds %"class.blink::InterpolableValue", %"class.blink::InterpolableValue"* %3, i64 1
  %11 = bitcast %"class.blink::InterpolableValue"* %10 to %"class.blink::TransformOperations"*
  %12 = bitcast %"class.blink::TransformOperations"* %5 to i64*
  %13 = load i64, i64* %12, align 8
  %14 = bitcast %"class.blink::InterpolableValue"* %10 to i64*
  %15 = load i64, i64* %14, align 8
  store atomic i64 %15, i64* %12 monotonic, align 8
  store atomic i64 %13, i64* %14 monotonic, align 8
  %16 = getelementptr inbounds %"class.blink::InterpolableValue", %"class.blink::InterpolableValue"* %3, i64 2
  %17 = bitcast %"class.blink::InterpolableValue"* %16 to i32*
  %18 = getelementptr inbounds %"class.blink::TransformOperations", %"class.blink::TransformOperations"* %5, i64 0, i32 0, i32 0, i32 0, i32 1
  %19 = load i32, i32* %17, align 4
  %20 = load i32, i32* %18, align 8
  store i32 %20, i32* %17, align 4
  store i32 %19, i32* %18, align 8
  %21 = getelementptr inbounds %"class.blink::TransformOperations", %"class.blink::TransformOperations"* %11, i64 0, i32 0, i32 0, i32 0, i32 2
  %22 = getelementptr inbounds %"class.blink::TransformOperations", %"class.blink::TransformOperations"* %5, i64 0, i32 0, i32 0, i32 0, i32 2
  %23 = load i32, i32* %21, align 4
  %24 = load i32, i32* %22, align 4
  store i32 %24, i32* %21, align 4
  store i32 %23, i32* %22, align 4
  %25 = getelementptr inbounds %"class.blink::TransformOperations", %"class.blink::TransformOperations"* %5, i64 0, i32 0, i32 0, i32 0, i32 0
  %26 = inttoptr i64 %15 to %class.scoped_refptr*
  %27 = icmp eq i64 %15, 0
  br i1 %27, label %60, label %28, !prof !3

28:                                               ; preds = %4
  %29 = inttoptr i64 %15 to i8*
  %30 = icmp eq i32 %23, 0
  br i1 %30, label %58, label %31, !prof !2

31:                                               ; preds = %28
  %32 = zext i32 %23 to i64
  %33 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %26, i64 %32
  br label %34

34:                                               ; preds = %52, %31
  %35 = phi %class.scoped_refptr* [ %53, %52 ], [ %26, %31 ]
  %36 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %35, i64 0, i32 0
  %37 = load %"class.blink::TransformOperation"*, %"class.blink::TransformOperation"** %36, align 8
  %38 = icmp eq %"class.blink::TransformOperation"* %37, null
  br i1 %38, label %52, label %39

39:                                               ; preds = %34
  %40 = getelementptr inbounds %"class.blink::TransformOperation", %"class.blink::TransformOperation"* %37, i64 0, i32 1, i32 0
  %41 = getelementptr inbounds %"class.base::RefCounted", %"class.base::RefCounted"* %40, i64 0, i32 0
  call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %41) #8
  %42 = getelementptr inbounds %"class.base::RefCounted", %"class.base::RefCounted"* %40, i64 0, i32 0, i32 0
  %43 = load i32, i32* %42, align 4
  %44 = icmp eq i32 %43, 0
  br i1 %44, label %45, label %52

45:                                               ; preds = %39
  %46 = getelementptr inbounds %"class.base::RefCounted", %"class.base::RefCounted"* %40, i64 -2
  %47 = bitcast %"class.base::RefCounted"* %46 to %"class.blink::TransformOperation"*
  %48 = bitcast %"class.base::RefCounted"* %46 to void (%"class.blink::TransformOperation"*)***
  %49 = load void (%"class.blink::TransformOperation"*)**, void (%"class.blink::TransformOperation"*)*** %48, align 8
  %50 = getelementptr inbounds void (%"class.blink::TransformOperation"*)*, void (%"class.blink::TransformOperation"*)** %49, i64 1
  %51 = load void (%"class.blink::TransformOperation"*)*, void (%"class.blink::TransformOperation"*)** %50, align 8
  call void %51(%"class.blink::TransformOperation"* nonnull %47) #8
  br label %52

52:                                               ; preds = %45, %39, %34
  %53 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %35, i64 1
  %54 = icmp eq %class.scoped_refptr* %53, %33
  br i1 %54, label %55, label %34

55:                                               ; preds = %52
  store i32 0, i32* %22, align 4
  %56 = bitcast %"class.blink::TransformOperations"* %5 to i8**
  %57 = load i8*, i8** %56, align 8
  br label %58

58:                                               ; preds = %55, %28
  %59 = phi i8* [ %57, %55 ], [ %29, %28 ]
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %59) #8
  store %class.scoped_refptr* null, %class.scoped_refptr** %25, align 8
  br label %60

60:                                               ; preds = %4, %58
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %6) #8
  ret void
}

declare void @_ZNK5blink19TransformOperations5BlendERKS0_d(%"class.blink::TransformOperations"* sret, %"class.blink::TransformOperations"*, %"class.blink::TransformOperations"* dereferenceable(16), double) local_unnamed_addr #3

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @_ZNK5blink25InterpolableTransformList24AssertCanInterpolateWithERKNS_17InterpolableValueE(%"class.blink::InterpolableTransformList"* nocapture, %"class.blink::InterpolableValue"* nocapture dereferenceable(8)) unnamed_addr #4 align 2 {
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink25InterpolableTransformListD2Ev(%"class.blink::InterpolableTransformList"*) unnamed_addr #5 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::InterpolableTransformList", %"class.blink::InterpolableTransformList"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [20 x i8*] }, { [20 x i8*] }* @_ZTVN5blink25InterpolableTransformListE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.blink::InterpolableTransformList", %"class.blink::InterpolableTransformList"* %0, i64 0, i32 1
  %4 = getelementptr inbounds %"class.blink::TransformOperations", %"class.blink::TransformOperations"* %3, i64 0, i32 0, i32 0, i32 0, i32 0
  %5 = load %class.scoped_refptr*, %class.scoped_refptr** %4, align 8
  %6 = icmp eq %class.scoped_refptr* %5, null
  br i1 %6, label %41, label %7, !prof !3

7:                                                ; preds = %1
  %8 = bitcast %class.scoped_refptr* %5 to i8*
  %9 = getelementptr inbounds %"class.blink::InterpolableTransformList", %"class.blink::InterpolableTransformList"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 2
  %10 = load i32, i32* %9, align 4
  %11 = icmp eq i32 %10, 0
  br i1 %11, label %39, label %12, !prof !2

12:                                               ; preds = %7
  %13 = zext i32 %10 to i64
  %14 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %5, i64 %13
  br label %15

15:                                               ; preds = %33, %12
  %16 = phi %class.scoped_refptr* [ %34, %33 ], [ %5, %12 ]
  %17 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %16, i64 0, i32 0
  %18 = load %"class.blink::TransformOperation"*, %"class.blink::TransformOperation"** %17, align 8
  %19 = icmp eq %"class.blink::TransformOperation"* %18, null
  br i1 %19, label %33, label %20

20:                                               ; preds = %15
  %21 = getelementptr inbounds %"class.blink::TransformOperation", %"class.blink::TransformOperation"* %18, i64 0, i32 1, i32 0
  %22 = getelementptr inbounds %"class.base::RefCounted", %"class.base::RefCounted"* %21, i64 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %22) #8
  %23 = getelementptr inbounds %"class.base::RefCounted", %"class.base::RefCounted"* %21, i64 0, i32 0, i32 0
  %24 = load i32, i32* %23, align 4
  %25 = icmp eq i32 %24, 0
  br i1 %25, label %26, label %33

26:                                               ; preds = %20
  %27 = getelementptr inbounds %"class.base::RefCounted", %"class.base::RefCounted"* %21, i64 -2
  %28 = bitcast %"class.base::RefCounted"* %27 to %"class.blink::TransformOperation"*
  %29 = bitcast %"class.base::RefCounted"* %27 to void (%"class.blink::TransformOperation"*)***
  %30 = load void (%"class.blink::TransformOperation"*)**, void (%"class.blink::TransformOperation"*)*** %29, align 8
  %31 = getelementptr inbounds void (%"class.blink::TransformOperation"*)*, void (%"class.blink::TransformOperation"*)** %30, i64 1
  %32 = load void (%"class.blink::TransformOperation"*)*, void (%"class.blink::TransformOperation"*)** %31, align 8
  tail call void %32(%"class.blink::TransformOperation"* nonnull %28) #8
  br label %33

33:                                               ; preds = %26, %20, %15
  %34 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %16, i64 1
  %35 = icmp eq %class.scoped_refptr* %34, %14
  br i1 %35, label %36, label %15

36:                                               ; preds = %33
  store i32 0, i32* %9, align 4
  %37 = bitcast %"class.blink::TransformOperations"* %3 to i8**
  %38 = load i8*, i8** %37, align 8
  br label %39

39:                                               ; preds = %36, %7
  %40 = phi i8* [ %38, %36 ], [ %8, %7 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %40) #8
  store %class.scoped_refptr* null, %class.scoped_refptr** %4, align 8
  br label %41

41:                                               ; preds = %1, %39
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink25InterpolableTransformListD0Ev(%"class.blink::InterpolableTransformList"*) unnamed_addr #5 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::InterpolableTransformList", %"class.blink::InterpolableTransformList"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [20 x i8*] }, { [20 x i8*] }* @_ZTVN5blink25InterpolableTransformListE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.blink::InterpolableTransformList", %"class.blink::InterpolableTransformList"* %0, i64 0, i32 1
  %4 = getelementptr inbounds %"class.blink::TransformOperations", %"class.blink::TransformOperations"* %3, i64 0, i32 0, i32 0, i32 0, i32 0
  %5 = load %class.scoped_refptr*, %class.scoped_refptr** %4, align 8
  %6 = icmp eq %class.scoped_refptr* %5, null
  br i1 %6, label %41, label %7, !prof !3

7:                                                ; preds = %1
  %8 = bitcast %class.scoped_refptr* %5 to i8*
  %9 = getelementptr inbounds %"class.blink::InterpolableTransformList", %"class.blink::InterpolableTransformList"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 2
  %10 = load i32, i32* %9, align 4
  %11 = icmp eq i32 %10, 0
  br i1 %11, label %39, label %12, !prof !2

12:                                               ; preds = %7
  %13 = zext i32 %10 to i64
  %14 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %5, i64 %13
  br label %15

15:                                               ; preds = %33, %12
  %16 = phi %class.scoped_refptr* [ %34, %33 ], [ %5, %12 ]
  %17 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %16, i64 0, i32 0
  %18 = load %"class.blink::TransformOperation"*, %"class.blink::TransformOperation"** %17, align 8
  %19 = icmp eq %"class.blink::TransformOperation"* %18, null
  br i1 %19, label %33, label %20

20:                                               ; preds = %15
  %21 = getelementptr inbounds %"class.blink::TransformOperation", %"class.blink::TransformOperation"* %18, i64 0, i32 1, i32 0
  %22 = getelementptr inbounds %"class.base::RefCounted", %"class.base::RefCounted"* %21, i64 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %22) #8
  %23 = getelementptr inbounds %"class.base::RefCounted", %"class.base::RefCounted"* %21, i64 0, i32 0, i32 0
  %24 = load i32, i32* %23, align 4
  %25 = icmp eq i32 %24, 0
  br i1 %25, label %26, label %33

26:                                               ; preds = %20
  %27 = getelementptr inbounds %"class.base::RefCounted", %"class.base::RefCounted"* %21, i64 -2
  %28 = bitcast %"class.base::RefCounted"* %27 to %"class.blink::TransformOperation"*
  %29 = bitcast %"class.base::RefCounted"* %27 to void (%"class.blink::TransformOperation"*)***
  %30 = load void (%"class.blink::TransformOperation"*)**, void (%"class.blink::TransformOperation"*)*** %29, align 8
  %31 = getelementptr inbounds void (%"class.blink::TransformOperation"*)*, void (%"class.blink::TransformOperation"*)** %30, i64 1
  %32 = load void (%"class.blink::TransformOperation"*)*, void (%"class.blink::TransformOperation"*)** %31, align 8
  tail call void %32(%"class.blink::TransformOperation"* nonnull %28) #8
  br label %33

33:                                               ; preds = %26, %20, %15
  %34 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %16, i64 1
  %35 = icmp eq %class.scoped_refptr* %34, %14
  br i1 %35, label %36, label %15

36:                                               ; preds = %33
  store i32 0, i32* %9, align 4
  %37 = bitcast %"class.blink::TransformOperations"* %3 to i8**
  %38 = load i8*, i8** %37, align 8
  br label %39

39:                                               ; preds = %36, %7
  %40 = phi i8* [ %38, %36 ], [ %8, %7 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %40) #8
  br label %41

41:                                               ; preds = %1, %39
  %42 = bitcast %"class.blink::InterpolableTransformList"* %0 to i8*
  tail call void @free(i8* %42) #8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink17InterpolableValue8IsNumberEv(%"class.blink::InterpolableValue"*) unnamed_addr #1 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink17InterpolableValue6IsBoolEv(%"class.blink::InterpolableValue"*) unnamed_addr #1 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink17InterpolableValue6IsListEv(%"class.blink::InterpolableValue"*) unnamed_addr #1 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink17InterpolableValue8IsLengthEv(%"class.blink::InterpolableValue"*) unnamed_addr #1 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink17InterpolableValue13IsAspectRatioEv(%"class.blink::InterpolableValue"*) unnamed_addr #1 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink17InterpolableValue8IsShadowEv(%"class.blink::InterpolableValue"*) unnamed_addr #1 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink17InterpolableValue8IsFilterEv(%"class.blink::InterpolableValue"*) unnamed_addr #1 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink25InterpolableTransformList15IsTransformListEv(%"class.blink::InterpolableTransformList"*) unnamed_addr #1 comdat align 2 {
  ret i1 true
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink25InterpolableTransformList6EqualsERKNS_17InterpolableValueE(%"class.blink::InterpolableTransformList"*, %"class.blink::InterpolableValue"* dereferenceable(8)) unnamed_addr #1 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink25InterpolableTransformList5ScaleEd(%"class.blink::InterpolableTransformList"*, double) unnamed_addr #1 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink25InterpolableTransformList3AddERKNS_17InterpolableValueE(%"class.blink::InterpolableTransformList"*, %"class.blink::InterpolableValue"* dereferenceable(8)) unnamed_addr #1 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink17InterpolableValue11ScaleAndAddEdRKS0_(%"class.blink::InterpolableValue"*, double, %"class.blink::InterpolableValue"* dereferenceable(8)) unnamed_addr #1 comdat align 2 {
  %4 = bitcast %"class.blink::InterpolableValue"* %0 to void (%"class.blink::InterpolableValue"*, double)***
  %5 = load void (%"class.blink::InterpolableValue"*, double)**, void (%"class.blink::InterpolableValue"*, double)*** %4, align 8
  %6 = getelementptr inbounds void (%"class.blink::InterpolableValue"*, double)*, void (%"class.blink::InterpolableValue"*, double)** %5, i64 12
  %7 = load void (%"class.blink::InterpolableValue"*, double)*, void (%"class.blink::InterpolableValue"*, double)** %6, align 8
  tail call void %7(%"class.blink::InterpolableValue"* %0, double %1) #8
  %8 = bitcast %"class.blink::InterpolableValue"* %0 to void (%"class.blink::InterpolableValue"*, %"class.blink::InterpolableValue"*)***
  %9 = load void (%"class.blink::InterpolableValue"*, %"class.blink::InterpolableValue"*)**, void (%"class.blink::InterpolableValue"*, %"class.blink::InterpolableValue"*)*** %8, align 8
  %10 = getelementptr inbounds void (%"class.blink::InterpolableValue"*, %"class.blink::InterpolableValue"*)*, void (%"class.blink::InterpolableValue"*, %"class.blink::InterpolableValue"*)** %9, i64 13
  %11 = load void (%"class.blink::InterpolableValue"*, %"class.blink::InterpolableValue"*)*, void (%"class.blink::InterpolableValue"*, %"class.blink::InterpolableValue"*)** %10, align 8
  tail call void %11(%"class.blink::InterpolableValue"* %0, %"class.blink::InterpolableValue"* dereferenceable(8) %2) #8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::InterpolableTransformList"* @_ZNK5blink25InterpolableTransformList8RawCloneEv(%"class.blink::InterpolableTransformList"*) unnamed_addr #1 comdat align 2 {
  %2 = tail call noalias i8* @malloc(i64 24) #8
  %3 = bitcast i8* %2 to %"class.blink::InterpolableTransformList"*
  %4 = getelementptr inbounds %"class.blink::InterpolableTransformList", %"class.blink::InterpolableTransformList"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1
  %5 = load i32, i32* %4, align 8
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %15, label %7

7:                                                ; preds = %1
  %8 = zext i32 %5 to i64
  %9 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeI13scoped_refptrIN5blink18TransformOperationEEEEmm(i64 %8) #8
  %10 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %9, i8* getelementptr inbounds ([88 x i8], [88 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameI13scoped_refptrIN5blink18TransformOperationEEEEPKcv, i64 0, i64 0)) #8
  %11 = ptrtoint i8* %10 to i64
  %12 = lshr i64 %9, 3
  %13 = trunc i64 %12 to i32
  %14 = bitcast i8* %10 to %class.scoped_refptr*
  br label %15

15:                                               ; preds = %7, %1
  %16 = phi i32 [ 0, %1 ], [ %13, %7 ]
  %17 = phi i64 [ 0, %1 ], [ %11, %7 ]
  %18 = phi %class.scoped_refptr* [ null, %1 ], [ %14, %7 ]
  %19 = getelementptr inbounds %"class.blink::InterpolableTransformList", %"class.blink::InterpolableTransformList"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 2
  %20 = load i32, i32* %19, align 4
  %21 = getelementptr inbounds %"class.blink::InterpolableTransformList", %"class.blink::InterpolableTransformList"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %22 = load %class.scoped_refptr*, %class.scoped_refptr** %21, align 8
  %23 = zext i32 %20 to i64
  %24 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %22, i64 %23
  %25 = icmp eq i32 %20, 0
  br i1 %25, label %39, label %26

26:                                               ; preds = %15, %35
  %27 = phi %class.scoped_refptr* [ %36, %35 ], [ %18, %15 ]
  %28 = phi %class.scoped_refptr* [ %37, %35 ], [ %22, %15 ]
  %29 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %28, i64 0, i32 0
  %30 = load %"class.blink::TransformOperation"*, %"class.blink::TransformOperation"** %29, align 8
  %31 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %27, i64 0, i32 0
  store %"class.blink::TransformOperation"* %30, %"class.blink::TransformOperation"** %31, align 8
  %32 = icmp eq %"class.blink::TransformOperation"* %30, null
  br i1 %32, label %35, label %33

33:                                               ; preds = %26
  %34 = getelementptr inbounds %"class.blink::TransformOperation", %"class.blink::TransformOperation"* %30, i64 0, i32 1, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %34) #8
  br label %35

35:                                               ; preds = %33, %26
  %36 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %27, i64 1
  %37 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %28, i64 1
  %38 = icmp eq %class.scoped_refptr* %37, %24
  br i1 %38, label %39, label %26

39:                                               ; preds = %35, %15
  %40 = bitcast i8* %2 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [20 x i8*] }, { [20 x i8*] }* @_ZTVN5blink25InterpolableTransformListE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %40, align 8
  %41 = getelementptr inbounds i8, i8* %2, i64 8
  %42 = getelementptr inbounds i8, i8* %2, i64 16
  %43 = bitcast i8* %42 to i32*
  %44 = getelementptr inbounds i8, i8* %2, i64 20
  %45 = bitcast i8* %44 to i32*
  %46 = bitcast i8* %41 to i64*
  store atomic i64 %17, i64* %46 monotonic, align 8
  store i32 %16, i32* %43, align 4
  store i32 %20, i32* %45, align 4
  ret %"class.blink::InterpolableTransformList"* %3
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::InterpolableTransformList"* @_ZNK5blink25InterpolableTransformList15RawCloneAndZeroEv(%"class.blink::InterpolableTransformList"*) unnamed_addr #1 comdat align 2 {
  ret %"class.blink::InterpolableTransformList"* null
}

declare void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"*) local_unnamed_addr #3

declare void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8*) local_unnamed_addr #3

; Function Attrs: nounwind
declare void @free(i8* nocapture) local_unnamed_addr #6

; Function Attrs: nofree nounwind
declare noalias i8* @malloc(i64) local_unnamed_addr #7

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeI13scoped_refptrIN5blink18TransformOperationEEEEmm(i64) local_unnamed_addr #1 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #8
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp ugt i64 %0, 268173312
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #8
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 268173312) #8
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str, i64 0, i64 0), i8* %11, i8* %12) #8
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #8
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([78 x i8], [78 x i8]* @.str.1, i64 0, i64 0), i32 31, %"class.logging::CheckOpResult"* nonnull %3) #8
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #8
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #8
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #8
  %20 = shl i64 %0, 3
  %21 = call i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64 %20) #8
  ret i64 %21
}

declare void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* sret, i8*, i32, %"class.logging::CheckOpResult"*) local_unnamed_addr #3

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #6

declare i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64) local_unnamed_addr #3

declare i8* @_ZN7logging15CheckOpValueStrEm(i64) local_unnamed_addr #3

declare void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"*, i8*, i8*, i8*) unnamed_addr #3

declare i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64, i8*) local_unnamed_addr #3

declare void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"*) local_unnamed_addr #3

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorI13scoped_refptrIN5blink18TransformOperationEELj0ENS_18PartitionAllocatorEE6AppendIS4_EEvPKT_j(%"class.WTF::Vector"*, %class.scoped_refptr*, i32) local_unnamed_addr #1 comdat align 2 {
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckOpResult", align 8
  %6 = alloca %"class.logging::CheckError", align 8
  %7 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 2
  %8 = load i32, i32* %7, align 4
  %9 = add i32 %8, %2
  %10 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 1
  %11 = load i32, i32* %10, align 8
  %12 = icmp ugt i32 %9, %11
  br i1 %12, label %13, label %101

13:                                               ; preds = %3
  %14 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 0
  %15 = load %class.scoped_refptr*, %class.scoped_refptr** %14, align 8
  %16 = icmp ugt %class.scoped_refptr* %15, %1
  br i1 %16, label %21, label %17

17:                                               ; preds = %13
  %18 = zext i32 %8 to i64
  %19 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %15, i64 %18
  %20 = icmp ugt %class.scoped_refptr* %19, %1
  br i1 %20, label %58, label %21

21:                                               ; preds = %17, %13
  %22 = lshr i32 %11, 2
  %23 = add nuw i32 %11, 1
  %24 = add i32 %23, %22
  %25 = icmp ugt i32 %24, 4
  %26 = select i1 %25, i32 %24, i32 4
  %27 = icmp ugt i32 %26, %9
  %28 = select i1 %27, i32 %26, i32 %9
  %29 = icmp ult i32 %11, %28
  br i1 %29, label %30, label %101, !prof !3

30:                                               ; preds = %21
  %31 = icmp eq %class.scoped_refptr* %15, null
  %32 = zext i32 %28 to i64
  %33 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeI13scoped_refptrIN5blink18TransformOperationEEEEmm(i64 %32) #8
  %34 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %33, i8* getelementptr inbounds ([88 x i8], [88 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameI13scoped_refptrIN5blink18TransformOperationEEEEPKcv, i64 0, i64 0)) #8
  br i1 %31, label %35, label %40

35:                                               ; preds = %30
  %36 = ptrtoint i8* %34 to i64
  %37 = bitcast %"class.WTF::Vector"* %0 to i64*
  store atomic i64 %36, i64* %37 monotonic, align 8
  %38 = lshr i64 %33, 3
  %39 = trunc i64 %38 to i32
  store i32 %39, i32* %10, align 8
  br label %101

40:                                               ; preds = %30
  %41 = lshr i64 %33, 3
  %42 = ptrtoint i8* %34 to i64
  %43 = load %class.scoped_refptr*, %class.scoped_refptr** %14, align 8
  %44 = icmp ne i8* %34, null
  %45 = icmp ne %class.scoped_refptr* %43, null
  %46 = and i1 %44, %45
  %47 = bitcast %class.scoped_refptr* %43 to i8*
  br i1 %46, label %48, label %54, !prof !3

48:                                               ; preds = %40
  %49 = load i32, i32* %7, align 4
  %50 = zext i32 %49 to i64
  %51 = shl nuw nsw i64 %50, 3
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %34, i8* nonnull align 8 %47, i64 %51, i1 false) #8
  %52 = bitcast %"class.WTF::Vector"* %0 to i8**
  %53 = load i8*, i8** %52, align 8
  br label %54

54:                                               ; preds = %48, %40
  %55 = phi i8* [ %53, %48 ], [ %47, %40 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %55) #8
  %56 = bitcast %"class.WTF::Vector"* %0 to i64*
  store atomic i64 %42, i64* %56 monotonic, align 8
  %57 = trunc i64 %41 to i32
  store i32 %57, i32* %10, align 8
  br label %101

58:                                               ; preds = %17
  %59 = ptrtoint %class.scoped_refptr* %1 to i64
  %60 = ptrtoint %class.scoped_refptr* %15 to i64
  %61 = sub i64 %59, %60
  %62 = ashr exact i64 %61, 3
  %63 = lshr i32 %11, 2
  %64 = add nuw i32 %11, 1
  %65 = add i32 %64, %63
  %66 = icmp ugt i32 %65, 4
  %67 = select i1 %66, i32 %65, i32 4
  %68 = icmp ugt i32 %67, %9
  %69 = select i1 %68, i32 %67, i32 %9
  %70 = icmp ult i32 %11, %69
  br i1 %70, label %71, label %98, !prof !3

71:                                               ; preds = %58
  %72 = icmp eq %class.scoped_refptr* %15, null
  %73 = zext i32 %69 to i64
  %74 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeI13scoped_refptrIN5blink18TransformOperationEEEEmm(i64 %73) #8
  %75 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %74, i8* getelementptr inbounds ([88 x i8], [88 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameI13scoped_refptrIN5blink18TransformOperationEEEEPKcv, i64 0, i64 0)) #8
  %76 = ptrtoint i8* %75 to i64
  br i1 %72, label %77, label %79

77:                                               ; preds = %71
  %78 = bitcast %"class.WTF::Vector"* %0 to i64*
  store atomic i64 %76, i64* %78 monotonic, align 8
  br label %94

79:                                               ; preds = %71
  %80 = load %class.scoped_refptr*, %class.scoped_refptr** %14, align 8
  %81 = icmp ne i8* %75, null
  %82 = icmp ne %class.scoped_refptr* %80, null
  %83 = and i1 %81, %82
  %84 = bitcast %class.scoped_refptr* %80 to i8*
  br i1 %83, label %85, label %91, !prof !3

85:                                               ; preds = %79
  %86 = load i32, i32* %7, align 4
  %87 = zext i32 %86 to i64
  %88 = shl nuw nsw i64 %87, 3
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %75, i8* nonnull align 8 %84, i64 %88, i1 false) #8
  %89 = bitcast %"class.WTF::Vector"* %0 to i8**
  %90 = load i8*, i8** %89, align 8
  br label %91

91:                                               ; preds = %85, %79
  %92 = phi i8* [ %90, %85 ], [ %84, %79 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %92) #8
  %93 = bitcast %"class.WTF::Vector"* %0 to i64*
  store atomic i64 %76, i64* %93 monotonic, align 8
  br label %94

94:                                               ; preds = %91, %77
  %95 = lshr i64 %74, 3
  %96 = trunc i64 %95 to i32
  store i32 %96, i32* %10, align 8
  %97 = bitcast i8* %75 to %class.scoped_refptr*
  br label %98

98:                                               ; preds = %94, %58
  %99 = phi %class.scoped_refptr* [ %15, %58 ], [ %97, %94 ]
  %100 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %99, i64 %62
  br label %101

101:                                              ; preds = %98, %21, %35, %54, %3
  %102 = phi %class.scoped_refptr* [ %1, %3 ], [ %100, %98 ], [ %1, %21 ], [ %1, %35 ], [ %1, %54 ]
  %103 = bitcast %"class.logging::CheckOpResult"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %103) #8
  %104 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %5, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %104, align 8
  %105 = load i32, i32* %7, align 4
  %106 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %106)
  %107 = icmp ult i32 %9, %105
  br i1 %107, label %109, label %108

108:                                              ; preds = %101
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %106)
  store i8* null, i8** %104, align 8
  br label %118

109:                                              ; preds = %101
  %110 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %9) #8
  %111 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %105) #8
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %4, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.4, i64 0, i64 0), i8* %110, i8* %111) #8
  %112 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  %113 = load i8*, i8** %112, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %106)
  store i8* %113, i8** %104, align 8
  %114 = icmp eq i8* %113, null
  br i1 %114, label %118, label %115

115:                                              ; preds = %109
  %116 = bitcast %"class.logging::CheckError"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %116) #8
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %6, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.2, i64 0, i64 0), i32 1907, %"class.logging::CheckOpResult"* nonnull %5) #8
  %117 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %6) #8
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %6) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %116) #8
  br label %118

118:                                              ; preds = %108, %109, %115
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %103) #8
  %119 = zext i32 %2 to i64
  %120 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %102, i64 %119
  %121 = icmp eq i32 %2, 0
  br i1 %121, label %141, label %122

122:                                              ; preds = %118
  %123 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 0
  %124 = load %class.scoped_refptr*, %class.scoped_refptr** %123, align 8
  %125 = load i32, i32* %7, align 4
  %126 = zext i32 %125 to i64
  %127 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %124, i64 %126
  br label %128

128:                                              ; preds = %122, %137
  %129 = phi %class.scoped_refptr* [ %138, %137 ], [ %127, %122 ]
  %130 = phi %class.scoped_refptr* [ %139, %137 ], [ %102, %122 ]
  %131 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %130, i64 0, i32 0
  %132 = load %"class.blink::TransformOperation"*, %"class.blink::TransformOperation"** %131, align 8
  %133 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %129, i64 0, i32 0
  store %"class.blink::TransformOperation"* %132, %"class.blink::TransformOperation"** %133, align 8
  %134 = icmp eq %"class.blink::TransformOperation"* %132, null
  br i1 %134, label %137, label %135

135:                                              ; preds = %128
  %136 = getelementptr inbounds %"class.blink::TransformOperation", %"class.blink::TransformOperation"* %132, i64 0, i32 1, i32 0, i32 0
  call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %136) #8
  br label %137

137:                                              ; preds = %135, %128
  %138 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %129, i64 1
  %139 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %130, i64 1
  %140 = icmp eq %class.scoped_refptr* %139, %120
  br i1 %140, label %141, label %128

141:                                              ; preds = %137, %118
  store i32 %9, i32* %7, align 4
  ret void
}

declare i8* @_ZN7logging15CheckOpValueStrEj(i32) local_unnamed_addr #3

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #2

attributes #0 = { nofree nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind }
attributes #3 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!"branch_weights", i32 1, i32 2000}
!3 = !{!"branch_weights", i32 2000, i32 1}
