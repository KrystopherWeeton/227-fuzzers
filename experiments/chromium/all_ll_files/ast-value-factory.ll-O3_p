; ModuleID = '../../v8/src/ast/ast-value-factory.cc'
source_filename = "../../v8/src/ast/ast-value-factory.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.v8::internal::AstStringConstants" = type { %"class.v8::internal::Zone", %"class.v8::base::TemplateHashMapImpl", i64, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"* }
%"class.v8::internal::Zone" = type <{ i64, i64, i64, i64, %"class.v8::internal::AccountingAllocator"*, %"class.v8::internal::Segment"*, i8*, i8, i8, [6 x i8] }>
%"class.v8::internal::AccountingAllocator" = type { i32 (...)**, %"struct.std::__1::atomic.20", %"struct.std::__1::atomic.20", %"class.std::__1::unique_ptr.740", %"class.std::__1::unique_ptr.482" }
%"struct.std::__1::atomic.20" = type { %"struct.std::__1::__atomic_base.21" }
%"struct.std::__1::__atomic_base.21" = type { %"struct.std::__1::__atomic_base.22" }
%"struct.std::__1::__atomic_base.22" = type { %"struct.std::__1::__cxx_atomic_impl.23" }
%"struct.std::__1::__cxx_atomic_impl.23" = type { %"struct.std::__1::__cxx_atomic_base_impl.24" }
%"struct.std::__1::__cxx_atomic_base_impl.24" = type { i64 }
%"class.std::__1::unique_ptr.740" = type { %"class.std::__1::__compressed_pair.741" }
%"class.std::__1::__compressed_pair.741" = type { %"struct.std::__1::__compressed_pair_elem.742" }
%"struct.std::__1::__compressed_pair_elem.742" = type { %"class.v8::internal::VirtualMemory"* }
%"class.v8::internal::VirtualMemory" = type { %"class.v8::PageAllocator"*, %"class.v8::base::AddressRegion" }
%"class.v8::PageAllocator" = type { i32 (...)** }
%"class.v8::base::AddressRegion" = type { i64, i64 }
%"class.std::__1::unique_ptr.482" = type { %"class.std::__1::__compressed_pair.483" }
%"class.std::__1::__compressed_pair.483" = type { %"struct.std::__1::__compressed_pair_elem.484" }
%"struct.std::__1::__compressed_pair_elem.484" = type { %"class.v8::base::BoundedPageAllocator"* }
%"class.v8::base::BoundedPageAllocator" = type { %"class.v8::PageAllocator", %"class.v8::base::Mutex", i64, i64, %"class.v8::PageAllocator"*, %"class.v8::base::RegionAllocator" }
%"class.v8::base::Mutex" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"class.v8::base::RegionAllocator" = type { %"class.v8::base::RegionAllocator::Region", i64, i64, i64, i64, %"class.std::__1::set.485", %"class.std::__1::set.493" }
%"class.v8::base::RegionAllocator::Region" = type <{ %"class.v8::base::AddressRegion", i32, [4 x i8] }>
%"class.std::__1::set.485" = type { %"class.std::__1::__tree.486" }
%"class.std::__1::__tree.486" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.487", %"class.std::__1::__compressed_pair.491" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8, [7 x i8] }>
%"class.std::__1::__compressed_pair.487" = type { %"struct.std::__1::__compressed_pair_elem.81" }
%"struct.std::__1::__compressed_pair_elem.81" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.491" = type { %"struct.std::__1::__compressed_pair_elem.8" }
%"struct.std::__1::__compressed_pair_elem.8" = type { i64 }
%"class.std::__1::set.493" = type { %"class.std::__1::__tree.494" }
%"class.std::__1::__tree.494" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.487", %"class.std::__1::__compressed_pair.495" }
%"class.std::__1::__compressed_pair.495" = type { %"struct.std::__1::__compressed_pair_elem.8" }
%"class.v8::internal::Segment" = type { %"class.v8::internal::Zone"*, %"class.v8::internal::Segment"*, i64 }
%"class.v8::base::TemplateHashMapImpl" = type { %"struct.v8::base::TemplateHashMapImpl<const v8::internal::AstRawString *, v8::base::NoHashMapValue, v8::internal::AstRawStringMapMatcher, v8::base::DefaultAllocationPolicy>::Impl" }
%"struct.v8::base::TemplateHashMapImpl<const v8::internal::AstRawString *, v8::base::NoHashMapValue, v8::internal::AstRawStringMapMatcher, v8::base::DefaultAllocationPolicy>::Impl" = type { %"struct.v8::base::TemplateHashMapEntry"*, i32, i32 }
%"struct.v8::base::TemplateHashMapEntry" = type <{ %union.anon.1149, i32, [4 x i8] }>
%union.anon.1149 = type { %"class.v8::internal::AstRawString"* }
%"class.v8::internal::AstRawString" = type <{ %union.anon, %"class.v8::internal::Vector", i32, i8, [3 x i8] }>
%union.anon = type { %"class.v8::internal::AstRawString"* }
%"class.v8::internal::Vector" = type { i8*, i64 }
%"class.v8::internal::Isolate" = type { %"class.v8::internal::IsolateData", %"class.std::__1::unique_ptr", %"class.v8::internal::Heap", %"class.v8::internal::ReadOnlyHeap"*, %"class.std::__1::shared_ptr.646", %"class.std::__1::unique_ptr.667", i32, %"class.v8::internal::Isolate::EntryStackItem"*, i32, %"class.v8::internal::StringStream"*, [13 x i64], %"class.v8::internal::Bootstrapper"*, %"class.v8::internal::RuntimeProfiler"*, %"class.v8::internal::CompilationCache"*, %"class.std::__1::shared_ptr.677", %"class.v8::base::RecursiveMutex", %"class.v8::base::SharedMutex", %"class.v8::base::SharedMutex", %"class.v8::base::SharedMutex", %"class.v8::base::SharedMutex", %"class.v8::base::SharedMutex", %"class.v8::internal::Logger"*, %"class.v8::internal::StubCache"*, %"class.v8::internal::StubCache"*, %"class.v8::internal::Deoptimizer"*, i8, %"class.v8::internal::MaterializedObjectStore"*, i8, i32, i32, %"class.v8::internal::DescriptorLookupCache"*, %"struct.v8::internal::HandleScopeData", %"class.v8::internal::HandleScopeImplementer"*, %"class.v8::internal::UnicodeCache"*, %"class.v8::internal::AccountingAllocator"*, %"class.v8::internal::InnerPointerToCodeCache"*, %"class.v8::internal::GlobalHandles"*, %"class.v8::internal::EternalHandles"*, %"class.v8::internal::ThreadManager"*, %"class.v8::bigint::Processor"*, %"class.v8::internal::RuntimeState", %"class.v8::internal::Builtins", %"class.v8::internal::SetupIsolateDelegate"*, %"class.v8::internal::RegExpStack"*, %"class.std::__1::vector.817", %"class.v8::internal::DateCache"*, %"class.v8::base::RandomNumberGenerator"*, %"class.v8::base::RandomNumberGenerator"*, %"struct.std::__1::atomic.830", {}*, i8*, void (i32, %"class.v8::Promise"*, %"class.v8::Value"*)*, {}*, {}*, %"struct.std::__1::atomic.840", {}*, %"class.v8::base::Mutex", double, %"class.std::__1::basic_string", %"class.std::__1::unordered_map.851", %"struct.std::__1::atomic.153", i8, i8, i8, i8, i8, i8, double, %"class.v8::internal::Debug"*, %"class.v8::internal::HeapProfiler"*, %"class.std::__1::unique_ptr.926", %"class.v8::internal::AstStringConstants"*, %"class.v8::internal::interpreter::Interpreter"*, %"class.v8::internal::compiler::PerIsolateCompilerCache"*, %"class.v8::internal::Zone"*, %"class.v8::internal::CompilerDispatcher"*, %"class.std::__1::queue", void (i8*, i8*)*, void (i8*, i1)*, void (i8*, i32)*, i1 (%"class.v8::Context"*, %"class.v8::String"*)*, { i8, %"class.v8::String"* } (%"class.v8::Context"*, %"class.v8::Value"*)*, { i8, %"class.v8::String"* } (%"class.v8::Context"*, %"class.v8::Value"*, i1)*, i1 (%"class.v8::Context"*, %"class.v8::String"*)*, i1 (%"class.v8::FunctionCallbackInfo"*)*, i1 (%"class.v8::FunctionCallbackInfo"*)*, i1 (%"class.v8::Context"*)*, void (%"class.v8::FunctionCallbackInfo"*)*, %"class.v8::String"* (%"class.v8::Isolate"*, i8*)*, i1 (%"class.v8::Context"*)*, i1 (%"class.v8::Context"*)*, %"class.v8::internal::Relocatable"*, %"class.std::__1::vector.969"*, %"class.v8::internal::Object", i64*, %"class.v8::internal::AddressToIndexHashMap"*, %"class.v8::internal::HeapObjectToIndexHashMap"*, %"class.v8::internal::MicrotaskQueue"*, %"class.v8::internal::CompilationStatistics"*, %"class.v8::internal::CodeTracer"*, i32, void (%"class.v8::PromiseRejectMessage"*)*, %"class.v8::StartupData"*, i32, i32, i32, i64, i8, i8, i32, i8, i32, %"class.v8_inspector::V8Inspector"*, i8, i8, i8, i32, i32, %"class.v8::internal::compiler::NodeObserver"*, i8, [128 x i32], [256 x i32], [251 x i32], [251 x i32], %"class.v8::internal::OptimizingCompileDispatcher"*, %"class.std::__1::unique_ptr.978", i32, i8, i8, i32, i32, %"class.std::__1::vector.984", %"class.std::__1::vector.984", void (%"class.v8::Isolate"*, i32)*, %"class.std::__1::shared_ptr.991", i64, %"class.std::__1::unordered_map.992", i64, %"struct.v8::metrics::LongTaskStats", %"class.std::__1::vector.542", %"class.v8::internal::BuiltinsConstantsTableBuilder"*, i8*, i32, i8*, i32, %"class.v8::ArrayBuffer::Allocator"*, %"class.std::__1::shared_ptr.161", %"class.v8::internal::FutexWaitListNode", %"class.v8::internal::CancelableTaskManager"*, %"class.v8::debug::ConsoleDelegate"*, %"class.v8::debug::AsyncEventDelegate"*, i32, i32, %"class.std::__1::unique_ptr.1048", i1 (%"class.v8::Isolate"*)*, i8, %"class.v8::base::Mutex", %"struct.v8::internal::ManagedPtrDestructor"*, i64, i64, %"class.v8::internal::wasm::WasmEngine"*, %"class.std::__1::unique_ptr.1086", %"class.v8::internal::EmbeddedFileWriterInterface"*, %"class.v8::Context::BackupIncumbentScope"*, {}*, %"class.v8::base::Mutex", %"class.v8::internal::Isolate::ThreadDataTable", i8, %"class.v8::internal::Isolate"*, %"class.v8::base::Mutex", %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"*, %"struct.std::__1::atomic.1120", %"class.std::__1::vector.1124", %"class.std::__1::vector.1124", void (i32, %"class.std::__1::basic_string"*)* }
%"class.v8::internal::IsolateData" = type { [4 x i8*], i64, i64, i64, i64, i64, %"class.v8::internal::StackGuard", %"class.v8::internal::RootsTable", %"class.v8::internal::ExternalReferenceTable", %"class.v8::internal::ThreadLocalTop", [1711 x i64], [1711 x i64], i8, [15 x i8] }
%"class.v8::internal::StackGuard" = type { %"class.v8::internal::Isolate"*, %"class.v8::internal::StackGuard::ThreadLocal" }
%"class.v8::internal::StackGuard::ThreadLocal" = type { i64, i64, i64, i64, %"class.v8::internal::InterruptsScope"*, i64 }
%"class.v8::internal::InterruptsScope" = type { i32 (...)**, %"class.v8::internal::StackGuard"*, i64, i64, i32, %"class.v8::internal::InterruptsScope"* }
%"class.v8::internal::RootsTable" = type { [669 x i64] }
%"class.v8::internal::ExternalReferenceTable" = type { [1042 x i64], i32, i32 }
%"class.v8::internal::ThreadLocalTop" = type { %"class.v8::TryCatch"*, %"class.v8::internal::Isolate"*, %"class.v8::internal::Context", %"struct.std::__1::atomic", %"class.v8::internal::Object", %"class.v8::internal::Context", i64, i64, i64, i64, i64, %"class.v8::internal::Object", i8, i8, %"class.v8::internal::Object", i64, i64, i64, %"class.v8::internal::PromiseOnStack"*, %"class.v8::internal::Simulator"*, i64, %"class.v8::internal::ExternalCallbackScope"*, i32, void (%"class.v8::Object"*, i32, %"class.v8::Value"*)*, i64 }
%"class.v8::TryCatch" = type <{ %"class.v8::internal::Isolate"*, %"class.v8::TryCatch"*, i8*, i8*, i8*, i8, [7 x i8] }>
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { %"class.v8::internal::ThreadId" }
%"class.v8::internal::ThreadId" = type { i32 }
%"class.v8::internal::Context" = type { %"class.v8::internal::TorqueGeneratedContext" }
%"class.v8::internal::TorqueGeneratedContext" = type { %"class.v8::internal::HeapObject" }
%"class.v8::internal::HeapObject" = type { %"class.v8::internal::Object" }
%"class.v8::internal::PromiseOnStack" = type { %"class.v8::internal::Handle.0", %"class.v8::internal::PromiseOnStack"* }
%"class.v8::internal::Handle.0" = type { %"class.v8::internal::HandleBase" }
%"class.v8::internal::HandleBase" = type { i64* }
%"class.v8::internal::Simulator" = type opaque
%"class.v8::internal::ExternalCallbackScope" = type opaque
%"class.v8::Object" = type { i8 }
%"class.v8::Value" = type { i8 }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.v8::internal::IsolateAllocator"* }
%"class.v8::internal::IsolateAllocator" = type { i8*, %"class.v8::PageAllocator"* }
%"class.v8::internal::Heap" = type { %"class.std::__1::unordered_map", %"struct.std::__1::atomic.20", %"class.v8::internal::Heap::ExternalMemoryAccounting", %"class.v8::internal::Isolate"*, i64, i64, i64, i64, %"struct.std::__1::atomic.20", i64, i64, i64, i64, i64, i8, i64, i64, %"struct.std::__1::atomic.20", i64, i64, %"struct.std::__1::atomic.20", %"struct.std::__1::atomic.30", %"class.std::__1::vector", i32, %"class.v8::internal::NewSpace"*, %"class.v8::internal::OldSpace"*, %"class.v8::internal::CodeSpace"*, %"class.v8::internal::MapSpace"*, %"class.v8::internal::OldLargeObjectSpace"*, %"class.v8::internal::CodeLargeObjectSpace"*, %"class.v8::internal::NewLargeObjectSpace"*, %"class.v8::internal::ReadOnlySpace"*, %"class.v8::internal::OldSpace"*, %"class.v8::internal::MapSpace"*, %"class.std::__1::unique_ptr.147", %"class.std::__1::unique_ptr.147", [8 x %"class.v8::internal::Space"*], %"class.v8::internal::LocalHeap"*, %"class.v8::internal::ArrayBufferExtension"*, %"class.v8::internal::ArrayBufferExtension"*, i8, i64, %"struct.std::__1::atomic.162", i32, i32, i32, i32, %"class.v8::internal::AllocationObserver"*, %"class.v8::internal::StressScavengeObserver"*, double, i32, i32, i32, i64, i32, [128 x i64], %"struct.std::__1::atomic.20", i64, i8, %"struct.std::__1::atomic.20", %"class.v8::internal::Object", %"class.v8::internal::Object", %"class.v8::internal::Object", %"class.std::__1::vector.166", %"class.std::__1::vector.166", i64 ()*, [113 x i32], i64, double, double, i64, i64, double, i32, i32, i32, i32, double, double, double, %"class.std::__1::unique_ptr.173", %"class.std::__1::unique_ptr.179", %"class.v8::internal::MinorMarkCompactCollector"*, %"class.std::__1::unique_ptr.309", %"class.std::__1::unique_ptr.315", %"class.std::__1::unique_ptr.321", %"class.std::__1::unique_ptr.360", %"class.std::__1::unique_ptr.399", %"class.std::__1::unique_ptr.429", %"class.std::__1::unique_ptr.435", %"class.std::__1::unique_ptr.445", %"class.std::__1::unique_ptr.451", %"class.std::__1::unique_ptr.451", %"class.std::__1::unique_ptr.457", %"class.std::__1::unique_ptr.463", %"class.std::__1::unique_ptr.463", %"class.std::__1::unique_ptr.469", %"class.std::__1::unique_ptr.475", %"class.std::__1::shared_ptr.481", %"class.v8::CppHeap"*, %"class.v8::EmbedderRootsHandler"*, %"class.v8::internal::StrongRootsEntry"*, %"class.v8::base::Mutex", i8, i64, i64, i64, i64, %"class.std::__1::unordered_map.504", %"class.std::__1::unique_ptr.530", [512 x i8], i8, i8, i64, i8, i32, i32, %"class.std::__1::unique_ptr.536", i8, %"class.v8::internal::Heap::ExternalStringTable", %"class.v8::base::Mutex", %"class.std::__1::unique_ptr.549", i32, i8, i8, i8, i8, i8, %"class.v8::internal::HeapObject", %"class.v8::base::SharedMutex", %"class.v8::base::Mutex", %"class.std::__1::unordered_set.331", i8, [7 x i8], %"class.std::__1::unordered_map.555", %"class.std::__1::unordered_map.581", %"class.std::__1::unordered_map.555", %"class.std::__1::unordered_map.605", %"class.std::__1::vector.633", i8, %"class.std::__1::unique_ptr.640", i32, i32 }
%"class.std::__1::unordered_map" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.3", %"class.std::__1::__compressed_pair.10", %"class.std::__1::__compressed_pair.15", %"class.std::__1::__compressed_pair.17", [4 x i8] }>
%"class.std::__1::unique_ptr.3" = type { %"class.std::__1::__compressed_pair.4" }
%"class.std::__1::__compressed_pair.4" = type { %"struct.std::__1::__compressed_pair_elem.5", %"struct.std::__1::__compressed_pair_elem.6" }
%"struct.std::__1::__compressed_pair_elem.5" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.6" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.7" }
%"class.std::__1::__compressed_pair.7" = type { %"struct.std::__1::__compressed_pair_elem.8" }
%"class.std::__1::__compressed_pair.10" = type { %"struct.std::__1::__compressed_pair_elem.11" }
%"struct.std::__1::__compressed_pair_elem.11" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.15" = type { %"struct.std::__1::__compressed_pair_elem.8" }
%"class.std::__1::__compressed_pair.17" = type { %"struct.std::__1::__compressed_pair_elem.18" }
%"struct.std::__1::__compressed_pair_elem.18" = type { float }
%"class.v8::internal::Heap::ExternalMemoryAccounting" = type { %"struct.std::__1::atomic.25", %"struct.std::__1::atomic.25", %"struct.std::__1::atomic.25" }
%"struct.std::__1::atomic.25" = type { %"struct.std::__1::__atomic_base.26" }
%"struct.std::__1::__atomic_base.26" = type { %"struct.std::__1::__atomic_base.27" }
%"struct.std::__1::__atomic_base.27" = type { %"struct.std::__1::__cxx_atomic_impl.28" }
%"struct.std::__1::__cxx_atomic_impl.28" = type { %"struct.std::__1::__cxx_atomic_base_impl.29" }
%"struct.std::__1::__cxx_atomic_base_impl.29" = type { i64 }
%"struct.std::__1::atomic.30" = type { %"struct.std::__1::__atomic_base.31" }
%"struct.std::__1::__atomic_base.31" = type { %"struct.std::__1::__cxx_atomic_impl.32" }
%"struct.std::__1::__cxx_atomic_impl.32" = type { %"struct.std::__1::__cxx_atomic_base_impl.33" }
%"struct.std::__1::__cxx_atomic_base_impl.33" = type { i32 }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"struct.std::__1::pair"*, %"struct.std::__1::pair"*, %"class.std::__1::__compressed_pair.34" }
%"struct.std::__1::pair" = type opaque
%"class.std::__1::__compressed_pair.34" = type { %"struct.std::__1::__compressed_pair_elem.35" }
%"struct.std::__1::__compressed_pair_elem.35" = type { %"struct.std::__1::pair"* }
%"class.v8::internal::NewSpace" = type { %"class.v8::internal::SpaceWithLinearArea", %"class.v8::base::Mutex", %"struct.std::__1::atomic.20", %"struct.std::__1::atomic.20", %"class.v8::internal::SemiSpace", %"class.v8::internal::SemiSpace", %"class.v8::internal::VirtualMemory", %"class.std::__1::vector.104" }
%"class.v8::internal::SpaceWithLinearArea" = type { %"class.v8::internal::Space", %"class.v8::internal::LinearAllocationArea", [3 x i64] }
%"class.v8::internal::Space" = type { %"class.v8::internal::BaseSpace", %"class.v8::internal::AllocationCounter", %"class.v8::internal::heap::List", %"struct.std::__1::atomic.20"*, %"class.std::__1::unique_ptr.98" }
%"class.v8::internal::BaseSpace" = type { i32 (...)**, %"class.v8::internal::Heap"*, i32, %"struct.std::__1::atomic.20", i64 }
%"class.v8::internal::AllocationCounter" = type <{ %"class.std::__1::vector.39", %"class.std::__1::vector.39", %"class.std::__1::unordered_set", i8, [7 x i8], i64, i64, i8, [7 x i8] }>
%"class.std::__1::vector.39" = type { %"class.std::__1::__vector_base.40" }
%"class.std::__1::__vector_base.40" = type { %"struct.v8::internal::AllocationCounter::AllocationObserverCounter"*, %"struct.v8::internal::AllocationCounter::AllocationObserverCounter"*, %"class.std::__1::__compressed_pair.41" }
%"struct.v8::internal::AllocationCounter::AllocationObserverCounter" = type { %"class.v8::internal::AllocationObserver"*, i64, i64 }
%"class.std::__1::__compressed_pair.41" = type { %"struct.std::__1::__compressed_pair_elem.42" }
%"struct.std::__1::__compressed_pair_elem.42" = type { %"struct.v8::internal::AllocationCounter::AllocationObserverCounter"* }
%"class.std::__1::unordered_set" = type { %"class.std::__1::__hash_table.46" }
%"class.std::__1::__hash_table.46" = type <{ %"class.std::__1::unique_ptr.47", %"class.std::__1::__compressed_pair.57", %"class.std::__1::__compressed_pair.62", %"class.std::__1::__compressed_pair.64", [4 x i8] }>
%"class.std::__1::unique_ptr.47" = type { %"class.std::__1::__compressed_pair.48" }
%"class.std::__1::__compressed_pair.48" = type { %"struct.std::__1::__compressed_pair_elem.49", %"struct.std::__1::__compressed_pair_elem.51" }
%"struct.std::__1::__compressed_pair_elem.49" = type { %"struct.std::__1::__hash_node_base.50"** }
%"struct.std::__1::__hash_node_base.50" = type { %"struct.std::__1::__hash_node_base.50"* }
%"struct.std::__1::__compressed_pair_elem.51" = type { %"class.std::__1::__bucket_list_deallocator.52" }
%"class.std::__1::__bucket_list_deallocator.52" = type { %"class.std::__1::__compressed_pair.53" }
%"class.std::__1::__compressed_pair.53" = type { %"struct.std::__1::__compressed_pair_elem.8" }
%"class.std::__1::__compressed_pair.57" = type { %"struct.std::__1::__compressed_pair_elem.58" }
%"struct.std::__1::__compressed_pair_elem.58" = type { %"struct.std::__1::__hash_node_base.50" }
%"class.std::__1::__compressed_pair.62" = type { %"struct.std::__1::__compressed_pair_elem.8" }
%"class.std::__1::__compressed_pair.64" = type { %"struct.std::__1::__compressed_pair_elem.18" }
%"class.v8::internal::heap::List" = type { %"class.v8::internal::MemoryChunk"*, %"class.v8::internal::MemoryChunk"* }
%"class.v8::internal::MemoryChunk" = type { %"class.v8::internal::BasicMemoryChunk", [2 x %"class.v8::internal::SlotSet"*], %"struct.std::__1::atomic.20", %"struct.std::__1::atomic.25", %"class.v8::internal::SlotSet"*, [2 x %"class.v8::internal::TypedSlotSet"*], [2 x %"class.std::__1::set"*], %"class.v8::base::Mutex"*, %"struct.std::__1::atomic.87", %"class.v8::base::Mutex"*, i64, [2 x %"struct.std::__1::atomic.20"], %"class.v8::internal::heap::ListNode", %"class.v8::internal::FreeListCategory"**, %"struct.std::__1::atomic.25", %"class.v8::internal::Bitmap"*, %"class.v8::internal::CodeObjectRegistry"*, %"class.v8::internal::PossiblyEmptyBuckets" }
%"class.v8::internal::BasicMemoryChunk" = type { i64, i64, %"class.v8::internal::Heap"*, i64, i64, i64, i64, %"struct.std::__1::atomic.25", %"struct.std::__1::atomic.69", %"class.v8::internal::VirtualMemory" }
%"struct.std::__1::atomic.69" = type { %"struct.std::__1::__atomic_base.70" }
%"struct.std::__1::__atomic_base.70" = type { %"struct.std::__1::__cxx_atomic_impl.71" }
%"struct.std::__1::__cxx_atomic_impl.71" = type { %"struct.std::__1::__cxx_atomic_base_impl.72" }
%"struct.std::__1::__cxx_atomic_base_impl.72" = type { %"class.v8::internal::BaseSpace"* }
%"class.v8::internal::SlotSet" = type { i8 }
%"class.v8::internal::TypedSlotSet" = type { %"class.v8::internal::TypedSlots", i64 }
%"class.v8::internal::TypedSlots" = type { i32 (...)**, %"struct.v8::internal::TypedSlots::Chunk"*, %"struct.v8::internal::TypedSlots::Chunk"* }
%"struct.v8::internal::TypedSlots::Chunk" = type { %"struct.v8::internal::TypedSlots::Chunk"*, %"class.std::__1::vector.73" }
%"class.std::__1::vector.73" = type { %"class.std::__1::__vector_base.74" }
%"class.std::__1::__vector_base.74" = type { %"struct.v8::internal::TypedSlots::TypedSlot"*, %"struct.v8::internal::TypedSlots::TypedSlot"*, %"class.std::__1::__compressed_pair.75" }
%"struct.v8::internal::TypedSlots::TypedSlot" = type { i32 }
%"class.std::__1::__compressed_pair.75" = type { %"struct.std::__1::__compressed_pair_elem.76" }
%"struct.std::__1::__compressed_pair_elem.76" = type { %"struct.v8::internal::TypedSlots::TypedSlot"* }
%"class.std::__1::set" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.80", %"class.std::__1::__compressed_pair.85" }
%"class.std::__1::__compressed_pair.80" = type { %"struct.std::__1::__compressed_pair_elem.81" }
%"class.std::__1::__compressed_pair.85" = type { %"struct.std::__1::__compressed_pair_elem.8" }
%"struct.std::__1::atomic.87" = type { %"struct.std::__1::__atomic_base.88" }
%"struct.std::__1::__atomic_base.88" = type { %"struct.std::__1::__cxx_atomic_impl.89" }
%"struct.std::__1::__cxx_atomic_impl.89" = type { %"struct.std::__1::__cxx_atomic_base_impl.90" }
%"struct.std::__1::__cxx_atomic_base_impl.90" = type { i64 }
%"class.v8::internal::heap::ListNode" = type { %"class.v8::internal::MemoryChunk"*, %"class.v8::internal::MemoryChunk"* }
%"class.v8::internal::FreeListCategory" = type { i32, i32, %"class.v8::internal::FreeSpace", %"class.v8::internal::FreeListCategory"*, %"class.v8::internal::FreeListCategory"* }
%"class.v8::internal::FreeSpace" = type { %"class.v8::internal::TorqueGeneratedFreeSpace" }
%"class.v8::internal::TorqueGeneratedFreeSpace" = type { %"class.v8::internal::HeapObject" }
%"class.v8::internal::Bitmap" = type { i8 }
%"class.v8::internal::CodeObjectRegistry" = type <{ %"class.std::__1::vector.91", i8, [7 x i8] }>
%"class.std::__1::vector.91" = type { %"class.std::__1::__vector_base.92" }
%"class.std::__1::__vector_base.92" = type { i64*, i64*, %"class.std::__1::__compressed_pair.93" }
%"class.std::__1::__compressed_pair.93" = type { %"struct.std::__1::__compressed_pair_elem.94" }
%"struct.std::__1::__compressed_pair_elem.94" = type { i64* }
%"class.v8::internal::PossiblyEmptyBuckets" = type { i64 }
%"class.std::__1::unique_ptr.98" = type { %"class.std::__1::__compressed_pair.99" }
%"class.std::__1::__compressed_pair.99" = type { %"struct.std::__1::__compressed_pair_elem.100" }
%"struct.std::__1::__compressed_pair_elem.100" = type { %"class.v8::internal::FreeList"* }
%"class.v8::internal::FreeList" = type { i32 (...)**, i32, i32, i64, %"struct.std::__1::atomic.20", %"class.v8::internal::FreeListCategory"**, i64 }
%"class.v8::internal::LinearAllocationArea" = type { i64, i64, i64 }
%"class.v8::internal::SemiSpace" = type { %"class.v8::internal::Space", i64, i64, i64, i64, i64, i32, %"class.v8::internal::Page"* }
%"class.v8::internal::Page" = type { %"class.v8::internal::MemoryChunk" }
%"class.std::__1::vector.104" = type { %"class.std::__1::__vector_base.105" }
%"class.std::__1::__vector_base.105" = type { %"struct.std::__1::pair.106"*, %"struct.std::__1::pair.106"*, %"class.std::__1::__compressed_pair.107" }
%"struct.std::__1::pair.106" = type { i32, i64 }
%"class.std::__1::__compressed_pair.107" = type { %"struct.std::__1::__compressed_pair_elem.108" }
%"struct.std::__1::__compressed_pair_elem.108" = type { %"struct.std::__1::pair.106"* }
%"class.v8::internal::CodeSpace" = type { %"class.v8::internal::PagedSpace" }
%"class.v8::internal::PagedSpace" = type { %"class.v8::internal::SpaceWithLinearArea", i32, i32, i64, %"class.v8::internal::AllocationStats", %"class.v8::base::Mutex", i64, i64 }
%"class.v8::internal::AllocationStats" = type { %"struct.std::__1::atomic.20", i64, %"struct.std::__1::atomic.20" }
%"class.v8::internal::OldLargeObjectSpace" = type { %"class.v8::internal::LargeObjectSpace" }
%"class.v8::internal::LargeObjectSpace" = type { %"class.v8::internal::Space", %"struct.std::__1::atomic.20", i32, %"struct.std::__1::atomic.20", %"class.v8::base::Mutex", %"struct.std::__1::atomic.20" }
%"class.v8::internal::CodeLargeObjectSpace" = type { %"class.v8::internal::OldLargeObjectSpace", %"class.std::__1::unordered_map.112" }
%"class.std::__1::unordered_map.112" = type { %"class.std::__1::__hash_table.113" }
%"class.std::__1::__hash_table.113" = type <{ %"class.std::__1::unique_ptr.114", %"class.std::__1::__compressed_pair.124", %"class.std::__1::__compressed_pair.129", %"class.std::__1::__compressed_pair.134", [4 x i8] }>
%"class.std::__1::unique_ptr.114" = type { %"class.std::__1::__compressed_pair.115" }
%"class.std::__1::__compressed_pair.115" = type { %"struct.std::__1::__compressed_pair_elem.116", %"struct.std::__1::__compressed_pair_elem.118" }
%"struct.std::__1::__compressed_pair_elem.116" = type { %"struct.std::__1::__hash_node_base.117"** }
%"struct.std::__1::__hash_node_base.117" = type { %"struct.std::__1::__hash_node_base.117"* }
%"struct.std::__1::__compressed_pair_elem.118" = type { %"class.std::__1::__bucket_list_deallocator.119" }
%"class.std::__1::__bucket_list_deallocator.119" = type { %"class.std::__1::__compressed_pair.120" }
%"class.std::__1::__compressed_pair.120" = type { %"struct.std::__1::__compressed_pair_elem.8" }
%"class.std::__1::__compressed_pair.124" = type { %"struct.std::__1::__compressed_pair_elem.125" }
%"struct.std::__1::__compressed_pair_elem.125" = type { %"struct.std::__1::__hash_node_base.117" }
%"class.std::__1::__compressed_pair.129" = type { %"struct.std::__1::__compressed_pair_elem.8" }
%"class.std::__1::__compressed_pair.134" = type { %"struct.std::__1::__compressed_pair_elem.18" }
%"class.v8::internal::NewLargeObjectSpace" = type { %"class.v8::internal::LargeObjectSpace", i64 }
%"class.v8::internal::ReadOnlySpace" = type { %"class.v8::internal::BaseSpace", i8, %"class.v8::internal::AllocationStats", %"class.std::__1::vector.140", i64, i64, i8, i64, i64 }
%"class.std::__1::vector.140" = type { %"class.std::__1::__vector_base.141" }
%"class.std::__1::__vector_base.141" = type { %"class.v8::internal::ReadOnlyPage"**, %"class.v8::internal::ReadOnlyPage"**, %"class.std::__1::__compressed_pair.142" }
%"class.v8::internal::ReadOnlyPage" = type { %"class.v8::internal::BasicMemoryChunk" }
%"class.std::__1::__compressed_pair.142" = type { %"struct.std::__1::__compressed_pair_elem.143" }
%"struct.std::__1::__compressed_pair_elem.143" = type { %"class.v8::internal::ReadOnlyPage"** }
%"class.v8::internal::OldSpace" = type { %"class.v8::internal::PagedSpace" }
%"class.v8::internal::MapSpace" = type { %"class.v8::internal::PagedSpace" }
%"class.std::__1::unique_ptr.147" = type { %"class.std::__1::__compressed_pair.148" }
%"class.std::__1::__compressed_pair.148" = type { %"struct.std::__1::__compressed_pair_elem.149" }
%"struct.std::__1::__compressed_pair_elem.149" = type { %"class.v8::internal::ConcurrentAllocator"* }
%"class.v8::internal::ConcurrentAllocator" = type { %"class.v8::internal::LocalHeap"*, %"class.v8::internal::PagedSpace"*, %"class.v8::internal::LocalAllocationBuffer" }
%"class.v8::internal::LocalAllocationBuffer" = type { %"class.v8::internal::Heap"*, %"class.v8::internal::LinearAllocationArea" }
%"class.v8::internal::LocalHeap" = type { %"class.v8::internal::Heap"*, i8, %"struct.std::__1::atomic.1053", i8, i8, %"class.v8::internal::LocalHeap"*, %"class.v8::internal::LocalHeap"*, %"class.std::__1::unique_ptr.1057", %"class.std::__1::unique_ptr.1063", %"class.std::__1::unique_ptr.475", %"class.std::__1::vector.1069", %"class.v8::internal::ConcurrentAllocator" }
%"struct.std::__1::atomic.1053" = type { %"struct.std::__1::__atomic_base.1054" }
%"struct.std::__1::__atomic_base.1054" = type { %"struct.std::__1::__cxx_atomic_impl.1055" }
%"struct.std::__1::__cxx_atomic_impl.1055" = type { %"struct.std::__1::__cxx_atomic_base_impl.1056" }
%"struct.std::__1::__cxx_atomic_base_impl.1056" = type { i32 }
%"class.std::__1::unique_ptr.1057" = type { %"class.std::__1::__compressed_pair.1058" }
%"class.std::__1::__compressed_pair.1058" = type { %"struct.std::__1::__compressed_pair_elem.1059" }
%"struct.std::__1::__compressed_pair_elem.1059" = type { %"class.v8::internal::LocalHandles"* }
%"class.v8::internal::LocalHandles" = type { %"struct.v8::internal::HandleScopeData", %"class.std::__1::vector.810" }
%"class.std::__1::vector.810" = type { %"class.std::__1::__vector_base.811" }
%"class.std::__1::__vector_base.811" = type { i64**, i64**, %"class.std::__1::__compressed_pair.812" }
%"class.std::__1::__compressed_pair.812" = type { %"struct.std::__1::__compressed_pair_elem.813" }
%"struct.std::__1::__compressed_pair_elem.813" = type { i64** }
%"class.std::__1::unique_ptr.1063" = type { %"class.std::__1::__compressed_pair.1064" }
%"class.std::__1::__compressed_pair.1064" = type { %"struct.std::__1::__compressed_pair_elem.1065" }
%"struct.std::__1::__compressed_pair_elem.1065" = type { %"class.v8::internal::PersistentHandles"* }
%"class.v8::internal::PersistentHandles" = type { %"class.v8::internal::Isolate"*, %"class.std::__1::vector.810", i64*, i64*, %"class.v8::internal::PersistentHandles"*, %"class.v8::internal::PersistentHandles"* }
%"class.std::__1::vector.1069" = type { %"class.std::__1::__vector_base.1070" }
%"class.std::__1::__vector_base.1070" = type { %"struct.std::__1::pair.1071"*, %"struct.std::__1::pair.1071"*, %"class.std::__1::__compressed_pair.1072" }
%"struct.std::__1::pair.1071" = type opaque
%"class.std::__1::__compressed_pair.1072" = type { %"struct.std::__1::__compressed_pair_elem.1073" }
%"struct.std::__1::__compressed_pair_elem.1073" = type { %"struct.std::__1::pair.1071"* }
%"class.v8::internal::ArrayBufferExtension" = type { %"struct.std::__1::atomic.153", %"struct.std::__1::atomic.157", %"class.std::__1::shared_ptr", %"class.v8::internal::ArrayBufferExtension"*, %"struct.std::__1::atomic.20" }
%"struct.std::__1::atomic.157" = type { %"struct.std::__1::__atomic_base.158" }
%"struct.std::__1::__atomic_base.158" = type { %"struct.std::__1::__cxx_atomic_impl.159" }
%"struct.std::__1::__cxx_atomic_impl.159" = type { %"struct.std::__1::__cxx_atomic_base_impl.160" }
%"struct.std::__1::__cxx_atomic_base_impl.160" = type { i8 }
%"class.std::__1::shared_ptr" = type { %"class.v8::internal::BackingStore"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::internal::BackingStore" = type <{ i8*, %"struct.std::__1::atomic.20", i64, %"union.v8::internal::BackingStore::TypeSpecificData", i16, [6 x i8] }>
%"union.v8::internal::BackingStore::TypeSpecificData" = type { %"class.std::__1::shared_ptr.161" }
%"class.std::__1::__shared_weak_count" = type { %"class.std::__1::__shared_count", i64 }
%"class.std::__1::__shared_count" = type { i32 (...)**, i64 }
%"struct.std::__1::atomic.162" = type { %"struct.std::__1::__atomic_base.163" }
%"struct.std::__1::__atomic_base.163" = type { %"struct.std::__1::__cxx_atomic_impl.164" }
%"struct.std::__1::__cxx_atomic_impl.164" = type { %"struct.std::__1::__cxx_atomic_base_impl.165" }
%"struct.std::__1::__cxx_atomic_base_impl.165" = type { i32 }
%"class.v8::internal::AllocationObserver" = type { i32 (...)**, i64 }
%"class.v8::internal::StressScavengeObserver" = type opaque
%"class.std::__1::vector.166" = type { %"class.std::__1::__vector_base.167" }
%"class.std::__1::__vector_base.167" = type { %"struct.v8::internal::Heap::GCCallbackTuple"*, %"struct.v8::internal::Heap::GCCallbackTuple"*, %"class.std::__1::__compressed_pair.168" }
%"struct.v8::internal::Heap::GCCallbackTuple" = type { void (%"class.v8::Isolate"*, i32, i32, i8*)*, i32, i8* }
%"class.v8::Isolate" = type { i8 }
%"class.std::__1::__compressed_pair.168" = type { %"struct.std::__1::__compressed_pair_elem.169" }
%"struct.std::__1::__compressed_pair_elem.169" = type { %"struct.v8::internal::Heap::GCCallbackTuple"* }
%"class.std::__1::unique_ptr.173" = type { %"class.std::__1::__compressed_pair.174" }
%"class.std::__1::__compressed_pair.174" = type { %"struct.std::__1::__compressed_pair_elem.175" }
%"struct.std::__1::__compressed_pair_elem.175" = type { %"class.v8::internal::GCTracer"* }
%"class.v8::internal::GCTracer" = type opaque
%"class.std::__1::unique_ptr.179" = type { %"class.std::__1::__compressed_pair.180" }
%"class.std::__1::__compressed_pair.180" = type { %"struct.std::__1::__compressed_pair_elem.181" }
%"struct.std::__1::__compressed_pair_elem.181" = type { %"class.v8::internal::MarkCompactCollector"* }
%"class.v8::internal::MarkCompactCollector" = type <{ %"class.v8::internal::MarkCompactCollectorBase", %"class.v8::base::Mutex", %"class.v8::base::Semaphore", i8, i8, i8, i8, i8, i8, [2 x i8], %"class.v8::internal::MarkingWorklists", %"class.v8::internal::WeakObjects", %"struct.v8::internal::EphemeronMarking", %"class.std::__1::unique_ptr.221", %"class.std::__1::unique_ptr.227", %"class.v8::internal::NativeContextInferrer", [7 x i8], %"class.v8::internal::NativeContextStats", %"class.std::__1::vector.281", %"class.std::__1::vector.281", %"class.std::__1::vector.281", %"class.std::__1::vector.288", %"class.v8::internal::Sweeper"*, %"class.v8::internal::MajorMarkingState", %"class.v8::internal::MajorNonAtomicMarkingState", [2 x i8], i32, i32, [4 x i8] }>
%"class.v8::internal::MarkCompactCollectorBase" = type { i32 (...)**, %"class.v8::internal::Heap"* }
%"class.v8::base::Semaphore" = type { %union.sem_t }
%union.sem_t = type { i64, [24 x i8] }
%"class.v8::internal::MarkingWorklists" = type { %"class.heap::base::Worklist", %"class.heap::base::Worklist", %"class.heap::base::Worklist.182", %"class.std::__1::vector.183", %"class.std::__1::vector.190", %"class.heap::base::Worklist" }
%"class.heap::base::Worklist.182" = type { %"class.v8::base::Mutex", %"class.heap::base::Worklist<v8::internal::HeapObject, 16>::Segment"*, %"struct.std::__1::atomic.20" }
%"class.heap::base::Worklist<v8::internal::HeapObject, 16>::Segment" = type opaque
%"class.std::__1::vector.183" = type { %"class.std::__1::__vector_base.184" }
%"class.std::__1::__vector_base.184" = type { %"struct.v8::internal::ContextWorklistPair"*, %"struct.v8::internal::ContextWorklistPair"*, %"class.std::__1::__compressed_pair.185" }
%"struct.v8::internal::ContextWorklistPair" = type { i64, %"class.heap::base::Worklist"* }
%"class.std::__1::__compressed_pair.185" = type { %"struct.std::__1::__compressed_pair_elem.186" }
%"struct.std::__1::__compressed_pair_elem.186" = type { %"struct.v8::internal::ContextWorklistPair"* }
%"class.std::__1::vector.190" = type { %"class.std::__1::__vector_base.191" }
%"class.std::__1::__vector_base.191" = type { %"class.std::__1::unique_ptr.192"*, %"class.std::__1::unique_ptr.192"*, %"class.std::__1::__compressed_pair.193" }
%"class.std::__1::unique_ptr.192" = type opaque
%"class.std::__1::__compressed_pair.193" = type { %"struct.std::__1::__compressed_pair_elem.194" }
%"struct.std::__1::__compressed_pair_elem.194" = type { %"class.std::__1::unique_ptr.192"* }
%"class.heap::base::Worklist" = type { %"class.v8::base::Mutex", %"class.heap::base::Worklist<v8::internal::HeapObject, 64>::Segment"*, %"struct.std::__1::atomic.20" }
%"class.heap::base::Worklist<v8::internal::HeapObject, 64>::Segment" = type opaque
%"class.v8::internal::WeakObjects" = type { %"class.v8::internal::Worklist", %"class.v8::internal::Worklist.198", %"class.v8::internal::Worklist.200", %"class.v8::internal::Worklist.200", %"class.v8::internal::Worklist.200", %"class.v8::internal::Worklist.202", %"class.v8::internal::Worklist.204", %"class.v8::internal::Worklist.206", %"class.v8::internal::Worklist.208", %"class.v8::internal::Worklist.210", %"class.v8::internal::Worklist.212" }
%"class.v8::internal::Worklist" = type <{ [8 x %"struct.v8::internal::Worklist<v8::internal::TransitionArray, 64>::PrivateSegmentHolder"], %"class.v8::internal::Worklist<v8::internal::TransitionArray, 64>::GlobalPool", i32, [4 x i8] }>
%"struct.v8::internal::Worklist<v8::internal::TransitionArray, 64>::PrivateSegmentHolder" = type { %"class.v8::internal::Worklist<v8::internal::TransitionArray, 64>::Segment"*, %"class.v8::internal::Worklist<v8::internal::TransitionArray, 64>::Segment"*, [64 x i8] }
%"class.v8::internal::Worklist<v8::internal::TransitionArray, 64>::Segment" = type opaque
%"class.v8::internal::Worklist<v8::internal::TransitionArray, 64>::GlobalPool" = type { %"class.v8::base::Mutex", %"class.v8::internal::Worklist<v8::internal::TransitionArray, 64>::Segment"*, %"struct.std::__1::atomic.20" }
%"class.v8::internal::Worklist.198" = type <{ [8 x %"struct.v8::internal::Worklist<v8::internal::EphemeronHashTable, 64>::PrivateSegmentHolder"], %"class.v8::internal::Worklist<v8::internal::EphemeronHashTable, 64>::GlobalPool", i32, [4 x i8] }>
%"struct.v8::internal::Worklist<v8::internal::EphemeronHashTable, 64>::PrivateSegmentHolder" = type { %"class.v8::internal::Worklist<v8::internal::EphemeronHashTable, 64>::Segment"*, %"class.v8::internal::Worklist<v8::internal::EphemeronHashTable, 64>::Segment"*, [64 x i8] }
%"class.v8::internal::Worklist<v8::internal::EphemeronHashTable, 64>::Segment" = type opaque
%"class.v8::internal::Worklist<v8::internal::EphemeronHashTable, 64>::GlobalPool" = type { %"class.v8::base::Mutex", %"class.v8::internal::Worklist<v8::internal::EphemeronHashTable, 64>::Segment"*, %"struct.std::__1::atomic.20" }
%"class.v8::internal::Worklist.200" = type <{ [8 x %"struct.v8::internal::Worklist<v8::internal::Ephemeron, 64>::PrivateSegmentHolder"], %"class.v8::internal::Worklist<v8::internal::Ephemeron, 64>::GlobalPool", i32, [4 x i8] }>
%"struct.v8::internal::Worklist<v8::internal::Ephemeron, 64>::PrivateSegmentHolder" = type { %"class.v8::internal::Worklist<v8::internal::Ephemeron, 64>::Segment"*, %"class.v8::internal::Worklist<v8::internal::Ephemeron, 64>::Segment"*, [64 x i8] }
%"class.v8::internal::Worklist<v8::internal::Ephemeron, 64>::Segment" = type opaque
%"class.v8::internal::Worklist<v8::internal::Ephemeron, 64>::GlobalPool" = type { %"class.v8::base::Mutex", %"class.v8::internal::Worklist<v8::internal::Ephemeron, 64>::Segment"*, %"struct.std::__1::atomic.20" }
%"class.v8::internal::Worklist.202" = type <{ [8 x %"struct.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::CompressedHeapObjectSlot>, 64>::PrivateSegmentHolder"], %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::CompressedHeapObjectSlot>, 64>::GlobalPool", i32, [4 x i8] }>
%"struct.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::CompressedHeapObjectSlot>, 64>::PrivateSegmentHolder" = type { %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::CompressedHeapObjectSlot>, 64>::Segment"*, %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::CompressedHeapObjectSlot>, 64>::Segment"*, [64 x i8] }
%"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::CompressedHeapObjectSlot>, 64>::Segment" = type opaque
%"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::CompressedHeapObjectSlot>, 64>::GlobalPool" = type { %"class.v8::base::Mutex", %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::CompressedHeapObjectSlot>, 64>::Segment"*, %"struct.std::__1::atomic.20" }
%"class.v8::internal::Worklist.204" = type <{ [8 x %"struct.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::Code>, 64>::PrivateSegmentHolder"], %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::Code>, 64>::GlobalPool", i32, [4 x i8] }>
%"struct.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::Code>, 64>::PrivateSegmentHolder" = type { %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::Code>, 64>::Segment"*, %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::Code>, 64>::Segment"*, [64 x i8] }
%"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::Code>, 64>::Segment" = type opaque
%"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::Code>, 64>::GlobalPool" = type { %"class.v8::base::Mutex", %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::Code>, 64>::Segment"*, %"struct.std::__1::atomic.20" }
%"class.v8::internal::Worklist.206" = type <{ [8 x %"struct.v8::internal::Worklist<v8::internal::JSWeakRef, 64>::PrivateSegmentHolder"], %"class.v8::internal::Worklist<v8::internal::JSWeakRef, 64>::GlobalPool", i32, [4 x i8] }>
%"struct.v8::internal::Worklist<v8::internal::JSWeakRef, 64>::PrivateSegmentHolder" = type { %"class.v8::internal::Worklist<v8::internal::JSWeakRef, 64>::Segment"*, %"class.v8::internal::Worklist<v8::internal::JSWeakRef, 64>::Segment"*, [64 x i8] }
%"class.v8::internal::Worklist<v8::internal::JSWeakRef, 64>::Segment" = type opaque
%"class.v8::internal::Worklist<v8::internal::JSWeakRef, 64>::GlobalPool" = type { %"class.v8::base::Mutex", %"class.v8::internal::Worklist<v8::internal::JSWeakRef, 64>::Segment"*, %"struct.std::__1::atomic.20" }
%"class.v8::internal::Worklist.208" = type <{ [8 x %"struct.v8::internal::Worklist<v8::internal::WeakCell, 64>::PrivateSegmentHolder"], %"class.v8::internal::Worklist<v8::internal::WeakCell, 64>::GlobalPool", i32, [4 x i8] }>
%"struct.v8::internal::Worklist<v8::internal::WeakCell, 64>::PrivateSegmentHolder" = type { %"class.v8::internal::Worklist<v8::internal::WeakCell, 64>::Segment"*, %"class.v8::internal::Worklist<v8::internal::WeakCell, 64>::Segment"*, [64 x i8] }
%"class.v8::internal::Worklist<v8::internal::WeakCell, 64>::Segment" = type opaque
%"class.v8::internal::Worklist<v8::internal::WeakCell, 64>::GlobalPool" = type { %"class.v8::base::Mutex", %"class.v8::internal::Worklist<v8::internal::WeakCell, 64>::Segment"*, %"struct.std::__1::atomic.20" }
%"class.v8::internal::Worklist.210" = type <{ [8 x %"struct.v8::internal::Worklist<v8::internal::SharedFunctionInfo, 64>::PrivateSegmentHolder"], %"class.v8::internal::Worklist<v8::internal::SharedFunctionInfo, 64>::GlobalPool", i32, [4 x i8] }>
%"struct.v8::internal::Worklist<v8::internal::SharedFunctionInfo, 64>::PrivateSegmentHolder" = type { %"class.v8::internal::Worklist<v8::internal::SharedFunctionInfo, 64>::Segment"*, %"class.v8::internal::Worklist<v8::internal::SharedFunctionInfo, 64>::Segment"*, [64 x i8] }
%"class.v8::internal::Worklist<v8::internal::SharedFunctionInfo, 64>::Segment" = type opaque
%"class.v8::internal::Worklist<v8::internal::SharedFunctionInfo, 64>::GlobalPool" = type { %"class.v8::base::Mutex", %"class.v8::internal::Worklist<v8::internal::SharedFunctionInfo, 64>::Segment"*, %"struct.std::__1::atomic.20" }
%"class.v8::internal::Worklist.212" = type <{ [8 x %"struct.v8::internal::Worklist<v8::internal::JSFunction, 64>::PrivateSegmentHolder"], %"class.v8::internal::Worklist<v8::internal::JSFunction, 64>::GlobalPool", i32, [4 x i8] }>
%"struct.v8::internal::Worklist<v8::internal::JSFunction, 64>::PrivateSegmentHolder" = type { %"class.v8::internal::Worklist<v8::internal::JSFunction, 64>::Segment"*, %"class.v8::internal::Worklist<v8::internal::JSFunction, 64>::Segment"*, [64 x i8] }
%"class.v8::internal::Worklist<v8::internal::JSFunction, 64>::Segment" = type opaque
%"class.v8::internal::Worklist<v8::internal::JSFunction, 64>::GlobalPool" = type { %"class.v8::base::Mutex", %"class.v8::internal::Worklist<v8::internal::JSFunction, 64>::Segment"*, %"struct.std::__1::atomic.20" }
%"struct.v8::internal::EphemeronMarking" = type { %"class.std::__1::vector.214", i8, i64 }
%"class.std::__1::vector.214" = type { %"class.std::__1::__vector_base.215" }
%"class.std::__1::__vector_base.215" = type { %"class.v8::internal::HeapObject"*, %"class.v8::internal::HeapObject"*, %"class.std::__1::__compressed_pair.216" }
%"class.std::__1::__compressed_pair.216" = type { %"struct.std::__1::__compressed_pair_elem.217" }
%"struct.std::__1::__compressed_pair_elem.217" = type { %"class.v8::internal::HeapObject"* }
%"class.std::__1::unique_ptr.221" = type { %"class.std::__1::__compressed_pair.222" }
%"class.std::__1::__compressed_pair.222" = type { %"struct.std::__1::__compressed_pair_elem.223" }
%"struct.std::__1::__compressed_pair_elem.223" = type { %"class.v8::internal::MainMarkingVisitor"* }
%"class.v8::internal::MainMarkingVisitor" = type opaque
%"class.std::__1::unique_ptr.227" = type { %"class.std::__1::__compressed_pair.228" }
%"class.std::__1::__compressed_pair.228" = type { %"struct.std::__1::__compressed_pair_elem.229" }
%"struct.std::__1::__compressed_pair_elem.229" = type { %"class.v8::internal::MarkingWorklists::Local"* }
%"class.v8::internal::MarkingWorklists::Local" = type { %"class.heap::base::Worklist<v8::internal::HeapObject, 64>::Local", %"class.heap::base::Worklist<v8::internal::HeapObject, 16>::Local", %"class.heap::base::Worklist<v8::internal::HeapObject, 64>::Local", i64, %"class.heap::base::Worklist<v8::internal::HeapObject, 64>::Local"*, i8, [7 x i8], %"class.std::__1::unordered_map.230" }
%"class.heap::base::Worklist<v8::internal::HeapObject, 16>::Local" = type { %"class.heap::base::Worklist.182"*, %"class.heap::base::internal::SegmentBase"*, %"class.heap::base::internal::SegmentBase"* }
%"class.heap::base::internal::SegmentBase" = type { i16, i16 }
%"class.heap::base::Worklist<v8::internal::HeapObject, 64>::Local" = type { %"class.heap::base::Worklist"*, %"class.heap::base::internal::SegmentBase"*, %"class.heap::base::internal::SegmentBase"* }
%"class.std::__1::unordered_map.230" = type { %"class.std::__1::__hash_table.231" }
%"class.std::__1::__hash_table.231" = type <{ %"class.std::__1::unique_ptr.232", %"class.std::__1::__compressed_pair.242", %"class.std::__1::__compressed_pair.247", %"class.std::__1::__compressed_pair.250", [4 x i8] }>
%"class.std::__1::unique_ptr.232" = type { %"class.std::__1::__compressed_pair.233" }
%"class.std::__1::__compressed_pair.233" = type { %"struct.std::__1::__compressed_pair_elem.234", %"struct.std::__1::__compressed_pair_elem.236" }
%"struct.std::__1::__compressed_pair_elem.234" = type { %"struct.std::__1::__hash_node_base.235"** }
%"struct.std::__1::__hash_node_base.235" = type { %"struct.std::__1::__hash_node_base.235"* }
%"struct.std::__1::__compressed_pair_elem.236" = type { %"class.std::__1::__bucket_list_deallocator.237" }
%"class.std::__1::__bucket_list_deallocator.237" = type { %"class.std::__1::__compressed_pair.238" }
%"class.std::__1::__compressed_pair.238" = type { %"struct.std::__1::__compressed_pair_elem.8" }
%"class.std::__1::__compressed_pair.242" = type { %"struct.std::__1::__compressed_pair_elem.243" }
%"struct.std::__1::__compressed_pair_elem.243" = type { %"struct.std::__1::__hash_node_base.235" }
%"class.std::__1::__compressed_pair.247" = type { %"struct.std::__1::__compressed_pair_elem.8" }
%"class.std::__1::__compressed_pair.250" = type { %"struct.std::__1::__compressed_pair_elem.18" }
%"class.v8::internal::NativeContextInferrer" = type { i8 }
%"class.v8::internal::NativeContextStats" = type { %"class.std::__1::unordered_map.257" }
%"class.std::__1::unordered_map.257" = type { %"class.std::__1::__hash_table.258" }
%"class.std::__1::__hash_table.258" = type <{ %"class.std::__1::unique_ptr.259", %"class.std::__1::__compressed_pair.269", %"class.std::__1::__compressed_pair.274", %"class.std::__1::__compressed_pair.277", [4 x i8] }>
%"class.std::__1::unique_ptr.259" = type { %"class.std::__1::__compressed_pair.260" }
%"class.std::__1::__compressed_pair.260" = type { %"struct.std::__1::__compressed_pair_elem.261", %"struct.std::__1::__compressed_pair_elem.263" }
%"struct.std::__1::__compressed_pair_elem.261" = type { %"struct.std::__1::__hash_node_base.262"** }
%"struct.std::__1::__hash_node_base.262" = type { %"struct.std::__1::__hash_node_base.262"* }
%"struct.std::__1::__compressed_pair_elem.263" = type { %"class.std::__1::__bucket_list_deallocator.264" }
%"class.std::__1::__bucket_list_deallocator.264" = type { %"class.std::__1::__compressed_pair.265" }
%"class.std::__1::__compressed_pair.265" = type { %"struct.std::__1::__compressed_pair_elem.8" }
%"class.std::__1::__compressed_pair.269" = type { %"struct.std::__1::__compressed_pair_elem.270" }
%"struct.std::__1::__compressed_pair_elem.270" = type { %"struct.std::__1::__hash_node_base.262" }
%"class.std::__1::__compressed_pair.274" = type { %"struct.std::__1::__compressed_pair_elem.8" }
%"class.std::__1::__compressed_pair.277" = type { %"struct.std::__1::__compressed_pair_elem.18" }
%"class.std::__1::vector.281" = type { %"class.std::__1::__vector_base.282" }
%"class.std::__1::__vector_base.282" = type { %"class.v8::internal::Page"**, %"class.v8::internal::Page"**, %"class.std::__1::__compressed_pair.283" }
%"class.std::__1::__compressed_pair.283" = type { %"struct.std::__1::__compressed_pair_elem.284" }
%"struct.std::__1::__compressed_pair_elem.284" = type { %"class.v8::internal::Page"** }
%"class.std::__1::vector.288" = type { %"class.std::__1::__vector_base.289" }
%"class.std::__1::__vector_base.289" = type { %"struct.std::__1::pair.290"*, %"struct.std::__1::pair.290"*, %"class.std::__1::__compressed_pair.291" }
%"struct.std::__1::pair.290" = type opaque
%"class.std::__1::__compressed_pair.291" = type { %"struct.std::__1::__compressed_pair_elem.292" }
%"struct.std::__1::__compressed_pair_elem.292" = type { %"struct.std::__1::pair.290"* }
%"class.v8::internal::Sweeper" = type <{ %"class.v8::internal::Heap"*, %"class.v8::internal::MajorNonAtomicMarkingState"*, %"class.std::__1::unique_ptr.296", %"class.v8::base::Mutex", [3 x %"class.std::__1::vector.281"], [3 x %"class.std::__1::vector.281"], i8, %"struct.std::__1::atomic.153", [6 x i8], %"class.std::__1::vector.281", i64, %"class.v8::base::Semaphore", i8, i8, i8, [5 x i8] }>
%"class.std::__1::unique_ptr.296" = type { %"class.std::__1::__compressed_pair.297" }
%"class.std::__1::__compressed_pair.297" = type { %"struct.std::__1::__compressed_pair_elem.298" }
%"struct.std::__1::__compressed_pair_elem.298" = type { %"class.v8::JobHandle"* }
%"class.v8::JobHandle" = type { i32 (...)** }
%"class.v8::internal::MajorMarkingState" = type { i8 }
%"class.v8::internal::MajorNonAtomicMarkingState" = type { i8 }
%"class.v8::internal::MinorMarkCompactCollector" = type <{ %"class.v8::internal::MarkCompactCollectorBase", %"class.v8::internal::Worklist.306"*, %"class.v8::internal::YoungGenerationMarkingVisitor"*, %"class.v8::base::Semaphore", %"class.std::__1::vector.281", %"class.std::__1::vector.281", %"class.v8::internal::MinorMarkingState", %"class.v8::internal::MinorNonAtomicMarkingState", [6 x i8] }>
%"class.v8::internal::Worklist.306" = type opaque
%"class.v8::internal::YoungGenerationMarkingVisitor" = type opaque
%"class.v8::internal::MinorMarkingState" = type { i8 }
%"class.v8::internal::MinorNonAtomicMarkingState" = type { i8 }
%"class.std::__1::unique_ptr.309" = type { %"class.std::__1::__compressed_pair.310" }
%"class.std::__1::__compressed_pair.310" = type { %"struct.std::__1::__compressed_pair_elem.311" }
%"struct.std::__1::__compressed_pair_elem.311" = type { %"class.v8::internal::ScavengerCollector"* }
%"class.v8::internal::ScavengerCollector" = type opaque
%"class.std::__1::unique_ptr.315" = type { %"class.std::__1::__compressed_pair.316" }
%"class.std::__1::__compressed_pair.316" = type { %"struct.std::__1::__compressed_pair_elem.317" }
%"struct.std::__1::__compressed_pair_elem.317" = type { %"class.v8::internal::ArrayBufferSweeper"* }
%"class.v8::internal::ArrayBufferSweeper" = type opaque
%"class.std::__1::unique_ptr.321" = type { %"class.std::__1::__compressed_pair.322" }
%"class.std::__1::__compressed_pair.322" = type { %"struct.std::__1::__compressed_pair_elem.323" }
%"struct.std::__1::__compressed_pair_elem.323" = type { %"class.v8::internal::MemoryAllocator"* }
%"class.v8::internal::MemoryAllocator" = type { %"class.v8::internal::Isolate"*, %"class.v8::PageAllocator"*, %"class.v8::PageAllocator"*, i64, %"struct.std::__1::atomic.20", %"struct.std::__1::atomic.20", %"struct.std::__1::atomic.20", %"struct.std::__1::atomic.20", %"class.v8::internal::VirtualMemory", %"class.v8::internal::MemoryAllocator::Unmapper", %"class.std::__1::unordered_set.331", %"class.v8::base::Mutex" }
%"class.v8::internal::MemoryAllocator::Unmapper" = type { %"class.v8::internal::Heap"*, %"class.v8::internal::MemoryAllocator"*, %"class.v8::base::Mutex", [3 x %"class.std::__1::vector.324"], %"class.std::__1::unique_ptr.296" }
%"class.std::__1::vector.324" = type { %"class.std::__1::__vector_base.325" }
%"class.std::__1::__vector_base.325" = type { %"class.v8::internal::MemoryChunk"**, %"class.v8::internal::MemoryChunk"**, %"class.std::__1::__compressed_pair.326" }
%"class.std::__1::__compressed_pair.326" = type { %"struct.std::__1::__compressed_pair_elem.327" }
%"struct.std::__1::__compressed_pair_elem.327" = type { %"class.v8::internal::MemoryChunk"** }
%"class.std::__1::unique_ptr.360" = type { %"class.std::__1::__compressed_pair.361" }
%"class.std::__1::__compressed_pair.361" = type { %"struct.std::__1::__compressed_pair_elem.362" }
%"struct.std::__1::__compressed_pair_elem.362" = type { %"class.v8::internal::IncrementalMarking"* }
%"class.v8::internal::IncrementalMarking" = type { %"class.v8::internal::Heap"*, %"class.v8::internal::MarkCompactCollector"*, %"class.v8::internal::WeakObjects"*, double, double, i64, i64, i64, i64, double, i64, %"struct.std::__1::atomic.363", i8, i8, i8, i8, [3 x i8], %"class.v8::internal::IncrementalMarkingJob", %"struct.std::__1::atomic.367", %"class.v8::internal::IncrementalMarking::Observer", %"class.v8::internal::IncrementalMarking::Observer", %"class.v8::internal::MajorMarkingState", %"class.v8::internal::MajorAtomicMarkingState", %"class.v8::internal::MajorNonAtomicMarkingState", %"class.v8::base::Mutex", %"class.std::__1::unordered_map.372" }
%"struct.std::__1::atomic.363" = type { %"struct.std::__1::__atomic_base.364" }
%"struct.std::__1::__atomic_base.364" = type { %"struct.std::__1::__cxx_atomic_impl.365" }
%"struct.std::__1::__cxx_atomic_impl.365" = type { %"struct.std::__1::__cxx_atomic_base_impl.366" }
%"struct.std::__1::__cxx_atomic_base_impl.366" = type { i8 }
%"class.v8::internal::IncrementalMarkingJob" = type <{ %"class.v8::base::Mutex", double, i8, i8, [6 x i8] }>
%"struct.std::__1::atomic.367" = type { %"struct.std::__1::__atomic_base.368" }
%"struct.std::__1::__atomic_base.368" = type { %"struct.std::__1::__cxx_atomic_impl.369" }
%"struct.std::__1::__cxx_atomic_impl.369" = type { %"struct.std::__1::__cxx_atomic_base_impl.370" }
%"struct.std::__1::__cxx_atomic_base_impl.370" = type { i32 }
%"class.v8::internal::IncrementalMarking::Observer" = type { %"class.v8::internal::AllocationObserver", %"class.v8::internal::IncrementalMarking"* }
%"class.v8::internal::MajorAtomicMarkingState" = type { i8 }
%"class.std::__1::unordered_map.372" = type { %"class.std::__1::__hash_table.373" }
%"class.std::__1::__hash_table.373" = type <{ %"class.std::__1::unique_ptr.374", %"class.std::__1::__compressed_pair.384", %"class.std::__1::__compressed_pair.389", %"class.std::__1::__compressed_pair.392", [4 x i8] }>
%"class.std::__1::unique_ptr.374" = type { %"class.std::__1::__compressed_pair.375" }
%"class.std::__1::__compressed_pair.375" = type { %"struct.std::__1::__compressed_pair_elem.376", %"struct.std::__1::__compressed_pair_elem.378" }
%"struct.std::__1::__compressed_pair_elem.376" = type { %"struct.std::__1::__hash_node_base.377"** }
%"struct.std::__1::__hash_node_base.377" = type { %"struct.std::__1::__hash_node_base.377"* }
%"struct.std::__1::__compressed_pair_elem.378" = type { %"class.std::__1::__bucket_list_deallocator.379" }
%"class.std::__1::__bucket_list_deallocator.379" = type { %"class.std::__1::__compressed_pair.380" }
%"class.std::__1::__compressed_pair.380" = type { %"struct.std::__1::__compressed_pair_elem.8" }
%"class.std::__1::__compressed_pair.384" = type { %"struct.std::__1::__compressed_pair_elem.385" }
%"struct.std::__1::__compressed_pair_elem.385" = type { %"struct.std::__1::__hash_node_base.377" }
%"class.std::__1::__compressed_pair.389" = type { %"struct.std::__1::__compressed_pair_elem.8" }
%"class.std::__1::__compressed_pair.392" = type { %"struct.std::__1::__compressed_pair_elem.18" }
%"class.std::__1::unique_ptr.399" = type { %"class.std::__1::__compressed_pair.400" }
%"class.std::__1::__compressed_pair.400" = type { %"struct.std::__1::__compressed_pair_elem.401" }
%"struct.std::__1::__compressed_pair_elem.401" = type { %"class.v8::internal::ConcurrentMarking"* }
%"class.v8::internal::ConcurrentMarking" = type <{ %"class.std::__1::unique_ptr.296", %"class.v8::internal::Heap"*, %"class.v8::internal::MarkingWorklists"*, %"class.v8::internal::WeakObjects"*, [8 x %"struct.v8::internal::ConcurrentMarking::TaskState"], %"struct.std::__1::atomic.20", %"struct.std::__1::atomic.153", [7 x i8] }>
%"struct.v8::internal::ConcurrentMarking::TaskState" = type { i64, %"class.std::__1::unordered_map.402", %"class.v8::internal::NativeContextInferrer", [7 x i8], %"class.v8::internal::NativeContextStats", [64 x i8] }
%"class.std::__1::unordered_map.402" = type { %"class.std::__1::__hash_table.403" }
%"class.std::__1::__hash_table.403" = type <{ %"class.std::__1::unique_ptr.404", %"class.std::__1::__compressed_pair.414", %"class.std::__1::__compressed_pair.419", %"class.std::__1::__compressed_pair.422", [4 x i8] }>
%"class.std::__1::unique_ptr.404" = type { %"class.std::__1::__compressed_pair.405" }
%"class.std::__1::__compressed_pair.405" = type { %"struct.std::__1::__compressed_pair_elem.406", %"struct.std::__1::__compressed_pair_elem.408" }
%"struct.std::__1::__compressed_pair_elem.406" = type { %"struct.std::__1::__hash_node_base.407"** }
%"struct.std::__1::__hash_node_base.407" = type { %"struct.std::__1::__hash_node_base.407"* }
%"struct.std::__1::__compressed_pair_elem.408" = type { %"class.std::__1::__bucket_list_deallocator.409" }
%"class.std::__1::__bucket_list_deallocator.409" = type { %"class.std::__1::__compressed_pair.410" }
%"class.std::__1::__compressed_pair.410" = type { %"struct.std::__1::__compressed_pair_elem.8" }
%"class.std::__1::__compressed_pair.414" = type { %"struct.std::__1::__compressed_pair_elem.415" }
%"struct.std::__1::__compressed_pair_elem.415" = type { %"struct.std::__1::__hash_node_base.407" }
%"class.std::__1::__compressed_pair.419" = type { %"struct.std::__1::__compressed_pair_elem.8" }
%"class.std::__1::__compressed_pair.422" = type { %"struct.std::__1::__compressed_pair_elem.18" }
%"class.std::__1::unique_ptr.429" = type { %"class.std::__1::__compressed_pair.430" }
%"class.std::__1::__compressed_pair.430" = type { %"struct.std::__1::__compressed_pair_elem.431" }
%"struct.std::__1::__compressed_pair_elem.431" = type { %"class.v8::internal::GCIdleTimeHandler"* }
%"class.v8::internal::GCIdleTimeHandler" = type opaque
%"class.std::__1::unique_ptr.435" = type { %"class.std::__1::__compressed_pair.436" }
%"class.std::__1::__compressed_pair.436" = type { %"struct.std::__1::__compressed_pair_elem.437" }
%"struct.std::__1::__compressed_pair_elem.437" = type { %"class.v8::internal::MemoryMeasurement"* }
%"class.v8::internal::MemoryMeasurement" = type { %"class.std::__1::list", %"class.std::__1::list", %"class.std::__1::list", %"class.v8::internal::Isolate"*, i8, i8, i8, %"class.v8::base::RandomNumberGenerator" }
%"class.std::__1::list" = type { %"class.std::__1::__list_imp" }
%"class.std::__1::__list_imp" = type { %"struct.std::__1::__list_node_base", %"class.std::__1::__compressed_pair.438" }
%"struct.std::__1::__list_node_base" = type { %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"* }
%"class.std::__1::__compressed_pair.438" = type { %"struct.std::__1::__compressed_pair_elem.8" }
%"class.v8::base::RandomNumberGenerator" = type { i64, i64, i64 }
%"class.std::__1::unique_ptr.445" = type { %"class.std::__1::__compressed_pair.446" }
%"class.std::__1::__compressed_pair.446" = type { %"struct.std::__1::__compressed_pair_elem.447" }
%"struct.std::__1::__compressed_pair_elem.447" = type { %"class.v8::internal::MemoryReducer"* }
%"class.v8::internal::MemoryReducer" = type opaque
%"class.std::__1::unique_ptr.451" = type { %"class.std::__1::__compressed_pair.452" }
%"class.std::__1::__compressed_pair.452" = type { %"struct.std::__1::__compressed_pair_elem.453" }
%"struct.std::__1::__compressed_pair_elem.453" = type { %"class.v8::internal::ObjectStats"* }
%"class.v8::internal::ObjectStats" = type opaque
%"class.std::__1::unique_ptr.457" = type { %"class.std::__1::__compressed_pair.458" }
%"class.std::__1::__compressed_pair.458" = type { %"struct.std::__1::__compressed_pair_elem.459" }
%"struct.std::__1::__compressed_pair_elem.459" = type { %"class.v8::internal::ScavengeJob"* }
%"class.v8::internal::ScavengeJob" = type opaque
%"class.std::__1::unique_ptr.463" = type { %"class.std::__1::__compressed_pair.464" }
%"class.std::__1::__compressed_pair.464" = type { %"struct.std::__1::__compressed_pair_elem.465" }
%"struct.std::__1::__compressed_pair_elem.465" = type { %"class.v8::internal::AllocationObserver"* }
%"class.std::__1::unique_ptr.469" = type { %"class.std::__1::__compressed_pair.470" }
%"class.std::__1::__compressed_pair.470" = type { %"struct.std::__1::__compressed_pair_elem.471" }
%"struct.std::__1::__compressed_pair_elem.471" = type { %"class.v8::internal::LocalEmbedderHeapTracer"* }
%"class.v8::internal::LocalEmbedderHeapTracer" = type opaque
%"class.std::__1::unique_ptr.475" = type { %"class.std::__1::__compressed_pair.476" }
%"class.std::__1::__compressed_pair.476" = type { %"struct.std::__1::__compressed_pair_elem.477" }
%"struct.std::__1::__compressed_pair_elem.477" = type { %"class.v8::internal::MarkingBarrier"* }
%"class.v8::internal::MarkingBarrier" = type opaque
%"class.std::__1::shared_ptr.481" = type { %"class.v8::internal::CodeRange"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::internal::CodeRange" = type { %"class.v8::internal::VirtualMemoryCage", %"struct.std::__1::atomic.500", %"class.v8::base::Mutex" }
%"class.v8::internal::VirtualMemoryCage" = type { i32 (...)**, i64, %"class.std::__1::unique_ptr.482", %"class.v8::internal::VirtualMemory" }
%"struct.std::__1::atomic.500" = type { %"struct.std::__1::__atomic_base.501" }
%"struct.std::__1::__atomic_base.501" = type { %"struct.std::__1::__cxx_atomic_impl.502" }
%"struct.std::__1::__cxx_atomic_impl.502" = type { %"struct.std::__1::__cxx_atomic_base_impl.503" }
%"struct.std::__1::__cxx_atomic_base_impl.503" = type { i8* }
%"class.v8::CppHeap" = type opaque
%"class.v8::EmbedderRootsHandler" = type { i32 (...)** }
%"class.v8::internal::StrongRootsEntry" = type { %"class.v8::internal::FullObjectSlot", %"class.v8::internal::FullObjectSlot", %"class.v8::internal::StrongRootsEntry"*, %"class.v8::internal::StrongRootsEntry"* }
%"class.v8::internal::FullObjectSlot" = type { %"class.v8::internal::SlotBase" }
%"class.v8::internal::SlotBase" = type { i64 }
%"class.std::__1::unordered_map.504" = type { %"class.std::__1::__hash_table.505" }
%"class.std::__1::__hash_table.505" = type <{ %"class.std::__1::unique_ptr.506", %"class.std::__1::__compressed_pair.516", %"class.std::__1::__compressed_pair.521", %"class.std::__1::__compressed_pair.524", [4 x i8] }>
%"class.std::__1::unique_ptr.506" = type { %"class.std::__1::__compressed_pair.507" }
%"class.std::__1::__compressed_pair.507" = type { %"struct.std::__1::__compressed_pair_elem.508", %"struct.std::__1::__compressed_pair_elem.510" }
%"struct.std::__1::__compressed_pair_elem.508" = type { %"struct.std::__1::__hash_node_base.509"** }
%"struct.std::__1::__hash_node_base.509" = type { %"struct.std::__1::__hash_node_base.509"* }
%"struct.std::__1::__compressed_pair_elem.510" = type { %"class.std::__1::__bucket_list_deallocator.511" }
%"class.std::__1::__bucket_list_deallocator.511" = type { %"class.std::__1::__compressed_pair.512" }
%"class.std::__1::__compressed_pair.512" = type { %"struct.std::__1::__compressed_pair_elem.8" }
%"class.std::__1::__compressed_pair.516" = type { %"struct.std::__1::__compressed_pair_elem.517" }
%"struct.std::__1::__compressed_pair_elem.517" = type { %"struct.std::__1::__hash_node_base.509" }
%"class.std::__1::__compressed_pair.521" = type { %"struct.std::__1::__compressed_pair_elem.8" }
%"class.std::__1::__compressed_pair.524" = type { %"struct.std::__1::__compressed_pair_elem.18" }
%"class.std::__1::unique_ptr.530" = type { %"class.std::__1::__compressed_pair.531" }
%"class.std::__1::__compressed_pair.531" = type { %"struct.std::__1::__compressed_pair_elem.532" }
%"struct.std::__1::__compressed_pair_elem.532" = type { %"class.v8::internal::GlobalHandleVector"* }
%"class.v8::internal::GlobalHandleVector" = type opaque
%"class.std::__1::unique_ptr.536" = type { %"class.std::__1::__compressed_pair.537" }
%"class.std::__1::__compressed_pair.537" = type { %"struct.std::__1::__compressed_pair_elem.538" }
%"struct.std::__1::__compressed_pair_elem.538" = type { %"class.v8::internal::GlobalSafepoint"* }
%"class.v8::internal::GlobalSafepoint" = type opaque
%"class.v8::internal::Heap::ExternalStringTable" = type { %"class.v8::internal::Heap"*, %"class.std::__1::vector.542", %"class.std::__1::vector.542" }
%"class.std::__1::unique_ptr.549" = type { %"class.std::__1::__compressed_pair.550" }
%"class.std::__1::__compressed_pair.550" = type { %"struct.std::__1::__compressed_pair_elem.551" }
%"struct.std::__1::__compressed_pair_elem.551" = type { %"class.v8::internal::CollectionBarrier"* }
%"class.v8::internal::CollectionBarrier" = type opaque
%"class.std::__1::unordered_set.331" = type { %"class.std::__1::__hash_table.332" }
%"class.std::__1::__hash_table.332" = type <{ %"class.std::__1::unique_ptr.333", %"class.std::__1::__compressed_pair.343", %"class.std::__1::__compressed_pair.348", %"class.std::__1::__compressed_pair.352", [4 x i8] }>
%"class.std::__1::unique_ptr.333" = type { %"class.std::__1::__compressed_pair.334" }
%"class.std::__1::__compressed_pair.334" = type { %"struct.std::__1::__compressed_pair_elem.335", %"struct.std::__1::__compressed_pair_elem.337" }
%"struct.std::__1::__compressed_pair_elem.335" = type { %"struct.std::__1::__hash_node_base.336"** }
%"struct.std::__1::__hash_node_base.336" = type { %"struct.std::__1::__hash_node_base.336"* }
%"struct.std::__1::__compressed_pair_elem.337" = type { %"class.std::__1::__bucket_list_deallocator.338" }
%"class.std::__1::__bucket_list_deallocator.338" = type { %"class.std::__1::__compressed_pair.339" }
%"class.std::__1::__compressed_pair.339" = type { %"struct.std::__1::__compressed_pair_elem.8" }
%"class.std::__1::__compressed_pair.343" = type { %"struct.std::__1::__compressed_pair_elem.344" }
%"struct.std::__1::__compressed_pair_elem.344" = type { %"struct.std::__1::__hash_node_base.336" }
%"class.std::__1::__compressed_pair.348" = type { %"struct.std::__1::__compressed_pair_elem.8" }
%"class.std::__1::__compressed_pair.352" = type { %"struct.std::__1::__compressed_pair_elem.18" }
%"class.std::__1::unordered_map.581" = type { %"class.std::__1::__hash_table.582" }
%"class.std::__1::__hash_table.582" = type <{ %"class.std::__1::unique_ptr.583", %"class.std::__1::__compressed_pair.593", %"class.std::__1::__compressed_pair.598", %"class.std::__1::__compressed_pair.601", [4 x i8] }>
%"class.std::__1::unique_ptr.583" = type { %"class.std::__1::__compressed_pair.584" }
%"class.std::__1::__compressed_pair.584" = type { %"struct.std::__1::__compressed_pair_elem.585", %"struct.std::__1::__compressed_pair_elem.587" }
%"struct.std::__1::__compressed_pair_elem.585" = type { %"struct.std::__1::__hash_node_base.586"** }
%"struct.std::__1::__hash_node_base.586" = type { %"struct.std::__1::__hash_node_base.586"* }
%"struct.std::__1::__compressed_pair_elem.587" = type { %"class.std::__1::__bucket_list_deallocator.588" }
%"class.std::__1::__bucket_list_deallocator.588" = type { %"class.std::__1::__compressed_pair.589" }
%"class.std::__1::__compressed_pair.589" = type { %"struct.std::__1::__compressed_pair_elem.8" }
%"class.std::__1::__compressed_pair.593" = type { %"struct.std::__1::__compressed_pair_elem.594" }
%"struct.std::__1::__compressed_pair_elem.594" = type { %"struct.std::__1::__hash_node_base.586" }
%"class.std::__1::__compressed_pair.598" = type { %"struct.std::__1::__compressed_pair_elem.8" }
%"class.std::__1::__compressed_pair.601" = type { %"struct.std::__1::__compressed_pair_elem.18" }
%"class.std::__1::unordered_map.555" = type { %"class.std::__1::__hash_table.556" }
%"class.std::__1::__hash_table.556" = type <{ %"class.std::__1::unique_ptr.557", %"class.std::__1::__compressed_pair.567", %"class.std::__1::__compressed_pair.572", %"class.std::__1::__compressed_pair.575", [4 x i8] }>
%"class.std::__1::unique_ptr.557" = type { %"class.std::__1::__compressed_pair.558" }
%"class.std::__1::__compressed_pair.558" = type { %"struct.std::__1::__compressed_pair_elem.559", %"struct.std::__1::__compressed_pair_elem.561" }
%"struct.std::__1::__compressed_pair_elem.559" = type { %"struct.std::__1::__hash_node_base.560"** }
%"struct.std::__1::__hash_node_base.560" = type { %"struct.std::__1::__hash_node_base.560"* }
%"struct.std::__1::__compressed_pair_elem.561" = type { %"class.std::__1::__bucket_list_deallocator.562" }
%"class.std::__1::__bucket_list_deallocator.562" = type { %"class.std::__1::__compressed_pair.563" }
%"class.std::__1::__compressed_pair.563" = type { %"struct.std::__1::__compressed_pair_elem.8" }
%"class.std::__1::__compressed_pair.567" = type { %"struct.std::__1::__compressed_pair_elem.568" }
%"struct.std::__1::__compressed_pair_elem.568" = type { %"struct.std::__1::__hash_node_base.560" }
%"class.std::__1::__compressed_pair.572" = type { %"struct.std::__1::__compressed_pair_elem.8" }
%"class.std::__1::__compressed_pair.575" = type { %"struct.std::__1::__compressed_pair_elem.18" }
%"class.std::__1::unordered_map.605" = type { %"class.std::__1::__hash_table.606" }
%"class.std::__1::__hash_table.606" = type <{ %"class.std::__1::unique_ptr.607", %"class.std::__1::__compressed_pair.617", %"class.std::__1::__compressed_pair.622", %"class.std::__1::__compressed_pair.627", [4 x i8] }>
%"class.std::__1::unique_ptr.607" = type { %"class.std::__1::__compressed_pair.608" }
%"class.std::__1::__compressed_pair.608" = type { %"struct.std::__1::__compressed_pair_elem.609", %"struct.std::__1::__compressed_pair_elem.611" }
%"struct.std::__1::__compressed_pair_elem.609" = type { %"struct.std::__1::__hash_node_base.610"** }
%"struct.std::__1::__hash_node_base.610" = type { %"struct.std::__1::__hash_node_base.610"* }
%"struct.std::__1::__compressed_pair_elem.611" = type { %"class.std::__1::__bucket_list_deallocator.612" }
%"class.std::__1::__bucket_list_deallocator.612" = type { %"class.std::__1::__compressed_pair.613" }
%"class.std::__1::__compressed_pair.613" = type { %"struct.std::__1::__compressed_pair_elem.8" }
%"class.std::__1::__compressed_pair.617" = type { %"struct.std::__1::__compressed_pair_elem.618" }
%"struct.std::__1::__compressed_pair_elem.618" = type { %"struct.std::__1::__hash_node_base.610" }
%"class.std::__1::__compressed_pair.622" = type { %"struct.std::__1::__compressed_pair_elem.8" }
%"class.std::__1::__compressed_pair.627" = type { %"struct.std::__1::__compressed_pair_elem.18" }
%"class.std::__1::vector.633" = type { %"class.std::__1::__vector_base.634" }
%"class.std::__1::__vector_base.634" = type { %"class.v8::internal::HeapObjectAllocationTracker"**, %"class.v8::internal::HeapObjectAllocationTracker"**, %"class.std::__1::__compressed_pair.635" }
%"class.v8::internal::HeapObjectAllocationTracker" = type { i32 (...)** }
%"class.std::__1::__compressed_pair.635" = type { %"struct.std::__1::__compressed_pair_elem.636" }
%"struct.std::__1::__compressed_pair_elem.636" = type { %"class.v8::internal::HeapObjectAllocationTracker"** }
%"class.std::__1::unique_ptr.640" = type { %"class.std::__1::__compressed_pair.641" }
%"class.std::__1::__compressed_pair.641" = type { %"struct.std::__1::__compressed_pair_elem.642" }
%"struct.std::__1::__compressed_pair_elem.642" = type { %"class.v8::internal::third_party_heap::Heap"* }
%"class.v8::internal::third_party_heap::Heap" = type { i8 }
%"class.v8::internal::ReadOnlyHeap" = type { i32 (...)**, i8, %"class.v8::internal::ReadOnlySpace"*, %"class.std::__1::vector.542" }
%"class.std::__1::shared_ptr.646" = type { %"class.v8::internal::ReadOnlyArtifacts"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::internal::ReadOnlyArtifacts" = type { i32 (...)**, %"class.std::__1::vector.140", %"class.v8::internal::AllocationStats", %"class.std::__1::unique_ptr.647", %"class.std::__1::unique_ptr.661" }
%"class.std::__1::unique_ptr.647" = type { %"class.std::__1::__compressed_pair.648" }
%"class.std::__1::__compressed_pair.648" = type { %"struct.std::__1::__compressed_pair_elem.649" }
%"struct.std::__1::__compressed_pair_elem.649" = type { %"class.v8::internal::SharedReadOnlySpace"* }
%"class.v8::internal::SharedReadOnlySpace" = type { %"class.v8::internal::ReadOnlySpace", %"class.std::__1::vector.650" }
%"class.std::__1::vector.650" = type { %"class.std::__1::__vector_base.651" }
%"class.std::__1::__vector_base.651" = type { %"class.std::__1::unique_ptr.652"*, %"class.std::__1::unique_ptr.652"*, %"class.std::__1::__compressed_pair.653" }
%"class.std::__1::unique_ptr.652" = type { %"class.std::__1::__compressed_pair.1157" }
%"class.std::__1::__compressed_pair.1157" = type { %"struct.std::__1::__compressed_pair_elem.1158" }
%"struct.std::__1::__compressed_pair_elem.1158" = type { %"class.v8::PageAllocator::SharedMemoryMapping"* }
%"class.v8::PageAllocator::SharedMemoryMapping" = type { i32 (...)** }
%"class.std::__1::__compressed_pair.653" = type { %"struct.std::__1::__compressed_pair_elem.654" }
%"struct.std::__1::__compressed_pair_elem.654" = type { %"class.std::__1::unique_ptr.652"* }
%"class.std::__1::unique_ptr.661" = type { %"class.std::__1::__compressed_pair.662" }
%"class.std::__1::__compressed_pair.662" = type { %"struct.std::__1::__compressed_pair_elem.663" }
%"struct.std::__1::__compressed_pair_elem.663" = type { %"class.v8::internal::ReadOnlyHeap"* }
%"class.std::__1::unique_ptr.667" = type { %"class.std::__1::__compressed_pair.668" }
%"class.std::__1::__compressed_pair.668" = type { %"struct.std::__1::__compressed_pair_elem.669" }
%"struct.std::__1::__compressed_pair_elem.669" = type { %"class.v8::internal::StringTable"* }
%"class.v8::internal::StringTable" = type { %"struct.std::__1::atomic.670", %"class.v8::base::Mutex" }
%"struct.std::__1::atomic.670" = type { %"struct.std::__1::__atomic_base.671" }
%"struct.std::__1::__atomic_base.671" = type { %"struct.std::__1::__cxx_atomic_impl.672" }
%"struct.std::__1::__cxx_atomic_impl.672" = type { %"struct.std::__1::__cxx_atomic_base_impl.673" }
%"struct.std::__1::__cxx_atomic_base_impl.673" = type { %"class.v8::internal::StringTable::Data"* }
%"class.v8::internal::StringTable::Data" = type opaque
%"class.v8::internal::Isolate::EntryStackItem" = type { i32, %"class.v8::internal::Isolate::PerIsolateThreadData"*, %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate::EntryStackItem"* }
%"class.v8::internal::Isolate::PerIsolateThreadData" = type { %"class.v8::internal::Isolate"*, %"class.v8::internal::ThreadId", i64, %"class.v8::internal::ThreadState"* }
%"class.v8::internal::ThreadState" = type opaque
%"class.v8::internal::StringStream" = type opaque
%"class.v8::internal::Bootstrapper" = type { %"class.v8::internal::Isolate"*, i32, %"class.v8::internal::SourceCodeCache" }
%"class.v8::internal::SourceCodeCache" = type { i32, %"class.v8::internal::FixedArray" }
%"class.v8::internal::FixedArray" = type { %"class.v8::internal::TorqueGeneratedFixedArray" }
%"class.v8::internal::TorqueGeneratedFixedArray" = type { %"class.v8::internal::FixedArrayBase" }
%"class.v8::internal::FixedArrayBase" = type { %"class.v8::internal::TorqueGeneratedFixedArrayBase" }
%"class.v8::internal::TorqueGeneratedFixedArrayBase" = type { %"class.v8::internal::HeapObject" }
%"class.v8::internal::RuntimeProfiler" = type opaque
%"class.v8::internal::CompilationCache" = type opaque
%"class.std::__1::shared_ptr.677" = type { %"class.v8::internal::Counters"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::internal::Counters" = type { %"class.std::__1::enable_shared_from_this", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::AggregatableHistogramTimer", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounterThreadSafe", %"class.v8::internal::StatsCounterThreadSafe", %"class.v8::internal::StatsCounterThreadSafe", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::RuntimeCallStats", %"class.v8::internal::WorkerThreadRuntimeCallStats", %"class.v8::internal::Isolate"*, %"class.v8::internal::StatsTable" }
%"class.std::__1::enable_shared_from_this" = type { %"class.std::__1::weak_ptr" }
%"class.std::__1::weak_ptr" = type { %"class.v8::internal::Counters"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::internal::HistogramTimer" = type { %"class.v8::internal::TimedHistogram.base", %"class.v8::base::ElapsedTimer" }
%"class.v8::internal::TimedHistogram.base" = type <{ %"class.v8::internal::Histogram", i32 }>
%"class.v8::base::ElapsedTimer" = type { %"class.v8::base::TimeTicks" }
%"class.v8::base::TimeTicks" = type { %"class.v8::base::time_internal::TimeBase" }
%"class.v8::base::time_internal::TimeBase" = type { i64 }
%"class.v8::internal::TimedHistogram" = type <{ %"class.v8::internal::Histogram", i32, [4 x i8] }>
%"class.v8::internal::AggregatableHistogramTimer" = type { %"class.v8::internal::Histogram", %"class.v8::base::TimeDelta" }
%"class.v8::base::TimeDelta" = type { i64 }
%"class.v8::internal::Histogram" = type { i8*, i32, i32, i32, i8*, %"class.v8::internal::Counters"* }
%"class.v8::internal::StatsCounterThreadSafe" = type { %"class.v8::internal::StatsCounterBase", %"class.v8::base::Mutex" }
%"class.v8::internal::StatsCounterBase" = type { %"class.v8::internal::Counters"*, i8*, i32* }
%"class.v8::internal::StatsCounter" = type <{ %"class.v8::internal::StatsCounterBase", i8, [7 x i8] }>
%"class.v8::internal::RuntimeCallStats" = type { %"class.v8::base::AtomicValue", %"class.v8::base::AtomicValue.678", i8, i32, %"class.v8::internal::ThreadId", [1370 x %"class.v8::internal::RuntimeCallCounter"] }
%"class.v8::base::AtomicValue" = type { i64 }
%"class.v8::base::AtomicValue.678" = type { i64 }
%"class.v8::internal::RuntimeCallCounter" = type { i8*, i64, i64 }
%"class.v8::internal::WorkerThreadRuntimeCallStats" = type <{ %"class.v8::base::Mutex", %"class.std::__1::vector.679", %"class.v8::base::Optional", %"class.v8::internal::ThreadId", [4 x i8] }>
%"class.std::__1::vector.679" = type { %"class.std::__1::__vector_base.680" }
%"class.std::__1::__vector_base.680" = type { %"class.std::__1::unique_ptr.681"*, %"class.std::__1::unique_ptr.681"*, %"class.std::__1::__compressed_pair.682" }
%"class.std::__1::unique_ptr.681" = type opaque
%"class.std::__1::__compressed_pair.682" = type { %"struct.std::__1::__compressed_pair_elem.683" }
%"struct.std::__1::__compressed_pair_elem.683" = type { %"class.std::__1::unique_ptr.681"* }
%"class.v8::base::Optional" = type { %"class.v8::base::internal::OptionalBase" }
%"class.v8::base::internal::OptionalBase" = type { %"struct.v8::base::internal::OptionalStorage" }
%"struct.v8::base::internal::OptionalStorage" = type { %"struct.v8::base::internal::OptionalStorageBase" }
%"struct.v8::base::internal::OptionalStorageBase" = type { i8, %union.anon.687 }
%union.anon.687 = type { i32 }
%"class.v8::internal::StatsTable" = type { i32* (i8*)*, i8* (i8*, i32, i32, i64)*, void (i8*, i32)* }
%"class.v8::base::RecursiveMutex" = type { %union.pthread_mutex_t }
%"class.v8::base::SharedMutex" = type { %union.pthread_rwlock_t }
%union.pthread_rwlock_t = type { %struct.__pthread_rwlock_arch_t }
%struct.__pthread_rwlock_arch_t = type { i32, i32, i32, i32, i32, i32, i32, i32, i8, [7 x i8], i64, i32 }
%"class.v8::internal::Logger" = type { %"class.v8::internal::CodeEventListener", %"class.v8::internal::Isolate"*, %"class.std::__1::unique_ptr.688", %"class.std::__1::unique_ptr.694", %"struct.std::__1::atomic.153", %"class.std::__1::unique_ptr.700", %"class.std::__1::unique_ptr.706", %"class.std::__1::unique_ptr.712", %"class.std::__1::unique_ptr.718", %"class.std::__1::unique_ptr.724", %"class.std::__1::set.730", i32, i8, %"class.v8::internal::ExistingCodeLogger", %"class.v8::base::ElapsedTimer" }
%"class.v8::internal::CodeEventListener" = type { i32 (...)** }
%"class.std::__1::unique_ptr.688" = type { %"class.std::__1::__compressed_pair.689" }
%"class.std::__1::__compressed_pair.689" = type { %"struct.std::__1::__compressed_pair_elem.690" }
%"struct.std::__1::__compressed_pair_elem.690" = type { %"class.v8::internal::Ticker"* }
%"class.v8::internal::Ticker" = type opaque
%"class.std::__1::unique_ptr.694" = type { %"class.std::__1::__compressed_pair.695" }
%"class.std::__1::__compressed_pair.695" = type { %"struct.std::__1::__compressed_pair_elem.696" }
%"struct.std::__1::__compressed_pair_elem.696" = type { %"class.v8::internal::Profiler"* }
%"class.v8::internal::Profiler" = type opaque
%"class.std::__1::unique_ptr.700" = type { %"class.std::__1::__compressed_pair.701" }
%"class.std::__1::__compressed_pair.701" = type { %"struct.std::__1::__compressed_pair_elem.702" }
%"struct.std::__1::__compressed_pair_elem.702" = type { %"class.v8::internal::Log"* }
%"class.v8::internal::Log" = type opaque
%"class.std::__1::unique_ptr.706" = type { %"class.std::__1::__compressed_pair.707" }
%"class.std::__1::__compressed_pair.707" = type { %"struct.std::__1::__compressed_pair_elem.708" }
%"struct.std::__1::__compressed_pair_elem.708" = type { %"class.v8::internal::PerfBasicLogger"* }
%"class.v8::internal::PerfBasicLogger" = type opaque
%"class.std::__1::unique_ptr.712" = type { %"class.std::__1::__compressed_pair.713" }
%"class.std::__1::__compressed_pair.713" = type { %"struct.std::__1::__compressed_pair_elem.714" }
%"struct.std::__1::__compressed_pair_elem.714" = type { %"class.v8::internal::PerfJitLogger"* }
%"class.v8::internal::PerfJitLogger" = type opaque
%"class.std::__1::unique_ptr.718" = type { %"class.std::__1::__compressed_pair.719" }
%"class.std::__1::__compressed_pair.719" = type { %"struct.std::__1::__compressed_pair_elem.720" }
%"struct.std::__1::__compressed_pair_elem.720" = type { %"class.v8::internal::LowLevelLogger"* }
%"class.v8::internal::LowLevelLogger" = type opaque
%"class.std::__1::unique_ptr.724" = type { %"class.std::__1::__compressed_pair.725" }
%"class.std::__1::__compressed_pair.725" = type { %"struct.std::__1::__compressed_pair_elem.726" }
%"struct.std::__1::__compressed_pair_elem.726" = type { %"class.v8::internal::JitLogger"* }
%"class.v8::internal::JitLogger" = type opaque
%"class.std::__1::set.730" = type { %"class.std::__1::__tree.731" }
%"class.std::__1::__tree.731" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.732", %"class.std::__1::__compressed_pair.736" }
%"class.std::__1::__compressed_pair.732" = type { %"struct.std::__1::__compressed_pair_elem.81" }
%"class.std::__1::__compressed_pair.736" = type { %"struct.std::__1::__compressed_pair_elem.8" }
%"class.v8::internal::ExistingCodeLogger" = type { %"class.v8::internal::Isolate"*, %"class.v8::internal::CodeEventListener"* }
%"class.v8::internal::StubCache" = type { [2048 x %"struct.v8::internal::StubCache::Entry"], [512 x %"struct.v8::internal::StubCache::Entry"], %"class.v8::internal::Isolate"* }
%"struct.v8::internal::StubCache::Entry" = type { %"class.v8::internal::StrongTaggedValue", %"class.v8::internal::TaggedValue", %"class.v8::internal::StrongTaggedValue" }
%"class.v8::internal::TaggedValue" = type { %"class.v8::internal::TaggedImpl.739" }
%"class.v8::internal::TaggedImpl.739" = type { i32 }
%"class.v8::internal::StrongTaggedValue" = type { %"class.v8::internal::TaggedImpl.738" }
%"class.v8::internal::TaggedImpl.738" = type { i32 }
%"class.v8::internal::Deoptimizer" = type opaque
%"class.v8::internal::MaterializedObjectStore" = type opaque
%"class.v8::internal::DescriptorLookupCache" = type { [64 x %"struct.v8::internal::DescriptorLookupCache::Key"], [64 x i32] }
%"struct.v8::internal::DescriptorLookupCache::Key" = type { %"class.v8::internal::Map", %"class.v8::internal::Name" }
%"class.v8::internal::Map" = type { %"class.v8::internal::HeapObject" }
%"class.v8::internal::Name" = type { %"class.v8::internal::TorqueGeneratedName" }
%"class.v8::internal::TorqueGeneratedName" = type { %"class.v8::internal::PrimitiveHeapObject" }
%"class.v8::internal::PrimitiveHeapObject" = type { %"class.v8::internal::TorqueGeneratedPrimitiveHeapObject" }
%"class.v8::internal::TorqueGeneratedPrimitiveHeapObject" = type { %"class.v8::internal::HeapObject" }
%"struct.v8::internal::HandleScopeData" = type { i64*, i64*, i32, i32, %"class.v8::internal::CanonicalHandleScope"* }
%"class.v8::internal::CanonicalHandleScope" = type { %"class.v8::internal::Isolate"*, %"class.v8::internal::OptimizedCompilationInfo"*, %"class.v8::internal::Zone"*, %"class.v8::internal::RootIndexMap"*, %"class.std::__1::unique_ptr.746", i32, %"class.v8::internal::CanonicalHandleScope"* }
%"class.v8::internal::OptimizedCompilationInfo" = type opaque
%"class.v8::internal::RootIndexMap" = type opaque
%"class.std::__1::unique_ptr.746" = type { %"class.std::__1::__compressed_pair.747" }
%"class.std::__1::__compressed_pair.747" = type { %"struct.std::__1::__compressed_pair_elem.748" }
%"struct.std::__1::__compressed_pair_elem.748" = type { %"class.v8::internal::IdentityMap"* }
%"class.v8::internal::IdentityMap" = type opaque
%"class.v8::internal::HandleScopeImplementer" = type { %"class.v8::internal::Isolate"*, %"class.v8::internal::DetachableVector", %"class.v8::internal::DetachableVector.752", %"class.v8::internal::DetachableVector.753", %"class.v8::internal::DetachableVector.752", i64*, i64*, %"struct.v8::internal::HandleScopeData" }
%"class.v8::internal::DetachableVector" = type { %"class.v8::internal::DetachableVectorBase" }
%"class.v8::internal::DetachableVectorBase" = type { i8*, i64, i64 }
%"class.v8::internal::DetachableVector.753" = type { %"class.v8::internal::DetachableVectorBase" }
%"class.v8::internal::DetachableVector.752" = type { %"class.v8::internal::DetachableVectorBase" }
%"class.v8::internal::UnicodeCache" = type opaque
%"class.v8::internal::InnerPointerToCodeCache" = type opaque
%"class.v8::internal::GlobalHandles" = type { %"class.v8::internal::Isolate"*, %"class.std::__1::unique_ptr.754", %"class.std::__1::vector.760", %"class.std::__1::unique_ptr.767", %"class.std::__1::vector.774", %"class.std::__1::unique_ptr.781", i64, %"class.std::__1::vector.787", %"class.std::__1::vector.795", %"class.std::__1::vector.803", i8, i8, i32 }
%"class.std::__1::unique_ptr.754" = type { %"class.std::__1::__compressed_pair.755" }
%"class.std::__1::__compressed_pair.755" = type { %"struct.std::__1::__compressed_pair_elem.756" }
%"struct.std::__1::__compressed_pair_elem.756" = type { %"class.v8::internal::GlobalHandles::NodeSpace"* }
%"class.v8::internal::GlobalHandles::NodeSpace" = type opaque
%"class.std::__1::vector.760" = type { %"class.std::__1::__vector_base.761" }
%"class.std::__1::__vector_base.761" = type { %"class.v8::internal::GlobalHandles::Node"**, %"class.v8::internal::GlobalHandles::Node"**, %"class.std::__1::__compressed_pair.762" }
%"class.v8::internal::GlobalHandles::Node" = type opaque
%"class.std::__1::__compressed_pair.762" = type { %"struct.std::__1::__compressed_pair_elem.763" }
%"struct.std::__1::__compressed_pair_elem.763" = type { %"class.v8::internal::GlobalHandles::Node"** }
%"class.std::__1::unique_ptr.767" = type { %"class.std::__1::__compressed_pair.768" }
%"class.std::__1::__compressed_pair.768" = type { %"struct.std::__1::__compressed_pair_elem.769" }
%"struct.std::__1::__compressed_pair_elem.769" = type { %"class.v8::internal::GlobalHandles::NodeSpace.770"* }
%"class.v8::internal::GlobalHandles::NodeSpace.770" = type opaque
%"class.std::__1::vector.774" = type { %"class.std::__1::__vector_base.775" }
%"class.std::__1::__vector_base.775" = type { %"class.v8::internal::GlobalHandles::TracedNode"**, %"class.v8::internal::GlobalHandles::TracedNode"**, %"class.std::__1::__compressed_pair.776" }
%"class.v8::internal::GlobalHandles::TracedNode" = type opaque
%"class.std::__1::__compressed_pair.776" = type { %"struct.std::__1::__compressed_pair_elem.777" }
%"struct.std::__1::__compressed_pair_elem.777" = type { %"class.v8::internal::GlobalHandles::TracedNode"** }
%"class.std::__1::unique_ptr.781" = type { %"class.std::__1::__compressed_pair.782" }
%"class.std::__1::__compressed_pair.782" = type { %"struct.std::__1::__compressed_pair_elem.783" }
%"struct.std::__1::__compressed_pair_elem.783" = type { %"class.v8::internal::GlobalHandles::OnStackTracedNodeSpace"* }
%"class.v8::internal::GlobalHandles::OnStackTracedNodeSpace" = type opaque
%"class.std::__1::vector.787" = type { %"class.std::__1::__vector_base.788" }
%"class.std::__1::__vector_base.788" = type { %"struct.std::__1::pair.789"*, %"struct.std::__1::pair.789"*, %"class.std::__1::__compressed_pair.790" }
%"struct.std::__1::pair.789" = type opaque
%"class.std::__1::__compressed_pair.790" = type { %"struct.std::__1::__compressed_pair_elem.791" }
%"struct.std::__1::__compressed_pair_elem.791" = type { %"struct.std::__1::pair.789"* }
%"class.std::__1::vector.795" = type { %"class.std::__1::__vector_base.796" }
%"class.std::__1::__vector_base.796" = type { %"struct.std::__1::pair.797"*, %"struct.std::__1::pair.797"*, %"class.std::__1::__compressed_pair.798" }
%"struct.std::__1::pair.797" = type opaque
%"class.std::__1::__compressed_pair.798" = type { %"struct.std::__1::__compressed_pair_elem.799" }
%"struct.std::__1::__compressed_pair_elem.799" = type { %"struct.std::__1::pair.797"* }
%"class.std::__1::vector.803" = type { %"class.std::__1::__vector_base.804" }
%"class.std::__1::__vector_base.804" = type { %"class.v8::internal::GlobalHandles::PendingPhantomCallback"*, %"class.v8::internal::GlobalHandles::PendingPhantomCallback"*, %"class.std::__1::__compressed_pair.805" }
%"class.v8::internal::GlobalHandles::PendingPhantomCallback" = type { void (%"class.v8::WeakCallbackInfo"*)*, i8*, [2 x i8*] }
%"class.v8::WeakCallbackInfo" = type { %"class.v8::Isolate"*, i8*, {}**, [2 x i8*] }
%"class.std::__1::__compressed_pair.805" = type { %"struct.std::__1::__compressed_pair_elem.806" }
%"struct.std::__1::__compressed_pair_elem.806" = type { %"class.v8::internal::GlobalHandles::PendingPhantomCallback"* }
%"class.v8::internal::EternalHandles" = type { i32, %"class.std::__1::vector.810", %"class.std::__1::vector.817" }
%"class.v8::internal::ThreadManager" = type opaque
%"class.v8::bigint::Processor" = type opaque
%"class.v8::internal::RuntimeState" = type { %"class.std::__1::unique_ptr.824" }
%"class.std::__1::unique_ptr.824" = type { %"class.std::__1::__compressed_pair.825" }
%"class.std::__1::__compressed_pair.825" = type { %"struct.std::__1::__compressed_pair_elem.826" }
%"struct.std::__1::__compressed_pair_elem.826" = type { %"struct.v8::internal::Runtime::Function"* }
%"struct.v8::internal::Runtime::Function" = type { i32, i32, i8*, i64, i8, i8 }
%"class.v8::internal::Builtins" = type { %"class.v8::internal::Isolate"*, i8, i32 }
%"class.v8::internal::SetupIsolateDelegate" = type opaque
%"class.v8::internal::RegExpStack" = type opaque
%"class.std::__1::vector.817" = type { %"class.std::__1::__vector_base.818" }
%"class.std::__1::__vector_base.818" = type { i32*, i32*, %"class.std::__1::__compressed_pair.819" }
%"class.std::__1::__compressed_pair.819" = type { %"struct.std::__1::__compressed_pair_elem.820" }
%"struct.std::__1::__compressed_pair_elem.820" = type { i32* }
%"class.v8::internal::DateCache" = type opaque
%"struct.std::__1::atomic.830" = type { %"struct.std::__1::__atomic_base.831" }
%"struct.std::__1::__atomic_base.831" = type { %"struct.std::__1::__cxx_atomic_impl.832" }
%"struct.std::__1::__cxx_atomic_impl.832" = type { %"struct.std::__1::__cxx_atomic_base_impl.833" }
%"struct.std::__1::__cxx_atomic_base_impl.833" = type { i32 }
%"class.v8::Promise" = type { i8 }
%"struct.std::__1::atomic.840" = type { %"struct.std::__1::__atomic_base.841" }
%"struct.std::__1::__atomic_base.841" = type { %"struct.std::__1::__cxx_atomic_impl.842" }
%"struct.std::__1::__cxx_atomic_impl.842" = type { %"struct.std::__1::__cxx_atomic_base_impl.843" }
%"struct.std::__1::__cxx_atomic_base_impl.843" = type { i32 }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.845" }
%"class.std::__1::__compressed_pair.845" = type { %"struct.std::__1::__compressed_pair_elem.846" }
%"struct.std::__1::__compressed_pair_elem.846" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon.847 }
%union.anon.847 = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::unordered_map.851" = type { %"class.std::__1::__hash_table.852" }
%"class.std::__1::__hash_table.852" = type <{ %"class.std::__1::unique_ptr.853", %"class.std::__1::__compressed_pair.863", %"class.std::__1::__compressed_pair.868", %"class.std::__1::__compressed_pair.871", [4 x i8] }>
%"class.std::__1::unique_ptr.853" = type { %"class.std::__1::__compressed_pair.854" }
%"class.std::__1::__compressed_pair.854" = type { %"struct.std::__1::__compressed_pair_elem.855", %"struct.std::__1::__compressed_pair_elem.857" }
%"struct.std::__1::__compressed_pair_elem.855" = type { %"struct.std::__1::__hash_node_base.856"** }
%"struct.std::__1::__hash_node_base.856" = type { %"struct.std::__1::__hash_node_base.856"* }
%"struct.std::__1::__compressed_pair_elem.857" = type { %"class.std::__1::__bucket_list_deallocator.858" }
%"class.std::__1::__bucket_list_deallocator.858" = type { %"class.std::__1::__compressed_pair.859" }
%"class.std::__1::__compressed_pair.859" = type { %"struct.std::__1::__compressed_pair_elem.8" }
%"class.std::__1::__compressed_pair.863" = type { %"struct.std::__1::__compressed_pair_elem.864" }
%"struct.std::__1::__compressed_pair_elem.864" = type { %"struct.std::__1::__hash_node_base.856" }
%"class.std::__1::__compressed_pair.868" = type { %"struct.std::__1::__compressed_pair_elem.8" }
%"class.std::__1::__compressed_pair.871" = type { %"struct.std::__1::__compressed_pair_elem.18" }
%"struct.std::__1::atomic.153" = type { %"struct.std::__1::__atomic_base.154" }
%"struct.std::__1::__atomic_base.154" = type { %"struct.std::__1::__cxx_atomic_impl.155" }
%"struct.std::__1::__cxx_atomic_impl.155" = type { %"struct.std::__1::__cxx_atomic_base_impl.156" }
%"struct.std::__1::__cxx_atomic_base_impl.156" = type { i8 }
%"class.v8::internal::Debug" = type { %"class.v8::debug::DebugDelegate"*, i8, i8, i8, i8, i8, i8, i8, i8, i8, %"class.v8::internal::DebugInfoListNode"*, %"class.std::__1::unique_ptr.877", %"class.v8::internal::Handle.883", %"class.v8::internal::DebugFeatureTracker", %"class.v8::internal::Debug::ThreadLocal", %"class.v8::internal::Handle.884", %"class.v8::internal::Isolate"* }
%"class.v8::debug::DebugDelegate" = type { i32 (...)** }
%"class.v8::internal::DebugInfoListNode" = type { i64*, %"class.v8::internal::DebugInfoListNode"* }
%"class.std::__1::unique_ptr.877" = type { %"class.std::__1::__compressed_pair.878" }
%"class.std::__1::__compressed_pair.878" = type { %"struct.std::__1::__compressed_pair_elem.879" }
%"struct.std::__1::__compressed_pair_elem.879" = type { %"class.v8::internal::Debug::TemporaryObjectsTracker"* }
%"class.v8::internal::Debug::TemporaryObjectsTracker" = type opaque
%"class.v8::internal::Handle.883" = type { %"class.v8::internal::HandleBase" }
%"class.v8::internal::DebugFeatureTracker" = type <{ %"class.v8::internal::Isolate"*, i32, [4 x i8] }>
%"class.v8::internal::Debug::ThreadLocal" = type <{ i64, i32, i8, [3 x i8], %"class.v8::internal::Object", i8, [3 x i8], i32, i32, i32, %"class.v8::internal::Object", %"class.v8::internal::Object", i32, i8, [3 x i8] }>
%"class.v8::internal::Handle.884" = type { %"class.v8::internal::HandleBase" }
%"class.v8::internal::HeapProfiler" = type { %"class.v8::internal::HeapObjectAllocationTracker", %"class.std::__1::unique_ptr.885", %"class.std::__1::vector.891", %"class.std::__1::unique_ptr.899", %"class.std::__1::unique_ptr.905", i8, i8, %"class.v8::base::Mutex", %"class.std::__1::unique_ptr.911", %"class.std::__1::vector.917", %"struct.std::__1::pair.925" }
%"class.std::__1::unique_ptr.885" = type { %"class.std::__1::__compressed_pair.886" }
%"class.std::__1::__compressed_pair.886" = type { %"struct.std::__1::__compressed_pair_elem.887" }
%"struct.std::__1::__compressed_pair_elem.887" = type { %"class.v8::internal::HeapObjectsMap"* }
%"class.v8::internal::HeapObjectsMap" = type opaque
%"class.std::__1::vector.891" = type { %"class.std::__1::__vector_base.892" }
%"class.std::__1::__vector_base.892" = type { %"class.std::__1::unique_ptr.893"*, %"class.std::__1::unique_ptr.893"*, %"class.std::__1::__compressed_pair.894" }
%"class.std::__1::unique_ptr.893" = type opaque
%"class.std::__1::__compressed_pair.894" = type { %"struct.std::__1::__compressed_pair_elem.895" }
%"struct.std::__1::__compressed_pair_elem.895" = type { %"class.std::__1::unique_ptr.893"* }
%"class.std::__1::unique_ptr.899" = type { %"class.std::__1::__compressed_pair.900" }
%"class.std::__1::__compressed_pair.900" = type { %"struct.std::__1::__compressed_pair_elem.901" }
%"struct.std::__1::__compressed_pair_elem.901" = type { %"class.v8::internal::StringsStorage"* }
%"class.v8::internal::StringsStorage" = type opaque
%"class.std::__1::unique_ptr.905" = type { %"class.std::__1::__compressed_pair.906" }
%"class.std::__1::__compressed_pair.906" = type { %"struct.std::__1::__compressed_pair_elem.907" }
%"struct.std::__1::__compressed_pair_elem.907" = type { %"class.v8::internal::AllocationTracker"* }
%"class.v8::internal::AllocationTracker" = type opaque
%"class.std::__1::unique_ptr.911" = type { %"class.std::__1::__compressed_pair.912" }
%"class.std::__1::__compressed_pair.912" = type { %"struct.std::__1::__compressed_pair_elem.913" }
%"struct.std::__1::__compressed_pair_elem.913" = type { %"class.v8::internal::SamplingHeapProfiler"* }
%"class.v8::internal::SamplingHeapProfiler" = type opaque
%"class.std::__1::vector.917" = type { %"class.std::__1::__vector_base.918" }
%"class.std::__1::__vector_base.918" = type { %"struct.std::__1::pair.919"*, %"struct.std::__1::pair.919"*, %"class.std::__1::__compressed_pair.920" }
%"struct.std::__1::pair.919" = type opaque
%"class.std::__1::__compressed_pair.920" = type { %"struct.std::__1::__compressed_pair_elem.921" }
%"struct.std::__1::__compressed_pair_elem.921" = type { %"struct.std::__1::pair.919"* }
%"struct.std::__1::pair.925" = type { i8 (%"class.v8::Isolate"*, %"class.v8::Local.1"*, i16, i8*)*, i8* }
%"class.v8::Local.1" = type { %"class.v8::Value"* }
%"class.std::__1::unique_ptr.926" = type { %"class.std::__1::__compressed_pair.927" }
%"class.std::__1::__compressed_pair.927" = type { %"struct.std::__1::__compressed_pair_elem.928" }
%"struct.std::__1::__compressed_pair_elem.928" = type { %"class.v8::internal::CodeEventDispatcher"* }
%"class.v8::internal::CodeEventDispatcher" = type { %"class.v8::internal::CodeEventListener", %"class.std::__1::unordered_set.929", %"class.v8::base::Mutex" }
%"class.std::__1::unordered_set.929" = type { %"class.std::__1::__hash_table.930" }
%"class.std::__1::__hash_table.930" = type <{ %"class.std::__1::unique_ptr.931", %"class.std::__1::__compressed_pair.941", %"class.std::__1::__compressed_pair.946", %"class.std::__1::__compressed_pair.950", [4 x i8] }>
%"class.std::__1::unique_ptr.931" = type { %"class.std::__1::__compressed_pair.932" }
%"class.std::__1::__compressed_pair.932" = type { %"struct.std::__1::__compressed_pair_elem.933", %"struct.std::__1::__compressed_pair_elem.935" }
%"struct.std::__1::__compressed_pair_elem.933" = type { %"struct.std::__1::__hash_node_base.934"** }
%"struct.std::__1::__hash_node_base.934" = type { %"struct.std::__1::__hash_node_base.934"* }
%"struct.std::__1::__compressed_pair_elem.935" = type { %"class.std::__1::__bucket_list_deallocator.936" }
%"class.std::__1::__bucket_list_deallocator.936" = type { %"class.std::__1::__compressed_pair.937" }
%"class.std::__1::__compressed_pair.937" = type { %"struct.std::__1::__compressed_pair_elem.8" }
%"class.std::__1::__compressed_pair.941" = type { %"struct.std::__1::__compressed_pair_elem.942" }
%"struct.std::__1::__compressed_pair_elem.942" = type { %"struct.std::__1::__hash_node_base.934" }
%"class.std::__1::__compressed_pair.946" = type { %"struct.std::__1::__compressed_pair_elem.8" }
%"class.std::__1::__compressed_pair.950" = type { %"struct.std::__1::__compressed_pair_elem.18" }
%"class.v8::internal::interpreter::Interpreter" = type opaque
%"class.v8::internal::compiler::PerIsolateCompilerCache" = type opaque
%"class.v8::internal::CompilerDispatcher" = type opaque
%"class.std::__1::queue" = type { %"class.std::__1::deque" }
%"class.std::__1::deque" = type { %"class.std::__1::__deque_base" }
%"class.std::__1::__deque_base" = type { %"struct.std::__1::__split_buffer", i64, %"class.std::__1::__compressed_pair.964" }
%"struct.std::__1::__split_buffer" = type { %"struct.std::__1::pair.958"**, %"struct.std::__1::pair.958"**, %"struct.std::__1::pair.958"**, %"class.std::__1::__compressed_pair.959" }
%"struct.std::__1::pair.958" = type opaque
%"class.std::__1::__compressed_pair.959" = type { %"struct.std::__1::__compressed_pair_elem.960" }
%"struct.std::__1::__compressed_pair_elem.960" = type { %"struct.std::__1::pair.958"** }
%"class.std::__1::__compressed_pair.964" = type { %"struct.std::__1::__compressed_pair_elem.8" }
%"class.v8::String" = type { i8 }
%"class.v8::Context" = type { i8 }
%"class.v8::FunctionCallbackInfo" = type <{ i64*, i64*, i32, [4 x i8] }>
%"class.v8::internal::Relocatable" = type { i32 (...)**, %"class.v8::internal::Isolate"*, %"class.v8::internal::Relocatable"* }
%"class.std::__1::vector.969" = type { %"class.std::__1::__vector_base.970" }
%"class.std::__1::__vector_base.970" = type { %"class.v8::internal::Handle.971"*, %"class.v8::internal::Handle.971"*, %"class.std::__1::__compressed_pair.972" }
%"class.v8::internal::Handle.971" = type { %"class.v8::internal::HandleBase" }
%"class.std::__1::__compressed_pair.972" = type { %"struct.std::__1::__compressed_pair_elem.973" }
%"struct.std::__1::__compressed_pair_elem.973" = type { %"class.v8::internal::Handle.971"* }
%"class.v8::internal::Object" = type { %"class.v8::internal::TaggedImpl" }
%"class.v8::internal::TaggedImpl" = type { i64 }
%"class.v8::internal::AddressToIndexHashMap" = type opaque
%"class.v8::internal::HeapObjectToIndexHashMap" = type opaque
%"class.v8::internal::MicrotaskQueue" = type opaque
%"class.v8::internal::CompilationStatistics" = type opaque
%"class.v8::internal::CodeTracer" = type <{ %"class.v8::internal::EmbeddedVector", %struct._IO_FILE*, i32, [4 x i8] }>
%"class.v8::internal::EmbeddedVector" = type { %"class.v8::internal::Vector.977", [128 x i8] }
%"class.v8::internal::Vector.977" = type { i8*, i64 }
%struct._IO_FILE = type { i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, %struct._IO_marker*, %struct._IO_FILE*, i32, i32, i64, i16, i8, [1 x i8], i8*, i64, %struct._IO_codecvt*, %struct._IO_wide_data*, %struct._IO_FILE*, i8*, i64, i32, [20 x i8] }
%struct._IO_marker = type opaque
%struct._IO_codecvt = type opaque
%struct._IO_wide_data = type opaque
%"class.v8::PromiseRejectMessage" = type { %"class.v8::Local.835", i32, %"class.v8::Local.1" }
%"class.v8::Local.835" = type { %"class.v8::Promise"* }
%"class.v8::StartupData" = type { i8*, i32 }
%"class.v8_inspector::V8Inspector" = type opaque
%"class.v8::internal::compiler::NodeObserver" = type opaque
%"class.v8::internal::OptimizingCompileDispatcher" = type opaque
%"class.std::__1::unique_ptr.978" = type { %"class.std::__1::__compressed_pair.979" }
%"class.std::__1::__compressed_pair.979" = type { %"struct.std::__1::__compressed_pair_elem.980" }
%"struct.std::__1::__compressed_pair_elem.980" = type { %"class.v8::internal::PersistentHandlesList"* }
%"class.v8::internal::PersistentHandlesList" = type { %"class.v8::base::Mutex", %"class.v8::internal::PersistentHandles"* }
%"class.std::__1::vector.984" = type { %"class.std::__1::__vector_base.985" }
%"class.std::__1::__vector_base.985" = type { void (%"class.v8::Isolate"*)**, void (%"class.v8::Isolate"*)**, %"class.std::__1::__compressed_pair.986" }
%"class.std::__1::__compressed_pair.986" = type { %"struct.std::__1::__compressed_pair_elem.987" }
%"struct.std::__1::__compressed_pair_elem.987" = type { void (%"class.v8::Isolate"*)** }
%"class.std::__1::shared_ptr.991" = type { %"class.v8::internal::metrics::Recorder"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::internal::metrics::Recorder" = type opaque
%"class.std::__1::unordered_map.992" = type { %"class.std::__1::__hash_table.993" }
%"class.std::__1::__hash_table.993" = type <{ %"class.std::__1::unique_ptr.994", %"class.std::__1::__compressed_pair.1004", %"class.std::__1::__compressed_pair.1009", %"class.std::__1::__compressed_pair.1012", [4 x i8] }>
%"class.std::__1::unique_ptr.994" = type { %"class.std::__1::__compressed_pair.995" }
%"class.std::__1::__compressed_pair.995" = type { %"struct.std::__1::__compressed_pair_elem.996", %"struct.std::__1::__compressed_pair_elem.998" }
%"struct.std::__1::__compressed_pair_elem.996" = type { %"struct.std::__1::__hash_node_base.997"** }
%"struct.std::__1::__hash_node_base.997" = type { %"struct.std::__1::__hash_node_base.997"* }
%"struct.std::__1::__compressed_pair_elem.998" = type { %"class.std::__1::__bucket_list_deallocator.999" }
%"class.std::__1::__bucket_list_deallocator.999" = type { %"class.std::__1::__compressed_pair.1000" }
%"class.std::__1::__compressed_pair.1000" = type { %"struct.std::__1::__compressed_pair_elem.8" }
%"class.std::__1::__compressed_pair.1004" = type { %"struct.std::__1::__compressed_pair_elem.1005" }
%"struct.std::__1::__compressed_pair_elem.1005" = type { %"struct.std::__1::__hash_node_base.997" }
%"class.std::__1::__compressed_pair.1009" = type { %"struct.std::__1::__compressed_pair_elem.8" }
%"class.std::__1::__compressed_pair.1012" = type { %"struct.std::__1::__compressed_pair_elem.18" }
%"struct.v8::metrics::LongTaskStats" = type { i64, i64, i64 }
%"class.std::__1::vector.542" = type { %"class.std::__1::__vector_base.543" }
%"class.std::__1::__vector_base.543" = type { %"class.v8::internal::Object"*, %"class.v8::internal::Object"*, %"class.std::__1::__compressed_pair.544" }
%"class.std::__1::__compressed_pair.544" = type { %"struct.std::__1::__compressed_pair_elem.545" }
%"struct.std::__1::__compressed_pair_elem.545" = type { %"class.v8::internal::Object"* }
%"class.v8::internal::BuiltinsConstantsTableBuilder" = type opaque
%"class.v8::ArrayBuffer::Allocator" = type { i32 (...)** }
%"class.std::__1::shared_ptr.161" = type { %"class.v8::ArrayBuffer::Allocator"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::internal::FutexWaitListNode" = type { %"class.v8::internal::Isolate"*, %"class.std::__1::shared_ptr.1016", %"class.v8::internal::CancelableTaskManager"*, %"class.v8::base::ConditionVariable", %"class.v8::internal::FutexWaitListNode"*, %"class.v8::internal::FutexWaitListNode"*, %"class.std::__1::weak_ptr.1045", i64, i8*, i8, i8, %"class.v8::Global", %"class.v8::Global.1046", %"class.v8::base::TimeTicks", i64 }
%"class.std::__1::shared_ptr.1016" = type { %"class.v8::TaskRunner"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::TaskRunner" = type { i32 (...)** }
%"class.v8::base::ConditionVariable" = type { %union.pthread_cond_t }
%union.pthread_cond_t = type { %struct.__pthread_cond_s }
%struct.__pthread_cond_s = type { %union.anon.1041, %union.anon.1043, [2 x i32], [2 x i32], i32, i32, [2 x i32] }
%union.anon.1041 = type { i64 }
%union.anon.1043 = type { i64 }
%"class.std::__1::weak_ptr.1045" = type { %"class.v8::internal::BackingStore"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::Global" = type { %"class.v8::PersistentBase" }
%"class.v8::PersistentBase" = type { %"class.v8::Promise"* }
%"class.v8::Global.1046" = type { %"class.v8::PersistentBase.1047" }
%"class.v8::PersistentBase.1047" = type { %"class.v8::Context"* }
%"class.v8::internal::CancelableTaskManager" = type <{ i64, %"class.std::__1::unordered_map.1017", %"class.v8::base::ConditionVariable", %"class.v8::base::Mutex", i8, [7 x i8] }>
%"class.std::__1::unordered_map.1017" = type { %"class.std::__1::__hash_table.1018" }
%"class.std::__1::__hash_table.1018" = type <{ %"class.std::__1::unique_ptr.1019", %"class.std::__1::__compressed_pair.1029", %"class.std::__1::__compressed_pair.1034", %"class.std::__1::__compressed_pair.1037", [4 x i8] }>
%"class.std::__1::unique_ptr.1019" = type { %"class.std::__1::__compressed_pair.1020" }
%"class.std::__1::__compressed_pair.1020" = type { %"struct.std::__1::__compressed_pair_elem.1021", %"struct.std::__1::__compressed_pair_elem.1023" }
%"struct.std::__1::__compressed_pair_elem.1021" = type { %"struct.std::__1::__hash_node_base.1022"** }
%"struct.std::__1::__hash_node_base.1022" = type { %"struct.std::__1::__hash_node_base.1022"* }
%"struct.std::__1::__compressed_pair_elem.1023" = type { %"class.std::__1::__bucket_list_deallocator.1024" }
%"class.std::__1::__bucket_list_deallocator.1024" = type { %"class.std::__1::__compressed_pair.1025" }
%"class.std::__1::__compressed_pair.1025" = type { %"struct.std::__1::__compressed_pair_elem.8" }
%"class.std::__1::__compressed_pair.1029" = type { %"struct.std::__1::__compressed_pair_elem.1030" }
%"struct.std::__1::__compressed_pair_elem.1030" = type { %"struct.std::__1::__hash_node_base.1022" }
%"class.std::__1::__compressed_pair.1034" = type { %"struct.std::__1::__compressed_pair_elem.8" }
%"class.std::__1::__compressed_pair.1037" = type { %"struct.std::__1::__compressed_pair_elem.18" }
%"class.v8::debug::ConsoleDelegate" = type { i32 (...)** }
%"class.v8::debug::AsyncEventDelegate" = type { i32 (...)** }
%"class.std::__1::unique_ptr.1048" = type { %"class.std::__1::__compressed_pair.1049" }
%"class.std::__1::__compressed_pair.1049" = type { %"struct.std::__1::__compressed_pair_elem.1050" }
%"struct.std::__1::__compressed_pair_elem.1050" = type { %"class.v8::internal::LocalIsolate"* }
%"class.v8::internal::LocalIsolate" = type { %"class.v8::internal::HiddenLocalFactory", %"class.v8::internal::LocalHeap", %"class.v8::internal::Isolate"*, %"class.std::__1::unique_ptr.1077", %"class.v8::internal::ThreadId", i64, %"class.v8::internal::RuntimeCallStats"* }
%"class.v8::internal::HiddenLocalFactory" = type { %"class.v8::internal::LocalFactory" }
%"class.v8::internal::LocalFactory" = type { %"class.v8::internal::ReadOnlyRoots" }
%"class.v8::internal::ReadOnlyRoots" = type { i64* }
%"class.std::__1::unique_ptr.1077" = type { %"class.std::__1::__compressed_pair.1078" }
%"class.std::__1::__compressed_pair.1078" = type { %"struct.std::__1::__compressed_pair_elem.1079" }
%"struct.std::__1::__compressed_pair_elem.1079" = type { %"class.v8::internal::LocalLogger"* }
%"class.v8::internal::LocalLogger" = type opaque
%"struct.v8::internal::ManagedPtrDestructor" = type { i64, %"struct.v8::internal::ManagedPtrDestructor"*, %"struct.v8::internal::ManagedPtrDestructor"*, i8*, void (i8*)*, i64* }
%"class.v8::internal::wasm::WasmEngine" = type opaque
%"class.std::__1::unique_ptr.1086" = type { %"class.std::__1::__compressed_pair.1087" }
%"class.std::__1::__compressed_pair.1087" = type { %"struct.std::__1::__compressed_pair_elem.1088" }
%"struct.std::__1::__compressed_pair_elem.1088" = type { %"class.v8::internal::TracingCpuProfilerImpl"* }
%"class.v8::internal::TracingCpuProfilerImpl" = type opaque
%"class.v8::internal::EmbeddedFileWriterInterface" = type opaque
%"class.v8::Context::BackupIncumbentScope" = type { %"class.v8::Local.836", i64, %"class.v8::Context::BackupIncumbentScope"* }
%"class.v8::Local.836" = type { %"class.v8::Context"* }
%"class.v8::internal::Isolate::ThreadDataTable" = type { %"class.std::__1::unordered_map.1094" }
%"class.std::__1::unordered_map.1094" = type { %"class.std::__1::__hash_table.1095" }
%"class.std::__1::__hash_table.1095" = type <{ %"class.std::__1::unique_ptr.1096", %"class.std::__1::__compressed_pair.1106", %"class.std::__1::__compressed_pair.1111", %"class.std::__1::__compressed_pair.1114", [4 x i8] }>
%"class.std::__1::unique_ptr.1096" = type { %"class.std::__1::__compressed_pair.1097" }
%"class.std::__1::__compressed_pair.1097" = type { %"struct.std::__1::__compressed_pair_elem.1098", %"struct.std::__1::__compressed_pair_elem.1100" }
%"struct.std::__1::__compressed_pair_elem.1098" = type { %"struct.std::__1::__hash_node_base.1099"** }
%"struct.std::__1::__hash_node_base.1099" = type { %"struct.std::__1::__hash_node_base.1099"* }
%"struct.std::__1::__compressed_pair_elem.1100" = type { %"class.std::__1::__bucket_list_deallocator.1101" }
%"class.std::__1::__bucket_list_deallocator.1101" = type { %"class.std::__1::__compressed_pair.1102" }
%"class.std::__1::__compressed_pair.1102" = type { %"struct.std::__1::__compressed_pair_elem.8" }
%"class.std::__1::__compressed_pair.1106" = type { %"struct.std::__1::__compressed_pair_elem.1107" }
%"struct.std::__1::__compressed_pair_elem.1107" = type { %"struct.std::__1::__hash_node_base.1099" }
%"class.std::__1::__compressed_pair.1111" = type { %"struct.std::__1::__compressed_pair_elem.8" }
%"class.std::__1::__compressed_pair.1114" = type { %"struct.std::__1::__compressed_pair_elem.18" }
%"struct.std::__1::atomic.1120" = type { %"struct.std::__1::__atomic_base.1121" }
%"struct.std::__1::__atomic_base.1121" = type { %"struct.std::__1::__cxx_atomic_impl.1122" }
%"struct.std::__1::__cxx_atomic_impl.1122" = type { %"struct.std::__1::__cxx_atomic_base_impl.1123" }
%"struct.std::__1::__cxx_atomic_base_impl.1123" = type { %"class.std::__1::vector.1124"* }
%"class.std::__1::vector.1124" = type { %"class.std::__1::__vector_base.1125" }
%"class.std::__1::__vector_base.1125" = type { %"struct.v8::MemoryRange"*, %"struct.v8::MemoryRange"*, %"class.std::__1::__compressed_pair.1126" }
%"struct.v8::MemoryRange" = type { i8*, i64 }
%"class.std::__1::__compressed_pair.1126" = type { %"struct.std::__1::__compressed_pair_elem.1127" }
%"struct.std::__1::__compressed_pair_elem.1127" = type { %"struct.v8::MemoryRange"* }
%"class.v8::internal::SequentialStringKey" = type <{ %"class.v8::internal::StringTableKey", %"class.v8::internal::Vector", i8, [7 x i8] }>
%"class.v8::internal::StringTableKey" = type { i32 (...)**, i32, i32 }
%"class.v8::internal::SequentialStringKey.1131" = type <{ %"class.v8::internal::StringTableKey", %"class.v8::internal::Vector.1132", i8, [7 x i8] }>
%"class.v8::internal::Vector.1132" = type { i16*, i64 }
%"class.v8::internal::FactoryBase" = type { i8 }
%"class.v8::internal::FactoryBase.1051" = type { i8 }
%"class.v8::internal::AstConsString" = type { %"class.v8::internal::Handle", %"struct.v8::internal::AstConsString::Segment" }
%"class.v8::internal::Handle" = type { %"class.v8::internal::HandleBase" }
%"struct.v8::internal::AstConsString::Segment" = type { %"class.v8::internal::AstRawString"*, %"struct.v8::internal::AstConsString::Segment"* }
%"class.v8::internal::AstValueFactory" = type { %"class.v8::base::TemplateHashMapImpl", %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"**, %"class.v8::internal::AstStringConstants"*, %"class.v8::internal::AstConsString"*, [128 x %"class.v8::internal::AstRawString"*], %"class.v8::internal::Zone"*, i64 }
%"class.std::__1::forward_list" = type { %"class.std::__1::__forward_list_base" }
%"class.std::__1::__forward_list_base" = type { %"class.std::__1::__compressed_pair.1150" }
%"class.std::__1::__compressed_pair.1150" = type { %"struct.std::__1::__compressed_pair_elem.1151" }
%"struct.std::__1::__compressed_pair_elem.1151" = type { %"struct.std::__1::__forward_begin_node" }
%"struct.std::__1::__forward_begin_node" = type { %"struct.std::__1::__forward_list_node"* }
%"struct.std::__1::__forward_list_node" = type { %"struct.std::__1::__forward_begin_node", %"class.v8::internal::AstRawString"* }
%"class.v8::internal::CombinationAssertScope" = type { i8 }
%"class.v8::internal::String::FlatContent" = type { %union.anon.1155, i32, i32, %"class.v8::internal::CombinationAssertScope"* }
%union.anon.1155 = type { i8* }
%"class.v8::internal::Handle<v8::internal::String>::ObjectRef" = type { %"class.v8::internal::String" }
%"class.v8::internal::String" = type { %"class.v8::internal::TorqueGeneratedString" }
%"class.v8::internal::TorqueGeneratedString" = type { %"class.v8::internal::Name" }

$_ZN2v88internal12AstRawString11InternalizeINS0_7IsolateEEEvPT_ = comdat any

$_ZN2v88internal14StringTableKeyD2Ev = comdat any

$_ZN2v88internal12AstRawString11InternalizeINS0_12LocalIsolateEEEvPT_ = comdat any

$_ZNK2v88internal13AstConsString8AllocateINS0_7IsolateEEENS0_6HandleINS0_6StringEEEPT_ = comdat any

$_ZNK2v88internal13AstConsString8AllocateINS0_12LocalIsolateEEENS0_6HandleINS0_6StringEEEPT_ = comdat any

$_ZNK2v88internal13AstConsString12AllocateFlatINS0_7IsolateEEENS0_6HandleINS0_6StringEEEPT_ = comdat any

$_ZN2v88internal9CopyCharsIhtEEvPT0_PKT_m = comdat any

$_ZNK2v88internal13AstConsString12AllocateFlatINS0_12LocalIsolateEEENS0_6HandleINS0_6StringEEEPT_ = comdat any

$_ZN2v88internal15AstValueFactory11InternalizeINS0_7IsolateEEEvPT_ = comdat any

$_ZN2v88internal15AstValueFactory11InternalizeINS0_12LocalIsolateEEEvPT_ = comdat any

$_ZN2v88internal12StringHasher20HashSequentialStringIhEEjPKT_im = comdat any

$_ZN2v84base19TemplateHashMapImplIPKNS_8internal12AstRawStringENS0_14NoHashMapValueENS2_22AstRawStringMapMatcherENS0_23DefaultAllocationPolicyEE9InsertNewERKS5_j = comdat any

$_ZN2v88internal12StringHasher20HashSequentialStringItEEjPKT_im = comdat any

$_ZN2v88internal19SequentialStringKeyIhED0Ev = comdat any

$_ZN2v88internal19SequentialStringKeyItED0Ev = comdat any

$_ZN2v84base19TemplateHashMapImplIPKNS_8internal12AstRawStringENS0_14NoHashMapValueENS2_22AstRawStringMapMatcherENS0_23DefaultAllocationPolicyEE6ResizeEv = comdat any

$_ZTVN2v88internal19SequentialStringKeyIhEE = comdat any

$_ZTVN2v88internal19SequentialStringKeyItEE = comdat any

@__func__._ZN2v88internal18AstStringConstantsC2EPNS0_7IsolateEm = private unnamed_addr constant [19 x i8] c"AstStringConstants\00", align 1
@.str = private unnamed_addr constant [10 x i8] c"anonymous\00", align 1
@.str.1 = private unnamed_addr constant [21 x i8] c"(anonymous function)\00", align 1
@.str.2 = private unnamed_addr constant [10 x i8] c"arguments\00", align 1
@.str.3 = private unnamed_addr constant [3 x i8] c"as\00", align 1
@.str.4 = private unnamed_addr constant [7 x i8] c"assert\00", align 1
@.str.5 = private unnamed_addr constant [6 x i8] c"async\00", align 1
@.str.6 = private unnamed_addr constant [6 x i8] c"await\00", align 1
@.str.7 = private unnamed_addr constant [7 x i8] c"bigint\00", align 1
@.str.8 = private unnamed_addr constant [8 x i8] c"boolean\00", align 1
@.str.9 = private unnamed_addr constant [11 x i8] c"<computed>\00", align 1
@.str.10 = private unnamed_addr constant [7 x i8] c".brand\00", align 1
@.str.11 = private unnamed_addr constant [12 x i8] c"constructor\00", align 1
@.str.12 = private unnamed_addr constant [8 x i8] c"default\00", align 1
@.str.13 = private unnamed_addr constant [5 x i8] c"done\00", align 1
@.str.14 = private unnamed_addr constant [2 x i8] c".\00", align 1
@.str.15 = private unnamed_addr constant [9 x i8] c".default\00", align 1
@.str.16 = private unnamed_addr constant [5 x i8] c".for\00", align 1
@.str.17 = private unnamed_addr constant [18 x i8] c".generator_object\00", align 1
@.str.18 = private unnamed_addr constant [13 x i8] c".home_object\00", align 1
@.str.19 = private unnamed_addr constant [8 x i8] c".result\00", align 1
@.str.20 = private unnamed_addr constant [13 x i8] c".repl_result\00", align 1
@.str.21 = private unnamed_addr constant [20 x i8] c".static_home_object\00", align 1
@.str.22 = private unnamed_addr constant [12 x i8] c".switch_tag\00", align 1
@.str.23 = private unnamed_addr constant [7 x i8] c".catch\00", align 1
@.str.24 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@.str.25 = private unnamed_addr constant [5 x i8] c"eval\00", align 1
@.str.26 = private unnamed_addr constant [5 x i8] c"from\00", align 1
@.str.27 = private unnamed_addr constant [9 x i8] c"function\00", align 1
@.str.28 = private unnamed_addr constant [4 x i8] c"get\00", align 1
@.str.29 = private unnamed_addr constant [5 x i8] c"get \00", align 1
@.str.30 = private unnamed_addr constant [7 x i8] c"length\00", align 1
@.str.31 = private unnamed_addr constant [4 x i8] c"let\00", align 1
@.str.32 = private unnamed_addr constant [5 x i8] c"meta\00", align 1
@.str.33 = private unnamed_addr constant [5 x i8] c"name\00", align 1
@.str.34 = private unnamed_addr constant [7 x i8] c"native\00", align 1
@.str.35 = private unnamed_addr constant [12 x i8] c".new.target\00", align 1
@.str.36 = private unnamed_addr constant [5 x i8] c"next\00", align 1
@.str.37 = private unnamed_addr constant [7 x i8] c"number\00", align 1
@.str.38 = private unnamed_addr constant [7 x i8] c"object\00", align 1
@.str.39 = private unnamed_addr constant [3 x i8] c"of\00", align 1
@.str.40 = private unnamed_addr constant [13 x i8] c"#constructor\00", align 1
@.str.41 = private unnamed_addr constant [10 x i8] c"__proto__\00", align 1
@.str.42 = private unnamed_addr constant [10 x i8] c"prototype\00", align 1
@.str.43 = private unnamed_addr constant [7 x i8] c"return\00", align 1
@.str.44 = private unnamed_addr constant [4 x i8] c"set\00", align 1
@.str.45 = private unnamed_addr constant [5 x i8] c"set \00", align 1
@.str.46 = private unnamed_addr constant [7 x i8] c"string\00", align 1
@.str.47 = private unnamed_addr constant [7 x i8] c"symbol\00", align 1
@.str.48 = private unnamed_addr constant [7 x i8] c"target\00", align 1
@.str.49 = private unnamed_addr constant [5 x i8] c"this\00", align 1
@.str.50 = private unnamed_addr constant [15 x i8] c".this_function\00", align 1
@.str.51 = private unnamed_addr constant [6 x i8] c"throw\00", align 1
@.str.52 = private unnamed_addr constant [10 x i8] c"undefined\00", align 1
@.str.53 = private unnamed_addr constant [6 x i8] c"value\00", align 1
@.str.54 = private unnamed_addr constant [18 x i8] c"Check failed: %s.\00", align 1
@.str.55 = private unnamed_addr constant [23 x i8] c"(location_) != nullptr\00", align 1
@_ZTVN2v88internal19SequentialStringKeyIhEE = linkonce_odr hidden unnamed_addr constant { [4 x i8*] } { [4 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.v8::internal::StringTableKey"*)* @_ZN2v88internal14StringTableKeyD2Ev to i8*), i8* bitcast (void (%"class.v8::internal::SequentialStringKey"*)* @_ZN2v88internal19SequentialStringKeyIhED0Ev to i8*)] }, comdat, align 8
@_ZTVN2v88internal19SequentialStringKeyItEE = linkonce_odr hidden unnamed_addr constant { [4 x i8*] } { [4 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.v8::internal::StringTableKey"*)* @_ZN2v88internal14StringTableKeyD2Ev to i8*), i8* bitcast (void (%"class.v8::internal::SequentialStringKey.1131"*)* @_ZN2v88internal19SequentialStringKeyItED0Ev to i8*)] }, comdat, align 8
@.str.57 = private unnamed_addr constant [35 x i8] c"Out of memory: HashMap::Initialize\00", align 1
@.str.58 = private unnamed_addr constant [24 x i8] c"(new_string) != nullptr\00", align 1

@_ZN2v88internal18AstStringConstantsC1EPNS0_7IsolateEm = hidden unnamed_addr alias void (%"class.v8::internal::AstStringConstants"*, %"class.v8::internal::Isolate"*, i64), void (%"class.v8::internal::AstStringConstants"*, %"class.v8::internal::Isolate"*, i64)* @_ZN2v88internal18AstStringConstantsC2EPNS0_7IsolateEm

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden void @_ZN2v88internal12AstRawString11InternalizeINS0_7IsolateEEEvPT_(%"class.v8::internal::AstRawString"*, %"class.v8::internal::Isolate"*) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.v8::internal::SequentialStringKey", align 8
  %4 = alloca %"class.v8::internal::SequentialStringKey.1131", align 8
  %5 = getelementptr inbounds %"class.v8::internal::AstRawString", %"class.v8::internal::AstRawString"* %0, i64 0, i32 1
  %6 = getelementptr inbounds %"class.v8::internal::AstRawString", %"class.v8::internal::AstRawString"* %0, i64 0, i32 1, i32 1
  %7 = load i64, i64* %6, align 8
  %8 = trunc i64 %7 to i32
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %10, label %13

10:                                               ; preds = %2
  %11 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %1, i64 0, i32 0, i32 7, i32 0, i64 9
  %12 = bitcast %"class.v8::internal::AstRawString"* %0 to i64**
  store i64* %11, i64** %12, align 8
  br label %50

13:                                               ; preds = %2
  %14 = getelementptr inbounds %"class.v8::internal::AstRawString", %"class.v8::internal::AstRawString"* %0, i64 0, i32 3
  %15 = load i8, i8* %14, align 4, !range !2
  %16 = icmp eq i8 %15, 0
  br i1 %16, label %31, label %17

17:                                               ; preds = %13
  %18 = bitcast %"class.v8::internal::SequentialStringKey"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %18) #15
  %19 = getelementptr inbounds %"class.v8::internal::AstRawString", %"class.v8::internal::AstRawString"* %0, i64 0, i32 2
  %20 = load i32, i32* %19, align 8
  %21 = getelementptr inbounds %"class.v8::internal::SequentialStringKey", %"class.v8::internal::SequentialStringKey"* %3, i64 0, i32 0, i32 0
  %22 = getelementptr inbounds %"class.v8::internal::SequentialStringKey", %"class.v8::internal::SequentialStringKey"* %3, i64 0, i32 0, i32 1
  store i32 %20, i32* %22, align 8
  %23 = getelementptr inbounds %"class.v8::internal::SequentialStringKey", %"class.v8::internal::SequentialStringKey"* %3, i64 0, i32 0, i32 2
  store i32 %8, i32* %23, align 4
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN2v88internal19SequentialStringKeyIhEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %21, align 8
  %24 = getelementptr inbounds %"class.v8::internal::SequentialStringKey", %"class.v8::internal::SequentialStringKey"* %3, i64 0, i32 1
  %25 = bitcast %"class.v8::internal::Vector"* %24 to i8*
  %26 = bitcast %"class.v8::internal::Vector"* %5 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %25, i8* align 8 %26, i64 16, i1 false) #15
  %27 = getelementptr inbounds %"class.v8::internal::SequentialStringKey", %"class.v8::internal::SequentialStringKey"* %3, i64 0, i32 2
  store i8 0, i8* %27, align 8
  %28 = bitcast %"class.v8::internal::Isolate"* %1 to %"class.v8::internal::FactoryBase"*
  %29 = call i64* @_ZN2v88internal11FactoryBaseINS0_7FactoryEE24InternalizeStringWithKeyINS0_19SequentialStringKeyIhEEEENS0_6HandleINS0_6StringEEEPT_(%"class.v8::internal::FactoryBase"* %28, %"class.v8::internal::SequentialStringKey"* nonnull %3) #15
  %30 = bitcast %"class.v8::internal::AstRawString"* %0 to i64**
  store i64* %29, i64** %30, align 8
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %18) #15
  br label %50

31:                                               ; preds = %13
  %32 = bitcast %"class.v8::internal::SequentialStringKey.1131"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %32) #15
  %33 = getelementptr inbounds %"class.v8::internal::AstRawString", %"class.v8::internal::AstRawString"* %0, i64 0, i32 2
  %34 = load i32, i32* %33, align 8
  %35 = getelementptr inbounds %"class.v8::internal::AstRawString", %"class.v8::internal::AstRawString"* %0, i64 0, i32 1, i32 0
  %36 = bitcast i8** %35 to i64*
  %37 = load i64, i64* %36, align 8
  %38 = lshr i64 %7, 1
  %39 = trunc i64 %38 to i32
  %40 = getelementptr inbounds %"class.v8::internal::SequentialStringKey.1131", %"class.v8::internal::SequentialStringKey.1131"* %4, i64 0, i32 0, i32 0
  %41 = getelementptr inbounds %"class.v8::internal::SequentialStringKey.1131", %"class.v8::internal::SequentialStringKey.1131"* %4, i64 0, i32 0, i32 1
  store i32 %34, i32* %41, align 8
  %42 = getelementptr inbounds %"class.v8::internal::SequentialStringKey.1131", %"class.v8::internal::SequentialStringKey.1131"* %4, i64 0, i32 0, i32 2
  store i32 %39, i32* %42, align 4
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN2v88internal19SequentialStringKeyItEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %40, align 8
  %43 = getelementptr inbounds %"class.v8::internal::SequentialStringKey.1131", %"class.v8::internal::SequentialStringKey.1131"* %4, i64 0, i32 1, i32 0
  %44 = bitcast i16** %43 to i64*
  store i64 %37, i64* %44, align 8
  %45 = getelementptr inbounds %"class.v8::internal::SequentialStringKey.1131", %"class.v8::internal::SequentialStringKey.1131"* %4, i64 0, i32 1, i32 1
  store i64 %38, i64* %45, align 8
  %46 = getelementptr inbounds %"class.v8::internal::SequentialStringKey.1131", %"class.v8::internal::SequentialStringKey.1131"* %4, i64 0, i32 2
  store i8 0, i8* %46, align 8
  %47 = bitcast %"class.v8::internal::Isolate"* %1 to %"class.v8::internal::FactoryBase"*
  %48 = call i64* @_ZN2v88internal11FactoryBaseINS0_7FactoryEE24InternalizeStringWithKeyINS0_19SequentialStringKeyItEEEENS0_6HandleINS0_6StringEEEPT_(%"class.v8::internal::FactoryBase"* %47, %"class.v8::internal::SequentialStringKey.1131"* nonnull %4) #15
  %49 = bitcast %"class.v8::internal::AstRawString"* %0 to i64**
  store i64* %48, i64** %49, align 8
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %32) #15
  br label %50

50:                                               ; preds = %17, %31, %10
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

declare i64* @_ZN2v88internal11FactoryBaseINS0_7FactoryEE24InternalizeStringWithKeyINS0_19SequentialStringKeyIhEEEENS0_6HandleINS0_6StringEEEPT_(%"class.v8::internal::FactoryBase"*, %"class.v8::internal::SequentialStringKey"*) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

declare i64* @_ZN2v88internal11FactoryBaseINS0_7FactoryEE24InternalizeStringWithKeyINS0_19SequentialStringKeyItEEEENS0_6HandleINS0_6StringEEEPT_(%"class.v8::internal::FactoryBase"*, %"class.v8::internal::SequentialStringKey.1131"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2v88internal14StringTableKeyD2Ev(%"class.v8::internal::StringTableKey"*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden void @_ZN2v88internal12AstRawString11InternalizeINS0_12LocalIsolateEEEvPT_(%"class.v8::internal::AstRawString"*, %"class.v8::internal::LocalIsolate"*) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.v8::internal::SequentialStringKey", align 8
  %4 = alloca %"class.v8::internal::SequentialStringKey.1131", align 8
  %5 = getelementptr inbounds %"class.v8::internal::AstRawString", %"class.v8::internal::AstRawString"* %0, i64 0, i32 1
  %6 = getelementptr inbounds %"class.v8::internal::AstRawString", %"class.v8::internal::AstRawString"* %0, i64 0, i32 1, i32 1
  %7 = load i64, i64* %6, align 8
  %8 = trunc i64 %7 to i32
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %10, label %15

10:                                               ; preds = %2
  %11 = getelementptr inbounds %"class.v8::internal::LocalIsolate", %"class.v8::internal::LocalIsolate"* %1, i64 0, i32 0, i32 0, i32 0, i32 0
  %12 = load i64*, i64** %11, align 8
  %13 = getelementptr inbounds i64, i64* %12, i64 9
  %14 = bitcast %"class.v8::internal::AstRawString"* %0 to i64**
  store i64* %13, i64** %14, align 8
  br label %52

15:                                               ; preds = %2
  %16 = getelementptr inbounds %"class.v8::internal::AstRawString", %"class.v8::internal::AstRawString"* %0, i64 0, i32 3
  %17 = load i8, i8* %16, align 4, !range !2
  %18 = icmp eq i8 %17, 0
  br i1 %18, label %33, label %19

19:                                               ; preds = %15
  %20 = bitcast %"class.v8::internal::SequentialStringKey"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %20) #15
  %21 = getelementptr inbounds %"class.v8::internal::AstRawString", %"class.v8::internal::AstRawString"* %0, i64 0, i32 2
  %22 = load i32, i32* %21, align 8
  %23 = getelementptr inbounds %"class.v8::internal::SequentialStringKey", %"class.v8::internal::SequentialStringKey"* %3, i64 0, i32 0, i32 0
  %24 = getelementptr inbounds %"class.v8::internal::SequentialStringKey", %"class.v8::internal::SequentialStringKey"* %3, i64 0, i32 0, i32 1
  store i32 %22, i32* %24, align 8
  %25 = getelementptr inbounds %"class.v8::internal::SequentialStringKey", %"class.v8::internal::SequentialStringKey"* %3, i64 0, i32 0, i32 2
  store i32 %8, i32* %25, align 4
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN2v88internal19SequentialStringKeyIhEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %23, align 8
  %26 = getelementptr inbounds %"class.v8::internal::SequentialStringKey", %"class.v8::internal::SequentialStringKey"* %3, i64 0, i32 1
  %27 = bitcast %"class.v8::internal::Vector"* %26 to i8*
  %28 = bitcast %"class.v8::internal::Vector"* %5 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %27, i8* align 8 %28, i64 16, i1 false) #15
  %29 = getelementptr inbounds %"class.v8::internal::SequentialStringKey", %"class.v8::internal::SequentialStringKey"* %3, i64 0, i32 2
  store i8 0, i8* %29, align 8
  %30 = bitcast %"class.v8::internal::LocalIsolate"* %1 to %"class.v8::internal::FactoryBase.1051"*
  %31 = call i64* @_ZN2v88internal11FactoryBaseINS0_12LocalFactoryEE24InternalizeStringWithKeyINS0_19SequentialStringKeyIhEEEENS0_6HandleINS0_6StringEEEPT_(%"class.v8::internal::FactoryBase.1051"* %30, %"class.v8::internal::SequentialStringKey"* nonnull %3) #15
  %32 = bitcast %"class.v8::internal::AstRawString"* %0 to i64**
  store i64* %31, i64** %32, align 8
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %20) #15
  br label %52

33:                                               ; preds = %15
  %34 = bitcast %"class.v8::internal::SequentialStringKey.1131"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %34) #15
  %35 = getelementptr inbounds %"class.v8::internal::AstRawString", %"class.v8::internal::AstRawString"* %0, i64 0, i32 2
  %36 = load i32, i32* %35, align 8
  %37 = getelementptr inbounds %"class.v8::internal::AstRawString", %"class.v8::internal::AstRawString"* %0, i64 0, i32 1, i32 0
  %38 = bitcast i8** %37 to i64*
  %39 = load i64, i64* %38, align 8
  %40 = lshr i64 %7, 1
  %41 = trunc i64 %40 to i32
  %42 = getelementptr inbounds %"class.v8::internal::SequentialStringKey.1131", %"class.v8::internal::SequentialStringKey.1131"* %4, i64 0, i32 0, i32 0
  %43 = getelementptr inbounds %"class.v8::internal::SequentialStringKey.1131", %"class.v8::internal::SequentialStringKey.1131"* %4, i64 0, i32 0, i32 1
  store i32 %36, i32* %43, align 8
  %44 = getelementptr inbounds %"class.v8::internal::SequentialStringKey.1131", %"class.v8::internal::SequentialStringKey.1131"* %4, i64 0, i32 0, i32 2
  store i32 %41, i32* %44, align 4
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN2v88internal19SequentialStringKeyItEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %42, align 8
  %45 = getelementptr inbounds %"class.v8::internal::SequentialStringKey.1131", %"class.v8::internal::SequentialStringKey.1131"* %4, i64 0, i32 1, i32 0
  %46 = bitcast i16** %45 to i64*
  store i64 %39, i64* %46, align 8
  %47 = getelementptr inbounds %"class.v8::internal::SequentialStringKey.1131", %"class.v8::internal::SequentialStringKey.1131"* %4, i64 0, i32 1, i32 1
  store i64 %40, i64* %47, align 8
  %48 = getelementptr inbounds %"class.v8::internal::SequentialStringKey.1131", %"class.v8::internal::SequentialStringKey.1131"* %4, i64 0, i32 2
  store i8 0, i8* %48, align 8
  %49 = bitcast %"class.v8::internal::LocalIsolate"* %1 to %"class.v8::internal::FactoryBase.1051"*
  %50 = call i64* @_ZN2v88internal11FactoryBaseINS0_12LocalFactoryEE24InternalizeStringWithKeyINS0_19SequentialStringKeyItEEEENS0_6HandleINS0_6StringEEEPT_(%"class.v8::internal::FactoryBase.1051"* %49, %"class.v8::internal::SequentialStringKey.1131"* nonnull %4) #15
  %51 = bitcast %"class.v8::internal::AstRawString"* %0 to i64**
  store i64* %50, i64** %51, align 8
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %34) #15
  br label %52

52:                                               ; preds = %19, %33, %10
  ret void
}

declare i64* @_ZN2v88internal11FactoryBaseINS0_12LocalFactoryEE24InternalizeStringWithKeyINS0_19SequentialStringKeyIhEEEENS0_6HandleINS0_6StringEEEPT_(%"class.v8::internal::FactoryBase.1051"*, %"class.v8::internal::SequentialStringKey"*) local_unnamed_addr #2

declare i64* @_ZN2v88internal11FactoryBaseINS0_12LocalFactoryEE24InternalizeStringWithKeyINS0_19SequentialStringKeyItEEEENS0_6HandleINS0_6StringEEEPT_(%"class.v8::internal::FactoryBase.1051"*, %"class.v8::internal::SequentialStringKey.1131"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden i64* @_ZNK2v88internal13AstConsString8AllocateINS0_7IsolateEEENS0_6HandleINS0_6StringEEEPT_(%"class.v8::internal::AstConsString"*, %"class.v8::internal::Isolate"*) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.v8::internal::AstConsString", %"class.v8::internal::AstConsString"* %0, i64 0, i32 1, i32 0
  %4 = load %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"** %3, align 8
  %5 = icmp eq %"class.v8::internal::AstRawString"* %4, null
  br i1 %5, label %6, label %8

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %1, i64 0, i32 0, i32 7, i32 0, i64 9
  br label %29

8:                                                ; preds = %2
  %9 = bitcast %"class.v8::internal::AstRawString"* %4 to i64**
  %10 = load i64*, i64** %9, align 8
  %11 = getelementptr inbounds %"class.v8::internal::AstConsString", %"class.v8::internal::AstConsString"* %0, i64 0, i32 1, i32 1
  %12 = load %"struct.v8::internal::AstConsString::Segment"*, %"struct.v8::internal::AstConsString::Segment"** %11, align 8
  %13 = icmp eq %"struct.v8::internal::AstConsString::Segment"* %12, null
  br i1 %13, label %29, label %14

14:                                               ; preds = %8
  %15 = bitcast %"class.v8::internal::Isolate"* %1 to %"class.v8::internal::FactoryBase"*
  br label %20

16:                                               ; preds = %20
  %17 = getelementptr inbounds %"struct.v8::internal::AstConsString::Segment", %"struct.v8::internal::AstConsString::Segment"* %21, i64 0, i32 1
  %18 = load %"struct.v8::internal::AstConsString::Segment"*, %"struct.v8::internal::AstConsString::Segment"** %17, align 8
  %19 = icmp eq %"struct.v8::internal::AstConsString::Segment"* %18, null
  br i1 %19, label %29, label %20

20:                                               ; preds = %14, %16
  %21 = phi %"struct.v8::internal::AstConsString::Segment"* [ %12, %14 ], [ %18, %16 ]
  %22 = phi i64* [ %10, %14 ], [ %26, %16 ]
  %23 = bitcast %"struct.v8::internal::AstConsString::Segment"* %21 to i64***
  %24 = load i64**, i64*** %23, align 8
  %25 = load i64*, i64** %24, align 8
  %26 = tail call i64* @_ZN2v88internal11FactoryBaseINS0_7FactoryEE13NewConsStringENS0_6HandleINS0_6StringEEES6_NS0_14AllocationTypeE(%"class.v8::internal::FactoryBase"* %15, i64* %25, i64* %22, i8 zeroext 1) #15
  %27 = icmp eq i64* %26, null
  br i1 %27, label %28, label %16, !prof !3

28:                                               ; preds = %20
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.54, i64 0, i64 0), i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.55, i64 0, i64 0)) #16
  unreachable

29:                                               ; preds = %16, %8, %6
  %30 = phi i64* [ %7, %6 ], [ %10, %8 ], [ %26, %16 ]
  ret i64* %30
}

declare i64* @_ZN2v88internal11FactoryBaseINS0_7FactoryEE13NewConsStringENS0_6HandleINS0_6StringEEES6_NS0_14AllocationTypeE(%"class.v8::internal::FactoryBase"*, i64*, i64*, i8 zeroext) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden i64* @_ZNK2v88internal13AstConsString8AllocateINS0_12LocalIsolateEEENS0_6HandleINS0_6StringEEEPT_(%"class.v8::internal::AstConsString"*, %"class.v8::internal::LocalIsolate"*) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.v8::internal::AstConsString", %"class.v8::internal::AstConsString"* %0, i64 0, i32 1, i32 0
  %4 = load %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"** %3, align 8
  %5 = icmp eq %"class.v8::internal::AstRawString"* %4, null
  br i1 %5, label %6, label %10

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.v8::internal::LocalIsolate", %"class.v8::internal::LocalIsolate"* %1, i64 0, i32 0, i32 0, i32 0, i32 0
  %8 = load i64*, i64** %7, align 8
  %9 = getelementptr inbounds i64, i64* %8, i64 9
  br label %31

10:                                               ; preds = %2
  %11 = bitcast %"class.v8::internal::AstRawString"* %4 to i64**
  %12 = load i64*, i64** %11, align 8
  %13 = getelementptr inbounds %"class.v8::internal::AstConsString", %"class.v8::internal::AstConsString"* %0, i64 0, i32 1, i32 1
  %14 = load %"struct.v8::internal::AstConsString::Segment"*, %"struct.v8::internal::AstConsString::Segment"** %13, align 8
  %15 = icmp eq %"struct.v8::internal::AstConsString::Segment"* %14, null
  br i1 %15, label %31, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.v8::internal::LocalIsolate"* %1 to %"class.v8::internal::FactoryBase.1051"*
  br label %22

18:                                               ; preds = %22
  %19 = getelementptr inbounds %"struct.v8::internal::AstConsString::Segment", %"struct.v8::internal::AstConsString::Segment"* %23, i64 0, i32 1
  %20 = load %"struct.v8::internal::AstConsString::Segment"*, %"struct.v8::internal::AstConsString::Segment"** %19, align 8
  %21 = icmp eq %"struct.v8::internal::AstConsString::Segment"* %20, null
  br i1 %21, label %31, label %22

22:                                               ; preds = %16, %18
  %23 = phi %"struct.v8::internal::AstConsString::Segment"* [ %14, %16 ], [ %20, %18 ]
  %24 = phi i64* [ %12, %16 ], [ %28, %18 ]
  %25 = bitcast %"struct.v8::internal::AstConsString::Segment"* %23 to i64***
  %26 = load i64**, i64*** %25, align 8
  %27 = load i64*, i64** %26, align 8
  %28 = tail call i64* @_ZN2v88internal11FactoryBaseINS0_12LocalFactoryEE13NewConsStringENS0_6HandleINS0_6StringEEES6_NS0_14AllocationTypeE(%"class.v8::internal::FactoryBase.1051"* %17, i64* %27, i64* %24, i8 zeroext 1) #15
  %29 = icmp eq i64* %28, null
  br i1 %29, label %30, label %18, !prof !3

30:                                               ; preds = %22
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.54, i64 0, i64 0), i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.55, i64 0, i64 0)) #16
  unreachable

31:                                               ; preds = %18, %10, %6
  %32 = phi i64* [ %9, %6 ], [ %12, %10 ], [ %28, %18 ]
  ret i64* %32
}

declare i64* @_ZN2v88internal11FactoryBaseINS0_12LocalFactoryEE13NewConsStringENS0_6HandleINS0_6StringEEES6_NS0_14AllocationTypeE(%"class.v8::internal::FactoryBase.1051"*, i64*, i64*, i8 zeroext) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden i64* @_ZNK2v88internal13AstConsString12AllocateFlatINS0_7IsolateEEENS0_6HandleINS0_6StringEEEPT_(%"class.v8::internal::AstConsString"*, %"class.v8::internal::Isolate"*) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.v8::internal::AstConsString", %"class.v8::internal::AstConsString"* %0, i64 0, i32 1, i32 0
  %4 = load %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"** %3, align 8
  %5 = icmp eq %"class.v8::internal::AstRawString"* %4, null
  %6 = bitcast %"class.v8::internal::AstRawString"* %4 to i64**
  br i1 %5, label %7, label %9

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %1, i64 0, i32 0, i32 7, i32 0, i64 9
  br label %179

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"class.v8::internal::AstConsString", %"class.v8::internal::AstConsString"* %0, i64 0, i32 1
  %11 = getelementptr inbounds %"class.v8::internal::AstConsString", %"class.v8::internal::AstConsString"* %0, i64 0, i32 1, i32 1
  %12 = load %"struct.v8::internal::AstConsString::Segment"*, %"struct.v8::internal::AstConsString::Segment"** %11, align 8
  %13 = icmp eq %"struct.v8::internal::AstConsString::Segment"* %12, null
  br i1 %13, label %18, label %14

14:                                               ; preds = %9
  %15 = icmp eq %"struct.v8::internal::AstConsString::Segment"* %10, null
  br i1 %15, label %16, label %22

16:                                               ; preds = %14
  %17 = bitcast %"class.v8::internal::Isolate"* %1 to %"class.v8::internal::FactoryBase"*
  br label %42

18:                                               ; preds = %9
  %19 = load i64*, i64** %6, align 8
  br label %179

20:                                               ; preds = %22
  %21 = bitcast %"class.v8::internal::Isolate"* %1 to %"class.v8::internal::FactoryBase"*
  br i1 %38, label %42, label %104

22:                                               ; preds = %14, %22
  %23 = phi i32 [ %36, %22 ], [ 0, %14 ]
  %24 = phi i1 [ %38, %22 ], [ true, %14 ]
  %25 = phi %"struct.v8::internal::AstConsString::Segment"* [ %40, %22 ], [ %10, %14 ]
  %26 = getelementptr inbounds %"struct.v8::internal::AstConsString::Segment", %"struct.v8::internal::AstConsString::Segment"* %25, i64 0, i32 0
  %27 = load %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"** %26, align 8
  %28 = getelementptr inbounds %"class.v8::internal::AstRawString", %"class.v8::internal::AstRawString"* %27, i64 0, i32 3
  %29 = load i8, i8* %28, align 4, !range !2
  %30 = icmp eq i8 %29, 0
  %31 = getelementptr inbounds %"class.v8::internal::AstRawString", %"class.v8::internal::AstRawString"* %27, i64 0, i32 1, i32 1
  %32 = load i64, i64* %31, align 8
  %33 = trunc i64 %32 to i32
  %34 = sdiv i32 %33, 2
  %35 = select i1 %30, i32 %34, i32 %33
  %36 = add nsw i32 %35, %23
  %37 = icmp ne i8 %29, 0
  %38 = and i1 %24, %37
  %39 = getelementptr inbounds %"struct.v8::internal::AstConsString::Segment", %"struct.v8::internal::AstConsString::Segment"* %25, i64 0, i32 1
  %40 = load %"struct.v8::internal::AstConsString::Segment"*, %"struct.v8::internal::AstConsString::Segment"** %39, align 8
  %41 = icmp eq %"struct.v8::internal::AstConsString::Segment"* %40, null
  br i1 %41, label %20, label %22

42:                                               ; preds = %16, %20
  %43 = phi %"class.v8::internal::FactoryBase"* [ %17, %16 ], [ %21, %20 ]
  %44 = phi i32 [ 0, %16 ], [ %36, %20 ]
  %45 = tail call i64* @_ZN2v88internal11FactoryBaseINS0_7FactoryEE19NewRawOneByteStringEiNS0_14AllocationTypeE(%"class.v8::internal::FactoryBase"* %43, i32 %44, i8 zeroext 1) #15
  %46 = icmp eq i64* %45, null
  br i1 %46, label %47, label %48, !prof !3

47:                                               ; preds = %42
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.54, i64 0, i64 0), i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.55, i64 0, i64 0)) #16
  unreachable

48:                                               ; preds = %42
  br i1 %15, label %179, label %49

49:                                               ; preds = %48
  %50 = load i64, i64* %45, align 8
  %51 = add i64 %50, 11
  %52 = inttoptr i64 %51 to i8*
  %53 = sext i32 %44 to i64
  %54 = getelementptr inbounds i8, i8* %52, i64 %53
  br label %55

55:                                               ; preds = %49, %100
  %56 = phi i8* [ %70, %100 ], [ %54, %49 ]
  %57 = phi %"struct.v8::internal::AstConsString::Segment"* [ %102, %100 ], [ %10, %49 ]
  %58 = getelementptr inbounds %"struct.v8::internal::AstConsString::Segment", %"struct.v8::internal::AstConsString::Segment"* %57, i64 0, i32 0
  %59 = load %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"** %58, align 8
  %60 = getelementptr inbounds %"class.v8::internal::AstRawString", %"class.v8::internal::AstRawString"* %59, i64 0, i32 3
  %61 = load i8, i8* %60, align 4, !range !2
  %62 = icmp eq i8 %61, 0
  %63 = getelementptr inbounds %"class.v8::internal::AstRawString", %"class.v8::internal::AstRawString"* %59, i64 0, i32 1, i32 1
  %64 = load i64, i64* %63, align 8
  %65 = trunc i64 %64 to i32
  %66 = sdiv i32 %65, 2
  %67 = select i1 %62, i32 %66, i32 %65
  %68 = sext i32 %67 to i64
  %69 = sub nsw i64 0, %68
  %70 = getelementptr inbounds i8, i8* %56, i64 %69
  %71 = getelementptr inbounds %"class.v8::internal::AstRawString", %"class.v8::internal::AstRawString"* %59, i64 0, i32 1, i32 0
  %72 = load i8*, i8** %71, align 8
  switch i64 %68, label %99 [
    i64 1, label %73
    i64 2, label %75
    i64 3, label %79
    i64 4, label %80
    i64 5, label %84
    i64 6, label %85
    i64 7, label %86
    i64 8, label %87
    i64 9, label %91
    i64 10, label %92
    i64 11, label %93
    i64 12, label %94
    i64 13, label %95
    i64 14, label %96
    i64 15, label %97
    i64 16, label %98
    i64 0, label %100
  ]

73:                                               ; preds = %55
  %74 = load i8, i8* %72, align 1
  store i8 %74, i8* %70, align 1
  br label %100

75:                                               ; preds = %55
  %76 = bitcast i8* %72 to i16*
  %77 = bitcast i8* %70 to i16*
  %78 = load i16, i16* %76, align 1
  store i16 %78, i16* %77, align 1
  br label %100

79:                                               ; preds = %55
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 1 %70, i8* align 1 %72, i64 3, i1 false) #15
  br label %100

80:                                               ; preds = %55
  %81 = bitcast i8* %72 to i32*
  %82 = bitcast i8* %70 to i32*
  %83 = load i32, i32* %81, align 1
  store i32 %83, i32* %82, align 1
  br label %100

84:                                               ; preds = %55
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 1 %70, i8* align 1 %72, i64 5, i1 false) #15
  br label %100

85:                                               ; preds = %55
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 1 %70, i8* align 1 %72, i64 6, i1 false) #15
  br label %100

86:                                               ; preds = %55
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 1 %70, i8* align 1 %72, i64 7, i1 false) #15
  br label %100

87:                                               ; preds = %55
  %88 = bitcast i8* %72 to i64*
  %89 = bitcast i8* %70 to i64*
  %90 = load i64, i64* %88, align 1
  store i64 %90, i64* %89, align 1
  br label %100

91:                                               ; preds = %55
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 1 %70, i8* align 1 %72, i64 9, i1 false) #15
  br label %100

92:                                               ; preds = %55
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 1 %70, i8* align 1 %72, i64 10, i1 false) #15
  br label %100

93:                                               ; preds = %55
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 1 %70, i8* align 1 %72, i64 11, i1 false) #15
  br label %100

94:                                               ; preds = %55
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 1 %70, i8* align 1 %72, i64 12, i1 false) #15
  br label %100

95:                                               ; preds = %55
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 1 %70, i8* align 1 %72, i64 13, i1 false) #15
  br label %100

96:                                               ; preds = %55
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 1 %70, i8* align 1 %72, i64 14, i1 false) #15
  br label %100

97:                                               ; preds = %55
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 1 %70, i8* align 1 %72, i64 15, i1 false) #15
  br label %100

98:                                               ; preds = %55
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 1 %70, i8* align 1 %72, i64 16, i1 false) #15
  br label %100

99:                                               ; preds = %55
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 1 %70, i8* align 1 %72, i64 %68, i1 false) #15
  br label %100

100:                                              ; preds = %55, %73, %75, %79, %80, %84, %85, %86, %87, %91, %92, %93, %94, %95, %96, %97, %98, %99
  %101 = getelementptr inbounds %"struct.v8::internal::AstConsString::Segment", %"struct.v8::internal::AstConsString::Segment"* %57, i64 0, i32 1
  %102 = load %"struct.v8::internal::AstConsString::Segment"*, %"struct.v8::internal::AstConsString::Segment"** %101, align 8
  %103 = icmp eq %"struct.v8::internal::AstConsString::Segment"* %102, null
  br i1 %103, label %179, label %55

104:                                              ; preds = %20
  %105 = tail call i64* @_ZN2v88internal11FactoryBaseINS0_7FactoryEE19NewRawTwoByteStringEiNS0_14AllocationTypeE(%"class.v8::internal::FactoryBase"* %21, i32 %36, i8 zeroext 1) #15
  %106 = icmp eq i64* %105, null
  br i1 %106, label %107, label %108, !prof !3

107:                                              ; preds = %104
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.54, i64 0, i64 0), i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.55, i64 0, i64 0)) #16
  unreachable

108:                                              ; preds = %104
  br i1 %15, label %179, label %109

109:                                              ; preds = %108
  %110 = load i64, i64* %105, align 8
  %111 = add i64 %110, 11
  %112 = inttoptr i64 %111 to i16*
  %113 = sext i32 %36 to i64
  %114 = getelementptr inbounds i16, i16* %112, i64 %113
  br label %115

115:                                              ; preds = %109, %175
  %116 = phi %"struct.v8::internal::AstConsString::Segment"* [ %177, %175 ], [ %10, %109 ]
  %117 = phi i16* [ %130, %175 ], [ %114, %109 ]
  %118 = getelementptr inbounds %"struct.v8::internal::AstConsString::Segment", %"struct.v8::internal::AstConsString::Segment"* %116, i64 0, i32 0
  %119 = load %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"** %118, align 8
  %120 = getelementptr inbounds %"class.v8::internal::AstRawString", %"class.v8::internal::AstRawString"* %119, i64 0, i32 3
  %121 = load i8, i8* %120, align 4, !range !2
  %122 = icmp eq i8 %121, 0
  %123 = getelementptr inbounds %"class.v8::internal::AstRawString", %"class.v8::internal::AstRawString"* %119, i64 0, i32 1, i32 1
  %124 = load i64, i64* %123, align 8
  %125 = trunc i64 %124 to i32
  %126 = sdiv i32 %125, 2
  %127 = select i1 %122, i32 %126, i32 %125
  %128 = sext i32 %127 to i64
  %129 = sub nsw i64 0, %128
  %130 = getelementptr inbounds i16, i16* %117, i64 %129
  %131 = getelementptr inbounds %"class.v8::internal::AstRawString", %"class.v8::internal::AstRawString"* %119, i64 0, i32 1, i32 0
  %132 = load i8*, i8** %131, align 8
  br i1 %122, label %134, label %133

133:                                              ; preds = %115
  tail call void @_ZN2v88internal9CopyCharsIhtEEvPT0_PKT_m(i16* %130, i8* %132, i64 %128)
  br label %175

134:                                              ; preds = %115
  switch i64 %128, label %172 [
    i64 1, label %135
    i64 2, label %138
    i64 3, label %142
    i64 4, label %144
    i64 5, label %148
    i64 6, label %150
    i64 7, label %152
    i64 8, label %154
    i64 9, label %156
    i64 10, label %158
    i64 11, label %160
    i64 12, label %162
    i64 13, label %164
    i64 14, label %166
    i64 15, label %168
    i64 16, label %170
    i64 0, label %175
  ]

135:                                              ; preds = %134
  %136 = bitcast i8* %132 to i16*
  %137 = load i16, i16* %136, align 2
  store i16 %137, i16* %130, align 2
  br label %175

138:                                              ; preds = %134
  %139 = bitcast i8* %132 to i32*
  %140 = bitcast i16* %130 to i32*
  %141 = load i32, i32* %139, align 2
  store i32 %141, i32* %140, align 2
  br label %175

142:                                              ; preds = %134
  %143 = bitcast i16* %130 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 2 %143, i8* align 2 %132, i64 6, i1 false) #15
  br label %175

144:                                              ; preds = %134
  %145 = bitcast i8* %132 to i64*
  %146 = bitcast i16* %130 to i64*
  %147 = load i64, i64* %145, align 2
  store i64 %147, i64* %146, align 2
  br label %175

148:                                              ; preds = %134
  %149 = bitcast i16* %130 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 2 %149, i8* align 2 %132, i64 10, i1 false) #15
  br label %175

150:                                              ; preds = %134
  %151 = bitcast i16* %130 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 2 %151, i8* align 2 %132, i64 12, i1 false) #15
  br label %175

152:                                              ; preds = %134
  %153 = bitcast i16* %130 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 2 %153, i8* align 2 %132, i64 14, i1 false) #15
  br label %175

154:                                              ; preds = %134
  %155 = bitcast i16* %130 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 2 %155, i8* align 2 %132, i64 16, i1 false) #15
  br label %175

156:                                              ; preds = %134
  %157 = bitcast i16* %130 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 2 %157, i8* align 2 %132, i64 18, i1 false) #15
  br label %175

158:                                              ; preds = %134
  %159 = bitcast i16* %130 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 2 %159, i8* align 2 %132, i64 20, i1 false) #15
  br label %175

160:                                              ; preds = %134
  %161 = bitcast i16* %130 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 2 %161, i8* align 2 %132, i64 22, i1 false) #15
  br label %175

162:                                              ; preds = %134
  %163 = bitcast i16* %130 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 2 %163, i8* align 2 %132, i64 24, i1 false) #15
  br label %175

164:                                              ; preds = %134
  %165 = bitcast i16* %130 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 2 %165, i8* align 2 %132, i64 26, i1 false) #15
  br label %175

166:                                              ; preds = %134
  %167 = bitcast i16* %130 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 2 %167, i8* align 2 %132, i64 28, i1 false) #15
  br label %175

168:                                              ; preds = %134
  %169 = bitcast i16* %130 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 2 %169, i8* align 2 %132, i64 30, i1 false) #15
  br label %175

170:                                              ; preds = %134
  %171 = bitcast i16* %130 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 2 %171, i8* align 2 %132, i64 32, i1 false) #15
  br label %175

172:                                              ; preds = %134
  %173 = shl nuw nsw i64 %128, 1
  %174 = bitcast i16* %130 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 2 %174, i8* align 2 %132, i64 %173, i1 false) #15
  br label %175

175:                                              ; preds = %172, %170, %168, %166, %164, %162, %160, %158, %156, %154, %152, %150, %148, %144, %142, %138, %135, %134, %133
  %176 = getelementptr inbounds %"struct.v8::internal::AstConsString::Segment", %"struct.v8::internal::AstConsString::Segment"* %116, i64 0, i32 1
  %177 = load %"struct.v8::internal::AstConsString::Segment"*, %"struct.v8::internal::AstConsString::Segment"** %176, align 8
  %178 = icmp eq %"struct.v8::internal::AstConsString::Segment"* %177, null
  br i1 %178, label %179, label %115

179:                                              ; preds = %175, %100, %108, %48, %18, %7
  %180 = phi i64* [ %8, %7 ], [ %19, %18 ], [ %45, %48 ], [ %105, %108 ], [ %45, %100 ], [ %105, %175 ]
  ret i64* %180
}

declare i64* @_ZN2v88internal11FactoryBaseINS0_7FactoryEE19NewRawOneByteStringEiNS0_14AllocationTypeE(%"class.v8::internal::FactoryBase"*, i32, i8 zeroext) local_unnamed_addr #2

declare i64* @_ZN2v88internal11FactoryBaseINS0_7FactoryEE19NewRawTwoByteStringEiNS0_14AllocationTypeE(%"class.v8::internal::FactoryBase"*, i32, i8 zeroext) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2v88internal9CopyCharsIhtEEvPT0_PKT_m(i16*, i8*, i64) local_unnamed_addr #0 comdat {
  %4 = bitcast i16* %0 to i8*
  switch i64 %2, label %533 [
    i64 1, label %530
    i64 2, label %523
    i64 3, label %512
    i64 4, label %497
    i64 5, label %478
    i64 6, label %455
    i64 7, label %428
    i64 8, label %397
    i64 9, label %362
    i64 10, label %323
    i64 11, label %280
    i64 12, label %233
    i64 13, label %182
    i64 14, label %127
    i64 15, label %68
    i64 16, label %5
  ]

5:                                                ; preds = %3
  %6 = load i8, i8* %1, align 1
  %7 = zext i8 %6 to i16
  store i16 %7, i16* %0, align 2
  %8 = getelementptr inbounds i16, i16* %0, i64 1
  %9 = getelementptr inbounds i8, i8* %1, i64 1
  %10 = load i8, i8* %9, align 1
  %11 = zext i8 %10 to i16
  store i16 %11, i16* %8, align 2
  %12 = getelementptr inbounds i16, i16* %0, i64 2
  %13 = getelementptr inbounds i8, i8* %1, i64 2
  %14 = load i8, i8* %13, align 1
  %15 = zext i8 %14 to i16
  store i16 %15, i16* %12, align 2
  %16 = getelementptr inbounds i16, i16* %0, i64 3
  %17 = getelementptr inbounds i8, i8* %1, i64 3
  %18 = load i8, i8* %17, align 1
  %19 = zext i8 %18 to i16
  store i16 %19, i16* %16, align 2
  %20 = getelementptr inbounds i16, i16* %0, i64 4
  %21 = getelementptr inbounds i8, i8* %1, i64 4
  %22 = load i8, i8* %21, align 1
  %23 = zext i8 %22 to i16
  store i16 %23, i16* %20, align 2
  %24 = getelementptr inbounds i16, i16* %0, i64 5
  %25 = getelementptr inbounds i8, i8* %1, i64 5
  %26 = load i8, i8* %25, align 1
  %27 = zext i8 %26 to i16
  store i16 %27, i16* %24, align 2
  %28 = getelementptr inbounds i16, i16* %0, i64 6
  %29 = getelementptr inbounds i8, i8* %1, i64 6
  %30 = load i8, i8* %29, align 1
  %31 = zext i8 %30 to i16
  store i16 %31, i16* %28, align 2
  %32 = getelementptr inbounds i16, i16* %0, i64 7
  %33 = getelementptr inbounds i8, i8* %1, i64 7
  %34 = load i8, i8* %33, align 1
  %35 = zext i8 %34 to i16
  store i16 %35, i16* %32, align 2
  %36 = getelementptr inbounds i16, i16* %0, i64 8
  %37 = getelementptr inbounds i8, i8* %1, i64 8
  %38 = load i8, i8* %37, align 1
  %39 = zext i8 %38 to i16
  store i16 %39, i16* %36, align 2
  %40 = getelementptr inbounds i16, i16* %0, i64 9
  %41 = getelementptr inbounds i8, i8* %1, i64 9
  %42 = load i8, i8* %41, align 1
  %43 = zext i8 %42 to i16
  store i16 %43, i16* %40, align 2
  %44 = getelementptr inbounds i16, i16* %0, i64 10
  %45 = getelementptr inbounds i8, i8* %1, i64 10
  %46 = load i8, i8* %45, align 1
  %47 = zext i8 %46 to i16
  store i16 %47, i16* %44, align 2
  %48 = getelementptr inbounds i16, i16* %0, i64 11
  %49 = getelementptr inbounds i8, i8* %1, i64 11
  %50 = load i8, i8* %49, align 1
  %51 = zext i8 %50 to i16
  store i16 %51, i16* %48, align 2
  %52 = getelementptr inbounds i16, i16* %0, i64 12
  %53 = getelementptr inbounds i8, i8* %1, i64 12
  %54 = load i8, i8* %53, align 1
  %55 = zext i8 %54 to i16
  store i16 %55, i16* %52, align 2
  %56 = getelementptr inbounds i16, i16* %0, i64 13
  %57 = getelementptr inbounds i8, i8* %1, i64 13
  %58 = load i8, i8* %57, align 1
  %59 = zext i8 %58 to i16
  store i16 %59, i16* %56, align 2
  %60 = getelementptr inbounds i16, i16* %0, i64 14
  %61 = getelementptr inbounds i8, i8* %1, i64 14
  %62 = load i8, i8* %61, align 1
  %63 = zext i8 %62 to i16
  store i16 %63, i16* %60, align 2
  %64 = getelementptr inbounds i16, i16* %0, i64 15
  %65 = getelementptr inbounds i8, i8* %1, i64 15
  %66 = load i8, i8* %65, align 1
  %67 = zext i8 %66 to i16
  store i16 %67, i16* %64, align 2
  br label %615

68:                                               ; preds = %3
  %69 = load i8, i8* %1, align 1
  %70 = zext i8 %69 to i16
  store i16 %70, i16* %0, align 2
  %71 = getelementptr inbounds i16, i16* %0, i64 1
  %72 = getelementptr inbounds i8, i8* %1, i64 1
  %73 = load i8, i8* %72, align 1
  %74 = zext i8 %73 to i16
  store i16 %74, i16* %71, align 2
  %75 = getelementptr inbounds i16, i16* %0, i64 2
  %76 = getelementptr inbounds i8, i8* %1, i64 2
  %77 = load i8, i8* %76, align 1
  %78 = zext i8 %77 to i16
  store i16 %78, i16* %75, align 2
  %79 = getelementptr inbounds i16, i16* %0, i64 3
  %80 = getelementptr inbounds i8, i8* %1, i64 3
  %81 = load i8, i8* %80, align 1
  %82 = zext i8 %81 to i16
  store i16 %82, i16* %79, align 2
  %83 = getelementptr inbounds i16, i16* %0, i64 4
  %84 = getelementptr inbounds i8, i8* %1, i64 4
  %85 = load i8, i8* %84, align 1
  %86 = zext i8 %85 to i16
  store i16 %86, i16* %83, align 2
  %87 = getelementptr inbounds i16, i16* %0, i64 5
  %88 = getelementptr inbounds i8, i8* %1, i64 5
  %89 = load i8, i8* %88, align 1
  %90 = zext i8 %89 to i16
  store i16 %90, i16* %87, align 2
  %91 = getelementptr inbounds i16, i16* %0, i64 6
  %92 = getelementptr inbounds i8, i8* %1, i64 6
  %93 = load i8, i8* %92, align 1
  %94 = zext i8 %93 to i16
  store i16 %94, i16* %91, align 2
  %95 = getelementptr inbounds i16, i16* %0, i64 7
  %96 = getelementptr inbounds i8, i8* %1, i64 7
  %97 = load i8, i8* %96, align 1
  %98 = zext i8 %97 to i16
  store i16 %98, i16* %95, align 2
  %99 = getelementptr inbounds i16, i16* %0, i64 8
  %100 = getelementptr inbounds i8, i8* %1, i64 8
  %101 = load i8, i8* %100, align 1
  %102 = zext i8 %101 to i16
  store i16 %102, i16* %99, align 2
  %103 = getelementptr inbounds i16, i16* %0, i64 9
  %104 = getelementptr inbounds i8, i8* %1, i64 9
  %105 = load i8, i8* %104, align 1
  %106 = zext i8 %105 to i16
  store i16 %106, i16* %103, align 2
  %107 = getelementptr inbounds i16, i16* %0, i64 10
  %108 = getelementptr inbounds i8, i8* %1, i64 10
  %109 = load i8, i8* %108, align 1
  %110 = zext i8 %109 to i16
  store i16 %110, i16* %107, align 2
  %111 = getelementptr inbounds i16, i16* %0, i64 11
  %112 = getelementptr inbounds i8, i8* %1, i64 11
  %113 = load i8, i8* %112, align 1
  %114 = zext i8 %113 to i16
  store i16 %114, i16* %111, align 2
  %115 = getelementptr inbounds i16, i16* %0, i64 12
  %116 = getelementptr inbounds i8, i8* %1, i64 12
  %117 = load i8, i8* %116, align 1
  %118 = zext i8 %117 to i16
  store i16 %118, i16* %115, align 2
  %119 = getelementptr inbounds i16, i16* %0, i64 13
  %120 = getelementptr inbounds i8, i8* %1, i64 13
  %121 = load i8, i8* %120, align 1
  %122 = zext i8 %121 to i16
  store i16 %122, i16* %119, align 2
  %123 = getelementptr inbounds i16, i16* %0, i64 14
  %124 = getelementptr inbounds i8, i8* %1, i64 14
  %125 = load i8, i8* %124, align 1
  %126 = zext i8 %125 to i16
  store i16 %126, i16* %123, align 2
  br label %615

127:                                              ; preds = %3
  %128 = load i8, i8* %1, align 1
  %129 = zext i8 %128 to i16
  store i16 %129, i16* %0, align 2
  %130 = getelementptr inbounds i16, i16* %0, i64 1
  %131 = getelementptr inbounds i8, i8* %1, i64 1
  %132 = load i8, i8* %131, align 1
  %133 = zext i8 %132 to i16
  store i16 %133, i16* %130, align 2
  %134 = getelementptr inbounds i16, i16* %0, i64 2
  %135 = getelementptr inbounds i8, i8* %1, i64 2
  %136 = load i8, i8* %135, align 1
  %137 = zext i8 %136 to i16
  store i16 %137, i16* %134, align 2
  %138 = getelementptr inbounds i16, i16* %0, i64 3
  %139 = getelementptr inbounds i8, i8* %1, i64 3
  %140 = load i8, i8* %139, align 1
  %141 = zext i8 %140 to i16
  store i16 %141, i16* %138, align 2
  %142 = getelementptr inbounds i16, i16* %0, i64 4
  %143 = getelementptr inbounds i8, i8* %1, i64 4
  %144 = load i8, i8* %143, align 1
  %145 = zext i8 %144 to i16
  store i16 %145, i16* %142, align 2
  %146 = getelementptr inbounds i16, i16* %0, i64 5
  %147 = getelementptr inbounds i8, i8* %1, i64 5
  %148 = load i8, i8* %147, align 1
  %149 = zext i8 %148 to i16
  store i16 %149, i16* %146, align 2
  %150 = getelementptr inbounds i16, i16* %0, i64 6
  %151 = getelementptr inbounds i8, i8* %1, i64 6
  %152 = load i8, i8* %151, align 1
  %153 = zext i8 %152 to i16
  store i16 %153, i16* %150, align 2
  %154 = getelementptr inbounds i16, i16* %0, i64 7
  %155 = getelementptr inbounds i8, i8* %1, i64 7
  %156 = load i8, i8* %155, align 1
  %157 = zext i8 %156 to i16
  store i16 %157, i16* %154, align 2
  %158 = getelementptr inbounds i16, i16* %0, i64 8
  %159 = getelementptr inbounds i8, i8* %1, i64 8
  %160 = load i8, i8* %159, align 1
  %161 = zext i8 %160 to i16
  store i16 %161, i16* %158, align 2
  %162 = getelementptr inbounds i16, i16* %0, i64 9
  %163 = getelementptr inbounds i8, i8* %1, i64 9
  %164 = load i8, i8* %163, align 1
  %165 = zext i8 %164 to i16
  store i16 %165, i16* %162, align 2
  %166 = getelementptr inbounds i16, i16* %0, i64 10
  %167 = getelementptr inbounds i8, i8* %1, i64 10
  %168 = load i8, i8* %167, align 1
  %169 = zext i8 %168 to i16
  store i16 %169, i16* %166, align 2
  %170 = getelementptr inbounds i16, i16* %0, i64 11
  %171 = getelementptr inbounds i8, i8* %1, i64 11
  %172 = load i8, i8* %171, align 1
  %173 = zext i8 %172 to i16
  store i16 %173, i16* %170, align 2
  %174 = getelementptr inbounds i16, i16* %0, i64 12
  %175 = getelementptr inbounds i8, i8* %1, i64 12
  %176 = load i8, i8* %175, align 1
  %177 = zext i8 %176 to i16
  store i16 %177, i16* %174, align 2
  %178 = getelementptr inbounds i16, i16* %0, i64 13
  %179 = getelementptr inbounds i8, i8* %1, i64 13
  %180 = load i8, i8* %179, align 1
  %181 = zext i8 %180 to i16
  store i16 %181, i16* %178, align 2
  br label %615

182:                                              ; preds = %3
  %183 = load i8, i8* %1, align 1
  %184 = zext i8 %183 to i16
  store i16 %184, i16* %0, align 2
  %185 = getelementptr inbounds i16, i16* %0, i64 1
  %186 = getelementptr inbounds i8, i8* %1, i64 1
  %187 = load i8, i8* %186, align 1
  %188 = zext i8 %187 to i16
  store i16 %188, i16* %185, align 2
  %189 = getelementptr inbounds i16, i16* %0, i64 2
  %190 = getelementptr inbounds i8, i8* %1, i64 2
  %191 = load i8, i8* %190, align 1
  %192 = zext i8 %191 to i16
  store i16 %192, i16* %189, align 2
  %193 = getelementptr inbounds i16, i16* %0, i64 3
  %194 = getelementptr inbounds i8, i8* %1, i64 3
  %195 = load i8, i8* %194, align 1
  %196 = zext i8 %195 to i16
  store i16 %196, i16* %193, align 2
  %197 = getelementptr inbounds i16, i16* %0, i64 4
  %198 = getelementptr inbounds i8, i8* %1, i64 4
  %199 = load i8, i8* %198, align 1
  %200 = zext i8 %199 to i16
  store i16 %200, i16* %197, align 2
  %201 = getelementptr inbounds i16, i16* %0, i64 5
  %202 = getelementptr inbounds i8, i8* %1, i64 5
  %203 = load i8, i8* %202, align 1
  %204 = zext i8 %203 to i16
  store i16 %204, i16* %201, align 2
  %205 = getelementptr inbounds i16, i16* %0, i64 6
  %206 = getelementptr inbounds i8, i8* %1, i64 6
  %207 = load i8, i8* %206, align 1
  %208 = zext i8 %207 to i16
  store i16 %208, i16* %205, align 2
  %209 = getelementptr inbounds i16, i16* %0, i64 7
  %210 = getelementptr inbounds i8, i8* %1, i64 7
  %211 = load i8, i8* %210, align 1
  %212 = zext i8 %211 to i16
  store i16 %212, i16* %209, align 2
  %213 = getelementptr inbounds i16, i16* %0, i64 8
  %214 = getelementptr inbounds i8, i8* %1, i64 8
  %215 = load i8, i8* %214, align 1
  %216 = zext i8 %215 to i16
  store i16 %216, i16* %213, align 2
  %217 = getelementptr inbounds i16, i16* %0, i64 9
  %218 = getelementptr inbounds i8, i8* %1, i64 9
  %219 = load i8, i8* %218, align 1
  %220 = zext i8 %219 to i16
  store i16 %220, i16* %217, align 2
  %221 = getelementptr inbounds i16, i16* %0, i64 10
  %222 = getelementptr inbounds i8, i8* %1, i64 10
  %223 = load i8, i8* %222, align 1
  %224 = zext i8 %223 to i16
  store i16 %224, i16* %221, align 2
  %225 = getelementptr inbounds i16, i16* %0, i64 11
  %226 = getelementptr inbounds i8, i8* %1, i64 11
  %227 = load i8, i8* %226, align 1
  %228 = zext i8 %227 to i16
  store i16 %228, i16* %225, align 2
  %229 = getelementptr inbounds i16, i16* %0, i64 12
  %230 = getelementptr inbounds i8, i8* %1, i64 12
  %231 = load i8, i8* %230, align 1
  %232 = zext i8 %231 to i16
  store i16 %232, i16* %229, align 2
  br label %615

233:                                              ; preds = %3
  %234 = load i8, i8* %1, align 1
  %235 = zext i8 %234 to i16
  store i16 %235, i16* %0, align 2
  %236 = getelementptr inbounds i16, i16* %0, i64 1
  %237 = getelementptr inbounds i8, i8* %1, i64 1
  %238 = load i8, i8* %237, align 1
  %239 = zext i8 %238 to i16
  store i16 %239, i16* %236, align 2
  %240 = getelementptr inbounds i16, i16* %0, i64 2
  %241 = getelementptr inbounds i8, i8* %1, i64 2
  %242 = load i8, i8* %241, align 1
  %243 = zext i8 %242 to i16
  store i16 %243, i16* %240, align 2
  %244 = getelementptr inbounds i16, i16* %0, i64 3
  %245 = getelementptr inbounds i8, i8* %1, i64 3
  %246 = load i8, i8* %245, align 1
  %247 = zext i8 %246 to i16
  store i16 %247, i16* %244, align 2
  %248 = getelementptr inbounds i16, i16* %0, i64 4
  %249 = getelementptr inbounds i8, i8* %1, i64 4
  %250 = load i8, i8* %249, align 1
  %251 = zext i8 %250 to i16
  store i16 %251, i16* %248, align 2
  %252 = getelementptr inbounds i16, i16* %0, i64 5
  %253 = getelementptr inbounds i8, i8* %1, i64 5
  %254 = load i8, i8* %253, align 1
  %255 = zext i8 %254 to i16
  store i16 %255, i16* %252, align 2
  %256 = getelementptr inbounds i16, i16* %0, i64 6
  %257 = getelementptr inbounds i8, i8* %1, i64 6
  %258 = load i8, i8* %257, align 1
  %259 = zext i8 %258 to i16
  store i16 %259, i16* %256, align 2
  %260 = getelementptr inbounds i16, i16* %0, i64 7
  %261 = getelementptr inbounds i8, i8* %1, i64 7
  %262 = load i8, i8* %261, align 1
  %263 = zext i8 %262 to i16
  store i16 %263, i16* %260, align 2
  %264 = getelementptr inbounds i16, i16* %0, i64 8
  %265 = getelementptr inbounds i8, i8* %1, i64 8
  %266 = load i8, i8* %265, align 1
  %267 = zext i8 %266 to i16
  store i16 %267, i16* %264, align 2
  %268 = getelementptr inbounds i16, i16* %0, i64 9
  %269 = getelementptr inbounds i8, i8* %1, i64 9
  %270 = load i8, i8* %269, align 1
  %271 = zext i8 %270 to i16
  store i16 %271, i16* %268, align 2
  %272 = getelementptr inbounds i16, i16* %0, i64 10
  %273 = getelementptr inbounds i8, i8* %1, i64 10
  %274 = load i8, i8* %273, align 1
  %275 = zext i8 %274 to i16
  store i16 %275, i16* %272, align 2
  %276 = getelementptr inbounds i16, i16* %0, i64 11
  %277 = getelementptr inbounds i8, i8* %1, i64 11
  %278 = load i8, i8* %277, align 1
  %279 = zext i8 %278 to i16
  store i16 %279, i16* %276, align 2
  br label %615

280:                                              ; preds = %3
  %281 = load i8, i8* %1, align 1
  %282 = zext i8 %281 to i16
  store i16 %282, i16* %0, align 2
  %283 = getelementptr inbounds i16, i16* %0, i64 1
  %284 = getelementptr inbounds i8, i8* %1, i64 1
  %285 = load i8, i8* %284, align 1
  %286 = zext i8 %285 to i16
  store i16 %286, i16* %283, align 2
  %287 = getelementptr inbounds i16, i16* %0, i64 2
  %288 = getelementptr inbounds i8, i8* %1, i64 2
  %289 = load i8, i8* %288, align 1
  %290 = zext i8 %289 to i16
  store i16 %290, i16* %287, align 2
  %291 = getelementptr inbounds i16, i16* %0, i64 3
  %292 = getelementptr inbounds i8, i8* %1, i64 3
  %293 = load i8, i8* %292, align 1
  %294 = zext i8 %293 to i16
  store i16 %294, i16* %291, align 2
  %295 = getelementptr inbounds i16, i16* %0, i64 4
  %296 = getelementptr inbounds i8, i8* %1, i64 4
  %297 = load i8, i8* %296, align 1
  %298 = zext i8 %297 to i16
  store i16 %298, i16* %295, align 2
  %299 = getelementptr inbounds i16, i16* %0, i64 5
  %300 = getelementptr inbounds i8, i8* %1, i64 5
  %301 = load i8, i8* %300, align 1
  %302 = zext i8 %301 to i16
  store i16 %302, i16* %299, align 2
  %303 = getelementptr inbounds i16, i16* %0, i64 6
  %304 = getelementptr inbounds i8, i8* %1, i64 6
  %305 = load i8, i8* %304, align 1
  %306 = zext i8 %305 to i16
  store i16 %306, i16* %303, align 2
  %307 = getelementptr inbounds i16, i16* %0, i64 7
  %308 = getelementptr inbounds i8, i8* %1, i64 7
  %309 = load i8, i8* %308, align 1
  %310 = zext i8 %309 to i16
  store i16 %310, i16* %307, align 2
  %311 = getelementptr inbounds i16, i16* %0, i64 8
  %312 = getelementptr inbounds i8, i8* %1, i64 8
  %313 = load i8, i8* %312, align 1
  %314 = zext i8 %313 to i16
  store i16 %314, i16* %311, align 2
  %315 = getelementptr inbounds i16, i16* %0, i64 9
  %316 = getelementptr inbounds i8, i8* %1, i64 9
  %317 = load i8, i8* %316, align 1
  %318 = zext i8 %317 to i16
  store i16 %318, i16* %315, align 2
  %319 = getelementptr inbounds i16, i16* %0, i64 10
  %320 = getelementptr inbounds i8, i8* %1, i64 10
  %321 = load i8, i8* %320, align 1
  %322 = zext i8 %321 to i16
  store i16 %322, i16* %319, align 2
  br label %615

323:                                              ; preds = %3
  %324 = load i8, i8* %1, align 1
  %325 = zext i8 %324 to i16
  store i16 %325, i16* %0, align 2
  %326 = getelementptr inbounds i16, i16* %0, i64 1
  %327 = getelementptr inbounds i8, i8* %1, i64 1
  %328 = load i8, i8* %327, align 1
  %329 = zext i8 %328 to i16
  store i16 %329, i16* %326, align 2
  %330 = getelementptr inbounds i16, i16* %0, i64 2
  %331 = getelementptr inbounds i8, i8* %1, i64 2
  %332 = load i8, i8* %331, align 1
  %333 = zext i8 %332 to i16
  store i16 %333, i16* %330, align 2
  %334 = getelementptr inbounds i16, i16* %0, i64 3
  %335 = getelementptr inbounds i8, i8* %1, i64 3
  %336 = load i8, i8* %335, align 1
  %337 = zext i8 %336 to i16
  store i16 %337, i16* %334, align 2
  %338 = getelementptr inbounds i16, i16* %0, i64 4
  %339 = getelementptr inbounds i8, i8* %1, i64 4
  %340 = load i8, i8* %339, align 1
  %341 = zext i8 %340 to i16
  store i16 %341, i16* %338, align 2
  %342 = getelementptr inbounds i16, i16* %0, i64 5
  %343 = getelementptr inbounds i8, i8* %1, i64 5
  %344 = load i8, i8* %343, align 1
  %345 = zext i8 %344 to i16
  store i16 %345, i16* %342, align 2
  %346 = getelementptr inbounds i16, i16* %0, i64 6
  %347 = getelementptr inbounds i8, i8* %1, i64 6
  %348 = load i8, i8* %347, align 1
  %349 = zext i8 %348 to i16
  store i16 %349, i16* %346, align 2
  %350 = getelementptr inbounds i16, i16* %0, i64 7
  %351 = getelementptr inbounds i8, i8* %1, i64 7
  %352 = load i8, i8* %351, align 1
  %353 = zext i8 %352 to i16
  store i16 %353, i16* %350, align 2
  %354 = getelementptr inbounds i16, i16* %0, i64 8
  %355 = getelementptr inbounds i8, i8* %1, i64 8
  %356 = load i8, i8* %355, align 1
  %357 = zext i8 %356 to i16
  store i16 %357, i16* %354, align 2
  %358 = getelementptr inbounds i16, i16* %0, i64 9
  %359 = getelementptr inbounds i8, i8* %1, i64 9
  %360 = load i8, i8* %359, align 1
  %361 = zext i8 %360 to i16
  store i16 %361, i16* %358, align 2
  br label %615

362:                                              ; preds = %3
  %363 = load i8, i8* %1, align 1
  %364 = zext i8 %363 to i16
  store i16 %364, i16* %0, align 2
  %365 = getelementptr inbounds i16, i16* %0, i64 1
  %366 = getelementptr inbounds i8, i8* %1, i64 1
  %367 = load i8, i8* %366, align 1
  %368 = zext i8 %367 to i16
  store i16 %368, i16* %365, align 2
  %369 = getelementptr inbounds i16, i16* %0, i64 2
  %370 = getelementptr inbounds i8, i8* %1, i64 2
  %371 = load i8, i8* %370, align 1
  %372 = zext i8 %371 to i16
  store i16 %372, i16* %369, align 2
  %373 = getelementptr inbounds i16, i16* %0, i64 3
  %374 = getelementptr inbounds i8, i8* %1, i64 3
  %375 = load i8, i8* %374, align 1
  %376 = zext i8 %375 to i16
  store i16 %376, i16* %373, align 2
  %377 = getelementptr inbounds i16, i16* %0, i64 4
  %378 = getelementptr inbounds i8, i8* %1, i64 4
  %379 = load i8, i8* %378, align 1
  %380 = zext i8 %379 to i16
  store i16 %380, i16* %377, align 2
  %381 = getelementptr inbounds i16, i16* %0, i64 5
  %382 = getelementptr inbounds i8, i8* %1, i64 5
  %383 = load i8, i8* %382, align 1
  %384 = zext i8 %383 to i16
  store i16 %384, i16* %381, align 2
  %385 = getelementptr inbounds i16, i16* %0, i64 6
  %386 = getelementptr inbounds i8, i8* %1, i64 6
  %387 = load i8, i8* %386, align 1
  %388 = zext i8 %387 to i16
  store i16 %388, i16* %385, align 2
  %389 = getelementptr inbounds i16, i16* %0, i64 7
  %390 = getelementptr inbounds i8, i8* %1, i64 7
  %391 = load i8, i8* %390, align 1
  %392 = zext i8 %391 to i16
  store i16 %392, i16* %389, align 2
  %393 = getelementptr inbounds i16, i16* %0, i64 8
  %394 = getelementptr inbounds i8, i8* %1, i64 8
  %395 = load i8, i8* %394, align 1
  %396 = zext i8 %395 to i16
  store i16 %396, i16* %393, align 2
  br label %615

397:                                              ; preds = %3
  %398 = load i8, i8* %1, align 1
  %399 = zext i8 %398 to i16
  store i16 %399, i16* %0, align 2
  %400 = getelementptr inbounds i16, i16* %0, i64 1
  %401 = getelementptr inbounds i8, i8* %1, i64 1
  %402 = load i8, i8* %401, align 1
  %403 = zext i8 %402 to i16
  store i16 %403, i16* %400, align 2
  %404 = getelementptr inbounds i16, i16* %0, i64 2
  %405 = getelementptr inbounds i8, i8* %1, i64 2
  %406 = load i8, i8* %405, align 1
  %407 = zext i8 %406 to i16
  store i16 %407, i16* %404, align 2
  %408 = getelementptr inbounds i16, i16* %0, i64 3
  %409 = getelementptr inbounds i8, i8* %1, i64 3
  %410 = load i8, i8* %409, align 1
  %411 = zext i8 %410 to i16
  store i16 %411, i16* %408, align 2
  %412 = getelementptr inbounds i16, i16* %0, i64 4
  %413 = getelementptr inbounds i8, i8* %1, i64 4
  %414 = load i8, i8* %413, align 1
  %415 = zext i8 %414 to i16
  store i16 %415, i16* %412, align 2
  %416 = getelementptr inbounds i16, i16* %0, i64 5
  %417 = getelementptr inbounds i8, i8* %1, i64 5
  %418 = load i8, i8* %417, align 1
  %419 = zext i8 %418 to i16
  store i16 %419, i16* %416, align 2
  %420 = getelementptr inbounds i16, i16* %0, i64 6
  %421 = getelementptr inbounds i8, i8* %1, i64 6
  %422 = load i8, i8* %421, align 1
  %423 = zext i8 %422 to i16
  store i16 %423, i16* %420, align 2
  %424 = getelementptr inbounds i16, i16* %0, i64 7
  %425 = getelementptr inbounds i8, i8* %1, i64 7
  %426 = load i8, i8* %425, align 1
  %427 = zext i8 %426 to i16
  store i16 %427, i16* %424, align 2
  br label %615

428:                                              ; preds = %3
  %429 = load i8, i8* %1, align 1
  %430 = zext i8 %429 to i16
  store i16 %430, i16* %0, align 2
  %431 = getelementptr inbounds i16, i16* %0, i64 1
  %432 = getelementptr inbounds i8, i8* %1, i64 1
  %433 = load i8, i8* %432, align 1
  %434 = zext i8 %433 to i16
  store i16 %434, i16* %431, align 2
  %435 = getelementptr inbounds i16, i16* %0, i64 2
  %436 = getelementptr inbounds i8, i8* %1, i64 2
  %437 = load i8, i8* %436, align 1
  %438 = zext i8 %437 to i16
  store i16 %438, i16* %435, align 2
  %439 = getelementptr inbounds i16, i16* %0, i64 3
  %440 = getelementptr inbounds i8, i8* %1, i64 3
  %441 = load i8, i8* %440, align 1
  %442 = zext i8 %441 to i16
  store i16 %442, i16* %439, align 2
  %443 = getelementptr inbounds i16, i16* %0, i64 4
  %444 = getelementptr inbounds i8, i8* %1, i64 4
  %445 = load i8, i8* %444, align 1
  %446 = zext i8 %445 to i16
  store i16 %446, i16* %443, align 2
  %447 = getelementptr inbounds i16, i16* %0, i64 5
  %448 = getelementptr inbounds i8, i8* %1, i64 5
  %449 = load i8, i8* %448, align 1
  %450 = zext i8 %449 to i16
  store i16 %450, i16* %447, align 2
  %451 = getelementptr inbounds i16, i16* %0, i64 6
  %452 = getelementptr inbounds i8, i8* %1, i64 6
  %453 = load i8, i8* %452, align 1
  %454 = zext i8 %453 to i16
  store i16 %454, i16* %451, align 2
  br label %615

455:                                              ; preds = %3
  %456 = load i8, i8* %1, align 1
  %457 = zext i8 %456 to i16
  store i16 %457, i16* %0, align 2
  %458 = getelementptr inbounds i16, i16* %0, i64 1
  %459 = getelementptr inbounds i8, i8* %1, i64 1
  %460 = load i8, i8* %459, align 1
  %461 = zext i8 %460 to i16
  store i16 %461, i16* %458, align 2
  %462 = getelementptr inbounds i16, i16* %0, i64 2
  %463 = getelementptr inbounds i8, i8* %1, i64 2
  %464 = load i8, i8* %463, align 1
  %465 = zext i8 %464 to i16
  store i16 %465, i16* %462, align 2
  %466 = getelementptr inbounds i16, i16* %0, i64 3
  %467 = getelementptr inbounds i8, i8* %1, i64 3
  %468 = load i8, i8* %467, align 1
  %469 = zext i8 %468 to i16
  store i16 %469, i16* %466, align 2
  %470 = getelementptr inbounds i16, i16* %0, i64 4
  %471 = getelementptr inbounds i8, i8* %1, i64 4
  %472 = load i8, i8* %471, align 1
  %473 = zext i8 %472 to i16
  store i16 %473, i16* %470, align 2
  %474 = getelementptr inbounds i16, i16* %0, i64 5
  %475 = getelementptr inbounds i8, i8* %1, i64 5
  %476 = load i8, i8* %475, align 1
  %477 = zext i8 %476 to i16
  store i16 %477, i16* %474, align 2
  br label %615

478:                                              ; preds = %3
  %479 = load i8, i8* %1, align 1
  %480 = zext i8 %479 to i16
  store i16 %480, i16* %0, align 2
  %481 = getelementptr inbounds i16, i16* %0, i64 1
  %482 = getelementptr inbounds i8, i8* %1, i64 1
  %483 = load i8, i8* %482, align 1
  %484 = zext i8 %483 to i16
  store i16 %484, i16* %481, align 2
  %485 = getelementptr inbounds i16, i16* %0, i64 2
  %486 = getelementptr inbounds i8, i8* %1, i64 2
  %487 = load i8, i8* %486, align 1
  %488 = zext i8 %487 to i16
  store i16 %488, i16* %485, align 2
  %489 = getelementptr inbounds i16, i16* %0, i64 3
  %490 = getelementptr inbounds i8, i8* %1, i64 3
  %491 = load i8, i8* %490, align 1
  %492 = zext i8 %491 to i16
  store i16 %492, i16* %489, align 2
  %493 = getelementptr inbounds i16, i16* %0, i64 4
  %494 = getelementptr inbounds i8, i8* %1, i64 4
  %495 = load i8, i8* %494, align 1
  %496 = zext i8 %495 to i16
  store i16 %496, i16* %493, align 2
  br label %615

497:                                              ; preds = %3
  %498 = load i8, i8* %1, align 1
  %499 = zext i8 %498 to i16
  store i16 %499, i16* %0, align 2
  %500 = getelementptr inbounds i16, i16* %0, i64 1
  %501 = getelementptr inbounds i8, i8* %1, i64 1
  %502 = load i8, i8* %501, align 1
  %503 = zext i8 %502 to i16
  store i16 %503, i16* %500, align 2
  %504 = getelementptr inbounds i16, i16* %0, i64 2
  %505 = getelementptr inbounds i8, i8* %1, i64 2
  %506 = load i8, i8* %505, align 1
  %507 = zext i8 %506 to i16
  store i16 %507, i16* %504, align 2
  %508 = getelementptr inbounds i16, i16* %0, i64 3
  %509 = getelementptr inbounds i8, i8* %1, i64 3
  %510 = load i8, i8* %509, align 1
  %511 = zext i8 %510 to i16
  store i16 %511, i16* %508, align 2
  br label %615

512:                                              ; preds = %3
  %513 = load i8, i8* %1, align 1
  %514 = zext i8 %513 to i16
  store i16 %514, i16* %0, align 2
  %515 = getelementptr inbounds i16, i16* %0, i64 1
  %516 = getelementptr inbounds i8, i8* %1, i64 1
  %517 = load i8, i8* %516, align 1
  %518 = zext i8 %517 to i16
  store i16 %518, i16* %515, align 2
  %519 = getelementptr inbounds i16, i16* %0, i64 2
  %520 = getelementptr inbounds i8, i8* %1, i64 2
  %521 = load i8, i8* %520, align 1
  %522 = zext i8 %521 to i16
  store i16 %522, i16* %519, align 2
  br label %615

523:                                              ; preds = %3
  %524 = load i8, i8* %1, align 1
  %525 = zext i8 %524 to i16
  store i16 %525, i16* %0, align 2
  %526 = getelementptr inbounds i16, i16* %0, i64 1
  %527 = getelementptr inbounds i8, i8* %1, i64 1
  %528 = load i8, i8* %527, align 1
  %529 = zext i8 %528 to i16
  store i16 %529, i16* %526, align 2
  br label %615

530:                                              ; preds = %3
  %531 = load i8, i8* %1, align 1
  %532 = zext i8 %531 to i16
  store i16 %532, i16* %0, align 2
  br label %615

533:                                              ; preds = %3
  %534 = getelementptr inbounds i8, i8* %1, i64 %2
  %535 = icmp eq i64 %2, 0
  br i1 %535, label %615, label %536

536:                                              ; preds = %533
  %537 = icmp ult i64 %2, 16
  br i1 %537, label %604, label %538

538:                                              ; preds = %536
  %539 = getelementptr i16, i16* %0, i64 %2
  %540 = bitcast i16* %539 to i8*
  %541 = icmp ugt i8* %534, %4
  %542 = icmp ugt i8* %540, %1
  %543 = and i1 %541, %542
  br i1 %543, label %604, label %544

544:                                              ; preds = %538
  %545 = and i64 %2, -16
  %546 = getelementptr i16, i16* %0, i64 %545
  %547 = getelementptr i8, i8* %1, i64 %545
  %548 = add i64 %545, -16
  %549 = lshr exact i64 %548, 4
  %550 = add nuw nsw i64 %549, 1
  %551 = and i64 %550, 1
  %552 = icmp eq i64 %548, 0
  br i1 %552, label %586, label %553

553:                                              ; preds = %544
  %554 = sub nuw nsw i64 %550, %551
  br label %555

555:                                              ; preds = %555, %553
  %556 = phi i64 [ 0, %553 ], [ %583, %555 ]
  %557 = phi i64 [ %554, %553 ], [ %584, %555 ]
  %558 = getelementptr i16, i16* %0, i64 %556
  %559 = getelementptr i8, i8* %1, i64 %556
  %560 = bitcast i8* %559 to <8 x i8>*
  %561 = load <8 x i8>, <8 x i8>* %560, align 1, !alias.scope !4
  %562 = getelementptr i8, i8* %559, i64 8
  %563 = bitcast i8* %562 to <8 x i8>*
  %564 = load <8 x i8>, <8 x i8>* %563, align 1, !alias.scope !4
  %565 = zext <8 x i8> %561 to <8 x i16>
  %566 = zext <8 x i8> %564 to <8 x i16>
  %567 = bitcast i16* %558 to <8 x i16>*
  store <8 x i16> %565, <8 x i16>* %567, align 2, !alias.scope !7, !noalias !4
  %568 = getelementptr i16, i16* %558, i64 8
  %569 = bitcast i16* %568 to <8 x i16>*
  store <8 x i16> %566, <8 x i16>* %569, align 2, !alias.scope !7, !noalias !4
  %570 = or i64 %556, 16
  %571 = getelementptr i16, i16* %0, i64 %570
  %572 = getelementptr i8, i8* %1, i64 %570
  %573 = bitcast i8* %572 to <8 x i8>*
  %574 = load <8 x i8>, <8 x i8>* %573, align 1, !alias.scope !4
  %575 = getelementptr i8, i8* %572, i64 8
  %576 = bitcast i8* %575 to <8 x i8>*
  %577 = load <8 x i8>, <8 x i8>* %576, align 1, !alias.scope !4
  %578 = zext <8 x i8> %574 to <8 x i16>
  %579 = zext <8 x i8> %577 to <8 x i16>
  %580 = bitcast i16* %571 to <8 x i16>*
  store <8 x i16> %578, <8 x i16>* %580, align 2, !alias.scope !7, !noalias !4
  %581 = getelementptr i16, i16* %571, i64 8
  %582 = bitcast i16* %581 to <8 x i16>*
  store <8 x i16> %579, <8 x i16>* %582, align 2, !alias.scope !7, !noalias !4
  %583 = add i64 %556, 32
  %584 = add i64 %557, -2
  %585 = icmp eq i64 %584, 0
  br i1 %585, label %586, label %555, !llvm.loop !9

586:                                              ; preds = %555, %544
  %587 = phi i64 [ 0, %544 ], [ %583, %555 ]
  %588 = icmp eq i64 %551, 0
  br i1 %588, label %602, label %589

589:                                              ; preds = %586
  %590 = getelementptr i16, i16* %0, i64 %587
  %591 = getelementptr i8, i8* %1, i64 %587
  %592 = bitcast i8* %591 to <8 x i8>*
  %593 = load <8 x i8>, <8 x i8>* %592, align 1, !alias.scope !4
  %594 = getelementptr i8, i8* %591, i64 8
  %595 = bitcast i8* %594 to <8 x i8>*
  %596 = load <8 x i8>, <8 x i8>* %595, align 1, !alias.scope !4
  %597 = zext <8 x i8> %593 to <8 x i16>
  %598 = zext <8 x i8> %596 to <8 x i16>
  %599 = bitcast i16* %590 to <8 x i16>*
  store <8 x i16> %597, <8 x i16>* %599, align 2, !alias.scope !7, !noalias !4
  %600 = getelementptr i16, i16* %590, i64 8
  %601 = bitcast i16* %600 to <8 x i16>*
  store <8 x i16> %598, <8 x i16>* %601, align 2, !alias.scope !7, !noalias !4
  br label %602

602:                                              ; preds = %586, %589
  %603 = icmp eq i64 %545, %2
  br i1 %603, label %615, label %604

604:                                              ; preds = %602, %538, %536
  %605 = phi i16* [ %0, %538 ], [ %0, %536 ], [ %546, %602 ]
  %606 = phi i8* [ %1, %538 ], [ %1, %536 ], [ %547, %602 ]
  br label %607

607:                                              ; preds = %604, %607
  %608 = phi i16* [ %613, %607 ], [ %605, %604 ]
  %609 = phi i8* [ %612, %607 ], [ %606, %604 ]
  %610 = load i8, i8* %609, align 1
  %611 = zext i8 %610 to i16
  store i16 %611, i16* %608, align 2
  %612 = getelementptr inbounds i8, i8* %609, i64 1
  %613 = getelementptr inbounds i16, i16* %608, i64 1
  %614 = icmp eq i8* %612, %534
  br i1 %614, label %615, label %607, !llvm.loop !11

615:                                              ; preds = %607, %602, %5, %68, %127, %182, %233, %280, %323, %362, %397, %428, %455, %478, %497, %512, %523, %530, %533
  ret void
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden i64* @_ZNK2v88internal13AstConsString12AllocateFlatINS0_12LocalIsolateEEENS0_6HandleINS0_6StringEEEPT_(%"class.v8::internal::AstConsString"*, %"class.v8::internal::LocalIsolate"*) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.v8::internal::AstConsString", %"class.v8::internal::AstConsString"* %0, i64 0, i32 1, i32 0
  %4 = load %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"** %3, align 8
  %5 = icmp eq %"class.v8::internal::AstRawString"* %4, null
  %6 = bitcast %"class.v8::internal::AstRawString"* %4 to i64**
  br i1 %5, label %7, label %11

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"class.v8::internal::LocalIsolate", %"class.v8::internal::LocalIsolate"* %1, i64 0, i32 0, i32 0, i32 0, i32 0
  %9 = load i64*, i64** %8, align 8
  %10 = getelementptr inbounds i64, i64* %9, i64 9
  br label %181

11:                                               ; preds = %2
  %12 = getelementptr inbounds %"class.v8::internal::AstConsString", %"class.v8::internal::AstConsString"* %0, i64 0, i32 1
  %13 = getelementptr inbounds %"class.v8::internal::AstConsString", %"class.v8::internal::AstConsString"* %0, i64 0, i32 1, i32 1
  %14 = load %"struct.v8::internal::AstConsString::Segment"*, %"struct.v8::internal::AstConsString::Segment"** %13, align 8
  %15 = icmp eq %"struct.v8::internal::AstConsString::Segment"* %14, null
  br i1 %15, label %20, label %16

16:                                               ; preds = %11
  %17 = icmp eq %"struct.v8::internal::AstConsString::Segment"* %12, null
  br i1 %17, label %18, label %24

18:                                               ; preds = %16
  %19 = bitcast %"class.v8::internal::LocalIsolate"* %1 to %"class.v8::internal::FactoryBase.1051"*
  br label %44

20:                                               ; preds = %11
  %21 = load i64*, i64** %6, align 8
  br label %181

22:                                               ; preds = %24
  %23 = bitcast %"class.v8::internal::LocalIsolate"* %1 to %"class.v8::internal::FactoryBase.1051"*
  br i1 %40, label %44, label %106

24:                                               ; preds = %16, %24
  %25 = phi i32 [ %38, %24 ], [ 0, %16 ]
  %26 = phi i1 [ %40, %24 ], [ true, %16 ]
  %27 = phi %"struct.v8::internal::AstConsString::Segment"* [ %42, %24 ], [ %12, %16 ]
  %28 = getelementptr inbounds %"struct.v8::internal::AstConsString::Segment", %"struct.v8::internal::AstConsString::Segment"* %27, i64 0, i32 0
  %29 = load %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"** %28, align 8
  %30 = getelementptr inbounds %"class.v8::internal::AstRawString", %"class.v8::internal::AstRawString"* %29, i64 0, i32 3
  %31 = load i8, i8* %30, align 4, !range !2
  %32 = icmp eq i8 %31, 0
  %33 = getelementptr inbounds %"class.v8::internal::AstRawString", %"class.v8::internal::AstRawString"* %29, i64 0, i32 1, i32 1
  %34 = load i64, i64* %33, align 8
  %35 = trunc i64 %34 to i32
  %36 = sdiv i32 %35, 2
  %37 = select i1 %32, i32 %36, i32 %35
  %38 = add nsw i32 %37, %25
  %39 = icmp ne i8 %31, 0
  %40 = and i1 %26, %39
  %41 = getelementptr inbounds %"struct.v8::internal::AstConsString::Segment", %"struct.v8::internal::AstConsString::Segment"* %27, i64 0, i32 1
  %42 = load %"struct.v8::internal::AstConsString::Segment"*, %"struct.v8::internal::AstConsString::Segment"** %41, align 8
  %43 = icmp eq %"struct.v8::internal::AstConsString::Segment"* %42, null
  br i1 %43, label %22, label %24

44:                                               ; preds = %18, %22
  %45 = phi %"class.v8::internal::FactoryBase.1051"* [ %19, %18 ], [ %23, %22 ]
  %46 = phi i32 [ 0, %18 ], [ %38, %22 ]
  %47 = tail call i64* @_ZN2v88internal11FactoryBaseINS0_12LocalFactoryEE19NewRawOneByteStringEiNS0_14AllocationTypeE(%"class.v8::internal::FactoryBase.1051"* %45, i32 %46, i8 zeroext 1) #15
  %48 = icmp eq i64* %47, null
  br i1 %48, label %49, label %50, !prof !3

49:                                               ; preds = %44
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.54, i64 0, i64 0), i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.55, i64 0, i64 0)) #16
  unreachable

50:                                               ; preds = %44
  br i1 %17, label %181, label %51

51:                                               ; preds = %50
  %52 = load i64, i64* %47, align 8
  %53 = add i64 %52, 11
  %54 = inttoptr i64 %53 to i8*
  %55 = sext i32 %46 to i64
  %56 = getelementptr inbounds i8, i8* %54, i64 %55
  br label %57

57:                                               ; preds = %51, %102
  %58 = phi i8* [ %72, %102 ], [ %56, %51 ]
  %59 = phi %"struct.v8::internal::AstConsString::Segment"* [ %104, %102 ], [ %12, %51 ]
  %60 = getelementptr inbounds %"struct.v8::internal::AstConsString::Segment", %"struct.v8::internal::AstConsString::Segment"* %59, i64 0, i32 0
  %61 = load %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"** %60, align 8
  %62 = getelementptr inbounds %"class.v8::internal::AstRawString", %"class.v8::internal::AstRawString"* %61, i64 0, i32 3
  %63 = load i8, i8* %62, align 4, !range !2
  %64 = icmp eq i8 %63, 0
  %65 = getelementptr inbounds %"class.v8::internal::AstRawString", %"class.v8::internal::AstRawString"* %61, i64 0, i32 1, i32 1
  %66 = load i64, i64* %65, align 8
  %67 = trunc i64 %66 to i32
  %68 = sdiv i32 %67, 2
  %69 = select i1 %64, i32 %68, i32 %67
  %70 = sext i32 %69 to i64
  %71 = sub nsw i64 0, %70
  %72 = getelementptr inbounds i8, i8* %58, i64 %71
  %73 = getelementptr inbounds %"class.v8::internal::AstRawString", %"class.v8::internal::AstRawString"* %61, i64 0, i32 1, i32 0
  %74 = load i8*, i8** %73, align 8
  switch i64 %70, label %101 [
    i64 1, label %75
    i64 2, label %77
    i64 3, label %81
    i64 4, label %82
    i64 5, label %86
    i64 6, label %87
    i64 7, label %88
    i64 8, label %89
    i64 9, label %93
    i64 10, label %94
    i64 11, label %95
    i64 12, label %96
    i64 13, label %97
    i64 14, label %98
    i64 15, label %99
    i64 16, label %100
    i64 0, label %102
  ]

75:                                               ; preds = %57
  %76 = load i8, i8* %74, align 1
  store i8 %76, i8* %72, align 1
  br label %102

77:                                               ; preds = %57
  %78 = bitcast i8* %74 to i16*
  %79 = bitcast i8* %72 to i16*
  %80 = load i16, i16* %78, align 1
  store i16 %80, i16* %79, align 1
  br label %102

81:                                               ; preds = %57
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 1 %72, i8* align 1 %74, i64 3, i1 false) #15
  br label %102

82:                                               ; preds = %57
  %83 = bitcast i8* %74 to i32*
  %84 = bitcast i8* %72 to i32*
  %85 = load i32, i32* %83, align 1
  store i32 %85, i32* %84, align 1
  br label %102

86:                                               ; preds = %57
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 1 %72, i8* align 1 %74, i64 5, i1 false) #15
  br label %102

87:                                               ; preds = %57
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 1 %72, i8* align 1 %74, i64 6, i1 false) #15
  br label %102

88:                                               ; preds = %57
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 1 %72, i8* align 1 %74, i64 7, i1 false) #15
  br label %102

89:                                               ; preds = %57
  %90 = bitcast i8* %74 to i64*
  %91 = bitcast i8* %72 to i64*
  %92 = load i64, i64* %90, align 1
  store i64 %92, i64* %91, align 1
  br label %102

93:                                               ; preds = %57
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 1 %72, i8* align 1 %74, i64 9, i1 false) #15
  br label %102

94:                                               ; preds = %57
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 1 %72, i8* align 1 %74, i64 10, i1 false) #15
  br label %102

95:                                               ; preds = %57
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 1 %72, i8* align 1 %74, i64 11, i1 false) #15
  br label %102

96:                                               ; preds = %57
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 1 %72, i8* align 1 %74, i64 12, i1 false) #15
  br label %102

97:                                               ; preds = %57
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 1 %72, i8* align 1 %74, i64 13, i1 false) #15
  br label %102

98:                                               ; preds = %57
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 1 %72, i8* align 1 %74, i64 14, i1 false) #15
  br label %102

99:                                               ; preds = %57
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 1 %72, i8* align 1 %74, i64 15, i1 false) #15
  br label %102

100:                                              ; preds = %57
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 1 %72, i8* align 1 %74, i64 16, i1 false) #15
  br label %102

101:                                              ; preds = %57
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 1 %72, i8* align 1 %74, i64 %70, i1 false) #15
  br label %102

102:                                              ; preds = %57, %75, %77, %81, %82, %86, %87, %88, %89, %93, %94, %95, %96, %97, %98, %99, %100, %101
  %103 = getelementptr inbounds %"struct.v8::internal::AstConsString::Segment", %"struct.v8::internal::AstConsString::Segment"* %59, i64 0, i32 1
  %104 = load %"struct.v8::internal::AstConsString::Segment"*, %"struct.v8::internal::AstConsString::Segment"** %103, align 8
  %105 = icmp eq %"struct.v8::internal::AstConsString::Segment"* %104, null
  br i1 %105, label %181, label %57

106:                                              ; preds = %22
  %107 = tail call i64* @_ZN2v88internal11FactoryBaseINS0_12LocalFactoryEE19NewRawTwoByteStringEiNS0_14AllocationTypeE(%"class.v8::internal::FactoryBase.1051"* %23, i32 %38, i8 zeroext 1) #15
  %108 = icmp eq i64* %107, null
  br i1 %108, label %109, label %110, !prof !3

109:                                              ; preds = %106
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.54, i64 0, i64 0), i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.55, i64 0, i64 0)) #16
  unreachable

110:                                              ; preds = %106
  br i1 %17, label %181, label %111

111:                                              ; preds = %110
  %112 = load i64, i64* %107, align 8
  %113 = add i64 %112, 11
  %114 = inttoptr i64 %113 to i16*
  %115 = sext i32 %38 to i64
  %116 = getelementptr inbounds i16, i16* %114, i64 %115
  br label %117

117:                                              ; preds = %111, %177
  %118 = phi %"struct.v8::internal::AstConsString::Segment"* [ %179, %177 ], [ %12, %111 ]
  %119 = phi i16* [ %132, %177 ], [ %116, %111 ]
  %120 = getelementptr inbounds %"struct.v8::internal::AstConsString::Segment", %"struct.v8::internal::AstConsString::Segment"* %118, i64 0, i32 0
  %121 = load %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"** %120, align 8
  %122 = getelementptr inbounds %"class.v8::internal::AstRawString", %"class.v8::internal::AstRawString"* %121, i64 0, i32 3
  %123 = load i8, i8* %122, align 4, !range !2
  %124 = icmp eq i8 %123, 0
  %125 = getelementptr inbounds %"class.v8::internal::AstRawString", %"class.v8::internal::AstRawString"* %121, i64 0, i32 1, i32 1
  %126 = load i64, i64* %125, align 8
  %127 = trunc i64 %126 to i32
  %128 = sdiv i32 %127, 2
  %129 = select i1 %124, i32 %128, i32 %127
  %130 = sext i32 %129 to i64
  %131 = sub nsw i64 0, %130
  %132 = getelementptr inbounds i16, i16* %119, i64 %131
  %133 = getelementptr inbounds %"class.v8::internal::AstRawString", %"class.v8::internal::AstRawString"* %121, i64 0, i32 1, i32 0
  %134 = load i8*, i8** %133, align 8
  br i1 %124, label %136, label %135

135:                                              ; preds = %117
  tail call void @_ZN2v88internal9CopyCharsIhtEEvPT0_PKT_m(i16* %132, i8* %134, i64 %130)
  br label %177

136:                                              ; preds = %117
  switch i64 %130, label %174 [
    i64 1, label %137
    i64 2, label %140
    i64 3, label %144
    i64 4, label %146
    i64 5, label %150
    i64 6, label %152
    i64 7, label %154
    i64 8, label %156
    i64 9, label %158
    i64 10, label %160
    i64 11, label %162
    i64 12, label %164
    i64 13, label %166
    i64 14, label %168
    i64 15, label %170
    i64 16, label %172
    i64 0, label %177
  ]

137:                                              ; preds = %136
  %138 = bitcast i8* %134 to i16*
  %139 = load i16, i16* %138, align 2
  store i16 %139, i16* %132, align 2
  br label %177

140:                                              ; preds = %136
  %141 = bitcast i8* %134 to i32*
  %142 = bitcast i16* %132 to i32*
  %143 = load i32, i32* %141, align 2
  store i32 %143, i32* %142, align 2
  br label %177

144:                                              ; preds = %136
  %145 = bitcast i16* %132 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 2 %145, i8* align 2 %134, i64 6, i1 false) #15
  br label %177

146:                                              ; preds = %136
  %147 = bitcast i8* %134 to i64*
  %148 = bitcast i16* %132 to i64*
  %149 = load i64, i64* %147, align 2
  store i64 %149, i64* %148, align 2
  br label %177

150:                                              ; preds = %136
  %151 = bitcast i16* %132 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 2 %151, i8* align 2 %134, i64 10, i1 false) #15
  br label %177

152:                                              ; preds = %136
  %153 = bitcast i16* %132 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 2 %153, i8* align 2 %134, i64 12, i1 false) #15
  br label %177

154:                                              ; preds = %136
  %155 = bitcast i16* %132 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 2 %155, i8* align 2 %134, i64 14, i1 false) #15
  br label %177

156:                                              ; preds = %136
  %157 = bitcast i16* %132 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 2 %157, i8* align 2 %134, i64 16, i1 false) #15
  br label %177

158:                                              ; preds = %136
  %159 = bitcast i16* %132 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 2 %159, i8* align 2 %134, i64 18, i1 false) #15
  br label %177

160:                                              ; preds = %136
  %161 = bitcast i16* %132 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 2 %161, i8* align 2 %134, i64 20, i1 false) #15
  br label %177

162:                                              ; preds = %136
  %163 = bitcast i16* %132 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 2 %163, i8* align 2 %134, i64 22, i1 false) #15
  br label %177

164:                                              ; preds = %136
  %165 = bitcast i16* %132 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 2 %165, i8* align 2 %134, i64 24, i1 false) #15
  br label %177

166:                                              ; preds = %136
  %167 = bitcast i16* %132 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 2 %167, i8* align 2 %134, i64 26, i1 false) #15
  br label %177

168:                                              ; preds = %136
  %169 = bitcast i16* %132 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 2 %169, i8* align 2 %134, i64 28, i1 false) #15
  br label %177

170:                                              ; preds = %136
  %171 = bitcast i16* %132 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 2 %171, i8* align 2 %134, i64 30, i1 false) #15
  br label %177

172:                                              ; preds = %136
  %173 = bitcast i16* %132 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 2 %173, i8* align 2 %134, i64 32, i1 false) #15
  br label %177

174:                                              ; preds = %136
  %175 = shl nuw nsw i64 %130, 1
  %176 = bitcast i16* %132 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 2 %176, i8* align 2 %134, i64 %175, i1 false) #15
  br label %177

177:                                              ; preds = %174, %172, %170, %168, %166, %164, %162, %160, %158, %156, %154, %152, %150, %146, %144, %140, %137, %136, %135
  %178 = getelementptr inbounds %"struct.v8::internal::AstConsString::Segment", %"struct.v8::internal::AstConsString::Segment"* %118, i64 0, i32 1
  %179 = load %"struct.v8::internal::AstConsString::Segment"*, %"struct.v8::internal::AstConsString::Segment"** %178, align 8
  %180 = icmp eq %"struct.v8::internal::AstConsString::Segment"* %179, null
  br i1 %180, label %181, label %117

181:                                              ; preds = %177, %102, %110, %50, %20, %7
  %182 = phi i64* [ %10, %7 ], [ %21, %20 ], [ %47, %50 ], [ %107, %110 ], [ %47, %102 ], [ %107, %177 ]
  ret i64* %182
}

declare i64* @_ZN2v88internal11FactoryBaseINS0_12LocalFactoryEE19NewRawOneByteStringEiNS0_14AllocationTypeE(%"class.v8::internal::FactoryBase.1051"*, i32, i8 zeroext) local_unnamed_addr #2

declare i64* @_ZN2v88internal11FactoryBaseINS0_12LocalFactoryEE19NewRawTwoByteStringEiNS0_14AllocationTypeE(%"class.v8::internal::FactoryBase.1051"*, i32, i8 zeroext) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden void @_ZN2v88internal15AstValueFactory11InternalizeINS0_7IsolateEEEvPT_(%"class.v8::internal::AstValueFactory"*, %"class.v8::internal::Isolate"*) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.v8::internal::SequentialStringKey", align 8
  %4 = alloca %"class.v8::internal::SequentialStringKey.1131", align 8
  %5 = getelementptr inbounds %"class.v8::internal::AstValueFactory", %"class.v8::internal::AstValueFactory"* %0, i64 0, i32 6
  %6 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %5, align 8
  %7 = icmp eq %"class.v8::internal::Zone"* %6, null
  br i1 %7, label %65, label %8

8:                                                ; preds = %2
  %9 = getelementptr inbounds %"class.v8::internal::AstValueFactory", %"class.v8::internal::AstValueFactory"* %0, i64 0, i32 1
  %10 = load %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"** %9, align 8
  %11 = icmp eq %"class.v8::internal::AstRawString"* %10, null
  br i1 %11, label %30, label %12

12:                                               ; preds = %8
  %13 = bitcast %"class.v8::internal::SequentialStringKey"* %3 to i8*
  %14 = getelementptr inbounds %"class.v8::internal::SequentialStringKey", %"class.v8::internal::SequentialStringKey"* %3, i64 0, i32 0, i32 0
  %15 = getelementptr inbounds %"class.v8::internal::SequentialStringKey", %"class.v8::internal::SequentialStringKey"* %3, i64 0, i32 0, i32 1
  %16 = getelementptr inbounds %"class.v8::internal::SequentialStringKey", %"class.v8::internal::SequentialStringKey"* %3, i64 0, i32 0, i32 2
  %17 = getelementptr inbounds %"class.v8::internal::SequentialStringKey", %"class.v8::internal::SequentialStringKey"* %3, i64 0, i32 1
  %18 = bitcast %"class.v8::internal::Vector"* %17 to i8*
  %19 = getelementptr inbounds %"class.v8::internal::SequentialStringKey", %"class.v8::internal::SequentialStringKey"* %3, i64 0, i32 2
  %20 = bitcast %"class.v8::internal::Isolate"* %1 to %"class.v8::internal::FactoryBase"*
  %21 = bitcast %"class.v8::internal::SequentialStringKey.1131"* %4 to i8*
  %22 = getelementptr inbounds %"class.v8::internal::SequentialStringKey.1131", %"class.v8::internal::SequentialStringKey.1131"* %4, i64 0, i32 0, i32 0
  %23 = getelementptr inbounds %"class.v8::internal::SequentialStringKey.1131", %"class.v8::internal::SequentialStringKey.1131"* %4, i64 0, i32 0, i32 1
  %24 = getelementptr inbounds %"class.v8::internal::SequentialStringKey.1131", %"class.v8::internal::SequentialStringKey.1131"* %4, i64 0, i32 0, i32 2
  %25 = getelementptr inbounds %"class.v8::internal::SequentialStringKey.1131", %"class.v8::internal::SequentialStringKey.1131"* %4, i64 0, i32 1, i32 0
  %26 = bitcast i16** %25 to i64*
  %27 = getelementptr inbounds %"class.v8::internal::SequentialStringKey.1131", %"class.v8::internal::SequentialStringKey.1131"* %4, i64 0, i32 1, i32 1
  %28 = getelementptr inbounds %"class.v8::internal::SequentialStringKey.1131", %"class.v8::internal::SequentialStringKey.1131"* %4, i64 0, i32 2
  %29 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %1, i64 0, i32 0, i32 7, i32 0, i64 9
  br label %32

30:                                               ; preds = %63, %8
  store %"class.v8::internal::AstRawString"* null, %"class.v8::internal::AstRawString"** %9, align 8
  %31 = getelementptr inbounds %"class.v8::internal::AstValueFactory", %"class.v8::internal::AstValueFactory"* %0, i64 0, i32 2
  store %"class.v8::internal::AstRawString"** %9, %"class.v8::internal::AstRawString"*** %31, align 8
  store %"class.v8::internal::Zone"* null, %"class.v8::internal::Zone"** %5, align 8
  br label %65

32:                                               ; preds = %12, %63
  %33 = phi %"class.v8::internal::AstRawString"* [ %10, %12 ], [ %35, %63 ]
  %34 = getelementptr inbounds %"class.v8::internal::AstRawString", %"class.v8::internal::AstRawString"* %33, i64 0, i32 0, i32 0
  %35 = load %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"** %34, align 8
  %36 = getelementptr inbounds %"class.v8::internal::AstRawString", %"class.v8::internal::AstRawString"* %33, i64 0, i32 1
  %37 = getelementptr inbounds %"class.v8::internal::AstRawString", %"class.v8::internal::AstRawString"* %33, i64 0, i32 1, i32 1
  %38 = load i64, i64* %37, align 8
  %39 = trunc i64 %38 to i32
  %40 = icmp eq i32 %39, 0
  br i1 %40, label %41, label %43

41:                                               ; preds = %32
  %42 = bitcast %"class.v8::internal::AstRawString"* %33 to i64**
  store i64* %29, i64** %42, align 8
  br label %63

43:                                               ; preds = %32
  %44 = getelementptr inbounds %"class.v8::internal::AstRawString", %"class.v8::internal::AstRawString"* %33, i64 0, i32 3
  %45 = load i8, i8* %44, align 4, !range !2
  %46 = icmp eq i8 %45, 0
  br i1 %46, label %53, label %47

47:                                               ; preds = %43
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %13) #15
  %48 = getelementptr inbounds %"class.v8::internal::AstRawString", %"class.v8::internal::AstRawString"* %33, i64 0, i32 2
  %49 = load i32, i32* %48, align 8
  store i32 %49, i32* %15, align 8
  store i32 %39, i32* %16, align 4
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN2v88internal19SequentialStringKeyIhEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %14, align 8
  %50 = bitcast %"class.v8::internal::Vector"* %36 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %18, i8* align 8 %50, i64 16, i1 false) #15
  store i8 0, i8* %19, align 8
  %51 = call i64* @_ZN2v88internal11FactoryBaseINS0_7FactoryEE24InternalizeStringWithKeyINS0_19SequentialStringKeyIhEEEENS0_6HandleINS0_6StringEEEPT_(%"class.v8::internal::FactoryBase"* %20, %"class.v8::internal::SequentialStringKey"* nonnull %3) #15
  %52 = bitcast %"class.v8::internal::AstRawString"* %33 to i64**
  store i64* %51, i64** %52, align 8
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %13) #15
  br label %63

53:                                               ; preds = %43
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %21) #15
  %54 = getelementptr inbounds %"class.v8::internal::AstRawString", %"class.v8::internal::AstRawString"* %33, i64 0, i32 2
  %55 = load i32, i32* %54, align 8
  %56 = getelementptr inbounds %"class.v8::internal::AstRawString", %"class.v8::internal::AstRawString"* %33, i64 0, i32 1, i32 0
  %57 = bitcast i8** %56 to i64*
  %58 = load i64, i64* %57, align 8
  %59 = lshr i64 %38, 1
  %60 = trunc i64 %59 to i32
  store i32 %55, i32* %23, align 8
  store i32 %60, i32* %24, align 4
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN2v88internal19SequentialStringKeyItEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %22, align 8
  store i64 %58, i64* %26, align 8
  store i64 %59, i64* %27, align 8
  store i8 0, i8* %28, align 8
  %61 = call i64* @_ZN2v88internal11FactoryBaseINS0_7FactoryEE24InternalizeStringWithKeyINS0_19SequentialStringKeyItEEEENS0_6HandleINS0_6StringEEEPT_(%"class.v8::internal::FactoryBase"* %20, %"class.v8::internal::SequentialStringKey.1131"* nonnull %4) #15
  %62 = bitcast %"class.v8::internal::AstRawString"* %33 to i64**
  store i64* %61, i64** %62, align 8
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %21) #15
  br label %63

63:                                               ; preds = %41, %47, %53
  %64 = icmp eq %"class.v8::internal::AstRawString"* %35, null
  br i1 %64, label %30, label %32

65:                                               ; preds = %2, %30
  ret void
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden void @_ZN2v88internal15AstValueFactory11InternalizeINS0_12LocalIsolateEEEvPT_(%"class.v8::internal::AstValueFactory"*, %"class.v8::internal::LocalIsolate"*) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.v8::internal::SequentialStringKey", align 8
  %4 = alloca %"class.v8::internal::SequentialStringKey.1131", align 8
  %5 = getelementptr inbounds %"class.v8::internal::AstValueFactory", %"class.v8::internal::AstValueFactory"* %0, i64 0, i32 6
  %6 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %5, align 8
  %7 = icmp eq %"class.v8::internal::Zone"* %6, null
  br i1 %7, label %67, label %8

8:                                                ; preds = %2
  %9 = getelementptr inbounds %"class.v8::internal::AstValueFactory", %"class.v8::internal::AstValueFactory"* %0, i64 0, i32 1
  %10 = load %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"** %9, align 8
  %11 = icmp eq %"class.v8::internal::AstRawString"* %10, null
  br i1 %11, label %30, label %12

12:                                               ; preds = %8
  %13 = bitcast %"class.v8::internal::SequentialStringKey"* %3 to i8*
  %14 = getelementptr inbounds %"class.v8::internal::SequentialStringKey", %"class.v8::internal::SequentialStringKey"* %3, i64 0, i32 0, i32 0
  %15 = getelementptr inbounds %"class.v8::internal::SequentialStringKey", %"class.v8::internal::SequentialStringKey"* %3, i64 0, i32 0, i32 1
  %16 = getelementptr inbounds %"class.v8::internal::SequentialStringKey", %"class.v8::internal::SequentialStringKey"* %3, i64 0, i32 0, i32 2
  %17 = getelementptr inbounds %"class.v8::internal::SequentialStringKey", %"class.v8::internal::SequentialStringKey"* %3, i64 0, i32 1
  %18 = bitcast %"class.v8::internal::Vector"* %17 to i8*
  %19 = getelementptr inbounds %"class.v8::internal::SequentialStringKey", %"class.v8::internal::SequentialStringKey"* %3, i64 0, i32 2
  %20 = bitcast %"class.v8::internal::LocalIsolate"* %1 to %"class.v8::internal::FactoryBase.1051"*
  %21 = bitcast %"class.v8::internal::SequentialStringKey.1131"* %4 to i8*
  %22 = getelementptr inbounds %"class.v8::internal::SequentialStringKey.1131", %"class.v8::internal::SequentialStringKey.1131"* %4, i64 0, i32 0, i32 0
  %23 = getelementptr inbounds %"class.v8::internal::SequentialStringKey.1131", %"class.v8::internal::SequentialStringKey.1131"* %4, i64 0, i32 0, i32 1
  %24 = getelementptr inbounds %"class.v8::internal::SequentialStringKey.1131", %"class.v8::internal::SequentialStringKey.1131"* %4, i64 0, i32 0, i32 2
  %25 = getelementptr inbounds %"class.v8::internal::SequentialStringKey.1131", %"class.v8::internal::SequentialStringKey.1131"* %4, i64 0, i32 1, i32 0
  %26 = bitcast i16** %25 to i64*
  %27 = getelementptr inbounds %"class.v8::internal::SequentialStringKey.1131", %"class.v8::internal::SequentialStringKey.1131"* %4, i64 0, i32 1, i32 1
  %28 = getelementptr inbounds %"class.v8::internal::SequentialStringKey.1131", %"class.v8::internal::SequentialStringKey.1131"* %4, i64 0, i32 2
  %29 = getelementptr inbounds %"class.v8::internal::LocalIsolate", %"class.v8::internal::LocalIsolate"* %1, i64 0, i32 0, i32 0, i32 0, i32 0
  br label %32

30:                                               ; preds = %65, %8
  store %"class.v8::internal::AstRawString"* null, %"class.v8::internal::AstRawString"** %9, align 8
  %31 = getelementptr inbounds %"class.v8::internal::AstValueFactory", %"class.v8::internal::AstValueFactory"* %0, i64 0, i32 2
  store %"class.v8::internal::AstRawString"** %9, %"class.v8::internal::AstRawString"*** %31, align 8
  store %"class.v8::internal::Zone"* null, %"class.v8::internal::Zone"** %5, align 8
  br label %67

32:                                               ; preds = %12, %65
  %33 = phi %"class.v8::internal::AstRawString"* [ %10, %12 ], [ %35, %65 ]
  %34 = getelementptr inbounds %"class.v8::internal::AstRawString", %"class.v8::internal::AstRawString"* %33, i64 0, i32 0, i32 0
  %35 = load %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"** %34, align 8
  %36 = getelementptr inbounds %"class.v8::internal::AstRawString", %"class.v8::internal::AstRawString"* %33, i64 0, i32 1
  %37 = getelementptr inbounds %"class.v8::internal::AstRawString", %"class.v8::internal::AstRawString"* %33, i64 0, i32 1, i32 1
  %38 = load i64, i64* %37, align 8
  %39 = trunc i64 %38 to i32
  %40 = icmp eq i32 %39, 0
  br i1 %40, label %41, label %45

41:                                               ; preds = %32
  %42 = load i64*, i64** %29, align 8
  %43 = getelementptr inbounds i64, i64* %42, i64 9
  %44 = bitcast %"class.v8::internal::AstRawString"* %33 to i64**
  store i64* %43, i64** %44, align 8
  br label %65

45:                                               ; preds = %32
  %46 = getelementptr inbounds %"class.v8::internal::AstRawString", %"class.v8::internal::AstRawString"* %33, i64 0, i32 3
  %47 = load i8, i8* %46, align 4, !range !2
  %48 = icmp eq i8 %47, 0
  br i1 %48, label %55, label %49

49:                                               ; preds = %45
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %13) #15
  %50 = getelementptr inbounds %"class.v8::internal::AstRawString", %"class.v8::internal::AstRawString"* %33, i64 0, i32 2
  %51 = load i32, i32* %50, align 8
  store i32 %51, i32* %15, align 8
  store i32 %39, i32* %16, align 4
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN2v88internal19SequentialStringKeyIhEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %14, align 8
  %52 = bitcast %"class.v8::internal::Vector"* %36 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %18, i8* align 8 %52, i64 16, i1 false) #15
  store i8 0, i8* %19, align 8
  %53 = call i64* @_ZN2v88internal11FactoryBaseINS0_12LocalFactoryEE24InternalizeStringWithKeyINS0_19SequentialStringKeyIhEEEENS0_6HandleINS0_6StringEEEPT_(%"class.v8::internal::FactoryBase.1051"* %20, %"class.v8::internal::SequentialStringKey"* nonnull %3) #15
  %54 = bitcast %"class.v8::internal::AstRawString"* %33 to i64**
  store i64* %53, i64** %54, align 8
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %13) #15
  br label %65

55:                                               ; preds = %45
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %21) #15
  %56 = getelementptr inbounds %"class.v8::internal::AstRawString", %"class.v8::internal::AstRawString"* %33, i64 0, i32 2
  %57 = load i32, i32* %56, align 8
  %58 = getelementptr inbounds %"class.v8::internal::AstRawString", %"class.v8::internal::AstRawString"* %33, i64 0, i32 1, i32 0
  %59 = bitcast i8** %58 to i64*
  %60 = load i64, i64* %59, align 8
  %61 = lshr i64 %38, 1
  %62 = trunc i64 %61 to i32
  store i32 %57, i32* %23, align 8
  store i32 %62, i32* %24, align 4
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN2v88internal19SequentialStringKeyItEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %22, align 8
  store i64 %60, i64* %26, align 8
  store i64 %61, i64* %27, align 8
  store i8 0, i8* %28, align 8
  %63 = call i64* @_ZN2v88internal11FactoryBaseINS0_12LocalFactoryEE24InternalizeStringWithKeyINS0_19SequentialStringKeyItEEEENS0_6HandleINS0_6StringEEEPT_(%"class.v8::internal::FactoryBase.1051"* %20, %"class.v8::internal::SequentialStringKey.1131"* nonnull %4) #15
  %64 = bitcast %"class.v8::internal::AstRawString"* %33 to i64**
  store i64* %63, i64** %64, align 8
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %21) #15
  br label %65

65:                                               ; preds = %41, %49, %55
  %66 = icmp eq %"class.v8::internal::AstRawString"* %35, null
  br i1 %66, label %30, label %32

67:                                               ; preds = %2, %30
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK2v88internal12AstRawString12AsArrayIndexEPj(%"class.v8::internal::AstRawString"* nocapture readonly, i32* nocapture) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.v8::internal::AstRawString", %"class.v8::internal::AstRawString"* %0, i64 0, i32 2
  %4 = load i32, i32* %3, align 8
  %5 = and i32 %4, 2
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %7, label %55

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"class.v8::internal::AstRawString", %"class.v8::internal::AstRawString"* %0, i64 0, i32 3
  %9 = load i8, i8* %8, align 4, !range !2
  %10 = icmp eq i8 %9, 0
  %11 = getelementptr inbounds %"class.v8::internal::AstRawString", %"class.v8::internal::AstRawString"* %0, i64 0, i32 1, i32 1
  %12 = load i64, i64* %11, align 8
  %13 = trunc i64 %12 to i32
  %14 = sdiv i32 %13, 2
  %15 = select i1 %10, i32 %14, i32 %13
  %16 = icmp slt i32 %15, 8
  br i1 %16, label %17, label %20

17:                                               ; preds = %7
  %18 = lshr i32 %4, 2
  %19 = and i32 %18, 16777215
  store i32 %19, i32* %1, align 4
  br label %55

20:                                               ; preds = %7
  %21 = getelementptr inbounds %"class.v8::internal::AstRawString", %"class.v8::internal::AstRawString"* %0, i64 0, i32 1, i32 0
  %22 = load i8*, i8** %21, align 8
  %23 = load i8, i8* %22, align 1
  %24 = icmp eq i8 %23, 48
  br i1 %24, label %25, label %27

25:                                               ; preds = %20
  store i32 0, i32* %1, align 4
  %26 = icmp slt i32 %13, 2
  br label %55

27:                                               ; preds = %20
  %28 = zext i8 %23 to i32
  %29 = add nsw i32 %28, -48
  %30 = icmp ult i32 %29, 10
  br i1 %30, label %31, label %55

31:                                               ; preds = %27
  %32 = icmp sgt i32 %13, 1
  br i1 %32, label %33, label %53

33:                                               ; preds = %31
  %34 = and i64 %12, 4294967295
  br label %35

35:                                               ; preds = %49, %33
  %36 = phi i64 [ 1, %33 ], [ %38, %49 ]
  %37 = phi i32 [ %29, %33 ], [ %51, %49 ]
  %38 = add nuw nsw i64 %36, 1
  %39 = getelementptr inbounds i8, i8* %22, i64 %36
  %40 = load i8, i8* %39, align 1
  %41 = zext i8 %40 to i32
  %42 = add nsw i32 %41, -48
  %43 = icmp ult i32 %42, 10
  br i1 %43, label %44, label %55

44:                                               ; preds = %35
  %45 = add nsw i32 %41, -45
  %46 = ashr i32 %45, 3
  %47 = sub nuw nsw i32 429496729, %46
  %48 = icmp ugt i32 %37, %47
  br i1 %48, label %55, label %49

49:                                               ; preds = %44
  %50 = mul i32 %37, 10
  %51 = add i32 %42, %50
  %52 = icmp eq i64 %38, %34
  br i1 %52, label %53, label %35

53:                                               ; preds = %49, %31
  %54 = phi i32 [ %29, %31 ], [ %51, %49 ]
  store i32 %54, i32* %1, align 4
  br label %55

55:                                               ; preds = %44, %35, %53, %27, %25, %2, %17
  %56 = phi i1 [ true, %17 ], [ false, %2 ], [ %26, %25 ], [ false, %27 ], [ true, %53 ], [ false, %35 ], [ false, %44 ]
  ret i1 %56
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK2v88internal12AstRawString14IsIntegerIndexEv(%"class.v8::internal::AstRawString"* nocapture readonly) local_unnamed_addr #3 align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::AstRawString", %"class.v8::internal::AstRawString"* %0, i64 0, i32 2
  %3 = load i32, i32* %2, align 8
  %4 = and i32 %3, 2
  %5 = icmp eq i32 %4, 0
  ret i1 %5
}

; Function Attrs: nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK2v88internal12AstRawString16IsOneByteEqualToEPKc(%"class.v8::internal::AstRawString"* nocapture readonly, i8* nocapture readonly) local_unnamed_addr #4 align 2 {
  %3 = getelementptr inbounds %"class.v8::internal::AstRawString", %"class.v8::internal::AstRawString"* %0, i64 0, i32 3
  %4 = load i8, i8* %3, align 4, !range !2
  %5 = icmp eq i8 %4, 0
  br i1 %5, label %18, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.v8::internal::AstRawString", %"class.v8::internal::AstRawString"* %0, i64 0, i32 1, i32 1
  %8 = load i64, i64* %7, align 8
  %9 = shl i64 %8, 32
  %10 = ashr exact i64 %9, 32
  %11 = tail call i64 @strlen(i8* %1) #17
  %12 = icmp eq i64 %11, %10
  br i1 %12, label %13, label %18

13:                                               ; preds = %6
  %14 = getelementptr inbounds %"class.v8::internal::AstRawString", %"class.v8::internal::AstRawString"* %0, i64 0, i32 1, i32 0
  %15 = load i8*, i8** %14, align 8
  %16 = tail call i32 @strncmp(i8* %15, i8* %1, i64 %10) #17
  %17 = icmp eq i32 %16, 0
  br label %18

18:                                               ; preds = %2, %13, %6
  %19 = phi i1 [ false, %2 ], [ %17, %13 ], [ false, %6 ]
  ret i1 %19
}

; Function Attrs: argmemonly nofree nounwind readonly
declare i64 @strlen(i8* nocapture) local_unnamed_addr #5

; Function Attrs: nofree nounwind readonly
declare i32 @strncmp(i8* nocapture, i8* nocapture, i64) local_unnamed_addr #6

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i16 @_ZNK2v88internal12AstRawString14FirstCharacterEv(%"class.v8::internal::AstRawString"* nocapture readonly) local_unnamed_addr #3 align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::AstRawString", %"class.v8::internal::AstRawString"* %0, i64 0, i32 3
  %3 = load i8, i8* %2, align 4, !range !2
  %4 = icmp eq i8 %3, 0
  %5 = getelementptr inbounds %"class.v8::internal::AstRawString", %"class.v8::internal::AstRawString"* %0, i64 0, i32 1, i32 0
  %6 = load i8*, i8** %5, align 8
  br i1 %4, label %10, label %7

7:                                                ; preds = %1
  %8 = load i8, i8* %6, align 1
  %9 = zext i8 %8 to i16
  br label %13

10:                                               ; preds = %1
  %11 = bitcast i8* %6 to i16*
  %12 = load i16, i16* %11, align 2
  br label %13

13:                                               ; preds = %10, %7
  %14 = phi i16 [ %9, %7 ], [ %12, %10 ]
  ret i16 %14
}

; Function Attrs: nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZN2v88internal12AstRawString5EqualEPKS1_S3_(%"class.v8::internal::AstRawString"* nocapture readonly, %"class.v8::internal::AstRawString"* nocapture readonly) local_unnamed_addr #4 align 2 {
  %3 = getelementptr inbounds %"class.v8::internal::AstRawString", %"class.v8::internal::AstRawString"* %0, i64 0, i32 3
  %4 = load i8, i8* %3, align 4, !range !2
  %5 = icmp eq i8 %4, 0
  %6 = getelementptr inbounds %"class.v8::internal::AstRawString", %"class.v8::internal::AstRawString"* %0, i64 0, i32 1, i32 1
  %7 = load i64, i64* %6, align 8
  %8 = trunc i64 %7 to i32
  %9 = sdiv i32 %8, 2
  %10 = select i1 %5, i32 %9, i32 %8
  %11 = getelementptr inbounds %"class.v8::internal::AstRawString", %"class.v8::internal::AstRawString"* %1, i64 0, i32 3
  %12 = load i8, i8* %11, align 4, !range !2
  %13 = icmp eq i8 %12, 0
  %14 = getelementptr inbounds %"class.v8::internal::AstRawString", %"class.v8::internal::AstRawString"* %1, i64 0, i32 1, i32 1
  %15 = load i64, i64* %14, align 8
  %16 = trunc i64 %15 to i32
  %17 = sdiv i32 %16, 2
  %18 = select i1 %13, i32 %17, i32 %16
  %19 = icmp eq i32 %10, %18
  br i1 %19, label %20, label %71

20:                                               ; preds = %2
  %21 = icmp eq i32 %10, 0
  br i1 %21, label %71, label %22

22:                                               ; preds = %20
  %23 = getelementptr inbounds %"class.v8::internal::AstRawString", %"class.v8::internal::AstRawString"* %0, i64 0, i32 1, i32 0
  %24 = load i8*, i8** %23, align 8
  %25 = getelementptr inbounds %"class.v8::internal::AstRawString", %"class.v8::internal::AstRawString"* %1, i64 0, i32 1, i32 0
  %26 = load i8*, i8** %25, align 8
  %27 = sext i32 %10 to i64
  %28 = icmp ne i8 %12, 0
  br i1 %5, label %50, label %29

29:                                               ; preds = %22
  br i1 %28, label %30, label %33

30:                                               ; preds = %29
  %31 = tail call i32 @bcmp(i8* %24, i8* %26, i64 %27) #15
  %32 = icmp eq i32 %31, 0
  br label %71

33:                                               ; preds = %29
  %34 = getelementptr inbounds i8, i8* %24, i64 %27
  %35 = icmp sgt i32 %10, 0
  br i1 %35, label %36, label %71

36:                                               ; preds = %33
  %37 = bitcast i8* %26 to i16*
  br label %38

38:                                               ; preds = %36, %46
  %39 = phi i8* [ %47, %46 ], [ %24, %36 ]
  %40 = phi i16* [ %48, %46 ], [ %37, %36 ]
  %41 = load i8, i8* %39, align 1
  %42 = zext i8 %41 to i32
  %43 = load i16, i16* %40, align 2
  %44 = zext i16 %43 to i32
  %45 = icmp eq i32 %42, %44
  br i1 %45, label %46, label %71

46:                                               ; preds = %38
  %47 = getelementptr inbounds i8, i8* %39, i64 1
  %48 = getelementptr inbounds i16, i16* %40, i64 1
  %49 = icmp ult i8* %47, %34
  br i1 %49, label %38, label %71

50:                                               ; preds = %22
  %51 = bitcast i8* %24 to i16*
  br i1 %28, label %52, label %67

52:                                               ; preds = %50
  %53 = getelementptr inbounds i16, i16* %51, i64 %27
  %54 = icmp sgt i32 %10, 0
  br i1 %54, label %55, label %71

55:                                               ; preds = %52, %63
  %56 = phi i16* [ %64, %63 ], [ %51, %52 ]
  %57 = phi i8* [ %65, %63 ], [ %26, %52 ]
  %58 = load i16, i16* %56, align 2
  %59 = zext i16 %58 to i32
  %60 = load i8, i8* %57, align 1
  %61 = zext i8 %60 to i32
  %62 = icmp eq i32 %59, %61
  br i1 %62, label %63, label %71

63:                                               ; preds = %55
  %64 = getelementptr inbounds i16, i16* %56, i64 1
  %65 = getelementptr inbounds i8, i8* %57, i64 1
  %66 = icmp ult i16* %64, %53
  br i1 %66, label %55, label %71

67:                                               ; preds = %50
  %68 = shl nsw i64 %27, 1
  %69 = tail call i32 @bcmp(i8* %24, i8* %26, i64 %68) #15
  %70 = icmp eq i32 %69, 0
  br label %71

71:                                               ; preds = %46, %38, %63, %55, %52, %33, %30, %67, %20, %2
  %72 = phi i1 [ false, %2 ], [ true, %20 ], [ %32, %30 ], [ %70, %67 ], [ true, %33 ], [ true, %52 ], [ false, %55 ], [ true, %63 ], [ false, %38 ], [ true, %46 ]
  ret i1 %72
}

; Function Attrs: nounwind readonly ssp uwtable
define hidden i32 @_ZN2v88internal12AstRawString7CompareEPKS1_S3_(%"class.v8::internal::AstRawString"* readonly, %"class.v8::internal::AstRawString"* readonly) local_unnamed_addr #4 align 2 {
  %3 = icmp eq %"class.v8::internal::AstRawString"* %0, %1
  br i1 %3, label %87, label %4

4:                                                ; preds = %2
  %5 = getelementptr inbounds %"class.v8::internal::AstRawString", %"class.v8::internal::AstRawString"* %0, i64 0, i32 1, i32 0
  %6 = load i8*, i8** %5, align 8
  %7 = getelementptr inbounds %"class.v8::internal::AstRawString", %"class.v8::internal::AstRawString"* %1, i64 0, i32 1, i32 0
  %8 = load i8*, i8** %7, align 8
  %9 = getelementptr inbounds %"class.v8::internal::AstRawString", %"class.v8::internal::AstRawString"* %0, i64 0, i32 3
  %10 = load i8, i8* %9, align 4, !range !2
  %11 = icmp eq i8 %10, 0
  %12 = getelementptr inbounds %"class.v8::internal::AstRawString", %"class.v8::internal::AstRawString"* %0, i64 0, i32 1, i32 1
  %13 = load i64, i64* %12, align 8
  %14 = trunc i64 %13 to i32
  %15 = sdiv i32 %14, 2
  %16 = select i1 %11, i32 %15, i32 %14
  %17 = getelementptr inbounds %"class.v8::internal::AstRawString", %"class.v8::internal::AstRawString"* %1, i64 0, i32 3
  %18 = load i8, i8* %17, align 4, !range !2
  %19 = icmp eq i8 %18, 0
  %20 = getelementptr inbounds %"class.v8::internal::AstRawString", %"class.v8::internal::AstRawString"* %1, i64 0, i32 1, i32 1
  %21 = load i64, i64* %20, align 8
  %22 = trunc i64 %21 to i32
  %23 = sdiv i32 %22, 2
  %24 = select i1 %19, i32 %23, i32 %22
  %25 = icmp slt i32 %24, %16
  %26 = select i1 %25, i32 %24, i32 %16
  %27 = sext i32 %26 to i64
  %28 = icmp ne i8 %18, 0
  br i1 %11, label %51, label %29

29:                                               ; preds = %4
  br i1 %28, label %30, label %33

30:                                               ; preds = %29
  %31 = tail call i32 @memcmp(i8* %6, i8* %8, i64 %27) #17
  %32 = icmp eq i32 %31, 0
  br i1 %32, label %85, label %87

33:                                               ; preds = %29
  %34 = getelementptr inbounds i8, i8* %6, i64 %27
  %35 = icmp sgt i32 %26, 0
  br i1 %35, label %36, label %85

36:                                               ; preds = %33
  %37 = bitcast i8* %8 to i16*
  br label %38

38:                                               ; preds = %36, %47
  %39 = phi i8* [ %48, %47 ], [ %6, %36 ]
  %40 = phi i16* [ %49, %47 ], [ %37, %36 ]
  %41 = load i8, i8* %39, align 1
  %42 = zext i8 %41 to i32
  %43 = load i16, i16* %40, align 2
  %44 = zext i16 %43 to i32
  %45 = sub nsw i32 %42, %44
  %46 = icmp eq i32 %45, 0
  br i1 %46, label %47, label %87

47:                                               ; preds = %38
  %48 = getelementptr inbounds i8, i8* %39, i64 1
  %49 = getelementptr inbounds i16, i16* %40, i64 1
  %50 = icmp ult i8* %48, %34
  br i1 %50, label %38, label %85

51:                                               ; preds = %4
  %52 = bitcast i8* %6 to i16*
  %53 = getelementptr inbounds i16, i16* %52, i64 %27
  %54 = icmp sgt i32 %26, 0
  br i1 %28, label %55, label %69

55:                                               ; preds = %51
  br i1 %54, label %56, label %85

56:                                               ; preds = %55, %65
  %57 = phi i16* [ %66, %65 ], [ %52, %55 ]
  %58 = phi i8* [ %67, %65 ], [ %8, %55 ]
  %59 = load i16, i16* %57, align 2
  %60 = zext i16 %59 to i32
  %61 = load i8, i8* %58, align 1
  %62 = zext i8 %61 to i32
  %63 = sub nsw i32 %60, %62
  %64 = icmp eq i32 %63, 0
  br i1 %64, label %65, label %87

65:                                               ; preds = %56
  %66 = getelementptr inbounds i16, i16* %57, i64 1
  %67 = getelementptr inbounds i8, i8* %58, i64 1
  %68 = icmp ult i16* %66, %53
  br i1 %68, label %56, label %85

69:                                               ; preds = %51
  br i1 %54, label %70, label %85

70:                                               ; preds = %69
  %71 = bitcast i8* %8 to i16*
  br label %72

72:                                               ; preds = %70, %81
  %73 = phi i16* [ %82, %81 ], [ %52, %70 ]
  %74 = phi i16* [ %83, %81 ], [ %71, %70 ]
  %75 = load i16, i16* %73, align 2
  %76 = zext i16 %75 to i32
  %77 = load i16, i16* %74, align 2
  %78 = zext i16 %77 to i32
  %79 = sub nsw i32 %76, %78
  %80 = icmp eq i32 %79, 0
  br i1 %80, label %81, label %87

81:                                               ; preds = %72
  %82 = getelementptr inbounds i16, i16* %73, i64 1
  %83 = getelementptr inbounds i16, i16* %74, i64 1
  %84 = icmp ult i16* %82, %53
  br i1 %84, label %72, label %85

85:                                               ; preds = %47, %81, %65, %69, %55, %33, %30
  %86 = sub nsw i32 %14, %22
  br label %87

87:                                               ; preds = %38, %72, %56, %85, %30, %2
  %88 = phi i32 [ 0, %2 ], [ %86, %85 ], [ %31, %30 ], [ %63, %56 ], [ %79, %72 ], [ %45, %38 ]
  ret i32 %88
}

; Function Attrs: nofree nounwind ssp uwtable
define hidden void @_ZNK2v88internal13AstConsString12ToRawStringsEv(%"class.std::__1::forward_list"* noalias nocapture sret, %"class.v8::internal::AstConsString"* nocapture readonly) local_unnamed_addr #7 align 2 {
  %3 = bitcast %"class.std::__1::forward_list"* %0 to i64*
  store i64 0, i64* %3, align 8
  %4 = getelementptr inbounds %"class.v8::internal::AstConsString", %"class.v8::internal::AstConsString"* %1, i64 0, i32 1, i32 0
  %5 = load %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"** %4, align 8
  %6 = icmp eq %"class.v8::internal::AstRawString"* %5, null
  br i1 %6, label %30, label %7

7:                                                ; preds = %2
  %8 = ptrtoint %"class.v8::internal::AstRawString"* %5 to i64
  %9 = tail call i8* @_Znwm(i64 16) #18
  %10 = getelementptr inbounds i8, i8* %9, i64 8
  %11 = bitcast i8* %10 to i64*
  store i64 %8, i64* %11, align 8
  %12 = bitcast i8* %9 to i64*
  store i64 0, i64* %12, align 8
  %13 = bitcast %"class.std::__1::forward_list"* %0 to i8**
  store i8* %9, i8** %13, align 8
  %14 = getelementptr inbounds %"class.v8::internal::AstConsString", %"class.v8::internal::AstConsString"* %1, i64 0, i32 1, i32 1
  %15 = load %"struct.v8::internal::AstConsString::Segment"*, %"struct.v8::internal::AstConsString::Segment"** %14, align 8
  %16 = icmp eq %"struct.v8::internal::AstConsString::Segment"* %15, null
  br i1 %16, label %30, label %17

17:                                               ; preds = %7, %17
  %18 = phi i8* [ %21, %17 ], [ %9, %7 ]
  %19 = phi %"struct.v8::internal::AstConsString::Segment"* [ %28, %17 ], [ %15, %7 ]
  %20 = ptrtoint i8* %18 to i64
  %21 = tail call i8* @_Znwm(i64 16) #18
  %22 = getelementptr inbounds i8, i8* %21, i64 8
  %23 = bitcast %"struct.v8::internal::AstConsString::Segment"* %19 to i64*
  %24 = load i64, i64* %23, align 8
  %25 = bitcast i8* %22 to i64*
  store i64 %24, i64* %25, align 8
  %26 = bitcast i8* %21 to i64*
  store i64 %20, i64* %26, align 8
  store i8* %21, i8** %13, align 8
  %27 = getelementptr inbounds %"struct.v8::internal::AstConsString::Segment", %"struct.v8::internal::AstConsString::Segment"* %19, i64 0, i32 1
  %28 = load %"struct.v8::internal::AstConsString::Segment"*, %"struct.v8::internal::AstConsString::Segment"** %27, align 8
  %29 = icmp eq %"struct.v8::internal::AstConsString::Segment"* %28, null
  br i1 %29, label %30, label %17

30:                                               ; preds = %17, %7, %2
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal18AstStringConstantsC2EPNS0_7IsolateEm(%"class.v8::internal::AstStringConstants"*, %"class.v8::internal::Isolate"*, i64) unnamed_addr #0 align 2 {
  %4 = alloca %"class.v8::internal::AstRawString"*, align 8
  %5 = alloca %"class.v8::internal::AstRawString"*, align 8
  %6 = alloca %"class.v8::internal::AstRawString"*, align 8
  %7 = alloca %"class.v8::internal::AstRawString"*, align 8
  %8 = alloca %"class.v8::internal::AstRawString"*, align 8
  %9 = alloca %"class.v8::internal::AstRawString"*, align 8
  %10 = alloca %"class.v8::internal::AstRawString"*, align 8
  %11 = alloca %"class.v8::internal::AstRawString"*, align 8
  %12 = alloca %"class.v8::internal::AstRawString"*, align 8
  %13 = alloca %"class.v8::internal::AstRawString"*, align 8
  %14 = alloca %"class.v8::internal::AstRawString"*, align 8
  %15 = alloca %"class.v8::internal::AstRawString"*, align 8
  %16 = alloca %"class.v8::internal::AstRawString"*, align 8
  %17 = alloca %"class.v8::internal::AstRawString"*, align 8
  %18 = alloca %"class.v8::internal::AstRawString"*, align 8
  %19 = alloca %"class.v8::internal::AstRawString"*, align 8
  %20 = alloca %"class.v8::internal::AstRawString"*, align 8
  %21 = alloca %"class.v8::internal::AstRawString"*, align 8
  %22 = alloca %"class.v8::internal::AstRawString"*, align 8
  %23 = alloca %"class.v8::internal::AstRawString"*, align 8
  %24 = alloca %"class.v8::internal::AstRawString"*, align 8
  %25 = alloca %"class.v8::internal::AstRawString"*, align 8
  %26 = alloca %"class.v8::internal::AstRawString"*, align 8
  %27 = alloca %"class.v8::internal::AstRawString"*, align 8
  %28 = alloca %"class.v8::internal::AstRawString"*, align 8
  %29 = alloca %"class.v8::internal::AstRawString"*, align 8
  %30 = alloca %"class.v8::internal::AstRawString"*, align 8
  %31 = alloca %"class.v8::internal::AstRawString"*, align 8
  %32 = alloca %"class.v8::internal::AstRawString"*, align 8
  %33 = alloca %"class.v8::internal::AstRawString"*, align 8
  %34 = alloca %"class.v8::internal::AstRawString"*, align 8
  %35 = alloca %"class.v8::internal::AstRawString"*, align 8
  %36 = alloca %"class.v8::internal::AstRawString"*, align 8
  %37 = alloca %"class.v8::internal::AstRawString"*, align 8
  %38 = alloca %"class.v8::internal::AstRawString"*, align 8
  %39 = alloca %"class.v8::internal::AstRawString"*, align 8
  %40 = alloca %"class.v8::internal::AstRawString"*, align 8
  %41 = alloca %"class.v8::internal::AstRawString"*, align 8
  %42 = alloca %"class.v8::internal::AstRawString"*, align 8
  %43 = alloca %"class.v8::internal::AstRawString"*, align 8
  %44 = alloca %"class.v8::internal::AstRawString"*, align 8
  %45 = alloca %"class.v8::internal::AstRawString"*, align 8
  %46 = alloca %"class.v8::internal::AstRawString"*, align 8
  %47 = alloca %"class.v8::internal::AstRawString"*, align 8
  %48 = alloca %"class.v8::internal::AstRawString"*, align 8
  %49 = alloca %"class.v8::internal::AstRawString"*, align 8
  %50 = alloca %"class.v8::internal::AstRawString"*, align 8
  %51 = alloca %"class.v8::internal::AstRawString"*, align 8
  %52 = alloca %"class.v8::internal::AstRawString"*, align 8
  %53 = alloca %"class.v8::internal::AstRawString"*, align 8
  %54 = alloca %"class.v8::internal::AstRawString"*, align 8
  %55 = alloca %"class.v8::internal::AstRawString"*, align 8
  %56 = alloca %"class.v8::internal::AstRawString"*, align 8
  %57 = alloca %"class.v8::internal::AstRawString"*, align 8
  %58 = getelementptr inbounds %"class.v8::internal::AstStringConstants", %"class.v8::internal::AstStringConstants"* %0, i64 0, i32 0
  %59 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %1, i64 0, i32 34
  %60 = load %"class.v8::internal::AccountingAllocator"*, %"class.v8::internal::AccountingAllocator"** %59, align 8
  tail call void @_ZN2v88internal4ZoneC1EPNS0_19AccountingAllocatorEPKcb(%"class.v8::internal::Zone"* %58, %"class.v8::internal::AccountingAllocator"* %60, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @__func__._ZN2v88internal18AstStringConstantsC2EPNS0_7IsolateEm, i64 0, i64 0), i1 zeroext false) #15
  %61 = getelementptr inbounds %"class.v8::internal::AstStringConstants", %"class.v8::internal::AstStringConstants"* %0, i64 0, i32 1
  %62 = getelementptr inbounds %"class.v8::internal::AstStringConstants", %"class.v8::internal::AstStringConstants"* %0, i64 0, i32 1, i32 0, i32 1
  %63 = bitcast i32* %62 to i64*
  store i64 0, i64* %63, align 8
  %64 = tail call noalias i8* @malloc(i64 128) #15
  %65 = getelementptr inbounds %"class.v8::base::TemplateHashMapImpl", %"class.v8::base::TemplateHashMapImpl"* %61, i64 0, i32 0, i32 0
  %66 = bitcast %"class.v8::base::TemplateHashMapImpl"* %61 to i8**
  store i8* %64, i8** %66, align 8
  %67 = icmp eq i8* %64, null
  br i1 %67, label %68, label %69

68:                                               ; preds = %3
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.57, i64 0, i64 0)) #16
  unreachable

69:                                               ; preds = %3
  store i32 8, i32* %62, align 8
  %70 = bitcast i8* %64 to %"class.v8::internal::AstRawString"**
  store %"class.v8::internal::AstRawString"* null, %"class.v8::internal::AstRawString"** %70, align 8
  %71 = getelementptr inbounds i8, i8* %64, i64 16
  %72 = bitcast i8* %71 to %"class.v8::internal::AstRawString"**
  store %"class.v8::internal::AstRawString"* null, %"class.v8::internal::AstRawString"** %72, align 8
  %73 = getelementptr inbounds i8, i8* %64, i64 32
  %74 = bitcast i8* %73 to %"class.v8::internal::AstRawString"**
  store %"class.v8::internal::AstRawString"* null, %"class.v8::internal::AstRawString"** %74, align 8
  %75 = load i32, i32* %62, align 8
  %76 = icmp ugt i32 %75, 3
  br i1 %76, label %77, label %85

77:                                               ; preds = %69, %77
  %78 = phi i64 [ %81, %77 ], [ 3, %69 ]
  %79 = load %"struct.v8::base::TemplateHashMapEntry"*, %"struct.v8::base::TemplateHashMapEntry"** %65, align 8
  %80 = getelementptr inbounds %"struct.v8::base::TemplateHashMapEntry", %"struct.v8::base::TemplateHashMapEntry"* %79, i64 %78, i32 0, i32 0
  store %"class.v8::internal::AstRawString"* null, %"class.v8::internal::AstRawString"** %80, align 8
  %81 = add nuw nsw i64 %78, 1
  %82 = load i32, i32* %62, align 8
  %83 = zext i32 %82 to i64
  %84 = icmp ult i64 %81, %83
  br i1 %84, label %77, label %85

85:                                               ; preds = %77, %69
  %86 = getelementptr inbounds %"class.v8::internal::AstStringConstants", %"class.v8::internal::AstStringConstants"* %0, i64 0, i32 1, i32 0, i32 2
  store i32 0, i32* %86, align 4
  %87 = getelementptr inbounds %"class.v8::internal::AstStringConstants", %"class.v8::internal::AstStringConstants"* %0, i64 0, i32 2
  store i64 %2, i64* %87, align 8
  %88 = tail call i32 @_ZN2v88internal12StringHasher20HashSequentialStringIhEEjPKT_im(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str, i64 0, i64 0), i32 9, i64 %2)
  %89 = getelementptr inbounds %"class.v8::internal::AstStringConstants", %"class.v8::internal::AstStringConstants"* %0, i64 0, i32 0, i32 2
  %90 = load i64, i64* %89, align 8
  %91 = getelementptr inbounds %"class.v8::internal::AstStringConstants", %"class.v8::internal::AstStringConstants"* %0, i64 0, i32 0, i32 3
  %92 = load i64, i64* %91, align 8
  %93 = sub i64 %92, %90
  %94 = icmp ult i64 %93, 32
  br i1 %94, label %95, label %97, !prof !3

95:                                               ; preds = %85
  %96 = tail call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %58, i64 32) #15
  br label %99

97:                                               ; preds = %85
  %98 = add i64 %90, 32
  store i64 %98, i64* %89, align 8
  br label %99

99:                                               ; preds = %95, %97
  %100 = phi i64 [ %96, %95 ], [ %90, %97 ]
  %101 = inttoptr i64 %100 to %"class.v8::internal::AstRawString"*
  %102 = getelementptr inbounds %"class.v8::internal::AstRawString", %"class.v8::internal::AstRawString"* %101, i64 0, i32 0, i32 0
  store %"class.v8::internal::AstRawString"* null, %"class.v8::internal::AstRawString"** %102, align 8
  %103 = getelementptr inbounds %"class.v8::internal::AstRawString", %"class.v8::internal::AstRawString"* %101, i64 0, i32 1, i32 0
  store i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str, i64 0, i64 0), i8** %103, align 8
  %104 = getelementptr inbounds %"class.v8::internal::AstRawString", %"class.v8::internal::AstRawString"* %101, i64 0, i32 1, i32 1
  store i64 9, i64* %104, align 8
  %105 = getelementptr inbounds %"class.v8::internal::AstRawString", %"class.v8::internal::AstRawString"* %101, i64 0, i32 2
  store i32 %88, i32* %105, align 8
  %106 = getelementptr inbounds %"class.v8::internal::AstRawString", %"class.v8::internal::AstRawString"* %101, i64 0, i32 3
  store i8 1, i8* %106, align 4
  %107 = getelementptr inbounds %"class.v8::internal::AstStringConstants", %"class.v8::internal::AstStringConstants"* %0, i64 0, i32 3
  store %"class.v8::internal::AstRawString"* %101, %"class.v8::internal::AstRawString"** %107, align 8
  %108 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %1, i64 0, i32 0, i32 7, i32 0, i64 259
  %109 = inttoptr i64 %100 to i64**
  store i64* %108, i64** %109, align 8
  %110 = bitcast %"class.v8::internal::AstRawString"** %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %110) #15
  %111 = bitcast %"class.v8::internal::AstRawString"** %107 to i64*
  %112 = load i64, i64* %111, align 8
  %113 = bitcast %"class.v8::internal::AstRawString"** %4 to i64*
  store i64 %112, i64* %113, align 8
  %114 = inttoptr i64 %112 to %"class.v8::internal::AstRawString"*
  %115 = getelementptr inbounds %"class.v8::internal::AstRawString", %"class.v8::internal::AstRawString"* %114, i64 0, i32 2
  %116 = load i32, i32* %115, align 8
  %117 = lshr i32 %116, 2
  %118 = call %"struct.v8::base::TemplateHashMapEntry"* @_ZN2v84base19TemplateHashMapImplIPKNS_8internal12AstRawStringENS0_14NoHashMapValueENS2_22AstRawStringMapMatcherENS0_23DefaultAllocationPolicyEE9InsertNewERKS5_j(%"class.v8::base::TemplateHashMapImpl"* %61, %"class.v8::internal::AstRawString"** nonnull dereferenceable(8) %4, i32 %117)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %110) #15
  %119 = load i64, i64* %87, align 8
  %120 = call i32 @_ZN2v88internal12StringHasher20HashSequentialStringIhEEjPKT_im(i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.1, i64 0, i64 0), i32 20, i64 %119)
  %121 = load i64, i64* %89, align 8
  %122 = load i64, i64* %91, align 8
  %123 = sub i64 %122, %121
  %124 = icmp ult i64 %123, 32
  br i1 %124, label %125, label %127, !prof !3

125:                                              ; preds = %99
  %126 = call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %58, i64 32) #15
  br label %129

127:                                              ; preds = %99
  %128 = add i64 %121, 32
  store i64 %128, i64* %89, align 8
  br label %129

129:                                              ; preds = %125, %127
  %130 = phi i64 [ %126, %125 ], [ %121, %127 ]
  %131 = inttoptr i64 %130 to %"class.v8::internal::AstRawString"*
  %132 = getelementptr inbounds %"class.v8::internal::AstRawString", %"class.v8::internal::AstRawString"* %131, i64 0, i32 0, i32 0
  store %"class.v8::internal::AstRawString"* null, %"class.v8::internal::AstRawString"** %132, align 8
  %133 = getelementptr inbounds %"class.v8::internal::AstRawString", %"class.v8::internal::AstRawString"* %131, i64 0, i32 1, i32 0
  store i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.1, i64 0, i64 0), i8** %133, align 8
  %134 = getelementptr inbounds %"class.v8::internal::AstRawString", %"class.v8::internal::AstRawString"* %131, i64 0, i32 1, i32 1
  store i64 20, i64* %134, align 8
  %135 = getelementptr inbounds %"class.v8::internal::AstRawString", %"class.v8::internal::AstRawString"* %131, i64 0, i32 2
  store i32 %120, i32* %135, align 8
  %136 = getelementptr inbounds %"class.v8::internal::AstRawString", %"class.v8::internal::AstRawString"* %131, i64 0, i32 3
  store i8 1, i8* %136, align 4
  %137 = getelementptr inbounds %"class.v8::internal::AstStringConstants", %"class.v8::internal::AstStringConstants"* %0, i64 0, i32 4
  store %"class.v8::internal::AstRawString"* %131, %"class.v8::internal::AstRawString"** %137, align 8
  %138 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %1, i64 0, i32 0, i32 7, i32 0, i64 258
  %139 = inttoptr i64 %130 to i64**
  store i64* %138, i64** %139, align 8
  %140 = bitcast %"class.v8::internal::AstRawString"** %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %140) #15
  %141 = bitcast %"class.v8::internal::AstRawString"** %137 to i64*
  %142 = load i64, i64* %141, align 8
  %143 = bitcast %"class.v8::internal::AstRawString"** %5 to i64*
  store i64 %142, i64* %143, align 8
  %144 = inttoptr i64 %142 to %"class.v8::internal::AstRawString"*
  %145 = getelementptr inbounds %"class.v8::internal::AstRawString", %"class.v8::internal::AstRawString"* %144, i64 0, i32 2
  %146 = load i32, i32* %145, align 8
  %147 = lshr i32 %146, 2
  %148 = call %"struct.v8::base::TemplateHashMapEntry"* @_ZN2v84base19TemplateHashMapImplIPKNS_8internal12AstRawStringENS0_14NoHashMapValueENS2_22AstRawStringMapMatcherENS0_23DefaultAllocationPolicyEE9InsertNewERKS5_j(%"class.v8::base::TemplateHashMapImpl"* %61, %"class.v8::internal::AstRawString"** nonnull dereferenceable(8) %5, i32 %147)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %140) #15
  %149 = load i64, i64* %87, align 8
  %150 = call i32 @_ZN2v88internal12StringHasher20HashSequentialStringIhEEjPKT_im(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.2, i64 0, i64 0), i32 9, i64 %149)
  %151 = load i64, i64* %89, align 8
  %152 = load i64, i64* %91, align 8
  %153 = sub i64 %152, %151
  %154 = icmp ult i64 %153, 32
  br i1 %154, label %155, label %157, !prof !3

155:                                              ; preds = %129
  %156 = call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %58, i64 32) #15
  br label %159

157:                                              ; preds = %129
  %158 = add i64 %151, 32
  store i64 %158, i64* %89, align 8
  br label %159

159:                                              ; preds = %155, %157
  %160 = phi i64 [ %156, %155 ], [ %151, %157 ]
  %161 = inttoptr i64 %160 to %"class.v8::internal::AstRawString"*
  %162 = getelementptr inbounds %"class.v8::internal::AstRawString", %"class.v8::internal::AstRawString"* %161, i64 0, i32 0, i32 0
  store %"class.v8::internal::AstRawString"* null, %"class.v8::internal::AstRawString"** %162, align 8
  %163 = getelementptr inbounds %"class.v8::internal::AstRawString", %"class.v8::internal::AstRawString"* %161, i64 0, i32 1, i32 0
  store i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.2, i64 0, i64 0), i8** %163, align 8
  %164 = getelementptr inbounds %"class.v8::internal::AstRawString", %"class.v8::internal::AstRawString"* %161, i64 0, i32 1, i32 1
  store i64 9, i64* %164, align 8
  %165 = getelementptr inbounds %"class.v8::internal::AstRawString", %"class.v8::internal::AstRawString"* %161, i64 0, i32 2
  store i32 %150, i32* %165, align 8
  %166 = getelementptr inbounds %"class.v8::internal::AstRawString", %"class.v8::internal::AstRawString"* %161, i64 0, i32 3
  store i8 1, i8* %166, align 4
  %167 = getelementptr inbounds %"class.v8::internal::AstStringConstants", %"class.v8::internal::AstStringConstants"* %0, i64 0, i32 5
  store %"class.v8::internal::AstRawString"* %161, %"class.v8::internal::AstRawString"** %167, align 8
  %168 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %1, i64 0, i32 0, i32 7, i32 0, i64 262
  %169 = inttoptr i64 %160 to i64**
  store i64* %168, i64** %169, align 8
  %170 = bitcast %"class.v8::internal::AstRawString"** %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %170) #15
  %171 = bitcast %"class.v8::internal::AstRawString"** %167 to i64*
  %172 = load i64, i64* %171, align 8
  %173 = bitcast %"class.v8::internal::AstRawString"** %6 to i64*
  store i64 %172, i64* %173, align 8
  %174 = inttoptr i64 %172 to %"class.v8::internal::AstRawString"*
  %175 = getelementptr inbounds %"class.v8::internal::AstRawString", %"class.v8::internal::AstRawString"* %174, i64 0, i32 2
  %176 = load i32, i32* %175, align 8
  %177 = lshr i32 %176, 2
  %178 = call %"struct.v8::base::TemplateHashMapEntry"* @_ZN2v84base19TemplateHashMapImplIPKNS_8internal12AstRawStringENS0_14NoHashMapValueENS2_22AstRawStringMapMatcherENS0_23DefaultAllocationPolicyEE9InsertNewERKS5_j(%"class.v8::base::TemplateHashMapImpl"* %61, %"class.v8::internal::AstRawString"** nonnull dereferenceable(8) %6, i32 %177)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %170) #15
  %179 = load i64, i64* %87, align 8
  %180 = call i32 @_ZN2v88internal12StringHasher20HashSequentialStringIhEEjPKT_im(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3, i64 0, i64 0), i32 2, i64 %179)
  %181 = load i64, i64* %89, align 8
  %182 = load i64, i64* %91, align 8
  %183 = sub i64 %182, %181
  %184 = icmp ult i64 %183, 32
  br i1 %184, label %185, label %187, !prof !3

185:                                              ; preds = %159
  %186 = call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %58, i64 32) #15
  br label %189

187:                                              ; preds = %159
  %188 = add i64 %181, 32
  store i64 %188, i64* %89, align 8
  br label %189

189:                                              ; preds = %185, %187
  %190 = phi i64 [ %186, %185 ], [ %181, %187 ]
  %191 = inttoptr i64 %190 to %"class.v8::internal::AstRawString"*
  %192 = getelementptr inbounds %"class.v8::internal::AstRawString", %"class.v8::internal::AstRawString"* %191, i64 0, i32 0, i32 0
  store %"class.v8::internal::AstRawString"* null, %"class.v8::internal::AstRawString"** %192, align 8
  %193 = getelementptr inbounds %"class.v8::internal::AstRawString", %"class.v8::internal::AstRawString"* %191, i64 0, i32 1, i32 0
  store i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3, i64 0, i64 0), i8** %193, align 8
  %194 = getelementptr inbounds %"class.v8::internal::AstRawString", %"class.v8::internal::AstRawString"* %191, i64 0, i32 1, i32 1
  store i64 2, i64* %194, align 8
  %195 = getelementptr inbounds %"class.v8::internal::AstRawString", %"class.v8::internal::AstRawString"* %191, i64 0, i32 2
  store i32 %180, i32* %195, align 8
  %196 = getelementptr inbounds %"class.v8::internal::AstRawString", %"class.v8::internal::AstRawString"* %191, i64 0, i32 3
  store i8 1, i8* %196, align 4
  %197 = getelementptr inbounds %"class.v8::internal::AstStringConstants", %"class.v8::internal::AstStringConstants"* %0, i64 0, i32 6
  store %"class.v8::internal::AstRawString"* %191, %"class.v8::internal::AstRawString"** %197, align 8
  %198 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %1, i64 0, i32 0, i32 7, i32 0, i64 268
  %199 = inttoptr i64 %190 to i64**
  store i64* %198, i64** %199, align 8
  %200 = bitcast %"class.v8::internal::AstRawString"** %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %200) #15
  %201 = bitcast %"class.v8::internal::AstRawString"** %197 to i64*
  %202 = load i64, i64* %201, align 8
  %203 = bitcast %"class.v8::internal::AstRawString"** %7 to i64*
  store i64 %202, i64* %203, align 8
  %204 = inttoptr i64 %202 to %"class.v8::internal::AstRawString"*
  %205 = getelementptr inbounds %"class.v8::internal::AstRawString", %"class.v8::internal::AstRawString"* %204, i64 0, i32 2
  %206 = load i32, i32* %205, align 8
  %207 = lshr i32 %206, 2
  %208 = call %"struct.v8::base::TemplateHashMapEntry"* @_ZN2v84base19TemplateHashMapImplIPKNS_8internal12AstRawStringENS0_14NoHashMapValueENS2_22AstRawStringMapMatcherENS0_23DefaultAllocationPolicyEE9InsertNewERKS5_j(%"class.v8::base::TemplateHashMapImpl"* %61, %"class.v8::internal::AstRawString"** nonnull dereferenceable(8) %7, i32 %207)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %200) #15
  %209 = load i64, i64* %87, align 8
  %210 = call i32 @_ZN2v88internal12StringHasher20HashSequentialStringIhEEjPKT_im(i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.4, i64 0, i64 0), i32 6, i64 %209)
  %211 = load i64, i64* %89, align 8
  %212 = load i64, i64* %91, align 8
  %213 = sub i64 %212, %211
  %214 = icmp ult i64 %213, 32
  br i1 %214, label %215, label %217, !prof !3

215:                                              ; preds = %189
  %216 = call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %58, i64 32) #15
  br label %219

217:                                              ; preds = %189
  %218 = add i64 %211, 32
  store i64 %218, i64* %89, align 8
  br label %219

219:                                              ; preds = %215, %217
  %220 = phi i64 [ %216, %215 ], [ %211, %217 ]
  %221 = inttoptr i64 %220 to %"class.v8::internal::AstRawString"*
  %222 = getelementptr inbounds %"class.v8::internal::AstRawString", %"class.v8::internal::AstRawString"* %221, i64 0, i32 0, i32 0
  store %"class.v8::internal::AstRawString"* null, %"class.v8::internal::AstRawString"** %222, align 8
  %223 = getelementptr inbounds %"class.v8::internal::AstRawString", %"class.v8::internal::AstRawString"* %221, i64 0, i32 1, i32 0
  store i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.4, i64 0, i64 0), i8** %223, align 8
  %224 = getelementptr inbounds %"class.v8::internal::AstRawString", %"class.v8::internal::AstRawString"* %221, i64 0, i32 1, i32 1
  store i64 6, i64* %224, align 8
  %225 = getelementptr inbounds %"class.v8::internal::AstRawString", %"class.v8::internal::AstRawString"* %221, i64 0, i32 2
  store i32 %210, i32* %225, align 8
  %226 = getelementptr inbounds %"class.v8::internal::AstRawString", %"class.v8::internal::AstRawString"* %221, i64 0, i32 3
  store i8 1, i8* %226, align 4
  %227 = getelementptr inbounds %"class.v8::internal::AstStringConstants", %"class.v8::internal::AstStringConstants"* %0, i64 0, i32 7
  store %"class.v8::internal::AstRawString"* %221, %"class.v8::internal::AstRawString"** %227, align 8
  %228 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %1, i64 0, i32 0, i32 7, i32 0, i64 269
  %229 = inttoptr i64 %220 to i64**
  store i64* %228, i64** %229, align 8
  %230 = bitcast %"class.v8::internal::AstRawString"** %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %230) #15
  %231 = bitcast %"class.v8::internal::AstRawString"** %227 to i64*
  %232 = load i64, i64* %231, align 8
  %233 = bitcast %"class.v8::internal::AstRawString"** %8 to i64*
  store i64 %232, i64* %233, align 8
  %234 = inttoptr i64 %232 to %"class.v8::internal::AstRawString"*
  %235 = getelementptr inbounds %"class.v8::internal::AstRawString", %"class.v8::internal::AstRawString"* %234, i64 0, i32 2
  %236 = load i32, i32* %235, align 8
  %237 = lshr i32 %236, 2
  %238 = call %"struct.v8::base::TemplateHashMapEntry"* @_ZN2v84base19TemplateHashMapImplIPKNS_8internal12AstRawStringENS0_14NoHashMapValueENS2_22AstRawStringMapMatcherENS0_23DefaultAllocationPolicyEE9InsertNewERKS5_j(%"class.v8::base::TemplateHashMapImpl"* %61, %"class.v8::internal::AstRawString"** nonnull dereferenceable(8) %8, i32 %237)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %230) #15
  %239 = load i64, i64* %87, align 8
  %240 = call i32 @_ZN2v88internal12StringHasher20HashSequentialStringIhEEjPKT_im(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.5, i64 0, i64 0), i32 5, i64 %239)
  %241 = load i64, i64* %89, align 8
  %242 = load i64, i64* %91, align 8
  %243 = sub i64 %242, %241
  %244 = icmp ult i64 %243, 32
  br i1 %244, label %245, label %247, !prof !3

245:                                              ; preds = %219
  %246 = call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %58, i64 32) #15
  br label %249

247:                                              ; preds = %219
  %248 = add i64 %241, 32
  store i64 %248, i64* %89, align 8
  br label %249

249:                                              ; preds = %245, %247
  %250 = phi i64 [ %246, %245 ], [ %241, %247 ]
  %251 = inttoptr i64 %250 to %"class.v8::internal::AstRawString"*
  %252 = getelementptr inbounds %"class.v8::internal::AstRawString", %"class.v8::internal::AstRawString"* %251, i64 0, i32 0, i32 0
  store %"class.v8::internal::AstRawString"* null, %"class.v8::internal::AstRawString"** %252, align 8
  %253 = getelementptr inbounds %"class.v8::internal::AstRawString", %"class.v8::internal::AstRawString"* %251, i64 0, i32 1, i32 0
  store i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.5, i64 0, i64 0), i8** %253, align 8
  %254 = getelementptr inbounds %"class.v8::internal::AstRawString", %"class.v8::internal::AstRawString"* %251, i64 0, i32 1, i32 1
  store i64 5, i64* %254, align 8
  %255 = getelementptr inbounds %"class.v8::internal::AstRawString", %"class.v8::internal::AstRawString"* %251, i64 0, i32 2
  store i32 %240, i32* %255, align 8
  %256 = getelementptr inbounds %"class.v8::internal::AstRawString", %"class.v8::internal::AstRawString"* %251, i64 0, i32 3
  store i8 1, i8* %256, align 4
  %257 = getelementptr inbounds %"class.v8::internal::AstStringConstants", %"class.v8::internal::AstStringConstants"* %0, i64 0, i32 8
  store %"class.v8::internal::AstRawString"* %251, %"class.v8::internal::AstRawString"** %257, align 8
  %258 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %1, i64 0, i32 0, i32 7, i32 0, i64 270
  %259 = inttoptr i64 %250 to i64**
  store i64* %258, i64** %259, align 8
  %260 = bitcast %"class.v8::internal::AstRawString"** %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %260) #15
  %261 = bitcast %"class.v8::internal::AstRawString"** %257 to i64*
  %262 = load i64, i64* %261, align 8
  %263 = bitcast %"class.v8::internal::AstRawString"** %9 to i64*
  store i64 %262, i64* %263, align 8
  %264 = inttoptr i64 %262 to %"class.v8::internal::AstRawString"*
  %265 = getelementptr inbounds %"class.v8::internal::AstRawString", %"class.v8::internal::AstRawString"* %264, i64 0, i32 2
  %266 = load i32, i32* %265, align 8
  %267 = lshr i32 %266, 2
  %268 = call %"struct.v8::base::TemplateHashMapEntry"* @_ZN2v84base19TemplateHashMapImplIPKNS_8internal12AstRawStringENS0_14NoHashMapValueENS2_22AstRawStringMapMatcherENS0_23DefaultAllocationPolicyEE9InsertNewERKS5_j(%"class.v8::base::TemplateHashMapImpl"* %61, %"class.v8::internal::AstRawString"** nonnull dereferenceable(8) %9, i32 %267)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %260) #15
  %269 = load i64, i64* %87, align 8
  %270 = call i32 @_ZN2v88internal12StringHasher20HashSequentialStringIhEEjPKT_im(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.6, i64 0, i64 0), i32 5, i64 %269)
  %271 = load i64, i64* %89, align 8
  %272 = load i64, i64* %91, align 8
  %273 = sub i64 %272, %271
  %274 = icmp ult i64 %273, 32
  br i1 %274, label %275, label %277, !prof !3

275:                                              ; preds = %249
  %276 = call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %58, i64 32) #15
  br label %279

277:                                              ; preds = %249
  %278 = add i64 %271, 32
  store i64 %278, i64* %89, align 8
  br label %279

279:                                              ; preds = %275, %277
  %280 = phi i64 [ %276, %275 ], [ %271, %277 ]
  %281 = inttoptr i64 %280 to %"class.v8::internal::AstRawString"*
  %282 = getelementptr inbounds %"class.v8::internal::AstRawString", %"class.v8::internal::AstRawString"* %281, i64 0, i32 0, i32 0
  store %"class.v8::internal::AstRawString"* null, %"class.v8::internal::AstRawString"** %282, align 8
  %283 = getelementptr inbounds %"class.v8::internal::AstRawString", %"class.v8::internal::AstRawString"* %281, i64 0, i32 1, i32 0
  store i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.6, i64 0, i64 0), i8** %283, align 8
  %284 = getelementptr inbounds %"class.v8::internal::AstRawString", %"class.v8::internal::AstRawString"* %281, i64 0, i32 1, i32 1
  store i64 5, i64* %284, align 8
  %285 = getelementptr inbounds %"class.v8::internal::AstRawString", %"class.v8::internal::AstRawString"* %281, i64 0, i32 2
  store i32 %270, i32* %285, align 8
  %286 = getelementptr inbounds %"class.v8::internal::AstRawString", %"class.v8::internal::AstRawString"* %281, i64 0, i32 3
  store i8 1, i8* %286, align 4
  %287 = getelementptr inbounds %"class.v8::internal::AstStringConstants", %"class.v8::internal::AstStringConstants"* %0, i64 0, i32 9
  store %"class.v8::internal::AstRawString"* %281, %"class.v8::internal::AstRawString"** %287, align 8
  %288 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %1, i64 0, i32 0, i32 7, i32 0, i64 272
  %289 = inttoptr i64 %280 to i64**
  store i64* %288, i64** %289, align 8
  %290 = bitcast %"class.v8::internal::AstRawString"** %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %290) #15
  %291 = bitcast %"class.v8::internal::AstRawString"** %287 to i64*
  %292 = load i64, i64* %291, align 8
  %293 = bitcast %"class.v8::internal::AstRawString"** %10 to i64*
  store i64 %292, i64* %293, align 8
  %294 = inttoptr i64 %292 to %"class.v8::internal::AstRawString"*
  %295 = getelementptr inbounds %"class.v8::internal::AstRawString", %"class.v8::internal::AstRawString"* %294, i64 0, i32 2
  %296 = load i32, i32* %295, align 8
  %297 = lshr i32 %296, 2
  %298 = call %"struct.v8::base::TemplateHashMapEntry"* @_ZN2v84base19TemplateHashMapImplIPKNS_8internal12AstRawStringENS0_14NoHashMapValueENS2_22AstRawStringMapMatcherENS0_23DefaultAllocationPolicyEE9InsertNewERKS5_j(%"class.v8::base::TemplateHashMapImpl"* %61, %"class.v8::internal::AstRawString"** nonnull dereferenceable(8) %10, i32 %297)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %290) #15
  %299 = load i64, i64* %87, align 8
  %300 = call i32 @_ZN2v88internal12StringHasher20HashSequentialStringIhEEjPKT_im(i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.7, i64 0, i64 0), i32 6, i64 %299)
  %301 = load i64, i64* %89, align 8
  %302 = load i64, i64* %91, align 8
  %303 = sub i64 %302, %301
  %304 = icmp ult i64 %303, 32
  br i1 %304, label %305, label %307, !prof !3

305:                                              ; preds = %279
  %306 = call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %58, i64 32) #15
  br label %309

307:                                              ; preds = %279
  %308 = add i64 %301, 32
  store i64 %308, i64* %89, align 8
  br label %309

309:                                              ; preds = %305, %307
  %310 = phi i64 [ %306, %305 ], [ %301, %307 ]
  %311 = inttoptr i64 %310 to %"class.v8::internal::AstRawString"*
  %312 = getelementptr inbounds %"class.v8::internal::AstRawString", %"class.v8::internal::AstRawString"* %311, i64 0, i32 0, i32 0
  store %"class.v8::internal::AstRawString"* null, %"class.v8::internal::AstRawString"** %312, align 8
  %313 = getelementptr inbounds %"class.v8::internal::AstRawString", %"class.v8::internal::AstRawString"* %311, i64 0, i32 1, i32 0
  store i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.7, i64 0, i64 0), i8** %313, align 8
  %314 = getelementptr inbounds %"class.v8::internal::AstRawString", %"class.v8::internal::AstRawString"* %311, i64 0, i32 1, i32 1
  store i64 6, i64* %314, align 8
  %315 = getelementptr inbounds %"class.v8::internal::AstRawString", %"class.v8::internal::AstRawString"* %311, i64 0, i32 2
  store i32 %300, i32* %315, align 8
  %316 = getelementptr inbounds %"class.v8::internal::AstRawString", %"class.v8::internal::AstRawString"* %311, i64 0, i32 3
  store i8 1, i8* %316, align 4
  %317 = getelementptr inbounds %"class.v8::internal::AstStringConstants", %"class.v8::internal::AstStringConstants"* %0, i64 0, i32 10
  store %"class.v8::internal::AstRawString"* %311, %"class.v8::internal::AstRawString"** %317, align 8
  %318 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %1, i64 0, i32 0, i32 7, i32 0, i64 274
  %319 = inttoptr i64 %310 to i64**
  store i64* %318, i64** %319, align 8
  %320 = bitcast %"class.v8::internal::AstRawString"** %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %320) #15
  %321 = bitcast %"class.v8::internal::AstRawString"** %317 to i64*
  %322 = load i64, i64* %321, align 8
  %323 = bitcast %"class.v8::internal::AstRawString"** %11 to i64*
  store i64 %322, i64* %323, align 8
  %324 = inttoptr i64 %322 to %"class.v8::internal::AstRawString"*
  %325 = getelementptr inbounds %"class.v8::internal::AstRawString", %"class.v8::internal::AstRawString"* %324, i64 0, i32 2
  %326 = load i32, i32* %325, align 8
  %327 = lshr i32 %326, 2
  %328 = call %"struct.v8::base::TemplateHashMapEntry"* @_ZN2v84base19TemplateHashMapImplIPKNS_8internal12AstRawStringENS0_14NoHashMapValueENS2_22AstRawStringMapMatcherENS0_23DefaultAllocationPolicyEE9InsertNewERKS5_j(%"class.v8::base::TemplateHashMapImpl"* %61, %"class.v8::internal::AstRawString"** nonnull dereferenceable(8) %11, i32 %327)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %320) #15
  %329 = load i64, i64* %87, align 8
  %330 = call i32 @_ZN2v88internal12StringHasher20HashSequentialStringIhEEjPKT_im(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.8, i64 0, i64 0), i32 7, i64 %329)
  %331 = load i64, i64* %89, align 8
  %332 = load i64, i64* %91, align 8
  %333 = sub i64 %332, %331
  %334 = icmp ult i64 %333, 32
  br i1 %334, label %335, label %337, !prof !3

335:                                              ; preds = %309
  %336 = call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %58, i64 32) #15
  br label %339

337:                                              ; preds = %309
  %338 = add i64 %331, 32
  store i64 %338, i64* %89, align 8
  br label %339

339:                                              ; preds = %335, %337
  %340 = phi i64 [ %336, %335 ], [ %331, %337 ]
  %341 = inttoptr i64 %340 to %"class.v8::internal::AstRawString"*
  %342 = getelementptr inbounds %"class.v8::internal::AstRawString", %"class.v8::internal::AstRawString"* %341, i64 0, i32 0, i32 0
  store %"class.v8::internal::AstRawString"* null, %"class.v8::internal::AstRawString"** %342, align 8
  %343 = getelementptr inbounds %"class.v8::internal::AstRawString", %"class.v8::internal::AstRawString"* %341, i64 0, i32 1, i32 0
  store i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.8, i64 0, i64 0), i8** %343, align 8
  %344 = getelementptr inbounds %"class.v8::internal::AstRawString", %"class.v8::internal::AstRawString"* %341, i64 0, i32 1, i32 1
  store i64 7, i64* %344, align 8
  %345 = getelementptr inbounds %"class.v8::internal::AstRawString", %"class.v8::internal::AstRawString"* %341, i64 0, i32 2
  store i32 %330, i32* %345, align 8
  %346 = getelementptr inbounds %"class.v8::internal::AstRawString", %"class.v8::internal::AstRawString"* %341, i64 0, i32 3
  store i8 1, i8* %346, align 4
  %347 = getelementptr inbounds %"class.v8::internal::AstStringConstants", %"class.v8::internal::AstStringConstants"* %0, i64 0, i32 11
  store %"class.v8::internal::AstRawString"* %341, %"class.v8::internal::AstRawString"** %347, align 8
  %348 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %1, i64 0, i32 0, i32 7, i32 0, i64 279
  %349 = inttoptr i64 %340 to i64**
  store i64* %348, i64** %349, align 8
  %350 = bitcast %"class.v8::internal::AstRawString"** %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %350) #15
  %351 = bitcast %"class.v8::internal::AstRawString"** %347 to i64*
  %352 = load i64, i64* %351, align 8
  %353 = bitcast %"class.v8::internal::AstRawString"** %12 to i64*
  store i64 %352, i64* %353, align 8
  %354 = inttoptr i64 %352 to %"class.v8::internal::AstRawString"*
  %355 = getelementptr inbounds %"class.v8::internal::AstRawString", %"class.v8::internal::AstRawString"* %354, i64 0, i32 2
  %356 = load i32, i32* %355, align 8
  %357 = lshr i32 %356, 2
  %358 = call %"struct.v8::base::TemplateHashMapEntry"* @_ZN2v84base19TemplateHashMapImplIPKNS_8internal12AstRawStringENS0_14NoHashMapValueENS2_22AstRawStringMapMatcherENS0_23DefaultAllocationPolicyEE9InsertNewERKS5_j(%"class.v8::base::TemplateHashMapImpl"* %61, %"class.v8::internal::AstRawString"** nonnull dereferenceable(8) %12, i32 %357)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %350) #15
  %359 = load i64, i64* %87, align 8
  %360 = call i32 @_ZN2v88internal12StringHasher20HashSequentialStringIhEEjPKT_im(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.9, i64 0, i64 0), i32 10, i64 %359)
  %361 = load i64, i64* %89, align 8
  %362 = load i64, i64* %91, align 8
  %363 = sub i64 %362, %361
  %364 = icmp ult i64 %363, 32
  br i1 %364, label %365, label %367, !prof !3

365:                                              ; preds = %339
  %366 = call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %58, i64 32) #15
  br label %369

367:                                              ; preds = %339
  %368 = add i64 %361, 32
  store i64 %368, i64* %89, align 8
  br label %369

369:                                              ; preds = %365, %367
  %370 = phi i64 [ %366, %365 ], [ %361, %367 ]
  %371 = inttoptr i64 %370 to %"class.v8::internal::AstRawString"*
  %372 = getelementptr inbounds %"class.v8::internal::AstRawString", %"class.v8::internal::AstRawString"* %371, i64 0, i32 0, i32 0
  store %"class.v8::internal::AstRawString"* null, %"class.v8::internal::AstRawString"** %372, align 8
  %373 = getelementptr inbounds %"class.v8::internal::AstRawString", %"class.v8::internal::AstRawString"* %371, i64 0, i32 1, i32 0
  store i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.9, i64 0, i64 0), i8** %373, align 8
  %374 = getelementptr inbounds %"class.v8::internal::AstRawString", %"class.v8::internal::AstRawString"* %371, i64 0, i32 1, i32 1
  store i64 10, i64* %374, align 8
  %375 = getelementptr inbounds %"class.v8::internal::AstRawString", %"class.v8::internal::AstRawString"* %371, i64 0, i32 2
  store i32 %360, i32* %375, align 8
  %376 = getelementptr inbounds %"class.v8::internal::AstRawString", %"class.v8::internal::AstRawString"* %371, i64 0, i32 3
  store i8 1, i8* %376, align 4
  %377 = getelementptr inbounds %"class.v8::internal::AstStringConstants", %"class.v8::internal::AstStringConstants"* %0, i64 0, i32 12
  store %"class.v8::internal::AstRawString"* %371, %"class.v8::internal::AstRawString"** %377, align 8
  %378 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %1, i64 0, i32 0, i32 7, i32 0, i64 293
  %379 = inttoptr i64 %370 to i64**
  store i64* %378, i64** %379, align 8
  %380 = bitcast %"class.v8::internal::AstRawString"** %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %380) #15
  %381 = bitcast %"class.v8::internal::AstRawString"** %377 to i64*
  %382 = load i64, i64* %381, align 8
  %383 = bitcast %"class.v8::internal::AstRawString"** %13 to i64*
  store i64 %382, i64* %383, align 8
  %384 = inttoptr i64 %382 to %"class.v8::internal::AstRawString"*
  %385 = getelementptr inbounds %"class.v8::internal::AstRawString", %"class.v8::internal::AstRawString"* %384, i64 0, i32 2
  %386 = load i32, i32* %385, align 8
  %387 = lshr i32 %386, 2
  %388 = call %"struct.v8::base::TemplateHashMapEntry"* @_ZN2v84base19TemplateHashMapImplIPKNS_8internal12AstRawStringENS0_14NoHashMapValueENS2_22AstRawStringMapMatcherENS0_23DefaultAllocationPolicyEE9InsertNewERKS5_j(%"class.v8::base::TemplateHashMapImpl"* %61, %"class.v8::internal::AstRawString"** nonnull dereferenceable(8) %13, i32 %387)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %380) #15
  %389 = load i64, i64* %87, align 8
  %390 = call i32 @_ZN2v88internal12StringHasher20HashSequentialStringIhEEjPKT_im(i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.10, i64 0, i64 0), i32 6, i64 %389)
  %391 = load i64, i64* %89, align 8
  %392 = load i64, i64* %91, align 8
  %393 = sub i64 %392, %391
  %394 = icmp ult i64 %393, 32
  br i1 %394, label %395, label %397, !prof !3

395:                                              ; preds = %369
  %396 = call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %58, i64 32) #15
  br label %399

397:                                              ; preds = %369
  %398 = add i64 %391, 32
  store i64 %398, i64* %89, align 8
  br label %399

399:                                              ; preds = %395, %397
  %400 = phi i64 [ %396, %395 ], [ %391, %397 ]
  %401 = inttoptr i64 %400 to %"class.v8::internal::AstRawString"*
  %402 = getelementptr inbounds %"class.v8::internal::AstRawString", %"class.v8::internal::AstRawString"* %401, i64 0, i32 0, i32 0
  store %"class.v8::internal::AstRawString"* null, %"class.v8::internal::AstRawString"** %402, align 8
  %403 = getelementptr inbounds %"class.v8::internal::AstRawString", %"class.v8::internal::AstRawString"* %401, i64 0, i32 1, i32 0
  store i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.10, i64 0, i64 0), i8** %403, align 8
  %404 = getelementptr inbounds %"class.v8::internal::AstRawString", %"class.v8::internal::AstRawString"* %401, i64 0, i32 1, i32 1
  store i64 6, i64* %404, align 8
  %405 = getelementptr inbounds %"class.v8::internal::AstRawString", %"class.v8::internal::AstRawString"* %401, i64 0, i32 2
  store i32 %390, i32* %405, align 8
  %406 = getelementptr inbounds %"class.v8::internal::AstRawString", %"class.v8::internal::AstRawString"* %401, i64 0, i32 3
  store i8 1, i8* %406, align 4
  %407 = getelementptr inbounds %"class.v8::internal::AstStringConstants", %"class.v8::internal::AstStringConstants"* %0, i64 0, i32 13
  store %"class.v8::internal::AstRawString"* %401, %"class.v8::internal::AstRawString"** %407, align 8
  %408 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %1, i64 0, i32 0, i32 7, i32 0, i64 306
  %409 = inttoptr i64 %400 to i64**
  store i64* %408, i64** %409, align 8
  %410 = bitcast %"class.v8::internal::AstRawString"** %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %410) #15
  %411 = bitcast %"class.v8::internal::AstRawString"** %407 to i64*
  %412 = load i64, i64* %411, align 8
  %413 = bitcast %"class.v8::internal::AstRawString"** %14 to i64*
  store i64 %412, i64* %413, align 8
  %414 = inttoptr i64 %412 to %"class.v8::internal::AstRawString"*
  %415 = getelementptr inbounds %"class.v8::internal::AstRawString", %"class.v8::internal::AstRawString"* %414, i64 0, i32 2
  %416 = load i32, i32* %415, align 8
  %417 = lshr i32 %416, 2
  %418 = call %"struct.v8::base::TemplateHashMapEntry"* @_ZN2v84base19TemplateHashMapImplIPKNS_8internal12AstRawStringENS0_14NoHashMapValueENS2_22AstRawStringMapMatcherENS0_23DefaultAllocationPolicyEE9InsertNewERKS5_j(%"class.v8::base::TemplateHashMapImpl"* %61, %"class.v8::internal::AstRawString"** nonnull dereferenceable(8) %14, i32 %417)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %410) #15
  %419 = load i64, i64* %87, align 8
  %420 = call i32 @_ZN2v88internal12StringHasher20HashSequentialStringIhEEjPKT_im(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.11, i64 0, i64 0), i32 11, i64 %419)
  %421 = load i64, i64* %89, align 8
  %422 = load i64, i64* %91, align 8
  %423 = sub i64 %422, %421
  %424 = icmp ult i64 %423, 32
  br i1 %424, label %425, label %427, !prof !3

425:                                              ; preds = %399
  %426 = call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %58, i64 32) #15
  br label %429

427:                                              ; preds = %399
  %428 = add i64 %421, 32
  store i64 %428, i64* %89, align 8
  br label %429

429:                                              ; preds = %425, %427
  %430 = phi i64 [ %426, %425 ], [ %421, %427 ]
  %431 = inttoptr i64 %430 to %"class.v8::internal::AstRawString"*
  %432 = getelementptr inbounds %"class.v8::internal::AstRawString", %"class.v8::internal::AstRawString"* %431, i64 0, i32 0, i32 0
  store %"class.v8::internal::AstRawString"* null, %"class.v8::internal::AstRawString"** %432, align 8
  %433 = getelementptr inbounds %"class.v8::internal::AstRawString", %"class.v8::internal::AstRawString"* %431, i64 0, i32 1, i32 0
  store i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.11, i64 0, i64 0), i8** %433, align 8
  %434 = getelementptr inbounds %"class.v8::internal::AstRawString", %"class.v8::internal::AstRawString"* %431, i64 0, i32 1, i32 1
  store i64 11, i64* %434, align 8
  %435 = getelementptr inbounds %"class.v8::internal::AstRawString", %"class.v8::internal::AstRawString"* %431, i64 0, i32 2
  store i32 %420, i32* %435, align 8
  %436 = getelementptr inbounds %"class.v8::internal::AstRawString", %"class.v8::internal::AstRawString"* %431, i64 0, i32 3
  store i8 1, i8* %436, align 4
  %437 = getelementptr inbounds %"class.v8::internal::AstStringConstants", %"class.v8::internal::AstStringConstants"* %0, i64 0, i32 14
  store %"class.v8::internal::AstRawString"* %431, %"class.v8::internal::AstRawString"** %437, align 8
  %438 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %1, i64 0, i32 0, i32 7, i32 0, i64 297
  %439 = inttoptr i64 %430 to i64**
  store i64* %438, i64** %439, align 8
  %440 = bitcast %"class.v8::internal::AstRawString"** %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %440) #15
  %441 = bitcast %"class.v8::internal::AstRawString"** %437 to i64*
  %442 = load i64, i64* %441, align 8
  %443 = bitcast %"class.v8::internal::AstRawString"** %15 to i64*
  store i64 %442, i64* %443, align 8
  %444 = inttoptr i64 %442 to %"class.v8::internal::AstRawString"*
  %445 = getelementptr inbounds %"class.v8::internal::AstRawString", %"class.v8::internal::AstRawString"* %444, i64 0, i32 2
  %446 = load i32, i32* %445, align 8
  %447 = lshr i32 %446, 2
  %448 = call %"struct.v8::base::TemplateHashMapEntry"* @_ZN2v84base19TemplateHashMapImplIPKNS_8internal12AstRawStringENS0_14NoHashMapValueENS2_22AstRawStringMapMatcherENS0_23DefaultAllocationPolicyEE9InsertNewERKS5_j(%"class.v8::base::TemplateHashMapImpl"* %61, %"class.v8::internal::AstRawString"** nonnull dereferenceable(8) %15, i32 %447)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %440) #15
  %449 = load i64, i64* %87, align 8
  %450 = call i32 @_ZN2v88internal12StringHasher20HashSequentialStringIhEEjPKT_im(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.12, i64 0, i64 0), i32 7, i64 %449)
  %451 = load i64, i64* %89, align 8
  %452 = load i64, i64* %91, align 8
  %453 = sub i64 %452, %451
  %454 = icmp ult i64 %453, 32
  br i1 %454, label %455, label %457, !prof !3

455:                                              ; preds = %429
  %456 = call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %58, i64 32) #15
  br label %459

457:                                              ; preds = %429
  %458 = add i64 %451, 32
  store i64 %458, i64* %89, align 8
  br label %459

459:                                              ; preds = %455, %457
  %460 = phi i64 [ %456, %455 ], [ %451, %457 ]
  %461 = inttoptr i64 %460 to %"class.v8::internal::AstRawString"*
  %462 = getelementptr inbounds %"class.v8::internal::AstRawString", %"class.v8::internal::AstRawString"* %461, i64 0, i32 0, i32 0
  store %"class.v8::internal::AstRawString"* null, %"class.v8::internal::AstRawString"** %462, align 8
  %463 = getelementptr inbounds %"class.v8::internal::AstRawString", %"class.v8::internal::AstRawString"* %461, i64 0, i32 1, i32 0
  store i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.12, i64 0, i64 0), i8** %463, align 8
  %464 = getelementptr inbounds %"class.v8::internal::AstRawString", %"class.v8::internal::AstRawString"* %461, i64 0, i32 1, i32 1
  store i64 7, i64* %464, align 8
  %465 = getelementptr inbounds %"class.v8::internal::AstRawString", %"class.v8::internal::AstRawString"* %461, i64 0, i32 2
  store i32 %450, i32* %465, align 8
  %466 = getelementptr inbounds %"class.v8::internal::AstRawString", %"class.v8::internal::AstRawString"* %461, i64 0, i32 3
  store i8 1, i8* %466, align 4
  %467 = getelementptr inbounds %"class.v8::internal::AstStringConstants", %"class.v8::internal::AstStringConstants"* %0, i64 0, i32 15
  store %"class.v8::internal::AstRawString"* %461, %"class.v8::internal::AstRawString"** %467, align 8
  %468 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %1, i64 0, i32 0, i32 7, i32 0, i64 301
  %469 = inttoptr i64 %460 to i64**
  store i64* %468, i64** %469, align 8
  %470 = bitcast %"class.v8::internal::AstRawString"** %16 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %470) #15
  %471 = bitcast %"class.v8::internal::AstRawString"** %467 to i64*
  %472 = load i64, i64* %471, align 8
  %473 = bitcast %"class.v8::internal::AstRawString"** %16 to i64*
  store i64 %472, i64* %473, align 8
  %474 = inttoptr i64 %472 to %"class.v8::internal::AstRawString"*
  %475 = getelementptr inbounds %"class.v8::internal::AstRawString", %"class.v8::internal::AstRawString"* %474, i64 0, i32 2
  %476 = load i32, i32* %475, align 8
  %477 = lshr i32 %476, 2
  %478 = call %"struct.v8::base::TemplateHashMapEntry"* @_ZN2v84base19TemplateHashMapImplIPKNS_8internal12AstRawStringENS0_14NoHashMapValueENS2_22AstRawStringMapMatcherENS0_23DefaultAllocationPolicyEE9InsertNewERKS5_j(%"class.v8::base::TemplateHashMapImpl"* %61, %"class.v8::internal::AstRawString"** nonnull dereferenceable(8) %16, i32 %477)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %470) #15
  %479 = load i64, i64* %87, align 8
  %480 = call i32 @_ZN2v88internal12StringHasher20HashSequentialStringIhEEjPKT_im(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.13, i64 0, i64 0), i32 4, i64 %479)
  %481 = load i64, i64* %89, align 8
  %482 = load i64, i64* %91, align 8
  %483 = sub i64 %482, %481
  %484 = icmp ult i64 %483, 32
  br i1 %484, label %485, label %487, !prof !3

485:                                              ; preds = %459
  %486 = call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %58, i64 32) #15
  br label %489

487:                                              ; preds = %459
  %488 = add i64 %481, 32
  store i64 %488, i64* %89, align 8
  br label %489

489:                                              ; preds = %485, %487
  %490 = phi i64 [ %486, %485 ], [ %481, %487 ]
  %491 = inttoptr i64 %490 to %"class.v8::internal::AstRawString"*
  %492 = getelementptr inbounds %"class.v8::internal::AstRawString", %"class.v8::internal::AstRawString"* %491, i64 0, i32 0, i32 0
  store %"class.v8::internal::AstRawString"* null, %"class.v8::internal::AstRawString"** %492, align 8
  %493 = getelementptr inbounds %"class.v8::internal::AstRawString", %"class.v8::internal::AstRawString"* %491, i64 0, i32 1, i32 0
  store i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.13, i64 0, i64 0), i8** %493, align 8
  %494 = getelementptr inbounds %"class.v8::internal::AstRawString", %"class.v8::internal::AstRawString"* %491, i64 0, i32 1, i32 1
  store i64 4, i64* %494, align 8
  %495 = getelementptr inbounds %"class.v8::internal::AstRawString", %"class.v8::internal::AstRawString"* %491, i64 0, i32 2
  store i32 %480, i32* %495, align 8
  %496 = getelementptr inbounds %"class.v8::internal::AstRawString", %"class.v8::internal::AstRawString"* %491, i64 0, i32 3
  store i8 1, i8* %496, align 4
  %497 = getelementptr inbounds %"class.v8::internal::AstStringConstants", %"class.v8::internal::AstStringConstants"* %0, i64 0, i32 16
  store %"class.v8::internal::AstRawString"* %491, %"class.v8::internal::AstRawString"** %497, align 8
  %498 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %1, i64 0, i32 0, i32 7, i32 0, i64 305
  %499 = inttoptr i64 %490 to i64**
  store i64* %498, i64** %499, align 8
  %500 = bitcast %"class.v8::internal::AstRawString"** %17 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %500) #15
  %501 = bitcast %"class.v8::internal::AstRawString"** %497 to i64*
  %502 = load i64, i64* %501, align 8
  %503 = bitcast %"class.v8::internal::AstRawString"** %17 to i64*
  store i64 %502, i64* %503, align 8
  %504 = inttoptr i64 %502 to %"class.v8::internal::AstRawString"*
  %505 = getelementptr inbounds %"class.v8::internal::AstRawString", %"class.v8::internal::AstRawString"* %504, i64 0, i32 2
  %506 = load i32, i32* %505, align 8
  %507 = lshr i32 %506, 2
  %508 = call %"struct.v8::base::TemplateHashMapEntry"* @_ZN2v84base19TemplateHashMapImplIPKNS_8internal12AstRawStringENS0_14NoHashMapValueENS2_22AstRawStringMapMatcherENS0_23DefaultAllocationPolicyEE9InsertNewERKS5_j(%"class.v8::base::TemplateHashMapImpl"* %61, %"class.v8::internal::AstRawString"** nonnull dereferenceable(8) %17, i32 %507)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %500) #15
  %509 = load i64, i64* %87, align 8
  %510 = call i32 @_ZN2v88internal12StringHasher20HashSequentialStringIhEEjPKT_im(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.14, i64 0, i64 0), i32 1, i64 %509)
  %511 = load i64, i64* %89, align 8
  %512 = load i64, i64* %91, align 8
  %513 = sub i64 %512, %511
  %514 = icmp ult i64 %513, 32
  br i1 %514, label %515, label %517, !prof !3

515:                                              ; preds = %489
  %516 = call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %58, i64 32) #15
  br label %519

517:                                              ; preds = %489
  %518 = add i64 %511, 32
  store i64 %518, i64* %89, align 8
  br label %519

519:                                              ; preds = %515, %517
  %520 = phi i64 [ %516, %515 ], [ %511, %517 ]
  %521 = inttoptr i64 %520 to %"class.v8::internal::AstRawString"*
  %522 = getelementptr inbounds %"class.v8::internal::AstRawString", %"class.v8::internal::AstRawString"* %521, i64 0, i32 0, i32 0
  store %"class.v8::internal::AstRawString"* null, %"class.v8::internal::AstRawString"** %522, align 8
  %523 = getelementptr inbounds %"class.v8::internal::AstRawString", %"class.v8::internal::AstRawString"* %521, i64 0, i32 1, i32 0
  store i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.14, i64 0, i64 0), i8** %523, align 8
  %524 = getelementptr inbounds %"class.v8::internal::AstRawString", %"class.v8::internal::AstRawString"* %521, i64 0, i32 1, i32 1
  store i64 1, i64* %524, align 8
  %525 = getelementptr inbounds %"class.v8::internal::AstRawString", %"class.v8::internal::AstRawString"* %521, i64 0, i32 2
  store i32 %510, i32* %525, align 8
  %526 = getelementptr inbounds %"class.v8::internal::AstRawString", %"class.v8::internal::AstRawString"* %521, i64 0, i32 3
  store i8 1, i8* %526, align 4
  %527 = getelementptr inbounds %"class.v8::internal::AstStringConstants", %"class.v8::internal::AstStringConstants"* %0, i64 0, i32 17
  store %"class.v8::internal::AstRawString"* %521, %"class.v8::internal::AstRawString"** %527, align 8
  %528 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %1, i64 0, i32 0, i32 7, i32 0, i64 315
  %529 = inttoptr i64 %520 to i64**
  store i64* %528, i64** %529, align 8
  %530 = bitcast %"class.v8::internal::AstRawString"** %18 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %530) #15
  %531 = bitcast %"class.v8::internal::AstRawString"** %527 to i64*
  %532 = load i64, i64* %531, align 8
  %533 = bitcast %"class.v8::internal::AstRawString"** %18 to i64*
  store i64 %532, i64* %533, align 8
  %534 = inttoptr i64 %532 to %"class.v8::internal::AstRawString"*
  %535 = getelementptr inbounds %"class.v8::internal::AstRawString", %"class.v8::internal::AstRawString"* %534, i64 0, i32 2
  %536 = load i32, i32* %535, align 8
  %537 = lshr i32 %536, 2
  %538 = call %"struct.v8::base::TemplateHashMapEntry"* @_ZN2v84base19TemplateHashMapImplIPKNS_8internal12AstRawStringENS0_14NoHashMapValueENS2_22AstRawStringMapMatcherENS0_23DefaultAllocationPolicyEE9InsertNewERKS5_j(%"class.v8::base::TemplateHashMapImpl"* %61, %"class.v8::internal::AstRawString"** nonnull dereferenceable(8) %18, i32 %537)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %530) #15
  %539 = load i64, i64* %87, align 8
  %540 = call i32 @_ZN2v88internal12StringHasher20HashSequentialStringIhEEjPKT_im(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.15, i64 0, i64 0), i32 8, i64 %539)
  %541 = load i64, i64* %89, align 8
  %542 = load i64, i64* %91, align 8
  %543 = sub i64 %542, %541
  %544 = icmp ult i64 %543, 32
  br i1 %544, label %545, label %547, !prof !3

545:                                              ; preds = %519
  %546 = call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %58, i64 32) #15
  br label %549

547:                                              ; preds = %519
  %548 = add i64 %541, 32
  store i64 %548, i64* %89, align 8
  br label %549

549:                                              ; preds = %545, %547
  %550 = phi i64 [ %546, %545 ], [ %541, %547 ]
  %551 = inttoptr i64 %550 to %"class.v8::internal::AstRawString"*
  %552 = getelementptr inbounds %"class.v8::internal::AstRawString", %"class.v8::internal::AstRawString"* %551, i64 0, i32 0, i32 0
  store %"class.v8::internal::AstRawString"* null, %"class.v8::internal::AstRawString"** %552, align 8
  %553 = getelementptr inbounds %"class.v8::internal::AstRawString", %"class.v8::internal::AstRawString"* %551, i64 0, i32 1, i32 0
  store i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.15, i64 0, i64 0), i8** %553, align 8
  %554 = getelementptr inbounds %"class.v8::internal::AstRawString", %"class.v8::internal::AstRawString"* %551, i64 0, i32 1, i32 1
  store i64 8, i64* %554, align 8
  %555 = getelementptr inbounds %"class.v8::internal::AstRawString", %"class.v8::internal::AstRawString"* %551, i64 0, i32 2
  store i32 %540, i32* %555, align 8
  %556 = getelementptr inbounds %"class.v8::internal::AstRawString", %"class.v8::internal::AstRawString"* %551, i64 0, i32 3
  store i8 1, i8* %556, align 4
  %557 = getelementptr inbounds %"class.v8::internal::AstStringConstants", %"class.v8::internal::AstStringConstants"* %0, i64 0, i32 18
  store %"class.v8::internal::AstRawString"* %551, %"class.v8::internal::AstRawString"** %557, align 8
  %558 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %1, i64 0, i32 0, i32 7, i32 0, i64 308
  %559 = inttoptr i64 %550 to i64**
  store i64* %558, i64** %559, align 8
  %560 = bitcast %"class.v8::internal::AstRawString"** %19 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %560) #15
  %561 = bitcast %"class.v8::internal::AstRawString"** %557 to i64*
  %562 = load i64, i64* %561, align 8
  %563 = bitcast %"class.v8::internal::AstRawString"** %19 to i64*
  store i64 %562, i64* %563, align 8
  %564 = inttoptr i64 %562 to %"class.v8::internal::AstRawString"*
  %565 = getelementptr inbounds %"class.v8::internal::AstRawString", %"class.v8::internal::AstRawString"* %564, i64 0, i32 2
  %566 = load i32, i32* %565, align 8
  %567 = lshr i32 %566, 2
  %568 = call %"struct.v8::base::TemplateHashMapEntry"* @_ZN2v84base19TemplateHashMapImplIPKNS_8internal12AstRawStringENS0_14NoHashMapValueENS2_22AstRawStringMapMatcherENS0_23DefaultAllocationPolicyEE9InsertNewERKS5_j(%"class.v8::base::TemplateHashMapImpl"* %61, %"class.v8::internal::AstRawString"** nonnull dereferenceable(8) %19, i32 %567)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %560) #15
  %569 = load i64, i64* %87, align 8
  %570 = call i32 @_ZN2v88internal12StringHasher20HashSequentialStringIhEEjPKT_im(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.16, i64 0, i64 0), i32 4, i64 %569)
  %571 = load i64, i64* %89, align 8
  %572 = load i64, i64* %91, align 8
  %573 = sub i64 %572, %571
  %574 = icmp ult i64 %573, 32
  br i1 %574, label %575, label %577, !prof !3

575:                                              ; preds = %549
  %576 = call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %58, i64 32) #15
  br label %579

577:                                              ; preds = %549
  %578 = add i64 %571, 32
  store i64 %578, i64* %89, align 8
  br label %579

579:                                              ; preds = %575, %577
  %580 = phi i64 [ %576, %575 ], [ %571, %577 ]
  %581 = inttoptr i64 %580 to %"class.v8::internal::AstRawString"*
  %582 = getelementptr inbounds %"class.v8::internal::AstRawString", %"class.v8::internal::AstRawString"* %581, i64 0, i32 0, i32 0
  store %"class.v8::internal::AstRawString"* null, %"class.v8::internal::AstRawString"** %582, align 8
  %583 = getelementptr inbounds %"class.v8::internal::AstRawString", %"class.v8::internal::AstRawString"* %581, i64 0, i32 1, i32 0
  store i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.16, i64 0, i64 0), i8** %583, align 8
  %584 = getelementptr inbounds %"class.v8::internal::AstRawString", %"class.v8::internal::AstRawString"* %581, i64 0, i32 1, i32 1
  store i64 4, i64* %584, align 8
  %585 = getelementptr inbounds %"class.v8::internal::AstRawString", %"class.v8::internal::AstRawString"* %581, i64 0, i32 2
  store i32 %570, i32* %585, align 8
  %586 = getelementptr inbounds %"class.v8::internal::AstRawString", %"class.v8::internal::AstRawString"* %581, i64 0, i32 3
  store i8 1, i8* %586, align 4
  %587 = getelementptr inbounds %"class.v8::internal::AstStringConstants", %"class.v8::internal::AstStringConstants"* %0, i64 0, i32 19
  store %"class.v8::internal::AstRawString"* %581, %"class.v8::internal::AstRawString"** %587, align 8
  %588 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %1, i64 0, i32 0, i32 7, i32 0, i64 309
  %589 = inttoptr i64 %580 to i64**
  store i64* %588, i64** %589, align 8
  %590 = bitcast %"class.v8::internal::AstRawString"** %20 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %590) #15
  %591 = bitcast %"class.v8::internal::AstRawString"** %587 to i64*
  %592 = load i64, i64* %591, align 8
  %593 = bitcast %"class.v8::internal::AstRawString"** %20 to i64*
  store i64 %592, i64* %593, align 8
  %594 = inttoptr i64 %592 to %"class.v8::internal::AstRawString"*
  %595 = getelementptr inbounds %"class.v8::internal::AstRawString", %"class.v8::internal::AstRawString"* %594, i64 0, i32 2
  %596 = load i32, i32* %595, align 8
  %597 = lshr i32 %596, 2
  %598 = call %"struct.v8::base::TemplateHashMapEntry"* @_ZN2v84base19TemplateHashMapImplIPKNS_8internal12AstRawStringENS0_14NoHashMapValueENS2_22AstRawStringMapMatcherENS0_23DefaultAllocationPolicyEE9InsertNewERKS5_j(%"class.v8::base::TemplateHashMapImpl"* %61, %"class.v8::internal::AstRawString"** nonnull dereferenceable(8) %20, i32 %597)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %590) #15
  %599 = load i64, i64* %87, align 8
  %600 = call i32 @_ZN2v88internal12StringHasher20HashSequentialStringIhEEjPKT_im(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.17, i64 0, i64 0), i32 17, i64 %599)
  %601 = load i64, i64* %89, align 8
  %602 = load i64, i64* %91, align 8
  %603 = sub i64 %602, %601
  %604 = icmp ult i64 %603, 32
  br i1 %604, label %605, label %607, !prof !3

605:                                              ; preds = %579
  %606 = call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %58, i64 32) #15
  br label %609

607:                                              ; preds = %579
  %608 = add i64 %601, 32
  store i64 %608, i64* %89, align 8
  br label %609

609:                                              ; preds = %605, %607
  %610 = phi i64 [ %606, %605 ], [ %601, %607 ]
  %611 = inttoptr i64 %610 to %"class.v8::internal::AstRawString"*
  %612 = getelementptr inbounds %"class.v8::internal::AstRawString", %"class.v8::internal::AstRawString"* %611, i64 0, i32 0, i32 0
  store %"class.v8::internal::AstRawString"* null, %"class.v8::internal::AstRawString"** %612, align 8
  %613 = getelementptr inbounds %"class.v8::internal::AstRawString", %"class.v8::internal::AstRawString"* %611, i64 0, i32 1, i32 0
  store i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.17, i64 0, i64 0), i8** %613, align 8
  %614 = getelementptr inbounds %"class.v8::internal::AstRawString", %"class.v8::internal::AstRawString"* %611, i64 0, i32 1, i32 1
  store i64 17, i64* %614, align 8
  %615 = getelementptr inbounds %"class.v8::internal::AstRawString", %"class.v8::internal::AstRawString"* %611, i64 0, i32 2
  store i32 %600, i32* %615, align 8
  %616 = getelementptr inbounds %"class.v8::internal::AstRawString", %"class.v8::internal::AstRawString"* %611, i64 0, i32 3
  store i8 1, i8* %616, align 4
  %617 = getelementptr inbounds %"class.v8::internal::AstStringConstants", %"class.v8::internal::AstStringConstants"* %0, i64 0, i32 20
  store %"class.v8::internal::AstRawString"* %611, %"class.v8::internal::AstRawString"** %617, align 8
  %618 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %1, i64 0, i32 0, i32 7, i32 0, i64 310
  %619 = inttoptr i64 %610 to i64**
  store i64* %618, i64** %619, align 8
  %620 = bitcast %"class.v8::internal::AstRawString"** %21 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %620) #15
  %621 = bitcast %"class.v8::internal::AstRawString"** %617 to i64*
  %622 = load i64, i64* %621, align 8
  %623 = bitcast %"class.v8::internal::AstRawString"** %21 to i64*
  store i64 %622, i64* %623, align 8
  %624 = inttoptr i64 %622 to %"class.v8::internal::AstRawString"*
  %625 = getelementptr inbounds %"class.v8::internal::AstRawString", %"class.v8::internal::AstRawString"* %624, i64 0, i32 2
  %626 = load i32, i32* %625, align 8
  %627 = lshr i32 %626, 2
  %628 = call %"struct.v8::base::TemplateHashMapEntry"* @_ZN2v84base19TemplateHashMapImplIPKNS_8internal12AstRawStringENS0_14NoHashMapValueENS2_22AstRawStringMapMatcherENS0_23DefaultAllocationPolicyEE9InsertNewERKS5_j(%"class.v8::base::TemplateHashMapImpl"* %61, %"class.v8::internal::AstRawString"** nonnull dereferenceable(8) %21, i32 %627)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %620) #15
  %629 = load i64, i64* %87, align 8
  %630 = call i32 @_ZN2v88internal12StringHasher20HashSequentialStringIhEEjPKT_im(i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.18, i64 0, i64 0), i32 12, i64 %629)
  %631 = load i64, i64* %89, align 8
  %632 = load i64, i64* %91, align 8
  %633 = sub i64 %632, %631
  %634 = icmp ult i64 %633, 32
  br i1 %634, label %635, label %637, !prof !3

635:                                              ; preds = %609
  %636 = call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %58, i64 32) #15
  br label %639

637:                                              ; preds = %609
  %638 = add i64 %631, 32
  store i64 %638, i64* %89, align 8
  br label %639

639:                                              ; preds = %635, %637
  %640 = phi i64 [ %636, %635 ], [ %631, %637 ]
  %641 = inttoptr i64 %640 to %"class.v8::internal::AstRawString"*
  %642 = getelementptr inbounds %"class.v8::internal::AstRawString", %"class.v8::internal::AstRawString"* %641, i64 0, i32 0, i32 0
  store %"class.v8::internal::AstRawString"* null, %"class.v8::internal::AstRawString"** %642, align 8
  %643 = getelementptr inbounds %"class.v8::internal::AstRawString", %"class.v8::internal::AstRawString"* %641, i64 0, i32 1, i32 0
  store i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.18, i64 0, i64 0), i8** %643, align 8
  %644 = getelementptr inbounds %"class.v8::internal::AstRawString", %"class.v8::internal::AstRawString"* %641, i64 0, i32 1, i32 1
  store i64 12, i64* %644, align 8
  %645 = getelementptr inbounds %"class.v8::internal::AstRawString", %"class.v8::internal::AstRawString"* %641, i64 0, i32 2
  store i32 %630, i32* %645, align 8
  %646 = getelementptr inbounds %"class.v8::internal::AstRawString", %"class.v8::internal::AstRawString"* %641, i64 0, i32 3
  store i8 1, i8* %646, align 4
  %647 = getelementptr inbounds %"class.v8::internal::AstStringConstants", %"class.v8::internal::AstStringConstants"* %0, i64 0, i32 21
  store %"class.v8::internal::AstRawString"* %641, %"class.v8::internal::AstRawString"** %647, align 8
  %648 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %1, i64 0, i32 0, i32 7, i32 0, i64 311
  %649 = inttoptr i64 %640 to i64**
  store i64* %648, i64** %649, align 8
  %650 = bitcast %"class.v8::internal::AstRawString"** %22 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %650) #15
  %651 = bitcast %"class.v8::internal::AstRawString"** %647 to i64*
  %652 = load i64, i64* %651, align 8
  %653 = bitcast %"class.v8::internal::AstRawString"** %22 to i64*
  store i64 %652, i64* %653, align 8
  %654 = inttoptr i64 %652 to %"class.v8::internal::AstRawString"*
  %655 = getelementptr inbounds %"class.v8::internal::AstRawString", %"class.v8::internal::AstRawString"* %654, i64 0, i32 2
  %656 = load i32, i32* %655, align 8
  %657 = lshr i32 %656, 2
  %658 = call %"struct.v8::base::TemplateHashMapEntry"* @_ZN2v84base19TemplateHashMapImplIPKNS_8internal12AstRawStringENS0_14NoHashMapValueENS2_22AstRawStringMapMatcherENS0_23DefaultAllocationPolicyEE9InsertNewERKS5_j(%"class.v8::base::TemplateHashMapImpl"* %61, %"class.v8::internal::AstRawString"** nonnull dereferenceable(8) %22, i32 %657)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %650) #15
  %659 = load i64, i64* %87, align 8
  %660 = call i32 @_ZN2v88internal12StringHasher20HashSequentialStringIhEEjPKT_im(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.19, i64 0, i64 0), i32 7, i64 %659)
  %661 = load i64, i64* %89, align 8
  %662 = load i64, i64* %91, align 8
  %663 = sub i64 %662, %661
  %664 = icmp ult i64 %663, 32
  br i1 %664, label %665, label %667, !prof !3

665:                                              ; preds = %639
  %666 = call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %58, i64 32) #15
  br label %669

667:                                              ; preds = %639
  %668 = add i64 %661, 32
  store i64 %668, i64* %89, align 8
  br label %669

669:                                              ; preds = %665, %667
  %670 = phi i64 [ %666, %665 ], [ %661, %667 ]
  %671 = inttoptr i64 %670 to %"class.v8::internal::AstRawString"*
  %672 = getelementptr inbounds %"class.v8::internal::AstRawString", %"class.v8::internal::AstRawString"* %671, i64 0, i32 0, i32 0
  store %"class.v8::internal::AstRawString"* null, %"class.v8::internal::AstRawString"** %672, align 8
  %673 = getelementptr inbounds %"class.v8::internal::AstRawString", %"class.v8::internal::AstRawString"* %671, i64 0, i32 1, i32 0
  store i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.19, i64 0, i64 0), i8** %673, align 8
  %674 = getelementptr inbounds %"class.v8::internal::AstRawString", %"class.v8::internal::AstRawString"* %671, i64 0, i32 1, i32 1
  store i64 7, i64* %674, align 8
  %675 = getelementptr inbounds %"class.v8::internal::AstRawString", %"class.v8::internal::AstRawString"* %671, i64 0, i32 2
  store i32 %660, i32* %675, align 8
  %676 = getelementptr inbounds %"class.v8::internal::AstRawString", %"class.v8::internal::AstRawString"* %671, i64 0, i32 3
  store i8 1, i8* %676, align 4
  %677 = getelementptr inbounds %"class.v8::internal::AstStringConstants", %"class.v8::internal::AstStringConstants"* %0, i64 0, i32 22
  store %"class.v8::internal::AstRawString"* %671, %"class.v8::internal::AstRawString"** %677, align 8
  %678 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %1, i64 0, i32 0, i32 7, i32 0, i64 312
  %679 = inttoptr i64 %670 to i64**
  store i64* %678, i64** %679, align 8
  %680 = bitcast %"class.v8::internal::AstRawString"** %23 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %680) #15
  %681 = bitcast %"class.v8::internal::AstRawString"** %677 to i64*
  %682 = load i64, i64* %681, align 8
  %683 = bitcast %"class.v8::internal::AstRawString"** %23 to i64*
  store i64 %682, i64* %683, align 8
  %684 = inttoptr i64 %682 to %"class.v8::internal::AstRawString"*
  %685 = getelementptr inbounds %"class.v8::internal::AstRawString", %"class.v8::internal::AstRawString"* %684, i64 0, i32 2
  %686 = load i32, i32* %685, align 8
  %687 = lshr i32 %686, 2
  %688 = call %"struct.v8::base::TemplateHashMapEntry"* @_ZN2v84base19TemplateHashMapImplIPKNS_8internal12AstRawStringENS0_14NoHashMapValueENS2_22AstRawStringMapMatcherENS0_23DefaultAllocationPolicyEE9InsertNewERKS5_j(%"class.v8::base::TemplateHashMapImpl"* %61, %"class.v8::internal::AstRawString"** nonnull dereferenceable(8) %23, i32 %687)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %680) #15
  %689 = load i64, i64* %87, align 8
  %690 = call i32 @_ZN2v88internal12StringHasher20HashSequentialStringIhEEjPKT_im(i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.20, i64 0, i64 0), i32 12, i64 %689)
  %691 = load i64, i64* %89, align 8
  %692 = load i64, i64* %91, align 8
  %693 = sub i64 %692, %691
  %694 = icmp ult i64 %693, 32
  br i1 %694, label %695, label %697, !prof !3

695:                                              ; preds = %669
  %696 = call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %58, i64 32) #15
  br label %699

697:                                              ; preds = %669
  %698 = add i64 %691, 32
  store i64 %698, i64* %89, align 8
  br label %699

699:                                              ; preds = %695, %697
  %700 = phi i64 [ %696, %695 ], [ %691, %697 ]
  %701 = inttoptr i64 %700 to %"class.v8::internal::AstRawString"*
  %702 = getelementptr inbounds %"class.v8::internal::AstRawString", %"class.v8::internal::AstRawString"* %701, i64 0, i32 0, i32 0
  store %"class.v8::internal::AstRawString"* null, %"class.v8::internal::AstRawString"** %702, align 8
  %703 = getelementptr inbounds %"class.v8::internal::AstRawString", %"class.v8::internal::AstRawString"* %701, i64 0, i32 1, i32 0
  store i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.20, i64 0, i64 0), i8** %703, align 8
  %704 = getelementptr inbounds %"class.v8::internal::AstRawString", %"class.v8::internal::AstRawString"* %701, i64 0, i32 1, i32 1
  store i64 12, i64* %704, align 8
  %705 = getelementptr inbounds %"class.v8::internal::AstRawString", %"class.v8::internal::AstRawString"* %701, i64 0, i32 2
  store i32 %690, i32* %705, align 8
  %706 = getelementptr inbounds %"class.v8::internal::AstRawString", %"class.v8::internal::AstRawString"* %701, i64 0, i32 3
  store i8 1, i8* %706, align 4
  %707 = getelementptr inbounds %"class.v8::internal::AstStringConstants", %"class.v8::internal::AstStringConstants"* %0, i64 0, i32 23
  store %"class.v8::internal::AstRawString"* %701, %"class.v8::internal::AstRawString"** %707, align 8
  %708 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %1, i64 0, i32 0, i32 7, i32 0, i64 313
  %709 = inttoptr i64 %700 to i64**
  store i64* %708, i64** %709, align 8
  %710 = bitcast %"class.v8::internal::AstRawString"** %24 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %710) #15
  %711 = bitcast %"class.v8::internal::AstRawString"** %707 to i64*
  %712 = load i64, i64* %711, align 8
  %713 = bitcast %"class.v8::internal::AstRawString"** %24 to i64*
  store i64 %712, i64* %713, align 8
  %714 = inttoptr i64 %712 to %"class.v8::internal::AstRawString"*
  %715 = getelementptr inbounds %"class.v8::internal::AstRawString", %"class.v8::internal::AstRawString"* %714, i64 0, i32 2
  %716 = load i32, i32* %715, align 8
  %717 = lshr i32 %716, 2
  %718 = call %"struct.v8::base::TemplateHashMapEntry"* @_ZN2v84base19TemplateHashMapImplIPKNS_8internal12AstRawStringENS0_14NoHashMapValueENS2_22AstRawStringMapMatcherENS0_23DefaultAllocationPolicyEE9InsertNewERKS5_j(%"class.v8::base::TemplateHashMapImpl"* %61, %"class.v8::internal::AstRawString"** nonnull dereferenceable(8) %24, i32 %717)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %710) #15
  %719 = load i64, i64* %87, align 8
  %720 = call i32 @_ZN2v88internal12StringHasher20HashSequentialStringIhEEjPKT_im(i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.21, i64 0, i64 0), i32 19, i64 %719)
  %721 = load i64, i64* %89, align 8
  %722 = load i64, i64* %91, align 8
  %723 = sub i64 %722, %721
  %724 = icmp ult i64 %723, 32
  br i1 %724, label %725, label %727, !prof !3

725:                                              ; preds = %699
  %726 = call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %58, i64 32) #15
  br label %729

727:                                              ; preds = %699
  %728 = add i64 %721, 32
  store i64 %728, i64* %89, align 8
  br label %729

729:                                              ; preds = %725, %727
  %730 = phi i64 [ %726, %725 ], [ %721, %727 ]
  %731 = inttoptr i64 %730 to %"class.v8::internal::AstRawString"*
  %732 = getelementptr inbounds %"class.v8::internal::AstRawString", %"class.v8::internal::AstRawString"* %731, i64 0, i32 0, i32 0
  store %"class.v8::internal::AstRawString"* null, %"class.v8::internal::AstRawString"** %732, align 8
  %733 = getelementptr inbounds %"class.v8::internal::AstRawString", %"class.v8::internal::AstRawString"* %731, i64 0, i32 1, i32 0
  store i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.21, i64 0, i64 0), i8** %733, align 8
  %734 = getelementptr inbounds %"class.v8::internal::AstRawString", %"class.v8::internal::AstRawString"* %731, i64 0, i32 1, i32 1
  store i64 19, i64* %734, align 8
  %735 = getelementptr inbounds %"class.v8::internal::AstRawString", %"class.v8::internal::AstRawString"* %731, i64 0, i32 2
  store i32 %720, i32* %735, align 8
  %736 = getelementptr inbounds %"class.v8::internal::AstRawString", %"class.v8::internal::AstRawString"* %731, i64 0, i32 3
  store i8 1, i8* %736, align 4
  %737 = getelementptr inbounds %"class.v8::internal::AstStringConstants", %"class.v8::internal::AstStringConstants"* %0, i64 0, i32 24
  store %"class.v8::internal::AstRawString"* %731, %"class.v8::internal::AstRawString"** %737, align 8
  %738 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %1, i64 0, i32 0, i32 7, i32 0, i64 314
  %739 = inttoptr i64 %730 to i64**
  store i64* %738, i64** %739, align 8
  %740 = bitcast %"class.v8::internal::AstRawString"** %25 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %740) #15
  %741 = bitcast %"class.v8::internal::AstRawString"** %737 to i64*
  %742 = load i64, i64* %741, align 8
  %743 = bitcast %"class.v8::internal::AstRawString"** %25 to i64*
  store i64 %742, i64* %743, align 8
  %744 = inttoptr i64 %742 to %"class.v8::internal::AstRawString"*
  %745 = getelementptr inbounds %"class.v8::internal::AstRawString", %"class.v8::internal::AstRawString"* %744, i64 0, i32 2
  %746 = load i32, i32* %745, align 8
  %747 = lshr i32 %746, 2
  %748 = call %"struct.v8::base::TemplateHashMapEntry"* @_ZN2v84base19TemplateHashMapImplIPKNS_8internal12AstRawStringENS0_14NoHashMapValueENS2_22AstRawStringMapMatcherENS0_23DefaultAllocationPolicyEE9InsertNewERKS5_j(%"class.v8::base::TemplateHashMapImpl"* %61, %"class.v8::internal::AstRawString"** nonnull dereferenceable(8) %25, i32 %747)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %740) #15
  %749 = load i64, i64* %87, align 8
  %750 = call i32 @_ZN2v88internal12StringHasher20HashSequentialStringIhEEjPKT_im(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.22, i64 0, i64 0), i32 11, i64 %749)
  %751 = load i64, i64* %89, align 8
  %752 = load i64, i64* %91, align 8
  %753 = sub i64 %752, %751
  %754 = icmp ult i64 %753, 32
  br i1 %754, label %755, label %757, !prof !3

755:                                              ; preds = %729
  %756 = call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %58, i64 32) #15
  br label %759

757:                                              ; preds = %729
  %758 = add i64 %751, 32
  store i64 %758, i64* %89, align 8
  br label %759

759:                                              ; preds = %755, %757
  %760 = phi i64 [ %756, %755 ], [ %751, %757 ]
  %761 = inttoptr i64 %760 to %"class.v8::internal::AstRawString"*
  %762 = getelementptr inbounds %"class.v8::internal::AstRawString", %"class.v8::internal::AstRawString"* %761, i64 0, i32 0, i32 0
  store %"class.v8::internal::AstRawString"* null, %"class.v8::internal::AstRawString"** %762, align 8
  %763 = getelementptr inbounds %"class.v8::internal::AstRawString", %"class.v8::internal::AstRawString"* %761, i64 0, i32 1, i32 0
  store i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.22, i64 0, i64 0), i8** %763, align 8
  %764 = getelementptr inbounds %"class.v8::internal::AstRawString", %"class.v8::internal::AstRawString"* %761, i64 0, i32 1, i32 1
  store i64 11, i64* %764, align 8
  %765 = getelementptr inbounds %"class.v8::internal::AstRawString", %"class.v8::internal::AstRawString"* %761, i64 0, i32 2
  store i32 %750, i32* %765, align 8
  %766 = getelementptr inbounds %"class.v8::internal::AstRawString", %"class.v8::internal::AstRawString"* %761, i64 0, i32 3
  store i8 1, i8* %766, align 4
  %767 = getelementptr inbounds %"class.v8::internal::AstStringConstants", %"class.v8::internal::AstStringConstants"* %0, i64 0, i32 25
  store %"class.v8::internal::AstRawString"* %761, %"class.v8::internal::AstRawString"** %767, align 8
  %768 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %1, i64 0, i32 0, i32 7, i32 0, i64 316
  %769 = inttoptr i64 %760 to i64**
  store i64* %768, i64** %769, align 8
  %770 = bitcast %"class.v8::internal::AstRawString"** %26 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %770) #15
  %771 = bitcast %"class.v8::internal::AstRawString"** %767 to i64*
  %772 = load i64, i64* %771, align 8
  %773 = bitcast %"class.v8::internal::AstRawString"** %26 to i64*
  store i64 %772, i64* %773, align 8
  %774 = inttoptr i64 %772 to %"class.v8::internal::AstRawString"*
  %775 = getelementptr inbounds %"class.v8::internal::AstRawString", %"class.v8::internal::AstRawString"* %774, i64 0, i32 2
  %776 = load i32, i32* %775, align 8
  %777 = lshr i32 %776, 2
  %778 = call %"struct.v8::base::TemplateHashMapEntry"* @_ZN2v84base19TemplateHashMapImplIPKNS_8internal12AstRawStringENS0_14NoHashMapValueENS2_22AstRawStringMapMatcherENS0_23DefaultAllocationPolicyEE9InsertNewERKS5_j(%"class.v8::base::TemplateHashMapImpl"* %61, %"class.v8::internal::AstRawString"** nonnull dereferenceable(8) %26, i32 %777)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %770) #15
  %779 = load i64, i64* %87, align 8
  %780 = call i32 @_ZN2v88internal12StringHasher20HashSequentialStringIhEEjPKT_im(i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.23, i64 0, i64 0), i32 6, i64 %779)
  %781 = load i64, i64* %89, align 8
  %782 = load i64, i64* %91, align 8
  %783 = sub i64 %782, %781
  %784 = icmp ult i64 %783, 32
  br i1 %784, label %785, label %787, !prof !3

785:                                              ; preds = %759
  %786 = call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %58, i64 32) #15
  br label %789

787:                                              ; preds = %759
  %788 = add i64 %781, 32
  store i64 %788, i64* %89, align 8
  br label %789

789:                                              ; preds = %785, %787
  %790 = phi i64 [ %786, %785 ], [ %781, %787 ]
  %791 = inttoptr i64 %790 to %"class.v8::internal::AstRawString"*
  %792 = getelementptr inbounds %"class.v8::internal::AstRawString", %"class.v8::internal::AstRawString"* %791, i64 0, i32 0, i32 0
  store %"class.v8::internal::AstRawString"* null, %"class.v8::internal::AstRawString"** %792, align 8
  %793 = getelementptr inbounds %"class.v8::internal::AstRawString", %"class.v8::internal::AstRawString"* %791, i64 0, i32 1, i32 0
  store i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.23, i64 0, i64 0), i8** %793, align 8
  %794 = getelementptr inbounds %"class.v8::internal::AstRawString", %"class.v8::internal::AstRawString"* %791, i64 0, i32 1, i32 1
  store i64 6, i64* %794, align 8
  %795 = getelementptr inbounds %"class.v8::internal::AstRawString", %"class.v8::internal::AstRawString"* %791, i64 0, i32 2
  store i32 %780, i32* %795, align 8
  %796 = getelementptr inbounds %"class.v8::internal::AstRawString", %"class.v8::internal::AstRawString"* %791, i64 0, i32 3
  store i8 1, i8* %796, align 4
  %797 = getelementptr inbounds %"class.v8::internal::AstStringConstants", %"class.v8::internal::AstStringConstants"* %0, i64 0, i32 26
  store %"class.v8::internal::AstRawString"* %791, %"class.v8::internal::AstRawString"** %797, align 8
  %798 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %1, i64 0, i32 0, i32 7, i32 0, i64 307
  %799 = inttoptr i64 %790 to i64**
  store i64* %798, i64** %799, align 8
  %800 = bitcast %"class.v8::internal::AstRawString"** %27 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %800) #15
  %801 = bitcast %"class.v8::internal::AstRawString"** %797 to i64*
  %802 = load i64, i64* %801, align 8
  %803 = bitcast %"class.v8::internal::AstRawString"** %27 to i64*
  store i64 %802, i64* %803, align 8
  %804 = inttoptr i64 %802 to %"class.v8::internal::AstRawString"*
  %805 = getelementptr inbounds %"class.v8::internal::AstRawString", %"class.v8::internal::AstRawString"* %804, i64 0, i32 2
  %806 = load i32, i32* %805, align 8
  %807 = lshr i32 %806, 2
  %808 = call %"struct.v8::base::TemplateHashMapEntry"* @_ZN2v84base19TemplateHashMapImplIPKNS_8internal12AstRawStringENS0_14NoHashMapValueENS2_22AstRawStringMapMatcherENS0_23DefaultAllocationPolicyEE9InsertNewERKS5_j(%"class.v8::base::TemplateHashMapImpl"* %61, %"class.v8::internal::AstRawString"** nonnull dereferenceable(8) %27, i32 %807)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %800) #15
  %809 = load i64, i64* %87, align 8
  %810 = call i32 @_ZN2v88internal12StringHasher20HashSequentialStringIhEEjPKT_im(i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.24, i64 0, i64 0), i32 0, i64 %809)
  %811 = load i64, i64* %89, align 8
  %812 = load i64, i64* %91, align 8
  %813 = sub i64 %812, %811
  %814 = icmp ult i64 %813, 32
  br i1 %814, label %815, label %817, !prof !3

815:                                              ; preds = %789
  %816 = call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %58, i64 32) #15
  br label %819

817:                                              ; preds = %789
  %818 = add i64 %811, 32
  store i64 %818, i64* %89, align 8
  br label %819

819:                                              ; preds = %815, %817
  %820 = phi i64 [ %816, %815 ], [ %811, %817 ]
  %821 = inttoptr i64 %820 to %"class.v8::internal::AstRawString"*
  %822 = getelementptr inbounds %"class.v8::internal::AstRawString", %"class.v8::internal::AstRawString"* %821, i64 0, i32 0, i32 0
  store %"class.v8::internal::AstRawString"* null, %"class.v8::internal::AstRawString"** %822, align 8
  %823 = getelementptr inbounds %"class.v8::internal::AstRawString", %"class.v8::internal::AstRawString"* %821, i64 0, i32 1, i32 0
  store i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.24, i64 0, i64 0), i8** %823, align 8
  %824 = getelementptr inbounds %"class.v8::internal::AstRawString", %"class.v8::internal::AstRawString"* %821, i64 0, i32 1, i32 1
  store i64 0, i64* %824, align 8
  %825 = getelementptr inbounds %"class.v8::internal::AstRawString", %"class.v8::internal::AstRawString"* %821, i64 0, i32 2
  store i32 %810, i32* %825, align 8
  %826 = getelementptr inbounds %"class.v8::internal::AstRawString", %"class.v8::internal::AstRawString"* %821, i64 0, i32 3
  store i8 1, i8* %826, align 4
  %827 = getelementptr inbounds %"class.v8::internal::AstStringConstants", %"class.v8::internal::AstStringConstants"* %0, i64 0, i32 27
  store %"class.v8::internal::AstRawString"* %821, %"class.v8::internal::AstRawString"** %827, align 8
  %828 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %1, i64 0, i32 0, i32 7, i32 0, i64 9
  %829 = inttoptr i64 %820 to i64**
  store i64* %828, i64** %829, align 8
  %830 = bitcast %"class.v8::internal::AstRawString"** %28 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %830) #15
  %831 = bitcast %"class.v8::internal::AstRawString"** %827 to i64*
  %832 = load i64, i64* %831, align 8
  %833 = bitcast %"class.v8::internal::AstRawString"** %28 to i64*
  store i64 %832, i64* %833, align 8
  %834 = inttoptr i64 %832 to %"class.v8::internal::AstRawString"*
  %835 = getelementptr inbounds %"class.v8::internal::AstRawString", %"class.v8::internal::AstRawString"* %834, i64 0, i32 2
  %836 = load i32, i32* %835, align 8
  %837 = lshr i32 %836, 2
  %838 = call %"struct.v8::base::TemplateHashMapEntry"* @_ZN2v84base19TemplateHashMapImplIPKNS_8internal12AstRawStringENS0_14NoHashMapValueENS2_22AstRawStringMapMatcherENS0_23DefaultAllocationPolicyEE9InsertNewERKS5_j(%"class.v8::base::TemplateHashMapImpl"* %61, %"class.v8::internal::AstRawString"** nonnull dereferenceable(8) %28, i32 %837)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %830) #15
  %839 = load i64, i64* %87, align 8
  %840 = call i32 @_ZN2v88internal12StringHasher20HashSequentialStringIhEEjPKT_im(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.25, i64 0, i64 0), i32 4, i64 %839)
  %841 = load i64, i64* %89, align 8
  %842 = load i64, i64* %91, align 8
  %843 = sub i64 %842, %841
  %844 = icmp ult i64 %843, 32
  br i1 %844, label %845, label %847, !prof !3

845:                                              ; preds = %819
  %846 = call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %58, i64 32) #15
  br label %849

847:                                              ; preds = %819
  %848 = add i64 %841, 32
  store i64 %848, i64* %89, align 8
  br label %849

849:                                              ; preds = %845, %847
  %850 = phi i64 [ %846, %845 ], [ %841, %847 ]
  %851 = inttoptr i64 %850 to %"class.v8::internal::AstRawString"*
  %852 = getelementptr inbounds %"class.v8::internal::AstRawString", %"class.v8::internal::AstRawString"* %851, i64 0, i32 0, i32 0
  store %"class.v8::internal::AstRawString"* null, %"class.v8::internal::AstRawString"** %852, align 8
  %853 = getelementptr inbounds %"class.v8::internal::AstRawString", %"class.v8::internal::AstRawString"* %851, i64 0, i32 1, i32 0
  store i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.25, i64 0, i64 0), i8** %853, align 8
  %854 = getelementptr inbounds %"class.v8::internal::AstRawString", %"class.v8::internal::AstRawString"* %851, i64 0, i32 1, i32 1
  store i64 4, i64* %854, align 8
  %855 = getelementptr inbounds %"class.v8::internal::AstRawString", %"class.v8::internal::AstRawString"* %851, i64 0, i32 2
  store i32 %840, i32* %855, align 8
  %856 = getelementptr inbounds %"class.v8::internal::AstRawString", %"class.v8::internal::AstRawString"* %851, i64 0, i32 3
  store i8 1, i8* %856, align 4
  %857 = getelementptr inbounds %"class.v8::internal::AstStringConstants", %"class.v8::internal::AstStringConstants"* %0, i64 0, i32 28
  store %"class.v8::internal::AstRawString"* %851, %"class.v8::internal::AstRawString"** %857, align 8
  %858 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %1, i64 0, i32 0, i32 7, i32 0, i64 323
  %859 = inttoptr i64 %850 to i64**
  store i64* %858, i64** %859, align 8
  %860 = bitcast %"class.v8::internal::AstRawString"** %29 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %860) #15
  %861 = bitcast %"class.v8::internal::AstRawString"** %857 to i64*
  %862 = load i64, i64* %861, align 8
  %863 = bitcast %"class.v8::internal::AstRawString"** %29 to i64*
  store i64 %862, i64* %863, align 8
  %864 = inttoptr i64 %862 to %"class.v8::internal::AstRawString"*
  %865 = getelementptr inbounds %"class.v8::internal::AstRawString", %"class.v8::internal::AstRawString"* %864, i64 0, i32 2
  %866 = load i32, i32* %865, align 8
  %867 = lshr i32 %866, 2
  %868 = call %"struct.v8::base::TemplateHashMapEntry"* @_ZN2v84base19TemplateHashMapImplIPKNS_8internal12AstRawStringENS0_14NoHashMapValueENS2_22AstRawStringMapMatcherENS0_23DefaultAllocationPolicyEE9InsertNewERKS5_j(%"class.v8::base::TemplateHashMapImpl"* %61, %"class.v8::internal::AstRawString"** nonnull dereferenceable(8) %29, i32 %867)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %860) #15
  %869 = load i64, i64* %87, align 8
  %870 = call i32 @_ZN2v88internal12StringHasher20HashSequentialStringIhEEjPKT_im(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.26, i64 0, i64 0), i32 4, i64 %869)
  %871 = load i64, i64* %89, align 8
  %872 = load i64, i64* %91, align 8
  %873 = sub i64 %872, %871
  %874 = icmp ult i64 %873, 32
  br i1 %874, label %875, label %877, !prof !3

875:                                              ; preds = %849
  %876 = call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %58, i64 32) #15
  br label %879

877:                                              ; preds = %849
  %878 = add i64 %871, 32
  store i64 %878, i64* %89, align 8
  br label %879

879:                                              ; preds = %875, %877
  %880 = phi i64 [ %876, %875 ], [ %871, %877 ]
  %881 = inttoptr i64 %880 to %"class.v8::internal::AstRawString"*
  %882 = getelementptr inbounds %"class.v8::internal::AstRawString", %"class.v8::internal::AstRawString"* %881, i64 0, i32 0, i32 0
  store %"class.v8::internal::AstRawString"* null, %"class.v8::internal::AstRawString"** %882, align 8
  %883 = getelementptr inbounds %"class.v8::internal::AstRawString", %"class.v8::internal::AstRawString"* %881, i64 0, i32 1, i32 0
  store i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.26, i64 0, i64 0), i8** %883, align 8
  %884 = getelementptr inbounds %"class.v8::internal::AstRawString", %"class.v8::internal::AstRawString"* %881, i64 0, i32 1, i32 1
  store i64 4, i64* %884, align 8
  %885 = getelementptr inbounds %"class.v8::internal::AstRawString", %"class.v8::internal::AstRawString"* %881, i64 0, i32 2
  store i32 %870, i32* %885, align 8
  %886 = getelementptr inbounds %"class.v8::internal::AstRawString", %"class.v8::internal::AstRawString"* %881, i64 0, i32 3
  store i8 1, i8* %886, align 4
  %887 = getelementptr inbounds %"class.v8::internal::AstStringConstants", %"class.v8::internal::AstStringConstants"* %0, i64 0, i32 29
  store %"class.v8::internal::AstRawString"* %881, %"class.v8::internal::AstRawString"** %887, align 8
  %888 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %1, i64 0, i32 0, i32 7, i32 0, i64 331
  %889 = inttoptr i64 %880 to i64**
  store i64* %888, i64** %889, align 8
  %890 = bitcast %"class.v8::internal::AstRawString"** %30 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %890) #15
  %891 = bitcast %"class.v8::internal::AstRawString"** %887 to i64*
  %892 = load i64, i64* %891, align 8
  %893 = bitcast %"class.v8::internal::AstRawString"** %30 to i64*
  store i64 %892, i64* %893, align 8
  %894 = inttoptr i64 %892 to %"class.v8::internal::AstRawString"*
  %895 = getelementptr inbounds %"class.v8::internal::AstRawString", %"class.v8::internal::AstRawString"* %894, i64 0, i32 2
  %896 = load i32, i32* %895, align 8
  %897 = lshr i32 %896, 2
  %898 = call %"struct.v8::base::TemplateHashMapEntry"* @_ZN2v84base19TemplateHashMapImplIPKNS_8internal12AstRawStringENS0_14NoHashMapValueENS2_22AstRawStringMapMatcherENS0_23DefaultAllocationPolicyEE9InsertNewERKS5_j(%"class.v8::base::TemplateHashMapImpl"* %61, %"class.v8::internal::AstRawString"** nonnull dereferenceable(8) %30, i32 %897)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %890) #15
  %899 = load i64, i64* %87, align 8
  %900 = call i32 @_ZN2v88internal12StringHasher20HashSequentialStringIhEEjPKT_im(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.27, i64 0, i64 0), i32 8, i64 %899)
  %901 = load i64, i64* %89, align 8
  %902 = load i64, i64* %91, align 8
  %903 = sub i64 %902, %901
  %904 = icmp ult i64 %903, 32
  br i1 %904, label %905, label %907, !prof !3

905:                                              ; preds = %879
  %906 = call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %58, i64 32) #15
  br label %909

907:                                              ; preds = %879
  %908 = add i64 %901, 32
  store i64 %908, i64* %89, align 8
  br label %909

909:                                              ; preds = %905, %907
  %910 = phi i64 [ %906, %905 ], [ %901, %907 ]
  %911 = inttoptr i64 %910 to %"class.v8::internal::AstRawString"*
  %912 = getelementptr inbounds %"class.v8::internal::AstRawString", %"class.v8::internal::AstRawString"* %911, i64 0, i32 0, i32 0
  store %"class.v8::internal::AstRawString"* null, %"class.v8::internal::AstRawString"** %912, align 8
  %913 = getelementptr inbounds %"class.v8::internal::AstRawString", %"class.v8::internal::AstRawString"* %911, i64 0, i32 1, i32 0
  store i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.27, i64 0, i64 0), i8** %913, align 8
  %914 = getelementptr inbounds %"class.v8::internal::AstRawString", %"class.v8::internal::AstRawString"* %911, i64 0, i32 1, i32 1
  store i64 8, i64* %914, align 8
  %915 = getelementptr inbounds %"class.v8::internal::AstRawString", %"class.v8::internal::AstRawString"* %911, i64 0, i32 2
  store i32 %900, i32* %915, align 8
  %916 = getelementptr inbounds %"class.v8::internal::AstRawString", %"class.v8::internal::AstRawString"* %911, i64 0, i32 3
  store i8 1, i8* %916, align 4
  %917 = getelementptr inbounds %"class.v8::internal::AstStringConstants", %"class.v8::internal::AstStringConstants"* %0, i64 0, i32 30
  store %"class.v8::internal::AstRawString"* %911, %"class.v8::internal::AstRawString"** %917, align 8
  %918 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %1, i64 0, i32 0, i32 7, i32 0, i64 334
  %919 = inttoptr i64 %910 to i64**
  store i64* %918, i64** %919, align 8
  %920 = bitcast %"class.v8::internal::AstRawString"** %31 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %920) #15
  %921 = bitcast %"class.v8::internal::AstRawString"** %917 to i64*
  %922 = load i64, i64* %921, align 8
  %923 = bitcast %"class.v8::internal::AstRawString"** %31 to i64*
  store i64 %922, i64* %923, align 8
  %924 = inttoptr i64 %922 to %"class.v8::internal::AstRawString"*
  %925 = getelementptr inbounds %"class.v8::internal::AstRawString", %"class.v8::internal::AstRawString"* %924, i64 0, i32 2
  %926 = load i32, i32* %925, align 8
  %927 = lshr i32 %926, 2
  %928 = call %"struct.v8::base::TemplateHashMapEntry"* @_ZN2v84base19TemplateHashMapImplIPKNS_8internal12AstRawStringENS0_14NoHashMapValueENS2_22AstRawStringMapMatcherENS0_23DefaultAllocationPolicyEE9InsertNewERKS5_j(%"class.v8::base::TemplateHashMapImpl"* %61, %"class.v8::internal::AstRawString"** nonnull dereferenceable(8) %31, i32 %927)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %920) #15
  %929 = load i64, i64* %87, align 8
  %930 = call i32 @_ZN2v88internal12StringHasher20HashSequentialStringIhEEjPKT_im(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.28, i64 0, i64 0), i32 3, i64 %929)
  %931 = load i64, i64* %89, align 8
  %932 = load i64, i64* %91, align 8
  %933 = sub i64 %932, %931
  %934 = icmp ult i64 %933, 32
  br i1 %934, label %935, label %937, !prof !3

935:                                              ; preds = %909
  %936 = call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %58, i64 32) #15
  br label %939

937:                                              ; preds = %909
  %938 = add i64 %931, 32
  store i64 %938, i64* %89, align 8
  br label %939

939:                                              ; preds = %935, %937
  %940 = phi i64 [ %936, %935 ], [ %931, %937 ]
  %941 = inttoptr i64 %940 to %"class.v8::internal::AstRawString"*
  %942 = getelementptr inbounds %"class.v8::internal::AstRawString", %"class.v8::internal::AstRawString"* %941, i64 0, i32 0, i32 0
  store %"class.v8::internal::AstRawString"* null, %"class.v8::internal::AstRawString"** %942, align 8
  %943 = getelementptr inbounds %"class.v8::internal::AstRawString", %"class.v8::internal::AstRawString"* %941, i64 0, i32 1, i32 0
  store i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.28, i64 0, i64 0), i8** %943, align 8
  %944 = getelementptr inbounds %"class.v8::internal::AstRawString", %"class.v8::internal::AstRawString"* %941, i64 0, i32 1, i32 1
  store i64 3, i64* %944, align 8
  %945 = getelementptr inbounds %"class.v8::internal::AstRawString", %"class.v8::internal::AstRawString"* %941, i64 0, i32 2
  store i32 %930, i32* %945, align 8
  %946 = getelementptr inbounds %"class.v8::internal::AstRawString", %"class.v8::internal::AstRawString"* %941, i64 0, i32 3
  store i8 1, i8* %946, align 4
  %947 = getelementptr inbounds %"class.v8::internal::AstStringConstants", %"class.v8::internal::AstStringConstants"* %0, i64 0, i32 31
  store %"class.v8::internal::AstRawString"* %941, %"class.v8::internal::AstRawString"** %947, align 8
  %948 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %1, i64 0, i32 0, i32 7, i32 0, i64 338
  %949 = inttoptr i64 %940 to i64**
  store i64* %948, i64** %949, align 8
  %950 = bitcast %"class.v8::internal::AstRawString"** %32 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %950) #15
  %951 = bitcast %"class.v8::internal::AstRawString"** %947 to i64*
  %952 = load i64, i64* %951, align 8
  %953 = bitcast %"class.v8::internal::AstRawString"** %32 to i64*
  store i64 %952, i64* %953, align 8
  %954 = inttoptr i64 %952 to %"class.v8::internal::AstRawString"*
  %955 = getelementptr inbounds %"class.v8::internal::AstRawString", %"class.v8::internal::AstRawString"* %954, i64 0, i32 2
  %956 = load i32, i32* %955, align 8
  %957 = lshr i32 %956, 2
  %958 = call %"struct.v8::base::TemplateHashMapEntry"* @_ZN2v84base19TemplateHashMapImplIPKNS_8internal12AstRawStringENS0_14NoHashMapValueENS2_22AstRawStringMapMatcherENS0_23DefaultAllocationPolicyEE9InsertNewERKS5_j(%"class.v8::base::TemplateHashMapImpl"* %61, %"class.v8::internal::AstRawString"** nonnull dereferenceable(8) %32, i32 %957)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %950) #15
  %959 = load i64, i64* %87, align 8
  %960 = call i32 @_ZN2v88internal12StringHasher20HashSequentialStringIhEEjPKT_im(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.29, i64 0, i64 0), i32 4, i64 %959)
  %961 = load i64, i64* %89, align 8
  %962 = load i64, i64* %91, align 8
  %963 = sub i64 %962, %961
  %964 = icmp ult i64 %963, 32
  br i1 %964, label %965, label %967, !prof !3

965:                                              ; preds = %939
  %966 = call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %58, i64 32) #15
  br label %969

967:                                              ; preds = %939
  %968 = add i64 %961, 32
  store i64 %968, i64* %89, align 8
  br label %969

969:                                              ; preds = %965, %967
  %970 = phi i64 [ %966, %965 ], [ %961, %967 ]
  %971 = inttoptr i64 %970 to %"class.v8::internal::AstRawString"*
  %972 = getelementptr inbounds %"class.v8::internal::AstRawString", %"class.v8::internal::AstRawString"* %971, i64 0, i32 0, i32 0
  store %"class.v8::internal::AstRawString"* null, %"class.v8::internal::AstRawString"** %972, align 8
  %973 = getelementptr inbounds %"class.v8::internal::AstRawString", %"class.v8::internal::AstRawString"* %971, i64 0, i32 1, i32 0
  store i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.29, i64 0, i64 0), i8** %973, align 8
  %974 = getelementptr inbounds %"class.v8::internal::AstRawString", %"class.v8::internal::AstRawString"* %971, i64 0, i32 1, i32 1
  store i64 4, i64* %974, align 8
  %975 = getelementptr inbounds %"class.v8::internal::AstRawString", %"class.v8::internal::AstRawString"* %971, i64 0, i32 2
  store i32 %960, i32* %975, align 8
  %976 = getelementptr inbounds %"class.v8::internal::AstRawString", %"class.v8::internal::AstRawString"* %971, i64 0, i32 3
  store i8 1, i8* %976, align 4
  %977 = getelementptr inbounds %"class.v8::internal::AstStringConstants", %"class.v8::internal::AstStringConstants"* %0, i64 0, i32 32
  store %"class.v8::internal::AstRawString"* %971, %"class.v8::internal::AstRawString"** %977, align 8
  %978 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %1, i64 0, i32 0, i32 7, i32 0, i64 337
  %979 = inttoptr i64 %970 to i64**
  store i64* %978, i64** %979, align 8
  %980 = bitcast %"class.v8::internal::AstRawString"** %33 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %980) #15
  %981 = bitcast %"class.v8::internal::AstRawString"** %977 to i64*
  %982 = load i64, i64* %981, align 8
  %983 = bitcast %"class.v8::internal::AstRawString"** %33 to i64*
  store i64 %982, i64* %983, align 8
  %984 = inttoptr i64 %982 to %"class.v8::internal::AstRawString"*
  %985 = getelementptr inbounds %"class.v8::internal::AstRawString", %"class.v8::internal::AstRawString"* %984, i64 0, i32 2
  %986 = load i32, i32* %985, align 8
  %987 = lshr i32 %986, 2
  %988 = call %"struct.v8::base::TemplateHashMapEntry"* @_ZN2v84base19TemplateHashMapImplIPKNS_8internal12AstRawStringENS0_14NoHashMapValueENS2_22AstRawStringMapMatcherENS0_23DefaultAllocationPolicyEE9InsertNewERKS5_j(%"class.v8::base::TemplateHashMapImpl"* %61, %"class.v8::internal::AstRawString"** nonnull dereferenceable(8) %33, i32 %987)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %980) #15
  %989 = load i64, i64* %87, align 8
  %990 = call i32 @_ZN2v88internal12StringHasher20HashSequentialStringIhEEjPKT_im(i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.30, i64 0, i64 0), i32 6, i64 %989)
  %991 = load i64, i64* %89, align 8
  %992 = load i64, i64* %91, align 8
  %993 = sub i64 %992, %991
  %994 = icmp ult i64 %993, 32
  br i1 %994, label %995, label %997, !prof !3

995:                                              ; preds = %969
  %996 = call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %58, i64 32) #15
  br label %999

997:                                              ; preds = %969
  %998 = add i64 %991, 32
  store i64 %998, i64* %89, align 8
  br label %999

999:                                              ; preds = %995, %997
  %1000 = phi i64 [ %996, %995 ], [ %991, %997 ]
  %1001 = inttoptr i64 %1000 to %"class.v8::internal::AstRawString"*
  %1002 = getelementptr inbounds %"class.v8::internal::AstRawString", %"class.v8::internal::AstRawString"* %1001, i64 0, i32 0, i32 0
  store %"class.v8::internal::AstRawString"* null, %"class.v8::internal::AstRawString"** %1002, align 8
  %1003 = getelementptr inbounds %"class.v8::internal::AstRawString", %"class.v8::internal::AstRawString"* %1001, i64 0, i32 1, i32 0
  store i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.30, i64 0, i64 0), i8** %1003, align 8
  %1004 = getelementptr inbounds %"class.v8::internal::AstRawString", %"class.v8::internal::AstRawString"* %1001, i64 0, i32 1, i32 1
  store i64 6, i64* %1004, align 8
  %1005 = getelementptr inbounds %"class.v8::internal::AstRawString", %"class.v8::internal::AstRawString"* %1001, i64 0, i32 2
  store i32 %990, i32* %1005, align 8
  %1006 = getelementptr inbounds %"class.v8::internal::AstRawString", %"class.v8::internal::AstRawString"* %1001, i64 0, i32 3
  store i8 1, i8* %1006, align 4
  %1007 = getelementptr inbounds %"class.v8::internal::AstStringConstants", %"class.v8::internal::AstStringConstants"* %0, i64 0, i32 33
  store %"class.v8::internal::AstRawString"* %1001, %"class.v8::internal::AstRawString"** %1007, align 8
  %1008 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %1, i64 0, i32 0, i32 7, i32 0, i64 363
  %1009 = inttoptr i64 %1000 to i64**
  store i64* %1008, i64** %1009, align 8
  %1010 = bitcast %"class.v8::internal::AstRawString"** %34 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %1010) #15
  %1011 = bitcast %"class.v8::internal::AstRawString"** %1007 to i64*
  %1012 = load i64, i64* %1011, align 8
  %1013 = bitcast %"class.v8::internal::AstRawString"** %34 to i64*
  store i64 %1012, i64* %1013, align 8
  %1014 = inttoptr i64 %1012 to %"class.v8::internal::AstRawString"*
  %1015 = getelementptr inbounds %"class.v8::internal::AstRawString", %"class.v8::internal::AstRawString"* %1014, i64 0, i32 2
  %1016 = load i32, i32* %1015, align 8
  %1017 = lshr i32 %1016, 2
  %1018 = call %"struct.v8::base::TemplateHashMapEntry"* @_ZN2v84base19TemplateHashMapImplIPKNS_8internal12AstRawStringENS0_14NoHashMapValueENS2_22AstRawStringMapMatcherENS0_23DefaultAllocationPolicyEE9InsertNewERKS5_j(%"class.v8::base::TemplateHashMapImpl"* %61, %"class.v8::internal::AstRawString"** nonnull dereferenceable(8) %34, i32 %1017)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1010) #15
  %1019 = load i64, i64* %87, align 8
  %1020 = call i32 @_ZN2v88internal12StringHasher20HashSequentialStringIhEEjPKT_im(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.31, i64 0, i64 0), i32 3, i64 %1019)
  %1021 = load i64, i64* %89, align 8
  %1022 = load i64, i64* %91, align 8
  %1023 = sub i64 %1022, %1021
  %1024 = icmp ult i64 %1023, 32
  br i1 %1024, label %1025, label %1027, !prof !3

1025:                                             ; preds = %999
  %1026 = call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %58, i64 32) #15
  br label %1029

1027:                                             ; preds = %999
  %1028 = add i64 %1021, 32
  store i64 %1028, i64* %89, align 8
  br label %1029

1029:                                             ; preds = %1025, %1027
  %1030 = phi i64 [ %1026, %1025 ], [ %1021, %1027 ]
  %1031 = inttoptr i64 %1030 to %"class.v8::internal::AstRawString"*
  %1032 = getelementptr inbounds %"class.v8::internal::AstRawString", %"class.v8::internal::AstRawString"* %1031, i64 0, i32 0, i32 0
  store %"class.v8::internal::AstRawString"* null, %"class.v8::internal::AstRawString"** %1032, align 8
  %1033 = getelementptr inbounds %"class.v8::internal::AstRawString", %"class.v8::internal::AstRawString"* %1031, i64 0, i32 1, i32 0
  store i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.31, i64 0, i64 0), i8** %1033, align 8
  %1034 = getelementptr inbounds %"class.v8::internal::AstRawString", %"class.v8::internal::AstRawString"* %1031, i64 0, i32 1, i32 1
  store i64 3, i64* %1034, align 8
  %1035 = getelementptr inbounds %"class.v8::internal::AstRawString", %"class.v8::internal::AstRawString"* %1031, i64 0, i32 2
  store i32 %1020, i32* %1035, align 8
  %1036 = getelementptr inbounds %"class.v8::internal::AstRawString", %"class.v8::internal::AstRawString"* %1031, i64 0, i32 3
  store i8 1, i8* %1036, align 4
  %1037 = getelementptr inbounds %"class.v8::internal::AstStringConstants", %"class.v8::internal::AstStringConstants"* %0, i64 0, i32 34
  store %"class.v8::internal::AstRawString"* %1031, %"class.v8::internal::AstRawString"** %1037, align 8
  %1038 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %1, i64 0, i32 0, i32 7, i32 0, i64 364
  %1039 = inttoptr i64 %1030 to i64**
  store i64* %1038, i64** %1039, align 8
  %1040 = bitcast %"class.v8::internal::AstRawString"** %35 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %1040) #15
  %1041 = bitcast %"class.v8::internal::AstRawString"** %1037 to i64*
  %1042 = load i64, i64* %1041, align 8
  %1043 = bitcast %"class.v8::internal::AstRawString"** %35 to i64*
  store i64 %1042, i64* %1043, align 8
  %1044 = inttoptr i64 %1042 to %"class.v8::internal::AstRawString"*
  %1045 = getelementptr inbounds %"class.v8::internal::AstRawString", %"class.v8::internal::AstRawString"* %1044, i64 0, i32 2
  %1046 = load i32, i32* %1045, align 8
  %1047 = lshr i32 %1046, 2
  %1048 = call %"struct.v8::base::TemplateHashMapEntry"* @_ZN2v84base19TemplateHashMapImplIPKNS_8internal12AstRawStringENS0_14NoHashMapValueENS2_22AstRawStringMapMatcherENS0_23DefaultAllocationPolicyEE9InsertNewERKS5_j(%"class.v8::base::TemplateHashMapImpl"* %61, %"class.v8::internal::AstRawString"** nonnull dereferenceable(8) %35, i32 %1047)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1040) #15
  %1049 = load i64, i64* %87, align 8
  %1050 = call i32 @_ZN2v88internal12StringHasher20HashSequentialStringIhEEjPKT_im(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.32, i64 0, i64 0), i32 4, i64 %1049)
  %1051 = load i64, i64* %89, align 8
  %1052 = load i64, i64* %91, align 8
  %1053 = sub i64 %1052, %1051
  %1054 = icmp ult i64 %1053, 32
  br i1 %1054, label %1055, label %1057, !prof !3

1055:                                             ; preds = %1029
  %1056 = call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %58, i64 32) #15
  br label %1059

1057:                                             ; preds = %1029
  %1058 = add i64 %1051, 32
  store i64 %1058, i64* %89, align 8
  br label %1059

1059:                                             ; preds = %1055, %1057
  %1060 = phi i64 [ %1056, %1055 ], [ %1051, %1057 ]
  %1061 = inttoptr i64 %1060 to %"class.v8::internal::AstRawString"*
  %1062 = getelementptr inbounds %"class.v8::internal::AstRawString", %"class.v8::internal::AstRawString"* %1061, i64 0, i32 0, i32 0
  store %"class.v8::internal::AstRawString"* null, %"class.v8::internal::AstRawString"** %1062, align 8
  %1063 = getelementptr inbounds %"class.v8::internal::AstRawString", %"class.v8::internal::AstRawString"* %1061, i64 0, i32 1, i32 0
  store i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.32, i64 0, i64 0), i8** %1063, align 8
  %1064 = getelementptr inbounds %"class.v8::internal::AstRawString", %"class.v8::internal::AstRawString"* %1061, i64 0, i32 1, i32 1
  store i64 4, i64* %1064, align 8
  %1065 = getelementptr inbounds %"class.v8::internal::AstRawString", %"class.v8::internal::AstRawString"* %1061, i64 0, i32 2
  store i32 %1050, i32* %1065, align 8
  %1066 = getelementptr inbounds %"class.v8::internal::AstRawString", %"class.v8::internal::AstRawString"* %1061, i64 0, i32 3
  store i8 1, i8* %1066, align 4
  %1067 = getelementptr inbounds %"class.v8::internal::AstStringConstants", %"class.v8::internal::AstStringConstants"* %0, i64 0, i32 35
  store %"class.v8::internal::AstRawString"* %1061, %"class.v8::internal::AstRawString"** %1067, align 8
  %1068 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %1, i64 0, i32 0, i32 7, i32 0, i64 374
  %1069 = inttoptr i64 %1060 to i64**
  store i64* %1068, i64** %1069, align 8
  %1070 = bitcast %"class.v8::internal::AstRawString"** %36 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %1070) #15
  %1071 = bitcast %"class.v8::internal::AstRawString"** %1067 to i64*
  %1072 = load i64, i64* %1071, align 8
  %1073 = bitcast %"class.v8::internal::AstRawString"** %36 to i64*
  store i64 %1072, i64* %1073, align 8
  %1074 = inttoptr i64 %1072 to %"class.v8::internal::AstRawString"*
  %1075 = getelementptr inbounds %"class.v8::internal::AstRawString", %"class.v8::internal::AstRawString"* %1074, i64 0, i32 2
  %1076 = load i32, i32* %1075, align 8
  %1077 = lshr i32 %1076, 2
  %1078 = call %"struct.v8::base::TemplateHashMapEntry"* @_ZN2v84base19TemplateHashMapImplIPKNS_8internal12AstRawStringENS0_14NoHashMapValueENS2_22AstRawStringMapMatcherENS0_23DefaultAllocationPolicyEE9InsertNewERKS5_j(%"class.v8::base::TemplateHashMapImpl"* %61, %"class.v8::internal::AstRawString"** nonnull dereferenceable(8) %36, i32 %1077)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1070) #15
  %1079 = load i64, i64* %87, align 8
  %1080 = call i32 @_ZN2v88internal12StringHasher20HashSequentialStringIhEEjPKT_im(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.33, i64 0, i64 0), i32 4, i64 %1079)
  %1081 = load i64, i64* %89, align 8
  %1082 = load i64, i64* %91, align 8
  %1083 = sub i64 %1082, %1081
  %1084 = icmp ult i64 %1083, 32
  br i1 %1084, label %1085, label %1087, !prof !3

1085:                                             ; preds = %1059
  %1086 = call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %58, i64 32) #15
  br label %1089

1087:                                             ; preds = %1059
  %1088 = add i64 %1081, 32
  store i64 %1088, i64* %89, align 8
  br label %1089

1089:                                             ; preds = %1085, %1087
  %1090 = phi i64 [ %1086, %1085 ], [ %1081, %1087 ]
  %1091 = inttoptr i64 %1090 to %"class.v8::internal::AstRawString"*
  %1092 = getelementptr inbounds %"class.v8::internal::AstRawString", %"class.v8::internal::AstRawString"* %1091, i64 0, i32 0, i32 0
  store %"class.v8::internal::AstRawString"* null, %"class.v8::internal::AstRawString"** %1092, align 8
  %1093 = getelementptr inbounds %"class.v8::internal::AstRawString", %"class.v8::internal::AstRawString"* %1091, i64 0, i32 1, i32 0
  store i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.33, i64 0, i64 0), i8** %1093, align 8
  %1094 = getelementptr inbounds %"class.v8::internal::AstRawString", %"class.v8::internal::AstRawString"* %1091, i64 0, i32 1, i32 1
  store i64 4, i64* %1094, align 8
  %1095 = getelementptr inbounds %"class.v8::internal::AstRawString", %"class.v8::internal::AstRawString"* %1091, i64 0, i32 2
  store i32 %1080, i32* %1095, align 8
  %1096 = getelementptr inbounds %"class.v8::internal::AstRawString", %"class.v8::internal::AstRawString"* %1091, i64 0, i32 3
  store i8 1, i8* %1096, align 4
  %1097 = getelementptr inbounds %"class.v8::internal::AstStringConstants", %"class.v8::internal::AstStringConstants"* %0, i64 0, i32 36
  store %"class.v8::internal::AstRawString"* %1091, %"class.v8::internal::AstRawString"** %1097, align 8
  %1098 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %1, i64 0, i32 0, i32 7, i32 0, i64 378
  %1099 = inttoptr i64 %1090 to i64**
  store i64* %1098, i64** %1099, align 8
  %1100 = bitcast %"class.v8::internal::AstRawString"** %37 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %1100) #15
  %1101 = bitcast %"class.v8::internal::AstRawString"** %1097 to i64*
  %1102 = load i64, i64* %1101, align 8
  %1103 = bitcast %"class.v8::internal::AstRawString"** %37 to i64*
  store i64 %1102, i64* %1103, align 8
  %1104 = inttoptr i64 %1102 to %"class.v8::internal::AstRawString"*
  %1105 = getelementptr inbounds %"class.v8::internal::AstRawString", %"class.v8::internal::AstRawString"* %1104, i64 0, i32 2
  %1106 = load i32, i32* %1105, align 8
  %1107 = lshr i32 %1106, 2
  %1108 = call %"struct.v8::base::TemplateHashMapEntry"* @_ZN2v84base19TemplateHashMapImplIPKNS_8internal12AstRawStringENS0_14NoHashMapValueENS2_22AstRawStringMapMatcherENS0_23DefaultAllocationPolicyEE9InsertNewERKS5_j(%"class.v8::base::TemplateHashMapImpl"* %61, %"class.v8::internal::AstRawString"** nonnull dereferenceable(8) %37, i32 %1107)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1100) #15
  %1109 = load i64, i64* %87, align 8
  %1110 = call i32 @_ZN2v88internal12StringHasher20HashSequentialStringIhEEjPKT_im(i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.34, i64 0, i64 0), i32 6, i64 %1109)
  %1111 = load i64, i64* %89, align 8
  %1112 = load i64, i64* %91, align 8
  %1113 = sub i64 %1112, %1111
  %1114 = icmp ult i64 %1113, 32
  br i1 %1114, label %1115, label %1117, !prof !3

1115:                                             ; preds = %1089
  %1116 = call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %58, i64 32) #15
  br label %1119

1117:                                             ; preds = %1089
  %1118 = add i64 %1111, 32
  store i64 %1118, i64* %89, align 8
  br label %1119

1119:                                             ; preds = %1115, %1117
  %1120 = phi i64 [ %1116, %1115 ], [ %1111, %1117 ]
  %1121 = inttoptr i64 %1120 to %"class.v8::internal::AstRawString"*
  %1122 = getelementptr inbounds %"class.v8::internal::AstRawString", %"class.v8::internal::AstRawString"* %1121, i64 0, i32 0, i32 0
  store %"class.v8::internal::AstRawString"* null, %"class.v8::internal::AstRawString"** %1122, align 8
  %1123 = getelementptr inbounds %"class.v8::internal::AstRawString", %"class.v8::internal::AstRawString"* %1121, i64 0, i32 1, i32 0
  store i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.34, i64 0, i64 0), i8** %1123, align 8
  %1124 = getelementptr inbounds %"class.v8::internal::AstRawString", %"class.v8::internal::AstRawString"* %1121, i64 0, i32 1, i32 1
  store i64 6, i64* %1124, align 8
  %1125 = getelementptr inbounds %"class.v8::internal::AstRawString", %"class.v8::internal::AstRawString"* %1121, i64 0, i32 2
  store i32 %1110, i32* %1125, align 8
  %1126 = getelementptr inbounds %"class.v8::internal::AstRawString", %"class.v8::internal::AstRawString"* %1121, i64 0, i32 3
  store i8 1, i8* %1126, align 4
  %1127 = getelementptr inbounds %"class.v8::internal::AstStringConstants", %"class.v8::internal::AstStringConstants"* %0, i64 0, i32 37
  store %"class.v8::internal::AstRawString"* %1121, %"class.v8::internal::AstRawString"** %1127, align 8
  %1128 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %1, i64 0, i32 0, i32 7, i32 0, i64 381
  %1129 = inttoptr i64 %1120 to i64**
  store i64* %1128, i64** %1129, align 8
  %1130 = bitcast %"class.v8::internal::AstRawString"** %38 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %1130) #15
  %1131 = bitcast %"class.v8::internal::AstRawString"** %1127 to i64*
  %1132 = load i64, i64* %1131, align 8
  %1133 = bitcast %"class.v8::internal::AstRawString"** %38 to i64*
  store i64 %1132, i64* %1133, align 8
  %1134 = inttoptr i64 %1132 to %"class.v8::internal::AstRawString"*
  %1135 = getelementptr inbounds %"class.v8::internal::AstRawString", %"class.v8::internal::AstRawString"* %1134, i64 0, i32 2
  %1136 = load i32, i32* %1135, align 8
  %1137 = lshr i32 %1136, 2
  %1138 = call %"struct.v8::base::TemplateHashMapEntry"* @_ZN2v84base19TemplateHashMapImplIPKNS_8internal12AstRawStringENS0_14NoHashMapValueENS2_22AstRawStringMapMatcherENS0_23DefaultAllocationPolicyEE9InsertNewERKS5_j(%"class.v8::base::TemplateHashMapImpl"* %61, %"class.v8::internal::AstRawString"** nonnull dereferenceable(8) %38, i32 %1137)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1130) #15
  %1139 = load i64, i64* %87, align 8
  %1140 = call i32 @_ZN2v88internal12StringHasher20HashSequentialStringIhEEjPKT_im(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.35, i64 0, i64 0), i32 11, i64 %1139)
  %1141 = load i64, i64* %89, align 8
  %1142 = load i64, i64* %91, align 8
  %1143 = sub i64 %1142, %1141
  %1144 = icmp ult i64 %1143, 32
  br i1 %1144, label %1145, label %1147, !prof !3

1145:                                             ; preds = %1119
  %1146 = call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %58, i64 32) #15
  br label %1149

1147:                                             ; preds = %1119
  %1148 = add i64 %1141, 32
  store i64 %1148, i64* %89, align 8
  br label %1149

1149:                                             ; preds = %1145, %1147
  %1150 = phi i64 [ %1146, %1145 ], [ %1141, %1147 ]
  %1151 = inttoptr i64 %1150 to %"class.v8::internal::AstRawString"*
  %1152 = getelementptr inbounds %"class.v8::internal::AstRawString", %"class.v8::internal::AstRawString"* %1151, i64 0, i32 0, i32 0
  store %"class.v8::internal::AstRawString"* null, %"class.v8::internal::AstRawString"** %1152, align 8
  %1153 = getelementptr inbounds %"class.v8::internal::AstRawString", %"class.v8::internal::AstRawString"* %1151, i64 0, i32 1, i32 0
  store i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.35, i64 0, i64 0), i8** %1153, align 8
  %1154 = getelementptr inbounds %"class.v8::internal::AstRawString", %"class.v8::internal::AstRawString"* %1151, i64 0, i32 1, i32 1
  store i64 11, i64* %1154, align 8
  %1155 = getelementptr inbounds %"class.v8::internal::AstRawString", %"class.v8::internal::AstRawString"* %1151, i64 0, i32 2
  store i32 %1140, i32* %1155, align 8
  %1156 = getelementptr inbounds %"class.v8::internal::AstRawString", %"class.v8::internal::AstRawString"* %1151, i64 0, i32 3
  store i8 1, i8* %1156, align 4
  %1157 = getelementptr inbounds %"class.v8::internal::AstStringConstants", %"class.v8::internal::AstStringConstants"* %0, i64 0, i32 38
  store %"class.v8::internal::AstRawString"* %1151, %"class.v8::internal::AstRawString"** %1157, align 8
  %1158 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %1, i64 0, i32 0, i32 7, i32 0, i64 382
  %1159 = inttoptr i64 %1150 to i64**
  store i64* %1158, i64** %1159, align 8
  %1160 = bitcast %"class.v8::internal::AstRawString"** %39 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %1160) #15
  %1161 = bitcast %"class.v8::internal::AstRawString"** %1157 to i64*
  %1162 = load i64, i64* %1161, align 8
  %1163 = bitcast %"class.v8::internal::AstRawString"** %39 to i64*
  store i64 %1162, i64* %1163, align 8
  %1164 = inttoptr i64 %1162 to %"class.v8::internal::AstRawString"*
  %1165 = getelementptr inbounds %"class.v8::internal::AstRawString", %"class.v8::internal::AstRawString"* %1164, i64 0, i32 2
  %1166 = load i32, i32* %1165, align 8
  %1167 = lshr i32 %1166, 2
  %1168 = call %"struct.v8::base::TemplateHashMapEntry"* @_ZN2v84base19TemplateHashMapImplIPKNS_8internal12AstRawStringENS0_14NoHashMapValueENS2_22AstRawStringMapMatcherENS0_23DefaultAllocationPolicyEE9InsertNewERKS5_j(%"class.v8::base::TemplateHashMapImpl"* %61, %"class.v8::internal::AstRawString"** nonnull dereferenceable(8) %39, i32 %1167)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1160) #15
  %1169 = load i64, i64* %87, align 8
  %1170 = call i32 @_ZN2v88internal12StringHasher20HashSequentialStringIhEEjPKT_im(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.36, i64 0, i64 0), i32 4, i64 %1169)
  %1171 = load i64, i64* %89, align 8
  %1172 = load i64, i64* %91, align 8
  %1173 = sub i64 %1172, %1171
  %1174 = icmp ult i64 %1173, 32
  br i1 %1174, label %1175, label %1177, !prof !3

1175:                                             ; preds = %1149
  %1176 = call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %58, i64 32) #15
  br label %1179

1177:                                             ; preds = %1149
  %1178 = add i64 %1171, 32
  store i64 %1178, i64* %89, align 8
  br label %1179

1179:                                             ; preds = %1175, %1177
  %1180 = phi i64 [ %1176, %1175 ], [ %1171, %1177 ]
  %1181 = inttoptr i64 %1180 to %"class.v8::internal::AstRawString"*
  %1182 = getelementptr inbounds %"class.v8::internal::AstRawString", %"class.v8::internal::AstRawString"* %1181, i64 0, i32 0, i32 0
  store %"class.v8::internal::AstRawString"* null, %"class.v8::internal::AstRawString"** %1182, align 8
  %1183 = getelementptr inbounds %"class.v8::internal::AstRawString", %"class.v8::internal::AstRawString"* %1181, i64 0, i32 1, i32 0
  store i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.36, i64 0, i64 0), i8** %1183, align 8
  %1184 = getelementptr inbounds %"class.v8::internal::AstRawString", %"class.v8::internal::AstRawString"* %1181, i64 0, i32 1, i32 1
  store i64 4, i64* %1184, align 8
  %1185 = getelementptr inbounds %"class.v8::internal::AstRawString", %"class.v8::internal::AstRawString"* %1181, i64 0, i32 2
  store i32 %1170, i32* %1185, align 8
  %1186 = getelementptr inbounds %"class.v8::internal::AstRawString", %"class.v8::internal::AstRawString"* %1181, i64 0, i32 3
  store i8 1, i8* %1186, align 4
  %1187 = getelementptr inbounds %"class.v8::internal::AstStringConstants", %"class.v8::internal::AstStringConstants"* %0, i64 0, i32 39
  store %"class.v8::internal::AstRawString"* %1181, %"class.v8::internal::AstRawString"** %1187, align 8
  %1188 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %1, i64 0, i32 0, i32 7, i32 0, i64 383
  %1189 = inttoptr i64 %1180 to i64**
  store i64* %1188, i64** %1189, align 8
  %1190 = bitcast %"class.v8::internal::AstRawString"** %40 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %1190) #15
  %1191 = bitcast %"class.v8::internal::AstRawString"** %1187 to i64*
  %1192 = load i64, i64* %1191, align 8
  %1193 = bitcast %"class.v8::internal::AstRawString"** %40 to i64*
  store i64 %1192, i64* %1193, align 8
  %1194 = inttoptr i64 %1192 to %"class.v8::internal::AstRawString"*
  %1195 = getelementptr inbounds %"class.v8::internal::AstRawString", %"class.v8::internal::AstRawString"* %1194, i64 0, i32 2
  %1196 = load i32, i32* %1195, align 8
  %1197 = lshr i32 %1196, 2
  %1198 = call %"struct.v8::base::TemplateHashMapEntry"* @_ZN2v84base19TemplateHashMapImplIPKNS_8internal12AstRawStringENS0_14NoHashMapValueENS2_22AstRawStringMapMatcherENS0_23DefaultAllocationPolicyEE9InsertNewERKS5_j(%"class.v8::base::TemplateHashMapImpl"* %61, %"class.v8::internal::AstRawString"** nonnull dereferenceable(8) %40, i32 %1197)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1190) #15
  %1199 = load i64, i64* %87, align 8
  %1200 = call i32 @_ZN2v88internal12StringHasher20HashSequentialStringIhEEjPKT_im(i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.37, i64 0, i64 0), i32 6, i64 %1199)
  %1201 = load i64, i64* %89, align 8
  %1202 = load i64, i64* %91, align 8
  %1203 = sub i64 %1202, %1201
  %1204 = icmp ult i64 %1203, 32
  br i1 %1204, label %1205, label %1207, !prof !3

1205:                                             ; preds = %1179
  %1206 = call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %58, i64 32) #15
  br label %1209

1207:                                             ; preds = %1179
  %1208 = add i64 %1201, 32
  store i64 %1208, i64* %89, align 8
  br label %1209

1209:                                             ; preds = %1205, %1207
  %1210 = phi i64 [ %1206, %1205 ], [ %1201, %1207 ]
  %1211 = inttoptr i64 %1210 to %"class.v8::internal::AstRawString"*
  %1212 = getelementptr inbounds %"class.v8::internal::AstRawString", %"class.v8::internal::AstRawString"* %1211, i64 0, i32 0, i32 0
  store %"class.v8::internal::AstRawString"* null, %"class.v8::internal::AstRawString"** %1212, align 8
  %1213 = getelementptr inbounds %"class.v8::internal::AstRawString", %"class.v8::internal::AstRawString"* %1211, i64 0, i32 1, i32 0
  store i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.37, i64 0, i64 0), i8** %1213, align 8
  %1214 = getelementptr inbounds %"class.v8::internal::AstRawString", %"class.v8::internal::AstRawString"* %1211, i64 0, i32 1, i32 1
  store i64 6, i64* %1214, align 8
  %1215 = getelementptr inbounds %"class.v8::internal::AstRawString", %"class.v8::internal::AstRawString"* %1211, i64 0, i32 2
  store i32 %1200, i32* %1215, align 8
  %1216 = getelementptr inbounds %"class.v8::internal::AstRawString", %"class.v8::internal::AstRawString"* %1211, i64 0, i32 3
  store i8 1, i8* %1216, align 4
  %1217 = getelementptr inbounds %"class.v8::internal::AstStringConstants", %"class.v8::internal::AstStringConstants"* %0, i64 0, i32 40
  store %"class.v8::internal::AstRawString"* %1211, %"class.v8::internal::AstRawString"** %1217, align 8
  %1218 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %1, i64 0, i32 0, i32 7, i32 0, i64 392
  %1219 = inttoptr i64 %1210 to i64**
  store i64* %1218, i64** %1219, align 8
  %1220 = bitcast %"class.v8::internal::AstRawString"** %41 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %1220) #15
  %1221 = bitcast %"class.v8::internal::AstRawString"** %1217 to i64*
  %1222 = load i64, i64* %1221, align 8
  %1223 = bitcast %"class.v8::internal::AstRawString"** %41 to i64*
  store i64 %1222, i64* %1223, align 8
  %1224 = inttoptr i64 %1222 to %"class.v8::internal::AstRawString"*
  %1225 = getelementptr inbounds %"class.v8::internal::AstRawString", %"class.v8::internal::AstRawString"* %1224, i64 0, i32 2
  %1226 = load i32, i32* %1225, align 8
  %1227 = lshr i32 %1226, 2
  %1228 = call %"struct.v8::base::TemplateHashMapEntry"* @_ZN2v84base19TemplateHashMapImplIPKNS_8internal12AstRawStringENS0_14NoHashMapValueENS2_22AstRawStringMapMatcherENS0_23DefaultAllocationPolicyEE9InsertNewERKS5_j(%"class.v8::base::TemplateHashMapImpl"* %61, %"class.v8::internal::AstRawString"** nonnull dereferenceable(8) %41, i32 %1227)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1220) #15
  %1229 = load i64, i64* %87, align 8
  %1230 = call i32 @_ZN2v88internal12StringHasher20HashSequentialStringIhEEjPKT_im(i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.38, i64 0, i64 0), i32 6, i64 %1229)
  %1231 = load i64, i64* %89, align 8
  %1232 = load i64, i64* %91, align 8
  %1233 = sub i64 %1232, %1231
  %1234 = icmp ult i64 %1233, 32
  br i1 %1234, label %1235, label %1237, !prof !3

1235:                                             ; preds = %1209
  %1236 = call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %58, i64 32) #15
  br label %1239

1237:                                             ; preds = %1209
  %1238 = add i64 %1231, 32
  store i64 %1238, i64* %89, align 8
  br label %1239

1239:                                             ; preds = %1235, %1237
  %1240 = phi i64 [ %1236, %1235 ], [ %1231, %1237 ]
  %1241 = inttoptr i64 %1240 to %"class.v8::internal::AstRawString"*
  %1242 = getelementptr inbounds %"class.v8::internal::AstRawString", %"class.v8::internal::AstRawString"* %1241, i64 0, i32 0, i32 0
  store %"class.v8::internal::AstRawString"* null, %"class.v8::internal::AstRawString"** %1242, align 8
  %1243 = getelementptr inbounds %"class.v8::internal::AstRawString", %"class.v8::internal::AstRawString"* %1241, i64 0, i32 1, i32 0
  store i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.38, i64 0, i64 0), i8** %1243, align 8
  %1244 = getelementptr inbounds %"class.v8::internal::AstRawString", %"class.v8::internal::AstRawString"* %1241, i64 0, i32 1, i32 1
  store i64 6, i64* %1244, align 8
  %1245 = getelementptr inbounds %"class.v8::internal::AstRawString", %"class.v8::internal::AstRawString"* %1241, i64 0, i32 2
  store i32 %1230, i32* %1245, align 8
  %1246 = getelementptr inbounds %"class.v8::internal::AstRawString", %"class.v8::internal::AstRawString"* %1241, i64 0, i32 3
  store i8 1, i8* %1246, align 4
  %1247 = getelementptr inbounds %"class.v8::internal::AstStringConstants", %"class.v8::internal::AstStringConstants"* %0, i64 0, i32 41
  store %"class.v8::internal::AstRawString"* %1241, %"class.v8::internal::AstRawString"** %1247, align 8
  %1248 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %1, i64 0, i32 0, i32 7, i32 0, i64 395
  %1249 = inttoptr i64 %1240 to i64**
  store i64* %1248, i64** %1249, align 8
  %1250 = bitcast %"class.v8::internal::AstRawString"** %42 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %1250) #15
  %1251 = bitcast %"class.v8::internal::AstRawString"** %1247 to i64*
  %1252 = load i64, i64* %1251, align 8
  %1253 = bitcast %"class.v8::internal::AstRawString"** %42 to i64*
  store i64 %1252, i64* %1253, align 8
  %1254 = inttoptr i64 %1252 to %"class.v8::internal::AstRawString"*
  %1255 = getelementptr inbounds %"class.v8::internal::AstRawString", %"class.v8::internal::AstRawString"* %1254, i64 0, i32 2
  %1256 = load i32, i32* %1255, align 8
  %1257 = lshr i32 %1256, 2
  %1258 = call %"struct.v8::base::TemplateHashMapEntry"* @_ZN2v84base19TemplateHashMapImplIPKNS_8internal12AstRawStringENS0_14NoHashMapValueENS2_22AstRawStringMapMatcherENS0_23DefaultAllocationPolicyEE9InsertNewERKS5_j(%"class.v8::base::TemplateHashMapImpl"* %61, %"class.v8::internal::AstRawString"** nonnull dereferenceable(8) %42, i32 %1257)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1250) #15
  %1259 = load i64, i64* %87, align 8
  %1260 = call i32 @_ZN2v88internal12StringHasher20HashSequentialStringIhEEjPKT_im(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.39, i64 0, i64 0), i32 2, i64 %1259)
  %1261 = load i64, i64* %89, align 8
  %1262 = load i64, i64* %91, align 8
  %1263 = sub i64 %1262, %1261
  %1264 = icmp ult i64 %1263, 32
  br i1 %1264, label %1265, label %1267, !prof !3

1265:                                             ; preds = %1239
  %1266 = call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %58, i64 32) #15
  br label %1269

1267:                                             ; preds = %1239
  %1268 = add i64 %1261, 32
  store i64 %1268, i64* %89, align 8
  br label %1269

1269:                                             ; preds = %1265, %1267
  %1270 = phi i64 [ %1266, %1265 ], [ %1261, %1267 ]
  %1271 = inttoptr i64 %1270 to %"class.v8::internal::AstRawString"*
  %1272 = getelementptr inbounds %"class.v8::internal::AstRawString", %"class.v8::internal::AstRawString"* %1271, i64 0, i32 0, i32 0
  store %"class.v8::internal::AstRawString"* null, %"class.v8::internal::AstRawString"** %1272, align 8
  %1273 = getelementptr inbounds %"class.v8::internal::AstRawString", %"class.v8::internal::AstRawString"* %1271, i64 0, i32 1, i32 0
  store i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.39, i64 0, i64 0), i8** %1273, align 8
  %1274 = getelementptr inbounds %"class.v8::internal::AstRawString", %"class.v8::internal::AstRawString"* %1271, i64 0, i32 1, i32 1
  store i64 2, i64* %1274, align 8
  %1275 = getelementptr inbounds %"class.v8::internal::AstRawString", %"class.v8::internal::AstRawString"* %1271, i64 0, i32 2
  store i32 %1260, i32* %1275, align 8
  %1276 = getelementptr inbounds %"class.v8::internal::AstRawString", %"class.v8::internal::AstRawString"* %1271, i64 0, i32 3
  store i8 1, i8* %1276, align 4
  %1277 = getelementptr inbounds %"class.v8::internal::AstStringConstants", %"class.v8::internal::AstStringConstants"* %0, i64 0, i32 42
  store %"class.v8::internal::AstRawString"* %1271, %"class.v8::internal::AstRawString"** %1277, align 8
  %1278 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %1, i64 0, i32 0, i32 7, i32 0, i64 397
  %1279 = inttoptr i64 %1270 to i64**
  store i64* %1278, i64** %1279, align 8
  %1280 = bitcast %"class.v8::internal::AstRawString"** %43 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %1280) #15
  %1281 = bitcast %"class.v8::internal::AstRawString"** %1277 to i64*
  %1282 = load i64, i64* %1281, align 8
  %1283 = bitcast %"class.v8::internal::AstRawString"** %43 to i64*
  store i64 %1282, i64* %1283, align 8
  %1284 = inttoptr i64 %1282 to %"class.v8::internal::AstRawString"*
  %1285 = getelementptr inbounds %"class.v8::internal::AstRawString", %"class.v8::internal::AstRawString"* %1284, i64 0, i32 2
  %1286 = load i32, i32* %1285, align 8
  %1287 = lshr i32 %1286, 2
  %1288 = call %"struct.v8::base::TemplateHashMapEntry"* @_ZN2v84base19TemplateHashMapImplIPKNS_8internal12AstRawStringENS0_14NoHashMapValueENS2_22AstRawStringMapMatcherENS0_23DefaultAllocationPolicyEE9InsertNewERKS5_j(%"class.v8::base::TemplateHashMapImpl"* %61, %"class.v8::internal::AstRawString"** nonnull dereferenceable(8) %43, i32 %1287)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1280) #15
  %1289 = load i64, i64* %87, align 8
  %1290 = call i32 @_ZN2v88internal12StringHasher20HashSequentialStringIhEEjPKT_im(i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.40, i64 0, i64 0), i32 12, i64 %1289)
  %1291 = load i64, i64* %89, align 8
  %1292 = load i64, i64* %91, align 8
  %1293 = sub i64 %1292, %1291
  %1294 = icmp ult i64 %1293, 32
  br i1 %1294, label %1295, label %1297, !prof !3

1295:                                             ; preds = %1269
  %1296 = call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %58, i64 32) #15
  br label %1299

1297:                                             ; preds = %1269
  %1298 = add i64 %1291, 32
  store i64 %1298, i64* %89, align 8
  br label %1299

1299:                                             ; preds = %1295, %1297
  %1300 = phi i64 [ %1296, %1295 ], [ %1291, %1297 ]
  %1301 = inttoptr i64 %1300 to %"class.v8::internal::AstRawString"*
  %1302 = getelementptr inbounds %"class.v8::internal::AstRawString", %"class.v8::internal::AstRawString"* %1301, i64 0, i32 0, i32 0
  store %"class.v8::internal::AstRawString"* null, %"class.v8::internal::AstRawString"** %1302, align 8
  %1303 = getelementptr inbounds %"class.v8::internal::AstRawString", %"class.v8::internal::AstRawString"* %1301, i64 0, i32 1, i32 0
  store i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.40, i64 0, i64 0), i8** %1303, align 8
  %1304 = getelementptr inbounds %"class.v8::internal::AstRawString", %"class.v8::internal::AstRawString"* %1301, i64 0, i32 1, i32 1
  store i64 12, i64* %1304, align 8
  %1305 = getelementptr inbounds %"class.v8::internal::AstRawString", %"class.v8::internal::AstRawString"* %1301, i64 0, i32 2
  store i32 %1290, i32* %1305, align 8
  %1306 = getelementptr inbounds %"class.v8::internal::AstRawString", %"class.v8::internal::AstRawString"* %1301, i64 0, i32 3
  store i8 1, i8* %1306, align 4
  %1307 = getelementptr inbounds %"class.v8::internal::AstStringConstants", %"class.v8::internal::AstStringConstants"* %0, i64 0, i32 43
  store %"class.v8::internal::AstRawString"* %1301, %"class.v8::internal::AstRawString"** %1307, align 8
  %1308 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %1, i64 0, i32 0, i32 7, i32 0, i64 405
  %1309 = inttoptr i64 %1300 to i64**
  store i64* %1308, i64** %1309, align 8
  %1310 = bitcast %"class.v8::internal::AstRawString"** %44 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %1310) #15
  %1311 = bitcast %"class.v8::internal::AstRawString"** %1307 to i64*
  %1312 = load i64, i64* %1311, align 8
  %1313 = bitcast %"class.v8::internal::AstRawString"** %44 to i64*
  store i64 %1312, i64* %1313, align 8
  %1314 = inttoptr i64 %1312 to %"class.v8::internal::AstRawString"*
  %1315 = getelementptr inbounds %"class.v8::internal::AstRawString", %"class.v8::internal::AstRawString"* %1314, i64 0, i32 2
  %1316 = load i32, i32* %1315, align 8
  %1317 = lshr i32 %1316, 2
  %1318 = call %"struct.v8::base::TemplateHashMapEntry"* @_ZN2v84base19TemplateHashMapImplIPKNS_8internal12AstRawStringENS0_14NoHashMapValueENS2_22AstRawStringMapMatcherENS0_23DefaultAllocationPolicyEE9InsertNewERKS5_j(%"class.v8::base::TemplateHashMapImpl"* %61, %"class.v8::internal::AstRawString"** nonnull dereferenceable(8) %44, i32 %1317)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1310) #15
  %1319 = load i64, i64* %87, align 8
  %1320 = call i32 @_ZN2v88internal12StringHasher20HashSequentialStringIhEEjPKT_im(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.41, i64 0, i64 0), i32 9, i64 %1319)
  %1321 = load i64, i64* %89, align 8
  %1322 = load i64, i64* %91, align 8
  %1323 = sub i64 %1322, %1321
  %1324 = icmp ult i64 %1323, 32
  br i1 %1324, label %1325, label %1327, !prof !3

1325:                                             ; preds = %1299
  %1326 = call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %58, i64 32) #15
  br label %1329

1327:                                             ; preds = %1299
  %1328 = add i64 %1321, 32
  store i64 %1328, i64* %89, align 8
  br label %1329

1329:                                             ; preds = %1325, %1327
  %1330 = phi i64 [ %1326, %1325 ], [ %1321, %1327 ]
  %1331 = inttoptr i64 %1330 to %"class.v8::internal::AstRawString"*
  %1332 = getelementptr inbounds %"class.v8::internal::AstRawString", %"class.v8::internal::AstRawString"* %1331, i64 0, i32 0, i32 0
  store %"class.v8::internal::AstRawString"* null, %"class.v8::internal::AstRawString"** %1332, align 8
  %1333 = getelementptr inbounds %"class.v8::internal::AstRawString", %"class.v8::internal::AstRawString"* %1331, i64 0, i32 1, i32 0
  store i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.41, i64 0, i64 0), i8** %1333, align 8
  %1334 = getelementptr inbounds %"class.v8::internal::AstRawString", %"class.v8::internal::AstRawString"* %1331, i64 0, i32 1, i32 1
  store i64 9, i64* %1334, align 8
  %1335 = getelementptr inbounds %"class.v8::internal::AstRawString", %"class.v8::internal::AstRawString"* %1331, i64 0, i32 2
  store i32 %1320, i32* %1335, align 8
  %1336 = getelementptr inbounds %"class.v8::internal::AstRawString", %"class.v8::internal::AstRawString"* %1331, i64 0, i32 3
  store i8 1, i8* %1336, align 4
  %1337 = getelementptr inbounds %"class.v8::internal::AstStringConstants", %"class.v8::internal::AstStringConstants"* %0, i64 0, i32 44
  store %"class.v8::internal::AstRawString"* %1331, %"class.v8::internal::AstRawString"** %1337, align 8
  %1338 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %1, i64 0, i32 0, i32 7, i32 0, i64 407
  %1339 = inttoptr i64 %1330 to i64**
  store i64* %1338, i64** %1339, align 8
  %1340 = bitcast %"class.v8::internal::AstRawString"** %45 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %1340) #15
  %1341 = bitcast %"class.v8::internal::AstRawString"** %1337 to i64*
  %1342 = load i64, i64* %1341, align 8
  %1343 = bitcast %"class.v8::internal::AstRawString"** %45 to i64*
  store i64 %1342, i64* %1343, align 8
  %1344 = inttoptr i64 %1342 to %"class.v8::internal::AstRawString"*
  %1345 = getelementptr inbounds %"class.v8::internal::AstRawString", %"class.v8::internal::AstRawString"* %1344, i64 0, i32 2
  %1346 = load i32, i32* %1345, align 8
  %1347 = lshr i32 %1346, 2
  %1348 = call %"struct.v8::base::TemplateHashMapEntry"* @_ZN2v84base19TemplateHashMapImplIPKNS_8internal12AstRawStringENS0_14NoHashMapValueENS2_22AstRawStringMapMatcherENS0_23DefaultAllocationPolicyEE9InsertNewERKS5_j(%"class.v8::base::TemplateHashMapImpl"* %61, %"class.v8::internal::AstRawString"** nonnull dereferenceable(8) %45, i32 %1347)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1340) #15
  %1349 = load i64, i64* %87, align 8
  %1350 = call i32 @_ZN2v88internal12StringHasher20HashSequentialStringIhEEjPKT_im(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.42, i64 0, i64 0), i32 9, i64 %1349)
  %1351 = load i64, i64* %89, align 8
  %1352 = load i64, i64* %91, align 8
  %1353 = sub i64 %1352, %1351
  %1354 = icmp ult i64 %1353, 32
  br i1 %1354, label %1355, label %1357, !prof !3

1355:                                             ; preds = %1329
  %1356 = call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %58, i64 32) #15
  br label %1359

1357:                                             ; preds = %1329
  %1358 = add i64 %1351, 32
  store i64 %1358, i64* %89, align 8
  br label %1359

1359:                                             ; preds = %1355, %1357
  %1360 = phi i64 [ %1356, %1355 ], [ %1351, %1357 ]
  %1361 = inttoptr i64 %1360 to %"class.v8::internal::AstRawString"*
  %1362 = getelementptr inbounds %"class.v8::internal::AstRawString", %"class.v8::internal::AstRawString"* %1361, i64 0, i32 0, i32 0
  store %"class.v8::internal::AstRawString"* null, %"class.v8::internal::AstRawString"** %1362, align 8
  %1363 = getelementptr inbounds %"class.v8::internal::AstRawString", %"class.v8::internal::AstRawString"* %1361, i64 0, i32 1, i32 0
  store i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.42, i64 0, i64 0), i8** %1363, align 8
  %1364 = getelementptr inbounds %"class.v8::internal::AstRawString", %"class.v8::internal::AstRawString"* %1361, i64 0, i32 1, i32 1
  store i64 9, i64* %1364, align 8
  %1365 = getelementptr inbounds %"class.v8::internal::AstRawString", %"class.v8::internal::AstRawString"* %1361, i64 0, i32 2
  store i32 %1350, i32* %1365, align 8
  %1366 = getelementptr inbounds %"class.v8::internal::AstRawString", %"class.v8::internal::AstRawString"* %1361, i64 0, i32 3
  store i8 1, i8* %1366, align 4
  %1367 = getelementptr inbounds %"class.v8::internal::AstStringConstants", %"class.v8::internal::AstStringConstants"* %0, i64 0, i32 45
  store %"class.v8::internal::AstRawString"* %1361, %"class.v8::internal::AstRawString"** %1367, align 8
  %1368 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %1, i64 0, i32 0, i32 7, i32 0, i64 408
  %1369 = inttoptr i64 %1360 to i64**
  store i64* %1368, i64** %1369, align 8
  %1370 = bitcast %"class.v8::internal::AstRawString"** %46 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %1370) #15
  %1371 = bitcast %"class.v8::internal::AstRawString"** %1367 to i64*
  %1372 = load i64, i64* %1371, align 8
  %1373 = bitcast %"class.v8::internal::AstRawString"** %46 to i64*
  store i64 %1372, i64* %1373, align 8
  %1374 = inttoptr i64 %1372 to %"class.v8::internal::AstRawString"*
  %1375 = getelementptr inbounds %"class.v8::internal::AstRawString", %"class.v8::internal::AstRawString"* %1374, i64 0, i32 2
  %1376 = load i32, i32* %1375, align 8
  %1377 = lshr i32 %1376, 2
  %1378 = call %"struct.v8::base::TemplateHashMapEntry"* @_ZN2v84base19TemplateHashMapImplIPKNS_8internal12AstRawStringENS0_14NoHashMapValueENS2_22AstRawStringMapMatcherENS0_23DefaultAllocationPolicyEE9InsertNewERKS5_j(%"class.v8::base::TemplateHashMapImpl"* %61, %"class.v8::internal::AstRawString"** nonnull dereferenceable(8) %46, i32 %1377)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1370) #15
  %1379 = load i64, i64* %87, align 8
  %1380 = call i32 @_ZN2v88internal12StringHasher20HashSequentialStringIhEEjPKT_im(i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.43, i64 0, i64 0), i32 6, i64 %1379)
  %1381 = load i64, i64* %89, align 8
  %1382 = load i64, i64* %91, align 8
  %1383 = sub i64 %1382, %1381
  %1384 = icmp ult i64 %1383, 32
  br i1 %1384, label %1385, label %1387, !prof !3

1385:                                             ; preds = %1359
  %1386 = call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %58, i64 32) #15
  br label %1389

1387:                                             ; preds = %1359
  %1388 = add i64 %1381, 32
  store i64 %1388, i64* %89, align 8
  br label %1389

1389:                                             ; preds = %1385, %1387
  %1390 = phi i64 [ %1386, %1385 ], [ %1381, %1387 ]
  %1391 = inttoptr i64 %1390 to %"class.v8::internal::AstRawString"*
  %1392 = getelementptr inbounds %"class.v8::internal::AstRawString", %"class.v8::internal::AstRawString"* %1391, i64 0, i32 0, i32 0
  store %"class.v8::internal::AstRawString"* null, %"class.v8::internal::AstRawString"** %1392, align 8
  %1393 = getelementptr inbounds %"class.v8::internal::AstRawString", %"class.v8::internal::AstRawString"* %1391, i64 0, i32 1, i32 0
  store i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.43, i64 0, i64 0), i8** %1393, align 8
  %1394 = getelementptr inbounds %"class.v8::internal::AstRawString", %"class.v8::internal::AstRawString"* %1391, i64 0, i32 1, i32 1
  store i64 6, i64* %1394, align 8
  %1395 = getelementptr inbounds %"class.v8::internal::AstRawString", %"class.v8::internal::AstRawString"* %1391, i64 0, i32 2
  store i32 %1380, i32* %1395, align 8
  %1396 = getelementptr inbounds %"class.v8::internal::AstRawString", %"class.v8::internal::AstRawString"* %1391, i64 0, i32 3
  store i8 1, i8* %1396, align 4
  %1397 = getelementptr inbounds %"class.v8::internal::AstStringConstants", %"class.v8::internal::AstStringConstants"* %0, i64 0, i32 46
  store %"class.v8::internal::AstRawString"* %1391, %"class.v8::internal::AstRawString"** %1397, align 8
  %1398 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %1, i64 0, i32 0, i32 7, i32 0, i64 421
  %1399 = inttoptr i64 %1390 to i64**
  store i64* %1398, i64** %1399, align 8
  %1400 = bitcast %"class.v8::internal::AstRawString"** %47 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %1400) #15
  %1401 = bitcast %"class.v8::internal::AstRawString"** %1397 to i64*
  %1402 = load i64, i64* %1401, align 8
  %1403 = bitcast %"class.v8::internal::AstRawString"** %47 to i64*
  store i64 %1402, i64* %1403, align 8
  %1404 = inttoptr i64 %1402 to %"class.v8::internal::AstRawString"*
  %1405 = getelementptr inbounds %"class.v8::internal::AstRawString", %"class.v8::internal::AstRawString"* %1404, i64 0, i32 2
  %1406 = load i32, i32* %1405, align 8
  %1407 = lshr i32 %1406, 2
  %1408 = call %"struct.v8::base::TemplateHashMapEntry"* @_ZN2v84base19TemplateHashMapImplIPKNS_8internal12AstRawStringENS0_14NoHashMapValueENS2_22AstRawStringMapMatcherENS0_23DefaultAllocationPolicyEE9InsertNewERKS5_j(%"class.v8::base::TemplateHashMapImpl"* %61, %"class.v8::internal::AstRawString"** nonnull dereferenceable(8) %47, i32 %1407)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1400) #15
  %1409 = load i64, i64* %87, align 8
  %1410 = call i32 @_ZN2v88internal12StringHasher20HashSequentialStringIhEEjPKT_im(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.44, i64 0, i64 0), i32 3, i64 %1409)
  %1411 = load i64, i64* %89, align 8
  %1412 = load i64, i64* %91, align 8
  %1413 = sub i64 %1412, %1411
  %1414 = icmp ult i64 %1413, 32
  br i1 %1414, label %1415, label %1417, !prof !3

1415:                                             ; preds = %1389
  %1416 = call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %58, i64 32) #15
  br label %1419

1417:                                             ; preds = %1389
  %1418 = add i64 %1411, 32
  store i64 %1418, i64* %89, align 8
  br label %1419

1419:                                             ; preds = %1415, %1417
  %1420 = phi i64 [ %1416, %1415 ], [ %1411, %1417 ]
  %1421 = inttoptr i64 %1420 to %"class.v8::internal::AstRawString"*
  %1422 = getelementptr inbounds %"class.v8::internal::AstRawString", %"class.v8::internal::AstRawString"* %1421, i64 0, i32 0, i32 0
  store %"class.v8::internal::AstRawString"* null, %"class.v8::internal::AstRawString"** %1422, align 8
  %1423 = getelementptr inbounds %"class.v8::internal::AstRawString", %"class.v8::internal::AstRawString"* %1421, i64 0, i32 1, i32 0
  store i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.44, i64 0, i64 0), i8** %1423, align 8
  %1424 = getelementptr inbounds %"class.v8::internal::AstRawString", %"class.v8::internal::AstRawString"* %1421, i64 0, i32 1, i32 1
  store i64 3, i64* %1424, align 8
  %1425 = getelementptr inbounds %"class.v8::internal::AstRawString", %"class.v8::internal::AstRawString"* %1421, i64 0, i32 2
  store i32 %1410, i32* %1425, align 8
  %1426 = getelementptr inbounds %"class.v8::internal::AstRawString", %"class.v8::internal::AstRawString"* %1421, i64 0, i32 3
  store i8 1, i8* %1426, align 4
  %1427 = getelementptr inbounds %"class.v8::internal::AstStringConstants", %"class.v8::internal::AstStringConstants"* %0, i64 0, i32 47
  store %"class.v8::internal::AstRawString"* %1421, %"class.v8::internal::AstRawString"** %1427, align 8
  %1428 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %1, i64 0, i32 0, i32 7, i32 0, i64 430
  %1429 = inttoptr i64 %1420 to i64**
  store i64* %1428, i64** %1429, align 8
  %1430 = bitcast %"class.v8::internal::AstRawString"** %48 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %1430) #15
  %1431 = bitcast %"class.v8::internal::AstRawString"** %1427 to i64*
  %1432 = load i64, i64* %1431, align 8
  %1433 = bitcast %"class.v8::internal::AstRawString"** %48 to i64*
  store i64 %1432, i64* %1433, align 8
  %1434 = inttoptr i64 %1432 to %"class.v8::internal::AstRawString"*
  %1435 = getelementptr inbounds %"class.v8::internal::AstRawString", %"class.v8::internal::AstRawString"* %1434, i64 0, i32 2
  %1436 = load i32, i32* %1435, align 8
  %1437 = lshr i32 %1436, 2
  %1438 = call %"struct.v8::base::TemplateHashMapEntry"* @_ZN2v84base19TemplateHashMapImplIPKNS_8internal12AstRawStringENS0_14NoHashMapValueENS2_22AstRawStringMapMatcherENS0_23DefaultAllocationPolicyEE9InsertNewERKS5_j(%"class.v8::base::TemplateHashMapImpl"* %61, %"class.v8::internal::AstRawString"** nonnull dereferenceable(8) %48, i32 %1437)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1430) #15
  %1439 = load i64, i64* %87, align 8
  %1440 = call i32 @_ZN2v88internal12StringHasher20HashSequentialStringIhEEjPKT_im(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.45, i64 0, i64 0), i32 4, i64 %1439)
  %1441 = load i64, i64* %89, align 8
  %1442 = load i64, i64* %91, align 8
  %1443 = sub i64 %1442, %1441
  %1444 = icmp ult i64 %1443, 32
  br i1 %1444, label %1445, label %1447, !prof !3

1445:                                             ; preds = %1419
  %1446 = call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %58, i64 32) #15
  br label %1449

1447:                                             ; preds = %1419
  %1448 = add i64 %1441, 32
  store i64 %1448, i64* %89, align 8
  br label %1449

1449:                                             ; preds = %1445, %1447
  %1450 = phi i64 [ %1446, %1445 ], [ %1441, %1447 ]
  %1451 = inttoptr i64 %1450 to %"class.v8::internal::AstRawString"*
  %1452 = getelementptr inbounds %"class.v8::internal::AstRawString", %"class.v8::internal::AstRawString"* %1451, i64 0, i32 0, i32 0
  store %"class.v8::internal::AstRawString"* null, %"class.v8::internal::AstRawString"** %1452, align 8
  %1453 = getelementptr inbounds %"class.v8::internal::AstRawString", %"class.v8::internal::AstRawString"* %1451, i64 0, i32 1, i32 0
  store i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.45, i64 0, i64 0), i8** %1453, align 8
  %1454 = getelementptr inbounds %"class.v8::internal::AstRawString", %"class.v8::internal::AstRawString"* %1451, i64 0, i32 1, i32 1
  store i64 4, i64* %1454, align 8
  %1455 = getelementptr inbounds %"class.v8::internal::AstRawString", %"class.v8::internal::AstRawString"* %1451, i64 0, i32 2
  store i32 %1440, i32* %1455, align 8
  %1456 = getelementptr inbounds %"class.v8::internal::AstRawString", %"class.v8::internal::AstRawString"* %1451, i64 0, i32 3
  store i8 1, i8* %1456, align 4
  %1457 = getelementptr inbounds %"class.v8::internal::AstStringConstants", %"class.v8::internal::AstStringConstants"* %0, i64 0, i32 48
  store %"class.v8::internal::AstRawString"* %1451, %"class.v8::internal::AstRawString"** %1457, align 8
  %1458 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %1, i64 0, i32 0, i32 7, i32 0, i64 429
  %1459 = inttoptr i64 %1450 to i64**
  store i64* %1458, i64** %1459, align 8
  %1460 = bitcast %"class.v8::internal::AstRawString"** %49 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %1460) #15
  %1461 = bitcast %"class.v8::internal::AstRawString"** %1457 to i64*
  %1462 = load i64, i64* %1461, align 8
  %1463 = bitcast %"class.v8::internal::AstRawString"** %49 to i64*
  store i64 %1462, i64* %1463, align 8
  %1464 = inttoptr i64 %1462 to %"class.v8::internal::AstRawString"*
  %1465 = getelementptr inbounds %"class.v8::internal::AstRawString", %"class.v8::internal::AstRawString"* %1464, i64 0, i32 2
  %1466 = load i32, i32* %1465, align 8
  %1467 = lshr i32 %1466, 2
  %1468 = call %"struct.v8::base::TemplateHashMapEntry"* @_ZN2v84base19TemplateHashMapImplIPKNS_8internal12AstRawStringENS0_14NoHashMapValueENS2_22AstRawStringMapMatcherENS0_23DefaultAllocationPolicyEE9InsertNewERKS5_j(%"class.v8::base::TemplateHashMapImpl"* %61, %"class.v8::internal::AstRawString"** nonnull dereferenceable(8) %49, i32 %1467)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1460) #15
  %1469 = load i64, i64* %87, align 8
  %1470 = call i32 @_ZN2v88internal12StringHasher20HashSequentialStringIhEEjPKT_im(i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.46, i64 0, i64 0), i32 6, i64 %1469)
  %1471 = load i64, i64* %89, align 8
  %1472 = load i64, i64* %91, align 8
  %1473 = sub i64 %1472, %1471
  %1474 = icmp ult i64 %1473, 32
  br i1 %1474, label %1475, label %1477, !prof !3

1475:                                             ; preds = %1449
  %1476 = call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %58, i64 32) #15
  br label %1479

1477:                                             ; preds = %1449
  %1478 = add i64 %1471, 32
  store i64 %1478, i64* %89, align 8
  br label %1479

1479:                                             ; preds = %1475, %1477
  %1480 = phi i64 [ %1476, %1475 ], [ %1471, %1477 ]
  %1481 = inttoptr i64 %1480 to %"class.v8::internal::AstRawString"*
  %1482 = getelementptr inbounds %"class.v8::internal::AstRawString", %"class.v8::internal::AstRawString"* %1481, i64 0, i32 0, i32 0
  store %"class.v8::internal::AstRawString"* null, %"class.v8::internal::AstRawString"** %1482, align 8
  %1483 = getelementptr inbounds %"class.v8::internal::AstRawString", %"class.v8::internal::AstRawString"* %1481, i64 0, i32 1, i32 0
  store i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.46, i64 0, i64 0), i8** %1483, align 8
  %1484 = getelementptr inbounds %"class.v8::internal::AstRawString", %"class.v8::internal::AstRawString"* %1481, i64 0, i32 1, i32 1
  store i64 6, i64* %1484, align 8
  %1485 = getelementptr inbounds %"class.v8::internal::AstRawString", %"class.v8::internal::AstRawString"* %1481, i64 0, i32 2
  store i32 %1470, i32* %1485, align 8
  %1486 = getelementptr inbounds %"class.v8::internal::AstRawString", %"class.v8::internal::AstRawString"* %1481, i64 0, i32 3
  store i8 1, i8* %1486, align 4
  %1487 = getelementptr inbounds %"class.v8::internal::AstStringConstants", %"class.v8::internal::AstStringConstants"* %0, i64 0, i32 49
  store %"class.v8::internal::AstRawString"* %1481, %"class.v8::internal::AstRawString"** %1487, align 8
  %1488 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %1, i64 0, i32 0, i32 7, i32 0, i64 440
  %1489 = inttoptr i64 %1480 to i64**
  store i64* %1488, i64** %1489, align 8
  %1490 = bitcast %"class.v8::internal::AstRawString"** %50 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %1490) #15
  %1491 = bitcast %"class.v8::internal::AstRawString"** %1487 to i64*
  %1492 = load i64, i64* %1491, align 8
  %1493 = bitcast %"class.v8::internal::AstRawString"** %50 to i64*
  store i64 %1492, i64* %1493, align 8
  %1494 = inttoptr i64 %1492 to %"class.v8::internal::AstRawString"*
  %1495 = getelementptr inbounds %"class.v8::internal::AstRawString", %"class.v8::internal::AstRawString"* %1494, i64 0, i32 2
  %1496 = load i32, i32* %1495, align 8
  %1497 = lshr i32 %1496, 2
  %1498 = call %"struct.v8::base::TemplateHashMapEntry"* @_ZN2v84base19TemplateHashMapImplIPKNS_8internal12AstRawStringENS0_14NoHashMapValueENS2_22AstRawStringMapMatcherENS0_23DefaultAllocationPolicyEE9InsertNewERKS5_j(%"class.v8::base::TemplateHashMapImpl"* %61, %"class.v8::internal::AstRawString"** nonnull dereferenceable(8) %50, i32 %1497)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1490) #15
  %1499 = load i64, i64* %87, align 8
  %1500 = call i32 @_ZN2v88internal12StringHasher20HashSequentialStringIhEEjPKT_im(i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.47, i64 0, i64 0), i32 6, i64 %1499)
  %1501 = load i64, i64* %89, align 8
  %1502 = load i64, i64* %91, align 8
  %1503 = sub i64 %1502, %1501
  %1504 = icmp ult i64 %1503, 32
  br i1 %1504, label %1505, label %1507, !prof !3

1505:                                             ; preds = %1479
  %1506 = call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %58, i64 32) #15
  br label %1509

1507:                                             ; preds = %1479
  %1508 = add i64 %1501, 32
  store i64 %1508, i64* %89, align 8
  br label %1509

1509:                                             ; preds = %1505, %1507
  %1510 = phi i64 [ %1506, %1505 ], [ %1501, %1507 ]
  %1511 = inttoptr i64 %1510 to %"class.v8::internal::AstRawString"*
  %1512 = getelementptr inbounds %"class.v8::internal::AstRawString", %"class.v8::internal::AstRawString"* %1511, i64 0, i32 0, i32 0
  store %"class.v8::internal::AstRawString"* null, %"class.v8::internal::AstRawString"** %1512, align 8
  %1513 = getelementptr inbounds %"class.v8::internal::AstRawString", %"class.v8::internal::AstRawString"* %1511, i64 0, i32 1, i32 0
  store i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.47, i64 0, i64 0), i8** %1513, align 8
  %1514 = getelementptr inbounds %"class.v8::internal::AstRawString", %"class.v8::internal::AstRawString"* %1511, i64 0, i32 1, i32 1
  store i64 6, i64* %1514, align 8
  %1515 = getelementptr inbounds %"class.v8::internal::AstRawString", %"class.v8::internal::AstRawString"* %1511, i64 0, i32 2
  store i32 %1500, i32* %1515, align 8
  %1516 = getelementptr inbounds %"class.v8::internal::AstRawString", %"class.v8::internal::AstRawString"* %1511, i64 0, i32 3
  store i8 1, i8* %1516, align 4
  %1517 = getelementptr inbounds %"class.v8::internal::AstStringConstants", %"class.v8::internal::AstStringConstants"* %0, i64 0, i32 50
  store %"class.v8::internal::AstRawString"* %1511, %"class.v8::internal::AstRawString"** %1517, align 8
  %1518 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %1, i64 0, i32 0, i32 7, i32 0, i64 444
  %1519 = inttoptr i64 %1510 to i64**
  store i64* %1518, i64** %1519, align 8
  %1520 = bitcast %"class.v8::internal::AstRawString"** %51 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %1520) #15
  %1521 = bitcast %"class.v8::internal::AstRawString"** %1517 to i64*
  %1522 = load i64, i64* %1521, align 8
  %1523 = bitcast %"class.v8::internal::AstRawString"** %51 to i64*
  store i64 %1522, i64* %1523, align 8
  %1524 = inttoptr i64 %1522 to %"class.v8::internal::AstRawString"*
  %1525 = getelementptr inbounds %"class.v8::internal::AstRawString", %"class.v8::internal::AstRawString"* %1524, i64 0, i32 2
  %1526 = load i32, i32* %1525, align 8
  %1527 = lshr i32 %1526, 2
  %1528 = call %"struct.v8::base::TemplateHashMapEntry"* @_ZN2v84base19TemplateHashMapImplIPKNS_8internal12AstRawStringENS0_14NoHashMapValueENS2_22AstRawStringMapMatcherENS0_23DefaultAllocationPolicyEE9InsertNewERKS5_j(%"class.v8::base::TemplateHashMapImpl"* %61, %"class.v8::internal::AstRawString"** nonnull dereferenceable(8) %51, i32 %1527)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1520) #15
  %1529 = load i64, i64* %87, align 8
  %1530 = call i32 @_ZN2v88internal12StringHasher20HashSequentialStringIhEEjPKT_im(i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.48, i64 0, i64 0), i32 6, i64 %1529)
  %1531 = load i64, i64* %89, align 8
  %1532 = load i64, i64* %91, align 8
  %1533 = sub i64 %1532, %1531
  %1534 = icmp ult i64 %1533, 32
  br i1 %1534, label %1535, label %1537, !prof !3

1535:                                             ; preds = %1509
  %1536 = call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %58, i64 32) #15
  br label %1539

1537:                                             ; preds = %1509
  %1538 = add i64 %1531, 32
  store i64 %1538, i64* %89, align 8
  br label %1539

1539:                                             ; preds = %1535, %1537
  %1540 = phi i64 [ %1536, %1535 ], [ %1531, %1537 ]
  %1541 = inttoptr i64 %1540 to %"class.v8::internal::AstRawString"*
  %1542 = getelementptr inbounds %"class.v8::internal::AstRawString", %"class.v8::internal::AstRawString"* %1541, i64 0, i32 0, i32 0
  store %"class.v8::internal::AstRawString"* null, %"class.v8::internal::AstRawString"** %1542, align 8
  %1543 = getelementptr inbounds %"class.v8::internal::AstRawString", %"class.v8::internal::AstRawString"* %1541, i64 0, i32 1, i32 0
  store i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.48, i64 0, i64 0), i8** %1543, align 8
  %1544 = getelementptr inbounds %"class.v8::internal::AstRawString", %"class.v8::internal::AstRawString"* %1541, i64 0, i32 1, i32 1
  store i64 6, i64* %1544, align 8
  %1545 = getelementptr inbounds %"class.v8::internal::AstRawString", %"class.v8::internal::AstRawString"* %1541, i64 0, i32 2
  store i32 %1530, i32* %1545, align 8
  %1546 = getelementptr inbounds %"class.v8::internal::AstRawString", %"class.v8::internal::AstRawString"* %1541, i64 0, i32 3
  store i8 1, i8* %1546, align 4
  %1547 = getelementptr inbounds %"class.v8::internal::AstStringConstants", %"class.v8::internal::AstStringConstants"* %0, i64 0, i32 51
  store %"class.v8::internal::AstRawString"* %1541, %"class.v8::internal::AstRawString"** %1547, align 8
  %1548 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %1, i64 0, i32 0, i32 7, i32 0, i64 446
  %1549 = inttoptr i64 %1540 to i64**
  store i64* %1548, i64** %1549, align 8
  %1550 = bitcast %"class.v8::internal::AstRawString"** %52 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %1550) #15
  %1551 = bitcast %"class.v8::internal::AstRawString"** %1547 to i64*
  %1552 = load i64, i64* %1551, align 8
  %1553 = bitcast %"class.v8::internal::AstRawString"** %52 to i64*
  store i64 %1552, i64* %1553, align 8
  %1554 = inttoptr i64 %1552 to %"class.v8::internal::AstRawString"*
  %1555 = getelementptr inbounds %"class.v8::internal::AstRawString", %"class.v8::internal::AstRawString"* %1554, i64 0, i32 2
  %1556 = load i32, i32* %1555, align 8
  %1557 = lshr i32 %1556, 2
  %1558 = call %"struct.v8::base::TemplateHashMapEntry"* @_ZN2v84base19TemplateHashMapImplIPKNS_8internal12AstRawStringENS0_14NoHashMapValueENS2_22AstRawStringMapMatcherENS0_23DefaultAllocationPolicyEE9InsertNewERKS5_j(%"class.v8::base::TemplateHashMapImpl"* %61, %"class.v8::internal::AstRawString"** nonnull dereferenceable(8) %52, i32 %1557)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1550) #15
  %1559 = load i64, i64* %87, align 8
  %1560 = call i32 @_ZN2v88internal12StringHasher20HashSequentialStringIhEEjPKT_im(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.49, i64 0, i64 0), i32 4, i64 %1559)
  %1561 = load i64, i64* %89, align 8
  %1562 = load i64, i64* %91, align 8
  %1563 = sub i64 %1562, %1561
  %1564 = icmp ult i64 %1563, 32
  br i1 %1564, label %1565, label %1567, !prof !3

1565:                                             ; preds = %1539
  %1566 = call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %58, i64 32) #15
  br label %1569

1567:                                             ; preds = %1539
  %1568 = add i64 %1561, 32
  store i64 %1568, i64* %89, align 8
  br label %1569

1569:                                             ; preds = %1565, %1567
  %1570 = phi i64 [ %1566, %1565 ], [ %1561, %1567 ]
  %1571 = inttoptr i64 %1570 to %"class.v8::internal::AstRawString"*
  %1572 = getelementptr inbounds %"class.v8::internal::AstRawString", %"class.v8::internal::AstRawString"* %1571, i64 0, i32 0, i32 0
  store %"class.v8::internal::AstRawString"* null, %"class.v8::internal::AstRawString"** %1572, align 8
  %1573 = getelementptr inbounds %"class.v8::internal::AstRawString", %"class.v8::internal::AstRawString"* %1571, i64 0, i32 1, i32 0
  store i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.49, i64 0, i64 0), i8** %1573, align 8
  %1574 = getelementptr inbounds %"class.v8::internal::AstRawString", %"class.v8::internal::AstRawString"* %1571, i64 0, i32 1, i32 1
  store i64 4, i64* %1574, align 8
  %1575 = getelementptr inbounds %"class.v8::internal::AstRawString", %"class.v8::internal::AstRawString"* %1571, i64 0, i32 2
  store i32 %1560, i32* %1575, align 8
  %1576 = getelementptr inbounds %"class.v8::internal::AstRawString", %"class.v8::internal::AstRawString"* %1571, i64 0, i32 3
  store i8 1, i8* %1576, align 4
  %1577 = getelementptr inbounds %"class.v8::internal::AstStringConstants", %"class.v8::internal::AstStringConstants"* %0, i64 0, i32 52
  store %"class.v8::internal::AstRawString"* %1571, %"class.v8::internal::AstRawString"** %1577, align 8
  %1578 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %1, i64 0, i32 0, i32 7, i32 0, i64 449
  %1579 = inttoptr i64 %1570 to i64**
  store i64* %1578, i64** %1579, align 8
  %1580 = bitcast %"class.v8::internal::AstRawString"** %53 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %1580) #15
  %1581 = bitcast %"class.v8::internal::AstRawString"** %1577 to i64*
  %1582 = load i64, i64* %1581, align 8
  %1583 = bitcast %"class.v8::internal::AstRawString"** %53 to i64*
  store i64 %1582, i64* %1583, align 8
  %1584 = inttoptr i64 %1582 to %"class.v8::internal::AstRawString"*
  %1585 = getelementptr inbounds %"class.v8::internal::AstRawString", %"class.v8::internal::AstRawString"* %1584, i64 0, i32 2
  %1586 = load i32, i32* %1585, align 8
  %1587 = lshr i32 %1586, 2
  %1588 = call %"struct.v8::base::TemplateHashMapEntry"* @_ZN2v84base19TemplateHashMapImplIPKNS_8internal12AstRawStringENS0_14NoHashMapValueENS2_22AstRawStringMapMatcherENS0_23DefaultAllocationPolicyEE9InsertNewERKS5_j(%"class.v8::base::TemplateHashMapImpl"* %61, %"class.v8::internal::AstRawString"** nonnull dereferenceable(8) %53, i32 %1587)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1580) #15
  %1589 = load i64, i64* %87, align 8
  %1590 = call i32 @_ZN2v88internal12StringHasher20HashSequentialStringIhEEjPKT_im(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.50, i64 0, i64 0), i32 14, i64 %1589)
  %1591 = load i64, i64* %89, align 8
  %1592 = load i64, i64* %91, align 8
  %1593 = sub i64 %1592, %1591
  %1594 = icmp ult i64 %1593, 32
  br i1 %1594, label %1595, label %1597, !prof !3

1595:                                             ; preds = %1569
  %1596 = call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %58, i64 32) #15
  br label %1599

1597:                                             ; preds = %1569
  %1598 = add i64 %1591, 32
  store i64 %1598, i64* %89, align 8
  br label %1599

1599:                                             ; preds = %1595, %1597
  %1600 = phi i64 [ %1596, %1595 ], [ %1591, %1597 ]
  %1601 = inttoptr i64 %1600 to %"class.v8::internal::AstRawString"*
  %1602 = getelementptr inbounds %"class.v8::internal::AstRawString", %"class.v8::internal::AstRawString"* %1601, i64 0, i32 0, i32 0
  store %"class.v8::internal::AstRawString"* null, %"class.v8::internal::AstRawString"** %1602, align 8
  %1603 = getelementptr inbounds %"class.v8::internal::AstRawString", %"class.v8::internal::AstRawString"* %1601, i64 0, i32 1, i32 0
  store i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.50, i64 0, i64 0), i8** %1603, align 8
  %1604 = getelementptr inbounds %"class.v8::internal::AstRawString", %"class.v8::internal::AstRawString"* %1601, i64 0, i32 1, i32 1
  store i64 14, i64* %1604, align 8
  %1605 = getelementptr inbounds %"class.v8::internal::AstRawString", %"class.v8::internal::AstRawString"* %1601, i64 0, i32 2
  store i32 %1590, i32* %1605, align 8
  %1606 = getelementptr inbounds %"class.v8::internal::AstRawString", %"class.v8::internal::AstRawString"* %1601, i64 0, i32 3
  store i8 1, i8* %1606, align 4
  %1607 = getelementptr inbounds %"class.v8::internal::AstStringConstants", %"class.v8::internal::AstStringConstants"* %0, i64 0, i32 53
  store %"class.v8::internal::AstRawString"* %1601, %"class.v8::internal::AstRawString"** %1607, align 8
  %1608 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %1, i64 0, i32 0, i32 7, i32 0, i64 448
  %1609 = inttoptr i64 %1600 to i64**
  store i64* %1608, i64** %1609, align 8
  %1610 = bitcast %"class.v8::internal::AstRawString"** %54 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %1610) #15
  %1611 = bitcast %"class.v8::internal::AstRawString"** %1607 to i64*
  %1612 = load i64, i64* %1611, align 8
  %1613 = bitcast %"class.v8::internal::AstRawString"** %54 to i64*
  store i64 %1612, i64* %1613, align 8
  %1614 = inttoptr i64 %1612 to %"class.v8::internal::AstRawString"*
  %1615 = getelementptr inbounds %"class.v8::internal::AstRawString", %"class.v8::internal::AstRawString"* %1614, i64 0, i32 2
  %1616 = load i32, i32* %1615, align 8
  %1617 = lshr i32 %1616, 2
  %1618 = call %"struct.v8::base::TemplateHashMapEntry"* @_ZN2v84base19TemplateHashMapImplIPKNS_8internal12AstRawStringENS0_14NoHashMapValueENS2_22AstRawStringMapMatcherENS0_23DefaultAllocationPolicyEE9InsertNewERKS5_j(%"class.v8::base::TemplateHashMapImpl"* %61, %"class.v8::internal::AstRawString"** nonnull dereferenceable(8) %54, i32 %1617)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1610) #15
  %1619 = load i64, i64* %87, align 8
  %1620 = call i32 @_ZN2v88internal12StringHasher20HashSequentialStringIhEEjPKT_im(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.51, i64 0, i64 0), i32 5, i64 %1619)
  %1621 = load i64, i64* %89, align 8
  %1622 = load i64, i64* %91, align 8
  %1623 = sub i64 %1622, %1621
  %1624 = icmp ult i64 %1623, 32
  br i1 %1624, label %1625, label %1627, !prof !3

1625:                                             ; preds = %1599
  %1626 = call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %58, i64 32) #15
  br label %1629

1627:                                             ; preds = %1599
  %1628 = add i64 %1621, 32
  store i64 %1628, i64* %89, align 8
  br label %1629

1629:                                             ; preds = %1625, %1627
  %1630 = phi i64 [ %1626, %1625 ], [ %1621, %1627 ]
  %1631 = inttoptr i64 %1630 to %"class.v8::internal::AstRawString"*
  %1632 = getelementptr inbounds %"class.v8::internal::AstRawString", %"class.v8::internal::AstRawString"* %1631, i64 0, i32 0, i32 0
  store %"class.v8::internal::AstRawString"* null, %"class.v8::internal::AstRawString"** %1632, align 8
  %1633 = getelementptr inbounds %"class.v8::internal::AstRawString", %"class.v8::internal::AstRawString"* %1631, i64 0, i32 1, i32 0
  store i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.51, i64 0, i64 0), i8** %1633, align 8
  %1634 = getelementptr inbounds %"class.v8::internal::AstRawString", %"class.v8::internal::AstRawString"* %1631, i64 0, i32 1, i32 1
  store i64 5, i64* %1634, align 8
  %1635 = getelementptr inbounds %"class.v8::internal::AstRawString", %"class.v8::internal::AstRawString"* %1631, i64 0, i32 2
  store i32 %1620, i32* %1635, align 8
  %1636 = getelementptr inbounds %"class.v8::internal::AstRawString", %"class.v8::internal::AstRawString"* %1631, i64 0, i32 3
  store i8 1, i8* %1636, align 4
  %1637 = getelementptr inbounds %"class.v8::internal::AstStringConstants", %"class.v8::internal::AstStringConstants"* %0, i64 0, i32 54
  store %"class.v8::internal::AstRawString"* %1631, %"class.v8::internal::AstRawString"** %1637, align 8
  %1638 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %1, i64 0, i32 0, i32 7, i32 0, i64 450
  %1639 = inttoptr i64 %1630 to i64**
  store i64* %1638, i64** %1639, align 8
  %1640 = bitcast %"class.v8::internal::AstRawString"** %55 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %1640) #15
  %1641 = bitcast %"class.v8::internal::AstRawString"** %1637 to i64*
  %1642 = load i64, i64* %1641, align 8
  %1643 = bitcast %"class.v8::internal::AstRawString"** %55 to i64*
  store i64 %1642, i64* %1643, align 8
  %1644 = inttoptr i64 %1642 to %"class.v8::internal::AstRawString"*
  %1645 = getelementptr inbounds %"class.v8::internal::AstRawString", %"class.v8::internal::AstRawString"* %1644, i64 0, i32 2
  %1646 = load i32, i32* %1645, align 8
  %1647 = lshr i32 %1646, 2
  %1648 = call %"struct.v8::base::TemplateHashMapEntry"* @_ZN2v84base19TemplateHashMapImplIPKNS_8internal12AstRawStringENS0_14NoHashMapValueENS2_22AstRawStringMapMatcherENS0_23DefaultAllocationPolicyEE9InsertNewERKS5_j(%"class.v8::base::TemplateHashMapImpl"* %61, %"class.v8::internal::AstRawString"** nonnull dereferenceable(8) %55, i32 %1647)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1640) #15
  %1649 = load i64, i64* %87, align 8
  %1650 = call i32 @_ZN2v88internal12StringHasher20HashSequentialStringIhEEjPKT_im(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.52, i64 0, i64 0), i32 9, i64 %1649)
  %1651 = load i64, i64* %89, align 8
  %1652 = load i64, i64* %91, align 8
  %1653 = sub i64 %1652, %1651
  %1654 = icmp ult i64 %1653, 32
  br i1 %1654, label %1655, label %1657, !prof !3

1655:                                             ; preds = %1629
  %1656 = call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %58, i64 32) #15
  br label %1659

1657:                                             ; preds = %1629
  %1658 = add i64 %1651, 32
  store i64 %1658, i64* %89, align 8
  br label %1659

1659:                                             ; preds = %1655, %1657
  %1660 = phi i64 [ %1656, %1655 ], [ %1651, %1657 ]
  %1661 = inttoptr i64 %1660 to %"class.v8::internal::AstRawString"*
  %1662 = getelementptr inbounds %"class.v8::internal::AstRawString", %"class.v8::internal::AstRawString"* %1661, i64 0, i32 0, i32 0
  store %"class.v8::internal::AstRawString"* null, %"class.v8::internal::AstRawString"** %1662, align 8
  %1663 = getelementptr inbounds %"class.v8::internal::AstRawString", %"class.v8::internal::AstRawString"* %1661, i64 0, i32 1, i32 0
  store i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.52, i64 0, i64 0), i8** %1663, align 8
  %1664 = getelementptr inbounds %"class.v8::internal::AstRawString", %"class.v8::internal::AstRawString"* %1661, i64 0, i32 1, i32 1
  store i64 9, i64* %1664, align 8
  %1665 = getelementptr inbounds %"class.v8::internal::AstRawString", %"class.v8::internal::AstRawString"* %1661, i64 0, i32 2
  store i32 %1650, i32* %1665, align 8
  %1666 = getelementptr inbounds %"class.v8::internal::AstRawString", %"class.v8::internal::AstRawString"* %1661, i64 0, i32 3
  store i8 1, i8* %1666, align 4
  %1667 = getelementptr inbounds %"class.v8::internal::AstStringConstants", %"class.v8::internal::AstStringConstants"* %0, i64 0, i32 55
  store %"class.v8::internal::AstRawString"* %1661, %"class.v8::internal::AstRawString"** %1667, align 8
  %1668 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %1, i64 0, i32 0, i32 7, i32 0, i64 461
  %1669 = inttoptr i64 %1660 to i64**
  store i64* %1668, i64** %1669, align 8
  %1670 = bitcast %"class.v8::internal::AstRawString"** %56 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %1670) #15
  %1671 = bitcast %"class.v8::internal::AstRawString"** %1667 to i64*
  %1672 = load i64, i64* %1671, align 8
  %1673 = bitcast %"class.v8::internal::AstRawString"** %56 to i64*
  store i64 %1672, i64* %1673, align 8
  %1674 = inttoptr i64 %1672 to %"class.v8::internal::AstRawString"*
  %1675 = getelementptr inbounds %"class.v8::internal::AstRawString", %"class.v8::internal::AstRawString"* %1674, i64 0, i32 2
  %1676 = load i32, i32* %1675, align 8
  %1677 = lshr i32 %1676, 2
  %1678 = call %"struct.v8::base::TemplateHashMapEntry"* @_ZN2v84base19TemplateHashMapImplIPKNS_8internal12AstRawStringENS0_14NoHashMapValueENS2_22AstRawStringMapMatcherENS0_23DefaultAllocationPolicyEE9InsertNewERKS5_j(%"class.v8::base::TemplateHashMapImpl"* %61, %"class.v8::internal::AstRawString"** nonnull dereferenceable(8) %56, i32 %1677)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1670) #15
  %1679 = load i64, i64* %87, align 8
  %1680 = call i32 @_ZN2v88internal12StringHasher20HashSequentialStringIhEEjPKT_im(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.53, i64 0, i64 0), i32 5, i64 %1679)
  %1681 = load i64, i64* %89, align 8
  %1682 = load i64, i64* %91, align 8
  %1683 = sub i64 %1682, %1681
  %1684 = icmp ult i64 %1683, 32
  br i1 %1684, label %1685, label %1687, !prof !3

1685:                                             ; preds = %1659
  %1686 = call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %58, i64 32) #15
  br label %1689

1687:                                             ; preds = %1659
  %1688 = add i64 %1681, 32
  store i64 %1688, i64* %89, align 8
  br label %1689

1689:                                             ; preds = %1685, %1687
  %1690 = phi i64 [ %1686, %1685 ], [ %1681, %1687 ]
  %1691 = inttoptr i64 %1690 to %"class.v8::internal::AstRawString"*
  %1692 = getelementptr inbounds %"class.v8::internal::AstRawString", %"class.v8::internal::AstRawString"* %1691, i64 0, i32 0, i32 0
  store %"class.v8::internal::AstRawString"* null, %"class.v8::internal::AstRawString"** %1692, align 8
  %1693 = getelementptr inbounds %"class.v8::internal::AstRawString", %"class.v8::internal::AstRawString"* %1691, i64 0, i32 1, i32 0
  store i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.53, i64 0, i64 0), i8** %1693, align 8
  %1694 = getelementptr inbounds %"class.v8::internal::AstRawString", %"class.v8::internal::AstRawString"* %1691, i64 0, i32 1, i32 1
  store i64 5, i64* %1694, align 8
  %1695 = getelementptr inbounds %"class.v8::internal::AstRawString", %"class.v8::internal::AstRawString"* %1691, i64 0, i32 2
  store i32 %1680, i32* %1695, align 8
  %1696 = getelementptr inbounds %"class.v8::internal::AstRawString", %"class.v8::internal::AstRawString"* %1691, i64 0, i32 3
  store i8 1, i8* %1696, align 4
  %1697 = getelementptr inbounds %"class.v8::internal::AstStringConstants", %"class.v8::internal::AstStringConstants"* %0, i64 0, i32 56
  store %"class.v8::internal::AstRawString"* %1691, %"class.v8::internal::AstRawString"** %1697, align 8
  %1698 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %1, i64 0, i32 0, i32 7, i32 0, i64 465
  %1699 = inttoptr i64 %1690 to i64**
  store i64* %1698, i64** %1699, align 8
  %1700 = bitcast %"class.v8::internal::AstRawString"** %57 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %1700) #15
  %1701 = bitcast %"class.v8::internal::AstRawString"** %1697 to i64*
  %1702 = load i64, i64* %1701, align 8
  %1703 = bitcast %"class.v8::internal::AstRawString"** %57 to i64*
  store i64 %1702, i64* %1703, align 8
  %1704 = inttoptr i64 %1702 to %"class.v8::internal::AstRawString"*
  %1705 = getelementptr inbounds %"class.v8::internal::AstRawString", %"class.v8::internal::AstRawString"* %1704, i64 0, i32 2
  %1706 = load i32, i32* %1705, align 8
  %1707 = lshr i32 %1706, 2
  %1708 = call %"struct.v8::base::TemplateHashMapEntry"* @_ZN2v84base19TemplateHashMapImplIPKNS_8internal12AstRawStringENS0_14NoHashMapValueENS2_22AstRawStringMapMatcherENS0_23DefaultAllocationPolicyEE9InsertNewERKS5_j(%"class.v8::base::TemplateHashMapImpl"* %61, %"class.v8::internal::AstRawString"** nonnull dereferenceable(8) %57, i32 %1707)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1700) #15
  ret void
}

declare void @_ZN2v88internal4ZoneC1EPNS0_19AccountingAllocatorEPKcb(%"class.v8::internal::Zone"*, %"class.v8::internal::AccountingAllocator"*, i8*, i1 zeroext) unnamed_addr #2

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZN2v88internal12StringHasher20HashSequentialStringIhEEjPKT_im(i8*, i32, i64) local_unnamed_addr #8 comdat align 2 {
  %4 = icmp sgt i32 %1, 0
  br i1 %4, label %5, label %97

5:                                                ; preds = %3
  %6 = load i8, i8* %0, align 1
  %7 = zext i8 %6 to i32
  %8 = add nsw i32 %7, -48
  %9 = icmp ult i32 %8, 10
  br i1 %9, label %10, label %90

10:                                               ; preds = %5
  %11 = icmp eq i32 %1, 1
  br i1 %11, label %36, label %12

12:                                               ; preds = %10
  %13 = icmp eq i8 %6, 48
  br i1 %13, label %90, label %14

14:                                               ; preds = %12
  %15 = icmp slt i32 %1, 11
  br i1 %15, label %16, label %39

16:                                               ; preds = %14
  %17 = zext i32 %1 to i64
  br label %18

18:                                               ; preds = %16, %32
  %19 = phi i64 [ 1, %16 ], [ %21, %32 ]
  %20 = phi i32 [ %8, %16 ], [ %34, %32 ]
  %21 = add nuw nsw i64 %19, 1
  %22 = getelementptr inbounds i8, i8* %0, i64 %19
  %23 = load i8, i8* %22, align 1
  %24 = zext i8 %23 to i32
  %25 = add nsw i32 %24, -48
  %26 = icmp ult i32 %25, 10
  br i1 %26, label %27, label %39

27:                                               ; preds = %18
  %28 = add nsw i32 %24, -45
  %29 = ashr i32 %28, 3
  %30 = sub nuw nsw i32 429496729, %29
  %31 = icmp ugt i32 %20, %30
  br i1 %31, label %39, label %32

32:                                               ; preds = %27
  %33 = mul i32 %20, 10
  %34 = add i32 %25, %33
  %35 = icmp eq i64 %21, %17
  br i1 %35, label %36, label %18

36:                                               ; preds = %32, %10
  %37 = phi i32 [ %8, %10 ], [ %34, %32 ]
  %38 = tail call i32 @_ZN2v88internal12StringHasher18MakeArrayIndexHashEji(i32 %37, i32 %1) #15
  br label %170

39:                                               ; preds = %18, %27, %14
  %40 = icmp slt i32 %1, 17
  br i1 %40, label %41, label %90

41:                                               ; preds = %39
  %42 = trunc i64 %2 to i32
  %43 = sext i32 %1 to i64
  %44 = getelementptr inbounds i8, i8* %0, i64 %43
  %45 = icmp eq i32 %1, 0
  br i1 %45, label %72, label %46

46:                                               ; preds = %41, %63
  %47 = phi i8* [ %66, %63 ], [ %0, %41 ]
  %48 = phi i32 [ %70, %63 ], [ %42, %41 ]
  %49 = phi i32 [ %65, %63 ], [ 0, %41 ]
  %50 = phi i64 [ %64, %63 ], [ 0, %41 ]
  %51 = icmp eq i32 %49, 0
  %52 = load i8, i8* %47, align 1
  %53 = zext i8 %52 to i32
  br i1 %51, label %54, label %63

54:                                               ; preds = %46
  %55 = add nsw i32 %53, -48
  %56 = icmp ult i32 %55, 10
  br i1 %56, label %57, label %63

57:                                               ; preds = %54
  %58 = mul i64 %50, 10
  %59 = sext i32 %55 to i64
  %60 = add i64 %58, %59
  %61 = icmp ult i64 %60, 9007199254740992
  %62 = select i1 %61, i32 0, i32 2
  br label %63

63:                                               ; preds = %46, %57, %54
  %64 = phi i64 [ %60, %57 ], [ %50, %54 ], [ %50, %46 ]
  %65 = phi i32 [ %62, %57 ], [ 2, %54 ], [ %49, %46 ]
  %66 = getelementptr inbounds i8, i8* %47, i64 1
  %67 = add i32 %48, %53
  %68 = mul i32 %67, 1025
  %69 = lshr i32 %68, 6
  %70 = xor i32 %69, %68
  %71 = icmp eq i8* %66, %44
  br i1 %71, label %72, label %46

72:                                               ; preds = %63, %41
  %73 = phi i32 [ 0, %41 ], [ %65, %63 ]
  %74 = phi i32 [ %42, %41 ], [ %70, %63 ]
  %75 = mul i32 %74, 9
  %76 = lshr i32 %75, 11
  %77 = xor i32 %76, %75
  %78 = mul i32 %77, 32769
  %79 = and i32 %78, 1073741823
  %80 = add nsw i32 %79, -1
  %81 = ashr i32 %80, 31
  %82 = and i32 %81, 27
  %83 = or i32 %82, %78
  %84 = shl i32 %83, 2
  %85 = or i32 %84, %73
  %86 = and i32 %85, -536870910
  %87 = icmp eq i32 %86, 0
  %88 = or i32 %85, 536870912
  %89 = select i1 %87, i32 %88, i32 %85
  br label %170

90:                                               ; preds = %12, %39, %5
  %91 = icmp sgt i32 %1, 16383
  br i1 %91, label %94, label %92

92:                                               ; preds = %90
  %93 = trunc i64 %2 to i32
  br label %100

94:                                               ; preds = %90
  %95 = shl i32 %1, 2
  %96 = or i32 %95, 2
  br label %170

97:                                               ; preds = %3
  %98 = trunc i64 %2 to i32
  %99 = icmp eq i32 %1, 0
  br i1 %99, label %157, label %100

100:                                              ; preds = %92, %97
  %101 = phi i32 [ %93, %92 ], [ %98, %97 ]
  %102 = sext i32 %1 to i64
  %103 = getelementptr inbounds i8, i8* %0, i64 %102
  %104 = add nsw i64 %102, -1
  %105 = and i64 %102, 3
  %106 = icmp eq i64 %105, 0
  br i1 %106, label %120, label %107

107:                                              ; preds = %100, %107
  %108 = phi i32 [ %117, %107 ], [ %101, %100 ]
  %109 = phi i8* [ %111, %107 ], [ %0, %100 ]
  %110 = phi i64 [ %118, %107 ], [ %105, %100 ]
  %111 = getelementptr inbounds i8, i8* %109, i64 1
  %112 = load i8, i8* %109, align 1
  %113 = zext i8 %112 to i32
  %114 = add i32 %108, %113
  %115 = mul i32 %114, 1025
  %116 = lshr i32 %115, 6
  %117 = xor i32 %116, %115
  %118 = add i64 %110, -1
  %119 = icmp eq i64 %118, 0
  br i1 %119, label %120, label %107, !llvm.loop !12

120:                                              ; preds = %107, %100
  %121 = phi i32 [ undef, %100 ], [ %117, %107 ]
  %122 = phi i32 [ %101, %100 ], [ %117, %107 ]
  %123 = phi i8* [ %0, %100 ], [ %111, %107 ]
  %124 = icmp ult i64 %104, 3
  br i1 %124, label %157, label %125

125:                                              ; preds = %120, %125
  %126 = phi i32 [ %155, %125 ], [ %122, %120 ]
  %127 = phi i8* [ %149, %125 ], [ %123, %120 ]
  %128 = getelementptr inbounds i8, i8* %127, i64 1
  %129 = load i8, i8* %127, align 1
  %130 = zext i8 %129 to i32
  %131 = add i32 %126, %130
  %132 = mul i32 %131, 1025
  %133 = lshr i32 %132, 6
  %134 = xor i32 %133, %132
  %135 = getelementptr inbounds i8, i8* %127, i64 2
  %136 = load i8, i8* %128, align 1
  %137 = zext i8 %136 to i32
  %138 = add i32 %134, %137
  %139 = mul i32 %138, 1025
  %140 = lshr i32 %139, 6
  %141 = xor i32 %140, %139
  %142 = getelementptr inbounds i8, i8* %127, i64 3
  %143 = load i8, i8* %135, align 1
  %144 = zext i8 %143 to i32
  %145 = add i32 %141, %144
  %146 = mul i32 %145, 1025
  %147 = lshr i32 %146, 6
  %148 = xor i32 %147, %146
  %149 = getelementptr inbounds i8, i8* %127, i64 4
  %150 = load i8, i8* %142, align 1
  %151 = zext i8 %150 to i32
  %152 = add i32 %148, %151
  %153 = mul i32 %152, 1025
  %154 = lshr i32 %153, 6
  %155 = xor i32 %154, %153
  %156 = icmp eq i8* %149, %103
  br i1 %156, label %157, label %125

157:                                              ; preds = %120, %125, %97
  %158 = phi i32 [ %98, %97 ], [ %121, %120 ], [ %155, %125 ]
  %159 = mul i32 %158, 9
  %160 = lshr i32 %159, 11
  %161 = xor i32 %160, %159
  %162 = mul i32 %161, 32769
  %163 = and i32 %162, 1073741823
  %164 = add nsw i32 %163, -1
  %165 = ashr i32 %164, 31
  %166 = and i32 %165, 27
  %167 = or i32 %166, %162
  %168 = shl i32 %167, 2
  %169 = or i32 %168, 2
  br label %170

170:                                              ; preds = %36, %157, %94, %72
  %171 = phi i32 [ %89, %72 ], [ %96, %94 ], [ %169, %157 ], [ %38, %36 ]
  ret i32 %171
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.v8::base::TemplateHashMapEntry"* @_ZN2v84base19TemplateHashMapImplIPKNS_8internal12AstRawStringENS0_14NoHashMapValueENS2_22AstRawStringMapMatcherENS0_23DefaultAllocationPolicyEE9InsertNewERKS5_j(%"class.v8::base::TemplateHashMapImpl"*, %"class.v8::internal::AstRawString"** dereferenceable(8), i32) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.v8::base::TemplateHashMapImpl", %"class.v8::base::TemplateHashMapImpl"* %0, i64 0, i32 0, i32 1
  %5 = load i32, i32* %4, align 8
  %6 = add i32 %5, -1
  %7 = and i32 %6, %2
  %8 = zext i32 %7 to i64
  %9 = getelementptr inbounds %"class.v8::base::TemplateHashMapImpl", %"class.v8::base::TemplateHashMapImpl"* %0, i64 0, i32 0, i32 0
  %10 = load %"struct.v8::base::TemplateHashMapEntry"*, %"struct.v8::base::TemplateHashMapEntry"** %9, align 8
  %11 = getelementptr inbounds %"struct.v8::base::TemplateHashMapEntry", %"struct.v8::base::TemplateHashMapEntry"* %10, i64 %8
  %12 = getelementptr inbounds %"struct.v8::base::TemplateHashMapEntry", %"struct.v8::base::TemplateHashMapEntry"* %11, i64 0, i32 0, i32 0
  %13 = load %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"** %12, align 8
  %14 = icmp eq %"class.v8::internal::AstRawString"* %13, null
  br i1 %14, label %15, label %18

15:                                               ; preds = %3
  %16 = bitcast %"class.v8::internal::AstRawString"** %1 to i64*
  %17 = load i64, i64* %16, align 8
  br label %38

18:                                               ; preds = %3
  %19 = load %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"** %1, align 8
  %20 = zext i32 %6 to i64
  %21 = ptrtoint %"class.v8::internal::AstRawString"* %19 to i64
  br label %22

22:                                               ; preds = %31, %18
  %23 = phi %"class.v8::internal::AstRawString"* [ %13, %18 ], [ %36, %31 ]
  %24 = phi %"struct.v8::base::TemplateHashMapEntry"* [ %11, %18 ], [ %34, %31 ]
  %25 = phi i64 [ %8, %18 ], [ %33, %31 ]
  %26 = getelementptr inbounds %"struct.v8::base::TemplateHashMapEntry", %"struct.v8::base::TemplateHashMapEntry"* %10, i64 %25, i32 1
  %27 = load i32, i32* %26, align 8
  %28 = icmp eq i32 %27, %2
  br i1 %28, label %29, label %31

29:                                               ; preds = %22
  %30 = tail call zeroext i1 @_ZN2v88internal12AstRawString5EqualEPKS1_S3_(%"class.v8::internal::AstRawString"* %19, %"class.v8::internal::AstRawString"* nonnull %23) #15
  br i1 %30, label %38, label %31

31:                                               ; preds = %29, %22
  %32 = add nuw nsw i64 %25, 1
  %33 = and i64 %32, %20
  %34 = getelementptr inbounds %"struct.v8::base::TemplateHashMapEntry", %"struct.v8::base::TemplateHashMapEntry"* %10, i64 %33
  %35 = getelementptr inbounds %"struct.v8::base::TemplateHashMapEntry", %"struct.v8::base::TemplateHashMapEntry"* %34, i64 0, i32 0, i32 0
  %36 = load %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"** %35, align 8
  %37 = icmp eq %"class.v8::internal::AstRawString"* %36, null
  br i1 %37, label %38, label %22

38:                                               ; preds = %29, %31, %15
  %39 = phi i64 [ %17, %15 ], [ %21, %31 ], [ %21, %29 ]
  %40 = phi %"struct.v8::base::TemplateHashMapEntry"* [ %11, %15 ], [ %24, %29 ], [ %34, %31 ]
  %41 = bitcast %"struct.v8::base::TemplateHashMapEntry"* %40 to i64*
  store i64 %39, i64* %41, align 8
  %42 = getelementptr inbounds %"struct.v8::base::TemplateHashMapEntry", %"struct.v8::base::TemplateHashMapEntry"* %40, i64 0, i32 1
  store i32 %2, i32* %42, align 8
  %43 = getelementptr inbounds %"class.v8::base::TemplateHashMapImpl", %"class.v8::base::TemplateHashMapImpl"* %0, i64 0, i32 0, i32 2
  %44 = load i32, i32* %43, align 4
  %45 = add i32 %44, 1
  store i32 %45, i32* %43, align 4
  %46 = lshr i32 %45, 2
  %47 = add i32 %46, %45
  %48 = load i32, i32* %4, align 8
  %49 = icmp ult i32 %47, %48
  br i1 %49, label %79, label %50

50:                                               ; preds = %38
  tail call void @_ZN2v84base19TemplateHashMapImplIPKNS_8internal12AstRawStringENS0_14NoHashMapValueENS2_22AstRawStringMapMatcherENS0_23DefaultAllocationPolicyEE6ResizeEv(%"class.v8::base::TemplateHashMapImpl"* %0) #15
  %51 = load i32, i32* %4, align 8
  %52 = add i32 %51, -1
  %53 = and i32 %52, %2
  %54 = zext i32 %53 to i64
  %55 = load %"struct.v8::base::TemplateHashMapEntry"*, %"struct.v8::base::TemplateHashMapEntry"** %9, align 8
  %56 = getelementptr inbounds %"struct.v8::base::TemplateHashMapEntry", %"struct.v8::base::TemplateHashMapEntry"* %55, i64 %54
  %57 = getelementptr inbounds %"struct.v8::base::TemplateHashMapEntry", %"struct.v8::base::TemplateHashMapEntry"* %56, i64 0, i32 0, i32 0
  %58 = load %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"** %57, align 8
  %59 = icmp eq %"class.v8::internal::AstRawString"* %58, null
  br i1 %59, label %79, label %60

60:                                               ; preds = %50
  %61 = load %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"** %1, align 8
  %62 = zext i32 %52 to i64
  br label %63

63:                                               ; preds = %72, %60
  %64 = phi %"class.v8::internal::AstRawString"* [ %58, %60 ], [ %77, %72 ]
  %65 = phi %"struct.v8::base::TemplateHashMapEntry"* [ %56, %60 ], [ %75, %72 ]
  %66 = phi i64 [ %54, %60 ], [ %74, %72 ]
  %67 = getelementptr inbounds %"struct.v8::base::TemplateHashMapEntry", %"struct.v8::base::TemplateHashMapEntry"* %55, i64 %66, i32 1
  %68 = load i32, i32* %67, align 8
  %69 = icmp eq i32 %68, %2
  br i1 %69, label %70, label %72

70:                                               ; preds = %63
  %71 = tail call zeroext i1 @_ZN2v88internal12AstRawString5EqualEPKS1_S3_(%"class.v8::internal::AstRawString"* %61, %"class.v8::internal::AstRawString"* nonnull %64) #15
  br i1 %71, label %79, label %72

72:                                               ; preds = %70, %63
  %73 = add nuw nsw i64 %66, 1
  %74 = and i64 %73, %62
  %75 = getelementptr inbounds %"struct.v8::base::TemplateHashMapEntry", %"struct.v8::base::TemplateHashMapEntry"* %55, i64 %74
  %76 = getelementptr inbounds %"struct.v8::base::TemplateHashMapEntry", %"struct.v8::base::TemplateHashMapEntry"* %75, i64 0, i32 0, i32 0
  %77 = load %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"** %76, align 8
  %78 = icmp eq %"class.v8::internal::AstRawString"* %77, null
  br i1 %78, label %79, label %63

79:                                               ; preds = %70, %72, %38, %50
  %80 = phi %"struct.v8::base::TemplateHashMapEntry"* [ %40, %38 ], [ %56, %50 ], [ %75, %72 ], [ %65, %70 ]
  ret %"struct.v8::base::TemplateHashMapEntry"* %80
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.v8::internal::AstRawString"* @_ZN2v88internal15AstValueFactory24GetOneByteStringInternalENS0_6VectorIKhEE(%"class.v8::internal::AstValueFactory"*, i8*, i64) local_unnamed_addr #0 align 2 {
  %4 = trunc i64 %2 to i32
  %5 = icmp eq i32 %4, 1
  br i1 %5, label %6, label %19

6:                                                ; preds = %3
  %7 = load i8, i8* %1, align 1
  %8 = icmp sgt i8 %7, -1
  br i1 %8, label %9, label %19

9:                                                ; preds = %6
  %10 = zext i8 %7 to i64
  %11 = getelementptr inbounds %"class.v8::internal::AstValueFactory", %"class.v8::internal::AstValueFactory"* %0, i64 0, i32 5, i64 %10
  %12 = load %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"** %11, align 8
  %13 = icmp eq %"class.v8::internal::AstRawString"* %12, null
  br i1 %13, label %14, label %24, !prof !3

14:                                               ; preds = %9
  %15 = getelementptr inbounds %"class.v8::internal::AstValueFactory", %"class.v8::internal::AstValueFactory"* %0, i64 0, i32 7
  %16 = load i64, i64* %15, align 8
  %17 = tail call i32 @_ZN2v88internal12StringHasher20HashSequentialStringIhEEjPKT_im(i8* %1, i32 1, i64 %16)
  %18 = tail call %"class.v8::internal::AstRawString"* @_ZN2v88internal15AstValueFactory9GetStringEjbNS0_6VectorIKhEE(%"class.v8::internal::AstValueFactory"* %0, i32 %17, i1 zeroext true, i8* %1, i64 %2)
  store %"class.v8::internal::AstRawString"* %18, %"class.v8::internal::AstRawString"** %11, align 8
  br label %24

19:                                               ; preds = %6, %3
  %20 = getelementptr inbounds %"class.v8::internal::AstValueFactory", %"class.v8::internal::AstValueFactory"* %0, i64 0, i32 7
  %21 = load i64, i64* %20, align 8
  %22 = tail call i32 @_ZN2v88internal12StringHasher20HashSequentialStringIhEEjPKT_im(i8* %1, i32 %4, i64 %21)
  %23 = tail call %"class.v8::internal::AstRawString"* @_ZN2v88internal15AstValueFactory9GetStringEjbNS0_6VectorIKhEE(%"class.v8::internal::AstValueFactory"* %0, i32 %22, i1 zeroext true, i8* %1, i64 %2)
  br label %24

24:                                               ; preds = %9, %14, %19
  %25 = phi %"class.v8::internal::AstRawString"* [ %23, %19 ], [ %18, %14 ], [ %12, %9 ]
  ret %"class.v8::internal::AstRawString"* %25
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.v8::internal::AstRawString"* @_ZN2v88internal15AstValueFactory9GetStringEjbNS0_6VectorIKhEE(%"class.v8::internal::AstValueFactory"*, i32, i1 zeroext, i8*, i64) local_unnamed_addr #0 align 2 {
  %6 = alloca %"class.v8::internal::AstRawString", align 8
  %7 = zext i1 %2 to i8
  %8 = bitcast %"class.v8::internal::AstRawString"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %8) #15
  %9 = getelementptr inbounds %"class.v8::internal::AstRawString", %"class.v8::internal::AstRawString"* %6, i64 0, i32 0, i32 0
  store %"class.v8::internal::AstRawString"* null, %"class.v8::internal::AstRawString"** %9, align 8
  %10 = getelementptr inbounds %"class.v8::internal::AstRawString", %"class.v8::internal::AstRawString"* %6, i64 0, i32 1, i32 0
  store i8* %3, i8** %10, align 8
  %11 = getelementptr inbounds %"class.v8::internal::AstRawString", %"class.v8::internal::AstRawString"* %6, i64 0, i32 1, i32 1
  store i64 %4, i64* %11, align 8
  %12 = getelementptr inbounds %"class.v8::internal::AstRawString", %"class.v8::internal::AstRawString"* %6, i64 0, i32 2
  store i32 %1, i32* %12, align 8
  %13 = getelementptr inbounds %"class.v8::internal::AstRawString", %"class.v8::internal::AstRawString"* %6, i64 0, i32 3
  store i8 %7, i8* %13, align 4
  %14 = getelementptr inbounds %"class.v8::internal::AstValueFactory", %"class.v8::internal::AstValueFactory"* %0, i64 0, i32 0
  %15 = lshr i32 %1, 2
  %16 = getelementptr inbounds %"class.v8::internal::AstValueFactory", %"class.v8::internal::AstValueFactory"* %0, i64 0, i32 0, i32 0, i32 1
  %17 = load i32, i32* %16, align 8
  %18 = add i32 %17, -1
  %19 = and i32 %18, %15
  %20 = zext i32 %19 to i64
  %21 = getelementptr inbounds %"class.v8::internal::AstValueFactory", %"class.v8::internal::AstValueFactory"* %0, i64 0, i32 0, i32 0, i32 0
  %22 = load %"struct.v8::base::TemplateHashMapEntry"*, %"struct.v8::base::TemplateHashMapEntry"** %21, align 8
  %23 = getelementptr inbounds %"struct.v8::base::TemplateHashMapEntry", %"struct.v8::base::TemplateHashMapEntry"* %22, i64 %20
  %24 = getelementptr inbounds %"struct.v8::base::TemplateHashMapEntry", %"struct.v8::base::TemplateHashMapEntry"* %23, i64 0, i32 0, i32 0
  %25 = load %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"** %24, align 8
  %26 = icmp eq %"class.v8::internal::AstRawString"* %25, null
  br i1 %26, label %45, label %27

27:                                               ; preds = %5
  %28 = zext i32 %18 to i64
  br label %29

29:                                               ; preds = %38, %27
  %30 = phi %"class.v8::internal::AstRawString"* [ %25, %27 ], [ %43, %38 ]
  %31 = phi %"struct.v8::base::TemplateHashMapEntry"* [ %23, %27 ], [ %41, %38 ]
  %32 = phi i64 [ %20, %27 ], [ %40, %38 ]
  %33 = getelementptr inbounds %"struct.v8::base::TemplateHashMapEntry", %"struct.v8::base::TemplateHashMapEntry"* %22, i64 %32, i32 1
  %34 = load i32, i32* %33, align 8
  %35 = icmp eq i32 %34, %15
  br i1 %35, label %36, label %38

36:                                               ; preds = %29
  %37 = call zeroext i1 @_ZN2v88internal12AstRawString5EqualEPKS1_S3_(%"class.v8::internal::AstRawString"* nonnull %6, %"class.v8::internal::AstRawString"* nonnull %30) #15
  br i1 %37, label %127, label %38

38:                                               ; preds = %36, %29
  %39 = add nuw nsw i64 %32, 1
  %40 = and i64 %39, %28
  %41 = getelementptr inbounds %"struct.v8::base::TemplateHashMapEntry", %"struct.v8::base::TemplateHashMapEntry"* %22, i64 %40
  %42 = getelementptr inbounds %"struct.v8::base::TemplateHashMapEntry", %"struct.v8::base::TemplateHashMapEntry"* %41, i64 0, i32 0, i32 0
  %43 = load %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"** %42, align 8
  %44 = icmp eq %"class.v8::internal::AstRawString"* %43, null
  br i1 %44, label %45, label %29

45:                                               ; preds = %38, %5
  %46 = phi %"struct.v8::base::TemplateHashMapEntry"* [ %23, %5 ], [ %41, %38 ]
  %47 = getelementptr inbounds %"class.v8::internal::AstValueFactory", %"class.v8::internal::AstValueFactory"* %0, i64 0, i32 6
  %48 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %47, align 8
  %49 = shl i64 %4, 32
  %50 = ashr exact i64 %49, 32
  %51 = add nsw i64 %50, 7
  %52 = and i64 %51, -8
  %53 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %48, i64 0, i32 2
  %54 = load i64, i64* %53, align 8
  %55 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %48, i64 0, i32 3
  %56 = load i64, i64* %55, align 8
  %57 = sub i64 %56, %54
  %58 = icmp ugt i64 %52, %57
  br i1 %58, label %59, label %61, !prof !3

59:                                               ; preds = %45
  %60 = tail call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %48, i64 %52) #15
  br label %63

61:                                               ; preds = %45
  %62 = add i64 %54, %52
  store i64 %62, i64* %53, align 8
  br label %63

63:                                               ; preds = %61, %59
  %64 = phi i64 [ %60, %59 ], [ %54, %61 ]
  %65 = inttoptr i64 %64 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %65, i8* align 1 %3, i64 %50, i1 false) #15
  %66 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %47, align 8
  %67 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %66, i64 0, i32 2
  %68 = load i64, i64* %67, align 8
  %69 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %66, i64 0, i32 3
  %70 = load i64, i64* %69, align 8
  %71 = sub i64 %70, %68
  %72 = icmp ult i64 %71, 32
  br i1 %72, label %73, label %75, !prof !3

73:                                               ; preds = %63
  %74 = tail call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %66, i64 32) #15
  br label %77

75:                                               ; preds = %63
  %76 = add i64 %68, 32
  store i64 %76, i64* %67, align 8
  br label %77

77:                                               ; preds = %75, %73
  %78 = phi i64 [ %74, %73 ], [ %68, %75 ]
  %79 = inttoptr i64 %78 to %"class.v8::internal::AstRawString"*
  %80 = getelementptr inbounds %"class.v8::internal::AstRawString", %"class.v8::internal::AstRawString"* %79, i64 0, i32 0, i32 0
  store %"class.v8::internal::AstRawString"* null, %"class.v8::internal::AstRawString"** %80, align 8
  %81 = getelementptr inbounds %"class.v8::internal::AstRawString", %"class.v8::internal::AstRawString"* %79, i64 0, i32 1, i32 0
  store i8* %65, i8** %81, align 8
  %82 = getelementptr inbounds %"class.v8::internal::AstRawString", %"class.v8::internal::AstRawString"* %79, i64 0, i32 1, i32 1
  store i64 %50, i64* %82, align 8
  %83 = getelementptr inbounds %"class.v8::internal::AstRawString", %"class.v8::internal::AstRawString"* %79, i64 0, i32 2
  store i32 %1, i32* %83, align 8
  %84 = getelementptr inbounds %"class.v8::internal::AstRawString", %"class.v8::internal::AstRawString"* %79, i64 0, i32 3
  store i8 %7, i8* %84, align 4
  %85 = icmp eq i64 %78, 0
  br i1 %85, label %86, label %87, !prof !3

86:                                               ; preds = %77
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.54, i64 0, i64 0), i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.58, i64 0, i64 0)) #16
  unreachable

87:                                               ; preds = %77
  %88 = getelementptr inbounds %"class.v8::internal::AstValueFactory", %"class.v8::internal::AstValueFactory"* %0, i64 0, i32 2
  %89 = load %"class.v8::internal::AstRawString"**, %"class.v8::internal::AstRawString"*** %88, align 8
  store %"class.v8::internal::AstRawString"* %79, %"class.v8::internal::AstRawString"** %89, align 8
  store %"class.v8::internal::AstRawString"** %80, %"class.v8::internal::AstRawString"*** %88, align 8
  %90 = bitcast %"struct.v8::base::TemplateHashMapEntry"* %46 to i64*
  store i64 %78, i64* %90, align 8
  %91 = getelementptr inbounds %"struct.v8::base::TemplateHashMapEntry", %"struct.v8::base::TemplateHashMapEntry"* %46, i64 0, i32 1
  store i32 %15, i32* %91, align 8
  %92 = getelementptr inbounds %"class.v8::internal::AstValueFactory", %"class.v8::internal::AstValueFactory"* %0, i64 0, i32 0, i32 0, i32 2
  %93 = load i32, i32* %92, align 4
  %94 = add i32 %93, 1
  store i32 %94, i32* %92, align 4
  %95 = lshr i32 %94, 2
  %96 = add i32 %95, %94
  %97 = load i32, i32* %16, align 8
  %98 = icmp ult i32 %96, %97
  br i1 %98, label %127, label %99

99:                                               ; preds = %87
  tail call void @_ZN2v84base19TemplateHashMapImplIPKNS_8internal12AstRawStringENS0_14NoHashMapValueENS2_22AstRawStringMapMatcherENS0_23DefaultAllocationPolicyEE6ResizeEv(%"class.v8::base::TemplateHashMapImpl"* %14) #15
  %100 = load i32, i32* %16, align 8
  %101 = add i32 %100, -1
  %102 = and i32 %101, %15
  %103 = zext i32 %102 to i64
  %104 = load %"struct.v8::base::TemplateHashMapEntry"*, %"struct.v8::base::TemplateHashMapEntry"** %21, align 8
  %105 = getelementptr inbounds %"struct.v8::base::TemplateHashMapEntry", %"struct.v8::base::TemplateHashMapEntry"* %104, i64 %103
  %106 = getelementptr inbounds %"struct.v8::base::TemplateHashMapEntry", %"struct.v8::base::TemplateHashMapEntry"* %105, i64 0, i32 0, i32 0
  %107 = load %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"** %106, align 8
  %108 = icmp eq %"class.v8::internal::AstRawString"* %107, null
  br i1 %108, label %127, label %109

109:                                              ; preds = %99
  %110 = zext i32 %101 to i64
  br label %111

111:                                              ; preds = %120, %109
  %112 = phi %"class.v8::internal::AstRawString"* [ %107, %109 ], [ %125, %120 ]
  %113 = phi %"struct.v8::base::TemplateHashMapEntry"* [ %105, %109 ], [ %123, %120 ]
  %114 = phi i64 [ %103, %109 ], [ %122, %120 ]
  %115 = getelementptr inbounds %"struct.v8::base::TemplateHashMapEntry", %"struct.v8::base::TemplateHashMapEntry"* %104, i64 %114, i32 1
  %116 = load i32, i32* %115, align 8
  %117 = icmp eq i32 %116, %15
  br i1 %117, label %118, label %120

118:                                              ; preds = %111
  %119 = tail call zeroext i1 @_ZN2v88internal12AstRawString5EqualEPKS1_S3_(%"class.v8::internal::AstRawString"* %79, %"class.v8::internal::AstRawString"* nonnull %112) #15
  br i1 %119, label %127, label %120

120:                                              ; preds = %118, %111
  %121 = add nuw nsw i64 %114, 1
  %122 = and i64 %121, %110
  %123 = getelementptr inbounds %"struct.v8::base::TemplateHashMapEntry", %"struct.v8::base::TemplateHashMapEntry"* %104, i64 %122
  %124 = getelementptr inbounds %"struct.v8::base::TemplateHashMapEntry", %"struct.v8::base::TemplateHashMapEntry"* %123, i64 0, i32 0, i32 0
  %125 = load %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"** %124, align 8
  %126 = icmp eq %"class.v8::internal::AstRawString"* %125, null
  br i1 %126, label %127, label %111

127:                                              ; preds = %36, %118, %120, %87, %99
  %128 = phi %"struct.v8::base::TemplateHashMapEntry"* [ %46, %87 ], [ %105, %99 ], [ %113, %118 ], [ %123, %120 ], [ %31, %36 ]
  %129 = getelementptr inbounds %"struct.v8::base::TemplateHashMapEntry", %"struct.v8::base::TemplateHashMapEntry"* %128, i64 0, i32 0, i32 0
  %130 = load %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"** %129, align 8
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %8) #15
  ret %"class.v8::internal::AstRawString"* %130
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.v8::internal::AstRawString"* @_ZN2v88internal15AstValueFactory24GetTwoByteStringInternalENS0_6VectorIKtEE(%"class.v8::internal::AstValueFactory"*, i16*, i64) local_unnamed_addr #0 align 2 {
  %4 = trunc i64 %2 to i32
  %5 = getelementptr inbounds %"class.v8::internal::AstValueFactory", %"class.v8::internal::AstValueFactory"* %0, i64 0, i32 7
  %6 = load i64, i64* %5, align 8
  %7 = tail call i32 @_ZN2v88internal12StringHasher20HashSequentialStringItEEjPKT_im(i16* %1, i32 %4, i64 %6)
  %8 = bitcast i16* %1 to i8*
  %9 = shl i64 %2, 1
  %10 = tail call %"class.v8::internal::AstRawString"* @_ZN2v88internal15AstValueFactory9GetStringEjbNS0_6VectorIKhEE(%"class.v8::internal::AstValueFactory"* %0, i32 %7, i1 zeroext false, i8* %8, i64 %9)
  ret %"class.v8::internal::AstRawString"* %10
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZN2v88internal12StringHasher20HashSequentialStringItEEjPKT_im(i16*, i32, i64) local_unnamed_addr #8 comdat align 2 {
  %4 = icmp sgt i32 %1, 0
  br i1 %4, label %5, label %97

5:                                                ; preds = %3
  %6 = load i16, i16* %0, align 2
  %7 = zext i16 %6 to i32
  %8 = add nsw i32 %7, -48
  %9 = icmp ult i32 %8, 10
  br i1 %9, label %10, label %90

10:                                               ; preds = %5
  %11 = icmp eq i32 %1, 1
  br i1 %11, label %36, label %12

12:                                               ; preds = %10
  %13 = icmp eq i16 %6, 48
  br i1 %13, label %90, label %14

14:                                               ; preds = %12
  %15 = icmp slt i32 %1, 11
  br i1 %15, label %16, label %39

16:                                               ; preds = %14
  %17 = zext i32 %1 to i64
  br label %18

18:                                               ; preds = %16, %32
  %19 = phi i64 [ 1, %16 ], [ %21, %32 ]
  %20 = phi i32 [ %8, %16 ], [ %34, %32 ]
  %21 = add nuw nsw i64 %19, 1
  %22 = getelementptr inbounds i16, i16* %0, i64 %19
  %23 = load i16, i16* %22, align 2
  %24 = zext i16 %23 to i32
  %25 = add nsw i32 %24, -48
  %26 = icmp ult i32 %25, 10
  br i1 %26, label %27, label %39

27:                                               ; preds = %18
  %28 = add nsw i32 %24, -45
  %29 = ashr i32 %28, 3
  %30 = sub nuw nsw i32 429496729, %29
  %31 = icmp ugt i32 %20, %30
  br i1 %31, label %39, label %32

32:                                               ; preds = %27
  %33 = mul i32 %20, 10
  %34 = add i32 %25, %33
  %35 = icmp eq i64 %21, %17
  br i1 %35, label %36, label %18

36:                                               ; preds = %32, %10
  %37 = phi i32 [ %8, %10 ], [ %34, %32 ]
  %38 = tail call i32 @_ZN2v88internal12StringHasher18MakeArrayIndexHashEji(i32 %37, i32 %1) #15
  br label %173

39:                                               ; preds = %18, %27, %14
  %40 = icmp slt i32 %1, 17
  br i1 %40, label %41, label %90

41:                                               ; preds = %39
  %42 = trunc i64 %2 to i32
  %43 = sext i32 %1 to i64
  %44 = getelementptr inbounds i16, i16* %0, i64 %43
  %45 = icmp eq i32 %1, 0
  br i1 %45, label %72, label %46

46:                                               ; preds = %41, %63
  %47 = phi i16* [ %66, %63 ], [ %0, %41 ]
  %48 = phi i32 [ %70, %63 ], [ %42, %41 ]
  %49 = phi i32 [ %65, %63 ], [ 0, %41 ]
  %50 = phi i64 [ %64, %63 ], [ 0, %41 ]
  %51 = icmp eq i32 %49, 0
  %52 = load i16, i16* %47, align 2
  %53 = zext i16 %52 to i32
  br i1 %51, label %54, label %63

54:                                               ; preds = %46
  %55 = add nsw i32 %53, -48
  %56 = icmp ult i32 %55, 10
  br i1 %56, label %57, label %63

57:                                               ; preds = %54
  %58 = mul i64 %50, 10
  %59 = sext i32 %55 to i64
  %60 = add i64 %58, %59
  %61 = icmp ult i64 %60, 9007199254740992
  %62 = select i1 %61, i32 0, i32 2
  br label %63

63:                                               ; preds = %46, %57, %54
  %64 = phi i64 [ %60, %57 ], [ %50, %54 ], [ %50, %46 ]
  %65 = phi i32 [ %62, %57 ], [ 2, %54 ], [ %49, %46 ]
  %66 = getelementptr inbounds i16, i16* %47, i64 1
  %67 = add i32 %48, %53
  %68 = mul i32 %67, 1025
  %69 = lshr i32 %68, 6
  %70 = xor i32 %69, %68
  %71 = icmp eq i16* %66, %44
  br i1 %71, label %72, label %46

72:                                               ; preds = %63, %41
  %73 = phi i32 [ 0, %41 ], [ %65, %63 ]
  %74 = phi i32 [ %42, %41 ], [ %70, %63 ]
  %75 = mul i32 %74, 9
  %76 = lshr i32 %75, 11
  %77 = xor i32 %76, %75
  %78 = mul i32 %77, 32769
  %79 = and i32 %78, 1073741823
  %80 = add nsw i32 %79, -1
  %81 = ashr i32 %80, 31
  %82 = and i32 %81, 27
  %83 = or i32 %82, %78
  %84 = shl i32 %83, 2
  %85 = or i32 %84, %73
  %86 = and i32 %85, -536870910
  %87 = icmp eq i32 %86, 0
  %88 = or i32 %85, 536870912
  %89 = select i1 %87, i32 %88, i32 %85
  br label %173

90:                                               ; preds = %12, %39, %5
  %91 = icmp sgt i32 %1, 16383
  br i1 %91, label %94, label %92

92:                                               ; preds = %90
  %93 = trunc i64 %2 to i32
  br label %100

94:                                               ; preds = %90
  %95 = shl i32 %1, 2
  %96 = or i32 %95, 2
  br label %173

97:                                               ; preds = %3
  %98 = trunc i64 %2 to i32
  %99 = icmp eq i32 %1, 0
  br i1 %99, label %160, label %100

100:                                              ; preds = %92, %97
  %101 = phi i32 [ %93, %92 ], [ %98, %97 ]
  %102 = sext i32 %1 to i64
  %103 = getelementptr inbounds i16, i16* %0, i64 %102
  %104 = shl nsw i64 %102, 1
  %105 = add nsw i64 %104, -2
  %106 = lshr exact i64 %105, 1
  %107 = add nuw i64 %106, 1
  %108 = and i64 %107, 3
  %109 = icmp eq i64 %108, 0
  br i1 %109, label %123, label %110

110:                                              ; preds = %100, %110
  %111 = phi i32 [ %120, %110 ], [ %101, %100 ]
  %112 = phi i16* [ %114, %110 ], [ %0, %100 ]
  %113 = phi i64 [ %121, %110 ], [ %108, %100 ]
  %114 = getelementptr inbounds i16, i16* %112, i64 1
  %115 = load i16, i16* %112, align 2
  %116 = zext i16 %115 to i32
  %117 = add i32 %111, %116
  %118 = mul i32 %117, 1025
  %119 = lshr i32 %118, 6
  %120 = xor i32 %119, %118
  %121 = add i64 %113, -1
  %122 = icmp eq i64 %121, 0
  br i1 %122, label %123, label %110, !llvm.loop !14

123:                                              ; preds = %110, %100
  %124 = phi i32 [ undef, %100 ], [ %120, %110 ]
  %125 = phi i32 [ %101, %100 ], [ %120, %110 ]
  %126 = phi i16* [ %0, %100 ], [ %114, %110 ]
  %127 = icmp ult i64 %105, 6
  br i1 %127, label %160, label %128

128:                                              ; preds = %123, %128
  %129 = phi i32 [ %158, %128 ], [ %125, %123 ]
  %130 = phi i16* [ %152, %128 ], [ %126, %123 ]
  %131 = getelementptr inbounds i16, i16* %130, i64 1
  %132 = load i16, i16* %130, align 2
  %133 = zext i16 %132 to i32
  %134 = add i32 %129, %133
  %135 = mul i32 %134, 1025
  %136 = lshr i32 %135, 6
  %137 = xor i32 %136, %135
  %138 = getelementptr inbounds i16, i16* %130, i64 2
  %139 = load i16, i16* %131, align 2
  %140 = zext i16 %139 to i32
  %141 = add i32 %137, %140
  %142 = mul i32 %141, 1025
  %143 = lshr i32 %142, 6
  %144 = xor i32 %143, %142
  %145 = getelementptr inbounds i16, i16* %130, i64 3
  %146 = load i16, i16* %138, align 2
  %147 = zext i16 %146 to i32
  %148 = add i32 %144, %147
  %149 = mul i32 %148, 1025
  %150 = lshr i32 %149, 6
  %151 = xor i32 %150, %149
  %152 = getelementptr inbounds i16, i16* %130, i64 4
  %153 = load i16, i16* %145, align 2
  %154 = zext i16 %153 to i32
  %155 = add i32 %151, %154
  %156 = mul i32 %155, 1025
  %157 = lshr i32 %156, 6
  %158 = xor i32 %157, %156
  %159 = icmp eq i16* %152, %103
  br i1 %159, label %160, label %128

160:                                              ; preds = %123, %128, %97
  %161 = phi i32 [ %98, %97 ], [ %124, %123 ], [ %158, %128 ]
  %162 = mul i32 %161, 9
  %163 = lshr i32 %162, 11
  %164 = xor i32 %163, %162
  %165 = mul i32 %164, 32769
  %166 = and i32 %165, 1073741823
  %167 = add nsw i32 %166, -1
  %168 = ashr i32 %167, 31
  %169 = and i32 %168, 27
  %170 = or i32 %169, %165
  %171 = shl i32 %170, 2
  %172 = or i32 %171, 2
  br label %173

173:                                              ; preds = %36, %160, %94, %72
  %174 = phi i32 [ %89, %72 ], [ %96, %94 ], [ %172, %160 ], [ %38, %36 ]
  ret i32 %174
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.v8::internal::AstRawString"* @_ZN2v88internal15AstValueFactory9GetStringENS0_6HandleINS0_6StringEEE(%"class.v8::internal::AstValueFactory"*, i64*) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.v8::internal::CombinationAssertScope", align 1
  %4 = alloca %"class.v8::internal::String::FlatContent", align 8
  %5 = alloca %"class.v8::internal::Handle<v8::internal::String>::ObjectRef", align 8
  %6 = getelementptr inbounds %"class.v8::internal::CombinationAssertScope", %"class.v8::internal::CombinationAssertScope"* %3, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %6) #15
  %7 = bitcast %"class.v8::internal::String::FlatContent"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %7) #15
  %8 = bitcast %"class.v8::internal::Handle<v8::internal::String>::ObjectRef"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %8) #15
  %9 = load i64, i64* %1, align 8
  %10 = getelementptr inbounds %"class.v8::internal::Handle<v8::internal::String>::ObjectRef", %"class.v8::internal::Handle<v8::internal::String>::ObjectRef"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i64 %9, i64* %10, align 8
  %11 = getelementptr inbounds %"class.v8::internal::Handle<v8::internal::String>::ObjectRef", %"class.v8::internal::Handle<v8::internal::String>::ObjectRef"* %5, i64 0, i32 0
  call void @_ZN2v88internal6String14GetFlatContentERKNS0_22CombinationAssertScopeIJNS0_29PerThreadAssertScopeDebugOnlyILNS0_19PerThreadAssertTypeE0ELb0EEENS3_ILS4_1ELb0EEEEEE(%"class.v8::internal::String::FlatContent"* nonnull sret %4, %"class.v8::internal::String"* nonnull %11, %"class.v8::internal::CombinationAssertScope"* nonnull dereferenceable(1) %3) #15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %8) #15
  %12 = getelementptr inbounds %"class.v8::internal::String::FlatContent", %"class.v8::internal::String::FlatContent"* %4, i64 0, i32 2
  %13 = load i32, i32* %12, align 4
  %14 = icmp eq i32 %13, 1
  br i1 %14, label %15, label %63

15:                                               ; preds = %2
  %16 = getelementptr inbounds %"class.v8::internal::String::FlatContent", %"class.v8::internal::String::FlatContent"* %4, i64 0, i32 0, i32 0
  %17 = load i8*, i8** %16, align 8
  %18 = getelementptr inbounds %"class.v8::internal::String::FlatContent", %"class.v8::internal::String::FlatContent"* %4, i64 0, i32 1
  %19 = load i32, i32* %18, align 8
  %20 = sext i32 %19 to i64
  %21 = icmp eq i32 %19, 1
  br i1 %21, label %22, label %58

22:                                               ; preds = %15
  %23 = load i8, i8* %17, align 1
  %24 = icmp sgt i8 %23, -1
  br i1 %24, label %25, label %58

25:                                               ; preds = %22
  %26 = zext i8 %23 to i64
  %27 = getelementptr inbounds %"class.v8::internal::AstValueFactory", %"class.v8::internal::AstValueFactory"* %0, i64 0, i32 5, i64 %26
  %28 = load %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"** %27, align 8
  %29 = icmp eq %"class.v8::internal::AstRawString"* %28, null
  br i1 %29, label %30, label %75, !prof !3

30:                                               ; preds = %25
  %31 = zext i8 %23 to i32
  %32 = add nsw i32 %31, -48
  %33 = icmp ult i32 %32, 10
  br i1 %33, label %34, label %36

34:                                               ; preds = %30
  %35 = call i32 @_ZN2v88internal12StringHasher18MakeArrayIndexHashEji(i32 %32, i32 1) #15
  br label %55

36:                                               ; preds = %30
  %37 = getelementptr inbounds %"class.v8::internal::AstValueFactory", %"class.v8::internal::AstValueFactory"* %0, i64 0, i32 7
  %38 = load i64, i64* %37, align 8
  %39 = trunc i64 %38 to i32
  %40 = add i32 %39, %31
  %41 = mul i32 %40, 1025
  %42 = lshr i32 %41, 6
  %43 = xor i32 %42, %41
  %44 = mul i32 %43, 9
  %45 = lshr i32 %44, 11
  %46 = xor i32 %45, %44
  %47 = mul i32 %46, 32769
  %48 = and i32 %47, 1073741823
  %49 = add nsw i32 %48, -1
  %50 = ashr i32 %49, 31
  %51 = and i32 %50, 27
  %52 = or i32 %51, %47
  %53 = shl i32 %52, 2
  %54 = or i32 %53, 2
  br label %55

55:                                               ; preds = %34, %36
  %56 = phi i32 [ %54, %36 ], [ %35, %34 ]
  %57 = call %"class.v8::internal::AstRawString"* @_ZN2v88internal15AstValueFactory9GetStringEjbNS0_6VectorIKhEE(%"class.v8::internal::AstValueFactory"* %0, i32 %56, i1 zeroext true, i8* %17, i64 %20) #15
  store %"class.v8::internal::AstRawString"* %57, %"class.v8::internal::AstRawString"** %27, align 8
  br label %75

58:                                               ; preds = %22, %15
  %59 = getelementptr inbounds %"class.v8::internal::AstValueFactory", %"class.v8::internal::AstValueFactory"* %0, i64 0, i32 7
  %60 = load i64, i64* %59, align 8
  %61 = call i32 @_ZN2v88internal12StringHasher20HashSequentialStringIhEEjPKT_im(i8* %17, i32 %19, i64 %60) #15
  %62 = call %"class.v8::internal::AstRawString"* @_ZN2v88internal15AstValueFactory9GetStringEjbNS0_6VectorIKhEE(%"class.v8::internal::AstValueFactory"* %0, i32 %61, i1 zeroext true, i8* %17, i64 %20) #15
  br label %75

63:                                               ; preds = %2
  %64 = bitcast %"class.v8::internal::String::FlatContent"* %4 to i16**
  %65 = load i16*, i16** %64, align 8
  %66 = getelementptr inbounds %"class.v8::internal::String::FlatContent", %"class.v8::internal::String::FlatContent"* %4, i64 0, i32 1
  %67 = load i32, i32* %66, align 8
  %68 = sext i32 %67 to i64
  %69 = getelementptr inbounds %"class.v8::internal::AstValueFactory", %"class.v8::internal::AstValueFactory"* %0, i64 0, i32 7
  %70 = load i64, i64* %69, align 8
  %71 = call i32 @_ZN2v88internal12StringHasher20HashSequentialStringItEEjPKT_im(i16* %65, i32 %67, i64 %70) #15
  %72 = bitcast i16* %65 to i8*
  %73 = shl nsw i64 %68, 1
  %74 = call %"class.v8::internal::AstRawString"* @_ZN2v88internal15AstValueFactory9GetStringEjbNS0_6VectorIKhEE(%"class.v8::internal::AstValueFactory"* %0, i32 %71, i1 zeroext false, i8* %72, i64 %73) #15
  br label %75

75:                                               ; preds = %58, %55, %25, %63
  %76 = phi %"class.v8::internal::AstRawString"* [ %74, %63 ], [ %62, %58 ], [ %57, %55 ], [ %28, %25 ]
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %7) #15
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %6) #15
  ret %"class.v8::internal::AstRawString"* %76
}

declare void @_ZN2v88internal6String14GetFlatContentERKNS0_22CombinationAssertScopeIJNS0_29PerThreadAssertScopeDebugOnlyILNS0_19PerThreadAssertTypeE0ELb0EEENS3_ILS4_1ELb0EEEEEE(%"class.v8::internal::String::FlatContent"* sret, %"class.v8::internal::String"*, %"class.v8::internal::CombinationAssertScope"* dereferenceable(1)) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden %"class.v8::internal::AstRawString"* @_ZN2v88internal15AstValueFactory21CloneFromOtherFactoryEPKNS0_12AstRawStringE(%"class.v8::internal::AstValueFactory"*, %"class.v8::internal::AstRawString"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.v8::internal::AstRawString", %"class.v8::internal::AstRawString"* %1, i64 0, i32 2
  %4 = load i32, i32* %3, align 8
  %5 = getelementptr inbounds %"class.v8::internal::AstRawString", %"class.v8::internal::AstRawString"* %1, i64 0, i32 3
  %6 = load i8, i8* %5, align 4, !range !2
  %7 = icmp ne i8 %6, 0
  %8 = getelementptr inbounds %"class.v8::internal::AstRawString", %"class.v8::internal::AstRawString"* %1, i64 0, i32 1, i32 0
  %9 = load i8*, i8** %8, align 8
  %10 = getelementptr inbounds %"class.v8::internal::AstRawString", %"class.v8::internal::AstRawString"* %1, i64 0, i32 1, i32 1
  %11 = load i64, i64* %10, align 8
  %12 = shl i64 %11, 32
  %13 = ashr exact i64 %12, 32
  %14 = tail call %"class.v8::internal::AstRawString"* @_ZN2v88internal15AstValueFactory9GetStringEjbNS0_6VectorIKhEE(%"class.v8::internal::AstValueFactory"* %0, i32 %4, i1 zeroext %7, i8* %9, i64 %13)
  ret %"class.v8::internal::AstRawString"* %14
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.v8::internal::AstConsString"* @_ZN2v88internal15AstValueFactory13NewConsStringEv(%"class.v8::internal::AstValueFactory"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::AstValueFactory", %"class.v8::internal::AstValueFactory"* %0, i64 0, i32 6
  %3 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %2, align 8
  %4 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %3, i64 0, i32 2
  %5 = load i64, i64* %4, align 8
  %6 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %3, i64 0, i32 3
  %7 = load i64, i64* %6, align 8
  %8 = sub i64 %7, %5
  %9 = icmp ult i64 %8, 24
  br i1 %9, label %10, label %12, !prof !3

10:                                               ; preds = %1
  %11 = tail call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %3, i64 24) #15
  br label %14

12:                                               ; preds = %1
  %13 = add i64 %5, 24
  store i64 %13, i64* %4, align 8
  br label %14

14:                                               ; preds = %10, %12
  %15 = phi i64 [ %11, %10 ], [ %5, %12 ]
  %16 = inttoptr i64 %15 to i8*
  %17 = inttoptr i64 %15 to %"class.v8::internal::AstConsString"*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %16, i8 0, i64 24, i1 false) #15
  ret %"class.v8::internal::AstConsString"* %17
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.v8::internal::AstConsString"* @_ZN2v88internal15AstValueFactory13NewConsStringEPKNS0_12AstRawStringE(%"class.v8::internal::AstValueFactory"* nocapture readonly, %"class.v8::internal::AstRawString"*) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.v8::internal::AstValueFactory", %"class.v8::internal::AstValueFactory"* %0, i64 0, i32 6
  %4 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %3, align 8
  %5 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %4, i64 0, i32 2
  %6 = load i64, i64* %5, align 8
  %7 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %4, i64 0, i32 3
  %8 = load i64, i64* %7, align 8
  %9 = sub i64 %8, %6
  %10 = icmp ult i64 %9, 24
  br i1 %10, label %11, label %13, !prof !3

11:                                               ; preds = %2
  %12 = tail call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %4, i64 24) #15
  br label %15

13:                                               ; preds = %2
  %14 = add i64 %6, 24
  store i64 %14, i64* %5, align 8
  br label %15

15:                                               ; preds = %11, %13
  %16 = phi i64 [ %12, %11 ], [ %6, %13 ]
  %17 = inttoptr i64 %16 to i8*
  %18 = inttoptr i64 %16 to %"class.v8::internal::AstConsString"*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %17, i8 0, i64 24, i1 false) #15
  %19 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %3, align 8
  %20 = getelementptr inbounds %"class.v8::internal::AstRawString", %"class.v8::internal::AstRawString"* %1, i64 0, i32 1, i32 1
  %21 = load i64, i64* %20, align 8
  %22 = trunc i64 %21 to i32
  %23 = icmp eq i32 %22, 0
  br i1 %23, label %47, label %24

24:                                               ; preds = %15
  %25 = getelementptr inbounds %"class.v8::internal::AstConsString", %"class.v8::internal::AstConsString"* %18, i64 0, i32 1, i32 0
  %26 = load %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"** %25, align 8
  %27 = icmp eq %"class.v8::internal::AstRawString"* %26, null
  br i1 %27, label %46, label %28

28:                                               ; preds = %24
  %29 = getelementptr inbounds %"class.v8::internal::AstConsString", %"class.v8::internal::AstConsString"* %18, i64 0, i32 1
  %30 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %19, i64 0, i32 2
  %31 = load i64, i64* %30, align 8
  %32 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %19, i64 0, i32 3
  %33 = load i64, i64* %32, align 8
  %34 = sub i64 %33, %31
  %35 = icmp ult i64 %34, 16
  br i1 %35, label %36, label %38, !prof !3

36:                                               ; preds = %28
  %37 = tail call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %19, i64 16) #15
  br label %40

38:                                               ; preds = %28
  %39 = add i64 %31, 16
  store i64 %39, i64* %30, align 8
  br label %40

40:                                               ; preds = %38, %36
  %41 = phi i64 [ %37, %36 ], [ %31, %38 ]
  %42 = inttoptr i64 %41 to i8*
  %43 = inttoptr i64 %41 to %"struct.v8::internal::AstConsString::Segment"*
  %44 = bitcast %"struct.v8::internal::AstConsString::Segment"* %29 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %42, i8* align 8 %44, i64 16, i1 false) #15
  %45 = getelementptr inbounds %"class.v8::internal::AstConsString", %"class.v8::internal::AstConsString"* %18, i64 0, i32 1, i32 1
  store %"struct.v8::internal::AstConsString::Segment"* %43, %"struct.v8::internal::AstConsString::Segment"** %45, align 8
  br label %46

46:                                               ; preds = %40, %24
  store %"class.v8::internal::AstRawString"* %1, %"class.v8::internal::AstRawString"** %25, align 8
  br label %47

47:                                               ; preds = %15, %46
  ret %"class.v8::internal::AstConsString"* %18
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.v8::internal::AstConsString"* @_ZN2v88internal15AstValueFactory13NewConsStringEPKNS0_12AstRawStringES4_(%"class.v8::internal::AstValueFactory"* nocapture readonly, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*) local_unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.v8::internal::AstValueFactory", %"class.v8::internal::AstValueFactory"* %0, i64 0, i32 6
  %5 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %4, align 8
  %6 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %5, i64 0, i32 2
  %7 = load i64, i64* %6, align 8
  %8 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %5, i64 0, i32 3
  %9 = load i64, i64* %8, align 8
  %10 = sub i64 %9, %7
  %11 = icmp ult i64 %10, 24
  br i1 %11, label %12, label %14, !prof !3

12:                                               ; preds = %3
  %13 = tail call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %5, i64 24) #15
  br label %16

14:                                               ; preds = %3
  %15 = add i64 %7, 24
  store i64 %15, i64* %6, align 8
  br label %16

16:                                               ; preds = %12, %14
  %17 = phi i64 [ %13, %12 ], [ %7, %14 ]
  %18 = inttoptr i64 %17 to i8*
  %19 = inttoptr i64 %17 to %"class.v8::internal::AstConsString"*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %18, i8 0, i64 24, i1 false) #15
  %20 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %4, align 8
  %21 = getelementptr inbounds %"class.v8::internal::AstRawString", %"class.v8::internal::AstRawString"* %1, i64 0, i32 1, i32 1
  %22 = load i64, i64* %21, align 8
  %23 = trunc i64 %22 to i32
  %24 = icmp eq i32 %23, 0
  br i1 %24, label %49, label %25

25:                                               ; preds = %16
  %26 = getelementptr inbounds %"class.v8::internal::AstConsString", %"class.v8::internal::AstConsString"* %19, i64 0, i32 1, i32 0
  %27 = load %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"** %26, align 8
  %28 = icmp eq %"class.v8::internal::AstRawString"* %27, null
  br i1 %28, label %47, label %29

29:                                               ; preds = %25
  %30 = getelementptr inbounds %"class.v8::internal::AstConsString", %"class.v8::internal::AstConsString"* %19, i64 0, i32 1
  %31 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %20, i64 0, i32 2
  %32 = load i64, i64* %31, align 8
  %33 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %20, i64 0, i32 3
  %34 = load i64, i64* %33, align 8
  %35 = sub i64 %34, %32
  %36 = icmp ult i64 %35, 16
  br i1 %36, label %37, label %39, !prof !3

37:                                               ; preds = %29
  %38 = tail call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %20, i64 16) #15
  br label %41

39:                                               ; preds = %29
  %40 = add i64 %32, 16
  store i64 %40, i64* %31, align 8
  br label %41

41:                                               ; preds = %39, %37
  %42 = phi i64 [ %38, %37 ], [ %32, %39 ]
  %43 = inttoptr i64 %42 to i8*
  %44 = inttoptr i64 %42 to %"struct.v8::internal::AstConsString::Segment"*
  %45 = bitcast %"struct.v8::internal::AstConsString::Segment"* %30 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %43, i8* align 8 %45, i64 16, i1 false) #15
  %46 = getelementptr inbounds %"class.v8::internal::AstConsString", %"class.v8::internal::AstConsString"* %19, i64 0, i32 1, i32 1
  store %"struct.v8::internal::AstConsString::Segment"* %44, %"struct.v8::internal::AstConsString::Segment"** %46, align 8
  br label %47

47:                                               ; preds = %41, %25
  store %"class.v8::internal::AstRawString"* %1, %"class.v8::internal::AstRawString"** %26, align 8
  %48 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %4, align 8
  br label %49

49:                                               ; preds = %16, %47
  %50 = phi %"class.v8::internal::Zone"* [ %20, %16 ], [ %48, %47 ]
  %51 = getelementptr inbounds %"class.v8::internal::AstRawString", %"class.v8::internal::AstRawString"* %2, i64 0, i32 1, i32 1
  %52 = load i64, i64* %51, align 8
  %53 = trunc i64 %52 to i32
  %54 = icmp eq i32 %53, 0
  br i1 %54, label %78, label %55

55:                                               ; preds = %49
  %56 = getelementptr inbounds %"class.v8::internal::AstConsString", %"class.v8::internal::AstConsString"* %19, i64 0, i32 1, i32 0
  %57 = load %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"** %56, align 8
  %58 = icmp eq %"class.v8::internal::AstRawString"* %57, null
  br i1 %58, label %77, label %59

59:                                               ; preds = %55
  %60 = getelementptr inbounds %"class.v8::internal::AstConsString", %"class.v8::internal::AstConsString"* %19, i64 0, i32 1
  %61 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %50, i64 0, i32 2
  %62 = load i64, i64* %61, align 8
  %63 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %50, i64 0, i32 3
  %64 = load i64, i64* %63, align 8
  %65 = sub i64 %64, %62
  %66 = icmp ult i64 %65, 16
  br i1 %66, label %67, label %69, !prof !3

67:                                               ; preds = %59
  %68 = tail call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %50, i64 16) #15
  br label %71

69:                                               ; preds = %59
  %70 = add i64 %62, 16
  store i64 %70, i64* %61, align 8
  br label %71

71:                                               ; preds = %69, %67
  %72 = phi i64 [ %68, %67 ], [ %62, %69 ]
  %73 = inttoptr i64 %72 to i8*
  %74 = inttoptr i64 %72 to %"struct.v8::internal::AstConsString::Segment"*
  %75 = bitcast %"struct.v8::internal::AstConsString::Segment"* %60 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %73, i8* align 8 %75, i64 16, i1 false) #15
  %76 = getelementptr inbounds %"class.v8::internal::AstConsString", %"class.v8::internal::AstConsString"* %19, i64 0, i32 1, i32 1
  store %"struct.v8::internal::AstConsString::Segment"* %74, %"struct.v8::internal::AstConsString::Segment"** %76, align 8
  br label %77

77:                                               ; preds = %71, %55
  store %"class.v8::internal::AstRawString"* %2, %"class.v8::internal::AstRawString"** %56, align 8
  br label %78

78:                                               ; preds = %49, %77
  ret %"class.v8::internal::AstConsString"* %19
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #9

declare i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"*, i64) local_unnamed_addr #2

; Function Attrs: noreturn
declare void @_Z8V8_FatalPKcz(i8*, ...) local_unnamed_addr #10

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2v88internal19SequentialStringKeyIhED0Ev(%"class.v8::internal::SequentialStringKey"*) unnamed_addr #8 comdat align 2 {
  %2 = bitcast %"class.v8::internal::SequentialStringKey"* %0 to i8*
  tail call void @_ZdlPv(i8* %2) #18
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2v88internal19SequentialStringKeyItED0Ev(%"class.v8::internal::SequentialStringKey.1131"*) unnamed_addr #8 comdat align 2 {
  %2 = bitcast %"class.v8::internal::SequentialStringKey.1131"* %0 to i8*
  tail call void @_ZdlPv(i8* %2) #18
  ret void
}

; Function Attrs: nofree nounwind readonly
declare i32 @memcmp(i8* nocapture, i8* nocapture, i64) local_unnamed_addr #6

; Function Attrs: argmemonly nounwind
declare void @llvm.memmove.p0i8.p0i8.i64(i8* nocapture, i8* nocapture readonly, i64, i1 immarg) #1

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #11

; Function Attrs: nofree nounwind
declare noalias i8* @malloc(i64) local_unnamed_addr #12

declare i32 @_ZN2v88internal12StringHasher18MakeArrayIndexHashEji(i32, i32) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2v84base19TemplateHashMapImplIPKNS_8internal12AstRawStringENS0_14NoHashMapValueENS2_22AstRawStringMapMatcherENS0_23DefaultAllocationPolicyEE6ResizeEv(%"class.v8::base::TemplateHashMapImpl"*) local_unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.v8::base::TemplateHashMapImpl", %"class.v8::base::TemplateHashMapImpl"* %0, i64 0, i32 0, i32 0
  %3 = load %"struct.v8::base::TemplateHashMapEntry"*, %"struct.v8::base::TemplateHashMapEntry"** %2, align 8
  %4 = getelementptr inbounds %"class.v8::base::TemplateHashMapImpl", %"class.v8::base::TemplateHashMapImpl"* %0, i64 0, i32 0, i32 1
  %5 = load i32, i32* %4, align 8
  %6 = getelementptr inbounds %"class.v8::base::TemplateHashMapImpl", %"class.v8::base::TemplateHashMapImpl"* %0, i64 0, i32 0, i32 2
  %7 = load i32, i32* %6, align 4
  %8 = shl i32 %5, 1
  %9 = zext i32 %8 to i64
  %10 = shl nuw nsw i64 %9, 4
  %11 = tail call noalias i8* @malloc(i64 %10) #15
  %12 = bitcast %"class.v8::base::TemplateHashMapImpl"* %0 to i8**
  store i8* %11, i8** %12, align 8
  %13 = icmp eq i8* %11, null
  br i1 %13, label %14, label %15

14:                                               ; preds = %1
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.57, i64 0, i64 0)) #16
  unreachable

15:                                               ; preds = %1
  store i32 %8, i32* %4, align 8
  %16 = icmp eq i32 %8, 0
  br i1 %16, label %31, label %17

17:                                               ; preds = %15
  %18 = bitcast i8* %11 to %"class.v8::internal::AstRawString"**
  store %"class.v8::internal::AstRawString"* null, %"class.v8::internal::AstRawString"** %18, align 8
  %19 = getelementptr inbounds i8, i8* %11, i64 16
  %20 = bitcast i8* %19 to %"class.v8::internal::AstRawString"**
  store %"class.v8::internal::AstRawString"* null, %"class.v8::internal::AstRawString"** %20, align 8
  %21 = load i32, i32* %4, align 8
  %22 = icmp ugt i32 %21, 2
  br i1 %22, label %23, label %31

23:                                               ; preds = %17, %23
  %24 = phi i64 [ %27, %23 ], [ 2, %17 ]
  %25 = load %"struct.v8::base::TemplateHashMapEntry"*, %"struct.v8::base::TemplateHashMapEntry"** %2, align 8
  %26 = getelementptr inbounds %"struct.v8::base::TemplateHashMapEntry", %"struct.v8::base::TemplateHashMapEntry"* %25, i64 %24, i32 0, i32 0
  store %"class.v8::internal::AstRawString"* null, %"class.v8::internal::AstRawString"** %26, align 8
  %27 = add nuw nsw i64 %24, 1
  %28 = load i32, i32* %4, align 8
  %29 = zext i32 %28 to i64
  %30 = icmp ult i64 %27, %29
  br i1 %30, label %23, label %31

31:                                               ; preds = %23, %17, %15
  %32 = phi i32 [ 0, %15 ], [ %21, %17 ], [ %28, %23 ]
  store i32 0, i32* %6, align 4
  %33 = icmp eq i32 %7, 0
  br i1 %33, label %34, label %36

34:                                               ; preds = %111, %31
  %35 = bitcast %"struct.v8::base::TemplateHashMapEntry"* %3 to i8*
  tail call void @free(i8* %35) #15
  ret void

36:                                               ; preds = %31, %111
  %37 = phi i32 [ %112, %111 ], [ %32, %31 ]
  %38 = phi i32 [ %113, %111 ], [ %7, %31 ]
  %39 = phi %"struct.v8::base::TemplateHashMapEntry"* [ %114, %111 ], [ %3, %31 ]
  %40 = getelementptr inbounds %"struct.v8::base::TemplateHashMapEntry", %"struct.v8::base::TemplateHashMapEntry"* %39, i64 0, i32 0, i32 0
  %41 = load %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"** %40, align 8
  %42 = icmp eq %"class.v8::internal::AstRawString"* %41, null
  br i1 %42, label %111, label %43

43:                                               ; preds = %36
  %44 = getelementptr inbounds %"struct.v8::base::TemplateHashMapEntry", %"struct.v8::base::TemplateHashMapEntry"* %39, i64 0, i32 1
  %45 = load i32, i32* %44, align 8
  %46 = add i32 %37, -1
  %47 = and i32 %46, %45
  %48 = zext i32 %47 to i64
  %49 = load %"struct.v8::base::TemplateHashMapEntry"*, %"struct.v8::base::TemplateHashMapEntry"** %2, align 8
  %50 = getelementptr inbounds %"struct.v8::base::TemplateHashMapEntry", %"struct.v8::base::TemplateHashMapEntry"* %49, i64 %48
  %51 = getelementptr inbounds %"struct.v8::base::TemplateHashMapEntry", %"struct.v8::base::TemplateHashMapEntry"* %50, i64 0, i32 0, i32 0
  %52 = load %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"** %51, align 8
  %53 = icmp eq %"class.v8::internal::AstRawString"* %52, null
  br i1 %53, label %72, label %54

54:                                               ; preds = %43
  %55 = zext i32 %46 to i64
  br label %56

56:                                               ; preds = %65, %54
  %57 = phi %"class.v8::internal::AstRawString"* [ %52, %54 ], [ %70, %65 ]
  %58 = phi %"struct.v8::base::TemplateHashMapEntry"* [ %50, %54 ], [ %68, %65 ]
  %59 = phi i64 [ %48, %54 ], [ %67, %65 ]
  %60 = getelementptr inbounds %"struct.v8::base::TemplateHashMapEntry", %"struct.v8::base::TemplateHashMapEntry"* %49, i64 %59, i32 1
  %61 = load i32, i32* %60, align 8
  %62 = icmp eq i32 %61, %45
  br i1 %62, label %63, label %65

63:                                               ; preds = %56
  %64 = tail call zeroext i1 @_ZN2v88internal12AstRawString5EqualEPKS1_S3_(%"class.v8::internal::AstRawString"* nonnull %41, %"class.v8::internal::AstRawString"* nonnull %57) #15
  br i1 %64, label %72, label %65

65:                                               ; preds = %63, %56
  %66 = add nuw nsw i64 %59, 1
  %67 = and i64 %66, %55
  %68 = getelementptr inbounds %"struct.v8::base::TemplateHashMapEntry", %"struct.v8::base::TemplateHashMapEntry"* %49, i64 %67
  %69 = getelementptr inbounds %"struct.v8::base::TemplateHashMapEntry", %"struct.v8::base::TemplateHashMapEntry"* %68, i64 0, i32 0, i32 0
  %70 = load %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"** %69, align 8
  %71 = icmp eq %"class.v8::internal::AstRawString"* %70, null
  br i1 %71, label %72, label %56

72:                                               ; preds = %63, %65, %43
  %73 = phi %"struct.v8::base::TemplateHashMapEntry"* [ %50, %43 ], [ %58, %63 ], [ %68, %65 ]
  %74 = getelementptr inbounds %"struct.v8::base::TemplateHashMapEntry", %"struct.v8::base::TemplateHashMapEntry"* %73, i64 0, i32 0, i32 0
  store %"class.v8::internal::AstRawString"* %41, %"class.v8::internal::AstRawString"** %74, align 8
  %75 = getelementptr inbounds %"struct.v8::base::TemplateHashMapEntry", %"struct.v8::base::TemplateHashMapEntry"* %73, i64 0, i32 1
  store i32 %45, i32* %75, align 8
  %76 = load i32, i32* %6, align 4
  %77 = add i32 %76, 1
  store i32 %77, i32* %6, align 4
  %78 = lshr i32 %77, 2
  %79 = add i32 %78, %77
  %80 = load i32, i32* %4, align 8
  %81 = icmp ult i32 %79, %80
  br i1 %81, label %108, label %82

82:                                               ; preds = %72
  tail call void @_ZN2v84base19TemplateHashMapImplIPKNS_8internal12AstRawStringENS0_14NoHashMapValueENS2_22AstRawStringMapMatcherENS0_23DefaultAllocationPolicyEE6ResizeEv(%"class.v8::base::TemplateHashMapImpl"* %0) #15
  %83 = load i32, i32* %4, align 8
  %84 = add i32 %83, -1
  %85 = and i32 %84, %45
  %86 = zext i32 %85 to i64
  %87 = load %"struct.v8::base::TemplateHashMapEntry"*, %"struct.v8::base::TemplateHashMapEntry"** %2, align 8
  %88 = getelementptr inbounds %"struct.v8::base::TemplateHashMapEntry", %"struct.v8::base::TemplateHashMapEntry"* %87, i64 %86, i32 0, i32 0
  %89 = load %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"** %88, align 8
  %90 = icmp eq %"class.v8::internal::AstRawString"* %89, null
  br i1 %90, label %108, label %91

91:                                               ; preds = %82
  %92 = load %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"** %40, align 8
  %93 = zext i32 %84 to i64
  br label %94

94:                                               ; preds = %102, %91
  %95 = phi %"class.v8::internal::AstRawString"* [ %89, %91 ], [ %106, %102 ]
  %96 = phi i64 [ %86, %91 ], [ %104, %102 ]
  %97 = getelementptr inbounds %"struct.v8::base::TemplateHashMapEntry", %"struct.v8::base::TemplateHashMapEntry"* %87, i64 %96, i32 1
  %98 = load i32, i32* %97, align 8
  %99 = icmp eq i32 %98, %45
  br i1 %99, label %100, label %102

100:                                              ; preds = %94
  %101 = tail call zeroext i1 @_ZN2v88internal12AstRawString5EqualEPKS1_S3_(%"class.v8::internal::AstRawString"* %92, %"class.v8::internal::AstRawString"* nonnull %95) #15
  br i1 %101, label %108, label %102

102:                                              ; preds = %100, %94
  %103 = add nuw nsw i64 %96, 1
  %104 = and i64 %103, %93
  %105 = getelementptr inbounds %"struct.v8::base::TemplateHashMapEntry", %"struct.v8::base::TemplateHashMapEntry"* %87, i64 %104, i32 0, i32 0
  %106 = load %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"** %105, align 8
  %107 = icmp eq %"class.v8::internal::AstRawString"* %106, null
  br i1 %107, label %108, label %94

108:                                              ; preds = %100, %102, %82, %72
  %109 = phi i32 [ %83, %82 ], [ %80, %72 ], [ %83, %102 ], [ %83, %100 ]
  %110 = add i32 %38, -1
  br label %111

111:                                              ; preds = %36, %108
  %112 = phi i32 [ %109, %108 ], [ %37, %36 ]
  %113 = phi i32 [ %110, %108 ], [ %38, %36 ]
  %114 = getelementptr inbounds %"struct.v8::base::TemplateHashMapEntry", %"struct.v8::base::TemplateHashMapEntry"* %39, i64 1
  %115 = icmp eq i32 %113, 0
  br i1 %115, label %34, label %36
}

; Function Attrs: nounwind
declare void @free(i8* nocapture) local_unnamed_addr #13

; Function Attrs: nofree nounwind readonly
declare i32 @bcmp(i8* nocapture, i8* nocapture, i64) local_unnamed_addr #14

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { argmemonly nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nofree nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #11 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #12 = { nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #13 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #14 = { nofree nounwind readonly }
attributes #15 = { nounwind }
attributes #16 = { noreturn nounwind }
attributes #17 = { nounwind readonly }
attributes #18 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
!3 = !{!"branch_weights", i32 1, i32 2000}
!4 = !{!5}
!5 = distinct !{!5, !6}
!6 = distinct !{!6, !"LVerDomain"}
!7 = !{!8}
!8 = distinct !{!8, !6}
!9 = distinct !{!9, !10}
!10 = !{!"llvm.loop.isvectorized", i32 1}
!11 = distinct !{!11, !10}
!12 = distinct !{!12, !13}
!13 = !{!"llvm.loop.unroll.disable"}
!14 = distinct !{!14, !13}
