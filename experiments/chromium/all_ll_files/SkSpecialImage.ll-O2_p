; ModuleID = '../../third_party/skia/src/core/SkSpecialImage.cpp'
source_filename = "../../third_party/skia/src/core/SkSpecialImage.cpp"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%class.SkSpecialImage = type { %class.SkRefCnt.base, %class.SkSurfaceProps, %struct.SkIRect, i32 }
%class.SkRefCnt.base = type { %class.SkRefCntBase.base }
%class.SkRefCntBase.base = type <{ i32 (...)**, %"struct.std::__1::atomic" }>
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.0" }
%"struct.std::__1::__atomic_base.0" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%class.SkSurfaceProps = type { i32, i32 }
%struct.SkIRect = type { i32, i32, i32, i32 }
%class.SkCanvas = type { i32 (...)**, %class.SkDeque, %"class.SkCanvas::MCRec"*, %class.sk_sp, [384 x i64], %class.sk_sp.1, %class.SkSurfaceProps, i32, %"class.std::__1::unique_ptr", %class.SkSurface_Base*, %struct.SkIRect, %struct.SkRect, %"class.std::__1::unique_ptr.3" }
%class.SkDeque = type { i8*, i8*, %"struct.SkDeque::Block"*, %"struct.SkDeque::Block"*, i64, i8*, i32, i32 }
%"struct.SkDeque::Block" = type opaque
%"class.SkCanvas::MCRec" = type opaque
%class.sk_sp = type { %class.SkMarkerStack* }
%class.SkMarkerStack = type opaque
%class.sk_sp.1 = type { %class.SkBaseDevice* }
%class.SkBaseDevice = type opaque
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %class.SkRasterHandleAllocator* }
%class.SkRasterHandleAllocator = type { i32 (...)** }
%class.SkSurface_Base = type opaque
%struct.SkRect = type { float, float, float, float }
%"class.std::__1::unique_ptr.3" = type { %"class.std::__1::__compressed_pair.4" }
%"class.std::__1::__compressed_pair.4" = type { %"struct.std::__1::__compressed_pair_elem.5" }
%"struct.std::__1::__compressed_pair_elem.5" = type { %class.SkGlyphRunBuilder* }
%class.SkGlyphRunBuilder = type opaque
%struct.SkSamplingOptions = type { i8, %struct.SkCubicResampler, i32, i32 }
%struct.SkCubicResampler = type { float, float }
%class.SkPaint = type <{ %class.sk_sp.9, %class.sk_sp.10, %class.sk_sp.11, %class.sk_sp.12, %class.sk_sp.13, %struct.SkRGBA4f, float, float, %union.anon, [4 x i8] }>
%class.sk_sp.9 = type { %class.SkPathEffect* }
%class.SkPathEffect = type opaque
%class.sk_sp.10 = type { %class.SkShader* }
%class.SkShader = type { %class.SkFlattenable.base, [4 x i8] }
%class.SkFlattenable.base = type { %class.SkRefCnt.base }
%class.sk_sp.11 = type { %class.SkMaskFilter* }
%class.SkMaskFilter = type { %class.SkFlattenable.base, [4 x i8] }
%class.sk_sp.12 = type { %class.SkColorFilter* }
%class.SkColorFilter = type opaque
%class.sk_sp.13 = type { %class.SkImageFilter* }
%class.SkImageFilter = type opaque
%struct.SkRGBA4f = type { float, float, float, float }
%union.anon = type { %struct.anon }
%struct.anon = type { i32 }
%class.SkSpecialImage_Base = type { %class.SkSpecialImage }
%class.SkBitmap = type { %class.sk_sp.14, %class.SkPixmap, %class.sk_sp.21 }
%class.sk_sp.14 = type { %class.SkPixelRef* }
%class.SkPixelRef = type opaque
%class.SkPixmap = type { i8*, i64, %struct.SkImageInfo }
%struct.SkImageInfo = type { %class.SkColorInfo, %struct.SkISize }
%class.SkColorInfo = type { %class.sk_sp.15, i32, i32 }
%class.sk_sp.15 = type { %class.SkColorSpace* }
%class.SkColorSpace = type <{ %class.SkNVRefCnt, i32, i32, %struct.skcms_TransferFunction, %struct.skcms_Matrix3x3, %struct.skcms_TransferFunction, %struct.skcms_Matrix3x3, %class.SkOnce, [3 x i8] }>
%class.SkNVRefCnt = type { %"struct.std::__1::atomic" }
%struct.skcms_TransferFunction = type { float, float, float, float, float, float, float }
%struct.skcms_Matrix3x3 = type { [3 x [3 x float]] }
%class.SkOnce = type { %"struct.std::__1::atomic.16" }
%"struct.std::__1::atomic.16" = type { %"struct.std::__1::__atomic_base.17" }
%"struct.std::__1::__atomic_base.17" = type { %"struct.std::__1::__atomic_base.18" }
%"struct.std::__1::__atomic_base.18" = type { %"struct.std::__1::__cxx_atomic_impl.19" }
%"struct.std::__1::__cxx_atomic_impl.19" = type { %"struct.std::__1::__cxx_atomic_base_impl.20" }
%"struct.std::__1::__cxx_atomic_base_impl.20" = type { i8 }
%struct.SkISize = type { i32, i32 }
%class.sk_sp.21 = type { %class.SkMipmap* }
%class.SkMipmap = type <{ %class.SkCachedData.base, [6 x i8], %class.sk_sp.15, %"struct.SkMipmap::Level"*, i32, [4 x i8] }>
%class.SkCachedData.base = type <{ i32 (...)**, %class.SkMutex, %union.anon.22, i8*, i64, i32, i32, i8, i8 }>
%class.SkMutex = type { %class.SkSemaphore }
%class.SkSemaphore = type { %"struct.std::__1::atomic", %class.SkOnce, %"struct.SkSemaphore::OSSemaphore"* }
%"struct.SkSemaphore::OSSemaphore" = type opaque
%union.anon.22 = type { %class.SkDiscardableMemory* }
%class.SkDiscardableMemory = type opaque
%"struct.SkMipmap::Level" = type { %class.SkPixmap, %struct.SkSize }
%struct.SkSize = type { float, float }
%class.GrRecordingContext = type { %class.GrImageContext.base, %"class.GrRecordingContext::Stats", %"class.std::__1::unique_ptr.44", %"class.GrRecordingContext::OwnedArenas", %"class.std::__1::unique_ptr.83", %"class.std::__1::unique_ptr.89" }
%class.GrImageContext.base = type <{ %class.GrContext_Base, %class.GrSingleOwner }>
%class.GrContext_Base = type { %class.SkRefCnt.base, %class.sk_sp.23 }
%class.sk_sp.23 = type { %class.GrContextThreadSafeProxy* }
%class.GrContextThreadSafeProxy = type <{ %class.SkNVRefCnt.24, i32, %struct.GrContextOptions, i32, [4 x i8], %class.sk_sp.25, %"class.std::__1::unique_ptr.27", %"class.std::__1::unique_ptr.33", %class.sk_sp.39, %"struct.std::__1::atomic.40", [7 x i8] }>
%class.SkNVRefCnt.24 = type { %"struct.std::__1::atomic" }
%struct.GrContextOptions = type { i8, i32, i32, i32, %class.SkExecutor*, i8, i8, i8, i8, i8, i64, float, float, i32, i8, i8, i32, i32, i8, i8, i32, %"class.GrContextOptions::PersistentCache"*, i32, %"class.GrContextOptions::ShaderErrorHandler"*, i32, i32, i8, i8, %class.GrDriverBugWorkarounds }
%class.SkExecutor = type opaque
%"class.GrContextOptions::PersistentCache" = type { i32 (...)** }
%"class.GrContextOptions::ShaderErrorHandler" = type { i32 (...)** }
%class.GrDriverBugWorkarounds = type { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 }
%class.sk_sp.25 = type { %class.GrCaps* }
%class.GrCaps = type <{ %class.SkRefCnt.base, [4 x i8], %class.sk_sp.26, i48, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [4 x i8], i64, %class.GrDriverBugWorkarounds, i8, i8 }>
%class.sk_sp.26 = type { %class.GrShaderCaps* }
%class.GrShaderCaps = type <{ %class.SkRefCnt.base, i32, i56, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i32, i32, i32, [4 x i8] }>
%"class.std::__1::unique_ptr.27" = type { %"class.std::__1::__compressed_pair.28" }
%"class.std::__1::__compressed_pair.28" = type { %"struct.std::__1::__compressed_pair_elem.29" }
%"struct.std::__1::__compressed_pair_elem.29" = type { %class.GrTextBlobCache* }
%class.GrTextBlobCache = type opaque
%"class.std::__1::unique_ptr.33" = type { %"class.std::__1::__compressed_pair.34" }
%"class.std::__1::__compressed_pair.34" = type { %"struct.std::__1::__compressed_pair_elem.35" }
%"struct.std::__1::__compressed_pair_elem.35" = type { %class.GrThreadSafeCache* }
%class.GrThreadSafeCache = type opaque
%class.sk_sp.39 = type { %class.GrThreadSafePipelineBuilder* }
%class.GrThreadSafePipelineBuilder = type opaque
%"struct.std::__1::atomic.40" = type { %"struct.std::__1::__atomic_base.41" }
%"struct.std::__1::__atomic_base.41" = type { %"struct.std::__1::__cxx_atomic_impl.42" }
%"struct.std::__1::__cxx_atomic_impl.42" = type { %"struct.std::__1::__cxx_atomic_base_impl.43" }
%"struct.std::__1::__cxx_atomic_base_impl.43" = type { i8 }
%class.GrSingleOwner = type { i8 }
%"class.GrRecordingContext::Stats" = type { i8 }
%"class.std::__1::unique_ptr.44" = type { %"class.std::__1::__compressed_pair.45" }
%"class.std::__1::__compressed_pair.45" = type { %"struct.std::__1::__compressed_pair_elem.46" }
%"struct.std::__1::__compressed_pair_elem.46" = type { %class.GrAuditTrail* }
%class.GrAuditTrail = type <{ %class.SkTArray, %class.SkTHashMap, %class.SkTHashMap.54, %class.SkTArray.63, %class.SkTArray.65, i32, i8, [3 x i8] }>
%class.SkTArray = type { %"class.std::__1::unique_ptr.47"*, i64 }
%"class.std::__1::unique_ptr.47" = type { %"class.std::__1::__compressed_pair.205" }
%"class.std::__1::__compressed_pair.205" = type { %"struct.std::__1::__compressed_pair_elem.206" }
%"struct.std::__1::__compressed_pair_elem.206" = type { %"struct.GrAuditTrail::Op"* }
%"struct.GrAuditTrail::Op" = type <{ %class.SkString, %class.SkTArray.65, %struct.SkRect, i32, i32, i32, [4 x i8] }>
%class.SkString = type { %class.sk_sp.66 }
%class.sk_sp.66 = type { %"struct.SkString::Rec"* }
%"struct.SkString::Rec" = type <{ i32, %"struct.std::__1::atomic", i8, [3 x i8] }>
%class.SkTHashMap = type { %class.SkTHashTable }
%class.SkTHashTable = type { i32, i32, %class.SkAutoTArray }
%class.SkAutoTArray = type { %"class.std::__1::unique_ptr.48" }
%"class.std::__1::unique_ptr.48" = type { %"class.std::__1::__compressed_pair.49" }
%"class.std::__1::__compressed_pair.49" = type { %"struct.std::__1::__compressed_pair_elem.50" }
%"struct.std::__1::__compressed_pair_elem.50" = type { %"struct.SkTHashTable<SkTHashMap<unsigned int, int, SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, int, SkGoodHash>::Pair>::Slot"* }
%"struct.SkTHashTable<SkTHashMap<unsigned int, int, SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, int, SkGoodHash>::Pair>::Slot" = type { %"struct.SkTHashMap<unsigned int, int, SkGoodHash>::Pair", i32 }
%"struct.SkTHashMap<unsigned int, int, SkGoodHash>::Pair" = type { %"struct.std::__1::pair" }
%"struct.std::__1::pair" = type { i32, i32 }
%class.SkTHashMap.54 = type { %class.SkTHashTable.55 }
%class.SkTHashTable.55 = type { i32, i32, %class.SkAutoTArray.56 }
%class.SkAutoTArray.56 = type { %"class.std::__1::unique_ptr.57" }
%"class.std::__1::unique_ptr.57" = type { %"class.std::__1::__compressed_pair.58" }
%"class.std::__1::__compressed_pair.58" = type { %"struct.std::__1::__compressed_pair_elem.59" }
%"struct.std::__1::__compressed_pair_elem.59" = type { %"struct.SkTHashTable<SkTHashMap<int, SkTArray<GrAuditTrail::Op *, false> *, SkGoodHash>::Pair, int, SkTHashMap<int, SkTArray<GrAuditTrail::Op *, false> *, SkGoodHash>::Pair>::Slot"* }
%"struct.SkTHashTable<SkTHashMap<int, SkTArray<GrAuditTrail::Op *, false> *, SkGoodHash>::Pair, int, SkTHashMap<int, SkTArray<GrAuditTrail::Op *, false> *, SkGoodHash>::Pair>::Slot" = type <{ %"struct.SkTHashMap<int, SkTArray<GrAuditTrail::Op *, false> *, SkGoodHash>::Pair", i32, [4 x i8] }>
%"struct.SkTHashMap<int, SkTArray<GrAuditTrail::Op *, false> *, SkGoodHash>::Pair" = type { %"struct.std::__1::pair.210" }
%"struct.std::__1::pair.210" = type { i32, %class.SkTArray.211* }
%class.SkTArray.211 = type { %"struct.GrAuditTrail::Op"**, i64 }
%class.SkTArray.63 = type { %"class.std::__1::unique_ptr.64"*, i64 }
%"class.std::__1::unique_ptr.64" = type { %"class.std::__1::__compressed_pair.212" }
%"class.std::__1::__compressed_pair.212" = type { %"struct.std::__1::__compressed_pair_elem.213" }
%"struct.std::__1::__compressed_pair_elem.213" = type { %"struct.GrAuditTrail::OpNode"* }
%"struct.GrAuditTrail::OpNode" = type <{ %struct.SkRect, %class.SkTArray.211, %"class.GrSurfaceProxy::UniqueID", [4 x i8] }>
%"class.GrSurfaceProxy::UniqueID" = type { i32 }
%class.SkTArray.65 = type { %class.SkString*, i64 }
%"class.GrRecordingContext::OwnedArenas" = type { i8, %"class.std::__1::unique_ptr.70", %"class.std::__1::unique_ptr.76" }
%"class.std::__1::unique_ptr.70" = type { %"class.std::__1::__compressed_pair.71" }
%"class.std::__1::__compressed_pair.71" = type { %"struct.std::__1::__compressed_pair_elem.72" }
%"struct.std::__1::__compressed_pair_elem.72" = type { %class.SkArenaAlloc* }
%class.SkArenaAlloc = type <{ i8*, i8*, i8*, %class.SkFibBlockSizes, [4 x i8] }>
%class.SkFibBlockSizes = type { i32 }
%"class.std::__1::unique_ptr.76" = type { %"class.std::__1::__compressed_pair.77" }
%"class.std::__1::__compressed_pair.77" = type { %"struct.std::__1::__compressed_pair_elem.78" }
%"struct.std::__1::__compressed_pair_elem.78" = type { %class.GrSubRunAllocator* }
%class.GrSubRunAllocator = type { %class.GrBagOfBytes }
%class.GrBagOfBytes = type { i8*, i32, %class.SkFibBlockSizes.79 }
%class.SkFibBlockSizes.79 = type { i32 }
%"class.std::__1::unique_ptr.83" = type { %"class.std::__1::__compressed_pair.84" }
%"class.std::__1::__compressed_pair.84" = type { %"struct.std::__1::__compressed_pair_elem.85" }
%"struct.std::__1::__compressed_pair_elem.85" = type { %class.GrDrawingManager* }
%class.GrDrawingManager = type opaque
%"class.std::__1::unique_ptr.89" = type { %"class.std::__1::__compressed_pair.90" }
%"class.std::__1::__compressed_pair.90" = type { %"struct.std::__1::__compressed_pair_elem.91" }
%"struct.std::__1::__compressed_pair_elem.91" = type { %class.GrProxyProvider* }
%class.GrProxyProvider = type { %class.SkTDynamicHash, %class.GrImageContext* }
%class.SkTDynamicHash = type { %class.SkTHashTable.92 }
%class.SkTHashTable.92 = type { i32, i32, %class.SkAutoTArray.93 }
%class.SkAutoTArray.93 = type { %"class.std::__1::unique_ptr.94" }
%"class.std::__1::unique_ptr.94" = type { %"class.std::__1::__compressed_pair.95" }
%"class.std::__1::__compressed_pair.95" = type { %"struct.std::__1::__compressed_pair_elem.96" }
%"struct.std::__1::__compressed_pair_elem.96" = type { %"struct.SkTHashTable<GrTextureProxy *, GrUniqueKey, SkTDynamicHash<GrTextureProxy, GrUniqueKey, GrProxyProvider::UniquelyKeyedProxyHashTraits>::AdaptedTraits>::Slot"* }
%"struct.SkTHashTable<GrTextureProxy *, GrUniqueKey, SkTDynamicHash<GrTextureProxy, GrUniqueKey, GrProxyProvider::UniquelyKeyedProxyHashTraits>::AdaptedTraits>::Slot" = type opaque
%class.GrImageContext = type <{ %class.GrContext_Base, %class.GrSingleOwner, [7 x i8] }>
%class.GrSurfaceProxyView = type <{ %class.sk_sp.103, i32, %class.GrSwizzle, [2 x i8] }>
%class.sk_sp.103 = type { %class.GrSurfaceProxy* }
%class.GrSurfaceProxy = type { i32 (...)**, %class.SkNVRefCnt.104, %class.sk_sp.105, i32, [4 x i8], %class.GrBackendFormat, %struct.SkISize, i32, i8, i32, %"class.GrSurfaceProxy::UniqueID", %"class.std::__1::function", i8, i8, i8, i8, i32, %"struct.std::__1::atomic.144" }
%class.SkNVRefCnt.104 = type { %"struct.std::__1::atomic" }
%class.sk_sp.105 = type { %class.GrSurface* }
%class.GrSurface = type { %class.GrGpuResource, %struct.SkISize, i32, i8, %class.sk_sp.109 }
%class.GrGpuResource = type { i32 (...)**, %class.GrIORef, i32, i32, %"class.std::__1::chrono::time_point", %class.GrScratchKey, %class.GrUniqueKey, %class.GrGpu*, i64, i8, i8, %"class.GrGpuResource::UniqueID" }
%class.GrIORef = type { %"struct.std::__1::atomic", %"struct.std::__1::atomic" }
%"class.std::__1::chrono::time_point" = type { %"class.std::__1::chrono::duration" }
%"class.std::__1::chrono::duration" = type { i64 }
%class.GrScratchKey = type { %class.GrResourceKey }
%class.GrResourceKey = type { %class.SkAutoSTMalloc }
%class.SkAutoSTMalloc = type <{ i32*, %union.anon.106, [4 x i8] }>
%union.anon.106 = type { [7 x i32] }
%class.GrUniqueKey = type { %class.GrResourceKey, %class.sk_sp.107, i8* }
%class.sk_sp.107 = type { %class.SkData* }
%class.SkData = type { %class.SkNVRefCnt.108, void (i8*, i8*)*, i8*, i8*, i64 }
%class.SkNVRefCnt.108 = type { %"struct.std::__1::atomic" }
%class.GrGpu = type opaque
%"class.GrGpuResource::UniqueID" = type { i32 }
%class.sk_sp.109 = type { %class.GrRefCntedCallback* }
%class.GrRefCntedCallback = type { %class.SkNVRefCnt.110, void (i8*)*, i8* }
%class.SkNVRefCnt.110 = type { %"struct.std::__1::atomic" }
%class.GrBackendFormat = type { i32, i8, %union.anon.111, i32, [4 x i8] }
%union.anon.111 = type { %struct.anon.112 }
%struct.anon.112 = type { i32, [4 x i8], %struct.GrVkYcbcrConversionInfo }
%struct.GrVkYcbcrConversionInfo = type <{ i32, [4 x i8], i64, i32, i32, i32, i32, i32, i32, i32, [4 x i8] }>
%"class.std::__1::function" = type { %"class.std::__1::__function::__policy_func" }
%"class.std::__1::__function::__policy_func" = type { %"union.std::__1::__function::__policy_storage", %"struct.std::__1::__function::__policy_invoker", %"struct.std::__1::__function::__policy"* }
%"union.std::__1::__function::__policy_storage" = type { i8*, [8 x i8] }
%"struct.std::__1::__function::__policy_invoker" = type { void (%"struct.GrSurfaceProxy::LazyCallbackResult"*, %"union.std::__1::__function::__policy_storage"*, %class.GrResourceProvider*, %"struct.GrSurfaceProxy::LazySurfaceDesc"*)* }
%"struct.GrSurfaceProxy::LazyCallbackResult" = type <{ %class.sk_sp.105, i32, i8, [3 x i8] }>
%class.GrResourceProvider = type { %class.GrResourceCache*, %class.GrGpu*, %class.sk_sp.25, %class.sk_sp.143, %class.sk_sp.143 }
%class.GrResourceCache = type { %class.GrProxyProvider*, %class.GrThreadSafeCache*, i32, %class.SkTDPQueue, %class.SkTDArray, %class.SkTMultiMap, %class.SkTDynamicHash.123, i64, i64, i32, i64, i64, i32, [4 x i8], %"class.SkMessageBus<GrUniqueKeyInvalidatedMessage, unsigned int, true>::Inbox", %"class.SkMessageBus<GrTextureFreedMessage, GrDirectContext::DirectContextID, true>::Inbox", %class.SkTHashMap.134, %"class.GrDirectContext::DirectContextID", i32, %class.GrSingleOwner* }
%class.SkTDPQueue = type { %class.SkTDArray }
%class.SkTDArray = type { %class.GrGpuResource**, i32, i32 }
%class.SkTMultiMap = type <{ %class.SkTDynamicHash.114, i32, [4 x i8] }>
%class.SkTDynamicHash.114 = type { %class.SkTHashTable.115 }
%class.SkTHashTable.115 = type { i32, i32, %class.SkAutoTArray.116 }
%class.SkAutoTArray.116 = type { %"class.std::__1::unique_ptr.117" }
%"class.std::__1::unique_ptr.117" = type { %"class.std::__1::__compressed_pair.118" }
%"class.std::__1::__compressed_pair.118" = type { %"struct.std::__1::__compressed_pair_elem.119" }
%"struct.std::__1::__compressed_pair_elem.119" = type { %"struct.SkTHashTable<SkTMultiMap<GrGpuResource, GrScratchKey, GrResourceCache::ScratchMapTraits>::ValueList *, GrScratchKey, SkTDynamicHash<SkTMultiMap<GrGpuResource, GrScratchKey, GrResourceCache::ScratchMapTraits>::ValueList, GrScratchKey, SkTMultiMap<GrGpuResource, GrScratchKey, GrResourceCache::ScratchMapTraits>::ValueList>::AdaptedTraits>::Slot"* }
%"struct.SkTHashTable<SkTMultiMap<GrGpuResource, GrScratchKey, GrResourceCache::ScratchMapTraits>::ValueList *, GrScratchKey, SkTDynamicHash<SkTMultiMap<GrGpuResource, GrScratchKey, GrResourceCache::ScratchMapTraits>::ValueList, GrScratchKey, SkTMultiMap<GrGpuResource, GrScratchKey, GrResourceCache::ScratchMapTraits>::ValueList>::AdaptedTraits>::Slot" = type opaque
%class.SkTDynamicHash.123 = type { %class.SkTHashTable.124 }
%class.SkTHashTable.124 = type { i32, i32, %class.SkAutoTArray.125 }
%class.SkAutoTArray.125 = type { %"class.std::__1::unique_ptr.126" }
%"class.std::__1::unique_ptr.126" = type { %"class.std::__1::__compressed_pair.127" }
%"class.std::__1::__compressed_pair.127" = type { %"struct.std::__1::__compressed_pair_elem.128" }
%"struct.std::__1::__compressed_pair_elem.128" = type { %"struct.SkTHashTable<GrGpuResource *, GrUniqueKey, SkTDynamicHash<GrGpuResource, GrUniqueKey, GrResourceCache::UniqueHashTraits>::AdaptedTraits>::Slot"* }
%"struct.SkTHashTable<GrGpuResource *, GrUniqueKey, SkTDynamicHash<GrGpuResource, GrUniqueKey, GrResourceCache::UniqueHashTraits>::AdaptedTraits>::Slot" = type <{ %class.GrGpuResource*, i32, [4 x i8] }>
%"class.SkMessageBus<GrUniqueKeyInvalidatedMessage, unsigned int, true>::Inbox" = type <{ %class.SkTArray.132, %class.SkMutex, i32, [4 x i8] }>
%class.SkTArray.132 = type { %class.GrUniqueKeyInvalidatedMessage*, i64 }
%class.GrUniqueKeyInvalidatedMessage = type <{ %class.GrUniqueKey, i32, i8, [3 x i8] }>
%"class.SkMessageBus<GrTextureFreedMessage, GrDirectContext::DirectContextID, true>::Inbox" = type <{ %class.SkTArray.133, %class.SkMutex, %"class.GrDirectContext::DirectContextID", [4 x i8] }>
%class.SkTArray.133 = type { %struct.GrTextureFreedMessage*, i64 }
%struct.GrTextureFreedMessage = type <{ %class.GrTexture*, %"class.GrDirectContext::DirectContextID", [4 x i8] }>
%class.GrTexture = type <{ i32 (...)**, i32, i32, i32, [4 x i8], %class.GrSurface }>
%class.SkTHashMap.134 = type { %class.SkTHashTable.135 }
%class.SkTHashTable.135 = type { i32, i32, %class.SkAutoTArray.136 }
%class.SkAutoTArray.136 = type { %"class.std::__1::unique_ptr.137" }
%"class.std::__1::unique_ptr.137" = type { %"class.std::__1::__compressed_pair.138" }
%"class.std::__1::__compressed_pair.138" = type { %"struct.std::__1::__compressed_pair_elem.139" }
%"struct.std::__1::__compressed_pair_elem.139" = type { %"struct.SkTHashTable<SkTHashMap<unsigned int, GrResourceCache::TextureAwaitingUnref, SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, GrResourceCache::TextureAwaitingUnref, SkGoodHash>::Pair>::Slot"* }
%"struct.SkTHashTable<SkTHashMap<unsigned int, GrResourceCache::TextureAwaitingUnref, SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, GrResourceCache::TextureAwaitingUnref, SkGoodHash>::Pair>::Slot" = type opaque
%"class.GrDirectContext::DirectContextID" = type { i32 }
%class.sk_sp.143 = type { %class.GrGpuBuffer* }
%class.GrGpuBuffer = type { %class.GrGpuResource, %class.GrBuffer, i8*, i64, i32, i32 }
%class.GrBuffer = type { i32 (...)** }
%"struct.GrSurfaceProxy::LazySurfaceDesc" = type <{ %struct.SkISize, i32, i8, i8, [2 x i8], i32, [4 x i8], %class.GrBackendFormat*, i8, i8, [6 x i8] }>
%"struct.std::__1::__function::__policy" = type { i8* (i8*)*, void (i8*)*, i8, %"class.std::type_info"* }
%"class.std::type_info" = type { i32 (...)**, i8* }
%"struct.std::__1::atomic.144" = type { %"struct.std::__1::__atomic_base.145" }
%"struct.std::__1::__atomic_base.145" = type { %"struct.std::__1::__atomic_base.146" }
%"struct.std::__1::__atomic_base.146" = type { %"struct.std::__1::__cxx_atomic_impl.147" }
%"struct.std::__1::__cxx_atomic_impl.147" = type { %"struct.std::__1::__cxx_atomic_base_impl.148" }
%"struct.std::__1::__cxx_atomic_base_impl.148" = type { i64 }
%class.GrSwizzle = type { i16 }
%class.sk_sp.149 = type { %class.SkSpecialSurface* }
%class.SkSpecialSurface = type { %class.SkRefCnt.base, %class.SkSurfaceProps, %struct.SkIRect, [4 x i8] }
%class.sk_sp.150 = type { %class.SkSurface* }
%class.SkSurface = type { %class.SkRefCnt.base, %class.SkSurfaceProps, i32, i32, i32 }
%class.sk_sp.151 = type { %class.SkSpecialImage* }
%class.sk_sp.152 = type { %class.SkImage* }
%class.SkImage = type <{ %class.SkRefCnt.base, [4 x i8], %struct.SkImageInfo, i32, [4 x i8] }>
%"class.std::__1::tuple" = type { %"struct.std::__1::__tuple_impl" }
%"struct.std::__1::__tuple_impl" = type { %"class.std::__1::__tuple_leaf", %"class.std::__1::__tuple_leaf.153", [4 x i8] }
%"class.std::__1::__tuple_leaf" = type { %class.GrSurfaceProxyView }
%"class.std::__1::__tuple_leaf.153" = type { i32 }
%class.SkImage_Base = type { %class.SkImage.base, %"struct.std::__1::atomic.40", [3 x i8] }
%class.SkImage.base = type <{ %class.SkRefCnt.base, [4 x i8], %struct.SkImageInfo, i32 }>
%class.GrDirectContext = type { %class.GrRecordingContext, %"class.GrDirectContext::DirectContextID", %"class.std::__1::unique_ptr.154", %"class.std::__1::unique_ptr.160", %class.sk_sp.166, %"class.std::__1::unique_ptr.167", %"class.std::__1::unique_ptr.173", i8, i8, %"class.GrContextOptions::PersistentCache"*, %"class.GrContextOptions::ShaderErrorHandler"*, %"class.std::__1::unique_ptr.179", %"class.std::__1::unique_ptr.185", %"class.std::__1::unique_ptr.191" }
%"class.std::__1::unique_ptr.154" = type { %"class.std::__1::__compressed_pair.155" }
%"class.std::__1::__compressed_pair.155" = type { %"struct.std::__1::__compressed_pair_elem.156" }
%"struct.std::__1::__compressed_pair_elem.156" = type { %class.SkTaskGroup* }
%class.SkTaskGroup = type opaque
%"class.std::__1::unique_ptr.160" = type { %"class.std::__1::__compressed_pair.161" }
%"class.std::__1::__compressed_pair.161" = type { %"struct.std::__1::__compressed_pair_elem.162" }
%"struct.std::__1::__compressed_pair_elem.162" = type { %class.GrStrikeCache* }
%class.GrStrikeCache = type opaque
%class.sk_sp.166 = type { %class.GrGpu* }
%"class.std::__1::unique_ptr.167" = type { %"class.std::__1::__compressed_pair.168" }
%"class.std::__1::__compressed_pair.168" = type { %"struct.std::__1::__compressed_pair_elem.169" }
%"struct.std::__1::__compressed_pair_elem.169" = type { %class.GrResourceCache* }
%"class.std::__1::unique_ptr.173" = type { %"class.std::__1::__compressed_pair.174" }
%"class.std::__1::__compressed_pair.174" = type { %"struct.std::__1::__compressed_pair_elem.175" }
%"struct.std::__1::__compressed_pair_elem.175" = type { %class.GrResourceProvider* }
%"class.std::__1::unique_ptr.179" = type { %"class.std::__1::__compressed_pair.180" }
%"class.std::__1::__compressed_pair.180" = type { %"struct.std::__1::__compressed_pair_elem.181" }
%"struct.std::__1::__compressed_pair_elem.181" = type { %class.GrClientMappedBufferManager* }
%class.GrClientMappedBufferManager = type opaque
%"class.std::__1::unique_ptr.185" = type { %"class.std::__1::__compressed_pair.186" }
%"class.std::__1::__compressed_pair.186" = type { %"struct.std::__1::__compressed_pair_elem.187" }
%"struct.std::__1::__compressed_pair_elem.187" = type { %class.GrAtlasManager* }
%class.GrAtlasManager = type opaque
%"class.std::__1::unique_ptr.191" = type { %"class.std::__1::__compressed_pair.192" }
%"class.std::__1::__compressed_pair.192" = type { %"struct.std::__1::__compressed_pair_elem.193" }
%"struct.std::__1::__compressed_pair_elem.193" = type { %class.GrSmallPathAtlasMgr* }
%class.GrSmallPathAtlasMgr = type opaque
%class.GrTextureProxy = type { i32 (...)**, i8, i32, i8, i8, %class.GrUniqueKey, %class.GrProxyProvider*, %"class.std::__1::unique_ptr.198", %class.GrSurfaceProxy }
%"class.std::__1::unique_ptr.198" = type { %"class.std::__1::__compressed_pair.199" }
%"class.std::__1::__compressed_pair.199" = type { %"struct.std::__1::__compressed_pair_elem.200" }
%"struct.std::__1::__compressed_pair_elem.200" = type { %class.GrDeferredProxyUploader* }
%class.GrDeferredProxyUploader = type opaque
%class.SkRefCntBase = type <{ i32 (...)**, %"struct.std::__1::atomic", [4 x i8] }>
%class.SkSpecialImage_Raster = type { %class.SkSpecialImage_Base, %class.SkBitmap }
%class.SkSpecialImage_Gpu = type { %class.SkSpecialImage_Base, %class.GrRecordingContext*, %class.GrSurfaceProxyView, i32, i32, %class.sk_sp.15 }
%class.sk_sp.217 = type { %class.GrImageContext* }
%class.SkImage_Gpu = type { %class.SkImage_GpuBase, %"class.SkImage_Gpu::ProxyChooser", %class.GrSwizzle, i32 }
%class.SkImage_GpuBase = type { %class.SkImage_Base.base, %class.sk_sp.217 }
%class.SkImage_Base.base = type { %class.SkImage.base, %"struct.std::__1::atomic.40" }
%"class.SkImage_Gpu::ProxyChooser" = type <{ %class.SkSpinlock, [7 x i8], %class.sk_sp.103, %class.sk_sp.103, %class.sk_sp.218, i32, [4 x i8] }>
%class.SkSpinlock = type { %"struct.std::__1::atomic.40" }
%class.sk_sp.218 = type { %class.GrRenderTask* }
%class.GrRenderTask = type opaque
%class.GrSurfaceProxyPriv = type { %class.GrSurfaceProxy* }

$_ZN12SkRefCntBaseD2Ev = comdat any

$_ZN14SkSpecialImageD0Ev = comdat any

$_ZNK12SkRefCntBase16internal_disposeEv = comdat any

$_ZN21SkSpecialImage_RasterD2Ev = comdat any

$_ZN21SkSpecialImage_RasterD0Ev = comdat any

$_ZNK21SkSpecialImage_Raster9alphaTypeEv = comdat any

$_ZNK21SkSpecialImage_Raster9colorTypeEv = comdat any

$_ZNK21SkSpecialImage_Raster7getSizeEv = comdat any

$_ZNK21SkSpecialImage_Raster6onDrawEP8SkCanvasffRK17SkSamplingOptionsPK7SkPaint = comdat any

$_ZNK21SkSpecialImage_Raster13onGetROPixelsEP8SkBitmap = comdat any

$_ZNK19SkSpecialImage_Base12onGetContextEv = comdat any

$_ZNK21SkSpecialImage_Raster15onGetColorSpaceEv = comdat any

$_ZNK21SkSpecialImage_Raster6onViewEP18GrRecordingContext = comdat any

$_ZNK21SkSpecialImage_Raster12onMakeSubsetERK7SkIRect = comdat any

$_ZNK21SkSpecialImage_Raster13onMakeSurfaceE11SkColorTypePK12SkColorSpaceRK7SkISize11SkAlphaTypeRK14SkSurfaceProps = comdat any

$_ZNK21SkSpecialImage_Raster9onAsImageEPK7SkIRect = comdat any

$_ZNK21SkSpecialImage_Raster18onMakeTightSurfaceE11SkColorTypePK12SkColorSpaceRK7SkISize11SkAlphaType = comdat any

$_ZN9GrSwizzleC2EPKc = comdat any

$_ZN18SkSpecialImage_GpuD2Ev = comdat any

$_ZN18SkSpecialImage_GpuD0Ev = comdat any

$_ZNK18SkSpecialImage_Gpu9alphaTypeEv = comdat any

$_ZNK18SkSpecialImage_Gpu9colorTypeEv = comdat any

$_ZNK18SkSpecialImage_Gpu7getSizeEv = comdat any

$_ZNK18SkSpecialImage_Gpu6onDrawEP8SkCanvasffRK17SkSamplingOptionsPK7SkPaint = comdat any

$_ZNK18SkSpecialImage_Gpu13onGetROPixelsEP8SkBitmap = comdat any

$_ZNK18SkSpecialImage_Gpu12onGetContextEv = comdat any

$_ZNK18SkSpecialImage_Gpu15onGetColorSpaceEv = comdat any

$_ZNK18SkSpecialImage_Gpu6onViewEP18GrRecordingContext = comdat any

$_ZNK18SkSpecialImage_Gpu12onMakeSubsetERK7SkIRect = comdat any

$_ZNK18SkSpecialImage_Gpu13onMakeSurfaceE11SkColorTypePK12SkColorSpaceRK7SkISize11SkAlphaTypeRK14SkSurfaceProps = comdat any

$_ZNK18SkSpecialImage_Gpu9onAsImageEPK7SkIRect = comdat any

$_ZNK18SkSpecialImage_Gpu18onMakeTightSurfaceE11SkColorTypePK12SkColorSpaceRK7SkISize11SkAlphaType = comdat any

$_ZTV14SkSpecialImage = comdat any

$_ZTV21SkSpecialImage_Raster = comdat any

$_ZTV18SkSpecialImage_Gpu = comdat any

@_ZTV14SkSpecialImage = linkonce_odr hidden unnamed_addr constant { [8 x i8*] } { [8 x i8*] [i8* null, i8* null, i8* bitcast (void (%class.SkRefCntBase*)* @_ZN12SkRefCntBaseD2Ev to i8*), i8* bitcast (void (%class.SkSpecialImage*)* @_ZN14SkSpecialImageD0Ev to i8*), i8* bitcast (void (%class.SkRefCntBase*)* @_ZNK12SkRefCntBase16internal_disposeEv to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*)] }, comdat, align 8
@.str = private unnamed_addr constant [51 x i8] c"../../third_party/skia/src/core/SkSpecialImage.cpp\00", align 1
@.str.1 = private unnamed_addr constant [11 x i8] c"assert(%s)\00", align 1
@.str.2 = private unnamed_addr constant [65 x i8] c"rect_fits(subset, view.proxy()->width(), view.proxy()->height())\00", align 1
@_ZTV21SkSpecialImage_Raster = linkonce_odr hidden unnamed_addr constant { [17 x i8*] } { [17 x i8*] [i8* null, i8* null, i8* bitcast (void (%class.SkSpecialImage_Raster*)* @_ZN21SkSpecialImage_RasterD2Ev to i8*), i8* bitcast (void (%class.SkSpecialImage_Raster*)* @_ZN21SkSpecialImage_RasterD0Ev to i8*), i8* bitcast (void (%class.SkRefCntBase*)* @_ZNK12SkRefCntBase16internal_disposeEv to i8*), i8* bitcast (i32 (%class.SkSpecialImage_Raster*)* @_ZNK21SkSpecialImage_Raster9alphaTypeEv to i8*), i8* bitcast (i32 (%class.SkSpecialImage_Raster*)* @_ZNK21SkSpecialImage_Raster9colorTypeEv to i8*), i8* bitcast (i64 (%class.SkSpecialImage_Raster*)* @_ZNK21SkSpecialImage_Raster7getSizeEv to i8*), i8* bitcast (void (%class.SkSpecialImage_Raster*, %class.SkCanvas*, float, float, %struct.SkSamplingOptions*, %class.SkPaint*)* @_ZNK21SkSpecialImage_Raster6onDrawEP8SkCanvasffRK17SkSamplingOptionsPK7SkPaint to i8*), i8* bitcast (i1 (%class.SkSpecialImage_Raster*, %class.SkBitmap*)* @_ZNK21SkSpecialImage_Raster13onGetROPixelsEP8SkBitmap to i8*), i8* bitcast (%class.GrRecordingContext* (%class.SkSpecialImage_Base*)* @_ZNK19SkSpecialImage_Base12onGetContextEv to i8*), i8* bitcast (%class.SkColorSpace* (%class.SkSpecialImage_Raster*)* @_ZNK21SkSpecialImage_Raster15onGetColorSpaceEv to i8*), i8* bitcast (void (%class.GrSurfaceProxyView*, %class.SkSpecialImage_Raster*, %class.GrRecordingContext*)* @_ZNK21SkSpecialImage_Raster6onViewEP18GrRecordingContext to i8*), i8* bitcast (void (%class.sk_sp.151*, %class.SkSpecialImage_Raster*, %struct.SkIRect*)* @_ZNK21SkSpecialImage_Raster12onMakeSubsetERK7SkIRect to i8*), i8* bitcast (void (%class.sk_sp.149*, %class.SkSpecialImage_Raster*, i32, %class.SkColorSpace*, %struct.SkISize*, i32, %class.SkSurfaceProps*)* @_ZNK21SkSpecialImage_Raster13onMakeSurfaceE11SkColorTypePK12SkColorSpaceRK7SkISize11SkAlphaTypeRK14SkSurfaceProps to i8*), i8* bitcast (void (%class.sk_sp.152*, %class.SkSpecialImage_Raster*, %struct.SkIRect*)* @_ZNK21SkSpecialImage_Raster9onAsImageEPK7SkIRect to i8*), i8* bitcast (void (%class.sk_sp.150*, %class.SkSpecialImage_Raster*, i32, %class.SkColorSpace*, %struct.SkISize*, i32)* @_ZNK21SkSpecialImage_Raster18onMakeTightSurfaceE11SkColorTypePK12SkColorSpaceRK7SkISize11SkAlphaType to i8*)] }, comdat, align 8
@.str.3 = private unnamed_addr constant [5 x i8] c"rgba\00", align 1
@_ZTV18SkSpecialImage_Gpu = linkonce_odr hidden unnamed_addr constant { [17 x i8*] } { [17 x i8*] [i8* null, i8* null, i8* bitcast (void (%class.SkSpecialImage_Gpu*)* @_ZN18SkSpecialImage_GpuD2Ev to i8*), i8* bitcast (void (%class.SkSpecialImage_Gpu*)* @_ZN18SkSpecialImage_GpuD0Ev to i8*), i8* bitcast (void (%class.SkRefCntBase*)* @_ZNK12SkRefCntBase16internal_disposeEv to i8*), i8* bitcast (i32 (%class.SkSpecialImage_Gpu*)* @_ZNK18SkSpecialImage_Gpu9alphaTypeEv to i8*), i8* bitcast (i32 (%class.SkSpecialImage_Gpu*)* @_ZNK18SkSpecialImage_Gpu9colorTypeEv to i8*), i8* bitcast (i64 (%class.SkSpecialImage_Gpu*)* @_ZNK18SkSpecialImage_Gpu7getSizeEv to i8*), i8* bitcast (void (%class.SkSpecialImage_Gpu*, %class.SkCanvas*, float, float, %struct.SkSamplingOptions*, %class.SkPaint*)* @_ZNK18SkSpecialImage_Gpu6onDrawEP8SkCanvasffRK17SkSamplingOptionsPK7SkPaint to i8*), i8* bitcast (i1 (%class.SkSpecialImage_Gpu*, %class.SkBitmap*)* @_ZNK18SkSpecialImage_Gpu13onGetROPixelsEP8SkBitmap to i8*), i8* bitcast (%class.GrRecordingContext* (%class.SkSpecialImage_Gpu*)* @_ZNK18SkSpecialImage_Gpu12onGetContextEv to i8*), i8* bitcast (%class.SkColorSpace* (%class.SkSpecialImage_Gpu*)* @_ZNK18SkSpecialImage_Gpu15onGetColorSpaceEv to i8*), i8* bitcast (void (%class.GrSurfaceProxyView*, %class.SkSpecialImage_Gpu*, %class.GrRecordingContext*)* @_ZNK18SkSpecialImage_Gpu6onViewEP18GrRecordingContext to i8*), i8* bitcast (void (%class.sk_sp.151*, %class.SkSpecialImage_Gpu*, %struct.SkIRect*)* @_ZNK18SkSpecialImage_Gpu12onMakeSubsetERK7SkIRect to i8*), i8* bitcast (void (%class.sk_sp.149*, %class.SkSpecialImage_Gpu*, i32, %class.SkColorSpace*, %struct.SkISize*, i32, %class.SkSurfaceProps*)* @_ZNK18SkSpecialImage_Gpu13onMakeSurfaceE11SkColorTypePK12SkColorSpaceRK7SkISize11SkAlphaTypeRK14SkSurfaceProps to i8*), i8* bitcast (void (%class.sk_sp.152*, %class.SkSpecialImage_Gpu*, %struct.SkIRect*)* @_ZNK18SkSpecialImage_Gpu9onAsImageEPK7SkIRect to i8*), i8* bitcast (void (%class.sk_sp.150*, %class.SkSpecialImage_Gpu*, i32, %class.SkColorSpace*, %struct.SkISize*, i32)* @_ZNK18SkSpecialImage_Gpu18onMakeTightSurfaceE11SkColorTypePK12SkColorSpaceRK7SkISize11SkAlphaType to i8*)] }, comdat, align 8
@switch.table._ZNK18SkSpecialImage_Gpu9colorTypeEv = private unnamed_addr constant [31 x i32] [i32 0, i32 1, i32 2, i32 3, i32 4, i32 4, i32 5, i32 15, i32 6, i32 7, i32 8, i32 11, i32 0, i32 16, i32 13, i32 12, i32 14, i32 18, i32 19, i32 17, i32 20, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0], align 4

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN14SkSpecialImageC2ERK7SkIRectjRK14SkSurfaceProps(%class.SkSpecialImage*, %struct.SkIRect* nocapture readonly dereferenceable(16), i32, %class.SkSurfaceProps* dereferenceable(8)) unnamed_addr #0 align 2 {
  %5 = getelementptr inbounds %class.SkSpecialImage, %class.SkSpecialImage* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  store i32 1, i32* %5, align 4
  %6 = getelementptr inbounds %class.SkSpecialImage, %class.SkSpecialImage* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [8 x i8*] }, { [8 x i8*] }* @_ZTV14SkSpecialImage, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %6, align 8
  %7 = getelementptr inbounds %class.SkSpecialImage, %class.SkSpecialImage* %0, i64 0, i32 1
  tail call void @_ZN14SkSurfacePropsC1ERKS_(%class.SkSurfaceProps* %7, %class.SkSurfaceProps* dereferenceable(8) %3) #11
  %8 = getelementptr inbounds %class.SkSpecialImage, %class.SkSpecialImage* %0, i64 0, i32 2
  %9 = bitcast %struct.SkIRect* %8 to i8*
  %10 = bitcast %struct.SkIRect* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %9, i8* align 4 %10, i64 16, i1 false)
  %11 = getelementptr inbounds %class.SkSpecialImage, %class.SkSpecialImage* %0, i64 0, i32 3
  %12 = icmp eq i32 %2, 0
  br i1 %12, label %13, label %15

13:                                               ; preds = %4
  %14 = tail call i32 @_ZN8SkNextID7ImageIDEv() #11
  br label %15

15:                                               ; preds = %4, %13
  %16 = phi i32 [ %14, %13 ], [ %2, %4 ]
  store i32 %16, i32* %11, align 4
  ret void
}

declare void @_ZN14SkSurfacePropsC1ERKS_(%class.SkSurfaceProps*, %class.SkSurfaceProps* dereferenceable(8)) unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #2

declare i32 @_ZN8SkNextID7ImageIDEv() local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK14SkSpecialImage4drawEP8SkCanvasffRK17SkSamplingOptionsPK7SkPaint(%class.SkSpecialImage*, %class.SkCanvas*, float, float, %struct.SkSamplingOptions* dereferenceable(20), %class.SkPaint*) local_unnamed_addr #0 align 2 {
  %7 = bitcast %class.SkSpecialImage* %0 to %class.SkSpecialImage_Base*
  %8 = bitcast %class.SkSpecialImage* %0 to void (%class.SkSpecialImage_Base*, %class.SkCanvas*, float, float, %struct.SkSamplingOptions*, %class.SkPaint*)***
  %9 = load void (%class.SkSpecialImage_Base*, %class.SkCanvas*, float, float, %struct.SkSamplingOptions*, %class.SkPaint*)**, void (%class.SkSpecialImage_Base*, %class.SkCanvas*, float, float, %struct.SkSamplingOptions*, %class.SkPaint*)*** %8, align 8
  %10 = getelementptr inbounds void (%class.SkSpecialImage_Base*, %class.SkCanvas*, float, float, %struct.SkSamplingOptions*, %class.SkPaint*)*, void (%class.SkSpecialImage_Base*, %class.SkCanvas*, float, float, %struct.SkSamplingOptions*, %class.SkPaint*)** %9, i64 6
  %11 = load void (%class.SkSpecialImage_Base*, %class.SkCanvas*, float, float, %struct.SkSamplingOptions*, %class.SkPaint*)*, void (%class.SkSpecialImage_Base*, %class.SkCanvas*, float, float, %struct.SkSamplingOptions*, %class.SkPaint*)** %10, align 8
  tail call void %11(%class.SkSpecialImage_Base* %7, %class.SkCanvas* %1, float %2, float %3, %struct.SkSamplingOptions* dereferenceable(20) %4, %class.SkPaint* %5) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK14SkSpecialImage11getROPixelsEP8SkBitmap(%class.SkSpecialImage*, %class.SkBitmap*) local_unnamed_addr #0 align 2 {
  %3 = bitcast %class.SkSpecialImage* %0 to %class.SkSpecialImage_Base*
  %4 = bitcast %class.SkSpecialImage* %0 to i1 (%class.SkSpecialImage_Base*, %class.SkBitmap*)***
  %5 = load i1 (%class.SkSpecialImage_Base*, %class.SkBitmap*)**, i1 (%class.SkSpecialImage_Base*, %class.SkBitmap*)*** %4, align 8
  %6 = getelementptr inbounds i1 (%class.SkSpecialImage_Base*, %class.SkBitmap*)*, i1 (%class.SkSpecialImage_Base*, %class.SkBitmap*)** %5, i64 7
  %7 = load i1 (%class.SkSpecialImage_Base*, %class.SkBitmap*)*, i1 (%class.SkSpecialImage_Base*, %class.SkBitmap*)** %6, align 8
  %8 = tail call zeroext i1 %7(%class.SkSpecialImage_Base* %3, %class.SkBitmap* %1) #11
  ret i1 %8
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK14SkSpecialImage15isTextureBackedEv(%class.SkSpecialImage*) local_unnamed_addr #0 align 2 {
  %2 = bitcast %class.SkSpecialImage* %0 to %class.SkSpecialImage_Base*
  %3 = bitcast %class.SkSpecialImage* %0 to %class.GrRecordingContext* (%class.SkSpecialImage_Base*)***
  %4 = load %class.GrRecordingContext* (%class.SkSpecialImage_Base*)**, %class.GrRecordingContext* (%class.SkSpecialImage_Base*)*** %3, align 8
  %5 = getelementptr inbounds %class.GrRecordingContext* (%class.SkSpecialImage_Base*)*, %class.GrRecordingContext* (%class.SkSpecialImage_Base*)** %4, i64 8
  %6 = load %class.GrRecordingContext* (%class.SkSpecialImage_Base*)*, %class.GrRecordingContext* (%class.SkSpecialImage_Base*)** %5, align 8
  %7 = tail call %class.GrRecordingContext* %6(%class.SkSpecialImage_Base* %2) #11
  %8 = icmp ne %class.GrRecordingContext* %7, null
  ret i1 %8
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: nounwind ssp uwtable
define hidden %class.GrRecordingContext* @_ZNK14SkSpecialImage10getContextEv(%class.SkSpecialImage*) local_unnamed_addr #0 align 2 {
  %2 = bitcast %class.SkSpecialImage* %0 to %class.SkSpecialImage_Base*
  %3 = bitcast %class.SkSpecialImage* %0 to %class.GrRecordingContext* (%class.SkSpecialImage_Base*)***
  %4 = load %class.GrRecordingContext* (%class.SkSpecialImage_Base*)**, %class.GrRecordingContext* (%class.SkSpecialImage_Base*)*** %3, align 8
  %5 = getelementptr inbounds %class.GrRecordingContext* (%class.SkSpecialImage_Base*)*, %class.GrRecordingContext* (%class.SkSpecialImage_Base*)** %4, i64 8
  %6 = load %class.GrRecordingContext* (%class.SkSpecialImage_Base*)*, %class.GrRecordingContext* (%class.SkSpecialImage_Base*)** %5, align 8
  %7 = tail call %class.GrRecordingContext* %6(%class.SkSpecialImage_Base* %2) #11
  ret %class.GrRecordingContext* %7
}

; Function Attrs: nounwind ssp uwtable
define hidden %class.SkColorSpace* @_ZNK14SkSpecialImage13getColorSpaceEv(%class.SkSpecialImage*) local_unnamed_addr #0 align 2 {
  %2 = bitcast %class.SkSpecialImage* %0 to %class.SkSpecialImage_Base*
  %3 = bitcast %class.SkSpecialImage* %0 to %class.SkColorSpace* (%class.SkSpecialImage_Base*)***
  %4 = load %class.SkColorSpace* (%class.SkSpecialImage_Base*)**, %class.SkColorSpace* (%class.SkSpecialImage_Base*)*** %3, align 8
  %5 = getelementptr inbounds %class.SkColorSpace* (%class.SkSpecialImage_Base*)*, %class.SkColorSpace* (%class.SkSpecialImage_Base*)** %4, i64 9
  %6 = load %class.SkColorSpace* (%class.SkSpecialImage_Base*)*, %class.SkColorSpace* (%class.SkSpecialImage_Base*)** %5, align 8
  %7 = tail call %class.SkColorSpace* %6(%class.SkSpecialImage_Base* %2) #11
  ret %class.SkColorSpace* %7
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK14SkSpecialImage4viewEP18GrRecordingContext(%class.GrSurfaceProxyView* noalias sret, %class.SkSpecialImage*, %class.GrRecordingContext*) local_unnamed_addr #0 align 2 {
  %4 = bitcast %class.SkSpecialImage* %1 to %class.SkSpecialImage_Base*
  %5 = bitcast %class.SkSpecialImage* %1 to void (%class.GrSurfaceProxyView*, %class.SkSpecialImage_Base*, %class.GrRecordingContext*)***
  %6 = load void (%class.GrSurfaceProxyView*, %class.SkSpecialImage_Base*, %class.GrRecordingContext*)**, void (%class.GrSurfaceProxyView*, %class.SkSpecialImage_Base*, %class.GrRecordingContext*)*** %5, align 8
  %7 = getelementptr inbounds void (%class.GrSurfaceProxyView*, %class.SkSpecialImage_Base*, %class.GrRecordingContext*)*, void (%class.GrSurfaceProxyView*, %class.SkSpecialImage_Base*, %class.GrRecordingContext*)** %6, i64 10
  %8 = load void (%class.GrSurfaceProxyView*, %class.SkSpecialImage_Base*, %class.GrRecordingContext*)*, void (%class.GrSurfaceProxyView*, %class.SkSpecialImage_Base*, %class.GrRecordingContext*)** %7, align 8
  tail call void %8(%class.GrSurfaceProxyView* sret %0, %class.SkSpecialImage_Base* %4, %class.GrRecordingContext* %2) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK14SkSpecialImage11makeSurfaceE11SkColorTypePK12SkColorSpaceRK7SkISize11SkAlphaTypeRK14SkSurfaceProps(%class.sk_sp.149* noalias sret, %class.SkSpecialImage*, i32, %class.SkColorSpace*, %struct.SkISize* dereferenceable(8), i32, %class.SkSurfaceProps* dereferenceable(8)) local_unnamed_addr #0 align 2 {
  %8 = bitcast %class.SkSpecialImage* %1 to %class.SkSpecialImage_Base*
  %9 = bitcast %class.SkSpecialImage* %1 to void (%class.sk_sp.149*, %class.SkSpecialImage_Base*, i32, %class.SkColorSpace*, %struct.SkISize*, i32, %class.SkSurfaceProps*)***
  %10 = load void (%class.sk_sp.149*, %class.SkSpecialImage_Base*, i32, %class.SkColorSpace*, %struct.SkISize*, i32, %class.SkSurfaceProps*)**, void (%class.sk_sp.149*, %class.SkSpecialImage_Base*, i32, %class.SkColorSpace*, %struct.SkISize*, i32, %class.SkSurfaceProps*)*** %9, align 8
  %11 = getelementptr inbounds void (%class.sk_sp.149*, %class.SkSpecialImage_Base*, i32, %class.SkColorSpace*, %struct.SkISize*, i32, %class.SkSurfaceProps*)*, void (%class.sk_sp.149*, %class.SkSpecialImage_Base*, i32, %class.SkColorSpace*, %struct.SkISize*, i32, %class.SkSurfaceProps*)** %10, i64 12
  %12 = load void (%class.sk_sp.149*, %class.SkSpecialImage_Base*, i32, %class.SkColorSpace*, %struct.SkISize*, i32, %class.SkSurfaceProps*)*, void (%class.sk_sp.149*, %class.SkSpecialImage_Base*, i32, %class.SkColorSpace*, %struct.SkISize*, i32, %class.SkSurfaceProps*)** %11, align 8
  tail call void %12(%class.sk_sp.149* sret %0, %class.SkSpecialImage_Base* %8, i32 %2, %class.SkColorSpace* %3, %struct.SkISize* dereferenceable(8) %4, i32 %5, %class.SkSurfaceProps* dereferenceable(8) %6) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK14SkSpecialImage16makeTightSurfaceE11SkColorTypePK12SkColorSpaceRK7SkISize11SkAlphaType(%class.sk_sp.150* noalias sret, %class.SkSpecialImage*, i32, %class.SkColorSpace*, %struct.SkISize* dereferenceable(8), i32) local_unnamed_addr #0 align 2 {
  %7 = bitcast %class.SkSpecialImage* %1 to %class.SkSpecialImage_Base*
  %8 = bitcast %class.SkSpecialImage* %1 to void (%class.sk_sp.150*, %class.SkSpecialImage_Base*, i32, %class.SkColorSpace*, %struct.SkISize*, i32)***
  %9 = load void (%class.sk_sp.150*, %class.SkSpecialImage_Base*, i32, %class.SkColorSpace*, %struct.SkISize*, i32)**, void (%class.sk_sp.150*, %class.SkSpecialImage_Base*, i32, %class.SkColorSpace*, %struct.SkISize*, i32)*** %8, align 8
  %10 = getelementptr inbounds void (%class.sk_sp.150*, %class.SkSpecialImage_Base*, i32, %class.SkColorSpace*, %struct.SkISize*, i32)*, void (%class.sk_sp.150*, %class.SkSpecialImage_Base*, i32, %class.SkColorSpace*, %struct.SkISize*, i32)** %9, i64 14
  %11 = load void (%class.sk_sp.150*, %class.SkSpecialImage_Base*, i32, %class.SkColorSpace*, %struct.SkISize*, i32)*, void (%class.sk_sp.150*, %class.SkSpecialImage_Base*, i32, %class.SkColorSpace*, %struct.SkISize*, i32)** %10, align 8
  tail call void %11(%class.sk_sp.150* sret %0, %class.SkSpecialImage_Base* %7, i32 %2, %class.SkColorSpace* %3, %struct.SkISize* dereferenceable(8) %4, i32 %5) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK14SkSpecialImage10makeSubsetERK7SkIRect(%class.sk_sp.151* noalias sret, %class.SkSpecialImage*, %struct.SkIRect* nocapture readonly dereferenceable(16)) local_unnamed_addr #0 align 2 {
  %4 = alloca { i64, i64 }, align 8
  %5 = bitcast { i64, i64 }* %4 to %struct.SkIRect*
  %6 = bitcast { i64, i64 }* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %6) #11
  %7 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %4, i64 0, i32 1
  %8 = getelementptr inbounds %class.SkSpecialImage, %class.SkSpecialImage* %1, i64 0, i32 2, i32 0
  %9 = load i32, i32* %8, align 4
  %10 = getelementptr inbounds %class.SkSpecialImage, %class.SkSpecialImage* %1, i64 0, i32 2, i32 1
  %11 = load i32, i32* %10, align 4
  %12 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %2, i64 0, i32 0
  %13 = load i32, i32* %12, align 4
  %14 = sext i32 %13 to i64
  %15 = sext i32 %9 to i64
  %16 = add nsw i64 %14, %15
  %17 = icmp slt i64 %16, 2147483647
  %18 = select i1 %17, i64 %16, i64 2147483647
  %19 = icmp sgt i64 %18, -2147483647
  %20 = select i1 %19, i64 %18, i64 -2147483647
  %21 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %2, i64 0, i32 1
  %22 = load i32, i32* %21, align 4
  %23 = sext i32 %22 to i64
  %24 = sext i32 %11 to i64
  %25 = add nsw i64 %23, %24
  %26 = icmp slt i64 %25, 2147483647
  %27 = select i1 %26, i64 %25, i64 2147483647
  %28 = icmp sgt i64 %27, -2147483647
  %29 = select i1 %28, i64 %27, i64 -2147483647
  %30 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %2, i64 0, i32 2
  %31 = load i32, i32* %30, align 4
  %32 = sext i32 %31 to i64
  %33 = add nsw i64 %32, %15
  %34 = icmp slt i64 %33, 2147483647
  %35 = select i1 %34, i64 %33, i64 2147483647
  %36 = icmp sgt i64 %35, -2147483647
  %37 = select i1 %36, i64 %35, i64 -2147483647
  %38 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %2, i64 0, i32 3
  %39 = load i32, i32* %38, align 4
  %40 = sext i32 %39 to i64
  %41 = add nsw i64 %40, %24
  %42 = icmp slt i64 %41, 2147483647
  %43 = select i1 %42, i64 %41, i64 2147483647
  %44 = icmp sgt i64 %43, -2147483647
  %45 = select i1 %44, i64 %43, i64 -2147483647
  %46 = shl nsw i64 %29, 32
  %47 = and i64 %20, 4294967295
  %48 = or i64 %46, %47
  %49 = shl nsw i64 %45, 32
  %50 = and i64 %37, 4294967295
  %51 = or i64 %49, %50
  %52 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %4, i64 0, i32 0
  store i64 %48, i64* %52, align 8
  store i64 %51, i64* %7, align 8
  %53 = bitcast %class.SkSpecialImage* %1 to %class.SkSpecialImage_Base*
  %54 = bitcast %class.SkSpecialImage* %1 to void (%class.sk_sp.151*, %class.SkSpecialImage_Base*, %struct.SkIRect*)***
  %55 = load void (%class.sk_sp.151*, %class.SkSpecialImage_Base*, %struct.SkIRect*)**, void (%class.sk_sp.151*, %class.SkSpecialImage_Base*, %struct.SkIRect*)*** %54, align 8
  %56 = getelementptr inbounds void (%class.sk_sp.151*, %class.SkSpecialImage_Base*, %struct.SkIRect*)*, void (%class.sk_sp.151*, %class.SkSpecialImage_Base*, %struct.SkIRect*)** %55, i64 11
  %57 = load void (%class.sk_sp.151*, %class.SkSpecialImage_Base*, %struct.SkIRect*)*, void (%class.sk_sp.151*, %class.SkSpecialImage_Base*, %struct.SkIRect*)** %56, align 8
  call void %57(%class.sk_sp.151* sret %0, %class.SkSpecialImage_Base* %53, %struct.SkIRect* nonnull dereferenceable(16) %5) #11
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %6) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK14SkSpecialImage7asImageEPK7SkIRect(%class.sk_sp.152* noalias sret, %class.SkSpecialImage*, %struct.SkIRect* readonly) local_unnamed_addr #0 align 2 {
  %4 = alloca { i64, i64 }, align 8
  %5 = icmp eq %struct.SkIRect* %2, null
  br i1 %5, label %60, label %6

6:                                                ; preds = %3
  %7 = bitcast { i64, i64 }* %4 to %struct.SkIRect*
  %8 = bitcast { i64, i64 }* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %8) #11
  %9 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %4, i64 0, i32 1
  %10 = getelementptr inbounds %class.SkSpecialImage, %class.SkSpecialImage* %1, i64 0, i32 2, i32 0
  %11 = load i32, i32* %10, align 4
  %12 = getelementptr inbounds %class.SkSpecialImage, %class.SkSpecialImage* %1, i64 0, i32 2, i32 1
  %13 = load i32, i32* %12, align 4
  %14 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %2, i64 0, i32 0
  %15 = load i32, i32* %14, align 4
  %16 = sext i32 %15 to i64
  %17 = sext i32 %11 to i64
  %18 = add nsw i64 %16, %17
  %19 = icmp slt i64 %18, 2147483647
  %20 = select i1 %19, i64 %18, i64 2147483647
  %21 = icmp sgt i64 %20, -2147483647
  %22 = select i1 %21, i64 %20, i64 -2147483647
  %23 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %2, i64 0, i32 1
  %24 = load i32, i32* %23, align 4
  %25 = sext i32 %24 to i64
  %26 = sext i32 %13 to i64
  %27 = add nsw i64 %25, %26
  %28 = icmp slt i64 %27, 2147483647
  %29 = select i1 %28, i64 %27, i64 2147483647
  %30 = icmp sgt i64 %29, -2147483647
  %31 = select i1 %30, i64 %29, i64 -2147483647
  %32 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %2, i64 0, i32 2
  %33 = load i32, i32* %32, align 4
  %34 = sext i32 %33 to i64
  %35 = add nsw i64 %34, %17
  %36 = icmp slt i64 %35, 2147483647
  %37 = select i1 %36, i64 %35, i64 2147483647
  %38 = icmp sgt i64 %37, -2147483647
  %39 = select i1 %38, i64 %37, i64 -2147483647
  %40 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %2, i64 0, i32 3
  %41 = load i32, i32* %40, align 4
  %42 = sext i32 %41 to i64
  %43 = add nsw i64 %42, %26
  %44 = icmp slt i64 %43, 2147483647
  %45 = select i1 %44, i64 %43, i64 2147483647
  %46 = icmp sgt i64 %45, -2147483647
  %47 = select i1 %46, i64 %45, i64 -2147483647
  %48 = shl nsw i64 %31, 32
  %49 = and i64 %22, 4294967295
  %50 = or i64 %48, %49
  %51 = shl nsw i64 %47, 32
  %52 = and i64 %39, 4294967295
  %53 = or i64 %51, %52
  %54 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %4, i64 0, i32 0
  store i64 %50, i64* %54, align 8
  store i64 %53, i64* %9, align 8
  %55 = bitcast %class.SkSpecialImage* %1 to %class.SkSpecialImage_Base*
  %56 = bitcast %class.SkSpecialImage* %1 to void (%class.sk_sp.152*, %class.SkSpecialImage_Base*, %struct.SkIRect*)***
  %57 = load void (%class.sk_sp.152*, %class.SkSpecialImage_Base*, %struct.SkIRect*)**, void (%class.sk_sp.152*, %class.SkSpecialImage_Base*, %struct.SkIRect*)*** %56, align 8
  %58 = getelementptr inbounds void (%class.sk_sp.152*, %class.SkSpecialImage_Base*, %struct.SkIRect*)*, void (%class.sk_sp.152*, %class.SkSpecialImage_Base*, %struct.SkIRect*)** %57, i64 13
  %59 = load void (%class.sk_sp.152*, %class.SkSpecialImage_Base*, %struct.SkIRect*)*, void (%class.sk_sp.152*, %class.SkSpecialImage_Base*, %struct.SkIRect*)** %58, align 8
  call void %59(%class.sk_sp.152* sret %0, %class.SkSpecialImage_Base* %55, %struct.SkIRect* nonnull %7) #11
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %8) #11
  br label %66

60:                                               ; preds = %3
  %61 = bitcast %class.SkSpecialImage* %1 to %class.SkSpecialImage_Base*
  %62 = bitcast %class.SkSpecialImage* %1 to void (%class.sk_sp.152*, %class.SkSpecialImage_Base*, %struct.SkIRect*)***
  %63 = load void (%class.sk_sp.152*, %class.SkSpecialImage_Base*, %struct.SkIRect*)**, void (%class.sk_sp.152*, %class.SkSpecialImage_Base*, %struct.SkIRect*)*** %62, align 8
  %64 = getelementptr inbounds void (%class.sk_sp.152*, %class.SkSpecialImage_Base*, %struct.SkIRect*)*, void (%class.sk_sp.152*, %class.SkSpecialImage_Base*, %struct.SkIRect*)** %63, i64 13
  %65 = load void (%class.sk_sp.152*, %class.SkSpecialImage_Base*, %struct.SkIRect*)*, void (%class.sk_sp.152*, %class.SkSpecialImage_Base*, %struct.SkIRect*)** %64, align 8
  tail call void %65(%class.sk_sp.152* sret %0, %class.SkSpecialImage_Base* %61, %struct.SkIRect* null) #11
  br label %66

66:                                               ; preds = %60, %6
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN14SkSpecialImage13MakeFromImageEP18GrRecordingContextRK7SkIRect5sk_spI7SkImageERK14SkSurfaceProps(%class.sk_sp.151* noalias nocapture sret, %class.GrRecordingContext*, %struct.SkIRect* nocapture readonly dereferenceable(16), %class.sk_sp.152* nocapture readonly, %class.SkSurfaceProps* dereferenceable(8)) local_unnamed_addr #0 align 2 {
  %6 = alloca %"class.std::__1::tuple", align 8
  %7 = alloca %class.GrSurfaceProxyView, align 8
  %8 = alloca %class.sk_sp.15, align 8
  %9 = alloca %class.SkBitmap, align 8
  %10 = icmp eq %class.GrRecordingContext* %1, null
  br i1 %10, label %73, label %11

11:                                               ; preds = %5
  %12 = bitcast %"class.std::__1::tuple"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %12) #11
  %13 = getelementptr inbounds %"class.std::__1::tuple", %"class.std::__1::tuple"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %14 = getelementptr inbounds %"class.std::__1::tuple", %"class.std::__1::tuple"* %6, i64 0, i32 0, i32 0, i32 0, i32 1
  %15 = getelementptr inbounds %"class.std::__1::tuple", %"class.std::__1::tuple"* %6, i64 0, i32 0, i32 0, i32 0, i32 2, i32 0
  %16 = getelementptr inbounds %"class.std::__1::tuple", %"class.std::__1::tuple"* %6, i64 0, i32 0, i32 1, i32 0
  %17 = bitcast %class.sk_sp.152* %3 to %class.SkImage_Base**
  %18 = bitcast %"class.std::__1::tuple"* %6 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %18, i8 -86, i64 24, i1 false)
  %19 = load %class.SkImage_Base*, %class.SkImage_Base** %17, align 8
  call void @_ZNK12SkImage_Base6asViewEP18GrRecordingContext11GrMipmapped19GrImageTexGenPolicy(%"class.std::__1::tuple"* nonnull sret %6, %class.SkImage_Base* %19, %class.GrRecordingContext* nonnull %1, i1 zeroext false, i32 0) #11
  %20 = getelementptr inbounds %class.sk_sp.152, %class.sk_sp.152* %3, i64 0, i32 0
  %21 = load %class.SkImage*, %class.SkImage** %20, align 8
  %22 = getelementptr inbounds %class.SkImage, %class.SkImage* %21, i64 0, i32 3
  %23 = load i32, i32* %22, align 8
  %24 = bitcast %"class.std::__1::tuple"* %6 to i64*
  %25 = load i64, i64* %24, align 8
  store %class.GrSurfaceProxy* null, %class.GrSurfaceProxy** %13, align 8
  %26 = bitcast %class.GrSurfaceProxyView* %7 to i64*
  store i64 %25, i64* %26, align 8
  %27 = getelementptr inbounds %class.GrSurfaceProxyView, %class.GrSurfaceProxyView* %7, i64 0, i32 1
  %28 = load i32, i32* %14, align 8
  store i32 %28, i32* %27, align 8
  %29 = getelementptr inbounds %class.GrSurfaceProxyView, %class.GrSurfaceProxyView* %7, i64 0, i32 2, i32 0
  %30 = load i16, i16* %15, align 4
  store i16 %30, i16* %29, align 4
  %31 = load i32, i32* %16, align 8
  call void @_ZNK7SkImage13refColorSpaceEv(%class.sk_sp.15* nonnull sret %8, %class.SkImage* %21) #11
  call void @_ZN14SkSpecialImage19MakeDeferredFromGpuEP18GrRecordingContextRK7SkIRectj18GrSurfaceProxyView11GrColorType5sk_spI12SkColorSpaceERK14SkSurfaceProps11SkAlphaType(%class.sk_sp.151* sret %0, %class.GrRecordingContext* nonnull %1, %struct.SkIRect* dereferenceable(16) %2, i32 %23, %class.GrSurfaceProxyView* nonnull %7, i32 %31, %class.sk_sp.15* nonnull %8, %class.SkSurfaceProps* dereferenceable(8) %4, i32 2)
  %32 = getelementptr inbounds %class.sk_sp.15, %class.sk_sp.15* %8, i64 0, i32 0
  %33 = load %class.SkColorSpace*, %class.SkColorSpace** %32, align 8
  %34 = icmp eq %class.SkColorSpace* %33, null
  br i1 %34, label %41, label %35

35:                                               ; preds = %11
  %36 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %33, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %37 = atomicrmw add i32* %36, i32 -1 acq_rel
  %38 = icmp eq i32 %37, 1
  br i1 %38, label %39, label %41

39:                                               ; preds = %35
  %40 = bitcast %class.SkColorSpace* %33 to i8*
  call void @_ZdlPv(i8* %40) #12
  br label %41

41:                                               ; preds = %11, %35, %39
  %42 = getelementptr inbounds %class.GrSurfaceProxyView, %class.GrSurfaceProxyView* %7, i64 0, i32 0, i32 0
  %43 = load %class.GrSurfaceProxy*, %class.GrSurfaceProxy** %42, align 8
  %44 = icmp eq %class.GrSurfaceProxy* %43, null
  br i1 %44, label %57, label %45

45:                                               ; preds = %41
  %46 = getelementptr inbounds %class.GrSurfaceProxy, %class.GrSurfaceProxy* %43, i64 0, i32 1
  %47 = getelementptr inbounds %class.SkNVRefCnt.104, %class.SkNVRefCnt.104* %46, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %48 = atomicrmw add i32* %47, i32 -1 acq_rel
  %49 = icmp eq i32 %48, 1
  br i1 %49, label %50, label %57

50:                                               ; preds = %45
  %51 = getelementptr inbounds %class.SkNVRefCnt.104, %class.SkNVRefCnt.104* %46, i64 -2
  %52 = bitcast %class.SkNVRefCnt.104* %51 to %class.GrSurfaceProxy*
  %53 = bitcast %class.SkNVRefCnt.104* %51 to void (%class.GrSurfaceProxy*)***
  %54 = load void (%class.GrSurfaceProxy*)**, void (%class.GrSurfaceProxy*)*** %53, align 8
  %55 = getelementptr inbounds void (%class.GrSurfaceProxy*)*, void (%class.GrSurfaceProxy*)** %54, i64 1
  %56 = load void (%class.GrSurfaceProxy*)*, void (%class.GrSurfaceProxy*)** %55, align 8
  call void %56(%class.GrSurfaceProxy* nonnull %52) #11
  br label %57

57:                                               ; preds = %41, %45, %50
  %58 = load %class.GrSurfaceProxy*, %class.GrSurfaceProxy** %13, align 8
  %59 = icmp eq %class.GrSurfaceProxy* %58, null
  br i1 %59, label %72, label %60

60:                                               ; preds = %57
  %61 = getelementptr inbounds %class.GrSurfaceProxy, %class.GrSurfaceProxy* %58, i64 0, i32 1
  %62 = getelementptr inbounds %class.SkNVRefCnt.104, %class.SkNVRefCnt.104* %61, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %63 = atomicrmw add i32* %62, i32 -1 acq_rel
  %64 = icmp eq i32 %63, 1
  br i1 %64, label %65, label %72

65:                                               ; preds = %60
  %66 = getelementptr inbounds %class.SkNVRefCnt.104, %class.SkNVRefCnt.104* %61, i64 -2
  %67 = bitcast %class.SkNVRefCnt.104* %66 to %class.GrSurfaceProxy*
  %68 = bitcast %class.SkNVRefCnt.104* %66 to void (%class.GrSurfaceProxy*)***
  %69 = load void (%class.GrSurfaceProxy*)**, void (%class.GrSurfaceProxy*)*** %68, align 8
  %70 = getelementptr inbounds void (%class.GrSurfaceProxy*)*, void (%class.GrSurfaceProxy*)** %69, i64 1
  %71 = load void (%class.GrSurfaceProxy*)*, void (%class.GrSurfaceProxy*)** %70, align 8
  call void %71(%class.GrSurfaceProxy* nonnull %67) #11
  br label %72

72:                                               ; preds = %57, %60, %65
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %12) #11
  br label %86

73:                                               ; preds = %5
  %74 = bitcast %class.SkBitmap* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %74) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %74, i8 -86, i64 56, i1 false)
  call void @_ZN8SkBitmapC1Ev(%class.SkBitmap* nonnull %9) #11
  %75 = bitcast %class.sk_sp.152* %3 to %class.SkImage_Base**
  %76 = load %class.SkImage_Base*, %class.SkImage_Base** %75, align 8
  %77 = bitcast %class.SkImage_Base* %76 to i1 (%class.SkImage_Base*, %class.GrDirectContext*, %class.SkBitmap*, i32)***
  %78 = load i1 (%class.SkImage_Base*, %class.GrDirectContext*, %class.SkBitmap*, i32)**, i1 (%class.SkImage_Base*, %class.GrDirectContext*, %class.SkBitmap*, i32)*** %77, align 8
  %79 = getelementptr inbounds i1 (%class.SkImage_Base*, %class.GrDirectContext*, %class.SkBitmap*, i32)*, i1 (%class.SkImage_Base*, %class.GrDirectContext*, %class.SkBitmap*, i32)** %78, i64 18
  %80 = load i1 (%class.SkImage_Base*, %class.GrDirectContext*, %class.SkBitmap*, i32)*, i1 (%class.SkImage_Base*, %class.GrDirectContext*, %class.SkBitmap*, i32)** %79, align 8
  %81 = call zeroext i1 %80(%class.SkImage_Base* %76, %class.GrDirectContext* null, %class.SkBitmap* nonnull %9, i32 0) #11
  br i1 %81, label %82, label %83

82:                                               ; preds = %73
  call void @_ZN14SkSpecialImage14MakeFromRasterERK7SkIRectRK8SkBitmapRK14SkSurfaceProps(%class.sk_sp.151* sret %0, %struct.SkIRect* dereferenceable(16) %2, %class.SkBitmap* nonnull dereferenceable(56) %9, %class.SkSurfaceProps* dereferenceable(8) %4)
  br label %85

83:                                               ; preds = %73
  %84 = getelementptr inbounds %class.sk_sp.151, %class.sk_sp.151* %0, i64 0, i32 0
  store %class.SkSpecialImage* null, %class.SkSpecialImage** %84, align 8
  br label %85

85:                                               ; preds = %83, %82
  call void @_ZN8SkBitmapD1Ev(%class.SkBitmap* nonnull %9) #11
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %74) #11
  br label %86

86:                                               ; preds = %85, %72
  ret void
}

declare void @_ZNK12SkImage_Base6asViewEP18GrRecordingContext11GrMipmapped19GrImageTexGenPolicy(%"class.std::__1::tuple"* sret, %class.SkImage_Base*, %class.GrRecordingContext*, i1 zeroext, i32) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN14SkSpecialImage19MakeDeferredFromGpuEP18GrRecordingContextRK7SkIRectj18GrSurfaceProxyView11GrColorType5sk_spI12SkColorSpaceERK14SkSurfaceProps11SkAlphaType(%class.sk_sp.151* noalias nocapture sret, %class.GrRecordingContext*, %struct.SkIRect* nocapture readonly dereferenceable(16), i32, %class.GrSurfaceProxyView* nocapture, i32, %class.sk_sp.15* nocapture, %class.SkSurfaceProps* dereferenceable(8), i32) local_unnamed_addr #0 align 2 {
  %10 = ptrtoint %class.GrRecordingContext* %1 to i64
  %11 = icmp eq %class.GrRecordingContext* %1, null
  br i1 %11, label %29, label %12

12:                                               ; preds = %9
  %13 = bitcast %class.GrRecordingContext* %1 to i1 (%class.GrRecordingContext*)***
  %14 = load i1 (%class.GrRecordingContext*)**, i1 (%class.GrRecordingContext*)*** %13, align 8
  %15 = getelementptr inbounds i1 (%class.GrRecordingContext*)*, i1 (%class.GrRecordingContext*)** %14, i64 8
  %16 = load i1 (%class.GrRecordingContext*)*, i1 (%class.GrRecordingContext*)** %15, align 8
  %17 = tail call zeroext i1 %16(%class.GrRecordingContext* nonnull %1) #11
  br i1 %17, label %29, label %18

18:                                               ; preds = %12
  %19 = getelementptr inbounds %class.GrSurfaceProxyView, %class.GrSurfaceProxyView* %4, i64 0, i32 0, i32 0
  %20 = load %class.GrSurfaceProxy*, %class.GrSurfaceProxy** %19, align 8
  %21 = icmp eq %class.GrSurfaceProxy* %20, null
  br i1 %21, label %29, label %22

22:                                               ; preds = %18
  %23 = bitcast %class.GrSurfaceProxy* %20 to %class.GrTextureProxy* (%class.GrSurfaceProxy*)***
  %24 = load %class.GrTextureProxy* (%class.GrSurfaceProxy*)**, %class.GrTextureProxy* (%class.GrSurfaceProxy*)*** %23, align 8
  %25 = getelementptr inbounds %class.GrTextureProxy* (%class.GrSurfaceProxy*)*, %class.GrTextureProxy* (%class.GrSurfaceProxy*)** %24, i64 3
  %26 = load %class.GrTextureProxy* (%class.GrSurfaceProxy*)*, %class.GrTextureProxy* (%class.GrSurfaceProxy*)** %25, align 8
  %27 = tail call %class.GrTextureProxy* %26(%class.GrSurfaceProxy* nonnull %20) #11
  %28 = icmp eq %class.GrTextureProxy* %27, null
  br i1 %28, label %29, label %31

29:                                               ; preds = %18, %22, %9, %12
  %30 = getelementptr inbounds %class.sk_sp.151, %class.sk_sp.151* %0, i64 0, i32 0
  store %class.SkSpecialImage* null, %class.SkSpecialImage** %30, align 8
  br label %110

31:                                               ; preds = %22
  %32 = load %class.GrSurfaceProxy*, %class.GrSurfaceProxy** %19, align 8
  %33 = getelementptr inbounds %class.GrSurfaceProxy, %class.GrSurfaceProxy* %32, i64 0, i32 6
  %34 = bitcast %struct.SkISize* %33 to i64*
  %35 = load i64, i64* %34, align 8
  %36 = trunc i64 %35 to i32
  %37 = lshr i64 %35, 32
  %38 = trunc i64 %37 to i32
  %39 = or i64 %37, %35
  %40 = trunc i64 %39 to i32
  %41 = icmp eq i32 %40, 0
  %42 = ptrtoint %class.GrSurfaceProxy* %32 to i64
  br i1 %41, label %72, label %43

43:                                               ; preds = %31
  %44 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %2, i64 0, i32 0
  %45 = load i32, i32* %44, align 4
  %46 = icmp sgt i32 %45, -1
  %47 = icmp slt i32 %45, %36
  %48 = and i1 %46, %47
  br i1 %48, label %49, label %71

49:                                               ; preds = %43
  %50 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %2, i64 0, i32 2
  %51 = load i32, i32* %50, align 4
  %52 = icmp sge i32 %45, %51
  %53 = icmp slt i32 %51, 0
  %54 = or i1 %53, %52
  %55 = icmp sgt i32 %51, %36
  %56 = or i1 %55, %54
  br i1 %56, label %71, label %57

57:                                               ; preds = %49
  %58 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %2, i64 0, i32 1
  %59 = load i32, i32* %58, align 4
  %60 = icmp sgt i32 %59, -1
  %61 = icmp slt i32 %59, %38
  %62 = and i1 %60, %61
  br i1 %62, label %63, label %71

63:                                               ; preds = %57
  %64 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %2, i64 0, i32 3
  %65 = load i32, i32* %64, align 4
  %66 = icmp slt i32 %59, %65
  %67 = icmp sgt i32 %65, -1
  %68 = and i1 %66, %67
  %69 = icmp sle i32 %65, %38
  %70 = and i1 %69, %68
  br i1 %70, label %72, label %71

71:                                               ; preds = %43, %49, %57, %63
  tail call fastcc void @"_ZZN14SkSpecialImage19MakeDeferredFromGpuEP18GrRecordingContextRK7SkIRectj18GrSurfaceProxyView11GrColorType5sk_spI12SkColorSpaceERK14SkSurfaceProps11SkAlphaTypeENK3$_0clEv"()
  unreachable

72:                                               ; preds = %31, %63
  %73 = tail call i8* @_Znwm(i64 80) #12, !noalias !2
  store %class.GrSurfaceProxy* null, %class.GrSurfaceProxy** %19, align 8, !noalias !2
  %74 = getelementptr inbounds %class.GrSurfaceProxyView, %class.GrSurfaceProxyView* %4, i64 0, i32 1
  %75 = load i32, i32* %74, align 8, !noalias !2
  %76 = getelementptr inbounds %class.GrSurfaceProxyView, %class.GrSurfaceProxyView* %4, i64 0, i32 2, i32 0
  %77 = load i16, i16* %76, align 2, !noalias !2
  %78 = getelementptr inbounds %class.sk_sp.15, %class.sk_sp.15* %6, i64 0, i32 0
  %79 = bitcast %class.sk_sp.15* %6 to i64*
  %80 = load i64, i64* %79, align 8, !noalias !2
  store %class.SkColorSpace* null, %class.SkColorSpace** %78, align 8, !noalias !2
  %81 = getelementptr inbounds i8, i8* %73, i64 8
  %82 = bitcast i8* %81 to i32*
  store i32 1, i32* %82, align 4, !noalias !2
  %83 = bitcast i8* %73 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [8 x i8*] }, { [8 x i8*] }* @_ZTV14SkSpecialImage, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %83, align 8, !noalias !2
  %84 = getelementptr inbounds i8, i8* %73, i64 12
  %85 = bitcast i8* %84 to %class.SkSurfaceProps*
  tail call void @_ZN14SkSurfacePropsC1ERKS_(%class.SkSurfaceProps* %85, %class.SkSurfaceProps* dereferenceable(8) %7) #11, !noalias !2
  %86 = getelementptr inbounds i8, i8* %73, i64 20
  %87 = bitcast %struct.SkIRect* %2 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %86, i8* align 4 %87, i64 16, i1 false) #11, !noalias !2
  %88 = getelementptr inbounds i8, i8* %73, i64 36
  %89 = bitcast i8* %88 to i32*
  %90 = icmp eq i32 %3, 0
  br i1 %90, label %91, label %93

91:                                               ; preds = %72
  %92 = tail call i32 @_ZN8SkNextID7ImageIDEv() #11, !noalias !2
  br label %93

93:                                               ; preds = %91, %72
  %94 = phi i32 [ %92, %91 ], [ %3, %72 ]
  store i32 %94, i32* %89, align 4, !noalias !2
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [17 x i8*] }, { [17 x i8*] }* @_ZTV18SkSpecialImage_Gpu, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %83, align 8, !noalias !2
  %95 = getelementptr inbounds i8, i8* %73, i64 40
  %96 = bitcast i8* %95 to i64*
  store i64 %10, i64* %96, align 8, !noalias !2
  %97 = getelementptr inbounds i8, i8* %73, i64 48
  %98 = bitcast i8* %97 to i64*
  store i64 %42, i64* %98, align 8, !noalias !2
  %99 = getelementptr inbounds i8, i8* %73, i64 56
  %100 = bitcast i8* %99 to i32*
  store i32 %75, i32* %100, align 8, !noalias !2
  %101 = getelementptr inbounds i8, i8* %73, i64 60
  %102 = bitcast i8* %101 to i16*
  store i16 %77, i16* %102, align 2, !noalias !2
  %103 = getelementptr inbounds i8, i8* %73, i64 64
  %104 = bitcast i8* %103 to i32*
  store i32 %5, i32* %104, align 8, !noalias !2
  %105 = getelementptr inbounds i8, i8* %73, i64 68
  %106 = bitcast i8* %105 to i32*
  store i32 %8, i32* %106, align 4, !noalias !2
  %107 = getelementptr inbounds i8, i8* %73, i64 72
  %108 = bitcast i8* %107 to i64*
  store i64 %80, i64* %108, align 8, !noalias !2
  %109 = bitcast %class.sk_sp.151* %0 to i8**
  store i8* %73, i8** %109, align 8
  br label %110

110:                                              ; preds = %93, %29
  ret void
}

declare void @_ZNK7SkImage13refColorSpaceEv(%class.sk_sp.15* sret, %class.SkImage*) local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #2

declare void @_ZN8SkBitmapC1Ev(%class.SkBitmap*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN14SkSpecialImage14MakeFromRasterERK7SkIRectRK8SkBitmapRK14SkSurfaceProps(%class.sk_sp.151* noalias nocapture sret, %struct.SkIRect* nocapture readonly dereferenceable(16), %class.SkBitmap* dereferenceable(56), %class.SkSurfaceProps* dereferenceable(8)) local_unnamed_addr #0 align 2 {
  %5 = alloca %class.SkBitmap, align 8
  %6 = alloca %struct.SkImageInfo, align 8
  %7 = getelementptr inbounds %class.SkBitmap, %class.SkBitmap* %2, i64 0, i32 0, i32 0
  %8 = load %class.SkPixelRef*, %class.SkPixelRef** %7, align 8
  %9 = icmp eq %class.SkPixelRef* %8, null
  br i1 %9, label %10, label %12

10:                                               ; preds = %4
  %11 = getelementptr inbounds %class.sk_sp.151, %class.sk_sp.151* %0, i64 0, i32 0
  store %class.SkSpecialImage* null, %class.SkSpecialImage** %11, align 8
  br label %101

12:                                               ; preds = %4
  %13 = bitcast %class.SkBitmap* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %13) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %13, i8 -86, i64 56, i1 false)
  call void @_ZN8SkBitmapC1Ev(%class.SkBitmap* nonnull %5) #11
  %14 = getelementptr inbounds %class.SkBitmap, %class.SkBitmap* %2, i64 0, i32 1, i32 2, i32 0, i32 1
  %15 = load i32, i32* %14, align 8
  %16 = icmp eq i32 %15, 6
  br i1 %16, label %79, label %17

17:                                               ; preds = %12
  %18 = bitcast %struct.SkImageInfo* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %18) #11
  %19 = getelementptr inbounds %class.SkBitmap, %class.SkBitmap* %2, i64 0, i32 1, i32 2, i32 1
  %20 = bitcast %struct.SkISize* %19 to i64*
  %21 = load i64, i64* %20, align 8, !noalias !5
  %22 = getelementptr inbounds %class.SkBitmap, %class.SkBitmap* %2, i64 0, i32 1, i32 2, i32 0, i32 2
  %23 = load i32, i32* %22, align 4, !noalias !8
  %24 = getelementptr inbounds %class.SkBitmap, %class.SkBitmap* %2, i64 0, i32 1, i32 2, i32 0, i32 0, i32 0
  %25 = load %class.SkColorSpace*, %class.SkColorSpace** %24, align 8, !noalias !11
  %26 = icmp eq %class.SkColorSpace* %25, null
  br i1 %26, label %30, label %27

27:                                               ; preds = %17
  %28 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %25, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %29 = atomicrmw add i32* %28, i32 1 monotonic, !noalias !11
  br label %30

30:                                               ; preds = %17, %27
  %31 = ptrtoint %class.SkColorSpace* %25 to i64
  %32 = zext i32 %23 to i64
  %33 = shl nuw i64 %32, 32
  %34 = or i64 %33, 6
  %35 = bitcast %struct.SkImageInfo* %6 to i64*
  store i64 %31, i64* %35, align 8, !alias.scope !14
  %36 = getelementptr inbounds %struct.SkImageInfo, %struct.SkImageInfo* %6, i64 0, i32 0, i32 1
  %37 = bitcast i32* %36 to i64*
  store i64 %34, i64* %37, align 8, !alias.scope !14
  %38 = getelementptr inbounds %struct.SkImageInfo, %struct.SkImageInfo* %6, i64 0, i32 1
  %39 = bitcast %struct.SkISize* %38 to i64*
  store i64 %21, i64* %39, align 8, !alias.scope !14
  %40 = shl i64 %21, 32
  %41 = ashr exact i64 %40, 32
  %42 = getelementptr inbounds %struct.SkImageInfo, %struct.SkImageInfo* %6, i64 0, i32 0
  %43 = call i32 @_ZNK11SkColorInfo13bytesPerPixelEv(%class.SkColorInfo* nonnull %42) #11
  %44 = sext i32 %43 to i64
  %45 = mul nsw i64 %41, %44
  %46 = icmp ult i64 %45, 2147483648
  %47 = select i1 %46, i64 %45, i64 0
  %48 = call zeroext i1 @_ZN8SkBitmap14tryAllocPixelsERK11SkImageInfom(%class.SkBitmap* nonnull %5, %struct.SkImageInfo* nonnull dereferenceable(24) %6, i64 %47) #11
  br i1 %48, label %49, label %66

49:                                               ; preds = %30
  %50 = getelementptr inbounds %class.SkBitmap, %class.SkBitmap* %5, i64 0, i32 1, i32 2
  %51 = getelementptr inbounds %class.SkBitmap, %class.SkBitmap* %5, i64 0, i32 1, i32 0
  %52 = load i8*, i8** %51, align 8
  %53 = getelementptr inbounds %class.SkBitmap, %class.SkBitmap* %5, i64 0, i32 1, i32 1
  %54 = load i64, i64* %53, align 8
  %55 = call zeroext i1 @_ZNK8SkBitmap10readPixelsERK11SkImageInfoPvmii(%class.SkBitmap* %2, %struct.SkImageInfo* dereferenceable(24) %50, i8* %52, i64 %54, i32 0, i32 0) #11
  %56 = getelementptr inbounds %struct.SkImageInfo, %struct.SkImageInfo* %6, i64 0, i32 0, i32 0, i32 0
  %57 = load %class.SkColorSpace*, %class.SkColorSpace** %56, align 8
  %58 = icmp eq %class.SkColorSpace* %57, null
  br i1 %58, label %65, label %59

59:                                               ; preds = %49
  %60 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %57, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %61 = atomicrmw add i32* %60, i32 -1 acq_rel
  %62 = icmp eq i32 %61, 1
  br i1 %62, label %63, label %65

63:                                               ; preds = %59
  %64 = bitcast %class.SkColorSpace* %57 to i8*
  call void @_ZdlPv(i8* %64) #12
  br label %65

65:                                               ; preds = %49, %59, %63
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %18) #11
  br i1 %55, label %79, label %77

66:                                               ; preds = %30
  %67 = getelementptr inbounds %struct.SkImageInfo, %struct.SkImageInfo* %6, i64 0, i32 0, i32 0, i32 0
  %68 = load %class.SkColorSpace*, %class.SkColorSpace** %67, align 8
  %69 = icmp eq %class.SkColorSpace* %68, null
  br i1 %69, label %76, label %70

70:                                               ; preds = %66
  %71 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %68, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %72 = atomicrmw add i32* %71, i32 -1 acq_rel
  %73 = icmp eq i32 %72, 1
  br i1 %73, label %74, label %76

74:                                               ; preds = %70
  %75 = bitcast %class.SkColorSpace* %68 to i8*
  call void @_ZdlPv(i8* %75) #12
  br label %76

76:                                               ; preds = %66, %70, %74
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %18) #11
  br label %77

77:                                               ; preds = %65, %76
  %78 = getelementptr inbounds %class.sk_sp.151, %class.sk_sp.151* %0, i64 0, i32 0
  store %class.SkSpecialImage* null, %class.SkSpecialImage** %78, align 8
  br label %100

79:                                               ; preds = %65, %12
  %80 = phi %class.SkBitmap* [ %2, %12 ], [ %5, %65 ]
  %81 = call i8* @_Znwm(i64 96) #12, !noalias !17
  %82 = call i32 @_ZNK8SkBitmap15getGenerationIDEv(%class.SkBitmap* %80) #11, !noalias !17
  %83 = getelementptr inbounds i8, i8* %81, i64 8
  %84 = bitcast i8* %83 to i32*
  store i32 1, i32* %84, align 4, !noalias !17
  %85 = bitcast i8* %81 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [8 x i8*] }, { [8 x i8*] }* @_ZTV14SkSpecialImage, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %85, align 8, !noalias !17
  %86 = getelementptr inbounds i8, i8* %81, i64 12
  %87 = bitcast i8* %86 to %class.SkSurfaceProps*
  call void @_ZN14SkSurfacePropsC1ERKS_(%class.SkSurfaceProps* %87, %class.SkSurfaceProps* dereferenceable(8) %3) #11, !noalias !17
  %88 = getelementptr inbounds i8, i8* %81, i64 20
  %89 = bitcast %struct.SkIRect* %1 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %88, i8* align 4 %89, i64 16, i1 false) #11, !noalias !17
  %90 = getelementptr inbounds i8, i8* %81, i64 36
  %91 = bitcast i8* %90 to i32*
  %92 = icmp eq i32 %82, 0
  br i1 %92, label %93, label %95

93:                                               ; preds = %79
  %94 = call i32 @_ZN8SkNextID7ImageIDEv() #11, !noalias !17
  br label %95

95:                                               ; preds = %93, %79
  %96 = phi i32 [ %94, %93 ], [ %82, %79 ]
  store i32 %96, i32* %91, align 4, !noalias !17
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [17 x i8*] }, { [17 x i8*] }* @_ZTV21SkSpecialImage_Raster, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %85, align 8, !noalias !17
  %97 = getelementptr inbounds i8, i8* %81, i64 40
  %98 = bitcast i8* %97 to %class.SkBitmap*
  call void @_ZN8SkBitmapC1ERKS_(%class.SkBitmap* %98, %class.SkBitmap* dereferenceable(56) %80) #11, !noalias !17
  %99 = bitcast %class.sk_sp.151* %0 to i8**
  store i8* %81, i8** %99, align 8
  br label %100

100:                                              ; preds = %95, %77
  call void @_ZN8SkBitmapD1Ev(%class.SkBitmap* nonnull %5) #11
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %13) #11
  br label %101

101:                                              ; preds = %100, %10
  ret void
}

; Function Attrs: nounwind
declare void @_ZN8SkBitmapD1Ev(%class.SkBitmap*) unnamed_addr #3

declare zeroext i1 @_ZNK8SkBitmap10readPixelsERK11SkImageInfoPvmii(%class.SkBitmap*, %struct.SkImageInfo* dereferenceable(24), i8*, i64, i32, i32) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN14SkSpecialImage14CopyFromRasterERK7SkIRectRK8SkBitmapRK14SkSurfaceProps(%class.sk_sp.151* noalias nocapture sret, %struct.SkIRect* nocapture readonly dereferenceable(16), %class.SkBitmap* dereferenceable(56), %class.SkSurfaceProps* dereferenceable(8)) local_unnamed_addr #0 align 2 {
  %5 = alloca %class.SkBitmap, align 8
  %6 = alloca %struct.SkImageInfo, align 8
  %7 = getelementptr inbounds %class.SkBitmap, %class.SkBitmap* %2, i64 0, i32 0, i32 0
  %8 = load %class.SkPixelRef*, %class.SkPixelRef** %7, align 8
  %9 = icmp eq %class.SkPixelRef* %8, null
  br i1 %9, label %10, label %12

10:                                               ; preds = %4
  %11 = getelementptr inbounds %class.sk_sp.151, %class.sk_sp.151* %0, i64 0, i32 0
  store %class.SkSpecialImage* null, %class.SkSpecialImage** %11, align 8
  br label %133

12:                                               ; preds = %4
  %13 = bitcast %class.SkBitmap* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %13) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %13, i8 -86, i64 56, i1 false)
  call void @_ZN8SkBitmapC1Ev(%class.SkBitmap* nonnull %5) #11
  %14 = bitcast %struct.SkImageInfo* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %14) #11
  %15 = getelementptr inbounds %struct.SkImageInfo, %struct.SkImageInfo* %6, i64 0, i32 0, i32 0, i32 0
  %16 = getelementptr inbounds %struct.SkImageInfo, %struct.SkImageInfo* %6, i64 0, i32 0, i32 1
  %17 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %1, i64 0, i32 2
  %18 = bitcast %struct.SkImageInfo* %6 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %18, i8 -86, i64 24, i1 false)
  %19 = load i32, i32* %17, align 4
  %20 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %1, i64 0, i32 0
  %21 = load i32, i32* %20, align 4
  %22 = sub i32 %19, %21
  %23 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %1, i64 0, i32 3
  %24 = load i32, i32* %23, align 4
  %25 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %1, i64 0, i32 1
  %26 = load i32, i32* %25, align 4
  %27 = sub i32 %24, %26
  %28 = zext i32 %27 to i64
  %29 = shl nuw i64 %28, 32
  %30 = zext i32 %22 to i64
  %31 = or i64 %29, %30
  %32 = getelementptr inbounds %class.SkBitmap, %class.SkBitmap* %2, i64 0, i32 1, i32 2, i32 0, i32 0, i32 0
  %33 = load %class.SkColorSpace*, %class.SkColorSpace** %32, align 8, !noalias !20
  %34 = icmp eq %class.SkColorSpace* %33, null
  br i1 %34, label %38, label %35

35:                                               ; preds = %12
  %36 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %33, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %37 = atomicrmw add i32* %36, i32 1 monotonic, !noalias !20
  br label %38

38:                                               ; preds = %12, %35
  store %class.SkColorSpace* %33, %class.SkColorSpace** %15, align 8, !alias.scope !20
  %39 = getelementptr inbounds %class.SkBitmap, %class.SkBitmap* %2, i64 0, i32 1, i32 2, i32 0, i32 1
  %40 = bitcast i32* %39 to i64*
  %41 = bitcast i32* %16 to i64*
  %42 = load i64, i64* %40, align 8, !noalias !20
  store i64 %42, i64* %41, align 8, !alias.scope !20
  %43 = getelementptr inbounds %struct.SkImageInfo, %struct.SkImageInfo* %6, i64 0, i32 1
  %44 = bitcast %struct.SkISize* %43 to i64*
  store i64 %31, i64* %44, align 8, !alias.scope !20
  %45 = trunc i64 %42 to i32
  %46 = icmp eq i32 %45, 6
  %47 = and i64 %42, -4294967296
  br i1 %46, label %69, label %48

48:                                               ; preds = %38
  br i1 %34, label %49, label %53

49:                                               ; preds = %48
  %50 = ptrtoint %class.SkColorSpace* %33 to i64
  %51 = or i64 %47, 6
  %52 = bitcast %struct.SkImageInfo* %6 to i64*
  store i64 %50, i64* %52, align 8
  br label %67

53:                                               ; preds = %48
  %54 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %33, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %55 = atomicrmw add i32* %54, i32 1 monotonic, !noalias !25
  %56 = load %class.SkColorSpace*, %class.SkColorSpace** %15, align 8
  %57 = bitcast %class.SkColorSpace* %56 to i8*
  %58 = ptrtoint %class.SkColorSpace* %33 to i64
  %59 = or i64 %47, 6
  %60 = bitcast %struct.SkImageInfo* %6 to i64*
  store i64 %58, i64* %60, align 8
  %61 = icmp eq %class.SkColorSpace* %56, null
  br i1 %61, label %67, label %62

62:                                               ; preds = %53
  %63 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %56, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %64 = atomicrmw add i32* %63, i32 -1 acq_rel
  %65 = icmp eq i32 %64, 1
  br i1 %65, label %66, label %67

66:                                               ; preds = %62
  call void @_ZdlPv(i8* %57) #12
  br label %67

67:                                               ; preds = %49, %66, %62, %53
  %68 = phi i64 [ %51, %49 ], [ %59, %66 ], [ %59, %62 ], [ %59, %53 ]
  store i64 %68, i64* %41, align 8
  store i64 %31, i64* %44, align 8
  br label %69

69:                                               ; preds = %67, %38
  %70 = sext i32 %22 to i64
  %71 = getelementptr inbounds %struct.SkImageInfo, %struct.SkImageInfo* %6, i64 0, i32 0
  %72 = call i32 @_ZNK11SkColorInfo13bytesPerPixelEv(%class.SkColorInfo* nonnull %71) #11
  %73 = sext i32 %72 to i64
  %74 = mul nsw i64 %73, %70
  %75 = icmp ult i64 %74, 2147483648
  %76 = select i1 %75, i64 %74, i64 0
  %77 = call zeroext i1 @_ZN8SkBitmap14tryAllocPixelsERK11SkImageInfom(%class.SkBitmap* nonnull %5, %struct.SkImageInfo* nonnull dereferenceable(24) %6, i64 %76) #11
  br i1 %77, label %80, label %78

78:                                               ; preds = %69
  %79 = getelementptr inbounds %class.sk_sp.151, %class.sk_sp.151* %0, i64 0, i32 0
  store %class.SkSpecialImage* null, %class.SkSpecialImage** %79, align 8
  br label %123

80:                                               ; preds = %69
  %81 = getelementptr inbounds %class.SkBitmap, %class.SkBitmap* %5, i64 0, i32 1, i32 2
  %82 = getelementptr inbounds %class.SkBitmap, %class.SkBitmap* %5, i64 0, i32 1, i32 0
  %83 = load i8*, i8** %82, align 8
  %84 = getelementptr inbounds %class.SkBitmap, %class.SkBitmap* %5, i64 0, i32 1, i32 1
  %85 = load i64, i64* %84, align 8
  %86 = load i32, i32* %20, align 4
  %87 = load i32, i32* %25, align 4
  %88 = call zeroext i1 @_ZNK8SkBitmap10readPixelsERK11SkImageInfoPvmii(%class.SkBitmap* %2, %struct.SkImageInfo* dereferenceable(24) %81, i8* %83, i64 %85, i32 %86, i32 %87) #11
  br i1 %88, label %91, label %89

89:                                               ; preds = %80
  %90 = getelementptr inbounds %class.sk_sp.151, %class.sk_sp.151* %0, i64 0, i32 0
  store %class.SkSpecialImage* null, %class.SkSpecialImage** %90, align 8
  br label %123

91:                                               ; preds = %80
  %92 = load i32, i32* %17, align 4
  %93 = load i32, i32* %20, align 4
  %94 = sub i32 %92, %93
  %95 = load i32, i32* %23, align 4
  %96 = load i32, i32* %25, align 4
  %97 = sub i32 %95, %96
  %98 = zext i32 %97 to i64
  %99 = shl nuw i64 %98, 32
  %100 = zext i32 %94 to i64
  %101 = or i64 %99, %100
  %102 = call i8* @_Znwm(i64 96) #12, !noalias !32
  %103 = call i32 @_ZNK8SkBitmap15getGenerationIDEv(%class.SkBitmap* nonnull %5) #11, !noalias !32
  %104 = getelementptr inbounds i8, i8* %102, i64 8
  %105 = bitcast i8* %104 to i32*
  store i32 1, i32* %105, align 4, !noalias !32
  %106 = bitcast i8* %102 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [8 x i8*] }, { [8 x i8*] }* @_ZTV14SkSpecialImage, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %106, align 8, !noalias !32
  %107 = getelementptr inbounds i8, i8* %102, i64 12
  %108 = bitcast i8* %107 to %class.SkSurfaceProps*
  call void @_ZN14SkSurfacePropsC1ERKS_(%class.SkSurfaceProps* %108, %class.SkSurfaceProps* dereferenceable(8) %3) #11, !noalias !32
  %109 = getelementptr inbounds i8, i8* %102, i64 20
  %110 = bitcast i8* %109 to i64*
  store i64 0, i64* %110, align 4, !noalias !32
  %111 = getelementptr inbounds i8, i8* %102, i64 28
  %112 = bitcast i8* %111 to i64*
  store i64 %101, i64* %112, align 4, !noalias !32
  %113 = getelementptr inbounds i8, i8* %102, i64 36
  %114 = bitcast i8* %113 to i32*
  %115 = icmp eq i32 %103, 0
  br i1 %115, label %116, label %118

116:                                              ; preds = %91
  %117 = call i32 @_ZN8SkNextID7ImageIDEv() #11, !noalias !32
  br label %118

118:                                              ; preds = %116, %91
  %119 = phi i32 [ %117, %116 ], [ %103, %91 ]
  store i32 %119, i32* %114, align 4, !noalias !32
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [17 x i8*] }, { [17 x i8*] }* @_ZTV21SkSpecialImage_Raster, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %106, align 8, !noalias !32
  %120 = getelementptr inbounds i8, i8* %102, i64 40
  %121 = bitcast i8* %120 to %class.SkBitmap*
  call void @_ZN8SkBitmapC1ERKS_(%class.SkBitmap* %121, %class.SkBitmap* nonnull dereferenceable(56) %5) #11, !noalias !32
  %122 = bitcast %class.sk_sp.151* %0 to i8**
  store i8* %102, i8** %122, align 8
  br label %123

123:                                              ; preds = %118, %89, %78
  %124 = load %class.SkColorSpace*, %class.SkColorSpace** %15, align 8
  %125 = icmp eq %class.SkColorSpace* %124, null
  br i1 %125, label %132, label %126

126:                                              ; preds = %123
  %127 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %124, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %128 = atomicrmw add i32* %127, i32 -1 acq_rel
  %129 = icmp eq i32 %128, 1
  br i1 %129, label %130, label %132

130:                                              ; preds = %126
  %131 = bitcast %class.SkColorSpace* %124 to i8*
  call void @_ZdlPv(i8* %131) #12
  br label %132

132:                                              ; preds = %123, %126, %130
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %14) #11
  call void @_ZN8SkBitmapD1Ev(%class.SkBitmap* nonnull %5) #11
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %13) #11
  br label %133

133:                                              ; preds = %132, %10
  ret void
}

; Function Attrs: inlinehint noreturn nounwind ssp uwtable
define internal fastcc void @"_ZZN14SkSpecialImage19MakeDeferredFromGpuEP18GrRecordingContextRK7SkIRectj18GrSurfaceProxyView11GrColorType5sk_spI12SkColorSpaceERK14SkSurfaceProps11SkAlphaTypeENK3$_0clEv"() unnamed_addr #4 align 2 {
  tail call void (i8*, i32, i8*, ...) @_Z16SkAbort_FileLinePKciS0_z(i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str, i64 0, i64 0), i32 473, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.1, i64 0, i64 0), i8* getelementptr inbounds ([65 x i8], [65 x i8]* @.str.2, i64 0, i64 0)) #13
  unreachable
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN12SkRefCntBaseD2Ev(%class.SkRefCntBase*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN14SkSpecialImageD0Ev(%class.SkSpecialImage*) unnamed_addr #5 comdat align 2 {
  tail call void @llvm.trap() #13
  unreachable
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK12SkRefCntBase16internal_disposeEv(%class.SkRefCntBase*) unnamed_addr #0 comdat align 2 {
  %2 = icmp eq %class.SkRefCntBase* %0, null
  br i1 %2, label %8, label %3

3:                                                ; preds = %1
  %4 = bitcast %class.SkRefCntBase* %0 to void (%class.SkRefCntBase*)***
  %5 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %4, align 8
  %6 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %5, i64 1
  %7 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %6, align 8
  tail call void %7(%class.SkRefCntBase* nonnull %0) #11
  br label %8

8:                                                ; preds = %3, %1
  ret void
}

declare void @__cxa_pure_virtual() unnamed_addr

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #6

declare zeroext i1 @_ZN8SkBitmap14tryAllocPixelsERK11SkImageInfom(%class.SkBitmap*, %struct.SkImageInfo* dereferenceable(24), i64) local_unnamed_addr #1

declare i32 @_ZNK11SkColorInfo13bytesPerPixelEv(%class.SkColorInfo*) local_unnamed_addr #1

; Function Attrs: noreturn
declare void @_Z16SkAbort_FileLinePKciS0_z(i8*, i32, i8*, ...) local_unnamed_addr #7

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #8

declare i32 @_ZNK8SkBitmap15getGenerationIDEv(%class.SkBitmap*) local_unnamed_addr #1

declare void @_ZN8SkBitmapC1ERKS_(%class.SkBitmap*, %class.SkBitmap* dereferenceable(56)) unnamed_addr #1

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN21SkSpecialImage_RasterD2Ev(%class.SkSpecialImage_Raster*) unnamed_addr #5 comdat align 2 {
  %2 = getelementptr inbounds %class.SkSpecialImage_Raster, %class.SkSpecialImage_Raster* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [17 x i8*] }, { [17 x i8*] }* @_ZTV21SkSpecialImage_Raster, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %class.SkSpecialImage_Raster, %class.SkSpecialImage_Raster* %0, i64 0, i32 1
  tail call void @_ZN8SkBitmapD1Ev(%class.SkBitmap* %3) #11
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN21SkSpecialImage_RasterD0Ev(%class.SkSpecialImage_Raster*) unnamed_addr #5 comdat align 2 {
  %2 = getelementptr inbounds %class.SkSpecialImage_Raster, %class.SkSpecialImage_Raster* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [17 x i8*] }, { [17 x i8*] }* @_ZTV21SkSpecialImage_Raster, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %class.SkSpecialImage_Raster, %class.SkSpecialImage_Raster* %0, i64 0, i32 1
  tail call void @_ZN8SkBitmapD1Ev(%class.SkBitmap* %3) #11
  %4 = bitcast %class.SkSpecialImage_Raster* %0 to i8*
  tail call void @_ZdlPv(i8* %4) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK21SkSpecialImage_Raster9alphaTypeEv(%class.SkSpecialImage_Raster*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %class.SkSpecialImage_Raster, %class.SkSpecialImage_Raster* %0, i64 0, i32 1, i32 1, i32 2, i32 0, i32 2
  %3 = load i32, i32* %2, align 4
  ret i32 %3
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK21SkSpecialImage_Raster9colorTypeEv(%class.SkSpecialImage_Raster*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %class.SkSpecialImage_Raster, %class.SkSpecialImage_Raster* %0, i64 0, i32 1, i32 1, i32 2, i32 0, i32 1
  %3 = load i32, i32* %2, align 8
  ret i32 %3
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZNK21SkSpecialImage_Raster7getSizeEv(%class.SkSpecialImage_Raster*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %class.SkSpecialImage_Raster, %class.SkSpecialImage_Raster* %0, i64 0, i32 1, i32 1, i32 2
  %3 = getelementptr inbounds %class.SkSpecialImage_Raster, %class.SkSpecialImage_Raster* %0, i64 0, i32 1, i32 1, i32 1
  %4 = load i64, i64* %3, align 8
  %5 = tail call i64 @_ZNK11SkImageInfo15computeByteSizeEm(%struct.SkImageInfo* %2, i64 %4) #11
  ret i64 %5
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK21SkSpecialImage_Raster6onDrawEP8SkCanvasffRK17SkSamplingOptionsPK7SkPaint(%class.SkSpecialImage_Raster*, %class.SkCanvas*, float, float, %struct.SkSamplingOptions* dereferenceable(20), %class.SkPaint*) unnamed_addr #0 comdat align 2 {
  %7 = alloca { <2 x float>, <2 x float> }, align 8
  %8 = bitcast { <2 x float>, <2 x float> }* %7 to %struct.SkRect*
  %9 = alloca %class.sk_sp.152, align 8
  %10 = alloca { <2 x float>, <2 x float> }, align 8
  %11 = bitcast { <2 x float>, <2 x float> }* %10 to %struct.SkRect*
  %12 = bitcast { <2 x float>, <2 x float> }* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %12) #11
  %13 = getelementptr inbounds %class.SkSpecialImage_Raster, %class.SkSpecialImage_Raster* %0, i64 0, i32 0, i32 0, i32 2, i32 2
  %14 = load i32, i32* %13, align 4
  %15 = getelementptr inbounds %class.SkSpecialImage_Raster, %class.SkSpecialImage_Raster* %0, i64 0, i32 0, i32 0, i32 2, i32 0
  %16 = load i32, i32* %15, align 4
  %17 = sub i32 %14, %16
  %18 = sitofp i32 %17 to float
  %19 = getelementptr inbounds %class.SkSpecialImage_Raster, %class.SkSpecialImage_Raster* %0, i64 0, i32 0, i32 0, i32 2, i32 3
  %20 = load i32, i32* %19, align 4
  %21 = getelementptr inbounds %class.SkSpecialImage_Raster, %class.SkSpecialImage_Raster* %0, i64 0, i32 0, i32 0, i32 2, i32 1
  %22 = load i32, i32* %21, align 4
  %23 = sub i32 %20, %22
  %24 = sitofp i32 %23 to float
  %25 = insertelement <2 x float> undef, float %2, i32 0
  %26 = insertelement <2 x float> %25, float %3, i32 1
  %27 = fadd float %18, %2
  %28 = insertelement <2 x float> undef, float %27, i32 0
  %29 = fadd float %24, %3
  %30 = insertelement <2 x float> %28, float %29, i32 1
  %31 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %7, i64 0, i32 0
  store <2 x float> %26, <2 x float>* %31, align 8
  %32 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %7, i64 0, i32 1
  store <2 x float> %30, <2 x float>* %32, align 8
  %33 = bitcast %class.sk_sp.152* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %33) #11
  %34 = getelementptr inbounds %class.SkSpecialImage_Raster, %class.SkSpecialImage_Raster* %0, i64 0, i32 1
  call void @_ZNK8SkBitmap7asImageEv(%class.sk_sp.152* nonnull sret %9, %class.SkBitmap* %34) #11
  %35 = bitcast { <2 x float>, <2 x float> }* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %35) #11
  %36 = load i32, i32* %15, align 4
  %37 = sitofp i32 %36 to float
  %38 = insertelement <2 x float> undef, float %37, i32 0
  %39 = load i32, i32* %21, align 4
  %40 = sitofp i32 %39 to float
  %41 = insertelement <2 x float> %38, float %40, i32 1
  %42 = load i32, i32* %13, align 4
  %43 = sitofp i32 %42 to float
  %44 = insertelement <2 x float> undef, float %43, i32 0
  %45 = load i32, i32* %19, align 4
  %46 = sitofp i32 %45 to float
  %47 = insertelement <2 x float> %44, float %46, i32 1
  %48 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %10, i64 0, i32 0
  store <2 x float> %41, <2 x float>* %48, align 8
  %49 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %10, i64 0, i32 1
  store <2 x float> %47, <2 x float>* %49, align 8
  %50 = getelementptr inbounds %class.sk_sp.152, %class.sk_sp.152* %9, i64 0, i32 0
  %51 = load %class.SkImage*, %class.SkImage** %50, align 8
  call void @_ZN8SkCanvas13drawImageRectEPK7SkImageRK6SkRectS5_RK17SkSamplingOptionsPK7SkPaintNS_17SrcRectConstraintE(%class.SkCanvas* %1, %class.SkImage* %51, %struct.SkRect* nonnull dereferenceable(16) %11, %struct.SkRect* nonnull dereferenceable(16) %8, %struct.SkSamplingOptions* dereferenceable(20) %4, %class.SkPaint* %5, i32 0) #11
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %35) #11
  %52 = load %class.SkImage*, %class.SkImage** %50, align 8
  %53 = icmp eq %class.SkImage* %52, null
  br i1 %53, label %64, label %54

54:                                               ; preds = %6
  %55 = getelementptr inbounds %class.SkImage, %class.SkImage* %52, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %56 = atomicrmw add i32* %55, i32 -1 acq_rel
  %57 = icmp eq i32 %56, 1
  br i1 %57, label %58, label %64

58:                                               ; preds = %54
  %59 = bitcast %class.SkImage* %52 to %class.SkRefCntBase*
  %60 = bitcast %class.SkImage* %52 to void (%class.SkRefCntBase*)***
  %61 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %60, align 8
  %62 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %61, i64 2
  %63 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %62, align 8
  call void %63(%class.SkRefCntBase* nonnull %59) #11
  br label %64

64:                                               ; preds = %6, %54, %58
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %33) #11
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %12) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK21SkSpecialImage_Raster13onGetROPixelsEP8SkBitmap(%class.SkSpecialImage_Raster*, %class.SkBitmap*) unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %class.SkSpecialImage_Raster, %class.SkSpecialImage_Raster* %0, i64 0, i32 1
  %4 = getelementptr inbounds %class.SkSpecialImage_Raster, %class.SkSpecialImage_Raster* %0, i64 0, i32 0, i32 0, i32 2
  %5 = tail call zeroext i1 @_ZNK8SkBitmap13extractSubsetEPS_RK7SkIRect(%class.SkBitmap* %3, %class.SkBitmap* %1, %struct.SkIRect* dereferenceable(16) %4) #11
  ret i1 %5
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %class.GrRecordingContext* @_ZNK19SkSpecialImage_Base12onGetContextEv(%class.SkSpecialImage_Base*) unnamed_addr #0 comdat align 2 {
  ret %class.GrRecordingContext* null
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %class.SkColorSpace* @_ZNK21SkSpecialImage_Raster15onGetColorSpaceEv(%class.SkSpecialImage_Raster*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %class.SkSpecialImage_Raster, %class.SkSpecialImage_Raster* %0, i64 0, i32 1, i32 1, i32 2, i32 0, i32 0, i32 0
  %3 = load %class.SkColorSpace*, %class.SkColorSpace** %2, align 8
  ret %class.SkColorSpace* %3
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK21SkSpecialImage_Raster6onViewEP18GrRecordingContext(%class.GrSurfaceProxyView* noalias sret, %class.SkSpecialImage_Raster*, %class.GrRecordingContext*) unnamed_addr #0 comdat align 2 {
  %4 = alloca %"class.std::__1::tuple", align 8
  %5 = icmp eq %class.GrRecordingContext* %2, null
  br i1 %5, label %19, label %6

6:                                                ; preds = %3
  %7 = bitcast %"class.std::__1::tuple"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %7) #11
  %8 = getelementptr inbounds %class.SkSpecialImage_Raster, %class.SkSpecialImage_Raster* %1, i64 0, i32 1
  call void @_Z27GrMakeCachedBitmapProxyViewP18GrRecordingContextRK8SkBitmap11GrMipmapped(%"class.std::__1::tuple"* nonnull sret %4, %class.GrRecordingContext* nonnull %2, %class.SkBitmap* dereferenceable(56) %8, i1 zeroext false) #11
  %9 = getelementptr inbounds %"class.std::__1::tuple", %"class.std::__1::tuple"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %10 = bitcast %"class.std::__1::tuple"* %4 to i64*
  %11 = load i64, i64* %10, align 8
  store %class.GrSurfaceProxy* null, %class.GrSurfaceProxy** %9, align 8
  %12 = bitcast %class.GrSurfaceProxyView* %0 to i64*
  store i64 %11, i64* %12, align 8
  %13 = getelementptr inbounds %class.GrSurfaceProxyView, %class.GrSurfaceProxyView* %0, i64 0, i32 1
  %14 = getelementptr inbounds %"class.std::__1::tuple", %"class.std::__1::tuple"* %4, i64 0, i32 0, i32 0, i32 0, i32 1
  %15 = load i32, i32* %14, align 8
  store i32 %15, i32* %13, align 8
  %16 = getelementptr inbounds %class.GrSurfaceProxyView, %class.GrSurfaceProxyView* %0, i64 0, i32 2, i32 0
  %17 = getelementptr inbounds %"class.std::__1::tuple", %"class.std::__1::tuple"* %4, i64 0, i32 0, i32 0, i32 0, i32 2, i32 0
  %18 = load i16, i16* %17, align 4
  store i16 %18, i16* %16, align 2
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %7) #11
  br label %22

19:                                               ; preds = %3
  %20 = getelementptr inbounds %class.GrSurfaceProxyView, %class.GrSurfaceProxyView* %0, i64 0, i32 2
  %21 = bitcast %class.GrSurfaceProxyView* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %21, i8 0, i64 16, i1 false)
  tail call void @_ZN9GrSwizzleC2EPKc(%class.GrSwizzle* %20, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.3, i64 0, i64 0)) #11
  br label %22

22:                                               ; preds = %19, %6
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK21SkSpecialImage_Raster12onMakeSubsetERK7SkIRect(%class.sk_sp.151* noalias sret, %class.SkSpecialImage_Raster*, %struct.SkIRect* dereferenceable(16)) unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %class.SkSpecialImage_Raster, %class.SkSpecialImage_Raster* %1, i64 0, i32 1
  %5 = getelementptr inbounds %class.SkSpecialImage_Raster, %class.SkSpecialImage_Raster* %1, i64 0, i32 0, i32 0, i32 1
  tail call void @_ZN14SkSpecialImage14MakeFromRasterERK7SkIRectRK8SkBitmapRK14SkSurfaceProps(%class.sk_sp.151* sret %0, %struct.SkIRect* dereferenceable(16) %2, %class.SkBitmap* dereferenceable(56) %4, %class.SkSurfaceProps* dereferenceable(8) %5)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK21SkSpecialImage_Raster13onMakeSurfaceE11SkColorTypePK12SkColorSpaceRK7SkISize11SkAlphaTypeRK14SkSurfaceProps(%class.sk_sp.149* noalias sret, %class.SkSpecialImage_Raster*, i32, %class.SkColorSpace*, %struct.SkISize* dereferenceable(8), i32, %class.SkSurfaceProps* dereferenceable(8)) unnamed_addr #0 comdat align 2 {
  %8 = alloca %struct.SkImageInfo, align 8
  %9 = bitcast %struct.SkImageInfo* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %9) #11
  %10 = getelementptr inbounds %struct.SkImageInfo, %struct.SkImageInfo* %8, i64 0, i32 0, i32 0, i32 0
  %11 = getelementptr inbounds %struct.SkImageInfo, %struct.SkImageInfo* %8, i64 0, i32 0, i32 1
  %12 = bitcast %struct.SkISize* %4 to i64*
  %13 = bitcast %struct.SkImageInfo* %8 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %13, i8 -86, i64 24, i1 false)
  %14 = load i64, i64* %12, align 4
  %15 = icmp eq %class.SkColorSpace* %3, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %7
  %17 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %18 = atomicrmw add i32* %17, i32 1 monotonic, !noalias !35
  br label %19

19:                                               ; preds = %16, %7
  %20 = ptrtoint %class.SkColorSpace* %3 to i64
  %21 = zext i32 %5 to i64
  %22 = shl nuw i64 %21, 32
  %23 = or i64 %22, 6
  %24 = bitcast %struct.SkImageInfo* %8 to i64*
  store i64 %20, i64* %24, align 8, !alias.scope !38
  %25 = bitcast i32* %11 to i64*
  store i64 %23, i64* %25, align 8, !alias.scope !38
  %26 = getelementptr inbounds %struct.SkImageInfo, %struct.SkImageInfo* %8, i64 0, i32 1
  %27 = bitcast %struct.SkISize* %26 to i64*
  store i64 %14, i64* %27, align 8, !alias.scope !38
  call void @_ZN16SkSpecialSurface10MakeRasterERK11SkImageInfoRK14SkSurfaceProps(%class.sk_sp.149* sret %0, %struct.SkImageInfo* nonnull dereferenceable(24) %8, %class.SkSurfaceProps* dereferenceable(8) %6) #11
  %28 = load %class.SkColorSpace*, %class.SkColorSpace** %10, align 8
  %29 = icmp eq %class.SkColorSpace* %28, null
  br i1 %29, label %36, label %30

30:                                               ; preds = %19
  %31 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %28, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %32 = atomicrmw add i32* %31, i32 -1 acq_rel
  %33 = icmp eq i32 %32, 1
  br i1 %33, label %34, label %36

34:                                               ; preds = %30
  %35 = bitcast %class.SkColorSpace* %28 to i8*
  call void @_ZdlPv(i8* %35) #12
  br label %36

36:                                               ; preds = %19, %30, %34
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %9) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK21SkSpecialImage_Raster9onAsImageEPK7SkIRect(%class.sk_sp.152* noalias sret, %class.SkSpecialImage_Raster*, %struct.SkIRect*) unnamed_addr #0 comdat align 2 {
  %4 = alloca %class.SkBitmap, align 8
  %5 = icmp eq %struct.SkIRect* %2, null
  br i1 %5, label %14, label %6

6:                                                ; preds = %3
  %7 = bitcast %class.SkBitmap* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %7) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %7, i8 -86, i64 56, i1 false)
  call void @_ZN8SkBitmapC1Ev(%class.SkBitmap* nonnull %4) #11
  %8 = getelementptr inbounds %class.SkSpecialImage_Raster, %class.SkSpecialImage_Raster* %1, i64 0, i32 1
  %9 = call zeroext i1 @_ZNK8SkBitmap13extractSubsetEPS_RK7SkIRect(%class.SkBitmap* %8, %class.SkBitmap* nonnull %4, %struct.SkIRect* nonnull dereferenceable(16) %2) #11
  br i1 %9, label %12, label %10

10:                                               ; preds = %6
  %11 = getelementptr inbounds %class.sk_sp.152, %class.sk_sp.152* %0, i64 0, i32 0
  store %class.SkImage* null, %class.SkImage** %11, align 8
  br label %13

12:                                               ; preds = %6
  call void @_ZNK8SkBitmap7asImageEv(%class.sk_sp.152* sret %0, %class.SkBitmap* nonnull %4) #11
  br label %13

13:                                               ; preds = %12, %10
  call void @_ZN8SkBitmapD1Ev(%class.SkBitmap* nonnull %4) #11
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %7) #11
  br label %16

14:                                               ; preds = %3
  %15 = getelementptr inbounds %class.SkSpecialImage_Raster, %class.SkSpecialImage_Raster* %1, i64 0, i32 1
  tail call void @_ZNK8SkBitmap7asImageEv(%class.sk_sp.152* sret %0, %class.SkBitmap* %15) #11
  br label %16

16:                                               ; preds = %14, %13
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK21SkSpecialImage_Raster18onMakeTightSurfaceE11SkColorTypePK12SkColorSpaceRK7SkISize11SkAlphaType(%class.sk_sp.150* noalias sret, %class.SkSpecialImage_Raster*, i32, %class.SkColorSpace*, %struct.SkISize* dereferenceable(8), i32) unnamed_addr #0 comdat align 2 {
  %7 = alloca %struct.SkImageInfo, align 8
  %8 = bitcast %struct.SkImageInfo* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %8) #11
  %9 = getelementptr inbounds %struct.SkImageInfo, %struct.SkImageInfo* %7, i64 0, i32 0, i32 0, i32 0
  %10 = getelementptr inbounds %struct.SkImageInfo, %struct.SkImageInfo* %7, i64 0, i32 0, i32 1
  %11 = bitcast %struct.SkISize* %4 to i64*
  %12 = bitcast %struct.SkImageInfo* %7 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %12, i8 -86, i64 24, i1 false)
  %13 = load i64, i64* %11, align 4
  %14 = icmp eq %class.SkColorSpace* %3, null
  br i1 %14, label %18, label %15

15:                                               ; preds = %6
  %16 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %17 = atomicrmw add i32* %16, i32 1 monotonic, !noalias !41
  br label %18

18:                                               ; preds = %15, %6
  %19 = ptrtoint %class.SkColorSpace* %3 to i64
  %20 = zext i32 %5 to i64
  %21 = shl nuw i64 %20, 32
  %22 = or i64 %21, 6
  %23 = bitcast %struct.SkImageInfo* %7 to i64*
  store i64 %19, i64* %23, align 8, !alias.scope !44
  %24 = bitcast i32* %10 to i64*
  store i64 %22, i64* %24, align 8, !alias.scope !44
  %25 = getelementptr inbounds %struct.SkImageInfo, %struct.SkImageInfo* %7, i64 0, i32 1
  %26 = bitcast %struct.SkISize* %25 to i64*
  store i64 %13, i64* %26, align 8, !alias.scope !44
  call void @_ZN9SkSurface10MakeRasterERK11SkImageInfomPK14SkSurfaceProps(%class.sk_sp.150* sret %0, %struct.SkImageInfo* nonnull dereferenceable(24) %7, i64 0, %class.SkSurfaceProps* null) #11
  %27 = load %class.SkColorSpace*, %class.SkColorSpace** %9, align 8
  %28 = icmp eq %class.SkColorSpace* %27, null
  br i1 %28, label %35, label %29

29:                                               ; preds = %18
  %30 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %27, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %31 = atomicrmw add i32* %30, i32 -1 acq_rel
  %32 = icmp eq i32 %31, 1
  br i1 %32, label %33, label %35

33:                                               ; preds = %29
  %34 = bitcast %class.SkColorSpace* %27 to i8*
  call void @_ZdlPv(i8* %34) #12
  br label %35

35:                                               ; preds = %18, %29, %33
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %8) #11
  ret void
}

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #9

declare i64 @_ZNK11SkImageInfo15computeByteSizeEm(%struct.SkImageInfo*, i64) local_unnamed_addr #1

declare void @_ZNK8SkBitmap7asImageEv(%class.sk_sp.152* sret, %class.SkBitmap*) local_unnamed_addr #1

declare void @_ZN8SkCanvas13drawImageRectEPK7SkImageRK6SkRectS5_RK17SkSamplingOptionsPK7SkPaintNS_17SrcRectConstraintE(%class.SkCanvas*, %class.SkImage*, %struct.SkRect* dereferenceable(16), %struct.SkRect* dereferenceable(16), %struct.SkSamplingOptions* dereferenceable(20), %class.SkPaint*, i32) local_unnamed_addr #1

declare zeroext i1 @_ZNK8SkBitmap13extractSubsetEPS_RK7SkIRect(%class.SkBitmap*, %class.SkBitmap*, %struct.SkIRect* dereferenceable(16)) local_unnamed_addr #1

declare void @_Z27GrMakeCachedBitmapProxyViewP18GrRecordingContextRK8SkBitmap11GrMipmapped(%"class.std::__1::tuple"* sret, %class.GrRecordingContext*, %class.SkBitmap* dereferenceable(56), i1 zeroext) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN9GrSwizzleC2EPKc(%class.GrSwizzle*, i8*) unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %class.GrSwizzle, %class.GrSwizzle* %0, i64 0, i32 0
  %4 = load i8, i8* %1, align 1
  %5 = sext i8 %4 to i32
  switch i32 %5, label %11 [
    i32 114, label %12
    i32 103, label %6
    i32 98, label %7
    i32 97, label %8
    i32 48, label %9
    i32 49, label %10
  ]

6:                                                ; preds = %2
  br label %12

7:                                                ; preds = %2
  br label %12

8:                                                ; preds = %2
  br label %12

9:                                                ; preds = %2
  br label %12

10:                                               ; preds = %2
  br label %12

11:                                               ; preds = %2
  tail call void @llvm.trap() #11
  unreachable

12:                                               ; preds = %2, %6, %7, %8, %9, %10
  %13 = phi i16 [ 5, %10 ], [ 4, %9 ], [ 3, %8 ], [ 2, %7 ], [ 1, %6 ], [ 0, %2 ]
  %14 = getelementptr inbounds i8, i8* %1, i64 1
  %15 = load i8, i8* %14, align 1
  %16 = sext i8 %15 to i32
  switch i32 %16, label %22 [
    i32 114, label %23
    i32 103, label %17
    i32 98, label %18
    i32 97, label %19
    i32 48, label %20
    i32 49, label %21
  ]

17:                                               ; preds = %12
  br label %23

18:                                               ; preds = %12
  br label %23

19:                                               ; preds = %12
  br label %23

20:                                               ; preds = %12
  br label %23

21:                                               ; preds = %12
  br label %23

22:                                               ; preds = %12
  tail call void @llvm.trap() #11
  unreachable

23:                                               ; preds = %12, %17, %18, %19, %20, %21
  %24 = phi i16 [ 80, %21 ], [ 64, %20 ], [ 48, %19 ], [ 32, %18 ], [ 16, %17 ], [ 0, %12 ]
  %25 = or i16 %24, %13
  %26 = getelementptr inbounds i8, i8* %1, i64 2
  %27 = load i8, i8* %26, align 1
  %28 = sext i8 %27 to i32
  switch i32 %28, label %34 [
    i32 114, label %35
    i32 103, label %29
    i32 98, label %30
    i32 97, label %31
    i32 48, label %32
    i32 49, label %33
  ]

29:                                               ; preds = %23
  br label %35

30:                                               ; preds = %23
  br label %35

31:                                               ; preds = %23
  br label %35

32:                                               ; preds = %23
  br label %35

33:                                               ; preds = %23
  br label %35

34:                                               ; preds = %23
  tail call void @llvm.trap() #11
  unreachable

35:                                               ; preds = %23, %29, %30, %31, %32, %33
  %36 = phi i16 [ 1280, %33 ], [ 1024, %32 ], [ 768, %31 ], [ 512, %30 ], [ 256, %29 ], [ 0, %23 ]
  %37 = or i16 %25, %36
  %38 = getelementptr inbounds i8, i8* %1, i64 3
  %39 = load i8, i8* %38, align 1
  %40 = sext i8 %39 to i32
  switch i32 %40, label %46 [
    i32 114, label %47
    i32 103, label %41
    i32 98, label %42
    i32 97, label %43
    i32 48, label %44
    i32 49, label %45
  ]

41:                                               ; preds = %35
  br label %47

42:                                               ; preds = %35
  br label %47

43:                                               ; preds = %35
  br label %47

44:                                               ; preds = %35
  br label %47

45:                                               ; preds = %35
  br label %47

46:                                               ; preds = %35
  tail call void @llvm.trap() #11
  unreachable

47:                                               ; preds = %35, %41, %42, %43, %44, %45
  %48 = phi i16 [ 20480, %45 ], [ 16384, %44 ], [ 12288, %43 ], [ 8192, %42 ], [ 4096, %41 ], [ 0, %35 ]
  %49 = or i16 %37, %48
  store i16 %49, i16* %3, align 2
  ret void
}

declare void @_ZN16SkSpecialSurface10MakeRasterERK11SkImageInfoRK14SkSurfaceProps(%class.sk_sp.149* sret, %struct.SkImageInfo* dereferenceable(24), %class.SkSurfaceProps* dereferenceable(8)) local_unnamed_addr #1

declare void @_ZN9SkSurface10MakeRasterERK11SkImageInfomPK14SkSurfaceProps(%class.sk_sp.150* sret, %struct.SkImageInfo* dereferenceable(24), i64, %class.SkSurfaceProps*) local_unnamed_addr #1

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN18SkSpecialImage_GpuD2Ev(%class.SkSpecialImage_Gpu*) unnamed_addr #5 comdat align 2 {
  %2 = getelementptr inbounds %class.SkSpecialImage_Gpu, %class.SkSpecialImage_Gpu* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [17 x i8*] }, { [17 x i8*] }* @_ZTV18SkSpecialImage_Gpu, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %class.SkSpecialImage_Gpu, %class.SkSpecialImage_Gpu* %0, i64 0, i32 5, i32 0
  %4 = load %class.SkColorSpace*, %class.SkColorSpace** %3, align 8
  %5 = icmp eq %class.SkColorSpace* %4, null
  br i1 %5, label %12, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %8 = atomicrmw add i32* %7, i32 -1 acq_rel
  %9 = icmp eq i32 %8, 1
  br i1 %9, label %10, label %12

10:                                               ; preds = %6
  %11 = bitcast %class.SkColorSpace* %4 to i8*
  tail call void @_ZdlPv(i8* %11) #12
  br label %12

12:                                               ; preds = %1, %6, %10
  %13 = getelementptr inbounds %class.SkSpecialImage_Gpu, %class.SkSpecialImage_Gpu* %0, i64 0, i32 2, i32 0, i32 0
  %14 = load %class.GrSurfaceProxy*, %class.GrSurfaceProxy** %13, align 8
  %15 = icmp eq %class.GrSurfaceProxy* %14, null
  br i1 %15, label %28, label %16

16:                                               ; preds = %12
  %17 = getelementptr inbounds %class.GrSurfaceProxy, %class.GrSurfaceProxy* %14, i64 0, i32 1
  %18 = getelementptr inbounds %class.SkNVRefCnt.104, %class.SkNVRefCnt.104* %17, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %19 = atomicrmw add i32* %18, i32 -1 acq_rel
  %20 = icmp eq i32 %19, 1
  br i1 %20, label %21, label %28

21:                                               ; preds = %16
  %22 = getelementptr inbounds %class.SkNVRefCnt.104, %class.SkNVRefCnt.104* %17, i64 -2
  %23 = bitcast %class.SkNVRefCnt.104* %22 to %class.GrSurfaceProxy*
  %24 = bitcast %class.SkNVRefCnt.104* %22 to void (%class.GrSurfaceProxy*)***
  %25 = load void (%class.GrSurfaceProxy*)**, void (%class.GrSurfaceProxy*)*** %24, align 8
  %26 = getelementptr inbounds void (%class.GrSurfaceProxy*)*, void (%class.GrSurfaceProxy*)** %25, i64 1
  %27 = load void (%class.GrSurfaceProxy*)*, void (%class.GrSurfaceProxy*)** %26, align 8
  tail call void %27(%class.GrSurfaceProxy* nonnull %23) #11
  br label %28

28:                                               ; preds = %12, %16, %21
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN18SkSpecialImage_GpuD0Ev(%class.SkSpecialImage_Gpu*) unnamed_addr #5 comdat align 2 {
  %2 = getelementptr inbounds %class.SkSpecialImage_Gpu, %class.SkSpecialImage_Gpu* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [17 x i8*] }, { [17 x i8*] }* @_ZTV18SkSpecialImage_Gpu, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %class.SkSpecialImage_Gpu, %class.SkSpecialImage_Gpu* %0, i64 0, i32 5, i32 0
  %4 = load %class.SkColorSpace*, %class.SkColorSpace** %3, align 8
  %5 = icmp eq %class.SkColorSpace* %4, null
  br i1 %5, label %12, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %8 = atomicrmw add i32* %7, i32 -1 acq_rel
  %9 = icmp eq i32 %8, 1
  br i1 %9, label %10, label %12

10:                                               ; preds = %6
  %11 = bitcast %class.SkColorSpace* %4 to i8*
  tail call void @_ZdlPv(i8* %11) #12
  br label %12

12:                                               ; preds = %10, %6, %1
  %13 = getelementptr inbounds %class.SkSpecialImage_Gpu, %class.SkSpecialImage_Gpu* %0, i64 0, i32 2, i32 0, i32 0
  %14 = load %class.GrSurfaceProxy*, %class.GrSurfaceProxy** %13, align 8
  %15 = icmp eq %class.GrSurfaceProxy* %14, null
  br i1 %15, label %28, label %16

16:                                               ; preds = %12
  %17 = getelementptr inbounds %class.GrSurfaceProxy, %class.GrSurfaceProxy* %14, i64 0, i32 1
  %18 = getelementptr inbounds %class.SkNVRefCnt.104, %class.SkNVRefCnt.104* %17, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %19 = atomicrmw add i32* %18, i32 -1 acq_rel
  %20 = icmp eq i32 %19, 1
  br i1 %20, label %21, label %28

21:                                               ; preds = %16
  %22 = getelementptr inbounds %class.SkNVRefCnt.104, %class.SkNVRefCnt.104* %17, i64 -2
  %23 = bitcast %class.SkNVRefCnt.104* %22 to %class.GrSurfaceProxy*
  %24 = bitcast %class.SkNVRefCnt.104* %22 to void (%class.GrSurfaceProxy*)***
  %25 = load void (%class.GrSurfaceProxy*)**, void (%class.GrSurfaceProxy*)*** %24, align 8
  %26 = getelementptr inbounds void (%class.GrSurfaceProxy*)*, void (%class.GrSurfaceProxy*)** %25, i64 1
  %27 = load void (%class.GrSurfaceProxy*)*, void (%class.GrSurfaceProxy*)** %26, align 8
  tail call void %27(%class.GrSurfaceProxy* nonnull %23) #11
  br label %28

28:                                               ; preds = %12, %16, %21
  %29 = bitcast %class.SkSpecialImage_Gpu* %0 to i8*
  tail call void @_ZdlPv(i8* %29) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK18SkSpecialImage_Gpu9alphaTypeEv(%class.SkSpecialImage_Gpu*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %class.SkSpecialImage_Gpu, %class.SkSpecialImage_Gpu* %0, i64 0, i32 4
  %3 = load i32, i32* %2, align 4
  ret i32 %3
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK18SkSpecialImage_Gpu9colorTypeEv(%class.SkSpecialImage_Gpu*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %class.SkSpecialImage_Gpu, %class.SkSpecialImage_Gpu* %0, i64 0, i32 3
  %3 = load i32, i32* %2, align 8
  %4 = icmp ult i32 %3, 31
  br i1 %4, label %6, label %5

5:                                                ; preds = %1
  tail call void @llvm.trap() #11
  unreachable

6:                                                ; preds = %1
  %7 = sext i32 %3 to i64
  %8 = getelementptr inbounds [31 x i32], [31 x i32]* @switch.table._ZNK18SkSpecialImage_Gpu9colorTypeEv, i64 0, i64 %7
  %9 = load i32, i32* %8, align 4
  ret i32 %9
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZNK18SkSpecialImage_Gpu7getSizeEv(%class.SkSpecialImage_Gpu*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %class.SkSpecialImage_Gpu, %class.SkSpecialImage_Gpu* %0, i64 0, i32 2, i32 0, i32 0
  %3 = load %class.GrSurfaceProxy*, %class.GrSurfaceProxy** %2, align 8
  %4 = getelementptr inbounds %class.GrSurfaceProxy, %class.GrSurfaceProxy* %3, i64 0, i32 17, i32 0, i32 0, i32 0, i32 0, i32 0
  %5 = load atomic i64, i64* %4 seq_cst, align 8
  %6 = icmp eq i64 %5, -1
  br i1 %6, label %7, label %13

7:                                                ; preds = %1
  %8 = bitcast %class.GrSurfaceProxy* %3 to i64 (%class.GrSurfaceProxy*)***
  %9 = load i64 (%class.GrSurfaceProxy*)**, i64 (%class.GrSurfaceProxy*)*** %8, align 8
  %10 = getelementptr inbounds i64 (%class.GrSurfaceProxy*)*, i64 (%class.GrSurfaceProxy*)** %9, i64 9
  %11 = load i64 (%class.GrSurfaceProxy*)*, i64 (%class.GrSurfaceProxy*)** %10, align 8
  %12 = tail call i64 %11(%class.GrSurfaceProxy* %3) #11
  store atomic i64 %12, i64* %4 seq_cst, align 8
  br label %13

13:                                               ; preds = %1, %7
  %14 = load atomic i64, i64* %4 seq_cst, align 8
  ret i64 %14
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK18SkSpecialImage_Gpu6onDrawEP8SkCanvasffRK17SkSamplingOptionsPK7SkPaint(%class.SkSpecialImage_Gpu*, %class.SkCanvas*, float, float, %struct.SkSamplingOptions* dereferenceable(20), %class.SkPaint*) unnamed_addr #0 comdat align 2 {
  %7 = alloca { <2 x float>, <2 x float> }, align 8
  %8 = bitcast { <2 x float>, <2 x float> }* %7 to %struct.SkRect*
  %9 = alloca %class.sk_sp.217, align 8
  %10 = alloca %class.GrSurfaceProxyView, align 8
  %11 = alloca %class.SkColorInfo, align 8
  %12 = alloca { <2 x float>, <2 x float> }, align 8
  %13 = bitcast { <2 x float>, <2 x float> }* %12 to %struct.SkRect*
  %14 = bitcast { <2 x float>, <2 x float> }* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %14) #11
  %15 = getelementptr inbounds %class.SkSpecialImage_Gpu, %class.SkSpecialImage_Gpu* %0, i64 0, i32 0, i32 0, i32 2, i32 2
  %16 = load i32, i32* %15, align 4
  %17 = getelementptr inbounds %class.SkSpecialImage_Gpu, %class.SkSpecialImage_Gpu* %0, i64 0, i32 0, i32 0, i32 2, i32 0
  %18 = load i32, i32* %17, align 4
  %19 = sub i32 %16, %18
  %20 = sitofp i32 %19 to float
  %21 = getelementptr inbounds %class.SkSpecialImage_Gpu, %class.SkSpecialImage_Gpu* %0, i64 0, i32 0, i32 0, i32 2, i32 3
  %22 = load i32, i32* %21, align 4
  %23 = getelementptr inbounds %class.SkSpecialImage_Gpu, %class.SkSpecialImage_Gpu* %0, i64 0, i32 0, i32 0, i32 2, i32 1
  %24 = load i32, i32* %23, align 4
  %25 = sub i32 %22, %24
  %26 = sitofp i32 %25 to float
  %27 = insertelement <2 x float> undef, float %2, i32 0
  %28 = insertelement <2 x float> %27, float %3, i32 1
  %29 = fadd float %20, %2
  %30 = insertelement <2 x float> undef, float %29, i32 0
  %31 = fadd float %26, %3
  %32 = insertelement <2 x float> %30, float %31, i32 1
  %33 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %7, i64 0, i32 0
  store <2 x float> %28, <2 x float>* %33, align 8
  %34 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %7, i64 0, i32 1
  store <2 x float> %32, <2 x float>* %34, align 8
  %35 = tail call i8* @_Znwm(i64 104) #12
  %36 = bitcast i8* %35 to %class.SkImage_Gpu*
  %37 = bitcast %class.SkCanvas* %1 to %class.GrRecordingContext* (%class.SkCanvas*)***
  %38 = load %class.GrRecordingContext* (%class.SkCanvas*)**, %class.GrRecordingContext* (%class.SkCanvas*)*** %37, align 8
  %39 = getelementptr inbounds %class.GrRecordingContext* (%class.SkCanvas*)*, %class.GrRecordingContext* (%class.SkCanvas*)** %38, i64 3
  %40 = load %class.GrRecordingContext* (%class.SkCanvas*)*, %class.GrRecordingContext* (%class.SkCanvas*)** %39, align 8
  %41 = tail call %class.GrRecordingContext* %40(%class.SkCanvas* %1) #11
  %42 = icmp eq %class.GrRecordingContext* %41, null
  br i1 %42, label %46, label %43

43:                                               ; preds = %6
  %44 = getelementptr inbounds %class.GrRecordingContext, %class.GrRecordingContext* %41, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %45 = atomicrmw add i32* %44, i32 1 monotonic, !noalias !47
  br label %46

46:                                               ; preds = %6, %43
  %47 = ptrtoint %class.GrRecordingContext* %41 to i64
  %48 = bitcast %class.sk_sp.217* %9 to i64*
  store i64 %47, i64* %48, align 8
  %49 = getelementptr inbounds %class.SkSpecialImage_Gpu, %class.SkSpecialImage_Gpu* %0, i64 0, i32 0, i32 0, i32 3
  %50 = load i32, i32* %49, align 4
  %51 = getelementptr inbounds %class.GrSurfaceProxyView, %class.GrSurfaceProxyView* %10, i64 0, i32 0, i32 0
  %52 = getelementptr inbounds %class.SkSpecialImage_Gpu, %class.SkSpecialImage_Gpu* %0, i64 0, i32 2, i32 0, i32 0
  %53 = load %class.GrSurfaceProxy*, %class.GrSurfaceProxy** %52, align 8
  %54 = icmp eq %class.GrSurfaceProxy* %53, null
  br i1 %54, label %58, label %55

55:                                               ; preds = %46
  %56 = getelementptr inbounds %class.GrSurfaceProxy, %class.GrSurfaceProxy* %53, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %57 = atomicrmw add i32* %56, i32 1 monotonic
  br label %58

58:                                               ; preds = %46, %55
  store %class.GrSurfaceProxy* %53, %class.GrSurfaceProxy** %51, align 8
  %59 = getelementptr inbounds %class.GrSurfaceProxyView, %class.GrSurfaceProxyView* %10, i64 0, i32 1
  %60 = getelementptr inbounds %class.SkSpecialImage_Gpu, %class.SkSpecialImage_Gpu* %0, i64 0, i32 2, i32 1
  %61 = load i32, i32* %60, align 8
  store i32 %61, i32* %59, align 8
  %62 = getelementptr inbounds %class.GrSurfaceProxyView, %class.GrSurfaceProxyView* %10, i64 0, i32 2, i32 0
  %63 = getelementptr inbounds %class.SkSpecialImage_Gpu, %class.SkSpecialImage_Gpu* %0, i64 0, i32 2, i32 2, i32 0
  %64 = load i16, i16* %63, align 2
  store i16 %64, i16* %62, align 4
  %65 = bitcast %class.SkSpecialImage_Gpu* %0 to i32 (%class.SkSpecialImage_Gpu*)***
  %66 = load i32 (%class.SkSpecialImage_Gpu*)**, i32 (%class.SkSpecialImage_Gpu*)*** %65, align 8
  %67 = getelementptr inbounds i32 (%class.SkSpecialImage_Gpu*)*, i32 (%class.SkSpecialImage_Gpu*)** %66, i64 4
  %68 = load i32 (%class.SkSpecialImage_Gpu*)*, i32 (%class.SkSpecialImage_Gpu*)** %67, align 8
  %69 = tail call i32 %68(%class.SkSpecialImage_Gpu* %0) #11
  %70 = getelementptr inbounds %class.SkSpecialImage_Gpu, %class.SkSpecialImage_Gpu* %0, i64 0, i32 4
  %71 = load i32, i32* %70, align 4
  %72 = getelementptr inbounds %class.SkSpecialImage_Gpu, %class.SkSpecialImage_Gpu* %0, i64 0, i32 5, i32 0
  %73 = load %class.SkColorSpace*, %class.SkColorSpace** %72, align 8
  %74 = icmp eq %class.SkColorSpace* %73, null
  br i1 %74, label %78, label %75

75:                                               ; preds = %58
  %76 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %73, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %77 = atomicrmw add i32* %76, i32 1 monotonic
  br label %78

78:                                               ; preds = %58, %75
  %79 = ptrtoint %class.SkColorSpace* %73 to i64
  %80 = bitcast %class.SkColorInfo* %11 to i64*
  store i64 %79, i64* %80, align 8
  %81 = getelementptr inbounds %class.SkColorInfo, %class.SkColorInfo* %11, i64 0, i32 1
  store i32 %69, i32* %81, align 8
  %82 = getelementptr inbounds %class.SkColorInfo, %class.SkColorInfo* %11, i64 0, i32 2
  store i32 %71, i32* %82, align 4
  call void @_ZN11SkImage_GpuC1E5sk_spI14GrImageContextEj18GrSurfaceProxyView11SkColorInfo(%class.SkImage_Gpu* nonnull %36, %class.sk_sp.217* nonnull %9, i32 %50, %class.GrSurfaceProxyView* nonnull %10, %class.SkColorInfo* nonnull %11) #11
  %83 = bitcast i8* %35 to %class.SkImage*
  %84 = getelementptr inbounds %class.SkColorInfo, %class.SkColorInfo* %11, i64 0, i32 0, i32 0
  %85 = load %class.SkColorSpace*, %class.SkColorSpace** %84, align 8
  %86 = icmp eq %class.SkColorSpace* %85, null
  br i1 %86, label %93, label %87

87:                                               ; preds = %78
  %88 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %85, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %89 = atomicrmw add i32* %88, i32 -1 acq_rel
  %90 = icmp eq i32 %89, 1
  br i1 %90, label %91, label %93

91:                                               ; preds = %87
  %92 = bitcast %class.SkColorSpace* %85 to i8*
  call void @_ZdlPv(i8* %92) #12
  br label %93

93:                                               ; preds = %91, %87, %78
  %94 = load %class.GrSurfaceProxy*, %class.GrSurfaceProxy** %51, align 8
  %95 = icmp eq %class.GrSurfaceProxy* %94, null
  br i1 %95, label %108, label %96

96:                                               ; preds = %93
  %97 = getelementptr inbounds %class.GrSurfaceProxy, %class.GrSurfaceProxy* %94, i64 0, i32 1
  %98 = getelementptr inbounds %class.SkNVRefCnt.104, %class.SkNVRefCnt.104* %97, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %99 = atomicrmw add i32* %98, i32 -1 acq_rel
  %100 = icmp eq i32 %99, 1
  br i1 %100, label %101, label %108

101:                                              ; preds = %96
  %102 = getelementptr inbounds %class.SkNVRefCnt.104, %class.SkNVRefCnt.104* %97, i64 -2
  %103 = bitcast %class.SkNVRefCnt.104* %102 to %class.GrSurfaceProxy*
  %104 = bitcast %class.SkNVRefCnt.104* %102 to void (%class.GrSurfaceProxy*)***
  %105 = load void (%class.GrSurfaceProxy*)**, void (%class.GrSurfaceProxy*)*** %104, align 8
  %106 = getelementptr inbounds void (%class.GrSurfaceProxy*)*, void (%class.GrSurfaceProxy*)** %105, i64 1
  %107 = load void (%class.GrSurfaceProxy*)*, void (%class.GrSurfaceProxy*)** %106, align 8
  call void %107(%class.GrSurfaceProxy* nonnull %103) #11
  br label %108

108:                                              ; preds = %93, %96, %101
  %109 = getelementptr inbounds %class.sk_sp.217, %class.sk_sp.217* %9, i64 0, i32 0
  %110 = load %class.GrImageContext*, %class.GrImageContext** %109, align 8
  %111 = icmp eq %class.GrImageContext* %110, null
  br i1 %111, label %122, label %112

112:                                              ; preds = %108
  %113 = getelementptr inbounds %class.GrImageContext, %class.GrImageContext* %110, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %114 = atomicrmw add i32* %113, i32 -1 acq_rel
  %115 = icmp eq i32 %114, 1
  br i1 %115, label %116, label %122

116:                                              ; preds = %112
  %117 = bitcast %class.GrImageContext* %110 to %class.SkRefCntBase*
  %118 = bitcast %class.GrImageContext* %110 to void (%class.SkRefCntBase*)***
  %119 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %118, align 8
  %120 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %119, i64 2
  %121 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %120, align 8
  call void %121(%class.SkRefCntBase* nonnull %117) #11
  br label %122

122:                                              ; preds = %108, %112, %116
  %123 = bitcast { <2 x float>, <2 x float> }* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %123) #11
  %124 = load i32, i32* %17, align 4
  %125 = sitofp i32 %124 to float
  %126 = insertelement <2 x float> undef, float %125, i32 0
  %127 = load i32, i32* %23, align 4
  %128 = sitofp i32 %127 to float
  %129 = insertelement <2 x float> %126, float %128, i32 1
  %130 = load i32, i32* %15, align 4
  %131 = sitofp i32 %130 to float
  %132 = insertelement <2 x float> undef, float %131, i32 0
  %133 = load i32, i32* %21, align 4
  %134 = sitofp i32 %133 to float
  %135 = insertelement <2 x float> %132, float %134, i32 1
  %136 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %12, i64 0, i32 0
  store <2 x float> %129, <2 x float>* %136, align 8
  %137 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %12, i64 0, i32 1
  store <2 x float> %135, <2 x float>* %137, align 8
  call void @_ZN8SkCanvas13drawImageRectEPK7SkImageRK6SkRectS5_RK17SkSamplingOptionsPK7SkPaintNS_17SrcRectConstraintE(%class.SkCanvas* %1, %class.SkImage* nonnull %83, %struct.SkRect* nonnull dereferenceable(16) %13, %struct.SkRect* nonnull dereferenceable(16) %8, %struct.SkSamplingOptions* dereferenceable(20) %4, %class.SkPaint* %5, i32 0) #11
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %123) #11
  %138 = getelementptr inbounds i8, i8* %35, i64 8
  %139 = bitcast i8* %138 to i32*
  %140 = atomicrmw add i32* %139, i32 -1 acq_rel
  %141 = icmp eq i32 %140, 1
  br i1 %141, label %142, label %148

142:                                              ; preds = %122
  %143 = bitcast i8* %35 to %class.SkRefCntBase*
  %144 = bitcast i8* %35 to void (%class.SkRefCntBase*)***
  %145 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %144, align 8
  %146 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %145, i64 2
  %147 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %146, align 8
  call void %147(%class.SkRefCntBase* nonnull %143) #11
  br label %148

148:                                              ; preds = %122, %142
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %14) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK18SkSpecialImage_Gpu13onGetROPixelsEP8SkBitmap(%class.SkSpecialImage_Gpu*, %class.SkBitmap*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %class.GrRecordingContext* @_ZNK18SkSpecialImage_Gpu12onGetContextEv(%class.SkSpecialImage_Gpu*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %class.SkSpecialImage_Gpu, %class.SkSpecialImage_Gpu* %0, i64 0, i32 1
  %3 = load %class.GrRecordingContext*, %class.GrRecordingContext** %2, align 8
  ret %class.GrRecordingContext* %3
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %class.SkColorSpace* @_ZNK18SkSpecialImage_Gpu15onGetColorSpaceEv(%class.SkSpecialImage_Gpu*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %class.SkSpecialImage_Gpu, %class.SkSpecialImage_Gpu* %0, i64 0, i32 5, i32 0
  %3 = load %class.SkColorSpace*, %class.SkColorSpace** %2, align 8
  ret %class.SkColorSpace* %3
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK18SkSpecialImage_Gpu6onViewEP18GrRecordingContext(%class.GrSurfaceProxyView* noalias sret, %class.SkSpecialImage_Gpu*, %class.GrRecordingContext*) unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %class.GrSurfaceProxyView, %class.GrSurfaceProxyView* %0, i64 0, i32 0, i32 0
  %5 = getelementptr inbounds %class.SkSpecialImage_Gpu, %class.SkSpecialImage_Gpu* %1, i64 0, i32 2, i32 0, i32 0
  %6 = load %class.GrSurfaceProxy*, %class.GrSurfaceProxy** %5, align 8
  %7 = icmp eq %class.GrSurfaceProxy* %6, null
  br i1 %7, label %11, label %8

8:                                                ; preds = %3
  %9 = getelementptr inbounds %class.GrSurfaceProxy, %class.GrSurfaceProxy* %6, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %10 = atomicrmw add i32* %9, i32 1 monotonic
  br label %11

11:                                               ; preds = %3, %8
  store %class.GrSurfaceProxy* %6, %class.GrSurfaceProxy** %4, align 8
  %12 = getelementptr inbounds %class.GrSurfaceProxyView, %class.GrSurfaceProxyView* %0, i64 0, i32 1
  %13 = getelementptr inbounds %class.SkSpecialImage_Gpu, %class.SkSpecialImage_Gpu* %1, i64 0, i32 2, i32 1
  %14 = load i32, i32* %13, align 8
  store i32 %14, i32* %12, align 8
  %15 = getelementptr inbounds %class.GrSurfaceProxyView, %class.GrSurfaceProxyView* %0, i64 0, i32 2, i32 0
  %16 = getelementptr inbounds %class.SkSpecialImage_Gpu, %class.SkSpecialImage_Gpu* %1, i64 0, i32 2, i32 2, i32 0
  %17 = load i16, i16* %16, align 2
  store i16 %17, i16* %15, align 2
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK18SkSpecialImage_Gpu12onMakeSubsetERK7SkIRect(%class.sk_sp.151* noalias sret, %class.SkSpecialImage_Gpu*, %struct.SkIRect* dereferenceable(16)) unnamed_addr #0 comdat align 2 {
  %4 = alloca %class.GrSurfaceProxyView, align 8
  %5 = alloca %class.sk_sp.15, align 8
  %6 = getelementptr inbounds %class.SkSpecialImage_Gpu, %class.SkSpecialImage_Gpu* %1, i64 0, i32 1
  %7 = load %class.GrRecordingContext*, %class.GrRecordingContext** %6, align 8
  %8 = getelementptr inbounds %class.SkSpecialImage_Gpu, %class.SkSpecialImage_Gpu* %1, i64 0, i32 0, i32 0, i32 3
  %9 = load i32, i32* %8, align 4
  %10 = getelementptr inbounds %class.GrSurfaceProxyView, %class.GrSurfaceProxyView* %4, i64 0, i32 0, i32 0
  %11 = getelementptr inbounds %class.SkSpecialImage_Gpu, %class.SkSpecialImage_Gpu* %1, i64 0, i32 2, i32 0, i32 0
  %12 = load %class.GrSurfaceProxy*, %class.GrSurfaceProxy** %11, align 8
  %13 = icmp eq %class.GrSurfaceProxy* %12, null
  br i1 %13, label %17, label %14

14:                                               ; preds = %3
  %15 = getelementptr inbounds %class.GrSurfaceProxy, %class.GrSurfaceProxy* %12, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %16 = atomicrmw add i32* %15, i32 1 monotonic
  br label %17

17:                                               ; preds = %3, %14
  store %class.GrSurfaceProxy* %12, %class.GrSurfaceProxy** %10, align 8
  %18 = getelementptr inbounds %class.GrSurfaceProxyView, %class.GrSurfaceProxyView* %4, i64 0, i32 1
  %19 = getelementptr inbounds %class.SkSpecialImage_Gpu, %class.SkSpecialImage_Gpu* %1, i64 0, i32 2, i32 1
  %20 = load i32, i32* %19, align 8
  store i32 %20, i32* %18, align 8
  %21 = getelementptr inbounds %class.GrSurfaceProxyView, %class.GrSurfaceProxyView* %4, i64 0, i32 2, i32 0
  %22 = getelementptr inbounds %class.SkSpecialImage_Gpu, %class.SkSpecialImage_Gpu* %1, i64 0, i32 2, i32 2, i32 0
  %23 = load i16, i16* %22, align 2
  store i16 %23, i16* %21, align 4
  %24 = getelementptr inbounds %class.SkSpecialImage_Gpu, %class.SkSpecialImage_Gpu* %1, i64 0, i32 3
  %25 = load i32, i32* %24, align 8
  %26 = getelementptr inbounds %class.sk_sp.15, %class.sk_sp.15* %5, i64 0, i32 0
  %27 = getelementptr inbounds %class.SkSpecialImage_Gpu, %class.SkSpecialImage_Gpu* %1, i64 0, i32 5, i32 0
  %28 = load %class.SkColorSpace*, %class.SkColorSpace** %27, align 8
  %29 = icmp eq %class.SkColorSpace* %28, null
  br i1 %29, label %33, label %30

30:                                               ; preds = %17
  %31 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %28, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %32 = atomicrmw add i32* %31, i32 1 monotonic
  br label %33

33:                                               ; preds = %17, %30
  store %class.SkColorSpace* %28, %class.SkColorSpace** %26, align 8
  %34 = getelementptr inbounds %class.SkSpecialImage_Gpu, %class.SkSpecialImage_Gpu* %1, i64 0, i32 0, i32 0, i32 1
  %35 = getelementptr inbounds %class.SkSpecialImage_Gpu, %class.SkSpecialImage_Gpu* %1, i64 0, i32 4
  %36 = load i32, i32* %35, align 4
  call void @_ZN14SkSpecialImage19MakeDeferredFromGpuEP18GrRecordingContextRK7SkIRectj18GrSurfaceProxyView11GrColorType5sk_spI12SkColorSpaceERK14SkSurfaceProps11SkAlphaType(%class.sk_sp.151* sret %0, %class.GrRecordingContext* %7, %struct.SkIRect* dereferenceable(16) %2, i32 %9, %class.GrSurfaceProxyView* nonnull %4, i32 %25, %class.sk_sp.15* nonnull %5, %class.SkSurfaceProps* dereferenceable(8) %34, i32 %36)
  %37 = load %class.SkColorSpace*, %class.SkColorSpace** %26, align 8
  %38 = icmp eq %class.SkColorSpace* %37, null
  br i1 %38, label %45, label %39

39:                                               ; preds = %33
  %40 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %37, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %41 = atomicrmw add i32* %40, i32 -1 acq_rel
  %42 = icmp eq i32 %41, 1
  br i1 %42, label %43, label %45

43:                                               ; preds = %39
  %44 = bitcast %class.SkColorSpace* %37 to i8*
  tail call void @_ZdlPv(i8* %44) #12
  br label %45

45:                                               ; preds = %33, %39, %43
  %46 = load %class.GrSurfaceProxy*, %class.GrSurfaceProxy** %10, align 8
  %47 = icmp eq %class.GrSurfaceProxy* %46, null
  br i1 %47, label %60, label %48

48:                                               ; preds = %45
  %49 = getelementptr inbounds %class.GrSurfaceProxy, %class.GrSurfaceProxy* %46, i64 0, i32 1
  %50 = getelementptr inbounds %class.SkNVRefCnt.104, %class.SkNVRefCnt.104* %49, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %51 = atomicrmw add i32* %50, i32 -1 acq_rel
  %52 = icmp eq i32 %51, 1
  br i1 %52, label %53, label %60

53:                                               ; preds = %48
  %54 = getelementptr inbounds %class.SkNVRefCnt.104, %class.SkNVRefCnt.104* %49, i64 -2
  %55 = bitcast %class.SkNVRefCnt.104* %54 to %class.GrSurfaceProxy*
  %56 = bitcast %class.SkNVRefCnt.104* %54 to void (%class.GrSurfaceProxy*)***
  %57 = load void (%class.GrSurfaceProxy*)**, void (%class.GrSurfaceProxy*)*** %56, align 8
  %58 = getelementptr inbounds void (%class.GrSurfaceProxy*)*, void (%class.GrSurfaceProxy*)** %57, i64 1
  %59 = load void (%class.GrSurfaceProxy*)*, void (%class.GrSurfaceProxy*)** %58, align 8
  tail call void %59(%class.GrSurfaceProxy* nonnull %55) #11
  br label %60

60:                                               ; preds = %45, %48, %53
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK18SkSpecialImage_Gpu13onMakeSurfaceE11SkColorTypePK12SkColorSpaceRK7SkISize11SkAlphaTypeRK14SkSurfaceProps(%class.sk_sp.149* noalias sret, %class.SkSpecialImage_Gpu*, i32, %class.SkColorSpace*, %struct.SkISize* dereferenceable(8), i32, %class.SkSurfaceProps* dereferenceable(8)) unnamed_addr #0 comdat align 2 {
  %8 = alloca %struct.SkImageInfo, align 8
  %9 = getelementptr inbounds %class.SkSpecialImage_Gpu, %class.SkSpecialImage_Gpu* %1, i64 0, i32 1
  %10 = load %class.GrRecordingContext*, %class.GrRecordingContext** %9, align 8
  %11 = icmp eq %class.GrRecordingContext* %10, null
  br i1 %11, label %12, label %14

12:                                               ; preds = %7
  %13 = getelementptr inbounds %class.sk_sp.149, %class.sk_sp.149* %0, i64 0, i32 0
  store %class.SkSpecialSurface* null, %class.SkSpecialSurface** %13, align 8
  br label %46

14:                                               ; preds = %7
  %15 = bitcast %struct.SkImageInfo* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %15) #11
  %16 = getelementptr inbounds %struct.SkImageInfo, %struct.SkImageInfo* %8, i64 0, i32 0, i32 0, i32 0
  %17 = getelementptr inbounds %struct.SkImageInfo, %struct.SkImageInfo* %8, i64 0, i32 0, i32 1
  %18 = bitcast %struct.SkISize* %4 to i64*
  %19 = bitcast %struct.SkImageInfo* %8 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %19, i8 -86, i64 24, i1 false)
  %20 = load i64, i64* %18, align 4
  %21 = icmp eq %class.SkColorSpace* %3, null
  br i1 %21, label %26, label %22

22:                                               ; preds = %14
  %23 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %24 = atomicrmw add i32* %23, i32 1 monotonic, !noalias !50
  %25 = load %class.GrRecordingContext*, %class.GrRecordingContext** %9, align 8
  br label %26

26:                                               ; preds = %22, %14
  %27 = phi %class.GrRecordingContext* [ %25, %22 ], [ %10, %14 ]
  %28 = ptrtoint %class.SkColorSpace* %3 to i64
  %29 = zext i32 %2 to i64
  %30 = zext i32 %5 to i64
  %31 = shl nuw i64 %30, 32
  %32 = or i64 %31, %29
  %33 = bitcast %struct.SkImageInfo* %8 to i64*
  store i64 %28, i64* %33, align 8, !alias.scope !53
  %34 = bitcast i32* %17 to i64*
  store i64 %32, i64* %34, align 8, !alias.scope !53
  %35 = getelementptr inbounds %struct.SkImageInfo, %struct.SkImageInfo* %8, i64 0, i32 1
  %36 = bitcast %struct.SkISize* %35 to i64*
  store i64 %20, i64* %36, align 8, !alias.scope !53
  call void @_ZN16SkSpecialSurface16MakeRenderTargetEP18GrRecordingContextRK11SkImageInfoRK14SkSurfaceProps(%class.sk_sp.149* sret %0, %class.GrRecordingContext* %27, %struct.SkImageInfo* nonnull dereferenceable(24) %8, %class.SkSurfaceProps* dereferenceable(8) %6) #11
  %37 = load %class.SkColorSpace*, %class.SkColorSpace** %16, align 8
  %38 = icmp eq %class.SkColorSpace* %37, null
  br i1 %38, label %45, label %39

39:                                               ; preds = %26
  %40 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %37, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %41 = atomicrmw add i32* %40, i32 -1 acq_rel
  %42 = icmp eq i32 %41, 1
  br i1 %42, label %43, label %45

43:                                               ; preds = %39
  %44 = bitcast %class.SkColorSpace* %37 to i8*
  call void @_ZdlPv(i8* %44) #12
  br label %45

45:                                               ; preds = %26, %39, %43
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %15) #11
  br label %46

46:                                               ; preds = %45, %12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK18SkSpecialImage_Gpu9onAsImageEPK7SkIRect(%class.sk_sp.152* noalias sret, %class.SkSpecialImage_Gpu*, %struct.SkIRect*) unnamed_addr #0 comdat align 2 {
  %4 = alloca %class.sk_sp.103, align 8
  %5 = alloca %class.sk_sp.103, align 8
  %6 = alloca <2 x i64>, align 16
  %7 = bitcast <2 x i64>* %6 to %struct.SkIRect*
  %8 = alloca { i64, i64 }, align 8
  %9 = alloca %class.GrSurfaceProxyPriv, align 8
  %10 = alloca %class.GrSurfaceProxyView, align 8
  %11 = alloca %class.sk_sp.15, align 8
  %12 = alloca %class.GrSurfaceProxyView, align 8
  %13 = alloca %class.sk_sp.15, align 8
  %14 = alloca %class.GrSurfaceProxyPriv, align 8
  %15 = alloca %class.GrSurfaceProxyView, align 8
  %16 = alloca %class.sk_sp.15, align 8
  %17 = getelementptr inbounds %class.SkSpecialImage_Gpu, %class.SkSpecialImage_Gpu* %1, i64 0, i32 2, i32 0, i32 0
  %18 = load %class.GrSurfaceProxy*, %class.GrSurfaceProxy** %17, align 8
  %19 = icmp eq %struct.SkIRect* %2, null
  br i1 %19, label %190, label %20

20:                                               ; preds = %3
  %21 = tail call zeroext i1 @_ZNK14GrSurfaceProxy19isFunctionallyExactEv(%class.GrSurfaceProxy* %18) #11
  %22 = bitcast { i64, i64 }* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %22) #11
  br i1 %21, label %23, label %88

23:                                               ; preds = %20
  %24 = getelementptr inbounds %class.GrSurfaceProxy, %class.GrSurfaceProxy* %18, i64 0, i32 6
  %25 = bitcast %struct.SkISize* %24 to i64*
  %26 = load i64, i64* %25, align 8
  %27 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %8, i64 0, i32 0
  store i64 0, i64* %27, align 8
  %28 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %8, i64 0, i32 1
  store i64 %26, i64* %28, align 8
  %29 = bitcast %struct.SkIRect* %2 to i8*
  %30 = call i32 @bcmp(i8* nonnull %29, i8* nonnull %22, i64 16) #11
  %31 = icmp eq i32 %30, 0
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %22) #11
  br i1 %31, label %32, label %89

32:                                               ; preds = %23
  %33 = bitcast %class.GrSurfaceProxyPriv* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %33) #11
  %34 = getelementptr inbounds %class.GrSurfaceProxyPriv, %class.GrSurfaceProxyPriv* %9, i64 0, i32 0
  store %class.GrSurfaceProxy* %18, %class.GrSurfaceProxy** %34, align 8, !alias.scope !56
  call void @_ZN18GrSurfaceProxyPriv8exactifyEb(%class.GrSurfaceProxyPriv* nonnull %9, i1 zeroext false) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %33) #11
  %35 = getelementptr inbounds %class.SkSpecialImage_Gpu, %class.SkSpecialImage_Gpu* %1, i64 0, i32 1
  %36 = load %class.GrRecordingContext*, %class.GrRecordingContext** %35, align 8
  %37 = getelementptr inbounds %class.GrSurfaceProxyView, %class.GrSurfaceProxyView* %10, i64 0, i32 0, i32 0
  %38 = load %class.GrSurfaceProxy*, %class.GrSurfaceProxy** %17, align 8
  %39 = icmp eq %class.GrSurfaceProxy* %38, null
  br i1 %39, label %43, label %40

40:                                               ; preds = %32
  %41 = getelementptr inbounds %class.GrSurfaceProxy, %class.GrSurfaceProxy* %38, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %42 = atomicrmw add i32* %41, i32 1 monotonic
  br label %43

43:                                               ; preds = %32, %40
  store %class.GrSurfaceProxy* %38, %class.GrSurfaceProxy** %37, align 8
  %44 = getelementptr inbounds %class.GrSurfaceProxyView, %class.GrSurfaceProxyView* %10, i64 0, i32 1
  %45 = getelementptr inbounds %class.SkSpecialImage_Gpu, %class.SkSpecialImage_Gpu* %1, i64 0, i32 2, i32 1
  %46 = load i32, i32* %45, align 8
  store i32 %46, i32* %44, align 8
  %47 = getelementptr inbounds %class.GrSurfaceProxyView, %class.GrSurfaceProxyView* %10, i64 0, i32 2, i32 0
  %48 = getelementptr inbounds %class.SkSpecialImage_Gpu, %class.SkSpecialImage_Gpu* %1, i64 0, i32 2, i32 2, i32 0
  %49 = load i16, i16* %48, align 2
  store i16 %49, i16* %47, align 4
  %50 = bitcast %class.SkSpecialImage_Gpu* %1 to i32 (%class.SkSpecialImage_Gpu*)***
  %51 = load i32 (%class.SkSpecialImage_Gpu*)**, i32 (%class.SkSpecialImage_Gpu*)*** %50, align 8
  %52 = getelementptr inbounds i32 (%class.SkSpecialImage_Gpu*)*, i32 (%class.SkSpecialImage_Gpu*)** %51, i64 4
  %53 = load i32 (%class.SkSpecialImage_Gpu*)*, i32 (%class.SkSpecialImage_Gpu*)** %52, align 8
  %54 = call i32 %53(%class.SkSpecialImage_Gpu* %1) #11
  %55 = getelementptr inbounds %class.SkSpecialImage_Gpu, %class.SkSpecialImage_Gpu* %1, i64 0, i32 4
  %56 = load i32, i32* %55, align 4
  %57 = getelementptr inbounds %class.sk_sp.15, %class.sk_sp.15* %11, i64 0, i32 0
  %58 = getelementptr inbounds %class.SkSpecialImage_Gpu, %class.SkSpecialImage_Gpu* %1, i64 0, i32 5, i32 0
  %59 = load %class.SkColorSpace*, %class.SkColorSpace** %58, align 8
  %60 = icmp eq %class.SkColorSpace* %59, null
  br i1 %60, label %64, label %61

61:                                               ; preds = %43
  %62 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %59, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %63 = atomicrmw add i32* %62, i32 1 monotonic
  br label %64

64:                                               ; preds = %43, %61
  store %class.SkColorSpace* %59, %class.SkColorSpace** %57, align 8
  call fastcc void @_ZL19wrap_proxy_in_imageP18GrRecordingContext18GrSurfaceProxyView11SkColorType11SkAlphaType5sk_spI12SkColorSpaceE(%class.sk_sp.152* sret %0, %class.GrRecordingContext* %36, %class.GrSurfaceProxyView* nonnull %10, i32 %54, i32 %56, %class.sk_sp.15* nonnull %11)
  %65 = load %class.SkColorSpace*, %class.SkColorSpace** %57, align 8
  %66 = icmp eq %class.SkColorSpace* %65, null
  br i1 %66, label %73, label %67

67:                                               ; preds = %64
  %68 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %65, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %69 = atomicrmw add i32* %68, i32 -1 acq_rel
  %70 = icmp eq i32 %69, 1
  br i1 %70, label %71, label %73

71:                                               ; preds = %67
  %72 = bitcast %class.SkColorSpace* %65 to i8*
  call void @_ZdlPv(i8* %72) #12
  br label %73

73:                                               ; preds = %64, %67, %71
  %74 = load %class.GrSurfaceProxy*, %class.GrSurfaceProxy** %37, align 8
  %75 = icmp eq %class.GrSurfaceProxy* %74, null
  br i1 %75, label %246, label %76

76:                                               ; preds = %73
  %77 = getelementptr inbounds %class.GrSurfaceProxy, %class.GrSurfaceProxy* %74, i64 0, i32 1
  %78 = getelementptr inbounds %class.SkNVRefCnt.104, %class.SkNVRefCnt.104* %77, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %79 = atomicrmw add i32* %78, i32 -1 acq_rel
  %80 = icmp eq i32 %79, 1
  br i1 %80, label %81, label %246

81:                                               ; preds = %76
  %82 = getelementptr inbounds %class.SkNVRefCnt.104, %class.SkNVRefCnt.104* %77, i64 -2
  %83 = bitcast %class.SkNVRefCnt.104* %82 to %class.GrSurfaceProxy*
  %84 = bitcast %class.SkNVRefCnt.104* %82 to void (%class.GrSurfaceProxy*)***
  %85 = load void (%class.GrSurfaceProxy*)**, void (%class.GrSurfaceProxy*)*** %84, align 8
  %86 = getelementptr inbounds void (%class.GrSurfaceProxy*)*, void (%class.GrSurfaceProxy*)** %85, i64 1
  %87 = load void (%class.GrSurfaceProxy*)*, void (%class.GrSurfaceProxy*)** %86, align 8
  call void %87(%class.GrSurfaceProxy* nonnull %83) #11
  br label %246

88:                                               ; preds = %20
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %22) #11
  br label %89

89:                                               ; preds = %88, %23
  %90 = getelementptr inbounds %class.SkSpecialImage_Gpu, %class.SkSpecialImage_Gpu* %1, i64 0, i32 1
  %91 = load %class.GrRecordingContext*, %class.GrRecordingContext** %90, align 8
  %92 = load %class.GrSurfaceProxy*, %class.GrSurfaceProxy** %17, align 8
  %93 = icmp eq %class.GrSurfaceProxy* %92, null
  br i1 %93, label %97, label %94

94:                                               ; preds = %89
  %95 = getelementptr inbounds %class.GrSurfaceProxy, %class.GrSurfaceProxy* %92, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %96 = atomicrmw add i32* %95, i32 1 monotonic
  br label %97

97:                                               ; preds = %89, %94
  %98 = getelementptr inbounds %class.SkSpecialImage_Gpu, %class.SkSpecialImage_Gpu* %1, i64 0, i32 2, i32 1
  %99 = load i32, i32* %98, align 8
  %100 = getelementptr inbounds %class.SkSpecialImage_Gpu, %class.SkSpecialImage_Gpu* %1, i64 0, i32 2, i32 2, i32 0
  %101 = load i16, i16* %100, align 2
  %102 = bitcast %struct.SkIRect* %2 to <2 x i64>*
  %103 = load <2 x i64>, <2 x i64>* %102, align 4
  %104 = bitcast %class.sk_sp.103* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %104)
  %105 = bitcast <2 x i64>* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %105)
  %106 = bitcast %class.sk_sp.103* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %106) #11, !noalias !59
  %107 = getelementptr inbounds %class.sk_sp.103, %class.sk_sp.103* %4, i64 0, i32 0
  store %class.GrSurfaceProxy* inttoptr (i64 -6148914691236517206 to %class.GrSurfaceProxy*), %class.GrSurfaceProxy** %107, align 8, !noalias !59
  %108 = getelementptr inbounds %class.sk_sp.103, %class.sk_sp.103* %5, i64 0, i32 0
  br i1 %93, label %112, label %109

109:                                              ; preds = %97
  %110 = getelementptr inbounds %class.GrSurfaceProxy, %class.GrSurfaceProxy* %92, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %111 = atomicrmw add i32* %110, i32 1 monotonic, !noalias !62
  br label %112

112:                                              ; preds = %109, %97
  store %class.GrSurfaceProxy* %92, %class.GrSurfaceProxy** %108, align 8, !alias.scope !65, !noalias !59
  store <2 x i64> %103, <2 x i64>* %6, align 16, !noalias !59
  call void @_ZN14GrSurfaceProxy4CopyEP18GrRecordingContext5sk_spIS_E15GrSurfaceOrigin11GrMipmapped7SkIRect12SkBackingFit10SkBudgetedNS_14RectsMustMatchEPS2_I12GrRenderTaskE(%class.sk_sp.103* nonnull sret %4, %class.GrRecordingContext* %91, %class.sk_sp.103* nonnull %5, i32 %99, i1 zeroext false, %struct.SkIRect* nonnull byval(%struct.SkIRect) align 8 %7, i32 1, i1 zeroext true, i1 zeroext false, %class.sk_sp.218* null) #11, !noalias !59
  %113 = load %class.GrSurfaceProxy*, %class.GrSurfaceProxy** %108, align 8, !noalias !59
  %114 = icmp eq %class.GrSurfaceProxy* %113, null
  br i1 %114, label %127, label %115

115:                                              ; preds = %112
  %116 = getelementptr inbounds %class.GrSurfaceProxy, %class.GrSurfaceProxy* %113, i64 0, i32 1
  %117 = getelementptr inbounds %class.SkNVRefCnt.104, %class.SkNVRefCnt.104* %116, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %118 = atomicrmw add i32* %117, i32 -1 acq_rel, !noalias !59
  %119 = icmp eq i32 %118, 1
  br i1 %119, label %120, label %127

120:                                              ; preds = %115
  %121 = getelementptr inbounds %class.SkNVRefCnt.104, %class.SkNVRefCnt.104* %116, i64 -2
  %122 = bitcast %class.SkNVRefCnt.104* %121 to %class.GrSurfaceProxy*
  %123 = bitcast %class.SkNVRefCnt.104* %121 to void (%class.GrSurfaceProxy*)***
  %124 = load void (%class.GrSurfaceProxy*)**, void (%class.GrSurfaceProxy*)*** %123, align 8, !noalias !59
  %125 = getelementptr inbounds void (%class.GrSurfaceProxy*)*, void (%class.GrSurfaceProxy*)** %124, i64 1
  %126 = load void (%class.GrSurfaceProxy*)*, void (%class.GrSurfaceProxy*)** %125, align 8, !noalias !59
  call void %126(%class.GrSurfaceProxy* nonnull %122) #11, !noalias !59
  br label %127

127:                                              ; preds = %112, %115, %120
  %128 = bitcast %class.sk_sp.103* %4 to i64*
  %129 = load i64, i64* %128, align 8, !noalias !59
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %106) #11, !noalias !59
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %104)
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %105)
  br i1 %93, label %142, label %130

130:                                              ; preds = %127
  %131 = getelementptr inbounds %class.GrSurfaceProxy, %class.GrSurfaceProxy* %92, i64 0, i32 1
  %132 = getelementptr inbounds %class.SkNVRefCnt.104, %class.SkNVRefCnt.104* %131, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %133 = atomicrmw add i32* %132, i32 -1 acq_rel
  %134 = icmp eq i32 %133, 1
  br i1 %134, label %135, label %142

135:                                              ; preds = %130
  %136 = getelementptr inbounds %class.SkNVRefCnt.104, %class.SkNVRefCnt.104* %131, i64 -2
  %137 = bitcast %class.SkNVRefCnt.104* %136 to %class.GrSurfaceProxy*
  %138 = bitcast %class.SkNVRefCnt.104* %136 to void (%class.GrSurfaceProxy*)***
  %139 = load void (%class.GrSurfaceProxy*)**, void (%class.GrSurfaceProxy*)*** %138, align 8
  %140 = getelementptr inbounds void (%class.GrSurfaceProxy*)*, void (%class.GrSurfaceProxy*)** %139, i64 1
  %141 = load void (%class.GrSurfaceProxy*)*, void (%class.GrSurfaceProxy*)** %140, align 8
  call void %141(%class.GrSurfaceProxy* nonnull %137) #11
  br label %142

142:                                              ; preds = %127, %130, %135
  %143 = icmp eq i64 %129, 0
  br i1 %143, label %188, label %144

144:                                              ; preds = %142
  %145 = load %class.GrRecordingContext*, %class.GrRecordingContext** %90, align 8
  %146 = bitcast %class.GrSurfaceProxyView* %12 to i64*
  store i64 %129, i64* %146, align 8
  %147 = getelementptr inbounds %class.GrSurfaceProxyView, %class.GrSurfaceProxyView* %12, i64 0, i32 1
  store i32 %99, i32* %147, align 8
  %148 = getelementptr inbounds %class.GrSurfaceProxyView, %class.GrSurfaceProxyView* %12, i64 0, i32 2, i32 0
  store i16 %101, i16* %148, align 4
  %149 = bitcast %class.SkSpecialImage_Gpu* %1 to i32 (%class.SkSpecialImage_Gpu*)***
  %150 = load i32 (%class.SkSpecialImage_Gpu*)**, i32 (%class.SkSpecialImage_Gpu*)*** %149, align 8
  %151 = getelementptr inbounds i32 (%class.SkSpecialImage_Gpu*)*, i32 (%class.SkSpecialImage_Gpu*)** %150, i64 4
  %152 = load i32 (%class.SkSpecialImage_Gpu*)*, i32 (%class.SkSpecialImage_Gpu*)** %151, align 8
  %153 = call i32 %152(%class.SkSpecialImage_Gpu* %1) #11
  %154 = getelementptr inbounds %class.SkSpecialImage_Gpu, %class.SkSpecialImage_Gpu* %1, i64 0, i32 4
  %155 = load i32, i32* %154, align 4
  %156 = getelementptr inbounds %class.sk_sp.15, %class.sk_sp.15* %13, i64 0, i32 0
  %157 = getelementptr inbounds %class.SkSpecialImage_Gpu, %class.SkSpecialImage_Gpu* %1, i64 0, i32 5, i32 0
  %158 = load %class.SkColorSpace*, %class.SkColorSpace** %157, align 8
  %159 = icmp eq %class.SkColorSpace* %158, null
  br i1 %159, label %163, label %160

160:                                              ; preds = %144
  %161 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %158, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %162 = atomicrmw add i32* %161, i32 1 monotonic
  br label %163

163:                                              ; preds = %144, %160
  store %class.SkColorSpace* %158, %class.SkColorSpace** %156, align 8
  call fastcc void @_ZL19wrap_proxy_in_imageP18GrRecordingContext18GrSurfaceProxyView11SkColorType11SkAlphaType5sk_spI12SkColorSpaceE(%class.sk_sp.152* sret %0, %class.GrRecordingContext* %145, %class.GrSurfaceProxyView* nonnull %12, i32 %153, i32 %155, %class.sk_sp.15* nonnull %13)
  %164 = load %class.SkColorSpace*, %class.SkColorSpace** %156, align 8
  %165 = icmp eq %class.SkColorSpace* %164, null
  br i1 %165, label %172, label %166

166:                                              ; preds = %163
  %167 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %164, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %168 = atomicrmw add i32* %167, i32 -1 acq_rel
  %169 = icmp eq i32 %168, 1
  br i1 %169, label %170, label %172

170:                                              ; preds = %166
  %171 = bitcast %class.SkColorSpace* %164 to i8*
  call void @_ZdlPv(i8* %171) #12
  br label %172

172:                                              ; preds = %163, %166, %170
  %173 = getelementptr inbounds %class.GrSurfaceProxyView, %class.GrSurfaceProxyView* %12, i64 0, i32 0, i32 0
  %174 = load %class.GrSurfaceProxy*, %class.GrSurfaceProxy** %173, align 8
  %175 = icmp eq %class.GrSurfaceProxy* %174, null
  br i1 %175, label %246, label %176

176:                                              ; preds = %172
  %177 = getelementptr inbounds %class.GrSurfaceProxy, %class.GrSurfaceProxy* %174, i64 0, i32 1
  %178 = getelementptr inbounds %class.SkNVRefCnt.104, %class.SkNVRefCnt.104* %177, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %179 = atomicrmw add i32* %178, i32 -1 acq_rel
  %180 = icmp eq i32 %179, 1
  br i1 %180, label %181, label %246

181:                                              ; preds = %176
  %182 = getelementptr inbounds %class.SkNVRefCnt.104, %class.SkNVRefCnt.104* %177, i64 -2
  %183 = bitcast %class.SkNVRefCnt.104* %182 to %class.GrSurfaceProxy*
  %184 = bitcast %class.SkNVRefCnt.104* %182 to void (%class.GrSurfaceProxy*)***
  %185 = load void (%class.GrSurfaceProxy*)**, void (%class.GrSurfaceProxy*)*** %184, align 8
  %186 = getelementptr inbounds void (%class.GrSurfaceProxy*)*, void (%class.GrSurfaceProxy*)** %185, i64 1
  %187 = load void (%class.GrSurfaceProxy*)*, void (%class.GrSurfaceProxy*)** %186, align 8
  call void %187(%class.GrSurfaceProxy* nonnull %183) #11
  br label %246

188:                                              ; preds = %142
  %189 = getelementptr inbounds %class.sk_sp.152, %class.sk_sp.152* %0, i64 0, i32 0
  store %class.SkImage* null, %class.SkImage** %189, align 8
  br label %246

190:                                              ; preds = %3
  %191 = bitcast %class.GrSurfaceProxyPriv* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %191) #11
  %192 = getelementptr inbounds %class.GrSurfaceProxyPriv, %class.GrSurfaceProxyPriv* %14, i64 0, i32 0
  store %class.GrSurfaceProxy* %18, %class.GrSurfaceProxy** %192, align 8, !alias.scope !66
  call void @_ZN18GrSurfaceProxyPriv8exactifyEb(%class.GrSurfaceProxyPriv* nonnull %14, i1 zeroext true) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %191) #11
  %193 = getelementptr inbounds %class.SkSpecialImage_Gpu, %class.SkSpecialImage_Gpu* %1, i64 0, i32 1
  %194 = load %class.GrRecordingContext*, %class.GrRecordingContext** %193, align 8
  %195 = getelementptr inbounds %class.GrSurfaceProxyView, %class.GrSurfaceProxyView* %15, i64 0, i32 0, i32 0
  %196 = load %class.GrSurfaceProxy*, %class.GrSurfaceProxy** %17, align 8
  %197 = icmp eq %class.GrSurfaceProxy* %196, null
  br i1 %197, label %201, label %198

198:                                              ; preds = %190
  %199 = getelementptr inbounds %class.GrSurfaceProxy, %class.GrSurfaceProxy* %196, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %200 = atomicrmw add i32* %199, i32 1 monotonic
  br label %201

201:                                              ; preds = %190, %198
  store %class.GrSurfaceProxy* %196, %class.GrSurfaceProxy** %195, align 8
  %202 = getelementptr inbounds %class.GrSurfaceProxyView, %class.GrSurfaceProxyView* %15, i64 0, i32 1
  %203 = getelementptr inbounds %class.SkSpecialImage_Gpu, %class.SkSpecialImage_Gpu* %1, i64 0, i32 2, i32 1
  %204 = load i32, i32* %203, align 8
  store i32 %204, i32* %202, align 8
  %205 = getelementptr inbounds %class.GrSurfaceProxyView, %class.GrSurfaceProxyView* %15, i64 0, i32 2, i32 0
  %206 = getelementptr inbounds %class.SkSpecialImage_Gpu, %class.SkSpecialImage_Gpu* %1, i64 0, i32 2, i32 2, i32 0
  %207 = load i16, i16* %206, align 2
  store i16 %207, i16* %205, align 4
  %208 = bitcast %class.SkSpecialImage_Gpu* %1 to i32 (%class.SkSpecialImage_Gpu*)***
  %209 = load i32 (%class.SkSpecialImage_Gpu*)**, i32 (%class.SkSpecialImage_Gpu*)*** %208, align 8
  %210 = getelementptr inbounds i32 (%class.SkSpecialImage_Gpu*)*, i32 (%class.SkSpecialImage_Gpu*)** %209, i64 4
  %211 = load i32 (%class.SkSpecialImage_Gpu*)*, i32 (%class.SkSpecialImage_Gpu*)** %210, align 8
  %212 = call i32 %211(%class.SkSpecialImage_Gpu* %1) #11
  %213 = getelementptr inbounds %class.SkSpecialImage_Gpu, %class.SkSpecialImage_Gpu* %1, i64 0, i32 4
  %214 = load i32, i32* %213, align 4
  %215 = getelementptr inbounds %class.sk_sp.15, %class.sk_sp.15* %16, i64 0, i32 0
  %216 = getelementptr inbounds %class.SkSpecialImage_Gpu, %class.SkSpecialImage_Gpu* %1, i64 0, i32 5, i32 0
  %217 = load %class.SkColorSpace*, %class.SkColorSpace** %216, align 8
  %218 = icmp eq %class.SkColorSpace* %217, null
  br i1 %218, label %222, label %219

219:                                              ; preds = %201
  %220 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %217, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %221 = atomicrmw add i32* %220, i32 1 monotonic
  br label %222

222:                                              ; preds = %201, %219
  store %class.SkColorSpace* %217, %class.SkColorSpace** %215, align 8
  call fastcc void @_ZL19wrap_proxy_in_imageP18GrRecordingContext18GrSurfaceProxyView11SkColorType11SkAlphaType5sk_spI12SkColorSpaceE(%class.sk_sp.152* sret %0, %class.GrRecordingContext* %194, %class.GrSurfaceProxyView* nonnull %15, i32 %212, i32 %214, %class.sk_sp.15* nonnull %16)
  %223 = load %class.SkColorSpace*, %class.SkColorSpace** %215, align 8
  %224 = icmp eq %class.SkColorSpace* %223, null
  br i1 %224, label %231, label %225

225:                                              ; preds = %222
  %226 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %223, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %227 = atomicrmw add i32* %226, i32 -1 acq_rel
  %228 = icmp eq i32 %227, 1
  br i1 %228, label %229, label %231

229:                                              ; preds = %225
  %230 = bitcast %class.SkColorSpace* %223 to i8*
  call void @_ZdlPv(i8* %230) #12
  br label %231

231:                                              ; preds = %222, %225, %229
  %232 = load %class.GrSurfaceProxy*, %class.GrSurfaceProxy** %195, align 8
  %233 = icmp eq %class.GrSurfaceProxy* %232, null
  br i1 %233, label %246, label %234

234:                                              ; preds = %231
  %235 = getelementptr inbounds %class.GrSurfaceProxy, %class.GrSurfaceProxy* %232, i64 0, i32 1
  %236 = getelementptr inbounds %class.SkNVRefCnt.104, %class.SkNVRefCnt.104* %235, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %237 = atomicrmw add i32* %236, i32 -1 acq_rel
  %238 = icmp eq i32 %237, 1
  br i1 %238, label %239, label %246

239:                                              ; preds = %234
  %240 = getelementptr inbounds %class.SkNVRefCnt.104, %class.SkNVRefCnt.104* %235, i64 -2
  %241 = bitcast %class.SkNVRefCnt.104* %240 to %class.GrSurfaceProxy*
  %242 = bitcast %class.SkNVRefCnt.104* %240 to void (%class.GrSurfaceProxy*)***
  %243 = load void (%class.GrSurfaceProxy*)**, void (%class.GrSurfaceProxy*)*** %242, align 8
  %244 = getelementptr inbounds void (%class.GrSurfaceProxy*)*, void (%class.GrSurfaceProxy*)** %243, i64 1
  %245 = load void (%class.GrSurfaceProxy*)*, void (%class.GrSurfaceProxy*)** %244, align 8
  call void %245(%class.GrSurfaceProxy* nonnull %241) #11
  br label %246

246:                                              ; preds = %188, %181, %176, %172, %239, %234, %231, %81, %76, %73
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK18SkSpecialImage_Gpu18onMakeTightSurfaceE11SkColorTypePK12SkColorSpaceRK7SkISize11SkAlphaType(%class.sk_sp.150* noalias sret, %class.SkSpecialImage_Gpu*, i32, %class.SkColorSpace*, %struct.SkISize* dereferenceable(8), i32) unnamed_addr #0 comdat align 2 {
  %7 = alloca %struct.SkImageInfo, align 8
  %8 = icmp eq %class.SkColorSpace* %3, null
  br i1 %8, label %12, label %9

9:                                                ; preds = %6
  %10 = tail call zeroext i1 @_ZNK12SkColorSpace13gammaIsLinearEv(%class.SkColorSpace* nonnull %3) #11
  %11 = select i1 %10, i64 13, i64 4
  br label %12

12:                                               ; preds = %6, %9
  %13 = phi i64 [ 4, %6 ], [ %11, %9 ]
  %14 = bitcast %struct.SkImageInfo* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %14) #11
  %15 = getelementptr inbounds %struct.SkImageInfo, %struct.SkImageInfo* %7, i64 0, i32 0, i32 0, i32 0
  %16 = getelementptr inbounds %struct.SkImageInfo, %struct.SkImageInfo* %7, i64 0, i32 0, i32 1
  %17 = bitcast %struct.SkISize* %4 to i64*
  %18 = bitcast %struct.SkImageInfo* %7 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %18, i8 -86, i64 24, i1 false)
  %19 = load i64, i64* %17, align 4
  br i1 %8, label %23, label %20

20:                                               ; preds = %12
  %21 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %22 = atomicrmw add i32* %21, i32 1 monotonic, !noalias !69
  br label %23

23:                                               ; preds = %20, %12
  %24 = ptrtoint %class.SkColorSpace* %3 to i64
  %25 = zext i32 %5 to i64
  %26 = shl nuw i64 %25, 32
  %27 = or i64 %13, %26
  %28 = bitcast %struct.SkImageInfo* %7 to i64*
  store i64 %24, i64* %28, align 8, !alias.scope !72
  %29 = bitcast i32* %16 to i64*
  store i64 %27, i64* %29, align 8, !alias.scope !72
  %30 = getelementptr inbounds %struct.SkImageInfo, %struct.SkImageInfo* %7, i64 0, i32 1
  %31 = bitcast %struct.SkISize* %30 to i64*
  store i64 %19, i64* %31, align 8, !alias.scope !72
  %32 = trunc i64 %19 to i32
  %33 = icmp eq i32 %32, 0
  %34 = icmp ult i64 %19, 4294967296
  %35 = or i1 %33, %34
  br i1 %35, label %36, label %38

36:                                               ; preds = %23
  %37 = getelementptr inbounds %class.sk_sp.150, %class.sk_sp.150* %0, i64 0, i32 0
  store %class.SkSurface* null, %class.SkSurface** %37, align 8, !alias.scope !75
  br label %42

38:                                               ; preds = %23
  %39 = getelementptr inbounds %class.SkSpecialImage_Gpu, %class.SkSpecialImage_Gpu* %1, i64 0, i32 1
  %40 = load %class.GrRecordingContext*, %class.GrRecordingContext** %39, align 8
  call void @_ZN9SkSurface16MakeRenderTargetEP18GrRecordingContext10SkBudgetedRK11SkImageInfoi15GrSurfaceOriginPK14SkSurfacePropsb(%class.sk_sp.150* sret %0, %class.GrRecordingContext* %40, i1 zeroext true, %struct.SkImageInfo* nonnull dereferenceable(24) %7, i32 0, i32 1, %class.SkSurfaceProps* null, i1 zeroext false) #11
  %41 = load %class.SkColorSpace*, %class.SkColorSpace** %15, align 8
  br label %42

42:                                               ; preds = %36, %38
  %43 = phi %class.SkColorSpace* [ %3, %36 ], [ %41, %38 ]
  %44 = icmp eq %class.SkColorSpace* %43, null
  br i1 %44, label %51, label %45

45:                                               ; preds = %42
  %46 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %43, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %47 = atomicrmw add i32* %46, i32 -1 acq_rel
  %48 = icmp eq i32 %47, 1
  br i1 %48, label %49, label %51

49:                                               ; preds = %45
  %50 = bitcast %class.SkColorSpace* %43 to i8*
  call void @_ZdlPv(i8* %50) #12
  br label %51

51:                                               ; preds = %42, %45, %49
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %14) #11
  ret void
}

declare void @_ZN11SkImage_GpuC1E5sk_spI14GrImageContextEj18GrSurfaceProxyView11SkColorInfo(%class.SkImage_Gpu*, %class.sk_sp.217*, i32, %class.GrSurfaceProxyView*, %class.SkColorInfo*) unnamed_addr #1

declare void @_ZN16SkSpecialSurface16MakeRenderTargetEP18GrRecordingContextRK11SkImageInfoRK14SkSurfaceProps(%class.sk_sp.149* sret, %class.GrRecordingContext*, %struct.SkImageInfo* dereferenceable(24), %class.SkSurfaceProps* dereferenceable(8)) local_unnamed_addr #1

declare zeroext i1 @_ZNK14GrSurfaceProxy19isFunctionallyExactEv(%class.GrSurfaceProxy*) local_unnamed_addr #1

declare void @_ZN18GrSurfaceProxyPriv8exactifyEb(%class.GrSurfaceProxyPriv*, i1 zeroext) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define internal fastcc void @_ZL19wrap_proxy_in_imageP18GrRecordingContext18GrSurfaceProxyView11SkColorType11SkAlphaType5sk_spI12SkColorSpaceE(%class.sk_sp.152* noalias nocapture sret, %class.GrRecordingContext*, %class.GrSurfaceProxyView* nocapture, i32, i32, %class.sk_sp.15* nocapture) unnamed_addr #0 {
  %7 = alloca %class.sk_sp.217, align 8
  %8 = alloca %class.GrSurfaceProxyView, align 8
  %9 = alloca %class.SkColorInfo, align 8
  %10 = icmp eq %class.GrRecordingContext* %1, null
  br i1 %10, label %14, label %11

11:                                               ; preds = %6
  %12 = getelementptr inbounds %class.GrRecordingContext, %class.GrRecordingContext* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %13 = atomicrmw add i32* %12, i32 1 monotonic, !noalias !78
  br label %14

14:                                               ; preds = %6, %11
  %15 = ptrtoint %class.GrRecordingContext* %1 to i64
  %16 = getelementptr inbounds %class.sk_sp.15, %class.sk_sp.15* %5, i64 0, i32 0
  %17 = bitcast %class.sk_sp.15* %5 to i64*
  %18 = load i64, i64* %17, align 8
  store %class.SkColorSpace* null, %class.SkColorSpace** %16, align 8
  %19 = zext i32 %3 to i64
  %20 = zext i32 %4 to i64
  %21 = shl nuw i64 %20, 32
  %22 = or i64 %21, %19
  %23 = bitcast %class.sk_sp.217* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %23)
  %24 = bitcast %class.GrSurfaceProxyView* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %24)
  %25 = bitcast %class.SkColorInfo* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %25)
  %26 = tail call i8* @_Znwm(i64 104) #12, !noalias !81
  %27 = bitcast i8* %26 to %class.SkImage_Gpu*
  %28 = bitcast %class.sk_sp.217* %7 to i64*
  store i64 %15, i64* %28, align 8, !noalias !81
  %29 = getelementptr inbounds %class.GrSurfaceProxyView, %class.GrSurfaceProxyView* %2, i64 0, i32 0, i32 0
  %30 = bitcast %class.GrSurfaceProxyView* %2 to i64*
  %31 = load i64, i64* %30, align 8, !noalias !81
  store %class.GrSurfaceProxy* null, %class.GrSurfaceProxy** %29, align 8, !noalias !81
  %32 = bitcast %class.GrSurfaceProxyView* %8 to i64*
  store i64 %31, i64* %32, align 8, !noalias !81
  %33 = getelementptr inbounds %class.GrSurfaceProxyView, %class.GrSurfaceProxyView* %8, i64 0, i32 1
  %34 = getelementptr inbounds %class.GrSurfaceProxyView, %class.GrSurfaceProxyView* %2, i64 0, i32 1
  %35 = load i32, i32* %34, align 8, !noalias !81
  store i32 %35, i32* %33, align 8, !noalias !81
  %36 = getelementptr inbounds %class.GrSurfaceProxyView, %class.GrSurfaceProxyView* %8, i64 0, i32 2, i32 0
  %37 = getelementptr inbounds %class.GrSurfaceProxyView, %class.GrSurfaceProxyView* %2, i64 0, i32 2, i32 0
  %38 = load i16, i16* %37, align 2, !noalias !81
  store i16 %38, i16* %36, align 4, !noalias !81
  %39 = bitcast %class.SkColorInfo* %9 to i64*
  store i64 %18, i64* %39, align 8, !noalias !81
  %40 = getelementptr inbounds %class.SkColorInfo, %class.SkColorInfo* %9, i64 0, i32 1
  %41 = bitcast i32* %40 to i64*
  store i64 %22, i64* %41, align 8, !noalias !81
  call void @_ZN11SkImage_GpuC1E5sk_spI14GrImageContextEj18GrSurfaceProxyView11SkColorInfo(%class.SkImage_Gpu* nonnull %27, %class.sk_sp.217* nonnull %7, i32 0, %class.GrSurfaceProxyView* nonnull %8, %class.SkColorInfo* nonnull %9) #11, !noalias !81
  %42 = ptrtoint i8* %26 to i64
  %43 = getelementptr inbounds %class.SkColorInfo, %class.SkColorInfo* %9, i64 0, i32 0, i32 0
  %44 = load %class.SkColorSpace*, %class.SkColorSpace** %43, align 8, !noalias !81
  %45 = icmp eq %class.SkColorSpace* %44, null
  br i1 %45, label %52, label %46

46:                                               ; preds = %14
  %47 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %44, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %48 = atomicrmw add i32* %47, i32 -1 acq_rel, !noalias !81
  %49 = icmp eq i32 %48, 1
  br i1 %49, label %50, label %52

50:                                               ; preds = %46
  %51 = bitcast %class.SkColorSpace* %44 to i8*
  call void @_ZdlPv(i8* %51) #12, !noalias !81
  br label %52

52:                                               ; preds = %50, %46, %14
  %53 = getelementptr inbounds %class.GrSurfaceProxyView, %class.GrSurfaceProxyView* %8, i64 0, i32 0, i32 0
  %54 = load %class.GrSurfaceProxy*, %class.GrSurfaceProxy** %53, align 8, !noalias !81
  %55 = icmp eq %class.GrSurfaceProxy* %54, null
  br i1 %55, label %68, label %56

56:                                               ; preds = %52
  %57 = getelementptr inbounds %class.GrSurfaceProxy, %class.GrSurfaceProxy* %54, i64 0, i32 1
  %58 = getelementptr inbounds %class.SkNVRefCnt.104, %class.SkNVRefCnt.104* %57, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %59 = atomicrmw add i32* %58, i32 -1 acq_rel, !noalias !81
  %60 = icmp eq i32 %59, 1
  br i1 %60, label %61, label %68

61:                                               ; preds = %56
  %62 = getelementptr inbounds %class.SkNVRefCnt.104, %class.SkNVRefCnt.104* %57, i64 -2
  %63 = bitcast %class.SkNVRefCnt.104* %62 to %class.GrSurfaceProxy*
  %64 = bitcast %class.SkNVRefCnt.104* %62 to void (%class.GrSurfaceProxy*)***
  %65 = load void (%class.GrSurfaceProxy*)**, void (%class.GrSurfaceProxy*)*** %64, align 8, !noalias !81
  %66 = getelementptr inbounds void (%class.GrSurfaceProxy*)*, void (%class.GrSurfaceProxy*)** %65, i64 1
  %67 = load void (%class.GrSurfaceProxy*)*, void (%class.GrSurfaceProxy*)** %66, align 8, !noalias !81
  call void %67(%class.GrSurfaceProxy* nonnull %63) #11, !noalias !81
  br label %68

68:                                               ; preds = %61, %56, %52
  %69 = getelementptr inbounds %class.sk_sp.217, %class.sk_sp.217* %7, i64 0, i32 0
  %70 = load %class.GrImageContext*, %class.GrImageContext** %69, align 8, !noalias !81
  %71 = icmp eq %class.GrImageContext* %70, null
  br i1 %71, label %82, label %72

72:                                               ; preds = %68
  %73 = getelementptr inbounds %class.GrImageContext, %class.GrImageContext* %70, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %74 = atomicrmw add i32* %73, i32 -1 acq_rel, !noalias !81
  %75 = icmp eq i32 %74, 1
  br i1 %75, label %76, label %82

76:                                               ; preds = %72
  %77 = bitcast %class.GrImageContext* %70 to %class.SkRefCntBase*
  %78 = bitcast %class.GrImageContext* %70 to void (%class.SkRefCntBase*)***
  %79 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %78, align 8, !noalias !81
  %80 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %79, i64 2
  %81 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %80, align 8, !noalias !81
  call void %81(%class.SkRefCntBase* nonnull %77) #11, !noalias !81
  br label %82

82:                                               ; preds = %68, %72, %76
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %23)
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %24)
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %25)
  %83 = bitcast %class.sk_sp.152* %0 to i64*
  store i64 %42, i64* %83, align 8
  ret void
}

declare void @_ZN14GrSurfaceProxy4CopyEP18GrRecordingContext5sk_spIS_E15GrSurfaceOrigin11GrMipmapped7SkIRect12SkBackingFit10SkBudgetedNS_14RectsMustMatchEPS2_I12GrRenderTaskE(%class.sk_sp.103* sret, %class.GrRecordingContext*, %class.sk_sp.103*, i32, i1 zeroext, %struct.SkIRect* byval(%struct.SkIRect) align 8, i32, i1 zeroext, i1 zeroext, %class.sk_sp.218*) local_unnamed_addr #1

declare zeroext i1 @_ZNK12SkColorSpace13gammaIsLinearEv(%class.SkColorSpace*) local_unnamed_addr #1

declare void @_ZN9SkSurface16MakeRenderTargetEP18GrRecordingContext10SkBudgetedRK11SkImageInfoi15GrSurfaceOriginPK14SkSurfacePropsb(%class.sk_sp.150* sret, %class.GrRecordingContext*, i1 zeroext, %struct.SkImageInfo* dereferenceable(24), i32, i32, %class.SkSurfaceProps*, i1 zeroext) local_unnamed_addr #1

; Function Attrs: nofree nounwind readonly
declare i32 @bcmp(i8* nocapture, i8* nocapture, i64) local_unnamed_addr #10

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind }
attributes #3 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { inlinehint noreturn nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { cold noreturn nounwind }
attributes #10 = { nofree nounwind readonly }
attributes #11 = { nounwind }
attributes #12 = { builtin nounwind }
attributes #13 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!3}
!3 = distinct !{!3, !4, !"_Z10sk_make_spI18SkSpecialImage_GpuJRP18GrRecordingContextRK7SkIRectRj18GrSurfaceProxyViewR11GrColorTypeR11SkAlphaType5sk_spI12SkColorSpaceERK14SkSurfacePropsEESD_IT_EDpOT0_: argument 0"}
!4 = distinct !{!4, !"_Z10sk_make_spI18SkSpecialImage_GpuJRP18GrRecordingContextRK7SkIRectRj18GrSurfaceProxyViewR11GrColorTypeR11SkAlphaType5sk_spI12SkColorSpaceERK14SkSurfacePropsEESD_IT_EDpOT0_"}
!5 = !{!6}
!6 = distinct !{!6, !7, !"_ZNK11SkImageInfo13makeColorTypeE11SkColorType: argument 0"}
!7 = distinct !{!7, !"_ZNK11SkImageInfo13makeColorTypeE11SkColorType"}
!8 = !{!9, !6}
!9 = distinct !{!9, !10, !"_ZNK11SkColorInfo13makeColorTypeE11SkColorType: argument 0"}
!10 = distinct !{!10, !"_ZNK11SkColorInfo13makeColorTypeE11SkColorType"}
!11 = !{!12, !9, !6}
!12 = distinct !{!12, !13, !"_ZNK11SkColorInfo13refColorSpaceEv: argument 0"}
!13 = distinct !{!13, !"_ZNK11SkColorInfo13refColorSpaceEv"}
!14 = !{!15, !6}
!15 = distinct !{!15, !16, !"_ZN11SkImageInfo4MakeE7SkISizeO11SkColorInfo: argument 0"}
!16 = distinct !{!16, !"_ZN11SkImageInfo4MakeE7SkISizeO11SkColorInfo"}
!17 = !{!18}
!18 = distinct !{!18, !19, !"_Z10sk_make_spI21SkSpecialImage_RasterJRK7SkIRectRK8SkBitmapRK14SkSurfacePropsEE5sk_spIT_EDpOT0_: argument 0"}
!19 = distinct !{!19, !"_Z10sk_make_spI21SkSpecialImage_RasterJRK7SkIRectRK8SkBitmapRK14SkSurfacePropsEE5sk_spIT_EDpOT0_"}
!20 = !{!21, !23}
!21 = distinct !{!21, !22, !"_ZN11SkImageInfo4MakeE7SkISizeRK11SkColorInfo: argument 0"}
!22 = distinct !{!22, !"_ZN11SkImageInfo4MakeE7SkISizeRK11SkColorInfo"}
!23 = distinct !{!23, !24, !"_ZNK11SkImageInfo14makeDimensionsE7SkISize: argument 0"}
!24 = distinct !{!24, !"_ZNK11SkImageInfo14makeDimensionsE7SkISize"}
!25 = !{!26, !28, !30}
!26 = distinct !{!26, !27, !"_ZNK11SkColorInfo13refColorSpaceEv: argument 0"}
!27 = distinct !{!27, !"_ZNK11SkColorInfo13refColorSpaceEv"}
!28 = distinct !{!28, !29, !"_ZNK11SkColorInfo13makeColorTypeE11SkColorType: argument 0"}
!29 = distinct !{!29, !"_ZNK11SkColorInfo13makeColorTypeE11SkColorType"}
!30 = distinct !{!30, !31, !"_ZNK11SkImageInfo13makeColorTypeE11SkColorType: argument 0"}
!31 = distinct !{!31, !"_ZNK11SkImageInfo13makeColorTypeE11SkColorType"}
!32 = !{!33}
!33 = distinct !{!33, !34, !"_Z10sk_make_spI21SkSpecialImage_RasterJ7SkIRectR8SkBitmapRK14SkSurfacePropsEE5sk_spIT_EDpOT0_: argument 0"}
!34 = distinct !{!34, !"_Z10sk_make_spI21SkSpecialImage_RasterJ7SkIRectR8SkBitmapRK14SkSurfacePropsEE5sk_spIT_EDpOT0_"}
!35 = !{!36}
!36 = distinct !{!36, !37, !"_Z9sk_ref_spI12SkColorSpaceE5sk_spIT_EPKS2_: argument 0"}
!37 = distinct !{!37, !"_Z9sk_ref_spI12SkColorSpaceE5sk_spIT_EPKS2_"}
!38 = !{!39}
!39 = distinct !{!39, !40, !"_ZN11SkImageInfo4MakeE7SkISize11SkColorType11SkAlphaType5sk_spI12SkColorSpaceE: argument 0"}
!40 = distinct !{!40, !"_ZN11SkImageInfo4MakeE7SkISize11SkColorType11SkAlphaType5sk_spI12SkColorSpaceE"}
!41 = !{!42}
!42 = distinct !{!42, !43, !"_Z9sk_ref_spI12SkColorSpaceE5sk_spIT_EPKS2_: argument 0"}
!43 = distinct !{!43, !"_Z9sk_ref_spI12SkColorSpaceE5sk_spIT_EPKS2_"}
!44 = !{!45}
!45 = distinct !{!45, !46, !"_ZN11SkImageInfo4MakeE7SkISize11SkColorType11SkAlphaType5sk_spI12SkColorSpaceE: argument 0"}
!46 = distinct !{!46, !"_ZN11SkImageInfo4MakeE7SkISize11SkColorType11SkAlphaType5sk_spI12SkColorSpaceE"}
!47 = !{!48}
!48 = distinct !{!48, !49, !"_Z9sk_ref_spI18GrRecordingContextE5sk_spIT_EPS2_: argument 0"}
!49 = distinct !{!49, !"_Z9sk_ref_spI18GrRecordingContextE5sk_spIT_EPS2_"}
!50 = !{!51}
!51 = distinct !{!51, !52, !"_Z9sk_ref_spI12SkColorSpaceE5sk_spIT_EPKS2_: argument 0"}
!52 = distinct !{!52, !"_Z9sk_ref_spI12SkColorSpaceE5sk_spIT_EPKS2_"}
!53 = !{!54}
!54 = distinct !{!54, !55, !"_ZN11SkImageInfo4MakeE7SkISize11SkColorType11SkAlphaType5sk_spI12SkColorSpaceE: argument 0"}
!55 = distinct !{!55, !"_ZN11SkImageInfo4MakeE7SkISize11SkColorType11SkAlphaType5sk_spI12SkColorSpaceE"}
!56 = !{!57}
!57 = distinct !{!57, !58, !"_ZN14GrSurfaceProxy4privEv: argument 0"}
!58 = distinct !{!58, !"_ZN14GrSurfaceProxy4privEv"}
!59 = !{!60}
!60 = distinct !{!60, !61, !"_ZN18GrSurfaceProxyView4CopyEP18GrRecordingContextS_11GrMipmapped7SkIRect12SkBackingFit10SkBudgeted: argument 0"}
!61 = distinct !{!61, !"_ZN18GrSurfaceProxyView4CopyEP18GrRecordingContextS_11GrMipmapped7SkIRect12SkBackingFit10SkBudgeted"}
!62 = !{!63, !60}
!63 = distinct !{!63, !64, !"_ZNK18GrSurfaceProxyView8refProxyEv: argument 0"}
!64 = distinct !{!64, !"_ZNK18GrSurfaceProxyView8refProxyEv"}
!65 = !{!63}
!66 = !{!67}
!67 = distinct !{!67, !68, !"_ZN14GrSurfaceProxy4privEv: argument 0"}
!68 = distinct !{!68, !"_ZN14GrSurfaceProxy4privEv"}
!69 = !{!70}
!70 = distinct !{!70, !71, !"_Z9sk_ref_spI12SkColorSpaceE5sk_spIT_EPKS2_: argument 0"}
!71 = distinct !{!71, !"_Z9sk_ref_spI12SkColorSpaceE5sk_spIT_EPKS2_"}
!72 = !{!73}
!73 = distinct !{!73, !74, !"_ZN11SkImageInfo4MakeE7SkISize11SkColorType11SkAlphaType5sk_spI12SkColorSpaceE: argument 0"}
!74 = distinct !{!74, !"_ZN11SkImageInfo4MakeE7SkISize11SkColorType11SkAlphaType5sk_spI12SkColorSpaceE"}
!75 = !{!76}
!76 = distinct !{!76, !77, !"_ZN9SkSurface16MakeRenderTargetEP18GrRecordingContext10SkBudgetedRK11SkImageInfo: argument 0"}
!77 = distinct !{!77, !"_ZN9SkSurface16MakeRenderTargetEP18GrRecordingContext10SkBudgetedRK11SkImageInfo"}
!78 = !{!79}
!79 = distinct !{!79, !80, !"_Z9sk_ref_spI18GrRecordingContextE5sk_spIT_EPS2_: argument 0"}
!80 = distinct !{!80, !"_Z9sk_ref_spI18GrRecordingContextE5sk_spIT_EPS2_"}
!81 = !{!82}
!82 = distinct !{!82, !83, !"_Z10sk_make_spI11SkImage_GpuJ5sk_spI18GrRecordingContextE3$_118GrSurfaceProxyView11SkColorInfoEES1_IT_EDpOT0_: argument 0"}
!83 = distinct !{!83, !"_Z10sk_make_spI11SkImage_GpuJ5sk_spI18GrRecordingContextE3$_118GrSurfaceProxyView11SkColorInfoEES1_IT_EDpOT0_"}
