; ModuleID = '../../ui/base/l10n/time_format.cc'
source_filename = "../../ui/base/l10n/time_format.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.base::LazyInstance" = type { i64, [48 x i8] }
%"class.base::TimeDelta" = type { i64 }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__rep" }
%"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__long" }
%"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__long" = type { i16*, i64, i64 }
%"class.icu_69::UnicodeString" = type { %"class.icu_69::Replaceable", %"union.icu_69::UnicodeString::StackBufferOrFields" }
%"class.icu_69::Replaceable" = type { %"class.icu_69::UObject" }
%"class.icu_69::UObject" = type { i32 (...)** }
%"union.icu_69::UnicodeString::StackBufferOrFields" = type { %struct.anon.2, [32 x i8] }
%struct.anon.2 = type { i16, i32, i32, i16* }
%"class.icu_69::Char16Ptr" = type { i16* }
%"class.ui::FormatterContainer" = type { [3 x [2 x %"class.std::__1::unique_ptr.6"]] }
%"class.std::__1::unique_ptr.6" = type { %"class.std::__1::__compressed_pair.7" }
%"class.std::__1::__compressed_pair.7" = type { %"struct.std::__1::__compressed_pair_elem.8" }
%"struct.std::__1::__compressed_pair_elem.8" = type { %"class.ui::Formatter"* }
%"class.ui::Formatter" = type { [6 x %"class.std::__1::unique_ptr"], [3 x [2 x %"class.std::__1::unique_ptr"]] }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair.3" }
%"class.std::__1::__compressed_pair.3" = type { %"struct.std::__1::__compressed_pair_elem.4" }
%"struct.std::__1::__compressed_pair_elem.4" = type { %"class.icu_69::MessageFormat"* }
%"class.icu_69::MessageFormat" = type { %"class.icu_69::Format.base", [6 x i8], %"class.icu_69::Locale", %"class.icu_69::MessagePattern", %"class.icu_69::Format"**, i32, i32*, i32, i32, i8, %"class.icu_69::NumberFormat"*, %"class.icu_69::DateFormat"*, %struct.UHashtable*, %struct.UHashtable*, %"class.icu_69::MessageFormat::PluralSelectorProvider", %"class.icu_69::MessageFormat::PluralSelectorProvider" }
%"class.icu_69::Format.base" = type <{ %"class.icu_69::UObject", [157 x i8], [157 x i8] }>
%"class.icu_69::Locale" = type <{ %"class.icu_69::UObject", [12 x i8], [6 x i8], [4 x i8], [2 x i8], i32, [4 x i8], i8*, [157 x i8], [3 x i8], i8*, i8, [7 x i8] }>
%"class.icu_69::MessagePattern" = type <{ %"class.icu_69::UObject", i32, [4 x i8], %"class.icu_69::UnicodeString", %"class.icu_69::MessagePatternPartsList"*, %"class.icu_69::MessagePattern::Part"*, i32, [4 x i8], %"class.icu_69::MessagePatternDoubleList"*, double*, i32, i8, i8, i8, i8 }>
%"class.icu_69::MessagePatternPartsList" = type opaque
%"class.icu_69::MessagePattern::Part" = type { i32, i32, i16, i16, i32 }
%"class.icu_69::MessagePatternDoubleList" = type opaque
%"class.icu_69::Format" = type <{ %"class.icu_69::UObject", [157 x i8], [157 x i8], [6 x i8] }>
%"class.icu_69::NumberFormat" = type { %"class.icu_69::Format.base", i8, i32, i32, i32, i32, i8, i8, [4 x i16], i32, [4 x i8] }
%"class.icu_69::DateFormat" = type opaque
%struct.UHashtable = type opaque
%"class.icu_69::MessageFormat::PluralSelectorProvider" = type <{ %"class.icu_69::PluralFormat::PluralSelector", %"class.icu_69::MessageFormat"*, %"class.icu_69::PluralRules"*, i32, [4 x i8] }>
%"class.icu_69::PluralFormat::PluralSelector" = type { i32 (...)** }
%"class.icu_69::PluralRules" = type <{ %"class.icu_69::UObject", %"class.icu_69::RuleChain"*, %"class.icu_69::StandardPluralRanges"*, i32, [4 x i8] }>
%"class.icu_69::RuleChain" = type opaque
%"class.icu_69::StandardPluralRanges" = type opaque
%"class.logging::CheckOpResult" = type { i8* }
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.logging::LogMessage" = type { i32 (...)**, i32, %"class.std::__1::basic_ostringstream", i64, i8*, i32, %"class.base::ScopedClearLastErrorBase" }
%"class.std::__1::basic_ostringstream" = type { %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string.12", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_string.12" = type { %"class.std::__1::__compressed_pair.13" }
%"class.std::__1::__compressed_pair.13" = type { %"struct.std::__1::__compressed_pair_elem.14" }
%"struct.std::__1::__compressed_pair_elem.14" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon.15 }
%union.anon.15 = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.base::ScopedClearLastErrorBase" = type { i32 }
%"class.base::Time" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }

$_ZNK4base9TimeDeltamiES0_ = comdat any

$_ZNK4base9TimeDeltadvES0_ = comdat any

@_ZN2ui11g_containerE = hidden global %"class.base::LazyInstance" zeroinitializer, align 8
@_ZZN2ui10TimeFormat24DetailedWithMonthAndYearENS0_6FormatENS0_6LengthEiRKN4base9TimeDeltaEbE5kHour = internal constant %"class.base::TimeDelta" { i64 3600000000 }, align 8
@_ZZN2ui10TimeFormat24DetailedWithMonthAndYearENS0_6FormatENS0_6LengthEiRKN4base9TimeDeltaEbE4kDay = internal constant %"class.base::TimeDelta" { i64 86400000000 }, align 8
@_ZZN2ui10TimeFormat24DetailedWithMonthAndYearENS0_6FormatENS0_6LengthEiRKN4base9TimeDeltaEbE11kHalfSecond = internal unnamed_addr constant %"class.base::TimeDelta" { i64 500000 }, align 8
@_ZZN2ui10TimeFormat24DetailedWithMonthAndYearENS0_6FormatENS0_6LengthEiRKN4base9TimeDeltaEbE11kHalfMinute = internal unnamed_addr constant %"class.base::TimeDelta" { i64 30000000 }, align 8
@_ZZN2ui10TimeFormat24DetailedWithMonthAndYearENS0_6FormatENS0_6LengthEiRKN4base9TimeDeltaEbE9kHalfHour = internal unnamed_addr constant %"class.base::TimeDelta" { i64 1800000000 }, align 8
@_ZTVN6icu_6913UnicodeStringE = external unnamed_addr constant { [13 x i8*] }, align 8
@.str = private unnamed_addr constant [23 x i8] c"delta_ != other.delta_\00", align 1
@.str.1 = private unnamed_addr constant [23 x i8] c"../../base/time/time.h\00", align 1
@.str.3 = private unnamed_addr constant [27 x i8] c"!is_zero() || !a.is_zero()\00", align 1
@.str.4 = private unnamed_addr constant [25 x i8] c"!is_inf() || !a.is_inf()\00", align 1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2ui10TimeFormat6SimpleENS0_6FormatENS0_6LengthERKN4base9TimeDeltaE(%"class.std::__1::basic_string"* noalias sret, i32, i32, %"class.base::TimeDelta"* dereferenceable(8)) local_unnamed_addr #0 align 2 {
  tail call void @_ZN2ui10TimeFormat24DetailedWithMonthAndYearENS0_6FormatENS0_6LengthEiRKN4base9TimeDeltaEb(%"class.std::__1::basic_string"* sret %0, i32 %1, i32 %2, i32 0, %"class.base::TimeDelta"* dereferenceable(8) %3, i1 zeroext false) #6
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2ui10TimeFormat8DetailedENS0_6FormatENS0_6LengthEiRKN4base9TimeDeltaE(%"class.std::__1::basic_string"* noalias sret, i32, i32, i32, %"class.base::TimeDelta"* dereferenceable(8)) local_unnamed_addr #0 align 2 {
  tail call void @_ZN2ui10TimeFormat24DetailedWithMonthAndYearENS0_6FormatENS0_6LengthEiRKN4base9TimeDeltaEb(%"class.std::__1::basic_string"* sret %0, i32 %1, i32 %2, i32 %3, %"class.base::TimeDelta"* dereferenceable(8) %4, i1 zeroext false)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2ui10TimeFormat22SimpleWithMonthAndYearENS0_6FormatENS0_6LengthERKN4base9TimeDeltaEb(%"class.std::__1::basic_string"* noalias sret, i32, i32, %"class.base::TimeDelta"* dereferenceable(8), i1 zeroext) local_unnamed_addr #0 align 2 {
  tail call void @_ZN2ui10TimeFormat24DetailedWithMonthAndYearENS0_6FormatENS0_6LengthEiRKN4base9TimeDeltaEb(%"class.std::__1::basic_string"* sret %0, i32 %1, i32 %2, i32 0, %"class.base::TimeDelta"* dereferenceable(8) %3, i1 zeroext %4)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2ui10TimeFormat24DetailedWithMonthAndYearENS0_6FormatENS0_6LengthEiRKN4base9TimeDeltaEb(%"class.std::__1::basic_string"* noalias sret, i32, i32, i32, %"class.base::TimeDelta"* dereferenceable(8), i1 zeroext) local_unnamed_addr #0 align 2 {
  %7 = alloca %"class.icu_69::UnicodeString", align 8
  %8 = alloca %"class.base::TimeDelta", align 8
  %9 = alloca %"class.base::TimeDelta", align 8
  %10 = alloca i32, align 4
  %11 = alloca %"class.icu_69::Char16Ptr", align 8
  %12 = icmp ult i32 %3, 2147483647
  %13 = select i1 %12, i32 %3, i32 2147483647
  %14 = bitcast %"class.icu_69::UnicodeString"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %14) #6
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %14, i8 -86, i64 64, i1 false)
  %15 = getelementptr inbounds %"class.icu_69::UnicodeString", %"class.icu_69::UnicodeString"* %7, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [13 x i8*] }, { [13 x i8*] }* @_ZTVN6icu_6913UnicodeStringE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %15, align 8
  %16 = getelementptr inbounds %"class.icu_69::UnicodeString", %"class.icu_69::UnicodeString"* %7, i64 0, i32 1, i32 0, i32 0
  store i16 2, i16* %16, align 8
  %17 = load atomic i64, i64* getelementptr inbounds (%"class.base::LazyInstance", %"class.base::LazyInstance"* @_ZN2ui11g_containerE, i64 0, i32 0) acquire, align 8
  %18 = icmp ugt i64 %17, 1
  br i1 %18, label %24, label %19

19:                                               ; preds = %6
  %20 = tail call zeroext i1 @_ZN4base8internal17NeedsLazyInstanceEPl(i64* getelementptr inbounds (%"class.base::LazyInstance", %"class.base::LazyInstance"* @_ZN2ui11g_containerE, i64 0, i32 0)) #6
  br i1 %20, label %21, label %22

21:                                               ; preds = %19
  tail call void @_ZN2ui18FormatterContainerC1Ev(%"class.ui::FormatterContainer"* bitcast (i8* getelementptr inbounds (%"class.base::LazyInstance", %"class.base::LazyInstance"* @_ZN2ui11g_containerE, i64 0, i32 1, i64 0) to %"class.ui::FormatterContainer"*)) #6
  tail call void @_ZN4base8internal20CompleteLazyInstanceEPllPFvPvES2_(i64* getelementptr inbounds (%"class.base::LazyInstance", %"class.base::LazyInstance"* @_ZN2ui11g_containerE, i64 0, i32 0), i64 ptrtoint (i8* getelementptr inbounds (%"class.base::LazyInstance", %"class.base::LazyInstance"* @_ZN2ui11g_containerE, i64 0, i32 1, i64 0) to i64), void (i8*)* null, i8* bitcast (%"class.base::LazyInstance"* @_ZN2ui11g_containerE to i8*)) #6
  br label %24

22:                                               ; preds = %19
  %23 = load atomic i64, i64* getelementptr inbounds (%"class.base::LazyInstance", %"class.base::LazyInstance"* @_ZN2ui11g_containerE, i64 0, i32 0) acquire, align 8
  br label %24

24:                                               ; preds = %6, %21, %22
  %25 = phi i64 [ %17, %6 ], [ ptrtoint (i8* getelementptr inbounds (%"class.base::LazyInstance", %"class.base::LazyInstance"* @_ZN2ui11g_containerE, i64 0, i32 1, i64 0) to i64), %21 ], [ %23, %22 ]
  %26 = inttoptr i64 %25 to %"class.ui::FormatterContainer"*
  %27 = tail call %"class.ui::Formatter"* @_ZNK2ui18FormatterContainer3GetENS_10TimeFormat6FormatENS1_6LengthE(%"class.ui::FormatterContainer"* %26, i32 %1, i32 %2) #6
  %28 = getelementptr inbounds %"class.base::TimeDelta", %"class.base::TimeDelta"* %4, i64 0, i32 0
  %29 = load i64, i64* %28, align 8
  %30 = icmp slt i64 %29, 59500000
  br i1 %30, label %31, label %52

31:                                               ; preds = %24
  %32 = add i64 %29, -9223372036854775807
  %33 = icmp ult i64 %32, 2
  br i1 %33, label %37, label %34

34:                                               ; preds = %31
  %35 = sitofp i64 %29 to double
  %36 = fdiv double %35, 1.000000e+06
  br label %37

37:                                               ; preds = %31, %34
  %38 = phi double [ %36, %34 ], [ 0xFFF0000000000000, %31 ]
  %39 = fcmp oge double %38, 0.000000e+00
  %40 = fadd double %38, 5.000000e-01
  %41 = tail call double @llvm.floor.f64(double %40) #6
  %42 = fadd double %38, -5.000000e-01
  %43 = tail call double @llvm.ceil.f64(double %42) #6
  %44 = select i1 %39, double %41, double %43
  %45 = fcmp ult double %44, 0xC1E0000000000000
  %46 = fcmp ugt double %44, 0x41DFFFFFFFC00000
  %47 = fcmp ogt double %44, 0xC1E0000000000000
  %48 = select i1 %47, double %44, double 0xC1E0000000000000
  %49 = fptosi double %48 to i32
  %50 = select i1 %45, i32 0, i32 2147483647
  %51 = select i1 %46, i32 %50, i32 %49
  call void @_ZNK2ui9Formatter6FormatENS0_4UnitEiPN6icu_6913UnicodeStringE(%"class.ui::Formatter"* %27, i32 0, i32 %51, %"class.icu_69::UnicodeString"* nonnull %7) #6
  br label %285

52:                                               ; preds = %24
  %53 = icmp slt i32 %13, 60
  %54 = select i1 %53, %"class.base::TimeDelta"* @_ZZN2ui10TimeFormat24DetailedWithMonthAndYearENS0_6FormatENS0_6LengthEiRKN4base9TimeDeltaEbE11kHalfMinute, %"class.base::TimeDelta"* @_ZZN2ui10TimeFormat24DetailedWithMonthAndYearENS0_6FormatENS0_6LengthEiRKN4base9TimeDeltaEbE11kHalfSecond
  %55 = getelementptr inbounds %"class.base::TimeDelta", %"class.base::TimeDelta"* %54, i64 0, i32 0
  %56 = load i64, i64* %55, align 8
  %57 = tail call i64 @_ZNK4base9TimeDeltamiES0_(%"class.base::TimeDelta"* nonnull @_ZZN2ui10TimeFormat24DetailedWithMonthAndYearENS0_6FormatENS0_6LengthEiRKN4base9TimeDeltaEbE5kHour, i64 %56)
  %58 = load i64, i64* %28, align 8
  %59 = icmp slt i64 %58, %57
  br i1 %59, label %60, label %132

60:                                               ; preds = %52
  %61 = zext i32 %13 to i64
  %62 = mul nuw nsw i64 %61, 60000000
  %63 = add nsw i64 %62, -500000
  %64 = icmp slt i64 %58, %63
  br i1 %64, label %87, label %65

65:                                               ; preds = %60
  %66 = tail call { i64, i1 } @llvm.sadd.with.overflow.i64(i64 %58, i64 30000000) #6
  %67 = extractvalue { i64, i1 } %66, 1
  %68 = extractvalue { i64, i1 } %66, 0
  %69 = select i1 %67, i64 9223372036854775807, i64 %68, !prof !2
  %70 = sdiv i64 %69, 60000000
  %71 = tail call i1 @llvm.is.constant.i64(i64 %70) #6
  br i1 %71, label %79, label %72

72:                                               ; preds = %65
  %73 = icmp slt i64 %69, -59999999
  %74 = select i1 %73, i32 -2147483648, i32 2147483647
  %75 = add nsw i64 %70, 2147483648
  %76 = icmp ult i64 %75, 4294967296
  %77 = trunc i64 %70 to i32
  %78 = select i1 %76, i32 %77, i32 %74, !prof !3
  br label %85

79:                                               ; preds = %65
  %80 = icmp sgt i64 %69, 128849018879999999
  br i1 %80, label %85, label %81

81:                                               ; preds = %79
  %82 = icmp sgt i64 %70, -2147483648
  %83 = select i1 %82, i64 %70, i64 -2147483648
  %84 = trunc i64 %83 to i32
  br label %85

85:                                               ; preds = %72, %79, %81
  %86 = phi i32 [ %78, %72 ], [ %84, %81 ], [ 2147483647, %79 ]
  call void @_ZNK2ui9Formatter6FormatENS0_4UnitEiPN6icu_6913UnicodeStringE(%"class.ui::Formatter"* %27, i32 1, i32 %86, %"class.icu_69::UnicodeString"* nonnull %7) #6
  br label %285

87:                                               ; preds = %60
  %88 = tail call { i64, i1 } @llvm.sadd.with.overflow.i64(i64 %58, i64 500000) #6
  %89 = extractvalue { i64, i1 } %88, 1
  %90 = extractvalue { i64, i1 } %88, 0
  %91 = select i1 %89, i64 9223372036854775807, i64 %90, !prof !2
  %92 = sdiv i64 %91, 60000000
  %93 = tail call i1 @llvm.is.constant.i64(i64 %92) #6
  br i1 %93, label %101, label %94

94:                                               ; preds = %87
  %95 = icmp slt i64 %91, -59999999
  %96 = select i1 %95, i32 -2147483648, i32 2147483647
  %97 = add nsw i64 %92, 2147483648
  %98 = icmp ult i64 %97, 4294967296
  %99 = trunc i64 %92 to i32
  %100 = select i1 %98, i32 %99, i32 %96, !prof !3
  br label %107

101:                                              ; preds = %87
  %102 = icmp sgt i64 %91, 128849018879999999
  br i1 %102, label %107, label %103

103:                                              ; preds = %101
  %104 = icmp sgt i64 %92, -2147483648
  %105 = select i1 %104, i64 %92, i64 -2147483648
  %106 = trunc i64 %105 to i32
  br label %107

107:                                              ; preds = %94, %101, %103
  %108 = phi i32 [ %100, %94 ], [ %106, %103 ], [ 2147483647, %101 ]
  %109 = add i64 %58, -9223372036854775807
  %110 = icmp ult i64 %109, 2
  br i1 %110, label %114, label %111

111:                                              ; preds = %107
  %112 = sitofp i64 %58 to double
  %113 = fdiv double %112, 1.000000e+06
  br label %114

114:                                              ; preds = %107, %111
  %115 = phi double [ %113, %111 ], [ 0xFFF0000000000000, %107 ]
  %116 = fcmp oge double %115, 0.000000e+00
  %117 = fadd double %115, 5.000000e-01
  %118 = tail call double @llvm.floor.f64(double %117) #6
  %119 = fadd double %115, -5.000000e-01
  %120 = tail call double @llvm.ceil.f64(double %119) #6
  %121 = select i1 %116, double %118, double %120
  %122 = fcmp ult double %121, 0xC1E0000000000000
  %123 = fcmp ugt double %121, 0x41DFFFFFFFC00000
  %124 = fcmp ogt double %121, 0xC1E0000000000000
  %125 = select i1 %124, double %121, double 0xC1E0000000000000
  %126 = fptosi double %125 to i32
  %127 = select i1 %122, i32 0, i32 2147483647
  %128 = select i1 %123, i32 %127, i32 %126
  %129 = sext i32 %128 to i64
  %130 = srem i64 %129, 60
  %131 = trunc i64 %130 to i32
  call void @_ZNK2ui9Formatter6FormatENS0_8TwoUnitsEiiPN6icu_6913UnicodeStringE(%"class.ui::Formatter"* %27, i32 0, i32 %108, i32 %131, %"class.icu_69::UnicodeString"* nonnull %7) #6
  br label %285

132:                                              ; preds = %52
  %133 = icmp slt i32 %13, 24
  %134 = select i1 %133, %"class.base::TimeDelta"* @_ZZN2ui10TimeFormat24DetailedWithMonthAndYearENS0_6FormatENS0_6LengthEiRKN4base9TimeDeltaEbE9kHalfHour, %"class.base::TimeDelta"* @_ZZN2ui10TimeFormat24DetailedWithMonthAndYearENS0_6FormatENS0_6LengthEiRKN4base9TimeDeltaEbE11kHalfMinute
  %135 = getelementptr inbounds %"class.base::TimeDelta", %"class.base::TimeDelta"* %134, i64 0, i32 0
  %136 = load i64, i64* %135, align 8
  %137 = tail call i64 @_ZNK4base9TimeDeltamiES0_(%"class.base::TimeDelta"* nonnull @_ZZN2ui10TimeFormat24DetailedWithMonthAndYearENS0_6FormatENS0_6LengthEiRKN4base9TimeDeltaEbE4kDay, i64 %136)
  %138 = load i64, i64* %28, align 8
  %139 = icmp slt i64 %138, %137
  br i1 %139, label %140, label %208

140:                                              ; preds = %132
  %141 = zext i32 %13 to i64
  %142 = mul nuw nsw i64 %141, 3600000000
  %143 = add nsw i64 %142, -30000000
  %144 = icmp slt i64 %138, %143
  br i1 %144, label %167, label %145

145:                                              ; preds = %140
  %146 = tail call { i64, i1 } @llvm.sadd.with.overflow.i64(i64 %138, i64 1800000000) #6
  %147 = extractvalue { i64, i1 } %146, 1
  %148 = extractvalue { i64, i1 } %146, 0
  %149 = select i1 %147, i64 9223372036854775807, i64 %148, !prof !2
  %150 = sdiv i64 %149, 3600000000
  %151 = tail call i1 @llvm.is.constant.i64(i64 %150) #6
  br i1 %151, label %159, label %152

152:                                              ; preds = %145
  %153 = icmp slt i64 %149, -3599999999
  %154 = select i1 %153, i32 -2147483648, i32 2147483647
  %155 = add nsw i64 %150, 2147483648
  %156 = icmp ult i64 %155, 4294967296
  %157 = trunc i64 %150 to i32
  %158 = select i1 %156, i32 %157, i32 %154, !prof !3
  br label %165

159:                                              ; preds = %145
  %160 = icmp sgt i64 %149, 7730941132799999999
  br i1 %160, label %165, label %161

161:                                              ; preds = %159
  %162 = icmp sgt i64 %150, -2147483648
  %163 = select i1 %162, i64 %150, i64 -2147483648
  %164 = trunc i64 %163 to i32
  br label %165

165:                                              ; preds = %152, %159, %161
  %166 = phi i32 [ %158, %152 ], [ %164, %161 ], [ 2147483647, %159 ]
  call void @_ZNK2ui9Formatter6FormatENS0_4UnitEiPN6icu_6913UnicodeStringE(%"class.ui::Formatter"* %27, i32 2, i32 %166, %"class.icu_69::UnicodeString"* nonnull %7) #6
  br label %285

167:                                              ; preds = %140
  %168 = tail call { i64, i1 } @llvm.sadd.with.overflow.i64(i64 %138, i64 30000000) #6
  %169 = extractvalue { i64, i1 } %168, 1
  %170 = extractvalue { i64, i1 } %168, 0
  %171 = select i1 %169, i64 9223372036854775807, i64 %170, !prof !2
  %172 = sdiv i64 %171, 3600000000
  %173 = tail call i1 @llvm.is.constant.i64(i64 %172) #6
  br i1 %173, label %181, label %174

174:                                              ; preds = %167
  %175 = icmp slt i64 %171, -3599999999
  %176 = select i1 %175, i32 -2147483648, i32 2147483647
  %177 = add nsw i64 %172, 2147483648
  %178 = icmp ult i64 %177, 4294967296
  %179 = trunc i64 %172 to i32
  %180 = select i1 %178, i32 %179, i32 %176, !prof !3
  br label %187

181:                                              ; preds = %167
  %182 = icmp sgt i64 %171, 7730941132799999999
  br i1 %182, label %187, label %183

183:                                              ; preds = %181
  %184 = icmp sgt i64 %172, -2147483648
  %185 = select i1 %184, i64 %172, i64 -2147483648
  %186 = trunc i64 %185 to i32
  br label %187

187:                                              ; preds = %174, %181, %183
  %188 = phi i32 [ %180, %174 ], [ %186, %183 ], [ 2147483647, %181 ]
  %189 = sdiv i64 %171, 60000000
  %190 = tail call i1 @llvm.is.constant.i64(i64 %189) #6
  br i1 %190, label %197, label %191

191:                                              ; preds = %187
  %192 = icmp slt i64 %171, -59999999
  %193 = select i1 %192, i64 -2147483648, i64 2147483647
  %194 = add nsw i64 %189, 2147483648
  %195 = icmp ult i64 %194, 4294967296
  %196 = select i1 %195, i64 %189, i64 %193
  br label %202

197:                                              ; preds = %187
  %198 = icmp sgt i64 %171, 128849018879999999
  br i1 %198, label %202, label %199

199:                                              ; preds = %197
  %200 = icmp sgt i64 %189, -2147483648
  %201 = select i1 %200, i64 %189, i64 -2147483648
  br label %202

202:                                              ; preds = %191, %197, %199
  %203 = phi i64 [ %196, %191 ], [ %201, %199 ], [ 2147483647, %197 ]
  %204 = shl i64 %203, 32
  %205 = ashr exact i64 %204, 32
  %206 = srem i64 %205, 60
  %207 = trunc i64 %206 to i32
  call void @_ZNK2ui9Formatter6FormatENS0_8TwoUnitsEiiPN6icu_6913UnicodeStringE(%"class.ui::Formatter"* %27, i32 1, i32 %188, i32 %207, %"class.icu_69::UnicodeString"* nonnull %7) #6
  br label %285

208:                                              ; preds = %132
  %209 = xor i1 %5, true
  %210 = icmp slt i64 %138, 2628000000000
  %211 = or i1 %210, %209
  br i1 %211, label %212, label %263

212:                                              ; preds = %208
  %213 = zext i32 %13 to i64
  %214 = tail call { i64, i1 } @llvm.smul.with.overflow.i64(i64 %213, i64 86400000000) #6
  %215 = extractvalue { i64, i1 } %214, 1
  %216 = extractvalue { i64, i1 } %214, 0
  %217 = select i1 %215, i64 9223372036854775807, i64 %216
  %218 = tail call { i64, i1 } @llvm.sadd.with.overflow.i64(i64 %217, i64 -1800000000)
  %219 = extractvalue { i64, i1 } %218, 1
  %220 = extractvalue { i64, i1 } %218, 0
  %221 = select i1 %219, i64 -9223372036854775808, i64 %220, !prof !2
  %222 = icmp slt i64 %138, %221
  br i1 %222, label %231, label %223

223:                                              ; preds = %212
  %224 = bitcast %"class.base::TimeDelta"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %224) #6
  %225 = tail call { i64, i1 } @llvm.sadd.with.overflow.i64(i64 %138, i64 43200000000) #6
  %226 = extractvalue { i64, i1 } %225, 1
  %227 = extractvalue { i64, i1 } %225, 0
  %228 = select i1 %226, i64 9223372036854775807, i64 %227, !prof !2
  %229 = getelementptr inbounds %"class.base::TimeDelta", %"class.base::TimeDelta"* %8, i64 0, i32 0
  store i64 %228, i64* %229, align 8
  %230 = call i32 @_ZNK4base9TimeDelta6InDaysEv(%"class.base::TimeDelta"* nonnull %8) #6
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %224) #6
  call void @_ZNK2ui9Formatter6FormatENS0_4UnitEiPN6icu_6913UnicodeStringE(%"class.ui::Formatter"* %27, i32 3, i32 %230, %"class.icu_69::UnicodeString"* nonnull %7) #6
  br label %285

231:                                              ; preds = %212
  %232 = bitcast %"class.base::TimeDelta"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %232) #6
  %233 = tail call { i64, i1 } @llvm.sadd.with.overflow.i64(i64 %138, i64 1800000000) #6
  %234 = extractvalue { i64, i1 } %233, 1
  %235 = extractvalue { i64, i1 } %233, 0
  %236 = select i1 %234, i64 9223372036854775807, i64 %235, !prof !2
  %237 = getelementptr inbounds %"class.base::TimeDelta", %"class.base::TimeDelta"* %9, i64 0, i32 0
  store i64 %236, i64* %237, align 8
  %238 = call i32 @_ZNK4base9TimeDelta6InDaysEv(%"class.base::TimeDelta"* nonnull %9) #6
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %232) #6
  %239 = load i64, i64* %28, align 8
  %240 = call { i64, i1 } @llvm.sadd.with.overflow.i64(i64 %239, i64 1800000000) #6
  %241 = extractvalue { i64, i1 } %240, 1
  %242 = extractvalue { i64, i1 } %240, 0
  %243 = select i1 %241, i64 9223372036854775807, i64 %242, !prof !2
  %244 = sdiv i64 %243, 3600000000
  %245 = call i1 @llvm.is.constant.i64(i64 %244) #6
  br i1 %245, label %252, label %246

246:                                              ; preds = %231
  %247 = icmp slt i64 %243, -3599999999
  %248 = select i1 %247, i64 -2147483648, i64 2147483647
  %249 = add nsw i64 %244, 2147483648
  %250 = icmp ult i64 %249, 4294967296
  %251 = select i1 %250, i64 %244, i64 %248
  br label %257

252:                                              ; preds = %231
  %253 = icmp sgt i64 %243, 7730941132799999999
  br i1 %253, label %257, label %254

254:                                              ; preds = %252
  %255 = icmp sgt i64 %244, -2147483648
  %256 = select i1 %255, i64 %244, i64 -2147483648
  br label %257

257:                                              ; preds = %246, %252, %254
  %258 = phi i64 [ %251, %246 ], [ %256, %254 ], [ 2147483647, %252 ]
  %259 = shl i64 %258, 32
  %260 = ashr exact i64 %259, 32
  %261 = srem i64 %260, 24
  %262 = trunc i64 %261 to i32
  call void @_ZNK2ui9Formatter6FormatENS0_8TwoUnitsEiiPN6icu_6913UnicodeStringE(%"class.ui::Formatter"* %27, i32 2, i32 %238, i32 %262, %"class.icu_69::UnicodeString"* nonnull %7) #6
  br label %285

263:                                              ; preds = %208
  %264 = icmp slt i64 %138, 31536000000000
  br i1 %264, label %265, label %275

265:                                              ; preds = %263
  %266 = tail call double @_ZNK4base9TimeDeltadvES0_(%"class.base::TimeDelta"* %4, i64 2628000000000)
  %267 = tail call double @llvm.floor.f64(double %266) #6
  %268 = fcmp ult double %267, 0xC1E0000000000000
  %269 = fcmp ugt double %267, 0x41DFFFFFFFC00000
  %270 = fcmp ogt double %267, 0xC1E0000000000000
  %271 = select i1 %270, double %267, double 0xC1E0000000000000
  %272 = fptosi double %271 to i32
  %273 = select i1 %268, i32 0, i32 2147483647
  %274 = select i1 %269, i32 %273, i32 %272
  call void @_ZNK2ui9Formatter6FormatENS0_4UnitEiPN6icu_6913UnicodeStringE(%"class.ui::Formatter"* %27, i32 4, i32 %274, %"class.icu_69::UnicodeString"* nonnull %7) #6
  br label %285

275:                                              ; preds = %263
  %276 = tail call double @_ZNK4base9TimeDeltadvES0_(%"class.base::TimeDelta"* %4, i64 31536000000000)
  %277 = tail call double @llvm.floor.f64(double %276) #6
  %278 = fcmp ult double %277, 0xC1E0000000000000
  %279 = fcmp ugt double %277, 0x41DFFFFFFFC00000
  %280 = fcmp ogt double %277, 0xC1E0000000000000
  %281 = select i1 %280, double %277, double 0xC1E0000000000000
  %282 = fptosi double %281 to i32
  %283 = select i1 %278, i32 0, i32 2147483647
  %284 = select i1 %279, i32 %283, i32 %282
  call void @_ZNK2ui9Formatter6FormatENS0_4UnitEiPN6icu_6913UnicodeStringE(%"class.ui::Formatter"* %27, i32 5, i32 %284, %"class.icu_69::UnicodeString"* nonnull %7) #6
  br label %285

285:                                              ; preds = %114, %85, %257, %223, %275, %265, %165, %202, %37
  %286 = load i16, i16* %16, align 8
  %287 = icmp slt i16 %286, 0
  %288 = lshr i16 %286, 5
  %289 = zext i16 %288 to i32
  %290 = getelementptr inbounds %"class.icu_69::UnicodeString", %"class.icu_69::UnicodeString"* %7, i64 0, i32 1, i32 0, i32 1
  %291 = load i32, i32* %290, align 4
  %292 = select i1 %287, i32 %291, i32 %289
  %293 = add nsw i32 %292, 1
  %294 = bitcast %"class.std::__1::basic_string"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %294, i8 0, i64 24, i1 false) #6
  %295 = bitcast i32* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %295) #6
  store i32 0, i32* %10, align 4
  %296 = sext i32 %293 to i64
  %297 = call i16* @_ZN4base9WriteIntoEPNSt3__112basic_stringIDsNS0_11char_traitsIDsEENS0_9allocatorIDsEEEEm(%"class.std::__1::basic_string"* %0, i64 %296) #6
  %298 = getelementptr inbounds %"class.icu_69::Char16Ptr", %"class.icu_69::Char16Ptr"* %11, i64 0, i32 0
  store i16* %297, i16** %298, align 8
  %299 = call i32 @_ZNK6icu_6913UnicodeString7extractENS_9Char16PtrEiR10UErrorCode(%"class.icu_69::UnicodeString"* nonnull %7, %"class.icu_69::Char16Ptr"* nonnull %11, i32 %293, i32* nonnull dereferenceable(4) %10) #6
  %300 = load i16*, i16** %298, align 8
  call void asm sideeffect "", "rm,~{memory},~{dirflag},~{fpsr},~{flags}"(i16* %300) #6, !srcloc !4
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %295) #6
  call void @_ZN6icu_6913UnicodeStringD1Ev(%"class.icu_69::UnicodeString"* nonnull %7) #6
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %14) #6
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

declare %"class.ui::Formatter"* @_ZNK2ui18FormatterContainer3GetENS_10TimeFormat6FormatENS1_6LengthE(%"class.ui::FormatterContainer"*, i32, i32) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZNK4base9TimeDeltamiES0_(%"class.base::TimeDelta"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = add i64 %1, -9223372036854775807
  %7 = icmp ult i64 %6, 2
  br i1 %7, label %17, label %8

8:                                                ; preds = %2
  %9 = getelementptr inbounds %"class.base::TimeDelta", %"class.base::TimeDelta"* %0, i64 0, i32 0
  %10 = load i64, i64* %9, align 8
  %11 = icmp sgt i64 %1, -1
  %12 = select i1 %11, i64 -9223372036854775808, i64 9223372036854775807
  %13 = tail call { i64, i1 } @llvm.ssub.with.overflow.i64(i64 %10, i64 %1) #6
  %14 = extractvalue { i64, i1 } %13, 1
  %15 = extractvalue { i64, i1 } %13, 0
  %16 = select i1 %14, i64 %12, i64 %15, !prof !2
  ret i64 %16

17:                                               ; preds = %2
  %18 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %18) #6
  %19 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %19, align 8
  %20 = getelementptr inbounds %"class.base::TimeDelta", %"class.base::TimeDelta"* %0, i64 0, i32 0
  %21 = load i64, i64* %20, align 8
  %22 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %22)
  %23 = icmp eq i64 %21, %1
  br i1 %23, label %25, label %24

24:                                               ; preds = %17
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %22)
  store i8* null, i8** %19, align 8
  br label %34

25:                                               ; preds = %17
  %26 = tail call i8* @_ZN7logging15CheckOpValueStrEl(i64 %1) #6
  %27 = tail call i8* @_ZN7logging15CheckOpValueStrEl(i64 %1) #6
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str, i64 0, i64 0), i8* %26, i8* %27) #6
  %28 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %29 = load i8*, i8** %28, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %22)
  store i8* %29, i8** %19, align 8
  %30 = icmp eq i8* %29, null
  br i1 %30, label %34, label %31

31:                                               ; preds = %25
  %32 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %32) #6
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.1, i64 0, i64 0), i32 387, %"class.logging::CheckOpResult"* nonnull %4) #6
  %33 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #6
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #6
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %32) #6
  br label %34

34:                                               ; preds = %24, %25, %31
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18) #6
  %35 = icmp slt i64 %1, 0
  %36 = select i1 %35, i64 9223372036854775807, i64 -9223372036854775808
  ret i64 %36
}

declare void @_ZNK2ui9Formatter6FormatENS0_4UnitEiPN6icu_6913UnicodeStringE(%"class.ui::Formatter"*, i32, i32, %"class.icu_69::UnicodeString"*) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

declare void @_ZNK2ui9Formatter6FormatENS0_8TwoUnitsEiiPN6icu_6913UnicodeStringE(%"class.ui::Formatter"*, i32, i32, i32, %"class.icu_69::UnicodeString"*) local_unnamed_addr #2

declare i32 @_ZNK4base9TimeDelta6InDaysEv(%"class.base::TimeDelta"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden double @_ZNK4base9TimeDeltadvES0_(%"class.base::TimeDelta"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckError", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = getelementptr inbounds %"class.base::TimeDelta", %"class.base::TimeDelta"* %0, i64 0, i32 0
  %6 = load i64, i64* %5, align 8
  %7 = or i64 %6, %1
  %8 = icmp eq i64 %7, 0
  br i1 %8, label %9, label %13

9:                                                ; preds = %2
  %10 = bitcast %"class.logging::CheckError"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10) #6
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %3, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.1, i64 0, i64 0), i32 302, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.3, i64 0, i64 0)) #6
  %11 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %3) #6
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %3) #6
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10) #6
  %12 = load i64, i64* %5, align 8
  br label %13

13:                                               ; preds = %2, %9
  %14 = phi i64 [ %6, %2 ], [ %12, %9 ]
  %15 = add i64 %14, -9223372036854775807
  %16 = add i64 %1, -9223372036854775807
  %17 = or i64 %15, %16
  %18 = icmp ult i64 %17, 2
  br i1 %18, label %19, label %24

19:                                               ; preds = %13
  %20 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #6
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.1, i64 0, i64 0), i32 303, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.4, i64 0, i64 0)) #6
  %21 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #6
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #6
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #6
  %22 = load i64, i64* %5, align 8
  %23 = add i64 %22, -9223372036854775807
  br label %24

24:                                               ; preds = %13, %19
  %25 = phi i64 [ %15, %13 ], [ %23, %19 ]
  %26 = phi i64 [ %14, %13 ], [ %22, %19 ]
  %27 = icmp ult i64 %25, 2
  %28 = icmp slt i64 %26, 0
  %29 = select i1 %28, double 0xFFF0000000000000, double 0x7FF0000000000000
  %30 = sitofp i64 %26 to double
  %31 = select i1 %27, double %29, double %30
  %32 = icmp ult i64 %16, 2
  %33 = icmp slt i64 %1, 0
  %34 = select i1 %33, double 0xFFF0000000000000, double 0x7FF0000000000000
  %35 = sitofp i64 %1 to double
  %36 = select i1 %32, double %34, double %35
  %37 = fdiv double %31, %36
  ret double %37
}

declare i32 @_ZNK6icu_6913UnicodeString7extractENS_9Char16PtrEiR10UErrorCode(%"class.icu_69::UnicodeString"*, %"class.icu_69::Char16Ptr"*, i32, i32* dereferenceable(4)) local_unnamed_addr #2

declare i16* @_ZN4base9WriteIntoEPNSt3__112basic_stringIDsNS0_11char_traitsIDsEENS0_9allocatorIDsEEEEm(%"class.std::__1::basic_string"*, i64) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN6icu_6913UnicodeStringD1Ev(%"class.icu_69::UnicodeString"*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2ui10TimeFormat12RelativeDateERKN4base4TimeEPS3_(%"class.std::__1::basic_string"* noalias sret, %"class.base::Time"* nocapture readonly dereferenceable(8), %"class.base::Time"* readonly) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.base::Time", align 8
  %5 = icmp eq %"class.base::Time"* %2, null
  %6 = bitcast %"class.base::Time"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #6
  br i1 %5, label %10, label %7

7:                                                ; preds = %3
  %8 = getelementptr inbounds %"class.base::Time", %"class.base::Time"* %2, i64 0, i32 0, i32 0
  %9 = load i64, i64* %8, align 8
  br label %14

10:                                               ; preds = %3
  %11 = tail call i64 @_ZN4base4Time3NowEv() #6
  %12 = getelementptr inbounds %"class.base::Time", %"class.base::Time"* %4, i64 0, i32 0, i32 0
  store i64 %11, i64* %12, align 8
  %13 = call i64 @_ZNK4base4Time8MidnightEb(%"class.base::Time"* nonnull %4, i1 zeroext true) #6
  br label %14

14:                                               ; preds = %10, %7
  %15 = phi i64 [ %13, %10 ], [ %9, %7 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #6
  %16 = call { i64, i1 } @llvm.sadd.with.overflow.i64(i64 %15, i64 86400000000) #6
  %17 = extractvalue { i64, i1 } %16, 1
  %18 = extractvalue { i64, i1 } %16, 0
  %19 = select i1 %17, i64 9223372036854775807, i64 %18, !prof !2
  %20 = call { i64, i1 } @llvm.sadd.with.overflow.i64(i64 %15, i64 -86400000000)
  %21 = extractvalue { i64, i1 } %20, 1
  %22 = extractvalue { i64, i1 } %20, 0
  %23 = select i1 %21, i64 -9223372036854775808, i64 %22, !prof !2
  %24 = getelementptr inbounds %"class.base::Time", %"class.base::Time"* %1, i64 0, i32 0, i32 0
  %25 = load i64, i64* %24, align 8
  %26 = icmp slt i64 %25, %19
  br i1 %26, label %29, label %27

27:                                               ; preds = %14
  %28 = bitcast %"class.std::__1::basic_string"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %28, i8 0, i64 24, i1 false) #6
  br label %37

29:                                               ; preds = %14
  %30 = icmp slt i64 %25, %15
  br i1 %30, label %32, label %31

31:                                               ; preds = %29
  call void @_ZN9l10n_util14GetStringUTF16Ei(%"class.std::__1::basic_string"* sret %0, i32 28980) #6
  br label %37

32:                                               ; preds = %29
  %33 = icmp slt i64 %25, %23
  br i1 %33, label %35, label %34

34:                                               ; preds = %32
  call void @_ZN9l10n_util14GetStringUTF16Ei(%"class.std::__1::basic_string"* sret %0, i32 28981) #6
  br label %37

35:                                               ; preds = %32
  %36 = bitcast %"class.std::__1::basic_string"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %36, i8 0, i64 24, i1 false) #6
  br label %37

37:                                               ; preds = %34, %35, %31, %27
  ret void
}

declare i64 @_ZN4base4Time3NowEv() local_unnamed_addr #2

declare void @_ZN9l10n_util14GetStringUTF16Ei(%"class.std::__1::basic_string"* sret, i32) local_unnamed_addr #2

declare void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* sret, i8*, i32, %"class.logging::CheckOpResult"*) local_unnamed_addr #2

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #3

; Function Attrs: nounwind readnone speculatable
declare { i64, i1 } @llvm.ssub.with.overflow.i64(i64, i64) #4

; Function Attrs: nounwind readnone
declare i1 @llvm.is.constant.i64(i64) #5

declare i8* @_ZN7logging15CheckOpValueStrEl(i64) local_unnamed_addr #2

declare void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"*, i8*, i8*, i8*) unnamed_addr #2

; Function Attrs: nounwind readnone speculatable
declare { i64, i1 } @llvm.smul.with.overflow.i64(i64, i64) #4

declare void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* sret, i8*, i32, i8*) local_unnamed_addr #2

; Function Attrs: nounwind readnone speculatable
declare { i64, i1 } @llvm.sadd.with.overflow.i64(i64, i64) #4

declare i64 @_ZNK4base4Time8MidnightEb(%"class.base::Time"*, i1 zeroext) local_unnamed_addr #2

declare zeroext i1 @_ZN4base8internal17NeedsLazyInstanceEPl(i64*) local_unnamed_addr #2

declare void @_ZN4base8internal20CompleteLazyInstanceEPllPFvPvES2_(i64*, i64, void (i8*)*, i8*) local_unnamed_addr #2

declare void @_ZN2ui18FormatterContainerC1Ev(%"class.ui::FormatterContainer"*) unnamed_addr #2

; Function Attrs: nounwind readnone speculatable
declare double @llvm.floor.f64(double) #4

; Function Attrs: nounwind readnone speculatable
declare double @llvm.ceil.f64(double) #4

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind readnone speculatable }
attributes #5 = { nounwind readnone }
attributes #6 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!"branch_weights", i32 1, i32 2000}
!3 = !{!"branch_weights", i32 2000, i32 1}
!4 = !{i32 -2139692213}
