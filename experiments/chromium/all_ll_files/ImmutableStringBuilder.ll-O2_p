; ModuleID = '../../third_party/angle/src/compiler/translator/ImmutableStringBuilder.cpp'
source_filename = "../../third_party/angle/src/compiler/translator/ImmutableStringBuilder.cpp"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.sh::ImmutableStringBuilder" = type { i64, i64, i8* }
%"class.sh::ImmutableString" = type { i8*, i64 }

@.str = private unnamed_addr constant [3 x i8] c"%d\00", align 1
@.str.1 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1

; Function Attrs: nounwind ssp uwtable
define hidden dereferenceable(24) %"class.sh::ImmutableStringBuilder"* @_ZN2sh22ImmutableStringBuilderlsERKNS_15ImmutableStringE(%"class.sh::ImmutableStringBuilder"* returned, %"class.sh::ImmutableString"* nocapture readonly dereferenceable(16)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.sh::ImmutableStringBuilder", %"class.sh::ImmutableStringBuilder"* %0, i64 0, i32 2
  %4 = load i8*, i8** %3, align 8
  %5 = getelementptr inbounds %"class.sh::ImmutableStringBuilder", %"class.sh::ImmutableStringBuilder"* %0, i64 0, i32 0
  %6 = load i64, i64* %5, align 8
  %7 = getelementptr inbounds i8, i8* %4, i64 %6
  %8 = getelementptr inbounds %"class.sh::ImmutableString", %"class.sh::ImmutableString"* %1, i64 0, i32 0
  %9 = load i8*, i8** %8, align 8
  %10 = icmp eq i8* %9, null
  %11 = select i1 %10, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i8* %9
  %12 = getelementptr inbounds %"class.sh::ImmutableString", %"class.sh::ImmutableString"* %1, i64 0, i32 1
  %13 = load i64, i64* %12, align 8
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %7, i8* align 1 %11, i64 %13, i1 false)
  %14 = load i64, i64* %12, align 8
  %15 = load i64, i64* %5, align 8
  %16 = add i64 %15, %14
  store i64 %16, i64* %5, align 8
  ret %"class.sh::ImmutableStringBuilder"* %0
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

; Function Attrs: nounwind ssp uwtable
define hidden dereferenceable(24) %"class.sh::ImmutableStringBuilder"* @_ZN2sh22ImmutableStringBuilderlsEPKc(%"class.sh::ImmutableStringBuilder"* returned, i8* nocapture readonly) local_unnamed_addr #0 align 2 {
  %3 = tail call i64 @strlen(i8* %1) #6
  %4 = getelementptr inbounds %"class.sh::ImmutableStringBuilder", %"class.sh::ImmutableStringBuilder"* %0, i64 0, i32 2
  %5 = load i8*, i8** %4, align 8
  %6 = getelementptr inbounds %"class.sh::ImmutableStringBuilder", %"class.sh::ImmutableStringBuilder"* %0, i64 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = getelementptr inbounds i8, i8* %5, i64 %7
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %8, i8* align 1 %1, i64 %3, i1 false)
  %9 = load i64, i64* %6, align 8
  %10 = add i64 %9, %3
  store i64 %10, i64* %6, align 8
  ret %"class.sh::ImmutableStringBuilder"* %0
}

; Function Attrs: argmemonly nofree nounwind readonly
declare i64 @strlen(i8* nocapture) local_unnamed_addr #2

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden dereferenceable(24) %"class.sh::ImmutableStringBuilder"* @_ZN2sh22ImmutableStringBuilderlsERKc(%"class.sh::ImmutableStringBuilder"* returned, i8* nocapture readonly dereferenceable(1)) local_unnamed_addr #3 align 2 {
  %3 = load i8, i8* %1, align 1
  %4 = getelementptr inbounds %"class.sh::ImmutableStringBuilder", %"class.sh::ImmutableStringBuilder"* %0, i64 0, i32 2
  %5 = load i8*, i8** %4, align 8
  %6 = getelementptr inbounds %"class.sh::ImmutableStringBuilder", %"class.sh::ImmutableStringBuilder"* %0, i64 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = add i64 %7, 1
  store i64 %8, i64* %6, align 8
  %9 = getelementptr inbounds i8, i8* %5, i64 %7
  store i8 %3, i8* %9, align 1
  ret %"class.sh::ImmutableStringBuilder"* %0
}

; Function Attrs: nofree nounwind ssp uwtable
define hidden void @_ZN2sh22ImmutableStringBuilder13appendDecimalERKj(%"class.sh::ImmutableStringBuilder"* nocapture, i32* nocapture readonly dereferenceable(4)) local_unnamed_addr #4 align 2 {
  %3 = getelementptr inbounds %"class.sh::ImmutableStringBuilder", %"class.sh::ImmutableStringBuilder"* %0, i64 0, i32 2
  %4 = load i8*, i8** %3, align 8
  %5 = getelementptr inbounds %"class.sh::ImmutableStringBuilder", %"class.sh::ImmutableStringBuilder"* %0, i64 0, i32 0
  %6 = load i64, i64* %5, align 8
  %7 = getelementptr inbounds i8, i8* %4, i64 %6
  %8 = getelementptr inbounds %"class.sh::ImmutableStringBuilder", %"class.sh::ImmutableStringBuilder"* %0, i64 0, i32 1
  %9 = load i64, i64* %8, align 8
  %10 = sub i64 %9, %6
  %11 = load i32, i32* %1, align 4
  %12 = tail call i32 (i8*, i64, i8*, ...) @snprintf(i8* %7, i64 %10, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i64 0, i64 0), i32 %11) #7
  %13 = sext i32 %12 to i64
  %14 = load i64, i64* %5, align 8
  %15 = add i64 %14, %13
  store i64 %15, i64* %5, align 8
  ret void
}

; Function Attrs: nofree nounwind
declare i32 @snprintf(i8* nocapture, i64, i8* nocapture readonly, ...) local_unnamed_addr #5

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden { i8*, i64 } @_ZN2sh22ImmutableStringBuildercvNS_15ImmutableStringEEv(%"class.sh::ImmutableStringBuilder"* nocapture readonly) local_unnamed_addr #3 align 2 {
  %2 = getelementptr inbounds %"class.sh::ImmutableStringBuilder", %"class.sh::ImmutableStringBuilder"* %0, i64 0, i32 2
  %3 = load i8*, i8** %2, align 8
  %4 = getelementptr inbounds %"class.sh::ImmutableStringBuilder", %"class.sh::ImmutableStringBuilder"* %0, i64 0, i32 0
  %5 = load i64, i64* %4, align 8
  %6 = getelementptr inbounds i8, i8* %3, i64 %5
  store i8 0, i8* %6, align 1
  %7 = load i8*, i8** %2, align 8
  %8 = load i64, i64* %4, align 8
  %9 = insertvalue { i8*, i64 } undef, i8* %7, 0
  %10 = insertvalue { i8*, i64 } %9, i64 %8, 1
  ret { i8*, i64 } %10
}

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { argmemonly nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nofree norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nofree nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nounwind readonly }
attributes #7 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
