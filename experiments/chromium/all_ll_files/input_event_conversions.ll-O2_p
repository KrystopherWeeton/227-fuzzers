; ModuleID = '../../pdf/ppapi_migration/input_event_conversions.cc'
source_filename = "../../pdf/ppapi_migration/input_event_conversions.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.blink::WebInputEvent" = type { i32 (...)**, float, %"class.gfx::Vector2dF", %"class.base::TimeTicks", i32, i32 }
%"class.gfx::Vector2dF" = type { float, float }
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.pp::InputEvent" = type { %"class.pp::Resource.base", [4 x i8] }
%"class.pp::Resource.base" = type <{ i32 (...)**, i32 }>
%"class.pp::TouchPoint" = type { %struct.PP_TouchPoint, %struct.PP_FloatPoint }
%struct.PP_TouchPoint = type { i32, %struct.PP_FloatPoint, %struct.PP_FloatPoint, float, float }
%struct.PP_FloatPoint = type { float, float }
%"class.std::__1::basic_string.22" = type { %"class.std::__1::__compressed_pair.23" }
%"class.std::__1::__compressed_pair.23" = type { %"struct.std::__1::__compressed_pair_elem.24" }
%"struct.std::__1::__compressed_pair_elem.24" = type { %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__rep" }
%"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__rep" = type { %union.anon.25 }
%union.anon.25 = type { %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__long" }
%"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__long" = type { i16*, i64, i64 }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.19" }
%"class.std::__1::__compressed_pair.19" = type { %"struct.std::__1::__compressed_pair_elem.20" }
%"struct.std::__1::__compressed_pair_elem.20" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.pp::Var" = type <{ i32 (...)**, %struct.PP_Var, i8, [7 x i8] }>
%struct.PP_Var = type { i32, i32, %union.PP_VarValue }
%union.PP_VarValue = type { double }
%"class.pp::Point" = type { %struct.PP_Point }
%struct.PP_Point = type { i32, i32 }
%"class.pp::MouseInputEvent" = type { %"class.pp::InputEvent.base", [4 x i8] }
%"class.pp::InputEvent.base" = type { %"class.pp::Resource.base" }
%"class.pp::KeyboardInputEvent" = type { %"class.pp::InputEvent.base", [4 x i8] }
%"class.pp::TouchInputEvent" = type { %"class.pp::InputEvent.base", [4 x i8] }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }
%"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short" = type { [11 x i16], %struct.anon.26 }
%struct.anon.26 = type { %"struct.std::__1::__padding.27", i8 }
%"struct.std::__1::__padding.27" = type { [1 x i8] }
%"class.blink::WebTouchEvent" = type { %"class.blink::WebInputEvent", i32, [16 x %"class.blink::WebTouchPoint"], i32, i8, i8, i8, i32 }
%"class.blink::WebTouchPoint" = type { %"class.blink::WebPointerProperties", i32, float, float, float }
%"class.blink::WebPointerProperties" = type { i32, float, i32, i32, float, i32, i32, i32, i32, i32, i8, %"class.gfx::PointF", %"class.gfx::PointF" }
%"class.gfx::PointF" = type { float, float }

$_ZN5blink13WebTouchEventC2ENS_5mojom9EventTypeEiN4base9TimeTicksE = comdat any

@_ZTVN5blink13WebMouseEventE = external unnamed_addr constant { [8 x i8*] }, align 8
@_ZTVN5blink16WebKeyboardEventE = external unnamed_addr constant { [8 x i8*] }, align 8
@_ZTVN5blink13WebTouchEventE = external unnamed_addr constant { [8 x i8*] }, align 8
@switch.table._ZN10chrome_pdf16GetWebInputEventERKN2pp10InputEventE.3 = private unnamed_addr constant [19 x i32] [i32 0, i32 1, i32 2, i32 3, i32 4, i32 6, i32 7, i32 7, i32 9, i32 10, i32 5, i32 -1, i32 -1, i32 -1, i32 -1, i32 28, i32 29, i32 30, i32 31], align 4

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::WebInputEvent"* @_ZN10chrome_pdf16GetWebInputEventERKN2pp10InputEventE(%"class.pp::InputEvent"* dereferenceable(16)) local_unnamed_addr #0 {
  %2 = alloca <2 x float>, align 8
  %3 = alloca %"class.pp::TouchPoint", align 4
  %4 = alloca %"class.std::__1::basic_string.22", align 8
  %5 = alloca %"class.std::__1::basic_string", align 8
  %6 = alloca %"class.pp::Var", align 8
  %7 = alloca %"class.pp::Point", align 4
  %8 = alloca %"class.pp::MouseInputEvent", align 8
  %9 = alloca %"class.pp::KeyboardInputEvent", align 8
  %10 = alloca %"class.pp::TouchInputEvent", align 8
  %11 = tail call i32 @_ZNK2pp10InputEvent7GetTypeEv(%"class.pp::InputEvent"* %0) #7
  switch i32 %11, label %222 [
    i32 0, label %12
    i32 1, label %12
    i32 2, label %12
    i32 3, label %12
    i32 4, label %12
    i32 18, label %170
    i32 6, label %74
    i32 7, label %74
    i32 8, label %74
    i32 9, label %74
    i32 17, label %170
    i32 15, label %170
    i32 16, label %170
  ]

12:                                               ; preds = %1, %1, %1, %1, %1
  %13 = bitcast %"class.pp::MouseInputEvent"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %13) #7
  call void @_ZN2pp15MouseInputEventC1ERKNS_10InputEventE(%"class.pp::MouseInputEvent"* nonnull %8, %"class.pp::InputEvent"* dereferenceable(16) %0) #7
  %14 = bitcast %"class.pp::MouseInputEvent"* %8 to %"class.pp::InputEvent"*
  %15 = call i32 @_ZNK2pp10InputEvent7GetTypeEv(%"class.pp::InputEvent"* nonnull %14) #7
  %16 = icmp ult i32 %15, 19
  br i1 %16, label %17, label %21

17:                                               ; preds = %12
  %18 = sext i32 %15 to i64
  %19 = getelementptr inbounds [19 x i32], [19 x i32]* @switch.table._ZN10chrome_pdf16GetWebInputEventERKN2pp10InputEventE.3, i64 0, i64 %18
  %20 = load i32, i32* %19, align 4
  br label %21

21:                                               ; preds = %12, %17
  %22 = phi i32 [ %20, %17 ], [ -1, %12 ]
  %23 = call i32 @_ZNK2pp10InputEvent12GetModifiersEv(%"class.pp::InputEvent"* nonnull %14) #7
  %24 = call double @_ZNK2pp10InputEvent12GetTimeStampEv(%"class.pp::InputEvent"* nonnull %14) #7
  %25 = fmul double %24, 1.000000e+06
  %26 = fcmp ult double %25, 0xC3E0000000000000
  %27 = fcmp ugt double %25, 0x43DFFFFFFFFFFFFF
  %28 = fcmp ogt double %25, 0xC3E0000000000000
  %29 = select i1 %28, double %25, double 0xC3E0000000000000
  %30 = fptosi double %29 to i64
  %31 = select i1 %26, i64 0, i64 9223372036854775807
  %32 = select i1 %27, i64 %31, i64 %30
  %33 = call i8* @_Znwm(i64 112) #8
  %34 = bitcast i8* %33 to i32 (...)***
  %35 = getelementptr inbounds i8, i8* %33, i64 8
  %36 = bitcast i8* %35 to float*
  store float 1.000000e+00, float* %36, align 8
  %37 = getelementptr inbounds i8, i8* %33, i64 12
  %38 = bitcast i8* %37 to float*
  store float 0.000000e+00, float* %38, align 4
  %39 = getelementptr inbounds i8, i8* %33, i64 16
  %40 = bitcast i8* %39 to float*
  store float 0.000000e+00, float* %40, align 4
  %41 = getelementptr inbounds i8, i8* %33, i64 24
  %42 = bitcast i8* %41 to i64*
  store i64 %32, i64* %42, align 8
  %43 = getelementptr inbounds i8, i8* %33, i64 32
  %44 = bitcast i8* %43 to i32*
  store i32 %22, i32* %44, align 8
  %45 = getelementptr inbounds i8, i8* %33, i64 36
  %46 = bitcast i8* %45 to i32*
  store i32 %23, i32* %46, align 4
  %47 = getelementptr inbounds i8, i8* %33, i64 40
  %48 = bitcast i8* %47 to i32*
  store i32 2147483647, i32* %48, align 4
  %49 = getelementptr inbounds i8, i8* %33, i64 44
  %50 = bitcast i8* %49 to float*
  store float 0x7FF8000000000000, float* %50, align 4
  %51 = getelementptr inbounds i8, i8* %33, i64 48
  %52 = getelementptr inbounds i8, i8* %33, i64 64
  %53 = bitcast i8* %52 to i32*
  call void @llvm.memset.p0i8.i64(i8* align 4 %51, i8 0, i64 16, i1 false) #7
  store i32 -1, i32* %53, align 4
  %54 = getelementptr inbounds i8, i8* %33, i64 68
  %55 = getelementptr inbounds i8, i8* %33, i64 84
  call void @llvm.memset.p0i8.i64(i8* align 4 %54, i8 0, i64 13, i1 false) #7
  call void @llvm.memset.p0i8.i64(i8* align 4 %55, i8 0, i64 16, i1 false) #7
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [8 x i8*] }, { [8 x i8*] }* @_ZTVN5blink13WebMouseEventE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %34, align 8
  %56 = getelementptr inbounds i8, i8* %33, i64 100
  %57 = bitcast i8* %56 to i32*
  store i32 0, i32* %57, align 4
  %58 = getelementptr inbounds i8, i8* %33, i64 104
  %59 = bitcast i8* %58 to i32*
  store i32 0, i32* %59, align 8
  %60 = call i32 @_ZNK2pp15MouseInputEvent9GetButtonEv(%"class.pp::MouseInputEvent"* nonnull %8) #7
  %61 = icmp ult i32 %60, 3
  %62 = select i1 %61, i32 %60, i32 -1
  store i32 %62, i32* %53, align 8
  %63 = call i32 @_ZNK2pp15MouseInputEvent13GetClickCountEv(%"class.pp::MouseInputEvent"* nonnull %8) #7
  store i32 %63, i32* %57, align 4
  %64 = bitcast %"class.pp::Point"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %64) #7
  call void @_ZNK2pp15MouseInputEvent11GetPositionEv(%"class.pp::Point"* nonnull sret %7, %"class.pp::MouseInputEvent"* nonnull %8) #7
  %65 = getelementptr inbounds %"class.pp::Point", %"class.pp::Point"* %7, i64 0, i32 0, i32 0
  %66 = load i32, i32* %65, align 4
  %67 = sitofp i32 %66 to float
  %68 = getelementptr inbounds %"class.pp::Point", %"class.pp::Point"* %7, i64 0, i32 0, i32 1
  %69 = load i32, i32* %68, align 4
  %70 = sitofp i32 %69 to float
  %71 = bitcast i8* %55 to float*
  store float %67, float* %71, align 4
  %72 = getelementptr inbounds i8, i8* %33, i64 88
  %73 = bitcast i8* %72 to float*
  store float %70, float* %73, align 4
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %64) #7
  br label %217

74:                                               ; preds = %1, %1, %1, %1
  %75 = bitcast %"class.pp::KeyboardInputEvent"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %75) #7
  call void @_ZN2pp18KeyboardInputEventC1ERKNS_10InputEventE(%"class.pp::KeyboardInputEvent"* nonnull %9, %"class.pp::InputEvent"* dereferenceable(16) %0) #7
  %76 = bitcast %"class.pp::KeyboardInputEvent"* %9 to %"class.pp::InputEvent"*
  %77 = call i32 @_ZNK2pp10InputEvent7GetTypeEv(%"class.pp::InputEvent"* nonnull %76) #7
  %78 = icmp ult i32 %77, 19
  br i1 %78, label %79, label %83

79:                                               ; preds = %74
  %80 = sext i32 %77 to i64
  %81 = getelementptr inbounds [19 x i32], [19 x i32]* @switch.table._ZN10chrome_pdf16GetWebInputEventERKN2pp10InputEventE.3, i64 0, i64 %80
  %82 = load i32, i32* %81, align 4
  br label %83

83:                                               ; preds = %74, %79
  %84 = phi i32 [ %82, %79 ], [ -1, %74 ]
  %85 = call i32 @_ZNK2pp10InputEvent12GetModifiersEv(%"class.pp::InputEvent"* nonnull %76) #7
  %86 = call double @_ZNK2pp10InputEvent12GetTimeStampEv(%"class.pp::InputEvent"* nonnull %76) #7
  %87 = fmul double %86, 1.000000e+06
  %88 = fcmp ult double %87, 0xC3E0000000000000
  %89 = fcmp ugt double %87, 0x43DFFFFFFFFFFFFF
  %90 = fcmp ogt double %87, 0xC3E0000000000000
  %91 = select i1 %90, double %87, double 0xC3E0000000000000
  %92 = fptosi double %91 to i64
  %93 = select i1 %88, i64 0, i64 9223372036854775807
  %94 = select i1 %89, i64 %93, i64 %92
  %95 = call i8* @_Znwm(i64 80) #8
  %96 = bitcast i8* %95 to i32 (...)***
  %97 = getelementptr inbounds i8, i8* %95, i64 8
  %98 = bitcast i8* %97 to float*
  store float 1.000000e+00, float* %98, align 8
  %99 = getelementptr inbounds i8, i8* %95, i64 12
  %100 = bitcast i8* %99 to float*
  store float 0.000000e+00, float* %100, align 4
  %101 = getelementptr inbounds i8, i8* %95, i64 16
  %102 = bitcast i8* %101 to float*
  store float 0.000000e+00, float* %102, align 4
  %103 = getelementptr inbounds i8, i8* %95, i64 24
  %104 = bitcast i8* %103 to i64*
  store i64 %94, i64* %104, align 8
  %105 = getelementptr inbounds i8, i8* %95, i64 32
  %106 = bitcast i8* %105 to i32*
  store i32 %84, i32* %106, align 8
  %107 = getelementptr inbounds i8, i8* %95, i64 36
  %108 = bitcast i8* %107 to i32*
  store i32 %85, i32* %108, align 4
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [8 x i8*] }, { [8 x i8*] }* @_ZTVN5blink16WebKeyboardEventE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %96, align 8
  %109 = getelementptr inbounds i8, i8* %95, i64 40
  call void @llvm.memset.p0i8.i64(i8* align 8 %109, i8 0, i64 34, i1 false) #7
  %110 = call i32 @_ZNK2pp18KeyboardInputEvent10GetKeyCodeEv(%"class.pp::KeyboardInputEvent"* nonnull %9) #7
  %111 = bitcast i8* %109 to i32*
  store i32 %110, i32* %111, align 8
  %112 = bitcast %"class.std::__1::basic_string.22"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %112) #7
  %113 = getelementptr inbounds %"class.std::__1::basic_string.22", %"class.std::__1::basic_string.22"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %114 = getelementptr inbounds %"class.std::__1::basic_string.22", %"class.std::__1::basic_string.22"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %115 = bitcast %"class.std::__1::basic_string"* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %112, i8 -86, i64 24, i1 false) #7
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %115) #7
  %116 = bitcast %"class.pp::Var"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %116) #7
  call void @_ZNK2pp18KeyboardInputEvent16GetCharacterTextEv(%"class.pp::Var"* nonnull sret %6, %"class.pp::KeyboardInputEvent"* nonnull %9) #7
  call void @_ZNK2pp3Var8AsStringEv(%"class.std::__1::basic_string"* nonnull sret %5, %"class.pp::Var"* nonnull %6) #7
  %117 = bitcast %"class.std::__1::basic_string"* %5 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %118 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %117, i64 0, i32 1, i32 0
  %119 = load i8, i8* %118, align 1
  %120 = icmp slt i8 %119, 0
  %121 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %122 = load i8*, i8** %121, align 8
  %123 = select i1 %120, i8* %122, i8* %115
  %124 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %125 = load i64, i64* %124, align 8
  %126 = zext i8 %119 to i64
  %127 = select i1 %120, i64 %125, i64 %126
  call void @_ZN4base11UTF8ToUTF16ENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.std::__1::basic_string.22"* nonnull sret %4, i8* %123, i64 %127) #7
  %128 = load i8, i8* %118, align 1
  %129 = icmp slt i8 %128, 0
  br i1 %129, label %130, label %132

130:                                              ; preds = %83
  %131 = load i8*, i8** %121, align 8
  call void @_ZdlPv(i8* %131) #8
  br label %132

132:                                              ; preds = %130, %83
  call void @_ZN2pp3VarD1Ev(%"class.pp::Var"* nonnull %6) #7
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %116) #7
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %115) #7
  %133 = bitcast %"class.std::__1::basic_string.22"* %4 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %134 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %133, i64 0, i32 1, i32 1
  %135 = load i8, i8* %134, align 1
  %136 = icmp slt i8 %135, 0
  br i1 %136, label %137, label %141

137:                                              ; preds = %132
  %138 = load i64, i64* %114, align 8
  %139 = icmp ult i64 %138, 4
  %140 = load i16*, i16** %113, align 8
  br i1 %139, label %145, label %149

141:                                              ; preds = %132
  %142 = zext i8 %135 to i64
  %143 = icmp ult i8 %135, 4
  %144 = bitcast %"class.std::__1::basic_string.22"* %4 to i16*
  br i1 %143, label %145, label %149

145:                                              ; preds = %141, %137
  %146 = phi i64 [ %138, %137 ], [ %142, %141 ]
  %147 = phi i16* [ %140, %137 ], [ %144, %141 ]
  %148 = icmp eq i64 %146, 0
  br i1 %148, label %160, label %155

149:                                              ; preds = %141, %137
  %150 = phi i16* [ %144, %141 ], [ %140, %137 ]
  %151 = getelementptr inbounds i8, i8* %95, i64 58
  %152 = bitcast i16* %150 to i64*
  %153 = bitcast i8* %151 to i64*
  %154 = load i64, i64* %152, align 2
  store i64 %154, i64* %153, align 2
  br label %165

155:                                              ; preds = %145
  %156 = shl i64 %146, 1
  %157 = getelementptr inbounds i8, i8* %95, i64 58
  %158 = bitcast i16* %147 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 2 %157, i8* align 2 %158, i64 %156, i1 false) #7
  %159 = icmp eq i64 %146, 4
  br i1 %159, label %165, label %160

160:                                              ; preds = %145, %155
  %161 = phi i64 [ %156, %155 ], [ 0, %145 ]
  %162 = add nuw nsw i64 %161, 58
  %163 = getelementptr i8, i8* %95, i64 %162
  %164 = sub nsw i64 8, %161
  call void @llvm.memset.p0i8.i64(i8* align 2 %163, i8 0, i64 %164, i1 false) #7
  br label %165

165:                                              ; preds = %160, %155, %149
  br i1 %136, label %166, label %169

166:                                              ; preds = %165
  %167 = bitcast %"class.std::__1::basic_string.22"* %4 to i8**
  %168 = load i8*, i8** %167, align 8
  call void @_ZdlPv(i8* %168) #8
  br label %169

169:                                              ; preds = %166, %165
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %112) #7
  br label %217

170:                                              ; preds = %1, %1, %1, %1
  %171 = bitcast %"class.pp::TouchInputEvent"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %171) #7
  call void @_ZN2pp15TouchInputEventC1ERKNS_10InputEventE(%"class.pp::TouchInputEvent"* nonnull %10, %"class.pp::InputEvent"* dereferenceable(16) %0) #7
  %172 = bitcast <2 x float>* %2 to %struct.PP_FloatPoint*
  %173 = bitcast %"class.pp::TouchInputEvent"* %10 to %"class.pp::InputEvent"*
  %174 = call i32 @_ZNK2pp10InputEvent7GetTypeEv(%"class.pp::InputEvent"* nonnull %173) #7
  %175 = icmp ult i32 %174, 19
  br i1 %175, label %176, label %180

176:                                              ; preds = %170
  %177 = sext i32 %174 to i64
  %178 = getelementptr inbounds [19 x i32], [19 x i32]* @switch.table._ZN10chrome_pdf16GetWebInputEventERKN2pp10InputEventE.3, i64 0, i64 %177
  %179 = load i32, i32* %178, align 4
  br label %180

180:                                              ; preds = %170, %176
  %181 = phi i32 [ %179, %176 ], [ -1, %170 ]
  %182 = call i32 @_ZNK2pp10InputEvent12GetModifiersEv(%"class.pp::InputEvent"* nonnull %173) #7
  %183 = call double @_ZNK2pp10InputEvent12GetTimeStampEv(%"class.pp::InputEvent"* nonnull %173) #7
  %184 = fmul double %183, 1.000000e+06
  %185 = fcmp ult double %184, 0xC3E0000000000000
  %186 = fcmp ugt double %184, 0x43DFFFFFFFFFFFFF
  %187 = fcmp ogt double %184, 0xC3E0000000000000
  %188 = select i1 %187, double %184, double 0xC3E0000000000000
  %189 = fptosi double %188 to i64
  %190 = select i1 %185, i64 0, i64 9223372036854775807
  %191 = select i1 %186, i64 %190, i64 %189
  %192 = call i8* @_Znwm(i64 1272) #8
  %193 = bitcast i8* %192 to %"class.blink::WebTouchEvent"*
  call void @_ZN5blink13WebTouchEventC2ENS_5mojom9EventTypeEiN4base9TimeTicksE(%"class.blink::WebTouchEvent"* nonnull %193, i32 %181, i32 %182, i64 %191) #7
  %194 = call i32 @_ZNK2pp15TouchInputEvent13GetTouchCountE16PP_TouchListType(%"class.pp::TouchInputEvent"* nonnull %10, i32 2) #7
  %195 = icmp ult i32 %194, 16
  %196 = select i1 %195, i32 %194, i32 16
  %197 = getelementptr inbounds i8, i8* %192, i64 40
  %198 = bitcast i8* %197 to i32*
  store i32 %196, i32* %198, align 8
  %199 = icmp eq i32 %196, 0
  br i1 %199, label %217, label %200

200:                                              ; preds = %180
  %201 = bitcast <2 x float>* %2 to i8*
  %202 = bitcast %"class.pp::TouchPoint"* %3 to i8*
  %203 = getelementptr inbounds %"class.pp::TouchPoint", %"class.pp::TouchPoint"* %3, i64 0, i32 0, i32 1, i32 0
  %204 = bitcast float* %203 to i64*
  %205 = bitcast <2 x float>* %2 to i64*
  br label %206

206:                                              ; preds = %206, %200
  %207 = phi i64 [ 0, %200 ], [ %213, %206 ]
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %201) #7
  call void @llvm.lifetime.start.p0i8(i64 36, i8* nonnull %202) #7
  %208 = trunc i64 %207 to i32
  call void @_ZNK2pp15TouchInputEvent15GetTouchByIndexE16PP_TouchListTypej(%"class.pp::TouchPoint"* nonnull sret %3, %"class.pp::TouchInputEvent"* nonnull %10, i32 2, i32 %208) #7
  %209 = load i64, i64* %204, align 4, !noalias !2
  store i64 %209, i64* %205, align 8
  %210 = call <2 x float> @_ZN10chrome_pdf22PointFFromPPFloatPointERK13PP_FloatPoint(%struct.PP_FloatPoint* nonnull dereferenceable(8) %172) #7
  %211 = getelementptr inbounds %"class.blink::WebTouchEvent", %"class.blink::WebTouchEvent"* %193, i64 0, i32 2, i64 %207, i32 0, i32 11
  %212 = bitcast %"class.gfx::PointF"* %211 to <2 x float>*
  store <2 x float> %210, <2 x float>* %212, align 4
  call void @llvm.lifetime.end.p0i8(i64 36, i8* nonnull %202) #7
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %201) #7
  %213 = add nuw nsw i64 %207, 1
  %214 = load i32, i32* %198, align 8
  %215 = zext i32 %214 to i64
  %216 = icmp ult i64 %213, %215
  br i1 %216, label %206, label %217

217:                                              ; preds = %206, %180, %21, %169
  %218 = phi i8* [ %95, %169 ], [ %33, %21 ], [ %192, %180 ], [ %192, %206 ]
  %219 = phi %"class.pp::InputEvent"* [ %76, %169 ], [ %14, %21 ], [ %173, %180 ], [ %173, %206 ]
  %220 = phi i8* [ %75, %169 ], [ %13, %21 ], [ %171, %180 ], [ %171, %206 ]
  call void @_ZN2pp10InputEventD2Ev(%"class.pp::InputEvent"* nonnull %219) #7
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %220) #7
  %221 = bitcast i8* %218 to %"class.blink::WebInputEvent"*
  br label %222

222:                                              ; preds = %217, %1
  %223 = phi %"class.blink::WebInputEvent"* [ null, %1 ], [ %221, %217 ]
  ret %"class.blink::WebInputEvent"* %223
}

declare i32 @_ZNK2pp10InputEvent7GetTypeEv(%"class.pp::InputEvent"*) local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

declare void @_ZN2pp15MouseInputEventC1ERKNS_10InputEventE(%"class.pp::MouseInputEvent"*, %"class.pp::InputEvent"* dereferenceable(16)) unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN2pp10InputEventD2Ev(%"class.pp::InputEvent"*) unnamed_addr #3

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

declare void @_ZN2pp18KeyboardInputEventC1ERKNS_10InputEventE(%"class.pp::KeyboardInputEvent"*, %"class.pp::InputEvent"* dereferenceable(16)) unnamed_addr #1

declare void @_ZN2pp15TouchInputEventC1ERKNS_10InputEventE(%"class.pp::TouchInputEvent"*, %"class.pp::InputEvent"* dereferenceable(16)) unnamed_addr #1

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden i32 @_ZN10chrome_pdf26PPCursorTypeFromCursorTypeEN2ui5mojom10CursorTypeE(i32) local_unnamed_addr #4 {
  %2 = icmp eq i32 %0, 2
  %3 = select i1 %2, i32 2, i32 0
  %4 = icmp eq i32 %0, 3
  %5 = select i1 %4, i32 3, i32 %3
  ret i32 %5
}

declare i32 @_ZNK2pp10InputEvent12GetModifiersEv(%"class.pp::InputEvent"*) local_unnamed_addr #1

declare double @_ZNK2pp10InputEvent12GetTimeStampEv(%"class.pp::InputEvent"*) local_unnamed_addr #1

declare i32 @_ZNK2pp15MouseInputEvent9GetButtonEv(%"class.pp::MouseInputEvent"*) local_unnamed_addr #1

declare i32 @_ZNK2pp15MouseInputEvent13GetClickCountEv(%"class.pp::MouseInputEvent"*) local_unnamed_addr #1

declare void @_ZNK2pp15MouseInputEvent11GetPositionEv(%"class.pp::Point"* sret, %"class.pp::MouseInputEvent"*) local_unnamed_addr #1

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #5

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #2

declare i32 @_ZNK2pp18KeyboardInputEvent10GetKeyCodeEv(%"class.pp::KeyboardInputEvent"*) local_unnamed_addr #1

declare void @_ZN4base11UTF8ToUTF16ENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.std::__1::basic_string.22"* sret, i8*, i64) local_unnamed_addr #1

declare void @_ZNK2pp18KeyboardInputEvent16GetCharacterTextEv(%"class.pp::Var"* sret, %"class.pp::KeyboardInputEvent"*) local_unnamed_addr #1

declare void @_ZNK2pp3Var8AsStringEv(%"class.std::__1::basic_string"* sret, %"class.pp::Var"*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN2pp3VarD1Ev(%"class.pp::Var"*) unnamed_addr #3

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #6

declare i32 @_ZNK2pp15TouchInputEvent13GetTouchCountE16PP_TouchListType(%"class.pp::TouchInputEvent"*, i32) local_unnamed_addr #1

declare <2 x float> @_ZN10chrome_pdf22PointFFromPPFloatPointERK13PP_FloatPoint(%struct.PP_FloatPoint* dereferenceable(8)) local_unnamed_addr #1

declare void @_ZNK2pp15TouchInputEvent15GetTouchByIndexE16PP_TouchListTypej(%"class.pp::TouchPoint"* sret, %"class.pp::TouchInputEvent"*, i32, i32) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink13WebTouchEventC2ENS_5mojom9EventTypeEiN4base9TimeTicksE(%"class.blink::WebTouchEvent"*, i32, i32, i64) unnamed_addr #0 comdat align 2 {
  %5 = getelementptr inbounds %"class.blink::WebTouchEvent", %"class.blink::WebTouchEvent"* %0, i64 0, i32 0, i32 0
  %6 = getelementptr inbounds %"class.blink::WebTouchEvent", %"class.blink::WebTouchEvent"* %0, i64 0, i32 0, i32 1
  store float 1.000000e+00, float* %6, align 8
  %7 = getelementptr inbounds %"class.blink::WebTouchEvent", %"class.blink::WebTouchEvent"* %0, i64 0, i32 0, i32 2, i32 0
  store float 0.000000e+00, float* %7, align 4
  %8 = getelementptr inbounds %"class.blink::WebTouchEvent", %"class.blink::WebTouchEvent"* %0, i64 0, i32 0, i32 2, i32 1
  store float 0.000000e+00, float* %8, align 4
  %9 = getelementptr inbounds %"class.blink::WebTouchEvent", %"class.blink::WebTouchEvent"* %0, i64 0, i32 0, i32 3, i32 0, i32 0
  store i64 %3, i64* %9, align 8
  %10 = getelementptr inbounds %"class.blink::WebTouchEvent", %"class.blink::WebTouchEvent"* %0, i64 0, i32 0, i32 4
  store i32 %1, i32* %10, align 8
  %11 = getelementptr inbounds %"class.blink::WebTouchEvent", %"class.blink::WebTouchEvent"* %0, i64 0, i32 0, i32 5
  store i32 %2, i32* %11, align 4
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [8 x i8*] }, { [8 x i8*] }* @_ZTVN5blink13WebTouchEventE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %5, align 8
  %12 = getelementptr inbounds %"class.blink::WebTouchEvent", %"class.blink::WebTouchEvent"* %0, i64 0, i32 1
  store i32 0, i32* %12, align 8
  %13 = getelementptr inbounds %"class.blink::WebTouchEvent", %"class.blink::WebTouchEvent"* %0, i64 0, i32 2, i64 0, i32 0, i32 0
  store i32 0, i32* %13, align 4
  %14 = getelementptr inbounds %"class.blink::WebTouchEvent", %"class.blink::WebTouchEvent"* %0, i64 0, i32 2, i64 0, i32 0, i32 1
  store float 0x7FF8000000000000, float* %14, align 4
  %15 = getelementptr inbounds %"class.blink::WebTouchEvent", %"class.blink::WebTouchEvent"* %0, i64 0, i32 2, i64 0, i32 0, i32 2
  %16 = bitcast i32* %15 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %16, i8 0, i64 16, i1 false) #7
  %17 = getelementptr inbounds %"class.blink::WebTouchEvent", %"class.blink::WebTouchEvent"* %0, i64 0, i32 2, i64 0, i32 0, i32 6
  store i32 -1, i32* %17, align 4
  %18 = getelementptr inbounds %"class.blink::WebTouchEvent", %"class.blink::WebTouchEvent"* %0, i64 0, i32 2, i64 0, i32 0, i32 7
  %19 = bitcast i32* %18 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %19, i8 0, i64 13, i1 false) #7
  %20 = getelementptr inbounds %"class.blink::WebTouchEvent", %"class.blink::WebTouchEvent"* %0, i64 0, i32 2, i64 0, i32 0, i32 11
  %21 = getelementptr inbounds %"class.blink::WebTouchEvent", %"class.blink::WebTouchEvent"* %0, i64 0, i32 2, i64 1, i32 0, i32 1
  %22 = bitcast %"class.gfx::PointF"* %20 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %22, i8 0, i64 36, i1 false)
  store float 0x7FF8000000000000, float* %21, align 4
  %23 = getelementptr inbounds %"class.blink::WebTouchEvent", %"class.blink::WebTouchEvent"* %0, i64 0, i32 2, i64 1, i32 0, i32 2
  %24 = bitcast i32* %23 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %24, i8 0, i64 16, i1 false) #7
  %25 = getelementptr inbounds %"class.blink::WebTouchEvent", %"class.blink::WebTouchEvent"* %0, i64 0, i32 2, i64 1, i32 0, i32 6
  store i32 -1, i32* %25, align 4
  %26 = getelementptr inbounds %"class.blink::WebTouchEvent", %"class.blink::WebTouchEvent"* %0, i64 0, i32 2, i64 1, i32 0, i32 7
  %27 = bitcast i32* %26 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %27, i8 0, i64 13, i1 false) #7
  %28 = getelementptr inbounds %"class.blink::WebTouchEvent", %"class.blink::WebTouchEvent"* %0, i64 0, i32 2, i64 1, i32 0, i32 11
  %29 = getelementptr inbounds %"class.blink::WebTouchEvent", %"class.blink::WebTouchEvent"* %0, i64 0, i32 2, i64 2, i32 0, i32 1
  %30 = bitcast %"class.gfx::PointF"* %28 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %30, i8 0, i64 36, i1 false)
  store float 0x7FF8000000000000, float* %29, align 4
  %31 = getelementptr inbounds %"class.blink::WebTouchEvent", %"class.blink::WebTouchEvent"* %0, i64 0, i32 2, i64 2, i32 0, i32 2
  %32 = bitcast i32* %31 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %32, i8 0, i64 16, i1 false) #7
  %33 = getelementptr inbounds %"class.blink::WebTouchEvent", %"class.blink::WebTouchEvent"* %0, i64 0, i32 2, i64 2, i32 0, i32 6
  store i32 -1, i32* %33, align 4
  %34 = getelementptr inbounds %"class.blink::WebTouchEvent", %"class.blink::WebTouchEvent"* %0, i64 0, i32 2, i64 2, i32 0, i32 7
  %35 = bitcast i32* %34 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %35, i8 0, i64 13, i1 false) #7
  %36 = getelementptr inbounds %"class.blink::WebTouchEvent", %"class.blink::WebTouchEvent"* %0, i64 0, i32 2, i64 2, i32 0, i32 11
  %37 = getelementptr inbounds %"class.blink::WebTouchEvent", %"class.blink::WebTouchEvent"* %0, i64 0, i32 2, i64 3, i32 0, i32 1
  %38 = bitcast %"class.gfx::PointF"* %36 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %38, i8 0, i64 36, i1 false)
  store float 0x7FF8000000000000, float* %37, align 4
  %39 = getelementptr inbounds %"class.blink::WebTouchEvent", %"class.blink::WebTouchEvent"* %0, i64 0, i32 2, i64 3, i32 0, i32 2
  %40 = bitcast i32* %39 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %40, i8 0, i64 16, i1 false) #7
  %41 = getelementptr inbounds %"class.blink::WebTouchEvent", %"class.blink::WebTouchEvent"* %0, i64 0, i32 2, i64 3, i32 0, i32 6
  store i32 -1, i32* %41, align 4
  %42 = getelementptr inbounds %"class.blink::WebTouchEvent", %"class.blink::WebTouchEvent"* %0, i64 0, i32 2, i64 3, i32 0, i32 7
  %43 = bitcast i32* %42 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %43, i8 0, i64 13, i1 false) #7
  %44 = getelementptr inbounds %"class.blink::WebTouchEvent", %"class.blink::WebTouchEvent"* %0, i64 0, i32 2, i64 3, i32 0, i32 11
  %45 = getelementptr inbounds %"class.blink::WebTouchEvent", %"class.blink::WebTouchEvent"* %0, i64 0, i32 2, i64 4, i32 0, i32 1
  %46 = bitcast %"class.gfx::PointF"* %44 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %46, i8 0, i64 36, i1 false)
  store float 0x7FF8000000000000, float* %45, align 4
  %47 = getelementptr inbounds %"class.blink::WebTouchEvent", %"class.blink::WebTouchEvent"* %0, i64 0, i32 2, i64 4, i32 0, i32 2
  %48 = bitcast i32* %47 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %48, i8 0, i64 16, i1 false) #7
  %49 = getelementptr inbounds %"class.blink::WebTouchEvent", %"class.blink::WebTouchEvent"* %0, i64 0, i32 2, i64 4, i32 0, i32 6
  store i32 -1, i32* %49, align 4
  %50 = getelementptr inbounds %"class.blink::WebTouchEvent", %"class.blink::WebTouchEvent"* %0, i64 0, i32 2, i64 4, i32 0, i32 7
  %51 = bitcast i32* %50 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %51, i8 0, i64 13, i1 false) #7
  %52 = getelementptr inbounds %"class.blink::WebTouchEvent", %"class.blink::WebTouchEvent"* %0, i64 0, i32 2, i64 4, i32 0, i32 11
  %53 = getelementptr inbounds %"class.blink::WebTouchEvent", %"class.blink::WebTouchEvent"* %0, i64 0, i32 2, i64 5, i32 0, i32 1
  %54 = bitcast %"class.gfx::PointF"* %52 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %54, i8 0, i64 36, i1 false)
  store float 0x7FF8000000000000, float* %53, align 4
  %55 = getelementptr inbounds %"class.blink::WebTouchEvent", %"class.blink::WebTouchEvent"* %0, i64 0, i32 2, i64 5, i32 0, i32 2
  %56 = bitcast i32* %55 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %56, i8 0, i64 16, i1 false) #7
  %57 = getelementptr inbounds %"class.blink::WebTouchEvent", %"class.blink::WebTouchEvent"* %0, i64 0, i32 2, i64 5, i32 0, i32 6
  store i32 -1, i32* %57, align 4
  %58 = getelementptr inbounds %"class.blink::WebTouchEvent", %"class.blink::WebTouchEvent"* %0, i64 0, i32 2, i64 5, i32 0, i32 7
  %59 = bitcast i32* %58 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %59, i8 0, i64 13, i1 false) #7
  %60 = getelementptr inbounds %"class.blink::WebTouchEvent", %"class.blink::WebTouchEvent"* %0, i64 0, i32 2, i64 5, i32 0, i32 11
  %61 = getelementptr inbounds %"class.blink::WebTouchEvent", %"class.blink::WebTouchEvent"* %0, i64 0, i32 2, i64 6, i32 0, i32 1
  %62 = bitcast %"class.gfx::PointF"* %60 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %62, i8 0, i64 36, i1 false)
  store float 0x7FF8000000000000, float* %61, align 4
  %63 = getelementptr inbounds %"class.blink::WebTouchEvent", %"class.blink::WebTouchEvent"* %0, i64 0, i32 2, i64 6, i32 0, i32 2
  %64 = bitcast i32* %63 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %64, i8 0, i64 16, i1 false) #7
  %65 = getelementptr inbounds %"class.blink::WebTouchEvent", %"class.blink::WebTouchEvent"* %0, i64 0, i32 2, i64 6, i32 0, i32 6
  store i32 -1, i32* %65, align 4
  %66 = getelementptr inbounds %"class.blink::WebTouchEvent", %"class.blink::WebTouchEvent"* %0, i64 0, i32 2, i64 6, i32 0, i32 7
  %67 = bitcast i32* %66 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %67, i8 0, i64 13, i1 false) #7
  %68 = getelementptr inbounds %"class.blink::WebTouchEvent", %"class.blink::WebTouchEvent"* %0, i64 0, i32 2, i64 6, i32 0, i32 11
  %69 = getelementptr inbounds %"class.blink::WebTouchEvent", %"class.blink::WebTouchEvent"* %0, i64 0, i32 2, i64 7, i32 0, i32 1
  %70 = bitcast %"class.gfx::PointF"* %68 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %70, i8 0, i64 36, i1 false)
  store float 0x7FF8000000000000, float* %69, align 4
  %71 = getelementptr inbounds %"class.blink::WebTouchEvent", %"class.blink::WebTouchEvent"* %0, i64 0, i32 2, i64 7, i32 0, i32 2
  %72 = bitcast i32* %71 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %72, i8 0, i64 16, i1 false) #7
  %73 = getelementptr inbounds %"class.blink::WebTouchEvent", %"class.blink::WebTouchEvent"* %0, i64 0, i32 2, i64 7, i32 0, i32 6
  store i32 -1, i32* %73, align 4
  %74 = getelementptr inbounds %"class.blink::WebTouchEvent", %"class.blink::WebTouchEvent"* %0, i64 0, i32 2, i64 7, i32 0, i32 7
  %75 = bitcast i32* %74 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %75, i8 0, i64 13, i1 false) #7
  %76 = getelementptr inbounds %"class.blink::WebTouchEvent", %"class.blink::WebTouchEvent"* %0, i64 0, i32 2, i64 7, i32 0, i32 11
  %77 = getelementptr inbounds %"class.blink::WebTouchEvent", %"class.blink::WebTouchEvent"* %0, i64 0, i32 2, i64 8, i32 0, i32 1
  %78 = bitcast %"class.gfx::PointF"* %76 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %78, i8 0, i64 36, i1 false)
  store float 0x7FF8000000000000, float* %77, align 4
  %79 = getelementptr inbounds %"class.blink::WebTouchEvent", %"class.blink::WebTouchEvent"* %0, i64 0, i32 2, i64 8, i32 0, i32 2
  %80 = bitcast i32* %79 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %80, i8 0, i64 16, i1 false) #7
  %81 = getelementptr inbounds %"class.blink::WebTouchEvent", %"class.blink::WebTouchEvent"* %0, i64 0, i32 2, i64 8, i32 0, i32 6
  store i32 -1, i32* %81, align 4
  %82 = getelementptr inbounds %"class.blink::WebTouchEvent", %"class.blink::WebTouchEvent"* %0, i64 0, i32 2, i64 8, i32 0, i32 7
  %83 = bitcast i32* %82 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %83, i8 0, i64 13, i1 false) #7
  %84 = getelementptr inbounds %"class.blink::WebTouchEvent", %"class.blink::WebTouchEvent"* %0, i64 0, i32 2, i64 8, i32 0, i32 11
  %85 = getelementptr inbounds %"class.blink::WebTouchEvent", %"class.blink::WebTouchEvent"* %0, i64 0, i32 2, i64 9, i32 0, i32 1
  %86 = bitcast %"class.gfx::PointF"* %84 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %86, i8 0, i64 36, i1 false)
  store float 0x7FF8000000000000, float* %85, align 4
  %87 = getelementptr inbounds %"class.blink::WebTouchEvent", %"class.blink::WebTouchEvent"* %0, i64 0, i32 2, i64 9, i32 0, i32 2
  %88 = bitcast i32* %87 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %88, i8 0, i64 16, i1 false) #7
  %89 = getelementptr inbounds %"class.blink::WebTouchEvent", %"class.blink::WebTouchEvent"* %0, i64 0, i32 2, i64 9, i32 0, i32 6
  store i32 -1, i32* %89, align 4
  %90 = getelementptr inbounds %"class.blink::WebTouchEvent", %"class.blink::WebTouchEvent"* %0, i64 0, i32 2, i64 9, i32 0, i32 7
  %91 = bitcast i32* %90 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %91, i8 0, i64 13, i1 false) #7
  %92 = getelementptr inbounds %"class.blink::WebTouchEvent", %"class.blink::WebTouchEvent"* %0, i64 0, i32 2, i64 9, i32 0, i32 11
  %93 = getelementptr inbounds %"class.blink::WebTouchEvent", %"class.blink::WebTouchEvent"* %0, i64 0, i32 2, i64 10, i32 0, i32 1
  %94 = bitcast %"class.gfx::PointF"* %92 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %94, i8 0, i64 36, i1 false)
  store float 0x7FF8000000000000, float* %93, align 4
  %95 = getelementptr inbounds %"class.blink::WebTouchEvent", %"class.blink::WebTouchEvent"* %0, i64 0, i32 2, i64 10, i32 0, i32 2
  %96 = bitcast i32* %95 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %96, i8 0, i64 16, i1 false) #7
  %97 = getelementptr inbounds %"class.blink::WebTouchEvent", %"class.blink::WebTouchEvent"* %0, i64 0, i32 2, i64 10, i32 0, i32 6
  store i32 -1, i32* %97, align 4
  %98 = getelementptr inbounds %"class.blink::WebTouchEvent", %"class.blink::WebTouchEvent"* %0, i64 0, i32 2, i64 10, i32 0, i32 7
  %99 = bitcast i32* %98 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %99, i8 0, i64 13, i1 false) #7
  %100 = getelementptr inbounds %"class.blink::WebTouchEvent", %"class.blink::WebTouchEvent"* %0, i64 0, i32 2, i64 10, i32 0, i32 11
  %101 = getelementptr inbounds %"class.blink::WebTouchEvent", %"class.blink::WebTouchEvent"* %0, i64 0, i32 2, i64 11, i32 0, i32 1
  %102 = bitcast %"class.gfx::PointF"* %100 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %102, i8 0, i64 36, i1 false)
  store float 0x7FF8000000000000, float* %101, align 4
  %103 = getelementptr inbounds %"class.blink::WebTouchEvent", %"class.blink::WebTouchEvent"* %0, i64 0, i32 2, i64 11, i32 0, i32 2
  %104 = bitcast i32* %103 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %104, i8 0, i64 16, i1 false) #7
  %105 = getelementptr inbounds %"class.blink::WebTouchEvent", %"class.blink::WebTouchEvent"* %0, i64 0, i32 2, i64 11, i32 0, i32 6
  store i32 -1, i32* %105, align 4
  %106 = getelementptr inbounds %"class.blink::WebTouchEvent", %"class.blink::WebTouchEvent"* %0, i64 0, i32 2, i64 11, i32 0, i32 7
  %107 = bitcast i32* %106 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %107, i8 0, i64 13, i1 false) #7
  %108 = getelementptr inbounds %"class.blink::WebTouchEvent", %"class.blink::WebTouchEvent"* %0, i64 0, i32 2, i64 11, i32 0, i32 11
  %109 = getelementptr inbounds %"class.blink::WebTouchEvent", %"class.blink::WebTouchEvent"* %0, i64 0, i32 2, i64 12, i32 0, i32 1
  %110 = bitcast %"class.gfx::PointF"* %108 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %110, i8 0, i64 36, i1 false)
  store float 0x7FF8000000000000, float* %109, align 4
  %111 = getelementptr inbounds %"class.blink::WebTouchEvent", %"class.blink::WebTouchEvent"* %0, i64 0, i32 2, i64 12, i32 0, i32 2
  %112 = bitcast i32* %111 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %112, i8 0, i64 16, i1 false) #7
  %113 = getelementptr inbounds %"class.blink::WebTouchEvent", %"class.blink::WebTouchEvent"* %0, i64 0, i32 2, i64 12, i32 0, i32 6
  store i32 -1, i32* %113, align 4
  %114 = getelementptr inbounds %"class.blink::WebTouchEvent", %"class.blink::WebTouchEvent"* %0, i64 0, i32 2, i64 12, i32 0, i32 7
  %115 = bitcast i32* %114 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %115, i8 0, i64 13, i1 false) #7
  %116 = getelementptr inbounds %"class.blink::WebTouchEvent", %"class.blink::WebTouchEvent"* %0, i64 0, i32 2, i64 12, i32 0, i32 11
  %117 = getelementptr inbounds %"class.blink::WebTouchEvent", %"class.blink::WebTouchEvent"* %0, i64 0, i32 2, i64 13, i32 0, i32 1
  %118 = bitcast %"class.gfx::PointF"* %116 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %118, i8 0, i64 36, i1 false)
  store float 0x7FF8000000000000, float* %117, align 4
  %119 = getelementptr inbounds %"class.blink::WebTouchEvent", %"class.blink::WebTouchEvent"* %0, i64 0, i32 2, i64 13, i32 0, i32 2
  %120 = bitcast i32* %119 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %120, i8 0, i64 16, i1 false) #7
  %121 = getelementptr inbounds %"class.blink::WebTouchEvent", %"class.blink::WebTouchEvent"* %0, i64 0, i32 2, i64 13, i32 0, i32 6
  store i32 -1, i32* %121, align 4
  %122 = getelementptr inbounds %"class.blink::WebTouchEvent", %"class.blink::WebTouchEvent"* %0, i64 0, i32 2, i64 13, i32 0, i32 7
  %123 = bitcast i32* %122 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %123, i8 0, i64 13, i1 false) #7
  %124 = getelementptr inbounds %"class.blink::WebTouchEvent", %"class.blink::WebTouchEvent"* %0, i64 0, i32 2, i64 13, i32 0, i32 11
  %125 = getelementptr inbounds %"class.blink::WebTouchEvent", %"class.blink::WebTouchEvent"* %0, i64 0, i32 2, i64 14, i32 0, i32 1
  %126 = bitcast %"class.gfx::PointF"* %124 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %126, i8 0, i64 36, i1 false)
  store float 0x7FF8000000000000, float* %125, align 4
  %127 = getelementptr inbounds %"class.blink::WebTouchEvent", %"class.blink::WebTouchEvent"* %0, i64 0, i32 2, i64 14, i32 0, i32 2
  %128 = bitcast i32* %127 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %128, i8 0, i64 16, i1 false) #7
  %129 = getelementptr inbounds %"class.blink::WebTouchEvent", %"class.blink::WebTouchEvent"* %0, i64 0, i32 2, i64 14, i32 0, i32 6
  store i32 -1, i32* %129, align 4
  %130 = getelementptr inbounds %"class.blink::WebTouchEvent", %"class.blink::WebTouchEvent"* %0, i64 0, i32 2, i64 14, i32 0, i32 7
  %131 = bitcast i32* %130 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %131, i8 0, i64 13, i1 false) #7
  %132 = getelementptr inbounds %"class.blink::WebTouchEvent", %"class.blink::WebTouchEvent"* %0, i64 0, i32 2, i64 14, i32 0, i32 11
  %133 = getelementptr inbounds %"class.blink::WebTouchEvent", %"class.blink::WebTouchEvent"* %0, i64 0, i32 2, i64 15, i32 0, i32 1
  %134 = bitcast %"class.gfx::PointF"* %132 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %134, i8 0, i64 36, i1 false)
  store float 0x7FF8000000000000, float* %133, align 4
  %135 = getelementptr inbounds %"class.blink::WebTouchEvent", %"class.blink::WebTouchEvent"* %0, i64 0, i32 2, i64 15, i32 0, i32 2
  %136 = bitcast i32* %135 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %136, i8 0, i64 16, i1 false) #7
  %137 = getelementptr inbounds %"class.blink::WebTouchEvent", %"class.blink::WebTouchEvent"* %0, i64 0, i32 2, i64 15, i32 0, i32 6
  store i32 -1, i32* %137, align 4
  %138 = getelementptr inbounds %"class.blink::WebTouchEvent", %"class.blink::WebTouchEvent"* %0, i64 0, i32 2, i64 15, i32 0, i32 7
  %139 = bitcast i32* %138 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %139, i8 0, i64 13, i1 false) #7
  %140 = getelementptr inbounds %"class.blink::WebTouchEvent", %"class.blink::WebTouchEvent"* %0, i64 0, i32 2, i64 15, i32 0, i32 11
  %141 = bitcast %"class.gfx::PointF"* %140 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %141, i8 0, i64 32, i1 false) #7
  %142 = getelementptr inbounds %"class.blink::WebTouchEvent", %"class.blink::WebTouchEvent"* %0, i64 0, i32 3
  %143 = getelementptr inbounds %"class.blink::WebTouchEvent", %"class.blink::WebTouchEvent"* %0, i64 0, i32 7
  store i32 0, i32* %143, align 4
  %144 = bitcast i32* %142 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %144, i8 0, i64 7, i1 false)
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #2

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="64" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind }
attributes #3 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nounwind }
attributes #8 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!3}
!3 = distinct !{!3, !4, !"_ZNK2pp10TouchPoint8positionEv: argument 0"}
!4 = distinct !{!4, !"_ZNK2pp10TouchPoint8positionEv"}
