; ModuleID = '../../ui/events/gesture_detection/gesture_configuration.cc'
source_filename = "../../ui/events/gesture_detection/gesture_configuration.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.ui::GestureConfiguration" = type <{ i32 (...)**, float, i8, [3 x i8], i32, i8, i8, [2 x i8], i32, i32, i8, i8, [2 x i8], i32, float, i32, float, float, float, float, float, i32, i32, float, float, float, float, float, float, float, i32, i32, i32, i8, [3 x i8], float, i8, i8, [2 x i8], i32, [4 x i8] }>

@_ZTVN2ui20GestureConfigurationE = hidden unnamed_addr constant { [4 x i8*] } { [4 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.ui::GestureConfiguration"*)* @_ZN2ui20GestureConfigurationD2Ev to i8*), i8* bitcast (void (%"class.ui::GestureConfiguration"*)* @_ZN2ui20GestureConfigurationD0Ev to i8*)] }, align 8

@_ZN2ui20GestureConfigurationC1Ev = hidden unnamed_addr alias void (%"class.ui::GestureConfiguration"*), void (%"class.ui::GestureConfiguration"*)* @_ZN2ui20GestureConfigurationC2Ev
@_ZN2ui20GestureConfigurationD1Ev = hidden unnamed_addr alias void (%"class.ui::GestureConfiguration"*), void (%"class.ui::GestureConfiguration"*)* @_ZN2ui20GestureConfigurationD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden %"class.ui::GestureConfiguration"* @_ZN2ui20GestureConfiguration11GetInstanceEv() local_unnamed_addr #0 align 2 {
  %1 = tail call %"class.ui::GestureConfiguration"* @_ZN2ui20GestureConfiguration27GetPlatformSpecificInstanceEv() #5
  ret %"class.ui::GestureConfiguration"* %1
}

declare %"class.ui::GestureConfiguration"* @_ZN2ui20GestureConfiguration27GetPlatformSpecificInstanceEv() local_unnamed_addr #1

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN2ui20GestureConfigurationC2Ev(%"class.ui::GestureConfiguration"*) unnamed_addr #2 align 2 {
  %2 = getelementptr inbounds %"class.ui::GestureConfiguration", %"class.ui::GestureConfiguration"* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN2ui20GestureConfigurationE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.ui::GestureConfiguration", %"class.ui::GestureConfiguration"* %0, i64 0, i32 1
  store float 2.500000e+01, float* %3, align 8
  %4 = getelementptr inbounds %"class.ui::GestureConfiguration", %"class.ui::GestureConfiguration"* %0, i64 0, i32 2
  store i8 0, i8* %4, align 4
  %5 = getelementptr inbounds %"class.ui::GestureConfiguration", %"class.ui::GestureConfiguration"* %0, i64 0, i32 4
  store i32 400, i32* %5, align 8
  %6 = getelementptr inbounds %"class.ui::GestureConfiguration", %"class.ui::GestureConfiguration"* %0, i64 0, i32 5
  store i8 0, i8* %6, align 4
  %7 = getelementptr inbounds %"class.ui::GestureConfiguration", %"class.ui::GestureConfiguration"* %0, i64 0, i32 6
  store i8 0, i8* %7, align 1
  %8 = getelementptr inbounds %"class.ui::GestureConfiguration", %"class.ui::GestureConfiguration"* %0, i64 0, i32 8
  store i32 400, i32* %8, align 8
  %9 = getelementptr inbounds %"class.ui::GestureConfiguration", %"class.ui::GestureConfiguration"* %0, i64 0, i32 9
  store i32 200, i32* %9, align 4
  %10 = getelementptr inbounds %"class.ui::GestureConfiguration", %"class.ui::GestureConfiguration"* %0, i64 0, i32 10
  store i8 0, i8* %10, align 8
  %11 = getelementptr inbounds %"class.ui::GestureConfiguration", %"class.ui::GestureConfiguration"* %0, i64 0, i32 11
  store i8 0, i8* %11, align 1
  %12 = getelementptr inbounds %"class.ui::GestureConfiguration", %"class.ui::GestureConfiguration"* %0, i64 0, i32 13
  store i32 500, i32* %12, align 4
  %13 = getelementptr inbounds %"class.ui::GestureConfiguration", %"class.ui::GestureConfiguration"* %0, i64 0, i32 14
  store float 2.000000e+01, float* %13, align 8
  %14 = getelementptr inbounds %"class.ui::GestureConfiguration", %"class.ui::GestureConfiguration"* %0, i64 0, i32 15
  store i32 3, i32* %14, align 4
  %15 = getelementptr inbounds %"class.ui::GestureConfiguration", %"class.ui::GestureConfiguration"* %0, i64 0, i32 16
  store float 3.000000e+02, float* %15, align 8
  %16 = getelementptr inbounds %"class.ui::GestureConfiguration", %"class.ui::GestureConfiguration"* %0, i64 0, i32 17
  store float 1.700000e+04, float* %16, align 4
  %17 = getelementptr inbounds %"class.ui::GestureConfiguration", %"class.ui::GestureConfiguration"* %0, i64 0, i32 18
  store float 0.000000e+00, float* %17, align 8
  %18 = getelementptr inbounds %"class.ui::GestureConfiguration", %"class.ui::GestureConfiguration"* %0, i64 0, i32 19
  store float 1.500000e+02, float* %18, align 4
  %19 = getelementptr inbounds %"class.ui::GestureConfiguration", %"class.ui::GestureConfiguration"* %0, i64 0, i32 20
  store float 2.000000e+01, float* %19, align 8
  %20 = getelementptr inbounds %"class.ui::GestureConfiguration", %"class.ui::GestureConfiguration"* %0, i64 0, i32 21
  store i32 700, i32* %20, align 4
  %21 = getelementptr inbounds %"class.ui::GestureConfiguration", %"class.ui::GestureConfiguration"* %0, i64 0, i32 22
  store i32 800, i32* %21, align 8
  %22 = getelementptr inbounds %"class.ui::GestureConfiguration", %"class.ui::GestureConfiguration"* %0, i64 0, i32 23
  %23 = bitcast float* %22 to <4 x float>*
  store <4 x float> <float 1.500000e+01, float 2.000000e+01, float 3.000000e+01, float 0.000000e+00>, <4 x float>* %23, align 4
  %24 = getelementptr inbounds %"class.ui::GestureConfiguration", %"class.ui::GestureConfiguration"* %0, i64 0, i32 27
  store float 0.000000e+00, float* %24, align 4
  %25 = getelementptr inbounds %"class.ui::GestureConfiguration", %"class.ui::GestureConfiguration"* %0, i64 0, i32 28
  store float 1.250000e+02, float* %25, align 8
  %26 = getelementptr inbounds %"class.ui::GestureConfiguration", %"class.ui::GestureConfiguration"* %0, i64 0, i32 29
  store float 2.000000e+01, float* %26, align 4
  %27 = getelementptr inbounds %"class.ui::GestureConfiguration", %"class.ui::GestureConfiguration"* %0, i64 0, i32 30
  store i32 0, i32* %27, align 8
  %28 = getelementptr inbounds %"class.ui::GestureConfiguration", %"class.ui::GestureConfiguration"* %0, i64 0, i32 31
  store i32 400, i32* %28, align 4
  %29 = getelementptr inbounds %"class.ui::GestureConfiguration", %"class.ui::GestureConfiguration"* %0, i64 0, i32 32
  store i32 150, i32* %29, align 8
  %30 = getelementptr inbounds %"class.ui::GestureConfiguration", %"class.ui::GestureConfiguration"* %0, i64 0, i32 33
  store i8 0, i8* %30, align 4
  %31 = getelementptr inbounds %"class.ui::GestureConfiguration", %"class.ui::GestureConfiguration"* %0, i64 0, i32 35
  store float 3.000000e+01, float* %31, align 8
  %32 = getelementptr inbounds %"class.ui::GestureConfiguration", %"class.ui::GestureConfiguration"* %0, i64 0, i32 36
  store i8 0, i8* %32, align 4
  %33 = getelementptr inbounds %"class.ui::GestureConfiguration", %"class.ui::GestureConfiguration"* %0, i64 0, i32 37
  store i8 0, i8* %33, align 1
  %34 = getelementptr inbounds %"class.ui::GestureConfiguration", %"class.ui::GestureConfiguration"* %0, i64 0, i32 39
  store i32 1, i32* %34, align 8
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @_ZN2ui20GestureConfigurationD2Ev(%"class.ui::GestureConfiguration"* nocapture) unnamed_addr #3 align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2ui20GestureConfigurationD0Ev(%"class.ui::GestureConfiguration"*) unnamed_addr #0 align 2 {
  %2 = bitcast %"class.ui::GestureConfiguration"* %0 to i8*
  tail call void @_ZdlPv(i8* %2) #6
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #4

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind }
attributes #6 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
