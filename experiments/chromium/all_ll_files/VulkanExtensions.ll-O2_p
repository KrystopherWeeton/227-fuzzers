; ModuleID = '../../third_party/dawn/src/dawn_native/vulkan/VulkanExtensions.cpp'
source_filename = "../../third_party/dawn/src/dawn_native/vulkan/VulkanExtensions.cpp"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"struct.std::__1::array" = type { [12 x %"struct.dawn_native::vulkan::InstanceExtInfo"] }
%"struct.dawn_native::vulkan::InstanceExtInfo" = type { i32, i8*, i32 }
%"struct.std::__1::array.19" = type { [22 x %"struct.dawn_native::vulkan::DeviceExtInfo"] }
%"struct.dawn_native::vulkan::DeviceExtInfo" = type { i32, i8*, i32 }
%"struct.std::__1::array.48" = type { [4 x %"struct.dawn_native::vulkan::VulkanLayerInfo"] }
%"struct.dawn_native::vulkan::VulkanLayerInfo" = type { i32, i8* }
%"struct.std::__1::piecewise_construct_t" = type { i8 }
%"class.std::__1::unordered_map" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr", %"class.std::__1::__compressed_pair.4", %"class.std::__1::__compressed_pair.9", %"class.std::__1::__compressed_pair.11", [4 x i8] }>
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem", %"struct.std::__1::__compressed_pair_elem.0" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.0" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.1" }
%"class.std::__1::__compressed_pair.1" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"struct.std::__1::__compressed_pair_elem.2" = type { i64 }
%"class.std::__1::__compressed_pair.4" = type { %"struct.std::__1::__compressed_pair_elem.5" }
%"struct.std::__1::__compressed_pair_elem.5" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.9" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.11" = type { %"struct.std::__1::__compressed_pair_elem.12" }
%"struct.std::__1::__compressed_pair_elem.12" = type { float }
%"class.std::__1::tuple" = type { %"struct.std::__1::__tuple_impl" }
%"struct.std::__1::__tuple_impl" = type { %"class.std::__1::__tuple_leaf" }
%"class.std::__1::__tuple_leaf" = type { %"class.std::__1::basic_string"* }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.14" }
%"class.std::__1::__compressed_pair.14" = type { %"struct.std::__1::__compressed_pair_elem.15" }
%"struct.std::__1::__compressed_pair_elem.15" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::tuple.77" = type { i8 }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }
%"class.std::__1::__basic_string_common" = type { i8 }
%"class.ityp::bitset" = type { %"class.std::__1::bitset" }
%"class.std::__1::bitset" = type { %"class.std::__1::__bitset" }
%"class.std::__1::__bitset" = type { i64 }
%"class.std::__1::unordered_map.20" = type { %"class.std::__1::__hash_table.21" }
%"class.std::__1::__hash_table.21" = type <{ %"class.std::__1::unique_ptr.22", %"class.std::__1::__compressed_pair.32", %"class.std::__1::__compressed_pair.37", %"class.std::__1::__compressed_pair.40", [4 x i8] }>
%"class.std::__1::unique_ptr.22" = type { %"class.std::__1::__compressed_pair.23" }
%"class.std::__1::__compressed_pair.23" = type { %"struct.std::__1::__compressed_pair_elem.24", %"struct.std::__1::__compressed_pair_elem.26" }
%"struct.std::__1::__compressed_pair_elem.24" = type { %"struct.std::__1::__hash_node_base.25"** }
%"struct.std::__1::__hash_node_base.25" = type { %"struct.std::__1::__hash_node_base.25"* }
%"struct.std::__1::__compressed_pair_elem.26" = type { %"class.std::__1::__bucket_list_deallocator.27" }
%"class.std::__1::__bucket_list_deallocator.27" = type { %"class.std::__1::__compressed_pair.28" }
%"class.std::__1::__compressed_pair.28" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.32" = type { %"struct.std::__1::__compressed_pair_elem.33" }
%"struct.std::__1::__compressed_pair_elem.33" = type { %"struct.std::__1::__hash_node_base.25" }
%"class.std::__1::__compressed_pair.37" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.40" = type { %"struct.std::__1::__compressed_pair_elem.12" }
%"class.ityp::bitset.44" = type { %"class.std::__1::bitset.45" }
%"class.std::__1::bitset.45" = type { %"class.std::__1::__bitset.46" }
%"class.std::__1::__bitset.46" = type { i64 }
%"class.std::__1::unordered_map.49" = type { %"class.std::__1::__hash_table.50" }
%"class.std::__1::__hash_table.50" = type <{ %"class.std::__1::unique_ptr.51", %"class.std::__1::__compressed_pair.61", %"class.std::__1::__compressed_pair.66", %"class.std::__1::__compressed_pair.69", [4 x i8] }>
%"class.std::__1::unique_ptr.51" = type { %"class.std::__1::__compressed_pair.52" }
%"class.std::__1::__compressed_pair.52" = type { %"struct.std::__1::__compressed_pair_elem.53", %"struct.std::__1::__compressed_pair_elem.55" }
%"struct.std::__1::__compressed_pair_elem.53" = type { %"struct.std::__1::__hash_node_base.54"** }
%"struct.std::__1::__hash_node_base.54" = type { %"struct.std::__1::__hash_node_base.54"* }
%"struct.std::__1::__compressed_pair_elem.55" = type { %"class.std::__1::__bucket_list_deallocator.56" }
%"class.std::__1::__bucket_list_deallocator.56" = type { %"class.std::__1::__compressed_pair.57" }
%"class.std::__1::__compressed_pair.57" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.61" = type { %"struct.std::__1::__compressed_pair_elem.62" }
%"struct.std::__1::__compressed_pair_elem.62" = type { %"struct.std::__1::__hash_node_base.54" }
%"class.std::__1::__compressed_pair.66" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.69" = type { %"struct.std::__1::__compressed_pair_elem.12" }
%"struct.std::__1::__murmur2_or_cityhash" = type { i8 }

$_ZNSt3__112__hash_tableINS_17__hash_value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEN11dawn_native6vulkan11InstanceExtEEENS_22__unordered_map_hasherIS7_SB_NS_4hashIS7_EENS_8equal_toIS7_EELb1EEENS_21__unordered_map_equalIS7_SB_SG_SE_Lb1EEENS5_ISB_EEE25__emplace_unique_key_argsIS7_JRKNS_21piecewise_construct_tENS_5tupleIJOS7_EEENSQ_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeISB_PvEEEEbEERKT_DpOT0_ = comdat any

$_ZNSt3__112__hash_tableINS_17__hash_value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEN11dawn_native6vulkan11InstanceExtEEENS_22__unordered_map_hasherIS7_SB_NS_4hashIS7_EENS_8equal_toIS7_EELb1EEENS_21__unordered_map_equalIS7_SB_SG_SE_Lb1EEENS5_ISB_EEE6rehashEm = comdat any

$_ZNSt3__121__murmur2_or_cityhashImLm64EEclEPKvm = comdat any

$_ZNSt3__121__murmur2_or_cityhashImLm64EE18__hash_len_0_to_16EPKcm = comdat any

$_ZNSt3__112__hash_tableINS_17__hash_value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEN11dawn_native6vulkan11InstanceExtEEENS_22__unordered_map_hasherIS7_SB_NS_4hashIS7_EENS_8equal_toIS7_EELb1EEENS_21__unordered_map_equalIS7_SB_SG_SE_Lb1EEENS5_ISB_EEE8__rehashEm = comdat any

$_ZNSt3__112__hash_tableINS_17__hash_value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEN11dawn_native6vulkan9DeviceExtEEENS_22__unordered_map_hasherIS7_SB_NS_4hashIS7_EENS_8equal_toIS7_EELb1EEENS_21__unordered_map_equalIS7_SB_SG_SE_Lb1EEENS5_ISB_EEE25__emplace_unique_key_argsIS7_JRKNS_21piecewise_construct_tENS_5tupleIJOS7_EEENSQ_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeISB_PvEEEEbEERKT_DpOT0_ = comdat any

$_ZNSt3__112__hash_tableINS_17__hash_value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEN11dawn_native6vulkan9DeviceExtEEENS_22__unordered_map_hasherIS7_SB_NS_4hashIS7_EENS_8equal_toIS7_EELb1EEENS_21__unordered_map_equalIS7_SB_SG_SE_Lb1EEENS5_ISB_EEE6rehashEm = comdat any

$_ZNSt3__112__hash_tableINS_17__hash_value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEN11dawn_native6vulkan9DeviceExtEEENS_22__unordered_map_hasherIS7_SB_NS_4hashIS7_EENS_8equal_toIS7_EELb1EEENS_21__unordered_map_equalIS7_SB_SG_SE_Lb1EEENS5_ISB_EEE8__rehashEm = comdat any

$_ZNSt3__112__hash_tableINS_17__hash_value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEN11dawn_native6vulkan11VulkanLayerEEENS_22__unordered_map_hasherIS7_SB_NS_4hashIS7_EENS_8equal_toIS7_EELb1EEENS_21__unordered_map_equalIS7_SB_SG_SE_Lb1EEENS5_ISB_EEE25__emplace_unique_key_argsIS7_JRKNS_21piecewise_construct_tENS_5tupleIJOS7_EEENSQ_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeISB_PvEEEEbEERKT_DpOT0_ = comdat any

$_ZNSt3__112__hash_tableINS_17__hash_value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEN11dawn_native6vulkan11VulkanLayerEEENS_22__unordered_map_hasherIS7_SB_NS_4hashIS7_EENS_8equal_toIS7_EELb1EEENS_21__unordered_map_equalIS7_SB_SG_SE_Lb1EEENS5_ISB_EEE6rehashEm = comdat any

$_ZNSt3__112__hash_tableINS_17__hash_value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEN11dawn_native6vulkan11VulkanLayerEEENS_22__unordered_map_hasherIS7_SB_NS_4hashIS7_EENS_8equal_toIS7_EELb1EEENS_21__unordered_map_equalIS7_SB_SG_SE_Lb1EEENS5_ISB_EEE8__rehashEm = comdat any

@_ZN11dawn_native6vulkanL17sInstanceExtInfosE = internal constant %"struct.std::__1::array" { [12 x %"struct.dawn_native::vulkan::InstanceExtInfo"] [%"struct.dawn_native::vulkan::InstanceExtInfo" { i32 0, i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str, i32 0, i32 0), i32 4198400 }, %"struct.dawn_native::vulkan::InstanceExtInfo" { i32 1, i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.1, i32 0, i32 0), i32 4198400 }, %"struct.dawn_native::vulkan::InstanceExtInfo" { i32 2, i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.2, i32 0, i32 0), i32 4198400 }, %"struct.dawn_native::vulkan::InstanceExtInfo" { i32 3, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.3, i32 0, i32 0), i32 -1 }, %"struct.dawn_native::vulkan::InstanceExtInfo" { i32 4, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.4, i32 0, i32 0), i32 -1 }, %"struct.dawn_native::vulkan::InstanceExtInfo" { i32 5, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.5, i32 0, i32 0), i32 -1 }, %"struct.dawn_native::vulkan::InstanceExtInfo" { i32 6, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.6, i32 0, i32 0), i32 -1 }, %"struct.dawn_native::vulkan::InstanceExtInfo" { i32 7, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.7, i32 0, i32 0), i32 -1 }, %"struct.dawn_native::vulkan::InstanceExtInfo" { i32 8, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.8, i32 0, i32 0), i32 -1 }, %"struct.dawn_native::vulkan::InstanceExtInfo" { i32 9, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.9, i32 0, i32 0), i32 -1 }, %"struct.dawn_native::vulkan::InstanceExtInfo" { i32 10, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.10, i32 0, i32 0), i32 -1 }, %"struct.dawn_native::vulkan::InstanceExtInfo" { i32 11, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.11, i32 0, i32 0), i32 -1 }] }, align 8
@_ZN11dawn_native6vulkanL15sDeviceExtInfosE = internal constant %"struct.std::__1::array.19" { [22 x %"struct.dawn_native::vulkan::DeviceExtInfo"] [%"struct.dawn_native::vulkan::DeviceExtInfo" { i32 0, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.12, i32 0, i32 0), i32 4198400 }, %"struct.dawn_native::vulkan::DeviceExtInfo" { i32 1, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.13, i32 0, i32 0), i32 4198400 }, %"struct.dawn_native::vulkan::DeviceExtInfo" { i32 2, i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.14, i32 0, i32 0), i32 4198400 }, %"struct.dawn_native::vulkan::DeviceExtInfo" { i32 3, i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str, i32 0, i32 0), i32 4198400 }, %"struct.dawn_native::vulkan::DeviceExtInfo" { i32 4, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.15, i32 0, i32 0), i32 4198400 }, %"struct.dawn_native::vulkan::DeviceExtInfo" { i32 5, i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.1, i32 0, i32 0), i32 4198400 }, %"struct.dawn_native::vulkan::DeviceExtInfo" { i32 6, i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.2, i32 0, i32 0), i32 4198400 }, %"struct.dawn_native::vulkan::DeviceExtInfo" { i32 7, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.16, i32 0, i32 0), i32 4198400 }, %"struct.dawn_native::vulkan::DeviceExtInfo" { i32 8, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.17, i32 0, i32 0), i32 4198400 }, %"struct.dawn_native::vulkan::DeviceExtInfo" { i32 9, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18, i32 0, i32 0), i32 4198400 }, %"struct.dawn_native::vulkan::DeviceExtInfo" { i32 10, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.19, i32 0, i32 0), i32 4198400 }, %"struct.dawn_native::vulkan::DeviceExtInfo" { i32 11, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.20, i32 0, i32 0), i32 4202496 }, %"struct.dawn_native::vulkan::DeviceExtInfo" { i32 12, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.21, i32 0, i32 0), i32 4202496 }, %"struct.dawn_native::vulkan::DeviceExtInfo" { i32 13, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.22, i32 0, i32 0), i32 4202496 }, %"struct.dawn_native::vulkan::DeviceExtInfo" { i32 14, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.23, i32 0, i32 0), i32 -1 }, %"struct.dawn_native::vulkan::DeviceExtInfo" { i32 15, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.24, i32 0, i32 0), i32 -1 }, %"struct.dawn_native::vulkan::DeviceExtInfo" { i32 16, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.25, i32 0, i32 0), i32 -1 }, %"struct.dawn_native::vulkan::DeviceExtInfo" { i32 17, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.26, i32 0, i32 0), i32 -1 }, %"struct.dawn_native::vulkan::DeviceExtInfo" { i32 18, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.27, i32 0, i32 0), i32 -1 }, %"struct.dawn_native::vulkan::DeviceExtInfo" { i32 19, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.28, i32 0, i32 0), i32 -1 }, %"struct.dawn_native::vulkan::DeviceExtInfo" { i32 20, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.29, i32 0, i32 0), i32 -1 }, %"struct.dawn_native::vulkan::DeviceExtInfo" { i32 21, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.30, i32 0, i32 0), i32 -1 }] }, align 8
@_ZN11dawn_native6vulkanL17sVulkanLayerInfosE = internal constant %"struct.std::__1::array.48" { [4 x %"struct.dawn_native::vulkan::VulkanLayerInfo"] [%"struct.dawn_native::vulkan::VulkanLayerInfo" { i32 0, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.31, i32 0, i32 0) }, %"struct.dawn_native::vulkan::VulkanLayerInfo" { i32 1, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.32, i32 0, i32 0) }, %"struct.dawn_native::vulkan::VulkanLayerInfo" { i32 2, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.33, i32 0, i32 0) }, %"struct.dawn_native::vulkan::VulkanLayerInfo" { i32 3, i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.34, i32 0, i32 0) }] }, align 8
@.str = private unnamed_addr constant [39 x i8] c"VK_KHR_get_physical_device_properties2\00", align 1
@.str.1 = private unnamed_addr constant [36 x i8] c"VK_KHR_external_memory_capabilities\00", align 1
@.str.2 = private unnamed_addr constant [39 x i8] c"VK_KHR_external_semaphore_capabilities\00", align 1
@.str.3 = private unnamed_addr constant [15 x i8] c"VK_KHR_surface\00", align 1
@.str.4 = private unnamed_addr constant [29 x i8] c"VK_FUCHSIA_imagepipe_surface\00", align 1
@.str.5 = private unnamed_addr constant [21 x i8] c"VK_EXT_metal_surface\00", align 1
@.str.6 = private unnamed_addr constant [23 x i8] c"VK_KHR_wayland_surface\00", align 1
@.str.7 = private unnamed_addr constant [21 x i8] c"VK_KHR_win32_surface\00", align 1
@.str.8 = private unnamed_addr constant [19 x i8] c"VK_KHR_xcb_surface\00", align 1
@.str.9 = private unnamed_addr constant [20 x i8] c"VK_KHR_xlib_surface\00", align 1
@.str.10 = private unnamed_addr constant [19 x i8] c"VK_EXT_debug_utils\00", align 1
@.str.11 = private unnamed_addr constant [27 x i8] c"VK_EXT_validation_features\00", align 1
@.str.12 = private unnamed_addr constant [20 x i8] c"VK_KHR_bind_memory2\00", align 1
@.str.13 = private unnamed_addr constant [20 x i8] c"VK_KHR_maintenance1\00", align 1
@.str.14 = private unnamed_addr constant [36 x i8] c"VK_KHR_storage_buffer_storage_class\00", align 1
@.str.15 = private unnamed_addr constant [32 x i8] c"VK_KHR_get_memory_requirements2\00", align 1
@.str.16 = private unnamed_addr constant [23 x i8] c"VK_KHR_external_memory\00", align 1
@.str.17 = private unnamed_addr constant [26 x i8] c"VK_KHR_external_semaphore\00", align 1
@.str.18 = private unnamed_addr constant [21 x i8] c"VK_KHR_16bit_storage\00", align 1
@.str.19 = private unnamed_addr constant [32 x i8] c"VK_KHR_sampler_ycbcr_conversion\00", align 1
@.str.20 = private unnamed_addr constant [25 x i8] c"VK_KHR_driver_properties\00", align 1
@.str.21 = private unnamed_addr constant [25 x i8] c"VK_KHR_image_format_list\00", align 1
@.str.22 = private unnamed_addr constant [27 x i8] c"VK_KHR_shader_float16_int8\00", align 1
@.str.23 = private unnamed_addr constant [26 x i8] c"VK_KHR_external_memory_fd\00", align 1
@.str.24 = private unnamed_addr constant [31 x i8] c"VK_EXT_external_memory_dma_buf\00", align 1
@.str.25 = private unnamed_addr constant [27 x i8] c"VK_FUCHSIA_external_memory\00", align 1
@.str.26 = private unnamed_addr constant [29 x i8] c"VK_KHR_external_semaphore_fd\00", align 1
@.str.27 = private unnamed_addr constant [30 x i8] c"VK_FUCHSIA_external_semaphore\00", align 1
@.str.28 = private unnamed_addr constant [33 x i8] c"VK_EXT_image_drm_format_modifier\00", align 1
@.str.29 = private unnamed_addr constant [17 x i8] c"VK_KHR_swapchain\00", align 1
@.str.30 = private unnamed_addr constant [29 x i8] c"VK_EXT_subgroup_size_control\00", align 1
@.str.31 = private unnamed_addr constant [28 x i8] c"VK_LAYER_KHRONOS_validation\00", align 1
@.str.32 = private unnamed_addr constant [24 x i8] c"VK_LAYER_LUNARG_vktrace\00", align 1
@.str.33 = private unnamed_addr constant [27 x i8] c"VK_LAYER_RENDERDOC_Capture\00", align 1
@.str.34 = private unnamed_addr constant [37 x i8] c"VK_LAYER_FUCHSIA_imagepipe_swapchain\00", align 1
@_ZNSt3__1L19piecewise_constructE = internal constant %"struct.std::__1::piecewise_construct_t" undef, align 1

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden nonnull dereferenceable(24) %"struct.dawn_native::vulkan::InstanceExtInfo"* @_ZN11dawn_native6vulkan18GetInstanceExtInfoENS0_11InstanceExtE(i32) local_unnamed_addr #0 {
  %2 = zext i32 %0 to i64
  %3 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* @_ZN11dawn_native6vulkanL17sInstanceExtInfosE, i64 0, i32 0, i64 %2
  ret %"struct.dawn_native::vulkan::InstanceExtInfo"* %3
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN11dawn_native6vulkan24CreateInstanceExtNameMapEv(%"class.std::__1::unordered_map"* noalias sret) local_unnamed_addr #2 {
  %2 = alloca %"class.std::__1::tuple", align 8
  %3 = alloca %"class.std::__1::tuple.77", align 1
  %4 = alloca %"class.std::__1::basic_string", align 8
  %5 = getelementptr inbounds %"class.std::__1::unordered_map", %"class.std::__1::unordered_map"* %0, i64 0, i32 0, i32 4, i64 0
  %6 = getelementptr inbounds %"class.std::__1::unordered_map", %"class.std::__1::unordered_map"* %0, i64 0, i32 0, i32 3
  %7 = bitcast %"class.std::__1::__compressed_pair.11"* %6 to i32*
  %8 = bitcast %"class.std::__1::unordered_map"* %0 to i8*
  %9 = bitcast i8* %5 to i32*
  store i32 -1431655766, i32* %9, align 4
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %8, i8 0, i64 32, i1 false) #12
  store i32 1065353216, i32* %7, align 4
  %10 = bitcast %"class.std::__1::basic_string"* %4 to i8*
  %11 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %12 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %13 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %14 = bitcast %"class.std::__1::basic_string"* %4 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %15 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %14, i64 0, i32 1, i32 0
  %16 = getelementptr inbounds %"class.std::__1::unordered_map", %"class.std::__1::unordered_map"* %0, i64 0, i32 0
  %17 = bitcast %"class.std::__1::tuple"* %2 to i8*
  %18 = getelementptr inbounds %"class.std::__1::tuple", %"class.std::__1::tuple"* %2, i64 0, i32 0, i32 0, i32 0
  %19 = getelementptr inbounds %"class.std::__1::tuple.77", %"class.std::__1::tuple.77"* %3, i64 0, i32 0
  br label %20

20:                                               ; preds = %1, %53
  %21 = phi %"struct.dawn_native::vulkan::InstanceExtInfo"* [ getelementptr inbounds (%"struct.std::__1::array", %"struct.std::__1::array"* @_ZN11dawn_native6vulkanL17sInstanceExtInfosE, i64 0, i32 0, i64 0), %1 ], [ %54, %53 ]
  %22 = getelementptr inbounds %"struct.dawn_native::vulkan::InstanceExtInfo", %"struct.dawn_native::vulkan::InstanceExtInfo"* %21, i64 0, i32 0
  %23 = load i32, i32* %22, align 8
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %10) #12
  %24 = getelementptr inbounds %"struct.dawn_native::vulkan::InstanceExtInfo", %"struct.dawn_native::vulkan::InstanceExtInfo"* %21, i64 0, i32 1
  %25 = load i8*, i8** %24, align 8
  %26 = call i64 @strlen(i8* %25) #12
  %27 = icmp ugt i64 %26, -17
  br i1 %27, label %28, label %30

28:                                               ; preds = %20
  %29 = bitcast %"class.std::__1::basic_string"* %4 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* nonnull %29) #13
  unreachable

30:                                               ; preds = %20
  %31 = icmp ult i64 %26, 23
  br i1 %31, label %37, label %32

32:                                               ; preds = %30
  %33 = add nuw i64 %26, 16
  %34 = and i64 %33, -16
  %35 = call i8* @_Znwm(i64 %34) #14
  store i8* %35, i8** %11, align 8
  %36 = or i64 %34, -9223372036854775808
  store i64 %36, i64* %12, align 8
  store i64 %26, i64* %13, align 8
  br label %40

37:                                               ; preds = %30
  %38 = trunc i64 %26 to i8
  store i8 %38, i8* %15, align 1
  %39 = icmp eq i64 %26, 0
  br i1 %39, label %42, label %40

40:                                               ; preds = %37, %32
  %41 = phi i8* [ %35, %32 ], [ %10, %37 ]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %41, i8* align 1 %25, i64 %26, i1 false) #12
  br label %42

42:                                               ; preds = %37, %40
  %43 = phi i8* [ %10, %37 ], [ %41, %40 ]
  %44 = getelementptr inbounds i8, i8* %43, i64 %26
  store i8 0, i8* %44, align 1
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #12
  store %"class.std::__1::basic_string"* %4, %"class.std::__1::basic_string"** %18, align 8
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %19) #12
  %45 = call { %"struct.std::__1::__hash_node_base"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEN11dawn_native6vulkan11InstanceExtEEENS_22__unordered_map_hasherIS7_SB_NS_4hashIS7_EENS_8equal_toIS7_EELb1EEENS_21__unordered_map_equalIS7_SB_SG_SE_Lb1EEENS5_ISB_EEE25__emplace_unique_key_argsIS7_JRKNS_21piecewise_construct_tENS_5tupleIJOS7_EEENSQ_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeISB_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table"* %16, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %4, %"struct.std::__1::piecewise_construct_t"* nonnull dereferenceable(1) @_ZNSt3__1L19piecewise_constructE, %"class.std::__1::tuple"* nonnull dereferenceable(8) %2, %"class.std::__1::tuple.77"* nonnull dereferenceable(1) %3) #12
  %46 = extractvalue { %"struct.std::__1::__hash_node_base"*, i8 } %45, 0
  %47 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %46, i64 5
  %48 = bitcast %"struct.std::__1::__hash_node_base"* %47 to i32*
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %19) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #12
  store i32 %23, i32* %48, align 4
  %49 = load i8, i8* %15, align 1
  %50 = icmp slt i8 %49, 0
  br i1 %50, label %51, label %53

51:                                               ; preds = %42
  %52 = load i8*, i8** %11, align 8
  call void @_ZdlPv(i8* %52) #14
  br label %53

53:                                               ; preds = %42, %51
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %10) #12
  %54 = getelementptr inbounds %"struct.dawn_native::vulkan::InstanceExtInfo", %"struct.dawn_native::vulkan::InstanceExtInfo"* %21, i64 1
  %55 = icmp eq %"struct.dawn_native::vulkan::InstanceExtInfo"* %54, getelementptr inbounds (%"struct.std::__1::array", %"struct.std::__1::array"* @_ZN11dawn_native6vulkanL17sInstanceExtInfosE, i64 1, i32 0, i64 0)
  br i1 %55, label %56, label %20

56:                                               ; preds = %53
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZN11dawn_native6vulkan18EnsureDependenciesERKN4ityp6bitsetINS0_11InstanceExtELm12EEE(%"class.ityp::bitset"* nocapture readonly dereferenceable(8)) local_unnamed_addr #2 {
  %2 = getelementptr inbounds %"class.ityp::bitset", %"class.ityp::bitset"* %0, i64 0, i32 0, i32 0, i32 0
  %3 = load i64, i64* %2, align 8
  br label %5

4:                                                ; preds = %29
  ret i64 %30

5:                                                ; preds = %29, %1
  %6 = phi i64 [ 0, %1 ], [ %31, %29 ]
  %7 = phi i64 [ 0, %1 ], [ %30, %29 ]
  %8 = trunc i64 %6 to i32
  switch i32 %8, label %15 [
    i32 0, label %19
    i32 3, label %19
    i32 10, label %19
    i32 11, label %19
    i32 1, label %12
    i32 2, label %12
    i32 4, label %9
    i32 5, label %9
    i32 6, label %9
    i32 7, label %9
    i32 8, label %9
    i32 9, label %9
  ]

9:                                                ; preds = %5, %5, %5, %5, %5, %5
  %10 = and i64 %7, 8
  %11 = icmp eq i64 %10, 0
  br i1 %11, label %17, label %19

12:                                               ; preds = %5, %5
  %13 = and i64 %7, 1
  %14 = icmp eq i64 %13, 0
  br i1 %14, label %17, label %19

15:                                               ; preds = %5
  %16 = shl i64 1, %6
  br label %25

17:                                               ; preds = %12, %9
  %18 = shl i64 1, %6
  br label %25

19:                                               ; preds = %12, %9, %5, %5, %5, %5
  %20 = shl i64 1, %6
  %21 = and i64 %3, %20
  %22 = icmp eq i64 %21, 0
  br i1 %22, label %25, label %23

23:                                               ; preds = %19
  %24 = or i64 %20, %7
  br label %29

25:                                               ; preds = %19, %17, %15
  %26 = phi i64 [ %16, %15 ], [ %20, %19 ], [ %18, %17 ]
  %27 = xor i64 %26, -1
  %28 = and i64 %7, %27
  br label %29

29:                                               ; preds = %25, %23
  %30 = phi i64 [ %28, %25 ], [ %24, %23 ]
  %31 = add nuw nsw i64 %6, 1
  %32 = icmp eq i64 %31, 12
  br i1 %32, label %4, label %5
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN11dawn_native6vulkan22MarkPromotedExtensionsEPN4ityp6bitsetINS0_11InstanceExtELm12EEEj(%"class.ityp::bitset"* nocapture, i32) local_unnamed_addr #2 {
  %3 = getelementptr inbounds %"class.ityp::bitset", %"class.ityp::bitset"* %0, i64 0, i32 0, i32 0, i32 0
  %4 = icmp ult i32 %1, 4198400
  br i1 %4, label %12, label %5

5:                                                ; preds = %2
  %6 = load i64, i64* %3, align 8
  %7 = or i64 %6, 7
  store i64 %7, i64* %3, align 8
  %8 = icmp eq i32 %1, -1
  br i1 %8, label %9, label %12

9:                                                ; preds = %5
  %10 = load i64, i64* %3, align 8
  %11 = or i64 %10, 4088
  store i64 %11, i64* %3, align 8
  br label %12

12:                                               ; preds = %5, %2, %9
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden nonnull dereferenceable(24) %"struct.dawn_native::vulkan::DeviceExtInfo"* @_ZN11dawn_native6vulkan16GetDeviceExtInfoENS0_9DeviceExtE(i32) local_unnamed_addr #0 {
  %2 = zext i32 %0 to i64
  %3 = getelementptr inbounds %"struct.std::__1::array.19", %"struct.std::__1::array.19"* @_ZN11dawn_native6vulkanL15sDeviceExtInfosE, i64 0, i32 0, i64 %2
  ret %"struct.dawn_native::vulkan::DeviceExtInfo"* %3
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN11dawn_native6vulkan22CreateDeviceExtNameMapEv(%"class.std::__1::unordered_map.20"* noalias sret) local_unnamed_addr #2 {
  %2 = alloca %"class.std::__1::tuple", align 8
  %3 = alloca %"class.std::__1::tuple.77", align 1
  %4 = alloca %"class.std::__1::basic_string", align 8
  %5 = getelementptr inbounds %"class.std::__1::unordered_map.20", %"class.std::__1::unordered_map.20"* %0, i64 0, i32 0, i32 4, i64 0
  %6 = getelementptr inbounds %"class.std::__1::unordered_map.20", %"class.std::__1::unordered_map.20"* %0, i64 0, i32 0, i32 3
  %7 = bitcast %"class.std::__1::__compressed_pair.40"* %6 to i32*
  %8 = bitcast %"class.std::__1::unordered_map.20"* %0 to i8*
  %9 = bitcast i8* %5 to i32*
  store i32 -1431655766, i32* %9, align 4
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %8, i8 0, i64 32, i1 false) #12
  store i32 1065353216, i32* %7, align 4
  %10 = bitcast %"class.std::__1::basic_string"* %4 to i8*
  %11 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %12 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %13 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %14 = bitcast %"class.std::__1::basic_string"* %4 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %15 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %14, i64 0, i32 1, i32 0
  %16 = getelementptr inbounds %"class.std::__1::unordered_map.20", %"class.std::__1::unordered_map.20"* %0, i64 0, i32 0
  %17 = bitcast %"class.std::__1::tuple"* %2 to i8*
  %18 = getelementptr inbounds %"class.std::__1::tuple", %"class.std::__1::tuple"* %2, i64 0, i32 0, i32 0, i32 0
  %19 = getelementptr inbounds %"class.std::__1::tuple.77", %"class.std::__1::tuple.77"* %3, i64 0, i32 0
  br label %20

20:                                               ; preds = %1, %53
  %21 = phi %"struct.dawn_native::vulkan::DeviceExtInfo"* [ getelementptr inbounds (%"struct.std::__1::array.19", %"struct.std::__1::array.19"* @_ZN11dawn_native6vulkanL15sDeviceExtInfosE, i64 0, i32 0, i64 0), %1 ], [ %54, %53 ]
  %22 = getelementptr inbounds %"struct.dawn_native::vulkan::DeviceExtInfo", %"struct.dawn_native::vulkan::DeviceExtInfo"* %21, i64 0, i32 0
  %23 = load i32, i32* %22, align 8
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %10) #12
  %24 = getelementptr inbounds %"struct.dawn_native::vulkan::DeviceExtInfo", %"struct.dawn_native::vulkan::DeviceExtInfo"* %21, i64 0, i32 1
  %25 = load i8*, i8** %24, align 8
  %26 = call i64 @strlen(i8* %25) #12
  %27 = icmp ugt i64 %26, -17
  br i1 %27, label %28, label %30

28:                                               ; preds = %20
  %29 = bitcast %"class.std::__1::basic_string"* %4 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* nonnull %29) #13
  unreachable

30:                                               ; preds = %20
  %31 = icmp ult i64 %26, 23
  br i1 %31, label %37, label %32

32:                                               ; preds = %30
  %33 = add nuw i64 %26, 16
  %34 = and i64 %33, -16
  %35 = call i8* @_Znwm(i64 %34) #14
  store i8* %35, i8** %11, align 8
  %36 = or i64 %34, -9223372036854775808
  store i64 %36, i64* %12, align 8
  store i64 %26, i64* %13, align 8
  br label %40

37:                                               ; preds = %30
  %38 = trunc i64 %26 to i8
  store i8 %38, i8* %15, align 1
  %39 = icmp eq i64 %26, 0
  br i1 %39, label %42, label %40

40:                                               ; preds = %37, %32
  %41 = phi i8* [ %35, %32 ], [ %10, %37 ]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %41, i8* align 1 %25, i64 %26, i1 false) #12
  br label %42

42:                                               ; preds = %37, %40
  %43 = phi i8* [ %10, %37 ], [ %41, %40 ]
  %44 = getelementptr inbounds i8, i8* %43, i64 %26
  store i8 0, i8* %44, align 1
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #12
  store %"class.std::__1::basic_string"* %4, %"class.std::__1::basic_string"** %18, align 8
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %19) #12
  %45 = call { %"struct.std::__1::__hash_node_base.25"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEN11dawn_native6vulkan9DeviceExtEEENS_22__unordered_map_hasherIS7_SB_NS_4hashIS7_EENS_8equal_toIS7_EELb1EEENS_21__unordered_map_equalIS7_SB_SG_SE_Lb1EEENS5_ISB_EEE25__emplace_unique_key_argsIS7_JRKNS_21piecewise_construct_tENS_5tupleIJOS7_EEENSQ_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeISB_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table.21"* %16, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %4, %"struct.std::__1::piecewise_construct_t"* nonnull dereferenceable(1) @_ZNSt3__1L19piecewise_constructE, %"class.std::__1::tuple"* nonnull dereferenceable(8) %2, %"class.std::__1::tuple.77"* nonnull dereferenceable(1) %3) #12
  %46 = extractvalue { %"struct.std::__1::__hash_node_base.25"*, i8 } %45, 0
  %47 = getelementptr inbounds %"struct.std::__1::__hash_node_base.25", %"struct.std::__1::__hash_node_base.25"* %46, i64 5
  %48 = bitcast %"struct.std::__1::__hash_node_base.25"* %47 to i32*
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %19) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #12
  store i32 %23, i32* %48, align 4
  %49 = load i8, i8* %15, align 1
  %50 = icmp slt i8 %49, 0
  br i1 %50, label %51, label %53

51:                                               ; preds = %42
  %52 = load i8*, i8** %11, align 8
  call void @_ZdlPv(i8* %52) #14
  br label %53

53:                                               ; preds = %42, %51
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %10) #12
  %54 = getelementptr inbounds %"struct.dawn_native::vulkan::DeviceExtInfo", %"struct.dawn_native::vulkan::DeviceExtInfo"* %21, i64 1
  %55 = icmp eq %"struct.dawn_native::vulkan::DeviceExtInfo"* %54, getelementptr inbounds (%"struct.std::__1::array.19", %"struct.std::__1::array.19"* @_ZN11dawn_native6vulkanL15sDeviceExtInfosE, i64 1, i32 0, i64 0)
  br i1 %55, label %56, label %20

56:                                               ; preds = %53
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZN11dawn_native6vulkan18EnsureDependenciesERKN4ityp6bitsetINS0_9DeviceExtELm22EEERKNS2_INS0_11InstanceExtELm12EEEj(%"class.ityp::bitset.44"* nocapture readonly dereferenceable(8), %"class.ityp::bitset"* nocapture readonly dereferenceable(8), i32) local_unnamed_addr #2 {
  %4 = icmp ugt i32 %2, 4198399
  %5 = getelementptr inbounds %"class.ityp::bitset", %"class.ityp::bitset"* %1, i64 0, i32 0, i32 0, i32 0
  %6 = load i64, i64* %5, align 8
  %7 = and i64 %6, 8
  %8 = icmp eq i64 %7, 0
  %9 = and i64 %6, 4
  %10 = icmp ne i64 %9, 0
  %11 = and i64 %6, 2
  %12 = icmp ne i64 %11, 0
  %13 = and i64 %6, 1
  %14 = icmp eq i64 %13, 0
  %15 = getelementptr inbounds %"class.ityp::bitset.44", %"class.ityp::bitset.44"* %0, i64 0, i32 0, i32 0, i32 0
  %16 = load i64, i64* %15, align 8
  br label %18

17:                                               ; preds = %74
  ret i64 %75

18:                                               ; preds = %74, %3
  %19 = phi i64 [ 0, %3 ], [ %76, %74 ]
  %20 = phi i64 [ 0, %3 ], [ %75, %74 ]
  %21 = trunc i64 %19 to i32
  switch i32 %21, label %60 [
    i32 0, label %64
    i32 4, label %64
    i32 1, label %64
    i32 12, label %64
    i32 2, label %64
    i32 3, label %22
    i32 5, label %23
    i32 6, label %27
    i32 19, label %31
    i32 20, label %34
    i32 10, label %35
    i32 11, label %38
    i32 13, label %38
    i32 7, label %41
    i32 8, label %44
    i32 14, label %47
    i32 16, label %47
    i32 15, label %50
    i32 17, label %53
    i32 18, label %53
    i32 9, label %56
    i32 21, label %59
  ]

22:                                               ; preds = %18
  br i1 %14, label %62, label %64

23:                                               ; preds = %18
  %24 = and i64 %20, 8
  %25 = icmp ne i64 %24, 0
  %26 = and i1 %25, %12
  br i1 %26, label %64, label %62

27:                                               ; preds = %18
  %28 = and i64 %20, 8
  %29 = icmp ne i64 %28, 0
  %30 = and i1 %29, %10
  br i1 %30, label %64, label %62

31:                                               ; preds = %18
  %32 = and i64 %20, 5129
  %33 = icmp eq i64 %32, 5129
  br i1 %33, label %64, label %62

34:                                               ; preds = %18
  br i1 %8, label %62, label %64

35:                                               ; preds = %18
  %36 = and i64 %20, 27
  %37 = icmp eq i64 %36, 27
  br i1 %37, label %64, label %62

38:                                               ; preds = %18, %18
  %39 = and i64 %20, 8
  %40 = icmp eq i64 %39, 0
  br i1 %40, label %62, label %64

41:                                               ; preds = %18
  %42 = and i64 %20, 32
  %43 = icmp eq i64 %42, 0
  br i1 %43, label %62, label %64

44:                                               ; preds = %18
  %45 = and i64 %20, 64
  %46 = icmp eq i64 %45, 0
  br i1 %46, label %62, label %64

47:                                               ; preds = %18, %18
  %48 = trunc i64 %20 to i8
  %49 = icmp slt i8 %48, 0
  br i1 %49, label %64, label %62

50:                                               ; preds = %18
  %51 = and i64 %20, 16384
  %52 = icmp eq i64 %51, 0
  br i1 %52, label %62, label %64

53:                                               ; preds = %18, %18
  %54 = and i64 %20, 256
  %55 = icmp eq i64 %54, 0
  br i1 %55, label %62, label %64

56:                                               ; preds = %18
  %57 = and i64 %20, 12
  %58 = icmp eq i64 %57, 12
  br i1 %58, label %64, label %62

59:                                               ; preds = %18
  br i1 %4, label %64, label %62

60:                                               ; preds = %18
  %61 = shl i64 1, %19
  br label %70

62:                                               ; preds = %22, %34, %38, %41, %44, %50, %53, %47, %59, %56, %35, %31, %27, %23
  %63 = shl i64 1, %19
  br label %70

64:                                               ; preds = %22, %34, %38, %41, %44, %50, %53, %56, %35, %31, %27, %23, %18, %18, %18, %18, %18, %59, %47
  %65 = shl i64 1, %19
  %66 = and i64 %16, %65
  %67 = icmp eq i64 %66, 0
  br i1 %67, label %70, label %68

68:                                               ; preds = %64
  %69 = or i64 %65, %20
  br label %74

70:                                               ; preds = %64, %62, %60
  %71 = phi i64 [ %61, %60 ], [ %65, %64 ], [ %63, %62 ]
  %72 = xor i64 %71, -1
  %73 = and i64 %20, %72
  br label %74

74:                                               ; preds = %70, %68
  %75 = phi i64 [ %73, %70 ], [ %69, %68 ]
  %76 = add nuw nsw i64 %19, 1
  %77 = icmp eq i64 %76, 22
  br i1 %77, label %17, label %18
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN11dawn_native6vulkan22MarkPromotedExtensionsEPN4ityp6bitsetINS0_9DeviceExtELm22EEEj(%"class.ityp::bitset.44"* nocapture, i32) local_unnamed_addr #2 {
  %3 = getelementptr inbounds %"class.ityp::bitset.44", %"class.ityp::bitset.44"* %0, i64 0, i32 0, i32 0, i32 0
  br label %5

4:                                                ; preds = %33
  ret void

5:                                                ; preds = %33, %2
  %6 = phi %"struct.dawn_native::vulkan::DeviceExtInfo"* [ getelementptr inbounds (%"struct.std::__1::array.19", %"struct.std::__1::array.19"* @_ZN11dawn_native6vulkanL15sDeviceExtInfosE, i64 0, i32 0, i64 0), %2 ], [ %34, %33 ]
  %7 = getelementptr inbounds %"struct.dawn_native::vulkan::DeviceExtInfo", %"struct.dawn_native::vulkan::DeviceExtInfo"* %6, i64 0, i32 2
  %8 = load i32, i32* %7, align 8
  %9 = icmp ugt i32 %8, %1
  br i1 %9, label %20, label %10

10:                                               ; preds = %5
  %11 = getelementptr inbounds %"struct.dawn_native::vulkan::DeviceExtInfo", %"struct.dawn_native::vulkan::DeviceExtInfo"* %6, i64 0, i32 0
  %12 = load i32, i32* %11, align 8
  %13 = icmp ugt i32 %12, 21
  br i1 %13, label %14, label %15

14:                                               ; preds = %24, %10
  tail call void @abort() #13
  unreachable

15:                                               ; preds = %10
  %16 = sext i32 %12 to i64
  %17 = shl i64 1, %16
  %18 = load i64, i64* %3, align 8
  %19 = or i64 %18, %17
  store i64 %19, i64* %3, align 8
  br label %20

20:                                               ; preds = %5, %15
  %21 = getelementptr inbounds %"struct.dawn_native::vulkan::DeviceExtInfo", %"struct.dawn_native::vulkan::DeviceExtInfo"* %6, i64 1, i32 2
  %22 = load i32, i32* %21, align 8
  %23 = icmp ugt i32 %22, %1
  br i1 %23, label %33, label %24

24:                                               ; preds = %20
  %25 = getelementptr inbounds %"struct.dawn_native::vulkan::DeviceExtInfo", %"struct.dawn_native::vulkan::DeviceExtInfo"* %6, i64 1, i32 0
  %26 = load i32, i32* %25, align 8
  %27 = icmp ugt i32 %26, 21
  br i1 %27, label %14, label %28

28:                                               ; preds = %24
  %29 = sext i32 %26 to i64
  %30 = shl i64 1, %29
  %31 = load i64, i64* %3, align 8
  %32 = or i64 %31, %30
  store i64 %32, i64* %3, align 8
  br label %33

33:                                               ; preds = %28, %20
  %34 = getelementptr inbounds %"struct.dawn_native::vulkan::DeviceExtInfo", %"struct.dawn_native::vulkan::DeviceExtInfo"* %6, i64 2
  %35 = icmp eq %"struct.dawn_native::vulkan::DeviceExtInfo"* %34, getelementptr inbounds (%"struct.std::__1::array.19", %"struct.std::__1::array.19"* @_ZN11dawn_native6vulkanL15sDeviceExtInfosE, i64 1, i32 0, i64 0)
  br i1 %35, label %4, label %5
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden nonnull dereferenceable(16) %"struct.dawn_native::vulkan::VulkanLayerInfo"* @_ZN11dawn_native6vulkan18GetVulkanLayerInfoENS0_11VulkanLayerE(i32) local_unnamed_addr #0 {
  %2 = zext i32 %0 to i64
  %3 = getelementptr inbounds %"struct.std::__1::array.48", %"struct.std::__1::array.48"* @_ZN11dawn_native6vulkanL17sVulkanLayerInfosE, i64 0, i32 0, i64 %2
  ret %"struct.dawn_native::vulkan::VulkanLayerInfo"* %3
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN11dawn_native6vulkan24CreateVulkanLayerNameMapEv(%"class.std::__1::unordered_map.49"* noalias sret) local_unnamed_addr #2 {
  %2 = alloca %"class.std::__1::tuple", align 8
  %3 = alloca %"class.std::__1::tuple.77", align 1
  %4 = alloca %"class.std::__1::basic_string", align 8
  %5 = getelementptr inbounds %"class.std::__1::unordered_map.49", %"class.std::__1::unordered_map.49"* %0, i64 0, i32 0, i32 4, i64 0
  %6 = getelementptr inbounds %"class.std::__1::unordered_map.49", %"class.std::__1::unordered_map.49"* %0, i64 0, i32 0, i32 3
  %7 = bitcast %"class.std::__1::__compressed_pair.69"* %6 to i32*
  %8 = bitcast %"class.std::__1::unordered_map.49"* %0 to i8*
  %9 = bitcast i8* %5 to i32*
  store i32 -1431655766, i32* %9, align 4
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %8, i8 0, i64 32, i1 false) #12
  store i32 1065353216, i32* %7, align 4
  %10 = bitcast %"class.std::__1::basic_string"* %4 to i8*
  %11 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %12 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %13 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %14 = bitcast %"class.std::__1::basic_string"* %4 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %15 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %14, i64 0, i32 1, i32 0
  %16 = getelementptr inbounds %"class.std::__1::unordered_map.49", %"class.std::__1::unordered_map.49"* %0, i64 0, i32 0
  %17 = bitcast %"class.std::__1::tuple"* %2 to i8*
  %18 = getelementptr inbounds %"class.std::__1::tuple", %"class.std::__1::tuple"* %2, i64 0, i32 0, i32 0, i32 0
  %19 = getelementptr inbounds %"class.std::__1::tuple.77", %"class.std::__1::tuple.77"* %3, i64 0, i32 0
  br label %20

20:                                               ; preds = %1, %53
  %21 = phi %"struct.dawn_native::vulkan::VulkanLayerInfo"* [ getelementptr inbounds (%"struct.std::__1::array.48", %"struct.std::__1::array.48"* @_ZN11dawn_native6vulkanL17sVulkanLayerInfosE, i64 0, i32 0, i64 0), %1 ], [ %54, %53 ]
  %22 = getelementptr inbounds %"struct.dawn_native::vulkan::VulkanLayerInfo", %"struct.dawn_native::vulkan::VulkanLayerInfo"* %21, i64 0, i32 0
  %23 = load i32, i32* %22, align 8
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %10) #12
  %24 = getelementptr inbounds %"struct.dawn_native::vulkan::VulkanLayerInfo", %"struct.dawn_native::vulkan::VulkanLayerInfo"* %21, i64 0, i32 1
  %25 = load i8*, i8** %24, align 8
  %26 = call i64 @strlen(i8* %25) #12
  %27 = icmp ugt i64 %26, -17
  br i1 %27, label %28, label %30

28:                                               ; preds = %20
  %29 = bitcast %"class.std::__1::basic_string"* %4 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* nonnull %29) #13
  unreachable

30:                                               ; preds = %20
  %31 = icmp ult i64 %26, 23
  br i1 %31, label %37, label %32

32:                                               ; preds = %30
  %33 = add nuw i64 %26, 16
  %34 = and i64 %33, -16
  %35 = call i8* @_Znwm(i64 %34) #14
  store i8* %35, i8** %11, align 8
  %36 = or i64 %34, -9223372036854775808
  store i64 %36, i64* %12, align 8
  store i64 %26, i64* %13, align 8
  br label %40

37:                                               ; preds = %30
  %38 = trunc i64 %26 to i8
  store i8 %38, i8* %15, align 1
  %39 = icmp eq i64 %26, 0
  br i1 %39, label %42, label %40

40:                                               ; preds = %37, %32
  %41 = phi i8* [ %35, %32 ], [ %10, %37 ]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %41, i8* align 1 %25, i64 %26, i1 false) #12
  br label %42

42:                                               ; preds = %37, %40
  %43 = phi i8* [ %10, %37 ], [ %41, %40 ]
  %44 = getelementptr inbounds i8, i8* %43, i64 %26
  store i8 0, i8* %44, align 1
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #12
  store %"class.std::__1::basic_string"* %4, %"class.std::__1::basic_string"** %18, align 8
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %19) #12
  %45 = call { %"struct.std::__1::__hash_node_base.54"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEN11dawn_native6vulkan11VulkanLayerEEENS_22__unordered_map_hasherIS7_SB_NS_4hashIS7_EENS_8equal_toIS7_EELb1EEENS_21__unordered_map_equalIS7_SB_SG_SE_Lb1EEENS5_ISB_EEE25__emplace_unique_key_argsIS7_JRKNS_21piecewise_construct_tENS_5tupleIJOS7_EEENSQ_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeISB_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table.50"* %16, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %4, %"struct.std::__1::piecewise_construct_t"* nonnull dereferenceable(1) @_ZNSt3__1L19piecewise_constructE, %"class.std::__1::tuple"* nonnull dereferenceable(8) %2, %"class.std::__1::tuple.77"* nonnull dereferenceable(1) %3) #12
  %46 = extractvalue { %"struct.std::__1::__hash_node_base.54"*, i8 } %45, 0
  %47 = getelementptr inbounds %"struct.std::__1::__hash_node_base.54", %"struct.std::__1::__hash_node_base.54"* %46, i64 5
  %48 = bitcast %"struct.std::__1::__hash_node_base.54"* %47 to i32*
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %19) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #12
  store i32 %23, i32* %48, align 4
  %49 = load i8, i8* %15, align 1
  %50 = icmp slt i8 %49, 0
  br i1 %50, label %51, label %53

51:                                               ; preds = %42
  %52 = load i8*, i8** %11, align 8
  call void @_ZdlPv(i8* %52) #14
  br label %53

53:                                               ; preds = %42, %51
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %10) #12
  %54 = getelementptr inbounds %"struct.dawn_native::vulkan::VulkanLayerInfo", %"struct.dawn_native::vulkan::VulkanLayerInfo"* %21, i64 1
  %55 = icmp eq %"struct.dawn_native::vulkan::VulkanLayerInfo"* %54, getelementptr inbounds (%"struct.std::__1::array.48", %"struct.std::__1::array.48"* @_ZN11dawn_native6vulkanL17sVulkanLayerInfosE, i64 1, i32 0, i64 0)
  br i1 %55, label %56, label %20

56:                                               ; preds = %53
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #3

; Function Attrs: noreturn
declare void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"*) local_unnamed_addr #4

; Function Attrs: noreturn nounwind
declare void @abort() local_unnamed_addr #5

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #6

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

; Function Attrs: argmemonly nofree nounwind readonly
declare i64 @strlen(i8* nocapture) local_unnamed_addr #7

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.std::__1::__hash_node_base"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEN11dawn_native6vulkan11InstanceExtEEENS_22__unordered_map_hasherIS7_SB_NS_4hashIS7_EENS_8equal_toIS7_EELb1EEENS_21__unordered_map_equalIS7_SB_SG_SE_Lb1EEENS5_ISB_EEE25__emplace_unique_key_argsIS7_JRKNS_21piecewise_construct_tENS_5tupleIJOS7_EEENSQ_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeISB_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table"*, %"class.std::__1::basic_string"* dereferenceable(24), %"struct.std::__1::piecewise_construct_t"* dereferenceable(1), %"class.std::__1::tuple"* dereferenceable(8), %"class.std::__1::tuple.77"* dereferenceable(1)) local_unnamed_addr #2 comdat align 2 {
  %6 = alloca %"struct.std::__1::__murmur2_or_cityhash", align 1
  %7 = bitcast %"class.std::__1::basic_string"* %1 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %8 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %7, i64 0, i32 1, i32 0
  %9 = load i8, i8* %8, align 1
  %10 = icmp slt i8 %9, 0
  %11 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %12 = load i8*, i8** %11, align 8
  %13 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %14 = load i64, i64* %13, align 8
  %15 = bitcast %"class.std::__1::basic_string"* %1 to i8*
  %16 = zext i8 %9 to i64
  %17 = select i1 %10, i8* %12, i8* %15
  %18 = select i1 %10, i64 %14, i64 %16
  %19 = getelementptr inbounds %"struct.std::__1::__murmur2_or_cityhash", %"struct.std::__1::__murmur2_or_cityhash"* %6, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %19) #12
  %20 = call i64 @_ZNSt3__121__murmur2_or_cityhashImLm64EEclEPKvm(%"struct.std::__1::__murmur2_or_cityhash"* nonnull %6, i8* %17, i64 %18) #12
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %19) #12
  %21 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %22 = load i64, i64* %21, align 8
  %23 = icmp eq i64 %22, 0
  br i1 %23, label %114, label %24

24:                                               ; preds = %5
  %25 = call i64 @llvm.ctpop.i64(i64 %22) #12, !range !2
  %26 = icmp ugt i64 %25, 1
  br i1 %26, label %30, label %27

27:                                               ; preds = %24
  %28 = add i64 %22, -1
  %29 = and i64 %28, %20
  br label %34

30:                                               ; preds = %24
  %31 = icmp ult i64 %20, %22
  br i1 %31, label %34, label %32

32:                                               ; preds = %30
  %33 = urem i64 %20, %22
  br label %34

34:                                               ; preds = %27, %30, %32
  %35 = phi i64 [ %29, %27 ], [ %33, %32 ], [ %20, %30 ]
  %36 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %37 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %36, align 8
  %38 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %37, i64 %35
  %39 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %38, align 8
  %40 = icmp eq %"struct.std::__1::__hash_node_base"* %39, null
  br i1 %40, label %114, label %41

41:                                               ; preds = %34
  %42 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %39, i64 0, i32 0
  %43 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %42, align 8
  %44 = icmp eq %"struct.std::__1::__hash_node_base"* %43, null
  br i1 %44, label %114, label %45

45:                                               ; preds = %41
  %46 = add i64 %22, -1
  %47 = load i8, i8* %8, align 1
  %48 = icmp slt i8 %47, 0
  %49 = load i64, i64* %13, align 8
  %50 = zext i8 %47 to i64
  %51 = select i1 %48, i64 %49, i64 %50
  %52 = load i8*, i8** %11, align 8
  %53 = select i1 %48, i8* %52, i8* %15
  %54 = icmp eq i64 %51, 0
  br label %55

55:                                               ; preds = %45, %98
  %56 = phi %"struct.std::__1::__hash_node_base"* [ %43, %45 ], [ %100, %98 ]
  %57 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %56, i64 1
  %58 = bitcast %"struct.std::__1::__hash_node_base"* %57 to i64*
  %59 = load i64, i64* %58, align 8
  %60 = icmp eq i64 %59, %20
  br i1 %60, label %71, label %61

61:                                               ; preds = %55
  br i1 %26, label %64, label %62

62:                                               ; preds = %61
  %63 = and i64 %59, %46
  br label %68

64:                                               ; preds = %61
  %65 = icmp ult i64 %59, %22
  br i1 %65, label %68, label %66

66:                                               ; preds = %64
  %67 = urem i64 %59, %22
  br label %68

68:                                               ; preds = %62, %64, %66
  %69 = phi i64 [ %63, %62 ], [ %67, %66 ], [ %59, %64 ]
  %70 = icmp eq i64 %69, %35
  br i1 %70, label %71, label %114

71:                                               ; preds = %55, %68
  %72 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %56, i64 2
  %73 = bitcast %"struct.std::__1::__hash_node_base"* %72 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %74 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %73, i64 0, i32 1, i32 0
  %75 = load i8, i8* %74, align 1
  %76 = icmp slt i8 %75, 0
  %77 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %56, i64 3
  %78 = bitcast %"struct.std::__1::__hash_node_base"* %77 to i64*
  %79 = load i64, i64* %78, align 8
  %80 = zext i8 %75 to i64
  %81 = select i1 %76, i64 %79, i64 %80
  %82 = icmp eq i64 %81, %51
  br i1 %82, label %83, label %98

83:                                               ; preds = %71
  %84 = bitcast %"struct.std::__1::__hash_node_base"* %72 to i8**
  %85 = load i8*, i8** %84, align 8
  %86 = bitcast %"struct.std::__1::__hash_node_base"* %72 to i8*
  %87 = select i1 %76, i8* %85, i8* %86
  br i1 %76, label %94, label %88

88:                                               ; preds = %83
  br i1 %54, label %203, label %89

89:                                               ; preds = %88
  %90 = ptrtoint i8* %85 to i64
  %91 = trunc i64 %90 to i8
  %92 = load i8, i8* %53, align 1
  %93 = icmp eq i8 %92, %91
  br i1 %93, label %102, label %98

94:                                               ; preds = %83
  br i1 %54, label %203, label %95

95:                                               ; preds = %94
  %96 = call i32 @bcmp(i8* %87, i8* %53, i64 %51) #12
  %97 = icmp eq i32 %96, 0
  br i1 %97, label %203, label %98

98:                                               ; preds = %109, %89, %71, %95
  %99 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %56, i64 0, i32 0
  %100 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %99, align 8
  %101 = icmp eq %"struct.std::__1::__hash_node_base"* %100, null
  br i1 %101, label %114, label %55

102:                                              ; preds = %89, %109
  %103 = phi i64 [ %106, %109 ], [ %80, %89 ]
  %104 = phi i8* [ %107, %109 ], [ %86, %89 ]
  %105 = phi i8* [ %110, %109 ], [ %53, %89 ]
  %106 = add i64 %103, -1
  %107 = getelementptr inbounds i8, i8* %104, i64 1
  %108 = icmp eq i64 %106, 0
  br i1 %108, label %203, label %109

109:                                              ; preds = %102
  %110 = getelementptr inbounds i8, i8* %105, i64 1
  %111 = load i8, i8* %107, align 1
  %112 = load i8, i8* %110, align 1
  %113 = icmp eq i8 %111, %112
  br i1 %113, label %102, label %98

114:                                              ; preds = %68, %98, %41, %34, %5
  %115 = phi i64 [ %35, %34 ], [ -6148914691236517206, %5 ], [ %35, %41 ], [ %35, %98 ], [ %35, %68 ]
  %116 = call i8* @_Znwm(i64 48) #14, !noalias !3
  %117 = getelementptr inbounds i8, i8* %116, i64 16
  %118 = bitcast %"class.std::__1::tuple"* %3 to i8**
  %119 = load i8*, i8** %118, align 8, !noalias !3
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %117, i8* align 8 %119, i64 24, i1 false) #12, !noalias !3
  call void @llvm.memset.p0i8.i64(i8* align 8 %119, i8 0, i64 24, i1 false) #12, !noalias !3
  %120 = getelementptr inbounds i8, i8* %116, i64 40
  %121 = bitcast i8* %120 to i32*
  store i32 0, i32* %121, align 8, !noalias !3
  %122 = getelementptr inbounds i8, i8* %116, i64 8
  %123 = bitcast i8* %122 to i64*
  store i64 %20, i64* %123, align 8, !noalias !3
  %124 = bitcast i8* %116 to %"struct.std::__1::__hash_node_base"**
  store %"struct.std::__1::__hash_node_base"* null, %"struct.std::__1::__hash_node_base"** %124, align 8, !noalias !3
  %125 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 2, i32 0, i32 0
  %126 = load i64, i64* %125, align 8
  %127 = add i64 %126, 1
  %128 = uitofp i64 %127 to float
  %129 = uitofp i64 %22 to float
  %130 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 3, i32 0, i32 0
  %131 = load float, float* %130, align 4
  %132 = fmul float %131, %129
  %133 = fcmp olt float %132, %128
  %134 = or i1 %23, %133
  br i1 %134, label %135, label %158

135:                                              ; preds = %114
  %136 = shl i64 %22, 1
  %137 = icmp ult i64 %22, 3
  %138 = call i64 @llvm.ctpop.i64(i64 %22) #12, !range !2
  %139 = icmp ugt i64 %138, 1
  %140 = or i1 %137, %139
  %141 = zext i1 %140 to i64
  %142 = or i64 %136, %141
  %143 = fdiv float %128, %131
  %144 = call float @llvm.ceil.f32(float %143) #12
  %145 = fptoui float %144 to i64
  %146 = icmp ult i64 %142, %145
  %147 = select i1 %146, i64 %145, i64 %142
  call void @_ZNSt3__112__hash_tableINS_17__hash_value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEN11dawn_native6vulkan11InstanceExtEEENS_22__unordered_map_hasherIS7_SB_NS_4hashIS7_EENS_8equal_toIS7_EELb1EEENS_21__unordered_map_equalIS7_SB_SG_SE_Lb1EEENS5_ISB_EEE6rehashEm(%"class.std::__1::__hash_table"* %0, i64 %147)
  %148 = load i64, i64* %21, align 8
  %149 = call i64 @llvm.ctpop.i64(i64 %148) #12, !range !2
  %150 = icmp ugt i64 %149, 1
  br i1 %150, label %154, label %151

151:                                              ; preds = %135
  %152 = add i64 %148, -1
  %153 = and i64 %152, %20
  br label %158

154:                                              ; preds = %135
  %155 = icmp ult i64 %20, %148
  br i1 %155, label %158, label %156

156:                                              ; preds = %154
  %157 = urem i64 %20, %148
  br label %158

158:                                              ; preds = %156, %154, %151, %114
  %159 = phi i64 [ %22, %114 ], [ %148, %151 ], [ %148, %154 ], [ %148, %156 ]
  %160 = phi i64 [ %115, %114 ], [ %153, %151 ], [ %20, %154 ], [ %157, %156 ]
  %161 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %162 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %161, align 8
  %163 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %162, i64 %160
  %164 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %163, align 8
  %165 = icmp eq %"struct.std::__1::__hash_node_base"* %164, null
  br i1 %165, label %166, label %192

166:                                              ; preds = %158
  %167 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 1, i32 0, i32 0
  %168 = bitcast %"struct.std::__1::__hash_node_base"* %167 to i64*
  %169 = load i64, i64* %168, align 8
  %170 = bitcast i8* %116 to i64*
  store i64 %169, i64* %170, align 8
  %171 = bitcast %"struct.std::__1::__hash_node_base"* %167 to i8**
  store i8* %116, i8** %171, align 8
  store %"struct.std::__1::__hash_node_base"* %167, %"struct.std::__1::__hash_node_base"** %163, align 8
  %172 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %124, align 8
  %173 = icmp eq %"struct.std::__1::__hash_node_base"* %172, null
  br i1 %173, label %199, label %174

174:                                              ; preds = %166
  %175 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %172, i64 1
  %176 = bitcast %"struct.std::__1::__hash_node_base"* %175 to i64*
  %177 = load i64, i64* %176, align 8
  %178 = call i64 @llvm.ctpop.i64(i64 %159) #12, !range !2
  %179 = icmp ugt i64 %178, 1
  br i1 %179, label %183, label %180

180:                                              ; preds = %174
  %181 = add i64 %159, -1
  %182 = and i64 %177, %181
  br label %187

183:                                              ; preds = %174
  %184 = icmp ult i64 %177, %159
  br i1 %184, label %187, label %185

185:                                              ; preds = %183
  %186 = urem i64 %177, %159
  br label %187

187:                                              ; preds = %180, %183, %185
  %188 = phi i64 [ %182, %180 ], [ %186, %185 ], [ %177, %183 ]
  %189 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %161, align 8
  %190 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %189, i64 %188
  %191 = bitcast %"struct.std::__1::__hash_node_base"** %190 to i8**
  br label %197

192:                                              ; preds = %158
  %193 = bitcast %"struct.std::__1::__hash_node_base"* %164 to i64*
  %194 = load i64, i64* %193, align 8
  %195 = bitcast i8* %116 to i64*
  store i64 %194, i64* %195, align 8
  %196 = bitcast %"struct.std::__1::__hash_node_base"* %164 to i8**
  br label %197

197:                                              ; preds = %187, %192
  %198 = phi i8** [ %196, %192 ], [ %191, %187 ]
  store i8* %116, i8** %198, align 8
  br label %199

199:                                              ; preds = %197, %166
  %200 = bitcast i8* %116 to %"struct.std::__1::__hash_node_base"*
  %201 = load i64, i64* %125, align 8
  %202 = add i64 %201, 1
  store i64 %202, i64* %125, align 8
  br label %203

203:                                              ; preds = %88, %94, %95, %102, %199
  %204 = phi i8 [ 1, %199 ], [ 0, %102 ], [ 0, %95 ], [ 0, %94 ], [ 0, %88 ]
  %205 = phi %"struct.std::__1::__hash_node_base"* [ %200, %199 ], [ %56, %102 ], [ %56, %95 ], [ %56, %94 ], [ %56, %88 ]
  %206 = insertvalue { %"struct.std::__1::__hash_node_base"*, i8 } undef, %"struct.std::__1::__hash_node_base"* %205, 0
  %207 = insertvalue { %"struct.std::__1::__hash_node_base"*, i8 } %206, i8 %204, 1
  ret { %"struct.std::__1::__hash_node_base"*, i8 } %207
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__112__hash_tableINS_17__hash_value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEN11dawn_native6vulkan11InstanceExtEEENS_22__unordered_map_hasherIS7_SB_NS_4hashIS7_EENS_8equal_toIS7_EELb1EEENS_21__unordered_map_equalIS7_SB_SG_SE_Lb1EEENS5_ISB_EEE6rehashEm(%"class.std::__1::__hash_table"*, i64) local_unnamed_addr #2 comdat align 2 {
  %3 = icmp eq i64 %1, 1
  br i1 %3, label %9, label %4

4:                                                ; preds = %2
  %5 = tail call i64 @llvm.ctpop.i64(i64 %1), !range !2
  %6 = icmp ugt i64 %5, 1
  br i1 %6, label %7, label %9

7:                                                ; preds = %4
  %8 = tail call i64 @_ZNSt3__112__next_primeEm(i64 %1) #12
  br label %9

9:                                                ; preds = %2, %4, %7
  %10 = phi i64 [ %8, %7 ], [ %1, %4 ], [ 2, %2 ]
  %11 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %12 = load i64, i64* %11, align 8
  %13 = icmp ugt i64 %10, %12
  br i1 %13, label %14, label %15

14:                                               ; preds = %9
  tail call void @_ZNSt3__112__hash_tableINS_17__hash_value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEN11dawn_native6vulkan11InstanceExtEEENS_22__unordered_map_hasherIS7_SB_NS_4hashIS7_EENS_8equal_toIS7_EELb1EEENS_21__unordered_map_equalIS7_SB_SG_SE_Lb1EEENS5_ISB_EEE8__rehashEm(%"class.std::__1::__hash_table"* %0, i64 %10)
  br label %45

15:                                               ; preds = %9
  %16 = icmp ult i64 %10, %12
  br i1 %16, label %17, label %45

17:                                               ; preds = %15
  %18 = icmp ugt i64 %12, 2
  %19 = tail call i64 @llvm.ctpop.i64(i64 %12) #12, !range !2
  %20 = icmp ult i64 %19, 2
  %21 = and i1 %18, %20
  %22 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 2, i32 0, i32 0
  %23 = load i64, i64* %22, align 8
  %24 = uitofp i64 %23 to float
  %25 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 3, i32 0, i32 0
  %26 = load float, float* %25, align 4
  %27 = fdiv float %24, %26
  %28 = tail call float @llvm.ceil.f32(float %27) #12
  %29 = fptoui float %28 to i64
  br i1 %21, label %30, label %37

30:                                               ; preds = %17
  %31 = icmp ult i64 %29, 2
  br i1 %31, label %39, label %32

32:                                               ; preds = %30
  %33 = add i64 %29, -1
  %34 = tail call i64 @llvm.ctlz.i64(i64 %33, i1 true) #12, !range !2
  %35 = sub nuw nsw i64 64, %34
  %36 = shl i64 1, %35
  br label %39

37:                                               ; preds = %17
  %38 = tail call i64 @_ZNSt3__112__next_primeEm(i64 %29) #12
  br label %39

39:                                               ; preds = %32, %30, %37
  %40 = phi i64 [ %38, %37 ], [ %36, %32 ], [ %29, %30 ]
  %41 = icmp ult i64 %10, %40
  %42 = select i1 %41, i64 %40, i64 %10
  %43 = icmp ult i64 %42, %12
  br i1 %43, label %44, label %45

44:                                               ; preds = %39
  tail call void @_ZNSt3__112__hash_tableINS_17__hash_value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEN11dawn_native6vulkan11InstanceExtEEENS_22__unordered_map_hasherIS7_SB_NS_4hashIS7_EENS_8equal_toIS7_EELb1EEENS_21__unordered_map_equalIS7_SB_SG_SE_Lb1EEENS5_ISB_EEE8__rehashEm(%"class.std::__1::__hash_table"* %0, i64 %42)
  br label %45

45:                                               ; preds = %15, %44, %39, %14
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZNSt3__121__murmur2_or_cityhashImLm64EEclEPKvm(%"struct.std::__1::__murmur2_or_cityhash"*, i8*, i64) local_unnamed_addr #8 comdat align 2 {
  %4 = icmp ult i64 %2, 33
  br i1 %4, label %5, label %50

5:                                                ; preds = %3
  %6 = icmp ult i64 %2, 17
  br i1 %6, label %7, label %9

7:                                                ; preds = %5
  %8 = tail call i64 @_ZNSt3__121__murmur2_or_cityhashImLm64EE18__hash_len_0_to_16EPKcm(i8* %1, i64 %2)
  br label %329

9:                                                ; preds = %5
  %10 = bitcast i8* %1 to i64*
  %11 = load i64, i64* %10, align 1
  %12 = mul i64 %11, -5435081209227447693
  %13 = getelementptr inbounds i8, i8* %1, i64 8
  %14 = bitcast i8* %13 to i64*
  %15 = load i64, i64* %14, align 1
  %16 = getelementptr inbounds i8, i8* %1, i64 %2
  %17 = getelementptr inbounds i8, i8* %16, i64 -8
  %18 = bitcast i8* %17 to i64*
  %19 = load i64, i64* %18, align 1
  %20 = mul i64 %19, -7286425919675154353
  %21 = getelementptr inbounds i8, i8* %16, i64 -16
  %22 = bitcast i8* %21 to i64*
  %23 = load i64, i64* %22, align 1
  %24 = mul i64 %23, -4348849565147123417
  %25 = sub i64 %12, %15
  %26 = lshr i64 %25, 43
  %27 = shl i64 %25, 21
  %28 = or i64 %27, %26
  %29 = lshr i64 %20, 30
  %30 = mul i64 %19, -4737503975807385600
  %31 = or i64 %29, %30
  %32 = add i64 %24, %28
  %33 = add i64 %32, %31
  %34 = xor i64 %15, -3942382747735136937
  %35 = lshr i64 %34, 20
  %36 = shl i64 %34, 44
  %37 = or i64 %36, %35
  %38 = add i64 %12, %2
  %39 = sub i64 %38, %20
  %40 = add i64 %39, %37
  %41 = xor i64 %33, %40
  %42 = mul i64 %41, -7070675565921424023
  %43 = lshr i64 %42, 47
  %44 = xor i64 %42, %40
  %45 = xor i64 %44, %43
  %46 = mul i64 %45, -7070675565921424023
  %47 = lshr i64 %46, 47
  %48 = xor i64 %47, %46
  %49 = mul i64 %48, -7070675565921424023
  br label %329

50:                                               ; preds = %3
  %51 = icmp ult i64 %2, 65
  br i1 %51, label %52, label %132

52:                                               ; preds = %50
  %53 = getelementptr inbounds i8, i8* %1, i64 24
  %54 = bitcast i8* %53 to i64*
  %55 = load i64, i64* %54, align 1
  %56 = bitcast i8* %1 to i64*
  %57 = load i64, i64* %56, align 1
  %58 = getelementptr inbounds i8, i8* %1, i64 %2
  %59 = getelementptr inbounds i8, i8* %58, i64 -16
  %60 = bitcast i8* %59 to i64*
  %61 = load i64, i64* %60, align 1
  %62 = add i64 %61, %2
  %63 = mul i64 %62, -4348849565147123417
  %64 = add i64 %63, %57
  %65 = add i64 %64, %55
  %66 = lshr i64 %65, 52
  %67 = shl i64 %65, 12
  %68 = or i64 %67, %66
  %69 = lshr i64 %64, 37
  %70 = shl i64 %64, 27
  %71 = or i64 %70, %69
  %72 = getelementptr inbounds i8, i8* %1, i64 8
  %73 = bitcast i8* %72 to i64*
  %74 = load i64, i64* %73, align 1
  %75 = add i64 %64, %74
  %76 = lshr i64 %75, 7
  %77 = shl i64 %75, 57
  %78 = or i64 %77, %76
  %79 = getelementptr inbounds i8, i8* %1, i64 16
  %80 = bitcast i8* %79 to i64*
  %81 = load i64, i64* %80, align 1
  %82 = add i64 %75, %81
  %83 = lshr i64 %82, 31
  %84 = shl i64 %82, 33
  %85 = or i64 %84, %83
  %86 = add i64 %78, %71
  %87 = add i64 %86, %68
  %88 = add i64 %87, %85
  %89 = getelementptr inbounds i8, i8* %58, i64 -32
  %90 = bitcast i8* %89 to i64*
  %91 = load i64, i64* %90, align 1
  %92 = add i64 %91, %81
  %93 = getelementptr inbounds i8, i8* %58, i64 -8
  %94 = bitcast i8* %93 to i64*
  %95 = load i64, i64* %94, align 1
  %96 = add i64 %95, %55
  %97 = add i64 %96, %92
  %98 = lshr i64 %97, 52
  %99 = shl i64 %97, 12
  %100 = or i64 %99, %98
  %101 = lshr i64 %92, 37
  %102 = shl i64 %92, 27
  %103 = or i64 %102, %101
  %104 = getelementptr inbounds i8, i8* %58, i64 -24
  %105 = bitcast i8* %104 to i64*
  %106 = load i64, i64* %105, align 1
  %107 = add i64 %106, %92
  %108 = lshr i64 %107, 7
  %109 = shl i64 %107, 57
  %110 = or i64 %109, %108
  %111 = add i64 %107, %61
  %112 = add i64 %111, %96
  %113 = lshr i64 %111, 31
  %114 = shl i64 %111, 33
  %115 = or i64 %114, %113
  %116 = add i64 %82, %55
  %117 = add i64 %116, %103
  %118 = add i64 %117, %110
  %119 = add i64 %118, %100
  %120 = add i64 %119, %115
  %121 = mul i64 %120, -7286425919675154353
  %122 = add i64 %112, %88
  %123 = mul i64 %122, -4348849565147123417
  %124 = add i64 %121, %123
  %125 = lshr i64 %124, 47
  %126 = xor i64 %125, %124
  %127 = mul i64 %126, -4348849565147123417
  %128 = add i64 %127, %88
  %129 = lshr i64 %128, 47
  %130 = xor i64 %129, %128
  %131 = mul i64 %130, -7286425919675154353
  br label %329

132:                                              ; preds = %50
  %133 = getelementptr inbounds i8, i8* %1, i64 %2
  %134 = getelementptr inbounds i8, i8* %133, i64 -40
  %135 = bitcast i8* %134 to i64*
  %136 = load i64, i64* %135, align 1
  %137 = getelementptr inbounds i8, i8* %133, i64 -16
  %138 = bitcast i8* %137 to i64*
  %139 = load i64, i64* %138, align 1
  %140 = getelementptr inbounds i8, i8* %133, i64 -56
  %141 = bitcast i8* %140 to i64*
  %142 = load i64, i64* %141, align 1
  %143 = add i64 %142, %139
  %144 = getelementptr inbounds i8, i8* %133, i64 -48
  %145 = bitcast i8* %144 to i64*
  %146 = load i64, i64* %145, align 1
  %147 = add i64 %146, %2
  %148 = getelementptr inbounds i8, i8* %133, i64 -24
  %149 = bitcast i8* %148 to i64*
  %150 = load i64, i64* %149, align 1
  %151 = xor i64 %150, %147
  %152 = mul i64 %151, -7070675565921424023
  %153 = lshr i64 %152, 47
  %154 = xor i64 %152, %150
  %155 = xor i64 %154, %153
  %156 = mul i64 %155, -7070675565921424023
  %157 = lshr i64 %156, 47
  %158 = xor i64 %157, %156
  %159 = mul i64 %158, -7070675565921424023
  %160 = getelementptr inbounds i8, i8* %133, i64 -64
  %161 = bitcast i8* %160 to i64*
  %162 = load i64, i64* %161, align 1
  %163 = add i64 %162, %2
  %164 = add i64 %136, %163
  %165 = add i64 %164, %159
  %166 = lshr i64 %165, 21
  %167 = shl i64 %165, 43
  %168 = or i64 %167, %166
  %169 = add i64 %163, %142
  %170 = add i64 %169, %146
  %171 = lshr i64 %170, 44
  %172 = shl i64 %170, 20
  %173 = or i64 %172, %171
  %174 = add i64 %170, %136
  %175 = add i64 %173, %163
  %176 = add i64 %175, %168
  %177 = getelementptr inbounds i8, i8* %133, i64 -32
  %178 = add i64 %143, -5435081209227447693
  %179 = bitcast i8* %177 to i64*
  %180 = load i64, i64* %179, align 1
  %181 = getelementptr inbounds i8, i8* %177, i64 24
  %182 = bitcast i8* %181 to i64*
  %183 = load i64, i64* %182, align 1
  %184 = add i64 %178, %180
  %185 = add i64 %184, %136
  %186 = add i64 %185, %183
  %187 = lshr i64 %186, 21
  %188 = shl i64 %186, 43
  %189 = or i64 %188, %187
  %190 = add i64 %184, %150
  %191 = add i64 %190, %139
  %192 = lshr i64 %191, 44
  %193 = shl i64 %191, 20
  %194 = or i64 %193, %192
  %195 = add i64 %191, %183
  %196 = add i64 %194, %184
  %197 = add i64 %196, %189
  %198 = mul i64 %136, -5435081209227447693
  %199 = bitcast i8* %1 to i64*
  %200 = load i64, i64* %199, align 1
  %201 = add i64 %200, %198
  %202 = add i64 %2, -1
  %203 = and i64 %202, -64
  br label %204

204:                                              ; preds = %292, %132
  %205 = phi i64 [ %200, %132 ], [ %294, %292 ]
  %206 = phi i64 [ %197, %132 ], [ %288, %292 ]
  %207 = phi i64 [ %195, %132 ], [ %286, %292 ]
  %208 = phi i64 [ %174, %132 ], [ %264, %292 ]
  %209 = phi i64 [ %176, %132 ], [ %266, %292 ]
  %210 = phi i64 [ %159, %132 ], [ %234, %292 ]
  %211 = phi i64 [ %201, %132 ], [ %244, %292 ]
  %212 = phi i64 [ %203, %132 ], [ %290, %292 ]
  %213 = phi i8* [ %1, %132 ], [ %289, %292 ]
  %214 = phi i64 [ %143, %132 ], [ %239, %292 ]
  %215 = getelementptr inbounds i8, i8* %213, i64 8
  %216 = bitcast i8* %215 to i64*
  %217 = load i64, i64* %216, align 1
  %218 = add i64 %211, %208
  %219 = add i64 %218, %214
  %220 = add i64 %219, %217
  %221 = lshr i64 %220, 37
  %222 = shl i64 %220, 27
  %223 = or i64 %222, %221
  %224 = mul i64 %223, -5435081209227447693
  %225 = add i64 %214, %209
  %226 = getelementptr inbounds i8, i8* %213, i64 48
  %227 = bitcast i8* %226 to i64*
  %228 = load i64, i64* %227, align 1
  %229 = add i64 %225, %228
  %230 = lshr i64 %229, 42
  %231 = shl i64 %229, 22
  %232 = or i64 %231, %230
  %233 = mul i64 %232, -5435081209227447693
  %234 = xor i64 %224, %206
  %235 = getelementptr inbounds i8, i8* %213, i64 40
  %236 = bitcast i8* %235 to i64*
  %237 = load i64, i64* %236, align 1
  %238 = add i64 %237, %208
  %239 = add i64 %238, %233
  %240 = add i64 %210, %207
  %241 = lshr i64 %240, 33
  %242 = shl i64 %240, 31
  %243 = or i64 %242, %241
  %244 = mul i64 %243, -5435081209227447693
  %245 = mul i64 %209, -5435081209227447693
  %246 = getelementptr inbounds i8, i8* %213, i64 16
  %247 = bitcast i8* %246 to i64*
  %248 = load i64, i64* %247, align 1
  %249 = getelementptr inbounds i8, i8* %213, i64 24
  %250 = bitcast i8* %249 to i64*
  %251 = load i64, i64* %250, align 1
  %252 = add i64 %205, %245
  %253 = add i64 %252, %207
  %254 = add i64 %253, %251
  %255 = add i64 %254, %234
  %256 = lshr i64 %255, 21
  %257 = shl i64 %255, 43
  %258 = or i64 %257, %256
  %259 = add i64 %252, %217
  %260 = add i64 %259, %248
  %261 = lshr i64 %260, 44
  %262 = shl i64 %260, 20
  %263 = or i64 %262, %261
  %264 = add i64 %260, %251
  %265 = add i64 %263, %252
  %266 = add i64 %265, %258
  %267 = getelementptr inbounds i8, i8* %213, i64 32
  %268 = add i64 %244, %206
  %269 = add i64 %239, %248
  %270 = bitcast i8* %267 to i64*
  %271 = load i64, i64* %270, align 1
  %272 = getelementptr inbounds i8, i8* %213, i64 56
  %273 = bitcast i8* %272 to i64*
  %274 = load i64, i64* %273, align 1
  %275 = add i64 %268, %271
  %276 = add i64 %269, %275
  %277 = add i64 %276, %274
  %278 = lshr i64 %277, 21
  %279 = shl i64 %277, 43
  %280 = or i64 %279, %278
  %281 = add i64 %275, %237
  %282 = add i64 %281, %228
  %283 = lshr i64 %282, 44
  %284 = shl i64 %282, 20
  %285 = or i64 %284, %283
  %286 = add i64 %282, %274
  %287 = add i64 %285, %275
  %288 = add i64 %287, %280
  %289 = getelementptr inbounds i8, i8* %213, i64 64
  %290 = add i64 %212, -64
  %291 = icmp eq i64 %290, 0
  br i1 %291, label %295, label %292

292:                                              ; preds = %204
  %293 = bitcast i8* %289 to i64*
  %294 = load i64, i64* %293, align 1
  br label %204

295:                                              ; preds = %204
  %296 = xor i64 %286, %264
  %297 = mul i64 %296, -7070675565921424023
  %298 = lshr i64 %297, 47
  %299 = xor i64 %297, %286
  %300 = xor i64 %299, %298
  %301 = mul i64 %300, -7070675565921424023
  %302 = lshr i64 %301, 47
  %303 = xor i64 %302, %301
  %304 = mul i64 %303, -7070675565921424023
  %305 = lshr i64 %239, 47
  %306 = xor i64 %305, %239
  %307 = mul i64 %306, -5435081209227447693
  %308 = add i64 %307, %234
  %309 = add i64 %308, %304
  %310 = xor i64 %288, %266
  %311 = mul i64 %310, -7070675565921424023
  %312 = lshr i64 %311, 47
  %313 = xor i64 %311, %288
  %314 = xor i64 %313, %312
  %315 = mul i64 %314, -7070675565921424023
  %316 = lshr i64 %315, 47
  %317 = xor i64 %316, %315
  %318 = mul i64 %317, -7070675565921424023
  %319 = add i64 %318, %244
  %320 = xor i64 %319, %309
  %321 = mul i64 %320, -7070675565921424023
  %322 = lshr i64 %321, 47
  %323 = xor i64 %321, %319
  %324 = xor i64 %323, %322
  %325 = mul i64 %324, -7070675565921424023
  %326 = lshr i64 %325, 47
  %327 = xor i64 %326, %325
  %328 = mul i64 %327, -7070675565921424023
  br label %329

329:                                              ; preds = %295, %52, %9, %7
  %330 = phi i64 [ %8, %7 ], [ %49, %9 ], [ %131, %52 ], [ %328, %295 ]
  ret i64 %330
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZNSt3__121__murmur2_or_cityhashImLm64EE18__hash_len_0_to_16EPKcm(i8*, i64) local_unnamed_addr #2 comdat align 2 {
  %3 = icmp ugt i64 %1, 8
  br i1 %3, label %4, label %28

4:                                                ; preds = %2
  %5 = bitcast i8* %0 to i64*
  %6 = load i64, i64* %5, align 1
  %7 = getelementptr inbounds i8, i8* %0, i64 %1
  %8 = getelementptr inbounds i8, i8* %7, i64 -8
  %9 = bitcast i8* %8 to i64*
  %10 = load i64, i64* %9, align 1
  %11 = add i64 %10, %1
  %12 = and i64 %1, 4294967295
  %13 = lshr i64 %11, %12
  %14 = sub i64 64, %1
  %15 = and i64 %14, 4294967295
  %16 = shl i64 %11, %15
  %17 = or i64 %16, %13
  %18 = xor i64 %17, %6
  %19 = mul i64 %18, -7070675565921424023
  %20 = lshr i64 %19, 47
  %21 = xor i64 %19, %17
  %22 = xor i64 %21, %20
  %23 = mul i64 %22, -7070675565921424023
  %24 = lshr i64 %23, 47
  %25 = xor i64 %24, %23
  %26 = mul i64 %25, -7070675565921424023
  %27 = xor i64 %26, %10
  br label %74

28:                                               ; preds = %2
  %29 = icmp ugt i64 %1, 3
  br i1 %29, label %30, label %50

30:                                               ; preds = %28
  %31 = bitcast i8* %0 to i32*
  %32 = load i32, i32* %31, align 1
  %33 = getelementptr inbounds i8, i8* %0, i64 %1
  %34 = getelementptr inbounds i8, i8* %33, i64 -4
  %35 = bitcast i8* %34 to i32*
  %36 = load i32, i32* %35, align 1
  %37 = shl i32 %32, 3
  %38 = zext i32 %37 to i64
  %39 = add nuw nsw i64 %38, %1
  %40 = zext i32 %36 to i64
  %41 = xor i64 %39, %40
  %42 = mul i64 %41, -7070675565921424023
  %43 = lshr i64 %42, 47
  %44 = xor i64 %42, %40
  %45 = xor i64 %44, %43
  %46 = mul i64 %45, -7070675565921424023
  %47 = lshr i64 %46, 47
  %48 = xor i64 %47, %46
  %49 = mul i64 %48, -7070675565921424023
  br label %74

50:                                               ; preds = %28
  %51 = icmp eq i64 %1, 0
  br i1 %51, label %74, label %52

52:                                               ; preds = %50
  %53 = load i8, i8* %0, align 1
  %54 = lshr i64 %1, 1
  %55 = getelementptr inbounds i8, i8* %0, i64 %54
  %56 = load i8, i8* %55, align 1
  %57 = add nsw i64 %1, -1
  %58 = getelementptr inbounds i8, i8* %0, i64 %57
  %59 = load i8, i8* %58, align 1
  %60 = zext i8 %53 to i64
  %61 = zext i8 %56 to i64
  %62 = shl nuw nsw i64 %61, 8
  %63 = or i64 %62, %60
  %64 = zext i8 %59 to i64
  %65 = shl nuw nsw i64 %64, 2
  %66 = add nuw nsw i64 %65, %1
  %67 = mul i64 %63, -7286425919675154353
  %68 = and i64 %66, 4294967295
  %69 = mul i64 %68, -3942382747735136937
  %70 = xor i64 %69, %67
  %71 = lshr i64 %70, 47
  %72 = xor i64 %71, %70
  %73 = mul i64 %72, -7286425919675154353
  br label %74

74:                                               ; preds = %50, %52, %30, %4
  %75 = phi i64 [ %27, %4 ], [ %49, %30 ], [ %73, %52 ], [ -7286425919675154353, %50 ]
  ret i64 %75
}

declare i64 @_ZNSt3__112__next_primeEm(i64) local_unnamed_addr #9

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__112__hash_tableINS_17__hash_value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEN11dawn_native6vulkan11InstanceExtEEENS_22__unordered_map_hasherIS7_SB_NS_4hashIS7_EENS_8equal_toIS7_EELb1EEENS_21__unordered_map_equalIS7_SB_SG_SE_Lb1EEENS5_ISB_EEE8__rehashEm(%"class.std::__1::__hash_table"*, i64) local_unnamed_addr #2 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 0, i32 0, i32 1, i32 0
  %4 = icmp eq i64 %1, 0
  br i1 %4, label %186, label %5

5:                                                ; preds = %2
  %6 = icmp ugt i64 %1, 2305843009213693951
  br i1 %6, label %7, label %8

7:                                                ; preds = %5
  tail call void @abort() #13
  unreachable

8:                                                ; preds = %5
  %9 = shl i64 %1, 3
  %10 = tail call i8* @_Znwm(i64 %9) #14
  %11 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %12 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %11, align 8
  %13 = bitcast %"class.std::__1::__hash_table"* %0 to i8**
  store i8* %10, i8** %13, align 8
  %14 = icmp eq %"struct.std::__1::__hash_node_base"** %12, null
  br i1 %14, label %17, label %15

15:                                               ; preds = %8
  %16 = bitcast %"struct.std::__1::__hash_node_base"** %12 to i8*
  tail call void @_ZdlPv(i8* %16) #14
  br label %17

17:                                               ; preds = %15, %8
  %18 = getelementptr inbounds %"class.std::__1::__bucket_list_deallocator", %"class.std::__1::__bucket_list_deallocator"* %3, i64 0, i32 0, i32 0, i32 0
  store i64 %1, i64* %18, align 8
  %19 = add i64 %1, -1
  %20 = and i64 %1, 3
  %21 = icmp ult i64 %19, 3
  br i1 %21, label %24, label %22

22:                                               ; preds = %17
  %23 = sub i64 %1, %20
  br label %40

24:                                               ; preds = %40, %17
  %25 = phi i64 [ 0, %17 ], [ %54, %40 ]
  %26 = icmp eq i64 %20, 0
  br i1 %26, label %35, label %27

27:                                               ; preds = %24, %27
  %28 = phi i64 [ %32, %27 ], [ %25, %24 ]
  %29 = phi i64 [ %33, %27 ], [ %20, %24 ]
  %30 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %11, align 8
  %31 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %30, i64 %28
  store %"struct.std::__1::__hash_node_base"* null, %"struct.std::__1::__hash_node_base"** %31, align 8
  %32 = add nuw i64 %28, 1
  %33 = add i64 %29, -1
  %34 = icmp eq i64 %33, 0
  br i1 %34, label %35, label %27, !llvm.loop !6

35:                                               ; preds = %27, %24
  %36 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 1, i32 0, i32 0
  %37 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %36, i64 0, i32 0
  %38 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %37, align 8
  %39 = icmp eq %"struct.std::__1::__hash_node_base"* %38, null
  br i1 %39, label %194, label %57

40:                                               ; preds = %40, %22
  %41 = phi i64 [ 0, %22 ], [ %54, %40 ]
  %42 = phi i64 [ %23, %22 ], [ %55, %40 ]
  %43 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %11, align 8
  %44 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %43, i64 %41
  store %"struct.std::__1::__hash_node_base"* null, %"struct.std::__1::__hash_node_base"** %44, align 8
  %45 = or i64 %41, 1
  %46 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %11, align 8
  %47 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %46, i64 %45
  store %"struct.std::__1::__hash_node_base"* null, %"struct.std::__1::__hash_node_base"** %47, align 8
  %48 = or i64 %41, 2
  %49 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %11, align 8
  %50 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %49, i64 %48
  store %"struct.std::__1::__hash_node_base"* null, %"struct.std::__1::__hash_node_base"** %50, align 8
  %51 = or i64 %41, 3
  %52 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %11, align 8
  %53 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %52, i64 %51
  store %"struct.std::__1::__hash_node_base"* null, %"struct.std::__1::__hash_node_base"** %53, align 8
  %54 = add nuw i64 %41, 4
  %55 = add i64 %42, -4
  %56 = icmp eq i64 %55, 0
  br i1 %56, label %24, label %40

57:                                               ; preds = %35
  %58 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %38, i64 1
  %59 = bitcast %"struct.std::__1::__hash_node_base"* %58 to i64*
  %60 = load i64, i64* %59, align 8
  %61 = tail call i64 @llvm.ctpop.i64(i64 %1) #12, !range !2
  %62 = icmp ugt i64 %61, 1
  br i1 %62, label %66, label %63

63:                                               ; preds = %57
  %64 = add i64 %1, -1
  %65 = and i64 %60, %64
  br label %70

66:                                               ; preds = %57
  %67 = icmp ult i64 %60, %1
  br i1 %67, label %70, label %68

68:                                               ; preds = %66
  %69 = urem i64 %60, %1
  br label %70

70:                                               ; preds = %63, %66, %68
  %71 = phi i64 [ %65, %63 ], [ %69, %68 ], [ %60, %66 ]
  %72 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %11, align 8
  %73 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %72, i64 %71
  store %"struct.std::__1::__hash_node_base"* %36, %"struct.std::__1::__hash_node_base"** %73, align 8
  %74 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %38, i64 0, i32 0
  %75 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %74, align 8
  %76 = icmp eq %"struct.std::__1::__hash_node_base"* %75, null
  br i1 %76, label %194, label %77

77:                                               ; preds = %70
  %78 = add i64 %1, -1
  br label %79

79:                                               ; preds = %77, %180
  %80 = phi %"struct.std::__1::__hash_node_base"* [ %75, %77 ], [ %184, %180 ]
  %81 = phi i64 [ %71, %77 ], [ %182, %180 ]
  %82 = phi %"struct.std::__1::__hash_node_base"* [ %38, %77 ], [ %181, %180 ]
  %83 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %80, i64 1
  %84 = bitcast %"struct.std::__1::__hash_node_base"* %83 to i64*
  %85 = load i64, i64* %84, align 8
  br i1 %62, label %88, label %86

86:                                               ; preds = %79
  %87 = and i64 %85, %78
  br label %92

88:                                               ; preds = %79
  %89 = icmp ult i64 %85, %1
  br i1 %89, label %92, label %90

90:                                               ; preds = %88
  %91 = urem i64 %85, %1
  br label %92

92:                                               ; preds = %86, %88, %90
  %93 = phi i64 [ %87, %86 ], [ %91, %90 ], [ %85, %88 ]
  %94 = icmp eq i64 %93, %81
  br i1 %94, label %180, label %95

95:                                               ; preds = %92
  %96 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %11, align 8
  %97 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %96, i64 %93
  %98 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %97, align 8
  %99 = icmp eq %"struct.std::__1::__hash_node_base"* %98, null
  br i1 %99, label %118, label %100

100:                                              ; preds = %95
  %101 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %80, i64 0, i32 0
  %102 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %101, align 8
  %103 = icmp eq %"struct.std::__1::__hash_node_base"* %102, null
  br i1 %103, label %166, label %104

104:                                              ; preds = %100
  %105 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %80, i64 2
  %106 = bitcast %"struct.std::__1::__hash_node_base"* %105 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %107 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %106, i64 0, i32 1, i32 0
  %108 = load i8, i8* %107, align 1
  %109 = icmp slt i8 %108, 0
  %110 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %80, i64 3
  %111 = bitcast %"struct.std::__1::__hash_node_base"* %110 to i64*
  %112 = load i64, i64* %111, align 8
  %113 = zext i8 %108 to i64
  %114 = select i1 %109, i64 %112, i64 %113
  %115 = bitcast %"struct.std::__1::__hash_node_base"* %105 to i8**
  %116 = bitcast %"struct.std::__1::__hash_node_base"* %105 to i8*
  %117 = icmp eq i64 %114, 0
  br label %119

118:                                              ; preds = %95
  store %"struct.std::__1::__hash_node_base"* %82, %"struct.std::__1::__hash_node_base"** %97, align 8
  br label %180

119:                                              ; preds = %104, %162
  %120 = phi %"struct.std::__1::__hash_node_base"* [ %102, %104 ], [ %164, %162 ]
  %121 = phi %"struct.std::__1::__hash_node_base"* [ %80, %104 ], [ %120, %162 ]
  %122 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %120, i64 2
  %123 = bitcast %"struct.std::__1::__hash_node_base"* %122 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %124 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %123, i64 0, i32 1, i32 0
  %125 = load i8, i8* %124, align 1
  %126 = icmp slt i8 %125, 0
  %127 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %120, i64 3
  %128 = bitcast %"struct.std::__1::__hash_node_base"* %127 to i64*
  %129 = load i64, i64* %128, align 8
  %130 = zext i8 %125 to i64
  %131 = select i1 %126, i64 %129, i64 %130
  %132 = icmp eq i64 %114, %131
  br i1 %132, label %133, label %166

133:                                              ; preds = %119
  %134 = load i8*, i8** %115, align 8
  %135 = select i1 %109, i8* %134, i8* %116
  %136 = bitcast %"struct.std::__1::__hash_node_base"* %122 to i8**
  %137 = load i8*, i8** %136, align 8
  %138 = bitcast %"struct.std::__1::__hash_node_base"* %122 to i8*
  %139 = select i1 %126, i8* %137, i8* %138
  br i1 %109, label %146, label %140

140:                                              ; preds = %133
  br i1 %117, label %162, label %141

141:                                              ; preds = %140
  %142 = ptrtoint i8* %134 to i64
  %143 = trunc i64 %142 to i8
  %144 = load i8, i8* %139, align 1
  %145 = icmp eq i8 %144, %143
  br i1 %145, label %147, label %166

146:                                              ; preds = %133
  br i1 %117, label %162, label %159

147:                                              ; preds = %141, %154
  %148 = phi i64 [ %151, %154 ], [ %113, %141 ]
  %149 = phi i8* [ %152, %154 ], [ %116, %141 ]
  %150 = phi i8* [ %155, %154 ], [ %139, %141 ]
  %151 = add i64 %148, -1
  %152 = getelementptr inbounds i8, i8* %149, i64 1
  %153 = icmp eq i64 %151, 0
  br i1 %153, label %162, label %154

154:                                              ; preds = %147
  %155 = getelementptr inbounds i8, i8* %150, i64 1
  %156 = load i8, i8* %152, align 1
  %157 = load i8, i8* %155, align 1
  %158 = icmp eq i8 %156, %157
  br i1 %158, label %147, label %166

159:                                              ; preds = %146
  %160 = tail call i32 @bcmp(i8* %135, i8* %139, i64 %114) #12
  %161 = icmp eq i32 %160, 0
  br i1 %161, label %162, label %166

162:                                              ; preds = %147, %140, %146, %159
  %163 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %120, i64 0, i32 0
  %164 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %163, align 8
  %165 = icmp eq %"struct.std::__1::__hash_node_base"* %164, null
  br i1 %165, label %166, label %119

166:                                              ; preds = %159, %162, %119, %141, %154, %100
  %167 = phi %"struct.std::__1::__hash_node_base"* [ %80, %100 ], [ %121, %154 ], [ %121, %159 ], [ %120, %162 ], [ %121, %119 ], [ %121, %141 ]
  %168 = bitcast %"struct.std::__1::__hash_node_base"* %167 to i64*
  %169 = load i64, i64* %168, align 8
  %170 = bitcast %"struct.std::__1::__hash_node_base"* %82 to i64*
  store i64 %169, i64* %170, align 8
  %171 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %11, align 8
  %172 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %171, i64 %93
  %173 = bitcast %"struct.std::__1::__hash_node_base"** %172 to i64**
  %174 = load i64*, i64** %173, align 8
  %175 = load i64, i64* %174, align 8
  store i64 %175, i64* %168, align 8
  %176 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %11, align 8
  %177 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %176, i64 %93
  %178 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %177, align 8
  %179 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %178, i64 0, i32 0
  store %"struct.std::__1::__hash_node_base"* %80, %"struct.std::__1::__hash_node_base"** %179, align 8
  br label %180

180:                                              ; preds = %92, %166, %118
  %181 = phi %"struct.std::__1::__hash_node_base"* [ %80, %118 ], [ %82, %166 ], [ %80, %92 ]
  %182 = phi i64 [ %93, %118 ], [ %81, %166 ], [ %81, %92 ]
  %183 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %181, i64 0, i32 0
  %184 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %183, align 8
  %185 = icmp eq %"struct.std::__1::__hash_node_base"* %184, null
  br i1 %185, label %194, label %79

186:                                              ; preds = %2
  %187 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %188 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %187, align 8
  store %"struct.std::__1::__hash_node_base"** null, %"struct.std::__1::__hash_node_base"*** %187, align 8
  %189 = icmp eq %"struct.std::__1::__hash_node_base"** %188, null
  br i1 %189, label %192, label %190

190:                                              ; preds = %186
  %191 = bitcast %"struct.std::__1::__hash_node_base"** %188 to i8*
  tail call void @_ZdlPv(i8* %191) #14
  br label %192

192:                                              ; preds = %186, %190
  %193 = getelementptr inbounds %"class.std::__1::__bucket_list_deallocator", %"class.std::__1::__bucket_list_deallocator"* %3, i64 0, i32 0, i32 0, i32 0
  store i64 0, i64* %193, align 8
  br label %194

194:                                              ; preds = %180, %70, %35, %192
  ret void
}

; Function Attrs: nounwind readnone speculatable
declare i64 @llvm.ctlz.i64(i64, i1 immarg) #10

; Function Attrs: nounwind readnone speculatable
declare float @llvm.ceil.f32(float) #10

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.std::__1::__hash_node_base.25"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEN11dawn_native6vulkan9DeviceExtEEENS_22__unordered_map_hasherIS7_SB_NS_4hashIS7_EENS_8equal_toIS7_EELb1EEENS_21__unordered_map_equalIS7_SB_SG_SE_Lb1EEENS5_ISB_EEE25__emplace_unique_key_argsIS7_JRKNS_21piecewise_construct_tENS_5tupleIJOS7_EEENSQ_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeISB_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table.21"*, %"class.std::__1::basic_string"* dereferenceable(24), %"struct.std::__1::piecewise_construct_t"* dereferenceable(1), %"class.std::__1::tuple"* dereferenceable(8), %"class.std::__1::tuple.77"* dereferenceable(1)) local_unnamed_addr #2 comdat align 2 {
  %6 = alloca %"struct.std::__1::__murmur2_or_cityhash", align 1
  %7 = bitcast %"class.std::__1::basic_string"* %1 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %8 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %7, i64 0, i32 1, i32 0
  %9 = load i8, i8* %8, align 1
  %10 = icmp slt i8 %9, 0
  %11 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %12 = load i8*, i8** %11, align 8
  %13 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %14 = load i64, i64* %13, align 8
  %15 = bitcast %"class.std::__1::basic_string"* %1 to i8*
  %16 = zext i8 %9 to i64
  %17 = select i1 %10, i8* %12, i8* %15
  %18 = select i1 %10, i64 %14, i64 %16
  %19 = getelementptr inbounds %"struct.std::__1::__murmur2_or_cityhash", %"struct.std::__1::__murmur2_or_cityhash"* %6, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %19) #12
  %20 = call i64 @_ZNSt3__121__murmur2_or_cityhashImLm64EEclEPKvm(%"struct.std::__1::__murmur2_or_cityhash"* nonnull %6, i8* %17, i64 %18) #12
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %19) #12
  %21 = getelementptr inbounds %"class.std::__1::__hash_table.21", %"class.std::__1::__hash_table.21"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %22 = load i64, i64* %21, align 8
  %23 = icmp eq i64 %22, 0
  br i1 %23, label %114, label %24

24:                                               ; preds = %5
  %25 = call i64 @llvm.ctpop.i64(i64 %22) #12, !range !2
  %26 = icmp ugt i64 %25, 1
  br i1 %26, label %30, label %27

27:                                               ; preds = %24
  %28 = add i64 %22, -1
  %29 = and i64 %28, %20
  br label %34

30:                                               ; preds = %24
  %31 = icmp ult i64 %20, %22
  br i1 %31, label %34, label %32

32:                                               ; preds = %30
  %33 = urem i64 %20, %22
  br label %34

34:                                               ; preds = %27, %30, %32
  %35 = phi i64 [ %29, %27 ], [ %33, %32 ], [ %20, %30 ]
  %36 = getelementptr inbounds %"class.std::__1::__hash_table.21", %"class.std::__1::__hash_table.21"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %37 = load %"struct.std::__1::__hash_node_base.25"**, %"struct.std::__1::__hash_node_base.25"*** %36, align 8
  %38 = getelementptr inbounds %"struct.std::__1::__hash_node_base.25"*, %"struct.std::__1::__hash_node_base.25"** %37, i64 %35
  %39 = load %"struct.std::__1::__hash_node_base.25"*, %"struct.std::__1::__hash_node_base.25"** %38, align 8
  %40 = icmp eq %"struct.std::__1::__hash_node_base.25"* %39, null
  br i1 %40, label %114, label %41

41:                                               ; preds = %34
  %42 = getelementptr inbounds %"struct.std::__1::__hash_node_base.25", %"struct.std::__1::__hash_node_base.25"* %39, i64 0, i32 0
  %43 = load %"struct.std::__1::__hash_node_base.25"*, %"struct.std::__1::__hash_node_base.25"** %42, align 8
  %44 = icmp eq %"struct.std::__1::__hash_node_base.25"* %43, null
  br i1 %44, label %114, label %45

45:                                               ; preds = %41
  %46 = add i64 %22, -1
  %47 = load i8, i8* %8, align 1
  %48 = icmp slt i8 %47, 0
  %49 = load i64, i64* %13, align 8
  %50 = zext i8 %47 to i64
  %51 = select i1 %48, i64 %49, i64 %50
  %52 = load i8*, i8** %11, align 8
  %53 = select i1 %48, i8* %52, i8* %15
  %54 = icmp eq i64 %51, 0
  br label %55

55:                                               ; preds = %45, %98
  %56 = phi %"struct.std::__1::__hash_node_base.25"* [ %43, %45 ], [ %100, %98 ]
  %57 = getelementptr inbounds %"struct.std::__1::__hash_node_base.25", %"struct.std::__1::__hash_node_base.25"* %56, i64 1
  %58 = bitcast %"struct.std::__1::__hash_node_base.25"* %57 to i64*
  %59 = load i64, i64* %58, align 8
  %60 = icmp eq i64 %59, %20
  br i1 %60, label %71, label %61

61:                                               ; preds = %55
  br i1 %26, label %64, label %62

62:                                               ; preds = %61
  %63 = and i64 %59, %46
  br label %68

64:                                               ; preds = %61
  %65 = icmp ult i64 %59, %22
  br i1 %65, label %68, label %66

66:                                               ; preds = %64
  %67 = urem i64 %59, %22
  br label %68

68:                                               ; preds = %62, %64, %66
  %69 = phi i64 [ %63, %62 ], [ %67, %66 ], [ %59, %64 ]
  %70 = icmp eq i64 %69, %35
  br i1 %70, label %71, label %114

71:                                               ; preds = %55, %68
  %72 = getelementptr inbounds %"struct.std::__1::__hash_node_base.25", %"struct.std::__1::__hash_node_base.25"* %56, i64 2
  %73 = bitcast %"struct.std::__1::__hash_node_base.25"* %72 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %74 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %73, i64 0, i32 1, i32 0
  %75 = load i8, i8* %74, align 1
  %76 = icmp slt i8 %75, 0
  %77 = getelementptr inbounds %"struct.std::__1::__hash_node_base.25", %"struct.std::__1::__hash_node_base.25"* %56, i64 3
  %78 = bitcast %"struct.std::__1::__hash_node_base.25"* %77 to i64*
  %79 = load i64, i64* %78, align 8
  %80 = zext i8 %75 to i64
  %81 = select i1 %76, i64 %79, i64 %80
  %82 = icmp eq i64 %81, %51
  br i1 %82, label %83, label %98

83:                                               ; preds = %71
  %84 = bitcast %"struct.std::__1::__hash_node_base.25"* %72 to i8**
  %85 = load i8*, i8** %84, align 8
  %86 = bitcast %"struct.std::__1::__hash_node_base.25"* %72 to i8*
  %87 = select i1 %76, i8* %85, i8* %86
  br i1 %76, label %94, label %88

88:                                               ; preds = %83
  br i1 %54, label %203, label %89

89:                                               ; preds = %88
  %90 = ptrtoint i8* %85 to i64
  %91 = trunc i64 %90 to i8
  %92 = load i8, i8* %53, align 1
  %93 = icmp eq i8 %92, %91
  br i1 %93, label %102, label %98

94:                                               ; preds = %83
  br i1 %54, label %203, label %95

95:                                               ; preds = %94
  %96 = call i32 @bcmp(i8* %87, i8* %53, i64 %51) #12
  %97 = icmp eq i32 %96, 0
  br i1 %97, label %203, label %98

98:                                               ; preds = %109, %89, %71, %95
  %99 = getelementptr inbounds %"struct.std::__1::__hash_node_base.25", %"struct.std::__1::__hash_node_base.25"* %56, i64 0, i32 0
  %100 = load %"struct.std::__1::__hash_node_base.25"*, %"struct.std::__1::__hash_node_base.25"** %99, align 8
  %101 = icmp eq %"struct.std::__1::__hash_node_base.25"* %100, null
  br i1 %101, label %114, label %55

102:                                              ; preds = %89, %109
  %103 = phi i64 [ %106, %109 ], [ %80, %89 ]
  %104 = phi i8* [ %107, %109 ], [ %86, %89 ]
  %105 = phi i8* [ %110, %109 ], [ %53, %89 ]
  %106 = add i64 %103, -1
  %107 = getelementptr inbounds i8, i8* %104, i64 1
  %108 = icmp eq i64 %106, 0
  br i1 %108, label %203, label %109

109:                                              ; preds = %102
  %110 = getelementptr inbounds i8, i8* %105, i64 1
  %111 = load i8, i8* %107, align 1
  %112 = load i8, i8* %110, align 1
  %113 = icmp eq i8 %111, %112
  br i1 %113, label %102, label %98

114:                                              ; preds = %68, %98, %41, %34, %5
  %115 = phi i64 [ %35, %34 ], [ -6148914691236517206, %5 ], [ %35, %41 ], [ %35, %98 ], [ %35, %68 ]
  %116 = call i8* @_Znwm(i64 48) #14, !noalias !8
  %117 = getelementptr inbounds i8, i8* %116, i64 16
  %118 = bitcast %"class.std::__1::tuple"* %3 to i8**
  %119 = load i8*, i8** %118, align 8, !noalias !8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %117, i8* align 8 %119, i64 24, i1 false) #12, !noalias !8
  call void @llvm.memset.p0i8.i64(i8* align 8 %119, i8 0, i64 24, i1 false) #12, !noalias !8
  %120 = getelementptr inbounds i8, i8* %116, i64 40
  %121 = bitcast i8* %120 to i32*
  store i32 0, i32* %121, align 8, !noalias !8
  %122 = getelementptr inbounds i8, i8* %116, i64 8
  %123 = bitcast i8* %122 to i64*
  store i64 %20, i64* %123, align 8, !noalias !8
  %124 = bitcast i8* %116 to %"struct.std::__1::__hash_node_base.25"**
  store %"struct.std::__1::__hash_node_base.25"* null, %"struct.std::__1::__hash_node_base.25"** %124, align 8, !noalias !8
  %125 = getelementptr inbounds %"class.std::__1::__hash_table.21", %"class.std::__1::__hash_table.21"* %0, i64 0, i32 2, i32 0, i32 0
  %126 = load i64, i64* %125, align 8
  %127 = add i64 %126, 1
  %128 = uitofp i64 %127 to float
  %129 = uitofp i64 %22 to float
  %130 = getelementptr inbounds %"class.std::__1::__hash_table.21", %"class.std::__1::__hash_table.21"* %0, i64 0, i32 3, i32 0, i32 0
  %131 = load float, float* %130, align 4
  %132 = fmul float %131, %129
  %133 = fcmp olt float %132, %128
  %134 = or i1 %23, %133
  br i1 %134, label %135, label %158

135:                                              ; preds = %114
  %136 = shl i64 %22, 1
  %137 = icmp ult i64 %22, 3
  %138 = call i64 @llvm.ctpop.i64(i64 %22) #12, !range !2
  %139 = icmp ugt i64 %138, 1
  %140 = or i1 %137, %139
  %141 = zext i1 %140 to i64
  %142 = or i64 %136, %141
  %143 = fdiv float %128, %131
  %144 = call float @llvm.ceil.f32(float %143) #12
  %145 = fptoui float %144 to i64
  %146 = icmp ult i64 %142, %145
  %147 = select i1 %146, i64 %145, i64 %142
  call void @_ZNSt3__112__hash_tableINS_17__hash_value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEN11dawn_native6vulkan9DeviceExtEEENS_22__unordered_map_hasherIS7_SB_NS_4hashIS7_EENS_8equal_toIS7_EELb1EEENS_21__unordered_map_equalIS7_SB_SG_SE_Lb1EEENS5_ISB_EEE6rehashEm(%"class.std::__1::__hash_table.21"* %0, i64 %147)
  %148 = load i64, i64* %21, align 8
  %149 = call i64 @llvm.ctpop.i64(i64 %148) #12, !range !2
  %150 = icmp ugt i64 %149, 1
  br i1 %150, label %154, label %151

151:                                              ; preds = %135
  %152 = add i64 %148, -1
  %153 = and i64 %152, %20
  br label %158

154:                                              ; preds = %135
  %155 = icmp ult i64 %20, %148
  br i1 %155, label %158, label %156

156:                                              ; preds = %154
  %157 = urem i64 %20, %148
  br label %158

158:                                              ; preds = %156, %154, %151, %114
  %159 = phi i64 [ %22, %114 ], [ %148, %151 ], [ %148, %154 ], [ %148, %156 ]
  %160 = phi i64 [ %115, %114 ], [ %153, %151 ], [ %20, %154 ], [ %157, %156 ]
  %161 = getelementptr inbounds %"class.std::__1::__hash_table.21", %"class.std::__1::__hash_table.21"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %162 = load %"struct.std::__1::__hash_node_base.25"**, %"struct.std::__1::__hash_node_base.25"*** %161, align 8
  %163 = getelementptr inbounds %"struct.std::__1::__hash_node_base.25"*, %"struct.std::__1::__hash_node_base.25"** %162, i64 %160
  %164 = load %"struct.std::__1::__hash_node_base.25"*, %"struct.std::__1::__hash_node_base.25"** %163, align 8
  %165 = icmp eq %"struct.std::__1::__hash_node_base.25"* %164, null
  br i1 %165, label %166, label %192

166:                                              ; preds = %158
  %167 = getelementptr inbounds %"class.std::__1::__hash_table.21", %"class.std::__1::__hash_table.21"* %0, i64 0, i32 1, i32 0, i32 0
  %168 = bitcast %"struct.std::__1::__hash_node_base.25"* %167 to i64*
  %169 = load i64, i64* %168, align 8
  %170 = bitcast i8* %116 to i64*
  store i64 %169, i64* %170, align 8
  %171 = bitcast %"struct.std::__1::__hash_node_base.25"* %167 to i8**
  store i8* %116, i8** %171, align 8
  store %"struct.std::__1::__hash_node_base.25"* %167, %"struct.std::__1::__hash_node_base.25"** %163, align 8
  %172 = load %"struct.std::__1::__hash_node_base.25"*, %"struct.std::__1::__hash_node_base.25"** %124, align 8
  %173 = icmp eq %"struct.std::__1::__hash_node_base.25"* %172, null
  br i1 %173, label %199, label %174

174:                                              ; preds = %166
  %175 = getelementptr inbounds %"struct.std::__1::__hash_node_base.25", %"struct.std::__1::__hash_node_base.25"* %172, i64 1
  %176 = bitcast %"struct.std::__1::__hash_node_base.25"* %175 to i64*
  %177 = load i64, i64* %176, align 8
  %178 = call i64 @llvm.ctpop.i64(i64 %159) #12, !range !2
  %179 = icmp ugt i64 %178, 1
  br i1 %179, label %183, label %180

180:                                              ; preds = %174
  %181 = add i64 %159, -1
  %182 = and i64 %177, %181
  br label %187

183:                                              ; preds = %174
  %184 = icmp ult i64 %177, %159
  br i1 %184, label %187, label %185

185:                                              ; preds = %183
  %186 = urem i64 %177, %159
  br label %187

187:                                              ; preds = %180, %183, %185
  %188 = phi i64 [ %182, %180 ], [ %186, %185 ], [ %177, %183 ]
  %189 = load %"struct.std::__1::__hash_node_base.25"**, %"struct.std::__1::__hash_node_base.25"*** %161, align 8
  %190 = getelementptr inbounds %"struct.std::__1::__hash_node_base.25"*, %"struct.std::__1::__hash_node_base.25"** %189, i64 %188
  %191 = bitcast %"struct.std::__1::__hash_node_base.25"** %190 to i8**
  br label %197

192:                                              ; preds = %158
  %193 = bitcast %"struct.std::__1::__hash_node_base.25"* %164 to i64*
  %194 = load i64, i64* %193, align 8
  %195 = bitcast i8* %116 to i64*
  store i64 %194, i64* %195, align 8
  %196 = bitcast %"struct.std::__1::__hash_node_base.25"* %164 to i8**
  br label %197

197:                                              ; preds = %187, %192
  %198 = phi i8** [ %196, %192 ], [ %191, %187 ]
  store i8* %116, i8** %198, align 8
  br label %199

199:                                              ; preds = %197, %166
  %200 = bitcast i8* %116 to %"struct.std::__1::__hash_node_base.25"*
  %201 = load i64, i64* %125, align 8
  %202 = add i64 %201, 1
  store i64 %202, i64* %125, align 8
  br label %203

203:                                              ; preds = %88, %94, %95, %102, %199
  %204 = phi i8 [ 1, %199 ], [ 0, %102 ], [ 0, %95 ], [ 0, %94 ], [ 0, %88 ]
  %205 = phi %"struct.std::__1::__hash_node_base.25"* [ %200, %199 ], [ %56, %102 ], [ %56, %95 ], [ %56, %94 ], [ %56, %88 ]
  %206 = insertvalue { %"struct.std::__1::__hash_node_base.25"*, i8 } undef, %"struct.std::__1::__hash_node_base.25"* %205, 0
  %207 = insertvalue { %"struct.std::__1::__hash_node_base.25"*, i8 } %206, i8 %204, 1
  ret { %"struct.std::__1::__hash_node_base.25"*, i8 } %207
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__112__hash_tableINS_17__hash_value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEN11dawn_native6vulkan9DeviceExtEEENS_22__unordered_map_hasherIS7_SB_NS_4hashIS7_EENS_8equal_toIS7_EELb1EEENS_21__unordered_map_equalIS7_SB_SG_SE_Lb1EEENS5_ISB_EEE6rehashEm(%"class.std::__1::__hash_table.21"*, i64) local_unnamed_addr #2 comdat align 2 {
  %3 = icmp eq i64 %1, 1
  br i1 %3, label %9, label %4

4:                                                ; preds = %2
  %5 = tail call i64 @llvm.ctpop.i64(i64 %1), !range !2
  %6 = icmp ugt i64 %5, 1
  br i1 %6, label %7, label %9

7:                                                ; preds = %4
  %8 = tail call i64 @_ZNSt3__112__next_primeEm(i64 %1) #12
  br label %9

9:                                                ; preds = %2, %4, %7
  %10 = phi i64 [ %8, %7 ], [ %1, %4 ], [ 2, %2 ]
  %11 = getelementptr inbounds %"class.std::__1::__hash_table.21", %"class.std::__1::__hash_table.21"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %12 = load i64, i64* %11, align 8
  %13 = icmp ugt i64 %10, %12
  br i1 %13, label %14, label %15

14:                                               ; preds = %9
  tail call void @_ZNSt3__112__hash_tableINS_17__hash_value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEN11dawn_native6vulkan9DeviceExtEEENS_22__unordered_map_hasherIS7_SB_NS_4hashIS7_EENS_8equal_toIS7_EELb1EEENS_21__unordered_map_equalIS7_SB_SG_SE_Lb1EEENS5_ISB_EEE8__rehashEm(%"class.std::__1::__hash_table.21"* %0, i64 %10)
  br label %45

15:                                               ; preds = %9
  %16 = icmp ult i64 %10, %12
  br i1 %16, label %17, label %45

17:                                               ; preds = %15
  %18 = icmp ugt i64 %12, 2
  %19 = tail call i64 @llvm.ctpop.i64(i64 %12) #12, !range !2
  %20 = icmp ult i64 %19, 2
  %21 = and i1 %18, %20
  %22 = getelementptr inbounds %"class.std::__1::__hash_table.21", %"class.std::__1::__hash_table.21"* %0, i64 0, i32 2, i32 0, i32 0
  %23 = load i64, i64* %22, align 8
  %24 = uitofp i64 %23 to float
  %25 = getelementptr inbounds %"class.std::__1::__hash_table.21", %"class.std::__1::__hash_table.21"* %0, i64 0, i32 3, i32 0, i32 0
  %26 = load float, float* %25, align 4
  %27 = fdiv float %24, %26
  %28 = tail call float @llvm.ceil.f32(float %27) #12
  %29 = fptoui float %28 to i64
  br i1 %21, label %30, label %37

30:                                               ; preds = %17
  %31 = icmp ult i64 %29, 2
  br i1 %31, label %39, label %32

32:                                               ; preds = %30
  %33 = add i64 %29, -1
  %34 = tail call i64 @llvm.ctlz.i64(i64 %33, i1 true) #12, !range !2
  %35 = sub nuw nsw i64 64, %34
  %36 = shl i64 1, %35
  br label %39

37:                                               ; preds = %17
  %38 = tail call i64 @_ZNSt3__112__next_primeEm(i64 %29) #12
  br label %39

39:                                               ; preds = %32, %30, %37
  %40 = phi i64 [ %38, %37 ], [ %36, %32 ], [ %29, %30 ]
  %41 = icmp ult i64 %10, %40
  %42 = select i1 %41, i64 %40, i64 %10
  %43 = icmp ult i64 %42, %12
  br i1 %43, label %44, label %45

44:                                               ; preds = %39
  tail call void @_ZNSt3__112__hash_tableINS_17__hash_value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEN11dawn_native6vulkan9DeviceExtEEENS_22__unordered_map_hasherIS7_SB_NS_4hashIS7_EENS_8equal_toIS7_EELb1EEENS_21__unordered_map_equalIS7_SB_SG_SE_Lb1EEENS5_ISB_EEE8__rehashEm(%"class.std::__1::__hash_table.21"* %0, i64 %42)
  br label %45

45:                                               ; preds = %15, %44, %39, %14
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__112__hash_tableINS_17__hash_value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEN11dawn_native6vulkan9DeviceExtEEENS_22__unordered_map_hasherIS7_SB_NS_4hashIS7_EENS_8equal_toIS7_EELb1EEENS_21__unordered_map_equalIS7_SB_SG_SE_Lb1EEENS5_ISB_EEE8__rehashEm(%"class.std::__1::__hash_table.21"*, i64) local_unnamed_addr #2 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::__hash_table.21", %"class.std::__1::__hash_table.21"* %0, i64 0, i32 0, i32 0, i32 1, i32 0
  %4 = icmp eq i64 %1, 0
  br i1 %4, label %186, label %5

5:                                                ; preds = %2
  %6 = icmp ugt i64 %1, 2305843009213693951
  br i1 %6, label %7, label %8

7:                                                ; preds = %5
  tail call void @abort() #13
  unreachable

8:                                                ; preds = %5
  %9 = shl i64 %1, 3
  %10 = tail call i8* @_Znwm(i64 %9) #14
  %11 = getelementptr inbounds %"class.std::__1::__hash_table.21", %"class.std::__1::__hash_table.21"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %12 = load %"struct.std::__1::__hash_node_base.25"**, %"struct.std::__1::__hash_node_base.25"*** %11, align 8
  %13 = bitcast %"class.std::__1::__hash_table.21"* %0 to i8**
  store i8* %10, i8** %13, align 8
  %14 = icmp eq %"struct.std::__1::__hash_node_base.25"** %12, null
  br i1 %14, label %17, label %15

15:                                               ; preds = %8
  %16 = bitcast %"struct.std::__1::__hash_node_base.25"** %12 to i8*
  tail call void @_ZdlPv(i8* %16) #14
  br label %17

17:                                               ; preds = %15, %8
  %18 = getelementptr inbounds %"class.std::__1::__bucket_list_deallocator.27", %"class.std::__1::__bucket_list_deallocator.27"* %3, i64 0, i32 0, i32 0, i32 0
  store i64 %1, i64* %18, align 8
  %19 = add i64 %1, -1
  %20 = and i64 %1, 3
  %21 = icmp ult i64 %19, 3
  br i1 %21, label %24, label %22

22:                                               ; preds = %17
  %23 = sub i64 %1, %20
  br label %40

24:                                               ; preds = %40, %17
  %25 = phi i64 [ 0, %17 ], [ %54, %40 ]
  %26 = icmp eq i64 %20, 0
  br i1 %26, label %35, label %27

27:                                               ; preds = %24, %27
  %28 = phi i64 [ %32, %27 ], [ %25, %24 ]
  %29 = phi i64 [ %33, %27 ], [ %20, %24 ]
  %30 = load %"struct.std::__1::__hash_node_base.25"**, %"struct.std::__1::__hash_node_base.25"*** %11, align 8
  %31 = getelementptr inbounds %"struct.std::__1::__hash_node_base.25"*, %"struct.std::__1::__hash_node_base.25"** %30, i64 %28
  store %"struct.std::__1::__hash_node_base.25"* null, %"struct.std::__1::__hash_node_base.25"** %31, align 8
  %32 = add nuw i64 %28, 1
  %33 = add i64 %29, -1
  %34 = icmp eq i64 %33, 0
  br i1 %34, label %35, label %27, !llvm.loop !11

35:                                               ; preds = %27, %24
  %36 = getelementptr inbounds %"class.std::__1::__hash_table.21", %"class.std::__1::__hash_table.21"* %0, i64 0, i32 1, i32 0, i32 0
  %37 = getelementptr inbounds %"struct.std::__1::__hash_node_base.25", %"struct.std::__1::__hash_node_base.25"* %36, i64 0, i32 0
  %38 = load %"struct.std::__1::__hash_node_base.25"*, %"struct.std::__1::__hash_node_base.25"** %37, align 8
  %39 = icmp eq %"struct.std::__1::__hash_node_base.25"* %38, null
  br i1 %39, label %194, label %57

40:                                               ; preds = %40, %22
  %41 = phi i64 [ 0, %22 ], [ %54, %40 ]
  %42 = phi i64 [ %23, %22 ], [ %55, %40 ]
  %43 = load %"struct.std::__1::__hash_node_base.25"**, %"struct.std::__1::__hash_node_base.25"*** %11, align 8
  %44 = getelementptr inbounds %"struct.std::__1::__hash_node_base.25"*, %"struct.std::__1::__hash_node_base.25"** %43, i64 %41
  store %"struct.std::__1::__hash_node_base.25"* null, %"struct.std::__1::__hash_node_base.25"** %44, align 8
  %45 = or i64 %41, 1
  %46 = load %"struct.std::__1::__hash_node_base.25"**, %"struct.std::__1::__hash_node_base.25"*** %11, align 8
  %47 = getelementptr inbounds %"struct.std::__1::__hash_node_base.25"*, %"struct.std::__1::__hash_node_base.25"** %46, i64 %45
  store %"struct.std::__1::__hash_node_base.25"* null, %"struct.std::__1::__hash_node_base.25"** %47, align 8
  %48 = or i64 %41, 2
  %49 = load %"struct.std::__1::__hash_node_base.25"**, %"struct.std::__1::__hash_node_base.25"*** %11, align 8
  %50 = getelementptr inbounds %"struct.std::__1::__hash_node_base.25"*, %"struct.std::__1::__hash_node_base.25"** %49, i64 %48
  store %"struct.std::__1::__hash_node_base.25"* null, %"struct.std::__1::__hash_node_base.25"** %50, align 8
  %51 = or i64 %41, 3
  %52 = load %"struct.std::__1::__hash_node_base.25"**, %"struct.std::__1::__hash_node_base.25"*** %11, align 8
  %53 = getelementptr inbounds %"struct.std::__1::__hash_node_base.25"*, %"struct.std::__1::__hash_node_base.25"** %52, i64 %51
  store %"struct.std::__1::__hash_node_base.25"* null, %"struct.std::__1::__hash_node_base.25"** %53, align 8
  %54 = add nuw i64 %41, 4
  %55 = add i64 %42, -4
  %56 = icmp eq i64 %55, 0
  br i1 %56, label %24, label %40

57:                                               ; preds = %35
  %58 = getelementptr inbounds %"struct.std::__1::__hash_node_base.25", %"struct.std::__1::__hash_node_base.25"* %38, i64 1
  %59 = bitcast %"struct.std::__1::__hash_node_base.25"* %58 to i64*
  %60 = load i64, i64* %59, align 8
  %61 = tail call i64 @llvm.ctpop.i64(i64 %1) #12, !range !2
  %62 = icmp ugt i64 %61, 1
  br i1 %62, label %66, label %63

63:                                               ; preds = %57
  %64 = add i64 %1, -1
  %65 = and i64 %60, %64
  br label %70

66:                                               ; preds = %57
  %67 = icmp ult i64 %60, %1
  br i1 %67, label %70, label %68

68:                                               ; preds = %66
  %69 = urem i64 %60, %1
  br label %70

70:                                               ; preds = %63, %66, %68
  %71 = phi i64 [ %65, %63 ], [ %69, %68 ], [ %60, %66 ]
  %72 = load %"struct.std::__1::__hash_node_base.25"**, %"struct.std::__1::__hash_node_base.25"*** %11, align 8
  %73 = getelementptr inbounds %"struct.std::__1::__hash_node_base.25"*, %"struct.std::__1::__hash_node_base.25"** %72, i64 %71
  store %"struct.std::__1::__hash_node_base.25"* %36, %"struct.std::__1::__hash_node_base.25"** %73, align 8
  %74 = getelementptr inbounds %"struct.std::__1::__hash_node_base.25", %"struct.std::__1::__hash_node_base.25"* %38, i64 0, i32 0
  %75 = load %"struct.std::__1::__hash_node_base.25"*, %"struct.std::__1::__hash_node_base.25"** %74, align 8
  %76 = icmp eq %"struct.std::__1::__hash_node_base.25"* %75, null
  br i1 %76, label %194, label %77

77:                                               ; preds = %70
  %78 = add i64 %1, -1
  br label %79

79:                                               ; preds = %77, %180
  %80 = phi %"struct.std::__1::__hash_node_base.25"* [ %75, %77 ], [ %184, %180 ]
  %81 = phi i64 [ %71, %77 ], [ %182, %180 ]
  %82 = phi %"struct.std::__1::__hash_node_base.25"* [ %38, %77 ], [ %181, %180 ]
  %83 = getelementptr inbounds %"struct.std::__1::__hash_node_base.25", %"struct.std::__1::__hash_node_base.25"* %80, i64 1
  %84 = bitcast %"struct.std::__1::__hash_node_base.25"* %83 to i64*
  %85 = load i64, i64* %84, align 8
  br i1 %62, label %88, label %86

86:                                               ; preds = %79
  %87 = and i64 %85, %78
  br label %92

88:                                               ; preds = %79
  %89 = icmp ult i64 %85, %1
  br i1 %89, label %92, label %90

90:                                               ; preds = %88
  %91 = urem i64 %85, %1
  br label %92

92:                                               ; preds = %86, %88, %90
  %93 = phi i64 [ %87, %86 ], [ %91, %90 ], [ %85, %88 ]
  %94 = icmp eq i64 %93, %81
  br i1 %94, label %180, label %95

95:                                               ; preds = %92
  %96 = load %"struct.std::__1::__hash_node_base.25"**, %"struct.std::__1::__hash_node_base.25"*** %11, align 8
  %97 = getelementptr inbounds %"struct.std::__1::__hash_node_base.25"*, %"struct.std::__1::__hash_node_base.25"** %96, i64 %93
  %98 = load %"struct.std::__1::__hash_node_base.25"*, %"struct.std::__1::__hash_node_base.25"** %97, align 8
  %99 = icmp eq %"struct.std::__1::__hash_node_base.25"* %98, null
  br i1 %99, label %118, label %100

100:                                              ; preds = %95
  %101 = getelementptr inbounds %"struct.std::__1::__hash_node_base.25", %"struct.std::__1::__hash_node_base.25"* %80, i64 0, i32 0
  %102 = load %"struct.std::__1::__hash_node_base.25"*, %"struct.std::__1::__hash_node_base.25"** %101, align 8
  %103 = icmp eq %"struct.std::__1::__hash_node_base.25"* %102, null
  br i1 %103, label %166, label %104

104:                                              ; preds = %100
  %105 = getelementptr inbounds %"struct.std::__1::__hash_node_base.25", %"struct.std::__1::__hash_node_base.25"* %80, i64 2
  %106 = bitcast %"struct.std::__1::__hash_node_base.25"* %105 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %107 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %106, i64 0, i32 1, i32 0
  %108 = load i8, i8* %107, align 1
  %109 = icmp slt i8 %108, 0
  %110 = getelementptr inbounds %"struct.std::__1::__hash_node_base.25", %"struct.std::__1::__hash_node_base.25"* %80, i64 3
  %111 = bitcast %"struct.std::__1::__hash_node_base.25"* %110 to i64*
  %112 = load i64, i64* %111, align 8
  %113 = zext i8 %108 to i64
  %114 = select i1 %109, i64 %112, i64 %113
  %115 = bitcast %"struct.std::__1::__hash_node_base.25"* %105 to i8**
  %116 = bitcast %"struct.std::__1::__hash_node_base.25"* %105 to i8*
  %117 = icmp eq i64 %114, 0
  br label %119

118:                                              ; preds = %95
  store %"struct.std::__1::__hash_node_base.25"* %82, %"struct.std::__1::__hash_node_base.25"** %97, align 8
  br label %180

119:                                              ; preds = %104, %162
  %120 = phi %"struct.std::__1::__hash_node_base.25"* [ %102, %104 ], [ %164, %162 ]
  %121 = phi %"struct.std::__1::__hash_node_base.25"* [ %80, %104 ], [ %120, %162 ]
  %122 = getelementptr inbounds %"struct.std::__1::__hash_node_base.25", %"struct.std::__1::__hash_node_base.25"* %120, i64 2
  %123 = bitcast %"struct.std::__1::__hash_node_base.25"* %122 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %124 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %123, i64 0, i32 1, i32 0
  %125 = load i8, i8* %124, align 1
  %126 = icmp slt i8 %125, 0
  %127 = getelementptr inbounds %"struct.std::__1::__hash_node_base.25", %"struct.std::__1::__hash_node_base.25"* %120, i64 3
  %128 = bitcast %"struct.std::__1::__hash_node_base.25"* %127 to i64*
  %129 = load i64, i64* %128, align 8
  %130 = zext i8 %125 to i64
  %131 = select i1 %126, i64 %129, i64 %130
  %132 = icmp eq i64 %114, %131
  br i1 %132, label %133, label %166

133:                                              ; preds = %119
  %134 = load i8*, i8** %115, align 8
  %135 = select i1 %109, i8* %134, i8* %116
  %136 = bitcast %"struct.std::__1::__hash_node_base.25"* %122 to i8**
  %137 = load i8*, i8** %136, align 8
  %138 = bitcast %"struct.std::__1::__hash_node_base.25"* %122 to i8*
  %139 = select i1 %126, i8* %137, i8* %138
  br i1 %109, label %146, label %140

140:                                              ; preds = %133
  br i1 %117, label %162, label %141

141:                                              ; preds = %140
  %142 = ptrtoint i8* %134 to i64
  %143 = trunc i64 %142 to i8
  %144 = load i8, i8* %139, align 1
  %145 = icmp eq i8 %144, %143
  br i1 %145, label %147, label %166

146:                                              ; preds = %133
  br i1 %117, label %162, label %159

147:                                              ; preds = %141, %154
  %148 = phi i64 [ %151, %154 ], [ %113, %141 ]
  %149 = phi i8* [ %152, %154 ], [ %116, %141 ]
  %150 = phi i8* [ %155, %154 ], [ %139, %141 ]
  %151 = add i64 %148, -1
  %152 = getelementptr inbounds i8, i8* %149, i64 1
  %153 = icmp eq i64 %151, 0
  br i1 %153, label %162, label %154

154:                                              ; preds = %147
  %155 = getelementptr inbounds i8, i8* %150, i64 1
  %156 = load i8, i8* %152, align 1
  %157 = load i8, i8* %155, align 1
  %158 = icmp eq i8 %156, %157
  br i1 %158, label %147, label %166

159:                                              ; preds = %146
  %160 = tail call i32 @bcmp(i8* %135, i8* %139, i64 %114) #12
  %161 = icmp eq i32 %160, 0
  br i1 %161, label %162, label %166

162:                                              ; preds = %147, %140, %146, %159
  %163 = getelementptr inbounds %"struct.std::__1::__hash_node_base.25", %"struct.std::__1::__hash_node_base.25"* %120, i64 0, i32 0
  %164 = load %"struct.std::__1::__hash_node_base.25"*, %"struct.std::__1::__hash_node_base.25"** %163, align 8
  %165 = icmp eq %"struct.std::__1::__hash_node_base.25"* %164, null
  br i1 %165, label %166, label %119

166:                                              ; preds = %159, %162, %119, %141, %154, %100
  %167 = phi %"struct.std::__1::__hash_node_base.25"* [ %80, %100 ], [ %121, %154 ], [ %121, %159 ], [ %120, %162 ], [ %121, %119 ], [ %121, %141 ]
  %168 = bitcast %"struct.std::__1::__hash_node_base.25"* %167 to i64*
  %169 = load i64, i64* %168, align 8
  %170 = bitcast %"struct.std::__1::__hash_node_base.25"* %82 to i64*
  store i64 %169, i64* %170, align 8
  %171 = load %"struct.std::__1::__hash_node_base.25"**, %"struct.std::__1::__hash_node_base.25"*** %11, align 8
  %172 = getelementptr inbounds %"struct.std::__1::__hash_node_base.25"*, %"struct.std::__1::__hash_node_base.25"** %171, i64 %93
  %173 = bitcast %"struct.std::__1::__hash_node_base.25"** %172 to i64**
  %174 = load i64*, i64** %173, align 8
  %175 = load i64, i64* %174, align 8
  store i64 %175, i64* %168, align 8
  %176 = load %"struct.std::__1::__hash_node_base.25"**, %"struct.std::__1::__hash_node_base.25"*** %11, align 8
  %177 = getelementptr inbounds %"struct.std::__1::__hash_node_base.25"*, %"struct.std::__1::__hash_node_base.25"** %176, i64 %93
  %178 = load %"struct.std::__1::__hash_node_base.25"*, %"struct.std::__1::__hash_node_base.25"** %177, align 8
  %179 = getelementptr inbounds %"struct.std::__1::__hash_node_base.25", %"struct.std::__1::__hash_node_base.25"* %178, i64 0, i32 0
  store %"struct.std::__1::__hash_node_base.25"* %80, %"struct.std::__1::__hash_node_base.25"** %179, align 8
  br label %180

180:                                              ; preds = %92, %166, %118
  %181 = phi %"struct.std::__1::__hash_node_base.25"* [ %80, %118 ], [ %82, %166 ], [ %80, %92 ]
  %182 = phi i64 [ %93, %118 ], [ %81, %166 ], [ %81, %92 ]
  %183 = getelementptr inbounds %"struct.std::__1::__hash_node_base.25", %"struct.std::__1::__hash_node_base.25"* %181, i64 0, i32 0
  %184 = load %"struct.std::__1::__hash_node_base.25"*, %"struct.std::__1::__hash_node_base.25"** %183, align 8
  %185 = icmp eq %"struct.std::__1::__hash_node_base.25"* %184, null
  br i1 %185, label %194, label %79

186:                                              ; preds = %2
  %187 = getelementptr inbounds %"class.std::__1::__hash_table.21", %"class.std::__1::__hash_table.21"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %188 = load %"struct.std::__1::__hash_node_base.25"**, %"struct.std::__1::__hash_node_base.25"*** %187, align 8
  store %"struct.std::__1::__hash_node_base.25"** null, %"struct.std::__1::__hash_node_base.25"*** %187, align 8
  %189 = icmp eq %"struct.std::__1::__hash_node_base.25"** %188, null
  br i1 %189, label %192, label %190

190:                                              ; preds = %186
  %191 = bitcast %"struct.std::__1::__hash_node_base.25"** %188 to i8*
  tail call void @_ZdlPv(i8* %191) #14
  br label %192

192:                                              ; preds = %186, %190
  %193 = getelementptr inbounds %"class.std::__1::__bucket_list_deallocator.27", %"class.std::__1::__bucket_list_deallocator.27"* %3, i64 0, i32 0, i32 0, i32 0
  store i64 0, i64* %193, align 8
  br label %194

194:                                              ; preds = %180, %70, %35, %192
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.std::__1::__hash_node_base.54"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEN11dawn_native6vulkan11VulkanLayerEEENS_22__unordered_map_hasherIS7_SB_NS_4hashIS7_EENS_8equal_toIS7_EELb1EEENS_21__unordered_map_equalIS7_SB_SG_SE_Lb1EEENS5_ISB_EEE25__emplace_unique_key_argsIS7_JRKNS_21piecewise_construct_tENS_5tupleIJOS7_EEENSQ_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeISB_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table.50"*, %"class.std::__1::basic_string"* dereferenceable(24), %"struct.std::__1::piecewise_construct_t"* dereferenceable(1), %"class.std::__1::tuple"* dereferenceable(8), %"class.std::__1::tuple.77"* dereferenceable(1)) local_unnamed_addr #2 comdat align 2 {
  %6 = alloca %"struct.std::__1::__murmur2_or_cityhash", align 1
  %7 = bitcast %"class.std::__1::basic_string"* %1 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %8 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %7, i64 0, i32 1, i32 0
  %9 = load i8, i8* %8, align 1
  %10 = icmp slt i8 %9, 0
  %11 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %12 = load i8*, i8** %11, align 8
  %13 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %14 = load i64, i64* %13, align 8
  %15 = bitcast %"class.std::__1::basic_string"* %1 to i8*
  %16 = zext i8 %9 to i64
  %17 = select i1 %10, i8* %12, i8* %15
  %18 = select i1 %10, i64 %14, i64 %16
  %19 = getelementptr inbounds %"struct.std::__1::__murmur2_or_cityhash", %"struct.std::__1::__murmur2_or_cityhash"* %6, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %19) #12
  %20 = call i64 @_ZNSt3__121__murmur2_or_cityhashImLm64EEclEPKvm(%"struct.std::__1::__murmur2_or_cityhash"* nonnull %6, i8* %17, i64 %18) #12
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %19) #12
  %21 = getelementptr inbounds %"class.std::__1::__hash_table.50", %"class.std::__1::__hash_table.50"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %22 = load i64, i64* %21, align 8
  %23 = icmp eq i64 %22, 0
  br i1 %23, label %114, label %24

24:                                               ; preds = %5
  %25 = call i64 @llvm.ctpop.i64(i64 %22) #12, !range !2
  %26 = icmp ugt i64 %25, 1
  br i1 %26, label %30, label %27

27:                                               ; preds = %24
  %28 = add i64 %22, -1
  %29 = and i64 %28, %20
  br label %34

30:                                               ; preds = %24
  %31 = icmp ult i64 %20, %22
  br i1 %31, label %34, label %32

32:                                               ; preds = %30
  %33 = urem i64 %20, %22
  br label %34

34:                                               ; preds = %27, %30, %32
  %35 = phi i64 [ %29, %27 ], [ %33, %32 ], [ %20, %30 ]
  %36 = getelementptr inbounds %"class.std::__1::__hash_table.50", %"class.std::__1::__hash_table.50"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %37 = load %"struct.std::__1::__hash_node_base.54"**, %"struct.std::__1::__hash_node_base.54"*** %36, align 8
  %38 = getelementptr inbounds %"struct.std::__1::__hash_node_base.54"*, %"struct.std::__1::__hash_node_base.54"** %37, i64 %35
  %39 = load %"struct.std::__1::__hash_node_base.54"*, %"struct.std::__1::__hash_node_base.54"** %38, align 8
  %40 = icmp eq %"struct.std::__1::__hash_node_base.54"* %39, null
  br i1 %40, label %114, label %41

41:                                               ; preds = %34
  %42 = getelementptr inbounds %"struct.std::__1::__hash_node_base.54", %"struct.std::__1::__hash_node_base.54"* %39, i64 0, i32 0
  %43 = load %"struct.std::__1::__hash_node_base.54"*, %"struct.std::__1::__hash_node_base.54"** %42, align 8
  %44 = icmp eq %"struct.std::__1::__hash_node_base.54"* %43, null
  br i1 %44, label %114, label %45

45:                                               ; preds = %41
  %46 = add i64 %22, -1
  %47 = load i8, i8* %8, align 1
  %48 = icmp slt i8 %47, 0
  %49 = load i64, i64* %13, align 8
  %50 = zext i8 %47 to i64
  %51 = select i1 %48, i64 %49, i64 %50
  %52 = load i8*, i8** %11, align 8
  %53 = select i1 %48, i8* %52, i8* %15
  %54 = icmp eq i64 %51, 0
  br label %55

55:                                               ; preds = %45, %98
  %56 = phi %"struct.std::__1::__hash_node_base.54"* [ %43, %45 ], [ %100, %98 ]
  %57 = getelementptr inbounds %"struct.std::__1::__hash_node_base.54", %"struct.std::__1::__hash_node_base.54"* %56, i64 1
  %58 = bitcast %"struct.std::__1::__hash_node_base.54"* %57 to i64*
  %59 = load i64, i64* %58, align 8
  %60 = icmp eq i64 %59, %20
  br i1 %60, label %71, label %61

61:                                               ; preds = %55
  br i1 %26, label %64, label %62

62:                                               ; preds = %61
  %63 = and i64 %59, %46
  br label %68

64:                                               ; preds = %61
  %65 = icmp ult i64 %59, %22
  br i1 %65, label %68, label %66

66:                                               ; preds = %64
  %67 = urem i64 %59, %22
  br label %68

68:                                               ; preds = %62, %64, %66
  %69 = phi i64 [ %63, %62 ], [ %67, %66 ], [ %59, %64 ]
  %70 = icmp eq i64 %69, %35
  br i1 %70, label %71, label %114

71:                                               ; preds = %55, %68
  %72 = getelementptr inbounds %"struct.std::__1::__hash_node_base.54", %"struct.std::__1::__hash_node_base.54"* %56, i64 2
  %73 = bitcast %"struct.std::__1::__hash_node_base.54"* %72 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %74 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %73, i64 0, i32 1, i32 0
  %75 = load i8, i8* %74, align 1
  %76 = icmp slt i8 %75, 0
  %77 = getelementptr inbounds %"struct.std::__1::__hash_node_base.54", %"struct.std::__1::__hash_node_base.54"* %56, i64 3
  %78 = bitcast %"struct.std::__1::__hash_node_base.54"* %77 to i64*
  %79 = load i64, i64* %78, align 8
  %80 = zext i8 %75 to i64
  %81 = select i1 %76, i64 %79, i64 %80
  %82 = icmp eq i64 %81, %51
  br i1 %82, label %83, label %98

83:                                               ; preds = %71
  %84 = bitcast %"struct.std::__1::__hash_node_base.54"* %72 to i8**
  %85 = load i8*, i8** %84, align 8
  %86 = bitcast %"struct.std::__1::__hash_node_base.54"* %72 to i8*
  %87 = select i1 %76, i8* %85, i8* %86
  br i1 %76, label %94, label %88

88:                                               ; preds = %83
  br i1 %54, label %203, label %89

89:                                               ; preds = %88
  %90 = ptrtoint i8* %85 to i64
  %91 = trunc i64 %90 to i8
  %92 = load i8, i8* %53, align 1
  %93 = icmp eq i8 %92, %91
  br i1 %93, label %102, label %98

94:                                               ; preds = %83
  br i1 %54, label %203, label %95

95:                                               ; preds = %94
  %96 = call i32 @bcmp(i8* %87, i8* %53, i64 %51) #12
  %97 = icmp eq i32 %96, 0
  br i1 %97, label %203, label %98

98:                                               ; preds = %109, %89, %71, %95
  %99 = getelementptr inbounds %"struct.std::__1::__hash_node_base.54", %"struct.std::__1::__hash_node_base.54"* %56, i64 0, i32 0
  %100 = load %"struct.std::__1::__hash_node_base.54"*, %"struct.std::__1::__hash_node_base.54"** %99, align 8
  %101 = icmp eq %"struct.std::__1::__hash_node_base.54"* %100, null
  br i1 %101, label %114, label %55

102:                                              ; preds = %89, %109
  %103 = phi i64 [ %106, %109 ], [ %80, %89 ]
  %104 = phi i8* [ %107, %109 ], [ %86, %89 ]
  %105 = phi i8* [ %110, %109 ], [ %53, %89 ]
  %106 = add i64 %103, -1
  %107 = getelementptr inbounds i8, i8* %104, i64 1
  %108 = icmp eq i64 %106, 0
  br i1 %108, label %203, label %109

109:                                              ; preds = %102
  %110 = getelementptr inbounds i8, i8* %105, i64 1
  %111 = load i8, i8* %107, align 1
  %112 = load i8, i8* %110, align 1
  %113 = icmp eq i8 %111, %112
  br i1 %113, label %102, label %98

114:                                              ; preds = %68, %98, %41, %34, %5
  %115 = phi i64 [ %35, %34 ], [ -6148914691236517206, %5 ], [ %35, %41 ], [ %35, %98 ], [ %35, %68 ]
  %116 = call i8* @_Znwm(i64 48) #14, !noalias !12
  %117 = getelementptr inbounds i8, i8* %116, i64 16
  %118 = bitcast %"class.std::__1::tuple"* %3 to i8**
  %119 = load i8*, i8** %118, align 8, !noalias !12
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %117, i8* align 8 %119, i64 24, i1 false) #12, !noalias !12
  call void @llvm.memset.p0i8.i64(i8* align 8 %119, i8 0, i64 24, i1 false) #12, !noalias !12
  %120 = getelementptr inbounds i8, i8* %116, i64 40
  %121 = bitcast i8* %120 to i32*
  store i32 0, i32* %121, align 8, !noalias !12
  %122 = getelementptr inbounds i8, i8* %116, i64 8
  %123 = bitcast i8* %122 to i64*
  store i64 %20, i64* %123, align 8, !noalias !12
  %124 = bitcast i8* %116 to %"struct.std::__1::__hash_node_base.54"**
  store %"struct.std::__1::__hash_node_base.54"* null, %"struct.std::__1::__hash_node_base.54"** %124, align 8, !noalias !12
  %125 = getelementptr inbounds %"class.std::__1::__hash_table.50", %"class.std::__1::__hash_table.50"* %0, i64 0, i32 2, i32 0, i32 0
  %126 = load i64, i64* %125, align 8
  %127 = add i64 %126, 1
  %128 = uitofp i64 %127 to float
  %129 = uitofp i64 %22 to float
  %130 = getelementptr inbounds %"class.std::__1::__hash_table.50", %"class.std::__1::__hash_table.50"* %0, i64 0, i32 3, i32 0, i32 0
  %131 = load float, float* %130, align 4
  %132 = fmul float %131, %129
  %133 = fcmp olt float %132, %128
  %134 = or i1 %23, %133
  br i1 %134, label %135, label %158

135:                                              ; preds = %114
  %136 = shl i64 %22, 1
  %137 = icmp ult i64 %22, 3
  %138 = call i64 @llvm.ctpop.i64(i64 %22) #12, !range !2
  %139 = icmp ugt i64 %138, 1
  %140 = or i1 %137, %139
  %141 = zext i1 %140 to i64
  %142 = or i64 %136, %141
  %143 = fdiv float %128, %131
  %144 = call float @llvm.ceil.f32(float %143) #12
  %145 = fptoui float %144 to i64
  %146 = icmp ult i64 %142, %145
  %147 = select i1 %146, i64 %145, i64 %142
  call void @_ZNSt3__112__hash_tableINS_17__hash_value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEN11dawn_native6vulkan11VulkanLayerEEENS_22__unordered_map_hasherIS7_SB_NS_4hashIS7_EENS_8equal_toIS7_EELb1EEENS_21__unordered_map_equalIS7_SB_SG_SE_Lb1EEENS5_ISB_EEE6rehashEm(%"class.std::__1::__hash_table.50"* %0, i64 %147)
  %148 = load i64, i64* %21, align 8
  %149 = call i64 @llvm.ctpop.i64(i64 %148) #12, !range !2
  %150 = icmp ugt i64 %149, 1
  br i1 %150, label %154, label %151

151:                                              ; preds = %135
  %152 = add i64 %148, -1
  %153 = and i64 %152, %20
  br label %158

154:                                              ; preds = %135
  %155 = icmp ult i64 %20, %148
  br i1 %155, label %158, label %156

156:                                              ; preds = %154
  %157 = urem i64 %20, %148
  br label %158

158:                                              ; preds = %156, %154, %151, %114
  %159 = phi i64 [ %22, %114 ], [ %148, %151 ], [ %148, %154 ], [ %148, %156 ]
  %160 = phi i64 [ %115, %114 ], [ %153, %151 ], [ %20, %154 ], [ %157, %156 ]
  %161 = getelementptr inbounds %"class.std::__1::__hash_table.50", %"class.std::__1::__hash_table.50"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %162 = load %"struct.std::__1::__hash_node_base.54"**, %"struct.std::__1::__hash_node_base.54"*** %161, align 8
  %163 = getelementptr inbounds %"struct.std::__1::__hash_node_base.54"*, %"struct.std::__1::__hash_node_base.54"** %162, i64 %160
  %164 = load %"struct.std::__1::__hash_node_base.54"*, %"struct.std::__1::__hash_node_base.54"** %163, align 8
  %165 = icmp eq %"struct.std::__1::__hash_node_base.54"* %164, null
  br i1 %165, label %166, label %192

166:                                              ; preds = %158
  %167 = getelementptr inbounds %"class.std::__1::__hash_table.50", %"class.std::__1::__hash_table.50"* %0, i64 0, i32 1, i32 0, i32 0
  %168 = bitcast %"struct.std::__1::__hash_node_base.54"* %167 to i64*
  %169 = load i64, i64* %168, align 8
  %170 = bitcast i8* %116 to i64*
  store i64 %169, i64* %170, align 8
  %171 = bitcast %"struct.std::__1::__hash_node_base.54"* %167 to i8**
  store i8* %116, i8** %171, align 8
  store %"struct.std::__1::__hash_node_base.54"* %167, %"struct.std::__1::__hash_node_base.54"** %163, align 8
  %172 = load %"struct.std::__1::__hash_node_base.54"*, %"struct.std::__1::__hash_node_base.54"** %124, align 8
  %173 = icmp eq %"struct.std::__1::__hash_node_base.54"* %172, null
  br i1 %173, label %199, label %174

174:                                              ; preds = %166
  %175 = getelementptr inbounds %"struct.std::__1::__hash_node_base.54", %"struct.std::__1::__hash_node_base.54"* %172, i64 1
  %176 = bitcast %"struct.std::__1::__hash_node_base.54"* %175 to i64*
  %177 = load i64, i64* %176, align 8
  %178 = call i64 @llvm.ctpop.i64(i64 %159) #12, !range !2
  %179 = icmp ugt i64 %178, 1
  br i1 %179, label %183, label %180

180:                                              ; preds = %174
  %181 = add i64 %159, -1
  %182 = and i64 %177, %181
  br label %187

183:                                              ; preds = %174
  %184 = icmp ult i64 %177, %159
  br i1 %184, label %187, label %185

185:                                              ; preds = %183
  %186 = urem i64 %177, %159
  br label %187

187:                                              ; preds = %180, %183, %185
  %188 = phi i64 [ %182, %180 ], [ %186, %185 ], [ %177, %183 ]
  %189 = load %"struct.std::__1::__hash_node_base.54"**, %"struct.std::__1::__hash_node_base.54"*** %161, align 8
  %190 = getelementptr inbounds %"struct.std::__1::__hash_node_base.54"*, %"struct.std::__1::__hash_node_base.54"** %189, i64 %188
  %191 = bitcast %"struct.std::__1::__hash_node_base.54"** %190 to i8**
  br label %197

192:                                              ; preds = %158
  %193 = bitcast %"struct.std::__1::__hash_node_base.54"* %164 to i64*
  %194 = load i64, i64* %193, align 8
  %195 = bitcast i8* %116 to i64*
  store i64 %194, i64* %195, align 8
  %196 = bitcast %"struct.std::__1::__hash_node_base.54"* %164 to i8**
  br label %197

197:                                              ; preds = %187, %192
  %198 = phi i8** [ %196, %192 ], [ %191, %187 ]
  store i8* %116, i8** %198, align 8
  br label %199

199:                                              ; preds = %197, %166
  %200 = bitcast i8* %116 to %"struct.std::__1::__hash_node_base.54"*
  %201 = load i64, i64* %125, align 8
  %202 = add i64 %201, 1
  store i64 %202, i64* %125, align 8
  br label %203

203:                                              ; preds = %88, %94, %95, %102, %199
  %204 = phi i8 [ 1, %199 ], [ 0, %102 ], [ 0, %95 ], [ 0, %94 ], [ 0, %88 ]
  %205 = phi %"struct.std::__1::__hash_node_base.54"* [ %200, %199 ], [ %56, %102 ], [ %56, %95 ], [ %56, %94 ], [ %56, %88 ]
  %206 = insertvalue { %"struct.std::__1::__hash_node_base.54"*, i8 } undef, %"struct.std::__1::__hash_node_base.54"* %205, 0
  %207 = insertvalue { %"struct.std::__1::__hash_node_base.54"*, i8 } %206, i8 %204, 1
  ret { %"struct.std::__1::__hash_node_base.54"*, i8 } %207
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__112__hash_tableINS_17__hash_value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEN11dawn_native6vulkan11VulkanLayerEEENS_22__unordered_map_hasherIS7_SB_NS_4hashIS7_EENS_8equal_toIS7_EELb1EEENS_21__unordered_map_equalIS7_SB_SG_SE_Lb1EEENS5_ISB_EEE6rehashEm(%"class.std::__1::__hash_table.50"*, i64) local_unnamed_addr #2 comdat align 2 {
  %3 = icmp eq i64 %1, 1
  br i1 %3, label %9, label %4

4:                                                ; preds = %2
  %5 = tail call i64 @llvm.ctpop.i64(i64 %1), !range !2
  %6 = icmp ugt i64 %5, 1
  br i1 %6, label %7, label %9

7:                                                ; preds = %4
  %8 = tail call i64 @_ZNSt3__112__next_primeEm(i64 %1) #12
  br label %9

9:                                                ; preds = %2, %4, %7
  %10 = phi i64 [ %8, %7 ], [ %1, %4 ], [ 2, %2 ]
  %11 = getelementptr inbounds %"class.std::__1::__hash_table.50", %"class.std::__1::__hash_table.50"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %12 = load i64, i64* %11, align 8
  %13 = icmp ugt i64 %10, %12
  br i1 %13, label %14, label %15

14:                                               ; preds = %9
  tail call void @_ZNSt3__112__hash_tableINS_17__hash_value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEN11dawn_native6vulkan11VulkanLayerEEENS_22__unordered_map_hasherIS7_SB_NS_4hashIS7_EENS_8equal_toIS7_EELb1EEENS_21__unordered_map_equalIS7_SB_SG_SE_Lb1EEENS5_ISB_EEE8__rehashEm(%"class.std::__1::__hash_table.50"* %0, i64 %10)
  br label %45

15:                                               ; preds = %9
  %16 = icmp ult i64 %10, %12
  br i1 %16, label %17, label %45

17:                                               ; preds = %15
  %18 = icmp ugt i64 %12, 2
  %19 = tail call i64 @llvm.ctpop.i64(i64 %12) #12, !range !2
  %20 = icmp ult i64 %19, 2
  %21 = and i1 %18, %20
  %22 = getelementptr inbounds %"class.std::__1::__hash_table.50", %"class.std::__1::__hash_table.50"* %0, i64 0, i32 2, i32 0, i32 0
  %23 = load i64, i64* %22, align 8
  %24 = uitofp i64 %23 to float
  %25 = getelementptr inbounds %"class.std::__1::__hash_table.50", %"class.std::__1::__hash_table.50"* %0, i64 0, i32 3, i32 0, i32 0
  %26 = load float, float* %25, align 4
  %27 = fdiv float %24, %26
  %28 = tail call float @llvm.ceil.f32(float %27) #12
  %29 = fptoui float %28 to i64
  br i1 %21, label %30, label %37

30:                                               ; preds = %17
  %31 = icmp ult i64 %29, 2
  br i1 %31, label %39, label %32

32:                                               ; preds = %30
  %33 = add i64 %29, -1
  %34 = tail call i64 @llvm.ctlz.i64(i64 %33, i1 true) #12, !range !2
  %35 = sub nuw nsw i64 64, %34
  %36 = shl i64 1, %35
  br label %39

37:                                               ; preds = %17
  %38 = tail call i64 @_ZNSt3__112__next_primeEm(i64 %29) #12
  br label %39

39:                                               ; preds = %32, %30, %37
  %40 = phi i64 [ %38, %37 ], [ %36, %32 ], [ %29, %30 ]
  %41 = icmp ult i64 %10, %40
  %42 = select i1 %41, i64 %40, i64 %10
  %43 = icmp ult i64 %42, %12
  br i1 %43, label %44, label %45

44:                                               ; preds = %39
  tail call void @_ZNSt3__112__hash_tableINS_17__hash_value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEN11dawn_native6vulkan11VulkanLayerEEENS_22__unordered_map_hasherIS7_SB_NS_4hashIS7_EENS_8equal_toIS7_EELb1EEENS_21__unordered_map_equalIS7_SB_SG_SE_Lb1EEENS5_ISB_EEE8__rehashEm(%"class.std::__1::__hash_table.50"* %0, i64 %42)
  br label %45

45:                                               ; preds = %15, %44, %39, %14
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__112__hash_tableINS_17__hash_value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEN11dawn_native6vulkan11VulkanLayerEEENS_22__unordered_map_hasherIS7_SB_NS_4hashIS7_EENS_8equal_toIS7_EELb1EEENS_21__unordered_map_equalIS7_SB_SG_SE_Lb1EEENS5_ISB_EEE8__rehashEm(%"class.std::__1::__hash_table.50"*, i64) local_unnamed_addr #2 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::__hash_table.50", %"class.std::__1::__hash_table.50"* %0, i64 0, i32 0, i32 0, i32 1, i32 0
  %4 = icmp eq i64 %1, 0
  br i1 %4, label %186, label %5

5:                                                ; preds = %2
  %6 = icmp ugt i64 %1, 2305843009213693951
  br i1 %6, label %7, label %8

7:                                                ; preds = %5
  tail call void @abort() #13
  unreachable

8:                                                ; preds = %5
  %9 = shl i64 %1, 3
  %10 = tail call i8* @_Znwm(i64 %9) #14
  %11 = getelementptr inbounds %"class.std::__1::__hash_table.50", %"class.std::__1::__hash_table.50"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %12 = load %"struct.std::__1::__hash_node_base.54"**, %"struct.std::__1::__hash_node_base.54"*** %11, align 8
  %13 = bitcast %"class.std::__1::__hash_table.50"* %0 to i8**
  store i8* %10, i8** %13, align 8
  %14 = icmp eq %"struct.std::__1::__hash_node_base.54"** %12, null
  br i1 %14, label %17, label %15

15:                                               ; preds = %8
  %16 = bitcast %"struct.std::__1::__hash_node_base.54"** %12 to i8*
  tail call void @_ZdlPv(i8* %16) #14
  br label %17

17:                                               ; preds = %15, %8
  %18 = getelementptr inbounds %"class.std::__1::__bucket_list_deallocator.56", %"class.std::__1::__bucket_list_deallocator.56"* %3, i64 0, i32 0, i32 0, i32 0
  store i64 %1, i64* %18, align 8
  %19 = add i64 %1, -1
  %20 = and i64 %1, 3
  %21 = icmp ult i64 %19, 3
  br i1 %21, label %24, label %22

22:                                               ; preds = %17
  %23 = sub i64 %1, %20
  br label %40

24:                                               ; preds = %40, %17
  %25 = phi i64 [ 0, %17 ], [ %54, %40 ]
  %26 = icmp eq i64 %20, 0
  br i1 %26, label %35, label %27

27:                                               ; preds = %24, %27
  %28 = phi i64 [ %32, %27 ], [ %25, %24 ]
  %29 = phi i64 [ %33, %27 ], [ %20, %24 ]
  %30 = load %"struct.std::__1::__hash_node_base.54"**, %"struct.std::__1::__hash_node_base.54"*** %11, align 8
  %31 = getelementptr inbounds %"struct.std::__1::__hash_node_base.54"*, %"struct.std::__1::__hash_node_base.54"** %30, i64 %28
  store %"struct.std::__1::__hash_node_base.54"* null, %"struct.std::__1::__hash_node_base.54"** %31, align 8
  %32 = add nuw i64 %28, 1
  %33 = add i64 %29, -1
  %34 = icmp eq i64 %33, 0
  br i1 %34, label %35, label %27, !llvm.loop !15

35:                                               ; preds = %27, %24
  %36 = getelementptr inbounds %"class.std::__1::__hash_table.50", %"class.std::__1::__hash_table.50"* %0, i64 0, i32 1, i32 0, i32 0
  %37 = getelementptr inbounds %"struct.std::__1::__hash_node_base.54", %"struct.std::__1::__hash_node_base.54"* %36, i64 0, i32 0
  %38 = load %"struct.std::__1::__hash_node_base.54"*, %"struct.std::__1::__hash_node_base.54"** %37, align 8
  %39 = icmp eq %"struct.std::__1::__hash_node_base.54"* %38, null
  br i1 %39, label %194, label %57

40:                                               ; preds = %40, %22
  %41 = phi i64 [ 0, %22 ], [ %54, %40 ]
  %42 = phi i64 [ %23, %22 ], [ %55, %40 ]
  %43 = load %"struct.std::__1::__hash_node_base.54"**, %"struct.std::__1::__hash_node_base.54"*** %11, align 8
  %44 = getelementptr inbounds %"struct.std::__1::__hash_node_base.54"*, %"struct.std::__1::__hash_node_base.54"** %43, i64 %41
  store %"struct.std::__1::__hash_node_base.54"* null, %"struct.std::__1::__hash_node_base.54"** %44, align 8
  %45 = or i64 %41, 1
  %46 = load %"struct.std::__1::__hash_node_base.54"**, %"struct.std::__1::__hash_node_base.54"*** %11, align 8
  %47 = getelementptr inbounds %"struct.std::__1::__hash_node_base.54"*, %"struct.std::__1::__hash_node_base.54"** %46, i64 %45
  store %"struct.std::__1::__hash_node_base.54"* null, %"struct.std::__1::__hash_node_base.54"** %47, align 8
  %48 = or i64 %41, 2
  %49 = load %"struct.std::__1::__hash_node_base.54"**, %"struct.std::__1::__hash_node_base.54"*** %11, align 8
  %50 = getelementptr inbounds %"struct.std::__1::__hash_node_base.54"*, %"struct.std::__1::__hash_node_base.54"** %49, i64 %48
  store %"struct.std::__1::__hash_node_base.54"* null, %"struct.std::__1::__hash_node_base.54"** %50, align 8
  %51 = or i64 %41, 3
  %52 = load %"struct.std::__1::__hash_node_base.54"**, %"struct.std::__1::__hash_node_base.54"*** %11, align 8
  %53 = getelementptr inbounds %"struct.std::__1::__hash_node_base.54"*, %"struct.std::__1::__hash_node_base.54"** %52, i64 %51
  store %"struct.std::__1::__hash_node_base.54"* null, %"struct.std::__1::__hash_node_base.54"** %53, align 8
  %54 = add nuw i64 %41, 4
  %55 = add i64 %42, -4
  %56 = icmp eq i64 %55, 0
  br i1 %56, label %24, label %40

57:                                               ; preds = %35
  %58 = getelementptr inbounds %"struct.std::__1::__hash_node_base.54", %"struct.std::__1::__hash_node_base.54"* %38, i64 1
  %59 = bitcast %"struct.std::__1::__hash_node_base.54"* %58 to i64*
  %60 = load i64, i64* %59, align 8
  %61 = tail call i64 @llvm.ctpop.i64(i64 %1) #12, !range !2
  %62 = icmp ugt i64 %61, 1
  br i1 %62, label %66, label %63

63:                                               ; preds = %57
  %64 = add i64 %1, -1
  %65 = and i64 %60, %64
  br label %70

66:                                               ; preds = %57
  %67 = icmp ult i64 %60, %1
  br i1 %67, label %70, label %68

68:                                               ; preds = %66
  %69 = urem i64 %60, %1
  br label %70

70:                                               ; preds = %63, %66, %68
  %71 = phi i64 [ %65, %63 ], [ %69, %68 ], [ %60, %66 ]
  %72 = load %"struct.std::__1::__hash_node_base.54"**, %"struct.std::__1::__hash_node_base.54"*** %11, align 8
  %73 = getelementptr inbounds %"struct.std::__1::__hash_node_base.54"*, %"struct.std::__1::__hash_node_base.54"** %72, i64 %71
  store %"struct.std::__1::__hash_node_base.54"* %36, %"struct.std::__1::__hash_node_base.54"** %73, align 8
  %74 = getelementptr inbounds %"struct.std::__1::__hash_node_base.54", %"struct.std::__1::__hash_node_base.54"* %38, i64 0, i32 0
  %75 = load %"struct.std::__1::__hash_node_base.54"*, %"struct.std::__1::__hash_node_base.54"** %74, align 8
  %76 = icmp eq %"struct.std::__1::__hash_node_base.54"* %75, null
  br i1 %76, label %194, label %77

77:                                               ; preds = %70
  %78 = add i64 %1, -1
  br label %79

79:                                               ; preds = %77, %180
  %80 = phi %"struct.std::__1::__hash_node_base.54"* [ %75, %77 ], [ %184, %180 ]
  %81 = phi i64 [ %71, %77 ], [ %182, %180 ]
  %82 = phi %"struct.std::__1::__hash_node_base.54"* [ %38, %77 ], [ %181, %180 ]
  %83 = getelementptr inbounds %"struct.std::__1::__hash_node_base.54", %"struct.std::__1::__hash_node_base.54"* %80, i64 1
  %84 = bitcast %"struct.std::__1::__hash_node_base.54"* %83 to i64*
  %85 = load i64, i64* %84, align 8
  br i1 %62, label %88, label %86

86:                                               ; preds = %79
  %87 = and i64 %85, %78
  br label %92

88:                                               ; preds = %79
  %89 = icmp ult i64 %85, %1
  br i1 %89, label %92, label %90

90:                                               ; preds = %88
  %91 = urem i64 %85, %1
  br label %92

92:                                               ; preds = %86, %88, %90
  %93 = phi i64 [ %87, %86 ], [ %91, %90 ], [ %85, %88 ]
  %94 = icmp eq i64 %93, %81
  br i1 %94, label %180, label %95

95:                                               ; preds = %92
  %96 = load %"struct.std::__1::__hash_node_base.54"**, %"struct.std::__1::__hash_node_base.54"*** %11, align 8
  %97 = getelementptr inbounds %"struct.std::__1::__hash_node_base.54"*, %"struct.std::__1::__hash_node_base.54"** %96, i64 %93
  %98 = load %"struct.std::__1::__hash_node_base.54"*, %"struct.std::__1::__hash_node_base.54"** %97, align 8
  %99 = icmp eq %"struct.std::__1::__hash_node_base.54"* %98, null
  br i1 %99, label %118, label %100

100:                                              ; preds = %95
  %101 = getelementptr inbounds %"struct.std::__1::__hash_node_base.54", %"struct.std::__1::__hash_node_base.54"* %80, i64 0, i32 0
  %102 = load %"struct.std::__1::__hash_node_base.54"*, %"struct.std::__1::__hash_node_base.54"** %101, align 8
  %103 = icmp eq %"struct.std::__1::__hash_node_base.54"* %102, null
  br i1 %103, label %166, label %104

104:                                              ; preds = %100
  %105 = getelementptr inbounds %"struct.std::__1::__hash_node_base.54", %"struct.std::__1::__hash_node_base.54"* %80, i64 2
  %106 = bitcast %"struct.std::__1::__hash_node_base.54"* %105 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %107 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %106, i64 0, i32 1, i32 0
  %108 = load i8, i8* %107, align 1
  %109 = icmp slt i8 %108, 0
  %110 = getelementptr inbounds %"struct.std::__1::__hash_node_base.54", %"struct.std::__1::__hash_node_base.54"* %80, i64 3
  %111 = bitcast %"struct.std::__1::__hash_node_base.54"* %110 to i64*
  %112 = load i64, i64* %111, align 8
  %113 = zext i8 %108 to i64
  %114 = select i1 %109, i64 %112, i64 %113
  %115 = bitcast %"struct.std::__1::__hash_node_base.54"* %105 to i8**
  %116 = bitcast %"struct.std::__1::__hash_node_base.54"* %105 to i8*
  %117 = icmp eq i64 %114, 0
  br label %119

118:                                              ; preds = %95
  store %"struct.std::__1::__hash_node_base.54"* %82, %"struct.std::__1::__hash_node_base.54"** %97, align 8
  br label %180

119:                                              ; preds = %104, %162
  %120 = phi %"struct.std::__1::__hash_node_base.54"* [ %102, %104 ], [ %164, %162 ]
  %121 = phi %"struct.std::__1::__hash_node_base.54"* [ %80, %104 ], [ %120, %162 ]
  %122 = getelementptr inbounds %"struct.std::__1::__hash_node_base.54", %"struct.std::__1::__hash_node_base.54"* %120, i64 2
  %123 = bitcast %"struct.std::__1::__hash_node_base.54"* %122 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %124 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %123, i64 0, i32 1, i32 0
  %125 = load i8, i8* %124, align 1
  %126 = icmp slt i8 %125, 0
  %127 = getelementptr inbounds %"struct.std::__1::__hash_node_base.54", %"struct.std::__1::__hash_node_base.54"* %120, i64 3
  %128 = bitcast %"struct.std::__1::__hash_node_base.54"* %127 to i64*
  %129 = load i64, i64* %128, align 8
  %130 = zext i8 %125 to i64
  %131 = select i1 %126, i64 %129, i64 %130
  %132 = icmp eq i64 %114, %131
  br i1 %132, label %133, label %166

133:                                              ; preds = %119
  %134 = load i8*, i8** %115, align 8
  %135 = select i1 %109, i8* %134, i8* %116
  %136 = bitcast %"struct.std::__1::__hash_node_base.54"* %122 to i8**
  %137 = load i8*, i8** %136, align 8
  %138 = bitcast %"struct.std::__1::__hash_node_base.54"* %122 to i8*
  %139 = select i1 %126, i8* %137, i8* %138
  br i1 %109, label %146, label %140

140:                                              ; preds = %133
  br i1 %117, label %162, label %141

141:                                              ; preds = %140
  %142 = ptrtoint i8* %134 to i64
  %143 = trunc i64 %142 to i8
  %144 = load i8, i8* %139, align 1
  %145 = icmp eq i8 %144, %143
  br i1 %145, label %147, label %166

146:                                              ; preds = %133
  br i1 %117, label %162, label %159

147:                                              ; preds = %141, %154
  %148 = phi i64 [ %151, %154 ], [ %113, %141 ]
  %149 = phi i8* [ %152, %154 ], [ %116, %141 ]
  %150 = phi i8* [ %155, %154 ], [ %139, %141 ]
  %151 = add i64 %148, -1
  %152 = getelementptr inbounds i8, i8* %149, i64 1
  %153 = icmp eq i64 %151, 0
  br i1 %153, label %162, label %154

154:                                              ; preds = %147
  %155 = getelementptr inbounds i8, i8* %150, i64 1
  %156 = load i8, i8* %152, align 1
  %157 = load i8, i8* %155, align 1
  %158 = icmp eq i8 %156, %157
  br i1 %158, label %147, label %166

159:                                              ; preds = %146
  %160 = tail call i32 @bcmp(i8* %135, i8* %139, i64 %114) #12
  %161 = icmp eq i32 %160, 0
  br i1 %161, label %162, label %166

162:                                              ; preds = %147, %140, %146, %159
  %163 = getelementptr inbounds %"struct.std::__1::__hash_node_base.54", %"struct.std::__1::__hash_node_base.54"* %120, i64 0, i32 0
  %164 = load %"struct.std::__1::__hash_node_base.54"*, %"struct.std::__1::__hash_node_base.54"** %163, align 8
  %165 = icmp eq %"struct.std::__1::__hash_node_base.54"* %164, null
  br i1 %165, label %166, label %119

166:                                              ; preds = %159, %162, %119, %141, %154, %100
  %167 = phi %"struct.std::__1::__hash_node_base.54"* [ %80, %100 ], [ %121, %154 ], [ %121, %159 ], [ %120, %162 ], [ %121, %119 ], [ %121, %141 ]
  %168 = bitcast %"struct.std::__1::__hash_node_base.54"* %167 to i64*
  %169 = load i64, i64* %168, align 8
  %170 = bitcast %"struct.std::__1::__hash_node_base.54"* %82 to i64*
  store i64 %169, i64* %170, align 8
  %171 = load %"struct.std::__1::__hash_node_base.54"**, %"struct.std::__1::__hash_node_base.54"*** %11, align 8
  %172 = getelementptr inbounds %"struct.std::__1::__hash_node_base.54"*, %"struct.std::__1::__hash_node_base.54"** %171, i64 %93
  %173 = bitcast %"struct.std::__1::__hash_node_base.54"** %172 to i64**
  %174 = load i64*, i64** %173, align 8
  %175 = load i64, i64* %174, align 8
  store i64 %175, i64* %168, align 8
  %176 = load %"struct.std::__1::__hash_node_base.54"**, %"struct.std::__1::__hash_node_base.54"*** %11, align 8
  %177 = getelementptr inbounds %"struct.std::__1::__hash_node_base.54"*, %"struct.std::__1::__hash_node_base.54"** %176, i64 %93
  %178 = load %"struct.std::__1::__hash_node_base.54"*, %"struct.std::__1::__hash_node_base.54"** %177, align 8
  %179 = getelementptr inbounds %"struct.std::__1::__hash_node_base.54", %"struct.std::__1::__hash_node_base.54"* %178, i64 0, i32 0
  store %"struct.std::__1::__hash_node_base.54"* %80, %"struct.std::__1::__hash_node_base.54"** %179, align 8
  br label %180

180:                                              ; preds = %92, %166, %118
  %181 = phi %"struct.std::__1::__hash_node_base.54"* [ %80, %118 ], [ %82, %166 ], [ %80, %92 ]
  %182 = phi i64 [ %93, %118 ], [ %81, %166 ], [ %81, %92 ]
  %183 = getelementptr inbounds %"struct.std::__1::__hash_node_base.54", %"struct.std::__1::__hash_node_base.54"* %181, i64 0, i32 0
  %184 = load %"struct.std::__1::__hash_node_base.54"*, %"struct.std::__1::__hash_node_base.54"** %183, align 8
  %185 = icmp eq %"struct.std::__1::__hash_node_base.54"* %184, null
  br i1 %185, label %194, label %79

186:                                              ; preds = %2
  %187 = getelementptr inbounds %"class.std::__1::__hash_table.50", %"class.std::__1::__hash_table.50"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %188 = load %"struct.std::__1::__hash_node_base.54"**, %"struct.std::__1::__hash_node_base.54"*** %187, align 8
  store %"struct.std::__1::__hash_node_base.54"** null, %"struct.std::__1::__hash_node_base.54"*** %187, align 8
  %189 = icmp eq %"struct.std::__1::__hash_node_base.54"** %188, null
  br i1 %189, label %192, label %190

190:                                              ; preds = %186
  %191 = bitcast %"struct.std::__1::__hash_node_base.54"** %188 to i8*
  tail call void @_ZdlPv(i8* %191) #14
  br label %192

192:                                              ; preds = %186, %190
  %193 = getelementptr inbounds %"class.std::__1::__bucket_list_deallocator.56", %"class.std::__1::__bucket_list_deallocator.56"* %3, i64 0, i32 0, i32 0, i32 0
  store i64 0, i64* %193, align 8
  br label %194

194:                                              ; preds = %180, %70, %35, %192
  ret void
}

; Function Attrs: nounwind readnone speculatable
declare i64 @llvm.ctpop.i64(i64) #10

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

; Function Attrs: nofree nounwind readonly
declare i32 @bcmp(i8* nocapture, i8* nocapture, i64) local_unnamed_addr #11

attributes #0 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { argmemonly nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { nounwind readnone speculatable }
attributes #11 = { nofree nounwind readonly }
attributes #12 = { nounwind }
attributes #13 = { noreturn nounwind }
attributes #14 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i64 0, i64 65}
!3 = !{!4}
!4 = distinct !{!4, !5, !"_ZNSt3__112__hash_tableINS_17__hash_value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEN11dawn_native6vulkan11InstanceExtEEENS_22__unordered_map_hasherIS7_SB_NS_4hashIS7_EENS_8equal_toIS7_EELb1EEENS_21__unordered_map_equalIS7_SB_SG_SE_Lb1EEENS5_ISB_EEE21__construct_node_hashIRKNS_21piecewise_construct_tEJNS_5tupleIJOS7_EEENSQ_IJEEEEEENS_10unique_ptrINS_11__hash_nodeISB_PvEENS_22__hash_node_destructorINS5_ISX_EEEEEEmOT_DpOT0_: argument 0"}
!5 = distinct !{!5, !"_ZNSt3__112__hash_tableINS_17__hash_value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEN11dawn_native6vulkan11InstanceExtEEENS_22__unordered_map_hasherIS7_SB_NS_4hashIS7_EENS_8equal_toIS7_EELb1EEENS_21__unordered_map_equalIS7_SB_SG_SE_Lb1EEENS5_ISB_EEE21__construct_node_hashIRKNS_21piecewise_construct_tEJNS_5tupleIJOS7_EEENSQ_IJEEEEEENS_10unique_ptrINS_11__hash_nodeISB_PvEENS_22__hash_node_destructorINS5_ISX_EEEEEEmOT_DpOT0_"}
!6 = distinct !{!6, !7}
!7 = !{!"llvm.loop.unroll.disable"}
!8 = !{!9}
!9 = distinct !{!9, !10, !"_ZNSt3__112__hash_tableINS_17__hash_value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEN11dawn_native6vulkan9DeviceExtEEENS_22__unordered_map_hasherIS7_SB_NS_4hashIS7_EENS_8equal_toIS7_EELb1EEENS_21__unordered_map_equalIS7_SB_SG_SE_Lb1EEENS5_ISB_EEE21__construct_node_hashIRKNS_21piecewise_construct_tEJNS_5tupleIJOS7_EEENSQ_IJEEEEEENS_10unique_ptrINS_11__hash_nodeISB_PvEENS_22__hash_node_destructorINS5_ISX_EEEEEEmOT_DpOT0_: argument 0"}
!10 = distinct !{!10, !"_ZNSt3__112__hash_tableINS_17__hash_value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEN11dawn_native6vulkan9DeviceExtEEENS_22__unordered_map_hasherIS7_SB_NS_4hashIS7_EENS_8equal_toIS7_EELb1EEENS_21__unordered_map_equalIS7_SB_SG_SE_Lb1EEENS5_ISB_EEE21__construct_node_hashIRKNS_21piecewise_construct_tEJNS_5tupleIJOS7_EEENSQ_IJEEEEEENS_10unique_ptrINS_11__hash_nodeISB_PvEENS_22__hash_node_destructorINS5_ISX_EEEEEEmOT_DpOT0_"}
!11 = distinct !{!11, !7}
!12 = !{!13}
!13 = distinct !{!13, !14, !"_ZNSt3__112__hash_tableINS_17__hash_value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEN11dawn_native6vulkan11VulkanLayerEEENS_22__unordered_map_hasherIS7_SB_NS_4hashIS7_EENS_8equal_toIS7_EELb1EEENS_21__unordered_map_equalIS7_SB_SG_SE_Lb1EEENS5_ISB_EEE21__construct_node_hashIRKNS_21piecewise_construct_tEJNS_5tupleIJOS7_EEENSQ_IJEEEEEENS_10unique_ptrINS_11__hash_nodeISB_PvEENS_22__hash_node_destructorINS5_ISX_EEEEEEmOT_DpOT0_: argument 0"}
!14 = distinct !{!14, !"_ZNSt3__112__hash_tableINS_17__hash_value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEN11dawn_native6vulkan11VulkanLayerEEENS_22__unordered_map_hasherIS7_SB_NS_4hashIS7_EENS_8equal_toIS7_EELb1EEENS_21__unordered_map_equalIS7_SB_SG_SE_Lb1EEENS5_ISB_EEE21__construct_node_hashIRKNS_21piecewise_construct_tEJNS_5tupleIJOS7_EEENSQ_IJEEEEEENS_10unique_ptrINS_11__hash_nodeISB_PvEENS_22__hash_node_destructorINS5_ISX_EEEEEEmOT_DpOT0_"}
!15 = distinct !{!15, !7}
