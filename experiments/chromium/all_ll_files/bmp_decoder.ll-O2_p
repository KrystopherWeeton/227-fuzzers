; ModuleID = '../../third_party/pdfium/core/fxcodec/bmp/bmp_decoder.cpp'
source_filename = "../../third_party/pdfium/core/fxcodec/bmp/bmp_decoder.cpp"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.fxcodec::ProgressiveDecoderIface::Context" = type { i32 (...)** }
%"class.fxcodec::BmpDecoder::Delegate" = type { i32 (...)** }
%"class.fxcodec::CFX_BmpContext" = type { %"class.fxcodec::ProgressiveDecoderIface::Context", %"class.fxcodec::CFX_BmpDecompressor", %"class.fxcrt::UnownedPtr.19" }
%"class.fxcodec::CFX_BmpDecompressor" = type { %"class.fxcrt::UnownedPtr", %"class.std::__1::vector", %"class.std::__1::vector.7", i32, i32, i32, i32, i32, i64, i64, i8, i16, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i8, %"class.fxcrt::RetainPtr" }
%"class.fxcrt::UnownedPtr" = type { %"class.fxcodec::CFX_BmpContext"* }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { i8*, i8*, %"class.std::__1::__compressed_pair.4" }
%"class.std::__1::__compressed_pair.4" = type { %"struct.std::__1::__compressed_pair_elem.5" }
%"struct.std::__1::__compressed_pair_elem.5" = type { i8* }
%"class.std::__1::vector.7" = type { %"class.std::__1::__vector_base.8" }
%"class.std::__1::__vector_base.8" = type { i32*, i32*, %"class.std::__1::__compressed_pair.9" }
%"class.std::__1::__compressed_pair.9" = type { %"struct.std::__1::__compressed_pair_elem.10" }
%"struct.std::__1::__compressed_pair_elem.10" = type { i32* }
%"class.fxcrt::RetainPtr" = type { %"class.std::__1::unique_ptr.12" }
%"class.std::__1::unique_ptr.12" = type { %"class.std::__1::__compressed_pair.13" }
%"class.std::__1::__compressed_pair.13" = type { %"struct.std::__1::__compressed_pair_elem.14" }
%"struct.std::__1::__compressed_pair_elem.14" = type { %class.CFX_CodecMemory* }
%class.CFX_CodecMemory = type { %"class.fxcrt::Retainable", %"class.std::__1::unique_ptr.15", i64, i64 }
%"class.fxcrt::Retainable" = type { i32 (...)**, i64 }
%"class.std::__1::unique_ptr.15" = type { %"class.std::__1::__compressed_pair.16" }
%"class.std::__1::__compressed_pair.16" = type { %"struct.std::__1::__compressed_pair_elem.5" }
%"class.fxcrt::UnownedPtr.19" = type { %"class.fxcodec::BmpDecoder::Delegate"* }
%"class.fxcodec::CFX_DIBAttribute" = type { i32, i32, i16, %"class.std::__1::map" }
%"class.std::__1::map" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.23", %"class.std::__1::__compressed_pair.28" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type opaque
%"class.std::__1::__compressed_pair.23" = type { %"struct.std::__1::__compressed_pair_elem.24" }
%"struct.std::__1::__compressed_pair_elem.24" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.28" = type { %"struct.std::__1::__compressed_pair_elem.29" }
%"struct.std::__1::__compressed_pair_elem.29" = type { i64 }

; Function Attrs: nounwind ssp uwtable
define hidden %"class.fxcodec::ProgressiveDecoderIface::Context"* @_ZN7fxcodec10BmpDecoder11StartDecodeEPNS0_8DelegateE(%"class.fxcodec::BmpDecoder::Delegate"*) local_unnamed_addr #0 align 2 {
  %2 = tail call i8* @_Znwm(i64 176) #3
  %3 = bitcast i8* %2 to %"class.fxcodec::CFX_BmpContext"*
  tail call void @_ZN7fxcodec14CFX_BmpContextC1EPNS_10BmpDecoder8DelegateE(%"class.fxcodec::CFX_BmpContext"* nonnull %3, %"class.fxcodec::BmpDecoder::Delegate"* %0) #4
  %4 = bitcast i8* %2 to %"class.fxcodec::ProgressiveDecoderIface::Context"*
  ret %"class.fxcodec::ProgressiveDecoderIface::Context"* %4
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i8 @_ZN7fxcodec10BmpDecoder10ReadHeaderEPNS_23ProgressiveDecoderIface7ContextEPiS4_PbS4_S4_PPKNSt3__16vectorIjNS6_9allocatorIjEEEEPNS_16CFX_DIBAttributeE(%"class.fxcodec::ProgressiveDecoderIface::Context"*, i32* nocapture, i32* nocapture, i8* nocapture, i32* nocapture, i32* nocapture, %"class.std::__1::vector.7"** nocapture, %"class.fxcodec::CFX_DIBAttribute"* nocapture) local_unnamed_addr #0 align 2 {
  %9 = getelementptr inbounds %"class.fxcodec::ProgressiveDecoderIface::Context", %"class.fxcodec::ProgressiveDecoderIface::Context"* %0, i64 1
  %10 = bitcast %"class.fxcodec::ProgressiveDecoderIface::Context"* %9 to %"class.fxcodec::CFX_BmpDecompressor"*
  %11 = tail call zeroext i8 @_ZN7fxcodec19CFX_BmpDecompressor10ReadHeaderEv(%"class.fxcodec::CFX_BmpDecompressor"* %10) #4
  %12 = icmp eq i8 %11, 1
  br i1 %12, label %13, label %38

13:                                               ; preds = %8
  %14 = getelementptr inbounds %"class.fxcodec::CFX_BmpDecompressor", %"class.fxcodec::CFX_BmpDecompressor"* %10, i64 0, i32 4
  %15 = load i32, i32* %14, align 4
  store i32 %15, i32* %1, align 4
  %16 = getelementptr inbounds %"class.fxcodec::ProgressiveDecoderIface::Context", %"class.fxcodec::ProgressiveDecoderIface::Context"* %0, i64 9
  %17 = bitcast %"class.fxcodec::ProgressiveDecoderIface::Context"* %16 to i32*
  %18 = load i32, i32* %17, align 8
  store i32 %18, i32* %2, align 4
  %19 = getelementptr inbounds %"class.fxcodec::ProgressiveDecoderIface::Context", %"class.fxcodec::ProgressiveDecoderIface::Context"* %0, i64 13
  %20 = bitcast %"class.fxcodec::ProgressiveDecoderIface::Context"* %19 to i8*
  %21 = load i8, i8* %20, align 8, !range !2
  store i8 %21, i8* %3, align 1
  %22 = getelementptr inbounds %"class.fxcodec::ProgressiveDecoderIface::Context", %"class.fxcodec::ProgressiveDecoderIface::Context"* %0, i64 10
  %23 = bitcast %"class.fxcodec::ProgressiveDecoderIface::Context"* %22 to i32*
  %24 = load i32, i32* %23, align 8
  store i32 %24, i32* %4, align 4
  %25 = getelementptr inbounds %"class.fxcodec::ProgressiveDecoderIface::Context", %"class.fxcodec::ProgressiveDecoderIface::Context"* %0, i64 14
  %26 = bitcast %"class.fxcodec::ProgressiveDecoderIface::Context"* %25 to i32*
  %27 = load i32, i32* %26, align 8
  store i32 %27, i32* %5, align 4
  %28 = getelementptr inbounds %"class.fxcodec::ProgressiveDecoderIface::Context", %"class.fxcodec::ProgressiveDecoderIface::Context"* %0, i64 5
  %29 = bitcast %"class.std::__1::vector.7"** %6 to %"class.fxcodec::ProgressiveDecoderIface::Context"**
  store %"class.fxcodec::ProgressiveDecoderIface::Context"* %28, %"class.fxcodec::ProgressiveDecoderIface::Context"** %29, align 8
  %30 = getelementptr inbounds %"class.fxcodec::CFX_DIBAttribute", %"class.fxcodec::CFX_DIBAttribute"* %7, i64 0, i32 2
  store i16 3, i16* %30, align 8
  %31 = getelementptr inbounds %"class.fxcodec::ProgressiveDecoderIface::Context", %"class.fxcodec::ProgressiveDecoderIface::Context"* %0, i64 17
  %32 = bitcast %"class.fxcodec::ProgressiveDecoderIface::Context"* %31 to i32*
  %33 = load i32, i32* %32, align 8
  %34 = getelementptr inbounds %"class.fxcodec::CFX_DIBAttribute", %"class.fxcodec::CFX_DIBAttribute"* %7, i64 0, i32 0
  store i32 %33, i32* %34, align 8
  %35 = getelementptr inbounds %"class.fxcodec::CFX_BmpDecompressor", %"class.fxcodec::CFX_BmpDecompressor"* %10, i64 0, i32 20
  %36 = load i32, i32* %35, align 4
  %37 = getelementptr inbounds %"class.fxcodec::CFX_DIBAttribute", %"class.fxcodec::CFX_DIBAttribute"* %7, i64 0, i32 1
  store i32 %36, i32* %37, align 4
  br label %38

38:                                               ; preds = %8, %13
  ret i8 %11
}

declare zeroext i8 @_ZN7fxcodec19CFX_BmpDecompressor10ReadHeaderEv(%"class.fxcodec::CFX_BmpDecompressor"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i8 @_ZN7fxcodec10BmpDecoder9LoadImageEPNS_23ProgressiveDecoderIface7ContextE(%"class.fxcodec::ProgressiveDecoderIface::Context"*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.fxcodec::ProgressiveDecoderIface::Context", %"class.fxcodec::ProgressiveDecoderIface::Context"* %0, i64 1
  %3 = bitcast %"class.fxcodec::ProgressiveDecoderIface::Context"* %2 to %"class.fxcodec::CFX_BmpDecompressor"*
  %4 = tail call zeroext i8 @_ZN7fxcodec19CFX_BmpDecompressor11DecodeImageEv(%"class.fxcodec::CFX_BmpDecompressor"* %3) #4
  ret i8 %4
}

declare zeroext i8 @_ZN7fxcodec19CFX_BmpDecompressor11DecodeImageEv(%"class.fxcodec::CFX_BmpDecompressor"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZN7fxcodec10BmpDecoder13GetAvailInputEPNS_23ProgressiveDecoderIface7ContextE(%"class.fxcodec::ProgressiveDecoderIface::Context"*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.fxcodec::ProgressiveDecoderIface::Context", %"class.fxcodec::ProgressiveDecoderIface::Context"* %0, i64 1
  %3 = bitcast %"class.fxcodec::ProgressiveDecoderIface::Context"* %2 to %"class.fxcodec::CFX_BmpDecompressor"*
  %4 = tail call i64 @_ZNK7fxcodec19CFX_BmpDecompressor13GetAvailInputEv(%"class.fxcodec::CFX_BmpDecompressor"* %3) #4
  ret i64 %4
}

declare i64 @_ZNK7fxcodec19CFX_BmpDecompressor13GetAvailInputEv(%"class.fxcodec::CFX_BmpDecompressor"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN7fxcodec10BmpDecoder5InputEPNS_23ProgressiveDecoderIface7ContextEN5fxcrt9RetainPtrI15CFX_CodecMemoryEEPNS_16CFX_DIBAttributeE(%"class.fxcodec::ProgressiveDecoderIface::Context"*, %"class.fxcrt::RetainPtr"* nocapture, %"class.fxcodec::CFX_DIBAttribute"* nocapture readnone) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.fxcrt::RetainPtr", align 8
  %5 = getelementptr inbounds %"class.fxcodec::ProgressiveDecoderIface::Context", %"class.fxcodec::ProgressiveDecoderIface::Context"* %0, i64 1
  %6 = bitcast %"class.fxcodec::ProgressiveDecoderIface::Context"* %5 to %"class.fxcodec::CFX_BmpDecompressor"*
  %7 = bitcast %"class.fxcrt::RetainPtr"* %4 to i64*
  %8 = bitcast %"class.fxcrt::RetainPtr"* %1 to i64*
  %9 = load i64, i64* %8, align 8
  store i64 %9, i64* %7, align 8
  store i64 0, i64* %8, align 8
  call void @_ZN7fxcodec19CFX_BmpDecompressor14SetInputBufferEN5fxcrt9RetainPtrI15CFX_CodecMemoryEE(%"class.fxcodec::CFX_BmpDecompressor"* %6, %"class.fxcrt::RetainPtr"* nonnull %4) #4
  %10 = getelementptr inbounds %"class.fxcrt::RetainPtr", %"class.fxcrt::RetainPtr"* %4, i64 0, i32 0, i32 0, i32 0, i32 0
  %11 = load %class.CFX_CodecMemory*, %class.CFX_CodecMemory** %10, align 8
  store %class.CFX_CodecMemory* null, %class.CFX_CodecMemory** %10, align 8
  %12 = icmp eq %class.CFX_CodecMemory* %11, null
  br i1 %12, label %24, label %13

13:                                               ; preds = %3
  %14 = getelementptr inbounds %class.CFX_CodecMemory, %class.CFX_CodecMemory* %11, i64 0, i32 0, i32 1
  %15 = load i64, i64* %14, align 8
  %16 = add nsw i64 %15, -1
  store i64 %16, i64* %14, align 8
  %17 = icmp eq i64 %16, 0
  br i1 %17, label %18, label %24

18:                                               ; preds = %13
  %19 = getelementptr inbounds %class.CFX_CodecMemory, %class.CFX_CodecMemory* %11, i64 0, i32 0
  %20 = bitcast %class.CFX_CodecMemory* %11 to void (%"class.fxcrt::Retainable"*)***
  %21 = load void (%"class.fxcrt::Retainable"*)**, void (%"class.fxcrt::Retainable"*)*** %20, align 8
  %22 = getelementptr inbounds void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %21, i64 1
  %23 = load void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %22, align 8
  call void %23(%"class.fxcrt::Retainable"* nonnull %19) #4
  br label %24

24:                                               ; preds = %3, %13, %18
  ret i1 true
}

declare void @_ZN7fxcodec19CFX_BmpDecompressor14SetInputBufferEN5fxcrt9RetainPtrI15CFX_CodecMemoryEE(%"class.fxcodec::CFX_BmpDecompressor"*, %"class.fxcrt::RetainPtr"*) local_unnamed_addr #1

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #2

declare void @_ZN7fxcodec14CFX_BmpContextC1EPNS_10BmpDecoder8DelegateE(%"class.fxcodec::CFX_BmpContext"*, %"class.fxcodec::BmpDecoder::Delegate"*) unnamed_addr #1

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { builtin nounwind }
attributes #4 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
