; ModuleID = '../../third_party/angle/src/compiler/translator/Symbol.cpp'
source_filename = "../../third_party/angle/src/compiler/translator/Symbol.cpp"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.sh::ImmutableString" = type { i8*, i64 }
%"class.std::__1::locale::id" = type <{ %"struct.std::__1::once_flag", i32, [4 x i8] }>
%"struct.std::__1::once_flag" = type { i64 }
%"class.sh::TSymbol" = type <{ %"class.sh::ImmutableString", %"class.sh::TSymbolUniqueId", i8, i8, i8, i8 }>
%"class.sh::TSymbolUniqueId" = type { i32 }
%"class.sh::TSymbolTable" = type { %"class.sh::TSymbolTableBase", %"class.std::__1::vector", %"class.std::__1::vector.1", i8, i32, i32, i32, %struct.ShBuiltInResources, %"class.std::__1::map", %"class.sh::TVariable"* }
%"class.sh::TSymbolTableBase" = type { %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"* }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"*, %"class.std::__1::__compressed_pair" }
%"class.std::__1::unique_ptr" = type opaque
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.std::__1::unique_ptr"* }
%"class.std::__1::vector.1" = type { %"class.std::__1::__vector_base.2" }
%"class.std::__1::__vector_base.2" = type { %"class.std::__1::unique_ptr.3"*, %"class.std::__1::unique_ptr.3"*, %"class.std::__1::__compressed_pair.4" }
%"class.std::__1::unique_ptr.3" = type opaque
%"class.std::__1::__compressed_pair.4" = type { %"struct.std::__1::__compressed_pair_elem.5" }
%"struct.std::__1::__compressed_pair_elem.5" = type { %"class.std::__1::unique_ptr.3"* }
%struct.ShBuiltInResources = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i64 (i8*, i64)*, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, %"struct.std::__1::array", %"struct.std::__1::array", i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, float, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%"struct.std::__1::array" = type { [3 x i32] }
%"class.std::__1::map" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.9", %"class.std::__1::__compressed_pair.14" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8, [7 x i8] }>
%"class.std::__1::__compressed_pair.9" = type { %"struct.std::__1::__compressed_pair_elem.10" }
%"struct.std::__1::__compressed_pair_elem.10" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.14" = type { %"struct.std::__1::__compressed_pair_elem.15" }
%"struct.std::__1::__compressed_pair_elem.15" = type { i64 }
%"class.sh::TVariable" = type { %"class.sh::TSymbol.base", %"class.sh::TType"*, %"class.sh::TConstantUnion"* }
%"class.sh::TSymbol.base" = type <{ %"class.sh::ImmutableString", %"class.sh::TSymbolUniqueId", i8, i8, i8 }>
%"class.sh::TType" = type { i32, i32, i32, i8, i8, %"struct.sh::TMemoryQualifier", i8, %"struct.sh::TLayoutQualifier", i8, i8, %"class.sh::TSpan", %"class.sh::TVector"*, %"class.sh::TInterfaceBlock"*, %"class.sh::TStructure"*, i8, i64, i8* }
%"struct.sh::TMemoryQualifier" = type { i8, i8, i8, i8, i8 }
%"struct.sh::TLayoutQualifier" = type <{ i32, i32, i32, i32, %"struct.sh::WorkGroupSize", i32, i32, i32, i32, i8, i8, [2 x i8], i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i8, [3 x i8] }>
%"struct.sh::WorkGroupSize" = type { [3 x i32] }
%"class.sh::TSpan" = type { i32*, i64 }
%"class.sh::TVector" = type opaque
%"class.sh::TInterfaceBlock" = type { %"class.sh::TSymbol.base", %"class.sh::TFieldListCollection", i32, i32 }
%"class.sh::TFieldListCollection" = type { %"class.sh::TVector.17"*, i64, i32, %"class.std::__1::basic_string" }
%"class.sh::TVector.17" = type { %"class.std::__1::vector.18" }
%"class.std::__1::vector.18" = type { %"class.std::__1::__vector_base.19" }
%"class.std::__1::__vector_base.19" = type { %"class.sh::TField"**, %"class.sh::TField"**, %"class.std::__1::__compressed_pair.20" }
%"class.sh::TField" = type <{ %"class.sh::TType"*, %"class.sh::ImmutableString", %"struct.sh::TSourceLoc", i8, [7 x i8] }>
%"struct.sh::TSourceLoc" = type { i32, i32, i32, i32 }
%"class.std::__1::__compressed_pair.20" = type { %"struct.std::__1::__compressed_pair_elem.21" }
%"struct.std::__1::__compressed_pair_elem.21" = type { %"class.sh::TField"** }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.23" }
%"class.std::__1::__compressed_pair.23" = type { %"struct.std::__1::__compressed_pair_elem.24" }
%"struct.std::__1::__compressed_pair_elem.24" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, pool_allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, pool_allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, pool_allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, pool_allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.sh::TStructure" = type <{ %"class.sh::TSymbol.base", i8, %"class.sh::TFieldListCollection", i8, [7 x i8] }>
%"class.sh::TConstantUnion" = type { %union.anon.28, i32 }
%union.anon.28 = type { i32 }
%"class.sh::TFunction" = type <{ %"class.sh::TSymbol.base", i8, %"class.sh::TVector.29"*, %"class.sh::TVariable"**, i64, %"class.sh::TType"*, %"class.sh::ImmutableString", i8, i8, i8, i8, [4 x i8] }>
%"class.sh::TVector.29" = type { %"class.std::__1::vector.30" }
%"class.std::__1::vector.30" = type { %"class.std::__1::__vector_base.31" }
%"class.std::__1::__vector_base.31" = type { %"class.sh::TVariable"**, %"class.sh::TVariable"**, %"class.std::__1::__compressed_pair.32" }
%"class.std::__1::__compressed_pair.32" = type { %"struct.std::__1::__compressed_pair_elem.33" }
%"struct.std::__1::__compressed_pair_elem.33" = type { %"class.sh::TVariable"** }
%"class.sh::ImmutableStringBuilder" = type { i64, i64, i8* }
%"class.angle::PoolAllocator" = type <{ i64, i64, i64, i64, i64, %"struct.angle::PoolAllocator::Header"*, %"struct.angle::PoolAllocator::Header"*, %"class.std::__1::vector.45", i32, [4 x i8], i64, i8, [7 x i8] }>
%"struct.angle::PoolAllocator::Header" = type { %"struct.angle::PoolAllocator::Header"*, i64 }
%"class.std::__1::vector.45" = type { %"class.std::__1::__vector_base.46" }
%"class.std::__1::__vector_base.46" = type { %"struct.angle::PoolAllocator::AllocState"*, %"struct.angle::PoolAllocator::AllocState"*, %"class.std::__1::__compressed_pair.47" }
%"struct.angle::PoolAllocator::AllocState" = type { i64, %"struct.angle::PoolAllocator::Header"* }
%"class.std::__1::__compressed_pair.47" = type { %"struct.std::__1::__compressed_pair_elem.48" }
%"struct.std::__1::__compressed_pair_elem.48" = type { %"struct.angle::PoolAllocator::AllocState"* }
%"class.sh::TMap" = type opaque
%"class.std::__1::basic_stringstream" = type { %"class.std::__1::basic_iostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_iostream.base" = type { %"class.std::__1::basic_istream.base", %"class.std::__1::basic_ostream.base" }
%"class.std::__1::basic_istream.base" = type { i32 (...)**, i64 }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string.37", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_string.37" = type { %"class.std::__1::__compressed_pair.38" }
%"class.std::__1::__compressed_pair.38" = type { %"struct.std::__1::__compressed_pair_elem.39" }
%"struct.std::__1::__compressed_pair_elem.39" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon.40 }
%union.anon.40 = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, pool_allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon.41 }
%struct.anon.41 = type { i8 }
%"class.std::__1::basic_iostream" = type { %"class.std::__1::basic_istream.base", %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ios" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32, [4 x i8] }>
%"class.std::__1::__basic_string_common" = type { i8 }
%"class.std::__1::__vector_base_common" = type { i8 }
%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry" = type { i8, %"class.std::__1::basic_ostream"* }
%"class.std::__1::locale::facet" = type { %"class.std::__1::__shared_count" }
%"class.std::__1::__shared_count" = type { i32 (...)**, i64 }
%"class.std::__1::ctype" = type <{ %"class.std::__1::locale::facet", i16*, i8, [7 x i8] }>

$_ZN2sh16InitializeStreamINSt3__118basic_stringstreamIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEEET_v = comdat any

$_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m = comdat any

$_ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_ = comdat any

$_ZNSt3__112basic_stringIcNS_11char_traitsIcEE14pool_allocatorIcEE6appendEPKcm = comdat any

@.str = private unnamed_addr constant [2 x i8] c"_\00", align 1
@.str.1 = private unnamed_addr constant [2 x i8] c".\00", align 1
@.str.2 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@_ZN2shL21kEmptyImmutableStringE = internal unnamed_addr constant %"class.sh::ImmutableString" { i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.2, i32 0, i32 0), i64 0 }, align 8
@_ZTVNSt3__118basic_stringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE = external unnamed_addr constant { [5 x i8*], [5 x i8*], [5 x i8*] }, align 8
@_ZTTNSt3__118basic_stringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE = external unnamed_addr constant [10 x i8*], align 8
@_ZTVNSt3__115basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEEE = external unnamed_addr constant { [16 x i8*] }, align 8
@.str.3 = private unnamed_addr constant [5 x i8] c"main\00", align 1
@.str.4 = private unnamed_addr constant [10 x i8] c"imageSize\00", align 1
@.str.5 = private unnamed_addr constant [10 x i8] c"imageLoad\00", align 1
@.str.6 = private unnamed_addr constant [11 x i8] c"imageStore\00", align 1
@.str.7 = private unnamed_addr constant [20 x i8] c"imageAtomicExchange\00", align 1
@.str.8 = private unnamed_addr constant [14 x i8] c"atomicCounter\00", align 1
@_ZNSt3__15ctypeIcE2idE = external global %"class.std::__1::locale::id", align 8

@_ZN2sh7TSymbolC1EPNS_12TSymbolTableERKNS_15ImmutableStringENS_10SymbolTypeENS_11SymbolClassENS_10TExtensionE = hidden unnamed_addr alias void (%"class.sh::TSymbol"*, %"class.sh::TSymbolTable"*, %"class.sh::ImmutableString"*, i8, i8, i8), void (%"class.sh::TSymbol"*, %"class.sh::TSymbolTable"*, %"class.sh::ImmutableString"*, i8, i8, i8)* @_ZN2sh7TSymbolC2EPNS_12TSymbolTableERKNS_15ImmutableStringENS_10SymbolTypeENS_11SymbolClassENS_10TExtensionE
@_ZN2sh9TVariableC1EPNS_12TSymbolTableERKNS_15ImmutableStringEPKNS_5TTypeENS_10SymbolTypeENS_10TExtensionE = hidden unnamed_addr alias void (%"class.sh::TVariable"*, %"class.sh::TSymbolTable"*, %"class.sh::ImmutableString"*, %"class.sh::TType"*, i8, i8), void (%"class.sh::TVariable"*, %"class.sh::TSymbolTable"*, %"class.sh::ImmutableString"*, %"class.sh::TType"*, i8, i8)* @_ZN2sh9TVariableC2EPNS_12TSymbolTableERKNS_15ImmutableStringEPKNS_5TTypeENS_10SymbolTypeENS_10TExtensionE
@_ZN2sh10TStructureC1EPNS_12TSymbolTableERKNS_15ImmutableStringEPKNS_7TVectorIPNS_6TFieldEEENS_10SymbolTypeE = hidden unnamed_addr alias void (%"class.sh::TStructure"*, %"class.sh::TSymbolTable"*, %"class.sh::ImmutableString"*, %"class.sh::TVector.17"*, i8), void (%"class.sh::TStructure"*, %"class.sh::TSymbolTable"*, %"class.sh::ImmutableString"*, %"class.sh::TVector.17"*, i8)* @_ZN2sh10TStructureC2EPNS_12TSymbolTableERKNS_15ImmutableStringEPKNS_7TVectorIPNS_6TFieldEEENS_10SymbolTypeE
@_ZN2sh10TStructureC1ERKNS_15TSymbolUniqueIdERKNS_15ImmutableStringENS_10TExtensionEPKNS_7TVectorIPNS_6TFieldEEE = hidden unnamed_addr alias void (%"class.sh::TStructure"*, %"class.sh::TSymbolUniqueId"*, %"class.sh::ImmutableString"*, i8, %"class.sh::TVector.17"*), void (%"class.sh::TStructure"*, %"class.sh::TSymbolUniqueId"*, %"class.sh::ImmutableString"*, i8, %"class.sh::TVector.17"*)* @_ZN2sh10TStructureC2ERKNS_15TSymbolUniqueIdERKNS_15ImmutableStringENS_10TExtensionEPKNS_7TVectorIPNS_6TFieldEEE
@_ZN2sh15TInterfaceBlockC1EPNS_12TSymbolTableERKNS_15ImmutableStringEPKNS_7TVectorIPNS_6TFieldEEERKNS_16TLayoutQualifierENS_10SymbolTypeENS_10TExtensionE = hidden unnamed_addr alias void (%"class.sh::TInterfaceBlock"*, %"class.sh::TSymbolTable"*, %"class.sh::ImmutableString"*, %"class.sh::TVector.17"*, %"struct.sh::TLayoutQualifier"*, i8, i8), void (%"class.sh::TInterfaceBlock"*, %"class.sh::TSymbolTable"*, %"class.sh::ImmutableString"*, %"class.sh::TVector.17"*, %"struct.sh::TLayoutQualifier"*, i8, i8)* @_ZN2sh15TInterfaceBlockC2EPNS_12TSymbolTableERKNS_15ImmutableStringEPKNS_7TVectorIPNS_6TFieldEEERKNS_16TLayoutQualifierENS_10SymbolTypeENS_10TExtensionE
@_ZN2sh15TInterfaceBlockC1ERKNS_15TSymbolUniqueIdERKNS_15ImmutableStringENS_10TExtensionEPKNS_7TVectorIPNS_6TFieldEEE = hidden unnamed_addr alias void (%"class.sh::TInterfaceBlock"*, %"class.sh::TSymbolUniqueId"*, %"class.sh::ImmutableString"*, i8, %"class.sh::TVector.17"*), void (%"class.sh::TInterfaceBlock"*, %"class.sh::TSymbolUniqueId"*, %"class.sh::ImmutableString"*, i8, %"class.sh::TVector.17"*)* @_ZN2sh15TInterfaceBlockC2ERKNS_15TSymbolUniqueIdERKNS_15ImmutableStringENS_10TExtensionEPKNS_7TVectorIPNS_6TFieldEEE
@_ZN2sh9TFunctionC1EPNS_12TSymbolTableERKNS_15ImmutableStringENS_10SymbolTypeEPKNS_5TTypeEb = hidden unnamed_addr alias void (%"class.sh::TFunction"*, %"class.sh::TSymbolTable"*, %"class.sh::ImmutableString"*, i8, %"class.sh::TType"*, i1), void (%"class.sh::TFunction"*, %"class.sh::TSymbolTable"*, %"class.sh::ImmutableString"*, i8, %"class.sh::TType"*, i1)* @_ZN2sh9TFunctionC2EPNS_12TSymbolTableERKNS_15ImmutableStringENS_10SymbolTypeEPKNS_5TTypeEb

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2sh7TSymbolC2EPNS_12TSymbolTableERKNS_15ImmutableStringENS_10SymbolTypeENS_11SymbolClassENS_10TExtensionE(%"class.sh::TSymbol"* nocapture, %"class.sh::TSymbolTable"*, %"class.sh::ImmutableString"* nocapture readonly dereferenceable(16), i8 zeroext, i8 zeroext, i8 zeroext) unnamed_addr #0 align 2 {
  %7 = alloca %"class.sh::TSymbolUniqueId", align 4
  %8 = bitcast %"class.sh::TSymbol"* %0 to i8*
  %9 = bitcast %"class.sh::ImmutableString"* %2 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %8, i8* align 8 %9, i64 16, i1 false)
  %10 = bitcast %"class.sh::TSymbolUniqueId"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %10)
  call void @_ZN2sh15TSymbolUniqueIdC1EPNS_12TSymbolTableE(%"class.sh::TSymbolUniqueId"* nonnull %7, %"class.sh::TSymbolTable"* %1) #9
  %11 = getelementptr inbounds %"class.sh::TSymbolUniqueId", %"class.sh::TSymbolUniqueId"* %7, i64 0, i32 0
  %12 = load i32, i32* %11, align 4
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %10)
  %13 = getelementptr inbounds %"class.sh::TSymbol", %"class.sh::TSymbol"* %0, i64 0, i32 1, i32 0
  store i32 %12, i32* %13, align 8
  %14 = getelementptr inbounds %"class.sh::TSymbol", %"class.sh::TSymbol"* %0, i64 0, i32 2
  store i8 %3, i8* %14, align 4
  %15 = getelementptr inbounds %"class.sh::TSymbol", %"class.sh::TSymbol"* %0, i64 0, i32 3
  store i8 %5, i8* %15, align 1
  %16 = getelementptr inbounds %"class.sh::TSymbol", %"class.sh::TSymbol"* %0, i64 0, i32 4
  store i8 %4, i8* %16, align 2
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

; Function Attrs: nounwind ssp uwtable
define hidden { i8*, i64 } @_ZNK2sh7TSymbol4nameEv(%"class.sh::TSymbol"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.sh::ImmutableStringBuilder", align 16
  %3 = alloca i8, align 1
  %4 = getelementptr inbounds %"class.sh::TSymbol", %"class.sh::TSymbol"* %0, i64 0, i32 0, i32 1
  %5 = load i64, i64* %4, align 8
  %6 = icmp eq i64 %5, 0
  br i1 %6, label %10, label %7

7:                                                ; preds = %1
  %8 = getelementptr inbounds %"class.sh::TSymbol", %"class.sh::TSymbol"* %0, i64 0, i32 0, i32 0
  %9 = load i8*, i8** %8, align 8
  br label %41

10:                                               ; preds = %1
  %11 = getelementptr inbounds %"class.sh::TSymbol", %"class.sh::TSymbol"* %0, i64 0, i32 1, i32 0
  %12 = bitcast %"class.sh::ImmutableStringBuilder"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %12) #9
  %13 = getelementptr inbounds %"class.sh::ImmutableStringBuilder", %"class.sh::ImmutableStringBuilder"* %2, i64 0, i32 0
  %14 = getelementptr inbounds %"class.sh::ImmutableStringBuilder", %"class.sh::ImmutableStringBuilder"* %2, i64 0, i32 2
  %15 = bitcast %"class.sh::ImmutableStringBuilder"* %2 to <2 x i64>*
  store <2 x i64> <i64 0, i64 9>, <2 x i64>* %15, align 16
  %16 = tail call %"class.angle::PoolAllocator"* @_Z22GetGlobalPoolAllocatorv() #9
  %17 = tail call i8* @_ZN5angle13PoolAllocator8allocateEm(%"class.angle::PoolAllocator"* %16, i64 10) #9
  store i8* %17, i8** %14, align 16
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %3) #9
  store i8 115, i8* %3, align 1
  %18 = call dereferenceable(24) %"class.sh::ImmutableStringBuilder"* @_ZN2sh22ImmutableStringBuilderlsERKc(%"class.sh::ImmutableStringBuilder"* nonnull %2, i8* nonnull dereferenceable(1) %3) #9
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %3) #9
  %19 = load i32, i32* %11, align 4
  %20 = icmp ult i32 %19, 268435456
  br i1 %20, label %149, label %21

21:                                               ; preds = %164, %161, %158, %155, %152, %149, %10
  %22 = phi i32 [ 7, %10 ], [ 6, %149 ], [ 5, %152 ], [ 4, %155 ], [ 3, %158 ], [ 2, %161 ], [ %167, %164 ]
  %23 = shl nuw nsw i32 %22, 2
  %24 = ashr i32 %19, %23
  %25 = and i32 %24, 15
  %26 = icmp ult i32 %25, 10
  %27 = or i32 %25, 48
  %28 = add nuw nsw i32 %25, 87
  %29 = select i1 %26, i32 %27, i32 %28
  %30 = trunc i32 %29 to i8
  %31 = load i8*, i8** %14, align 16
  %32 = load i64, i64* %13, align 16
  %33 = add i64 %32, 1
  store i64 %33, i64* %13, align 16
  %34 = getelementptr inbounds i8, i8* %31, i64 %32
  store i8 %30, i8* %34, align 1
  %35 = add nsw i32 %22, -1
  %36 = icmp eq i32 %22, 0
  br i1 %36, label %37, label %46

37:                                               ; preds = %46, %61, %76, %91, %106, %121, %135, %21
  %38 = call { i8*, i64 } @_ZN2sh22ImmutableStringBuildercvNS_15ImmutableStringEEv(%"class.sh::ImmutableStringBuilder"* nonnull %2) #9
  %39 = extractvalue { i8*, i64 } %38, 0
  %40 = extractvalue { i8*, i64 } %38, 1
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %12) #9
  br label %41

41:                                               ; preds = %37, %7
  %42 = phi i8* [ %39, %37 ], [ %9, %7 ]
  %43 = phi i64 [ %40, %37 ], [ %5, %7 ]
  %44 = insertvalue { i8*, i64 } undef, i8* %42, 0
  %45 = insertvalue { i8*, i64 } %44, i64 %43, 1
  ret { i8*, i64 } %45

46:                                               ; preds = %21
  %47 = shl nsw i32 %35, 2
  %48 = ashr i32 %19, %47
  %49 = and i32 %48, 15
  %50 = icmp ult i32 %49, 10
  %51 = or i32 %49, 48
  %52 = add nuw nsw i32 %49, 87
  %53 = select i1 %50, i32 %51, i32 %52
  %54 = trunc i32 %53 to i8
  %55 = load i8*, i8** %14, align 16
  %56 = load i64, i64* %13, align 16
  %57 = add i64 %56, 1
  store i64 %57, i64* %13, align 16
  %58 = getelementptr inbounds i8, i8* %55, i64 %56
  store i8 %54, i8* %58, align 1
  %59 = add nsw i32 %22, -2
  %60 = icmp sgt i32 %35, 0
  br i1 %60, label %61, label %37

61:                                               ; preds = %46
  %62 = shl nsw i32 %59, 2
  %63 = ashr i32 %19, %62
  %64 = and i32 %63, 15
  %65 = icmp ult i32 %64, 10
  %66 = or i32 %64, 48
  %67 = add nuw nsw i32 %64, 87
  %68 = select i1 %65, i32 %66, i32 %67
  %69 = trunc i32 %68 to i8
  %70 = load i8*, i8** %14, align 16
  %71 = load i64, i64* %13, align 16
  %72 = add i64 %71, 1
  store i64 %72, i64* %13, align 16
  %73 = getelementptr inbounds i8, i8* %70, i64 %71
  store i8 %69, i8* %73, align 1
  %74 = add nsw i32 %22, -3
  %75 = icmp sgt i32 %59, 0
  br i1 %75, label %76, label %37

76:                                               ; preds = %61
  %77 = shl nsw i32 %74, 2
  %78 = ashr i32 %19, %77
  %79 = and i32 %78, 15
  %80 = icmp ult i32 %79, 10
  %81 = or i32 %79, 48
  %82 = add nuw nsw i32 %79, 87
  %83 = select i1 %80, i32 %81, i32 %82
  %84 = trunc i32 %83 to i8
  %85 = load i8*, i8** %14, align 16
  %86 = load i64, i64* %13, align 16
  %87 = add i64 %86, 1
  store i64 %87, i64* %13, align 16
  %88 = getelementptr inbounds i8, i8* %85, i64 %86
  store i8 %84, i8* %88, align 1
  %89 = add nsw i32 %22, -4
  %90 = icmp sgt i32 %74, 0
  br i1 %90, label %91, label %37

91:                                               ; preds = %76
  %92 = shl nsw i32 %89, 2
  %93 = ashr i32 %19, %92
  %94 = and i32 %93, 15
  %95 = icmp ult i32 %94, 10
  %96 = or i32 %94, 48
  %97 = add nuw nsw i32 %94, 87
  %98 = select i1 %95, i32 %96, i32 %97
  %99 = trunc i32 %98 to i8
  %100 = load i8*, i8** %14, align 16
  %101 = load i64, i64* %13, align 16
  %102 = add i64 %101, 1
  store i64 %102, i64* %13, align 16
  %103 = getelementptr inbounds i8, i8* %100, i64 %101
  store i8 %99, i8* %103, align 1
  %104 = add nsw i32 %22, -5
  %105 = icmp sgt i32 %89, 0
  br i1 %105, label %106, label %37

106:                                              ; preds = %91
  %107 = shl nsw i32 %104, 2
  %108 = ashr i32 %19, %107
  %109 = and i32 %108, 15
  %110 = icmp ult i32 %109, 10
  %111 = or i32 %109, 48
  %112 = add nuw nsw i32 %109, 87
  %113 = select i1 %110, i32 %111, i32 %112
  %114 = trunc i32 %113 to i8
  %115 = load i8*, i8** %14, align 16
  %116 = load i64, i64* %13, align 16
  %117 = add i64 %116, 1
  store i64 %117, i64* %13, align 16
  %118 = getelementptr inbounds i8, i8* %115, i64 %116
  store i8 %114, i8* %118, align 1
  %119 = add nsw i32 %22, -6
  %120 = icmp sgt i32 %104, 0
  br i1 %120, label %121, label %37

121:                                              ; preds = %106
  %122 = shl nsw i32 %119, 2
  %123 = ashr i32 %19, %122
  %124 = and i32 %123, 15
  %125 = icmp ult i32 %124, 10
  %126 = or i32 %124, 48
  %127 = add nuw nsw i32 %124, 87
  %128 = select i1 %125, i32 %126, i32 %127
  %129 = trunc i32 %128 to i8
  %130 = load i8*, i8** %14, align 16
  %131 = load i64, i64* %13, align 16
  %132 = add i64 %131, 1
  store i64 %132, i64* %13, align 16
  %133 = getelementptr inbounds i8, i8* %130, i64 %131
  store i8 %129, i8* %133, align 1
  %134 = icmp sgt i32 %119, 0
  br i1 %134, label %135, label %37

135:                                              ; preds = %121
  %136 = shl nuw nsw i32 %22, 2
  %137 = add nsw i32 %136, -28
  %138 = ashr i32 %19, %137
  %139 = and i32 %138, 15
  %140 = icmp ult i32 %139, 10
  %141 = or i32 %139, 48
  %142 = add nuw nsw i32 %139, 87
  %143 = select i1 %140, i32 %141, i32 %142
  %144 = trunc i32 %143 to i8
  %145 = load i8*, i8** %14, align 16
  %146 = load i64, i64* %13, align 16
  %147 = add i64 %146, 1
  store i64 %147, i64* %13, align 16
  %148 = getelementptr inbounds i8, i8* %145, i64 %146
  store i8 %144, i8* %148, align 1
  br label %37

149:                                              ; preds = %10
  %150 = and i32 %19, 251658240
  %151 = icmp eq i32 %150, 0
  br i1 %151, label %152, label %21

152:                                              ; preds = %149
  %153 = and i32 %19, 15728640
  %154 = icmp eq i32 %153, 0
  br i1 %154, label %155, label %21

155:                                              ; preds = %152
  %156 = and i32 %19, 983040
  %157 = icmp eq i32 %156, 0
  br i1 %157, label %158, label %21

158:                                              ; preds = %155
  %159 = and i32 %19, 61440
  %160 = icmp eq i32 %159, 0
  br i1 %160, label %161, label %21

161:                                              ; preds = %158
  %162 = and i32 %19, 3840
  %163 = icmp eq i32 %162, 0
  br i1 %163, label %164, label %21

164:                                              ; preds = %161
  %165 = and i32 %19, 240
  %166 = icmp eq i32 %165, 0
  %167 = select i1 %166, i32 0, i32 1
  br label %21
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

declare dereferenceable(24) %"class.sh::ImmutableStringBuilder"* @_ZN2sh22ImmutableStringBuilderlsERKc(%"class.sh::ImmutableStringBuilder"*, i8* dereferenceable(1)) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

declare { i8*, i64 } @_ZN2sh22ImmutableStringBuildercvNS_15ImmutableStringEEv(%"class.sh::ImmutableStringBuilder"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden { i8*, i64 } @_ZNK2sh7TSymbol14getMangledNameEv(%"class.sh::TSymbol"* nocapture) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.sh::TSymbol", %"class.sh::TSymbol"* %0, i64 0, i32 4
  %3 = load i8, i8* %2, align 2
  %4 = icmp eq i8 %3, 0
  br i1 %4, label %5, label %21

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.sh::TSymbol", %"class.sh::TSymbol"* %0, i64 2, i32 1
  %7 = bitcast %"class.sh::TSymbolUniqueId"* %6 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = icmp eq i64 %8, 0
  br i1 %9, label %14, label %10

10:                                               ; preds = %5
  %11 = getelementptr inbounds %"class.sh::TSymbol", %"class.sh::TSymbol"* %0, i64 2, i32 0, i32 1
  %12 = bitcast i64* %11 to i8**
  %13 = load i8*, i8** %12, align 8
  br label %25

14:                                               ; preds = %5
  %15 = bitcast %"class.sh::TSymbol"* %0 to %"class.sh::TFunction"*
  %16 = tail call { i8*, i64 } @_ZNK2sh9TFunction16buildMangledNameEv(%"class.sh::TFunction"* %15) #9
  %17 = extractvalue { i8*, i64 } %16, 0
  %18 = extractvalue { i8*, i64 } %16, 1
  %19 = getelementptr inbounds %"class.sh::TSymbol", %"class.sh::TSymbol"* %0, i64 2, i32 0, i32 1
  %20 = bitcast i64* %19 to i8**
  store i8* %17, i8** %20, align 8
  store i64 %18, i64* %7, align 8
  br label %25

21:                                               ; preds = %1
  %22 = tail call { i8*, i64 } @_ZNK2sh7TSymbol4nameEv(%"class.sh::TSymbol"* %0)
  %23 = extractvalue { i8*, i64 } %22, 0
  %24 = extractvalue { i8*, i64 } %22, 1
  br label %25

25:                                               ; preds = %14, %10, %21
  %26 = phi i8* [ %23, %21 ], [ %13, %10 ], [ %17, %14 ]
  %27 = phi i64 [ %24, %21 ], [ %8, %10 ], [ %18, %14 ]
  %28 = insertvalue { i8*, i64 } undef, i8* %26, 0
  %29 = insertvalue { i8*, i64 } %28, i64 %27, 1
  ret { i8*, i64 } %29
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2sh9TVariableC2EPNS_12TSymbolTableERKNS_15ImmutableStringEPKNS_5TTypeENS_10SymbolTypeENS_10TExtensionE(%"class.sh::TVariable"* nocapture, %"class.sh::TSymbolTable"*, %"class.sh::ImmutableString"* nocapture readonly dereferenceable(16), %"class.sh::TType"*, i8 zeroext, i8 zeroext) unnamed_addr #0 align 2 {
  %7 = alloca %"class.sh::TSymbolUniqueId", align 4
  %8 = bitcast %"class.sh::TVariable"* %0 to i8*
  %9 = bitcast %"class.sh::ImmutableString"* %2 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %8, i8* align 8 %9, i64 16, i1 false) #9
  %10 = bitcast %"class.sh::TSymbolUniqueId"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %10) #9
  call void @_ZN2sh15TSymbolUniqueIdC1EPNS_12TSymbolTableE(%"class.sh::TSymbolUniqueId"* nonnull %7, %"class.sh::TSymbolTable"* %1) #9
  %11 = getelementptr inbounds %"class.sh::TSymbolUniqueId", %"class.sh::TSymbolUniqueId"* %7, i64 0, i32 0
  %12 = load i32, i32* %11, align 4
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %10) #9
  %13 = getelementptr inbounds %"class.sh::TVariable", %"class.sh::TVariable"* %0, i64 0, i32 0, i32 1, i32 0
  store i32 %12, i32* %13, align 8
  %14 = getelementptr inbounds %"class.sh::TVariable", %"class.sh::TVariable"* %0, i64 0, i32 0, i32 2
  store i8 %4, i8* %14, align 4
  %15 = getelementptr inbounds %"class.sh::TVariable", %"class.sh::TVariable"* %0, i64 0, i32 0, i32 3
  store i8 %5, i8* %15, align 1
  %16 = getelementptr inbounds %"class.sh::TVariable", %"class.sh::TVariable"* %0, i64 0, i32 0, i32 4
  store i8 1, i8* %16, align 2
  %17 = getelementptr inbounds %"class.sh::TVariable", %"class.sh::TVariable"* %0, i64 0, i32 1
  store %"class.sh::TType"* %3, %"class.sh::TType"** %17, align 8
  %18 = getelementptr inbounds %"class.sh::TVariable", %"class.sh::TVariable"* %0, i64 0, i32 2
  store %"class.sh::TConstantUnion"* null, %"class.sh::TConstantUnion"** %18, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2sh10TStructureC2EPNS_12TSymbolTableERKNS_15ImmutableStringEPKNS_7TVectorIPNS_6TFieldEEENS_10SymbolTypeE(%"class.sh::TStructure"*, %"class.sh::TSymbolTable"*, %"class.sh::ImmutableString"* nocapture readonly dereferenceable(16), %"class.sh::TVector.17"*, i8 zeroext) unnamed_addr #0 align 2 {
  %6 = alloca %"class.sh::TSymbolUniqueId", align 4
  %7 = bitcast %"class.sh::TStructure"* %0 to i8*
  %8 = bitcast %"class.sh::ImmutableString"* %2 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %7, i8* align 8 %8, i64 16, i1 false) #9
  %9 = bitcast %"class.sh::TSymbolUniqueId"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %9) #9
  call void @_ZN2sh15TSymbolUniqueIdC1EPNS_12TSymbolTableE(%"class.sh::TSymbolUniqueId"* nonnull %6, %"class.sh::TSymbolTable"* %1) #9
  %10 = getelementptr inbounds %"class.sh::TSymbolUniqueId", %"class.sh::TSymbolUniqueId"* %6, i64 0, i32 0
  %11 = load i32, i32* %10, align 4
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %9) #9
  %12 = getelementptr inbounds %"class.sh::TStructure", %"class.sh::TStructure"* %0, i64 0, i32 0, i32 1, i32 0
  store i32 %11, i32* %12, align 8
  %13 = getelementptr inbounds %"class.sh::TStructure", %"class.sh::TStructure"* %0, i64 0, i32 0, i32 2
  store i8 %4, i8* %13, align 4
  %14 = getelementptr inbounds %"class.sh::TStructure", %"class.sh::TStructure"* %0, i64 0, i32 0, i32 3
  store i8 0, i8* %14, align 1
  %15 = getelementptr inbounds %"class.sh::TStructure", %"class.sh::TStructure"* %0, i64 0, i32 0, i32 4
  store i8 2, i8* %15, align 2
  %16 = getelementptr inbounds %"class.sh::TStructure", %"class.sh::TStructure"* %0, i64 0, i32 2
  call void @_ZN2sh20TFieldListCollectionC2EPKNS_7TVectorIPNS_6TFieldEEE(%"class.sh::TFieldListCollection"* %16, %"class.sh::TVector.17"* %3) #9
  ret void
}

declare void @_ZN2sh20TFieldListCollectionC2EPKNS_7TVectorIPNS_6TFieldEEE(%"class.sh::TFieldListCollection"*, %"class.sh::TVector.17"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2sh10TStructureC2ERKNS_15TSymbolUniqueIdERKNS_15ImmutableStringENS_10TExtensionEPKNS_7TVectorIPNS_6TFieldEEE(%"class.sh::TStructure"*, %"class.sh::TSymbolUniqueId"* nocapture readonly dereferenceable(4), %"class.sh::ImmutableString"* nocapture readonly dereferenceable(16), i8 zeroext, %"class.sh::TVector.17"*) unnamed_addr #0 align 2 {
  %6 = bitcast %"class.sh::TStructure"* %0 to i8*
  %7 = bitcast %"class.sh::ImmutableString"* %2 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %6, i8* align 8 %7, i64 16, i1 false) #9
  %8 = getelementptr inbounds %"class.sh::TSymbolUniqueId", %"class.sh::TSymbolUniqueId"* %1, i64 0, i32 0
  %9 = getelementptr inbounds %"class.sh::TStructure", %"class.sh::TStructure"* %0, i64 0, i32 0, i32 1, i32 0
  %10 = load i32, i32* %8, align 4
  store i32 %10, i32* %9, align 8
  %11 = getelementptr inbounds %"class.sh::TStructure", %"class.sh::TStructure"* %0, i64 0, i32 0, i32 2
  store i8 0, i8* %11, align 4
  %12 = getelementptr inbounds %"class.sh::TStructure", %"class.sh::TStructure"* %0, i64 0, i32 0, i32 3
  store i8 %3, i8* %12, align 1
  %13 = getelementptr inbounds %"class.sh::TStructure", %"class.sh::TStructure"* %0, i64 0, i32 0, i32 4
  store i8 2, i8* %13, align 2
  %14 = getelementptr inbounds %"class.sh::TStructure", %"class.sh::TStructure"* %0, i64 0, i32 2
  tail call void @_ZN2sh20TFieldListCollectionC2EPKNS_7TVectorIPNS_6TFieldEEE(%"class.sh::TFieldListCollection"* %14, %"class.sh::TVector.17"* %4) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK2sh10TStructure20createSamplerSymbolsEPKcRKNSt3__112basic_stringIcNS3_11char_traitsIcEE14pool_allocatorIcEEEPNS_7TVectorIPKNS_9TVariableEEEPNS_4TMapISF_S9_NS3_4lessISF_EEEEPNS_12TSymbolTableE(%"class.sh::TStructure"* nocapture readonly, i8*, %"class.std::__1::basic_string"* nocapture readonly dereferenceable(24), %"class.sh::TVector.29"*, %"class.sh::TMap"*, %"class.sh::TSymbolTable"*) local_unnamed_addr #0 align 2 {
  %7 = alloca %"class.std::__1::basic_stringstream", align 8
  %8 = alloca %"class.std::__1::basic_string", align 8
  %9 = alloca %"class.sh::ImmutableString", align 8
  %10 = alloca %"class.std::__1::basic_string.37", align 8
  %11 = getelementptr inbounds %"class.sh::TStructure", %"class.sh::TStructure"* %0, i64 0, i32 2, i32 0
  %12 = bitcast %"class.sh::TVector.17"** %11 to %"class.std::__1::vector.18"**
  %13 = load %"class.std::__1::vector.18"*, %"class.std::__1::vector.18"** %12, align 8
  %14 = getelementptr inbounds %"class.std::__1::vector.18", %"class.std::__1::vector.18"* %13, i64 0, i32 0, i32 0
  %15 = load %"class.sh::TField"**, %"class.sh::TField"*** %14, align 8
  %16 = getelementptr inbounds %"class.std::__1::vector.18", %"class.std::__1::vector.18"* %13, i64 0, i32 0, i32 1
  %17 = load %"class.sh::TField"**, %"class.sh::TField"*** %16, align 8
  %18 = icmp eq %"class.sh::TField"** %15, %17
  br i1 %18, label %60, label %19

19:                                               ; preds = %6
  %20 = bitcast %"class.std::__1::basic_stringstream"* %7 to i8*
  %21 = getelementptr inbounds %"class.std::__1::basic_stringstream", %"class.std::__1::basic_stringstream"* %7, i64 0, i32 0, i32 1
  %22 = bitcast %"class.std::__1::basic_ostream.base"* %21 to %"class.std::__1::basic_ostream"*
  %23 = bitcast %"class.std::__1::basic_string"* %8 to i8*
  %24 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %25 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %26 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %27 = bitcast %"class.std::__1::basic_string"* %2 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, pool_allocator<char> >::__short"*
  %28 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, pool_allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, pool_allocator<char> >::__short"* %27, i64 0, i32 1, i32 0
  %29 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %30 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %31 = bitcast %"class.std::__1::basic_string"* %2 to i8*
  %32 = bitcast %"class.std::__1::basic_string"* %8 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, pool_allocator<char> >::__short"*
  %33 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, pool_allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, pool_allocator<char> >::__short"* %32, i64 0, i32 1, i32 0
  %34 = bitcast %"class.sh::ImmutableString"* %9 to i8*
  %35 = bitcast %"class.std::__1::basic_string.37"* %10 to i8*
  %36 = getelementptr inbounds %"class.std::__1::basic_stringstream", %"class.std::__1::basic_stringstream"* %7, i64 0, i32 1
  %37 = getelementptr inbounds %"class.sh::ImmutableString", %"class.sh::ImmutableString"* %9, i64 0, i32 0
  %38 = bitcast %"class.std::__1::basic_string.37"* %10 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %39 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %38, i64 0, i32 1, i32 0
  %40 = getelementptr inbounds %"class.std::__1::basic_string.37", %"class.std::__1::basic_string.37"* %10, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %41 = getelementptr inbounds %"class.std::__1::basic_string.37", %"class.std::__1::basic_string.37"* %10, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %42 = getelementptr inbounds %"class.sh::ImmutableString", %"class.sh::ImmutableString"* %9, i64 0, i32 1
  %43 = load i64, i64* bitcast ([10 x i8*]* @_ZTTNSt3__118basic_stringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE to i64*), align 8
  %44 = bitcast %"class.std::__1::basic_stringstream"* %7 to i64*
  %45 = load i64, i64* bitcast (i8** getelementptr inbounds ([10 x i8*], [10 x i8*]* @_ZTTNSt3__118basic_stringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, i64 8) to i64*), align 8
  %46 = inttoptr i64 %43 to i8*
  %47 = getelementptr i8, i8* %46, i64 -24
  %48 = bitcast i8* %47 to i64*
  %49 = load i64, i64* bitcast (i8** getelementptr inbounds ([10 x i8*], [10 x i8*]* @_ZTTNSt3__118basic_stringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, i64 9) to i64*), align 8
  %50 = bitcast %"class.std::__1::basic_ostream.base"* %21 to i64*
  %51 = getelementptr inbounds %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_stringbuf"* %36, i64 0, i32 0, i32 0
  %52 = getelementptr inbounds %"class.std::__1::basic_stringstream", %"class.std::__1::basic_stringstream"* %7, i64 0, i32 1, i32 1
  %53 = bitcast %"class.std::__1::basic_string.37"* %52 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %54 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %53, i64 0, i32 1, i32 0
  %55 = getelementptr inbounds %"class.std::__1::basic_string.37", %"class.std::__1::basic_string.37"* %52, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %56 = getelementptr inbounds %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_stringbuf"* %36, i64 0, i32 0
  %57 = bitcast %"class.std::__1::basic_stringstream"* %7 to %"class.std::__1::basic_iostream"*
  %58 = getelementptr inbounds %"class.std::__1::basic_stringstream", %"class.std::__1::basic_stringstream"* %7, i64 0, i32 2
  %59 = bitcast %"class.std::__1::basic_ios.base"* %58 to %"class.std::__1::basic_ios"*
  br label %61

60:                                               ; preds = %140, %6
  ret void

61:                                               ; preds = %19, %140
  %62 = phi %"class.sh::TField"** [ %15, %19 ], [ %141, %140 ]
  %63 = load %"class.sh::TField"*, %"class.sh::TField"** %62, align 8
  %64 = getelementptr inbounds %"class.sh::TField", %"class.sh::TField"* %63, i64 0, i32 0
  %65 = load %"class.sh::TType"*, %"class.sh::TType"** %64, align 8
  %66 = getelementptr inbounds %"class.sh::TType", %"class.sh::TType"* %65, i64 0, i32 0
  %67 = load i32, i32* %66, align 8
  %68 = add i32 %67, -8
  %69 = icmp ult i32 %68, 43
  br i1 %69, label %72, label %70

70:                                               ; preds = %61
  %71 = call zeroext i1 @_ZNK2sh5TType29isStructureContainingSamplersEv(%"class.sh::TType"* %65) #9
  br i1 %71, label %72, label %140

72:                                               ; preds = %70, %61
  call void @llvm.lifetime.start.p0i8(i64 280, i8* nonnull %20) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %20, i8 -86, i64 280, i1 false)
  call void @_ZN2sh16InitializeStreamINSt3__118basic_stringstreamIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEEET_v(%"class.std::__1::basic_stringstream"* nonnull sret %7)
  %73 = call i64 @strlen(i8* %1) #9
  %74 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %22, i8* %1, i64 %73) #9
  %75 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %74, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str, i64 0, i64 0), i64 1) #9
  %76 = getelementptr inbounds %"class.sh::TField", %"class.sh::TField"* %63, i64 0, i32 1
  %77 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZlsRNSt3__113basic_ostreamIcNS_11char_traitsIcEEEERKN2sh15ImmutableStringE(%"class.std::__1::basic_ostream"* dereferenceable(160) %75, %"class.sh::ImmutableString"* dereferenceable(16) %76) #9
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %23) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %23, i8 0, i64 24, i1 false) #9, !alias.scope !2
  %78 = load i8, i8* %28, align 1, !noalias !2
  %79 = icmp slt i8 %78, 0
  %80 = load i64, i64* %29, align 8
  %81 = load i8*, i8** %30, align 8
  %82 = zext i8 %78 to i64
  %83 = select i1 %79, i64 %80, i64 %82
  %84 = select i1 %79, i8* %81, i8* %31
  %85 = add i64 %83, 1
  %86 = icmp ugt i64 %85, -17
  br i1 %86, label %87, label %89

87:                                               ; preds = %72
  %88 = bitcast %"class.std::__1::basic_string"* %8 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* nonnull %88) #10
  unreachable

89:                                               ; preds = %72
  %90 = icmp ult i64 %85, 23
  br i1 %90, label %97, label %91

91:                                               ; preds = %89
  %92 = add nuw i64 %83, 17
  %93 = and i64 %92, -16
  %94 = call %"class.angle::PoolAllocator"* @_Z22GetGlobalPoolAllocatorv() #9
  %95 = call i8* @_ZN5angle13PoolAllocator8allocateEm(%"class.angle::PoolAllocator"* %94, i64 %93) #9
  store i8* %95, i8** %24, align 8, !alias.scope !2
  %96 = or i64 %93, -9223372036854775808
  store i64 %96, i64* %26, align 8, !alias.scope !2
  store i64 %83, i64* %25, align 8, !alias.scope !2
  br label %100

97:                                               ; preds = %89
  %98 = trunc i64 %83 to i8
  store i8 %98, i8* %33, align 1, !alias.scope !2
  %99 = icmp eq i64 %83, 0
  br i1 %99, label %102, label %100

100:                                              ; preds = %91, %97
  %101 = phi i8* [ %95, %91 ], [ %23, %97 ]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %101, i8* align 1 %84, i64 %83, i1 false) #9
  br label %102

102:                                              ; preds = %97, %100
  %103 = phi i8* [ %23, %97 ], [ %101, %100 ]
  %104 = getelementptr inbounds i8, i8* %103, i64 %83
  store i8 0, i8* %104, align 1
  %105 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEE14pool_allocatorIcEE6appendEPKcm(%"class.std::__1::basic_string"* nonnull %8, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0), i64 1) #9
  %106 = getelementptr inbounds %"class.sh::ImmutableString", %"class.sh::ImmutableString"* %76, i64 0, i32 0
  %107 = load i8*, i8** %106, align 8
  %108 = icmp eq i8* %107, null
  %109 = select i1 %108, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.2, i64 0, i64 0), i8* %107
  %110 = call i64 @strlen(i8* %109) #9
  %111 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEE14pool_allocatorIcEE6appendEPKcm(%"class.std::__1::basic_string"* nonnull %8, i8* %109, i64 %110) #9
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %34) #9
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %35) #9
  call void @_ZNKSt3__115basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEE3strEv(%"class.std::__1::basic_string.37"* nonnull sret %10, %"class.std::__1::basic_stringbuf"* %36) #9
  %112 = load i8, i8* %39, align 1
  %113 = icmp slt i8 %112, 0
  %114 = load i8*, i8** %40, align 8
  %115 = load i64, i64* %41, align 8
  %116 = zext i8 %112 to i64
  %117 = select i1 %113, i8* %114, i8* %35
  %118 = select i1 %113, i64 %115, i64 %116
  %119 = add i64 %118, 1
  %120 = call %"class.angle::PoolAllocator"* @_Z22GetGlobalPoolAllocatorv() #9
  %121 = call i8* @_ZN5angle13PoolAllocator8allocateEm(%"class.angle::PoolAllocator"* %120, i64 %119) #9
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %121, i8* align 1 %117, i64 %119, i1 false) #9
  store i8* %121, i8** %37, align 8
  %122 = load i8, i8* %39, align 1
  %123 = icmp slt i8 %122, 0
  %124 = load i64, i64* %41, align 8
  %125 = zext i8 %122 to i64
  %126 = select i1 %123, i64 %124, i64 %125
  store i64 %126, i64* %42, align 8
  call void @_ZNK2sh5TType20createSamplerSymbolsERKNS_15ImmutableStringERKNSt3__112basic_stringIcNS4_11char_traitsIcEE14pool_allocatorIcEEEPNS_7TVectorIPKNS_9TVariableEEEPNS_4TMapISG_SA_NS4_4lessISG_EEEEPNS_12TSymbolTableE(%"class.sh::TType"* %65, %"class.sh::ImmutableString"* nonnull dereferenceable(16) %9, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %8, %"class.sh::TVector.29"* %3, %"class.sh::TMap"* %4, %"class.sh::TSymbolTable"* %5) #9
  %127 = load i8, i8* %39, align 1
  %128 = icmp slt i8 %127, 0
  br i1 %128, label %129, label %131

129:                                              ; preds = %102
  %130 = load i8*, i8** %40, align 8
  call void @_ZdlPv(i8* %130) #11
  br label %131

131:                                              ; preds = %102, %129
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %35) #9
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %34) #9
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %23) #9
  store i64 %43, i64* %44, align 8
  %132 = load i64, i64* %48, align 8
  %133 = getelementptr inbounds i8, i8* %20, i64 %132
  %134 = bitcast i8* %133 to i64*
  store i64 %45, i64* %134, align 8
  store i64 %49, i64* %50, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTVNSt3__115basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %51, align 8
  %135 = load i8, i8* %54, align 1
  %136 = icmp slt i8 %135, 0
  br i1 %136, label %137, label %139

137:                                              ; preds = %131
  %138 = load i8*, i8** %55, align 8
  call void @_ZdlPv(i8* %138) #11
  br label %139

139:                                              ; preds = %131, %137
  call void @_ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED2Ev(%"class.std::__1::basic_streambuf"* %56) #9
  call void @_ZNSt3__114basic_iostreamIcNS_11char_traitsIcEEED2Ev(%"class.std::__1::basic_iostream"* nonnull %57, i8** getelementptr inbounds ([10 x i8*], [10 x i8*]* @_ZTTNSt3__118basic_stringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, i64 1)) #9
  call void @_ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev(%"class.std::__1::basic_ios"* %59) #9
  call void @llvm.lifetime.end.p0i8(i64 280, i8* nonnull %20) #9
  br label %140

140:                                              ; preds = %139, %70
  %141 = getelementptr inbounds %"class.sh::TField"*, %"class.sh::TField"** %62, i64 1
  %142 = icmp eq %"class.sh::TField"** %141, %17
  br i1 %142, label %60, label %61
}

declare zeroext i1 @_ZNK2sh5TType29isStructureContainingSamplersEv(%"class.sh::TType"*) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2sh16InitializeStreamINSt3__118basic_stringstreamIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEEET_v(%"class.std::__1::basic_stringstream"* noalias sret) local_unnamed_addr #0 comdat {
  %2 = alloca %"class.std::__1::locale", align 8
  %3 = alloca %"class.std::__1::locale", align 8
  %4 = alloca %"class.std::__1::locale", align 8
  %5 = bitcast %"class.std::__1::basic_stringstream"* %0 to i8*
  %6 = getelementptr inbounds %"class.std::__1::basic_stringstream", %"class.std::__1::basic_stringstream"* %0, i64 0, i32 0, i32 0, i32 1
  %7 = bitcast i64* %6 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %7, i8 -86, i64 272, i1 false)
  %8 = getelementptr inbounds %"class.std::__1::basic_stringstream", %"class.std::__1::basic_stringstream"* %0, i64 0, i32 2, i32 0, i32 0
  %9 = getelementptr inbounds %"class.std::__1::basic_stringstream", %"class.std::__1::basic_stringstream"* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*], [5 x i8*] }* @_ZTVNSt3__118basic_stringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, inrange i32 2, i64 3) to i32 (...)**), i32 (...)*** %8, align 8
  %10 = getelementptr inbounds %"class.std::__1::basic_stringstream", %"class.std::__1::basic_stringstream"* %0, i64 0, i32 0, i32 1, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*], [5 x i8*] }* @_ZTVNSt3__118basic_stringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, inrange i32 1, i64 3) to i32 (...)**), i32 (...)*** %10, align 8
  %11 = getelementptr inbounds %"class.std::__1::basic_stringstream", %"class.std::__1::basic_stringstream"* %0, i64 0, i32 1
  %12 = getelementptr inbounds %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_stringbuf"* %11, i64 0, i32 0
  %13 = load i64, i64* bitcast (i8** getelementptr inbounds ([10 x i8*], [10 x i8*]* @_ZTTNSt3__118basic_stringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, i64 2) to i64*), align 8
  %14 = bitcast %"class.std::__1::basic_stringstream"* %0 to i64*
  store i64 %13, i64* %14, align 8
  %15 = load i64, i64* bitcast (i8** getelementptr inbounds ([10 x i8*], [10 x i8*]* @_ZTTNSt3__118basic_stringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, i64 3) to i64*), align 8
  %16 = bitcast %"class.std::__1::basic_stringstream"* %0 to i8**
  %17 = inttoptr i64 %13 to i8*
  %18 = getelementptr i8, i8* %17, i64 -24
  %19 = bitcast i8* %18 to i64*
  %20 = load i64, i64* %19, align 8
  %21 = getelementptr inbounds i8, i8* %5, i64 %20
  %22 = bitcast i8* %21 to i64*
  store i64 %15, i64* %22, align 8
  %23 = getelementptr inbounds %"class.std::__1::basic_stringstream", %"class.std::__1::basic_stringstream"* %0, i64 0, i32 0, i32 0, i32 1
  store i64 0, i64* %23, align 8
  %24 = load i8*, i8** %16, align 8
  %25 = getelementptr i8, i8* %24, i64 -24
  %26 = bitcast i8* %25 to i64*
  %27 = load i64, i64* %26, align 8
  %28 = getelementptr inbounds i8, i8* %5, i64 %27
  %29 = bitcast i8* %28 to %"class.std::__1::ios_base"*
  %30 = bitcast %"class.std::__1::basic_stringbuf"* %11 to i8*
  tail call void @_ZNSt3__18ios_base4initEPv(%"class.std::__1::ios_base"* %29, i8* %30) #9
  %31 = getelementptr inbounds i8, i8* %28, i64 136
  %32 = bitcast i8* %31 to %"class.std::__1::basic_ostream"**
  store %"class.std::__1::basic_ostream"* null, %"class.std::__1::basic_ostream"** %32, align 8
  %33 = getelementptr inbounds i8, i8* %28, i64 144
  %34 = bitcast i8* %33 to i32*
  store i32 -1, i32* %34, align 8
  %35 = getelementptr inbounds %"class.std::__1::basic_stringstream", %"class.std::__1::basic_stringstream"* %0, i64 0, i32 0, i32 1
  %36 = load i64, i64* bitcast (i8** getelementptr inbounds ([10 x i8*], [10 x i8*]* @_ZTTNSt3__118basic_stringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, i64 4) to i64*), align 8
  %37 = bitcast %"class.std::__1::basic_ostream.base"* %35 to i64*
  store i64 %36, i64* %37, align 8
  %38 = load i64, i64* bitcast (i8** getelementptr inbounds ([10 x i8*], [10 x i8*]* @_ZTTNSt3__118basic_stringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, i64 5) to i64*), align 8
  %39 = inttoptr i64 %36 to i8*
  %40 = getelementptr i8, i8* %39, i64 -24
  %41 = bitcast i8* %40 to i64*
  %42 = load i64, i64* %41, align 8
  %43 = bitcast %"class.std::__1::basic_ostream.base"* %35 to i8*
  %44 = getelementptr inbounds i8, i8* %43, i64 %42
  %45 = bitcast i8* %44 to i64*
  store i64 %38, i64* %45, align 8
  %46 = load i64, i64* bitcast (i8** getelementptr inbounds ([10 x i8*], [10 x i8*]* @_ZTTNSt3__118basic_stringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, i64 1) to i64*), align 8
  store i64 %46, i64* %14, align 8
  %47 = load i64, i64* bitcast (i8** getelementptr inbounds ([10 x i8*], [10 x i8*]* @_ZTTNSt3__118basic_stringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, i64 6) to i64*), align 8
  %48 = inttoptr i64 %46 to i8*
  %49 = getelementptr i8, i8* %48, i64 -24
  %50 = bitcast i8* %49 to i64*
  %51 = load i64, i64* %50, align 8
  %52 = getelementptr inbounds i8, i8* %5, i64 %51
  %53 = bitcast i8* %52 to i64*
  store i64 %47, i64* %53, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*], [5 x i8*] }* @_ZTVNSt3__118basic_stringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, inrange i32 0, i64 3) to i32 (...)**), i32 (...)*** %9, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*], [5 x i8*] }* @_ZTVNSt3__118basic_stringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, inrange i32 2, i64 3) to i32 (...)**), i32 (...)*** %8, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*], [5 x i8*] }* @_ZTVNSt3__118basic_stringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, inrange i32 1, i64 3) to i32 (...)**), i32 (...)*** %10, align 8
  tail call void @_ZNSt3__115basic_streambufIcNS_11char_traitsIcEEEC2Ev(%"class.std::__1::basic_streambuf"* %12) #9
  %54 = getelementptr inbounds %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_stringbuf"* %11, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTVNSt3__115basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %54, align 8
  %55 = getelementptr inbounds %"class.std::__1::basic_stringstream", %"class.std::__1::basic_stringstream"* %0, i64 0, i32 1, i32 1
  %56 = getelementptr inbounds %"class.std::__1::basic_stringstream", %"class.std::__1::basic_stringstream"* %0, i64 0, i32 1, i32 3
  %57 = bitcast %"class.std::__1::basic_string.37"* %55 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %57, i8 0, i64 32, i1 false) #9
  store i32 24, i32* %56, align 8
  %58 = load i8*, i8** %16, align 8
  %59 = getelementptr i8, i8* %58, i64 -24
  %60 = bitcast i8* %59 to i64*
  %61 = load i64, i64* %60, align 8
  %62 = getelementptr inbounds i8, i8* %5, i64 %61
  %63 = tail call dereferenceable(8) %"class.std::__1::locale"* @_ZNSt3__16locale7classicEv() #9
  %64 = bitcast %"class.std::__1::locale"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %64)
  %65 = bitcast %"class.std::__1::locale"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %65)
  %66 = getelementptr inbounds %"class.std::__1::locale", %"class.std::__1::locale"* %4, i64 0, i32 0
  store %"class.std::__1::locale::__imp"* inttoptr (i64 -6148914691236517206 to %"class.std::__1::locale::__imp"*), %"class.std::__1::locale::__imp"** %66, align 8, !alias.scope !5
  %67 = bitcast i8* %62 to %"class.std::__1::ios_base"*
  call void @_ZNKSt3__18ios_base6getlocEv(%"class.std::__1::locale"* nonnull sret %4, %"class.std::__1::ios_base"* %67) #9
  call void @_ZNSt3__18ios_base5imbueERKNS_6localeE(%"class.std::__1::locale"* nonnull sret %2, %"class.std::__1::ios_base"* %67, %"class.std::__1::locale"* dereferenceable(8) %63) #9
  call void @_ZNSt3__16localeD1Ev(%"class.std::__1::locale"* nonnull %2) #9
  %68 = getelementptr inbounds i8, i8* %62, i64 40
  %69 = bitcast i8* %68 to %"class.std::__1::basic_streambuf"**
  %70 = load %"class.std::__1::basic_streambuf"*, %"class.std::__1::basic_streambuf"** %69, align 8, !noalias !5
  %71 = icmp eq %"class.std::__1::basic_streambuf"* %70, null
  br i1 %71, label %80, label %72

72:                                               ; preds = %1
  %73 = bitcast %"class.std::__1::basic_streambuf"* %70 to void (%"class.std::__1::basic_streambuf"*, %"class.std::__1::locale"*)***
  %74 = load void (%"class.std::__1::basic_streambuf"*, %"class.std::__1::locale"*)**, void (%"class.std::__1::basic_streambuf"*, %"class.std::__1::locale"*)*** %73, align 8, !noalias !8
  %75 = getelementptr inbounds void (%"class.std::__1::basic_streambuf"*, %"class.std::__1::locale"*)*, void (%"class.std::__1::basic_streambuf"*, %"class.std::__1::locale"*)** %74, i64 2
  %76 = load void (%"class.std::__1::basic_streambuf"*, %"class.std::__1::locale"*)*, void (%"class.std::__1::basic_streambuf"*, %"class.std::__1::locale"*)** %75, align 8, !noalias !8
  call void %76(%"class.std::__1::basic_streambuf"* nonnull %70, %"class.std::__1::locale"* dereferenceable(8) %63) #9, !noalias !8
  %77 = getelementptr inbounds %"class.std::__1::locale", %"class.std::__1::locale"* %3, i64 0, i32 0
  store %"class.std::__1::locale::__imp"* inttoptr (i64 -6148914691236517206 to %"class.std::__1::locale::__imp"*), %"class.std::__1::locale::__imp"** %77, align 8, !alias.scope !8, !noalias !5
  %78 = getelementptr inbounds %"class.std::__1::basic_streambuf", %"class.std::__1::basic_streambuf"* %70, i64 0, i32 1
  call void @_ZNSt3__16localeC1ERKS0_(%"class.std::__1::locale"* nonnull %3, %"class.std::__1::locale"* dereferenceable(8) %78) #9
  %79 = call dereferenceable(8) %"class.std::__1::locale"* @_ZNSt3__16localeaSERKS0_(%"class.std::__1::locale"* %78, %"class.std::__1::locale"* dereferenceable(8) %63) #9
  call void @_ZNSt3__16localeD1Ev(%"class.std::__1::locale"* nonnull %3) #9
  br label %80

80:                                               ; preds = %1, %72
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %64)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %65)
  call void @_ZNSt3__16localeD1Ev(%"class.std::__1::locale"* nonnull %4) #9
  ret void
}

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZlsRNSt3__113basic_ostreamIcNS_11char_traitsIcEEEERKN2sh15ImmutableStringE(%"class.std::__1::basic_ostream"* dereferenceable(160), %"class.sh::ImmutableString"* dereferenceable(16)) local_unnamed_addr #2

declare void @_ZNK2sh5TType20createSamplerSymbolsERKNS_15ImmutableStringERKNSt3__112basic_stringIcNS4_11char_traitsIcEE14pool_allocatorIcEEEPNS_7TVectorIPKNS_9TVariableEEEPNS_4TMapISG_SA_NS4_4lessISG_EEEEPNS_12TSymbolTableE(%"class.sh::TType"*, %"class.sh::ImmutableString"* dereferenceable(16), %"class.std::__1::basic_string"* dereferenceable(24), %"class.sh::TVector.29"*, %"class.sh::TMap"*, %"class.sh::TSymbolTable"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2sh10TStructure7setNameERKNS_15ImmutableStringE(%"class.sh::TStructure"* nocapture, %"class.sh::ImmutableString"* nocapture readonly dereferenceable(16)) local_unnamed_addr #0 align 2 {
  %3 = bitcast %"class.sh::TStructure"* %0 to i8*
  %4 = bitcast %"class.sh::ImmutableString"* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %3, i8* align 8 %4, i64 16, i1 false)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2sh15TInterfaceBlockC2EPNS_12TSymbolTableERKNS_15ImmutableStringEPKNS_7TVectorIPNS_6TFieldEEERKNS_16TLayoutQualifierENS_10SymbolTypeENS_10TExtensionE(%"class.sh::TInterfaceBlock"*, %"class.sh::TSymbolTable"*, %"class.sh::ImmutableString"* nocapture readonly dereferenceable(16), %"class.sh::TVector.17"*, %"struct.sh::TLayoutQualifier"* nocapture readonly dereferenceable(92), i8 zeroext, i8 zeroext) unnamed_addr #0 align 2 {
  %8 = alloca %"class.sh::TSymbolUniqueId", align 4
  %9 = bitcast %"class.sh::TInterfaceBlock"* %0 to i8*
  %10 = bitcast %"class.sh::ImmutableString"* %2 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %9, i8* align 8 %10, i64 16, i1 false) #9
  %11 = bitcast %"class.sh::TSymbolUniqueId"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %11) #9
  call void @_ZN2sh15TSymbolUniqueIdC1EPNS_12TSymbolTableE(%"class.sh::TSymbolUniqueId"* nonnull %8, %"class.sh::TSymbolTable"* %1) #9
  %12 = getelementptr inbounds %"class.sh::TSymbolUniqueId", %"class.sh::TSymbolUniqueId"* %8, i64 0, i32 0
  %13 = load i32, i32* %12, align 4
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %11) #9
  %14 = getelementptr inbounds %"class.sh::TInterfaceBlock", %"class.sh::TInterfaceBlock"* %0, i64 0, i32 0, i32 1, i32 0
  store i32 %13, i32* %14, align 8
  %15 = getelementptr inbounds %"class.sh::TInterfaceBlock", %"class.sh::TInterfaceBlock"* %0, i64 0, i32 0, i32 2
  store i8 %5, i8* %15, align 4
  %16 = getelementptr inbounds %"class.sh::TInterfaceBlock", %"class.sh::TInterfaceBlock"* %0, i64 0, i32 0, i32 3
  store i8 %6, i8* %16, align 1
  %17 = getelementptr inbounds %"class.sh::TInterfaceBlock", %"class.sh::TInterfaceBlock"* %0, i64 0, i32 0, i32 4
  store i8 3, i8* %17, align 2
  %18 = getelementptr inbounds %"class.sh::TInterfaceBlock", %"class.sh::TInterfaceBlock"* %0, i64 0, i32 1
  call void @_ZN2sh20TFieldListCollectionC2EPKNS_7TVectorIPNS_6TFieldEEE(%"class.sh::TFieldListCollection"* %18, %"class.sh::TVector.17"* %3) #9
  %19 = getelementptr inbounds %"class.sh::TInterfaceBlock", %"class.sh::TInterfaceBlock"* %0, i64 0, i32 2
  %20 = getelementptr inbounds %"struct.sh::TLayoutQualifier", %"struct.sh::TLayoutQualifier"* %4, i64 0, i32 3
  %21 = load i32, i32* %20, align 4
  store i32 %21, i32* %19, align 8
  %22 = getelementptr inbounds %"class.sh::TInterfaceBlock", %"class.sh::TInterfaceBlock"* %0, i64 0, i32 3
  %23 = getelementptr inbounds %"struct.sh::TLayoutQualifier", %"struct.sh::TLayoutQualifier"* %4, i64 0, i32 5
  %24 = load i32, i32* %23, align 4
  store i32 %24, i32* %22, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2sh15TInterfaceBlockC2ERKNS_15TSymbolUniqueIdERKNS_15ImmutableStringENS_10TExtensionEPKNS_7TVectorIPNS_6TFieldEEE(%"class.sh::TInterfaceBlock"*, %"class.sh::TSymbolUniqueId"* nocapture readonly dereferenceable(4), %"class.sh::ImmutableString"* nocapture readonly dereferenceable(16), i8 zeroext, %"class.sh::TVector.17"*) unnamed_addr #0 align 2 {
  %6 = bitcast %"class.sh::TInterfaceBlock"* %0 to i8*
  %7 = bitcast %"class.sh::ImmutableString"* %2 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %6, i8* align 8 %7, i64 16, i1 false) #9
  %8 = getelementptr inbounds %"class.sh::TSymbolUniqueId", %"class.sh::TSymbolUniqueId"* %1, i64 0, i32 0
  %9 = getelementptr inbounds %"class.sh::TInterfaceBlock", %"class.sh::TInterfaceBlock"* %0, i64 0, i32 0, i32 1, i32 0
  %10 = load i32, i32* %8, align 4
  store i32 %10, i32* %9, align 8
  %11 = getelementptr inbounds %"class.sh::TInterfaceBlock", %"class.sh::TInterfaceBlock"* %0, i64 0, i32 0, i32 2
  store i8 0, i8* %11, align 4
  %12 = getelementptr inbounds %"class.sh::TInterfaceBlock", %"class.sh::TInterfaceBlock"* %0, i64 0, i32 0, i32 3
  store i8 %3, i8* %12, align 1
  %13 = getelementptr inbounds %"class.sh::TInterfaceBlock", %"class.sh::TInterfaceBlock"* %0, i64 0, i32 0, i32 4
  store i8 3, i8* %13, align 2
  %14 = getelementptr inbounds %"class.sh::TInterfaceBlock", %"class.sh::TInterfaceBlock"* %0, i64 0, i32 1
  tail call void @_ZN2sh20TFieldListCollectionC2EPKNS_7TVectorIPNS_6TFieldEEE(%"class.sh::TFieldListCollection"* %14, %"class.sh::TVector.17"* %4) #9
  %15 = getelementptr inbounds %"class.sh::TInterfaceBlock", %"class.sh::TInterfaceBlock"* %0, i64 0, i32 2
  store i32 0, i32* %15, align 8
  %16 = getelementptr inbounds %"class.sh::TInterfaceBlock", %"class.sh::TInterfaceBlock"* %0, i64 0, i32 3
  store i32 0, i32* %16, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2sh9TFunctionC2EPNS_12TSymbolTableERKNS_15ImmutableStringENS_10SymbolTypeEPKNS_5TTypeEb(%"class.sh::TFunction"* nocapture, %"class.sh::TSymbolTable"*, %"class.sh::ImmutableString"* nocapture readonly dereferenceable(16), i8 zeroext, %"class.sh::TType"*, i1 zeroext) unnamed_addr #0 align 2 {
  %7 = alloca %"class.sh::TSymbolUniqueId", align 4
  %8 = zext i1 %5 to i8
  %9 = bitcast %"class.sh::TFunction"* %0 to i8*
  %10 = bitcast %"class.sh::ImmutableString"* %2 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %9, i8* align 8 %10, i64 16, i1 false) #9
  %11 = bitcast %"class.sh::TSymbolUniqueId"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %11) #9
  call void @_ZN2sh15TSymbolUniqueIdC1EPNS_12TSymbolTableE(%"class.sh::TSymbolUniqueId"* nonnull %7, %"class.sh::TSymbolTable"* %1) #9
  %12 = getelementptr inbounds %"class.sh::TSymbolUniqueId", %"class.sh::TSymbolUniqueId"* %7, i64 0, i32 0
  %13 = load i32, i32* %12, align 4
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %11) #9
  %14 = getelementptr inbounds %"class.sh::TFunction", %"class.sh::TFunction"* %0, i64 0, i32 0, i32 1, i32 0
  store i32 %13, i32* %14, align 8
  %15 = getelementptr inbounds %"class.sh::TFunction", %"class.sh::TFunction"* %0, i64 0, i32 0, i32 2
  store i8 %3, i8* %15, align 4
  %16 = getelementptr inbounds %"class.sh::TFunction", %"class.sh::TFunction"* %0, i64 0, i32 0, i32 3
  store i8 0, i8* %16, align 1
  %17 = getelementptr inbounds %"class.sh::TFunction", %"class.sh::TFunction"* %0, i64 0, i32 0, i32 4
  store i8 0, i8* %17, align 2
  %18 = getelementptr inbounds %"class.sh::TFunction", %"class.sh::TFunction"* %0, i64 0, i32 2
  %19 = call %"class.angle::PoolAllocator"* @_Z22GetGlobalPoolAllocatorv() #9
  %20 = call i8* @_ZN5angle13PoolAllocator8allocateEm(%"class.angle::PoolAllocator"* %19, i64 24) #9
  call void @llvm.memset.p0i8.i64(i8* align 8 %20, i8 0, i64 24, i1 false) #9
  %21 = bitcast %"class.sh::TVector.29"** %18 to i8**
  store i8* %20, i8** %21, align 8
  %22 = getelementptr inbounds %"class.sh::TFunction", %"class.sh::TFunction"* %0, i64 0, i32 3
  %23 = getelementptr inbounds %"class.sh::TFunction", %"class.sh::TFunction"* %0, i64 0, i32 5
  %24 = bitcast %"class.sh::TVariable"*** %22 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %24, i8 0, i64 16, i1 false)
  store %"class.sh::TType"* %4, %"class.sh::TType"** %23, align 8
  %25 = getelementptr inbounds %"class.sh::TFunction", %"class.sh::TFunction"* %0, i64 0, i32 6, i32 0
  store i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.2, i64 0, i64 0), i8** %25, align 8
  %26 = getelementptr inbounds %"class.sh::TFunction", %"class.sh::TFunction"* %0, i64 0, i32 6, i32 1
  %27 = getelementptr inbounds %"class.sh::TFunction", %"class.sh::TFunction"* %0, i64 0, i32 10
  %28 = bitcast i64* %26 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %28, i8 0, i64 11, i1 false)
  store i8 %8, i8* %27, align 1
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2sh9TFunction12addParameterEPKNS_9TVariableE(%"class.sh::TFunction"* nocapture, %"class.sh::TVariable"*) local_unnamed_addr #0 align 2 {
  %3 = ptrtoint %"class.sh::TVariable"* %1 to i64
  %4 = getelementptr inbounds %"class.sh::TFunction", %"class.sh::TFunction"* %0, i64 0, i32 2
  %5 = bitcast %"class.sh::TVector.29"** %4 to %"class.std::__1::vector.30"**
  %6 = load %"class.std::__1::vector.30"*, %"class.std::__1::vector.30"** %5, align 8
  %7 = getelementptr inbounds %"class.std::__1::vector.30", %"class.std::__1::vector.30"* %6, i64 0, i32 0, i32 1
  %8 = load %"class.sh::TVariable"**, %"class.sh::TVariable"*** %7, align 8
  %9 = getelementptr inbounds %"class.std::__1::vector.30", %"class.std::__1::vector.30"* %6, i64 0, i32 0, i32 2, i32 0, i32 0
  %10 = load %"class.sh::TVariable"**, %"class.sh::TVariable"*** %9, align 8
  %11 = icmp eq %"class.sh::TVariable"** %8, %10
  %12 = ptrtoint %"class.sh::TVariable"** %10 to i64
  br i1 %11, label %18, label %13

13:                                               ; preds = %2
  %14 = bitcast %"class.sh::TVariable"** %8 to i64*
  store i64 %3, i64* %14, align 8
  %15 = getelementptr inbounds %"class.sh::TVariable"*, %"class.sh::TVariable"** %8, i64 1
  %16 = ptrtoint %"class.sh::TVariable"** %15 to i64
  %17 = bitcast %"class.sh::TVariable"*** %7 to i64*
  store i64 %16, i64* %17, align 8
  br label %231

18:                                               ; preds = %2
  %19 = ptrtoint %"class.sh::TVariable"** %8 to i64
  %20 = bitcast %"class.sh::TVariable"*** %7 to i64*
  %21 = bitcast %"class.std::__1::vector.30"* %6 to i64*
  %22 = load i64, i64* %21, align 8
  %23 = sub i64 %19, %22
  %24 = ashr exact i64 %23, 3
  %25 = add nsw i64 %24, 1
  %26 = icmp ugt i64 %25, 2305843009213693951
  br i1 %26, label %27, label %29

27:                                               ; preds = %18
  %28 = bitcast %"class.std::__1::vector.30"* %6 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %28) #10
  unreachable

29:                                               ; preds = %18
  %30 = bitcast %"class.sh::TVariable"*** %9 to i64*
  %31 = sub i64 %12, %22
  %32 = ashr exact i64 %31, 3
  %33 = icmp ult i64 %32, 1152921504606846975
  br i1 %33, label %34, label %39

34:                                               ; preds = %29
  %35 = ashr exact i64 %31, 2
  %36 = icmp ult i64 %35, %25
  %37 = select i1 %36, i64 %25, i64 %35
  %38 = icmp eq i64 %37, 0
  br i1 %38, label %45, label %39

39:                                               ; preds = %34, %29
  %40 = phi i64 [ %37, %34 ], [ 2305843009213693951, %29 ]
  %41 = tail call %"class.angle::PoolAllocator"* @_Z22GetGlobalPoolAllocatorv() #9
  %42 = shl i64 %40, 3
  %43 = tail call i8* @_ZN5angle13PoolAllocator8allocateEm(%"class.angle::PoolAllocator"* %41, i64 %42) #9
  %44 = bitcast i8* %43 to %"class.sh::TVariable"**
  br label %45

45:                                               ; preds = %39, %34
  %46 = phi i64 [ %40, %39 ], [ 0, %34 ]
  %47 = phi %"class.sh::TVariable"** [ %44, %39 ], [ null, %34 ]
  %48 = getelementptr inbounds %"class.sh::TVariable"*, %"class.sh::TVariable"** %47, i64 %24
  %49 = getelementptr inbounds %"class.sh::TVariable"*, %"class.sh::TVariable"** %47, i64 %46
  %50 = ptrtoint %"class.sh::TVariable"** %49 to i64
  %51 = bitcast %"class.sh::TVariable"** %48 to i64*
  store i64 %3, i64* %51, align 8
  %52 = getelementptr inbounds %"class.sh::TVariable"*, %"class.sh::TVariable"** %48, i64 1
  %53 = ptrtoint %"class.sh::TVariable"** %52 to i64
  %54 = getelementptr inbounds %"class.std::__1::vector.30", %"class.std::__1::vector.30"* %6, i64 0, i32 0, i32 0
  %55 = load %"class.sh::TVariable"**, %"class.sh::TVariable"*** %54, align 8
  %56 = ptrtoint %"class.sh::TVariable"** %55 to i64
  %57 = load %"class.sh::TVariable"**, %"class.sh::TVariable"*** %7, align 8
  %58 = icmp eq %"class.sh::TVariable"** %57, %55
  br i1 %58, label %228, label %59

59:                                               ; preds = %45
  %60 = getelementptr %"class.sh::TVariable"*, %"class.sh::TVariable"** %57, i64 -1
  %61 = ptrtoint %"class.sh::TVariable"** %60 to i64
  %62 = sub i64 %61, %56
  %63 = lshr i64 %62, 3
  %64 = add nuw nsw i64 %63, 1
  %65 = icmp ult i64 %64, 4
  br i1 %65, label %158, label %66

66:                                               ; preds = %59
  %67 = getelementptr %"class.sh::TVariable"*, %"class.sh::TVariable"** %57, i64 -1
  %68 = ptrtoint %"class.sh::TVariable"** %67 to i64
  %69 = sub i64 %68, %56
  %70 = lshr i64 %69, 3
  %71 = xor i64 %70, -1
  %72 = add nsw i64 %24, %71
  %73 = getelementptr %"class.sh::TVariable"*, %"class.sh::TVariable"** %47, i64 %72
  %74 = xor i64 %70, -1
  %75 = getelementptr %"class.sh::TVariable"*, %"class.sh::TVariable"** %57, i64 %74
  %76 = icmp ult %"class.sh::TVariable"** %73, %57
  %77 = icmp ult %"class.sh::TVariable"** %75, %48
  %78 = and i1 %76, %77
  br i1 %78, label %158, label %79

79:                                               ; preds = %66
  %80 = and i64 %64, 4611686018427387900
  %81 = sub nsw i64 0, %80
  %82 = getelementptr %"class.sh::TVariable"*, %"class.sh::TVariable"** %48, i64 %81
  %83 = sub nsw i64 0, %80
  %84 = getelementptr %"class.sh::TVariable"*, %"class.sh::TVariable"** %57, i64 %83
  %85 = add nsw i64 %80, -4
  %86 = lshr exact i64 %85, 2
  %87 = add nuw nsw i64 %86, 1
  %88 = and i64 %87, 1
  %89 = icmp eq i64 %85, 0
  br i1 %89, label %136, label %90

90:                                               ; preds = %79
  %91 = sub nuw nsw i64 %87, %88
  %92 = getelementptr %"class.sh::TVariable"*, %"class.sh::TVariable"** %48, i64 -1
  %93 = getelementptr %"class.sh::TVariable"*, %"class.sh::TVariable"** %57, i64 -1
  %94 = getelementptr %"class.sh::TVariable"*, %"class.sh::TVariable"** %48, i64 -1
  %95 = getelementptr %"class.sh::TVariable"*, %"class.sh::TVariable"** %57, i64 -1
  br label %96

96:                                               ; preds = %96, %90
  %97 = phi i64 [ 0, %90 ], [ %131, %96 ]
  %98 = phi i64 [ %91, %90 ], [ %132, %96 ]
  %99 = sub i64 0, %97
  %100 = sub i64 0, %97
  %101 = getelementptr inbounds %"class.sh::TVariable"*, %"class.sh::TVariable"** %92, i64 %99
  %102 = getelementptr inbounds %"class.sh::TVariable"*, %"class.sh::TVariable"** %93, i64 %100
  %103 = getelementptr inbounds %"class.sh::TVariable"*, %"class.sh::TVariable"** %102, i64 -1
  %104 = bitcast %"class.sh::TVariable"** %103 to <2 x i64>*
  %105 = load <2 x i64>, <2 x i64>* %104, align 8, !alias.scope !11
  %106 = getelementptr inbounds %"class.sh::TVariable"*, %"class.sh::TVariable"** %102, i64 -2
  %107 = getelementptr inbounds %"class.sh::TVariable"*, %"class.sh::TVariable"** %106, i64 -1
  %108 = bitcast %"class.sh::TVariable"** %107 to <2 x i64>*
  %109 = load <2 x i64>, <2 x i64>* %108, align 8, !alias.scope !11
  %110 = getelementptr inbounds %"class.sh::TVariable"*, %"class.sh::TVariable"** %101, i64 -1
  %111 = bitcast %"class.sh::TVariable"** %110 to <2 x i64>*
  store <2 x i64> %105, <2 x i64>* %111, align 8, !alias.scope !14, !noalias !11
  %112 = getelementptr inbounds %"class.sh::TVariable"*, %"class.sh::TVariable"** %101, i64 -2
  %113 = getelementptr inbounds %"class.sh::TVariable"*, %"class.sh::TVariable"** %112, i64 -1
  %114 = bitcast %"class.sh::TVariable"** %113 to <2 x i64>*
  store <2 x i64> %109, <2 x i64>* %114, align 8, !alias.scope !14, !noalias !11
  %115 = sub nuw nsw i64 -4, %97
  %116 = sub nuw nsw i64 -4, %97
  %117 = getelementptr inbounds %"class.sh::TVariable"*, %"class.sh::TVariable"** %94, i64 %115
  %118 = getelementptr inbounds %"class.sh::TVariable"*, %"class.sh::TVariable"** %95, i64 %116
  %119 = getelementptr inbounds %"class.sh::TVariable"*, %"class.sh::TVariable"** %118, i64 -1
  %120 = bitcast %"class.sh::TVariable"** %119 to <2 x i64>*
  %121 = load <2 x i64>, <2 x i64>* %120, align 8, !alias.scope !11
  %122 = getelementptr inbounds %"class.sh::TVariable"*, %"class.sh::TVariable"** %118, i64 -2
  %123 = getelementptr inbounds %"class.sh::TVariable"*, %"class.sh::TVariable"** %122, i64 -1
  %124 = bitcast %"class.sh::TVariable"** %123 to <2 x i64>*
  %125 = load <2 x i64>, <2 x i64>* %124, align 8, !alias.scope !11
  %126 = getelementptr inbounds %"class.sh::TVariable"*, %"class.sh::TVariable"** %117, i64 -1
  %127 = bitcast %"class.sh::TVariable"** %126 to <2 x i64>*
  store <2 x i64> %121, <2 x i64>* %127, align 8, !alias.scope !14, !noalias !11
  %128 = getelementptr inbounds %"class.sh::TVariable"*, %"class.sh::TVariable"** %117, i64 -2
  %129 = getelementptr inbounds %"class.sh::TVariable"*, %"class.sh::TVariable"** %128, i64 -1
  %130 = bitcast %"class.sh::TVariable"** %129 to <2 x i64>*
  store <2 x i64> %125, <2 x i64>* %130, align 8, !alias.scope !14, !noalias !11
  %131 = add i64 %97, 8
  %132 = add i64 %98, -2
  %133 = icmp eq i64 %132, 0
  br i1 %133, label %134, label %96, !llvm.loop !16

134:                                              ; preds = %96
  %135 = sub nuw nsw i64 -8, %97
  br label %136

136:                                              ; preds = %134, %79
  %137 = phi i64 [ 0, %79 ], [ %135, %134 ]
  %138 = icmp eq i64 %88, 0
  br i1 %138, label %156, label %139

139:                                              ; preds = %136
  %140 = getelementptr %"class.sh::TVariable"*, %"class.sh::TVariable"** %48, i64 -1
  %141 = getelementptr %"class.sh::TVariable"*, %"class.sh::TVariable"** %57, i64 -1
  %142 = getelementptr inbounds %"class.sh::TVariable"*, %"class.sh::TVariable"** %140, i64 %137
  %143 = getelementptr inbounds %"class.sh::TVariable"*, %"class.sh::TVariable"** %141, i64 %137
  %144 = getelementptr inbounds %"class.sh::TVariable"*, %"class.sh::TVariable"** %143, i64 -1
  %145 = bitcast %"class.sh::TVariable"** %144 to <2 x i64>*
  %146 = load <2 x i64>, <2 x i64>* %145, align 8, !alias.scope !11
  %147 = getelementptr inbounds %"class.sh::TVariable"*, %"class.sh::TVariable"** %143, i64 -2
  %148 = getelementptr inbounds %"class.sh::TVariable"*, %"class.sh::TVariable"** %147, i64 -1
  %149 = bitcast %"class.sh::TVariable"** %148 to <2 x i64>*
  %150 = load <2 x i64>, <2 x i64>* %149, align 8, !alias.scope !11
  %151 = getelementptr inbounds %"class.sh::TVariable"*, %"class.sh::TVariable"** %142, i64 -1
  %152 = bitcast %"class.sh::TVariable"** %151 to <2 x i64>*
  store <2 x i64> %146, <2 x i64>* %152, align 8, !alias.scope !14, !noalias !11
  %153 = getelementptr inbounds %"class.sh::TVariable"*, %"class.sh::TVariable"** %142, i64 -2
  %154 = getelementptr inbounds %"class.sh::TVariable"*, %"class.sh::TVariable"** %153, i64 -1
  %155 = bitcast %"class.sh::TVariable"** %154 to <2 x i64>*
  store <2 x i64> %150, <2 x i64>* %155, align 8, !alias.scope !14, !noalias !11
  br label %156

156:                                              ; preds = %136, %139
  %157 = icmp eq i64 %64, %80
  br i1 %157, label %228, label %158

158:                                              ; preds = %156, %66, %59
  %159 = phi %"class.sh::TVariable"** [ %48, %66 ], [ %48, %59 ], [ %82, %156 ]
  %160 = phi %"class.sh::TVariable"** [ %57, %66 ], [ %57, %59 ], [ %84, %156 ]
  %161 = getelementptr %"class.sh::TVariable"*, %"class.sh::TVariable"** %160, i64 -1
  %162 = ptrtoint %"class.sh::TVariable"** %161 to i64
  %163 = sub i64 %162, %56
  %164 = lshr i64 %163, 3
  %165 = add nuw nsw i64 %164, 1
  %166 = and i64 %165, 7
  %167 = icmp eq i64 %166, 0
  br i1 %167, label %179, label %168

168:                                              ; preds = %158, %168
  %169 = phi %"class.sh::TVariable"** [ %172, %168 ], [ %159, %158 ]
  %170 = phi %"class.sh::TVariable"** [ %173, %168 ], [ %160, %158 ]
  %171 = phi i64 [ %177, %168 ], [ %166, %158 ]
  %172 = getelementptr inbounds %"class.sh::TVariable"*, %"class.sh::TVariable"** %169, i64 -1
  %173 = getelementptr inbounds %"class.sh::TVariable"*, %"class.sh::TVariable"** %170, i64 -1
  %174 = bitcast %"class.sh::TVariable"** %173 to i64*
  %175 = load i64, i64* %174, align 8
  %176 = bitcast %"class.sh::TVariable"** %172 to i64*
  store i64 %175, i64* %176, align 8
  %177 = add i64 %171, -1
  %178 = icmp eq i64 %177, 0
  br i1 %178, label %179, label %168, !llvm.loop !18

179:                                              ; preds = %168, %158
  %180 = phi %"class.sh::TVariable"** [ undef, %158 ], [ %172, %168 ]
  %181 = phi %"class.sh::TVariable"** [ %159, %158 ], [ %172, %168 ]
  %182 = phi %"class.sh::TVariable"** [ %160, %158 ], [ %173, %168 ]
  %183 = icmp ult i64 %163, 56
  br i1 %183, label %228, label %184

184:                                              ; preds = %179, %184
  %185 = phi %"class.sh::TVariable"** [ %222, %184 ], [ %181, %179 ]
  %186 = phi %"class.sh::TVariable"** [ %223, %184 ], [ %182, %179 ]
  %187 = getelementptr inbounds %"class.sh::TVariable"*, %"class.sh::TVariable"** %185, i64 -1
  %188 = getelementptr inbounds %"class.sh::TVariable"*, %"class.sh::TVariable"** %186, i64 -1
  %189 = bitcast %"class.sh::TVariable"** %188 to i64*
  %190 = load i64, i64* %189, align 8
  %191 = bitcast %"class.sh::TVariable"** %187 to i64*
  store i64 %190, i64* %191, align 8
  %192 = getelementptr inbounds %"class.sh::TVariable"*, %"class.sh::TVariable"** %185, i64 -2
  %193 = getelementptr inbounds %"class.sh::TVariable"*, %"class.sh::TVariable"** %186, i64 -2
  %194 = bitcast %"class.sh::TVariable"** %193 to i64*
  %195 = load i64, i64* %194, align 8
  %196 = bitcast %"class.sh::TVariable"** %192 to i64*
  store i64 %195, i64* %196, align 8
  %197 = getelementptr inbounds %"class.sh::TVariable"*, %"class.sh::TVariable"** %185, i64 -3
  %198 = getelementptr inbounds %"class.sh::TVariable"*, %"class.sh::TVariable"** %186, i64 -3
  %199 = bitcast %"class.sh::TVariable"** %198 to i64*
  %200 = load i64, i64* %199, align 8
  %201 = bitcast %"class.sh::TVariable"** %197 to i64*
  store i64 %200, i64* %201, align 8
  %202 = getelementptr inbounds %"class.sh::TVariable"*, %"class.sh::TVariable"** %185, i64 -4
  %203 = getelementptr inbounds %"class.sh::TVariable"*, %"class.sh::TVariable"** %186, i64 -4
  %204 = bitcast %"class.sh::TVariable"** %203 to i64*
  %205 = load i64, i64* %204, align 8
  %206 = bitcast %"class.sh::TVariable"** %202 to i64*
  store i64 %205, i64* %206, align 8
  %207 = getelementptr inbounds %"class.sh::TVariable"*, %"class.sh::TVariable"** %185, i64 -5
  %208 = getelementptr inbounds %"class.sh::TVariable"*, %"class.sh::TVariable"** %186, i64 -5
  %209 = bitcast %"class.sh::TVariable"** %208 to i64*
  %210 = load i64, i64* %209, align 8
  %211 = bitcast %"class.sh::TVariable"** %207 to i64*
  store i64 %210, i64* %211, align 8
  %212 = getelementptr inbounds %"class.sh::TVariable"*, %"class.sh::TVariable"** %185, i64 -6
  %213 = getelementptr inbounds %"class.sh::TVariable"*, %"class.sh::TVariable"** %186, i64 -6
  %214 = bitcast %"class.sh::TVariable"** %213 to i64*
  %215 = load i64, i64* %214, align 8
  %216 = bitcast %"class.sh::TVariable"** %212 to i64*
  store i64 %215, i64* %216, align 8
  %217 = getelementptr inbounds %"class.sh::TVariable"*, %"class.sh::TVariable"** %185, i64 -7
  %218 = getelementptr inbounds %"class.sh::TVariable"*, %"class.sh::TVariable"** %186, i64 -7
  %219 = bitcast %"class.sh::TVariable"** %218 to i64*
  %220 = load i64, i64* %219, align 8
  %221 = bitcast %"class.sh::TVariable"** %217 to i64*
  store i64 %220, i64* %221, align 8
  %222 = getelementptr inbounds %"class.sh::TVariable"*, %"class.sh::TVariable"** %185, i64 -8
  %223 = getelementptr inbounds %"class.sh::TVariable"*, %"class.sh::TVariable"** %186, i64 -8
  %224 = bitcast %"class.sh::TVariable"** %223 to i64*
  %225 = load i64, i64* %224, align 8
  %226 = bitcast %"class.sh::TVariable"** %222 to i64*
  store i64 %225, i64* %226, align 8
  %227 = icmp eq %"class.sh::TVariable"** %223, %55
  br i1 %227, label %228, label %184, !llvm.loop !20

228:                                              ; preds = %179, %184, %156, %45
  %229 = phi %"class.sh::TVariable"** [ %48, %45 ], [ %82, %156 ], [ %180, %179 ], [ %222, %184 ]
  %230 = ptrtoint %"class.sh::TVariable"** %229 to i64
  store i64 %230, i64* %21, align 8
  store i64 %53, i64* %20, align 8
  store i64 %50, i64* %30, align 8
  br label %231

231:                                              ; preds = %13, %228
  %232 = load %"class.std::__1::vector.30"*, %"class.std::__1::vector.30"** %5, align 8
  %233 = bitcast %"class.std::__1::vector.30"* %232 to i64*
  %234 = load i64, i64* %233, align 8
  %235 = getelementptr inbounds %"class.sh::TFunction", %"class.sh::TFunction"* %0, i64 0, i32 3
  %236 = bitcast %"class.sh::TVariable"*** %235 to i64*
  store i64 %234, i64* %236, align 8
  %237 = getelementptr inbounds %"class.std::__1::vector.30", %"class.std::__1::vector.30"* %232, i64 0, i32 0, i32 1
  %238 = bitcast %"class.sh::TVariable"*** %237 to i64*
  %239 = load i64, i64* %238, align 8
  %240 = load i64, i64* %233, align 8
  %241 = sub i64 %239, %240
  %242 = ashr exact i64 %241, 3
  %243 = getelementptr inbounds %"class.sh::TFunction", %"class.sh::TFunction"* %0, i64 0, i32 4
  store i64 %242, i64* %243, align 8
  %244 = getelementptr inbounds %"class.sh::TFunction", %"class.sh::TFunction"* %0, i64 0, i32 6
  %245 = bitcast %"class.sh::ImmutableString"* %244 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %245, i8* align 8 bitcast (%"class.sh::ImmutableString"* @_ZN2shL21kEmptyImmutableStringE to i8*), i64 16, i1 false)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2sh9TFunction15shareParametersERKS0_(%"class.sh::TFunction"* nocapture, %"class.sh::TFunction"* nocapture readonly dereferenceable(80)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.sh::TFunction", %"class.sh::TFunction"* %0, i64 0, i32 2
  store %"class.sh::TVector.29"* null, %"class.sh::TVector.29"** %3, align 8
  %4 = getelementptr inbounds %"class.sh::TFunction", %"class.sh::TFunction"* %1, i64 0, i32 3
  %5 = bitcast %"class.sh::TVariable"*** %4 to i64*
  %6 = load i64, i64* %5, align 8
  %7 = getelementptr inbounds %"class.sh::TFunction", %"class.sh::TFunction"* %0, i64 0, i32 3
  %8 = bitcast %"class.sh::TVariable"*** %7 to i64*
  store i64 %6, i64* %8, align 8
  %9 = getelementptr inbounds %"class.sh::TFunction", %"class.sh::TFunction"* %1, i64 0, i32 4
  %10 = load i64, i64* %9, align 8
  %11 = getelementptr inbounds %"class.sh::TFunction", %"class.sh::TFunction"* %0, i64 0, i32 4
  store i64 %10, i64* %11, align 8
  %12 = getelementptr inbounds %"class.sh::TFunction", %"class.sh::TFunction"* %1, i64 0, i32 6
  %13 = getelementptr inbounds %"class.sh::TFunction", %"class.sh::TFunction"* %0, i64 0, i32 6
  %14 = bitcast %"class.sh::ImmutableString"* %13 to i8*
  %15 = bitcast %"class.sh::ImmutableString"* %12 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %14, i8* align 8 %15, i64 16, i1 false)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden { i8*, i64 } @_ZNK2sh9TFunction16buildMangledNameEv(%"class.sh::TFunction"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.std::__1::basic_string.37", align 8
  %3 = bitcast %"class.std::__1::basic_string.37"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %3) #9
  %4 = getelementptr inbounds %"class.std::__1::basic_string.37", %"class.std::__1::basic_string.37"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %5 = getelementptr inbounds %"class.std::__1::basic_string.37", %"class.std::__1::basic_string.37"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %6 = getelementptr inbounds %"class.std::__1::basic_string.37", %"class.std::__1::basic_string.37"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %7 = bitcast %"class.sh::TFunction"* %0 to %"class.sh::TSymbol"*
  %8 = bitcast %"class.std::__1::basic_string.37"* %2 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %8, i8 -86, i64 24, i1 false)
  %9 = tail call { i8*, i64 } @_ZNK2sh7TSymbol4nameEv(%"class.sh::TSymbol"* %7)
  %10 = extractvalue { i8*, i64 } %9, 0
  %11 = icmp eq i8* %10, null
  %12 = select i1 %11, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.2, i64 0, i64 0), i8* %10
  %13 = tail call { i8*, i64 } @_ZNK2sh7TSymbol4nameEv(%"class.sh::TSymbol"* %7)
  %14 = extractvalue { i8*, i64 } %13, 1
  %15 = icmp ugt i64 %14, -17
  br i1 %15, label %16, label %18

16:                                               ; preds = %1
  %17 = bitcast %"class.std::__1::basic_string.37"* %2 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* nonnull %17) #10
  unreachable

18:                                               ; preds = %1
  %19 = icmp ult i64 %14, 23
  br i1 %19, label %25, label %20

20:                                               ; preds = %18
  %21 = add nuw i64 %14, 16
  %22 = and i64 %21, -16
  %23 = tail call i8* @_Znwm(i64 %22) #11
  store i8* %23, i8** %4, align 8
  %24 = or i64 %22, -9223372036854775808
  store i64 %24, i64* %6, align 8
  store i64 %14, i64* %5, align 8
  br label %30

25:                                               ; preds = %18
  %26 = trunc i64 %14 to i8
  %27 = bitcast %"class.std::__1::basic_string.37"* %2 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %28 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %27, i64 0, i32 1, i32 0
  store i8 %26, i8* %28, align 1
  %29 = icmp eq i64 %14, 0
  br i1 %29, label %32, label %30

30:                                               ; preds = %25, %20
  %31 = phi i8* [ %23, %20 ], [ %3, %25 ]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %31, i8* align 1 %12, i64 %14, i1 false) #9
  br label %32

32:                                               ; preds = %25, %30
  %33 = phi i8* [ %3, %25 ], [ %31, %30 ]
  %34 = getelementptr inbounds i8, i8* %33, i64 %14
  store i8 0, i8* %34, align 1
  call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE9push_backEc(%"class.std::__1::basic_string.37"* nonnull %2, i8 signext 40) #9
  %35 = getelementptr inbounds %"class.sh::TFunction", %"class.sh::TFunction"* %0, i64 0, i32 4
  %36 = load i64, i64* %35, align 8
  %37 = icmp eq i64 %36, 0
  br i1 %37, label %40, label %38

38:                                               ; preds = %32
  %39 = getelementptr inbounds %"class.sh::TFunction", %"class.sh::TFunction"* %0, i64 0, i32 3
  br label %63

40:                                               ; preds = %63, %32
  %41 = bitcast %"class.std::__1::basic_string.37"* %2 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %42 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %41, i64 0, i32 1, i32 0
  %43 = load i8, i8* %42, align 1
  %44 = icmp slt i8 %43, 0
  %45 = load i8*, i8** %4, align 8
  %46 = load i64, i64* %5, align 8
  %47 = zext i8 %43 to i64
  %48 = select i1 %44, i8* %45, i8* %3
  %49 = select i1 %44, i64 %46, i64 %47
  %50 = add i64 %49, 1
  %51 = call %"class.angle::PoolAllocator"* @_Z22GetGlobalPoolAllocatorv() #9
  %52 = call i8* @_ZN5angle13PoolAllocator8allocateEm(%"class.angle::PoolAllocator"* %51, i64 %50) #9
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %52, i8* align 1 %48, i64 %50, i1 false) #9
  %53 = load i8, i8* %42, align 1
  %54 = icmp slt i8 %53, 0
  %55 = load i64, i64* %5, align 8
  %56 = zext i8 %53 to i64
  %57 = select i1 %54, i64 %55, i64 %56
  br i1 %54, label %58, label %60

58:                                               ; preds = %40
  %59 = load i8*, i8** %4, align 8
  call void @_ZdlPv(i8* %59) #11
  br label %60

60:                                               ; preds = %40, %58
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %3) #9
  %61 = insertvalue { i8*, i64 } undef, i8* %52, 0
  %62 = insertvalue { i8*, i64 } %61, i64 %57, 1
  ret { i8*, i64 } %62

63:                                               ; preds = %38, %63
  %64 = phi i64 [ 0, %38 ], [ %72, %63 ]
  %65 = load %"class.sh::TVariable"**, %"class.sh::TVariable"*** %39, align 8
  %66 = getelementptr inbounds %"class.sh::TVariable"*, %"class.sh::TVariable"** %65, i64 %64
  %67 = load %"class.sh::TVariable"*, %"class.sh::TVariable"** %66, align 8
  %68 = getelementptr inbounds %"class.sh::TVariable", %"class.sh::TVariable"* %67, i64 0, i32 1
  %69 = load %"class.sh::TType"*, %"class.sh::TType"** %68, align 8
  %70 = call i8* @_ZNK2sh5TType14getMangledNameEv(%"class.sh::TType"* %69) #9
  %71 = call dereferenceable(24) %"class.std::__1::basic_string.37"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKc(%"class.std::__1::basic_string.37"* nonnull %2, i8* %70) #9
  %72 = add nuw i64 %64, 1
  %73 = load i64, i64* %35, align 8
  %74 = icmp ult i64 %72, %73
  br i1 %74, label %63, label %40
}

declare i8* @_ZNK2sh5TType14getMangledNameEv(%"class.sh::TType"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK2sh9TFunction6isMainEv(%"class.sh::TFunction"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.sh::TFunction", %"class.sh::TFunction"* %0, i64 0, i32 0, i32 2
  %3 = load i8, i8* %2, align 4
  %4 = icmp eq i8 %3, 1
  br i1 %4, label %5, label %16

5:                                                ; preds = %1
  %6 = bitcast %"class.sh::TFunction"* %0 to %"class.sh::TSymbol"*
  %7 = tail call { i8*, i64 } @_ZNK2sh7TSymbol4nameEv(%"class.sh::TSymbol"* %6)
  %8 = extractvalue { i8*, i64 } %7, 0
  %9 = extractvalue { i8*, i64 } %7, 1
  %10 = icmp eq i64 %9, 4
  br i1 %10, label %11, label %16

11:                                               ; preds = %5
  %12 = icmp eq i8* %8, null
  %13 = select i1 %12, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.2, i64 0, i64 0), i8* %8
  %14 = tail call i32 @bcmp(i8* %13, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.3, i64 0, i64 0), i64 4) #9
  %15 = icmp eq i32 %14, 0
  br label %16

16:                                               ; preds = %11, %5, %1
  %17 = phi i1 [ false, %1 ], [ %15, %11 ], [ false, %5 ]
  ret i1 %17
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK2sh9TFunction15isImageFunctionEv(%"class.sh::TFunction"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = bitcast %"class.sh::TFunction"* %0 to %"class.sh::TSymbol"*
  %3 = getelementptr inbounds %"class.sh::TFunction", %"class.sh::TFunction"* %0, i64 0, i32 0, i32 2
  %4 = load i8, i8* %3, align 4
  %5 = icmp eq i8 %4, 0
  br i1 %5, label %6, label %46

6:                                                ; preds = %1
  %7 = tail call { i8*, i64 } @_ZNK2sh7TSymbol4nameEv(%"class.sh::TSymbol"* %2)
  %8 = extractvalue { i8*, i64 } %7, 0
  %9 = extractvalue { i8*, i64 } %7, 1
  %10 = icmp eq i64 %9, 9
  br i1 %10, label %11, label %16

11:                                               ; preds = %6
  %12 = icmp eq i8* %8, null
  %13 = select i1 %12, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.2, i64 0, i64 0), i8* %8
  %14 = tail call i32 @bcmp(i8* %13, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.4, i64 0, i64 0), i64 9) #9
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %46, label %16

16:                                               ; preds = %6, %11
  %17 = tail call { i8*, i64 } @_ZNK2sh7TSymbol4nameEv(%"class.sh::TSymbol"* %2)
  %18 = extractvalue { i8*, i64 } %17, 0
  %19 = extractvalue { i8*, i64 } %17, 1
  %20 = icmp eq i64 %19, 9
  br i1 %20, label %21, label %26

21:                                               ; preds = %16
  %22 = icmp eq i8* %18, null
  %23 = select i1 %22, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.2, i64 0, i64 0), i8* %18
  %24 = tail call i32 @bcmp(i8* %23, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.5, i64 0, i64 0), i64 9) #9
  %25 = icmp eq i32 %24, 0
  br i1 %25, label %46, label %26

26:                                               ; preds = %16, %21
  %27 = tail call { i8*, i64 } @_ZNK2sh7TSymbol4nameEv(%"class.sh::TSymbol"* %2)
  %28 = extractvalue { i8*, i64 } %27, 0
  %29 = extractvalue { i8*, i64 } %27, 1
  %30 = icmp eq i64 %29, 10
  br i1 %30, label %31, label %36

31:                                               ; preds = %26
  %32 = icmp eq i8* %28, null
  %33 = select i1 %32, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.2, i64 0, i64 0), i8* %28
  %34 = tail call i32 @bcmp(i8* %33, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.6, i64 0, i64 0), i64 10) #9
  %35 = icmp eq i32 %34, 0
  br i1 %35, label %46, label %36

36:                                               ; preds = %26, %31
  %37 = tail call { i8*, i64 } @_ZNK2sh7TSymbol4nameEv(%"class.sh::TSymbol"* %2)
  %38 = extractvalue { i8*, i64 } %37, 0
  %39 = extractvalue { i8*, i64 } %37, 1
  %40 = icmp eq i64 %39, 19
  br i1 %40, label %41, label %46

41:                                               ; preds = %36
  %42 = icmp eq i8* %38, null
  %43 = select i1 %42, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.2, i64 0, i64 0), i8* %38
  %44 = tail call i32 @bcmp(i8* %43, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.7, i64 0, i64 0), i64 19) #9
  %45 = icmp eq i32 %44, 0
  br label %46

46:                                               ; preds = %41, %36, %11, %21, %31, %1
  %47 = phi i1 [ false, %1 ], [ true, %31 ], [ true, %21 ], [ true, %11 ], [ %45, %41 ], [ false, %36 ]
  ret i1 %47
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK2sh9TFunction23isAtomicCounterFunctionEv(%"class.sh::TFunction"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = bitcast %"class.sh::TFunction"* %0 to %"class.sh::TSymbol"*
  %3 = tail call { i8*, i64 } @_ZNK2sh7TSymbol4nameEv(%"class.sh::TSymbol"* %2)
  %4 = extractvalue { i8*, i64 } %3, 0
  %5 = extractvalue { i8*, i64 } %3, 1
  %6 = icmp ult i64 %5, 13
  br i1 %6, label %12, label %7

7:                                                ; preds = %1
  %8 = icmp eq i8* %4, null
  %9 = select i1 %8, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.2, i64 0, i64 0), i8* %4
  %10 = tail call i32 @bcmp(i8* %9, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.8, i64 0, i64 0), i64 13) #9
  %11 = icmp eq i32 %10, 0
  br label %12

12:                                               ; preds = %1, %7
  %13 = phi i1 [ false, %1 ], [ %11, %7 ]
  ret i1 %13
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK2sh9TFunction31hasSamplerInStructOrArrayParamsEv(%"class.sh::TFunction"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.sh::TFunction", %"class.sh::TFunction"* %0, i64 0, i32 4
  %3 = load i64, i64* %2, align 8
  %4 = icmp eq i64 %3, 0
  br i1 %4, label %29, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.sh::TFunction", %"class.sh::TFunction"* %0, i64 0, i32 3
  br label %7

7:                                                ; preds = %5, %25
  %8 = phi i64 [ 0, %5 ], [ %26, %25 ]
  %9 = load %"class.sh::TVariable"**, %"class.sh::TVariable"*** %6, align 8
  %10 = getelementptr inbounds %"class.sh::TVariable"*, %"class.sh::TVariable"** %9, i64 %8
  %11 = load %"class.sh::TVariable"*, %"class.sh::TVariable"** %10, align 8
  %12 = getelementptr inbounds %"class.sh::TVariable", %"class.sh::TVariable"* %11, i64 0, i32 1
  %13 = load %"class.sh::TType"*, %"class.sh::TType"** %12, align 8
  %14 = tail call zeroext i1 @_ZNK2sh5TType29isStructureContainingSamplersEv(%"class.sh::TType"* %13) #9
  br i1 %14, label %29, label %15

15:                                               ; preds = %7
  %16 = load %"class.sh::TType"*, %"class.sh::TType"** %12, align 8
  %17 = getelementptr inbounds %"class.sh::TType", %"class.sh::TType"* %16, i64 0, i32 10, i32 1
  %18 = load i64, i64* %17, align 8
  %19 = icmp eq i64 %18, 0
  br i1 %19, label %25, label %20

20:                                               ; preds = %15
  %21 = getelementptr inbounds %"class.sh::TType", %"class.sh::TType"* %16, i64 0, i32 0
  %22 = load i32, i32* %21, align 8
  %23 = add i32 %22, -8
  %24 = icmp ult i32 %23, 43
  br i1 %24, label %29, label %25

25:                                               ; preds = %15, %20
  %26 = add nuw i64 %8, 1
  %27 = load i64, i64* %2, align 8
  %28 = icmp ult i64 %26, %27
  br i1 %28, label %7, label %29

29:                                               ; preds = %20, %7, %25, %1
  %30 = phi i1 [ false, %1 ], [ false, %25 ], [ true, %7 ], [ true, %20 ]
  ret i1 %30
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK2sh9TFunction38hasSamplerInStructOrArrayOfArrayParamsEv(%"class.sh::TFunction"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.sh::TFunction", %"class.sh::TFunction"* %0, i64 0, i32 4
  %3 = load i64, i64* %2, align 8
  %4 = icmp eq i64 %3, 0
  br i1 %4, label %29, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.sh::TFunction", %"class.sh::TFunction"* %0, i64 0, i32 3
  br label %7

7:                                                ; preds = %5, %25
  %8 = phi i64 [ 0, %5 ], [ %26, %25 ]
  %9 = load %"class.sh::TVariable"**, %"class.sh::TVariable"*** %6, align 8
  %10 = getelementptr inbounds %"class.sh::TVariable"*, %"class.sh::TVariable"** %9, i64 %8
  %11 = load %"class.sh::TVariable"*, %"class.sh::TVariable"** %10, align 8
  %12 = getelementptr inbounds %"class.sh::TVariable", %"class.sh::TVariable"* %11, i64 0, i32 1
  %13 = load %"class.sh::TType"*, %"class.sh::TType"** %12, align 8
  %14 = tail call zeroext i1 @_ZNK2sh5TType29isStructureContainingSamplersEv(%"class.sh::TType"* %13) #9
  br i1 %14, label %29, label %15

15:                                               ; preds = %7
  %16 = load %"class.sh::TType"*, %"class.sh::TType"** %12, align 8
  %17 = getelementptr inbounds %"class.sh::TType", %"class.sh::TType"* %16, i64 0, i32 10, i32 1
  %18 = load i64, i64* %17, align 8
  %19 = icmp ugt i64 %18, 1
  br i1 %19, label %20, label %25

20:                                               ; preds = %15
  %21 = getelementptr inbounds %"class.sh::TType", %"class.sh::TType"* %16, i64 0, i32 0
  %22 = load i32, i32* %21, align 8
  %23 = add i32 %22, -8
  %24 = icmp ult i32 %23, 43
  br i1 %24, label %29, label %25

25:                                               ; preds = %20, %15
  %26 = add nuw i64 %8, 1
  %27 = load i64, i64* %2, align 8
  %28 = icmp ult i64 %26, %27
  br i1 %28, label %7, label %29

29:                                               ; preds = %20, %7, %25, %1
  %30 = phi i1 [ false, %1 ], [ false, %25 ], [ true, %7 ], [ true, %20 ]
  ret i1 %30
}

declare void @_ZN2sh15TSymbolUniqueIdC1EPNS_12TSymbolTableE(%"class.sh::TSymbolUniqueId"*, %"class.sh::TSymbolTable"*) unnamed_addr #2

declare %"class.angle::PoolAllocator"* @_Z22GetGlobalPoolAllocatorv() local_unnamed_addr #2

declare i8* @_ZN5angle13PoolAllocator8allocateEm(%"class.angle::PoolAllocator"*, i64) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev(%"class.std::__1::basic_ios"*) unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZNSt3__114basic_iostreamIcNS_11char_traitsIcEEED2Ev(%"class.std::__1::basic_iostream"*, i8**) unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED2Ev(%"class.std::__1::basic_streambuf"*) unnamed_addr #3

; Function Attrs: noreturn
declare void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"*) local_unnamed_addr #4

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #5

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #6

declare void @_ZNKSt3__115basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEE3strEv(%"class.std::__1::basic_string.37"* sret, %"class.std::__1::basic_stringbuf"*) local_unnamed_addr #2

declare dereferenceable(8) %"class.std::__1::locale"* @_ZNSt3__16locale7classicEv() local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZNSt3__16localeD1Ev(%"class.std::__1::locale"*) unnamed_addr #3

declare void @_ZNSt3__18ios_base4initEPv(%"class.std::__1::ios_base"*, i8*) local_unnamed_addr #2

declare void @_ZNSt3__115basic_streambufIcNS_11char_traitsIcEEEC2Ev(%"class.std::__1::basic_streambuf"*) unnamed_addr #2

declare void @_ZNKSt3__18ios_base6getlocEv(%"class.std::__1::locale"* sret, %"class.std::__1::ios_base"*) local_unnamed_addr #2

declare void @_ZNSt3__18ios_base5imbueERKNS_6localeE(%"class.std::__1::locale"* sret, %"class.std::__1::ios_base"*, %"class.std::__1::locale"* dereferenceable(8)) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZNSt3__16localeC1ERKS0_(%"class.std::__1::locale"*, %"class.std::__1::locale"* dereferenceable(8)) unnamed_addr #3

; Function Attrs: nounwind
declare dereferenceable(8) %"class.std::__1::locale"* @_ZNSt3__16localeaSERKS0_(%"class.std::__1::locale"*, %"class.std::__1::locale"* dereferenceable(8)) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160), i8*, i64) local_unnamed_addr #0 comdat {
  %4 = alloca %"class.std::__1::locale", align 8
  %5 = alloca %"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry", align 8
  %6 = getelementptr inbounds %"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry", %"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"* %5, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %6) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %6, i8 -86, i64 16, i1 false)
  call void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryC1ERS3_(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"* nonnull %5, %"class.std::__1::basic_ostream"* dereferenceable(160) %0) #9
  %7 = load i8, i8* %6, align 8, !range !21
  %8 = icmp eq i8 %7, 0
  br i1 %8, label %58, label %9

9:                                                ; preds = %3
  %10 = bitcast %"class.std::__1::basic_ostream"* %0 to i8**
  %11 = load i8*, i8** %10, align 8
  %12 = getelementptr i8, i8* %11, i64 -24
  %13 = bitcast i8* %12 to i64*
  %14 = load i64, i64* %13, align 8
  %15 = bitcast %"class.std::__1::basic_ostream"* %0 to i8*
  %16 = getelementptr inbounds i8, i8* %15, i64 %14
  %17 = getelementptr inbounds i8, i8* %16, i64 40
  %18 = bitcast i8* %17 to %"class.std::__1::basic_streambuf"**
  %19 = load %"class.std::__1::basic_streambuf"*, %"class.std::__1::basic_streambuf"** %18, align 8
  %20 = bitcast i8* %16 to %"class.std::__1::ios_base"*
  %21 = getelementptr inbounds i8, i8* %16, i64 8
  %22 = bitcast i8* %21 to i32*
  %23 = load i32, i32* %22, align 8
  %24 = and i32 %23, 176
  %25 = icmp eq i32 %24, 32
  %26 = getelementptr inbounds i8, i8* %1, i64 %2
  %27 = select i1 %25, i8* %26, i8* %1
  %28 = getelementptr inbounds i8, i8* %16, i64 144
  %29 = bitcast i8* %28 to i32*
  %30 = load i32, i32* %29, align 8
  %31 = icmp eq i32 %30, -1
  br i1 %31, label %32, label %42

32:                                               ; preds = %9
  %33 = bitcast %"class.std::__1::locale"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %33) #9
  call void @_ZNKSt3__18ios_base6getlocEv(%"class.std::__1::locale"* nonnull sret %4, %"class.std::__1::ios_base"* %20) #9
  %34 = call %"class.std::__1::locale::facet"* @_ZNKSt3__16locale9use_facetERNS0_2idE(%"class.std::__1::locale"* nonnull %4, %"class.std::__1::locale::id"* nonnull dereferenceable(16) @_ZNSt3__15ctypeIcE2idE) #9
  %35 = bitcast %"class.std::__1::locale::facet"* %34 to %"class.std::__1::ctype"*
  %36 = bitcast %"class.std::__1::locale::facet"* %34 to i8 (%"class.std::__1::ctype"*, i8)***
  %37 = load i8 (%"class.std::__1::ctype"*, i8)**, i8 (%"class.std::__1::ctype"*, i8)*** %36, align 8
  %38 = getelementptr inbounds i8 (%"class.std::__1::ctype"*, i8)*, i8 (%"class.std::__1::ctype"*, i8)** %37, i64 7
  %39 = load i8 (%"class.std::__1::ctype"*, i8)*, i8 (%"class.std::__1::ctype"*, i8)** %38, align 8
  %40 = call signext i8 %39(%"class.std::__1::ctype"* %35, i8 signext 32) #9
  call void @_ZNSt3__16localeD1Ev(%"class.std::__1::locale"* nonnull %4) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %33) #9
  %41 = sext i8 %40 to i32
  store i32 %41, i32* %29, align 8
  br label %42

42:                                               ; preds = %9, %32
  %43 = phi i32 [ %41, %32 ], [ %30, %9 ]
  %44 = trunc i32 %43 to i8
  %45 = call %"class.std::__1::basic_streambuf"* @_ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_(%"class.std::__1::basic_streambuf"* %19, i8* %1, i8* %27, i8* %26, %"class.std::__1::ios_base"* dereferenceable(136) %20, i8 signext %44)
  %46 = icmp eq %"class.std::__1::basic_streambuf"* %45, null
  br i1 %46, label %47, label %58

47:                                               ; preds = %42
  %48 = load i8*, i8** %10, align 8
  %49 = getelementptr i8, i8* %48, i64 -24
  %50 = bitcast i8* %49 to i64*
  %51 = load i64, i64* %50, align 8
  %52 = getelementptr inbounds i8, i8* %15, i64 %51
  %53 = bitcast i8* %52 to %"class.std::__1::ios_base"*
  %54 = getelementptr inbounds i8, i8* %52, i64 32
  %55 = bitcast i8* %54 to i32*
  %56 = load i32, i32* %55, align 8
  %57 = or i32 %56, 5
  call void @_ZNSt3__18ios_base5clearEj(%"class.std::__1::ios_base"* %53, i32 %57) #9
  br label %58

58:                                               ; preds = %3, %42, %47
  call void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryD1Ev(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"* nonnull %5) #9
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %6) #9
  ret %"class.std::__1::basic_ostream"* %0
}

declare void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryC1ERS3_(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"*, %"class.std::__1::basic_ostream"* dereferenceable(160)) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.std::__1::basic_streambuf"* @_ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_(%"class.std::__1::basic_streambuf"*, i8*, i8*, i8*, %"class.std::__1::ios_base"* dereferenceable(136), i8 signext) local_unnamed_addr #0 comdat {
  %7 = alloca %"class.std::__1::basic_string.37", align 8
  %8 = icmp eq %"class.std::__1::basic_streambuf"* %0, null
  br i1 %8, label %78, label %9

9:                                                ; preds = %6
  %10 = ptrtoint i8* %3 to i64
  %11 = ptrtoint i8* %1 to i64
  %12 = sub i64 %10, %11
  %13 = getelementptr inbounds %"class.std::__1::ios_base", %"class.std::__1::ios_base"* %4, i64 0, i32 3
  %14 = load i64, i64* %13, align 8
  %15 = icmp sgt i64 %14, %12
  %16 = sub nsw i64 %14, %12
  %17 = select i1 %15, i64 %16, i64 0
  %18 = ptrtoint i8* %2 to i64
  %19 = sub i64 %18, %11
  %20 = icmp sgt i64 %19, 0
  br i1 %20, label %21, label %28

21:                                               ; preds = %9
  %22 = bitcast %"class.std::__1::basic_streambuf"* %0 to i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)***
  %23 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)**, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*** %22, align 8
  %24 = getelementptr inbounds i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %23, i64 12
  %25 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %24, align 8
  %26 = tail call i64 %25(%"class.std::__1::basic_streambuf"* nonnull %0, i8* %1, i64 %19) #9
  %27 = icmp eq i64 %26, %19
  br i1 %27, label %28, label %78

28:                                               ; preds = %21, %9
  %29 = icmp sgt i64 %17, 0
  br i1 %29, label %30, label %67

30:                                               ; preds = %28
  %31 = bitcast %"class.std::__1::basic_string.37"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %31) #9
  %32 = getelementptr inbounds %"class.std::__1::basic_string.37", %"class.std::__1::basic_string.37"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %33 = icmp ult i64 %17, 23
  %34 = bitcast %"class.std::__1::basic_string.37"* %7 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %34, i8 -86, i64 24, i1 false)
  br i1 %33, label %43, label %35

35:                                               ; preds = %30
  %36 = getelementptr inbounds %"class.std::__1::basic_string.37", %"class.std::__1::basic_string.37"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %37 = getelementptr inbounds %"class.std::__1::basic_string.37", %"class.std::__1::basic_string.37"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %38 = add nuw i64 %17, 16
  %39 = and i64 %38, -16
  %40 = tail call i8* @_Znwm(i64 %39) #11
  store i8* %40, i8** %32, align 8
  %41 = or i64 %39, -9223372036854775808
  store i64 %41, i64* %36, align 8
  store i64 %17, i64* %37, align 8
  %42 = bitcast %"class.std::__1::basic_string.37"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  br label %47

43:                                               ; preds = %30
  %44 = trunc i64 %17 to i8
  %45 = bitcast %"class.std::__1::basic_string.37"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %46 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %45, i64 0, i32 1, i32 0
  store i8 %44, i8* %46, align 1
  br label %47

47:                                               ; preds = %35, %43
  %48 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %42, %35 ], [ %45, %43 ]
  %49 = phi i8* [ %40, %35 ], [ %31, %43 ]
  call void @llvm.memset.p0i8.i64(i8* nonnull align 1 %49, i8 %5, i64 %17, i1 false) #9
  %50 = getelementptr inbounds i8, i8* %49, i64 %17
  store i8 0, i8* %50, align 1
  %51 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %48, i64 0, i32 1, i32 0
  %52 = load i8, i8* %51, align 1
  %53 = icmp slt i8 %52, 0
  %54 = load i8*, i8** %32, align 8
  %55 = select i1 %53, i8* %54, i8* %31
  %56 = bitcast %"class.std::__1::basic_streambuf"* %0 to i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)***
  %57 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)**, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*** %56, align 8
  %58 = getelementptr inbounds i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %57, i64 12
  %59 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %58, align 8
  %60 = call i64 %59(%"class.std::__1::basic_streambuf"* nonnull %0, i8* %55, i64 %17) #9
  %61 = icmp eq i64 %60, %17
  %62 = load i8, i8* %51, align 1
  %63 = icmp slt i8 %62, 0
  br i1 %63, label %64, label %66

64:                                               ; preds = %47
  %65 = load i8*, i8** %32, align 8
  call void @_ZdlPv(i8* %65) #11
  br label %66

66:                                               ; preds = %47, %64
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %31) #9
  br i1 %61, label %67, label %78

67:                                               ; preds = %66, %28
  %68 = sub i64 %10, %18
  %69 = icmp sgt i64 %68, 0
  br i1 %69, label %70, label %77

70:                                               ; preds = %67
  %71 = bitcast %"class.std::__1::basic_streambuf"* %0 to i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)***
  %72 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)**, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*** %71, align 8
  %73 = getelementptr inbounds i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %72, i64 12
  %74 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %73, align 8
  %75 = call i64 %74(%"class.std::__1::basic_streambuf"* nonnull %0, i8* %2, i64 %68) #9
  %76 = icmp eq i64 %75, %68
  br i1 %76, label %77, label %78

77:                                               ; preds = %70, %67
  store i64 0, i64* %13, align 8
  br label %78

78:                                               ; preds = %77, %66, %21, %70, %6
  %79 = phi %"class.std::__1::basic_streambuf"* [ null, %6 ], [ %0, %77 ], [ null, %66 ], [ null, %21 ], [ null, %70 ]
  ret %"class.std::__1::basic_streambuf"* %79
}

; Function Attrs: nounwind
declare void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryD1Ev(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"*) unnamed_addr #3

declare %"class.std::__1::locale::facet"* @_ZNKSt3__16locale9use_facetERNS0_2idE(%"class.std::__1::locale"*, %"class.std::__1::locale::id"* dereferenceable(16)) local_unnamed_addr #2

declare void @_ZNSt3__18ios_base5clearEj(%"class.std::__1::ios_base"*, i32) local_unnamed_addr #2

; Function Attrs: argmemonly nofree nounwind readonly
declare i64 @strlen(i8* nocapture) local_unnamed_addr #7

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEE14pool_allocatorIcEE6appendEPKcm(%"class.std::__1::basic_string"*, i8*, i64) local_unnamed_addr #0 comdat align 2 {
  %4 = bitcast %"class.std::__1::basic_string"* %0 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, pool_allocator<char> >::__short"*
  %5 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, pool_allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, pool_allocator<char> >::__short"* %4, i64 0, i32 1, i32 0
  %6 = load i8, i8* %5, align 1
  %7 = icmp slt i8 %6, 0
  br i1 %7, label %8, label %15

8:                                                ; preds = %3
  %9 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %10 = load i64, i64* %9, align 8
  %11 = and i64 %10, 9223372036854775807
  %12 = add nsw i64 %11, -1
  %13 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %14 = load i64, i64* %13, align 8
  br label %17

15:                                               ; preds = %3
  %16 = zext i8 %6 to i64
  br label %17

17:                                               ; preds = %8, %15
  %18 = phi i64 [ %12, %8 ], [ 22, %15 ]
  %19 = phi i64 [ %14, %8 ], [ %16, %15 ]
  %20 = sub i64 %18, %19
  %21 = icmp ult i64 %20, %2
  br i1 %21, label %42, label %22

22:                                               ; preds = %17
  %23 = icmp eq i64 %2, 0
  br i1 %23, label %81, label %24

24:                                               ; preds = %22
  br i1 %7, label %25, label %28

25:                                               ; preds = %24
  %26 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %27 = load i8*, i8** %26, align 8
  br label %30

28:                                               ; preds = %24
  %29 = bitcast %"class.std::__1::basic_string"* %0 to i8*
  br label %30

30:                                               ; preds = %25, %28
  %31 = phi i8* [ %27, %25 ], [ %29, %28 ]
  %32 = getelementptr inbounds i8, i8* %31, i64 %19
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %32, i8* align 1 %1, i64 %2, i1 false) #9
  %33 = add i64 %19, %2
  %34 = load i8, i8* %5, align 1
  %35 = icmp slt i8 %34, 0
  br i1 %35, label %36, label %38

36:                                               ; preds = %30
  %37 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %33, i64* %37, align 8
  br label %40

38:                                               ; preds = %30
  %39 = trunc i64 %33 to i8
  store i8 %39, i8* %5, align 1
  br label %40

40:                                               ; preds = %36, %38
  %41 = getelementptr inbounds i8, i8* %31, i64 %33
  br label %79

42:                                               ; preds = %17
  %43 = add i64 %19, %2
  %44 = sub i64 %43, %18
  %45 = sub i64 -18, %18
  %46 = icmp ult i64 %45, %44
  br i1 %46, label %47, label %49

47:                                               ; preds = %42
  %48 = bitcast %"class.std::__1::basic_string"* %0 to %"class.std::__1::__basic_string_common"*
  tail call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* %48) #10
  unreachable

49:                                               ; preds = %42
  br i1 %7, label %50, label %53

50:                                               ; preds = %49
  %51 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %52 = load i8*, i8** %51, align 8
  br label %55

53:                                               ; preds = %49
  %54 = bitcast %"class.std::__1::basic_string"* %0 to i8*
  br label %55

55:                                               ; preds = %53, %50
  %56 = phi i8* [ %52, %50 ], [ %54, %53 ]
  %57 = icmp ult i64 %18, 9223372036854775783
  br i1 %57, label %58, label %66

58:                                               ; preds = %55
  %59 = shl i64 %18, 1
  %60 = icmp ult i64 %43, %59
  %61 = select i1 %60, i64 %59, i64 %43
  %62 = icmp ult i64 %61, 23
  br i1 %62, label %66, label %63

63:                                               ; preds = %58
  %64 = add i64 %61, 16
  %65 = and i64 %64, -16
  br label %66

66:                                               ; preds = %63, %58, %55
  %67 = phi i64 [ %65, %63 ], [ 23, %58 ], [ -17, %55 ]
  %68 = tail call %"class.angle::PoolAllocator"* @_Z22GetGlobalPoolAllocatorv() #9
  %69 = tail call i8* @_ZN5angle13PoolAllocator8allocateEm(%"class.angle::PoolAllocator"* %68, i64 %67) #9
  %70 = icmp eq i64 %19, 0
  br i1 %70, label %72, label %71

71:                                               ; preds = %66
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %69, i8* align 1 %56, i64 %19, i1 false) #9
  br label %72

72:                                               ; preds = %71, %66
  %73 = getelementptr inbounds i8, i8* %69, i64 %19
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %73, i8* align 1 %1, i64 %2, i1 false) #9
  %74 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %69, i8** %74, align 8
  %75 = or i64 %67, -9223372036854775808
  %76 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %75, i64* %76, align 8
  %77 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %43, i64* %77, align 8
  %78 = getelementptr inbounds i8, i8* %69, i64 %43
  br label %79

79:                                               ; preds = %72, %40
  %80 = phi i8* [ %41, %40 ], [ %78, %72 ]
  store i8 0, i8* %80, align 1
  br label %81

81:                                               ; preds = %79, %22
  ret %"class.std::__1::basic_string"* %0
}

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #4

declare void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE9push_backEc(%"class.std::__1::basic_string.37"*, i8 signext) local_unnamed_addr #2

declare dereferenceable(24) %"class.std::__1::basic_string.37"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKc(%"class.std::__1::basic_string.37"*, i8*) local_unnamed_addr #2

; Function Attrs: nofree nounwind readonly
declare i32 @bcmp(i8* nocapture, i8* nocapture, i64) local_unnamed_addr #8

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { argmemonly nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nofree nounwind readonly }
attributes #9 = { nounwind }
attributes #10 = { noreturn nounwind }
attributes #11 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!3}
!3 = distinct !{!3, !4, !"_ZNSt3__1plIcNS_11char_traitsIcEE14pool_allocatorIcEEENS_12basic_stringIT_T0_T1_EERKS9_PKS6_: argument 0"}
!4 = distinct !{!4, !"_ZNSt3__1plIcNS_11char_traitsIcEE14pool_allocatorIcEEENS_12basic_stringIT_T0_T1_EERKS9_PKS6_"}
!5 = !{!6}
!6 = distinct !{!6, !7, !"_ZNSt3__19basic_iosIcNS_11char_traitsIcEEE5imbueERKNS_6localeE: argument 0"}
!7 = distinct !{!7, !"_ZNSt3__19basic_iosIcNS_11char_traitsIcEEE5imbueERKNS_6localeE"}
!8 = !{!9}
!9 = distinct !{!9, !10, !"_ZNSt3__115basic_streambufIcNS_11char_traitsIcEEE8pubimbueERKNS_6localeE: argument 0"}
!10 = distinct !{!10, !"_ZNSt3__115basic_streambufIcNS_11char_traitsIcEEE8pubimbueERKNS_6localeE"}
!11 = !{!12}
!12 = distinct !{!12, !13}
!13 = distinct !{!13, !"LVerDomain"}
!14 = !{!15}
!15 = distinct !{!15, !13}
!16 = distinct !{!16, !17}
!17 = !{!"llvm.loop.isvectorized", i32 1}
!18 = distinct !{!18, !19}
!19 = !{!"llvm.loop.unroll.disable"}
!20 = distinct !{!20, !17}
!21 = !{i8 0, i8 2}
