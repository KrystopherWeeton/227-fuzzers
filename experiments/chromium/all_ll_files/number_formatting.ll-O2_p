; ModuleID = '../../base/i18n/number_formatting.cc'
source_filename = "../../base/i18n/number_formatting.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.base::LazyInstance" = type { i64, [8 x i8] }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__rep" }
%"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__long" }
%"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__long" = type { i16*, i64, i64 }
%"class.std::__1::basic_string.4" = type { %"class.std::__1::__compressed_pair.5" }
%"class.std::__1::__compressed_pair.5" = type { %"struct.std::__1::__compressed_pair_elem.6" }
%"struct.std::__1::__compressed_pair_elem.6" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon.7 }
%union.anon.7 = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.icu_69::UnicodeString" = type { %"class.icu_69::Replaceable", %"union.icu_69::UnicodeString::StackBufferOrFields" }
%"class.icu_69::Replaceable" = type { %"class.icu_69::UObject" }
%"class.icu_69::UObject" = type { i32 (...)** }
%"union.icu_69::UnicodeString::StackBufferOrFields" = type { %struct.anon.14, [32 x i8] }
%struct.anon.14 = type { i16, i32, i32, i16* }
%"class.icu_69::NumberFormat" = type { %"class.icu_69::Format.base", i8, i32, i32, i32, i32, i8, i8, [4 x i16], i32, [4 x i8] }
%"class.icu_69::Format.base" = type <{ %"class.icu_69::UObject", [157 x i8], [157 x i8] }>
%"struct.base::(anonymous namespace)::NumberFormatWrapper" = type { %"class.std::__1::unique_ptr" }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair.1" }
%"class.std::__1::__compressed_pair.1" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"struct.std::__1::__compressed_pair_elem.2" = type { %"class.icu_69::NumberFormat"* }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon.8 }
%struct.anon.8 = type { i8 }
%struct.anon.13 = type { i16, [27 x i16] }
%"class.std::__1::__basic_string_common" = type { i8 }
%"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short" = type { [11 x i16], %struct.anon }
%struct.anon = type { %"struct.std::__1::__padding", i8 }
%"struct.std::__1::__padding" = type { [1 x i8] }
%"class.base::i18n::internal::MessageArg" = type { %"class.std::__1::unique_ptr.16" }
%"class.std::__1::unique_ptr.16" = type { %"class.std::__1::__compressed_pair.17" }
%"class.std::__1::__compressed_pair.17" = type { %"struct.std::__1::__compressed_pair_elem.18" }
%"struct.std::__1::__compressed_pair_elem.18" = type { %"class.icu_69::Formattable"* }
%"class.icu_69::Formattable" = type { %"class.icu_69::UObject", %union.anon.19, %"class.icu_69::CharString"*, %"class.icu_69::number::impl::DecimalQuantity"*, i32, %"class.icu_69::UnicodeString" }
%union.anon.19 = type { %struct.anon.20 }
%struct.anon.20 = type { %"class.icu_69::Formattable"*, i32 }
%"class.icu_69::CharString" = type opaque
%"class.icu_69::number::impl::DecimalQuantity" = type opaque

@_ZN4base12_GLOBAL__N_119g_number_format_intE = internal global %"class.base::LazyInstance" zeroinitializer, align 8
@.str = private unnamed_addr constant [4 x i8] c"%ld\00", align 1
@_ZN4base12_GLOBAL__N_121g_number_format_floatE = internal global %"class.base::LazyInstance" zeroinitializer, align 8
@.str.1 = private unnamed_addr constant [3 x i8] c"%f\00", align 1
@.str.2 = private unnamed_addr constant [19 x i16] [i16 123, i16 48, i16 44, i16 110, i16 117, i16 109, i16 98, i16 101, i16 114, i16 44, i16 112, i16 101, i16 114, i16 99, i16 101, i16 110, i16 116, i16 125, i16 0], align 2
@_ZTVN6icu_6913UnicodeStringE = external unnamed_addr constant { [13 x i8*] }, align 8

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4base12FormatNumberEl(%"class.std::__1::basic_string"* noalias sret, i64) local_unnamed_addr #0 {
  %3 = alloca i32, align 4
  %4 = alloca %"class.std::__1::basic_string.4", align 8
  %5 = alloca %"class.icu_69::UnicodeString", align 8
  %6 = load atomic i64, i64* getelementptr inbounds (%"class.base::LazyInstance", %"class.base::LazyInstance"* @_ZN4base12_GLOBAL__N_119g_number_format_intE, i64 0, i32 0) acquire, align 8
  %7 = icmp ugt i64 %6, 1
  br i1 %7, label %23, label %8

8:                                                ; preds = %2
  %9 = tail call zeroext i1 @_ZN4base8internal17NeedsLazyInstanceEPl(i64* getelementptr inbounds (%"class.base::LazyInstance", %"class.base::LazyInstance"* @_ZN4base12_GLOBAL__N_119g_number_format_intE, i64 0, i32 0)) #8
  br i1 %9, label %10, label %21

10:                                               ; preds = %8
  store i64 0, i64* bitcast (i8* getelementptr inbounds (%"class.base::LazyInstance", %"class.base::LazyInstance"* @_ZN4base12_GLOBAL__N_119g_number_format_intE, i64 0, i32 1, i64 0) to i64*), align 8
  %11 = bitcast i32* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %11) #8
  store i32 0, i32* %3, align 4
  %12 = call %"class.icu_69::NumberFormat"* @_ZN6icu_6912NumberFormat14createInstanceER10UErrorCode(i32* nonnull dereferenceable(4) %3) #8
  %13 = load %"class.icu_69::NumberFormat"*, %"class.icu_69::NumberFormat"** bitcast (i8* getelementptr inbounds (%"class.base::LazyInstance", %"class.base::LazyInstance"* @_ZN4base12_GLOBAL__N_119g_number_format_intE, i64 0, i32 1, i64 0) to %"class.icu_69::NumberFormat"**), align 8
  store %"class.icu_69::NumberFormat"* %12, %"class.icu_69::NumberFormat"** bitcast (i8* getelementptr inbounds (%"class.base::LazyInstance", %"class.base::LazyInstance"* @_ZN4base12_GLOBAL__N_119g_number_format_intE, i64 0, i32 1, i64 0) to %"class.icu_69::NumberFormat"**), align 8
  %14 = icmp eq %"class.icu_69::NumberFormat"* %13, null
  br i1 %14, label %20, label %15

15:                                               ; preds = %10
  %16 = bitcast %"class.icu_69::NumberFormat"* %13 to void (%"class.icu_69::NumberFormat"*)***
  %17 = load void (%"class.icu_69::NumberFormat"*)**, void (%"class.icu_69::NumberFormat"*)*** %16, align 8
  %18 = getelementptr inbounds void (%"class.icu_69::NumberFormat"*)*, void (%"class.icu_69::NumberFormat"*)** %17, i64 1
  %19 = load void (%"class.icu_69::NumberFormat"*)*, void (%"class.icu_69::NumberFormat"*)** %18, align 8
  call void %19(%"class.icu_69::NumberFormat"* nonnull %13) #8
  br label %20

20:                                               ; preds = %15, %10
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %11) #8
  call void @_ZN4base8internal20CompleteLazyInstanceEPllPFvPvES2_(i64* getelementptr inbounds (%"class.base::LazyInstance", %"class.base::LazyInstance"* @_ZN4base12_GLOBAL__N_119g_number_format_intE, i64 0, i32 0), i64 ptrtoint (i8* getelementptr inbounds (%"class.base::LazyInstance", %"class.base::LazyInstance"* @_ZN4base12_GLOBAL__N_119g_number_format_intE, i64 0, i32 1, i64 0) to i64), void (i8*)* nonnull @_ZN4base12LazyInstanceINS_12_GLOBAL__N_119NumberFormatWrapperENS_8internal34DestructorAtExitLazyInstanceTraitsIS2_EEE6OnExitEPv, i8* bitcast (%"class.base::LazyInstance"* @_ZN4base12_GLOBAL__N_119g_number_format_intE to i8*)) #8
  br label %23

21:                                               ; preds = %8
  %22 = load atomic i64, i64* getelementptr inbounds (%"class.base::LazyInstance", %"class.base::LazyInstance"* @_ZN4base12_GLOBAL__N_119g_number_format_intE, i64 0, i32 0) acquire, align 8
  br label %23

23:                                               ; preds = %2, %20, %21
  %24 = phi i64 [ %6, %2 ], [ ptrtoint (i8* getelementptr inbounds (%"class.base::LazyInstance", %"class.base::LazyInstance"* @_ZN4base12_GLOBAL__N_119g_number_format_intE, i64 0, i32 1, i64 0) to i64), %20 ], [ %22, %21 ]
  %25 = inttoptr i64 %24 to %"struct.base::(anonymous namespace)::NumberFormatWrapper"*
  %26 = getelementptr inbounds %"struct.base::(anonymous namespace)::NumberFormatWrapper", %"struct.base::(anonymous namespace)::NumberFormatWrapper"* %25, i64 0, i32 0, i32 0, i32 0, i32 0
  %27 = load %"class.icu_69::NumberFormat"*, %"class.icu_69::NumberFormat"** %26, align 8
  %28 = icmp eq %"class.icu_69::NumberFormat"* %27, null
  br i1 %28, label %29, label %47

29:                                               ; preds = %23
  %30 = bitcast %"class.std::__1::basic_string.4"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %30) #8
  call void (%"class.std::__1::basic_string.4"*, i8*, ...) @_ZN4base12StringPrintfEPKcz(%"class.std::__1::basic_string.4"* nonnull sret %4, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str, i64 0, i64 0), i64 %1) #8
  %31 = bitcast %"class.std::__1::basic_string.4"* %4 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %32 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %31, i64 0, i32 1, i32 0
  %33 = load i8, i8* %32, align 1
  %34 = icmp slt i8 %33, 0
  %35 = getelementptr inbounds %"class.std::__1::basic_string.4", %"class.std::__1::basic_string.4"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %36 = load i8*, i8** %35, align 8
  %37 = select i1 %34, i8* %36, i8* %30
  %38 = getelementptr inbounds %"class.std::__1::basic_string.4", %"class.std::__1::basic_string.4"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %39 = load i64, i64* %38, align 8
  %40 = zext i8 %33 to i64
  %41 = select i1 %34, i64 %39, i64 %40
  call void @_ZN4base12ASCIIToUTF16ENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.std::__1::basic_string"* sret %0, i8* %37, i64 %41) #8
  %42 = load i8, i8* %32, align 1
  %43 = icmp slt i8 %42, 0
  br i1 %43, label %44, label %46

44:                                               ; preds = %29
  %45 = load i8*, i8** %35, align 8
  call void @_ZdlPv(i8* %45) #9
  br label %46

46:                                               ; preds = %29, %44
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %30) #8
  br label %248

47:                                               ; preds = %23
  %48 = bitcast %"class.icu_69::UnicodeString"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %48) #8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %48, i8 -86, i64 64, i1 false)
  %49 = getelementptr inbounds %"class.icu_69::UnicodeString", %"class.icu_69::UnicodeString"* %5, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [13 x i8*] }, { [13 x i8*] }* @_ZTVN6icu_6913UnicodeStringE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %49, align 8
  %50 = getelementptr inbounds %"class.icu_69::UnicodeString", %"class.icu_69::UnicodeString"* %5, i64 0, i32 1, i32 0, i32 0
  store i16 2, i16* %50, align 8
  %51 = call dereferenceable(64) %"class.icu_69::UnicodeString"* @_ZNK6icu_6912NumberFormat6formatElRNS_13UnicodeStringE(%"class.icu_69::NumberFormat"* nonnull %27, i64 %1, %"class.icu_69::UnicodeString"* nonnull dereferenceable(64) %5) #8
  %52 = getelementptr inbounds %"class.icu_69::UnicodeString", %"class.icu_69::UnicodeString"* %5, i64 0, i32 1
  %53 = getelementptr inbounds %"union.icu_69::UnicodeString::StackBufferOrFields", %"union.icu_69::UnicodeString::StackBufferOrFields"* %52, i64 0, i32 0, i32 0
  %54 = load i16, i16* %53, align 8, !noalias !2
  %55 = sext i16 %54 to i32
  %56 = and i32 %55, 17
  %57 = icmp eq i32 %56, 0
  br i1 %57, label %58, label %67

58:                                               ; preds = %47
  %59 = and i32 %55, 2
  %60 = icmp eq i32 %59, 0
  br i1 %60, label %64, label %61

61:                                               ; preds = %58
  %62 = bitcast %"union.icu_69::UnicodeString::StackBufferOrFields"* %52 to %struct.anon.13*
  %63 = getelementptr inbounds %struct.anon.13, %struct.anon.13* %62, i64 0, i32 1, i64 0
  br label %67

64:                                               ; preds = %58
  %65 = getelementptr inbounds %"class.icu_69::UnicodeString", %"class.icu_69::UnicodeString"* %5, i64 0, i32 1, i32 0, i32 3
  %66 = load i16*, i16** %65, align 8, !noalias !2
  br label %67

67:                                               ; preds = %64, %61, %47
  %68 = phi i16* [ %63, %61 ], [ %66, %64 ], [ null, %47 ]
  call void asm sideeffect "", "rm,~{memory},~{dirflag},~{fpsr},~{flags}"(i16* %68) #8, !noalias !2, !srcloc !5
  %69 = load i16, i16* %50, align 8, !noalias !2
  %70 = icmp slt i16 %69, 0
  %71 = lshr i16 %69, 5
  %72 = zext i16 %71 to i32
  %73 = getelementptr inbounds %"class.icu_69::UnicodeString", %"class.icu_69::UnicodeString"* %5, i64 0, i32 1, i32 0, i32 1
  %74 = load i32, i32* %73, align 4, !noalias !2
  %75 = select i1 %70, i32 %74, i32 %72
  %76 = sext i32 %75 to i64
  %77 = icmp slt i32 %75, 0
  br i1 %77, label %78, label %80

78:                                               ; preds = %67
  %79 = bitcast %"class.std::__1::basic_string"* %0 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* %79) #10
  unreachable

80:                                               ; preds = %67
  %81 = icmp ult i32 %75, 11
  br i1 %81, label %95, label %82

82:                                               ; preds = %80
  %83 = add nuw nsw i64 %76, 8
  %84 = and i64 %83, -8
  %85 = icmp slt i64 %84, 0
  br i1 %85, label %86, label %87

86:                                               ; preds = %82
  call void @abort() #10
  unreachable

87:                                               ; preds = %82
  %88 = shl nsw i64 %84, 1
  %89 = call i8* @_Znwm(i64 %88) #9
  %90 = bitcast i8* %89 to i16*
  %91 = bitcast %"class.std::__1::basic_string"* %0 to i8**
  store i8* %89, i8** %91, align 8, !alias.scope !2
  %92 = or i64 %84, -9223372036854775808
  %93 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %92, i64* %93, align 8, !alias.scope !2
  %94 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %76, i64* %94, align 8, !alias.scope !2
  br label %101

95:                                               ; preds = %80
  %96 = trunc i32 %75 to i8
  %97 = bitcast %"class.std::__1::basic_string"* %0 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %98 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %97, i64 0, i32 1, i32 1
  store i8 %96, i8* %98, align 1, !alias.scope !2
  %99 = bitcast %"class.std::__1::basic_string"* %0 to i16*
  %100 = icmp eq i32 %75, 0
  br i1 %100, label %245, label %101

101:                                              ; preds = %95, %87
  %102 = phi i16* [ %90, %87 ], [ %99, %95 ]
  %103 = icmp ult i32 %75, 16
  br i1 %103, label %192, label %104

104:                                              ; preds = %101
  %105 = getelementptr i16, i16* %102, i64 %76
  %106 = getelementptr i16, i16* %68, i64 %76
  %107 = icmp ult i16* %102, %106
  %108 = icmp ult i16* %68, %105
  %109 = and i1 %107, %108
  br i1 %109, label %192, label %110

110:                                              ; preds = %104
  %111 = and i64 %76, -16
  %112 = sub nsw i64 %76, %111
  %113 = getelementptr i16, i16* %68, i64 %111
  %114 = getelementptr i16, i16* %102, i64 %111
  %115 = add nsw i64 %111, -16
  %116 = lshr exact i64 %115, 4
  %117 = add nuw nsw i64 %116, 1
  %118 = and i64 %117, 3
  %119 = icmp ult i64 %115, 48
  br i1 %119, label %171, label %120

120:                                              ; preds = %110
  %121 = sub nsw i64 %117, %118
  br label %122

122:                                              ; preds = %122, %120
  %123 = phi i64 [ 0, %120 ], [ %168, %122 ]
  %124 = phi i64 [ %121, %120 ], [ %169, %122 ]
  %125 = getelementptr i16, i16* %68, i64 %123
  %126 = getelementptr i16, i16* %102, i64 %123
  %127 = bitcast i16* %125 to <8 x i16>*
  %128 = load <8 x i16>, <8 x i16>* %127, align 2, !alias.scope !6
  %129 = getelementptr i16, i16* %125, i64 8
  %130 = bitcast i16* %129 to <8 x i16>*
  %131 = load <8 x i16>, <8 x i16>* %130, align 2, !alias.scope !6
  %132 = bitcast i16* %126 to <8 x i16>*
  store <8 x i16> %128, <8 x i16>* %132, align 2, !alias.scope !9, !noalias !6
  %133 = getelementptr i16, i16* %126, i64 8
  %134 = bitcast i16* %133 to <8 x i16>*
  store <8 x i16> %131, <8 x i16>* %134, align 2, !alias.scope !9, !noalias !6
  %135 = or i64 %123, 16
  %136 = getelementptr i16, i16* %68, i64 %135
  %137 = getelementptr i16, i16* %102, i64 %135
  %138 = bitcast i16* %136 to <8 x i16>*
  %139 = load <8 x i16>, <8 x i16>* %138, align 2, !alias.scope !6
  %140 = getelementptr i16, i16* %136, i64 8
  %141 = bitcast i16* %140 to <8 x i16>*
  %142 = load <8 x i16>, <8 x i16>* %141, align 2, !alias.scope !6
  %143 = bitcast i16* %137 to <8 x i16>*
  store <8 x i16> %139, <8 x i16>* %143, align 2, !alias.scope !9, !noalias !6
  %144 = getelementptr i16, i16* %137, i64 8
  %145 = bitcast i16* %144 to <8 x i16>*
  store <8 x i16> %142, <8 x i16>* %145, align 2, !alias.scope !9, !noalias !6
  %146 = or i64 %123, 32
  %147 = getelementptr i16, i16* %68, i64 %146
  %148 = getelementptr i16, i16* %102, i64 %146
  %149 = bitcast i16* %147 to <8 x i16>*
  %150 = load <8 x i16>, <8 x i16>* %149, align 2, !alias.scope !6
  %151 = getelementptr i16, i16* %147, i64 8
  %152 = bitcast i16* %151 to <8 x i16>*
  %153 = load <8 x i16>, <8 x i16>* %152, align 2, !alias.scope !6
  %154 = bitcast i16* %148 to <8 x i16>*
  store <8 x i16> %150, <8 x i16>* %154, align 2, !alias.scope !9, !noalias !6
  %155 = getelementptr i16, i16* %148, i64 8
  %156 = bitcast i16* %155 to <8 x i16>*
  store <8 x i16> %153, <8 x i16>* %156, align 2, !alias.scope !9, !noalias !6
  %157 = or i64 %123, 48
  %158 = getelementptr i16, i16* %68, i64 %157
  %159 = getelementptr i16, i16* %102, i64 %157
  %160 = bitcast i16* %158 to <8 x i16>*
  %161 = load <8 x i16>, <8 x i16>* %160, align 2, !alias.scope !6
  %162 = getelementptr i16, i16* %158, i64 8
  %163 = bitcast i16* %162 to <8 x i16>*
  %164 = load <8 x i16>, <8 x i16>* %163, align 2, !alias.scope !6
  %165 = bitcast i16* %159 to <8 x i16>*
  store <8 x i16> %161, <8 x i16>* %165, align 2, !alias.scope !9, !noalias !6
  %166 = getelementptr i16, i16* %159, i64 8
  %167 = bitcast i16* %166 to <8 x i16>*
  store <8 x i16> %164, <8 x i16>* %167, align 2, !alias.scope !9, !noalias !6
  %168 = add i64 %123, 64
  %169 = add i64 %124, -4
  %170 = icmp eq i64 %169, 0
  br i1 %170, label %171, label %122, !llvm.loop !11

171:                                              ; preds = %122, %110
  %172 = phi i64 [ 0, %110 ], [ %168, %122 ]
  %173 = icmp eq i64 %118, 0
  br i1 %173, label %190, label %174

174:                                              ; preds = %171, %174
  %175 = phi i64 [ %187, %174 ], [ %172, %171 ]
  %176 = phi i64 [ %188, %174 ], [ %118, %171 ]
  %177 = getelementptr i16, i16* %68, i64 %175
  %178 = getelementptr i16, i16* %102, i64 %175
  %179 = bitcast i16* %177 to <8 x i16>*
  %180 = load <8 x i16>, <8 x i16>* %179, align 2, !alias.scope !6
  %181 = getelementptr i16, i16* %177, i64 8
  %182 = bitcast i16* %181 to <8 x i16>*
  %183 = load <8 x i16>, <8 x i16>* %182, align 2, !alias.scope !6
  %184 = bitcast i16* %178 to <8 x i16>*
  store <8 x i16> %180, <8 x i16>* %184, align 2, !alias.scope !9, !noalias !6
  %185 = getelementptr i16, i16* %178, i64 8
  %186 = bitcast i16* %185 to <8 x i16>*
  store <8 x i16> %183, <8 x i16>* %186, align 2, !alias.scope !9, !noalias !6
  %187 = add i64 %175, 16
  %188 = add i64 %176, -1
  %189 = icmp eq i64 %188, 0
  br i1 %189, label %190, label %174, !llvm.loop !13

190:                                              ; preds = %174, %171
  %191 = icmp eq i64 %111, %76
  br i1 %191, label %245, label %192

192:                                              ; preds = %190, %104, %101
  %193 = phi i64 [ %76, %104 ], [ %76, %101 ], [ %112, %190 ]
  %194 = phi i16* [ %68, %104 ], [ %68, %101 ], [ %113, %190 ]
  %195 = phi i16* [ %102, %104 ], [ %102, %101 ], [ %114, %190 ]
  %196 = add nsw i64 %193, -1
  %197 = and i64 %193, 7
  %198 = icmp eq i64 %197, 0
  br i1 %198, label %210, label %199

199:                                              ; preds = %192, %199
  %200 = phi i64 [ %205, %199 ], [ %193, %192 ]
  %201 = phi i16* [ %207, %199 ], [ %194, %192 ]
  %202 = phi i16* [ %206, %199 ], [ %195, %192 ]
  %203 = phi i64 [ %208, %199 ], [ %197, %192 ]
  %204 = load i16, i16* %201, align 2
  store i16 %204, i16* %202, align 2
  %205 = add i64 %200, -1
  %206 = getelementptr inbounds i16, i16* %202, i64 1
  %207 = getelementptr inbounds i16, i16* %201, i64 1
  %208 = add i64 %203, -1
  %209 = icmp eq i64 %208, 0
  br i1 %209, label %210, label %199, !llvm.loop !15

210:                                              ; preds = %199, %192
  %211 = phi i64 [ %193, %192 ], [ %205, %199 ]
  %212 = phi i16* [ %194, %192 ], [ %207, %199 ]
  %213 = phi i16* [ %195, %192 ], [ %206, %199 ]
  %214 = icmp ult i64 %196, 7
  br i1 %214, label %245, label %215

215:                                              ; preds = %210, %215
  %216 = phi i64 [ %241, %215 ], [ %211, %210 ]
  %217 = phi i16* [ %243, %215 ], [ %212, %210 ]
  %218 = phi i16* [ %242, %215 ], [ %213, %210 ]
  %219 = load i16, i16* %217, align 2
  store i16 %219, i16* %218, align 2
  %220 = getelementptr inbounds i16, i16* %218, i64 1
  %221 = getelementptr inbounds i16, i16* %217, i64 1
  %222 = load i16, i16* %221, align 2
  store i16 %222, i16* %220, align 2
  %223 = getelementptr inbounds i16, i16* %218, i64 2
  %224 = getelementptr inbounds i16, i16* %217, i64 2
  %225 = load i16, i16* %224, align 2
  store i16 %225, i16* %223, align 2
  %226 = getelementptr inbounds i16, i16* %218, i64 3
  %227 = getelementptr inbounds i16, i16* %217, i64 3
  %228 = load i16, i16* %227, align 2
  store i16 %228, i16* %226, align 2
  %229 = getelementptr inbounds i16, i16* %218, i64 4
  %230 = getelementptr inbounds i16, i16* %217, i64 4
  %231 = load i16, i16* %230, align 2
  store i16 %231, i16* %229, align 2
  %232 = getelementptr inbounds i16, i16* %218, i64 5
  %233 = getelementptr inbounds i16, i16* %217, i64 5
  %234 = load i16, i16* %233, align 2
  store i16 %234, i16* %232, align 2
  %235 = getelementptr inbounds i16, i16* %218, i64 6
  %236 = getelementptr inbounds i16, i16* %217, i64 6
  %237 = load i16, i16* %236, align 2
  store i16 %237, i16* %235, align 2
  %238 = getelementptr inbounds i16, i16* %218, i64 7
  %239 = getelementptr inbounds i16, i16* %217, i64 7
  %240 = load i16, i16* %239, align 2
  store i16 %240, i16* %238, align 2
  %241 = add i64 %216, -8
  %242 = getelementptr inbounds i16, i16* %218, i64 8
  %243 = getelementptr inbounds i16, i16* %217, i64 8
  %244 = icmp eq i64 %241, 0
  br i1 %244, label %245, label %215, !llvm.loop !16

245:                                              ; preds = %210, %215, %190, %95
  %246 = phi i16* [ %99, %95 ], [ %102, %190 ], [ %102, %215 ], [ %102, %210 ]
  %247 = getelementptr inbounds i16, i16* %246, i64 %76
  store i16 0, i16* %247, align 2
  call void @_ZN6icu_6913UnicodeStringD1Ev(%"class.icu_69::UnicodeString"* nonnull %5) #8
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %48) #8
  br label %248

248:                                              ; preds = %245, %46
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

declare void @_ZN4base12ASCIIToUTF16ENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.std::__1::basic_string"* sret, i8*, i64) local_unnamed_addr #2

declare void @_ZN4base12StringPrintfEPKcz(%"class.std::__1::basic_string.4"* sret, i8*, ...) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

declare dereferenceable(64) %"class.icu_69::UnicodeString"* @_ZNK6icu_6912NumberFormat6formatElRNS_13UnicodeStringE(%"class.icu_69::NumberFormat"*, i64, %"class.icu_69::UnicodeString"* dereferenceable(64)) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN6icu_6913UnicodeStringD1Ev(%"class.icu_69::UnicodeString"*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4base12FormatDoubleEdi(%"class.std::__1::basic_string"* noalias sret, double, i32) local_unnamed_addr #0 {
  %4 = alloca i32, align 4
  %5 = alloca %"class.std::__1::basic_string.4", align 8
  %6 = alloca %"class.icu_69::UnicodeString", align 8
  %7 = load atomic i64, i64* getelementptr inbounds (%"class.base::LazyInstance", %"class.base::LazyInstance"* @_ZN4base12_GLOBAL__N_121g_number_format_floatE, i64 0, i32 0) acquire, align 8
  %8 = icmp ugt i64 %7, 1
  br i1 %8, label %24, label %9

9:                                                ; preds = %3
  %10 = tail call zeroext i1 @_ZN4base8internal17NeedsLazyInstanceEPl(i64* getelementptr inbounds (%"class.base::LazyInstance", %"class.base::LazyInstance"* @_ZN4base12_GLOBAL__N_121g_number_format_floatE, i64 0, i32 0)) #8
  br i1 %10, label %11, label %22

11:                                               ; preds = %9
  store i64 0, i64* bitcast (i8* getelementptr inbounds (%"class.base::LazyInstance", %"class.base::LazyInstance"* @_ZN4base12_GLOBAL__N_121g_number_format_floatE, i64 0, i32 1, i64 0) to i64*), align 8
  %12 = bitcast i32* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %12) #8
  store i32 0, i32* %4, align 4
  %13 = call %"class.icu_69::NumberFormat"* @_ZN6icu_6912NumberFormat14createInstanceER10UErrorCode(i32* nonnull dereferenceable(4) %4) #8
  %14 = load %"class.icu_69::NumberFormat"*, %"class.icu_69::NumberFormat"** bitcast (i8* getelementptr inbounds (%"class.base::LazyInstance", %"class.base::LazyInstance"* @_ZN4base12_GLOBAL__N_121g_number_format_floatE, i64 0, i32 1, i64 0) to %"class.icu_69::NumberFormat"**), align 8
  store %"class.icu_69::NumberFormat"* %13, %"class.icu_69::NumberFormat"** bitcast (i8* getelementptr inbounds (%"class.base::LazyInstance", %"class.base::LazyInstance"* @_ZN4base12_GLOBAL__N_121g_number_format_floatE, i64 0, i32 1, i64 0) to %"class.icu_69::NumberFormat"**), align 8
  %15 = icmp eq %"class.icu_69::NumberFormat"* %14, null
  br i1 %15, label %21, label %16

16:                                               ; preds = %11
  %17 = bitcast %"class.icu_69::NumberFormat"* %14 to void (%"class.icu_69::NumberFormat"*)***
  %18 = load void (%"class.icu_69::NumberFormat"*)**, void (%"class.icu_69::NumberFormat"*)*** %17, align 8
  %19 = getelementptr inbounds void (%"class.icu_69::NumberFormat"*)*, void (%"class.icu_69::NumberFormat"*)** %18, i64 1
  %20 = load void (%"class.icu_69::NumberFormat"*)*, void (%"class.icu_69::NumberFormat"*)** %19, align 8
  call void %20(%"class.icu_69::NumberFormat"* nonnull %14) #8
  br label %21

21:                                               ; preds = %16, %11
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %12) #8
  call void @_ZN4base8internal20CompleteLazyInstanceEPllPFvPvES2_(i64* getelementptr inbounds (%"class.base::LazyInstance", %"class.base::LazyInstance"* @_ZN4base12_GLOBAL__N_121g_number_format_floatE, i64 0, i32 0), i64 ptrtoint (i8* getelementptr inbounds (%"class.base::LazyInstance", %"class.base::LazyInstance"* @_ZN4base12_GLOBAL__N_121g_number_format_floatE, i64 0, i32 1, i64 0) to i64), void (i8*)* nonnull @_ZN4base12LazyInstanceINS_12_GLOBAL__N_119NumberFormatWrapperENS_8internal34DestructorAtExitLazyInstanceTraitsIS2_EEE6OnExitEPv, i8* bitcast (%"class.base::LazyInstance"* @_ZN4base12_GLOBAL__N_121g_number_format_floatE to i8*)) #8
  br label %24

22:                                               ; preds = %9
  %23 = load atomic i64, i64* getelementptr inbounds (%"class.base::LazyInstance", %"class.base::LazyInstance"* @_ZN4base12_GLOBAL__N_121g_number_format_floatE, i64 0, i32 0) acquire, align 8
  br label %24

24:                                               ; preds = %3, %21, %22
  %25 = phi i64 [ %7, %3 ], [ ptrtoint (i8* getelementptr inbounds (%"class.base::LazyInstance", %"class.base::LazyInstance"* @_ZN4base12_GLOBAL__N_121g_number_format_floatE, i64 0, i32 1, i64 0) to i64), %21 ], [ %23, %22 ]
  %26 = inttoptr i64 %25 to %"struct.base::(anonymous namespace)::NumberFormatWrapper"*
  %27 = getelementptr inbounds %"struct.base::(anonymous namespace)::NumberFormatWrapper", %"struct.base::(anonymous namespace)::NumberFormatWrapper"* %26, i64 0, i32 0, i32 0, i32 0, i32 0
  %28 = load %"class.icu_69::NumberFormat"*, %"class.icu_69::NumberFormat"** %27, align 8
  %29 = icmp eq %"class.icu_69::NumberFormat"* %28, null
  br i1 %29, label %30, label %48

30:                                               ; preds = %24
  %31 = bitcast %"class.std::__1::basic_string.4"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %31) #8
  call void (%"class.std::__1::basic_string.4"*, i8*, ...) @_ZN4base12StringPrintfEPKcz(%"class.std::__1::basic_string.4"* nonnull sret %5, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.1, i64 0, i64 0), double %1) #8
  %32 = bitcast %"class.std::__1::basic_string.4"* %5 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %33 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %32, i64 0, i32 1, i32 0
  %34 = load i8, i8* %33, align 1
  %35 = icmp slt i8 %34, 0
  %36 = getelementptr inbounds %"class.std::__1::basic_string.4", %"class.std::__1::basic_string.4"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %37 = load i8*, i8** %36, align 8
  %38 = select i1 %35, i8* %37, i8* %31
  %39 = getelementptr inbounds %"class.std::__1::basic_string.4", %"class.std::__1::basic_string.4"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %40 = load i64, i64* %39, align 8
  %41 = zext i8 %34 to i64
  %42 = select i1 %35, i64 %40, i64 %41
  call void @_ZN4base12ASCIIToUTF16ENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.std::__1::basic_string"* sret %0, i8* %38, i64 %42) #8
  %43 = load i8, i8* %33, align 1
  %44 = icmp slt i8 %43, 0
  br i1 %44, label %45, label %47

45:                                               ; preds = %30
  %46 = load i8*, i8** %36, align 8
  call void @_ZdlPv(i8* %46) #9
  br label %47

47:                                               ; preds = %30, %45
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %31) #8
  br label %256

48:                                               ; preds = %24
  %49 = bitcast %"class.icu_69::NumberFormat"* %28 to void (%"class.icu_69::NumberFormat"*, i32)***
  %50 = load void (%"class.icu_69::NumberFormat"*, i32)**, void (%"class.icu_69::NumberFormat"*, i32)*** %49, align 8
  %51 = getelementptr inbounds void (%"class.icu_69::NumberFormat"*, i32)*, void (%"class.icu_69::NumberFormat"*, i32)** %50, i64 29
  %52 = load void (%"class.icu_69::NumberFormat"*, i32)*, void (%"class.icu_69::NumberFormat"*, i32)** %51, align 8
  call void %52(%"class.icu_69::NumberFormat"* nonnull %28, i32 %2) #8
  %53 = load void (%"class.icu_69::NumberFormat"*, i32)**, void (%"class.icu_69::NumberFormat"*, i32)*** %49, align 8
  %54 = getelementptr inbounds void (%"class.icu_69::NumberFormat"*, i32)*, void (%"class.icu_69::NumberFormat"*, i32)** %53, i64 30
  %55 = load void (%"class.icu_69::NumberFormat"*, i32)*, void (%"class.icu_69::NumberFormat"*, i32)** %54, align 8
  call void %55(%"class.icu_69::NumberFormat"* nonnull %28, i32 %2) #8
  %56 = bitcast %"class.icu_69::UnicodeString"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %56) #8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %56, i8 -86, i64 64, i1 false)
  %57 = getelementptr inbounds %"class.icu_69::UnicodeString", %"class.icu_69::UnicodeString"* %6, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [13 x i8*] }, { [13 x i8*] }* @_ZTVN6icu_6913UnicodeStringE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %57, align 8
  %58 = getelementptr inbounds %"class.icu_69::UnicodeString", %"class.icu_69::UnicodeString"* %6, i64 0, i32 1, i32 0, i32 0
  store i16 2, i16* %58, align 8
  %59 = call dereferenceable(64) %"class.icu_69::UnicodeString"* @_ZNK6icu_6912NumberFormat6formatEdRNS_13UnicodeStringE(%"class.icu_69::NumberFormat"* nonnull %28, double %1, %"class.icu_69::UnicodeString"* nonnull dereferenceable(64) %6) #8
  %60 = getelementptr inbounds %"class.icu_69::UnicodeString", %"class.icu_69::UnicodeString"* %6, i64 0, i32 1
  %61 = getelementptr inbounds %"union.icu_69::UnicodeString::StackBufferOrFields", %"union.icu_69::UnicodeString::StackBufferOrFields"* %60, i64 0, i32 0, i32 0
  %62 = load i16, i16* %61, align 8, !noalias !17
  %63 = sext i16 %62 to i32
  %64 = and i32 %63, 17
  %65 = icmp eq i32 %64, 0
  br i1 %65, label %66, label %75

66:                                               ; preds = %48
  %67 = and i32 %63, 2
  %68 = icmp eq i32 %67, 0
  br i1 %68, label %72, label %69

69:                                               ; preds = %66
  %70 = bitcast %"union.icu_69::UnicodeString::StackBufferOrFields"* %60 to %struct.anon.13*
  %71 = getelementptr inbounds %struct.anon.13, %struct.anon.13* %70, i64 0, i32 1, i64 0
  br label %75

72:                                               ; preds = %66
  %73 = getelementptr inbounds %"class.icu_69::UnicodeString", %"class.icu_69::UnicodeString"* %6, i64 0, i32 1, i32 0, i32 3
  %74 = load i16*, i16** %73, align 8, !noalias !17
  br label %75

75:                                               ; preds = %72, %69, %48
  %76 = phi i16* [ %71, %69 ], [ %74, %72 ], [ null, %48 ]
  call void asm sideeffect "", "rm,~{memory},~{dirflag},~{fpsr},~{flags}"(i16* %76) #8, !noalias !17, !srcloc !5
  %77 = load i16, i16* %58, align 8, !noalias !17
  %78 = icmp slt i16 %77, 0
  %79 = lshr i16 %77, 5
  %80 = zext i16 %79 to i32
  %81 = getelementptr inbounds %"class.icu_69::UnicodeString", %"class.icu_69::UnicodeString"* %6, i64 0, i32 1, i32 0, i32 1
  %82 = load i32, i32* %81, align 4, !noalias !17
  %83 = select i1 %78, i32 %82, i32 %80
  %84 = sext i32 %83 to i64
  %85 = icmp slt i32 %83, 0
  br i1 %85, label %86, label %88

86:                                               ; preds = %75
  %87 = bitcast %"class.std::__1::basic_string"* %0 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* %87) #10
  unreachable

88:                                               ; preds = %75
  %89 = icmp ult i32 %83, 11
  br i1 %89, label %103, label %90

90:                                               ; preds = %88
  %91 = add nuw nsw i64 %84, 8
  %92 = and i64 %91, -8
  %93 = icmp slt i64 %92, 0
  br i1 %93, label %94, label %95

94:                                               ; preds = %90
  call void @abort() #10
  unreachable

95:                                               ; preds = %90
  %96 = shl nsw i64 %92, 1
  %97 = call i8* @_Znwm(i64 %96) #9
  %98 = bitcast i8* %97 to i16*
  %99 = bitcast %"class.std::__1::basic_string"* %0 to i8**
  store i8* %97, i8** %99, align 8, !alias.scope !17
  %100 = or i64 %92, -9223372036854775808
  %101 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %100, i64* %101, align 8, !alias.scope !17
  %102 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %84, i64* %102, align 8, !alias.scope !17
  br label %109

103:                                              ; preds = %88
  %104 = trunc i32 %83 to i8
  %105 = bitcast %"class.std::__1::basic_string"* %0 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %106 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %105, i64 0, i32 1, i32 1
  store i8 %104, i8* %106, align 1, !alias.scope !17
  %107 = bitcast %"class.std::__1::basic_string"* %0 to i16*
  %108 = icmp eq i32 %83, 0
  br i1 %108, label %253, label %109

109:                                              ; preds = %103, %95
  %110 = phi i16* [ %98, %95 ], [ %107, %103 ]
  %111 = icmp ult i32 %83, 16
  br i1 %111, label %200, label %112

112:                                              ; preds = %109
  %113 = getelementptr i16, i16* %110, i64 %84
  %114 = getelementptr i16, i16* %76, i64 %84
  %115 = icmp ult i16* %110, %114
  %116 = icmp ult i16* %76, %113
  %117 = and i1 %115, %116
  br i1 %117, label %200, label %118

118:                                              ; preds = %112
  %119 = and i64 %84, -16
  %120 = sub nsw i64 %84, %119
  %121 = getelementptr i16, i16* %76, i64 %119
  %122 = getelementptr i16, i16* %110, i64 %119
  %123 = add nsw i64 %119, -16
  %124 = lshr exact i64 %123, 4
  %125 = add nuw nsw i64 %124, 1
  %126 = and i64 %125, 3
  %127 = icmp ult i64 %123, 48
  br i1 %127, label %179, label %128

128:                                              ; preds = %118
  %129 = sub nsw i64 %125, %126
  br label %130

130:                                              ; preds = %130, %128
  %131 = phi i64 [ 0, %128 ], [ %176, %130 ]
  %132 = phi i64 [ %129, %128 ], [ %177, %130 ]
  %133 = getelementptr i16, i16* %76, i64 %131
  %134 = getelementptr i16, i16* %110, i64 %131
  %135 = bitcast i16* %133 to <8 x i16>*
  %136 = load <8 x i16>, <8 x i16>* %135, align 2, !alias.scope !20
  %137 = getelementptr i16, i16* %133, i64 8
  %138 = bitcast i16* %137 to <8 x i16>*
  %139 = load <8 x i16>, <8 x i16>* %138, align 2, !alias.scope !20
  %140 = bitcast i16* %134 to <8 x i16>*
  store <8 x i16> %136, <8 x i16>* %140, align 2, !alias.scope !23, !noalias !20
  %141 = getelementptr i16, i16* %134, i64 8
  %142 = bitcast i16* %141 to <8 x i16>*
  store <8 x i16> %139, <8 x i16>* %142, align 2, !alias.scope !23, !noalias !20
  %143 = or i64 %131, 16
  %144 = getelementptr i16, i16* %76, i64 %143
  %145 = getelementptr i16, i16* %110, i64 %143
  %146 = bitcast i16* %144 to <8 x i16>*
  %147 = load <8 x i16>, <8 x i16>* %146, align 2, !alias.scope !20
  %148 = getelementptr i16, i16* %144, i64 8
  %149 = bitcast i16* %148 to <8 x i16>*
  %150 = load <8 x i16>, <8 x i16>* %149, align 2, !alias.scope !20
  %151 = bitcast i16* %145 to <8 x i16>*
  store <8 x i16> %147, <8 x i16>* %151, align 2, !alias.scope !23, !noalias !20
  %152 = getelementptr i16, i16* %145, i64 8
  %153 = bitcast i16* %152 to <8 x i16>*
  store <8 x i16> %150, <8 x i16>* %153, align 2, !alias.scope !23, !noalias !20
  %154 = or i64 %131, 32
  %155 = getelementptr i16, i16* %76, i64 %154
  %156 = getelementptr i16, i16* %110, i64 %154
  %157 = bitcast i16* %155 to <8 x i16>*
  %158 = load <8 x i16>, <8 x i16>* %157, align 2, !alias.scope !20
  %159 = getelementptr i16, i16* %155, i64 8
  %160 = bitcast i16* %159 to <8 x i16>*
  %161 = load <8 x i16>, <8 x i16>* %160, align 2, !alias.scope !20
  %162 = bitcast i16* %156 to <8 x i16>*
  store <8 x i16> %158, <8 x i16>* %162, align 2, !alias.scope !23, !noalias !20
  %163 = getelementptr i16, i16* %156, i64 8
  %164 = bitcast i16* %163 to <8 x i16>*
  store <8 x i16> %161, <8 x i16>* %164, align 2, !alias.scope !23, !noalias !20
  %165 = or i64 %131, 48
  %166 = getelementptr i16, i16* %76, i64 %165
  %167 = getelementptr i16, i16* %110, i64 %165
  %168 = bitcast i16* %166 to <8 x i16>*
  %169 = load <8 x i16>, <8 x i16>* %168, align 2, !alias.scope !20
  %170 = getelementptr i16, i16* %166, i64 8
  %171 = bitcast i16* %170 to <8 x i16>*
  %172 = load <8 x i16>, <8 x i16>* %171, align 2, !alias.scope !20
  %173 = bitcast i16* %167 to <8 x i16>*
  store <8 x i16> %169, <8 x i16>* %173, align 2, !alias.scope !23, !noalias !20
  %174 = getelementptr i16, i16* %167, i64 8
  %175 = bitcast i16* %174 to <8 x i16>*
  store <8 x i16> %172, <8 x i16>* %175, align 2, !alias.scope !23, !noalias !20
  %176 = add i64 %131, 64
  %177 = add i64 %132, -4
  %178 = icmp eq i64 %177, 0
  br i1 %178, label %179, label %130, !llvm.loop !25

179:                                              ; preds = %130, %118
  %180 = phi i64 [ 0, %118 ], [ %176, %130 ]
  %181 = icmp eq i64 %126, 0
  br i1 %181, label %198, label %182

182:                                              ; preds = %179, %182
  %183 = phi i64 [ %195, %182 ], [ %180, %179 ]
  %184 = phi i64 [ %196, %182 ], [ %126, %179 ]
  %185 = getelementptr i16, i16* %76, i64 %183
  %186 = getelementptr i16, i16* %110, i64 %183
  %187 = bitcast i16* %185 to <8 x i16>*
  %188 = load <8 x i16>, <8 x i16>* %187, align 2, !alias.scope !20
  %189 = getelementptr i16, i16* %185, i64 8
  %190 = bitcast i16* %189 to <8 x i16>*
  %191 = load <8 x i16>, <8 x i16>* %190, align 2, !alias.scope !20
  %192 = bitcast i16* %186 to <8 x i16>*
  store <8 x i16> %188, <8 x i16>* %192, align 2, !alias.scope !23, !noalias !20
  %193 = getelementptr i16, i16* %186, i64 8
  %194 = bitcast i16* %193 to <8 x i16>*
  store <8 x i16> %191, <8 x i16>* %194, align 2, !alias.scope !23, !noalias !20
  %195 = add i64 %183, 16
  %196 = add i64 %184, -1
  %197 = icmp eq i64 %196, 0
  br i1 %197, label %198, label %182, !llvm.loop !26

198:                                              ; preds = %182, %179
  %199 = icmp eq i64 %119, %84
  br i1 %199, label %253, label %200

200:                                              ; preds = %198, %112, %109
  %201 = phi i64 [ %84, %112 ], [ %84, %109 ], [ %120, %198 ]
  %202 = phi i16* [ %76, %112 ], [ %76, %109 ], [ %121, %198 ]
  %203 = phi i16* [ %110, %112 ], [ %110, %109 ], [ %122, %198 ]
  %204 = add nsw i64 %201, -1
  %205 = and i64 %201, 7
  %206 = icmp eq i64 %205, 0
  br i1 %206, label %218, label %207

207:                                              ; preds = %200, %207
  %208 = phi i64 [ %213, %207 ], [ %201, %200 ]
  %209 = phi i16* [ %215, %207 ], [ %202, %200 ]
  %210 = phi i16* [ %214, %207 ], [ %203, %200 ]
  %211 = phi i64 [ %216, %207 ], [ %205, %200 ]
  %212 = load i16, i16* %209, align 2
  store i16 %212, i16* %210, align 2
  %213 = add i64 %208, -1
  %214 = getelementptr inbounds i16, i16* %210, i64 1
  %215 = getelementptr inbounds i16, i16* %209, i64 1
  %216 = add i64 %211, -1
  %217 = icmp eq i64 %216, 0
  br i1 %217, label %218, label %207, !llvm.loop !27

218:                                              ; preds = %207, %200
  %219 = phi i64 [ %201, %200 ], [ %213, %207 ]
  %220 = phi i16* [ %202, %200 ], [ %215, %207 ]
  %221 = phi i16* [ %203, %200 ], [ %214, %207 ]
  %222 = icmp ult i64 %204, 7
  br i1 %222, label %253, label %223

223:                                              ; preds = %218, %223
  %224 = phi i64 [ %249, %223 ], [ %219, %218 ]
  %225 = phi i16* [ %251, %223 ], [ %220, %218 ]
  %226 = phi i16* [ %250, %223 ], [ %221, %218 ]
  %227 = load i16, i16* %225, align 2
  store i16 %227, i16* %226, align 2
  %228 = getelementptr inbounds i16, i16* %226, i64 1
  %229 = getelementptr inbounds i16, i16* %225, i64 1
  %230 = load i16, i16* %229, align 2
  store i16 %230, i16* %228, align 2
  %231 = getelementptr inbounds i16, i16* %226, i64 2
  %232 = getelementptr inbounds i16, i16* %225, i64 2
  %233 = load i16, i16* %232, align 2
  store i16 %233, i16* %231, align 2
  %234 = getelementptr inbounds i16, i16* %226, i64 3
  %235 = getelementptr inbounds i16, i16* %225, i64 3
  %236 = load i16, i16* %235, align 2
  store i16 %236, i16* %234, align 2
  %237 = getelementptr inbounds i16, i16* %226, i64 4
  %238 = getelementptr inbounds i16, i16* %225, i64 4
  %239 = load i16, i16* %238, align 2
  store i16 %239, i16* %237, align 2
  %240 = getelementptr inbounds i16, i16* %226, i64 5
  %241 = getelementptr inbounds i16, i16* %225, i64 5
  %242 = load i16, i16* %241, align 2
  store i16 %242, i16* %240, align 2
  %243 = getelementptr inbounds i16, i16* %226, i64 6
  %244 = getelementptr inbounds i16, i16* %225, i64 6
  %245 = load i16, i16* %244, align 2
  store i16 %245, i16* %243, align 2
  %246 = getelementptr inbounds i16, i16* %226, i64 7
  %247 = getelementptr inbounds i16, i16* %225, i64 7
  %248 = load i16, i16* %247, align 2
  store i16 %248, i16* %246, align 2
  %249 = add i64 %224, -8
  %250 = getelementptr inbounds i16, i16* %226, i64 8
  %251 = getelementptr inbounds i16, i16* %225, i64 8
  %252 = icmp eq i64 %249, 0
  br i1 %252, label %253, label %223, !llvm.loop !28

253:                                              ; preds = %218, %223, %198, %103
  %254 = phi i16* [ %107, %103 ], [ %110, %198 ], [ %110, %223 ], [ %110, %218 ]
  %255 = getelementptr inbounds i16, i16* %254, i64 %84
  store i16 0, i16* %255, align 2
  call void @_ZN6icu_6913UnicodeStringD1Ev(%"class.icu_69::UnicodeString"* nonnull %6) #8
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %56) #8
  br label %256

256:                                              ; preds = %253, %47
  ret void
}

declare dereferenceable(64) %"class.icu_69::UnicodeString"* @_ZNK6icu_6912NumberFormat6formatEdRNS_13UnicodeStringE(%"class.icu_69::NumberFormat"*, double, %"class.icu_69::UnicodeString"* dereferenceable(64)) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4base13FormatPercentEi(%"class.std::__1::basic_string"* noalias sret, i32) local_unnamed_addr #0 {
  %3 = alloca %"class.base::i18n::internal::MessageArg", align 8
  %4 = alloca %"class.base::i18n::internal::MessageArg", align 8
  %5 = alloca %"class.base::i18n::internal::MessageArg", align 8
  %6 = alloca %"class.base::i18n::internal::MessageArg", align 8
  %7 = alloca %"class.base::i18n::internal::MessageArg", align 8
  %8 = alloca %"class.base::i18n::internal::MessageArg", align 8
  %9 = alloca %"class.base::i18n::internal::MessageArg", align 8
  %10 = bitcast %"class.base::i18n::internal::MessageArg"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10) #8
  %11 = sitofp i32 %1 to double
  %12 = fdiv double %11, 1.000000e+02
  call void @_ZN4base4i18n8internal10MessageArgC1Ed(%"class.base::i18n::internal::MessageArg"* nonnull %3, double %12) #8
  %13 = bitcast %"class.base::i18n::internal::MessageArg"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %13) #8
  call void @_ZN4base4i18n8internal10MessageArgC1Ev(%"class.base::i18n::internal::MessageArg"* nonnull %4) #8
  %14 = bitcast %"class.base::i18n::internal::MessageArg"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %14) #8
  call void @_ZN4base4i18n8internal10MessageArgC1Ev(%"class.base::i18n::internal::MessageArg"* nonnull %5) #8
  %15 = bitcast %"class.base::i18n::internal::MessageArg"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %15) #8
  call void @_ZN4base4i18n8internal10MessageArgC1Ev(%"class.base::i18n::internal::MessageArg"* nonnull %6) #8
  %16 = bitcast %"class.base::i18n::internal::MessageArg"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %16) #8
  call void @_ZN4base4i18n8internal10MessageArgC1Ev(%"class.base::i18n::internal::MessageArg"* nonnull %7) #8
  %17 = bitcast %"class.base::i18n::internal::MessageArg"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #8
  call void @_ZN4base4i18n8internal10MessageArgC1Ev(%"class.base::i18n::internal::MessageArg"* nonnull %8) #8
  %18 = bitcast %"class.base::i18n::internal::MessageArg"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %18) #8
  call void @_ZN4base4i18n8internal10MessageArgC1Ev(%"class.base::i18n::internal::MessageArg"* nonnull %9) #8
  call void @_ZN4base4i18n16MessageFormatter22FormatWithNumberedArgsENS_16BasicStringPieceIDsNSt3__111char_traitsIDsEEEERKNS0_8internal10MessageArgESA_SA_SA_SA_SA_SA_(%"class.std::__1::basic_string"* sret %0, i16* getelementptr inbounds ([19 x i16], [19 x i16]* @.str.2, i64 0, i64 0), i64 18, %"class.base::i18n::internal::MessageArg"* nonnull dereferenceable(8) %3, %"class.base::i18n::internal::MessageArg"* nonnull dereferenceable(8) %4, %"class.base::i18n::internal::MessageArg"* nonnull dereferenceable(8) %5, %"class.base::i18n::internal::MessageArg"* nonnull dereferenceable(8) %6, %"class.base::i18n::internal::MessageArg"* nonnull dereferenceable(8) %7, %"class.base::i18n::internal::MessageArg"* nonnull dereferenceable(8) %8, %"class.base::i18n::internal::MessageArg"* nonnull dereferenceable(8) %9) #8
  call void @_ZN4base4i18n8internal10MessageArgD1Ev(%"class.base::i18n::internal::MessageArg"* nonnull %9) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18) #8
  call void @_ZN4base4i18n8internal10MessageArgD1Ev(%"class.base::i18n::internal::MessageArg"* nonnull %8) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #8
  call void @_ZN4base4i18n8internal10MessageArgD1Ev(%"class.base::i18n::internal::MessageArg"* nonnull %7) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16) #8
  call void @_ZN4base4i18n8internal10MessageArgD1Ev(%"class.base::i18n::internal::MessageArg"* nonnull %6) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %15) #8
  call void @_ZN4base4i18n8internal10MessageArgD1Ev(%"class.base::i18n::internal::MessageArg"* nonnull %5) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %14) #8
  call void @_ZN4base4i18n8internal10MessageArgD1Ev(%"class.base::i18n::internal::MessageArg"* nonnull %4) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %13) #8
  call void @_ZN4base4i18n8internal10MessageArgD1Ev(%"class.base::i18n::internal::MessageArg"* nonnull %3) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10) #8
  ret void
}

declare void @_ZN4base4i18n16MessageFormatter22FormatWithNumberedArgsENS_16BasicStringPieceIDsNSt3__111char_traitsIDsEEEERKNS0_8internal10MessageArgESA_SA_SA_SA_SA_SA_(%"class.std::__1::basic_string"* sret, i16*, i64, %"class.base::i18n::internal::MessageArg"* dereferenceable(8), %"class.base::i18n::internal::MessageArg"* dereferenceable(8), %"class.base::i18n::internal::MessageArg"* dereferenceable(8), %"class.base::i18n::internal::MessageArg"* dereferenceable(8), %"class.base::i18n::internal::MessageArg"* dereferenceable(8), %"class.base::i18n::internal::MessageArg"* dereferenceable(8), %"class.base::i18n::internal::MessageArg"* dereferenceable(8)) local_unnamed_addr #2

declare void @_ZN4base4i18n8internal10MessageArgC1Ed(%"class.base::i18n::internal::MessageArg"*, double) unnamed_addr #2

declare void @_ZN4base4i18n8internal10MessageArgC1Ev(%"class.base::i18n::internal::MessageArg"*) unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN4base4i18n8internal10MessageArgD1Ev(%"class.base::i18n::internal::MessageArg"*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4base25ResetFormattersForTestingEv() local_unnamed_addr #0 {
  %1 = alloca i32, align 4
  %2 = alloca i32, align 4
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = load atomic i64, i64* getelementptr inbounds (%"class.base::LazyInstance", %"class.base::LazyInstance"* @_ZN4base12_GLOBAL__N_119g_number_format_intE, i64 0, i32 0) acquire, align 8
  %6 = icmp ugt i64 %5, 1
  br i1 %6, label %22, label %7

7:                                                ; preds = %0
  %8 = tail call zeroext i1 @_ZN4base8internal17NeedsLazyInstanceEPl(i64* getelementptr inbounds (%"class.base::LazyInstance", %"class.base::LazyInstance"* @_ZN4base12_GLOBAL__N_119g_number_format_intE, i64 0, i32 0)) #8
  br i1 %8, label %9, label %20

9:                                                ; preds = %7
  store i64 0, i64* bitcast (i8* getelementptr inbounds (%"class.base::LazyInstance", %"class.base::LazyInstance"* @_ZN4base12_GLOBAL__N_119g_number_format_intE, i64 0, i32 1, i64 0) to i64*), align 8
  %10 = bitcast i32* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %10) #8
  store i32 0, i32* %4, align 4
  %11 = call %"class.icu_69::NumberFormat"* @_ZN6icu_6912NumberFormat14createInstanceER10UErrorCode(i32* nonnull dereferenceable(4) %4) #8
  %12 = load %"class.icu_69::NumberFormat"*, %"class.icu_69::NumberFormat"** bitcast (i8* getelementptr inbounds (%"class.base::LazyInstance", %"class.base::LazyInstance"* @_ZN4base12_GLOBAL__N_119g_number_format_intE, i64 0, i32 1, i64 0) to %"class.icu_69::NumberFormat"**), align 8
  store %"class.icu_69::NumberFormat"* %11, %"class.icu_69::NumberFormat"** bitcast (i8* getelementptr inbounds (%"class.base::LazyInstance", %"class.base::LazyInstance"* @_ZN4base12_GLOBAL__N_119g_number_format_intE, i64 0, i32 1, i64 0) to %"class.icu_69::NumberFormat"**), align 8
  %13 = icmp eq %"class.icu_69::NumberFormat"* %12, null
  br i1 %13, label %19, label %14

14:                                               ; preds = %9
  %15 = bitcast %"class.icu_69::NumberFormat"* %12 to void (%"class.icu_69::NumberFormat"*)***
  %16 = load void (%"class.icu_69::NumberFormat"*)**, void (%"class.icu_69::NumberFormat"*)*** %15, align 8
  %17 = getelementptr inbounds void (%"class.icu_69::NumberFormat"*)*, void (%"class.icu_69::NumberFormat"*)** %16, i64 1
  %18 = load void (%"class.icu_69::NumberFormat"*)*, void (%"class.icu_69::NumberFormat"*)** %17, align 8
  call void %18(%"class.icu_69::NumberFormat"* nonnull %12) #8
  br label %19

19:                                               ; preds = %14, %9
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %10) #8
  call void @_ZN4base8internal20CompleteLazyInstanceEPllPFvPvES2_(i64* getelementptr inbounds (%"class.base::LazyInstance", %"class.base::LazyInstance"* @_ZN4base12_GLOBAL__N_119g_number_format_intE, i64 0, i32 0), i64 ptrtoint (i8* getelementptr inbounds (%"class.base::LazyInstance", %"class.base::LazyInstance"* @_ZN4base12_GLOBAL__N_119g_number_format_intE, i64 0, i32 1, i64 0) to i64), void (i8*)* nonnull @_ZN4base12LazyInstanceINS_12_GLOBAL__N_119NumberFormatWrapperENS_8internal34DestructorAtExitLazyInstanceTraitsIS2_EEE6OnExitEPv, i8* bitcast (%"class.base::LazyInstance"* @_ZN4base12_GLOBAL__N_119g_number_format_intE to i8*)) #8
  br label %22

20:                                               ; preds = %7
  %21 = load atomic i64, i64* getelementptr inbounds (%"class.base::LazyInstance", %"class.base::LazyInstance"* @_ZN4base12_GLOBAL__N_119g_number_format_intE, i64 0, i32 0) acquire, align 8
  br label %22

22:                                               ; preds = %0, %19, %20
  %23 = phi i64 [ %5, %0 ], [ ptrtoint (i8* getelementptr inbounds (%"class.base::LazyInstance", %"class.base::LazyInstance"* @_ZN4base12_GLOBAL__N_119g_number_format_intE, i64 0, i32 1, i64 0) to i64), %19 ], [ %21, %20 ]
  %24 = inttoptr i64 %23 to %"struct.base::(anonymous namespace)::NumberFormatWrapper"*
  %25 = bitcast i32* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %25) #8
  store i32 0, i32* %3, align 4
  %26 = call %"class.icu_69::NumberFormat"* @_ZN6icu_6912NumberFormat14createInstanceER10UErrorCode(i32* nonnull dereferenceable(4) %3) #8
  %27 = getelementptr inbounds %"struct.base::(anonymous namespace)::NumberFormatWrapper", %"struct.base::(anonymous namespace)::NumberFormatWrapper"* %24, i64 0, i32 0, i32 0, i32 0, i32 0
  %28 = load %"class.icu_69::NumberFormat"*, %"class.icu_69::NumberFormat"** %27, align 8
  store %"class.icu_69::NumberFormat"* %26, %"class.icu_69::NumberFormat"** %27, align 8
  %29 = icmp eq %"class.icu_69::NumberFormat"* %28, null
  br i1 %29, label %35, label %30

30:                                               ; preds = %22
  %31 = bitcast %"class.icu_69::NumberFormat"* %28 to void (%"class.icu_69::NumberFormat"*)***
  %32 = load void (%"class.icu_69::NumberFormat"*)**, void (%"class.icu_69::NumberFormat"*)*** %31, align 8
  %33 = getelementptr inbounds void (%"class.icu_69::NumberFormat"*)*, void (%"class.icu_69::NumberFormat"*)** %32, i64 1
  %34 = load void (%"class.icu_69::NumberFormat"*)*, void (%"class.icu_69::NumberFormat"*)** %33, align 8
  call void %34(%"class.icu_69::NumberFormat"* nonnull %28) #8
  br label %35

35:                                               ; preds = %22, %30
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %25) #8
  %36 = load atomic i64, i64* getelementptr inbounds (%"class.base::LazyInstance", %"class.base::LazyInstance"* @_ZN4base12_GLOBAL__N_121g_number_format_floatE, i64 0, i32 0) acquire, align 8
  %37 = icmp ugt i64 %36, 1
  br i1 %37, label %53, label %38

38:                                               ; preds = %35
  %39 = call zeroext i1 @_ZN4base8internal17NeedsLazyInstanceEPl(i64* getelementptr inbounds (%"class.base::LazyInstance", %"class.base::LazyInstance"* @_ZN4base12_GLOBAL__N_121g_number_format_floatE, i64 0, i32 0)) #8
  br i1 %39, label %40, label %51

40:                                               ; preds = %38
  store i64 0, i64* bitcast (i8* getelementptr inbounds (%"class.base::LazyInstance", %"class.base::LazyInstance"* @_ZN4base12_GLOBAL__N_121g_number_format_floatE, i64 0, i32 1, i64 0) to i64*), align 8
  %41 = bitcast i32* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %41) #8
  store i32 0, i32* %2, align 4
  %42 = call %"class.icu_69::NumberFormat"* @_ZN6icu_6912NumberFormat14createInstanceER10UErrorCode(i32* nonnull dereferenceable(4) %2) #8
  %43 = load %"class.icu_69::NumberFormat"*, %"class.icu_69::NumberFormat"** bitcast (i8* getelementptr inbounds (%"class.base::LazyInstance", %"class.base::LazyInstance"* @_ZN4base12_GLOBAL__N_121g_number_format_floatE, i64 0, i32 1, i64 0) to %"class.icu_69::NumberFormat"**), align 8
  store %"class.icu_69::NumberFormat"* %42, %"class.icu_69::NumberFormat"** bitcast (i8* getelementptr inbounds (%"class.base::LazyInstance", %"class.base::LazyInstance"* @_ZN4base12_GLOBAL__N_121g_number_format_floatE, i64 0, i32 1, i64 0) to %"class.icu_69::NumberFormat"**), align 8
  %44 = icmp eq %"class.icu_69::NumberFormat"* %43, null
  br i1 %44, label %50, label %45

45:                                               ; preds = %40
  %46 = bitcast %"class.icu_69::NumberFormat"* %43 to void (%"class.icu_69::NumberFormat"*)***
  %47 = load void (%"class.icu_69::NumberFormat"*)**, void (%"class.icu_69::NumberFormat"*)*** %46, align 8
  %48 = getelementptr inbounds void (%"class.icu_69::NumberFormat"*)*, void (%"class.icu_69::NumberFormat"*)** %47, i64 1
  %49 = load void (%"class.icu_69::NumberFormat"*)*, void (%"class.icu_69::NumberFormat"*)** %48, align 8
  call void %49(%"class.icu_69::NumberFormat"* nonnull %43) #8
  br label %50

50:                                               ; preds = %45, %40
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %41) #8
  call void @_ZN4base8internal20CompleteLazyInstanceEPllPFvPvES2_(i64* getelementptr inbounds (%"class.base::LazyInstance", %"class.base::LazyInstance"* @_ZN4base12_GLOBAL__N_121g_number_format_floatE, i64 0, i32 0), i64 ptrtoint (i8* getelementptr inbounds (%"class.base::LazyInstance", %"class.base::LazyInstance"* @_ZN4base12_GLOBAL__N_121g_number_format_floatE, i64 0, i32 1, i64 0) to i64), void (i8*)* nonnull @_ZN4base12LazyInstanceINS_12_GLOBAL__N_119NumberFormatWrapperENS_8internal34DestructorAtExitLazyInstanceTraitsIS2_EEE6OnExitEPv, i8* bitcast (%"class.base::LazyInstance"* @_ZN4base12_GLOBAL__N_121g_number_format_floatE to i8*)) #8
  br label %53

51:                                               ; preds = %38
  %52 = load atomic i64, i64* getelementptr inbounds (%"class.base::LazyInstance", %"class.base::LazyInstance"* @_ZN4base12_GLOBAL__N_121g_number_format_floatE, i64 0, i32 0) acquire, align 8
  br label %53

53:                                               ; preds = %35, %50, %51
  %54 = phi i64 [ %36, %35 ], [ ptrtoint (i8* getelementptr inbounds (%"class.base::LazyInstance", %"class.base::LazyInstance"* @_ZN4base12_GLOBAL__N_121g_number_format_floatE, i64 0, i32 1, i64 0) to i64), %50 ], [ %52, %51 ]
  %55 = inttoptr i64 %54 to %"struct.base::(anonymous namespace)::NumberFormatWrapper"*
  %56 = bitcast i32* %1 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %56) #8
  store i32 0, i32* %1, align 4
  %57 = call %"class.icu_69::NumberFormat"* @_ZN6icu_6912NumberFormat14createInstanceER10UErrorCode(i32* nonnull dereferenceable(4) %1) #8
  %58 = getelementptr inbounds %"struct.base::(anonymous namespace)::NumberFormatWrapper", %"struct.base::(anonymous namespace)::NumberFormatWrapper"* %55, i64 0, i32 0, i32 0, i32 0, i32 0
  %59 = load %"class.icu_69::NumberFormat"*, %"class.icu_69::NumberFormat"** %58, align 8
  store %"class.icu_69::NumberFormat"* %57, %"class.icu_69::NumberFormat"** %58, align 8
  %60 = icmp eq %"class.icu_69::NumberFormat"* %59, null
  br i1 %60, label %66, label %61

61:                                               ; preds = %53
  %62 = bitcast %"class.icu_69::NumberFormat"* %59 to void (%"class.icu_69::NumberFormat"*)***
  %63 = load void (%"class.icu_69::NumberFormat"*)**, void (%"class.icu_69::NumberFormat"*)*** %62, align 8
  %64 = getelementptr inbounds void (%"class.icu_69::NumberFormat"*)*, void (%"class.icu_69::NumberFormat"*)** %63, i64 1
  %65 = load void (%"class.icu_69::NumberFormat"*)*, void (%"class.icu_69::NumberFormat"*)** %64, align 8
  call void %65(%"class.icu_69::NumberFormat"* nonnull %59) #8
  br label %66

66:                                               ; preds = %53, %61
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %56) #8
  ret void
}

; Function Attrs: noreturn
declare void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"*) local_unnamed_addr #4

; Function Attrs: noreturn nounwind
declare void @abort() local_unnamed_addr #5

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #6

declare %"class.icu_69::NumberFormat"* @_ZN6icu_6912NumberFormat14createInstanceER10UErrorCode(i32* dereferenceable(4)) local_unnamed_addr #2

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #7

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN4base12LazyInstanceINS_12_GLOBAL__N_119NumberFormatWrapperENS_8internal34DestructorAtExitLazyInstanceTraitsIS2_EEE6OnExitEPv(i8*) #0 align 2 {
  %2 = bitcast i8* %0 to i64*
  %3 = load atomic i64, i64* %2 monotonic, align 8
  %4 = inttoptr i64 %3 to %"struct.base::(anonymous namespace)::NumberFormatWrapper"*
  %5 = getelementptr inbounds %"struct.base::(anonymous namespace)::NumberFormatWrapper", %"struct.base::(anonymous namespace)::NumberFormatWrapper"* %4, i64 0, i32 0, i32 0, i32 0, i32 0
  %6 = load %"class.icu_69::NumberFormat"*, %"class.icu_69::NumberFormat"** %5, align 8
  store %"class.icu_69::NumberFormat"* null, %"class.icu_69::NumberFormat"** %5, align 8
  %7 = icmp eq %"class.icu_69::NumberFormat"* %6, null
  br i1 %7, label %13, label %8

8:                                                ; preds = %1
  %9 = bitcast %"class.icu_69::NumberFormat"* %6 to void (%"class.icu_69::NumberFormat"*)***
  %10 = load void (%"class.icu_69::NumberFormat"*)**, void (%"class.icu_69::NumberFormat"*)*** %9, align 8
  %11 = getelementptr inbounds void (%"class.icu_69::NumberFormat"*)*, void (%"class.icu_69::NumberFormat"*)** %10, i64 1
  %12 = load void (%"class.icu_69::NumberFormat"*)*, void (%"class.icu_69::NumberFormat"*)** %11, align 8
  tail call void %12(%"class.icu_69::NumberFormat"* nonnull %6) #8
  br label %13

13:                                               ; preds = %1, %8
  store atomic volatile i64 0, i64* %2 monotonic, align 8
  ret void
}

declare zeroext i1 @_ZN4base8internal17NeedsLazyInstanceEPl(i64*) local_unnamed_addr #2

declare void @_ZN4base8internal20CompleteLazyInstanceEPllPFvPvES2_(i64*, i64, void (i8*)*, i8*) local_unnamed_addr #2

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nounwind }
attributes #9 = { builtin nounwind }
attributes #10 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!3}
!3 = distinct !{!3, !4, !"_ZN4base4i18n23UnicodeStringToString16ERKN6icu_6913UnicodeStringE: argument 0"}
!4 = distinct !{!4, !"_ZN4base4i18n23UnicodeStringToString16ERKN6icu_6913UnicodeStringE"}
!5 = !{i32 -2143050098}
!6 = !{!7}
!7 = distinct !{!7, !8}
!8 = distinct !{!8, !"LVerDomain"}
!9 = !{!10}
!10 = distinct !{!10, !8}
!11 = distinct !{!11, !12}
!12 = !{!"llvm.loop.isvectorized", i32 1}
!13 = distinct !{!13, !14}
!14 = !{!"llvm.loop.unroll.disable"}
!15 = distinct !{!15, !14}
!16 = distinct !{!16, !12}
!17 = !{!18}
!18 = distinct !{!18, !19, !"_ZN4base4i18n23UnicodeStringToString16ERKN6icu_6913UnicodeStringE: argument 0"}
!19 = distinct !{!19, !"_ZN4base4i18n23UnicodeStringToString16ERKN6icu_6913UnicodeStringE"}
!20 = !{!21}
!21 = distinct !{!21, !22}
!22 = distinct !{!22, !"LVerDomain"}
!23 = !{!24}
!24 = distinct !{!24, !22}
!25 = distinct !{!25, !12}
!26 = distinct !{!26, !14}
!27 = distinct !{!27, !14}
!28 = distinct !{!28, !12}
