; ModuleID = '../../components/viz/common/gpu/vulkan_in_process_context_provider.cc'
source_filename = "../../components/viz/common/gpu/vulkan_in_process_context_provider.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"struct.std::__1::__function::__policy" = type { i8* (i8*)*, void (i8*)*, i8, %"class.std::type_info"* }
%"class.std::type_info" = type { i32 (...)**, i8* }
%"class.viz::VulkanInProcessContextProvider" = type { %"class.viz::VulkanContextProvider.base", %class.sk_sp, %"class.gpu::VulkanImplementation"*, %"class.std::__1::unique_ptr.70", i32, i32, %"class.base::TimeDelta", %"class.base::TimeTicks", %"class.std::__1::unique_ptr.99" }
%"class.viz::VulkanContextProvider.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe" }>
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.0" }
%"struct.std::__1::__atomic_base.0" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%class.sk_sp = type { %class.GrDirectContext* }
%class.GrDirectContext = type { %class.GrRecordingContext, %"class.GrDirectContext::DirectContextID", %"class.std::__1::unique_ptr.27", %"class.std::__1::unique_ptr.33", %class.sk_sp.39, %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.46", i8, i8, %"class.GrContextOptions::PersistentCache"*, %"class.GrContextOptions::ShaderErrorHandler"*, %"class.std::__1::unique_ptr.52", %"class.std::__1::unique_ptr.58", %"class.std::__1::unique_ptr.64" }
%class.GrRecordingContext = type { %class.GrImageContext.base, %"class.GrRecordingContext::Stats", %"class.std::__1::unique_ptr", %"class.GrRecordingContext::OwnedArenas", %"class.std::__1::unique_ptr.15", %"class.std::__1::unique_ptr.21" }
%class.GrImageContext.base = type <{ %class.GrContext_Base, %class.GrSingleOwner }>
%class.GrContext_Base = type { %class.SkRefCnt.base, %class.sk_sp.1 }
%class.SkRefCnt.base = type { %class.SkRefCntBase.base }
%class.SkRefCntBase.base = type <{ i32 (...)**, %"struct.std::__1::atomic" }>
%class.sk_sp.1 = type { %class.GrContextThreadSafeProxy* }
%class.GrContextThreadSafeProxy = type opaque
%class.GrSingleOwner = type { i8 }
%"class.GrRecordingContext::Stats" = type { i8 }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %class.GrAuditTrail* }
%class.GrAuditTrail = type opaque
%"class.GrRecordingContext::OwnedArenas" = type { i8, %"class.std::__1::unique_ptr.3", %"class.std::__1::unique_ptr.9" }
%"class.std::__1::unique_ptr.3" = type { %"class.std::__1::__compressed_pair.4" }
%"class.std::__1::__compressed_pair.4" = type { %"struct.std::__1::__compressed_pair_elem.5" }
%"struct.std::__1::__compressed_pair_elem.5" = type { %class.SkArenaAlloc* }
%class.SkArenaAlloc = type opaque
%"class.std::__1::unique_ptr.9" = type { %"class.std::__1::__compressed_pair.10" }
%"class.std::__1::__compressed_pair.10" = type { %"struct.std::__1::__compressed_pair_elem.11" }
%"struct.std::__1::__compressed_pair_elem.11" = type { %class.GrSubRunAllocator* }
%class.GrSubRunAllocator = type opaque
%"class.std::__1::unique_ptr.15" = type { %"class.std::__1::__compressed_pair.16" }
%"class.std::__1::__compressed_pair.16" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"struct.std::__1::__compressed_pair_elem.17" = type { %class.GrDrawingManager* }
%class.GrDrawingManager = type opaque
%"class.std::__1::unique_ptr.21" = type { %"class.std::__1::__compressed_pair.22" }
%"class.std::__1::__compressed_pair.22" = type { %"struct.std::__1::__compressed_pair_elem.23" }
%"struct.std::__1::__compressed_pair_elem.23" = type { %class.GrProxyProvider* }
%class.GrProxyProvider = type opaque
%"class.GrDirectContext::DirectContextID" = type { i32 }
%"class.std::__1::unique_ptr.27" = type { %"class.std::__1::__compressed_pair.28" }
%"class.std::__1::__compressed_pair.28" = type { %"struct.std::__1::__compressed_pair_elem.29" }
%"struct.std::__1::__compressed_pair_elem.29" = type { %class.SkTaskGroup* }
%class.SkTaskGroup = type opaque
%"class.std::__1::unique_ptr.33" = type { %"class.std::__1::__compressed_pair.34" }
%"class.std::__1::__compressed_pair.34" = type { %"struct.std::__1::__compressed_pair_elem.35" }
%"struct.std::__1::__compressed_pair_elem.35" = type { %class.GrStrikeCache* }
%class.GrStrikeCache = type opaque
%class.sk_sp.39 = type { %class.GrGpu* }
%class.GrGpu = type opaque
%"class.std::__1::unique_ptr.40" = type { %"class.std::__1::__compressed_pair.41" }
%"class.std::__1::__compressed_pair.41" = type { %"struct.std::__1::__compressed_pair_elem.42" }
%"struct.std::__1::__compressed_pair_elem.42" = type { %class.GrResourceCache* }
%class.GrResourceCache = type opaque
%"class.std::__1::unique_ptr.46" = type { %"class.std::__1::__compressed_pair.47" }
%"class.std::__1::__compressed_pair.47" = type { %"struct.std::__1::__compressed_pair_elem.48" }
%"struct.std::__1::__compressed_pair_elem.48" = type { %class.GrResourceProvider* }
%class.GrResourceProvider = type opaque
%"class.GrContextOptions::PersistentCache" = type { i32 (...)** }
%"class.GrContextOptions::ShaderErrorHandler" = type { i32 (...)** }
%"class.std::__1::unique_ptr.52" = type { %"class.std::__1::__compressed_pair.53" }
%"class.std::__1::__compressed_pair.53" = type { %"struct.std::__1::__compressed_pair_elem.54" }
%"struct.std::__1::__compressed_pair_elem.54" = type { %class.GrClientMappedBufferManager* }
%class.GrClientMappedBufferManager = type opaque
%"class.std::__1::unique_ptr.58" = type { %"class.std::__1::__compressed_pair.59" }
%"class.std::__1::__compressed_pair.59" = type { %"struct.std::__1::__compressed_pair_elem.60" }
%"struct.std::__1::__compressed_pair_elem.60" = type { %class.GrAtlasManager* }
%class.GrAtlasManager = type opaque
%"class.std::__1::unique_ptr.64" = type { %"class.std::__1::__compressed_pair.65" }
%"class.std::__1::__compressed_pair.65" = type { %"struct.std::__1::__compressed_pair_elem.66" }
%"struct.std::__1::__compressed_pair_elem.66" = type { %class.GrSmallPathAtlasMgr* }
%class.GrSmallPathAtlasMgr = type opaque
%"class.std::__1::unique_ptr.70" = type { %"class.std::__1::__compressed_pair.71" }
%"class.std::__1::__compressed_pair.71" = type { %"struct.std::__1::__compressed_pair_elem.72" }
%"struct.std::__1::__compressed_pair_elem.72" = type { %"class.gpu::VulkanDeviceQueue"* }
%"class.gpu::VulkanDeviceQueue" = type { %"class.base::internal::flat_tree", %struct.VkPhysicalDevice_T*, %struct.VkPhysicalDeviceProperties, %struct.VkPhysicalDeviceDriverProperties, %struct.VkDevice_T*, %struct.VkDevice_T*, %struct.VkQueue_T*, i32, %struct.VkInstance_T*, %struct.VmaAllocator_T*, %"class.std::__1::unique_ptr.76", %struct.VkPhysicalDeviceFeatures2, i8, %struct.VkPhysicalDeviceProtectedMemoryFeatures }
%"class.base::internal::flat_tree" = type { %"class.std::__1::vector" }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.base::BasicStringPiece"*, %"class.base::BasicStringPiece"*, %"class.std::__1::__compressed_pair.73" }
%"class.base::BasicStringPiece" = type { i8*, i64 }
%"class.std::__1::__compressed_pair.73" = type { %"struct.std::__1::__compressed_pair_elem.74" }
%"struct.std::__1::__compressed_pair_elem.74" = type { %"class.base::BasicStringPiece"* }
%struct.VkPhysicalDevice_T = type opaque
%struct.VkPhysicalDeviceProperties = type { i32, i32, i32, i32, i32, [256 x i8], [16 x i8], %struct.VkPhysicalDeviceLimits, %struct.VkPhysicalDeviceSparseProperties }
%struct.VkPhysicalDeviceLimits = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i64, i64, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [3 x i32], i32, [3 x i32], i32, i32, i32, i32, i32, float, float, i32, [2 x i32], [2 x float], i32, i64, i64, i64, i64, i32, i32, i32, i32, float, float, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, float, i32, i32, i32, i32, [2 x float], [2 x float], float, float, i32, i32, i64, i64, i64 }
%struct.VkPhysicalDeviceSparseProperties = type { i32, i32, i32, i32, i32 }
%struct.VkPhysicalDeviceDriverProperties = type { i32, i8*, i32, [256 x i8], [256 x i8], %struct.VkConformanceVersion }
%struct.VkConformanceVersion = type { i8, i8, i8, i8 }
%struct.VkDevice_T = type opaque
%struct.VkQueue_T = type opaque
%struct.VkInstance_T = type opaque
%struct.VmaAllocator_T = type opaque
%"class.std::__1::unique_ptr.76" = type { %"class.std::__1::__compressed_pair.77" }
%"class.std::__1::__compressed_pair.77" = type { %"struct.std::__1::__compressed_pair_elem.78" }
%"struct.std::__1::__compressed_pair_elem.78" = type { %"class.gpu::VulkanFenceHelper"* }
%"class.gpu::VulkanFenceHelper" = type { %"class.gpu::VulkanDeviceQueue"*, %"class.std::__1::vector.79", i64, i64, %"class.base::circular_deque", %"class.base::WeakPtrFactory" }
%"class.std::__1::vector.79" = type { %"class.std::__1::__vector_base.80" }
%"class.std::__1::__vector_base.80" = type { %"class.base::OnceCallback"*, %"class.base::OnceCallback"*, %"class.std::__1::__compressed_pair.81" }
%"class.base::OnceCallback" = type opaque
%"class.std::__1::__compressed_pair.81" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"struct.std::__1::__compressed_pair_elem.82" = type { %"class.base::OnceCallback"* }
%"class.base::circular_deque" = type { %"class.base::internal::VectorBuffer", i64, i64 }
%"class.base::internal::VectorBuffer" = type { %"struct.gpu::VulkanFenceHelper::TasksForFence"*, i64 }
%"struct.gpu::VulkanFenceHelper::TasksForFence" = type { %struct.VkFence_T*, i64, %"class.std::__1::vector.79" }
%struct.VkFence_T = type opaque
%"class.base::WeakPtrFactory" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.base::internal::WeakPtrFactoryBase" = type { %"class.base::internal::WeakReferenceOwner", i64 }
%"class.base::internal::WeakReferenceOwner" = type { %class.scoped_refptr.86 }
%class.scoped_refptr.86 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.base::internal::WeakReference::Flag" = type <{ %"class.base::RefCountedThreadSafe.87", %"class.base::AtomicFlag", [3 x i8] }>
%"class.base::RefCountedThreadSafe.87" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::AtomicFlag" = type { %"struct.std::__1::atomic.88" }
%"struct.std::__1::atomic.88" = type { %"struct.std::__1::__atomic_base.89" }
%"struct.std::__1::__atomic_base.89" = type { %"struct.std::__1::__atomic_base.90" }
%"struct.std::__1::__atomic_base.90" = type { %"struct.std::__1::__cxx_atomic_impl.91" }
%"struct.std::__1::__cxx_atomic_impl.91" = type { %"struct.std::__1::__cxx_atomic_base_impl.92" }
%"struct.std::__1::__cxx_atomic_base_impl.92" = type { i8 }
%struct.VkPhysicalDeviceFeatures2 = type { i32, i8*, %struct.VkPhysicalDeviceFeatures }
%struct.VkPhysicalDeviceFeatures = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.VkPhysicalDeviceProtectedMemoryFeatures = type { i32, i8*, i32 }
%"class.base::TimeDelta" = type { i64 }
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.std::__1::unique_ptr.99" = type { %"class.std::__1::__compressed_pair.100" }
%"class.std::__1::__compressed_pair.100" = type { %"struct.std::__1::__compressed_pair_elem.101" }
%"struct.std::__1::__compressed_pair_elem.101" = type { %"class.base::MemoryPressureListener"* }
%"class.base::MemoryPressureListener" = type { %"class.base::RepeatingCallback", %"class.base::RepeatingCallback", %"class.base::Location" }
%"class.base::RepeatingCallback" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::internal::CallbackBaseCopyable" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr.102 }
%class.scoped_refptr.102 = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe.103", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe.103" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::Location" = type { i8*, i8*, i32, i8* }
%"class.gpu::VulkanImplementation" = type <{ i32 (...)**, i8, i8, [6 x i8] }>
%"struct.gpu::GPUInfo" = type opaque
%"class.viz::VulkanContextProvider" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe", [4 x i8] }>
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.logging::LogMessage" = type opaque
%"class.gpu::VulkanInstance" = type <{ %"class.gpu::VulkanInfo", %struct.VkInstance_T*, i8, [7 x i8] }>
%"class.gpu::VulkanInfo" = type { i32, i32, %"class.std::__1::vector.114", %"class.std::__1::vector.107", %"class.std::__1::vector.121", %"class.std::__1::vector.128" }
%"class.std::__1::vector.114" = type { %"class.std::__1::__vector_base.115" }
%"class.std::__1::__vector_base.115" = type { %struct.VkExtensionProperties*, %struct.VkExtensionProperties*, %"class.std::__1::__compressed_pair.116" }
%struct.VkExtensionProperties = type { [256 x i8], i32 }
%"class.std::__1::__compressed_pair.116" = type { %"struct.std::__1::__compressed_pair_elem.117" }
%"struct.std::__1::__compressed_pair_elem.117" = type { %struct.VkExtensionProperties* }
%"class.std::__1::vector.107" = type { %"class.std::__1::__vector_base.108" }
%"class.std::__1::__vector_base.108" = type { i8**, i8**, %"class.std::__1::__compressed_pair.109" }
%"class.std::__1::__compressed_pair.109" = type { %"struct.std::__1::__compressed_pair_elem.110" }
%"struct.std::__1::__compressed_pair_elem.110" = type { i8** }
%"class.std::__1::vector.121" = type { %"class.std::__1::__vector_base.122" }
%"class.std::__1::__vector_base.122" = type { %struct.VkLayerProperties*, %struct.VkLayerProperties*, %"class.std::__1::__compressed_pair.123" }
%struct.VkLayerProperties = type { [256 x i8], i32, i32, [256 x i8] }
%"class.std::__1::__compressed_pair.123" = type { %"struct.std::__1::__compressed_pair_elem.124" }
%"struct.std::__1::__compressed_pair_elem.124" = type { %struct.VkLayerProperties* }
%"class.std::__1::vector.128" = type { %"class.std::__1::__vector_base.129" }
%"class.std::__1::__vector_base.129" = type { %"class.gpu::VulkanPhysicalDeviceInfo"*, %"class.gpu::VulkanPhysicalDeviceInfo"*, %"class.std::__1::__compressed_pair.137" }
%"class.gpu::VulkanPhysicalDeviceInfo" = type { %struct.VkPhysicalDevice_T*, %struct.VkPhysicalDeviceProperties, %struct.VkPhysicalDeviceDriverProperties, %"class.std::__1::vector.114", %struct.VkPhysicalDeviceFeatures, i8, i8, %"class.std::__1::vector.130" }
%"class.std::__1::vector.130" = type { %"class.std::__1::__vector_base.131" }
%"class.std::__1::__vector_base.131" = type { %struct.VkQueueFamilyProperties*, %struct.VkQueueFamilyProperties*, %"class.std::__1::__compressed_pair.132" }
%struct.VkQueueFamilyProperties = type { i32, i32, i32, %struct.VkExtent3D }
%struct.VkExtent3D = type { i32, i32, i32 }
%"class.std::__1::__compressed_pair.132" = type { %"struct.std::__1::__compressed_pair_elem.133" }
%"struct.std::__1::__compressed_pair_elem.133" = type { %struct.VkQueueFamilyProperties* }
%"class.std::__1::__compressed_pair.137" = type { %"struct.std::__1::__compressed_pair_elem.138" }
%"struct.std::__1::__compressed_pair_elem.138" = type { %"class.gpu::VulkanPhysicalDeviceInfo"* }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%class.SkRefCntBase = type <{ i32 (...)**, %"struct.std::__1::atomic", [4 x i8] }>
%struct.GrContextOptions = type { i8, i32, i32, i32, %class.SkExecutor*, i8, i8, i8, i8, i8, i64, float, float, i32, i8, i8, i32, i32, i8, i8, i32, %"class.GrContextOptions::PersistentCache"*, i32, %"class.GrContextOptions::ShaderErrorHandler"*, i32, i32, i8, i8, %class.GrDriverBugWorkarounds }
%class.SkExecutor = type opaque
%class.GrDriverBugWorkarounds = type { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 }
%struct.GrVkBackendContext = type <{ %struct.VkInstance_T*, %struct.VkPhysicalDevice_T*, %struct.VkDevice_T*, %struct.VkQueue_T*, i32, i32, i32, i32, i32, [4 x i8], %class.GrVkExtensions*, i32, [4 x i8], %struct.VkPhysicalDeviceFeatures*, %struct.VkPhysicalDeviceFeatures2*, %class.sk_sp.143, %"class.std::__1::function", i8, i8, [6 x i8] }>
%class.GrVkExtensions = type { %class.SkTArray }
%class.SkTArray = type { %"struct.GrVkExtensions::Info"*, i64 }
%"struct.GrVkExtensions::Info" = type <{ %class.SkString, i32, [4 x i8] }>
%class.SkString = type { %class.sk_sp.142 }
%class.sk_sp.142 = type { %"struct.SkString::Rec"* }
%"struct.SkString::Rec" = type <{ i32, %"struct.std::__1::atomic", i8, [3 x i8] }>
%class.sk_sp.143 = type { %class.GrVkMemoryAllocator* }
%class.GrVkMemoryAllocator = type { %class.SkRefCnt.base, [4 x i8] }
%"class.std::__1::function" = type { %"class.std::__1::__function::__policy_func" }
%"class.std::__1::__function::__policy_func" = type { %"union.std::__1::__function::__policy_storage", %"struct.std::__1::__function::__policy_invoker", %"struct.std::__1::__function::__policy"* }
%"union.std::__1::__function::__policy_storage" = type { i8*, [8 x i8] }
%"struct.std::__1::__function::__policy_invoker" = type { void ()* (%"union.std::__1::__function::__policy_storage"*, i8*, %struct.VkInstance_T*, %struct.VkDevice_T*)* }
%"class.std::__1::__vector_base_common" = type { i8 }
%class.GrVkSecondaryCBDrawContext = type opaque
%"class.std::__1::vector.145" = type { %"class.std::__1::__vector_base.146" }
%"class.std::__1::__vector_base.146" = type { %struct.VkSemaphore_T**, %struct.VkSemaphore_T**, %"class.std::__1::__compressed_pair.147" }
%struct.VkSemaphore_T = type opaque
%"class.std::__1::__compressed_pair.147" = type { %"struct.std::__1::__compressed_pair_elem.148" }
%"struct.std::__1::__compressed_pair_elem.148" = type { %struct.VkSemaphore_T** }
%"class.base::OnceCallback.152" = type { %"class.base::internal::CallbackBase" }
%"struct.gpu::VulkanFunctionPointers" = type { i8*, %"class.gpu::VulkanFunctionPointers::VulkanFunction", %"class.gpu::VulkanFunctionPointers::VulkanFunction.158", %"class.gpu::VulkanFunctionPointers::VulkanFunction.159", %"class.gpu::VulkanFunctionPointers::VulkanFunction.160", %"class.gpu::VulkanFunctionPointers::VulkanFunction.161", %"class.gpu::VulkanFunctionPointers::VulkanFunction.162", %"class.gpu::VulkanFunctionPointers::VulkanFunction.163", %"class.gpu::VulkanFunctionPointers::VulkanFunction.164", %"class.gpu::VulkanFunctionPointers::VulkanFunction.165", %"class.gpu::VulkanFunctionPointers::VulkanFunction.166", %"class.gpu::VulkanFunctionPointers::VulkanFunction.167", %"class.gpu::VulkanFunctionPointers::VulkanFunction.168", %"class.gpu::VulkanFunctionPointers::VulkanFunction.169", %"class.gpu::VulkanFunctionPointers::VulkanFunction.170", %"class.gpu::VulkanFunctionPointers::VulkanFunction.171", %"class.gpu::VulkanFunctionPointers::VulkanFunction.172", %"class.gpu::VulkanFunctionPointers::VulkanFunction.173", %"class.gpu::VulkanFunctionPointers::VulkanFunction.174", %"class.gpu::VulkanFunctionPointers::VulkanFunction.175", %"class.gpu::VulkanFunctionPointers::VulkanFunction.176", %"class.gpu::VulkanFunctionPointers::VulkanFunction.177", %"class.gpu::VulkanFunctionPointers::VulkanFunction.178", %"class.gpu::VulkanFunctionPointers::VulkanFunction.179", %"class.gpu::VulkanFunctionPointers::VulkanFunction.180", %"class.gpu::VulkanFunctionPointers::VulkanFunction.181", %"class.gpu::VulkanFunctionPointers::VulkanFunction.182", %"class.gpu::VulkanFunctionPointers::VulkanFunction.183", %"class.gpu::VulkanFunctionPointers::VulkanFunction.184", %"class.gpu::VulkanFunctionPointers::VulkanFunction.185", %"class.gpu::VulkanFunctionPointers::VulkanFunction.186", %"class.gpu::VulkanFunctionPointers::VulkanFunction.187", %"class.gpu::VulkanFunctionPointers::VulkanFunction.188", %"class.gpu::VulkanFunctionPointers::VulkanFunction.189", %"class.gpu::VulkanFunctionPointers::VulkanFunction.190", %"class.gpu::VulkanFunctionPointers::VulkanFunction.191", %"class.gpu::VulkanFunctionPointers::VulkanFunction.192", %"class.gpu::VulkanFunctionPointers::VulkanFunction.193", %"class.gpu::VulkanFunctionPointers::VulkanFunction.194", %"class.gpu::VulkanFunctionPointers::VulkanFunction.195", %"class.gpu::VulkanFunctionPointers::VulkanFunction.196", %"class.gpu::VulkanFunctionPointers::VulkanFunction.197", %"class.gpu::VulkanFunctionPointers::VulkanFunction.198", %"class.gpu::VulkanFunctionPointers::VulkanFunction.199", %"class.gpu::VulkanFunctionPointers::VulkanFunction.200", %"class.gpu::VulkanFunctionPointers::VulkanFunction.201", %"class.gpu::VulkanFunctionPointers::VulkanFunction.202", %"class.gpu::VulkanFunctionPointers::VulkanFunction.203", %"class.gpu::VulkanFunctionPointers::VulkanFunction.204", %"class.gpu::VulkanFunctionPointers::VulkanFunction.205", %"class.gpu::VulkanFunctionPointers::VulkanFunction.206", %"class.gpu::VulkanFunctionPointers::VulkanFunction.207", %"class.gpu::VulkanFunctionPointers::VulkanFunction.208", %"class.gpu::VulkanFunctionPointers::VulkanFunction.209", %"class.gpu::VulkanFunctionPointers::VulkanFunction.210", %"class.gpu::VulkanFunctionPointers::VulkanFunction.211", %"class.gpu::VulkanFunctionPointers::VulkanFunction.212", %"class.gpu::VulkanFunctionPointers::VulkanFunction.213", %"class.gpu::VulkanFunctionPointers::VulkanFunction.214", %"class.gpu::VulkanFunctionPointers::VulkanFunction.215", %"class.gpu::VulkanFunctionPointers::VulkanFunction.216", %"class.gpu::VulkanFunctionPointers::VulkanFunction.217", %"class.gpu::VulkanFunctionPointers::VulkanFunction.218", %"class.gpu::VulkanFunctionPointers::VulkanFunction.219", %"class.gpu::VulkanFunctionPointers::VulkanFunction.220", %"class.gpu::VulkanFunctionPointers::VulkanFunction.221", %"class.gpu::VulkanFunctionPointers::VulkanFunction.222", %"class.gpu::VulkanFunctionPointers::VulkanFunction.223", %"class.gpu::VulkanFunctionPointers::VulkanFunction.224", %"class.gpu::VulkanFunctionPointers::VulkanFunction.225", %"class.gpu::VulkanFunctionPointers::VulkanFunction.226", %"class.gpu::VulkanFunctionPointers::VulkanFunction.227", %"class.gpu::VulkanFunctionPointers::VulkanFunction.228", %"class.gpu::VulkanFunctionPointers::VulkanFunction.229", %"class.gpu::VulkanFunctionPointers::VulkanFunction.225", %"class.gpu::VulkanFunctionPointers::VulkanFunction.230", %"class.gpu::VulkanFunctionPointers::VulkanFunction.231", %"class.gpu::VulkanFunctionPointers::VulkanFunction.232", %"class.gpu::VulkanFunctionPointers::VulkanFunction.233", %"class.gpu::VulkanFunctionPointers::VulkanFunction.234", %"class.gpu::VulkanFunctionPointers::VulkanFunction.235", %"class.gpu::VulkanFunctionPointers::VulkanFunction.236", %"class.gpu::VulkanFunctionPointers::VulkanFunction.237", %"class.gpu::VulkanFunctionPointers::VulkanFunction.238", %"class.gpu::VulkanFunctionPointers::VulkanFunction.239", %"class.gpu::VulkanFunctionPointers::VulkanFunction.240", %"class.gpu::VulkanFunctionPointers::VulkanFunction.241", %"class.gpu::VulkanFunctionPointers::VulkanFunction.242", %"class.gpu::VulkanFunctionPointers::VulkanFunction.243", %"class.gpu::VulkanFunctionPointers::VulkanFunction.244", %"class.gpu::VulkanFunctionPointers::VulkanFunction.245", %"class.gpu::VulkanFunctionPointers::VulkanFunction.246", %"class.gpu::VulkanFunctionPointers::VulkanFunction.247", %"class.gpu::VulkanFunctionPointers::VulkanFunction.248", %"class.gpu::VulkanFunctionPointers::VulkanFunction.249", %"class.gpu::VulkanFunctionPointers::VulkanFunction.250", %"class.gpu::VulkanFunctionPointers::VulkanFunction.251", %"class.gpu::VulkanFunctionPointers::VulkanFunction.252", %"class.gpu::VulkanFunctionPointers::VulkanFunction.253", %"class.gpu::VulkanFunctionPointers::VulkanFunction.254", %"class.gpu::VulkanFunctionPointers::VulkanFunction.255" }
%"class.gpu::VulkanFunctionPointers::VulkanFunction" = type { void ()* (%struct.VkInstance_T*, i8*)* }
%"class.gpu::VulkanFunctionPointers::VulkanFunction.158" = type { i32 (i32*)* }
%"class.gpu::VulkanFunctionPointers::VulkanFunction.159" = type { i32 (%struct.VkInstanceCreateInfo*, %struct.VkAllocationCallbacks*, %struct.VkInstance_T**)* }
%struct.VkInstanceCreateInfo = type { i32, i8*, i32, %struct.VkApplicationInfo*, i32, i8**, i32, i8** }
%struct.VkApplicationInfo = type { i32, i8*, i8*, i32, i8*, i32, i32 }
%struct.VkAllocationCallbacks = type { i8*, i8* (i8*, i64, i64, i32)*, i8* (i8*, i8*, i64, i64, i32)*, void (i8*, i8*)*, void (i8*, i64, i32, i32)*, void (i8*, i64, i32, i32)* }
%"class.gpu::VulkanFunctionPointers::VulkanFunction.160" = type { i32 (i8*, i32*, %struct.VkExtensionProperties*)* }
%"class.gpu::VulkanFunctionPointers::VulkanFunction.161" = type { i32 (i32*, %struct.VkLayerProperties*)* }
%"class.gpu::VulkanFunctionPointers::VulkanFunction.162" = type { i32 (%struct.VkPhysicalDevice_T*, %struct.VkDeviceCreateInfo*, %struct.VkAllocationCallbacks*, %struct.VkDevice_T**)* }
%struct.VkDeviceCreateInfo = type { i32, i8*, i32, i32, %struct.VkDeviceQueueCreateInfo*, i32, i8**, i32, i8**, %struct.VkPhysicalDeviceFeatures* }
%struct.VkDeviceQueueCreateInfo = type { i32, i8*, i32, i32, i32, float* }
%"class.gpu::VulkanFunctionPointers::VulkanFunction.163" = type { void (%struct.VkInstance_T*, %struct.VkAllocationCallbacks*)* }
%"class.gpu::VulkanFunctionPointers::VulkanFunction.164" = type { i32 (%struct.VkPhysicalDevice_T*, i8*, i32*, %struct.VkExtensionProperties*)* }
%"class.gpu::VulkanFunctionPointers::VulkanFunction.165" = type { i32 (%struct.VkPhysicalDevice_T*, i32*, %struct.VkLayerProperties*)* }
%"class.gpu::VulkanFunctionPointers::VulkanFunction.166" = type { i32 (%struct.VkInstance_T*, i32*, %struct.VkPhysicalDevice_T**)* }
%"class.gpu::VulkanFunctionPointers::VulkanFunction.167" = type { void ()* (%struct.VkDevice_T*, i8*)* }
%"class.gpu::VulkanFunctionPointers::VulkanFunction.168" = type { void (%struct.VkPhysicalDevice_T*, %struct.VkPhysicalDeviceFeatures2*)* }
%"class.gpu::VulkanFunctionPointers::VulkanFunction.169" = type { void (%struct.VkPhysicalDevice_T*, i32, %struct.VkFormatProperties*)* }
%struct.VkFormatProperties = type { i32, i32, i32 }
%"class.gpu::VulkanFunctionPointers::VulkanFunction.170" = type { void (%struct.VkPhysicalDevice_T*, i32, %struct.VkFormatProperties2*)* }
%struct.VkFormatProperties2 = type { i32, i8*, %struct.VkFormatProperties }
%"class.gpu::VulkanFunctionPointers::VulkanFunction.171" = type { i32 (%struct.VkPhysicalDevice_T*, %struct.VkPhysicalDeviceImageFormatInfo2*, %struct.VkImageFormatProperties2*)* }
%struct.VkPhysicalDeviceImageFormatInfo2 = type { i32, i8*, i32, i32, i32, i32, i32 }
%struct.VkImageFormatProperties2 = type { i32, i8*, %struct.VkImageFormatProperties }
%struct.VkImageFormatProperties = type { %struct.VkExtent3D, i32, i32, i32, i64 }
%"class.gpu::VulkanFunctionPointers::VulkanFunction.172" = type { void (%struct.VkPhysicalDevice_T*, %struct.VkPhysicalDeviceMemoryProperties*)* }
%struct.VkPhysicalDeviceMemoryProperties = type { i32, [32 x %struct.VkMemoryType], i32, [16 x %struct.VkMemoryHeap] }
%struct.VkMemoryType = type { i32, i32 }
%struct.VkMemoryHeap = type { i64, i32 }
%"class.gpu::VulkanFunctionPointers::VulkanFunction.173" = type { void (%struct.VkPhysicalDevice_T*, %struct.VkPhysicalDeviceMemoryProperties2*)* }
%struct.VkPhysicalDeviceMemoryProperties2 = type { i32, i8*, %struct.VkPhysicalDeviceMemoryProperties }
%"class.gpu::VulkanFunctionPointers::VulkanFunction.174" = type { void (%struct.VkPhysicalDevice_T*, %struct.VkPhysicalDeviceProperties*)* }
%"class.gpu::VulkanFunctionPointers::VulkanFunction.175" = type { void (%struct.VkPhysicalDevice_T*, %struct.VkPhysicalDeviceProperties2*)* }
%struct.VkPhysicalDeviceProperties2 = type { i32, i8*, %struct.VkPhysicalDeviceProperties }
%"class.gpu::VulkanFunctionPointers::VulkanFunction.176" = type { void (%struct.VkPhysicalDevice_T*, i32*, %struct.VkQueueFamilyProperties*)* }
%"class.gpu::VulkanFunctionPointers::VulkanFunction.177" = type { void (%struct.VkInstance_T*, %struct.VkSurfaceKHR_T*, %struct.VkAllocationCallbacks*)* }
%struct.VkSurfaceKHR_T = type opaque
%"class.gpu::VulkanFunctionPointers::VulkanFunction.178" = type { i32 (%struct.VkPhysicalDevice_T*, %struct.VkSurfaceKHR_T*, %struct.VkSurfaceCapabilitiesKHR*)* }
%struct.VkSurfaceCapabilitiesKHR = type { i32, i32, %struct.VkExtent2D, %struct.VkExtent2D, %struct.VkExtent2D, i32, i32, i32, i32, i32 }
%struct.VkExtent2D = type { i32, i32 }
%"class.gpu::VulkanFunctionPointers::VulkanFunction.179" = type { i32 (%struct.VkPhysicalDevice_T*, %struct.VkSurfaceKHR_T*, i32*, %struct.VkSurfaceFormatKHR*)* }
%struct.VkSurfaceFormatKHR = type { i32, i32 }
%"class.gpu::VulkanFunctionPointers::VulkanFunction.180" = type { i32 (%struct.VkPhysicalDevice_T*, i32, %struct.VkSurfaceKHR_T*, i32*)* }
%"class.gpu::VulkanFunctionPointers::VulkanFunction.181" = type { i32 (%struct.VkInstance_T*, %struct.VkXcbSurfaceCreateInfoKHR*, %struct.VkAllocationCallbacks*, %struct.VkSurfaceKHR_T**)* }
%struct.VkXcbSurfaceCreateInfoKHR = type { i32, i8*, i32, %struct.xcb_connection_t*, i32 }
%struct.xcb_connection_t = type opaque
%"class.gpu::VulkanFunctionPointers::VulkanFunction.182" = type { i32 (%struct.VkPhysicalDevice_T*, i32, %struct.xcb_connection_t*, i32)* }
%"class.gpu::VulkanFunctionPointers::VulkanFunction.183" = type { i32 (%struct.VkDevice_T*, %struct.VkCommandBufferAllocateInfo*, %struct.VkCommandBuffer_T**)* }
%struct.VkCommandBufferAllocateInfo = type { i32, i8*, %struct.VkCommandPool_T*, i32, i32 }
%struct.VkCommandPool_T = type opaque
%struct.VkCommandBuffer_T = type opaque
%"class.gpu::VulkanFunctionPointers::VulkanFunction.184" = type { i32 (%struct.VkDevice_T*, %struct.VkDescriptorSetAllocateInfo*, %struct.VkDescriptorSet_T**)* }
%struct.VkDescriptorSetAllocateInfo = type { i32, i8*, %struct.VkDescriptorPool_T*, i32, %struct.VkDescriptorSetLayout_T** }
%struct.VkDescriptorPool_T = type opaque
%struct.VkDescriptorSetLayout_T = type opaque
%struct.VkDescriptorSet_T = type opaque
%"class.gpu::VulkanFunctionPointers::VulkanFunction.185" = type { i32 (%struct.VkDevice_T*, %struct.VkMemoryAllocateInfo*, %struct.VkAllocationCallbacks*, %struct.VkDeviceMemory_T**)* }
%struct.VkMemoryAllocateInfo = type { i32, i8*, i64, i32 }
%struct.VkDeviceMemory_T = type opaque
%"class.gpu::VulkanFunctionPointers::VulkanFunction.186" = type { i32 (%struct.VkCommandBuffer_T*, %struct.VkCommandBufferBeginInfo*)* }
%struct.VkCommandBufferBeginInfo = type { i32, i8*, i32, %struct.VkCommandBufferInheritanceInfo* }
%struct.VkCommandBufferInheritanceInfo = type { i32, i8*, %struct.VkRenderPass_T*, i32, %struct.VkFramebuffer_T*, i32, i32, i32 }
%struct.VkRenderPass_T = type opaque
%struct.VkFramebuffer_T = type opaque
%"class.gpu::VulkanFunctionPointers::VulkanFunction.187" = type { i32 (%struct.VkDevice_T*, %struct.VkBuffer_T*, %struct.VkDeviceMemory_T*, i64)* }
%struct.VkBuffer_T = type opaque
%"class.gpu::VulkanFunctionPointers::VulkanFunction.188" = type { i32 (%struct.VkDevice_T*, i32, %struct.VkBindBufferMemoryInfo*)* }
%struct.VkBindBufferMemoryInfo = type { i32, i8*, %struct.VkBuffer_T*, %struct.VkDeviceMemory_T*, i64 }
%"class.gpu::VulkanFunctionPointers::VulkanFunction.189" = type { i32 (%struct.VkDevice_T*, %struct.VkImage_T*, %struct.VkDeviceMemory_T*, i64)* }
%struct.VkImage_T = type opaque
%"class.gpu::VulkanFunctionPointers::VulkanFunction.190" = type { i32 (%struct.VkDevice_T*, i32, %struct.VkBindImageMemoryInfo*)* }
%struct.VkBindImageMemoryInfo = type { i32, i8*, %struct.VkImage_T*, %struct.VkDeviceMemory_T*, i64 }
%"class.gpu::VulkanFunctionPointers::VulkanFunction.191" = type { void (%struct.VkCommandBuffer_T*, %struct.VkRenderPassBeginInfo*, i32)* }
%struct.VkRenderPassBeginInfo = type { i32, i8*, %struct.VkRenderPass_T*, %struct.VkFramebuffer_T*, %struct.VkRect2D, i32, %union.VkClearValue* }
%struct.VkRect2D = type { %struct.VkOffset2D, %struct.VkExtent2D }
%struct.VkOffset2D = type { i32, i32 }
%union.VkClearValue = type { %union.VkClearColorValue }
%union.VkClearColorValue = type { [4 x float] }
%"class.gpu::VulkanFunctionPointers::VulkanFunction.192" = type { void (%struct.VkCommandBuffer_T*, %struct.VkBuffer_T*, %struct.VkBuffer_T*, i32, %struct.VkBufferCopy*)* }
%struct.VkBufferCopy = type { i64, i64, i64 }
%"class.gpu::VulkanFunctionPointers::VulkanFunction.193" = type { void (%struct.VkCommandBuffer_T*, %struct.VkBuffer_T*, %struct.VkImage_T*, i32, i32, %struct.VkBufferImageCopy*)* }
%struct.VkBufferImageCopy = type { i64, i32, i32, %struct.VkImageSubresourceLayers, %struct.VkOffset3D, %struct.VkExtent3D }
%struct.VkImageSubresourceLayers = type { i32, i32, i32, i32 }
%struct.VkOffset3D = type { i32, i32, i32 }
%"class.gpu::VulkanFunctionPointers::VulkanFunction.194" = type { void (%struct.VkCommandBuffer_T*)* }
%"class.gpu::VulkanFunctionPointers::VulkanFunction.195" = type { void (%struct.VkCommandBuffer_T*, i32, %struct.VkCommandBuffer_T**)* }
%"class.gpu::VulkanFunctionPointers::VulkanFunction.196" = type { void (%struct.VkCommandBuffer_T*, i32)* }
%"class.gpu::VulkanFunctionPointers::VulkanFunction.197" = type { void (%struct.VkCommandBuffer_T*, i32, i32, i32, i32, %struct.VkMemoryBarrier*, i32, %struct.VkBufferMemoryBarrier*, i32, %struct.VkImageMemoryBarrier*)* }
%struct.VkMemoryBarrier = type { i32, i8*, i32, i32 }
%struct.VkBufferMemoryBarrier = type { i32, i8*, i32, i32, i32, i32, %struct.VkBuffer_T*, i64, i64 }
%struct.VkImageMemoryBarrier = type { i32, i8*, i32, i32, i32, i32, i32, i32, %struct.VkImage_T*, %struct.VkImageSubresourceRange }
%struct.VkImageSubresourceRange = type { i32, i32, i32, i32, i32 }
%"class.gpu::VulkanFunctionPointers::VulkanFunction.198" = type { i32 (%struct.VkDevice_T*, %struct.VkBufferCreateInfo*, %struct.VkAllocationCallbacks*, %struct.VkBuffer_T**)* }
%struct.VkBufferCreateInfo = type { i32, i8*, i32, i64, i32, i32, i32, i32* }
%"class.gpu::VulkanFunctionPointers::VulkanFunction.199" = type { i32 (%struct.VkDevice_T*, %struct.VkCommandPoolCreateInfo*, %struct.VkAllocationCallbacks*, %struct.VkCommandPool_T**)* }
%struct.VkCommandPoolCreateInfo = type { i32, i8*, i32, i32 }
%"class.gpu::VulkanFunctionPointers::VulkanFunction.200" = type { i32 (%struct.VkDevice_T*, %struct.VkDescriptorPoolCreateInfo*, %struct.VkAllocationCallbacks*, %struct.VkDescriptorPool_T**)* }
%struct.VkDescriptorPoolCreateInfo = type { i32, i8*, i32, i32, i32, %struct.VkDescriptorPoolSize* }
%struct.VkDescriptorPoolSize = type { i32, i32 }
%"class.gpu::VulkanFunctionPointers::VulkanFunction.201" = type { i32 (%struct.VkDevice_T*, %struct.VkDescriptorSetLayoutCreateInfo*, %struct.VkAllocationCallbacks*, %struct.VkDescriptorSetLayout_T**)* }
%struct.VkDescriptorSetLayoutCreateInfo = type { i32, i8*, i32, i32, %struct.VkDescriptorSetLayoutBinding* }
%struct.VkDescriptorSetLayoutBinding = type { i32, i32, i32, i32, %struct.VkSampler_T** }
%struct.VkSampler_T = type opaque
%"class.gpu::VulkanFunctionPointers::VulkanFunction.202" = type { i32 (%struct.VkDevice_T*, %struct.VkFenceCreateInfo*, %struct.VkAllocationCallbacks*, %struct.VkFence_T**)* }
%struct.VkFenceCreateInfo = type { i32, i8*, i32 }
%"class.gpu::VulkanFunctionPointers::VulkanFunction.203" = type { i32 (%struct.VkDevice_T*, %struct.VkFramebufferCreateInfo*, %struct.VkAllocationCallbacks*, %struct.VkFramebuffer_T**)* }
%struct.VkFramebufferCreateInfo = type { i32, i8*, i32, %struct.VkRenderPass_T*, i32, %struct.VkImageView_T**, i32, i32, i32 }
%struct.VkImageView_T = type opaque
%"class.gpu::VulkanFunctionPointers::VulkanFunction.204" = type { i32 (%struct.VkDevice_T*, %struct.VkPipelineCache_T*, i32, %struct.VkGraphicsPipelineCreateInfo*, %struct.VkAllocationCallbacks*, %struct.VkPipeline_T**)* }
%struct.VkPipelineCache_T = type opaque
%struct.VkGraphicsPipelineCreateInfo = type { i32, i8*, i32, i32, %struct.VkPipelineShaderStageCreateInfo*, %struct.VkPipelineVertexInputStateCreateInfo*, %struct.VkPipelineInputAssemblyStateCreateInfo*, %struct.VkPipelineTessellationStateCreateInfo*, %struct.VkPipelineViewportStateCreateInfo*, %struct.VkPipelineRasterizationStateCreateInfo*, %struct.VkPipelineMultisampleStateCreateInfo*, %struct.VkPipelineDepthStencilStateCreateInfo*, %struct.VkPipelineColorBlendStateCreateInfo*, %struct.VkPipelineDynamicStateCreateInfo*, %struct.VkPipelineLayout_T*, %struct.VkRenderPass_T*, i32, %struct.VkPipeline_T*, i32 }
%struct.VkPipelineShaderStageCreateInfo = type { i32, i8*, i32, i32, %struct.VkShaderModule_T*, i8*, %struct.VkSpecializationInfo* }
%struct.VkShaderModule_T = type opaque
%struct.VkSpecializationInfo = type { i32, %struct.VkSpecializationMapEntry*, i64, i8* }
%struct.VkSpecializationMapEntry = type { i32, i32, i64 }
%struct.VkPipelineVertexInputStateCreateInfo = type { i32, i8*, i32, i32, %struct.VkVertexInputBindingDescription*, i32, %struct.VkVertexInputAttributeDescription* }
%struct.VkVertexInputBindingDescription = type { i32, i32, i32 }
%struct.VkVertexInputAttributeDescription = type { i32, i32, i32, i32 }
%struct.VkPipelineInputAssemblyStateCreateInfo = type { i32, i8*, i32, i32, i32 }
%struct.VkPipelineTessellationStateCreateInfo = type { i32, i8*, i32, i32 }
%struct.VkPipelineViewportStateCreateInfo = type { i32, i8*, i32, i32, %struct.VkViewport*, i32, %struct.VkRect2D* }
%struct.VkViewport = type { float, float, float, float, float, float }
%struct.VkPipelineRasterizationStateCreateInfo = type { i32, i8*, i32, i32, i32, i32, i32, i32, i32, float, float, float, float }
%struct.VkPipelineMultisampleStateCreateInfo = type { i32, i8*, i32, i32, i32, float, i32*, i32, i32 }
%struct.VkPipelineDepthStencilStateCreateInfo = type { i32, i8*, i32, i32, i32, i32, i32, i32, %struct.VkStencilOpState, %struct.VkStencilOpState, float, float }
%struct.VkStencilOpState = type { i32, i32, i32, i32, i32, i32, i32 }
%struct.VkPipelineColorBlendStateCreateInfo = type { i32, i8*, i32, i32, i32, i32, %struct.VkPipelineColorBlendAttachmentState*, [4 x float] }
%struct.VkPipelineColorBlendAttachmentState = type { i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.VkPipelineDynamicStateCreateInfo = type { i32, i8*, i32, i32, i32* }
%struct.VkPipelineLayout_T = type opaque
%struct.VkPipeline_T = type opaque
%"class.gpu::VulkanFunctionPointers::VulkanFunction.205" = type { i32 (%struct.VkDevice_T*, %struct.VkImageCreateInfo*, %struct.VkAllocationCallbacks*, %struct.VkImage_T**)* }
%struct.VkImageCreateInfo = type { i32, i8*, i32, i32, i32, %struct.VkExtent3D, i32, i32, i32, i32, i32, i32, i32, i32*, i32 }
%"class.gpu::VulkanFunctionPointers::VulkanFunction.206" = type { i32 (%struct.VkDevice_T*, %struct.VkImageViewCreateInfo*, %struct.VkAllocationCallbacks*, %struct.VkImageView_T**)* }
%struct.VkImageViewCreateInfo = type { i32, i8*, i32, %struct.VkImage_T*, i32, i32, %struct.VkComponentMapping, %struct.VkImageSubresourceRange }
%struct.VkComponentMapping = type { i32, i32, i32, i32 }
%"class.gpu::VulkanFunctionPointers::VulkanFunction.207" = type { i32 (%struct.VkDevice_T*, %struct.VkRenderPassCreateInfo*, %struct.VkAllocationCallbacks*, %struct.VkRenderPass_T**)* }
%struct.VkRenderPassCreateInfo = type { i32, i8*, i32, i32, %struct.VkAttachmentDescription*, i32, %struct.VkSubpassDescription*, i32, %struct.VkSubpassDependency* }
%struct.VkAttachmentDescription = type { i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.VkSubpassDescription = type { i32, i32, i32, %struct.VkAttachmentReference*, i32, %struct.VkAttachmentReference*, %struct.VkAttachmentReference*, %struct.VkAttachmentReference*, i32, i32* }
%struct.VkAttachmentReference = type { i32, i32 }
%struct.VkSubpassDependency = type { i32, i32, i32, i32, i32, i32, i32 }
%"class.gpu::VulkanFunctionPointers::VulkanFunction.208" = type { i32 (%struct.VkDevice_T*, %struct.VkSamplerCreateInfo*, %struct.VkAllocationCallbacks*, %struct.VkSampler_T**)* }
%struct.VkSamplerCreateInfo = type { i32, i8*, i32, i32, i32, i32, i32, i32, i32, float, i32, float, i32, i32, float, float, i32, i32 }
%"class.gpu::VulkanFunctionPointers::VulkanFunction.209" = type { i32 (%struct.VkDevice_T*, %struct.VkSemaphoreCreateInfo*, %struct.VkAllocationCallbacks*, %struct.VkSemaphore_T**)* }
%struct.VkSemaphoreCreateInfo = type { i32, i8*, i32 }
%"class.gpu::VulkanFunctionPointers::VulkanFunction.210" = type { i32 (%struct.VkDevice_T*, %struct.VkShaderModuleCreateInfo*, %struct.VkAllocationCallbacks*, %struct.VkShaderModule_T**)* }
%struct.VkShaderModuleCreateInfo = type { i32, i8*, i32, i64, i32* }
%"class.gpu::VulkanFunctionPointers::VulkanFunction.211" = type { void (%struct.VkDevice_T*, %struct.VkBuffer_T*, %struct.VkAllocationCallbacks*)* }
%"class.gpu::VulkanFunctionPointers::VulkanFunction.212" = type { void (%struct.VkDevice_T*, %struct.VkCommandPool_T*, %struct.VkAllocationCallbacks*)* }
%"class.gpu::VulkanFunctionPointers::VulkanFunction.213" = type { void (%struct.VkDevice_T*, %struct.VkDescriptorPool_T*, %struct.VkAllocationCallbacks*)* }
%"class.gpu::VulkanFunctionPointers::VulkanFunction.214" = type { void (%struct.VkDevice_T*, %struct.VkDescriptorSetLayout_T*, %struct.VkAllocationCallbacks*)* }
%"class.gpu::VulkanFunctionPointers::VulkanFunction.215" = type { void (%struct.VkDevice_T*, %struct.VkAllocationCallbacks*)* }
%"class.gpu::VulkanFunctionPointers::VulkanFunction.216" = type { void (%struct.VkDevice_T*, %struct.VkFence_T*, %struct.VkAllocationCallbacks*)* }
%"class.gpu::VulkanFunctionPointers::VulkanFunction.217" = type { void (%struct.VkDevice_T*, %struct.VkFramebuffer_T*, %struct.VkAllocationCallbacks*)* }
%"class.gpu::VulkanFunctionPointers::VulkanFunction.218" = type { void (%struct.VkDevice_T*, %struct.VkImage_T*, %struct.VkAllocationCallbacks*)* }
%"class.gpu::VulkanFunctionPointers::VulkanFunction.219" = type { void (%struct.VkDevice_T*, %struct.VkImageView_T*, %struct.VkAllocationCallbacks*)* }
%"class.gpu::VulkanFunctionPointers::VulkanFunction.220" = type { void (%struct.VkDevice_T*, %struct.VkRenderPass_T*, %struct.VkAllocationCallbacks*)* }
%"class.gpu::VulkanFunctionPointers::VulkanFunction.221" = type { void (%struct.VkDevice_T*, %struct.VkSampler_T*, %struct.VkAllocationCallbacks*)* }
%"class.gpu::VulkanFunctionPointers::VulkanFunction.222" = type { void (%struct.VkDevice_T*, %struct.VkSemaphore_T*, %struct.VkAllocationCallbacks*)* }
%"class.gpu::VulkanFunctionPointers::VulkanFunction.223" = type { void (%struct.VkDevice_T*, %struct.VkShaderModule_T*, %struct.VkAllocationCallbacks*)* }
%"class.gpu::VulkanFunctionPointers::VulkanFunction.224" = type { i32 (%struct.VkDevice_T*)* }
%"class.gpu::VulkanFunctionPointers::VulkanFunction.226" = type { i32 (%struct.VkCommandBuffer_T*)* }
%"class.gpu::VulkanFunctionPointers::VulkanFunction.227" = type { void (%struct.VkDevice_T*, %struct.VkCommandPool_T*, i32, %struct.VkCommandBuffer_T**)* }
%"class.gpu::VulkanFunctionPointers::VulkanFunction.228" = type { i32 (%struct.VkDevice_T*, %struct.VkDescriptorPool_T*, i32, %struct.VkDescriptorSet_T**)* }
%"class.gpu::VulkanFunctionPointers::VulkanFunction.229" = type { void (%struct.VkDevice_T*, %struct.VkDeviceMemory_T*, %struct.VkAllocationCallbacks*)* }
%"class.gpu::VulkanFunctionPointers::VulkanFunction.225" = type { i32 (%struct.VkDevice_T*, i32, %struct.VkMappedMemoryRange*)* }
%struct.VkMappedMemoryRange = type { i32, i8*, %struct.VkDeviceMemory_T*, i64, i64 }
%"class.gpu::VulkanFunctionPointers::VulkanFunction.230" = type { void (%struct.VkDevice_T*, %struct.VkBuffer_T*, %struct.VkMemoryRequirements*)* }
%struct.VkMemoryRequirements = type { i64, i64, i32 }
%"class.gpu::VulkanFunctionPointers::VulkanFunction.231" = type { void (%struct.VkDevice_T*, %struct.VkBufferMemoryRequirementsInfo2*, %struct.VkMemoryRequirements2*)* }
%struct.VkBufferMemoryRequirementsInfo2 = type { i32, i8*, %struct.VkBuffer_T* }
%struct.VkMemoryRequirements2 = type { i32, i8*, %struct.VkMemoryRequirements }
%"class.gpu::VulkanFunctionPointers::VulkanFunction.232" = type { void (%struct.VkDevice_T*, i32, i32, %struct.VkQueue_T**)* }
%"class.gpu::VulkanFunctionPointers::VulkanFunction.233" = type { void (%struct.VkDevice_T*, %struct.VkDeviceQueueInfo2*, %struct.VkQueue_T**)* }
%struct.VkDeviceQueueInfo2 = type { i32, i8*, i32, i32, i32 }
%"class.gpu::VulkanFunctionPointers::VulkanFunction.234" = type { i32 (%struct.VkDevice_T*, %struct.VkFence_T*)* }
%"class.gpu::VulkanFunctionPointers::VulkanFunction.235" = type { void (%struct.VkDevice_T*, %struct.VkImage_T*, %struct.VkMemoryRequirements*)* }
%"class.gpu::VulkanFunctionPointers::VulkanFunction.236" = type { void (%struct.VkDevice_T*, %struct.VkImageMemoryRequirementsInfo2*, %struct.VkMemoryRequirements2*)* }
%struct.VkImageMemoryRequirementsInfo2 = type { i32, i8*, %struct.VkImage_T* }
%"class.gpu::VulkanFunctionPointers::VulkanFunction.237" = type { void (%struct.VkDevice_T*, %struct.VkImage_T*, %struct.VkImageSubresource*, %struct.VkSubresourceLayout*)* }
%struct.VkImageSubresource = type { i32, i32, i32 }
%struct.VkSubresourceLayout = type { i64, i64, i64, i64, i64 }
%"class.gpu::VulkanFunctionPointers::VulkanFunction.238" = type { i32 (%struct.VkDevice_T*, %struct.VkDeviceMemory_T*, i64, i64, i32, i8**)* }
%"class.gpu::VulkanFunctionPointers::VulkanFunction.239" = type { i32 (%struct.VkQueue_T*, i32, %struct.VkSubmitInfo*, %struct.VkFence_T*)* }
%struct.VkSubmitInfo = type { i32, i8*, i32, %struct.VkSemaphore_T**, i32*, i32, %struct.VkCommandBuffer_T**, i32, %struct.VkSemaphore_T** }
%"class.gpu::VulkanFunctionPointers::VulkanFunction.240" = type { i32 (%struct.VkQueue_T*)* }
%"class.gpu::VulkanFunctionPointers::VulkanFunction.241" = type { i32 (%struct.VkCommandBuffer_T*, i32)* }
%"class.gpu::VulkanFunctionPointers::VulkanFunction.242" = type { i32 (%struct.VkDevice_T*, i32, %struct.VkFence_T**)* }
%"class.gpu::VulkanFunctionPointers::VulkanFunction.243" = type { void (%struct.VkDevice_T*, %struct.VkDeviceMemory_T*)* }
%"class.gpu::VulkanFunctionPointers::VulkanFunction.244" = type { void (%struct.VkDevice_T*, i32, %struct.VkWriteDescriptorSet*, i32, %struct.VkCopyDescriptorSet*)* }
%struct.VkWriteDescriptorSet = type { i32, i8*, %struct.VkDescriptorSet_T*, i32, i32, i32, i32, %struct.VkDescriptorImageInfo*, %struct.VkDescriptorBufferInfo*, %struct.VkBufferView_T** }
%struct.VkDescriptorImageInfo = type { %struct.VkSampler_T*, %struct.VkImageView_T*, i32 }
%struct.VkDescriptorBufferInfo = type { %struct.VkBuffer_T*, i64, i64 }
%struct.VkBufferView_T = type opaque
%struct.VkCopyDescriptorSet = type { i32, i8*, %struct.VkDescriptorSet_T*, i32, i32, %struct.VkDescriptorSet_T*, i32, i32, i32 }
%"class.gpu::VulkanFunctionPointers::VulkanFunction.245" = type { i32 (%struct.VkDevice_T*, i32, %struct.VkFence_T**, i32, i64)* }
%"class.gpu::VulkanFunctionPointers::VulkanFunction.246" = type { i32 (%struct.VkDevice_T*, %struct.VkSemaphoreGetFdInfoKHR*, i32*)* }
%struct.VkSemaphoreGetFdInfoKHR = type { i32, i8*, %struct.VkSemaphore_T*, i32 }
%"class.gpu::VulkanFunctionPointers::VulkanFunction.247" = type { i32 (%struct.VkDevice_T*, %struct.VkImportSemaphoreFdInfoKHR*)* }
%struct.VkImportSemaphoreFdInfoKHR = type { i32, i8*, %struct.VkSemaphore_T*, i32, i32, i32 }
%"class.gpu::VulkanFunctionPointers::VulkanFunction.248" = type { i32 (%struct.VkDevice_T*, %struct.VkMemoryGetFdInfoKHR*, i32*)* }
%struct.VkMemoryGetFdInfoKHR = type { i32, i8*, %struct.VkDeviceMemory_T*, i32 }
%"class.gpu::VulkanFunctionPointers::VulkanFunction.249" = type { i32 (%struct.VkDevice_T*, i32, i32, %struct.VkMemoryFdPropertiesKHR*)* }
%struct.VkMemoryFdPropertiesKHR = type { i32, i8*, i32 }
%"class.gpu::VulkanFunctionPointers::VulkanFunction.250" = type { i32 (%struct.VkDevice_T*, %struct.VkSwapchainKHR_T*, i64, %struct.VkSemaphore_T*, %struct.VkFence_T*, i32*)* }
%struct.VkSwapchainKHR_T = type opaque
%"class.gpu::VulkanFunctionPointers::VulkanFunction.251" = type { i32 (%struct.VkDevice_T*, %struct.VkSwapchainCreateInfoKHR*, %struct.VkAllocationCallbacks*, %struct.VkSwapchainKHR_T**)* }
%struct.VkSwapchainCreateInfoKHR = type { i32, i8*, i32, %struct.VkSurfaceKHR_T*, i32, i32, i32, %struct.VkExtent2D, i32, i32, i32, i32, i32*, i32, i32, i32, i32, %struct.VkSwapchainKHR_T* }
%"class.gpu::VulkanFunctionPointers::VulkanFunction.252" = type { void (%struct.VkDevice_T*, %struct.VkSwapchainKHR_T*, %struct.VkAllocationCallbacks*)* }
%"class.gpu::VulkanFunctionPointers::VulkanFunction.253" = type { i32 (%struct.VkDevice_T*, %struct.VkSwapchainKHR_T*, i32*, %struct.VkImage_T**)* }
%"class.gpu::VulkanFunctionPointers::VulkanFunction.254" = type { i32 (%struct.VkQueue_T*, %struct.VkPresentInfoKHR*)* }
%struct.VkPresentInfoKHR = type { i32, i8*, i32, %struct.VkSemaphore_T**, i32, %struct.VkSwapchainKHR_T**, i32*, i32* }
%"class.gpu::VulkanFunctionPointers::VulkanFunction.255" = type { i32 (%struct.VkDevice_T*, %struct.VkImage_T*, %struct.VkImageDrmFormatModifierPropertiesEXT*)* }
%struct.VkImageDrmFormatModifierPropertiesEXT = type { i32, i8*, i64 }

$_ZNSt3__110__function16__policy_invokerIFPFvvEPKcP12VkInstance_TP10VkDevice_TEE12__call_emptyEPKNS0_16__policy_storageES5_S7_S9_ = comdat any

$_ZNSt3__125__throw_bad_function_callEv = comdat any

$_ZN4base8internal7InvokerINS0_9BindStateIMN3viz30VulkanInProcessContextProviderEFvNS_22MemoryPressureListener19MemoryPressureLevelEEJNS0_17UnretainedWrapperIS4_EEEEEFvS6_EE3RunEPNS0_13BindStateBaseES6_ = comdat any

$_ZN4base8internal9BindStateIMN3viz30VulkanInProcessContextProviderEFvNS_22MemoryPressureListener19MemoryPressureLevelEEJNS0_17UnretainedWrapperIS3_EEEE7DestroyEPKNS0_13BindStateBaseE = comdat any

$_ZZNSt3__110__function8__policy14__create_emptyEvE9__policy_ = comdat any

@_ZTVN3viz30VulkanInProcessContextProviderE = hidden unnamed_addr constant { [12 x i8*] } { [12 x i8*] [i8* null, i8* null, i8* bitcast (i1 (%"class.viz::VulkanInProcessContextProvider"*, %struct.GrContextOptions*)* @_ZN3viz30VulkanInProcessContextProvider19InitializeGrContextERK16GrContextOptions to i8*), i8* bitcast (%"class.gpu::VulkanImplementation"* (%"class.viz::VulkanInProcessContextProvider"*)* @_ZN3viz30VulkanInProcessContextProvider23GetVulkanImplementationEv to i8*), i8* bitcast (%"class.gpu::VulkanDeviceQueue"* (%"class.viz::VulkanInProcessContextProvider"*)* @_ZN3viz30VulkanInProcessContextProvider14GetDeviceQueueEv to i8*), i8* bitcast (%class.GrDirectContext* (%"class.viz::VulkanInProcessContextProvider"*)* @_ZN3viz30VulkanInProcessContextProvider12GetGrContextEv to i8*), i8* bitcast (%class.GrVkSecondaryCBDrawContext* (%"class.viz::VulkanInProcessContextProvider"*)* @_ZN3viz30VulkanInProcessContextProvider27GetGrSecondaryCBDrawContextEv to i8*), i8* bitcast (void (%"class.viz::VulkanInProcessContextProvider"*, %"class.std::__1::vector.145"*)* @_ZN3viz30VulkanInProcessContextProvider28EnqueueSecondaryCBSemaphoresENSt3__16vectorIP13VkSemaphore_TNS1_9allocatorIS4_EEEE to i8*), i8* bitcast (void (%"class.viz::VulkanInProcessContextProvider"*, %"class.base::OnceCallback.152"*)* @_ZN3viz30VulkanInProcessContextProvider32EnqueueSecondaryCBPostSubmitTaskEN4base12OnceCallbackIFvvEEE to i8*), i8* bitcast (i64 (%"class.viz::VulkanInProcessContextProvider"*)* @_ZNK3viz30VulkanInProcessContextProvider21GetSyncCpuMemoryLimitEv to i8*), i8* bitcast (void (%"class.viz::VulkanInProcessContextProvider"*)* @_ZN3viz30VulkanInProcessContextProviderD2Ev to i8*), i8* bitcast (void (%"class.viz::VulkanInProcessContextProvider"*)* @_ZN3viz30VulkanInProcessContextProviderD0Ev to i8*)] }, align 8
@.str = private unnamed_addr constant [31 x i8] c"VulkanInProcessContextProvider\00", align 1
@.str.1 = private unnamed_addr constant [70 x i8] c"../../components/viz/common/gpu/vulkan_in_process_context_provider.cc\00", align 1
@.str.2 = private unnamed_addr constant [15 x i8] c"VK_KHR_surface\00", align 1
@.str.3 = private unnamed_addr constant [34 x i8] c"../../base/strings/string_piece.h\00", align 1
@.str.4 = private unnamed_addr constant [2 x i8] c"s\00", align 1
@_ZZNSt3__110__function8__policy14__create_emptyEvE9__policy_ = linkonce_odr hidden constant %"struct.std::__1::__function::__policy" { i8* (i8*)* null, void (i8*)* null, i8 1, %"class.std::type_info"* null }, comdat, align 8
@.str.5 = private unnamed_addr constant [23 x i8] c"../../base/time/time.h\00", align 1
@.str.6 = private unnamed_addr constant [38 x i8] c"!is_inf() || (delta_ == other.delta_)\00", align 1
@.str.7 = private unnamed_addr constant [14 x i8] c"vkQueueSubmit\00", align 1
@.str.8 = private unnamed_addr constant [26 x i8] c"vkCreateGraphicsPipelines\00", align 1
@"_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcIZN3viz30VulkanInProcessContextProvider19InitializeGrContextERK16GrContextOptionsE3$_0FPFvvEPKcP12VkInstance_TP10VkDevice_TEEEEEPKS1_NS_17integral_constantIbLb1EEEE9__policy_" = internal constant %"struct.std::__1::__function::__policy" zeroinitializer, align 8

@_ZN3viz30VulkanInProcessContextProviderC1EPN3gpu20VulkanImplementationEjjN4base9TimeDeltaE = hidden unnamed_addr alias void (%"class.viz::VulkanInProcessContextProvider"*, %"class.gpu::VulkanImplementation"*, i32, i32, i64), void (%"class.viz::VulkanInProcessContextProvider"*, %"class.gpu::VulkanImplementation"*, i32, i32, i64)* @_ZN3viz30VulkanInProcessContextProviderC2EPN3gpu20VulkanImplementationEjjN4base9TimeDeltaE
@_ZN3viz30VulkanInProcessContextProviderD1Ev = hidden unnamed_addr alias void (%"class.viz::VulkanInProcessContextProvider"*), void (%"class.viz::VulkanInProcessContextProvider"*)* @_ZN3viz30VulkanInProcessContextProviderD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden %"class.viz::VulkanInProcessContextProvider"* @_ZN3viz30VulkanInProcessContextProvider6CreateEPN3gpu20VulkanImplementationEjjPKNS1_7GPUInfoEN4base9TimeDeltaE(%"class.gpu::VulkanImplementation"*, i32, i32, %"struct.gpu::GPUInfo"*, i64) local_unnamed_addr #0 align 2 {
  %6 = tail call i8* @_Znwm(i64 72) #15
  %7 = bitcast i8* %6 to %"class.viz::VulkanInProcessContextProvider"*
  tail call void @_ZN3viz30VulkanInProcessContextProviderC2EPN3gpu20VulkanImplementationEjjN4base9TimeDeltaE(%"class.viz::VulkanInProcessContextProvider"* nonnull %7, %"class.gpu::VulkanImplementation"* %0, i32 %1, i32 %2, i64 %4)
  %8 = ptrtoint i8* %6 to i64
  %9 = getelementptr inbounds i8, i8* %6, i64 8
  %10 = bitcast i8* %9 to i32*
  %11 = atomicrmw add i32* %10, i32 1 monotonic
  %12 = tail call zeroext i1 @_ZN3viz30VulkanInProcessContextProvider10InitializeEPKN3gpu7GPUInfoE(%"class.viz::VulkanInProcessContextProvider"* nonnull %7, %"struct.gpu::GPUInfo"* %3)
  br i1 %12, label %22, label %13

13:                                               ; preds = %5
  %14 = atomicrmw sub i32* %10, i32 1 acq_rel
  %15 = icmp eq i32 %14, 1
  br i1 %15, label %16, label %22

16:                                               ; preds = %13
  %17 = bitcast i8* %6 to %"class.viz::VulkanContextProvider"*
  %18 = bitcast i8* %6 to void (%"class.viz::VulkanContextProvider"*)***
  %19 = load void (%"class.viz::VulkanContextProvider"*)**, void (%"class.viz::VulkanContextProvider"*)*** %18, align 8
  %20 = getelementptr inbounds void (%"class.viz::VulkanContextProvider"*)*, void (%"class.viz::VulkanContextProvider"*)** %19, i64 9
  %21 = load void (%"class.viz::VulkanContextProvider"*)*, void (%"class.viz::VulkanContextProvider"*)** %20, align 8
  tail call void %21(%"class.viz::VulkanContextProvider"* nonnull %17) #16
  br label %22

22:                                               ; preds = %5, %13, %16
  %23 = phi i64 [ 0, %13 ], [ 0, %16 ], [ %8, %5 ]
  %24 = inttoptr i64 %23 to %"class.viz::VulkanInProcessContextProvider"*
  ret %"class.viz::VulkanInProcessContextProvider"* %24
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN3viz30VulkanInProcessContextProvider10InitializeEPKN3gpu7GPUInfoE(%"class.viz::VulkanInProcessContextProvider"* nocapture, %"struct.gpu::GPUInfo"*) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.logging::CheckError", align 8
  %4 = getelementptr inbounds %"class.viz::VulkanInProcessContextProvider", %"class.viz::VulkanInProcessContextProvider"* %0, i64 0, i32 2
  %5 = load %"class.gpu::VulkanImplementation"*, %"class.gpu::VulkanImplementation"** %4, align 8
  %6 = bitcast %"class.gpu::VulkanImplementation"* %5 to %"class.gpu::VulkanInstance"* (%"class.gpu::VulkanImplementation"*)***
  %7 = load %"class.gpu::VulkanInstance"* (%"class.gpu::VulkanImplementation"*)**, %"class.gpu::VulkanInstance"* (%"class.gpu::VulkanImplementation"*)*** %6, align 8
  %8 = getelementptr inbounds %"class.gpu::VulkanInstance"* (%"class.gpu::VulkanImplementation"*)*, %"class.gpu::VulkanInstance"* (%"class.gpu::VulkanImplementation"*)** %7, i64 3
  %9 = load %"class.gpu::VulkanInstance"* (%"class.gpu::VulkanImplementation"*)*, %"class.gpu::VulkanInstance"* (%"class.gpu::VulkanImplementation"*)** %8, align 8
  %10 = tail call %"class.gpu::VulkanInstance"* %9(%"class.gpu::VulkanImplementation"* %5) #16
  %11 = getelementptr inbounds %"class.gpu::VulkanInstance", %"class.gpu::VulkanInstance"* %10, i64 0, i32 0, i32 3, i32 0, i32 0
  %12 = load i8**, i8*** %11, align 8
  %13 = getelementptr inbounds %"class.gpu::VulkanInstance", %"class.gpu::VulkanInstance"* %10, i64 0, i32 0, i32 3, i32 0, i32 1
  %14 = load i8**, i8*** %13, align 8
  %15 = icmp eq i8** %12, %14
  br i1 %15, label %33, label %16

16:                                               ; preds = %2
  %17 = bitcast %"class.logging::CheckError"* %3 to i8*
  br label %18

18:                                               ; preds = %16, %30
  %19 = phi i8** [ %12, %16 ], [ %31, %30 ]
  %20 = load i8*, i8** %19, align 8
  %21 = icmp eq i8* %20, null
  br i1 %21, label %22, label %24

22:                                               ; preds = %18
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #16
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %3, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.3, i64 0, i64 0), i32 125, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.4, i64 0, i64 0)) #16
  %23 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %3) #16
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %3) #16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #16
  br label %30

24:                                               ; preds = %18
  %25 = call i64 @strlen(i8* nonnull %20) #16
  %26 = icmp eq i64 %25, 14
  br i1 %26, label %27, label %30

27:                                               ; preds = %24
  %28 = call i32 @bcmp(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.2, i64 0, i64 0), i8* nonnull %20, i64 14) #16
  %29 = icmp eq i32 %28, 0
  br i1 %29, label %33, label %30

30:                                               ; preds = %22, %24, %27
  %31 = getelementptr inbounds i8*, i8** %19, i64 1
  %32 = icmp eq i8** %31, %14
  br i1 %32, label %33, label %18

33:                                               ; preds = %27, %30, %2
  %34 = phi i32 [ 1, %2 ], [ 1, %30 ], [ 3, %27 ]
  %35 = load %"class.gpu::VulkanImplementation"*, %"class.gpu::VulkanImplementation"** %4, align 8
  %36 = getelementptr inbounds %"class.viz::VulkanInProcessContextProvider", %"class.viz::VulkanInProcessContextProvider"* %0, i64 0, i32 4
  %37 = load i32, i32* %36, align 8
  %38 = call %"class.gpu::VulkanDeviceQueue"* @_ZN3gpu23CreateVulkanDeviceQueueEPNS_20VulkanImplementationEjPKNS_7GPUInfoEj(%"class.gpu::VulkanImplementation"* %35, i32 %34, %"struct.gpu::GPUInfo"* %1, i32 %37) #16
  %39 = ptrtoint %"class.gpu::VulkanDeviceQueue"* %38 to i64
  %40 = getelementptr inbounds %"class.viz::VulkanInProcessContextProvider", %"class.viz::VulkanInProcessContextProvider"* %0, i64 0, i32 3
  %41 = getelementptr inbounds %"class.std::__1::unique_ptr.70", %"class.std::__1::unique_ptr.70"* %40, i64 0, i32 0, i32 0, i32 0
  %42 = load %"class.gpu::VulkanDeviceQueue"*, %"class.gpu::VulkanDeviceQueue"** %41, align 8
  %43 = bitcast %"class.std::__1::unique_ptr.70"* %40 to i64*
  store i64 %39, i64* %43, align 8
  %44 = icmp eq %"class.gpu::VulkanDeviceQueue"* %42, null
  br i1 %44, label %48, label %45

45:                                               ; preds = %33
  call void @_ZN3gpu17VulkanDeviceQueueD1Ev(%"class.gpu::VulkanDeviceQueue"* nonnull %42) #16
  %46 = bitcast %"class.gpu::VulkanDeviceQueue"* %42 to i8*
  call void @_ZdlPv(i8* %46) #15
  %47 = load %"class.gpu::VulkanDeviceQueue"*, %"class.gpu::VulkanDeviceQueue"** %41, align 8
  br label %48

48:                                               ; preds = %45, %33
  %49 = phi %"class.gpu::VulkanDeviceQueue"* [ %47, %45 ], [ %38, %33 ]
  %50 = icmp ne %"class.gpu::VulkanDeviceQueue"* %49, null
  ret i1 %50
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3viz30VulkanInProcessContextProviderC2EPN3gpu20VulkanImplementationEjjN4base9TimeDeltaE(%"class.viz::VulkanInProcessContextProvider"*, %"class.gpu::VulkanImplementation"*, i32, i32, i64) unnamed_addr #0 align 2 {
  %6 = alloca %"class.base::Location", align 8
  %7 = alloca %"class.base::RepeatingCallback", align 8
  %8 = getelementptr inbounds %"class.viz::VulkanInProcessContextProvider", %"class.viz::VulkanInProcessContextProvider"* %0, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i32 0, i32* %8, align 4
  %9 = getelementptr inbounds %"class.viz::VulkanInProcessContextProvider", %"class.viz::VulkanInProcessContextProvider"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [12 x i8*] }, { [12 x i8*] }* @_ZTVN3viz30VulkanInProcessContextProviderE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %9, align 8
  %10 = getelementptr inbounds %"class.viz::VulkanInProcessContextProvider", %"class.viz::VulkanInProcessContextProvider"* %0, i64 0, i32 1, i32 0
  store %class.GrDirectContext* null, %class.GrDirectContext** %10, align 8
  %11 = getelementptr inbounds %"class.viz::VulkanInProcessContextProvider", %"class.viz::VulkanInProcessContextProvider"* %0, i64 0, i32 2
  store %"class.gpu::VulkanImplementation"* %1, %"class.gpu::VulkanImplementation"** %11, align 8
  %12 = getelementptr inbounds %"class.viz::VulkanInProcessContextProvider", %"class.viz::VulkanInProcessContextProvider"* %0, i64 0, i32 3
  %13 = bitcast %"class.std::__1::unique_ptr.70"* %12 to i64*
  store i64 0, i64* %13, align 8
  %14 = getelementptr inbounds %"class.viz::VulkanInProcessContextProvider", %"class.viz::VulkanInProcessContextProvider"* %0, i64 0, i32 4
  store i32 %2, i32* %14, align 8
  %15 = getelementptr inbounds %"class.viz::VulkanInProcessContextProvider", %"class.viz::VulkanInProcessContextProvider"* %0, i64 0, i32 5
  store i32 %3, i32* %15, align 4
  %16 = getelementptr inbounds %"class.viz::VulkanInProcessContextProvider", %"class.viz::VulkanInProcessContextProvider"* %0, i64 0, i32 6, i32 0
  store i64 %4, i64* %16, align 8
  %17 = getelementptr inbounds %"class.viz::VulkanInProcessContextProvider", %"class.viz::VulkanInProcessContextProvider"* %0, i64 0, i32 7, i32 0, i32 0
  %18 = getelementptr inbounds %"class.viz::VulkanInProcessContextProvider", %"class.viz::VulkanInProcessContextProvider"* %0, i64 0, i32 8
  %19 = bitcast %"class.std::__1::unique_ptr.99"* %18 to i64*
  %20 = bitcast %"class.base::Location"* %6 to i8*
  %21 = bitcast i64* %17 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %21, i8 0, i64 16, i1 false)
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %20) #16
  call void @_ZN4base8Location7CurrentEPKcS2_i(%"class.base::Location"* nonnull sret %6, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([70 x i8], [70 x i8]* @.str.1, i64 0, i64 0), i32 57) #16
  %22 = bitcast %"class.base::RepeatingCallback"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %22) #16
  %23 = ptrtoint %"class.viz::VulkanInProcessContextProvider"* %0 to i64
  %24 = call i8* @_Znwm(i64 56) #15, !noalias !2
  %25 = bitcast i8* %24 to %"class.base::internal::BindStateBase"*
  call void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_E(%"class.base::internal::BindStateBase"* nonnull %25, void ()* bitcast (void (%"class.base::internal::BindStateBase"*, i32)* @_ZN4base8internal7InvokerINS0_9BindStateIMN3viz30VulkanInProcessContextProviderEFvNS_22MemoryPressureListener19MemoryPressureLevelEEJNS0_17UnretainedWrapperIS4_EEEEEFvS6_EE3RunEPNS0_13BindStateBaseES6_ to void ()*), void (%"class.base::internal::BindStateBase"*)* nonnull @_ZN4base8internal9BindStateIMN3viz30VulkanInProcessContextProviderEFvNS_22MemoryPressureListener19MemoryPressureLevelEEJNS0_17UnretainedWrapperIS3_EEEE7DestroyEPKNS0_13BindStateBaseE) #16, !noalias !2
  %26 = getelementptr inbounds i8, i8* %24, i64 32
  %27 = bitcast i8* %26 to <2 x i64>*
  store <2 x i64> <i64 ptrtoint (void (%"class.viz::VulkanInProcessContextProvider"*, i32)* @_ZN3viz30VulkanInProcessContextProvider16OnMemoryPressureEN4base22MemoryPressureListener19MemoryPressureLevelE to i64), i64 0>, <2 x i64>* %27, align 8, !noalias !2
  %28 = getelementptr inbounds i8, i8* %24, i64 48
  %29 = bitcast i8* %28 to i64*
  store i64 %23, i64* %29, align 8, !noalias !2
  %30 = bitcast %"class.base::RepeatingCallback"* %7 to i8**
  store i8* %24, i8** %30, align 8, !alias.scope !2
  %31 = call i8* @_Znwm(i64 48) #15
  %32 = bitcast i8* %31 to %"class.base::MemoryPressureListener"*
  call void @_ZN4base22MemoryPressureListenerC1ERKNS_8LocationERKNS_17RepeatingCallbackIFvNS0_19MemoryPressureLevelEEEE(%"class.base::MemoryPressureListener"* nonnull %32, %"class.base::Location"* nonnull dereferenceable(32) %6, %"class.base::RepeatingCallback"* nonnull dereferenceable(8) %7) #16
  %33 = ptrtoint i8* %31 to i64
  %34 = getelementptr inbounds %"class.std::__1::unique_ptr.99", %"class.std::__1::unique_ptr.99"* %18, i64 0, i32 0, i32 0, i32 0
  %35 = load %"class.base::MemoryPressureListener"*, %"class.base::MemoryPressureListener"** %34, align 8
  store i64 %33, i64* %19, align 8
  %36 = icmp eq %"class.base::MemoryPressureListener"* %35, null
  br i1 %36, label %39, label %37

37:                                               ; preds = %5
  call void @_ZN4base22MemoryPressureListenerD1Ev(%"class.base::MemoryPressureListener"* nonnull %35) #16
  %38 = bitcast %"class.base::MemoryPressureListener"* %35 to i8*
  call void @_ZdlPv(i8* %38) #15
  br label %39

39:                                               ; preds = %37, %5
  %40 = getelementptr inbounds %"class.base::RepeatingCallback", %"class.base::RepeatingCallback"* %7, i64 0, i32 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %40) #16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %22) #16
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %20) #16
  ret void
}

declare void @_ZN4base8Location7CurrentEPKcS2_i(%"class.base::Location"* sret, i8*, i8*, i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3viz30VulkanInProcessContextProvider16OnMemoryPressureEN4base22MemoryPressureListener19MemoryPressureLevelE(%"class.viz::VulkanInProcessContextProvider"* nocapture, i32) #0 align 2 {
  %3 = alloca %"class.logging::CheckError", align 8
  %4 = icmp eq i32 %1, 2
  br i1 %4, label %5, label %29

5:                                                ; preds = %2
  %6 = tail call i64 @_ZN4base9TimeTicks3NowEv() #16
  %7 = getelementptr inbounds %"class.viz::VulkanInProcessContextProvider", %"class.viz::VulkanInProcessContextProvider"* %0, i64 0, i32 6, i32 0
  %8 = load i64, i64* %7, align 8
  %9 = add i64 %8, -9223372036854775807
  %10 = icmp ult i64 %9, 2
  br i1 %10, label %18, label %11

11:                                               ; preds = %5
  %12 = icmp slt i64 %8, 0
  %13 = select i1 %12, i64 -9223372036854775808, i64 9223372036854775807
  %14 = tail call { i64, i1 } @llvm.sadd.with.overflow.i64(i64 %6, i64 %8) #16
  %15 = extractvalue { i64, i1 } %14, 1
  %16 = extractvalue { i64, i1 } %14, 0
  %17 = select i1 %15, i64 %13, i64 %16, !prof !7
  br label %26

18:                                               ; preds = %5
  %19 = add i64 %6, -9223372036854775807
  %20 = icmp ugt i64 %19, 1
  %21 = icmp eq i64 %6, %8
  %22 = or i1 %21, %20
  br i1 %22, label %26, label %23

23:                                               ; preds = %18
  %24 = bitcast %"class.logging::CheckError"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %24) #16
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %3, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.5, i64 0, i64 0), i32 378, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.6, i64 0, i64 0)) #16
  %25 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %3) #16
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %3) #16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %24) #16
  br label %26

26:                                               ; preds = %11, %18, %23
  %27 = phi i64 [ %17, %11 ], [ %8, %18 ], [ %8, %23 ]
  %28 = getelementptr inbounds %"class.viz::VulkanInProcessContextProvider", %"class.viz::VulkanInProcessContextProvider"* %0, i64 0, i32 7, i32 0, i32 0
  store i64 %27, i64* %28, align 8
  br label %29

29:                                               ; preds = %2, %26
  ret void
}

; Function Attrs: nounwind
declare void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"*) unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3viz30VulkanInProcessContextProviderD2Ev(%"class.viz::VulkanInProcessContextProvider"* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.viz::VulkanInProcessContextProvider", %"class.viz::VulkanInProcessContextProvider"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [12 x i8*] }, { [12 x i8*] }* @_ZTVN3viz30VulkanInProcessContextProviderE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  tail call void @_ZN3viz30VulkanInProcessContextProvider7DestroyEv(%"class.viz::VulkanInProcessContextProvider"* %0)
  %3 = getelementptr inbounds %"class.viz::VulkanInProcessContextProvider", %"class.viz::VulkanInProcessContextProvider"* %0, i64 0, i32 8, i32 0, i32 0, i32 0
  %4 = load %"class.base::MemoryPressureListener"*, %"class.base::MemoryPressureListener"** %3, align 8
  store %"class.base::MemoryPressureListener"* null, %"class.base::MemoryPressureListener"** %3, align 8
  %5 = icmp eq %"class.base::MemoryPressureListener"* %4, null
  br i1 %5, label %8, label %6

6:                                                ; preds = %1
  tail call void @_ZN4base22MemoryPressureListenerD1Ev(%"class.base::MemoryPressureListener"* nonnull %4) #16
  %7 = bitcast %"class.base::MemoryPressureListener"* %4 to i8*
  tail call void @_ZdlPv(i8* %7) #15
  br label %8

8:                                                ; preds = %1, %6
  %9 = getelementptr inbounds %"class.viz::VulkanInProcessContextProvider", %"class.viz::VulkanInProcessContextProvider"* %0, i64 0, i32 3, i32 0, i32 0, i32 0
  %10 = load %"class.gpu::VulkanDeviceQueue"*, %"class.gpu::VulkanDeviceQueue"** %9, align 8
  store %"class.gpu::VulkanDeviceQueue"* null, %"class.gpu::VulkanDeviceQueue"** %9, align 8
  %11 = icmp eq %"class.gpu::VulkanDeviceQueue"* %10, null
  br i1 %11, label %14, label %12

12:                                               ; preds = %8
  tail call void @_ZN3gpu17VulkanDeviceQueueD1Ev(%"class.gpu::VulkanDeviceQueue"* nonnull %10) #16
  %13 = bitcast %"class.gpu::VulkanDeviceQueue"* %10 to i8*
  tail call void @_ZdlPv(i8* %13) #15
  br label %14

14:                                               ; preds = %8, %12
  %15 = getelementptr inbounds %"class.viz::VulkanInProcessContextProvider", %"class.viz::VulkanInProcessContextProvider"* %0, i64 0, i32 1, i32 0
  %16 = load %class.GrDirectContext*, %class.GrDirectContext** %15, align 8
  %17 = icmp eq %class.GrDirectContext* %16, null
  br i1 %17, label %28, label %18

18:                                               ; preds = %14
  %19 = getelementptr inbounds %class.GrDirectContext, %class.GrDirectContext* %16, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %20 = atomicrmw add i32* %19, i32 -1 acq_rel
  %21 = icmp eq i32 %20, 1
  br i1 %21, label %22, label %28

22:                                               ; preds = %18
  %23 = bitcast %class.GrDirectContext* %16 to %class.SkRefCntBase*
  %24 = bitcast %class.GrDirectContext* %16 to void (%class.SkRefCntBase*)***
  %25 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %24, align 8
  %26 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %25, i64 2
  %27 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %26, align 8
  tail call void %27(%class.SkRefCntBase* nonnull %23) #16
  br label %28

28:                                               ; preds = %14, %18, %22
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3viz30VulkanInProcessContextProvider7DestroyEv(%"class.viz::VulkanInProcessContextProvider"* nocapture) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.viz::VulkanInProcessContextProvider", %"class.viz::VulkanInProcessContextProvider"* %0, i64 0, i32 3, i32 0, i32 0, i32 0
  %3 = load %"class.gpu::VulkanDeviceQueue"*, %"class.gpu::VulkanDeviceQueue"** %2, align 8
  %4 = icmp eq %"class.gpu::VulkanDeviceQueue"* %3, null
  br i1 %4, label %8, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.gpu::VulkanDeviceQueue", %"class.gpu::VulkanDeviceQueue"* %3, i64 0, i32 10, i32 0, i32 0, i32 0
  %7 = load %"class.gpu::VulkanFenceHelper"*, %"class.gpu::VulkanFenceHelper"** %6, align 8
  tail call void @_ZN3gpu17VulkanFenceHelper7DestroyEv(%"class.gpu::VulkanFenceHelper"* %7) #16
  br label %8

8:                                                ; preds = %1, %5
  %9 = getelementptr inbounds %"class.viz::VulkanInProcessContextProvider", %"class.viz::VulkanInProcessContextProvider"* %0, i64 0, i32 1, i32 0
  %10 = load %class.GrDirectContext*, %class.GrDirectContext** %9, align 8
  %11 = icmp eq %class.GrDirectContext* %10, null
  br i1 %11, label %25, label %12

12:                                               ; preds = %8
  tail call void @_ZN15GrDirectContext33releaseResourcesAndAbandonContextEv(%class.GrDirectContext* nonnull %10) #16
  %13 = load %class.GrDirectContext*, %class.GrDirectContext** %9, align 8
  store %class.GrDirectContext* null, %class.GrDirectContext** %9, align 8
  %14 = icmp eq %class.GrDirectContext* %13, null
  br i1 %14, label %25, label %15

15:                                               ; preds = %12
  %16 = getelementptr inbounds %class.GrDirectContext, %class.GrDirectContext* %13, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %17 = atomicrmw add i32* %16, i32 -1 acq_rel
  %18 = icmp eq i32 %17, 1
  br i1 %18, label %19, label %25

19:                                               ; preds = %15
  %20 = bitcast %class.GrDirectContext* %13 to %class.SkRefCntBase*
  %21 = bitcast %class.GrDirectContext* %13 to void (%class.SkRefCntBase*)***
  %22 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %21, align 8
  %23 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %22, i64 2
  %24 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %23, align 8
  tail call void %24(%class.SkRefCntBase* nonnull %20) #16
  br label %25

25:                                               ; preds = %8, %19, %15, %12
  %26 = load %"class.gpu::VulkanDeviceQueue"*, %"class.gpu::VulkanDeviceQueue"** %2, align 8
  %27 = icmp eq %"class.gpu::VulkanDeviceQueue"* %26, null
  br i1 %27, label %33, label %28

28:                                               ; preds = %25
  tail call void @_ZN3gpu17VulkanDeviceQueue7DestroyEv(%"class.gpu::VulkanDeviceQueue"* nonnull %26) #16
  %29 = load %"class.gpu::VulkanDeviceQueue"*, %"class.gpu::VulkanDeviceQueue"** %2, align 8
  store %"class.gpu::VulkanDeviceQueue"* null, %"class.gpu::VulkanDeviceQueue"** %2, align 8
  %30 = icmp eq %"class.gpu::VulkanDeviceQueue"* %29, null
  br i1 %30, label %33, label %31

31:                                               ; preds = %28
  tail call void @_ZN3gpu17VulkanDeviceQueueD1Ev(%"class.gpu::VulkanDeviceQueue"* nonnull %29) #16
  %32 = bitcast %"class.gpu::VulkanDeviceQueue"* %29 to i8*
  tail call void @_ZdlPv(i8* %32) #15
  br label %33

33:                                               ; preds = %25, %31, %28
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3viz30VulkanInProcessContextProviderD0Ev(%"class.viz::VulkanInProcessContextProvider"*) unnamed_addr #0 align 2 {
  tail call void @_ZN3viz30VulkanInProcessContextProviderD2Ev(%"class.viz::VulkanInProcessContextProvider"* %0) #16
  %2 = bitcast %"class.viz::VulkanInProcessContextProvider"* %0 to i8*
  tail call void @_ZdlPv(i8* %2) #15
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #5

declare %"class.gpu::VulkanDeviceQueue"* @_ZN3gpu23CreateVulkanDeviceQueueEPNS_20VulkanImplementationEjPKNS_7GPUInfoEj(%"class.gpu::VulkanImplementation"*, i32, %"struct.gpu::GPUInfo"*, i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN3viz30VulkanInProcessContextProvider19InitializeGrContextERK16GrContextOptions(%"class.viz::VulkanInProcessContextProvider"* nocapture, %struct.GrContextOptions* dereferenceable(240)) unnamed_addr #0 align 2 {
  %3 = alloca %struct.GrVkBackendContext, align 8
  %4 = alloca %class.sk_sp.143, align 8
  %5 = alloca %"class.std::__1::vector.107", align 8
  %6 = alloca %class.GrVkExtensions, align 8
  %7 = alloca %"class.std::__1::function", align 8
  %8 = alloca %class.sk_sp, align 8
  %9 = bitcast %struct.GrVkBackendContext* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 136, i8* nonnull %9) #16
  %10 = getelementptr inbounds %struct.GrVkBackendContext, %struct.GrVkBackendContext* %3, i64 0, i32 3
  %11 = bitcast %struct.VkQueue_T** %10 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %11, i8 -86, i64 112, i1 false)
  %12 = getelementptr inbounds %struct.GrVkBackendContext, %struct.GrVkBackendContext* %3, i64 0, i32 6
  store i32 0, i32* %12, align 8
  %13 = getelementptr inbounds %struct.GrVkBackendContext, %struct.GrVkBackendContext* %3, i64 0, i32 7
  store i32 0, i32* %13, align 4
  %14 = getelementptr inbounds %struct.GrVkBackendContext, %struct.GrVkBackendContext* %3, i64 0, i32 8
  store i32 0, i32* %14, align 8
  %15 = getelementptr inbounds %struct.GrVkBackendContext, %struct.GrVkBackendContext* %3, i64 0, i32 10
  store %class.GrVkExtensions* null, %class.GrVkExtensions** %15, align 8
  %16 = getelementptr inbounds %struct.GrVkBackendContext, %struct.GrVkBackendContext* %3, i64 0, i32 13
  %17 = getelementptr inbounds %struct.GrVkBackendContext, %struct.GrVkBackendContext* %3, i64 0, i32 16, i32 0, i32 1, i32 0
  %18 = bitcast %struct.VkPhysicalDeviceFeatures** %16 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %18, i8 0, i64 24, i1 false) #16
  store void ()* (%"union.std::__1::__function::__policy_storage"*, i8*, %struct.VkInstance_T*, %struct.VkDevice_T*)* @_ZNSt3__110__function16__policy_invokerIFPFvvEPKcP12VkInstance_TP10VkDevice_TEE12__call_emptyEPKNS0_16__policy_storageES5_S7_S9_, void ()* (%"union.std::__1::__function::__policy_storage"*, i8*, %struct.VkInstance_T*, %struct.VkDevice_T*)** %17, align 8
  %19 = getelementptr inbounds %struct.GrVkBackendContext, %struct.GrVkBackendContext* %3, i64 0, i32 16, i32 0, i32 2
  store %"struct.std::__1::__function::__policy"* @_ZZNSt3__110__function8__policy14__create_emptyEvE9__policy_, %"struct.std::__1::__function::__policy"** %19, align 8
  %20 = getelementptr inbounds %struct.GrVkBackendContext, %struct.GrVkBackendContext* %3, i64 0, i32 17
  store i8 0, i8* %20, align 8
  %21 = getelementptr inbounds %struct.GrVkBackendContext, %struct.GrVkBackendContext* %3, i64 0, i32 18
  store i8 0, i8* %21, align 1
  %22 = getelementptr inbounds %"class.viz::VulkanInProcessContextProvider", %"class.viz::VulkanInProcessContextProvider"* %0, i64 0, i32 3, i32 0, i32 0, i32 0
  %23 = load %"class.gpu::VulkanDeviceQueue"*, %"class.gpu::VulkanDeviceQueue"** %22, align 8
  %24 = getelementptr inbounds %"class.gpu::VulkanDeviceQueue", %"class.gpu::VulkanDeviceQueue"* %23, i64 0, i32 8
  %25 = bitcast %struct.VkInstance_T** %24 to i64*
  %26 = load i64, i64* %25, align 8
  %27 = bitcast %struct.GrVkBackendContext* %3 to i64*
  store i64 %26, i64* %27, align 8
  %28 = getelementptr inbounds %"class.gpu::VulkanDeviceQueue", %"class.gpu::VulkanDeviceQueue"* %23, i64 0, i32 1
  %29 = bitcast %struct.VkPhysicalDevice_T** %28 to i64*
  %30 = load i64, i64* %29, align 8
  %31 = getelementptr inbounds %struct.GrVkBackendContext, %struct.GrVkBackendContext* %3, i64 0, i32 1
  %32 = bitcast %struct.VkPhysicalDevice_T** %31 to i64*
  store i64 %30, i64* %32, align 8
  %33 = getelementptr inbounds %"class.gpu::VulkanDeviceQueue", %"class.gpu::VulkanDeviceQueue"* %23, i64 0, i32 5
  %34 = getelementptr inbounds %struct.GrVkBackendContext, %struct.GrVkBackendContext* %3, i64 0, i32 2
  %35 = bitcast %struct.VkDevice_T** %33 to <2 x i64>*
  %36 = load <2 x i64>, <2 x i64>* %35, align 8
  %37 = bitcast %struct.VkDevice_T** %34 to <2 x i64>*
  store <2 x i64> %36, <2 x i64>* %37, align 8
  %38 = getelementptr inbounds %"class.gpu::VulkanDeviceQueue", %"class.gpu::VulkanDeviceQueue"* %23, i64 0, i32 7
  %39 = load i32, i32* %38, align 8
  %40 = getelementptr inbounds %struct.GrVkBackendContext, %struct.GrVkBackendContext* %3, i64 0, i32 4
  store i32 %39, i32* %40, align 8
  %41 = getelementptr inbounds %"class.viz::VulkanInProcessContextProvider", %"class.viz::VulkanInProcessContextProvider"* %0, i64 0, i32 2
  %42 = load %"class.gpu::VulkanImplementation"*, %"class.gpu::VulkanImplementation"** %41, align 8
  %43 = bitcast %"class.gpu::VulkanImplementation"* %42 to %"class.gpu::VulkanInstance"* (%"class.gpu::VulkanImplementation"*)***
  %44 = load %"class.gpu::VulkanInstance"* (%"class.gpu::VulkanImplementation"*)**, %"class.gpu::VulkanInstance"* (%"class.gpu::VulkanImplementation"*)*** %43, align 8
  %45 = getelementptr inbounds %"class.gpu::VulkanInstance"* (%"class.gpu::VulkanImplementation"*)*, %"class.gpu::VulkanInstance"* (%"class.gpu::VulkanImplementation"*)** %44, i64 3
  %46 = load %"class.gpu::VulkanInstance"* (%"class.gpu::VulkanImplementation"*)*, %"class.gpu::VulkanInstance"* (%"class.gpu::VulkanImplementation"*)** %45, align 8
  %47 = tail call %"class.gpu::VulkanInstance"* %46(%"class.gpu::VulkanImplementation"* %42) #16
  %48 = getelementptr inbounds %"class.gpu::VulkanInstance", %"class.gpu::VulkanInstance"* %47, i64 0, i32 0, i32 1
  %49 = load i32, i32* %48, align 4
  store i32 %49, i32* %13, align 4
  %50 = bitcast %class.sk_sp.143* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %50) #16
  %51 = load %"class.gpu::VulkanDeviceQueue"*, %"class.gpu::VulkanDeviceQueue"** %22, align 8
  call void @_ZN3gpu25CreateGrVkMemoryAllocatorEPNS_17VulkanDeviceQueueE(%class.sk_sp.143* nonnull sret %4, %"class.gpu::VulkanDeviceQueue"* %51) #16
  %52 = getelementptr inbounds %struct.GrVkBackendContext, %struct.GrVkBackendContext* %3, i64 0, i32 15
  %53 = getelementptr inbounds %class.sk_sp.143, %class.sk_sp.143* %4, i64 0, i32 0
  %54 = bitcast %class.sk_sp.143* %4 to i64*
  %55 = load i64, i64* %54, align 8
  store %class.GrVkMemoryAllocator* null, %class.GrVkMemoryAllocator** %53, align 8
  %56 = getelementptr inbounds %class.sk_sp.143, %class.sk_sp.143* %52, i64 0, i32 0
  %57 = load %class.GrVkMemoryAllocator*, %class.GrVkMemoryAllocator** %56, align 8
  %58 = bitcast %class.sk_sp.143* %52 to i64*
  store i64 %55, i64* %58, align 8
  %59 = icmp eq %class.GrVkMemoryAllocator* %57, null
  br i1 %59, label %70, label %60

60:                                               ; preds = %2
  %61 = getelementptr inbounds %class.GrVkMemoryAllocator, %class.GrVkMemoryAllocator* %57, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %62 = atomicrmw add i32* %61, i32 -1 acq_rel
  %63 = icmp eq i32 %62, 1
  br i1 %63, label %64, label %70

64:                                               ; preds = %60
  %65 = bitcast %class.GrVkMemoryAllocator* %57 to %class.SkRefCntBase*
  %66 = bitcast %class.GrVkMemoryAllocator* %57 to void (%class.SkRefCntBase*)***
  %67 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %66, align 8
  %68 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %67, i64 2
  %69 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %68, align 8
  call void %69(%class.SkRefCntBase* nonnull %65) #16
  br label %70

70:                                               ; preds = %2, %60, %64
  %71 = load %class.GrVkMemoryAllocator*, %class.GrVkMemoryAllocator** %53, align 8
  %72 = icmp eq %class.GrVkMemoryAllocator* %71, null
  br i1 %72, label %83, label %73

73:                                               ; preds = %70
  %74 = getelementptr inbounds %class.GrVkMemoryAllocator, %class.GrVkMemoryAllocator* %71, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %75 = atomicrmw add i32* %74, i32 -1 acq_rel
  %76 = icmp eq i32 %75, 1
  br i1 %76, label %77, label %83

77:                                               ; preds = %73
  %78 = bitcast %class.GrVkMemoryAllocator* %71 to %class.SkRefCntBase*
  %79 = bitcast %class.GrVkMemoryAllocator* %71 to void (%class.SkRefCntBase*)***
  %80 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %79, align 8
  %81 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %80, i64 2
  %82 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %81, align 8
  call void %82(%class.SkRefCntBase* nonnull %78) #16
  br label %83

83:                                               ; preds = %70, %73, %77
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %50) #16
  %84 = load %"class.gpu::VulkanImplementation"*, %"class.gpu::VulkanImplementation"** %41, align 8
  %85 = bitcast %"class.gpu::VulkanImplementation"* %84 to %"class.gpu::VulkanInstance"* (%"class.gpu::VulkanImplementation"*)***
  %86 = load %"class.gpu::VulkanInstance"* (%"class.gpu::VulkanImplementation"*)**, %"class.gpu::VulkanInstance"* (%"class.gpu::VulkanImplementation"*)*** %85, align 8
  %87 = getelementptr inbounds %"class.gpu::VulkanInstance"* (%"class.gpu::VulkanImplementation"*)*, %"class.gpu::VulkanInstance"* (%"class.gpu::VulkanImplementation"*)** %86, i64 3
  %88 = load %"class.gpu::VulkanInstance"* (%"class.gpu::VulkanImplementation"*)*, %"class.gpu::VulkanInstance"* (%"class.gpu::VulkanImplementation"*)** %87, align 8
  %89 = call %"class.gpu::VulkanInstance"* %88(%"class.gpu::VulkanImplementation"* %84) #16
  %90 = getelementptr inbounds %"class.gpu::VulkanInstance", %"class.gpu::VulkanInstance"* %89, i64 0, i32 0, i32 3
  %91 = bitcast %"class.std::__1::vector.107"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %91) #16
  %92 = getelementptr inbounds %"class.std::__1::vector.107", %"class.std::__1::vector.107"* %5, i64 0, i32 0, i32 0
  %93 = getelementptr inbounds %"class.std::__1::vector.107", %"class.std::__1::vector.107"* %5, i64 0, i32 0, i32 1
  %94 = getelementptr inbounds %"class.std::__1::vector.107", %"class.std::__1::vector.107"* %5, i64 0, i32 0, i32 2, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %91, i8 0, i64 24, i1 false) #16
  %95 = load %"class.gpu::VulkanDeviceQueue"*, %"class.gpu::VulkanDeviceQueue"** %22, align 8
  %96 = getelementptr inbounds %"class.gpu::VulkanDeviceQueue", %"class.gpu::VulkanDeviceQueue"* %95, i64 0, i32 0, i32 0, i32 0, i32 1
  %97 = bitcast %"class.base::BasicStringPiece"** %96 to i64*
  %98 = load i64, i64* %97, align 8
  %99 = bitcast %"class.gpu::VulkanDeviceQueue"* %95 to i64*
  %100 = load i64, i64* %99, align 8
  %101 = sub i64 %98, %100
  %102 = ashr exact i64 %101, 4
  %103 = bitcast i8*** %94 to i64*
  %104 = bitcast %"class.std::__1::vector.107"* %5 to i64*
  %105 = icmp eq i64 %101, 0
  %106 = inttoptr i64 %98 to %"class.base::BasicStringPiece"*
  %107 = inttoptr i64 %100 to %"class.base::BasicStringPiece"*
  br i1 %105, label %123, label %108

108:                                              ; preds = %83
  %109 = icmp ugt i64 %102, 2305843009213693951
  br i1 %109, label %110, label %111

110:                                              ; preds = %108
  call void @abort() #17
  unreachable

111:                                              ; preds = %108
  %112 = bitcast i8*** %93 to i64*
  %113 = ashr exact i64 %101, 1
  %114 = call i8* @_Znwm(i64 %113) #15
  %115 = bitcast i8* %114 to i8**
  %116 = ptrtoint i8* %114 to i64
  %117 = getelementptr inbounds i8*, i8** %115, i64 %102
  %118 = ptrtoint i8** %117 to i64
  %119 = ptrtoint i8* %114 to i64
  store i64 %119, i64* %104, align 8
  store i64 %116, i64* %112, align 8
  store i64 %118, i64* %103, align 8
  %120 = load %"class.base::BasicStringPiece"*, %"class.base::BasicStringPiece"** %96, align 8
  %121 = getelementptr inbounds %"class.gpu::VulkanDeviceQueue", %"class.gpu::VulkanDeviceQueue"* %95, i64 0, i32 0, i32 0, i32 0, i32 0
  %122 = load %"class.base::BasicStringPiece"*, %"class.base::BasicStringPiece"** %121, align 8
  br label %123

123:                                              ; preds = %83, %111
  %124 = phi %"class.base::BasicStringPiece"* [ %107, %83 ], [ %122, %111 ]
  %125 = phi i64 [ 0, %83 ], [ %116, %111 ]
  %126 = phi i8** [ null, %83 ], [ %117, %111 ]
  %127 = phi i8** [ null, %83 ], [ %115, %111 ]
  %128 = phi %"class.base::BasicStringPiece"* [ %106, %83 ], [ %120, %111 ]
  %129 = icmp eq %"class.base::BasicStringPiece"* %124, %128
  %130 = bitcast i8*** %93 to i64*
  br i1 %129, label %131, label %271

131:                                              ; preds = %332, %123
  %132 = bitcast %class.GrVkExtensions* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %132) #16
  %133 = getelementptr inbounds %class.GrVkExtensions, %class.GrVkExtensions* %6, i64 0, i32 0, i32 0
  %134 = getelementptr inbounds %class.GrVkExtensions, %class.GrVkExtensions* %6, i64 0, i32 0, i32 1
  store %"struct.GrVkExtensions::Info"* null, %"struct.GrVkExtensions::Info"** %133, align 8
  store i64 1, i64* %134, align 8
  %135 = getelementptr inbounds %"class.std::__1::function", %"class.std::__1::function"* %7, i64 0, i32 0, i32 1
  %136 = bitcast %"struct.std::__1::__function::__policy_invoker"* %135 to i64*
  %137 = bitcast %"class.std::__1::function"* %7 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %137, i8 -86, i64 16, i1 false)
  store i64 ptrtoint (void ()* (%"union.std::__1::__function::__policy_storage"*, i8*, %struct.VkInstance_T*, %struct.VkDevice_T*)* @"_ZNSt3__110__function16__policy_invokerIFPFvvEPKcP12VkInstance_TP10VkDevice_TEE11__call_implINS0_20__default_alloc_funcIZN3viz30VulkanInProcessContextProvider19InitializeGrContextERK16GrContextOptionsE3$_0SA_EEEES3_PKNS0_16__policy_storageES5_S7_S9_" to i64), i64* %136, align 8
  %138 = getelementptr inbounds %"class.std::__1::function", %"class.std::__1::function"* %7, i64 0, i32 0, i32 2
  store %"struct.std::__1::__function::__policy"* @"_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcIZN3viz30VulkanInProcessContextProvider19InitializeGrContextERK16GrContextOptionsE3$_0FPFvvEPKcP12VkInstance_TP10VkDevice_TEEEEEPKS1_NS_17integral_constantIbLb1EEEE9__policy_", %"struct.std::__1::__function::__policy"** %138, align 8
  %139 = load %"class.gpu::VulkanImplementation"*, %"class.gpu::VulkanImplementation"** %41, align 8
  %140 = bitcast %"class.gpu::VulkanImplementation"* %139 to %"class.gpu::VulkanInstance"* (%"class.gpu::VulkanImplementation"*)***
  %141 = load %"class.gpu::VulkanInstance"* (%"class.gpu::VulkanImplementation"*)**, %"class.gpu::VulkanInstance"* (%"class.gpu::VulkanImplementation"*)*** %140, align 8
  %142 = getelementptr inbounds %"class.gpu::VulkanInstance"* (%"class.gpu::VulkanImplementation"*)*, %"class.gpu::VulkanInstance"* (%"class.gpu::VulkanImplementation"*)** %141, i64 3
  %143 = load %"class.gpu::VulkanInstance"* (%"class.gpu::VulkanImplementation"*)*, %"class.gpu::VulkanInstance"* (%"class.gpu::VulkanImplementation"*)** %142, align 8
  %144 = call %"class.gpu::VulkanInstance"* %143(%"class.gpu::VulkanImplementation"* %139) #16
  %145 = getelementptr inbounds %"class.gpu::VulkanInstance", %"class.gpu::VulkanInstance"* %144, i64 0, i32 1
  %146 = load %struct.VkInstance_T*, %struct.VkInstance_T** %145, align 8
  %147 = load %"class.gpu::VulkanDeviceQueue"*, %"class.gpu::VulkanDeviceQueue"** %22, align 8
  %148 = getelementptr inbounds %"class.gpu::VulkanDeviceQueue", %"class.gpu::VulkanDeviceQueue"* %147, i64 0, i32 1
  %149 = load %struct.VkPhysicalDevice_T*, %struct.VkPhysicalDevice_T** %148, align 8
  %150 = getelementptr inbounds %"class.gpu::VulkanInstance", %"class.gpu::VulkanInstance"* %89, i64 0, i32 0, i32 3, i32 0, i32 1
  %151 = bitcast i8*** %150 to i64*
  %152 = load i64, i64* %151, align 8
  %153 = bitcast %"class.std::__1::vector.107"* %90 to i64*
  %154 = load i64, i64* %153, align 8
  %155 = sub i64 %152, %154
  %156 = lshr exact i64 %155, 3
  %157 = trunc i64 %156 to i32
  %158 = inttoptr i64 %154 to i8**
  %159 = load i64, i64* %130, align 8
  %160 = load i64, i64* %104, align 8
  %161 = sub i64 %159, %160
  %162 = lshr exact i64 %161, 3
  %163 = trunc i64 %162 to i32
  %164 = inttoptr i64 %160 to i8**
  call void @_ZN14GrVkExtensions4initENSt3__18functionIFPFvvEPKcP12VkInstance_TP10VkDevice_TEEES7_P18VkPhysicalDevice_TjPKS5_jSF_(%class.GrVkExtensions* nonnull %6, %"class.std::__1::function"* nonnull %7, %struct.VkInstance_T* %146, %struct.VkPhysicalDevice_T* %149, i32 %157, i8** %158, i32 %163, i8** %164) #16
  %165 = load %"struct.std::__1::__function::__policy"*, %"struct.std::__1::__function::__policy"** %138, align 8
  %166 = getelementptr inbounds %"struct.std::__1::__function::__policy", %"struct.std::__1::__function::__policy"* %165, i64 0, i32 1
  %167 = load void (i8*)*, void (i8*)** %166, align 8
  %168 = icmp eq void (i8*)* %167, null
  br i1 %168, label %172, label %169

169:                                              ; preds = %131
  %170 = getelementptr inbounds %"class.std::__1::function", %"class.std::__1::function"* %7, i64 0, i32 0, i32 0, i32 0
  %171 = load i8*, i8** %170, align 8
  call void %167(i8* %171) #16
  br label %172

172:                                              ; preds = %169, %131
  store %class.GrVkExtensions* %6, %class.GrVkExtensions** %15, align 8
  %173 = load %"class.gpu::VulkanDeviceQueue"*, %"class.gpu::VulkanDeviceQueue"** %22, align 8
  %174 = getelementptr inbounds %"class.gpu::VulkanDeviceQueue", %"class.gpu::VulkanDeviceQueue"* %173, i64 0, i32 11
  %175 = getelementptr inbounds %struct.GrVkBackendContext, %struct.GrVkBackendContext* %3, i64 0, i32 14
  store %struct.VkPhysicalDeviceFeatures2* %174, %struct.VkPhysicalDeviceFeatures2** %175, align 8
  %176 = getelementptr inbounds %struct.GrVkBackendContext, %struct.GrVkBackendContext* %3, i64 0, i32 16
  %177 = getelementptr inbounds %struct.GrVkBackendContext, %struct.GrVkBackendContext* %3, i64 0, i32 16, i32 0, i32 1
  %178 = load %"struct.std::__1::__function::__policy"*, %"struct.std::__1::__function::__policy"** %19, align 8
  %179 = bitcast %"struct.std::__1::__function::__policy_invoker"* %177 to <2 x i64>*
  store <2 x i64> <i64 ptrtoint (void ()* (%"union.std::__1::__function::__policy_storage"*, i8*, %struct.VkInstance_T*, %struct.VkDevice_T*)* @"_ZNSt3__110__function16__policy_invokerIFPFvvEPKcP12VkInstance_TP10VkDevice_TEE11__call_implINS0_20__default_alloc_funcIZN3viz30VulkanInProcessContextProvider19InitializeGrContextERK16GrContextOptionsE3$_0SA_EEEES3_PKNS0_16__policy_storageES5_S7_S9_" to i64), i64 ptrtoint (%"struct.std::__1::__function::__policy"* @"_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcIZN3viz30VulkanInProcessContextProvider19InitializeGrContextERK16GrContextOptionsE3$_0FPFvvEPKcP12VkInstance_TP10VkDevice_TEEEEEPKS1_NS_17integral_constantIbLb1EEEE9__policy_" to i64)>, <2 x i64>* %179, align 8
  %180 = getelementptr inbounds %"class.std::__1::function", %"class.std::__1::function"* %176, i64 0, i32 0, i32 0, i32 0
  %181 = load i8*, i8** %180, align 8
  %182 = getelementptr inbounds %"struct.std::__1::__function::__policy", %"struct.std::__1::__function::__policy"* %178, i64 0, i32 1
  %183 = bitcast %"class.std::__1::function"* %176 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %183, i8 -86, i64 16, i1 false)
  %184 = load void (i8*)*, void (i8*)** %182, align 8
  %185 = icmp eq void (i8*)* %184, null
  br i1 %185, label %187, label %186

186:                                              ; preds = %172
  call void %184(i8* %181) #16
  br label %187

187:                                              ; preds = %172, %186
  store i8 0, i8* %21, align 1
  %188 = bitcast %class.sk_sp* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %188) #16
  call void @_ZN15GrDirectContext10MakeVulkanERK18GrVkBackendContextRK16GrContextOptions(%class.sk_sp* nonnull sret %8, %struct.GrVkBackendContext* nonnull dereferenceable(136) %3, %struct.GrContextOptions* dereferenceable(240) %1) #16
  %189 = getelementptr inbounds %"class.viz::VulkanInProcessContextProvider", %"class.viz::VulkanInProcessContextProvider"* %0, i64 0, i32 1
  %190 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %8, i64 0, i32 0
  %191 = bitcast %class.sk_sp* %8 to i64*
  %192 = load i64, i64* %191, align 8
  store %class.GrDirectContext* null, %class.GrDirectContext** %190, align 8
  %193 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %189, i64 0, i32 0
  %194 = load %class.GrDirectContext*, %class.GrDirectContext** %193, align 8
  %195 = bitcast %class.sk_sp* %189 to i64*
  store i64 %192, i64* %195, align 8
  %196 = icmp eq %class.GrDirectContext* %194, null
  br i1 %196, label %207, label %197

197:                                              ; preds = %187
  %198 = getelementptr inbounds %class.GrDirectContext, %class.GrDirectContext* %194, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %199 = atomicrmw add i32* %198, i32 -1 acq_rel
  %200 = icmp eq i32 %199, 1
  br i1 %200, label %201, label %207

201:                                              ; preds = %197
  %202 = bitcast %class.GrDirectContext* %194 to %class.SkRefCntBase*
  %203 = bitcast %class.GrDirectContext* %194 to void (%class.SkRefCntBase*)***
  %204 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %203, align 8
  %205 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %204, i64 2
  %206 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %205, align 8
  call void %206(%class.SkRefCntBase* nonnull %202) #16
  br label %207

207:                                              ; preds = %187, %197, %201
  %208 = load %class.GrDirectContext*, %class.GrDirectContext** %190, align 8
  %209 = icmp eq %class.GrDirectContext* %208, null
  br i1 %209, label %220, label %210

210:                                              ; preds = %207
  %211 = getelementptr inbounds %class.GrDirectContext, %class.GrDirectContext* %208, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %212 = atomicrmw add i32* %211, i32 -1 acq_rel
  %213 = icmp eq i32 %212, 1
  br i1 %213, label %214, label %220

214:                                              ; preds = %210
  %215 = bitcast %class.GrDirectContext* %208 to %class.SkRefCntBase*
  %216 = bitcast %class.GrDirectContext* %208 to void (%class.SkRefCntBase*)***
  %217 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %216, align 8
  %218 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %217, i64 2
  %219 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %218, align 8
  call void %219(%class.SkRefCntBase* nonnull %215) #16
  br label %220

220:                                              ; preds = %207, %210, %214
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %188) #16
  %221 = load %class.GrDirectContext*, %class.GrDirectContext** %193, align 8
  %222 = icmp ne %class.GrDirectContext* %221, null
  %223 = load i64, i64* %134, align 8
  %224 = and i64 %223, 4294967294
  %225 = icmp eq i64 %224, 0
  br i1 %225, label %226, label %230

226:                                              ; preds = %230, %220
  %227 = phi i64 [ %223, %220 ], [ %235, %230 ]
  %228 = and i64 %227, 1
  %229 = icmp eq i64 %228, 0
  br i1 %229, label %242, label %239

230:                                              ; preds = %220, %230
  %231 = phi i64 [ %234, %230 ], [ 0, %220 ]
  %232 = load %"struct.GrVkExtensions::Info"*, %"struct.GrVkExtensions::Info"** %133, align 8
  %233 = getelementptr inbounds %"struct.GrVkExtensions::Info", %"struct.GrVkExtensions::Info"* %232, i64 %231, i32 0
  call void @_ZN8SkStringD1Ev(%class.SkString* %233) #16
  %234 = add nuw nsw i64 %231, 1
  %235 = load i64, i64* %134, align 8
  %236 = lshr i64 %235, 1
  %237 = and i64 %236, 2147483647
  %238 = icmp ult i64 %234, %237
  br i1 %238, label %230, label %226

239:                                              ; preds = %226
  %240 = bitcast %class.GrVkExtensions* %6 to i8**
  %241 = load i8*, i8** %240, align 8
  call void @_Z7sk_freePv(i8* %241) #16
  br label %242

242:                                              ; preds = %226, %239
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %132) #16
  %243 = load i8**, i8*** %92, align 8
  %244 = icmp eq i8** %243, null
  br i1 %244, label %248, label %245

245:                                              ; preds = %242
  %246 = ptrtoint i8** %243 to i64
  store i64 %246, i64* %130, align 8
  %247 = bitcast i8** %243 to i8*
  call void @_ZdlPv(i8* %247) #15
  br label %248

248:                                              ; preds = %245, %242
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %91) #16
  %249 = load %"struct.std::__1::__function::__policy"*, %"struct.std::__1::__function::__policy"** %19, align 8
  %250 = getelementptr inbounds %"struct.std::__1::__function::__policy", %"struct.std::__1::__function::__policy"* %249, i64 0, i32 1
  %251 = load void (i8*)*, void (i8*)** %250, align 8
  %252 = icmp eq void (i8*)* %251, null
  br i1 %252, label %256, label %253

253:                                              ; preds = %248
  %254 = getelementptr inbounds %struct.GrVkBackendContext, %struct.GrVkBackendContext* %3, i64 0, i32 16, i32 0, i32 0, i32 0
  %255 = load i8*, i8** %254, align 8
  call void %251(i8* %255) #16
  br label %256

256:                                              ; preds = %253, %248
  %257 = getelementptr inbounds %struct.GrVkBackendContext, %struct.GrVkBackendContext* %3, i64 0, i32 15, i32 0
  %258 = load %class.GrVkMemoryAllocator*, %class.GrVkMemoryAllocator** %257, align 8
  %259 = icmp eq %class.GrVkMemoryAllocator* %258, null
  br i1 %259, label %270, label %260

260:                                              ; preds = %256
  %261 = getelementptr inbounds %class.GrVkMemoryAllocator, %class.GrVkMemoryAllocator* %258, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %262 = atomicrmw add i32* %261, i32 -1 acq_rel
  %263 = icmp eq i32 %262, 1
  br i1 %263, label %264, label %270

264:                                              ; preds = %260
  %265 = bitcast %class.GrVkMemoryAllocator* %258 to %class.SkRefCntBase*
  %266 = bitcast %class.GrVkMemoryAllocator* %258 to void (%class.SkRefCntBase*)***
  %267 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %266, align 8
  %268 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %267, i64 2
  %269 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %268, align 8
  call void %269(%class.SkRefCntBase* nonnull %265) #16
  br label %270

270:                                              ; preds = %256, %260, %264
  call void @llvm.lifetime.end.p0i8(i64 136, i8* nonnull %9) #16
  ret i1 %222

271:                                              ; preds = %123, %335
  %272 = phi i64 [ %338, %335 ], [ %125, %123 ]
  %273 = phi i8** [ %337, %335 ], [ %126, %123 ]
  %274 = phi i8** [ %336, %335 ], [ %127, %123 ]
  %275 = phi %"class.base::BasicStringPiece"* [ %333, %335 ], [ %124, %123 ]
  %276 = bitcast %"class.base::BasicStringPiece"* %275 to i64*
  %277 = load i64, i64* %276, align 8
  %278 = icmp ult i8** %274, %273
  %279 = ptrtoint i8** %273 to i64
  br i1 %278, label %280, label %284

280:                                              ; preds = %271
  %281 = bitcast i8** %274 to i64*
  store i64 %277, i64* %281, align 8
  %282 = getelementptr inbounds i8*, i8** %274, i64 1
  %283 = ptrtoint i8** %282 to i64
  store i64 %283, i64* %130, align 8
  br label %332

284:                                              ; preds = %271
  %285 = ptrtoint i8** %274 to i64
  %286 = load i64, i64* %104, align 8
  %287 = sub i64 %285, %286
  %288 = ashr exact i64 %287, 3
  %289 = add nsw i64 %288, 1
  %290 = icmp ugt i64 %289, 2305843009213693951
  br i1 %290, label %291, label %293

291:                                              ; preds = %284
  %292 = bitcast %"class.std::__1::vector.107"* %5 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %292) #17
  unreachable

293:                                              ; preds = %284
  %294 = sub i64 %279, %286
  %295 = ashr exact i64 %294, 3
  %296 = icmp ult i64 %295, 1152921504606846975
  br i1 %296, label %297, label %305

297:                                              ; preds = %293
  %298 = ashr exact i64 %294, 2
  %299 = icmp ult i64 %298, %289
  %300 = select i1 %299, i64 %289, i64 %298
  %301 = icmp eq i64 %300, 0
  br i1 %301, label %310, label %302

302:                                              ; preds = %297
  %303 = icmp ugt i64 %300, 2305843009213693951
  br i1 %303, label %304, label %305

304:                                              ; preds = %302
  call void @abort() #17
  unreachable

305:                                              ; preds = %302, %293
  %306 = phi i64 [ %300, %302 ], [ 2305843009213693951, %293 ]
  %307 = shl i64 %306, 3
  %308 = call i8* @_Znwm(i64 %307) #15
  %309 = bitcast i8* %308 to i8**
  br label %310

310:                                              ; preds = %305, %297
  %311 = phi i64 [ %306, %305 ], [ 0, %297 ]
  %312 = phi i8** [ %309, %305 ], [ null, %297 ]
  %313 = getelementptr inbounds i8*, i8** %312, i64 %288
  %314 = getelementptr inbounds i8*, i8** %312, i64 %311
  %315 = ptrtoint i8** %314 to i64
  %316 = bitcast i8** %313 to i64*
  store i64 %277, i64* %316, align 8
  %317 = getelementptr inbounds i8*, i8** %313, i64 1
  %318 = ptrtoint i8** %317 to i64
  %319 = sub i64 %272, %286
  %320 = ashr exact i64 %319, 3
  %321 = sub nsw i64 0, %320
  %322 = getelementptr inbounds i8*, i8** %313, i64 %321
  %323 = ptrtoint i8** %322 to i64
  %324 = icmp sgt i64 %319, 0
  br i1 %324, label %325, label %328

325:                                              ; preds = %310
  %326 = bitcast i8** %322 to i8*
  %327 = inttoptr i64 %286 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %326, i8* align 8 %327, i64 %319, i1 false) #16
  br label %328

328:                                              ; preds = %325, %310
  store i64 %323, i64* %104, align 8
  store i64 %318, i64* %130, align 8
  store i64 %315, i64* %103, align 8
  %329 = icmp eq i64 %286, 0
  br i1 %329, label %332, label %330

330:                                              ; preds = %328
  %331 = inttoptr i64 %286 to i8*
  call void @_ZdlPv(i8* %331) #15
  br label %332

332:                                              ; preds = %280, %328, %330
  %333 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %275, i64 1
  %334 = icmp eq %"class.base::BasicStringPiece"* %333, %128
  br i1 %334, label %131, label %335

335:                                              ; preds = %332
  %336 = load i8**, i8*** %93, align 8
  %337 = load i8**, i8*** %94, align 8
  %338 = ptrtoint i8** %336 to i64
  br label %271
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

declare void @_ZN3gpu25CreateGrVkMemoryAllocatorEPNS_17VulkanDeviceQueueE(%class.sk_sp.143* sret, %"class.gpu::VulkanDeviceQueue"*) local_unnamed_addr #3

declare void @_ZN14GrVkExtensions4initENSt3__18functionIFPFvvEPKcP12VkInstance_TP10VkDevice_TEEES7_P18VkPhysicalDevice_TjPKS5_jSF_(%class.GrVkExtensions*, %"class.std::__1::function"*, %struct.VkInstance_T*, %struct.VkPhysicalDevice_T*, i32, i8**, i32, i8**) local_unnamed_addr #3

declare void @_ZN15GrDirectContext10MakeVulkanERK18GrVkBackendContextRK16GrContextOptions(%class.sk_sp* sret, %struct.GrVkBackendContext* dereferenceable(136), %struct.GrContextOptions* dereferenceable(240)) local_unnamed_addr #3

declare void @_ZN3gpu17VulkanFenceHelper7DestroyEv(%"class.gpu::VulkanFenceHelper"*) local_unnamed_addr #3

declare void @_ZN15GrDirectContext33releaseResourcesAndAbandonContextEv(%class.GrDirectContext*) local_unnamed_addr #3

declare void @_ZN3gpu17VulkanDeviceQueue7DestroyEv(%"class.gpu::VulkanDeviceQueue"*) local_unnamed_addr #3

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden %"class.gpu::VulkanImplementation"* @_ZN3viz30VulkanInProcessContextProvider23GetVulkanImplementationEv(%"class.viz::VulkanInProcessContextProvider"* nocapture readonly) unnamed_addr #6 align 2 {
  %2 = getelementptr inbounds %"class.viz::VulkanInProcessContextProvider", %"class.viz::VulkanInProcessContextProvider"* %0, i64 0, i32 2
  %3 = load %"class.gpu::VulkanImplementation"*, %"class.gpu::VulkanImplementation"** %2, align 8
  ret %"class.gpu::VulkanImplementation"* %3
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden %"class.gpu::VulkanDeviceQueue"* @_ZN3viz30VulkanInProcessContextProvider14GetDeviceQueueEv(%"class.viz::VulkanInProcessContextProvider"* nocapture readonly) unnamed_addr #6 align 2 {
  %2 = getelementptr inbounds %"class.viz::VulkanInProcessContextProvider", %"class.viz::VulkanInProcessContextProvider"* %0, i64 0, i32 3, i32 0, i32 0, i32 0
  %3 = load %"class.gpu::VulkanDeviceQueue"*, %"class.gpu::VulkanDeviceQueue"** %2, align 8
  ret %"class.gpu::VulkanDeviceQueue"* %3
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden %class.GrDirectContext* @_ZN3viz30VulkanInProcessContextProvider12GetGrContextEv(%"class.viz::VulkanInProcessContextProvider"* nocapture readonly) unnamed_addr #6 align 2 {
  %2 = getelementptr inbounds %"class.viz::VulkanInProcessContextProvider", %"class.viz::VulkanInProcessContextProvider"* %0, i64 0, i32 1, i32 0
  %3 = load %class.GrDirectContext*, %class.GrDirectContext** %2, align 8
  ret %class.GrDirectContext* %3
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden noalias %class.GrVkSecondaryCBDrawContext* @_ZN3viz30VulkanInProcessContextProvider27GetGrSecondaryCBDrawContextEv(%"class.viz::VulkanInProcessContextProvider"* nocapture readnone) unnamed_addr #7 align 2 {
  ret %class.GrVkSecondaryCBDrawContext* null
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @_ZN3viz30VulkanInProcessContextProvider28EnqueueSecondaryCBSemaphoresENSt3__16vectorIP13VkSemaphore_TNS1_9allocatorIS4_EEEE(%"class.viz::VulkanInProcessContextProvider"* nocapture, %"class.std::__1::vector.145"* nocapture) unnamed_addr #7 align 2 {
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @_ZN3viz30VulkanInProcessContextProvider32EnqueueSecondaryCBPostSubmitTaskEN4base12OnceCallbackIFvvEEE(%"class.viz::VulkanInProcessContextProvider"* nocapture, %"class.base::OnceCallback.152"* nocapture) unnamed_addr #7 align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZNK3viz30VulkanInProcessContextProvider21GetSyncCpuMemoryLimitEv(%"class.viz::VulkanInProcessContextProvider"* nocapture readonly) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.viz::VulkanInProcessContextProvider", %"class.viz::VulkanInProcessContextProvider"* %0, i64 0, i32 5
  %3 = load i32, i32* %2, align 4
  %4 = icmp eq i32 %3, 0
  br i1 %4, label %14, label %5

5:                                                ; preds = %1
  %6 = tail call i64 @_ZN4base9TimeTicks3NowEv() #16
  %7 = getelementptr inbounds %"class.viz::VulkanInProcessContextProvider", %"class.viz::VulkanInProcessContextProvider"* %0, i64 0, i32 7, i32 0, i32 0
  %8 = load i64, i64* %7, align 8
  %9 = icmp slt i64 %6, %8
  br i1 %9, label %14, label %10

10:                                               ; preds = %5
  %11 = load i32, i32* %2, align 4
  %12 = zext i32 %11 to i64
  %13 = shl nuw i64 %12, 32
  br label %14

14:                                               ; preds = %10, %5, %1
  %15 = phi i64 [ 0, %1 ], [ 1, %5 ], [ 1, %10 ]
  %16 = phi i64 [ 0, %1 ], [ 0, %5 ], [ %13, %10 ]
  %17 = or i64 %16, %15
  ret i64 %17
}

declare i64 @_ZN4base9TimeTicks3NowEv() local_unnamed_addr #3

declare void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* sret, i8*, i32, i8*) local_unnamed_addr #3

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #4

; Function Attrs: argmemonly nofree nounwind readonly
declare i64 @strlen(i8* nocapture) local_unnamed_addr #8

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void ()* @_ZNSt3__110__function16__policy_invokerIFPFvvEPKcP12VkInstance_TP10VkDevice_TEE12__call_emptyEPKNS0_16__policy_storageES5_S7_S9_(%"union.std::__1::__function::__policy_storage"*, i8*, %struct.VkInstance_T*, %struct.VkDevice_T*) #0 comdat align 2 {
  tail call void @_ZNSt3__125__throw_bad_function_callEv() #18
  unreachable
}

; Function Attrs: inlinehint noreturn nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__125__throw_bad_function_callEv() local_unnamed_addr #9 comdat {
  tail call void @abort() #17
  unreachable
}

; Function Attrs: noreturn nounwind
declare void @abort() local_unnamed_addr #10

declare void @_Z7sk_freePv(i8*) local_unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN8SkStringD1Ev(%class.SkString*) unnamed_addr #4

; Function Attrs: nounwind readnone speculatable
declare { i64, i1 } @llvm.sadd.with.overflow.i64(i64, i64) #11

; Function Attrs: nounwind
declare void @_ZN4base22MemoryPressureListenerD1Ev(%"class.base::MemoryPressureListener"*) unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal7InvokerINS0_9BindStateIMN3viz30VulkanInProcessContextProviderEFvNS_22MemoryPressureListener19MemoryPressureLevelEEJNS0_17UnretainedWrapperIS4_EEEEEFvS6_EE3RunEPNS0_13BindStateBaseES6_(%"class.base::internal::BindStateBase"*, i32) #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1
  %4 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 2
  %5 = bitcast void (%"class.base::internal::BindStateBase"*)** %4 to i8**
  %6 = load i8*, i8** %5, align 8
  %7 = bitcast %"class.base::internal::BindStateBase"* %3 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 1
  %10 = bitcast void ()** %9 to i64*
  %11 = load i64, i64* %10, align 8
  %12 = getelementptr inbounds i8, i8* %6, i64 %11
  %13 = bitcast i8* %12 to %"class.viz::VulkanInProcessContextProvider"*
  %14 = and i64 %8, 1
  %15 = icmp eq i64 %14, 0
  br i1 %15, label %23, label %16

16:                                               ; preds = %2
  %17 = bitcast i8* %12 to i8**
  %18 = load i8*, i8** %17, align 8
  %19 = add i64 %8, -1
  %20 = getelementptr i8, i8* %18, i64 %19
  %21 = bitcast i8* %20 to void (%"class.viz::VulkanInProcessContextProvider"*, i32)**
  %22 = load void (%"class.viz::VulkanInProcessContextProvider"*, i32)*, void (%"class.viz::VulkanInProcessContextProvider"*, i32)** %21, align 8
  br label %25

23:                                               ; preds = %2
  %24 = inttoptr i64 %8 to void (%"class.viz::VulkanInProcessContextProvider"*, i32)*
  br label %25

25:                                               ; preds = %16, %23
  %26 = phi void (%"class.viz::VulkanInProcessContextProvider"*, i32)* [ %22, %16 ], [ %24, %23 ]
  tail call void %26(%"class.viz::VulkanInProcessContextProvider"* %13, i32 %1) #16
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal9BindStateIMN3viz30VulkanInProcessContextProviderEFvNS_22MemoryPressureListener19MemoryPressureLevelEEJNS0_17UnretainedWrapperIS3_EEEE7DestroyEPKNS0_13BindStateBaseE(%"class.base::internal::BindStateBase"*) #0 comdat align 2 {
  %2 = icmp eq %"class.base::internal::BindStateBase"* %0, null
  br i1 %2, label %5, label %3

3:                                                ; preds = %1
  %4 = bitcast %"class.base::internal::BindStateBase"* %0 to i8*
  tail call void @_ZdlPv(i8* %4) #15
  br label %5

5:                                                ; preds = %3, %1
  ret void
}

declare void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_E(%"class.base::internal::BindStateBase"*, void ()*, void (%"class.base::internal::BindStateBase"*)*) unnamed_addr #3

declare void @_ZN4base22MemoryPressureListenerC1ERKNS_8LocationERKNS_17RepeatingCallbackIFvNS0_19MemoryPressureLevelEEEE(%"class.base::MemoryPressureListener"*, %"class.base::Location"* dereferenceable(32), %"class.base::RepeatingCallback"* dereferenceable(8)) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define internal void ()* @"_ZNSt3__110__function16__policy_invokerIFPFvvEPKcP12VkInstance_TP10VkDevice_TEE11__call_implINS0_20__default_alloc_funcIZN3viz30VulkanInProcessContextProvider19InitializeGrContextERK16GrContextOptionsE3$_0SA_EEEES3_PKNS0_16__policy_storageES5_S7_S9_"(%"union.std::__1::__function::__policy_storage"* nocapture readnone, i8*, %struct.VkInstance_T*, %struct.VkDevice_T*) #0 align 2 {
  %5 = icmp eq %struct.VkDevice_T* %3, null
  br i1 %5, label %17, label %6

6:                                                ; preds = %4
  %7 = tail call i32 @strcmp(i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.7, i64 0, i64 0), i8* %1) #19
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %22, label %9

9:                                                ; preds = %6
  %10 = tail call i32 @strcmp(i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.8, i64 0, i64 0), i8* %1) #19
  %11 = icmp eq i32 %10, 0
  br i1 %11, label %22, label %12

12:                                               ; preds = %9
  %13 = tail call %"struct.gpu::VulkanFunctionPointers"* @_ZN3gpu25GetVulkanFunctionPointersEv() #16
  %14 = getelementptr inbounds %"struct.gpu::VulkanFunctionPointers", %"struct.gpu::VulkanFunctionPointers"* %13, i64 0, i32 11, i32 0
  %15 = load void ()* (%struct.VkDevice_T*, i8*)*, void ()* (%struct.VkDevice_T*, i8*)** %14, align 8
  %16 = tail call void ()* %15(%struct.VkDevice_T* nonnull %3, i8* %1) #16
  br label %22

17:                                               ; preds = %4
  %18 = tail call %"struct.gpu::VulkanFunctionPointers"* @_ZN3gpu25GetVulkanFunctionPointersEv() #16
  %19 = getelementptr inbounds %"struct.gpu::VulkanFunctionPointers", %"struct.gpu::VulkanFunctionPointers"* %18, i64 0, i32 1, i32 0
  %20 = load void ()* (%struct.VkInstance_T*, i8*)*, void ()* (%struct.VkInstance_T*, i8*)** %19, align 8
  %21 = tail call void ()* %20(%struct.VkInstance_T* %2, i8* %1) #16
  br label %22

22:                                               ; preds = %6, %9, %12, %17
  %23 = phi void ()* [ %16, %12 ], [ %21, %17 ], [ bitcast (i32 (%struct.VkQueue_T*, i32, %struct.VkSubmitInfo*, %struct.VkFence_T*)* @_ZN3gpu15QueueSubmitHookEP9VkQueue_TjPK12VkSubmitInfoP9VkFence_T to void ()*), %6 ], [ bitcast (i32 (%struct.VkDevice_T*, %struct.VkPipelineCache_T*, i32, %struct.VkGraphicsPipelineCreateInfo*, %struct.VkAllocationCallbacks*, %struct.VkPipeline_T**)* @_ZN3gpu27CreateGraphicsPipelinesHookEP10VkDevice_TP17VkPipelineCache_TjPK28VkGraphicsPipelineCreateInfoPK21VkAllocationCallbacksPP12VkPipeline_T to void ()*), %9 ]
  ret void ()* %23
}

; Function Attrs: nofree nounwind readonly
declare i32 @strcmp(i8* nocapture, i8* nocapture) local_unnamed_addr #12

declare i32 @_ZN3gpu15QueueSubmitHookEP9VkQueue_TjPK12VkSubmitInfoP9VkFence_T(%struct.VkQueue_T*, i32, %struct.VkSubmitInfo*, %struct.VkFence_T*) #3

declare i32 @_ZN3gpu27CreateGraphicsPipelinesHookEP10VkDevice_TP17VkPipelineCache_TjPK28VkGraphicsPipelineCreateInfoPK21VkAllocationCallbacksPP12VkPipeline_T(%struct.VkDevice_T*, %struct.VkPipelineCache_T*, i32, %struct.VkGraphicsPipelineCreateInfo*, %struct.VkAllocationCallbacks*, %struct.VkPipeline_T**) #3

declare %"struct.gpu::VulkanFunctionPointers"* @_ZN3gpu25GetVulkanFunctionPointersEv() local_unnamed_addr #3

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #13

; Function Attrs: nounwind
declare void @_ZN3gpu17VulkanDeviceQueueD1Ev(%"class.gpu::VulkanDeviceQueue"*) unnamed_addr #4

; Function Attrs: nofree nounwind readonly
declare i32 @bcmp(i8* nocapture, i8* nocapture, i64) local_unnamed_addr #14

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { argmemonly nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { inlinehint noreturn nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #11 = { nounwind readnone speculatable }
attributes #12 = { nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #13 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #14 = { nofree nounwind readonly }
attributes #15 = { builtin nounwind }
attributes #16 = { nounwind }
attributes #17 = { noreturn nounwind }
attributes #18 = { noreturn }
attributes #19 = { nounwind readonly }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!3, !5}
!3 = distinct !{!3, !4, !"_ZN4base8internal8BindImplINS_17RepeatingCallbackEMN3viz30VulkanInProcessContextProviderEFvNS_22MemoryPressureListener19MemoryPressureLevelEEJNS0_17UnretainedWrapperIS4_EEEEEDcOT0_DpOT1_: argument 0"}
!4 = distinct !{!4, !"_ZN4base8internal8BindImplINS_17RepeatingCallbackEMN3viz30VulkanInProcessContextProviderEFvNS_22MemoryPressureListener19MemoryPressureLevelEEJNS0_17UnretainedWrapperIS4_EEEEEDcOT0_DpOT1_"}
!5 = distinct !{!5, !6, !"_ZN4base13BindRepeatingIMN3viz30VulkanInProcessContextProviderEFvNS_22MemoryPressureListener19MemoryPressureLevelEEJNS_8internal17UnretainedWrapperIS2_EEEEENS_17RepeatingCallbackINS7_14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSC_DpOSD_: argument 0"}
!6 = distinct !{!6, !"_ZN4base13BindRepeatingIMN3viz30VulkanInProcessContextProviderEFvNS_22MemoryPressureListener19MemoryPressureLevelEEJNS_8internal17UnretainedWrapperIS2_EEEEENS_17RepeatingCallbackINS7_14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSC_DpOSD_"}
!7 = !{!"branch_weights", i32 1, i32 2000}
