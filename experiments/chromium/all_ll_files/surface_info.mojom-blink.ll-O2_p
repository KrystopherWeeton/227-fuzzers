; ModuleID = 'gen/services/viz/public/mojom/compositing/surface_info.mojom-blink.cc'
source_filename = "gen/services/viz/public/mojom/compositing/surface_info.mojom-blink.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.viz::mojom::blink::SurfaceInfo" = type <{ %"class.viz::SurfaceId", float, %"class.gfx::Size", [4 x i8] }>
%"class.viz::SurfaceId" = type { %"class.viz::FrameSinkId", %"class.viz::LocalSurfaceId" }
%"class.viz::FrameSinkId" = type { i32, i32 }
%"class.viz::LocalSurfaceId" = type { i32, i32, %"class.base::UnguessableToken" }
%"class.base::UnguessableToken" = type { %"class.base::Token" }
%"class.base::Token" = type { i64, i64 }
%"class.gfx::Size" = type { i32, i32 }
%"class.perfetto::TracedValue" = type <{ %"class.perfetto::protos::pbzero::DebugAnnotation"*, %"class.perfetto::internal::CheckedScope", [7 x i8] }>
%"class.perfetto::protos::pbzero::DebugAnnotation" = type { %"class.protozero::Message.base", [7 x i8] }
%"class.protozero::Message.base" = type <{ %"class.protozero::ScatteredStreamWriter"*, %"class.protozero::MessageArena"*, %"class.protozero::Message"*, i8*, i32, i32, i8 }>
%"class.protozero::ScatteredStreamWriter" = type { %"class.protozero::ScatteredStreamWriter::Delegate"*, %"struct.protozero::ContiguousMemoryRange", i8*, i64 }
%"class.protozero::ScatteredStreamWriter::Delegate" = type { i32 (...)** }
%"struct.protozero::ContiguousMemoryRange" = type { i8*, i8* }
%"class.protozero::MessageArena" = type { %"class.std::__1::list" }
%"class.std::__1::list" = type { %"class.std::__1::__list_imp" }
%"class.std::__1::__list_imp" = type { %"struct.std::__1::__list_node_base", %"class.std::__1::__compressed_pair" }
%"struct.std::__1::__list_node_base" = type { %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"* }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { i64 }
%"class.protozero::Message" = type <{ %"class.protozero::ScatteredStreamWriter"*, %"class.protozero::MessageArena"*, %"class.protozero::Message"*, i8*, i32, i32, i8, [7 x i8] }>
%"class.perfetto::internal::CheckedScope" = type { i8 }
%"class.perfetto::TracedDictionary" = type <{ %"class.protozero::Message"*, i32, %"class.perfetto::internal::CheckedScope", [3 x i8] }>
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.1" }
%"class.std::__1::__compressed_pair.1" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"struct.std::__1::__compressed_pair_elem.2" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }
%"class.mojo::internal::ValidationContext" = type <{ %"class.mojo::Message"*, i8*, i32, [4 x i8], i64, i64, i32, i32, i32, i32, i32, [4 x i8] }>
%"class.mojo::Message" = type { %"class.mojo::ScopedHandleBase", %"class.mojo::internal::Buffer", %"class.std::__1::vector", %"class.std::__1::vector.12", %"class.mojo::ConnectionGroup::Ref"*, i8, i8, i8* }
%"class.mojo::ScopedHandleBase" = type { %"class.mojo::MessageHandle" }
%"class.mojo::MessageHandle" = type { i64 }
%"class.mojo::internal::Buffer" = type { %"class.mojo::MessageHandle", i64, i8*, i64, i64 }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.mojo::ScopedHandleBase.6"*, %"class.mojo::ScopedHandleBase.6"*, %"class.std::__1::__compressed_pair.7" }
%"class.mojo::ScopedHandleBase.6" = type { %"class.mojo::Handle" }
%"class.mojo::Handle" = type { i32 }
%"class.std::__1::__compressed_pair.7" = type { %"struct.std::__1::__compressed_pair_elem.8" }
%"struct.std::__1::__compressed_pair_elem.8" = type { %"class.mojo::ScopedHandleBase.6"* }
%"class.std::__1::vector.12" = type { %"class.std::__1::__vector_base.13" }
%"class.std::__1::__vector_base.13" = type { %"class.mojo::ScopedInterfaceEndpointHandle"*, %"class.mojo::ScopedInterfaceEndpointHandle"*, %"class.std::__1::__compressed_pair.14" }
%"class.mojo::ScopedInterfaceEndpointHandle" = type { %class.scoped_refptr }
%class.scoped_refptr = type { %"class.mojo::ScopedInterfaceEndpointHandle::State"* }
%"class.mojo::ScopedInterfaceEndpointHandle::State" = type opaque
%"class.std::__1::__compressed_pair.14" = type { %"struct.std::__1::__compressed_pair_elem.15" }
%"struct.std::__1::__compressed_pair_elem.15" = type { %"class.mojo::ScopedInterfaceEndpointHandle"* }
%"class.mojo::ConnectionGroup::Ref" = type { i32, %class.scoped_refptr.19 }
%class.scoped_refptr.19 = type { %"class.mojo::ConnectionGroup"* }
%"class.mojo::ConnectionGroup" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe", [4 x i8], %"class.base::RepeatingCallback", %class.scoped_refptr.23, %"class.mojo::ConnectionGroup::Ref", %"struct.std::__1::atomic.25", [4 x i8] }>
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.20" }
%"struct.std::__1::__atomic_base.20" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.base::RepeatingCallback" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::internal::CallbackBaseCopyable" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr.21 }
%class.scoped_refptr.21 = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe.22", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe.22" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%class.scoped_refptr.23 = type { %"class.base::SequencedTaskRunner"* }
%"class.base::SequencedTaskRunner" = type { %"class.base::TaskRunner.base", [4 x i8] }
%"class.base::TaskRunner.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.24" }>
%"class.base::RefCountedThreadSafe.24" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"struct.std::__1::atomic.25" = type { %"struct.std::__1::__atomic_base.26" }
%"struct.std::__1::__atomic_base.26" = type { %"struct.std::__1::__atomic_base.27" }
%"struct.std::__1::__atomic_base.27" = type { %"struct.std::__1::__cxx_atomic_impl.28" }
%"struct.std::__1::__cxx_atomic_impl.28" = type { %"struct.std::__1::__cxx_atomic_base_impl.29" }
%"struct.std::__1::__cxx_atomic_base_impl.29" = type { i32 }
%"class.viz::mojom::internal::SurfaceInfo_Data" = type { %"struct.mojo::internal::StructHeader", %"struct.mojo::internal::Pointer", float, [4 x i8], %"struct.mojo::internal::Pointer.30" }
%"struct.mojo::internal::StructHeader" = type { i32, i32 }
%"struct.mojo::internal::Pointer" = type { i64 }
%"struct.mojo::internal::Pointer.30" = type { i64 }
%"class.mojo::StructPtr" = type { %"class.std::__1::unique_ptr" }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair.31" }
%"class.std::__1::__compressed_pair.31" = type { %"struct.std::__1::__compressed_pair_elem.32" }
%"struct.std::__1::__compressed_pair_elem.32" = type { %"class.viz::mojom::blink::SurfaceInfo"* }
%"class.mojo_base::mojom::internal::UnguessableToken_Data" = type { %"struct.mojo::internal::StructHeader", i64, i64 }

@.str = private unnamed_addr constant [11 x i8] c"surface_id\00", align 1
@.str.1 = private unnamed_addr constant [8 x i8] c"<value>\00", align 1
@.str.2 = private unnamed_addr constant [20 x i8] c"device_scale_factor\00", align 1
@.str.3 = private unnamed_addr constant [15 x i8] c"size_in_pixels\00", align 1

@_ZN3viz5mojom5blink11SurfaceInfoC1Ev = hidden unnamed_addr alias void (%"class.viz::mojom::blink::SurfaceInfo"*), void (%"class.viz::mojom::blink::SurfaceInfo"*)* @_ZN3viz5mojom5blink11SurfaceInfoC2Ev
@_ZN3viz5mojom5blink11SurfaceInfoC1ERKNS_9SurfaceIdEfRKN3gfx4SizeE = hidden unnamed_addr alias void (%"class.viz::mojom::blink::SurfaceInfo"*, %"class.viz::SurfaceId"*, float, %"class.gfx::Size"*), void (%"class.viz::mojom::blink::SurfaceInfo"*, %"class.viz::SurfaceId"*, float, %"class.gfx::Size"*)* @_ZN3viz5mojom5blink11SurfaceInfoC2ERKNS_9SurfaceIdEfRKN3gfx4SizeE
@_ZN3viz5mojom5blink11SurfaceInfoD1Ev = hidden unnamed_addr alias void (%"class.viz::mojom::blink::SurfaceInfo"*), void (%"class.viz::mojom::blink::SurfaceInfo"*)* @_ZN3viz5mojom5blink11SurfaceInfoD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3viz5mojom5blink11SurfaceInfoC2Ev(%"class.viz::mojom::blink::SurfaceInfo"* nocapture) unnamed_addr #0 align 2 {
  %2 = bitcast %"class.viz::mojom::blink::SurfaceInfo"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %2, i8 0, i64 44, i1 false)
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3viz5mojom5blink11SurfaceInfoC2ERKNS_9SurfaceIdEfRKN3gfx4SizeE(%"class.viz::mojom::blink::SurfaceInfo"* nocapture, %"class.viz::SurfaceId"* nocapture readonly dereferenceable(32), float, %"class.gfx::Size"* nocapture readonly dereferenceable(8)) unnamed_addr #0 align 2 {
  %5 = getelementptr inbounds %"class.viz::mojom::blink::SurfaceInfo", %"class.viz::mojom::blink::SurfaceInfo"* %0, i64 0, i32 0, i32 0, i32 0
  %6 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %1, i64 0, i32 0, i32 0
  %7 = load i32, i32* %6, align 4
  store i32 %7, i32* %5, align 4
  %8 = getelementptr inbounds %"class.viz::mojom::blink::SurfaceInfo", %"class.viz::mojom::blink::SurfaceInfo"* %0, i64 0, i32 0, i32 0, i32 1
  %9 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %1, i64 0, i32 0, i32 1
  %10 = load i32, i32* %9, align 4
  store i32 %10, i32* %8, align 4
  %11 = getelementptr inbounds %"class.viz::mojom::blink::SurfaceInfo", %"class.viz::mojom::blink::SurfaceInfo"* %0, i64 0, i32 0, i32 1, i32 0
  %12 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %1, i64 0, i32 1, i32 0
  %13 = load i32, i32* %12, align 8
  store i32 %13, i32* %11, align 8
  %14 = getelementptr inbounds %"class.viz::mojom::blink::SurfaceInfo", %"class.viz::mojom::blink::SurfaceInfo"* %0, i64 0, i32 0, i32 1, i32 1
  %15 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %1, i64 0, i32 1, i32 1
  %16 = load i32, i32* %15, align 4
  store i32 %16, i32* %14, align 4
  %17 = getelementptr inbounds %"class.viz::mojom::blink::SurfaceInfo", %"class.viz::mojom::blink::SurfaceInfo"* %0, i64 0, i32 0, i32 1, i32 2
  %18 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %1, i64 0, i32 1, i32 2
  %19 = bitcast %"class.base::UnguessableToken"* %17 to i8*
  %20 = bitcast %"class.base::UnguessableToken"* %18 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %19, i8* align 8 %20, i64 16, i1 false) #6
  %21 = getelementptr inbounds %"class.viz::mojom::blink::SurfaceInfo", %"class.viz::mojom::blink::SurfaceInfo"* %0, i64 0, i32 1
  store float %2, float* %21, align 8
  %22 = getelementptr inbounds %"class.viz::mojom::blink::SurfaceInfo", %"class.viz::mojom::blink::SurfaceInfo"* %0, i64 0, i32 2
  %23 = bitcast %"class.gfx::Size"* %3 to i64*
  %24 = bitcast %"class.gfx::Size"* %22 to i64*
  %25 = load i64, i64* %23, align 4
  store i64 %25, i64* %24, align 4
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @_ZN3viz5mojom5blink11SurfaceInfoD2Ev(%"class.viz::mojom::blink::SurfaceInfo"* nocapture) unnamed_addr #2 align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK3viz5mojom5blink11SurfaceInfo14WriteIntoTraceEN8perfetto11TracedValueE(%"class.viz::mojom::blink::SurfaceInfo"* nocapture readonly, %"class.perfetto::TracedValue"*) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.perfetto::TracedValue", align 8
  %4 = alloca %"class.perfetto::TracedDictionary", align 8
  %5 = alloca %"class.perfetto::TracedValue", align 8
  %6 = alloca %"class.std::__1::basic_string", align 8
  %7 = alloca %"class.perfetto::TracedValue", align 8
  %8 = alloca %"class.perfetto::TracedValue", align 8
  %9 = alloca %"class.std::__1::basic_string", align 8
  %10 = bitcast %"class.perfetto::TracedDictionary"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %10) #6
  %11 = bitcast %"class.perfetto::TracedDictionary"* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %11, i8 -86, i64 16, i1 false)
  call void @_ZNO8perfetto11TracedValue15WriteDictionaryEv(%"class.perfetto::TracedDictionary"* nonnull sret %4, %"class.perfetto::TracedValue"* %1) #6
  call void @_ZN8perfetto16TracedDictionary7AddItemENS_12StaticStringE(%"class.perfetto::TracedValue"* nonnull sret %5, %"class.perfetto::TracedDictionary"* nonnull %4, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str, i64 0, i64 0)) #6
  %12 = bitcast %"class.std::__1::basic_string"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %12) #6
  %13 = bitcast %"class.std::__1::basic_string"* %6 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %14 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %13, i64 0, i32 1, i32 0
  store i8 7, i8* %14, align 1
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %12, i8* align 1 getelementptr inbounds ([8 x i8], [8 x i8]* @.str.1, i64 0, i64 0), i64 7, i1 false) #6
  %15 = getelementptr inbounds i8, i8* %12, i64 7
  store i8 0, i8* %15, align 1
  call void @_ZNO8perfetto11TracedValue11WriteStringERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.perfetto::TracedValue"* nonnull %5, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %6) #6
  %16 = load i8, i8* %14, align 1
  %17 = icmp slt i8 %16, 0
  br i1 %17, label %18, label %21

18:                                               ; preds = %2
  %19 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %20 = load i8*, i8** %19, align 8
  call void @_ZdlPv(i8* %20) #7
  br label %21

21:                                               ; preds = %18, %2
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %12) #6
  call void @_ZN8perfetto16TracedDictionary7AddItemENS_12StaticStringE(%"class.perfetto::TracedValue"* nonnull sret %7, %"class.perfetto::TracedDictionary"* nonnull %4, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.2, i64 0, i64 0)) #6
  %22 = getelementptr inbounds %"class.viz::mojom::blink::SurfaceInfo", %"class.viz::mojom::blink::SurfaceInfo"* %0, i64 0, i32 1
  %23 = bitcast %"class.perfetto::TracedValue"* %7 to i8*
  %24 = bitcast %"class.perfetto::TracedValue"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %24) #6
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %24, i8* nonnull align 8 %23, i64 16, i1 false) #6
  %25 = load float, float* %22, align 4
  %26 = fpext float %25 to double
  call void @_ZNO8perfetto11TracedValue11WriteDoubleEd(%"class.perfetto::TracedValue"* nonnull %3, double %26) #6
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %24) #6
  call void @_ZN8perfetto16TracedDictionary7AddItemENS_12StaticStringE(%"class.perfetto::TracedValue"* nonnull sret %8, %"class.perfetto::TracedDictionary"* nonnull %4, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.3, i64 0, i64 0)) #6
  %27 = bitcast %"class.std::__1::basic_string"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %27) #6
  %28 = bitcast %"class.std::__1::basic_string"* %9 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %29 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %28, i64 0, i32 1, i32 0
  store i8 7, i8* %29, align 1
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %27, i8* align 1 getelementptr inbounds ([8 x i8], [8 x i8]* @.str.1, i64 0, i64 0), i64 7, i1 false) #6
  %30 = getelementptr inbounds i8, i8* %27, i64 7
  store i8 0, i8* %30, align 1
  call void @_ZNO8perfetto11TracedValue11WriteStringERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.perfetto::TracedValue"* nonnull %8, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %9) #6
  %31 = load i8, i8* %29, align 1
  %32 = icmp slt i8 %31, 0
  br i1 %32, label %33, label %36

33:                                               ; preds = %21
  %34 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %9, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %35 = load i8*, i8** %34, align 8
  call void @_ZdlPv(i8* %35) #7
  br label %36

36:                                               ; preds = %21, %33
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %27) #6
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %10) #6
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

declare void @_ZNO8perfetto11TracedValue15WriteDictionaryEv(%"class.perfetto::TracedDictionary"* sret, %"class.perfetto::TracedValue"*) local_unnamed_addr #3

declare void @_ZN8perfetto16TracedDictionary7AddItemENS_12StaticStringE(%"class.perfetto::TracedValue"* sret, %"class.perfetto::TracedDictionary"*, i8*) local_unnamed_addr #3

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN3viz5mojom5blink11SurfaceInfo8ValidateEPKvPN4mojo8internal17ValidationContextE(i8*, %"class.mojo::internal::ValidationContext"*) local_unnamed_addr #0 align 2 {
  %3 = tail call zeroext i1 @_ZN3viz5mojom8internal16SurfaceInfo_Data8ValidateEPKvPN4mojo8internal17ValidationContextE(i8* %0, %"class.mojo::internal::ValidationContext"* %1) #6
  ret i1 %3
}

declare zeroext i1 @_ZN3viz5mojom8internal16SurfaceInfo_Data8ValidateEPKvPN4mojo8internal17ValidationContextE(i8*, %"class.mojo::internal::ValidationContext"*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN4mojo12StructTraitsIN3viz5mojom19SurfaceInfoDataViewENS_9StructPtrINS2_5blink11SurfaceInfoEEEE4ReadES3_PS7_(%"class.viz::mojom::internal::SurfaceInfo_Data"*, %"class.mojo::Message"*, %"class.mojo::StructPtr"* nocapture) local_unnamed_addr #0 align 2 {
  %4 = tail call i8* @_Znwm(i64 48) #7, !noalias !2
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %4, i8 0, i64 44, i1 false) #6, !noalias !2
  %5 = ptrtoint i8* %4 to i64
  %6 = getelementptr inbounds %"class.viz::mojom::internal::SurfaceInfo_Data", %"class.viz::mojom::internal::SurfaceInfo_Data"* %0, i64 0, i32 1
  %7 = getelementptr inbounds %"struct.mojo::internal::Pointer", %"struct.mojo::internal::Pointer"* %6, i64 0, i32 0
  %8 = load i64, i64* %7, align 8
  %9 = icmp eq i64 %8, 0
  %10 = bitcast %"struct.mojo::internal::Pointer"* %6 to i8*
  %11 = getelementptr inbounds i8, i8* %10, i64 %8
  br i1 %9, label %77, label %12

12:                                               ; preds = %3
  %13 = getelementptr inbounds i8, i8* %11, i64 8
  %14 = bitcast i8* %13 to i64*
  %15 = load i64, i64* %14, align 8
  %16 = icmp eq i64 %15, 0
  %17 = getelementptr inbounds i8, i8* %13, i64 %15
  br i1 %16, label %32, label %18

18:                                               ; preds = %12
  %19 = getelementptr inbounds i8, i8* %17, i64 8
  %20 = bitcast i8* %19 to i32*
  %21 = load i32, i32* %20, align 1
  %22 = getelementptr inbounds i8, i8* %17, i64 12
  %23 = bitcast i8* %22 to i32*
  %24 = load i32, i32* %23, align 1
  %25 = bitcast i8* %4 to i64*
  %26 = zext i32 %24 to i64
  %27 = shl nuw i64 %26, 32
  %28 = zext i32 %21 to i64
  %29 = or i64 %27, %28
  store i64 %29, i64* %25, align 4
  %30 = or i32 %24, %21
  %31 = icmp eq i32 %30, 0
  br i1 %31, label %106, label %32

32:                                               ; preds = %18, %12
  %33 = getelementptr inbounds i8, i8* %11, i64 16
  %34 = bitcast i8* %33 to i64*
  %35 = load i64, i64* %34, align 8
  %36 = icmp eq i64 %35, 0
  %37 = getelementptr inbounds i8, i8* %33, i64 %35
  br i1 %36, label %77, label %38

38:                                               ; preds = %32
  %39 = getelementptr inbounds i8, i8* %37, i64 8
  %40 = bitcast i8* %39 to i32*
  %41 = load i32, i32* %40, align 1
  %42 = getelementptr inbounds i8, i8* %4, i64 8
  %43 = bitcast i8* %42 to i32*
  store i32 %41, i32* %43, align 8
  %44 = getelementptr inbounds i8, i8* %37, i64 12
  %45 = bitcast i8* %44 to i32*
  %46 = load i32, i32* %45, align 1
  %47 = getelementptr inbounds i8, i8* %4, i64 12
  %48 = bitcast i8* %47 to i32*
  store i32 %46, i32* %48, align 4
  %49 = getelementptr inbounds i8, i8* %37, i64 16
  %50 = bitcast i8* %49 to i64*
  %51 = load i64, i64* %50, align 8
  %52 = icmp eq i64 %51, 0
  br i1 %52, label %61, label %53

53:                                               ; preds = %38
  %54 = getelementptr inbounds i8, i8* %49, i64 %51
  %55 = getelementptr inbounds i8, i8* %4, i64 16
  %56 = bitcast i8* %55 to %"class.base::UnguessableToken"*
  %57 = bitcast i8* %54 to %"class.mojo_base::mojom::internal::UnguessableToken_Data"*
  %58 = tail call zeroext i1 @_ZN4mojo12StructTraitsIN9mojo_base5mojom24UnguessableTokenDataViewEN4base16UnguessableTokenEE4ReadES3_PS5_(%"class.mojo_base::mojom::internal::UnguessableToken_Data"* nonnull %57, %"class.base::UnguessableToken"* %56) #6
  br i1 %58, label %59, label %106

59:                                               ; preds = %53
  %60 = load i32, i32* %43, align 8
  br label %61

61:                                               ; preds = %59, %38
  %62 = phi i32 [ %60, %59 ], [ %41, %38 ]
  %63 = icmp eq i32 %62, 0
  br i1 %63, label %106, label %64

64:                                               ; preds = %61
  %65 = load i32, i32* %48, align 4
  %66 = icmp eq i32 %65, 0
  br i1 %66, label %106, label %67

67:                                               ; preds = %64
  %68 = getelementptr inbounds i8, i8* %4, i64 16
  %69 = bitcast i8* %68 to i64*
  %70 = load i64, i64* %69, align 8
  %71 = icmp eq i64 %70, 0
  br i1 %71, label %72, label %77

72:                                               ; preds = %67
  %73 = getelementptr inbounds i8, i8* %4, i64 24
  %74 = bitcast i8* %73 to i64*
  %75 = load i64, i64* %74, align 8
  %76 = icmp eq i64 %75, 0
  br i1 %76, label %106, label %77

77:                                               ; preds = %72, %67, %32, %3
  %78 = getelementptr inbounds %"class.viz::mojom::internal::SurfaceInfo_Data", %"class.viz::mojom::internal::SurfaceInfo_Data"* %0, i64 0, i32 2
  %79 = bitcast float* %78 to i32*
  %80 = load i32, i32* %79, align 1
  %81 = getelementptr inbounds i8, i8* %4, i64 32
  %82 = bitcast i8* %81 to i32*
  store i32 %80, i32* %82, align 8
  %83 = getelementptr inbounds i8, i8* %4, i64 36
  %84 = getelementptr inbounds %"class.viz::mojom::internal::SurfaceInfo_Data", %"class.viz::mojom::internal::SurfaceInfo_Data"* %0, i64 0, i32 4
  %85 = getelementptr inbounds %"struct.mojo::internal::Pointer.30", %"struct.mojo::internal::Pointer.30"* %84, i64 0, i32 0
  %86 = load i64, i64* %85, align 8
  %87 = icmp eq i64 %86, 0
  %88 = bitcast %"struct.mojo::internal::Pointer.30"* %84 to i8*
  %89 = getelementptr inbounds i8, i8* %88, i64 %86
  br i1 %87, label %106, label %90

90:                                               ; preds = %77
  %91 = getelementptr inbounds i8, i8* %89, i64 8
  %92 = bitcast i8* %91 to i32*
  %93 = load i32, i32* %92, align 1
  %94 = icmp slt i32 %93, 0
  br i1 %94, label %106, label %95

95:                                               ; preds = %90
  %96 = getelementptr inbounds i8, i8* %89, i64 12
  %97 = bitcast i8* %96 to i32*
  %98 = load i32, i32* %97, align 1
  %99 = icmp slt i32 %98, 0
  br i1 %99, label %106, label %100

100:                                              ; preds = %95
  %101 = icmp sgt i32 %93, 0
  %102 = select i1 %101, i32 %93, i32 0
  %103 = bitcast i8* %83 to i32*
  store i32 %102, i32* %103, align 4
  %104 = getelementptr inbounds i8, i8* %4, i64 40
  %105 = bitcast i8* %104 to i32*
  store i32 %98, i32* %105, align 4
  br label %106

106:                                              ; preds = %72, %61, %64, %53, %18, %90, %95, %77, %100
  %107 = phi i8 [ 0, %90 ], [ 0, %95 ], [ 1, %77 ], [ 1, %100 ], [ 0, %72 ], [ 0, %18 ], [ 0, %53 ], [ 0, %64 ], [ 0, %61 ]
  %108 = getelementptr inbounds %"class.mojo::StructPtr", %"class.mojo::StructPtr"* %2, i64 0, i32 0, i32 0, i32 0, i32 0
  %109 = load %"class.viz::mojom::blink::SurfaceInfo"*, %"class.viz::mojom::blink::SurfaceInfo"** %108, align 8
  store %"class.viz::mojom::blink::SurfaceInfo"* null, %"class.viz::mojom::blink::SurfaceInfo"** %108, align 8
  %110 = icmp eq %"class.viz::mojom::blink::SurfaceInfo"* %109, null
  br i1 %110, label %111, label %114

111:                                              ; preds = %106
  %112 = bitcast %"class.mojo::StructPtr"* %2 to i64*
  store i64 %5, i64* %112, align 8
  %113 = icmp ne i8 %107, 0
  br label %122

114:                                              ; preds = %106
  %115 = bitcast %"class.viz::mojom::blink::SurfaceInfo"* %109 to i8*
  tail call void @_ZdlPv(i8* %115) #7
  %116 = bitcast %"class.mojo::StructPtr"* %2 to i64*
  %117 = load %"class.viz::mojom::blink::SurfaceInfo"*, %"class.viz::mojom::blink::SurfaceInfo"** %108, align 8
  store i64 %5, i64* %116, align 8
  %118 = icmp ne i8 %107, 0
  %119 = icmp eq %"class.viz::mojom::blink::SurfaceInfo"* %117, null
  br i1 %119, label %122, label %120

120:                                              ; preds = %114
  %121 = bitcast %"class.viz::mojom::blink::SurfaceInfo"* %117 to i8*
  tail call void @_ZdlPv(i8* %121) #7
  br label %122

122:                                              ; preds = %111, %114, %120
  %123 = phi i1 [ %113, %111 ], [ %118, %114 ], [ %118, %120 ]
  ret i1 %123
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #4

declare zeroext i1 @_ZN4mojo12StructTraitsIN9mojo_base5mojom24UnguessableTokenDataViewEN4base16UnguessableTokenEE4ReadES3_PS5_(%"class.mojo_base::mojom::internal::UnguessableToken_Data"*, %"class.base::UnguessableToken"*) local_unnamed_addr #3

declare void @_ZNO8perfetto11TracedValue11WriteStringERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.perfetto::TracedValue"*, %"class.std::__1::basic_string"* dereferenceable(24)) local_unnamed_addr #3

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #5

declare void @_ZNO8perfetto11TracedValue11WriteDoubleEd(%"class.perfetto::TracedValue"*, double) local_unnamed_addr #3

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nounwind }
attributes #7 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!3}
!3 = distinct !{!3, !4, !"_ZN3viz5mojom5blink11SurfaceInfo3NewIJEEEN4mojo9StructPtrIS2_EEDpOT_: argument 0"}
!4 = distinct !{!4, !"_ZN3viz5mojom5blink11SurfaceInfo3NewIJEEEN4mojo9StructPtrIS2_EEDpOT_"}
