; ModuleID = '../../third_party/libvpx/source/libvpx/vp8/common/x86/loopfilter_x86.c'
source_filename = "../../third_party/libvpx/source/libvpx/vp8/common/x86/loopfilter_x86.c"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.loop_filter_info = type { i8*, i8*, i8*, i8* }

; Function Attrs: nounwind ssp uwtable
define hidden void @vp8_loop_filter_mbh_sse2(i8*, i8*, i8*, i32, i32, %struct.loop_filter_info* nocapture readonly) local_unnamed_addr #0 {
  %7 = getelementptr inbounds %struct.loop_filter_info, %struct.loop_filter_info* %5, i64 0, i32 0
  %8 = load i8*, i8** %7, align 8
  %9 = getelementptr inbounds %struct.loop_filter_info, %struct.loop_filter_info* %5, i64 0, i32 2
  %10 = load i8*, i8** %9, align 8
  %11 = getelementptr inbounds %struct.loop_filter_info, %struct.loop_filter_info* %5, i64 0, i32 3
  %12 = load i8*, i8** %11, align 8
  tail call void @vp8_mbloop_filter_horizontal_edge_sse2(i8* %0, i32 %3, i8* %8, i8* %10, i8* %12) #2
  %13 = icmp eq i8* %1, null
  br i1 %13, label %18, label %14

14:                                               ; preds = %6
  %15 = load i8*, i8** %7, align 8
  %16 = load i8*, i8** %9, align 8
  %17 = load i8*, i8** %11, align 8
  tail call void @vp8_mbloop_filter_horizontal_edge_uv_sse2(i8* nonnull %1, i32 %4, i8* %15, i8* %16, i8* %17, i8* %2) #2
  br label %18

18:                                               ; preds = %6, %14
  ret void
}

declare void @vp8_mbloop_filter_horizontal_edge_sse2(i8*, i32, i8*, i8*, i8*) local_unnamed_addr #1

declare void @vp8_mbloop_filter_horizontal_edge_uv_sse2(i8*, i32, i8*, i8*, i8*, i8*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @vp8_loop_filter_mbv_sse2(i8*, i8*, i8*, i32, i32, %struct.loop_filter_info* nocapture readonly) local_unnamed_addr #0 {
  %7 = getelementptr inbounds %struct.loop_filter_info, %struct.loop_filter_info* %5, i64 0, i32 0
  %8 = load i8*, i8** %7, align 8
  %9 = getelementptr inbounds %struct.loop_filter_info, %struct.loop_filter_info* %5, i64 0, i32 2
  %10 = load i8*, i8** %9, align 8
  %11 = getelementptr inbounds %struct.loop_filter_info, %struct.loop_filter_info* %5, i64 0, i32 3
  %12 = load i8*, i8** %11, align 8
  tail call void @vp8_mbloop_filter_vertical_edge_sse2(i8* %0, i32 %3, i8* %8, i8* %10, i8* %12) #2
  %13 = icmp eq i8* %1, null
  br i1 %13, label %18, label %14

14:                                               ; preds = %6
  %15 = load i8*, i8** %7, align 8
  %16 = load i8*, i8** %9, align 8
  %17 = load i8*, i8** %11, align 8
  tail call void @vp8_mbloop_filter_vertical_edge_uv_sse2(i8* nonnull %1, i32 %4, i8* %15, i8* %16, i8* %17, i8* %2) #2
  br label %18

18:                                               ; preds = %6, %14
  ret void
}

declare void @vp8_mbloop_filter_vertical_edge_sse2(i8*, i32, i8*, i8*, i8*) local_unnamed_addr #1

declare void @vp8_mbloop_filter_vertical_edge_uv_sse2(i8*, i32, i8*, i8*, i8*, i8*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @vp8_loop_filter_bh_sse2(i8*, i8*, i8*, i32, i32, %struct.loop_filter_info* nocapture readonly) local_unnamed_addr #0 {
  %7 = getelementptr inbounds %struct.loop_filter_info, %struct.loop_filter_info* %5, i64 0, i32 1
  %8 = load i8*, i8** %7, align 8
  %9 = getelementptr inbounds %struct.loop_filter_info, %struct.loop_filter_info* %5, i64 0, i32 2
  %10 = load i8*, i8** %9, align 8
  %11 = getelementptr inbounds %struct.loop_filter_info, %struct.loop_filter_info* %5, i64 0, i32 3
  %12 = load i8*, i8** %11, align 8
  tail call void @vp8_loop_filter_bh_y_sse2(i8* %0, i32 %3, i8* %8, i8* %10, i8* %12, i32 2) #2
  %13 = icmp eq i8* %1, null
  br i1 %13, label %22, label %14

14:                                               ; preds = %6
  %15 = shl nsw i32 %4, 2
  %16 = sext i32 %15 to i64
  %17 = getelementptr inbounds i8, i8* %1, i64 %16
  %18 = load i8*, i8** %7, align 8
  %19 = load i8*, i8** %9, align 8
  %20 = load i8*, i8** %11, align 8
  %21 = getelementptr inbounds i8, i8* %2, i64 %16
  tail call void @vp8_loop_filter_horizontal_edge_uv_sse2(i8* %17, i32 %4, i8* %18, i8* %19, i8* %20, i8* %21) #2
  br label %22

22:                                               ; preds = %6, %14
  ret void
}

declare void @vp8_loop_filter_bh_y_sse2(i8*, i32, i8*, i8*, i8*, i32) local_unnamed_addr #1

declare void @vp8_loop_filter_horizontal_edge_uv_sse2(i8*, i32, i8*, i8*, i8*, i8*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @vp8_loop_filter_bhs_sse2(i8*, i32, i8*) local_unnamed_addr #0 {
  %4 = shl nsw i32 %1, 2
  %5 = sext i32 %4 to i64
  %6 = getelementptr inbounds i8, i8* %0, i64 %5
  tail call void @vp8_loop_filter_simple_horizontal_edge_sse2(i8* %6, i32 %1, i8* %2) #2
  %7 = shl nsw i32 %1, 3
  %8 = sext i32 %7 to i64
  %9 = getelementptr inbounds i8, i8* %0, i64 %8
  tail call void @vp8_loop_filter_simple_horizontal_edge_sse2(i8* %9, i32 %1, i8* %2) #2
  %10 = mul nsw i32 %1, 12
  %11 = sext i32 %10 to i64
  %12 = getelementptr inbounds i8, i8* %0, i64 %11
  tail call void @vp8_loop_filter_simple_horizontal_edge_sse2(i8* %12, i32 %1, i8* %2) #2
  ret void
}

declare void @vp8_loop_filter_simple_horizontal_edge_sse2(i8*, i32, i8*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @vp8_loop_filter_bv_sse2(i8*, i8*, i8*, i32, i32, %struct.loop_filter_info* nocapture readonly) local_unnamed_addr #0 {
  %7 = getelementptr inbounds %struct.loop_filter_info, %struct.loop_filter_info* %5, i64 0, i32 1
  %8 = load i8*, i8** %7, align 8
  %9 = getelementptr inbounds %struct.loop_filter_info, %struct.loop_filter_info* %5, i64 0, i32 2
  %10 = load i8*, i8** %9, align 8
  %11 = getelementptr inbounds %struct.loop_filter_info, %struct.loop_filter_info* %5, i64 0, i32 3
  %12 = load i8*, i8** %11, align 8
  tail call void @vp8_loop_filter_bv_y_sse2(i8* %0, i32 %3, i8* %8, i8* %10, i8* %12, i32 2) #2
  %13 = icmp eq i8* %1, null
  br i1 %13, label %20, label %14

14:                                               ; preds = %6
  %15 = getelementptr inbounds i8, i8* %1, i64 4
  %16 = load i8*, i8** %7, align 8
  %17 = load i8*, i8** %9, align 8
  %18 = load i8*, i8** %11, align 8
  %19 = getelementptr inbounds i8, i8* %2, i64 4
  tail call void @vp8_loop_filter_vertical_edge_uv_sse2(i8* %15, i32 %4, i8* %16, i8* %17, i8* %18, i8* %19) #2
  br label %20

20:                                               ; preds = %6, %14
  ret void
}

declare void @vp8_loop_filter_bv_y_sse2(i8*, i32, i8*, i8*, i8*, i32) local_unnamed_addr #1

declare void @vp8_loop_filter_vertical_edge_uv_sse2(i8*, i32, i8*, i8*, i8*, i8*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @vp8_loop_filter_bvs_sse2(i8*, i32, i8*) local_unnamed_addr #0 {
  %4 = getelementptr inbounds i8, i8* %0, i64 4
  tail call void @vp8_loop_filter_simple_vertical_edge_sse2(i8* %4, i32 %1, i8* %2) #2
  %5 = getelementptr inbounds i8, i8* %0, i64 8
  tail call void @vp8_loop_filter_simple_vertical_edge_sse2(i8* %5, i32 %1, i8* %2) #2
  %6 = getelementptr inbounds i8, i8* %0, i64 12
  tail call void @vp8_loop_filter_simple_vertical_edge_sse2(i8* %6, i32 %1, i8* %2) #2
  ret void
}

declare void @vp8_loop_filter_simple_vertical_edge_sse2(i8*, i32, i8*) local_unnamed_addr #1

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
