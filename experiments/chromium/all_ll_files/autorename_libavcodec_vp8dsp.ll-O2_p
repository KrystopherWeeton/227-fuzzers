; ModuleID = '../../third_party/ffmpeg/libavcodec/autorename_libavcodec_vp8dsp.c'
source_filename = "../../third_party/ffmpeg/libavcodec/autorename_libavcodec_vp8dsp.c"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"
module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"
module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%struct.VP8DSPContext = type { void ([4 x [16 x i16]]*, i16*)*, void ([4 x [16 x i16]]*, i16*)*, void (i8*, i16*, i64)*, void (i8*, i16*, i64)*, void (i8*, [16 x i16]*, i64)*, void (i8*, [16 x i16]*, i64)*, void (i8*, i64, i32, i32, i32)*, void (i8*, i64, i32, i32, i32)*, void (i8*, i8*, i64, i32, i32, i32)*, void (i8*, i8*, i64, i32, i32, i32)*, void (i8*, i64, i32, i32, i32)*, void (i8*, i64, i32, i32, i32)*, void (i8*, i8*, i64, i32, i32, i32)*, void (i8*, i8*, i64, i32, i32, i32)*, void (i8*, i64, i32)*, void (i8*, i64, i32)*, [3 x [3 x [3 x void (i8*, i64, i8*, i64, i32, i32, i32)*]]], [3 x [3 x [3 x void (i8*, i64, i8*, i64, i32, i32, i32)*]]] }

@subpel_filters = internal unnamed_addr constant [7 x [6 x i8]] [[6 x i8] c"\00\06{\0C\01\00", [6 x i8] c"\02\0Bl$\08\01", [6 x i8] c"\00\09]2\06\00", [6 x i8] c"\03\10MM\10\03", [6 x i8] c"\00\062]\09\00", [6 x i8] c"\01\08$l\0B\02", [6 x i8] c"\00\01\0C{\06\00"], align 16
@ff_crop_tab = external local_unnamed_addr constant [2304 x i8], align 16

; Function Attrs: cold nounwind optsize ssp uwtable
define hidden void @ff_vp78dsp_init(%struct.VP8DSPContext*) local_unnamed_addr #0 {
  %2 = getelementptr inbounds %struct.VP8DSPContext, %struct.VP8DSPContext* %0, i64 0, i32 16, i64 0, i64 0, i64 0
  %3 = bitcast void (i8*, i64, i8*, i64, i32, i32, i32)** %2 to <2 x void (i8*, i64, i8*, i64, i32, i32, i32)*>*
  store <2 x void (i8*, i64, i8*, i64, i32, i32, i32)*> <void (i8*, i64, i8*, i64, i32, i32, i32)* @put_vp8_pixels16_c, void (i8*, i64, i8*, i64, i32, i32, i32)* @put_vp8_epel16_h4_c>, <2 x void (i8*, i64, i8*, i64, i32, i32, i32)*>* %3, align 8
  %4 = getelementptr inbounds %struct.VP8DSPContext, %struct.VP8DSPContext* %0, i64 0, i32 16, i64 0, i64 0, i64 2
  %5 = bitcast void (i8*, i64, i8*, i64, i32, i32, i32)** %4 to <2 x void (i8*, i64, i8*, i64, i32, i32, i32)*>*
  store <2 x void (i8*, i64, i8*, i64, i32, i32, i32)*> <void (i8*, i64, i8*, i64, i32, i32, i32)* @put_vp8_epel16_h6_c, void (i8*, i64, i8*, i64, i32, i32, i32)* @put_vp8_epel16_v4_c>, <2 x void (i8*, i64, i8*, i64, i32, i32, i32)*>* %5, align 8
  %6 = getelementptr inbounds %struct.VP8DSPContext, %struct.VP8DSPContext* %0, i64 0, i32 16, i64 0, i64 1, i64 1
  %7 = bitcast void (i8*, i64, i8*, i64, i32, i32, i32)** %6 to <2 x void (i8*, i64, i8*, i64, i32, i32, i32)*>*
  store <2 x void (i8*, i64, i8*, i64, i32, i32, i32)*> <void (i8*, i64, i8*, i64, i32, i32, i32)* @put_vp8_epel16_h4v4_c, void (i8*, i64, i8*, i64, i32, i32, i32)* @put_vp8_epel16_h6v4_c>, <2 x void (i8*, i64, i8*, i64, i32, i32, i32)*>* %7, align 8
  %8 = getelementptr inbounds %struct.VP8DSPContext, %struct.VP8DSPContext* %0, i64 0, i32 16, i64 0, i64 2, i64 0
  %9 = bitcast void (i8*, i64, i8*, i64, i32, i32, i32)** %8 to <2 x void (i8*, i64, i8*, i64, i32, i32, i32)*>*
  store <2 x void (i8*, i64, i8*, i64, i32, i32, i32)*> <void (i8*, i64, i8*, i64, i32, i32, i32)* @put_vp8_epel16_v6_c, void (i8*, i64, i8*, i64, i32, i32, i32)* @put_vp8_epel16_h4v6_c>, <2 x void (i8*, i64, i8*, i64, i32, i32, i32)*>* %9, align 8
  %10 = getelementptr inbounds %struct.VP8DSPContext, %struct.VP8DSPContext* %0, i64 0, i32 16, i64 0, i64 2, i64 2
  %11 = bitcast void (i8*, i64, i8*, i64, i32, i32, i32)** %10 to <2 x void (i8*, i64, i8*, i64, i32, i32, i32)*>*
  store <2 x void (i8*, i64, i8*, i64, i32, i32, i32)*> <void (i8*, i64, i8*, i64, i32, i32, i32)* @put_vp8_epel16_h6v6_c, void (i8*, i64, i8*, i64, i32, i32, i32)* @put_vp8_pixels8_c>, <2 x void (i8*, i64, i8*, i64, i32, i32, i32)*>* %11, align 8
  %12 = getelementptr inbounds %struct.VP8DSPContext, %struct.VP8DSPContext* %0, i64 0, i32 16, i64 1, i64 0, i64 1
  %13 = bitcast void (i8*, i64, i8*, i64, i32, i32, i32)** %12 to <2 x void (i8*, i64, i8*, i64, i32, i32, i32)*>*
  store <2 x void (i8*, i64, i8*, i64, i32, i32, i32)*> <void (i8*, i64, i8*, i64, i32, i32, i32)* @put_vp8_epel8_h4_c, void (i8*, i64, i8*, i64, i32, i32, i32)* @put_vp8_epel8_h6_c>, <2 x void (i8*, i64, i8*, i64, i32, i32, i32)*>* %13, align 8
  %14 = getelementptr inbounds %struct.VP8DSPContext, %struct.VP8DSPContext* %0, i64 0, i32 16, i64 1, i64 1, i64 0
  %15 = bitcast void (i8*, i64, i8*, i64, i32, i32, i32)** %14 to <2 x void (i8*, i64, i8*, i64, i32, i32, i32)*>*
  store <2 x void (i8*, i64, i8*, i64, i32, i32, i32)*> <void (i8*, i64, i8*, i64, i32, i32, i32)* @put_vp8_epel8_v4_c, void (i8*, i64, i8*, i64, i32, i32, i32)* @put_vp8_epel8_h4v4_c>, <2 x void (i8*, i64, i8*, i64, i32, i32, i32)*>* %15, align 8
  %16 = getelementptr inbounds %struct.VP8DSPContext, %struct.VP8DSPContext* %0, i64 0, i32 16, i64 1, i64 1, i64 2
  %17 = bitcast void (i8*, i64, i8*, i64, i32, i32, i32)** %16 to <2 x void (i8*, i64, i8*, i64, i32, i32, i32)*>*
  store <2 x void (i8*, i64, i8*, i64, i32, i32, i32)*> <void (i8*, i64, i8*, i64, i32, i32, i32)* @put_vp8_epel8_h6v4_c, void (i8*, i64, i8*, i64, i32, i32, i32)* @put_vp8_epel8_v6_c>, <2 x void (i8*, i64, i8*, i64, i32, i32, i32)*>* %17, align 8
  %18 = getelementptr inbounds %struct.VP8DSPContext, %struct.VP8DSPContext* %0, i64 0, i32 16, i64 1, i64 2, i64 1
  %19 = bitcast void (i8*, i64, i8*, i64, i32, i32, i32)** %18 to <2 x void (i8*, i64, i8*, i64, i32, i32, i32)*>*
  store <2 x void (i8*, i64, i8*, i64, i32, i32, i32)*> <void (i8*, i64, i8*, i64, i32, i32, i32)* @put_vp8_epel8_h4v6_c, void (i8*, i64, i8*, i64, i32, i32, i32)* @put_vp8_epel8_h6v6_c>, <2 x void (i8*, i64, i8*, i64, i32, i32, i32)*>* %19, align 8
  %20 = getelementptr inbounds %struct.VP8DSPContext, %struct.VP8DSPContext* %0, i64 0, i32 16, i64 2, i64 0, i64 0
  %21 = bitcast void (i8*, i64, i8*, i64, i32, i32, i32)** %20 to <2 x void (i8*, i64, i8*, i64, i32, i32, i32)*>*
  store <2 x void (i8*, i64, i8*, i64, i32, i32, i32)*> <void (i8*, i64, i8*, i64, i32, i32, i32)* @put_vp8_pixels4_c, void (i8*, i64, i8*, i64, i32, i32, i32)* @put_vp8_epel4_h4_c>, <2 x void (i8*, i64, i8*, i64, i32, i32, i32)*>* %21, align 8
  %22 = getelementptr inbounds %struct.VP8DSPContext, %struct.VP8DSPContext* %0, i64 0, i32 16, i64 2, i64 0, i64 2
  %23 = bitcast void (i8*, i64, i8*, i64, i32, i32, i32)** %22 to <2 x void (i8*, i64, i8*, i64, i32, i32, i32)*>*
  store <2 x void (i8*, i64, i8*, i64, i32, i32, i32)*> <void (i8*, i64, i8*, i64, i32, i32, i32)* @put_vp8_epel4_h6_c, void (i8*, i64, i8*, i64, i32, i32, i32)* @put_vp8_epel4_v4_c>, <2 x void (i8*, i64, i8*, i64, i32, i32, i32)*>* %23, align 8
  %24 = getelementptr inbounds %struct.VP8DSPContext, %struct.VP8DSPContext* %0, i64 0, i32 16, i64 2, i64 1, i64 1
  %25 = bitcast void (i8*, i64, i8*, i64, i32, i32, i32)** %24 to <2 x void (i8*, i64, i8*, i64, i32, i32, i32)*>*
  store <2 x void (i8*, i64, i8*, i64, i32, i32, i32)*> <void (i8*, i64, i8*, i64, i32, i32, i32)* @put_vp8_epel4_h4v4_c, void (i8*, i64, i8*, i64, i32, i32, i32)* @put_vp8_epel4_h6v4_c>, <2 x void (i8*, i64, i8*, i64, i32, i32, i32)*>* %25, align 8
  %26 = getelementptr inbounds %struct.VP8DSPContext, %struct.VP8DSPContext* %0, i64 0, i32 16, i64 2, i64 2, i64 0
  %27 = bitcast void (i8*, i64, i8*, i64, i32, i32, i32)** %26 to <2 x void (i8*, i64, i8*, i64, i32, i32, i32)*>*
  store <2 x void (i8*, i64, i8*, i64, i32, i32, i32)*> <void (i8*, i64, i8*, i64, i32, i32, i32)* @put_vp8_epel4_v6_c, void (i8*, i64, i8*, i64, i32, i32, i32)* @put_vp8_epel4_h4v6_c>, <2 x void (i8*, i64, i8*, i64, i32, i32, i32)*>* %27, align 8
  %28 = getelementptr inbounds %struct.VP8DSPContext, %struct.VP8DSPContext* %0, i64 0, i32 16, i64 2, i64 2, i64 2
  %29 = bitcast void (i8*, i64, i8*, i64, i32, i32, i32)** %28 to <2 x void (i8*, i64, i8*, i64, i32, i32, i32)*>*
  store <2 x void (i8*, i64, i8*, i64, i32, i32, i32)*> <void (i8*, i64, i8*, i64, i32, i32, i32)* @put_vp8_epel4_h6v6_c, void (i8*, i64, i8*, i64, i32, i32, i32)* @put_vp8_pixels16_c>, <2 x void (i8*, i64, i8*, i64, i32, i32, i32)*>* %29, align 8
  %30 = getelementptr inbounds %struct.VP8DSPContext, %struct.VP8DSPContext* %0, i64 0, i32 17, i64 0, i64 0, i64 1
  %31 = bitcast void (i8*, i64, i8*, i64, i32, i32, i32)** %30 to <2 x void (i8*, i64, i8*, i64, i32, i32, i32)*>*
  store <2 x void (i8*, i64, i8*, i64, i32, i32, i32)*> <void (i8*, i64, i8*, i64, i32, i32, i32)* @put_vp8_bilinear16_h_c, void (i8*, i64, i8*, i64, i32, i32, i32)* @put_vp8_bilinear16_h_c>, <2 x void (i8*, i64, i8*, i64, i32, i32, i32)*>* %31, align 8
  %32 = getelementptr inbounds %struct.VP8DSPContext, %struct.VP8DSPContext* %0, i64 0, i32 17, i64 0, i64 1, i64 0
  %33 = bitcast void (i8*, i64, i8*, i64, i32, i32, i32)** %32 to <2 x void (i8*, i64, i8*, i64, i32, i32, i32)*>*
  store <2 x void (i8*, i64, i8*, i64, i32, i32, i32)*> <void (i8*, i64, i8*, i64, i32, i32, i32)* @put_vp8_bilinear16_v_c, void (i8*, i64, i8*, i64, i32, i32, i32)* @put_vp8_bilinear16_hv_c>, <2 x void (i8*, i64, i8*, i64, i32, i32, i32)*>* %33, align 8
  %34 = getelementptr inbounds %struct.VP8DSPContext, %struct.VP8DSPContext* %0, i64 0, i32 17, i64 0, i64 1, i64 2
  %35 = bitcast void (i8*, i64, i8*, i64, i32, i32, i32)** %34 to <2 x void (i8*, i64, i8*, i64, i32, i32, i32)*>*
  store <2 x void (i8*, i64, i8*, i64, i32, i32, i32)*> <void (i8*, i64, i8*, i64, i32, i32, i32)* @put_vp8_bilinear16_hv_c, void (i8*, i64, i8*, i64, i32, i32, i32)* @put_vp8_bilinear16_v_c>, <2 x void (i8*, i64, i8*, i64, i32, i32, i32)*>* %35, align 8
  %36 = getelementptr inbounds %struct.VP8DSPContext, %struct.VP8DSPContext* %0, i64 0, i32 17, i64 0, i64 2, i64 1
  %37 = bitcast void (i8*, i64, i8*, i64, i32, i32, i32)** %36 to <2 x void (i8*, i64, i8*, i64, i32, i32, i32)*>*
  store <2 x void (i8*, i64, i8*, i64, i32, i32, i32)*> <void (i8*, i64, i8*, i64, i32, i32, i32)* @put_vp8_bilinear16_hv_c, void (i8*, i64, i8*, i64, i32, i32, i32)* @put_vp8_bilinear16_hv_c>, <2 x void (i8*, i64, i8*, i64, i32, i32, i32)*>* %37, align 8
  %38 = getelementptr inbounds %struct.VP8DSPContext, %struct.VP8DSPContext* %0, i64 0, i32 17, i64 1, i64 0, i64 0
  %39 = bitcast void (i8*, i64, i8*, i64, i32, i32, i32)** %38 to <2 x void (i8*, i64, i8*, i64, i32, i32, i32)*>*
  store <2 x void (i8*, i64, i8*, i64, i32, i32, i32)*> <void (i8*, i64, i8*, i64, i32, i32, i32)* @put_vp8_pixels8_c, void (i8*, i64, i8*, i64, i32, i32, i32)* @put_vp8_bilinear8_h_c>, <2 x void (i8*, i64, i8*, i64, i32, i32, i32)*>* %39, align 8
  %40 = getelementptr inbounds %struct.VP8DSPContext, %struct.VP8DSPContext* %0, i64 0, i32 17, i64 1, i64 0, i64 2
  %41 = bitcast void (i8*, i64, i8*, i64, i32, i32, i32)** %40 to <2 x void (i8*, i64, i8*, i64, i32, i32, i32)*>*
  store <2 x void (i8*, i64, i8*, i64, i32, i32, i32)*> <void (i8*, i64, i8*, i64, i32, i32, i32)* @put_vp8_bilinear8_h_c, void (i8*, i64, i8*, i64, i32, i32, i32)* @put_vp8_bilinear8_v_c>, <2 x void (i8*, i64, i8*, i64, i32, i32, i32)*>* %41, align 8
  %42 = getelementptr inbounds %struct.VP8DSPContext, %struct.VP8DSPContext* %0, i64 0, i32 17, i64 1, i64 1, i64 1
  %43 = bitcast void (i8*, i64, i8*, i64, i32, i32, i32)** %42 to <2 x void (i8*, i64, i8*, i64, i32, i32, i32)*>*
  store <2 x void (i8*, i64, i8*, i64, i32, i32, i32)*> <void (i8*, i64, i8*, i64, i32, i32, i32)* @put_vp8_bilinear8_hv_c, void (i8*, i64, i8*, i64, i32, i32, i32)* @put_vp8_bilinear8_hv_c>, <2 x void (i8*, i64, i8*, i64, i32, i32, i32)*>* %43, align 8
  %44 = getelementptr inbounds %struct.VP8DSPContext, %struct.VP8DSPContext* %0, i64 0, i32 17, i64 1, i64 2, i64 0
  %45 = bitcast void (i8*, i64, i8*, i64, i32, i32, i32)** %44 to <2 x void (i8*, i64, i8*, i64, i32, i32, i32)*>*
  store <2 x void (i8*, i64, i8*, i64, i32, i32, i32)*> <void (i8*, i64, i8*, i64, i32, i32, i32)* @put_vp8_bilinear8_v_c, void (i8*, i64, i8*, i64, i32, i32, i32)* @put_vp8_bilinear8_hv_c>, <2 x void (i8*, i64, i8*, i64, i32, i32, i32)*>* %45, align 8
  %46 = getelementptr inbounds %struct.VP8DSPContext, %struct.VP8DSPContext* %0, i64 0, i32 17, i64 1, i64 2, i64 2
  %47 = bitcast void (i8*, i64, i8*, i64, i32, i32, i32)** %46 to <2 x void (i8*, i64, i8*, i64, i32, i32, i32)*>*
  store <2 x void (i8*, i64, i8*, i64, i32, i32, i32)*> <void (i8*, i64, i8*, i64, i32, i32, i32)* @put_vp8_bilinear8_hv_c, void (i8*, i64, i8*, i64, i32, i32, i32)* @put_vp8_pixels4_c>, <2 x void (i8*, i64, i8*, i64, i32, i32, i32)*>* %47, align 8
  %48 = getelementptr inbounds %struct.VP8DSPContext, %struct.VP8DSPContext* %0, i64 0, i32 17, i64 2, i64 0, i64 1
  %49 = bitcast void (i8*, i64, i8*, i64, i32, i32, i32)** %48 to <2 x void (i8*, i64, i8*, i64, i32, i32, i32)*>*
  store <2 x void (i8*, i64, i8*, i64, i32, i32, i32)*> <void (i8*, i64, i8*, i64, i32, i32, i32)* @put_vp8_bilinear4_h_c, void (i8*, i64, i8*, i64, i32, i32, i32)* @put_vp8_bilinear4_h_c>, <2 x void (i8*, i64, i8*, i64, i32, i32, i32)*>* %49, align 8
  %50 = getelementptr inbounds %struct.VP8DSPContext, %struct.VP8DSPContext* %0, i64 0, i32 17, i64 2, i64 1, i64 0
  %51 = bitcast void (i8*, i64, i8*, i64, i32, i32, i32)** %50 to <2 x void (i8*, i64, i8*, i64, i32, i32, i32)*>*
  store <2 x void (i8*, i64, i8*, i64, i32, i32, i32)*> <void (i8*, i64, i8*, i64, i32, i32, i32)* @put_vp8_bilinear4_v_c, void (i8*, i64, i8*, i64, i32, i32, i32)* @put_vp8_bilinear4_hv_c>, <2 x void (i8*, i64, i8*, i64, i32, i32, i32)*>* %51, align 8
  %52 = getelementptr inbounds %struct.VP8DSPContext, %struct.VP8DSPContext* %0, i64 0, i32 17, i64 2, i64 1, i64 2
  %53 = bitcast void (i8*, i64, i8*, i64, i32, i32, i32)** %52 to <2 x void (i8*, i64, i8*, i64, i32, i32, i32)*>*
  store <2 x void (i8*, i64, i8*, i64, i32, i32, i32)*> <void (i8*, i64, i8*, i64, i32, i32, i32)* @put_vp8_bilinear4_hv_c, void (i8*, i64, i8*, i64, i32, i32, i32)* @put_vp8_bilinear4_v_c>, <2 x void (i8*, i64, i8*, i64, i32, i32, i32)*>* %53, align 8
  %54 = getelementptr inbounds %struct.VP8DSPContext, %struct.VP8DSPContext* %0, i64 0, i32 17, i64 2, i64 2, i64 1
  %55 = bitcast void (i8*, i64, i8*, i64, i32, i32, i32)** %54 to <2 x void (i8*, i64, i8*, i64, i32, i32, i32)*>*
  store <2 x void (i8*, i64, i8*, i64, i32, i32, i32)*> <void (i8*, i64, i8*, i64, i32, i32, i32)* @put_vp8_bilinear4_hv_c, void (i8*, i64, i8*, i64, i32, i32, i32)* @put_vp8_bilinear4_hv_c>, <2 x void (i8*, i64, i8*, i64, i32, i32, i32)*>* %55, align 8
  tail call void @ff_vp78dsp_init_x86(%struct.VP8DSPContext* %0) #5
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @put_vp8_pixels16_c(i8* nocapture, i64, i8* nocapture readonly, i64, i32, i32, i32) #1 {
  %8 = icmp sgt i32 %4, 0
  br i1 %8, label %9, label %41

9:                                                ; preds = %7
  %10 = add i32 %4, -1
  %11 = and i32 %4, 3
  %12 = icmp ult i32 %10, 3
  br i1 %12, label %29, label %13

13:                                               ; preds = %9
  %14 = sub i32 %4, %11
  br label %15

15:                                               ; preds = %15, %13
  %16 = phi i8* [ %0, %13 ], [ %25, %15 ]
  %17 = phi i8* [ %2, %13 ], [ %26, %15 ]
  %18 = phi i32 [ %14, %13 ], [ %27, %15 ]
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %16, i8* align 1 %17, i64 16, i1 false)
  %19 = getelementptr inbounds i8, i8* %16, i64 %1
  %20 = getelementptr inbounds i8, i8* %17, i64 %3
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %19, i8* align 1 %20, i64 16, i1 false)
  %21 = getelementptr inbounds i8, i8* %19, i64 %1
  %22 = getelementptr inbounds i8, i8* %20, i64 %3
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %21, i8* align 1 %22, i64 16, i1 false)
  %23 = getelementptr inbounds i8, i8* %21, i64 %1
  %24 = getelementptr inbounds i8, i8* %22, i64 %3
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %23, i8* align 1 %24, i64 16, i1 false)
  %25 = getelementptr inbounds i8, i8* %23, i64 %1
  %26 = getelementptr inbounds i8, i8* %24, i64 %3
  %27 = add i32 %18, -4
  %28 = icmp eq i32 %27, 0
  br i1 %28, label %29, label %15

29:                                               ; preds = %15, %9
  %30 = phi i8* [ %0, %9 ], [ %25, %15 ]
  %31 = phi i8* [ %2, %9 ], [ %26, %15 ]
  %32 = icmp eq i32 %11, 0
  br i1 %32, label %41, label %33

33:                                               ; preds = %29, %33
  %34 = phi i8* [ %37, %33 ], [ %30, %29 ]
  %35 = phi i8* [ %38, %33 ], [ %31, %29 ]
  %36 = phi i32 [ %39, %33 ], [ %11, %29 ]
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %34, i8* align 1 %35, i64 16, i1 false)
  %37 = getelementptr inbounds i8, i8* %34, i64 %1
  %38 = getelementptr inbounds i8, i8* %35, i64 %3
  %39 = add i32 %36, -1
  %40 = icmp eq i32 %39, 0
  br i1 %40, label %41, label %33, !llvm.loop !2

41:                                               ; preds = %29, %33, %7
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define internal void @put_vp8_epel16_h4_c(i8* nocapture, i64, i8* nocapture readonly, i64, i32, i32, i32) #2 {
  %8 = add nsw i32 %5, -1
  %9 = sext i32 %8 to i64
  %10 = icmp sgt i32 %4, 0
  br i1 %10, label %11, label %64

11:                                               ; preds = %7
  %12 = getelementptr inbounds [7 x [6 x i8]], [7 x [6 x i8]]* @subpel_filters, i64 0, i64 %9, i64 2
  %13 = load i8, i8* %12, align 2
  %14 = zext i8 %13 to i32
  %15 = getelementptr inbounds [7 x [6 x i8]], [7 x [6 x i8]]* @subpel_filters, i64 0, i64 %9, i64 1
  %16 = load i8, i8* %15, align 1
  %17 = zext i8 %16 to i32
  %18 = getelementptr inbounds [7 x [6 x i8]], [7 x [6 x i8]]* @subpel_filters, i64 0, i64 %9, i64 3
  %19 = load i8, i8* %18, align 1
  %20 = zext i8 %19 to i32
  %21 = getelementptr inbounds [7 x [6 x i8]], [7 x [6 x i8]]* @subpel_filters, i64 0, i64 %9, i64 4
  %22 = load i8, i8* %21, align 2
  %23 = zext i8 %22 to i32
  br label %24

24:                                               ; preds = %59, %11
  %25 = phi i32 [ 0, %11 ], [ %62, %59 ]
  %26 = phi i8* [ %0, %11 ], [ %60, %59 ]
  %27 = phi i8* [ %2, %11 ], [ %61, %59 ]
  br label %28

28:                                               ; preds = %28, %24
  %29 = phi i64 [ 0, %24 ], [ %39, %28 ]
  %30 = getelementptr inbounds i8, i8* %27, i64 %29
  %31 = load i8, i8* %30, align 1
  %32 = zext i8 %31 to i32
  %33 = mul nuw nsw i32 %32, %14
  %34 = add nsw i64 %29, -1
  %35 = getelementptr inbounds i8, i8* %27, i64 %34
  %36 = load i8, i8* %35, align 1
  %37 = zext i8 %36 to i32
  %38 = mul nuw nsw i32 %37, %17
  %39 = add nuw nsw i64 %29, 1
  %40 = getelementptr inbounds i8, i8* %27, i64 %39
  %41 = load i8, i8* %40, align 1
  %42 = zext i8 %41 to i32
  %43 = mul nuw nsw i32 %42, %20
  %44 = add nuw nsw i64 %29, 2
  %45 = getelementptr inbounds i8, i8* %27, i64 %44
  %46 = load i8, i8* %45, align 1
  %47 = zext i8 %46 to i32
  %48 = mul nuw nsw i32 %47, %23
  %49 = add nuw nsw i32 %48, %38
  %50 = add nuw nsw i32 %33, 64
  %51 = add nuw nsw i32 %50, %43
  %52 = sub nsw i32 %51, %49
  %53 = ashr i32 %52, 7
  %54 = sext i32 %53 to i64
  %55 = getelementptr inbounds i8, i8* getelementptr inbounds ([2304 x i8], [2304 x i8]* @ff_crop_tab, i64 0, i64 1024), i64 %54
  %56 = load i8, i8* %55, align 1
  %57 = getelementptr inbounds i8, i8* %26, i64 %29
  store i8 %56, i8* %57, align 1
  %58 = icmp eq i64 %39, 16
  br i1 %58, label %59, label %28

59:                                               ; preds = %28
  %60 = getelementptr inbounds i8, i8* %26, i64 %1
  %61 = getelementptr inbounds i8, i8* %27, i64 %3
  %62 = add nuw nsw i32 %25, 1
  %63 = icmp eq i32 %62, %4
  br i1 %63, label %64, label %24

64:                                               ; preds = %59, %7
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define internal void @put_vp8_epel16_h6_c(i8* nocapture, i64, i8* nocapture readonly, i64, i32, i32, i32) #2 {
  %8 = add nsw i32 %5, -1
  %9 = sext i32 %8 to i64
  %10 = icmp sgt i32 %4, 0
  br i1 %10, label %11, label %82

11:                                               ; preds = %7
  %12 = getelementptr inbounds [7 x [6 x i8]], [7 x [6 x i8]]* @subpel_filters, i64 0, i64 %9, i64 0
  %13 = getelementptr inbounds [7 x [6 x i8]], [7 x [6 x i8]]* @subpel_filters, i64 0, i64 %9, i64 2
  %14 = load i8, i8* %13, align 2
  %15 = zext i8 %14 to i32
  %16 = getelementptr inbounds [7 x [6 x i8]], [7 x [6 x i8]]* @subpel_filters, i64 0, i64 %9, i64 1
  %17 = load i8, i8* %16, align 1
  %18 = zext i8 %17 to i32
  %19 = load i8, i8* %12, align 2
  %20 = zext i8 %19 to i32
  %21 = getelementptr inbounds [7 x [6 x i8]], [7 x [6 x i8]]* @subpel_filters, i64 0, i64 %9, i64 3
  %22 = load i8, i8* %21, align 1
  %23 = zext i8 %22 to i32
  %24 = getelementptr inbounds [7 x [6 x i8]], [7 x [6 x i8]]* @subpel_filters, i64 0, i64 %9, i64 4
  %25 = load i8, i8* %24, align 2
  %26 = zext i8 %25 to i32
  %27 = getelementptr inbounds [7 x [6 x i8]], [7 x [6 x i8]]* @subpel_filters, i64 0, i64 %9, i64 5
  %28 = load i8, i8* %27, align 1
  %29 = zext i8 %28 to i32
  br label %30

30:                                               ; preds = %77, %11
  %31 = phi i32 [ 0, %11 ], [ %80, %77 ]
  %32 = phi i8* [ %0, %11 ], [ %78, %77 ]
  %33 = phi i8* [ %2, %11 ], [ %79, %77 ]
  br label %34

34:                                               ; preds = %34, %30
  %35 = phi i64 [ 0, %30 ], [ %50, %34 ]
  %36 = getelementptr inbounds i8, i8* %33, i64 %35
  %37 = load i8, i8* %36, align 1
  %38 = zext i8 %37 to i32
  %39 = mul nuw nsw i32 %38, %15
  %40 = add nsw i64 %35, -1
  %41 = getelementptr inbounds i8, i8* %33, i64 %40
  %42 = load i8, i8* %41, align 1
  %43 = zext i8 %42 to i32
  %44 = mul nuw nsw i32 %43, %18
  %45 = add nsw i64 %35, -2
  %46 = getelementptr inbounds i8, i8* %33, i64 %45
  %47 = load i8, i8* %46, align 1
  %48 = zext i8 %47 to i32
  %49 = mul nuw nsw i32 %48, %20
  %50 = add nuw nsw i64 %35, 1
  %51 = getelementptr inbounds i8, i8* %33, i64 %50
  %52 = load i8, i8* %51, align 1
  %53 = zext i8 %52 to i32
  %54 = mul nuw nsw i32 %53, %23
  %55 = add nuw nsw i64 %35, 2
  %56 = getelementptr inbounds i8, i8* %33, i64 %55
  %57 = load i8, i8* %56, align 1
  %58 = zext i8 %57 to i32
  %59 = mul nuw nsw i32 %58, %26
  %60 = add nuw nsw i64 %35, 3
  %61 = getelementptr inbounds i8, i8* %33, i64 %60
  %62 = load i8, i8* %61, align 1
  %63 = zext i8 %62 to i32
  %64 = mul nuw nsw i32 %63, %29
  %65 = add nuw nsw i32 %59, %44
  %66 = add nuw nsw i32 %39, 64
  %67 = add nuw nsw i32 %66, %49
  %68 = add nuw nsw i32 %67, %54
  %69 = add nuw nsw i32 %68, %64
  %70 = sub nsw i32 %69, %65
  %71 = ashr i32 %70, 7
  %72 = sext i32 %71 to i64
  %73 = getelementptr inbounds i8, i8* getelementptr inbounds ([2304 x i8], [2304 x i8]* @ff_crop_tab, i64 0, i64 1024), i64 %72
  %74 = load i8, i8* %73, align 1
  %75 = getelementptr inbounds i8, i8* %32, i64 %35
  store i8 %74, i8* %75, align 1
  %76 = icmp eq i64 %50, 16
  br i1 %76, label %77, label %34

77:                                               ; preds = %34
  %78 = getelementptr inbounds i8, i8* %32, i64 %1
  %79 = getelementptr inbounds i8, i8* %33, i64 %3
  %80 = add nuw nsw i32 %31, 1
  %81 = icmp eq i32 %80, %4
  br i1 %81, label %82, label %30

82:                                               ; preds = %77, %7
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define internal void @put_vp8_epel16_v4_c(i8* nocapture, i64, i8* nocapture readonly, i64, i32, i32, i32) #2 {
  %8 = add nsw i32 %6, -1
  %9 = sext i32 %8 to i64
  %10 = icmp sgt i32 %4, 0
  br i1 %10, label %11, label %66

11:                                               ; preds = %7
  %12 = getelementptr inbounds [7 x [6 x i8]], [7 x [6 x i8]]* @subpel_filters, i64 0, i64 %9, i64 2
  %13 = load i8, i8* %12, align 2
  %14 = zext i8 %13 to i32
  %15 = getelementptr inbounds [7 x [6 x i8]], [7 x [6 x i8]]* @subpel_filters, i64 0, i64 %9, i64 1
  %16 = load i8, i8* %15, align 1
  %17 = zext i8 %16 to i32
  %18 = getelementptr inbounds [7 x [6 x i8]], [7 x [6 x i8]]* @subpel_filters, i64 0, i64 %9, i64 3
  %19 = load i8, i8* %18, align 1
  %20 = zext i8 %19 to i32
  %21 = getelementptr inbounds [7 x [6 x i8]], [7 x [6 x i8]]* @subpel_filters, i64 0, i64 %9, i64 4
  %22 = load i8, i8* %21, align 2
  %23 = zext i8 %22 to i32
  %24 = shl i64 %3, 1
  br label %25

25:                                               ; preds = %61, %11
  %26 = phi i32 [ 0, %11 ], [ %64, %61 ]
  %27 = phi i8* [ %0, %11 ], [ %62, %61 ]
  %28 = phi i8* [ %2, %11 ], [ %63, %61 ]
  br label %29

29:                                               ; preds = %29, %25
  %30 = phi i64 [ 0, %25 ], [ %59, %29 ]
  %31 = getelementptr inbounds i8, i8* %28, i64 %30
  %32 = load i8, i8* %31, align 1
  %33 = zext i8 %32 to i32
  %34 = mul nuw nsw i32 %33, %14
  %35 = sub nsw i64 %30, %3
  %36 = getelementptr inbounds i8, i8* %28, i64 %35
  %37 = load i8, i8* %36, align 1
  %38 = zext i8 %37 to i32
  %39 = mul nuw nsw i32 %38, %17
  %40 = add nsw i64 %30, %3
  %41 = getelementptr inbounds i8, i8* %28, i64 %40
  %42 = load i8, i8* %41, align 1
  %43 = zext i8 %42 to i32
  %44 = mul nuw nsw i32 %43, %20
  %45 = add nsw i64 %24, %30
  %46 = getelementptr inbounds i8, i8* %28, i64 %45
  %47 = load i8, i8* %46, align 1
  %48 = zext i8 %47 to i32
  %49 = mul nuw nsw i32 %48, %23
  %50 = add nuw nsw i32 %49, %39
  %51 = add nuw nsw i32 %34, 64
  %52 = add nuw nsw i32 %51, %44
  %53 = sub nsw i32 %52, %50
  %54 = ashr i32 %53, 7
  %55 = sext i32 %54 to i64
  %56 = getelementptr inbounds i8, i8* getelementptr inbounds ([2304 x i8], [2304 x i8]* @ff_crop_tab, i64 0, i64 1024), i64 %55
  %57 = load i8, i8* %56, align 1
  %58 = getelementptr inbounds i8, i8* %27, i64 %30
  store i8 %57, i8* %58, align 1
  %59 = add nuw nsw i64 %30, 1
  %60 = icmp eq i64 %59, 16
  br i1 %60, label %61, label %29

61:                                               ; preds = %29
  %62 = getelementptr inbounds i8, i8* %27, i64 %1
  %63 = getelementptr inbounds i8, i8* %28, i64 %3
  %64 = add nuw nsw i32 %26, 1
  %65 = icmp eq i32 %64, %4
  br i1 %65, label %66, label %25

66:                                               ; preds = %61, %7
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @put_vp8_epel16_h4v4_c(i8* nocapture, i64, i8* nocapture readonly, i64, i32, i32, i32) #1 {
  %8 = alloca [560 x i8], align 16
  %9 = add nsw i32 %5, -1
  %10 = sext i32 %9 to i64
  %11 = getelementptr inbounds [560 x i8], [560 x i8]* %8, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 560, i8* nonnull %11) #5
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %11, i8 -86, i64 560, i1 false)
  %12 = add i32 %4, 3
  %13 = icmp sgt i32 %12, 0
  br i1 %13, label %14, label %70

14:                                               ; preds = %7
  %15 = sub i64 0, %3
  %16 = getelementptr inbounds i8, i8* %2, i64 %15
  %17 = getelementptr inbounds [7 x [6 x i8]], [7 x [6 x i8]]* @subpel_filters, i64 0, i64 %10, i64 2
  %18 = load i8, i8* %17, align 2
  %19 = zext i8 %18 to i32
  %20 = getelementptr inbounds [7 x [6 x i8]], [7 x [6 x i8]]* @subpel_filters, i64 0, i64 %10, i64 1
  %21 = load i8, i8* %20, align 1
  %22 = zext i8 %21 to i32
  %23 = getelementptr inbounds [7 x [6 x i8]], [7 x [6 x i8]]* @subpel_filters, i64 0, i64 %10, i64 3
  %24 = load i8, i8* %23, align 1
  %25 = zext i8 %24 to i32
  %26 = getelementptr inbounds [7 x [6 x i8]], [7 x [6 x i8]]* @subpel_filters, i64 0, i64 %10, i64 4
  %27 = load i8, i8* %26, align 2
  %28 = zext i8 %27 to i32
  br label %29

29:                                               ; preds = %65, %14
  %30 = phi i8* [ %11, %14 ], [ %66, %65 ]
  %31 = phi i32 [ 0, %14 ], [ %68, %65 ]
  %32 = phi i8* [ %16, %14 ], [ %67, %65 ]
  %33 = load i8, i8* %32, align 1
  %34 = getelementptr inbounds i8, i8* %32, i64 1
  %35 = load i8, i8* %34, align 1
  br label %36

36:                                               ; preds = %36, %29
  %37 = phi i8 [ %35, %29 ], [ %52, %36 ]
  %38 = phi i8 [ %33, %29 ], [ %37, %36 ]
  %39 = phi i64 [ 0, %29 ], [ %47, %36 ]
  %40 = zext i8 %38 to i32
  %41 = mul nuw nsw i32 %40, %19
  %42 = add nsw i64 %39, -1
  %43 = getelementptr inbounds i8, i8* %32, i64 %42
  %44 = load i8, i8* %43, align 1
  %45 = zext i8 %44 to i32
  %46 = mul nuw nsw i32 %45, %22
  %47 = add nuw nsw i64 %39, 1
  %48 = zext i8 %37 to i32
  %49 = mul nuw nsw i32 %48, %25
  %50 = add nuw nsw i64 %39, 2
  %51 = getelementptr inbounds i8, i8* %32, i64 %50
  %52 = load i8, i8* %51, align 1
  %53 = zext i8 %52 to i32
  %54 = mul nuw nsw i32 %53, %28
  %55 = add nuw nsw i32 %54, %46
  %56 = add nuw nsw i32 %41, 64
  %57 = add nuw nsw i32 %56, %49
  %58 = sub nsw i32 %57, %55
  %59 = ashr i32 %58, 7
  %60 = sext i32 %59 to i64
  %61 = getelementptr inbounds i8, i8* getelementptr inbounds ([2304 x i8], [2304 x i8]* @ff_crop_tab, i64 0, i64 1024), i64 %60
  %62 = load i8, i8* %61, align 1
  %63 = getelementptr inbounds i8, i8* %30, i64 %39
  store i8 %62, i8* %63, align 1
  %64 = icmp eq i64 %47, 16
  br i1 %64, label %65, label %36

65:                                               ; preds = %36
  %66 = getelementptr inbounds i8, i8* %30, i64 16
  %67 = getelementptr inbounds i8, i8* %32, i64 %3
  %68 = add nuw nsw i32 %31, 1
  %69 = icmp eq i32 %68, %12
  br i1 %69, label %70, label %29

70:                                               ; preds = %65, %7
  %71 = add nsw i32 %6, -1
  %72 = sext i32 %71 to i64
  %73 = icmp sgt i32 %4, 0
  br i1 %73, label %74, label %129

74:                                               ; preds = %70
  %75 = getelementptr inbounds [560 x i8], [560 x i8]* %8, i64 0, i64 16
  %76 = getelementptr inbounds [7 x [6 x i8]], [7 x [6 x i8]]* @subpel_filters, i64 0, i64 %72, i64 2
  %77 = load i8, i8* %76, align 2
  %78 = zext i8 %77 to i32
  %79 = getelementptr inbounds [7 x [6 x i8]], [7 x [6 x i8]]* @subpel_filters, i64 0, i64 %72, i64 1
  %80 = load i8, i8* %79, align 1
  %81 = zext i8 %80 to i32
  %82 = getelementptr inbounds [7 x [6 x i8]], [7 x [6 x i8]]* @subpel_filters, i64 0, i64 %72, i64 3
  %83 = load i8, i8* %82, align 1
  %84 = zext i8 %83 to i32
  %85 = getelementptr inbounds [7 x [6 x i8]], [7 x [6 x i8]]* @subpel_filters, i64 0, i64 %72, i64 4
  %86 = load i8, i8* %85, align 2
  %87 = zext i8 %86 to i32
  br label %88

88:                                               ; preds = %124, %74
  %89 = phi i8* [ %75, %74 ], [ %126, %124 ]
  %90 = phi i32 [ 0, %74 ], [ %127, %124 ]
  %91 = phi i8* [ %0, %74 ], [ %125, %124 ]
  br label %92

92:                                               ; preds = %92, %88
  %93 = phi i64 [ 0, %88 ], [ %122, %92 ]
  %94 = getelementptr inbounds i8, i8* %89, i64 %93
  %95 = load i8, i8* %94, align 1
  %96 = zext i8 %95 to i32
  %97 = mul nuw nsw i32 %96, %78
  %98 = add nuw nsw i64 %93, -16
  %99 = getelementptr inbounds i8, i8* %89, i64 %98
  %100 = load i8, i8* %99, align 1
  %101 = zext i8 %100 to i32
  %102 = mul nuw nsw i32 %101, %81
  %103 = add nuw nsw i64 %93, 16
  %104 = getelementptr inbounds i8, i8* %89, i64 %103
  %105 = load i8, i8* %104, align 1
  %106 = zext i8 %105 to i32
  %107 = mul nuw nsw i32 %106, %84
  %108 = add nuw nsw i64 %93, 32
  %109 = getelementptr inbounds i8, i8* %89, i64 %108
  %110 = load i8, i8* %109, align 1
  %111 = zext i8 %110 to i32
  %112 = mul nuw nsw i32 %111, %87
  %113 = add nuw nsw i32 %112, %102
  %114 = add nuw nsw i32 %97, 64
  %115 = add nuw nsw i32 %114, %107
  %116 = sub nsw i32 %115, %113
  %117 = ashr i32 %116, 7
  %118 = sext i32 %117 to i64
  %119 = getelementptr inbounds i8, i8* getelementptr inbounds ([2304 x i8], [2304 x i8]* @ff_crop_tab, i64 0, i64 1024), i64 %118
  %120 = load i8, i8* %119, align 1
  %121 = getelementptr inbounds i8, i8* %91, i64 %93
  store i8 %120, i8* %121, align 1
  %122 = add nuw nsw i64 %93, 1
  %123 = icmp eq i64 %122, 16
  br i1 %123, label %124, label %92

124:                                              ; preds = %92
  %125 = getelementptr inbounds i8, i8* %91, i64 %1
  %126 = getelementptr inbounds i8, i8* %89, i64 16
  %127 = add nuw nsw i32 %90, 1
  %128 = icmp eq i32 %127, %4
  br i1 %128, label %129, label %88

129:                                              ; preds = %124, %70
  call void @llvm.lifetime.end.p0i8(i64 560, i8* nonnull %11) #5
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @put_vp8_epel16_h6v4_c(i8* nocapture, i64, i8* nocapture readonly, i64, i32, i32, i32) #1 {
  %8 = alloca [560 x i8], align 16
  %9 = add nsw i32 %5, -1
  %10 = sext i32 %9 to i64
  %11 = getelementptr inbounds [560 x i8], [560 x i8]* %8, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 560, i8* nonnull %11) #5
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %11, i8 -86, i64 560, i1 false)
  %12 = add i32 %4, 3
  %13 = icmp sgt i32 %12, 0
  br i1 %13, label %14, label %88

14:                                               ; preds = %7
  %15 = sub i64 0, %3
  %16 = getelementptr inbounds i8, i8* %2, i64 %15
  %17 = getelementptr inbounds [7 x [6 x i8]], [7 x [6 x i8]]* @subpel_filters, i64 0, i64 %10, i64 0
  %18 = getelementptr inbounds [7 x [6 x i8]], [7 x [6 x i8]]* @subpel_filters, i64 0, i64 %10, i64 2
  %19 = load i8, i8* %18, align 2
  %20 = zext i8 %19 to i32
  %21 = getelementptr inbounds [7 x [6 x i8]], [7 x [6 x i8]]* @subpel_filters, i64 0, i64 %10, i64 1
  %22 = load i8, i8* %21, align 1
  %23 = zext i8 %22 to i32
  %24 = load i8, i8* %17, align 2
  %25 = zext i8 %24 to i32
  %26 = getelementptr inbounds [7 x [6 x i8]], [7 x [6 x i8]]* @subpel_filters, i64 0, i64 %10, i64 3
  %27 = load i8, i8* %26, align 1
  %28 = zext i8 %27 to i32
  %29 = getelementptr inbounds [7 x [6 x i8]], [7 x [6 x i8]]* @subpel_filters, i64 0, i64 %10, i64 4
  %30 = load i8, i8* %29, align 2
  %31 = zext i8 %30 to i32
  %32 = getelementptr inbounds [7 x [6 x i8]], [7 x [6 x i8]]* @subpel_filters, i64 0, i64 %10, i64 5
  %33 = load i8, i8* %32, align 1
  %34 = zext i8 %33 to i32
  br label %35

35:                                               ; preds = %83, %14
  %36 = phi i8* [ %11, %14 ], [ %84, %83 ]
  %37 = phi i32 [ 0, %14 ], [ %86, %83 ]
  %38 = phi i8* [ %16, %14 ], [ %85, %83 ]
  %39 = load i8, i8* %38, align 1
  %40 = getelementptr inbounds i8, i8* %38, i64 -2
  %41 = load i8, i8* %40, align 1
  %42 = getelementptr inbounds i8, i8* %38, i64 1
  %43 = load i8, i8* %42, align 1
  %44 = getelementptr inbounds i8, i8* %38, i64 2
  %45 = load i8, i8* %44, align 1
  br label %46

46:                                               ; preds = %46, %35
  %47 = phi i8 [ %45, %35 ], [ %68, %46 ]
  %48 = phi i8 [ %43, %35 ], [ %47, %46 ]
  %49 = phi i8 [ %41, %35 ], [ %56, %46 ]
  %50 = phi i8 [ %39, %35 ], [ %48, %46 ]
  %51 = phi i64 [ 0, %35 ], [ %61, %46 ]
  %52 = zext i8 %50 to i32
  %53 = mul nuw nsw i32 %52, %20
  %54 = add nsw i64 %51, -1
  %55 = getelementptr inbounds i8, i8* %38, i64 %54
  %56 = load i8, i8* %55, align 1
  %57 = zext i8 %56 to i32
  %58 = mul nuw nsw i32 %57, %23
  %59 = zext i8 %49 to i32
  %60 = mul nuw nsw i32 %59, %25
  %61 = add nuw nsw i64 %51, 1
  %62 = zext i8 %48 to i32
  %63 = mul nuw nsw i32 %62, %28
  %64 = zext i8 %47 to i32
  %65 = mul nuw nsw i32 %64, %31
  %66 = add nuw nsw i64 %51, 3
  %67 = getelementptr inbounds i8, i8* %38, i64 %66
  %68 = load i8, i8* %67, align 1
  %69 = zext i8 %68 to i32
  %70 = mul nuw nsw i32 %69, %34
  %71 = add nuw nsw i32 %65, %58
  %72 = add nuw nsw i32 %53, 64
  %73 = add nuw nsw i32 %72, %60
  %74 = add nuw nsw i32 %73, %63
  %75 = add nuw nsw i32 %74, %70
  %76 = sub nsw i32 %75, %71
  %77 = ashr i32 %76, 7
  %78 = sext i32 %77 to i64
  %79 = getelementptr inbounds i8, i8* getelementptr inbounds ([2304 x i8], [2304 x i8]* @ff_crop_tab, i64 0, i64 1024), i64 %78
  %80 = load i8, i8* %79, align 1
  %81 = getelementptr inbounds i8, i8* %36, i64 %51
  store i8 %80, i8* %81, align 1
  %82 = icmp eq i64 %61, 16
  br i1 %82, label %83, label %46

83:                                               ; preds = %46
  %84 = getelementptr inbounds i8, i8* %36, i64 16
  %85 = getelementptr inbounds i8, i8* %38, i64 %3
  %86 = add nuw nsw i32 %37, 1
  %87 = icmp eq i32 %86, %12
  br i1 %87, label %88, label %35

88:                                               ; preds = %83, %7
  %89 = add nsw i32 %6, -1
  %90 = sext i32 %89 to i64
  %91 = icmp sgt i32 %4, 0
  br i1 %91, label %92, label %147

92:                                               ; preds = %88
  %93 = getelementptr inbounds [560 x i8], [560 x i8]* %8, i64 0, i64 16
  %94 = getelementptr inbounds [7 x [6 x i8]], [7 x [6 x i8]]* @subpel_filters, i64 0, i64 %90, i64 2
  %95 = load i8, i8* %94, align 2
  %96 = zext i8 %95 to i32
  %97 = getelementptr inbounds [7 x [6 x i8]], [7 x [6 x i8]]* @subpel_filters, i64 0, i64 %90, i64 1
  %98 = load i8, i8* %97, align 1
  %99 = zext i8 %98 to i32
  %100 = getelementptr inbounds [7 x [6 x i8]], [7 x [6 x i8]]* @subpel_filters, i64 0, i64 %90, i64 3
  %101 = load i8, i8* %100, align 1
  %102 = zext i8 %101 to i32
  %103 = getelementptr inbounds [7 x [6 x i8]], [7 x [6 x i8]]* @subpel_filters, i64 0, i64 %90, i64 4
  %104 = load i8, i8* %103, align 2
  %105 = zext i8 %104 to i32
  br label %106

106:                                              ; preds = %142, %92
  %107 = phi i8* [ %93, %92 ], [ %144, %142 ]
  %108 = phi i32 [ 0, %92 ], [ %145, %142 ]
  %109 = phi i8* [ %0, %92 ], [ %143, %142 ]
  br label %110

110:                                              ; preds = %110, %106
  %111 = phi i64 [ 0, %106 ], [ %140, %110 ]
  %112 = getelementptr inbounds i8, i8* %107, i64 %111
  %113 = load i8, i8* %112, align 1
  %114 = zext i8 %113 to i32
  %115 = mul nuw nsw i32 %114, %96
  %116 = add nuw nsw i64 %111, -16
  %117 = getelementptr inbounds i8, i8* %107, i64 %116
  %118 = load i8, i8* %117, align 1
  %119 = zext i8 %118 to i32
  %120 = mul nuw nsw i32 %119, %99
  %121 = add nuw nsw i64 %111, 16
  %122 = getelementptr inbounds i8, i8* %107, i64 %121
  %123 = load i8, i8* %122, align 1
  %124 = zext i8 %123 to i32
  %125 = mul nuw nsw i32 %124, %102
  %126 = add nuw nsw i64 %111, 32
  %127 = getelementptr inbounds i8, i8* %107, i64 %126
  %128 = load i8, i8* %127, align 1
  %129 = zext i8 %128 to i32
  %130 = mul nuw nsw i32 %129, %105
  %131 = add nuw nsw i32 %130, %120
  %132 = add nuw nsw i32 %115, 64
  %133 = add nuw nsw i32 %132, %125
  %134 = sub nsw i32 %133, %131
  %135 = ashr i32 %134, 7
  %136 = sext i32 %135 to i64
  %137 = getelementptr inbounds i8, i8* getelementptr inbounds ([2304 x i8], [2304 x i8]* @ff_crop_tab, i64 0, i64 1024), i64 %136
  %138 = load i8, i8* %137, align 1
  %139 = getelementptr inbounds i8, i8* %109, i64 %111
  store i8 %138, i8* %139, align 1
  %140 = add nuw nsw i64 %111, 1
  %141 = icmp eq i64 %140, 16
  br i1 %141, label %142, label %110

142:                                              ; preds = %110
  %143 = getelementptr inbounds i8, i8* %109, i64 %1
  %144 = getelementptr inbounds i8, i8* %107, i64 16
  %145 = add nuw nsw i32 %108, 1
  %146 = icmp eq i32 %145, %4
  br i1 %146, label %147, label %106

147:                                              ; preds = %142, %88
  call void @llvm.lifetime.end.p0i8(i64 560, i8* nonnull %11) #5
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define internal void @put_vp8_epel16_v6_c(i8* nocapture, i64, i8* nocapture readonly, i64, i32, i32, i32) #2 {
  %8 = add nsw i32 %6, -1
  %9 = sext i32 %8 to i64
  %10 = icmp sgt i32 %4, 0
  br i1 %10, label %11, label %85

11:                                               ; preds = %7
  %12 = getelementptr inbounds [7 x [6 x i8]], [7 x [6 x i8]]* @subpel_filters, i64 0, i64 %9, i64 0
  %13 = getelementptr inbounds [7 x [6 x i8]], [7 x [6 x i8]]* @subpel_filters, i64 0, i64 %9, i64 2
  %14 = load i8, i8* %13, align 2
  %15 = zext i8 %14 to i32
  %16 = getelementptr inbounds [7 x [6 x i8]], [7 x [6 x i8]]* @subpel_filters, i64 0, i64 %9, i64 1
  %17 = load i8, i8* %16, align 1
  %18 = zext i8 %17 to i32
  %19 = load i8, i8* %12, align 2
  %20 = zext i8 %19 to i32
  %21 = shl nsw i64 %3, 1
  %22 = getelementptr inbounds [7 x [6 x i8]], [7 x [6 x i8]]* @subpel_filters, i64 0, i64 %9, i64 3
  %23 = load i8, i8* %22, align 1
  %24 = zext i8 %23 to i32
  %25 = getelementptr inbounds [7 x [6 x i8]], [7 x [6 x i8]]* @subpel_filters, i64 0, i64 %9, i64 4
  %26 = load i8, i8* %25, align 2
  %27 = zext i8 %26 to i32
  %28 = getelementptr inbounds [7 x [6 x i8]], [7 x [6 x i8]]* @subpel_filters, i64 0, i64 %9, i64 5
  %29 = load i8, i8* %28, align 1
  %30 = zext i8 %29 to i32
  %31 = mul nsw i64 %3, 3
  br label %32

32:                                               ; preds = %80, %11
  %33 = phi i32 [ 0, %11 ], [ %83, %80 ]
  %34 = phi i8* [ %0, %11 ], [ %81, %80 ]
  %35 = phi i8* [ %2, %11 ], [ %82, %80 ]
  br label %36

36:                                               ; preds = %36, %32
  %37 = phi i64 [ 0, %32 ], [ %78, %36 ]
  %38 = getelementptr inbounds i8, i8* %35, i64 %37
  %39 = load i8, i8* %38, align 1
  %40 = zext i8 %39 to i32
  %41 = mul nuw nsw i32 %40, %15
  %42 = sub nsw i64 %37, %3
  %43 = getelementptr inbounds i8, i8* %35, i64 %42
  %44 = load i8, i8* %43, align 1
  %45 = zext i8 %44 to i32
  %46 = mul nuw nsw i32 %45, %18
  %47 = sub nsw i64 %37, %21
  %48 = getelementptr inbounds i8, i8* %35, i64 %47
  %49 = load i8, i8* %48, align 1
  %50 = zext i8 %49 to i32
  %51 = mul nuw nsw i32 %50, %20
  %52 = add nsw i64 %37, %3
  %53 = getelementptr inbounds i8, i8* %35, i64 %52
  %54 = load i8, i8* %53, align 1
  %55 = zext i8 %54 to i32
  %56 = mul nuw nsw i32 %55, %24
  %57 = add nsw i64 %21, %37
  %58 = getelementptr inbounds i8, i8* %35, i64 %57
  %59 = load i8, i8* %58, align 1
  %60 = zext i8 %59 to i32
  %61 = mul nuw nsw i32 %60, %27
  %62 = add nsw i64 %31, %37
  %63 = getelementptr inbounds i8, i8* %35, i64 %62
  %64 = load i8, i8* %63, align 1
  %65 = zext i8 %64 to i32
  %66 = mul nuw nsw i32 %65, %30
  %67 = add nuw nsw i32 %61, %46
  %68 = add nuw nsw i32 %41, 64
  %69 = add nuw nsw i32 %68, %51
  %70 = add nuw nsw i32 %69, %56
  %71 = add nuw nsw i32 %70, %66
  %72 = sub nsw i32 %71, %67
  %73 = ashr i32 %72, 7
  %74 = sext i32 %73 to i64
  %75 = getelementptr inbounds i8, i8* getelementptr inbounds ([2304 x i8], [2304 x i8]* @ff_crop_tab, i64 0, i64 1024), i64 %74
  %76 = load i8, i8* %75, align 1
  %77 = getelementptr inbounds i8, i8* %34, i64 %37
  store i8 %76, i8* %77, align 1
  %78 = add nuw nsw i64 %37, 1
  %79 = icmp eq i64 %78, 16
  br i1 %79, label %80, label %36

80:                                               ; preds = %36
  %81 = getelementptr inbounds i8, i8* %34, i64 %1
  %82 = getelementptr inbounds i8, i8* %35, i64 %3
  %83 = add nuw nsw i32 %33, 1
  %84 = icmp eq i32 %83, %4
  br i1 %84, label %85, label %32

85:                                               ; preds = %80, %7
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @put_vp8_epel16_h4v6_c(i8* nocapture, i64, i8* nocapture readonly, i64, i32, i32, i32) #1 {
  %8 = alloca [592 x i8], align 16
  %9 = add nsw i32 %5, -1
  %10 = sext i32 %9 to i64
  %11 = getelementptr inbounds [592 x i8], [592 x i8]* %8, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 592, i8* nonnull %11) #5
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %11, i8 -86, i64 592, i1 false)
  %12 = add i32 %4, 5
  %13 = icmp sgt i32 %12, 0
  br i1 %13, label %14, label %71

14:                                               ; preds = %7
  %15 = shl nsw i64 %3, 1
  %16 = sub i64 0, %15
  %17 = getelementptr inbounds i8, i8* %2, i64 %16
  %18 = getelementptr inbounds [7 x [6 x i8]], [7 x [6 x i8]]* @subpel_filters, i64 0, i64 %10, i64 2
  %19 = load i8, i8* %18, align 2
  %20 = zext i8 %19 to i32
  %21 = getelementptr inbounds [7 x [6 x i8]], [7 x [6 x i8]]* @subpel_filters, i64 0, i64 %10, i64 1
  %22 = load i8, i8* %21, align 1
  %23 = zext i8 %22 to i32
  %24 = getelementptr inbounds [7 x [6 x i8]], [7 x [6 x i8]]* @subpel_filters, i64 0, i64 %10, i64 3
  %25 = load i8, i8* %24, align 1
  %26 = zext i8 %25 to i32
  %27 = getelementptr inbounds [7 x [6 x i8]], [7 x [6 x i8]]* @subpel_filters, i64 0, i64 %10, i64 4
  %28 = load i8, i8* %27, align 2
  %29 = zext i8 %28 to i32
  br label %30

30:                                               ; preds = %66, %14
  %31 = phi i8* [ %11, %14 ], [ %67, %66 ]
  %32 = phi i32 [ 0, %14 ], [ %69, %66 ]
  %33 = phi i8* [ %17, %14 ], [ %68, %66 ]
  %34 = load i8, i8* %33, align 1
  %35 = getelementptr inbounds i8, i8* %33, i64 1
  %36 = load i8, i8* %35, align 1
  br label %37

37:                                               ; preds = %37, %30
  %38 = phi i8 [ %36, %30 ], [ %53, %37 ]
  %39 = phi i8 [ %34, %30 ], [ %38, %37 ]
  %40 = phi i64 [ 0, %30 ], [ %48, %37 ]
  %41 = zext i8 %39 to i32
  %42 = mul nuw nsw i32 %41, %20
  %43 = add nsw i64 %40, -1
  %44 = getelementptr inbounds i8, i8* %33, i64 %43
  %45 = load i8, i8* %44, align 1
  %46 = zext i8 %45 to i32
  %47 = mul nuw nsw i32 %46, %23
  %48 = add nuw nsw i64 %40, 1
  %49 = zext i8 %38 to i32
  %50 = mul nuw nsw i32 %49, %26
  %51 = add nuw nsw i64 %40, 2
  %52 = getelementptr inbounds i8, i8* %33, i64 %51
  %53 = load i8, i8* %52, align 1
  %54 = zext i8 %53 to i32
  %55 = mul nuw nsw i32 %54, %29
  %56 = add nuw nsw i32 %55, %47
  %57 = add nuw nsw i32 %42, 64
  %58 = add nuw nsw i32 %57, %50
  %59 = sub nsw i32 %58, %56
  %60 = ashr i32 %59, 7
  %61 = sext i32 %60 to i64
  %62 = getelementptr inbounds i8, i8* getelementptr inbounds ([2304 x i8], [2304 x i8]* @ff_crop_tab, i64 0, i64 1024), i64 %61
  %63 = load i8, i8* %62, align 1
  %64 = getelementptr inbounds i8, i8* %31, i64 %40
  store i8 %63, i8* %64, align 1
  %65 = icmp eq i64 %48, 16
  br i1 %65, label %66, label %37

66:                                               ; preds = %37
  %67 = getelementptr inbounds i8, i8* %31, i64 16
  %68 = getelementptr inbounds i8, i8* %33, i64 %3
  %69 = add nuw nsw i32 %32, 1
  %70 = icmp eq i32 %69, %12
  br i1 %70, label %71, label %30

71:                                               ; preds = %66, %7
  %72 = add nsw i32 %6, -1
  %73 = sext i32 %72 to i64
  %74 = icmp sgt i32 %4, 0
  br i1 %74, label %75, label %148

75:                                               ; preds = %71
  %76 = getelementptr inbounds [7 x [6 x i8]], [7 x [6 x i8]]* @subpel_filters, i64 0, i64 %73, i64 0
  %77 = getelementptr inbounds [592 x i8], [592 x i8]* %8, i64 0, i64 32
  %78 = getelementptr inbounds [7 x [6 x i8]], [7 x [6 x i8]]* @subpel_filters, i64 0, i64 %73, i64 2
  %79 = load i8, i8* %78, align 2
  %80 = zext i8 %79 to i32
  %81 = getelementptr inbounds [7 x [6 x i8]], [7 x [6 x i8]]* @subpel_filters, i64 0, i64 %73, i64 1
  %82 = load i8, i8* %81, align 1
  %83 = zext i8 %82 to i32
  %84 = load i8, i8* %76, align 2
  %85 = zext i8 %84 to i32
  %86 = getelementptr inbounds [7 x [6 x i8]], [7 x [6 x i8]]* @subpel_filters, i64 0, i64 %73, i64 3
  %87 = load i8, i8* %86, align 1
  %88 = zext i8 %87 to i32
  %89 = getelementptr inbounds [7 x [6 x i8]], [7 x [6 x i8]]* @subpel_filters, i64 0, i64 %73, i64 4
  %90 = load i8, i8* %89, align 2
  %91 = zext i8 %90 to i32
  %92 = getelementptr inbounds [7 x [6 x i8]], [7 x [6 x i8]]* @subpel_filters, i64 0, i64 %73, i64 5
  %93 = load i8, i8* %92, align 1
  %94 = zext i8 %93 to i32
  br label %95

95:                                               ; preds = %143, %75
  %96 = phi i8* [ %77, %75 ], [ %145, %143 ]
  %97 = phi i32 [ 0, %75 ], [ %146, %143 ]
  %98 = phi i8* [ %0, %75 ], [ %144, %143 ]
  br label %99

99:                                               ; preds = %99, %95
  %100 = phi i64 [ 0, %95 ], [ %141, %99 ]
  %101 = getelementptr inbounds i8, i8* %96, i64 %100
  %102 = load i8, i8* %101, align 1
  %103 = zext i8 %102 to i32
  %104 = mul nuw nsw i32 %103, %80
  %105 = add nuw nsw i64 %100, -16
  %106 = getelementptr inbounds i8, i8* %96, i64 %105
  %107 = load i8, i8* %106, align 1
  %108 = zext i8 %107 to i32
  %109 = mul nuw nsw i32 %108, %83
  %110 = add nuw nsw i64 %100, -32
  %111 = getelementptr inbounds i8, i8* %96, i64 %110
  %112 = load i8, i8* %111, align 1
  %113 = zext i8 %112 to i32
  %114 = mul nuw nsw i32 %113, %85
  %115 = add nuw nsw i64 %100, 16
  %116 = getelementptr inbounds i8, i8* %96, i64 %115
  %117 = load i8, i8* %116, align 1
  %118 = zext i8 %117 to i32
  %119 = mul nuw nsw i32 %118, %88
  %120 = add nuw nsw i64 %100, 32
  %121 = getelementptr inbounds i8, i8* %96, i64 %120
  %122 = load i8, i8* %121, align 1
  %123 = zext i8 %122 to i32
  %124 = mul nuw nsw i32 %123, %91
  %125 = add nuw nsw i64 %100, 48
  %126 = getelementptr inbounds i8, i8* %96, i64 %125
  %127 = load i8, i8* %126, align 1
  %128 = zext i8 %127 to i32
  %129 = mul nuw nsw i32 %128, %94
  %130 = add nuw nsw i32 %124, %109
  %131 = add nuw nsw i32 %104, 64
  %132 = add nuw nsw i32 %131, %114
  %133 = add nuw nsw i32 %132, %119
  %134 = add nuw nsw i32 %133, %129
  %135 = sub nsw i32 %134, %130
  %136 = ashr i32 %135, 7
  %137 = sext i32 %136 to i64
  %138 = getelementptr inbounds i8, i8* getelementptr inbounds ([2304 x i8], [2304 x i8]* @ff_crop_tab, i64 0, i64 1024), i64 %137
  %139 = load i8, i8* %138, align 1
  %140 = getelementptr inbounds i8, i8* %98, i64 %100
  store i8 %139, i8* %140, align 1
  %141 = add nuw nsw i64 %100, 1
  %142 = icmp eq i64 %141, 16
  br i1 %142, label %143, label %99

143:                                              ; preds = %99
  %144 = getelementptr inbounds i8, i8* %98, i64 %1
  %145 = getelementptr inbounds i8, i8* %96, i64 16
  %146 = add nuw nsw i32 %97, 1
  %147 = icmp eq i32 %146, %4
  br i1 %147, label %148, label %95

148:                                              ; preds = %143, %71
  call void @llvm.lifetime.end.p0i8(i64 592, i8* nonnull %11) #5
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @put_vp8_epel16_h6v6_c(i8* nocapture, i64, i8* nocapture readonly, i64, i32, i32, i32) #1 {
  %8 = alloca [592 x i8], align 16
  %9 = add nsw i32 %5, -1
  %10 = sext i32 %9 to i64
  %11 = getelementptr inbounds [592 x i8], [592 x i8]* %8, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 592, i8* nonnull %11) #5
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %11, i8 -86, i64 592, i1 false)
  %12 = add i32 %4, 5
  %13 = icmp sgt i32 %12, 0
  br i1 %13, label %14, label %89

14:                                               ; preds = %7
  %15 = shl nsw i64 %3, 1
  %16 = sub i64 0, %15
  %17 = getelementptr inbounds i8, i8* %2, i64 %16
  %18 = getelementptr inbounds [7 x [6 x i8]], [7 x [6 x i8]]* @subpel_filters, i64 0, i64 %10, i64 0
  %19 = getelementptr inbounds [7 x [6 x i8]], [7 x [6 x i8]]* @subpel_filters, i64 0, i64 %10, i64 2
  %20 = load i8, i8* %19, align 2
  %21 = zext i8 %20 to i32
  %22 = getelementptr inbounds [7 x [6 x i8]], [7 x [6 x i8]]* @subpel_filters, i64 0, i64 %10, i64 1
  %23 = load i8, i8* %22, align 1
  %24 = zext i8 %23 to i32
  %25 = load i8, i8* %18, align 2
  %26 = zext i8 %25 to i32
  %27 = getelementptr inbounds [7 x [6 x i8]], [7 x [6 x i8]]* @subpel_filters, i64 0, i64 %10, i64 3
  %28 = load i8, i8* %27, align 1
  %29 = zext i8 %28 to i32
  %30 = getelementptr inbounds [7 x [6 x i8]], [7 x [6 x i8]]* @subpel_filters, i64 0, i64 %10, i64 4
  %31 = load i8, i8* %30, align 2
  %32 = zext i8 %31 to i32
  %33 = getelementptr inbounds [7 x [6 x i8]], [7 x [6 x i8]]* @subpel_filters, i64 0, i64 %10, i64 5
  %34 = load i8, i8* %33, align 1
  %35 = zext i8 %34 to i32
  br label %36

36:                                               ; preds = %84, %14
  %37 = phi i8* [ %11, %14 ], [ %85, %84 ]
  %38 = phi i32 [ 0, %14 ], [ %87, %84 ]
  %39 = phi i8* [ %17, %14 ], [ %86, %84 ]
  %40 = load i8, i8* %39, align 1
  %41 = getelementptr inbounds i8, i8* %39, i64 -2
  %42 = load i8, i8* %41, align 1
  %43 = getelementptr inbounds i8, i8* %39, i64 1
  %44 = load i8, i8* %43, align 1
  %45 = getelementptr inbounds i8, i8* %39, i64 2
  %46 = load i8, i8* %45, align 1
  br label %47

47:                                               ; preds = %47, %36
  %48 = phi i8 [ %46, %36 ], [ %69, %47 ]
  %49 = phi i8 [ %44, %36 ], [ %48, %47 ]
  %50 = phi i8 [ %42, %36 ], [ %57, %47 ]
  %51 = phi i8 [ %40, %36 ], [ %49, %47 ]
  %52 = phi i64 [ 0, %36 ], [ %62, %47 ]
  %53 = zext i8 %51 to i32
  %54 = mul nuw nsw i32 %53, %21
  %55 = add nsw i64 %52, -1
  %56 = getelementptr inbounds i8, i8* %39, i64 %55
  %57 = load i8, i8* %56, align 1
  %58 = zext i8 %57 to i32
  %59 = mul nuw nsw i32 %58, %24
  %60 = zext i8 %50 to i32
  %61 = mul nuw nsw i32 %60, %26
  %62 = add nuw nsw i64 %52, 1
  %63 = zext i8 %49 to i32
  %64 = mul nuw nsw i32 %63, %29
  %65 = zext i8 %48 to i32
  %66 = mul nuw nsw i32 %65, %32
  %67 = add nuw nsw i64 %52, 3
  %68 = getelementptr inbounds i8, i8* %39, i64 %67
  %69 = load i8, i8* %68, align 1
  %70 = zext i8 %69 to i32
  %71 = mul nuw nsw i32 %70, %35
  %72 = add nuw nsw i32 %66, %59
  %73 = add nuw nsw i32 %54, 64
  %74 = add nuw nsw i32 %73, %61
  %75 = add nuw nsw i32 %74, %64
  %76 = add nuw nsw i32 %75, %71
  %77 = sub nsw i32 %76, %72
  %78 = ashr i32 %77, 7
  %79 = sext i32 %78 to i64
  %80 = getelementptr inbounds i8, i8* getelementptr inbounds ([2304 x i8], [2304 x i8]* @ff_crop_tab, i64 0, i64 1024), i64 %79
  %81 = load i8, i8* %80, align 1
  %82 = getelementptr inbounds i8, i8* %37, i64 %52
  store i8 %81, i8* %82, align 1
  %83 = icmp eq i64 %62, 16
  br i1 %83, label %84, label %47

84:                                               ; preds = %47
  %85 = getelementptr inbounds i8, i8* %37, i64 16
  %86 = getelementptr inbounds i8, i8* %39, i64 %3
  %87 = add nuw nsw i32 %38, 1
  %88 = icmp eq i32 %87, %12
  br i1 %88, label %89, label %36

89:                                               ; preds = %84, %7
  %90 = add nsw i32 %6, -1
  %91 = sext i32 %90 to i64
  %92 = icmp sgt i32 %4, 0
  br i1 %92, label %93, label %166

93:                                               ; preds = %89
  %94 = getelementptr inbounds [7 x [6 x i8]], [7 x [6 x i8]]* @subpel_filters, i64 0, i64 %91, i64 0
  %95 = getelementptr inbounds [592 x i8], [592 x i8]* %8, i64 0, i64 32
  %96 = getelementptr inbounds [7 x [6 x i8]], [7 x [6 x i8]]* @subpel_filters, i64 0, i64 %91, i64 2
  %97 = load i8, i8* %96, align 2
  %98 = zext i8 %97 to i32
  %99 = getelementptr inbounds [7 x [6 x i8]], [7 x [6 x i8]]* @subpel_filters, i64 0, i64 %91, i64 1
  %100 = load i8, i8* %99, align 1
  %101 = zext i8 %100 to i32
  %102 = load i8, i8* %94, align 2
  %103 = zext i8 %102 to i32
  %104 = getelementptr inbounds [7 x [6 x i8]], [7 x [6 x i8]]* @subpel_filters, i64 0, i64 %91, i64 3
  %105 = load i8, i8* %104, align 1
  %106 = zext i8 %105 to i32
  %107 = getelementptr inbounds [7 x [6 x i8]], [7 x [6 x i8]]* @subpel_filters, i64 0, i64 %91, i64 4
  %108 = load i8, i8* %107, align 2
  %109 = zext i8 %108 to i32
  %110 = getelementptr inbounds [7 x [6 x i8]], [7 x [6 x i8]]* @subpel_filters, i64 0, i64 %91, i64 5
  %111 = load i8, i8* %110, align 1
  %112 = zext i8 %111 to i32
  br label %113

113:                                              ; preds = %161, %93
  %114 = phi i8* [ %95, %93 ], [ %163, %161 ]
  %115 = phi i32 [ 0, %93 ], [ %164, %161 ]
  %116 = phi i8* [ %0, %93 ], [ %162, %161 ]
  br label %117

117:                                              ; preds = %117, %113
  %118 = phi i64 [ 0, %113 ], [ %159, %117 ]
  %119 = getelementptr inbounds i8, i8* %114, i64 %118
  %120 = load i8, i8* %119, align 1
  %121 = zext i8 %120 to i32
  %122 = mul nuw nsw i32 %121, %98
  %123 = add nuw nsw i64 %118, -16
  %124 = getelementptr inbounds i8, i8* %114, i64 %123
  %125 = load i8, i8* %124, align 1
  %126 = zext i8 %125 to i32
  %127 = mul nuw nsw i32 %126, %101
  %128 = add nuw nsw i64 %118, -32
  %129 = getelementptr inbounds i8, i8* %114, i64 %128
  %130 = load i8, i8* %129, align 1
  %131 = zext i8 %130 to i32
  %132 = mul nuw nsw i32 %131, %103
  %133 = add nuw nsw i64 %118, 16
  %134 = getelementptr inbounds i8, i8* %114, i64 %133
  %135 = load i8, i8* %134, align 1
  %136 = zext i8 %135 to i32
  %137 = mul nuw nsw i32 %136, %106
  %138 = add nuw nsw i64 %118, 32
  %139 = getelementptr inbounds i8, i8* %114, i64 %138
  %140 = load i8, i8* %139, align 1
  %141 = zext i8 %140 to i32
  %142 = mul nuw nsw i32 %141, %109
  %143 = add nuw nsw i64 %118, 48
  %144 = getelementptr inbounds i8, i8* %114, i64 %143
  %145 = load i8, i8* %144, align 1
  %146 = zext i8 %145 to i32
  %147 = mul nuw nsw i32 %146, %112
  %148 = add nuw nsw i32 %142, %127
  %149 = add nuw nsw i32 %122, 64
  %150 = add nuw nsw i32 %149, %132
  %151 = add nuw nsw i32 %150, %137
  %152 = add nuw nsw i32 %151, %147
  %153 = sub nsw i32 %152, %148
  %154 = ashr i32 %153, 7
  %155 = sext i32 %154 to i64
  %156 = getelementptr inbounds i8, i8* getelementptr inbounds ([2304 x i8], [2304 x i8]* @ff_crop_tab, i64 0, i64 1024), i64 %155
  %157 = load i8, i8* %156, align 1
  %158 = getelementptr inbounds i8, i8* %116, i64 %118
  store i8 %157, i8* %158, align 1
  %159 = add nuw nsw i64 %118, 1
  %160 = icmp eq i64 %159, 16
  br i1 %160, label %161, label %117

161:                                              ; preds = %117
  %162 = getelementptr inbounds i8, i8* %116, i64 %1
  %163 = getelementptr inbounds i8, i8* %114, i64 16
  %164 = add nuw nsw i32 %115, 1
  %165 = icmp eq i32 %164, %4
  br i1 %165, label %166, label %113

166:                                              ; preds = %161, %89
  call void @llvm.lifetime.end.p0i8(i64 592, i8* nonnull %11) #5
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define internal void @put_vp8_pixels8_c(i8* nocapture, i64, i8* nocapture readonly, i64, i32, i32, i32) #2 {
  %8 = icmp sgt i32 %4, 0
  br i1 %8, label %9, label %76

9:                                                ; preds = %7
  %10 = add i32 %4, -1
  %11 = and i32 %4, 7
  %12 = icmp ult i32 %10, 7
  br i1 %12, label %61, label %13

13:                                               ; preds = %9
  %14 = sub i32 %4, %11
  br label %15

15:                                               ; preds = %15, %13
  %16 = phi i8* [ %0, %13 ], [ %57, %15 ]
  %17 = phi i8* [ %2, %13 ], [ %58, %15 ]
  %18 = phi i32 [ %14, %13 ], [ %59, %15 ]
  %19 = bitcast i8* %17 to i64*
  %20 = bitcast i8* %16 to i64*
  %21 = load i64, i64* %19, align 1
  store i64 %21, i64* %20, align 1
  %22 = getelementptr inbounds i8, i8* %16, i64 %1
  %23 = getelementptr inbounds i8, i8* %17, i64 %3
  %24 = bitcast i8* %23 to i64*
  %25 = bitcast i8* %22 to i64*
  %26 = load i64, i64* %24, align 1
  store i64 %26, i64* %25, align 1
  %27 = getelementptr inbounds i8, i8* %22, i64 %1
  %28 = getelementptr inbounds i8, i8* %23, i64 %3
  %29 = bitcast i8* %28 to i64*
  %30 = bitcast i8* %27 to i64*
  %31 = load i64, i64* %29, align 1
  store i64 %31, i64* %30, align 1
  %32 = getelementptr inbounds i8, i8* %27, i64 %1
  %33 = getelementptr inbounds i8, i8* %28, i64 %3
  %34 = bitcast i8* %33 to i64*
  %35 = bitcast i8* %32 to i64*
  %36 = load i64, i64* %34, align 1
  store i64 %36, i64* %35, align 1
  %37 = getelementptr inbounds i8, i8* %32, i64 %1
  %38 = getelementptr inbounds i8, i8* %33, i64 %3
  %39 = bitcast i8* %38 to i64*
  %40 = bitcast i8* %37 to i64*
  %41 = load i64, i64* %39, align 1
  store i64 %41, i64* %40, align 1
  %42 = getelementptr inbounds i8, i8* %37, i64 %1
  %43 = getelementptr inbounds i8, i8* %38, i64 %3
  %44 = bitcast i8* %43 to i64*
  %45 = bitcast i8* %42 to i64*
  %46 = load i64, i64* %44, align 1
  store i64 %46, i64* %45, align 1
  %47 = getelementptr inbounds i8, i8* %42, i64 %1
  %48 = getelementptr inbounds i8, i8* %43, i64 %3
  %49 = bitcast i8* %48 to i64*
  %50 = bitcast i8* %47 to i64*
  %51 = load i64, i64* %49, align 1
  store i64 %51, i64* %50, align 1
  %52 = getelementptr inbounds i8, i8* %47, i64 %1
  %53 = getelementptr inbounds i8, i8* %48, i64 %3
  %54 = bitcast i8* %53 to i64*
  %55 = bitcast i8* %52 to i64*
  %56 = load i64, i64* %54, align 1
  store i64 %56, i64* %55, align 1
  %57 = getelementptr inbounds i8, i8* %52, i64 %1
  %58 = getelementptr inbounds i8, i8* %53, i64 %3
  %59 = add i32 %18, -8
  %60 = icmp eq i32 %59, 0
  br i1 %60, label %61, label %15

61:                                               ; preds = %15, %9
  %62 = phi i8* [ %0, %9 ], [ %57, %15 ]
  %63 = phi i8* [ %2, %9 ], [ %58, %15 ]
  %64 = icmp eq i32 %11, 0
  br i1 %64, label %76, label %65

65:                                               ; preds = %61, %65
  %66 = phi i8* [ %72, %65 ], [ %62, %61 ]
  %67 = phi i8* [ %73, %65 ], [ %63, %61 ]
  %68 = phi i32 [ %74, %65 ], [ %11, %61 ]
  %69 = bitcast i8* %67 to i64*
  %70 = bitcast i8* %66 to i64*
  %71 = load i64, i64* %69, align 1
  store i64 %71, i64* %70, align 1
  %72 = getelementptr inbounds i8, i8* %66, i64 %1
  %73 = getelementptr inbounds i8, i8* %67, i64 %3
  %74 = add i32 %68, -1
  %75 = icmp eq i32 %74, 0
  br i1 %75, label %76, label %65, !llvm.loop !4

76:                                               ; preds = %61, %65, %7
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define internal void @put_vp8_epel8_h4_c(i8* nocapture, i64, i8* nocapture readonly, i64, i32, i32, i32) #2 {
  %8 = add nsw i32 %5, -1
  %9 = sext i32 %8 to i64
  %10 = icmp sgt i32 %4, 0
  br i1 %10, label %11, label %209

11:                                               ; preds = %7
  %12 = getelementptr inbounds [7 x [6 x i8]], [7 x [6 x i8]]* @subpel_filters, i64 0, i64 %9, i64 2
  %13 = load i8, i8* %12, align 2
  %14 = zext i8 %13 to i32
  %15 = getelementptr inbounds [7 x [6 x i8]], [7 x [6 x i8]]* @subpel_filters, i64 0, i64 %9, i64 1
  %16 = load i8, i8* %15, align 1
  %17 = zext i8 %16 to i32
  %18 = getelementptr inbounds [7 x [6 x i8]], [7 x [6 x i8]]* @subpel_filters, i64 0, i64 %9, i64 3
  %19 = load i8, i8* %18, align 1
  %20 = zext i8 %19 to i32
  %21 = getelementptr inbounds [7 x [6 x i8]], [7 x [6 x i8]]* @subpel_filters, i64 0, i64 %9, i64 4
  %22 = load i8, i8* %21, align 2
  %23 = zext i8 %22 to i32
  br label %24

24:                                               ; preds = %24, %11
  %25 = phi i32 [ 0, %11 ], [ %207, %24 ]
  %26 = phi i8* [ %0, %11 ], [ %205, %24 ]
  %27 = phi i8* [ %2, %11 ], [ %206, %24 ]
  %28 = load i8, i8* %27, align 1
  %29 = zext i8 %28 to i32
  %30 = mul nuw nsw i32 %29, %14
  %31 = getelementptr inbounds i8, i8* %27, i64 -1
  %32 = load i8, i8* %31, align 1
  %33 = zext i8 %32 to i32
  %34 = mul nuw nsw i32 %33, %17
  %35 = getelementptr inbounds i8, i8* %27, i64 1
  %36 = load i8, i8* %35, align 1
  %37 = zext i8 %36 to i32
  %38 = mul nuw nsw i32 %37, %20
  %39 = getelementptr inbounds i8, i8* %27, i64 2
  %40 = load i8, i8* %39, align 1
  %41 = zext i8 %40 to i32
  %42 = mul nuw nsw i32 %41, %23
  %43 = add nuw nsw i32 %42, %34
  %44 = add nuw nsw i32 %30, 64
  %45 = add nuw nsw i32 %44, %38
  %46 = sub nsw i32 %45, %43
  %47 = ashr i32 %46, 7
  %48 = sext i32 %47 to i64
  %49 = getelementptr inbounds i8, i8* getelementptr inbounds ([2304 x i8], [2304 x i8]* @ff_crop_tab, i64 0, i64 1024), i64 %48
  %50 = load i8, i8* %49, align 1
  store i8 %50, i8* %26, align 1
  %51 = load i8, i8* %35, align 1
  %52 = zext i8 %51 to i32
  %53 = mul nuw nsw i32 %52, %14
  %54 = load i8, i8* %27, align 1
  %55 = zext i8 %54 to i32
  %56 = mul nuw nsw i32 %55, %17
  %57 = load i8, i8* %39, align 1
  %58 = zext i8 %57 to i32
  %59 = mul nuw nsw i32 %58, %20
  %60 = getelementptr inbounds i8, i8* %27, i64 3
  %61 = load i8, i8* %60, align 1
  %62 = zext i8 %61 to i32
  %63 = mul nuw nsw i32 %62, %23
  %64 = add nuw nsw i32 %63, %56
  %65 = add nuw nsw i32 %53, 64
  %66 = add nuw nsw i32 %65, %59
  %67 = sub nsw i32 %66, %64
  %68 = ashr i32 %67, 7
  %69 = sext i32 %68 to i64
  %70 = getelementptr inbounds i8, i8* getelementptr inbounds ([2304 x i8], [2304 x i8]* @ff_crop_tab, i64 0, i64 1024), i64 %69
  %71 = load i8, i8* %70, align 1
  %72 = getelementptr inbounds i8, i8* %26, i64 1
  store i8 %71, i8* %72, align 1
  %73 = load i8, i8* %39, align 1
  %74 = zext i8 %73 to i32
  %75 = mul nuw nsw i32 %74, %14
  %76 = load i8, i8* %35, align 1
  %77 = zext i8 %76 to i32
  %78 = mul nuw nsw i32 %77, %17
  %79 = load i8, i8* %60, align 1
  %80 = zext i8 %79 to i32
  %81 = mul nuw nsw i32 %80, %20
  %82 = getelementptr inbounds i8, i8* %27, i64 4
  %83 = load i8, i8* %82, align 1
  %84 = zext i8 %83 to i32
  %85 = mul nuw nsw i32 %84, %23
  %86 = add nuw nsw i32 %85, %78
  %87 = add nuw nsw i32 %75, 64
  %88 = add nuw nsw i32 %87, %81
  %89 = sub nsw i32 %88, %86
  %90 = ashr i32 %89, 7
  %91 = sext i32 %90 to i64
  %92 = getelementptr inbounds i8, i8* getelementptr inbounds ([2304 x i8], [2304 x i8]* @ff_crop_tab, i64 0, i64 1024), i64 %91
  %93 = load i8, i8* %92, align 1
  %94 = getelementptr inbounds i8, i8* %26, i64 2
  store i8 %93, i8* %94, align 1
  %95 = load i8, i8* %60, align 1
  %96 = zext i8 %95 to i32
  %97 = mul nuw nsw i32 %96, %14
  %98 = load i8, i8* %39, align 1
  %99 = zext i8 %98 to i32
  %100 = mul nuw nsw i32 %99, %17
  %101 = load i8, i8* %82, align 1
  %102 = zext i8 %101 to i32
  %103 = mul nuw nsw i32 %102, %20
  %104 = getelementptr inbounds i8, i8* %27, i64 5
  %105 = load i8, i8* %104, align 1
  %106 = zext i8 %105 to i32
  %107 = mul nuw nsw i32 %106, %23
  %108 = add nuw nsw i32 %107, %100
  %109 = add nuw nsw i32 %97, 64
  %110 = add nuw nsw i32 %109, %103
  %111 = sub nsw i32 %110, %108
  %112 = ashr i32 %111, 7
  %113 = sext i32 %112 to i64
  %114 = getelementptr inbounds i8, i8* getelementptr inbounds ([2304 x i8], [2304 x i8]* @ff_crop_tab, i64 0, i64 1024), i64 %113
  %115 = load i8, i8* %114, align 1
  %116 = getelementptr inbounds i8, i8* %26, i64 3
  store i8 %115, i8* %116, align 1
  %117 = load i8, i8* %82, align 1
  %118 = zext i8 %117 to i32
  %119 = mul nuw nsw i32 %118, %14
  %120 = load i8, i8* %60, align 1
  %121 = zext i8 %120 to i32
  %122 = mul nuw nsw i32 %121, %17
  %123 = load i8, i8* %104, align 1
  %124 = zext i8 %123 to i32
  %125 = mul nuw nsw i32 %124, %20
  %126 = getelementptr inbounds i8, i8* %27, i64 6
  %127 = load i8, i8* %126, align 1
  %128 = zext i8 %127 to i32
  %129 = mul nuw nsw i32 %128, %23
  %130 = add nuw nsw i32 %129, %122
  %131 = add nuw nsw i32 %119, 64
  %132 = add nuw nsw i32 %131, %125
  %133 = sub nsw i32 %132, %130
  %134 = ashr i32 %133, 7
  %135 = sext i32 %134 to i64
  %136 = getelementptr inbounds i8, i8* getelementptr inbounds ([2304 x i8], [2304 x i8]* @ff_crop_tab, i64 0, i64 1024), i64 %135
  %137 = load i8, i8* %136, align 1
  %138 = getelementptr inbounds i8, i8* %26, i64 4
  store i8 %137, i8* %138, align 1
  %139 = load i8, i8* %104, align 1
  %140 = zext i8 %139 to i32
  %141 = mul nuw nsw i32 %140, %14
  %142 = load i8, i8* %82, align 1
  %143 = zext i8 %142 to i32
  %144 = mul nuw nsw i32 %143, %17
  %145 = load i8, i8* %126, align 1
  %146 = zext i8 %145 to i32
  %147 = mul nuw nsw i32 %146, %20
  %148 = getelementptr inbounds i8, i8* %27, i64 7
  %149 = load i8, i8* %148, align 1
  %150 = zext i8 %149 to i32
  %151 = mul nuw nsw i32 %150, %23
  %152 = add nuw nsw i32 %151, %144
  %153 = add nuw nsw i32 %141, 64
  %154 = add nuw nsw i32 %153, %147
  %155 = sub nsw i32 %154, %152
  %156 = ashr i32 %155, 7
  %157 = sext i32 %156 to i64
  %158 = getelementptr inbounds i8, i8* getelementptr inbounds ([2304 x i8], [2304 x i8]* @ff_crop_tab, i64 0, i64 1024), i64 %157
  %159 = load i8, i8* %158, align 1
  %160 = getelementptr inbounds i8, i8* %26, i64 5
  store i8 %159, i8* %160, align 1
  %161 = load i8, i8* %126, align 1
  %162 = zext i8 %161 to i32
  %163 = mul nuw nsw i32 %162, %14
  %164 = load i8, i8* %104, align 1
  %165 = zext i8 %164 to i32
  %166 = mul nuw nsw i32 %165, %17
  %167 = load i8, i8* %148, align 1
  %168 = zext i8 %167 to i32
  %169 = mul nuw nsw i32 %168, %20
  %170 = getelementptr inbounds i8, i8* %27, i64 8
  %171 = load i8, i8* %170, align 1
  %172 = zext i8 %171 to i32
  %173 = mul nuw nsw i32 %172, %23
  %174 = add nuw nsw i32 %173, %166
  %175 = add nuw nsw i32 %163, 64
  %176 = add nuw nsw i32 %175, %169
  %177 = sub nsw i32 %176, %174
  %178 = ashr i32 %177, 7
  %179 = sext i32 %178 to i64
  %180 = getelementptr inbounds i8, i8* getelementptr inbounds ([2304 x i8], [2304 x i8]* @ff_crop_tab, i64 0, i64 1024), i64 %179
  %181 = load i8, i8* %180, align 1
  %182 = getelementptr inbounds i8, i8* %26, i64 6
  store i8 %181, i8* %182, align 1
  %183 = load i8, i8* %148, align 1
  %184 = zext i8 %183 to i32
  %185 = mul nuw nsw i32 %184, %14
  %186 = load i8, i8* %126, align 1
  %187 = zext i8 %186 to i32
  %188 = mul nuw nsw i32 %187, %17
  %189 = load i8, i8* %170, align 1
  %190 = zext i8 %189 to i32
  %191 = mul nuw nsw i32 %190, %20
  %192 = getelementptr inbounds i8, i8* %27, i64 9
  %193 = load i8, i8* %192, align 1
  %194 = zext i8 %193 to i32
  %195 = mul nuw nsw i32 %194, %23
  %196 = add nuw nsw i32 %195, %188
  %197 = add nuw nsw i32 %185, 64
  %198 = add nuw nsw i32 %197, %191
  %199 = sub nsw i32 %198, %196
  %200 = ashr i32 %199, 7
  %201 = sext i32 %200 to i64
  %202 = getelementptr inbounds i8, i8* getelementptr inbounds ([2304 x i8], [2304 x i8]* @ff_crop_tab, i64 0, i64 1024), i64 %201
  %203 = load i8, i8* %202, align 1
  %204 = getelementptr inbounds i8, i8* %26, i64 7
  store i8 %203, i8* %204, align 1
  %205 = getelementptr inbounds i8, i8* %26, i64 %1
  %206 = getelementptr inbounds i8, i8* %27, i64 %3
  %207 = add nuw nsw i32 %25, 1
  %208 = icmp eq i32 %207, %4
  br i1 %208, label %209, label %24

209:                                              ; preds = %24, %7
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define internal void @put_vp8_epel8_h6_c(i8* nocapture, i64, i8* nocapture readonly, i64, i32, i32, i32) #2 {
  %8 = add nsw i32 %5, -1
  %9 = sext i32 %8 to i64
  %10 = icmp sgt i32 %4, 0
  br i1 %10, label %11, label %281

11:                                               ; preds = %7
  %12 = getelementptr inbounds [7 x [6 x i8]], [7 x [6 x i8]]* @subpel_filters, i64 0, i64 %9, i64 0
  %13 = getelementptr inbounds [7 x [6 x i8]], [7 x [6 x i8]]* @subpel_filters, i64 0, i64 %9, i64 2
  %14 = load i8, i8* %13, align 2
  %15 = zext i8 %14 to i32
  %16 = getelementptr inbounds [7 x [6 x i8]], [7 x [6 x i8]]* @subpel_filters, i64 0, i64 %9, i64 1
  %17 = load i8, i8* %16, align 1
  %18 = zext i8 %17 to i32
  %19 = load i8, i8* %12, align 2
  %20 = zext i8 %19 to i32
  %21 = getelementptr inbounds [7 x [6 x i8]], [7 x [6 x i8]]* @subpel_filters, i64 0, i64 %9, i64 3
  %22 = load i8, i8* %21, align 1
  %23 = zext i8 %22 to i32
  %24 = getelementptr inbounds [7 x [6 x i8]], [7 x [6 x i8]]* @subpel_filters, i64 0, i64 %9, i64 4
  %25 = load i8, i8* %24, align 2
  %26 = zext i8 %25 to i32
  %27 = getelementptr inbounds [7 x [6 x i8]], [7 x [6 x i8]]* @subpel_filters, i64 0, i64 %9, i64 5
  %28 = load i8, i8* %27, align 1
  %29 = zext i8 %28 to i32
  br label %30

30:                                               ; preds = %30, %11
  %31 = phi i32 [ 0, %11 ], [ %279, %30 ]
  %32 = phi i8* [ %0, %11 ], [ %277, %30 ]
  %33 = phi i8* [ %2, %11 ], [ %278, %30 ]
  %34 = load i8, i8* %33, align 1
  %35 = zext i8 %34 to i32
  %36 = mul nuw nsw i32 %35, %15
  %37 = getelementptr inbounds i8, i8* %33, i64 -1
  %38 = load i8, i8* %37, align 1
  %39 = zext i8 %38 to i32
  %40 = mul nuw nsw i32 %39, %18
  %41 = getelementptr inbounds i8, i8* %33, i64 -2
  %42 = load i8, i8* %41, align 1
  %43 = zext i8 %42 to i32
  %44 = mul nuw nsw i32 %43, %20
  %45 = getelementptr inbounds i8, i8* %33, i64 1
  %46 = load i8, i8* %45, align 1
  %47 = zext i8 %46 to i32
  %48 = mul nuw nsw i32 %47, %23
  %49 = getelementptr inbounds i8, i8* %33, i64 2
  %50 = load i8, i8* %49, align 1
  %51 = zext i8 %50 to i32
  %52 = mul nuw nsw i32 %51, %26
  %53 = getelementptr inbounds i8, i8* %33, i64 3
  %54 = load i8, i8* %53, align 1
  %55 = zext i8 %54 to i32
  %56 = mul nuw nsw i32 %55, %29
  %57 = add nuw nsw i32 %52, %40
  %58 = add nuw nsw i32 %36, 64
  %59 = add nuw nsw i32 %58, %44
  %60 = add nuw nsw i32 %59, %48
  %61 = add nuw nsw i32 %60, %56
  %62 = sub nsw i32 %61, %57
  %63 = ashr i32 %62, 7
  %64 = sext i32 %63 to i64
  %65 = getelementptr inbounds i8, i8* getelementptr inbounds ([2304 x i8], [2304 x i8]* @ff_crop_tab, i64 0, i64 1024), i64 %64
  %66 = load i8, i8* %65, align 1
  store i8 %66, i8* %32, align 1
  %67 = load i8, i8* %45, align 1
  %68 = zext i8 %67 to i32
  %69 = mul nuw nsw i32 %68, %15
  %70 = load i8, i8* %33, align 1
  %71 = zext i8 %70 to i32
  %72 = mul nuw nsw i32 %71, %18
  %73 = load i8, i8* %37, align 1
  %74 = zext i8 %73 to i32
  %75 = mul nuw nsw i32 %74, %20
  %76 = load i8, i8* %49, align 1
  %77 = zext i8 %76 to i32
  %78 = mul nuw nsw i32 %77, %23
  %79 = load i8, i8* %53, align 1
  %80 = zext i8 %79 to i32
  %81 = mul nuw nsw i32 %80, %26
  %82 = getelementptr inbounds i8, i8* %33, i64 4
  %83 = load i8, i8* %82, align 1
  %84 = zext i8 %83 to i32
  %85 = mul nuw nsw i32 %84, %29
  %86 = add nuw nsw i32 %81, %72
  %87 = add nuw nsw i32 %69, 64
  %88 = add nuw nsw i32 %87, %75
  %89 = add nuw nsw i32 %88, %78
  %90 = add nuw nsw i32 %89, %85
  %91 = sub nsw i32 %90, %86
  %92 = ashr i32 %91, 7
  %93 = sext i32 %92 to i64
  %94 = getelementptr inbounds i8, i8* getelementptr inbounds ([2304 x i8], [2304 x i8]* @ff_crop_tab, i64 0, i64 1024), i64 %93
  %95 = load i8, i8* %94, align 1
  %96 = getelementptr inbounds i8, i8* %32, i64 1
  store i8 %95, i8* %96, align 1
  %97 = load i8, i8* %49, align 1
  %98 = zext i8 %97 to i32
  %99 = mul nuw nsw i32 %98, %15
  %100 = load i8, i8* %45, align 1
  %101 = zext i8 %100 to i32
  %102 = mul nuw nsw i32 %101, %18
  %103 = load i8, i8* %33, align 1
  %104 = zext i8 %103 to i32
  %105 = mul nuw nsw i32 %104, %20
  %106 = load i8, i8* %53, align 1
  %107 = zext i8 %106 to i32
  %108 = mul nuw nsw i32 %107, %23
  %109 = load i8, i8* %82, align 1
  %110 = zext i8 %109 to i32
  %111 = mul nuw nsw i32 %110, %26
  %112 = getelementptr inbounds i8, i8* %33, i64 5
  %113 = load i8, i8* %112, align 1
  %114 = zext i8 %113 to i32
  %115 = mul nuw nsw i32 %114, %29
  %116 = add nuw nsw i32 %111, %102
  %117 = add nuw nsw i32 %99, 64
  %118 = add nuw nsw i32 %117, %105
  %119 = add nuw nsw i32 %118, %108
  %120 = add nuw nsw i32 %119, %115
  %121 = sub nsw i32 %120, %116
  %122 = ashr i32 %121, 7
  %123 = sext i32 %122 to i64
  %124 = getelementptr inbounds i8, i8* getelementptr inbounds ([2304 x i8], [2304 x i8]* @ff_crop_tab, i64 0, i64 1024), i64 %123
  %125 = load i8, i8* %124, align 1
  %126 = getelementptr inbounds i8, i8* %32, i64 2
  store i8 %125, i8* %126, align 1
  %127 = load i8, i8* %53, align 1
  %128 = zext i8 %127 to i32
  %129 = mul nuw nsw i32 %128, %15
  %130 = load i8, i8* %49, align 1
  %131 = zext i8 %130 to i32
  %132 = mul nuw nsw i32 %131, %18
  %133 = load i8, i8* %45, align 1
  %134 = zext i8 %133 to i32
  %135 = mul nuw nsw i32 %134, %20
  %136 = load i8, i8* %82, align 1
  %137 = zext i8 %136 to i32
  %138 = mul nuw nsw i32 %137, %23
  %139 = load i8, i8* %112, align 1
  %140 = zext i8 %139 to i32
  %141 = mul nuw nsw i32 %140, %26
  %142 = getelementptr inbounds i8, i8* %33, i64 6
  %143 = load i8, i8* %142, align 1
  %144 = zext i8 %143 to i32
  %145 = mul nuw nsw i32 %144, %29
  %146 = add nuw nsw i32 %141, %132
  %147 = add nuw nsw i32 %129, 64
  %148 = add nuw nsw i32 %147, %135
  %149 = add nuw nsw i32 %148, %138
  %150 = add nuw nsw i32 %149, %145
  %151 = sub nsw i32 %150, %146
  %152 = ashr i32 %151, 7
  %153 = sext i32 %152 to i64
  %154 = getelementptr inbounds i8, i8* getelementptr inbounds ([2304 x i8], [2304 x i8]* @ff_crop_tab, i64 0, i64 1024), i64 %153
  %155 = load i8, i8* %154, align 1
  %156 = getelementptr inbounds i8, i8* %32, i64 3
  store i8 %155, i8* %156, align 1
  %157 = load i8, i8* %82, align 1
  %158 = zext i8 %157 to i32
  %159 = mul nuw nsw i32 %158, %15
  %160 = load i8, i8* %53, align 1
  %161 = zext i8 %160 to i32
  %162 = mul nuw nsw i32 %161, %18
  %163 = load i8, i8* %49, align 1
  %164 = zext i8 %163 to i32
  %165 = mul nuw nsw i32 %164, %20
  %166 = load i8, i8* %112, align 1
  %167 = zext i8 %166 to i32
  %168 = mul nuw nsw i32 %167, %23
  %169 = load i8, i8* %142, align 1
  %170 = zext i8 %169 to i32
  %171 = mul nuw nsw i32 %170, %26
  %172 = getelementptr inbounds i8, i8* %33, i64 7
  %173 = load i8, i8* %172, align 1
  %174 = zext i8 %173 to i32
  %175 = mul nuw nsw i32 %174, %29
  %176 = add nuw nsw i32 %171, %162
  %177 = add nuw nsw i32 %159, 64
  %178 = add nuw nsw i32 %177, %165
  %179 = add nuw nsw i32 %178, %168
  %180 = add nuw nsw i32 %179, %175
  %181 = sub nsw i32 %180, %176
  %182 = ashr i32 %181, 7
  %183 = sext i32 %182 to i64
  %184 = getelementptr inbounds i8, i8* getelementptr inbounds ([2304 x i8], [2304 x i8]* @ff_crop_tab, i64 0, i64 1024), i64 %183
  %185 = load i8, i8* %184, align 1
  %186 = getelementptr inbounds i8, i8* %32, i64 4
  store i8 %185, i8* %186, align 1
  %187 = load i8, i8* %112, align 1
  %188 = zext i8 %187 to i32
  %189 = mul nuw nsw i32 %188, %15
  %190 = load i8, i8* %82, align 1
  %191 = zext i8 %190 to i32
  %192 = mul nuw nsw i32 %191, %18
  %193 = load i8, i8* %53, align 1
  %194 = zext i8 %193 to i32
  %195 = mul nuw nsw i32 %194, %20
  %196 = load i8, i8* %142, align 1
  %197 = zext i8 %196 to i32
  %198 = mul nuw nsw i32 %197, %23
  %199 = load i8, i8* %172, align 1
  %200 = zext i8 %199 to i32
  %201 = mul nuw nsw i32 %200, %26
  %202 = getelementptr inbounds i8, i8* %33, i64 8
  %203 = load i8, i8* %202, align 1
  %204 = zext i8 %203 to i32
  %205 = mul nuw nsw i32 %204, %29
  %206 = add nuw nsw i32 %201, %192
  %207 = add nuw nsw i32 %189, 64
  %208 = add nuw nsw i32 %207, %195
  %209 = add nuw nsw i32 %208, %198
  %210 = add nuw nsw i32 %209, %205
  %211 = sub nsw i32 %210, %206
  %212 = ashr i32 %211, 7
  %213 = sext i32 %212 to i64
  %214 = getelementptr inbounds i8, i8* getelementptr inbounds ([2304 x i8], [2304 x i8]* @ff_crop_tab, i64 0, i64 1024), i64 %213
  %215 = load i8, i8* %214, align 1
  %216 = getelementptr inbounds i8, i8* %32, i64 5
  store i8 %215, i8* %216, align 1
  %217 = load i8, i8* %142, align 1
  %218 = zext i8 %217 to i32
  %219 = mul nuw nsw i32 %218, %15
  %220 = load i8, i8* %112, align 1
  %221 = zext i8 %220 to i32
  %222 = mul nuw nsw i32 %221, %18
  %223 = load i8, i8* %82, align 1
  %224 = zext i8 %223 to i32
  %225 = mul nuw nsw i32 %224, %20
  %226 = load i8, i8* %172, align 1
  %227 = zext i8 %226 to i32
  %228 = mul nuw nsw i32 %227, %23
  %229 = load i8, i8* %202, align 1
  %230 = zext i8 %229 to i32
  %231 = mul nuw nsw i32 %230, %26
  %232 = getelementptr inbounds i8, i8* %33, i64 9
  %233 = load i8, i8* %232, align 1
  %234 = zext i8 %233 to i32
  %235 = mul nuw nsw i32 %234, %29
  %236 = add nuw nsw i32 %231, %222
  %237 = add nuw nsw i32 %219, 64
  %238 = add nuw nsw i32 %237, %225
  %239 = add nuw nsw i32 %238, %228
  %240 = add nuw nsw i32 %239, %235
  %241 = sub nsw i32 %240, %236
  %242 = ashr i32 %241, 7
  %243 = sext i32 %242 to i64
  %244 = getelementptr inbounds i8, i8* getelementptr inbounds ([2304 x i8], [2304 x i8]* @ff_crop_tab, i64 0, i64 1024), i64 %243
  %245 = load i8, i8* %244, align 1
  %246 = getelementptr inbounds i8, i8* %32, i64 6
  store i8 %245, i8* %246, align 1
  %247 = load i8, i8* %172, align 1
  %248 = zext i8 %247 to i32
  %249 = mul nuw nsw i32 %248, %15
  %250 = load i8, i8* %142, align 1
  %251 = zext i8 %250 to i32
  %252 = mul nuw nsw i32 %251, %18
  %253 = load i8, i8* %112, align 1
  %254 = zext i8 %253 to i32
  %255 = mul nuw nsw i32 %254, %20
  %256 = load i8, i8* %202, align 1
  %257 = zext i8 %256 to i32
  %258 = mul nuw nsw i32 %257, %23
  %259 = load i8, i8* %232, align 1
  %260 = zext i8 %259 to i32
  %261 = mul nuw nsw i32 %260, %26
  %262 = getelementptr inbounds i8, i8* %33, i64 10
  %263 = load i8, i8* %262, align 1
  %264 = zext i8 %263 to i32
  %265 = mul nuw nsw i32 %264, %29
  %266 = add nuw nsw i32 %261, %252
  %267 = add nuw nsw i32 %249, 64
  %268 = add nuw nsw i32 %267, %255
  %269 = add nuw nsw i32 %268, %258
  %270 = add nuw nsw i32 %269, %265
  %271 = sub nsw i32 %270, %266
  %272 = ashr i32 %271, 7
  %273 = sext i32 %272 to i64
  %274 = getelementptr inbounds i8, i8* getelementptr inbounds ([2304 x i8], [2304 x i8]* @ff_crop_tab, i64 0, i64 1024), i64 %273
  %275 = load i8, i8* %274, align 1
  %276 = getelementptr inbounds i8, i8* %32, i64 7
  store i8 %275, i8* %276, align 1
  %277 = getelementptr inbounds i8, i8* %32, i64 %1
  %278 = getelementptr inbounds i8, i8* %33, i64 %3
  %279 = add nuw nsw i32 %31, 1
  %280 = icmp eq i32 %279, %4
  br i1 %280, label %281, label %30

281:                                              ; preds = %30, %7
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define internal void @put_vp8_epel8_v4_c(i8* nocapture, i64, i8* nocapture readonly, i64, i32, i32, i32) #2 {
  %8 = add nsw i32 %6, -1
  %9 = sext i32 %8 to i64
  %10 = icmp sgt i32 %4, 0
  br i1 %10, label %11, label %252

11:                                               ; preds = %7
  %12 = getelementptr inbounds [7 x [6 x i8]], [7 x [6 x i8]]* @subpel_filters, i64 0, i64 %9, i64 2
  %13 = load i8, i8* %12, align 2
  %14 = zext i8 %13 to i32
  %15 = getelementptr inbounds [7 x [6 x i8]], [7 x [6 x i8]]* @subpel_filters, i64 0, i64 %9, i64 1
  %16 = load i8, i8* %15, align 1
  %17 = zext i8 %16 to i32
  %18 = getelementptr inbounds [7 x [6 x i8]], [7 x [6 x i8]]* @subpel_filters, i64 0, i64 %9, i64 3
  %19 = load i8, i8* %18, align 1
  %20 = zext i8 %19 to i32
  %21 = getelementptr inbounds [7 x [6 x i8]], [7 x [6 x i8]]* @subpel_filters, i64 0, i64 %9, i64 4
  %22 = load i8, i8* %21, align 2
  %23 = zext i8 %22 to i32
  %24 = shl i64 %3, 1
  %25 = sub nsw i64 0, %3
  %26 = sub nsw i64 1, %3
  %27 = add nsw i64 %3, 1
  %28 = or i64 %24, 1
  %29 = sub nsw i64 2, %3
  %30 = add nsw i64 %3, 2
  %31 = add nsw i64 %24, 2
  %32 = sub nsw i64 3, %3
  %33 = add nsw i64 %3, 3
  %34 = add nsw i64 %24, 3
  %35 = sub nsw i64 4, %3
  %36 = add nsw i64 %3, 4
  %37 = add nsw i64 %24, 4
  %38 = sub nsw i64 5, %3
  %39 = add nsw i64 %3, 5
  %40 = add nsw i64 %24, 5
  %41 = sub nsw i64 6, %3
  %42 = add nsw i64 %3, 6
  %43 = add nsw i64 %24, 6
  %44 = sub nsw i64 7, %3
  %45 = add nsw i64 %3, 7
  %46 = add nsw i64 %24, 7
  br label %47

47:                                               ; preds = %47, %11
  %48 = phi i32 [ 0, %11 ], [ %250, %47 ]
  %49 = phi i8* [ %0, %11 ], [ %249, %47 ]
  %50 = phi i8* [ %2, %11 ], [ %58, %47 ]
  %51 = load i8, i8* %50, align 1
  %52 = zext i8 %51 to i32
  %53 = mul nuw nsw i32 %52, %14
  %54 = getelementptr inbounds i8, i8* %50, i64 %25
  %55 = load i8, i8* %54, align 1
  %56 = zext i8 %55 to i32
  %57 = mul nuw nsw i32 %56, %17
  %58 = getelementptr inbounds i8, i8* %50, i64 %3
  %59 = load i8, i8* %58, align 1
  %60 = zext i8 %59 to i32
  %61 = mul nuw nsw i32 %60, %20
  %62 = getelementptr inbounds i8, i8* %50, i64 %24
  %63 = load i8, i8* %62, align 1
  %64 = zext i8 %63 to i32
  %65 = mul nuw nsw i32 %64, %23
  %66 = add nuw nsw i32 %65, %57
  %67 = add nuw nsw i32 %53, 64
  %68 = add nuw nsw i32 %67, %61
  %69 = sub nsw i32 %68, %66
  %70 = ashr i32 %69, 7
  %71 = sext i32 %70 to i64
  %72 = getelementptr inbounds i8, i8* getelementptr inbounds ([2304 x i8], [2304 x i8]* @ff_crop_tab, i64 0, i64 1024), i64 %71
  %73 = load i8, i8* %72, align 1
  store i8 %73, i8* %49, align 1
  %74 = getelementptr inbounds i8, i8* %50, i64 1
  %75 = load i8, i8* %74, align 1
  %76 = zext i8 %75 to i32
  %77 = mul nuw nsw i32 %76, %14
  %78 = getelementptr inbounds i8, i8* %50, i64 %26
  %79 = load i8, i8* %78, align 1
  %80 = zext i8 %79 to i32
  %81 = mul nuw nsw i32 %80, %17
  %82 = getelementptr inbounds i8, i8* %50, i64 %27
  %83 = load i8, i8* %82, align 1
  %84 = zext i8 %83 to i32
  %85 = mul nuw nsw i32 %84, %20
  %86 = getelementptr inbounds i8, i8* %50, i64 %28
  %87 = load i8, i8* %86, align 1
  %88 = zext i8 %87 to i32
  %89 = mul nuw nsw i32 %88, %23
  %90 = add nuw nsw i32 %89, %81
  %91 = add nuw nsw i32 %77, 64
  %92 = add nuw nsw i32 %91, %85
  %93 = sub nsw i32 %92, %90
  %94 = ashr i32 %93, 7
  %95 = sext i32 %94 to i64
  %96 = getelementptr inbounds i8, i8* getelementptr inbounds ([2304 x i8], [2304 x i8]* @ff_crop_tab, i64 0, i64 1024), i64 %95
  %97 = load i8, i8* %96, align 1
  %98 = getelementptr inbounds i8, i8* %49, i64 1
  store i8 %97, i8* %98, align 1
  %99 = getelementptr inbounds i8, i8* %50, i64 2
  %100 = load i8, i8* %99, align 1
  %101 = zext i8 %100 to i32
  %102 = mul nuw nsw i32 %101, %14
  %103 = getelementptr inbounds i8, i8* %50, i64 %29
  %104 = load i8, i8* %103, align 1
  %105 = zext i8 %104 to i32
  %106 = mul nuw nsw i32 %105, %17
  %107 = getelementptr inbounds i8, i8* %50, i64 %30
  %108 = load i8, i8* %107, align 1
  %109 = zext i8 %108 to i32
  %110 = mul nuw nsw i32 %109, %20
  %111 = getelementptr inbounds i8, i8* %50, i64 %31
  %112 = load i8, i8* %111, align 1
  %113 = zext i8 %112 to i32
  %114 = mul nuw nsw i32 %113, %23
  %115 = add nuw nsw i32 %114, %106
  %116 = add nuw nsw i32 %102, 64
  %117 = add nuw nsw i32 %116, %110
  %118 = sub nsw i32 %117, %115
  %119 = ashr i32 %118, 7
  %120 = sext i32 %119 to i64
  %121 = getelementptr inbounds i8, i8* getelementptr inbounds ([2304 x i8], [2304 x i8]* @ff_crop_tab, i64 0, i64 1024), i64 %120
  %122 = load i8, i8* %121, align 1
  %123 = getelementptr inbounds i8, i8* %49, i64 2
  store i8 %122, i8* %123, align 1
  %124 = getelementptr inbounds i8, i8* %50, i64 3
  %125 = load i8, i8* %124, align 1
  %126 = zext i8 %125 to i32
  %127 = mul nuw nsw i32 %126, %14
  %128 = getelementptr inbounds i8, i8* %50, i64 %32
  %129 = load i8, i8* %128, align 1
  %130 = zext i8 %129 to i32
  %131 = mul nuw nsw i32 %130, %17
  %132 = getelementptr inbounds i8, i8* %50, i64 %33
  %133 = load i8, i8* %132, align 1
  %134 = zext i8 %133 to i32
  %135 = mul nuw nsw i32 %134, %20
  %136 = getelementptr inbounds i8, i8* %50, i64 %34
  %137 = load i8, i8* %136, align 1
  %138 = zext i8 %137 to i32
  %139 = mul nuw nsw i32 %138, %23
  %140 = add nuw nsw i32 %139, %131
  %141 = add nuw nsw i32 %127, 64
  %142 = add nuw nsw i32 %141, %135
  %143 = sub nsw i32 %142, %140
  %144 = ashr i32 %143, 7
  %145 = sext i32 %144 to i64
  %146 = getelementptr inbounds i8, i8* getelementptr inbounds ([2304 x i8], [2304 x i8]* @ff_crop_tab, i64 0, i64 1024), i64 %145
  %147 = load i8, i8* %146, align 1
  %148 = getelementptr inbounds i8, i8* %49, i64 3
  store i8 %147, i8* %148, align 1
  %149 = getelementptr inbounds i8, i8* %50, i64 4
  %150 = load i8, i8* %149, align 1
  %151 = zext i8 %150 to i32
  %152 = mul nuw nsw i32 %151, %14
  %153 = getelementptr inbounds i8, i8* %50, i64 %35
  %154 = load i8, i8* %153, align 1
  %155 = zext i8 %154 to i32
  %156 = mul nuw nsw i32 %155, %17
  %157 = getelementptr inbounds i8, i8* %50, i64 %36
  %158 = load i8, i8* %157, align 1
  %159 = zext i8 %158 to i32
  %160 = mul nuw nsw i32 %159, %20
  %161 = getelementptr inbounds i8, i8* %50, i64 %37
  %162 = load i8, i8* %161, align 1
  %163 = zext i8 %162 to i32
  %164 = mul nuw nsw i32 %163, %23
  %165 = add nuw nsw i32 %164, %156
  %166 = add nuw nsw i32 %152, 64
  %167 = add nuw nsw i32 %166, %160
  %168 = sub nsw i32 %167, %165
  %169 = ashr i32 %168, 7
  %170 = sext i32 %169 to i64
  %171 = getelementptr inbounds i8, i8* getelementptr inbounds ([2304 x i8], [2304 x i8]* @ff_crop_tab, i64 0, i64 1024), i64 %170
  %172 = load i8, i8* %171, align 1
  %173 = getelementptr inbounds i8, i8* %49, i64 4
  store i8 %172, i8* %173, align 1
  %174 = getelementptr inbounds i8, i8* %50, i64 5
  %175 = load i8, i8* %174, align 1
  %176 = zext i8 %175 to i32
  %177 = mul nuw nsw i32 %176, %14
  %178 = getelementptr inbounds i8, i8* %50, i64 %38
  %179 = load i8, i8* %178, align 1
  %180 = zext i8 %179 to i32
  %181 = mul nuw nsw i32 %180, %17
  %182 = getelementptr inbounds i8, i8* %50, i64 %39
  %183 = load i8, i8* %182, align 1
  %184 = zext i8 %183 to i32
  %185 = mul nuw nsw i32 %184, %20
  %186 = getelementptr inbounds i8, i8* %50, i64 %40
  %187 = load i8, i8* %186, align 1
  %188 = zext i8 %187 to i32
  %189 = mul nuw nsw i32 %188, %23
  %190 = add nuw nsw i32 %189, %181
  %191 = add nuw nsw i32 %177, 64
  %192 = add nuw nsw i32 %191, %185
  %193 = sub nsw i32 %192, %190
  %194 = ashr i32 %193, 7
  %195 = sext i32 %194 to i64
  %196 = getelementptr inbounds i8, i8* getelementptr inbounds ([2304 x i8], [2304 x i8]* @ff_crop_tab, i64 0, i64 1024), i64 %195
  %197 = load i8, i8* %196, align 1
  %198 = getelementptr inbounds i8, i8* %49, i64 5
  store i8 %197, i8* %198, align 1
  %199 = getelementptr inbounds i8, i8* %50, i64 6
  %200 = load i8, i8* %199, align 1
  %201 = zext i8 %200 to i32
  %202 = mul nuw nsw i32 %201, %14
  %203 = getelementptr inbounds i8, i8* %50, i64 %41
  %204 = load i8, i8* %203, align 1
  %205 = zext i8 %204 to i32
  %206 = mul nuw nsw i32 %205, %17
  %207 = getelementptr inbounds i8, i8* %50, i64 %42
  %208 = load i8, i8* %207, align 1
  %209 = zext i8 %208 to i32
  %210 = mul nuw nsw i32 %209, %20
  %211 = getelementptr inbounds i8, i8* %50, i64 %43
  %212 = load i8, i8* %211, align 1
  %213 = zext i8 %212 to i32
  %214 = mul nuw nsw i32 %213, %23
  %215 = add nuw nsw i32 %214, %206
  %216 = add nuw nsw i32 %202, 64
  %217 = add nuw nsw i32 %216, %210
  %218 = sub nsw i32 %217, %215
  %219 = ashr i32 %218, 7
  %220 = sext i32 %219 to i64
  %221 = getelementptr inbounds i8, i8* getelementptr inbounds ([2304 x i8], [2304 x i8]* @ff_crop_tab, i64 0, i64 1024), i64 %220
  %222 = load i8, i8* %221, align 1
  %223 = getelementptr inbounds i8, i8* %49, i64 6
  store i8 %222, i8* %223, align 1
  %224 = getelementptr inbounds i8, i8* %50, i64 7
  %225 = load i8, i8* %224, align 1
  %226 = zext i8 %225 to i32
  %227 = mul nuw nsw i32 %226, %14
  %228 = getelementptr inbounds i8, i8* %50, i64 %44
  %229 = load i8, i8* %228, align 1
  %230 = zext i8 %229 to i32
  %231 = mul nuw nsw i32 %230, %17
  %232 = getelementptr inbounds i8, i8* %50, i64 %45
  %233 = load i8, i8* %232, align 1
  %234 = zext i8 %233 to i32
  %235 = mul nuw nsw i32 %234, %20
  %236 = getelementptr inbounds i8, i8* %50, i64 %46
  %237 = load i8, i8* %236, align 1
  %238 = zext i8 %237 to i32
  %239 = mul nuw nsw i32 %238, %23
  %240 = add nuw nsw i32 %239, %231
  %241 = add nuw nsw i32 %227, 64
  %242 = add nuw nsw i32 %241, %235
  %243 = sub nsw i32 %242, %240
  %244 = ashr i32 %243, 7
  %245 = sext i32 %244 to i64
  %246 = getelementptr inbounds i8, i8* getelementptr inbounds ([2304 x i8], [2304 x i8]* @ff_crop_tab, i64 0, i64 1024), i64 %245
  %247 = load i8, i8* %246, align 1
  %248 = getelementptr inbounds i8, i8* %49, i64 7
  store i8 %247, i8* %248, align 1
  %249 = getelementptr inbounds i8, i8* %49, i64 %1
  %250 = add nuw nsw i32 %48, 1
  %251 = icmp eq i32 %250, %4
  br i1 %251, label %252, label %47

252:                                              ; preds = %47, %7
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @put_vp8_epel8_h4v4_c(i8* nocapture, i64, i8* nocapture readonly, i64, i32, i32, i32) #1 {
  %8 = alloca [152 x i8], align 16
  %9 = add nsw i32 %5, -1
  %10 = sext i32 %9 to i64
  %11 = getelementptr inbounds [152 x i8], [152 x i8]* %8, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 152, i8* nonnull %11) #5
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %11, i8 -86, i64 152, i1 false)
  %12 = add i32 %4, 3
  %13 = icmp sgt i32 %12, 0
  br i1 %13, label %14, label %172

14:                                               ; preds = %7
  %15 = sub i64 0, %3
  %16 = getelementptr inbounds i8, i8* %2, i64 %15
  %17 = getelementptr inbounds [7 x [6 x i8]], [7 x [6 x i8]]* @subpel_filters, i64 0, i64 %10, i64 2
  %18 = load i8, i8* %17, align 2
  %19 = zext i8 %18 to i32
  %20 = getelementptr inbounds [7 x [6 x i8]], [7 x [6 x i8]]* @subpel_filters, i64 0, i64 %10, i64 1
  %21 = load i8, i8* %20, align 1
  %22 = zext i8 %21 to i32
  %23 = getelementptr inbounds [7 x [6 x i8]], [7 x [6 x i8]]* @subpel_filters, i64 0, i64 %10, i64 3
  %24 = load i8, i8* %23, align 1
  %25 = zext i8 %24 to i32
  %26 = getelementptr inbounds [7 x [6 x i8]], [7 x [6 x i8]]* @subpel_filters, i64 0, i64 %10, i64 4
  %27 = load i8, i8* %26, align 2
  %28 = zext i8 %27 to i32
  br label %29

29:                                               ; preds = %29, %14
  %30 = phi i8* [ %11, %14 ], [ %168, %29 ]
  %31 = phi i32 [ 0, %14 ], [ %170, %29 ]
  %32 = phi i8* [ %16, %14 ], [ %169, %29 ]
  %33 = load i8, i8* %32, align 1
  %34 = zext i8 %33 to i32
  %35 = mul nuw nsw i32 %34, %19
  %36 = getelementptr inbounds i8, i8* %32, i64 -1
  %37 = load i8, i8* %36, align 1
  %38 = zext i8 %37 to i32
  %39 = mul nuw nsw i32 %38, %22
  %40 = getelementptr inbounds i8, i8* %32, i64 1
  %41 = load i8, i8* %40, align 1
  %42 = zext i8 %41 to i32
  %43 = mul nuw nsw i32 %42, %25
  %44 = getelementptr inbounds i8, i8* %32, i64 2
  %45 = load i8, i8* %44, align 1
  %46 = zext i8 %45 to i32
  %47 = mul nuw nsw i32 %46, %28
  %48 = add nuw nsw i32 %47, %39
  %49 = add nuw nsw i32 %35, 64
  %50 = add nuw nsw i32 %49, %43
  %51 = sub nsw i32 %50, %48
  %52 = ashr i32 %51, 7
  %53 = sext i32 %52 to i64
  %54 = getelementptr inbounds i8, i8* getelementptr inbounds ([2304 x i8], [2304 x i8]* @ff_crop_tab, i64 0, i64 1024), i64 %53
  %55 = load i8, i8* %54, align 1
  store i8 %55, i8* %30, align 1
  %56 = mul nuw nsw i32 %42, %19
  %57 = mul nuw nsw i32 %34, %22
  %58 = mul nuw nsw i32 %46, %25
  %59 = getelementptr inbounds i8, i8* %32, i64 3
  %60 = load i8, i8* %59, align 1
  %61 = zext i8 %60 to i32
  %62 = mul nuw nsw i32 %61, %28
  %63 = add nuw nsw i32 %62, %57
  %64 = add nuw nsw i32 %56, 64
  %65 = add nuw nsw i32 %64, %58
  %66 = sub nsw i32 %65, %63
  %67 = ashr i32 %66, 7
  %68 = sext i32 %67 to i64
  %69 = getelementptr inbounds i8, i8* getelementptr inbounds ([2304 x i8], [2304 x i8]* @ff_crop_tab, i64 0, i64 1024), i64 %68
  %70 = load i8, i8* %69, align 1
  %71 = getelementptr inbounds i8, i8* %30, i64 1
  store i8 %70, i8* %71, align 1
  %72 = mul nuw nsw i32 %46, %19
  %73 = mul nuw nsw i32 %42, %22
  %74 = mul nuw nsw i32 %61, %25
  %75 = getelementptr inbounds i8, i8* %32, i64 4
  %76 = load i8, i8* %75, align 1
  %77 = zext i8 %76 to i32
  %78 = mul nuw nsw i32 %77, %28
  %79 = add nuw nsw i32 %78, %73
  %80 = add nuw nsw i32 %72, 64
  %81 = add nuw nsw i32 %80, %74
  %82 = sub nsw i32 %81, %79
  %83 = ashr i32 %82, 7
  %84 = sext i32 %83 to i64
  %85 = getelementptr inbounds i8, i8* getelementptr inbounds ([2304 x i8], [2304 x i8]* @ff_crop_tab, i64 0, i64 1024), i64 %84
  %86 = load i8, i8* %85, align 1
  %87 = getelementptr inbounds i8, i8* %30, i64 2
  store i8 %86, i8* %87, align 1
  %88 = mul nuw nsw i32 %61, %19
  %89 = mul nuw nsw i32 %46, %22
  %90 = mul nuw nsw i32 %77, %25
  %91 = getelementptr inbounds i8, i8* %32, i64 5
  %92 = load i8, i8* %91, align 1
  %93 = zext i8 %92 to i32
  %94 = mul nuw nsw i32 %93, %28
  %95 = add nuw nsw i32 %94, %89
  %96 = add nuw nsw i32 %88, 64
  %97 = add nuw nsw i32 %96, %90
  %98 = sub nsw i32 %97, %95
  %99 = ashr i32 %98, 7
  %100 = sext i32 %99 to i64
  %101 = getelementptr inbounds i8, i8* getelementptr inbounds ([2304 x i8], [2304 x i8]* @ff_crop_tab, i64 0, i64 1024), i64 %100
  %102 = load i8, i8* %101, align 1
  %103 = getelementptr inbounds i8, i8* %30, i64 3
  store i8 %102, i8* %103, align 1
  %104 = mul nuw nsw i32 %77, %19
  %105 = mul nuw nsw i32 %61, %22
  %106 = mul nuw nsw i32 %93, %25
  %107 = getelementptr inbounds i8, i8* %32, i64 6
  %108 = load i8, i8* %107, align 1
  %109 = zext i8 %108 to i32
  %110 = mul nuw nsw i32 %109, %28
  %111 = add nuw nsw i32 %110, %105
  %112 = add nuw nsw i32 %104, 64
  %113 = add nuw nsw i32 %112, %106
  %114 = sub nsw i32 %113, %111
  %115 = ashr i32 %114, 7
  %116 = sext i32 %115 to i64
  %117 = getelementptr inbounds i8, i8* getelementptr inbounds ([2304 x i8], [2304 x i8]* @ff_crop_tab, i64 0, i64 1024), i64 %116
  %118 = load i8, i8* %117, align 1
  %119 = getelementptr inbounds i8, i8* %30, i64 4
  store i8 %118, i8* %119, align 1
  %120 = mul nuw nsw i32 %93, %19
  %121 = mul nuw nsw i32 %77, %22
  %122 = mul nuw nsw i32 %109, %25
  %123 = getelementptr inbounds i8, i8* %32, i64 7
  %124 = load i8, i8* %123, align 1
  %125 = zext i8 %124 to i32
  %126 = mul nuw nsw i32 %125, %28
  %127 = add nuw nsw i32 %126, %121
  %128 = add nuw nsw i32 %120, 64
  %129 = add nuw nsw i32 %128, %122
  %130 = sub nsw i32 %129, %127
  %131 = ashr i32 %130, 7
  %132 = sext i32 %131 to i64
  %133 = getelementptr inbounds i8, i8* getelementptr inbounds ([2304 x i8], [2304 x i8]* @ff_crop_tab, i64 0, i64 1024), i64 %132
  %134 = load i8, i8* %133, align 1
  %135 = getelementptr inbounds i8, i8* %30, i64 5
  store i8 %134, i8* %135, align 1
  %136 = mul nuw nsw i32 %109, %19
  %137 = mul nuw nsw i32 %93, %22
  %138 = mul nuw nsw i32 %125, %25
  %139 = getelementptr inbounds i8, i8* %32, i64 8
  %140 = load i8, i8* %139, align 1
  %141 = zext i8 %140 to i32
  %142 = mul nuw nsw i32 %141, %28
  %143 = add nuw nsw i32 %142, %137
  %144 = add nuw nsw i32 %136, 64
  %145 = add nuw nsw i32 %144, %138
  %146 = sub nsw i32 %145, %143
  %147 = ashr i32 %146, 7
  %148 = sext i32 %147 to i64
  %149 = getelementptr inbounds i8, i8* getelementptr inbounds ([2304 x i8], [2304 x i8]* @ff_crop_tab, i64 0, i64 1024), i64 %148
  %150 = load i8, i8* %149, align 1
  %151 = getelementptr inbounds i8, i8* %30, i64 6
  store i8 %150, i8* %151, align 1
  %152 = mul nuw nsw i32 %125, %19
  %153 = mul nuw nsw i32 %109, %22
  %154 = mul nuw nsw i32 %141, %25
  %155 = getelementptr inbounds i8, i8* %32, i64 9
  %156 = load i8, i8* %155, align 1
  %157 = zext i8 %156 to i32
  %158 = mul nuw nsw i32 %157, %28
  %159 = add nuw nsw i32 %158, %153
  %160 = add nuw nsw i32 %152, 64
  %161 = add nuw nsw i32 %160, %154
  %162 = sub nsw i32 %161, %159
  %163 = ashr i32 %162, 7
  %164 = sext i32 %163 to i64
  %165 = getelementptr inbounds i8, i8* getelementptr inbounds ([2304 x i8], [2304 x i8]* @ff_crop_tab, i64 0, i64 1024), i64 %164
  %166 = load i8, i8* %165, align 1
  %167 = getelementptr inbounds i8, i8* %30, i64 7
  store i8 %166, i8* %167, align 1
  %168 = getelementptr inbounds i8, i8* %30, i64 8
  %169 = getelementptr inbounds i8, i8* %32, i64 %3
  %170 = add nuw nsw i32 %31, 1
  %171 = icmp eq i32 %170, %12
  br i1 %171, label %172, label %29

172:                                              ; preds = %29, %7
  %173 = add nsw i32 %6, -1
  %174 = sext i32 %173 to i64
  %175 = icmp sgt i32 %4, 0
  br i1 %175, label %176, label %268

176:                                              ; preds = %172
  %177 = getelementptr inbounds [152 x i8], [152 x i8]* %8, i64 0, i64 8
  %178 = getelementptr inbounds [7 x [6 x i8]], [7 x [6 x i8]]* @subpel_filters, i64 0, i64 %174, i64 2
  %179 = load i8, i8* %178, align 2
  %180 = zext i8 %179 to i32
  %181 = getelementptr inbounds [7 x [6 x i8]], [7 x [6 x i8]]* @subpel_filters, i64 0, i64 %174, i64 1
  %182 = load i8, i8* %181, align 1
  %183 = zext i8 %182 to i32
  %184 = getelementptr inbounds [7 x [6 x i8]], [7 x [6 x i8]]* @subpel_filters, i64 0, i64 %174, i64 3
  %185 = load i8, i8* %184, align 1
  %186 = zext i8 %185 to i32
  %187 = getelementptr inbounds [7 x [6 x i8]], [7 x [6 x i8]]* @subpel_filters, i64 0, i64 %174, i64 4
  %188 = load i8, i8* %187, align 2
  %189 = zext i8 %188 to i32
  %190 = insertelement <8 x i32> undef, i32 %180, i32 0
  %191 = shufflevector <8 x i32> %190, <8 x i32> undef, <8 x i32> zeroinitializer
  %192 = insertelement <8 x i32> undef, i32 %186, i32 0
  %193 = shufflevector <8 x i32> %192, <8 x i32> undef, <8 x i32> zeroinitializer
  %194 = insertelement <8 x i32> undef, i32 %189, i32 0
  %195 = shufflevector <8 x i32> %194, <8 x i32> undef, <8 x i32> zeroinitializer
  %196 = insertelement <8 x i32> undef, i32 %183, i32 0
  %197 = shufflevector <8 x i32> %196, <8 x i32> undef, <8 x i32> zeroinitializer
  br label %198

198:                                              ; preds = %198, %176
  %199 = phi i8* [ %177, %176 ], [ %203, %198 ]
  %200 = phi i32 [ 0, %176 ], [ %266, %198 ]
  %201 = phi i8* [ %0, %176 ], [ %265, %198 ]
  %202 = getelementptr inbounds i8, i8* %199, i64 -8
  %203 = getelementptr inbounds i8, i8* %199, i64 8
  %204 = getelementptr inbounds i8, i8* %199, i64 16
  %205 = bitcast i8* %199 to <8 x i8>*
  %206 = load <8 x i8>, <8 x i8>* %205, align 1
  %207 = zext <8 x i8> %206 to <8 x i32>
  %208 = mul nuw nsw <8 x i32> %191, %207
  %209 = bitcast i8* %202 to <8 x i8>*
  %210 = load <8 x i8>, <8 x i8>* %209, align 1
  %211 = zext <8 x i8> %210 to <8 x i32>
  %212 = mul nuw nsw <8 x i32> %197, %211
  %213 = bitcast i8* %203 to <8 x i8>*
  %214 = load <8 x i8>, <8 x i8>* %213, align 1
  %215 = zext <8 x i8> %214 to <8 x i32>
  %216 = mul nuw nsw <8 x i32> %193, %215
  %217 = bitcast i8* %204 to <8 x i8>*
  %218 = load <8 x i8>, <8 x i8>* %217, align 1
  %219 = zext <8 x i8> %218 to <8 x i32>
  %220 = mul nuw nsw <8 x i32> %195, %219
  %221 = add nuw nsw <8 x i32> %220, %212
  %222 = add nuw nsw <8 x i32> %208, <i32 64, i32 64, i32 64, i32 64, i32 64, i32 64, i32 64, i32 64>
  %223 = add nuw nsw <8 x i32> %222, %216
  %224 = sub nsw <8 x i32> %223, %221
  %225 = ashr <8 x i32> %224, <i32 7, i32 7, i32 7, i32 7, i32 7, i32 7, i32 7, i32 7>
  %226 = extractelement <8 x i32> %225, i32 0
  %227 = sext i32 %226 to i64
  %228 = getelementptr inbounds i8, i8* getelementptr inbounds ([2304 x i8], [2304 x i8]* @ff_crop_tab, i64 0, i64 1024), i64 %227
  %229 = load i8, i8* %228, align 1
  store i8 %229, i8* %201, align 1
  %230 = extractelement <8 x i32> %225, i32 1
  %231 = sext i32 %230 to i64
  %232 = getelementptr inbounds i8, i8* getelementptr inbounds ([2304 x i8], [2304 x i8]* @ff_crop_tab, i64 0, i64 1024), i64 %231
  %233 = load i8, i8* %232, align 1
  %234 = getelementptr inbounds i8, i8* %201, i64 1
  store i8 %233, i8* %234, align 1
  %235 = extractelement <8 x i32> %225, i32 2
  %236 = sext i32 %235 to i64
  %237 = getelementptr inbounds i8, i8* getelementptr inbounds ([2304 x i8], [2304 x i8]* @ff_crop_tab, i64 0, i64 1024), i64 %236
  %238 = load i8, i8* %237, align 1
  %239 = getelementptr inbounds i8, i8* %201, i64 2
  store i8 %238, i8* %239, align 1
  %240 = extractelement <8 x i32> %225, i32 3
  %241 = sext i32 %240 to i64
  %242 = getelementptr inbounds i8, i8* getelementptr inbounds ([2304 x i8], [2304 x i8]* @ff_crop_tab, i64 0, i64 1024), i64 %241
  %243 = load i8, i8* %242, align 1
  %244 = getelementptr inbounds i8, i8* %201, i64 3
  store i8 %243, i8* %244, align 1
  %245 = extractelement <8 x i32> %225, i32 4
  %246 = sext i32 %245 to i64
  %247 = getelementptr inbounds i8, i8* getelementptr inbounds ([2304 x i8], [2304 x i8]* @ff_crop_tab, i64 0, i64 1024), i64 %246
  %248 = load i8, i8* %247, align 1
  %249 = getelementptr inbounds i8, i8* %201, i64 4
  store i8 %248, i8* %249, align 1
  %250 = extractelement <8 x i32> %225, i32 5
  %251 = sext i32 %250 to i64
  %252 = getelementptr inbounds i8, i8* getelementptr inbounds ([2304 x i8], [2304 x i8]* @ff_crop_tab, i64 0, i64 1024), i64 %251
  %253 = load i8, i8* %252, align 1
  %254 = getelementptr inbounds i8, i8* %201, i64 5
  store i8 %253, i8* %254, align 1
  %255 = extractelement <8 x i32> %225, i32 6
  %256 = sext i32 %255 to i64
  %257 = getelementptr inbounds i8, i8* getelementptr inbounds ([2304 x i8], [2304 x i8]* @ff_crop_tab, i64 0, i64 1024), i64 %256
  %258 = load i8, i8* %257, align 1
  %259 = getelementptr inbounds i8, i8* %201, i64 6
  store i8 %258, i8* %259, align 1
  %260 = extractelement <8 x i32> %225, i32 7
  %261 = sext i32 %260 to i64
  %262 = getelementptr inbounds i8, i8* getelementptr inbounds ([2304 x i8], [2304 x i8]* @ff_crop_tab, i64 0, i64 1024), i64 %261
  %263 = load i8, i8* %262, align 1
  %264 = getelementptr inbounds i8, i8* %201, i64 7
  store i8 %263, i8* %264, align 1
  %265 = getelementptr inbounds i8, i8* %201, i64 %1
  %266 = add nuw nsw i32 %200, 1
  %267 = icmp eq i32 %266, %4
  br i1 %267, label %268, label %198

268:                                              ; preds = %198, %172
  call void @llvm.lifetime.end.p0i8(i64 152, i8* nonnull %11) #5
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @put_vp8_epel8_h6v4_c(i8* nocapture, i64, i8* nocapture readonly, i64, i32, i32, i32) #1 {
  %8 = alloca [152 x i8], align 16
  %9 = add nsw i32 %5, -1
  %10 = sext i32 %9 to i64
  %11 = getelementptr inbounds [152 x i8], [152 x i8]* %8, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 152, i8* nonnull %11) #5
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %11, i8 -86, i64 152, i1 false)
  %12 = add i32 %4, 3
  %13 = icmp sgt i32 %12, 0
  br i1 %13, label %14, label %222

14:                                               ; preds = %7
  %15 = sub i64 0, %3
  %16 = getelementptr inbounds i8, i8* %2, i64 %15
  %17 = getelementptr inbounds [7 x [6 x i8]], [7 x [6 x i8]]* @subpel_filters, i64 0, i64 %10, i64 0
  %18 = getelementptr inbounds [7 x [6 x i8]], [7 x [6 x i8]]* @subpel_filters, i64 0, i64 %10, i64 2
  %19 = load i8, i8* %18, align 2
  %20 = zext i8 %19 to i32
  %21 = getelementptr inbounds [7 x [6 x i8]], [7 x [6 x i8]]* @subpel_filters, i64 0, i64 %10, i64 1
  %22 = load i8, i8* %21, align 1
  %23 = zext i8 %22 to i32
  %24 = load i8, i8* %17, align 2
  %25 = zext i8 %24 to i32
  %26 = getelementptr inbounds [7 x [6 x i8]], [7 x [6 x i8]]* @subpel_filters, i64 0, i64 %10, i64 3
  %27 = load i8, i8* %26, align 1
  %28 = zext i8 %27 to i32
  %29 = getelementptr inbounds [7 x [6 x i8]], [7 x [6 x i8]]* @subpel_filters, i64 0, i64 %10, i64 4
  %30 = load i8, i8* %29, align 2
  %31 = zext i8 %30 to i32
  %32 = getelementptr inbounds [7 x [6 x i8]], [7 x [6 x i8]]* @subpel_filters, i64 0, i64 %10, i64 5
  %33 = load i8, i8* %32, align 1
  %34 = zext i8 %33 to i32
  br label %35

35:                                               ; preds = %35, %14
  %36 = phi i8* [ %11, %14 ], [ %218, %35 ]
  %37 = phi i32 [ 0, %14 ], [ %220, %35 ]
  %38 = phi i8* [ %16, %14 ], [ %219, %35 ]
  %39 = load i8, i8* %38, align 1
  %40 = zext i8 %39 to i32
  %41 = mul nuw nsw i32 %40, %20
  %42 = getelementptr inbounds i8, i8* %38, i64 -1
  %43 = load i8, i8* %42, align 1
  %44 = zext i8 %43 to i32
  %45 = mul nuw nsw i32 %44, %23
  %46 = getelementptr inbounds i8, i8* %38, i64 -2
  %47 = load i8, i8* %46, align 1
  %48 = zext i8 %47 to i32
  %49 = mul nuw nsw i32 %48, %25
  %50 = getelementptr inbounds i8, i8* %38, i64 1
  %51 = load i8, i8* %50, align 1
  %52 = zext i8 %51 to i32
  %53 = mul nuw nsw i32 %52, %28
  %54 = getelementptr inbounds i8, i8* %38, i64 2
  %55 = load i8, i8* %54, align 1
  %56 = zext i8 %55 to i32
  %57 = mul nuw nsw i32 %56, %31
  %58 = getelementptr inbounds i8, i8* %38, i64 3
  %59 = load i8, i8* %58, align 1
  %60 = zext i8 %59 to i32
  %61 = mul nuw nsw i32 %60, %34
  %62 = add nuw nsw i32 %57, %45
  %63 = add nuw nsw i32 %41, 64
  %64 = add nuw nsw i32 %63, %49
  %65 = add nuw nsw i32 %64, %53
  %66 = add nuw nsw i32 %65, %61
  %67 = sub nsw i32 %66, %62
  %68 = ashr i32 %67, 7
  %69 = sext i32 %68 to i64
  %70 = getelementptr inbounds i8, i8* getelementptr inbounds ([2304 x i8], [2304 x i8]* @ff_crop_tab, i64 0, i64 1024), i64 %69
  %71 = load i8, i8* %70, align 1
  store i8 %71, i8* %36, align 1
  %72 = mul nuw nsw i32 %52, %20
  %73 = mul nuw nsw i32 %40, %23
  %74 = mul nuw nsw i32 %44, %25
  %75 = mul nuw nsw i32 %56, %28
  %76 = mul nuw nsw i32 %60, %31
  %77 = getelementptr inbounds i8, i8* %38, i64 4
  %78 = load i8, i8* %77, align 1
  %79 = zext i8 %78 to i32
  %80 = mul nuw nsw i32 %79, %34
  %81 = add nuw nsw i32 %76, %73
  %82 = add nuw nsw i32 %72, 64
  %83 = add nuw nsw i32 %82, %74
  %84 = add nuw nsw i32 %83, %75
  %85 = add nuw nsw i32 %84, %80
  %86 = sub nsw i32 %85, %81
  %87 = ashr i32 %86, 7
  %88 = sext i32 %87 to i64
  %89 = getelementptr inbounds i8, i8* getelementptr inbounds ([2304 x i8], [2304 x i8]* @ff_crop_tab, i64 0, i64 1024), i64 %88
  %90 = load i8, i8* %89, align 1
  %91 = getelementptr inbounds i8, i8* %36, i64 1
  store i8 %90, i8* %91, align 1
  %92 = mul nuw nsw i32 %56, %20
  %93 = mul nuw nsw i32 %52, %23
  %94 = mul nuw nsw i32 %40, %25
  %95 = mul nuw nsw i32 %60, %28
  %96 = mul nuw nsw i32 %79, %31
  %97 = getelementptr inbounds i8, i8* %38, i64 5
  %98 = load i8, i8* %97, align 1
  %99 = zext i8 %98 to i32
  %100 = mul nuw nsw i32 %99, %34
  %101 = add nuw nsw i32 %96, %93
  %102 = add nuw nsw i32 %92, 64
  %103 = add nuw nsw i32 %102, %94
  %104 = add nuw nsw i32 %103, %95
  %105 = add nuw nsw i32 %104, %100
  %106 = sub nsw i32 %105, %101
  %107 = ashr i32 %106, 7
  %108 = sext i32 %107 to i64
  %109 = getelementptr inbounds i8, i8* getelementptr inbounds ([2304 x i8], [2304 x i8]* @ff_crop_tab, i64 0, i64 1024), i64 %108
  %110 = load i8, i8* %109, align 1
  %111 = getelementptr inbounds i8, i8* %36, i64 2
  store i8 %110, i8* %111, align 1
  %112 = mul nuw nsw i32 %60, %20
  %113 = mul nuw nsw i32 %56, %23
  %114 = mul nuw nsw i32 %52, %25
  %115 = mul nuw nsw i32 %79, %28
  %116 = mul nuw nsw i32 %99, %31
  %117 = getelementptr inbounds i8, i8* %38, i64 6
  %118 = load i8, i8* %117, align 1
  %119 = zext i8 %118 to i32
  %120 = mul nuw nsw i32 %119, %34
  %121 = add nuw nsw i32 %116, %113
  %122 = add nuw nsw i32 %112, 64
  %123 = add nuw nsw i32 %122, %114
  %124 = add nuw nsw i32 %123, %115
  %125 = add nuw nsw i32 %124, %120
  %126 = sub nsw i32 %125, %121
  %127 = ashr i32 %126, 7
  %128 = sext i32 %127 to i64
  %129 = getelementptr inbounds i8, i8* getelementptr inbounds ([2304 x i8], [2304 x i8]* @ff_crop_tab, i64 0, i64 1024), i64 %128
  %130 = load i8, i8* %129, align 1
  %131 = getelementptr inbounds i8, i8* %36, i64 3
  store i8 %130, i8* %131, align 1
  %132 = mul nuw nsw i32 %79, %20
  %133 = mul nuw nsw i32 %60, %23
  %134 = mul nuw nsw i32 %56, %25
  %135 = mul nuw nsw i32 %99, %28
  %136 = mul nuw nsw i32 %119, %31
  %137 = getelementptr inbounds i8, i8* %38, i64 7
  %138 = load i8, i8* %137, align 1
  %139 = zext i8 %138 to i32
  %140 = mul nuw nsw i32 %139, %34
  %141 = add nuw nsw i32 %136, %133
  %142 = add nuw nsw i32 %132, 64
  %143 = add nuw nsw i32 %142, %134
  %144 = add nuw nsw i32 %143, %135
  %145 = add nuw nsw i32 %144, %140
  %146 = sub nsw i32 %145, %141
  %147 = ashr i32 %146, 7
  %148 = sext i32 %147 to i64
  %149 = getelementptr inbounds i8, i8* getelementptr inbounds ([2304 x i8], [2304 x i8]* @ff_crop_tab, i64 0, i64 1024), i64 %148
  %150 = load i8, i8* %149, align 1
  %151 = getelementptr inbounds i8, i8* %36, i64 4
  store i8 %150, i8* %151, align 1
  %152 = mul nuw nsw i32 %99, %20
  %153 = mul nuw nsw i32 %79, %23
  %154 = load i8, i8* %58, align 1
  %155 = zext i8 %154 to i32
  %156 = mul nuw nsw i32 %155, %25
  %157 = mul nuw nsw i32 %119, %28
  %158 = mul nuw nsw i32 %139, %31
  %159 = getelementptr inbounds i8, i8* %38, i64 8
  %160 = load i8, i8* %159, align 1
  %161 = zext i8 %160 to i32
  %162 = mul nuw nsw i32 %161, %34
  %163 = add nuw nsw i32 %158, %153
  %164 = add nuw nsw i32 %152, 64
  %165 = add nuw nsw i32 %164, %156
  %166 = add nuw nsw i32 %165, %157
  %167 = add nuw nsw i32 %166, %162
  %168 = sub nsw i32 %167, %163
  %169 = ashr i32 %168, 7
  %170 = sext i32 %169 to i64
  %171 = getelementptr inbounds i8, i8* getelementptr inbounds ([2304 x i8], [2304 x i8]* @ff_crop_tab, i64 0, i64 1024), i64 %170
  %172 = load i8, i8* %171, align 1
  %173 = getelementptr inbounds i8, i8* %36, i64 5
  store i8 %172, i8* %173, align 1
  %174 = mul nuw nsw i32 %119, %20
  %175 = mul nuw nsw i32 %99, %23
  %176 = load i8, i8* %77, align 1
  %177 = zext i8 %176 to i32
  %178 = mul nuw nsw i32 %177, %25
  %179 = mul nuw nsw i32 %139, %28
  %180 = mul nuw nsw i32 %161, %31
  %181 = getelementptr inbounds i8, i8* %38, i64 9
  %182 = load i8, i8* %181, align 1
  %183 = zext i8 %182 to i32
  %184 = mul nuw nsw i32 %183, %34
  %185 = add nuw nsw i32 %180, %175
  %186 = add nuw nsw i32 %174, 64
  %187 = add nuw nsw i32 %186, %178
  %188 = add nuw nsw i32 %187, %179
  %189 = add nuw nsw i32 %188, %184
  %190 = sub nsw i32 %189, %185
  %191 = ashr i32 %190, 7
  %192 = sext i32 %191 to i64
  %193 = getelementptr inbounds i8, i8* getelementptr inbounds ([2304 x i8], [2304 x i8]* @ff_crop_tab, i64 0, i64 1024), i64 %192
  %194 = load i8, i8* %193, align 1
  %195 = getelementptr inbounds i8, i8* %36, i64 6
  store i8 %194, i8* %195, align 1
  %196 = mul nuw nsw i32 %139, %20
  %197 = mul nuw nsw i32 %119, %23
  %198 = load i8, i8* %97, align 1
  %199 = zext i8 %198 to i32
  %200 = mul nuw nsw i32 %199, %25
  %201 = mul nuw nsw i32 %161, %28
  %202 = mul nuw nsw i32 %183, %31
  %203 = getelementptr inbounds i8, i8* %38, i64 10
  %204 = load i8, i8* %203, align 1
  %205 = zext i8 %204 to i32
  %206 = mul nuw nsw i32 %205, %34
  %207 = add nuw nsw i32 %202, %197
  %208 = add nuw nsw i32 %196, 64
  %209 = add nuw nsw i32 %208, %200
  %210 = add nuw nsw i32 %209, %201
  %211 = add nuw nsw i32 %210, %206
  %212 = sub nsw i32 %211, %207
  %213 = ashr i32 %212, 7
  %214 = sext i32 %213 to i64
  %215 = getelementptr inbounds i8, i8* getelementptr inbounds ([2304 x i8], [2304 x i8]* @ff_crop_tab, i64 0, i64 1024), i64 %214
  %216 = load i8, i8* %215, align 1
  %217 = getelementptr inbounds i8, i8* %36, i64 7
  store i8 %216, i8* %217, align 1
  %218 = getelementptr inbounds i8, i8* %36, i64 8
  %219 = getelementptr inbounds i8, i8* %38, i64 %3
  %220 = add nuw nsw i32 %37, 1
  %221 = icmp eq i32 %220, %12
  br i1 %221, label %222, label %35

222:                                              ; preds = %35, %7
  %223 = add nsw i32 %6, -1
  %224 = sext i32 %223 to i64
  %225 = icmp sgt i32 %4, 0
  br i1 %225, label %226, label %318

226:                                              ; preds = %222
  %227 = getelementptr inbounds [152 x i8], [152 x i8]* %8, i64 0, i64 8
  %228 = getelementptr inbounds [7 x [6 x i8]], [7 x [6 x i8]]* @subpel_filters, i64 0, i64 %224, i64 2
  %229 = load i8, i8* %228, align 2
  %230 = zext i8 %229 to i32
  %231 = getelementptr inbounds [7 x [6 x i8]], [7 x [6 x i8]]* @subpel_filters, i64 0, i64 %224, i64 1
  %232 = load i8, i8* %231, align 1
  %233 = zext i8 %232 to i32
  %234 = getelementptr inbounds [7 x [6 x i8]], [7 x [6 x i8]]* @subpel_filters, i64 0, i64 %224, i64 3
  %235 = load i8, i8* %234, align 1
  %236 = zext i8 %235 to i32
  %237 = getelementptr inbounds [7 x [6 x i8]], [7 x [6 x i8]]* @subpel_filters, i64 0, i64 %224, i64 4
  %238 = load i8, i8* %237, align 2
  %239 = zext i8 %238 to i32
  %240 = insertelement <8 x i32> undef, i32 %230, i32 0
  %241 = shufflevector <8 x i32> %240, <8 x i32> undef, <8 x i32> zeroinitializer
  %242 = insertelement <8 x i32> undef, i32 %236, i32 0
  %243 = shufflevector <8 x i32> %242, <8 x i32> undef, <8 x i32> zeroinitializer
  %244 = insertelement <8 x i32> undef, i32 %239, i32 0
  %245 = shufflevector <8 x i32> %244, <8 x i32> undef, <8 x i32> zeroinitializer
  %246 = insertelement <8 x i32> undef, i32 %233, i32 0
  %247 = shufflevector <8 x i32> %246, <8 x i32> undef, <8 x i32> zeroinitializer
  br label %248

248:                                              ; preds = %248, %226
  %249 = phi i8* [ %227, %226 ], [ %253, %248 ]
  %250 = phi i32 [ 0, %226 ], [ %316, %248 ]
  %251 = phi i8* [ %0, %226 ], [ %315, %248 ]
  %252 = getelementptr inbounds i8, i8* %249, i64 -8
  %253 = getelementptr inbounds i8, i8* %249, i64 8
  %254 = getelementptr inbounds i8, i8* %249, i64 16
  %255 = bitcast i8* %249 to <8 x i8>*
  %256 = load <8 x i8>, <8 x i8>* %255, align 1
  %257 = zext <8 x i8> %256 to <8 x i32>
  %258 = mul nuw nsw <8 x i32> %241, %257
  %259 = bitcast i8* %252 to <8 x i8>*
  %260 = load <8 x i8>, <8 x i8>* %259, align 1
  %261 = zext <8 x i8> %260 to <8 x i32>
  %262 = mul nuw nsw <8 x i32> %247, %261
  %263 = bitcast i8* %253 to <8 x i8>*
  %264 = load <8 x i8>, <8 x i8>* %263, align 1
  %265 = zext <8 x i8> %264 to <8 x i32>
  %266 = mul nuw nsw <8 x i32> %243, %265
  %267 = bitcast i8* %254 to <8 x i8>*
  %268 = load <8 x i8>, <8 x i8>* %267, align 1
  %269 = zext <8 x i8> %268 to <8 x i32>
  %270 = mul nuw nsw <8 x i32> %245, %269
  %271 = add nuw nsw <8 x i32> %270, %262
  %272 = add nuw nsw <8 x i32> %258, <i32 64, i32 64, i32 64, i32 64, i32 64, i32 64, i32 64, i32 64>
  %273 = add nuw nsw <8 x i32> %272, %266
  %274 = sub nsw <8 x i32> %273, %271
  %275 = ashr <8 x i32> %274, <i32 7, i32 7, i32 7, i32 7, i32 7, i32 7, i32 7, i32 7>
  %276 = extractelement <8 x i32> %275, i32 0
  %277 = sext i32 %276 to i64
  %278 = getelementptr inbounds i8, i8* getelementptr inbounds ([2304 x i8], [2304 x i8]* @ff_crop_tab, i64 0, i64 1024), i64 %277
  %279 = load i8, i8* %278, align 1
  store i8 %279, i8* %251, align 1
  %280 = extractelement <8 x i32> %275, i32 1
  %281 = sext i32 %280 to i64
  %282 = getelementptr inbounds i8, i8* getelementptr inbounds ([2304 x i8], [2304 x i8]* @ff_crop_tab, i64 0, i64 1024), i64 %281
  %283 = load i8, i8* %282, align 1
  %284 = getelementptr inbounds i8, i8* %251, i64 1
  store i8 %283, i8* %284, align 1
  %285 = extractelement <8 x i32> %275, i32 2
  %286 = sext i32 %285 to i64
  %287 = getelementptr inbounds i8, i8* getelementptr inbounds ([2304 x i8], [2304 x i8]* @ff_crop_tab, i64 0, i64 1024), i64 %286
  %288 = load i8, i8* %287, align 1
  %289 = getelementptr inbounds i8, i8* %251, i64 2
  store i8 %288, i8* %289, align 1
  %290 = extractelement <8 x i32> %275, i32 3
  %291 = sext i32 %290 to i64
  %292 = getelementptr inbounds i8, i8* getelementptr inbounds ([2304 x i8], [2304 x i8]* @ff_crop_tab, i64 0, i64 1024), i64 %291
  %293 = load i8, i8* %292, align 1
  %294 = getelementptr inbounds i8, i8* %251, i64 3
  store i8 %293, i8* %294, align 1
  %295 = extractelement <8 x i32> %275, i32 4
  %296 = sext i32 %295 to i64
  %297 = getelementptr inbounds i8, i8* getelementptr inbounds ([2304 x i8], [2304 x i8]* @ff_crop_tab, i64 0, i64 1024), i64 %296
  %298 = load i8, i8* %297, align 1
  %299 = getelementptr inbounds i8, i8* %251, i64 4
  store i8 %298, i8* %299, align 1
  %300 = extractelement <8 x i32> %275, i32 5
  %301 = sext i32 %300 to i64
  %302 = getelementptr inbounds i8, i8* getelementptr inbounds ([2304 x i8], [2304 x i8]* @ff_crop_tab, i64 0, i64 1024), i64 %301
  %303 = load i8, i8* %302, align 1
  %304 = getelementptr inbounds i8, i8* %251, i64 5
  store i8 %303, i8* %304, align 1
  %305 = extractelement <8 x i32> %275, i32 6
  %306 = sext i32 %305 to i64
  %307 = getelementptr inbounds i8, i8* getelementptr inbounds ([2304 x i8], [2304 x i8]* @ff_crop_tab, i64 0, i64 1024), i64 %306
  %308 = load i8, i8* %307, align 1
  %309 = getelementptr inbounds i8, i8* %251, i64 6
  store i8 %308, i8* %309, align 1
  %310 = extractelement <8 x i32> %275, i32 7
  %311 = sext i32 %310 to i64
  %312 = getelementptr inbounds i8, i8* getelementptr inbounds ([2304 x i8], [2304 x i8]* @ff_crop_tab, i64 0, i64 1024), i64 %311
  %313 = load i8, i8* %312, align 1
  %314 = getelementptr inbounds i8, i8* %251, i64 7
  store i8 %313, i8* %314, align 1
  %315 = getelementptr inbounds i8, i8* %251, i64 %1
  %316 = add nuw nsw i32 %250, 1
  %317 = icmp eq i32 %316, %4
  br i1 %317, label %318, label %248

318:                                              ; preds = %248, %222
  call void @llvm.lifetime.end.p0i8(i64 152, i8* nonnull %11) #5
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define internal void @put_vp8_epel8_v6_c(i8* nocapture, i64, i8* nocapture readonly, i64, i32, i32, i32) #2 {
  %8 = add nsw i32 %6, -1
  %9 = sext i32 %8 to i64
  %10 = icmp sgt i32 %4, 0
  br i1 %10, label %11, label %85

11:                                               ; preds = %7
  %12 = getelementptr inbounds [7 x [6 x i8]], [7 x [6 x i8]]* @subpel_filters, i64 0, i64 %9, i64 0
  %13 = getelementptr inbounds [7 x [6 x i8]], [7 x [6 x i8]]* @subpel_filters, i64 0, i64 %9, i64 2
  %14 = load i8, i8* %13, align 2
  %15 = zext i8 %14 to i32
  %16 = getelementptr inbounds [7 x [6 x i8]], [7 x [6 x i8]]* @subpel_filters, i64 0, i64 %9, i64 1
  %17 = load i8, i8* %16, align 1
  %18 = zext i8 %17 to i32
  %19 = load i8, i8* %12, align 2
  %20 = zext i8 %19 to i32
  %21 = shl nsw i64 %3, 1
  %22 = getelementptr inbounds [7 x [6 x i8]], [7 x [6 x i8]]* @subpel_filters, i64 0, i64 %9, i64 3
  %23 = load i8, i8* %22, align 1
  %24 = zext i8 %23 to i32
  %25 = getelementptr inbounds [7 x [6 x i8]], [7 x [6 x i8]]* @subpel_filters, i64 0, i64 %9, i64 4
  %26 = load i8, i8* %25, align 2
  %27 = zext i8 %26 to i32
  %28 = getelementptr inbounds [7 x [6 x i8]], [7 x [6 x i8]]* @subpel_filters, i64 0, i64 %9, i64 5
  %29 = load i8, i8* %28, align 1
  %30 = zext i8 %29 to i32
  %31 = mul nsw i64 %3, 3
  br label %32

32:                                               ; preds = %80, %11
  %33 = phi i32 [ 0, %11 ], [ %83, %80 ]
  %34 = phi i8* [ %0, %11 ], [ %81, %80 ]
  %35 = phi i8* [ %2, %11 ], [ %82, %80 ]
  br label %36

36:                                               ; preds = %36, %32
  %37 = phi i64 [ 0, %32 ], [ %78, %36 ]
  %38 = getelementptr inbounds i8, i8* %35, i64 %37
  %39 = load i8, i8* %38, align 1
  %40 = zext i8 %39 to i32
  %41 = mul nuw nsw i32 %40, %15
  %42 = sub nsw i64 %37, %3
  %43 = getelementptr inbounds i8, i8* %35, i64 %42
  %44 = load i8, i8* %43, align 1
  %45 = zext i8 %44 to i32
  %46 = mul nuw nsw i32 %45, %18
  %47 = sub nsw i64 %37, %21
  %48 = getelementptr inbounds i8, i8* %35, i64 %47
  %49 = load i8, i8* %48, align 1
  %50 = zext i8 %49 to i32
  %51 = mul nuw nsw i32 %50, %20
  %52 = add nsw i64 %37, %3
  %53 = getelementptr inbounds i8, i8* %35, i64 %52
  %54 = load i8, i8* %53, align 1
  %55 = zext i8 %54 to i32
  %56 = mul nuw nsw i32 %55, %24
  %57 = add nsw i64 %21, %37
  %58 = getelementptr inbounds i8, i8* %35, i64 %57
  %59 = load i8, i8* %58, align 1
  %60 = zext i8 %59 to i32
  %61 = mul nuw nsw i32 %60, %27
  %62 = add nsw i64 %31, %37
  %63 = getelementptr inbounds i8, i8* %35, i64 %62
  %64 = load i8, i8* %63, align 1
  %65 = zext i8 %64 to i32
  %66 = mul nuw nsw i32 %65, %30
  %67 = add nuw nsw i32 %61, %46
  %68 = add nuw nsw i32 %41, 64
  %69 = add nuw nsw i32 %68, %51
  %70 = add nuw nsw i32 %69, %56
  %71 = add nuw nsw i32 %70, %66
  %72 = sub nsw i32 %71, %67
  %73 = ashr i32 %72, 7
  %74 = sext i32 %73 to i64
  %75 = getelementptr inbounds i8, i8* getelementptr inbounds ([2304 x i8], [2304 x i8]* @ff_crop_tab, i64 0, i64 1024), i64 %74
  %76 = load i8, i8* %75, align 1
  %77 = getelementptr inbounds i8, i8* %34, i64 %37
  store i8 %76, i8* %77, align 1
  %78 = add nuw nsw i64 %37, 1
  %79 = icmp eq i64 %78, 8
  br i1 %79, label %80, label %36

80:                                               ; preds = %36
  %81 = getelementptr inbounds i8, i8* %34, i64 %1
  %82 = getelementptr inbounds i8, i8* %35, i64 %3
  %83 = add nuw nsw i32 %33, 1
  %84 = icmp eq i32 %83, %4
  br i1 %84, label %85, label %32

85:                                               ; preds = %80, %7
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @put_vp8_epel8_h4v6_c(i8* nocapture, i64, i8* nocapture readonly, i64, i32, i32, i32) #1 {
  %8 = alloca [168 x i8], align 16
  %9 = add nsw i32 %5, -1
  %10 = sext i32 %9 to i64
  %11 = getelementptr inbounds [168 x i8], [168 x i8]* %8, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 168, i8* nonnull %11) #5
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %11, i8 -86, i64 168, i1 false)
  %12 = add i32 %4, 5
  %13 = icmp sgt i32 %12, 0
  br i1 %13, label %14, label %173

14:                                               ; preds = %7
  %15 = shl nsw i64 %3, 1
  %16 = sub i64 0, %15
  %17 = getelementptr inbounds i8, i8* %2, i64 %16
  %18 = getelementptr inbounds [7 x [6 x i8]], [7 x [6 x i8]]* @subpel_filters, i64 0, i64 %10, i64 2
  %19 = load i8, i8* %18, align 2
  %20 = zext i8 %19 to i32
  %21 = getelementptr inbounds [7 x [6 x i8]], [7 x [6 x i8]]* @subpel_filters, i64 0, i64 %10, i64 1
  %22 = load i8, i8* %21, align 1
  %23 = zext i8 %22 to i32
  %24 = getelementptr inbounds [7 x [6 x i8]], [7 x [6 x i8]]* @subpel_filters, i64 0, i64 %10, i64 3
  %25 = load i8, i8* %24, align 1
  %26 = zext i8 %25 to i32
  %27 = getelementptr inbounds [7 x [6 x i8]], [7 x [6 x i8]]* @subpel_filters, i64 0, i64 %10, i64 4
  %28 = load i8, i8* %27, align 2
  %29 = zext i8 %28 to i32
  br label %30

30:                                               ; preds = %30, %14
  %31 = phi i8* [ %11, %14 ], [ %169, %30 ]
  %32 = phi i32 [ 0, %14 ], [ %171, %30 ]
  %33 = phi i8* [ %17, %14 ], [ %170, %30 ]
  %34 = load i8, i8* %33, align 1
  %35 = zext i8 %34 to i32
  %36 = mul nuw nsw i32 %35, %20
  %37 = getelementptr inbounds i8, i8* %33, i64 -1
  %38 = load i8, i8* %37, align 1
  %39 = zext i8 %38 to i32
  %40 = mul nuw nsw i32 %39, %23
  %41 = getelementptr inbounds i8, i8* %33, i64 1
  %42 = load i8, i8* %41, align 1
  %43 = zext i8 %42 to i32
  %44 = mul nuw nsw i32 %43, %26
  %45 = getelementptr inbounds i8, i8* %33, i64 2
  %46 = load i8, i8* %45, align 1
  %47 = zext i8 %46 to i32
  %48 = mul nuw nsw i32 %47, %29
  %49 = add nuw nsw i32 %48, %40
  %50 = add nuw nsw i32 %36, 64
  %51 = add nuw nsw i32 %50, %44
  %52 = sub nsw i32 %51, %49
  %53 = ashr i32 %52, 7
  %54 = sext i32 %53 to i64
  %55 = getelementptr inbounds i8, i8* getelementptr inbounds ([2304 x i8], [2304 x i8]* @ff_crop_tab, i64 0, i64 1024), i64 %54
  %56 = load i8, i8* %55, align 1
  store i8 %56, i8* %31, align 1
  %57 = mul nuw nsw i32 %43, %20
  %58 = mul nuw nsw i32 %35, %23
  %59 = mul nuw nsw i32 %47, %26
  %60 = getelementptr inbounds i8, i8* %33, i64 3
  %61 = load i8, i8* %60, align 1
  %62 = zext i8 %61 to i32
  %63 = mul nuw nsw i32 %62, %29
  %64 = add nuw nsw i32 %63, %58
  %65 = add nuw nsw i32 %57, 64
  %66 = add nuw nsw i32 %65, %59
  %67 = sub nsw i32 %66, %64
  %68 = ashr i32 %67, 7
  %69 = sext i32 %68 to i64
  %70 = getelementptr inbounds i8, i8* getelementptr inbounds ([2304 x i8], [2304 x i8]* @ff_crop_tab, i64 0, i64 1024), i64 %69
  %71 = load i8, i8* %70, align 1
  %72 = getelementptr inbounds i8, i8* %31, i64 1
  store i8 %71, i8* %72, align 1
  %73 = mul nuw nsw i32 %47, %20
  %74 = mul nuw nsw i32 %43, %23
  %75 = mul nuw nsw i32 %62, %26
  %76 = getelementptr inbounds i8, i8* %33, i64 4
  %77 = load i8, i8* %76, align 1
  %78 = zext i8 %77 to i32
  %79 = mul nuw nsw i32 %78, %29
  %80 = add nuw nsw i32 %79, %74
  %81 = add nuw nsw i32 %73, 64
  %82 = add nuw nsw i32 %81, %75
  %83 = sub nsw i32 %82, %80
  %84 = ashr i32 %83, 7
  %85 = sext i32 %84 to i64
  %86 = getelementptr inbounds i8, i8* getelementptr inbounds ([2304 x i8], [2304 x i8]* @ff_crop_tab, i64 0, i64 1024), i64 %85
  %87 = load i8, i8* %86, align 1
  %88 = getelementptr inbounds i8, i8* %31, i64 2
  store i8 %87, i8* %88, align 1
  %89 = mul nuw nsw i32 %62, %20
  %90 = mul nuw nsw i32 %47, %23
  %91 = mul nuw nsw i32 %78, %26
  %92 = getelementptr inbounds i8, i8* %33, i64 5
  %93 = load i8, i8* %92, align 1
  %94 = zext i8 %93 to i32
  %95 = mul nuw nsw i32 %94, %29
  %96 = add nuw nsw i32 %95, %90
  %97 = add nuw nsw i32 %89, 64
  %98 = add nuw nsw i32 %97, %91
  %99 = sub nsw i32 %98, %96
  %100 = ashr i32 %99, 7
  %101 = sext i32 %100 to i64
  %102 = getelementptr inbounds i8, i8* getelementptr inbounds ([2304 x i8], [2304 x i8]* @ff_crop_tab, i64 0, i64 1024), i64 %101
  %103 = load i8, i8* %102, align 1
  %104 = getelementptr inbounds i8, i8* %31, i64 3
  store i8 %103, i8* %104, align 1
  %105 = mul nuw nsw i32 %78, %20
  %106 = mul nuw nsw i32 %62, %23
  %107 = mul nuw nsw i32 %94, %26
  %108 = getelementptr inbounds i8, i8* %33, i64 6
  %109 = load i8, i8* %108, align 1
  %110 = zext i8 %109 to i32
  %111 = mul nuw nsw i32 %110, %29
  %112 = add nuw nsw i32 %111, %106
  %113 = add nuw nsw i32 %105, 64
  %114 = add nuw nsw i32 %113, %107
  %115 = sub nsw i32 %114, %112
  %116 = ashr i32 %115, 7
  %117 = sext i32 %116 to i64
  %118 = getelementptr inbounds i8, i8* getelementptr inbounds ([2304 x i8], [2304 x i8]* @ff_crop_tab, i64 0, i64 1024), i64 %117
  %119 = load i8, i8* %118, align 1
  %120 = getelementptr inbounds i8, i8* %31, i64 4
  store i8 %119, i8* %120, align 1
  %121 = mul nuw nsw i32 %94, %20
  %122 = mul nuw nsw i32 %78, %23
  %123 = mul nuw nsw i32 %110, %26
  %124 = getelementptr inbounds i8, i8* %33, i64 7
  %125 = load i8, i8* %124, align 1
  %126 = zext i8 %125 to i32
  %127 = mul nuw nsw i32 %126, %29
  %128 = add nuw nsw i32 %127, %122
  %129 = add nuw nsw i32 %121, 64
  %130 = add nuw nsw i32 %129, %123
  %131 = sub nsw i32 %130, %128
  %132 = ashr i32 %131, 7
  %133 = sext i32 %132 to i64
  %134 = getelementptr inbounds i8, i8* getelementptr inbounds ([2304 x i8], [2304 x i8]* @ff_crop_tab, i64 0, i64 1024), i64 %133
  %135 = load i8, i8* %134, align 1
  %136 = getelementptr inbounds i8, i8* %31, i64 5
  store i8 %135, i8* %136, align 1
  %137 = mul nuw nsw i32 %110, %20
  %138 = mul nuw nsw i32 %94, %23
  %139 = mul nuw nsw i32 %126, %26
  %140 = getelementptr inbounds i8, i8* %33, i64 8
  %141 = load i8, i8* %140, align 1
  %142 = zext i8 %141 to i32
  %143 = mul nuw nsw i32 %142, %29
  %144 = add nuw nsw i32 %143, %138
  %145 = add nuw nsw i32 %137, 64
  %146 = add nuw nsw i32 %145, %139
  %147 = sub nsw i32 %146, %144
  %148 = ashr i32 %147, 7
  %149 = sext i32 %148 to i64
  %150 = getelementptr inbounds i8, i8* getelementptr inbounds ([2304 x i8], [2304 x i8]* @ff_crop_tab, i64 0, i64 1024), i64 %149
  %151 = load i8, i8* %150, align 1
  %152 = getelementptr inbounds i8, i8* %31, i64 6
  store i8 %151, i8* %152, align 1
  %153 = mul nuw nsw i32 %126, %20
  %154 = mul nuw nsw i32 %110, %23
  %155 = mul nuw nsw i32 %142, %26
  %156 = getelementptr inbounds i8, i8* %33, i64 9
  %157 = load i8, i8* %156, align 1
  %158 = zext i8 %157 to i32
  %159 = mul nuw nsw i32 %158, %29
  %160 = add nuw nsw i32 %159, %154
  %161 = add nuw nsw i32 %153, 64
  %162 = add nuw nsw i32 %161, %155
  %163 = sub nsw i32 %162, %160
  %164 = ashr i32 %163, 7
  %165 = sext i32 %164 to i64
  %166 = getelementptr inbounds i8, i8* getelementptr inbounds ([2304 x i8], [2304 x i8]* @ff_crop_tab, i64 0, i64 1024), i64 %165
  %167 = load i8, i8* %166, align 1
  %168 = getelementptr inbounds i8, i8* %31, i64 7
  store i8 %167, i8* %168, align 1
  %169 = getelementptr inbounds i8, i8* %31, i64 8
  %170 = getelementptr inbounds i8, i8* %33, i64 %3
  %171 = add nuw nsw i32 %32, 1
  %172 = icmp eq i32 %171, %12
  br i1 %172, label %173, label %30

173:                                              ; preds = %30, %7
  %174 = add nsw i32 %6, -1
  %175 = sext i32 %174 to i64
  %176 = icmp sgt i32 %4, 0
  br i1 %176, label %177, label %291

177:                                              ; preds = %173
  %178 = getelementptr inbounds [7 x [6 x i8]], [7 x [6 x i8]]* @subpel_filters, i64 0, i64 %175, i64 0
  %179 = getelementptr inbounds [168 x i8], [168 x i8]* %8, i64 0, i64 16
  %180 = getelementptr inbounds [7 x [6 x i8]], [7 x [6 x i8]]* @subpel_filters, i64 0, i64 %175, i64 2
  %181 = load i8, i8* %180, align 2
  %182 = zext i8 %181 to i32
  %183 = getelementptr inbounds [7 x [6 x i8]], [7 x [6 x i8]]* @subpel_filters, i64 0, i64 %175, i64 1
  %184 = load i8, i8* %183, align 1
  %185 = zext i8 %184 to i32
  %186 = load i8, i8* %178, align 2
  %187 = zext i8 %186 to i32
  %188 = getelementptr inbounds [7 x [6 x i8]], [7 x [6 x i8]]* @subpel_filters, i64 0, i64 %175, i64 3
  %189 = load i8, i8* %188, align 1
  %190 = zext i8 %189 to i32
  %191 = getelementptr inbounds [7 x [6 x i8]], [7 x [6 x i8]]* @subpel_filters, i64 0, i64 %175, i64 4
  %192 = load i8, i8* %191, align 2
  %193 = zext i8 %192 to i32
  %194 = getelementptr inbounds [7 x [6 x i8]], [7 x [6 x i8]]* @subpel_filters, i64 0, i64 %175, i64 5
  %195 = load i8, i8* %194, align 1
  %196 = zext i8 %195 to i32
  %197 = insertelement <8 x i32> undef, i32 %182, i32 0
  %198 = shufflevector <8 x i32> %197, <8 x i32> undef, <8 x i32> zeroinitializer
  %199 = insertelement <8 x i32> undef, i32 %187, i32 0
  %200 = shufflevector <8 x i32> %199, <8 x i32> undef, <8 x i32> zeroinitializer
  %201 = insertelement <8 x i32> undef, i32 %190, i32 0
  %202 = shufflevector <8 x i32> %201, <8 x i32> undef, <8 x i32> zeroinitializer
  %203 = insertelement <8 x i32> undef, i32 %196, i32 0
  %204 = shufflevector <8 x i32> %203, <8 x i32> undef, <8 x i32> zeroinitializer
  %205 = insertelement <8 x i32> undef, i32 %193, i32 0
  %206 = shufflevector <8 x i32> %205, <8 x i32> undef, <8 x i32> zeroinitializer
  %207 = insertelement <8 x i32> undef, i32 %185, i32 0
  %208 = shufflevector <8 x i32> %207, <8 x i32> undef, <8 x i32> zeroinitializer
  br label %209

209:                                              ; preds = %209, %177
  %210 = phi i8* [ %179, %177 ], [ %215, %209 ]
  %211 = phi i32 [ 0, %177 ], [ %289, %209 ]
  %212 = phi i8* [ %0, %177 ], [ %288, %209 ]
  %213 = getelementptr inbounds i8, i8* %210, i64 -8
  %214 = getelementptr inbounds i8, i8* %210, i64 -16
  %215 = getelementptr inbounds i8, i8* %210, i64 8
  %216 = getelementptr inbounds i8, i8* %210, i64 16
  %217 = getelementptr inbounds i8, i8* %210, i64 24
  %218 = bitcast i8* %210 to <8 x i8>*
  %219 = load <8 x i8>, <8 x i8>* %218, align 1
  %220 = zext <8 x i8> %219 to <8 x i32>
  %221 = mul nuw nsw <8 x i32> %198, %220
  %222 = bitcast i8* %213 to <8 x i8>*
  %223 = load <8 x i8>, <8 x i8>* %222, align 1
  %224 = zext <8 x i8> %223 to <8 x i32>
  %225 = mul nuw nsw <8 x i32> %208, %224
  %226 = bitcast i8* %214 to <8 x i8>*
  %227 = load <8 x i8>, <8 x i8>* %226, align 1
  %228 = zext <8 x i8> %227 to <8 x i32>
  %229 = mul nuw nsw <8 x i32> %200, %228
  %230 = bitcast i8* %215 to <8 x i8>*
  %231 = load <8 x i8>, <8 x i8>* %230, align 1
  %232 = zext <8 x i8> %231 to <8 x i32>
  %233 = mul nuw nsw <8 x i32> %202, %232
  %234 = bitcast i8* %216 to <8 x i8>*
  %235 = load <8 x i8>, <8 x i8>* %234, align 1
  %236 = zext <8 x i8> %235 to <8 x i32>
  %237 = mul nuw nsw <8 x i32> %206, %236
  %238 = bitcast i8* %217 to <8 x i8>*
  %239 = load <8 x i8>, <8 x i8>* %238, align 1
  %240 = zext <8 x i8> %239 to <8 x i32>
  %241 = mul nuw nsw <8 x i32> %204, %240
  %242 = add nuw nsw <8 x i32> %237, %225
  %243 = add nuw nsw <8 x i32> %221, <i32 64, i32 64, i32 64, i32 64, i32 64, i32 64, i32 64, i32 64>
  %244 = add nuw nsw <8 x i32> %243, %229
  %245 = add nuw nsw <8 x i32> %244, %233
  %246 = add nuw nsw <8 x i32> %245, %241
  %247 = sub nsw <8 x i32> %246, %242
  %248 = ashr <8 x i32> %247, <i32 7, i32 7, i32 7, i32 7, i32 7, i32 7, i32 7, i32 7>
  %249 = extractelement <8 x i32> %248, i32 0
  %250 = sext i32 %249 to i64
  %251 = getelementptr inbounds i8, i8* getelementptr inbounds ([2304 x i8], [2304 x i8]* @ff_crop_tab, i64 0, i64 1024), i64 %250
  %252 = load i8, i8* %251, align 1
  store i8 %252, i8* %212, align 1
  %253 = extractelement <8 x i32> %248, i32 1
  %254 = sext i32 %253 to i64
  %255 = getelementptr inbounds i8, i8* getelementptr inbounds ([2304 x i8], [2304 x i8]* @ff_crop_tab, i64 0, i64 1024), i64 %254
  %256 = load i8, i8* %255, align 1
  %257 = getelementptr inbounds i8, i8* %212, i64 1
  store i8 %256, i8* %257, align 1
  %258 = extractelement <8 x i32> %248, i32 2
  %259 = sext i32 %258 to i64
  %260 = getelementptr inbounds i8, i8* getelementptr inbounds ([2304 x i8], [2304 x i8]* @ff_crop_tab, i64 0, i64 1024), i64 %259
  %261 = load i8, i8* %260, align 1
  %262 = getelementptr inbounds i8, i8* %212, i64 2
  store i8 %261, i8* %262, align 1
  %263 = extractelement <8 x i32> %248, i32 3
  %264 = sext i32 %263 to i64
  %265 = getelementptr inbounds i8, i8* getelementptr inbounds ([2304 x i8], [2304 x i8]* @ff_crop_tab, i64 0, i64 1024), i64 %264
  %266 = load i8, i8* %265, align 1
  %267 = getelementptr inbounds i8, i8* %212, i64 3
  store i8 %266, i8* %267, align 1
  %268 = extractelement <8 x i32> %248, i32 4
  %269 = sext i32 %268 to i64
  %270 = getelementptr inbounds i8, i8* getelementptr inbounds ([2304 x i8], [2304 x i8]* @ff_crop_tab, i64 0, i64 1024), i64 %269
  %271 = load i8, i8* %270, align 1
  %272 = getelementptr inbounds i8, i8* %212, i64 4
  store i8 %271, i8* %272, align 1
  %273 = extractelement <8 x i32> %248, i32 5
  %274 = sext i32 %273 to i64
  %275 = getelementptr inbounds i8, i8* getelementptr inbounds ([2304 x i8], [2304 x i8]* @ff_crop_tab, i64 0, i64 1024), i64 %274
  %276 = load i8, i8* %275, align 1
  %277 = getelementptr inbounds i8, i8* %212, i64 5
  store i8 %276, i8* %277, align 1
  %278 = extractelement <8 x i32> %248, i32 6
  %279 = sext i32 %278 to i64
  %280 = getelementptr inbounds i8, i8* getelementptr inbounds ([2304 x i8], [2304 x i8]* @ff_crop_tab, i64 0, i64 1024), i64 %279
  %281 = load i8, i8* %280, align 1
  %282 = getelementptr inbounds i8, i8* %212, i64 6
  store i8 %281, i8* %282, align 1
  %283 = extractelement <8 x i32> %248, i32 7
  %284 = sext i32 %283 to i64
  %285 = getelementptr inbounds i8, i8* getelementptr inbounds ([2304 x i8], [2304 x i8]* @ff_crop_tab, i64 0, i64 1024), i64 %284
  %286 = load i8, i8* %285, align 1
  %287 = getelementptr inbounds i8, i8* %212, i64 7
  store i8 %286, i8* %287, align 1
  %288 = getelementptr inbounds i8, i8* %212, i64 %1
  %289 = add nuw nsw i32 %211, 1
  %290 = icmp eq i32 %289, %4
  br i1 %290, label %291, label %209

291:                                              ; preds = %209, %173
  call void @llvm.lifetime.end.p0i8(i64 168, i8* nonnull %11) #5
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @put_vp8_epel8_h6v6_c(i8* nocapture, i64, i8* nocapture readonly, i64, i32, i32, i32) #1 {
  %8 = alloca [168 x i8], align 16
  %9 = add nsw i32 %5, -1
  %10 = sext i32 %9 to i64
  %11 = getelementptr inbounds [168 x i8], [168 x i8]* %8, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 168, i8* nonnull %11) #5
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %11, i8 -86, i64 168, i1 false)
  %12 = add i32 %4, 5
  %13 = icmp sgt i32 %12, 0
  br i1 %13, label %14, label %223

14:                                               ; preds = %7
  %15 = shl nsw i64 %3, 1
  %16 = sub i64 0, %15
  %17 = getelementptr inbounds i8, i8* %2, i64 %16
  %18 = getelementptr inbounds [7 x [6 x i8]], [7 x [6 x i8]]* @subpel_filters, i64 0, i64 %10, i64 0
  %19 = getelementptr inbounds [7 x [6 x i8]], [7 x [6 x i8]]* @subpel_filters, i64 0, i64 %10, i64 2
  %20 = load i8, i8* %19, align 2
  %21 = zext i8 %20 to i32
  %22 = getelementptr inbounds [7 x [6 x i8]], [7 x [6 x i8]]* @subpel_filters, i64 0, i64 %10, i64 1
  %23 = load i8, i8* %22, align 1
  %24 = zext i8 %23 to i32
  %25 = load i8, i8* %18, align 2
  %26 = zext i8 %25 to i32
  %27 = getelementptr inbounds [7 x [6 x i8]], [7 x [6 x i8]]* @subpel_filters, i64 0, i64 %10, i64 3
  %28 = load i8, i8* %27, align 1
  %29 = zext i8 %28 to i32
  %30 = getelementptr inbounds [7 x [6 x i8]], [7 x [6 x i8]]* @subpel_filters, i64 0, i64 %10, i64 4
  %31 = load i8, i8* %30, align 2
  %32 = zext i8 %31 to i32
  %33 = getelementptr inbounds [7 x [6 x i8]], [7 x [6 x i8]]* @subpel_filters, i64 0, i64 %10, i64 5
  %34 = load i8, i8* %33, align 1
  %35 = zext i8 %34 to i32
  br label %36

36:                                               ; preds = %36, %14
  %37 = phi i8* [ %11, %14 ], [ %219, %36 ]
  %38 = phi i32 [ 0, %14 ], [ %221, %36 ]
  %39 = phi i8* [ %17, %14 ], [ %220, %36 ]
  %40 = load i8, i8* %39, align 1
  %41 = zext i8 %40 to i32
  %42 = mul nuw nsw i32 %41, %21
  %43 = getelementptr inbounds i8, i8* %39, i64 -1
  %44 = load i8, i8* %43, align 1
  %45 = zext i8 %44 to i32
  %46 = mul nuw nsw i32 %45, %24
  %47 = getelementptr inbounds i8, i8* %39, i64 -2
  %48 = load i8, i8* %47, align 1
  %49 = zext i8 %48 to i32
  %50 = mul nuw nsw i32 %49, %26
  %51 = getelementptr inbounds i8, i8* %39, i64 1
  %52 = load i8, i8* %51, align 1
  %53 = zext i8 %52 to i32
  %54 = mul nuw nsw i32 %53, %29
  %55 = getelementptr inbounds i8, i8* %39, i64 2
  %56 = load i8, i8* %55, align 1
  %57 = zext i8 %56 to i32
  %58 = mul nuw nsw i32 %57, %32
  %59 = getelementptr inbounds i8, i8* %39, i64 3
  %60 = load i8, i8* %59, align 1
  %61 = zext i8 %60 to i32
  %62 = mul nuw nsw i32 %61, %35
  %63 = add nuw nsw i32 %58, %46
  %64 = add nuw nsw i32 %42, 64
  %65 = add nuw nsw i32 %64, %50
  %66 = add nuw nsw i32 %65, %54
  %67 = add nuw nsw i32 %66, %62
  %68 = sub nsw i32 %67, %63
  %69 = ashr i32 %68, 7
  %70 = sext i32 %69 to i64
  %71 = getelementptr inbounds i8, i8* getelementptr inbounds ([2304 x i8], [2304 x i8]* @ff_crop_tab, i64 0, i64 1024), i64 %70
  %72 = load i8, i8* %71, align 1
  store i8 %72, i8* %37, align 1
  %73 = mul nuw nsw i32 %53, %21
  %74 = mul nuw nsw i32 %41, %24
  %75 = mul nuw nsw i32 %45, %26
  %76 = mul nuw nsw i32 %57, %29
  %77 = mul nuw nsw i32 %61, %32
  %78 = getelementptr inbounds i8, i8* %39, i64 4
  %79 = load i8, i8* %78, align 1
  %80 = zext i8 %79 to i32
  %81 = mul nuw nsw i32 %80, %35
  %82 = add nuw nsw i32 %77, %74
  %83 = add nuw nsw i32 %73, 64
  %84 = add nuw nsw i32 %83, %75
  %85 = add nuw nsw i32 %84, %76
  %86 = add nuw nsw i32 %85, %81
  %87 = sub nsw i32 %86, %82
  %88 = ashr i32 %87, 7
  %89 = sext i32 %88 to i64
  %90 = getelementptr inbounds i8, i8* getelementptr inbounds ([2304 x i8], [2304 x i8]* @ff_crop_tab, i64 0, i64 1024), i64 %89
  %91 = load i8, i8* %90, align 1
  %92 = getelementptr inbounds i8, i8* %37, i64 1
  store i8 %91, i8* %92, align 1
  %93 = mul nuw nsw i32 %57, %21
  %94 = mul nuw nsw i32 %53, %24
  %95 = mul nuw nsw i32 %41, %26
  %96 = mul nuw nsw i32 %61, %29
  %97 = mul nuw nsw i32 %80, %32
  %98 = getelementptr inbounds i8, i8* %39, i64 5
  %99 = load i8, i8* %98, align 1
  %100 = zext i8 %99 to i32
  %101 = mul nuw nsw i32 %100, %35
  %102 = add nuw nsw i32 %97, %94
  %103 = add nuw nsw i32 %93, 64
  %104 = add nuw nsw i32 %103, %95
  %105 = add nuw nsw i32 %104, %96
  %106 = add nuw nsw i32 %105, %101
  %107 = sub nsw i32 %106, %102
  %108 = ashr i32 %107, 7
  %109 = sext i32 %108 to i64
  %110 = getelementptr inbounds i8, i8* getelementptr inbounds ([2304 x i8], [2304 x i8]* @ff_crop_tab, i64 0, i64 1024), i64 %109
  %111 = load i8, i8* %110, align 1
  %112 = getelementptr inbounds i8, i8* %37, i64 2
  store i8 %111, i8* %112, align 1
  %113 = mul nuw nsw i32 %61, %21
  %114 = mul nuw nsw i32 %57, %24
  %115 = mul nuw nsw i32 %53, %26
  %116 = mul nuw nsw i32 %80, %29
  %117 = mul nuw nsw i32 %100, %32
  %118 = getelementptr inbounds i8, i8* %39, i64 6
  %119 = load i8, i8* %118, align 1
  %120 = zext i8 %119 to i32
  %121 = mul nuw nsw i32 %120, %35
  %122 = add nuw nsw i32 %117, %114
  %123 = add nuw nsw i32 %113, 64
  %124 = add nuw nsw i32 %123, %115
  %125 = add nuw nsw i32 %124, %116
  %126 = add nuw nsw i32 %125, %121
  %127 = sub nsw i32 %126, %122
  %128 = ashr i32 %127, 7
  %129 = sext i32 %128 to i64
  %130 = getelementptr inbounds i8, i8* getelementptr inbounds ([2304 x i8], [2304 x i8]* @ff_crop_tab, i64 0, i64 1024), i64 %129
  %131 = load i8, i8* %130, align 1
  %132 = getelementptr inbounds i8, i8* %37, i64 3
  store i8 %131, i8* %132, align 1
  %133 = mul nuw nsw i32 %80, %21
  %134 = mul nuw nsw i32 %61, %24
  %135 = mul nuw nsw i32 %57, %26
  %136 = mul nuw nsw i32 %100, %29
  %137 = mul nuw nsw i32 %120, %32
  %138 = getelementptr inbounds i8, i8* %39, i64 7
  %139 = load i8, i8* %138, align 1
  %140 = zext i8 %139 to i32
  %141 = mul nuw nsw i32 %140, %35
  %142 = add nuw nsw i32 %137, %134
  %143 = add nuw nsw i32 %133, 64
  %144 = add nuw nsw i32 %143, %135
  %145 = add nuw nsw i32 %144, %136
  %146 = add nuw nsw i32 %145, %141
  %147 = sub nsw i32 %146, %142
  %148 = ashr i32 %147, 7
  %149 = sext i32 %148 to i64
  %150 = getelementptr inbounds i8, i8* getelementptr inbounds ([2304 x i8], [2304 x i8]* @ff_crop_tab, i64 0, i64 1024), i64 %149
  %151 = load i8, i8* %150, align 1
  %152 = getelementptr inbounds i8, i8* %37, i64 4
  store i8 %151, i8* %152, align 1
  %153 = mul nuw nsw i32 %100, %21
  %154 = mul nuw nsw i32 %80, %24
  %155 = load i8, i8* %59, align 1
  %156 = zext i8 %155 to i32
  %157 = mul nuw nsw i32 %156, %26
  %158 = mul nuw nsw i32 %120, %29
  %159 = mul nuw nsw i32 %140, %32
  %160 = getelementptr inbounds i8, i8* %39, i64 8
  %161 = load i8, i8* %160, align 1
  %162 = zext i8 %161 to i32
  %163 = mul nuw nsw i32 %162, %35
  %164 = add nuw nsw i32 %159, %154
  %165 = add nuw nsw i32 %153, 64
  %166 = add nuw nsw i32 %165, %157
  %167 = add nuw nsw i32 %166, %158
  %168 = add nuw nsw i32 %167, %163
  %169 = sub nsw i32 %168, %164
  %170 = ashr i32 %169, 7
  %171 = sext i32 %170 to i64
  %172 = getelementptr inbounds i8, i8* getelementptr inbounds ([2304 x i8], [2304 x i8]* @ff_crop_tab, i64 0, i64 1024), i64 %171
  %173 = load i8, i8* %172, align 1
  %174 = getelementptr inbounds i8, i8* %37, i64 5
  store i8 %173, i8* %174, align 1
  %175 = mul nuw nsw i32 %120, %21
  %176 = mul nuw nsw i32 %100, %24
  %177 = load i8, i8* %78, align 1
  %178 = zext i8 %177 to i32
  %179 = mul nuw nsw i32 %178, %26
  %180 = mul nuw nsw i32 %140, %29
  %181 = mul nuw nsw i32 %162, %32
  %182 = getelementptr inbounds i8, i8* %39, i64 9
  %183 = load i8, i8* %182, align 1
  %184 = zext i8 %183 to i32
  %185 = mul nuw nsw i32 %184, %35
  %186 = add nuw nsw i32 %181, %176
  %187 = add nuw nsw i32 %175, 64
  %188 = add nuw nsw i32 %187, %179
  %189 = add nuw nsw i32 %188, %180
  %190 = add nuw nsw i32 %189, %185
  %191 = sub nsw i32 %190, %186
  %192 = ashr i32 %191, 7
  %193 = sext i32 %192 to i64
  %194 = getelementptr inbounds i8, i8* getelementptr inbounds ([2304 x i8], [2304 x i8]* @ff_crop_tab, i64 0, i64 1024), i64 %193
  %195 = load i8, i8* %194, align 1
  %196 = getelementptr inbounds i8, i8* %37, i64 6
  store i8 %195, i8* %196, align 1
  %197 = mul nuw nsw i32 %140, %21
  %198 = mul nuw nsw i32 %120, %24
  %199 = load i8, i8* %98, align 1
  %200 = zext i8 %199 to i32
  %201 = mul nuw nsw i32 %200, %26
  %202 = mul nuw nsw i32 %162, %29
  %203 = mul nuw nsw i32 %184, %32
  %204 = getelementptr inbounds i8, i8* %39, i64 10
  %205 = load i8, i8* %204, align 1
  %206 = zext i8 %205 to i32
  %207 = mul nuw nsw i32 %206, %35
  %208 = add nuw nsw i32 %203, %198
  %209 = add nuw nsw i32 %197, 64
  %210 = add nuw nsw i32 %209, %201
  %211 = add nuw nsw i32 %210, %202
  %212 = add nuw nsw i32 %211, %207
  %213 = sub nsw i32 %212, %208
  %214 = ashr i32 %213, 7
  %215 = sext i32 %214 to i64
  %216 = getelementptr inbounds i8, i8* getelementptr inbounds ([2304 x i8], [2304 x i8]* @ff_crop_tab, i64 0, i64 1024), i64 %215
  %217 = load i8, i8* %216, align 1
  %218 = getelementptr inbounds i8, i8* %37, i64 7
  store i8 %217, i8* %218, align 1
  %219 = getelementptr inbounds i8, i8* %37, i64 8
  %220 = getelementptr inbounds i8, i8* %39, i64 %3
  %221 = add nuw nsw i32 %38, 1
  %222 = icmp eq i32 %221, %12
  br i1 %222, label %223, label %36

223:                                              ; preds = %36, %7
  %224 = add nsw i32 %6, -1
  %225 = sext i32 %224 to i64
  %226 = icmp sgt i32 %4, 0
  br i1 %226, label %227, label %341

227:                                              ; preds = %223
  %228 = getelementptr inbounds [7 x [6 x i8]], [7 x [6 x i8]]* @subpel_filters, i64 0, i64 %225, i64 0
  %229 = getelementptr inbounds [168 x i8], [168 x i8]* %8, i64 0, i64 16
  %230 = getelementptr inbounds [7 x [6 x i8]], [7 x [6 x i8]]* @subpel_filters, i64 0, i64 %225, i64 2
  %231 = load i8, i8* %230, align 2
  %232 = zext i8 %231 to i32
  %233 = getelementptr inbounds [7 x [6 x i8]], [7 x [6 x i8]]* @subpel_filters, i64 0, i64 %225, i64 1
  %234 = load i8, i8* %233, align 1
  %235 = zext i8 %234 to i32
  %236 = load i8, i8* %228, align 2
  %237 = zext i8 %236 to i32
  %238 = getelementptr inbounds [7 x [6 x i8]], [7 x [6 x i8]]* @subpel_filters, i64 0, i64 %225, i64 3
  %239 = load i8, i8* %238, align 1
  %240 = zext i8 %239 to i32
  %241 = getelementptr inbounds [7 x [6 x i8]], [7 x [6 x i8]]* @subpel_filters, i64 0, i64 %225, i64 4
  %242 = load i8, i8* %241, align 2
  %243 = zext i8 %242 to i32
  %244 = getelementptr inbounds [7 x [6 x i8]], [7 x [6 x i8]]* @subpel_filters, i64 0, i64 %225, i64 5
  %245 = load i8, i8* %244, align 1
  %246 = zext i8 %245 to i32
  %247 = insertelement <8 x i32> undef, i32 %232, i32 0
  %248 = shufflevector <8 x i32> %247, <8 x i32> undef, <8 x i32> zeroinitializer
  %249 = insertelement <8 x i32> undef, i32 %237, i32 0
  %250 = shufflevector <8 x i32> %249, <8 x i32> undef, <8 x i32> zeroinitializer
  %251 = insertelement <8 x i32> undef, i32 %240, i32 0
  %252 = shufflevector <8 x i32> %251, <8 x i32> undef, <8 x i32> zeroinitializer
  %253 = insertelement <8 x i32> undef, i32 %246, i32 0
  %254 = shufflevector <8 x i32> %253, <8 x i32> undef, <8 x i32> zeroinitializer
  %255 = insertelement <8 x i32> undef, i32 %243, i32 0
  %256 = shufflevector <8 x i32> %255, <8 x i32> undef, <8 x i32> zeroinitializer
  %257 = insertelement <8 x i32> undef, i32 %235, i32 0
  %258 = shufflevector <8 x i32> %257, <8 x i32> undef, <8 x i32> zeroinitializer
  br label %259

259:                                              ; preds = %259, %227
  %260 = phi i8* [ %229, %227 ], [ %265, %259 ]
  %261 = phi i32 [ 0, %227 ], [ %339, %259 ]
  %262 = phi i8* [ %0, %227 ], [ %338, %259 ]
  %263 = getelementptr inbounds i8, i8* %260, i64 -8
  %264 = getelementptr inbounds i8, i8* %260, i64 -16
  %265 = getelementptr inbounds i8, i8* %260, i64 8
  %266 = getelementptr inbounds i8, i8* %260, i64 16
  %267 = getelementptr inbounds i8, i8* %260, i64 24
  %268 = bitcast i8* %260 to <8 x i8>*
  %269 = load <8 x i8>, <8 x i8>* %268, align 1
  %270 = zext <8 x i8> %269 to <8 x i32>
  %271 = mul nuw nsw <8 x i32> %248, %270
  %272 = bitcast i8* %263 to <8 x i8>*
  %273 = load <8 x i8>, <8 x i8>* %272, align 1
  %274 = zext <8 x i8> %273 to <8 x i32>
  %275 = mul nuw nsw <8 x i32> %258, %274
  %276 = bitcast i8* %264 to <8 x i8>*
  %277 = load <8 x i8>, <8 x i8>* %276, align 1
  %278 = zext <8 x i8> %277 to <8 x i32>
  %279 = mul nuw nsw <8 x i32> %250, %278
  %280 = bitcast i8* %265 to <8 x i8>*
  %281 = load <8 x i8>, <8 x i8>* %280, align 1
  %282 = zext <8 x i8> %281 to <8 x i32>
  %283 = mul nuw nsw <8 x i32> %252, %282
  %284 = bitcast i8* %266 to <8 x i8>*
  %285 = load <8 x i8>, <8 x i8>* %284, align 1
  %286 = zext <8 x i8> %285 to <8 x i32>
  %287 = mul nuw nsw <8 x i32> %256, %286
  %288 = bitcast i8* %267 to <8 x i8>*
  %289 = load <8 x i8>, <8 x i8>* %288, align 1
  %290 = zext <8 x i8> %289 to <8 x i32>
  %291 = mul nuw nsw <8 x i32> %254, %290
  %292 = add nuw nsw <8 x i32> %287, %275
  %293 = add nuw nsw <8 x i32> %271, <i32 64, i32 64, i32 64, i32 64, i32 64, i32 64, i32 64, i32 64>
  %294 = add nuw nsw <8 x i32> %293, %279
  %295 = add nuw nsw <8 x i32> %294, %283
  %296 = add nuw nsw <8 x i32> %295, %291
  %297 = sub nsw <8 x i32> %296, %292
  %298 = ashr <8 x i32> %297, <i32 7, i32 7, i32 7, i32 7, i32 7, i32 7, i32 7, i32 7>
  %299 = extractelement <8 x i32> %298, i32 0
  %300 = sext i32 %299 to i64
  %301 = getelementptr inbounds i8, i8* getelementptr inbounds ([2304 x i8], [2304 x i8]* @ff_crop_tab, i64 0, i64 1024), i64 %300
  %302 = load i8, i8* %301, align 1
  store i8 %302, i8* %262, align 1
  %303 = extractelement <8 x i32> %298, i32 1
  %304 = sext i32 %303 to i64
  %305 = getelementptr inbounds i8, i8* getelementptr inbounds ([2304 x i8], [2304 x i8]* @ff_crop_tab, i64 0, i64 1024), i64 %304
  %306 = load i8, i8* %305, align 1
  %307 = getelementptr inbounds i8, i8* %262, i64 1
  store i8 %306, i8* %307, align 1
  %308 = extractelement <8 x i32> %298, i32 2
  %309 = sext i32 %308 to i64
  %310 = getelementptr inbounds i8, i8* getelementptr inbounds ([2304 x i8], [2304 x i8]* @ff_crop_tab, i64 0, i64 1024), i64 %309
  %311 = load i8, i8* %310, align 1
  %312 = getelementptr inbounds i8, i8* %262, i64 2
  store i8 %311, i8* %312, align 1
  %313 = extractelement <8 x i32> %298, i32 3
  %314 = sext i32 %313 to i64
  %315 = getelementptr inbounds i8, i8* getelementptr inbounds ([2304 x i8], [2304 x i8]* @ff_crop_tab, i64 0, i64 1024), i64 %314
  %316 = load i8, i8* %315, align 1
  %317 = getelementptr inbounds i8, i8* %262, i64 3
  store i8 %316, i8* %317, align 1
  %318 = extractelement <8 x i32> %298, i32 4
  %319 = sext i32 %318 to i64
  %320 = getelementptr inbounds i8, i8* getelementptr inbounds ([2304 x i8], [2304 x i8]* @ff_crop_tab, i64 0, i64 1024), i64 %319
  %321 = load i8, i8* %320, align 1
  %322 = getelementptr inbounds i8, i8* %262, i64 4
  store i8 %321, i8* %322, align 1
  %323 = extractelement <8 x i32> %298, i32 5
  %324 = sext i32 %323 to i64
  %325 = getelementptr inbounds i8, i8* getelementptr inbounds ([2304 x i8], [2304 x i8]* @ff_crop_tab, i64 0, i64 1024), i64 %324
  %326 = load i8, i8* %325, align 1
  %327 = getelementptr inbounds i8, i8* %262, i64 5
  store i8 %326, i8* %327, align 1
  %328 = extractelement <8 x i32> %298, i32 6
  %329 = sext i32 %328 to i64
  %330 = getelementptr inbounds i8, i8* getelementptr inbounds ([2304 x i8], [2304 x i8]* @ff_crop_tab, i64 0, i64 1024), i64 %329
  %331 = load i8, i8* %330, align 1
  %332 = getelementptr inbounds i8, i8* %262, i64 6
  store i8 %331, i8* %332, align 1
  %333 = extractelement <8 x i32> %298, i32 7
  %334 = sext i32 %333 to i64
  %335 = getelementptr inbounds i8, i8* getelementptr inbounds ([2304 x i8], [2304 x i8]* @ff_crop_tab, i64 0, i64 1024), i64 %334
  %336 = load i8, i8* %335, align 1
  %337 = getelementptr inbounds i8, i8* %262, i64 7
  store i8 %336, i8* %337, align 1
  %338 = getelementptr inbounds i8, i8* %262, i64 %1
  %339 = add nuw nsw i32 %261, 1
  %340 = icmp eq i32 %339, %4
  br i1 %340, label %341, label %259

341:                                              ; preds = %259, %223
  call void @llvm.lifetime.end.p0i8(i64 168, i8* nonnull %11) #5
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define internal void @put_vp8_pixels4_c(i8* nocapture, i64, i8* nocapture readonly, i64, i32, i32, i32) #2 {
  %8 = icmp sgt i32 %4, 0
  br i1 %8, label %9, label %76

9:                                                ; preds = %7
  %10 = add i32 %4, -1
  %11 = and i32 %4, 7
  %12 = icmp ult i32 %10, 7
  br i1 %12, label %61, label %13

13:                                               ; preds = %9
  %14 = sub i32 %4, %11
  br label %15

15:                                               ; preds = %15, %13
  %16 = phi i8* [ %0, %13 ], [ %57, %15 ]
  %17 = phi i8* [ %2, %13 ], [ %58, %15 ]
  %18 = phi i32 [ %14, %13 ], [ %59, %15 ]
  %19 = bitcast i8* %17 to i32*
  %20 = bitcast i8* %16 to i32*
  %21 = load i32, i32* %19, align 1
  store i32 %21, i32* %20, align 1
  %22 = getelementptr inbounds i8, i8* %16, i64 %1
  %23 = getelementptr inbounds i8, i8* %17, i64 %3
  %24 = bitcast i8* %23 to i32*
  %25 = bitcast i8* %22 to i32*
  %26 = load i32, i32* %24, align 1
  store i32 %26, i32* %25, align 1
  %27 = getelementptr inbounds i8, i8* %22, i64 %1
  %28 = getelementptr inbounds i8, i8* %23, i64 %3
  %29 = bitcast i8* %28 to i32*
  %30 = bitcast i8* %27 to i32*
  %31 = load i32, i32* %29, align 1
  store i32 %31, i32* %30, align 1
  %32 = getelementptr inbounds i8, i8* %27, i64 %1
  %33 = getelementptr inbounds i8, i8* %28, i64 %3
  %34 = bitcast i8* %33 to i32*
  %35 = bitcast i8* %32 to i32*
  %36 = load i32, i32* %34, align 1
  store i32 %36, i32* %35, align 1
  %37 = getelementptr inbounds i8, i8* %32, i64 %1
  %38 = getelementptr inbounds i8, i8* %33, i64 %3
  %39 = bitcast i8* %38 to i32*
  %40 = bitcast i8* %37 to i32*
  %41 = load i32, i32* %39, align 1
  store i32 %41, i32* %40, align 1
  %42 = getelementptr inbounds i8, i8* %37, i64 %1
  %43 = getelementptr inbounds i8, i8* %38, i64 %3
  %44 = bitcast i8* %43 to i32*
  %45 = bitcast i8* %42 to i32*
  %46 = load i32, i32* %44, align 1
  store i32 %46, i32* %45, align 1
  %47 = getelementptr inbounds i8, i8* %42, i64 %1
  %48 = getelementptr inbounds i8, i8* %43, i64 %3
  %49 = bitcast i8* %48 to i32*
  %50 = bitcast i8* %47 to i32*
  %51 = load i32, i32* %49, align 1
  store i32 %51, i32* %50, align 1
  %52 = getelementptr inbounds i8, i8* %47, i64 %1
  %53 = getelementptr inbounds i8, i8* %48, i64 %3
  %54 = bitcast i8* %53 to i32*
  %55 = bitcast i8* %52 to i32*
  %56 = load i32, i32* %54, align 1
  store i32 %56, i32* %55, align 1
  %57 = getelementptr inbounds i8, i8* %52, i64 %1
  %58 = getelementptr inbounds i8, i8* %53, i64 %3
  %59 = add i32 %18, -8
  %60 = icmp eq i32 %59, 0
  br i1 %60, label %61, label %15

61:                                               ; preds = %15, %9
  %62 = phi i8* [ %0, %9 ], [ %57, %15 ]
  %63 = phi i8* [ %2, %9 ], [ %58, %15 ]
  %64 = icmp eq i32 %11, 0
  br i1 %64, label %76, label %65

65:                                               ; preds = %61, %65
  %66 = phi i8* [ %72, %65 ], [ %62, %61 ]
  %67 = phi i8* [ %73, %65 ], [ %63, %61 ]
  %68 = phi i32 [ %74, %65 ], [ %11, %61 ]
  %69 = bitcast i8* %67 to i32*
  %70 = bitcast i8* %66 to i32*
  %71 = load i32, i32* %69, align 1
  store i32 %71, i32* %70, align 1
  %72 = getelementptr inbounds i8, i8* %66, i64 %1
  %73 = getelementptr inbounds i8, i8* %67, i64 %3
  %74 = add i32 %68, -1
  %75 = icmp eq i32 %74, 0
  br i1 %75, label %76, label %65, !llvm.loop !5

76:                                               ; preds = %61, %65, %7
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define internal void @put_vp8_epel4_h4_c(i8* nocapture, i64, i8* nocapture readonly, i64, i32, i32, i32) #2 {
  %8 = add nsw i32 %5, -1
  %9 = sext i32 %8 to i64
  %10 = icmp sgt i32 %4, 0
  br i1 %10, label %11, label %121

11:                                               ; preds = %7
  %12 = getelementptr inbounds [7 x [6 x i8]], [7 x [6 x i8]]* @subpel_filters, i64 0, i64 %9, i64 2
  %13 = load i8, i8* %12, align 2
  %14 = zext i8 %13 to i32
  %15 = getelementptr inbounds [7 x [6 x i8]], [7 x [6 x i8]]* @subpel_filters, i64 0, i64 %9, i64 1
  %16 = load i8, i8* %15, align 1
  %17 = zext i8 %16 to i32
  %18 = getelementptr inbounds [7 x [6 x i8]], [7 x [6 x i8]]* @subpel_filters, i64 0, i64 %9, i64 3
  %19 = load i8, i8* %18, align 1
  %20 = zext i8 %19 to i32
  %21 = getelementptr inbounds [7 x [6 x i8]], [7 x [6 x i8]]* @subpel_filters, i64 0, i64 %9, i64 4
  %22 = load i8, i8* %21, align 2
  %23 = zext i8 %22 to i32
  br label %24

24:                                               ; preds = %24, %11
  %25 = phi i32 [ 0, %11 ], [ %119, %24 ]
  %26 = phi i8* [ %0, %11 ], [ %117, %24 ]
  %27 = phi i8* [ %2, %11 ], [ %118, %24 ]
  %28 = load i8, i8* %27, align 1
  %29 = zext i8 %28 to i32
  %30 = mul nuw nsw i32 %29, %14
  %31 = getelementptr inbounds i8, i8* %27, i64 -1
  %32 = load i8, i8* %31, align 1
  %33 = zext i8 %32 to i32
  %34 = mul nuw nsw i32 %33, %17
  %35 = getelementptr inbounds i8, i8* %27, i64 1
  %36 = load i8, i8* %35, align 1
  %37 = zext i8 %36 to i32
  %38 = mul nuw nsw i32 %37, %20
  %39 = getelementptr inbounds i8, i8* %27, i64 2
  %40 = load i8, i8* %39, align 1
  %41 = zext i8 %40 to i32
  %42 = mul nuw nsw i32 %41, %23
  %43 = add nuw nsw i32 %42, %34
  %44 = add nuw nsw i32 %30, 64
  %45 = add nuw nsw i32 %44, %38
  %46 = sub nsw i32 %45, %43
  %47 = ashr i32 %46, 7
  %48 = sext i32 %47 to i64
  %49 = getelementptr inbounds i8, i8* getelementptr inbounds ([2304 x i8], [2304 x i8]* @ff_crop_tab, i64 0, i64 1024), i64 %48
  %50 = load i8, i8* %49, align 1
  store i8 %50, i8* %26, align 1
  %51 = load i8, i8* %35, align 1
  %52 = zext i8 %51 to i32
  %53 = mul nuw nsw i32 %52, %14
  %54 = load i8, i8* %27, align 1
  %55 = zext i8 %54 to i32
  %56 = mul nuw nsw i32 %55, %17
  %57 = load i8, i8* %39, align 1
  %58 = zext i8 %57 to i32
  %59 = mul nuw nsw i32 %58, %20
  %60 = getelementptr inbounds i8, i8* %27, i64 3
  %61 = load i8, i8* %60, align 1
  %62 = zext i8 %61 to i32
  %63 = mul nuw nsw i32 %62, %23
  %64 = add nuw nsw i32 %63, %56
  %65 = add nuw nsw i32 %53, 64
  %66 = add nuw nsw i32 %65, %59
  %67 = sub nsw i32 %66, %64
  %68 = ashr i32 %67, 7
  %69 = sext i32 %68 to i64
  %70 = getelementptr inbounds i8, i8* getelementptr inbounds ([2304 x i8], [2304 x i8]* @ff_crop_tab, i64 0, i64 1024), i64 %69
  %71 = load i8, i8* %70, align 1
  %72 = getelementptr inbounds i8, i8* %26, i64 1
  store i8 %71, i8* %72, align 1
  %73 = load i8, i8* %39, align 1
  %74 = zext i8 %73 to i32
  %75 = mul nuw nsw i32 %74, %14
  %76 = load i8, i8* %35, align 1
  %77 = zext i8 %76 to i32
  %78 = mul nuw nsw i32 %77, %17
  %79 = load i8, i8* %60, align 1
  %80 = zext i8 %79 to i32
  %81 = mul nuw nsw i32 %80, %20
  %82 = getelementptr inbounds i8, i8* %27, i64 4
  %83 = load i8, i8* %82, align 1
  %84 = zext i8 %83 to i32
  %85 = mul nuw nsw i32 %84, %23
  %86 = add nuw nsw i32 %85, %78
  %87 = add nuw nsw i32 %75, 64
  %88 = add nuw nsw i32 %87, %81
  %89 = sub nsw i32 %88, %86
  %90 = ashr i32 %89, 7
  %91 = sext i32 %90 to i64
  %92 = getelementptr inbounds i8, i8* getelementptr inbounds ([2304 x i8], [2304 x i8]* @ff_crop_tab, i64 0, i64 1024), i64 %91
  %93 = load i8, i8* %92, align 1
  %94 = getelementptr inbounds i8, i8* %26, i64 2
  store i8 %93, i8* %94, align 1
  %95 = load i8, i8* %60, align 1
  %96 = zext i8 %95 to i32
  %97 = mul nuw nsw i32 %96, %14
  %98 = load i8, i8* %39, align 1
  %99 = zext i8 %98 to i32
  %100 = mul nuw nsw i32 %99, %17
  %101 = load i8, i8* %82, align 1
  %102 = zext i8 %101 to i32
  %103 = mul nuw nsw i32 %102, %20
  %104 = getelementptr inbounds i8, i8* %27, i64 5
  %105 = load i8, i8* %104, align 1
  %106 = zext i8 %105 to i32
  %107 = mul nuw nsw i32 %106, %23
  %108 = add nuw nsw i32 %107, %100
  %109 = add nuw nsw i32 %97, 64
  %110 = add nuw nsw i32 %109, %103
  %111 = sub nsw i32 %110, %108
  %112 = ashr i32 %111, 7
  %113 = sext i32 %112 to i64
  %114 = getelementptr inbounds i8, i8* getelementptr inbounds ([2304 x i8], [2304 x i8]* @ff_crop_tab, i64 0, i64 1024), i64 %113
  %115 = load i8, i8* %114, align 1
  %116 = getelementptr inbounds i8, i8* %26, i64 3
  store i8 %115, i8* %116, align 1
  %117 = getelementptr inbounds i8, i8* %26, i64 %1
  %118 = getelementptr inbounds i8, i8* %27, i64 %3
  %119 = add nuw nsw i32 %25, 1
  %120 = icmp eq i32 %119, %4
  br i1 %120, label %121, label %24

121:                                              ; preds = %24, %7
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define internal void @put_vp8_epel4_h6_c(i8* nocapture, i64, i8* nocapture readonly, i64, i32, i32, i32) #2 {
  %8 = add nsw i32 %5, -1
  %9 = sext i32 %8 to i64
  %10 = icmp sgt i32 %4, 0
  br i1 %10, label %11, label %161

11:                                               ; preds = %7
  %12 = getelementptr inbounds [7 x [6 x i8]], [7 x [6 x i8]]* @subpel_filters, i64 0, i64 %9, i64 0
  %13 = getelementptr inbounds [7 x [6 x i8]], [7 x [6 x i8]]* @subpel_filters, i64 0, i64 %9, i64 2
  %14 = load i8, i8* %13, align 2
  %15 = zext i8 %14 to i32
  %16 = getelementptr inbounds [7 x [6 x i8]], [7 x [6 x i8]]* @subpel_filters, i64 0, i64 %9, i64 1
  %17 = load i8, i8* %16, align 1
  %18 = zext i8 %17 to i32
  %19 = load i8, i8* %12, align 2
  %20 = zext i8 %19 to i32
  %21 = getelementptr inbounds [7 x [6 x i8]], [7 x [6 x i8]]* @subpel_filters, i64 0, i64 %9, i64 3
  %22 = load i8, i8* %21, align 1
  %23 = zext i8 %22 to i32
  %24 = getelementptr inbounds [7 x [6 x i8]], [7 x [6 x i8]]* @subpel_filters, i64 0, i64 %9, i64 4
  %25 = load i8, i8* %24, align 2
  %26 = zext i8 %25 to i32
  %27 = getelementptr inbounds [7 x [6 x i8]], [7 x [6 x i8]]* @subpel_filters, i64 0, i64 %9, i64 5
  %28 = load i8, i8* %27, align 1
  %29 = zext i8 %28 to i32
  br label %30

30:                                               ; preds = %30, %11
  %31 = phi i32 [ 0, %11 ], [ %159, %30 ]
  %32 = phi i8* [ %0, %11 ], [ %157, %30 ]
  %33 = phi i8* [ %2, %11 ], [ %158, %30 ]
  %34 = load i8, i8* %33, align 1
  %35 = zext i8 %34 to i32
  %36 = mul nuw nsw i32 %35, %15
  %37 = getelementptr inbounds i8, i8* %33, i64 -1
  %38 = load i8, i8* %37, align 1
  %39 = zext i8 %38 to i32
  %40 = mul nuw nsw i32 %39, %18
  %41 = getelementptr inbounds i8, i8* %33, i64 -2
  %42 = load i8, i8* %41, align 1
  %43 = zext i8 %42 to i32
  %44 = mul nuw nsw i32 %43, %20
  %45 = getelementptr inbounds i8, i8* %33, i64 1
  %46 = load i8, i8* %45, align 1
  %47 = zext i8 %46 to i32
  %48 = mul nuw nsw i32 %47, %23
  %49 = getelementptr inbounds i8, i8* %33, i64 2
  %50 = load i8, i8* %49, align 1
  %51 = zext i8 %50 to i32
  %52 = mul nuw nsw i32 %51, %26
  %53 = getelementptr inbounds i8, i8* %33, i64 3
  %54 = load i8, i8* %53, align 1
  %55 = zext i8 %54 to i32
  %56 = mul nuw nsw i32 %55, %29
  %57 = add nuw nsw i32 %52, %40
  %58 = add nuw nsw i32 %36, 64
  %59 = add nuw nsw i32 %58, %44
  %60 = add nuw nsw i32 %59, %48
  %61 = add nuw nsw i32 %60, %56
  %62 = sub nsw i32 %61, %57
  %63 = ashr i32 %62, 7
  %64 = sext i32 %63 to i64
  %65 = getelementptr inbounds i8, i8* getelementptr inbounds ([2304 x i8], [2304 x i8]* @ff_crop_tab, i64 0, i64 1024), i64 %64
  %66 = load i8, i8* %65, align 1
  store i8 %66, i8* %32, align 1
  %67 = load i8, i8* %45, align 1
  %68 = zext i8 %67 to i32
  %69 = mul nuw nsw i32 %68, %15
  %70 = load i8, i8* %33, align 1
  %71 = zext i8 %70 to i32
  %72 = mul nuw nsw i32 %71, %18
  %73 = load i8, i8* %37, align 1
  %74 = zext i8 %73 to i32
  %75 = mul nuw nsw i32 %74, %20
  %76 = load i8, i8* %49, align 1
  %77 = zext i8 %76 to i32
  %78 = mul nuw nsw i32 %77, %23
  %79 = load i8, i8* %53, align 1
  %80 = zext i8 %79 to i32
  %81 = mul nuw nsw i32 %80, %26
  %82 = getelementptr inbounds i8, i8* %33, i64 4
  %83 = load i8, i8* %82, align 1
  %84 = zext i8 %83 to i32
  %85 = mul nuw nsw i32 %84, %29
  %86 = add nuw nsw i32 %81, %72
  %87 = add nuw nsw i32 %69, 64
  %88 = add nuw nsw i32 %87, %75
  %89 = add nuw nsw i32 %88, %78
  %90 = add nuw nsw i32 %89, %85
  %91 = sub nsw i32 %90, %86
  %92 = ashr i32 %91, 7
  %93 = sext i32 %92 to i64
  %94 = getelementptr inbounds i8, i8* getelementptr inbounds ([2304 x i8], [2304 x i8]* @ff_crop_tab, i64 0, i64 1024), i64 %93
  %95 = load i8, i8* %94, align 1
  %96 = getelementptr inbounds i8, i8* %32, i64 1
  store i8 %95, i8* %96, align 1
  %97 = load i8, i8* %49, align 1
  %98 = zext i8 %97 to i32
  %99 = mul nuw nsw i32 %98, %15
  %100 = load i8, i8* %45, align 1
  %101 = zext i8 %100 to i32
  %102 = mul nuw nsw i32 %101, %18
  %103 = load i8, i8* %33, align 1
  %104 = zext i8 %103 to i32
  %105 = mul nuw nsw i32 %104, %20
  %106 = load i8, i8* %53, align 1
  %107 = zext i8 %106 to i32
  %108 = mul nuw nsw i32 %107, %23
  %109 = load i8, i8* %82, align 1
  %110 = zext i8 %109 to i32
  %111 = mul nuw nsw i32 %110, %26
  %112 = getelementptr inbounds i8, i8* %33, i64 5
  %113 = load i8, i8* %112, align 1
  %114 = zext i8 %113 to i32
  %115 = mul nuw nsw i32 %114, %29
  %116 = add nuw nsw i32 %111, %102
  %117 = add nuw nsw i32 %99, 64
  %118 = add nuw nsw i32 %117, %105
  %119 = add nuw nsw i32 %118, %108
  %120 = add nuw nsw i32 %119, %115
  %121 = sub nsw i32 %120, %116
  %122 = ashr i32 %121, 7
  %123 = sext i32 %122 to i64
  %124 = getelementptr inbounds i8, i8* getelementptr inbounds ([2304 x i8], [2304 x i8]* @ff_crop_tab, i64 0, i64 1024), i64 %123
  %125 = load i8, i8* %124, align 1
  %126 = getelementptr inbounds i8, i8* %32, i64 2
  store i8 %125, i8* %126, align 1
  %127 = load i8, i8* %53, align 1
  %128 = zext i8 %127 to i32
  %129 = mul nuw nsw i32 %128, %15
  %130 = load i8, i8* %49, align 1
  %131 = zext i8 %130 to i32
  %132 = mul nuw nsw i32 %131, %18
  %133 = load i8, i8* %45, align 1
  %134 = zext i8 %133 to i32
  %135 = mul nuw nsw i32 %134, %20
  %136 = load i8, i8* %82, align 1
  %137 = zext i8 %136 to i32
  %138 = mul nuw nsw i32 %137, %23
  %139 = load i8, i8* %112, align 1
  %140 = zext i8 %139 to i32
  %141 = mul nuw nsw i32 %140, %26
  %142 = getelementptr inbounds i8, i8* %33, i64 6
  %143 = load i8, i8* %142, align 1
  %144 = zext i8 %143 to i32
  %145 = mul nuw nsw i32 %144, %29
  %146 = add nuw nsw i32 %141, %132
  %147 = add nuw nsw i32 %129, 64
  %148 = add nuw nsw i32 %147, %135
  %149 = add nuw nsw i32 %148, %138
  %150 = add nuw nsw i32 %149, %145
  %151 = sub nsw i32 %150, %146
  %152 = ashr i32 %151, 7
  %153 = sext i32 %152 to i64
  %154 = getelementptr inbounds i8, i8* getelementptr inbounds ([2304 x i8], [2304 x i8]* @ff_crop_tab, i64 0, i64 1024), i64 %153
  %155 = load i8, i8* %154, align 1
  %156 = getelementptr inbounds i8, i8* %32, i64 3
  store i8 %155, i8* %156, align 1
  %157 = getelementptr inbounds i8, i8* %32, i64 %1
  %158 = getelementptr inbounds i8, i8* %33, i64 %3
  %159 = add nuw nsw i32 %31, 1
  %160 = icmp eq i32 %159, %4
  br i1 %160, label %161, label %30

161:                                              ; preds = %30, %7
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define internal void @put_vp8_epel4_v4_c(i8* nocapture, i64, i8* nocapture readonly, i64, i32, i32, i32) #2 {
  %8 = add nsw i32 %6, -1
  %9 = sext i32 %8 to i64
  %10 = icmp sgt i32 %4, 0
  br i1 %10, label %11, label %140

11:                                               ; preds = %7
  %12 = getelementptr inbounds [7 x [6 x i8]], [7 x [6 x i8]]* @subpel_filters, i64 0, i64 %9, i64 2
  %13 = load i8, i8* %12, align 2
  %14 = zext i8 %13 to i32
  %15 = getelementptr inbounds [7 x [6 x i8]], [7 x [6 x i8]]* @subpel_filters, i64 0, i64 %9, i64 1
  %16 = load i8, i8* %15, align 1
  %17 = zext i8 %16 to i32
  %18 = getelementptr inbounds [7 x [6 x i8]], [7 x [6 x i8]]* @subpel_filters, i64 0, i64 %9, i64 3
  %19 = load i8, i8* %18, align 1
  %20 = zext i8 %19 to i32
  %21 = getelementptr inbounds [7 x [6 x i8]], [7 x [6 x i8]]* @subpel_filters, i64 0, i64 %9, i64 4
  %22 = load i8, i8* %21, align 2
  %23 = zext i8 %22 to i32
  %24 = shl i64 %3, 1
  %25 = sub nsw i64 0, %3
  %26 = sub nsw i64 1, %3
  %27 = add nsw i64 %3, 1
  %28 = or i64 %24, 1
  %29 = sub nsw i64 2, %3
  %30 = add nsw i64 %3, 2
  %31 = add nsw i64 %24, 2
  %32 = sub nsw i64 3, %3
  %33 = add nsw i64 %3, 3
  %34 = add nsw i64 %24, 3
  br label %35

35:                                               ; preds = %35, %11
  %36 = phi i32 [ 0, %11 ], [ %138, %35 ]
  %37 = phi i8* [ %0, %11 ], [ %137, %35 ]
  %38 = phi i8* [ %2, %11 ], [ %46, %35 ]
  %39 = load i8, i8* %38, align 1
  %40 = zext i8 %39 to i32
  %41 = mul nuw nsw i32 %40, %14
  %42 = getelementptr inbounds i8, i8* %38, i64 %25
  %43 = load i8, i8* %42, align 1
  %44 = zext i8 %43 to i32
  %45 = mul nuw nsw i32 %44, %17
  %46 = getelementptr inbounds i8, i8* %38, i64 %3
  %47 = load i8, i8* %46, align 1
  %48 = zext i8 %47 to i32
  %49 = mul nuw nsw i32 %48, %20
  %50 = getelementptr inbounds i8, i8* %38, i64 %24
  %51 = load i8, i8* %50, align 1
  %52 = zext i8 %51 to i32
  %53 = mul nuw nsw i32 %52, %23
  %54 = add nuw nsw i32 %53, %45
  %55 = add nuw nsw i32 %41, 64
  %56 = add nuw nsw i32 %55, %49
  %57 = sub nsw i32 %56, %54
  %58 = ashr i32 %57, 7
  %59 = sext i32 %58 to i64
  %60 = getelementptr inbounds i8, i8* getelementptr inbounds ([2304 x i8], [2304 x i8]* @ff_crop_tab, i64 0, i64 1024), i64 %59
  %61 = load i8, i8* %60, align 1
  store i8 %61, i8* %37, align 1
  %62 = getelementptr inbounds i8, i8* %38, i64 1
  %63 = load i8, i8* %62, align 1
  %64 = zext i8 %63 to i32
  %65 = mul nuw nsw i32 %64, %14
  %66 = getelementptr inbounds i8, i8* %38, i64 %26
  %67 = load i8, i8* %66, align 1
  %68 = zext i8 %67 to i32
  %69 = mul nuw nsw i32 %68, %17
  %70 = getelementptr inbounds i8, i8* %38, i64 %27
  %71 = load i8, i8* %70, align 1
  %72 = zext i8 %71 to i32
  %73 = mul nuw nsw i32 %72, %20
  %74 = getelementptr inbounds i8, i8* %38, i64 %28
  %75 = load i8, i8* %74, align 1
  %76 = zext i8 %75 to i32
  %77 = mul nuw nsw i32 %76, %23
  %78 = add nuw nsw i32 %77, %69
  %79 = add nuw nsw i32 %65, 64
  %80 = add nuw nsw i32 %79, %73
  %81 = sub nsw i32 %80, %78
  %82 = ashr i32 %81, 7
  %83 = sext i32 %82 to i64
  %84 = getelementptr inbounds i8, i8* getelementptr inbounds ([2304 x i8], [2304 x i8]* @ff_crop_tab, i64 0, i64 1024), i64 %83
  %85 = load i8, i8* %84, align 1
  %86 = getelementptr inbounds i8, i8* %37, i64 1
  store i8 %85, i8* %86, align 1
  %87 = getelementptr inbounds i8, i8* %38, i64 2
  %88 = load i8, i8* %87, align 1
  %89 = zext i8 %88 to i32
  %90 = mul nuw nsw i32 %89, %14
  %91 = getelementptr inbounds i8, i8* %38, i64 %29
  %92 = load i8, i8* %91, align 1
  %93 = zext i8 %92 to i32
  %94 = mul nuw nsw i32 %93, %17
  %95 = getelementptr inbounds i8, i8* %38, i64 %30
  %96 = load i8, i8* %95, align 1
  %97 = zext i8 %96 to i32
  %98 = mul nuw nsw i32 %97, %20
  %99 = getelementptr inbounds i8, i8* %38, i64 %31
  %100 = load i8, i8* %99, align 1
  %101 = zext i8 %100 to i32
  %102 = mul nuw nsw i32 %101, %23
  %103 = add nuw nsw i32 %102, %94
  %104 = add nuw nsw i32 %90, 64
  %105 = add nuw nsw i32 %104, %98
  %106 = sub nsw i32 %105, %103
  %107 = ashr i32 %106, 7
  %108 = sext i32 %107 to i64
  %109 = getelementptr inbounds i8, i8* getelementptr inbounds ([2304 x i8], [2304 x i8]* @ff_crop_tab, i64 0, i64 1024), i64 %108
  %110 = load i8, i8* %109, align 1
  %111 = getelementptr inbounds i8, i8* %37, i64 2
  store i8 %110, i8* %111, align 1
  %112 = getelementptr inbounds i8, i8* %38, i64 3
  %113 = load i8, i8* %112, align 1
  %114 = zext i8 %113 to i32
  %115 = mul nuw nsw i32 %114, %14
  %116 = getelementptr inbounds i8, i8* %38, i64 %32
  %117 = load i8, i8* %116, align 1
  %118 = zext i8 %117 to i32
  %119 = mul nuw nsw i32 %118, %17
  %120 = getelementptr inbounds i8, i8* %38, i64 %33
  %121 = load i8, i8* %120, align 1
  %122 = zext i8 %121 to i32
  %123 = mul nuw nsw i32 %122, %20
  %124 = getelementptr inbounds i8, i8* %38, i64 %34
  %125 = load i8, i8* %124, align 1
  %126 = zext i8 %125 to i32
  %127 = mul nuw nsw i32 %126, %23
  %128 = add nuw nsw i32 %127, %119
  %129 = add nuw nsw i32 %115, 64
  %130 = add nuw nsw i32 %129, %123
  %131 = sub nsw i32 %130, %128
  %132 = ashr i32 %131, 7
  %133 = sext i32 %132 to i64
  %134 = getelementptr inbounds i8, i8* getelementptr inbounds ([2304 x i8], [2304 x i8]* @ff_crop_tab, i64 0, i64 1024), i64 %133
  %135 = load i8, i8* %134, align 1
  %136 = getelementptr inbounds i8, i8* %37, i64 3
  store i8 %135, i8* %136, align 1
  %137 = getelementptr inbounds i8, i8* %37, i64 %1
  %138 = add nuw nsw i32 %36, 1
  %139 = icmp eq i32 %138, %4
  br i1 %139, label %140, label %35

140:                                              ; preds = %35, %7
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @put_vp8_epel4_h4v4_c(i8* nocapture, i64, i8* nocapture readonly, i64, i32, i32, i32) #1 {
  %8 = alloca [44 x i8], align 16
  %9 = add nsw i32 %5, -1
  %10 = sext i32 %9 to i64
  %11 = getelementptr inbounds [44 x i8], [44 x i8]* %8, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 44, i8* nonnull %11) #5
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %11, i8 -86, i64 44, i1 false)
  %12 = add i32 %4, 3
  %13 = icmp sgt i32 %12, 0
  br i1 %13, label %14, label %108

14:                                               ; preds = %7
  %15 = sub i64 0, %3
  %16 = getelementptr inbounds i8, i8* %2, i64 %15
  %17 = getelementptr inbounds [7 x [6 x i8]], [7 x [6 x i8]]* @subpel_filters, i64 0, i64 %10, i64 2
  %18 = load i8, i8* %17, align 2
  %19 = zext i8 %18 to i32
  %20 = getelementptr inbounds [7 x [6 x i8]], [7 x [6 x i8]]* @subpel_filters, i64 0, i64 %10, i64 1
  %21 = load i8, i8* %20, align 1
  %22 = zext i8 %21 to i32
  %23 = getelementptr inbounds [7 x [6 x i8]], [7 x [6 x i8]]* @subpel_filters, i64 0, i64 %10, i64 3
  %24 = load i8, i8* %23, align 1
  %25 = zext i8 %24 to i32
  %26 = getelementptr inbounds [7 x [6 x i8]], [7 x [6 x i8]]* @subpel_filters, i64 0, i64 %10, i64 4
  %27 = load i8, i8* %26, align 2
  %28 = zext i8 %27 to i32
  br label %29

29:                                               ; preds = %29, %14
  %30 = phi i8* [ %11, %14 ], [ %104, %29 ]
  %31 = phi i32 [ 0, %14 ], [ %106, %29 ]
  %32 = phi i8* [ %16, %14 ], [ %105, %29 ]
  %33 = load i8, i8* %32, align 1
  %34 = zext i8 %33 to i32
  %35 = mul nuw nsw i32 %34, %19
  %36 = getelementptr inbounds i8, i8* %32, i64 -1
  %37 = load i8, i8* %36, align 1
  %38 = zext i8 %37 to i32
  %39 = mul nuw nsw i32 %38, %22
  %40 = getelementptr inbounds i8, i8* %32, i64 1
  %41 = load i8, i8* %40, align 1
  %42 = zext i8 %41 to i32
  %43 = mul nuw nsw i32 %42, %25
  %44 = getelementptr inbounds i8, i8* %32, i64 2
  %45 = load i8, i8* %44, align 1
  %46 = zext i8 %45 to i32
  %47 = mul nuw nsw i32 %46, %28
  %48 = add nuw nsw i32 %47, %39
  %49 = add nuw nsw i32 %35, 64
  %50 = add nuw nsw i32 %49, %43
  %51 = sub nsw i32 %50, %48
  %52 = ashr i32 %51, 7
  %53 = sext i32 %52 to i64
  %54 = getelementptr inbounds i8, i8* getelementptr inbounds ([2304 x i8], [2304 x i8]* @ff_crop_tab, i64 0, i64 1024), i64 %53
  %55 = load i8, i8* %54, align 1
  store i8 %55, i8* %30, align 1
  %56 = mul nuw nsw i32 %42, %19
  %57 = mul nuw nsw i32 %34, %22
  %58 = mul nuw nsw i32 %46, %25
  %59 = getelementptr inbounds i8, i8* %32, i64 3
  %60 = load i8, i8* %59, align 1
  %61 = zext i8 %60 to i32
  %62 = mul nuw nsw i32 %61, %28
  %63 = add nuw nsw i32 %62, %57
  %64 = add nuw nsw i32 %56, 64
  %65 = add nuw nsw i32 %64, %58
  %66 = sub nsw i32 %65, %63
  %67 = ashr i32 %66, 7
  %68 = sext i32 %67 to i64
  %69 = getelementptr inbounds i8, i8* getelementptr inbounds ([2304 x i8], [2304 x i8]* @ff_crop_tab, i64 0, i64 1024), i64 %68
  %70 = load i8, i8* %69, align 1
  %71 = getelementptr inbounds i8, i8* %30, i64 1
  store i8 %70, i8* %71, align 1
  %72 = mul nuw nsw i32 %46, %19
  %73 = mul nuw nsw i32 %42, %22
  %74 = mul nuw nsw i32 %61, %25
  %75 = getelementptr inbounds i8, i8* %32, i64 4
  %76 = load i8, i8* %75, align 1
  %77 = zext i8 %76 to i32
  %78 = mul nuw nsw i32 %77, %28
  %79 = add nuw nsw i32 %78, %73
  %80 = add nuw nsw i32 %72, 64
  %81 = add nuw nsw i32 %80, %74
  %82 = sub nsw i32 %81, %79
  %83 = ashr i32 %82, 7
  %84 = sext i32 %83 to i64
  %85 = getelementptr inbounds i8, i8* getelementptr inbounds ([2304 x i8], [2304 x i8]* @ff_crop_tab, i64 0, i64 1024), i64 %84
  %86 = load i8, i8* %85, align 1
  %87 = getelementptr inbounds i8, i8* %30, i64 2
  store i8 %86, i8* %87, align 1
  %88 = mul nuw nsw i32 %61, %19
  %89 = mul nuw nsw i32 %46, %22
  %90 = mul nuw nsw i32 %77, %25
  %91 = getelementptr inbounds i8, i8* %32, i64 5
  %92 = load i8, i8* %91, align 1
  %93 = zext i8 %92 to i32
  %94 = mul nuw nsw i32 %93, %28
  %95 = add nuw nsw i32 %94, %89
  %96 = add nuw nsw i32 %88, 64
  %97 = add nuw nsw i32 %96, %90
  %98 = sub nsw i32 %97, %95
  %99 = ashr i32 %98, 7
  %100 = sext i32 %99 to i64
  %101 = getelementptr inbounds i8, i8* getelementptr inbounds ([2304 x i8], [2304 x i8]* @ff_crop_tab, i64 0, i64 1024), i64 %100
  %102 = load i8, i8* %101, align 1
  %103 = getelementptr inbounds i8, i8* %30, i64 3
  store i8 %102, i8* %103, align 1
  %104 = getelementptr inbounds i8, i8* %30, i64 4
  %105 = getelementptr inbounds i8, i8* %32, i64 %3
  %106 = add nuw nsw i32 %31, 1
  %107 = icmp eq i32 %106, %12
  br i1 %107, label %108, label %29

108:                                              ; preds = %29, %7
  %109 = add nsw i32 %6, -1
  %110 = sext i32 %109 to i64
  %111 = icmp sgt i32 %4, 0
  br i1 %111, label %112, label %232

112:                                              ; preds = %108
  %113 = getelementptr inbounds [44 x i8], [44 x i8]* %8, i64 0, i64 4
  %114 = getelementptr inbounds [7 x [6 x i8]], [7 x [6 x i8]]* @subpel_filters, i64 0, i64 %110, i64 2
  %115 = load i8, i8* %114, align 2
  %116 = zext i8 %115 to i32
  %117 = getelementptr inbounds [7 x [6 x i8]], [7 x [6 x i8]]* @subpel_filters, i64 0, i64 %110, i64 1
  %118 = load i8, i8* %117, align 1
  %119 = zext i8 %118 to i32
  %120 = getelementptr inbounds [7 x [6 x i8]], [7 x [6 x i8]]* @subpel_filters, i64 0, i64 %110, i64 3
  %121 = load i8, i8* %120, align 1
  %122 = zext i8 %121 to i32
  %123 = getelementptr inbounds [7 x [6 x i8]], [7 x [6 x i8]]* @subpel_filters, i64 0, i64 %110, i64 4
  %124 = load i8, i8* %123, align 2
  %125 = zext i8 %124 to i32
  %126 = load i8, i8* %113, align 4
  br label %127

127:                                              ; preds = %127, %112
  %128 = phi i8 [ %126, %112 ], [ %139, %127 ]
  %129 = phi i8* [ %113, %112 ], [ %138, %127 ]
  %130 = phi i32 [ 0, %112 ], [ %230, %127 ]
  %131 = phi i8* [ %0, %112 ], [ %229, %127 ]
  %132 = zext i8 %128 to i32
  %133 = mul nuw nsw i32 %132, %116
  %134 = getelementptr inbounds i8, i8* %129, i64 -4
  %135 = load i8, i8* %134, align 1
  %136 = zext i8 %135 to i32
  %137 = mul nuw nsw i32 %136, %119
  %138 = getelementptr inbounds i8, i8* %129, i64 4
  %139 = load i8, i8* %138, align 1
  %140 = zext i8 %139 to i32
  %141 = mul nuw nsw i32 %140, %122
  %142 = getelementptr inbounds i8, i8* %129, i64 8
  %143 = load i8, i8* %142, align 1
  %144 = zext i8 %143 to i32
  %145 = mul nuw nsw i32 %144, %125
  %146 = add nuw nsw i32 %145, %137
  %147 = add nuw nsw i32 %133, 64
  %148 = add nuw nsw i32 %147, %141
  %149 = sub nsw i32 %148, %146
  %150 = ashr i32 %149, 7
  %151 = sext i32 %150 to i64
  %152 = getelementptr inbounds i8, i8* getelementptr inbounds ([2304 x i8], [2304 x i8]* @ff_crop_tab, i64 0, i64 1024), i64 %151
  %153 = load i8, i8* %152, align 1
  store i8 %153, i8* %131, align 1
  %154 = getelementptr inbounds i8, i8* %129, i64 1
  %155 = load i8, i8* %154, align 1
  %156 = zext i8 %155 to i32
  %157 = mul nuw nsw i32 %156, %116
  %158 = getelementptr inbounds i8, i8* %129, i64 -3
  %159 = load i8, i8* %158, align 1
  %160 = zext i8 %159 to i32
  %161 = mul nuw nsw i32 %160, %119
  %162 = getelementptr inbounds i8, i8* %129, i64 5
  %163 = load i8, i8* %162, align 1
  %164 = zext i8 %163 to i32
  %165 = mul nuw nsw i32 %164, %122
  %166 = getelementptr inbounds i8, i8* %129, i64 9
  %167 = load i8, i8* %166, align 1
  %168 = zext i8 %167 to i32
  %169 = mul nuw nsw i32 %168, %125
  %170 = add nuw nsw i32 %169, %161
  %171 = add nuw nsw i32 %157, 64
  %172 = add nuw nsw i32 %171, %165
  %173 = sub nsw i32 %172, %170
  %174 = ashr i32 %173, 7
  %175 = sext i32 %174 to i64
  %176 = getelementptr inbounds i8, i8* getelementptr inbounds ([2304 x i8], [2304 x i8]* @ff_crop_tab, i64 0, i64 1024), i64 %175
  %177 = load i8, i8* %176, align 1
  %178 = getelementptr inbounds i8, i8* %131, i64 1
  store i8 %177, i8* %178, align 1
  %179 = getelementptr inbounds i8, i8* %129, i64 2
  %180 = load i8, i8* %179, align 1
  %181 = zext i8 %180 to i32
  %182 = mul nuw nsw i32 %181, %116
  %183 = getelementptr inbounds i8, i8* %129, i64 -2
  %184 = load i8, i8* %183, align 1
  %185 = zext i8 %184 to i32
  %186 = mul nuw nsw i32 %185, %119
  %187 = getelementptr inbounds i8, i8* %129, i64 6
  %188 = load i8, i8* %187, align 1
  %189 = zext i8 %188 to i32
  %190 = mul nuw nsw i32 %189, %122
  %191 = getelementptr inbounds i8, i8* %129, i64 10
  %192 = load i8, i8* %191, align 1
  %193 = zext i8 %192 to i32
  %194 = mul nuw nsw i32 %193, %125
  %195 = add nuw nsw i32 %194, %186
  %196 = add nuw nsw i32 %182, 64
  %197 = add nuw nsw i32 %196, %190
  %198 = sub nsw i32 %197, %195
  %199 = ashr i32 %198, 7
  %200 = sext i32 %199 to i64
  %201 = getelementptr inbounds i8, i8* getelementptr inbounds ([2304 x i8], [2304 x i8]* @ff_crop_tab, i64 0, i64 1024), i64 %200
  %202 = load i8, i8* %201, align 1
  %203 = getelementptr inbounds i8, i8* %131, i64 2
  store i8 %202, i8* %203, align 1
  %204 = getelementptr inbounds i8, i8* %129, i64 3
  %205 = load i8, i8* %204, align 1
  %206 = zext i8 %205 to i32
  %207 = mul nuw nsw i32 %206, %116
  %208 = getelementptr inbounds i8, i8* %129, i64 -1
  %209 = load i8, i8* %208, align 1
  %210 = zext i8 %209 to i32
  %211 = mul nuw nsw i32 %210, %119
  %212 = getelementptr inbounds i8, i8* %129, i64 7
  %213 = load i8, i8* %212, align 1
  %214 = zext i8 %213 to i32
  %215 = mul nuw nsw i32 %214, %122
  %216 = getelementptr inbounds i8, i8* %129, i64 11
  %217 = load i8, i8* %216, align 1
  %218 = zext i8 %217 to i32
  %219 = mul nuw nsw i32 %218, %125
  %220 = add nuw nsw i32 %219, %211
  %221 = add nuw nsw i32 %207, 64
  %222 = add nuw nsw i32 %221, %215
  %223 = sub nsw i32 %222, %220
  %224 = ashr i32 %223, 7
  %225 = sext i32 %224 to i64
  %226 = getelementptr inbounds i8, i8* getelementptr inbounds ([2304 x i8], [2304 x i8]* @ff_crop_tab, i64 0, i64 1024), i64 %225
  %227 = load i8, i8* %226, align 1
  %228 = getelementptr inbounds i8, i8* %131, i64 3
  store i8 %227, i8* %228, align 1
  %229 = getelementptr inbounds i8, i8* %131, i64 %1
  %230 = add nuw nsw i32 %130, 1
  %231 = icmp eq i32 %230, %4
  br i1 %231, label %232, label %127

232:                                              ; preds = %127, %108
  call void @llvm.lifetime.end.p0i8(i64 44, i8* nonnull %11) #5
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @put_vp8_epel4_h6v4_c(i8* nocapture, i64, i8* nocapture readonly, i64, i32, i32, i32) #1 {
  %8 = alloca [44 x i8], align 16
  %9 = add nsw i32 %5, -1
  %10 = sext i32 %9 to i64
  %11 = getelementptr inbounds [44 x i8], [44 x i8]* %8, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 44, i8* nonnull %11) #5
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %11, i8 -86, i64 44, i1 false)
  %12 = add i32 %4, 3
  %13 = icmp sgt i32 %12, 0
  br i1 %13, label %14, label %136

14:                                               ; preds = %7
  %15 = sub i64 0, %3
  %16 = getelementptr inbounds i8, i8* %2, i64 %15
  %17 = getelementptr inbounds [7 x [6 x i8]], [7 x [6 x i8]]* @subpel_filters, i64 0, i64 %10, i64 0
  %18 = getelementptr inbounds [7 x [6 x i8]], [7 x [6 x i8]]* @subpel_filters, i64 0, i64 %10, i64 2
  %19 = load i8, i8* %18, align 2
  %20 = zext i8 %19 to i32
  %21 = getelementptr inbounds [7 x [6 x i8]], [7 x [6 x i8]]* @subpel_filters, i64 0, i64 %10, i64 1
  %22 = load i8, i8* %21, align 1
  %23 = zext i8 %22 to i32
  %24 = load i8, i8* %17, align 2
  %25 = zext i8 %24 to i32
  %26 = getelementptr inbounds [7 x [6 x i8]], [7 x [6 x i8]]* @subpel_filters, i64 0, i64 %10, i64 3
  %27 = load i8, i8* %26, align 1
  %28 = zext i8 %27 to i32
  %29 = getelementptr inbounds [7 x [6 x i8]], [7 x [6 x i8]]* @subpel_filters, i64 0, i64 %10, i64 4
  %30 = load i8, i8* %29, align 2
  %31 = zext i8 %30 to i32
  %32 = getelementptr inbounds [7 x [6 x i8]], [7 x [6 x i8]]* @subpel_filters, i64 0, i64 %10, i64 5
  %33 = load i8, i8* %32, align 1
  %34 = zext i8 %33 to i32
  br label %35

35:                                               ; preds = %35, %14
  %36 = phi i8* [ %11, %14 ], [ %132, %35 ]
  %37 = phi i32 [ 0, %14 ], [ %134, %35 ]
  %38 = phi i8* [ %16, %14 ], [ %133, %35 ]
  %39 = load i8, i8* %38, align 1
  %40 = zext i8 %39 to i32
  %41 = mul nuw nsw i32 %40, %20
  %42 = getelementptr inbounds i8, i8* %38, i64 -1
  %43 = load i8, i8* %42, align 1
  %44 = zext i8 %43 to i32
  %45 = mul nuw nsw i32 %44, %23
  %46 = getelementptr inbounds i8, i8* %38, i64 -2
  %47 = load i8, i8* %46, align 1
  %48 = zext i8 %47 to i32
  %49 = mul nuw nsw i32 %48, %25
  %50 = getelementptr inbounds i8, i8* %38, i64 1
  %51 = load i8, i8* %50, align 1
  %52 = zext i8 %51 to i32
  %53 = mul nuw nsw i32 %52, %28
  %54 = getelementptr inbounds i8, i8* %38, i64 2
  %55 = load i8, i8* %54, align 1
  %56 = zext i8 %55 to i32
  %57 = mul nuw nsw i32 %56, %31
  %58 = getelementptr inbounds i8, i8* %38, i64 3
  %59 = load i8, i8* %58, align 1
  %60 = zext i8 %59 to i32
  %61 = mul nuw nsw i32 %60, %34
  %62 = add nuw nsw i32 %57, %45
  %63 = add nuw nsw i32 %41, 64
  %64 = add nuw nsw i32 %63, %49
  %65 = add nuw nsw i32 %64, %53
  %66 = add nuw nsw i32 %65, %61
  %67 = sub nsw i32 %66, %62
  %68 = ashr i32 %67, 7
  %69 = sext i32 %68 to i64
  %70 = getelementptr inbounds i8, i8* getelementptr inbounds ([2304 x i8], [2304 x i8]* @ff_crop_tab, i64 0, i64 1024), i64 %69
  %71 = load i8, i8* %70, align 1
  store i8 %71, i8* %36, align 1
  %72 = mul nuw nsw i32 %52, %20
  %73 = mul nuw nsw i32 %40, %23
  %74 = mul nuw nsw i32 %44, %25
  %75 = mul nuw nsw i32 %56, %28
  %76 = mul nuw nsw i32 %60, %31
  %77 = getelementptr inbounds i8, i8* %38, i64 4
  %78 = load i8, i8* %77, align 1
  %79 = zext i8 %78 to i32
  %80 = mul nuw nsw i32 %79, %34
  %81 = add nuw nsw i32 %76, %73
  %82 = add nuw nsw i32 %72, 64
  %83 = add nuw nsw i32 %82, %74
  %84 = add nuw nsw i32 %83, %75
  %85 = add nuw nsw i32 %84, %80
  %86 = sub nsw i32 %85, %81
  %87 = ashr i32 %86, 7
  %88 = sext i32 %87 to i64
  %89 = getelementptr inbounds i8, i8* getelementptr inbounds ([2304 x i8], [2304 x i8]* @ff_crop_tab, i64 0, i64 1024), i64 %88
  %90 = load i8, i8* %89, align 1
  %91 = getelementptr inbounds i8, i8* %36, i64 1
  store i8 %90, i8* %91, align 1
  %92 = mul nuw nsw i32 %56, %20
  %93 = mul nuw nsw i32 %52, %23
  %94 = mul nuw nsw i32 %40, %25
  %95 = mul nuw nsw i32 %60, %28
  %96 = mul nuw nsw i32 %79, %31
  %97 = getelementptr inbounds i8, i8* %38, i64 5
  %98 = load i8, i8* %97, align 1
  %99 = zext i8 %98 to i32
  %100 = mul nuw nsw i32 %99, %34
  %101 = add nuw nsw i32 %96, %93
  %102 = add nuw nsw i32 %92, 64
  %103 = add nuw nsw i32 %102, %94
  %104 = add nuw nsw i32 %103, %95
  %105 = add nuw nsw i32 %104, %100
  %106 = sub nsw i32 %105, %101
  %107 = ashr i32 %106, 7
  %108 = sext i32 %107 to i64
  %109 = getelementptr inbounds i8, i8* getelementptr inbounds ([2304 x i8], [2304 x i8]* @ff_crop_tab, i64 0, i64 1024), i64 %108
  %110 = load i8, i8* %109, align 1
  %111 = getelementptr inbounds i8, i8* %36, i64 2
  store i8 %110, i8* %111, align 1
  %112 = mul nuw nsw i32 %60, %20
  %113 = mul nuw nsw i32 %56, %23
  %114 = mul nuw nsw i32 %52, %25
  %115 = mul nuw nsw i32 %79, %28
  %116 = mul nuw nsw i32 %99, %31
  %117 = getelementptr inbounds i8, i8* %38, i64 6
  %118 = load i8, i8* %117, align 1
  %119 = zext i8 %118 to i32
  %120 = mul nuw nsw i32 %119, %34
  %121 = add nuw nsw i32 %116, %113
  %122 = add nuw nsw i32 %112, 64
  %123 = add nuw nsw i32 %122, %114
  %124 = add nuw nsw i32 %123, %115
  %125 = add nuw nsw i32 %124, %120
  %126 = sub nsw i32 %125, %121
  %127 = ashr i32 %126, 7
  %128 = sext i32 %127 to i64
  %129 = getelementptr inbounds i8, i8* getelementptr inbounds ([2304 x i8], [2304 x i8]* @ff_crop_tab, i64 0, i64 1024), i64 %128
  %130 = load i8, i8* %129, align 1
  %131 = getelementptr inbounds i8, i8* %36, i64 3
  store i8 %130, i8* %131, align 1
  %132 = getelementptr inbounds i8, i8* %36, i64 4
  %133 = getelementptr inbounds i8, i8* %38, i64 %3
  %134 = add nuw nsw i32 %37, 1
  %135 = icmp eq i32 %134, %12
  br i1 %135, label %136, label %35

136:                                              ; preds = %35, %7
  %137 = add nsw i32 %6, -1
  %138 = sext i32 %137 to i64
  %139 = icmp sgt i32 %4, 0
  br i1 %139, label %140, label %260

140:                                              ; preds = %136
  %141 = getelementptr inbounds [44 x i8], [44 x i8]* %8, i64 0, i64 4
  %142 = getelementptr inbounds [7 x [6 x i8]], [7 x [6 x i8]]* @subpel_filters, i64 0, i64 %138, i64 2
  %143 = load i8, i8* %142, align 2
  %144 = zext i8 %143 to i32
  %145 = getelementptr inbounds [7 x [6 x i8]], [7 x [6 x i8]]* @subpel_filters, i64 0, i64 %138, i64 1
  %146 = load i8, i8* %145, align 1
  %147 = zext i8 %146 to i32
  %148 = getelementptr inbounds [7 x [6 x i8]], [7 x [6 x i8]]* @subpel_filters, i64 0, i64 %138, i64 3
  %149 = load i8, i8* %148, align 1
  %150 = zext i8 %149 to i32
  %151 = getelementptr inbounds [7 x [6 x i8]], [7 x [6 x i8]]* @subpel_filters, i64 0, i64 %138, i64 4
  %152 = load i8, i8* %151, align 2
  %153 = zext i8 %152 to i32
  %154 = load i8, i8* %141, align 4
  br label %155

155:                                              ; preds = %155, %140
  %156 = phi i8 [ %154, %140 ], [ %167, %155 ]
  %157 = phi i8* [ %141, %140 ], [ %166, %155 ]
  %158 = phi i32 [ 0, %140 ], [ %258, %155 ]
  %159 = phi i8* [ %0, %140 ], [ %257, %155 ]
  %160 = zext i8 %156 to i32
  %161 = mul nuw nsw i32 %160, %144
  %162 = getelementptr inbounds i8, i8* %157, i64 -4
  %163 = load i8, i8* %162, align 1
  %164 = zext i8 %163 to i32
  %165 = mul nuw nsw i32 %164, %147
  %166 = getelementptr inbounds i8, i8* %157, i64 4
  %167 = load i8, i8* %166, align 1
  %168 = zext i8 %167 to i32
  %169 = mul nuw nsw i32 %168, %150
  %170 = getelementptr inbounds i8, i8* %157, i64 8
  %171 = load i8, i8* %170, align 1
  %172 = zext i8 %171 to i32
  %173 = mul nuw nsw i32 %172, %153
  %174 = add nuw nsw i32 %173, %165
  %175 = add nuw nsw i32 %161, 64
  %176 = add nuw nsw i32 %175, %169
  %177 = sub nsw i32 %176, %174
  %178 = ashr i32 %177, 7
  %179 = sext i32 %178 to i64
  %180 = getelementptr inbounds i8, i8* getelementptr inbounds ([2304 x i8], [2304 x i8]* @ff_crop_tab, i64 0, i64 1024), i64 %179
  %181 = load i8, i8* %180, align 1
  store i8 %181, i8* %159, align 1
  %182 = getelementptr inbounds i8, i8* %157, i64 1
  %183 = load i8, i8* %182, align 1
  %184 = zext i8 %183 to i32
  %185 = mul nuw nsw i32 %184, %144
  %186 = getelementptr inbounds i8, i8* %157, i64 -3
  %187 = load i8, i8* %186, align 1
  %188 = zext i8 %187 to i32
  %189 = mul nuw nsw i32 %188, %147
  %190 = getelementptr inbounds i8, i8* %157, i64 5
  %191 = load i8, i8* %190, align 1
  %192 = zext i8 %191 to i32
  %193 = mul nuw nsw i32 %192, %150
  %194 = getelementptr inbounds i8, i8* %157, i64 9
  %195 = load i8, i8* %194, align 1
  %196 = zext i8 %195 to i32
  %197 = mul nuw nsw i32 %196, %153
  %198 = add nuw nsw i32 %197, %189
  %199 = add nuw nsw i32 %185, 64
  %200 = add nuw nsw i32 %199, %193
  %201 = sub nsw i32 %200, %198
  %202 = ashr i32 %201, 7
  %203 = sext i32 %202 to i64
  %204 = getelementptr inbounds i8, i8* getelementptr inbounds ([2304 x i8], [2304 x i8]* @ff_crop_tab, i64 0, i64 1024), i64 %203
  %205 = load i8, i8* %204, align 1
  %206 = getelementptr inbounds i8, i8* %159, i64 1
  store i8 %205, i8* %206, align 1
  %207 = getelementptr inbounds i8, i8* %157, i64 2
  %208 = load i8, i8* %207, align 1
  %209 = zext i8 %208 to i32
  %210 = mul nuw nsw i32 %209, %144
  %211 = getelementptr inbounds i8, i8* %157, i64 -2
  %212 = load i8, i8* %211, align 1
  %213 = zext i8 %212 to i32
  %214 = mul nuw nsw i32 %213, %147
  %215 = getelementptr inbounds i8, i8* %157, i64 6
  %216 = load i8, i8* %215, align 1
  %217 = zext i8 %216 to i32
  %218 = mul nuw nsw i32 %217, %150
  %219 = getelementptr inbounds i8, i8* %157, i64 10
  %220 = load i8, i8* %219, align 1
  %221 = zext i8 %220 to i32
  %222 = mul nuw nsw i32 %221, %153
  %223 = add nuw nsw i32 %222, %214
  %224 = add nuw nsw i32 %210, 64
  %225 = add nuw nsw i32 %224, %218
  %226 = sub nsw i32 %225, %223
  %227 = ashr i32 %226, 7
  %228 = sext i32 %227 to i64
  %229 = getelementptr inbounds i8, i8* getelementptr inbounds ([2304 x i8], [2304 x i8]* @ff_crop_tab, i64 0, i64 1024), i64 %228
  %230 = load i8, i8* %229, align 1
  %231 = getelementptr inbounds i8, i8* %159, i64 2
  store i8 %230, i8* %231, align 1
  %232 = getelementptr inbounds i8, i8* %157, i64 3
  %233 = load i8, i8* %232, align 1
  %234 = zext i8 %233 to i32
  %235 = mul nuw nsw i32 %234, %144
  %236 = getelementptr inbounds i8, i8* %157, i64 -1
  %237 = load i8, i8* %236, align 1
  %238 = zext i8 %237 to i32
  %239 = mul nuw nsw i32 %238, %147
  %240 = getelementptr inbounds i8, i8* %157, i64 7
  %241 = load i8, i8* %240, align 1
  %242 = zext i8 %241 to i32
  %243 = mul nuw nsw i32 %242, %150
  %244 = getelementptr inbounds i8, i8* %157, i64 11
  %245 = load i8, i8* %244, align 1
  %246 = zext i8 %245 to i32
  %247 = mul nuw nsw i32 %246, %153
  %248 = add nuw nsw i32 %247, %239
  %249 = add nuw nsw i32 %235, 64
  %250 = add nuw nsw i32 %249, %243
  %251 = sub nsw i32 %250, %248
  %252 = ashr i32 %251, 7
  %253 = sext i32 %252 to i64
  %254 = getelementptr inbounds i8, i8* getelementptr inbounds ([2304 x i8], [2304 x i8]* @ff_crop_tab, i64 0, i64 1024), i64 %253
  %255 = load i8, i8* %254, align 1
  %256 = getelementptr inbounds i8, i8* %159, i64 3
  store i8 %255, i8* %256, align 1
  %257 = getelementptr inbounds i8, i8* %159, i64 %1
  %258 = add nuw nsw i32 %158, 1
  %259 = icmp eq i32 %258, %4
  br i1 %259, label %260, label %155

260:                                              ; preds = %155, %136
  call void @llvm.lifetime.end.p0i8(i64 44, i8* nonnull %11) #5
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define internal void @put_vp8_epel4_v6_c(i8* nocapture, i64, i8* nocapture readonly, i64, i32, i32, i32) #2 {
  %8 = add nsw i32 %6, -1
  %9 = sext i32 %8 to i64
  %10 = icmp sgt i32 %4, 0
  br i1 %10, label %11, label %194

11:                                               ; preds = %7
  %12 = getelementptr inbounds [7 x [6 x i8]], [7 x [6 x i8]]* @subpel_filters, i64 0, i64 %9, i64 0
  %13 = getelementptr inbounds [7 x [6 x i8]], [7 x [6 x i8]]* @subpel_filters, i64 0, i64 %9, i64 2
  %14 = load i8, i8* %13, align 2
  %15 = zext i8 %14 to i32
  %16 = getelementptr inbounds [7 x [6 x i8]], [7 x [6 x i8]]* @subpel_filters, i64 0, i64 %9, i64 1
  %17 = load i8, i8* %16, align 1
  %18 = zext i8 %17 to i32
  %19 = load i8, i8* %12, align 2
  %20 = zext i8 %19 to i32
  %21 = shl nsw i64 %3, 1
  %22 = getelementptr inbounds [7 x [6 x i8]], [7 x [6 x i8]]* @subpel_filters, i64 0, i64 %9, i64 3
  %23 = load i8, i8* %22, align 1
  %24 = zext i8 %23 to i32
  %25 = getelementptr inbounds [7 x [6 x i8]], [7 x [6 x i8]]* @subpel_filters, i64 0, i64 %9, i64 4
  %26 = load i8, i8* %25, align 2
  %27 = zext i8 %26 to i32
  %28 = getelementptr inbounds [7 x [6 x i8]], [7 x [6 x i8]]* @subpel_filters, i64 0, i64 %9, i64 5
  %29 = load i8, i8* %28, align 1
  %30 = zext i8 %29 to i32
  %31 = mul nsw i64 %3, 3
  %32 = sub nsw i64 0, %3
  %33 = sub nsw i64 0, %21
  %34 = sub nsw i64 1, %3
  %35 = sub nsw i64 1, %21
  %36 = add nsw i64 %3, 1
  %37 = or i64 %21, 1
  %38 = add nsw i64 %31, 1
  %39 = sub nsw i64 2, %3
  %40 = sub nsw i64 2, %21
  %41 = add nsw i64 %3, 2
  %42 = add nsw i64 %21, 2
  %43 = add nsw i64 %31, 2
  %44 = sub nsw i64 3, %3
  %45 = sub nsw i64 3, %21
  %46 = add nsw i64 %3, 3
  %47 = add nsw i64 %21, 3
  %48 = add nsw i64 %31, 3
  br label %49

49:                                               ; preds = %49, %11
  %50 = phi i32 [ 0, %11 ], [ %192, %49 ]
  %51 = phi i8* [ %0, %11 ], [ %191, %49 ]
  %52 = phi i8* [ %2, %11 ], [ %64, %49 ]
  %53 = load i8, i8* %52, align 1
  %54 = zext i8 %53 to i32
  %55 = mul nuw nsw i32 %54, %15
  %56 = getelementptr inbounds i8, i8* %52, i64 %32
  %57 = load i8, i8* %56, align 1
  %58 = zext i8 %57 to i32
  %59 = mul nuw nsw i32 %58, %18
  %60 = getelementptr inbounds i8, i8* %52, i64 %33
  %61 = load i8, i8* %60, align 1
  %62 = zext i8 %61 to i32
  %63 = mul nuw nsw i32 %62, %20
  %64 = getelementptr inbounds i8, i8* %52, i64 %3
  %65 = load i8, i8* %64, align 1
  %66 = zext i8 %65 to i32
  %67 = mul nuw nsw i32 %66, %24
  %68 = getelementptr inbounds i8, i8* %52, i64 %21
  %69 = load i8, i8* %68, align 1
  %70 = zext i8 %69 to i32
  %71 = mul nuw nsw i32 %70, %27
  %72 = getelementptr inbounds i8, i8* %52, i64 %31
  %73 = load i8, i8* %72, align 1
  %74 = zext i8 %73 to i32
  %75 = mul nuw nsw i32 %74, %30
  %76 = add nuw nsw i32 %71, %59
  %77 = add nuw nsw i32 %55, 64
  %78 = add nuw nsw i32 %77, %63
  %79 = add nuw nsw i32 %78, %67
  %80 = add nuw nsw i32 %79, %75
  %81 = sub nsw i32 %80, %76
  %82 = ashr i32 %81, 7
  %83 = sext i32 %82 to i64
  %84 = getelementptr inbounds i8, i8* getelementptr inbounds ([2304 x i8], [2304 x i8]* @ff_crop_tab, i64 0, i64 1024), i64 %83
  %85 = load i8, i8* %84, align 1
  store i8 %85, i8* %51, align 1
  %86 = getelementptr inbounds i8, i8* %52, i64 1
  %87 = load i8, i8* %86, align 1
  %88 = zext i8 %87 to i32
  %89 = mul nuw nsw i32 %88, %15
  %90 = getelementptr inbounds i8, i8* %52, i64 %34
  %91 = load i8, i8* %90, align 1
  %92 = zext i8 %91 to i32
  %93 = mul nuw nsw i32 %92, %18
  %94 = getelementptr inbounds i8, i8* %52, i64 %35
  %95 = load i8, i8* %94, align 1
  %96 = zext i8 %95 to i32
  %97 = mul nuw nsw i32 %96, %20
  %98 = getelementptr inbounds i8, i8* %52, i64 %36
  %99 = load i8, i8* %98, align 1
  %100 = zext i8 %99 to i32
  %101 = mul nuw nsw i32 %100, %24
  %102 = getelementptr inbounds i8, i8* %52, i64 %37
  %103 = load i8, i8* %102, align 1
  %104 = zext i8 %103 to i32
  %105 = mul nuw nsw i32 %104, %27
  %106 = getelementptr inbounds i8, i8* %52, i64 %38
  %107 = load i8, i8* %106, align 1
  %108 = zext i8 %107 to i32
  %109 = mul nuw nsw i32 %108, %30
  %110 = add nuw nsw i32 %105, %93
  %111 = add nuw nsw i32 %89, 64
  %112 = add nuw nsw i32 %111, %97
  %113 = add nuw nsw i32 %112, %101
  %114 = add nuw nsw i32 %113, %109
  %115 = sub nsw i32 %114, %110
  %116 = ashr i32 %115, 7
  %117 = sext i32 %116 to i64
  %118 = getelementptr inbounds i8, i8* getelementptr inbounds ([2304 x i8], [2304 x i8]* @ff_crop_tab, i64 0, i64 1024), i64 %117
  %119 = load i8, i8* %118, align 1
  %120 = getelementptr inbounds i8, i8* %51, i64 1
  store i8 %119, i8* %120, align 1
  %121 = getelementptr inbounds i8, i8* %52, i64 2
  %122 = load i8, i8* %121, align 1
  %123 = zext i8 %122 to i32
  %124 = mul nuw nsw i32 %123, %15
  %125 = getelementptr inbounds i8, i8* %52, i64 %39
  %126 = load i8, i8* %125, align 1
  %127 = zext i8 %126 to i32
  %128 = mul nuw nsw i32 %127, %18
  %129 = getelementptr inbounds i8, i8* %52, i64 %40
  %130 = load i8, i8* %129, align 1
  %131 = zext i8 %130 to i32
  %132 = mul nuw nsw i32 %131, %20
  %133 = getelementptr inbounds i8, i8* %52, i64 %41
  %134 = load i8, i8* %133, align 1
  %135 = zext i8 %134 to i32
  %136 = mul nuw nsw i32 %135, %24
  %137 = getelementptr inbounds i8, i8* %52, i64 %42
  %138 = load i8, i8* %137, align 1
  %139 = zext i8 %138 to i32
  %140 = mul nuw nsw i32 %139, %27
  %141 = getelementptr inbounds i8, i8* %52, i64 %43
  %142 = load i8, i8* %141, align 1
  %143 = zext i8 %142 to i32
  %144 = mul nuw nsw i32 %143, %30
  %145 = add nuw nsw i32 %140, %128
  %146 = add nuw nsw i32 %124, 64
  %147 = add nuw nsw i32 %146, %132
  %148 = add nuw nsw i32 %147, %136
  %149 = add nuw nsw i32 %148, %144
  %150 = sub nsw i32 %149, %145
  %151 = ashr i32 %150, 7
  %152 = sext i32 %151 to i64
  %153 = getelementptr inbounds i8, i8* getelementptr inbounds ([2304 x i8], [2304 x i8]* @ff_crop_tab, i64 0, i64 1024), i64 %152
  %154 = load i8, i8* %153, align 1
  %155 = getelementptr inbounds i8, i8* %51, i64 2
  store i8 %154, i8* %155, align 1
  %156 = getelementptr inbounds i8, i8* %52, i64 3
  %157 = load i8, i8* %156, align 1
  %158 = zext i8 %157 to i32
  %159 = mul nuw nsw i32 %158, %15
  %160 = getelementptr inbounds i8, i8* %52, i64 %44
  %161 = load i8, i8* %160, align 1
  %162 = zext i8 %161 to i32
  %163 = mul nuw nsw i32 %162, %18
  %164 = getelementptr inbounds i8, i8* %52, i64 %45
  %165 = load i8, i8* %164, align 1
  %166 = zext i8 %165 to i32
  %167 = mul nuw nsw i32 %166, %20
  %168 = getelementptr inbounds i8, i8* %52, i64 %46
  %169 = load i8, i8* %168, align 1
  %170 = zext i8 %169 to i32
  %171 = mul nuw nsw i32 %170, %24
  %172 = getelementptr inbounds i8, i8* %52, i64 %47
  %173 = load i8, i8* %172, align 1
  %174 = zext i8 %173 to i32
  %175 = mul nuw nsw i32 %174, %27
  %176 = getelementptr inbounds i8, i8* %52, i64 %48
  %177 = load i8, i8* %176, align 1
  %178 = zext i8 %177 to i32
  %179 = mul nuw nsw i32 %178, %30
  %180 = add nuw nsw i32 %175, %163
  %181 = add nuw nsw i32 %159, 64
  %182 = add nuw nsw i32 %181, %167
  %183 = add nuw nsw i32 %182, %171
  %184 = add nuw nsw i32 %183, %179
  %185 = sub nsw i32 %184, %180
  %186 = ashr i32 %185, 7
  %187 = sext i32 %186 to i64
  %188 = getelementptr inbounds i8, i8* getelementptr inbounds ([2304 x i8], [2304 x i8]* @ff_crop_tab, i64 0, i64 1024), i64 %187
  %189 = load i8, i8* %188, align 1
  %190 = getelementptr inbounds i8, i8* %51, i64 3
  store i8 %189, i8* %190, align 1
  %191 = getelementptr inbounds i8, i8* %51, i64 %1
  %192 = add nuw nsw i32 %50, 1
  %193 = icmp eq i32 %192, %4
  br i1 %193, label %194, label %49

194:                                              ; preds = %49, %7
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @put_vp8_epel4_h4v6_c(i8* nocapture, i64, i8* nocapture readonly, i64, i32, i32, i32) #1 {
  %8 = alloca [52 x i8], align 16
  %9 = add nsw i32 %5, -1
  %10 = sext i32 %9 to i64
  %11 = getelementptr inbounds [52 x i8], [52 x i8]* %8, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 52, i8* nonnull %11) #5
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %11, i8 -86, i64 52, i1 false)
  %12 = add i32 %4, 5
  %13 = icmp sgt i32 %12, 0
  br i1 %13, label %14, label %109

14:                                               ; preds = %7
  %15 = shl nsw i64 %3, 1
  %16 = sub i64 0, %15
  %17 = getelementptr inbounds i8, i8* %2, i64 %16
  %18 = getelementptr inbounds [7 x [6 x i8]], [7 x [6 x i8]]* @subpel_filters, i64 0, i64 %10, i64 2
  %19 = load i8, i8* %18, align 2
  %20 = zext i8 %19 to i32
  %21 = getelementptr inbounds [7 x [6 x i8]], [7 x [6 x i8]]* @subpel_filters, i64 0, i64 %10, i64 1
  %22 = load i8, i8* %21, align 1
  %23 = zext i8 %22 to i32
  %24 = getelementptr inbounds [7 x [6 x i8]], [7 x [6 x i8]]* @subpel_filters, i64 0, i64 %10, i64 3
  %25 = load i8, i8* %24, align 1
  %26 = zext i8 %25 to i32
  %27 = getelementptr inbounds [7 x [6 x i8]], [7 x [6 x i8]]* @subpel_filters, i64 0, i64 %10, i64 4
  %28 = load i8, i8* %27, align 2
  %29 = zext i8 %28 to i32
  br label %30

30:                                               ; preds = %30, %14
  %31 = phi i8* [ %11, %14 ], [ %105, %30 ]
  %32 = phi i32 [ 0, %14 ], [ %107, %30 ]
  %33 = phi i8* [ %17, %14 ], [ %106, %30 ]
  %34 = load i8, i8* %33, align 1
  %35 = zext i8 %34 to i32
  %36 = mul nuw nsw i32 %35, %20
  %37 = getelementptr inbounds i8, i8* %33, i64 -1
  %38 = load i8, i8* %37, align 1
  %39 = zext i8 %38 to i32
  %40 = mul nuw nsw i32 %39, %23
  %41 = getelementptr inbounds i8, i8* %33, i64 1
  %42 = load i8, i8* %41, align 1
  %43 = zext i8 %42 to i32
  %44 = mul nuw nsw i32 %43, %26
  %45 = getelementptr inbounds i8, i8* %33, i64 2
  %46 = load i8, i8* %45, align 1
  %47 = zext i8 %46 to i32
  %48 = mul nuw nsw i32 %47, %29
  %49 = add nuw nsw i32 %48, %40
  %50 = add nuw nsw i32 %36, 64
  %51 = add nuw nsw i32 %50, %44
  %52 = sub nsw i32 %51, %49
  %53 = ashr i32 %52, 7
  %54 = sext i32 %53 to i64
  %55 = getelementptr inbounds i8, i8* getelementptr inbounds ([2304 x i8], [2304 x i8]* @ff_crop_tab, i64 0, i64 1024), i64 %54
  %56 = load i8, i8* %55, align 1
  store i8 %56, i8* %31, align 1
  %57 = mul nuw nsw i32 %43, %20
  %58 = mul nuw nsw i32 %35, %23
  %59 = mul nuw nsw i32 %47, %26
  %60 = getelementptr inbounds i8, i8* %33, i64 3
  %61 = load i8, i8* %60, align 1
  %62 = zext i8 %61 to i32
  %63 = mul nuw nsw i32 %62, %29
  %64 = add nuw nsw i32 %63, %58
  %65 = add nuw nsw i32 %57, 64
  %66 = add nuw nsw i32 %65, %59
  %67 = sub nsw i32 %66, %64
  %68 = ashr i32 %67, 7
  %69 = sext i32 %68 to i64
  %70 = getelementptr inbounds i8, i8* getelementptr inbounds ([2304 x i8], [2304 x i8]* @ff_crop_tab, i64 0, i64 1024), i64 %69
  %71 = load i8, i8* %70, align 1
  %72 = getelementptr inbounds i8, i8* %31, i64 1
  store i8 %71, i8* %72, align 1
  %73 = mul nuw nsw i32 %47, %20
  %74 = mul nuw nsw i32 %43, %23
  %75 = mul nuw nsw i32 %62, %26
  %76 = getelementptr inbounds i8, i8* %33, i64 4
  %77 = load i8, i8* %76, align 1
  %78 = zext i8 %77 to i32
  %79 = mul nuw nsw i32 %78, %29
  %80 = add nuw nsw i32 %79, %74
  %81 = add nuw nsw i32 %73, 64
  %82 = add nuw nsw i32 %81, %75
  %83 = sub nsw i32 %82, %80
  %84 = ashr i32 %83, 7
  %85 = sext i32 %84 to i64
  %86 = getelementptr inbounds i8, i8* getelementptr inbounds ([2304 x i8], [2304 x i8]* @ff_crop_tab, i64 0, i64 1024), i64 %85
  %87 = load i8, i8* %86, align 1
  %88 = getelementptr inbounds i8, i8* %31, i64 2
  store i8 %87, i8* %88, align 1
  %89 = mul nuw nsw i32 %62, %20
  %90 = mul nuw nsw i32 %47, %23
  %91 = mul nuw nsw i32 %78, %26
  %92 = getelementptr inbounds i8, i8* %33, i64 5
  %93 = load i8, i8* %92, align 1
  %94 = zext i8 %93 to i32
  %95 = mul nuw nsw i32 %94, %29
  %96 = add nuw nsw i32 %95, %90
  %97 = add nuw nsw i32 %89, 64
  %98 = add nuw nsw i32 %97, %91
  %99 = sub nsw i32 %98, %96
  %100 = ashr i32 %99, 7
  %101 = sext i32 %100 to i64
  %102 = getelementptr inbounds i8, i8* getelementptr inbounds ([2304 x i8], [2304 x i8]* @ff_crop_tab, i64 0, i64 1024), i64 %101
  %103 = load i8, i8* %102, align 1
  %104 = getelementptr inbounds i8, i8* %31, i64 3
  store i8 %103, i8* %104, align 1
  %105 = getelementptr inbounds i8, i8* %31, i64 4
  %106 = getelementptr inbounds i8, i8* %33, i64 %3
  %107 = add nuw nsw i32 %32, 1
  %108 = icmp eq i32 %107, %12
  br i1 %108, label %109, label %30

109:                                              ; preds = %30, %7
  %110 = add nsw i32 %6, -1
  %111 = sext i32 %110 to i64
  %112 = icmp sgt i32 %4, 0
  br i1 %112, label %113, label %207

113:                                              ; preds = %109
  %114 = getelementptr inbounds [7 x [6 x i8]], [7 x [6 x i8]]* @subpel_filters, i64 0, i64 %111, i64 0
  %115 = getelementptr inbounds [52 x i8], [52 x i8]* %8, i64 0, i64 8
  %116 = getelementptr inbounds [7 x [6 x i8]], [7 x [6 x i8]]* @subpel_filters, i64 0, i64 %111, i64 2
  %117 = load i8, i8* %116, align 2
  %118 = zext i8 %117 to i32
  %119 = getelementptr inbounds [7 x [6 x i8]], [7 x [6 x i8]]* @subpel_filters, i64 0, i64 %111, i64 1
  %120 = load i8, i8* %119, align 1
  %121 = zext i8 %120 to i32
  %122 = load i8, i8* %114, align 2
  %123 = zext i8 %122 to i32
  %124 = getelementptr inbounds [7 x [6 x i8]], [7 x [6 x i8]]* @subpel_filters, i64 0, i64 %111, i64 3
  %125 = load i8, i8* %124, align 1
  %126 = zext i8 %125 to i32
  %127 = getelementptr inbounds [7 x [6 x i8]], [7 x [6 x i8]]* @subpel_filters, i64 0, i64 %111, i64 4
  %128 = load i8, i8* %127, align 2
  %129 = zext i8 %128 to i32
  %130 = getelementptr inbounds [7 x [6 x i8]], [7 x [6 x i8]]* @subpel_filters, i64 0, i64 %111, i64 5
  %131 = load i8, i8* %130, align 1
  %132 = zext i8 %131 to i32
  %133 = insertelement <4 x i32> undef, i32 %118, i32 0
  %134 = shufflevector <4 x i32> %133, <4 x i32> undef, <4 x i32> zeroinitializer
  %135 = insertelement <4 x i32> undef, i32 %123, i32 0
  %136 = shufflevector <4 x i32> %135, <4 x i32> undef, <4 x i32> zeroinitializer
  %137 = insertelement <4 x i32> undef, i32 %126, i32 0
  %138 = shufflevector <4 x i32> %137, <4 x i32> undef, <4 x i32> zeroinitializer
  %139 = insertelement <4 x i32> undef, i32 %132, i32 0
  %140 = shufflevector <4 x i32> %139, <4 x i32> undef, <4 x i32> zeroinitializer
  %141 = insertelement <4 x i32> undef, i32 %129, i32 0
  %142 = shufflevector <4 x i32> %141, <4 x i32> undef, <4 x i32> zeroinitializer
  %143 = insertelement <4 x i32> undef, i32 %121, i32 0
  %144 = shufflevector <4 x i32> %143, <4 x i32> undef, <4 x i32> zeroinitializer
  br label %145

145:                                              ; preds = %145, %113
  %146 = phi i8* [ %115, %113 ], [ %151, %145 ]
  %147 = phi i32 [ 0, %113 ], [ %205, %145 ]
  %148 = phi i8* [ %0, %113 ], [ %204, %145 ]
  %149 = getelementptr inbounds i8, i8* %146, i64 -4
  %150 = getelementptr inbounds i8, i8* %146, i64 -8
  %151 = getelementptr inbounds i8, i8* %146, i64 4
  %152 = getelementptr inbounds i8, i8* %146, i64 8
  %153 = getelementptr inbounds i8, i8* %146, i64 12
  %154 = bitcast i8* %146 to <4 x i8>*
  %155 = load <4 x i8>, <4 x i8>* %154, align 1
  %156 = zext <4 x i8> %155 to <4 x i32>
  %157 = mul nuw nsw <4 x i32> %134, %156
  %158 = bitcast i8* %149 to <4 x i8>*
  %159 = load <4 x i8>, <4 x i8>* %158, align 1
  %160 = zext <4 x i8> %159 to <4 x i32>
  %161 = mul nuw nsw <4 x i32> %144, %160
  %162 = bitcast i8* %150 to <4 x i8>*
  %163 = load <4 x i8>, <4 x i8>* %162, align 1
  %164 = zext <4 x i8> %163 to <4 x i32>
  %165 = mul nuw nsw <4 x i32> %136, %164
  %166 = bitcast i8* %151 to <4 x i8>*
  %167 = load <4 x i8>, <4 x i8>* %166, align 1
  %168 = zext <4 x i8> %167 to <4 x i32>
  %169 = mul nuw nsw <4 x i32> %138, %168
  %170 = bitcast i8* %152 to <4 x i8>*
  %171 = load <4 x i8>, <4 x i8>* %170, align 1
  %172 = zext <4 x i8> %171 to <4 x i32>
  %173 = mul nuw nsw <4 x i32> %142, %172
  %174 = bitcast i8* %153 to <4 x i8>*
  %175 = load <4 x i8>, <4 x i8>* %174, align 1
  %176 = zext <4 x i8> %175 to <4 x i32>
  %177 = mul nuw nsw <4 x i32> %140, %176
  %178 = add nuw nsw <4 x i32> %173, %161
  %179 = add nuw nsw <4 x i32> %157, <i32 64, i32 64, i32 64, i32 64>
  %180 = add nuw nsw <4 x i32> %179, %165
  %181 = add nuw nsw <4 x i32> %180, %169
  %182 = add nuw nsw <4 x i32> %181, %177
  %183 = sub nsw <4 x i32> %182, %178
  %184 = ashr <4 x i32> %183, <i32 7, i32 7, i32 7, i32 7>
  %185 = extractelement <4 x i32> %184, i32 0
  %186 = sext i32 %185 to i64
  %187 = getelementptr inbounds i8, i8* getelementptr inbounds ([2304 x i8], [2304 x i8]* @ff_crop_tab, i64 0, i64 1024), i64 %186
  %188 = load i8, i8* %187, align 1
  store i8 %188, i8* %148, align 1
  %189 = extractelement <4 x i32> %184, i32 1
  %190 = sext i32 %189 to i64
  %191 = getelementptr inbounds i8, i8* getelementptr inbounds ([2304 x i8], [2304 x i8]* @ff_crop_tab, i64 0, i64 1024), i64 %190
  %192 = load i8, i8* %191, align 1
  %193 = getelementptr inbounds i8, i8* %148, i64 1
  store i8 %192, i8* %193, align 1
  %194 = extractelement <4 x i32> %184, i32 2
  %195 = sext i32 %194 to i64
  %196 = getelementptr inbounds i8, i8* getelementptr inbounds ([2304 x i8], [2304 x i8]* @ff_crop_tab, i64 0, i64 1024), i64 %195
  %197 = load i8, i8* %196, align 1
  %198 = getelementptr inbounds i8, i8* %148, i64 2
  store i8 %197, i8* %198, align 1
  %199 = extractelement <4 x i32> %184, i32 3
  %200 = sext i32 %199 to i64
  %201 = getelementptr inbounds i8, i8* getelementptr inbounds ([2304 x i8], [2304 x i8]* @ff_crop_tab, i64 0, i64 1024), i64 %200
  %202 = load i8, i8* %201, align 1
  %203 = getelementptr inbounds i8, i8* %148, i64 3
  store i8 %202, i8* %203, align 1
  %204 = getelementptr inbounds i8, i8* %148, i64 %1
  %205 = add nuw nsw i32 %147, 1
  %206 = icmp eq i32 %205, %4
  br i1 %206, label %207, label %145

207:                                              ; preds = %145, %109
  call void @llvm.lifetime.end.p0i8(i64 52, i8* nonnull %11) #5
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @put_vp8_epel4_h6v6_c(i8* nocapture, i64, i8* nocapture readonly, i64, i32, i32, i32) #1 {
  %8 = alloca [52 x i8], align 16
  %9 = add nsw i32 %5, -1
  %10 = sext i32 %9 to i64
  %11 = getelementptr inbounds [52 x i8], [52 x i8]* %8, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 52, i8* nonnull %11) #5
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %11, i8 -86, i64 52, i1 false)
  %12 = add i32 %4, 5
  %13 = icmp sgt i32 %12, 0
  br i1 %13, label %14, label %137

14:                                               ; preds = %7
  %15 = shl nsw i64 %3, 1
  %16 = sub i64 0, %15
  %17 = getelementptr inbounds i8, i8* %2, i64 %16
  %18 = getelementptr inbounds [7 x [6 x i8]], [7 x [6 x i8]]* @subpel_filters, i64 0, i64 %10, i64 0
  %19 = getelementptr inbounds [7 x [6 x i8]], [7 x [6 x i8]]* @subpel_filters, i64 0, i64 %10, i64 2
  %20 = load i8, i8* %19, align 2
  %21 = zext i8 %20 to i32
  %22 = getelementptr inbounds [7 x [6 x i8]], [7 x [6 x i8]]* @subpel_filters, i64 0, i64 %10, i64 1
  %23 = load i8, i8* %22, align 1
  %24 = zext i8 %23 to i32
  %25 = load i8, i8* %18, align 2
  %26 = zext i8 %25 to i32
  %27 = getelementptr inbounds [7 x [6 x i8]], [7 x [6 x i8]]* @subpel_filters, i64 0, i64 %10, i64 3
  %28 = load i8, i8* %27, align 1
  %29 = zext i8 %28 to i32
  %30 = getelementptr inbounds [7 x [6 x i8]], [7 x [6 x i8]]* @subpel_filters, i64 0, i64 %10, i64 4
  %31 = load i8, i8* %30, align 2
  %32 = zext i8 %31 to i32
  %33 = getelementptr inbounds [7 x [6 x i8]], [7 x [6 x i8]]* @subpel_filters, i64 0, i64 %10, i64 5
  %34 = load i8, i8* %33, align 1
  %35 = zext i8 %34 to i32
  br label %36

36:                                               ; preds = %36, %14
  %37 = phi i8* [ %11, %14 ], [ %133, %36 ]
  %38 = phi i32 [ 0, %14 ], [ %135, %36 ]
  %39 = phi i8* [ %17, %14 ], [ %134, %36 ]
  %40 = load i8, i8* %39, align 1
  %41 = zext i8 %40 to i32
  %42 = mul nuw nsw i32 %41, %21
  %43 = getelementptr inbounds i8, i8* %39, i64 -1
  %44 = load i8, i8* %43, align 1
  %45 = zext i8 %44 to i32
  %46 = mul nuw nsw i32 %45, %24
  %47 = getelementptr inbounds i8, i8* %39, i64 -2
  %48 = load i8, i8* %47, align 1
  %49 = zext i8 %48 to i32
  %50 = mul nuw nsw i32 %49, %26
  %51 = getelementptr inbounds i8, i8* %39, i64 1
  %52 = load i8, i8* %51, align 1
  %53 = zext i8 %52 to i32
  %54 = mul nuw nsw i32 %53, %29
  %55 = getelementptr inbounds i8, i8* %39, i64 2
  %56 = load i8, i8* %55, align 1
  %57 = zext i8 %56 to i32
  %58 = mul nuw nsw i32 %57, %32
  %59 = getelementptr inbounds i8, i8* %39, i64 3
  %60 = load i8, i8* %59, align 1
  %61 = zext i8 %60 to i32
  %62 = mul nuw nsw i32 %61, %35
  %63 = add nuw nsw i32 %58, %46
  %64 = add nuw nsw i32 %42, 64
  %65 = add nuw nsw i32 %64, %50
  %66 = add nuw nsw i32 %65, %54
  %67 = add nuw nsw i32 %66, %62
  %68 = sub nsw i32 %67, %63
  %69 = ashr i32 %68, 7
  %70 = sext i32 %69 to i64
  %71 = getelementptr inbounds i8, i8* getelementptr inbounds ([2304 x i8], [2304 x i8]* @ff_crop_tab, i64 0, i64 1024), i64 %70
  %72 = load i8, i8* %71, align 1
  store i8 %72, i8* %37, align 1
  %73 = mul nuw nsw i32 %53, %21
  %74 = mul nuw nsw i32 %41, %24
  %75 = mul nuw nsw i32 %45, %26
  %76 = mul nuw nsw i32 %57, %29
  %77 = mul nuw nsw i32 %61, %32
  %78 = getelementptr inbounds i8, i8* %39, i64 4
  %79 = load i8, i8* %78, align 1
  %80 = zext i8 %79 to i32
  %81 = mul nuw nsw i32 %80, %35
  %82 = add nuw nsw i32 %77, %74
  %83 = add nuw nsw i32 %73, 64
  %84 = add nuw nsw i32 %83, %75
  %85 = add nuw nsw i32 %84, %76
  %86 = add nuw nsw i32 %85, %81
  %87 = sub nsw i32 %86, %82
  %88 = ashr i32 %87, 7
  %89 = sext i32 %88 to i64
  %90 = getelementptr inbounds i8, i8* getelementptr inbounds ([2304 x i8], [2304 x i8]* @ff_crop_tab, i64 0, i64 1024), i64 %89
  %91 = load i8, i8* %90, align 1
  %92 = getelementptr inbounds i8, i8* %37, i64 1
  store i8 %91, i8* %92, align 1
  %93 = mul nuw nsw i32 %57, %21
  %94 = mul nuw nsw i32 %53, %24
  %95 = mul nuw nsw i32 %41, %26
  %96 = mul nuw nsw i32 %61, %29
  %97 = mul nuw nsw i32 %80, %32
  %98 = getelementptr inbounds i8, i8* %39, i64 5
  %99 = load i8, i8* %98, align 1
  %100 = zext i8 %99 to i32
  %101 = mul nuw nsw i32 %100, %35
  %102 = add nuw nsw i32 %97, %94
  %103 = add nuw nsw i32 %93, 64
  %104 = add nuw nsw i32 %103, %95
  %105 = add nuw nsw i32 %104, %96
  %106 = add nuw nsw i32 %105, %101
  %107 = sub nsw i32 %106, %102
  %108 = ashr i32 %107, 7
  %109 = sext i32 %108 to i64
  %110 = getelementptr inbounds i8, i8* getelementptr inbounds ([2304 x i8], [2304 x i8]* @ff_crop_tab, i64 0, i64 1024), i64 %109
  %111 = load i8, i8* %110, align 1
  %112 = getelementptr inbounds i8, i8* %37, i64 2
  store i8 %111, i8* %112, align 1
  %113 = mul nuw nsw i32 %61, %21
  %114 = mul nuw nsw i32 %57, %24
  %115 = mul nuw nsw i32 %53, %26
  %116 = mul nuw nsw i32 %80, %29
  %117 = mul nuw nsw i32 %100, %32
  %118 = getelementptr inbounds i8, i8* %39, i64 6
  %119 = load i8, i8* %118, align 1
  %120 = zext i8 %119 to i32
  %121 = mul nuw nsw i32 %120, %35
  %122 = add nuw nsw i32 %117, %114
  %123 = add nuw nsw i32 %113, 64
  %124 = add nuw nsw i32 %123, %115
  %125 = add nuw nsw i32 %124, %116
  %126 = add nuw nsw i32 %125, %121
  %127 = sub nsw i32 %126, %122
  %128 = ashr i32 %127, 7
  %129 = sext i32 %128 to i64
  %130 = getelementptr inbounds i8, i8* getelementptr inbounds ([2304 x i8], [2304 x i8]* @ff_crop_tab, i64 0, i64 1024), i64 %129
  %131 = load i8, i8* %130, align 1
  %132 = getelementptr inbounds i8, i8* %37, i64 3
  store i8 %131, i8* %132, align 1
  %133 = getelementptr inbounds i8, i8* %37, i64 4
  %134 = getelementptr inbounds i8, i8* %39, i64 %3
  %135 = add nuw nsw i32 %38, 1
  %136 = icmp eq i32 %135, %12
  br i1 %136, label %137, label %36

137:                                              ; preds = %36, %7
  %138 = add nsw i32 %6, -1
  %139 = sext i32 %138 to i64
  %140 = icmp sgt i32 %4, 0
  br i1 %140, label %141, label %235

141:                                              ; preds = %137
  %142 = getelementptr inbounds [7 x [6 x i8]], [7 x [6 x i8]]* @subpel_filters, i64 0, i64 %139, i64 0
  %143 = getelementptr inbounds [52 x i8], [52 x i8]* %8, i64 0, i64 8
  %144 = getelementptr inbounds [7 x [6 x i8]], [7 x [6 x i8]]* @subpel_filters, i64 0, i64 %139, i64 2
  %145 = load i8, i8* %144, align 2
  %146 = zext i8 %145 to i32
  %147 = getelementptr inbounds [7 x [6 x i8]], [7 x [6 x i8]]* @subpel_filters, i64 0, i64 %139, i64 1
  %148 = load i8, i8* %147, align 1
  %149 = zext i8 %148 to i32
  %150 = load i8, i8* %142, align 2
  %151 = zext i8 %150 to i32
  %152 = getelementptr inbounds [7 x [6 x i8]], [7 x [6 x i8]]* @subpel_filters, i64 0, i64 %139, i64 3
  %153 = load i8, i8* %152, align 1
  %154 = zext i8 %153 to i32
  %155 = getelementptr inbounds [7 x [6 x i8]], [7 x [6 x i8]]* @subpel_filters, i64 0, i64 %139, i64 4
  %156 = load i8, i8* %155, align 2
  %157 = zext i8 %156 to i32
  %158 = getelementptr inbounds [7 x [6 x i8]], [7 x [6 x i8]]* @subpel_filters, i64 0, i64 %139, i64 5
  %159 = load i8, i8* %158, align 1
  %160 = zext i8 %159 to i32
  %161 = insertelement <4 x i32> undef, i32 %146, i32 0
  %162 = shufflevector <4 x i32> %161, <4 x i32> undef, <4 x i32> zeroinitializer
  %163 = insertelement <4 x i32> undef, i32 %151, i32 0
  %164 = shufflevector <4 x i32> %163, <4 x i32> undef, <4 x i32> zeroinitializer
  %165 = insertelement <4 x i32> undef, i32 %154, i32 0
  %166 = shufflevector <4 x i32> %165, <4 x i32> undef, <4 x i32> zeroinitializer
  %167 = insertelement <4 x i32> undef, i32 %160, i32 0
  %168 = shufflevector <4 x i32> %167, <4 x i32> undef, <4 x i32> zeroinitializer
  %169 = insertelement <4 x i32> undef, i32 %157, i32 0
  %170 = shufflevector <4 x i32> %169, <4 x i32> undef, <4 x i32> zeroinitializer
  %171 = insertelement <4 x i32> undef, i32 %149, i32 0
  %172 = shufflevector <4 x i32> %171, <4 x i32> undef, <4 x i32> zeroinitializer
  br label %173

173:                                              ; preds = %173, %141
  %174 = phi i8* [ %143, %141 ], [ %179, %173 ]
  %175 = phi i32 [ 0, %141 ], [ %233, %173 ]
  %176 = phi i8* [ %0, %141 ], [ %232, %173 ]
  %177 = getelementptr inbounds i8, i8* %174, i64 -4
  %178 = getelementptr inbounds i8, i8* %174, i64 -8
  %179 = getelementptr inbounds i8, i8* %174, i64 4
  %180 = getelementptr inbounds i8, i8* %174, i64 8
  %181 = getelementptr inbounds i8, i8* %174, i64 12
  %182 = bitcast i8* %174 to <4 x i8>*
  %183 = load <4 x i8>, <4 x i8>* %182, align 1
  %184 = zext <4 x i8> %183 to <4 x i32>
  %185 = mul nuw nsw <4 x i32> %162, %184
  %186 = bitcast i8* %177 to <4 x i8>*
  %187 = load <4 x i8>, <4 x i8>* %186, align 1
  %188 = zext <4 x i8> %187 to <4 x i32>
  %189 = mul nuw nsw <4 x i32> %172, %188
  %190 = bitcast i8* %178 to <4 x i8>*
  %191 = load <4 x i8>, <4 x i8>* %190, align 1
  %192 = zext <4 x i8> %191 to <4 x i32>
  %193 = mul nuw nsw <4 x i32> %164, %192
  %194 = bitcast i8* %179 to <4 x i8>*
  %195 = load <4 x i8>, <4 x i8>* %194, align 1
  %196 = zext <4 x i8> %195 to <4 x i32>
  %197 = mul nuw nsw <4 x i32> %166, %196
  %198 = bitcast i8* %180 to <4 x i8>*
  %199 = load <4 x i8>, <4 x i8>* %198, align 1
  %200 = zext <4 x i8> %199 to <4 x i32>
  %201 = mul nuw nsw <4 x i32> %170, %200
  %202 = bitcast i8* %181 to <4 x i8>*
  %203 = load <4 x i8>, <4 x i8>* %202, align 1
  %204 = zext <4 x i8> %203 to <4 x i32>
  %205 = mul nuw nsw <4 x i32> %168, %204
  %206 = add nuw nsw <4 x i32> %201, %189
  %207 = add nuw nsw <4 x i32> %185, <i32 64, i32 64, i32 64, i32 64>
  %208 = add nuw nsw <4 x i32> %207, %193
  %209 = add nuw nsw <4 x i32> %208, %197
  %210 = add nuw nsw <4 x i32> %209, %205
  %211 = sub nsw <4 x i32> %210, %206
  %212 = ashr <4 x i32> %211, <i32 7, i32 7, i32 7, i32 7>
  %213 = extractelement <4 x i32> %212, i32 0
  %214 = sext i32 %213 to i64
  %215 = getelementptr inbounds i8, i8* getelementptr inbounds ([2304 x i8], [2304 x i8]* @ff_crop_tab, i64 0, i64 1024), i64 %214
  %216 = load i8, i8* %215, align 1
  store i8 %216, i8* %176, align 1
  %217 = extractelement <4 x i32> %212, i32 1
  %218 = sext i32 %217 to i64
  %219 = getelementptr inbounds i8, i8* getelementptr inbounds ([2304 x i8], [2304 x i8]* @ff_crop_tab, i64 0, i64 1024), i64 %218
  %220 = load i8, i8* %219, align 1
  %221 = getelementptr inbounds i8, i8* %176, i64 1
  store i8 %220, i8* %221, align 1
  %222 = extractelement <4 x i32> %212, i32 2
  %223 = sext i32 %222 to i64
  %224 = getelementptr inbounds i8, i8* getelementptr inbounds ([2304 x i8], [2304 x i8]* @ff_crop_tab, i64 0, i64 1024), i64 %223
  %225 = load i8, i8* %224, align 1
  %226 = getelementptr inbounds i8, i8* %176, i64 2
  store i8 %225, i8* %226, align 1
  %227 = extractelement <4 x i32> %212, i32 3
  %228 = sext i32 %227 to i64
  %229 = getelementptr inbounds i8, i8* getelementptr inbounds ([2304 x i8], [2304 x i8]* @ff_crop_tab, i64 0, i64 1024), i64 %228
  %230 = load i8, i8* %229, align 1
  %231 = getelementptr inbounds i8, i8* %176, i64 3
  store i8 %230, i8* %231, align 1
  %232 = getelementptr inbounds i8, i8* %176, i64 %1
  %233 = add nuw nsw i32 %175, 1
  %234 = icmp eq i32 %233, %4
  br i1 %234, label %235, label %173

235:                                              ; preds = %173, %137
  call void @llvm.lifetime.end.p0i8(i64 52, i8* nonnull %11) #5
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define internal void @put_vp8_bilinear16_h_c(i8* nocapture, i64, i8* nocapture readonly, i64, i32, i32, i32) #2 {
  %8 = sub nsw i32 8, %5
  %9 = icmp sgt i32 %4, 0
  br i1 %9, label %10, label %50

10:                                               ; preds = %7, %45
  %11 = phi i32 [ %48, %45 ], [ 0, %7 ]
  %12 = phi i8* [ %46, %45 ], [ %0, %7 ]
  %13 = phi i8* [ %47, %45 ], [ %2, %7 ]
  br label %14

14:                                               ; preds = %14, %10
  %15 = phi i64 [ 0, %10 ], [ %34, %14 ]
  %16 = getelementptr inbounds i8, i8* %13, i64 %15
  %17 = load i8, i8* %16, align 1
  %18 = zext i8 %17 to i32
  %19 = mul nsw i32 %8, %18
  %20 = or i64 %15, 1
  %21 = getelementptr inbounds i8, i8* %13, i64 %20
  %22 = load i8, i8* %21, align 1
  %23 = zext i8 %22 to i32
  %24 = mul nsw i32 %23, %5
  %25 = add i32 %19, 4
  %26 = add i32 %25, %24
  %27 = lshr i32 %26, 3
  %28 = trunc i32 %27 to i8
  %29 = getelementptr inbounds i8, i8* %12, i64 %15
  store i8 %28, i8* %29, align 1
  %30 = getelementptr inbounds i8, i8* %13, i64 %20
  %31 = load i8, i8* %30, align 1
  %32 = zext i8 %31 to i32
  %33 = mul nsw i32 %8, %32
  %34 = add nuw nsw i64 %15, 2
  %35 = getelementptr inbounds i8, i8* %13, i64 %34
  %36 = load i8, i8* %35, align 1
  %37 = zext i8 %36 to i32
  %38 = mul nsw i32 %37, %5
  %39 = add i32 %33, 4
  %40 = add i32 %39, %38
  %41 = lshr i32 %40, 3
  %42 = trunc i32 %41 to i8
  %43 = getelementptr inbounds i8, i8* %12, i64 %20
  store i8 %42, i8* %43, align 1
  %44 = icmp eq i64 %34, 16
  br i1 %44, label %45, label %14

45:                                               ; preds = %14
  %46 = getelementptr inbounds i8, i8* %12, i64 %1
  %47 = getelementptr inbounds i8, i8* %13, i64 %3
  %48 = add nuw nsw i32 %11, 1
  %49 = icmp eq i32 %48, %4
  br i1 %49, label %50, label %10

50:                                               ; preds = %45, %7
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define internal void @put_vp8_bilinear16_v_c(i8* nocapture, i64, i8* nocapture readonly, i64, i32, i32, i32) #2 {
  %8 = sub nsw i32 8, %6
  %9 = icmp sgt i32 %4, 0
  br i1 %9, label %10, label %52

10:                                               ; preds = %7, %47
  %11 = phi i32 [ %50, %47 ], [ 0, %7 ]
  %12 = phi i8* [ %48, %47 ], [ %0, %7 ]
  %13 = phi i8* [ %49, %47 ], [ %2, %7 ]
  br label %14

14:                                               ; preds = %14, %10
  %15 = phi i64 [ 0, %10 ], [ %45, %14 ]
  %16 = getelementptr inbounds i8, i8* %13, i64 %15
  %17 = load i8, i8* %16, align 1
  %18 = zext i8 %17 to i32
  %19 = mul nsw i32 %8, %18
  %20 = add nsw i64 %15, %3
  %21 = getelementptr inbounds i8, i8* %13, i64 %20
  %22 = load i8, i8* %21, align 1
  %23 = zext i8 %22 to i32
  %24 = mul nsw i32 %23, %6
  %25 = add i32 %19, 4
  %26 = add i32 %25, %24
  %27 = lshr i32 %26, 3
  %28 = trunc i32 %27 to i8
  %29 = getelementptr inbounds i8, i8* %12, i64 %15
  store i8 %28, i8* %29, align 1
  %30 = or i64 %15, 1
  %31 = getelementptr inbounds i8, i8* %13, i64 %30
  %32 = load i8, i8* %31, align 1
  %33 = zext i8 %32 to i32
  %34 = mul nsw i32 %8, %33
  %35 = add nsw i64 %30, %3
  %36 = getelementptr inbounds i8, i8* %13, i64 %35
  %37 = load i8, i8* %36, align 1
  %38 = zext i8 %37 to i32
  %39 = mul nsw i32 %38, %6
  %40 = add i32 %34, 4
  %41 = add i32 %40, %39
  %42 = lshr i32 %41, 3
  %43 = trunc i32 %42 to i8
  %44 = getelementptr inbounds i8, i8* %12, i64 %30
  store i8 %43, i8* %44, align 1
  %45 = add nuw nsw i64 %15, 2
  %46 = icmp eq i64 %45, 16
  br i1 %46, label %47, label %14

47:                                               ; preds = %14
  %48 = getelementptr inbounds i8, i8* %12, i64 %1
  %49 = getelementptr inbounds i8, i8* %13, i64 %3
  %50 = add nuw nsw i32 %11, 1
  %51 = icmp eq i32 %50, %4
  br i1 %51, label %52, label %10

52:                                               ; preds = %47, %7
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @put_vp8_bilinear16_hv_c(i8* nocapture, i64, i8* nocapture readonly, i64, i32, i32, i32) #1 {
  %8 = alloca [528 x i8], align 16
  %9 = sub nsw i32 8, %5
  %10 = sub nsw i32 8, %6
  %11 = getelementptr inbounds [528 x i8], [528 x i8]* %8, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 528, i8* nonnull %11) #5
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %11, i8 -86, i64 528, i1 false)
  %12 = icmp slt i32 %4, 0
  br i1 %12, label %95, label %13

13:                                               ; preds = %7, %48
  %14 = phi i8* [ %49, %48 ], [ %11, %7 ]
  %15 = phi i32 [ %51, %48 ], [ 0, %7 ]
  %16 = phi i8* [ %50, %48 ], [ %2, %7 ]
  %17 = load i8, i8* %16, align 1
  br label %20

18:                                               ; preds = %48
  %19 = icmp sgt i32 %4, 0
  br i1 %19, label %53, label %95

20:                                               ; preds = %20, %13
  %21 = phi i8 [ %17, %13 ], [ %39, %20 ]
  %22 = phi i64 [ 0, %13 ], [ %37, %20 ]
  %23 = zext i8 %21 to i32
  %24 = mul nsw i32 %9, %23
  %25 = or i64 %22, 1
  %26 = getelementptr inbounds i8, i8* %16, i64 %25
  %27 = load i8, i8* %26, align 1
  %28 = zext i8 %27 to i32
  %29 = mul nsw i32 %28, %5
  %30 = add i32 %24, 4
  %31 = add i32 %30, %29
  %32 = lshr i32 %31, 3
  %33 = trunc i32 %32 to i8
  %34 = getelementptr inbounds i8, i8* %14, i64 %22
  store i8 %33, i8* %34, align 1
  %35 = zext i8 %27 to i32
  %36 = mul nsw i32 %9, %35
  %37 = add nuw nsw i64 %22, 2
  %38 = getelementptr inbounds i8, i8* %16, i64 %37
  %39 = load i8, i8* %38, align 1
  %40 = zext i8 %39 to i32
  %41 = mul nsw i32 %40, %5
  %42 = add i32 %36, 4
  %43 = add i32 %42, %41
  %44 = lshr i32 %43, 3
  %45 = trunc i32 %44 to i8
  %46 = getelementptr inbounds i8, i8* %14, i64 %25
  store i8 %45, i8* %46, align 1
  %47 = icmp eq i64 %37, 16
  br i1 %47, label %48, label %20

48:                                               ; preds = %20
  %49 = getelementptr inbounds i8, i8* %14, i64 16
  %50 = getelementptr inbounds i8, i8* %16, i64 %3
  %51 = add nuw i32 %15, 1
  %52 = icmp eq i32 %15, %4
  br i1 %52, label %18, label %13

53:                                               ; preds = %18, %90
  %54 = phi i8* [ %92, %90 ], [ %11, %18 ]
  %55 = phi i32 [ %93, %90 ], [ 0, %18 ]
  %56 = phi i8* [ %91, %90 ], [ %0, %18 ]
  br label %57

57:                                               ; preds = %57, %53
  %58 = phi i64 [ 0, %53 ], [ %88, %57 ]
  %59 = getelementptr inbounds i8, i8* %54, i64 %58
  %60 = load i8, i8* %59, align 1
  %61 = zext i8 %60 to i32
  %62 = mul nsw i32 %10, %61
  %63 = add nuw nsw i64 %58, 16
  %64 = getelementptr inbounds i8, i8* %54, i64 %63
  %65 = load i8, i8* %64, align 1
  %66 = zext i8 %65 to i32
  %67 = mul nsw i32 %66, %6
  %68 = add i32 %62, 4
  %69 = add i32 %68, %67
  %70 = lshr i32 %69, 3
  %71 = trunc i32 %70 to i8
  %72 = getelementptr inbounds i8, i8* %56, i64 %58
  store i8 %71, i8* %72, align 1
  %73 = or i64 %58, 1
  %74 = getelementptr inbounds i8, i8* %54, i64 %73
  %75 = load i8, i8* %74, align 1
  %76 = zext i8 %75 to i32
  %77 = mul nsw i32 %10, %76
  %78 = add nuw nsw i64 %58, 17
  %79 = getelementptr inbounds i8, i8* %54, i64 %78
  %80 = load i8, i8* %79, align 1
  %81 = zext i8 %80 to i32
  %82 = mul nsw i32 %81, %6
  %83 = add i32 %77, 4
  %84 = add i32 %83, %82
  %85 = lshr i32 %84, 3
  %86 = trunc i32 %85 to i8
  %87 = getelementptr inbounds i8, i8* %56, i64 %73
  store i8 %86, i8* %87, align 1
  %88 = add nuw nsw i64 %58, 2
  %89 = icmp eq i64 %88, 16
  br i1 %89, label %90, label %57

90:                                               ; preds = %57
  %91 = getelementptr inbounds i8, i8* %56, i64 %1
  %92 = getelementptr inbounds i8, i8* %54, i64 16
  %93 = add nuw nsw i32 %55, 1
  %94 = icmp eq i32 %93, %4
  br i1 %94, label %95, label %53

95:                                               ; preds = %90, %7, %18
  call void @llvm.lifetime.end.p0i8(i64 528, i8* nonnull %11) #5
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define internal void @put_vp8_bilinear8_h_c(i8* nocapture, i64, i8* nocapture readonly, i64, i32, i32, i32) #2 {
  %8 = sub nsw i32 8, %5
  %9 = icmp sgt i32 %4, 0
  br i1 %9, label %10, label %113

10:                                               ; preds = %7, %10
  %11 = phi i32 [ %111, %10 ], [ 0, %7 ]
  %12 = phi i8* [ %109, %10 ], [ %0, %7 ]
  %13 = phi i8* [ %110, %10 ], [ %2, %7 ]
  %14 = load i8, i8* %13, align 1
  %15 = zext i8 %14 to i32
  %16 = mul nsw i32 %8, %15
  %17 = getelementptr inbounds i8, i8* %13, i64 1
  %18 = load i8, i8* %17, align 1
  %19 = zext i8 %18 to i32
  %20 = mul nsw i32 %19, %5
  %21 = add i32 %16, 4
  %22 = add i32 %21, %20
  %23 = lshr i32 %22, 3
  %24 = trunc i32 %23 to i8
  store i8 %24, i8* %12, align 1
  %25 = load i8, i8* %17, align 1
  %26 = zext i8 %25 to i32
  %27 = mul nsw i32 %8, %26
  %28 = getelementptr inbounds i8, i8* %13, i64 2
  %29 = load i8, i8* %28, align 1
  %30 = zext i8 %29 to i32
  %31 = mul nsw i32 %30, %5
  %32 = add i32 %27, 4
  %33 = add i32 %32, %31
  %34 = lshr i32 %33, 3
  %35 = trunc i32 %34 to i8
  %36 = getelementptr inbounds i8, i8* %12, i64 1
  store i8 %35, i8* %36, align 1
  %37 = load i8, i8* %28, align 1
  %38 = zext i8 %37 to i32
  %39 = mul nsw i32 %8, %38
  %40 = getelementptr inbounds i8, i8* %13, i64 3
  %41 = load i8, i8* %40, align 1
  %42 = zext i8 %41 to i32
  %43 = mul nsw i32 %42, %5
  %44 = add i32 %39, 4
  %45 = add i32 %44, %43
  %46 = lshr i32 %45, 3
  %47 = trunc i32 %46 to i8
  %48 = getelementptr inbounds i8, i8* %12, i64 2
  store i8 %47, i8* %48, align 1
  %49 = load i8, i8* %40, align 1
  %50 = zext i8 %49 to i32
  %51 = mul nsw i32 %8, %50
  %52 = getelementptr inbounds i8, i8* %13, i64 4
  %53 = load i8, i8* %52, align 1
  %54 = zext i8 %53 to i32
  %55 = mul nsw i32 %54, %5
  %56 = add i32 %51, 4
  %57 = add i32 %56, %55
  %58 = lshr i32 %57, 3
  %59 = trunc i32 %58 to i8
  %60 = getelementptr inbounds i8, i8* %12, i64 3
  store i8 %59, i8* %60, align 1
  %61 = load i8, i8* %52, align 1
  %62 = zext i8 %61 to i32
  %63 = mul nsw i32 %8, %62
  %64 = getelementptr inbounds i8, i8* %13, i64 5
  %65 = load i8, i8* %64, align 1
  %66 = zext i8 %65 to i32
  %67 = mul nsw i32 %66, %5
  %68 = add i32 %63, 4
  %69 = add i32 %68, %67
  %70 = lshr i32 %69, 3
  %71 = trunc i32 %70 to i8
  %72 = getelementptr inbounds i8, i8* %12, i64 4
  store i8 %71, i8* %72, align 1
  %73 = load i8, i8* %64, align 1
  %74 = zext i8 %73 to i32
  %75 = mul nsw i32 %8, %74
  %76 = getelementptr inbounds i8, i8* %13, i64 6
  %77 = load i8, i8* %76, align 1
  %78 = zext i8 %77 to i32
  %79 = mul nsw i32 %78, %5
  %80 = add i32 %75, 4
  %81 = add i32 %80, %79
  %82 = lshr i32 %81, 3
  %83 = trunc i32 %82 to i8
  %84 = getelementptr inbounds i8, i8* %12, i64 5
  store i8 %83, i8* %84, align 1
  %85 = load i8, i8* %76, align 1
  %86 = zext i8 %85 to i32
  %87 = mul nsw i32 %8, %86
  %88 = getelementptr inbounds i8, i8* %13, i64 7
  %89 = load i8, i8* %88, align 1
  %90 = zext i8 %89 to i32
  %91 = mul nsw i32 %90, %5
  %92 = add i32 %87, 4
  %93 = add i32 %92, %91
  %94 = lshr i32 %93, 3
  %95 = trunc i32 %94 to i8
  %96 = getelementptr inbounds i8, i8* %12, i64 6
  store i8 %95, i8* %96, align 1
  %97 = load i8, i8* %88, align 1
  %98 = zext i8 %97 to i32
  %99 = mul nsw i32 %8, %98
  %100 = getelementptr inbounds i8, i8* %13, i64 8
  %101 = load i8, i8* %100, align 1
  %102 = zext i8 %101 to i32
  %103 = mul nsw i32 %102, %5
  %104 = add i32 %99, 4
  %105 = add i32 %104, %103
  %106 = lshr i32 %105, 3
  %107 = trunc i32 %106 to i8
  %108 = getelementptr inbounds i8, i8* %12, i64 7
  store i8 %107, i8* %108, align 1
  %109 = getelementptr inbounds i8, i8* %12, i64 %1
  %110 = getelementptr inbounds i8, i8* %13, i64 %3
  %111 = add nuw nsw i32 %11, 1
  %112 = icmp eq i32 %111, %4
  br i1 %112, label %113, label %10

113:                                              ; preds = %10, %7
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define internal void @put_vp8_bilinear8_v_c(i8* nocapture, i64, i8* nocapture readonly, i64, i32, i32, i32) #2 {
  %8 = sub nsw i32 8, %6
  %9 = icmp sgt i32 %4, 0
  br i1 %9, label %10, label %127

10:                                               ; preds = %7
  %11 = add nsw i64 %3, 1
  %12 = add nsw i64 %3, 2
  %13 = add nsw i64 %3, 3
  %14 = add nsw i64 %3, 4
  %15 = add nsw i64 %3, 5
  %16 = add nsw i64 %3, 6
  %17 = add nsw i64 %3, 7
  br label %18

18:                                               ; preds = %18, %10
  %19 = phi i32 [ %125, %18 ], [ 0, %10 ]
  %20 = phi i8* [ %124, %18 ], [ %0, %10 ]
  %21 = phi i8* [ %25, %18 ], [ %2, %10 ]
  %22 = load i8, i8* %21, align 1
  %23 = zext i8 %22 to i32
  %24 = mul nsw i32 %8, %23
  %25 = getelementptr inbounds i8, i8* %21, i64 %3
  %26 = load i8, i8* %25, align 1
  %27 = zext i8 %26 to i32
  %28 = mul nsw i32 %27, %6
  %29 = add i32 %24, 4
  %30 = add i32 %29, %28
  %31 = lshr i32 %30, 3
  %32 = trunc i32 %31 to i8
  store i8 %32, i8* %20, align 1
  %33 = getelementptr inbounds i8, i8* %21, i64 1
  %34 = load i8, i8* %33, align 1
  %35 = zext i8 %34 to i32
  %36 = mul nsw i32 %8, %35
  %37 = getelementptr inbounds i8, i8* %21, i64 %11
  %38 = load i8, i8* %37, align 1
  %39 = zext i8 %38 to i32
  %40 = mul nsw i32 %39, %6
  %41 = add i32 %36, 4
  %42 = add i32 %41, %40
  %43 = lshr i32 %42, 3
  %44 = trunc i32 %43 to i8
  %45 = getelementptr inbounds i8, i8* %20, i64 1
  store i8 %44, i8* %45, align 1
  %46 = getelementptr inbounds i8, i8* %21, i64 2
  %47 = load i8, i8* %46, align 1
  %48 = zext i8 %47 to i32
  %49 = mul nsw i32 %8, %48
  %50 = getelementptr inbounds i8, i8* %21, i64 %12
  %51 = load i8, i8* %50, align 1
  %52 = zext i8 %51 to i32
  %53 = mul nsw i32 %52, %6
  %54 = add i32 %49, 4
  %55 = add i32 %54, %53
  %56 = lshr i32 %55, 3
  %57 = trunc i32 %56 to i8
  %58 = getelementptr inbounds i8, i8* %20, i64 2
  store i8 %57, i8* %58, align 1
  %59 = getelementptr inbounds i8, i8* %21, i64 3
  %60 = load i8, i8* %59, align 1
  %61 = zext i8 %60 to i32
  %62 = mul nsw i32 %8, %61
  %63 = getelementptr inbounds i8, i8* %21, i64 %13
  %64 = load i8, i8* %63, align 1
  %65 = zext i8 %64 to i32
  %66 = mul nsw i32 %65, %6
  %67 = add i32 %62, 4
  %68 = add i32 %67, %66
  %69 = lshr i32 %68, 3
  %70 = trunc i32 %69 to i8
  %71 = getelementptr inbounds i8, i8* %20, i64 3
  store i8 %70, i8* %71, align 1
  %72 = getelementptr inbounds i8, i8* %21, i64 4
  %73 = load i8, i8* %72, align 1
  %74 = zext i8 %73 to i32
  %75 = mul nsw i32 %8, %74
  %76 = getelementptr inbounds i8, i8* %21, i64 %14
  %77 = load i8, i8* %76, align 1
  %78 = zext i8 %77 to i32
  %79 = mul nsw i32 %78, %6
  %80 = add i32 %75, 4
  %81 = add i32 %80, %79
  %82 = lshr i32 %81, 3
  %83 = trunc i32 %82 to i8
  %84 = getelementptr inbounds i8, i8* %20, i64 4
  store i8 %83, i8* %84, align 1
  %85 = getelementptr inbounds i8, i8* %21, i64 5
  %86 = load i8, i8* %85, align 1
  %87 = zext i8 %86 to i32
  %88 = mul nsw i32 %8, %87
  %89 = getelementptr inbounds i8, i8* %21, i64 %15
  %90 = load i8, i8* %89, align 1
  %91 = zext i8 %90 to i32
  %92 = mul nsw i32 %91, %6
  %93 = add i32 %88, 4
  %94 = add i32 %93, %92
  %95 = lshr i32 %94, 3
  %96 = trunc i32 %95 to i8
  %97 = getelementptr inbounds i8, i8* %20, i64 5
  store i8 %96, i8* %97, align 1
  %98 = getelementptr inbounds i8, i8* %21, i64 6
  %99 = load i8, i8* %98, align 1
  %100 = zext i8 %99 to i32
  %101 = mul nsw i32 %8, %100
  %102 = getelementptr inbounds i8, i8* %21, i64 %16
  %103 = load i8, i8* %102, align 1
  %104 = zext i8 %103 to i32
  %105 = mul nsw i32 %104, %6
  %106 = add i32 %101, 4
  %107 = add i32 %106, %105
  %108 = lshr i32 %107, 3
  %109 = trunc i32 %108 to i8
  %110 = getelementptr inbounds i8, i8* %20, i64 6
  store i8 %109, i8* %110, align 1
  %111 = getelementptr inbounds i8, i8* %21, i64 7
  %112 = load i8, i8* %111, align 1
  %113 = zext i8 %112 to i32
  %114 = mul nsw i32 %8, %113
  %115 = getelementptr inbounds i8, i8* %21, i64 %17
  %116 = load i8, i8* %115, align 1
  %117 = zext i8 %116 to i32
  %118 = mul nsw i32 %117, %6
  %119 = add i32 %114, 4
  %120 = add i32 %119, %118
  %121 = lshr i32 %120, 3
  %122 = trunc i32 %121 to i8
  %123 = getelementptr inbounds i8, i8* %20, i64 7
  store i8 %122, i8* %123, align 1
  %124 = getelementptr inbounds i8, i8* %20, i64 %1
  %125 = add nuw nsw i32 %19, 1
  %126 = icmp eq i32 %125, %4
  br i1 %126, label %127, label %18

127:                                              ; preds = %18, %7
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @put_vp8_bilinear8_hv_c(i8* nocapture, i64, i8* nocapture readonly, i64, i32, i32, i32) #1 {
  %8 = alloca [136 x i8], align 16
  %9 = sub nsw i32 8, %5
  %10 = sub nsw i32 8, %6
  %11 = getelementptr inbounds [136 x i8], [136 x i8]* %8, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 136, i8* nonnull %11) #5
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %11, i8 -86, i64 136, i1 false)
  %12 = icmp slt i32 %4, 0
  br i1 %12, label %213, label %13

13:                                               ; preds = %7, %13
  %14 = phi i8* [ %98, %13 ], [ %11, %7 ]
  %15 = phi i32 [ %100, %13 ], [ 0, %7 ]
  %16 = phi i8* [ %99, %13 ], [ %2, %7 ]
  %17 = load i8, i8* %16, align 1
  %18 = zext i8 %17 to i32
  %19 = mul nsw i32 %9, %18
  %20 = getelementptr inbounds i8, i8* %16, i64 1
  %21 = load i8, i8* %20, align 1
  %22 = zext i8 %21 to i32
  %23 = mul nsw i32 %22, %5
  %24 = add i32 %19, 4
  %25 = add i32 %24, %23
  %26 = lshr i32 %25, 3
  %27 = trunc i32 %26 to i8
  store i8 %27, i8* %14, align 1
  %28 = mul nsw i32 %9, %22
  %29 = getelementptr inbounds i8, i8* %16, i64 2
  %30 = load i8, i8* %29, align 1
  %31 = zext i8 %30 to i32
  %32 = mul nsw i32 %31, %5
  %33 = add i32 %28, 4
  %34 = add i32 %33, %32
  %35 = lshr i32 %34, 3
  %36 = trunc i32 %35 to i8
  %37 = getelementptr inbounds i8, i8* %14, i64 1
  store i8 %36, i8* %37, align 1
  %38 = mul nsw i32 %9, %31
  %39 = getelementptr inbounds i8, i8* %16, i64 3
  %40 = load i8, i8* %39, align 1
  %41 = zext i8 %40 to i32
  %42 = mul nsw i32 %41, %5
  %43 = add i32 %38, 4
  %44 = add i32 %43, %42
  %45 = lshr i32 %44, 3
  %46 = trunc i32 %45 to i8
  %47 = getelementptr inbounds i8, i8* %14, i64 2
  store i8 %46, i8* %47, align 1
  %48 = mul nsw i32 %9, %41
  %49 = getelementptr inbounds i8, i8* %16, i64 4
  %50 = load i8, i8* %49, align 1
  %51 = zext i8 %50 to i32
  %52 = mul nsw i32 %51, %5
  %53 = add i32 %48, 4
  %54 = add i32 %53, %52
  %55 = lshr i32 %54, 3
  %56 = trunc i32 %55 to i8
  %57 = getelementptr inbounds i8, i8* %14, i64 3
  store i8 %56, i8* %57, align 1
  %58 = mul nsw i32 %9, %51
  %59 = getelementptr inbounds i8, i8* %16, i64 5
  %60 = load i8, i8* %59, align 1
  %61 = zext i8 %60 to i32
  %62 = mul nsw i32 %61, %5
  %63 = add i32 %58, 4
  %64 = add i32 %63, %62
  %65 = lshr i32 %64, 3
  %66 = trunc i32 %65 to i8
  %67 = getelementptr inbounds i8, i8* %14, i64 4
  store i8 %66, i8* %67, align 1
  %68 = mul nsw i32 %9, %61
  %69 = getelementptr inbounds i8, i8* %16, i64 6
  %70 = load i8, i8* %69, align 1
  %71 = zext i8 %70 to i32
  %72 = mul nsw i32 %71, %5
  %73 = add i32 %68, 4
  %74 = add i32 %73, %72
  %75 = lshr i32 %74, 3
  %76 = trunc i32 %75 to i8
  %77 = getelementptr inbounds i8, i8* %14, i64 5
  store i8 %76, i8* %77, align 1
  %78 = mul nsw i32 %9, %71
  %79 = getelementptr inbounds i8, i8* %16, i64 7
  %80 = load i8, i8* %79, align 1
  %81 = zext i8 %80 to i32
  %82 = mul nsw i32 %81, %5
  %83 = add i32 %78, 4
  %84 = add i32 %83, %82
  %85 = lshr i32 %84, 3
  %86 = trunc i32 %85 to i8
  %87 = getelementptr inbounds i8, i8* %14, i64 6
  store i8 %86, i8* %87, align 1
  %88 = mul nsw i32 %9, %81
  %89 = getelementptr inbounds i8, i8* %16, i64 8
  %90 = load i8, i8* %89, align 1
  %91 = zext i8 %90 to i32
  %92 = mul nsw i32 %91, %5
  %93 = add i32 %88, 4
  %94 = add i32 %93, %92
  %95 = lshr i32 %94, 3
  %96 = trunc i32 %95 to i8
  %97 = getelementptr inbounds i8, i8* %14, i64 7
  store i8 %96, i8* %97, align 1
  %98 = getelementptr inbounds i8, i8* %14, i64 8
  %99 = getelementptr inbounds i8, i8* %16, i64 %3
  %100 = add nuw i32 %15, 1
  %101 = icmp eq i32 %15, %4
  br i1 %101, label %102, label %13

102:                                              ; preds = %13
  %103 = icmp sgt i32 %4, 0
  br i1 %103, label %104, label %213

104:                                              ; preds = %102, %104
  %105 = phi i8* [ %111, %104 ], [ %11, %102 ]
  %106 = phi i32 [ %211, %104 ], [ 0, %102 ]
  %107 = phi i8* [ %210, %104 ], [ %0, %102 ]
  %108 = load i8, i8* %105, align 1
  %109 = zext i8 %108 to i32
  %110 = mul nsw i32 %10, %109
  %111 = getelementptr inbounds i8, i8* %105, i64 8
  %112 = load i8, i8* %111, align 1
  %113 = zext i8 %112 to i32
  %114 = mul nsw i32 %113, %6
  %115 = add i32 %110, 4
  %116 = add i32 %115, %114
  %117 = lshr i32 %116, 3
  %118 = trunc i32 %117 to i8
  store i8 %118, i8* %107, align 1
  %119 = getelementptr inbounds i8, i8* %105, i64 1
  %120 = load i8, i8* %119, align 1
  %121 = zext i8 %120 to i32
  %122 = mul nsw i32 %10, %121
  %123 = getelementptr inbounds i8, i8* %105, i64 9
  %124 = load i8, i8* %123, align 1
  %125 = zext i8 %124 to i32
  %126 = mul nsw i32 %125, %6
  %127 = add i32 %122, 4
  %128 = add i32 %127, %126
  %129 = lshr i32 %128, 3
  %130 = trunc i32 %129 to i8
  %131 = getelementptr inbounds i8, i8* %107, i64 1
  store i8 %130, i8* %131, align 1
  %132 = getelementptr inbounds i8, i8* %105, i64 2
  %133 = load i8, i8* %132, align 1
  %134 = zext i8 %133 to i32
  %135 = mul nsw i32 %10, %134
  %136 = getelementptr inbounds i8, i8* %105, i64 10
  %137 = load i8, i8* %136, align 1
  %138 = zext i8 %137 to i32
  %139 = mul nsw i32 %138, %6
  %140 = add i32 %135, 4
  %141 = add i32 %140, %139
  %142 = lshr i32 %141, 3
  %143 = trunc i32 %142 to i8
  %144 = getelementptr inbounds i8, i8* %107, i64 2
  store i8 %143, i8* %144, align 1
  %145 = getelementptr inbounds i8, i8* %105, i64 3
  %146 = load i8, i8* %145, align 1
  %147 = zext i8 %146 to i32
  %148 = mul nsw i32 %10, %147
  %149 = getelementptr inbounds i8, i8* %105, i64 11
  %150 = load i8, i8* %149, align 1
  %151 = zext i8 %150 to i32
  %152 = mul nsw i32 %151, %6
  %153 = add i32 %148, 4
  %154 = add i32 %153, %152
  %155 = lshr i32 %154, 3
  %156 = trunc i32 %155 to i8
  %157 = getelementptr inbounds i8, i8* %107, i64 3
  store i8 %156, i8* %157, align 1
  %158 = getelementptr inbounds i8, i8* %105, i64 4
  %159 = load i8, i8* %158, align 1
  %160 = zext i8 %159 to i32
  %161 = mul nsw i32 %10, %160
  %162 = getelementptr inbounds i8, i8* %105, i64 12
  %163 = load i8, i8* %162, align 1
  %164 = zext i8 %163 to i32
  %165 = mul nsw i32 %164, %6
  %166 = add i32 %161, 4
  %167 = add i32 %166, %165
  %168 = lshr i32 %167, 3
  %169 = trunc i32 %168 to i8
  %170 = getelementptr inbounds i8, i8* %107, i64 4
  store i8 %169, i8* %170, align 1
  %171 = getelementptr inbounds i8, i8* %105, i64 5
  %172 = load i8, i8* %171, align 1
  %173 = zext i8 %172 to i32
  %174 = mul nsw i32 %10, %173
  %175 = getelementptr inbounds i8, i8* %105, i64 13
  %176 = load i8, i8* %175, align 1
  %177 = zext i8 %176 to i32
  %178 = mul nsw i32 %177, %6
  %179 = add i32 %174, 4
  %180 = add i32 %179, %178
  %181 = lshr i32 %180, 3
  %182 = trunc i32 %181 to i8
  %183 = getelementptr inbounds i8, i8* %107, i64 5
  store i8 %182, i8* %183, align 1
  %184 = getelementptr inbounds i8, i8* %105, i64 6
  %185 = load i8, i8* %184, align 1
  %186 = zext i8 %185 to i32
  %187 = mul nsw i32 %10, %186
  %188 = getelementptr inbounds i8, i8* %105, i64 14
  %189 = load i8, i8* %188, align 1
  %190 = zext i8 %189 to i32
  %191 = mul nsw i32 %190, %6
  %192 = add i32 %187, 4
  %193 = add i32 %192, %191
  %194 = lshr i32 %193, 3
  %195 = trunc i32 %194 to i8
  %196 = getelementptr inbounds i8, i8* %107, i64 6
  store i8 %195, i8* %196, align 1
  %197 = getelementptr inbounds i8, i8* %105, i64 7
  %198 = load i8, i8* %197, align 1
  %199 = zext i8 %198 to i32
  %200 = mul nsw i32 %10, %199
  %201 = getelementptr inbounds i8, i8* %105, i64 15
  %202 = load i8, i8* %201, align 1
  %203 = zext i8 %202 to i32
  %204 = mul nsw i32 %203, %6
  %205 = add i32 %200, 4
  %206 = add i32 %205, %204
  %207 = lshr i32 %206, 3
  %208 = trunc i32 %207 to i8
  %209 = getelementptr inbounds i8, i8* %107, i64 7
  store i8 %208, i8* %209, align 1
  %210 = getelementptr inbounds i8, i8* %107, i64 %1
  %211 = add nuw nsw i32 %106, 1
  %212 = icmp eq i32 %211, %4
  br i1 %212, label %213, label %104

213:                                              ; preds = %104, %7, %102
  call void @llvm.lifetime.end.p0i8(i64 136, i8* nonnull %11) #5
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define internal void @put_vp8_bilinear4_h_c(i8* nocapture, i64, i8* nocapture readonly, i64, i32, i32, i32) #2 {
  %8 = sub nsw i32 8, %5
  %9 = icmp sgt i32 %4, 0
  br i1 %9, label %10, label %65

10:                                               ; preds = %7, %10
  %11 = phi i32 [ %63, %10 ], [ 0, %7 ]
  %12 = phi i8* [ %61, %10 ], [ %0, %7 ]
  %13 = phi i8* [ %62, %10 ], [ %2, %7 ]
  %14 = load i8, i8* %13, align 1
  %15 = zext i8 %14 to i32
  %16 = mul nsw i32 %8, %15
  %17 = getelementptr inbounds i8, i8* %13, i64 1
  %18 = load i8, i8* %17, align 1
  %19 = zext i8 %18 to i32
  %20 = mul nsw i32 %19, %5
  %21 = add i32 %16, 4
  %22 = add i32 %21, %20
  %23 = lshr i32 %22, 3
  %24 = trunc i32 %23 to i8
  store i8 %24, i8* %12, align 1
  %25 = load i8, i8* %17, align 1
  %26 = zext i8 %25 to i32
  %27 = mul nsw i32 %8, %26
  %28 = getelementptr inbounds i8, i8* %13, i64 2
  %29 = load i8, i8* %28, align 1
  %30 = zext i8 %29 to i32
  %31 = mul nsw i32 %30, %5
  %32 = add i32 %27, 4
  %33 = add i32 %32, %31
  %34 = lshr i32 %33, 3
  %35 = trunc i32 %34 to i8
  %36 = getelementptr inbounds i8, i8* %12, i64 1
  store i8 %35, i8* %36, align 1
  %37 = load i8, i8* %28, align 1
  %38 = zext i8 %37 to i32
  %39 = mul nsw i32 %8, %38
  %40 = getelementptr inbounds i8, i8* %13, i64 3
  %41 = load i8, i8* %40, align 1
  %42 = zext i8 %41 to i32
  %43 = mul nsw i32 %42, %5
  %44 = add i32 %39, 4
  %45 = add i32 %44, %43
  %46 = lshr i32 %45, 3
  %47 = trunc i32 %46 to i8
  %48 = getelementptr inbounds i8, i8* %12, i64 2
  store i8 %47, i8* %48, align 1
  %49 = load i8, i8* %40, align 1
  %50 = zext i8 %49 to i32
  %51 = mul nsw i32 %8, %50
  %52 = getelementptr inbounds i8, i8* %13, i64 4
  %53 = load i8, i8* %52, align 1
  %54 = zext i8 %53 to i32
  %55 = mul nsw i32 %54, %5
  %56 = add i32 %51, 4
  %57 = add i32 %56, %55
  %58 = lshr i32 %57, 3
  %59 = trunc i32 %58 to i8
  %60 = getelementptr inbounds i8, i8* %12, i64 3
  store i8 %59, i8* %60, align 1
  %61 = getelementptr inbounds i8, i8* %12, i64 %1
  %62 = getelementptr inbounds i8, i8* %13, i64 %3
  %63 = add nuw nsw i32 %11, 1
  %64 = icmp eq i32 %63, %4
  br i1 %64, label %65, label %10

65:                                               ; preds = %10, %7
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define internal void @put_vp8_bilinear4_v_c(i8* nocapture, i64, i8* nocapture readonly, i64, i32, i32, i32) #2 {
  %8 = sub nsw i32 8, %6
  %9 = icmp sgt i32 %4, 0
  br i1 %9, label %10, label %71

10:                                               ; preds = %7
  %11 = add nsw i64 %3, 1
  %12 = add nsw i64 %3, 2
  %13 = add nsw i64 %3, 3
  br label %14

14:                                               ; preds = %14, %10
  %15 = phi i32 [ %69, %14 ], [ 0, %10 ]
  %16 = phi i8* [ %68, %14 ], [ %0, %10 ]
  %17 = phi i8* [ %21, %14 ], [ %2, %10 ]
  %18 = load i8, i8* %17, align 1
  %19 = zext i8 %18 to i32
  %20 = mul nsw i32 %8, %19
  %21 = getelementptr inbounds i8, i8* %17, i64 %3
  %22 = load i8, i8* %21, align 1
  %23 = zext i8 %22 to i32
  %24 = mul nsw i32 %23, %6
  %25 = add i32 %20, 4
  %26 = add i32 %25, %24
  %27 = lshr i32 %26, 3
  %28 = trunc i32 %27 to i8
  store i8 %28, i8* %16, align 1
  %29 = getelementptr inbounds i8, i8* %17, i64 1
  %30 = load i8, i8* %29, align 1
  %31 = zext i8 %30 to i32
  %32 = mul nsw i32 %8, %31
  %33 = getelementptr inbounds i8, i8* %17, i64 %11
  %34 = load i8, i8* %33, align 1
  %35 = zext i8 %34 to i32
  %36 = mul nsw i32 %35, %6
  %37 = add i32 %32, 4
  %38 = add i32 %37, %36
  %39 = lshr i32 %38, 3
  %40 = trunc i32 %39 to i8
  %41 = getelementptr inbounds i8, i8* %16, i64 1
  store i8 %40, i8* %41, align 1
  %42 = getelementptr inbounds i8, i8* %17, i64 2
  %43 = load i8, i8* %42, align 1
  %44 = zext i8 %43 to i32
  %45 = mul nsw i32 %8, %44
  %46 = getelementptr inbounds i8, i8* %17, i64 %12
  %47 = load i8, i8* %46, align 1
  %48 = zext i8 %47 to i32
  %49 = mul nsw i32 %48, %6
  %50 = add i32 %45, 4
  %51 = add i32 %50, %49
  %52 = lshr i32 %51, 3
  %53 = trunc i32 %52 to i8
  %54 = getelementptr inbounds i8, i8* %16, i64 2
  store i8 %53, i8* %54, align 1
  %55 = getelementptr inbounds i8, i8* %17, i64 3
  %56 = load i8, i8* %55, align 1
  %57 = zext i8 %56 to i32
  %58 = mul nsw i32 %8, %57
  %59 = getelementptr inbounds i8, i8* %17, i64 %13
  %60 = load i8, i8* %59, align 1
  %61 = zext i8 %60 to i32
  %62 = mul nsw i32 %61, %6
  %63 = add i32 %58, 4
  %64 = add i32 %63, %62
  %65 = lshr i32 %64, 3
  %66 = trunc i32 %65 to i8
  %67 = getelementptr inbounds i8, i8* %16, i64 3
  store i8 %66, i8* %67, align 1
  %68 = getelementptr inbounds i8, i8* %16, i64 %1
  %69 = add nuw nsw i32 %15, 1
  %70 = icmp eq i32 %69, %4
  br i1 %70, label %71, label %14

71:                                               ; preds = %14, %7
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @put_vp8_bilinear4_hv_c(i8* nocapture, i64, i8* nocapture readonly, i64, i32, i32, i32) #1 {
  %8 = alloca [36 x i8], align 16
  %9 = sub nsw i32 8, %5
  %10 = sub nsw i32 8, %6
  %11 = getelementptr inbounds [36 x i8], [36 x i8]* %8, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 36, i8* nonnull %11) #5
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %11, i8 -86, i64 36, i1 false)
  %12 = icmp slt i32 %4, 0
  br i1 %12, label %123, label %13

13:                                               ; preds = %7, %13
  %14 = phi i8* [ %58, %13 ], [ %11, %7 ]
  %15 = phi i32 [ %60, %13 ], [ 0, %7 ]
  %16 = phi i8* [ %59, %13 ], [ %2, %7 ]
  %17 = load i8, i8* %16, align 1
  %18 = zext i8 %17 to i32
  %19 = mul nsw i32 %9, %18
  %20 = getelementptr inbounds i8, i8* %16, i64 1
  %21 = load i8, i8* %20, align 1
  %22 = zext i8 %21 to i32
  %23 = mul nsw i32 %22, %5
  %24 = add i32 %19, 4
  %25 = add i32 %24, %23
  %26 = lshr i32 %25, 3
  %27 = trunc i32 %26 to i8
  store i8 %27, i8* %14, align 1
  %28 = mul nsw i32 %9, %22
  %29 = getelementptr inbounds i8, i8* %16, i64 2
  %30 = load i8, i8* %29, align 1
  %31 = zext i8 %30 to i32
  %32 = mul nsw i32 %31, %5
  %33 = add i32 %28, 4
  %34 = add i32 %33, %32
  %35 = lshr i32 %34, 3
  %36 = trunc i32 %35 to i8
  %37 = getelementptr inbounds i8, i8* %14, i64 1
  store i8 %36, i8* %37, align 1
  %38 = mul nsw i32 %9, %31
  %39 = getelementptr inbounds i8, i8* %16, i64 3
  %40 = load i8, i8* %39, align 1
  %41 = zext i8 %40 to i32
  %42 = mul nsw i32 %41, %5
  %43 = add i32 %38, 4
  %44 = add i32 %43, %42
  %45 = lshr i32 %44, 3
  %46 = trunc i32 %45 to i8
  %47 = getelementptr inbounds i8, i8* %14, i64 2
  store i8 %46, i8* %47, align 1
  %48 = mul nsw i32 %9, %41
  %49 = getelementptr inbounds i8, i8* %16, i64 4
  %50 = load i8, i8* %49, align 1
  %51 = zext i8 %50 to i32
  %52 = mul nsw i32 %51, %5
  %53 = add i32 %48, 4
  %54 = add i32 %53, %52
  %55 = lshr i32 %54, 3
  %56 = trunc i32 %55 to i8
  %57 = getelementptr inbounds i8, i8* %14, i64 3
  store i8 %56, i8* %57, align 1
  %58 = getelementptr inbounds i8, i8* %14, i64 4
  %59 = getelementptr inbounds i8, i8* %16, i64 %3
  %60 = add nuw i32 %15, 1
  %61 = icmp eq i32 %15, %4
  br i1 %61, label %62, label %13

62:                                               ; preds = %13
  %63 = icmp sgt i32 %4, 0
  br i1 %63, label %64, label %123

64:                                               ; preds = %62
  %65 = load i8, i8* %11, align 16
  br label %66

66:                                               ; preds = %66, %64
  %67 = phi i8 [ %74, %66 ], [ %65, %64 ]
  %68 = phi i8* [ %73, %66 ], [ %11, %64 ]
  %69 = phi i32 [ %121, %66 ], [ 0, %64 ]
  %70 = phi i8* [ %120, %66 ], [ %0, %64 ]
  %71 = zext i8 %67 to i32
  %72 = mul nsw i32 %10, %71
  %73 = getelementptr inbounds i8, i8* %68, i64 4
  %74 = load i8, i8* %73, align 1
  %75 = zext i8 %74 to i32
  %76 = mul nsw i32 %75, %6
  %77 = add i32 %72, 4
  %78 = add i32 %77, %76
  %79 = lshr i32 %78, 3
  %80 = trunc i32 %79 to i8
  store i8 %80, i8* %70, align 1
  %81 = getelementptr inbounds i8, i8* %68, i64 1
  %82 = load i8, i8* %81, align 1
  %83 = zext i8 %82 to i32
  %84 = mul nsw i32 %10, %83
  %85 = getelementptr inbounds i8, i8* %68, i64 5
  %86 = load i8, i8* %85, align 1
  %87 = zext i8 %86 to i32
  %88 = mul nsw i32 %87, %6
  %89 = add i32 %84, 4
  %90 = add i32 %89, %88
  %91 = lshr i32 %90, 3
  %92 = trunc i32 %91 to i8
  %93 = getelementptr inbounds i8, i8* %70, i64 1
  store i8 %92, i8* %93, align 1
  %94 = getelementptr inbounds i8, i8* %68, i64 2
  %95 = load i8, i8* %94, align 1
  %96 = zext i8 %95 to i32
  %97 = mul nsw i32 %10, %96
  %98 = getelementptr inbounds i8, i8* %68, i64 6
  %99 = load i8, i8* %98, align 1
  %100 = zext i8 %99 to i32
  %101 = mul nsw i32 %100, %6
  %102 = add i32 %97, 4
  %103 = add i32 %102, %101
  %104 = lshr i32 %103, 3
  %105 = trunc i32 %104 to i8
  %106 = getelementptr inbounds i8, i8* %70, i64 2
  store i8 %105, i8* %106, align 1
  %107 = getelementptr inbounds i8, i8* %68, i64 3
  %108 = load i8, i8* %107, align 1
  %109 = zext i8 %108 to i32
  %110 = mul nsw i32 %10, %109
  %111 = getelementptr inbounds i8, i8* %68, i64 7
  %112 = load i8, i8* %111, align 1
  %113 = zext i8 %112 to i32
  %114 = mul nsw i32 %113, %6
  %115 = add i32 %110, 4
  %116 = add i32 %115, %114
  %117 = lshr i32 %116, 3
  %118 = trunc i32 %117 to i8
  %119 = getelementptr inbounds i8, i8* %70, i64 3
  store i8 %118, i8* %119, align 1
  %120 = getelementptr inbounds i8, i8* %70, i64 %1
  %121 = add nuw nsw i32 %69, 1
  %122 = icmp eq i32 %121, %4
  br i1 %122, label %123, label %66

123:                                              ; preds = %66, %7, %62
  call void @llvm.lifetime.end.p0i8(i64 36, i8* nonnull %11) #5
  ret void
}

declare void @ff_vp78dsp_init_x86(%struct.VP8DSPContext*) local_unnamed_addr #3

; Function Attrs: cold nounwind optsize ssp uwtable
define hidden void @ff_vp8dsp_init(%struct.VP8DSPContext*) local_unnamed_addr #0 {
  %2 = bitcast %struct.VP8DSPContext* %0 to <2 x void ([4 x [16 x i16]]*, i16*)*>*
  store <2 x void ([4 x [16 x i16]]*, i16*)*> <void ([4 x [16 x i16]]*, i16*)* @vp8_luma_dc_wht_c, void ([4 x [16 x i16]]*, i16*)* @vp8_luma_dc_wht_dc_c>, <2 x void ([4 x [16 x i16]]*, i16*)*>* %2, align 8
  %3 = getelementptr inbounds %struct.VP8DSPContext, %struct.VP8DSPContext* %0, i64 0, i32 2
  %4 = bitcast void (i8*, i16*, i64)** %3 to <2 x void (i8*, i16*, i64)*>*
  store <2 x void (i8*, i16*, i64)*> <void (i8*, i16*, i64)* @vp8_idct_add_c, void (i8*, i16*, i64)* @vp8_idct_dc_add_c>, <2 x void (i8*, i16*, i64)*>* %4, align 8
  %5 = getelementptr inbounds %struct.VP8DSPContext, %struct.VP8DSPContext* %0, i64 0, i32 4
  %6 = bitcast void (i8*, [16 x i16]*, i64)** %5 to <2 x void (i8*, [16 x i16]*, i64)*>*
  store <2 x void (i8*, [16 x i16]*, i64)*> <void (i8*, [16 x i16]*, i64)* @vp8_idct_dc_add4y_c, void (i8*, [16 x i16]*, i64)* @vp8_idct_dc_add4uv_c>, <2 x void (i8*, [16 x i16]*, i64)*>* %6, align 8
  %7 = getelementptr inbounds %struct.VP8DSPContext, %struct.VP8DSPContext* %0, i64 0, i32 6
  %8 = bitcast void (i8*, i64, i32, i32, i32)** %7 to <2 x void (i8*, i64, i32, i32, i32)*>*
  store <2 x void (i8*, i64, i32, i32, i32)*> <void (i8*, i64, i32, i32, i32)* @vp8_v_loop_filter16_c, void (i8*, i64, i32, i32, i32)* @vp8_h_loop_filter16_c>, <2 x void (i8*, i64, i32, i32, i32)*>* %8, align 8
  %9 = getelementptr inbounds %struct.VP8DSPContext, %struct.VP8DSPContext* %0, i64 0, i32 8
  %10 = bitcast void (i8*, i8*, i64, i32, i32, i32)** %9 to <2 x void (i8*, i8*, i64, i32, i32, i32)*>*
  store <2 x void (i8*, i8*, i64, i32, i32, i32)*> <void (i8*, i8*, i64, i32, i32, i32)* @vp8_v_loop_filter8uv_c, void (i8*, i8*, i64, i32, i32, i32)* @vp8_h_loop_filter8uv_c>, <2 x void (i8*, i8*, i64, i32, i32, i32)*>* %10, align 8
  %11 = getelementptr inbounds %struct.VP8DSPContext, %struct.VP8DSPContext* %0, i64 0, i32 10
  %12 = bitcast void (i8*, i64, i32, i32, i32)** %11 to <2 x void (i8*, i64, i32, i32, i32)*>*
  store <2 x void (i8*, i64, i32, i32, i32)*> <void (i8*, i64, i32, i32, i32)* @vp8_v_loop_filter16_inner_c, void (i8*, i64, i32, i32, i32)* @vp8_h_loop_filter16_inner_c>, <2 x void (i8*, i64, i32, i32, i32)*>* %12, align 8
  %13 = getelementptr inbounds %struct.VP8DSPContext, %struct.VP8DSPContext* %0, i64 0, i32 12
  %14 = bitcast void (i8*, i8*, i64, i32, i32, i32)** %13 to <2 x void (i8*, i8*, i64, i32, i32, i32)*>*
  store <2 x void (i8*, i8*, i64, i32, i32, i32)*> <void (i8*, i8*, i64, i32, i32, i32)* @vp8_v_loop_filter8uv_inner_c, void (i8*, i8*, i64, i32, i32, i32)* @vp8_h_loop_filter8uv_inner_c>, <2 x void (i8*, i8*, i64, i32, i32, i32)*>* %14, align 8
  %15 = getelementptr inbounds %struct.VP8DSPContext, %struct.VP8DSPContext* %0, i64 0, i32 14
  %16 = bitcast void (i8*, i64, i32)** %15 to <2 x void (i8*, i64, i32)*>*
  store <2 x void (i8*, i64, i32)*> <void (i8*, i64, i32)* @vp8_v_loop_filter_simple_c, void (i8*, i64, i32)* @vp8_h_loop_filter_simple_c>, <2 x void (i8*, i64, i32)*>* %16, align 8
  tail call void @ff_vp8dsp_init_x86(%struct.VP8DSPContext* %0) #5
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define internal void @vp8_luma_dc_wht_c([4 x [16 x i16]]* nocapture, i16* nocapture) #2 {
  %3 = load i16, i16* %1, align 2
  %4 = sext i16 %3 to i32
  %5 = getelementptr inbounds i16, i16* %1, i64 12
  %6 = load i16, i16* %5, align 2
  %7 = sext i16 %6 to i32
  %8 = add nsw i32 %7, %4
  %9 = getelementptr inbounds i16, i16* %1, i64 4
  %10 = load i16, i16* %9, align 2
  %11 = sext i16 %10 to i32
  %12 = getelementptr inbounds i16, i16* %1, i64 8
  %13 = load i16, i16* %12, align 2
  %14 = sext i16 %13 to i32
  %15 = add nsw i32 %14, %11
  %16 = sub nsw i32 %11, %14
  %17 = sub nsw i32 %4, %7
  %18 = add nsw i32 %15, %8
  %19 = trunc i32 %18 to i16
  store i16 %19, i16* %1, align 2
  %20 = add nsw i32 %16, %17
  %21 = trunc i32 %20 to i16
  store i16 %21, i16* %9, align 2
  %22 = sub nsw i32 %8, %15
  %23 = trunc i32 %22 to i16
  store i16 %23, i16* %12, align 2
  %24 = sub nsw i32 %17, %16
  %25 = trunc i32 %24 to i16
  store i16 %25, i16* %5, align 2
  %26 = getelementptr inbounds i16, i16* %1, i64 1
  %27 = load i16, i16* %26, align 2
  %28 = sext i16 %27 to i32
  %29 = getelementptr inbounds i16, i16* %1, i64 13
  %30 = load i16, i16* %29, align 2
  %31 = sext i16 %30 to i32
  %32 = add nsw i32 %31, %28
  %33 = getelementptr inbounds i16, i16* %1, i64 5
  %34 = load i16, i16* %33, align 2
  %35 = sext i16 %34 to i32
  %36 = getelementptr inbounds i16, i16* %1, i64 9
  %37 = load i16, i16* %36, align 2
  %38 = sext i16 %37 to i32
  %39 = add nsw i32 %38, %35
  %40 = sub nsw i32 %35, %38
  %41 = sub nsw i32 %28, %31
  %42 = add nsw i32 %39, %32
  %43 = trunc i32 %42 to i16
  store i16 %43, i16* %26, align 2
  %44 = add nsw i32 %40, %41
  %45 = trunc i32 %44 to i16
  store i16 %45, i16* %33, align 2
  %46 = sub nsw i32 %32, %39
  %47 = trunc i32 %46 to i16
  store i16 %47, i16* %36, align 2
  %48 = sub nsw i32 %41, %40
  %49 = trunc i32 %48 to i16
  store i16 %49, i16* %29, align 2
  %50 = getelementptr inbounds i16, i16* %1, i64 2
  %51 = load i16, i16* %50, align 2
  %52 = sext i16 %51 to i32
  %53 = getelementptr inbounds i16, i16* %1, i64 14
  %54 = load i16, i16* %53, align 2
  %55 = sext i16 %54 to i32
  %56 = add nsw i32 %55, %52
  %57 = getelementptr inbounds i16, i16* %1, i64 6
  %58 = load i16, i16* %57, align 2
  %59 = sext i16 %58 to i32
  %60 = getelementptr inbounds i16, i16* %1, i64 10
  %61 = load i16, i16* %60, align 2
  %62 = sext i16 %61 to i32
  %63 = add nsw i32 %62, %59
  %64 = sub nsw i32 %59, %62
  %65 = sub nsw i32 %52, %55
  %66 = add nsw i32 %63, %56
  %67 = trunc i32 %66 to i16
  store i16 %67, i16* %50, align 2
  %68 = add nsw i32 %64, %65
  %69 = trunc i32 %68 to i16
  store i16 %69, i16* %57, align 2
  %70 = sub nsw i32 %56, %63
  %71 = trunc i32 %70 to i16
  store i16 %71, i16* %60, align 2
  %72 = sub nsw i32 %65, %64
  %73 = trunc i32 %72 to i16
  store i16 %73, i16* %53, align 2
  %74 = getelementptr inbounds i16, i16* %1, i64 3
  %75 = load i16, i16* %74, align 2
  %76 = sext i16 %75 to i32
  %77 = getelementptr inbounds i16, i16* %1, i64 15
  %78 = load i16, i16* %77, align 2
  %79 = sext i16 %78 to i32
  %80 = add nsw i32 %79, %76
  %81 = getelementptr inbounds i16, i16* %1, i64 7
  %82 = load i16, i16* %81, align 2
  %83 = sext i16 %82 to i32
  %84 = getelementptr inbounds i16, i16* %1, i64 11
  %85 = load i16, i16* %84, align 2
  %86 = sext i16 %85 to i32
  %87 = add nsw i32 %86, %83
  %88 = sub nsw i32 %83, %86
  %89 = sub nsw i32 %76, %79
  %90 = add nsw i32 %87, %80
  %91 = add nsw i32 %88, %89
  %92 = trunc i32 %91 to i16
  store i16 %92, i16* %81, align 2
  %93 = sub nsw i32 %80, %87
  %94 = trunc i32 %93 to i16
  store i16 %94, i16* %84, align 2
  %95 = sub nsw i32 %89, %88
  %96 = trunc i32 %95 to i16
  store i16 %96, i16* %77, align 2
  %97 = shl i32 %18, 16
  %98 = ashr exact i32 %97, 16
  %99 = shl i32 %90, 16
  %100 = ashr exact i32 %99, 16
  %101 = add nsw i32 %98, 3
  %102 = add nsw i32 %101, %100
  %103 = shl i32 %42, 16
  %104 = ashr exact i32 %103, 16
  %105 = shl i32 %66, 16
  %106 = ashr exact i32 %105, 16
  %107 = add nsw i32 %106, %104
  %108 = sub nsw i32 %104, %106
  %109 = sub nsw i32 %98, %100
  %110 = add nsw i32 %109, 3
  %111 = bitcast i16* %1 to i64*
  store i64 0, i64* %111, align 8
  %112 = add nsw i32 %107, %102
  %113 = lshr i32 %112, 3
  %114 = trunc i32 %113 to i16
  %115 = getelementptr inbounds [4 x [16 x i16]], [4 x [16 x i16]]* %0, i64 0, i64 0, i64 0
  store i16 %114, i16* %115, align 2
  %116 = add nsw i32 %108, %110
  %117 = lshr i32 %116, 3
  %118 = trunc i32 %117 to i16
  %119 = getelementptr inbounds [4 x [16 x i16]], [4 x [16 x i16]]* %0, i64 0, i64 1, i64 0
  store i16 %118, i16* %119, align 2
  %120 = sub nsw i32 %102, %107
  %121 = lshr i32 %120, 3
  %122 = trunc i32 %121 to i16
  %123 = getelementptr inbounds [4 x [16 x i16]], [4 x [16 x i16]]* %0, i64 0, i64 2, i64 0
  store i16 %122, i16* %123, align 2
  %124 = sub nsw i32 %110, %108
  %125 = lshr i32 %124, 3
  %126 = trunc i32 %125 to i16
  %127 = getelementptr inbounds [4 x [16 x i16]], [4 x [16 x i16]]* %0, i64 0, i64 3, i64 0
  store i16 %126, i16* %127, align 2
  %128 = load i16, i16* %9, align 2
  %129 = sext i16 %128 to i32
  %130 = load i16, i16* %81, align 2
  %131 = sext i16 %130 to i32
  %132 = add nsw i32 %129, 3
  %133 = add nsw i32 %132, %131
  %134 = load i16, i16* %33, align 2
  %135 = sext i16 %134 to i32
  %136 = load i16, i16* %57, align 2
  %137 = sext i16 %136 to i32
  %138 = add nsw i32 %137, %135
  %139 = sub nsw i32 %135, %137
  %140 = sub nsw i32 %129, %131
  %141 = add nsw i32 %140, 3
  %142 = bitcast i16* %9 to i64*
  store i64 0, i64* %142, align 8
  %143 = add nsw i32 %138, %133
  %144 = lshr i32 %143, 3
  %145 = trunc i32 %144 to i16
  %146 = getelementptr inbounds [4 x [16 x i16]], [4 x [16 x i16]]* %0, i64 1, i64 0, i64 0
  store i16 %145, i16* %146, align 2
  %147 = add nsw i32 %139, %141
  %148 = lshr i32 %147, 3
  %149 = trunc i32 %148 to i16
  %150 = getelementptr inbounds [4 x [16 x i16]], [4 x [16 x i16]]* %0, i64 1, i64 1, i64 0
  store i16 %149, i16* %150, align 2
  %151 = sub nsw i32 %133, %138
  %152 = lshr i32 %151, 3
  %153 = trunc i32 %152 to i16
  %154 = getelementptr inbounds [4 x [16 x i16]], [4 x [16 x i16]]* %0, i64 1, i64 2, i64 0
  store i16 %153, i16* %154, align 2
  %155 = sub nsw i32 %141, %139
  %156 = lshr i32 %155, 3
  %157 = trunc i32 %156 to i16
  %158 = getelementptr inbounds [4 x [16 x i16]], [4 x [16 x i16]]* %0, i64 1, i64 3, i64 0
  store i16 %157, i16* %158, align 2
  %159 = load i16, i16* %12, align 2
  %160 = sext i16 %159 to i32
  %161 = load i16, i16* %84, align 2
  %162 = sext i16 %161 to i32
  %163 = add nsw i32 %160, 3
  %164 = add nsw i32 %163, %162
  %165 = load i16, i16* %36, align 2
  %166 = sext i16 %165 to i32
  %167 = load i16, i16* %60, align 2
  %168 = sext i16 %167 to i32
  %169 = add nsw i32 %168, %166
  %170 = sub nsw i32 %166, %168
  %171 = sub nsw i32 %160, %162
  %172 = add nsw i32 %171, 3
  %173 = bitcast i16* %12 to i64*
  store i64 0, i64* %173, align 8
  %174 = add nsw i32 %169, %164
  %175 = lshr i32 %174, 3
  %176 = trunc i32 %175 to i16
  %177 = getelementptr inbounds [4 x [16 x i16]], [4 x [16 x i16]]* %0, i64 2, i64 0, i64 0
  store i16 %176, i16* %177, align 2
  %178 = add nsw i32 %170, %172
  %179 = lshr i32 %178, 3
  %180 = trunc i32 %179 to i16
  %181 = getelementptr inbounds [4 x [16 x i16]], [4 x [16 x i16]]* %0, i64 2, i64 1, i64 0
  store i16 %180, i16* %181, align 2
  %182 = sub nsw i32 %164, %169
  %183 = lshr i32 %182, 3
  %184 = trunc i32 %183 to i16
  %185 = getelementptr inbounds [4 x [16 x i16]], [4 x [16 x i16]]* %0, i64 2, i64 2, i64 0
  store i16 %184, i16* %185, align 2
  %186 = sub nsw i32 %172, %170
  %187 = lshr i32 %186, 3
  %188 = trunc i32 %187 to i16
  %189 = getelementptr inbounds [4 x [16 x i16]], [4 x [16 x i16]]* %0, i64 2, i64 3, i64 0
  store i16 %188, i16* %189, align 2
  %190 = load i16, i16* %5, align 2
  %191 = sext i16 %190 to i32
  %192 = load i16, i16* %77, align 2
  %193 = sext i16 %192 to i32
  %194 = add nsw i32 %191, 3
  %195 = add nsw i32 %194, %193
  %196 = load i16, i16* %29, align 2
  %197 = sext i16 %196 to i32
  %198 = load i16, i16* %53, align 2
  %199 = sext i16 %198 to i32
  %200 = add nsw i32 %199, %197
  %201 = sub nsw i32 %197, %199
  %202 = sub nsw i32 %191, %193
  %203 = add nsw i32 %202, 3
  %204 = bitcast i16* %5 to i64*
  store i64 0, i64* %204, align 8
  %205 = add nsw i32 %200, %195
  %206 = lshr i32 %205, 3
  %207 = trunc i32 %206 to i16
  %208 = getelementptr inbounds [4 x [16 x i16]], [4 x [16 x i16]]* %0, i64 3, i64 0, i64 0
  store i16 %207, i16* %208, align 2
  %209 = add nsw i32 %201, %203
  %210 = lshr i32 %209, 3
  %211 = trunc i32 %210 to i16
  %212 = getelementptr inbounds [4 x [16 x i16]], [4 x [16 x i16]]* %0, i64 3, i64 1, i64 0
  store i16 %211, i16* %212, align 2
  %213 = sub nsw i32 %195, %200
  %214 = lshr i32 %213, 3
  %215 = trunc i32 %214 to i16
  %216 = getelementptr inbounds [4 x [16 x i16]], [4 x [16 x i16]]* %0, i64 3, i64 2, i64 0
  store i16 %215, i16* %216, align 2
  %217 = sub nsw i32 %203, %201
  %218 = lshr i32 %217, 3
  %219 = trunc i32 %218 to i16
  %220 = getelementptr inbounds [4 x [16 x i16]], [4 x [16 x i16]]* %0, i64 3, i64 3, i64 0
  store i16 %219, i16* %220, align 2
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define internal void @vp8_luma_dc_wht_dc_c([4 x [16 x i16]]* nocapture, i16* nocapture) #2 {
  %3 = load i16, i16* %1, align 2
  %4 = sext i16 %3 to i32
  %5 = add nsw i32 %4, 3
  %6 = ashr i32 %5, 3
  store i16 0, i16* %1, align 2
  %7 = trunc i32 %6 to i16
  %8 = getelementptr inbounds [4 x [16 x i16]], [4 x [16 x i16]]* %0, i64 0, i64 0, i64 0
  store i16 %7, i16* %8, align 2
  %9 = getelementptr inbounds [4 x [16 x i16]], [4 x [16 x i16]]* %0, i64 0, i64 1, i64 0
  store i16 %7, i16* %9, align 2
  %10 = getelementptr inbounds [4 x [16 x i16]], [4 x [16 x i16]]* %0, i64 0, i64 2, i64 0
  store i16 %7, i16* %10, align 2
  %11 = getelementptr inbounds [4 x [16 x i16]], [4 x [16 x i16]]* %0, i64 0, i64 3, i64 0
  store i16 %7, i16* %11, align 2
  %12 = getelementptr inbounds [4 x [16 x i16]], [4 x [16 x i16]]* %0, i64 1, i64 0, i64 0
  store i16 %7, i16* %12, align 2
  %13 = getelementptr inbounds [4 x [16 x i16]], [4 x [16 x i16]]* %0, i64 1, i64 1, i64 0
  store i16 %7, i16* %13, align 2
  %14 = getelementptr inbounds [4 x [16 x i16]], [4 x [16 x i16]]* %0, i64 1, i64 2, i64 0
  store i16 %7, i16* %14, align 2
  %15 = getelementptr inbounds [4 x [16 x i16]], [4 x [16 x i16]]* %0, i64 1, i64 3, i64 0
  store i16 %7, i16* %15, align 2
  %16 = getelementptr inbounds [4 x [16 x i16]], [4 x [16 x i16]]* %0, i64 2, i64 0, i64 0
  store i16 %7, i16* %16, align 2
  %17 = getelementptr inbounds [4 x [16 x i16]], [4 x [16 x i16]]* %0, i64 2, i64 1, i64 0
  store i16 %7, i16* %17, align 2
  %18 = getelementptr inbounds [4 x [16 x i16]], [4 x [16 x i16]]* %0, i64 2, i64 2, i64 0
  store i16 %7, i16* %18, align 2
  %19 = getelementptr inbounds [4 x [16 x i16]], [4 x [16 x i16]]* %0, i64 2, i64 3, i64 0
  store i16 %7, i16* %19, align 2
  %20 = getelementptr inbounds [4 x [16 x i16]], [4 x [16 x i16]]* %0, i64 3, i64 0, i64 0
  store i16 %7, i16* %20, align 2
  %21 = getelementptr inbounds [4 x [16 x i16]], [4 x [16 x i16]]* %0, i64 3, i64 1, i64 0
  store i16 %7, i16* %21, align 2
  %22 = getelementptr inbounds [4 x [16 x i16]], [4 x [16 x i16]]* %0, i64 3, i64 2, i64 0
  store i16 %7, i16* %22, align 2
  %23 = getelementptr inbounds [4 x [16 x i16]], [4 x [16 x i16]]* %0, i64 3, i64 3, i64 0
  store i16 %7, i16* %23, align 2
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @vp8_idct_add_c(i8* nocapture, i16* nocapture, i64) #1 {
  %4 = alloca [16 x i16], align 16
  %5 = bitcast [16 x i16]* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %5) #5
  %6 = getelementptr inbounds [16 x i16], [16 x i16]* %4, i64 0, i64 0
  %7 = getelementptr inbounds [16 x i16], [16 x i16]* %4, i64 0, i64 1
  %8 = getelementptr inbounds [16 x i16], [16 x i16]* %4, i64 0, i64 2
  %9 = getelementptr inbounds [16 x i16], [16 x i16]* %4, i64 0, i64 3
  %10 = getelementptr inbounds [16 x i16], [16 x i16]* %4, i64 0, i64 4
  %11 = getelementptr inbounds [16 x i16], [16 x i16]* %4, i64 0, i64 5
  %12 = getelementptr inbounds [16 x i16], [16 x i16]* %4, i64 0, i64 6
  %13 = getelementptr inbounds [16 x i16], [16 x i16]* %4, i64 0, i64 7
  %14 = getelementptr inbounds [16 x i16], [16 x i16]* %4, i64 0, i64 8
  %15 = getelementptr inbounds [16 x i16], [16 x i16]* %4, i64 0, i64 9
  %16 = getelementptr inbounds [16 x i16], [16 x i16]* %4, i64 0, i64 10
  %17 = getelementptr inbounds [16 x i16], [16 x i16]* %4, i64 0, i64 11
  %18 = getelementptr inbounds [16 x i16], [16 x i16]* %4, i64 0, i64 12
  %19 = getelementptr inbounds [16 x i16], [16 x i16]* %4, i64 0, i64 13
  %20 = getelementptr inbounds [16 x i16], [16 x i16]* %4, i64 0, i64 14
  %21 = getelementptr inbounds [16 x i16], [16 x i16]* %4, i64 0, i64 15
  %22 = getelementptr inbounds [16 x i16], [16 x i16]* %4, i64 0, i64 8
  %23 = bitcast i16* %22 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %23, i8 -86, i64 16, i1 false)
  %24 = load i16, i16* %1, align 2
  %25 = sext i16 %24 to i32
  %26 = getelementptr inbounds i16, i16* %1, i64 8
  %27 = load i16, i16* %26, align 2
  %28 = sext i16 %27 to i32
  %29 = add nsw i32 %28, %25
  %30 = sub nsw i32 %25, %28
  %31 = getelementptr inbounds i16, i16* %1, i64 4
  %32 = load i16, i16* %31, align 2
  %33 = sext i16 %32 to i32
  %34 = mul nsw i32 %33, 35468
  %35 = ashr i32 %34, 16
  %36 = getelementptr inbounds i16, i16* %1, i64 12
  %37 = load i16, i16* %36, align 2
  %38 = sext i16 %37 to i32
  %39 = mul nsw i32 %38, 20091
  %40 = ashr i32 %39, 16
  %41 = sub nsw i32 %35, %38
  %42 = sub nsw i32 %41, %40
  %43 = mul nsw i32 %33, 20091
  %44 = ashr i32 %43, 16
  %45 = add nsw i32 %44, %33
  %46 = mul nsw i32 %38, 35468
  %47 = ashr i32 %46, 16
  %48 = add nsw i32 %45, %47
  %49 = add nsw i32 %48, %29
  %50 = trunc i32 %49 to i16
  store i16 %50, i16* %6, align 16
  %51 = add nsw i32 %42, %30
  %52 = trunc i32 %51 to i16
  store i16 %52, i16* %7, align 2
  %53 = sub nsw i32 %30, %42
  %54 = trunc i32 %53 to i16
  store i16 %54, i16* %8, align 4
  %55 = sub nsw i32 %29, %48
  %56 = trunc i32 %55 to i16
  store i16 %56, i16* %9, align 2
  %57 = getelementptr inbounds i16, i16* %1, i64 1
  %58 = load i16, i16* %57, align 2
  %59 = sext i16 %58 to i32
  %60 = getelementptr inbounds i16, i16* %1, i64 9
  %61 = load i16, i16* %60, align 2
  %62 = sext i16 %61 to i32
  %63 = add nsw i32 %62, %59
  %64 = sub nsw i32 %59, %62
  %65 = getelementptr inbounds i16, i16* %1, i64 5
  %66 = load i16, i16* %65, align 2
  %67 = sext i16 %66 to i32
  %68 = mul nsw i32 %67, 35468
  %69 = ashr i32 %68, 16
  %70 = getelementptr inbounds i16, i16* %1, i64 13
  %71 = load i16, i16* %70, align 2
  %72 = sext i16 %71 to i32
  %73 = mul nsw i32 %72, 20091
  %74 = ashr i32 %73, 16
  %75 = sub nsw i32 %69, %72
  %76 = sub nsw i32 %75, %74
  %77 = mul nsw i32 %67, 20091
  %78 = ashr i32 %77, 16
  %79 = add nsw i32 %78, %67
  %80 = mul nsw i32 %72, 35468
  %81 = ashr i32 %80, 16
  %82 = add nsw i32 %79, %81
  %83 = add nsw i32 %82, %63
  %84 = trunc i32 %83 to i16
  store i16 %84, i16* %10, align 8
  %85 = add nsw i32 %76, %64
  %86 = trunc i32 %85 to i16
  store i16 %86, i16* %11, align 2
  %87 = sub nsw i32 %64, %76
  %88 = trunc i32 %87 to i16
  store i16 %88, i16* %12, align 4
  %89 = sub nsw i32 %63, %82
  %90 = trunc i32 %89 to i16
  store i16 %90, i16* %13, align 2
  %91 = getelementptr inbounds i16, i16* %1, i64 2
  %92 = load i16, i16* %91, align 2
  %93 = sext i16 %92 to i32
  %94 = getelementptr inbounds i16, i16* %1, i64 10
  %95 = load i16, i16* %94, align 2
  %96 = sext i16 %95 to i32
  %97 = add nsw i32 %96, %93
  %98 = sub nsw i32 %93, %96
  %99 = getelementptr inbounds i16, i16* %1, i64 6
  %100 = load i16, i16* %99, align 2
  %101 = sext i16 %100 to i32
  %102 = mul nsw i32 %101, 35468
  %103 = ashr i32 %102, 16
  %104 = getelementptr inbounds i16, i16* %1, i64 14
  %105 = load i16, i16* %104, align 2
  %106 = sext i16 %105 to i32
  %107 = mul nsw i32 %106, 20091
  %108 = ashr i32 %107, 16
  %109 = sub nsw i32 %103, %106
  %110 = sub nsw i32 %109, %108
  %111 = mul nsw i32 %101, 20091
  %112 = ashr i32 %111, 16
  %113 = add nsw i32 %112, %101
  %114 = mul nsw i32 %106, 35468
  %115 = ashr i32 %114, 16
  %116 = add nsw i32 %113, %115
  %117 = add nsw i32 %116, %97
  %118 = trunc i32 %117 to i16
  store i16 %118, i16* %14, align 16
  %119 = add nsw i32 %110, %98
  %120 = trunc i32 %119 to i16
  store i16 %120, i16* %15, align 2
  %121 = sub nsw i32 %98, %110
  %122 = trunc i32 %121 to i16
  store i16 %122, i16* %16, align 4
  %123 = sub nsw i32 %97, %116
  %124 = trunc i32 %123 to i16
  store i16 %124, i16* %17, align 2
  %125 = getelementptr inbounds i16, i16* %1, i64 3
  %126 = load i16, i16* %125, align 2
  %127 = sext i16 %126 to i32
  %128 = getelementptr inbounds i16, i16* %1, i64 11
  %129 = load i16, i16* %128, align 2
  %130 = sext i16 %129 to i32
  %131 = add nsw i32 %130, %127
  %132 = sub nsw i32 %127, %130
  %133 = getelementptr inbounds i16, i16* %1, i64 7
  %134 = load i16, i16* %133, align 2
  %135 = sext i16 %134 to i32
  %136 = mul nsw i32 %135, 35468
  %137 = ashr i32 %136, 16
  %138 = getelementptr inbounds i16, i16* %1, i64 15
  %139 = load i16, i16* %138, align 2
  %140 = sext i16 %139 to i32
  %141 = mul nsw i32 %140, 20091
  %142 = ashr i32 %141, 16
  %143 = sub nsw i32 %137, %140
  %144 = sub nsw i32 %143, %142
  %145 = mul nsw i32 %135, 20091
  %146 = ashr i32 %145, 16
  %147 = add nsw i32 %146, %135
  %148 = mul nsw i32 %140, 35468
  %149 = ashr i32 %148, 16
  %150 = add nsw i32 %147, %149
  %151 = bitcast i16* %1 to <8 x i16>*
  store <8 x i16> zeroinitializer, <8 x i16>* %151, align 2
  %152 = bitcast i16* %26 to <8 x i16>*
  store <8 x i16> zeroinitializer, <8 x i16>* %152, align 2
  %153 = add nsw i32 %150, %131
  %154 = trunc i32 %153 to i16
  store i16 %154, i16* %18, align 8
  %155 = add nsw i32 %144, %132
  %156 = trunc i32 %155 to i16
  store i16 %156, i16* %19, align 2
  %157 = sub nsw i32 %132, %144
  %158 = trunc i32 %157 to i16
  store i16 %158, i16* %20, align 4
  %159 = sub nsw i32 %131, %150
  %160 = trunc i32 %159 to i16
  store i16 %160, i16* %21, align 2
  br label %161

161:                                              ; preds = %240, %3
  %162 = phi i64 [ 0, %3 ], [ %238, %240 ]
  %163 = phi i8* [ %0, %3 ], [ %241, %240 ]
  %164 = getelementptr inbounds [16 x i16], [16 x i16]* %4, i64 0, i64 %162
  %165 = load i16, i16* %164, align 2
  %166 = sext i16 %165 to i32
  %167 = add nuw nsw i64 %162, 8
  %168 = getelementptr inbounds [16 x i16], [16 x i16]* %4, i64 0, i64 %167
  %169 = load i16, i16* %168, align 2
  %170 = sext i16 %169 to i32
  %171 = add nsw i32 %170, %166
  %172 = sub nsw i32 %166, %170
  %173 = add nuw nsw i64 %162, 4
  %174 = getelementptr inbounds [16 x i16], [16 x i16]* %4, i64 0, i64 %173
  %175 = load i16, i16* %174, align 2
  %176 = sext i16 %175 to i32
  %177 = mul nsw i32 %176, 35468
  %178 = ashr i32 %177, 16
  %179 = add nuw nsw i64 %162, 12
  %180 = getelementptr inbounds [16 x i16], [16 x i16]* %4, i64 0, i64 %179
  %181 = load i16, i16* %180, align 2
  %182 = sext i16 %181 to i32
  %183 = mul nsw i32 %182, 20091
  %184 = ashr i32 %183, 16
  %185 = sub nsw i32 %178, %182
  %186 = sub nsw i32 %185, %184
  %187 = mul nsw i32 %176, 20091
  %188 = ashr i32 %187, 16
  %189 = add nsw i32 %188, %176
  %190 = mul nsw i32 %182, 35468
  %191 = ashr i32 %190, 16
  %192 = add nsw i32 %189, %191
  %193 = load i8, i8* %163, align 1
  %194 = zext i8 %193 to i32
  %195 = add nsw i32 %171, 4
  %196 = add nsw i32 %195, %192
  %197 = ashr i32 %196, 3
  %198 = add nsw i32 %197, %194
  %199 = icmp ugt i32 %198, 255
  %200 = ashr i32 %198, 31
  %201 = xor i32 %200, 255
  %202 = select i1 %199, i32 %201, i32 %198
  %203 = trunc i32 %202 to i8
  store i8 %203, i8* %163, align 1
  %204 = getelementptr inbounds i8, i8* %163, i64 1
  %205 = load i8, i8* %204, align 1
  %206 = zext i8 %205 to i32
  %207 = add nsw i32 %172, 4
  %208 = add nsw i32 %207, %186
  %209 = ashr i32 %208, 3
  %210 = add nsw i32 %209, %206
  %211 = icmp ugt i32 %210, 255
  %212 = ashr i32 %210, 31
  %213 = xor i32 %212, 255
  %214 = select i1 %211, i32 %213, i32 %210
  %215 = trunc i32 %214 to i8
  store i8 %215, i8* %204, align 1
  %216 = getelementptr inbounds i8, i8* %163, i64 2
  %217 = load i8, i8* %216, align 1
  %218 = zext i8 %217 to i32
  %219 = sub nsw i32 %207, %186
  %220 = ashr i32 %219, 3
  %221 = add nsw i32 %220, %218
  %222 = icmp ugt i32 %221, 255
  %223 = ashr i32 %221, 31
  %224 = xor i32 %223, 255
  %225 = select i1 %222, i32 %224, i32 %221
  %226 = trunc i32 %225 to i8
  store i8 %226, i8* %216, align 1
  %227 = getelementptr inbounds i8, i8* %163, i64 3
  %228 = load i8, i8* %227, align 1
  %229 = zext i8 %228 to i32
  %230 = sub nsw i32 %195, %192
  %231 = ashr i32 %230, 3
  %232 = add nsw i32 %231, %229
  %233 = icmp ugt i32 %232, 255
  %234 = ashr i32 %232, 31
  %235 = xor i32 %234, 255
  %236 = select i1 %233, i32 %235, i32 %232
  %237 = trunc i32 %236 to i8
  store i8 %237, i8* %227, align 1
  %238 = add nuw nsw i64 %162, 1
  %239 = icmp eq i64 %238, 4
  br i1 %239, label %242, label %240

240:                                              ; preds = %161
  %241 = getelementptr inbounds i8, i8* %163, i64 %2
  br label %161

242:                                              ; preds = %161
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %5) #5
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define internal void @vp8_idct_dc_add_c(i8* nocapture, i16* nocapture, i64) #2 {
  %4 = load i16, i16* %1, align 2
  %5 = sext i16 %4 to i32
  %6 = add nsw i32 %5, 4
  %7 = ashr i32 %6, 3
  store i16 0, i16* %1, align 2
  %8 = load i8, i8* %0, align 1
  %9 = zext i8 %8 to i32
  %10 = add nsw i32 %7, %9
  %11 = icmp ugt i32 %10, 255
  %12 = ashr i32 %10, 31
  %13 = xor i32 %12, 255
  %14 = select i1 %11, i32 %13, i32 %10
  %15 = trunc i32 %14 to i8
  store i8 %15, i8* %0, align 1
  %16 = getelementptr inbounds i8, i8* %0, i64 1
  %17 = load i8, i8* %16, align 1
  %18 = zext i8 %17 to i32
  %19 = add nsw i32 %7, %18
  %20 = icmp ugt i32 %19, 255
  %21 = ashr i32 %19, 31
  %22 = xor i32 %21, 255
  %23 = select i1 %20, i32 %22, i32 %19
  %24 = trunc i32 %23 to i8
  store i8 %24, i8* %16, align 1
  %25 = getelementptr inbounds i8, i8* %0, i64 2
  %26 = load i8, i8* %25, align 1
  %27 = zext i8 %26 to i32
  %28 = add nsw i32 %7, %27
  %29 = icmp ugt i32 %28, 255
  %30 = ashr i32 %28, 31
  %31 = xor i32 %30, 255
  %32 = select i1 %29, i32 %31, i32 %28
  %33 = trunc i32 %32 to i8
  store i8 %33, i8* %25, align 1
  %34 = getelementptr inbounds i8, i8* %0, i64 3
  %35 = load i8, i8* %34, align 1
  %36 = zext i8 %35 to i32
  %37 = add nsw i32 %7, %36
  %38 = icmp ugt i32 %37, 255
  %39 = ashr i32 %37, 31
  %40 = xor i32 %39, 255
  %41 = select i1 %38, i32 %40, i32 %37
  %42 = trunc i32 %41 to i8
  store i8 %42, i8* %34, align 1
  %43 = getelementptr inbounds i8, i8* %0, i64 %2
  %44 = load i8, i8* %43, align 1
  %45 = zext i8 %44 to i32
  %46 = add nsw i32 %7, %45
  %47 = icmp ugt i32 %46, 255
  %48 = ashr i32 %46, 31
  %49 = xor i32 %48, 255
  %50 = select i1 %47, i32 %49, i32 %46
  %51 = trunc i32 %50 to i8
  store i8 %51, i8* %43, align 1
  %52 = getelementptr inbounds i8, i8* %43, i64 1
  %53 = load i8, i8* %52, align 1
  %54 = zext i8 %53 to i32
  %55 = add nsw i32 %7, %54
  %56 = icmp ugt i32 %55, 255
  %57 = ashr i32 %55, 31
  %58 = xor i32 %57, 255
  %59 = select i1 %56, i32 %58, i32 %55
  %60 = trunc i32 %59 to i8
  store i8 %60, i8* %52, align 1
  %61 = getelementptr inbounds i8, i8* %43, i64 2
  %62 = load i8, i8* %61, align 1
  %63 = zext i8 %62 to i32
  %64 = add nsw i32 %7, %63
  %65 = icmp ugt i32 %64, 255
  %66 = ashr i32 %64, 31
  %67 = xor i32 %66, 255
  %68 = select i1 %65, i32 %67, i32 %64
  %69 = trunc i32 %68 to i8
  store i8 %69, i8* %61, align 1
  %70 = getelementptr inbounds i8, i8* %43, i64 3
  %71 = load i8, i8* %70, align 1
  %72 = zext i8 %71 to i32
  %73 = add nsw i32 %7, %72
  %74 = icmp ugt i32 %73, 255
  %75 = ashr i32 %73, 31
  %76 = xor i32 %75, 255
  %77 = select i1 %74, i32 %76, i32 %73
  %78 = trunc i32 %77 to i8
  store i8 %78, i8* %70, align 1
  %79 = getelementptr inbounds i8, i8* %43, i64 %2
  %80 = load i8, i8* %79, align 1
  %81 = zext i8 %80 to i32
  %82 = add nsw i32 %7, %81
  %83 = icmp ugt i32 %82, 255
  %84 = ashr i32 %82, 31
  %85 = xor i32 %84, 255
  %86 = select i1 %83, i32 %85, i32 %82
  %87 = trunc i32 %86 to i8
  store i8 %87, i8* %79, align 1
  %88 = getelementptr inbounds i8, i8* %79, i64 1
  %89 = load i8, i8* %88, align 1
  %90 = zext i8 %89 to i32
  %91 = add nsw i32 %7, %90
  %92 = icmp ugt i32 %91, 255
  %93 = ashr i32 %91, 31
  %94 = xor i32 %93, 255
  %95 = select i1 %92, i32 %94, i32 %91
  %96 = trunc i32 %95 to i8
  store i8 %96, i8* %88, align 1
  %97 = getelementptr inbounds i8, i8* %79, i64 2
  %98 = load i8, i8* %97, align 1
  %99 = zext i8 %98 to i32
  %100 = add nsw i32 %7, %99
  %101 = icmp ugt i32 %100, 255
  %102 = ashr i32 %100, 31
  %103 = xor i32 %102, 255
  %104 = select i1 %101, i32 %103, i32 %100
  %105 = trunc i32 %104 to i8
  store i8 %105, i8* %97, align 1
  %106 = getelementptr inbounds i8, i8* %79, i64 3
  %107 = load i8, i8* %106, align 1
  %108 = zext i8 %107 to i32
  %109 = add nsw i32 %7, %108
  %110 = icmp ugt i32 %109, 255
  %111 = ashr i32 %109, 31
  %112 = xor i32 %111, 255
  %113 = select i1 %110, i32 %112, i32 %109
  %114 = trunc i32 %113 to i8
  store i8 %114, i8* %106, align 1
  %115 = getelementptr inbounds i8, i8* %79, i64 %2
  %116 = load i8, i8* %115, align 1
  %117 = zext i8 %116 to i32
  %118 = add nsw i32 %7, %117
  %119 = icmp ugt i32 %118, 255
  %120 = ashr i32 %118, 31
  %121 = xor i32 %120, 255
  %122 = select i1 %119, i32 %121, i32 %118
  %123 = trunc i32 %122 to i8
  store i8 %123, i8* %115, align 1
  %124 = getelementptr inbounds i8, i8* %115, i64 1
  %125 = load i8, i8* %124, align 1
  %126 = zext i8 %125 to i32
  %127 = add nsw i32 %7, %126
  %128 = icmp ugt i32 %127, 255
  %129 = ashr i32 %127, 31
  %130 = xor i32 %129, 255
  %131 = select i1 %128, i32 %130, i32 %127
  %132 = trunc i32 %131 to i8
  store i8 %132, i8* %124, align 1
  %133 = getelementptr inbounds i8, i8* %115, i64 2
  %134 = load i8, i8* %133, align 1
  %135 = zext i8 %134 to i32
  %136 = add nsw i32 %7, %135
  %137 = icmp ugt i32 %136, 255
  %138 = ashr i32 %136, 31
  %139 = xor i32 %138, 255
  %140 = select i1 %137, i32 %139, i32 %136
  %141 = trunc i32 %140 to i8
  store i8 %141, i8* %133, align 1
  %142 = getelementptr inbounds i8, i8* %115, i64 3
  %143 = load i8, i8* %142, align 1
  %144 = zext i8 %143 to i32
  %145 = add nsw i32 %7, %144
  %146 = icmp ugt i32 %145, 255
  %147 = ashr i32 %145, 31
  %148 = xor i32 %147, 255
  %149 = select i1 %146, i32 %148, i32 %145
  %150 = trunc i32 %149 to i8
  store i8 %150, i8* %142, align 1
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define internal void @vp8_idct_dc_add4y_c(i8* nocapture, [16 x i16]* nocapture, i64) #2 {
  %4 = getelementptr inbounds [16 x i16], [16 x i16]* %1, i64 0, i64 0
  tail call void @vp8_idct_dc_add_c(i8* %0, i16* %4, i64 %2)
  %5 = getelementptr inbounds i8, i8* %0, i64 4
  %6 = getelementptr inbounds [16 x i16], [16 x i16]* %1, i64 1, i64 0
  tail call void @vp8_idct_dc_add_c(i8* %5, i16* %6, i64 %2)
  %7 = getelementptr inbounds i8, i8* %0, i64 8
  %8 = getelementptr inbounds [16 x i16], [16 x i16]* %1, i64 2, i64 0
  tail call void @vp8_idct_dc_add_c(i8* %7, i16* %8, i64 %2)
  %9 = getelementptr inbounds i8, i8* %0, i64 12
  %10 = getelementptr inbounds [16 x i16], [16 x i16]* %1, i64 3, i64 0
  tail call void @vp8_idct_dc_add_c(i8* %9, i16* %10, i64 %2)
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define internal void @vp8_idct_dc_add4uv_c(i8* nocapture, [16 x i16]* nocapture, i64) #2 {
  %4 = getelementptr inbounds [16 x i16], [16 x i16]* %1, i64 0, i64 0
  tail call void @vp8_idct_dc_add_c(i8* %0, i16* %4, i64 %2)
  %5 = getelementptr inbounds i8, i8* %0, i64 4
  %6 = getelementptr inbounds [16 x i16], [16 x i16]* %1, i64 1, i64 0
  tail call void @vp8_idct_dc_add_c(i8* %5, i16* %6, i64 %2)
  %7 = shl nsw i64 %2, 2
  %8 = getelementptr inbounds i8, i8* %0, i64 %7
  %9 = getelementptr inbounds [16 x i16], [16 x i16]* %1, i64 2, i64 0
  tail call void @vp8_idct_dc_add_c(i8* %8, i16* %9, i64 %2)
  %10 = getelementptr inbounds i8, i8* %8, i64 4
  %11 = getelementptr inbounds [16 x i16], [16 x i16]* %1, i64 3, i64 0
  tail call void @vp8_idct_dc_add_c(i8* %10, i16* %11, i64 %2)
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define internal void @vp8_v_loop_filter16_c(i8*, i64, i32, i32, i32) #2 {
  %6 = mul nsw i64 %1, -3
  %7 = mul nsw i64 %1, -2
  %8 = sub nsw i64 0, %1
  %9 = shl nsw i64 %1, 1
  %10 = mul nsw i64 %1, 3
  %11 = mul nsw i64 %1, -4
  br label %12

12:                                               ; preds = %168, %5
  %13 = phi i64 [ 0, %5 ], [ %169, %168 ]
  %14 = getelementptr inbounds i8, i8* %0, i64 %13
  %15 = getelementptr inbounds i8, i8* %14, i64 %6
  %16 = load i8, i8* %15, align 1
  %17 = zext i8 %16 to i32
  %18 = getelementptr inbounds i8, i8* %14, i64 %7
  %19 = load i8, i8* %18, align 1
  %20 = zext i8 %19 to i32
  %21 = getelementptr inbounds i8, i8* %14, i64 %8
  %22 = load i8, i8* %21, align 1
  %23 = zext i8 %22 to i32
  %24 = load i8, i8* %14, align 1
  %25 = zext i8 %24 to i32
  %26 = getelementptr inbounds i8, i8* %14, i64 %1
  %27 = load i8, i8* %26, align 1
  %28 = zext i8 %27 to i32
  %29 = getelementptr inbounds i8, i8* %14, i64 %9
  %30 = load i8, i8* %29, align 1
  %31 = zext i8 %30 to i32
  %32 = getelementptr inbounds i8, i8* %14, i64 %10
  %33 = load i8, i8* %32, align 1
  %34 = zext i8 %33 to i32
  %35 = sub nsw i32 %23, %25
  %36 = icmp slt i32 %35, 0
  %37 = sub nsw i32 0, %35
  %38 = select i1 %36, i32 %37, i32 %35
  %39 = shl nuw nsw i32 %38, 1
  %40 = sub nsw i32 %20, %28
  %41 = icmp slt i32 %40, 0
  %42 = sub nsw i32 0, %40
  %43 = select i1 %41, i32 %42, i32 %40
  %44 = lshr i32 %43, 1
  %45 = add nuw nsw i32 %44, %39
  %46 = icmp sgt i32 %45, %2
  br i1 %46, label %168, label %47

47:                                               ; preds = %12
  %48 = getelementptr inbounds i8, i8* %14, i64 %11
  %49 = load i8, i8* %48, align 1
  %50 = zext i8 %49 to i32
  %51 = sub nsw i32 %50, %17
  %52 = icmp slt i32 %51, 0
  %53 = sub nsw i32 0, %51
  %54 = select i1 %52, i32 %53, i32 %51
  %55 = icmp sgt i32 %54, %3
  br i1 %55, label %168, label %56

56:                                               ; preds = %47
  %57 = sub nsw i32 %17, %20
  %58 = icmp slt i32 %57, 0
  %59 = sub nsw i32 0, %57
  %60 = select i1 %58, i32 %59, i32 %57
  %61 = icmp sgt i32 %60, %3
  br i1 %61, label %168, label %62

62:                                               ; preds = %56
  %63 = sub nsw i32 %20, %23
  %64 = icmp slt i32 %63, 0
  %65 = sub nsw i32 0, %63
  %66 = select i1 %64, i32 %65, i32 %63
  %67 = icmp sgt i32 %66, %3
  br i1 %67, label %168, label %68

68:                                               ; preds = %62
  %69 = sub nsw i32 %34, %31
  %70 = icmp slt i32 %69, 0
  %71 = sub nsw i32 0, %69
  %72 = select i1 %70, i32 %71, i32 %69
  %73 = icmp sgt i32 %72, %3
  br i1 %73, label %168, label %74

74:                                               ; preds = %68
  %75 = sub nsw i32 %31, %28
  %76 = icmp slt i32 %75, 0
  %77 = sub nsw i32 0, %75
  %78 = select i1 %76, i32 %77, i32 %75
  %79 = icmp sgt i32 %78, %3
  br i1 %79, label %168, label %80

80:                                               ; preds = %74
  %81 = sub nsw i32 %28, %25
  %82 = icmp slt i32 %81, 0
  %83 = sub nsw i32 0, %81
  %84 = select i1 %82, i32 %83, i32 %81
  %85 = icmp sgt i32 %84, %3
  br i1 %85, label %168, label %86

86:                                               ; preds = %80
  %87 = icmp sgt i32 %66, %4
  %88 = icmp sgt i32 %84, %4
  %89 = or i1 %87, %88
  br i1 %89, label %90, label %120

90:                                               ; preds = %86
  %91 = sub nsw i32 %25, %23
  %92 = mul nsw i32 %91, 3
  %93 = add nuw nsw i32 %20, 128
  %94 = sub nsw i32 %93, %28
  %95 = sext i32 %94 to i64
  %96 = getelementptr inbounds i8, i8* getelementptr inbounds ([2304 x i8], [2304 x i8]* @ff_crop_tab, i64 0, i64 1024), i64 %95
  %97 = load i8, i8* %96, align 1
  %98 = zext i8 %97 to i32
  %99 = add nsw i32 %92, %98
  %100 = sext i32 %99 to i64
  %101 = getelementptr inbounds i8, i8* getelementptr inbounds ([2304 x i8], [2304 x i8]* @ff_crop_tab, i64 0, i64 1024), i64 %100
  %102 = load i8, i8* %101, align 1
  %103 = zext i8 %102 to i32
  %104 = icmp ult i32 %103, 251
  %105 = select i1 %104, i32 %103, i32 251
  %106 = add nsw i32 %105, -124
  %107 = ashr i32 %106, 3
  %108 = icmp ult i32 %103, 252
  %109 = select i1 %108, i32 %103, i32 252
  %110 = add nsw i32 %109, -125
  %111 = ashr i32 %110, 3
  %112 = add nsw i32 %111, %23
  %113 = sext i32 %112 to i64
  %114 = getelementptr inbounds i8, i8* getelementptr inbounds ([2304 x i8], [2304 x i8]* @ff_crop_tab, i64 0, i64 1024), i64 %113
  %115 = load i8, i8* %114, align 1
  store i8 %115, i8* %21, align 1
  %116 = sub nsw i32 %25, %107
  %117 = sext i32 %116 to i64
  %118 = getelementptr inbounds i8, i8* getelementptr inbounds ([2304 x i8], [2304 x i8]* @ff_crop_tab, i64 0, i64 1024), i64 %117
  %119 = load i8, i8* %118, align 1
  store i8 %119, i8* %14, align 1
  br label %168

120:                                              ; preds = %86
  %121 = add nuw nsw i32 %20, 128
  %122 = sub nsw i32 %121, %28
  %123 = sext i32 %122 to i64
  %124 = getelementptr inbounds i8, i8* getelementptr inbounds ([2304 x i8], [2304 x i8]* @ff_crop_tab, i64 0, i64 1024), i64 %123
  %125 = load i8, i8* %124, align 1
  %126 = zext i8 %125 to i32
  %127 = sub nsw i32 %25, %23
  %128 = mul nsw i32 %127, 3
  %129 = add nsw i32 %128, %126
  %130 = sext i32 %129 to i64
  %131 = getelementptr inbounds i8, i8* getelementptr inbounds ([2304 x i8], [2304 x i8]* @ff_crop_tab, i64 0, i64 1024), i64 %130
  %132 = load i8, i8* %131, align 1
  %133 = zext i8 %132 to i32
  %134 = add nsw i32 %133, -128
  %135 = mul nsw i32 %134, 27
  %136 = add nsw i32 %135, 63
  %137 = ashr i32 %136, 7
  %138 = mul nsw i32 %134, 18
  %139 = add nsw i32 %138, 63
  %140 = ashr i32 %139, 7
  %141 = mul nsw i32 %134, 9
  %142 = add nsw i32 %141, 63
  %143 = ashr i32 %142, 7
  %144 = add nsw i32 %143, %17
  %145 = sext i32 %144 to i64
  %146 = getelementptr inbounds i8, i8* getelementptr inbounds ([2304 x i8], [2304 x i8]* @ff_crop_tab, i64 0, i64 1024), i64 %145
  %147 = load i8, i8* %146, align 1
  store i8 %147, i8* %15, align 1
  %148 = add nsw i32 %140, %20
  %149 = sext i32 %148 to i64
  %150 = getelementptr inbounds i8, i8* getelementptr inbounds ([2304 x i8], [2304 x i8]* @ff_crop_tab, i64 0, i64 1024), i64 %149
  %151 = load i8, i8* %150, align 1
  store i8 %151, i8* %18, align 1
  %152 = add nsw i32 %137, %23
  %153 = sext i32 %152 to i64
  %154 = getelementptr inbounds i8, i8* getelementptr inbounds ([2304 x i8], [2304 x i8]* @ff_crop_tab, i64 0, i64 1024), i64 %153
  %155 = load i8, i8* %154, align 1
  store i8 %155, i8* %21, align 1
  %156 = sub nsw i32 %25, %137
  %157 = sext i32 %156 to i64
  %158 = getelementptr inbounds i8, i8* getelementptr inbounds ([2304 x i8], [2304 x i8]* @ff_crop_tab, i64 0, i64 1024), i64 %157
  %159 = load i8, i8* %158, align 1
  store i8 %159, i8* %14, align 1
  %160 = sub nsw i32 %28, %140
  %161 = sext i32 %160 to i64
  %162 = getelementptr inbounds i8, i8* getelementptr inbounds ([2304 x i8], [2304 x i8]* @ff_crop_tab, i64 0, i64 1024), i64 %161
  %163 = load i8, i8* %162, align 1
  store i8 %163, i8* %26, align 1
  %164 = sub nsw i32 %31, %143
  %165 = sext i32 %164 to i64
  %166 = getelementptr inbounds i8, i8* getelementptr inbounds ([2304 x i8], [2304 x i8]* @ff_crop_tab, i64 0, i64 1024), i64 %165
  %167 = load i8, i8* %166, align 1
  store i8 %167, i8* %29, align 1
  br label %168

168:                                              ; preds = %12, %47, %56, %62, %68, %74, %80, %120, %90
  %169 = add nuw nsw i64 %13, 1
  %170 = icmp eq i64 %169, 16
  br i1 %170, label %171, label %12

171:                                              ; preds = %168
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define internal void @vp8_h_loop_filter16_c(i8*, i64, i32, i32, i32) #2 {
  br label %6

6:                                                ; preds = %163, %5
  %7 = phi i64 [ 0, %5 ], [ %164, %163 ]
  %8 = mul nsw i64 %7, %1
  %9 = getelementptr inbounds i8, i8* %0, i64 %8
  %10 = getelementptr inbounds i8, i8* %9, i64 -3
  %11 = load i8, i8* %10, align 1
  %12 = zext i8 %11 to i32
  %13 = getelementptr inbounds i8, i8* %9, i64 -2
  %14 = load i8, i8* %13, align 1
  %15 = zext i8 %14 to i32
  %16 = getelementptr inbounds i8, i8* %9, i64 -1
  %17 = load i8, i8* %16, align 1
  %18 = zext i8 %17 to i32
  %19 = load i8, i8* %9, align 1
  %20 = zext i8 %19 to i32
  %21 = getelementptr inbounds i8, i8* %9, i64 1
  %22 = load i8, i8* %21, align 1
  %23 = zext i8 %22 to i32
  %24 = getelementptr inbounds i8, i8* %9, i64 2
  %25 = load i8, i8* %24, align 1
  %26 = zext i8 %25 to i32
  %27 = getelementptr inbounds i8, i8* %9, i64 3
  %28 = load i8, i8* %27, align 1
  %29 = zext i8 %28 to i32
  %30 = sub nsw i32 %18, %20
  %31 = icmp slt i32 %30, 0
  %32 = sub nsw i32 0, %30
  %33 = select i1 %31, i32 %32, i32 %30
  %34 = shl nuw nsw i32 %33, 1
  %35 = sub nsw i32 %15, %23
  %36 = icmp slt i32 %35, 0
  %37 = sub nsw i32 0, %35
  %38 = select i1 %36, i32 %37, i32 %35
  %39 = lshr i32 %38, 1
  %40 = add nuw nsw i32 %39, %34
  %41 = icmp sgt i32 %40, %2
  br i1 %41, label %163, label %42

42:                                               ; preds = %6
  %43 = getelementptr inbounds i8, i8* %9, i64 -4
  %44 = load i8, i8* %43, align 1
  %45 = zext i8 %44 to i32
  %46 = sub nsw i32 %45, %12
  %47 = icmp slt i32 %46, 0
  %48 = sub nsw i32 0, %46
  %49 = select i1 %47, i32 %48, i32 %46
  %50 = icmp sgt i32 %49, %3
  br i1 %50, label %163, label %51

51:                                               ; preds = %42
  %52 = sub nsw i32 %12, %15
  %53 = icmp slt i32 %52, 0
  %54 = sub nsw i32 0, %52
  %55 = select i1 %53, i32 %54, i32 %52
  %56 = icmp sgt i32 %55, %3
  br i1 %56, label %163, label %57

57:                                               ; preds = %51
  %58 = sub nsw i32 %15, %18
  %59 = icmp slt i32 %58, 0
  %60 = sub nsw i32 0, %58
  %61 = select i1 %59, i32 %60, i32 %58
  %62 = icmp sgt i32 %61, %3
  br i1 %62, label %163, label %63

63:                                               ; preds = %57
  %64 = sub nsw i32 %29, %26
  %65 = icmp slt i32 %64, 0
  %66 = sub nsw i32 0, %64
  %67 = select i1 %65, i32 %66, i32 %64
  %68 = icmp sgt i32 %67, %3
  br i1 %68, label %163, label %69

69:                                               ; preds = %63
  %70 = sub nsw i32 %26, %23
  %71 = icmp slt i32 %70, 0
  %72 = sub nsw i32 0, %70
  %73 = select i1 %71, i32 %72, i32 %70
  %74 = icmp sgt i32 %73, %3
  br i1 %74, label %163, label %75

75:                                               ; preds = %69
  %76 = sub nsw i32 %23, %20
  %77 = icmp slt i32 %76, 0
  %78 = sub nsw i32 0, %76
  %79 = select i1 %77, i32 %78, i32 %76
  %80 = icmp sgt i32 %79, %3
  br i1 %80, label %163, label %81

81:                                               ; preds = %75
  %82 = icmp sgt i32 %61, %4
  %83 = icmp sgt i32 %79, %4
  %84 = or i1 %82, %83
  br i1 %84, label %85, label %115

85:                                               ; preds = %81
  %86 = sub nsw i32 %20, %18
  %87 = mul nsw i32 %86, 3
  %88 = add nuw nsw i32 %15, 128
  %89 = sub nsw i32 %88, %23
  %90 = sext i32 %89 to i64
  %91 = getelementptr inbounds i8, i8* getelementptr inbounds ([2304 x i8], [2304 x i8]* @ff_crop_tab, i64 0, i64 1024), i64 %90
  %92 = load i8, i8* %91, align 1
  %93 = zext i8 %92 to i32
  %94 = add nsw i32 %87, %93
  %95 = sext i32 %94 to i64
  %96 = getelementptr inbounds i8, i8* getelementptr inbounds ([2304 x i8], [2304 x i8]* @ff_crop_tab, i64 0, i64 1024), i64 %95
  %97 = load i8, i8* %96, align 1
  %98 = zext i8 %97 to i32
  %99 = icmp ult i32 %98, 251
  %100 = select i1 %99, i32 %98, i32 251
  %101 = add nsw i32 %100, -124
  %102 = ashr i32 %101, 3
  %103 = icmp ult i32 %98, 252
  %104 = select i1 %103, i32 %98, i32 252
  %105 = add nsw i32 %104, -125
  %106 = ashr i32 %105, 3
  %107 = add nsw i32 %106, %18
  %108 = sext i32 %107 to i64
  %109 = getelementptr inbounds i8, i8* getelementptr inbounds ([2304 x i8], [2304 x i8]* @ff_crop_tab, i64 0, i64 1024), i64 %108
  %110 = load i8, i8* %109, align 1
  store i8 %110, i8* %16, align 1
  %111 = sub nsw i32 %20, %102
  %112 = sext i32 %111 to i64
  %113 = getelementptr inbounds i8, i8* getelementptr inbounds ([2304 x i8], [2304 x i8]* @ff_crop_tab, i64 0, i64 1024), i64 %112
  %114 = load i8, i8* %113, align 1
  store i8 %114, i8* %9, align 1
  br label %163

115:                                              ; preds = %81
  %116 = add nuw nsw i32 %15, 128
  %117 = sub nsw i32 %116, %23
  %118 = sext i32 %117 to i64
  %119 = getelementptr inbounds i8, i8* getelementptr inbounds ([2304 x i8], [2304 x i8]* @ff_crop_tab, i64 0, i64 1024), i64 %118
  %120 = load i8, i8* %119, align 1
  %121 = zext i8 %120 to i32
  %122 = sub nsw i32 %20, %18
  %123 = mul nsw i32 %122, 3
  %124 = add nsw i32 %123, %121
  %125 = sext i32 %124 to i64
  %126 = getelementptr inbounds i8, i8* getelementptr inbounds ([2304 x i8], [2304 x i8]* @ff_crop_tab, i64 0, i64 1024), i64 %125
  %127 = load i8, i8* %126, align 1
  %128 = zext i8 %127 to i32
  %129 = add nsw i32 %128, -128
  %130 = mul nsw i32 %129, 27
  %131 = add nsw i32 %130, 63
  %132 = ashr i32 %131, 7
  %133 = mul nsw i32 %129, 18
  %134 = add nsw i32 %133, 63
  %135 = ashr i32 %134, 7
  %136 = mul nsw i32 %129, 9
  %137 = add nsw i32 %136, 63
  %138 = ashr i32 %137, 7
  %139 = add nsw i32 %138, %12
  %140 = sext i32 %139 to i64
  %141 = getelementptr inbounds i8, i8* getelementptr inbounds ([2304 x i8], [2304 x i8]* @ff_crop_tab, i64 0, i64 1024), i64 %140
  %142 = load i8, i8* %141, align 1
  store i8 %142, i8* %10, align 1
  %143 = add nsw i32 %135, %15
  %144 = sext i32 %143 to i64
  %145 = getelementptr inbounds i8, i8* getelementptr inbounds ([2304 x i8], [2304 x i8]* @ff_crop_tab, i64 0, i64 1024), i64 %144
  %146 = load i8, i8* %145, align 1
  store i8 %146, i8* %13, align 1
  %147 = add nsw i32 %132, %18
  %148 = sext i32 %147 to i64
  %149 = getelementptr inbounds i8, i8* getelementptr inbounds ([2304 x i8], [2304 x i8]* @ff_crop_tab, i64 0, i64 1024), i64 %148
  %150 = load i8, i8* %149, align 1
  store i8 %150, i8* %16, align 1
  %151 = sub nsw i32 %20, %132
  %152 = sext i32 %151 to i64
  %153 = getelementptr inbounds i8, i8* getelementptr inbounds ([2304 x i8], [2304 x i8]* @ff_crop_tab, i64 0, i64 1024), i64 %152
  %154 = load i8, i8* %153, align 1
  store i8 %154, i8* %9, align 1
  %155 = sub nsw i32 %23, %135
  %156 = sext i32 %155 to i64
  %157 = getelementptr inbounds i8, i8* getelementptr inbounds ([2304 x i8], [2304 x i8]* @ff_crop_tab, i64 0, i64 1024), i64 %156
  %158 = load i8, i8* %157, align 1
  store i8 %158, i8* %21, align 1
  %159 = sub nsw i32 %26, %138
  %160 = sext i32 %159 to i64
  %161 = getelementptr inbounds i8, i8* getelementptr inbounds ([2304 x i8], [2304 x i8]* @ff_crop_tab, i64 0, i64 1024), i64 %160
  %162 = load i8, i8* %161, align 1
  store i8 %162, i8* %24, align 1
  br label %163

163:                                              ; preds = %6, %42, %51, %57, %63, %69, %75, %115, %85
  %164 = add nuw nsw i64 %7, 1
  %165 = icmp eq i64 %164, 16
  br i1 %165, label %166, label %6

166:                                              ; preds = %163
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define internal void @vp8_v_loop_filter8uv_c(i8* nocapture, i8* nocapture, i64, i32, i32, i32) #2 {
  %7 = mul nsw i64 %2, -3
  %8 = mul nsw i64 %2, -2
  %9 = sub nsw i64 0, %2
  %10 = shl nsw i64 %2, 1
  %11 = mul nsw i64 %2, 3
  %12 = mul nsw i64 %2, -4
  br label %13

13:                                               ; preds = %169, %6
  %14 = phi i64 [ 0, %6 ], [ %170, %169 ]
  %15 = getelementptr inbounds i8, i8* %0, i64 %14
  %16 = getelementptr inbounds i8, i8* %15, i64 %7
  %17 = load i8, i8* %16, align 1
  %18 = zext i8 %17 to i32
  %19 = getelementptr inbounds i8, i8* %15, i64 %8
  %20 = load i8, i8* %19, align 1
  %21 = zext i8 %20 to i32
  %22 = getelementptr inbounds i8, i8* %15, i64 %9
  %23 = load i8, i8* %22, align 1
  %24 = zext i8 %23 to i32
  %25 = load i8, i8* %15, align 1
  %26 = zext i8 %25 to i32
  %27 = getelementptr inbounds i8, i8* %15, i64 %2
  %28 = load i8, i8* %27, align 1
  %29 = zext i8 %28 to i32
  %30 = getelementptr inbounds i8, i8* %15, i64 %10
  %31 = load i8, i8* %30, align 1
  %32 = zext i8 %31 to i32
  %33 = getelementptr inbounds i8, i8* %15, i64 %11
  %34 = load i8, i8* %33, align 1
  %35 = zext i8 %34 to i32
  %36 = sub nsw i32 %24, %26
  %37 = icmp slt i32 %36, 0
  %38 = sub nsw i32 0, %36
  %39 = select i1 %37, i32 %38, i32 %36
  %40 = shl nuw nsw i32 %39, 1
  %41 = sub nsw i32 %21, %29
  %42 = icmp slt i32 %41, 0
  %43 = sub nsw i32 0, %41
  %44 = select i1 %42, i32 %43, i32 %41
  %45 = lshr i32 %44, 1
  %46 = add nuw nsw i32 %45, %40
  %47 = icmp sgt i32 %46, %3
  br i1 %47, label %169, label %48

48:                                               ; preds = %13
  %49 = getelementptr inbounds i8, i8* %15, i64 %12
  %50 = load i8, i8* %49, align 1
  %51 = zext i8 %50 to i32
  %52 = sub nsw i32 %51, %18
  %53 = icmp slt i32 %52, 0
  %54 = sub nsw i32 0, %52
  %55 = select i1 %53, i32 %54, i32 %52
  %56 = icmp sgt i32 %55, %4
  br i1 %56, label %169, label %57

57:                                               ; preds = %48
  %58 = sub nsw i32 %18, %21
  %59 = icmp slt i32 %58, 0
  %60 = sub nsw i32 0, %58
  %61 = select i1 %59, i32 %60, i32 %58
  %62 = icmp sgt i32 %61, %4
  br i1 %62, label %169, label %63

63:                                               ; preds = %57
  %64 = sub nsw i32 %21, %24
  %65 = icmp slt i32 %64, 0
  %66 = sub nsw i32 0, %64
  %67 = select i1 %65, i32 %66, i32 %64
  %68 = icmp sgt i32 %67, %4
  br i1 %68, label %169, label %69

69:                                               ; preds = %63
  %70 = sub nsw i32 %35, %32
  %71 = icmp slt i32 %70, 0
  %72 = sub nsw i32 0, %70
  %73 = select i1 %71, i32 %72, i32 %70
  %74 = icmp sgt i32 %73, %4
  br i1 %74, label %169, label %75

75:                                               ; preds = %69
  %76 = sub nsw i32 %32, %29
  %77 = icmp slt i32 %76, 0
  %78 = sub nsw i32 0, %76
  %79 = select i1 %77, i32 %78, i32 %76
  %80 = icmp sgt i32 %79, %4
  br i1 %80, label %169, label %81

81:                                               ; preds = %75
  %82 = sub nsw i32 %29, %26
  %83 = icmp slt i32 %82, 0
  %84 = sub nsw i32 0, %82
  %85 = select i1 %83, i32 %84, i32 %82
  %86 = icmp sgt i32 %85, %4
  br i1 %86, label %169, label %87

87:                                               ; preds = %81
  %88 = icmp sgt i32 %67, %5
  %89 = icmp sgt i32 %85, %5
  %90 = or i1 %88, %89
  br i1 %90, label %91, label %121

91:                                               ; preds = %87
  %92 = sub nsw i32 %26, %24
  %93 = mul nsw i32 %92, 3
  %94 = add nuw nsw i32 %21, 128
  %95 = sub nsw i32 %94, %29
  %96 = sext i32 %95 to i64
  %97 = getelementptr inbounds i8, i8* getelementptr inbounds ([2304 x i8], [2304 x i8]* @ff_crop_tab, i64 0, i64 1024), i64 %96
  %98 = load i8, i8* %97, align 1
  %99 = zext i8 %98 to i32
  %100 = add nsw i32 %93, %99
  %101 = sext i32 %100 to i64
  %102 = getelementptr inbounds i8, i8* getelementptr inbounds ([2304 x i8], [2304 x i8]* @ff_crop_tab, i64 0, i64 1024), i64 %101
  %103 = load i8, i8* %102, align 1
  %104 = zext i8 %103 to i32
  %105 = icmp ult i32 %104, 251
  %106 = select i1 %105, i32 %104, i32 251
  %107 = add nsw i32 %106, -124
  %108 = ashr i32 %107, 3
  %109 = icmp ult i32 %104, 252
  %110 = select i1 %109, i32 %104, i32 252
  %111 = add nsw i32 %110, -125
  %112 = ashr i32 %111, 3
  %113 = add nsw i32 %112, %24
  %114 = sext i32 %113 to i64
  %115 = getelementptr inbounds i8, i8* getelementptr inbounds ([2304 x i8], [2304 x i8]* @ff_crop_tab, i64 0, i64 1024), i64 %114
  %116 = load i8, i8* %115, align 1
  store i8 %116, i8* %22, align 1
  %117 = sub nsw i32 %26, %108
  %118 = sext i32 %117 to i64
  %119 = getelementptr inbounds i8, i8* getelementptr inbounds ([2304 x i8], [2304 x i8]* @ff_crop_tab, i64 0, i64 1024), i64 %118
  %120 = load i8, i8* %119, align 1
  store i8 %120, i8* %15, align 1
  br label %169

121:                                              ; preds = %87
  %122 = add nuw nsw i32 %21, 128
  %123 = sub nsw i32 %122, %29
  %124 = sext i32 %123 to i64
  %125 = getelementptr inbounds i8, i8* getelementptr inbounds ([2304 x i8], [2304 x i8]* @ff_crop_tab, i64 0, i64 1024), i64 %124
  %126 = load i8, i8* %125, align 1
  %127 = zext i8 %126 to i32
  %128 = sub nsw i32 %26, %24
  %129 = mul nsw i32 %128, 3
  %130 = add nsw i32 %129, %127
  %131 = sext i32 %130 to i64
  %132 = getelementptr inbounds i8, i8* getelementptr inbounds ([2304 x i8], [2304 x i8]* @ff_crop_tab, i64 0, i64 1024), i64 %131
  %133 = load i8, i8* %132, align 1
  %134 = zext i8 %133 to i32
  %135 = add nsw i32 %134, -128
  %136 = mul nsw i32 %135, 27
  %137 = add nsw i32 %136, 63
  %138 = ashr i32 %137, 7
  %139 = mul nsw i32 %135, 18
  %140 = add nsw i32 %139, 63
  %141 = ashr i32 %140, 7
  %142 = mul nsw i32 %135, 9
  %143 = add nsw i32 %142, 63
  %144 = ashr i32 %143, 7
  %145 = add nsw i32 %144, %18
  %146 = sext i32 %145 to i64
  %147 = getelementptr inbounds i8, i8* getelementptr inbounds ([2304 x i8], [2304 x i8]* @ff_crop_tab, i64 0, i64 1024), i64 %146
  %148 = load i8, i8* %147, align 1
  store i8 %148, i8* %16, align 1
  %149 = add nsw i32 %141, %21
  %150 = sext i32 %149 to i64
  %151 = getelementptr inbounds i8, i8* getelementptr inbounds ([2304 x i8], [2304 x i8]* @ff_crop_tab, i64 0, i64 1024), i64 %150
  %152 = load i8, i8* %151, align 1
  store i8 %152, i8* %19, align 1
  %153 = add nsw i32 %138, %24
  %154 = sext i32 %153 to i64
  %155 = getelementptr inbounds i8, i8* getelementptr inbounds ([2304 x i8], [2304 x i8]* @ff_crop_tab, i64 0, i64 1024), i64 %154
  %156 = load i8, i8* %155, align 1
  store i8 %156, i8* %22, align 1
  %157 = sub nsw i32 %26, %138
  %158 = sext i32 %157 to i64
  %159 = getelementptr inbounds i8, i8* getelementptr inbounds ([2304 x i8], [2304 x i8]* @ff_crop_tab, i64 0, i64 1024), i64 %158
  %160 = load i8, i8* %159, align 1
  store i8 %160, i8* %15, align 1
  %161 = sub nsw i32 %29, %141
  %162 = sext i32 %161 to i64
  %163 = getelementptr inbounds i8, i8* getelementptr inbounds ([2304 x i8], [2304 x i8]* @ff_crop_tab, i64 0, i64 1024), i64 %162
  %164 = load i8, i8* %163, align 1
  store i8 %164, i8* %27, align 1
  %165 = sub nsw i32 %32, %144
  %166 = sext i32 %165 to i64
  %167 = getelementptr inbounds i8, i8* getelementptr inbounds ([2304 x i8], [2304 x i8]* @ff_crop_tab, i64 0, i64 1024), i64 %166
  %168 = load i8, i8* %167, align 1
  store i8 %168, i8* %30, align 1
  br label %169

169:                                              ; preds = %121, %91, %81, %75, %69, %63, %57, %48, %13
  %170 = add nuw nsw i64 %14, 1
  %171 = icmp eq i64 %170, 8
  br i1 %171, label %172, label %13

172:                                              ; preds = %169, %328
  %173 = phi i64 [ %329, %328 ], [ 0, %169 ]
  %174 = getelementptr inbounds i8, i8* %1, i64 %173
  %175 = getelementptr inbounds i8, i8* %174, i64 %7
  %176 = load i8, i8* %175, align 1
  %177 = zext i8 %176 to i32
  %178 = getelementptr inbounds i8, i8* %174, i64 %8
  %179 = load i8, i8* %178, align 1
  %180 = zext i8 %179 to i32
  %181 = getelementptr inbounds i8, i8* %174, i64 %9
  %182 = load i8, i8* %181, align 1
  %183 = zext i8 %182 to i32
  %184 = load i8, i8* %174, align 1
  %185 = zext i8 %184 to i32
  %186 = getelementptr inbounds i8, i8* %174, i64 %2
  %187 = load i8, i8* %186, align 1
  %188 = zext i8 %187 to i32
  %189 = getelementptr inbounds i8, i8* %174, i64 %10
  %190 = load i8, i8* %189, align 1
  %191 = zext i8 %190 to i32
  %192 = getelementptr inbounds i8, i8* %174, i64 %11
  %193 = load i8, i8* %192, align 1
  %194 = zext i8 %193 to i32
  %195 = sub nsw i32 %183, %185
  %196 = icmp slt i32 %195, 0
  %197 = sub nsw i32 0, %195
  %198 = select i1 %196, i32 %197, i32 %195
  %199 = shl nuw nsw i32 %198, 1
  %200 = sub nsw i32 %180, %188
  %201 = icmp slt i32 %200, 0
  %202 = sub nsw i32 0, %200
  %203 = select i1 %201, i32 %202, i32 %200
  %204 = lshr i32 %203, 1
  %205 = add nuw nsw i32 %204, %199
  %206 = icmp sgt i32 %205, %3
  br i1 %206, label %328, label %207

207:                                              ; preds = %172
  %208 = getelementptr inbounds i8, i8* %174, i64 %12
  %209 = load i8, i8* %208, align 1
  %210 = zext i8 %209 to i32
  %211 = sub nsw i32 %210, %177
  %212 = icmp slt i32 %211, 0
  %213 = sub nsw i32 0, %211
  %214 = select i1 %212, i32 %213, i32 %211
  %215 = icmp sgt i32 %214, %4
  br i1 %215, label %328, label %216

216:                                              ; preds = %207
  %217 = sub nsw i32 %177, %180
  %218 = icmp slt i32 %217, 0
  %219 = sub nsw i32 0, %217
  %220 = select i1 %218, i32 %219, i32 %217
  %221 = icmp sgt i32 %220, %4
  br i1 %221, label %328, label %222

222:                                              ; preds = %216
  %223 = sub nsw i32 %180, %183
  %224 = icmp slt i32 %223, 0
  %225 = sub nsw i32 0, %223
  %226 = select i1 %224, i32 %225, i32 %223
  %227 = icmp sgt i32 %226, %4
  br i1 %227, label %328, label %228

228:                                              ; preds = %222
  %229 = sub nsw i32 %194, %191
  %230 = icmp slt i32 %229, 0
  %231 = sub nsw i32 0, %229
  %232 = select i1 %230, i32 %231, i32 %229
  %233 = icmp sgt i32 %232, %4
  br i1 %233, label %328, label %234

234:                                              ; preds = %228
  %235 = sub nsw i32 %191, %188
  %236 = icmp slt i32 %235, 0
  %237 = sub nsw i32 0, %235
  %238 = select i1 %236, i32 %237, i32 %235
  %239 = icmp sgt i32 %238, %4
  br i1 %239, label %328, label %240

240:                                              ; preds = %234
  %241 = sub nsw i32 %188, %185
  %242 = icmp slt i32 %241, 0
  %243 = sub nsw i32 0, %241
  %244 = select i1 %242, i32 %243, i32 %241
  %245 = icmp sgt i32 %244, %4
  br i1 %245, label %328, label %246

246:                                              ; preds = %240
  %247 = icmp sgt i32 %226, %5
  %248 = icmp sgt i32 %244, %5
  %249 = or i1 %247, %248
  br i1 %249, label %250, label %280

250:                                              ; preds = %246
  %251 = sub nsw i32 %185, %183
  %252 = mul nsw i32 %251, 3
  %253 = add nuw nsw i32 %180, 128
  %254 = sub nsw i32 %253, %188
  %255 = sext i32 %254 to i64
  %256 = getelementptr inbounds i8, i8* getelementptr inbounds ([2304 x i8], [2304 x i8]* @ff_crop_tab, i64 0, i64 1024), i64 %255
  %257 = load i8, i8* %256, align 1
  %258 = zext i8 %257 to i32
  %259 = add nsw i32 %252, %258
  %260 = sext i32 %259 to i64
  %261 = getelementptr inbounds i8, i8* getelementptr inbounds ([2304 x i8], [2304 x i8]* @ff_crop_tab, i64 0, i64 1024), i64 %260
  %262 = load i8, i8* %261, align 1
  %263 = zext i8 %262 to i32
  %264 = icmp ult i32 %263, 251
  %265 = select i1 %264, i32 %263, i32 251
  %266 = add nsw i32 %265, -124
  %267 = ashr i32 %266, 3
  %268 = icmp ult i32 %263, 252
  %269 = select i1 %268, i32 %263, i32 252
  %270 = add nsw i32 %269, -125
  %271 = ashr i32 %270, 3
  %272 = add nsw i32 %271, %183
  %273 = sext i32 %272 to i64
  %274 = getelementptr inbounds i8, i8* getelementptr inbounds ([2304 x i8], [2304 x i8]* @ff_crop_tab, i64 0, i64 1024), i64 %273
  %275 = load i8, i8* %274, align 1
  store i8 %275, i8* %181, align 1
  %276 = sub nsw i32 %185, %267
  %277 = sext i32 %276 to i64
  %278 = getelementptr inbounds i8, i8* getelementptr inbounds ([2304 x i8], [2304 x i8]* @ff_crop_tab, i64 0, i64 1024), i64 %277
  %279 = load i8, i8* %278, align 1
  store i8 %279, i8* %174, align 1
  br label %328

280:                                              ; preds = %246
  %281 = add nuw nsw i32 %180, 128
  %282 = sub nsw i32 %281, %188
  %283 = sext i32 %282 to i64
  %284 = getelementptr inbounds i8, i8* getelementptr inbounds ([2304 x i8], [2304 x i8]* @ff_crop_tab, i64 0, i64 1024), i64 %283
  %285 = load i8, i8* %284, align 1
  %286 = zext i8 %285 to i32
  %287 = sub nsw i32 %185, %183
  %288 = mul nsw i32 %287, 3
  %289 = add nsw i32 %288, %286
  %290 = sext i32 %289 to i64
  %291 = getelementptr inbounds i8, i8* getelementptr inbounds ([2304 x i8], [2304 x i8]* @ff_crop_tab, i64 0, i64 1024), i64 %290
  %292 = load i8, i8* %291, align 1
  %293 = zext i8 %292 to i32
  %294 = add nsw i32 %293, -128
  %295 = mul nsw i32 %294, 27
  %296 = add nsw i32 %295, 63
  %297 = ashr i32 %296, 7
  %298 = mul nsw i32 %294, 18
  %299 = add nsw i32 %298, 63
  %300 = ashr i32 %299, 7
  %301 = mul nsw i32 %294, 9
  %302 = add nsw i32 %301, 63
  %303 = ashr i32 %302, 7
  %304 = add nsw i32 %303, %177
  %305 = sext i32 %304 to i64
  %306 = getelementptr inbounds i8, i8* getelementptr inbounds ([2304 x i8], [2304 x i8]* @ff_crop_tab, i64 0, i64 1024), i64 %305
  %307 = load i8, i8* %306, align 1
  store i8 %307, i8* %175, align 1
  %308 = add nsw i32 %300, %180
  %309 = sext i32 %308 to i64
  %310 = getelementptr inbounds i8, i8* getelementptr inbounds ([2304 x i8], [2304 x i8]* @ff_crop_tab, i64 0, i64 1024), i64 %309
  %311 = load i8, i8* %310, align 1
  store i8 %311, i8* %178, align 1
  %312 = add nsw i32 %297, %183
  %313 = sext i32 %312 to i64
  %314 = getelementptr inbounds i8, i8* getelementptr inbounds ([2304 x i8], [2304 x i8]* @ff_crop_tab, i64 0, i64 1024), i64 %313
  %315 = load i8, i8* %314, align 1
  store i8 %315, i8* %181, align 1
  %316 = sub nsw i32 %185, %297
  %317 = sext i32 %316 to i64
  %318 = getelementptr inbounds i8, i8* getelementptr inbounds ([2304 x i8], [2304 x i8]* @ff_crop_tab, i64 0, i64 1024), i64 %317
  %319 = load i8, i8* %318, align 1
  store i8 %319, i8* %174, align 1
  %320 = sub nsw i32 %188, %300
  %321 = sext i32 %320 to i64
  %322 = getelementptr inbounds i8, i8* getelementptr inbounds ([2304 x i8], [2304 x i8]* @ff_crop_tab, i64 0, i64 1024), i64 %321
  %323 = load i8, i8* %322, align 1
  store i8 %323, i8* %186, align 1
  %324 = sub nsw i32 %191, %303
  %325 = sext i32 %324 to i64
  %326 = getelementptr inbounds i8, i8* getelementptr inbounds ([2304 x i8], [2304 x i8]* @ff_crop_tab, i64 0, i64 1024), i64 %325
  %327 = load i8, i8* %326, align 1
  store i8 %327, i8* %189, align 1
  br label %328

328:                                              ; preds = %280, %250, %240, %234, %228, %222, %216, %207, %172
  %329 = add nuw nsw i64 %173, 1
  %330 = icmp eq i64 %329, 8
  br i1 %330, label %331, label %172

331:                                              ; preds = %328
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define internal void @vp8_h_loop_filter8uv_c(i8* nocapture, i8* nocapture, i64, i32, i32, i32) #2 {
  br label %7

7:                                                ; preds = %164, %6
  %8 = phi i64 [ 0, %6 ], [ %165, %164 ]
  %9 = mul nsw i64 %8, %2
  %10 = getelementptr inbounds i8, i8* %0, i64 %9
  %11 = getelementptr inbounds i8, i8* %10, i64 -3
  %12 = load i8, i8* %11, align 1
  %13 = zext i8 %12 to i32
  %14 = getelementptr inbounds i8, i8* %10, i64 -2
  %15 = load i8, i8* %14, align 1
  %16 = zext i8 %15 to i32
  %17 = getelementptr inbounds i8, i8* %10, i64 -1
  %18 = load i8, i8* %17, align 1
  %19 = zext i8 %18 to i32
  %20 = load i8, i8* %10, align 1
  %21 = zext i8 %20 to i32
  %22 = getelementptr inbounds i8, i8* %10, i64 1
  %23 = load i8, i8* %22, align 1
  %24 = zext i8 %23 to i32
  %25 = getelementptr inbounds i8, i8* %10, i64 2
  %26 = load i8, i8* %25, align 1
  %27 = zext i8 %26 to i32
  %28 = getelementptr inbounds i8, i8* %10, i64 3
  %29 = load i8, i8* %28, align 1
  %30 = zext i8 %29 to i32
  %31 = sub nsw i32 %19, %21
  %32 = icmp slt i32 %31, 0
  %33 = sub nsw i32 0, %31
  %34 = select i1 %32, i32 %33, i32 %31
  %35 = shl nuw nsw i32 %34, 1
  %36 = sub nsw i32 %16, %24
  %37 = icmp slt i32 %36, 0
  %38 = sub nsw i32 0, %36
  %39 = select i1 %37, i32 %38, i32 %36
  %40 = lshr i32 %39, 1
  %41 = add nuw nsw i32 %40, %35
  %42 = icmp sgt i32 %41, %3
  br i1 %42, label %164, label %43

43:                                               ; preds = %7
  %44 = getelementptr inbounds i8, i8* %10, i64 -4
  %45 = load i8, i8* %44, align 1
  %46 = zext i8 %45 to i32
  %47 = sub nsw i32 %46, %13
  %48 = icmp slt i32 %47, 0
  %49 = sub nsw i32 0, %47
  %50 = select i1 %48, i32 %49, i32 %47
  %51 = icmp sgt i32 %50, %4
  br i1 %51, label %164, label %52

52:                                               ; preds = %43
  %53 = sub nsw i32 %13, %16
  %54 = icmp slt i32 %53, 0
  %55 = sub nsw i32 0, %53
  %56 = select i1 %54, i32 %55, i32 %53
  %57 = icmp sgt i32 %56, %4
  br i1 %57, label %164, label %58

58:                                               ; preds = %52
  %59 = sub nsw i32 %16, %19
  %60 = icmp slt i32 %59, 0
  %61 = sub nsw i32 0, %59
  %62 = select i1 %60, i32 %61, i32 %59
  %63 = icmp sgt i32 %62, %4
  br i1 %63, label %164, label %64

64:                                               ; preds = %58
  %65 = sub nsw i32 %30, %27
  %66 = icmp slt i32 %65, 0
  %67 = sub nsw i32 0, %65
  %68 = select i1 %66, i32 %67, i32 %65
  %69 = icmp sgt i32 %68, %4
  br i1 %69, label %164, label %70

70:                                               ; preds = %64
  %71 = sub nsw i32 %27, %24
  %72 = icmp slt i32 %71, 0
  %73 = sub nsw i32 0, %71
  %74 = select i1 %72, i32 %73, i32 %71
  %75 = icmp sgt i32 %74, %4
  br i1 %75, label %164, label %76

76:                                               ; preds = %70
  %77 = sub nsw i32 %24, %21
  %78 = icmp slt i32 %77, 0
  %79 = sub nsw i32 0, %77
  %80 = select i1 %78, i32 %79, i32 %77
  %81 = icmp sgt i32 %80, %4
  br i1 %81, label %164, label %82

82:                                               ; preds = %76
  %83 = icmp sgt i32 %62, %5
  %84 = icmp sgt i32 %80, %5
  %85 = or i1 %83, %84
  br i1 %85, label %86, label %116

86:                                               ; preds = %82
  %87 = sub nsw i32 %21, %19
  %88 = mul nsw i32 %87, 3
  %89 = add nuw nsw i32 %16, 128
  %90 = sub nsw i32 %89, %24
  %91 = sext i32 %90 to i64
  %92 = getelementptr inbounds i8, i8* getelementptr inbounds ([2304 x i8], [2304 x i8]* @ff_crop_tab, i64 0, i64 1024), i64 %91
  %93 = load i8, i8* %92, align 1
  %94 = zext i8 %93 to i32
  %95 = add nsw i32 %88, %94
  %96 = sext i32 %95 to i64
  %97 = getelementptr inbounds i8, i8* getelementptr inbounds ([2304 x i8], [2304 x i8]* @ff_crop_tab, i64 0, i64 1024), i64 %96
  %98 = load i8, i8* %97, align 1
  %99 = zext i8 %98 to i32
  %100 = icmp ult i32 %99, 251
  %101 = select i1 %100, i32 %99, i32 251
  %102 = add nsw i32 %101, -124
  %103 = ashr i32 %102, 3
  %104 = icmp ult i32 %99, 252
  %105 = select i1 %104, i32 %99, i32 252
  %106 = add nsw i32 %105, -125
  %107 = ashr i32 %106, 3
  %108 = add nsw i32 %107, %19
  %109 = sext i32 %108 to i64
  %110 = getelementptr inbounds i8, i8* getelementptr inbounds ([2304 x i8], [2304 x i8]* @ff_crop_tab, i64 0, i64 1024), i64 %109
  %111 = load i8, i8* %110, align 1
  store i8 %111, i8* %17, align 1
  %112 = sub nsw i32 %21, %103
  %113 = sext i32 %112 to i64
  %114 = getelementptr inbounds i8, i8* getelementptr inbounds ([2304 x i8], [2304 x i8]* @ff_crop_tab, i64 0, i64 1024), i64 %113
  %115 = load i8, i8* %114, align 1
  store i8 %115, i8* %10, align 1
  br label %164

116:                                              ; preds = %82
  %117 = add nuw nsw i32 %16, 128
  %118 = sub nsw i32 %117, %24
  %119 = sext i32 %118 to i64
  %120 = getelementptr inbounds i8, i8* getelementptr inbounds ([2304 x i8], [2304 x i8]* @ff_crop_tab, i64 0, i64 1024), i64 %119
  %121 = load i8, i8* %120, align 1
  %122 = zext i8 %121 to i32
  %123 = sub nsw i32 %21, %19
  %124 = mul nsw i32 %123, 3
  %125 = add nsw i32 %124, %122
  %126 = sext i32 %125 to i64
  %127 = getelementptr inbounds i8, i8* getelementptr inbounds ([2304 x i8], [2304 x i8]* @ff_crop_tab, i64 0, i64 1024), i64 %126
  %128 = load i8, i8* %127, align 1
  %129 = zext i8 %128 to i32
  %130 = add nsw i32 %129, -128
  %131 = mul nsw i32 %130, 27
  %132 = add nsw i32 %131, 63
  %133 = ashr i32 %132, 7
  %134 = mul nsw i32 %130, 18
  %135 = add nsw i32 %134, 63
  %136 = ashr i32 %135, 7
  %137 = mul nsw i32 %130, 9
  %138 = add nsw i32 %137, 63
  %139 = ashr i32 %138, 7
  %140 = add nsw i32 %139, %13
  %141 = sext i32 %140 to i64
  %142 = getelementptr inbounds i8, i8* getelementptr inbounds ([2304 x i8], [2304 x i8]* @ff_crop_tab, i64 0, i64 1024), i64 %141
  %143 = load i8, i8* %142, align 1
  store i8 %143, i8* %11, align 1
  %144 = add nsw i32 %136, %16
  %145 = sext i32 %144 to i64
  %146 = getelementptr inbounds i8, i8* getelementptr inbounds ([2304 x i8], [2304 x i8]* @ff_crop_tab, i64 0, i64 1024), i64 %145
  %147 = load i8, i8* %146, align 1
  store i8 %147, i8* %14, align 1
  %148 = add nsw i32 %133, %19
  %149 = sext i32 %148 to i64
  %150 = getelementptr inbounds i8, i8* getelementptr inbounds ([2304 x i8], [2304 x i8]* @ff_crop_tab, i64 0, i64 1024), i64 %149
  %151 = load i8, i8* %150, align 1
  store i8 %151, i8* %17, align 1
  %152 = sub nsw i32 %21, %133
  %153 = sext i32 %152 to i64
  %154 = getelementptr inbounds i8, i8* getelementptr inbounds ([2304 x i8], [2304 x i8]* @ff_crop_tab, i64 0, i64 1024), i64 %153
  %155 = load i8, i8* %154, align 1
  store i8 %155, i8* %10, align 1
  %156 = sub nsw i32 %24, %136
  %157 = sext i32 %156 to i64
  %158 = getelementptr inbounds i8, i8* getelementptr inbounds ([2304 x i8], [2304 x i8]* @ff_crop_tab, i64 0, i64 1024), i64 %157
  %159 = load i8, i8* %158, align 1
  store i8 %159, i8* %22, align 1
  %160 = sub nsw i32 %27, %139
  %161 = sext i32 %160 to i64
  %162 = getelementptr inbounds i8, i8* getelementptr inbounds ([2304 x i8], [2304 x i8]* @ff_crop_tab, i64 0, i64 1024), i64 %161
  %163 = load i8, i8* %162, align 1
  store i8 %163, i8* %25, align 1
  br label %164

164:                                              ; preds = %116, %86, %76, %70, %64, %58, %52, %43, %7
  %165 = add nuw nsw i64 %8, 1
  %166 = icmp eq i64 %165, 8
  br i1 %166, label %167, label %7

167:                                              ; preds = %164, %324
  %168 = phi i64 [ %325, %324 ], [ 0, %164 ]
  %169 = mul nsw i64 %168, %2
  %170 = getelementptr inbounds i8, i8* %1, i64 %169
  %171 = getelementptr inbounds i8, i8* %170, i64 -3
  %172 = load i8, i8* %171, align 1
  %173 = zext i8 %172 to i32
  %174 = getelementptr inbounds i8, i8* %170, i64 -2
  %175 = load i8, i8* %174, align 1
  %176 = zext i8 %175 to i32
  %177 = getelementptr inbounds i8, i8* %170, i64 -1
  %178 = load i8, i8* %177, align 1
  %179 = zext i8 %178 to i32
  %180 = load i8, i8* %170, align 1
  %181 = zext i8 %180 to i32
  %182 = getelementptr inbounds i8, i8* %170, i64 1
  %183 = load i8, i8* %182, align 1
  %184 = zext i8 %183 to i32
  %185 = getelementptr inbounds i8, i8* %170, i64 2
  %186 = load i8, i8* %185, align 1
  %187 = zext i8 %186 to i32
  %188 = getelementptr inbounds i8, i8* %170, i64 3
  %189 = load i8, i8* %188, align 1
  %190 = zext i8 %189 to i32
  %191 = sub nsw i32 %179, %181
  %192 = icmp slt i32 %191, 0
  %193 = sub nsw i32 0, %191
  %194 = select i1 %192, i32 %193, i32 %191
  %195 = shl nuw nsw i32 %194, 1
  %196 = sub nsw i32 %176, %184
  %197 = icmp slt i32 %196, 0
  %198 = sub nsw i32 0, %196
  %199 = select i1 %197, i32 %198, i32 %196
  %200 = lshr i32 %199, 1
  %201 = add nuw nsw i32 %200, %195
  %202 = icmp sgt i32 %201, %3
  br i1 %202, label %324, label %203

203:                                              ; preds = %167
  %204 = getelementptr inbounds i8, i8* %170, i64 -4
  %205 = load i8, i8* %204, align 1
  %206 = zext i8 %205 to i32
  %207 = sub nsw i32 %206, %173
  %208 = icmp slt i32 %207, 0
  %209 = sub nsw i32 0, %207
  %210 = select i1 %208, i32 %209, i32 %207
  %211 = icmp sgt i32 %210, %4
  br i1 %211, label %324, label %212

212:                                              ; preds = %203
  %213 = sub nsw i32 %173, %176
  %214 = icmp slt i32 %213, 0
  %215 = sub nsw i32 0, %213
  %216 = select i1 %214, i32 %215, i32 %213
  %217 = icmp sgt i32 %216, %4
  br i1 %217, label %324, label %218

218:                                              ; preds = %212
  %219 = sub nsw i32 %176, %179
  %220 = icmp slt i32 %219, 0
  %221 = sub nsw i32 0, %219
  %222 = select i1 %220, i32 %221, i32 %219
  %223 = icmp sgt i32 %222, %4
  br i1 %223, label %324, label %224

224:                                              ; preds = %218
  %225 = sub nsw i32 %190, %187
  %226 = icmp slt i32 %225, 0
  %227 = sub nsw i32 0, %225
  %228 = select i1 %226, i32 %227, i32 %225
  %229 = icmp sgt i32 %228, %4
  br i1 %229, label %324, label %230

230:                                              ; preds = %224
  %231 = sub nsw i32 %187, %184
  %232 = icmp slt i32 %231, 0
  %233 = sub nsw i32 0, %231
  %234 = select i1 %232, i32 %233, i32 %231
  %235 = icmp sgt i32 %234, %4
  br i1 %235, label %324, label %236

236:                                              ; preds = %230
  %237 = sub nsw i32 %184, %181
  %238 = icmp slt i32 %237, 0
  %239 = sub nsw i32 0, %237
  %240 = select i1 %238, i32 %239, i32 %237
  %241 = icmp sgt i32 %240, %4
  br i1 %241, label %324, label %242

242:                                              ; preds = %236
  %243 = icmp sgt i32 %222, %5
  %244 = icmp sgt i32 %240, %5
  %245 = or i1 %243, %244
  br i1 %245, label %246, label %276

246:                                              ; preds = %242
  %247 = sub nsw i32 %181, %179
  %248 = mul nsw i32 %247, 3
  %249 = add nuw nsw i32 %176, 128
  %250 = sub nsw i32 %249, %184
  %251 = sext i32 %250 to i64
  %252 = getelementptr inbounds i8, i8* getelementptr inbounds ([2304 x i8], [2304 x i8]* @ff_crop_tab, i64 0, i64 1024), i64 %251
  %253 = load i8, i8* %252, align 1
  %254 = zext i8 %253 to i32
  %255 = add nsw i32 %248, %254
  %256 = sext i32 %255 to i64
  %257 = getelementptr inbounds i8, i8* getelementptr inbounds ([2304 x i8], [2304 x i8]* @ff_crop_tab, i64 0, i64 1024), i64 %256
  %258 = load i8, i8* %257, align 1
  %259 = zext i8 %258 to i32
  %260 = icmp ult i32 %259, 251
  %261 = select i1 %260, i32 %259, i32 251
  %262 = add nsw i32 %261, -124
  %263 = ashr i32 %262, 3
  %264 = icmp ult i32 %259, 252
  %265 = select i1 %264, i32 %259, i32 252
  %266 = add nsw i32 %265, -125
  %267 = ashr i32 %266, 3
  %268 = add nsw i32 %267, %179
  %269 = sext i32 %268 to i64
  %270 = getelementptr inbounds i8, i8* getelementptr inbounds ([2304 x i8], [2304 x i8]* @ff_crop_tab, i64 0, i64 1024), i64 %269
  %271 = load i8, i8* %270, align 1
  store i8 %271, i8* %177, align 1
  %272 = sub nsw i32 %181, %263
  %273 = sext i32 %272 to i64
  %274 = getelementptr inbounds i8, i8* getelementptr inbounds ([2304 x i8], [2304 x i8]* @ff_crop_tab, i64 0, i64 1024), i64 %273
  %275 = load i8, i8* %274, align 1
  store i8 %275, i8* %170, align 1
  br label %324

276:                                              ; preds = %242
  %277 = add nuw nsw i32 %176, 128
  %278 = sub nsw i32 %277, %184
  %279 = sext i32 %278 to i64
  %280 = getelementptr inbounds i8, i8* getelementptr inbounds ([2304 x i8], [2304 x i8]* @ff_crop_tab, i64 0, i64 1024), i64 %279
  %281 = load i8, i8* %280, align 1
  %282 = zext i8 %281 to i32
  %283 = sub nsw i32 %181, %179
  %284 = mul nsw i32 %283, 3
  %285 = add nsw i32 %284, %282
  %286 = sext i32 %285 to i64
  %287 = getelementptr inbounds i8, i8* getelementptr inbounds ([2304 x i8], [2304 x i8]* @ff_crop_tab, i64 0, i64 1024), i64 %286
  %288 = load i8, i8* %287, align 1
  %289 = zext i8 %288 to i32
  %290 = add nsw i32 %289, -128
  %291 = mul nsw i32 %290, 27
  %292 = add nsw i32 %291, 63
  %293 = ashr i32 %292, 7
  %294 = mul nsw i32 %290, 18
  %295 = add nsw i32 %294, 63
  %296 = ashr i32 %295, 7
  %297 = mul nsw i32 %290, 9
  %298 = add nsw i32 %297, 63
  %299 = ashr i32 %298, 7
  %300 = add nsw i32 %299, %173
  %301 = sext i32 %300 to i64
  %302 = getelementptr inbounds i8, i8* getelementptr inbounds ([2304 x i8], [2304 x i8]* @ff_crop_tab, i64 0, i64 1024), i64 %301
  %303 = load i8, i8* %302, align 1
  store i8 %303, i8* %171, align 1
  %304 = add nsw i32 %296, %176
  %305 = sext i32 %304 to i64
  %306 = getelementptr inbounds i8, i8* getelementptr inbounds ([2304 x i8], [2304 x i8]* @ff_crop_tab, i64 0, i64 1024), i64 %305
  %307 = load i8, i8* %306, align 1
  store i8 %307, i8* %174, align 1
  %308 = add nsw i32 %293, %179
  %309 = sext i32 %308 to i64
  %310 = getelementptr inbounds i8, i8* getelementptr inbounds ([2304 x i8], [2304 x i8]* @ff_crop_tab, i64 0, i64 1024), i64 %309
  %311 = load i8, i8* %310, align 1
  store i8 %311, i8* %177, align 1
  %312 = sub nsw i32 %181, %293
  %313 = sext i32 %312 to i64
  %314 = getelementptr inbounds i8, i8* getelementptr inbounds ([2304 x i8], [2304 x i8]* @ff_crop_tab, i64 0, i64 1024), i64 %313
  %315 = load i8, i8* %314, align 1
  store i8 %315, i8* %170, align 1
  %316 = sub nsw i32 %184, %296
  %317 = sext i32 %316 to i64
  %318 = getelementptr inbounds i8, i8* getelementptr inbounds ([2304 x i8], [2304 x i8]* @ff_crop_tab, i64 0, i64 1024), i64 %317
  %319 = load i8, i8* %318, align 1
  store i8 %319, i8* %182, align 1
  %320 = sub nsw i32 %187, %299
  %321 = sext i32 %320 to i64
  %322 = getelementptr inbounds i8, i8* getelementptr inbounds ([2304 x i8], [2304 x i8]* @ff_crop_tab, i64 0, i64 1024), i64 %321
  %323 = load i8, i8* %322, align 1
  store i8 %323, i8* %185, align 1
  br label %324

324:                                              ; preds = %276, %246, %236, %230, %224, %218, %212, %203, %167
  %325 = add nuw nsw i64 %168, 1
  %326 = icmp eq i64 %325, 8
  br i1 %326, label %327, label %167

327:                                              ; preds = %324
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define internal void @vp8_v_loop_filter16_inner_c(i8*, i64, i32, i32, i32) #2 {
  %6 = mul nsw i64 %1, -3
  %7 = mul nsw i64 %1, -2
  %8 = sub nsw i64 0, %1
  %9 = shl nsw i64 %1, 1
  %10 = mul nsw i64 %1, 3
  %11 = mul nsw i64 %1, -4
  br label %12

12:                                               ; preds = %152, %5
  %13 = phi i64 [ 0, %5 ], [ %153, %152 ]
  %14 = getelementptr inbounds i8, i8* %0, i64 %13
  %15 = getelementptr inbounds i8, i8* %14, i64 %6
  %16 = load i8, i8* %15, align 1
  %17 = zext i8 %16 to i32
  %18 = getelementptr inbounds i8, i8* %14, i64 %7
  %19 = load i8, i8* %18, align 1
  %20 = zext i8 %19 to i32
  %21 = getelementptr inbounds i8, i8* %14, i64 %8
  %22 = load i8, i8* %21, align 1
  %23 = zext i8 %22 to i32
  %24 = load i8, i8* %14, align 1
  %25 = zext i8 %24 to i32
  %26 = getelementptr inbounds i8, i8* %14, i64 %1
  %27 = load i8, i8* %26, align 1
  %28 = zext i8 %27 to i32
  %29 = getelementptr inbounds i8, i8* %14, i64 %9
  %30 = load i8, i8* %29, align 1
  %31 = zext i8 %30 to i32
  %32 = getelementptr inbounds i8, i8* %14, i64 %10
  %33 = load i8, i8* %32, align 1
  %34 = zext i8 %33 to i32
  %35 = sub nsw i32 %23, %25
  %36 = icmp slt i32 %35, 0
  %37 = sub nsw i32 0, %35
  %38 = select i1 %36, i32 %37, i32 %35
  %39 = shl nuw nsw i32 %38, 1
  %40 = sub nsw i32 %20, %28
  %41 = icmp slt i32 %40, 0
  %42 = sub nsw i32 0, %40
  %43 = select i1 %41, i32 %42, i32 %40
  %44 = lshr i32 %43, 1
  %45 = add nuw nsw i32 %44, %39
  %46 = icmp sgt i32 %45, %2
  br i1 %46, label %152, label %47

47:                                               ; preds = %12
  %48 = getelementptr inbounds i8, i8* %14, i64 %11
  %49 = load i8, i8* %48, align 1
  %50 = zext i8 %49 to i32
  %51 = sub nsw i32 %50, %17
  %52 = icmp slt i32 %51, 0
  %53 = sub nsw i32 0, %51
  %54 = select i1 %52, i32 %53, i32 %51
  %55 = icmp sgt i32 %54, %3
  br i1 %55, label %152, label %56

56:                                               ; preds = %47
  %57 = sub nsw i32 %17, %20
  %58 = icmp slt i32 %57, 0
  %59 = sub nsw i32 0, %57
  %60 = select i1 %58, i32 %59, i32 %57
  %61 = icmp sgt i32 %60, %3
  br i1 %61, label %152, label %62

62:                                               ; preds = %56
  %63 = sub nsw i32 %20, %23
  %64 = icmp slt i32 %63, 0
  %65 = sub nsw i32 0, %63
  %66 = select i1 %64, i32 %65, i32 %63
  %67 = icmp sgt i32 %66, %3
  br i1 %67, label %152, label %68

68:                                               ; preds = %62
  %69 = sub nsw i32 %34, %31
  %70 = icmp slt i32 %69, 0
  %71 = sub nsw i32 0, %69
  %72 = select i1 %70, i32 %71, i32 %69
  %73 = icmp sgt i32 %72, %3
  br i1 %73, label %152, label %74

74:                                               ; preds = %68
  %75 = sub nsw i32 %31, %28
  %76 = icmp slt i32 %75, 0
  %77 = sub nsw i32 0, %75
  %78 = select i1 %76, i32 %77, i32 %75
  %79 = icmp sgt i32 %78, %3
  br i1 %79, label %152, label %80

80:                                               ; preds = %74
  %81 = sub nsw i32 %28, %25
  %82 = icmp slt i32 %81, 0
  %83 = sub nsw i32 0, %81
  %84 = select i1 %82, i32 %83, i32 %81
  %85 = icmp sgt i32 %84, %3
  br i1 %85, label %152, label %86

86:                                               ; preds = %80
  %87 = icmp sgt i32 %66, %4
  %88 = icmp sgt i32 %84, %4
  %89 = or i1 %87, %88
  %90 = sub nsw i32 %25, %23
  %91 = mul nsw i32 %90, 3
  br i1 %89, label %92, label %120

92:                                               ; preds = %86
  %93 = add nuw nsw i32 %20, 128
  %94 = sub nsw i32 %93, %28
  %95 = sext i32 %94 to i64
  %96 = getelementptr inbounds i8, i8* getelementptr inbounds ([2304 x i8], [2304 x i8]* @ff_crop_tab, i64 0, i64 1024), i64 %95
  %97 = load i8, i8* %96, align 1
  %98 = zext i8 %97 to i32
  %99 = add nsw i32 %91, %98
  %100 = sext i32 %99 to i64
  %101 = getelementptr inbounds i8, i8* getelementptr inbounds ([2304 x i8], [2304 x i8]* @ff_crop_tab, i64 0, i64 1024), i64 %100
  %102 = load i8, i8* %101, align 1
  %103 = zext i8 %102 to i32
  %104 = icmp ult i32 %103, 251
  %105 = select i1 %104, i32 %103, i32 251
  %106 = add nsw i32 %105, -124
  %107 = ashr i32 %106, 3
  %108 = icmp ult i32 %103, 252
  %109 = select i1 %108, i32 %103, i32 252
  %110 = add nsw i32 %109, -125
  %111 = ashr i32 %110, 3
  %112 = add nsw i32 %111, %23
  %113 = sext i32 %112 to i64
  %114 = getelementptr inbounds i8, i8* getelementptr inbounds ([2304 x i8], [2304 x i8]* @ff_crop_tab, i64 0, i64 1024), i64 %113
  %115 = load i8, i8* %114, align 1
  store i8 %115, i8* %21, align 1
  %116 = sub nsw i32 %25, %107
  %117 = sext i32 %116 to i64
  %118 = getelementptr inbounds i8, i8* getelementptr inbounds ([2304 x i8], [2304 x i8]* @ff_crop_tab, i64 0, i64 1024), i64 %117
  %119 = load i8, i8* %118, align 1
  store i8 %119, i8* %14, align 1
  br label %152

120:                                              ; preds = %86
  %121 = add nsw i32 %91, 128
  %122 = sext i32 %121 to i64
  %123 = getelementptr inbounds i8, i8* getelementptr inbounds ([2304 x i8], [2304 x i8]* @ff_crop_tab, i64 0, i64 1024), i64 %122
  %124 = load i8, i8* %123, align 1
  %125 = zext i8 %124 to i32
  %126 = icmp ult i32 %125, 251
  %127 = select i1 %126, i32 %125, i32 251
  %128 = add nsw i32 %127, -124
  %129 = ashr i32 %128, 3
  %130 = icmp ult i32 %125, 252
  %131 = select i1 %130, i32 %125, i32 252
  %132 = add nsw i32 %131, -125
  %133 = ashr i32 %132, 3
  %134 = add nsw i32 %133, %23
  %135 = sext i32 %134 to i64
  %136 = getelementptr inbounds i8, i8* getelementptr inbounds ([2304 x i8], [2304 x i8]* @ff_crop_tab, i64 0, i64 1024), i64 %135
  %137 = load i8, i8* %136, align 1
  store i8 %137, i8* %21, align 1
  %138 = sub nsw i32 %25, %129
  %139 = sext i32 %138 to i64
  %140 = getelementptr inbounds i8, i8* getelementptr inbounds ([2304 x i8], [2304 x i8]* @ff_crop_tab, i64 0, i64 1024), i64 %139
  %141 = load i8, i8* %140, align 1
  store i8 %141, i8* %14, align 1
  %142 = add nsw i32 %129, 1
  %143 = ashr i32 %142, 1
  %144 = add nsw i32 %143, %20
  %145 = sext i32 %144 to i64
  %146 = getelementptr inbounds i8, i8* getelementptr inbounds ([2304 x i8], [2304 x i8]* @ff_crop_tab, i64 0, i64 1024), i64 %145
  %147 = load i8, i8* %146, align 1
  store i8 %147, i8* %18, align 1
  %148 = sub nsw i32 %28, %143
  %149 = sext i32 %148 to i64
  %150 = getelementptr inbounds i8, i8* getelementptr inbounds ([2304 x i8], [2304 x i8]* @ff_crop_tab, i64 0, i64 1024), i64 %149
  %151 = load i8, i8* %150, align 1
  store i8 %151, i8* %26, align 1
  br label %152

152:                                              ; preds = %12, %47, %56, %62, %68, %74, %92, %120, %80
  %153 = add nuw nsw i64 %13, 1
  %154 = icmp eq i64 %153, 16
  br i1 %154, label %155, label %12

155:                                              ; preds = %152
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define internal void @vp8_h_loop_filter16_inner_c(i8*, i64, i32, i32, i32) #2 {
  br label %6

6:                                                ; preds = %147, %5
  %7 = phi i64 [ 0, %5 ], [ %148, %147 ]
  %8 = mul nsw i64 %7, %1
  %9 = getelementptr inbounds i8, i8* %0, i64 %8
  %10 = getelementptr inbounds i8, i8* %9, i64 -3
  %11 = load i8, i8* %10, align 1
  %12 = zext i8 %11 to i32
  %13 = getelementptr inbounds i8, i8* %9, i64 -2
  %14 = load i8, i8* %13, align 1
  %15 = zext i8 %14 to i32
  %16 = getelementptr inbounds i8, i8* %9, i64 -1
  %17 = load i8, i8* %16, align 1
  %18 = zext i8 %17 to i32
  %19 = load i8, i8* %9, align 1
  %20 = zext i8 %19 to i32
  %21 = getelementptr inbounds i8, i8* %9, i64 1
  %22 = load i8, i8* %21, align 1
  %23 = zext i8 %22 to i32
  %24 = getelementptr inbounds i8, i8* %9, i64 2
  %25 = load i8, i8* %24, align 1
  %26 = zext i8 %25 to i32
  %27 = getelementptr inbounds i8, i8* %9, i64 3
  %28 = load i8, i8* %27, align 1
  %29 = zext i8 %28 to i32
  %30 = sub nsw i32 %18, %20
  %31 = icmp slt i32 %30, 0
  %32 = sub nsw i32 0, %30
  %33 = select i1 %31, i32 %32, i32 %30
  %34 = shl nuw nsw i32 %33, 1
  %35 = sub nsw i32 %15, %23
  %36 = icmp slt i32 %35, 0
  %37 = sub nsw i32 0, %35
  %38 = select i1 %36, i32 %37, i32 %35
  %39 = lshr i32 %38, 1
  %40 = add nuw nsw i32 %39, %34
  %41 = icmp sgt i32 %40, %2
  br i1 %41, label %147, label %42

42:                                               ; preds = %6
  %43 = getelementptr inbounds i8, i8* %9, i64 -4
  %44 = load i8, i8* %43, align 1
  %45 = zext i8 %44 to i32
  %46 = sub nsw i32 %45, %12
  %47 = icmp slt i32 %46, 0
  %48 = sub nsw i32 0, %46
  %49 = select i1 %47, i32 %48, i32 %46
  %50 = icmp sgt i32 %49, %3
  br i1 %50, label %147, label %51

51:                                               ; preds = %42
  %52 = sub nsw i32 %12, %15
  %53 = icmp slt i32 %52, 0
  %54 = sub nsw i32 0, %52
  %55 = select i1 %53, i32 %54, i32 %52
  %56 = icmp sgt i32 %55, %3
  br i1 %56, label %147, label %57

57:                                               ; preds = %51
  %58 = sub nsw i32 %15, %18
  %59 = icmp slt i32 %58, 0
  %60 = sub nsw i32 0, %58
  %61 = select i1 %59, i32 %60, i32 %58
  %62 = icmp sgt i32 %61, %3
  br i1 %62, label %147, label %63

63:                                               ; preds = %57
  %64 = sub nsw i32 %29, %26
  %65 = icmp slt i32 %64, 0
  %66 = sub nsw i32 0, %64
  %67 = select i1 %65, i32 %66, i32 %64
  %68 = icmp sgt i32 %67, %3
  br i1 %68, label %147, label %69

69:                                               ; preds = %63
  %70 = sub nsw i32 %26, %23
  %71 = icmp slt i32 %70, 0
  %72 = sub nsw i32 0, %70
  %73 = select i1 %71, i32 %72, i32 %70
  %74 = icmp sgt i32 %73, %3
  br i1 %74, label %147, label %75

75:                                               ; preds = %69
  %76 = sub nsw i32 %23, %20
  %77 = icmp slt i32 %76, 0
  %78 = sub nsw i32 0, %76
  %79 = select i1 %77, i32 %78, i32 %76
  %80 = icmp sgt i32 %79, %3
  br i1 %80, label %147, label %81

81:                                               ; preds = %75
  %82 = icmp sgt i32 %61, %4
  %83 = icmp sgt i32 %79, %4
  %84 = or i1 %82, %83
  %85 = sub nsw i32 %20, %18
  %86 = mul nsw i32 %85, 3
  br i1 %84, label %87, label %115

87:                                               ; preds = %81
  %88 = add nuw nsw i32 %15, 128
  %89 = sub nsw i32 %88, %23
  %90 = sext i32 %89 to i64
  %91 = getelementptr inbounds i8, i8* getelementptr inbounds ([2304 x i8], [2304 x i8]* @ff_crop_tab, i64 0, i64 1024), i64 %90
  %92 = load i8, i8* %91, align 1
  %93 = zext i8 %92 to i32
  %94 = add nsw i32 %86, %93
  %95 = sext i32 %94 to i64
  %96 = getelementptr inbounds i8, i8* getelementptr inbounds ([2304 x i8], [2304 x i8]* @ff_crop_tab, i64 0, i64 1024), i64 %95
  %97 = load i8, i8* %96, align 1
  %98 = zext i8 %97 to i32
  %99 = icmp ult i32 %98, 251
  %100 = select i1 %99, i32 %98, i32 251
  %101 = add nsw i32 %100, -124
  %102 = ashr i32 %101, 3
  %103 = icmp ult i32 %98, 252
  %104 = select i1 %103, i32 %98, i32 252
  %105 = add nsw i32 %104, -125
  %106 = ashr i32 %105, 3
  %107 = add nsw i32 %106, %18
  %108 = sext i32 %107 to i64
  %109 = getelementptr inbounds i8, i8* getelementptr inbounds ([2304 x i8], [2304 x i8]* @ff_crop_tab, i64 0, i64 1024), i64 %108
  %110 = load i8, i8* %109, align 1
  store i8 %110, i8* %16, align 1
  %111 = sub nsw i32 %20, %102
  %112 = sext i32 %111 to i64
  %113 = getelementptr inbounds i8, i8* getelementptr inbounds ([2304 x i8], [2304 x i8]* @ff_crop_tab, i64 0, i64 1024), i64 %112
  %114 = load i8, i8* %113, align 1
  store i8 %114, i8* %9, align 1
  br label %147

115:                                              ; preds = %81
  %116 = add nsw i32 %86, 128
  %117 = sext i32 %116 to i64
  %118 = getelementptr inbounds i8, i8* getelementptr inbounds ([2304 x i8], [2304 x i8]* @ff_crop_tab, i64 0, i64 1024), i64 %117
  %119 = load i8, i8* %118, align 1
  %120 = zext i8 %119 to i32
  %121 = icmp ult i32 %120, 251
  %122 = select i1 %121, i32 %120, i32 251
  %123 = add nsw i32 %122, -124
  %124 = ashr i32 %123, 3
  %125 = icmp ult i32 %120, 252
  %126 = select i1 %125, i32 %120, i32 252
  %127 = add nsw i32 %126, -125
  %128 = ashr i32 %127, 3
  %129 = add nsw i32 %128, %18
  %130 = sext i32 %129 to i64
  %131 = getelementptr inbounds i8, i8* getelementptr inbounds ([2304 x i8], [2304 x i8]* @ff_crop_tab, i64 0, i64 1024), i64 %130
  %132 = load i8, i8* %131, align 1
  store i8 %132, i8* %16, align 1
  %133 = sub nsw i32 %20, %124
  %134 = sext i32 %133 to i64
  %135 = getelementptr inbounds i8, i8* getelementptr inbounds ([2304 x i8], [2304 x i8]* @ff_crop_tab, i64 0, i64 1024), i64 %134
  %136 = load i8, i8* %135, align 1
  store i8 %136, i8* %9, align 1
  %137 = add nsw i32 %124, 1
  %138 = ashr i32 %137, 1
  %139 = add nsw i32 %138, %15
  %140 = sext i32 %139 to i64
  %141 = getelementptr inbounds i8, i8* getelementptr inbounds ([2304 x i8], [2304 x i8]* @ff_crop_tab, i64 0, i64 1024), i64 %140
  %142 = load i8, i8* %141, align 1
  store i8 %142, i8* %13, align 1
  %143 = sub nsw i32 %23, %138
  %144 = sext i32 %143 to i64
  %145 = getelementptr inbounds i8, i8* getelementptr inbounds ([2304 x i8], [2304 x i8]* @ff_crop_tab, i64 0, i64 1024), i64 %144
  %146 = load i8, i8* %145, align 1
  store i8 %146, i8* %21, align 1
  br label %147

147:                                              ; preds = %6, %42, %51, %57, %63, %69, %87, %115, %75
  %148 = add nuw nsw i64 %7, 1
  %149 = icmp eq i64 %148, 16
  br i1 %149, label %150, label %6

150:                                              ; preds = %147
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define internal void @vp8_v_loop_filter8uv_inner_c(i8* nocapture, i8* nocapture, i64, i32, i32, i32) #2 {
  %7 = mul nsw i64 %2, -3
  %8 = mul nsw i64 %2, -2
  %9 = sub nsw i64 0, %2
  %10 = shl nsw i64 %2, 1
  %11 = mul nsw i64 %2, 3
  %12 = mul nsw i64 %2, -4
  br label %13

13:                                               ; preds = %153, %6
  %14 = phi i64 [ 0, %6 ], [ %154, %153 ]
  %15 = getelementptr inbounds i8, i8* %0, i64 %14
  %16 = getelementptr inbounds i8, i8* %15, i64 %7
  %17 = load i8, i8* %16, align 1
  %18 = zext i8 %17 to i32
  %19 = getelementptr inbounds i8, i8* %15, i64 %8
  %20 = load i8, i8* %19, align 1
  %21 = zext i8 %20 to i32
  %22 = getelementptr inbounds i8, i8* %15, i64 %9
  %23 = load i8, i8* %22, align 1
  %24 = zext i8 %23 to i32
  %25 = load i8, i8* %15, align 1
  %26 = zext i8 %25 to i32
  %27 = getelementptr inbounds i8, i8* %15, i64 %2
  %28 = load i8, i8* %27, align 1
  %29 = zext i8 %28 to i32
  %30 = getelementptr inbounds i8, i8* %15, i64 %10
  %31 = load i8, i8* %30, align 1
  %32 = zext i8 %31 to i32
  %33 = getelementptr inbounds i8, i8* %15, i64 %11
  %34 = load i8, i8* %33, align 1
  %35 = zext i8 %34 to i32
  %36 = sub nsw i32 %24, %26
  %37 = icmp slt i32 %36, 0
  %38 = sub nsw i32 0, %36
  %39 = select i1 %37, i32 %38, i32 %36
  %40 = shl nuw nsw i32 %39, 1
  %41 = sub nsw i32 %21, %29
  %42 = icmp slt i32 %41, 0
  %43 = sub nsw i32 0, %41
  %44 = select i1 %42, i32 %43, i32 %41
  %45 = lshr i32 %44, 1
  %46 = add nuw nsw i32 %45, %40
  %47 = icmp sgt i32 %46, %3
  br i1 %47, label %153, label %48

48:                                               ; preds = %13
  %49 = getelementptr inbounds i8, i8* %15, i64 %12
  %50 = load i8, i8* %49, align 1
  %51 = zext i8 %50 to i32
  %52 = sub nsw i32 %51, %18
  %53 = icmp slt i32 %52, 0
  %54 = sub nsw i32 0, %52
  %55 = select i1 %53, i32 %54, i32 %52
  %56 = icmp sgt i32 %55, %4
  br i1 %56, label %153, label %57

57:                                               ; preds = %48
  %58 = sub nsw i32 %18, %21
  %59 = icmp slt i32 %58, 0
  %60 = sub nsw i32 0, %58
  %61 = select i1 %59, i32 %60, i32 %58
  %62 = icmp sgt i32 %61, %4
  br i1 %62, label %153, label %63

63:                                               ; preds = %57
  %64 = sub nsw i32 %21, %24
  %65 = icmp slt i32 %64, 0
  %66 = sub nsw i32 0, %64
  %67 = select i1 %65, i32 %66, i32 %64
  %68 = icmp sgt i32 %67, %4
  br i1 %68, label %153, label %69

69:                                               ; preds = %63
  %70 = sub nsw i32 %35, %32
  %71 = icmp slt i32 %70, 0
  %72 = sub nsw i32 0, %70
  %73 = select i1 %71, i32 %72, i32 %70
  %74 = icmp sgt i32 %73, %4
  br i1 %74, label %153, label %75

75:                                               ; preds = %69
  %76 = sub nsw i32 %32, %29
  %77 = icmp slt i32 %76, 0
  %78 = sub nsw i32 0, %76
  %79 = select i1 %77, i32 %78, i32 %76
  %80 = icmp sgt i32 %79, %4
  br i1 %80, label %153, label %81

81:                                               ; preds = %75
  %82 = sub nsw i32 %29, %26
  %83 = icmp slt i32 %82, 0
  %84 = sub nsw i32 0, %82
  %85 = select i1 %83, i32 %84, i32 %82
  %86 = icmp sgt i32 %85, %4
  br i1 %86, label %153, label %87

87:                                               ; preds = %81
  %88 = icmp sgt i32 %67, %5
  %89 = icmp sgt i32 %85, %5
  %90 = or i1 %88, %89
  %91 = sub nsw i32 %26, %24
  %92 = mul nsw i32 %91, 3
  br i1 %90, label %93, label %121

93:                                               ; preds = %87
  %94 = add nuw nsw i32 %21, 128
  %95 = sub nsw i32 %94, %29
  %96 = sext i32 %95 to i64
  %97 = getelementptr inbounds i8, i8* getelementptr inbounds ([2304 x i8], [2304 x i8]* @ff_crop_tab, i64 0, i64 1024), i64 %96
  %98 = load i8, i8* %97, align 1
  %99 = zext i8 %98 to i32
  %100 = add nsw i32 %92, %99
  %101 = sext i32 %100 to i64
  %102 = getelementptr inbounds i8, i8* getelementptr inbounds ([2304 x i8], [2304 x i8]* @ff_crop_tab, i64 0, i64 1024), i64 %101
  %103 = load i8, i8* %102, align 1
  %104 = zext i8 %103 to i32
  %105 = icmp ult i32 %104, 251
  %106 = select i1 %105, i32 %104, i32 251
  %107 = add nsw i32 %106, -124
  %108 = ashr i32 %107, 3
  %109 = icmp ult i32 %104, 252
  %110 = select i1 %109, i32 %104, i32 252
  %111 = add nsw i32 %110, -125
  %112 = ashr i32 %111, 3
  %113 = add nsw i32 %112, %24
  %114 = sext i32 %113 to i64
  %115 = getelementptr inbounds i8, i8* getelementptr inbounds ([2304 x i8], [2304 x i8]* @ff_crop_tab, i64 0, i64 1024), i64 %114
  %116 = load i8, i8* %115, align 1
  store i8 %116, i8* %22, align 1
  %117 = sub nsw i32 %26, %108
  %118 = sext i32 %117 to i64
  %119 = getelementptr inbounds i8, i8* getelementptr inbounds ([2304 x i8], [2304 x i8]* @ff_crop_tab, i64 0, i64 1024), i64 %118
  %120 = load i8, i8* %119, align 1
  store i8 %120, i8* %15, align 1
  br label %153

121:                                              ; preds = %87
  %122 = add nsw i32 %92, 128
  %123 = sext i32 %122 to i64
  %124 = getelementptr inbounds i8, i8* getelementptr inbounds ([2304 x i8], [2304 x i8]* @ff_crop_tab, i64 0, i64 1024), i64 %123
  %125 = load i8, i8* %124, align 1
  %126 = zext i8 %125 to i32
  %127 = icmp ult i32 %126, 251
  %128 = select i1 %127, i32 %126, i32 251
  %129 = add nsw i32 %128, -124
  %130 = ashr i32 %129, 3
  %131 = icmp ult i32 %126, 252
  %132 = select i1 %131, i32 %126, i32 252
  %133 = add nsw i32 %132, -125
  %134 = ashr i32 %133, 3
  %135 = add nsw i32 %134, %24
  %136 = sext i32 %135 to i64
  %137 = getelementptr inbounds i8, i8* getelementptr inbounds ([2304 x i8], [2304 x i8]* @ff_crop_tab, i64 0, i64 1024), i64 %136
  %138 = load i8, i8* %137, align 1
  store i8 %138, i8* %22, align 1
  %139 = sub nsw i32 %26, %130
  %140 = sext i32 %139 to i64
  %141 = getelementptr inbounds i8, i8* getelementptr inbounds ([2304 x i8], [2304 x i8]* @ff_crop_tab, i64 0, i64 1024), i64 %140
  %142 = load i8, i8* %141, align 1
  store i8 %142, i8* %15, align 1
  %143 = add nsw i32 %130, 1
  %144 = ashr i32 %143, 1
  %145 = add nsw i32 %144, %21
  %146 = sext i32 %145 to i64
  %147 = getelementptr inbounds i8, i8* getelementptr inbounds ([2304 x i8], [2304 x i8]* @ff_crop_tab, i64 0, i64 1024), i64 %146
  %148 = load i8, i8* %147, align 1
  store i8 %148, i8* %19, align 1
  %149 = sub nsw i32 %29, %144
  %150 = sext i32 %149 to i64
  %151 = getelementptr inbounds i8, i8* getelementptr inbounds ([2304 x i8], [2304 x i8]* @ff_crop_tab, i64 0, i64 1024), i64 %150
  %152 = load i8, i8* %151, align 1
  store i8 %152, i8* %27, align 1
  br label %153

153:                                              ; preds = %121, %93, %81, %75, %69, %63, %57, %48, %13
  %154 = add nuw nsw i64 %14, 1
  %155 = icmp eq i64 %154, 8
  br i1 %155, label %156, label %13

156:                                              ; preds = %153, %296
  %157 = phi i64 [ %297, %296 ], [ 0, %153 ]
  %158 = getelementptr inbounds i8, i8* %1, i64 %157
  %159 = getelementptr inbounds i8, i8* %158, i64 %7
  %160 = load i8, i8* %159, align 1
  %161 = zext i8 %160 to i32
  %162 = getelementptr inbounds i8, i8* %158, i64 %8
  %163 = load i8, i8* %162, align 1
  %164 = zext i8 %163 to i32
  %165 = getelementptr inbounds i8, i8* %158, i64 %9
  %166 = load i8, i8* %165, align 1
  %167 = zext i8 %166 to i32
  %168 = load i8, i8* %158, align 1
  %169 = zext i8 %168 to i32
  %170 = getelementptr inbounds i8, i8* %158, i64 %2
  %171 = load i8, i8* %170, align 1
  %172 = zext i8 %171 to i32
  %173 = getelementptr inbounds i8, i8* %158, i64 %10
  %174 = load i8, i8* %173, align 1
  %175 = zext i8 %174 to i32
  %176 = getelementptr inbounds i8, i8* %158, i64 %11
  %177 = load i8, i8* %176, align 1
  %178 = zext i8 %177 to i32
  %179 = sub nsw i32 %167, %169
  %180 = icmp slt i32 %179, 0
  %181 = sub nsw i32 0, %179
  %182 = select i1 %180, i32 %181, i32 %179
  %183 = shl nuw nsw i32 %182, 1
  %184 = sub nsw i32 %164, %172
  %185 = icmp slt i32 %184, 0
  %186 = sub nsw i32 0, %184
  %187 = select i1 %185, i32 %186, i32 %184
  %188 = lshr i32 %187, 1
  %189 = add nuw nsw i32 %188, %183
  %190 = icmp sgt i32 %189, %3
  br i1 %190, label %296, label %191

191:                                              ; preds = %156
  %192 = getelementptr inbounds i8, i8* %158, i64 %12
  %193 = load i8, i8* %192, align 1
  %194 = zext i8 %193 to i32
  %195 = sub nsw i32 %194, %161
  %196 = icmp slt i32 %195, 0
  %197 = sub nsw i32 0, %195
  %198 = select i1 %196, i32 %197, i32 %195
  %199 = icmp sgt i32 %198, %4
  br i1 %199, label %296, label %200

200:                                              ; preds = %191
  %201 = sub nsw i32 %161, %164
  %202 = icmp slt i32 %201, 0
  %203 = sub nsw i32 0, %201
  %204 = select i1 %202, i32 %203, i32 %201
  %205 = icmp sgt i32 %204, %4
  br i1 %205, label %296, label %206

206:                                              ; preds = %200
  %207 = sub nsw i32 %164, %167
  %208 = icmp slt i32 %207, 0
  %209 = sub nsw i32 0, %207
  %210 = select i1 %208, i32 %209, i32 %207
  %211 = icmp sgt i32 %210, %4
  br i1 %211, label %296, label %212

212:                                              ; preds = %206
  %213 = sub nsw i32 %178, %175
  %214 = icmp slt i32 %213, 0
  %215 = sub nsw i32 0, %213
  %216 = select i1 %214, i32 %215, i32 %213
  %217 = icmp sgt i32 %216, %4
  br i1 %217, label %296, label %218

218:                                              ; preds = %212
  %219 = sub nsw i32 %175, %172
  %220 = icmp slt i32 %219, 0
  %221 = sub nsw i32 0, %219
  %222 = select i1 %220, i32 %221, i32 %219
  %223 = icmp sgt i32 %222, %4
  br i1 %223, label %296, label %224

224:                                              ; preds = %218
  %225 = sub nsw i32 %172, %169
  %226 = icmp slt i32 %225, 0
  %227 = sub nsw i32 0, %225
  %228 = select i1 %226, i32 %227, i32 %225
  %229 = icmp sgt i32 %228, %4
  br i1 %229, label %296, label %230

230:                                              ; preds = %224
  %231 = icmp sgt i32 %210, %5
  %232 = icmp sgt i32 %228, %5
  %233 = or i1 %231, %232
  %234 = sub nsw i32 %169, %167
  %235 = mul nsw i32 %234, 3
  br i1 %233, label %236, label %264

236:                                              ; preds = %230
  %237 = add nuw nsw i32 %164, 128
  %238 = sub nsw i32 %237, %172
  %239 = sext i32 %238 to i64
  %240 = getelementptr inbounds i8, i8* getelementptr inbounds ([2304 x i8], [2304 x i8]* @ff_crop_tab, i64 0, i64 1024), i64 %239
  %241 = load i8, i8* %240, align 1
  %242 = zext i8 %241 to i32
  %243 = add nsw i32 %235, %242
  %244 = sext i32 %243 to i64
  %245 = getelementptr inbounds i8, i8* getelementptr inbounds ([2304 x i8], [2304 x i8]* @ff_crop_tab, i64 0, i64 1024), i64 %244
  %246 = load i8, i8* %245, align 1
  %247 = zext i8 %246 to i32
  %248 = icmp ult i32 %247, 251
  %249 = select i1 %248, i32 %247, i32 251
  %250 = add nsw i32 %249, -124
  %251 = ashr i32 %250, 3
  %252 = icmp ult i32 %247, 252
  %253 = select i1 %252, i32 %247, i32 252
  %254 = add nsw i32 %253, -125
  %255 = ashr i32 %254, 3
  %256 = add nsw i32 %255, %167
  %257 = sext i32 %256 to i64
  %258 = getelementptr inbounds i8, i8* getelementptr inbounds ([2304 x i8], [2304 x i8]* @ff_crop_tab, i64 0, i64 1024), i64 %257
  %259 = load i8, i8* %258, align 1
  store i8 %259, i8* %165, align 1
  %260 = sub nsw i32 %169, %251
  %261 = sext i32 %260 to i64
  %262 = getelementptr inbounds i8, i8* getelementptr inbounds ([2304 x i8], [2304 x i8]* @ff_crop_tab, i64 0, i64 1024), i64 %261
  %263 = load i8, i8* %262, align 1
  store i8 %263, i8* %158, align 1
  br label %296

264:                                              ; preds = %230
  %265 = add nsw i32 %235, 128
  %266 = sext i32 %265 to i64
  %267 = getelementptr inbounds i8, i8* getelementptr inbounds ([2304 x i8], [2304 x i8]* @ff_crop_tab, i64 0, i64 1024), i64 %266
  %268 = load i8, i8* %267, align 1
  %269 = zext i8 %268 to i32
  %270 = icmp ult i32 %269, 251
  %271 = select i1 %270, i32 %269, i32 251
  %272 = add nsw i32 %271, -124
  %273 = ashr i32 %272, 3
  %274 = icmp ult i32 %269, 252
  %275 = select i1 %274, i32 %269, i32 252
  %276 = add nsw i32 %275, -125
  %277 = ashr i32 %276, 3
  %278 = add nsw i32 %277, %167
  %279 = sext i32 %278 to i64
  %280 = getelementptr inbounds i8, i8* getelementptr inbounds ([2304 x i8], [2304 x i8]* @ff_crop_tab, i64 0, i64 1024), i64 %279
  %281 = load i8, i8* %280, align 1
  store i8 %281, i8* %165, align 1
  %282 = sub nsw i32 %169, %273
  %283 = sext i32 %282 to i64
  %284 = getelementptr inbounds i8, i8* getelementptr inbounds ([2304 x i8], [2304 x i8]* @ff_crop_tab, i64 0, i64 1024), i64 %283
  %285 = load i8, i8* %284, align 1
  store i8 %285, i8* %158, align 1
  %286 = add nsw i32 %273, 1
  %287 = ashr i32 %286, 1
  %288 = add nsw i32 %287, %164
  %289 = sext i32 %288 to i64
  %290 = getelementptr inbounds i8, i8* getelementptr inbounds ([2304 x i8], [2304 x i8]* @ff_crop_tab, i64 0, i64 1024), i64 %289
  %291 = load i8, i8* %290, align 1
  store i8 %291, i8* %162, align 1
  %292 = sub nsw i32 %172, %287
  %293 = sext i32 %292 to i64
  %294 = getelementptr inbounds i8, i8* getelementptr inbounds ([2304 x i8], [2304 x i8]* @ff_crop_tab, i64 0, i64 1024), i64 %293
  %295 = load i8, i8* %294, align 1
  store i8 %295, i8* %170, align 1
  br label %296

296:                                              ; preds = %264, %236, %224, %218, %212, %206, %200, %191, %156
  %297 = add nuw nsw i64 %157, 1
  %298 = icmp eq i64 %297, 8
  br i1 %298, label %299, label %156

299:                                              ; preds = %296
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define internal void @vp8_h_loop_filter8uv_inner_c(i8* nocapture, i8* nocapture, i64, i32, i32, i32) #2 {
  br label %7

7:                                                ; preds = %148, %6
  %8 = phi i64 [ 0, %6 ], [ %149, %148 ]
  %9 = mul nsw i64 %8, %2
  %10 = getelementptr inbounds i8, i8* %0, i64 %9
  %11 = getelementptr inbounds i8, i8* %10, i64 -3
  %12 = load i8, i8* %11, align 1
  %13 = zext i8 %12 to i32
  %14 = getelementptr inbounds i8, i8* %10, i64 -2
  %15 = load i8, i8* %14, align 1
  %16 = zext i8 %15 to i32
  %17 = getelementptr inbounds i8, i8* %10, i64 -1
  %18 = load i8, i8* %17, align 1
  %19 = zext i8 %18 to i32
  %20 = load i8, i8* %10, align 1
  %21 = zext i8 %20 to i32
  %22 = getelementptr inbounds i8, i8* %10, i64 1
  %23 = load i8, i8* %22, align 1
  %24 = zext i8 %23 to i32
  %25 = getelementptr inbounds i8, i8* %10, i64 2
  %26 = load i8, i8* %25, align 1
  %27 = zext i8 %26 to i32
  %28 = getelementptr inbounds i8, i8* %10, i64 3
  %29 = load i8, i8* %28, align 1
  %30 = zext i8 %29 to i32
  %31 = sub nsw i32 %19, %21
  %32 = icmp slt i32 %31, 0
  %33 = sub nsw i32 0, %31
  %34 = select i1 %32, i32 %33, i32 %31
  %35 = shl nuw nsw i32 %34, 1
  %36 = sub nsw i32 %16, %24
  %37 = icmp slt i32 %36, 0
  %38 = sub nsw i32 0, %36
  %39 = select i1 %37, i32 %38, i32 %36
  %40 = lshr i32 %39, 1
  %41 = add nuw nsw i32 %40, %35
  %42 = icmp sgt i32 %41, %3
  br i1 %42, label %148, label %43

43:                                               ; preds = %7
  %44 = getelementptr inbounds i8, i8* %10, i64 -4
  %45 = load i8, i8* %44, align 1
  %46 = zext i8 %45 to i32
  %47 = sub nsw i32 %46, %13
  %48 = icmp slt i32 %47, 0
  %49 = sub nsw i32 0, %47
  %50 = select i1 %48, i32 %49, i32 %47
  %51 = icmp sgt i32 %50, %4
  br i1 %51, label %148, label %52

52:                                               ; preds = %43
  %53 = sub nsw i32 %13, %16
  %54 = icmp slt i32 %53, 0
  %55 = sub nsw i32 0, %53
  %56 = select i1 %54, i32 %55, i32 %53
  %57 = icmp sgt i32 %56, %4
  br i1 %57, label %148, label %58

58:                                               ; preds = %52
  %59 = sub nsw i32 %16, %19
  %60 = icmp slt i32 %59, 0
  %61 = sub nsw i32 0, %59
  %62 = select i1 %60, i32 %61, i32 %59
  %63 = icmp sgt i32 %62, %4
  br i1 %63, label %148, label %64

64:                                               ; preds = %58
  %65 = sub nsw i32 %30, %27
  %66 = icmp slt i32 %65, 0
  %67 = sub nsw i32 0, %65
  %68 = select i1 %66, i32 %67, i32 %65
  %69 = icmp sgt i32 %68, %4
  br i1 %69, label %148, label %70

70:                                               ; preds = %64
  %71 = sub nsw i32 %27, %24
  %72 = icmp slt i32 %71, 0
  %73 = sub nsw i32 0, %71
  %74 = select i1 %72, i32 %73, i32 %71
  %75 = icmp sgt i32 %74, %4
  br i1 %75, label %148, label %76

76:                                               ; preds = %70
  %77 = sub nsw i32 %24, %21
  %78 = icmp slt i32 %77, 0
  %79 = sub nsw i32 0, %77
  %80 = select i1 %78, i32 %79, i32 %77
  %81 = icmp sgt i32 %80, %4
  br i1 %81, label %148, label %82

82:                                               ; preds = %76
  %83 = icmp sgt i32 %62, %5
  %84 = icmp sgt i32 %80, %5
  %85 = or i1 %83, %84
  %86 = sub nsw i32 %21, %19
  %87 = mul nsw i32 %86, 3
  br i1 %85, label %88, label %116

88:                                               ; preds = %82
  %89 = add nuw nsw i32 %16, 128
  %90 = sub nsw i32 %89, %24
  %91 = sext i32 %90 to i64
  %92 = getelementptr inbounds i8, i8* getelementptr inbounds ([2304 x i8], [2304 x i8]* @ff_crop_tab, i64 0, i64 1024), i64 %91
  %93 = load i8, i8* %92, align 1
  %94 = zext i8 %93 to i32
  %95 = add nsw i32 %87, %94
  %96 = sext i32 %95 to i64
  %97 = getelementptr inbounds i8, i8* getelementptr inbounds ([2304 x i8], [2304 x i8]* @ff_crop_tab, i64 0, i64 1024), i64 %96
  %98 = load i8, i8* %97, align 1
  %99 = zext i8 %98 to i32
  %100 = icmp ult i32 %99, 251
  %101 = select i1 %100, i32 %99, i32 251
  %102 = add nsw i32 %101, -124
  %103 = ashr i32 %102, 3
  %104 = icmp ult i32 %99, 252
  %105 = select i1 %104, i32 %99, i32 252
  %106 = add nsw i32 %105, -125
  %107 = ashr i32 %106, 3
  %108 = add nsw i32 %107, %19
  %109 = sext i32 %108 to i64
  %110 = getelementptr inbounds i8, i8* getelementptr inbounds ([2304 x i8], [2304 x i8]* @ff_crop_tab, i64 0, i64 1024), i64 %109
  %111 = load i8, i8* %110, align 1
  store i8 %111, i8* %17, align 1
  %112 = sub nsw i32 %21, %103
  %113 = sext i32 %112 to i64
  %114 = getelementptr inbounds i8, i8* getelementptr inbounds ([2304 x i8], [2304 x i8]* @ff_crop_tab, i64 0, i64 1024), i64 %113
  %115 = load i8, i8* %114, align 1
  store i8 %115, i8* %10, align 1
  br label %148

116:                                              ; preds = %82
  %117 = add nsw i32 %87, 128
  %118 = sext i32 %117 to i64
  %119 = getelementptr inbounds i8, i8* getelementptr inbounds ([2304 x i8], [2304 x i8]* @ff_crop_tab, i64 0, i64 1024), i64 %118
  %120 = load i8, i8* %119, align 1
  %121 = zext i8 %120 to i32
  %122 = icmp ult i32 %121, 251
  %123 = select i1 %122, i32 %121, i32 251
  %124 = add nsw i32 %123, -124
  %125 = ashr i32 %124, 3
  %126 = icmp ult i32 %121, 252
  %127 = select i1 %126, i32 %121, i32 252
  %128 = add nsw i32 %127, -125
  %129 = ashr i32 %128, 3
  %130 = add nsw i32 %129, %19
  %131 = sext i32 %130 to i64
  %132 = getelementptr inbounds i8, i8* getelementptr inbounds ([2304 x i8], [2304 x i8]* @ff_crop_tab, i64 0, i64 1024), i64 %131
  %133 = load i8, i8* %132, align 1
  store i8 %133, i8* %17, align 1
  %134 = sub nsw i32 %21, %125
  %135 = sext i32 %134 to i64
  %136 = getelementptr inbounds i8, i8* getelementptr inbounds ([2304 x i8], [2304 x i8]* @ff_crop_tab, i64 0, i64 1024), i64 %135
  %137 = load i8, i8* %136, align 1
  store i8 %137, i8* %10, align 1
  %138 = add nsw i32 %125, 1
  %139 = ashr i32 %138, 1
  %140 = add nsw i32 %139, %16
  %141 = sext i32 %140 to i64
  %142 = getelementptr inbounds i8, i8* getelementptr inbounds ([2304 x i8], [2304 x i8]* @ff_crop_tab, i64 0, i64 1024), i64 %141
  %143 = load i8, i8* %142, align 1
  store i8 %143, i8* %14, align 1
  %144 = sub nsw i32 %24, %139
  %145 = sext i32 %144 to i64
  %146 = getelementptr inbounds i8, i8* getelementptr inbounds ([2304 x i8], [2304 x i8]* @ff_crop_tab, i64 0, i64 1024), i64 %145
  %147 = load i8, i8* %146, align 1
  store i8 %147, i8* %22, align 1
  br label %148

148:                                              ; preds = %116, %88, %76, %70, %64, %58, %52, %43, %7
  %149 = add nuw nsw i64 %8, 1
  %150 = icmp eq i64 %149, 8
  br i1 %150, label %151, label %7

151:                                              ; preds = %148, %292
  %152 = phi i64 [ %293, %292 ], [ 0, %148 ]
  %153 = mul nsw i64 %152, %2
  %154 = getelementptr inbounds i8, i8* %1, i64 %153
  %155 = getelementptr inbounds i8, i8* %154, i64 -3
  %156 = load i8, i8* %155, align 1
  %157 = zext i8 %156 to i32
  %158 = getelementptr inbounds i8, i8* %154, i64 -2
  %159 = load i8, i8* %158, align 1
  %160 = zext i8 %159 to i32
  %161 = getelementptr inbounds i8, i8* %154, i64 -1
  %162 = load i8, i8* %161, align 1
  %163 = zext i8 %162 to i32
  %164 = load i8, i8* %154, align 1
  %165 = zext i8 %164 to i32
  %166 = getelementptr inbounds i8, i8* %154, i64 1
  %167 = load i8, i8* %166, align 1
  %168 = zext i8 %167 to i32
  %169 = getelementptr inbounds i8, i8* %154, i64 2
  %170 = load i8, i8* %169, align 1
  %171 = zext i8 %170 to i32
  %172 = getelementptr inbounds i8, i8* %154, i64 3
  %173 = load i8, i8* %172, align 1
  %174 = zext i8 %173 to i32
  %175 = sub nsw i32 %163, %165
  %176 = icmp slt i32 %175, 0
  %177 = sub nsw i32 0, %175
  %178 = select i1 %176, i32 %177, i32 %175
  %179 = shl nuw nsw i32 %178, 1
  %180 = sub nsw i32 %160, %168
  %181 = icmp slt i32 %180, 0
  %182 = sub nsw i32 0, %180
  %183 = select i1 %181, i32 %182, i32 %180
  %184 = lshr i32 %183, 1
  %185 = add nuw nsw i32 %184, %179
  %186 = icmp sgt i32 %185, %3
  br i1 %186, label %292, label %187

187:                                              ; preds = %151
  %188 = getelementptr inbounds i8, i8* %154, i64 -4
  %189 = load i8, i8* %188, align 1
  %190 = zext i8 %189 to i32
  %191 = sub nsw i32 %190, %157
  %192 = icmp slt i32 %191, 0
  %193 = sub nsw i32 0, %191
  %194 = select i1 %192, i32 %193, i32 %191
  %195 = icmp sgt i32 %194, %4
  br i1 %195, label %292, label %196

196:                                              ; preds = %187
  %197 = sub nsw i32 %157, %160
  %198 = icmp slt i32 %197, 0
  %199 = sub nsw i32 0, %197
  %200 = select i1 %198, i32 %199, i32 %197
  %201 = icmp sgt i32 %200, %4
  br i1 %201, label %292, label %202

202:                                              ; preds = %196
  %203 = sub nsw i32 %160, %163
  %204 = icmp slt i32 %203, 0
  %205 = sub nsw i32 0, %203
  %206 = select i1 %204, i32 %205, i32 %203
  %207 = icmp sgt i32 %206, %4
  br i1 %207, label %292, label %208

208:                                              ; preds = %202
  %209 = sub nsw i32 %174, %171
  %210 = icmp slt i32 %209, 0
  %211 = sub nsw i32 0, %209
  %212 = select i1 %210, i32 %211, i32 %209
  %213 = icmp sgt i32 %212, %4
  br i1 %213, label %292, label %214

214:                                              ; preds = %208
  %215 = sub nsw i32 %171, %168
  %216 = icmp slt i32 %215, 0
  %217 = sub nsw i32 0, %215
  %218 = select i1 %216, i32 %217, i32 %215
  %219 = icmp sgt i32 %218, %4
  br i1 %219, label %292, label %220

220:                                              ; preds = %214
  %221 = sub nsw i32 %168, %165
  %222 = icmp slt i32 %221, 0
  %223 = sub nsw i32 0, %221
  %224 = select i1 %222, i32 %223, i32 %221
  %225 = icmp sgt i32 %224, %4
  br i1 %225, label %292, label %226

226:                                              ; preds = %220
  %227 = icmp sgt i32 %206, %5
  %228 = icmp sgt i32 %224, %5
  %229 = or i1 %227, %228
  %230 = sub nsw i32 %165, %163
  %231 = mul nsw i32 %230, 3
  br i1 %229, label %232, label %260

232:                                              ; preds = %226
  %233 = add nuw nsw i32 %160, 128
  %234 = sub nsw i32 %233, %168
  %235 = sext i32 %234 to i64
  %236 = getelementptr inbounds i8, i8* getelementptr inbounds ([2304 x i8], [2304 x i8]* @ff_crop_tab, i64 0, i64 1024), i64 %235
  %237 = load i8, i8* %236, align 1
  %238 = zext i8 %237 to i32
  %239 = add nsw i32 %231, %238
  %240 = sext i32 %239 to i64
  %241 = getelementptr inbounds i8, i8* getelementptr inbounds ([2304 x i8], [2304 x i8]* @ff_crop_tab, i64 0, i64 1024), i64 %240
  %242 = load i8, i8* %241, align 1
  %243 = zext i8 %242 to i32
  %244 = icmp ult i32 %243, 251
  %245 = select i1 %244, i32 %243, i32 251
  %246 = add nsw i32 %245, -124
  %247 = ashr i32 %246, 3
  %248 = icmp ult i32 %243, 252
  %249 = select i1 %248, i32 %243, i32 252
  %250 = add nsw i32 %249, -125
  %251 = ashr i32 %250, 3
  %252 = add nsw i32 %251, %163
  %253 = sext i32 %252 to i64
  %254 = getelementptr inbounds i8, i8* getelementptr inbounds ([2304 x i8], [2304 x i8]* @ff_crop_tab, i64 0, i64 1024), i64 %253
  %255 = load i8, i8* %254, align 1
  store i8 %255, i8* %161, align 1
  %256 = sub nsw i32 %165, %247
  %257 = sext i32 %256 to i64
  %258 = getelementptr inbounds i8, i8* getelementptr inbounds ([2304 x i8], [2304 x i8]* @ff_crop_tab, i64 0, i64 1024), i64 %257
  %259 = load i8, i8* %258, align 1
  store i8 %259, i8* %154, align 1
  br label %292

260:                                              ; preds = %226
  %261 = add nsw i32 %231, 128
  %262 = sext i32 %261 to i64
  %263 = getelementptr inbounds i8, i8* getelementptr inbounds ([2304 x i8], [2304 x i8]* @ff_crop_tab, i64 0, i64 1024), i64 %262
  %264 = load i8, i8* %263, align 1
  %265 = zext i8 %264 to i32
  %266 = icmp ult i32 %265, 251
  %267 = select i1 %266, i32 %265, i32 251
  %268 = add nsw i32 %267, -124
  %269 = ashr i32 %268, 3
  %270 = icmp ult i32 %265, 252
  %271 = select i1 %270, i32 %265, i32 252
  %272 = add nsw i32 %271, -125
  %273 = ashr i32 %272, 3
  %274 = add nsw i32 %273, %163
  %275 = sext i32 %274 to i64
  %276 = getelementptr inbounds i8, i8* getelementptr inbounds ([2304 x i8], [2304 x i8]* @ff_crop_tab, i64 0, i64 1024), i64 %275
  %277 = load i8, i8* %276, align 1
  store i8 %277, i8* %161, align 1
  %278 = sub nsw i32 %165, %269
  %279 = sext i32 %278 to i64
  %280 = getelementptr inbounds i8, i8* getelementptr inbounds ([2304 x i8], [2304 x i8]* @ff_crop_tab, i64 0, i64 1024), i64 %279
  %281 = load i8, i8* %280, align 1
  store i8 %281, i8* %154, align 1
  %282 = add nsw i32 %269, 1
  %283 = ashr i32 %282, 1
  %284 = add nsw i32 %283, %160
  %285 = sext i32 %284 to i64
  %286 = getelementptr inbounds i8, i8* getelementptr inbounds ([2304 x i8], [2304 x i8]* @ff_crop_tab, i64 0, i64 1024), i64 %285
  %287 = load i8, i8* %286, align 1
  store i8 %287, i8* %158, align 1
  %288 = sub nsw i32 %168, %283
  %289 = sext i32 %288 to i64
  %290 = getelementptr inbounds i8, i8* getelementptr inbounds ([2304 x i8], [2304 x i8]* @ff_crop_tab, i64 0, i64 1024), i64 %289
  %291 = load i8, i8* %290, align 1
  store i8 %291, i8* %166, align 1
  br label %292

292:                                              ; preds = %260, %232, %220, %214, %208, %202, %196, %187, %151
  %293 = add nuw nsw i64 %152, 1
  %294 = icmp eq i64 %293, 8
  br i1 %294, label %295, label %151

295:                                              ; preds = %292
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define internal void @vp8_v_loop_filter_simple_c(i8* nocapture, i64, i32) #2 {
  %4 = mul nsw i64 %1, -2
  %5 = sub nsw i64 0, %1
  br label %6

6:                                                ; preds = %62, %3
  %7 = phi i64 [ 0, %3 ], [ %63, %62 ]
  %8 = getelementptr inbounds i8, i8* %0, i64 %7
  %9 = getelementptr inbounds i8, i8* %8, i64 %4
  %10 = load i8, i8* %9, align 1
  %11 = zext i8 %10 to i32
  %12 = getelementptr inbounds i8, i8* %8, i64 %5
  %13 = load i8, i8* %12, align 1
  %14 = zext i8 %13 to i32
  %15 = load i8, i8* %8, align 1
  %16 = zext i8 %15 to i32
  %17 = getelementptr inbounds i8, i8* %8, i64 %1
  %18 = load i8, i8* %17, align 1
  %19 = zext i8 %18 to i32
  %20 = sub nsw i32 %14, %16
  %21 = icmp slt i32 %20, 0
  %22 = sub nsw i32 0, %20
  %23 = select i1 %21, i32 %22, i32 %20
  %24 = shl nuw nsw i32 %23, 1
  %25 = sub nsw i32 %11, %19
  %26 = icmp slt i32 %25, 0
  %27 = sub nsw i32 0, %25
  %28 = select i1 %26, i32 %27, i32 %25
  %29 = lshr i32 %28, 1
  %30 = add nuw nsw i32 %29, %24
  %31 = icmp sgt i32 %30, %2
  br i1 %31, label %62, label %32

32:                                               ; preds = %6
  %33 = sub nsw i32 %16, %14
  %34 = mul nsw i32 %33, 3
  %35 = add nuw nsw i32 %11, 128
  %36 = sub nsw i32 %35, %19
  %37 = sext i32 %36 to i64
  %38 = getelementptr inbounds i8, i8* getelementptr inbounds ([2304 x i8], [2304 x i8]* @ff_crop_tab, i64 0, i64 1024), i64 %37
  %39 = load i8, i8* %38, align 1
  %40 = zext i8 %39 to i32
  %41 = add nsw i32 %34, %40
  %42 = sext i32 %41 to i64
  %43 = getelementptr inbounds i8, i8* getelementptr inbounds ([2304 x i8], [2304 x i8]* @ff_crop_tab, i64 0, i64 1024), i64 %42
  %44 = load i8, i8* %43, align 1
  %45 = zext i8 %44 to i32
  %46 = icmp ult i32 %45, 251
  %47 = select i1 %46, i32 %45, i32 251
  %48 = add nsw i32 %47, -124
  %49 = ashr i32 %48, 3
  %50 = icmp ult i32 %45, 252
  %51 = select i1 %50, i32 %45, i32 252
  %52 = add nsw i32 %51, -125
  %53 = ashr i32 %52, 3
  %54 = add nsw i32 %53, %14
  %55 = sext i32 %54 to i64
  %56 = getelementptr inbounds i8, i8* getelementptr inbounds ([2304 x i8], [2304 x i8]* @ff_crop_tab, i64 0, i64 1024), i64 %55
  %57 = load i8, i8* %56, align 1
  store i8 %57, i8* %12, align 1
  %58 = sub nsw i32 %16, %49
  %59 = sext i32 %58 to i64
  %60 = getelementptr inbounds i8, i8* getelementptr inbounds ([2304 x i8], [2304 x i8]* @ff_crop_tab, i64 0, i64 1024), i64 %59
  %61 = load i8, i8* %60, align 1
  store i8 %61, i8* %8, align 1
  br label %62

62:                                               ; preds = %6, %32
  %63 = add nuw nsw i64 %7, 1
  %64 = icmp eq i64 %63, 16
  br i1 %64, label %65, label %6

65:                                               ; preds = %62
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define internal void @vp8_h_loop_filter_simple_c(i8* nocapture, i64, i32) #2 {
  br label %4

4:                                                ; preds = %61, %3
  %5 = phi i64 [ 0, %3 ], [ %62, %61 ]
  %6 = mul nsw i64 %5, %1
  %7 = getelementptr inbounds i8, i8* %0, i64 %6
  %8 = getelementptr inbounds i8, i8* %7, i64 -2
  %9 = load i8, i8* %8, align 1
  %10 = zext i8 %9 to i32
  %11 = getelementptr inbounds i8, i8* %7, i64 -1
  %12 = load i8, i8* %11, align 1
  %13 = zext i8 %12 to i32
  %14 = load i8, i8* %7, align 1
  %15 = zext i8 %14 to i32
  %16 = getelementptr inbounds i8, i8* %7, i64 1
  %17 = load i8, i8* %16, align 1
  %18 = zext i8 %17 to i32
  %19 = sub nsw i32 %13, %15
  %20 = icmp slt i32 %19, 0
  %21 = sub nsw i32 0, %19
  %22 = select i1 %20, i32 %21, i32 %19
  %23 = shl nuw nsw i32 %22, 1
  %24 = sub nsw i32 %10, %18
  %25 = icmp slt i32 %24, 0
  %26 = sub nsw i32 0, %24
  %27 = select i1 %25, i32 %26, i32 %24
  %28 = lshr i32 %27, 1
  %29 = add nuw nsw i32 %28, %23
  %30 = icmp sgt i32 %29, %2
  br i1 %30, label %61, label %31

31:                                               ; preds = %4
  %32 = sub nsw i32 %15, %13
  %33 = mul nsw i32 %32, 3
  %34 = add nuw nsw i32 %10, 128
  %35 = sub nsw i32 %34, %18
  %36 = sext i32 %35 to i64
  %37 = getelementptr inbounds i8, i8* getelementptr inbounds ([2304 x i8], [2304 x i8]* @ff_crop_tab, i64 0, i64 1024), i64 %36
  %38 = load i8, i8* %37, align 1
  %39 = zext i8 %38 to i32
  %40 = add nsw i32 %33, %39
  %41 = sext i32 %40 to i64
  %42 = getelementptr inbounds i8, i8* getelementptr inbounds ([2304 x i8], [2304 x i8]* @ff_crop_tab, i64 0, i64 1024), i64 %41
  %43 = load i8, i8* %42, align 1
  %44 = zext i8 %43 to i32
  %45 = icmp ult i32 %44, 251
  %46 = select i1 %45, i32 %44, i32 251
  %47 = add nsw i32 %46, -124
  %48 = ashr i32 %47, 3
  %49 = icmp ult i32 %44, 252
  %50 = select i1 %49, i32 %44, i32 252
  %51 = add nsw i32 %50, -125
  %52 = ashr i32 %51, 3
  %53 = add nsw i32 %52, %13
  %54 = sext i32 %53 to i64
  %55 = getelementptr inbounds i8, i8* getelementptr inbounds ([2304 x i8], [2304 x i8]* @ff_crop_tab, i64 0, i64 1024), i64 %54
  %56 = load i8, i8* %55, align 1
  store i8 %56, i8* %11, align 1
  %57 = sub nsw i32 %15, %48
  %58 = sext i32 %57 to i64
  %59 = getelementptr inbounds i8, i8* getelementptr inbounds ([2304 x i8], [2304 x i8]* @ff_crop_tab, i64 0, i64 1024), i64 %58
  %60 = load i8, i8* %59, align 1
  store i8 %60, i8* %7, align 1
  br label %61

61:                                               ; preds = %4, %31
  %62 = add nuw nsw i64 %5, 1
  %63 = icmp eq i64 %62, 16
  br i1 %63, label %64, label %4

64:                                               ; preds = %61
  ret void
}

declare void @ff_vp8dsp_init_x86(%struct.VP8DSPContext*) local_unnamed_addr #3

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #4

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #4

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #4

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #4

attributes #0 = { cold nounwind optsize ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="true" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="true" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nofree norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="true" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="true" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { argmemonly nounwind }
attributes #5 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = distinct !{!2, !3}
!3 = !{!"llvm.loop.unroll.disable"}
!4 = distinct !{!4, !3}
!5 = distinct !{!5, !3}
