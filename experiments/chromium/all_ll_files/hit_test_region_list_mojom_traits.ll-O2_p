; ModuleID = '../../services/viz/public/cpp/hit_test/hit_test_region_list_mojom_traits.cc'
source_filename = "../../services/viz/public/cpp/hit_test/hit_test_region_list_mojom_traits.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.viz::mojom::internal::HitTestRegion_Data" = type { %"struct.mojo::internal::StructHeader", i32, i32, %"struct.mojo::internal::Pointer", %"struct.mojo::internal::Pointer.0", %"struct.mojo::internal::Pointer.1" }
%"struct.mojo::internal::StructHeader" = type { i32, i32 }
%"struct.mojo::internal::Pointer" = type { i64 }
%"struct.mojo::internal::Pointer.0" = type { i64 }
%"struct.mojo::internal::Pointer.1" = type { i64 }
%"class.mojo::Message" = type { %"class.mojo::ScopedHandleBase", %"class.mojo::internal::Buffer", %"class.std::__1::vector", %"class.std::__1::vector.4", %"class.mojo::ConnectionGroup::Ref"*, i8, i8, i8* }
%"class.mojo::ScopedHandleBase" = type { %"class.mojo::MessageHandle" }
%"class.mojo::MessageHandle" = type { i64 }
%"class.mojo::internal::Buffer" = type { %"class.mojo::MessageHandle", i64, i8*, i64, i64 }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.mojo::ScopedHandleBase.2"*, %"class.mojo::ScopedHandleBase.2"*, %"class.std::__1::__compressed_pair" }
%"class.mojo::ScopedHandleBase.2" = type { %"class.mojo::Handle" }
%"class.mojo::Handle" = type { i32 }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.mojo::ScopedHandleBase.2"* }
%"class.std::__1::vector.4" = type { %"class.std::__1::__vector_base.5" }
%"class.std::__1::__vector_base.5" = type { %"class.mojo::ScopedInterfaceEndpointHandle"*, %"class.mojo::ScopedInterfaceEndpointHandle"*, %"class.std::__1::__compressed_pair.6" }
%"class.mojo::ScopedInterfaceEndpointHandle" = type { %class.scoped_refptr }
%class.scoped_refptr = type { %"class.mojo::ScopedInterfaceEndpointHandle::State"* }
%"class.mojo::ScopedInterfaceEndpointHandle::State" = type opaque
%"class.std::__1::__compressed_pair.6" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"struct.std::__1::__compressed_pair_elem.7" = type { %"class.mojo::ScopedInterfaceEndpointHandle"* }
%"class.mojo::ConnectionGroup::Ref" = type { i32, %class.scoped_refptr.11 }
%class.scoped_refptr.11 = type { %"class.mojo::ConnectionGroup"* }
%"class.mojo::ConnectionGroup" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe", [4 x i8], %"class.base::RepeatingCallback", %class.scoped_refptr.15, %"class.mojo::ConnectionGroup::Ref", %"struct.std::__1::atomic.17", [4 x i8] }>
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.12" }
%"struct.std::__1::__atomic_base.12" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.base::RepeatingCallback" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::internal::CallbackBaseCopyable" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr.13 }
%class.scoped_refptr.13 = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe.14", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe.14" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%class.scoped_refptr.15 = type { %"class.base::SequencedTaskRunner"* }
%"class.base::SequencedTaskRunner" = type { %"class.base::TaskRunner.base", [4 x i8] }
%"class.base::TaskRunner.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.16" }>
%"class.base::RefCountedThreadSafe.16" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"struct.std::__1::atomic.17" = type { %"struct.std::__1::__atomic_base.18" }
%"struct.std::__1::__atomic_base.18" = type { %"struct.std::__1::__atomic_base.19" }
%"struct.std::__1::__atomic_base.19" = type { %"struct.std::__1::__cxx_atomic_impl.20" }
%"struct.std::__1::__cxx_atomic_impl.20" = type { %"struct.std::__1::__cxx_atomic_base_impl.21" }
%"struct.std::__1::__cxx_atomic_base_impl.21" = type { i32 }
%"struct.viz::HitTestRegion" = type { i32, i32, %"class.viz::FrameSinkId", %"class.gfx::Rect", %"class.gfx::Transform" }
%"class.viz::FrameSinkId" = type { i32, i32 }
%"class.gfx::Rect" = type { %"class.gfx::Point", %"class.gfx::Size" }
%"class.gfx::Point" = type { i32, i32 }
%"class.gfx::Size" = type { i32, i32 }
%"class.gfx::Transform" = type { %class.SkMatrix44 }
%class.SkMatrix44 = type <{ [4 x [4 x float]], i8, [3 x i8] }>
%"class.viz::mojom::internal::HitTestRegionList_Data" = type { %"struct.mojo::internal::StructHeader", i32, i32, %"struct.mojo::internal::Pointer.0", %"struct.mojo::internal::Pointer.1", %"struct.mojo::internal::Pointer.22" }
%"struct.mojo::internal::Pointer.22" = type { i64 }
%"struct.viz::HitTestRegionList" = type { i32, i32, %"class.gfx::Rect", %"class.gfx::Transform", %"class.std::__1::vector.23" }
%"class.std::__1::vector.23" = type { %"class.std::__1::__vector_base.24" }
%"class.std::__1::__vector_base.24" = type { %"struct.viz::HitTestRegion"*, %"struct.viz::HitTestRegion"*, %"class.std::__1::__compressed_pair.25" }
%"class.std::__1::__compressed_pair.25" = type { %"struct.std::__1::__compressed_pair_elem.26" }
%"struct.std::__1::__compressed_pair_elem.26" = type { %"struct.viz::HitTestRegion"* }
%"class.mojo::internal::Array_Data.36" = type { %"struct.mojo::internal::ArrayHeader" }
%"struct.mojo::internal::ArrayHeader" = type { i32, i32 }

$_ZN4mojo8internal15ArraySerializerINS_13ArrayDataViewIN3viz5mojom21HitTestRegionDataViewEEENSt3__16vectorINS3_13HitTestRegionENS7_9allocatorIS9_EEEENS0_13ArrayIteratorINS_11ArrayTraitsISC_EESC_Lb0EEEvE19DeserializeElementsEPNS0_10Array_DataINS0_7PointerINS4_8internal18HitTestRegion_DataEEEEEPSC_PNS_7MessageE = comdat any

@.str = private unnamed_addr constant [41 x i8] c"Failed read HitTestRegion::frame_sink_id\00", align 1
@.str.1 = private unnamed_addr constant [32 x i8] c"Failed read HitTestRegion::rect\00", align 1
@.str.3 = private unnamed_addr constant [38 x i8] c"Failed read HitTestRegionList::bounds\00", align 1
@constinit = private unnamed_addr constant [4 x [4 x float]] [[4 x float] [float 1.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00], [4 x float] [float 0.000000e+00, float 1.000000e+00, float 0.000000e+00, float 0.000000e+00], [4 x float] [float 0.000000e+00, float 0.000000e+00, float 1.000000e+00, float 0.000000e+00], [4 x float] [float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 1.000000e+00]], align 4

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN4mojo12StructTraitsIN3viz5mojom21HitTestRegionDataViewENS1_13HitTestRegionEE4ReadES3_PS4_(%"class.viz::mojom::internal::HitTestRegion_Data"*, %"class.mojo::Message"*, %"struct.viz::HitTestRegion"*) local_unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.viz::mojom::internal::HitTestRegion_Data", %"class.viz::mojom::internal::HitTestRegion_Data"* %0, i64 0, i32 3
  %5 = getelementptr inbounds %"struct.mojo::internal::Pointer", %"struct.mojo::internal::Pointer"* %4, i64 0, i32 0
  %6 = load i64, i64* %5, align 8
  %7 = icmp eq i64 %6, 0
  %8 = bitcast %"struct.mojo::internal::Pointer"* %4 to i8*
  %9 = getelementptr inbounds i8, i8* %8, i64 %6
  br i1 %7, label %26, label %10

10:                                               ; preds = %3
  %11 = getelementptr inbounds %"struct.viz::HitTestRegion", %"struct.viz::HitTestRegion"* %2, i64 0, i32 2
  %12 = getelementptr inbounds i8, i8* %9, i64 8
  %13 = bitcast i8* %12 to i32*
  %14 = load i32, i32* %13, align 1
  %15 = getelementptr inbounds i8, i8* %9, i64 12
  %16 = bitcast i8* %15 to i32*
  %17 = load i32, i32* %16, align 1
  %18 = bitcast %"class.viz::FrameSinkId"* %11 to i64*
  %19 = zext i32 %17 to i64
  %20 = shl nuw i64 %19, 32
  %21 = zext i32 %14 to i64
  %22 = or i64 %20, %21
  store i64 %22, i64* %18, align 4
  %23 = or i32 %17, %14
  %24 = icmp eq i32 %23, 0
  br i1 %24, label %25, label %26

25:                                               ; preds = %10
  tail call void @_ZN3viz32SetDeserializationCrashKeyStringEN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEE(i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str, i64 0, i64 0), i64 40) #5
  br label %96

26:                                               ; preds = %10, %3
  %27 = getelementptr inbounds %"class.viz::mojom::internal::HitTestRegion_Data", %"class.viz::mojom::internal::HitTestRegion_Data"* %0, i64 0, i32 4
  %28 = getelementptr inbounds %"struct.mojo::internal::Pointer.0", %"struct.mojo::internal::Pointer.0"* %27, i64 0, i32 0
  %29 = load i64, i64* %28, align 8
  %30 = icmp eq i64 %29, 0
  %31 = bitcast %"struct.mojo::internal::Pointer.0"* %27 to i8*
  %32 = getelementptr inbounds i8, i8* %31, i64 %29
  br i1 %30, label %71, label %33

33:                                               ; preds = %26
  %34 = getelementptr inbounds i8, i8* %32, i64 16
  %35 = bitcast i8* %34 to i32*
  %36 = load i32, i32* %35, align 1
  %37 = icmp slt i32 %36, 0
  br i1 %37, label %70, label %38

38:                                               ; preds = %33
  %39 = getelementptr inbounds i8, i8* %32, i64 20
  %40 = bitcast i8* %39 to i32*
  %41 = load i32, i32* %40, align 1
  %42 = icmp slt i32 %41, 0
  br i1 %42, label %70, label %43

43:                                               ; preds = %38
  %44 = getelementptr inbounds i8, i8* %32, i64 8
  %45 = bitcast i8* %44 to i32*
  %46 = load i32, i32* %45, align 1
  %47 = getelementptr inbounds i8, i8* %32, i64 12
  %48 = bitcast i8* %47 to i32*
  %49 = load i32, i32* %48, align 1
  %50 = getelementptr inbounds %"struct.viz::HitTestRegion", %"struct.viz::HitTestRegion"* %2, i64 0, i32 3, i32 0, i32 0
  store i32 %46, i32* %50, align 4
  %51 = getelementptr inbounds %"struct.viz::HitTestRegion", %"struct.viz::HitTestRegion"* %2, i64 0, i32 3, i32 0, i32 1
  store i32 %49, i32* %51, align 4
  %52 = icmp sgt i32 %46, 0
  %53 = icmp sgt i32 %36, 0
  %54 = and i1 %53, %52
  %55 = sub nuw nsw i32 2147483647, %46
  %56 = icmp ult i32 %55, %36
  %57 = and i1 %56, %54
  %58 = select i1 %57, i32 %55, i32 %36
  %59 = icmp sgt i32 %58, 0
  %60 = select i1 %59, i32 %58, i32 0
  %61 = getelementptr inbounds %"struct.viz::HitTestRegion", %"struct.viz::HitTestRegion"* %2, i64 0, i32 3, i32 1, i32 0
  store i32 %60, i32* %61, align 4
  %62 = icmp sgt i32 %49, 0
  %63 = sub nuw nsw i32 2147483647, %49
  %64 = icmp ult i32 %63, %41
  %65 = and i1 %62, %64
  %66 = select i1 %65, i32 %63, i32 %41
  %67 = icmp sgt i32 %66, 0
  %68 = select i1 %67, i32 %66, i32 0
  %69 = getelementptr inbounds %"struct.viz::HitTestRegion", %"struct.viz::HitTestRegion"* %2, i64 0, i32 3, i32 1, i32 1
  store i32 %68, i32* %69, align 4
  br label %71

70:                                               ; preds = %38, %33
  tail call void @_ZN3viz32SetDeserializationCrashKeyStringEN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEE(i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.1, i64 0, i64 0), i64 31) #5
  br label %96

71:                                               ; preds = %26, %43
  %72 = getelementptr inbounds %"class.viz::mojom::internal::HitTestRegion_Data", %"class.viz::mojom::internal::HitTestRegion_Data"* %0, i64 0, i32 5
  %73 = getelementptr inbounds %"struct.mojo::internal::Pointer.1", %"struct.mojo::internal::Pointer.1"* %72, i64 0, i32 0
  %74 = load i64, i64* %73, align 8
  %75 = icmp eq i64 %74, 0
  br i1 %75, label %89, label %76

76:                                               ; preds = %71
  %77 = bitcast %"struct.mojo::internal::Pointer.1"* %72 to i8*
  %78 = getelementptr inbounds i8, i8* %77, i64 %74
  %79 = getelementptr inbounds i8, i8* %78, i64 8
  %80 = bitcast i8* %79 to i64*
  %81 = load i64, i64* %80, align 8
  %82 = icmp eq i64 %81, 0
  %83 = getelementptr inbounds %"struct.viz::HitTestRegion", %"struct.viz::HitTestRegion"* %2, i64 0, i32 4, i32 0
  br i1 %82, label %84, label %85

84:                                               ; preds = %76
  tail call void @_ZN10SkMatrix4411setIdentityEv(%class.SkMatrix44* %83) #5
  br label %89

85:                                               ; preds = %76
  %86 = getelementptr inbounds i8, i8* %79, i64 %81
  %87 = getelementptr inbounds i8, i8* %86, i64 8
  %88 = bitcast i8* %87 to float*
  tail call void @_ZN10SkMatrix4412setColMajorfEPKf(%class.SkMatrix44* %83, float* %88) #5
  br label %89

89:                                               ; preds = %85, %84, %71
  %90 = getelementptr inbounds %"class.viz::mojom::internal::HitTestRegion_Data", %"class.viz::mojom::internal::HitTestRegion_Data"* %0, i64 0, i32 1
  %91 = load i32, i32* %90, align 1
  %92 = getelementptr inbounds %"struct.viz::HitTestRegion", %"struct.viz::HitTestRegion"* %2, i64 0, i32 0
  store i32 %91, i32* %92, align 4
  %93 = getelementptr inbounds %"class.viz::mojom::internal::HitTestRegion_Data", %"class.viz::mojom::internal::HitTestRegion_Data"* %0, i64 0, i32 2
  %94 = load i32, i32* %93, align 1
  %95 = getelementptr inbounds %"struct.viz::HitTestRegion", %"struct.viz::HitTestRegion"* %2, i64 0, i32 1
  store i32 %94, i32* %95, align 4
  br label %96

96:                                               ; preds = %89, %70, %25
  %97 = phi i1 [ true, %89 ], [ false, %70 ], [ false, %25 ]
  ret i1 %97
}

declare void @_ZN3viz32SetDeserializationCrashKeyStringEN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEE(i8*, i64) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN4mojo12StructTraitsIN3viz5mojom25HitTestRegionListDataViewENS1_17HitTestRegionListEE4ReadES3_PS4_(%"class.viz::mojom::internal::HitTestRegionList_Data"*, %"class.mojo::Message"*, %"struct.viz::HitTestRegionList"*) local_unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"struct.viz::HitTestRegionList", %"struct.viz::HitTestRegionList"* %2, i64 0, i32 4
  %5 = getelementptr inbounds %"class.viz::mojom::internal::HitTestRegionList_Data", %"class.viz::mojom::internal::HitTestRegionList_Data"* %0, i64 0, i32 5
  %6 = getelementptr inbounds %"struct.mojo::internal::Pointer.22", %"struct.mojo::internal::Pointer.22"* %5, i64 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = icmp eq i64 %7, 0
  br i1 %8, label %9, label %14

9:                                                ; preds = %3
  %10 = bitcast %"class.std::__1::vector.23"* %4 to i64*
  %11 = load i64, i64* %10, align 8
  %12 = getelementptr inbounds %"struct.viz::HitTestRegionList", %"struct.viz::HitTestRegionList"* %2, i64 0, i32 4, i32 0, i32 1
  %13 = bitcast %"struct.viz::HitTestRegion"** %12 to i64*
  store i64 %11, i64* %13, align 8
  br label %19

14:                                               ; preds = %3
  %15 = bitcast %"struct.mojo::internal::Pointer.22"* %5 to i8*
  %16 = getelementptr inbounds i8, i8* %15, i64 %7
  %17 = bitcast i8* %16 to %"class.mojo::internal::Array_Data.36"*
  %18 = tail call zeroext i1 @_ZN4mojo8internal15ArraySerializerINS_13ArrayDataViewIN3viz5mojom21HitTestRegionDataViewEEENSt3__16vectorINS3_13HitTestRegionENS7_9allocatorIS9_EEEENS0_13ArrayIteratorINS_11ArrayTraitsISC_EESC_Lb0EEEvE19DeserializeElementsEPNS0_10Array_DataINS0_7PointerINS4_8internal18HitTestRegion_DataEEEEEPSC_PNS_7MessageE(%"class.mojo::internal::Array_Data.36"* nonnull %17, %"class.std::__1::vector.23"* %4, %"class.mojo::Message"* %1) #5
  br i1 %18, label %19, label %89

19:                                               ; preds = %9, %14
  %20 = getelementptr inbounds %"class.viz::mojom::internal::HitTestRegionList_Data", %"class.viz::mojom::internal::HitTestRegionList_Data"* %0, i64 0, i32 3
  %21 = getelementptr inbounds %"struct.mojo::internal::Pointer.0", %"struct.mojo::internal::Pointer.0"* %20, i64 0, i32 0
  %22 = load i64, i64* %21, align 8
  %23 = icmp eq i64 %22, 0
  %24 = bitcast %"struct.mojo::internal::Pointer.0"* %20 to i8*
  %25 = getelementptr inbounds i8, i8* %24, i64 %22
  br i1 %23, label %64, label %26

26:                                               ; preds = %19
  %27 = getelementptr inbounds i8, i8* %25, i64 16
  %28 = bitcast i8* %27 to i32*
  %29 = load i32, i32* %28, align 1
  %30 = icmp slt i32 %29, 0
  br i1 %30, label %63, label %31

31:                                               ; preds = %26
  %32 = getelementptr inbounds i8, i8* %25, i64 20
  %33 = bitcast i8* %32 to i32*
  %34 = load i32, i32* %33, align 1
  %35 = icmp slt i32 %34, 0
  br i1 %35, label %63, label %36

36:                                               ; preds = %31
  %37 = getelementptr inbounds i8, i8* %25, i64 8
  %38 = bitcast i8* %37 to i32*
  %39 = load i32, i32* %38, align 1
  %40 = getelementptr inbounds i8, i8* %25, i64 12
  %41 = bitcast i8* %40 to i32*
  %42 = load i32, i32* %41, align 1
  %43 = getelementptr inbounds %"struct.viz::HitTestRegionList", %"struct.viz::HitTestRegionList"* %2, i64 0, i32 2, i32 0, i32 0
  store i32 %39, i32* %43, align 4
  %44 = getelementptr inbounds %"struct.viz::HitTestRegionList", %"struct.viz::HitTestRegionList"* %2, i64 0, i32 2, i32 0, i32 1
  store i32 %42, i32* %44, align 4
  %45 = icmp sgt i32 %39, 0
  %46 = icmp sgt i32 %29, 0
  %47 = and i1 %46, %45
  %48 = sub nuw nsw i32 2147483647, %39
  %49 = icmp ult i32 %48, %29
  %50 = and i1 %49, %47
  %51 = select i1 %50, i32 %48, i32 %29
  %52 = icmp sgt i32 %51, 0
  %53 = select i1 %52, i32 %51, i32 0
  %54 = getelementptr inbounds %"struct.viz::HitTestRegionList", %"struct.viz::HitTestRegionList"* %2, i64 0, i32 2, i32 1, i32 0
  store i32 %53, i32* %54, align 4
  %55 = icmp sgt i32 %42, 0
  %56 = sub nuw nsw i32 2147483647, %42
  %57 = icmp ult i32 %56, %34
  %58 = and i1 %55, %57
  %59 = select i1 %58, i32 %56, i32 %34
  %60 = icmp sgt i32 %59, 0
  %61 = select i1 %60, i32 %59, i32 0
  %62 = getelementptr inbounds %"struct.viz::HitTestRegionList", %"struct.viz::HitTestRegionList"* %2, i64 0, i32 2, i32 1, i32 1
  store i32 %61, i32* %62, align 4
  br label %64

63:                                               ; preds = %31, %26
  tail call void @_ZN3viz32SetDeserializationCrashKeyStringEN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEE(i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.3, i64 0, i64 0), i64 37) #5
  br label %89

64:                                               ; preds = %19, %36
  %65 = getelementptr inbounds %"class.viz::mojom::internal::HitTestRegionList_Data", %"class.viz::mojom::internal::HitTestRegionList_Data"* %0, i64 0, i32 4
  %66 = getelementptr inbounds %"struct.mojo::internal::Pointer.1", %"struct.mojo::internal::Pointer.1"* %65, i64 0, i32 0
  %67 = load i64, i64* %66, align 8
  %68 = icmp eq i64 %67, 0
  br i1 %68, label %82, label %69

69:                                               ; preds = %64
  %70 = bitcast %"struct.mojo::internal::Pointer.1"* %65 to i8*
  %71 = getelementptr inbounds i8, i8* %70, i64 %67
  %72 = getelementptr inbounds i8, i8* %71, i64 8
  %73 = bitcast i8* %72 to i64*
  %74 = load i64, i64* %73, align 8
  %75 = icmp eq i64 %74, 0
  %76 = getelementptr inbounds %"struct.viz::HitTestRegionList", %"struct.viz::HitTestRegionList"* %2, i64 0, i32 3, i32 0
  br i1 %75, label %77, label %78

77:                                               ; preds = %69
  tail call void @_ZN10SkMatrix4411setIdentityEv(%class.SkMatrix44* %76) #5
  br label %82

78:                                               ; preds = %69
  %79 = getelementptr inbounds i8, i8* %72, i64 %74
  %80 = getelementptr inbounds i8, i8* %79, i64 8
  %81 = bitcast i8* %80 to float*
  tail call void @_ZN10SkMatrix4412setColMajorfEPKf(%class.SkMatrix44* %76, float* %81) #5
  br label %82

82:                                               ; preds = %78, %77, %64
  %83 = getelementptr inbounds %"class.viz::mojom::internal::HitTestRegionList_Data", %"class.viz::mojom::internal::HitTestRegionList_Data"* %0, i64 0, i32 1
  %84 = load i32, i32* %83, align 1
  %85 = getelementptr inbounds %"struct.viz::HitTestRegionList", %"struct.viz::HitTestRegionList"* %2, i64 0, i32 0
  store i32 %84, i32* %85, align 8
  %86 = getelementptr inbounds %"class.viz::mojom::internal::HitTestRegionList_Data", %"class.viz::mojom::internal::HitTestRegionList_Data"* %0, i64 0, i32 2
  %87 = load i32, i32* %86, align 1
  %88 = getelementptr inbounds %"struct.viz::HitTestRegionList", %"struct.viz::HitTestRegionList"* %2, i64 0, i32 1
  store i32 %87, i32* %88, align 4
  br label %89

89:                                               ; preds = %14, %82, %63
  %90 = phi i1 [ true, %82 ], [ false, %63 ], [ false, %14 ]
  ret i1 %90
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #2

declare void @_ZN10SkMatrix4412setColMajorfEPKf(%class.SkMatrix44*, float*) local_unnamed_addr #1

declare void @_ZN10SkMatrix4411setIdentityEv(%class.SkMatrix44*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN4mojo8internal15ArraySerializerINS_13ArrayDataViewIN3viz5mojom21HitTestRegionDataViewEEENSt3__16vectorINS3_13HitTestRegionENS7_9allocatorIS9_EEEENS0_13ArrayIteratorINS_11ArrayTraitsISC_EESC_Lb0EEEvE19DeserializeElementsEPNS0_10Array_DataINS0_7PointerINS4_8internal18HitTestRegion_DataEEEEEPSC_PNS_7MessageE(%"class.mojo::internal::Array_Data.36"*, %"class.std::__1::vector.23"*, %"class.mojo::Message"*) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.mojo::internal::Array_Data.36", %"class.mojo::internal::Array_Data.36"* %0, i64 0, i32 0, i32 1
  %5 = load i32, i32* %4, align 1
  %6 = zext i32 %5 to i64
  %7 = getelementptr inbounds %"class.std::__1::vector.23", %"class.std::__1::vector.23"* %1, i64 0, i32 0, i32 1
  %8 = bitcast %"struct.viz::HitTestRegion"** %7 to i64*
  %9 = load i64, i64* %8, align 8
  %10 = bitcast %"class.std::__1::vector.23"* %1 to i64*
  %11 = load i64, i64* %10, align 8
  %12 = sub i64 %9, %11
  %13 = sdiv exact i64 %12, 100
  %14 = icmp eq i64 %13, %6
  br i1 %14, label %43, label %15

15:                                               ; preds = %3
  %16 = icmp eq i32 %5, 0
  br i1 %16, label %34, label %17

17:                                               ; preds = %15
  %18 = mul nuw nsw i64 %6, 100
  %19 = tail call i8* @_Znwm(i64 %18) #6
  %20 = bitcast i8* %19 to %"struct.viz::HitTestRegion"*
  %21 = getelementptr inbounds %"struct.viz::HitTestRegion", %"struct.viz::HitTestRegion"* %20, i64 %6
  %22 = ptrtoint i8* %19 to i64
  br label %23

23:                                               ; preds = %23, %17
  %24 = phi %"struct.viz::HitTestRegion"* [ %29, %23 ], [ %20, %17 ]
  %25 = getelementptr inbounds %"struct.viz::HitTestRegion", %"struct.viz::HitTestRegion"* %24, i64 0, i32 4
  %26 = bitcast %"class.gfx::Transform"* %25 to i8*
  %27 = bitcast %"struct.viz::HitTestRegion"* %24 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %27, i8 0, i64 100, i1 false) #5
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %26, i8* align 4 bitcast ([4 x [4 x float]]* @constinit to i8*), i64 64, i1 false) #5
  %28 = getelementptr inbounds %"struct.viz::HitTestRegion", %"struct.viz::HitTestRegion"* %24, i64 0, i32 4, i32 0, i32 1
  store i8 0, i8* %28, align 4
  %29 = getelementptr inbounds %"struct.viz::HitTestRegion", %"struct.viz::HitTestRegion"* %24, i64 1
  %30 = icmp eq %"struct.viz::HitTestRegion"* %29, %21
  br i1 %30, label %31, label %23

31:                                               ; preds = %23
  %32 = ptrtoint %"struct.viz::HitTestRegion"* %21 to i64
  %33 = load i64, i64* %10, align 8
  br label %34

34:                                               ; preds = %15, %31
  %35 = phi i64 [ %32, %31 ], [ 0, %15 ]
  %36 = phi i64 [ %22, %31 ], [ 0, %15 ]
  %37 = phi i64 [ %33, %31 ], [ %11, %15 ]
  store i64 %36, i64* %10, align 8
  store i64 %35, i64* %8, align 8
  %38 = getelementptr inbounds %"class.std::__1::vector.23", %"class.std::__1::vector.23"* %1, i64 0, i32 0, i32 2, i32 0, i32 0
  %39 = bitcast %"struct.viz::HitTestRegion"** %38 to i64*
  store i64 %35, i64* %39, align 8
  %40 = icmp eq i64 %37, 0
  br i1 %40, label %43, label %41

41:                                               ; preds = %34
  %42 = inttoptr i64 %37 to i8*
  tail call void @_ZdlPv(i8* %42) #6
  br label %43

43:                                               ; preds = %3, %41, %34
  %44 = load i32, i32* %4, align 1
  %45 = icmp eq i32 %44, 0
  br i1 %45, label %72, label %46

46:                                               ; preds = %43
  %47 = getelementptr inbounds %"class.mojo::internal::Array_Data.36", %"class.mojo::internal::Array_Data.36"* %0, i64 1
  %48 = getelementptr inbounds %"class.std::__1::vector.23", %"class.std::__1::vector.23"* %1, i64 0, i32 0, i32 0
  br label %49

49:                                               ; preds = %46, %68
  %50 = phi i32 [ %44, %46 ], [ %69, %68 ]
  %51 = phi i64 [ 0, %46 ], [ %58, %68 ]
  %52 = getelementptr inbounds %"class.mojo::internal::Array_Data.36", %"class.mojo::internal::Array_Data.36"* %47, i64 %51
  %53 = bitcast %"class.mojo::internal::Array_Data.36"* %52 to i64*
  %54 = load i64, i64* %53, align 8
  %55 = icmp eq i64 %54, 0
  %56 = bitcast %"class.mojo::internal::Array_Data.36"* %52 to i8*
  %57 = getelementptr inbounds i8, i8* %56, i64 %54
  %58 = add nuw nsw i64 %51, 1
  %59 = icmp eq i8* %57, null
  %60 = or i1 %55, %59
  br i1 %60, label %68, label %61

61:                                               ; preds = %49
  %62 = bitcast i8* %57 to %"class.viz::mojom::internal::HitTestRegion_Data"*
  %63 = load %"struct.viz::HitTestRegion"*, %"struct.viz::HitTestRegion"** %48, align 8
  %64 = getelementptr inbounds %"struct.viz::HitTestRegion", %"struct.viz::HitTestRegion"* %63, i64 %51
  %65 = tail call zeroext i1 @_ZN4mojo12StructTraitsIN3viz5mojom21HitTestRegionDataViewENS1_13HitTestRegionEE4ReadES3_PS4_(%"class.viz::mojom::internal::HitTestRegion_Data"* nonnull %62, %"class.mojo::Message"* %2, %"struct.viz::HitTestRegion"* %64) #5
  br i1 %65, label %66, label %72

66:                                               ; preds = %61
  %67 = load i32, i32* %4, align 1
  br label %68

68:                                               ; preds = %66, %49
  %69 = phi i32 [ %67, %66 ], [ %50, %49 ]
  %70 = zext i32 %69 to i64
  %71 = icmp ult i64 %58, %70
  br i1 %71, label %49, label %72

72:                                               ; preds = %68, %61, %43
  %73 = phi i1 [ true, %43 ], [ false, %61 ], [ true, %68 ]
  ret i1 %73
}

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #3

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #2

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #4

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind }
attributes #3 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind }
attributes #6 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
