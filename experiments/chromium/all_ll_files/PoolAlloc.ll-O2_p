; ModuleID = '../../third_party/vulkan-deps/glslang/src/glslang/MachineIndependent/PoolAlloc.cpp'
source_filename = "../../third_party/vulkan-deps/glslang/src/glslang/MachineIndependent/PoolAlloc.cpp"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.glslang::TPoolAllocator" = type { i64, i64, i64, i64, i64, %"struct.glslang::TPoolAllocator::tHeader"*, %"struct.glslang::TPoolAllocator::tHeader"*, %"class.std::__1::vector", i32, i64 }
%"struct.glslang::TPoolAllocator::tHeader" = type { %"struct.glslang::TPoolAllocator::tHeader"*, i64 }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"struct.glslang::TPoolAllocator::tAllocState"*, %"struct.glslang::TPoolAllocator::tAllocState"*, %"class.std::__1::__compressed_pair" }
%"struct.glslang::TPoolAllocator::tAllocState" = type { i64, %"struct.glslang::TPoolAllocator::tHeader"* }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.glslang::TPoolAllocator::tAllocState"* }
%"class.std::__1::__vector_base_common" = type { i8 }
%"class.glslang::TAllocation" = type { i64, i8*, %"class.glslang::TAllocation"* }

@_ZN7glslang9PoolIndexE = hidden local_unnamed_addr global i8* null, align 8
@_ZN7glslang11TAllocation18guardBlockBeginValE = hidden local_unnamed_addr constant i8 -5, align 1
@_ZN7glslang11TAllocation16guardBlockEndValE = hidden local_unnamed_addr constant i8 -2, align 1
@_ZN7glslang11TAllocation12userDataFillE = hidden local_unnamed_addr constant i8 -51, align 1
@_ZN7glslang11TAllocation14guardBlockSizeE = hidden local_unnamed_addr constant i64 0, align 8

@_ZN7glslang14TPoolAllocatorC1Eii = hidden unnamed_addr alias void (%"class.glslang::TPoolAllocator"*, i32, i32), void (%"class.glslang::TPoolAllocator"*, i32, i32)* @_ZN7glslang14TPoolAllocatorC2Eii
@_ZN7glslang14TPoolAllocatorD1Ev = hidden unnamed_addr alias void (%"class.glslang::TPoolAllocator"*), void (%"class.glslang::TPoolAllocator"*)* @_ZN7glslang14TPoolAllocatorD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden dereferenceable(96) %"class.glslang::TPoolAllocator"* @_ZN7glslang22GetThreadPoolAllocatorEv() local_unnamed_addr #0 {
  %1 = load i8*, i8** @_ZN7glslang9PoolIndexE, align 8
  %2 = tail call i8* @_ZN7glslang14OS_GetTLSValueEPv(i8* %1) #10
  %3 = bitcast i8* %2 to %"class.glslang::TPoolAllocator"*
  ret %"class.glslang::TPoolAllocator"* %3
}

declare i8* @_ZN7glslang14OS_GetTLSValueEPv(i8*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN7glslang22SetThreadPoolAllocatorEPNS_14TPoolAllocatorE(%"class.glslang::TPoolAllocator"*) local_unnamed_addr #0 {
  %2 = load i8*, i8** @_ZN7glslang9PoolIndexE, align 8
  %3 = bitcast %"class.glslang::TPoolAllocator"* %0 to i8*
  %4 = tail call zeroext i1 @_ZN7glslang14OS_SetTLSValueEPvS0_(i8* %2, i8* %3) #10
  ret void
}

declare zeroext i1 @_ZN7glslang14OS_SetTLSValueEPvS0_(i8*, i8*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN7glslang19InitializePoolIndexEv() local_unnamed_addr #0 {
  %1 = tail call i8* @_ZN7glslang16OS_AllocTLSIndexEv() #10
  store i8* %1, i8** @_ZN7glslang9PoolIndexE, align 8
  %2 = icmp ne i8* %1, null
  ret i1 %2
}

declare i8* @_ZN7glslang16OS_AllocTLSIndexEv() local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN7glslang14TPoolAllocatorC2Eii(%"class.glslang::TPoolAllocator"*, i32, i32) unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.glslang::TPoolAllocator", %"class.glslang::TPoolAllocator"* %0, i64 0, i32 0
  %5 = sext i32 %1 to i64
  store i64 %5, i64* %4, align 8
  %6 = getelementptr inbounds %"class.glslang::TPoolAllocator", %"class.glslang::TPoolAllocator"* %0, i64 0, i32 1
  %7 = sext i32 %2 to i64
  store i64 %7, i64* %6, align 8
  %8 = getelementptr inbounds %"class.glslang::TPoolAllocator", %"class.glslang::TPoolAllocator"* %0, i64 0, i32 5
  %9 = icmp ult i32 %1, 4096
  %10 = bitcast %"struct.glslang::TPoolAllocator::tHeader"** %8 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %10, i8 0, i64 44, i1 false)
  br i1 %9, label %11, label %12

11:                                               ; preds = %3
  store i64 4096, i64* %4, align 8
  br label %12

12:                                               ; preds = %11, %3
  %13 = phi i64 [ 4096, %11 ], [ %5, %3 ]
  %14 = getelementptr inbounds %"class.glslang::TPoolAllocator", %"class.glslang::TPoolAllocator"* %0, i64 0, i32 4
  store i64 %13, i64* %14, align 8
  %15 = and i64 %7, -8
  %16 = icmp eq i64 %15, 0
  %17 = select i1 %16, i64 8, i64 %15
  store i64 %17, i64* %6, align 8
  br label %18

18:                                               ; preds = %18, %12
  %19 = phi i64 [ 1, %12 ], [ %21, %18 ]
  %20 = icmp ult i64 %19, %17
  %21 = shl i64 %19, 1
  br i1 %20, label %18, label %22

22:                                               ; preds = %18
  store i64 %19, i64* %6, align 8
  %23 = add i64 %19, -1
  %24 = getelementptr inbounds %"class.glslang::TPoolAllocator", %"class.glslang::TPoolAllocator"* %0, i64 0, i32 2
  store i64 %23, i64* %24, align 8
  %25 = getelementptr inbounds %"class.glslang::TPoolAllocator", %"class.glslang::TPoolAllocator"* %0, i64 0, i32 3
  %26 = add i64 %19, 15
  %27 = sub i64 0, %19
  %28 = and i64 %26, %27
  store i64 %28, i64* %25, align 8
  tail call void @_ZN7glslang14TPoolAllocator4pushEv(%"class.glslang::TPoolAllocator"* %0)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN7glslang14TPoolAllocator4pushEv(%"class.glslang::TPoolAllocator"*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.glslang::TPoolAllocator", %"class.glslang::TPoolAllocator"* %0, i64 0, i32 4
  %3 = load i64, i64* %2, align 8
  %4 = getelementptr inbounds %"class.glslang::TPoolAllocator", %"class.glslang::TPoolAllocator"* %0, i64 0, i32 6
  %5 = bitcast %"struct.glslang::TPoolAllocator::tHeader"** %4 to i64*
  %6 = load i64, i64* %5, align 8
  %7 = getelementptr inbounds %"class.glslang::TPoolAllocator", %"class.glslang::TPoolAllocator"* %0, i64 0, i32 7
  %8 = getelementptr inbounds %"class.glslang::TPoolAllocator", %"class.glslang::TPoolAllocator"* %0, i64 0, i32 7, i32 0, i32 1
  %9 = load %"struct.glslang::TPoolAllocator::tAllocState"*, %"struct.glslang::TPoolAllocator::tAllocState"** %8, align 8
  %10 = getelementptr inbounds %"class.glslang::TPoolAllocator", %"class.glslang::TPoolAllocator"* %0, i64 0, i32 7, i32 0, i32 2, i32 0, i32 0
  %11 = load %"struct.glslang::TPoolAllocator::tAllocState"*, %"struct.glslang::TPoolAllocator::tAllocState"** %10, align 8
  %12 = icmp eq %"struct.glslang::TPoolAllocator::tAllocState"* %9, %11
  %13 = ptrtoint %"struct.glslang::TPoolAllocator::tAllocState"* %11 to i64
  br i1 %12, label %21, label %14

14:                                               ; preds = %1
  %15 = getelementptr inbounds %"struct.glslang::TPoolAllocator::tAllocState", %"struct.glslang::TPoolAllocator::tAllocState"* %9, i64 0, i32 0
  store i64 %3, i64* %15, align 8
  %16 = getelementptr inbounds %"struct.glslang::TPoolAllocator::tAllocState", %"struct.glslang::TPoolAllocator::tAllocState"* %9, i64 0, i32 1
  %17 = bitcast %"struct.glslang::TPoolAllocator::tHeader"** %16 to i64*
  store i64 %6, i64* %17, align 8
  %18 = getelementptr inbounds %"struct.glslang::TPoolAllocator::tAllocState", %"struct.glslang::TPoolAllocator::tAllocState"* %9, i64 1
  %19 = ptrtoint %"struct.glslang::TPoolAllocator::tAllocState"* %18 to i64
  %20 = bitcast %"struct.glslang::TPoolAllocator::tAllocState"** %8 to i64*
  store i64 %19, i64* %20, align 8
  br label %80

21:                                               ; preds = %1
  %22 = ptrtoint %"struct.glslang::TPoolAllocator::tAllocState"* %9 to i64
  %23 = bitcast %"struct.glslang::TPoolAllocator::tAllocState"** %8 to i64*
  %24 = bitcast %"class.std::__1::vector"* %7 to i64*
  %25 = load i64, i64* %24, align 8
  %26 = sub i64 %22, %25
  %27 = ashr exact i64 %26, 4
  %28 = add nsw i64 %27, 1
  %29 = icmp ugt i64 %28, 1152921504606846975
  br i1 %29, label %30, label %32

30:                                               ; preds = %21
  %31 = bitcast %"class.std::__1::vector"* %7 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %31) #11
  unreachable

32:                                               ; preds = %21
  %33 = bitcast %"struct.glslang::TPoolAllocator::tAllocState"** %10 to i64*
  %34 = sub i64 %13, %25
  %35 = ashr exact i64 %34, 4
  %36 = icmp ult i64 %35, 576460752303423487
  br i1 %36, label %37, label %45

37:                                               ; preds = %32
  %38 = ashr exact i64 %34, 3
  %39 = icmp ult i64 %38, %28
  %40 = select i1 %39, i64 %28, i64 %38
  %41 = icmp eq i64 %40, 0
  br i1 %41, label %50, label %42

42:                                               ; preds = %37
  %43 = icmp ugt i64 %40, 1152921504606846975
  br i1 %43, label %44, label %45

44:                                               ; preds = %42
  tail call void @abort() #11
  unreachable

45:                                               ; preds = %42, %32
  %46 = phi i64 [ %40, %42 ], [ 1152921504606846975, %32 ]
  %47 = shl i64 %46, 4
  %48 = tail call i8* @_Znwm(i64 %47) #12
  %49 = bitcast i8* %48 to %"struct.glslang::TPoolAllocator::tAllocState"*
  br label %50

50:                                               ; preds = %45, %37
  %51 = phi i64 [ %46, %45 ], [ 0, %37 ]
  %52 = phi %"struct.glslang::TPoolAllocator::tAllocState"* [ %49, %45 ], [ null, %37 ]
  %53 = getelementptr inbounds %"struct.glslang::TPoolAllocator::tAllocState", %"struct.glslang::TPoolAllocator::tAllocState"* %52, i64 %27
  %54 = getelementptr inbounds %"struct.glslang::TPoolAllocator::tAllocState", %"struct.glslang::TPoolAllocator::tAllocState"* %52, i64 %51
  %55 = ptrtoint %"struct.glslang::TPoolAllocator::tAllocState"* %54 to i64
  %56 = getelementptr inbounds %"struct.glslang::TPoolAllocator::tAllocState", %"struct.glslang::TPoolAllocator::tAllocState"* %53, i64 0, i32 0
  store i64 %3, i64* %56, align 8
  %57 = getelementptr inbounds %"struct.glslang::TPoolAllocator::tAllocState", %"struct.glslang::TPoolAllocator::tAllocState"* %52, i64 %27, i32 1
  %58 = bitcast %"struct.glslang::TPoolAllocator::tHeader"** %57 to i64*
  store i64 %6, i64* %58, align 8
  %59 = getelementptr inbounds %"struct.glslang::TPoolAllocator::tAllocState", %"struct.glslang::TPoolAllocator::tAllocState"* %53, i64 1
  %60 = ptrtoint %"struct.glslang::TPoolAllocator::tAllocState"* %59 to i64
  %61 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %7, i64 0, i32 0, i32 0
  %62 = load %"struct.glslang::TPoolAllocator::tAllocState"*, %"struct.glslang::TPoolAllocator::tAllocState"** %61, align 8
  %63 = load i64, i64* %23, align 8
  %64 = ptrtoint %"struct.glslang::TPoolAllocator::tAllocState"* %62 to i64
  %65 = sub i64 %63, %64
  %66 = ashr exact i64 %65, 4
  %67 = sub nsw i64 0, %66
  %68 = getelementptr inbounds %"struct.glslang::TPoolAllocator::tAllocState", %"struct.glslang::TPoolAllocator::tAllocState"* %53, i64 %67
  %69 = ptrtoint %"struct.glslang::TPoolAllocator::tAllocState"* %68 to i64
  %70 = icmp sgt i64 %65, 0
  br i1 %70, label %71, label %75

71:                                               ; preds = %50
  %72 = bitcast %"struct.glslang::TPoolAllocator::tAllocState"* %68 to i8*
  %73 = bitcast %"struct.glslang::TPoolAllocator::tAllocState"* %62 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %72, i8* align 8 %73, i64 %65, i1 false) #10
  %74 = load %"struct.glslang::TPoolAllocator::tAllocState"*, %"struct.glslang::TPoolAllocator::tAllocState"** %61, align 8
  br label %75

75:                                               ; preds = %71, %50
  %76 = phi %"struct.glslang::TPoolAllocator::tAllocState"* [ %62, %50 ], [ %74, %71 ]
  store i64 %69, i64* %24, align 8
  store i64 %60, i64* %23, align 8
  store i64 %55, i64* %33, align 8
  %77 = icmp eq %"struct.glslang::TPoolAllocator::tAllocState"* %76, null
  br i1 %77, label %80, label %78

78:                                               ; preds = %75
  %79 = bitcast %"struct.glslang::TPoolAllocator::tAllocState"* %76 to i8*
  tail call void @_ZdlPv(i8* %79) #12
  br label %80

80:                                               ; preds = %14, %75, %78
  %81 = getelementptr inbounds %"class.glslang::TPoolAllocator", %"class.glslang::TPoolAllocator"* %0, i64 0, i32 0
  %82 = load i64, i64* %81, align 8
  store i64 %82, i64* %2, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN7glslang14TPoolAllocatorD2Ev(%"class.glslang::TPoolAllocator"* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.glslang::TPoolAllocator", %"class.glslang::TPoolAllocator"* %0, i64 0, i32 6
  %3 = load %"struct.glslang::TPoolAllocator::tHeader"*, %"struct.glslang::TPoolAllocator::tHeader"** %2, align 8
  %4 = icmp eq %"struct.glslang::TPoolAllocator::tHeader"* %3, null
  br i1 %4, label %8, label %5

5:                                                ; preds = %1
  %6 = bitcast %"struct.glslang::TPoolAllocator::tHeader"* %3 to i8*
  %7 = bitcast %"struct.glslang::TPoolAllocator::tHeader"** %2 to i64*
  br label %14

8:                                                ; preds = %21, %1
  %9 = getelementptr inbounds %"class.glslang::TPoolAllocator", %"class.glslang::TPoolAllocator"* %0, i64 0, i32 5
  %10 = load %"struct.glslang::TPoolAllocator::tHeader"*, %"struct.glslang::TPoolAllocator::tHeader"** %9, align 8
  %11 = icmp eq %"struct.glslang::TPoolAllocator::tHeader"* %10, null
  br i1 %11, label %32, label %12

12:                                               ; preds = %8
  %13 = bitcast %"struct.glslang::TPoolAllocator::tHeader"** %9 to i64*
  br label %25

14:                                               ; preds = %5, %21
  %15 = phi i8* [ %6, %5 ], [ %24, %21 ]
  %16 = phi %"struct.glslang::TPoolAllocator::tHeader"* [ %3, %5 ], [ %22, %21 ]
  %17 = bitcast %"struct.glslang::TPoolAllocator::tHeader"* %16 to i64*
  %18 = load i64, i64* %17, align 8
  %19 = icmp eq i8* %15, null
  br i1 %19, label %21, label %20

20:                                               ; preds = %14
  tail call void @_ZdaPv(i8* nonnull %15) #12
  br label %21

21:                                               ; preds = %20, %14
  store i64 %18, i64* %7, align 8
  %22 = inttoptr i64 %18 to %"struct.glslang::TPoolAllocator::tHeader"*
  %23 = icmp eq i64 %18, 0
  %24 = inttoptr i64 %18 to i8*
  br i1 %23, label %8, label %14

25:                                               ; preds = %12, %25
  %26 = phi %"struct.glslang::TPoolAllocator::tHeader"* [ %10, %12 ], [ %30, %25 ]
  %27 = bitcast %"struct.glslang::TPoolAllocator::tHeader"* %26 to i64*
  %28 = load i64, i64* %27, align 8
  %29 = bitcast %"struct.glslang::TPoolAllocator::tHeader"* %26 to i8*
  tail call void @_ZdaPv(i8* %29) #12
  store i64 %28, i64* %13, align 8
  %30 = inttoptr i64 %28 to %"struct.glslang::TPoolAllocator::tHeader"*
  %31 = icmp eq i64 %28, 0
  br i1 %31, label %32, label %25

32:                                               ; preds = %25, %8
  %33 = getelementptr inbounds %"class.glslang::TPoolAllocator", %"class.glslang::TPoolAllocator"* %0, i64 0, i32 7, i32 0, i32 0
  %34 = load %"struct.glslang::TPoolAllocator::tAllocState"*, %"struct.glslang::TPoolAllocator::tAllocState"** %33, align 8
  %35 = icmp eq %"struct.glslang::TPoolAllocator::tAllocState"* %34, null
  br i1 %35, label %41, label %36

36:                                               ; preds = %32
  %37 = ptrtoint %"struct.glslang::TPoolAllocator::tAllocState"* %34 to i64
  %38 = getelementptr inbounds %"class.glslang::TPoolAllocator", %"class.glslang::TPoolAllocator"* %0, i64 0, i32 7, i32 0, i32 1
  %39 = bitcast %"struct.glslang::TPoolAllocator::tAllocState"** %38 to i64*
  store i64 %37, i64* %39, align 8
  %40 = bitcast %"struct.glslang::TPoolAllocator::tAllocState"* %34 to i8*
  tail call void @_ZdlPv(i8* %40) #12
  br label %41

41:                                               ; preds = %32, %36
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdaPv(i8*) local_unnamed_addr #2

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @_ZNK7glslang11TAllocation15checkGuardBlockEPhhPKc(%"class.glslang::TAllocation"* nocapture, i8* nocapture, i8 zeroext, i8* nocapture) local_unnamed_addr #3 align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN7glslang14TPoolAllocator3popEv(%"class.glslang::TPoolAllocator"* nocapture) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.glslang::TPoolAllocator", %"class.glslang::TPoolAllocator"* %0, i64 0, i32 7
  %3 = getelementptr inbounds %"class.glslang::TPoolAllocator", %"class.glslang::TPoolAllocator"* %0, i64 0, i32 7, i32 0, i32 1
  %4 = bitcast %"struct.glslang::TPoolAllocator::tAllocState"** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.std::__1::vector"* %2 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = icmp eq i64 %5, %7
  %9 = inttoptr i64 %5 to %"struct.glslang::TPoolAllocator::tAllocState"*
  br i1 %8, label %50, label %10

10:                                               ; preds = %1
  %11 = getelementptr inbounds %"struct.glslang::TPoolAllocator::tAllocState", %"struct.glslang::TPoolAllocator::tAllocState"* %9, i64 -1, i32 1
  %12 = load %"struct.glslang::TPoolAllocator::tHeader"*, %"struct.glslang::TPoolAllocator::tHeader"** %11, align 8
  %13 = getelementptr inbounds %"struct.glslang::TPoolAllocator::tAllocState", %"struct.glslang::TPoolAllocator::tAllocState"* %9, i64 -1, i32 0
  %14 = load i64, i64* %13, align 8
  %15 = getelementptr inbounds %"class.glslang::TPoolAllocator", %"class.glslang::TPoolAllocator"* %0, i64 0, i32 4
  store i64 %14, i64* %15, align 8
  %16 = getelementptr inbounds %"class.glslang::TPoolAllocator", %"class.glslang::TPoolAllocator"* %0, i64 0, i32 6
  %17 = load %"struct.glslang::TPoolAllocator::tHeader"*, %"struct.glslang::TPoolAllocator::tHeader"** %16, align 8
  %18 = icmp eq %"struct.glslang::TPoolAllocator::tHeader"* %17, %12
  br i1 %18, label %47, label %19

19:                                               ; preds = %10
  %20 = bitcast %"struct.glslang::TPoolAllocator::tHeader"* %17 to i8*
  %21 = bitcast %"struct.glslang::TPoolAllocator::tHeader"* %17 to i64*
  %22 = getelementptr inbounds %"class.glslang::TPoolAllocator", %"class.glslang::TPoolAllocator"* %0, i64 0, i32 5
  %23 = bitcast %"struct.glslang::TPoolAllocator::tHeader"** %22 to i64*
  %24 = bitcast %"struct.glslang::TPoolAllocator::tHeader"** %16 to i64*
  br label %25

25:                                               ; preds = %19, %40
  %26 = phi i8* [ %20, %19 ], [ %44, %40 ]
  %27 = phi i64* [ %21, %19 ], [ %43, %40 ]
  %28 = phi %"struct.glslang::TPoolAllocator::tHeader"* [ %17, %19 ], [ %41, %40 ]
  %29 = bitcast %"struct.glslang::TPoolAllocator::tHeader"* %28 to i64*
  %30 = load i64, i64* %29, align 8
  %31 = getelementptr inbounds %"struct.glslang::TPoolAllocator::tHeader", %"struct.glslang::TPoolAllocator::tHeader"* %28, i64 0, i32 1
  %32 = load i64, i64* %31, align 8
  %33 = icmp ugt i64 %32, 1
  br i1 %33, label %34, label %37

34:                                               ; preds = %25
  %35 = icmp eq i8* %26, null
  br i1 %35, label %40, label %36

36:                                               ; preds = %34
  tail call void @_ZdaPv(i8* nonnull %26) #12
  br label %40

37:                                               ; preds = %25
  %38 = load i64, i64* %23, align 8
  store i64 %38, i64* %27, align 8
  %39 = load i64, i64* %24, align 8
  store i64 %39, i64* %23, align 8
  br label %40

40:                                               ; preds = %34, %36, %37
  store i64 %30, i64* %24, align 8
  %41 = inttoptr i64 %30 to %"struct.glslang::TPoolAllocator::tHeader"*
  %42 = icmp eq %"struct.glslang::TPoolAllocator::tHeader"* %12, %41
  %43 = inttoptr i64 %30 to i64*
  %44 = inttoptr i64 %30 to i8*
  br i1 %42, label %45, label %25

45:                                               ; preds = %40
  %46 = load %"struct.glslang::TPoolAllocator::tAllocState"*, %"struct.glslang::TPoolAllocator::tAllocState"** %3, align 8
  br label %47

47:                                               ; preds = %45, %10
  %48 = phi %"struct.glslang::TPoolAllocator::tAllocState"* [ %46, %45 ], [ %9, %10 ]
  %49 = getelementptr inbounds %"struct.glslang::TPoolAllocator::tAllocState", %"struct.glslang::TPoolAllocator::tAllocState"* %48, i64 -1
  store %"struct.glslang::TPoolAllocator::tAllocState"* %49, %"struct.glslang::TPoolAllocator::tAllocState"** %3, align 8
  br label %50

50:                                               ; preds = %1, %47
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN7glslang14TPoolAllocator6popAllEv(%"class.glslang::TPoolAllocator"* nocapture) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.glslang::TPoolAllocator", %"class.glslang::TPoolAllocator"* %0, i64 0, i32 7
  %3 = getelementptr inbounds %"class.glslang::TPoolAllocator", %"class.glslang::TPoolAllocator"* %0, i64 0, i32 7, i32 0, i32 1
  %4 = bitcast %"struct.glslang::TPoolAllocator::tAllocState"** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.std::__1::vector"* %2 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = icmp eq i64 %5, %7
  br i1 %8, label %64, label %9

9:                                                ; preds = %1
  %10 = getelementptr inbounds %"class.glslang::TPoolAllocator", %"class.glslang::TPoolAllocator"* %0, i64 0, i32 4
  %11 = getelementptr inbounds %"class.glslang::TPoolAllocator", %"class.glslang::TPoolAllocator"* %0, i64 0, i32 6
  %12 = getelementptr inbounds %"class.glslang::TPoolAllocator", %"class.glslang::TPoolAllocator"* %0, i64 0, i32 5
  %13 = bitcast %"struct.glslang::TPoolAllocator::tHeader"** %12 to i64*
  %14 = bitcast %"struct.glslang::TPoolAllocator::tHeader"** %11 to i64*
  br label %15

15:                                               ; preds = %9, %59
  %16 = phi i64 [ %7, %9 ], [ %60, %59 ]
  %17 = phi i64 [ %7, %9 ], [ %61, %59 ]
  %18 = phi i64 [ %5, %9 ], [ %62, %59 ]
  %19 = icmp eq i64 %18, %17
  %20 = inttoptr i64 %18 to %"struct.glslang::TPoolAllocator::tAllocState"*
  br i1 %19, label %59, label %21

21:                                               ; preds = %15
  %22 = getelementptr inbounds %"struct.glslang::TPoolAllocator::tAllocState", %"struct.glslang::TPoolAllocator::tAllocState"* %20, i64 -1, i32 1
  %23 = load %"struct.glslang::TPoolAllocator::tHeader"*, %"struct.glslang::TPoolAllocator::tHeader"** %22, align 8
  %24 = getelementptr inbounds %"struct.glslang::TPoolAllocator::tAllocState", %"struct.glslang::TPoolAllocator::tAllocState"* %20, i64 -1, i32 0
  %25 = load i64, i64* %24, align 8
  store i64 %25, i64* %10, align 8
  %26 = load %"struct.glslang::TPoolAllocator::tHeader"*, %"struct.glslang::TPoolAllocator::tHeader"** %11, align 8
  %27 = icmp eq %"struct.glslang::TPoolAllocator::tHeader"* %26, %23
  br i1 %27, label %54, label %28

28:                                               ; preds = %21
  %29 = bitcast %"struct.glslang::TPoolAllocator::tHeader"* %26 to i8*
  %30 = bitcast %"struct.glslang::TPoolAllocator::tHeader"* %26 to i64*
  br label %31

31:                                               ; preds = %46, %28
  %32 = phi i8* [ %29, %28 ], [ %50, %46 ]
  %33 = phi i64* [ %30, %28 ], [ %49, %46 ]
  %34 = phi %"struct.glslang::TPoolAllocator::tHeader"* [ %26, %28 ], [ %47, %46 ]
  %35 = bitcast %"struct.glslang::TPoolAllocator::tHeader"* %34 to i64*
  %36 = load i64, i64* %35, align 8
  %37 = getelementptr inbounds %"struct.glslang::TPoolAllocator::tHeader", %"struct.glslang::TPoolAllocator::tHeader"* %34, i64 0, i32 1
  %38 = load i64, i64* %37, align 8
  %39 = icmp ugt i64 %38, 1
  br i1 %39, label %40, label %43

40:                                               ; preds = %31
  %41 = icmp eq i8* %32, null
  br i1 %41, label %46, label %42

42:                                               ; preds = %40
  tail call void @_ZdaPv(i8* nonnull %32) #12
  br label %46

43:                                               ; preds = %31
  %44 = load i64, i64* %13, align 8
  store i64 %44, i64* %33, align 8
  %45 = load i64, i64* %14, align 8
  store i64 %45, i64* %13, align 8
  br label %46

46:                                               ; preds = %43, %42, %40
  store i64 %36, i64* %14, align 8
  %47 = inttoptr i64 %36 to %"struct.glslang::TPoolAllocator::tHeader"*
  %48 = icmp eq %"struct.glslang::TPoolAllocator::tHeader"* %23, %47
  %49 = inttoptr i64 %36 to i64*
  %50 = inttoptr i64 %36 to i8*
  br i1 %48, label %51, label %31

51:                                               ; preds = %46
  %52 = load %"struct.glslang::TPoolAllocator::tAllocState"*, %"struct.glslang::TPoolAllocator::tAllocState"** %3, align 8
  %53 = load i64, i64* %6, align 8
  br label %54

54:                                               ; preds = %51, %21
  %55 = phi i64 [ %53, %51 ], [ %16, %21 ]
  %56 = phi %"struct.glslang::TPoolAllocator::tAllocState"* [ %52, %51 ], [ %20, %21 ]
  %57 = getelementptr inbounds %"struct.glslang::TPoolAllocator::tAllocState", %"struct.glslang::TPoolAllocator::tAllocState"* %56, i64 -1
  store %"struct.glslang::TPoolAllocator::tAllocState"* %57, %"struct.glslang::TPoolAllocator::tAllocState"** %3, align 8
  %58 = ptrtoint %"struct.glslang::TPoolAllocator::tAllocState"* %57 to i64
  br label %59

59:                                               ; preds = %15, %54
  %60 = phi i64 [ %16, %15 ], [ %55, %54 ]
  %61 = phi i64 [ %17, %15 ], [ %55, %54 ]
  %62 = phi i64 [ %18, %15 ], [ %58, %54 ]
  %63 = icmp eq i64 %62, %61
  br i1 %63, label %64, label %15

64:                                               ; preds = %59, %1
  ret void
}

; Function Attrs: nofree nounwind ssp uwtable
define hidden i8* @_ZN7glslang14TPoolAllocator8allocateEm(%"class.glslang::TPoolAllocator"* nocapture, i64) local_unnamed_addr #4 align 2 {
  %3 = getelementptr inbounds %"class.glslang::TPoolAllocator", %"class.glslang::TPoolAllocator"* %0, i64 0, i32 8
  %4 = load i32, i32* %3, align 8
  %5 = add nsw i32 %4, 1
  store i32 %5, i32* %3, align 8
  %6 = getelementptr inbounds %"class.glslang::TPoolAllocator", %"class.glslang::TPoolAllocator"* %0, i64 0, i32 9
  %7 = load i64, i64* %6, align 8
  %8 = add i64 %7, %1
  store i64 %8, i64* %6, align 8
  %9 = getelementptr inbounds %"class.glslang::TPoolAllocator", %"class.glslang::TPoolAllocator"* %0, i64 0, i32 4
  %10 = load i64, i64* %9, align 8
  %11 = add i64 %10, %1
  %12 = getelementptr inbounds %"class.glslang::TPoolAllocator", %"class.glslang::TPoolAllocator"* %0, i64 0, i32 0
  %13 = load i64, i64* %12, align 8
  %14 = icmp ugt i64 %11, %13
  br i1 %14, label %25, label %15

15:                                               ; preds = %2
  %16 = getelementptr inbounds %"class.glslang::TPoolAllocator", %"class.glslang::TPoolAllocator"* %0, i64 0, i32 6
  %17 = bitcast %"struct.glslang::TPoolAllocator::tHeader"** %16 to i8**
  %18 = load i8*, i8** %17, align 8
  %19 = getelementptr inbounds i8, i8* %18, i64 %10
  %20 = getelementptr inbounds %"class.glslang::TPoolAllocator", %"class.glslang::TPoolAllocator"* %0, i64 0, i32 2
  %21 = load i64, i64* %20, align 8
  %22 = add i64 %21, %11
  %23 = xor i64 %21, -1
  %24 = and i64 %22, %23
  store i64 %24, i64* %9, align 8
  br label %73

25:                                               ; preds = %2
  %26 = getelementptr inbounds %"class.glslang::TPoolAllocator", %"class.glslang::TPoolAllocator"* %0, i64 0, i32 3
  %27 = load i64, i64* %26, align 8
  %28 = add i64 %27, %1
  %29 = icmp ugt i64 %28, %13
  br i1 %29, label %30, label %45

30:                                               ; preds = %25
  %31 = tail call i8* @_Znam(i64 %28) #12
  %32 = getelementptr inbounds %"class.glslang::TPoolAllocator", %"class.glslang::TPoolAllocator"* %0, i64 0, i32 6
  %33 = bitcast %"struct.glslang::TPoolAllocator::tHeader"** %32 to i64*
  %34 = load i64, i64* %33, align 8
  %35 = add i64 %13, -1
  %36 = add i64 %35, %28
  %37 = udiv i64 %36, %13
  %38 = bitcast i8* %31 to i64*
  store i64 %34, i64* %38, align 8
  %39 = getelementptr inbounds i8, i8* %31, i64 8
  %40 = bitcast i8* %39 to i64*
  store i64 %37, i64* %40, align 8
  %41 = bitcast %"struct.glslang::TPoolAllocator::tHeader"** %32 to i8**
  store i8* %31, i8** %41, align 8
  store i64 %13, i64* %9, align 8
  %42 = ptrtoint i8* %31 to i64
  %43 = add i64 %27, %42
  %44 = inttoptr i64 %43 to i8*
  br label %73

45:                                               ; preds = %25
  %46 = getelementptr inbounds %"class.glslang::TPoolAllocator", %"class.glslang::TPoolAllocator"* %0, i64 0, i32 5
  %47 = load %"struct.glslang::TPoolAllocator::tHeader"*, %"struct.glslang::TPoolAllocator::tHeader"** %46, align 8
  %48 = icmp eq %"struct.glslang::TPoolAllocator::tHeader"* %47, null
  br i1 %48, label %53, label %49

49:                                               ; preds = %45
  %50 = bitcast %"struct.glslang::TPoolAllocator::tHeader"* %47 to i64*
  %51 = load i64, i64* %50, align 8
  %52 = bitcast %"struct.glslang::TPoolAllocator::tHeader"** %46 to i64*
  store i64 %51, i64* %52, align 8
  br label %57

53:                                               ; preds = %45
  %54 = tail call i8* @_Znam(i64 %13) #12
  %55 = bitcast i8* %54 to %"struct.glslang::TPoolAllocator::tHeader"*
  %56 = bitcast i8* %54 to i64*
  br label %57

57:                                               ; preds = %53, %49
  %58 = phi i64* [ %56, %53 ], [ %50, %49 ]
  %59 = phi %"struct.glslang::TPoolAllocator::tHeader"* [ %55, %53 ], [ %47, %49 ]
  %60 = bitcast %"struct.glslang::TPoolAllocator::tHeader"* %59 to i8*
  %61 = getelementptr inbounds %"class.glslang::TPoolAllocator", %"class.glslang::TPoolAllocator"* %0, i64 0, i32 6
  %62 = bitcast %"struct.glslang::TPoolAllocator::tHeader"** %61 to i64*
  %63 = load i64, i64* %62, align 8
  store i64 %63, i64* %58, align 8
  %64 = getelementptr inbounds %"struct.glslang::TPoolAllocator::tHeader", %"struct.glslang::TPoolAllocator::tHeader"* %59, i64 0, i32 1
  store i64 1, i64* %64, align 8
  store %"struct.glslang::TPoolAllocator::tHeader"* %59, %"struct.glslang::TPoolAllocator::tHeader"** %61, align 8
  %65 = load i64, i64* %26, align 8
  %66 = getelementptr inbounds i8, i8* %60, i64 %65
  %67 = add i64 %65, %1
  %68 = getelementptr inbounds %"class.glslang::TPoolAllocator", %"class.glslang::TPoolAllocator"* %0, i64 0, i32 2
  %69 = load i64, i64* %68, align 8
  %70 = add i64 %67, %69
  %71 = xor i64 %69, -1
  %72 = and i64 %70, %71
  store i64 %72, i64* %9, align 8
  br label %73

73:                                               ; preds = %57, %30, %15
  %74 = phi i8* [ %19, %15 ], [ %44, %30 ], [ %66, %57 ]
  ret i8* %74
}

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znam(i64) local_unnamed_addr #5

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden void @_ZNK7glslang11TAllocation14checkAllocListEv(%"class.glslang::TAllocation"* nocapture) local_unnamed_addr #6 align 2 {
  %2 = icmp eq %"class.glslang::TAllocation"* %0, null
  br i1 %2, label %3, label %4

3:                                                ; preds = %4, %1
  ret void

4:                                                ; preds = %1, %4
  %5 = phi %"class.glslang::TAllocation"* [ %7, %4 ], [ %0, %1 ]
  %6 = getelementptr inbounds %"class.glslang::TAllocation", %"class.glslang::TAllocation"* %5, i64 0, i32 2
  %7 = load %"class.glslang::TAllocation"*, %"class.glslang::TAllocation"** %6, align 8
  %8 = icmp eq %"class.glslang::TAllocation"* %7, null
  br i1 %8, label %3, label %4
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #7

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #7

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #8

; Function Attrs: noreturn nounwind
declare void @abort() local_unnamed_addr #9

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #5

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nofree nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { argmemonly nounwind }
attributes #8 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { nounwind }
attributes #11 = { noreturn nounwind }
attributes #12 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
