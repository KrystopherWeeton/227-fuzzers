; ModuleID = '../../third_party/fontconfig/src/src/fcxml.c'
source_filename = "../../third_party/fontconfig/src/src/fcxml.c"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"
module asm ".symver fmemopen, fmemopen@GLIBC_2.2.5"
module asm ".symver glob, glob@GLIBC_2.2.5"
module asm ".symver glob64, glob64@GLIBC_2.2.5"
module asm ".symver quick_exit, quick_exit@GLIBC_2.10"

%struct._IO_FILE = type { i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, %struct._IO_marker*, %struct._IO_FILE*, i32, i32, i64, i16, i8, [1 x i8], i8*, i64, %struct._IO_codecvt*, %struct._IO_wide_data*, %struct._IO_FILE*, i8*, i64, i32, [20 x i8] }
%struct._IO_marker = type opaque
%struct._IO_codecvt = type opaque
%struct._IO_wide_data = type opaque
%struct.anon.2 = type { [16 x i8], i32 }
%struct._FcOpMap = type { [16 x i8], i32 }
%struct._FcConfig = type { %struct._FcStrSet*, %struct._FcStrSet*, %struct._FcStrSet*, %struct._FcStrSet*, %struct._FcStrSet*, [3 x %struct._FcPtrList*], i32, %struct._FcStrSet*, %struct._FcStrSet*, %struct._FcFontSet*, %struct._FcFontSet*, [2 x %struct._FcFontSet*], i64, i32, %struct._FcRef, %struct._FcExprPage*, i8*, %struct._FcStrSet*, %struct._FcPtrList* }
%struct._FcFontSet = type { i32, i32, %struct._FcPattern** }
%struct._FcPattern = type { i32, i32, i64, %struct._FcRef }
%struct._FcRef = type { i32 }
%struct._FcExprPage = type { %struct._FcExprPage*, %struct._FcExpr*, [340 x %struct._FcExpr], [0 x %struct._FcExpr] }
%struct._FcExpr = type { i32, %union.anon }
%union.anon = type { %struct.anon }
%struct.anon = type { %struct._FcExpr*, %struct._FcExpr* }
%struct._FcStrSet = type { %struct._FcRef, i32, i32, i8**, i32 }
%struct._FcPtrList = type opaque
%struct._FcTest = type { i32, i32, i32, i32, %struct._FcExpr* }
%struct._FcExprMatrix = type { %struct._FcExpr*, %struct._FcExpr*, %struct._FcExpr*, %struct._FcExpr* }
%struct._FcRange = type { double, double }
%struct._FcCharSet = type { %struct._FcRef, i32, i64, i64 }
%struct._FcLangSet = type opaque
%struct._FcRule = type { %struct._FcRule*, i32, %union.anon.0 }
%union.anon.0 = type { %struct._FcTest* }
%struct._FcEdit = type { i32, i32, %struct._FcExpr*, i32 }
%struct._FcStrBuf = type { i8*, i32, i32, i32, i32, [128 x i8] }
%struct.__dirstream = type opaque
%struct._FcConfigParse = type { %struct._FcPStack*, %struct._FcVStack*, i32, i8*, %struct._FcConfig*, %struct._FcRuleSet*, %struct._xmlParserCtxt*, i32, [8 x %struct._FcPStack], i32, [64 x %struct._FcVStack], i32 }
%struct._FcPStack = type { %struct._FcPStack*, i32, i8**, %struct._FcStrBuf, [16 x i8*] }
%struct._FcVStack = type { %struct._FcVStack*, %struct._FcPStack*, i32, %union.anon.1 }
%union.anon.1 = type { i8* }
%struct._FcRuleSet = type { %struct._FcRef, i8*, i8*, i8*, i32, [3 x %struct._FcPtrList*] }
%struct._xmlParserCtxt = type { %struct._xmlSAXHandler*, i8*, %struct._xmlDoc*, i32, i32, i8*, i8*, i32, i32, %struct._xmlParserInput*, i32, i32, %struct._xmlParserInput**, %struct._xmlNode*, i32, i32, %struct._xmlNode**, i32, %struct._xmlParserNodeInfoSeq, i32, i32, i32, i32, i32, i32, %struct._xmlValidCtxt, i32, i32, i8*, i8*, i32, i32, i8**, i64, i64, i32, i32, i32, i8*, i8*, i8*, i32*, i32, i32, i32*, i32, %struct._xmlParserInput*, i32, i32, i32, i32, i8*, i32, i32, i8*, i32, i32, %struct._xmlDict*, i8**, i32, i32, i8*, i8*, i8*, i32, i32, i32, i8**, i32*, %struct._xmlStartTag*, %struct._xmlHashTable*, %struct._xmlHashTable*, i32, i32, i32, i32, %struct._xmlNode*, i32, %struct._xmlAttr*, %struct._xmlError, i32, i64, i64, %struct._xmlParserNodeInfo*, i32, i32, %struct._xmlParserNodeInfo*, i32, i64 }
%struct._xmlSAXHandler = type { void (i8*, i8*, i8*, i8*)*, i32 (i8*)*, i32 (i8*)*, i32 (i8*)*, %struct._xmlParserInput* (i8*, i8*, i8*)*, %struct._xmlEntity* (i8*, i8*)*, void (i8*, i8*, i32, i8*, i8*, i8*)*, void (i8*, i8*, i8*, i8*)*, void (i8*, i8*, i8*, i32, i32, i8*, %struct._xmlEnumeration*)*, void (i8*, i8*, i32, %struct._xmlElementContent*)*, void (i8*, i8*, i8*, i8*, i8*)*, void (i8*, %struct._xmlSAXLocator*)*, void (i8*)*, void (i8*)*, void (i8*, i8*, i8**)*, void (i8*, i8*)*, void (i8*, i8*)*, void (i8*, i8*, i32)*, void (i8*, i8*, i32)*, void (i8*, i8*, i8*)*, void (i8*, i8*)*, void (i8*, i8*, ...)*, void (i8*, i8*, ...)*, void (i8*, i8*, ...)*, %struct._xmlEntity* (i8*, i8*)*, void (i8*, i8*, i32)*, void (i8*, i8*, i8*, i8*)*, i32, i8*, void (i8*, i8*, i8*, i8*, i32, i8**, i32, i32, i8**)*, void (i8*, i8*, i8*, i8*)*, void (i8*, %struct._xmlError*)* }
%struct._xmlEnumeration = type { %struct._xmlEnumeration*, i8* }
%struct._xmlElementContent = type { i32, i32, i8*, %struct._xmlElementContent*, %struct._xmlElementContent*, %struct._xmlElementContent*, i8* }
%struct._xmlSAXLocator = type { i8* (i8*)*, i8* (i8*)*, i32 (i8*)*, i32 (i8*)* }
%struct._xmlEntity = type { i8*, i32, i8*, %struct._xmlNode*, %struct._xmlNode*, %struct._xmlDtd*, %struct._xmlNode*, %struct._xmlNode*, %struct._xmlDoc*, i8*, i8*, i32, i32, i8*, i8*, %struct._xmlEntity*, i8*, i32, i32, i32 }
%struct._xmlDtd = type { i8*, i32, i8*, %struct._xmlNode*, %struct._xmlNode*, %struct._xmlDoc*, %struct._xmlNode*, %struct._xmlNode*, %struct._xmlDoc*, i8*, i8*, i8*, i8*, i8*, i8*, i8* }
%struct._xmlDoc = type { i8*, i32, i8*, %struct._xmlNode*, %struct._xmlNode*, %struct._xmlNode*, %struct._xmlNode*, %struct._xmlNode*, %struct._xmlDoc*, i32, i32, %struct._xmlDtd*, %struct._xmlDtd*, %struct._xmlNs*, i8*, i8*, i8*, i8*, i8*, i32, %struct._xmlDict*, i8*, i32, i32 }
%struct._xmlNs = type { %struct._xmlNs*, i32, i8*, i8*, i8*, %struct._xmlDoc* }
%struct._xmlParserNodeInfoSeq = type { i64, i64, %struct._xmlParserNodeInfo* }
%struct._xmlValidCtxt = type { i8*, void (i8*, i8*, ...)*, void (i8*, i8*, ...)*, %struct._xmlNode*, i32, i32, %struct._xmlNode**, i32, %struct._xmlDoc*, i32, %struct._xmlValidState*, i32, i32, %struct._xmlValidState*, i8*, i8* }
%struct._xmlValidState = type opaque
%struct._xmlParserInput = type { %struct._xmlParserInputBuffer*, i8*, i8*, i8*, i8*, i8*, i32, i32, i32, i64, void (i8*)*, i8*, i8*, i32, i32 }
%struct._xmlParserInputBuffer = type { i8*, i32 (i8*, i8*, i32)*, i32 (i8*)*, %struct._xmlCharEncodingHandler*, %struct._xmlBuf*, %struct._xmlBuf*, i32, i32, i64 }
%struct._xmlCharEncodingHandler = type { i8*, i32 (i8*, i32*, i8*, i32*)*, i32 (i8*, i32*, i8*, i32*)*, %struct._uconv_t*, %struct._uconv_t* }
%struct._uconv_t = type { %struct.UConverter*, %struct.UConverter*, [1024 x i16], i16*, i16* }
%struct.UConverter = type opaque
%struct._xmlBuf = type opaque
%struct._xmlDict = type opaque
%struct._xmlStartTag = type opaque
%struct._xmlHashTable = type opaque
%struct._xmlNode = type { i8*, i32, i8*, %struct._xmlNode*, %struct._xmlNode*, %struct._xmlNode*, %struct._xmlNode*, %struct._xmlNode*, %struct._xmlDoc*, %struct._xmlNs*, i8*, %struct._xmlAttr*, %struct._xmlNs*, i8*, i16, i16 }
%struct._xmlAttr = type { i8*, i32, i8*, %struct._xmlNode*, %struct._xmlNode*, %struct._xmlNode*, %struct._xmlAttr*, %struct._xmlAttr*, %struct._xmlDoc*, %struct._xmlNs*, i32, i8* }
%struct._xmlError = type { i32, i32, i8*, i32, i8*, i32, i8*, i8*, i8*, i32, i32, i8*, i8* }
%struct._xmlParserNodeInfo = type { %struct._xmlNode*, i64, i64, i64, i64 }
%struct.dirent = type { i64, i64, i16, i8, [256 x i8] }
%struct._FcPtrListIter = type { i8*, i8*, i8* }
%struct.__va_list_tag = type { i32, i32, i8*, i8* }
%struct._FcValue = type { i32, %union.anon.3 }
%union.anon.3 = type { i8* }
%struct._FcObjectType = type { i8*, i32 }
%struct.lconv = type { i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 }
%struct._FcExprName = type { i32, i32 }
%struct._FcConstant = type { i8*, i8*, i32 }

@__fc_userdir = internal global i8* null, align 8
@__fc_userconf = internal global i8* null, align 8
@.str = private unnamed_addr constant [7 x i8] c"memory\00", align 1
@.str.1 = private unnamed_addr constant [15 x i8] c"No such file: \00", align 1
@.str.2 = private unnamed_addr constant [7 x i8] c"(null)\00", align 1
@.str.3 = private unnamed_addr constant [19 x i8] c"No such realfile: \00", align 1
@.str.4 = private unnamed_addr constant [16 x i8] c"Unable to open \00", align 1
@.str.5 = private unnamed_addr constant [46 x i8] c"failed reading config file: %s: %s (errno %d)\00", align 1
@.str.6 = private unnamed_addr constant [31 x i8] c"Cannot %s config file \22%s\22: %s\00", align 1
@.str.7 = private unnamed_addr constant [5 x i8] c"load\00", align 1
@.str.8 = private unnamed_addr constant [5 x i8] c"scan\00", align 1
@.str.9 = private unnamed_addr constant [34 x i8] c"Cannot %s default config file: %s\00", align 1
@.str.10 = private unnamed_addr constant [28 x i8] c"Cannot open config dir \22%s\22\00", align 1
@FcDebugVal = external hidden local_unnamed_addr global i32, align 4
@.str.12 = private unnamed_addr constant [25 x i8] c"\09Scanning config dir %s\0A\00", align 1
@.str.13 = private unnamed_addr constant [6 x i8] c".conf\00", align 1
@.str.14 = private unnamed_addr constant [8 x i8] c"unknown\00", align 1
@.str.15 = private unnamed_addr constant [5 x i8] c"info\00", align 1
@.str.16 = private unnamed_addr constant [8 x i8] c"warning\00", align 1
@.str.17 = private unnamed_addr constant [6 x i8] c"error\00", align 1
@stderr = external local_unnamed_addr global %struct._IO_FILE*, align 8
@.str.18 = private unnamed_addr constant [31 x i8] c"Fontconfig %s: \22%s\22, line %d: \00", align 1
@.str.19 = private unnamed_addr constant [25 x i8] c"Fontconfig %s: line %d: \00", align 1
@.str.20 = private unnamed_addr constant [16 x i8] c"Fontconfig %s: \00", align 1
@.str.22 = private unnamed_addr constant [25 x i8] c"\09%s config file from %s\0A\00", align 1
@.str.23 = private unnamed_addr constant [8 x i8] c"Loading\00", align 1
@.str.24 = private unnamed_addr constant [9 x i8] c"Scanning\00", align 1
@.str.25 = private unnamed_addr constant [3 x i8] c"%s\00", align 1
@.str.26 = private unnamed_addr constant [30 x i8] c"Cannot %s config file from %s\00", align 1
@.str.27 = private unnamed_addr constant [30 x i8] c"\09%s config file from %s done\0A\00", align 1
@.str.28 = private unnamed_addr constant [11 x i8] c"fontconfig\00", align 1
@.str.29 = private unnamed_addr constant [21 x i8] c"invalid doctype \22%s\22\00", align 1
@.str.30 = private unnamed_addr constant [21 x i8] c"unknown element \22%s\22\00", align 1
@.str.31 = private unnamed_addr constant [14 x i8] c"out of memory\00", align 1
@fcElementMap = internal constant [54 x %struct.anon.2] [%struct.anon.2 { [16 x i8] c"fontconfig\00\00\00\00\00\00", i32 1 }, %struct.anon.2 { [16 x i8] c"dir\00\00\00\00\00\00\00\00\00\00\00\00\00", i32 2 }, %struct.anon.2 { [16 x i8] c"cachedir\00\00\00\00\00\00\00\00", i32 3 }, %struct.anon.2 { [16 x i8] c"cache\00\00\00\00\00\00\00\00\00\00\00", i32 4 }, %struct.anon.2 { [16 x i8] c"include\00\00\00\00\00\00\00\00\00", i32 5 }, %struct.anon.2 { [16 x i8] c"config\00\00\00\00\00\00\00\00\00\00", i32 6 }, %struct.anon.2 { [16 x i8] c"match\00\00\00\00\00\00\00\00\00\00\00", i32 7 }, %struct.anon.2 { [16 x i8] c"alias\00\00\00\00\00\00\00\00\00\00\00", i32 8 }, %struct.anon.2 { [16 x i8] c"description\00\00\00\00\00", i32 9 }, %struct.anon.2 { [16 x i8] c"remap-dir\00\00\00\00\00\00\00", i32 10 }, %struct.anon.2 { [16 x i8] c"reset-dirs\00\00\00\00\00\00", i32 11 }, %struct.anon.2 { [16 x i8] c"rescan\00\00\00\00\00\00\00\00\00\00", i32 12 }, %struct.anon.2 { [16 x i8] c"prefer\00\00\00\00\00\00\00\00\00\00", i32 13 }, %struct.anon.2 { [16 x i8] c"accept\00\00\00\00\00\00\00\00\00\00", i32 14 }, %struct.anon.2 { [16 x i8] c"default\00\00\00\00\00\00\00\00\00", i32 15 }, %struct.anon.2 { [16 x i8] c"family\00\00\00\00\00\00\00\00\00\00", i32 16 }, %struct.anon.2 { [16 x i8] c"selectfont\00\00\00\00\00\00", i32 17 }, %struct.anon.2 { [16 x i8] c"acceptfont\00\00\00\00\00\00", i32 18 }, %struct.anon.2 { [16 x i8] c"rejectfont\00\00\00\00\00\00", i32 19 }, %struct.anon.2 { [16 x i8] c"glob\00\00\00\00\00\00\00\00\00\00\00\00", i32 20 }, %struct.anon.2 { [16 x i8] c"pattern\00\00\00\00\00\00\00\00\00", i32 21 }, %struct.anon.2 { [16 x i8] c"patelt\00\00\00\00\00\00\00\00\00\00", i32 22 }, %struct.anon.2 { [16 x i8] c"test\00\00\00\00\00\00\00\00\00\00\00\00", i32 23 }, %struct.anon.2 { [16 x i8] c"edit\00\00\00\00\00\00\00\00\00\00\00\00", i32 24 }, %struct.anon.2 { [16 x i8] c"int\00\00\00\00\00\00\00\00\00\00\00\00\00", i32 25 }, %struct.anon.2 { [16 x i8] c"double\00\00\00\00\00\00\00\00\00\00", i32 26 }, %struct.anon.2 { [16 x i8] c"string\00\00\00\00\00\00\00\00\00\00", i32 27 }, %struct.anon.2 { [16 x i8] c"matrix\00\00\00\00\00\00\00\00\00\00", i32 28 }, %struct.anon.2 { [16 x i8] c"range\00\00\00\00\00\00\00\00\00\00\00", i32 29 }, %struct.anon.2 { [16 x i8] c"bool\00\00\00\00\00\00\00\00\00\00\00\00", i32 30 }, %struct.anon.2 { [16 x i8] c"charset\00\00\00\00\00\00\00\00\00", i32 31 }, %struct.anon.2 { [16 x i8] c"langset\00\00\00\00\00\00\00\00\00", i32 32 }, %struct.anon.2 { [16 x i8] c"name\00\00\00\00\00\00\00\00\00\00\00\00", i32 33 }, %struct.anon.2 { [16 x i8] c"const\00\00\00\00\00\00\00\00\00\00\00", i32 34 }, %struct.anon.2 { [16 x i8] c"or\00\00\00\00\00\00\00\00\00\00\00\00\00\00", i32 35 }, %struct.anon.2 { [16 x i8] c"and\00\00\00\00\00\00\00\00\00\00\00\00\00", i32 36 }, %struct.anon.2 { [16 x i8] c"eq\00\00\00\00\00\00\00\00\00\00\00\00\00\00", i32 37 }, %struct.anon.2 { [16 x i8] c"not_eq\00\00\00\00\00\00\00\00\00\00", i32 38 }, %struct.anon.2 { [16 x i8] c"less\00\00\00\00\00\00\00\00\00\00\00\00", i32 39 }, %struct.anon.2 { [16 x i8] c"less_eq\00\00\00\00\00\00\00\00\00", i32 40 }, %struct.anon.2 { [16 x i8] c"more\00\00\00\00\00\00\00\00\00\00\00\00", i32 41 }, %struct.anon.2 { [16 x i8] c"more_eq\00\00\00\00\00\00\00\00\00", i32 42 }, %struct.anon.2 { [16 x i8] c"contains\00\00\00\00\00\00\00\00", i32 43 }, %struct.anon.2 { [16 x i8] c"not_contains\00\00\00\00", i32 44 }, %struct.anon.2 { [16 x i8] c"plus\00\00\00\00\00\00\00\00\00\00\00\00", i32 45 }, %struct.anon.2 { [16 x i8] c"minus\00\00\00\00\00\00\00\00\00\00\00", i32 46 }, %struct.anon.2 { [16 x i8] c"times\00\00\00\00\00\00\00\00\00\00\00", i32 47 }, %struct.anon.2 { [16 x i8] c"divide\00\00\00\00\00\00\00\00\00\00", i32 48 }, %struct.anon.2 { [16 x i8] c"not\00\00\00\00\00\00\00\00\00\00\00\00\00", i32 49 }, %struct.anon.2 { [16 x i8] c"if\00\00\00\00\00\00\00\00\00\00\00\00\00\00", i32 50 }, %struct.anon.2 { [16 x i8] c"floor\00\00\00\00\00\00\00\00\00\00\00", i32 51 }, %struct.anon.2 { [16 x i8] c"ceil\00\00\00\00\00\00\00\00\00\00\00\00", i32 52 }, %struct.anon.2 { [16 x i8] c"round\00\00\00\00\00\00\00\00\00\00\00", i32 53 }, %struct.anon.2 { [16 x i8] c"trunc\00\00\00\00\00\00\00\00\00\00\00", i32 54 }], align 16
@.str.32 = private unnamed_addr constant [5 x i8] c"its:\00", align 1
@.str.34 = private unnamed_addr constant [34 x i8] c"empty font directory name ignored\00", align 1
@.str.35 = private unnamed_addr constant [7 x i8] c"prefix\00", align 1
@.str.36 = private unnamed_addr constant [5 x i8] c"salt\00", align 1
@.str.37 = private unnamed_addr constant [39 x i8] c"out of memory; cannot add directory %s\00", align 1
@.str.38 = private unnamed_addr constant [4 x i8] c"xdg\00", align 1
@.str.39 = private unnamed_addr constant [8 x i8] c"default\00", align 1
@.str.40 = private unnamed_addr constant [4 x i8] c"cwd\00", align 1
@.str.41 = private unnamed_addr constant [9 x i8] c"relative\00", align 1
@.str.42 = private unnamed_addr constant [95 x i8] c"Use of ambiguous path in <%s> element. please add prefix=\22cwd\22 if current behavior is desired.\00", align 1
@.str.43 = private unnamed_addr constant [35 x i8] c"empty cache directory name ignored\00", align 1
@.str.44 = private unnamed_addr constant [45 x i8] c"out of memory; cannot add cache directory %s\00", align 1
@.str.45 = private unnamed_addr constant [15 x i8] c"ignore_missing\00", align 1
@.str.46 = private unnamed_addr constant [11 x i8] c"deprecated\00", align 1
@.str.47 = private unnamed_addr constant [7 x i8] c"conf.d\00", align 1
@FcParseInclude.warn_conf = internal unnamed_addr global i1 false, align 4
@FcParseInclude.warn_confd = internal unnamed_addr global i1 false, align 4
@.str.48 = private unnamed_addr constant [76 x i8] c"reading configurations from %s is deprecated. please move it to %s manually\00", align 1
@.str.49 = private unnamed_addr constant [26 x i8] c"\22%s\22 is not known boolean\00", align 1
@.str.50 = private unnamed_addr constant [7 x i8] c"target\00", align 1
@.str.51 = private unnamed_addr constant [8 x i8] c"pattern\00", align 1
@.str.52 = private unnamed_addr constant [5 x i8] c"font\00", align 1
@.str.53 = private unnamed_addr constant [26 x i8] c"invalid match target \22%s\22\00", align 1
@.str.54 = private unnamed_addr constant [59 x i8] c"<match target=\22scan\22> cannot edit user-defined object \22%s\22\00", align 1
@.str.55 = private unnamed_addr constant [22 x i8] c"invalid match element\00", align 1
@.str.56 = private unnamed_addr constant [41 x i8] c"No <test> nor <edit> elements in <match>\00", align 1
@.str.57 = private unnamed_addr constant [8 x i8] c"binding\00", align 1
@.str.58 = private unnamed_addr constant [81 x i8] c"Having multiple <family> in <alias> isn't supported and may not work as expected\00", align 1
@.str.59 = private unnamed_addr constant [10 x i8] c"bad alias\00", align 1
@.str.60 = private unnamed_addr constant [24 x i8] c"missing family in alias\00", align 1
@.str.61 = private unnamed_addr constant [7 x i8] c"family\00", align 1
@.str.62 = private unnamed_addr constant [5 x i8] c"weak\00", align 1
@.str.63 = private unnamed_addr constant [7 x i8] c"strong\00", align 1
@.str.64 = private unnamed_addr constant [5 x i8] c"same\00", align 1
@.str.65 = private unnamed_addr constant [21 x i8] c"invalid binding \22%s\22\00", align 1
@.str.66 = private unnamed_addr constant [27 x i8] c"invalid constant used : %s\00", align 1
@.str.67 = private unnamed_addr constant [20 x i8] c"saw %s, expected %s\00", align 1
@.str.68 = private unnamed_addr constant [5 x i8] c"void\00", align 1
@.str.69 = private unnamed_addr constant [7 x i8] c"number\00", align 1
@.str.70 = private unnamed_addr constant [7 x i8] c"string\00", align 1
@.str.71 = private unnamed_addr constant [5 x i8] c"bool\00", align 1
@.str.72 = private unnamed_addr constant [7 x i8] c"matrix\00", align 1
@.str.73 = private unnamed_addr constant [8 x i8] c"charset\00", align 1
@.str.74 = private unnamed_addr constant [8 x i8] c"FT_Face\00", align 1
@.str.75 = private unnamed_addr constant [8 x i8] c"langset\00", align 1
@.str.76 = private unnamed_addr constant [6 x i8] c"range\00", align 1
@.str.77 = private unnamed_addr constant [7 x i8] c"domain\00", align 1
@.str.78 = private unnamed_addr constant [44 x i8] c"empty font directory name for remap ignored\00", align 1
@.str.79 = private unnamed_addr constant [8 x i8] c"as-path\00", align 1
@.str.80 = private unnamed_addr constant [29 x i8] c"Missing as-path in remap-dir\00", align 1
@.str.81 = private unnamed_addr constant [53 x i8] c"out of memory; cannot create remap data for %s as %s\00", align 1
@.str.82 = private unnamed_addr constant [27 x i8] c"Unable to reset fonts dirs\00", align 1
@.str.83 = private unnamed_addr constant [19 x i8] c"non-integer rescan\00", align 1
@.str.84 = private unnamed_addr constant [11 x i8] c"non-family\00", align 1
@.str.85 = private unnamed_addr constant [25 x i8] c"invalid test target \22%s\22\00", align 1
@.str.86 = private unnamed_addr constant [5 x i8] c"qual\00", align 1
@.str.87 = private unnamed_addr constant [4 x i8] c"any\00", align 1
@.str.88 = private unnamed_addr constant [4 x i8] c"all\00", align 1
@.str.89 = private unnamed_addr constant [6 x i8] c"first\00", align 1
@.str.90 = private unnamed_addr constant [10 x i8] c"not_first\00", align 1
@.str.91 = private unnamed_addr constant [23 x i8] c"invalid test qual \22%s\22\00", align 1
@.str.92 = private unnamed_addr constant [5 x i8] c"name\00", align 1
@.str.93 = private unnamed_addr constant [18 x i8] c"missing test name\00", align 1
@.str.94 = private unnamed_addr constant [8 x i8] c"compare\00", align 1
@.str.95 = private unnamed_addr constant [26 x i8] c"invalid test compare \22%s\22\00", align 1
@.str.96 = private unnamed_addr constant [14 x i8] c"ignore-blanks\00", align 1
@.str.97 = private unnamed_addr constant [32 x i8] c"invalid test ignore-blanks \22%s\22\00", align 1
@.str.98 = private unnamed_addr constant [24 x i8] c"missing test expression\00", align 1
@.str.99 = private unnamed_addr constant [78 x i8] c"Having multiple values in <test> isn't supported and may not work as expected\00", align 1
@fcCompareOps = internal constant [8 x %struct._FcOpMap] [%struct._FcOpMap { [16 x i8] c"eq\00\00\00\00\00\00\00\00\00\00\00\00\00\00", i32 22 }, %struct._FcOpMap { [16 x i8] c"not_eq\00\00\00\00\00\00\00\00\00\00", i32 23 }, %struct._FcOpMap { [16 x i8] c"less\00\00\00\00\00\00\00\00\00\00\00\00", i32 27 }, %struct._FcOpMap { [16 x i8] c"less_eq\00\00\00\00\00\00\00\00\00", i32 28 }, %struct._FcOpMap { [16 x i8] c"more\00\00\00\00\00\00\00\00\00\00\00\00", i32 29 }, %struct._FcOpMap { [16 x i8] c"more_eq\00\00\00\00\00\00\00\00\00", i32 30 }, %struct._FcOpMap { [16 x i8] c"contains\00\00\00\00\00\00\00\00", i32 24 }, %struct._FcOpMap { [16 x i8] c"not_contains\00\00\00\00", i32 26 }], align 16
@.str.100 = private unnamed_addr constant [18 x i8] c"missing edit name\00", align 1
@.str.101 = private unnamed_addr constant [5 x i8] c"mode\00", align 1
@.str.102 = private unnamed_addr constant [23 x i8] c"invalid edit mode \22%s\22\00", align 1
@.str.103 = private unnamed_addr constant [62 x i8] c"Expression doesn't take any effects for delete and delete_all\00", align 1
@fcModeOps = internal constant [8 x %struct._FcOpMap] [%struct._FcOpMap { [16 x i8] c"assign\00\00\00\00\00\00\00\00\00\00", i32 11 }, %struct._FcOpMap { [16 x i8] c"assign_replace\00\00", i32 12 }, %struct._FcOpMap { [16 x i8] c"prepend\00\00\00\00\00\00\00\00\00", i32 14 }, %struct._FcOpMap { [16 x i8] c"prepend_first\00\00\00", i32 13 }, %struct._FcOpMap { [16 x i8] c"append\00\00\00\00\00\00\00\00\00\00", i32 15 }, %struct._FcOpMap { [16 x i8] c"append_last\00\00\00\00\00", i32 16 }, %struct._FcOpMap { [16 x i8] c"delete\00\00\00\00\00\00\00\00\00\00", i32 17 }, %struct._FcOpMap { [16 x i8] c"delete_all\00\00\00\00\00\00", i32 18 }], align 16
@.str.104 = private unnamed_addr constant [26 x i8] c"\22%s\22: not a valid integer\00", align 1
@.str.105 = private unnamed_addr constant [25 x i8] c"\22%s\22: not a valid double\00", align 1
@.str.106 = private unnamed_addr constant [33 x i8] c"Missing values in matrix element\00", align 1
@.str.107 = private unnamed_addr constant [32 x i8] c"wrong number of matrix elements\00", align 1
@.str.108 = private unnamed_addr constant [27 x i8] c"too many elements in range\00", align 1
@.str.109 = private unnamed_addr constant [25 x i8] c"invalid element in range\00", align 1
@.str.110 = private unnamed_addr constant [14 x i8] c"invalid range\00", align 1
@.str.111 = private unnamed_addr constant [26 x i8] c"invalid character: 0x%04x\00", align 1
@.str.112 = private unnamed_addr constant [27 x i8] c"invalid element in charset\00", align 1
@.str.113 = private unnamed_addr constant [20 x i8] c"invalid langset: %s\00", align 1
@.str.114 = private unnamed_addr constant [27 x i8] c"invalid element in langset\00", align 1
@.str.115 = private unnamed_addr constant [18 x i8] c"bad font selector\00", align 1
@.str.116 = private unnamed_addr constant [24 x i8] c"unknown pattern element\00", align 1
@.str.117 = private unnamed_addr constant [29 x i8] c"missing pattern element name\00", align 1
@.str.118 = private unnamed_addr constant [27 x i8] c"unknown pattern element %d\00", align 1
@.str.119 = private unnamed_addr constant [25 x i8] c"invalid name target \22%s\22\00", align 1
@.str.120 = private unnamed_addr constant [20 x i8] c"mismatching element\00", align 1
@.str.121 = private unnamed_addr constant [23 x i8] c"invalid attribute '%s'\00", align 1
@switch.table.FcConfigMessage = private unnamed_addr constant [3 x i8*] [i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.15, i64 0, i64 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.16, i64 0, i64 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.17, i64 0, i64 0)], align 8
@switch.table.FcTypecheckExpr.124 = private unnamed_addr constant [10 x i8*] [i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.68, i64 0, i64 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.69, i64 0, i64 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.69, i64 0, i64 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.70, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.71, i64 0, i64 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.72, i64 0, i64 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.73, i64 0, i64 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.74, i64 0, i64 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.75, i64 0, i64 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.76, i64 0, i64 0)], align 8

@FcConfigParseAndLoad = hidden alias i32 (%struct._FcConfig*, i8*, i32), i32 (%struct._FcConfig*, i8*, i32)* @IA__FcConfigParseAndLoad
@FcConfigParseAndLoadFromMemory = hidden alias i32 (%struct._FcConfig*, i8*, i32), i32 (%struct._FcConfig*, i8*, i32)* @IA__FcConfigParseAndLoadFromMemory

; Function Attrs: nounwind ssp uwtable
define hidden void @FcTestDestroy(%struct._FcTest* nocapture) local_unnamed_addr #0 {
  %2 = getelementptr inbounds %struct._FcTest, %struct._FcTest* %0, i64 0, i32 4
  %3 = load %struct._FcExpr*, %struct._FcExpr** %2, align 8
  tail call fastcc void @FcExprDestroy(%struct._FcExpr* %3)
  %4 = bitcast %struct._FcTest* %0 to i8*
  tail call void @free(i8* %4) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc void @FcExprDestroy(%struct._FcExpr*) unnamed_addr #0 {
  %2 = icmp eq %struct._FcExpr* %0, null
  br i1 %2, label %49, label %3

3:                                                ; preds = %1
  %4 = getelementptr inbounds %struct._FcExpr, %struct._FcExpr* %0, i64 0, i32 0
  %5 = load i32, i32* %4, align 8
  %6 = trunc i32 %5 to i16
  switch i16 %6, label %48 [
    i16 38, label %45
    i16 37, label %45
    i16 2, label %7
    i16 3, label %11
    i16 4, label %26
    i16 6, label %30
    i16 7, label %34
    i16 40, label %45
    i16 39, label %45
    i16 10, label %38
    i16 35, label %45
    i16 36, label %42
    i16 19, label %42
    i16 34, label %42
    i16 33, label %42
    i16 32, label %42
    i16 31, label %42
    i16 26, label %42
    i16 20, label %42
    i16 21, label %42
    i16 22, label %42
    i16 23, label %42
    i16 27, label %42
    i16 28, label %42
    i16 29, label %42
    i16 30, label %42
    i16 24, label %42
    i16 25, label %42
  ]

7:                                                ; preds = %3
  %8 = getelementptr inbounds %struct._FcExpr, %struct._FcExpr* %0, i64 0, i32 1
  %9 = bitcast %union.anon* %8 to i8**
  %10 = load i8*, i8** %9, align 8
  tail call void @free(i8* %10) #9
  br label %48

11:                                               ; preds = %3
  %12 = getelementptr inbounds %struct._FcExpr, %struct._FcExpr* %0, i64 0, i32 1
  %13 = bitcast %union.anon* %12 to %struct._FcExprMatrix**
  %14 = load %struct._FcExprMatrix*, %struct._FcExprMatrix** %13, align 8
  %15 = icmp eq %struct._FcExprMatrix* %14, null
  br i1 %15, label %48, label %16

16:                                               ; preds = %11
  %17 = getelementptr inbounds %struct._FcExprMatrix, %struct._FcExprMatrix* %14, i64 0, i32 0
  %18 = load %struct._FcExpr*, %struct._FcExpr** %17, align 8
  tail call fastcc void @FcExprDestroy(%struct._FcExpr* %18) #9
  %19 = getelementptr inbounds %struct._FcExprMatrix, %struct._FcExprMatrix* %14, i64 0, i32 1
  %20 = load %struct._FcExpr*, %struct._FcExpr** %19, align 8
  tail call fastcc void @FcExprDestroy(%struct._FcExpr* %20) #9
  %21 = getelementptr inbounds %struct._FcExprMatrix, %struct._FcExprMatrix* %14, i64 0, i32 2
  %22 = load %struct._FcExpr*, %struct._FcExpr** %21, align 8
  tail call fastcc void @FcExprDestroy(%struct._FcExpr* %22) #9
  %23 = getelementptr inbounds %struct._FcExprMatrix, %struct._FcExprMatrix* %14, i64 0, i32 3
  %24 = load %struct._FcExpr*, %struct._FcExpr** %23, align 8
  tail call fastcc void @FcExprDestroy(%struct._FcExpr* %24) #9
  %25 = bitcast %struct._FcExprMatrix* %14 to i8*
  tail call void @free(i8* %25) #9
  br label %48

26:                                               ; preds = %3
  %27 = getelementptr inbounds %struct._FcExpr, %struct._FcExpr* %0, i64 0, i32 1
  %28 = bitcast %union.anon* %27 to %struct._FcRange**
  %29 = load %struct._FcRange*, %struct._FcRange** %28, align 8
  tail call void @IA__FcRangeDestroy(%struct._FcRange* %29) #9
  br label %48

30:                                               ; preds = %3
  %31 = getelementptr inbounds %struct._FcExpr, %struct._FcExpr* %0, i64 0, i32 1
  %32 = bitcast %union.anon* %31 to %struct._FcCharSet**
  %33 = load %struct._FcCharSet*, %struct._FcCharSet** %32, align 8
  tail call void @IA__FcCharSetDestroy(%struct._FcCharSet* %33) #9
  br label %48

34:                                               ; preds = %3
  %35 = getelementptr inbounds %struct._FcExpr, %struct._FcExpr* %0, i64 0, i32 1
  %36 = bitcast %union.anon* %35 to %struct._FcLangSet**
  %37 = load %struct._FcLangSet*, %struct._FcLangSet** %36, align 8
  tail call void @IA__FcLangSetDestroy(%struct._FcLangSet* %37) #9
  br label %48

38:                                               ; preds = %3
  %39 = getelementptr inbounds %struct._FcExpr, %struct._FcExpr* %0, i64 0, i32 1
  %40 = bitcast %union.anon* %39 to i8**
  %41 = load i8*, i8** %40, align 8
  tail call void @free(i8* %41) #9
  br label %48

42:                                               ; preds = %3, %3, %3, %3, %3, %3, %3, %3, %3, %3, %3, %3, %3, %3, %3, %3, %3
  %43 = getelementptr inbounds %struct._FcExpr, %struct._FcExpr* %0, i64 0, i32 1, i32 0, i32 1
  %44 = load %struct._FcExpr*, %struct._FcExpr** %43, align 8
  tail call fastcc void @FcExprDestroy(%struct._FcExpr* %44)
  br label %45

45:                                               ; preds = %3, %3, %3, %3, %3, %42
  %46 = getelementptr inbounds %struct._FcExpr, %struct._FcExpr* %0, i64 0, i32 1, i32 0, i32 0
  %47 = load %struct._FcExpr*, %struct._FcExpr** %46, align 8
  tail call fastcc void @FcExprDestroy(%struct._FcExpr* %47)
  br label %48

48:                                               ; preds = %16, %11, %3, %45, %38, %34, %30, %26, %7
  store i32 8, i32* %4, align 8
  br label %49

49:                                               ; preds = %1, %48
  ret void
}

; Function Attrs: nounwind
declare void @free(i8* nocapture) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @FcRuleDestroy(%struct._FcRule* nocapture) local_unnamed_addr #0 {
  br label %2

2:                                                ; preds = %26, %1
  %3 = phi %struct._FcRule* [ %0, %1 ], [ %5, %26 ]
  %4 = getelementptr inbounds %struct._FcRule, %struct._FcRule* %3, i64 0, i32 0
  %5 = load %struct._FcRule*, %struct._FcRule** %4, align 8
  %6 = getelementptr inbounds %struct._FcRule, %struct._FcRule* %3, i64 0, i32 1
  %7 = load i32, i32* %6, align 8
  switch i32 %7, label %26 [
    i32 1, label %8
    i32 2, label %14
  ]

8:                                                ; preds = %2
  %9 = getelementptr inbounds %struct._FcRule, %struct._FcRule* %3, i64 0, i32 2, i32 0
  %10 = load %struct._FcTest*, %struct._FcTest** %9, align 8
  %11 = getelementptr inbounds %struct._FcTest, %struct._FcTest* %10, i64 0, i32 4
  %12 = load %struct._FcExpr*, %struct._FcExpr** %11, align 8
  tail call fastcc void @FcExprDestroy(%struct._FcExpr* %12) #9
  %13 = bitcast %struct._FcTest* %10 to i8*
  br label %24

14:                                               ; preds = %2
  %15 = getelementptr inbounds %struct._FcRule, %struct._FcRule* %3, i64 0, i32 2
  %16 = bitcast %union.anon.0* %15 to %struct._FcEdit**
  %17 = load %struct._FcEdit*, %struct._FcEdit** %16, align 8
  %18 = getelementptr inbounds %struct._FcEdit, %struct._FcEdit* %17, i64 0, i32 2
  %19 = load %struct._FcExpr*, %struct._FcExpr** %18, align 8
  %20 = icmp eq %struct._FcExpr* %19, null
  br i1 %20, label %22, label %21

21:                                               ; preds = %14
  tail call fastcc void @FcExprDestroy(%struct._FcExpr* nonnull %19) #9
  br label %22

22:                                               ; preds = %14, %21
  %23 = bitcast %struct._FcEdit* %17 to i8*
  br label %24

24:                                               ; preds = %8, %22
  %25 = phi i8* [ %23, %22 ], [ %13, %8 ]
  tail call void @free(i8* %25) #9
  br label %26

26:                                               ; preds = %24, %2
  %27 = bitcast %struct._FcRule* %3 to i8*
  tail call void @free(i8* %27) #9
  %28 = icmp eq %struct._FcRule* %5, null
  br i1 %28, label %29, label %2

29:                                               ; preds = %26
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: nounwind ssp uwtable
define hidden void @FcEditDestroy(%struct._FcEdit* nocapture) local_unnamed_addr #0 {
  %2 = getelementptr inbounds %struct._FcEdit, %struct._FcEdit* %0, i64 0, i32 2
  %3 = load %struct._FcExpr*, %struct._FcExpr** %2, align 8
  %4 = icmp eq %struct._FcExpr* %3, null
  br i1 %4, label %6, label %5

5:                                                ; preds = %1
  tail call fastcc void @FcExprDestroy(%struct._FcExpr* nonnull %3)
  br label %6

6:                                                ; preds = %1, %5
  %7 = bitcast %struct._FcEdit* %0 to i8*
  tail call void @free(i8* %7) #9
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: nounwind ssp uwtable
define hidden void @FcConfigPathFini() local_unnamed_addr #0 {
  br label %1

1:                                                ; preds = %1, %0
  fence seq_cst
  %2 = load i8*, i8** @__fc_userdir, align 8
  %3 = ptrtoint i8* %2 to i64
  %4 = cmpxchg i64* bitcast (i8** @__fc_userdir to i64*), i64 %3, i64 0 seq_cst seq_cst
  %5 = extractvalue { i64, i1 } %4, 1
  br i1 %5, label %6, label %1

6:                                                ; preds = %1
  tail call void @free(i8* %2) #9
  br label %7

7:                                                ; preds = %7, %6
  fence seq_cst
  %8 = load i8*, i8** @__fc_userconf, align 8
  %9 = ptrtoint i8* %8 to i64
  %10 = cmpxchg i64* bitcast (i8** @__fc_userconf to i64*), i64 %9, i64 0 seq_cst seq_cst
  %11 = extractvalue { i64, i1 } %10, 1
  br i1 %11, label %12, label %7

12:                                               ; preds = %7
  tail call void @free(i8* %8) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @FcConfigParseOnly(%struct._FcConfig*, i8*, i32) local_unnamed_addr #0 {
  %4 = tail call fastcc i32 @_FcConfigParse(%struct._FcConfig* %0, i8* %1, i32 %2, i32 0)
  ret i32 %4
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc i32 @_FcConfigParse(%struct._FcConfig*, i8*, i32, i32) unnamed_addr #0 {
  %5 = alloca %struct._FcStrBuf, align 8
  %6 = alloca [8192 x i8], align 16
  %7 = alloca %struct._FcStrBuf, align 8
  %8 = alloca [8193 x i8], align 16
  %9 = bitcast %struct._FcStrBuf* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 152, i8* nonnull %9) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %9, i8 -86, i64 152, i1 false)
  %10 = getelementptr inbounds [8192 x i8], [8192 x i8]* %6, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 8192, i8* nonnull %10) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %10, i8 -86, i64 8192, i1 false)
  %11 = bitcast %struct._FcStrBuf* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 152, i8* nonnull %11) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %11, i8 -86, i64 152, i1 false)
  call void @FcStrBufInit(%struct._FcStrBuf* nonnull %7, i8* null, i32 0) #9
  %12 = call i8* @IA__FcConfigGetFilename(%struct._FcConfig* %0, i8* %1) #9
  %13 = icmp eq i8* %12, null
  br i1 %13, label %14, label %19

14:                                               ; preds = %4
  %15 = call i32 @FcStrBufString(%struct._FcStrBuf* nonnull %7, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.1, i64 0, i64 0)) #9
  %16 = icmp eq i8* %1, null
  %17 = select i1 %16, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.2, i64 0, i64 0), i8* %1
  %18 = call i32 @FcStrBufString(%struct._FcStrBuf* nonnull %7, i8* %17) #9
  br label %168

19:                                               ; preds = %4
  %20 = call i8* @FcConfigRealFilename(%struct._FcConfig* %0, i8* %1) #9
  %21 = icmp eq i8* %20, null
  br i1 %21, label %22, label %27

22:                                               ; preds = %19
  %23 = call i32 @FcStrBufString(%struct._FcStrBuf* nonnull %7, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.3, i64 0, i64 0)) #9
  %24 = icmp eq i8* %1, null
  %25 = select i1 %24, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.2, i64 0, i64 0), i8* %1
  %26 = call i32 @FcStrBufString(%struct._FcStrBuf* nonnull %7, i8* %25) #9
  call void @IA__FcStrFree(i8* nonnull %12) #9
  br label %168

27:                                               ; preds = %19
  %28 = getelementptr inbounds %struct._FcConfig, %struct._FcConfig* %0, i64 0, i32 17
  %29 = load %struct._FcStrSet*, %struct._FcStrSet** %28, align 8
  %30 = call i32 @IA__FcStrSetMember(%struct._FcStrSet* %29, i8* nonnull %20) #9
  %31 = icmp eq i32 %30, 0
  br i1 %31, label %33, label %32

32:                                               ; preds = %27
  call void @IA__FcStrFree(i8* nonnull %12) #9
  call void @IA__FcStrFree(i8* nonnull %20) #9
  br label %185

33:                                               ; preds = %27
  %34 = icmp eq i32 %3, 0
  br i1 %34, label %40, label %35

35:                                               ; preds = %33
  %36 = getelementptr inbounds %struct._FcConfig, %struct._FcConfig* %0, i64 0, i32 4
  %37 = load %struct._FcStrSet*, %struct._FcStrSet** %36, align 8
  %38 = call i32 @IA__FcStrSetAdd(%struct._FcStrSet* %37, i8* nonnull %12) #9
  %39 = icmp eq i32 %38, 0
  br i1 %39, label %161, label %40

40:                                               ; preds = %35, %33
  %41 = load %struct._FcStrSet*, %struct._FcStrSet** %28, align 8
  %42 = call i32 @IA__FcStrSetAdd(%struct._FcStrSet* %41, i8* nonnull %20) #9
  %43 = icmp eq i32 %42, 0
  br i1 %43, label %161, label %44

44:                                               ; preds = %40
  %45 = call i32 @IA__FcFileIsDir(i8* nonnull %20) #9
  %46 = icmp eq i32 %45, 0
  br i1 %46, label %138, label %47

47:                                               ; preds = %44
  %48 = call %struct.__dirstream* @opendir(i8* nonnull %20) #9
  %49 = icmp eq %struct.__dirstream* %48, null
  br i1 %49, label %50, label %53

50:                                               ; preds = %47
  %51 = icmp eq i32 %2, 0
  br i1 %51, label %133, label %52

52:                                               ; preds = %50
  call void (%struct._FcConfigParse*, i32, i8*, ...) @FcConfigMessage(%struct._FcConfigParse* null, i32 2, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.10, i64 0, i64 0), i8* %1) #9
  br label %133

53:                                               ; preds = %47
  %54 = call i64 @strlen(i8* nonnull %20) #12
  %55 = add i64 %54, 4098
  %56 = call noalias i8* @malloc(i64 %55) #9
  %57 = icmp eq i8* %56, null
  br i1 %57, label %58, label %60

58:                                               ; preds = %53
  %59 = call i32 @closedir(%struct.__dirstream* nonnull %48) #9
  br label %133

60:                                               ; preds = %53
  %61 = call i8* @strcpy(i8* nonnull %56, i8* nonnull %20) #9
  %62 = call i64 @strlen(i8* nonnull %56) #9
  %63 = getelementptr i8, i8* %56, i64 %62
  %64 = bitcast i8* %63 to i16*
  store i16 47, i16* %64, align 1
  %65 = call i64 @strlen(i8* nonnull %56) #12
  %66 = getelementptr inbounds i8, i8* %56, i64 %65
  %67 = call %struct._FcStrSet* @FcStrSetCreateEx(i32 2) #9
  %68 = icmp eq %struct._FcStrSet* %67, null
  br i1 %68, label %129, label %69

69:                                               ; preds = %60
  %70 = load i32, i32* @FcDebugVal, align 4
  %71 = and i32 %70, 1024
  %72 = icmp eq i32 %71, 0
  br i1 %72, label %75, label %73

73:                                               ; preds = %69
  %74 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.12, i64 0, i64 0), i8* nonnull %20) #9
  br label %75

75:                                               ; preds = %73, %69
  br i1 %34, label %78, label %76

76:                                               ; preds = %75
  %77 = call i32 @FcConfigAddConfigDir(%struct._FcConfig* %0, i8* nonnull %20) #9
  br label %78

78:                                               ; preds = %76, %75
  %79 = call %struct.dirent* @readdir64(%struct.__dirstream* nonnull %48) #9
  %80 = icmp eq %struct.dirent* %79, null
  br i1 %80, label %106, label %81

81:                                               ; preds = %78, %103
  %82 = phi %struct.dirent* [ %104, %103 ], [ %79, %78 ]
  %83 = getelementptr inbounds %struct.dirent, %struct.dirent* %82, i64 0, i32 4, i64 0
  %84 = call i64 @strlen(i8* %83) #12
  %85 = load i8, i8* %83, align 1
  %86 = icmp sgt i8 %85, 47
  br i1 %86, label %87, label %103

87:                                               ; preds = %81
  %88 = trunc i64 %84 to i32
  %89 = icmp slt i8 %85, 58
  %90 = icmp sgt i32 %88, 5
  %91 = and i1 %89, %90
  br i1 %91, label %92, label %103

92:                                               ; preds = %87
  %93 = shl i64 %84, 32
  %94 = ashr exact i64 %93, 32
  %95 = getelementptr inbounds %struct.dirent, %struct.dirent* %82, i64 0, i32 4, i64 %94
  %96 = getelementptr inbounds i8, i8* %95, i64 -5
  %97 = call i32 @strcmp(i8* %96, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.13, i64 0, i64 0)) #12
  %98 = icmp eq i32 %97, 0
  br i1 %98, label %99, label %103

99:                                               ; preds = %92
  %100 = call i8* @strcpy(i8* %66, i8* %83) #9
  %101 = call i32 @IA__FcStrSetAdd(%struct._FcStrSet* nonnull %67, i8* nonnull %56) #9
  %102 = icmp eq i32 %101, 0
  br i1 %102, label %127, label %103

103:                                              ; preds = %81, %87, %92, %99
  %104 = call %struct.dirent* @readdir64(%struct.__dirstream* nonnull %48) #9
  %105 = icmp eq %struct.dirent* %104, null
  br i1 %105, label %106, label %81

106:                                              ; preds = %103, %78
  %107 = getelementptr inbounds %struct._FcStrSet, %struct._FcStrSet* %67, i64 0, i32 3
  %108 = bitcast i8*** %107 to i8**
  %109 = load i8*, i8** %108, align 8
  %110 = getelementptr inbounds %struct._FcStrSet, %struct._FcStrSet* %67, i64 0, i32 1
  %111 = load i32, i32* %110, align 4
  %112 = sext i32 %111 to i64
  call void @qsort(i8* %109, i64 %112, i64 8, i32 (i8*, i8*)* nonnull @FcSortCmpStr) #9
  %113 = load i32, i32* %110, align 4
  %114 = icmp sgt i32 %113, 0
  br i1 %114, label %119, label %127

115:                                              ; preds = %119
  %116 = load i32, i32* %110, align 4
  %117 = sext i32 %116 to i64
  %118 = icmp slt i64 %125, %117
  br i1 %118, label %119, label %127

119:                                              ; preds = %106, %115
  %120 = phi i64 [ %125, %115 ], [ 0, %106 ]
  %121 = load i8**, i8*** %107, align 8
  %122 = getelementptr inbounds i8*, i8** %121, i64 %120
  %123 = load i8*, i8** %122, align 8
  %124 = call fastcc i32 @_FcConfigParse(%struct._FcConfig* %0, i8* %123, i32 %2, i32 %3) #9
  %125 = add nuw nsw i64 %120, 1
  %126 = icmp eq i32 %124, 0
  br i1 %126, label %127, label %115

127:                                              ; preds = %99, %119, %115, %106
  %128 = phi i32 [ 1, %106 ], [ %124, %115 ], [ 0, %119 ], [ 0, %99 ]
  call void @IA__FcStrSetDestroy(%struct._FcStrSet* nonnull %67) #9
  br label %129

129:                                              ; preds = %60, %127
  %130 = phi i32 [ %128, %127 ], [ 0, %60 ]
  call void @free(i8* %56) #9
  %131 = call i32 @closedir(%struct.__dirstream* nonnull %48) #9
  %132 = icmp eq i32 %130, 0
  br i1 %132, label %133, label %136

133:                                              ; preds = %58, %52, %50, %129
  %134 = icmp eq i32 %2, 0
  %135 = zext i1 %134 to i32
  br label %136

136:                                              ; preds = %133, %129
  %137 = phi i32 [ %135, %133 ], [ 1, %129 ]
  call void @IA__FcStrFree(i8* nonnull %12) #9
  call void @IA__FcStrFree(i8* nonnull %20) #9
  br label %185

138:                                              ; preds = %44
  call void @FcStrBufInit(%struct._FcStrBuf* nonnull %5, i8* null, i32 0) #9
  %139 = call i32 (i8*, i32, ...) @FcOpen(i8* nonnull %20, i32 0) #9
  %140 = icmp eq i32 %139, -1
  br i1 %140, label %141, label %144

141:                                              ; preds = %138
  %142 = call i32 @FcStrBufString(%struct._FcStrBuf* nonnull %7, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.4, i64 0, i64 0)) #9
  %143 = call i32 @FcStrBufString(%struct._FcStrBuf* nonnull %7, i8* nonnull %20) #9
  call void @FcStrBufDestroy(%struct._FcStrBuf* nonnull %5) #9
  br label %161

144:                                              ; preds = %138, %154
  %145 = call i64 @read(i32 %139, i8* nonnull %10, i64 8192) #9
  %146 = trunc i64 %145 to i32
  %147 = icmp slt i32 %146, 0
  br i1 %147, label %148, label %154

148:                                              ; preds = %144
  %149 = tail call i32* @__errno_location() #13
  %150 = load i32, i32* %149, align 4
  %151 = getelementptr inbounds [8193 x i8], [8193 x i8]* %8, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 8193, i8* nonnull %151) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %151, i8 -86, i64 8193, i1 false)
  %152 = call i8* @strerror_r(i32 %150, i8* nonnull %151, i64 8192) #9
  call void (%struct._FcConfigParse*, i32, i8*, ...) @FcConfigMessage(%struct._FcConfigParse* null, i32 2, i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str.5, i64 0, i64 0), i8* nonnull %20, i8* nonnull %151, i32 %150)
  %153 = call i32 @close(i32 %139) #9
  call void @llvm.lifetime.end.p0i8(i64 8193, i8* nonnull %151) #9
  br label %162

154:                                              ; preds = %144
  %155 = call i32 @FcStrBufData(%struct._FcStrBuf* nonnull %5, i8* nonnull %10, i32 %146) #9
  %156 = icmp eq i32 %146, 0
  br i1 %156, label %157, label %144

157:                                              ; preds = %154
  %158 = call i32 @close(i32 %139) #9
  %159 = call i8* @FcStrBufDoneStatic(%struct._FcStrBuf* nonnull %5) #9
  %160 = call fastcc i32 @FcConfigParseAndLoadFromMemoryInternal(%struct._FcConfig* %0, i8* nonnull %12, i8* %159, i32 %2, i32 %3)
  br label %162

161:                                              ; preds = %141, %35, %40
  call void @IA__FcStrFree(i8* nonnull %12) #9
  br label %165

162:                                              ; preds = %148, %157
  %163 = phi i32 [ 0, %148 ], [ %160, %157 ]
  %164 = phi i32 [ %2, %148 ], [ 0, %157 ]
  call void @FcStrBufDestroy(%struct._FcStrBuf* nonnull %5) #9
  call void @IA__FcStrFree(i8* nonnull %12) #9
  br i1 %21, label %168, label %165

165:                                              ; preds = %161, %162
  %166 = phi i32 [ 0, %161 ], [ %163, %162 ]
  %167 = phi i32 [ %2, %161 ], [ %164, %162 ]
  call void @IA__FcStrFree(i8* nonnull %20) #9
  br label %168

168:                                              ; preds = %22, %14, %162, %165
  %169 = phi i32 [ 0, %14 ], [ %163, %162 ], [ %166, %165 ], [ 0, %22 ]
  %170 = phi i32 [ %2, %14 ], [ %164, %162 ], [ %167, %165 ], [ %2, %22 ]
  %171 = icmp eq i32 %2, 0
  br i1 %171, label %185, label %172

172:                                              ; preds = %168
  %173 = icmp eq i32 %169, 0
  %174 = icmp ne i32 %170, 0
  %175 = and i1 %173, %174
  br i1 %175, label %176, label %184

176:                                              ; preds = %172
  %177 = icmp eq i8* %1, null
  %178 = icmp eq i32 %3, 0
  %179 = select i1 %178, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.8, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.7, i64 0, i64 0)
  %180 = call i8* @FcStrBufDoneStatic(%struct._FcStrBuf* nonnull %7) #9
  br i1 %177, label %182, label %181

181:                                              ; preds = %176
  call void (%struct._FcConfigParse*, i32, i8*, ...) @FcConfigMessage(%struct._FcConfigParse* null, i32 2, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.6, i64 0, i64 0), i8* %179, i8* nonnull %1, i8* %180)
  br label %183

182:                                              ; preds = %176
  call void (%struct._FcConfigParse*, i32, i8*, ...) @FcConfigMessage(%struct._FcConfigParse* null, i32 2, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.9, i64 0, i64 0), i8* %179, i8* %180)
  br label %183

183:                                              ; preds = %182, %181
  call void @FcStrBufDestroy(%struct._FcStrBuf* nonnull %7) #9
  br label %185

184:                                              ; preds = %172
  call void @FcStrBufDestroy(%struct._FcStrBuf* nonnull %7) #9
  br label %185

185:                                              ; preds = %168, %184, %183, %136, %32
  %186 = phi i32 [ 1, %32 ], [ %137, %136 ], [ 0, %183 ], [ %169, %184 ], [ 1, %168 ]
  call void @llvm.lifetime.end.p0i8(i64 152, i8* nonnull %11) #9
  call void @llvm.lifetime.end.p0i8(i64 8192, i8* nonnull %10) #9
  call void @llvm.lifetime.end.p0i8(i64 152, i8* nonnull %9) #9
  ret i32 %186
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @IA__FcConfigParseAndLoad(%struct._FcConfig*, i8*, i32) #0 {
  %4 = tail call fastcc i32 @_FcConfigParse(%struct._FcConfig* %0, i8* %1, i32 %2, i32 1)
  ret i32 %4
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @IA__FcConfigParseAndLoadFromMemory(%struct._FcConfig*, i8*, i32) #0 {
  %4 = tail call fastcc i32 @FcConfigParseAndLoadFromMemoryInternal(%struct._FcConfig* %0, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str, i64 0, i64 0), i8* %1, i32 %2, i32 1)
  ret i32 %4
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc i32 @FcConfigParseAndLoadFromMemoryInternal(%struct._FcConfig*, i8*, i8*, i32, i32) unnamed_addr #0 {
  %6 = alloca %struct._FcConfigParse, align 8
  %7 = alloca %struct._FcPtrListIter, align 8
  %8 = alloca %struct._xmlSAXHandler, align 8
  %9 = alloca %struct._FcPtrListIter, align 8
  %10 = bitcast %struct._FcConfigParse* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4560, i8* nonnull %10) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %10, i8 -86, i64 4560, i1 false)
  %11 = bitcast %struct._FcPtrListIter* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %11) #9
  %12 = bitcast %struct._xmlSAXHandler* %8 to i8*
  %13 = bitcast %struct._FcPtrListIter* %7 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %13, i8 -86, i64 24, i1 false)
  call void @llvm.lifetime.start.p0i8(i64 256, i8* nonnull %12) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %12, i8 -86, i64 256, i1 false)
  %14 = icmp eq i8* %2, null
  br i1 %14, label %129, label %15

15:                                               ; preds = %5
  %16 = tail call i64 @strlen(i8* nonnull %2) #12
  %17 = load i32, i32* @FcDebugVal, align 4
  %18 = and i32 %17, 1024
  %19 = icmp eq i32 %18, 0
  br i1 %19, label %24, label %20

20:                                               ; preds = %15
  %21 = icmp eq i32 %4, 0
  %22 = select i1 %21, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.24, i64 0, i64 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.23, i64 0, i64 0)
  %23 = tail call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.22, i64 0, i64 0), i8* %22, i8* %1)
  br label %24

24:                                               ; preds = %15, %20
  %25 = getelementptr inbounds %struct._xmlSAXHandler, %struct._xmlSAXHandler* %8, i64 0, i32 1
  %26 = bitcast i32 (i8*)** %25 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %26, i8 0, i64 248, i1 false)
  %27 = getelementptr inbounds %struct._xmlSAXHandler, %struct._xmlSAXHandler* %8, i64 0, i32 0
  store void (i8*, i8*, i8*, i8*)* @FcInternalSubsetDecl, void (i8*, i8*, i8*, i8*)** %27, align 8
  %28 = getelementptr inbounds %struct._xmlSAXHandler, %struct._xmlSAXHandler* %8, i64 0, i32 26
  store void (i8*, i8*, i8*, i8*)* @FcExternalSubsetDecl, void (i8*, i8*, i8*, i8*)** %28, align 8
  %29 = getelementptr inbounds %struct._xmlSAXHandler, %struct._xmlSAXHandler* %8, i64 0, i32 14
  store void (i8*, i8*, i8**)* @FcStartElement, void (i8*, i8*, i8**)** %29, align 8
  %30 = getelementptr inbounds %struct._xmlSAXHandler, %struct._xmlSAXHandler* %8, i64 0, i32 15
  store void (i8*, i8*)* @FcEndElement, void (i8*, i8*)** %30, align 8
  %31 = getelementptr inbounds %struct._xmlSAXHandler, %struct._xmlSAXHandler* %8, i64 0, i32 17
  store void (i8*, i8*, i32)* @FcCharacterData, void (i8*, i8*, i32)** %31, align 8
  %32 = call %struct._xmlParserCtxt* @xmlCreatePushParserCtxt(%struct._xmlSAXHandler* nonnull %8, i8* nonnull %10, i8* null, i32 0, i8* %1) #9
  %33 = icmp eq %struct._xmlParserCtxt* %32, null
  br i1 %33, label %113, label %34

34:                                               ; preds = %24
  %35 = getelementptr inbounds %struct._FcConfigParse, %struct._FcConfigParse* %6, i64 0, i32 7
  store i32 0, i32* %35, align 8
  %36 = getelementptr inbounds %struct._FcConfigParse, %struct._FcConfigParse* %6, i64 0, i32 9
  store i32 0, i32* %36, align 8
  %37 = getelementptr inbounds %struct._FcConfigParse, %struct._FcConfigParse* %6, i64 0, i32 3
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %10, i8 0, i64 20, i1 false) #9
  store i8* %1, i8** %37, align 8
  %38 = getelementptr inbounds %struct._FcConfigParse, %struct._FcConfigParse* %6, i64 0, i32 4
  store %struct._FcConfig* %0, %struct._FcConfig** %38, align 8
  %39 = call %struct._FcRuleSet* @FcRuleSetCreate(i8* %1) #9
  %40 = getelementptr inbounds %struct._FcConfigParse, %struct._FcConfigParse* %6, i64 0, i32 5
  store %struct._FcRuleSet* %39, %struct._FcRuleSet** %40, align 8
  %41 = getelementptr inbounds %struct._FcConfigParse, %struct._FcConfigParse* %6, i64 0, i32 6
  store %struct._xmlParserCtxt* %32, %struct._xmlParserCtxt** %41, align 8
  %42 = icmp eq i32 %4, 0
  %43 = zext i1 %42 to i32
  %44 = getelementptr inbounds %struct._FcConfigParse, %struct._FcConfigParse* %6, i64 0, i32 11
  store i32 %43, i32* %44, align 8
  call void @FcRuleSetEnable(%struct._FcRuleSet* %39, i32 %4) #9
  %45 = trunc i64 %16 to i32
  %46 = icmp eq i64 %16, 0
  %47 = zext i1 %46 to i32
  %48 = call i32 @xmlParseChunk(%struct._xmlParserCtxt* nonnull %32, i8* nonnull %2, i32 %45, i32 %47) #9
  %49 = icmp eq i32 %48, 0
  br i1 %49, label %55, label %50

50:                                               ; preds = %34
  %51 = bitcast %struct._xmlParserCtxt* %32 to i8*
  %52 = call %struct._xmlError* @xmlCtxtGetLastError(i8* nonnull %51) #9
  %53 = getelementptr inbounds %struct._xmlError, %struct._xmlError* %52, i64 0, i32 2
  %54 = load i8*, i8** %53, align 8
  call void (%struct._FcConfigParse*, i32, i8*, ...) @FcConfigMessage(%struct._FcConfigParse* nonnull %6, i32 2, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.25, i64 0, i64 0), i8* %54)
  br label %103

55:                                               ; preds = %34
  %56 = getelementptr inbounds %struct._FcConfigParse, %struct._FcConfigParse* %6, i64 0, i32 2
  %57 = load i32, i32* %56, align 8
  br i1 %42, label %58, label %60

58:                                               ; preds = %55
  %59 = bitcast %struct._FcRuleSet** %40 to i8**
  br label %92

60:                                               ; preds = %55
  %61 = bitcast %struct._FcPtrListIter* %9 to i8*
  %62 = bitcast %struct._FcRuleSet** %40 to i8**
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %61) #9
  %63 = bitcast %struct._FcPtrListIter* %9 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %63, i8 -86, i64 24, i1 false)
  %64 = load %struct._FcRuleSet*, %struct._FcRuleSet** %40, align 8
  %65 = getelementptr inbounds %struct._FcRuleSet, %struct._FcRuleSet* %64, i64 0, i32 5, i64 0
  %66 = load %struct._FcPtrList*, %struct._FcPtrList** %65, align 8
  call void @FcPtrListIterInit(%struct._FcPtrList* %66, %struct._FcPtrListIter* nonnull %9) #9
  %67 = load %struct._FcRuleSet*, %struct._FcRuleSet** %40, align 8
  %68 = getelementptr inbounds %struct._FcRuleSet, %struct._FcRuleSet* %67, i64 0, i32 5, i64 0
  %69 = load %struct._FcPtrList*, %struct._FcPtrList** %68, align 8
  %70 = call i32 @FcPtrListIterIsValid(%struct._FcPtrList* %69, %struct._FcPtrListIter* nonnull %9) #9
  %71 = icmp eq i32 %70, 0
  br i1 %71, label %82, label %72

72:                                               ; preds = %60
  %73 = load %struct._FcConfig*, %struct._FcConfig** %38, align 8
  %74 = getelementptr inbounds %struct._FcConfig, %struct._FcConfig* %73, i64 0, i32 5, i64 0
  %75 = load %struct._FcPtrList*, %struct._FcPtrList** %74, align 8
  call void @FcPtrListIterInitAtLast(%struct._FcPtrList* %75, %struct._FcPtrListIter* nonnull %9) #9
  %76 = load %struct._FcRuleSet*, %struct._FcRuleSet** %40, align 8
  call void @FcRuleSetReference(%struct._FcRuleSet* %76) #9
  %77 = load %struct._FcConfig*, %struct._FcConfig** %38, align 8
  %78 = getelementptr inbounds %struct._FcConfig, %struct._FcConfig* %77, i64 0, i32 5, i64 0
  %79 = load %struct._FcPtrList*, %struct._FcPtrList** %78, align 8
  %80 = load i8*, i8** %62, align 8
  %81 = call i32 @FcPtrListIterAdd(%struct._FcPtrList* %79, %struct._FcPtrListIter* nonnull %9, i8* %80) #9
  br label %82

82:                                               ; preds = %60, %72
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %61) #9
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %61) #9
  %83 = bitcast %struct._FcPtrListIter* %9 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %83, i8 -86, i64 24, i1 false)
  %84 = load %struct._FcRuleSet*, %struct._FcRuleSet** %40, align 8
  %85 = getelementptr inbounds %struct._FcRuleSet, %struct._FcRuleSet* %84, i64 0, i32 5, i64 1
  %86 = load %struct._FcPtrList*, %struct._FcPtrList** %85, align 8
  call void @FcPtrListIterInit(%struct._FcPtrList* %86, %struct._FcPtrListIter* nonnull %9) #9
  %87 = load %struct._FcRuleSet*, %struct._FcRuleSet** %40, align 8
  %88 = getelementptr inbounds %struct._FcRuleSet, %struct._FcRuleSet* %87, i64 0, i32 5, i64 1
  %89 = load %struct._FcPtrList*, %struct._FcPtrList** %88, align 8
  %90 = call i32 @FcPtrListIterIsValid(%struct._FcPtrList* %89, %struct._FcPtrListIter* nonnull %9) #9
  %91 = icmp eq i32 %90, 0
  br i1 %91, label %141, label %131

92:                                               ; preds = %58, %161
  %93 = phi i8** [ %59, %58 ], [ %62, %161 ]
  %94 = load %struct._FcConfig*, %struct._FcConfig** %38, align 8
  %95 = getelementptr inbounds %struct._FcConfig, %struct._FcConfig* %94, i64 0, i32 18
  %96 = load %struct._FcPtrList*, %struct._FcPtrList** %95, align 8
  call void @FcPtrListIterInitAtLast(%struct._FcPtrList* %96, %struct._FcPtrListIter* nonnull %7) #9
  %97 = load %struct._FcRuleSet*, %struct._FcRuleSet** %40, align 8
  call void @FcRuleSetReference(%struct._FcRuleSet* %97) #9
  %98 = load %struct._FcConfig*, %struct._FcConfig** %38, align 8
  %99 = getelementptr inbounds %struct._FcConfig, %struct._FcConfig* %98, i64 0, i32 18
  %100 = load %struct._FcPtrList*, %struct._FcPtrList** %99, align 8
  %101 = load i8*, i8** %93, align 8
  %102 = call i32 @FcPtrListIterAdd(%struct._FcPtrList* %100, %struct._FcPtrListIter* nonnull %7, i8* %101) #9
  br label %103

103:                                              ; preds = %92, %50
  %104 = phi i32 [ 1, %50 ], [ %57, %92 ]
  %105 = getelementptr inbounds %struct._FcConfigParse, %struct._FcConfigParse* %6, i64 0, i32 0
  %106 = load %struct._FcPStack*, %struct._FcPStack** %105, align 8
  %107 = icmp eq %struct._FcPStack* %106, null
  br i1 %107, label %111, label %108

108:                                              ; preds = %103, %108
  call fastcc void @FcPStackPop(%struct._FcConfigParse* nonnull %6) #9
  %109 = load %struct._FcPStack*, %struct._FcPStack** %105, align 8
  %110 = icmp eq %struct._FcPStack* %109, null
  br i1 %110, label %111, label %108

111:                                              ; preds = %108, %103
  %112 = load %struct._FcRuleSet*, %struct._FcRuleSet** %40, align 8
  call void @FcRuleSetDestroy(%struct._FcRuleSet* %112) #9
  store %struct._FcRuleSet* null, %struct._FcRuleSet** %40, align 8
  call void @xmlFreeParserCtxt(%struct._xmlParserCtxt* nonnull %32) #9
  br label %113

113:                                              ; preds = %24, %111
  %114 = phi i32 [ %104, %111 ], [ 1, %24 ]
  %115 = icmp ne i32 %114, 0
  %116 = icmp ne i32 %3, 0
  %117 = and i1 %116, %115
  br i1 %117, label %118, label %121

118:                                              ; preds = %113
  %119 = icmp eq i32 %4, 0
  %120 = select i1 %119, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.8, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.7, i64 0, i64 0)
  call void (%struct._FcConfigParse*, i32, i8*, ...) @FcConfigMessage(%struct._FcConfigParse* null, i32 2, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.26, i64 0, i64 0), i8* %120, i8* %1)
  br label %129

121:                                              ; preds = %113
  %122 = load i32, i32* @FcDebugVal, align 4
  %123 = and i32 %122, 1024
  %124 = icmp eq i32 %123, 0
  br i1 %124, label %129, label %125

125:                                              ; preds = %121
  %126 = icmp eq i32 %4, 0
  %127 = select i1 %126, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.24, i64 0, i64 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.23, i64 0, i64 0)
  %128 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.27, i64 0, i64 0), i8* %127, i8* %1)
  br label %129

129:                                              ; preds = %125, %121, %5, %118
  %130 = phi i32 [ 0, %118 ], [ 0, %5 ], [ 1, %121 ], [ 1, %125 ]
  call void @llvm.lifetime.end.p0i8(i64 256, i8* nonnull %12) #9
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %11) #9
  call void @llvm.lifetime.end.p0i8(i64 4560, i8* nonnull %10) #9
  ret i32 %130

131:                                              ; preds = %82
  %132 = load %struct._FcConfig*, %struct._FcConfig** %38, align 8
  %133 = getelementptr inbounds %struct._FcConfig, %struct._FcConfig* %132, i64 0, i32 5, i64 1
  %134 = load %struct._FcPtrList*, %struct._FcPtrList** %133, align 8
  call void @FcPtrListIterInitAtLast(%struct._FcPtrList* %134, %struct._FcPtrListIter* nonnull %9) #9
  %135 = load %struct._FcRuleSet*, %struct._FcRuleSet** %40, align 8
  call void @FcRuleSetReference(%struct._FcRuleSet* %135) #9
  %136 = load %struct._FcConfig*, %struct._FcConfig** %38, align 8
  %137 = getelementptr inbounds %struct._FcConfig, %struct._FcConfig* %136, i64 0, i32 5, i64 1
  %138 = load %struct._FcPtrList*, %struct._FcPtrList** %137, align 8
  %139 = load i8*, i8** %62, align 8
  %140 = call i32 @FcPtrListIterAdd(%struct._FcPtrList* %138, %struct._FcPtrListIter* nonnull %9, i8* %139) #9
  br label %141

141:                                              ; preds = %131, %82
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %61) #9
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %61) #9
  %142 = bitcast %struct._FcPtrListIter* %9 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %142, i8 -86, i64 24, i1 false)
  %143 = load %struct._FcRuleSet*, %struct._FcRuleSet** %40, align 8
  %144 = getelementptr inbounds %struct._FcRuleSet, %struct._FcRuleSet* %143, i64 0, i32 5, i64 2
  %145 = load %struct._FcPtrList*, %struct._FcPtrList** %144, align 8
  call void @FcPtrListIterInit(%struct._FcPtrList* %145, %struct._FcPtrListIter* nonnull %9) #9
  %146 = load %struct._FcRuleSet*, %struct._FcRuleSet** %40, align 8
  %147 = getelementptr inbounds %struct._FcRuleSet, %struct._FcRuleSet* %146, i64 0, i32 5, i64 2
  %148 = load %struct._FcPtrList*, %struct._FcPtrList** %147, align 8
  %149 = call i32 @FcPtrListIterIsValid(%struct._FcPtrList* %148, %struct._FcPtrListIter* nonnull %9) #9
  %150 = icmp eq i32 %149, 0
  br i1 %150, label %161, label %151

151:                                              ; preds = %141
  %152 = load %struct._FcConfig*, %struct._FcConfig** %38, align 8
  %153 = getelementptr inbounds %struct._FcConfig, %struct._FcConfig* %152, i64 0, i32 5, i64 2
  %154 = load %struct._FcPtrList*, %struct._FcPtrList** %153, align 8
  call void @FcPtrListIterInitAtLast(%struct._FcPtrList* %154, %struct._FcPtrListIter* nonnull %9) #9
  %155 = load %struct._FcRuleSet*, %struct._FcRuleSet** %40, align 8
  call void @FcRuleSetReference(%struct._FcRuleSet* %155) #9
  %156 = load %struct._FcConfig*, %struct._FcConfig** %38, align 8
  %157 = getelementptr inbounds %struct._FcConfig, %struct._FcConfig* %156, i64 0, i32 5, i64 2
  %158 = load %struct._FcPtrList*, %struct._FcPtrList** %157, align 8
  %159 = load i8*, i8** %62, align 8
  %160 = call i32 @FcPtrListIterAdd(%struct._FcPtrList* %158, %struct._FcPtrListIter* nonnull %9, i8* %159) #9
  br label %161

161:                                              ; preds = %151, %141
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %61) #9
  br label %92
}

declare hidden void @IA__FcRangeDestroy(%struct._FcRange*) local_unnamed_addr #3

declare hidden void @IA__FcCharSetDestroy(%struct._FcCharSet*) local_unnamed_addr #3

declare hidden void @IA__FcLangSetDestroy(%struct._FcLangSet*) local_unnamed_addr #3

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #2

declare hidden void @FcStrBufInit(%struct._FcStrBuf*, i8*, i32) local_unnamed_addr #3

declare hidden i8* @IA__FcConfigGetFilename(%struct._FcConfig*, i8*) local_unnamed_addr #3

declare hidden i32 @FcStrBufString(%struct._FcStrBuf*, i8*) local_unnamed_addr #3

declare hidden i8* @FcConfigRealFilename(%struct._FcConfig*, i8*) local_unnamed_addr #3

declare hidden i32 @IA__FcStrSetMember(%struct._FcStrSet*, i8*) local_unnamed_addr #3

declare hidden void @IA__FcStrFree(i8*) local_unnamed_addr #3

declare hidden i32 @IA__FcStrSetAdd(%struct._FcStrSet*, i8*) local_unnamed_addr #3

declare hidden i32 @IA__FcFileIsDir(i8*) local_unnamed_addr #3

declare hidden i32 @FcOpen(i8*, i32, ...) local_unnamed_addr #3

; Function Attrs: nofree
declare i64 @read(i32, i8* nocapture, i64) local_unnamed_addr #4

; Function Attrs: nounwind readnone
declare i32* @__errno_location() local_unnamed_addr #5

; Function Attrs: nounwind
declare i8* @strerror_r(i32, i8*, i64) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define internal void @FcConfigMessage(%struct._FcConfigParse*, i32, i8* nocapture readonly, ...) unnamed_addr #0 {
  %4 = alloca [1 x %struct.__va_list_tag], align 16
  %5 = bitcast [1 x %struct.__va_list_tag]* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %5) #9
  %6 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %4, i64 0, i64 0
  %7 = bitcast [1 x %struct.__va_list_tag]* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %7, i8 -86, i64 24, i1 false)
  call void @llvm.va_start(i8* nonnull %5)
  %8 = icmp ult i32 %1, 3
  br i1 %8, label %9, label %13

9:                                                ; preds = %3
  %10 = sext i32 %1 to i64
  %11 = getelementptr inbounds [3 x i8*], [3 x i8*]* @switch.table.FcConfigMessage, i64 0, i64 %10
  %12 = load i8*, i8** %11, align 8
  br label %13

13:                                               ; preds = %9, %3
  %14 = phi i8* [ getelementptr inbounds ([8 x i8], [8 x i8]* @.str.14, i64 0, i64 0), %3 ], [ %12, %9 ]
  %15 = icmp eq %struct._FcConfigParse* %0, null
  br i1 %15, label %33, label %16

16:                                               ; preds = %13
  %17 = getelementptr inbounds %struct._FcConfigParse, %struct._FcConfigParse* %0, i64 0, i32 3
  %18 = load i8*, i8** %17, align 8
  %19 = icmp eq i8* %18, null
  %20 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %21 = getelementptr inbounds %struct._FcConfigParse, %struct._FcConfigParse* %0, i64 0, i32 6
  %22 = bitcast %struct._xmlParserCtxt** %21 to i8**
  %23 = load i8*, i8** %22, align 8
  %24 = call i32 @xmlSAX2GetLineNumber(i8* %23) #9
  br i1 %19, label %27, label %25

25:                                               ; preds = %16
  %26 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %20, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.18, i64 0, i64 0), i8* %14, i8* nonnull %18, i32 %24) #14
  br label %29

27:                                               ; preds = %16
  %28 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %20, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.19, i64 0, i64 0), i8* %14, i32 %24) #14
  br label %29

29:                                               ; preds = %27, %25
  %30 = icmp ugt i32 %1, 1
  br i1 %30, label %31, label %36

31:                                               ; preds = %29
  %32 = getelementptr inbounds %struct._FcConfigParse, %struct._FcConfigParse* %0, i64 0, i32 2
  store i32 1, i32* %32, align 8
  br label %36

33:                                               ; preds = %13
  %34 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %35 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %34, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.20, i64 0, i64 0), i8* %14) #14
  br label %36

36:                                               ; preds = %29, %31, %33
  %37 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %38 = call i32 @vfprintf(%struct._IO_FILE* %37, i8* %2, %struct.__va_list_tag* nonnull %6) #14
  %39 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %40 = call i32 @fputc(i32 10, %struct._IO_FILE* %39) #14
  call void @llvm.va_end(i8* nonnull %5)
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %5) #9
  ret void
}

declare i32 @close(i32) local_unnamed_addr #3

declare hidden i32 @FcStrBufData(%struct._FcStrBuf*, i8*, i32) local_unnamed_addr #3

declare hidden i8* @FcStrBufDoneStatic(%struct._FcStrBuf*) local_unnamed_addr #3

declare hidden void @FcStrBufDestroy(%struct._FcStrBuf*) local_unnamed_addr #3

; Function Attrs: nofree nounwind
declare noalias %struct.__dirstream* @opendir(i8* nocapture readonly) local_unnamed_addr #6

; Function Attrs: nofree nounwind
declare noalias i8* @malloc(i64) local_unnamed_addr #6

; Function Attrs: argmemonly nofree nounwind readonly
declare i64 @strlen(i8* nocapture) local_unnamed_addr #7

; Function Attrs: nofree nounwind
declare i8* @strcpy(i8* returned, i8* nocapture readonly) local_unnamed_addr #6

declare hidden %struct._FcStrSet* @FcStrSetCreateEx(i32) local_unnamed_addr #3

; Function Attrs: nofree nounwind
declare i32 @printf(i8* nocapture readonly, ...) local_unnamed_addr #6

declare hidden i32 @FcConfigAddConfigDir(%struct._FcConfig*, i8*) local_unnamed_addr #3

declare %struct.dirent* @readdir64(%struct.__dirstream*) local_unnamed_addr #3

; Function Attrs: nofree nounwind readonly
declare i32 @strcmp(i8* nocapture, i8* nocapture) local_unnamed_addr #8

; Function Attrs: nofree
declare void @qsort(i8*, i64, i64, i32 (i8*, i8*)* nocapture) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define internal i32 @FcSortCmpStr(i8* nocapture readonly, i8* nocapture readonly) #0 {
  %3 = bitcast i8* %0 to i8**
  %4 = load i8*, i8** %3, align 8
  %5 = bitcast i8* %1 to i8**
  %6 = load i8*, i8** %5, align 8
  %7 = tail call i32 @IA__FcStrCmp(i8* %4, i8* %6) #9
  ret i32 %7
}

declare hidden void @IA__FcStrSetDestroy(%struct._FcStrSet*) local_unnamed_addr #3

; Function Attrs: nofree nounwind
declare i32 @closedir(%struct.__dirstream* nocapture) local_unnamed_addr #6

declare hidden i32 @IA__FcStrCmp(i8*, i8*) local_unnamed_addr #3

; Function Attrs: nounwind
declare void @llvm.va_start(i8*) #9

; Function Attrs: nofree nounwind
declare i32 @fprintf(%struct._IO_FILE* nocapture, i8* nocapture readonly, ...) local_unnamed_addr #6

declare i32 @xmlSAX2GetLineNumber(i8*) local_unnamed_addr #3

; Function Attrs: nofree nounwind
declare i32 @vfprintf(%struct._IO_FILE* nocapture, i8* nocapture readonly, %struct.__va_list_tag*) local_unnamed_addr #6

; Function Attrs: nounwind
declare void @llvm.va_end(i8*) #9

; Function Attrs: nounwind ssp uwtable
define internal void @FcInternalSubsetDecl(i8*, i8*, i8* nocapture readnone, i8* nocapture readnone) #0 {
  %5 = tail call i32 @strcmp(i8* %1, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.28, i64 0, i64 0)) #12
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %9, label %7

7:                                                ; preds = %4
  %8 = bitcast i8* %0 to %struct._FcConfigParse*
  tail call void (%struct._FcConfigParse*, i32, i8*, ...) @FcConfigMessage(%struct._FcConfigParse* %8, i32 2, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.29, i64 0, i64 0), i8* %1) #9
  br label %9

9:                                                ; preds = %4, %7
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @FcExternalSubsetDecl(i8*, i8*, i8* nocapture readnone, i8* nocapture readnone) #0 {
  %5 = tail call i32 @strcmp(i8* %1, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.28, i64 0, i64 0)) #12
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %9, label %7

7:                                                ; preds = %4
  %8 = bitcast i8* %0 to %struct._FcConfigParse*
  tail call void (%struct._FcConfigParse*, i32, i8*, ...) @FcConfigMessage(%struct._FcConfigParse* %8, i32 2, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.29, i64 0, i64 0), i8* %1) #9
  br label %9

9:                                                ; preds = %4, %7
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @FcStartElement(i8*, i8*, i8** readonly) #0 {
  %4 = bitcast i8* %0 to %struct._FcConfigParse*
  br label %10

5:                                                ; preds = %10
  %6 = icmp eq i64 %15, 54
  br i1 %6, label %7, label %10

7:                                                ; preds = %5
  %8 = tail call i32 @strncmp(i8* %1, i8* nonnull getelementptr inbounds ([5 x i8], [5 x i8]* @.str.32, i64 0, i64 0), i64 4) #12
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %21, label %20

10:                                               ; preds = %5, %3
  %11 = phi i64 [ 0, %3 ], [ %15, %5 ]
  %12 = getelementptr inbounds [54 x %struct.anon.2], [54 x %struct.anon.2]* @fcElementMap, i64 0, i64 %11, i32 0, i64 0
  %13 = tail call i32 @strcmp(i8* %1, i8* %12) #12
  %14 = icmp eq i32 %13, 0
  %15 = add nuw nsw i64 %11, 1
  br i1 %14, label %16, label %5

16:                                               ; preds = %10
  %17 = and i64 %11, 4294967295
  %18 = getelementptr inbounds [54 x %struct.anon.2], [54 x %struct.anon.2]* @fcElementMap, i64 0, i64 %17, i32 1
  %19 = load i32, i32* %18, align 4
  br label %21

20:                                               ; preds = %7
  tail call void (%struct._FcConfigParse*, i32, i8*, ...) @FcConfigMessage(%struct._FcConfigParse* %4, i32 1, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.30, i64 0, i64 0), i8* %1)
  br label %21

21:                                               ; preds = %16, %7, %20
  %22 = phi i32 [ 55, %20 ], [ %19, %16 ], [ 0, %7 ]
  %23 = getelementptr inbounds i8, i8* %0, i64 56
  %24 = bitcast i8* %23 to i32*
  %25 = load i32, i32* %24, align 8
  %26 = icmp ult i32 %25, 8
  br i1 %26, label %27, label %31

27:                                               ; preds = %21
  %28 = zext i32 %25 to i64
  %29 = add nuw nsw i32 %25, 1
  store i32 %29, i32* %24, align 8
  %30 = getelementptr inbounds %struct._FcConfigParse, %struct._FcConfigParse* %4, i64 0, i32 8, i64 %28
  br label %35

31:                                               ; preds = %21
  %32 = tail call noalias i8* @malloc(i64 304) #9
  %33 = bitcast i8* %32 to %struct._FcPStack*
  %34 = icmp eq i8* %32, null
  br i1 %34, label %101, label %35

35:                                               ; preds = %31, %27
  %36 = phi %struct._FcPStack* [ %30, %27 ], [ %33, %31 ]
  %37 = bitcast i8* %0 to %struct._FcPStack**
  %38 = bitcast i8* %0 to i64*
  %39 = load i64, i64* %38, align 8
  %40 = bitcast %struct._FcPStack* %36 to i64*
  store i64 %39, i64* %40, align 8
  %41 = getelementptr inbounds %struct._FcPStack, %struct._FcPStack* %36, i64 0, i32 1
  store i32 %22, i32* %41, align 8
  %42 = getelementptr inbounds %struct._FcPStack, %struct._FcPStack* %36, i64 0, i32 4, i64 0
  %43 = icmp eq i8** %2, null
  br i1 %43, label %97, label %44

44:                                               ; preds = %35
  %45 = load i8*, i8** %2, align 8
  %46 = icmp eq i8* %45, null
  br i1 %46, label %97, label %47

47:                                               ; preds = %44, %47
  %48 = phi i64 [ %54, %47 ], [ 0, %44 ]
  %49 = phi i8* [ %58, %47 ], [ %45, %44 ]
  %50 = phi i64 [ %56, %47 ], [ 0, %44 ]
  %51 = tail call i64 @strlen(i8* nonnull %49) #12
  %52 = add nsw i64 %50, 1
  %53 = add i64 %52, %51
  %54 = add nuw i64 %48, 1
  %55 = shl i64 %53, 32
  %56 = ashr exact i64 %55, 32
  %57 = getelementptr inbounds i8*, i8** %2, i64 %54
  %58 = load i8*, i8** %57, align 8
  %59 = icmp eq i8* %58, null
  br i1 %59, label %60, label %47

60:                                               ; preds = %47
  %61 = trunc i64 %54 to i32
  %62 = icmp eq i32 %61, 0
  br i1 %62, label %97, label %63

63:                                               ; preds = %60
  %64 = add i64 %48, 2
  %65 = and i64 %64, 4294967295
  %66 = shl nuw nsw i64 %65, 3
  %67 = add nsw i64 %56, %66
  %68 = trunc i64 %67 to i32
  %69 = icmp slt i32 %68, 129
  br i1 %69, label %77, label %70

70:                                               ; preds = %63
  %71 = shl i64 %67, 32
  %72 = ashr exact i64 %71, 32
  %73 = tail call noalias i8* @malloc(i64 %72) #9
  %74 = bitcast i8* %73 to i8**
  %75 = icmp eq i8* %73, null
  br i1 %75, label %76, label %77

76:                                               ; preds = %70
  tail call void (%struct._FcConfigParse*, i32, i8*, ...) @FcConfigMessage(%struct._FcConfigParse* null, i32 2, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.31, i64 0, i64 0)) #9
  br label %97

77:                                               ; preds = %70, %63
  %78 = phi i8** [ %74, %70 ], [ %42, %63 ]
  %79 = getelementptr inbounds i8*, i8** %78, i64 %65
  %80 = bitcast i8** %79 to i8*
  br label %81

81:                                               ; preds = %81, %77
  %82 = phi i64 [ 0, %77 ], [ %91, %81 ]
  %83 = phi i8** [ %78, %77 ], [ %95, %81 ]
  %84 = phi i8** [ %2, %77 ], [ %92, %81 ]
  %85 = phi i8* [ %80, %77 ], [ %90, %81 ]
  store i8* %85, i8** %83, align 8
  %86 = load i8*, i8** %84, align 8
  %87 = tail call i8* @strcpy(i8* %85, i8* %86) #9
  %88 = tail call i64 @strlen(i8* %85) #12
  %89 = add i64 %88, 1
  %90 = getelementptr inbounds i8, i8* %85, i64 %89
  %91 = add nuw i64 %82, 1
  %92 = getelementptr inbounds i8*, i8** %2, i64 %91
  %93 = load i8*, i8** %92, align 8
  %94 = icmp eq i8* %93, null
  %95 = getelementptr inbounds i8*, i8** %78, i64 %91
  br i1 %94, label %96, label %81

96:                                               ; preds = %81
  store i8* null, i8** %95, align 8
  br label %97

97:                                               ; preds = %35, %44, %60, %76, %96
  %98 = phi i8** [ %78, %96 ], [ null, %76 ], [ null, %35 ], [ null, %60 ], [ null, %44 ]
  %99 = getelementptr inbounds %struct._FcPStack, %struct._FcPStack* %36, i64 0, i32 2
  store i8** %98, i8*** %99, align 8
  %100 = getelementptr inbounds %struct._FcPStack, %struct._FcPStack* %36, i64 0, i32 3
  tail call void @FcStrBufInit(%struct._FcStrBuf* %100, i8* null, i32 0) #9
  store %struct._FcPStack* %36, %struct._FcPStack** %37, align 8
  br label %102

101:                                              ; preds = %31
  tail call void (%struct._FcConfigParse*, i32, i8*, ...) @FcConfigMessage(%struct._FcConfigParse* %4, i32 2, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.31, i64 0, i64 0))
  br label %102

102:                                              ; preds = %97, %101
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @FcEndElement(i8*, i8* nocapture readnone) #0 {
  %3 = alloca %struct._FcValue, align 8
  %4 = alloca i32, align 4
  %5 = alloca i64, align 8
  %6 = alloca [2 x double], align 16
  %7 = alloca [128 x i8], align 16
  %8 = alloca i8*, align 8
  %9 = alloca i8*, align 8
  %10 = alloca i8*, align 8
  %11 = alloca i32, align 4
  %12 = alloca i32, align 4
  %13 = alloca i32, align 4
  %14 = alloca %struct._FcPtrListIter, align 8
  %15 = bitcast i8* %0 to %struct._FcConfigParse*
  %16 = bitcast i8* %0 to %struct._FcPStack**
  %17 = load %struct._FcPStack*, %struct._FcPStack** %16, align 8
  %18 = icmp eq %struct._FcPStack* %17, null
  br i1 %18, label %3153, label %19

19:                                               ; preds = %2
  %20 = getelementptr inbounds %struct._FcPStack, %struct._FcPStack* %17, i64 0, i32 1
  %21 = load i32, i32* %20, align 8
  switch i32 %21, label %3152 [
    i32 54, label %3151
    i32 53, label %3150
    i32 2, label %22
    i32 3, label %109
    i32 4, label %190
    i32 5, label %198
    i32 52, label %3149
    i32 7, label %476
    i32 8, label %655
    i32 9, label %1049
    i32 10, label %1080
    i32 11, label %1191
    i32 12, label %1203
    i32 13, label %1256
    i32 14, label %1257
    i32 15, label %1258
    i32 16, label %1259
    i32 23, label %1313
    i32 24, label %1535
    i32 25, label %1684
    i32 26, label %1736
    i32 27, label %1848
    i32 28, label %1849
    i32 29, label %1910
    i32 30, label %2034
    i32 31, label %2082
    i32 32, label %2174
    i32 51, label %3148
    i32 18, label %2243
    i32 19, label %2243
    i32 20, label %2310
    i32 21, label %2311
    i32 22, label %2373
    i32 33, label %2514
    i32 34, label %2591
    i32 35, label %2592
    i32 36, label %2629
    i32 37, label %2666
    i32 38, label %2703
    i32 39, label %2740
    i32 40, label %2777
    i32 41, label %2814
    i32 42, label %2851
    i32 43, label %2888
    i32 44, label %2925
    i32 45, label %2962
    i32 46, label %2999
    i32 47, label %3036
    i32 48, label %3073
    i32 49, label %3110
    i32 50, label %3111
  ]

22:                                               ; preds = %19
  %23 = getelementptr inbounds %struct._FcPStack, %struct._FcPStack* %17, i64 0, i32 3
  %24 = tail call i8* @FcStrBufDoneStatic(%struct._FcStrBuf* %23) #9
  %25 = icmp eq i8* %24, null
  br i1 %25, label %26, label %27

26:                                               ; preds = %22
  tail call void (%struct._FcConfigParse*, i32, i8*, ...) @FcConfigMessage(%struct._FcConfigParse* %15, i32 2, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.31, i64 0, i64 0)) #9
  br label %3152

27:                                               ; preds = %22
  %28 = load i8, i8* %24, align 1
  %29 = icmp eq i8 %28, 0
  br i1 %29, label %30, label %31

30:                                               ; preds = %27
  tail call void (%struct._FcConfigParse*, i32, i8*, ...) @FcConfigMessage(%struct._FcConfigParse* %15, i32 1, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.34, i64 0, i64 0)) #9
  br label %3152

31:                                               ; preds = %27
  %32 = load %struct._FcPStack*, %struct._FcPStack** %16, align 8
  %33 = icmp eq %struct._FcPStack* %32, null
  br i1 %33, label %77, label %34

34:                                               ; preds = %31
  %35 = getelementptr inbounds %struct._FcPStack, %struct._FcPStack* %32, i64 0, i32 2
  %36 = load i8**, i8*** %35, align 8
  %37 = icmp eq i8** %36, null
  br i1 %37, label %77, label %38

38:                                               ; preds = %34
  %39 = load i8*, i8** %36, align 8
  %40 = icmp eq i8* %39, null
  br i1 %40, label %77, label %41

41:                                               ; preds = %38, %50
  %42 = phi i8* [ %52, %50 ], [ %39, %38 ]
  %43 = phi i8** [ %51, %50 ], [ %36, %38 ]
  %44 = tail call i32 @strcmp(i8* nonnull %42, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.35, i64 0, i64 0)) #12
  %45 = icmp eq i32 %44, 0
  br i1 %45, label %46, label %50

46:                                               ; preds = %41
  store i8 0, i8* %42, align 1
  %47 = getelementptr inbounds i8*, i8** %43, i64 1
  %48 = load i8*, i8** %47, align 8
  %49 = load %struct._FcPStack*, %struct._FcPStack** %16, align 8
  br label %54

50:                                               ; preds = %41
  %51 = getelementptr inbounds i8*, i8** %43, i64 2
  %52 = load i8*, i8** %51, align 8
  %53 = icmp eq i8* %52, null
  br i1 %53, label %54, label %41

54:                                               ; preds = %50, %46
  %55 = phi %struct._FcPStack* [ %49, %46 ], [ %32, %50 ]
  %56 = phi i8* [ %48, %46 ], [ null, %50 ]
  %57 = icmp eq %struct._FcPStack* %55, null
  br i1 %57, label %77, label %58

58:                                               ; preds = %54
  %59 = getelementptr inbounds %struct._FcPStack, %struct._FcPStack* %55, i64 0, i32 2
  %60 = load i8**, i8*** %59, align 8
  %61 = icmp eq i8** %60, null
  br i1 %61, label %77, label %62

62:                                               ; preds = %58
  %63 = load i8*, i8** %60, align 8
  %64 = icmp eq i8* %63, null
  br i1 %64, label %77, label %65

65:                                               ; preds = %62, %73
  %66 = phi i8* [ %75, %73 ], [ %63, %62 ]
  %67 = phi i8** [ %74, %73 ], [ %60, %62 ]
  %68 = tail call i32 @strcmp(i8* nonnull %66, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.36, i64 0, i64 0)) #12
  %69 = icmp eq i32 %68, 0
  br i1 %69, label %70, label %73

70:                                               ; preds = %65
  store i8 0, i8* %66, align 1
  %71 = getelementptr inbounds i8*, i8** %67, i64 1
  %72 = load i8*, i8** %71, align 8
  br label %77

73:                                               ; preds = %65
  %74 = getelementptr inbounds i8*, i8** %67, i64 2
  %75 = load i8*, i8** %74, align 8
  %76 = icmp eq i8* %75, null
  br i1 %76, label %77, label %65

77:                                               ; preds = %73, %38, %34, %70, %62, %58, %54, %31
  %78 = phi i8* [ %56, %70 ], [ %56, %54 ], [ %56, %58 ], [ %56, %62 ], [ null, %31 ], [ null, %34 ], [ null, %38 ], [ %56, %73 ]
  %79 = phi i8* [ %72, %70 ], [ null, %54 ], [ null, %58 ], [ null, %62 ], [ null, %31 ], [ null, %34 ], [ null, %38 ], [ null, %73 ]
  %80 = tail call fastcc i8* @_get_real_path_from_prefix(%struct._FcConfigParse* %15, i8* nonnull %24, i8* %78) #9
  %81 = icmp eq i8* %80, null
  br i1 %81, label %106, label %82

82:                                               ; preds = %77
  %83 = load i8, i8* %80, align 1
  %84 = icmp eq i8 %83, 0
  br i1 %84, label %103, label %85

85:                                               ; preds = %82
  %86 = getelementptr inbounds i8, i8* %0, i64 4552
  %87 = bitcast i8* %86 to i32*
  %88 = load i32, i32* %87, align 8
  %89 = icmp eq i32 %88, 0
  br i1 %89, label %90, label %103

90:                                               ; preds = %85
  %91 = tail call i32 @FcStrUsesHome(i8* nonnull %80) #9
  %92 = icmp eq i32 %91, 0
  br i1 %92, label %96, label %93

93:                                               ; preds = %90
  %94 = tail call i8* @IA__FcConfigHome() #9
  %95 = icmp eq i8* %94, null
  br i1 %95, label %103, label %96

96:                                               ; preds = %93, %90
  %97 = getelementptr inbounds i8, i8* %0, i64 32
  %98 = bitcast i8* %97 to %struct._FcConfig**
  %99 = load %struct._FcConfig*, %struct._FcConfig** %98, align 8
  %100 = tail call i32 @FcConfigAddFontDir(%struct._FcConfig* %99, i8* nonnull %80, i8* null, i8* %79) #9
  %101 = icmp eq i32 %100, 0
  br i1 %101, label %102, label %103

102:                                              ; preds = %96
  tail call void (%struct._FcConfigParse*, i32, i8*, ...) @FcConfigMessage(%struct._FcConfigParse* %15, i32 2, i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.37, i64 0, i64 0), i8* nonnull %80) #9
  br label %103

103:                                              ; preds = %102, %96, %93, %85, %82
  %104 = load %struct._FcPStack*, %struct._FcPStack** %16, align 8
  %105 = getelementptr inbounds %struct._FcPStack, %struct._FcPStack* %104, i64 0, i32 3
  tail call void @FcStrBufDestroy(%struct._FcStrBuf* %105) #9
  tail call void @IA__FcStrFree(i8* nonnull %80) #9
  br label %3152

106:                                              ; preds = %77
  %107 = load %struct._FcPStack*, %struct._FcPStack** %16, align 8
  %108 = getelementptr inbounds %struct._FcPStack, %struct._FcPStack* %107, i64 0, i32 3
  tail call void @FcStrBufDestroy(%struct._FcStrBuf* %108) #9
  br label %3152

109:                                              ; preds = %19
  %110 = getelementptr inbounds %struct._FcPStack, %struct._FcPStack* %17, i64 0, i32 2
  %111 = load i8**, i8*** %110, align 8
  %112 = icmp eq i8** %111, null
  br i1 %112, label %135, label %113

113:                                              ; preds = %109
  %114 = load i8*, i8** %111, align 8
  %115 = icmp eq i8* %114, null
  br i1 %115, label %135, label %116

116:                                              ; preds = %113, %121
  %117 = phi i8* [ %123, %121 ], [ %114, %113 ]
  %118 = phi i8** [ %122, %121 ], [ %111, %113 ]
  %119 = tail call i32 @strcmp(i8* nonnull %117, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.35, i64 0, i64 0)) #12
  %120 = icmp eq i32 %119, 0
  br i1 %120, label %125, label %121

121:                                              ; preds = %116
  %122 = getelementptr inbounds i8*, i8** %118, i64 2
  %123 = load i8*, i8** %122, align 8
  %124 = icmp eq i8* %123, null
  br i1 %124, label %135, label %116

125:                                              ; preds = %116
  store i8 0, i8* %117, align 1
  %126 = getelementptr inbounds i8*, i8** %118, i64 1
  %127 = load i8*, i8** %126, align 8
  %128 = icmp eq i8* %127, null
  br i1 %128, label %135, label %129

129:                                              ; preds = %125
  %130 = tail call i32 @IA__FcStrCmp(i8* nonnull %127, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.38, i64 0, i64 0)) #9
  %131 = icmp eq i32 %130, 0
  br i1 %131, label %132, label %135

132:                                              ; preds = %129
  %133 = tail call i8* @FcConfigXdgCacheHome() #9
  %134 = icmp eq i8* %133, null
  br i1 %134, label %3152, label %135

135:                                              ; preds = %121, %132, %129, %125, %113, %109
  %136 = phi i8* [ %133, %132 ], [ null, %129 ], [ null, %125 ], [ null, %109 ], [ null, %113 ], [ null, %121 ]
  %137 = load %struct._FcPStack*, %struct._FcPStack** %16, align 8
  %138 = getelementptr inbounds %struct._FcPStack, %struct._FcPStack* %137, i64 0, i32 3
  %139 = tail call i8* @FcStrBufDone(%struct._FcStrBuf* %138) #9
  %140 = icmp eq i8* %139, null
  br i1 %140, label %186, label %141

141:                                              ; preds = %135
  %142 = load i8, i8* %139, align 1
  %143 = icmp eq i8 %142, 0
  br i1 %143, label %144, label %145

144:                                              ; preds = %141
  tail call void (%struct._FcConfigParse*, i32, i8*, ...) @FcConfigMessage(%struct._FcConfigParse* %15, i32 1, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.43, i64 0, i64 0)) #9
  br label %3152

145:                                              ; preds = %141
  %146 = icmp eq i8* %136, null
  br i1 %146, label %163, label %147

147:                                              ; preds = %145
  %148 = tail call i64 @strlen(i8* nonnull %136) #12
  %149 = tail call i64 @strlen(i8* nonnull %139) #12
  %150 = add i64 %148, 1
  %151 = add i64 %150, %149
  %152 = add i64 %151, 1
  %153 = tail call i8* @realloc(i8* nonnull %136, i64 %152) #9
  %154 = icmp eq i8* %153, null
  br i1 %154, label %155, label %156

155:                                              ; preds = %147
  tail call void (%struct._FcConfigParse*, i32, i8*, ...) @FcConfigMessage(%struct._FcConfigParse* %15, i32 2, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.31, i64 0, i64 0)) #9
  tail call void @IA__FcStrFree(i8* nonnull %136) #9
  br label %188

156:                                              ; preds = %147
  %157 = getelementptr inbounds i8, i8* %153, i64 %148
  store i8 47, i8* %157, align 1
  %158 = getelementptr inbounds i8, i8* %153, i64 %150
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %158, i8* nonnull align 1 %139, i64 %149, i1 false) #9
  %159 = getelementptr inbounds i8, i8* %153, i64 %151
  store i8 0, i8* %159, align 1
  tail call void @IA__FcStrFree(i8* nonnull %139) #9
  %160 = load i8, i8* %153, align 1
  %161 = icmp eq i8 %160, 0
  br i1 %161, label %162, label %163

162:                                              ; preds = %156
  tail call void (%struct._FcConfigParse*, i32, i8*, ...) @FcConfigMessage(%struct._FcConfigParse* %15, i32 1, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.43, i64 0, i64 0)) #9
  br label %182

163:                                              ; preds = %156, %145
  %164 = phi i8* [ %153, %156 ], [ %139, %145 ]
  %165 = getelementptr inbounds i8, i8* %0, i64 4552
  %166 = bitcast i8* %165 to i32*
  %167 = load i32, i32* %166, align 8
  %168 = icmp eq i32 %167, 0
  br i1 %168, label %169, label %182

169:                                              ; preds = %163
  %170 = tail call i32 @FcStrUsesHome(i8* nonnull %164) #9
  %171 = icmp eq i32 %170, 0
  br i1 %171, label %175, label %172

172:                                              ; preds = %169
  %173 = tail call i8* @IA__FcConfigHome() #9
  %174 = icmp eq i8* %173, null
  br i1 %174, label %182, label %175

175:                                              ; preds = %172, %169
  %176 = getelementptr inbounds i8, i8* %0, i64 32
  %177 = bitcast i8* %176 to %struct._FcConfig**
  %178 = load %struct._FcConfig*, %struct._FcConfig** %177, align 8
  %179 = tail call i32 @FcConfigAddCacheDir(%struct._FcConfig* %178, i8* nonnull %164) #9
  %180 = icmp eq i32 %179, 0
  br i1 %180, label %181, label %182

181:                                              ; preds = %175
  tail call void (%struct._FcConfigParse*, i32, i8*, ...) @FcConfigMessage(%struct._FcConfigParse* %15, i32 2, i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.44, i64 0, i64 0), i8* nonnull %164) #9
  br label %182

182:                                              ; preds = %181, %175, %172, %163, %162
  %183 = phi i8* [ %164, %172 ], [ %164, %175 ], [ %164, %163 ], [ %164, %181 ], [ %153, %162 ]
  %184 = load %struct._FcPStack*, %struct._FcPStack** %16, align 8
  %185 = getelementptr inbounds %struct._FcPStack, %struct._FcPStack* %184, i64 0, i32 3
  tail call void @FcStrBufDestroy(%struct._FcStrBuf* %185) #9
  br label %188

186:                                              ; preds = %135
  tail call void (%struct._FcConfigParse*, i32, i8*, ...) @FcConfigMessage(%struct._FcConfigParse* %15, i32 2, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.31, i64 0, i64 0)) #9
  %187 = icmp eq i8* %136, null
  br i1 %187, label %3152, label %188

188:                                              ; preds = %186, %182, %155
  %189 = phi i8* [ %136, %186 ], [ %183, %182 ], [ %139, %155 ]
  tail call void @IA__FcStrFree(i8* nonnull %189) #9
  br label %3152

190:                                              ; preds = %19
  %191 = getelementptr inbounds %struct._FcPStack, %struct._FcPStack* %17, i64 0, i32 3
  %192 = tail call i8* @FcStrBufDoneStatic(%struct._FcStrBuf* %191) #9
  %193 = icmp eq i8* %192, null
  br i1 %193, label %194, label %195

194:                                              ; preds = %190
  tail call void (%struct._FcConfigParse*, i32, i8*, ...) @FcConfigMessage(%struct._FcConfigParse* %15, i32 2, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.31, i64 0, i64 0))
  br label %3152

195:                                              ; preds = %190
  %196 = load %struct._FcPStack*, %struct._FcPStack** %16, align 8
  %197 = getelementptr inbounds %struct._FcPStack, %struct._FcPStack* %196, i64 0, i32 3
  tail call void @FcStrBufDestroy(%struct._FcStrBuf* %197) #9
  br label %3152

198:                                              ; preds = %19
  %199 = getelementptr inbounds %struct._FcPStack, %struct._FcPStack* %17, i64 0, i32 3
  %200 = tail call i8* @FcStrBufDoneStatic(%struct._FcStrBuf* %199) #9
  %201 = icmp eq i8* %200, null
  br i1 %201, label %202, label %203

202:                                              ; preds = %198
  tail call void (%struct._FcConfigParse*, i32, i8*, ...) @FcConfigMessage(%struct._FcConfigParse* %15, i32 2, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.31, i64 0, i64 0)) #9
  br label %3152

203:                                              ; preds = %198
  %204 = load %struct._FcPStack*, %struct._FcPStack** %16, align 8
  %205 = icmp eq %struct._FcPStack* %204, null
  br i1 %205, label %341, label %206

206:                                              ; preds = %203
  %207 = getelementptr inbounds %struct._FcPStack, %struct._FcPStack* %204, i64 0, i32 2
  %208 = load i8**, i8*** %207, align 8
  %209 = icmp eq i8** %208, null
  br i1 %209, label %235, label %210

210:                                              ; preds = %206
  %211 = load i8*, i8** %208, align 8
  %212 = icmp eq i8* %211, null
  br i1 %212, label %235, label %213

213:                                              ; preds = %210, %218
  %214 = phi i8* [ %220, %218 ], [ %211, %210 ]
  %215 = phi i8** [ %219, %218 ], [ %208, %210 ]
  %216 = tail call i32 @strcmp(i8* nonnull %214, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.45, i64 0, i64 0)) #12
  %217 = icmp eq i32 %216, 0
  br i1 %217, label %222, label %218

218:                                              ; preds = %213
  %219 = getelementptr inbounds i8*, i8** %215, i64 2
  %220 = load i8*, i8** %219, align 8
  %221 = icmp eq i8* %220, null
  br i1 %221, label %235, label %213

222:                                              ; preds = %213
  store i8 0, i8* %214, align 1
  %223 = getelementptr inbounds i8*, i8** %215, i64 1
  %224 = load i8*, i8** %223, align 8
  %225 = icmp eq i8* %224, null
  br i1 %225, label %235, label %226

226:                                              ; preds = %222
  %227 = bitcast i32* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %227) #9
  store i32 0, i32* %13, align 4
  %228 = call i32 @FcNameBool(i8* nonnull %224, i32* nonnull %13) #9
  %229 = icmp eq i32 %228, 0
  br i1 %229, label %230, label %231

230:                                              ; preds = %226
  call void (%struct._FcConfigParse*, i32, i8*, ...) @FcConfigMessage(%struct._FcConfigParse* %15, i32 1, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.49, i64 0, i64 0), i8* nonnull %224) #9
  br label %231

231:                                              ; preds = %230, %226
  %232 = load i32, i32* %13, align 4
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %227) #9
  %233 = icmp ne i32 %232, 1
  %234 = zext i1 %233 to i32
  br label %235

235:                                              ; preds = %218, %231, %222, %210, %206
  %236 = phi i32 [ 1, %210 ], [ 1, %206 ], [ %234, %231 ], [ 1, %222 ], [ 1, %218 ]
  %237 = load %struct._FcPStack*, %struct._FcPStack** %16, align 8
  %238 = icmp eq %struct._FcPStack* %237, null
  br i1 %238, label %341, label %239

239:                                              ; preds = %235
  %240 = getelementptr inbounds %struct._FcPStack, %struct._FcPStack* %237, i64 0, i32 2
  %241 = load i8**, i8*** %240, align 8
  %242 = icmp eq i8** %241, null
  br i1 %242, label %268, label %243

243:                                              ; preds = %239
  %244 = load i8*, i8** %241, align 8
  %245 = icmp eq i8* %244, null
  br i1 %245, label %268, label %246

246:                                              ; preds = %243, %251
  %247 = phi i8* [ %253, %251 ], [ %244, %243 ]
  %248 = phi i8** [ %252, %251 ], [ %241, %243 ]
  %249 = call i32 @strcmp(i8* nonnull %247, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.46, i64 0, i64 0)) #12
  %250 = icmp eq i32 %249, 0
  br i1 %250, label %255, label %251

251:                                              ; preds = %246
  %252 = getelementptr inbounds i8*, i8** %248, i64 2
  %253 = load i8*, i8** %252, align 8
  %254 = icmp eq i8* %253, null
  br i1 %254, label %268, label %246

255:                                              ; preds = %246
  store i8 0, i8* %247, align 1
  %256 = getelementptr inbounds i8*, i8** %248, i64 1
  %257 = load i8*, i8** %256, align 8
  %258 = icmp eq i8* %257, null
  br i1 %258, label %268, label %259

259:                                              ; preds = %255
  %260 = bitcast i32* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %260) #9
  store i32 0, i32* %12, align 4
  %261 = call i32 @FcNameBool(i8* nonnull %257, i32* nonnull %12) #9
  %262 = icmp eq i32 %261, 0
  br i1 %262, label %263, label %264

263:                                              ; preds = %259
  call void (%struct._FcConfigParse*, i32, i8*, ...) @FcConfigMessage(%struct._FcConfigParse* %15, i32 1, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.49, i64 0, i64 0), i8* nonnull %257) #9
  br label %264

264:                                              ; preds = %263, %259
  %265 = load i32, i32* %12, align 4
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %260) #9
  %266 = icmp eq i32 %265, 1
  %267 = zext i1 %266 to i32
  br label %268

268:                                              ; preds = %251, %264, %255, %243, %239
  %269 = phi i32 [ 0, %243 ], [ 0, %239 ], [ %267, %264 ], [ 0, %255 ], [ 0, %251 ]
  %270 = load %struct._FcPStack*, %struct._FcPStack** %16, align 8
  %271 = icmp eq %struct._FcPStack* %270, null
  br i1 %271, label %341, label %272

272:                                              ; preds = %268
  %273 = getelementptr inbounds %struct._FcPStack, %struct._FcPStack* %270, i64 0, i32 2
  %274 = load i8**, i8*** %273, align 8
  %275 = icmp eq i8** %274, null
  br i1 %275, label %341, label %276

276:                                              ; preds = %272
  %277 = load i8*, i8** %274, align 8
  %278 = icmp eq i8* %277, null
  br i1 %278, label %341, label %279

279:                                              ; preds = %276, %284
  %280 = phi i8* [ %286, %284 ], [ %277, %276 ]
  %281 = phi i8** [ %285, %284 ], [ %274, %276 ]
  %282 = call i32 @strcmp(i8* nonnull %280, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.35, i64 0, i64 0)) #12
  %283 = icmp eq i32 %282, 0
  br i1 %283, label %288, label %284

284:                                              ; preds = %279
  %285 = getelementptr inbounds i8*, i8** %281, i64 2
  %286 = load i8*, i8** %285, align 8
  %287 = icmp eq i8* %286, null
  br i1 %287, label %341, label %279

288:                                              ; preds = %279
  store i8 0, i8* %280, align 1
  %289 = getelementptr inbounds i8*, i8** %281, i64 1
  %290 = load i8*, i8** %289, align 8
  %291 = icmp eq i8* %290, null
  br i1 %291, label %341, label %292

292:                                              ; preds = %288
  %293 = call i32 @IA__FcStrCmp(i8* nonnull %290, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.38, i64 0, i64 0)) #9
  %294 = icmp eq i32 %293, 0
  br i1 %294, label %295, label %341

295:                                              ; preds = %292
  %296 = call i8* @FcConfigXdgConfigHome() #9
  %297 = icmp eq i8* %296, null
  br i1 %297, label %3152, label %298

298:                                              ; preds = %295
  %299 = call i64 @strlen(i8* nonnull %296) #12
  %300 = call i64 @strlen(i8* nonnull %200) #12
  %301 = add i64 %299, 1
  %302 = add i64 %301, %300
  %303 = add i64 %302, 1
  %304 = call i8* @realloc(i8* nonnull %296, i64 %303) #9
  %305 = icmp eq i8* %304, null
  br i1 %305, label %340, label %306

306:                                              ; preds = %298
  %307 = getelementptr inbounds i8, i8* %304, i64 %299
  store i8 47, i8* %307, align 1
  %308 = getelementptr inbounds i8, i8* %304, i64 %301
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %308, i8* nonnull align 1 %200, i64 %300, i1 false) #9
  %309 = getelementptr inbounds i8, i8* %304, i64 %302
  store i8 0, i8* %309, align 1
  %310 = call i32 @IA__FcFileIsDir(i8* nonnull %304) #9
  %311 = icmp eq i32 %310, 0
  br i1 %311, label %323, label %312

312:                                              ; preds = %337, %306
  fence seq_cst
  %313 = load i8*, i8** @__fc_userdir, align 8
  %314 = icmp eq i8* %313, null
  br i1 %314, label %315, label %341

315:                                              ; preds = %312, %320
  %316 = call noalias i8* @strdup(i8* %304) #9
  %317 = ptrtoint i8* %316 to i64
  %318 = cmpxchg i64* bitcast (i8** @__fc_userdir to i64*), i64 0, i64 %317 seq_cst seq_cst
  %319 = extractvalue { i64, i1 } %318, 1
  br i1 %319, label %341, label %320

320:                                              ; preds = %315
  call void @free(i8* %316) #9
  fence seq_cst
  %321 = load i8*, i8** @__fc_userdir, align 8
  %322 = icmp eq i8* %321, null
  br i1 %322, label %315, label %341

323:                                              ; preds = %306
  %324 = call i32 @FcFileIsFile(i8* nonnull %304) #9
  %325 = icmp eq i32 %324, 0
  br i1 %325, label %337, label %326

326:                                              ; preds = %337, %323
  fence seq_cst
  %327 = load i8*, i8** @__fc_userconf, align 8
  %328 = icmp eq i8* %327, null
  br i1 %328, label %329, label %341

329:                                              ; preds = %326, %334
  %330 = call noalias i8* @strdup(i8* %304) #9
  %331 = ptrtoint i8* %330 to i64
  %332 = cmpxchg i64* bitcast (i8** @__fc_userconf to i64*), i64 0, i64 %331 seq_cst seq_cst
  %333 = extractvalue { i64, i1 } %332, 1
  br i1 %333, label %341, label %334

334:                                              ; preds = %329
  call void @free(i8* %330) #9
  fence seq_cst
  %335 = load i8*, i8** @__fc_userconf, align 8
  %336 = icmp eq i8* %335, null
  br i1 %336, label %329, label %341

337:                                              ; preds = %323
  %338 = call i8* @IA__FcStrStr(i8* nonnull %304, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.47, i64 0, i64 0)) #9
  %339 = icmp eq i8* %338, null
  br i1 %339, label %326, label %312

340:                                              ; preds = %298
  call void (%struct._FcConfigParse*, i32, i8*, ...) @FcConfigMessage(%struct._FcConfigParse* %15, i32 2, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.31, i64 0, i64 0)) #9
  br label %443

341:                                              ; preds = %284, %320, %315, %334, %329, %326, %312, %292, %288, %276, %272, %268, %235, %203
  %342 = phi i32 [ %269, %288 ], [ %269, %292 ], [ %269, %276 ], [ %269, %272 ], [ %269, %268 ], [ 0, %235 ], [ 0, %203 ], [ %269, %326 ], [ %269, %312 ], [ %269, %329 ], [ %269, %334 ], [ %269, %315 ], [ %269, %320 ], [ %269, %284 ]
  %343 = phi i32 [ %236, %288 ], [ %236, %292 ], [ %236, %276 ], [ %236, %272 ], [ %236, %268 ], [ %236, %235 ], [ 1, %203 ], [ %236, %326 ], [ %236, %312 ], [ %236, %329 ], [ %236, %334 ], [ %236, %315 ], [ %236, %320 ], [ %236, %284 ]
  %344 = phi i8* [ %200, %288 ], [ %200, %292 ], [ %200, %276 ], [ %200, %272 ], [ %200, %268 ], [ %200, %235 ], [ %200, %203 ], [ %304, %326 ], [ %304, %312 ], [ %304, %329 ], [ %304, %334 ], [ %304, %315 ], [ %304, %320 ], [ %200, %284 ]
  %345 = phi i8* [ null, %288 ], [ null, %292 ], [ null, %276 ], [ null, %272 ], [ null, %268 ], [ null, %235 ], [ null, %203 ], [ %304, %326 ], [ %304, %312 ], [ %304, %329 ], [ %304, %334 ], [ %304, %315 ], [ %304, %320 ], [ null, %284 ]
  %346 = phi i8* [ null, %288 ], [ null, %292 ], [ null, %276 ], [ null, %272 ], [ null, %268 ], [ null, %235 ], [ null, %203 ], [ null, %326 ], [ %313, %312 ], [ null, %329 ], [ null, %334 ], [ %321, %320 ], [ %316, %315 ], [ null, %284 ]
  %347 = phi i8* [ null, %288 ], [ null, %292 ], [ null, %276 ], [ null, %272 ], [ null, %268 ], [ null, %235 ], [ null, %203 ], [ %327, %326 ], [ null, %312 ], [ %335, %334 ], [ %330, %329 ], [ null, %315 ], [ null, %320 ], [ null, %284 ]
  %348 = getelementptr inbounds i8, i8* %0, i64 40
  %349 = bitcast i8* %348 to %struct._FcRuleSet**
  %350 = load %struct._FcRuleSet*, %struct._FcRuleSet** %349, align 8
  %351 = getelementptr inbounds %struct._FcRuleSet, %struct._FcRuleSet* %350, i64 0, i32 1
  %352 = load i8*, i8** %351, align 8
  %353 = call %struct._FcRuleSet* @FcRuleSetCreate(i8* %352) #9
  store %struct._FcRuleSet* %353, %struct._FcRuleSet** %349, align 8
  %354 = getelementptr inbounds %struct._FcRuleSet, %struct._FcRuleSet* %350, i64 0, i32 4
  %355 = load i32, i32* %354, align 8
  call void @FcRuleSetEnable(%struct._FcRuleSet* %353, i32 %355) #9
  %356 = load %struct._FcRuleSet*, %struct._FcRuleSet** %349, align 8
  %357 = getelementptr inbounds %struct._FcRuleSet, %struct._FcRuleSet* %350, i64 0, i32 3
  %358 = load i8*, i8** %357, align 8
  %359 = getelementptr inbounds %struct._FcRuleSet, %struct._FcRuleSet* %350, i64 0, i32 2
  %360 = load i8*, i8** %359, align 8
  call void @FcRuleSetAddDescription(%struct._FcRuleSet* %356, i8* %358, i8* %360) #9
  %361 = bitcast %struct._FcPtrListIter* %14 to i8*
  %362 = getelementptr inbounds i8, i8* %0, i64 32
  %363 = bitcast i8* %362 to %struct._FcConfig**
  %364 = bitcast %struct._FcRuleSet* %350 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %361) #9
  %365 = getelementptr inbounds %struct._FcRuleSet, %struct._FcRuleSet* %350, i64 0, i32 5, i64 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %361, i8 -86, i64 24, i1 false) #9
  %366 = load %struct._FcPtrList*, %struct._FcPtrList** %365, align 8
  call void @FcPtrListIterInit(%struct._FcPtrList* %366, %struct._FcPtrListIter* nonnull %14) #9
  %367 = load %struct._FcPtrList*, %struct._FcPtrList** %365, align 8
  %368 = call i32 @FcPtrListIterIsValid(%struct._FcPtrList* %367, %struct._FcPtrListIter* nonnull %14) #9
  %369 = icmp eq i32 %368, 0
  br i1 %369, label %378, label %370

370:                                              ; preds = %341
  %371 = load %struct._FcConfig*, %struct._FcConfig** %363, align 8
  %372 = getelementptr inbounds %struct._FcConfig, %struct._FcConfig* %371, i64 0, i32 5, i64 0
  %373 = load %struct._FcPtrList*, %struct._FcPtrList** %372, align 8
  call void @FcPtrListIterInitAtLast(%struct._FcPtrList* %373, %struct._FcPtrListIter* nonnull %14) #9
  call void @FcRuleSetReference(%struct._FcRuleSet* %350) #9
  %374 = load %struct._FcConfig*, %struct._FcConfig** %363, align 8
  %375 = getelementptr inbounds %struct._FcConfig, %struct._FcConfig* %374, i64 0, i32 5, i64 0
  %376 = load %struct._FcPtrList*, %struct._FcPtrList** %375, align 8
  %377 = call i32 @FcPtrListIterAdd(%struct._FcPtrList* %376, %struct._FcPtrListIter* nonnull %14, i8* %364) #9
  br label %378

378:                                              ; preds = %370, %341
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %361) #9
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %361) #9
  %379 = getelementptr inbounds %struct._FcRuleSet, %struct._FcRuleSet* %350, i64 0, i32 5, i64 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %361, i8 -86, i64 24, i1 false) #9
  %380 = load %struct._FcPtrList*, %struct._FcPtrList** %379, align 8
  call void @FcPtrListIterInit(%struct._FcPtrList* %380, %struct._FcPtrListIter* nonnull %14) #9
  %381 = load %struct._FcPtrList*, %struct._FcPtrList** %379, align 8
  %382 = call i32 @FcPtrListIterIsValid(%struct._FcPtrList* %381, %struct._FcPtrListIter* nonnull %14) #9
  %383 = icmp eq i32 %382, 0
  br i1 %383, label %453, label %445

384:                                              ; preds = %467
  %385 = getelementptr inbounds i8, i8* %0, i64 16
  %386 = bitcast i8* %385 to i32*
  store i32 1, i32* %386, align 8
  br label %439

387:                                              ; preds = %467
  %388 = load %struct._FcConfig*, %struct._FcConfig** %363, align 8
  %389 = call i8* @IA__FcConfigGetFilename(%struct._FcConfig* %388, i8* %344) #9
  %390 = icmp eq i32 %342, 1
  %391 = icmp ne i8* %389, null
  %392 = and i1 %390, %391
  %393 = icmp ne i8* %346, null
  %394 = and i1 %393, %392
  br i1 %394, label %395, label %437

395:                                              ; preds = %387
  %396 = call i32 @FcFileIsLink(i8* nonnull %389) #9
  %397 = icmp eq i32 %396, 0
  br i1 %397, label %398, label %437

398:                                              ; preds = %395
  %399 = call i32 @IA__FcFileIsDir(i8* nonnull %389) #9
  %400 = icmp eq i32 %399, 0
  br i1 %400, label %419, label %401

401:                                              ; preds = %398
  %402 = call i8* @IA__FcStrDirname(i8* nonnull %346) #9
  %403 = call i32 @IA__FcFileIsDir(i8* %402) #9
  %404 = icmp eq i32 %403, 0
  br i1 %404, label %405, label %407

405:                                              ; preds = %401
  %406 = call i32 @FcMakeDirectory(i8* %402) #9
  br label %407

407:                                              ; preds = %405, %401
  call void @IA__FcStrFree(i8* %402) #9
  %408 = call i32 @IA__FcFileIsDir(i8* nonnull %346) #9
  %409 = icmp eq i32 %408, 0
  br i1 %409, label %410, label %416

410:                                              ; preds = %407
  %411 = call i32 @rename(i8* nonnull %389, i8* nonnull %346) #9
  %412 = icmp eq i32 %411, 0
  br i1 %412, label %413, label %416

413:                                              ; preds = %410
  %414 = call i32 @symlink(i8* nonnull %346, i8* nonnull %389) #9
  %415 = icmp eq i32 %414, 0
  br i1 %415, label %437, label %416

416:                                              ; preds = %413, %410, %407
  %417 = load i1, i1* @FcParseInclude.warn_confd, align 4
  br i1 %417, label %437, label %418

418:                                              ; preds = %416
  call void (%struct._FcConfigParse*, i32, i8*, ...) @FcConfigMessage(%struct._FcConfigParse* %15, i32 1, i8* getelementptr inbounds ([76 x i8], [76 x i8]* @.str.48, i64 0, i64 0), i8* %344, i8* nonnull %346) #9
  store i1 true, i1* @FcParseInclude.warn_confd, align 4
  br label %437

419:                                              ; preds = %398
  %420 = call i8* @IA__FcStrDirname(i8* %347) #9
  %421 = call i32 @IA__FcFileIsDir(i8* %420) #9
  %422 = icmp eq i32 %421, 0
  br i1 %422, label %423, label %425

423:                                              ; preds = %419
  %424 = call i32 @FcMakeDirectory(i8* %420) #9
  br label %425

425:                                              ; preds = %423, %419
  call void @IA__FcStrFree(i8* %420) #9
  %426 = call i32 @FcFileIsFile(i8* %347) #9
  %427 = icmp eq i32 %426, 0
  br i1 %427, label %428, label %434

428:                                              ; preds = %425
  %429 = call i32 @rename(i8* nonnull %389, i8* %347) #9
  %430 = icmp eq i32 %429, 0
  br i1 %430, label %431, label %434

431:                                              ; preds = %428
  %432 = call i32 @symlink(i8* %347, i8* nonnull %389) #9
  %433 = icmp eq i32 %432, 0
  br i1 %433, label %437, label %434

434:                                              ; preds = %431, %428, %425
  %435 = load i1, i1* @FcParseInclude.warn_conf, align 4
  br i1 %435, label %437, label %436

436:                                              ; preds = %434
  call void (%struct._FcConfigParse*, i32, i8*, ...) @FcConfigMessage(%struct._FcConfigParse* %15, i32 1, i8* getelementptr inbounds ([76 x i8], [76 x i8]* @.str.48, i64 0, i64 0), i8* %344, i8* %347) #9
  store i1 true, i1* @FcParseInclude.warn_conf, align 4
  br label %437

437:                                              ; preds = %436, %434, %431, %418, %416, %413, %395, %387
  br i1 %391, label %438, label %439

438:                                              ; preds = %437
  call void @IA__FcStrFree(i8* nonnull %389) #9
  br label %439

439:                                              ; preds = %438, %437, %384
  %440 = load %struct._FcPStack*, %struct._FcPStack** %16, align 8
  %441 = getelementptr inbounds %struct._FcPStack, %struct._FcPStack* %440, i64 0, i32 3
  call void @FcStrBufDestroy(%struct._FcStrBuf* %441) #9
  %442 = icmp eq i8* %345, null
  br i1 %442, label %3152, label %443

443:                                              ; preds = %439, %340
  %444 = phi i8* [ %296, %340 ], [ %345, %439 ]
  call void @IA__FcStrFree(i8* nonnull %444) #9
  br label %3152

445:                                              ; preds = %378
  %446 = load %struct._FcConfig*, %struct._FcConfig** %363, align 8
  %447 = getelementptr inbounds %struct._FcConfig, %struct._FcConfig* %446, i64 0, i32 5, i64 1
  %448 = load %struct._FcPtrList*, %struct._FcPtrList** %447, align 8
  call void @FcPtrListIterInitAtLast(%struct._FcPtrList* %448, %struct._FcPtrListIter* nonnull %14) #9
  call void @FcRuleSetReference(%struct._FcRuleSet* %350) #9
  %449 = load %struct._FcConfig*, %struct._FcConfig** %363, align 8
  %450 = getelementptr inbounds %struct._FcConfig, %struct._FcConfig* %449, i64 0, i32 5, i64 1
  %451 = load %struct._FcPtrList*, %struct._FcPtrList** %450, align 8
  %452 = call i32 @FcPtrListIterAdd(%struct._FcPtrList* %451, %struct._FcPtrListIter* nonnull %14, i8* %364) #9
  br label %453

453:                                              ; preds = %445, %378
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %361) #9
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %361) #9
  %454 = getelementptr inbounds %struct._FcRuleSet, %struct._FcRuleSet* %350, i64 0, i32 5, i64 2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %361, i8 -86, i64 24, i1 false) #9
  %455 = load %struct._FcPtrList*, %struct._FcPtrList** %454, align 8
  call void @FcPtrListIterInit(%struct._FcPtrList* %455, %struct._FcPtrListIter* nonnull %14) #9
  %456 = load %struct._FcPtrList*, %struct._FcPtrList** %454, align 8
  %457 = call i32 @FcPtrListIterIsValid(%struct._FcPtrList* %456, %struct._FcPtrListIter* nonnull %14) #9
  %458 = icmp eq i32 %457, 0
  br i1 %458, label %467, label %459

459:                                              ; preds = %453
  %460 = load %struct._FcConfig*, %struct._FcConfig** %363, align 8
  %461 = getelementptr inbounds %struct._FcConfig, %struct._FcConfig* %460, i64 0, i32 5, i64 2
  %462 = load %struct._FcPtrList*, %struct._FcPtrList** %461, align 8
  call void @FcPtrListIterInitAtLast(%struct._FcPtrList* %462, %struct._FcPtrListIter* nonnull %14) #9
  call void @FcRuleSetReference(%struct._FcRuleSet* %350) #9
  %463 = load %struct._FcConfig*, %struct._FcConfig** %363, align 8
  %464 = getelementptr inbounds %struct._FcConfig, %struct._FcConfig* %463, i64 0, i32 5, i64 2
  %465 = load %struct._FcPtrList*, %struct._FcPtrList** %464, align 8
  %466 = call i32 @FcPtrListIterAdd(%struct._FcPtrList* %465, %struct._FcPtrListIter* nonnull %14, i8* %364) #9
  br label %467

467:                                              ; preds = %459, %453
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %361) #9
  call void @FcRuleSetDestroy(%struct._FcRuleSet* %350) #9
  %468 = load %struct._FcConfig*, %struct._FcConfig** %363, align 8
  %469 = getelementptr inbounds i8, i8* %0, i64 4552
  %470 = bitcast i8* %469 to i32*
  %471 = load i32, i32* %470, align 8
  %472 = icmp eq i32 %471, 0
  %473 = zext i1 %472 to i32
  %474 = call fastcc i32 @_FcConfigParse(%struct._FcConfig* %468, i8* %344, i32 %343, i32 %473) #9
  %475 = icmp eq i32 %474, 0
  br i1 %475, label %384, label %387

476:                                              ; preds = %19
  %477 = getelementptr inbounds %struct._FcPStack, %struct._FcPStack* %17, i64 0, i32 2
  %478 = load i8**, i8*** %477, align 8
  %479 = icmp eq i8** %478, null
  br i1 %479, label %506, label %480

480:                                              ; preds = %476
  %481 = load i8*, i8** %478, align 8
  %482 = icmp eq i8* %481, null
  br i1 %482, label %506, label %483

483:                                              ; preds = %480, %488
  %484 = phi i8* [ %490, %488 ], [ %481, %480 ]
  %485 = phi i8** [ %489, %488 ], [ %478, %480 ]
  %486 = tail call i32 @strcmp(i8* nonnull %484, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.50, i64 0, i64 0)) #12
  %487 = icmp eq i32 %486, 0
  br i1 %487, label %492, label %488

488:                                              ; preds = %483
  %489 = getelementptr inbounds i8*, i8** %485, i64 2
  %490 = load i8*, i8** %489, align 8
  %491 = icmp eq i8* %490, null
  br i1 %491, label %506, label %483

492:                                              ; preds = %483
  store i8 0, i8* %484, align 1
  %493 = getelementptr inbounds i8*, i8** %485, i64 1
  %494 = load i8*, i8** %493, align 8
  %495 = icmp eq i8* %494, null
  br i1 %495, label %506, label %496

496:                                              ; preds = %492
  %497 = tail call i32 @strcmp(i8* nonnull %494, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.51, i64 0, i64 0)) #12
  %498 = icmp eq i32 %497, 0
  br i1 %498, label %506, label %499

499:                                              ; preds = %496
  %500 = tail call i32 @strcmp(i8* nonnull %494, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.52, i64 0, i64 0)) #12
  %501 = icmp eq i32 %500, 0
  br i1 %501, label %506, label %502

502:                                              ; preds = %499
  %503 = tail call i32 @strcmp(i8* nonnull %494, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.8, i64 0, i64 0)) #12
  %504 = icmp eq i32 %503, 0
  br i1 %504, label %506, label %505

505:                                              ; preds = %502
  tail call void (%struct._FcConfigParse*, i32, i8*, ...) @FcConfigMessage(%struct._FcConfigParse* %15, i32 1, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.53, i64 0, i64 0), i8* nonnull %494) #9
  br label %3152

506:                                              ; preds = %488, %502, %499, %496, %492, %480, %476
  %507 = phi i32 [ 0, %492 ], [ 0, %496 ], [ 1, %499 ], [ 2, %502 ], [ 0, %476 ], [ 0, %480 ], [ 0, %488 ]
  %508 = getelementptr inbounds i8, i8* %0, i64 8
  %509 = bitcast i8* %508 to %struct._FcVStack**
  %510 = load %struct._FcVStack*, %struct._FcVStack** %509, align 8
  %511 = icmp eq %struct._FcVStack* %510, null
  br i1 %511, label %612, label %512

512:                                              ; preds = %506
  %513 = icmp eq i32 %507, 2
  br label %514

514:                                              ; preds = %605, %512
  %515 = phi %struct._FcVStack* [ %510, %512 ], [ %607, %605 ]
  %516 = phi %struct._FcRule* [ null, %512 ], [ %606, %605 ]
  %517 = getelementptr inbounds %struct._FcVStack, %struct._FcVStack* %515, i64 0, i32 1
  %518 = load %struct._FcPStack*, %struct._FcPStack** %517, align 8
  %519 = load %struct._FcPStack*, %struct._FcPStack** %16, align 8
  %520 = icmp eq %struct._FcPStack* %518, %519
  br i1 %520, label %521, label %609

521:                                              ; preds = %514
  %522 = getelementptr inbounds %struct._FcVStack, %struct._FcVStack* %515, i64 0, i32 2
  %523 = load i32, i32* %522, align 8
  switch i32 %523, label %604 [
    i32 17, label %524
    i32 19, label %543
  ]

524:                                              ; preds = %521
  %525 = getelementptr inbounds %struct._FcVStack, %struct._FcVStack* %515, i64 0, i32 3, i32 0
  %526 = bitcast i8** %525 to i64*
  %527 = load i64, i64* %526, align 8
  %528 = tail call noalias i8* @malloc(i64 24) #9
  %529 = icmp eq i8* %528, null
  br i1 %529, label %537, label %530

530:                                              ; preds = %524
  %531 = bitcast i8* %528 to %struct._FcRule*
  %532 = bitcast i8* %528 to %struct._FcRule**
  store %struct._FcRule* null, %struct._FcRule** %532, align 8
  %533 = getelementptr inbounds i8, i8* %528, i64 8
  %534 = bitcast i8* %533 to i32*
  store i32 1, i32* %534, align 8
  %535 = getelementptr inbounds i8, i8* %528, i64 16
  %536 = bitcast i8* %535 to i64*
  store i64 %527, i64* %536, align 8
  br label %537

537:                                              ; preds = %530, %524
  %538 = phi %struct._FcRule* [ null, %524 ], [ %531, %530 ]
  %539 = icmp eq %struct._FcRule* %516, null
  br i1 %539, label %542, label %540

540:                                              ; preds = %537
  %541 = getelementptr inbounds %struct._FcRule, %struct._FcRule* %538, i64 0, i32 0
  store %struct._FcRule* %516, %struct._FcRule** %541, align 8
  br label %542

542:                                              ; preds = %540, %537
  store i32 0, i32* %522, align 8
  br label %605

543:                                              ; preds = %521
  br i1 %513, label %548, label %544

544:                                              ; preds = %543
  %545 = getelementptr inbounds %struct._FcVStack, %struct._FcVStack* %515, i64 0, i32 3, i32 0
  %546 = bitcast i8** %545 to i64*
  %547 = load i64, i64* %546, align 8
  br label %587

548:                                              ; preds = %543
  %549 = getelementptr inbounds %struct._FcVStack, %struct._FcVStack* %515, i64 0, i32 3
  %550 = bitcast %union.anon.1* %549 to %struct._FcEdit**
  %551 = load %struct._FcEdit*, %struct._FcEdit** %550, align 8
  %552 = getelementptr inbounds %struct._FcEdit, %struct._FcEdit* %551, i64 0, i32 0
  %553 = load i32, i32* %552, align 8
  %554 = icmp sgt i32 %553, 51
  br i1 %554, label %557, label %555

555:                                              ; preds = %548
  %556 = ptrtoint %struct._FcEdit* %551 to i64
  br label %587

557:                                              ; preds = %548
  %558 = tail call i8* @FcObjectName(i32 %553) #9
  tail call void (%struct._FcConfigParse*, i32, i8*, ...) @FcConfigMessage(%struct._FcConfigParse* %15, i32 2, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.54, i64 0, i64 0), i8* %558) #9
  %559 = icmp eq %struct._FcRule* %516, null
  br i1 %559, label %3152, label %560

560:                                              ; preds = %557, %584
  %561 = phi %struct._FcRule* [ %563, %584 ], [ %516, %557 ]
  %562 = getelementptr inbounds %struct._FcRule, %struct._FcRule* %561, i64 0, i32 0
  %563 = load %struct._FcRule*, %struct._FcRule** %562, align 8
  %564 = getelementptr inbounds %struct._FcRule, %struct._FcRule* %561, i64 0, i32 1
  %565 = load i32, i32* %564, align 8
  switch i32 %565, label %584 [
    i32 1, label %566
    i32 2, label %572
  ]

566:                                              ; preds = %560
  %567 = getelementptr inbounds %struct._FcRule, %struct._FcRule* %561, i64 0, i32 2, i32 0
  %568 = load %struct._FcTest*, %struct._FcTest** %567, align 8
  %569 = getelementptr inbounds %struct._FcTest, %struct._FcTest* %568, i64 0, i32 4
  %570 = load %struct._FcExpr*, %struct._FcExpr** %569, align 8
  tail call fastcc void @FcExprDestroy(%struct._FcExpr* %570) #9
  %571 = bitcast %struct._FcTest* %568 to i8*
  br label %582

572:                                              ; preds = %560
  %573 = getelementptr inbounds %struct._FcRule, %struct._FcRule* %561, i64 0, i32 2
  %574 = bitcast %union.anon.0* %573 to %struct._FcEdit**
  %575 = load %struct._FcEdit*, %struct._FcEdit** %574, align 8
  %576 = getelementptr inbounds %struct._FcEdit, %struct._FcEdit* %575, i64 0, i32 2
  %577 = load %struct._FcExpr*, %struct._FcExpr** %576, align 8
  %578 = icmp eq %struct._FcExpr* %577, null
  br i1 %578, label %580, label %579

579:                                              ; preds = %572
  tail call fastcc void @FcExprDestroy(%struct._FcExpr* nonnull %577) #9
  br label %580

580:                                              ; preds = %579, %572
  %581 = bitcast %struct._FcEdit* %575 to i8*
  br label %582

582:                                              ; preds = %566, %580
  %583 = phi i8* [ %581, %580 ], [ %571, %566 ]
  tail call void @free(i8* %583) #9
  br label %584

584:                                              ; preds = %582, %560
  %585 = bitcast %struct._FcRule* %561 to i8*
  tail call void @free(i8* %585) #9
  %586 = icmp eq %struct._FcRule* %563, null
  br i1 %586, label %3152, label %560

587:                                              ; preds = %555, %544
  %588 = phi i64 [ %547, %544 ], [ %556, %555 ]
  %589 = tail call noalias i8* @malloc(i64 24) #9
  %590 = icmp eq i8* %589, null
  br i1 %590, label %598, label %591

591:                                              ; preds = %587
  %592 = bitcast i8* %589 to %struct._FcRule*
  %593 = bitcast i8* %589 to %struct._FcRule**
  store %struct._FcRule* null, %struct._FcRule** %593, align 8
  %594 = getelementptr inbounds i8, i8* %589, i64 8
  %595 = bitcast i8* %594 to i32*
  store i32 2, i32* %595, align 8
  %596 = getelementptr inbounds i8, i8* %589, i64 16
  %597 = bitcast i8* %596 to i64*
  store i64 %588, i64* %597, align 8
  br label %598

598:                                              ; preds = %591, %587
  %599 = phi %struct._FcRule* [ null, %587 ], [ %592, %591 ]
  %600 = icmp eq %struct._FcRule* %516, null
  br i1 %600, label %603, label %601

601:                                              ; preds = %598
  %602 = getelementptr inbounds %struct._FcRule, %struct._FcRule* %599, i64 0, i32 0
  store %struct._FcRule* %516, %struct._FcRule** %602, align 8
  br label %603

603:                                              ; preds = %601, %598
  store i32 0, i32* %522, align 8
  br label %605

604:                                              ; preds = %521
  tail call void (%struct._FcConfigParse*, i32, i8*, ...) @FcConfigMessage(%struct._FcConfigParse* %15, i32 1, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.55, i64 0, i64 0)) #9
  br label %605

605:                                              ; preds = %604, %603, %542
  %606 = phi %struct._FcRule* [ %516, %604 ], [ %599, %603 ], [ %538, %542 ]
  tail call fastcc void @FcVStackPopAndDestroy(%struct._FcConfigParse* %15) #9
  %607 = load %struct._FcVStack*, %struct._FcVStack** %509, align 8
  %608 = icmp eq %struct._FcVStack* %607, null
  br i1 %608, label %609, label %514

609:                                              ; preds = %605, %514
  %610 = phi %struct._FcRule* [ %516, %514 ], [ %606, %605 ]
  %611 = icmp eq %struct._FcRule* %610, null
  br i1 %611, label %612, label %613

612:                                              ; preds = %609, %506
  tail call void (%struct._FcConfigParse*, i32, i8*, ...) @FcConfigMessage(%struct._FcConfigParse* %15, i32 1, i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.56, i64 0, i64 0)) #9
  br label %3152

613:                                              ; preds = %609
  %614 = getelementptr inbounds i8, i8* %0, i64 40
  %615 = bitcast i8* %614 to %struct._FcRuleSet**
  %616 = load %struct._FcRuleSet*, %struct._FcRuleSet** %615, align 8
  %617 = tail call i32 @FcRuleSetAdd(%struct._FcRuleSet* %616, %struct._FcRule* nonnull %610, i32 %507) #9
  %618 = icmp eq i32 %617, -1
  br i1 %618, label %619, label %647

619:                                              ; preds = %613
  tail call void (%struct._FcConfigParse*, i32, i8*, ...) @FcConfigMessage(%struct._FcConfigParse* %15, i32 2, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.31, i64 0, i64 0)) #9
  br label %620

620:                                              ; preds = %644, %619
  %621 = phi %struct._FcRule* [ %610, %619 ], [ %623, %644 ]
  %622 = getelementptr inbounds %struct._FcRule, %struct._FcRule* %621, i64 0, i32 0
  %623 = load %struct._FcRule*, %struct._FcRule** %622, align 8
  %624 = getelementptr inbounds %struct._FcRule, %struct._FcRule* %621, i64 0, i32 1
  %625 = load i32, i32* %624, align 8
  switch i32 %625, label %644 [
    i32 1, label %626
    i32 2, label %632
  ]

626:                                              ; preds = %620
  %627 = getelementptr inbounds %struct._FcRule, %struct._FcRule* %621, i64 0, i32 2, i32 0
  %628 = load %struct._FcTest*, %struct._FcTest** %627, align 8
  %629 = getelementptr inbounds %struct._FcTest, %struct._FcTest* %628, i64 0, i32 4
  %630 = load %struct._FcExpr*, %struct._FcExpr** %629, align 8
  tail call fastcc void @FcExprDestroy(%struct._FcExpr* %630) #9
  %631 = bitcast %struct._FcTest* %628 to i8*
  br label %642

632:                                              ; preds = %620
  %633 = getelementptr inbounds %struct._FcRule, %struct._FcRule* %621, i64 0, i32 2
  %634 = bitcast %union.anon.0* %633 to %struct._FcEdit**
  %635 = load %struct._FcEdit*, %struct._FcEdit** %634, align 8
  %636 = getelementptr inbounds %struct._FcEdit, %struct._FcEdit* %635, i64 0, i32 2
  %637 = load %struct._FcExpr*, %struct._FcExpr** %636, align 8
  %638 = icmp eq %struct._FcExpr* %637, null
  br i1 %638, label %640, label %639

639:                                              ; preds = %632
  tail call fastcc void @FcExprDestroy(%struct._FcExpr* nonnull %637) #9
  br label %640

640:                                              ; preds = %639, %632
  %641 = bitcast %struct._FcEdit* %635 to i8*
  br label %642

642:                                              ; preds = %626, %640
  %643 = phi i8* [ %641, %640 ], [ %631, %626 ]
  tail call void @free(i8* %643) #9
  br label %644

644:                                              ; preds = %642, %620
  %645 = bitcast %struct._FcRule* %621 to i8*
  tail call void @free(i8* %645) #9
  %646 = icmp eq %struct._FcRule* %623, null
  br i1 %646, label %3152, label %620

647:                                              ; preds = %613
  %648 = getelementptr inbounds i8, i8* %0, i64 32
  %649 = bitcast i8* %648 to %struct._FcConfig**
  %650 = load %struct._FcConfig*, %struct._FcConfig** %649, align 8
  %651 = getelementptr inbounds %struct._FcConfig, %struct._FcConfig* %650, i64 0, i32 6
  %652 = load i32, i32* %651, align 8
  %653 = icmp slt i32 %652, %617
  br i1 %653, label %654, label %3152

654:                                              ; preds = %647
  store i32 %617, i32* %651, align 8
  br label %3152

655:                                              ; preds = %19
  %656 = getelementptr inbounds %struct._FcPStack, %struct._FcPStack* %17, i64 0, i32 2
  %657 = load i8**, i8*** %656, align 8
  %658 = icmp eq i8** %657, null
  br i1 %658, label %685, label %659

659:                                              ; preds = %655
  %660 = load i8*, i8** %657, align 8
  %661 = icmp eq i8* %660, null
  br i1 %661, label %685, label %662

662:                                              ; preds = %659, %667
  %663 = phi i8* [ %669, %667 ], [ %660, %659 ]
  %664 = phi i8** [ %668, %667 ], [ %657, %659 ]
  %665 = tail call i32 @strcmp(i8* nonnull %663, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.57, i64 0, i64 0)) #12
  %666 = icmp eq i32 %665, 0
  br i1 %666, label %671, label %667

667:                                              ; preds = %662
  %668 = getelementptr inbounds i8*, i8** %664, i64 2
  %669 = load i8*, i8** %668, align 8
  %670 = icmp eq i8* %669, null
  br i1 %670, label %685, label %662

671:                                              ; preds = %662
  store i8 0, i8* %663, align 1
  %672 = getelementptr inbounds i8*, i8** %664, i64 1
  %673 = load i8*, i8** %672, align 8
  %674 = icmp eq i8* %673, null
  br i1 %674, label %685, label %675

675:                                              ; preds = %671
  %676 = tail call i32 @strcmp(i8* nonnull %673, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.62, i64 0, i64 0)) #12
  %677 = icmp eq i32 %676, 0
  br i1 %677, label %685, label %678

678:                                              ; preds = %675
  %679 = tail call i32 @strcmp(i8* nonnull %673, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.63, i64 0, i64 0)) #12
  %680 = icmp eq i32 %679, 0
  br i1 %680, label %685, label %681

681:                                              ; preds = %678
  %682 = tail call i32 @strcmp(i8* nonnull %673, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.64, i64 0, i64 0)) #12
  %683 = icmp eq i32 %682, 0
  br i1 %683, label %685, label %684

684:                                              ; preds = %681
  tail call void (%struct._FcConfigParse*, i32, i8*, ...) @FcConfigMessage(%struct._FcConfigParse* %15, i32 1, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.65, i64 0, i64 0), i8* nonnull %673) #9
  br label %3152

685:                                              ; preds = %667, %681, %678, %675, %671, %659, %655
  %686 = phi i32 [ 0, %671 ], [ 0, %675 ], [ 1, %678 ], [ 2, %681 ], [ 0, %655 ], [ 0, %659 ], [ 0, %667 ]
  %687 = getelementptr inbounds i8, i8* %0, i64 8
  %688 = bitcast i8* %687 to %struct._FcVStack**
  %689 = load %struct._FcVStack*, %struct._FcVStack** %688, align 8
  %690 = icmp eq %struct._FcVStack* %689, null
  br i1 %690, label %691, label %692

691:                                              ; preds = %685
  tail call void (%struct._FcConfigParse*, i32, i8*, ...) @FcConfigMessage(%struct._FcConfigParse* %15, i32 2, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.60, i64 0, i64 0)) #9
  br label %3152

692:                                              ; preds = %685
  %693 = getelementptr inbounds i8, i8* %0, i64 32
  %694 = bitcast i8* %693 to %struct._FcConfig**
  br label %695

695:                                              ; preds = %772, %692
  %696 = phi %struct._FcVStack* [ %689, %692 ], [ %778, %772 ]
  %697 = phi %struct._FcRule* [ null, %692 ], [ %777, %772 ]
  %698 = phi %struct._FcExpr* [ null, %692 ], [ %776, %772 ]
  %699 = phi %struct._FcExpr* [ null, %692 ], [ %775, %772 ]
  %700 = phi %struct._FcExpr* [ null, %692 ], [ %774, %772 ]
  %701 = phi %struct._FcExpr* [ null, %692 ], [ %773, %772 ]
  %702 = getelementptr inbounds %struct._FcVStack, %struct._FcVStack* %696, i64 0, i32 1
  %703 = load %struct._FcPStack*, %struct._FcPStack** %702, align 8
  %704 = load %struct._FcPStack*, %struct._FcPStack** %16, align 8
  %705 = icmp eq %struct._FcPStack* %703, %704
  br i1 %705, label %706, label %780

706:                                              ; preds = %695
  %707 = getelementptr inbounds %struct._FcVStack, %struct._FcVStack* %696, i64 0, i32 2
  %708 = load i32, i32* %707, align 8
  switch i32 %708, label %771 [
    i32 2, label %709
    i32 7, label %731
    i32 8, label %738
    i32 9, label %745
    i32 17, label %752
  ]

709:                                              ; preds = %706
  %710 = icmp eq %struct._FcExpr* %701, null
  br i1 %710, label %724, label %711

711:                                              ; preds = %709
  tail call void (%struct._FcConfigParse*, i32, i8*, ...) @FcConfigMessage(%struct._FcConfigParse* %15, i32 1, i8* getelementptr inbounds ([81 x i8], [81 x i8]* @.str.58, i64 0, i64 0)) #9
  %712 = load %struct._FcConfig*, %struct._FcConfig** %694, align 8
  %713 = getelementptr inbounds %struct._FcVStack, %struct._FcVStack* %696, i64 0, i32 3
  %714 = bitcast %union.anon.1* %713 to i64*
  %715 = load i64, i64* %714, align 8
  %716 = tail call %struct._FcExpr* @FcConfigAllocExpr(%struct._FcConfig* %712) #9
  %717 = icmp eq %struct._FcExpr* %716, null
  br i1 %717, label %723, label %718

718:                                              ; preds = %711
  %719 = getelementptr inbounds %struct._FcExpr, %struct._FcExpr* %716, i64 0, i32 0
  store i32 36, i32* %719, align 8
  %720 = getelementptr inbounds %struct._FcExpr, %struct._FcExpr* %716, i64 0, i32 1, i32 0, i32 0
  %721 = bitcast %struct._FcExpr** %720 to i64*
  store i64 %715, i64* %721, align 8
  %722 = getelementptr inbounds %struct._FcExpr, %struct._FcExpr* %716, i64 0, i32 1, i32 0, i32 1
  store %struct._FcExpr* %701, %struct._FcExpr** %722, align 8
  br label %729

723:                                              ; preds = %711
  tail call void (%struct._FcConfigParse*, i32, i8*, ...) @FcConfigMessage(%struct._FcConfigParse* %15, i32 2, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.31, i64 0, i64 0)) #9
  br label %772

724:                                              ; preds = %709
  %725 = getelementptr inbounds %struct._FcVStack, %struct._FcVStack* %696, i64 0, i32 3
  %726 = bitcast %union.anon.1* %725 to %struct._FcExpr**
  %727 = load %struct._FcExpr*, %struct._FcExpr** %726, align 8
  %728 = icmp eq %struct._FcExpr* %727, null
  br i1 %728, label %772, label %729

729:                                              ; preds = %724, %718
  %730 = phi %struct._FcExpr* [ %716, %718 ], [ %727, %724 ]
  store i32 0, i32* %707, align 8
  br label %772

731:                                              ; preds = %706
  %732 = icmp eq %struct._FcExpr* %699, null
  br i1 %732, label %734, label %733

733:                                              ; preds = %731
  tail call fastcc void @FcExprDestroy(%struct._FcExpr* nonnull %699) #9
  br label %734

734:                                              ; preds = %733, %731
  %735 = getelementptr inbounds %struct._FcVStack, %struct._FcVStack* %696, i64 0, i32 3
  %736 = bitcast %union.anon.1* %735 to %struct._FcExpr**
  %737 = load %struct._FcExpr*, %struct._FcExpr** %736, align 8
  store i32 0, i32* %707, align 8
  br label %772

738:                                              ; preds = %706
  %739 = icmp eq %struct._FcExpr* %700, null
  br i1 %739, label %741, label %740

740:                                              ; preds = %738
  tail call fastcc void @FcExprDestroy(%struct._FcExpr* nonnull %700) #9
  br label %741

741:                                              ; preds = %740, %738
  %742 = getelementptr inbounds %struct._FcVStack, %struct._FcVStack* %696, i64 0, i32 3
  %743 = bitcast %union.anon.1* %742 to %struct._FcExpr**
  %744 = load %struct._FcExpr*, %struct._FcExpr** %743, align 8
  store i32 0, i32* %707, align 8
  br label %772

745:                                              ; preds = %706
  %746 = icmp eq %struct._FcExpr* %698, null
  br i1 %746, label %748, label %747

747:                                              ; preds = %745
  tail call fastcc void @FcExprDestroy(%struct._FcExpr* nonnull %698) #9
  br label %748

748:                                              ; preds = %747, %745
  %749 = getelementptr inbounds %struct._FcVStack, %struct._FcVStack* %696, i64 0, i32 3
  %750 = bitcast %union.anon.1* %749 to %struct._FcExpr**
  %751 = load %struct._FcExpr*, %struct._FcExpr** %750, align 8
  store i32 0, i32* %707, align 8
  br label %772

752:                                              ; preds = %706
  %753 = icmp eq %struct._FcRule* %697, null
  %754 = getelementptr inbounds %struct._FcVStack, %struct._FcVStack* %696, i64 0, i32 3, i32 0
  %755 = bitcast i8** %754 to i64*
  %756 = load i64, i64* %755, align 8
  %757 = tail call noalias i8* @malloc(i64 24) #9
  %758 = icmp eq i8* %757, null
  br i1 %758, label %766, label %759

759:                                              ; preds = %752
  %760 = bitcast i8* %757 to %struct._FcRule*
  %761 = bitcast i8* %757 to %struct._FcRule**
  store %struct._FcRule* null, %struct._FcRule** %761, align 8
  %762 = getelementptr inbounds i8, i8* %757, i64 8
  %763 = bitcast i8* %762 to i32*
  store i32 1, i32* %763, align 8
  %764 = getelementptr inbounds i8, i8* %757, i64 16
  %765 = bitcast i8* %764 to i64*
  store i64 %756, i64* %765, align 8
  br label %766

766:                                              ; preds = %759, %752
  %767 = phi %struct._FcRule* [ null, %752 ], [ %760, %759 ]
  br i1 %753, label %770, label %768

768:                                              ; preds = %766
  %769 = getelementptr inbounds %struct._FcRule, %struct._FcRule* %767, i64 0, i32 0
  store %struct._FcRule* %697, %struct._FcRule** %769, align 8
  br label %770

770:                                              ; preds = %768, %766
  store i32 0, i32* %707, align 8
  br label %772

771:                                              ; preds = %706
  tail call void (%struct._FcConfigParse*, i32, i8*, ...) @FcConfigMessage(%struct._FcConfigParse* %15, i32 1, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.59, i64 0, i64 0)) #9
  br label %772

772:                                              ; preds = %771, %770, %748, %741, %734, %729, %724, %723
  %773 = phi %struct._FcExpr* [ %701, %771 ], [ %701, %770 ], [ %701, %748 ], [ %701, %741 ], [ %701, %734 ], [ %730, %729 ], [ null, %724 ], [ %701, %723 ]
  %774 = phi %struct._FcExpr* [ %700, %771 ], [ %700, %770 ], [ %700, %748 ], [ %744, %741 ], [ %700, %734 ], [ %700, %729 ], [ %700, %724 ], [ %700, %723 ]
  %775 = phi %struct._FcExpr* [ %699, %771 ], [ %699, %770 ], [ %699, %748 ], [ %699, %741 ], [ %737, %734 ], [ %699, %729 ], [ %699, %724 ], [ %699, %723 ]
  %776 = phi %struct._FcExpr* [ %698, %771 ], [ %698, %770 ], [ %751, %748 ], [ %698, %741 ], [ %698, %734 ], [ %698, %729 ], [ %698, %724 ], [ %698, %723 ]
  %777 = phi %struct._FcRule* [ %697, %771 ], [ %767, %770 ], [ %697, %748 ], [ %697, %741 ], [ %697, %734 ], [ %697, %729 ], [ %697, %724 ], [ %697, %723 ]
  tail call fastcc void @FcVStackPopAndDestroy(%struct._FcConfigParse* %15) #9
  %778 = load %struct._FcVStack*, %struct._FcVStack** %688, align 8
  %779 = icmp eq %struct._FcVStack* %778, null
  br i1 %779, label %780, label %695

780:                                              ; preds = %772, %695
  %781 = phi %struct._FcExpr* [ %701, %695 ], [ %773, %772 ]
  %782 = phi %struct._FcExpr* [ %700, %695 ], [ %774, %772 ]
  %783 = phi %struct._FcExpr* [ %699, %695 ], [ %775, %772 ]
  %784 = phi %struct._FcExpr* [ %698, %695 ], [ %776, %772 ]
  %785 = phi %struct._FcRule* [ %697, %695 ], [ %777, %772 ]
  %786 = icmp eq %struct._FcExpr* %781, null
  br i1 %786, label %787, label %825

787:                                              ; preds = %780
  tail call void (%struct._FcConfigParse*, i32, i8*, ...) @FcConfigMessage(%struct._FcConfigParse* %15, i32 2, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.60, i64 0, i64 0)) #9
  %788 = icmp eq %struct._FcExpr* %783, null
  br i1 %788, label %790, label %789

789:                                              ; preds = %787
  tail call fastcc void @FcExprDestroy(%struct._FcExpr* nonnull %783) #9
  br label %790

790:                                              ; preds = %789, %787
  %791 = icmp eq %struct._FcExpr* %782, null
  br i1 %791, label %793, label %792

792:                                              ; preds = %790
  tail call fastcc void @FcExprDestroy(%struct._FcExpr* nonnull %782) #9
  br label %793

793:                                              ; preds = %792, %790
  %794 = icmp eq %struct._FcExpr* %784, null
  br i1 %794, label %796, label %795

795:                                              ; preds = %793
  tail call fastcc void @FcExprDestroy(%struct._FcExpr* nonnull %784) #9
  br label %796

796:                                              ; preds = %795, %793
  %797 = icmp eq %struct._FcRule* %785, null
  br i1 %797, label %3152, label %798

798:                                              ; preds = %796, %822
  %799 = phi %struct._FcRule* [ %801, %822 ], [ %785, %796 ]
  %800 = getelementptr inbounds %struct._FcRule, %struct._FcRule* %799, i64 0, i32 0
  %801 = load %struct._FcRule*, %struct._FcRule** %800, align 8
  %802 = getelementptr inbounds %struct._FcRule, %struct._FcRule* %799, i64 0, i32 1
  %803 = load i32, i32* %802, align 8
  switch i32 %803, label %822 [
    i32 1, label %804
    i32 2, label %810
  ]

804:                                              ; preds = %798
  %805 = getelementptr inbounds %struct._FcRule, %struct._FcRule* %799, i64 0, i32 2, i32 0
  %806 = load %struct._FcTest*, %struct._FcTest** %805, align 8
  %807 = getelementptr inbounds %struct._FcTest, %struct._FcTest* %806, i64 0, i32 4
  %808 = load %struct._FcExpr*, %struct._FcExpr** %807, align 8
  tail call fastcc void @FcExprDestroy(%struct._FcExpr* %808) #9
  %809 = bitcast %struct._FcTest* %806 to i8*
  br label %820

810:                                              ; preds = %798
  %811 = getelementptr inbounds %struct._FcRule, %struct._FcRule* %799, i64 0, i32 2
  %812 = bitcast %union.anon.0* %811 to %struct._FcEdit**
  %813 = load %struct._FcEdit*, %struct._FcEdit** %812, align 8
  %814 = getelementptr inbounds %struct._FcEdit, %struct._FcEdit* %813, i64 0, i32 2
  %815 = load %struct._FcExpr*, %struct._FcExpr** %814, align 8
  %816 = icmp eq %struct._FcExpr* %815, null
  br i1 %816, label %818, label %817

817:                                              ; preds = %810
  tail call fastcc void @FcExprDestroy(%struct._FcExpr* nonnull %815) #9
  br label %818

818:                                              ; preds = %817, %810
  %819 = bitcast %struct._FcEdit* %813 to i8*
  br label %820

820:                                              ; preds = %804, %818
  %821 = phi i8* [ %819, %818 ], [ %809, %804 ]
  tail call void @free(i8* %821) #9
  br label %822

822:                                              ; preds = %820, %798
  %823 = bitcast %struct._FcRule* %799 to i8*
  tail call void @free(i8* %823) #9
  %824 = icmp eq %struct._FcRule* %801, null
  br i1 %824, label %3152, label %798

825:                                              ; preds = %780
  %826 = icmp ne %struct._FcExpr* %783, null
  %827 = icmp ne %struct._FcExpr* %782, null
  %828 = or i1 %827, %826
  %829 = icmp ne %struct._FcExpr* %784, null
  %830 = or i1 %828, %829
  br i1 %830, label %860, label %831

831:                                              ; preds = %825
  tail call fastcc void @FcExprDestroy(%struct._FcExpr* nonnull %781) #9
  %832 = icmp eq %struct._FcRule* %785, null
  br i1 %832, label %3152, label %833

833:                                              ; preds = %831, %857
  %834 = phi %struct._FcRule* [ %836, %857 ], [ %785, %831 ]
  %835 = getelementptr inbounds %struct._FcRule, %struct._FcRule* %834, i64 0, i32 0
  %836 = load %struct._FcRule*, %struct._FcRule** %835, align 8
  %837 = getelementptr inbounds %struct._FcRule, %struct._FcRule* %834, i64 0, i32 1
  %838 = load i32, i32* %837, align 8
  switch i32 %838, label %857 [
    i32 1, label %839
    i32 2, label %845
  ]

839:                                              ; preds = %833
  %840 = getelementptr inbounds %struct._FcRule, %struct._FcRule* %834, i64 0, i32 2, i32 0
  %841 = load %struct._FcTest*, %struct._FcTest** %840, align 8
  %842 = getelementptr inbounds %struct._FcTest, %struct._FcTest* %841, i64 0, i32 4
  %843 = load %struct._FcExpr*, %struct._FcExpr** %842, align 8
  tail call fastcc void @FcExprDestroy(%struct._FcExpr* %843) #9
  %844 = bitcast %struct._FcTest* %841 to i8*
  br label %855

845:                                              ; preds = %833
  %846 = getelementptr inbounds %struct._FcRule, %struct._FcRule* %834, i64 0, i32 2
  %847 = bitcast %union.anon.0* %846 to %struct._FcEdit**
  %848 = load %struct._FcEdit*, %struct._FcEdit** %847, align 8
  %849 = getelementptr inbounds %struct._FcEdit, %struct._FcEdit* %848, i64 0, i32 2
  %850 = load %struct._FcExpr*, %struct._FcExpr** %849, align 8
  %851 = icmp eq %struct._FcExpr* %850, null
  br i1 %851, label %853, label %852

852:                                              ; preds = %845
  tail call fastcc void @FcExprDestroy(%struct._FcExpr* nonnull %850) #9
  br label %853

853:                                              ; preds = %852, %845
  %854 = bitcast %struct._FcEdit* %848 to i8*
  br label %855

855:                                              ; preds = %839, %853
  %856 = phi i8* [ %854, %853 ], [ %844, %839 ]
  tail call void @free(i8* %856) #9
  br label %857

857:                                              ; preds = %855, %833
  %858 = bitcast %struct._FcRule* %834 to i8*
  tail call void @free(i8* %858) #9
  %859 = icmp eq %struct._FcRule* %836, null
  br i1 %859, label %3152, label %833

860:                                              ; preds = %825
  %861 = tail call noalias i8* @malloc(i64 24) #9
  %862 = icmp eq i8* %861, null
  br i1 %862, label %880, label %863

863:                                              ; preds = %860
  %864 = bitcast i8* %861 to i32*
  store i32 0, i32* %864, align 8
  %865 = getelementptr inbounds i8, i8* %861, i64 4
  %866 = bitcast i8* %865 to i32*
  store i32 0, i32* %866, align 4
  %867 = tail call i32 @FcObjectFromName(i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.61, i64 0, i64 0)) #9
  %868 = getelementptr inbounds i8, i8* %861, i64 8
  %869 = bitcast i8* %868 to i32*
  store i32 %867, i32* %869, align 8
  %870 = getelementptr inbounds i8, i8* %861, i64 12
  %871 = bitcast i8* %870 to i32*
  store i32 65558, i32* %871, align 4
  %872 = getelementptr inbounds i8, i8* %861, i64 16
  %873 = bitcast i8* %872 to %struct._FcExpr**
  store %struct._FcExpr* %781, %struct._FcExpr** %873, align 8
  %874 = tail call i8* @FcObjectName(i32 %867) #9
  %875 = tail call %struct._FcObjectType* @IA__FcNameGetObjectType(i8* %874) #9
  %876 = icmp eq %struct._FcObjectType* %875, null
  br i1 %876, label %880, label %877

877:                                              ; preds = %863
  %878 = getelementptr inbounds %struct._FcObjectType, %struct._FcObjectType* %875, i64 0, i32 1
  %879 = load i32, i32* %878, align 8
  tail call fastcc void @FcTypecheckExpr(%struct._FcConfigParse* %15, %struct._FcExpr* nonnull %781, i32 %879) #9
  br label %880

880:                                              ; preds = %877, %863, %860
  %881 = icmp eq %struct._FcRule* %785, null
  br i1 %881, label %900, label %882

882:                                              ; preds = %880, %882
  %883 = phi %struct._FcRule* [ %885, %882 ], [ %785, %880 ]
  %884 = getelementptr inbounds %struct._FcRule, %struct._FcRule* %883, i64 0, i32 0
  %885 = load %struct._FcRule*, %struct._FcRule** %884, align 8
  %886 = icmp eq %struct._FcRule* %885, null
  br i1 %886, label %887, label %882

887:                                              ; preds = %882
  %888 = getelementptr inbounds %struct._FcRule, %struct._FcRule* %883, i64 0, i32 0
  %889 = tail call noalias i8* @malloc(i64 24) #9
  %890 = icmp eq i8* %889, null
  br i1 %890, label %898, label %891

891:                                              ; preds = %887
  %892 = bitcast i8* %889 to %struct._FcRule*
  %893 = bitcast i8* %889 to %struct._FcRule**
  store %struct._FcRule* null, %struct._FcRule** %893, align 8
  %894 = getelementptr inbounds i8, i8* %889, i64 8
  %895 = bitcast i8* %894 to i32*
  store i32 1, i32* %895, align 8
  %896 = getelementptr inbounds i8, i8* %889, i64 16
  %897 = bitcast i8* %896 to i8**
  store i8* %861, i8** %897, align 8
  br label %898

898:                                              ; preds = %891, %887
  %899 = phi %struct._FcRule* [ null, %887 ], [ %892, %891 ]
  store %struct._FcRule* %899, %struct._FcRule** %888, align 8
  br label %910

900:                                              ; preds = %880
  %901 = tail call noalias i8* @malloc(i64 24) #9
  %902 = bitcast i8* %901 to %struct._FcRule*
  %903 = icmp eq i8* %901, null
  br i1 %903, label %910, label %904

904:                                              ; preds = %900
  %905 = bitcast i8* %901 to %struct._FcRule**
  store %struct._FcRule* null, %struct._FcRule** %905, align 8
  %906 = getelementptr inbounds i8, i8* %901, i64 8
  %907 = bitcast i8* %906 to i32*
  store i32 1, i32* %907, align 8
  %908 = getelementptr inbounds i8, i8* %901, i64 16
  %909 = bitcast i8* %908 to i8**
  store i8* %861, i8** %909, align 8
  br label %910

910:                                              ; preds = %904, %900, %898
  %911 = phi %struct._FcRule* [ %785, %898 ], [ null, %900 ], [ %902, %904 ]
  %912 = phi %struct._FcRule* [ %899, %898 ], [ null, %900 ], [ %902, %904 ]
  br i1 %826, label %913, label %944

913:                                              ; preds = %910
  %914 = tail call noalias i8* @malloc(i64 24) #9
  %915 = icmp eq i8* %914, null
  br i1 %915, label %930, label %916

916:                                              ; preds = %913
  %917 = bitcast i8* %914 to i32*
  store i32 1, i32* %917, align 8
  %918 = getelementptr inbounds i8, i8* %914, i64 4
  %919 = bitcast i8* %918 to i32*
  store i32 14, i32* %919, align 4
  %920 = getelementptr inbounds i8, i8* %914, i64 8
  %921 = bitcast i8* %920 to %struct._FcExpr**
  store %struct._FcExpr* %783, %struct._FcExpr** %921, align 8
  %922 = getelementptr inbounds i8, i8* %914, i64 16
  %923 = bitcast i8* %922 to i32*
  store i32 %686, i32* %923, align 8
  %924 = tail call i8* @FcObjectName(i32 1) #9
  %925 = tail call %struct._FcObjectType* @IA__FcNameGetObjectType(i8* %924) #9
  %926 = icmp eq %struct._FcObjectType* %925, null
  br i1 %926, label %931, label %927

927:                                              ; preds = %916
  %928 = getelementptr inbounds %struct._FcObjectType, %struct._FcObjectType* %925, i64 0, i32 1
  %929 = load i32, i32* %928, align 8
  tail call fastcc void @FcTypecheckExpr(%struct._FcConfigParse* %15, %struct._FcExpr* nonnull %783, i32 %929) #9
  br label %931

930:                                              ; preds = %913
  tail call fastcc void @FcExprDestroy(%struct._FcExpr* nonnull %783) #9
  br label %944

931:                                              ; preds = %927, %916
  %932 = tail call noalias i8* @malloc(i64 24) #9
  %933 = icmp eq i8* %932, null
  br i1 %933, label %941, label %934

934:                                              ; preds = %931
  %935 = bitcast i8* %932 to %struct._FcRule*
  %936 = bitcast i8* %932 to %struct._FcRule**
  store %struct._FcRule* null, %struct._FcRule** %936, align 8
  %937 = getelementptr inbounds i8, i8* %932, i64 8
  %938 = bitcast i8* %937 to i32*
  store i32 2, i32* %938, align 8
  %939 = getelementptr inbounds i8, i8* %932, i64 16
  %940 = bitcast i8* %939 to i8**
  store i8* %914, i8** %940, align 8
  br label %941

941:                                              ; preds = %934, %931
  %942 = phi %struct._FcRule* [ null, %931 ], [ %935, %934 ]
  %943 = getelementptr inbounds %struct._FcRule, %struct._FcRule* %912, i64 0, i32 0
  store %struct._FcRule* %942, %struct._FcRule** %943, align 8
  br label %944

944:                                              ; preds = %941, %930, %910
  %945 = phi %struct._FcRule* [ %942, %941 ], [ %912, %930 ], [ %912, %910 ]
  br i1 %827, label %946, label %977

946:                                              ; preds = %944
  %947 = tail call noalias i8* @malloc(i64 24) #9
  %948 = icmp eq i8* %947, null
  br i1 %948, label %963, label %949

949:                                              ; preds = %946
  %950 = bitcast i8* %947 to i32*
  store i32 1, i32* %950, align 8
  %951 = getelementptr inbounds i8, i8* %947, i64 4
  %952 = bitcast i8* %951 to i32*
  store i32 15, i32* %952, align 4
  %953 = getelementptr inbounds i8, i8* %947, i64 8
  %954 = bitcast i8* %953 to %struct._FcExpr**
  store %struct._FcExpr* %782, %struct._FcExpr** %954, align 8
  %955 = getelementptr inbounds i8, i8* %947, i64 16
  %956 = bitcast i8* %955 to i32*
  store i32 %686, i32* %956, align 8
  %957 = tail call i8* @FcObjectName(i32 1) #9
  %958 = tail call %struct._FcObjectType* @IA__FcNameGetObjectType(i8* %957) #9
  %959 = icmp eq %struct._FcObjectType* %958, null
  br i1 %959, label %964, label %960

960:                                              ; preds = %949
  %961 = getelementptr inbounds %struct._FcObjectType, %struct._FcObjectType* %958, i64 0, i32 1
  %962 = load i32, i32* %961, align 8
  tail call fastcc void @FcTypecheckExpr(%struct._FcConfigParse* %15, %struct._FcExpr* nonnull %782, i32 %962) #9
  br label %964

963:                                              ; preds = %946
  tail call fastcc void @FcExprDestroy(%struct._FcExpr* nonnull %782) #9
  br label %977

964:                                              ; preds = %960, %949
  %965 = tail call noalias i8* @malloc(i64 24) #9
  %966 = icmp eq i8* %965, null
  br i1 %966, label %974, label %967

967:                                              ; preds = %964
  %968 = bitcast i8* %965 to %struct._FcRule*
  %969 = bitcast i8* %965 to %struct._FcRule**
  store %struct._FcRule* null, %struct._FcRule** %969, align 8
  %970 = getelementptr inbounds i8, i8* %965, i64 8
  %971 = bitcast i8* %970 to i32*
  store i32 2, i32* %971, align 8
  %972 = getelementptr inbounds i8, i8* %965, i64 16
  %973 = bitcast i8* %972 to i8**
  store i8* %947, i8** %973, align 8
  br label %974

974:                                              ; preds = %967, %964
  %975 = phi %struct._FcRule* [ null, %964 ], [ %968, %967 ]
  %976 = getelementptr inbounds %struct._FcRule, %struct._FcRule* %945, i64 0, i32 0
  store %struct._FcRule* %975, %struct._FcRule** %976, align 8
  br label %977

977:                                              ; preds = %974, %963, %944
  %978 = phi %struct._FcRule* [ %975, %974 ], [ %945, %963 ], [ %945, %944 ]
  br i1 %829, label %979, label %1010

979:                                              ; preds = %977
  %980 = tail call noalias i8* @malloc(i64 24) #9
  %981 = icmp eq i8* %980, null
  br i1 %981, label %996, label %982

982:                                              ; preds = %979
  %983 = bitcast i8* %980 to i32*
  store i32 1, i32* %983, align 8
  %984 = getelementptr inbounds i8, i8* %980, i64 4
  %985 = bitcast i8* %984 to i32*
  store i32 16, i32* %985, align 4
  %986 = getelementptr inbounds i8, i8* %980, i64 8
  %987 = bitcast i8* %986 to %struct._FcExpr**
  store %struct._FcExpr* %784, %struct._FcExpr** %987, align 8
  %988 = getelementptr inbounds i8, i8* %980, i64 16
  %989 = bitcast i8* %988 to i32*
  store i32 %686, i32* %989, align 8
  %990 = tail call i8* @FcObjectName(i32 1) #9
  %991 = tail call %struct._FcObjectType* @IA__FcNameGetObjectType(i8* %990) #9
  %992 = icmp eq %struct._FcObjectType* %991, null
  br i1 %992, label %997, label %993

993:                                              ; preds = %982
  %994 = getelementptr inbounds %struct._FcObjectType, %struct._FcObjectType* %991, i64 0, i32 1
  %995 = load i32, i32* %994, align 8
  tail call fastcc void @FcTypecheckExpr(%struct._FcConfigParse* %15, %struct._FcExpr* nonnull %784, i32 %995) #9
  br label %997

996:                                              ; preds = %979
  tail call fastcc void @FcExprDestroy(%struct._FcExpr* nonnull %784) #9
  br label %1010

997:                                              ; preds = %993, %982
  %998 = tail call noalias i8* @malloc(i64 24) #9
  %999 = icmp eq i8* %998, null
  br i1 %999, label %1007, label %1000

1000:                                             ; preds = %997
  %1001 = bitcast i8* %998 to %struct._FcRule*
  %1002 = bitcast i8* %998 to %struct._FcRule**
  store %struct._FcRule* null, %struct._FcRule** %1002, align 8
  %1003 = getelementptr inbounds i8, i8* %998, i64 8
  %1004 = bitcast i8* %1003 to i32*
  store i32 2, i32* %1004, align 8
  %1005 = getelementptr inbounds i8, i8* %998, i64 16
  %1006 = bitcast i8* %1005 to i8**
  store i8* %980, i8** %1006, align 8
  br label %1007

1007:                                             ; preds = %1000, %997
  %1008 = phi %struct._FcRule* [ null, %997 ], [ %1001, %1000 ]
  %1009 = getelementptr inbounds %struct._FcRule, %struct._FcRule* %978, i64 0, i32 0
  store %struct._FcRule* %1008, %struct._FcRule** %1009, align 8
  br label %1010

1010:                                             ; preds = %1007, %996, %977
  %1011 = getelementptr inbounds i8, i8* %0, i64 40
  %1012 = bitcast i8* %1011 to %struct._FcRuleSet**
  %1013 = load %struct._FcRuleSet*, %struct._FcRuleSet** %1012, align 8
  %1014 = tail call i32 @FcRuleSetAdd(%struct._FcRuleSet* %1013, %struct._FcRule* %911, i32 0) #9
  %1015 = icmp eq i32 %1014, -1
  br i1 %1015, label %1016, label %1043

1016:                                             ; preds = %1010, %1040
  %1017 = phi %struct._FcRule* [ %1019, %1040 ], [ %911, %1010 ]
  %1018 = getelementptr inbounds %struct._FcRule, %struct._FcRule* %1017, i64 0, i32 0
  %1019 = load %struct._FcRule*, %struct._FcRule** %1018, align 8
  %1020 = getelementptr inbounds %struct._FcRule, %struct._FcRule* %1017, i64 0, i32 1
  %1021 = load i32, i32* %1020, align 8
  switch i32 %1021, label %1040 [
    i32 1, label %1022
    i32 2, label %1028
  ]

1022:                                             ; preds = %1016
  %1023 = getelementptr inbounds %struct._FcRule, %struct._FcRule* %1017, i64 0, i32 2, i32 0
  %1024 = load %struct._FcTest*, %struct._FcTest** %1023, align 8
  %1025 = getelementptr inbounds %struct._FcTest, %struct._FcTest* %1024, i64 0, i32 4
  %1026 = load %struct._FcExpr*, %struct._FcExpr** %1025, align 8
  tail call fastcc void @FcExprDestroy(%struct._FcExpr* %1026) #9
  %1027 = bitcast %struct._FcTest* %1024 to i8*
  br label %1038

1028:                                             ; preds = %1016
  %1029 = getelementptr inbounds %struct._FcRule, %struct._FcRule* %1017, i64 0, i32 2
  %1030 = bitcast %union.anon.0* %1029 to %struct._FcEdit**
  %1031 = load %struct._FcEdit*, %struct._FcEdit** %1030, align 8
  %1032 = getelementptr inbounds %struct._FcEdit, %struct._FcEdit* %1031, i64 0, i32 2
  %1033 = load %struct._FcExpr*, %struct._FcExpr** %1032, align 8
  %1034 = icmp eq %struct._FcExpr* %1033, null
  br i1 %1034, label %1036, label %1035

1035:                                             ; preds = %1028
  tail call fastcc void @FcExprDestroy(%struct._FcExpr* nonnull %1033) #9
  br label %1036

1036:                                             ; preds = %1035, %1028
  %1037 = bitcast %struct._FcEdit* %1031 to i8*
  br label %1038

1038:                                             ; preds = %1022, %1036
  %1039 = phi i8* [ %1037, %1036 ], [ %1027, %1022 ]
  tail call void @free(i8* %1039) #9
  br label %1040

1040:                                             ; preds = %1038, %1016
  %1041 = bitcast %struct._FcRule* %1017 to i8*
  tail call void @free(i8* %1041) #9
  %1042 = icmp eq %struct._FcRule* %1019, null
  br i1 %1042, label %3152, label %1016

1043:                                             ; preds = %1010
  %1044 = load %struct._FcConfig*, %struct._FcConfig** %694, align 8
  %1045 = getelementptr inbounds %struct._FcConfig, %struct._FcConfig* %1044, i64 0, i32 6
  %1046 = load i32, i32* %1045, align 8
  %1047 = icmp slt i32 %1046, %1014
  br i1 %1047, label %1048, label %3152

1048:                                             ; preds = %1043
  store i32 %1014, i32* %1045, align 8
  br label %3152

1049:                                             ; preds = %19
  %1050 = getelementptr inbounds %struct._FcPStack, %struct._FcPStack* %17, i64 0, i32 2
  %1051 = load i8**, i8*** %1050, align 8
  %1052 = icmp eq i8** %1051, null
  br i1 %1052, label %1069, label %1053

1053:                                             ; preds = %1049
  %1054 = load i8*, i8** %1051, align 8
  %1055 = icmp eq i8* %1054, null
  br i1 %1055, label %1069, label %1056

1056:                                             ; preds = %1053, %1065
  %1057 = phi i8* [ %1067, %1065 ], [ %1054, %1053 ]
  %1058 = phi i8** [ %1066, %1065 ], [ %1051, %1053 ]
  %1059 = tail call i32 @strcmp(i8* nonnull %1057, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.77, i64 0, i64 0)) #12
  %1060 = icmp eq i32 %1059, 0
  br i1 %1060, label %1061, label %1065

1061:                                             ; preds = %1056
  store i8 0, i8* %1057, align 1
  %1062 = getelementptr inbounds i8*, i8** %1058, i64 1
  %1063 = load i8*, i8** %1062, align 8
  %1064 = load %struct._FcPStack*, %struct._FcPStack** %16, align 8
  br label %1069

1065:                                             ; preds = %1056
  %1066 = getelementptr inbounds i8*, i8** %1058, i64 2
  %1067 = load i8*, i8** %1066, align 8
  %1068 = icmp eq i8* %1067, null
  br i1 %1068, label %1069, label %1056

1069:                                             ; preds = %1065, %1061, %1053, %1049
  %1070 = phi %struct._FcPStack* [ %1064, %1061 ], [ %17, %1049 ], [ %17, %1053 ], [ %17, %1065 ]
  %1071 = phi i8* [ %1063, %1061 ], [ null, %1049 ], [ null, %1053 ], [ null, %1065 ]
  %1072 = getelementptr inbounds %struct._FcPStack, %struct._FcPStack* %1070, i64 0, i32 3
  %1073 = tail call i8* @FcStrBufDone(%struct._FcStrBuf* %1072) #9
  %1074 = icmp eq i8* %1073, null
  br i1 %1074, label %1075, label %1076

1075:                                             ; preds = %1069
  tail call void (%struct._FcConfigParse*, i32, i8*, ...) @FcConfigMessage(%struct._FcConfigParse* %15, i32 2, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.31, i64 0, i64 0)) #9
  br label %3152

1076:                                             ; preds = %1069
  %1077 = getelementptr inbounds i8, i8* %0, i64 40
  %1078 = bitcast i8* %1077 to %struct._FcRuleSet**
  %1079 = load %struct._FcRuleSet*, %struct._FcRuleSet** %1078, align 8
  tail call void @FcRuleSetAddDescription(%struct._FcRuleSet* %1079, i8* %1071, i8* nonnull %1073) #9
  tail call void @IA__FcStrFree(i8* nonnull %1073) #9
  br label %3152

1080:                                             ; preds = %19
  %1081 = getelementptr inbounds %struct._FcPStack, %struct._FcPStack* %17, i64 0, i32 3
  %1082 = tail call i8* @FcStrBufDoneStatic(%struct._FcStrBuf* %1081) #9
  %1083 = icmp eq i8* %1082, null
  br i1 %1083, label %1084, label %1085

1084:                                             ; preds = %1080
  tail call void (%struct._FcConfigParse*, i32, i8*, ...) @FcConfigMessage(%struct._FcConfigParse* %15, i32 2, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.31, i64 0, i64 0)) #9
  br label %3152

1085:                                             ; preds = %1080
  %1086 = load i8, i8* %1082, align 1
  %1087 = icmp eq i8 %1086, 0
  br i1 %1087, label %1088, label %1089

1088:                                             ; preds = %1085
  tail call void (%struct._FcConfigParse*, i32, i8*, ...) @FcConfigMessage(%struct._FcConfigParse* %15, i32 1, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.78, i64 0, i64 0)) #9
  br label %3152

1089:                                             ; preds = %1085
  %1090 = load %struct._FcPStack*, %struct._FcPStack** %16, align 8
  %1091 = icmp eq %struct._FcPStack* %1090, null
  br i1 %1091, label %1112, label %1092

1092:                                             ; preds = %1089
  %1093 = getelementptr inbounds %struct._FcPStack, %struct._FcPStack* %1090, i64 0, i32 2
  %1094 = load i8**, i8*** %1093, align 8
  %1095 = icmp eq i8** %1094, null
  br i1 %1095, label %1112, label %1096

1096:                                             ; preds = %1092
  %1097 = load i8*, i8** %1094, align 8
  %1098 = icmp eq i8* %1097, null
  br i1 %1098, label %1112, label %1099

1099:                                             ; preds = %1096, %1104
  %1100 = phi i8* [ %1106, %1104 ], [ %1097, %1096 ]
  %1101 = phi i8** [ %1105, %1104 ], [ %1094, %1096 ]
  %1102 = tail call i32 @strcmp(i8* nonnull %1100, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.79, i64 0, i64 0)) #12
  %1103 = icmp eq i32 %1102, 0
  br i1 %1103, label %1108, label %1104

1104:                                             ; preds = %1099
  %1105 = getelementptr inbounds i8*, i8** %1101, i64 2
  %1106 = load i8*, i8** %1105, align 8
  %1107 = icmp eq i8* %1106, null
  br i1 %1107, label %1112, label %1099

1108:                                             ; preds = %1099
  store i8 0, i8* %1100, align 1
  %1109 = getelementptr inbounds i8*, i8** %1101, i64 1
  %1110 = load i8*, i8** %1109, align 8
  %1111 = icmp eq i8* %1110, null
  br i1 %1111, label %1112, label %1113

1112:                                             ; preds = %1104, %1108, %1096, %1092, %1089
  tail call void (%struct._FcConfigParse*, i32, i8*, ...) @FcConfigMessage(%struct._FcConfigParse* %15, i32 1, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.80, i64 0, i64 0)) #9
  br label %3152

1113:                                             ; preds = %1108
  %1114 = load %struct._FcPStack*, %struct._FcPStack** %16, align 8
  %1115 = icmp eq %struct._FcPStack* %1114, null
  br i1 %1115, label %1159, label %1116

1116:                                             ; preds = %1113
  %1117 = getelementptr inbounds %struct._FcPStack, %struct._FcPStack* %1114, i64 0, i32 2
  %1118 = load i8**, i8*** %1117, align 8
  %1119 = icmp eq i8** %1118, null
  br i1 %1119, label %1159, label %1120

1120:                                             ; preds = %1116
  %1121 = load i8*, i8** %1118, align 8
  %1122 = icmp eq i8* %1121, null
  br i1 %1122, label %1159, label %1123

1123:                                             ; preds = %1120, %1132
  %1124 = phi i8* [ %1134, %1132 ], [ %1121, %1120 ]
  %1125 = phi i8** [ %1133, %1132 ], [ %1118, %1120 ]
  %1126 = tail call i32 @strcmp(i8* nonnull %1124, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.35, i64 0, i64 0)) #12
  %1127 = icmp eq i32 %1126, 0
  br i1 %1127, label %1128, label %1132

1128:                                             ; preds = %1123
  store i8 0, i8* %1124, align 1
  %1129 = getelementptr inbounds i8*, i8** %1125, i64 1
  %1130 = load i8*, i8** %1129, align 8
  %1131 = load %struct._FcPStack*, %struct._FcPStack** %16, align 8
  br label %1136

1132:                                             ; preds = %1123
  %1133 = getelementptr inbounds i8*, i8** %1125, i64 2
  %1134 = load i8*, i8** %1133, align 8
  %1135 = icmp eq i8* %1134, null
  br i1 %1135, label %1136, label %1123

1136:                                             ; preds = %1132, %1128
  %1137 = phi %struct._FcPStack* [ %1131, %1128 ], [ %1114, %1132 ]
  %1138 = phi i8* [ %1130, %1128 ], [ null, %1132 ]
  %1139 = icmp eq %struct._FcPStack* %1137, null
  br i1 %1139, label %1159, label %1140

1140:                                             ; preds = %1136
  %1141 = getelementptr inbounds %struct._FcPStack, %struct._FcPStack* %1137, i64 0, i32 2
  %1142 = load i8**, i8*** %1141, align 8
  %1143 = icmp eq i8** %1142, null
  br i1 %1143, label %1159, label %1144

1144:                                             ; preds = %1140
  %1145 = load i8*, i8** %1142, align 8
  %1146 = icmp eq i8* %1145, null
  br i1 %1146, label %1159, label %1147

1147:                                             ; preds = %1144, %1155
  %1148 = phi i8* [ %1157, %1155 ], [ %1145, %1144 ]
  %1149 = phi i8** [ %1156, %1155 ], [ %1142, %1144 ]
  %1150 = tail call i32 @strcmp(i8* nonnull %1148, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.36, i64 0, i64 0)) #12
  %1151 = icmp eq i32 %1150, 0
  br i1 %1151, label %1152, label %1155

1152:                                             ; preds = %1147
  store i8 0, i8* %1148, align 1
  %1153 = getelementptr inbounds i8*, i8** %1149, i64 1
  %1154 = load i8*, i8** %1153, align 8
  br label %1159

1155:                                             ; preds = %1147
  %1156 = getelementptr inbounds i8*, i8** %1149, i64 2
  %1157 = load i8*, i8** %1156, align 8
  %1158 = icmp eq i8* %1157, null
  br i1 %1158, label %1159, label %1147

1159:                                             ; preds = %1155, %1120, %1116, %1152, %1144, %1140, %1136, %1113
  %1160 = phi i8* [ %1138, %1152 ], [ %1138, %1136 ], [ %1138, %1140 ], [ %1138, %1144 ], [ null, %1113 ], [ null, %1116 ], [ null, %1120 ], [ %1138, %1155 ]
  %1161 = phi i8* [ %1154, %1152 ], [ null, %1136 ], [ null, %1140 ], [ null, %1144 ], [ null, %1113 ], [ null, %1116 ], [ null, %1120 ], [ null, %1155 ]
  %1162 = tail call fastcc i8* @_get_real_path_from_prefix(%struct._FcConfigParse* %15, i8* nonnull %1082, i8* %1160) #9
  %1163 = icmp eq i8* %1162, null
  br i1 %1163, label %1188, label %1164

1164:                                             ; preds = %1159
  %1165 = load i8, i8* %1162, align 1
  %1166 = icmp eq i8 %1165, 0
  br i1 %1166, label %1185, label %1167

1167:                                             ; preds = %1164
  %1168 = getelementptr inbounds i8, i8* %0, i64 4552
  %1169 = bitcast i8* %1168 to i32*
  %1170 = load i32, i32* %1169, align 8
  %1171 = icmp eq i32 %1170, 0
  br i1 %1171, label %1172, label %1185

1172:                                             ; preds = %1167
  %1173 = tail call i32 @FcStrUsesHome(i8* nonnull %1162) #9
  %1174 = icmp eq i32 %1173, 0
  br i1 %1174, label %1178, label %1175

1175:                                             ; preds = %1172
  %1176 = tail call i8* @IA__FcConfigHome() #9
  %1177 = icmp eq i8* %1176, null
  br i1 %1177, label %1185, label %1178

1178:                                             ; preds = %1175, %1172
  %1179 = getelementptr inbounds i8, i8* %0, i64 32
  %1180 = bitcast i8* %1179 to %struct._FcConfig**
  %1181 = load %struct._FcConfig*, %struct._FcConfig** %1180, align 8
  %1182 = tail call i32 @FcConfigAddFontDir(%struct._FcConfig* %1181, i8* nonnull %1162, i8* nonnull %1110, i8* %1161) #9
  %1183 = icmp eq i32 %1182, 0
  br i1 %1183, label %1184, label %1185

1184:                                             ; preds = %1178
  tail call void (%struct._FcConfigParse*, i32, i8*, ...) @FcConfigMessage(%struct._FcConfigParse* %15, i32 2, i8* getelementptr inbounds ([53 x i8], [53 x i8]* @.str.81, i64 0, i64 0), i8* nonnull %1162, i8* nonnull %1110) #9
  br label %1185

1185:                                             ; preds = %1184, %1178, %1175, %1167, %1164
  %1186 = load %struct._FcPStack*, %struct._FcPStack** %16, align 8
  %1187 = getelementptr inbounds %struct._FcPStack, %struct._FcPStack* %1186, i64 0, i32 3
  tail call void @FcStrBufDestroy(%struct._FcStrBuf* %1187) #9
  tail call void @IA__FcStrFree(i8* nonnull %1162) #9
  br label %3152

1188:                                             ; preds = %1159
  %1189 = load %struct._FcPStack*, %struct._FcPStack** %16, align 8
  %1190 = getelementptr inbounds %struct._FcPStack, %struct._FcPStack* %1189, i64 0, i32 3
  tail call void @FcStrBufDestroy(%struct._FcStrBuf* %1190) #9
  br label %3152

1191:                                             ; preds = %19
  %1192 = getelementptr inbounds i8, i8* %0, i64 4552
  %1193 = bitcast i8* %1192 to i32*
  %1194 = load i32, i32* %1193, align 8
  %1195 = icmp eq i32 %1194, 0
  br i1 %1195, label %1196, label %3152

1196:                                             ; preds = %1191
  %1197 = getelementptr inbounds i8, i8* %0, i64 32
  %1198 = bitcast i8* %1197 to %struct._FcConfig**
  %1199 = load %struct._FcConfig*, %struct._FcConfig** %1198, align 8
  %1200 = tail call i32 @FcConfigResetFontDirs(%struct._FcConfig* %1199) #9
  %1201 = icmp eq i32 %1200, 0
  br i1 %1201, label %1202, label %3152

1202:                                             ; preds = %1196
  tail call void (%struct._FcConfigParse*, i32, i8*, ...) @FcConfigMessage(%struct._FcConfigParse* %15, i32 2, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.82, i64 0, i64 0)) #9
  br label %3152

1203:                                             ; preds = %19
  %1204 = getelementptr inbounds i8, i8* %0, i64 8
  %1205 = bitcast i8* %1204 to %struct._FcVStack**
  %1206 = load %struct._FcVStack*, %struct._FcVStack** %1205, align 8
  %1207 = icmp eq %struct._FcVStack* %1206, null
  br i1 %1207, label %3152, label %1208

1208:                                             ; preds = %1203, %1214
  %1209 = phi %struct._FcVStack* [ %1217, %1214 ], [ %1206, %1203 ]
  %1210 = phi i32 [ %1215, %1214 ], [ 0, %1203 ]
  %1211 = getelementptr inbounds %struct._FcVStack, %struct._FcVStack* %1209, i64 0, i32 1
  %1212 = load %struct._FcPStack*, %struct._FcPStack** %1211, align 8
  %1213 = icmp eq %struct._FcPStack* %1212, %17
  br i1 %1213, label %1214, label %1219

1214:                                             ; preds = %1208
  %1215 = add nuw nsw i32 %1210, 1
  %1216 = getelementptr inbounds %struct._FcVStack, %struct._FcVStack* %1209, i64 0, i32 0
  %1217 = load %struct._FcVStack*, %struct._FcVStack** %1216, align 8
  %1218 = icmp eq %struct._FcVStack* %1217, null
  br i1 %1218, label %1221, label %1208

1219:                                             ; preds = %1208
  %1220 = icmp eq i32 %1210, 0
  br i1 %1220, label %3152, label %1221

1221:                                             ; preds = %1214, %1219
  %1222 = phi i32 [ %1210, %1219 ], [ %1215, %1214 ]
  %1223 = getelementptr inbounds i8, i8* %0, i64 32
  %1224 = bitcast i8* %1223 to %struct._FcConfig**
  br label %1225

1225:                                             ; preds = %1254, %1221
  %1226 = phi %struct._FcVStack* [ %1206, %1221 ], [ %1255, %1254 ]
  %1227 = phi i32 [ %1222, %1221 ], [ %1228, %1254 ]
  %1228 = add nsw i32 %1227, -1
  %1229 = icmp ne %struct._FcVStack* %1226, null
  %1230 = icmp sgt i32 %1228, 0
  %1231 = and i1 %1229, %1230
  br i1 %1231, label %1232, label %1241

1232:                                             ; preds = %1225, %1232
  %1233 = phi %struct._FcVStack* [ %1237, %1232 ], [ %1226, %1225 ]
  %1234 = phi i32 [ %1235, %1232 ], [ %1228, %1225 ]
  %1235 = add nsw i32 %1234, -1
  %1236 = getelementptr inbounds %struct._FcVStack, %struct._FcVStack* %1233, i64 0, i32 0
  %1237 = load %struct._FcVStack*, %struct._FcVStack** %1236, align 8
  %1238 = icmp ne %struct._FcVStack* %1237, null
  %1239 = icmp sgt i32 %1235, 0
  %1240 = and i1 %1239, %1238
  br i1 %1240, label %1232, label %1241

1241:                                             ; preds = %1232, %1225
  %1242 = phi %struct._FcVStack* [ %1226, %1225 ], [ %1237, %1232 ]
  %1243 = getelementptr inbounds %struct._FcVStack, %struct._FcVStack* %1242, i64 0, i32 2
  %1244 = load i32, i32* %1243, align 8
  %1245 = icmp eq i32 %1244, 10
  br i1 %1245, label %1247, label %1246

1246:                                             ; preds = %1241
  tail call void (%struct._FcConfigParse*, i32, i8*, ...) @FcConfigMessage(%struct._FcConfigParse* %15, i32 1, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.83, i64 0, i64 0)) #9
  br label %1253

1247:                                             ; preds = %1241
  %1248 = getelementptr inbounds %struct._FcVStack, %struct._FcVStack* %1242, i64 0, i32 3
  %1249 = bitcast %union.anon.1* %1248 to i32*
  %1250 = load i32, i32* %1249, align 8
  %1251 = load %struct._FcConfig*, %struct._FcConfig** %1224, align 8
  %1252 = getelementptr inbounds %struct._FcConfig, %struct._FcConfig* %1251, i64 0, i32 13
  store i32 %1250, i32* %1252, align 8
  br label %1253

1253:                                             ; preds = %1247, %1246
  br i1 %1230, label %1254, label %3152

1254:                                             ; preds = %1253
  %1255 = load %struct._FcVStack*, %struct._FcVStack** %1205, align 8
  br label %1225

1256:                                             ; preds = %19
  tail call fastcc void @FcParseFamilies(%struct._FcConfigParse* %15, i32 7)
  br label %3152

1257:                                             ; preds = %19
  tail call fastcc void @FcParseFamilies(%struct._FcConfigParse* %15, i32 8)
  br label %3152

1258:                                             ; preds = %19
  tail call fastcc void @FcParseFamilies(%struct._FcConfigParse* %15, i32 9)
  br label %3152

1259:                                             ; preds = %19
  %1260 = getelementptr inbounds %struct._FcPStack, %struct._FcPStack* %17, i64 0, i32 3
  %1261 = tail call i8* @FcStrBufDoneStatic(%struct._FcStrBuf* %1260) #9
  %1262 = icmp eq i8* %1261, null
  br i1 %1262, label %1263, label %1264

1263:                                             ; preds = %1259
  tail call void (%struct._FcConfigParse*, i32, i8*, ...) @FcConfigMessage(%struct._FcConfigParse* %15, i32 2, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.31, i64 0, i64 0)) #9
  br label %3152

1264:                                             ; preds = %1259
  %1265 = getelementptr inbounds i8, i8* %0, i64 32
  %1266 = bitcast i8* %1265 to %struct._FcConfig**
  %1267 = load %struct._FcConfig*, %struct._FcConfig** %1266, align 8
  %1268 = tail call %struct._FcExpr* @FcConfigAllocExpr(%struct._FcConfig* %1267) #9
  %1269 = icmp eq %struct._FcExpr* %1268, null
  br i1 %1269, label %1270, label %1273

1270:                                             ; preds = %1264
  %1271 = load %struct._FcPStack*, %struct._FcPStack** %16, align 8
  %1272 = getelementptr inbounds %struct._FcPStack, %struct._FcPStack* %1271, i64 0, i32 3
  tail call void @FcStrBufDestroy(%struct._FcStrBuf* %1272) #9
  br label %3152

1273:                                             ; preds = %1264
  %1274 = getelementptr inbounds %struct._FcExpr, %struct._FcExpr* %1268, i64 0, i32 0
  store i32 2, i32* %1274, align 8
  %1275 = tail call noalias i8* @strdup(i8* nonnull %1261) #9
  %1276 = getelementptr inbounds %struct._FcExpr, %struct._FcExpr* %1268, i64 0, i32 1
  %1277 = bitcast %union.anon* %1276 to i8**
  store i8* %1275, i8** %1277, align 8
  %1278 = load %struct._FcPStack*, %struct._FcPStack** %16, align 8
  %1279 = getelementptr inbounds %struct._FcPStack, %struct._FcPStack* %1278, i64 0, i32 3
  tail call void @FcStrBufDestroy(%struct._FcStrBuf* %1279) #9
  %1280 = getelementptr inbounds i8, i8* %0, i64 2496
  %1281 = bitcast i8* %1280 to i32*
  %1282 = load i32, i32* %1281, align 8
  %1283 = icmp ult i32 %1282, 64
  br i1 %1283, label %1284, label %1288

1284:                                             ; preds = %1273
  %1285 = zext i32 %1282 to i64
  %1286 = add nuw nsw i32 %1282, 1
  store i32 %1286, i32* %1281, align 8
  %1287 = getelementptr inbounds %struct._FcConfigParse, %struct._FcConfigParse* %15, i64 0, i32 10, i64 %1285
  br label %1292

1288:                                             ; preds = %1273
  %1289 = tail call noalias i8* @malloc(i64 32) #9
  %1290 = bitcast i8* %1289 to %struct._FcVStack*
  %1291 = icmp eq i8* %1289, null
  br i1 %1291, label %3152, label %1292

1292:                                             ; preds = %1288, %1284
  %1293 = phi %struct._FcVStack* [ %1287, %1284 ], [ %1290, %1288 ]
  %1294 = getelementptr inbounds %struct._FcVStack, %struct._FcVStack* %1293, i64 0, i32 2
  store i32 0, i32* %1294, align 8
  %1295 = getelementptr inbounds %struct._FcVStack, %struct._FcVStack* %1293, i64 0, i32 0
  store %struct._FcVStack* null, %struct._FcVStack** %1295, align 8
  %1296 = getelementptr inbounds i8, i8* %0, i64 8
  %1297 = bitcast i8* %1296 to %struct._FcVStack**
  %1298 = bitcast i8* %1296 to i64*
  %1299 = load i64, i64* %1298, align 8
  %1300 = bitcast %struct._FcVStack* %1293 to i64*
  store i64 %1299, i64* %1300, align 8
  %1301 = load %struct._FcPStack*, %struct._FcPStack** %16, align 8
  %1302 = icmp eq %struct._FcPStack* %1301, null
  br i1 %1302, label %1306, label %1303

1303:                                             ; preds = %1292
  %1304 = getelementptr inbounds %struct._FcPStack, %struct._FcPStack* %1301, i64 0, i32 0
  %1305 = load %struct._FcPStack*, %struct._FcPStack** %1304, align 8
  br label %1306

1306:                                             ; preds = %1303, %1292
  %1307 = phi %struct._FcPStack* [ %1305, %1303 ], [ null, %1292 ]
  %1308 = getelementptr inbounds %struct._FcVStack, %struct._FcVStack* %1293, i64 0, i32 1
  store %struct._FcPStack* %1307, %struct._FcPStack** %1308, align 8
  store %struct._FcVStack* %1293, %struct._FcVStack** %1297, align 8
  %1309 = icmp eq %struct._FcVStack* %1293, null
  br i1 %1309, label %3152, label %1310

1310:                                             ; preds = %1306
  %1311 = getelementptr inbounds %struct._FcVStack, %struct._FcVStack* %1293, i64 0, i32 3
  %1312 = bitcast %union.anon.1* %1311 to %struct._FcExpr**
  store %struct._FcExpr* %1268, %struct._FcExpr** %1312, align 8
  store i32 2, i32* %1294, align 8
  br label %3152

1313:                                             ; preds = %19
  %1314 = getelementptr inbounds %struct._FcPStack, %struct._FcPStack* %17, i64 0, i32 2
  %1315 = load i8**, i8*** %1314, align 8
  %1316 = icmp eq i8** %1315, null
  br i1 %1316, label %1346, label %1317

1317:                                             ; preds = %1313
  %1318 = load i8*, i8** %1315, align 8
  %1319 = icmp eq i8* %1318, null
  br i1 %1319, label %1346, label %1320

1320:                                             ; preds = %1317, %1325
  %1321 = phi i8* [ %1327, %1325 ], [ %1318, %1317 ]
  %1322 = phi i8** [ %1326, %1325 ], [ %1315, %1317 ]
  %1323 = tail call i32 @strcmp(i8* nonnull %1321, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.50, i64 0, i64 0)) #12
  %1324 = icmp eq i32 %1323, 0
  br i1 %1324, label %1329, label %1325

1325:                                             ; preds = %1320
  %1326 = getelementptr inbounds i8*, i8** %1322, i64 2
  %1327 = load i8*, i8** %1326, align 8
  %1328 = icmp eq i8* %1327, null
  br i1 %1328, label %1346, label %1320

1329:                                             ; preds = %1320
  store i8 0, i8* %1321, align 1
  %1330 = getelementptr inbounds i8*, i8** %1322, i64 1
  %1331 = load i8*, i8** %1330, align 8
  %1332 = icmp eq i8* %1331, null
  br i1 %1332, label %1346, label %1333

1333:                                             ; preds = %1329
  %1334 = tail call i32 @strcmp(i8* nonnull %1331, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.51, i64 0, i64 0)) #12
  %1335 = icmp eq i32 %1334, 0
  br i1 %1335, label %1346, label %1336

1336:                                             ; preds = %1333
  %1337 = tail call i32 @strcmp(i8* nonnull %1331, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.52, i64 0, i64 0)) #12
  %1338 = icmp eq i32 %1337, 0
  br i1 %1338, label %1346, label %1339

1339:                                             ; preds = %1336
  %1340 = tail call i32 @strcmp(i8* nonnull %1331, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.8, i64 0, i64 0)) #12
  %1341 = icmp eq i32 %1340, 0
  br i1 %1341, label %1346, label %1342

1342:                                             ; preds = %1339
  %1343 = tail call i32 @strcmp(i8* nonnull %1331, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.39, i64 0, i64 0)) #12
  %1344 = icmp eq i32 %1343, 0
  br i1 %1344, label %1346, label %1345

1345:                                             ; preds = %1342
  tail call void (%struct._FcConfigParse*, i32, i8*, ...) @FcConfigMessage(%struct._FcConfigParse* %15, i32 1, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.85, i64 0, i64 0), i8* nonnull %1331) #9
  br label %3152

1346:                                             ; preds = %1325, %1342, %1339, %1336, %1333, %1329, %1317, %1313
  %1347 = phi i32 [ -1, %1317 ], [ -1, %1313 ], [ -1, %1342 ], [ 2, %1339 ], [ 1, %1336 ], [ 0, %1333 ], [ -1, %1329 ], [ -1, %1325 ]
  %1348 = load %struct._FcPStack*, %struct._FcPStack** %16, align 8
  %1349 = icmp eq %struct._FcPStack* %1348, null
  br i1 %1349, label %1407, label %1350

1350:                                             ; preds = %1346
  %1351 = getelementptr inbounds %struct._FcPStack, %struct._FcPStack* %1348, i64 0, i32 2
  %1352 = load i8**, i8*** %1351, align 8
  %1353 = icmp eq i8** %1352, null
  br i1 %1353, label %1383, label %1354

1354:                                             ; preds = %1350
  %1355 = load i8*, i8** %1352, align 8
  %1356 = icmp eq i8* %1355, null
  br i1 %1356, label %1383, label %1357

1357:                                             ; preds = %1354, %1362
  %1358 = phi i8* [ %1364, %1362 ], [ %1355, %1354 ]
  %1359 = phi i8** [ %1363, %1362 ], [ %1352, %1354 ]
  %1360 = tail call i32 @strcmp(i8* nonnull %1358, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.86, i64 0, i64 0)) #12
  %1361 = icmp eq i32 %1360, 0
  br i1 %1361, label %1366, label %1362

1362:                                             ; preds = %1357
  %1363 = getelementptr inbounds i8*, i8** %1359, i64 2
  %1364 = load i8*, i8** %1363, align 8
  %1365 = icmp eq i8* %1364, null
  br i1 %1365, label %1383, label %1357

1366:                                             ; preds = %1357
  store i8 0, i8* %1358, align 1
  %1367 = getelementptr inbounds i8*, i8** %1359, i64 1
  %1368 = load i8*, i8** %1367, align 8
  %1369 = icmp eq i8* %1368, null
  br i1 %1369, label %1383, label %1370

1370:                                             ; preds = %1366
  %1371 = tail call i32 @strcmp(i8* nonnull %1368, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.87, i64 0, i64 0)) #12
  %1372 = icmp eq i32 %1371, 0
  br i1 %1372, label %1383, label %1373

1373:                                             ; preds = %1370
  %1374 = tail call i32 @strcmp(i8* nonnull %1368, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.88, i64 0, i64 0)) #12
  %1375 = icmp eq i32 %1374, 0
  br i1 %1375, label %1383, label %1376

1376:                                             ; preds = %1373
  %1377 = tail call i32 @strcmp(i8* nonnull %1368, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.89, i64 0, i64 0)) #12
  %1378 = icmp eq i32 %1377, 0
  br i1 %1378, label %1383, label %1379

1379:                                             ; preds = %1376
  %1380 = tail call i32 @strcmp(i8* nonnull %1368, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.90, i64 0, i64 0)) #12
  %1381 = icmp eq i32 %1380, 0
  br i1 %1381, label %1383, label %1382

1382:                                             ; preds = %1379
  tail call void (%struct._FcConfigParse*, i32, i8*, ...) @FcConfigMessage(%struct._FcConfigParse* %15, i32 1, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.91, i64 0, i64 0), i8* nonnull %1368) #9
  br label %3152

1383:                                             ; preds = %1362, %1379, %1376, %1373, %1370, %1366, %1354, %1350
  %1384 = phi i32 [ 0, %1354 ], [ 0, %1350 ], [ 3, %1379 ], [ 2, %1376 ], [ 1, %1373 ], [ 0, %1370 ], [ 0, %1366 ], [ 0, %1362 ]
  %1385 = load %struct._FcPStack*, %struct._FcPStack** %16, align 8
  %1386 = icmp eq %struct._FcPStack* %1385, null
  br i1 %1386, label %1407, label %1387

1387:                                             ; preds = %1383
  %1388 = getelementptr inbounds %struct._FcPStack, %struct._FcPStack* %1385, i64 0, i32 2
  %1389 = load i8**, i8*** %1388, align 8
  %1390 = icmp eq i8** %1389, null
  br i1 %1390, label %1407, label %1391

1391:                                             ; preds = %1387
  %1392 = load i8*, i8** %1389, align 8
  %1393 = icmp eq i8* %1392, null
  br i1 %1393, label %1407, label %1394

1394:                                             ; preds = %1391, %1399
  %1395 = phi i8* [ %1401, %1399 ], [ %1392, %1391 ]
  %1396 = phi i8** [ %1400, %1399 ], [ %1389, %1391 ]
  %1397 = tail call i32 @strcmp(i8* nonnull %1395, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.92, i64 0, i64 0)) #12
  %1398 = icmp eq i32 %1397, 0
  br i1 %1398, label %1403, label %1399

1399:                                             ; preds = %1394
  %1400 = getelementptr inbounds i8*, i8** %1396, i64 2
  %1401 = load i8*, i8** %1400, align 8
  %1402 = icmp eq i8* %1401, null
  br i1 %1402, label %1407, label %1394

1403:                                             ; preds = %1394
  store i8 0, i8* %1395, align 1
  %1404 = getelementptr inbounds i8*, i8** %1396, i64 1
  %1405 = load i8*, i8** %1404, align 8
  %1406 = icmp eq i8* %1405, null
  br i1 %1406, label %1407, label %1408

1407:                                             ; preds = %1399, %1403, %1391, %1387, %1383, %1346
  tail call void (%struct._FcConfigParse*, i32, i8*, ...) @FcConfigMessage(%struct._FcConfigParse* %15, i32 1, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.93, i64 0, i64 0)) #9
  br label %3152

1408:                                             ; preds = %1403
  %1409 = load %struct._FcPStack*, %struct._FcPStack** %16, align 8
  %1410 = icmp eq %struct._FcPStack* %1409, null
  br i1 %1410, label %1468, label %1411

1411:                                             ; preds = %1408
  %1412 = getelementptr inbounds %struct._FcPStack, %struct._FcPStack* %1409, i64 0, i32 2
  %1413 = load i8**, i8*** %1412, align 8
  %1414 = icmp eq i8** %1413, null
  br i1 %1414, label %1435, label %1415

1415:                                             ; preds = %1411
  %1416 = load i8*, i8** %1413, align 8
  %1417 = icmp eq i8* %1416, null
  br i1 %1417, label %1435, label %1418

1418:                                             ; preds = %1415, %1423
  %1419 = phi i8* [ %1425, %1423 ], [ %1416, %1415 ]
  %1420 = phi i8** [ %1424, %1423 ], [ %1413, %1415 ]
  %1421 = tail call i32 @strcmp(i8* nonnull %1419, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.94, i64 0, i64 0)) #12
  %1422 = icmp eq i32 %1421, 0
  br i1 %1422, label %1427, label %1423

1423:                                             ; preds = %1418
  %1424 = getelementptr inbounds i8*, i8** %1420, i64 2
  %1425 = load i8*, i8** %1424, align 8
  %1426 = icmp eq i8* %1425, null
  br i1 %1426, label %1435, label %1418

1427:                                             ; preds = %1418
  store i8 0, i8* %1419, align 1
  %1428 = getelementptr inbounds i8*, i8** %1420, i64 1
  %1429 = load i8*, i8** %1428, align 8
  %1430 = icmp eq i8* %1429, null
  br i1 %1430, label %1435, label %1431

1431:                                             ; preds = %1427
  %1432 = tail call fastcc i32 @FcConfigLexOp(i8* nonnull %1429, %struct._FcOpMap* getelementptr inbounds ([8 x %struct._FcOpMap], [8 x %struct._FcOpMap]* @fcCompareOps, i64 0, i64 0)) #9
  %1433 = icmp eq i32 %1432, 41
  br i1 %1433, label %1434, label %1435

1434:                                             ; preds = %1431
  tail call void (%struct._FcConfigParse*, i32, i8*, ...) @FcConfigMessage(%struct._FcConfigParse* %15, i32 1, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.95, i64 0, i64 0), i8* nonnull %1429) #9
  br label %3152

1435:                                             ; preds = %1423, %1431, %1427, %1415, %1411
  %1436 = phi i32 [ 22, %1415 ], [ 22, %1411 ], [ 22, %1427 ], [ %1432, %1431 ], [ 22, %1423 ]
  %1437 = load %struct._FcPStack*, %struct._FcPStack** %16, align 8
  %1438 = icmp eq %struct._FcPStack* %1437, null
  br i1 %1438, label %1468, label %1439

1439:                                             ; preds = %1435
  %1440 = getelementptr inbounds %struct._FcPStack, %struct._FcPStack* %1437, i64 0, i32 2
  %1441 = load i8**, i8*** %1440, align 8
  %1442 = icmp eq i8** %1441, null
  br i1 %1442, label %1468, label %1443

1443:                                             ; preds = %1439
  %1444 = load i8*, i8** %1441, align 8
  %1445 = icmp eq i8* %1444, null
  br i1 %1445, label %1468, label %1446

1446:                                             ; preds = %1443, %1451
  %1447 = phi i8* [ %1453, %1451 ], [ %1444, %1443 ]
  %1448 = phi i8** [ %1452, %1451 ], [ %1441, %1443 ]
  %1449 = tail call i32 @strcmp(i8* nonnull %1447, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.96, i64 0, i64 0)) #12
  %1450 = icmp eq i32 %1449, 0
  br i1 %1450, label %1455, label %1451

1451:                                             ; preds = %1446
  %1452 = getelementptr inbounds i8*, i8** %1448, i64 2
  %1453 = load i8*, i8** %1452, align 8
  %1454 = icmp eq i8* %1453, null
  br i1 %1454, label %1468, label %1446

1455:                                             ; preds = %1446
  store i8 0, i8* %1447, align 1
  %1456 = getelementptr inbounds i8*, i8** %1448, i64 1
  %1457 = load i8*, i8** %1456, align 8
  %1458 = icmp eq i8* %1457, null
  br i1 %1458, label %1468, label %1459

1459:                                             ; preds = %1455
  %1460 = bitcast i32* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %1460) #9
  store i32 0, i32* %11, align 4
  %1461 = call i32 @FcNameBool(i8* nonnull %1457, i32* nonnull %11) #9
  %1462 = icmp eq i32 %1461, 0
  br i1 %1462, label %1463, label %1464

1463:                                             ; preds = %1459
  call void (%struct._FcConfigParse*, i32, i8*, ...) @FcConfigMessage(%struct._FcConfigParse* %15, i32 1, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.97, i64 0, i64 0), i8* nonnull %1457) #9
  br label %1464

1464:                                             ; preds = %1463, %1459
  %1465 = load i32, i32* %11, align 4
  %1466 = icmp eq i32 %1465, 0
  %1467 = select i1 %1466, i32 0, i32 65536
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %1460) #9
  br label %1468

1468:                                             ; preds = %1451, %1464, %1455, %1443, %1439, %1435, %1408
  %1469 = phi i32 [ %1436, %1464 ], [ %1436, %1455 ], [ %1436, %1443 ], [ %1436, %1439 ], [ %1436, %1435 ], [ 22, %1408 ], [ %1436, %1451 ]
  %1470 = phi i32 [ %1467, %1464 ], [ 0, %1455 ], [ 0, %1443 ], [ 0, %1439 ], [ 0, %1435 ], [ 0, %1408 ], [ 0, %1451 ]
  %1471 = call fastcc %struct._FcExpr* @FcPopBinary(%struct._FcConfigParse* %15, i32 36) #9
  %1472 = icmp eq %struct._FcExpr* %1471, null
  br i1 %1472, label %1473, label %1474

1473:                                             ; preds = %1468
  call void (%struct._FcConfigParse*, i32, i8*, ...) @FcConfigMessage(%struct._FcConfigParse* %15, i32 1, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.98, i64 0, i64 0)) #9
  br label %3152

1474:                                             ; preds = %1468
  %1475 = getelementptr inbounds %struct._FcExpr, %struct._FcExpr* %1471, i64 0, i32 0
  %1476 = load i32, i32* %1475, align 8
  %1477 = icmp eq i32 %1476, 36
  br i1 %1477, label %1478, label %1479

1478:                                             ; preds = %1474
  call void (%struct._FcConfigParse*, i32, i8*, ...) @FcConfigMessage(%struct._FcConfigParse* %15, i32 1, i8* getelementptr inbounds ([78 x i8], [78 x i8]* @.str.99, i64 0, i64 0)) #9
  br label %1479

1479:                                             ; preds = %1478, %1474
  %1480 = call noalias i8* @malloc(i64 24) #9
  %1481 = icmp eq i8* %1480, null
  br i1 %1481, label %1501, label %1482

1482:                                             ; preds = %1479
  %1483 = and i32 %1469, 65535
  %1484 = or i32 %1483, %1470
  %1485 = bitcast i8* %1480 to i32*
  store i32 %1347, i32* %1485, align 8
  %1486 = getelementptr inbounds i8, i8* %1480, i64 4
  %1487 = bitcast i8* %1486 to i32*
  store i32 %1384, i32* %1487, align 4
  %1488 = call i32 @FcObjectFromName(i8* nonnull %1405) #9
  %1489 = getelementptr inbounds i8, i8* %1480, i64 8
  %1490 = bitcast i8* %1489 to i32*
  store i32 %1488, i32* %1490, align 8
  %1491 = getelementptr inbounds i8, i8* %1480, i64 12
  %1492 = bitcast i8* %1491 to i32*
  store i32 %1484, i32* %1492, align 4
  %1493 = getelementptr inbounds i8, i8* %1480, i64 16
  %1494 = bitcast i8* %1493 to %struct._FcExpr**
  store %struct._FcExpr* %1471, %struct._FcExpr** %1494, align 8
  %1495 = call i8* @FcObjectName(i32 %1488) #9
  %1496 = call %struct._FcObjectType* @IA__FcNameGetObjectType(i8* %1495) #9
  %1497 = icmp eq %struct._FcObjectType* %1496, null
  br i1 %1497, label %1502, label %1498

1498:                                             ; preds = %1482
  %1499 = getelementptr inbounds %struct._FcObjectType, %struct._FcObjectType* %1496, i64 0, i32 1
  %1500 = load i32, i32* %1499, align 8
  call fastcc void @FcTypecheckExpr(%struct._FcConfigParse* %15, %struct._FcExpr* nonnull %1471, i32 %1500) #9
  br label %1502

1501:                                             ; preds = %1479
  call void (%struct._FcConfigParse*, i32, i8*, ...) @FcConfigMessage(%struct._FcConfigParse* %15, i32 2, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.31, i64 0, i64 0)) #9
  br label %3152

1502:                                             ; preds = %1498, %1482
  %1503 = getelementptr inbounds i8, i8* %0, i64 2496
  %1504 = bitcast i8* %1503 to i32*
  %1505 = load i32, i32* %1504, align 8
  %1506 = icmp ult i32 %1505, 64
  br i1 %1506, label %1507, label %1511

1507:                                             ; preds = %1502
  %1508 = zext i32 %1505 to i64
  %1509 = add nuw nsw i32 %1505, 1
  store i32 %1509, i32* %1504, align 8
  %1510 = getelementptr inbounds %struct._FcConfigParse, %struct._FcConfigParse* %15, i64 0, i32 10, i64 %1508
  br label %1515

1511:                                             ; preds = %1502
  %1512 = call noalias i8* @malloc(i64 32) #9
  %1513 = bitcast i8* %1512 to %struct._FcVStack*
  %1514 = icmp eq i8* %1512, null
  br i1 %1514, label %3152, label %1515

1515:                                             ; preds = %1511, %1507
  %1516 = phi %struct._FcVStack* [ %1510, %1507 ], [ %1513, %1511 ]
  %1517 = getelementptr inbounds %struct._FcVStack, %struct._FcVStack* %1516, i64 0, i32 2
  store i32 0, i32* %1517, align 8
  %1518 = getelementptr inbounds %struct._FcVStack, %struct._FcVStack* %1516, i64 0, i32 0
  store %struct._FcVStack* null, %struct._FcVStack** %1518, align 8
  %1519 = getelementptr inbounds i8, i8* %0, i64 8
  %1520 = bitcast i8* %1519 to %struct._FcVStack**
  %1521 = bitcast i8* %1519 to i64*
  %1522 = load i64, i64* %1521, align 8
  %1523 = bitcast %struct._FcVStack* %1516 to i64*
  store i64 %1522, i64* %1523, align 8
  %1524 = load %struct._FcPStack*, %struct._FcPStack** %16, align 8
  %1525 = icmp eq %struct._FcPStack* %1524, null
  br i1 %1525, label %1529, label %1526

1526:                                             ; preds = %1515
  %1527 = getelementptr inbounds %struct._FcPStack, %struct._FcPStack* %1524, i64 0, i32 0
  %1528 = load %struct._FcPStack*, %struct._FcPStack** %1527, align 8
  br label %1529

1529:                                             ; preds = %1526, %1515
  %1530 = phi %struct._FcPStack* [ %1528, %1526 ], [ null, %1515 ]
  %1531 = getelementptr inbounds %struct._FcVStack, %struct._FcVStack* %1516, i64 0, i32 1
  store %struct._FcPStack* %1530, %struct._FcPStack** %1531, align 8
  store %struct._FcVStack* %1516, %struct._FcVStack** %1520, align 8
  %1532 = icmp eq %struct._FcVStack* %1516, null
  br i1 %1532, label %3152, label %1533

1533:                                             ; preds = %1529
  %1534 = getelementptr inbounds %struct._FcVStack, %struct._FcVStack* %1516, i64 0, i32 3, i32 0
  store i8* %1480, i8** %1534, align 8
  store i32 17, i32* %1517, align 8
  br label %3152

1535:                                             ; preds = %19
  %1536 = getelementptr inbounds %struct._FcPStack, %struct._FcPStack* %17, i64 0, i32 2
  %1537 = load i8**, i8*** %1536, align 8
  %1538 = icmp eq i8** %1537, null
  br i1 %1538, label %1555, label %1539

1539:                                             ; preds = %1535
  %1540 = load i8*, i8** %1537, align 8
  %1541 = icmp eq i8* %1540, null
  br i1 %1541, label %1555, label %1542

1542:                                             ; preds = %1539, %1547
  %1543 = phi i8* [ %1549, %1547 ], [ %1540, %1539 ]
  %1544 = phi i8** [ %1548, %1547 ], [ %1537, %1539 ]
  %1545 = tail call i32 @strcmp(i8* nonnull %1543, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.92, i64 0, i64 0)) #12
  %1546 = icmp eq i32 %1545, 0
  br i1 %1546, label %1551, label %1547

1547:                                             ; preds = %1542
  %1548 = getelementptr inbounds i8*, i8** %1544, i64 2
  %1549 = load i8*, i8** %1548, align 8
  %1550 = icmp eq i8* %1549, null
  br i1 %1550, label %1555, label %1542

1551:                                             ; preds = %1542
  store i8 0, i8* %1543, align 1
  %1552 = getelementptr inbounds i8*, i8** %1544, i64 1
  %1553 = load i8*, i8** %1552, align 8
  %1554 = icmp eq i8* %1553, null
  br i1 %1554, label %1555, label %1556

1555:                                             ; preds = %1547, %1551, %1539, %1535
  tail call void (%struct._FcConfigParse*, i32, i8*, ...) @FcConfigMessage(%struct._FcConfigParse* %15, i32 1, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.100, i64 0, i64 0)) #9
  br label %3152

1556:                                             ; preds = %1551
  %1557 = load %struct._FcPStack*, %struct._FcPStack** %16, align 8
  %1558 = icmp eq %struct._FcPStack* %1557, null
  br i1 %1558, label %1617, label %1559

1559:                                             ; preds = %1556
  %1560 = getelementptr inbounds %struct._FcPStack, %struct._FcPStack* %1557, i64 0, i32 2
  %1561 = load i8**, i8*** %1560, align 8
  %1562 = icmp eq i8** %1561, null
  br i1 %1562, label %1583, label %1563

1563:                                             ; preds = %1559
  %1564 = load i8*, i8** %1561, align 8
  %1565 = icmp eq i8* %1564, null
  br i1 %1565, label %1583, label %1566

1566:                                             ; preds = %1563, %1571
  %1567 = phi i8* [ %1573, %1571 ], [ %1564, %1563 ]
  %1568 = phi i8** [ %1572, %1571 ], [ %1561, %1563 ]
  %1569 = tail call i32 @strcmp(i8* nonnull %1567, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.101, i64 0, i64 0)) #12
  %1570 = icmp eq i32 %1569, 0
  br i1 %1570, label %1575, label %1571

1571:                                             ; preds = %1566
  %1572 = getelementptr inbounds i8*, i8** %1568, i64 2
  %1573 = load i8*, i8** %1572, align 8
  %1574 = icmp eq i8* %1573, null
  br i1 %1574, label %1583, label %1566

1575:                                             ; preds = %1566
  store i8 0, i8* %1567, align 1
  %1576 = getelementptr inbounds i8*, i8** %1568, i64 1
  %1577 = load i8*, i8** %1576, align 8
  %1578 = icmp eq i8* %1577, null
  br i1 %1578, label %1583, label %1579

1579:                                             ; preds = %1575
  %1580 = tail call fastcc i32 @FcConfigLexOp(i8* nonnull %1577, %struct._FcOpMap* getelementptr inbounds ([8 x %struct._FcOpMap], [8 x %struct._FcOpMap]* @fcModeOps, i64 0, i64 0)) #9
  %1581 = icmp eq i32 %1580, 41
  br i1 %1581, label %1582, label %1583

1582:                                             ; preds = %1579
  tail call void (%struct._FcConfigParse*, i32, i8*, ...) @FcConfigMessage(%struct._FcConfigParse* %15, i32 1, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.102, i64 0, i64 0), i8* nonnull %1577) #9
  br label %3152

1583:                                             ; preds = %1571, %1579, %1575, %1563, %1559
  %1584 = phi i32 [ 11, %1563 ], [ 11, %1559 ], [ 11, %1575 ], [ %1580, %1579 ], [ 11, %1571 ]
  %1585 = load %struct._FcPStack*, %struct._FcPStack** %16, align 8
  %1586 = icmp eq %struct._FcPStack* %1585, null
  br i1 %1586, label %1617, label %1587

1587:                                             ; preds = %1583
  %1588 = getelementptr inbounds %struct._FcPStack, %struct._FcPStack* %1585, i64 0, i32 2
  %1589 = load i8**, i8*** %1588, align 8
  %1590 = icmp eq i8** %1589, null
  br i1 %1590, label %1617, label %1591

1591:                                             ; preds = %1587
  %1592 = load i8*, i8** %1589, align 8
  %1593 = icmp eq i8* %1592, null
  br i1 %1593, label %1617, label %1594

1594:                                             ; preds = %1591, %1599
  %1595 = phi i8* [ %1601, %1599 ], [ %1592, %1591 ]
  %1596 = phi i8** [ %1600, %1599 ], [ %1589, %1591 ]
  %1597 = tail call i32 @strcmp(i8* nonnull %1595, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.57, i64 0, i64 0)) #12
  %1598 = icmp eq i32 %1597, 0
  br i1 %1598, label %1603, label %1599

1599:                                             ; preds = %1594
  %1600 = getelementptr inbounds i8*, i8** %1596, i64 2
  %1601 = load i8*, i8** %1600, align 8
  %1602 = icmp eq i8* %1601, null
  br i1 %1602, label %1617, label %1594

1603:                                             ; preds = %1594
  store i8 0, i8* %1595, align 1
  %1604 = getelementptr inbounds i8*, i8** %1596, i64 1
  %1605 = load i8*, i8** %1604, align 8
  %1606 = icmp eq i8* %1605, null
  br i1 %1606, label %1617, label %1607

1607:                                             ; preds = %1603
  %1608 = tail call i32 @strcmp(i8* nonnull %1605, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.62, i64 0, i64 0)) #12
  %1609 = icmp eq i32 %1608, 0
  br i1 %1609, label %1617, label %1610

1610:                                             ; preds = %1607
  %1611 = tail call i32 @strcmp(i8* nonnull %1605, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.63, i64 0, i64 0)) #12
  %1612 = icmp eq i32 %1611, 0
  br i1 %1612, label %1617, label %1613

1613:                                             ; preds = %1610
  %1614 = tail call i32 @strcmp(i8* nonnull %1605, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.64, i64 0, i64 0)) #12
  %1615 = icmp eq i32 %1614, 0
  br i1 %1615, label %1617, label %1616

1616:                                             ; preds = %1613
  tail call void (%struct._FcConfigParse*, i32, i8*, ...) @FcConfigMessage(%struct._FcConfigParse* %15, i32 1, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.65, i64 0, i64 0), i8* nonnull %1605) #9
  br label %3152

1617:                                             ; preds = %1599, %1613, %1610, %1607, %1603, %1591, %1587, %1583, %1556
  %1618 = phi i32 [ %1584, %1613 ], [ %1584, %1610 ], [ %1584, %1607 ], [ %1584, %1603 ], [ %1584, %1591 ], [ %1584, %1587 ], [ %1584, %1583 ], [ 11, %1556 ], [ %1584, %1599 ]
  %1619 = phi i32 [ 2, %1613 ], [ 1, %1610 ], [ 0, %1607 ], [ 0, %1603 ], [ 0, %1591 ], [ 0, %1587 ], [ 0, %1583 ], [ 0, %1556 ], [ 0, %1599 ]
  %1620 = tail call fastcc %struct._FcExpr* @FcPopBinary(%struct._FcConfigParse* %15, i32 36) #9
  %1621 = add i32 %1618, -17
  %1622 = icmp ult i32 %1621, 2
  %1623 = icmp ne %struct._FcExpr* %1620, null
  %1624 = and i1 %1622, %1623
  br i1 %1624, label %1625, label %1626

1625:                                             ; preds = %1617
  tail call void (%struct._FcConfigParse*, i32, i8*, ...) @FcConfigMessage(%struct._FcConfigParse* %15, i32 1, i8* getelementptr inbounds ([62 x i8], [62 x i8]* @.str.103, i64 0, i64 0)) #9
  tail call fastcc void @FcExprDestroy(%struct._FcExpr* nonnull %1620) #9
  br label %1626

1626:                                             ; preds = %1625, %1617
  %1627 = phi %struct._FcExpr* [ null, %1625 ], [ %1620, %1617 ]
  %1628 = tail call i32 @FcObjectFromName(i8* nonnull %1553) #9
  %1629 = tail call noalias i8* @malloc(i64 24) #9
  %1630 = icmp eq i8* %1629, null
  br i1 %1630, label %1645, label %1631

1631:                                             ; preds = %1626
  %1632 = bitcast i8* %1629 to i32*
  store i32 %1628, i32* %1632, align 8
  %1633 = getelementptr inbounds i8, i8* %1629, i64 4
  %1634 = bitcast i8* %1633 to i32*
  store i32 %1618, i32* %1634, align 4
  %1635 = getelementptr inbounds i8, i8* %1629, i64 8
  %1636 = bitcast i8* %1635 to %struct._FcExpr**
  store %struct._FcExpr* %1627, %struct._FcExpr** %1636, align 8
  %1637 = getelementptr inbounds i8, i8* %1629, i64 16
  %1638 = bitcast i8* %1637 to i32*
  store i32 %1619, i32* %1638, align 8
  %1639 = tail call i8* @FcObjectName(i32 %1628) #9
  %1640 = tail call %struct._FcObjectType* @IA__FcNameGetObjectType(i8* %1639) #9
  %1641 = icmp eq %struct._FcObjectType* %1640, null
  br i1 %1641, label %1646, label %1642

1642:                                             ; preds = %1631
  %1643 = getelementptr inbounds %struct._FcObjectType, %struct._FcObjectType* %1640, i64 0, i32 1
  %1644 = load i32, i32* %1643, align 8
  tail call fastcc void @FcTypecheckExpr(%struct._FcConfigParse* %15, %struct._FcExpr* %1627, i32 %1644) #9
  br label %1646

1645:                                             ; preds = %1626
  tail call void (%struct._FcConfigParse*, i32, i8*, ...) @FcConfigMessage(%struct._FcConfigParse* %15, i32 2, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.31, i64 0, i64 0)) #9
  tail call fastcc void @FcExprDestroy(%struct._FcExpr* %1627) #9
  br label %3152

1646:                                             ; preds = %1642, %1631
  %1647 = getelementptr inbounds i8, i8* %0, i64 2496
  %1648 = bitcast i8* %1647 to i32*
  %1649 = load i32, i32* %1648, align 8
  %1650 = icmp ult i32 %1649, 64
  br i1 %1650, label %1651, label %1655

1651:                                             ; preds = %1646
  %1652 = zext i32 %1649 to i64
  %1653 = add nuw nsw i32 %1649, 1
  store i32 %1653, i32* %1648, align 8
  %1654 = getelementptr inbounds %struct._FcConfigParse, %struct._FcConfigParse* %15, i64 0, i32 10, i64 %1652
  br label %1659

1655:                                             ; preds = %1646
  %1656 = tail call noalias i8* @malloc(i64 32) #9
  %1657 = bitcast i8* %1656 to %struct._FcVStack*
  %1658 = icmp eq i8* %1656, null
  br i1 %1658, label %1679, label %1659

1659:                                             ; preds = %1655, %1651
  %1660 = phi %struct._FcVStack* [ %1654, %1651 ], [ %1657, %1655 ]
  %1661 = getelementptr inbounds %struct._FcVStack, %struct._FcVStack* %1660, i64 0, i32 2
  store i32 0, i32* %1661, align 8
  %1662 = getelementptr inbounds %struct._FcVStack, %struct._FcVStack* %1660, i64 0, i32 0
  store %struct._FcVStack* null, %struct._FcVStack** %1662, align 8
  %1663 = getelementptr inbounds i8, i8* %0, i64 8
  %1664 = bitcast i8* %1663 to %struct._FcVStack**
  %1665 = bitcast i8* %1663 to i64*
  %1666 = load i64, i64* %1665, align 8
  %1667 = bitcast %struct._FcVStack* %1660 to i64*
  store i64 %1666, i64* %1667, align 8
  %1668 = load %struct._FcPStack*, %struct._FcPStack** %16, align 8
  %1669 = icmp eq %struct._FcPStack* %1668, null
  br i1 %1669, label %1673, label %1670

1670:                                             ; preds = %1659
  %1671 = getelementptr inbounds %struct._FcPStack, %struct._FcPStack* %1668, i64 0, i32 0
  %1672 = load %struct._FcPStack*, %struct._FcPStack** %1671, align 8
  br label %1673

1673:                                             ; preds = %1670, %1659
  %1674 = phi %struct._FcPStack* [ %1672, %1670 ], [ null, %1659 ]
  %1675 = getelementptr inbounds %struct._FcVStack, %struct._FcVStack* %1660, i64 0, i32 1
  store %struct._FcPStack* %1674, %struct._FcPStack** %1675, align 8
  store %struct._FcVStack* %1660, %struct._FcVStack** %1664, align 8
  %1676 = icmp eq %struct._FcVStack* %1660, null
  br i1 %1676, label %1679, label %1677

1677:                                             ; preds = %1673
  %1678 = getelementptr inbounds %struct._FcVStack, %struct._FcVStack* %1660, i64 0, i32 3, i32 0
  store i8* %1629, i8** %1678, align 8
  store i32 19, i32* %1661, align 8
  br label %3152

1679:                                             ; preds = %1673, %1655
  %1680 = load %struct._FcExpr*, %struct._FcExpr** %1636, align 8
  %1681 = icmp eq %struct._FcExpr* %1680, null
  br i1 %1681, label %1683, label %1682

1682:                                             ; preds = %1679
  tail call fastcc void @FcExprDestroy(%struct._FcExpr* nonnull %1680) #9
  br label %1683

1683:                                             ; preds = %1682, %1679
  tail call void @free(i8* nonnull %1629) #9
  br label %3152

1684:                                             ; preds = %19
  %1685 = bitcast i8** %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %1685) #9
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %10, align 8
  %1686 = getelementptr inbounds %struct._FcPStack, %struct._FcPStack* %17, i64 0, i32 3
  %1687 = tail call i8* @FcStrBufDoneStatic(%struct._FcStrBuf* %1686) #9
  %1688 = icmp eq i8* %1687, null
  br i1 %1688, label %1689, label %1690

1689:                                             ; preds = %1684
  tail call void (%struct._FcConfigParse*, i32, i8*, ...) @FcConfigMessage(%struct._FcConfigParse* %15, i32 2, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.31, i64 0, i64 0)) #9
  br label %1735

1690:                                             ; preds = %1684
  store i8* null, i8** %10, align 8
  %1691 = call i64 @strtol(i8* nonnull %1687, i8** nonnull %10, i32 0) #9
  %1692 = load i8*, i8** %10, align 8
  %1693 = tail call i64 @strlen(i8* nonnull %1687) #12
  %1694 = getelementptr inbounds i8, i8* %1687, i64 %1693
  %1695 = icmp eq i8* %1692, %1694
  br i1 %1695, label %1697, label %1696

1696:                                             ; preds = %1690
  tail call void (%struct._FcConfigParse*, i32, i8*, ...) @FcConfigMessage(%struct._FcConfigParse* %15, i32 2, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.104, i64 0, i64 0), i8* nonnull %1687) #9
  br label %1732

1697:                                             ; preds = %1690
  %1698 = trunc i64 %1691 to i32
  %1699 = getelementptr inbounds i8, i8* %0, i64 2496
  %1700 = bitcast i8* %1699 to i32*
  %1701 = load i32, i32* %1700, align 8
  %1702 = icmp ult i32 %1701, 64
  br i1 %1702, label %1703, label %1707

1703:                                             ; preds = %1697
  %1704 = zext i32 %1701 to i64
  %1705 = add nuw nsw i32 %1701, 1
  store i32 %1705, i32* %1700, align 8
  %1706 = getelementptr inbounds %struct._FcConfigParse, %struct._FcConfigParse* %15, i64 0, i32 10, i64 %1704
  br label %1711

1707:                                             ; preds = %1697
  %1708 = tail call noalias i8* @malloc(i64 32) #9
  %1709 = bitcast i8* %1708 to %struct._FcVStack*
  %1710 = icmp eq i8* %1708, null
  br i1 %1710, label %1732, label %1711

1711:                                             ; preds = %1707, %1703
  %1712 = phi %struct._FcVStack* [ %1706, %1703 ], [ %1709, %1707 ]
  %1713 = getelementptr inbounds %struct._FcVStack, %struct._FcVStack* %1712, i64 0, i32 2
  store i32 0, i32* %1713, align 8
  %1714 = getelementptr inbounds %struct._FcVStack, %struct._FcVStack* %1712, i64 0, i32 0
  store %struct._FcVStack* null, %struct._FcVStack** %1714, align 8
  %1715 = getelementptr inbounds i8, i8* %0, i64 8
  %1716 = bitcast i8* %1715 to %struct._FcVStack**
  %1717 = bitcast i8* %1715 to i64*
  %1718 = load i64, i64* %1717, align 8
  %1719 = bitcast %struct._FcVStack* %1712 to i64*
  store i64 %1718, i64* %1719, align 8
  %1720 = load %struct._FcPStack*, %struct._FcPStack** %16, align 8
  %1721 = icmp eq %struct._FcPStack* %1720, null
  br i1 %1721, label %1725, label %1722

1722:                                             ; preds = %1711
  %1723 = getelementptr inbounds %struct._FcPStack, %struct._FcPStack* %1720, i64 0, i32 0
  %1724 = load %struct._FcPStack*, %struct._FcPStack** %1723, align 8
  br label %1725

1725:                                             ; preds = %1722, %1711
  %1726 = phi %struct._FcPStack* [ %1724, %1722 ], [ null, %1711 ]
  %1727 = getelementptr inbounds %struct._FcVStack, %struct._FcVStack* %1712, i64 0, i32 1
  store %struct._FcPStack* %1726, %struct._FcPStack** %1727, align 8
  store %struct._FcVStack* %1712, %struct._FcVStack** %1716, align 8
  %1728 = icmp eq %struct._FcVStack* %1712, null
  br i1 %1728, label %1732, label %1729

1729:                                             ; preds = %1725
  %1730 = getelementptr inbounds %struct._FcVStack, %struct._FcVStack* %1712, i64 0, i32 3
  %1731 = bitcast %union.anon.1* %1730 to i32*
  store i32 %1698, i32* %1731, align 8
  store i32 10, i32* %1713, align 8
  br label %1732

1732:                                             ; preds = %1729, %1725, %1707, %1696
  %1733 = load %struct._FcPStack*, %struct._FcPStack** %16, align 8
  %1734 = getelementptr inbounds %struct._FcPStack, %struct._FcPStack* %1733, i64 0, i32 3
  tail call void @FcStrBufDestroy(%struct._FcStrBuf* %1734) #9
  br label %1735

1735:                                             ; preds = %1689, %1732
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1685) #9
  br label %3152

1736:                                             ; preds = %19
  %1737 = bitcast i8** %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %1737) #9
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %9, align 8
  %1738 = getelementptr inbounds %struct._FcPStack, %struct._FcPStack* %17, i64 0, i32 3
  %1739 = tail call i8* @FcStrBufDoneStatic(%struct._FcStrBuf* %1738) #9
  %1740 = icmp eq i8* %1739, null
  br i1 %1740, label %1741, label %1742

1741:                                             ; preds = %1736
  tail call void (%struct._FcConfigParse*, i32, i8*, ...) @FcConfigMessage(%struct._FcConfigParse* %15, i32 2, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.31, i64 0, i64 0)) #9
  br label %1847

1742:                                             ; preds = %1736
  store i8* null, i8** %9, align 8
  %1743 = tail call %struct.lconv* @localeconv() #9
  %1744 = getelementptr inbounds %struct.lconv, %struct.lconv* %1743, i64 0, i32 0
  %1745 = load i8*, i8** %1744, align 8
  %1746 = tail call i64 @strlen(i8* %1745) #12
  %1747 = trunc i64 %1746 to i32
  %1748 = tail call i8* @strchr(i8* nonnull %1739, i32 46) #12
  %1749 = icmp eq i8* %1748, null
  br i1 %1749, label %1800, label %1750

1750:                                             ; preds = %1742
  %1751 = load i8, i8* %1745, align 1
  %1752 = icmp eq i8 %1751, 46
  br i1 %1752, label %1753, label %1757

1753:                                             ; preds = %1750
  %1754 = getelementptr inbounds i8, i8* %1745, i64 1
  %1755 = load i8, i8* %1754, align 1
  %1756 = icmp eq i8 %1755, 0
  br i1 %1756, label %1800, label %1757

1757:                                             ; preds = %1753, %1750
  %1758 = getelementptr inbounds [128 x i8], [128 x i8]* %7, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 128, i8* nonnull %1758) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %1758, i8 -86, i64 128, i1 false) #9
  %1759 = tail call i64 @strlen(i8* nonnull %1739) #12
  %1760 = trunc i64 %1759 to i32
  %1761 = add nsw i32 %1760, %1747
  %1762 = icmp sgt i32 %1761, 128
  br i1 %1762, label %1763, label %1764

1763:                                             ; preds = %1757
  store i8* %1739, i8** %9, align 8
  br label %1797

1764:                                             ; preds = %1757
  %1765 = bitcast i8** %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %1765) #9
  %1766 = ptrtoint i8* %1748 to i64
  %1767 = ptrtoint i8* %1739 to i64
  %1768 = sub i64 %1766, %1767
  %1769 = call i8* @strncpy(i8* nonnull %1758, i8* nonnull %1739, i64 %1768) #9
  %1770 = getelementptr inbounds [128 x i8], [128 x i8]* %7, i64 0, i64 %1768
  %1771 = call i8* @strcpy(i8* %1770, i8* %1745) #9
  %1772 = shl i64 %1746, 32
  %1773 = ashr exact i64 %1772, 32
  %1774 = getelementptr inbounds i8, i8* %1770, i64 %1773
  %1775 = getelementptr inbounds i8, i8* %1748, i64 1
  %1776 = call i8* @strcpy(i8* %1774, i8* %1775) #9
  store i8* null, i8** %8, align 8
  %1777 = call double @strtod(i8* nonnull %1758, i8** nonnull %8) #9
  %1778 = load i8*, i8** %8, align 8
  %1779 = icmp eq i8* %1778, null
  %1780 = ptrtoint i8* %1778 to i64
  br i1 %1779, label %1793, label %1781

1781:                                             ; preds = %1764
  %1782 = ptrtoint [128 x i8]* %7 to i64
  %1783 = sub i64 %1780, %1782
  %1784 = getelementptr inbounds i8, i8* %1739, i64 %1783
  store i8* %1784, i8** %8, align 8
  %1785 = icmp ugt i8* %1784, %1748
  %1786 = ptrtoint i8* %1784 to i64
  br i1 %1785, label %1787, label %1793

1787:                                             ; preds = %1781
  %1788 = add i64 %1772, -4294967296
  %1789 = ashr exact i64 %1788, 32
  %1790 = sub nsw i64 0, %1789
  %1791 = getelementptr inbounds i8, i8* %1784, i64 %1790
  store i8* %1791, i8** %8, align 8
  %1792 = ptrtoint i8* %1791 to i64
  br label %1793

1793:                                             ; preds = %1787, %1781, %1764
  %1794 = phi i64 [ %1780, %1764 ], [ %1786, %1781 ], [ %1792, %1787 ]
  %1795 = bitcast i8** %9 to i64*
  store i64 %1794, i64* %1795, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1765) #9
  %1796 = inttoptr i64 %1794 to i8*
  br label %1797

1797:                                             ; preds = %1793, %1763
  %1798 = phi i8* [ %1796, %1793 ], [ %1739, %1763 ]
  %1799 = phi double [ %1777, %1793 ], [ 0.000000e+00, %1763 ]
  call void @llvm.lifetime.end.p0i8(i64 128, i8* nonnull %1758) #9
  br label %1803

1800:                                             ; preds = %1753, %1742
  %1801 = call double @strtod(i8* nonnull %1739, i8** nonnull %9) #9
  %1802 = load i8*, i8** %9, align 8
  br label %1803

1803:                                             ; preds = %1800, %1797
  %1804 = phi i8* [ %1798, %1797 ], [ %1802, %1800 ]
  %1805 = phi double [ %1799, %1797 ], [ %1801, %1800 ]
  %1806 = call i64 @strlen(i8* nonnull %1739) #12
  %1807 = getelementptr inbounds i8, i8* %1739, i64 %1806
  %1808 = icmp eq i8* %1804, %1807
  br i1 %1808, label %1810, label %1809

1809:                                             ; preds = %1803
  call void (%struct._FcConfigParse*, i32, i8*, ...) @FcConfigMessage(%struct._FcConfigParse* %15, i32 2, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.105, i64 0, i64 0), i8* nonnull %1739) #9
  br label %1844

1810:                                             ; preds = %1803
  %1811 = getelementptr inbounds i8, i8* %0, i64 2496
  %1812 = bitcast i8* %1811 to i32*
  %1813 = load i32, i32* %1812, align 8
  %1814 = icmp ult i32 %1813, 64
  br i1 %1814, label %1815, label %1819

1815:                                             ; preds = %1810
  %1816 = zext i32 %1813 to i64
  %1817 = add nuw nsw i32 %1813, 1
  store i32 %1817, i32* %1812, align 8
  %1818 = getelementptr inbounds %struct._FcConfigParse, %struct._FcConfigParse* %15, i64 0, i32 10, i64 %1816
  br label %1823

1819:                                             ; preds = %1810
  %1820 = call noalias i8* @malloc(i64 32) #9
  %1821 = bitcast i8* %1820 to %struct._FcVStack*
  %1822 = icmp eq i8* %1820, null
  br i1 %1822, label %1844, label %1823

1823:                                             ; preds = %1819, %1815
  %1824 = phi %struct._FcVStack* [ %1818, %1815 ], [ %1821, %1819 ]
  %1825 = getelementptr inbounds %struct._FcVStack, %struct._FcVStack* %1824, i64 0, i32 2
  store i32 0, i32* %1825, align 8
  %1826 = getelementptr inbounds %struct._FcVStack, %struct._FcVStack* %1824, i64 0, i32 0
  store %struct._FcVStack* null, %struct._FcVStack** %1826, align 8
  %1827 = getelementptr inbounds i8, i8* %0, i64 8
  %1828 = bitcast i8* %1827 to %struct._FcVStack**
  %1829 = bitcast i8* %1827 to i64*
  %1830 = load i64, i64* %1829, align 8
  %1831 = bitcast %struct._FcVStack* %1824 to i64*
  store i64 %1830, i64* %1831, align 8
  %1832 = load %struct._FcPStack*, %struct._FcPStack** %16, align 8
  %1833 = icmp eq %struct._FcPStack* %1832, null
  br i1 %1833, label %1837, label %1834

1834:                                             ; preds = %1823
  %1835 = getelementptr inbounds %struct._FcPStack, %struct._FcPStack* %1832, i64 0, i32 0
  %1836 = load %struct._FcPStack*, %struct._FcPStack** %1835, align 8
  br label %1837

1837:                                             ; preds = %1834, %1823
  %1838 = phi %struct._FcPStack* [ %1836, %1834 ], [ null, %1823 ]
  %1839 = getelementptr inbounds %struct._FcVStack, %struct._FcVStack* %1824, i64 0, i32 1
  store %struct._FcPStack* %1838, %struct._FcPStack** %1839, align 8
  store %struct._FcVStack* %1824, %struct._FcVStack** %1828, align 8
  %1840 = icmp eq %struct._FcVStack* %1824, null
  br i1 %1840, label %1844, label %1841

1841:                                             ; preds = %1837
  %1842 = getelementptr inbounds %struct._FcVStack, %struct._FcVStack* %1824, i64 0, i32 3
  %1843 = bitcast %union.anon.1* %1842 to double*
  store double %1805, double* %1843, align 8
  store i32 11, i32* %1825, align 8
  br label %1844

1844:                                             ; preds = %1841, %1837, %1819, %1809
  %1845 = load %struct._FcPStack*, %struct._FcPStack** %16, align 8
  %1846 = getelementptr inbounds %struct._FcPStack, %struct._FcPStack* %1845, i64 0, i32 3
  call void @FcStrBufDestroy(%struct._FcStrBuf* %1846) #9
  br label %1847

1847:                                             ; preds = %1741, %1844
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1737) #9
  br label %3152

1848:                                             ; preds = %19
  tail call fastcc void @FcParseString(%struct._FcConfigParse* %15, i32 1)
  br label %3152

1849:                                             ; preds = %19
  %1850 = tail call fastcc %struct._FcExpr* @FcPopExpr(%struct._FcConfigParse* %15) #9
  %1851 = tail call fastcc %struct._FcExpr* @FcPopExpr(%struct._FcConfigParse* %15) #9
  %1852 = tail call fastcc %struct._FcExpr* @FcPopExpr(%struct._FcConfigParse* %15) #9
  %1853 = tail call fastcc %struct._FcExpr* @FcPopExpr(%struct._FcConfigParse* %15) #9
  %1854 = icmp eq %struct._FcExpr* %1850, null
  %1855 = icmp eq %struct._FcExpr* %1851, null
  %1856 = or i1 %1854, %1855
  %1857 = icmp eq %struct._FcExpr* %1852, null
  %1858 = or i1 %1856, %1857
  %1859 = icmp eq %struct._FcExpr* %1853, null
  %1860 = or i1 %1858, %1859
  br i1 %1860, label %1861, label %1862

1861:                                             ; preds = %1849
  tail call void (%struct._FcConfigParse*, i32, i8*, ...) @FcConfigMessage(%struct._FcConfigParse* %15, i32 1, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.106, i64 0, i64 0)) #9
  br label %3152

1862:                                             ; preds = %1849
  %1863 = tail call fastcc %struct._FcExpr* @FcPopExpr(%struct._FcConfigParse* %15) #9
  %1864 = icmp eq %struct._FcExpr* %1863, null
  br i1 %1864, label %1866, label %1865

1865:                                             ; preds = %1862
  tail call void (%struct._FcConfigParse*, i32, i8*, ...) @FcConfigMessage(%struct._FcConfigParse* %15, i32 2, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.107, i64 0, i64 0)) #9
  br label %3152

1866:                                             ; preds = %1862
  %1867 = getelementptr inbounds i8, i8* %0, i64 2496
  %1868 = bitcast i8* %1867 to i32*
  %1869 = load i32, i32* %1868, align 8
  %1870 = icmp ult i32 %1869, 64
  br i1 %1870, label %1871, label %1875

1871:                                             ; preds = %1866
  %1872 = zext i32 %1869 to i64
  %1873 = add nuw nsw i32 %1869, 1
  store i32 %1873, i32* %1868, align 8
  %1874 = getelementptr inbounds %struct._FcConfigParse, %struct._FcConfigParse* %15, i64 0, i32 10, i64 %1872
  br label %1879

1875:                                             ; preds = %1866
  %1876 = tail call noalias i8* @malloc(i64 32) #9
  %1877 = bitcast i8* %1876 to %struct._FcVStack*
  %1878 = icmp eq i8* %1876, null
  br i1 %1878, label %3152, label %1879

1879:                                             ; preds = %1875, %1871
  %1880 = phi %struct._FcVStack* [ %1874, %1871 ], [ %1877, %1875 ]
  %1881 = getelementptr inbounds %struct._FcVStack, %struct._FcVStack* %1880, i64 0, i32 2
  store i32 0, i32* %1881, align 8
  %1882 = getelementptr inbounds %struct._FcVStack, %struct._FcVStack* %1880, i64 0, i32 0
  store %struct._FcVStack* null, %struct._FcVStack** %1882, align 8
  %1883 = getelementptr inbounds i8, i8* %0, i64 8
  %1884 = bitcast i8* %1883 to %struct._FcVStack**
  %1885 = bitcast i8* %1883 to i64*
  %1886 = load i64, i64* %1885, align 8
  %1887 = bitcast %struct._FcVStack* %1880 to i64*
  store i64 %1886, i64* %1887, align 8
  %1888 = load %struct._FcPStack*, %struct._FcPStack** %16, align 8
  %1889 = icmp eq %struct._FcPStack* %1888, null
  br i1 %1889, label %1893, label %1890

1890:                                             ; preds = %1879
  %1891 = getelementptr inbounds %struct._FcPStack, %struct._FcPStack* %1888, i64 0, i32 0
  %1892 = load %struct._FcPStack*, %struct._FcPStack** %1891, align 8
  br label %1893

1893:                                             ; preds = %1890, %1879
  %1894 = phi %struct._FcPStack* [ %1892, %1890 ], [ null, %1879 ]
  %1895 = getelementptr inbounds %struct._FcVStack, %struct._FcVStack* %1880, i64 0, i32 1
  store %struct._FcPStack* %1894, %struct._FcPStack** %1895, align 8
  store %struct._FcVStack* %1880, %struct._FcVStack** %1884, align 8
  %1896 = icmp eq %struct._FcVStack* %1880, null
  br i1 %1896, label %3152, label %1897

1897:                                             ; preds = %1893
  %1898 = tail call noalias i8* @malloc(i64 32) #9
  %1899 = icmp eq i8* %1898, null
  br i1 %1899, label %1908, label %1900

1900:                                             ; preds = %1897
  %1901 = bitcast i8* %1898 to %struct._FcExpr**
  store %struct._FcExpr* %1853, %struct._FcExpr** %1901, align 8
  %1902 = getelementptr inbounds i8, i8* %1898, i64 8
  %1903 = bitcast i8* %1902 to %struct._FcExpr**
  store %struct._FcExpr* %1852, %struct._FcExpr** %1903, align 8
  %1904 = getelementptr inbounds i8, i8* %1898, i64 16
  %1905 = bitcast i8* %1904 to %struct._FcExpr**
  store %struct._FcExpr* %1851, %struct._FcExpr** %1905, align 8
  %1906 = getelementptr inbounds i8, i8* %1898, i64 24
  %1907 = bitcast i8* %1906 to %struct._FcExpr**
  store %struct._FcExpr* %1850, %struct._FcExpr** %1907, align 8
  br label %1908

1908:                                             ; preds = %1900, %1897
  %1909 = getelementptr inbounds %struct._FcVStack, %struct._FcVStack* %1880, i64 0, i32 3, i32 0
  store i8* %1898, i8** %1909, align 8
  store i32 12, i32* %1881, align 8
  br label %3152

1910:                                             ; preds = %19
  %1911 = bitcast i64* %5 to [2 x i32]*
  %1912 = bitcast i64* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %1912) #9
  store i64 0, i64* %5, align 8
  %1913 = bitcast [2 x double]* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %1913) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %1913, i8 0, i64 16, i1 false) #9
  %1914 = getelementptr inbounds i8, i8* %0, i64 8
  %1915 = bitcast i8* %1914 to %struct._FcVStack**
  %1916 = load %struct._FcVStack*, %struct._FcVStack** %1915, align 8
  %1917 = icmp eq %struct._FcVStack* %1916, null
  br i1 %1917, label %1981, label %1918

1918:                                             ; preds = %1910
  %1919 = getelementptr inbounds [2 x i32], [2 x i32]* %1911, i64 0, i64 1
  %1920 = getelementptr inbounds [2 x double], [2 x double]* %6, i64 0, i64 1
  %1921 = getelementptr inbounds %struct._FcVStack, %struct._FcVStack* %1916, i64 0, i32 1
  %1922 = load %struct._FcPStack*, %struct._FcPStack** %1921, align 8
  %1923 = icmp eq %struct._FcPStack* %1922, %17
  br i1 %1923, label %1924, label %1977

1924:                                             ; preds = %1918, %1968
  %1925 = phi i32 [ %1974, %1968 ], [ 1, %1918 ]
  %1926 = phi i32 [ %1965, %1968 ], [ 1, %1918 ]
  %1927 = phi i32 [ %1964, %1968 ], [ 0, %1918 ]
  %1928 = phi %struct._FcVStack* [ %1966, %1968 ], [ %1916, %1918 ]
  %1929 = phi i64 [ %1969, %1968 ], [ 1, %1918 ]
  %1930 = icmp slt i64 %1929, 0
  br i1 %1930, label %1931, label %1932

1931:                                             ; preds = %1924
  tail call void (%struct._FcConfigParse*, i32, i8*, ...) @FcConfigMessage(%struct._FcConfigParse* %15, i32 2, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.108, i64 0, i64 0)) #9
  br label %2033

1932:                                             ; preds = %1924
  %1933 = getelementptr inbounds %struct._FcVStack, %struct._FcVStack* %1928, i64 0, i32 2
  %1934 = load i32, i32* %1933, align 8
  switch i32 %1934, label %1957 [
    i32 10, label %1935
    i32 11, label %1945
  ]

1935:                                             ; preds = %1932
  %1936 = icmp eq i32 %1927, 0
  %1937 = getelementptr inbounds %struct._FcVStack, %struct._FcVStack* %1928, i64 0, i32 3
  %1938 = bitcast %union.anon.1* %1937 to i32*
  %1939 = load i32, i32* %1938, align 8
  br i1 %1936, label %1943, label %1940

1940:                                             ; preds = %1935
  %1941 = sitofp i32 %1939 to double
  %1942 = getelementptr inbounds [2 x double], [2 x double]* %6, i64 0, i64 %1929
  store double %1941, double* %1942, align 8
  br label %1963

1943:                                             ; preds = %1935
  %1944 = getelementptr inbounds [2 x i32], [2 x i32]* %1911, i64 0, i64 %1929
  store i32 %1939, i32* %1944, align 4
  br label %1963

1945:                                             ; preds = %1932
  %1946 = or i32 %1927, %1925
  %1947 = icmp eq i32 %1946, 0
  br i1 %1947, label %1948, label %1951

1948:                                             ; preds = %1945
  %1949 = load i32, i32* %1919, align 4
  %1950 = uitofp i32 %1949 to double
  store double %1950, double* %1920, align 8
  br label %1951

1951:                                             ; preds = %1948, %1945
  %1952 = getelementptr inbounds %struct._FcVStack, %struct._FcVStack* %1928, i64 0, i32 3
  %1953 = bitcast %union.anon.1* %1952 to i64*
  %1954 = load i64, i64* %1953, align 8
  %1955 = getelementptr inbounds [2 x double], [2 x double]* %6, i64 0, i64 %1929
  %1956 = bitcast double* %1955 to i64*
  store i64 %1954, i64* %1956, align 8
  br label %1963

1957:                                             ; preds = %1932
  tail call void (%struct._FcConfigParse*, i32, i8*, ...) @FcConfigMessage(%struct._FcConfigParse* %15, i32 2, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.109, i64 0, i64 0)) #9
  %1958 = icmp eq i32 %1927, 0
  br i1 %1958, label %1961, label %1959

1959:                                             ; preds = %1957
  %1960 = getelementptr inbounds [2 x double], [2 x double]* %6, i64 0, i64 %1929
  store double 0.000000e+00, double* %1960, align 8
  br label %1963

1961:                                             ; preds = %1957
  %1962 = getelementptr inbounds [2 x i32], [2 x i32]* %1911, i64 0, i64 %1929
  store i32 0, i32* %1962, align 4
  br label %1963

1963:                                             ; preds = %1961, %1959, %1951, %1943, %1940
  %1964 = phi i32 [ %1927, %1959 ], [ 0, %1961 ], [ 1, %1951 ], [ %1927, %1940 ], [ 0, %1943 ]
  %1965 = add nsw i32 %1926, -1
  tail call fastcc void @FcVStackPopAndDestroy(%struct._FcConfigParse* %15) #9
  %1966 = load %struct._FcVStack*, %struct._FcVStack** %1915, align 8
  %1967 = icmp eq %struct._FcVStack* %1966, null
  br i1 %1967, label %1977, label %1968

1968:                                             ; preds = %1963
  %1969 = add nsw i64 %1929, -1
  %1970 = load %struct._FcPStack*, %struct._FcPStack** %16, align 8
  %1971 = getelementptr inbounds %struct._FcVStack, %struct._FcVStack* %1966, i64 0, i32 1
  %1972 = load %struct._FcPStack*, %struct._FcPStack** %1971, align 8
  %1973 = icmp eq %struct._FcPStack* %1972, %1970
  %1974 = trunc i64 %1969 to i32
  br i1 %1973, label %1924, label %1975

1975:                                             ; preds = %1968
  %1976 = trunc i64 %1969 to i32
  br label %1977

1977:                                             ; preds = %1963, %1918, %1975
  %1978 = phi i32 [ %1976, %1975 ], [ 1, %1918 ], [ %1965, %1963 ]
  %1979 = phi i32 [ %1964, %1975 ], [ 0, %1918 ], [ %1964, %1963 ]
  %1980 = icmp sgt i32 %1978, -1
  br i1 %1980, label %1981, label %1982

1981:                                             ; preds = %1977, %1910
  tail call void (%struct._FcConfigParse*, i32, i8*, ...) @FcConfigMessage(%struct._FcConfigParse* %15, i32 2, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.110, i64 0, i64 0)) #9
  br label %2033

1982:                                             ; preds = %1977
  %1983 = icmp eq i32 %1979, 0
  br i1 %1983, label %1992, label %1984

1984:                                             ; preds = %1982
  %1985 = getelementptr inbounds [2 x double], [2 x double]* %6, i64 0, i64 0
  %1986 = load double, double* %1985, align 16
  %1987 = load double, double* %1920, align 8
  %1988 = fcmp ogt double %1986, %1987
  br i1 %1988, label %1989, label %1990

1989:                                             ; preds = %1984
  tail call void (%struct._FcConfigParse*, i32, i8*, ...) @FcConfigMessage(%struct._FcConfigParse* %15, i32 2, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.110, i64 0, i64 0)) #9
  br label %2033

1990:                                             ; preds = %1984
  %1991 = tail call %struct._FcRange* @IA__FcRangeCreateDouble(double %1986, double %1987) #9
  br label %2000

1992:                                             ; preds = %1982
  %1993 = bitcast i64* %5 to i32*
  %1994 = load i32, i32* %1993, align 8
  %1995 = load i32, i32* %1919, align 4
  %1996 = icmp ugt i32 %1994, %1995
  br i1 %1996, label %1997, label %1998

1997:                                             ; preds = %1992
  tail call void (%struct._FcConfigParse*, i32, i8*, ...) @FcConfigMessage(%struct._FcConfigParse* %15, i32 2, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.110, i64 0, i64 0)) #9
  br label %2033

1998:                                             ; preds = %1992
  %1999 = tail call %struct._FcRange* @IA__FcRangeCreateInteger(i32 %1994, i32 %1995) #9
  br label %2000

2000:                                             ; preds = %1998, %1990
  %2001 = phi %struct._FcRange* [ %1991, %1990 ], [ %1999, %1998 ]
  %2002 = getelementptr inbounds i8, i8* %0, i64 2496
  %2003 = bitcast i8* %2002 to i32*
  %2004 = load i32, i32* %2003, align 8
  %2005 = icmp ult i32 %2004, 64
  br i1 %2005, label %2006, label %2010

2006:                                             ; preds = %2000
  %2007 = zext i32 %2004 to i64
  %2008 = add nuw nsw i32 %2004, 1
  store i32 %2008, i32* %2003, align 8
  %2009 = getelementptr inbounds %struct._FcConfigParse, %struct._FcConfigParse* %15, i64 0, i32 10, i64 %2007
  br label %2014

2010:                                             ; preds = %2000
  %2011 = tail call noalias i8* @malloc(i64 32) #9
  %2012 = bitcast i8* %2011 to %struct._FcVStack*
  %2013 = icmp eq i8* %2011, null
  br i1 %2013, label %2033, label %2014

2014:                                             ; preds = %2010, %2006
  %2015 = phi %struct._FcVStack* [ %2009, %2006 ], [ %2012, %2010 ]
  %2016 = getelementptr inbounds %struct._FcVStack, %struct._FcVStack* %2015, i64 0, i32 2
  store i32 0, i32* %2016, align 8
  %2017 = getelementptr inbounds %struct._FcVStack, %struct._FcVStack* %2015, i64 0, i32 0
  store %struct._FcVStack* null, %struct._FcVStack** %2017, align 8
  %2018 = bitcast i8* %1914 to i64*
  %2019 = load i64, i64* %2018, align 8
  %2020 = bitcast %struct._FcVStack* %2015 to i64*
  store i64 %2019, i64* %2020, align 8
  %2021 = load %struct._FcPStack*, %struct._FcPStack** %16, align 8
  %2022 = icmp eq %struct._FcPStack* %2021, null
  br i1 %2022, label %2026, label %2023

2023:                                             ; preds = %2014
  %2024 = getelementptr inbounds %struct._FcPStack, %struct._FcPStack* %2021, i64 0, i32 0
  %2025 = load %struct._FcPStack*, %struct._FcPStack** %2024, align 8
  br label %2026

2026:                                             ; preds = %2023, %2014
  %2027 = phi %struct._FcPStack* [ %2025, %2023 ], [ null, %2014 ]
  %2028 = getelementptr inbounds %struct._FcVStack, %struct._FcVStack* %2015, i64 0, i32 1
  store %struct._FcPStack* %2027, %struct._FcPStack** %2028, align 8
  store %struct._FcVStack* %2015, %struct._FcVStack** %1915, align 8
  %2029 = icmp eq %struct._FcVStack* %2015, null
  br i1 %2029, label %2033, label %2030

2030:                                             ; preds = %2026
  %2031 = getelementptr inbounds %struct._FcVStack, %struct._FcVStack* %2015, i64 0, i32 3
  %2032 = bitcast %union.anon.1* %2031 to %struct._FcRange**
  store %struct._FcRange* %2001, %struct._FcRange** %2032, align 8
  store i32 13, i32* %2016, align 8
  br label %2033

2033:                                             ; preds = %1931, %1981, %1989, %1997, %2010, %2026, %2030
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %1913) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1912) #9
  br label %3152

2034:                                             ; preds = %19
  %2035 = getelementptr inbounds %struct._FcPStack, %struct._FcPStack* %17, i64 0, i32 3
  %2036 = tail call i8* @FcStrBufDoneStatic(%struct._FcStrBuf* %2035) #9
  %2037 = icmp eq i8* %2036, null
  br i1 %2037, label %2038, label %2039

2038:                                             ; preds = %2034
  tail call void (%struct._FcConfigParse*, i32, i8*, ...) @FcConfigMessage(%struct._FcConfigParse* %15, i32 2, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.31, i64 0, i64 0)) #9
  br label %3152

2039:                                             ; preds = %2034
  %2040 = bitcast i32* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %2040) #9
  store i32 0, i32* %4, align 4
  %2041 = call i32 @FcNameBool(i8* nonnull %2036, i32* nonnull %4) #9
  %2042 = icmp eq i32 %2041, 0
  br i1 %2042, label %2043, label %2044

2043:                                             ; preds = %2039
  call void (%struct._FcConfigParse*, i32, i8*, ...) @FcConfigMessage(%struct._FcConfigParse* %15, i32 1, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.49, i64 0, i64 0), i8* nonnull %2036) #9
  br label %2044

2044:                                             ; preds = %2043, %2039
  %2045 = load i32, i32* %4, align 4
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %2040) #9
  %2046 = getelementptr inbounds i8, i8* %0, i64 2496
  %2047 = bitcast i8* %2046 to i32*
  %2048 = load i32, i32* %2047, align 8
  %2049 = icmp ult i32 %2048, 64
  br i1 %2049, label %2050, label %2054

2050:                                             ; preds = %2044
  %2051 = zext i32 %2048 to i64
  %2052 = add nuw nsw i32 %2048, 1
  store i32 %2052, i32* %2047, align 8
  %2053 = getelementptr inbounds %struct._FcConfigParse, %struct._FcConfigParse* %15, i64 0, i32 10, i64 %2051
  br label %2058

2054:                                             ; preds = %2044
  %2055 = call noalias i8* @malloc(i64 32) #9
  %2056 = bitcast i8* %2055 to %struct._FcVStack*
  %2057 = icmp eq i8* %2055, null
  br i1 %2057, label %2079, label %2058

2058:                                             ; preds = %2054, %2050
  %2059 = phi %struct._FcVStack* [ %2053, %2050 ], [ %2056, %2054 ]
  %2060 = getelementptr inbounds %struct._FcVStack, %struct._FcVStack* %2059, i64 0, i32 2
  store i32 0, i32* %2060, align 8
  %2061 = getelementptr inbounds %struct._FcVStack, %struct._FcVStack* %2059, i64 0, i32 0
  store %struct._FcVStack* null, %struct._FcVStack** %2061, align 8
  %2062 = getelementptr inbounds i8, i8* %0, i64 8
  %2063 = bitcast i8* %2062 to %struct._FcVStack**
  %2064 = bitcast i8* %2062 to i64*
  %2065 = load i64, i64* %2064, align 8
  %2066 = bitcast %struct._FcVStack* %2059 to i64*
  store i64 %2065, i64* %2066, align 8
  %2067 = load %struct._FcPStack*, %struct._FcPStack** %16, align 8
  %2068 = icmp eq %struct._FcPStack* %2067, null
  br i1 %2068, label %2072, label %2069

2069:                                             ; preds = %2058
  %2070 = getelementptr inbounds %struct._FcPStack, %struct._FcPStack* %2067, i64 0, i32 0
  %2071 = load %struct._FcPStack*, %struct._FcPStack** %2070, align 8
  br label %2072

2072:                                             ; preds = %2069, %2058
  %2073 = phi %struct._FcPStack* [ %2071, %2069 ], [ null, %2058 ]
  %2074 = getelementptr inbounds %struct._FcVStack, %struct._FcVStack* %2059, i64 0, i32 1
  store %struct._FcPStack* %2073, %struct._FcPStack** %2074, align 8
  store %struct._FcVStack* %2059, %struct._FcVStack** %2063, align 8
  %2075 = icmp eq %struct._FcVStack* %2059, null
  br i1 %2075, label %2079, label %2076

2076:                                             ; preds = %2072
  %2077 = getelementptr inbounds %struct._FcVStack, %struct._FcVStack* %2059, i64 0, i32 3
  %2078 = bitcast %union.anon.1* %2077 to i32*
  store i32 %2045, i32* %2078, align 8
  store i32 14, i32* %2060, align 8
  br label %2079

2079:                                             ; preds = %2076, %2072, %2054
  %2080 = load %struct._FcPStack*, %struct._FcPStack** %16, align 8
  %2081 = getelementptr inbounds %struct._FcPStack, %struct._FcPStack* %2080, i64 0, i32 3
  call void @FcStrBufDestroy(%struct._FcStrBuf* %2081) #9
  br label %3152

2082:                                             ; preds = %19
  %2083 = tail call %struct._FcCharSet* @IA__FcCharSetCreate() #9
  %2084 = getelementptr inbounds i8, i8* %0, i64 8
  %2085 = bitcast i8* %2084 to %struct._FcVStack**
  %2086 = load %struct._FcVStack*, %struct._FcVStack** %2085, align 8
  %2087 = icmp eq %struct._FcVStack* %2086, null
  br i1 %2087, label %2173, label %2088

2088:                                             ; preds = %2082, %2132
  %2089 = phi %struct._FcVStack* [ %2134, %2132 ], [ %2086, %2082 ]
  %2090 = phi i32 [ %2133, %2132 ], [ 0, %2082 ]
  %2091 = getelementptr inbounds %struct._FcVStack, %struct._FcVStack* %2089, i64 0, i32 1
  %2092 = load %struct._FcPStack*, %struct._FcPStack** %2091, align 8
  %2093 = load %struct._FcPStack*, %struct._FcPStack** %16, align 8
  %2094 = icmp eq %struct._FcPStack* %2092, %2093
  br i1 %2094, label %2095, label %2136

2095:                                             ; preds = %2088
  %2096 = getelementptr inbounds %struct._FcVStack, %struct._FcVStack* %2089, i64 0, i32 2
  %2097 = load i32, i32* %2096, align 8
  switch i32 %2097, label %2131 [
    i32 10, label %2098
    i32 13, label %2108
  ]

2098:                                             ; preds = %2095
  %2099 = getelementptr inbounds %struct._FcVStack, %struct._FcVStack* %2089, i64 0, i32 3
  %2100 = bitcast %union.anon.1* %2099 to i32*
  %2101 = load i32, i32* %2100, align 8
  %2102 = tail call i32 @IA__FcCharSetAddChar(%struct._FcCharSet* %2083, i32 %2101) #9
  %2103 = icmp eq i32 %2102, 0
  br i1 %2103, label %2104, label %2106

2104:                                             ; preds = %2098
  %2105 = load i32, i32* %2100, align 8
  tail call void (%struct._FcConfigParse*, i32, i8*, ...) @FcConfigMessage(%struct._FcConfigParse* %15, i32 1, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.111, i64 0, i64 0), i32 %2105) #9
  br label %2132

2106:                                             ; preds = %2098
  %2107 = add nsw i32 %2090, 1
  br label %2132

2108:                                             ; preds = %2095
  %2109 = getelementptr inbounds %struct._FcVStack, %struct._FcVStack* %2089, i64 0, i32 3
  %2110 = bitcast %union.anon.1* %2109 to %struct._FcRange**
  %2111 = load %struct._FcRange*, %struct._FcRange** %2110, align 8
  %2112 = getelementptr inbounds %struct._FcRange, %struct._FcRange* %2111, i64 0, i32 0
  %2113 = load double, double* %2112, align 8
  %2114 = fptoui double %2113 to i32
  %2115 = getelementptr inbounds %struct._FcRange, %struct._FcRange* %2111, i64 0, i32 1
  %2116 = load double, double* %2115, align 8
  %2117 = fptoui double %2116 to i32
  %2118 = icmp ugt i32 %2114, %2117
  br i1 %2118, label %2132, label %2119

2119:                                             ; preds = %2108, %2127
  %2120 = phi i32 [ %2128, %2127 ], [ %2090, %2108 ]
  %2121 = phi i32 [ %2129, %2127 ], [ %2114, %2108 ]
  %2122 = tail call i32 @IA__FcCharSetAddChar(%struct._FcCharSet* %2083, i32 %2121) #9
  %2123 = icmp eq i32 %2122, 0
  br i1 %2123, label %2124, label %2125

2124:                                             ; preds = %2119
  tail call void (%struct._FcConfigParse*, i32, i8*, ...) @FcConfigMessage(%struct._FcConfigParse* %15, i32 1, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.111, i64 0, i64 0), i32 %2121) #9
  br label %2127

2125:                                             ; preds = %2119
  %2126 = add nsw i32 %2120, 1
  br label %2127

2127:                                             ; preds = %2125, %2124
  %2128 = phi i32 [ %2126, %2125 ], [ %2120, %2124 ]
  %2129 = add i32 %2121, 1
  %2130 = icmp ugt i32 %2129, %2117
  br i1 %2130, label %2132, label %2119

2131:                                             ; preds = %2095
  tail call void (%struct._FcConfigParse*, i32, i8*, ...) @FcConfigMessage(%struct._FcConfigParse* %15, i32 2, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.112, i64 0, i64 0)) #9
  br label %2132

2132:                                             ; preds = %2127, %2131, %2108, %2106, %2104
  %2133 = phi i32 [ %2090, %2131 ], [ %2090, %2108 ], [ %2107, %2106 ], [ %2090, %2104 ], [ %2128, %2127 ]
  tail call fastcc void @FcVStackPopAndDestroy(%struct._FcConfigParse* %15) #9
  %2134 = load %struct._FcVStack*, %struct._FcVStack** %2085, align 8
  %2135 = icmp eq %struct._FcVStack* %2134, null
  br i1 %2135, label %2136, label %2088

2136:                                             ; preds = %2132, %2088
  %2137 = phi i32 [ %2090, %2088 ], [ %2133, %2132 ]
  %2138 = icmp sgt i32 %2137, 0
  br i1 %2138, label %2139, label %2173

2139:                                             ; preds = %2136
  %2140 = icmp eq %struct._FcCharSet* %2083, null
  br i1 %2140, label %3152, label %2141

2141:                                             ; preds = %2139
  %2142 = getelementptr inbounds i8, i8* %0, i64 2496
  %2143 = bitcast i8* %2142 to i32*
  %2144 = load i32, i32* %2143, align 8
  %2145 = icmp ult i32 %2144, 64
  br i1 %2145, label %2146, label %2150

2146:                                             ; preds = %2141
  %2147 = zext i32 %2144 to i64
  %2148 = add nuw nsw i32 %2144, 1
  store i32 %2148, i32* %2143, align 8
  %2149 = getelementptr inbounds %struct._FcConfigParse, %struct._FcConfigParse* %15, i64 0, i32 10, i64 %2147
  br label %2154

2150:                                             ; preds = %2141
  %2151 = tail call noalias i8* @malloc(i64 32) #9
  %2152 = bitcast i8* %2151 to %struct._FcVStack*
  %2153 = icmp eq i8* %2151, null
  br i1 %2153, label %3152, label %2154

2154:                                             ; preds = %2150, %2146
  %2155 = phi %struct._FcVStack* [ %2149, %2146 ], [ %2152, %2150 ]
  %2156 = getelementptr inbounds %struct._FcVStack, %struct._FcVStack* %2155, i64 0, i32 2
  store i32 0, i32* %2156, align 8
  %2157 = getelementptr inbounds %struct._FcVStack, %struct._FcVStack* %2155, i64 0, i32 0
  store %struct._FcVStack* null, %struct._FcVStack** %2157, align 8
  %2158 = bitcast i8* %2084 to i64*
  %2159 = load i64, i64* %2158, align 8
  %2160 = bitcast %struct._FcVStack* %2155 to i64*
  store i64 %2159, i64* %2160, align 8
  %2161 = load %struct._FcPStack*, %struct._FcPStack** %16, align 8
  %2162 = icmp eq %struct._FcPStack* %2161, null
  br i1 %2162, label %2166, label %2163

2163:                                             ; preds = %2154
  %2164 = getelementptr inbounds %struct._FcPStack, %struct._FcPStack* %2161, i64 0, i32 0
  %2165 = load %struct._FcPStack*, %struct._FcPStack** %2164, align 8
  br label %2166

2166:                                             ; preds = %2163, %2154
  %2167 = phi %struct._FcPStack* [ %2165, %2163 ], [ null, %2154 ]
  %2168 = getelementptr inbounds %struct._FcVStack, %struct._FcVStack* %2155, i64 0, i32 1
  store %struct._FcPStack* %2167, %struct._FcPStack** %2168, align 8
  store %struct._FcVStack* %2155, %struct._FcVStack** %2085, align 8
  %2169 = icmp eq %struct._FcVStack* %2155, null
  br i1 %2169, label %3152, label %2170

2170:                                             ; preds = %2166
  %2171 = getelementptr inbounds %struct._FcVStack, %struct._FcVStack* %2155, i64 0, i32 3
  %2172 = bitcast %union.anon.1* %2171 to %struct._FcCharSet**
  store %struct._FcCharSet* %2083, %struct._FcCharSet** %2172, align 8
  store i32 15, i32* %2156, align 8
  br label %3152

2173:                                             ; preds = %2136, %2082
  tail call void @IA__FcCharSetDestroy(%struct._FcCharSet* %2083) #9
  br label %3152

2174:                                             ; preds = %19
  %2175 = tail call %struct._FcLangSet* @IA__FcLangSetCreate() #9
  %2176 = getelementptr inbounds i8, i8* %0, i64 8
  %2177 = bitcast i8* %2176 to %struct._FcVStack**
  %2178 = load %struct._FcVStack*, %struct._FcVStack** %2177, align 8
  %2179 = icmp eq %struct._FcVStack* %2178, null
  br i1 %2179, label %2242, label %2180

2180:                                             ; preds = %2174, %2201
  %2181 = phi %struct._FcVStack* [ %2203, %2201 ], [ %2178, %2174 ]
  %2182 = phi i32 [ %2202, %2201 ], [ 0, %2174 ]
  %2183 = getelementptr inbounds %struct._FcVStack, %struct._FcVStack* %2181, i64 0, i32 1
  %2184 = load %struct._FcPStack*, %struct._FcPStack** %2183, align 8
  %2185 = load %struct._FcPStack*, %struct._FcPStack** %16, align 8
  %2186 = icmp eq %struct._FcPStack* %2184, %2185
  br i1 %2186, label %2187, label %2205

2187:                                             ; preds = %2180
  %2188 = getelementptr inbounds %struct._FcVStack, %struct._FcVStack* %2181, i64 0, i32 2
  %2189 = load i32, i32* %2188, align 8
  %2190 = icmp eq i32 %2189, 1
  br i1 %2190, label %2191, label %2200

2191:                                             ; preds = %2187
  %2192 = getelementptr inbounds %struct._FcVStack, %struct._FcVStack* %2181, i64 0, i32 3, i32 0
  %2193 = load i8*, i8** %2192, align 8
  %2194 = tail call i32 @IA__FcLangSetAdd(%struct._FcLangSet* %2175, i8* %2193) #9
  %2195 = icmp eq i32 %2194, 0
  br i1 %2195, label %2196, label %2198

2196:                                             ; preds = %2191
  %2197 = load i8*, i8** %2192, align 8
  tail call void (%struct._FcConfigParse*, i32, i8*, ...) @FcConfigMessage(%struct._FcConfigParse* %15, i32 1, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.113, i64 0, i64 0), i8* %2197) #9
  br label %2201

2198:                                             ; preds = %2191
  %2199 = add nsw i32 %2182, 1
  br label %2201

2200:                                             ; preds = %2187
  tail call void (%struct._FcConfigParse*, i32, i8*, ...) @FcConfigMessage(%struct._FcConfigParse* %15, i32 2, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.114, i64 0, i64 0)) #9
  br label %2201

2201:                                             ; preds = %2200, %2198, %2196
  %2202 = phi i32 [ %2199, %2198 ], [ %2182, %2196 ], [ %2182, %2200 ]
  tail call fastcc void @FcVStackPopAndDestroy(%struct._FcConfigParse* %15) #9
  %2203 = load %struct._FcVStack*, %struct._FcVStack** %2177, align 8
  %2204 = icmp eq %struct._FcVStack* %2203, null
  br i1 %2204, label %2205, label %2180

2205:                                             ; preds = %2201, %2180
  %2206 = phi i32 [ %2182, %2180 ], [ %2202, %2201 ]
  %2207 = icmp sgt i32 %2206, 0
  br i1 %2207, label %2208, label %2242

2208:                                             ; preds = %2205
  %2209 = icmp eq %struct._FcLangSet* %2175, null
  br i1 %2209, label %3152, label %2210

2210:                                             ; preds = %2208
  %2211 = getelementptr inbounds i8, i8* %0, i64 2496
  %2212 = bitcast i8* %2211 to i32*
  %2213 = load i32, i32* %2212, align 8
  %2214 = icmp ult i32 %2213, 64
  br i1 %2214, label %2215, label %2219

2215:                                             ; preds = %2210
  %2216 = zext i32 %2213 to i64
  %2217 = add nuw nsw i32 %2213, 1
  store i32 %2217, i32* %2212, align 8
  %2218 = getelementptr inbounds %struct._FcConfigParse, %struct._FcConfigParse* %15, i64 0, i32 10, i64 %2216
  br label %2223

2219:                                             ; preds = %2210
  %2220 = tail call noalias i8* @malloc(i64 32) #9
  %2221 = bitcast i8* %2220 to %struct._FcVStack*
  %2222 = icmp eq i8* %2220, null
  br i1 %2222, label %3152, label %2223

2223:                                             ; preds = %2219, %2215
  %2224 = phi %struct._FcVStack* [ %2218, %2215 ], [ %2221, %2219 ]
  %2225 = getelementptr inbounds %struct._FcVStack, %struct._FcVStack* %2224, i64 0, i32 2
  store i32 0, i32* %2225, align 8
  %2226 = getelementptr inbounds %struct._FcVStack, %struct._FcVStack* %2224, i64 0, i32 0
  store %struct._FcVStack* null, %struct._FcVStack** %2226, align 8
  %2227 = bitcast i8* %2176 to i64*
  %2228 = load i64, i64* %2227, align 8
  %2229 = bitcast %struct._FcVStack* %2224 to i64*
  store i64 %2228, i64* %2229, align 8
  %2230 = load %struct._FcPStack*, %struct._FcPStack** %16, align 8
  %2231 = icmp eq %struct._FcPStack* %2230, null
  br i1 %2231, label %2235, label %2232

2232:                                             ; preds = %2223
  %2233 = getelementptr inbounds %struct._FcPStack, %struct._FcPStack* %2230, i64 0, i32 0
  %2234 = load %struct._FcPStack*, %struct._FcPStack** %2233, align 8
  br label %2235

2235:                                             ; preds = %2232, %2223
  %2236 = phi %struct._FcPStack* [ %2234, %2232 ], [ null, %2223 ]
  %2237 = getelementptr inbounds %struct._FcVStack, %struct._FcVStack* %2224, i64 0, i32 1
  store %struct._FcPStack* %2236, %struct._FcPStack** %2237, align 8
  store %struct._FcVStack* %2224, %struct._FcVStack** %2177, align 8
  %2238 = icmp eq %struct._FcVStack* %2224, null
  br i1 %2238, label %3152, label %2239

2239:                                             ; preds = %2235
  %2240 = getelementptr inbounds %struct._FcVStack, %struct._FcVStack* %2224, i64 0, i32 3
  %2241 = bitcast %union.anon.1* %2240 to %struct._FcLangSet**
  store %struct._FcLangSet* %2175, %struct._FcLangSet** %2241, align 8
  store i32 16, i32* %2225, align 8
  br label %3152

2242:                                             ; preds = %2205, %2174
  tail call void @IA__FcLangSetDestroy(%struct._FcLangSet* %2175) #9
  br label %3152

2243:                                             ; preds = %19, %19
  %2244 = getelementptr inbounds i8, i8* %0, i64 8
  %2245 = bitcast i8* %2244 to %struct._FcVStack**
  %2246 = load %struct._FcVStack*, %struct._FcVStack** %2245, align 8
  %2247 = icmp eq %struct._FcVStack* %2246, null
  br i1 %2247, label %3152, label %2248

2248:                                             ; preds = %2243
  %2249 = getelementptr inbounds i8, i8* %0, i64 4552
  %2250 = bitcast i8* %2249 to i32*
  %2251 = getelementptr inbounds i8, i8* %0, i64 32
  %2252 = bitcast i8* %2251 to %struct._FcConfig**
  %2253 = icmp eq i32 %21, 18
  %2254 = zext i1 %2253 to i32
  %2255 = getelementptr inbounds %struct._FcVStack, %struct._FcVStack* %2246, i64 0, i32 1
  %2256 = load %struct._FcPStack*, %struct._FcPStack** %2255, align 8
  %2257 = icmp eq %struct._FcPStack* %2256, %17
  br i1 %2257, label %2258, label %3152

2258:                                             ; preds = %2248, %2305
  %2259 = phi %struct._FcVStack* [ %2303, %2305 ], [ %2246, %2248 ]
  %2260 = getelementptr inbounds %struct._FcVStack, %struct._FcVStack* %2259, i64 0, i32 2
  %2261 = load i32, i32* %2260, align 8
  switch i32 %2261, label %2301 [
    i32 4, label %2262
    i32 6, label %2280
  ]

2262:                                             ; preds = %2258
  %2263 = load i32, i32* %2250, align 8
  %2264 = icmp eq i32 %2263, 0
  br i1 %2264, label %2265, label %2275

2265:                                             ; preds = %2262
  %2266 = load %struct._FcConfig*, %struct._FcConfig** %2252, align 8
  %2267 = getelementptr inbounds %struct._FcVStack, %struct._FcVStack* %2259, i64 0, i32 3, i32 0
  %2268 = load i8*, i8** %2267, align 8
  %2269 = tail call i32 @FcConfigGlobAdd(%struct._FcConfig* %2266, i8* %2268, i32 %2254) #9
  %2270 = icmp eq i32 %2269, 0
  br i1 %2270, label %2271, label %2272

2271:                                             ; preds = %2265
  tail call void (%struct._FcConfigParse*, i32, i8*, ...) @FcConfigMessage(%struct._FcConfigParse* %15, i32 2, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.31, i64 0, i64 0)) #9
  br label %2302

2272:                                             ; preds = %2265
  %2273 = load i32, i32* %2250, align 8
  %2274 = icmp eq i32 %2273, 0
  br i1 %2274, label %2302, label %2275

2275:                                             ; preds = %2272, %2262
  %2276 = getelementptr inbounds %struct._FcVStack, %struct._FcVStack* %2259, i64 0, i32 3, i32 0
  %2277 = load i8*, i8** %2276, align 8
  %2278 = icmp eq i8* %2277, null
  br i1 %2278, label %2302, label %2279

2279:                                             ; preds = %2275
  tail call void @IA__FcStrFree(i8* nonnull %2277) #9
  store i32 0, i32* %2260, align 8
  br label %2302

2280:                                             ; preds = %2258
  %2281 = load i32, i32* %2250, align 8
  %2282 = icmp eq i32 %2281, 0
  br i1 %2282, label %2283, label %2294

2283:                                             ; preds = %2280
  %2284 = load %struct._FcConfig*, %struct._FcConfig** %2252, align 8
  %2285 = getelementptr inbounds %struct._FcVStack, %struct._FcVStack* %2259, i64 0, i32 3
  %2286 = bitcast %union.anon.1* %2285 to %struct._FcPattern**
  %2287 = load %struct._FcPattern*, %struct._FcPattern** %2286, align 8
  %2288 = tail call i32 @FcConfigPatternsAdd(%struct._FcConfig* %2284, %struct._FcPattern* %2287, i32 %2254) #9
  %2289 = icmp eq i32 %2288, 0
  br i1 %2289, label %2290, label %2291

2290:                                             ; preds = %2283
  tail call void (%struct._FcConfigParse*, i32, i8*, ...) @FcConfigMessage(%struct._FcConfigParse* %15, i32 2, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.31, i64 0, i64 0)) #9
  br label %2302

2291:                                             ; preds = %2283
  %2292 = load i32, i32* %2250, align 8
  %2293 = icmp eq i32 %2292, 0
  br i1 %2293, label %2300, label %2294

2294:                                             ; preds = %2280, %2291
  %2295 = getelementptr inbounds %struct._FcVStack, %struct._FcVStack* %2259, i64 0, i32 3
  %2296 = bitcast %union.anon.1* %2295 to %struct._FcPattern**
  %2297 = load %struct._FcPattern*, %struct._FcPattern** %2296, align 8
  %2298 = icmp eq %struct._FcPattern* %2297, null
  br i1 %2298, label %2300, label %2299

2299:                                             ; preds = %2294
  tail call void @IA__FcPatternDestroy(%struct._FcPattern* nonnull %2297) #9
  br label %2300

2300:                                             ; preds = %2299, %2294, %2291
  store i32 0, i32* %2260, align 8
  br label %2302

2301:                                             ; preds = %2258
  tail call void (%struct._FcConfigParse*, i32, i8*, ...) @FcConfigMessage(%struct._FcConfigParse* %15, i32 1, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.115, i64 0, i64 0)) #9
  br label %2302

2302:                                             ; preds = %2301, %2300, %2290, %2279, %2275, %2272, %2271
  tail call fastcc void @FcVStackPopAndDestroy(%struct._FcConfigParse* %15) #9
  %2303 = load %struct._FcVStack*, %struct._FcVStack** %2245, align 8
  %2304 = icmp eq %struct._FcVStack* %2303, null
  br i1 %2304, label %3152, label %2305

2305:                                             ; preds = %2302
  %2306 = load %struct._FcPStack*, %struct._FcPStack** %16, align 8
  %2307 = getelementptr inbounds %struct._FcVStack, %struct._FcVStack* %2303, i64 0, i32 1
  %2308 = load %struct._FcPStack*, %struct._FcPStack** %2307, align 8
  %2309 = icmp eq %struct._FcPStack* %2308, %2306
  br i1 %2309, label %2258, label %3152

2310:                                             ; preds = %19
  tail call fastcc void @FcParseString(%struct._FcConfigParse* %15, i32 4)
  br label %3152

2311:                                             ; preds = %19
  %2312 = tail call %struct._FcPattern* @IA__FcPatternCreate() #9
  %2313 = icmp eq %struct._FcPattern* %2312, null
  br i1 %2313, label %2319, label %2314

2314:                                             ; preds = %2311
  %2315 = getelementptr inbounds i8, i8* %0, i64 8
  %2316 = bitcast i8* %2315 to %struct._FcVStack**
  %2317 = load %struct._FcVStack*, %struct._FcVStack** %2316, align 8
  %2318 = icmp eq %struct._FcVStack* %2317, null
  br i1 %2318, label %2341, label %2320

2319:                                             ; preds = %2311
  tail call void (%struct._FcConfigParse*, i32, i8*, ...) @FcConfigMessage(%struct._FcConfigParse* %15, i32 2, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.31, i64 0, i64 0)) #9
  br label %3152

2320:                                             ; preds = %2314, %2338
  %2321 = phi %struct._FcVStack* [ %2339, %2338 ], [ %2317, %2314 ]
  %2322 = getelementptr inbounds %struct._FcVStack, %struct._FcVStack* %2321, i64 0, i32 1
  %2323 = load %struct._FcPStack*, %struct._FcPStack** %2322, align 8
  %2324 = load %struct._FcPStack*, %struct._FcPStack** %16, align 8
  %2325 = icmp eq %struct._FcPStack* %2323, %2324
  br i1 %2325, label %2326, label %2341

2326:                                             ; preds = %2320
  %2327 = getelementptr inbounds %struct._FcVStack, %struct._FcVStack* %2321, i64 0, i32 2
  %2328 = load i32, i32* %2327, align 8
  %2329 = icmp eq i32 %2328, 6
  br i1 %2329, label %2330, label %2337

2330:                                             ; preds = %2326
  %2331 = getelementptr inbounds %struct._FcVStack, %struct._FcVStack* %2321, i64 0, i32 3
  %2332 = bitcast %union.anon.1* %2331 to %struct._FcPattern**
  %2333 = load %struct._FcPattern*, %struct._FcPattern** %2332, align 8
  %2334 = tail call i32 @FcPatternAppend(%struct._FcPattern* nonnull %2312, %struct._FcPattern* %2333) #9
  %2335 = icmp eq i32 %2334, 0
  br i1 %2335, label %2336, label %2338

2336:                                             ; preds = %2330
  tail call void (%struct._FcConfigParse*, i32, i8*, ...) @FcConfigMessage(%struct._FcConfigParse* %15, i32 2, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.31, i64 0, i64 0)) #9
  tail call void @IA__FcPatternDestroy(%struct._FcPattern* nonnull %2312) #9
  br label %3152

2337:                                             ; preds = %2326
  tail call void (%struct._FcConfigParse*, i32, i8*, ...) @FcConfigMessage(%struct._FcConfigParse* %15, i32 1, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.116, i64 0, i64 0)) #9
  br label %2338

2338:                                             ; preds = %2337, %2330
  tail call fastcc void @FcVStackPopAndDestroy(%struct._FcConfigParse* %15) #9
  %2339 = load %struct._FcVStack*, %struct._FcVStack** %2316, align 8
  %2340 = icmp eq %struct._FcVStack* %2339, null
  br i1 %2340, label %2341, label %2320

2341:                                             ; preds = %2338, %2320, %2314
  %2342 = getelementptr inbounds i8, i8* %0, i64 2496
  %2343 = bitcast i8* %2342 to i32*
  %2344 = load i32, i32* %2343, align 8
  %2345 = icmp ult i32 %2344, 64
  br i1 %2345, label %2346, label %2350

2346:                                             ; preds = %2341
  %2347 = zext i32 %2344 to i64
  %2348 = add nuw nsw i32 %2344, 1
  store i32 %2348, i32* %2343, align 8
  %2349 = getelementptr inbounds %struct._FcConfigParse, %struct._FcConfigParse* %15, i64 0, i32 10, i64 %2347
  br label %2354

2350:                                             ; preds = %2341
  %2351 = tail call noalias i8* @malloc(i64 32) #9
  %2352 = bitcast i8* %2351 to %struct._FcVStack*
  %2353 = icmp eq i8* %2351, null
  br i1 %2353, label %3152, label %2354

2354:                                             ; preds = %2350, %2346
  %2355 = phi %struct._FcVStack* [ %2349, %2346 ], [ %2352, %2350 ]
  %2356 = getelementptr inbounds %struct._FcVStack, %struct._FcVStack* %2355, i64 0, i32 2
  store i32 0, i32* %2356, align 8
  %2357 = getelementptr inbounds %struct._FcVStack, %struct._FcVStack* %2355, i64 0, i32 0
  store %struct._FcVStack* null, %struct._FcVStack** %2357, align 8
  %2358 = bitcast i8* %2315 to i64*
  %2359 = load i64, i64* %2358, align 8
  %2360 = bitcast %struct._FcVStack* %2355 to i64*
  store i64 %2359, i64* %2360, align 8
  %2361 = load %struct._FcPStack*, %struct._FcPStack** %16, align 8
  %2362 = icmp eq %struct._FcPStack* %2361, null
  br i1 %2362, label %2366, label %2363

2363:                                             ; preds = %2354
  %2364 = getelementptr inbounds %struct._FcPStack, %struct._FcPStack* %2361, i64 0, i32 0
  %2365 = load %struct._FcPStack*, %struct._FcPStack** %2364, align 8
  br label %2366

2366:                                             ; preds = %2363, %2354
  %2367 = phi %struct._FcPStack* [ %2365, %2363 ], [ null, %2354 ]
  %2368 = getelementptr inbounds %struct._FcVStack, %struct._FcVStack* %2355, i64 0, i32 1
  store %struct._FcPStack* %2367, %struct._FcPStack** %2368, align 8
  store %struct._FcVStack* %2355, %struct._FcVStack** %2316, align 8
  %2369 = icmp eq %struct._FcVStack* %2355, null
  br i1 %2369, label %3152, label %2370

2370:                                             ; preds = %2366
  %2371 = getelementptr inbounds %struct._FcVStack, %struct._FcVStack* %2355, i64 0, i32 3
  %2372 = bitcast %union.anon.1* %2371 to %struct._FcPattern**
  store %struct._FcPattern* %2312, %struct._FcPattern** %2372, align 8
  store i32 6, i32* %2356, align 8
  br label %3152

2373:                                             ; preds = %19
  %2374 = tail call %struct._FcPattern* @IA__FcPatternCreate() #9
  %2375 = icmp eq %struct._FcPattern* %2374, null
  br i1 %2375, label %2376, label %2377

2376:                                             ; preds = %2373
  tail call void (%struct._FcConfigParse*, i32, i8*, ...) @FcConfigMessage(%struct._FcConfigParse* %15, i32 2, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.31, i64 0, i64 0)) #9
  br label %3152

2377:                                             ; preds = %2373
  %2378 = load %struct._FcPStack*, %struct._FcPStack** %16, align 8
  %2379 = icmp eq %struct._FcPStack* %2378, null
  br i1 %2379, label %2414, label %2380

2380:                                             ; preds = %2377
  %2381 = getelementptr inbounds %struct._FcPStack, %struct._FcPStack* %2378, i64 0, i32 2
  %2382 = load i8**, i8*** %2381, align 8
  %2383 = icmp eq i8** %2382, null
  br i1 %2383, label %2414, label %2384

2384:                                             ; preds = %2380
  %2385 = load i8*, i8** %2382, align 8
  %2386 = icmp eq i8* %2385, null
  br i1 %2386, label %2414, label %2387

2387:                                             ; preds = %2384, %2392
  %2388 = phi i8* [ %2394, %2392 ], [ %2385, %2384 ]
  %2389 = phi i8** [ %2393, %2392 ], [ %2382, %2384 ]
  %2390 = tail call i32 @strcmp(i8* nonnull %2388, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.92, i64 0, i64 0)) #12
  %2391 = icmp eq i32 %2390, 0
  br i1 %2391, label %2396, label %2392

2392:                                             ; preds = %2387
  %2393 = getelementptr inbounds i8*, i8** %2389, i64 2
  %2394 = load i8*, i8** %2393, align 8
  %2395 = icmp eq i8* %2394, null
  br i1 %2395, label %2414, label %2387

2396:                                             ; preds = %2387
  store i8 0, i8* %2388, align 1
  %2397 = getelementptr inbounds i8*, i8** %2389, i64 1
  %2398 = load i8*, i8** %2397, align 8
  %2399 = icmp eq i8* %2398, null
  br i1 %2399, label %2414, label %2400

2400:                                             ; preds = %2396
  %2401 = bitcast %struct._FcValue* %3 to i8*
  %2402 = getelementptr inbounds i8, i8* %0, i64 8
  %2403 = bitcast i8* %2402 to %struct._FcVStack**
  %2404 = getelementptr inbounds %struct._FcValue, %struct._FcValue* %3, i64 0, i32 0
  %2405 = getelementptr inbounds %struct._FcValue, %struct._FcValue* %3, i64 0, i32 1
  %2406 = bitcast %union.anon.3* %2405 to %struct._FcRange**
  %2407 = bitcast %union.anon.3* %2405 to %struct._FcLangSet**
  %2408 = bitcast %union.anon.3* %2405 to %struct._FcCharSet**
  %2409 = bitcast %union.anon.3* %2405 to i32*
  %2410 = bitcast %union.anon.3* %2405 to i64*
  %2411 = getelementptr inbounds %struct._FcValue, %struct._FcValue* %3, i64 0, i32 1, i32 0
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %2401) #9
  %2412 = load %struct._FcVStack*, %struct._FcVStack** %2403, align 8
  %2413 = icmp eq %struct._FcVStack* %2412, null
  br i1 %2413, label %2421, label %2415

2414:                                             ; preds = %2392, %2396, %2384, %2380, %2377
  tail call void (%struct._FcConfigParse*, i32, i8*, ...) @FcConfigMessage(%struct._FcConfigParse* %15, i32 1, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.117, i64 0, i64 0)) #9
  tail call void @IA__FcPatternDestroy(%struct._FcPattern* nonnull %2374) #9
  br label %3152

2415:                                             ; preds = %2400, %2479
  %2416 = phi %struct._FcVStack* [ %2480, %2479 ], [ %2412, %2400 ]
  %2417 = getelementptr inbounds %struct._FcVStack, %struct._FcVStack* %2416, i64 0, i32 1
  %2418 = load %struct._FcPStack*, %struct._FcPStack** %2417, align 8
  %2419 = load %struct._FcPStack*, %struct._FcPStack** %16, align 8
  %2420 = icmp eq %struct._FcPStack* %2418, %2419
  br i1 %2420, label %2422, label %2421

2421:                                             ; preds = %2479, %2415, %2400
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %2401) #9
  br label %2482

2422:                                             ; preds = %2415
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %2401, i8 -86, i64 16, i1 false) #9
  store i32 0, i32* %2404, align 8
  %2423 = getelementptr inbounds %struct._FcVStack, %struct._FcVStack* %2416, i64 0, i32 2
  %2424 = load i32, i32* %2423, align 8
  switch i32 %2424, label %2470 [
    i32 1, label %2425
    i32 3, label %2431
    i32 10, label %2437
    i32 11, label %2441
    i32 14, label %2445
    i32 15, label %2449
    i32 16, label %2456
    i32 13, label %2463
  ]

2425:                                             ; preds = %2422
  %2426 = getelementptr inbounds %struct._FcVStack, %struct._FcVStack* %2416, i64 0, i32 3, i32 0
  %2427 = load i8*, i8** %2426, align 8
  %2428 = call noalias i8* @strdup(i8* %2427) #9
  store i8* %2428, i8** %2411, align 8
  %2429 = icmp eq i8* %2428, null
  br i1 %2429, label %2471, label %2430

2430:                                             ; preds = %2425
  store i32 3, i32* %2404, align 8
  br label %2471

2431:                                             ; preds = %2422
  %2432 = getelementptr inbounds %struct._FcVStack, %struct._FcVStack* %2416, i64 0, i32 3, i32 0
  %2433 = load i8*, i8** %2432, align 8
  %2434 = call i32 @IA__FcNameConstant(i8* %2433, i32* %2409) #9
  %2435 = icmp eq i32 %2434, 0
  br i1 %2435, label %2471, label %2436

2436:                                             ; preds = %2431
  store i32 1, i32* %2404, align 8
  br label %2471

2437:                                             ; preds = %2422
  %2438 = getelementptr inbounds %struct._FcVStack, %struct._FcVStack* %2416, i64 0, i32 3
  %2439 = bitcast %union.anon.1* %2438 to i32*
  %2440 = load i32, i32* %2439, align 8
  store i32 %2440, i32* %2409, align 8
  store i32 1, i32* %2404, align 8
  br label %2471

2441:                                             ; preds = %2422
  %2442 = getelementptr inbounds %struct._FcVStack, %struct._FcVStack* %2416, i64 0, i32 3
  %2443 = bitcast %union.anon.1* %2442 to i64*
  %2444 = load i64, i64* %2443, align 8
  store i64 %2444, i64* %2410, align 8
  store i32 2, i32* %2404, align 8
  br label %2471

2445:                                             ; preds = %2422
  %2446 = getelementptr inbounds %struct._FcVStack, %struct._FcVStack* %2416, i64 0, i32 3
  %2447 = bitcast %union.anon.1* %2446 to i32*
  %2448 = load i32, i32* %2447, align 8
  store i32 %2448, i32* %2409, align 8
  store i32 4, i32* %2404, align 8
  br label %2471

2449:                                             ; preds = %2422
  %2450 = getelementptr inbounds %struct._FcVStack, %struct._FcVStack* %2416, i64 0, i32 3
  %2451 = bitcast %union.anon.1* %2450 to %struct._FcCharSet**
  %2452 = load %struct._FcCharSet*, %struct._FcCharSet** %2451, align 8
  %2453 = call %struct._FcCharSet* @IA__FcCharSetCopy(%struct._FcCharSet* %2452) #9
  store %struct._FcCharSet* %2453, %struct._FcCharSet** %2408, align 8
  %2454 = icmp eq %struct._FcCharSet* %2453, null
  br i1 %2454, label %2471, label %2455

2455:                                             ; preds = %2449
  store i32 6, i32* %2404, align 8
  br label %2471

2456:                                             ; preds = %2422
  %2457 = getelementptr inbounds %struct._FcVStack, %struct._FcVStack* %2416, i64 0, i32 3
  %2458 = bitcast %union.anon.1* %2457 to %struct._FcLangSet**
  %2459 = load %struct._FcLangSet*, %struct._FcLangSet** %2458, align 8
  %2460 = call %struct._FcLangSet* @IA__FcLangSetCopy(%struct._FcLangSet* %2459) #9
  store %struct._FcLangSet* %2460, %struct._FcLangSet** %2407, align 8
  %2461 = icmp eq %struct._FcLangSet* %2460, null
  br i1 %2461, label %2471, label %2462

2462:                                             ; preds = %2456
  store i32 8, i32* %2404, align 8
  br label %2471

2463:                                             ; preds = %2422
  %2464 = getelementptr inbounds %struct._FcVStack, %struct._FcVStack* %2416, i64 0, i32 3
  %2465 = bitcast %union.anon.1* %2464 to %struct._FcRange**
  %2466 = load %struct._FcRange*, %struct._FcRange** %2465, align 8
  %2467 = call %struct._FcRange* @IA__FcRangeCopy(%struct._FcRange* %2466) #9
  store %struct._FcRange* %2467, %struct._FcRange** %2406, align 8
  %2468 = icmp eq %struct._FcRange* %2467, null
  br i1 %2468, label %2471, label %2469

2469:                                             ; preds = %2463
  store i32 9, i32* %2404, align 8
  br label %2471

2470:                                             ; preds = %2422
  call void (%struct._FcConfigParse*, i32, i8*, ...) @FcConfigMessage(%struct._FcConfigParse* %15, i32 1, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.118, i64 0, i64 0), i32 %2424) #9
  br label %2471

2471:                                             ; preds = %2470, %2469, %2463, %2462, %2456, %2455, %2449, %2445, %2441, %2437, %2436, %2431, %2430, %2425
  call fastcc void @FcVStackPopAndDestroy(%struct._FcConfigParse* %15) #9
  %2472 = load i32, i32* %2404, align 8
  %2473 = load i8*, i8** %2411, align 8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %2401) #9
  %2474 = icmp eq i32 %2472, 0
  br i1 %2474, label %2482, label %2475

2475:                                             ; preds = %2471
  %2476 = call i32 @IA__FcPatternAdd(%struct._FcPattern* nonnull %2374, i8* nonnull %2398, i32 %2472, i8* %2473, i32 1) #9
  %2477 = icmp eq i32 %2476, 0
  br i1 %2477, label %2478, label %2479

2478:                                             ; preds = %2475
  call void (%struct._FcConfigParse*, i32, i8*, ...) @FcConfigMessage(%struct._FcConfigParse* %15, i32 2, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.31, i64 0, i64 0)) #9
  call void @IA__FcValueDestroy(i32 %2472, i8* %2473) #9
  br label %2482

2479:                                             ; preds = %2475
  call void @IA__FcValueDestroy(i32 %2472, i8* %2473) #9
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %2401) #9
  %2480 = load %struct._FcVStack*, %struct._FcVStack** %2403, align 8
  %2481 = icmp eq %struct._FcVStack* %2480, null
  br i1 %2481, label %2421, label %2415

2482:                                             ; preds = %2471, %2478, %2421
  %2483 = getelementptr inbounds i8, i8* %0, i64 2496
  %2484 = bitcast i8* %2483 to i32*
  %2485 = load i32, i32* %2484, align 8
  %2486 = icmp ult i32 %2485, 64
  br i1 %2486, label %2487, label %2491

2487:                                             ; preds = %2482
  %2488 = zext i32 %2485 to i64
  %2489 = add nuw nsw i32 %2485, 1
  store i32 %2489, i32* %2484, align 8
  %2490 = getelementptr inbounds %struct._FcConfigParse, %struct._FcConfigParse* %15, i64 0, i32 10, i64 %2488
  br label %2495

2491:                                             ; preds = %2482
  %2492 = call noalias i8* @malloc(i64 32) #9
  %2493 = bitcast i8* %2492 to %struct._FcVStack*
  %2494 = icmp eq i8* %2492, null
  br i1 %2494, label %3152, label %2495

2495:                                             ; preds = %2491, %2487
  %2496 = phi %struct._FcVStack* [ %2490, %2487 ], [ %2493, %2491 ]
  %2497 = getelementptr inbounds %struct._FcVStack, %struct._FcVStack* %2496, i64 0, i32 2
  store i32 0, i32* %2497, align 8
  %2498 = getelementptr inbounds %struct._FcVStack, %struct._FcVStack* %2496, i64 0, i32 0
  store %struct._FcVStack* null, %struct._FcVStack** %2498, align 8
  %2499 = bitcast i8* %2402 to i64*
  %2500 = load i64, i64* %2499, align 8
  %2501 = bitcast %struct._FcVStack* %2496 to i64*
  store i64 %2500, i64* %2501, align 8
  %2502 = load %struct._FcPStack*, %struct._FcPStack** %16, align 8
  %2503 = icmp eq %struct._FcPStack* %2502, null
  br i1 %2503, label %2507, label %2504

2504:                                             ; preds = %2495
  %2505 = getelementptr inbounds %struct._FcPStack, %struct._FcPStack* %2502, i64 0, i32 0
  %2506 = load %struct._FcPStack*, %struct._FcPStack** %2505, align 8
  br label %2507

2507:                                             ; preds = %2504, %2495
  %2508 = phi %struct._FcPStack* [ %2506, %2504 ], [ null, %2495 ]
  %2509 = getelementptr inbounds %struct._FcVStack, %struct._FcVStack* %2496, i64 0, i32 1
  store %struct._FcPStack* %2508, %struct._FcPStack** %2509, align 8
  store %struct._FcVStack* %2496, %struct._FcVStack** %2403, align 8
  %2510 = icmp eq %struct._FcVStack* %2496, null
  br i1 %2510, label %3152, label %2511

2511:                                             ; preds = %2507
  %2512 = getelementptr inbounds %struct._FcVStack, %struct._FcVStack* %2496, i64 0, i32 3
  %2513 = bitcast %union.anon.1* %2512 to %struct._FcPattern**
  store %struct._FcPattern* %2374, %struct._FcPattern** %2513, align 8
  store i32 6, i32* %2497, align 8
  br label %3152

2514:                                             ; preds = %19
  %2515 = getelementptr inbounds %struct._FcPStack, %struct._FcPStack* %17, i64 0, i32 2
  %2516 = load i8**, i8*** %2515, align 8
  %2517 = icmp eq i8** %2516, null
  br i1 %2517, label %2544, label %2518

2518:                                             ; preds = %2514
  %2519 = load i8*, i8** %2516, align 8
  %2520 = icmp eq i8* %2519, null
  br i1 %2520, label %2544, label %2521

2521:                                             ; preds = %2518, %2526
  %2522 = phi i8* [ %2528, %2526 ], [ %2519, %2518 ]
  %2523 = phi i8** [ %2527, %2526 ], [ %2516, %2518 ]
  %2524 = tail call i32 @strcmp(i8* nonnull %2522, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.50, i64 0, i64 0)) #12
  %2525 = icmp eq i32 %2524, 0
  br i1 %2525, label %2530, label %2526

2526:                                             ; preds = %2521
  %2527 = getelementptr inbounds i8*, i8** %2523, i64 2
  %2528 = load i8*, i8** %2527, align 8
  %2529 = icmp eq i8* %2528, null
  br i1 %2529, label %2544, label %2521

2530:                                             ; preds = %2521
  store i8 0, i8* %2522, align 1
  %2531 = getelementptr inbounds i8*, i8** %2523, i64 1
  %2532 = load i8*, i8** %2531, align 8
  %2533 = icmp eq i8* %2532, null
  br i1 %2533, label %2544, label %2534

2534:                                             ; preds = %2530
  %2535 = tail call i32 @strcmp(i8* nonnull %2532, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.51, i64 0, i64 0)) #12
  %2536 = icmp eq i32 %2535, 0
  br i1 %2536, label %2544, label %2537

2537:                                             ; preds = %2534
  %2538 = tail call i32 @strcmp(i8* nonnull %2532, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.52, i64 0, i64 0)) #12
  %2539 = icmp eq i32 %2538, 0
  br i1 %2539, label %2544, label %2540

2540:                                             ; preds = %2537
  %2541 = tail call i32 @strcmp(i8* nonnull %2532, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.39, i64 0, i64 0)) #12
  %2542 = icmp eq i32 %2541, 0
  br i1 %2542, label %2544, label %2543

2543:                                             ; preds = %2540
  tail call void (%struct._FcConfigParse*, i32, i8*, ...) @FcConfigMessage(%struct._FcConfigParse* %15, i32 1, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.119, i64 0, i64 0), i8* nonnull %2532) #9
  br label %3152

2544:                                             ; preds = %2526, %2540, %2537, %2534, %2530, %2518, %2514
  %2545 = phi i32 [ -1, %2518 ], [ -1, %2514 ], [ -1, %2540 ], [ 1, %2537 ], [ 0, %2534 ], [ -1, %2530 ], [ -1, %2526 ]
  %2546 = load %struct._FcPStack*, %struct._FcPStack** %16, align 8
  %2547 = icmp eq %struct._FcPStack* %2546, null
  br i1 %2547, label %3152, label %2548

2548:                                             ; preds = %2544
  %2549 = getelementptr inbounds %struct._FcPStack, %struct._FcPStack* %2546, i64 0, i32 3
  %2550 = tail call i8* @FcStrBufDone(%struct._FcStrBuf* %2549) #9
  %2551 = icmp eq i8* %2550, null
  br i1 %2551, label %2552, label %2553

2552:                                             ; preds = %2548
  tail call void (%struct._FcConfigParse*, i32, i8*, ...) @FcConfigMessage(%struct._FcConfigParse* %15, i32 2, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.31, i64 0, i64 0)) #9
  br label %3152

2553:                                             ; preds = %2548
  %2554 = tail call i32 @FcObjectFromName(i8* nonnull %2550) #9
  %2555 = getelementptr inbounds i8, i8* %0, i64 2496
  %2556 = bitcast i8* %2555 to i32*
  %2557 = load i32, i32* %2556, align 8
  %2558 = icmp ult i32 %2557, 64
  br i1 %2558, label %2559, label %2563

2559:                                             ; preds = %2553
  %2560 = zext i32 %2557 to i64
  %2561 = add nuw nsw i32 %2557, 1
  store i32 %2561, i32* %2556, align 8
  %2562 = getelementptr inbounds %struct._FcConfigParse, %struct._FcConfigParse* %15, i64 0, i32 10, i64 %2560
  br label %2567

2563:                                             ; preds = %2553
  %2564 = tail call noalias i8* @malloc(i64 32) #9
  %2565 = bitcast i8* %2564 to %struct._FcVStack*
  %2566 = icmp eq i8* %2564, null
  br i1 %2566, label %2590, label %2567

2567:                                             ; preds = %2563, %2559
  %2568 = phi %struct._FcVStack* [ %2562, %2559 ], [ %2565, %2563 ]
  %2569 = getelementptr inbounds %struct._FcVStack, %struct._FcVStack* %2568, i64 0, i32 2
  store i32 0, i32* %2569, align 8
  %2570 = getelementptr inbounds %struct._FcVStack, %struct._FcVStack* %2568, i64 0, i32 0
  store %struct._FcVStack* null, %struct._FcVStack** %2570, align 8
  %2571 = getelementptr inbounds i8, i8* %0, i64 8
  %2572 = bitcast i8* %2571 to %struct._FcVStack**
  %2573 = bitcast i8* %2571 to i64*
  %2574 = load i64, i64* %2573, align 8
  %2575 = bitcast %struct._FcVStack* %2568 to i64*
  store i64 %2574, i64* %2575, align 8
  %2576 = load %struct._FcPStack*, %struct._FcPStack** %16, align 8
  %2577 = icmp eq %struct._FcPStack* %2576, null
  br i1 %2577, label %2581, label %2578

2578:                                             ; preds = %2567
  %2579 = getelementptr inbounds %struct._FcPStack, %struct._FcPStack* %2576, i64 0, i32 0
  %2580 = load %struct._FcPStack*, %struct._FcPStack** %2579, align 8
  br label %2581

2581:                                             ; preds = %2578, %2567
  %2582 = phi %struct._FcPStack* [ %2580, %2578 ], [ null, %2567 ]
  %2583 = getelementptr inbounds %struct._FcVStack, %struct._FcVStack* %2568, i64 0, i32 1
  store %struct._FcPStack* %2582, %struct._FcPStack** %2583, align 8
  store %struct._FcVStack* %2568, %struct._FcVStack** %2572, align 8
  %2584 = icmp eq %struct._FcVStack* %2568, null
  br i1 %2584, label %2590, label %2585

2585:                                             ; preds = %2581
  %2586 = getelementptr inbounds %struct._FcVStack, %struct._FcVStack* %2568, i64 0, i32 3
  %2587 = bitcast %union.anon.1* %2586 to %struct._FcExprName*
  %2588 = bitcast %union.anon.1* %2586 to i32*
  store i32 %2554, i32* %2588, align 8
  %2589 = getelementptr inbounds %struct._FcExprName, %struct._FcExprName* %2587, i64 0, i32 1
  store i32 %2545, i32* %2589, align 4
  store i32 5, i32* %2569, align 8
  br label %2590

2590:                                             ; preds = %2585, %2581, %2563
  tail call void @IA__FcStrFree(i8* nonnull %2550) #9
  br label %3152

2591:                                             ; preds = %19
  tail call fastcc void @FcParseString(%struct._FcConfigParse* %15, i32 3)
  br label %3152

2592:                                             ; preds = %19
  %2593 = tail call fastcc %struct._FcExpr* @FcPopBinary(%struct._FcConfigParse* %15, i32 20) #9
  %2594 = icmp eq %struct._FcExpr* %2593, null
  br i1 %2594, label %3152, label %2595

2595:                                             ; preds = %2592
  %2596 = getelementptr inbounds i8, i8* %0, i64 2496
  %2597 = bitcast i8* %2596 to i32*
  %2598 = load i32, i32* %2597, align 8
  %2599 = icmp ult i32 %2598, 64
  br i1 %2599, label %2600, label %2604

2600:                                             ; preds = %2595
  %2601 = zext i32 %2598 to i64
  %2602 = add nuw nsw i32 %2598, 1
  store i32 %2602, i32* %2597, align 8
  %2603 = getelementptr inbounds %struct._FcConfigParse, %struct._FcConfigParse* %15, i64 0, i32 10, i64 %2601
  br label %2608

2604:                                             ; preds = %2595
  %2605 = tail call noalias i8* @malloc(i64 32) #9
  %2606 = bitcast i8* %2605 to %struct._FcVStack*
  %2607 = icmp eq i8* %2605, null
  br i1 %2607, label %3152, label %2608

2608:                                             ; preds = %2604, %2600
  %2609 = phi %struct._FcVStack* [ %2603, %2600 ], [ %2606, %2604 ]
  %2610 = getelementptr inbounds %struct._FcVStack, %struct._FcVStack* %2609, i64 0, i32 2
  store i32 0, i32* %2610, align 8
  %2611 = getelementptr inbounds %struct._FcVStack, %struct._FcVStack* %2609, i64 0, i32 0
  store %struct._FcVStack* null, %struct._FcVStack** %2611, align 8
  %2612 = getelementptr inbounds i8, i8* %0, i64 8
  %2613 = bitcast i8* %2612 to %struct._FcVStack**
  %2614 = bitcast i8* %2612 to i64*
  %2615 = load i64, i64* %2614, align 8
  %2616 = bitcast %struct._FcVStack* %2609 to i64*
  store i64 %2615, i64* %2616, align 8
  %2617 = load %struct._FcPStack*, %struct._FcPStack** %16, align 8
  %2618 = icmp eq %struct._FcPStack* %2617, null
  br i1 %2618, label %2622, label %2619

2619:                                             ; preds = %2608
  %2620 = getelementptr inbounds %struct._FcPStack, %struct._FcPStack* %2617, i64 0, i32 0
  %2621 = load %struct._FcPStack*, %struct._FcPStack** %2620, align 8
  br label %2622

2622:                                             ; preds = %2619, %2608
  %2623 = phi %struct._FcPStack* [ %2621, %2619 ], [ null, %2608 ]
  %2624 = getelementptr inbounds %struct._FcVStack, %struct._FcVStack* %2609, i64 0, i32 1
  store %struct._FcPStack* %2623, %struct._FcPStack** %2624, align 8
  store %struct._FcVStack* %2609, %struct._FcVStack** %2613, align 8
  %2625 = icmp eq %struct._FcVStack* %2609, null
  br i1 %2625, label %3152, label %2626

2626:                                             ; preds = %2622
  %2627 = getelementptr inbounds %struct._FcVStack, %struct._FcVStack* %2609, i64 0, i32 3
  %2628 = bitcast %union.anon.1* %2627 to %struct._FcExpr**
  store %struct._FcExpr* %2593, %struct._FcExpr** %2628, align 8
  store i32 18, i32* %2610, align 8
  br label %3152

2629:                                             ; preds = %19
  %2630 = tail call fastcc %struct._FcExpr* @FcPopBinary(%struct._FcConfigParse* %15, i32 21) #9
  %2631 = icmp eq %struct._FcExpr* %2630, null
  br i1 %2631, label %3152, label %2632

2632:                                             ; preds = %2629
  %2633 = getelementptr inbounds i8, i8* %0, i64 2496
  %2634 = bitcast i8* %2633 to i32*
  %2635 = load i32, i32* %2634, align 8
  %2636 = icmp ult i32 %2635, 64
  br i1 %2636, label %2637, label %2641

2637:                                             ; preds = %2632
  %2638 = zext i32 %2635 to i64
  %2639 = add nuw nsw i32 %2635, 1
  store i32 %2639, i32* %2634, align 8
  %2640 = getelementptr inbounds %struct._FcConfigParse, %struct._FcConfigParse* %15, i64 0, i32 10, i64 %2638
  br label %2645

2641:                                             ; preds = %2632
  %2642 = tail call noalias i8* @malloc(i64 32) #9
  %2643 = bitcast i8* %2642 to %struct._FcVStack*
  %2644 = icmp eq i8* %2642, null
  br i1 %2644, label %3152, label %2645

2645:                                             ; preds = %2641, %2637
  %2646 = phi %struct._FcVStack* [ %2640, %2637 ], [ %2643, %2641 ]
  %2647 = getelementptr inbounds %struct._FcVStack, %struct._FcVStack* %2646, i64 0, i32 2
  store i32 0, i32* %2647, align 8
  %2648 = getelementptr inbounds %struct._FcVStack, %struct._FcVStack* %2646, i64 0, i32 0
  store %struct._FcVStack* null, %struct._FcVStack** %2648, align 8
  %2649 = getelementptr inbounds i8, i8* %0, i64 8
  %2650 = bitcast i8* %2649 to %struct._FcVStack**
  %2651 = bitcast i8* %2649 to i64*
  %2652 = load i64, i64* %2651, align 8
  %2653 = bitcast %struct._FcVStack* %2646 to i64*
  store i64 %2652, i64* %2653, align 8
  %2654 = load %struct._FcPStack*, %struct._FcPStack** %16, align 8
  %2655 = icmp eq %struct._FcPStack* %2654, null
  br i1 %2655, label %2659, label %2656

2656:                                             ; preds = %2645
  %2657 = getelementptr inbounds %struct._FcPStack, %struct._FcPStack* %2654, i64 0, i32 0
  %2658 = load %struct._FcPStack*, %struct._FcPStack** %2657, align 8
  br label %2659

2659:                                             ; preds = %2656, %2645
  %2660 = phi %struct._FcPStack* [ %2658, %2656 ], [ null, %2645 ]
  %2661 = getelementptr inbounds %struct._FcVStack, %struct._FcVStack* %2646, i64 0, i32 1
  store %struct._FcPStack* %2660, %struct._FcPStack** %2661, align 8
  store %struct._FcVStack* %2646, %struct._FcVStack** %2650, align 8
  %2662 = icmp eq %struct._FcVStack* %2646, null
  br i1 %2662, label %3152, label %2663

2663:                                             ; preds = %2659
  %2664 = getelementptr inbounds %struct._FcVStack, %struct._FcVStack* %2646, i64 0, i32 3
  %2665 = bitcast %union.anon.1* %2664 to %struct._FcExpr**
  store %struct._FcExpr* %2630, %struct._FcExpr** %2665, align 8
  store i32 18, i32* %2647, align 8
  br label %3152

2666:                                             ; preds = %19
  %2667 = tail call fastcc %struct._FcExpr* @FcPopBinary(%struct._FcConfigParse* %15, i32 22) #9
  %2668 = icmp eq %struct._FcExpr* %2667, null
  br i1 %2668, label %3152, label %2669

2669:                                             ; preds = %2666
  %2670 = getelementptr inbounds i8, i8* %0, i64 2496
  %2671 = bitcast i8* %2670 to i32*
  %2672 = load i32, i32* %2671, align 8
  %2673 = icmp ult i32 %2672, 64
  br i1 %2673, label %2674, label %2678

2674:                                             ; preds = %2669
  %2675 = zext i32 %2672 to i64
  %2676 = add nuw nsw i32 %2672, 1
  store i32 %2676, i32* %2671, align 8
  %2677 = getelementptr inbounds %struct._FcConfigParse, %struct._FcConfigParse* %15, i64 0, i32 10, i64 %2675
  br label %2682

2678:                                             ; preds = %2669
  %2679 = tail call noalias i8* @malloc(i64 32) #9
  %2680 = bitcast i8* %2679 to %struct._FcVStack*
  %2681 = icmp eq i8* %2679, null
  br i1 %2681, label %3152, label %2682

2682:                                             ; preds = %2678, %2674
  %2683 = phi %struct._FcVStack* [ %2677, %2674 ], [ %2680, %2678 ]
  %2684 = getelementptr inbounds %struct._FcVStack, %struct._FcVStack* %2683, i64 0, i32 2
  store i32 0, i32* %2684, align 8
  %2685 = getelementptr inbounds %struct._FcVStack, %struct._FcVStack* %2683, i64 0, i32 0
  store %struct._FcVStack* null, %struct._FcVStack** %2685, align 8
  %2686 = getelementptr inbounds i8, i8* %0, i64 8
  %2687 = bitcast i8* %2686 to %struct._FcVStack**
  %2688 = bitcast i8* %2686 to i64*
  %2689 = load i64, i64* %2688, align 8
  %2690 = bitcast %struct._FcVStack* %2683 to i64*
  store i64 %2689, i64* %2690, align 8
  %2691 = load %struct._FcPStack*, %struct._FcPStack** %16, align 8
  %2692 = icmp eq %struct._FcPStack* %2691, null
  br i1 %2692, label %2696, label %2693

2693:                                             ; preds = %2682
  %2694 = getelementptr inbounds %struct._FcPStack, %struct._FcPStack* %2691, i64 0, i32 0
  %2695 = load %struct._FcPStack*, %struct._FcPStack** %2694, align 8
  br label %2696

2696:                                             ; preds = %2693, %2682
  %2697 = phi %struct._FcPStack* [ %2695, %2693 ], [ null, %2682 ]
  %2698 = getelementptr inbounds %struct._FcVStack, %struct._FcVStack* %2683, i64 0, i32 1
  store %struct._FcPStack* %2697, %struct._FcPStack** %2698, align 8
  store %struct._FcVStack* %2683, %struct._FcVStack** %2687, align 8
  %2699 = icmp eq %struct._FcVStack* %2683, null
  br i1 %2699, label %3152, label %2700

2700:                                             ; preds = %2696
  %2701 = getelementptr inbounds %struct._FcVStack, %struct._FcVStack* %2683, i64 0, i32 3
  %2702 = bitcast %union.anon.1* %2701 to %struct._FcExpr**
  store %struct._FcExpr* %2667, %struct._FcExpr** %2702, align 8
  store i32 18, i32* %2684, align 8
  br label %3152

2703:                                             ; preds = %19
  %2704 = tail call fastcc %struct._FcExpr* @FcPopBinary(%struct._FcConfigParse* %15, i32 23) #9
  %2705 = icmp eq %struct._FcExpr* %2704, null
  br i1 %2705, label %3152, label %2706

2706:                                             ; preds = %2703
  %2707 = getelementptr inbounds i8, i8* %0, i64 2496
  %2708 = bitcast i8* %2707 to i32*
  %2709 = load i32, i32* %2708, align 8
  %2710 = icmp ult i32 %2709, 64
  br i1 %2710, label %2711, label %2715

2711:                                             ; preds = %2706
  %2712 = zext i32 %2709 to i64
  %2713 = add nuw nsw i32 %2709, 1
  store i32 %2713, i32* %2708, align 8
  %2714 = getelementptr inbounds %struct._FcConfigParse, %struct._FcConfigParse* %15, i64 0, i32 10, i64 %2712
  br label %2719

2715:                                             ; preds = %2706
  %2716 = tail call noalias i8* @malloc(i64 32) #9
  %2717 = bitcast i8* %2716 to %struct._FcVStack*
  %2718 = icmp eq i8* %2716, null
  br i1 %2718, label %3152, label %2719

2719:                                             ; preds = %2715, %2711
  %2720 = phi %struct._FcVStack* [ %2714, %2711 ], [ %2717, %2715 ]
  %2721 = getelementptr inbounds %struct._FcVStack, %struct._FcVStack* %2720, i64 0, i32 2
  store i32 0, i32* %2721, align 8
  %2722 = getelementptr inbounds %struct._FcVStack, %struct._FcVStack* %2720, i64 0, i32 0
  store %struct._FcVStack* null, %struct._FcVStack** %2722, align 8
  %2723 = getelementptr inbounds i8, i8* %0, i64 8
  %2724 = bitcast i8* %2723 to %struct._FcVStack**
  %2725 = bitcast i8* %2723 to i64*
  %2726 = load i64, i64* %2725, align 8
  %2727 = bitcast %struct._FcVStack* %2720 to i64*
  store i64 %2726, i64* %2727, align 8
  %2728 = load %struct._FcPStack*, %struct._FcPStack** %16, align 8
  %2729 = icmp eq %struct._FcPStack* %2728, null
  br i1 %2729, label %2733, label %2730

2730:                                             ; preds = %2719
  %2731 = getelementptr inbounds %struct._FcPStack, %struct._FcPStack* %2728, i64 0, i32 0
  %2732 = load %struct._FcPStack*, %struct._FcPStack** %2731, align 8
  br label %2733

2733:                                             ; preds = %2730, %2719
  %2734 = phi %struct._FcPStack* [ %2732, %2730 ], [ null, %2719 ]
  %2735 = getelementptr inbounds %struct._FcVStack, %struct._FcVStack* %2720, i64 0, i32 1
  store %struct._FcPStack* %2734, %struct._FcPStack** %2735, align 8
  store %struct._FcVStack* %2720, %struct._FcVStack** %2724, align 8
  %2736 = icmp eq %struct._FcVStack* %2720, null
  br i1 %2736, label %3152, label %2737

2737:                                             ; preds = %2733
  %2738 = getelementptr inbounds %struct._FcVStack, %struct._FcVStack* %2720, i64 0, i32 3
  %2739 = bitcast %union.anon.1* %2738 to %struct._FcExpr**
  store %struct._FcExpr* %2704, %struct._FcExpr** %2739, align 8
  store i32 18, i32* %2721, align 8
  br label %3152

2740:                                             ; preds = %19
  %2741 = tail call fastcc %struct._FcExpr* @FcPopBinary(%struct._FcConfigParse* %15, i32 27) #9
  %2742 = icmp eq %struct._FcExpr* %2741, null
  br i1 %2742, label %3152, label %2743

2743:                                             ; preds = %2740
  %2744 = getelementptr inbounds i8, i8* %0, i64 2496
  %2745 = bitcast i8* %2744 to i32*
  %2746 = load i32, i32* %2745, align 8
  %2747 = icmp ult i32 %2746, 64
  br i1 %2747, label %2748, label %2752

2748:                                             ; preds = %2743
  %2749 = zext i32 %2746 to i64
  %2750 = add nuw nsw i32 %2746, 1
  store i32 %2750, i32* %2745, align 8
  %2751 = getelementptr inbounds %struct._FcConfigParse, %struct._FcConfigParse* %15, i64 0, i32 10, i64 %2749
  br label %2756

2752:                                             ; preds = %2743
  %2753 = tail call noalias i8* @malloc(i64 32) #9
  %2754 = bitcast i8* %2753 to %struct._FcVStack*
  %2755 = icmp eq i8* %2753, null
  br i1 %2755, label %3152, label %2756

2756:                                             ; preds = %2752, %2748
  %2757 = phi %struct._FcVStack* [ %2751, %2748 ], [ %2754, %2752 ]
  %2758 = getelementptr inbounds %struct._FcVStack, %struct._FcVStack* %2757, i64 0, i32 2
  store i32 0, i32* %2758, align 8
  %2759 = getelementptr inbounds %struct._FcVStack, %struct._FcVStack* %2757, i64 0, i32 0
  store %struct._FcVStack* null, %struct._FcVStack** %2759, align 8
  %2760 = getelementptr inbounds i8, i8* %0, i64 8
  %2761 = bitcast i8* %2760 to %struct._FcVStack**
  %2762 = bitcast i8* %2760 to i64*
  %2763 = load i64, i64* %2762, align 8
  %2764 = bitcast %struct._FcVStack* %2757 to i64*
  store i64 %2763, i64* %2764, align 8
  %2765 = load %struct._FcPStack*, %struct._FcPStack** %16, align 8
  %2766 = icmp eq %struct._FcPStack* %2765, null
  br i1 %2766, label %2770, label %2767

2767:                                             ; preds = %2756
  %2768 = getelementptr inbounds %struct._FcPStack, %struct._FcPStack* %2765, i64 0, i32 0
  %2769 = load %struct._FcPStack*, %struct._FcPStack** %2768, align 8
  br label %2770

2770:                                             ; preds = %2767, %2756
  %2771 = phi %struct._FcPStack* [ %2769, %2767 ], [ null, %2756 ]
  %2772 = getelementptr inbounds %struct._FcVStack, %struct._FcVStack* %2757, i64 0, i32 1
  store %struct._FcPStack* %2771, %struct._FcPStack** %2772, align 8
  store %struct._FcVStack* %2757, %struct._FcVStack** %2761, align 8
  %2773 = icmp eq %struct._FcVStack* %2757, null
  br i1 %2773, label %3152, label %2774

2774:                                             ; preds = %2770
  %2775 = getelementptr inbounds %struct._FcVStack, %struct._FcVStack* %2757, i64 0, i32 3
  %2776 = bitcast %union.anon.1* %2775 to %struct._FcExpr**
  store %struct._FcExpr* %2741, %struct._FcExpr** %2776, align 8
  store i32 18, i32* %2758, align 8
  br label %3152

2777:                                             ; preds = %19
  %2778 = tail call fastcc %struct._FcExpr* @FcPopBinary(%struct._FcConfigParse* %15, i32 28) #9
  %2779 = icmp eq %struct._FcExpr* %2778, null
  br i1 %2779, label %3152, label %2780

2780:                                             ; preds = %2777
  %2781 = getelementptr inbounds i8, i8* %0, i64 2496
  %2782 = bitcast i8* %2781 to i32*
  %2783 = load i32, i32* %2782, align 8
  %2784 = icmp ult i32 %2783, 64
  br i1 %2784, label %2785, label %2789

2785:                                             ; preds = %2780
  %2786 = zext i32 %2783 to i64
  %2787 = add nuw nsw i32 %2783, 1
  store i32 %2787, i32* %2782, align 8
  %2788 = getelementptr inbounds %struct._FcConfigParse, %struct._FcConfigParse* %15, i64 0, i32 10, i64 %2786
  br label %2793

2789:                                             ; preds = %2780
  %2790 = tail call noalias i8* @malloc(i64 32) #9
  %2791 = bitcast i8* %2790 to %struct._FcVStack*
  %2792 = icmp eq i8* %2790, null
  br i1 %2792, label %3152, label %2793

2793:                                             ; preds = %2789, %2785
  %2794 = phi %struct._FcVStack* [ %2788, %2785 ], [ %2791, %2789 ]
  %2795 = getelementptr inbounds %struct._FcVStack, %struct._FcVStack* %2794, i64 0, i32 2
  store i32 0, i32* %2795, align 8
  %2796 = getelementptr inbounds %struct._FcVStack, %struct._FcVStack* %2794, i64 0, i32 0
  store %struct._FcVStack* null, %struct._FcVStack** %2796, align 8
  %2797 = getelementptr inbounds i8, i8* %0, i64 8
  %2798 = bitcast i8* %2797 to %struct._FcVStack**
  %2799 = bitcast i8* %2797 to i64*
  %2800 = load i64, i64* %2799, align 8
  %2801 = bitcast %struct._FcVStack* %2794 to i64*
  store i64 %2800, i64* %2801, align 8
  %2802 = load %struct._FcPStack*, %struct._FcPStack** %16, align 8
  %2803 = icmp eq %struct._FcPStack* %2802, null
  br i1 %2803, label %2807, label %2804

2804:                                             ; preds = %2793
  %2805 = getelementptr inbounds %struct._FcPStack, %struct._FcPStack* %2802, i64 0, i32 0
  %2806 = load %struct._FcPStack*, %struct._FcPStack** %2805, align 8
  br label %2807

2807:                                             ; preds = %2804, %2793
  %2808 = phi %struct._FcPStack* [ %2806, %2804 ], [ null, %2793 ]
  %2809 = getelementptr inbounds %struct._FcVStack, %struct._FcVStack* %2794, i64 0, i32 1
  store %struct._FcPStack* %2808, %struct._FcPStack** %2809, align 8
  store %struct._FcVStack* %2794, %struct._FcVStack** %2798, align 8
  %2810 = icmp eq %struct._FcVStack* %2794, null
  br i1 %2810, label %3152, label %2811

2811:                                             ; preds = %2807
  %2812 = getelementptr inbounds %struct._FcVStack, %struct._FcVStack* %2794, i64 0, i32 3
  %2813 = bitcast %union.anon.1* %2812 to %struct._FcExpr**
  store %struct._FcExpr* %2778, %struct._FcExpr** %2813, align 8
  store i32 18, i32* %2795, align 8
  br label %3152

2814:                                             ; preds = %19
  %2815 = tail call fastcc %struct._FcExpr* @FcPopBinary(%struct._FcConfigParse* %15, i32 29) #9
  %2816 = icmp eq %struct._FcExpr* %2815, null
  br i1 %2816, label %3152, label %2817

2817:                                             ; preds = %2814
  %2818 = getelementptr inbounds i8, i8* %0, i64 2496
  %2819 = bitcast i8* %2818 to i32*
  %2820 = load i32, i32* %2819, align 8
  %2821 = icmp ult i32 %2820, 64
  br i1 %2821, label %2822, label %2826

2822:                                             ; preds = %2817
  %2823 = zext i32 %2820 to i64
  %2824 = add nuw nsw i32 %2820, 1
  store i32 %2824, i32* %2819, align 8
  %2825 = getelementptr inbounds %struct._FcConfigParse, %struct._FcConfigParse* %15, i64 0, i32 10, i64 %2823
  br label %2830

2826:                                             ; preds = %2817
  %2827 = tail call noalias i8* @malloc(i64 32) #9
  %2828 = bitcast i8* %2827 to %struct._FcVStack*
  %2829 = icmp eq i8* %2827, null
  br i1 %2829, label %3152, label %2830

2830:                                             ; preds = %2826, %2822
  %2831 = phi %struct._FcVStack* [ %2825, %2822 ], [ %2828, %2826 ]
  %2832 = getelementptr inbounds %struct._FcVStack, %struct._FcVStack* %2831, i64 0, i32 2
  store i32 0, i32* %2832, align 8
  %2833 = getelementptr inbounds %struct._FcVStack, %struct._FcVStack* %2831, i64 0, i32 0
  store %struct._FcVStack* null, %struct._FcVStack** %2833, align 8
  %2834 = getelementptr inbounds i8, i8* %0, i64 8
  %2835 = bitcast i8* %2834 to %struct._FcVStack**
  %2836 = bitcast i8* %2834 to i64*
  %2837 = load i64, i64* %2836, align 8
  %2838 = bitcast %struct._FcVStack* %2831 to i64*
  store i64 %2837, i64* %2838, align 8
  %2839 = load %struct._FcPStack*, %struct._FcPStack** %16, align 8
  %2840 = icmp eq %struct._FcPStack* %2839, null
  br i1 %2840, label %2844, label %2841

2841:                                             ; preds = %2830
  %2842 = getelementptr inbounds %struct._FcPStack, %struct._FcPStack* %2839, i64 0, i32 0
  %2843 = load %struct._FcPStack*, %struct._FcPStack** %2842, align 8
  br label %2844

2844:                                             ; preds = %2841, %2830
  %2845 = phi %struct._FcPStack* [ %2843, %2841 ], [ null, %2830 ]
  %2846 = getelementptr inbounds %struct._FcVStack, %struct._FcVStack* %2831, i64 0, i32 1
  store %struct._FcPStack* %2845, %struct._FcPStack** %2846, align 8
  store %struct._FcVStack* %2831, %struct._FcVStack** %2835, align 8
  %2847 = icmp eq %struct._FcVStack* %2831, null
  br i1 %2847, label %3152, label %2848

2848:                                             ; preds = %2844
  %2849 = getelementptr inbounds %struct._FcVStack, %struct._FcVStack* %2831, i64 0, i32 3
  %2850 = bitcast %union.anon.1* %2849 to %struct._FcExpr**
  store %struct._FcExpr* %2815, %struct._FcExpr** %2850, align 8
  store i32 18, i32* %2832, align 8
  br label %3152

2851:                                             ; preds = %19
  %2852 = tail call fastcc %struct._FcExpr* @FcPopBinary(%struct._FcConfigParse* %15, i32 30) #9
  %2853 = icmp eq %struct._FcExpr* %2852, null
  br i1 %2853, label %3152, label %2854

2854:                                             ; preds = %2851
  %2855 = getelementptr inbounds i8, i8* %0, i64 2496
  %2856 = bitcast i8* %2855 to i32*
  %2857 = load i32, i32* %2856, align 8
  %2858 = icmp ult i32 %2857, 64
  br i1 %2858, label %2859, label %2863

2859:                                             ; preds = %2854
  %2860 = zext i32 %2857 to i64
  %2861 = add nuw nsw i32 %2857, 1
  store i32 %2861, i32* %2856, align 8
  %2862 = getelementptr inbounds %struct._FcConfigParse, %struct._FcConfigParse* %15, i64 0, i32 10, i64 %2860
  br label %2867

2863:                                             ; preds = %2854
  %2864 = tail call noalias i8* @malloc(i64 32) #9
  %2865 = bitcast i8* %2864 to %struct._FcVStack*
  %2866 = icmp eq i8* %2864, null
  br i1 %2866, label %3152, label %2867

2867:                                             ; preds = %2863, %2859
  %2868 = phi %struct._FcVStack* [ %2862, %2859 ], [ %2865, %2863 ]
  %2869 = getelementptr inbounds %struct._FcVStack, %struct._FcVStack* %2868, i64 0, i32 2
  store i32 0, i32* %2869, align 8
  %2870 = getelementptr inbounds %struct._FcVStack, %struct._FcVStack* %2868, i64 0, i32 0
  store %struct._FcVStack* null, %struct._FcVStack** %2870, align 8
  %2871 = getelementptr inbounds i8, i8* %0, i64 8
  %2872 = bitcast i8* %2871 to %struct._FcVStack**
  %2873 = bitcast i8* %2871 to i64*
  %2874 = load i64, i64* %2873, align 8
  %2875 = bitcast %struct._FcVStack* %2868 to i64*
  store i64 %2874, i64* %2875, align 8
  %2876 = load %struct._FcPStack*, %struct._FcPStack** %16, align 8
  %2877 = icmp eq %struct._FcPStack* %2876, null
  br i1 %2877, label %2881, label %2878

2878:                                             ; preds = %2867
  %2879 = getelementptr inbounds %struct._FcPStack, %struct._FcPStack* %2876, i64 0, i32 0
  %2880 = load %struct._FcPStack*, %struct._FcPStack** %2879, align 8
  br label %2881

2881:                                             ; preds = %2878, %2867
  %2882 = phi %struct._FcPStack* [ %2880, %2878 ], [ null, %2867 ]
  %2883 = getelementptr inbounds %struct._FcVStack, %struct._FcVStack* %2868, i64 0, i32 1
  store %struct._FcPStack* %2882, %struct._FcPStack** %2883, align 8
  store %struct._FcVStack* %2868, %struct._FcVStack** %2872, align 8
  %2884 = icmp eq %struct._FcVStack* %2868, null
  br i1 %2884, label %3152, label %2885

2885:                                             ; preds = %2881
  %2886 = getelementptr inbounds %struct._FcVStack, %struct._FcVStack* %2868, i64 0, i32 3
  %2887 = bitcast %union.anon.1* %2886 to %struct._FcExpr**
  store %struct._FcExpr* %2852, %struct._FcExpr** %2887, align 8
  store i32 18, i32* %2869, align 8
  br label %3152

2888:                                             ; preds = %19
  %2889 = tail call fastcc %struct._FcExpr* @FcPopBinary(%struct._FcConfigParse* %15, i32 24) #9
  %2890 = icmp eq %struct._FcExpr* %2889, null
  br i1 %2890, label %3152, label %2891

2891:                                             ; preds = %2888
  %2892 = getelementptr inbounds i8, i8* %0, i64 2496
  %2893 = bitcast i8* %2892 to i32*
  %2894 = load i32, i32* %2893, align 8
  %2895 = icmp ult i32 %2894, 64
  br i1 %2895, label %2896, label %2900

2896:                                             ; preds = %2891
  %2897 = zext i32 %2894 to i64
  %2898 = add nuw nsw i32 %2894, 1
  store i32 %2898, i32* %2893, align 8
  %2899 = getelementptr inbounds %struct._FcConfigParse, %struct._FcConfigParse* %15, i64 0, i32 10, i64 %2897
  br label %2904

2900:                                             ; preds = %2891
  %2901 = tail call noalias i8* @malloc(i64 32) #9
  %2902 = bitcast i8* %2901 to %struct._FcVStack*
  %2903 = icmp eq i8* %2901, null
  br i1 %2903, label %3152, label %2904

2904:                                             ; preds = %2900, %2896
  %2905 = phi %struct._FcVStack* [ %2899, %2896 ], [ %2902, %2900 ]
  %2906 = getelementptr inbounds %struct._FcVStack, %struct._FcVStack* %2905, i64 0, i32 2
  store i32 0, i32* %2906, align 8
  %2907 = getelementptr inbounds %struct._FcVStack, %struct._FcVStack* %2905, i64 0, i32 0
  store %struct._FcVStack* null, %struct._FcVStack** %2907, align 8
  %2908 = getelementptr inbounds i8, i8* %0, i64 8
  %2909 = bitcast i8* %2908 to %struct._FcVStack**
  %2910 = bitcast i8* %2908 to i64*
  %2911 = load i64, i64* %2910, align 8
  %2912 = bitcast %struct._FcVStack* %2905 to i64*
  store i64 %2911, i64* %2912, align 8
  %2913 = load %struct._FcPStack*, %struct._FcPStack** %16, align 8
  %2914 = icmp eq %struct._FcPStack* %2913, null
  br i1 %2914, label %2918, label %2915

2915:                                             ; preds = %2904
  %2916 = getelementptr inbounds %struct._FcPStack, %struct._FcPStack* %2913, i64 0, i32 0
  %2917 = load %struct._FcPStack*, %struct._FcPStack** %2916, align 8
  br label %2918

2918:                                             ; preds = %2915, %2904
  %2919 = phi %struct._FcPStack* [ %2917, %2915 ], [ null, %2904 ]
  %2920 = getelementptr inbounds %struct._FcVStack, %struct._FcVStack* %2905, i64 0, i32 1
  store %struct._FcPStack* %2919, %struct._FcPStack** %2920, align 8
  store %struct._FcVStack* %2905, %struct._FcVStack** %2909, align 8
  %2921 = icmp eq %struct._FcVStack* %2905, null
  br i1 %2921, label %3152, label %2922

2922:                                             ; preds = %2918
  %2923 = getelementptr inbounds %struct._FcVStack, %struct._FcVStack* %2905, i64 0, i32 3
  %2924 = bitcast %union.anon.1* %2923 to %struct._FcExpr**
  store %struct._FcExpr* %2889, %struct._FcExpr** %2924, align 8
  store i32 18, i32* %2906, align 8
  br label %3152

2925:                                             ; preds = %19
  %2926 = tail call fastcc %struct._FcExpr* @FcPopBinary(%struct._FcConfigParse* %15, i32 26) #9
  %2927 = icmp eq %struct._FcExpr* %2926, null
  br i1 %2927, label %3152, label %2928

2928:                                             ; preds = %2925
  %2929 = getelementptr inbounds i8, i8* %0, i64 2496
  %2930 = bitcast i8* %2929 to i32*
  %2931 = load i32, i32* %2930, align 8
  %2932 = icmp ult i32 %2931, 64
  br i1 %2932, label %2933, label %2937

2933:                                             ; preds = %2928
  %2934 = zext i32 %2931 to i64
  %2935 = add nuw nsw i32 %2931, 1
  store i32 %2935, i32* %2930, align 8
  %2936 = getelementptr inbounds %struct._FcConfigParse, %struct._FcConfigParse* %15, i64 0, i32 10, i64 %2934
  br label %2941

2937:                                             ; preds = %2928
  %2938 = tail call noalias i8* @malloc(i64 32) #9
  %2939 = bitcast i8* %2938 to %struct._FcVStack*
  %2940 = icmp eq i8* %2938, null
  br i1 %2940, label %3152, label %2941

2941:                                             ; preds = %2937, %2933
  %2942 = phi %struct._FcVStack* [ %2936, %2933 ], [ %2939, %2937 ]
  %2943 = getelementptr inbounds %struct._FcVStack, %struct._FcVStack* %2942, i64 0, i32 2
  store i32 0, i32* %2943, align 8
  %2944 = getelementptr inbounds %struct._FcVStack, %struct._FcVStack* %2942, i64 0, i32 0
  store %struct._FcVStack* null, %struct._FcVStack** %2944, align 8
  %2945 = getelementptr inbounds i8, i8* %0, i64 8
  %2946 = bitcast i8* %2945 to %struct._FcVStack**
  %2947 = bitcast i8* %2945 to i64*
  %2948 = load i64, i64* %2947, align 8
  %2949 = bitcast %struct._FcVStack* %2942 to i64*
  store i64 %2948, i64* %2949, align 8
  %2950 = load %struct._FcPStack*, %struct._FcPStack** %16, align 8
  %2951 = icmp eq %struct._FcPStack* %2950, null
  br i1 %2951, label %2955, label %2952

2952:                                             ; preds = %2941
  %2953 = getelementptr inbounds %struct._FcPStack, %struct._FcPStack* %2950, i64 0, i32 0
  %2954 = load %struct._FcPStack*, %struct._FcPStack** %2953, align 8
  br label %2955

2955:                                             ; preds = %2952, %2941
  %2956 = phi %struct._FcPStack* [ %2954, %2952 ], [ null, %2941 ]
  %2957 = getelementptr inbounds %struct._FcVStack, %struct._FcVStack* %2942, i64 0, i32 1
  store %struct._FcPStack* %2956, %struct._FcPStack** %2957, align 8
  store %struct._FcVStack* %2942, %struct._FcVStack** %2946, align 8
  %2958 = icmp eq %struct._FcVStack* %2942, null
  br i1 %2958, label %3152, label %2959

2959:                                             ; preds = %2955
  %2960 = getelementptr inbounds %struct._FcVStack, %struct._FcVStack* %2942, i64 0, i32 3
  %2961 = bitcast %union.anon.1* %2960 to %struct._FcExpr**
  store %struct._FcExpr* %2926, %struct._FcExpr** %2961, align 8
  store i32 18, i32* %2943, align 8
  br label %3152

2962:                                             ; preds = %19
  %2963 = tail call fastcc %struct._FcExpr* @FcPopBinary(%struct._FcConfigParse* %15, i32 31) #9
  %2964 = icmp eq %struct._FcExpr* %2963, null
  br i1 %2964, label %3152, label %2965

2965:                                             ; preds = %2962
  %2966 = getelementptr inbounds i8, i8* %0, i64 2496
  %2967 = bitcast i8* %2966 to i32*
  %2968 = load i32, i32* %2967, align 8
  %2969 = icmp ult i32 %2968, 64
  br i1 %2969, label %2970, label %2974

2970:                                             ; preds = %2965
  %2971 = zext i32 %2968 to i64
  %2972 = add nuw nsw i32 %2968, 1
  store i32 %2972, i32* %2967, align 8
  %2973 = getelementptr inbounds %struct._FcConfigParse, %struct._FcConfigParse* %15, i64 0, i32 10, i64 %2971
  br label %2978

2974:                                             ; preds = %2965
  %2975 = tail call noalias i8* @malloc(i64 32) #9
  %2976 = bitcast i8* %2975 to %struct._FcVStack*
  %2977 = icmp eq i8* %2975, null
  br i1 %2977, label %3152, label %2978

2978:                                             ; preds = %2974, %2970
  %2979 = phi %struct._FcVStack* [ %2973, %2970 ], [ %2976, %2974 ]
  %2980 = getelementptr inbounds %struct._FcVStack, %struct._FcVStack* %2979, i64 0, i32 2
  store i32 0, i32* %2980, align 8
  %2981 = getelementptr inbounds %struct._FcVStack, %struct._FcVStack* %2979, i64 0, i32 0
  store %struct._FcVStack* null, %struct._FcVStack** %2981, align 8
  %2982 = getelementptr inbounds i8, i8* %0, i64 8
  %2983 = bitcast i8* %2982 to %struct._FcVStack**
  %2984 = bitcast i8* %2982 to i64*
  %2985 = load i64, i64* %2984, align 8
  %2986 = bitcast %struct._FcVStack* %2979 to i64*
  store i64 %2985, i64* %2986, align 8
  %2987 = load %struct._FcPStack*, %struct._FcPStack** %16, align 8
  %2988 = icmp eq %struct._FcPStack* %2987, null
  br i1 %2988, label %2992, label %2989

2989:                                             ; preds = %2978
  %2990 = getelementptr inbounds %struct._FcPStack, %struct._FcPStack* %2987, i64 0, i32 0
  %2991 = load %struct._FcPStack*, %struct._FcPStack** %2990, align 8
  br label %2992

2992:                                             ; preds = %2989, %2978
  %2993 = phi %struct._FcPStack* [ %2991, %2989 ], [ null, %2978 ]
  %2994 = getelementptr inbounds %struct._FcVStack, %struct._FcVStack* %2979, i64 0, i32 1
  store %struct._FcPStack* %2993, %struct._FcPStack** %2994, align 8
  store %struct._FcVStack* %2979, %struct._FcVStack** %2983, align 8
  %2995 = icmp eq %struct._FcVStack* %2979, null
  br i1 %2995, label %3152, label %2996

2996:                                             ; preds = %2992
  %2997 = getelementptr inbounds %struct._FcVStack, %struct._FcVStack* %2979, i64 0, i32 3
  %2998 = bitcast %union.anon.1* %2997 to %struct._FcExpr**
  store %struct._FcExpr* %2963, %struct._FcExpr** %2998, align 8
  store i32 18, i32* %2980, align 8
  br label %3152

2999:                                             ; preds = %19
  %3000 = tail call fastcc %struct._FcExpr* @FcPopBinary(%struct._FcConfigParse* %15, i32 32) #9
  %3001 = icmp eq %struct._FcExpr* %3000, null
  br i1 %3001, label %3152, label %3002

3002:                                             ; preds = %2999
  %3003 = getelementptr inbounds i8, i8* %0, i64 2496
  %3004 = bitcast i8* %3003 to i32*
  %3005 = load i32, i32* %3004, align 8
  %3006 = icmp ult i32 %3005, 64
  br i1 %3006, label %3007, label %3011

3007:                                             ; preds = %3002
  %3008 = zext i32 %3005 to i64
  %3009 = add nuw nsw i32 %3005, 1
  store i32 %3009, i32* %3004, align 8
  %3010 = getelementptr inbounds %struct._FcConfigParse, %struct._FcConfigParse* %15, i64 0, i32 10, i64 %3008
  br label %3015

3011:                                             ; preds = %3002
  %3012 = tail call noalias i8* @malloc(i64 32) #9
  %3013 = bitcast i8* %3012 to %struct._FcVStack*
  %3014 = icmp eq i8* %3012, null
  br i1 %3014, label %3152, label %3015

3015:                                             ; preds = %3011, %3007
  %3016 = phi %struct._FcVStack* [ %3010, %3007 ], [ %3013, %3011 ]
  %3017 = getelementptr inbounds %struct._FcVStack, %struct._FcVStack* %3016, i64 0, i32 2
  store i32 0, i32* %3017, align 8
  %3018 = getelementptr inbounds %struct._FcVStack, %struct._FcVStack* %3016, i64 0, i32 0
  store %struct._FcVStack* null, %struct._FcVStack** %3018, align 8
  %3019 = getelementptr inbounds i8, i8* %0, i64 8
  %3020 = bitcast i8* %3019 to %struct._FcVStack**
  %3021 = bitcast i8* %3019 to i64*
  %3022 = load i64, i64* %3021, align 8
  %3023 = bitcast %struct._FcVStack* %3016 to i64*
  store i64 %3022, i64* %3023, align 8
  %3024 = load %struct._FcPStack*, %struct._FcPStack** %16, align 8
  %3025 = icmp eq %struct._FcPStack* %3024, null
  br i1 %3025, label %3029, label %3026

3026:                                             ; preds = %3015
  %3027 = getelementptr inbounds %struct._FcPStack, %struct._FcPStack* %3024, i64 0, i32 0
  %3028 = load %struct._FcPStack*, %struct._FcPStack** %3027, align 8
  br label %3029

3029:                                             ; preds = %3026, %3015
  %3030 = phi %struct._FcPStack* [ %3028, %3026 ], [ null, %3015 ]
  %3031 = getelementptr inbounds %struct._FcVStack, %struct._FcVStack* %3016, i64 0, i32 1
  store %struct._FcPStack* %3030, %struct._FcPStack** %3031, align 8
  store %struct._FcVStack* %3016, %struct._FcVStack** %3020, align 8
  %3032 = icmp eq %struct._FcVStack* %3016, null
  br i1 %3032, label %3152, label %3033

3033:                                             ; preds = %3029
  %3034 = getelementptr inbounds %struct._FcVStack, %struct._FcVStack* %3016, i64 0, i32 3
  %3035 = bitcast %union.anon.1* %3034 to %struct._FcExpr**
  store %struct._FcExpr* %3000, %struct._FcExpr** %3035, align 8
  store i32 18, i32* %3017, align 8
  br label %3152

3036:                                             ; preds = %19
  %3037 = tail call fastcc %struct._FcExpr* @FcPopBinary(%struct._FcConfigParse* %15, i32 33) #9
  %3038 = icmp eq %struct._FcExpr* %3037, null
  br i1 %3038, label %3152, label %3039

3039:                                             ; preds = %3036
  %3040 = getelementptr inbounds i8, i8* %0, i64 2496
  %3041 = bitcast i8* %3040 to i32*
  %3042 = load i32, i32* %3041, align 8
  %3043 = icmp ult i32 %3042, 64
  br i1 %3043, label %3044, label %3048

3044:                                             ; preds = %3039
  %3045 = zext i32 %3042 to i64
  %3046 = add nuw nsw i32 %3042, 1
  store i32 %3046, i32* %3041, align 8
  %3047 = getelementptr inbounds %struct._FcConfigParse, %struct._FcConfigParse* %15, i64 0, i32 10, i64 %3045
  br label %3052

3048:                                             ; preds = %3039
  %3049 = tail call noalias i8* @malloc(i64 32) #9
  %3050 = bitcast i8* %3049 to %struct._FcVStack*
  %3051 = icmp eq i8* %3049, null
  br i1 %3051, label %3152, label %3052

3052:                                             ; preds = %3048, %3044
  %3053 = phi %struct._FcVStack* [ %3047, %3044 ], [ %3050, %3048 ]
  %3054 = getelementptr inbounds %struct._FcVStack, %struct._FcVStack* %3053, i64 0, i32 2
  store i32 0, i32* %3054, align 8
  %3055 = getelementptr inbounds %struct._FcVStack, %struct._FcVStack* %3053, i64 0, i32 0
  store %struct._FcVStack* null, %struct._FcVStack** %3055, align 8
  %3056 = getelementptr inbounds i8, i8* %0, i64 8
  %3057 = bitcast i8* %3056 to %struct._FcVStack**
  %3058 = bitcast i8* %3056 to i64*
  %3059 = load i64, i64* %3058, align 8
  %3060 = bitcast %struct._FcVStack* %3053 to i64*
  store i64 %3059, i64* %3060, align 8
  %3061 = load %struct._FcPStack*, %struct._FcPStack** %16, align 8
  %3062 = icmp eq %struct._FcPStack* %3061, null
  br i1 %3062, label %3066, label %3063

3063:                                             ; preds = %3052
  %3064 = getelementptr inbounds %struct._FcPStack, %struct._FcPStack* %3061, i64 0, i32 0
  %3065 = load %struct._FcPStack*, %struct._FcPStack** %3064, align 8
  br label %3066

3066:                                             ; preds = %3063, %3052
  %3067 = phi %struct._FcPStack* [ %3065, %3063 ], [ null, %3052 ]
  %3068 = getelementptr inbounds %struct._FcVStack, %struct._FcVStack* %3053, i64 0, i32 1
  store %struct._FcPStack* %3067, %struct._FcPStack** %3068, align 8
  store %struct._FcVStack* %3053, %struct._FcVStack** %3057, align 8
  %3069 = icmp eq %struct._FcVStack* %3053, null
  br i1 %3069, label %3152, label %3070

3070:                                             ; preds = %3066
  %3071 = getelementptr inbounds %struct._FcVStack, %struct._FcVStack* %3053, i64 0, i32 3
  %3072 = bitcast %union.anon.1* %3071 to %struct._FcExpr**
  store %struct._FcExpr* %3037, %struct._FcExpr** %3072, align 8
  store i32 18, i32* %3054, align 8
  br label %3152

3073:                                             ; preds = %19
  %3074 = tail call fastcc %struct._FcExpr* @FcPopBinary(%struct._FcConfigParse* %15, i32 34) #9
  %3075 = icmp eq %struct._FcExpr* %3074, null
  br i1 %3075, label %3152, label %3076

3076:                                             ; preds = %3073
  %3077 = getelementptr inbounds i8, i8* %0, i64 2496
  %3078 = bitcast i8* %3077 to i32*
  %3079 = load i32, i32* %3078, align 8
  %3080 = icmp ult i32 %3079, 64
  br i1 %3080, label %3081, label %3085

3081:                                             ; preds = %3076
  %3082 = zext i32 %3079 to i64
  %3083 = add nuw nsw i32 %3079, 1
  store i32 %3083, i32* %3078, align 8
  %3084 = getelementptr inbounds %struct._FcConfigParse, %struct._FcConfigParse* %15, i64 0, i32 10, i64 %3082
  br label %3089

3085:                                             ; preds = %3076
  %3086 = tail call noalias i8* @malloc(i64 32) #9
  %3087 = bitcast i8* %3086 to %struct._FcVStack*
  %3088 = icmp eq i8* %3086, null
  br i1 %3088, label %3152, label %3089

3089:                                             ; preds = %3085, %3081
  %3090 = phi %struct._FcVStack* [ %3084, %3081 ], [ %3087, %3085 ]
  %3091 = getelementptr inbounds %struct._FcVStack, %struct._FcVStack* %3090, i64 0, i32 2
  store i32 0, i32* %3091, align 8
  %3092 = getelementptr inbounds %struct._FcVStack, %struct._FcVStack* %3090, i64 0, i32 0
  store %struct._FcVStack* null, %struct._FcVStack** %3092, align 8
  %3093 = getelementptr inbounds i8, i8* %0, i64 8
  %3094 = bitcast i8* %3093 to %struct._FcVStack**
  %3095 = bitcast i8* %3093 to i64*
  %3096 = load i64, i64* %3095, align 8
  %3097 = bitcast %struct._FcVStack* %3090 to i64*
  store i64 %3096, i64* %3097, align 8
  %3098 = load %struct._FcPStack*, %struct._FcPStack** %16, align 8
  %3099 = icmp eq %struct._FcPStack* %3098, null
  br i1 %3099, label %3103, label %3100

3100:                                             ; preds = %3089
  %3101 = getelementptr inbounds %struct._FcPStack, %struct._FcPStack* %3098, i64 0, i32 0
  %3102 = load %struct._FcPStack*, %struct._FcPStack** %3101, align 8
  br label %3103

3103:                                             ; preds = %3100, %3089
  %3104 = phi %struct._FcPStack* [ %3102, %3100 ], [ null, %3089 ]
  %3105 = getelementptr inbounds %struct._FcVStack, %struct._FcVStack* %3090, i64 0, i32 1
  store %struct._FcPStack* %3104, %struct._FcPStack** %3105, align 8
  store %struct._FcVStack* %3090, %struct._FcVStack** %3094, align 8
  %3106 = icmp eq %struct._FcVStack* %3090, null
  br i1 %3106, label %3152, label %3107

3107:                                             ; preds = %3103
  %3108 = getelementptr inbounds %struct._FcVStack, %struct._FcVStack* %3090, i64 0, i32 3
  %3109 = bitcast %union.anon.1* %3108 to %struct._FcExpr**
  store %struct._FcExpr* %3074, %struct._FcExpr** %3109, align 8
  store i32 18, i32* %3091, align 8
  br label %3152

3110:                                             ; preds = %19
  tail call fastcc void @FcParseUnary(%struct._FcConfigParse* %15, i32 35)
  br label %3152

3111:                                             ; preds = %19
  %3112 = tail call fastcc %struct._FcExpr* @FcPopBinary(%struct._FcConfigParse* %15, i32 19) #9
  %3113 = icmp eq %struct._FcExpr* %3112, null
  br i1 %3113, label %3152, label %3114

3114:                                             ; preds = %3111
  %3115 = getelementptr inbounds i8, i8* %0, i64 2496
  %3116 = bitcast i8* %3115 to i32*
  %3117 = load i32, i32* %3116, align 8
  %3118 = icmp ult i32 %3117, 64
  br i1 %3118, label %3119, label %3123

3119:                                             ; preds = %3114
  %3120 = zext i32 %3117 to i64
  %3121 = add nuw nsw i32 %3117, 1
  store i32 %3121, i32* %3116, align 8
  %3122 = getelementptr inbounds %struct._FcConfigParse, %struct._FcConfigParse* %15, i64 0, i32 10, i64 %3120
  br label %3127

3123:                                             ; preds = %3114
  %3124 = tail call noalias i8* @malloc(i64 32) #9
  %3125 = bitcast i8* %3124 to %struct._FcVStack*
  %3126 = icmp eq i8* %3124, null
  br i1 %3126, label %3152, label %3127

3127:                                             ; preds = %3123, %3119
  %3128 = phi %struct._FcVStack* [ %3122, %3119 ], [ %3125, %3123 ]
  %3129 = getelementptr inbounds %struct._FcVStack, %struct._FcVStack* %3128, i64 0, i32 2
  store i32 0, i32* %3129, align 8
  %3130 = getelementptr inbounds %struct._FcVStack, %struct._FcVStack* %3128, i64 0, i32 0
  store %struct._FcVStack* null, %struct._FcVStack** %3130, align 8
  %3131 = getelementptr inbounds i8, i8* %0, i64 8
  %3132 = bitcast i8* %3131 to %struct._FcVStack**
  %3133 = bitcast i8* %3131 to i64*
  %3134 = load i64, i64* %3133, align 8
  %3135 = bitcast %struct._FcVStack* %3128 to i64*
  store i64 %3134, i64* %3135, align 8
  %3136 = load %struct._FcPStack*, %struct._FcPStack** %16, align 8
  %3137 = icmp eq %struct._FcPStack* %3136, null
  br i1 %3137, label %3141, label %3138

3138:                                             ; preds = %3127
  %3139 = getelementptr inbounds %struct._FcPStack, %struct._FcPStack* %3136, i64 0, i32 0
  %3140 = load %struct._FcPStack*, %struct._FcPStack** %3139, align 8
  br label %3141

3141:                                             ; preds = %3138, %3127
  %3142 = phi %struct._FcPStack* [ %3140, %3138 ], [ null, %3127 ]
  %3143 = getelementptr inbounds %struct._FcVStack, %struct._FcVStack* %3128, i64 0, i32 1
  store %struct._FcPStack* %3142, %struct._FcPStack** %3143, align 8
  store %struct._FcVStack* %3128, %struct._FcVStack** %3132, align 8
  %3144 = icmp eq %struct._FcVStack* %3128, null
  br i1 %3144, label %3152, label %3145

3145:                                             ; preds = %3141
  %3146 = getelementptr inbounds %struct._FcVStack, %struct._FcVStack* %3128, i64 0, i32 3
  %3147 = bitcast %union.anon.1* %3146 to %struct._FcExpr**
  store %struct._FcExpr* %3112, %struct._FcExpr** %3147, align 8
  store i32 18, i32* %3129, align 8
  br label %3152

3148:                                             ; preds = %19
  tail call fastcc void @FcParseUnary(%struct._FcConfigParse* %15, i32 37)
  br label %3152

3149:                                             ; preds = %19
  tail call fastcc void @FcParseUnary(%struct._FcConfigParse* %15, i32 38)
  br label %3152

3150:                                             ; preds = %19
  tail call fastcc void @FcParseUnary(%struct._FcConfigParse* %15, i32 39)
  br label %3152

3151:                                             ; preds = %19
  tail call fastcc void @FcParseUnary(%struct._FcConfigParse* %15, i32 40)
  br label %3152

3152:                                             ; preds = %2305, %2302, %1253, %857, %1040, %822, %584, %644, %2248, %3145, %3141, %3123, %3111, %3107, %3103, %3085, %3073, %3070, %3066, %3048, %3036, %3033, %3029, %3011, %2999, %2996, %2992, %2974, %2962, %2959, %2955, %2937, %2925, %2922, %2918, %2900, %2888, %2885, %2881, %2863, %2851, %2848, %2844, %2826, %2814, %2811, %2807, %2789, %2777, %2774, %2770, %2752, %2740, %2737, %2733, %2715, %2703, %2700, %2696, %2678, %2666, %2663, %2659, %2641, %2629, %2626, %2622, %2604, %2592, %2590, %2552, %2544, %2543, %2511, %2507, %2491, %2414, %2376, %2370, %2366, %2350, %2336, %2319, %2243, %2242, %2239, %2235, %2219, %2208, %2173, %2170, %2166, %2150, %2139, %2079, %2038, %1908, %1893, %1875, %1865, %1861, %1683, %1677, %1645, %1616, %1582, %1555, %1533, %1529, %1511, %1501, %1473, %1434, %1407, %1382, %1345, %1310, %1306, %1288, %1270, %1263, %1219, %1203, %1202, %1196, %1191, %1188, %1185, %1112, %1088, %1084, %1076, %1075, %1048, %1043, %831, %796, %691, %684, %654, %647, %612, %557, %505, %443, %439, %295, %202, %188, %186, %144, %132, %106, %103, %30, %26, %19, %3151, %3150, %3149, %3148, %3110, %2591, %2310, %2033, %1848, %1847, %1735, %1258, %1257, %1256, %195, %194
  call fastcc void @FcPStackPop(%struct._FcConfigParse* %15)
  br label %3153

3153:                                             ; preds = %2, %3152
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @FcCharacterData(i8*, i8*, i32) #0 {
  %4 = bitcast i8* %0 to %struct._FcConfigParse*
  %5 = bitcast i8* %0 to %struct._FcPStack**
  %6 = load %struct._FcPStack*, %struct._FcPStack** %5, align 8
  %7 = icmp eq %struct._FcPStack* %6, null
  br i1 %7, label %13, label %8

8:                                                ; preds = %3
  %9 = getelementptr inbounds %struct._FcPStack, %struct._FcPStack* %6, i64 0, i32 3
  %10 = tail call i32 @FcStrBufData(%struct._FcStrBuf* %9, i8* %1, i32 %2) #9
  %11 = icmp eq i32 %10, 0
  br i1 %11, label %12, label %13

12:                                               ; preds = %8
  tail call void (%struct._FcConfigParse*, i32, i8*, ...) @FcConfigMessage(%struct._FcConfigParse* %4, i32 2, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.31, i64 0, i64 0))
  br label %13

13:                                               ; preds = %12, %8, %3
  ret void
}

declare %struct._xmlParserCtxt* @xmlCreatePushParserCtxt(%struct._xmlSAXHandler*, i8*, i8*, i32, i8*) local_unnamed_addr #3

declare i32 @xmlParseChunk(%struct._xmlParserCtxt*, i8*, i32, i32) local_unnamed_addr #3

declare %struct._xmlError* @xmlCtxtGetLastError(i8*) local_unnamed_addr #3

declare hidden void @FcPtrListIterInit(%struct._FcPtrList*, %struct._FcPtrListIter*) local_unnamed_addr #3

declare hidden i32 @FcPtrListIterIsValid(%struct._FcPtrList*, %struct._FcPtrListIter*) local_unnamed_addr #3

declare hidden void @FcPtrListIterInitAtLast(%struct._FcPtrList*, %struct._FcPtrListIter*) local_unnamed_addr #3

declare hidden void @FcRuleSetReference(%struct._FcRuleSet*) local_unnamed_addr #3

declare hidden i32 @FcPtrListIterAdd(%struct._FcPtrList*, %struct._FcPtrListIter*, i8*) local_unnamed_addr #3

declare void @xmlFreeParserCtxt(%struct._xmlParserCtxt*) local_unnamed_addr #3

; Function Attrs: nofree nounwind readonly
declare i32 @strncmp(i8* nocapture, i8* nocapture, i64) local_unnamed_addr #8

; Function Attrs: nounwind ssp uwtable
define internal fastcc void @FcParseFamilies(%struct._FcConfigParse*, i32) unnamed_addr #0 {
  %3 = getelementptr inbounds %struct._FcConfigParse, %struct._FcConfigParse* %0, i64 0, i32 1
  %4 = load %struct._FcVStack*, %struct._FcVStack** %3, align 8
  %5 = icmp eq %struct._FcVStack* %4, null
  br i1 %5, label %81, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %struct._FcConfigParse, %struct._FcConfigParse* %0, i64 0, i32 0
  %8 = getelementptr inbounds %struct._FcConfigParse, %struct._FcConfigParse* %0, i64 0, i32 4
  br label %9

9:                                                ; preds = %6, %40
  %10 = phi %struct._FcVStack* [ %4, %6 ], [ %42, %40 ]
  %11 = phi %struct._FcExpr* [ null, %6 ], [ %41, %40 ]
  br label %12

12:                                               ; preds = %9, %22
  %13 = phi %struct._FcVStack* [ %10, %9 ], [ %23, %22 ]
  %14 = getelementptr inbounds %struct._FcVStack, %struct._FcVStack* %13, i64 0, i32 1
  %15 = load %struct._FcPStack*, %struct._FcPStack** %14, align 8
  %16 = load %struct._FcPStack*, %struct._FcPStack** %7, align 8
  %17 = icmp eq %struct._FcPStack* %15, %16
  br i1 %17, label %18, label %44

18:                                               ; preds = %12
  %19 = getelementptr inbounds %struct._FcVStack, %struct._FcVStack* %13, i64 0, i32 2
  %20 = load i32, i32* %19, align 8
  %21 = icmp eq i32 %20, 2
  br i1 %21, label %25, label %22

22:                                               ; preds = %18
  tail call void (%struct._FcConfigParse*, i32, i8*, ...) @FcConfigMessage(%struct._FcConfigParse* %0, i32 1, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.84, i64 0, i64 0))
  tail call fastcc void @FcVStackPopAndDestroy(%struct._FcConfigParse* %0)
  %23 = load %struct._FcVStack*, %struct._FcVStack** %3, align 8
  %24 = icmp eq %struct._FcVStack* %23, null
  br i1 %24, label %44, label %12

25:                                               ; preds = %18
  %26 = getelementptr inbounds %struct._FcVStack, %struct._FcVStack* %13, i64 0, i32 2
  %27 = getelementptr inbounds %struct._FcVStack, %struct._FcVStack* %13, i64 0, i32 3
  %28 = bitcast %union.anon.1* %27 to %struct._FcExpr**
  %29 = load %struct._FcExpr*, %struct._FcExpr** %28, align 8
  store i32 0, i32* %26, align 8
  tail call fastcc void @FcVStackPopAndDestroy(%struct._FcConfigParse* %0)
  %30 = icmp eq %struct._FcExpr* %11, null
  br i1 %30, label %40, label %31

31:                                               ; preds = %25
  %32 = load %struct._FcConfig*, %struct._FcConfig** %8, align 8
  %33 = tail call %struct._FcExpr* @FcConfigAllocExpr(%struct._FcConfig* %32) #9
  %34 = icmp eq %struct._FcExpr* %33, null
  br i1 %34, label %39, label %35

35:                                               ; preds = %31
  %36 = getelementptr inbounds %struct._FcExpr, %struct._FcExpr* %33, i64 0, i32 0
  store i32 36, i32* %36, align 8
  %37 = getelementptr inbounds %struct._FcExpr, %struct._FcExpr* %33, i64 0, i32 1, i32 0, i32 0
  store %struct._FcExpr* %29, %struct._FcExpr** %37, align 8
  %38 = getelementptr inbounds %struct._FcExpr, %struct._FcExpr* %33, i64 0, i32 1, i32 0, i32 1
  store %struct._FcExpr* %11, %struct._FcExpr** %38, align 8
  br label %40

39:                                               ; preds = %31
  tail call void (%struct._FcConfigParse*, i32, i8*, ...) @FcConfigMessage(%struct._FcConfigParse* %0, i32 2, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.31, i64 0, i64 0))
  tail call fastcc void @FcExprDestroy(%struct._FcExpr* %29)
  tail call fastcc void @FcExprDestroy(%struct._FcExpr* nonnull %11)
  br label %47

40:                                               ; preds = %35, %25
  %41 = phi %struct._FcExpr* [ %33, %35 ], [ %29, %25 ]
  %42 = load %struct._FcVStack*, %struct._FcVStack** %3, align 8
  %43 = icmp eq %struct._FcVStack* %42, null
  br i1 %43, label %44, label %9

44:                                               ; preds = %40, %12, %22
  %45 = phi %struct._FcExpr* [ %11, %22 ], [ %11, %12 ], [ %41, %40 ]
  %46 = icmp eq %struct._FcExpr* %45, null
  br i1 %46, label %81, label %47

47:                                               ; preds = %39, %44
  %48 = phi %struct._FcExpr* [ %11, %39 ], [ %45, %44 ]
  %49 = getelementptr inbounds %struct._FcConfigParse, %struct._FcConfigParse* %0, i64 0, i32 9
  %50 = load i32, i32* %49, align 8
  %51 = icmp ult i32 %50, 64
  br i1 %51, label %52, label %56

52:                                               ; preds = %47
  %53 = zext i32 %50 to i64
  %54 = add nuw nsw i32 %50, 1
  store i32 %54, i32* %49, align 8
  %55 = getelementptr inbounds %struct._FcConfigParse, %struct._FcConfigParse* %0, i64 0, i32 10, i64 %53
  br label %60

56:                                               ; preds = %47
  %57 = tail call noalias i8* @malloc(i64 32) #9
  %58 = bitcast i8* %57 to %struct._FcVStack*
  %59 = icmp eq i8* %57, null
  br i1 %59, label %80, label %60

60:                                               ; preds = %56, %52
  %61 = phi %struct._FcVStack* [ %55, %52 ], [ %58, %56 ]
  %62 = getelementptr inbounds %struct._FcVStack, %struct._FcVStack* %61, i64 0, i32 2
  store i32 0, i32* %62, align 8
  %63 = getelementptr inbounds %struct._FcVStack, %struct._FcVStack* %61, i64 0, i32 0
  store %struct._FcVStack* null, %struct._FcVStack** %63, align 8
  %64 = bitcast %struct._FcVStack** %3 to i64*
  %65 = load i64, i64* %64, align 8
  %66 = bitcast %struct._FcVStack* %61 to i64*
  store i64 %65, i64* %66, align 8
  %67 = getelementptr inbounds %struct._FcConfigParse, %struct._FcConfigParse* %0, i64 0, i32 0
  %68 = load %struct._FcPStack*, %struct._FcPStack** %67, align 8
  %69 = icmp eq %struct._FcPStack* %68, null
  br i1 %69, label %73, label %70

70:                                               ; preds = %60
  %71 = getelementptr inbounds %struct._FcPStack, %struct._FcPStack* %68, i64 0, i32 0
  %72 = load %struct._FcPStack*, %struct._FcPStack** %71, align 8
  br label %73

73:                                               ; preds = %70, %60
  %74 = phi %struct._FcPStack* [ %72, %70 ], [ null, %60 ]
  %75 = getelementptr inbounds %struct._FcVStack, %struct._FcVStack* %61, i64 0, i32 1
  store %struct._FcPStack* %74, %struct._FcPStack** %75, align 8
  store %struct._FcVStack* %61, %struct._FcVStack** %3, align 8
  %76 = icmp eq %struct._FcVStack* %61, null
  br i1 %76, label %80, label %77

77:                                               ; preds = %73
  %78 = getelementptr inbounds %struct._FcVStack, %struct._FcVStack* %61, i64 0, i32 3
  %79 = bitcast %union.anon.1* %78 to %struct._FcExpr**
  store %struct._FcExpr* %48, %struct._FcExpr** %79, align 8
  store i32 %1, i32* %62, align 8
  br label %81

80:                                               ; preds = %73, %56
  tail call void (%struct._FcConfigParse*, i32, i8*, ...) @FcConfigMessage(%struct._FcConfigParse* %0, i32 2, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.31, i64 0, i64 0))
  tail call fastcc void @FcExprDestroy(%struct._FcExpr* nonnull %48)
  br label %81

81:                                               ; preds = %2, %77, %44, %80
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc void @FcParseString(%struct._FcConfigParse*, i32) unnamed_addr #0 {
  %3 = getelementptr inbounds %struct._FcConfigParse, %struct._FcConfigParse* %0, i64 0, i32 0
  %4 = load %struct._FcPStack*, %struct._FcPStack** %3, align 8
  %5 = icmp eq %struct._FcPStack* %4, null
  br i1 %5, label %43, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %struct._FcPStack, %struct._FcPStack* %4, i64 0, i32 3
  %8 = tail call i8* @FcStrBufDone(%struct._FcStrBuf* %7) #9
  %9 = icmp eq i8* %8, null
  br i1 %9, label %10, label %11

10:                                               ; preds = %6
  tail call void (%struct._FcConfigParse*, i32, i8*, ...) @FcConfigMessage(%struct._FcConfigParse* %0, i32 2, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.31, i64 0, i64 0))
  br label %43

11:                                               ; preds = %6
  %12 = getelementptr inbounds %struct._FcConfigParse, %struct._FcConfigParse* %0, i64 0, i32 9
  %13 = load i32, i32* %12, align 8
  %14 = icmp ult i32 %13, 64
  br i1 %14, label %15, label %19

15:                                               ; preds = %11
  %16 = zext i32 %13 to i64
  %17 = add nuw nsw i32 %13, 1
  store i32 %17, i32* %12, align 8
  %18 = getelementptr inbounds %struct._FcConfigParse, %struct._FcConfigParse* %0, i64 0, i32 10, i64 %16
  br label %23

19:                                               ; preds = %11
  %20 = tail call noalias i8* @malloc(i64 32) #9
  %21 = bitcast i8* %20 to %struct._FcVStack*
  %22 = icmp eq i8* %20, null
  br i1 %22, label %42, label %23

23:                                               ; preds = %19, %15
  %24 = phi %struct._FcVStack* [ %18, %15 ], [ %21, %19 ]
  %25 = getelementptr inbounds %struct._FcVStack, %struct._FcVStack* %24, i64 0, i32 2
  store i32 0, i32* %25, align 8
  %26 = getelementptr inbounds %struct._FcVStack, %struct._FcVStack* %24, i64 0, i32 0
  store %struct._FcVStack* null, %struct._FcVStack** %26, align 8
  %27 = getelementptr inbounds %struct._FcConfigParse, %struct._FcConfigParse* %0, i64 0, i32 1
  %28 = bitcast %struct._FcVStack** %27 to i64*
  %29 = load i64, i64* %28, align 8
  %30 = bitcast %struct._FcVStack* %24 to i64*
  store i64 %29, i64* %30, align 8
  %31 = load %struct._FcPStack*, %struct._FcPStack** %3, align 8
  %32 = icmp eq %struct._FcPStack* %31, null
  br i1 %32, label %36, label %33

33:                                               ; preds = %23
  %34 = getelementptr inbounds %struct._FcPStack, %struct._FcPStack* %31, i64 0, i32 0
  %35 = load %struct._FcPStack*, %struct._FcPStack** %34, align 8
  br label %36

36:                                               ; preds = %33, %23
  %37 = phi %struct._FcPStack* [ %35, %33 ], [ null, %23 ]
  %38 = getelementptr inbounds %struct._FcVStack, %struct._FcVStack* %24, i64 0, i32 1
  store %struct._FcPStack* %37, %struct._FcPStack** %38, align 8
  store %struct._FcVStack* %24, %struct._FcVStack** %27, align 8
  %39 = icmp eq %struct._FcVStack* %24, null
  br i1 %39, label %42, label %40

40:                                               ; preds = %36
  %41 = getelementptr inbounds %struct._FcVStack, %struct._FcVStack* %24, i64 0, i32 3, i32 0
  store i8* %8, i8** %41, align 8
  store i32 %1, i32* %25, align 8
  br label %43

42:                                               ; preds = %36, %19
  tail call void @IA__FcStrFree(i8* nonnull %8) #9
  br label %43

43:                                               ; preds = %40, %42, %2, %10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc void @FcParseUnary(%struct._FcConfigParse*, i32) unnamed_addr #0 {
  %3 = tail call fastcc %struct._FcExpr* @FcPopExpr(%struct._FcConfigParse* %0) #9
  %4 = icmp eq %struct._FcExpr* %3, null
  br i1 %4, label %47, label %5

5:                                                ; preds = %2
  %6 = getelementptr inbounds %struct._FcConfigParse, %struct._FcConfigParse* %0, i64 0, i32 4
  %7 = load %struct._FcConfig*, %struct._FcConfig** %6, align 8
  %8 = tail call %struct._FcExpr* @FcConfigAllocExpr(%struct._FcConfig* %7) #9
  %9 = icmp eq %struct._FcExpr* %8, null
  br i1 %9, label %10, label %11

10:                                               ; preds = %5
  tail call fastcc void @FcExprDestroy(%struct._FcExpr* nonnull %3) #9
  tail call void (%struct._FcConfigParse*, i32, i8*, ...) @FcConfigMessage(%struct._FcConfigParse* %0, i32 2, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.31, i64 0, i64 0)) #9
  br label %47

11:                                               ; preds = %5
  %12 = getelementptr inbounds %struct._FcExpr, %struct._FcExpr* %8, i64 0, i32 0
  store i32 %1, i32* %12, align 8
  %13 = getelementptr inbounds %struct._FcExpr, %struct._FcExpr* %8, i64 0, i32 1, i32 0, i32 0
  store %struct._FcExpr* %3, %struct._FcExpr** %13, align 8
  %14 = getelementptr inbounds %struct._FcExpr, %struct._FcExpr* %8, i64 0, i32 1, i32 0, i32 1
  store %struct._FcExpr* null, %struct._FcExpr** %14, align 8
  %15 = getelementptr inbounds %struct._FcConfigParse, %struct._FcConfigParse* %0, i64 0, i32 9
  %16 = load i32, i32* %15, align 8
  %17 = icmp ult i32 %16, 64
  br i1 %17, label %18, label %22

18:                                               ; preds = %11
  %19 = zext i32 %16 to i64
  %20 = add nuw nsw i32 %16, 1
  store i32 %20, i32* %15, align 8
  %21 = getelementptr inbounds %struct._FcConfigParse, %struct._FcConfigParse* %0, i64 0, i32 10, i64 %19
  br label %26

22:                                               ; preds = %11
  %23 = tail call noalias i8* @malloc(i64 32) #9
  %24 = bitcast i8* %23 to %struct._FcVStack*
  %25 = icmp eq i8* %23, null
  br i1 %25, label %47, label %26

26:                                               ; preds = %22, %18
  %27 = phi %struct._FcVStack* [ %21, %18 ], [ %24, %22 ]
  %28 = getelementptr inbounds %struct._FcVStack, %struct._FcVStack* %27, i64 0, i32 2
  store i32 0, i32* %28, align 8
  %29 = getelementptr inbounds %struct._FcVStack, %struct._FcVStack* %27, i64 0, i32 0
  store %struct._FcVStack* null, %struct._FcVStack** %29, align 8
  %30 = getelementptr inbounds %struct._FcConfigParse, %struct._FcConfigParse* %0, i64 0, i32 1
  %31 = bitcast %struct._FcVStack** %30 to i64*
  %32 = load i64, i64* %31, align 8
  %33 = bitcast %struct._FcVStack* %27 to i64*
  store i64 %32, i64* %33, align 8
  %34 = getelementptr inbounds %struct._FcConfigParse, %struct._FcConfigParse* %0, i64 0, i32 0
  %35 = load %struct._FcPStack*, %struct._FcPStack** %34, align 8
  %36 = icmp eq %struct._FcPStack* %35, null
  br i1 %36, label %40, label %37

37:                                               ; preds = %26
  %38 = getelementptr inbounds %struct._FcPStack, %struct._FcPStack* %35, i64 0, i32 0
  %39 = load %struct._FcPStack*, %struct._FcPStack** %38, align 8
  br label %40

40:                                               ; preds = %37, %26
  %41 = phi %struct._FcPStack* [ %39, %37 ], [ null, %26 ]
  %42 = getelementptr inbounds %struct._FcVStack, %struct._FcVStack* %27, i64 0, i32 1
  store %struct._FcPStack* %41, %struct._FcPStack** %42, align 8
  store %struct._FcVStack* %27, %struct._FcVStack** %30, align 8
  %43 = icmp eq %struct._FcVStack* %27, null
  br i1 %43, label %47, label %44

44:                                               ; preds = %40
  %45 = getelementptr inbounds %struct._FcVStack, %struct._FcVStack* %27, i64 0, i32 3
  %46 = bitcast %union.anon.1* %45 to %struct._FcExpr**
  store %struct._FcExpr* %8, %struct._FcExpr** %46, align 8
  store i32 18, i32* %28, align 8
  br label %47

47:                                               ; preds = %2, %10, %44, %40, %22
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc void @FcPStackPop(%struct._FcConfigParse*) unnamed_addr #0 {
  %2 = getelementptr inbounds %struct._FcConfigParse, %struct._FcConfigParse* %0, i64 0, i32 0
  %3 = load %struct._FcPStack*, %struct._FcPStack** %2, align 8
  %4 = icmp eq %struct._FcPStack* %3, null
  br i1 %4, label %5, label %6

5:                                                ; preds = %1
  tail call void (%struct._FcConfigParse*, i32, i8*, ...) @FcConfigMessage(%struct._FcConfigParse* %0, i32 2, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.120, i64 0, i64 0))
  br label %64

6:                                                ; preds = %1
  %7 = getelementptr inbounds %struct._FcPStack, %struct._FcPStack* %3, i64 0, i32 1
  %8 = load i32, i32* %7, align 8
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %27, label %10

10:                                               ; preds = %6
  %11 = getelementptr inbounds %struct._FcPStack, %struct._FcPStack* %3, i64 0, i32 2
  %12 = load i8**, i8*** %11, align 8
  %13 = icmp eq i8** %12, null
  br i1 %13, label %27, label %14

14:                                               ; preds = %10
  %15 = load i8*, i8** %12, align 8
  %16 = icmp eq i8* %15, null
  br i1 %16, label %27, label %17

17:                                               ; preds = %14, %23
  %18 = phi i8* [ %25, %23 ], [ %15, %14 ]
  %19 = phi i8** [ %24, %23 ], [ %12, %14 ]
  %20 = load i8, i8* %18, align 1
  %21 = icmp eq i8 %20, 0
  br i1 %21, label %23, label %22

22:                                               ; preds = %17
  tail call void (%struct._FcConfigParse*, i32, i8*, ...) @FcConfigMessage(%struct._FcConfigParse* %0, i32 2, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.121, i64 0, i64 0), i8* nonnull %18)
  br label %23

23:                                               ; preds = %17, %22
  %24 = getelementptr inbounds i8*, i8** %19, i64 2
  %25 = load i8*, i8** %24, align 8
  %26 = icmp eq i8* %25, null
  br i1 %26, label %27, label %17

27:                                               ; preds = %23, %14, %10, %6
  %28 = getelementptr inbounds %struct._FcConfigParse, %struct._FcConfigParse* %0, i64 0, i32 1
  %29 = load %struct._FcVStack*, %struct._FcVStack** %28, align 8
  %30 = icmp eq %struct._FcVStack* %29, null
  br i1 %30, label %40, label %31

31:                                               ; preds = %27, %37
  %32 = phi %struct._FcVStack* [ %38, %37 ], [ %29, %27 ]
  %33 = getelementptr inbounds %struct._FcVStack, %struct._FcVStack* %32, i64 0, i32 1
  %34 = load %struct._FcPStack*, %struct._FcPStack** %33, align 8
  %35 = load %struct._FcPStack*, %struct._FcPStack** %2, align 8
  %36 = icmp eq %struct._FcPStack* %34, %35
  br i1 %36, label %37, label %40

37:                                               ; preds = %31
  tail call fastcc void @FcVStackPopAndDestroy(%struct._FcConfigParse* %0) #9
  %38 = load %struct._FcVStack*, %struct._FcVStack** %28, align 8
  %39 = icmp eq %struct._FcVStack* %38, null
  br i1 %39, label %40, label %31

40:                                               ; preds = %31, %37, %27
  %41 = load %struct._FcPStack*, %struct._FcPStack** %2, align 8
  %42 = bitcast %struct._FcPStack* %41 to i64*
  %43 = load i64, i64* %42, align 8
  %44 = bitcast %struct._FcConfigParse* %0 to i64*
  store i64 %43, i64* %44, align 8
  %45 = getelementptr inbounds %struct._FcPStack, %struct._FcPStack* %41, i64 0, i32 3
  tail call void @FcStrBufDestroy(%struct._FcStrBuf* %45) #9
  %46 = getelementptr inbounds %struct._FcPStack, %struct._FcPStack* %41, i64 0, i32 2
  %47 = load i8**, i8*** %46, align 8
  %48 = icmp eq i8** %47, null
  %49 = getelementptr inbounds %struct._FcPStack, %struct._FcPStack* %41, i64 0, i32 4, i64 0
  %50 = icmp eq i8** %47, %49
  %51 = or i1 %48, %50
  br i1 %51, label %54, label %52

52:                                               ; preds = %40
  %53 = bitcast i8** %47 to i8*
  tail call void @free(i8* %53) #9
  br label %54

54:                                               ; preds = %40, %52
  %55 = getelementptr inbounds %struct._FcConfigParse, %struct._FcConfigParse* %0, i64 0, i32 7
  %56 = load i32, i32* %55, align 8
  %57 = add i32 %56, -1
  %58 = zext i32 %57 to i64
  %59 = getelementptr inbounds %struct._FcConfigParse, %struct._FcConfigParse* %0, i64 0, i32 8, i64 %58
  %60 = icmp eq %struct._FcPStack* %41, %59
  br i1 %60, label %61, label %62

61:                                               ; preds = %54
  store i32 %57, i32* %55, align 8
  br label %64

62:                                               ; preds = %54
  %63 = bitcast %struct._FcPStack* %41 to i8*
  tail call void @free(i8* %63) #9
  br label %64

64:                                               ; preds = %61, %62, %5
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc i8* @_get_real_path_from_prefix(%struct._FcConfigParse*, i8*, i8*) unnamed_addr #0 {
  %4 = icmp eq i8* %2, null
  br i1 %4, label %25, label %5

5:                                                ; preds = %3
  %6 = tail call i32 @IA__FcStrCmp(i8* nonnull %2, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.38, i64 0, i64 0)) #9
  %7 = icmp eq i32 %6, 0
  br i1 %7, label %8, label %11

8:                                                ; preds = %5
  %9 = tail call i8* @FcConfigXdgDataHome() #9
  %10 = icmp eq i8* %9, null
  br i1 %10, label %58, label %53

11:                                               ; preds = %5
  %12 = tail call i32 @IA__FcStrCmp(i8* nonnull %2, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.39, i64 0, i64 0)) #9
  %13 = icmp eq i32 %12, 0
  br i1 %13, label %56, label %14

14:                                               ; preds = %11
  %15 = tail call i32 @IA__FcStrCmp(i8* nonnull %2, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.40, i64 0, i64 0)) #9
  %16 = icmp eq i32 %15, 0
  br i1 %16, label %56, label %17

17:                                               ; preds = %14
  %18 = tail call i32 @IA__FcStrCmp(i8* nonnull %2, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.41, i64 0, i64 0)) #9
  %19 = icmp eq i32 %18, 0
  br i1 %19, label %20, label %56

20:                                               ; preds = %17
  %21 = getelementptr inbounds %struct._FcConfigParse, %struct._FcConfigParse* %0, i64 0, i32 3
  %22 = load i8*, i8** %21, align 8
  %23 = tail call i8* @IA__FcStrDirname(i8* %22) #9
  %24 = icmp eq i8* %23, null
  br i1 %24, label %58, label %53

25:                                               ; preds = %3
  %26 = tail call i32 @FcStrIsAbsoluteFilename(i8* %1) #9
  %27 = icmp eq i32 %26, 0
  br i1 %27, label %28, label %56

28:                                               ; preds = %25
  %29 = load i8, i8* %1, align 1
  %30 = icmp eq i8 %29, 126
  br i1 %30, label %56, label %31

31:                                               ; preds = %28
  %32 = getelementptr inbounds %struct._FcConfigParse, %struct._FcConfigParse* %0, i64 0, i32 0
  %33 = load %struct._FcPStack*, %struct._FcPStack** %32, align 8
  %34 = getelementptr inbounds %struct._FcPStack, %struct._FcPStack* %33, i64 0, i32 1
  %35 = load i32, i32* %34, align 8
  br label %41

36:                                               ; preds = %41
  %37 = getelementptr inbounds [54 x %struct.anon.2], [54 x %struct.anon.2]* @fcElementMap, i64 0, i64 %46, i32 1
  %38 = load i32, i32* %37, align 4
  %39 = icmp eq i32 %38, %35
  %40 = add nuw nsw i64 %42, 2
  br i1 %39, label %47, label %60

41:                                               ; preds = %65, %31
  %42 = phi i64 [ 0, %31 ], [ %64, %65 ]
  %43 = getelementptr inbounds [54 x %struct.anon.2], [54 x %struct.anon.2]* @fcElementMap, i64 0, i64 %42, i32 1
  %44 = load i32, i32* %43, align 4
  %45 = icmp eq i32 %44, %35
  %46 = add nuw nsw i64 %42, 1
  br i1 %45, label %47, label %36

47:                                               ; preds = %60, %36, %41
  %48 = phi i64 [ %42, %41 ], [ %46, %36 ], [ %40, %60 ]
  %49 = and i64 %48, 4294967295
  %50 = getelementptr inbounds [54 x %struct.anon.2], [54 x %struct.anon.2]* @fcElementMap, i64 0, i64 %49, i32 0, i64 0
  br label %51

51:                                               ; preds = %65, %47
  %52 = phi i8* [ %50, %47 ], [ null, %65 ]
  tail call void (%struct._FcConfigParse*, i32, i8*, ...) @FcConfigMessage(%struct._FcConfigParse* %0, i32 1, i8* getelementptr inbounds ([95 x i8], [95 x i8]* @.str.42, i64 0, i64 0), i8* %52)
  br label %56

53:                                               ; preds = %20, %8
  %54 = phi i8* [ %9, %8 ], [ %23, %20 ]
  %55 = tail call i8* (i8*, ...) @IA__FcStrBuildFilename(i8* nonnull %54, i8* %1, i8* null) #9
  tail call void @IA__FcStrFree(i8* nonnull %54) #9
  br label %58

56:                                               ; preds = %11, %14, %17, %25, %51, %28
  %57 = tail call noalias i8* @strdup(i8* %1) #9
  br label %58

58:                                               ; preds = %53, %56, %20, %8
  %59 = phi i8* [ null, %8 ], [ null, %20 ], [ %55, %53 ], [ %57, %56 ]
  ret i8* %59

60:                                               ; preds = %36
  %61 = getelementptr inbounds [54 x %struct.anon.2], [54 x %struct.anon.2]* @fcElementMap, i64 0, i64 %40, i32 1
  %62 = load i32, i32* %61, align 4
  %63 = icmp eq i32 %62, %35
  %64 = add nuw nsw i64 %42, 3
  br i1 %63, label %47, label %65

65:                                               ; preds = %60
  %66 = icmp eq i64 %64, 54
  br i1 %66, label %51, label %41
}

declare hidden i32 @FcStrUsesHome(i8*) local_unnamed_addr #3

declare hidden i8* @IA__FcConfigHome() local_unnamed_addr #3

declare hidden i32 @FcConfigAddFontDir(%struct._FcConfig*, i8*, i8*, i8*) local_unnamed_addr #3

declare hidden i8* @FcConfigXdgDataHome() local_unnamed_addr #3

declare hidden i8* @IA__FcStrDirname(i8*) local_unnamed_addr #3

declare hidden i32 @FcStrIsAbsoluteFilename(i8*) local_unnamed_addr #3

declare hidden i8* @IA__FcStrBuildFilename(i8*, ...) local_unnamed_addr #3

; Function Attrs: nofree nounwind
declare noalias i8* @strdup(i8* nocapture readonly) local_unnamed_addr #6

declare hidden i8* @FcConfigXdgCacheHome() local_unnamed_addr #3

declare hidden i8* @FcStrBufDone(%struct._FcStrBuf*) local_unnamed_addr #3

; Function Attrs: nounwind
declare noalias i8* @realloc(i8* nocapture, i64) local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #2

declare hidden i32 @FcConfigAddCacheDir(%struct._FcConfig*, i8*) local_unnamed_addr #3

declare hidden i8* @FcConfigXdgConfigHome() local_unnamed_addr #3

declare hidden i32 @FcFileIsFile(i8*) local_unnamed_addr #3

declare hidden i8* @IA__FcStrStr(i8*, i8*) local_unnamed_addr #3

declare hidden %struct._FcRuleSet* @FcRuleSetCreate(i8*) local_unnamed_addr #3

declare hidden void @FcRuleSetEnable(%struct._FcRuleSet*, i32) local_unnamed_addr #3

declare hidden void @FcRuleSetAddDescription(%struct._FcRuleSet*, i8*, i8*) local_unnamed_addr #3

declare hidden void @FcRuleSetDestroy(%struct._FcRuleSet*) local_unnamed_addr #3

declare hidden i32 @FcFileIsLink(i8*) local_unnamed_addr #3

declare hidden i32 @FcMakeDirectory(i8*) local_unnamed_addr #3

; Function Attrs: nofree nounwind
declare i32 @rename(i8* nocapture readonly, i8* nocapture readonly) local_unnamed_addr #6

; Function Attrs: nounwind
declare i32 @symlink(i8*, i8*) local_unnamed_addr #1

declare hidden i32 @FcNameBool(i8*, i32*) local_unnamed_addr #3

declare hidden i8* @FcObjectName(i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define internal fastcc void @FcVStackPopAndDestroy(%struct._FcConfigParse*) unnamed_addr #0 {
  %2 = getelementptr inbounds %struct._FcConfigParse, %struct._FcConfigParse* %0, i64 0, i32 1
  %3 = load %struct._FcVStack*, %struct._FcVStack** %2, align 8
  %4 = icmp eq %struct._FcVStack* %3, null
  br i1 %4, label %74, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %struct._FcVStack, %struct._FcVStack* %3, i64 0, i32 1
  %7 = load %struct._FcPStack*, %struct._FcPStack** %6, align 8
  %8 = getelementptr inbounds %struct._FcConfigParse, %struct._FcConfigParse* %0, i64 0, i32 0
  %9 = load %struct._FcPStack*, %struct._FcPStack** %8, align 8
  %10 = icmp eq %struct._FcPStack* %7, %9
  br i1 %10, label %11, label %74

11:                                               ; preds = %5
  %12 = bitcast %struct._FcVStack* %3 to i64*
  %13 = load i64, i64* %12, align 8
  %14 = bitcast %struct._FcVStack** %2 to i64*
  store i64 %13, i64* %14, align 8
  %15 = getelementptr inbounds %struct._FcVStack, %struct._FcVStack* %3, i64 0, i32 2
  %16 = load i32, i32* %15, align 8
  switch i32 %16, label %64 [
    i32 19, label %54
    i32 9, label %50
    i32 8, label %50
    i32 1, label %17
    i32 3, label %17
    i32 4, label %17
    i32 6, label %20
    i32 18, label %50
    i32 17, label %43
    i32 12, label %24
    i32 7, label %50
    i32 13, label %31
    i32 15, label %35
    i32 16, label %39
  ]

17:                                               ; preds = %11, %11, %11
  %18 = getelementptr inbounds %struct._FcVStack, %struct._FcVStack* %3, i64 0, i32 3, i32 0
  %19 = load i8*, i8** %18, align 8
  tail call void @IA__FcStrFree(i8* %19) #9
  br label %64

20:                                               ; preds = %11
  %21 = getelementptr inbounds %struct._FcVStack, %struct._FcVStack* %3, i64 0, i32 3
  %22 = bitcast %union.anon.1* %21 to %struct._FcPattern**
  %23 = load %struct._FcPattern*, %struct._FcPattern** %22, align 8
  tail call void @IA__FcPatternDestroy(%struct._FcPattern* %23) #9
  br label %64

24:                                               ; preds = %11
  %25 = getelementptr inbounds %struct._FcVStack, %struct._FcVStack* %3, i64 0, i32 3
  %26 = bitcast %union.anon.1* %25 to %struct._FcExprMatrix**
  %27 = load %struct._FcExprMatrix*, %struct._FcExprMatrix** %26, align 8
  %28 = icmp eq %struct._FcExprMatrix* %27, null
  br i1 %28, label %64, label %29

29:                                               ; preds = %24
  %30 = bitcast %struct._FcExprMatrix* %27 to i8*
  tail call void @free(i8* %30) #9
  br label %64

31:                                               ; preds = %11
  %32 = getelementptr inbounds %struct._FcVStack, %struct._FcVStack* %3, i64 0, i32 3
  %33 = bitcast %union.anon.1* %32 to %struct._FcRange**
  %34 = load %struct._FcRange*, %struct._FcRange** %33, align 8
  tail call void @IA__FcRangeDestroy(%struct._FcRange* %34) #9
  br label %64

35:                                               ; preds = %11
  %36 = getelementptr inbounds %struct._FcVStack, %struct._FcVStack* %3, i64 0, i32 3
  %37 = bitcast %union.anon.1* %36 to %struct._FcCharSet**
  %38 = load %struct._FcCharSet*, %struct._FcCharSet** %37, align 8
  tail call void @IA__FcCharSetDestroy(%struct._FcCharSet* %38) #9
  br label %64

39:                                               ; preds = %11
  %40 = getelementptr inbounds %struct._FcVStack, %struct._FcVStack* %3, i64 0, i32 3
  %41 = bitcast %union.anon.1* %40 to %struct._FcLangSet**
  %42 = load %struct._FcLangSet*, %struct._FcLangSet** %41, align 8
  tail call void @IA__FcLangSetDestroy(%struct._FcLangSet* %42) #9
  br label %64

43:                                               ; preds = %11
  %44 = getelementptr inbounds %struct._FcVStack, %struct._FcVStack* %3, i64 0, i32 3
  %45 = bitcast %union.anon.1* %44 to %struct._FcTest**
  %46 = load %struct._FcTest*, %struct._FcTest** %45, align 8
  %47 = getelementptr inbounds %struct._FcTest, %struct._FcTest* %46, i64 0, i32 4
  %48 = load %struct._FcExpr*, %struct._FcExpr** %47, align 8
  tail call fastcc void @FcExprDestroy(%struct._FcExpr* %48) #9
  %49 = bitcast %struct._FcTest* %46 to i8*
  tail call void @free(i8* %49) #9
  br label %64

50:                                               ; preds = %11, %11, %11, %11
  %51 = getelementptr inbounds %struct._FcVStack, %struct._FcVStack* %3, i64 0, i32 3
  %52 = bitcast %union.anon.1* %51 to %struct._FcExpr**
  %53 = load %struct._FcExpr*, %struct._FcExpr** %52, align 8
  tail call fastcc void @FcExprDestroy(%struct._FcExpr* %53)
  br label %64

54:                                               ; preds = %11
  %55 = getelementptr inbounds %struct._FcVStack, %struct._FcVStack* %3, i64 0, i32 3
  %56 = bitcast %union.anon.1* %55 to %struct._FcEdit**
  %57 = load %struct._FcEdit*, %struct._FcEdit** %56, align 8
  %58 = getelementptr inbounds %struct._FcEdit, %struct._FcEdit* %57, i64 0, i32 2
  %59 = load %struct._FcExpr*, %struct._FcExpr** %58, align 8
  %60 = icmp eq %struct._FcExpr* %59, null
  br i1 %60, label %62, label %61

61:                                               ; preds = %54
  tail call fastcc void @FcExprDestroy(%struct._FcExpr* nonnull %59) #9
  br label %62

62:                                               ; preds = %54, %61
  %63 = bitcast %struct._FcEdit* %57 to i8*
  tail call void @free(i8* %63) #9
  br label %64

64:                                               ; preds = %29, %24, %11, %62, %50, %43, %39, %35, %31, %20, %17
  %65 = getelementptr inbounds %struct._FcConfigParse, %struct._FcConfigParse* %0, i64 0, i32 9
  %66 = load i32, i32* %65, align 8
  %67 = add i32 %66, -1
  %68 = zext i32 %67 to i64
  %69 = getelementptr inbounds %struct._FcConfigParse, %struct._FcConfigParse* %0, i64 0, i32 10, i64 %68
  %70 = icmp eq %struct._FcVStack* %3, %69
  br i1 %70, label %71, label %72

71:                                               ; preds = %64
  store i32 %67, i32* %65, align 8
  br label %74

72:                                               ; preds = %64
  %73 = bitcast %struct._FcVStack* %3 to i8*
  tail call void @free(i8* %73) #9
  br label %74

74:                                               ; preds = %71, %72, %1, %5
  ret void
}

declare hidden i32 @FcRuleSetAdd(%struct._FcRuleSet*, %struct._FcRule*, i32) local_unnamed_addr #3

declare hidden void @IA__FcPatternDestroy(%struct._FcPattern*) local_unnamed_addr #3

declare hidden %struct._FcExpr* @FcConfigAllocExpr(%struct._FcConfig*) local_unnamed_addr #3

declare hidden i32 @FcObjectFromName(i8*) local_unnamed_addr #3

declare hidden %struct._FcObjectType* @IA__FcNameGetObjectType(i8*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define internal fastcc void @FcTypecheckExpr(%struct._FcConfigParse*, %struct._FcExpr* readonly, i32) unnamed_addr #0 {
  %4 = icmp eq %struct._FcExpr* %1, null
  br i1 %4, label %260, label %5

5:                                                ; preds = %3, %255
  %6 = phi i32 [ %256, %255 ], [ %2, %3 ]
  %7 = phi %struct._FcExpr* [ %258, %255 ], [ %1, %3 ]
  br label %8

8:                                                ; preds = %5, %224
  %9 = phi %struct._FcExpr* [ %7, %5 ], [ %227, %224 ]
  %10 = getelementptr inbounds %struct._FcExpr, %struct._FcExpr* %9, i64 0, i32 0
  %11 = load i32, i32* %10, align 8
  %12 = trunc i32 %11 to i16
  switch i16 %12, label %260 [
    i16 0, label %13
    i16 1, label %13
    i16 2, label %26
    i16 3, label %38
    i16 5, label %51
    i16 6, label %64
    i16 7, label %77
    i16 4, label %89
    i16 40, label %242
    i16 9, label %102
    i16 10, label %148
    i16 19, label %200
    i16 39, label %242
    i16 38, label %242
    i16 22, label %208
    i16 23, label %208
    i16 27, label %208
    i16 28, label %208
    i16 29, label %208
    i16 30, label %208
    i16 24, label %208
    i16 26, label %208
    i16 25, label %208
    i16 36, label %221
    i16 20, label %221
    i16 21, label %221
    i16 31, label %221
    i16 32, label %221
    i16 33, label %221
    i16 34, label %221
    i16 35, label %229
    i16 37, label %242
  ]

13:                                               ; preds = %8, %8
  %14 = add i32 %6, -1
  %15 = icmp ult i32 %14, 2
  br i1 %15, label %260, label %16

16:                                               ; preds = %13
  switch i32 %6, label %23 [
    i32 -1, label %260
    i32 9, label %260
    i32 0, label %24
    i32 8, label %22
    i32 7, label %21
    i32 3, label %17
    i32 4, label %18
    i32 5, label %19
    i32 6, label %20
  ]

17:                                               ; preds = %16
  br label %24

18:                                               ; preds = %16
  br label %24

19:                                               ; preds = %16
  br label %24

20:                                               ; preds = %16
  br label %24

21:                                               ; preds = %16
  br label %24

22:                                               ; preds = %16
  br label %24

23:                                               ; preds = %16
  br label %24

24:                                               ; preds = %16, %17, %18, %19, %20, %21, %22, %23
  %25 = phi i8* [ getelementptr inbounds ([8 x i8], [8 x i8]* @.str.14, i64 0, i64 0), %23 ], [ getelementptr inbounds ([8 x i8], [8 x i8]* @.str.75, i64 0, i64 0), %22 ], [ getelementptr inbounds ([8 x i8], [8 x i8]* @.str.74, i64 0, i64 0), %21 ], [ getelementptr inbounds ([8 x i8], [8 x i8]* @.str.73, i64 0, i64 0), %20 ], [ getelementptr inbounds ([7 x i8], [7 x i8]* @.str.72, i64 0, i64 0), %19 ], [ getelementptr inbounds ([5 x i8], [5 x i8]* @.str.71, i64 0, i64 0), %18 ], [ getelementptr inbounds ([7 x i8], [7 x i8]* @.str.70, i64 0, i64 0), %17 ], [ getelementptr inbounds ([5 x i8], [5 x i8]* @.str.68, i64 0, i64 0), %16 ]
  tail call void (%struct._FcConfigParse*, i32, i8*, ...) @FcConfigMessage(%struct._FcConfigParse* %0, i32 1, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.67, i64 0, i64 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.69, i64 0, i64 0), i8* nonnull %25) #9
  br label %260

26:                                               ; preds = %8
  %27 = icmp eq i32 %6, 1
  %28 = select i1 %27, i32 2, i32 %6
  switch i32 %28, label %35 [
    i32 3, label %260
    i32 -1, label %260
    i32 8, label %260
    i32 0, label %36
    i32 1, label %29
    i32 2, label %29
    i32 9, label %34
    i32 4, label %30
    i32 5, label %31
    i32 6, label %32
    i32 7, label %33
  ]

29:                                               ; preds = %26, %26
  br label %36

30:                                               ; preds = %26
  br label %36

31:                                               ; preds = %26
  br label %36

32:                                               ; preds = %26
  br label %36

33:                                               ; preds = %26
  br label %36

34:                                               ; preds = %26
  br label %36

35:                                               ; preds = %26
  br label %36

36:                                               ; preds = %26, %29, %30, %31, %32, %33, %34, %35
  %37 = phi i8* [ getelementptr inbounds ([8 x i8], [8 x i8]* @.str.14, i64 0, i64 0), %35 ], [ getelementptr inbounds ([6 x i8], [6 x i8]* @.str.76, i64 0, i64 0), %34 ], [ getelementptr inbounds ([8 x i8], [8 x i8]* @.str.74, i64 0, i64 0), %33 ], [ getelementptr inbounds ([8 x i8], [8 x i8]* @.str.73, i64 0, i64 0), %32 ], [ getelementptr inbounds ([7 x i8], [7 x i8]* @.str.72, i64 0, i64 0), %31 ], [ getelementptr inbounds ([5 x i8], [5 x i8]* @.str.71, i64 0, i64 0), %30 ], [ getelementptr inbounds ([7 x i8], [7 x i8]* @.str.69, i64 0, i64 0), %29 ], [ getelementptr inbounds ([5 x i8], [5 x i8]* @.str.68, i64 0, i64 0), %26 ]
  tail call void (%struct._FcConfigParse*, i32, i8*, ...) @FcConfigMessage(%struct._FcConfigParse* %0, i32 1, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.67, i64 0, i64 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.70, i64 0, i64 0), i8* nonnull %37) #9
  br label %260

38:                                               ; preds = %8
  %39 = icmp eq i32 %6, 1
  %40 = select i1 %39, i32 2, i32 %6
  switch i32 %40, label %48 [
    i32 -1, label %260
    i32 5, label %260
    i32 0, label %49
    i32 1, label %41
    i32 2, label %41
    i32 3, label %42
    i32 4, label %43
    i32 9, label %47
    i32 6, label %44
    i32 7, label %45
    i32 8, label %46
  ]

41:                                               ; preds = %38, %38
  br label %49

42:                                               ; preds = %38
  br label %49

43:                                               ; preds = %38
  br label %49

44:                                               ; preds = %38
  br label %49

45:                                               ; preds = %38
  br label %49

46:                                               ; preds = %38
  br label %49

47:                                               ; preds = %38
  br label %49

48:                                               ; preds = %38
  br label %49

49:                                               ; preds = %38, %41, %42, %43, %44, %45, %46, %47, %48
  %50 = phi i8* [ getelementptr inbounds ([8 x i8], [8 x i8]* @.str.14, i64 0, i64 0), %48 ], [ getelementptr inbounds ([6 x i8], [6 x i8]* @.str.76, i64 0, i64 0), %47 ], [ getelementptr inbounds ([8 x i8], [8 x i8]* @.str.75, i64 0, i64 0), %46 ], [ getelementptr inbounds ([8 x i8], [8 x i8]* @.str.74, i64 0, i64 0), %45 ], [ getelementptr inbounds ([8 x i8], [8 x i8]* @.str.73, i64 0, i64 0), %44 ], [ getelementptr inbounds ([5 x i8], [5 x i8]* @.str.71, i64 0, i64 0), %43 ], [ getelementptr inbounds ([7 x i8], [7 x i8]* @.str.70, i64 0, i64 0), %42 ], [ getelementptr inbounds ([7 x i8], [7 x i8]* @.str.69, i64 0, i64 0), %41 ], [ getelementptr inbounds ([5 x i8], [5 x i8]* @.str.68, i64 0, i64 0), %38 ]
  tail call void (%struct._FcConfigParse*, i32, i8*, ...) @FcConfigMessage(%struct._FcConfigParse* %0, i32 1, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.67, i64 0, i64 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.72, i64 0, i64 0), i8* nonnull %50) #9
  br label %260

51:                                               ; preds = %8
  %52 = icmp eq i32 %6, 1
  %53 = select i1 %52, i32 2, i32 %6
  switch i32 %53, label %61 [
    i32 -1, label %260
    i32 4, label %260
    i32 0, label %62
    i32 1, label %54
    i32 2, label %54
    i32 3, label %55
    i32 9, label %60
    i32 5, label %56
    i32 6, label %57
    i32 7, label %58
    i32 8, label %59
  ]

54:                                               ; preds = %51, %51
  br label %62

55:                                               ; preds = %51
  br label %62

56:                                               ; preds = %51
  br label %62

57:                                               ; preds = %51
  br label %62

58:                                               ; preds = %51
  br label %62

59:                                               ; preds = %51
  br label %62

60:                                               ; preds = %51
  br label %62

61:                                               ; preds = %51
  br label %62

62:                                               ; preds = %51, %54, %55, %56, %57, %58, %59, %60, %61
  %63 = phi i8* [ getelementptr inbounds ([8 x i8], [8 x i8]* @.str.14, i64 0, i64 0), %61 ], [ getelementptr inbounds ([6 x i8], [6 x i8]* @.str.76, i64 0, i64 0), %60 ], [ getelementptr inbounds ([8 x i8], [8 x i8]* @.str.75, i64 0, i64 0), %59 ], [ getelementptr inbounds ([8 x i8], [8 x i8]* @.str.74, i64 0, i64 0), %58 ], [ getelementptr inbounds ([8 x i8], [8 x i8]* @.str.73, i64 0, i64 0), %57 ], [ getelementptr inbounds ([7 x i8], [7 x i8]* @.str.72, i64 0, i64 0), %56 ], [ getelementptr inbounds ([7 x i8], [7 x i8]* @.str.70, i64 0, i64 0), %55 ], [ getelementptr inbounds ([7 x i8], [7 x i8]* @.str.69, i64 0, i64 0), %54 ], [ getelementptr inbounds ([5 x i8], [5 x i8]* @.str.68, i64 0, i64 0), %51 ]
  tail call void (%struct._FcConfigParse*, i32, i8*, ...) @FcConfigMessage(%struct._FcConfigParse* %0, i32 1, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.67, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.71, i64 0, i64 0), i8* nonnull %63) #9
  br label %260

64:                                               ; preds = %8
  %65 = icmp eq i32 %6, 1
  %66 = select i1 %65, i32 2, i32 %6
  switch i32 %66, label %74 [
    i32 -1, label %260
    i32 6, label %260
    i32 0, label %75
    i32 1, label %67
    i32 2, label %67
    i32 3, label %68
    i32 4, label %69
    i32 5, label %70
    i32 9, label %73
    i32 7, label %71
    i32 8, label %72
  ]

67:                                               ; preds = %64, %64
  br label %75

68:                                               ; preds = %64
  br label %75

69:                                               ; preds = %64
  br label %75

70:                                               ; preds = %64
  br label %75

71:                                               ; preds = %64
  br label %75

72:                                               ; preds = %64
  br label %75

73:                                               ; preds = %64
  br label %75

74:                                               ; preds = %64
  br label %75

75:                                               ; preds = %64, %67, %68, %69, %70, %71, %72, %73, %74
  %76 = phi i8* [ getelementptr inbounds ([8 x i8], [8 x i8]* @.str.14, i64 0, i64 0), %74 ], [ getelementptr inbounds ([6 x i8], [6 x i8]* @.str.76, i64 0, i64 0), %73 ], [ getelementptr inbounds ([8 x i8], [8 x i8]* @.str.75, i64 0, i64 0), %72 ], [ getelementptr inbounds ([8 x i8], [8 x i8]* @.str.74, i64 0, i64 0), %71 ], [ getelementptr inbounds ([7 x i8], [7 x i8]* @.str.72, i64 0, i64 0), %70 ], [ getelementptr inbounds ([5 x i8], [5 x i8]* @.str.71, i64 0, i64 0), %69 ], [ getelementptr inbounds ([7 x i8], [7 x i8]* @.str.70, i64 0, i64 0), %68 ], [ getelementptr inbounds ([7 x i8], [7 x i8]* @.str.69, i64 0, i64 0), %67 ], [ getelementptr inbounds ([5 x i8], [5 x i8]* @.str.68, i64 0, i64 0), %64 ]
  tail call void (%struct._FcConfigParse*, i32, i8*, ...) @FcConfigMessage(%struct._FcConfigParse* %0, i32 1, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.67, i64 0, i64 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.73, i64 0, i64 0), i8* nonnull %76) #9
  br label %260

77:                                               ; preds = %8
  %78 = icmp eq i32 %6, 1
  %79 = select i1 %78, i32 2, i32 %6
  switch i32 %79, label %86 [
    i32 8, label %260
    i32 -1, label %260
    i32 3, label %260
    i32 0, label %87
    i32 1, label %80
    i32 2, label %80
    i32 9, label %85
    i32 4, label %81
    i32 5, label %82
    i32 6, label %83
    i32 7, label %84
  ]

80:                                               ; preds = %77, %77
  br label %87

81:                                               ; preds = %77
  br label %87

82:                                               ; preds = %77
  br label %87

83:                                               ; preds = %77
  br label %87

84:                                               ; preds = %77
  br label %87

85:                                               ; preds = %77
  br label %87

86:                                               ; preds = %77
  br label %87

87:                                               ; preds = %77, %80, %81, %82, %83, %84, %85, %86
  %88 = phi i8* [ getelementptr inbounds ([8 x i8], [8 x i8]* @.str.14, i64 0, i64 0), %86 ], [ getelementptr inbounds ([6 x i8], [6 x i8]* @.str.76, i64 0, i64 0), %85 ], [ getelementptr inbounds ([8 x i8], [8 x i8]* @.str.74, i64 0, i64 0), %84 ], [ getelementptr inbounds ([8 x i8], [8 x i8]* @.str.73, i64 0, i64 0), %83 ], [ getelementptr inbounds ([7 x i8], [7 x i8]* @.str.72, i64 0, i64 0), %82 ], [ getelementptr inbounds ([5 x i8], [5 x i8]* @.str.71, i64 0, i64 0), %81 ], [ getelementptr inbounds ([7 x i8], [7 x i8]* @.str.69, i64 0, i64 0), %80 ], [ getelementptr inbounds ([5 x i8], [5 x i8]* @.str.68, i64 0, i64 0), %77 ]
  tail call void (%struct._FcConfigParse*, i32, i8*, ...) @FcConfigMessage(%struct._FcConfigParse* %0, i32 1, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.67, i64 0, i64 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.75, i64 0, i64 0), i8* nonnull %88) #9
  br label %260

89:                                               ; preds = %8
  %90 = icmp eq i32 %6, 1
  %91 = select i1 %90, i32 2, i32 %6
  switch i32 %91, label %99 [
    i32 -1, label %260
    i32 9, label %260
    i32 0, label %100
    i32 1, label %92
    i32 2, label %92
    i32 3, label %93
    i32 4, label %94
    i32 5, label %95
    i32 6, label %96
    i32 7, label %97
    i32 8, label %98
  ]

92:                                               ; preds = %89, %89
  br label %100

93:                                               ; preds = %89
  br label %100

94:                                               ; preds = %89
  br label %100

95:                                               ; preds = %89
  br label %100

96:                                               ; preds = %89
  br label %100

97:                                               ; preds = %89
  br label %100

98:                                               ; preds = %89
  br label %100

99:                                               ; preds = %89
  br label %100

100:                                              ; preds = %89, %92, %93, %94, %95, %96, %97, %98, %99
  %101 = phi i8* [ getelementptr inbounds ([8 x i8], [8 x i8]* @.str.14, i64 0, i64 0), %99 ], [ getelementptr inbounds ([8 x i8], [8 x i8]* @.str.75, i64 0, i64 0), %98 ], [ getelementptr inbounds ([8 x i8], [8 x i8]* @.str.74, i64 0, i64 0), %97 ], [ getelementptr inbounds ([8 x i8], [8 x i8]* @.str.73, i64 0, i64 0), %96 ], [ getelementptr inbounds ([7 x i8], [7 x i8]* @.str.72, i64 0, i64 0), %95 ], [ getelementptr inbounds ([5 x i8], [5 x i8]* @.str.71, i64 0, i64 0), %94 ], [ getelementptr inbounds ([7 x i8], [7 x i8]* @.str.70, i64 0, i64 0), %93 ], [ getelementptr inbounds ([7 x i8], [7 x i8]* @.str.69, i64 0, i64 0), %92 ], [ getelementptr inbounds ([5 x i8], [5 x i8]* @.str.68, i64 0, i64 0), %89 ]
  tail call void (%struct._FcConfigParse*, i32, i8*, ...) @FcConfigMessage(%struct._FcConfigParse* %0, i32 1, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.67, i64 0, i64 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.76, i64 0, i64 0), i8* nonnull %101) #9
  br label %260

102:                                              ; preds = %8
  %103 = getelementptr inbounds %struct._FcExpr, %struct._FcExpr* %9, i64 0, i32 1
  %104 = bitcast %union.anon* %103 to i32*
  %105 = load i32, i32* %104, align 8
  %106 = tail call i8* @FcObjectName(i32 %105) #9
  %107 = tail call %struct._FcObjectType* @IA__FcNameGetObjectType(i8* %106) #9
  %108 = icmp eq %struct._FcObjectType* %107, null
  br i1 %108, label %260, label %109

109:                                              ; preds = %102
  %110 = getelementptr inbounds %struct._FcObjectType, %struct._FcObjectType* %107, i64 0, i32 1
  %111 = load i32, i32* %110, align 8
  %112 = icmp eq i32 %111, 1
  %113 = select i1 %112, i32 2, i32 %111
  %114 = icmp eq i32 %6, 1
  %115 = select i1 %114, i32 2, i32 %6
  %116 = icmp eq i32 %113, %115
  br i1 %116, label %260, label %117

117:                                              ; preds = %109
  %118 = icmp eq i32 %113, 8
  %119 = icmp eq i32 %115, 3
  %120 = and i1 %119, %118
  br i1 %120, label %260, label %121

121:                                              ; preds = %117
  %122 = icmp eq i32 %113, 3
  %123 = icmp eq i32 %115, 8
  %124 = and i1 %123, %122
  br i1 %124, label %260, label %125

125:                                              ; preds = %121
  %126 = icmp eq i32 %113, 2
  %127 = icmp eq i32 %115, 9
  %128 = and i1 %127, %126
  %129 = icmp eq i32 %115, -1
  %130 = or i1 %129, %128
  %131 = icmp eq i32 %113, -1
  %132 = or i1 %131, %130
  br i1 %132, label %260, label %133

133:                                              ; preds = %125
  %134 = icmp ult i32 %113, 10
  br i1 %134, label %135, label %139

135:                                              ; preds = %133
  %136 = sext i32 %113 to i64
  %137 = getelementptr inbounds [10 x i8*], [10 x i8*]* @switch.table.FcTypecheckExpr.124, i64 0, i64 %136
  %138 = load i8*, i8** %137, align 8
  br label %139

139:                                              ; preds = %133, %135
  %140 = phi i8* [ %138, %135 ], [ getelementptr inbounds ([8 x i8], [8 x i8]* @.str.14, i64 0, i64 0), %133 ]
  %141 = icmp ult i32 %115, 10
  br i1 %141, label %142, label %146

142:                                              ; preds = %139
  %143 = sext i32 %115 to i64
  %144 = getelementptr inbounds [10 x i8*], [10 x i8*]* @switch.table.FcTypecheckExpr.124, i64 0, i64 %143
  %145 = load i8*, i8** %144, align 8
  br label %146

146:                                              ; preds = %139, %142
  %147 = phi i8* [ %145, %142 ], [ getelementptr inbounds ([8 x i8], [8 x i8]* @.str.14, i64 0, i64 0), %139 ]
  tail call void (%struct._FcConfigParse*, i32, i8*, ...) @FcConfigMessage(%struct._FcConfigParse* %0, i32 1, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.67, i64 0, i64 0), i8* %140, i8* nonnull %147) #9
  br label %260

148:                                              ; preds = %8
  %149 = getelementptr inbounds %struct._FcExpr, %struct._FcExpr* %9, i64 0, i32 1
  %150 = bitcast %union.anon* %149 to i8**
  %151 = load i8*, i8** %150, align 8
  %152 = tail call %struct._FcConstant* @IA__FcNameGetConstant(i8* %151) #9
  %153 = icmp eq %struct._FcConstant* %152, null
  br i1 %153, label %198, label %154

154:                                              ; preds = %148
  %155 = getelementptr inbounds %struct._FcConstant, %struct._FcConstant* %152, i64 0, i32 1
  %156 = load i8*, i8** %155, align 8
  %157 = tail call %struct._FcObjectType* @IA__FcNameGetObjectType(i8* %156) #9
  %158 = icmp eq %struct._FcObjectType* %157, null
  br i1 %158, label %260, label %159

159:                                              ; preds = %154
  %160 = getelementptr inbounds %struct._FcObjectType, %struct._FcObjectType* %157, i64 0, i32 1
  %161 = load i32, i32* %160, align 8
  %162 = icmp eq i32 %161, 1
  %163 = select i1 %162, i32 2, i32 %161
  %164 = icmp eq i32 %6, 1
  %165 = select i1 %164, i32 2, i32 %6
  %166 = icmp eq i32 %163, %165
  br i1 %166, label %260, label %167

167:                                              ; preds = %159
  %168 = icmp eq i32 %163, 8
  %169 = icmp eq i32 %165, 3
  %170 = and i1 %169, %168
  br i1 %170, label %260, label %171

171:                                              ; preds = %167
  %172 = icmp eq i32 %163, 3
  %173 = icmp eq i32 %165, 8
  %174 = and i1 %173, %172
  br i1 %174, label %260, label %175

175:                                              ; preds = %171
  %176 = icmp eq i32 %163, 2
  %177 = icmp eq i32 %165, 9
  %178 = and i1 %177, %176
  %179 = icmp eq i32 %165, -1
  %180 = or i1 %179, %178
  %181 = icmp eq i32 %163, -1
  %182 = or i1 %181, %180
  br i1 %182, label %260, label %183

183:                                              ; preds = %175
  %184 = icmp ult i32 %163, 10
  br i1 %184, label %185, label %189

185:                                              ; preds = %183
  %186 = sext i32 %163 to i64
  %187 = getelementptr inbounds [10 x i8*], [10 x i8*]* @switch.table.FcTypecheckExpr.124, i64 0, i64 %186
  %188 = load i8*, i8** %187, align 8
  br label %189

189:                                              ; preds = %183, %185
  %190 = phi i8* [ %188, %185 ], [ getelementptr inbounds ([8 x i8], [8 x i8]* @.str.14, i64 0, i64 0), %183 ]
  %191 = icmp ult i32 %165, 10
  br i1 %191, label %192, label %196

192:                                              ; preds = %189
  %193 = sext i32 %165 to i64
  %194 = getelementptr inbounds [10 x i8*], [10 x i8*]* @switch.table.FcTypecheckExpr.124, i64 0, i64 %193
  %195 = load i8*, i8** %194, align 8
  br label %196

196:                                              ; preds = %189, %192
  %197 = phi i8* [ %195, %192 ], [ getelementptr inbounds ([8 x i8], [8 x i8]* @.str.14, i64 0, i64 0), %189 ]
  tail call void (%struct._FcConfigParse*, i32, i8*, ...) @FcConfigMessage(%struct._FcConfigParse* %0, i32 1, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.67, i64 0, i64 0), i8* %190, i8* nonnull %197) #9
  br label %260

198:                                              ; preds = %148
  %199 = load i8*, i8** %150, align 8
  tail call void (%struct._FcConfigParse*, i32, i8*, ...) @FcConfigMessage(%struct._FcConfigParse* %0, i32 1, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.66, i64 0, i64 0), i8* %199)
  br label %260

200:                                              ; preds = %8
  %201 = getelementptr inbounds %struct._FcExpr, %struct._FcExpr* %9, i64 0, i32 1, i32 0, i32 0
  %202 = load %struct._FcExpr*, %struct._FcExpr** %201, align 8
  tail call fastcc void @FcTypecheckExpr(%struct._FcConfigParse* %0, %struct._FcExpr* %202, i32 4)
  %203 = getelementptr inbounds %struct._FcExpr, %struct._FcExpr* %9, i64 0, i32 1, i32 0, i32 1
  %204 = load %struct._FcExpr*, %struct._FcExpr** %203, align 8
  %205 = getelementptr inbounds %struct._FcExpr, %struct._FcExpr* %204, i64 0, i32 1, i32 0, i32 0
  %206 = load %struct._FcExpr*, %struct._FcExpr** %205, align 8
  tail call fastcc void @FcTypecheckExpr(%struct._FcConfigParse* %0, %struct._FcExpr* %206, i32 %6)
  %207 = load %struct._FcExpr*, %struct._FcExpr** %203, align 8
  br label %224

208:                                              ; preds = %8, %8, %8, %8, %8, %8, %8, %8, %8
  %209 = icmp eq i32 %6, 1
  %210 = select i1 %209, i32 2, i32 %6
  switch i32 %210, label %218 [
    i32 -1, label %260
    i32 4, label %260
    i32 0, label %219
    i32 1, label %211
    i32 2, label %211
    i32 3, label %212
    i32 9, label %217
    i32 5, label %213
    i32 6, label %214
    i32 7, label %215
    i32 8, label %216
  ]

211:                                              ; preds = %208, %208
  br label %219

212:                                              ; preds = %208
  br label %219

213:                                              ; preds = %208
  br label %219

214:                                              ; preds = %208
  br label %219

215:                                              ; preds = %208
  br label %219

216:                                              ; preds = %208
  br label %219

217:                                              ; preds = %208
  br label %219

218:                                              ; preds = %208
  br label %219

219:                                              ; preds = %208, %211, %212, %213, %214, %215, %216, %217, %218
  %220 = phi i8* [ getelementptr inbounds ([8 x i8], [8 x i8]* @.str.14, i64 0, i64 0), %218 ], [ getelementptr inbounds ([6 x i8], [6 x i8]* @.str.76, i64 0, i64 0), %217 ], [ getelementptr inbounds ([8 x i8], [8 x i8]* @.str.75, i64 0, i64 0), %216 ], [ getelementptr inbounds ([8 x i8], [8 x i8]* @.str.74, i64 0, i64 0), %215 ], [ getelementptr inbounds ([8 x i8], [8 x i8]* @.str.73, i64 0, i64 0), %214 ], [ getelementptr inbounds ([7 x i8], [7 x i8]* @.str.72, i64 0, i64 0), %213 ], [ getelementptr inbounds ([7 x i8], [7 x i8]* @.str.70, i64 0, i64 0), %212 ], [ getelementptr inbounds ([7 x i8], [7 x i8]* @.str.69, i64 0, i64 0), %211 ], [ getelementptr inbounds ([5 x i8], [5 x i8]* @.str.68, i64 0, i64 0), %208 ]
  tail call void (%struct._FcConfigParse*, i32, i8*, ...) @FcConfigMessage(%struct._FcConfigParse* %0, i32 1, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.67, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.71, i64 0, i64 0), i8* nonnull %220) #9
  br label %260

221:                                              ; preds = %8, %8, %8, %8, %8, %8, %8
  %222 = getelementptr inbounds %struct._FcExpr, %struct._FcExpr* %9, i64 0, i32 1, i32 0, i32 0
  %223 = load %struct._FcExpr*, %struct._FcExpr** %222, align 8
  tail call fastcc void @FcTypecheckExpr(%struct._FcConfigParse* %0, %struct._FcExpr* %223, i32 %6)
  br label %224

224:                                              ; preds = %221, %200
  %225 = phi %struct._FcExpr* [ %9, %221 ], [ %207, %200 ]
  %226 = getelementptr inbounds %struct._FcExpr, %struct._FcExpr* %225, i64 0, i32 1, i32 0, i32 1
  %227 = load %struct._FcExpr*, %struct._FcExpr** %226, align 8
  %228 = icmp eq %struct._FcExpr* %227, null
  br i1 %228, label %260, label %8

229:                                              ; preds = %8
  %230 = icmp eq i32 %6, 1
  %231 = select i1 %230, i32 2, i32 %6
  switch i32 %231, label %239 [
    i32 -1, label %255
    i32 4, label %255
    i32 0, label %240
    i32 1, label %232
    i32 2, label %232
    i32 3, label %233
    i32 9, label %238
    i32 5, label %234
    i32 6, label %235
    i32 7, label %236
    i32 8, label %237
  ]

232:                                              ; preds = %229, %229
  br label %240

233:                                              ; preds = %229
  br label %240

234:                                              ; preds = %229
  br label %240

235:                                              ; preds = %229
  br label %240

236:                                              ; preds = %229
  br label %240

237:                                              ; preds = %229
  br label %240

238:                                              ; preds = %229
  br label %240

239:                                              ; preds = %229
  br label %240

240:                                              ; preds = %229, %232, %233, %234, %235, %236, %237, %238, %239
  %241 = phi i8* [ getelementptr inbounds ([8 x i8], [8 x i8]* @.str.14, i64 0, i64 0), %239 ], [ getelementptr inbounds ([6 x i8], [6 x i8]* @.str.76, i64 0, i64 0), %238 ], [ getelementptr inbounds ([8 x i8], [8 x i8]* @.str.75, i64 0, i64 0), %237 ], [ getelementptr inbounds ([8 x i8], [8 x i8]* @.str.74, i64 0, i64 0), %236 ], [ getelementptr inbounds ([8 x i8], [8 x i8]* @.str.73, i64 0, i64 0), %235 ], [ getelementptr inbounds ([7 x i8], [7 x i8]* @.str.72, i64 0, i64 0), %234 ], [ getelementptr inbounds ([7 x i8], [7 x i8]* @.str.70, i64 0, i64 0), %233 ], [ getelementptr inbounds ([7 x i8], [7 x i8]* @.str.69, i64 0, i64 0), %232 ], [ getelementptr inbounds ([5 x i8], [5 x i8]* @.str.68, i64 0, i64 0), %229 ]
  tail call void (%struct._FcConfigParse*, i32, i8*, ...) @FcConfigMessage(%struct._FcConfigParse* %0, i32 1, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.67, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.71, i64 0, i64 0), i8* nonnull %241) #9
  br label %255

242:                                              ; preds = %8, %8, %8, %8
  %243 = add i32 %6, -1
  %244 = icmp ult i32 %243, 2
  br i1 %244, label %255, label %245

245:                                              ; preds = %242
  switch i32 %6, label %252 [
    i32 -1, label %255
    i32 9, label %255
    i32 0, label %253
    i32 8, label %251
    i32 7, label %250
    i32 3, label %246
    i32 4, label %247
    i32 5, label %248
    i32 6, label %249
  ]

246:                                              ; preds = %245
  br label %253

247:                                              ; preds = %245
  br label %253

248:                                              ; preds = %245
  br label %253

249:                                              ; preds = %245
  br label %253

250:                                              ; preds = %245
  br label %253

251:                                              ; preds = %245
  br label %253

252:                                              ; preds = %245
  br label %253

253:                                              ; preds = %245, %246, %247, %248, %249, %250, %251, %252
  %254 = phi i8* [ getelementptr inbounds ([8 x i8], [8 x i8]* @.str.14, i64 0, i64 0), %252 ], [ getelementptr inbounds ([8 x i8], [8 x i8]* @.str.75, i64 0, i64 0), %251 ], [ getelementptr inbounds ([8 x i8], [8 x i8]* @.str.74, i64 0, i64 0), %250 ], [ getelementptr inbounds ([8 x i8], [8 x i8]* @.str.73, i64 0, i64 0), %249 ], [ getelementptr inbounds ([7 x i8], [7 x i8]* @.str.72, i64 0, i64 0), %248 ], [ getelementptr inbounds ([5 x i8], [5 x i8]* @.str.71, i64 0, i64 0), %247 ], [ getelementptr inbounds ([7 x i8], [7 x i8]* @.str.70, i64 0, i64 0), %246 ], [ getelementptr inbounds ([5 x i8], [5 x i8]* @.str.68, i64 0, i64 0), %245 ]
  tail call void (%struct._FcConfigParse*, i32, i8*, ...) @FcConfigMessage(%struct._FcConfigParse* %0, i32 1, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.67, i64 0, i64 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.69, i64 0, i64 0), i8* nonnull %254) #9
  br label %255

255:                                              ; preds = %253, %242, %245, %245, %240, %229, %229
  %256 = phi i32 [ 4, %229 ], [ 4, %229 ], [ 4, %240 ], [ 2, %245 ], [ 2, %245 ], [ 2, %242 ], [ 2, %253 ]
  %257 = getelementptr inbounds %struct._FcExpr, %struct._FcExpr* %9, i64 0, i32 1, i32 0, i32 0
  %258 = load %struct._FcExpr*, %struct._FcExpr** %257, align 8
  %259 = icmp eq %struct._FcExpr* %258, null
  br i1 %259, label %260, label %5

260:                                              ; preds = %255, %224, %8, %3, %208, %208, %89, %89, %77, %77, %77, %64, %64, %51, %51, %38, %38, %26, %26, %26, %16, %16, %219, %196, %175, %171, %167, %159, %146, %125, %121, %117, %109, %100, %87, %75, %62, %49, %36, %24, %13, %198, %154, %102
  ret void
}

declare hidden %struct._FcConstant* @IA__FcNameGetConstant(i8*) local_unnamed_addr #3

declare hidden i32 @FcConfigResetFontDirs(%struct._FcConfig*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define internal fastcc %struct._FcExpr* @FcPopBinary(%struct._FcConfigParse*, i32) unnamed_addr #0 {
  %3 = tail call fastcc %struct._FcExpr* @FcPopExpr(%struct._FcConfigParse* %0)
  %4 = icmp eq %struct._FcExpr* %3, null
  br i1 %4, label %24, label %5

5:                                                ; preds = %2
  %6 = getelementptr inbounds %struct._FcConfigParse, %struct._FcConfigParse* %0, i64 0, i32 4
  br label %7

7:                                                ; preds = %5, %20
  %8 = phi %struct._FcExpr* [ %3, %5 ], [ %22, %20 ]
  %9 = phi %struct._FcExpr* [ null, %5 ], [ %21, %20 ]
  %10 = icmp eq %struct._FcExpr* %9, null
  br i1 %10, label %20, label %11

11:                                               ; preds = %7
  %12 = load %struct._FcConfig*, %struct._FcConfig** %6, align 8
  %13 = tail call %struct._FcExpr* @FcConfigAllocExpr(%struct._FcConfig* %12) #9
  %14 = icmp eq %struct._FcExpr* %13, null
  br i1 %14, label %19, label %15

15:                                               ; preds = %11
  %16 = getelementptr inbounds %struct._FcExpr, %struct._FcExpr* %13, i64 0, i32 0
  store i32 %1, i32* %16, align 8
  %17 = getelementptr inbounds %struct._FcExpr, %struct._FcExpr* %13, i64 0, i32 1, i32 0, i32 0
  store %struct._FcExpr* %8, %struct._FcExpr** %17, align 8
  %18 = getelementptr inbounds %struct._FcExpr, %struct._FcExpr* %13, i64 0, i32 1, i32 0, i32 1
  store %struct._FcExpr* %9, %struct._FcExpr** %18, align 8
  br label %20

19:                                               ; preds = %11
  tail call void (%struct._FcConfigParse*, i32, i8*, ...) @FcConfigMessage(%struct._FcConfigParse* %0, i32 2, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.31, i64 0, i64 0))
  tail call fastcc void @FcExprDestroy(%struct._FcExpr* nonnull %8)
  tail call fastcc void @FcExprDestroy(%struct._FcExpr* nonnull %9)
  br label %24

20:                                               ; preds = %15, %7
  %21 = phi %struct._FcExpr* [ %13, %15 ], [ %8, %7 ]
  %22 = tail call fastcc %struct._FcExpr* @FcPopExpr(%struct._FcConfigParse* %0)
  %23 = icmp eq %struct._FcExpr* %22, null
  br i1 %23, label %24, label %7

24:                                               ; preds = %20, %2, %19
  %25 = phi %struct._FcExpr* [ null, %19 ], [ null, %2 ], [ %21, %20 ]
  ret %struct._FcExpr* %25
}

; Function Attrs: nounwind readonly ssp uwtable
define internal fastcc i32 @FcConfigLexOp(i8* nocapture readonly, %struct._FcOpMap* nocapture readonly) unnamed_addr #10 {
  %3 = getelementptr inbounds %struct._FcOpMap, %struct._FcOpMap* %1, i64 0, i32 0, i64 0
  %4 = tail call i32 @strcmp(i8* %0, i8* %3) #12
  %5 = icmp eq i32 %4, 0
  br i1 %5, label %10, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %struct._FcOpMap, %struct._FcOpMap* %1, i64 1, i32 0, i64 0
  %8 = tail call i32 @strcmp(i8* %0, i8* %7) #12
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %10, label %16

10:                                               ; preds = %36, %32, %28, %24, %20, %16, %6, %2
  %11 = phi i64 [ 0, %2 ], [ 1, %6 ], [ 2, %16 ], [ 3, %20 ], [ 4, %24 ], [ 5, %28 ], [ 6, %32 ], [ 7, %36 ]
  %12 = getelementptr inbounds %struct._FcOpMap, %struct._FcOpMap* %1, i64 %11, i32 1
  %13 = load i32, i32* %12, align 4
  br label %14

14:                                               ; preds = %36, %10
  %15 = phi i32 [ %13, %10 ], [ 41, %36 ]
  ret i32 %15

16:                                               ; preds = %6
  %17 = getelementptr inbounds %struct._FcOpMap, %struct._FcOpMap* %1, i64 2, i32 0, i64 0
  %18 = tail call i32 @strcmp(i8* %0, i8* %17) #12
  %19 = icmp eq i32 %18, 0
  br i1 %19, label %10, label %20

20:                                               ; preds = %16
  %21 = getelementptr inbounds %struct._FcOpMap, %struct._FcOpMap* %1, i64 3, i32 0, i64 0
  %22 = tail call i32 @strcmp(i8* %0, i8* %21) #12
  %23 = icmp eq i32 %22, 0
  br i1 %23, label %10, label %24

24:                                               ; preds = %20
  %25 = getelementptr inbounds %struct._FcOpMap, %struct._FcOpMap* %1, i64 4, i32 0, i64 0
  %26 = tail call i32 @strcmp(i8* %0, i8* %25) #12
  %27 = icmp eq i32 %26, 0
  br i1 %27, label %10, label %28

28:                                               ; preds = %24
  %29 = getelementptr inbounds %struct._FcOpMap, %struct._FcOpMap* %1, i64 5, i32 0, i64 0
  %30 = tail call i32 @strcmp(i8* %0, i8* %29) #12
  %31 = icmp eq i32 %30, 0
  br i1 %31, label %10, label %32

32:                                               ; preds = %28
  %33 = getelementptr inbounds %struct._FcOpMap, %struct._FcOpMap* %1, i64 6, i32 0, i64 0
  %34 = tail call i32 @strcmp(i8* %0, i8* %33) #12
  %35 = icmp eq i32 %34, 0
  br i1 %35, label %10, label %36

36:                                               ; preds = %32
  %37 = getelementptr inbounds %struct._FcOpMap, %struct._FcOpMap* %1, i64 7, i32 0, i64 0
  %38 = tail call i32 @strcmp(i8* %0, i8* %37) #12
  %39 = icmp eq i32 %38, 0
  br i1 %39, label %10, label %14
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc %struct._FcExpr* @FcPopExpr(%struct._FcConfigParse*) unnamed_addr #0 {
  %2 = getelementptr inbounds %struct._FcConfigParse, %struct._FcConfigParse* %0, i64 0, i32 1
  %3 = load %struct._FcVStack*, %struct._FcVStack** %2, align 8
  %4 = icmp eq %struct._FcVStack* %3, null
  br i1 %4, label %150, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %struct._FcVStack, %struct._FcVStack* %3, i64 0, i32 1
  %7 = load %struct._FcPStack*, %struct._FcPStack** %6, align 8
  %8 = getelementptr inbounds %struct._FcConfigParse, %struct._FcConfigParse* %0, i64 0, i32 0
  %9 = load %struct._FcPStack*, %struct._FcPStack** %8, align 8
  %10 = icmp eq %struct._FcPStack* %7, %9
  br i1 %10, label %11, label %150

11:                                               ; preds = %5
  %12 = getelementptr inbounds %struct._FcVStack, %struct._FcVStack* %3, i64 0, i32 2
  %13 = load i32, i32* %12, align 8
  switch i32 %13, label %148 [
    i32 18, label %144
    i32 1, label %14
    i32 2, label %14
    i32 5, label %26
    i32 3, label %38
    i32 16, label %131
    i32 7, label %50
    i32 8, label %50
    i32 9, label %50
    i32 10, label %54
    i32 11, label %66
    i32 12, label %78
    i32 13, label %93
    i32 14, label %106
    i32 15, label %118
  ]

14:                                               ; preds = %11, %11
  %15 = getelementptr inbounds %struct._FcConfigParse, %struct._FcConfigParse* %0, i64 0, i32 4
  %16 = load %struct._FcConfig*, %struct._FcConfig** %15, align 8
  %17 = getelementptr inbounds %struct._FcVStack, %struct._FcVStack* %3, i64 0, i32 3, i32 0
  %18 = load i8*, i8** %17, align 8
  %19 = tail call %struct._FcExpr* @FcConfigAllocExpr(%struct._FcConfig* %16) #9
  %20 = icmp eq %struct._FcExpr* %19, null
  br i1 %20, label %148, label %21

21:                                               ; preds = %14
  %22 = getelementptr inbounds %struct._FcExpr, %struct._FcExpr* %19, i64 0, i32 0
  store i32 2, i32* %22, align 8
  %23 = tail call noalias i8* @strdup(i8* %18) #9
  %24 = getelementptr inbounds %struct._FcExpr, %struct._FcExpr* %19, i64 0, i32 1
  %25 = bitcast %union.anon* %24 to i8**
  store i8* %23, i8** %25, align 8
  br label %148

26:                                               ; preds = %11
  %27 = getelementptr inbounds %struct._FcConfigParse, %struct._FcConfigParse* %0, i64 0, i32 4
  %28 = load %struct._FcConfig*, %struct._FcConfig** %27, align 8
  %29 = getelementptr inbounds %struct._FcVStack, %struct._FcVStack* %3, i64 0, i32 3
  %30 = bitcast %union.anon.1* %29 to i64*
  %31 = load i64, i64* %30, align 8
  %32 = tail call %struct._FcExpr* @FcConfigAllocExpr(%struct._FcConfig* %28) #9
  %33 = icmp eq %struct._FcExpr* %32, null
  br i1 %33, label %148, label %34

34:                                               ; preds = %26
  %35 = getelementptr inbounds %struct._FcExpr, %struct._FcExpr* %32, i64 0, i32 0
  store i32 9, i32* %35, align 8
  %36 = getelementptr inbounds %struct._FcExpr, %struct._FcExpr* %32, i64 0, i32 1
  %37 = bitcast %union.anon* %36 to i64*
  store i64 %31, i64* %37, align 8
  br label %148

38:                                               ; preds = %11
  %39 = getelementptr inbounds %struct._FcConfigParse, %struct._FcConfigParse* %0, i64 0, i32 4
  %40 = load %struct._FcConfig*, %struct._FcConfig** %39, align 8
  %41 = getelementptr inbounds %struct._FcVStack, %struct._FcVStack* %3, i64 0, i32 3, i32 0
  %42 = load i8*, i8** %41, align 8
  %43 = tail call %struct._FcExpr* @FcConfigAllocExpr(%struct._FcConfig* %40) #9
  %44 = icmp eq %struct._FcExpr* %43, null
  br i1 %44, label %148, label %45

45:                                               ; preds = %38
  %46 = getelementptr inbounds %struct._FcExpr, %struct._FcExpr* %43, i64 0, i32 0
  store i32 10, i32* %46, align 8
  %47 = tail call noalias i8* @strdup(i8* %42) #9
  %48 = getelementptr inbounds %struct._FcExpr, %struct._FcExpr* %43, i64 0, i32 1
  %49 = bitcast %union.anon* %48 to i8**
  store i8* %47, i8** %49, align 8
  br label %148

50:                                               ; preds = %11, %11, %11
  %51 = getelementptr inbounds %struct._FcVStack, %struct._FcVStack* %3, i64 0, i32 3
  %52 = bitcast %union.anon.1* %51 to %struct._FcExpr**
  %53 = load %struct._FcExpr*, %struct._FcExpr** %52, align 8
  store i32 0, i32* %12, align 8
  br label %148

54:                                               ; preds = %11
  %55 = getelementptr inbounds %struct._FcConfigParse, %struct._FcConfigParse* %0, i64 0, i32 4
  %56 = load %struct._FcConfig*, %struct._FcConfig** %55, align 8
  %57 = getelementptr inbounds %struct._FcVStack, %struct._FcVStack* %3, i64 0, i32 3
  %58 = bitcast %union.anon.1* %57 to i32*
  %59 = load i32, i32* %58, align 8
  %60 = tail call %struct._FcExpr* @FcConfigAllocExpr(%struct._FcConfig* %56) #9
  %61 = icmp eq %struct._FcExpr* %60, null
  br i1 %61, label %148, label %62

62:                                               ; preds = %54
  %63 = getelementptr inbounds %struct._FcExpr, %struct._FcExpr* %60, i64 0, i32 0
  store i32 0, i32* %63, align 8
  %64 = getelementptr inbounds %struct._FcExpr, %struct._FcExpr* %60, i64 0, i32 1
  %65 = bitcast %union.anon* %64 to i32*
  store i32 %59, i32* %65, align 8
  br label %148

66:                                               ; preds = %11
  %67 = getelementptr inbounds %struct._FcConfigParse, %struct._FcConfigParse* %0, i64 0, i32 4
  %68 = load %struct._FcConfig*, %struct._FcConfig** %67, align 8
  %69 = getelementptr inbounds %struct._FcVStack, %struct._FcVStack* %3, i64 0, i32 3
  %70 = bitcast %union.anon.1* %69 to i64*
  %71 = load i64, i64* %70, align 8
  %72 = tail call %struct._FcExpr* @FcConfigAllocExpr(%struct._FcConfig* %68) #9
  %73 = icmp eq %struct._FcExpr* %72, null
  br i1 %73, label %148, label %74

74:                                               ; preds = %66
  %75 = getelementptr inbounds %struct._FcExpr, %struct._FcExpr* %72, i64 0, i32 0
  store i32 1, i32* %75, align 8
  %76 = getelementptr inbounds %struct._FcExpr, %struct._FcExpr* %72, i64 0, i32 1
  %77 = bitcast %union.anon* %76 to i64*
  store i64 %71, i64* %77, align 8
  br label %148

78:                                               ; preds = %11
  %79 = getelementptr inbounds %struct._FcConfigParse, %struct._FcConfigParse* %0, i64 0, i32 4
  %80 = load %struct._FcConfig*, %struct._FcConfig** %79, align 8
  %81 = getelementptr inbounds %struct._FcVStack, %struct._FcVStack* %3, i64 0, i32 3, i32 0
  %82 = load i8*, i8** %81, align 8
  %83 = tail call %struct._FcExpr* @FcConfigAllocExpr(%struct._FcConfig* %80) #9
  %84 = icmp eq %struct._FcExpr* %83, null
  br i1 %84, label %148, label %85

85:                                               ; preds = %78
  %86 = getelementptr inbounds %struct._FcExpr, %struct._FcExpr* %83, i64 0, i32 0
  store i32 3, i32* %86, align 8
  %87 = tail call noalias i8* @malloc(i64 32) #9
  %88 = icmp eq i8* %87, null
  br i1 %88, label %90, label %89

89:                                               ; preds = %85
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %87, i8* align 8 %82, i64 32, i1 false) #9
  br label %90

90:                                               ; preds = %89, %85
  %91 = getelementptr inbounds %struct._FcExpr, %struct._FcExpr* %83, i64 0, i32 1
  %92 = bitcast %union.anon* %91 to i8**
  store i8* %87, i8** %92, align 8
  br label %148

93:                                               ; preds = %11
  %94 = getelementptr inbounds %struct._FcConfigParse, %struct._FcConfigParse* %0, i64 0, i32 4
  %95 = load %struct._FcConfig*, %struct._FcConfig** %94, align 8
  %96 = getelementptr inbounds %struct._FcVStack, %struct._FcVStack* %3, i64 0, i32 3
  %97 = bitcast %union.anon.1* %96 to %struct._FcRange**
  %98 = load %struct._FcRange*, %struct._FcRange** %97, align 8
  %99 = tail call %struct._FcExpr* @FcConfigAllocExpr(%struct._FcConfig* %95) #9
  %100 = icmp eq %struct._FcExpr* %99, null
  br i1 %100, label %148, label %101

101:                                              ; preds = %93
  %102 = getelementptr inbounds %struct._FcExpr, %struct._FcExpr* %99, i64 0, i32 0
  store i32 4, i32* %102, align 8
  %103 = tail call %struct._FcRange* @IA__FcRangeCopy(%struct._FcRange* %98) #9
  %104 = getelementptr inbounds %struct._FcExpr, %struct._FcExpr* %99, i64 0, i32 1
  %105 = bitcast %union.anon* %104 to %struct._FcRange**
  store %struct._FcRange* %103, %struct._FcRange** %105, align 8
  br label %148

106:                                              ; preds = %11
  %107 = getelementptr inbounds %struct._FcConfigParse, %struct._FcConfigParse* %0, i64 0, i32 4
  %108 = load %struct._FcConfig*, %struct._FcConfig** %107, align 8
  %109 = getelementptr inbounds %struct._FcVStack, %struct._FcVStack* %3, i64 0, i32 3
  %110 = bitcast %union.anon.1* %109 to i32*
  %111 = load i32, i32* %110, align 8
  %112 = tail call %struct._FcExpr* @FcConfigAllocExpr(%struct._FcConfig* %108) #9
  %113 = icmp eq %struct._FcExpr* %112, null
  br i1 %113, label %148, label %114

114:                                              ; preds = %106
  %115 = getelementptr inbounds %struct._FcExpr, %struct._FcExpr* %112, i64 0, i32 0
  store i32 5, i32* %115, align 8
  %116 = getelementptr inbounds %struct._FcExpr, %struct._FcExpr* %112, i64 0, i32 1
  %117 = bitcast %union.anon* %116 to i32*
  store i32 %111, i32* %117, align 8
  br label %148

118:                                              ; preds = %11
  %119 = getelementptr inbounds %struct._FcConfigParse, %struct._FcConfigParse* %0, i64 0, i32 4
  %120 = load %struct._FcConfig*, %struct._FcConfig** %119, align 8
  %121 = getelementptr inbounds %struct._FcVStack, %struct._FcVStack* %3, i64 0, i32 3
  %122 = bitcast %union.anon.1* %121 to %struct._FcCharSet**
  %123 = load %struct._FcCharSet*, %struct._FcCharSet** %122, align 8
  %124 = tail call %struct._FcExpr* @FcConfigAllocExpr(%struct._FcConfig* %120) #9
  %125 = icmp eq %struct._FcExpr* %124, null
  br i1 %125, label %148, label %126

126:                                              ; preds = %118
  %127 = getelementptr inbounds %struct._FcExpr, %struct._FcExpr* %124, i64 0, i32 0
  store i32 6, i32* %127, align 8
  %128 = tail call %struct._FcCharSet* @IA__FcCharSetCopy(%struct._FcCharSet* %123) #9
  %129 = getelementptr inbounds %struct._FcExpr, %struct._FcExpr* %124, i64 0, i32 1
  %130 = bitcast %union.anon* %129 to %struct._FcCharSet**
  store %struct._FcCharSet* %128, %struct._FcCharSet** %130, align 8
  br label %148

131:                                              ; preds = %11
  %132 = getelementptr inbounds %struct._FcConfigParse, %struct._FcConfigParse* %0, i64 0, i32 4
  %133 = load %struct._FcConfig*, %struct._FcConfig** %132, align 8
  %134 = getelementptr inbounds %struct._FcVStack, %struct._FcVStack* %3, i64 0, i32 3
  %135 = bitcast %union.anon.1* %134 to %struct._FcLangSet**
  %136 = load %struct._FcLangSet*, %struct._FcLangSet** %135, align 8
  %137 = tail call %struct._FcExpr* @FcConfigAllocExpr(%struct._FcConfig* %133) #9
  %138 = icmp eq %struct._FcExpr* %137, null
  br i1 %138, label %148, label %139

139:                                              ; preds = %131
  %140 = getelementptr inbounds %struct._FcExpr, %struct._FcExpr* %137, i64 0, i32 0
  store i32 7, i32* %140, align 8
  %141 = tail call %struct._FcLangSet* @IA__FcLangSetCopy(%struct._FcLangSet* %136) #9
  %142 = getelementptr inbounds %struct._FcExpr, %struct._FcExpr* %137, i64 0, i32 1
  %143 = bitcast %union.anon* %142 to %struct._FcLangSet**
  store %struct._FcLangSet* %141, %struct._FcLangSet** %143, align 8
  br label %148

144:                                              ; preds = %11
  %145 = getelementptr inbounds %struct._FcVStack, %struct._FcVStack* %3, i64 0, i32 3
  %146 = bitcast %union.anon.1* %145 to %struct._FcExpr**
  %147 = load %struct._FcExpr*, %struct._FcExpr** %146, align 8
  store i32 0, i32* %12, align 8
  br label %148

148:                                              ; preds = %139, %131, %126, %118, %114, %106, %101, %93, %90, %78, %74, %66, %62, %54, %45, %38, %34, %26, %21, %14, %11, %144, %50
  %149 = phi %struct._FcExpr* [ null, %11 ], [ %53, %50 ], [ %147, %144 ], [ null, %14 ], [ %19, %21 ], [ null, %26 ], [ %32, %34 ], [ null, %38 ], [ %43, %45 ], [ null, %54 ], [ %60, %62 ], [ null, %66 ], [ %72, %74 ], [ null, %78 ], [ %83, %90 ], [ null, %93 ], [ %99, %101 ], [ null, %106 ], [ %112, %114 ], [ null, %118 ], [ %124, %126 ], [ null, %131 ], [ %137, %139 ]
  tail call fastcc void @FcVStackPopAndDestroy(%struct._FcConfigParse* %0)
  br label %150

150:                                              ; preds = %5, %1, %148
  %151 = phi %struct._FcExpr* [ %149, %148 ], [ null, %1 ], [ null, %5 ]
  ret %struct._FcExpr* %151
}

declare hidden %struct._FcRange* @IA__FcRangeCopy(%struct._FcRange*) local_unnamed_addr #3

declare hidden %struct._FcCharSet* @IA__FcCharSetCopy(%struct._FcCharSet*) local_unnamed_addr #3

declare hidden %struct._FcLangSet* @IA__FcLangSetCopy(%struct._FcLangSet*) local_unnamed_addr #3

; Function Attrs: nofree nounwind
declare i64 @strtol(i8* readonly, i8** nocapture, i32) local_unnamed_addr #6

; Function Attrs: nounwind
declare %struct.lconv* @localeconv() local_unnamed_addr #1

; Function Attrs: nofree nounwind readonly
declare i8* @strchr(i8*, i32) local_unnamed_addr #8

; Function Attrs: nofree nounwind
declare i8* @strncpy(i8* returned, i8* nocapture readonly, i64) local_unnamed_addr #6

; Function Attrs: nofree nounwind
declare double @strtod(i8* readonly, i8** nocapture) local_unnamed_addr #6

declare hidden %struct._FcRange* @IA__FcRangeCreateDouble(double, double) local_unnamed_addr #3

declare hidden %struct._FcRange* @IA__FcRangeCreateInteger(i32, i32) local_unnamed_addr #3

declare hidden %struct._FcCharSet* @IA__FcCharSetCreate() local_unnamed_addr #3

declare hidden i32 @IA__FcCharSetAddChar(%struct._FcCharSet*, i32) local_unnamed_addr #3

declare hidden %struct._FcLangSet* @IA__FcLangSetCreate() local_unnamed_addr #3

declare hidden i32 @IA__FcLangSetAdd(%struct._FcLangSet*, i8*) local_unnamed_addr #3

declare hidden i32 @FcConfigGlobAdd(%struct._FcConfig*, i8*, i32) local_unnamed_addr #3

declare hidden i32 @FcConfigPatternsAdd(%struct._FcConfig*, %struct._FcPattern*, i32) local_unnamed_addr #3

declare hidden %struct._FcPattern* @IA__FcPatternCreate() local_unnamed_addr #3

declare hidden i32 @FcPatternAppend(%struct._FcPattern*, %struct._FcPattern*) local_unnamed_addr #3

declare hidden i32 @IA__FcPatternAdd(%struct._FcPattern*, i8*, i32, i8*, i32) local_unnamed_addr #3

declare hidden void @IA__FcValueDestroy(i32, i8*) local_unnamed_addr #3

declare hidden i32 @IA__FcNameConstant(i8*, i32*) local_unnamed_addr #3

; Function Attrs: nofree nounwind
declare i32 @fputc(i32, %struct._IO_FILE* nocapture) local_unnamed_addr #11

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind }
attributes #3 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind readnone "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { argmemonly nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nounwind }
attributes #10 = { nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #11 = { nofree nounwind }
attributes #12 = { nounwind readonly }
attributes #13 = { nounwind readnone }
attributes #14 = { cold }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
