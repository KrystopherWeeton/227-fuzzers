; ModuleID = '../../third_party/blink/renderer/modules/cache_storage/inspector_cache_storage_agent.cc'
source_filename = "../../third_party/blink/renderer/modules/cache_storage/inspector_cache_storage_agent.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"struct.base::trace_event::TraceCategory" = type { i8, i32, i8* }
%"class.WTF::StringImpl" = type { i32, i32, %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.216" }
%"struct.std::__1::__atomic_base.216" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.WTF::String" = type { %class.scoped_refptr }
%class.scoped_refptr = type { %"class.WTF::StringImpl"* }
%"class.blink::HTTPHeaderMap" = type { %"class.WTF::HashMap.2279" }
%"class.WTF::HashMap.2279" = type { %"class.WTF::HashTable.2280" }
%"class.WTF::HashTable.2280" = type <{ %"struct.WTF::KeyValuePair.2283"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.2283" = type { %"class.WTF::AtomicString", %"class.WTF::AtomicString" }
%"class.WTF::AtomicString" = type { %"class.WTF::String" }
%"class.blink::AtomicEntryFlag" = type { %"struct.std::__1::atomic.245" }
%"struct.std::__1::atomic.245" = type { %"struct.std::__1::__atomic_base.246" }
%"struct.std::__1::__atomic_base.246" = type { %"struct.std::__1::__atomic_base.247" }
%"struct.std::__1::__atomic_base.247" = type { %"struct.std::__1::__cxx_atomic_impl.248" }
%"struct.std::__1::__cxx_atomic_impl.248" = type { %"struct.std::__1::__cxx_atomic_base_impl.249" }
%"struct.std::__1::__cxx_atomic_base_impl.249" = type { i32 }
%"class.blink::InspectorCacheStorageAgent" = type { %"class.blink::InspectorBaseAgent", %"class.blink::Member.233", %"class.WTF::HashMap.239" }
%"class.blink::InspectorBaseAgent" = type { %"class.blink::InspectorAgent", %"class.blink::protocol::CacheStorage::Backend", %"class.blink::Member", %"class.blink::InspectorAgentState", %"class.std::__1::unique_ptr.227" }
%"class.blink::InspectorAgent" = type { i32 (...)** }
%"class.blink::protocol::CacheStorage::Backend" = type { i32 (...)** }
%"class.blink::Member" = type { %"class.blink::MemberBase" }
%"class.blink::MemberBase" = type { %"class.blink::CoreProbeSink"* }
%"class.blink::CoreProbeSink" = type { %"class.blink::HeapListHashSet", %"class.blink::HeapListHashSet.7", %"class.blink::HeapListHashSet.18", %"class.blink::HeapListHashSet.29", %"class.blink::HeapListHashSet.40", %"class.blink::HeapListHashSet.51", %"class.blink::HeapListHashSet.62", %"class.blink::HeapListHashSet.73", %"class.blink::HeapListHashSet.84", %"class.blink::HeapListHashSet.95", %"class.blink::HeapListHashSet.106", %"class.blink::HeapListHashSet.117", %"class.blink::HeapListHashSet.128", %"class.blink::HeapListHashSet.139", %"class.blink::HeapListHashSet.150", %"class.blink::HeapListHashSet.161", %"class.blink::HeapListHashSet.172", %"class.blink::HeapListHashSet.183", %"class.blink::HeapListHashSet.194", %"class.blink::HeapListHashSet.205" }
%"class.blink::HeapListHashSet" = type { %"class.WTF::ListHashSet.base", [7 x i8] }
%"class.WTF::ListHashSet.base" = type <{ %"class.WTF::HashTable", %"class.blink::Member.5", %"class.blink::Member.5", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable" = type <{ %"class.blink::Member.5"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.5" = type { %"class.blink::MemberBase.6" }
%"class.blink::MemberBase.6" = type { %"class.blink::HeapListHashSetNode"* }
%"class.blink::HeapListHashSetNode" = type { %"class.blink::Member.592", %"class.blink::Member.5", %"class.blink::Member.5" }
%"class.blink::Member.592" = type { %"class.blink::MemberBase.593" }
%"class.blink::MemberBase.593" = type { %"class.blink::AdTracker"* }
%"class.blink::AdTracker" = type opaque
%"struct.blink::HeapListHashSetAllocator::AllocatorProvider" = type { i8 }
%"class.blink::HeapListHashSet.7" = type { %"class.WTF::ListHashSet.base.17", [7 x i8] }
%"class.WTF::ListHashSet.base.17" = type <{ %"class.WTF::HashTable.12", %"class.blink::Member.14", %"class.blink::Member.14", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.12" = type <{ %"class.blink::Member.14"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.14" = type { %"class.blink::MemberBase.15" }
%"class.blink::MemberBase.15" = type { %"class.blink::HeapListHashSetNode.16"* }
%"class.blink::HeapListHashSetNode.16" = type { %"class.blink::Member.1900", %"class.blink::Member.14", %"class.blink::Member.14" }
%"class.blink::Member.1900" = type { %"class.blink::MemberBase.1901" }
%"class.blink::MemberBase.1901" = type { %"class.blink::DevToolsSession"* }
%"class.blink::DevToolsSession" = type opaque
%"class.blink::HeapListHashSet.18" = type { %"class.WTF::ListHashSet.base.28", [7 x i8] }
%"class.WTF::ListHashSet.base.28" = type <{ %"class.WTF::HashTable.23", %"class.blink::Member.25", %"class.blink::Member.25", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.23" = type <{ %"class.blink::Member.25"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.25" = type { %"class.blink::MemberBase.26" }
%"class.blink::MemberBase.26" = type { %"class.blink::HeapListHashSetNode.27"* }
%"class.blink::HeapListHashSetNode.27" = type { %"class.blink::Member.1896", %"class.blink::Member.25", %"class.blink::Member.25" }
%"class.blink::Member.1896" = type { %"class.blink::MemberBase.1897" }
%"class.blink::MemberBase.1897" = type { %"class.blink::InspectorAnimationAgent"* }
%"class.blink::InspectorAnimationAgent" = type opaque
%"class.blink::HeapListHashSet.29" = type { %"class.WTF::ListHashSet.base.39", [7 x i8] }
%"class.WTF::ListHashSet.base.39" = type <{ %"class.WTF::HashTable.34", %"class.blink::Member.36", %"class.blink::Member.36", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.34" = type <{ %"class.blink::Member.36"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.36" = type { %"class.blink::MemberBase.37" }
%"class.blink::MemberBase.37" = type { %"class.blink::HeapListHashSetNode.38"* }
%"class.blink::HeapListHashSetNode.38" = type { %"class.blink::Member.1892", %"class.blink::Member.36", %"class.blink::Member.36" }
%"class.blink::Member.1892" = type { %"class.blink::MemberBase.1893" }
%"class.blink::MemberBase.1893" = type { %"class.blink::InspectorApplicationCacheAgent"* }
%"class.blink::InspectorApplicationCacheAgent" = type opaque
%"class.blink::HeapListHashSet.40" = type { %"class.WTF::ListHashSet.base.50", [7 x i8] }
%"class.WTF::ListHashSet.base.50" = type <{ %"class.WTF::HashTable.45", %"class.blink::Member.47", %"class.blink::Member.47", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.45" = type <{ %"class.blink::Member.47"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.47" = type { %"class.blink::MemberBase.48" }
%"class.blink::MemberBase.48" = type { %"class.blink::HeapListHashSetNode.49"* }
%"class.blink::HeapListHashSetNode.49" = type { %"class.blink::Member.1888", %"class.blink::Member.47", %"class.blink::Member.47" }
%"class.blink::Member.1888" = type { %"class.blink::MemberBase.1889" }
%"class.blink::MemberBase.1889" = type { %"class.blink::InspectorAuditsAgent"* }
%"class.blink::InspectorAuditsAgent" = type opaque
%"class.blink::HeapListHashSet.51" = type { %"class.WTF::ListHashSet.base.61", [7 x i8] }
%"class.WTF::ListHashSet.base.61" = type <{ %"class.WTF::HashTable.56", %"class.blink::Member.58", %"class.blink::Member.58", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.56" = type <{ %"class.blink::Member.58"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.58" = type { %"class.blink::MemberBase.59" }
%"class.blink::MemberBase.59" = type { %"class.blink::HeapListHashSetNode.60"* }
%"class.blink::HeapListHashSetNode.60" = type { %"class.blink::Member.1884", %"class.blink::Member.58", %"class.blink::Member.58" }
%"class.blink::Member.1884" = type { %"class.blink::MemberBase.1885" }
%"class.blink::MemberBase.1885" = type { %"class.blink::InspectorCSSAgent"* }
%"class.blink::InspectorCSSAgent" = type opaque
%"class.blink::HeapListHashSet.62" = type { %"class.WTF::ListHashSet.base.72", [7 x i8] }
%"class.WTF::ListHashSet.base.72" = type <{ %"class.WTF::HashTable.67", %"class.blink::Member.69", %"class.blink::Member.69", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.67" = type <{ %"class.blink::Member.69"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.69" = type { %"class.blink::MemberBase.70" }
%"class.blink::MemberBase.70" = type { %"class.blink::HeapListHashSetNode.71"* }
%"class.blink::HeapListHashSetNode.71" = type { %"class.blink::Member.1880", %"class.blink::Member.69", %"class.blink::Member.69" }
%"class.blink::Member.1880" = type { %"class.blink::MemberBase.1881" }
%"class.blink::MemberBase.1881" = type { %"class.blink::InspectorDOMAgent"* }
%"class.blink::InspectorDOMAgent" = type opaque
%"class.blink::HeapListHashSet.73" = type { %"class.WTF::ListHashSet.base.83", [7 x i8] }
%"class.WTF::ListHashSet.base.83" = type <{ %"class.WTF::HashTable.78", %"class.blink::Member.80", %"class.blink::Member.80", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.78" = type <{ %"class.blink::Member.80"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.80" = type { %"class.blink::MemberBase.81" }
%"class.blink::MemberBase.81" = type { %"class.blink::HeapListHashSetNode.82"* }
%"class.blink::HeapListHashSetNode.82" = type { %"class.blink::Member.1876", %"class.blink::Member.80", %"class.blink::Member.80" }
%"class.blink::Member.1876" = type { %"class.blink::MemberBase.1877" }
%"class.blink::MemberBase.1877" = type { %"class.blink::InspectorDOMDebuggerAgent"* }
%"class.blink::InspectorDOMDebuggerAgent" = type opaque
%"class.blink::HeapListHashSet.84" = type { %"class.WTF::ListHashSet.base.94", [7 x i8] }
%"class.WTF::ListHashSet.base.94" = type <{ %"class.WTF::HashTable.89", %"class.blink::Member.91", %"class.blink::Member.91", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.89" = type <{ %"class.blink::Member.91"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.91" = type { %"class.blink::MemberBase.92" }
%"class.blink::MemberBase.92" = type { %"class.blink::HeapListHashSetNode.93"* }
%"class.blink::HeapListHashSetNode.93" = type { %"class.blink::Member.1872", %"class.blink::Member.91", %"class.blink::Member.91" }
%"class.blink::Member.1872" = type { %"class.blink::MemberBase.1873" }
%"class.blink::MemberBase.1873" = type { %"class.blink::InspectorDOMSnapshotAgent"* }
%"class.blink::InspectorDOMSnapshotAgent" = type opaque
%"class.blink::HeapListHashSet.95" = type { %"class.WTF::ListHashSet.base.105", [7 x i8] }
%"class.WTF::ListHashSet.base.105" = type <{ %"class.WTF::HashTable.100", %"class.blink::Member.102", %"class.blink::Member.102", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.100" = type <{ %"class.blink::Member.102"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.102" = type { %"class.blink::MemberBase.103" }
%"class.blink::MemberBase.103" = type { %"class.blink::HeapListHashSetNode.104"* }
%"class.blink::HeapListHashSetNode.104" = type { %"class.blink::Member.1868", %"class.blink::Member.102", %"class.blink::Member.102" }
%"class.blink::Member.1868" = type { %"class.blink::MemberBase.1869" }
%"class.blink::MemberBase.1869" = type { %"class.blink::InspectorEmulationAgent"* }
%"class.blink::InspectorEmulationAgent" = type opaque
%"class.blink::HeapListHashSet.106" = type { %"class.WTF::ListHashSet.base.116", [7 x i8] }
%"class.WTF::ListHashSet.base.116" = type <{ %"class.WTF::HashTable.111", %"class.blink::Member.113", %"class.blink::Member.113", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.111" = type <{ %"class.blink::Member.113"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.113" = type { %"class.blink::MemberBase.114" }
%"class.blink::MemberBase.114" = type { %"class.blink::HeapListHashSetNode.115"* }
%"class.blink::HeapListHashSetNode.115" = type { %"class.blink::Member.596", %"class.blink::Member.113", %"class.blink::Member.113" }
%"class.blink::Member.596" = type { %"class.blink::MemberBase.597" }
%"class.blink::MemberBase.597" = type { %"class.blink::InspectorIssueReporter"* }
%"class.blink::InspectorIssueReporter" = type opaque
%"class.blink::HeapListHashSet.117" = type { %"class.WTF::ListHashSet.base.127", [7 x i8] }
%"class.WTF::ListHashSet.base.127" = type <{ %"class.WTF::HashTable.122", %"class.blink::Member.124", %"class.blink::Member.124", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.122" = type <{ %"class.blink::Member.124"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.124" = type { %"class.blink::MemberBase.125" }
%"class.blink::MemberBase.125" = type { %"class.blink::HeapListHashSetNode.126"* }
%"class.blink::HeapListHashSetNode.126" = type { %"class.blink::Member.1862", %"class.blink::Member.124", %"class.blink::Member.124" }
%"class.blink::Member.1862" = type { %"class.blink::MemberBase.1863" }
%"class.blink::MemberBase.1863" = type { %"class.blink::InspectorLayerTreeAgent"* }
%"class.blink::InspectorLayerTreeAgent" = type opaque
%"class.blink::HeapListHashSet.128" = type { %"class.WTF::ListHashSet.base.138", [7 x i8] }
%"class.WTF::ListHashSet.base.138" = type <{ %"class.WTF::HashTable.133", %"class.blink::Member.135", %"class.blink::Member.135", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.133" = type <{ %"class.blink::Member.135"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.135" = type { %"class.blink::MemberBase.136" }
%"class.blink::MemberBase.136" = type { %"class.blink::HeapListHashSetNode.137"* }
%"class.blink::HeapListHashSetNode.137" = type { %"class.blink::Member.1858", %"class.blink::Member.135", %"class.blink::Member.135" }
%"class.blink::Member.1858" = type { %"class.blink::MemberBase.1859" }
%"class.blink::MemberBase.1859" = type { %"class.blink::InspectorLogAgent"* }
%"class.blink::InspectorLogAgent" = type opaque
%"class.blink::HeapListHashSet.139" = type { %"class.WTF::ListHashSet.base.149", [7 x i8] }
%"class.WTF::ListHashSet.base.149" = type <{ %"class.WTF::HashTable.144", %"class.blink::Member.146", %"class.blink::Member.146", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.144" = type <{ %"class.blink::Member.146"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.146" = type { %"class.blink::MemberBase.147" }
%"class.blink::MemberBase.147" = type { %"class.blink::HeapListHashSetNode.148"* }
%"class.blink::HeapListHashSetNode.148" = type { %"class.blink::Member.1854", %"class.blink::Member.146", %"class.blink::Member.146" }
%"class.blink::Member.1854" = type { %"class.blink::MemberBase.1855" }
%"class.blink::MemberBase.1855" = type { %"class.blink::InspectorMediaAgent"* }
%"class.blink::InspectorMediaAgent" = type opaque
%"class.blink::HeapListHashSet.150" = type { %"class.WTF::ListHashSet.base.160", [7 x i8] }
%"class.WTF::ListHashSet.base.160" = type <{ %"class.WTF::HashTable.155", %"class.blink::Member.157", %"class.blink::Member.157", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.155" = type <{ %"class.blink::Member.157"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.157" = type { %"class.blink::MemberBase.158" }
%"class.blink::MemberBase.158" = type { %"class.blink::HeapListHashSetNode.159"* }
%"class.blink::HeapListHashSetNode.159" = type { %"class.blink::Member.1850", %"class.blink::Member.157", %"class.blink::Member.157" }
%"class.blink::Member.1850" = type { %"class.blink::MemberBase.1851" }
%"class.blink::MemberBase.1851" = type { %"class.blink::InspectorNetworkAgent"* }
%"class.blink::InspectorNetworkAgent" = type opaque
%"class.blink::HeapListHashSet.161" = type { %"class.WTF::ListHashSet.base.171", [7 x i8] }
%"class.WTF::ListHashSet.base.171" = type <{ %"class.WTF::HashTable.166", %"class.blink::Member.168", %"class.blink::Member.168", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.166" = type <{ %"class.blink::Member.168"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.168" = type { %"class.blink::MemberBase.169" }
%"class.blink::MemberBase.169" = type { %"class.blink::HeapListHashSetNode.170"* }
%"class.blink::HeapListHashSetNode.170" = type { %"class.blink::Member.1846", %"class.blink::Member.168", %"class.blink::Member.168" }
%"class.blink::Member.1846" = type { %"class.blink::MemberBase.1847" }
%"class.blink::MemberBase.1847" = type { %"class.blink::InspectorPageAgent"* }
%"class.blink::InspectorPageAgent" = type opaque
%"class.blink::HeapListHashSet.172" = type { %"class.WTF::ListHashSet.base.182", [7 x i8] }
%"class.WTF::ListHashSet.base.182" = type <{ %"class.WTF::HashTable.177", %"class.blink::Member.179", %"class.blink::Member.179", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.177" = type <{ %"class.blink::Member.179"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.179" = type { %"class.blink::MemberBase.180" }
%"class.blink::MemberBase.180" = type { %"class.blink::HeapListHashSetNode.181"* }
%"class.blink::HeapListHashSetNode.181" = type { %"class.blink::Member.1842", %"class.blink::Member.179", %"class.blink::Member.179" }
%"class.blink::Member.1842" = type { %"class.blink::MemberBase.1843" }
%"class.blink::MemberBase.1843" = type { %"class.blink::InspectorPerformanceAgent"* }
%"class.blink::InspectorPerformanceAgent" = type opaque
%"class.blink::HeapListHashSet.183" = type { %"class.WTF::ListHashSet.base.193", [7 x i8] }
%"class.WTF::ListHashSet.base.193" = type <{ %"class.WTF::HashTable.188", %"class.blink::Member.190", %"class.blink::Member.190", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.188" = type <{ %"class.blink::Member.190"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.190" = type { %"class.blink::MemberBase.191" }
%"class.blink::MemberBase.191" = type { %"class.blink::HeapListHashSetNode.192"* }
%"class.blink::HeapListHashSetNode.192" = type { %"class.blink::Member.1838", %"class.blink::Member.190", %"class.blink::Member.190" }
%"class.blink::Member.1838" = type { %"class.blink::MemberBase.1839" }
%"class.blink::MemberBase.1839" = type { %"class.blink::InspectorPerformanceTimelineAgent"* }
%"class.blink::InspectorPerformanceTimelineAgent" = type opaque
%"class.blink::HeapListHashSet.194" = type { %"class.WTF::ListHashSet.base.204", [7 x i8] }
%"class.WTF::ListHashSet.base.204" = type <{ %"class.WTF::HashTable.199", %"class.blink::Member.201", %"class.blink::Member.201", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.199" = type <{ %"class.blink::Member.201"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.201" = type { %"class.blink::MemberBase.202" }
%"class.blink::MemberBase.202" = type { %"class.blink::HeapListHashSetNode.203"* }
%"class.blink::HeapListHashSetNode.203" = type { %"class.blink::Member.598", %"class.blink::Member.201", %"class.blink::Member.201" }
%"class.blink::Member.598" = type { %"class.blink::MemberBase.599" }
%"class.blink::MemberBase.599" = type { %"class.blink::InspectorTraceEvents"* }
%"class.blink::InspectorTraceEvents" = type opaque
%"class.blink::HeapListHashSet.205" = type { %"class.WTF::ListHashSet.base.215", [7 x i8] }
%"class.WTF::ListHashSet.base.215" = type <{ %"class.WTF::HashTable.210", %"class.blink::Member.212", %"class.blink::Member.212", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.210" = type <{ %"class.blink::Member.212"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.212" = type { %"class.blink::MemberBase.213" }
%"class.blink::MemberBase.213" = type { %"class.blink::HeapListHashSetNode.214"* }
%"class.blink::HeapListHashSetNode.214" = type { %"class.blink::Member.590", %"class.blink::Member.212", %"class.blink::Member.212" }
%"class.blink::Member.590" = type { %"class.blink::MemberBase.591" }
%"class.blink::MemberBase.591" = type { %"class.blink::PerformanceMonitor"* }
%"class.blink::PerformanceMonitor" = type opaque
%"class.blink::InspectorAgentState" = type { %"class.WTF::String", %"class.WTF::Vector" }
%"class.WTF::Vector" = type { %"class.WTF::VectorBuffer" }
%"class.WTF::VectorBuffer" = type { %"class.WTF::VectorBufferBase" }
%"class.WTF::VectorBufferBase" = type { %"class.blink::InspectorAgentState::Field"**, i32, i32 }
%"class.blink::InspectorAgentState::Field" = type { i32 (...)**, %"class.WTF::String", %"class.blink::InspectorSessionState"* }
%"class.blink::InspectorSessionState" = type { %"class.mojo::StructPtr", %"class.mojo::StructPtr" }
%"class.mojo::StructPtr" = type { %"class.std::__1::unique_ptr" }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.blink::mojom::blink::DevToolsSessionState"* }
%"class.blink::mojom::blink::DevToolsSessionState" = type { %"class.WTF::HashMap" }
%"class.WTF::HashMap" = type { %"class.WTF::HashTable.217" }
%"class.WTF::HashTable.217" = type <{ %"struct.WTF::KeyValuePair"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair" = type { %"class.WTF::String", %"class.absl::optional" }
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon }
%union.anon = type { %"class.WTF::Vector.219" }
%"class.WTF::Vector.219" = type { %"class.WTF::VectorBuffer.220" }
%"class.WTF::VectorBuffer.220" = type { %"class.WTF::VectorBufferBase.221" }
%"class.WTF::VectorBufferBase.221" = type { i8*, i32, i32 }
%"class.std::__1::unique_ptr.227" = type { %"class.std::__1::__compressed_pair.228" }
%"class.std::__1::__compressed_pair.228" = type { %"struct.std::__1::__compressed_pair_elem.229" }
%"struct.std::__1::__compressed_pair_elem.229" = type { %"class.blink::protocol::CacheStorage::Frontend"* }
%"class.blink::protocol::CacheStorage::Frontend" = type { %"class.crdtp::FrontendChannel"* }
%"class.crdtp::FrontendChannel" = type { i32 (...)** }
%"class.blink::Member.233" = type { %"class.blink::MemberBase.234" }
%"class.blink::MemberBase.234" = type { %"class.blink::InspectedFrames"* }
%"class.WTF::HashMap.239" = type { %"class.WTF::HashTable.240" }
%"class.WTF::HashTable.240" = type <{ %"struct.WTF::KeyValuePair.243"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.243" = type { %"class.WTF::String", %"class.mojo::Remote" }
%"class.mojo::Remote" = type { %"class.mojo::internal::InterfacePtrState" }
%"class.mojo::internal::InterfacePtrState" = type { %"class.mojo::internal::InterfacePtrStateBase.base", %"class.std::__1::unique_ptr.421" }
%"class.mojo::internal::InterfacePtrStateBase.base" = type <{ %class.scoped_refptr.244, %"class.std::__1::unique_ptr.371", %"class.mojo::ScopedHandleBase", [4 x i8], %class.scoped_refptr.250, i32 }>
%class.scoped_refptr.244 = type { %"class.mojo::internal::MultiplexRouter"* }
%"class.mojo::internal::MultiplexRouter" = type <{ %"class.mojo::MessageReceiver", %"class.mojo::AssociatedGroupController.base", [4 x i8], %"class.mojo::PipeControlMessageHandlerDelegate", i32, i8, [3 x i8], %class.scoped_refptr.250, %"class.mojo::MessageHeaderValidator"*, %"class.mojo::MessageDispatcher", %"class.mojo::Connector", %"class.mojo::ScopedHandleBase", [4 x i8], %"class.absl::optional.338", %"class.absl::optional.343", %"class.absl::optional.300", %"class.mojo::PipeControlMessageHandler", %"class.mojo::PipeControlMessageProxy", %"class.base::small_map", i32, [4 x i8], %"class.base::circular_deque", %"class.std::__1::map.362", i8, [7 x i8], %class.scoped_refptr.250, i8, i8, i8, i8, i8, [3 x i8] }>
%"class.mojo::MessageReceiver" = type { i32 (...)** }
%"class.mojo::AssociatedGroupController.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe" }>
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic.245" }
%"class.mojo::PipeControlMessageHandlerDelegate" = type { i32 (...)** }
%"class.mojo::MessageHeaderValidator" = type { %"class.mojo::MessageReceiver", %"class.std::__1::basic_string" }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.252" }
%"class.std::__1::__compressed_pair.252" = type { %"struct.std::__1::__compressed_pair_elem.253" }
%"struct.std::__1::__compressed_pair_elem.253" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon.254 }
%union.anon.254 = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.mojo::MessageDispatcher" = type { %"class.mojo::MessageReceiver", %"class.std::__1::unique_ptr.256", %"class.std::__1::unique_ptr.262", %"class.mojo::MessageReceiver"*, %"class.base::WeakPtrFactory" }
%"class.std::__1::unique_ptr.256" = type { %"class.std::__1::__compressed_pair.257" }
%"class.std::__1::__compressed_pair.257" = type { %"struct.std::__1::__compressed_pair_elem.258" }
%"struct.std::__1::__compressed_pair_elem.258" = type { %"class.mojo::MessageReceiver"* }
%"class.std::__1::unique_ptr.262" = type { %"class.std::__1::__compressed_pair.263" }
%"class.std::__1::__compressed_pair.263" = type { %"struct.std::__1::__compressed_pair_elem.264" }
%"struct.std::__1::__compressed_pair_elem.264" = type { %"class.mojo::MessageFilter"* }
%"class.mojo::MessageFilter" = type { i32 (...)** }
%"class.base::WeakPtrFactory" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.base::internal::WeakPtrFactoryBase" = type { %"class.base::internal::WeakReferenceOwner", i64 }
%"class.base::internal::WeakReferenceOwner" = type { %class.scoped_refptr.268 }
%class.scoped_refptr.268 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.base::internal::WeakReference::Flag" = type <{ %"class.base::RefCountedThreadSafe.269", %"class.base::AtomicFlag", [3 x i8] }>
%"class.base::RefCountedThreadSafe.269" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::AtomicFlag" = type { %"struct.std::__1::atomic.270" }
%"struct.std::__1::atomic.270" = type { %"struct.std::__1::__atomic_base.271" }
%"struct.std::__1::__atomic_base.271" = type { %"struct.std::__1::__atomic_base.272" }
%"struct.std::__1::__atomic_base.272" = type { %"struct.std::__1::__cxx_atomic_impl.273" }
%"struct.std::__1::__cxx_atomic_impl.273" = type { %"struct.std::__1::__cxx_atomic_base_impl.274" }
%"struct.std::__1::__cxx_atomic_base_impl.274" = type { i8 }
%"class.mojo::Connector" = type { %"class.mojo::MessageReceiver", %"class.base::OnceCallback", %"class.mojo::ScopedHandleBase", %"class.mojo::MessageReceiver"*, %class.scoped_refptr.250, %"class.std::__1::unique_ptr.277", %"class.absl::optional.286", %"struct.std::__1::atomic.296", i8, i8, i8, i8, i32, i32, %"class.absl::optional.300", %"class.std::__1::unique_ptr.305", i8, i64, %class.scoped_refptr.334, %"class.base::Lock", i8, i8*, %"class.mojo::Connector::RunLoopNestingObserver"*, i8, i64, %"class.mojo::ConnectionGroup::Ref", %"class.base::WeakPtr", %"class.base::WeakPtrFactory.337" }
%"class.base::OnceCallback" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr.275 }
%class.scoped_refptr.275 = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe.276", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe.276" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.std::__1::unique_ptr.277" = type { %"class.std::__1::__compressed_pair.278" }
%"class.std::__1::__compressed_pair.278" = type { %"struct.std::__1::__compressed_pair_elem.279" }
%"struct.std::__1::__compressed_pair_elem.279" = type { %"class.mojo::SimpleWatcher"* }
%"class.mojo::SimpleWatcher" = type { i32, %class.scoped_refptr.250, i8, %"class.mojo::ScopedHandleBase.280", %class.scoped_refptr.281, %"class.mojo::Handle", i32, %"class.base::RepeatingCallback", i8*, %"class.base::WeakPtrFactory.282" }
%"class.mojo::ScopedHandleBase.280" = type { %"class.mojo::TrapHandle" }
%"class.mojo::TrapHandle" = type { %"class.mojo::Handle" }
%class.scoped_refptr.281 = type { %"class.mojo::SimpleWatcher::Context"* }
%"class.mojo::SimpleWatcher::Context" = type opaque
%"class.mojo::Handle" = type { i32 }
%"class.base::RepeatingCallback" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::internal::CallbackBaseCopyable" = type { %"class.base::internal::CallbackBase" }
%"class.base::WeakPtrFactory.282" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.absl::optional.286" = type { %"class.absl::optional_internal::optional_data.287" }
%"class.absl::optional_internal::optional_data.287" = type { %"class.absl::optional_internal::optional_data_base.288" }
%"class.absl::optional_internal::optional_data_base.288" = type { %"class.absl::optional_internal::optional_data_dtor_base.289" }
%"class.absl::optional_internal::optional_data_dtor_base.289" = type { i8, %union.anon.290 }
%union.anon.290 = type { %"class.mojo::HandleSignalTracker" }
%"class.mojo::HandleSignalTracker" = type { %"class.base::RepeatingCallback.291", %"struct.mojo::HandleSignalsState", %"class.mojo::SimpleWatcher", %"class.mojo::SimpleWatcher" }
%"class.base::RepeatingCallback.291" = type { %"class.base::internal::CallbackBaseCopyable" }
%"struct.mojo::HandleSignalsState" = type { %struct.MojoHandleSignalsState }
%struct.MojoHandleSignalsState = type { i32, i32 }
%"struct.std::__1::atomic.296" = type { %"struct.std::__1::__atomic_base.297" }
%"struct.std::__1::__atomic_base.297" = type { %"struct.std::__1::__cxx_atomic_impl.298" }
%"struct.std::__1::__cxx_atomic_impl.298" = type { %"struct.std::__1::__cxx_atomic_base_impl.299" }
%"struct.std::__1::__cxx_atomic_base_impl.299" = type { i8 }
%"class.std::__1::unique_ptr.305" = type { %"class.std::__1::__compressed_pair.306" }
%"class.std::__1::__compressed_pair.306" = type { %"struct.std::__1::__compressed_pair_elem.307" }
%"struct.std::__1::__compressed_pair_elem.307" = type { %"class.mojo::SyncHandleWatcher"* }
%"class.mojo::SyncHandleWatcher" = type { %"class.mojo::Handle", i32, %"class.base::RepeatingCallback.308", i8, i64, %class.scoped_refptr.309, %class.scoped_refptr.330 }
%"class.base::RepeatingCallback.308" = type { %"class.base::internal::CallbackBaseCopyable" }
%class.scoped_refptr.309 = type { %"class.mojo::SyncHandleRegistry"* }
%"class.mojo::SyncHandleRegistry" = type <{ %"class.base::RefCounted", [4 x i8], %"class.mojo::WaitSet", %"class.std::__1::map", %"class.std::__1::map.319", i8, [7 x i8] }>
%"class.base::RefCounted" = type { %"class.base::subtle::RefCountedBase" }
%"class.base::subtle::RefCountedBase" = type { i32 }
%"class.mojo::WaitSet" = type { %class.scoped_refptr.310 }
%class.scoped_refptr.310 = type { %"class.mojo::WaitSet::State"* }
%"class.mojo::WaitSet::State" = type opaque
%"class.std::__1::map" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.311", %"class.std::__1::__compressed_pair.316" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8, [7 x i8] }>
%"class.std::__1::__compressed_pair.311" = type { %"struct.std::__1::__compressed_pair_elem.312" }
%"struct.std::__1::__compressed_pair_elem.312" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.316" = type { %"struct.std::__1::__compressed_pair_elem.317" }
%"struct.std::__1::__compressed_pair_elem.317" = type { i64 }
%"class.std::__1::map.319" = type { %"class.std::__1::__tree.320" }
%"class.std::__1::__tree.320" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.321", %"class.std::__1::__compressed_pair.325" }
%"class.std::__1::__compressed_pair.321" = type { %"struct.std::__1::__compressed_pair_elem.312" }
%"class.std::__1::__compressed_pair.325" = type { %"struct.std::__1::__compressed_pair_elem.317" }
%class.scoped_refptr.330 = type { %"class.base::RefCountedData"* }
%"class.base::RefCountedData" = type opaque
%class.scoped_refptr.334 = type { %"class.mojo::internal::MessageQuotaChecker"* }
%"class.mojo::internal::MessageQuotaChecker" = type opaque
%"class.base::Lock" = type { %"class.base::internal::LockImpl" }
%"class.base::internal::LockImpl" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"class.mojo::Connector::RunLoopNestingObserver" = type opaque
%"class.mojo::ConnectionGroup::Ref" = type { i32, %class.scoped_refptr.335 }
%class.scoped_refptr.335 = type { %"class.mojo::ConnectionGroup"* }
%"class.mojo::ConnectionGroup" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.427", [4 x i8], %"class.base::RepeatingCallback.374", %class.scoped_refptr.250, %"class.mojo::ConnectionGroup::Ref", %"struct.std::__1::atomic", [4 x i8] }>
%"class.base::RefCountedThreadSafe.427" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::RepeatingCallback.374" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::WeakPtr" = type { %"class.base::internal::WeakPtrBase" }
%"class.base::internal::WeakPtrBase" = type { %"class.base::internal::WeakReference", i64 }
%"class.base::internal::WeakReference" = type { %class.scoped_refptr.336 }
%class.scoped_refptr.336 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.base::WeakPtrFactory.337" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.absl::optional.338" = type { %"class.absl::optional_internal::optional_data.339" }
%"class.absl::optional_internal::optional_data.339" = type { %"class.absl::optional_internal::optional_data_base.340" }
%"class.absl::optional_internal::optional_data_base.340" = type { %"class.absl::optional_internal::optional_data_dtor_base.341" }
%"class.absl::optional_internal::optional_data_dtor_base.341" = type { i8, %union.anon.342 }
%union.anon.342 = type { %"class.mojo::SimpleWatcher" }
%"class.absl::optional.343" = type { %"class.absl::optional_internal::optional_data.344" }
%"class.absl::optional_internal::optional_data.344" = type { %"class.absl::optional_internal::optional_data_base.345" }
%"class.absl::optional_internal::optional_data_base.345" = type { %"class.absl::optional_internal::optional_data_dtor_base.346" }
%"class.absl::optional_internal::optional_data_dtor_base.346" = type { i8, [7 x i8], %union.anon.347 }
%union.anon.347 = type { %"struct.mojo::internal::MultiplexRouter::ExclusiveSyncWaitInfo" }
%"struct.mojo::internal::MultiplexRouter::ExclusiveSyncWaitInfo" = type <{ i32, [4 x i8], i64, i8, [7 x i8] }>
%"class.absl::optional.300" = type { %"class.absl::optional_internal::optional_data.301" }
%"class.absl::optional_internal::optional_data.301" = type { %"class.absl::optional_internal::optional_data_base.302" }
%"class.absl::optional_internal::optional_data_base.302" = type { %"class.absl::optional_internal::optional_data_dtor_base.303" }
%"class.absl::optional_internal::optional_data_dtor_base.303" = type { i8, %union.anon.304 }
%union.anon.304 = type { %"class.base::Lock" }
%"class.mojo::PipeControlMessageHandler" = type { %"class.mojo::MessageReceiver", %"class.std::__1::basic_string", %"class.mojo::PipeControlMessageHandlerDelegate"* }
%"class.mojo::PipeControlMessageProxy" = type { %"class.mojo::MessageReceiver"* }
%"class.base::small_map" = type { i64, %"class.base::internal::small_map_default_init", %union.anon.348 }
%"class.base::internal::small_map_default_init" = type { i8 }
%union.anon.348 = type { %"class.std::__1::map.350" }
%"class.std::__1::map.350" = type { %"class.std::__1::__tree.351" }
%"class.std::__1::__tree.351" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.352", %"class.std::__1::__compressed_pair.356" }
%"class.std::__1::__compressed_pair.352" = type { %"struct.std::__1::__compressed_pair_elem.312" }
%"class.std::__1::__compressed_pair.356" = type { %"struct.std::__1::__compressed_pair_elem.317" }
%"class.base::circular_deque" = type { %"class.base::internal::VectorBuffer", i64, i64 }
%"class.base::internal::VectorBuffer" = type { %"class.std::__1::unique_ptr.361"*, i64 }
%"class.std::__1::unique_ptr.361" = type opaque
%"class.std::__1::map.362" = type { %"class.std::__1::__tree.363" }
%"class.std::__1::__tree.363" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.364", %"class.std::__1::__compressed_pair.368" }
%"class.std::__1::__compressed_pair.364" = type { %"struct.std::__1::__compressed_pair_elem.312" }
%"class.std::__1::__compressed_pair.368" = type { %"struct.std::__1::__compressed_pair_elem.317" }
%"class.std::__1::unique_ptr.371" = type { %"class.std::__1::__compressed_pair.372" }
%"class.std::__1::__compressed_pair.372" = type { %"struct.std::__1::__compressed_pair_elem.373" }
%"struct.std::__1::__compressed_pair_elem.373" = type { %"class.mojo::InterfaceEndpointClient"* }
%"class.mojo::InterfaceEndpointClient" = type { %"class.mojo::MessageReceiverWithResponder", i8, %"class.base::RepeatingCallback.374", %"class.base::OnceCallback.375", %"class.absl::optional.376", %"class.absl::optional.381", %"class.mojo::ConnectionGroup::Ref", i32, %"class.mojo::ScopedInterfaceEndpointHandle", %"class.std::__1::unique_ptr.388", %"class.mojo::InterfaceEndpointController"*, %"class.mojo::MessageReceiverWithResponderStatus"*, %"class.mojo::InterfaceEndpointClient::HandleIncomingMessageThunk", %"class.mojo::MessageDispatcher", %"class.std::__1::map.396", %"class.std::__1::map.407", i64, %"class.base::OnceCallback", %"class.base::OnceCallback.416", i8, %class.scoped_refptr.250, %"class.mojo::internal::ControlMessageProxy", %"class.mojo::internal::ControlMessageHandler", i8*, %"class.base::WeakPtrFactory.417" }
%"class.mojo::MessageReceiverWithResponder" = type { %"class.mojo::MessageReceiver" }
%"class.base::OnceCallback.375" = type { %"class.base::internal::CallbackBase" }
%"class.absl::optional.376" = type { %"class.absl::optional_internal::optional_data.377" }
%"class.absl::optional_internal::optional_data.377" = type { %"class.absl::optional_internal::optional_data_base.378" }
%"class.absl::optional_internal::optional_data_base.378" = type { %"class.absl::optional_internal::optional_data_dtor_base.379" }
%"class.absl::optional_internal::optional_data_dtor_base.379" = type { i8, %union.anon.380 }
%union.anon.380 = type { %"class.base::TimeDelta" }
%"class.base::TimeDelta" = type { i64 }
%"class.absl::optional.381" = type { %"class.absl::optional_internal::optional_data.382" }
%"class.absl::optional_internal::optional_data.382" = type { %"class.absl::optional_internal::optional_data_base.383" }
%"class.absl::optional_internal::optional_data_base.383" = type { %"class.absl::optional_internal::optional_data_dtor_base.384" }
%"class.absl::optional_internal::optional_data_dtor_base.384" = type { i8, %union.anon.385 }
%union.anon.385 = type { %"class.base::OneShotTimer" }
%"class.base::OneShotTimer" = type { %"class.base::internal::TimerBase", %"class.base::OnceCallback" }
%"class.base::internal::TimerBase" = type { i32 (...)**, %class.scoped_refptr.250, %"class.base::SequenceCheckerDoNothing", %"class.base::internal::TaskDestructionDetector"*, %"class.base::Location", %"class.base::TimeDelta", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TickClock"*, i8, %"class.base::WeakPtrFactory.386" }
%"class.base::SequenceCheckerDoNothing" = type { i8 }
%"class.base::internal::TaskDestructionDetector" = type opaque
%"class.base::Location" = type { i8*, i8*, i32, i8* }
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.base::TickClock" = type { i32 (...)** }
%"class.base::WeakPtrFactory.386" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.mojo::ScopedInterfaceEndpointHandle" = type { %class.scoped_refptr.387 }
%class.scoped_refptr.387 = type { %"class.mojo::ScopedInterfaceEndpointHandle::State"* }
%"class.mojo::ScopedInterfaceEndpointHandle::State" = type opaque
%"class.std::__1::unique_ptr.388" = type { %"class.std::__1::__compressed_pair.389" }
%"class.std::__1::__compressed_pair.389" = type { %"struct.std::__1::__compressed_pair_elem.390" }
%"struct.std::__1::__compressed_pair_elem.390" = type { %"class.mojo::AssociatedGroup"* }
%"class.mojo::AssociatedGroup" = type { %"class.base::RepeatingCallback.391", %class.scoped_refptr.392 }
%"class.base::RepeatingCallback.391" = type { %"class.base::internal::CallbackBaseCopyable" }
%class.scoped_refptr.392 = type { %"class.mojo::AssociatedGroupController"* }
%"class.mojo::AssociatedGroupController" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe", [4 x i8] }>
%"class.mojo::InterfaceEndpointController" = type opaque
%"class.mojo::MessageReceiverWithResponderStatus" = type { %"class.mojo::MessageReceiver" }
%"class.mojo::InterfaceEndpointClient::HandleIncomingMessageThunk" = type { %"class.mojo::MessageReceiver", %"class.mojo::InterfaceEndpointClient"* }
%"class.std::__1::map.396" = type { %"class.std::__1::__tree.397" }
%"class.std::__1::__tree.397" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.398", %"class.std::__1::__compressed_pair.402" }
%"class.std::__1::__compressed_pair.398" = type { %"struct.std::__1::__compressed_pair_elem.312" }
%"class.std::__1::__compressed_pair.402" = type { %"struct.std::__1::__compressed_pair_elem.317" }
%"class.std::__1::map.407" = type { %"class.std::__1::__tree.408" }
%"class.std::__1::__tree.408" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.409", %"class.std::__1::__compressed_pair.413" }
%"class.std::__1::__compressed_pair.409" = type { %"struct.std::__1::__compressed_pair_elem.312" }
%"class.std::__1::__compressed_pair.413" = type { %"struct.std::__1::__compressed_pair_elem.317" }
%"class.base::OnceCallback.416" = type { %"class.base::internal::CallbackBase" }
%"class.mojo::internal::ControlMessageProxy" = type { %"class.mojo::InterfaceEndpointClient"*, i8, %"class.base::OnceCallback" }
%"class.mojo::internal::ControlMessageHandler" = type <{ %"class.mojo::MessageReceiverWithResponderStatus", %"class.mojo::InterfaceEndpointClient"*, i32, [4 x i8] }>
%"class.base::WeakPtrFactory.417" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.mojo::ScopedHandleBase" = type { %"class.mojo::MessagePipeHandle" }
%"class.mojo::MessagePipeHandle" = type { %"class.mojo::Handle" }
%class.scoped_refptr.250 = type { %"class.base::SequencedTaskRunner"* }
%"class.base::SequencedTaskRunner" = type { %"class.base::TaskRunner.base", [4 x i8] }
%"class.base::TaskRunner.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.251" }>
%"class.base::RefCountedThreadSafe.251" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.std::__1::unique_ptr.421" = type { %"class.std::__1::__compressed_pair.422" }
%"class.std::__1::__compressed_pair.422" = type { %"struct.std::__1::__compressed_pair_elem.423" }
%"struct.std::__1::__compressed_pair_elem.423" = type { %"class.blink::mojom::blink::CacheStorageProxy"* }
%"class.blink::mojom::blink::CacheStorageProxy" = type { %"class.blink::mojom::blink::CacheStorage", %"class.mojo::MessageReceiverWithResponder"* }
%"class.blink::mojom::blink::CacheStorage" = type { i32 (...)** }
%"class.blink::InspectedFrames" = type { i32 (...)**, %"class.blink::Member.237" }
%"class.blink::Member.237" = type { %"class.blink::MemberBase.238" }
%"class.blink::MemberBase.238" = type { %"class.blink::LocalFrame"* }
%"class.blink::LocalFrame" = type <{ %"class.blink::Frame", %"class.blink::FrameScheduler::Delegate", %"class.blink::Supplementable", %"class.blink::mojom::blink::LocalFrame", %"class.blink::mojom::blink::LocalMainFrame", %"class.blink::mojom::blink::FullscreenVideoElementHandler", %"class.blink::mojom::blink::HighPriorityLocalFrame", %"class.std::__1::unique_ptr.510", %"class.blink::HeapMojoUniqueReceiverSet", %"class.blink::HeapHashSet.524", %"class.blink::FrameLoader", %"class.blink::Member.551", %"class.blink::Member.553", %"class.blink::Member.581", %"class.blink::Member.583", %"class.blink::Member.585", %"class.blink::Member.587", i32, i8, [3 x i8], float, float, i64, %"class.blink::Member", %class.scoped_refptr.589, %"class.blink::Member.590", %"class.blink::Member.592", %"class.blink::Member.594", %"class.blink::Member.596", %"class.blink::Member.598", %"class.blink::Member.600", %"class.blink::Member.602", %"class.blink::InterfaceRegistry"*, %"class.blink::HeapMojoRemote", %"class.blink::mojom::blink::ViewportIntersectionState", %"class.std::__1::unique_ptr.606", %"class.blink::ClientHintsPreferences", i8, [7 x i8], %"class.base::RepeatingCallback.627", %"class.std::__1::unique_ptr.628", %"class.absl::optional.494", i32, [4 x i8], %"class.std::__1::unique_ptr.634", %"class.blink::HeapMojoAssociatedRemote", %"class.blink::HeapMojoAssociatedRemote.642", %"class.blink::HeapMojoAssociatedReceiver", %"class.blink::HeapMojoAssociatedReceiver.647", %"class.blink::HeapMojoReceiver", %"class.blink::HeapMojoAssociatedReceiver.652", i32, [4 x i8], %"class.base::TimeTicks", %"class.blink::Member.655", %"class.blink::Member.657", %"class.blink::Member.659", %"class.blink::Member.661", %"class.mojo::StructPtr.664", %"class.blink::Member.672", %"class.blink::TransientAllowFullscreen", %"class.blink::PaymentRequestToken", i8, [3 x i8], %"class.gfx::Rect", %"class.absl::optional.674", i8, [7 x i8] }>
%"class.blink::Frame" = type { i32 (...)**, %"class.blink::FrameTree", %"class.blink::Member.432", %"class.blink::Member.434", %"class.blink::Member.436", i8, i32, i8, i32, %"class.blink::Member.479", %"class.blink::Member.460", %"class.blink::FrameLifecycle", %"class.blink::Member.430", %"class.blink::Member.430", %"class.blink::Member.430", %"class.blink::Member.430", %"class.blink::Member.430", %"class.blink::Member.430", %"class.blink::Member.237", %"class.blink::NavigationRateLimiter", i32, %"class.base::flat_map", %"class.blink::Member.487", i8, %"class.base::UnguessableToken", %"class.absl::optional.489", %"class.absl::optional.494", %"class.blink::UserActivationState", i8, [7 x i8], %"class.blink::MultiToken", %"class.blink::TaskHandle", %"class.blink::OpenedFrameTracker" }
%"class.blink::FrameTree" = type <{ %"class.blink::Member.430", %"class.WTF::AtomicString", i32, i8, i8, [2 x i8] }>
%"class.blink::Member.432" = type { %"class.blink::MemberBase.433" }
%"class.blink::MemberBase.433" = type { %"class.blink::Page"* }
%"class.blink::Page" = type opaque
%"class.blink::Member.434" = type { %"class.blink::MemberBase.435" }
%"class.blink::MemberBase.435" = type { %"class.blink::FrameOwner"* }
%"class.blink::FrameOwner" = type opaque
%"class.blink::Member.436" = type { %"class.blink::MemberBase.437" }
%"class.blink::MemberBase.437" = type { %"class.blink::DOMWindow"* }
%"class.blink::DOMWindow" = type { %"class.blink::EventTargetWithInlineData", %"class.blink::Member.430", %"class.blink::Member.460", %"class.blink::Member.462", %"class.blink::Member.464", i8, %"class.WTF::Vector.466" }
%"class.blink::EventTargetWithInlineData" = type { %"class.blink::EventTarget", %"class.blink::EventTargetData" }
%"class.blink::EventTarget" = type { %"class.blink::ScriptWrappable" }
%"class.blink::ScriptWrappable" = type { %"class.blink::NameClient", %"class.blink::TraceWrapperV8Reference" }
%"class.blink::NameClient" = type { i32 (...)** }
%"class.blink::TraceWrapperV8Reference" = type { %"class.v8::TracedReference" }
%"class.v8::TracedReference" = type { %"class.v8::BasicTracedReference" }
%"class.v8::BasicTracedReference" = type { %"class.v8::TracedReferenceBase" }
%"class.v8::TracedReferenceBase" = type { i64* }
%"class.blink::EventTargetData" = type { %"class.blink::EventListenerMap", %"class.std::__1::unique_ptr.453" }
%"class.blink::EventListenerMap" = type { %"class.blink::HeapVector" }
%"class.blink::HeapVector" = type { %"class.WTF::Vector.444" }
%"class.WTF::Vector.444" = type { %"class.WTF::VectorBuffer.445" }
%"class.WTF::VectorBuffer.445" = type { %"class.WTF::VectorBufferBase.446", [32 x i8] }
%"class.WTF::VectorBufferBase.446" = type { %"struct.std::__1::pair.447"*, i32, i32 }
%"struct.std::__1::pair.447" = type { %"class.WTF::AtomicString", %"class.blink::Member.448" }
%"class.blink::Member.448" = type { %"class.blink::MemberBase.449" }
%"class.blink::MemberBase.449" = type { %"class.blink::HeapVector.450"* }
%"class.blink::HeapVector.450" = type opaque
%"class.std::__1::unique_ptr.453" = type { %"class.std::__1::__compressed_pair.454" }
%"class.std::__1::__compressed_pair.454" = type { %"struct.std::__1::__compressed_pair_elem.455" }
%"struct.std::__1::__compressed_pair_elem.455" = type { %"class.WTF::Vector.456"* }
%"class.WTF::Vector.456" = type opaque
%"class.blink::Member.462" = type { %"class.blink::MemberBase.463" }
%"class.blink::MemberBase.463" = type { %"class.blink::InputDeviceCapabilitiesConstants"* }
%"class.blink::InputDeviceCapabilitiesConstants" = type opaque
%"class.blink::Member.464" = type { %"class.blink::MemberBase.465" }
%"class.blink::MemberBase.465" = type { %"class.blink::Location"* }
%"class.blink::Location" = type opaque
%"class.WTF::Vector.466" = type { %"class.WTF::VectorBuffer.467" }
%"class.WTF::VectorBuffer.467" = type { %"class.WTF::VectorBufferBase.468" }
%"class.WTF::VectorBufferBase.468" = type { %"struct.blink::DOMWindow::CoopAccessMonitor"*, i32, i32 }
%"struct.blink::DOMWindow::CoopAccessMonitor" = type { i32, %"class.util::TokenType", %"class.mojo::Remote.469", i8, %"class.WTF::String" }
%"class.util::TokenType" = type { %"class.base::StrongAlias" }
%"class.base::StrongAlias" = type { %"class.base::UnguessableToken" }
%"class.mojo::Remote.469" = type { %"class.mojo::internal::InterfacePtrState.470" }
%"class.mojo::internal::InterfacePtrState.470" = type { %"class.mojo::internal::InterfacePtrStateBase.base", %"class.std::__1::unique_ptr.471" }
%"class.std::__1::unique_ptr.471" = type { %"class.std::__1::__compressed_pair.472" }
%"class.std::__1::__compressed_pair.472" = type { %"struct.std::__1::__compressed_pair_elem.473" }
%"struct.std::__1::__compressed_pair_elem.473" = type { %"class.network::mojom::blink::CrossOriginOpenerPolicyReporterProxy"* }
%"class.network::mojom::blink::CrossOriginOpenerPolicyReporterProxy" = type { %"class.network::mojom::blink::CrossOriginOpenerPolicyReporter", %"class.mojo::MessageReceiverWithResponder"* }
%"class.network::mojom::blink::CrossOriginOpenerPolicyReporter" = type { i32 (...)** }
%"class.blink::Member.479" = type { %"class.blink::MemberBase.480" }
%"class.blink::MemberBase.480" = type { %"class.blink::FrameClient"* }
%"class.blink::FrameClient" = type opaque
%"class.blink::Member.460" = type { %"class.blink::MemberBase.461" }
%"class.blink::MemberBase.461" = type { %"class.blink::WindowProxyManager"* }
%"class.blink::WindowProxyManager" = type opaque
%"class.blink::FrameLifecycle" = type { i32 }
%"class.blink::Member.430" = type { %"class.blink::MemberBase.431" }
%"class.blink::MemberBase.431" = type { %"class.blink::Frame"* }
%"class.blink::NavigationRateLimiter" = type <{ %"class.blink::Member.430", %"class.base::TimeTicks", i32, i8, i8, [2 x i8] }>
%"class.base::flat_map" = type { %"class.base::internal::flat_tree" }
%"class.base::internal::flat_tree" = type { %"class.std::__1::vector" }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"struct.std::__1::pair.481"*, %"struct.std::__1::pair.481"*, %"class.std::__1::__compressed_pair.482" }
%"struct.std::__1::pair.481" = type { i32, [4 x i8], %"class.blink::PolicyValue" }
%"class.blink::PolicyValue" = type <{ i32, i8, [3 x i8], double, i32, [4 x i8] }>
%"class.std::__1::__compressed_pair.482" = type { %"struct.std::__1::__compressed_pair_elem.483" }
%"struct.std::__1::__compressed_pair_elem.483" = type { %"struct.std::__1::pair.481"* }
%"class.blink::Member.487" = type { %"class.blink::MemberBase.488" }
%"class.blink::MemberBase.488" = type { %"class.blink::WindowAgentFactory"* }
%"class.blink::WindowAgentFactory" = type opaque
%"class.base::UnguessableToken" = type { %"class.base::Token" }
%"class.base::Token" = type { i64, i64 }
%"class.absl::optional.489" = type { %"class.absl::optional_internal::optional_data.490" }
%"class.absl::optional_internal::optional_data.490" = type { %"class.absl::optional_internal::optional_data_base.491" }
%"class.absl::optional_internal::optional_data_base.491" = type { %"class.absl::optional_internal::optional_data_dtor_base.492" }
%"class.absl::optional_internal::optional_data_dtor_base.492" = type { i8, %union.anon.493 }
%union.anon.493 = type { %"class.std::__1::basic_string" }
%"class.blink::UserActivationState" = type { i8, %"class.base::TimeTicks", %"class.base::TimeTicks", i32, i32 }
%"class.blink::MultiToken" = type <{ %"class.base::UnguessableToken", i32, [4 x i8] }>
%"class.blink::TaskHandle" = type { %class.scoped_refptr.499 }
%class.scoped_refptr.499 = type { %"class.blink::TaskHandle::Runner"* }
%"class.blink::TaskHandle::Runner" = type opaque
%"class.blink::OpenedFrameTracker" = type { %"class.blink::HeapHashSet" }
%"class.blink::HeapHashSet" = type { %"class.WTF::HashSet" }
%"class.WTF::HashSet" = type { %"class.WTF::HashTable.502" }
%"class.WTF::HashTable.502" = type <{ %"class.blink::WeakMember"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember" = type opaque
%"class.blink::FrameScheduler::Delegate" = type { i32 (...)** }
%"class.blink::Supplementable" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap" }
%"class.blink::GarbageCollectedMixin" = type { i32 (...)** }
%"class.blink::HeapHashMap" = type { %"class.WTF::HashMap.506" }
%"class.WTF::HashMap.506" = type { %"class.WTF::HashTable.507" }
%"class.WTF::HashTable.507" = type <{ %"struct.WTF::KeyValuePair.509"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.509" = type opaque
%"class.blink::mojom::blink::LocalFrame" = type { i32 (...)** }
%"class.blink::mojom::blink::LocalMainFrame" = type { i32 (...)** }
%"class.blink::mojom::blink::FullscreenVideoElementHandler" = type { i32 (...)** }
%"class.blink::mojom::blink::HighPriorityLocalFrame" = type { i32 (...)** }
%"class.std::__1::unique_ptr.510" = type { %"class.std::__1::__compressed_pair.511" }
%"class.std::__1::__compressed_pair.511" = type { %"struct.std::__1::__compressed_pair_elem.512" }
%"struct.std::__1::__compressed_pair_elem.512" = type { %"class.blink::FrameScheduler"* }
%"class.blink::FrameScheduler" = type { %"class.blink::FrameOrWorkerScheduler" }
%"class.blink::FrameOrWorkerScheduler" = type { i32 (...)**, %"class.WTF::HashMap.513", %"class.base::WeakPtrFactory.518" }
%"class.WTF::HashMap.513" = type { %"class.WTF::HashTable.514" }
%"class.WTF::HashTable.514" = type <{ %"struct.WTF::KeyValuePair.517"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.517" = type opaque
%"class.base::WeakPtrFactory.518" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::HeapMojoUniqueReceiverSet" = type { %"class.blink::Member.522" }
%"class.blink::Member.522" = type { %"class.blink::MemberBase.523" }
%"class.blink::MemberBase.523" = type { %"class.blink::HeapMojoUniqueReceiverSet<blink::mojom::blink::PauseSubresourceLoadingHandle, std::__1::default_delete<blink::mojom::blink::PauseSubresourceLoadingHandle>, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoUniqueReceiverSet<blink::mojom::blink::PauseSubresourceLoadingHandle, std::__1::default_delete<blink::mojom::blink::PauseSubresourceLoadingHandle>, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.mojo::ReceiverSetBase" }
%"class.blink::ContextLifecycleObserver" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::WeakMember.1060" }
%"class.blink::WeakMember.1060" = type { %"class.blink::MemberBase.1061" }
%"class.blink::MemberBase.1061" = type { %"class.blink::ContextLifecycleNotifier"* }
%"class.blink::ContextLifecycleNotifier" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapObserverSet" }
%"class.blink::HeapObserverSet" = type { i32, [4 x i8], %"class.blink::HeapHashSet.782" }
%"class.blink::HeapHashSet.782" = type { %"class.WTF::HashSet.785" }
%"class.WTF::HashSet.785" = type { %"class.WTF::HashTable.786" }
%"class.WTF::HashTable.786" = type <{ %"class.blink::WeakMember.788"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.788" = type opaque
%"class.mojo::ReceiverSetBase" = type { %"class.mojo::ReceiverSetState" }
%"class.mojo::ReceiverSetState" = type { %"class.base::RepeatingCallback.374", %"class.base::RepeatingCallback.2049", i64, %"class.std::__1::map.2050", i8*, i64, %"class.base::WeakPtrFactory.2059" }
%"class.base::RepeatingCallback.2049" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.std::__1::map.2050" = type { %"class.std::__1::__tree.2051" }
%"class.std::__1::__tree.2051" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.2052", %"class.std::__1::__compressed_pair.2056" }
%"class.std::__1::__compressed_pair.2052" = type { %"struct.std::__1::__compressed_pair_elem.312" }
%"class.std::__1::__compressed_pair.2056" = type { %"struct.std::__1::__compressed_pair_elem.317" }
%"class.base::WeakPtrFactory.2059" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::HeapHashSet.524" = type { %"class.WTF::HashSet.527" }
%"class.WTF::HashSet.527" = type { %"class.WTF::HashTable.528" }
%"class.WTF::HashTable.528" = type <{ %"class.blink::WeakMember.530"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.530" = type opaque
%"class.blink::FrameLoader" = type { %"class.blink::Member.237", %"class.blink::Member.531", %"class.blink::Member.533", %"class.std::__1::unique_ptr.535", i32, i8, i8, i8, i32, %"class.blink::WebScopedVirtualTimePauser", %"class.WTF::HashSet.547" }
%"class.blink::Member.531" = type { %"class.blink::MemberBase.532" }
%"class.blink::MemberBase.532" = type { %"class.blink::ProgressTracker"* }
%"class.blink::ProgressTracker" = type opaque
%"class.blink::Member.533" = type { %"class.blink::MemberBase.534" }
%"class.blink::MemberBase.534" = type { %"class.blink::DocumentLoader"* }
%"class.blink::DocumentLoader" = type opaque
%"class.std::__1::unique_ptr.535" = type { %"class.std::__1::__compressed_pair.536" }
%"class.std::__1::__compressed_pair.536" = type { %"struct.std::__1::__compressed_pair_elem.537" }
%"struct.std::__1::__compressed_pair_elem.537" = type { %"struct.blink::FrameLoader::ClientNavigationState"* }
%"struct.blink::FrameLoader::ClientNavigationState" = type { %"class.blink::KURL" }
%"class.blink::KURL" = type { i8, i8, %"class.WTF::String", %"struct.url::Parsed", %"class.WTF::String", %"class.std::__1::unique_ptr.538" }
%"struct.url::Parsed" = type { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, %"struct.url::Parsed"* }
%"struct.url::Component" = type { i32, i32 }
%"class.std::__1::unique_ptr.538" = type { %"class.std::__1::__compressed_pair.539" }
%"class.std::__1::__compressed_pair.539" = type { %"struct.std::__1::__compressed_pair_elem.540" }
%"struct.std::__1::__compressed_pair_elem.540" = type { %"class.blink::KURL"* }
%"class.blink::WebScopedVirtualTimePauser" = type { %"class.base::TimeTicks", i8, i8, i32, %"class.blink::scheduler::MainThreadSchedulerImpl"*, %"class.blink::WebString", i64 }
%"class.blink::scheduler::MainThreadSchedulerImpl" = type opaque
%"class.blink::WebString" = type { %class.scoped_refptr }
%"class.WTF::HashSet.547" = type { %"class.WTF::HashTable.548" }
%"class.WTF::HashTable.548" = type <{ %"class.WTF::String"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.551" = type { %"class.blink::MemberBase.552" }
%"class.blink::MemberBase.552" = type { %"class.blink::LocalFrameView"* }
%"class.blink::LocalFrameView" = type { %"class.blink::FrameView.base", %"class.blink::LayoutSize", %"class.WTF::HashSet.1547", %"class.blink::Member.237", i8, i8, %"class.blink::LayoutSubtreeRootList", %"class.blink::DepthOrderedLayoutObjectList", i8, i32, i32, %"class.blink::HeapTaskRunnerTimer.1552", i8, i32, %"class.blink::Color", %"class.absl::optional.1554", %"class.WTF::AtomicString", %"class.WTF::AtomicString", i8, i32, i64, i8, %"class.blink::LayoutObjectCounter", %"class.blink::Member.1559", %"class.blink::Member.1561", %"class.blink::Member.1561", %"class.std::__1::unique_ptr.1564", i32, [4 x i8], %"class.WTF::HashSet.1567", %"class.blink::Member.1574", %"class.blink::IntSize", %"class.blink::IntSize", i8, i8, [6 x i8], %"class.blink::HeapHashSet.1576", %"class.blink::HeapHashSet.1583", %"class.blink::IntSize", i8, %"class.std::__1::unique_ptr.1591", i8, %"class.blink::Member.1597", i8, i8, i32, %"class.blink::HeapLinkedHashSet", %"class.blink::HeapLinkedHashSet.1609", i8, i32, i8, i8, i8, i8, i8, [3 x i8], %"struct.blink::LifecycleData", %"class.std::__1::unique_ptr.1623", i8, %"class.std::__1::unique_ptr.1629", %"class.std::__1::unique_ptr.1746", %"class.WTF::Vector.1752", i32, %class.scoped_refptr.1757, i32, %"class.base::TimeTicks", i64, i64, %"class.blink::Member.1758", %"class.blink::Member.1760", %"class.blink::Member.1762", %"class.blink::HeapHashSet.1764", %"class.blink::HeapHashSet.1771", %"class.std::__1::unique_ptr.1778", %"class.std::__1::unique_ptr.1785", %"class.WTF::Vector.767" }
%"class.blink::FrameView.base" = type <{ %"class.blink::EmbeddedContentView.base", i8, %"struct.blink::PhysicalRect", [4 x i8], %"class.base::TimeTicks", i32, i8, i8, i8 }>
%"class.blink::EmbeddedContentView.base" = type <{ %"class.blink::GarbageCollectedMixin", %"class.blink::IntRect", i8, i8, i8 }>
%"class.blink::IntRect" = type { %"class.blink::IntPoint", %"class.blink::IntSize" }
%"class.blink::IntPoint" = type { i32, i32 }
%"struct.blink::PhysicalRect" = type { %"struct.blink::PhysicalOffset", %"struct.blink::PhysicalSize" }
%"struct.blink::PhysicalOffset" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.blink::LayoutUnit" = type { i32 }
%"struct.blink::PhysicalSize" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.blink::LayoutSize" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.WTF::HashSet.1547" = type { %"class.WTF::HashTable.1548" }
%"class.WTF::HashTable.1548" = type <{ %class.scoped_refptr.1551*, i32, i32, i32, [4 x i8] }>
%class.scoped_refptr.1551 = type { %"class.blink::LayoutEmbeddedObject"* }
%"class.blink::LayoutEmbeddedObject" = type opaque
%"class.blink::LayoutSubtreeRootList" = type { %"class.blink::DepthOrderedLayoutObjectList" }
%"class.blink::DepthOrderedLayoutObjectList" = type { %"struct.blink::DepthOrderedLayoutObjectListData"* }
%"struct.blink::DepthOrderedLayoutObjectListData" = type opaque
%"class.blink::HeapTaskRunnerTimer.1552" = type { %"class.blink::TimerBase", %"class.blink::WeakMember.1553", { i64, i64 } }
%"class.blink::TimerBase" = type { i32 (...)**, %"class.base::TimeTicks", %"class.base::TimeDelta", %"class.base::Location", %class.scoped_refptr.1313, %"class.base::WeakPtrFactory.1314" }
%class.scoped_refptr.1313 = type { %"class.base::SingleThreadTaskRunner"* }
%"class.base::SingleThreadTaskRunner" = type { %"class.base::SequencedTaskRunner.base", [4 x i8] }
%"class.base::SequencedTaskRunner.base" = type { %"class.base::TaskRunner.base" }
%"class.base::WeakPtrFactory.1314" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::WeakMember.1553" = type { %"class.blink::MemberBase.552" }
%"class.blink::Color" = type { i32 }
%"class.absl::optional.1554" = type { %"class.absl::optional_internal::optional_data.1555" }
%"class.absl::optional_internal::optional_data.1555" = type { %"class.absl::optional_internal::optional_data_base.1556" }
%"class.absl::optional_internal::optional_data_base.1556" = type { %"class.absl::optional_internal::optional_data_dtor_base.1557" }
%"class.absl::optional_internal::optional_data_dtor_base.1557" = type { i8, %union.anon.1558 }
%union.anon.1558 = type { %"class.blink::IntSize" }
%"class.blink::LayoutObjectCounter" = type { i32 }
%"class.blink::Member.1559" = type { %"class.blink::MemberBase.1560" }
%"class.blink::MemberBase.1560" = type { %"class.blink::FragmentAnchor"* }
%"class.blink::FragmentAnchor" = type opaque
%"class.blink::Member.1561" = type { %"class.blink::MemberBase.1562" }
%"class.blink::MemberBase.1562" = type { %"class.blink::HeapHashSet.1563"* }
%"class.blink::HeapHashSet.1563" = type opaque
%"class.std::__1::unique_ptr.1564" = type { %"class.std::__1::__compressed_pair.1565" }
%"class.std::__1::__compressed_pair.1565" = type { %"struct.std::__1::__compressed_pair_elem.1566" }
%"struct.std::__1::__compressed_pair_elem.1566" = type { %"class.WTF::HashSet.1567"* }
%"class.WTF::HashSet.1567" = type { %"class.WTF::HashTable.1568" }
%"class.WTF::HashTable.1568" = type <{ %"class.blink::LayoutObject"**, i32, i32, i32, [4 x i8] }>
%"class.blink::LayoutObject" = type opaque
%"class.blink::Member.1574" = type { %"class.blink::MemberBase.1575" }
%"class.blink::MemberBase.1575" = type { %"class.blink::FrameViewAutoSizeInfo"* }
%"class.blink::FrameViewAutoSizeInfo" = type opaque
%"class.blink::HeapHashSet.1576" = type { %"class.WTF::HashSet.1579" }
%"class.WTF::HashSet.1579" = type { %"class.WTF::HashTable.1580" }
%"class.WTF::HashTable.1580" = type <{ %"class.blink::Member.1582"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1582" = type opaque
%"class.blink::HeapHashSet.1583" = type { %"class.WTF::HashSet.1586" }
%"class.WTF::HashSet.1586" = type { %"class.WTF::HashTable.1587" }
%"class.WTF::HashTable.1587" = type <{ %"class.blink::Member.1589"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1589" = type { %"class.blink::MemberBase.1590" }
%"class.blink::MemberBase.1590" = type { %"class.blink::Scrollbar"* }
%"class.blink::Scrollbar" = type { %"class.blink::DisplayItemClient.base", %"class.blink::Member.1819", i32, %"class.blink::ScrollbarTheme"*, i32, i32, float, float, i32, i32, i32, float, i8, i32, i8, %"class.blink::HeapTaskRunnerTimer.1830", float, i8, i8, i8, i8, %"class.blink::IntRect", %"class.blink::Member.553" }
%"class.blink::DisplayItemClient.base" = type <{ i32 (...)**, i8 }>
%"class.blink::Member.1819" = type { %"class.blink::MemberBase.1820" }
%"class.blink::MemberBase.1820" = type { %"class.blink::ScrollableArea"* }
%"class.blink::ScrollableArea" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::ThreadState::PrefinalizerRegistration.1821", %"class.blink::Member.1822", %"class.blink::Member.1824", %"class.blink::Member.1826", %"class.blink::Member.1828", %"class.WTF::Vector.767", i16, %class.scoped_refptr.1313 }
%"class.blink::ThreadState::PrefinalizerRegistration.1821" = type { i8 }
%"class.blink::Member.1822" = type { %"class.blink::MemberBase.1823" }
%"class.blink::MemberBase.1823" = type { %"class.blink::MacScrollbarAnimator"* }
%"class.blink::MacScrollbarAnimator" = type opaque
%"class.blink::Member.1824" = type { %"class.blink::MemberBase.1825" }
%"class.blink::MemberBase.1825" = type { %"class.blink::ScrollAnimatorBase"* }
%"class.blink::ScrollAnimatorBase" = type opaque
%"class.blink::Member.1826" = type { %"class.blink::MemberBase.1827" }
%"class.blink::MemberBase.1827" = type { %"class.blink::ProgrammaticScrollAnimator"* }
%"class.blink::ProgrammaticScrollAnimator" = type opaque
%"class.blink::Member.1828" = type { %"class.blink::MemberBase.1829" }
%"class.blink::MemberBase.1829" = type { %"class.blink::DisallowNewWrapper"* }
%"class.blink::DisallowNewWrapper" = type opaque
%"class.blink::ScrollbarTheme" = type opaque
%"class.blink::HeapTaskRunnerTimer.1830" = type { %"class.blink::TimerBase", %"class.blink::WeakMember.1831", { i64, i64 } }
%"class.blink::WeakMember.1831" = type { %"class.blink::MemberBase.1590" }
%"class.blink::IntSize" = type { i32, i32 }
%"class.std::__1::unique_ptr.1591" = type { %"class.std::__1::__compressed_pair.1592" }
%"class.std::__1::__compressed_pair.1592" = type { %"struct.std::__1::__compressed_pair_elem.1593" }
%"struct.std::__1::__compressed_pair_elem.1593" = type { %"class.blink::LayoutAnalyzer"* }
%"class.blink::LayoutAnalyzer" = type opaque
%"class.blink::Member.1597" = type { %"class.blink::MemberBase.1598" }
%"class.blink::MemberBase.1598" = type { %"class.blink::RootFrameViewport"* }
%"class.blink::RootFrameViewport" = type opaque
%"class.blink::HeapLinkedHashSet" = type { %"class.WTF::LinkedHashSet" }
%"class.WTF::LinkedHashSet" = type { %"class.WTF::HashMap.1601", %"class.WTF::VectorBackedLinkedList" }
%"class.WTF::HashMap.1601" = type { %"class.WTF::HashTable.1602" }
%"class.WTF::HashTable.1602" = type <{ %"struct.WTF::KeyValuePair.1604"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1604" = type opaque
%"class.WTF::VectorBackedLinkedList" = type { %"class.WTF::Vector.1605", i32, i32 }
%"class.WTF::Vector.1605" = type { %"class.WTF::VectorBuffer.1606" }
%"class.WTF::VectorBuffer.1606" = type { %"class.WTF::VectorBufferBase.1607" }
%"class.WTF::VectorBufferBase.1607" = type { %"class.WTF::VectorBackedLinkedListNode"*, i32, i32 }
%"class.WTF::VectorBackedLinkedListNode" = type opaque
%"class.blink::HeapLinkedHashSet.1609" = type { %"class.WTF::LinkedHashSet.1612" }
%"class.WTF::LinkedHashSet.1612" = type { %"class.WTF::HashMap.1613", %"class.WTF::VectorBackedLinkedList.1617" }
%"class.WTF::HashMap.1613" = type { %"class.WTF::HashTable.1614" }
%"class.WTF::HashTable.1614" = type <{ %"struct.WTF::KeyValuePair.1616"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1616" = type opaque
%"class.WTF::VectorBackedLinkedList.1617" = type { %"class.WTF::Vector.1618", i32, i32 }
%"class.WTF::Vector.1618" = type { %"class.WTF::VectorBuffer.1619" }
%"class.WTF::VectorBuffer.1619" = type { %"class.WTF::VectorBufferBase.1620" }
%"class.WTF::VectorBufferBase.1620" = type { %"class.WTF::VectorBackedLinkedListNode.1621"*, i32, i32 }
%"class.WTF::VectorBackedLinkedListNode.1621" = type opaque
%"struct.blink::LifecycleData" = type <{ %"class.base::TimeTicks", i32, [4 x i8] }>
%"class.std::__1::unique_ptr.1623" = type { %"class.std::__1::__compressed_pair.1624" }
%"class.std::__1::__compressed_pair.1624" = type { %"struct.std::__1::__compressed_pair_elem.1625" }
%"struct.std::__1::__compressed_pair_elem.1625" = type { %"class.blink::ScrollingCoordinatorContext"* }
%"class.blink::ScrollingCoordinatorContext" = type opaque
%"class.std::__1::unique_ptr.1629" = type { %"class.std::__1::__compressed_pair.1630" }
%"class.std::__1::__compressed_pair.1630" = type { %"struct.std::__1::__compressed_pair_elem.1631" }
%"struct.std::__1::__compressed_pair_elem.1631" = type { %"class.blink::PaintController"* }
%"class.blink::PaintController" = type { i32, %class.scoped_refptr.1632, %class.scoped_refptr.1632, %"class.blink::PaintChunker", i8, i8, %"class.WTF::Vector.1723", i32, i32, i32, [4 x i8], %"class.WTF::HashMap.1728", i32, i32, i32, i32, %"class.WTF::String", %"struct.blink::PaintController::SubsequencesData", %"struct.blink::PaintController::SubsequencesData", i32, i32, i32, i32 }
%class.scoped_refptr.1632 = type { %"class.blink::PaintArtifact"* }
%"class.blink::PaintArtifact" = type { %"class.WTF::RefCounted.1633", [4 x i8], %"class.blink::DisplayItemList", %"class.WTF::Vector.1640" }
%"class.WTF::RefCounted.1633" = type { %"class.base::RefCounted.1634" }
%"class.base::RefCounted.1634" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DisplayItemList" = type <{ %"class.WTF::Vector.1635", i32, [4 x i8] }>
%"class.WTF::Vector.1635" = type { %"class.WTF::VectorBuffer.1636" }
%"class.WTF::VectorBuffer.1636" = type { %"class.WTF::VectorBufferBase.1637" }
%"class.WTF::VectorBufferBase.1637" = type { %"struct.blink::DisplayItemList::ItemSlot"*, i32, i32 }
%"struct.blink::DisplayItemList::ItemSlot" = type { [40 x i8] }
%"class.WTF::Vector.1640" = type { %"class.WTF::VectorBuffer.1641" }
%"class.WTF::VectorBuffer.1641" = type { %"class.WTF::VectorBufferBase.1642" }
%"class.WTF::VectorBufferBase.1642" = type { %"struct.blink::PaintChunk"*, i32, i32 }
%"struct.blink::PaintChunk" = type <{ i32, i32, %"class.blink::Color", float, %"struct.blink::DisplayItem::Id", %"class.blink::RefCountedPropertyTreeState", %"class.std::__1::unique_ptr.1646", %"class.std::__1::unique_ptr.1695", %"class.blink::IntRect", %"class.blink::IntRect", i8, i8, [6 x i8] }>
%"struct.blink::DisplayItem::Id" = type { %"class.blink::DisplayItemClient"*, i32, i32 }
%"class.blink::DisplayItemClient" = type <{ i32 (...)**, i8, [7 x i8] }>
%"class.blink::RefCountedPropertyTreeState" = type { %class.scoped_refptr.1643, %class.scoped_refptr.1644, %class.scoped_refptr.1645 }
%class.scoped_refptr.1643 = type { %"class.blink::TransformPaintPropertyNodeOrAlias"* }
%"class.blink::TransformPaintPropertyNodeOrAlias" = type { %"class.blink::PaintPropertyNode" }
%"class.blink::PaintPropertyNode" = type { %"class.WTF::RefCounted.1659", i8, i8, %class.scoped_refptr.1643, i32, i32 }
%"class.WTF::RefCounted.1659" = type { %"class.base::RefCounted.1660" }
%"class.base::RefCounted.1660" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.1644 = type { %"class.blink::ClipPaintPropertyNodeOrAlias"* }
%"class.blink::ClipPaintPropertyNodeOrAlias" = type { %"class.blink::PaintPropertyNode.1814" }
%"class.blink::PaintPropertyNode.1814" = type { %"class.WTF::RefCounted.1815", i8, i8, %class.scoped_refptr.1644, i32, i32 }
%"class.WTF::RefCounted.1815" = type { %"class.base::RefCounted.1816" }
%"class.base::RefCounted.1816" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.1645 = type { %"class.blink::EffectPaintPropertyNodeOrAlias"* }
%"class.blink::EffectPaintPropertyNodeOrAlias" = type { %"class.blink::PaintPropertyNode.1811" }
%"class.blink::PaintPropertyNode.1811" = type { %"class.WTF::RefCounted.1812", i8, i8, %class.scoped_refptr.1645, i32, i32 }
%"class.WTF::RefCounted.1812" = type { %"class.base::RefCounted.1813" }
%"class.base::RefCounted.1813" = type { %"class.base::subtle::RefCountedBase" }
%"class.std::__1::unique_ptr.1646" = type { %"class.std::__1::__compressed_pair.1647" }
%"class.std::__1::__compressed_pair.1647" = type { %"struct.std::__1::__compressed_pair_elem.1648" }
%"struct.std::__1::__compressed_pair_elem.1648" = type { %"struct.blink::HitTestData"* }
%"struct.blink::HitTestData" = type { %"class.WTF::Vector.1649", %"class.WTF::Vector.1654", %"class.blink::IntRect", %"class.blink::TransformPaintPropertyNode"* }
%"class.WTF::Vector.1649" = type { %"class.WTF::VectorBuffer.1650" }
%"class.WTF::VectorBuffer.1650" = type { %"class.WTF::VectorBufferBase.1651" }
%"class.WTF::VectorBufferBase.1651" = type { %"struct.blink::TouchActionRect"*, i32, i32 }
%"struct.blink::TouchActionRect" = type { %"class.blink::IntRect", i32 }
%"class.WTF::Vector.1654" = type { %"class.WTF::VectorBuffer.1655" }
%"class.WTF::VectorBuffer.1655" = type { %"class.WTF::VectorBufferBase.1656" }
%"class.WTF::VectorBufferBase.1656" = type { %"class.blink::IntRect"*, i32, i32 }
%"class.blink::TransformPaintPropertyNode" = type { %"class.blink::TransformPaintPropertyNodeOrAlias", %"struct.blink::TransformPaintPropertyNode::State", %"class.std::__1::unique_ptr.1674" }
%"struct.blink::TransformPaintPropertyNode::State" = type { %"class.blink::TransformPaintPropertyNode::TransformAndOrigin", %class.scoped_refptr.1667, %"struct.blink::TransformPaintPropertyNode::State::Flags", i8, i32, i64, %"struct.cc::ElementId", %"class.std::__1::unique_ptr.1668", %"struct.cc::ElementId" }
%"class.blink::TransformPaintPropertyNode::TransformAndOrigin" = type { %"class.blink::FloatSize", %"class.std::__1::unique_ptr.1661" }
%"class.blink::FloatSize" = type { float, float }
%"class.std::__1::unique_ptr.1661" = type { %"class.std::__1::__compressed_pair.1662" }
%"class.std::__1::__compressed_pair.1662" = type { %"struct.std::__1::__compressed_pair_elem.1663" }
%"struct.std::__1::__compressed_pair_elem.1663" = type { %"struct.blink::TransformPaintPropertyNode::TransformAndOrigin::MatrixAndOrigin"* }
%"struct.blink::TransformPaintPropertyNode::TransformAndOrigin::MatrixAndOrigin" = type <{ %"class.blink::TransformationMatrix", %"class.blink::FloatPoint3D", [4 x i8] }>
%"class.blink::TransformationMatrix" = type { %"struct.blink::TransformationMatrix::Matrix4" }
%"struct.blink::TransformationMatrix::Matrix4" = type { [4 x [4 x double]] }
%"class.blink::FloatPoint3D" = type { float, float, float }
%class.scoped_refptr.1667 = type { %"class.blink::ScrollPaintPropertyNode"* }
%"class.blink::ScrollPaintPropertyNode" = type { %"class.blink::PaintPropertyNode.1796", %"struct.blink::ScrollPaintPropertyNode::State" }
%"class.blink::PaintPropertyNode.1796" = type { %"class.WTF::RefCounted.1797", i8, i8, %class.scoped_refptr.1667, i32, i32 }
%"class.WTF::RefCounted.1797" = type { %"class.base::RefCounted.1798" }
%"class.base::RefCounted.1798" = type { %"class.base::subtle::RefCountedBase" }
%"struct.blink::ScrollPaintPropertyNode::State" = type { %"class.blink::IntRect", %"class.blink::IntSize", i8, i8, i8, i8, i32, %"struct.cc::ElementId", %"struct.cc::OverscrollBehavior", %"class.absl::optional.1799" }
%"struct.cc::OverscrollBehavior" = type { i32, i32 }
%"class.absl::optional.1799" = type { %"class.absl::optional_internal::optional_data.1800" }
%"class.absl::optional_internal::optional_data.1800" = type { %"class.absl::optional_internal::optional_data_base.1801" }
%"class.absl::optional_internal::optional_data_base.1801" = type { %"class.absl::optional_internal::optional_data_dtor_base.1802" }
%"class.absl::optional_internal::optional_data_dtor_base.1802" = type { i8, %union.anon.1803 }
%union.anon.1803 = type { %"class.cc::SnapContainerData" }
%"class.cc::SnapContainerData" = type { %"struct.cc::ScrollSnapType", %"class.gfx::RectF", %"class.gfx::ScrollOffset", %"class.gfx::ScrollOffset", %"class.std::__1::vector.1804", %"struct.cc::TargetSnapAreaElementIds" }
%"struct.cc::ScrollSnapType" = type { i8, i32, i32 }
%"class.gfx::RectF" = type { %"class.gfx::PointF", %"class.gfx::SizeF" }
%"class.gfx::PointF" = type { float, float }
%"class.gfx::SizeF" = type { float, float }
%"class.gfx::ScrollOffset" = type { float, float }
%"class.std::__1::vector.1804" = type { %"class.std::__1::__vector_base.1805" }
%"class.std::__1::__vector_base.1805" = type { %"struct.cc::SnapAreaData"*, %"struct.cc::SnapAreaData"*, %"class.std::__1::__compressed_pair.1806" }
%"struct.cc::SnapAreaData" = type { %"struct.cc::ScrollSnapAlign", %"class.gfx::RectF", i8, %"struct.cc::ElementId" }
%"struct.cc::ScrollSnapAlign" = type { i32, i32 }
%"class.std::__1::__compressed_pair.1806" = type { %"struct.std::__1::__compressed_pair_elem.1807" }
%"struct.std::__1::__compressed_pair_elem.1807" = type { %"struct.cc::SnapAreaData"* }
%"struct.cc::TargetSnapAreaElementIds" = type { %"struct.cc::ElementId", %"struct.cc::ElementId" }
%"struct.blink::TransformPaintPropertyNode::State::Flags" = type { i8 }
%"class.std::__1::unique_ptr.1668" = type { %"class.std::__1::__compressed_pair.1669" }
%"class.std::__1::__compressed_pair.1669" = type { %"struct.std::__1::__compressed_pair_elem.1670" }
%"struct.std::__1::__compressed_pair_elem.1670" = type { %"struct.cc::StickyPositionConstraint"* }
%"struct.cc::StickyPositionConstraint" = type { i8, float, float, float, float, %"class.gfx::RectF", %"class.gfx::RectF", %"class.gfx::RectF", %"struct.cc::ElementId", %"struct.cc::ElementId" }
%"struct.cc::ElementId" = type { i64 }
%"class.std::__1::unique_ptr.1674" = type { %"class.std::__1::__compressed_pair.1675" }
%"class.std::__1::__compressed_pair.1675" = type { %"struct.std::__1::__compressed_pair_elem.1676" }
%"struct.std::__1::__compressed_pair_elem.1676" = type { %"class.blink::GeometryMapperTransformCache"* }
%"class.blink::GeometryMapperTransformCache" = type <{ %"class.blink::FloatSize", %"class.blink::TransformPaintPropertyNode"*, %"class.std::__1::unique_ptr.1677", %"class.std::__1::unique_ptr.1683", i32, [4 x i8] }>
%"class.std::__1::unique_ptr.1677" = type { %"class.std::__1::__compressed_pair.1678" }
%"class.std::__1::__compressed_pair.1678" = type { %"struct.std::__1::__compressed_pair_elem.1679" }
%"struct.std::__1::__compressed_pair_elem.1679" = type { %"struct.blink::GeometryMapperTransformCache::PlaneRootTransform"* }
%"struct.blink::GeometryMapperTransformCache::PlaneRootTransform" = type <{ %"class.blink::TransformationMatrix", %"class.blink::TransformationMatrix", %"class.blink::TransformPaintPropertyNode"*, i8, [7 x i8] }>
%"class.std::__1::unique_ptr.1683" = type { %"class.std::__1::__compressed_pair.1684" }
%"class.std::__1::__compressed_pair.1684" = type { %"struct.std::__1::__compressed_pair_elem.1685" }
%"struct.std::__1::__compressed_pair_elem.1685" = type { %"struct.blink::GeometryMapperTransformCache::ScreenTransform"* }
%"struct.blink::GeometryMapperTransformCache::ScreenTransform" = type <{ %"class.blink::TransformationMatrix", %"class.blink::TransformationMatrix", i8, i8, [6 x i8] }>
%"class.std::__1::unique_ptr.1695" = type { %"class.std::__1::__compressed_pair.1696" }
%"class.std::__1::__compressed_pair.1696" = type { %"struct.std::__1::__compressed_pair_elem.1697" }
%"struct.std::__1::__compressed_pair_elem.1697" = type { %"struct.blink::LayerSelectionData"* }
%"struct.blink::LayerSelectionData" = type { %"class.absl::optional.1698", %"class.absl::optional.1698" }
%"class.absl::optional.1698" = type { %"class.absl::optional_internal::optional_data.1699" }
%"class.absl::optional_internal::optional_data.1699" = type { %"class.absl::optional_internal::optional_data_base.1700" }
%"class.absl::optional_internal::optional_data_base.1700" = type { %"class.absl::optional_internal::optional_data_dtor_base.1701" }
%"class.absl::optional_internal::optional_data_dtor_base.1701" = type { i8, [3 x i8], %union.anon.1702 }
%union.anon.1702 = type { %"struct.blink::PaintedSelectionBound" }
%"struct.blink::PaintedSelectionBound" = type <{ i32, %"class.blink::IntPoint", %"class.blink::IntPoint", i8, [3 x i8] }>
%"class.blink::PaintChunker" = type <{ %"class.WTF::Vector.1640"*, %"class.absl::optional.1708", %"class.blink::PropertyTreeStateOrAlias", %"class.blink::Region", i8, i8, i8, i8, %"class.blink::Color", float, [4 x i8] }>
%"class.absl::optional.1708" = type { %"class.absl::optional_internal::optional_data.1709" }
%"class.absl::optional_internal::optional_data.1709" = type { %"class.absl::optional_internal::optional_data_base.1710" }
%"class.absl::optional_internal::optional_data_base.1710" = type { %"class.absl::optional_internal::optional_data_dtor_base.1711" }
%"class.absl::optional_internal::optional_data_dtor_base.1711" = type { i8, %union.anon.1712 }
%union.anon.1712 = type { %"struct.blink::DisplayItem::Id" }
%"class.blink::PropertyTreeStateOrAlias" = type { %"class.blink::TransformPaintPropertyNodeOrAlias"*, %"class.blink::ClipPaintPropertyNodeOrAlias"*, %"class.blink::EffectPaintPropertyNodeOrAlias"* }
%"class.blink::Region" = type { %"class.blink::IntRect", %"class.blink::Region::Shape" }
%"class.blink::Region::Shape" = type { %"class.WTF::Vector.1713", %"class.WTF::Vector.1718" }
%"class.WTF::Vector.1713" = type { %"class.WTF::VectorBuffer.1714" }
%"class.WTF::VectorBuffer.1714" = type { %"class.WTF::VectorBufferBase.1715", [128 x i8] }
%"class.WTF::VectorBufferBase.1715" = type { i32*, i32, i32 }
%"class.WTF::Vector.1718" = type { %"class.WTF::VectorBuffer.1719" }
%"class.WTF::VectorBuffer.1719" = type { %"class.WTF::VectorBufferBase.1720", [128 x i8] }
%"class.WTF::VectorBufferBase.1720" = type { %"struct.blink::Region::Span"*, i32, i32 }
%"struct.blink::Region::Span" = type { i32, i32 }
%"class.WTF::Vector.1723" = type { %"class.WTF::VectorBuffer.1724" }
%"class.WTF::VectorBuffer.1724" = type { %"class.WTF::VectorBufferBase.1725" }
%"class.WTF::VectorBufferBase.1725" = type { %"struct.blink::FrameFirstPaint"*, i32, i32 }
%"struct.blink::FrameFirstPaint" = type <{ i8*, i8, [7 x i8] }>
%"class.WTF::HashMap.1728" = type { %"class.WTF::HashTable.1729" }
%"class.WTF::HashTable.1729" = type <{ %"struct.WTF::KeyValuePair.1732"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1732" = type opaque
%"struct.blink::PaintController::SubsequencesData" = type { %"class.WTF::HashMap.1733", %"class.WTF::Vector.1738" }
%"class.WTF::HashMap.1733" = type { %"class.WTF::HashTable.1734" }
%"class.WTF::HashTable.1734" = type <{ %"struct.WTF::KeyValuePair.1737"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1737" = type opaque
%"class.WTF::Vector.1738" = type { %"class.WTF::VectorBuffer.1739" }
%"class.WTF::VectorBuffer.1739" = type { %"class.WTF::VectorBufferBase.1740" }
%"class.WTF::VectorBufferBase.1740" = type { %"struct.blink::PaintController::SubsequenceMarkers"*, i32, i32 }
%"struct.blink::PaintController::SubsequenceMarkers" = type { %"class.blink::DisplayItemClient"*, i32, i32 }
%"class.std::__1::unique_ptr.1746" = type { %"class.std::__1::__compressed_pair.1747" }
%"class.std::__1::__compressed_pair.1747" = type { %"struct.std::__1::__compressed_pair_elem.1748" }
%"struct.std::__1::__compressed_pair_elem.1748" = type { %"class.blink::PaintArtifactCompositor"* }
%"class.blink::PaintArtifactCompositor" = type opaque
%"class.WTF::Vector.1752" = type { %"class.WTF::VectorBuffer.1753" }
%"class.WTF::VectorBuffer.1753" = type { %"class.WTF::VectorBufferBase.1754" }
%"class.WTF::VectorBufferBase.1754" = type { %"struct.blink::PreCompositedLayerInfo"*, i32, i32 }
%"struct.blink::PreCompositedLayerInfo" = type opaque
%class.scoped_refptr.1757 = type { %"class.blink::LocalFrameUkmAggregator"* }
%"class.blink::LocalFrameUkmAggregator" = type opaque
%"class.blink::Member.1758" = type { %"class.blink::MemberBase.1759" }
%"class.blink::MemberBase.1759" = type { %"class.blink::LayoutShiftTracker"* }
%"class.blink::LayoutShiftTracker" = type opaque
%"class.blink::Member.1760" = type { %"class.blink::MemberBase.1761" }
%"class.blink::MemberBase.1761" = type { %"class.blink::PaintTimingDetector"* }
%"class.blink::PaintTimingDetector" = type opaque
%"class.blink::Member.1762" = type { %"class.blink::MemberBase.1763" }
%"class.blink::MemberBase.1763" = type { %"class.blink::MobileFriendlinessChecker"* }
%"class.blink::MobileFriendlinessChecker" = type opaque
%"class.blink::HeapHashSet.1764" = type { %"class.WTF::HashSet.1767" }
%"class.WTF::HashSet.1767" = type { %"class.WTF::HashTable.1768" }
%"class.WTF::HashTable.1768" = type <{ %"class.blink::WeakMember.1770"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1770" = type opaque
%"class.blink::HeapHashSet.1771" = type { %"class.WTF::HashSet.1774" }
%"class.WTF::HashSet.1774" = type { %"class.WTF::HashTable.1775" }
%"class.WTF::HashTable.1775" = type <{ %"class.blink::WeakMember.1777"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1777" = type opaque
%"class.std::__1::unique_ptr.1778" = type { %"class.std::__1::__compressed_pair.1779" }
%"class.std::__1::__compressed_pair.1779" = type { %"struct.std::__1::__compressed_pair_elem.1780" }
%"struct.std::__1::__compressed_pair_elem.1780" = type { %"class.blink::OverlayInterstitialAdDetector"* }
%"class.blink::OverlayInterstitialAdDetector" = type <{ i8, i8, [6 x i8], %"class.base::Time", %"class.blink::IntSize", i32, i8, [3 x i8], i32, i32, i8, i8, [6 x i8] }>
%"class.base::Time" = type { %"class.base::time_internal::TimeBase.1781" }
%"class.base::time_internal::TimeBase.1781" = type { i64 }
%"class.std::__1::unique_ptr.1785" = type { %"class.std::__1::__compressed_pair.1786" }
%"class.std::__1::__compressed_pair.1786" = type { %"struct.std::__1::__compressed_pair_elem.1787" }
%"struct.std::__1::__compressed_pair_elem.1787" = type { %"class.blink::StickyAdDetector"* }
%"class.blink::StickyAdDetector" = type <{ %"class.absl::optional.1788", i32, i32, i32, i8, [3 x i8] }>
%"class.absl::optional.1788" = type { %"class.absl::optional_internal::optional_data.1789" }
%"class.absl::optional_internal::optional_data.1789" = type { %"class.absl::optional_internal::optional_data_base.1790" }
%"class.absl::optional_internal::optional_data_base.1790" = type { %"class.absl::optional_internal::optional_data_dtor_base.1791" }
%"class.absl::optional_internal::optional_data_dtor_base.1791" = type { i8, %union.anon.1792 }
%union.anon.1792 = type { %"class.base::Time" }
%"class.WTF::Vector.767" = type { %"class.WTF::VectorBuffer.768" }
%"class.WTF::VectorBuffer.768" = type { %"class.WTF::VectorBufferBase.769" }
%"class.WTF::VectorBufferBase.769" = type { %"class.base::OnceCallback"*, i32, i32 }
%"class.blink::Member.553" = type { %"class.blink::MemberBase.554" }
%"class.blink::MemberBase.554" = type { %"class.blink::Element"* }
%"class.blink::Element" = type { %"class.blink::ContainerNode", %"class.blink::Animatable", %"class.blink::QualifiedName", %"class.blink::Member.565" }
%"class.blink::ContainerNode" = type { %"class.blink::Node", %"class.blink::Member.555", %"class.blink::Member.555" }
%"class.blink::Node" = type { %"class.blink::EventTarget", i32, %"class.blink::Member.555", %"class.blink::Member.557", %"class.blink::Member.555", %"class.blink::Member.555", %"class.blink::Member.559" }
%"class.blink::Member.557" = type { %"class.blink::MemberBase.558" }
%"class.blink::MemberBase.558" = type { %"class.blink::TreeScope"* }
%"class.blink::TreeScope" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::Member.679", %"class.blink::Member.681", %"class.blink::Member.557", %"class.blink::Member.683", %"class.blink::Member.683", %"class.blink::Member.705", %"class.blink::Member.707", %"class.blink::Member.709", %"class.blink::RadioButtonGroupScope", %"class.blink::Member.714", %"class.blink::HeapVector.716" }
%"class.blink::Member.679" = type { %"class.blink::MemberBase.680" }
%"class.blink::MemberBase.680" = type { %"class.blink::ContainerNode"* }
%"class.blink::Member.681" = type { %"class.blink::MemberBase.682" }
%"class.blink::MemberBase.682" = type { %"class.blink::Document"* }
%"class.blink::Document" = type { %"class.blink::ContainerNode", %"class.blink::TreeScope", %"class.blink::UseCounter", %"class.blink::Supplementable.759", i32, %"class.blink::DocumentLifecycle", i8, i8, %"class.WTF::Vector.767", %"class.WTF::Vector.767", i8, i32, %"class.blink::Member.772", %"class.blink::Member.839", %"class.blink::Member.1095", %"class.blink::Member.1097", %"class.blink::Member.1099", %"class.blink::Member.1101", i8, %"class.blink::KURL", %"class.blink::KURL", %"class.blink::KURL", %"class.blink::KURL", %"class.blink::KURL", %"class.std::__1::unique_ptr.1103", %"class.blink::KURL", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.blink::Member.1109", %"class.blink::Member.1111", %"class.blink::Member.722", i32, i32, i32, i8, %"class.blink::TaskHandle", %"class.blink::TaskHandle", %"class.WTF::Vector.1113", i8, i32, i8, %"class.blink::HeapTaskRunnerTimer", %"class.blink::HeapVector.698", %"class.blink::Member.553", %"class.blink::Member.1071", %"class.blink::Member.553", %"class.blink::Member.553", %"class.blink::Member.553", %"class.blink::UserActionElementSet", %"class.blink::Member.1323", double, double, i64, i64, %"class.blink::HeapHashSet.1325", %"class.blink::HeapHashSet.1332", i16, i8, %"class.blink::Member.1339", %"class.blink::Member.1341", %"class.blink::Member.1343", %"class.blink::Member.1345", %"class.blink::TextLinkColors", %"class.blink::Member.1347", i8, [7 x i8], %"class.blink::HeapHashMap.1349", i32, i32, i8, i8, i8, i32, i32, i32, i8, %"class.WTF::String", %"class.WTF::String", %"class.blink::Member.553", %"class.WTF::Vector.1356", %"class.blink::Member.1361", %"class.blink::Member.1363", i8, %"class.blink::Member.553", i8, i32, i8, %"class.base::ElapsedTimer", %"class.blink::Member.1365", %"class.blink::HeapVector.1367", %"class.std::__1::unique_ptr.1375", %"class.WTF::String", %"class.WTF::String", i8, %"class.WTF::AtomicString", %"class.blink::DocumentEncodingData", i8, i8, [6 x i8], %"class.blink::HeapHashSet.1381", %"class.blink::LiveNodeListRegistry", %"class.blink::Member.1394", %"class.WTF::Vector.1396", i8, i8, %"class.std::__1::unique_ptr.1401", %"class.blink::NthIndexCache"*, i8, i8, i8, i8, i8, i8, %"class.blink::LayoutView"*, %"class.blink::HeapVector.698", %"class.blink::HeapVector.1407", i32, i8, %"class.blink::HeapTaskRunnerTimer", %"class.blink::HeapTaskRunnerTimer", %"class.blink::DocumentTiming", %"class.blink::Member.1415", i8, i32, %"class.blink::Member.1417", %"class.blink::Member.1419", %"class.blink::Member.1421", %"class.blink::HeapTaskRunnerTimer", %"class.blink::Member.1423", %"class.WTF::HashMap.1425", %"class.blink::Member.1430", %"class.blink::Member.1432", %"class.blink::Member.1434", %"class.blink::Member.1436", %"class.blink::Member.681", %"class.blink::Member.681", %"class.blink::HeapTaskRunnerTimer", %"class.blink::HeapHashSet.1438", i8, i32, %"class.blink::Member.1445", %"class.blink::Member.1447", i32, %"class.blink::Member.1449", %"class.blink::Member.1451", %"class.blink::Member.1453", %"class.std::__1::unique_ptr.1455", i64, %"class.std::__1::unique_ptr.1461", i32, i32, %"class.blink::Member.1467", %"class.blink::Member.1469", %"class.blink::Member.1471", i8, i32, i32, i32, i32, i32, i32, i32, i8, i8, %"class.blink::Member.1473", %"class.WTF::Vector.1082", %"class.WTF::AtomicString", %"class.blink::HeapHashMap.1475", %"class.blink::Member.1482", %"class.std::__1::unique_ptr.1484", %"class.blink::Member.1490", i8, i8, %"class.WTF::String", %"class.blink::Member.1492", i8, [7 x i8], %"class.blink::HeapHashMap.1494", %"class.blink::HeapObserverSet.1501", %"class.blink::Member.1509", i8, i8, i8, i8, i8, i8, i8, %"class.blink::Member.1511", i32, i8, i8, %"class.blink::WeakMember.1513", %"class.blink::Member.1514" }
%"class.blink::UseCounter" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::Supplementable.759" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.760" }
%"class.blink::HeapHashMap.760" = type { %"class.WTF::HashMap.763" }
%"class.WTF::HashMap.763" = type { %"class.WTF::HashTable.764" }
%"class.WTF::HashTable.764" = type <{ %"struct.WTF::KeyValuePair.766"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.766" = type opaque
%"class.blink::DocumentLifecycle" = type <{ i32, i32, i32, i8, i8, [2 x i8] }>
%"class.blink::Member.772" = type { %"class.blink::MemberBase.773" }
%"class.blink::MemberBase.773" = type { %"class.blink::LocalDOMWindow"* }
%"class.blink::LocalDOMWindow" = type { %"class.blink::DOMWindow", %"class.blink::ExecutionContext.base", %"class.blink::Supplementable.931", %"class.blink::ThreadState::PrefinalizerRegistration", %"class.blink::Member.939", %"class.blink::Member.681", %"class.blink::Member.941", i8, %"class.blink::Member.943", %"class.blink::Member.945", %"class.blink::Member.947", %"class.blink::Member.947", %"class.blink::Member.947", %"class.blink::Member.947", %"class.blink::Member.947", %"class.blink::Member.947", %"class.blink::Member.949", %"class.blink::Member.951", %"class.blink::Member.953", %"class.blink::Member.955", %"class.blink::Member.957", %"class.WTF::String", %"class.WTF::String", %"class.WTF::Vector.898", %"class.blink::Member.959", %class.scoped_refptr.961, %"class.blink::HeapHashSet.1023", %"class.blink::Member.1030", %"class.blink::HeapHashMap.1043", %"class.std::__1::unique_ptr.1050", %"class.blink::Member.1056", %"class.blink::Member.1075", %"class.blink::Member.1077", %"class.blink::Member.1079", %"class.WTF::Vector.1082", %"class.util::TokenType", %"class.WTF::HashSet.1087", %"class.WTF::Deque" }
%"class.blink::ExecutionContext.base" = type <{ %"class.blink::Supplementable.774", %"class.blink::MojoBindingContext", %"class.blink::ConsoleLogger", %"class.blink::UseCounter", %"class.blink::FeatureContext", %"class.v8::Isolate"*, %"class.blink::SecurityContext", %"class.blink::Member.845", i32, i8, [3 x i8], %"class.blink::HeapVector.847", i32, i8, i8, i8, i8, i8, i8, [6 x i8], %"class.blink::Member.855", %"class.blink::Member.857", %"class.blink::DOMTimerCoordinator", i32, [4 x i8], %"class.std::__1::unique_ptr.866", %"class.blink::Member.927", %"class.blink::Member.929", i8 }>
%"class.blink::Supplementable.774" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.775" }
%"class.blink::HeapHashMap.775" = type { %"class.WTF::HashMap.778" }
%"class.WTF::HashMap.778" = type { %"class.WTF::HashTable.779" }
%"class.WTF::HashTable.779" = type <{ %"struct.WTF::KeyValuePair.781"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.781" = type opaque
%"class.blink::MojoBindingContext" = type { %"class.blink::ContextLifecycleNotifier", %"class.blink::Supplementable.789" }
%"class.blink::Supplementable.789" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.790" }
%"class.blink::HeapHashMap.790" = type { %"class.WTF::HashMap.793" }
%"class.WTF::HashMap.793" = type { %"class.WTF::HashTable.794" }
%"class.WTF::HashTable.794" = type <{ %"struct.WTF::KeyValuePair.796"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.796" = type { i8*, %"class.blink::Member.2037" }
%"class.blink::Member.2037" = type { %"class.blink::MemberBase.2038" }
%"class.blink::MemberBase.2038" = type { %"class.blink::Supplement"* }
%"class.blink::Supplement" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::Member.2039" }
%"class.blink::Member.2039" = type { %"class.blink::MemberBase.2040" }
%"class.blink::MemberBase.2040" = type { %"class.blink::MojoBindingContext"* }
%"class.blink::ConsoleLogger" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::FeatureContext" = type { i32 (...)** }
%"class.v8::Isolate" = type { i8 }
%"class.blink::SecurityContext" = type { i32 (...)**, i32, %class.scoped_refptr.797, %"class.std::__1::unique_ptr.806", %"class.std::__1::unique_ptr.806", %"class.std::__1::unique_ptr.833", %"class.std::__1::unique_ptr.833", %"class.blink::Member.839", i32, [4 x i8], %"class.WTF::HashSet.841", i32, i32 }
%class.scoped_refptr.797 = type { %"class.blink::SecurityOrigin"* }
%"class.blink::SecurityOrigin" = type { %"class.WTF::RefCounted.798", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", i16, %"class.absl::optional.800", i8, i8, i8, i8, i8, i8, %"class.base::UnguessableToken", %class.scoped_refptr.805 }
%"class.WTF::RefCounted.798" = type { %"class.base::RefCounted.799" }
%"class.base::RefCounted.799" = type { %"class.base::subtle::RefCountedBase" }
%"class.absl::optional.800" = type { %"class.absl::optional_internal::optional_data.801" }
%"class.absl::optional_internal::optional_data.801" = type { %"class.absl::optional_internal::optional_data_base.802" }
%"class.absl::optional_internal::optional_data_base.802" = type { %"class.absl::optional_internal::optional_data_dtor_base.803" }
%"class.absl::optional_internal::optional_data_dtor_base.803" = type { i8, %union.anon.804 }
%union.anon.804 = type { %"class.url::Origin::Nonce" }
%"class.url::Origin::Nonce" = type { %"class.base::UnguessableToken" }
%class.scoped_refptr.805 = type { %"class.blink::SecurityOrigin"* }
%"class.std::__1::unique_ptr.806" = type { %"class.std::__1::__compressed_pair.807" }
%"class.std::__1::__compressed_pair.807" = type { %"struct.std::__1::__compressed_pair_elem.808" }
%"struct.std::__1::__compressed_pair_elem.808" = type { %"class.blink::PermissionsPolicy"* }
%"class.blink::PermissionsPolicy" = type { %"class.url::Origin", %"class.std::__1::map.809", %"class.std::__1::map.820", %"class.std::__1::map.829"* }
%"class.url::Origin" = type { %"class.url::SchemeHostPort", %"class.absl::optional.800" }
%"class.url::SchemeHostPort" = type <{ %"class.std::__1::basic_string", %"class.std::__1::basic_string", i16, [6 x i8] }>
%"class.std::__1::map.809" = type { %"class.std::__1::__tree.810" }
%"class.std::__1::__tree.810" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.811", %"class.std::__1::__compressed_pair.815" }
%"class.std::__1::__compressed_pair.811" = type { %"struct.std::__1::__compressed_pair_elem.312" }
%"class.std::__1::__compressed_pair.815" = type { %"struct.std::__1::__compressed_pair_elem.317" }
%"class.std::__1::map.820" = type { %"class.std::__1::__tree.821" }
%"class.std::__1::__tree.821" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.822", %"class.std::__1::__compressed_pair.826" }
%"class.std::__1::__compressed_pair.822" = type { %"struct.std::__1::__compressed_pair_elem.312" }
%"class.std::__1::__compressed_pair.826" = type { %"struct.std::__1::__compressed_pair_elem.317" }
%"class.std::__1::map.829" = type opaque
%"class.std::__1::unique_ptr.833" = type { %"class.std::__1::__compressed_pair.834" }
%"class.std::__1::__compressed_pair.834" = type { %"struct.std::__1::__compressed_pair_elem.835" }
%"struct.std::__1::__compressed_pair_elem.835" = type { %"class.blink::DocumentPolicy"* }
%"class.blink::DocumentPolicy" = type opaque
%"class.WTF::HashSet.841" = type { %"class.WTF::HashTable.842" }
%"class.WTF::HashTable.842" = type <{ i32*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.845" = type { %"class.blink::MemberBase.846" }
%"class.blink::MemberBase.846" = type { %"class.blink::Agent"* }
%"class.blink::Agent" = type opaque
%"class.blink::HeapVector.847" = type { %"class.WTF::Vector.850" }
%"class.WTF::Vector.850" = type { %"class.WTF::VectorBuffer.851" }
%"class.WTF::VectorBuffer.851" = type { %"class.WTF::VectorBufferBase.852" }
%"class.WTF::VectorBufferBase.852" = type { %"class.blink::Member.853"*, i32, i32 }
%"class.blink::Member.853" = type opaque
%"class.blink::Member.855" = type { %"class.blink::MemberBase.856" }
%"class.blink::MemberBase.856" = type { %"class.blink::PublicURLManager"* }
%"class.blink::PublicURLManager" = type opaque
%"class.blink::Member.857" = type { %"class.blink::MemberBase.858" }
%"class.blink::MemberBase.858" = type { %"class.blink::ContentSecurityPolicyDelegate"* }
%"class.blink::ContentSecurityPolicyDelegate" = type opaque
%"class.blink::DOMTimerCoordinator" = type { %"class.blink::HeapHashMap.859", i32, i32 }
%"class.blink::HeapHashMap.859" = type { %"class.WTF::HashMap.862" }
%"class.WTF::HashMap.862" = type { %"class.WTF::HashTable.863" }
%"class.WTF::HashTable.863" = type <{ %"struct.WTF::KeyValuePair.865"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.865" = type opaque
%"class.std::__1::unique_ptr.866" = type { %"class.std::__1::__compressed_pair.867" }
%"class.std::__1::__compressed_pair.867" = type { %"struct.std::__1::__compressed_pair_elem.868" }
%"struct.std::__1::__compressed_pair_elem.868" = type { %"class.blink::PolicyContainer"* }
%"class.blink::PolicyContainer" = type { %"class.mojo::StructPtr.869", %"class.mojo::AssociatedRemote" }
%"class.mojo::StructPtr.869" = type { %"class.std::__1::unique_ptr.870" }
%"class.std::__1::unique_ptr.870" = type { %"class.std::__1::__compressed_pair.871" }
%"class.std::__1::__compressed_pair.871" = type { %"struct.std::__1::__compressed_pair_elem.872" }
%"struct.std::__1::__compressed_pair_elem.872" = type { %"class.blink::mojom::blink::PolicyContainerPolicies"* }
%"class.blink::mojom::blink::PolicyContainerPolicies" = type { i32, i32, %"class.WTF::Vector.873" }
%"class.WTF::Vector.873" = type { %"class.WTF::VectorBuffer.874" }
%"class.WTF::VectorBuffer.874" = type { %"class.WTF::VectorBufferBase.875" }
%"class.WTF::VectorBufferBase.875" = type { %"class.mojo::StructPtr.876"*, i32, i32 }
%"class.mojo::StructPtr.876" = type { %"class.std::__1::unique_ptr.877" }
%"class.std::__1::unique_ptr.877" = type { %"class.std::__1::__compressed_pair.878" }
%"class.std::__1::__compressed_pair.878" = type { %"struct.std::__1::__compressed_pair_elem.879" }
%"struct.std::__1::__compressed_pair_elem.879" = type { %"class.network::mojom::blink::ContentSecurityPolicy"* }
%"class.network::mojom::blink::ContentSecurityPolicy" = type { %"class.mojo::StructPtr.880", %"class.WTF::HashMap.887", %"class.WTF::HashMap.892", i8, i8, i8, i32, %"class.mojo::InlinedStructPtr.897", i8, %"class.WTF::Vector.898", i32, %"class.mojo::StructPtr.903", %"class.WTF::Vector.898" }
%"class.mojo::StructPtr.880" = type { %"class.std::__1::unique_ptr.881" }
%"class.std::__1::unique_ptr.881" = type { %"class.std::__1::__compressed_pair.882" }
%"class.std::__1::__compressed_pair.882" = type { %"struct.std::__1::__compressed_pair_elem.883" }
%"struct.std::__1::__compressed_pair_elem.883" = type { %"class.network::mojom::blink::CSPSource"* }
%"class.network::mojom::blink::CSPSource" = type <{ %"class.WTF::String", %"class.WTF::String", i32, [4 x i8], %"class.WTF::String", i8, i8, [6 x i8] }>
%"class.WTF::HashMap.887" = type { %"class.WTF::HashTable.888" }
%"class.WTF::HashTable.888" = type <{ %"struct.WTF::KeyValuePair.891"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.891" = type opaque
%"class.WTF::HashMap.892" = type { %"class.WTF::HashTable.893" }
%"class.WTF::HashTable.893" = type <{ %"struct.WTF::KeyValuePair.896"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.896" = type opaque
%"class.mojo::InlinedStructPtr.897" = type <{ %"class.network::mojom::blink::ContentSecurityPolicyHeader", i32, [4 x i8] }>
%"class.network::mojom::blink::ContentSecurityPolicyHeader" = type { %"class.WTF::String", i32, i32 }
%"class.mojo::StructPtr.903" = type { %"class.std::__1::unique_ptr.904" }
%"class.std::__1::unique_ptr.904" = type { %"class.std::__1::__compressed_pair.905" }
%"class.std::__1::__compressed_pair.905" = type { %"struct.std::__1::__compressed_pair_elem.906" }
%"struct.std::__1::__compressed_pair_elem.906" = type { %"class.network::mojom::blink::CSPTrustedTypes"* }
%"class.network::mojom::blink::CSPTrustedTypes" = type <{ %"class.WTF::Vector.898", i8, i8, [6 x i8] }>
%"class.mojo::AssociatedRemote" = type { %"class.mojo::internal::AssociatedInterfacePtrState" }
%"class.mojo::internal::AssociatedInterfacePtrState" = type { %"class.mojo::internal::AssociatedInterfacePtrStateBase.base", %"class.std::__1::unique_ptr.918" }
%"class.mojo::internal::AssociatedInterfacePtrStateBase.base" = type <{ %"class.std::__1::unique_ptr.371", i32 }>
%"class.std::__1::unique_ptr.918" = type { %"class.std::__1::__compressed_pair.919" }
%"class.std::__1::__compressed_pair.919" = type { %"struct.std::__1::__compressed_pair_elem.920" }
%"struct.std::__1::__compressed_pair_elem.920" = type { %"class.blink::mojom::blink::PolicyContainerHostProxy"* }
%"class.blink::mojom::blink::PolicyContainerHostProxy" = type { %"class.blink::mojom::blink::PolicyContainerHost", %"class.mojo::MessageReceiverWithResponder"* }
%"class.blink::mojom::blink::PolicyContainerHost" = type { i32 (...)** }
%"class.blink::Member.927" = type { %"class.blink::MemberBase.928" }
%"class.blink::MemberBase.928" = type { %"class.blink::OriginTrialContext"* }
%"class.blink::OriginTrialContext" = type opaque
%"class.blink::Member.929" = type { %"class.blink::MemberBase.930" }
%"class.blink::MemberBase.930" = type { %"class.blink::ContentSecurityPolicy"* }
%"class.blink::ContentSecurityPolicy" = type opaque
%"class.blink::Supplementable.931" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.932" }
%"class.blink::HeapHashMap.932" = type { %"class.WTF::HashMap.935" }
%"class.WTF::HashMap.935" = type { %"class.WTF::HashTable.936" }
%"class.WTF::HashTable.936" = type <{ %"struct.WTF::KeyValuePair.938"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.938" = type opaque
%"class.blink::ThreadState::PrefinalizerRegistration" = type { i8 }
%"class.blink::Member.939" = type { %"class.blink::MemberBase.940" }
%"class.blink::MemberBase.940" = type { %"class.blink::ScriptController"* }
%"class.blink::ScriptController" = type opaque
%"class.blink::Member.941" = type { %"class.blink::MemberBase.942" }
%"class.blink::MemberBase.942" = type { %"class.blink::DOMVisualViewport"* }
%"class.blink::DOMVisualViewport" = type opaque
%"class.blink::Member.943" = type { %"class.blink::MemberBase.944" }
%"class.blink::MemberBase.944" = type { %"class.blink::Screen"* }
%"class.blink::Screen" = type opaque
%"class.blink::Member.945" = type { %"class.blink::MemberBase.946" }
%"class.blink::MemberBase.946" = type { %"class.blink::History"* }
%"class.blink::History" = type opaque
%"class.blink::Member.947" = type { %"class.blink::MemberBase.948" }
%"class.blink::MemberBase.948" = type { %"class.blink::BarProp"* }
%"class.blink::BarProp" = type opaque
%"class.blink::Member.949" = type { %"class.blink::MemberBase.950" }
%"class.blink::MemberBase.950" = type { %"class.blink::Navigator"* }
%"class.blink::Navigator" = type opaque
%"class.blink::Member.951" = type { %"class.blink::MemberBase.952" }
%"class.blink::MemberBase.952" = type { %"class.blink::StyleMedia"* }
%"class.blink::StyleMedia" = type opaque
%"class.blink::Member.953" = type { %"class.blink::MemberBase.954" }
%"class.blink::MemberBase.954" = type { %"class.blink::CustomElementRegistry"* }
%"class.blink::CustomElementRegistry" = type opaque
%"class.blink::Member.955" = type { %"class.blink::MemberBase.956" }
%"class.blink::MemberBase.956" = type { %"class.blink::Modulator"* }
%"class.blink::Modulator" = type opaque
%"class.blink::Member.957" = type { %"class.blink::MemberBase.958" }
%"class.blink::MemberBase.958" = type { %"class.blink::External"* }
%"class.blink::External" = type opaque
%"class.WTF::Vector.898" = type { %"class.WTF::VectorBuffer.899" }
%"class.WTF::VectorBuffer.899" = type { %"class.WTF::VectorBufferBase.900" }
%"class.WTF::VectorBufferBase.900" = type { %"class.WTF::String"*, i32, i32 }
%"class.blink::Member.959" = type { %"class.blink::MemberBase.960" }
%"class.blink::MemberBase.960" = type { %"class.blink::ApplicationCache"* }
%"class.blink::ApplicationCache" = type opaque
%class.scoped_refptr.961 = type { %"class.blink::SerializedScriptValue"* }
%"class.blink::SerializedScriptValue" = type <{ %"class.WTF::ThreadSafeRefCounted", [4 x i8], %"class.std::__1::unique_ptr.963", i64, %"class.WTF::Vector.967", %"class.WTF::Vector.972", %"class.WTF::Vector.978", %"class.WTF::Vector.996", %class.scoped_refptr.797, %"class.WTF::HashMap.1002", %"class.WTF::Vector.1007", %"class.WTF::Vector.967", %"class.WTF::Vector.1013", %"class.WTF::HashMap.1018", i8, [7 x i8] }>
%"class.WTF::ThreadSafeRefCounted" = type { %"class.base::RefCountedThreadSafe.962" }
%"class.base::RefCountedThreadSafe.962" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.std::__1::unique_ptr.963" = type { %"class.std::__1::__compressed_pair.964" }
%"class.std::__1::__compressed_pair.964" = type { %"struct.std::__1::__compressed_pair_elem.965" }
%"struct.std::__1::__compressed_pair_elem.965" = type { i8* }
%"class.WTF::Vector.972" = type { %"class.WTF::VectorBuffer.973" }
%"class.WTF::VectorBuffer.973" = type { %"class.WTF::VectorBufferBase.974", [8 x i8] }
%"class.WTF::VectorBufferBase.974" = type { %class.scoped_refptr.975*, i32, i32 }
%class.scoped_refptr.975 = type { %"class.blink::StaticBitmapImage"* }
%"class.blink::StaticBitmapImage" = type opaque
%"class.WTF::Vector.978" = type { %"class.WTF::VectorBuffer.979" }
%"class.WTF::VectorBuffer.979" = type { %"class.WTF::VectorBufferBase.980" }
%"class.WTF::VectorBufferBase.980" = type { %"class.blink::SerializedScriptValue::Stream"*, i32, i32 }
%"class.blink::SerializedScriptValue::Stream" = type { %"class.blink::MessagePortChannel", %"class.std::__1::unique_ptr.982", %"class.std::__1::unique_ptr.988" }
%"class.blink::MessagePortChannel" = type { %class.scoped_refptr.981 }
%class.scoped_refptr.981 = type { %"class.blink::MessagePortChannel::State"* }
%"class.blink::MessagePortChannel::State" = type opaque
%"class.std::__1::unique_ptr.982" = type { %"class.std::__1::__compressed_pair.983" }
%"class.std::__1::__compressed_pair.983" = type { %"struct.std::__1::__compressed_pair_elem.984" }
%"struct.std::__1::__compressed_pair_elem.984" = type { %"class.blink::ReadableStreamTransferringOptimizer"* }
%"class.blink::ReadableStreamTransferringOptimizer" = type { i32 (...)** }
%"class.std::__1::unique_ptr.988" = type { %"class.std::__1::__compressed_pair.989" }
%"class.std::__1::__compressed_pair.989" = type { %"struct.std::__1::__compressed_pair_elem.990" }
%"struct.std::__1::__compressed_pair_elem.990" = type { %"class.blink::WritableStreamTransferringOptimizer"* }
%"class.blink::WritableStreamTransferringOptimizer" = type { i32 (...)** }
%"class.WTF::Vector.996" = type { %"class.WTF::VectorBuffer.997" }
%"class.WTF::VectorBuffer.997" = type { %"class.WTF::VectorBufferBase.998" }
%"class.WTF::VectorBufferBase.998" = type { %"class.v8::CompiledWasmModule"*, i32, i32 }
%"class.v8::CompiledWasmModule" = type { %"class.std::__1::shared_ptr.999", %"class.std::__1::basic_string" }
%"class.std::__1::shared_ptr.999" = type { %"class.v8::internal::wasm::NativeModule"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::internal::wasm::NativeModule" = type opaque
%"class.std::__1::__shared_weak_count" = type { %"class.std::__1::__shared_count", i64 }
%"class.std::__1::__shared_count" = type { i32 (...)**, i64 }
%"class.WTF::HashMap.1002" = type { %"class.WTF::HashTable.1003" }
%"class.WTF::HashTable.1003" = type <{ %"struct.WTF::KeyValuePair.1006"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1006" = type opaque
%"class.WTF::Vector.1007" = type { %"class.WTF::VectorBuffer.1008" }
%"class.WTF::VectorBuffer.1008" = type { %"class.WTF::VectorBufferBase.1009" }
%"class.WTF::VectorBufferBase.1009" = type { %"class.mojo::ScopedHandleBase.1010"*, i32, i32 }
%"class.mojo::ScopedHandleBase.1010" = type { %"class.mojo::Handle" }
%"class.WTF::Vector.967" = type { %"class.WTF::VectorBuffer.968" }
%"class.WTF::VectorBuffer.968" = type { %"class.WTF::VectorBufferBase.969", [16 x i8] }
%"class.WTF::VectorBufferBase.969" = type { %"class.blink::ArrayBufferContents"*, i32, i32 }
%"class.blink::ArrayBufferContents" = type { %"class.std::__1::shared_ptr" }
%"class.std::__1::shared_ptr" = type { %"class.v8::BackingStore"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::BackingStore" = type { i8 }
%"class.WTF::Vector.1013" = type { %"class.WTF::VectorBuffer.1014" }
%"class.WTF::VectorBuffer.1014" = type { %"class.WTF::VectorBufferBase.1015" }
%"class.WTF::VectorBufferBase.1015" = type { %"class.mojo::PendingRemote"*, i32, i32 }
%"class.mojo::PendingRemote" = type { %"struct.mojo::internal::PendingRemoteState" }
%"struct.mojo::internal::PendingRemoteState" = type { %"class.mojo::ScopedHandleBase", i32 }
%"class.WTF::HashMap.1018" = type { %"class.WTF::HashTable.1019" }
%"class.WTF::HashTable.1019" = type <{ %"struct.WTF::KeyValuePair.1022"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1022" = type { i8**, %"class.std::__1::unique_ptr.2041" }
%"class.std::__1::unique_ptr.2041" = type { %"class.std::__1::__compressed_pair.2042" }
%"class.std::__1::__compressed_pair.2042" = type { %"struct.std::__1::__compressed_pair_elem.2043" }
%"struct.std::__1::__compressed_pair_elem.2043" = type { %"class.blink::SerializedScriptValue::Attachment"* }
%"class.blink::SerializedScriptValue::Attachment" = type { i32 (...)** }
%"class.blink::HeapHashSet.1023" = type { %"class.WTF::HashSet.1026" }
%"class.WTF::HashSet.1026" = type { %"class.WTF::HashTable.1027" }
%"class.WTF::HashTable.1027" = type <{ %"class.blink::WeakMember.1029"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1029" = type opaque
%"class.blink::Member.1030" = type { %"class.blink::MemberBase.1031" }
%"class.blink::MemberBase.1031" = type { %"class.blink::Event"* }
%"class.blink::Event" = type { %"class.blink::ScriptWrappable", %"class.WTF::AtomicString", i16, i32, i8, %"class.blink::probe::AsyncTaskId", %"class.blink::Member.1037", %"class.blink::Member.1037", %"class.blink::Member.1039", %"class.blink::Member.1041", %"class.base::TimeTicks" }
%"class.blink::probe::AsyncTaskId" = type { i8, %"class.absl::optional.1032" }
%"class.absl::optional.1032" = type { %"class.absl::optional_internal::optional_data.1033" }
%"class.absl::optional_internal::optional_data.1033" = type { %"class.absl::optional_internal::optional_data_base.1034" }
%"class.absl::optional_internal::optional_data_base.1034" = type { %"class.absl::optional_internal::optional_data_dtor_base.1035" }
%"class.absl::optional_internal::optional_data_dtor_base.1035" = type { i8, %union.anon.1036 }
%union.anon.1036 = type { i64 }
%"class.blink::Member.1037" = type { %"class.blink::MemberBase.1038" }
%"class.blink::MemberBase.1038" = type { %"class.blink::EventTarget"* }
%"class.blink::Member.1039" = type { %"class.blink::MemberBase.1040" }
%"class.blink::MemberBase.1040" = type { %"class.blink::Event"* }
%"class.blink::Member.1041" = type { %"class.blink::MemberBase.1042" }
%"class.blink::MemberBase.1042" = type { %"class.blink::EventPath"* }
%"class.blink::EventPath" = type opaque
%"class.blink::HeapHashMap.1043" = type { %"class.WTF::HashMap.1046" }
%"class.WTF::HashMap.1046" = type { %"class.WTF::HashTable.1047" }
%"class.WTF::HashTable.1047" = type <{ %"struct.WTF::KeyValuePair.1049"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1049" = type opaque
%"class.std::__1::unique_ptr.1050" = type { %"class.std::__1::__compressed_pair.1051" }
%"class.std::__1::__compressed_pair.1051" = type { %"struct.std::__1::__compressed_pair_elem.1052" }
%"struct.std::__1::__compressed_pair_elem.1052" = type { %"class.blink::FrameOrWorkerScheduler"* }
%"class.blink::Member.1056" = type { %"class.blink::MemberBase.1057" }
%"class.blink::MemberBase.1057" = type { %"class.blink::InputMethodController"* }
%"class.blink::InputMethodController" = type { %"class.blink::ExecutionContextLifecycleObserver.base", %"class.blink::Member.237", %"class.blink::CachedTextInputInfo", %"class.blink::Member.1071", %"class.blink::Member.1073", i8, i32 }
%"class.blink::ExecutionContextLifecycleObserver.base" = type <{ %"class.blink::ContextLifecycleObserver", i32 }>
%"class.blink::CachedTextInputInfo" = type { %"class.blink::Member.1062", %"class.blink::LayoutObject"*, %"class.blink::HeapHashMap.1064", %"class.WTF::String", %"class.blink::CachedTextInputInfo::CachedPlainTextRange", %"class.blink::CachedTextInputInfo::CachedPlainTextRange" }
%"class.blink::Member.1062" = type { %"class.blink::MemberBase.1063" }
%"class.blink::MemberBase.1063" = type { %"class.blink::ContainerNode"* }
%"class.blink::HeapHashMap.1064" = type { %"class.WTF::HashMap.1067" }
%"class.WTF::HashMap.1067" = type { %"class.WTF::HashTable.1068" }
%"class.WTF::HashTable.1068" = type <{ %"struct.WTF::KeyValuePair.1070"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1070" = type opaque
%"class.blink::CachedTextInputInfo::CachedPlainTextRange" = type { %"class.blink::PositionTemplate", %"class.blink::PositionTemplate", i32, i32 }
%"class.blink::PositionTemplate" = type { %"class.blink::Member.555", i32, i32 }
%"class.blink::Member.1073" = type { %"class.blink::MemberBase.1074" }
%"class.blink::MemberBase.1074" = type { %"class.blink::EditContext"* }
%"class.blink::EditContext" = type opaque
%"class.blink::Member.1075" = type { %"class.blink::MemberBase.1076" }
%"class.blink::MemberBase.1076" = type { %"class.blink::SpellChecker"* }
%"class.blink::SpellChecker" = type { %"class.blink::Member.772", %"class.blink::Member.1541", %"class.blink::Member.1543" }
%"class.blink::Member.1541" = type { %"class.blink::MemberBase.1542" }
%"class.blink::MemberBase.1542" = type { %"class.blink::SpellCheckRequester"* }
%"class.blink::SpellCheckRequester" = type opaque
%"class.blink::Member.1543" = type { %"class.blink::MemberBase.1544" }
%"class.blink::MemberBase.1544" = type { %"class.blink::IdleSpellCheckController"* }
%"class.blink::IdleSpellCheckController" = type opaque
%"class.blink::Member.1077" = type { %"class.blink::MemberBase.1078" }
%"class.blink::MemberBase.1078" = type { %"class.blink::TextSuggestionController"* }
%"class.blink::TextSuggestionController" = type { i32 (...)**, i8, %"class.blink::Member.772", %"class.blink::HeapMojoRemote.1536" }
%"class.blink::HeapMojoRemote.1536" = type { %"class.blink::Member.1537" }
%"class.blink::Member.1537" = type { %"class.blink::MemberBase.1538" }
%"class.blink::MemberBase.1538" = type { %"class.blink::HeapMojoRemote<blink::mojom::blink::TextSuggestionHost, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoRemote<blink::mojom::blink::TextSuggestionHost, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type opaque
%"class.blink::Member.1079" = type { %"class.blink::MemberBase.1080" }
%"class.blink::MemberBase.1080" = type { %"class.blink::HeapHashMap.1081"* }
%"class.blink::HeapHashMap.1081" = type opaque
%"class.WTF::HashSet.1087" = type { %"class.WTF::HashTable.1088" }
%"class.WTF::HashTable.1088" = type <{ i32*, i32, i32, i32, [4 x i8] }>
%"class.WTF::Deque" = type { %"class.WTF::Deque<long, 0, WTF::PartitionAllocator>::BackingBuffer", i32, i32 }
%"class.WTF::Deque<long, 0, WTF::PartitionAllocator>::BackingBuffer" = type { %"class.WTF::VectorBuffer.1093" }
%"class.WTF::VectorBuffer.1093" = type { %"class.WTF::VectorBufferBase.1094" }
%"class.WTF::VectorBufferBase.1094" = type { i64*, i32, i32 }
%"class.blink::Member.839" = type { %"class.blink::MemberBase.840" }
%"class.blink::MemberBase.840" = type { %"class.blink::ExecutionContext"* }
%"class.blink::ExecutionContext" = type <{ %"class.blink::Supplementable.774", %"class.blink::MojoBindingContext", %"class.blink::ConsoleLogger", %"class.blink::UseCounter", %"class.blink::FeatureContext", %"class.v8::Isolate"*, %"class.blink::SecurityContext", %"class.blink::Member.845", i32, i8, [3 x i8], %"class.blink::HeapVector.847", i32, i8, i8, i8, i8, i8, i8, [6 x i8], %"class.blink::Member.855", %"class.blink::Member.857", %"class.blink::DOMTimerCoordinator", i32, [4 x i8], %"class.std::__1::unique_ptr.866", %"class.blink::Member.927", %"class.blink::Member.929", i8, [7 x i8] }>
%"class.blink::Member.1095" = type { %"class.blink::MemberBase.1096" }
%"class.blink::MemberBase.1096" = type { %"class.blink::ResourceFetcher"* }
%"class.blink::ResourceFetcher" = type opaque
%"class.blink::Member.1097" = type { %"class.blink::MemberBase.1098" }
%"class.blink::MemberBase.1098" = type { %"class.blink::DocumentParser"* }
%"class.blink::DocumentParser" = type opaque
%"class.blink::Member.1099" = type { %"class.blink::MemberBase.1100" }
%"class.blink::MemberBase.1100" = type { %"class.blink::ContextFeatures"* }
%"class.blink::ContextFeatures" = type opaque
%"class.blink::Member.1101" = type { %"class.blink::MemberBase.1102" }
%"class.blink::MemberBase.1102" = type { %"class.blink::HttpRefreshScheduler"* }
%"class.blink::HttpRefreshScheduler" = type opaque
%"class.std::__1::unique_ptr.1103" = type { %"class.std::__1::__compressed_pair.1104" }
%"class.std::__1::__compressed_pair.1104" = type { %"struct.std::__1::__compressed_pair_elem.1105" }
%"struct.std::__1::__compressed_pair_elem.1105" = type { %"class.blink::OriginAccessEntry"* }
%"class.blink::OriginAccessEntry" = type opaque
%"class.blink::Member.1109" = type { %"class.blink::MemberBase.1110" }
%"class.blink::MemberBase.1110" = type { %"class.blink::DocumentType"* }
%"class.blink::DocumentType" = type opaque
%"class.blink::Member.1111" = type { %"class.blink::MemberBase.1112" }
%"class.blink::MemberBase.1112" = type { %"class.blink::DOMImplementation"* }
%"class.blink::DOMImplementation" = type opaque
%"class.blink::Member.722" = type { %"class.blink::MemberBase.723" }
%"class.blink::MemberBase.723" = type { %"class.blink::CSSStyleSheet"* }
%"class.blink::CSSStyleSheet" = type { %"class.blink::StyleSheet", %"class.blink::Member.724", i8, i8, i8, i8, i8, %"class.WTF::String", %class.scoped_refptr.726, %"class.WTF::Vector.727", %"class.WTF::Vector.727", %"class.blink::Member.555", %"class.blink::Member.732", %"class.blink::HeapHashSet.736", %"class.blink::Member.681", %"class.WTF::HashSet.743", %"class.WTF::TextPosition", %"class.blink::Member.747", %"class.blink::HeapVector.749", %"class.blink::Member.756" }
%"class.blink::StyleSheet" = type { %"class.blink::ScriptWrappable" }
%"class.blink::Member.724" = type { %"class.blink::MemberBase.725" }
%"class.blink::MemberBase.725" = type { %"class.blink::StyleSheetContents"* }
%"class.blink::StyleSheetContents" = type opaque
%class.scoped_refptr.726 = type { %"class.blink::MediaQuerySet"* }
%"class.blink::MediaQuerySet" = type opaque
%"class.WTF::Vector.727" = type { %"class.WTF::VectorBuffer.728" }
%"class.WTF::VectorBuffer.728" = type { %"class.WTF::VectorBufferBase.729" }
%"class.WTF::VectorBufferBase.729" = type { %"class.blink::MediaQueryResult"*, i32, i32 }
%"class.blink::MediaQueryResult" = type opaque
%"class.blink::Member.732" = type { %"class.blink::MemberBase.733" }
%"class.blink::MemberBase.733" = type { %"class.blink::CSSRule"* }
%"class.blink::CSSRule" = type { %"class.blink::ScriptWrappable", i8, %"class.blink::Member.734" }
%"class.blink::Member.734" = type { %"class.blink::MemberBase.735" }
%"class.blink::MemberBase.735" = type { %"class.blink::ScriptWrappable"* }
%"class.blink::HeapHashSet.736" = type { %"class.WTF::HashSet.739" }
%"class.WTF::HashSet.739" = type { %"class.WTF::HashTable.740" }
%"class.WTF::HashTable.740" = type <{ %"class.blink::WeakMember.742"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.742" = type { %"class.blink::MemberBase.558" }
%"class.WTF::HashSet.743" = type { %"class.WTF::HashTable.744" }
%"class.WTF::HashTable.744" = type <{ %"class.WTF::AtomicString"*, i32, i32, i32, [4 x i8] }>
%"class.WTF::TextPosition" = type { %"class.WTF::OrdinalNumber", %"class.WTF::OrdinalNumber" }
%"class.WTF::OrdinalNumber" = type { i32 }
%"class.blink::Member.747" = type { %"class.blink::MemberBase.748" }
%"class.blink::MemberBase.748" = type { %"class.blink::MediaList"* }
%"class.blink::MediaList" = type opaque
%"class.blink::HeapVector.749" = type { %"class.WTF::Vector.752" }
%"class.WTF::Vector.752" = type { %"class.WTF::VectorBuffer.753" }
%"class.WTF::VectorBuffer.753" = type { %"class.WTF::VectorBufferBase.754" }
%"class.WTF::VectorBufferBase.754" = type { %"class.blink::Member.732"*, i32, i32 }
%"class.blink::Member.756" = type { %"class.blink::MemberBase.757" }
%"class.blink::MemberBase.757" = type { %"class.blink::CSSRuleList"* }
%"class.blink::CSSRuleList" = type opaque
%"class.WTF::Vector.1113" = type { %"class.WTF::VectorBuffer.1114" }
%"class.WTF::VectorBuffer.1114" = type { %"class.WTF::VectorBufferBase.1115" }
%"class.WTF::VectorBufferBase.1115" = type { %"struct.blink::Document::PendingJavascriptUrl"*, i32, i32 }
%"struct.blink::Document::PendingJavascriptUrl" = type { %"class.blink::KURL", %class.scoped_refptr.1116 }
%class.scoped_refptr.1116 = type { %"class.blink::DOMWrapperWorld"* }
%"class.blink::DOMWrapperWorld" = type { %"class.WTF::RefCounted.1117", i32, i32, %"class.blink::Persistent" }
%"class.WTF::RefCounted.1117" = type { %"class.base::RefCounted.1118" }
%"class.base::RefCounted.1118" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::Persistent" = type { %"class.blink::PersistentBase" }
%"class.blink::PersistentBase" = type { %"class.blink::DOMDataStore"*, %"class.blink::PersistentNodePtr" }
%"class.blink::DOMDataStore" = type { i32 (...)**, i8, [7 x i8], %"class.blink::HeapHashMap.1121" }
%"class.blink::HeapHashMap.1121" = type { %"class.WTF::HashMap.1124" }
%"class.WTF::HashMap.1124" = type { %"class.WTF::HashTable.1125" }
%"class.WTF::HashTable.1125" = type <{ %"struct.WTF::KeyValuePair.1127"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1127" = type { %"class.blink::WeakMember.1128", %"class.blink::TraceWrapperV8Reference" }
%"class.blink::WeakMember.1128" = type { %"class.blink::MemberBase.1129" }
%"class.blink::MemberBase.1129" = type { %"class.blink::ScriptWrappable"* }
%"class.blink::PersistentNodePtr" = type { %"class.blink::PersistentNode"* }
%"class.blink::PersistentNode" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"class.blink::Visitor" = type { i32 (...)**, %"class.blink::ThreadState"* }
%"class.blink::ThreadState" = type <{ %"class.std::__1::unique_ptr.1130", i32, [4 x i8], %"class.std::__1::unique_ptr.1268", %"class.std::__1::unique_ptr.1268", i8**, i8, i8, i8, i8, i8, i8, [2 x i8], i64, i64, i32, i32, i32, [4 x i8], %"class.WTF::Deque.1274", %"class.v8::Isolate"*, void (%"class.v8::Isolate"*, %"class.v8::EmbedderGraph"*, i8*)*, %"class.std::__1::unique_ptr.1280", %"class.std::__1::unique_ptr.1286", %"struct.blink::ThreadState::GCData", %"class.std::__1::unique_ptr.1298", %"class.std::__1::unique_ptr.1304", %"class.base::JobHandle", %"class.base::JobHandle", %"struct.std::__1::atomic.296", [7 x i8], i64, i8, [7 x i8], i64, %"class.base::TimeTicks", i8, i8, [6 x i8] }>
%"class.std::__1::unique_ptr.1130" = type { %"class.std::__1::__compressed_pair.1131" }
%"class.std::__1::__compressed_pair.1131" = type { %"struct.std::__1::__compressed_pair_elem.1132" }
%"struct.std::__1::__compressed_pair_elem.1132" = type { %"class.blink::ThreadHeap"* }
%"class.blink::ThreadHeap" = type { %"class.blink::ThreadState"*, %"class.std::__1::unique_ptr.1133", %"class.std::__1::unique_ptr.1139", %"class.std::__1::unique_ptr.1145", %"class.std::__1::unique_ptr.1151", %"class.std::__1::unique_ptr.1157", %"class.std::__1::unique_ptr.1163", %"class.std::__1::unique_ptr.1174", %"class.std::__1::unique_ptr.1181", %"class.std::__1::unique_ptr.1181", %"class.std::__1::unique_ptr.1188", %"class.std::__1::unique_ptr.1195", %"class.std::__1::unique_ptr.1202", %"class.std::__1::unique_ptr.1202", %"class.std::__1::unique_ptr.1209", %"class.std::__1::unique_ptr.1216", %"class.std::__1::unique_ptr.1223", %"class.std::__1::unique_ptr.1248", %"struct.blink::ThreadHeap::LastAllocatedRegion", [9 x %"class.blink::BaseArena"*], i64, i64 }
%"class.std::__1::unique_ptr.1133" = type { %"class.std::__1::__compressed_pair.1134" }
%"class.std::__1::__compressed_pair.1134" = type { %"struct.std::__1::__compressed_pair_elem.1135" }
%"struct.std::__1::__compressed_pair_elem.1135" = type { %"class.blink::ThreadHeapStatsCollector"* }
%"class.blink::ThreadHeapStatsCollector" = type opaque
%"class.std::__1::unique_ptr.1139" = type { %"class.std::__1::__compressed_pair.1140" }
%"class.std::__1::__compressed_pair.1140" = type { %"struct.std::__1::__compressed_pair_elem.1141" }
%"struct.std::__1::__compressed_pair_elem.1141" = type { %"class.blink::RegionTree"* }
%"class.blink::RegionTree" = type opaque
%"class.std::__1::unique_ptr.1145" = type { %"class.std::__1::__compressed_pair.1146" }
%"class.std::__1::__compressed_pair.1146" = type { %"struct.std::__1::__compressed_pair_elem.1147" }
%"struct.std::__1::__compressed_pair_elem.1147" = type { %"class.blink::PageBloomFilter"* }
%"class.blink::PageBloomFilter" = type opaque
%"class.std::__1::unique_ptr.1151" = type { %"class.std::__1::__compressed_pair.1152" }
%"class.std::__1::__compressed_pair.1152" = type { %"struct.std::__1::__compressed_pair_elem.1153" }
%"struct.std::__1::__compressed_pair_elem.1153" = type { %"class.blink::PagePool"* }
%"class.blink::PagePool" = type opaque
%"class.std::__1::unique_ptr.1157" = type { %"class.std::__1::__compressed_pair.1158" }
%"class.std::__1::__compressed_pair.1158" = type { %"struct.std::__1::__compressed_pair_elem.1159" }
%"struct.std::__1::__compressed_pair_elem.1159" = type { %"class.blink::ProcessHeapReporter"* }
%"class.blink::ProcessHeapReporter" = type opaque
%"class.std::__1::unique_ptr.1163" = type { %"class.std::__1::__compressed_pair.1164" }
%"class.std::__1::__compressed_pair.1164" = type { %"struct.std::__1::__compressed_pair_elem.1165" }
%"struct.std::__1::__compressed_pair_elem.1165" = type { %"class.blink::Worklist"* }
%"class.blink::Worklist" = type { [4 x %"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, i64, [512 x %"struct.blink::TraceDescriptor"] }
%"struct.blink::TraceDescriptor" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"struct.std::__1::atomic.1166" }
%"struct.std::__1::atomic.1166" = type { %"struct.std::__1::__atomic_base.1167" }
%"struct.std::__1::__atomic_base.1167" = type { %"struct.std::__1::__atomic_base.1168" }
%"struct.std::__1::__atomic_base.1168" = type { %"struct.std::__1::__cxx_atomic_impl.1169" }
%"struct.std::__1::__cxx_atomic_impl.1169" = type { %"struct.std::__1::__cxx_atomic_base_impl.1170" }
%"struct.std::__1::__cxx_atomic_base_impl.1170" = type { i64 }
%"class.std::__1::unique_ptr.1174" = type { %"class.std::__1::__compressed_pair.1175" }
%"class.std::__1::__compressed_pair.1175" = type { %"struct.std::__1::__compressed_pair_elem.1176" }
%"struct.std::__1::__compressed_pair_elem.1176" = type { %"class.blink::Worklist.1177"* }
%"class.blink::Worklist.1177" = type { [4 x %"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"struct.std::__1::atomic.1166" }
%"class.std::__1::unique_ptr.1181" = type { %"class.std::__1::__compressed_pair.1182" }
%"class.std::__1::__compressed_pair.1182" = type { %"struct.std::__1::__compressed_pair_elem.1183" }
%"struct.std::__1::__compressed_pair_elem.1183" = type { %"class.blink::Worklist.1184"* }
%"class.blink::Worklist.1184" = type { [4 x %"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"class.blink::Worklist<const void *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *, 16, 4>::Segment" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, i64, [16 x i8*] }
%"class.blink::Worklist<const void *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"struct.std::__1::atomic.1166" }
%"class.std::__1::unique_ptr.1188" = type { %"class.std::__1::__compressed_pair.1189" }
%"class.std::__1::__compressed_pair.1189" = type { %"struct.std::__1::__compressed_pair_elem.1190" }
%"struct.std::__1::__compressed_pair_elem.1190" = type { %"class.blink::Worklist.1191"* }
%"class.blink::Worklist.1191" = type { [4 x %"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.1166" }
%"class.std::__1::unique_ptr.1195" = type { %"class.std::__1::__compressed_pair.1196" }
%"class.std::__1::__compressed_pair.1196" = type { %"struct.std::__1::__compressed_pair_elem.1197" }
%"struct.std::__1::__compressed_pair_elem.1197" = type { %"class.blink::Worklist.1198"* }
%"class.blink::Worklist.1198" = type { [4 x %"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *const *, 256, 4>::Segment" = type opaque
%"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"struct.std::__1::atomic.1166" }
%"class.std::__1::unique_ptr.1202" = type { %"class.std::__1::__compressed_pair.1203" }
%"class.std::__1::__compressed_pair.1203" = type { %"struct.std::__1::__compressed_pair_elem.1204" }
%"struct.std::__1::__compressed_pair_elem.1204" = type { %"class.blink::Worklist.1205"* }
%"class.blink::Worklist.1205" = type { [4 x %"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.1166" }
%"class.std::__1::unique_ptr.1209" = type { %"class.std::__1::__compressed_pair.1210" }
%"class.std::__1::__compressed_pair.1210" = type { %"struct.std::__1::__compressed_pair_elem.1211" }
%"struct.std::__1::__compressed_pair_elem.1211" = type { %"class.blink::Worklist.1212"* }
%"class.blink::Worklist.1212" = type { [4 x %"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment" = type opaque
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"struct.std::__1::atomic.1166" }
%"class.std::__1::unique_ptr.1216" = type { %"class.std::__1::__compressed_pair.1217" }
%"class.std::__1::__compressed_pair.1217" = type { %"struct.std::__1::__compressed_pair_elem.1218" }
%"struct.std::__1::__compressed_pair_elem.1218" = type { %"class.blink::Worklist.1219"* }
%"class.blink::Worklist.1219" = type { [4 x %"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, i64, [64 x %"struct.blink::NotSafeToConcurrentlyTraceItem"] }
%"struct.blink::NotSafeToConcurrentlyTraceItem" = type { %"struct.blink::TraceDescriptor", i64 }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.1166" }
%"class.std::__1::unique_ptr.1223" = type { %"class.std::__1::__compressed_pair.1224" }
%"class.std::__1::__compressed_pair.1224" = type { %"struct.std::__1::__compressed_pair_elem.1225" }
%"struct.std::__1::__compressed_pair_elem.1225" = type { %"class.blink::WeakContainersWorklist"* }
%"class.blink::WeakContainersWorklist" = type { %"class.WTF::Mutex", %"class.std::__1::unordered_set" }
%"class.WTF::Mutex" = type { %"class.WTF::MutexBase" }
%"class.WTF::MutexBase" = type { %"struct.WTF::PlatformMutex" }
%"struct.WTF::PlatformMutex" = type { %union.pthread_mutex_t }
%"class.std::__1::unordered_set" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.1226", %"class.std::__1::__compressed_pair.1234", %"class.std::__1::__compressed_pair.1239", %"class.std::__1::__compressed_pair.1241", [4 x i8] }>
%"class.std::__1::unique_ptr.1226" = type { %"class.std::__1::__compressed_pair.1227" }
%"class.std::__1::__compressed_pair.1227" = type { %"struct.std::__1::__compressed_pair_elem.1228", %"struct.std::__1::__compressed_pair_elem.1229" }
%"struct.std::__1::__compressed_pair_elem.1228" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.1229" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.1230" }
%"class.std::__1::__compressed_pair.1230" = type { %"struct.std::__1::__compressed_pair_elem.317" }
%"class.std::__1::__compressed_pair.1234" = type { %"struct.std::__1::__compressed_pair_elem.1235" }
%"struct.std::__1::__compressed_pair_elem.1235" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.1239" = type { %"struct.std::__1::__compressed_pair_elem.317" }
%"class.std::__1::__compressed_pair.1241" = type { %"struct.std::__1::__compressed_pair_elem.1242" }
%"struct.std::__1::__compressed_pair_elem.1242" = type { float }
%"class.std::__1::unique_ptr.1248" = type { %"class.std::__1::__compressed_pair.1249" }
%"class.std::__1::__compressed_pair.1249" = type { %"struct.std::__1::__compressed_pair_elem.1250" }
%"struct.std::__1::__compressed_pair_elem.1250" = type { %"class.blink::HeapCompact"* }
%"class.blink::HeapCompact" = type <{ %"class.blink::ThreadHeap"*, %"class.std::__1::unique_ptr.1251", i8, [7 x i8], i64, i64, i32, [4 x i8], i64, i8, [7 x i8] }>
%"class.std::__1::unique_ptr.1251" = type { %"class.std::__1::__compressed_pair.1252" }
%"class.std::__1::__compressed_pair.1252" = type { %"struct.std::__1::__compressed_pair_elem.1253" }
%"struct.std::__1::__compressed_pair_elem.1253" = type { %"class.blink::HeapCompact::MovableObjectFixups"* }
%"class.blink::HeapCompact::MovableObjectFixups" = type opaque
%"struct.blink::ThreadHeap::LastAllocatedRegion" = type { i8*, i64 }
%"class.blink::BaseArena" = type <{ i32 (...)**, %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::ThreadState"*, i32, [4 x i8] }>
%"class.blink::PageStackThreadSafe" = type { %"class.blink::PageStack", %"class.WTF::Mutex" }
%"class.blink::PageStack" = type { %"class.WTF::Vector.1260" }
%"class.WTF::Vector.1260" = type { %"class.WTF::VectorBuffer.1261" }
%"class.WTF::VectorBuffer.1261" = type { %"class.WTF::VectorBufferBase.1262" }
%"class.WTF::VectorBufferBase.1262" = type { %"class.blink::BasePage"**, i32, i32 }
%"class.blink::BasePage" = type <{ i32 (...)**, %"class.blink::PageMemory"*, %"class.blink::BaseArena"*, %"class.blink::ThreadState"*, i64, i8, i8, i8, [5 x i8] }>
%"class.blink::PageMemory" = type opaque
%"class.std::__1::unique_ptr.1268" = type { %"class.std::__1::__compressed_pair.1269" }
%"class.std::__1::__compressed_pair.1269" = type { %"struct.std::__1::__compressed_pair_elem.1270" }
%"struct.std::__1::__compressed_pair_elem.1270" = type { %"class.blink::PersistentRegion"* }
%"class.blink::PersistentRegion" = type { %"class.blink::PersistentRegionBase" }
%"class.blink::PersistentRegionBase" = type { %"class.blink::PersistentNode"*, %"struct.blink::PersistentNodeSlots"* }
%"struct.blink::PersistentNodeSlots" = type { %"struct.blink::PersistentNodeSlots"*, [256 x %"class.blink::PersistentNode"] }
%"class.WTF::Deque.1274" = type { %"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer", i32, i32 }
%"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer" = type { %"class.WTF::VectorBuffer.1277" }
%"class.WTF::VectorBuffer.1277" = type { %"class.WTF::VectorBufferBase.1278" }
%"class.WTF::VectorBufferBase.1278" = type { %"struct.std::__1::pair.1279"*, i32, i32 }
%"struct.std::__1::pair.1279" = type { i8*, i1 (%"class.blink::LivenessBroker"*, i8*)* }
%"class.blink::LivenessBroker" = type { i8 }
%"class.v8::EmbedderGraph" = type opaque
%"class.std::__1::unique_ptr.1280" = type { %"class.std::__1::__compressed_pair.1281" }
%"class.std::__1::__compressed_pair.1281" = type { %"struct.std::__1::__compressed_pair_elem.1282" }
%"struct.std::__1::__compressed_pair_elem.1282" = type { %"class.blink::UnifiedHeapController"* }
%"class.blink::UnifiedHeapController" = type opaque
%"class.std::__1::unique_ptr.1286" = type { %"class.std::__1::__compressed_pair.1287" }
%"class.std::__1::__compressed_pair.1287" = type { %"struct.std::__1::__compressed_pair_elem.1288" }
%"struct.std::__1::__compressed_pair_elem.1288" = type { %"class.v8::EmbedderRootsHandler"* }
%"class.v8::EmbedderRootsHandler" = type { i32 (...)** }
%"struct.blink::ThreadState::GCData" = type { i32, i32, i32, i32, %"class.std::__1::unique_ptr.1292" }
%"class.std::__1::unique_ptr.1292" = type { %"class.std::__1::__compressed_pair.1293" }
%"class.std::__1::__compressed_pair.1293" = type { %"struct.std::__1::__compressed_pair_elem.1294" }
%"struct.std::__1::__compressed_pair_elem.1294" = type { %"class.blink::MarkingVisitor"* }
%"class.blink::MarkingVisitor" = type { %"class.blink::MarkingVisitorBase", %"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" }
%"class.blink::MarkingVisitorBase" = type { %"class.blink::Visitor", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View", %"class.blink::Worklist<const void *, 16, 4>::View", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View", %"class.blink::Worklist<const void *const *, 256, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::WeakContainersWorklist"*, i64, i32, i32 }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View" = type <{ %"class.blink::Worklist"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View" = type <{ %"class.blink::Worklist.1177"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *, 16, 4>::View" = type <{ %"class.blink::Worklist.1184"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View" = type <{ %"class.blink::Worklist.1191"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *const *, 256, 4>::View" = type <{ %"class.blink::Worklist.1198"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View" = type <{ %"class.blink::Worklist.1205"*, i32, [4 x i8] }>
%"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" = type { %"class.std::__1::vector.1527", i64 }
%"class.std::__1::vector.1527" = type { %"class.std::__1::__vector_base.1528" }
%"class.std::__1::__vector_base.1528" = type { %"class.blink::HeapObjectHeader"**, %"class.blink::HeapObjectHeader"**, %"class.std::__1::__compressed_pair.1529" }
%"class.blink::HeapObjectHeader" = type { i32, i16, i16 }
%"class.std::__1::__compressed_pair.1529" = type { %"struct.std::__1::__compressed_pair_elem.1530" }
%"struct.std::__1::__compressed_pair_elem.1530" = type { %"class.blink::HeapObjectHeader"** }
%"class.std::__1::unique_ptr.1298" = type { %"class.std::__1::__compressed_pair.1299" }
%"class.std::__1::__compressed_pair.1299" = type { %"struct.std::__1::__compressed_pair_elem.1300" }
%"struct.std::__1::__compressed_pair_elem.1300" = type { %"class.blink::ThreadState::IncrementalMarkingScheduler"* }
%"class.blink::ThreadState::IncrementalMarkingScheduler" = type opaque
%"class.std::__1::unique_ptr.1304" = type { %"class.std::__1::__compressed_pair.1305" }
%"class.std::__1::__compressed_pair.1305" = type { %"struct.std::__1::__compressed_pair_elem.1306" }
%"struct.std::__1::__compressed_pair_elem.1306" = type { %"class.blink::MarkingSchedulingOracle"* }
%"class.blink::MarkingSchedulingOracle" = type opaque
%"class.base::JobHandle" = type { %class.scoped_refptr.1310 }
%class.scoped_refptr.1310 = type { %"class.base::internal::JobTaskSource"* }
%"class.base::internal::JobTaskSource" = type opaque
%"class.blink::Member.1071" = type { %"class.blink::MemberBase.1072" }
%"class.blink::MemberBase.1072" = type { %"class.blink::Range"* }
%"class.blink::Range" = type { %"class.blink::AbstractRange", %"class.blink::Member.681", %"class.blink::RangeBoundaryPoint", %"class.blink::RangeBoundaryPoint" }
%"class.blink::AbstractRange" = type { %"class.blink::ScriptWrappable" }
%"class.blink::RangeBoundaryPoint" = type <{ %"class.blink::Member.555", %"class.blink::Member.555", i64, i32, [4 x i8] }>
%"class.blink::UserActionElementSet" = type { %"class.blink::HeapHashMap.1316" }
%"class.blink::HeapHashMap.1316" = type { %"class.WTF::HashMap.1319" }
%"class.WTF::HashMap.1319" = type { %"class.WTF::HashTable.1320" }
%"class.WTF::HashTable.1320" = type <{ %"struct.WTF::KeyValuePair.1322"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1322" = type opaque
%"class.blink::Member.1323" = type { %"class.blink::MemberBase.1324" }
%"class.blink::MemberBase.1324" = type { %"class.blink::RootScrollerController"* }
%"class.blink::RootScrollerController" = type opaque
%"class.blink::HeapHashSet.1325" = type { %"class.WTF::HashSet.1328" }
%"class.WTF::HashSet.1328" = type { %"class.WTF::HashTable.1329" }
%"class.WTF::HashTable.1329" = type <{ %"class.blink::WeakMember.1331"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1331" = type opaque
%"class.blink::HeapHashSet.1332" = type { %"class.WTF::HashSet.1335" }
%"class.WTF::HashSet.1335" = type { %"class.WTF::HashTable.1336" }
%"class.WTF::HashTable.1336" = type <{ %"class.blink::WeakMember.1338"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1338" = type opaque
%"class.blink::Member.1339" = type { %"class.blink::MemberBase.1340" }
%"class.blink::MemberBase.1340" = type { %"class.blink::ElementIntersectionObserverData"* }
%"class.blink::ElementIntersectionObserverData" = type opaque
%"class.blink::Member.1341" = type { %"class.blink::MemberBase.1342" }
%"class.blink::MemberBase.1342" = type { %"class.blink::StyleEngine"* }
%"class.blink::StyleEngine" = type opaque
%"class.blink::Member.1343" = type { %"class.blink::MemberBase.1344" }
%"class.blink::MemberBase.1344" = type { %"class.blink::StyleSheetList"* }
%"class.blink::StyleSheetList" = type { %"class.blink::ScriptWrappable", %"class.blink::Member.557", %"class.blink::HeapVector.716" }
%"class.blink::Member.1345" = type { %"class.blink::MemberBase.1346" }
%"class.blink::MemberBase.1346" = type { %"class.blink::FormController"* }
%"class.blink::FormController" = type opaque
%"class.blink::TextLinkColors" = type { %"class.blink::Color", %"class.blink::Color", %"class.blink::Color", %"class.blink::Color", i8, i8, i8, i8 }
%"class.blink::Member.1347" = type { %"class.blink::MemberBase.1348" }
%"class.blink::MemberBase.1348" = type { %"class.blink::VisitedLinkState"* }
%"class.blink::VisitedLinkState" = type opaque
%"class.blink::HeapHashMap.1349" = type { %"class.WTF::HashMap.1352" }
%"class.WTF::HashMap.1352" = type { %"class.WTF::HashTable.1353" }
%"class.WTF::HashTable.1353" = type <{ %"struct.WTF::KeyValuePair.1355"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1355" = type opaque
%"class.WTF::Vector.1356" = type { %"class.WTF::VectorBuffer.1357" }
%"class.WTF::VectorBuffer.1357" = type { %"class.WTF::VectorBufferBase.1358" }
%"class.WTF::VectorBufferBase.1358" = type { %"class.blink::AXContext"**, i32, i32 }
%"class.blink::AXContext" = type opaque
%"class.blink::Member.1361" = type { %"class.blink::MemberBase.1362" }
%"class.blink::MemberBase.1362" = type { %"class.blink::AXObjectCache"* }
%"class.blink::AXObjectCache" = type opaque
%"class.blink::Member.1363" = type { %"class.blink::MemberBase.1364" }
%"class.blink::MemberBase.1364" = type { %"class.blink::DocumentMarkerController"* }
%"class.blink::DocumentMarkerController" = type opaque
%"class.base::ElapsedTimer" = type { %"class.base::TimeTicks" }
%"class.blink::Member.1365" = type { %"class.blink::MemberBase.1366" }
%"class.blink::MemberBase.1366" = type { %"class.blink::ScriptRunner"* }
%"class.blink::ScriptRunner" = type opaque
%"class.blink::HeapVector.1367" = type { %"class.WTF::Vector.1370" }
%"class.WTF::Vector.1370" = type { %"class.WTF::VectorBuffer.1371" }
%"class.WTF::VectorBuffer.1371" = type { %"class.WTF::VectorBufferBase.1372" }
%"class.WTF::VectorBufferBase.1372" = type { %"class.blink::Member.1373"*, i32, i32 }
%"class.blink::Member.1373" = type opaque
%"class.std::__1::unique_ptr.1375" = type { %"class.std::__1::__compressed_pair.1376" }
%"class.std::__1::__compressed_pair.1376" = type { %"struct.std::__1::__compressed_pair_elem.1377" }
%"struct.std::__1::__compressed_pair_elem.1377" = type { %"class.blink::TransformSource"* }
%"class.blink::TransformSource" = type opaque
%"class.blink::DocumentEncodingData" = type <{ %"class.WTF::TextEncoding", i8, i8, [6 x i8] }>
%"class.WTF::TextEncoding" = type { i8* }
%"class.blink::HeapHashSet.1381" = type { %"class.WTF::HashSet.1384" }
%"class.WTF::HashSet.1384" = type { %"class.WTF::HashTable.1385" }
%"class.WTF::HashTable.1385" = type <{ %"class.blink::WeakMember.1387"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1387" = type opaque
%"class.blink::LiveNodeListRegistry" = type <{ %"class.WTF::Vector.1388", i32, [4 x i8] }>
%"class.WTF::Vector.1388" = type { %"class.WTF::VectorBuffer.1389" }
%"class.WTF::VectorBuffer.1389" = type { %"class.WTF::VectorBufferBase.1390" }
%"class.WTF::VectorBufferBase.1390" = type { %"struct.std::__1::pair.1391"*, i32, i32 }
%"struct.std::__1::pair.1391" = type opaque
%"class.blink::Member.1394" = type { %"class.blink::MemberBase.1395" }
%"class.blink::MemberBase.1395" = type { %"class.blink::SVGDocumentExtensions"* }
%"class.blink::SVGDocumentExtensions" = type opaque
%"class.WTF::Vector.1396" = type { %"class.WTF::VectorBuffer.1397" }
%"class.WTF::VectorBuffer.1397" = type { %"class.WTF::VectorBufferBase.1398" }
%"class.WTF::VectorBufferBase.1398" = type { %"struct.blink::AnnotatedRegionValue"*, i32, i32 }
%"struct.blink::AnnotatedRegionValue" = type opaque
%"class.std::__1::unique_ptr.1401" = type { %"class.std::__1::__compressed_pair.1402" }
%"class.std::__1::__compressed_pair.1402" = type { %"struct.std::__1::__compressed_pair_elem.1403" }
%"struct.std::__1::__compressed_pair_elem.1403" = type { %"class.blink::SelectorQueryCache"* }
%"class.blink::SelectorQueryCache" = type opaque
%"class.blink::NthIndexCache" = type opaque
%"class.blink::LayoutView" = type opaque
%"class.blink::HeapVector.698" = type { %"class.WTF::Vector.701" }
%"class.WTF::Vector.701" = type { %"class.WTF::VectorBuffer.702" }
%"class.WTF::VectorBuffer.702" = type { %"class.WTF::VectorBufferBase.703" }
%"class.WTF::VectorBufferBase.703" = type { %"class.blink::Member.553"*, i32, i32 }
%"class.blink::HeapVector.1407" = type { %"class.WTF::Vector.1410" }
%"class.WTF::Vector.1410" = type { %"class.WTF::VectorBuffer.1411" }
%"class.WTF::VectorBuffer.1411" = type { %"class.WTF::VectorBufferBase.1412" }
%"class.WTF::VectorBufferBase.1412" = type { %"class.blink::Member.1413"*, i32, i32 }
%"class.blink::Member.1413" = type opaque
%"class.blink::DocumentTiming" = type { %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.blink::Member.681" }
%"class.blink::Member.1415" = type { %"class.blink::MemberBase.1416" }
%"class.blink::MemberBase.1416" = type { %"class.blink::MediaQueryMatcher"* }
%"class.blink::MediaQueryMatcher" = type opaque
%"class.blink::Member.1417" = type { %"class.blink::MemberBase.1418" }
%"class.blink::MemberBase.1418" = type { %"class.blink::ScriptedAnimationController"* }
%"class.blink::ScriptedAnimationController" = type opaque
%"class.blink::Member.1419" = type { %"class.blink::MemberBase.1420" }
%"class.blink::MemberBase.1420" = type { %"class.blink::ScriptedIdleTaskController"* }
%"class.blink::ScriptedIdleTaskController" = type opaque
%"class.blink::Member.1421" = type { %"class.blink::MemberBase.1422" }
%"class.blink::MemberBase.1422" = type { %"class.blink::TextAutosizer"* }
%"class.blink::TextAutosizer" = type opaque
%"class.blink::Member.1423" = type { %"class.blink::MemberBase.1424" }
%"class.blink::MemberBase.1424" = type { %"class.blink::ElementDataCache"* }
%"class.blink::ElementDataCache" = type opaque
%"class.WTF::HashMap.1425" = type { %"class.WTF::HashTable.1426" }
%"class.WTF::HashTable.1426" = type <{ %"struct.WTF::KeyValuePair.1429"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1429" = type opaque
%"class.blink::Member.1430" = type { %"class.blink::MemberBase.1431" }
%"class.blink::MemberBase.1431" = type { %"class.blink::DocumentAnimations"* }
%"class.blink::DocumentAnimations" = type opaque
%"class.blink::Member.1432" = type { %"class.blink::MemberBase.1433" }
%"class.blink::MemberBase.1433" = type { %"class.blink::DocumentTimeline"* }
%"class.blink::DocumentTimeline" = type opaque
%"class.blink::Member.1434" = type { %"class.blink::MemberBase.1435" }
%"class.blink::MemberBase.1435" = type { %"class.blink::PendingAnimations"* }
%"class.blink::PendingAnimations" = type opaque
%"class.blink::Member.1436" = type { %"class.blink::MemberBase.1437" }
%"class.blink::MemberBase.1437" = type { %"class.blink::WorkletAnimationController"* }
%"class.blink::WorkletAnimationController" = type opaque
%"class.blink::HeapTaskRunnerTimer" = type { %"class.blink::TimerBase", %"class.blink::WeakMember.1315", { i64, i64 } }
%"class.blink::WeakMember.1315" = type { %"class.blink::MemberBase.682" }
%"class.blink::HeapHashSet.1438" = type { %"class.WTF::HashSet.1441" }
%"class.WTF::HashSet.1441" = type { %"class.WTF::HashTable.1442" }
%"class.WTF::HashTable.1442" = type <{ %"class.blink::Member.1444"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1444" = type opaque
%"class.blink::Member.1445" = type { %"class.blink::MemberBase.1446" }
%"class.blink::MemberBase.1446" = type { %"class.blink::CanvasFontCache"* }
%"class.blink::CanvasFontCache" = type opaque
%"class.blink::Member.1447" = type { %"class.blink::MemberBase.1448" }
%"class.blink::MemberBase.1448" = type { %"class.blink::IntersectionObserverController"* }
%"class.blink::IntersectionObserverController" = type opaque
%"class.blink::Member.1449" = type { %"class.blink::MemberBase.1450" }
%"class.blink::MemberBase.1450" = type { %"class.blink::SnapCoordinator"* }
%"class.blink::SnapCoordinator" = type opaque
%"class.blink::Member.1451" = type { %"class.blink::MemberBase.1452" }
%"class.blink::MemberBase.1452" = type { %"class.blink::PropertyRegistry"* }
%"class.blink::PropertyRegistry" = type opaque
%"class.blink::Member.1453" = type { %"class.blink::MemberBase.1454" }
%"class.blink::MemberBase.1454" = type { %"class.blink::Document::NetworkStateObserver"* }
%"class.blink::Document::NetworkStateObserver" = type opaque
%"class.std::__1::unique_ptr.1455" = type { %"class.std::__1::__compressed_pair.1456" }
%"class.std::__1::__compressed_pair.1456" = type { %"struct.std::__1::__compressed_pair_elem.1457" }
%"struct.std::__1::__compressed_pair_elem.1457" = type { %"class.ukm::UkmRecorder"* }
%"class.ukm::UkmRecorder" = type { i32 (...)** }
%"class.std::__1::unique_ptr.1461" = type { %"class.std::__1::__compressed_pair.1462" }
%"class.std::__1::__compressed_pair.1462" = type { %"struct.std::__1::__compressed_pair_elem.1463" }
%"struct.std::__1::__compressed_pair_elem.1463" = type { %"class.blink::FontMatchingMetrics"* }
%"class.blink::FontMatchingMetrics" = type opaque
%"class.blink::Member.1467" = type { %"class.blink::MemberBase.1468" }
%"class.blink::MemberBase.1468" = type { %"class.blink::DOMFeaturePolicy"* }
%"class.blink::DOMFeaturePolicy" = type opaque
%"class.blink::Member.1469" = type { %"class.blink::MemberBase.1470" }
%"class.blink::MemberBase.1470" = type { %"class.blink::SlotAssignmentEngine"* }
%"class.blink::SlotAssignmentEngine" = type opaque
%"class.blink::Member.1471" = type { %"class.blink::MemberBase.1472" }
%"class.blink::MemberBase.1472" = type { %"class.blink::ViewportData"* }
%"class.blink::ViewportData" = type opaque
%"class.blink::Member.1473" = type { %"class.blink::MemberBase.1474" }
%"class.blink::MemberBase.1474" = type { %"class.blink::LazyLoadImageObserver"* }
%"class.blink::LazyLoadImageObserver" = type opaque
%"class.WTF::Vector.1082" = type { %"class.WTF::VectorBuffer.1083" }
%"class.WTF::VectorBuffer.1083" = type { %"class.WTF::VectorBufferBase.1084" }
%"class.WTF::VectorBufferBase.1084" = type { i8*, i32, i32 }
%"class.blink::HeapHashMap.1475" = type { %"class.WTF::HashMap.1478" }
%"class.WTF::HashMap.1478" = type { %"class.WTF::HashTable.1479" }
%"class.WTF::HashTable.1479" = type <{ %"struct.WTF::KeyValuePair.1481"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1481" = type opaque
%"class.blink::Member.1482" = type { %"class.blink::MemberBase.1483" }
%"class.blink::MemberBase.1483" = type { %"class.blink::BeforeUnloadEventListener"* }
%"class.blink::BeforeUnloadEventListener" = type opaque
%"class.std::__1::unique_ptr.1484" = type { %"class.std::__1::__compressed_pair.1485" }
%"class.std::__1::__compressed_pair.1485" = type { %"struct.std::__1::__compressed_pair_elem.1486" }
%"struct.std::__1::__compressed_pair_elem.1486" = type { %"class.blink::DocumentResourceCoordinator"* }
%"class.blink::DocumentResourceCoordinator" = type opaque
%"class.blink::Member.1490" = type { %"class.blink::MemberBase.1491" }
%"class.blink::MemberBase.1491" = type { %"class.blink::CookieJar"* }
%"class.blink::CookieJar" = type opaque
%"class.blink::Member.1492" = type { %"class.blink::MemberBase.1493" }
%"class.blink::MemberBase.1493" = type { %"class.blink::FragmentDirective"* }
%"class.blink::FragmentDirective" = type { %"class.blink::ScriptWrappable" }
%"class.blink::HeapHashMap.1494" = type { %"class.WTF::HashMap.1497" }
%"class.WTF::HashMap.1497" = type { %"class.WTF::HashTable.1498" }
%"class.WTF::HashTable.1498" = type <{ %"struct.WTF::KeyValuePair.1500"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1500" = type opaque
%"class.blink::HeapObserverSet.1501" = type { i32, [4 x i8], %"class.blink::HeapHashSet.1502" }
%"class.blink::HeapHashSet.1502" = type { %"class.WTF::HashSet.1505" }
%"class.WTF::HashSet.1505" = type { %"class.WTF::HashTable.1506" }
%"class.WTF::HashTable.1506" = type <{ %"class.blink::WeakMember.1508"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1508" = type opaque
%"class.blink::Member.1509" = type { %"class.blink::MemberBase.1510" }
%"class.blink::MemberBase.1510" = type { %"class.blink::DisplayLockDocumentState"* }
%"class.blink::DisplayLockDocumentState" = type opaque
%"class.blink::Member.1511" = type { %"class.blink::MemberBase.1512" }
%"class.blink::MemberBase.1512" = type { %"class.blink::FontPreloadManager"* }
%"class.blink::FontPreloadManager" = type <{ %"class.blink::Member.681", %"class.blink::HeapHashSet.1518", i32, [4 x i8], %"class.blink::HeapTaskRunnerTimer.1525", %"class.base::TimeDelta", i32, [4 x i8] }>
%"class.blink::HeapHashSet.1518" = type { %"class.WTF::HashSet.1521" }
%"class.WTF::HashSet.1521" = type { %"class.WTF::HashTable.1522" }
%"class.WTF::HashTable.1522" = type <{ %"class.blink::Member.1524"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1524" = type opaque
%"class.blink::HeapTaskRunnerTimer.1525" = type { %"class.blink::TimerBase", %"class.blink::WeakMember.1526", { i64, i64 } }
%"class.blink::WeakMember.1526" = type { %"class.blink::MemberBase.1512" }
%"class.blink::WeakMember.1513" = type { %"class.blink::MemberBase.556" }
%"class.blink::MemberBase.556" = type { %"class.blink::Node"* }
%"class.blink::Member.1514" = type { %"class.blink::MemberBase.1515" }
%"class.blink::MemberBase.1515" = type { %"class.blink::DocumentData"* }
%"class.blink::DocumentData" = type opaque
%"class.blink::Member.683" = type { %"class.blink::MemberBase.684" }
%"class.blink::MemberBase.684" = type { %"class.blink::TreeOrderedMap"* }
%"class.blink::TreeOrderedMap" = type { %"class.blink::HeapHashMap.687" }
%"class.blink::HeapHashMap.687" = type { %"class.WTF::HashMap.690" }
%"class.WTF::HashMap.690" = type { %"class.WTF::HashTable.691" }
%"class.WTF::HashTable.691" = type <{ %"struct.WTF::KeyValuePair.693"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.693" = type { %"class.WTF::AtomicString", %"class.blink::Member.694" }
%"class.blink::Member.694" = type { %"class.blink::MemberBase.695" }
%"class.blink::MemberBase.695" = type { %"class.blink::TreeOrderedMap::MapEntry"* }
%"class.blink::TreeOrderedMap::MapEntry" = type { %"class.blink::Member.553", i32, %"class.blink::HeapVector.698" }
%"class.blink::Member.705" = type { %"class.blink::MemberBase.706" }
%"class.blink::MemberBase.706" = type { %"class.blink::IdTargetObserverRegistry"* }
%"class.blink::IdTargetObserverRegistry" = type opaque
%"class.blink::Member.707" = type { %"class.blink::MemberBase.708" }
%"class.blink::MemberBase.708" = type { %"class.blink::ScopedStyleResolver"* }
%"class.blink::ScopedStyleResolver" = type opaque
%"class.blink::Member.709" = type { %"class.blink::MemberBase.710" }
%"class.blink::MemberBase.710" = type { %"class.blink::DOMSelection"* }
%"class.blink::DOMSelection" = type opaque
%"class.blink::RadioButtonGroupScope" = type { %"class.blink::Member.711" }
%"class.blink::Member.711" = type { %"class.blink::MemberBase.712" }
%"class.blink::MemberBase.712" = type { %"class.blink::HeapHashMap.713"* }
%"class.blink::HeapHashMap.713" = type opaque
%"class.blink::Member.714" = type { %"class.blink::MemberBase.715" }
%"class.blink::MemberBase.715" = type { %"class.blink::SVGTreeScopeResources"* }
%"class.blink::SVGTreeScopeResources" = type opaque
%"class.blink::HeapVector.716" = type { %"class.WTF::Vector.719" }
%"class.WTF::Vector.719" = type { %"class.WTF::VectorBuffer.720" }
%"class.WTF::VectorBuffer.720" = type { %"class.WTF::VectorBufferBase.721" }
%"class.WTF::VectorBufferBase.721" = type { %"class.blink::Member.722"*, i32, i32 }
%"class.blink::Member.559" = type { %"class.blink::MemberBase.560" }
%"class.blink::MemberBase.560" = type { %"class.blink::NodeData"* }
%"class.blink::NodeData" = type { i16, %"class.WTF::ConcurrentlyReadBitField" }
%"class.WTF::ConcurrentlyReadBitField" = type { %"class.WTF::SingleThreadedBitField" }
%"class.WTF::SingleThreadedBitField" = type { i16 }
%"class.blink::Member.555" = type { %"class.blink::MemberBase.556" }
%"class.blink::Animatable" = type { i32 (...)** }
%"class.blink::QualifiedName" = type { %class.scoped_refptr.563 }
%class.scoped_refptr.563 = type { %"class.blink::QualifiedName::QualifiedNameImpl"* }
%"class.blink::QualifiedName::QualifiedNameImpl" = type { %"class.WTF::RefCounted", i32, %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.WTF::AtomicString" }
%"class.WTF::RefCounted" = type { %"class.base::RefCounted.564" }
%"class.base::RefCounted.564" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::Member.565" = type { %"class.blink::MemberBase.566" }
%"class.blink::MemberBase.566" = type { %"class.blink::ElementData"* }
%"class.blink::ElementData" = type { %"class.WTF::ConcurrentlyReadBitField.569", %"class.blink::Member.571", %"class.blink::SpaceSplitString", %"class.WTF::AtomicString" }
%"class.WTF::ConcurrentlyReadBitField.569" = type { %"class.WTF::SingleThreadedBitField.570" }
%"class.WTF::SingleThreadedBitField.570" = type { i32 }
%"class.blink::Member.571" = type { %"class.blink::MemberBase.572" }
%"class.blink::MemberBase.572" = type { %"class.blink::CSSPropertyValueSet"* }
%"class.blink::CSSPropertyValueSet" = type opaque
%"class.blink::SpaceSplitString" = type { %class.scoped_refptr.573 }
%class.scoped_refptr.573 = type { %"class.blink::SpaceSplitString::Data"* }
%"class.blink::SpaceSplitString::Data" = type { %"class.WTF::RefCounted.574", %"class.WTF::AtomicString", %"class.WTF::Vector.576" }
%"class.WTF::RefCounted.574" = type { %"class.base::RefCounted.575" }
%"class.base::RefCounted.575" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.576" = type { %"class.WTF::VectorBuffer.577" }
%"class.WTF::VectorBuffer.577" = type { %"class.WTF::VectorBufferBase.578", [32 x i8] }
%"class.WTF::VectorBufferBase.578" = type { %"class.WTF::AtomicString"*, i32, i32 }
%"class.blink::Member.581" = type { %"class.blink::MemberBase.582" }
%"class.blink::MemberBase.582" = type { %"class.blink::Editor"* }
%"class.blink::Editor" = type opaque
%"class.blink::Member.583" = type { %"class.blink::MemberBase.584" }
%"class.blink::MemberBase.584" = type { %"class.blink::FrameSelection"* }
%"class.blink::FrameSelection" = type opaque
%"class.blink::Member.585" = type { %"class.blink::MemberBase.586" }
%"class.blink::MemberBase.586" = type { %"class.blink::EventHandler"* }
%"class.blink::EventHandler" = type opaque
%"class.blink::Member.587" = type { %"class.blink::MemberBase.588" }
%"class.blink::MemberBase.588" = type { %"class.blink::FrameConsole"* }
%"class.blink::FrameConsole" = type opaque
%class.scoped_refptr.589 = type { %"class.blink::InspectorTaskRunner"* }
%"class.blink::InspectorTaskRunner" = type opaque
%"class.blink::Member.594" = type { %"class.blink::MemberBase.595" }
%"class.blink::MemberBase.595" = type { %"class.blink::IdlenessDetector"* }
%"class.blink::IdlenessDetector" = type opaque
%"class.blink::Member.600" = type { %"class.blink::MemberBase.601" }
%"class.blink::MemberBase.601" = type { %"class.blink::SmoothScrollSequencer"* }
%"class.blink::SmoothScrollSequencer" = type opaque
%"class.blink::Member.602" = type { %"class.blink::MemberBase.603" }
%"class.blink::MemberBase.603" = type { %"class.blink::ContentCaptureManager"* }
%"class.blink::ContentCaptureManager" = type opaque
%"class.blink::InterfaceRegistry" = type opaque
%"class.blink::HeapMojoRemote" = type { %"class.blink::Member.604" }
%"class.blink::Member.604" = type { %"class.blink::MemberBase.605" }
%"class.blink::MemberBase.605" = type { %"class.blink::HeapMojoRemote<blink::mojom::blink::ReportingServiceProxy, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoRemote<blink::mojom::blink::ReportingServiceProxy, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.mojo::Remote.2062" }
%"class.mojo::Remote.2062" = type { %"class.mojo::internal::InterfacePtrState.2063" }
%"class.mojo::internal::InterfacePtrState.2063" = type { %"class.mojo::internal::InterfacePtrStateBase.base", %"class.std::__1::unique_ptr.2064" }
%"class.std::__1::unique_ptr.2064" = type { %"class.std::__1::__compressed_pair.2065" }
%"class.std::__1::__compressed_pair.2065" = type { %"struct.std::__1::__compressed_pair_elem.2066" }
%"struct.std::__1::__compressed_pair_elem.2066" = type { %"class.blink::mojom::blink::ReportingServiceProxyProxy"* }
%"class.blink::mojom::blink::ReportingServiceProxyProxy" = type { %"class.blink::mojom::blink::ReportingServiceProxy", %"class.mojo::MessageReceiverWithResponder"* }
%"class.blink::mojom::blink::ReportingServiceProxy" = type { i32 (...)** }
%"class.blink::mojom::blink::ViewportIntersectionState" = type { %"class.gfx::Rect", %"class.gfx::Rect", %"class.gfx::Rect", i32, %"class.gfx::Size", %"class.gfx::Point", %"class.gfx::Transform" }
%"class.gfx::Size" = type { i32, i32 }
%"class.gfx::Point" = type { i32, i32 }
%"class.gfx::Transform" = type { %class.SkMatrix44 }
%class.SkMatrix44 = type <{ [4 x [4 x float]], i8, [3 x i8] }>
%"class.std::__1::unique_ptr.606" = type { %"class.std::__1::__compressed_pair.607" }
%"class.std::__1::__compressed_pair.607" = type { %"struct.std::__1::__compressed_pair_elem.608" }
%"struct.std::__1::__compressed_pair_elem.608" = type { %"class.blink::WebURLLoaderFactory"* }
%"class.blink::WebURLLoaderFactory" = type { i32 (...)**, %class.scoped_refptr.609, %"class.blink::WebVector", %"class.base::WaitableEvent"* }
%class.scoped_refptr.609 = type { %"class.network::SharedURLLoaderFactory"* }
%"class.network::SharedURLLoaderFactory" = type <{ %"class.network::mojom::URLLoaderFactory", %"class.base::RefCounted.610", [4 x i8] }>
%"class.network::mojom::URLLoaderFactory" = type { i32 (...)** }
%"class.base::RefCounted.610" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::WebVector" = type { %"class.std::__1::vector.611" }
%"class.std::__1::vector.611" = type { %"class.std::__1::__vector_base.612" }
%"class.std::__1::__vector_base.612" = type { %"class.blink::WebString"*, %"class.blink::WebString"*, %"class.std::__1::__compressed_pair.613" }
%"class.std::__1::__compressed_pair.613" = type { %"struct.std::__1::__compressed_pair_elem.614" }
%"struct.std::__1::__compressed_pair_elem.614" = type { %"class.blink::WebString"* }
%"class.base::WaitableEvent" = type <{ %class.scoped_refptr.618, i8, [7 x i8] }>
%class.scoped_refptr.618 = type { %"struct.base::WaitableEvent::WaitableEventKernel"* }
%"struct.base::WaitableEvent::WaitableEventKernel" = type { %"class.base::RefCountedThreadSafe.619", %"class.base::Lock", i8, i8, %"class.std::__1::list" }
%"class.base::RefCountedThreadSafe.619" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.std::__1::list" = type { %"class.std::__1::__list_imp" }
%"class.std::__1::__list_imp" = type { %"struct.std::__1::__list_node_base", %"class.std::__1::__compressed_pair.620" }
%"struct.std::__1::__list_node_base" = type { %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"* }
%"class.std::__1::__compressed_pair.620" = type { %"struct.std::__1::__compressed_pair_elem.317" }
%"class.blink::ClientHintsPreferences" = type { %"struct.blink::WebEnabledClientHints" }
%"struct.blink::WebEnabledClientHints" = type { [16 x i8] }
%"class.base::RepeatingCallback.627" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.std::__1::unique_ptr.628" = type { %"class.std::__1::__compressed_pair.629" }
%"class.std::__1::__compressed_pair.629" = type { %"struct.std::__1::__compressed_pair_elem.630" }
%"struct.std::__1::__compressed_pair_elem.630" = type { %"class.blink::FrameOverlay"* }
%"class.blink::FrameOverlay" = type opaque
%"class.absl::optional.494" = type { %"class.absl::optional_internal::optional_data.495" }
%"class.absl::optional_internal::optional_data.495" = type { %"class.absl::optional_internal::optional_data_base.496" }
%"class.absl::optional_internal::optional_data_base.496" = type { %"class.absl::optional_internal::optional_data_dtor_base.497" }
%"class.absl::optional_internal::optional_data_dtor_base.497" = type { i8, %union.anon.498 }
%union.anon.498 = type { %"class.base::UnguessableToken" }
%"class.std::__1::unique_ptr.634" = type { %"class.std::__1::__compressed_pair.635" }
%"class.std::__1::__compressed_pair.635" = type { %"struct.std::__1::__compressed_pair_elem.636" }
%"struct.std::__1::__compressed_pair_elem.636" = type { %"class.blink::WebPrescientNetworking"* }
%"class.blink::WebPrescientNetworking" = type opaque
%"class.blink::HeapMojoAssociatedRemote" = type { %"class.blink::Member.640" }
%"class.blink::Member.640" = type { %"class.blink::MemberBase.641" }
%"class.blink::MemberBase.641" = type { %"class.blink::HeapMojoAssociatedRemote<blink::mojom::blink::LocalFrameHost, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoAssociatedRemote<blink::mojom::blink::LocalFrameHost, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.mojo::AssociatedRemote.2072" }
%"class.mojo::AssociatedRemote.2072" = type { %"class.mojo::internal::AssociatedInterfacePtrState.2073" }
%"class.mojo::internal::AssociatedInterfacePtrState.2073" = type { %"class.mojo::internal::AssociatedInterfacePtrStateBase.base", %"class.std::__1::unique_ptr.2074" }
%"class.std::__1::unique_ptr.2074" = type { %"class.std::__1::__compressed_pair.2075" }
%"class.std::__1::__compressed_pair.2075" = type { %"struct.std::__1::__compressed_pair_elem.2076" }
%"struct.std::__1::__compressed_pair_elem.2076" = type { %"class.blink::mojom::blink::LocalFrameHostProxy"* }
%"class.blink::mojom::blink::LocalFrameHostProxy" = type { %"class.blink::mojom::blink::LocalFrameHost", %"class.mojo::MessageReceiverWithResponder"* }
%"class.blink::mojom::blink::LocalFrameHost" = type { i32 (...)** }
%"class.blink::HeapMojoAssociatedRemote.642" = type { %"class.blink::Member.643" }
%"class.blink::Member.643" = type { %"class.blink::MemberBase.644" }
%"class.blink::MemberBase.644" = type { %"class.blink::HeapMojoAssociatedRemote<blink::mojom::blink::BackForwardCacheControllerHost, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoAssociatedRemote<blink::mojom::blink::BackForwardCacheControllerHost, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.mojo::AssociatedRemote.2082" }
%"class.mojo::AssociatedRemote.2082" = type { %"class.mojo::internal::AssociatedInterfacePtrState.2083" }
%"class.mojo::internal::AssociatedInterfacePtrState.2083" = type { %"class.mojo::internal::AssociatedInterfacePtrStateBase.base", %"class.std::__1::unique_ptr.2084" }
%"class.std::__1::unique_ptr.2084" = type { %"class.std::__1::__compressed_pair.2085" }
%"class.std::__1::__compressed_pair.2085" = type { %"struct.std::__1::__compressed_pair_elem.2086" }
%"struct.std::__1::__compressed_pair_elem.2086" = type { %"class.blink::mojom::blink::BackForwardCacheControllerHostProxy"* }
%"class.blink::mojom::blink::BackForwardCacheControllerHostProxy" = type { %"class.blink::mojom::blink::BackForwardCacheControllerHost", %"class.mojo::MessageReceiverWithResponder"* }
%"class.blink::mojom::blink::BackForwardCacheControllerHost" = type { i32 (...)** }
%"class.blink::HeapMojoAssociatedReceiver" = type { %"class.blink::Member.645" }
%"class.blink::Member.645" = type { %"class.blink::MemberBase.646" }
%"class.blink::MemberBase.646" = type { %"class.blink::HeapMojoAssociatedReceiver<blink::mojom::blink::LocalFrame, blink::LocalFrame, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoAssociatedReceiver<blink::mojom::blink::LocalFrame, blink::LocalFrame, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.blink::ThreadState::PrefinalizerRegistration.2092", %"class.blink::Member.237", %"class.mojo::AssociatedReceiver" }
%"class.blink::ThreadState::PrefinalizerRegistration.2092" = type { i8 }
%"class.mojo::AssociatedReceiver" = type { %"class.mojo::internal::AssociatedReceiverBase", %"class.blink::mojom::blink::LocalFrameStub", %"class.base::WeakPtrFactory.2093" }
%"class.mojo::internal::AssociatedReceiverBase" = type { %"class.std::__1::unique_ptr.371" }
%"class.blink::mojom::blink::LocalFrameStub" = type { %"class.mojo::MessageReceiverWithResponderStatus", %"class.blink::mojom::blink::LocalFrame"* }
%"class.base::WeakPtrFactory.2093" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::HeapMojoAssociatedReceiver.647" = type { %"class.blink::Member.648" }
%"class.blink::Member.648" = type { %"class.blink::MemberBase.649" }
%"class.blink::MemberBase.649" = type { %"class.blink::HeapMojoAssociatedReceiver<blink::mojom::blink::LocalMainFrame, blink::LocalFrame, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoAssociatedReceiver<blink::mojom::blink::LocalMainFrame, blink::LocalFrame, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.blink::ThreadState::PrefinalizerRegistration.2096", %"class.blink::Member.237", %"class.mojo::AssociatedReceiver.2097" }
%"class.blink::ThreadState::PrefinalizerRegistration.2096" = type { i8 }
%"class.mojo::AssociatedReceiver.2097" = type { %"class.mojo::internal::AssociatedReceiverBase", %"class.blink::mojom::blink::LocalMainFrameStub", %"class.base::WeakPtrFactory.2098" }
%"class.blink::mojom::blink::LocalMainFrameStub" = type { %"class.mojo::MessageReceiverWithResponderStatus", %"class.blink::mojom::blink::LocalMainFrame"* }
%"class.base::WeakPtrFactory.2098" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::HeapMojoReceiver" = type { %"class.blink::Member.650" }
%"class.blink::Member.650" = type { %"class.blink::MemberBase.651" }
%"class.blink::MemberBase.651" = type { %"class.blink::HeapMojoReceiver<blink::mojom::blink::HighPriorityLocalFrame, blink::LocalFrame, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoReceiver<blink::mojom::blink::HighPriorityLocalFrame, blink::LocalFrame, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.blink::ThreadState::PrefinalizerRegistration.2101", %"class.blink::Member.237", %"class.mojo::Receiver" }
%"class.blink::ThreadState::PrefinalizerRegistration.2101" = type { i8 }
%"class.mojo::Receiver" = type { %"class.mojo::internal::BindingState" }
%"class.mojo::internal::BindingState" = type { %"class.mojo::internal::BindingStateBase", %"class.blink::mojom::blink::HighPriorityLocalFrameStub" }
%"class.mojo::internal::BindingStateBase" = type { %class.scoped_refptr.244, %"class.std::__1::unique_ptr.371", %"class.base::WeakPtrFactory.2102" }
%"class.base::WeakPtrFactory.2102" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::mojom::blink::HighPriorityLocalFrameStub" = type { %"class.mojo::MessageReceiverWithResponderStatus", %"class.blink::mojom::blink::HighPriorityLocalFrame"* }
%"class.blink::HeapMojoAssociatedReceiver.652" = type { %"class.blink::Member.653" }
%"class.blink::Member.653" = type { %"class.blink::MemberBase.654" }
%"class.blink::MemberBase.654" = type { %"class.blink::HeapMojoAssociatedReceiver<blink::mojom::blink::FullscreenVideoElementHandler, blink::LocalFrame, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoAssociatedReceiver<blink::mojom::blink::FullscreenVideoElementHandler, blink::LocalFrame, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.blink::ThreadState::PrefinalizerRegistration.2105", %"class.blink::Member.237", %"class.mojo::AssociatedReceiver.2106" }
%"class.blink::ThreadState::PrefinalizerRegistration.2105" = type { i8 }
%"class.mojo::AssociatedReceiver.2106" = type { %"class.mojo::internal::AssociatedReceiverBase", %"class.blink::mojom::blink::FullscreenVideoElementHandlerStub", %"class.base::WeakPtrFactory.2107" }
%"class.blink::mojom::blink::FullscreenVideoElementHandlerStub" = type { %"class.mojo::MessageReceiverWithResponderStatus", %"class.blink::mojom::blink::FullscreenVideoElementHandler"* }
%"class.base::WeakPtrFactory.2107" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::Member.655" = type { %"class.blink::MemberBase.656" }
%"class.blink::MemberBase.656" = type { %"class.blink::SystemClipboard"* }
%"class.blink::SystemClipboard" = type opaque
%"class.blink::Member.657" = type { %"class.blink::MemberBase.658" }
%"class.blink::MemberBase.658" = type { %"class.blink::RawSystemClipboard"* }
%"class.blink::RawSystemClipboard" = type opaque
%"class.blink::Member.659" = type { %"class.blink::MemberBase.660" }
%"class.blink::MemberBase.660" = type { %"class.blink::BackgroundColorPaintImageGenerator"* }
%"class.blink::BackgroundColorPaintImageGenerator" = type opaque
%"class.blink::Member.661" = type { %"class.blink::MemberBase.662" }
%"class.blink::MemberBase.662" = type { %"class.blink::HeapHashMap.663"* }
%"class.blink::HeapHashMap.663" = type opaque
%"class.mojo::StructPtr.664" = type { %"class.std::__1::unique_ptr.665" }
%"class.std::__1::unique_ptr.665" = type { %"class.std::__1::__compressed_pair.666" }
%"class.std::__1::__compressed_pair.666" = type { %"struct.std::__1::__compressed_pair_elem.667" }
%"struct.std::__1::__compressed_pair_elem.667" = type { %"class.blink::mojom::blink::BlinkOptimizationGuideHints"* }
%"class.blink::mojom::blink::BlinkOptimizationGuideHints" = type { %"class.mojo::InlinedStructPtr", %"class.mojo::InlinedStructPtr.668" }
%"class.mojo::InlinedStructPtr" = type { %"class.blink::mojom::blink::DelayAsyncScriptExecutionHints", i32 }
%"class.blink::mojom::blink::DelayAsyncScriptExecutionHints" = type { i32 }
%"class.mojo::InlinedStructPtr.668" = type { %"class.blink::mojom::blink::DelayCompetingLowPriorityRequestsHints", i32 }
%"class.blink::mojom::blink::DelayCompetingLowPriorityRequestsHints" = type { i32, i32 }
%"class.blink::Member.672" = type { %"class.blink::MemberBase.673" }
%"class.blink::MemberBase.673" = type { %"class.blink::TextFragmentHandler"* }
%"class.blink::TextFragmentHandler" = type opaque
%"class.blink::TransientAllowFullscreen" = type { %"class.base::TimeTicks" }
%"class.blink::PaymentRequestToken" = type { %"class.base::TimeTicks" }
%"class.gfx::Rect" = type { %"class.gfx::Point", %"class.gfx::Size" }
%"class.absl::optional.674" = type { %"class.absl::optional_internal::optional_data.675" }
%"class.absl::optional_internal::optional_data.675" = type { %"class.absl::optional_internal::optional_data_base.676" }
%"class.absl::optional_internal::optional_data_base.676" = type { %"class.absl::optional_internal::optional_data_dtor_base.677" }
%"class.absl::optional_internal::optional_data_dtor_base.677" = type { i8, %union.anon.678 }
%union.anon.678 = type { %"class.blink::FrameAdEvidence" }
%"class.blink::FrameAdEvidence" = type { i8, i8, i32, i32, i32 }
%"class.mojo::internal::InterfacePtrStateBase" = type <{ %class.scoped_refptr.244, %"class.std::__1::unique_ptr.371", %"class.mojo::ScopedHandleBase", [4 x i8], %class.scoped_refptr.250, i32, [4 x i8] }>
%"class.blink::protocol::CacheStorage::Backend::RequestCacheNamesCallback" = type { i32 (...)** }
%"class.crdtp::DispatchResponse" = type { i32, %"class.std::__1::basic_string" }
%"class.base::OnceCallback.1929" = type { %"class.base::internal::CallbackBase" }
%"class.base::trace_event::TraceArguments" = type { i8, [2 x i8], [2 x i8*], [2 x %"union.base::trace_event::TraceValue"] }
%"union.base::trace_event::TraceValue" = type { i64 }
%"class.std::__1::vector.1913" = type { %"class.std::__1::__vector_base.1914" }
%"class.std::__1::__vector_base.1914" = type { %"class.std::__1::unique_ptr.1915"*, %"class.std::__1::unique_ptr.1915"*, %"class.std::__1::__compressed_pair.1921" }
%"class.std::__1::unique_ptr.1915" = type { %"class.std::__1::__compressed_pair.1916" }
%"class.std::__1::__compressed_pair.1916" = type { %"struct.std::__1::__compressed_pair_elem.1917" }
%"struct.std::__1::__compressed_pair_elem.1917" = type { %"class.blink::protocol::CacheStorage::Cache"* }
%"class.blink::protocol::CacheStorage::Cache" = type { %"class.crdtp::ProtocolObject", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String" }
%"class.crdtp::ProtocolObject" = type { %"class.crdtp::Serializable" }
%"class.crdtp::Serializable" = type { i32 (...)** }
%"class.std::__1::__compressed_pair.1921" = type { %"struct.std::__1::__compressed_pair_elem.1922" }
%"struct.std::__1::__compressed_pair_elem.1922" = type { %"class.std::__1::unique_ptr.1915"* }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }
%"class.WTF::StringAppend" = type { i8*, %"class.WTF::String" }
%"class.mojo::GenericPendingReceiver" = type <{ %"class.absl::optional.489", %"class.mojo::ScopedHandleBase", [4 x i8] }>
%"class.mojo::PendingReceiver" = type { %"struct.mojo::internal::PendingReceiverState" }
%"struct.mojo::internal::PendingReceiverState" = type { %"class.mojo::ScopedHandleBase", %"class.mojo::ConnectionGroup::Ref" }
%"class.blink::BrowserInterfaceBrokerProxy" = type { %"class.mojo::Remote.2127", %"class.std::__1::map.2135" }
%"class.mojo::Remote.2127" = type { %"class.mojo::internal::InterfacePtrState.2128" }
%"class.mojo::internal::InterfacePtrState.2128" = type { %"class.mojo::internal::InterfacePtrStateBase.base", %"class.std::__1::unique_ptr.2129" }
%"class.std::__1::unique_ptr.2129" = type { %"class.std::__1::__compressed_pair.2130" }
%"class.std::__1::__compressed_pair.2130" = type { %"struct.std::__1::__compressed_pair_elem.2131" }
%"struct.std::__1::__compressed_pair_elem.2131" = type { %"class.blink::mojom::BrowserInterfaceBrokerProxy"* }
%"class.blink::mojom::BrowserInterfaceBrokerProxy" = type { %"class.blink::mojom::BrowserInterfaceBroker", %"class.mojo::MessageReceiverWithResponder"* }
%"class.blink::mojom::BrowserInterfaceBroker" = type { i32 (...)** }
%"class.std::__1::map.2135" = type { %"class.std::__1::__tree.2136" }
%"class.std::__1::__tree.2136" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.2137", %"class.std::__1::__compressed_pair.2141" }
%"class.std::__1::__compressed_pair.2137" = type { %"struct.std::__1::__compressed_pair_elem.312" }
%"class.std::__1::__compressed_pair.2141" = type { %"struct.std::__1::__compressed_pair_elem.317" }
%"class.crdtp::detail::ValueMaybe" = type { i8, i32 }
%"class.crdtp::detail::ValueMaybe.1936" = type { i8, %"class.WTF::String" }
%"class.blink::protocol::CacheStorage::Backend::RequestEntriesCallback" = type { i32 (...)** }
%"class.base::OnceCallback.1937" = type { %"class.base::internal::CallbackBase" }
%"class.blink::protocol::CacheStorage::Backend::DeleteCacheCallback" = type { i32 (...)** }
%"class.base::OnceCallback.1946" = type { %"class.base::internal::CallbackBase" }
%"class.blink::protocol::CacheStorage::Backend::DeleteEntryCallback" = type { i32 (...)** }
%"class.std::__1::vector.1960" = type { %"class.std::__1::__vector_base.1961" }
%"class.std::__1::__vector_base.1961" = type { %"class.std::__1::unique_ptr.1962"*, %"class.std::__1::unique_ptr.1962"*, %"class.std::__1::__compressed_pair.1971" }
%"class.std::__1::unique_ptr.1962" = type { %"class.std::__1::__compressed_pair.1963" }
%"class.std::__1::__compressed_pair.1963" = type { %"struct.std::__1::__compressed_pair_elem.1964" }
%"struct.std::__1::__compressed_pair_elem.1964" = type { %"class.blink::protocol::CacheStorage::Header"* }
%"class.blink::protocol::CacheStorage::Header" = type { %"class.crdtp::ProtocolObject.1965", %"class.WTF::String", %"class.WTF::String" }
%"class.crdtp::ProtocolObject.1965" = type { %"class.crdtp::Serializable" }
%"class.std::__1::__compressed_pair.1971" = type { %"struct.std::__1::__compressed_pair_elem.1972" }
%"struct.std::__1::__compressed_pair_elem.1972" = type { %"class.std::__1::unique_ptr.1962"* }
%"class.blink::protocol::CacheStorage::Backend::RequestCachedResponseCallback" = type { i32 (...)** }
%"class.blink::mojom::blink::CacheQueryOptions" = type { i8, i8, i8 }
%"class.mojo::InlinedStructPtr.2014" = type { %"class.blink::mojom::blink::CacheQueryOptions", i32 }
%"class.mojo::StructPtr.1985" = type { %"class.std::__1::unique_ptr.1986" }
%"class.std::__1::unique_ptr.1986" = type { %"class.std::__1::__compressed_pair.1987" }
%"class.std::__1::__compressed_pair.1987" = type { %"struct.std::__1::__compressed_pair_elem.1988" }
%"struct.std::__1::__compressed_pair_elem.1988" = type { %"class.blink::mojom::blink::FetchAPIRequest"* }
%"class.blink::mojom::blink::FetchAPIRequest" = type { i32, i8, i32, i32, %"class.blink::KURL", %"class.WTF::String", %"class.WTF::HashMap.1989", %class.scoped_refptr.1994, %"class.blink::ResourceRequestBody", %"class.mojo::StructPtr.2000", i32, i32, i32, %"class.WTF::String", i32, %"class.absl::optional.494", i8, i8, i8, %"class.WTF::String" }
%"class.WTF::HashMap.1989" = type { %"class.WTF::HashTable.1990" }
%"class.WTF::HashTable.1990" = type <{ %"struct.WTF::KeyValuePair.1993"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1993" = type { %"class.WTF::String", %"class.WTF::String" }
%class.scoped_refptr.1994 = type { %"class.blink::BlobDataHandle"* }
%"class.blink::BlobDataHandle" = type { %"class.WTF::ThreadSafeRefCounted.1995", %"class.WTF::String", %"class.WTF::String", i64, i8, %"class.mojo::PendingRemote.1997", %"class.WTF::Mutex" }
%"class.WTF::ThreadSafeRefCounted.1995" = type { %"class.base::RefCountedThreadSafe.1996" }
%"class.base::RefCountedThreadSafe.1996" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.mojo::PendingRemote.1997" = type { %"struct.mojo::internal::PendingRemoteState" }
%"class.blink::ResourceRequestBody" = type { %class.scoped_refptr.1998, %"class.mojo::PendingRemote.1999" }
%class.scoped_refptr.1998 = type { %"class.blink::EncodedFormData"* }
%"class.blink::EncodedFormData" = type opaque
%"class.mojo::PendingRemote.1999" = type { %"struct.mojo::internal::PendingRemoteState" }
%"class.mojo::StructPtr.2000" = type { %"class.std::__1::unique_ptr.2001" }
%"class.std::__1::unique_ptr.2001" = type { %"class.std::__1::__compressed_pair.2002" }
%"class.std::__1::__compressed_pair.2002" = type { %"struct.std::__1::__compressed_pair_elem.2003" }
%"struct.std::__1::__compressed_pair_elem.2003" = type { %"class.blink::mojom::blink::Referrer"* }
%"class.blink::mojom::blink::Referrer" = type <{ %"class.blink::KURL", i32, [4 x i8] }>
%"class.mojo::StructPtr.2010" = type { %"class.std::__1::unique_ptr.2011" }
%"class.std::__1::unique_ptr.2011" = type { %"class.std::__1::__compressed_pair.2012" }
%"class.std::__1::__compressed_pair.2012" = type { %"struct.std::__1::__compressed_pair_elem.2013" }
%"struct.std::__1::__compressed_pair_elem.2013" = type { %"class.blink::mojom::blink::MultiCacheQueryOptions"* }
%"class.blink::mojom::blink::MultiCacheQueryOptions" = type { %"class.mojo::InlinedStructPtr.2014", %"class.WTF::String" }
%"class.base::OnceCallback.2018" = type { %"class.base::internal::CallbackBase" }
%"class.crdtp::UberDispatcher" = type { i32 (...)**, %"class.crdtp::FrontendChannel"*, %"class.std::__1::vector.2021", %"class.std::__1::vector.2029" }
%"class.std::__1::vector.2021" = type { %"class.std::__1::__vector_base.2022" }
%"class.std::__1::__vector_base.2022" = type { %"struct.std::__1::pair.2023"*, %"struct.std::__1::pair.2023"*, %"class.std::__1::__compressed_pair.2024" }
%"struct.std::__1::pair.2023" = type opaque
%"class.std::__1::__compressed_pair.2024" = type { %"struct.std::__1::__compressed_pair_elem.2025" }
%"struct.std::__1::__compressed_pair_elem.2025" = type { %"struct.std::__1::pair.2023"* }
%"class.std::__1::vector.2029" = type { %"class.std::__1::__vector_base.2030" }
%"class.std::__1::__vector_base.2030" = type { %"struct.std::__1::pair.2031"*, %"struct.std::__1::pair.2031"*, %"class.std::__1::__compressed_pair.2032" }
%"struct.std::__1::pair.2031" = type opaque
%"class.std::__1::__compressed_pair.2032" = type { %"struct.std::__1::__compressed_pair_elem.2033" }
%"struct.std::__1::__compressed_pair_elem.2033" = type { %"struct.std::__1::pair.2031"* }
%"class.WTF::StringTypeAdapter" = type <{ i8*, i32, [4 x i8] }>
%"class.WTF::StringTypeAdapter.2147" = type { %"class.WTF::StringTypeAdapter.2148" }
%"class.WTF::StringTypeAdapter.2148" = type { %"class.WTF::StringView" }
%"class.WTF::StringView" = type <{ %"class.WTF::StringImpl"*, i8*, i32, [4 x i8] }>
%"class.logging::CheckOpResult" = type { i8* }
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.logging::LogMessage" = type { i32 (...)**, i32, %"class.std::__1::basic_ostringstream", i64, i8*, i32, %"class.base::ScopedClearLastErrorBase" }
%"class.std::__1::basic_ostringstream" = type { %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.base::ScopedClearLastErrorBase" = type { i32 }
%"class.mojo::PendingRemote.2149" = type { %"struct.mojo::internal::PendingRemoteState" }
%struct.MojoCreateMessagePipeOptions = type { i32, i32 }
%"class.base::TaskRunner" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.251", [4 x i8] }>
%"class.WTF::StringBuilder" = type <{ %"class.WTF::String", %union.anon.2179, i32, i8, i8, [2 x i8] }>
%union.anon.2179 = type { %"class.WTF::Vector.2180" }
%"class.WTF::Vector.2180" = type { %"class.WTF::VectorBuffer.2181" }
%"class.WTF::VectorBuffer.2181" = type { %"class.WTF::VectorBufferBase.221", [16 x i8] }
%"class.std::__1::__vector_base_common" = type { i8 }
%"class.WTF::Vector.2184" = type { %"class.WTF::VectorBuffer.2185" }
%"class.WTF::VectorBuffer.2185" = type { %"class.WTF::VectorBufferBase.2186", [16 x i8] }
%"class.WTF::VectorBufferBase.2186" = type { i16*, i32, i32 }
%"class.mojo::StructPtr.2200" = type { %"class.std::__1::unique_ptr.2201" }
%"class.std::__1::unique_ptr.2201" = type { %"class.std::__1::__compressed_pair.2202" }
%"class.std::__1::__compressed_pair.2202" = type { %"struct.std::__1::__compressed_pair_elem.2203" }
%"struct.std::__1::__compressed_pair_elem.2203" = type { %"class.blink::mojom::blink::OpenResult"* }
%"class.blink::mojom::blink::OpenResult" = type { i32, %"union.blink::mojom::blink::OpenResult::Union_" }
%"union.blink::mojom::blink::OpenResult::Union_" = type { %"class.mojo::PendingAssociatedRemote"* }
%"class.mojo::PendingAssociatedRemote" = type <{ %"class.mojo::ScopedInterfaceEndpointHandle", i32, [4 x i8] }>
%"class.std::__1::unique_ptr.2212" = type { %"class.std::__1::__compressed_pair.2213" }
%"class.std::__1::__compressed_pair.2213" = type { %"struct.std::__1::__compressed_pair_elem.2214" }
%"struct.std::__1::__compressed_pair_elem.2214" = type { %"class.blink::(anonymous namespace)::GetCacheKeysForRequestData"* }
%"class.blink::(anonymous namespace)::GetCacheKeysForRequestData" = type { %"struct.blink::(anonymous namespace)::DataRequestParams", %"class.mojo::AssociatedRemote.2215", %"class.std::__1::unique_ptr.1930" }
%"struct.blink::(anonymous namespace)::DataRequestParams" = type { %"class.WTF::String", i32, i32, %"class.WTF::String" }
%"class.mojo::AssociatedRemote.2215" = type { %"class.mojo::internal::AssociatedInterfacePtrState.2216" }
%"class.mojo::internal::AssociatedInterfacePtrState.2216" = type { %"class.mojo::internal::AssociatedInterfacePtrStateBase.base", %"class.std::__1::unique_ptr.2217" }
%"class.std::__1::unique_ptr.2217" = type { %"class.std::__1::__compressed_pair.2218" }
%"class.std::__1::__compressed_pair.2218" = type { %"struct.std::__1::__compressed_pair_elem.2219" }
%"struct.std::__1::__compressed_pair_elem.2219" = type { %"class.blink::mojom::blink::CacheStorageCacheProxy"* }
%"class.blink::mojom::blink::CacheStorageCacheProxy" = type { %"class.blink::mojom::blink::CacheStorageCache", %"class.mojo::MessageReceiverWithResponder"* }
%"class.blink::mojom::blink::CacheStorageCache" = type { i32 (...)** }
%"class.std::__1::unique_ptr.1930" = type { %"class.std::__1::__compressed_pair.1931" }
%"class.std::__1::__compressed_pair.1931" = type { %"struct.std::__1::__compressed_pair_elem.1932" }
%"struct.std::__1::__compressed_pair_elem.1932" = type { %"class.blink::protocol::CacheStorage::Backend::RequestEntriesCallback"* }
%"class.base::OnceCallback.2232" = type { %"class.base::internal::CallbackBase" }
%"class.mojo::internal::AssociatedInterfacePtrStateBase" = type <{ %"class.std::__1::unique_ptr.371", i32, [4 x i8] }>
%"class.mojo::AssociatedInterfacePtrInfo" = type <{ %"class.mojo::ScopedInterfaceEndpointHandle", i32, [4 x i8] }>
%"class.mojo::StructPtr.2235" = type { %"class.std::__1::unique_ptr.2236" }
%"class.std::__1::unique_ptr.2236" = type { %"class.std::__1::__compressed_pair.2237" }
%"class.std::__1::__compressed_pair.2237" = type { %"struct.std::__1::__compressed_pair_elem.2238" }
%"struct.std::__1::__compressed_pair_elem.2238" = type { %"class.blink::mojom::blink::CacheKeysResult"* }
%"class.blink::mojom::blink::CacheKeysResult" = type { i32, %"union.blink::mojom::blink::CacheKeysResult::Union_" }
%"union.blink::mojom::blink::CacheKeysResult::Union_" = type { %"class.WTF::Vector.2239"* }
%"class.WTF::Vector.2239" = type { %"class.WTF::VectorBuffer.2240" }
%"class.WTF::VectorBuffer.2240" = type { %"class.WTF::VectorBufferBase.2241" }
%"class.WTF::VectorBufferBase.2241" = type { %"class.mojo::StructPtr.1985"*, i32, i32 }
%class.scoped_refptr.2273 = type { %"class.blink::(anonymous namespace)::ResponsesAccumulator"* }
%"class.blink::(anonymous namespace)::ResponsesAccumulator" = type { %"class.WTF::RefCounted.2274", %"struct.blink::(anonymous namespace)::DataRequestParams", i32, %"class.WTF::Vector.2276", %"class.mojo::AssociatedRemote.2215", %"class.std::__1::unique_ptr.1930" }
%"class.WTF::RefCounted.2274" = type { %"class.base::RefCounted.2275" }
%"class.base::RefCounted.2275" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.2276" = type { %"class.WTF::VectorBuffer.2277" }
%"class.WTF::VectorBuffer.2277" = type { %"class.WTF::VectorBufferBase.2278" }
%"class.WTF::VectorBufferBase.2278" = type { %"struct.blink::(anonymous namespace)::RequestResponse"*, i32, i32 }
%"struct.blink::(anonymous namespace)::RequestResponse" = type { %"class.WTF::String", %"class.WTF::String", %"class.blink::HTTPHeaderMap", i32, %"class.WTF::String", double, i32, [4 x i8], %"class.blink::HTTPHeaderMap" }
%"class.std::__1::vector.2254" = type { %"class.std::__1::__vector_base.2255" }
%"class.std::__1::__vector_base.2255" = type { %"class.std::__1::unique_ptr.2256"*, %"class.std::__1::unique_ptr.2256"*, %"class.std::__1::__compressed_pair.2265" }
%"class.std::__1::unique_ptr.2256" = type { %"class.std::__1::__compressed_pair.2257" }
%"class.std::__1::__compressed_pair.2257" = type { %"struct.std::__1::__compressed_pair_elem.2258" }
%"struct.std::__1::__compressed_pair_elem.2258" = type { %"class.blink::protocol::CacheStorage::DataEntry"* }
%"class.blink::protocol::CacheStorage::DataEntry" = type { %"class.crdtp::ProtocolObject.2259", %"class.WTF::String", %"class.WTF::String", %"class.std::__1::unique_ptr.1957", double, i32, %"class.WTF::String", %"class.WTF::String", %"class.std::__1::unique_ptr.1957" }
%"class.crdtp::ProtocolObject.2259" = type { %"class.crdtp::Serializable" }
%"class.std::__1::unique_ptr.1957" = type { %"class.std::__1::__compressed_pair.1958" }
%"class.std::__1::__compressed_pair.1958" = type { %"struct.std::__1::__compressed_pair_elem.1959" }
%"struct.std::__1::__compressed_pair_elem.1959" = type { %"class.std::__1::vector.1960"* }
%"class.std::__1::__compressed_pair.2265" = type { %"struct.std::__1::__compressed_pair_elem.2266" }
%"struct.std::__1::__compressed_pair_elem.2266" = type { %"class.std::__1::unique_ptr.2256"* }
%"class.WTF::StringHasher" = type { i32, i8, i16 }
%"class.mojo::StructPtr.2303" = type { %"class.std::__1::unique_ptr.2304" }
%"class.std::__1::unique_ptr.2304" = type { %"class.std::__1::__compressed_pair.2305" }
%"class.std::__1::__compressed_pair.2305" = type { %"struct.std::__1::__compressed_pair_elem.2306" }
%"struct.std::__1::__compressed_pair_elem.2306" = type { %"class.blink::mojom::blink::MatchResult"* }
%"class.blink::mojom::blink::MatchResult" = type { i32, %"union.blink::mojom::blink::MatchResult::Union_" }
%"union.blink::mojom::blink::MatchResult::Union_" = type { %"class.mojo::StructPtr.2307"* }
%"class.mojo::StructPtr.2307" = type { %"class.std::__1::unique_ptr.2308" }
%"class.std::__1::unique_ptr.2308" = type { %"class.std::__1::__compressed_pair.2309" }
%"class.std::__1::__compressed_pair.2309" = type { %"struct.std::__1::__compressed_pair_elem.2310" }
%"struct.std::__1::__compressed_pair_elem.2310" = type { %"class.blink::mojom::blink::FetchAPIResponse"* }
%"class.blink::mojom::blink::FetchAPIResponse" = type { %"class.WTF::Vector.2311", i16, %"class.WTF::String", i32, i64, i32, [4 x i8], %"class.WTF::HashMap.2316", %"class.WTF::String", %"class.WTF::String", %class.scoped_refptr.1994, i32, %"class.base::Time", %"class.WTF::String", %"class.WTF::Vector.898", %class.scoped_refptr.1994, %class.scoped_refptr.1994, %"class.mojo::StructPtr.2320", i32, %"class.WTF::String", i8, i8, %"class.absl::optional.2363" }
%"class.WTF::Vector.2311" = type { %"class.WTF::VectorBuffer.2312" }
%"class.WTF::VectorBuffer.2312" = type { %"class.WTF::VectorBufferBase.2313" }
%"class.WTF::VectorBufferBase.2313" = type { %"class.blink::KURL"*, i32, i32 }
%"class.WTF::HashMap.2316" = type { %"class.WTF::HashTable.2317" }
%"class.WTF::HashTable.2317" = type <{ %"struct.WTF::KeyValuePair.1993"*, i32, i32, i32, [4 x i8] }>
%"class.mojo::StructPtr.2320" = type { %"class.std::__1::unique_ptr.2321" }
%"class.std::__1::unique_ptr.2321" = type { %"class.std::__1::__compressed_pair.2322" }
%"class.std::__1::__compressed_pair.2322" = type { %"struct.std::__1::__compressed_pair_elem.2323" }
%"struct.std::__1::__compressed_pair_elem.2323" = type { %"class.network::mojom::blink::ParsedHeaders"* }
%"class.network::mojom::blink::ParsedHeaders" = type <{ %"class.WTF::Vector.873", %"class.mojo::StructPtr.2324", %"struct.network::CrossOriginEmbedderPolicy", %"struct.network::CrossOriginOpenerPolicy", i8, [7 x i8], %"class.absl::optional.2331", %"class.base::TimeDelta", %"class.absl::optional.2331", i32, [4 x i8], %"class.WTF::Vector.2341", %"class.mojo::StructPtr.2353", i8, [7 x i8] }>
%"class.mojo::StructPtr.2324" = type { %"class.std::__1::unique_ptr.2325" }
%"class.std::__1::unique_ptr.2325" = type { %"class.std::__1::__compressed_pair.2326" }
%"class.std::__1::__compressed_pair.2326" = type { %"struct.std::__1::__compressed_pair_elem.2327" }
%"struct.std::__1::__compressed_pair_elem.2327" = type { %"class.network::mojom::blink::AllowCSPFromHeaderValue"* }
%"class.network::mojom::blink::AllowCSPFromHeaderValue" = type { i32, %"union.network::mojom::blink::AllowCSPFromHeaderValue::Union_" }
%"union.network::mojom::blink::AllowCSPFromHeaderValue::Union_" = type { %class.scoped_refptr.805* }
%"struct.network::CrossOriginEmbedderPolicy" = type { i32, %"class.absl::optional.489", i32, %"class.absl::optional.489" }
%"struct.network::CrossOriginOpenerPolicy" = type { i32, %"class.absl::optional.489", i32, %"class.absl::optional.489" }
%"class.absl::optional.2331" = type { %"class.absl::optional_internal::optional_data.2332" }
%"class.absl::optional_internal::optional_data.2332" = type { %"class.absl::optional_internal::optional_data_base.2333" }
%"class.absl::optional_internal::optional_data_base.2333" = type { %"class.absl::optional_internal::optional_data_dtor_base.2334" }
%"class.absl::optional_internal::optional_data_dtor_base.2334" = type { i8, %union.anon.2335 }
%union.anon.2335 = type { %"class.WTF::Vector.2336" }
%"class.WTF::Vector.2336" = type { %"class.WTF::VectorBuffer.2337" }
%"class.WTF::VectorBuffer.2337" = type { %"class.WTF::VectorBufferBase.2338" }
%"class.WTF::VectorBufferBase.2338" = type { i32*, i32, i32 }
%"class.WTF::Vector.2341" = type { %"class.WTF::VectorBuffer.2342" }
%"class.WTF::VectorBuffer.2342" = type { %"class.WTF::VectorBufferBase.2343" }
%"class.WTF::VectorBufferBase.2343" = type { %"class.mojo::StructPtr.2344"*, i32, i32 }
%"class.mojo::StructPtr.2344" = type { %"class.std::__1::unique_ptr.2345" }
%"class.std::__1::unique_ptr.2345" = type { %"class.std::__1::__compressed_pair.2346" }
%"class.std::__1::__compressed_pair.2346" = type { %"struct.std::__1::__compressed_pair_elem.2347" }
%"struct.std::__1::__compressed_pair_elem.2347" = type { %"class.network::mojom::blink::LinkHeader"* }
%"class.network::mojom::blink::LinkHeader" = type { %"class.blink::KURL", i32, i32, i32, %"class.WTF::String" }
%"class.mojo::StructPtr.2353" = type { %"class.std::__1::unique_ptr.2354" }
%"class.std::__1::unique_ptr.2354" = type { %"class.std::__1::__compressed_pair.2355" }
%"class.std::__1::__compressed_pair.2355" = type { %"struct.std::__1::__compressed_pair_elem.2356" }
%"struct.std::__1::__compressed_pair_elem.2356" = type { %"class.network::mojom::blink::TimingAllowOrigin"* }
%"class.network::mojom::blink::TimingAllowOrigin" = type { i32, %"union.network::mojom::blink::TimingAllowOrigin::Union_" }
%"union.network::mojom::blink::TimingAllowOrigin::Union_" = type { %"class.WTF::Vector.898"* }
%"class.absl::optional.2363" = type { %"class.absl::optional_internal::optional_data.2364" }
%"class.absl::optional_internal::optional_data.2364" = type { %"class.absl::optional_internal::optional_data_base.2365" }
%"class.absl::optional_internal::optional_data_base.2365" = type { %"class.absl::optional_internal::optional_data_dtor_base.2366" }
%"class.absl::optional_internal::optional_data_dtor_base.2366" = type { i8, %union.anon.2367 }
%union.anon.2367 = type { %"class.net::AuthChallengeInfo" }
%"class.net::AuthChallengeInfo" = type { i8, %"class.url::Origin", %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::basic_string" }
%"class.WTF::Vector.2436" = type { %"class.WTF::VectorBuffer.2437" }
%"class.WTF::VectorBuffer.2437" = type { %"class.WTF::VectorBufferBase.2438" }
%"class.WTF::VectorBufferBase.2438" = type { %"class.mojo::StructPtr.2439"*, i32, i32 }
%"class.mojo::StructPtr.2439" = type { %"class.std::__1::unique_ptr.2440" }
%"class.std::__1::unique_ptr.2440" = type { %"class.std::__1::__compressed_pair.2441" }
%"class.std::__1::__compressed_pair.2441" = type { %"struct.std::__1::__compressed_pair_elem.2442" }
%"struct.std::__1::__compressed_pair_elem.2442" = type { %"class.blink::mojom::blink::BatchOperation"* }
%"class.blink::mojom::blink::BatchOperation" = type { i32, %"class.mojo::StructPtr.1985", %"class.mojo::StructPtr.2307", %"class.mojo::InlinedStructPtr.2014" }
%"class.base::OnceCallback.2448" = type { %"class.base::internal::CallbackBase" }
%"class.mojo::InlinedStructPtr.2455" = type <{ %"class.blink::mojom::blink::CacheStorageVerboseError", i32, [4 x i8] }>
%"class.blink::mojom::blink::CacheStorageVerboseError" = type { i32, %"class.WTF::String" }
%"class.blink::protocol::DictionaryValue" = type { %"class.blink::protocol::Value.base", [4 x i8], %"class.std::__1::unordered_map", %"class.std::__1::vector.2496" }
%"class.blink::protocol::Value.base" = type <{ %"class.crdtp::Serializable", i32 }>
%"class.std::__1::unordered_map" = type { %"class.std::__1::__hash_table.2472" }
%"class.std::__1::__hash_table.2472" = type <{ %"class.std::__1::unique_ptr.2473", %"class.std::__1::__compressed_pair.2483", %"class.std::__1::__compressed_pair.2488", %"class.std::__1::__compressed_pair.2491", [4 x i8] }>
%"class.std::__1::unique_ptr.2473" = type { %"class.std::__1::__compressed_pair.2474" }
%"class.std::__1::__compressed_pair.2474" = type { %"struct.std::__1::__compressed_pair_elem.2475", %"struct.std::__1::__compressed_pair_elem.2477" }
%"struct.std::__1::__compressed_pair_elem.2475" = type { %"struct.std::__1::__hash_node_base.2476"** }
%"struct.std::__1::__hash_node_base.2476" = type { %"struct.std::__1::__hash_node_base.2476"* }
%"struct.std::__1::__compressed_pair_elem.2477" = type { %"class.std::__1::__bucket_list_deallocator.2478" }
%"class.std::__1::__bucket_list_deallocator.2478" = type { %"class.std::__1::__compressed_pair.2479" }
%"class.std::__1::__compressed_pair.2479" = type { %"struct.std::__1::__compressed_pair_elem.317" }
%"class.std::__1::__compressed_pair.2483" = type { %"struct.std::__1::__compressed_pair_elem.2484" }
%"struct.std::__1::__compressed_pair_elem.2484" = type { %"struct.std::__1::__hash_node_base.2476" }
%"class.std::__1::__compressed_pair.2488" = type { %"struct.std::__1::__compressed_pair_elem.317" }
%"class.std::__1::__compressed_pair.2491" = type { %"struct.std::__1::__compressed_pair_elem.1242" }
%"class.std::__1::vector.2496" = type { %"class.std::__1::__vector_base.2497" }
%"class.std::__1::__vector_base.2497" = type { %"class.WTF::String"*, %"class.WTF::String"*, %"class.std::__1::__compressed_pair.2498" }
%"class.std::__1::__compressed_pair.2498" = type { %"struct.std::__1::__compressed_pair_elem.2499" }
%"struct.std::__1::__compressed_pair_elem.2499" = type { %"class.WTF::String"* }
%"class.blink::protocol::CacheStorage::CachedResponse" = type { %"class.crdtp::ProtocolObject.2509", %"class.blink::protocol::Binary" }
%"class.crdtp::ProtocolObject.2509" = type { %"class.crdtp::Serializable" }
%"class.blink::protocol::Binary" = type { %"class.crdtp::Serializable", %class.scoped_refptr.2512 }
%class.scoped_refptr.2512 = type { %"class.blink::protocol::Binary::Impl"* }
%"class.blink::protocol::Binary::Impl" = type <{ i32 (...)**, %"class.WTF::RefCounted.2513", [4 x i8] }>
%"class.WTF::RefCounted.2513" = type { %"class.base::RefCounted.2514" }
%"class.base::RefCounted.2514" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::FileReaderLoaderClient" = type { i32 (...)** }
%"class.blink::ThreadScheduler" = type { i32 (...)** }
%"class.blink::FileReaderLoader" = type { %"class.blink::mojom::blink::BlobReaderClient", i32, %"class.blink::FileReaderLoaderClient"*, %"class.WTF::TextEncoding", %"class.WTF::String", %"class.blink::ArrayBufferContents", i8, %"class.blink::Persistent.2522", %"class.WTF::String", %"class.std::__1::unique_ptr.2524", i8, i64, %"class.absl::optional.1032", i32, i32, %"class.mojo::ScopedHandleBase.2375", %"class.mojo::SimpleWatcher", %"class.mojo::Receiver.2530", i8, i8, %class.scoped_refptr.1313, %"class.base::WeakPtrFactory.2532" }
%"class.blink::mojom::blink::BlobReaderClient" = type { i32 (...)** }
%"class.blink::Persistent.2522" = type { %"class.blink::PersistentBase.2523" }
%"class.blink::PersistentBase.2523" = type { %"class.blink::DOMArrayBuffer"*, %"class.blink::PersistentNodePtr" }
%"class.blink::DOMArrayBuffer" = type { %"class.blink::DOMArrayBufferBase.base", [7 x i8] }
%"class.blink::DOMArrayBufferBase.base" = type <{ %"class.blink::ScriptWrappable", %"class.blink::ArrayBufferContents", i8 }>
%"class.std::__1::unique_ptr.2524" = type { %"class.std::__1::__compressed_pair.2525" }
%"class.std::__1::__compressed_pair.2525" = type { %"struct.std::__1::__compressed_pair_elem.2526" }
%"struct.std::__1::__compressed_pair_elem.2526" = type { %"class.blink::TextResourceDecoder"* }
%"class.blink::TextResourceDecoder" = type opaque
%"class.mojo::ScopedHandleBase.2375" = type { %"class.mojo::DataPipeConsumerHandle" }
%"class.mojo::DataPipeConsumerHandle" = type { %"class.mojo::Handle" }
%"class.mojo::Receiver.2530" = type { %"class.mojo::internal::BindingState.2531" }
%"class.mojo::internal::BindingState.2531" = type { %"class.mojo::internal::BindingStateBase", %"class.blink::mojom::blink::BlobReaderClientStub" }
%"class.blink::mojom::blink::BlobReaderClientStub" = type { %"class.mojo::MessageReceiverWithResponderStatus", %"class.blink::mojom::blink::BlobReaderClient"* }
%"class.base::WeakPtrFactory.2532" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.WTF::SharedBuffer" = type { %"class.WTF::RefCounted.2537", i64, %"class.WTF::Vector.2539", %"class.WTF::Vector.2544" }
%"class.WTF::RefCounted.2537" = type { %"class.base::RefCounted.2538" }
%"class.base::RefCounted.2538" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.2539" = type { %"class.WTF::VectorBuffer.2540" }
%"class.WTF::VectorBuffer.2540" = type { %"class.WTF::VectorBufferBase.2541" }
%"class.WTF::VectorBufferBase.2541" = type { i8*, i32, i32 }
%"class.WTF::Vector.2544" = type { %"class.WTF::VectorBuffer.2545" }
%"class.WTF::VectorBuffer.2545" = type { %"class.WTF::VectorBufferBase.2546" }
%"class.WTF::VectorBufferBase.2546" = type { %"class.std::__1::unique_ptr.2547"*, i32, i32 }
%"class.std::__1::unique_ptr.2547" = type opaque
%"class.blink::(anonymous namespace)::CachedResponseFileReaderLoaderClient" = type { %"class.blink::FileReaderLoaderClient", %"class.std::__1::unique_ptr.2519", %"class.std::__1::unique_ptr.1979", %class.scoped_refptr.2536 }
%"class.std::__1::unique_ptr.2519" = type { %"class.std::__1::__compressed_pair.2520" }
%"class.std::__1::__compressed_pair.2520" = type { %"struct.std::__1::__compressed_pair_elem.2521" }
%"struct.std::__1::__compressed_pair_elem.2521" = type { %"class.blink::FileReaderLoader"* }
%"class.std::__1::unique_ptr.1979" = type { %"class.std::__1::__compressed_pair.1980" }
%"class.std::__1::__compressed_pair.1980" = type { %"struct.std::__1::__compressed_pair_elem.1981" }
%"struct.std::__1::__compressed_pair_elem.1981" = type { %"class.blink::protocol::CacheStorage::Backend::RequestCachedResponseCallback"* }
%class.scoped_refptr.2536 = type { %"class.WTF::SharedBuffer"* }

$_ZNK5blink18InspectorBaseAgentINS_8protocol12CacheStorage8MetainfoEE5TraceEPNS_7VisitorE = comdat any

$_ZN5blink14InspectorAgent7RestoreEv = comdat any

$_ZN5blink14InspectorAgent26DidCommitLoadForLocalFrameEPNS_10LocalFrameE = comdat any

$_ZN5blink14InspectorAgent33FlushPendingProtocolNotificationsEv = comdat any

$_ZN5blink18InspectorBaseAgentINS_8protocol12CacheStorage8MetainfoEE4InitEPNS_13CoreProbeSinkEPN5crdtp14UberDispatcherEPNS_21InspectorSessionStateE = comdat any

$_ZN5blink18InspectorBaseAgentINS_8protocol12CacheStorage8MetainfoEE7DisposeEv = comdat any

$_ZN5blink18InspectorBaseAgentINS_8protocol12CacheStorage8MetainfoEE7disableEv = comdat any

$_ZThn8_N5blink18InspectorBaseAgentINS_8protocol12CacheStorage8MetainfoEE7disableEv = comdat any

$_ZN5blink18InspectorBaseAgentINS_8protocol12CacheStorage8MetainfoEED2Ev = comdat any

$_ZN5blink18InspectorBaseAgentINS_8protocol12CacheStorage8MetainfoEED0Ev = comdat any

$_ZThn8_N5blink18InspectorBaseAgentINS_8protocol12CacheStorage8MetainfoEED1Ev = comdat any

$_ZThn8_N5blink18InspectorBaseAgentINS_8protocol12CacheStorage8MetainfoEED0Ev = comdat any

$_ZNK3WTF12StringAppendIPKcNS_6StringEEcvS3_Ev = comdat any

$_ZNK3WTF12StringAppendIPKcNS_6StringEE6lengthEv = comdat any

$_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_N4mojo6RemoteIN5blink5mojom5blink12CacheStorageEEEEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENSE_IS9_EEEESF_NS_18PartitionAllocatorEE4findERKS1_ = comdat any

$_ZN4mojo6RemoteIN5blink5mojom5blink12CacheStorageEE26BindNewPipeAndPassReceiverE13scoped_refptrIN4base19SequencedTaskRunnerEE = comdat any

$_ZN4mojo6RemoteIN5blink5mojom5blink12CacheStorageEE4BindENS_13PendingRemoteIS4_EE13scoped_refptrIN4base19SequencedTaskRunnerEE = comdat any

$_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_N4mojo6RemoteIN5blink5mojom5blink12CacheStorageEEEEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENSE_IS9_EEEESF_NS_18PartitionAllocatorEE6insertINS_17HashMapTranslatorISH_SC_SI_EERKS1_S9_EENS_18HashTableAddResultISJ_SA_EEOT0_OT1_ = comdat any

$_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_N4mojo6RemoteIN5blink5mojom5blink12CacheStorageEEEEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENSE_IS9_EEEESF_NS_18PartitionAllocatorEE6ExpandEPSA_ = comdat any

$_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_N4mojo6RemoteIN5blink5mojom5blink12CacheStorageEEEEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENSE_IS9_EEEESF_NS_18PartitionAllocatorEE8RehashToEPSA_jSK_ = comdat any

$_ZN3WTF26HashTableBucketInitializerILb0EE10InitializeINS_18HashMapValueTraitsINS_10HashTraitsINS_6StringEEENS4_IN4mojo6RemoteIN5blink5mojom5blink12CacheStorageEEEEEEENS_18PartitionAllocatorENS_12KeyValuePairIS5_SD_EEEEvRT1_ = comdat any

$_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_N4mojo6RemoteIN5blink5mojom5blink12CacheStorageEEEEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENSE_IS9_EEEESF_NS_18PartitionAllocatorEE16LookupForWritingERKS1_ = comdat any

$_ZN3WTF5MoverINS_12KeyValuePairINS_6StringEN4mojo6RemoteIN5blink5mojom5blink12CacheStorageEEEEENS_18PartitionAllocatorENS_18HashMapValueTraitsINS_10HashTraitsIS2_EENSD_IS9_EEEELb1EE4MoveEOSA_RSA_ = comdat any

$_ZN5blink14SecurityOriginD2Ev = comdat any

$_ZN5blink10TraceTraitINS_15InspectedFramesEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink10TraceTraitINS_13CoreProbeSinkEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZNSt3__16vectorINS_10unique_ptrIN5blink8protocol12CacheStorage5CacheENS_14default_deleteIS5_EEEENS_9allocatorIS8_EEE24__emplace_back_slow_pathIJS8_EEEvDpOT_ = comdat any

$_ZN3WTF13StringBuilder6AppendERKNS_10StringViewE = comdat any

$_ZN3WTF13StringBuilder6AppendEh = comdat any

$_ZN3WTF6VectorIDsLj8ENS_18PartitionAllocatorEE14AppendSlowCaseIRDsEEvOT_ = comdat any

$_ZN3WTF6VectorIDsLj8ENS_18PartitionAllocatorEE14ExpandCapacityEj = comdat any

$_ZN3WTF6VectorIDsLj8ENS_18PartitionAllocatorEE16ReallocateBufferEj = comdat any

$_ZN3WTF18PartitionAllocator13QuantizedSizeIDsEEmm = comdat any

$_ZN3WTF12VectorBufferIDsLj8ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPDs = comdat any

$_ZN3WTF6VectorIhLj16ENS_18PartitionAllocatorEE14AppendSlowCaseIRhEEvOT_ = comdat any

$_ZN3WTF6VectorIhLj16ENS_18PartitionAllocatorEE14ExpandCapacityEj = comdat any

$_ZN3WTF6VectorIhLj16ENS_18PartitionAllocatorEE16ReallocateBufferEj = comdat any

$_ZN3WTF18PartitionAllocator13QuantizedSizeIhEEmm = comdat any

$_ZN3WTF12VectorBufferIhLj16ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPh = comdat any

$_ZN4mojo16AssociatedRemoteIN5blink5mojom5blink17CacheStorageCacheEE4BindENS_23PendingAssociatedRemoteIS4_EE13scoped_refptrIN4base19SequencedTaskRunnerEE = comdat any

$_ZN4mojo8internal27AssociatedInterfacePtrStateIN5blink5mojom5blink17CacheStorageCacheEE4BindENS_26AssociatedInterfacePtrInfoIS5_EE13scoped_refptrIN4base19SequencedTaskRunnerEE = comdat any

$_ZN4mojo16AssociatedRemoteIN5blink5mojom5blink17CacheStorageCacheEE6UnbindEv = comdat any

$_ZN3WTF6VectorIN4mojo9StructPtrIN5blink5mojom5blink15FetchAPIRequestEEELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIS7_EEvOT_ = comdat any

$_ZN3WTF6VectorIN4mojo9StructPtrIN5blink5mojom5blink15FetchAPIRequestEEELj0ENS_18PartitionAllocatorEE16ReallocateBufferEj = comdat any

$_ZN3WTF18PartitionAllocator13QuantizedSizeIN4mojo9StructPtrIN5blink5mojom5blink15FetchAPIRequestEEEEEmm = comdat any

$_ZN4mojo9StructPtrIN5blink5mojom5blink15FetchAPIRequestEEC2IJRN7network5mojom11RequestModeERbRNS8_18RequestDestinationERNS2_23RequestContextFrameTypeERNS1_4KURLERN3WTF6StringERNSI_7HashMapISJ_SJ_NSI_15CaseFoldingHashENSI_10HashTraitsISJ_EESO_NSI_18PartitionAllocatorEEEDnNS1_19ResourceRequestBodyENS0_INS3_8ReferrerEEERNS8_15CredentialsModeERNS2_14FetchCacheModeERNS8_12RedirectModeESK_RN3net15RequestPriorityERN4absl8optionalIN4base16UnguessableTokenEEESB_SB_SB_SK_EEENS16_10in_place_tEDpOT_ = comdat any

$_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_S1_EENS_24KeyValuePairKeyExtractorENS_15CaseFoldingHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EES8_EES8_NS_18PartitionAllocatorEE22ReserveCapacityForSizeEj = comdat any

$_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_S1_EENS_24KeyValuePairKeyExtractorENS_15CaseFoldingHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EES8_EES8_NS_18PartitionAllocatorEE8RehashToEPS3_jSC_ = comdat any

$_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_S1_EENS_24KeyValuePairKeyExtractorENS_15CaseFoldingHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EES8_EES8_NS_18PartitionAllocatorEE8ReinsertEOS3_ = comdat any

$_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_S1_EENS_24KeyValuePairKeyExtractorENS_15CaseFoldingHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EES8_EES8_NS_18PartitionAllocatorEE16LookupForWritingERKS1_ = comdat any

$_ZN3WTF15CaseFoldingHash7GetHashEPNS_10StringImplE = comdat any

$_ZN3WTF12StringHasher28AddCharactersAssumingAlignedIDsXadL_ZNS_15CaseFoldingHash8FoldCaseIDsEEDsT_EEEEvPKS4_j = comdat any

$_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_S1_EENS_24KeyValuePairKeyExtractorENS_15CaseFoldingHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EES8_EES8_NS_18PartitionAllocatorEE29DeleteAllBucketsAndDeallocateEPS3_j = comdat any

$_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_S1_EENS_24KeyValuePairKeyExtractorENS_15CaseFoldingHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EES8_EES8_NS_18PartitionAllocatorEE6insertINS_22IdentityHashTranslatorIS5_S9_SA_EERKS1_RKS3_EENS_18HashTableAddResultISB_S3_EEOT0_OT1_ = comdat any

$_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_S1_EENS_24KeyValuePairKeyExtractorENS_15CaseFoldingHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EES8_EES8_NS_18PartitionAllocatorEE6ExpandEPS3_ = comdat any

$_ZN3WTF12KeyValuePairINS_6StringES1_EaSERKS2_ = comdat any

$_ZN3WTF9HashTableINS_12AtomicStringENS_12KeyValuePairIS1_S1_EENS_24KeyValuePairKeyExtractorENS_15CaseFoldingHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EES8_EES8_NS_18PartitionAllocatorEE6insertINS_17HashMapTranslatorIS9_S5_SA_EERKS1_SG_EENS_18HashTableAddResultISB_S3_EEOT0_OT1_ = comdat any

$_ZN3WTF9HashTableINS_12AtomicStringENS_12KeyValuePairIS1_S1_EENS_24KeyValuePairKeyExtractorENS_15CaseFoldingHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EES8_EES8_NS_18PartitionAllocatorEE6ExpandEPS3_ = comdat any

$_ZN3WTF17HashMapTranslatorINS_18HashMapValueTraitsINS_10HashTraitsINS_12AtomicStringEEES4_EENS_15CaseFoldingHashENS_18PartitionAllocatorEE9TranslateINS_12KeyValuePairIS3_S3_EERKS3_SD_EEvRT_OT0_OT1_ = comdat any

$_ZN3WTF9HashTableINS_12AtomicStringENS_12KeyValuePairIS1_S1_EENS_24KeyValuePairKeyExtractorENS_15CaseFoldingHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EES8_EES8_NS_18PartitionAllocatorEE8RehashToEPS3_jSC_ = comdat any

$_ZN3WTF9HashTableINS_12AtomicStringENS_12KeyValuePairIS1_S1_EENS_24KeyValuePairKeyExtractorENS_15CaseFoldingHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EES8_EES8_NS_18PartitionAllocatorEE8ReinsertEOS3_ = comdat any

$_ZN3WTF9HashTableINS_12AtomicStringENS_12KeyValuePairIS1_S1_EENS_24KeyValuePairKeyExtractorENS_15CaseFoldingHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EES8_EES8_NS_18PartitionAllocatorEE16LookupForWritingERKS1_ = comdat any

$_ZN3WTF9HashTableINS_12AtomicStringENS_12KeyValuePairIS1_S1_EENS_24KeyValuePairKeyExtractorENS_15CaseFoldingHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EES8_EES8_NS_18PartitionAllocatorEE29DeleteAllBucketsAndDeallocateEPS3_j = comdat any

$_ZN3WTF23CodeUnitCompareLessThanERKNS_6StringES2_ = comdat any

$_ZN3WTF9HashTableINS_12AtomicStringENS_12KeyValuePairIS1_S1_EENS_24KeyValuePairKeyExtractorENS_15CaseFoldingHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EES8_EES8_NS_18PartitionAllocatorEE22ReserveCapacityForSizeEj = comdat any

$_ZN3WTF9HashTableINS_12AtomicStringENS_12KeyValuePairIS1_S1_EENS_24KeyValuePairKeyExtractorENS_15CaseFoldingHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EES8_EES8_NS_18PartitionAllocatorEE6insertINS_22IdentityHashTranslatorIS5_S9_SA_EERKS1_RKS3_EENS_18HashTableAddResultISB_S3_EEOT0_OT1_ = comdat any

$_ZN3WTF12KeyValuePairINS_12AtomicStringES1_EaSERKS2_ = comdat any

$_ZN3WTF9HashTableINS_12AtomicStringENS_12KeyValuePairIS1_S1_EENS_24KeyValuePairKeyExtractorENS_15CaseFoldingHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EES8_EES8_NS_18PartitionAllocatorEEaSERKSB_ = comdat any

$_ZNSt3__16vectorINS_10unique_ptrIN5blink8protocol12CacheStorage6HeaderENS_14default_deleteIS5_EEEENS_9allocatorIS8_EEE24__emplace_back_slow_pathIJS8_EEEvDpOT_ = comdat any

$_ZNSt3__16vectorINS_10unique_ptrIN5blink8protocol12CacheStorage9DataEntryENS_14default_deleteIS5_EEEENS_9allocatorIS8_EEE24__emplace_back_slow_pathIJS8_EEEvDpOT_ = comdat any

$_ZN3WTF6VectorIN4mojo9StructPtrIN5blink5mojom5blink14BatchOperationEEELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIS7_EEvOT_ = comdat any

$_ZN3WTF6VectorIN4mojo9StructPtrIN5blink5mojom5blink14BatchOperationEEELj0ENS_18PartitionAllocatorEE16ReallocateBufferEj = comdat any

$_ZN3WTF18PartitionAllocator13QuantizedSizeIN4mojo9StructPtrIN5blink5mojom5blink14BatchOperationEEEEEmm = comdat any

$_ZN3WTF6VectorIN4mojo9StructPtrIN5blink5mojom5blink14BatchOperationEEELj0ENS_18PartitionAllocatorEE2atEj = comdat any

$_ZNSt3__14swapIN5blink5mojom5blink24CacheStorageVerboseErrorEEENS_9enable_ifIXaasr21is_move_constructibleIT_EE5valuesr18is_move_assignableIS6_EE5valueEvE4typeERS6_S9_ = comdat any

$_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_S1_EENS_24KeyValuePairKeyExtractorENS_15CaseFoldingHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EES8_EES8_NS_18PartitionAllocatorEE6insertINS_17HashMapTranslatorIS9_S5_SA_EES1_S1_EENS_18HashTableAddResultISB_S3_EEOT0_OT1_ = comdat any

$_ZN5blink22FileReaderLoaderClient14DidReceiveDataEv = comdat any

$_ZTVN5blink18InspectorBaseAgentINS_8protocol12CacheStorage8MetainfoEEE = comdat any

@_ZTVN5blink26InspectorCacheStorageAgentE = hidden unnamed_addr constant { [16 x i8*], [10 x i8*] } { [16 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.blink::InspectorCacheStorageAgent"*)* @_ZN5blink26InspectorCacheStorageAgentD2Ev to i8*), i8* bitcast (void (%"class.blink::InspectorCacheStorageAgent"*)* @_ZN5blink26InspectorCacheStorageAgentD0Ev to i8*), i8* bitcast (void (%"class.blink::InspectorCacheStorageAgent"*, %"class.blink::Visitor"*)* @_ZNK5blink26InspectorCacheStorageAgent5TraceEPNS_7VisitorE to i8*), i8* bitcast (void (%"class.blink::InspectorAgent"*)* @_ZN5blink14InspectorAgent7RestoreEv to i8*), i8* bitcast (void (%"class.blink::InspectorAgent"*, %"class.blink::LocalFrame"*)* @_ZN5blink14InspectorAgent26DidCommitLoadForLocalFrameEPNS_10LocalFrameE to i8*), i8* bitcast (void (%"class.blink::InspectorAgent"*)* @_ZN5blink14InspectorAgent33FlushPendingProtocolNotificationsEv to i8*), i8* bitcast (void (%"class.blink::InspectorBaseAgent"*, %"class.blink::CoreProbeSink"*, %"class.crdtp::UberDispatcher"*, %"class.blink::InspectorSessionState"*)* @_ZN5blink18InspectorBaseAgentINS_8protocol12CacheStorage8MetainfoEE4InitEPNS_13CoreProbeSinkEPN5crdtp14UberDispatcherEPNS_21InspectorSessionStateE to i8*), i8* bitcast (void (%"class.blink::InspectorBaseAgent"*)* @_ZN5blink18InspectorBaseAgentINS_8protocol12CacheStorage8MetainfoEE7DisposeEv to i8*), i8* bitcast (void (%"class.crdtp::DispatchResponse"*, %"class.blink::InspectorBaseAgent"*)* @_ZN5blink18InspectorBaseAgentINS_8protocol12CacheStorage8MetainfoEE7disableEv to i8*), i8* bitcast (void (%"class.blink::InspectorCacheStorageAgent"*, %"class.WTF::String"*, %"class.blink::protocol::CacheStorage::Backend::RequestCacheNamesCallback"*)* @_ZN5blink26InspectorCacheStorageAgent17requestCacheNamesERKN3WTF6StringENSt3__110unique_ptrINS_8protocol12CacheStorage7Backend25RequestCacheNamesCallbackENS5_14default_deleteISA_EEEE to i8*), i8* bitcast (void (%"class.blink::InspectorCacheStorageAgent"*, %"class.WTF::String"*, %"class.crdtp::detail::ValueMaybe"*, %"class.crdtp::detail::ValueMaybe"*, %"class.crdtp::detail::ValueMaybe.1936"*, %"class.blink::protocol::CacheStorage::Backend::RequestEntriesCallback"*)* @_ZN5blink26InspectorCacheStorageAgent14requestEntriesERKN3WTF6StringEN5crdtp6detail10ValueMaybeIiEES8_NS7_IS2_EENSt3__110unique_ptrINS_8protocol12CacheStorage7Backend22RequestEntriesCallbackENSA_14default_deleteISF_EEEE to i8*), i8* bitcast (void (%"class.blink::InspectorCacheStorageAgent"*, %"class.WTF::String"*, %"class.blink::protocol::CacheStorage::Backend::DeleteCacheCallback"*)* @_ZN5blink26InspectorCacheStorageAgent11deleteCacheERKN3WTF6StringENSt3__110unique_ptrINS_8protocol12CacheStorage7Backend19DeleteCacheCallbackENS5_14default_deleteISA_EEEE to i8*), i8* bitcast (void (%"class.blink::InspectorCacheStorageAgent"*, %"class.WTF::String"*, %"class.WTF::String"*, %"class.blink::protocol::CacheStorage::Backend::DeleteEntryCallback"*)* @_ZN5blink26InspectorCacheStorageAgent11deleteEntryERKN3WTF6StringES4_NSt3__110unique_ptrINS_8protocol12CacheStorage7Backend19DeleteEntryCallbackENS5_14default_deleteISA_EEEE to i8*), i8* bitcast (void (%"class.blink::InspectorCacheStorageAgent"*, %"class.WTF::String"*, %"class.WTF::String"*, %"class.std::__1::vector.1960"*, %"class.blink::protocol::CacheStorage::Backend::RequestCachedResponseCallback"*)* @_ZN5blink26InspectorCacheStorageAgent21requestCachedResponseERKN3WTF6StringES4_NSt3__110unique_ptrINS5_6vectorINS6_INS_8protocol12CacheStorage6HeaderENS5_14default_deleteISA_EEEENS5_9allocatorISD_EEEENSB_ISG_EEEENS6_INS9_7Backend29RequestCachedResponseCallbackENSB_ISK_EEEE to i8*)], [10 x i8*] [i8* inttoptr (i64 -8 to i8*), i8* null, i8* bitcast (void (%"class.blink::InspectorCacheStorageAgent"*)* @_ZThn8_N5blink26InspectorCacheStorageAgentD1Ev to i8*), i8* bitcast (void (%"class.blink::InspectorCacheStorageAgent"*)* @_ZThn8_N5blink26InspectorCacheStorageAgentD0Ev to i8*), i8* bitcast (void (%"class.blink::InspectorCacheStorageAgent"*, %"class.WTF::String"*, %"class.blink::protocol::CacheStorage::Backend::DeleteCacheCallback"*)* @_ZThn8_N5blink26InspectorCacheStorageAgent11deleteCacheERKN3WTF6StringENSt3__110unique_ptrINS_8protocol12CacheStorage7Backend19DeleteCacheCallbackENS5_14default_deleteISA_EEEE to i8*), i8* bitcast (void (%"class.blink::InspectorCacheStorageAgent"*, %"class.WTF::String"*, %"class.WTF::String"*, %"class.blink::protocol::CacheStorage::Backend::DeleteEntryCallback"*)* @_ZThn8_N5blink26InspectorCacheStorageAgent11deleteEntryERKN3WTF6StringES4_NSt3__110unique_ptrINS_8protocol12CacheStorage7Backend19DeleteEntryCallbackENS5_14default_deleteISA_EEEE to i8*), i8* bitcast (void (%"class.blink::InspectorCacheStorageAgent"*, %"class.WTF::String"*, %"class.blink::protocol::CacheStorage::Backend::RequestCacheNamesCallback"*)* @_ZThn8_N5blink26InspectorCacheStorageAgent17requestCacheNamesERKN3WTF6StringENSt3__110unique_ptrINS_8protocol12CacheStorage7Backend25RequestCacheNamesCallbackENS5_14default_deleteISA_EEEE to i8*), i8* bitcast (void (%"class.blink::InspectorCacheStorageAgent"*, %"class.WTF::String"*, %"class.WTF::String"*, %"class.std::__1::vector.1960"*, %"class.blink::protocol::CacheStorage::Backend::RequestCachedResponseCallback"*)* @_ZThn8_N5blink26InspectorCacheStorageAgent21requestCachedResponseERKN3WTF6StringES4_NSt3__110unique_ptrINS5_6vectorINS6_INS_8protocol12CacheStorage6HeaderENS5_14default_deleteISA_EEEENS5_9allocatorISD_EEEENSB_ISG_EEEENS6_INS9_7Backend29RequestCachedResponseCallbackENSB_ISK_EEEE to i8*), i8* bitcast (void (%"class.blink::InspectorCacheStorageAgent"*, %"class.WTF::String"*, %"class.crdtp::detail::ValueMaybe"*, %"class.crdtp::detail::ValueMaybe"*, %"class.crdtp::detail::ValueMaybe.1936"*, %"class.blink::protocol::CacheStorage::Backend::RequestEntriesCallback"*)* @_ZThn8_N5blink26InspectorCacheStorageAgent14requestEntriesERKN3WTF6StringEN5crdtp6detail10ValueMaybeIiEES8_NS7_IS2_EENSt3__110unique_ptrINS_8protocol12CacheStorage7Backend22RequestEntriesCallbackENSA_14default_deleteISF_EEEE to i8*), i8* bitcast (void (%"class.crdtp::DispatchResponse"*, %"class.blink::InspectorBaseAgent"*)* @_ZThn8_N5blink18InspectorBaseAgentINS_8protocol12CacheStorage8MetainfoEE7disableEv to i8*)] }, align 8
@_ZN4base11trace_event16CategoryRegistry11categories_E = external global [300 x %"struct.base::trace_event::TraceCategory"], align 16
@.str = private unnamed_addr constant [46 x i8] c"InspectorCacheStorageAgent::requestCacheNames\00", align 1
@.str.1 = private unnamed_addr constant [43 x i8] c"InspectorCacheStorageAgent::requestEntries\00", align 1
@.str.2 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@.str.3 = private unnamed_addr constant [40 x i8] c"InspectorCacheStorageAgent::deleteCache\00", align 1
@.str.4 = private unnamed_addr constant [40 x i8] c"InspectorCacheStorageAgent::deleteEntry\00", align 1
@.str.5 = private unnamed_addr constant [50 x i8] c"InspectorCacheStorageAgent::requestCachedResponse\00", align 1
@.str.6 = private unnamed_addr constant [4 x i8] c"GET\00", align 1
@_ZTVN5blink18InspectorBaseAgentINS_8protocol12CacheStorage8MetainfoEEE = linkonce_odr hidden unnamed_addr constant { [11 x i8*], [10 x i8*] } { [11 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.blink::InspectorBaseAgent"*)* @_ZN5blink18InspectorBaseAgentINS_8protocol12CacheStorage8MetainfoEED2Ev to i8*), i8* bitcast (void (%"class.blink::InspectorBaseAgent"*)* @_ZN5blink18InspectorBaseAgentINS_8protocol12CacheStorage8MetainfoEED0Ev to i8*), i8* bitcast (void (%"class.blink::InspectorBaseAgent"*, %"class.blink::Visitor"*)* @_ZNK5blink18InspectorBaseAgentINS_8protocol12CacheStorage8MetainfoEE5TraceEPNS_7VisitorE to i8*), i8* bitcast (void (%"class.blink::InspectorAgent"*)* @_ZN5blink14InspectorAgent7RestoreEv to i8*), i8* bitcast (void (%"class.blink::InspectorAgent"*, %"class.blink::LocalFrame"*)* @_ZN5blink14InspectorAgent26DidCommitLoadForLocalFrameEPNS_10LocalFrameE to i8*), i8* bitcast (void (%"class.blink::InspectorAgent"*)* @_ZN5blink14InspectorAgent33FlushPendingProtocolNotificationsEv to i8*), i8* bitcast (void (%"class.blink::InspectorBaseAgent"*, %"class.blink::CoreProbeSink"*, %"class.crdtp::UberDispatcher"*, %"class.blink::InspectorSessionState"*)* @_ZN5blink18InspectorBaseAgentINS_8protocol12CacheStorage8MetainfoEE4InitEPNS_13CoreProbeSinkEPN5crdtp14UberDispatcherEPNS_21InspectorSessionStateE to i8*), i8* bitcast (void (%"class.blink::InspectorBaseAgent"*)* @_ZN5blink18InspectorBaseAgentINS_8protocol12CacheStorage8MetainfoEE7DisposeEv to i8*), i8* bitcast (void (%"class.crdtp::DispatchResponse"*, %"class.blink::InspectorBaseAgent"*)* @_ZN5blink18InspectorBaseAgentINS_8protocol12CacheStorage8MetainfoEE7disableEv to i8*)], [10 x i8*] [i8* inttoptr (i64 -8 to i8*), i8* null, i8* bitcast (void (%"class.blink::InspectorBaseAgent"*)* @_ZThn8_N5blink18InspectorBaseAgentINS_8protocol12CacheStorage8MetainfoEED1Ev to i8*), i8* bitcast (void (%"class.blink::InspectorBaseAgent"*)* @_ZThn8_N5blink18InspectorBaseAgentINS_8protocol12CacheStorage8MetainfoEED0Ev to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void (%"class.crdtp::DispatchResponse"*, %"class.blink::InspectorBaseAgent"*)* @_ZThn8_N5blink18InspectorBaseAgentINS_8protocol12CacheStorage8MetainfoEE7disableEv to i8*)] }, comdat, align 8
@.str.7 = private unnamed_addr constant [22 x i8] c"No frame with origin \00", align 1
@_ZN3WTF10StringImpl6empty_E = external local_unnamed_addr global %"class.WTF::StringImpl"*, align 8
@.str.8 = private unnamed_addr constant [27 x i8] c"total >= adapter1.length()\00", align 1
@.str.9 = private unnamed_addr constant [70 x i8] c"../../third_party/blink/renderer/platform/wtf/text/string_operators.h\00", align 1
@.str.10 = private unnamed_addr constant [27 x i8] c"total >= adapter2.length()\00", align 1
@_ZN5blink5mojom5blink12CacheStorage5Name_E = external constant [0 x i8], align 1
@_ZTVN5blink5mojom5blink29CacheStorageResponseValidatorE = external unnamed_addr constant { [6 x i8*] }, align 8
@.str.13 = private unnamed_addr constant [23 x i8] c"new_size > table_size_\00", align 1
@.str.14 = private unnamed_addr constant [59 x i8] c"../../third_party/blink/renderer/platform/wtf/hash_table.h\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_12KeyValuePairINS_6StringEN4mojo6RemoteIN5blink5mojom5blink12CacheStorageEEEEEEEPKcv = private unnamed_addr constant [128 x i8] c"const char *WTF::GetStringWithTypeName() [T = WTF::KeyValuePair<WTF::String, mojo::Remote<blink::mojom::blink::CacheStorage> >]\00", align 1
@.str.15 = private unnamed_addr constant [18 x i8] c"Invalid cache id.\00", align 1
@_ZN5blink8protocol12CacheStorage8Metainfo10domainNameE = external constant [0 x i8], align 1
@_ZTVN5blink8protocol12CacheStorage5CacheE = external unnamed_addr constant { [5 x i8*] }, align 8
@.str.17 = private unnamed_addr constant [33 x i8] c"expanded_capacity > old_capacity\00", align 1
@.str.18 = private unnamed_addr constant [55 x i8] c"../../third_party/blink/renderer/platform/wtf/vector.h\00", align 1
@.str.20 = private unnamed_addr constant [44 x i8] c"count <= MaxElementCountInBackingStore<T>()\00", align 1
@.str.21 = private unnamed_addr constant [78 x i8] c"../../third_party/blink/renderer/platform/wtf/allocator/partition_allocator.h\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIDsEEPKcv = private unnamed_addr constant [56 x i8] c"const char *WTF::GetStringWithTypeName() [T = char16_t]\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIhEEPKcv = private unnamed_addr constant [61 x i8] c"const char *WTF::GetStringWithTypeName() [T = unsigned char]\00", align 1
@.str.22 = private unnamed_addr constant [30 x i8] c"Error requesting cache %s: %s\00", align 1
@.str.23 = private unnamed_addr constant [17 x i8] c"not implemented.\00", align 1
@.str.24 = private unnamed_addr constant [11 x i8] c"not found.\00", align 1
@.str.25 = private unnamed_addr constant [22 x i8] c"cache already exists.\00", align 1
@.str.26 = private unnamed_addr constant [16 x i8] c"quota exceeded.\00", align 1
@.str.27 = private unnamed_addr constant [17 x i8] c"cache not found.\00", align 1
@.str.28 = private unnamed_addr constant [21 x i8] c"operation too large.\00", align 1
@.str.29 = private unnamed_addr constant [17 x i8] c"storage failure.\00", align 1
@.str.30 = private unnamed_addr constant [21 x i8] c"duplicate operation.\00", align 1
@.str.31 = private unnamed_addr constant [43 x i8] c"failed Cross-Origin-Resource-Policy check.\00", align 1
@_ZN5blink5mojom5blink17CacheStorageCache5Name_E = external constant [0 x i8], align 1
@_ZTVN5blink5mojom5blink34CacheStorageCacheResponseValidatorE = external unnamed_addr constant { [6 x i8*] }, align 8
@.str.32 = private unnamed_addr constant [37 x i8] c"GetCacheKeysForRequestData::Dispatch\00", align 1
@.str.33 = private unnamed_addr constant [43 x i8] c"Error requesting requests for cache %s: %s\00", align 1
@.str.34 = private unnamed_addr constant [51 x i8] c"../../mojo/public/cpp/bindings/associated_remote.h\00", align 1
@.str.35 = private unnamed_addr constant [41 x i8] c"!internal_state_.has_pending_callbacks()\00", align 1
@.str.36 = private unnamed_addr constant [31 x i8] c"ResponsesAccumulator::Dispatch\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN4mojo9StructPtrIN5blink5mojom5blink15FetchAPIRequestEEEEEPKcv = private unnamed_addr constant [101 x i8] c"const char *WTF::GetStringWithTypeName() [T = mojo::StructPtr<blink::mojom::blink::FetchAPIRequest>]\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink12_GLOBAL__N_115RequestResponseEEEPKcv = private unnamed_addr constant [93 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::(anonymous namespace)::RequestResponse]\00", align 1
@.str.37 = private unnamed_addr constant [39 x i8] c"!static_cast<int>( new_capacity >> 31)\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_12KeyValuePairINS_6StringES2_EEEEPKcv = private unnamed_addr constant [91 x i8] c"const char *WTF::GetStringWithTypeName() [T = WTF::KeyValuePair<WTF::String, WTF::String>]\00", align 1
@_ZN3WTF10StringImpl20kLatin1CaseFoldTableE = external local_unnamed_addr constant [256 x i16], align 16
@.str.38 = private unnamed_addr constant [45 x i8] c"Error requesting responses for cache %s : %s\00", align 1
@.str.39 = private unnamed_addr constant [11 x i8] c"i < size()\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_12KeyValuePairINS_12AtomicStringES2_EEEEPKcv = private unnamed_addr constant [103 x i8] c"const char *WTF::GetStringWithTypeName() [T = WTF::KeyValuePair<WTF::AtomicString, WTF::AtomicString>]\00", align 1
@__const._ZNSt3__127__insertion_sort_incompleteIRZN5blink12_GLOBAL__N_120ResponsesAccumulator22AddRequestResponsePairERKN4mojo9StructPtrINS1_5mojom5blink15FetchAPIRequestEEERKNS5_INS7_16FetchAPIResponseEEEEUlRKNS2_15RequestResponseESI_E_PSG_EEbT0_SM_T_.__t = private unnamed_addr constant { %"class.WTF::String", %"class.WTF::String", %"class.blink::HTTPHeaderMap", i32, [4 x i8], %"class.WTF::String", double, i32, [4 x i8], %"class.blink::HTTPHeaderMap" } { %"class.WTF::String" { %class.scoped_refptr { %"class.WTF::StringImpl"* inttoptr (i64 -6148914691236517206 to %"class.WTF::StringImpl"*) } }, %"class.WTF::String" { %class.scoped_refptr { %"class.WTF::StringImpl"* inttoptr (i64 -6148914691236517206 to %"class.WTF::StringImpl"*) } }, %"class.blink::HTTPHeaderMap" { %"class.WTF::HashMap.2279" { %"class.WTF::HashTable.2280" <{ %"struct.WTF::KeyValuePair.2283"* inttoptr (i64 -6148914691236517206 to %"struct.WTF::KeyValuePair.2283"*), i32 -1431655766, i32 -1431655766, i32 -1431655766, [4 x i8] c"\AA\AA\AA\AA" }> } }, i32 -1431655766, [4 x i8] c"\AA\AA\AA\AA", %"class.WTF::String" { %class.scoped_refptr { %"class.WTF::StringImpl"* inttoptr (i64 -6148914691236517206 to %"class.WTF::StringImpl"*) } }, double 0xFFFFFFFFFFFFFFFF, i32 -1431655766, [4 x i8] c"\AA\AA\AA\AA", %"class.blink::HTTPHeaderMap" { %"class.WTF::HashMap.2279" { %"class.WTF::HashTable.2280" <{ %"struct.WTF::KeyValuePair.2283"* inttoptr (i64 -6148914691236517206 to %"struct.WTF::KeyValuePair.2283"*), i32 -1431655766, i32 -1431655766, i32 -1431655766, [4 x i8] c"\AA\AA\AA\AA" }> } } }, align 8
@.str.40 = private unnamed_addr constant [28 x i8] c"position + length <= size()\00", align 1
@_ZTVN5blink8protocol12CacheStorage9DataEntryE = external unnamed_addr constant { [5 x i8*] }, align 8
@_ZTVN5blink8protocol12CacheStorage6HeaderE = external unnamed_addr constant { [5 x i8*] }, align 8
@_ZN5blink8protocol12CacheStorage22CachedResponseTypeEnum5BasicE = external constant [0 x i8], align 1
@_ZN5blink8protocol12CacheStorage22CachedResponseTypeEnum4CorsE = external constant [0 x i8], align 1
@_ZN5blink8protocol12CacheStorage22CachedResponseTypeEnum7DefaultE = external constant [0 x i8], align 1
@_ZN5blink8protocol12CacheStorage22CachedResponseTypeEnum5ErrorE = external constant [0 x i8], align 1
@_ZN5blink8protocol12CacheStorage22CachedResponseTypeEnum14OpaqueResponseE = external constant [0 x i8], align 1
@_ZN5blink8protocol12CacheStorage22CachedResponseTypeEnum14OpaqueRedirectE = external constant [0 x i8], align 1
@.str.41 = private unnamed_addr constant [33 x i8] c"Error requesting cache names: %s\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN4mojo9StructPtrIN5blink5mojom5blink14BatchOperationEEEEEPKcv = private unnamed_addr constant [100 x i8] c"const char *WTF::GetStringWithTypeName() [T = mojo::StructPtr<blink::mojom::blink::BatchOperation>]\00", align 1
@.str.42 = private unnamed_addr constant [31 x i8] c"Error deleting cache entry: %s\00", align 1
@.str.43 = private unnamed_addr constant [35 x i8] c"Unable to read cached response: %s\00", align 1
@_ZTVN5blink8protocol12CacheStorage14CachedResponseE = external unnamed_addr constant { [5 x i8*] }, align 8
@_ZTVN5blink8protocol6BinaryE = external unnamed_addr constant { [5 x i8*] }, align 8
@_ZTVN5blink12_GLOBAL__N_136CachedResponseFileReaderLoaderClientE = internal unnamed_addr constant { [9 x i8*] } { [9 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.blink::(anonymous namespace)::CachedResponseFileReaderLoaderClient"*)* @_ZN5blink12_GLOBAL__N_136CachedResponseFileReaderLoaderClientD2Ev to i8*), i8* bitcast (void (%"class.blink::(anonymous namespace)::CachedResponseFileReaderLoaderClient"*)* @_ZN5blink12_GLOBAL__N_136CachedResponseFileReaderLoaderClientD0Ev to i8*), i8* bitcast (void (%"class.blink::(anonymous namespace)::CachedResponseFileReaderLoaderClient"*)* @_ZN5blink12_GLOBAL__N_136CachedResponseFileReaderLoaderClient15DidStartLoadingEv to i8*), i8* bitcast (void (%"class.blink::FileReaderLoaderClient"*)* @_ZN5blink22FileReaderLoaderClient14DidReceiveDataEv to i8*), i8* bitcast (void (%"class.blink::(anonymous namespace)::CachedResponseFileReaderLoaderClient"*, i8*, i32)* @_ZN5blink12_GLOBAL__N_136CachedResponseFileReaderLoaderClient23DidReceiveDataForClientEPKcj to i8*), i8* bitcast (void (%"class.blink::(anonymous namespace)::CachedResponseFileReaderLoaderClient"*)* @_ZN5blink12_GLOBAL__N_136CachedResponseFileReaderLoaderClient16DidFinishLoadingEv to i8*), i8* bitcast (void (%"class.blink::(anonymous namespace)::CachedResponseFileReaderLoaderClient"*, i32)* @_ZN5blink12_GLOBAL__N_136CachedResponseFileReaderLoaderClient7DidFailENS_13FileErrorCodeE to i8*)] }, align 8
@.str.44 = private unnamed_addr constant [51 x i8] c"Unable to read the cached response, error code: %d\00", align 1
@_ZN5blink11ThreadState25incremental_marking_flag_E = external local_unnamed_addr global %"class.blink::AtomicEntryFlag", align 4
@"switch.table._ZN4base8internal7InvokerINS0_9BindStateIZN5blink26InspectorCacheStorageAgent21requestCachedResponseERKN3WTF6StringES8_NSt3__110unique_ptrINS9_6vectorINSA_INS3_8protocol12CacheStorage6HeaderENS9_14default_deleteISE_EEEENS9_9allocatorISH_EEEENSF_ISK_EEEENSA_INSD_7Backend29RequestCachedResponseCallbackENSF_ISO_EEEEE3$_4JSQ_EEEFvN4mojo9StructPtrINS3_5mojom5blink11MatchResultEEEEE7RunOnceEPNS0_13BindStateBaseEOSY_" = private unnamed_addr constant [9 x i8*] [i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.25, i64 0, i64 0), i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.29, i64 0, i64 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.24, i64 0, i64 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.26, i64 0, i64 0), i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.27, i64 0, i64 0), i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.28, i64 0, i64 0), i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.23, i64 0, i64 0), i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.30, i64 0, i64 0), i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.31, i64 0, i64 0)], align 8

@_ZN5blink26InspectorCacheStorageAgentC1EPNS_15InspectedFramesE = hidden unnamed_addr alias void (%"class.blink::InspectorCacheStorageAgent"*, %"class.blink::InspectedFrames"*), void (%"class.blink::InspectorCacheStorageAgent"*, %"class.blink::InspectedFrames"*)* @_ZN5blink26InspectorCacheStorageAgentC2EPNS_15InspectedFramesE
@_ZN5blink26InspectorCacheStorageAgentD1Ev = hidden unnamed_addr alias void (%"class.blink::InspectorCacheStorageAgent"*), void (%"class.blink::InspectorCacheStorageAgent"*)* @_ZN5blink26InspectorCacheStorageAgentD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink26InspectorCacheStorageAgentC2EPNS_15InspectedFramesE(%"class.blink::InspectorCacheStorageAgent"*, %"class.blink::InspectedFrames"*) unnamed_addr #0 align 2 {
  %3 = alloca %"class.WTF::String", align 8
  %4 = bitcast %"class.blink::InspectorCacheStorageAgent"* %0 to <2 x i32 (...)**>*
  store <2 x i32 (...)**> <i32 (...)** bitcast (i8** getelementptr inbounds ({ [11 x i8*], [10 x i8*] }, { [11 x i8*], [10 x i8*] }* @_ZTVN5blink18InspectorBaseAgentINS_8protocol12CacheStorage8MetainfoEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)** bitcast (i8** getelementptr inbounds ({ [11 x i8*], [10 x i8*] }, { [11 x i8*], [10 x i8*] }* @_ZTVN5blink18InspectorBaseAgentINS_8protocol12CacheStorage8MetainfoEEE, i64 0, inrange i32 1, i64 2) to i32 (...)**)>, <2 x i32 (...)**>* %4, align 8
  %5 = getelementptr inbounds %"class.blink::InspectorCacheStorageAgent", %"class.blink::InspectorCacheStorageAgent"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  store %"class.blink::CoreProbeSink"* null, %"class.blink::CoreProbeSink"** %5, align 8
  %6 = getelementptr inbounds %"class.blink::InspectorCacheStorageAgent", %"class.blink::InspectorCacheStorageAgent"* %0, i64 0, i32 0, i32 3
  %7 = bitcast %"class.WTF::String"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7) #16
  %8 = tail call i64 @strlen(i8* nonnull getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN5blink8protocol12CacheStorage8Metainfo10domainNameE, i64 0, i64 0)) #17
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %3, i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN5blink8protocol12CacheStorage8Metainfo10domainNameE, i64 0, i64 0), i64 %8) #16
  call void @_ZN5blink19InspectorAgentStateC1ERKN3WTF6StringE(%"class.blink::InspectorAgentState"* %6, %"class.WTF::String"* nonnull dereferenceable(8) %3) #16
  %9 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %3, i64 0, i32 0, i32 0
  %10 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %9, align 8
  %11 = icmp eq %"class.WTF::StringImpl"* %10, null
  br i1 %11, label %25, label %12

12:                                               ; preds = %2
  %13 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %10, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %14 = load atomic i32, i32* %13 monotonic, align 4
  %15 = and i32 %14, 2
  %16 = icmp eq i32 %15, 0
  %17 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %10, i64 0, i32 0
  %18 = load i32, i32* %17, align 4
  br i1 %16, label %19, label %21

19:                                               ; preds = %12
  %20 = add i32 %18, -1
  store i32 %20, i32* %17, align 4
  br label %21

21:                                               ; preds = %19, %12
  %22 = phi i32 [ %20, %19 ], [ %18, %12 ]
  %23 = icmp eq i32 %22, 0
  br i1 %23, label %24, label %25

24:                                               ; preds = %21
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %10) #16
  br label %25

25:                                               ; preds = %2, %21, %24
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7) #16
  %26 = getelementptr inbounds %"class.blink::InspectorCacheStorageAgent", %"class.blink::InspectorCacheStorageAgent"* %0, i64 0, i32 0, i32 4
  %27 = bitcast %"class.std::__1::unique_ptr.227"* %26 to i64*
  store i64 0, i64* %27, align 8
  %28 = bitcast %"class.blink::InspectorCacheStorageAgent"* %0 to <2 x i32 (...)**>*
  store <2 x i32 (...)**> <i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*], [10 x i8*] }, { [16 x i8*], [10 x i8*] }* @_ZTVN5blink26InspectorCacheStorageAgentE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*], [10 x i8*] }, { [16 x i8*], [10 x i8*] }* @_ZTVN5blink26InspectorCacheStorageAgentE, i64 0, inrange i32 1, i64 2) to i32 (...)**)>, <2 x i32 (...)**>* %28, align 8
  %29 = getelementptr inbounds %"class.blink::InspectorCacheStorageAgent", %"class.blink::InspectorCacheStorageAgent"* %0, i64 0, i32 1, i32 0, i32 0
  store %"class.blink::InspectedFrames"* %1, %"class.blink::InspectedFrames"** %29, align 8
  %30 = getelementptr inbounds %"class.blink::InspectorCacheStorageAgent", %"class.blink::InspectorCacheStorageAgent"* %0, i64 0, i32 2
  %31 = bitcast %"class.WTF::HashMap.239"* %30 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %31, i8 0, i64 20, i1 false) #16
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink26InspectorCacheStorageAgentD2Ev(%"class.blink::InspectorCacheStorageAgent"* nocapture) unnamed_addr #0 align 2 {
  %2 = bitcast %"class.blink::InspectorCacheStorageAgent"* %0 to <2 x i32 (...)**>*
  store <2 x i32 (...)**> <i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*], [10 x i8*] }, { [16 x i8*], [10 x i8*] }* @_ZTVN5blink26InspectorCacheStorageAgentE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*], [10 x i8*] }, { [16 x i8*], [10 x i8*] }* @_ZTVN5blink26InspectorCacheStorageAgentE, i64 0, inrange i32 1, i64 2) to i32 (...)**)>, <2 x i32 (...)**>* %2, align 8
  %3 = getelementptr inbounds %"class.blink::InspectorCacheStorageAgent", %"class.blink::InspectorCacheStorageAgent"* %0, i64 0, i32 2, i32 0, i32 0
  %4 = load %"struct.WTF::KeyValuePair.243"*, %"struct.WTF::KeyValuePair.243"** %3, align 8
  %5 = icmp eq %"struct.WTF::KeyValuePair.243"* %4, null
  br i1 %5, label %51, label %6, !prof !2

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.blink::InspectorCacheStorageAgent", %"class.blink::InspectorCacheStorageAgent"* %0, i64 0, i32 2, i32 0, i32 1
  %8 = load i32, i32* %7, align 8
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %49, label %10

10:                                               ; preds = %6
  %11 = zext i32 %8 to i64
  br label %12

12:                                               ; preds = %46, %10
  %13 = phi i64 [ 0, %10 ], [ %47, %46 ]
  %14 = getelementptr inbounds %"struct.WTF::KeyValuePair.243", %"struct.WTF::KeyValuePair.243"* %4, i64 %13
  %15 = bitcast %"struct.WTF::KeyValuePair.243"* %14 to i8**
  %16 = load i8*, i8** %15, align 8
  %17 = icmp eq i8* %16, inttoptr (i64 -1 to i8*)
  br i1 %17, label %46, label %18

18:                                               ; preds = %12
  %19 = getelementptr inbounds %"struct.WTF::KeyValuePair.243", %"struct.WTF::KeyValuePair.243"* %4, i64 %13, i32 1
  %20 = getelementptr inbounds %"struct.WTF::KeyValuePair.243", %"struct.WTF::KeyValuePair.243"* %4, i64 %13, i32 1, i32 0, i32 1, i32 0, i32 0, i32 0
  %21 = load %"class.blink::mojom::blink::CacheStorageProxy"*, %"class.blink::mojom::blink::CacheStorageProxy"** %20, align 8
  store %"class.blink::mojom::blink::CacheStorageProxy"* null, %"class.blink::mojom::blink::CacheStorageProxy"** %20, align 8
  %22 = icmp eq %"class.blink::mojom::blink::CacheStorageProxy"* %21, null
  br i1 %22, label %28, label %23

23:                                               ; preds = %18
  %24 = bitcast %"class.blink::mojom::blink::CacheStorageProxy"* %21 to void (%"class.blink::mojom::blink::CacheStorageProxy"*)***
  %25 = load void (%"class.blink::mojom::blink::CacheStorageProxy"*)**, void (%"class.blink::mojom::blink::CacheStorageProxy"*)*** %24, align 8
  %26 = getelementptr inbounds void (%"class.blink::mojom::blink::CacheStorageProxy"*)*, void (%"class.blink::mojom::blink::CacheStorageProxy"*)** %25, i64 1
  %27 = load void (%"class.blink::mojom::blink::CacheStorageProxy"*)*, void (%"class.blink::mojom::blink::CacheStorageProxy"*)** %26, align 8
  tail call void %27(%"class.blink::mojom::blink::CacheStorageProxy"* nonnull %21) #16
  br label %28

28:                                               ; preds = %23, %18
  %29 = bitcast %"class.mojo::Remote"* %19 to %"class.mojo::internal::InterfacePtrStateBase"*
  tail call void @_ZN4mojo8internal21InterfacePtrStateBaseD2Ev(%"class.mojo::internal::InterfacePtrStateBase"* %29) #16
  %30 = getelementptr inbounds %"struct.WTF::KeyValuePair.243", %"struct.WTF::KeyValuePair.243"* %14, i64 0, i32 0, i32 0, i32 0
  %31 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %30, align 8
  %32 = icmp eq %"class.WTF::StringImpl"* %31, null
  br i1 %32, label %46, label %33

33:                                               ; preds = %28
  %34 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %31, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %35 = load atomic i32, i32* %34 monotonic, align 4
  %36 = and i32 %35, 2
  %37 = icmp eq i32 %36, 0
  %38 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %31, i64 0, i32 0
  %39 = load i32, i32* %38, align 4
  br i1 %37, label %40, label %42

40:                                               ; preds = %33
  %41 = add i32 %39, -1
  store i32 %41, i32* %38, align 4
  br label %42

42:                                               ; preds = %40, %33
  %43 = phi i32 [ %41, %40 ], [ %39, %33 ]
  %44 = icmp eq i32 %43, 0
  br i1 %44, label %45, label %46

45:                                               ; preds = %42
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %31) #16
  br label %46

46:                                               ; preds = %45, %42, %28, %12
  %47 = add nuw nsw i64 %13, 1
  %48 = icmp eq i64 %47, %11
  br i1 %48, label %49, label %12

49:                                               ; preds = %46, %6
  %50 = bitcast %"struct.WTF::KeyValuePair.243"* %4 to i8*
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %50) #16
  store %"struct.WTF::KeyValuePair.243"* null, %"struct.WTF::KeyValuePair.243"** %3, align 8
  br label %51

51:                                               ; preds = %1, %49
  %52 = bitcast %"class.blink::InspectorCacheStorageAgent"* %0 to <2 x i32 (...)**>*
  store <2 x i32 (...)**> <i32 (...)** bitcast (i8** getelementptr inbounds ({ [11 x i8*], [10 x i8*] }, { [11 x i8*], [10 x i8*] }* @_ZTVN5blink18InspectorBaseAgentINS_8protocol12CacheStorage8MetainfoEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)** bitcast (i8** getelementptr inbounds ({ [11 x i8*], [10 x i8*] }, { [11 x i8*], [10 x i8*] }* @_ZTVN5blink18InspectorBaseAgentINS_8protocol12CacheStorage8MetainfoEEE, i64 0, inrange i32 1, i64 2) to i32 (...)**)>, <2 x i32 (...)**>* %52, align 8
  %53 = getelementptr inbounds %"class.blink::InspectorCacheStorageAgent", %"class.blink::InspectorCacheStorageAgent"* %0, i64 0, i32 0, i32 4, i32 0, i32 0, i32 0
  %54 = load %"class.blink::protocol::CacheStorage::Frontend"*, %"class.blink::protocol::CacheStorage::Frontend"** %53, align 8
  store %"class.blink::protocol::CacheStorage::Frontend"* null, %"class.blink::protocol::CacheStorage::Frontend"** %53, align 8
  %55 = icmp eq %"class.blink::protocol::CacheStorage::Frontend"* %54, null
  br i1 %55, label %58, label %56

56:                                               ; preds = %51
  %57 = bitcast %"class.blink::protocol::CacheStorage::Frontend"* %54 to i8*
  tail call void @_ZdlPv(i8* %57) #18
  br label %58

58:                                               ; preds = %56, %51
  %59 = getelementptr inbounds %"class.blink::InspectorCacheStorageAgent", %"class.blink::InspectorCacheStorageAgent"* %0, i64 0, i32 0, i32 3, i32 1, i32 0, i32 0, i32 0
  %60 = load %"class.blink::InspectorAgentState::Field"**, %"class.blink::InspectorAgentState::Field"*** %59, align 8
  %61 = icmp eq %"class.blink::InspectorAgentState::Field"** %60, null
  %62 = bitcast %"class.blink::InspectorAgentState::Field"** %60 to i8*
  br i1 %61, label %69, label %63, !prof !2

63:                                               ; preds = %58
  %64 = getelementptr inbounds %"class.blink::InspectorCacheStorageAgent", %"class.blink::InspectorCacheStorageAgent"* %0, i64 0, i32 0, i32 3, i32 1, i32 0, i32 0, i32 2
  %65 = load i32, i32* %64, align 4
  %66 = icmp eq i32 %65, 0
  br i1 %66, label %68, label %67, !prof !3

67:                                               ; preds = %63
  store i32 0, i32* %64, align 4
  br label %68

68:                                               ; preds = %67, %63
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %62) #16
  store %"class.blink::InspectorAgentState::Field"** null, %"class.blink::InspectorAgentState::Field"*** %59, align 8
  br label %69

69:                                               ; preds = %68, %58
  %70 = getelementptr inbounds %"class.blink::InspectorCacheStorageAgent", %"class.blink::InspectorCacheStorageAgent"* %0, i64 0, i32 0, i32 3, i32 0, i32 0, i32 0
  %71 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %70, align 8
  %72 = icmp eq %"class.WTF::StringImpl"* %71, null
  br i1 %72, label %86, label %73

73:                                               ; preds = %69
  %74 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %71, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %75 = load atomic i32, i32* %74 monotonic, align 4
  %76 = and i32 %75, 2
  %77 = icmp eq i32 %76, 0
  %78 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %71, i64 0, i32 0
  %79 = load i32, i32* %78, align 4
  br i1 %77, label %80, label %82

80:                                               ; preds = %73
  %81 = add i32 %79, -1
  store i32 %81, i32* %78, align 4
  br label %82

82:                                               ; preds = %80, %73
  %83 = phi i32 [ %81, %80 ], [ %79, %73 ]
  %84 = icmp eq i32 %83, 0
  br i1 %84, label %85, label %86

85:                                               ; preds = %82
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %71) #16
  br label %86

86:                                               ; preds = %69, %82, %85
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn8_N5blink26InspectorCacheStorageAgentD1Ev(%"class.blink::InspectorCacheStorageAgent"* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::InspectorCacheStorageAgent", %"class.blink::InspectorCacheStorageAgent"* %0, i64 -1, i32 2, i32 0, i32 3
  %3 = bitcast i32* %2 to %"class.blink::InspectorCacheStorageAgent"*
  tail call void @_ZN5blink26InspectorCacheStorageAgentD2Ev(%"class.blink::InspectorCacheStorageAgent"* %3) #16
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink26InspectorCacheStorageAgentD0Ev(%"class.blink::InspectorCacheStorageAgent"* nocapture) unnamed_addr #0 align 2 {
  tail call void @_ZN5blink26InspectorCacheStorageAgentD2Ev(%"class.blink::InspectorCacheStorageAgent"* %0) #16
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn8_N5blink26InspectorCacheStorageAgentD0Ev(%"class.blink::InspectorCacheStorageAgent"* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::InspectorCacheStorageAgent", %"class.blink::InspectorCacheStorageAgent"* %0, i64 -1, i32 2, i32 0, i32 3
  %3 = bitcast i32* %2 to %"class.blink::InspectorCacheStorageAgent"*
  tail call void @_ZN5blink26InspectorCacheStorageAgentD2Ev(%"class.blink::InspectorCacheStorageAgent"* %3) #16
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK5blink26InspectorCacheStorageAgent5TraceEPNS_7VisitorE(%"class.blink::InspectorCacheStorageAgent"* nocapture readonly, %"class.blink::Visitor"*) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::InspectorCacheStorageAgent", %"class.blink::InspectorCacheStorageAgent"* %0, i64 0, i32 1
  %4 = bitcast %"class.blink::Member.233"* %3 to i64*
  %5 = load atomic i64, i64* %4 monotonic, align 8
  %6 = icmp eq i64 %5, 0
  br i1 %6, label %13, label %7

7:                                                ; preds = %2
  %8 = inttoptr i64 %5 to i8*
  %9 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %10 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %9, align 8
  %11 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %10, i64 5
  %12 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %11, align 8
  tail call void %12(%"class.blink::Visitor"* %1, i8* nonnull %8, i8* nonnull %8, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_15InspectedFramesEE5TraceEPNS_7VisitorEPKv) #16
  br label %13

13:                                               ; preds = %2, %7
  %14 = getelementptr inbounds %"class.blink::InspectorCacheStorageAgent", %"class.blink::InspectorCacheStorageAgent"* %0, i64 0, i32 0, i32 2
  %15 = bitcast %"class.blink::Member"* %14 to i64*
  %16 = load atomic i64, i64* %15 monotonic, align 8
  %17 = icmp eq i64 %16, 0
  br i1 %17, label %24, label %18

18:                                               ; preds = %13
  %19 = inttoptr i64 %16 to i8*
  %20 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %21 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %20, align 8
  %22 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %21, i64 5
  %23 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %22, align 8
  tail call void %23(%"class.blink::Visitor"* %1, i8* nonnull %19, i8* nonnull %19, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_13CoreProbeSinkEE5TraceEPNS_7VisitorEPKv) #16
  br label %24

24:                                               ; preds = %13, %18
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK5blink18InspectorBaseAgentINS_8protocol12CacheStorage8MetainfoEE5TraceEPNS_7VisitorE(%"class.blink::InspectorBaseAgent"*, %"class.blink::Visitor"*) unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.blink::InspectorBaseAgent", %"class.blink::InspectorBaseAgent"* %0, i64 0, i32 2
  %4 = bitcast %"class.blink::Member"* %3 to i64*
  %5 = load atomic i64, i64* %4 monotonic, align 8
  %6 = icmp eq i64 %5, 0
  br i1 %6, label %13, label %7

7:                                                ; preds = %2
  %8 = inttoptr i64 %5 to i8*
  %9 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %10 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %9, align 8
  %11 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %10, i64 5
  %12 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %11, align 8
  tail call void %12(%"class.blink::Visitor"* %1, i8* nonnull %8, i8* nonnull %8, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_13CoreProbeSinkEE5TraceEPNS_7VisitorEPKv) #16
  br label %13

13:                                               ; preds = %2, %7
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink26InspectorCacheStorageAgent17requestCacheNamesERKN3WTF6StringENSt3__110unique_ptrINS_8protocol12CacheStorage7Backend25RequestCacheNamesCallbackENS5_14default_deleteISA_EEEE(%"class.blink::InspectorCacheStorageAgent"*, %"class.WTF::String"* dereferenceable(8), %"class.blink::protocol::CacheStorage::Backend::RequestCacheNamesCallback"*) unnamed_addr #0 align 2 {
  %4 = alloca %"class.base::TimeTicks", align 8
  %5 = alloca %"class.blink::mojom::blink::CacheStorage"*, align 8
  %6 = alloca %"class.crdtp::DispatchResponse", align 8
  %7 = alloca %"class.base::OnceCallback.1929", align 8
  %8 = ptrtoint %"class.blink::protocol::CacheStorage::Backend::RequestCacheNamesCallback"* %2 to i64
  %9 = tail call i64 @_ZN5blink13cache_storage13CreateTraceIdEv() #16
  %10 = load i8, i8* getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 23, i32 0), align 16
  %11 = and i8 %10, 25
  %12 = icmp eq i8 %11, 0
  br i1 %12, label %19, label %13, !prof !2

13:                                               ; preds = %3
  %14 = tail call i32 @_ZN4base14PlatformThread9CurrentIdEv() #16
  %15 = bitcast %"class.base::TimeTicks"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %15) #16
  %16 = getelementptr inbounds %"class.base::TimeTicks", %"class.base::TimeTicks"* %4, i64 0, i32 0, i32 0
  %17 = tail call i64 @_ZN4base6subtle28TimeTicksNowIgnoringOverrideEv() #16
  store i64 %17, i64* %16, align 8
  %18 = call i64 @_ZN20trace_event_internal37AddTraceEventWithThreadIdAndTimestampEcPKhPKcS3_yyiRKN4base9TimeTicksEPNS4_11trace_event14TraceArgumentsEj(i8 signext 88, i8* getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 23, i32 0), i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str, i64 0, i64 0), i8* null, i64 0, i64 %9, i32 %14, %"class.base::TimeTicks"* nonnull dereferenceable(8) %4, %"class.base::trace_event::TraceArguments"* null, i32 4352) #16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %15) #16
  br label %19

19:                                               ; preds = %13, %3
  %20 = phi i8* [ null, %3 ], [ getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 23, i32 0), %13 ]
  %21 = phi i8* [ inttoptr (i64 -6148914691236517206 to i8*), %3 ], [ getelementptr inbounds ([46 x i8], [46 x i8]* @.str, i64 0, i64 0), %13 ]
  %22 = phi i64 [ -6148914691236517206, %3 ], [ %18, %13 ]
  %23 = call %"class.blink::SecurityOrigin"* @_ZN5blink14SecurityOrigin16CreateFromStringERKN3WTF6StringE(%"class.WTF::String"* dereferenceable(8) %1) #16
  %24 = call zeroext i1 @_ZNK5blink14SecurityOrigin24IsPotentiallyTrustworthyEv(%"class.blink::SecurityOrigin"* %23) #16
  br i1 %24, label %31, label %25

25:                                               ; preds = %19
  %26 = call i8* @_Znwm(i64 24) #18
  %27 = bitcast i8* %26 to %"class.std::__1::vector.1913"*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %26, i8 0, i64 24, i1 false) #16
  %28 = bitcast %"class.blink::protocol::CacheStorage::Backend::RequestCacheNamesCallback"* %2 to void (%"class.blink::protocol::CacheStorage::Backend::RequestCacheNamesCallback"*, %"class.std::__1::vector.1913"*)***
  %29 = load void (%"class.blink::protocol::CacheStorage::Backend::RequestCacheNamesCallback"*, %"class.std::__1::vector.1913"*)**, void (%"class.blink::protocol::CacheStorage::Backend::RequestCacheNamesCallback"*, %"class.std::__1::vector.1913"*)*** %28, align 8
  %30 = load void (%"class.blink::protocol::CacheStorage::Backend::RequestCacheNamesCallback"*, %"class.std::__1::vector.1913"*)*, void (%"class.blink::protocol::CacheStorage::Backend::RequestCacheNamesCallback"*, %"class.std::__1::vector.1913"*)** %29, align 8
  call void %30(%"class.blink::protocol::CacheStorage::Backend::RequestCacheNamesCallback"* %2, %"class.std::__1::vector.1913"* nonnull %27) #16
  br label %92

31:                                               ; preds = %19
  %32 = bitcast %"class.blink::mojom::blink::CacheStorage"** %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %32) #16
  store %"class.blink::mojom::blink::CacheStorage"* null, %"class.blink::mojom::blink::CacheStorage"** %5, align 8
  %33 = bitcast %"class.crdtp::DispatchResponse"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %33) #16
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %33, i8 -86, i64 32, i1 false)
  %34 = getelementptr inbounds %"class.blink::InspectorCacheStorageAgent", %"class.blink::InspectorCacheStorageAgent"* %0, i64 0, i32 1, i32 0, i32 0
  %35 = load %"class.blink::InspectedFrames"*, %"class.blink::InspectedFrames"** %34, align 8
  %36 = getelementptr inbounds %"class.blink::InspectorCacheStorageAgent", %"class.blink::InspectorCacheStorageAgent"* %0, i64 0, i32 2
  call fastcc void @_ZN5blink12_GLOBAL__N_118AssertCacheStorageERKN3WTF6StringEPNS_15InspectedFramesEPNS1_7HashMapIS2_N4mojo6RemoteINS_5mojom5blink12CacheStorageEEENS1_10StringHashENS1_10HashTraitsIS2_EENSF_ISD_EENS1_18PartitionAllocatorEEEPPSC_(%"class.crdtp::DispatchResponse"* nonnull sret %6, %"class.WTF::String"* dereferenceable(8) %1, %"class.blink::InspectedFrames"* %35, %"class.WTF::HashMap.239"* %36, %"class.blink::mojom::blink::CacheStorage"** nonnull %5)
  %37 = getelementptr inbounds %"class.crdtp::DispatchResponse", %"class.crdtp::DispatchResponse"* %6, i64 0, i32 0
  %38 = load i32, i32* %37, align 8
  %39 = icmp eq i32 %38, 1
  br i1 %39, label %45, label %40

40:                                               ; preds = %31
  %41 = bitcast %"class.blink::protocol::CacheStorage::Backend::RequestCacheNamesCallback"* %2 to void (%"class.blink::protocol::CacheStorage::Backend::RequestCacheNamesCallback"*, %"class.crdtp::DispatchResponse"*)***
  %42 = load void (%"class.blink::protocol::CacheStorage::Backend::RequestCacheNamesCallback"*, %"class.crdtp::DispatchResponse"*)**, void (%"class.blink::protocol::CacheStorage::Backend::RequestCacheNamesCallback"*, %"class.crdtp::DispatchResponse"*)*** %41, align 8
  %43 = getelementptr inbounds void (%"class.blink::protocol::CacheStorage::Backend::RequestCacheNamesCallback"*, %"class.crdtp::DispatchResponse"*)*, void (%"class.blink::protocol::CacheStorage::Backend::RequestCacheNamesCallback"*, %"class.crdtp::DispatchResponse"*)** %42, i64 1
  %44 = load void (%"class.blink::protocol::CacheStorage::Backend::RequestCacheNamesCallback"*, %"class.crdtp::DispatchResponse"*)*, void (%"class.blink::protocol::CacheStorage::Backend::RequestCacheNamesCallback"*, %"class.crdtp::DispatchResponse"*)** %43, align 8
  call void %44(%"class.blink::protocol::CacheStorage::Backend::RequestCacheNamesCallback"* %2, %"class.crdtp::DispatchResponse"* nonnull dereferenceable(32) %6) #16
  br label %81

45:                                               ; preds = %31
  %46 = load %"class.blink::mojom::blink::CacheStorage"*, %"class.blink::mojom::blink::CacheStorage"** %5, align 8
  %47 = getelementptr inbounds %"class.base::OnceCallback.1929", %"class.base::OnceCallback.1929"* %7, i64 0, i32 0, i32 0, i32 0
  store %"class.base::internal::BindStateBase"* inttoptr (i64 -6148914691236517206 to %"class.base::internal::BindStateBase"*), %"class.base::internal::BindStateBase"** %47, align 8, !alias.scope !4
  %48 = call i8* @_Znwm(i64 56) #18, !noalias !7
  %49 = bitcast i8* %48 to %"class.base::internal::BindStateBase"*
  call void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_E(%"class.base::internal::BindStateBase"* nonnull %49, void ()* bitcast (void (%"class.base::internal::BindStateBase"*, %"class.WTF::Vector.898"*)* @"_ZN4base8internal7InvokerINS0_9BindStateIZN5blink26InspectorCacheStorageAgent17requestCacheNamesERKN3WTF6StringENSt3__110unique_ptrINS3_8protocol12CacheStorage7Backend25RequestCacheNamesCallbackENS9_14default_deleteISE_EEEEE3$_0JS6_SH_EEEFvRKNS5_6VectorIS6_Lj0ENS5_18PartitionAllocatorEEEEE7RunOnceEPNS0_13BindStateBaseESO_" to void ()*), void (%"class.base::internal::BindStateBase"*)* nonnull @"_ZN4base8internal9BindStateIZN5blink26InspectorCacheStorageAgent17requestCacheNamesERKN3WTF6StringENSt3__110unique_ptrINS2_8protocol12CacheStorage7Backend25RequestCacheNamesCallbackENS8_14default_deleteISD_EEEEE3$_0JS5_SG_EE7DestroyEPKNS0_13BindStateBaseE") #16, !noalias !7
  %50 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %1, i64 0, i32 0, i32 0
  %51 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %50, align 8, !noalias !7
  %52 = getelementptr inbounds i8, i8* %48, i64 40
  %53 = bitcast i8* %52 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %51, %"class.WTF::StringImpl"** %53, align 8, !noalias !7
  %54 = icmp eq %"class.WTF::StringImpl"* %51, null
  br i1 %54, label %72, label %55

55:                                               ; preds = %45
  %56 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %51, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %57 = load atomic i32, i32* %56 monotonic, align 4, !noalias !7
  %58 = and i32 %57, 2
  %59 = icmp eq i32 %58, 0
  br i1 %59, label %60, label %72

60:                                               ; preds = %55
  %61 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %51, i64 0, i32 0
  %62 = load i32, i32* %61, align 4, !noalias !7
  %63 = zext i32 %62 to i33
  %64 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %63, i33 1) #16
  %65 = extractvalue { i33, i1 } %64, 1
  %66 = extractvalue { i33, i1 } %64, 0
  %67 = icmp slt i33 %66, 0
  %68 = or i1 %65, %67
  br i1 %68, label %69, label %70, !prof !3

69:                                               ; preds = %60
  call void @llvm.trap() #16, !noalias !7
  unreachable

70:                                               ; preds = %60
  %71 = trunc i33 %66 to i32
  store i32 %71, i32* %61, align 4, !noalias !7
  br label %72

72:                                               ; preds = %45, %55, %70
  %73 = getelementptr inbounds i8, i8* %48, i64 48
  %74 = bitcast i8* %73 to i64*
  store i64 %8, i64* %74, align 8, !noalias !7
  %75 = bitcast %"class.base::OnceCallback.1929"* %7 to i8**
  store i8* %48, i8** %75, align 8, !alias.scope !7
  %76 = bitcast %"class.blink::mojom::blink::CacheStorage"* %46 to void (%"class.blink::mojom::blink::CacheStorage"*, i64, %"class.base::OnceCallback.1929"*)***
  %77 = load void (%"class.blink::mojom::blink::CacheStorage"*, i64, %"class.base::OnceCallback.1929"*)**, void (%"class.blink::mojom::blink::CacheStorage"*, i64, %"class.base::OnceCallback.1929"*)*** %76, align 8
  %78 = getelementptr inbounds void (%"class.blink::mojom::blink::CacheStorage"*, i64, %"class.base::OnceCallback.1929"*)*, void (%"class.blink::mojom::blink::CacheStorage"*, i64, %"class.base::OnceCallback.1929"*)** %77, i64 4
  %79 = load void (%"class.blink::mojom::blink::CacheStorage"*, i64, %"class.base::OnceCallback.1929"*)*, void (%"class.blink::mojom::blink::CacheStorage"*, i64, %"class.base::OnceCallback.1929"*)** %78, align 8
  call void %79(%"class.blink::mojom::blink::CacheStorage"* %46, i64 %9, %"class.base::OnceCallback.1929"* nonnull %7) #16
  %80 = getelementptr inbounds %"class.base::OnceCallback.1929", %"class.base::OnceCallback.1929"* %7, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %80) #16
  br label %81

81:                                               ; preds = %72, %40
  %82 = phi i64 [ 0, %72 ], [ %8, %40 ]
  %83 = getelementptr inbounds %"class.crdtp::DispatchResponse", %"class.crdtp::DispatchResponse"* %6, i64 0, i32 1
  %84 = bitcast %"class.std::__1::basic_string"* %83 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %85 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %84, i64 0, i32 1, i32 0
  %86 = load i8, i8* %85, align 1
  %87 = icmp slt i8 %86, 0
  br i1 %87, label %88, label %91

88:                                               ; preds = %81
  %89 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %83, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %90 = load i8*, i8** %89, align 8
  call void @_ZdlPv(i8* %90) #18
  br label %91

91:                                               ; preds = %81, %88
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %33) #16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %32) #16
  br label %92

92:                                               ; preds = %91, %25
  %93 = phi i64 [ %82, %91 ], [ %8, %25 ]
  %94 = icmp eq %"class.blink::SecurityOrigin"* %23, null
  br i1 %94, label %102, label %95

95:                                               ; preds = %92
  %96 = getelementptr inbounds %"class.blink::SecurityOrigin", %"class.blink::SecurityOrigin"* %23, i64 0, i32 0, i32 0, i32 0
  call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %96) #16
  %97 = getelementptr inbounds %"class.blink::SecurityOrigin", %"class.blink::SecurityOrigin"* %23, i64 0, i32 0, i32 0, i32 0, i32 0
  %98 = load i32, i32* %97, align 4
  %99 = icmp eq i32 %98, 0
  br i1 %99, label %100, label %102

100:                                              ; preds = %95
  call void @_ZN5blink14SecurityOriginD2Ev(%"class.blink::SecurityOrigin"* nonnull %23) #16
  %101 = bitcast %"class.blink::SecurityOrigin"* %23 to i8*
  call void @free(i8* %101) #16
  br label %102

102:                                              ; preds = %92, %95, %100
  %103 = icmp eq i8* %20, null
  br i1 %103, label %108, label %104

104:                                              ; preds = %102
  %105 = load i8, i8* %20, align 1
  %106 = icmp eq i8 %105, 0
  br i1 %106, label %108, label %107

107:                                              ; preds = %104
  call void @_ZN20trace_event_internal24UpdateTraceEventDurationEPKhPKcN4base11trace_event16TraceEventHandleE(i8* nonnull %20, i8* %21, i64 %22) #16
  br label %108

108:                                              ; preds = %102, %104, %107
  %109 = icmp eq i64 %93, 0
  br i1 %109, label %116, label %110

110:                                              ; preds = %108
  %111 = inttoptr i64 %93 to %"class.blink::protocol::CacheStorage::Backend::RequestCacheNamesCallback"*
  %112 = inttoptr i64 %93 to void (%"class.blink::protocol::CacheStorage::Backend::RequestCacheNamesCallback"*)***
  %113 = load void (%"class.blink::protocol::CacheStorage::Backend::RequestCacheNamesCallback"*)**, void (%"class.blink::protocol::CacheStorage::Backend::RequestCacheNamesCallback"*)*** %112, align 8
  %114 = getelementptr inbounds void (%"class.blink::protocol::CacheStorage::Backend::RequestCacheNamesCallback"*)*, void (%"class.blink::protocol::CacheStorage::Backend::RequestCacheNamesCallback"*)** %113, i64 4
  %115 = load void (%"class.blink::protocol::CacheStorage::Backend::RequestCacheNamesCallback"*)*, void (%"class.blink::protocol::CacheStorage::Backend::RequestCacheNamesCallback"*)** %114, align 8
  call void %115(%"class.blink::protocol::CacheStorage::Backend::RequestCacheNamesCallback"* nonnull %111) #16
  br label %116

116:                                              ; preds = %108, %110
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

declare i64 @_ZN5blink13cache_storage13CreateTraceIdEv() local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

declare %"class.blink::SecurityOrigin"* @_ZN5blink14SecurityOrigin16CreateFromStringERKN3WTF6StringE(%"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #2

declare zeroext i1 @_ZNK5blink14SecurityOrigin24IsPotentiallyTrustworthyEv(%"class.blink::SecurityOrigin"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define internal fastcc void @_ZN5blink12_GLOBAL__N_118AssertCacheStorageERKN3WTF6StringEPNS_15InspectedFramesEPNS1_7HashMapIS2_N4mojo6RemoteINS_5mojom5blink12CacheStorageEEENS1_10StringHashENS1_10HashTraitsIS2_EENSF_ISD_EENS1_18PartitionAllocatorEEEPPSC_(%"class.crdtp::DispatchResponse"* noalias sret, %"class.WTF::String"* dereferenceable(8), %"class.blink::InspectedFrames"*, %"class.WTF::HashMap.239"*, %"class.blink::mojom::blink::CacheStorage"** nocapture) unnamed_addr #0 {
  %6 = alloca %"class.mojo::ScopedHandleBase", align 4
  %7 = alloca %"class.WTF::String", align 8
  %8 = alloca %"class.WTF::StringAppend", align 8
  %9 = alloca %"class.std::__1::basic_string", align 8
  %10 = alloca %"class.std::__1::basic_string", align 8
  %11 = alloca %"class.WTF::String", align 8
  %12 = alloca %"class.crdtp::DispatchResponse", align 8
  %13 = alloca %"class.mojo::Remote", align 8
  %14 = alloca %"class.mojo::GenericPendingReceiver", align 8
  %15 = alloca %"class.mojo::PendingReceiver", align 8
  %16 = tail call %"class.blink::SecurityOrigin"* @_ZN5blink14SecurityOrigin16CreateFromStringERKN3WTF6StringE(%"class.WTF::String"* dereferenceable(8) %1) #16
  %17 = tail call zeroext i1 @_ZNK5blink14SecurityOrigin24IsPotentiallyTrustworthyEv(%"class.blink::SecurityOrigin"* %16) #16
  br i1 %17, label %46, label %18

18:                                               ; preds = %5
  %19 = bitcast %"class.WTF::String"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %19) #16
  %20 = tail call %"class.WTF::StringImpl"* @_ZN5blink14SecurityOrigin36IsPotentiallyTrustworthyErrorMessageEv() #16
  %21 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %11, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %20, %"class.WTF::StringImpl"** %21, align 8
  call void @_ZNK3WTF6String4Utf8ENS_18UTF8ConversionModeE(%"class.std::__1::basic_string"* nonnull sret %10, %"class.WTF::String"* nonnull %11, i32 0) #16
  call void @_ZN5crdtp16DispatchResponse11ServerErrorENSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.crdtp::DispatchResponse"* sret %0, %"class.std::__1::basic_string"* nonnull %10) #16
  %22 = bitcast %"class.std::__1::basic_string"* %10 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %23 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %22, i64 0, i32 1, i32 0
  %24 = load i8, i8* %23, align 1
  %25 = icmp slt i8 %24, 0
  br i1 %25, label %26, label %29

26:                                               ; preds = %18
  %27 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %10, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %28 = load i8*, i8** %27, align 8
  call void @_ZdlPv(i8* %28) #18
  br label %29

29:                                               ; preds = %18, %26
  %30 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %21, align 8
  %31 = icmp eq %"class.WTF::StringImpl"* %30, null
  br i1 %31, label %45, label %32

32:                                               ; preds = %29
  %33 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %30, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %34 = load atomic i32, i32* %33 monotonic, align 4
  %35 = and i32 %34, 2
  %36 = icmp eq i32 %35, 0
  %37 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %30, i64 0, i32 0
  %38 = load i32, i32* %37, align 4
  br i1 %36, label %39, label %41

39:                                               ; preds = %32
  %40 = add i32 %38, -1
  store i32 %40, i32* %37, align 4
  br label %41

41:                                               ; preds = %39, %32
  %42 = phi i32 [ %40, %39 ], [ %38, %32 ]
  %43 = icmp eq i32 %42, 0
  br i1 %43, label %44, label %45

44:                                               ; preds = %41
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %30) #16
  br label %45

45:                                               ; preds = %29, %41, %44
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %19) #16
  br label %283

46:                                               ; preds = %5
  %47 = bitcast %"class.crdtp::DispatchResponse"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %47) #16
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %47, i8 -86, i64 32, i1 false)
  %48 = bitcast %"class.std::__1::basic_string"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %48)
  %49 = tail call %"class.blink::LocalFrame"* @_ZN5blink15InspectedFrames23FrameWithSecurityOriginERKN3WTF6StringE(%"class.blink::InspectedFrames"* %2, %"class.WTF::String"* dereferenceable(8) %1) #16, !noalias !12
  %50 = icmp eq %"class.blink::LocalFrame"* %49, null
  br i1 %50, label %51, label %145

51:                                               ; preds = %46
  %52 = bitcast %"class.WTF::String"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %52) #16, !noalias !12
  %53 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %7, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* inttoptr (i64 -6148914691236517206 to %"class.WTF::StringImpl"*), %"class.WTF::StringImpl"** %53, align 8, !noalias !12
  %54 = bitcast %"class.WTF::StringAppend"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %54) #16, !noalias !12
  %55 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %1, i64 0, i32 0, i32 0
  %56 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %55, align 8, !noalias !12
  %57 = icmp eq %"class.WTF::StringImpl"* %56, null
  br i1 %57, label %101, label %58

58:                                               ; preds = %51
  %59 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %56, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %60 = load atomic i32, i32* %59 monotonic, align 4
  %61 = and i32 %60, 2
  %62 = icmp eq i32 %61, 0
  %63 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %56, i64 0, i32 0
  %64 = load i32, i32* %63, align 4
  br i1 %62, label %65, label %75

65:                                               ; preds = %58
  %66 = zext i32 %64 to i33
  %67 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %66, i33 1) #16
  %68 = extractvalue { i33, i1 } %67, 1
  %69 = extractvalue { i33, i1 } %67, 0
  %70 = icmp slt i33 %69, 0
  %71 = or i1 %68, %70
  br i1 %71, label %72, label %73, !prof !3

72:                                               ; preds = %65
  tail call void @llvm.trap() #16
  unreachable

73:                                               ; preds = %65
  %74 = trunc i33 %69 to i32
  store i32 %74, i32* %63, align 4
  br label %75

75:                                               ; preds = %73, %58
  %76 = phi i32 [ %74, %73 ], [ %64, %58 ]
  %77 = load atomic i32, i32* %59 monotonic, align 4
  %78 = and i32 %77, 2
  %79 = icmp eq i32 %78, 0
  br i1 %79, label %80, label %90

80:                                               ; preds = %75
  %81 = zext i32 %76 to i33
  %82 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %81, i33 1) #16
  %83 = extractvalue { i33, i1 } %82, 1
  %84 = extractvalue { i33, i1 } %82, 0
  %85 = icmp slt i33 %84, 0
  %86 = or i1 %83, %85
  br i1 %86, label %87, label %88, !prof !3

87:                                               ; preds = %80
  tail call void @llvm.trap() #16
  unreachable

88:                                               ; preds = %80
  %89 = trunc i33 %84 to i32
  store i32 %89, i32* %63, align 4
  br label %90

90:                                               ; preds = %88, %75
  %91 = phi i32 [ %89, %88 ], [ %76, %75 ]
  %92 = load atomic i32, i32* %59 monotonic, align 4
  %93 = and i32 %92, 2
  %94 = icmp eq i32 %93, 0
  br i1 %94, label %95, label %97

95:                                               ; preds = %90
  %96 = add i32 %91, -1
  store i32 %96, i32* %63, align 4
  br label %97

97:                                               ; preds = %95, %90
  %98 = phi i32 [ %96, %95 ], [ %91, %90 ]
  %99 = icmp eq i32 %98, 0
  br i1 %99, label %100, label %101

100:                                              ; preds = %97
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %56) #16
  br label %101

101:                                              ; preds = %100, %97, %51
  %102 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %8, i64 0, i32 0
  store i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.7, i64 0, i64 0), i8** %102, align 8, !noalias !12
  %103 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %8, i64 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* %56, %"class.WTF::StringImpl"** %103, align 8, !noalias !12
  %104 = call %"class.WTF::StringImpl"* @_ZNK3WTF12StringAppendIPKcNS_6StringEEcvS3_Ev(%"class.WTF::StringAppend"* nonnull %8) #16
  store %"class.WTF::StringImpl"* %104, %"class.WTF::StringImpl"** %53, align 8, !noalias !12
  %105 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %103, align 8, !noalias !12
  %106 = icmp eq %"class.WTF::StringImpl"* %105, null
  br i1 %106, label %120, label %107

107:                                              ; preds = %101
  %108 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %105, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %109 = load atomic i32, i32* %108 monotonic, align 4
  %110 = and i32 %109, 2
  %111 = icmp eq i32 %110, 0
  %112 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %105, i64 0, i32 0
  %113 = load i32, i32* %112, align 4
  br i1 %111, label %114, label %116

114:                                              ; preds = %107
  %115 = add i32 %113, -1
  store i32 %115, i32* %112, align 4
  br label %116

116:                                              ; preds = %114, %107
  %117 = phi i32 [ %115, %114 ], [ %113, %107 ]
  %118 = icmp eq i32 %117, 0
  br i1 %118, label %119, label %120

119:                                              ; preds = %116
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %105) #16
  br label %120

120:                                              ; preds = %119, %116, %101
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %54) #16, !noalias !12
  call void @_ZNK3WTF6String4Utf8ENS_18UTF8ConversionModeE(%"class.std::__1::basic_string"* nonnull sret %9, %"class.WTF::String"* nonnull %7, i32 0) #16
  call void @_ZN5crdtp16DispatchResponse11ServerErrorENSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.crdtp::DispatchResponse"* nonnull sret %12, %"class.std::__1::basic_string"* nonnull %9) #16
  %121 = bitcast %"class.std::__1::basic_string"* %9 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %122 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %121, i64 0, i32 1, i32 0
  %123 = load i8, i8* %122, align 1, !noalias !12
  %124 = icmp slt i8 %123, 0
  br i1 %124, label %125, label %128

125:                                              ; preds = %120
  %126 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %9, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %127 = load i8*, i8** %126, align 8, !noalias !12
  call void @_ZdlPv(i8* %127) #18
  br label %128

128:                                              ; preds = %125, %120
  %129 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %53, align 8, !noalias !12
  %130 = icmp eq %"class.WTF::StringImpl"* %129, null
  br i1 %130, label %144, label %131

131:                                              ; preds = %128
  %132 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %129, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %133 = load atomic i32, i32* %132 monotonic, align 4
  %134 = and i32 %133, 2
  %135 = icmp eq i32 %134, 0
  %136 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %129, i64 0, i32 0
  %137 = load i32, i32* %136, align 4
  br i1 %135, label %138, label %140

138:                                              ; preds = %131
  %139 = add i32 %137, -1
  store i32 %139, i32* %136, align 4
  br label %140

140:                                              ; preds = %138, %131
  %141 = phi i32 [ %139, %138 ], [ %137, %131 ]
  %142 = icmp eq i32 %141, 0
  br i1 %142, label %143, label %144

143:                                              ; preds = %140
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %129) #16
  br label %144

144:                                              ; preds = %143, %140, %128
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %52) #16, !noalias !12
  br label %151

145:                                              ; preds = %46
  %146 = tail call %"class.blink::LocalDOMWindow"* @_ZN5blink10LocalFrame9DomWindowEv(%"class.blink::LocalFrame"* nonnull %49) #16
  %147 = icmp eq %"class.blink::LocalDOMWindow"* %146, null
  %148 = getelementptr inbounds %"class.blink::LocalDOMWindow", %"class.blink::LocalDOMWindow"* %146, i64 0, i32 1
  call void @_ZN5crdtp16DispatchResponse7SuccessEv(%"class.crdtp::DispatchResponse"* nonnull sret %12) #16
  %149 = bitcast %"class.blink::ExecutionContext.base"* %148 to i8*
  %150 = select i1 %147, i8* null, i8* %149
  br label %151

151:                                              ; preds = %144, %145
  %152 = phi i8* [ null, %144 ], [ %150, %145 ]
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %48)
  %153 = getelementptr inbounds %"class.crdtp::DispatchResponse", %"class.crdtp::DispatchResponse"* %12, i64 0, i32 0
  %154 = load i32, i32* %153, align 8
  %155 = icmp eq i32 %154, 1
  br i1 %155, label %162, label %156

156:                                              ; preds = %151
  %157 = getelementptr inbounds %"class.crdtp::DispatchResponse", %"class.crdtp::DispatchResponse"* %0, i64 0, i32 0
  store i32 %154, i32* %157, align 8
  %158 = getelementptr inbounds %"class.crdtp::DispatchResponse", %"class.crdtp::DispatchResponse"* %0, i64 0, i32 1
  %159 = getelementptr inbounds %"class.crdtp::DispatchResponse", %"class.crdtp::DispatchResponse"* %12, i64 0, i32 1
  %160 = bitcast %"class.std::__1::basic_string"* %158 to i8*
  %161 = bitcast %"class.std::__1::basic_string"* %159 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %160, i8* align 8 %161, i64 24, i1 false) #16
  call void @llvm.memset.p0i8.i64(i8* align 8 %161, i8 0, i64 24, i1 false) #16
  br label %282

162:                                              ; preds = %151
  %163 = getelementptr inbounds %"class.WTF::HashMap.239", %"class.WTF::HashMap.239"* %3, i64 0, i32 0
  %164 = call { %"struct.WTF::KeyValuePair.243"*, %"struct.WTF::KeyValuePair.243"* } @_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_N4mojo6RemoteIN5blink5mojom5blink12CacheStorageEEEEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENSE_IS9_EEEESF_NS_18PartitionAllocatorEE4findERKS1_(%"class.WTF::HashTable.240"* %163, %"class.WTF::String"* dereferenceable(8) %1) #16
  %165 = extractvalue { %"struct.WTF::KeyValuePair.243"*, %"struct.WTF::KeyValuePair.243"* } %164, 0
  %166 = getelementptr inbounds %"class.WTF::HashMap.239", %"class.WTF::HashMap.239"* %3, i64 0, i32 0, i32 0
  %167 = load %"struct.WTF::KeyValuePair.243"*, %"struct.WTF::KeyValuePair.243"** %166, align 8
  %168 = getelementptr inbounds %"class.WTF::HashMap.239", %"class.WTF::HashMap.239"* %3, i64 0, i32 0, i32 1
  %169 = load i32, i32* %168, align 8
  %170 = zext i32 %169 to i64
  %171 = getelementptr inbounds %"struct.WTF::KeyValuePair.243", %"struct.WTF::KeyValuePair.243"* %167, i64 %170
  %172 = icmp eq %"struct.WTF::KeyValuePair.243"* %165, %171
  br i1 %172, label %173, label %243

173:                                              ; preds = %162
  %174 = bitcast %"class.mojo::Remote"* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %174) #16
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %174, i8 -86, i64 48, i1 false)
  %175 = bitcast %"class.mojo::Remote"* %13 to %"class.mojo::internal::InterfacePtrStateBase"*
  call void @_ZN4mojo8internal21InterfacePtrStateBaseC2Ev(%"class.mojo::internal::InterfacePtrStateBase"* nonnull %175) #16
  %176 = getelementptr inbounds %"class.mojo::Remote", %"class.mojo::Remote"* %13, i64 0, i32 0, i32 1
  %177 = bitcast %"class.std::__1::unique_ptr.421"* %176 to i64*
  store i64 0, i64* %177, align 8
  %178 = getelementptr inbounds i8, i8* %152, i64 32
  %179 = bitcast i8* %178 to %"class.blink::MojoBindingContext"*
  %180 = bitcast i8* %178 to %"class.blink::BrowserInterfaceBrokerProxy"* (%"class.blink::MojoBindingContext"*)***
  %181 = load %"class.blink::BrowserInterfaceBrokerProxy"* (%"class.blink::MojoBindingContext"*)**, %"class.blink::BrowserInterfaceBrokerProxy"* (%"class.blink::MojoBindingContext"*)*** %180, align 8
  %182 = getelementptr inbounds %"class.blink::BrowserInterfaceBrokerProxy"* (%"class.blink::MojoBindingContext"*)*, %"class.blink::BrowserInterfaceBrokerProxy"* (%"class.blink::MojoBindingContext"*)** %181, i64 5
  %183 = load %"class.blink::BrowserInterfaceBrokerProxy"* (%"class.blink::MojoBindingContext"*)*, %"class.blink::BrowserInterfaceBrokerProxy"* (%"class.blink::MojoBindingContext"*)** %182, align 8
  %184 = call dereferenceable(72) %"class.blink::BrowserInterfaceBrokerProxy"* %183(%"class.blink::MojoBindingContext"* %179) #16
  call void @_ZN4mojo6RemoteIN5blink5mojom5blink12CacheStorageEE26BindNewPipeAndPassReceiverE13scoped_refptrIN4base19SequencedTaskRunnerEE(%"class.mojo::PendingReceiver"* nonnull sret %15, %"class.mojo::Remote"* nonnull %13, %"class.base::SequencedTaskRunner"* null) #16
  %185 = bitcast %"class.mojo::ScopedHandleBase"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %185)
  %186 = call i64 @strlen(i8* nonnull getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN5blink5mojom5blink12CacheStorage5Name_E, i64 0, i64 0)) #16
  %187 = getelementptr inbounds %"class.mojo::ScopedHandleBase", %"class.mojo::ScopedHandleBase"* %6, i64 0, i32 0, i32 0, i32 0
  %188 = getelementptr inbounds %"class.mojo::PendingReceiver", %"class.mojo::PendingReceiver"* %15, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %189 = load i32, i32* %188, align 8, !noalias !15
  store i32 %189, i32* %187, align 4, !alias.scope !15
  store i32 0, i32* %188, align 8, !noalias !15
  call void @_ZN4mojo22GenericPendingReceiverC2EN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEENS_16ScopedHandleBaseINS_17MessagePipeHandleEEE(%"class.mojo::GenericPendingReceiver"* nonnull %14, i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN5blink5mojom5blink12CacheStorage5Name_E, i64 0, i64 0), i64 %186, %"class.mojo::ScopedHandleBase"* nonnull %6) #16
  %190 = load i32, i32* %187, align 4
  %191 = icmp eq i32 %190, 0
  br i1 %191, label %194, label %192

192:                                              ; preds = %173
  %193 = call i32 @MojoClose(i32 %190) #16
  br label %194

194:                                              ; preds = %173, %192
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %185)
  call void @_ZNK5blink27BrowserInterfaceBrokerProxy12GetInterfaceEN4mojo22GenericPendingReceiverE(%"class.blink::BrowserInterfaceBrokerProxy"* %184, %"class.mojo::GenericPendingReceiver"* nonnull %14) #16
  call void @_ZN4mojo22GenericPendingReceiverD1Ev(%"class.mojo::GenericPendingReceiver"* nonnull %14) #16
  %195 = getelementptr inbounds %"class.mojo::PendingReceiver", %"class.mojo::PendingReceiver"* %15, i64 0, i32 0
  call void @_ZN4mojo8internal20PendingReceiverStateD1Ev(%"struct.mojo::internal::PendingReceiverState"* nonnull %195) #16
  %196 = getelementptr inbounds %"class.std::__1::unique_ptr.421", %"class.std::__1::unique_ptr.421"* %176, i64 0, i32 0, i32 0, i32 0
  %197 = load %"class.blink::mojom::blink::CacheStorageProxy"*, %"class.blink::mojom::blink::CacheStorageProxy"** %196, align 8
  %198 = icmp eq %"class.blink::mojom::blink::CacheStorageProxy"* %197, null
  br i1 %198, label %199, label %218

199:                                              ; preds = %194
  %200 = call i8* @_Znwm(i64 8) #18
  %201 = bitcast i8* %200 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN5blink5mojom5blink29CacheStorageResponseValidatorE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %201, align 8
  %202 = bitcast i8* %200 to %"class.mojo::MessageReceiver"*
  %203 = call zeroext i1 @_ZN4mojo8internal21InterfacePtrStateBase24InitializeEndpointClientEbbbNSt3__110unique_ptrINS_15MessageReceiverENS2_14default_deleteIS4_EEEEPKc(%"class.mojo::internal::InterfacePtrStateBase"* nonnull %175, i1 zeroext true, i1 zeroext false, i1 zeroext false, %"class.mojo::MessageReceiver"* nonnull %202, i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN5blink5mojom5blink12CacheStorage5Name_E, i64 0, i64 0)) #16
  br i1 %203, label %204, label %218

204:                                              ; preds = %199
  %205 = getelementptr inbounds %"class.mojo::Remote", %"class.mojo::Remote"* %13, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %206 = bitcast %"class.mojo::InterfaceEndpointClient"** %205 to %"class.mojo::MessageReceiverWithResponder"**
  %207 = load %"class.mojo::MessageReceiverWithResponder"*, %"class.mojo::MessageReceiverWithResponder"** %206, align 8
  %208 = call i8* @_Znwm(i64 16) #18
  %209 = bitcast i8* %208 to %"class.blink::mojom::blink::CacheStorageProxy"*
  call void @_ZN5blink5mojom5blink17CacheStorageProxyC1EPN4mojo28MessageReceiverWithResponderE(%"class.blink::mojom::blink::CacheStorageProxy"* nonnull %209, %"class.mojo::MessageReceiverWithResponder"* %207) #16
  %210 = ptrtoint i8* %208 to i64
  %211 = load %"class.blink::mojom::blink::CacheStorageProxy"*, %"class.blink::mojom::blink::CacheStorageProxy"** %196, align 8
  store i64 %210, i64* %177, align 8
  %212 = icmp eq %"class.blink::mojom::blink::CacheStorageProxy"* %211, null
  br i1 %212, label %218, label %213

213:                                              ; preds = %204
  %214 = bitcast %"class.blink::mojom::blink::CacheStorageProxy"* %211 to void (%"class.blink::mojom::blink::CacheStorageProxy"*)***
  %215 = load void (%"class.blink::mojom::blink::CacheStorageProxy"*)**, void (%"class.blink::mojom::blink::CacheStorageProxy"*)*** %214, align 8
  %216 = getelementptr inbounds void (%"class.blink::mojom::blink::CacheStorageProxy"*)*, void (%"class.blink::mojom::blink::CacheStorageProxy"*)** %215, i64 1
  %217 = load void (%"class.blink::mojom::blink::CacheStorageProxy"*)*, void (%"class.blink::mojom::blink::CacheStorageProxy"*)** %216, align 8
  call void %217(%"class.blink::mojom::blink::CacheStorageProxy"* nonnull %211) #16
  br label %218

218:                                              ; preds = %194, %199, %204, %213
  %219 = load %"class.blink::mojom::blink::CacheStorageProxy"*, %"class.blink::mojom::blink::CacheStorageProxy"** %196, align 8
  %220 = getelementptr inbounds %"class.blink::mojom::blink::CacheStorageProxy", %"class.blink::mojom::blink::CacheStorageProxy"* %219, i64 0, i32 0
  store %"class.blink::mojom::blink::CacheStorage"* %220, %"class.blink::mojom::blink::CacheStorage"** %4, align 8
  %221 = call { %"struct.WTF::KeyValuePair.243"*, i8 } @_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_N4mojo6RemoteIN5blink5mojom5blink12CacheStorageEEEEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENSE_IS9_EEEESF_NS_18PartitionAllocatorEE6insertINS_17HashMapTranslatorISH_SC_SI_EERKS1_S9_EENS_18HashTableAddResultISJ_SA_EEOT0_OT1_(%"class.WTF::HashTable.240"* %163, %"class.WTF::String"* dereferenceable(8) %1, %"class.mojo::Remote"* nonnull dereferenceable(48) %13) #16
  %222 = extractvalue { %"struct.WTF::KeyValuePair.243"*, i8 } %221, 1
  %223 = and i8 %222, 1
  %224 = icmp eq i8 %223, 0
  br i1 %224, label %225, label %233

225:                                              ; preds = %218
  %226 = extractvalue { %"struct.WTF::KeyValuePair.243"*, i8 } %221, 0
  %227 = getelementptr inbounds %"struct.WTF::KeyValuePair.243", %"struct.WTF::KeyValuePair.243"* %226, i64 0, i32 1
  %228 = getelementptr inbounds %"struct.WTF::KeyValuePair.243", %"struct.WTF::KeyValuePair.243"* %226, i64 0, i32 1, i32 0, i32 1
  %229 = load i64, i64* %177, align 8
  %230 = bitcast %"class.std::__1::unique_ptr.421"* %228 to i64*
  %231 = load i64, i64* %230, align 8
  store i64 %231, i64* %177, align 8
  store i64 %229, i64* %230, align 8
  %232 = bitcast %"class.mojo::Remote"* %227 to %"class.mojo::internal::InterfacePtrStateBase"*
  call void @_ZN4mojo8internal21InterfacePtrStateBase4SwapEPS1_(%"class.mojo::internal::InterfacePtrStateBase"* %232, %"class.mojo::internal::InterfacePtrStateBase"* nonnull %175) #16
  br label %233

233:                                              ; preds = %218, %225
  %234 = getelementptr inbounds %"class.mojo::Remote", %"class.mojo::Remote"* %13, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %235 = load %"class.blink::mojom::blink::CacheStorageProxy"*, %"class.blink::mojom::blink::CacheStorageProxy"** %234, align 8
  store %"class.blink::mojom::blink::CacheStorageProxy"* null, %"class.blink::mojom::blink::CacheStorageProxy"** %234, align 8
  %236 = icmp eq %"class.blink::mojom::blink::CacheStorageProxy"* %235, null
  br i1 %236, label %242, label %237

237:                                              ; preds = %233
  %238 = bitcast %"class.blink::mojom::blink::CacheStorageProxy"* %235 to void (%"class.blink::mojom::blink::CacheStorageProxy"*)***
  %239 = load void (%"class.blink::mojom::blink::CacheStorageProxy"*)**, void (%"class.blink::mojom::blink::CacheStorageProxy"*)*** %238, align 8
  %240 = getelementptr inbounds void (%"class.blink::mojom::blink::CacheStorageProxy"*)*, void (%"class.blink::mojom::blink::CacheStorageProxy"*)** %239, i64 1
  %241 = load void (%"class.blink::mojom::blink::CacheStorageProxy"*)*, void (%"class.blink::mojom::blink::CacheStorageProxy"*)** %240, align 8
  call void %241(%"class.blink::mojom::blink::CacheStorageProxy"* nonnull %235) #16
  br label %242

242:                                              ; preds = %233, %237
  call void @_ZN4mojo8internal21InterfacePtrStateBaseD2Ev(%"class.mojo::internal::InterfacePtrStateBase"* nonnull %175) #16
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %174) #16
  br label %273

243:                                              ; preds = %162
  %244 = getelementptr inbounds %"struct.WTF::KeyValuePair.243", %"struct.WTF::KeyValuePair.243"* %165, i64 0, i32 1, i32 0, i32 1
  %245 = getelementptr inbounds %"class.std::__1::unique_ptr.421", %"class.std::__1::unique_ptr.421"* %244, i64 0, i32 0, i32 0, i32 0
  %246 = load %"class.blink::mojom::blink::CacheStorageProxy"*, %"class.blink::mojom::blink::CacheStorageProxy"** %245, align 8
  %247 = icmp eq %"class.blink::mojom::blink::CacheStorageProxy"* %246, null
  br i1 %247, label %248, label %270

248:                                              ; preds = %243
  %249 = getelementptr inbounds %"struct.WTF::KeyValuePair.243", %"struct.WTF::KeyValuePair.243"* %165, i64 0, i32 1
  %250 = bitcast %"class.mojo::Remote"* %249 to %"class.mojo::internal::InterfacePtrStateBase"*
  %251 = call i8* @_Znwm(i64 8) #18
  %252 = bitcast i8* %251 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN5blink5mojom5blink29CacheStorageResponseValidatorE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %252, align 8
  %253 = bitcast i8* %251 to %"class.mojo::MessageReceiver"*
  %254 = call zeroext i1 @_ZN4mojo8internal21InterfacePtrStateBase24InitializeEndpointClientEbbbNSt3__110unique_ptrINS_15MessageReceiverENS2_14default_deleteIS4_EEEEPKc(%"class.mojo::internal::InterfacePtrStateBase"* %250, i1 zeroext true, i1 zeroext false, i1 zeroext false, %"class.mojo::MessageReceiver"* nonnull %253, i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN5blink5mojom5blink12CacheStorage5Name_E, i64 0, i64 0)) #16
  br i1 %254, label %255, label %270

255:                                              ; preds = %248
  %256 = getelementptr inbounds %"struct.WTF::KeyValuePair.243", %"struct.WTF::KeyValuePair.243"* %165, i64 0, i32 1, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %257 = bitcast %"class.mojo::InterfaceEndpointClient"** %256 to %"class.mojo::MessageReceiverWithResponder"**
  %258 = load %"class.mojo::MessageReceiverWithResponder"*, %"class.mojo::MessageReceiverWithResponder"** %257, align 8
  %259 = call i8* @_Znwm(i64 16) #18
  %260 = bitcast i8* %259 to %"class.blink::mojom::blink::CacheStorageProxy"*
  call void @_ZN5blink5mojom5blink17CacheStorageProxyC1EPN4mojo28MessageReceiverWithResponderE(%"class.blink::mojom::blink::CacheStorageProxy"* nonnull %260, %"class.mojo::MessageReceiverWithResponder"* %258) #16
  %261 = ptrtoint i8* %259 to i64
  %262 = load %"class.blink::mojom::blink::CacheStorageProxy"*, %"class.blink::mojom::blink::CacheStorageProxy"** %245, align 8
  %263 = bitcast %"class.std::__1::unique_ptr.421"* %244 to i64*
  store i64 %261, i64* %263, align 8
  %264 = icmp eq %"class.blink::mojom::blink::CacheStorageProxy"* %262, null
  br i1 %264, label %270, label %265

265:                                              ; preds = %255
  %266 = bitcast %"class.blink::mojom::blink::CacheStorageProxy"* %262 to void (%"class.blink::mojom::blink::CacheStorageProxy"*)***
  %267 = load void (%"class.blink::mojom::blink::CacheStorageProxy"*)**, void (%"class.blink::mojom::blink::CacheStorageProxy"*)*** %266, align 8
  %268 = getelementptr inbounds void (%"class.blink::mojom::blink::CacheStorageProxy"*)*, void (%"class.blink::mojom::blink::CacheStorageProxy"*)** %267, i64 1
  %269 = load void (%"class.blink::mojom::blink::CacheStorageProxy"*)*, void (%"class.blink::mojom::blink::CacheStorageProxy"*)** %268, align 8
  call void %269(%"class.blink::mojom::blink::CacheStorageProxy"* nonnull %262) #16
  br label %270

270:                                              ; preds = %243, %248, %255, %265
  %271 = load %"class.blink::mojom::blink::CacheStorageProxy"*, %"class.blink::mojom::blink::CacheStorageProxy"** %245, align 8
  %272 = getelementptr inbounds %"class.blink::mojom::blink::CacheStorageProxy", %"class.blink::mojom::blink::CacheStorageProxy"* %271, i64 0, i32 0
  store %"class.blink::mojom::blink::CacheStorage"* %272, %"class.blink::mojom::blink::CacheStorage"** %4, align 8
  br label %273

273:                                              ; preds = %242, %270
  call void @_ZN5crdtp16DispatchResponse7SuccessEv(%"class.crdtp::DispatchResponse"* sret %0) #16
  %274 = getelementptr inbounds %"class.crdtp::DispatchResponse", %"class.crdtp::DispatchResponse"* %12, i64 0, i32 1
  %275 = bitcast %"class.std::__1::basic_string"* %274 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %276 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %275, i64 0, i32 1, i32 0
  %277 = load i8, i8* %276, align 1
  %278 = icmp slt i8 %277, 0
  br i1 %278, label %279, label %282

279:                                              ; preds = %273
  %280 = getelementptr inbounds %"class.crdtp::DispatchResponse", %"class.crdtp::DispatchResponse"* %12, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %281 = load i8*, i8** %280, align 8
  call void @_ZdlPv(i8* %281) #18
  br label %282

282:                                              ; preds = %156, %273, %279
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %47) #16
  br label %283

283:                                              ; preds = %282, %45
  %284 = icmp eq %"class.blink::SecurityOrigin"* %16, null
  br i1 %284, label %292, label %285

285:                                              ; preds = %283
  %286 = getelementptr inbounds %"class.blink::SecurityOrigin", %"class.blink::SecurityOrigin"* %16, i64 0, i32 0, i32 0, i32 0
  call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %286) #16
  %287 = getelementptr inbounds %"class.blink::SecurityOrigin", %"class.blink::SecurityOrigin"* %16, i64 0, i32 0, i32 0, i32 0, i32 0
  %288 = load i32, i32* %287, align 4
  %289 = icmp eq i32 %288, 0
  br i1 %289, label %290, label %292

290:                                              ; preds = %285
  call void @_ZN5blink14SecurityOriginD2Ev(%"class.blink::SecurityOrigin"* nonnull %16) #16
  %291 = bitcast %"class.blink::SecurityOrigin"* %16 to i8*
  call void @free(i8* %291) #16
  br label %292

292:                                              ; preds = %283, %285, %290
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn8_N5blink26InspectorCacheStorageAgent17requestCacheNamesERKN3WTF6StringENSt3__110unique_ptrINS_8protocol12CacheStorage7Backend25RequestCacheNamesCallbackENS5_14default_deleteISA_EEEE(%"class.blink::InspectorCacheStorageAgent"*, %"class.WTF::String"* dereferenceable(8), %"class.blink::protocol::CacheStorage::Backend::RequestCacheNamesCallback"*) unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.blink::InspectorCacheStorageAgent", %"class.blink::InspectorCacheStorageAgent"* %0, i64 -1, i32 2, i32 0, i32 3
  %5 = bitcast i32* %4 to %"class.blink::InspectorCacheStorageAgent"*
  tail call void @_ZN5blink26InspectorCacheStorageAgent17requestCacheNamesERKN3WTF6StringENSt3__110unique_ptrINS_8protocol12CacheStorage7Backend25RequestCacheNamesCallbackENS5_14default_deleteISA_EEEE(%"class.blink::InspectorCacheStorageAgent"* %5, %"class.WTF::String"* dereferenceable(8) %1, %"class.blink::protocol::CacheStorage::Backend::RequestCacheNamesCallback"* %2)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink26InspectorCacheStorageAgent14requestEntriesERKN3WTF6StringEN5crdtp6detail10ValueMaybeIiEES8_NS7_IS2_EENSt3__110unique_ptrINS_8protocol12CacheStorage7Backend22RequestEntriesCallbackENSA_14default_deleteISF_EEEE(%"class.blink::InspectorCacheStorageAgent"*, %"class.WTF::String"* dereferenceable(8), %"class.crdtp::detail::ValueMaybe"* nocapture readonly, %"class.crdtp::detail::ValueMaybe"* nocapture readonly, %"class.crdtp::detail::ValueMaybe.1936"* nocapture readonly, %"class.blink::protocol::CacheStorage::Backend::RequestEntriesCallback"*) unnamed_addr #0 align 2 {
  %7 = alloca %"class.base::TimeTicks", align 8
  %8 = alloca %"class.WTF::String", align 8
  %9 = alloca %"class.blink::mojom::blink::CacheStorage"*, align 8
  %10 = alloca %"class.crdtp::DispatchResponse", align 8
  %11 = alloca i32, align 4
  %12 = alloca i32, align 4
  %13 = alloca %"class.WTF::String", align 8
  %14 = alloca %"class.base::OnceCallback.1937", align 8
  %15 = ptrtoint %"class.blink::protocol::CacheStorage::Backend::RequestEntriesCallback"* %5 to i64
  %16 = tail call i64 @_ZN5blink13cache_storage13CreateTraceIdEv() #16
  %17 = load i8, i8* getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 23, i32 0), align 16
  %18 = and i8 %17, 25
  %19 = icmp eq i8 %18, 0
  br i1 %19, label %26, label %20, !prof !2

20:                                               ; preds = %6
  %21 = tail call i32 @_ZN4base14PlatformThread9CurrentIdEv() #16
  %22 = bitcast %"class.base::TimeTicks"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %22) #16
  %23 = getelementptr inbounds %"class.base::TimeTicks", %"class.base::TimeTicks"* %7, i64 0, i32 0, i32 0
  %24 = tail call i64 @_ZN4base6subtle28TimeTicksNowIgnoringOverrideEv() #16
  store i64 %24, i64* %23, align 8
  %25 = call i64 @_ZN20trace_event_internal37AddTraceEventWithThreadIdAndTimestampEcPKhPKcS3_yyiRKN4base9TimeTicksEPNS4_11trace_event14TraceArgumentsEj(i8 signext 88, i8* getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 23, i32 0), i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.1, i64 0, i64 0), i8* null, i64 0, i64 %16, i32 %21, %"class.base::TimeTicks"* nonnull dereferenceable(8) %7, %"class.base::trace_event::TraceArguments"* null, i32 4352) #16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %22) #16
  br label %26

26:                                               ; preds = %6, %20
  %27 = phi i8* [ null, %6 ], [ getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 23, i32 0), %20 ]
  %28 = phi i8* [ inttoptr (i64 -6148914691236517206 to i8*), %6 ], [ getelementptr inbounds ([43 x i8], [43 x i8]* @.str.1, i64 0, i64 0), %20 ]
  %29 = phi i64 [ -6148914691236517206, %6 ], [ %25, %20 ]
  %30 = bitcast %"class.WTF::String"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %30) #16
  %31 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %8, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %31, align 8
  %32 = bitcast %"class.blink::mojom::blink::CacheStorage"** %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %32) #16
  store %"class.blink::mojom::blink::CacheStorage"* null, %"class.blink::mojom::blink::CacheStorage"** %9, align 8
  %33 = bitcast %"class.crdtp::DispatchResponse"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %33) #16
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %33, i8 -86, i64 32, i1 false)
  %34 = getelementptr inbounds %"class.blink::InspectorCacheStorageAgent", %"class.blink::InspectorCacheStorageAgent"* %0, i64 0, i32 1, i32 0, i32 0
  %35 = load %"class.blink::InspectedFrames"*, %"class.blink::InspectedFrames"** %34, align 8
  %36 = getelementptr inbounds %"class.blink::InspectorCacheStorageAgent", %"class.blink::InspectorCacheStorageAgent"* %0, i64 0, i32 2
  call fastcc void @_ZN5blink12_GLOBAL__N_130AssertCacheStorageAndNameForIdERKN3WTF6StringEPNS_15InspectedFramesEPS2_PNS1_7HashMapIS2_N4mojo6RemoteINS_5mojom5blink12CacheStorageEEENS1_10StringHashENS1_10HashTraitsIS2_EENSG_ISE_EENS1_18PartitionAllocatorEEEPPSD_(%"class.crdtp::DispatchResponse"* nonnull sret %10, %"class.WTF::String"* dereferenceable(8) %1, %"class.blink::InspectedFrames"* %35, %"class.WTF::String"* nonnull %8, %"class.WTF::HashMap.239"* %36, %"class.blink::mojom::blink::CacheStorage"** nonnull %9)
  %37 = getelementptr inbounds %"class.crdtp::DispatchResponse", %"class.crdtp::DispatchResponse"* %10, i64 0, i32 0
  %38 = load i32, i32* %37, align 8
  %39 = icmp eq i32 %38, 1
  br i1 %39, label %45, label %40

40:                                               ; preds = %26
  %41 = bitcast %"class.blink::protocol::CacheStorage::Backend::RequestEntriesCallback"* %5 to void (%"class.blink::protocol::CacheStorage::Backend::RequestEntriesCallback"*, %"class.crdtp::DispatchResponse"*)***
  %42 = load void (%"class.blink::protocol::CacheStorage::Backend::RequestEntriesCallback"*, %"class.crdtp::DispatchResponse"*)**, void (%"class.blink::protocol::CacheStorage::Backend::RequestEntriesCallback"*, %"class.crdtp::DispatchResponse"*)*** %41, align 8
  %43 = getelementptr inbounds void (%"class.blink::protocol::CacheStorage::Backend::RequestEntriesCallback"*, %"class.crdtp::DispatchResponse"*)*, void (%"class.blink::protocol::CacheStorage::Backend::RequestEntriesCallback"*, %"class.crdtp::DispatchResponse"*)** %42, i64 1
  %44 = load void (%"class.blink::protocol::CacheStorage::Backend::RequestEntriesCallback"*, %"class.crdtp::DispatchResponse"*)*, void (%"class.blink::protocol::CacheStorage::Backend::RequestEntriesCallback"*, %"class.crdtp::DispatchResponse"*)** %43, align 8
  call void %44(%"class.blink::protocol::CacheStorage::Backend::RequestEntriesCallback"* %5, %"class.crdtp::DispatchResponse"* nonnull dereferenceable(32) %10) #16
  br label %209

45:                                               ; preds = %26
  %46 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %31, align 8
  %47 = icmp eq %"class.WTF::StringImpl"* %46, null
  br i1 %47, label %65, label %48

48:                                               ; preds = %45
  %49 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %46, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %50 = load atomic i32, i32* %49 monotonic, align 4
  %51 = and i32 %50, 2
  %52 = icmp eq i32 %51, 0
  br i1 %52, label %53, label %65

53:                                               ; preds = %48
  %54 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %46, i64 0, i32 0
  %55 = load i32, i32* %54, align 4
  %56 = zext i32 %55 to i33
  %57 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %56, i33 1) #16
  %58 = extractvalue { i33, i1 } %57, 1
  %59 = extractvalue { i33, i1 } %57, 0
  %60 = icmp slt i33 %59, 0
  %61 = or i1 %58, %60
  br i1 %61, label %62, label %63, !prof !3

62:                                               ; preds = %53
  call void @llvm.trap() #16
  unreachable

63:                                               ; preds = %53
  %64 = trunc i33 %59 to i32
  store i32 %64, i32* %54, align 4
  br label %65

65:                                               ; preds = %45, %48, %63
  %66 = bitcast i32* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %66)
  store i32 -1, i32* %11, align 4
  %67 = getelementptr inbounds %"class.crdtp::detail::ValueMaybe", %"class.crdtp::detail::ValueMaybe"* %3, i64 0, i32 0
  %68 = load i8, i8* %67, align 4, !range !20
  %69 = icmp eq i8 %68, 0
  %70 = getelementptr inbounds %"class.crdtp::detail::ValueMaybe", %"class.crdtp::detail::ValueMaybe"* %3, i64 0, i32 1
  %71 = select i1 %69, i32* %11, i32* %70
  %72 = load i32, i32* %71, align 4
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %66)
  %73 = bitcast i32* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %73)
  store i32 0, i32* %12, align 4
  %74 = getelementptr inbounds %"class.crdtp::detail::ValueMaybe", %"class.crdtp::detail::ValueMaybe"* %2, i64 0, i32 0
  %75 = load i8, i8* %74, align 4, !range !20
  %76 = icmp eq i8 %75, 0
  %77 = getelementptr inbounds %"class.crdtp::detail::ValueMaybe", %"class.crdtp::detail::ValueMaybe"* %2, i64 0, i32 1
  %78 = select i1 %76, i32* %12, i32* %77
  %79 = load i32, i32* %78, align 4
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %73)
  %80 = bitcast %"class.WTF::String"* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %80) #16
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %13, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.2, i64 0, i64 0), i64 0) #16
  %81 = getelementptr inbounds %"class.crdtp::detail::ValueMaybe.1936", %"class.crdtp::detail::ValueMaybe.1936"* %4, i64 0, i32 0
  %82 = load i8, i8* %81, align 8, !range !20
  %83 = icmp eq i8 %82, 0
  %84 = getelementptr inbounds %"class.crdtp::detail::ValueMaybe.1936", %"class.crdtp::detail::ValueMaybe.1936"* %4, i64 0, i32 1
  %85 = select i1 %83, %"class.WTF::String"* %13, %"class.WTF::String"* %84
  %86 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %85, i64 0, i32 0, i32 0
  %87 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %86, align 8
  %88 = icmp eq %"class.WTF::StringImpl"* %87, null
  br i1 %88, label %106, label %89

89:                                               ; preds = %65
  %90 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %87, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %91 = load atomic i32, i32* %90 monotonic, align 4
  %92 = and i32 %91, 2
  %93 = icmp eq i32 %92, 0
  br i1 %93, label %94, label %106

94:                                               ; preds = %89
  %95 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %87, i64 0, i32 0
  %96 = load i32, i32* %95, align 4
  %97 = zext i32 %96 to i33
  %98 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %97, i33 1) #16
  %99 = extractvalue { i33, i1 } %98, 1
  %100 = extractvalue { i33, i1 } %98, 0
  %101 = icmp slt i33 %100, 0
  %102 = or i1 %99, %101
  br i1 %102, label %103, label %104, !prof !3

103:                                              ; preds = %94
  call void @llvm.trap() #16
  unreachable

104:                                              ; preds = %94
  %105 = trunc i33 %100 to i32
  store i32 %105, i32* %95, align 4
  br label %106

106:                                              ; preds = %65, %89, %104
  %107 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %13, i64 0, i32 0, i32 0
  %108 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %107, align 8
  %109 = icmp eq %"class.WTF::StringImpl"* %108, null
  br i1 %109, label %123, label %110

110:                                              ; preds = %106
  %111 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %108, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %112 = load atomic i32, i32* %111 monotonic, align 4
  %113 = and i32 %112, 2
  %114 = icmp eq i32 %113, 0
  %115 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %108, i64 0, i32 0
  %116 = load i32, i32* %115, align 4
  br i1 %114, label %117, label %119

117:                                              ; preds = %110
  %118 = add i32 %116, -1
  store i32 %118, i32* %115, align 4
  br label %119

119:                                              ; preds = %117, %110
  %120 = phi i32 [ %118, %117 ], [ %116, %110 ]
  %121 = icmp eq i32 %120, 0
  br i1 %121, label %122, label %123

122:                                              ; preds = %119
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %108) #16
  br label %123

123:                                              ; preds = %106, %119, %122
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %80) #16
  %124 = load %"class.blink::mojom::blink::CacheStorage"*, %"class.blink::mojom::blink::CacheStorage"** %9, align 8
  %125 = getelementptr inbounds %"class.base::OnceCallback.1937", %"class.base::OnceCallback.1937"* %14, i64 0, i32 0, i32 0, i32 0
  store %"class.base::internal::BindStateBase"* inttoptr (i64 -6148914691236517206 to %"class.base::internal::BindStateBase"*), %"class.base::internal::BindStateBase"** %125, align 8, !alias.scope !21
  %126 = call i8* @_Znwm(i64 72) #18, !noalias !24
  %127 = bitcast i8* %126 to %"class.base::internal::BindStateBase"*
  call void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_E(%"class.base::internal::BindStateBase"* nonnull %127, void ()* bitcast (void (%"class.base::internal::BindStateBase"*, %"class.mojo::StructPtr.2200"*)* @"_ZN4base8internal7InvokerINS0_9BindStateIZN5blink26InspectorCacheStorageAgent14requestEntriesERKN3WTF6StringEN5crdtp6detail10ValueMaybeIiEESC_NSB_IS6_EENSt3__110unique_ptrINS3_8protocol12CacheStorage7Backend22RequestEntriesCallbackENSE_14default_deleteISJ_EEEEE3$_1JNS3_12_GLOBAL__N_117DataRequestParamsESM_EEEFvN4mojo9StructPtrINS3_5mojom5blink10OpenResultEEEEE7RunOnceEPNS0_13BindStateBaseEOSW_" to void ()*), void (%"class.base::internal::BindStateBase"*)* nonnull @"_ZN4base8internal9BindStateIZN5blink26InspectorCacheStorageAgent14requestEntriesERKN3WTF6StringEN5crdtp6detail10ValueMaybeIiEESB_NSA_IS5_EENSt3__110unique_ptrINS2_8protocol12CacheStorage7Backend22RequestEntriesCallbackENSD_14default_deleteISI_EEEEE3$_1JNS2_12_GLOBAL__N_117DataRequestParamsESL_EE7DestroyEPKNS0_13BindStateBaseE") #16, !noalias !24
  %128 = getelementptr inbounds i8, i8* %126, i64 40
  %129 = bitcast i8* %128 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %46, %"class.WTF::StringImpl"** %129, align 8, !noalias !24
  br i1 %47, label %147, label %130

130:                                              ; preds = %123
  %131 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %46, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %132 = load atomic i32, i32* %131 monotonic, align 4, !noalias !24
  %133 = and i32 %132, 2
  %134 = icmp eq i32 %133, 0
  br i1 %134, label %135, label %147

135:                                              ; preds = %130
  %136 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %46, i64 0, i32 0
  %137 = load i32, i32* %136, align 4, !noalias !24
  %138 = zext i32 %137 to i33
  %139 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %138, i33 1) #16
  %140 = extractvalue { i33, i1 } %139, 1
  %141 = extractvalue { i33, i1 } %139, 0
  %142 = icmp slt i33 %141, 0
  %143 = or i1 %140, %142
  br i1 %143, label %144, label %145, !prof !3

144:                                              ; preds = %135
  call void @llvm.trap() #16, !noalias !24
  unreachable

145:                                              ; preds = %135
  %146 = trunc i33 %141 to i32
  store i32 %146, i32* %136, align 4, !noalias !24
  br label %147

147:                                              ; preds = %145, %130, %123
  %148 = getelementptr inbounds i8, i8* %126, i64 48
  %149 = bitcast i8* %148 to i64*
  %150 = zext i32 %72 to i64
  %151 = shl nuw i64 %150, 32
  %152 = zext i32 %79 to i64
  %153 = or i64 %151, %152
  store i64 %153, i64* %149, align 8, !noalias !24
  %154 = getelementptr inbounds i8, i8* %126, i64 56
  %155 = bitcast i8* %154 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %87, %"class.WTF::StringImpl"** %155, align 8, !noalias !24
  br i1 %88, label %173, label %156

156:                                              ; preds = %147
  %157 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %87, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %158 = load atomic i32, i32* %157 monotonic, align 4, !noalias !24
  %159 = and i32 %158, 2
  %160 = icmp eq i32 %159, 0
  br i1 %160, label %161, label %173

161:                                              ; preds = %156
  %162 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %87, i64 0, i32 0
  %163 = load i32, i32* %162, align 4, !noalias !24
  %164 = zext i32 %163 to i33
  %165 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %164, i33 1) #16
  %166 = extractvalue { i33, i1 } %165, 1
  %167 = extractvalue { i33, i1 } %165, 0
  %168 = icmp slt i33 %167, 0
  %169 = or i1 %166, %168
  br i1 %169, label %170, label %171, !prof !3

170:                                              ; preds = %161
  call void @llvm.trap() #16, !noalias !24
  unreachable

171:                                              ; preds = %161
  %172 = trunc i33 %167 to i32
  store i32 %172, i32* %162, align 4, !noalias !24
  br label %173

173:                                              ; preds = %147, %156, %171
  %174 = getelementptr inbounds i8, i8* %126, i64 64
  %175 = bitcast i8* %174 to i64*
  store i64 %15, i64* %175, align 8, !noalias !24
  %176 = bitcast %"class.base::OnceCallback.1937"* %14 to i8**
  store i8* %126, i8** %176, align 8, !alias.scope !24
  %177 = bitcast %"class.blink::mojom::blink::CacheStorage"* %124 to void (%"class.blink::mojom::blink::CacheStorage"*, %"class.WTF::String"*, i64, %"class.base::OnceCallback.1937"*)***
  %178 = load void (%"class.blink::mojom::blink::CacheStorage"*, %"class.WTF::String"*, i64, %"class.base::OnceCallback.1937"*)**, void (%"class.blink::mojom::blink::CacheStorage"*, %"class.WTF::String"*, i64, %"class.base::OnceCallback.1937"*)*** %177, align 8
  %179 = getelementptr inbounds void (%"class.blink::mojom::blink::CacheStorage"*, %"class.WTF::String"*, i64, %"class.base::OnceCallback.1937"*)*, void (%"class.blink::mojom::blink::CacheStorage"*, %"class.WTF::String"*, i64, %"class.base::OnceCallback.1937"*)** %178, i64 6
  %180 = load void (%"class.blink::mojom::blink::CacheStorage"*, %"class.WTF::String"*, i64, %"class.base::OnceCallback.1937"*)*, void (%"class.blink::mojom::blink::CacheStorage"*, %"class.WTF::String"*, i64, %"class.base::OnceCallback.1937"*)** %179, align 8
  call void %180(%"class.blink::mojom::blink::CacheStorage"* %124, %"class.WTF::String"* nonnull dereferenceable(8) %8, i64 %16, %"class.base::OnceCallback.1937"* nonnull %14) #16
  %181 = getelementptr inbounds %"class.base::OnceCallback.1937", %"class.base::OnceCallback.1937"* %14, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %181) #16
  br i1 %88, label %195, label %182

182:                                              ; preds = %173
  %183 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %87, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %184 = load atomic i32, i32* %183 monotonic, align 4
  %185 = and i32 %184, 2
  %186 = icmp eq i32 %185, 0
  %187 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %87, i64 0, i32 0
  %188 = load i32, i32* %187, align 4
  br i1 %186, label %189, label %191

189:                                              ; preds = %182
  %190 = add i32 %188, -1
  store i32 %190, i32* %187, align 4
  br label %191

191:                                              ; preds = %189, %182
  %192 = phi i32 [ %190, %189 ], [ %188, %182 ]
  %193 = icmp eq i32 %192, 0
  br i1 %193, label %194, label %195

194:                                              ; preds = %191
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %87) #16
  br label %195

195:                                              ; preds = %194, %191, %173
  br i1 %47, label %209, label %196

196:                                              ; preds = %195
  %197 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %46, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %198 = load atomic i32, i32* %197 monotonic, align 4
  %199 = and i32 %198, 2
  %200 = icmp eq i32 %199, 0
  %201 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %46, i64 0, i32 0
  %202 = load i32, i32* %201, align 4
  br i1 %200, label %203, label %205

203:                                              ; preds = %196
  %204 = add i32 %202, -1
  store i32 %204, i32* %201, align 4
  br label %205

205:                                              ; preds = %203, %196
  %206 = phi i32 [ %204, %203 ], [ %202, %196 ]
  %207 = icmp eq i32 %206, 0
  br i1 %207, label %208, label %209

208:                                              ; preds = %205
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %46) #16
  br label %209

209:                                              ; preds = %208, %205, %195, %40
  %210 = phi %"class.blink::protocol::CacheStorage::Backend::RequestEntriesCallback"* [ %5, %40 ], [ null, %195 ], [ null, %205 ], [ null, %208 ]
  %211 = getelementptr inbounds %"class.crdtp::DispatchResponse", %"class.crdtp::DispatchResponse"* %10, i64 0, i32 1
  %212 = bitcast %"class.std::__1::basic_string"* %211 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %213 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %212, i64 0, i32 1, i32 0
  %214 = load i8, i8* %213, align 1
  %215 = icmp slt i8 %214, 0
  br i1 %215, label %216, label %219

216:                                              ; preds = %209
  %217 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %211, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %218 = load i8*, i8** %217, align 8
  call void @_ZdlPv(i8* %218) #18
  br label %219

219:                                              ; preds = %209, %216
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %33) #16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %32) #16
  %220 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %31, align 8
  %221 = icmp eq %"class.WTF::StringImpl"* %220, null
  br i1 %221, label %235, label %222

222:                                              ; preds = %219
  %223 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %220, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %224 = load atomic i32, i32* %223 monotonic, align 4
  %225 = and i32 %224, 2
  %226 = icmp eq i32 %225, 0
  %227 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %220, i64 0, i32 0
  %228 = load i32, i32* %227, align 4
  br i1 %226, label %229, label %231

229:                                              ; preds = %222
  %230 = add i32 %228, -1
  store i32 %230, i32* %227, align 4
  br label %231

231:                                              ; preds = %229, %222
  %232 = phi i32 [ %230, %229 ], [ %228, %222 ]
  %233 = icmp eq i32 %232, 0
  br i1 %233, label %234, label %235

234:                                              ; preds = %231
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %220) #16
  br label %235

235:                                              ; preds = %219, %231, %234
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %30) #16
  %236 = icmp eq i8* %27, null
  br i1 %236, label %241, label %237

237:                                              ; preds = %235
  %238 = load i8, i8* %27, align 1
  %239 = icmp eq i8 %238, 0
  br i1 %239, label %241, label %240

240:                                              ; preds = %237
  call void @_ZN20trace_event_internal24UpdateTraceEventDurationEPKhPKcN4base11trace_event16TraceEventHandleE(i8* nonnull %27, i8* %28, i64 %29) #16
  br label %241

241:                                              ; preds = %235, %237, %240
  %242 = icmp eq %"class.blink::protocol::CacheStorage::Backend::RequestEntriesCallback"* %210, null
  br i1 %242, label %248, label %243

243:                                              ; preds = %241
  %244 = bitcast %"class.blink::protocol::CacheStorage::Backend::RequestEntriesCallback"* %210 to void (%"class.blink::protocol::CacheStorage::Backend::RequestEntriesCallback"*)***
  %245 = load void (%"class.blink::protocol::CacheStorage::Backend::RequestEntriesCallback"*)**, void (%"class.blink::protocol::CacheStorage::Backend::RequestEntriesCallback"*)*** %244, align 8
  %246 = getelementptr inbounds void (%"class.blink::protocol::CacheStorage::Backend::RequestEntriesCallback"*)*, void (%"class.blink::protocol::CacheStorage::Backend::RequestEntriesCallback"*)** %245, i64 4
  %247 = load void (%"class.blink::protocol::CacheStorage::Backend::RequestEntriesCallback"*)*, void (%"class.blink::protocol::CacheStorage::Backend::RequestEntriesCallback"*)** %246, align 8
  call void %247(%"class.blink::protocol::CacheStorage::Backend::RequestEntriesCallback"* nonnull %210) #16
  br label %248

248:                                              ; preds = %241, %243
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc void @_ZN5blink12_GLOBAL__N_130AssertCacheStorageAndNameForIdERKN3WTF6StringEPNS_15InspectedFramesEPS2_PNS1_7HashMapIS2_N4mojo6RemoteINS_5mojom5blink12CacheStorageEEENS1_10StringHashENS1_10HashTraitsIS2_EENSG_ISE_EENS1_18PartitionAllocatorEEEPPSD_(%"class.crdtp::DispatchResponse"* noalias sret, %"class.WTF::String"* dereferenceable(8), %"class.blink::InspectedFrames"*, %"class.WTF::String"* nocapture, %"class.WTF::HashMap.239"*, %"class.blink::mojom::blink::CacheStorage"** nocapture) unnamed_addr #0 {
  %7 = alloca %"class.std::__1::basic_string", align 8
  %8 = alloca %"class.WTF::String", align 8
  %9 = alloca %"class.crdtp::DispatchResponse", align 8
  %10 = bitcast %"class.WTF::String"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10) #16
  %11 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %8, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %11, align 8
  %12 = bitcast %"class.crdtp::DispatchResponse"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %12) #16
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %12, i8 -86, i64 32, i1 false)
  %13 = bitcast %"class.std::__1::basic_string"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %13)
  %14 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %1, i64 0, i32 0, i32 0
  %15 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %14, align 8, !noalias !29
  %16 = icmp eq %"class.WTF::StringImpl"* %15, null
  br i1 %16, label %54, label %17

17:                                               ; preds = %6
  %18 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %15, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %19 = load atomic i32, i32* %18 monotonic, align 4
  %20 = and i32 %19, 1
  %21 = icmp eq i32 %20, 0
  %22 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %15, i64 1
  br i1 %21, label %35, label %23

23:                                               ; preds = %17
  %24 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %15, i64 0, i32 1
  %25 = load i32, i32* %24, align 4
  %26 = icmp eq i32 %25, 0
  br i1 %26, label %54, label %27

27:                                               ; preds = %23
  %28 = bitcast %"class.WTF::StringImpl"* %22 to i8*
  %29 = zext i32 %25 to i64
  %30 = tail call i8* @memchr(i8* %28, i32 124, i64 %29) #17
  %31 = icmp eq i8* %30, null
  %32 = ptrtoint i8* %30 to i64
  %33 = ptrtoint %"class.WTF::StringImpl"* %22 to i64
  %34 = sub i64 %32, %33
  br i1 %31, label %54, label %50

35:                                               ; preds = %17
  %36 = bitcast %"class.WTF::StringImpl"* %22 to i16*
  %37 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %15, i64 0, i32 1
  %38 = load i32, i32* %37, align 4
  %39 = icmp eq i32 %38, 0
  br i1 %39, label %54, label %40

40:                                               ; preds = %35
  %41 = zext i32 %38 to i64
  br label %42

42:                                               ; preds = %47, %40
  %43 = phi i64 [ %48, %47 ], [ 0, %40 ]
  %44 = getelementptr inbounds i16, i16* %36, i64 %43
  %45 = load i16, i16* %44, align 2
  %46 = icmp eq i16 %45, 124
  br i1 %46, label %50, label %47

47:                                               ; preds = %42
  %48 = add nuw nsw i64 %43, 1
  %49 = icmp eq i64 %48, %41
  br i1 %49, label %54, label %42

50:                                               ; preds = %42, %27
  %51 = phi i64 [ %34, %27 ], [ %43, %42 ]
  %52 = trunc i64 %51 to i32
  %53 = icmp eq i32 %52, -1
  br i1 %53, label %54, label %63

54:                                               ; preds = %47, %50, %35, %27, %23, %6
  %55 = bitcast %"class.std::__1::basic_string"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %56 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %55, i64 0, i32 1, i32 0
  store i8 17, i8* %56, align 1, !noalias !29
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %13, i8* align 1 getelementptr inbounds ([18 x i8], [18 x i8]* @.str.15, i64 0, i64 0), i64 17, i1 false) #16
  %57 = getelementptr inbounds i8, i8* %13, i64 17
  store i8 0, i8* %57, align 1, !noalias !29
  call void @_ZN5crdtp16DispatchResponse11ServerErrorENSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.crdtp::DispatchResponse"* nonnull sret %9, %"class.std::__1::basic_string"* nonnull %7) #16
  %58 = load i8, i8* %56, align 1, !noalias !29
  %59 = icmp slt i8 %58, 0
  br i1 %59, label %60, label %88

60:                                               ; preds = %54
  %61 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %62 = load i8*, i8** %61, align 8, !noalias !29
  call void @_ZdlPv(i8* %62) #18
  br label %88

63:                                               ; preds = %50
  %64 = tail call %"class.WTF::StringImpl"* @_ZNK3WTF6String9SubstringEjj(%"class.WTF::String"* %1, i32 0, i32 %52) #16
  %65 = ptrtoint %"class.WTF::StringImpl"* %64 to i64
  %66 = bitcast %"class.WTF::String"* %8 to i64*
  store i64 %65, i64* %66, align 8, !noalias !29
  %67 = add nuw i32 %52, 1
  %68 = tail call %"class.WTF::StringImpl"* @_ZNK3WTF6String9SubstringEjj(%"class.WTF::String"* %1, i32 %67, i32 -1) #16
  %69 = ptrtoint %"class.WTF::StringImpl"* %68 to i64
  %70 = bitcast %"class.WTF::String"* %3 to i64*
  %71 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %3, i64 0, i32 0, i32 0
  %72 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %71, align 8, !noalias !29
  store i64 %69, i64* %70, align 8, !noalias !29
  %73 = icmp eq %"class.WTF::StringImpl"* %72, null
  br i1 %73, label %87, label %74

74:                                               ; preds = %63
  %75 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %72, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %76 = load atomic i32, i32* %75 monotonic, align 4
  %77 = and i32 %76, 2
  %78 = icmp eq i32 %77, 0
  %79 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %72, i64 0, i32 0
  %80 = load i32, i32* %79, align 4
  br i1 %78, label %81, label %83

81:                                               ; preds = %74
  %82 = add i32 %80, -1
  store i32 %82, i32* %79, align 4
  br label %83

83:                                               ; preds = %81, %74
  %84 = phi i32 [ %82, %81 ], [ %80, %74 ]
  %85 = icmp eq i32 %84, 0
  br i1 %85, label %86, label %87

86:                                               ; preds = %83
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %72) #16
  br label %87

87:                                               ; preds = %86, %83, %63
  call void @_ZN5crdtp16DispatchResponse7SuccessEv(%"class.crdtp::DispatchResponse"* nonnull sret %9) #16
  br label %88

88:                                               ; preds = %54, %60, %87
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %13)
  %89 = getelementptr inbounds %"class.crdtp::DispatchResponse", %"class.crdtp::DispatchResponse"* %9, i64 0, i32 0
  %90 = load i32, i32* %89, align 8
  %91 = icmp eq i32 %90, 1
  br i1 %91, label %98, label %92

92:                                               ; preds = %88
  %93 = getelementptr inbounds %"class.crdtp::DispatchResponse", %"class.crdtp::DispatchResponse"* %0, i64 0, i32 0
  store i32 %90, i32* %93, align 8
  %94 = getelementptr inbounds %"class.crdtp::DispatchResponse", %"class.crdtp::DispatchResponse"* %0, i64 0, i32 1
  %95 = getelementptr inbounds %"class.crdtp::DispatchResponse", %"class.crdtp::DispatchResponse"* %9, i64 0, i32 1
  %96 = bitcast %"class.std::__1::basic_string"* %94 to i8*
  %97 = bitcast %"class.std::__1::basic_string"* %95 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %96, i8* align 8 %97, i64 24, i1 false) #16
  call void @llvm.memset.p0i8.i64(i8* align 8 %97, i8 0, i64 24, i1 false) #16
  br label %107

98:                                               ; preds = %88
  call fastcc void @_ZN5blink12_GLOBAL__N_118AssertCacheStorageERKN3WTF6StringEPNS_15InspectedFramesEPNS1_7HashMapIS2_N4mojo6RemoteINS_5mojom5blink12CacheStorageEEENS1_10StringHashENS1_10HashTraitsIS2_EENSF_ISD_EENS1_18PartitionAllocatorEEEPPSC_(%"class.crdtp::DispatchResponse"* sret %0, %"class.WTF::String"* nonnull dereferenceable(8) %8, %"class.blink::InspectedFrames"* %2, %"class.WTF::HashMap.239"* %4, %"class.blink::mojom::blink::CacheStorage"** %5)
  %99 = getelementptr inbounds %"class.crdtp::DispatchResponse", %"class.crdtp::DispatchResponse"* %9, i64 0, i32 1
  %100 = bitcast %"class.std::__1::basic_string"* %99 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %101 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %100, i64 0, i32 1, i32 0
  %102 = load i8, i8* %101, align 1
  %103 = icmp slt i8 %102, 0
  br i1 %103, label %104, label %107

104:                                              ; preds = %98
  %105 = getelementptr inbounds %"class.crdtp::DispatchResponse", %"class.crdtp::DispatchResponse"* %9, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %106 = load i8*, i8** %105, align 8
  call void @_ZdlPv(i8* %106) #18
  br label %107

107:                                              ; preds = %92, %98, %104
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %12) #16
  %108 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %11, align 8
  %109 = icmp eq %"class.WTF::StringImpl"* %108, null
  br i1 %109, label %123, label %110

110:                                              ; preds = %107
  %111 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %108, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %112 = load atomic i32, i32* %111 monotonic, align 4
  %113 = and i32 %112, 2
  %114 = icmp eq i32 %113, 0
  %115 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %108, i64 0, i32 0
  %116 = load i32, i32* %115, align 4
  br i1 %114, label %117, label %119

117:                                              ; preds = %110
  %118 = add i32 %116, -1
  store i32 %118, i32* %115, align 4
  br label %119

119:                                              ; preds = %117, %110
  %120 = phi i32 [ %118, %117 ], [ %116, %110 ]
  %121 = icmp eq i32 %120, 0
  br i1 %121, label %122, label %123

122:                                              ; preds = %119
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %108) #16
  br label %123

123:                                              ; preds = %107, %119, %122
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10) #16
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn8_N5blink26InspectorCacheStorageAgent14requestEntriesERKN3WTF6StringEN5crdtp6detail10ValueMaybeIiEES8_NS7_IS2_EENSt3__110unique_ptrINS_8protocol12CacheStorage7Backend22RequestEntriesCallbackENSA_14default_deleteISF_EEEE(%"class.blink::InspectorCacheStorageAgent"*, %"class.WTF::String"* dereferenceable(8), %"class.crdtp::detail::ValueMaybe"* nocapture readonly, %"class.crdtp::detail::ValueMaybe"* nocapture readonly, %"class.crdtp::detail::ValueMaybe.1936"* nocapture readonly, %"class.blink::protocol::CacheStorage::Backend::RequestEntriesCallback"*) unnamed_addr #0 align 2 {
  %7 = getelementptr inbounds %"class.blink::InspectorCacheStorageAgent", %"class.blink::InspectorCacheStorageAgent"* %0, i64 -1, i32 2, i32 0, i32 3
  %8 = bitcast i32* %7 to %"class.blink::InspectorCacheStorageAgent"*
  tail call void @_ZN5blink26InspectorCacheStorageAgent14requestEntriesERKN3WTF6StringEN5crdtp6detail10ValueMaybeIiEES8_NS7_IS2_EENSt3__110unique_ptrINS_8protocol12CacheStorage7Backend22RequestEntriesCallbackENSA_14default_deleteISF_EEEE(%"class.blink::InspectorCacheStorageAgent"* %8, %"class.WTF::String"* dereferenceable(8) %1, %"class.crdtp::detail::ValueMaybe"* %2, %"class.crdtp::detail::ValueMaybe"* %3, %"class.crdtp::detail::ValueMaybe.1936"* %4, %"class.blink::protocol::CacheStorage::Backend::RequestEntriesCallback"* %5)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink26InspectorCacheStorageAgent11deleteCacheERKN3WTF6StringENSt3__110unique_ptrINS_8protocol12CacheStorage7Backend19DeleteCacheCallbackENS5_14default_deleteISA_EEEE(%"class.blink::InspectorCacheStorageAgent"*, %"class.WTF::String"* dereferenceable(8), %"class.blink::protocol::CacheStorage::Backend::DeleteCacheCallback"*) unnamed_addr #0 align 2 {
  %4 = alloca %"class.base::TimeTicks", align 8
  %5 = alloca %"class.WTF::String", align 8
  %6 = alloca %"class.blink::mojom::blink::CacheStorage"*, align 8
  %7 = alloca %"class.crdtp::DispatchResponse", align 8
  %8 = alloca %"class.base::OnceCallback.1946", align 8
  %9 = ptrtoint %"class.blink::protocol::CacheStorage::Backend::DeleteCacheCallback"* %2 to i64
  %10 = tail call i64 @_ZN5blink13cache_storage13CreateTraceIdEv() #16
  %11 = load i8, i8* getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 23, i32 0), align 16
  %12 = and i8 %11, 25
  %13 = icmp eq i8 %12, 0
  br i1 %13, label %20, label %14, !prof !2

14:                                               ; preds = %3
  %15 = tail call i32 @_ZN4base14PlatformThread9CurrentIdEv() #16
  %16 = bitcast %"class.base::TimeTicks"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %16) #16
  %17 = getelementptr inbounds %"class.base::TimeTicks", %"class.base::TimeTicks"* %4, i64 0, i32 0, i32 0
  %18 = tail call i64 @_ZN4base6subtle28TimeTicksNowIgnoringOverrideEv() #16
  store i64 %18, i64* %17, align 8
  %19 = call i64 @_ZN20trace_event_internal37AddTraceEventWithThreadIdAndTimestampEcPKhPKcS3_yyiRKN4base9TimeTicksEPNS4_11trace_event14TraceArgumentsEj(i8 signext 88, i8* getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 23, i32 0), i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.3, i64 0, i64 0), i8* null, i64 0, i64 %10, i32 %15, %"class.base::TimeTicks"* nonnull dereferenceable(8) %4, %"class.base::trace_event::TraceArguments"* null, i32 4352) #16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16) #16
  br label %20

20:                                               ; preds = %3, %14
  %21 = phi i8* [ null, %3 ], [ getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 23, i32 0), %14 ]
  %22 = phi i8* [ inttoptr (i64 -6148914691236517206 to i8*), %3 ], [ getelementptr inbounds ([40 x i8], [40 x i8]* @.str.3, i64 0, i64 0), %14 ]
  %23 = phi i64 [ -6148914691236517206, %3 ], [ %19, %14 ]
  %24 = bitcast %"class.WTF::String"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %24) #16
  %25 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %5, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %25, align 8
  %26 = bitcast %"class.blink::mojom::blink::CacheStorage"** %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %26) #16
  store %"class.blink::mojom::blink::CacheStorage"* null, %"class.blink::mojom::blink::CacheStorage"** %6, align 8
  %27 = bitcast %"class.crdtp::DispatchResponse"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %27) #16
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %27, i8 -86, i64 32, i1 false)
  %28 = getelementptr inbounds %"class.blink::InspectorCacheStorageAgent", %"class.blink::InspectorCacheStorageAgent"* %0, i64 0, i32 1, i32 0, i32 0
  %29 = load %"class.blink::InspectedFrames"*, %"class.blink::InspectedFrames"** %28, align 8
  %30 = getelementptr inbounds %"class.blink::InspectorCacheStorageAgent", %"class.blink::InspectorCacheStorageAgent"* %0, i64 0, i32 2
  call fastcc void @_ZN5blink12_GLOBAL__N_130AssertCacheStorageAndNameForIdERKN3WTF6StringEPNS_15InspectedFramesEPS2_PNS1_7HashMapIS2_N4mojo6RemoteINS_5mojom5blink12CacheStorageEEENS1_10StringHashENS1_10HashTraitsIS2_EENSG_ISE_EENS1_18PartitionAllocatorEEEPPSD_(%"class.crdtp::DispatchResponse"* nonnull sret %7, %"class.WTF::String"* dereferenceable(8) %1, %"class.blink::InspectedFrames"* %29, %"class.WTF::String"* nonnull %5, %"class.WTF::HashMap.239"* %30, %"class.blink::mojom::blink::CacheStorage"** nonnull %6)
  %31 = getelementptr inbounds %"class.crdtp::DispatchResponse", %"class.crdtp::DispatchResponse"* %7, i64 0, i32 0
  %32 = load i32, i32* %31, align 8
  %33 = icmp eq i32 %32, 1
  br i1 %33, label %39, label %34

34:                                               ; preds = %20
  %35 = bitcast %"class.blink::protocol::CacheStorage::Backend::DeleteCacheCallback"* %2 to void (%"class.blink::protocol::CacheStorage::Backend::DeleteCacheCallback"*, %"class.crdtp::DispatchResponse"*)***
  %36 = load void (%"class.blink::protocol::CacheStorage::Backend::DeleteCacheCallback"*, %"class.crdtp::DispatchResponse"*)**, void (%"class.blink::protocol::CacheStorage::Backend::DeleteCacheCallback"*, %"class.crdtp::DispatchResponse"*)*** %35, align 8
  %37 = getelementptr inbounds void (%"class.blink::protocol::CacheStorage::Backend::DeleteCacheCallback"*, %"class.crdtp::DispatchResponse"*)*, void (%"class.blink::protocol::CacheStorage::Backend::DeleteCacheCallback"*, %"class.crdtp::DispatchResponse"*)** %36, i64 1
  %38 = load void (%"class.blink::protocol::CacheStorage::Backend::DeleteCacheCallback"*, %"class.crdtp::DispatchResponse"*)*, void (%"class.blink::protocol::CacheStorage::Backend::DeleteCacheCallback"*, %"class.crdtp::DispatchResponse"*)** %37, align 8
  call void %38(%"class.blink::protocol::CacheStorage::Backend::DeleteCacheCallback"* %2, %"class.crdtp::DispatchResponse"* nonnull dereferenceable(32) %7) #16
  br label %51

39:                                               ; preds = %20
  %40 = load %"class.blink::mojom::blink::CacheStorage"*, %"class.blink::mojom::blink::CacheStorage"** %6, align 8
  %41 = call i8* @_Znwm(i64 48) #18, !noalias !32
  %42 = bitcast i8* %41 to %"class.base::internal::BindStateBase"*
  call void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_E(%"class.base::internal::BindStateBase"* nonnull %42, void ()* bitcast (void (%"class.base::internal::BindStateBase"*, i32)* @"_ZN4base8internal7InvokerINS0_9BindStateIZN5blink26InspectorCacheStorageAgent11deleteCacheERKN3WTF6StringENSt3__110unique_ptrINS3_8protocol12CacheStorage7Backend19DeleteCacheCallbackENS9_14default_deleteISE_EEEEE3$_2JSH_EEEFvNS3_5mojom17CacheStorageErrorEEE7RunOnceEPNS0_13BindStateBaseESL_" to void ()*), void (%"class.base::internal::BindStateBase"*)* nonnull @"_ZN4base8internal9BindStateIZN5blink26InspectorCacheStorageAgent11deleteCacheERKN3WTF6StringENSt3__110unique_ptrINS2_8protocol12CacheStorage7Backend19DeleteCacheCallbackENS8_14default_deleteISD_EEEEE3$_2JSG_EE7DestroyEPKNS0_13BindStateBaseE") #16, !noalias !32
  %43 = getelementptr inbounds i8, i8* %41, i64 40
  %44 = bitcast i8* %43 to i64*
  store i64 %9, i64* %44, align 8, !noalias !32
  %45 = bitcast %"class.base::OnceCallback.1946"* %8 to i8**
  store i8* %41, i8** %45, align 8, !alias.scope !32
  %46 = bitcast %"class.blink::mojom::blink::CacheStorage"* %40 to void (%"class.blink::mojom::blink::CacheStorage"*, %"class.WTF::String"*, i64, %"class.base::OnceCallback.1946"*)***
  %47 = load void (%"class.blink::mojom::blink::CacheStorage"*, %"class.WTF::String"*, i64, %"class.base::OnceCallback.1946"*)**, void (%"class.blink::mojom::blink::CacheStorage"*, %"class.WTF::String"*, i64, %"class.base::OnceCallback.1946"*)*** %46, align 8
  %48 = getelementptr inbounds void (%"class.blink::mojom::blink::CacheStorage"*, %"class.WTF::String"*, i64, %"class.base::OnceCallback.1946"*)*, void (%"class.blink::mojom::blink::CacheStorage"*, %"class.WTF::String"*, i64, %"class.base::OnceCallback.1946"*)** %47, i64 3
  %49 = load void (%"class.blink::mojom::blink::CacheStorage"*, %"class.WTF::String"*, i64, %"class.base::OnceCallback.1946"*)*, void (%"class.blink::mojom::blink::CacheStorage"*, %"class.WTF::String"*, i64, %"class.base::OnceCallback.1946"*)** %48, align 8
  call void %49(%"class.blink::mojom::blink::CacheStorage"* %40, %"class.WTF::String"* nonnull dereferenceable(8) %5, i64 %10, %"class.base::OnceCallback.1946"* nonnull %8) #16
  %50 = getelementptr inbounds %"class.base::OnceCallback.1946", %"class.base::OnceCallback.1946"* %8, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %50) #16
  br label %51

51:                                               ; preds = %39, %34
  %52 = phi %"class.blink::protocol::CacheStorage::Backend::DeleteCacheCallback"* [ null, %39 ], [ %2, %34 ]
  %53 = getelementptr inbounds %"class.crdtp::DispatchResponse", %"class.crdtp::DispatchResponse"* %7, i64 0, i32 1
  %54 = bitcast %"class.std::__1::basic_string"* %53 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %55 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %54, i64 0, i32 1, i32 0
  %56 = load i8, i8* %55, align 1
  %57 = icmp slt i8 %56, 0
  br i1 %57, label %58, label %61

58:                                               ; preds = %51
  %59 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %53, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %60 = load i8*, i8** %59, align 8
  call void @_ZdlPv(i8* %60) #18
  br label %61

61:                                               ; preds = %51, %58
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %27) #16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %26) #16
  %62 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %25, align 8
  %63 = icmp eq %"class.WTF::StringImpl"* %62, null
  br i1 %63, label %77, label %64

64:                                               ; preds = %61
  %65 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %62, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %66 = load atomic i32, i32* %65 monotonic, align 4
  %67 = and i32 %66, 2
  %68 = icmp eq i32 %67, 0
  %69 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %62, i64 0, i32 0
  %70 = load i32, i32* %69, align 4
  br i1 %68, label %71, label %73

71:                                               ; preds = %64
  %72 = add i32 %70, -1
  store i32 %72, i32* %69, align 4
  br label %73

73:                                               ; preds = %71, %64
  %74 = phi i32 [ %72, %71 ], [ %70, %64 ]
  %75 = icmp eq i32 %74, 0
  br i1 %75, label %76, label %77

76:                                               ; preds = %73
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %62) #16
  br label %77

77:                                               ; preds = %61, %73, %76
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %24) #16
  %78 = icmp eq i8* %21, null
  br i1 %78, label %83, label %79

79:                                               ; preds = %77
  %80 = load i8, i8* %21, align 1
  %81 = icmp eq i8 %80, 0
  br i1 %81, label %83, label %82

82:                                               ; preds = %79
  call void @_ZN20trace_event_internal24UpdateTraceEventDurationEPKhPKcN4base11trace_event16TraceEventHandleE(i8* nonnull %21, i8* %22, i64 %23) #16
  br label %83

83:                                               ; preds = %77, %79, %82
  %84 = icmp eq %"class.blink::protocol::CacheStorage::Backend::DeleteCacheCallback"* %52, null
  br i1 %84, label %90, label %85

85:                                               ; preds = %83
  %86 = bitcast %"class.blink::protocol::CacheStorage::Backend::DeleteCacheCallback"* %52 to void (%"class.blink::protocol::CacheStorage::Backend::DeleteCacheCallback"*)***
  %87 = load void (%"class.blink::protocol::CacheStorage::Backend::DeleteCacheCallback"*)**, void (%"class.blink::protocol::CacheStorage::Backend::DeleteCacheCallback"*)*** %86, align 8
  %88 = getelementptr inbounds void (%"class.blink::protocol::CacheStorage::Backend::DeleteCacheCallback"*)*, void (%"class.blink::protocol::CacheStorage::Backend::DeleteCacheCallback"*)** %87, i64 4
  %89 = load void (%"class.blink::protocol::CacheStorage::Backend::DeleteCacheCallback"*)*, void (%"class.blink::protocol::CacheStorage::Backend::DeleteCacheCallback"*)** %88, align 8
  call void %89(%"class.blink::protocol::CacheStorage::Backend::DeleteCacheCallback"* nonnull %52) #16
  br label %90

90:                                               ; preds = %83, %85
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn8_N5blink26InspectorCacheStorageAgent11deleteCacheERKN3WTF6StringENSt3__110unique_ptrINS_8protocol12CacheStorage7Backend19DeleteCacheCallbackENS5_14default_deleteISA_EEEE(%"class.blink::InspectorCacheStorageAgent"*, %"class.WTF::String"* dereferenceable(8), %"class.blink::protocol::CacheStorage::Backend::DeleteCacheCallback"*) unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.blink::InspectorCacheStorageAgent", %"class.blink::InspectorCacheStorageAgent"* %0, i64 -1, i32 2, i32 0, i32 3
  %5 = bitcast i32* %4 to %"class.blink::InspectorCacheStorageAgent"*
  tail call void @_ZN5blink26InspectorCacheStorageAgent11deleteCacheERKN3WTF6StringENSt3__110unique_ptrINS_8protocol12CacheStorage7Backend19DeleteCacheCallbackENS5_14default_deleteISA_EEEE(%"class.blink::InspectorCacheStorageAgent"* %5, %"class.WTF::String"* dereferenceable(8) %1, %"class.blink::protocol::CacheStorage::Backend::DeleteCacheCallback"* %2)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink26InspectorCacheStorageAgent11deleteEntryERKN3WTF6StringES4_NSt3__110unique_ptrINS_8protocol12CacheStorage7Backend19DeleteEntryCallbackENS5_14default_deleteISA_EEEE(%"class.blink::InspectorCacheStorageAgent"*, %"class.WTF::String"* dereferenceable(8), %"class.WTF::String"* nocapture readonly dereferenceable(8), %"class.blink::protocol::CacheStorage::Backend::DeleteEntryCallback"*) unnamed_addr #0 align 2 {
  %5 = alloca %"class.base::TimeTicks", align 8
  %6 = alloca %"class.WTF::String", align 8
  %7 = alloca %"class.blink::mojom::blink::CacheStorage"*, align 8
  %8 = alloca %"class.crdtp::DispatchResponse", align 8
  %9 = alloca %"class.base::OnceCallback.1937", align 8
  %10 = ptrtoint %"class.blink::protocol::CacheStorage::Backend::DeleteEntryCallback"* %3 to i64
  %11 = tail call i64 @_ZN5blink13cache_storage13CreateTraceIdEv() #16
  %12 = load i8, i8* getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 23, i32 0), align 16
  %13 = and i8 %12, 25
  %14 = icmp eq i8 %13, 0
  br i1 %14, label %21, label %15, !prof !2

15:                                               ; preds = %4
  %16 = tail call i32 @_ZN4base14PlatformThread9CurrentIdEv() #16
  %17 = bitcast %"class.base::TimeTicks"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #16
  %18 = getelementptr inbounds %"class.base::TimeTicks", %"class.base::TimeTicks"* %5, i64 0, i32 0, i32 0
  %19 = tail call i64 @_ZN4base6subtle28TimeTicksNowIgnoringOverrideEv() #16
  store i64 %19, i64* %18, align 8
  %20 = call i64 @_ZN20trace_event_internal37AddTraceEventWithThreadIdAndTimestampEcPKhPKcS3_yyiRKN4base9TimeTicksEPNS4_11trace_event14TraceArgumentsEj(i8 signext 88, i8* getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 23, i32 0), i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.4, i64 0, i64 0), i8* null, i64 0, i64 %11, i32 %16, %"class.base::TimeTicks"* nonnull dereferenceable(8) %5, %"class.base::trace_event::TraceArguments"* null, i32 4352) #16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #16
  br label %21

21:                                               ; preds = %4, %15
  %22 = phi i8* [ null, %4 ], [ getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 23, i32 0), %15 ]
  %23 = phi i8* [ inttoptr (i64 -6148914691236517206 to i8*), %4 ], [ getelementptr inbounds ([40 x i8], [40 x i8]* @.str.4, i64 0, i64 0), %15 ]
  %24 = phi i64 [ -6148914691236517206, %4 ], [ %20, %15 ]
  %25 = bitcast %"class.WTF::String"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %25) #16
  %26 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %6, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %26, align 8
  %27 = bitcast %"class.blink::mojom::blink::CacheStorage"** %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %27) #16
  store %"class.blink::mojom::blink::CacheStorage"* null, %"class.blink::mojom::blink::CacheStorage"** %7, align 8
  %28 = bitcast %"class.crdtp::DispatchResponse"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %28) #16
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %28, i8 -86, i64 32, i1 false)
  %29 = getelementptr inbounds %"class.blink::InspectorCacheStorageAgent", %"class.blink::InspectorCacheStorageAgent"* %0, i64 0, i32 1, i32 0, i32 0
  %30 = load %"class.blink::InspectedFrames"*, %"class.blink::InspectedFrames"** %29, align 8
  %31 = getelementptr inbounds %"class.blink::InspectorCacheStorageAgent", %"class.blink::InspectorCacheStorageAgent"* %0, i64 0, i32 2
  call fastcc void @_ZN5blink12_GLOBAL__N_130AssertCacheStorageAndNameForIdERKN3WTF6StringEPNS_15InspectedFramesEPS2_PNS1_7HashMapIS2_N4mojo6RemoteINS_5mojom5blink12CacheStorageEEENS1_10StringHashENS1_10HashTraitsIS2_EENSG_ISE_EENS1_18PartitionAllocatorEEEPPSD_(%"class.crdtp::DispatchResponse"* nonnull sret %8, %"class.WTF::String"* dereferenceable(8) %1, %"class.blink::InspectedFrames"* %30, %"class.WTF::String"* nonnull %6, %"class.WTF::HashMap.239"* %31, %"class.blink::mojom::blink::CacheStorage"** nonnull %7)
  %32 = getelementptr inbounds %"class.crdtp::DispatchResponse", %"class.crdtp::DispatchResponse"* %8, i64 0, i32 0
  %33 = load i32, i32* %32, align 8
  %34 = icmp eq i32 %33, 1
  br i1 %34, label %40, label %35

35:                                               ; preds = %21
  %36 = bitcast %"class.blink::protocol::CacheStorage::Backend::DeleteEntryCallback"* %3 to void (%"class.blink::protocol::CacheStorage::Backend::DeleteEntryCallback"*, %"class.crdtp::DispatchResponse"*)***
  %37 = load void (%"class.blink::protocol::CacheStorage::Backend::DeleteEntryCallback"*, %"class.crdtp::DispatchResponse"*)**, void (%"class.blink::protocol::CacheStorage::Backend::DeleteEntryCallback"*, %"class.crdtp::DispatchResponse"*)*** %36, align 8
  %38 = getelementptr inbounds void (%"class.blink::protocol::CacheStorage::Backend::DeleteEntryCallback"*, %"class.crdtp::DispatchResponse"*)*, void (%"class.blink::protocol::CacheStorage::Backend::DeleteEntryCallback"*, %"class.crdtp::DispatchResponse"*)** %37, i64 1
  %39 = load void (%"class.blink::protocol::CacheStorage::Backend::DeleteEntryCallback"*, %"class.crdtp::DispatchResponse"*)*, void (%"class.blink::protocol::CacheStorage::Backend::DeleteEntryCallback"*, %"class.crdtp::DispatchResponse"*)** %38, align 8
  call void %39(%"class.blink::protocol::CacheStorage::Backend::DeleteEntryCallback"* %3, %"class.crdtp::DispatchResponse"* nonnull dereferenceable(32) %8) #16
  br label %100

40:                                               ; preds = %21
  %41 = load %"class.blink::mojom::blink::CacheStorage"*, %"class.blink::mojom::blink::CacheStorage"** %7, align 8
  %42 = getelementptr inbounds %"class.base::OnceCallback.1937", %"class.base::OnceCallback.1937"* %9, i64 0, i32 0, i32 0, i32 0
  store %"class.base::internal::BindStateBase"* inttoptr (i64 -6148914691236517206 to %"class.base::internal::BindStateBase"*), %"class.base::internal::BindStateBase"** %42, align 8, !alias.scope !39
  %43 = call i8* @_Znwm(i64 72) #18, !noalias !42
  %44 = bitcast i8* %43 to %"class.base::internal::BindStateBase"*
  call void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_E(%"class.base::internal::BindStateBase"* nonnull %44, void ()* bitcast (void (%"class.base::internal::BindStateBase"*, %"class.mojo::StructPtr.2200"*)* @"_ZN4base8internal7InvokerINS0_9BindStateIZN5blink26InspectorCacheStorageAgent11deleteEntryERKN3WTF6StringES8_NSt3__110unique_ptrINS3_8protocol12CacheStorage7Backend19DeleteEntryCallbackENS9_14default_deleteISE_EEEEE3$_3JS6_S6_lSH_EEEFvN4mojo9StructPtrINS3_5mojom5blink10OpenResultEEEEE7RunOnceEPNS0_13BindStateBaseEOSP_" to void ()*), void (%"class.base::internal::BindStateBase"*)* nonnull @"_ZN4base8internal9BindStateIZN5blink26InspectorCacheStorageAgent11deleteEntryERKN3WTF6StringES7_NSt3__110unique_ptrINS2_8protocol12CacheStorage7Backend19DeleteEntryCallbackENS8_14default_deleteISD_EEEEE3$_3JS5_S5_lSG_EE7DestroyEPKNS0_13BindStateBaseE") #16, !noalias !42
  %45 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %26, align 8, !noalias !42
  %46 = getelementptr inbounds i8, i8* %43, i64 40
  %47 = bitcast i8* %46 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %45, %"class.WTF::StringImpl"** %47, align 8, !noalias !42
  %48 = icmp eq %"class.WTF::StringImpl"* %45, null
  br i1 %48, label %66, label %49

49:                                               ; preds = %40
  %50 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %45, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %51 = load atomic i32, i32* %50 monotonic, align 4, !noalias !42
  %52 = and i32 %51, 2
  %53 = icmp eq i32 %52, 0
  br i1 %53, label %54, label %66

54:                                               ; preds = %49
  %55 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %45, i64 0, i32 0
  %56 = load i32, i32* %55, align 4, !noalias !42
  %57 = zext i32 %56 to i33
  %58 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %57, i33 1) #16
  %59 = extractvalue { i33, i1 } %58, 1
  %60 = extractvalue { i33, i1 } %58, 0
  %61 = icmp slt i33 %60, 0
  %62 = or i1 %59, %61
  br i1 %62, label %63, label %64, !prof !3

63:                                               ; preds = %54
  call void @llvm.trap() #16, !noalias !42
  unreachable

64:                                               ; preds = %54
  %65 = trunc i33 %60 to i32
  store i32 %65, i32* %55, align 4, !noalias !42
  br label %66

66:                                               ; preds = %64, %49, %40
  %67 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %2, i64 0, i32 0, i32 0
  %68 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %67, align 8, !noalias !42
  %69 = getelementptr inbounds i8, i8* %43, i64 48
  %70 = bitcast i8* %69 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %68, %"class.WTF::StringImpl"** %70, align 8, !noalias !42
  %71 = icmp eq %"class.WTF::StringImpl"* %68, null
  br i1 %71, label %89, label %72

72:                                               ; preds = %66
  %73 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %68, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %74 = load atomic i32, i32* %73 monotonic, align 4, !noalias !42
  %75 = and i32 %74, 2
  %76 = icmp eq i32 %75, 0
  br i1 %76, label %77, label %89

77:                                               ; preds = %72
  %78 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %68, i64 0, i32 0
  %79 = load i32, i32* %78, align 4, !noalias !42
  %80 = zext i32 %79 to i33
  %81 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %80, i33 1) #16
  %82 = extractvalue { i33, i1 } %81, 1
  %83 = extractvalue { i33, i1 } %81, 0
  %84 = icmp slt i33 %83, 0
  %85 = or i1 %82, %84
  br i1 %85, label %86, label %87, !prof !3

86:                                               ; preds = %77
  call void @llvm.trap() #16, !noalias !42
  unreachable

87:                                               ; preds = %77
  %88 = trunc i33 %83 to i32
  store i32 %88, i32* %78, align 4, !noalias !42
  br label %89

89:                                               ; preds = %66, %72, %87
  %90 = getelementptr inbounds i8, i8* %43, i64 56
  %91 = bitcast i8* %90 to i64*
  store i64 %11, i64* %91, align 8, !noalias !42
  %92 = getelementptr inbounds i8, i8* %43, i64 64
  %93 = bitcast i8* %92 to i64*
  store i64 %10, i64* %93, align 8, !noalias !42
  %94 = bitcast %"class.base::OnceCallback.1937"* %9 to i8**
  store i8* %43, i8** %94, align 8, !alias.scope !42
  %95 = bitcast %"class.blink::mojom::blink::CacheStorage"* %41 to void (%"class.blink::mojom::blink::CacheStorage"*, %"class.WTF::String"*, i64, %"class.base::OnceCallback.1937"*)***
  %96 = load void (%"class.blink::mojom::blink::CacheStorage"*, %"class.WTF::String"*, i64, %"class.base::OnceCallback.1937"*)**, void (%"class.blink::mojom::blink::CacheStorage"*, %"class.WTF::String"*, i64, %"class.base::OnceCallback.1937"*)*** %95, align 8
  %97 = getelementptr inbounds void (%"class.blink::mojom::blink::CacheStorage"*, %"class.WTF::String"*, i64, %"class.base::OnceCallback.1937"*)*, void (%"class.blink::mojom::blink::CacheStorage"*, %"class.WTF::String"*, i64, %"class.base::OnceCallback.1937"*)** %96, i64 6
  %98 = load void (%"class.blink::mojom::blink::CacheStorage"*, %"class.WTF::String"*, i64, %"class.base::OnceCallback.1937"*)*, void (%"class.blink::mojom::blink::CacheStorage"*, %"class.WTF::String"*, i64, %"class.base::OnceCallback.1937"*)** %97, align 8
  call void %98(%"class.blink::mojom::blink::CacheStorage"* %41, %"class.WTF::String"* nonnull dereferenceable(8) %6, i64 %11, %"class.base::OnceCallback.1937"* nonnull %9) #16
  %99 = getelementptr inbounds %"class.base::OnceCallback.1937", %"class.base::OnceCallback.1937"* %9, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %99) #16
  br label %100

100:                                              ; preds = %89, %35
  %101 = phi %"class.blink::protocol::CacheStorage::Backend::DeleteEntryCallback"* [ null, %89 ], [ %3, %35 ]
  %102 = getelementptr inbounds %"class.crdtp::DispatchResponse", %"class.crdtp::DispatchResponse"* %8, i64 0, i32 1
  %103 = bitcast %"class.std::__1::basic_string"* %102 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %104 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %103, i64 0, i32 1, i32 0
  %105 = load i8, i8* %104, align 1
  %106 = icmp slt i8 %105, 0
  br i1 %106, label %107, label %110

107:                                              ; preds = %100
  %108 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %102, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %109 = load i8*, i8** %108, align 8
  call void @_ZdlPv(i8* %109) #18
  br label %110

110:                                              ; preds = %100, %107
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %28) #16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %27) #16
  %111 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %26, align 8
  %112 = icmp eq %"class.WTF::StringImpl"* %111, null
  br i1 %112, label %126, label %113

113:                                              ; preds = %110
  %114 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %111, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %115 = load atomic i32, i32* %114 monotonic, align 4
  %116 = and i32 %115, 2
  %117 = icmp eq i32 %116, 0
  %118 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %111, i64 0, i32 0
  %119 = load i32, i32* %118, align 4
  br i1 %117, label %120, label %122

120:                                              ; preds = %113
  %121 = add i32 %119, -1
  store i32 %121, i32* %118, align 4
  br label %122

122:                                              ; preds = %120, %113
  %123 = phi i32 [ %121, %120 ], [ %119, %113 ]
  %124 = icmp eq i32 %123, 0
  br i1 %124, label %125, label %126

125:                                              ; preds = %122
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %111) #16
  br label %126

126:                                              ; preds = %110, %122, %125
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %25) #16
  %127 = icmp eq i8* %22, null
  br i1 %127, label %132, label %128

128:                                              ; preds = %126
  %129 = load i8, i8* %22, align 1
  %130 = icmp eq i8 %129, 0
  br i1 %130, label %132, label %131

131:                                              ; preds = %128
  call void @_ZN20trace_event_internal24UpdateTraceEventDurationEPKhPKcN4base11trace_event16TraceEventHandleE(i8* nonnull %22, i8* %23, i64 %24) #16
  br label %132

132:                                              ; preds = %126, %128, %131
  %133 = icmp eq %"class.blink::protocol::CacheStorage::Backend::DeleteEntryCallback"* %101, null
  br i1 %133, label %139, label %134

134:                                              ; preds = %132
  %135 = bitcast %"class.blink::protocol::CacheStorage::Backend::DeleteEntryCallback"* %101 to void (%"class.blink::protocol::CacheStorage::Backend::DeleteEntryCallback"*)***
  %136 = load void (%"class.blink::protocol::CacheStorage::Backend::DeleteEntryCallback"*)**, void (%"class.blink::protocol::CacheStorage::Backend::DeleteEntryCallback"*)*** %135, align 8
  %137 = getelementptr inbounds void (%"class.blink::protocol::CacheStorage::Backend::DeleteEntryCallback"*)*, void (%"class.blink::protocol::CacheStorage::Backend::DeleteEntryCallback"*)** %136, i64 4
  %138 = load void (%"class.blink::protocol::CacheStorage::Backend::DeleteEntryCallback"*)*, void (%"class.blink::protocol::CacheStorage::Backend::DeleteEntryCallback"*)** %137, align 8
  call void %138(%"class.blink::protocol::CacheStorage::Backend::DeleteEntryCallback"* nonnull %101) #16
  br label %139

139:                                              ; preds = %132, %134
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn8_N5blink26InspectorCacheStorageAgent11deleteEntryERKN3WTF6StringES4_NSt3__110unique_ptrINS_8protocol12CacheStorage7Backend19DeleteEntryCallbackENS5_14default_deleteISA_EEEE(%"class.blink::InspectorCacheStorageAgent"*, %"class.WTF::String"* dereferenceable(8), %"class.WTF::String"* nocapture readonly dereferenceable(8), %"class.blink::protocol::CacheStorage::Backend::DeleteEntryCallback"*) unnamed_addr #0 align 2 {
  %5 = getelementptr inbounds %"class.blink::InspectorCacheStorageAgent", %"class.blink::InspectorCacheStorageAgent"* %0, i64 -1, i32 2, i32 0, i32 3
  %6 = bitcast i32* %5 to %"class.blink::InspectorCacheStorageAgent"*
  tail call void @_ZN5blink26InspectorCacheStorageAgent11deleteEntryERKN3WTF6StringES4_NSt3__110unique_ptrINS_8protocol12CacheStorage7Backend19DeleteEntryCallbackENS5_14default_deleteISA_EEEE(%"class.blink::InspectorCacheStorageAgent"* %6, %"class.WTF::String"* dereferenceable(8) %1, %"class.WTF::String"* dereferenceable(8) %2, %"class.blink::protocol::CacheStorage::Backend::DeleteEntryCallback"* %3)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink26InspectorCacheStorageAgent21requestCachedResponseERKN3WTF6StringES4_NSt3__110unique_ptrINS5_6vectorINS6_INS_8protocol12CacheStorage6HeaderENS5_14default_deleteISA_EEEENS5_9allocatorISD_EEEENSB_ISG_EEEENS6_INS9_7Backend29RequestCachedResponseCallbackENSB_ISK_EEEE(%"class.blink::InspectorCacheStorageAgent"*, %"class.WTF::String"* dereferenceable(8), %"class.WTF::String"* dereferenceable(8), %"class.std::__1::vector.1960"*, %"class.blink::protocol::CacheStorage::Backend::RequestCachedResponseCallback"*) unnamed_addr #0 align 2 {
  %6 = alloca %"class.blink::mojom::blink::CacheQueryOptions", align 1
  %7 = alloca %"class.base::TimeTicks", align 8
  %8 = alloca %"class.WTF::String", align 8
  %9 = alloca %"class.blink::mojom::blink::CacheStorage"*, align 8
  %10 = alloca %"class.crdtp::DispatchResponse", align 8
  %11 = alloca %"class.blink::KURL", align 8
  %12 = alloca %"class.WTF::String", align 8
  %13 = alloca %"class.WTF::String", align 8
  %14 = alloca %"class.WTF::String", align 8
  %15 = alloca %"class.mojo::InlinedStructPtr.2014", align 4
  %16 = alloca %"class.mojo::StructPtr.1985", align 8
  %17 = alloca %"class.mojo::StructPtr.2010", align 8
  %18 = alloca %"class.base::OnceCallback.2018", align 8
  %19 = ptrtoint %"class.blink::protocol::CacheStorage::Backend::RequestCachedResponseCallback"* %4 to i64
  %20 = tail call i64 @_ZN5blink13cache_storage13CreateTraceIdEv() #16
  %21 = load i8, i8* getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 23, i32 0), align 16
  %22 = and i8 %21, 25
  %23 = icmp eq i8 %22, 0
  br i1 %23, label %30, label %24, !prof !2

24:                                               ; preds = %5
  %25 = tail call i32 @_ZN4base14PlatformThread9CurrentIdEv() #16
  %26 = bitcast %"class.base::TimeTicks"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %26) #16
  %27 = getelementptr inbounds %"class.base::TimeTicks", %"class.base::TimeTicks"* %7, i64 0, i32 0, i32 0
  %28 = tail call i64 @_ZN4base6subtle28TimeTicksNowIgnoringOverrideEv() #16
  store i64 %28, i64* %27, align 8
  %29 = call i64 @_ZN20trace_event_internal37AddTraceEventWithThreadIdAndTimestampEcPKhPKcS3_yyiRKN4base9TimeTicksEPNS4_11trace_event14TraceArgumentsEj(i8 signext 88, i8* getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 23, i32 0), i8* getelementptr inbounds ([50 x i8], [50 x i8]* @.str.5, i64 0, i64 0), i8* null, i64 0, i64 %20, i32 %25, %"class.base::TimeTicks"* nonnull dereferenceable(8) %7, %"class.base::trace_event::TraceArguments"* null, i32 4352) #16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %26) #16
  br label %30

30:                                               ; preds = %5, %24
  %31 = phi i8* [ null, %5 ], [ getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 23, i32 0), %24 ]
  %32 = phi i8* [ inttoptr (i64 -6148914691236517206 to i8*), %5 ], [ getelementptr inbounds ([50 x i8], [50 x i8]* @.str.5, i64 0, i64 0), %24 ]
  %33 = phi i64 [ -6148914691236517206, %5 ], [ %29, %24 ]
  %34 = bitcast %"class.WTF::String"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %34) #16
  %35 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %8, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %35, align 8
  %36 = bitcast %"class.blink::mojom::blink::CacheStorage"** %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %36) #16
  store %"class.blink::mojom::blink::CacheStorage"* null, %"class.blink::mojom::blink::CacheStorage"** %9, align 8
  %37 = bitcast %"class.crdtp::DispatchResponse"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %37) #16
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %37, i8 -86, i64 32, i1 false)
  %38 = getelementptr inbounds %"class.blink::InspectorCacheStorageAgent", %"class.blink::InspectorCacheStorageAgent"* %0, i64 0, i32 1, i32 0, i32 0
  %39 = load %"class.blink::InspectedFrames"*, %"class.blink::InspectedFrames"** %38, align 8
  %40 = getelementptr inbounds %"class.blink::InspectorCacheStorageAgent", %"class.blink::InspectorCacheStorageAgent"* %0, i64 0, i32 2
  call fastcc void @_ZN5blink12_GLOBAL__N_130AssertCacheStorageAndNameForIdERKN3WTF6StringEPNS_15InspectedFramesEPS2_PNS1_7HashMapIS2_N4mojo6RemoteINS_5mojom5blink12CacheStorageEEENS1_10StringHashENS1_10HashTraitsIS2_EENSG_ISE_EENS1_18PartitionAllocatorEEEPPSD_(%"class.crdtp::DispatchResponse"* nonnull sret %10, %"class.WTF::String"* dereferenceable(8) %1, %"class.blink::InspectedFrames"* %39, %"class.WTF::String"* nonnull %8, %"class.WTF::HashMap.239"* %40, %"class.blink::mojom::blink::CacheStorage"** nonnull %9)
  %41 = getelementptr inbounds %"class.crdtp::DispatchResponse", %"class.crdtp::DispatchResponse"* %10, i64 0, i32 0
  %42 = load i32, i32* %41, align 8
  %43 = icmp eq i32 %42, 1
  br i1 %43, label %49, label %44

44:                                               ; preds = %30
  %45 = bitcast %"class.blink::protocol::CacheStorage::Backend::RequestCachedResponseCallback"* %4 to void (%"class.blink::protocol::CacheStorage::Backend::RequestCachedResponseCallback"*, %"class.crdtp::DispatchResponse"*)***
  %46 = load void (%"class.blink::protocol::CacheStorage::Backend::RequestCachedResponseCallback"*, %"class.crdtp::DispatchResponse"*)**, void (%"class.blink::protocol::CacheStorage::Backend::RequestCachedResponseCallback"*, %"class.crdtp::DispatchResponse"*)*** %45, align 8
  %47 = getelementptr inbounds void (%"class.blink::protocol::CacheStorage::Backend::RequestCachedResponseCallback"*, %"class.crdtp::DispatchResponse"*)*, void (%"class.blink::protocol::CacheStorage::Backend::RequestCachedResponseCallback"*, %"class.crdtp::DispatchResponse"*)** %46, i64 1
  %48 = load void (%"class.blink::protocol::CacheStorage::Backend::RequestCachedResponseCallback"*, %"class.crdtp::DispatchResponse"*)*, void (%"class.blink::protocol::CacheStorage::Backend::RequestCachedResponseCallback"*, %"class.crdtp::DispatchResponse"*)** %47, align 8
  call void %48(%"class.blink::protocol::CacheStorage::Backend::RequestCachedResponseCallback"* %4, %"class.crdtp::DispatchResponse"* nonnull dereferenceable(32) %10) #16
  br label %267

49:                                               ; preds = %30
  %50 = call i8* @_Znwm(i64 264) #18, !noalias !47
  %51 = bitcast i8* %50 to %"class.blink::mojom::blink::FetchAPIRequest"*
  call void @_ZN5blink5mojom5blink15FetchAPIRequestC1Ev(%"class.blink::mojom::blink::FetchAPIRequest"* nonnull %51) #16, !noalias !47
  %52 = ptrtoint i8* %50 to i64
  %53 = getelementptr inbounds %"class.blink::KURL", %"class.blink::KURL"* %11, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 112, i8* nonnull %53) #16
  call void @_ZN5blink4KURLC1ERKN3WTF6StringE(%"class.blink::KURL"* nonnull %11, %"class.WTF::String"* dereferenceable(8) %2) #16
  %54 = getelementptr inbounds i8, i8* %50, i64 16
  %55 = bitcast i8* %54 to %"class.blink::KURL"*
  %56 = call dereferenceable(112) %"class.blink::KURL"* @_ZN5blink4KURLaSERKS0_(%"class.blink::KURL"* %55, %"class.blink::KURL"* nonnull dereferenceable(112) %11) #16
  call void @_ZN5blink4KURLD1Ev(%"class.blink::KURL"* nonnull %11) #16
  call void @llvm.lifetime.end.p0i8(i64 112, i8* nonnull %53) #16
  %57 = bitcast %"class.WTF::String"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %57) #16
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %12, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.6, i64 0, i64 0), i64 3) #16
  %58 = getelementptr inbounds i8, i8* %50, i64 128
  %59 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %12, i64 0, i32 0, i32 0
  %60 = bitcast %"class.WTF::String"* %12 to i64*
  %61 = load i64, i64* %60, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %59, align 8
  %62 = bitcast i8* %58 to i64*
  %63 = bitcast i8* %58 to %"class.WTF::StringImpl"**
  %64 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %63, align 8
  store i64 %61, i64* %62, align 8
  %65 = icmp eq %"class.WTF::StringImpl"* %64, null
  br i1 %65, label %79, label %66

66:                                               ; preds = %49
  %67 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %64, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %68 = load atomic i32, i32* %67 monotonic, align 4
  %69 = and i32 %68, 2
  %70 = icmp eq i32 %69, 0
  %71 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %64, i64 0, i32 0
  %72 = load i32, i32* %71, align 4
  br i1 %70, label %73, label %75

73:                                               ; preds = %66
  %74 = add i32 %72, -1
  store i32 %74, i32* %71, align 4
  br label %75

75:                                               ; preds = %73, %66
  %76 = phi i32 [ %74, %73 ], [ %72, %66 ]
  %77 = icmp eq i32 %76, 0
  br i1 %77, label %78, label %79

78:                                               ; preds = %75
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %64) #16
  br label %79

79:                                               ; preds = %49, %75, %78
  %80 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %59, align 8
  %81 = icmp eq %"class.WTF::StringImpl"* %80, null
  br i1 %81, label %95, label %82

82:                                               ; preds = %79
  %83 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %80, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %84 = load atomic i32, i32* %83 monotonic, align 4
  %85 = and i32 %84, 2
  %86 = icmp eq i32 %85, 0
  %87 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %80, i64 0, i32 0
  %88 = load i32, i32* %87, align 4
  br i1 %86, label %89, label %91

89:                                               ; preds = %82
  %90 = add i32 %88, -1
  store i32 %90, i32* %87, align 4
  br label %91

91:                                               ; preds = %89, %82
  %92 = phi i32 [ %90, %89 ], [ %88, %82 ]
  %93 = icmp eq i32 %92, 0
  br i1 %93, label %94, label %95

94:                                               ; preds = %91
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %80) #16
  br label %95

95:                                               ; preds = %79, %91, %94
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %57) #16
  %96 = getelementptr inbounds %"class.std::__1::vector.1960", %"class.std::__1::vector.1960"* %3, i64 0, i32 0, i32 0
  %97 = load %"class.std::__1::unique_ptr.1962"*, %"class.std::__1::unique_ptr.1962"** %96, align 8
  %98 = getelementptr inbounds %"class.std::__1::vector.1960", %"class.std::__1::vector.1960"* %3, i64 0, i32 0, i32 1
  %99 = load %"class.std::__1::unique_ptr.1962"*, %"class.std::__1::unique_ptr.1962"** %98, align 8
  %100 = icmp eq %"class.std::__1::unique_ptr.1962"* %97, %99
  br i1 %100, label %108, label %101

101:                                              ; preds = %95
  %102 = getelementptr inbounds i8, i8* %50, i64 136
  %103 = bitcast %"class.WTF::String"* %13 to i8*
  %104 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %13, i64 0, i32 0, i32 0
  %105 = bitcast %"class.WTF::String"* %14 to i8*
  %106 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %14, i64 0, i32 0, i32 0
  %107 = bitcast i8* %102 to %"class.WTF::HashTable.1990"*
  br label %185

108:                                              ; preds = %264, %95
  %109 = call i8* @_Znwm(i64 16) #18, !noalias !50
  %110 = bitcast i8* %109 to %"class.blink::mojom::blink::MultiCacheQueryOptions"*
  call void @_ZN5blink5mojom5blink22MultiCacheQueryOptionsC1Ev(%"class.blink::mojom::blink::MultiCacheQueryOptions"* nonnull %110) #16, !noalias !50
  %111 = ptrtoint i8* %109 to i64
  %112 = getelementptr inbounds %"class.mojo::InlinedStructPtr.2014", %"class.mojo::InlinedStructPtr.2014"* %15, i64 0, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %112) #16
  %113 = getelementptr inbounds %"class.mojo::InlinedStructPtr.2014", %"class.mojo::InlinedStructPtr.2014"* %15, i64 0, i32 0
  call void @_ZN5blink5mojom5blink17CacheQueryOptionsC1Ev(%"class.blink::mojom::blink::CacheQueryOptions"* nonnull %113) #16
  %114 = getelementptr inbounds %"class.mojo::InlinedStructPtr.2014", %"class.mojo::InlinedStructPtr.2014"* %15, i64 0, i32 1
  store i32 1, i32* %114, align 4, !alias.scope !53
  %115 = getelementptr inbounds i8, i8* %109, i64 4
  %116 = bitcast i8* %115 to i32*
  store i32 0, i32* %116, align 4
  %117 = bitcast i8* %109 to %"class.blink::mojom::blink::CacheQueryOptions"*
  call void @_ZN5blink5mojom5blink17CacheQueryOptionsD1Ev(%"class.blink::mojom::blink::CacheQueryOptions"* nonnull %117) #16
  call void @_ZN5blink5mojom5blink17CacheQueryOptionsC1Ev(%"class.blink::mojom::blink::CacheQueryOptions"* nonnull %117) #16
  %118 = getelementptr inbounds %"class.blink::mojom::blink::CacheQueryOptions", %"class.blink::mojom::blink::CacheQueryOptions"* %6, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 3, i8* nonnull %118) #16
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %118, i8* nonnull align 1 %109, i64 3, i1 false) #16
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %109, i8* nonnull align 4 %112, i64 3, i1 false) #16
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %112, i8* nonnull align 1 %118, i64 3, i1 false) #16
  call void @_ZN5blink5mojom5blink17CacheQueryOptionsD1Ev(%"class.blink::mojom::blink::CacheQueryOptions"* nonnull %6) #16
  call void @llvm.lifetime.end.p0i8(i64 3, i8* nonnull %118) #16
  %119 = load i32, i32* %116, align 4
  %120 = load i32, i32* %114, align 4
  store i32 %120, i32* %116, align 4
  store i32 %119, i32* %114, align 4
  call void @_ZN5blink5mojom5blink17CacheQueryOptionsD1Ev(%"class.blink::mojom::blink::CacheQueryOptions"* nonnull %113) #16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %112) #16
  %121 = getelementptr inbounds i8, i8* %109, i64 8
  %122 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %35, align 8
  %123 = icmp eq %"class.WTF::StringImpl"* %122, null
  br i1 %123, label %141, label %124

124:                                              ; preds = %108
  %125 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %122, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %126 = load atomic i32, i32* %125 monotonic, align 4
  %127 = and i32 %126, 2
  %128 = icmp eq i32 %127, 0
  br i1 %128, label %129, label %141

129:                                              ; preds = %124
  %130 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %122, i64 0, i32 0
  %131 = load i32, i32* %130, align 4
  %132 = zext i32 %131 to i33
  %133 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %132, i33 1) #16
  %134 = extractvalue { i33, i1 } %133, 1
  %135 = extractvalue { i33, i1 } %133, 0
  %136 = icmp slt i33 %135, 0
  %137 = or i1 %134, %136
  br i1 %137, label %138, label %139, !prof !3

138:                                              ; preds = %129
  call void @llvm.trap() #16
  unreachable

139:                                              ; preds = %129
  %140 = trunc i33 %135 to i32
  store i32 %140, i32* %130, align 4
  br label %141

141:                                              ; preds = %139, %124, %108
  %142 = ptrtoint %"class.WTF::StringImpl"* %122 to i64
  %143 = bitcast i8* %121 to i64*
  %144 = bitcast i8* %121 to %"class.WTF::StringImpl"**
  %145 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %144, align 8
  store i64 %142, i64* %143, align 8
  %146 = icmp eq %"class.WTF::StringImpl"* %145, null
  br i1 %146, label %160, label %147

147:                                              ; preds = %141
  %148 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %145, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %149 = load atomic i32, i32* %148 monotonic, align 4
  %150 = and i32 %149, 2
  %151 = icmp eq i32 %150, 0
  %152 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %145, i64 0, i32 0
  %153 = load i32, i32* %152, align 4
  br i1 %151, label %154, label %156

154:                                              ; preds = %147
  %155 = add i32 %153, -1
  store i32 %155, i32* %152, align 4
  br label %156

156:                                              ; preds = %154, %147
  %157 = phi i32 [ %155, %154 ], [ %153, %147 ]
  %158 = icmp eq i32 %157, 0
  br i1 %158, label %159, label %160

159:                                              ; preds = %156
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %145) #16
  br label %160

160:                                              ; preds = %141, %156, %159
  %161 = load %"class.blink::mojom::blink::CacheStorage"*, %"class.blink::mojom::blink::CacheStorage"** %9, align 8
  %162 = bitcast %"class.mojo::StructPtr.1985"* %16 to i64*
  %163 = getelementptr inbounds %"class.mojo::StructPtr.1985", %"class.mojo::StructPtr.1985"* %16, i64 0, i32 0, i32 0, i32 0, i32 0
  store i64 %52, i64* %162, align 8
  %164 = bitcast %"class.mojo::StructPtr.2010"* %17 to i64*
  %165 = getelementptr inbounds %"class.mojo::StructPtr.2010", %"class.mojo::StructPtr.2010"* %17, i64 0, i32 0, i32 0, i32 0, i32 0
  store i64 %111, i64* %164, align 8
  %166 = call i8* @_Znwm(i64 48) #18, !noalias !56
  %167 = bitcast i8* %166 to %"class.base::internal::BindStateBase"*
  call void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_E(%"class.base::internal::BindStateBase"* nonnull %167, void ()* bitcast (void (%"class.base::internal::BindStateBase"*, %"class.mojo::StructPtr.2303"*)* @"_ZN4base8internal7InvokerINS0_9BindStateIZN5blink26InspectorCacheStorageAgent21requestCachedResponseERKN3WTF6StringES8_NSt3__110unique_ptrINS9_6vectorINSA_INS3_8protocol12CacheStorage6HeaderENS9_14default_deleteISE_EEEENS9_9allocatorISH_EEEENSF_ISK_EEEENSA_INSD_7Backend29RequestCachedResponseCallbackENSF_ISO_EEEEE3$_4JSQ_EEEFvN4mojo9StructPtrINS3_5mojom5blink11MatchResultEEEEE7RunOnceEPNS0_13BindStateBaseEOSY_" to void ()*), void (%"class.base::internal::BindStateBase"*)* nonnull @"_ZN4base8internal9BindStateIZN5blink26InspectorCacheStorageAgent21requestCachedResponseERKN3WTF6StringES7_NSt3__110unique_ptrINS8_6vectorINS9_INS2_8protocol12CacheStorage6HeaderENS8_14default_deleteISD_EEEENS8_9allocatorISG_EEEENSE_ISJ_EEEENS9_INSC_7Backend29RequestCachedResponseCallbackENSE_ISN_EEEEE3$_4JSP_EE7DestroyEPKNS0_13BindStateBaseE") #16, !noalias !56
  %168 = getelementptr inbounds i8, i8* %166, i64 40
  %169 = bitcast i8* %168 to i64*
  store i64 %19, i64* %169, align 8, !noalias !56
  %170 = bitcast %"class.base::OnceCallback.2018"* %18 to i8**
  store i8* %166, i8** %170, align 8, !alias.scope !56
  %171 = bitcast %"class.blink::mojom::blink::CacheStorage"* %161 to void (%"class.blink::mojom::blink::CacheStorage"*, %"class.mojo::StructPtr.1985"*, %"class.mojo::StructPtr.2010"*, i1, i64, %"class.base::OnceCallback.2018"*)***
  %172 = load void (%"class.blink::mojom::blink::CacheStorage"*, %"class.mojo::StructPtr.1985"*, %"class.mojo::StructPtr.2010"*, i1, i64, %"class.base::OnceCallback.2018"*)**, void (%"class.blink::mojom::blink::CacheStorage"*, %"class.mojo::StructPtr.1985"*, %"class.mojo::StructPtr.2010"*, i1, i64, %"class.base::OnceCallback.2018"*)*** %171, align 8
  %173 = getelementptr inbounds void (%"class.blink::mojom::blink::CacheStorage"*, %"class.mojo::StructPtr.1985"*, %"class.mojo::StructPtr.2010"*, i1, i64, %"class.base::OnceCallback.2018"*)*, void (%"class.blink::mojom::blink::CacheStorage"*, %"class.mojo::StructPtr.1985"*, %"class.mojo::StructPtr.2010"*, i1, i64, %"class.base::OnceCallback.2018"*)** %172, i64 5
  %174 = load void (%"class.blink::mojom::blink::CacheStorage"*, %"class.mojo::StructPtr.1985"*, %"class.mojo::StructPtr.2010"*, i1, i64, %"class.base::OnceCallback.2018"*)*, void (%"class.blink::mojom::blink::CacheStorage"*, %"class.mojo::StructPtr.1985"*, %"class.mojo::StructPtr.2010"*, i1, i64, %"class.base::OnceCallback.2018"*)** %173, align 8
  call void %174(%"class.blink::mojom::blink::CacheStorage"* %161, %"class.mojo::StructPtr.1985"* nonnull %16, %"class.mojo::StructPtr.2010"* nonnull %17, i1 zeroext false, i64 %20, %"class.base::OnceCallback.2018"* nonnull %18) #16
  %175 = getelementptr inbounds %"class.base::OnceCallback.2018", %"class.base::OnceCallback.2018"* %18, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %175) #16
  %176 = load %"class.blink::mojom::blink::MultiCacheQueryOptions"*, %"class.blink::mojom::blink::MultiCacheQueryOptions"** %165, align 8
  store %"class.blink::mojom::blink::MultiCacheQueryOptions"* null, %"class.blink::mojom::blink::MultiCacheQueryOptions"** %165, align 8
  %177 = icmp eq %"class.blink::mojom::blink::MultiCacheQueryOptions"* %176, null
  br i1 %177, label %180, label %178

178:                                              ; preds = %160
  call void @_ZN5blink5mojom5blink22MultiCacheQueryOptionsD1Ev(%"class.blink::mojom::blink::MultiCacheQueryOptions"* nonnull %176) #16
  %179 = getelementptr inbounds %"class.blink::mojom::blink::MultiCacheQueryOptions", %"class.blink::mojom::blink::MultiCacheQueryOptions"* %176, i64 0, i32 0, i32 0, i32 0
  call void @_ZdlPv(i8* %179) #18
  br label %180

180:                                              ; preds = %160, %178
  %181 = load %"class.blink::mojom::blink::FetchAPIRequest"*, %"class.blink::mojom::blink::FetchAPIRequest"** %163, align 8
  store %"class.blink::mojom::blink::FetchAPIRequest"* null, %"class.blink::mojom::blink::FetchAPIRequest"** %163, align 8
  %182 = icmp eq %"class.blink::mojom::blink::FetchAPIRequest"* %181, null
  br i1 %182, label %267, label %183

183:                                              ; preds = %180
  call void @_ZN5blink5mojom5blink15FetchAPIRequestD1Ev(%"class.blink::mojom::blink::FetchAPIRequest"* nonnull %181) #16
  %184 = bitcast %"class.blink::mojom::blink::FetchAPIRequest"* %181 to i8*
  call void @_ZdlPv(i8* %184) #18
  br label %267

185:                                              ; preds = %101, %264
  %186 = phi %"class.std::__1::unique_ptr.1962"* [ %97, %101 ], [ %265, %264 ]
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %103) #16
  %187 = getelementptr inbounds %"class.std::__1::unique_ptr.1962", %"class.std::__1::unique_ptr.1962"* %186, i64 0, i32 0, i32 0, i32 0
  %188 = load %"class.blink::protocol::CacheStorage::Header"*, %"class.blink::protocol::CacheStorage::Header"** %187, align 8
  %189 = getelementptr inbounds %"class.blink::protocol::CacheStorage::Header", %"class.blink::protocol::CacheStorage::Header"* %188, i64 0, i32 1, i32 0, i32 0
  %190 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %189, align 8
  %191 = icmp eq %"class.WTF::StringImpl"* %190, null
  br i1 %191, label %209, label %192

192:                                              ; preds = %185
  %193 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %190, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %194 = load atomic i32, i32* %193 monotonic, align 4
  %195 = and i32 %194, 2
  %196 = icmp eq i32 %195, 0
  br i1 %196, label %197, label %209

197:                                              ; preds = %192
  %198 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %190, i64 0, i32 0
  %199 = load i32, i32* %198, align 4
  %200 = zext i32 %199 to i33
  %201 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %200, i33 1) #16
  %202 = extractvalue { i33, i1 } %201, 1
  %203 = extractvalue { i33, i1 } %201, 0
  %204 = icmp slt i33 %203, 0
  %205 = or i1 %202, %204
  br i1 %205, label %206, label %207, !prof !3

206:                                              ; preds = %197
  call void @llvm.trap() #16
  unreachable

207:                                              ; preds = %197
  %208 = trunc i33 %203 to i32
  store i32 %208, i32* %198, align 4
  br label %209

209:                                              ; preds = %185, %192, %207
  store %"class.WTF::StringImpl"* %190, %"class.WTF::StringImpl"** %104, align 8
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %105) #16
  %210 = load %"class.blink::protocol::CacheStorage::Header"*, %"class.blink::protocol::CacheStorage::Header"** %187, align 8
  %211 = getelementptr inbounds %"class.blink::protocol::CacheStorage::Header", %"class.blink::protocol::CacheStorage::Header"* %210, i64 0, i32 2, i32 0, i32 0
  %212 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %211, align 8
  %213 = icmp eq %"class.WTF::StringImpl"* %212, null
  br i1 %213, label %231, label %214

214:                                              ; preds = %209
  %215 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %212, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %216 = load atomic i32, i32* %215 monotonic, align 4
  %217 = and i32 %216, 2
  %218 = icmp eq i32 %217, 0
  br i1 %218, label %219, label %231

219:                                              ; preds = %214
  %220 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %212, i64 0, i32 0
  %221 = load i32, i32* %220, align 4
  %222 = zext i32 %221 to i33
  %223 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %222, i33 1) #16
  %224 = extractvalue { i33, i1 } %223, 1
  %225 = extractvalue { i33, i1 } %223, 0
  %226 = icmp slt i33 %225, 0
  %227 = or i1 %224, %226
  br i1 %227, label %228, label %229, !prof !3

228:                                              ; preds = %219
  call void @llvm.trap() #16
  unreachable

229:                                              ; preds = %219
  %230 = trunc i33 %225 to i32
  store i32 %230, i32* %220, align 4
  br label %231

231:                                              ; preds = %209, %214, %229
  store %"class.WTF::StringImpl"* %212, %"class.WTF::StringImpl"** %106, align 8
  %232 = call { %"struct.WTF::KeyValuePair.1993"*, i8 } @_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_S1_EENS_24KeyValuePairKeyExtractorENS_15CaseFoldingHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EES8_EES8_NS_18PartitionAllocatorEE6insertINS_17HashMapTranslatorIS9_S5_SA_EES1_S1_EENS_18HashTableAddResultISB_S3_EEOT0_OT1_(%"class.WTF::HashTable.1990"* %107, %"class.WTF::String"* nonnull dereferenceable(8) %13, %"class.WTF::String"* nonnull dereferenceable(8) %14) #16
  %233 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %106, align 8
  %234 = icmp eq %"class.WTF::StringImpl"* %233, null
  br i1 %234, label %248, label %235

235:                                              ; preds = %231
  %236 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %233, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %237 = load atomic i32, i32* %236 monotonic, align 4
  %238 = and i32 %237, 2
  %239 = icmp eq i32 %238, 0
  %240 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %233, i64 0, i32 0
  %241 = load i32, i32* %240, align 4
  br i1 %239, label %242, label %244

242:                                              ; preds = %235
  %243 = add i32 %241, -1
  store i32 %243, i32* %240, align 4
  br label %244

244:                                              ; preds = %242, %235
  %245 = phi i32 [ %243, %242 ], [ %241, %235 ]
  %246 = icmp eq i32 %245, 0
  br i1 %246, label %247, label %248

247:                                              ; preds = %244
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %233) #16
  br label %248

248:                                              ; preds = %231, %244, %247
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %105) #16
  %249 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %104, align 8
  %250 = icmp eq %"class.WTF::StringImpl"* %249, null
  br i1 %250, label %264, label %251

251:                                              ; preds = %248
  %252 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %249, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %253 = load atomic i32, i32* %252 monotonic, align 4
  %254 = and i32 %253, 2
  %255 = icmp eq i32 %254, 0
  %256 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %249, i64 0, i32 0
  %257 = load i32, i32* %256, align 4
  br i1 %255, label %258, label %260

258:                                              ; preds = %251
  %259 = add i32 %257, -1
  store i32 %259, i32* %256, align 4
  br label %260

260:                                              ; preds = %258, %251
  %261 = phi i32 [ %259, %258 ], [ %257, %251 ]
  %262 = icmp eq i32 %261, 0
  br i1 %262, label %263, label %264

263:                                              ; preds = %260
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %249) #16
  br label %264

264:                                              ; preds = %248, %260, %263
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %103) #16
  %265 = getelementptr inbounds %"class.std::__1::unique_ptr.1962", %"class.std::__1::unique_ptr.1962"* %186, i64 1
  %266 = icmp eq %"class.std::__1::unique_ptr.1962"* %265, %99
  br i1 %266, label %108, label %185

267:                                              ; preds = %183, %180, %44
  %268 = phi %"class.blink::protocol::CacheStorage::Backend::RequestCachedResponseCallback"* [ %4, %44 ], [ null, %180 ], [ null, %183 ]
  %269 = getelementptr inbounds %"class.crdtp::DispatchResponse", %"class.crdtp::DispatchResponse"* %10, i64 0, i32 1
  %270 = bitcast %"class.std::__1::basic_string"* %269 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %271 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %270, i64 0, i32 1, i32 0
  %272 = load i8, i8* %271, align 1
  %273 = icmp slt i8 %272, 0
  br i1 %273, label %274, label %277

274:                                              ; preds = %267
  %275 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %269, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %276 = load i8*, i8** %275, align 8
  call void @_ZdlPv(i8* %276) #18
  br label %277

277:                                              ; preds = %267, %274
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %37) #16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %36) #16
  %278 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %35, align 8
  %279 = icmp eq %"class.WTF::StringImpl"* %278, null
  br i1 %279, label %293, label %280

280:                                              ; preds = %277
  %281 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %278, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %282 = load atomic i32, i32* %281 monotonic, align 4
  %283 = and i32 %282, 2
  %284 = icmp eq i32 %283, 0
  %285 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %278, i64 0, i32 0
  %286 = load i32, i32* %285, align 4
  br i1 %284, label %287, label %289

287:                                              ; preds = %280
  %288 = add i32 %286, -1
  store i32 %288, i32* %285, align 4
  br label %289

289:                                              ; preds = %287, %280
  %290 = phi i32 [ %288, %287 ], [ %286, %280 ]
  %291 = icmp eq i32 %290, 0
  br i1 %291, label %292, label %293

292:                                              ; preds = %289
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %278) #16
  br label %293

293:                                              ; preds = %277, %289, %292
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %34) #16
  %294 = icmp eq i8* %31, null
  br i1 %294, label %299, label %295

295:                                              ; preds = %293
  %296 = load i8, i8* %31, align 1
  %297 = icmp eq i8 %296, 0
  br i1 %297, label %299, label %298

298:                                              ; preds = %295
  call void @_ZN20trace_event_internal24UpdateTraceEventDurationEPKhPKcN4base11trace_event16TraceEventHandleE(i8* nonnull %31, i8* %32, i64 %33) #16
  br label %299

299:                                              ; preds = %293, %295, %298
  %300 = icmp eq %"class.blink::protocol::CacheStorage::Backend::RequestCachedResponseCallback"* %268, null
  br i1 %300, label %306, label %301

301:                                              ; preds = %299
  %302 = bitcast %"class.blink::protocol::CacheStorage::Backend::RequestCachedResponseCallback"* %268 to void (%"class.blink::protocol::CacheStorage::Backend::RequestCachedResponseCallback"*)***
  %303 = load void (%"class.blink::protocol::CacheStorage::Backend::RequestCachedResponseCallback"*)**, void (%"class.blink::protocol::CacheStorage::Backend::RequestCachedResponseCallback"*)*** %302, align 8
  %304 = getelementptr inbounds void (%"class.blink::protocol::CacheStorage::Backend::RequestCachedResponseCallback"*)*, void (%"class.blink::protocol::CacheStorage::Backend::RequestCachedResponseCallback"*)** %303, i64 4
  %305 = load void (%"class.blink::protocol::CacheStorage::Backend::RequestCachedResponseCallback"*)*, void (%"class.blink::protocol::CacheStorage::Backend::RequestCachedResponseCallback"*)** %304, align 8
  call void %305(%"class.blink::protocol::CacheStorage::Backend::RequestCachedResponseCallback"* nonnull %268) #16
  br label %306

306:                                              ; preds = %299, %301
  %307 = icmp eq %"class.std::__1::vector.1960"* %3, null
  br i1 %307, label %337, label %308

308:                                              ; preds = %306
  %309 = getelementptr inbounds %"class.std::__1::vector.1960", %"class.std::__1::vector.1960"* %3, i64 0, i32 0, i32 0
  %310 = load %"class.std::__1::unique_ptr.1962"*, %"class.std::__1::unique_ptr.1962"** %309, align 8
  %311 = icmp eq %"class.std::__1::unique_ptr.1962"* %310, null
  br i1 %311, label %335, label %312

312:                                              ; preds = %308
  %313 = bitcast %"class.std::__1::unique_ptr.1962"* %310 to i8*
  %314 = getelementptr inbounds %"class.std::__1::vector.1960", %"class.std::__1::vector.1960"* %3, i64 0, i32 0, i32 1
  %315 = load %"class.std::__1::unique_ptr.1962"*, %"class.std::__1::unique_ptr.1962"** %314, align 8
  %316 = icmp eq %"class.std::__1::unique_ptr.1962"* %315, %310
  br i1 %316, label %333, label %317

317:                                              ; preds = %312, %328
  %318 = phi %"class.std::__1::unique_ptr.1962"* [ %319, %328 ], [ %315, %312 ]
  %319 = getelementptr inbounds %"class.std::__1::unique_ptr.1962", %"class.std::__1::unique_ptr.1962"* %318, i64 -1
  %320 = getelementptr inbounds %"class.std::__1::unique_ptr.1962", %"class.std::__1::unique_ptr.1962"* %319, i64 0, i32 0, i32 0, i32 0
  %321 = load %"class.blink::protocol::CacheStorage::Header"*, %"class.blink::protocol::CacheStorage::Header"** %320, align 8
  store %"class.blink::protocol::CacheStorage::Header"* null, %"class.blink::protocol::CacheStorage::Header"** %320, align 8
  %322 = icmp eq %"class.blink::protocol::CacheStorage::Header"* %321, null
  br i1 %322, label %328, label %323

323:                                              ; preds = %317
  %324 = bitcast %"class.blink::protocol::CacheStorage::Header"* %321 to void (%"class.blink::protocol::CacheStorage::Header"*)***
  %325 = load void (%"class.blink::protocol::CacheStorage::Header"*)**, void (%"class.blink::protocol::CacheStorage::Header"*)*** %324, align 8
  %326 = getelementptr inbounds void (%"class.blink::protocol::CacheStorage::Header"*)*, void (%"class.blink::protocol::CacheStorage::Header"*)** %325, i64 2
  %327 = load void (%"class.blink::protocol::CacheStorage::Header"*)*, void (%"class.blink::protocol::CacheStorage::Header"*)** %326, align 8
  call void %327(%"class.blink::protocol::CacheStorage::Header"* nonnull %321) #16
  br label %328

328:                                              ; preds = %323, %317
  %329 = icmp eq %"class.std::__1::unique_ptr.1962"* %319, %310
  br i1 %329, label %330, label %317

330:                                              ; preds = %328
  %331 = bitcast %"class.std::__1::vector.1960"* %3 to i8**
  %332 = load i8*, i8** %331, align 8
  br label %333

333:                                              ; preds = %330, %312
  %334 = phi i8* [ %332, %330 ], [ %313, %312 ]
  store %"class.std::__1::unique_ptr.1962"* %310, %"class.std::__1::unique_ptr.1962"** %314, align 8
  call void @_ZdlPv(i8* %334) #18
  br label %335

335:                                              ; preds = %333, %308
  %336 = bitcast %"class.std::__1::vector.1960"* %3 to i8*
  call void @_ZdlPv(i8* %336) #18
  br label %337

337:                                              ; preds = %306, %335
  ret void
}

declare void @_ZN5blink4KURLC1ERKN3WTF6StringE(%"class.blink::KURL"*, %"class.WTF::String"* dereferenceable(8)) unnamed_addr #2

declare dereferenceable(112) %"class.blink::KURL"* @_ZN5blink4KURLaSERKS0_(%"class.blink::KURL"*, %"class.blink::KURL"* dereferenceable(112)) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN5blink4KURLD1Ev(%"class.blink::KURL"*) unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn8_N5blink26InspectorCacheStorageAgent21requestCachedResponseERKN3WTF6StringES4_NSt3__110unique_ptrINS5_6vectorINS6_INS_8protocol12CacheStorage6HeaderENS5_14default_deleteISA_EEEENS5_9allocatorISD_EEEENSB_ISG_EEEENS6_INS9_7Backend29RequestCachedResponseCallbackENSB_ISK_EEEE(%"class.blink::InspectorCacheStorageAgent"*, %"class.WTF::String"* dereferenceable(8), %"class.WTF::String"* dereferenceable(8), %"class.std::__1::vector.1960"*, %"class.blink::protocol::CacheStorage::Backend::RequestCachedResponseCallback"*) unnamed_addr #0 align 2 {
  %6 = getelementptr inbounds %"class.blink::InspectorCacheStorageAgent", %"class.blink::InspectorCacheStorageAgent"* %0, i64 -1, i32 2, i32 0, i32 3
  %7 = bitcast i32* %6 to %"class.blink::InspectorCacheStorageAgent"*
  tail call void @_ZN5blink26InspectorCacheStorageAgent21requestCachedResponseERKN3WTF6StringES4_NSt3__110unique_ptrINS5_6vectorINS6_INS_8protocol12CacheStorage6HeaderENS5_14default_deleteISA_EEEENS5_9allocatorISD_EEEENSB_ISG_EEEENS6_INS9_7Backend29RequestCachedResponseCallbackENSB_ISK_EEEE(%"class.blink::InspectorCacheStorageAgent"* %7, %"class.WTF::String"* dereferenceable(8) %1, %"class.WTF::String"* dereferenceable(8) %2, %"class.std::__1::vector.1960"* %3, %"class.blink::protocol::CacheStorage::Backend::RequestCachedResponseCallback"* %4)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink14InspectorAgent7RestoreEv(%"class.blink::InspectorAgent"*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink14InspectorAgent26DidCommitLoadForLocalFrameEPNS_10LocalFrameE(%"class.blink::InspectorAgent"*, %"class.blink::LocalFrame"*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink14InspectorAgent33FlushPendingProtocolNotificationsEv(%"class.blink::InspectorAgent"*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink18InspectorBaseAgentINS_8protocol12CacheStorage8MetainfoEE4InitEPNS_13CoreProbeSinkEPN5crdtp14UberDispatcherEPNS_21InspectorSessionStateE(%"class.blink::InspectorBaseAgent"*, %"class.blink::CoreProbeSink"*, %"class.crdtp::UberDispatcher"*, %"class.blink::InspectorSessionState"*) unnamed_addr #0 comdat align 2 {
  %5 = getelementptr inbounds %"class.blink::InspectorBaseAgent", %"class.blink::InspectorBaseAgent"* %0, i64 0, i32 2
  %6 = ptrtoint %"class.blink::CoreProbeSink"* %1 to i64
  %7 = bitcast %"class.blink::Member"* %5 to i64*
  store atomic i64 %6, i64* %7 monotonic, align 8
  %8 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %13, label %10

10:                                               ; preds = %4
  %11 = bitcast %"class.blink::CoreProbeSink"* %1 to i8*
  %12 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %11) #16
  br label %13

13:                                               ; preds = %4, %10
  %14 = tail call i8* @_Znwm(i64 8) #18
  %15 = getelementptr inbounds %"class.crdtp::UberDispatcher", %"class.crdtp::UberDispatcher"* %2, i64 0, i32 1
  %16 = bitcast %"class.crdtp::FrontendChannel"** %15 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = bitcast i8* %14 to i64*
  store i64 %17, i64* %18, align 8
  %19 = getelementptr inbounds %"class.blink::InspectorBaseAgent", %"class.blink::InspectorBaseAgent"* %0, i64 0, i32 4, i32 0, i32 0, i32 0
  %20 = load %"class.blink::protocol::CacheStorage::Frontend"*, %"class.blink::protocol::CacheStorage::Frontend"** %19, align 8
  %21 = bitcast %"class.blink::protocol::CacheStorage::Frontend"** %19 to i8**
  store i8* %14, i8** %21, align 8
  %22 = icmp eq %"class.blink::protocol::CacheStorage::Frontend"* %20, null
  br i1 %22, label %25, label %23

23:                                               ; preds = %13
  %24 = bitcast %"class.blink::protocol::CacheStorage::Frontend"* %20 to i8*
  tail call void @_ZdlPv(i8* %24) #18
  br label %25

25:                                               ; preds = %13, %23
  %26 = getelementptr inbounds %"class.blink::InspectorBaseAgent", %"class.blink::InspectorBaseAgent"* %0, i64 0, i32 1
  tail call void @_ZN5blink8protocol12CacheStorage10Dispatcher4wireEPN5crdtp14UberDispatcherEPNS1_7BackendE(%"class.crdtp::UberDispatcher"* %2, %"class.blink::protocol::CacheStorage::Backend"* %26) #16
  %27 = getelementptr inbounds %"class.blink::InspectorBaseAgent", %"class.blink::InspectorBaseAgent"* %0, i64 0, i32 3
  tail call void @_ZN5blink19InspectorAgentState8InitFromEPNS_21InspectorSessionStateE(%"class.blink::InspectorAgentState"* %27, %"class.blink::InspectorSessionState"* %3) #16
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink18InspectorBaseAgentINS_8protocol12CacheStorage8MetainfoEE7DisposeEv(%"class.blink::InspectorBaseAgent"*) unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.crdtp::DispatchResponse", align 8
  %3 = bitcast %"class.blink::InspectorBaseAgent"* %0 to void (%"class.crdtp::DispatchResponse"*, %"class.blink::InspectorBaseAgent"*)***
  %4 = load void (%"class.crdtp::DispatchResponse"*, %"class.blink::InspectorBaseAgent"*)**, void (%"class.crdtp::DispatchResponse"*, %"class.blink::InspectorBaseAgent"*)*** %3, align 8
  %5 = getelementptr inbounds void (%"class.crdtp::DispatchResponse"*, %"class.blink::InspectorBaseAgent"*)*, void (%"class.crdtp::DispatchResponse"*, %"class.blink::InspectorBaseAgent"*)** %4, i64 8
  %6 = load void (%"class.crdtp::DispatchResponse"*, %"class.blink::InspectorBaseAgent"*)*, void (%"class.crdtp::DispatchResponse"*, %"class.blink::InspectorBaseAgent"*)** %5, align 8
  call void %6(%"class.crdtp::DispatchResponse"* nonnull sret %2, %"class.blink::InspectorBaseAgent"* %0) #16
  %7 = getelementptr inbounds %"class.crdtp::DispatchResponse", %"class.crdtp::DispatchResponse"* %2, i64 0, i32 1
  %8 = bitcast %"class.std::__1::basic_string"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %9 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %8, i64 0, i32 1, i32 0
  %10 = load i8, i8* %9, align 1
  %11 = icmp slt i8 %10, 0
  br i1 %11, label %12, label %15

12:                                               ; preds = %1
  %13 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @_ZdlPv(i8* %14) #18
  br label %15

15:                                               ; preds = %1, %12
  %16 = getelementptr inbounds %"class.blink::InspectorBaseAgent", %"class.blink::InspectorBaseAgent"* %0, i64 0, i32 4, i32 0, i32 0, i32 0
  %17 = load %"class.blink::protocol::CacheStorage::Frontend"*, %"class.blink::protocol::CacheStorage::Frontend"** %16, align 8
  store %"class.blink::protocol::CacheStorage::Frontend"* null, %"class.blink::protocol::CacheStorage::Frontend"** %16, align 8
  %18 = icmp eq %"class.blink::protocol::CacheStorage::Frontend"* %17, null
  br i1 %18, label %21, label %19

19:                                               ; preds = %15
  %20 = bitcast %"class.blink::protocol::CacheStorage::Frontend"* %17 to i8*
  call void @_ZdlPv(i8* %20) #18
  br label %21

21:                                               ; preds = %15, %19
  %22 = getelementptr inbounds %"class.blink::InspectorBaseAgent", %"class.blink::InspectorBaseAgent"* %0, i64 0, i32 2
  %23 = bitcast %"class.blink::Member"* %22 to i64*
  store atomic i64 0, i64* %23 monotonic, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink18InspectorBaseAgentINS_8protocol12CacheStorage8MetainfoEE7disableEv(%"class.crdtp::DispatchResponse"* noalias sret, %"class.blink::InspectorBaseAgent"*) unnamed_addr #0 comdat align 2 {
  tail call void @_ZN5crdtp16DispatchResponse7SuccessEv(%"class.crdtp::DispatchResponse"* sret %0) #16
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZThn8_N5blink18InspectorBaseAgentINS_8protocol12CacheStorage8MetainfoEE7disableEv(%"class.crdtp::DispatchResponse"* noalias sret, %"class.blink::InspectorBaseAgent"*) unnamed_addr #0 comdat align 2 {
  tail call void @_ZN5crdtp16DispatchResponse7SuccessEv(%"class.crdtp::DispatchResponse"* sret %0) #16
  ret void
}

; Function Attrs: nounwind
declare void @_ZN4mojo8internal21InterfacePtrStateBaseD2Ev(%"class.mojo::internal::InterfacePtrStateBase"*) unnamed_addr #3

declare void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink18InspectorBaseAgentINS_8protocol12CacheStorage8MetainfoEED2Ev(%"class.blink::InspectorBaseAgent"*) unnamed_addr #0 comdat align 2 {
  %2 = bitcast %"class.blink::InspectorBaseAgent"* %0 to <2 x i32 (...)**>*
  store <2 x i32 (...)**> <i32 (...)** bitcast (i8** getelementptr inbounds ({ [11 x i8*], [10 x i8*] }, { [11 x i8*], [10 x i8*] }* @_ZTVN5blink18InspectorBaseAgentINS_8protocol12CacheStorage8MetainfoEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)** bitcast (i8** getelementptr inbounds ({ [11 x i8*], [10 x i8*] }, { [11 x i8*], [10 x i8*] }* @_ZTVN5blink18InspectorBaseAgentINS_8protocol12CacheStorage8MetainfoEEE, i64 0, inrange i32 1, i64 2) to i32 (...)**)>, <2 x i32 (...)**>* %2, align 8
  %3 = getelementptr inbounds %"class.blink::InspectorBaseAgent", %"class.blink::InspectorBaseAgent"* %0, i64 0, i32 4, i32 0, i32 0, i32 0
  %4 = load %"class.blink::protocol::CacheStorage::Frontend"*, %"class.blink::protocol::CacheStorage::Frontend"** %3, align 8
  store %"class.blink::protocol::CacheStorage::Frontend"* null, %"class.blink::protocol::CacheStorage::Frontend"** %3, align 8
  %5 = icmp eq %"class.blink::protocol::CacheStorage::Frontend"* %4, null
  br i1 %5, label %8, label %6

6:                                                ; preds = %1
  %7 = bitcast %"class.blink::protocol::CacheStorage::Frontend"* %4 to i8*
  tail call void @_ZdlPv(i8* %7) #18
  br label %8

8:                                                ; preds = %1, %6
  %9 = getelementptr inbounds %"class.blink::InspectorBaseAgent", %"class.blink::InspectorBaseAgent"* %0, i64 0, i32 3, i32 1, i32 0, i32 0, i32 0
  %10 = load %"class.blink::InspectorAgentState::Field"**, %"class.blink::InspectorAgentState::Field"*** %9, align 8
  %11 = icmp eq %"class.blink::InspectorAgentState::Field"** %10, null
  %12 = bitcast %"class.blink::InspectorAgentState::Field"** %10 to i8*
  br i1 %11, label %19, label %13, !prof !2

13:                                               ; preds = %8
  %14 = getelementptr inbounds %"class.blink::InspectorBaseAgent", %"class.blink::InspectorBaseAgent"* %0, i64 0, i32 3, i32 1, i32 0, i32 0, i32 2
  %15 = load i32, i32* %14, align 4
  %16 = icmp eq i32 %15, 0
  br i1 %16, label %18, label %17, !prof !3

17:                                               ; preds = %13
  store i32 0, i32* %14, align 4
  br label %18

18:                                               ; preds = %17, %13
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %12) #16
  store %"class.blink::InspectorAgentState::Field"** null, %"class.blink::InspectorAgentState::Field"*** %9, align 8
  br label %19

19:                                               ; preds = %18, %8
  %20 = getelementptr inbounds %"class.blink::InspectorBaseAgent", %"class.blink::InspectorBaseAgent"* %0, i64 0, i32 3, i32 0, i32 0, i32 0
  %21 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %20, align 8
  %22 = icmp eq %"class.WTF::StringImpl"* %21, null
  br i1 %22, label %36, label %23

23:                                               ; preds = %19
  %24 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %21, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %25 = load atomic i32, i32* %24 monotonic, align 4
  %26 = and i32 %25, 2
  %27 = icmp eq i32 %26, 0
  %28 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %21, i64 0, i32 0
  %29 = load i32, i32* %28, align 4
  br i1 %27, label %30, label %32

30:                                               ; preds = %23
  %31 = add i32 %29, -1
  store i32 %31, i32* %28, align 4
  br label %32

32:                                               ; preds = %30, %23
  %33 = phi i32 [ %31, %30 ], [ %29, %23 ]
  %34 = icmp eq i32 %33, 0
  br i1 %34, label %35, label %36

35:                                               ; preds = %32
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %21) #16
  br label %36

36:                                               ; preds = %19, %32, %35
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink18InspectorBaseAgentINS_8protocol12CacheStorage8MetainfoEED0Ev(%"class.blink::InspectorBaseAgent"*) unnamed_addr #0 comdat align 2 {
  tail call void @llvm.trap() #19
  unreachable
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZThn8_N5blink18InspectorBaseAgentINS_8protocol12CacheStorage8MetainfoEED1Ev(%"class.blink::InspectorBaseAgent"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::InspectorBaseAgent", %"class.blink::InspectorBaseAgent"* %0, i64 -1, i32 4
  %3 = bitcast %"class.std::__1::unique_ptr.227"* %2 to %"class.blink::InspectorBaseAgent"*
  %4 = bitcast %"class.std::__1::unique_ptr.227"* %2 to <2 x i32 (...)**>*
  store <2 x i32 (...)**> <i32 (...)** bitcast (i8** getelementptr inbounds ({ [11 x i8*], [10 x i8*] }, { [11 x i8*], [10 x i8*] }* @_ZTVN5blink18InspectorBaseAgentINS_8protocol12CacheStorage8MetainfoEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)** bitcast (i8** getelementptr inbounds ({ [11 x i8*], [10 x i8*] }, { [11 x i8*], [10 x i8*] }* @_ZTVN5blink18InspectorBaseAgentINS_8protocol12CacheStorage8MetainfoEEE, i64 0, inrange i32 1, i64 2) to i32 (...)**)>, <2 x i32 (...)**>* %4, align 8
  %5 = getelementptr inbounds %"class.std::__1::unique_ptr.227", %"class.std::__1::unique_ptr.227"* %2, i64 6, i32 0, i32 0, i32 0
  %6 = load %"class.blink::protocol::CacheStorage::Frontend"*, %"class.blink::protocol::CacheStorage::Frontend"** %5, align 8
  store %"class.blink::protocol::CacheStorage::Frontend"* null, %"class.blink::protocol::CacheStorage::Frontend"** %5, align 8
  %7 = icmp eq %"class.blink::protocol::CacheStorage::Frontend"* %6, null
  br i1 %7, label %10, label %8

8:                                                ; preds = %1
  %9 = bitcast %"class.blink::protocol::CacheStorage::Frontend"* %6 to i8*
  tail call void @_ZdlPv(i8* %9) #18
  br label %10

10:                                               ; preds = %8, %1
  %11 = getelementptr inbounds %"class.std::__1::unique_ptr.227", %"class.std::__1::unique_ptr.227"* %2, i64 4
  %12 = bitcast %"class.std::__1::unique_ptr.227"* %11 to %"class.blink::InspectorAgentState::Field"***
  %13 = load %"class.blink::InspectorAgentState::Field"**, %"class.blink::InspectorAgentState::Field"*** %12, align 8
  %14 = icmp eq %"class.blink::InspectorAgentState::Field"** %13, null
  %15 = bitcast %"class.blink::InspectorAgentState::Field"** %13 to i8*
  br i1 %14, label %22, label %16, !prof !2

16:                                               ; preds = %10
  %17 = getelementptr inbounds %"class.blink::InspectorBaseAgent", %"class.blink::InspectorBaseAgent"* %3, i64 0, i32 3, i32 1, i32 0, i32 0, i32 2
  %18 = load i32, i32* %17, align 4
  %19 = icmp eq i32 %18, 0
  br i1 %19, label %21, label %20, !prof !3

20:                                               ; preds = %16
  store i32 0, i32* %17, align 4
  br label %21

21:                                               ; preds = %20, %16
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %15) #16
  store %"class.blink::InspectorAgentState::Field"** null, %"class.blink::InspectorAgentState::Field"*** %12, align 8
  br label %22

22:                                               ; preds = %21, %10
  %23 = getelementptr inbounds %"class.std::__1::unique_ptr.227", %"class.std::__1::unique_ptr.227"* %2, i64 3
  %24 = bitcast %"class.std::__1::unique_ptr.227"* %23 to %"class.WTF::StringImpl"**
  %25 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %24, align 8
  %26 = icmp eq %"class.WTF::StringImpl"* %25, null
  br i1 %26, label %40, label %27

27:                                               ; preds = %22
  %28 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %25, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %29 = load atomic i32, i32* %28 monotonic, align 4
  %30 = and i32 %29, 2
  %31 = icmp eq i32 %30, 0
  %32 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %25, i64 0, i32 0
  %33 = load i32, i32* %32, align 4
  br i1 %31, label %34, label %36

34:                                               ; preds = %27
  %35 = add i32 %33, -1
  store i32 %35, i32* %32, align 4
  br label %36

36:                                               ; preds = %34, %27
  %37 = phi i32 [ %35, %34 ], [ %33, %27 ]
  %38 = icmp eq i32 %37, 0
  br i1 %38, label %39, label %40

39:                                               ; preds = %36
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %25) #16
  br label %40

40:                                               ; preds = %22, %36, %39
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZThn8_N5blink18InspectorBaseAgentINS_8protocol12CacheStorage8MetainfoEED0Ev(%"class.blink::InspectorBaseAgent"*) unnamed_addr #0 comdat align 2 {
  tail call void @llvm.trap() #19
  unreachable
}

declare void @__cxa_pure_virtual() unnamed_addr

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #4

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #5

declare i32 @_ZN4base14PlatformThread9CurrentIdEv() local_unnamed_addr #2

declare i64 @_ZN4base6subtle28TimeTicksNowIgnoringOverrideEv() local_unnamed_addr #2

declare i64 @_ZN20trace_event_internal37AddTraceEventWithThreadIdAndTimestampEcPKhPKcS3_yyiRKN4base9TimeTicksEPNS4_11trace_event14TraceArgumentsEj(i8 signext, i8*, i8*, i8*, i64, i64, i32, %"class.base::TimeTicks"* dereferenceable(8), %"class.base::trace_event::TraceArguments"*, i32) local_unnamed_addr #2

declare void @_ZN5crdtp16DispatchResponse11ServerErrorENSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.crdtp::DispatchResponse"* sret, %"class.std::__1::basic_string"*) local_unnamed_addr #2

declare %"class.WTF::StringImpl"* @_ZN5blink14SecurityOrigin36IsPotentiallyTrustworthyErrorMessageEv() local_unnamed_addr #2

declare void @_ZNK3WTF6String4Utf8ENS_18UTF8ConversionModeE(%"class.std::__1::basic_string"* sret, %"class.WTF::String"*, i32) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

declare void @_ZNK5blink27BrowserInterfaceBrokerProxy12GetInterfaceEN4mojo22GenericPendingReceiverE(%"class.blink::BrowserInterfaceBrokerProxy"*, %"class.mojo::GenericPendingReceiver"*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN4mojo22GenericPendingReceiverD1Ev(%"class.mojo::GenericPendingReceiver"*) unnamed_addr #3

declare void @_ZN5crdtp16DispatchResponse7SuccessEv(%"class.crdtp::DispatchResponse"* sret) local_unnamed_addr #2

declare %"class.blink::LocalFrame"* @_ZN5blink15InspectedFrames23FrameWithSecurityOriginERKN3WTF6StringE(%"class.blink::InspectedFrames"*, %"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.WTF::StringImpl"* @_ZNK3WTF12StringAppendIPKcNS_6StringEEcvS3_Ev(%"class.WTF::StringAppend"*) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.WTF::StringTypeAdapter", align 8
  %3 = alloca %"class.WTF::StringTypeAdapter.2147", align 8
  %4 = alloca %"class.WTF::StringTypeAdapter", align 8
  %5 = alloca %"class.WTF::StringTypeAdapter.2147", align 8
  %6 = alloca %"class.WTF::StringTypeAdapter", align 8
  %7 = alloca i8*, align 8
  %8 = alloca i16*, align 8
  %9 = bitcast %"class.WTF::StringTypeAdapter"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %9) #16
  %10 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %9, i8 -86, i64 16, i1 false) #16
  %11 = load i8*, i8** %10, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter"* nonnull %6, i8* %11) #16
  %12 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 1, i32 0, i32 0
  %13 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %12, align 8
  %14 = icmp eq %"class.WTF::StringImpl"* %13, null
  %15 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E, align 8
  %16 = select i1 %14, %"class.WTF::StringImpl"* %15, %"class.WTF::StringImpl"* %13
  %17 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %16, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %18 = load atomic i32, i32* %17 monotonic, align 4
  %19 = and i32 %18, 1
  %20 = icmp eq i32 %19, 0
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %9) #16
  br i1 %20, label %82, label %21

21:                                               ; preds = %1
  %22 = bitcast i8** %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %22) #16
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %7, align 8
  %23 = call i32 @_ZNK3WTF12StringAppendIPKcNS_6StringEE6lengthEv(%"class.WTF::StringAppend"* %0)
  %24 = call %"class.WTF::StringImpl"* @_ZN3WTF10StringImpl19CreateUninitializedEjRPh(i32 %23, i8** nonnull dereferenceable(8) %7) #16
  %25 = load i8*, i8** %7, align 8
  %26 = bitcast %"class.WTF::StringTypeAdapter"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %26) #16
  %27 = getelementptr inbounds %"class.WTF::StringTypeAdapter", %"class.WTF::StringTypeAdapter"* %4, i64 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %26, i8 -86, i64 16, i1 false) #16
  %28 = load i8*, i8** %10, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter"* nonnull %4, i8* %28) #16
  %29 = bitcast %"class.WTF::StringTypeAdapter.2147"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %29) #16
  %30 = getelementptr inbounds %"class.WTF::StringTypeAdapter.2147", %"class.WTF::StringTypeAdapter.2147"* %5, i64 0, i32 0, i32 0, i32 1
  %31 = getelementptr inbounds %"class.WTF::StringTypeAdapter.2147", %"class.WTF::StringTypeAdapter.2147"* %5, i64 0, i32 0, i32 0, i32 2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %29, i8 -86, i64 24, i1 false) #16
  %32 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %12, align 8
  %33 = icmp eq %"class.WTF::StringImpl"* %32, null
  br i1 %33, label %34, label %36

34:                                               ; preds = %21
  %35 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  br label %42

36:                                               ; preds = %21
  %37 = ptrtoint %"class.WTF::StringImpl"* %32 to i64
  %38 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %32, i64 0, i32 1
  %39 = load i32, i32* %38, align 4
  %40 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %32, i64 1
  %41 = bitcast %"class.WTF::StringImpl"* %40 to i8*
  br label %42

42:                                               ; preds = %34, %36
  %43 = phi i8* [ null, %34 ], [ %41, %36 ]
  %44 = phi i64 [ %35, %34 ], [ %37, %36 ]
  %45 = phi i32 [ 0, %34 ], [ %39, %36 ]
  %46 = bitcast %"class.WTF::StringTypeAdapter.2147"* %5 to i64*
  store i64 %44, i64* %46, align 8
  store i8* %43, i8** %30, align 8
  store i32 %45, i32* %31, align 8
  call void @_ZNK3WTF17StringTypeAdapterIPKcE7WriteToEPh(%"class.WTF::StringTypeAdapter"* nonnull %4, i8* %25) #16
  %47 = getelementptr inbounds %"class.WTF::StringTypeAdapter.2147", %"class.WTF::StringTypeAdapter.2147"* %5, i64 0, i32 0
  %48 = load i32, i32* %27, align 8
  %49 = zext i32 %48 to i64
  %50 = getelementptr inbounds i8, i8* %25, i64 %49
  call void @_ZNK3WTF17StringTypeAdapterINS_10StringViewEE7WriteToEPh(%"class.WTF::StringTypeAdapter.2148"* nonnull %47, i8* %50) #16
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %29) #16
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %26) #16
  %51 = icmp eq %"class.WTF::StringImpl"* %24, null
  br i1 %51, label %143, label %52

52:                                               ; preds = %42
  %53 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %24, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %54 = load atomic i32, i32* %53 monotonic, align 4
  %55 = and i32 %54, 2
  %56 = icmp eq i32 %55, 0
  %57 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %24, i64 0, i32 0
  %58 = load i32, i32* %57, align 4
  br i1 %56, label %59, label %69

59:                                               ; preds = %52
  %60 = zext i32 %58 to i33
  %61 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %60, i33 1) #16
  %62 = extractvalue { i33, i1 } %61, 1
  %63 = extractvalue { i33, i1 } %61, 0
  %64 = icmp slt i33 %63, 0
  %65 = or i1 %62, %64
  br i1 %65, label %66, label %67, !prof !3

66:                                               ; preds = %59
  call void @llvm.trap() #16
  unreachable

67:                                               ; preds = %59
  %68 = trunc i33 %63 to i32
  store i32 %68, i32* %57, align 4
  br label %69

69:                                               ; preds = %52, %67
  %70 = phi i32 [ %68, %67 ], [ %58, %52 ]
  %71 = ptrtoint %"class.WTF::StringImpl"* %24 to i64
  %72 = load atomic i32, i32* %53 monotonic, align 4
  %73 = and i32 %72, 2
  %74 = icmp eq i32 %73, 0
  br i1 %74, label %75, label %78

75:                                               ; preds = %69
  %76 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %24, i64 0, i32 0
  %77 = add i32 %70, -1
  store i32 %77, i32* %76, align 4
  br label %78

78:                                               ; preds = %75, %69
  %79 = phi i32 [ %77, %75 ], [ %70, %69 ]
  %80 = icmp eq i32 %79, 0
  br i1 %80, label %81, label %143

81:                                               ; preds = %78
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %24) #16
  br label %143

82:                                               ; preds = %1
  %83 = bitcast i16** %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %83) #16
  store i16* inttoptr (i64 -6148914691236517206 to i16*), i16** %8, align 8
  %84 = call i32 @_ZNK3WTF12StringAppendIPKcNS_6StringEE6lengthEv(%"class.WTF::StringAppend"* %0)
  %85 = call %"class.WTF::StringImpl"* @_ZN3WTF10StringImpl19CreateUninitializedEjRPDs(i32 %84, i16** nonnull dereferenceable(8) %8) #16
  %86 = load i16*, i16** %8, align 8
  %87 = bitcast %"class.WTF::StringTypeAdapter"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %87) #16
  %88 = getelementptr inbounds %"class.WTF::StringTypeAdapter", %"class.WTF::StringTypeAdapter"* %2, i64 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %87, i8 -86, i64 16, i1 false) #16
  %89 = load i8*, i8** %10, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter"* nonnull %2, i8* %89) #16
  %90 = bitcast %"class.WTF::StringTypeAdapter.2147"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %90) #16
  %91 = getelementptr inbounds %"class.WTF::StringTypeAdapter.2147", %"class.WTF::StringTypeAdapter.2147"* %3, i64 0, i32 0, i32 0, i32 1
  %92 = getelementptr inbounds %"class.WTF::StringTypeAdapter.2147", %"class.WTF::StringTypeAdapter.2147"* %3, i64 0, i32 0, i32 0, i32 2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %90, i8 -86, i64 24, i1 false) #16
  %93 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %12, align 8
  %94 = icmp eq %"class.WTF::StringImpl"* %93, null
  br i1 %94, label %95, label %97

95:                                               ; preds = %82
  %96 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  br label %103

97:                                               ; preds = %82
  %98 = ptrtoint %"class.WTF::StringImpl"* %93 to i64
  %99 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %93, i64 0, i32 1
  %100 = load i32, i32* %99, align 4
  %101 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %93, i64 1
  %102 = bitcast %"class.WTF::StringImpl"* %101 to i8*
  br label %103

103:                                              ; preds = %95, %97
  %104 = phi i8* [ null, %95 ], [ %102, %97 ]
  %105 = phi i64 [ %96, %95 ], [ %98, %97 ]
  %106 = phi i32 [ 0, %95 ], [ %100, %97 ]
  %107 = bitcast %"class.WTF::StringTypeAdapter.2147"* %3 to i64*
  store i64 %105, i64* %107, align 8
  store i8* %104, i8** %91, align 8
  store i32 %106, i32* %92, align 8
  call void @_ZNK3WTF17StringTypeAdapterIPKcE7WriteToEPDs(%"class.WTF::StringTypeAdapter"* nonnull %2, i16* %86) #16
  %108 = getelementptr inbounds %"class.WTF::StringTypeAdapter.2147", %"class.WTF::StringTypeAdapter.2147"* %3, i64 0, i32 0
  %109 = load i32, i32* %88, align 8
  %110 = zext i32 %109 to i64
  %111 = getelementptr inbounds i16, i16* %86, i64 %110
  call void @_ZNK3WTF17StringTypeAdapterINS_10StringViewEE7WriteToEPDs(%"class.WTF::StringTypeAdapter.2148"* nonnull %108, i16* %111) #16
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %90) #16
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %87) #16
  %112 = icmp eq %"class.WTF::StringImpl"* %85, null
  br i1 %112, label %143, label %113

113:                                              ; preds = %103
  %114 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %85, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %115 = load atomic i32, i32* %114 monotonic, align 4
  %116 = and i32 %115, 2
  %117 = icmp eq i32 %116, 0
  %118 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %85, i64 0, i32 0
  %119 = load i32, i32* %118, align 4
  br i1 %117, label %120, label %130

120:                                              ; preds = %113
  %121 = zext i32 %119 to i33
  %122 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %121, i33 1) #16
  %123 = extractvalue { i33, i1 } %122, 1
  %124 = extractvalue { i33, i1 } %122, 0
  %125 = icmp slt i33 %124, 0
  %126 = or i1 %123, %125
  br i1 %126, label %127, label %128, !prof !3

127:                                              ; preds = %120
  call void @llvm.trap() #16
  unreachable

128:                                              ; preds = %120
  %129 = trunc i33 %124 to i32
  store i32 %129, i32* %118, align 4
  br label %130

130:                                              ; preds = %113, %128
  %131 = phi i32 [ %129, %128 ], [ %119, %113 ]
  %132 = ptrtoint %"class.WTF::StringImpl"* %85 to i64
  %133 = load atomic i32, i32* %114 monotonic, align 4
  %134 = and i32 %133, 2
  %135 = icmp eq i32 %134, 0
  br i1 %135, label %136, label %139

136:                                              ; preds = %130
  %137 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %85, i64 0, i32 0
  %138 = add i32 %131, -1
  store i32 %138, i32* %137, align 4
  br label %139

139:                                              ; preds = %136, %130
  %140 = phi i32 [ %138, %136 ], [ %131, %130 ]
  %141 = icmp eq i32 %140, 0
  br i1 %141, label %142, label %143

142:                                              ; preds = %139
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %85) #16
  br label %143

143:                                              ; preds = %142, %139, %103, %81, %78, %42
  %144 = phi i8* [ %22, %42 ], [ %22, %78 ], [ %22, %81 ], [ %83, %103 ], [ %83, %139 ], [ %83, %142 ]
  %145 = phi i64 [ 0, %42 ], [ %71, %78 ], [ %71, %81 ], [ 0, %103 ], [ %132, %139 ], [ %132, %142 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %144) #16
  %146 = inttoptr i64 %145 to %"class.WTF::StringImpl"*
  ret %"class.WTF::StringImpl"* %146
}

declare %"class.blink::LocalDOMWindow"* @_ZN5blink10LocalFrame9DomWindowEv(%"class.blink::LocalFrame"*) local_unnamed_addr #2

; Function Attrs: nounwind readnone speculatable
declare { i33, i1 } @llvm.sadd.with.overflow.i33(i33, i33) #6

declare %"class.WTF::StringImpl"* @_ZN3WTF10StringImpl19CreateUninitializedEjRPh(i32, i8** dereferenceable(8)) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK3WTF12StringAppendIPKcNS_6StringEE6lengthEv(%"class.WTF::StringAppend"*) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.WTF::StringTypeAdapter", align 8
  %5 = alloca %"class.logging::CheckOpResult", align 8
  %6 = alloca %"class.logging::CheckError", align 8
  %7 = alloca %"class.logging::CheckOpResult", align 8
  %8 = alloca %"class.logging::CheckError", align 8
  %9 = bitcast %"class.WTF::StringTypeAdapter"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %9) #16
  %10 = getelementptr inbounds %"class.WTF::StringTypeAdapter", %"class.WTF::StringTypeAdapter"* %4, i64 0, i32 1
  %11 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 0
  %12 = bitcast %"class.WTF::StringTypeAdapter"* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %12, i8 -86, i64 16, i1 false)
  %13 = load i8*, i8** %11, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter"* nonnull %4, i8* %13) #16
  %14 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 1, i32 0, i32 0
  %15 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %14, align 8
  %16 = icmp eq %"class.WTF::StringImpl"* %15, null
  br i1 %16, label %20, label %17

17:                                               ; preds = %1
  %18 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %15, i64 0, i32 1
  %19 = load i32, i32* %18, align 4
  br label %20

20:                                               ; preds = %1, %17
  %21 = phi i32 [ %19, %17 ], [ 0, %1 ]
  %22 = load i32, i32* %10, align 8
  %23 = add i32 %22, %21
  %24 = bitcast %"class.logging::CheckOpResult"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %24) #16
  %25 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %5, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %25, align 8
  %26 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %26)
  %27 = icmp ult i32 %23, %22
  br i1 %27, label %29, label %28

28:                                               ; preds = %20
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %26)
  store i8* null, i8** %25, align 8
  br label %38

29:                                               ; preds = %20
  %30 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %23) #16
  %31 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %22) #16
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.8, i64 0, i64 0), i8* %30, i8* %31) #16
  %32 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %33 = load i8*, i8** %32, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %26)
  store i8* %33, i8** %25, align 8
  %34 = icmp eq i8* %33, null
  br i1 %34, label %38, label %35

35:                                               ; preds = %29
  %36 = bitcast %"class.logging::CheckError"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %36) #16
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %6, i8* getelementptr inbounds ([70 x i8], [70 x i8]* @.str.9, i64 0, i64 0), i32 108, %"class.logging::CheckOpResult"* nonnull %5) #16
  %37 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %6) #16
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %6) #16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %36) #16
  br label %38

38:                                               ; preds = %28, %29, %35
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %24) #16
  %39 = bitcast %"class.logging::CheckOpResult"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %39) #16
  %40 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %7, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %40, align 8
  %41 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %41)
  %42 = icmp ult i32 %23, %21
  br i1 %42, label %44, label %43

43:                                               ; preds = %38
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %41)
  store i8* null, i8** %40, align 8
  br label %53

44:                                               ; preds = %38
  %45 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %23) #16
  %46 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %21) #16
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.10, i64 0, i64 0), i8* %45, i8* %46) #16
  %47 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %48 = load i8*, i8** %47, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %41)
  store i8* %48, i8** %40, align 8
  %49 = icmp eq i8* %48, null
  br i1 %49, label %53, label %50

50:                                               ; preds = %44
  %51 = bitcast %"class.logging::CheckError"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %51) #16
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %8, i8* getelementptr inbounds ([70 x i8], [70 x i8]* @.str.9, i64 0, i64 0), i32 109, %"class.logging::CheckOpResult"* nonnull %7) #16
  %52 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %8) #16
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %8) #16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %51) #16
  br label %53

53:                                               ; preds = %43, %44, %50
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %39) #16
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %9) #16
  ret i32 %23
}

declare %"class.WTF::StringImpl"* @_ZN3WTF10StringImpl19CreateUninitializedEjRPDs(i32, i16** dereferenceable(8)) local_unnamed_addr #2

declare void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter"*, i8*) unnamed_addr #2

declare void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* sret, i8*, i32, %"class.logging::CheckOpResult"*) local_unnamed_addr #2

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #3

declare i8* @_ZN7logging15CheckOpValueStrEj(i32) local_unnamed_addr #2

declare void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"*, i8*, i8*, i8*) unnamed_addr #2

declare void @_ZNK3WTF17StringTypeAdapterIPKcE7WriteToEPh(%"class.WTF::StringTypeAdapter"*, i8*) local_unnamed_addr #2

declare void @_ZNK3WTF17StringTypeAdapterINS_10StringViewEE7WriteToEPh(%"class.WTF::StringTypeAdapter.2148"*, i8*) local_unnamed_addr #2

declare void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"*) local_unnamed_addr #2

declare void @_ZNK3WTF17StringTypeAdapterIPKcE7WriteToEPDs(%"class.WTF::StringTypeAdapter"*, i16*) local_unnamed_addr #2

declare void @_ZNK3WTF17StringTypeAdapterINS_10StringViewEE7WriteToEPDs(%"class.WTF::StringTypeAdapter.2148"*, i16*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.WTF::KeyValuePair.243"*, %"struct.WTF::KeyValuePair.243"* } @_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_N4mojo6RemoteIN5blink5mojom5blink12CacheStorageEEEEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENSE_IS9_EEEESF_NS_18PartitionAllocatorEE4findERKS1_(%"class.WTF::HashTable.240"*, %"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::HashTable.240", %"class.WTF::HashTable.240"* %0, i64 0, i32 0
  %4 = load %"struct.WTF::KeyValuePair.243"*, %"struct.WTF::KeyValuePair.243"** %3, align 8
  %5 = icmp eq %"struct.WTF::KeyValuePair.243"* %4, null
  br i1 %5, label %63, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.WTF::HashTable.240", %"class.WTF::HashTable.240"* %0, i64 0, i32 1
  %8 = load i32, i32* %7, align 8
  %9 = add i32 %8, -1
  %10 = zext i32 %9 to i64
  %11 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %1, i64 0, i32 0, i32 0
  %12 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %11, align 8
  %13 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %12, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %14 = load atomic i32, i32* %13 monotonic, align 4
  %15 = lshr i32 %14, 8
  %16 = icmp eq i32 %15, 0
  br i1 %16, label %17, label %19

17:                                               ; preds = %6
  %18 = tail call i32 @_ZNK3WTF10StringImpl12HashSlowCaseEv(%"class.WTF::StringImpl"* %12) #16
  br label %19

19:                                               ; preds = %17, %6
  %20 = phi i32 [ %18, %17 ], [ %15, %6 ]
  %21 = and i32 %20, %9
  %22 = zext i32 %21 to i64
  %23 = getelementptr inbounds %"struct.WTF::KeyValuePair.243", %"struct.WTF::KeyValuePair.243"* %4, i64 %22
  %24 = getelementptr inbounds %"struct.WTF::KeyValuePair.243", %"struct.WTF::KeyValuePair.243"* %23, i64 0, i32 0, i32 0, i32 0
  %25 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %24, align 8
  %26 = icmp eq %"class.WTF::StringImpl"* %25, null
  br i1 %26, label %63, label %27

27:                                               ; preds = %19
  %28 = xor i32 %20, -1
  %29 = lshr i32 %20, 23
  %30 = add i32 %29, %28
  %31 = shl i32 %30, 12
  %32 = xor i32 %31, %30
  %33 = lshr i32 %32, 7
  %34 = xor i32 %33, %32
  %35 = shl i32 %34, 2
  %36 = xor i32 %35, %34
  %37 = lshr i32 %36, 20
  %38 = xor i32 %37, %36
  %39 = or i32 %38, 1
  %40 = zext i32 %39 to i64
  br label %41

41:                                               ; preds = %52, %27
  %42 = phi %"struct.WTF::KeyValuePair.243"* [ %23, %27 ], [ %57, %52 ]
  %43 = phi i64 [ %22, %27 ], [ %56, %52 ]
  %44 = phi i64 [ 0, %27 ], [ %54, %52 ]
  %45 = bitcast %"struct.WTF::KeyValuePair.243"* %42 to i8**
  %46 = load i8*, i8** %45, align 8
  %47 = icmp eq i8* %46, inttoptr (i64 -1 to i8*)
  br i1 %47, label %52, label %48

48:                                               ; preds = %41
  %49 = bitcast i8* %46 to %"class.WTF::StringImpl"*
  %50 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %11, align 8
  %51 = tail call zeroext i1 @_ZN3WTF12EqualNonNullEPKNS_10StringImplES2_(%"class.WTF::StringImpl"* %49, %"class.WTF::StringImpl"* %50) #16
  br i1 %51, label %61, label %52

52:                                               ; preds = %48, %41
  %53 = icmp eq i64 %44, 0
  %54 = select i1 %53, i64 %40, i64 %44
  %55 = add i64 %54, %43
  %56 = and i64 %55, %10
  %57 = getelementptr inbounds %"struct.WTF::KeyValuePair.243", %"struct.WTF::KeyValuePair.243"* %4, i64 %56
  %58 = getelementptr inbounds %"struct.WTF::KeyValuePair.243", %"struct.WTF::KeyValuePair.243"* %57, i64 0, i32 0, i32 0, i32 0
  %59 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %58, align 8
  %60 = icmp eq %"class.WTF::StringImpl"* %59, null
  br i1 %60, label %63, label %41

61:                                               ; preds = %48
  %62 = icmp eq %"struct.WTF::KeyValuePair.243"* %42, null
  br i1 %62, label %63, label %69

63:                                               ; preds = %52, %61, %19, %2
  %64 = load %"struct.WTF::KeyValuePair.243"*, %"struct.WTF::KeyValuePair.243"** %3, align 8
  %65 = getelementptr inbounds %"class.WTF::HashTable.240", %"class.WTF::HashTable.240"* %0, i64 0, i32 1
  %66 = load i32, i32* %65, align 8
  %67 = zext i32 %66 to i64
  %68 = getelementptr inbounds %"struct.WTF::KeyValuePair.243", %"struct.WTF::KeyValuePair.243"* %64, i64 %67
  br label %74

69:                                               ; preds = %61
  %70 = load %"struct.WTF::KeyValuePair.243"*, %"struct.WTF::KeyValuePair.243"** %3, align 8
  %71 = load i32, i32* %7, align 8
  %72 = zext i32 %71 to i64
  %73 = getelementptr inbounds %"struct.WTF::KeyValuePair.243", %"struct.WTF::KeyValuePair.243"* %70, i64 %72
  br label %74

74:                                               ; preds = %63, %69
  %75 = phi %"struct.WTF::KeyValuePair.243"* [ %42, %69 ], [ %68, %63 ]
  %76 = phi %"struct.WTF::KeyValuePair.243"* [ %73, %69 ], [ %68, %63 ]
  %77 = insertvalue { %"struct.WTF::KeyValuePair.243"*, %"struct.WTF::KeyValuePair.243"* } undef, %"struct.WTF::KeyValuePair.243"* %75, 0
  %78 = insertvalue { %"struct.WTF::KeyValuePair.243"*, %"struct.WTF::KeyValuePair.243"* } %77, %"struct.WTF::KeyValuePair.243"* %76, 1
  ret { %"struct.WTF::KeyValuePair.243"*, %"struct.WTF::KeyValuePair.243"* } %78
}

declare i32 @_ZNK3WTF10StringImpl12HashSlowCaseEv(%"class.WTF::StringImpl"*) local_unnamed_addr #2

declare zeroext i1 @_ZN3WTF12EqualNonNullEPKNS_10StringImplES2_(%"class.WTF::StringImpl"*, %"class.WTF::StringImpl"*) local_unnamed_addr #2

declare void @_ZN4mojo8internal21InterfacePtrStateBaseC2Ev(%"class.mojo::internal::InterfacePtrStateBase"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4mojo6RemoteIN5blink5mojom5blink12CacheStorageEE26BindNewPipeAndPassReceiverE13scoped_refptrIN4base19SequencedTaskRunnerEE(%"class.mojo::PendingReceiver"* noalias sret, %"class.mojo::Remote"*, %"class.base::SequencedTaskRunner"*) local_unnamed_addr #0 comdat align 2 {
  %4 = alloca %"class.mojo::ScopedHandleBase", align 4
  %5 = alloca %"class.mojo::ScopedHandleBase", align 4
  %6 = alloca %"class.mojo::MessagePipeHandle", align 4
  %7 = alloca %"class.mojo::MessagePipeHandle", align 4
  %8 = alloca %"class.mojo::PendingRemote.2149", align 4
  %9 = bitcast %"class.mojo::MessagePipeHandle"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %9) #16
  %10 = getelementptr inbounds %"class.mojo::MessagePipeHandle", %"class.mojo::MessagePipeHandle"* %6, i64 0, i32 0, i32 0
  store i32 0, i32* %10, align 4
  %11 = bitcast %"class.mojo::MessagePipeHandle"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %11) #16
  %12 = getelementptr inbounds %"class.mojo::MessagePipeHandle", %"class.mojo::MessagePipeHandle"* %7, i64 0, i32 0, i32 0
  store i32 0, i32* %12, align 4
  %13 = call i32 @MojoCreateMessagePipe(%struct.MojoCreateMessagePipeOptions* null, i32* nonnull %10, i32* nonnull %12) #16
  %14 = load i32, i32* %10, align 4
  %15 = load i32, i32* %12, align 4
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %11) #16
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %9) #16
  %16 = bitcast %"class.mojo::ScopedHandleBase"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %16)
  %17 = getelementptr inbounds %"class.mojo::PendingRemote.2149", %"class.mojo::PendingRemote.2149"* %8, i64 0, i32 0
  %18 = getelementptr inbounds %"class.mojo::ScopedHandleBase", %"class.mojo::ScopedHandleBase"* %5, i64 0, i32 0, i32 0, i32 0
  store i32 %14, i32* %18, align 4, !alias.scope !63
  call void @_ZN4mojo8internal18PendingRemoteStateC1ENS_16ScopedHandleBaseINS_17MessagePipeHandleEEEj(%"struct.mojo::internal::PendingRemoteState"* nonnull %17, %"class.mojo::ScopedHandleBase"* nonnull %5, i32 0) #16
  %19 = load i32, i32* %18, align 4
  %20 = icmp eq i32 %19, 0
  br i1 %20, label %23, label %21

21:                                               ; preds = %3
  %22 = call i32 @MojoClose(i32 %19) #16
  br label %23

23:                                               ; preds = %21, %3
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %16)
  call void @_ZN4mojo6RemoteIN5blink5mojom5blink12CacheStorageEE4BindENS_13PendingRemoteIS4_EE13scoped_refptrIN4base19SequencedTaskRunnerEE(%"class.mojo::Remote"* %1, %"class.mojo::PendingRemote.2149"* nonnull %8, %"class.base::SequencedTaskRunner"* %2)
  call void @_ZN4mojo8internal18PendingRemoteStateD1Ev(%"struct.mojo::internal::PendingRemoteState"* nonnull %17) #16
  %24 = bitcast %"class.mojo::ScopedHandleBase"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %24)
  %25 = getelementptr inbounds %"class.mojo::PendingReceiver", %"class.mojo::PendingReceiver"* %0, i64 0, i32 0
  %26 = getelementptr inbounds %"class.mojo::ScopedHandleBase", %"class.mojo::ScopedHandleBase"* %4, i64 0, i32 0, i32 0, i32 0
  store i32 %15, i32* %26, align 4, !alias.scope !66
  call void @_ZN4mojo8internal20PendingReceiverStateC1ENS_16ScopedHandleBaseINS_17MessagePipeHandleEEE(%"struct.mojo::internal::PendingReceiverState"* %25, %"class.mojo::ScopedHandleBase"* nonnull %4) #16
  %27 = load i32, i32* %26, align 4
  %28 = icmp eq i32 %27, 0
  br i1 %28, label %31, label %29

29:                                               ; preds = %23
  %30 = call i32 @MojoClose(i32 %27) #16
  br label %31

31:                                               ; preds = %23, %29
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %24)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4mojo6RemoteIN5blink5mojom5blink12CacheStorageEE4BindENS_13PendingRemoteIS4_EE13scoped_refptrIN4base19SequencedTaskRunnerEE(%"class.mojo::Remote"*, %"class.mojo::PendingRemote.2149"*, %"class.base::SequencedTaskRunner"*) local_unnamed_addr #0 comdat align 2 {
  %4 = alloca %"class.mojo::internal::InterfacePtrState", align 8
  %5 = getelementptr inbounds %"class.mojo::PendingRemote.2149", %"class.mojo::PendingRemote.2149"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %6 = load i32, i32* %5, align 4
  %7 = icmp eq i32 %6, 0
  br i1 %7, label %8, label %25

8:                                                ; preds = %3
  %9 = bitcast %"class.mojo::internal::InterfacePtrState"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %9) #16
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %9, i8 -86, i64 48, i1 false) #16
  %10 = bitcast %"class.mojo::internal::InterfacePtrState"* %4 to %"class.mojo::internal::InterfacePtrStateBase"*
  call void @_ZN4mojo8internal21InterfacePtrStateBaseC2Ev(%"class.mojo::internal::InterfacePtrStateBase"* nonnull %10) #16
  %11 = getelementptr inbounds %"class.mojo::internal::InterfacePtrState", %"class.mojo::internal::InterfacePtrState"* %4, i64 0, i32 1
  %12 = bitcast %"class.std::__1::unique_ptr.421"* %11 to i64*
  %13 = getelementptr inbounds %"class.mojo::Remote", %"class.mojo::Remote"* %0, i64 0, i32 0, i32 1
  %14 = bitcast %"class.std::__1::unique_ptr.421"* %13 to i64*
  %15 = load i64, i64* %14, align 8
  store i64 %15, i64* %12, align 8
  store i64 0, i64* %14, align 8
  %16 = bitcast %"class.mojo::Remote"* %0 to %"class.mojo::internal::InterfacePtrStateBase"*
  call void @_ZN4mojo8internal21InterfacePtrStateBase4SwapEPS1_(%"class.mojo::internal::InterfacePtrStateBase"* %16, %"class.mojo::internal::InterfacePtrStateBase"* nonnull %10) #16
  %17 = getelementptr inbounds %"class.mojo::internal::InterfacePtrState", %"class.mojo::internal::InterfacePtrState"* %4, i64 0, i32 1, i32 0, i32 0, i32 0
  %18 = load %"class.blink::mojom::blink::CacheStorageProxy"*, %"class.blink::mojom::blink::CacheStorageProxy"** %17, align 8
  store %"class.blink::mojom::blink::CacheStorageProxy"* null, %"class.blink::mojom::blink::CacheStorageProxy"** %17, align 8
  %19 = icmp eq %"class.blink::mojom::blink::CacheStorageProxy"* %18, null
  br i1 %19, label %52, label %20

20:                                               ; preds = %8
  %21 = bitcast %"class.blink::mojom::blink::CacheStorageProxy"* %18 to void (%"class.blink::mojom::blink::CacheStorageProxy"*)***
  %22 = load void (%"class.blink::mojom::blink::CacheStorageProxy"*)**, void (%"class.blink::mojom::blink::CacheStorageProxy"*)*** %21, align 8
  %23 = getelementptr inbounds void (%"class.blink::mojom::blink::CacheStorageProxy"*)*, void (%"class.blink::mojom::blink::CacheStorageProxy"*)** %22, i64 1
  %24 = load void (%"class.blink::mojom::blink::CacheStorageProxy"*)*, void (%"class.blink::mojom::blink::CacheStorageProxy"*)** %23, align 8
  call void %24(%"class.blink::mojom::blink::CacheStorageProxy"* nonnull %18) #16
  br label %52

25:                                               ; preds = %3
  %26 = getelementptr inbounds %"class.mojo::PendingRemote.2149", %"class.mojo::PendingRemote.2149"* %1, i64 0, i32 0
  %27 = bitcast %"class.mojo::Remote"* %0 to %"class.mojo::internal::InterfacePtrStateBase"*
  tail call void @_ZN4mojo8internal21InterfacePtrStateBase4BindEPNS0_18PendingRemoteStateE13scoped_refptrIN4base19SequencedTaskRunnerEE(%"class.mojo::internal::InterfacePtrStateBase"* %27, %"struct.mojo::internal::PendingRemoteState"* %26, %"class.base::SequencedTaskRunner"* %2) #16
  %28 = getelementptr inbounds %"class.mojo::Remote", %"class.mojo::Remote"* %0, i64 0, i32 0, i32 1
  %29 = getelementptr inbounds %"class.std::__1::unique_ptr.421", %"class.std::__1::unique_ptr.421"* %28, i64 0, i32 0, i32 0, i32 0
  %30 = load %"class.blink::mojom::blink::CacheStorageProxy"*, %"class.blink::mojom::blink::CacheStorageProxy"** %29, align 8
  %31 = icmp eq %"class.blink::mojom::blink::CacheStorageProxy"* %30, null
  br i1 %31, label %32, label %62

32:                                               ; preds = %25
  %33 = tail call i8* @_Znwm(i64 8) #18
  %34 = bitcast i8* %33 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN5blink5mojom5blink29CacheStorageResponseValidatorE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %34, align 8
  %35 = bitcast i8* %33 to %"class.mojo::MessageReceiver"*
  %36 = tail call zeroext i1 @_ZN4mojo8internal21InterfacePtrStateBase24InitializeEndpointClientEbbbNSt3__110unique_ptrINS_15MessageReceiverENS2_14default_deleteIS4_EEEEPKc(%"class.mojo::internal::InterfacePtrStateBase"* %27, i1 zeroext true, i1 zeroext false, i1 zeroext false, %"class.mojo::MessageReceiver"* nonnull %35, i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN5blink5mojom5blink12CacheStorage5Name_E, i64 0, i64 0)) #16
  br i1 %36, label %37, label %62

37:                                               ; preds = %32
  %38 = getelementptr inbounds %"class.mojo::Remote", %"class.mojo::Remote"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %39 = bitcast %"class.mojo::InterfaceEndpointClient"** %38 to %"class.mojo::MessageReceiverWithResponder"**
  %40 = load %"class.mojo::MessageReceiverWithResponder"*, %"class.mojo::MessageReceiverWithResponder"** %39, align 8
  %41 = tail call i8* @_Znwm(i64 16) #18
  %42 = bitcast i8* %41 to %"class.blink::mojom::blink::CacheStorageProxy"*
  tail call void @_ZN5blink5mojom5blink17CacheStorageProxyC1EPN4mojo28MessageReceiverWithResponderE(%"class.blink::mojom::blink::CacheStorageProxy"* nonnull %42, %"class.mojo::MessageReceiverWithResponder"* %40) #16
  %43 = ptrtoint i8* %41 to i64
  %44 = load %"class.blink::mojom::blink::CacheStorageProxy"*, %"class.blink::mojom::blink::CacheStorageProxy"** %29, align 8
  %45 = bitcast %"class.std::__1::unique_ptr.421"* %28 to i64*
  store i64 %43, i64* %45, align 8
  %46 = icmp eq %"class.blink::mojom::blink::CacheStorageProxy"* %44, null
  br i1 %46, label %62, label %47

47:                                               ; preds = %37
  %48 = bitcast %"class.blink::mojom::blink::CacheStorageProxy"* %44 to void (%"class.blink::mojom::blink::CacheStorageProxy"*)***
  %49 = load void (%"class.blink::mojom::blink::CacheStorageProxy"*)**, void (%"class.blink::mojom::blink::CacheStorageProxy"*)*** %48, align 8
  %50 = getelementptr inbounds void (%"class.blink::mojom::blink::CacheStorageProxy"*)*, void (%"class.blink::mojom::blink::CacheStorageProxy"*)** %49, i64 1
  %51 = load void (%"class.blink::mojom::blink::CacheStorageProxy"*)*, void (%"class.blink::mojom::blink::CacheStorageProxy"*)** %50, align 8
  tail call void %51(%"class.blink::mojom::blink::CacheStorageProxy"* nonnull %44) #16
  br label %62

52:                                               ; preds = %20, %8
  call void @_ZN4mojo8internal21InterfacePtrStateBaseD2Ev(%"class.mojo::internal::InterfacePtrStateBase"* nonnull %10) #16
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %9) #16
  %53 = icmp eq %"class.base::SequencedTaskRunner"* %2, null
  br i1 %53, label %62, label %54

54:                                               ; preds = %52
  %55 = getelementptr inbounds %"class.base::SequencedTaskRunner", %"class.base::SequencedTaskRunner"* %2, i64 0, i32 0, i32 1
  %56 = getelementptr inbounds %"class.base::RefCountedThreadSafe.251", %"class.base::RefCountedThreadSafe.251"* %55, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %57 = atomicrmw sub i32* %56, i32 1 acq_rel
  %58 = icmp eq i32 %57, 1
  br i1 %58, label %59, label %62

59:                                               ; preds = %54
  %60 = getelementptr inbounds %"class.base::RefCountedThreadSafe.251", %"class.base::RefCountedThreadSafe.251"* %55, i64 -2
  %61 = bitcast %"class.base::RefCountedThreadSafe.251"* %60 to %"class.base::TaskRunner"*
  call void @_ZN4base16TaskRunnerTraits8DestructEPKNS_10TaskRunnerE(%"class.base::TaskRunner"* %61) #16
  br label %62

62:                                               ; preds = %47, %37, %32, %25, %52, %54, %59
  ret void
}

declare i32 @MojoCreateMessagePipe(%struct.MojoCreateMessagePipeOptions*, i32*, i32*) local_unnamed_addr #2

declare i32 @MojoClose(i32) local_unnamed_addr #2

declare void @_ZN4mojo8internal21InterfacePtrStateBase4SwapEPS1_(%"class.mojo::internal::InterfacePtrStateBase"*, %"class.mojo::internal::InterfacePtrStateBase"*) local_unnamed_addr #2

declare void @_ZN4mojo8internal21InterfacePtrStateBase4BindEPNS0_18PendingRemoteStateE13scoped_refptrIN4base19SequencedTaskRunnerEE(%"class.mojo::internal::InterfacePtrStateBase"*, %"struct.mojo::internal::PendingRemoteState"*, %"class.base::SequencedTaskRunner"*) local_unnamed_addr #2

declare zeroext i1 @_ZN4mojo8internal21InterfacePtrStateBase24InitializeEndpointClientEbbbNSt3__110unique_ptrINS_15MessageReceiverENS2_14default_deleteIS4_EEEEPKc(%"class.mojo::internal::InterfacePtrStateBase"*, i1 zeroext, i1 zeroext, i1 zeroext, %"class.mojo::MessageReceiver"*, i8*) local_unnamed_addr #2

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #7

declare void @_ZN5blink5mojom5blink17CacheStorageProxyC1EPN4mojo28MessageReceiverWithResponderE(%"class.blink::mojom::blink::CacheStorageProxy"*, %"class.mojo::MessageReceiverWithResponder"*) unnamed_addr #2

declare void @_ZN4mojo8internal18PendingRemoteStateC1ENS_16ScopedHandleBaseINS_17MessagePipeHandleEEEj(%"struct.mojo::internal::PendingRemoteState"*, %"class.mojo::ScopedHandleBase"*, i32) unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN4mojo8internal18PendingRemoteStateD1Ev(%"struct.mojo::internal::PendingRemoteState"*) unnamed_addr #3

declare void @_ZN4mojo8internal20PendingReceiverStateC1ENS_16ScopedHandleBaseINS_17MessagePipeHandleEEE(%"struct.mojo::internal::PendingReceiverState"*, %"class.mojo::ScopedHandleBase"*) unnamed_addr #2

declare void @_ZN4base16TaskRunnerTraits8DestructEPKNS_10TaskRunnerE(%"class.base::TaskRunner"*) local_unnamed_addr #2

declare void @_ZN4mojo22GenericPendingReceiverC2EN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEENS_16ScopedHandleBaseINS_17MessagePipeHandleEEE(%"class.mojo::GenericPendingReceiver"*, i8*, i64, %"class.mojo::ScopedHandleBase"*) unnamed_addr #2

declare void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* sret, i8*, i32, i8*) local_unnamed_addr #2

; Function Attrs: argmemonly nofree nounwind readonly
declare i64 @strlen(i8* nocapture) local_unnamed_addr #8

; Function Attrs: nounwind
declare void @_ZN4mojo8internal20PendingReceiverStateD1Ev(%"struct.mojo::internal::PendingReceiverState"*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.WTF::KeyValuePair.243"*, i8 } @_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_N4mojo6RemoteIN5blink5mojom5blink12CacheStorageEEEEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENSE_IS9_EEEESF_NS_18PartitionAllocatorEE6insertINS_17HashMapTranslatorISH_SC_SI_EERKS1_S9_EENS_18HashTableAddResultISJ_SA_EEOT0_OT1_(%"class.WTF::HashTable.240"*, %"class.WTF::String"* dereferenceable(8), %"class.mojo::Remote"* dereferenceable(48)) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.WTF::HashTable.240", %"class.WTF::HashTable.240"* %0, i64 0, i32 0
  %5 = load %"struct.WTF::KeyValuePair.243"*, %"struct.WTF::KeyValuePair.243"** %4, align 8
  %6 = icmp eq %"struct.WTF::KeyValuePair.243"* %5, null
  br i1 %6, label %7, label %10

7:                                                ; preds = %3
  %8 = tail call %"struct.WTF::KeyValuePair.243"* @_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_N4mojo6RemoteIN5blink5mojom5blink12CacheStorageEEEEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENSE_IS9_EEEESF_NS_18PartitionAllocatorEE6ExpandEPSA_(%"class.WTF::HashTable.240"* %0, %"struct.WTF::KeyValuePair.243"* null)
  %9 = load %"struct.WTF::KeyValuePair.243"*, %"struct.WTF::KeyValuePair.243"** %4, align 8
  br label %10

10:                                               ; preds = %3, %7
  %11 = phi %"struct.WTF::KeyValuePair.243"* [ %5, %3 ], [ %9, %7 ]
  %12 = getelementptr inbounds %"class.WTF::HashTable.240", %"class.WTF::HashTable.240"* %0, i64 0, i32 1
  %13 = load i32, i32* %12, align 8
  %14 = add i32 %13, -1
  %15 = zext i32 %14 to i64
  %16 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %1, i64 0, i32 0, i32 0
  %17 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %16, align 8
  %18 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %17, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %19 = load atomic i32, i32* %18 monotonic, align 4
  %20 = lshr i32 %19, 8
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %22, label %24

22:                                               ; preds = %10
  %23 = tail call i32 @_ZNK3WTF10StringImpl12HashSlowCaseEv(%"class.WTF::StringImpl"* %17) #16
  br label %24

24:                                               ; preds = %10, %22
  %25 = phi i32 [ %23, %22 ], [ %20, %10 ]
  %26 = and i32 %25, %14
  %27 = zext i32 %26 to i64
  %28 = getelementptr inbounds %"struct.WTF::KeyValuePair.243", %"struct.WTF::KeyValuePair.243"* %11, i64 %27
  %29 = getelementptr inbounds %"struct.WTF::KeyValuePair.243", %"struct.WTF::KeyValuePair.243"* %28, i64 0, i32 0, i32 0, i32 0
  %30 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %29, align 8
  %31 = icmp eq %"class.WTF::StringImpl"* %30, null
  br i1 %31, label %77, label %32

32:                                               ; preds = %24
  %33 = xor i32 %25, -1
  %34 = lshr i32 %25, 23
  %35 = add i32 %34, %33
  %36 = shl i32 %35, 12
  %37 = xor i32 %36, %35
  %38 = lshr i32 %37, 7
  %39 = xor i32 %38, %37
  %40 = shl i32 %39, 2
  %41 = xor i32 %40, %39
  %42 = lshr i32 %41, 20
  %43 = xor i32 %42, %41
  %44 = or i32 %43, 1
  %45 = zext i32 %44 to i64
  br label %46

46:                                               ; preds = %32, %58
  %47 = phi %"struct.WTF::KeyValuePair.243"* [ %28, %32 ], [ %64, %58 ]
  %48 = phi %"struct.WTF::KeyValuePair.243"* [ null, %32 ], [ %59, %58 ]
  %49 = phi i64 [ %27, %32 ], [ %63, %58 ]
  %50 = phi i64 [ 0, %32 ], [ %61, %58 ]
  %51 = bitcast %"struct.WTF::KeyValuePair.243"* %47 to i8**
  %52 = load i8*, i8** %51, align 8
  %53 = icmp eq i8* %52, inttoptr (i64 -1 to i8*)
  br i1 %53, label %58, label %54

54:                                               ; preds = %46
  %55 = bitcast i8* %52 to %"class.WTF::StringImpl"*
  %56 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %16, align 8
  %57 = tail call zeroext i1 @_ZN3WTF12EqualNonNullEPKNS_10StringImplES2_(%"class.WTF::StringImpl"* %55, %"class.WTF::StringImpl"* %56) #16
  br i1 %57, label %138, label %58

58:                                               ; preds = %46, %54
  %59 = phi %"struct.WTF::KeyValuePair.243"* [ %48, %54 ], [ %47, %46 ]
  %60 = icmp eq i64 %50, 0
  %61 = select i1 %60, i64 %45, i64 %50
  %62 = add i64 %61, %49
  %63 = and i64 %62, %15
  %64 = getelementptr inbounds %"struct.WTF::KeyValuePair.243", %"struct.WTF::KeyValuePair.243"* %11, i64 %63
  %65 = getelementptr inbounds %"struct.WTF::KeyValuePair.243", %"struct.WTF::KeyValuePair.243"* %64, i64 0, i32 0, i32 0, i32 0
  %66 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %65, align 8
  %67 = icmp eq %"class.WTF::StringImpl"* %66, null
  br i1 %67, label %68, label %46

68:                                               ; preds = %58
  %69 = icmp eq %"struct.WTF::KeyValuePair.243"* %59, null
  br i1 %69, label %77, label %70

70:                                               ; preds = %68
  tail call void @_ZN3WTF26HashTableBucketInitializerILb0EE10InitializeINS_18HashMapValueTraitsINS_10HashTraitsINS_6StringEEENS4_IN4mojo6RemoteIN5blink5mojom5blink12CacheStorageEEEEEEENS_18PartitionAllocatorENS_12KeyValuePairIS5_SD_EEEEvRT1_(%"struct.WTF::KeyValuePair.243"* nonnull dereferenceable(56) %59) #16
  %71 = getelementptr inbounds %"class.WTF::HashTable.240", %"class.WTF::HashTable.240"* %0, i64 0, i32 3
  %72 = load i32, i32* %71, align 8
  %73 = add i32 %72, 2147483647
  %74 = and i32 %73, 2147483647
  %75 = and i32 %72, -2147483648
  %76 = or i32 %74, %75
  store i32 %76, i32* %71, align 8
  br label %77

77:                                               ; preds = %24, %68, %70
  %78 = phi %"struct.WTF::KeyValuePair.243"* [ %59, %70 ], [ %64, %68 ], [ %28, %24 ]
  %79 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %16, align 8
  %80 = icmp eq %"class.WTF::StringImpl"* %79, null
  br i1 %80, label %98, label %81

81:                                               ; preds = %77
  %82 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %79, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %83 = load atomic i32, i32* %82 monotonic, align 4
  %84 = and i32 %83, 2
  %85 = icmp eq i32 %84, 0
  br i1 %85, label %86, label %98

86:                                               ; preds = %81
  %87 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %79, i64 0, i32 0
  %88 = load i32, i32* %87, align 4
  %89 = zext i32 %88 to i33
  %90 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %89, i33 1) #16
  %91 = extractvalue { i33, i1 } %90, 1
  %92 = extractvalue { i33, i1 } %90, 0
  %93 = icmp slt i33 %92, 0
  %94 = or i1 %91, %93
  br i1 %94, label %95, label %96, !prof !3

95:                                               ; preds = %86
  tail call void @llvm.trap() #16
  unreachable

96:                                               ; preds = %86
  %97 = trunc i33 %92 to i32
  store i32 %97, i32* %87, align 4
  br label %98

98:                                               ; preds = %96, %81, %77
  %99 = ptrtoint %"class.WTF::StringImpl"* %79 to i64
  %100 = bitcast %"struct.WTF::KeyValuePair.243"* %78 to i64*
  %101 = getelementptr inbounds %"struct.WTF::KeyValuePair.243", %"struct.WTF::KeyValuePair.243"* %78, i64 0, i32 0, i32 0, i32 0
  %102 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %101, align 8
  store i64 %99, i64* %100, align 8
  %103 = icmp eq %"class.WTF::StringImpl"* %102, null
  br i1 %103, label %117, label %104

104:                                              ; preds = %98
  %105 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %102, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %106 = load atomic i32, i32* %105 monotonic, align 4
  %107 = and i32 %106, 2
  %108 = icmp eq i32 %107, 0
  %109 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %102, i64 0, i32 0
  %110 = load i32, i32* %109, align 4
  br i1 %108, label %111, label %113

111:                                              ; preds = %104
  %112 = add i32 %110, -1
  store i32 %112, i32* %109, align 4
  br label %113

113:                                              ; preds = %111, %104
  %114 = phi i32 [ %112, %111 ], [ %110, %104 ]
  %115 = icmp eq i32 %114, 0
  br i1 %115, label %116, label %117

116:                                              ; preds = %113
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %102) #16
  br label %117

117:                                              ; preds = %98, %113, %116
  %118 = getelementptr inbounds %"struct.WTF::KeyValuePair.243", %"struct.WTF::KeyValuePair.243"* %78, i64 0, i32 1
  %119 = getelementptr inbounds %"class.mojo::Remote", %"class.mojo::Remote"* %2, i64 0, i32 0, i32 1
  %120 = getelementptr inbounds %"struct.WTF::KeyValuePair.243", %"struct.WTF::KeyValuePair.243"* %78, i64 0, i32 1, i32 0, i32 1
  %121 = bitcast %"class.std::__1::unique_ptr.421"* %119 to i64*
  %122 = load i64, i64* %121, align 8
  %123 = bitcast %"class.std::__1::unique_ptr.421"* %120 to i64*
  %124 = load i64, i64* %123, align 8
  store i64 %124, i64* %121, align 8
  store i64 %122, i64* %123, align 8
  %125 = bitcast %"class.mojo::Remote"* %118 to %"class.mojo::internal::InterfacePtrStateBase"*
  %126 = bitcast %"class.mojo::Remote"* %2 to %"class.mojo::internal::InterfacePtrStateBase"*
  tail call void @_ZN4mojo8internal21InterfacePtrStateBase4SwapEPS1_(%"class.mojo::internal::InterfacePtrStateBase"* %125, %"class.mojo::internal::InterfacePtrStateBase"* %126) #16
  %127 = getelementptr inbounds %"class.WTF::HashTable.240", %"class.WTF::HashTable.240"* %0, i64 0, i32 2
  %128 = load i32, i32* %127, align 4
  %129 = add i32 %128, 1
  store i32 %129, i32* %127, align 4
  %130 = getelementptr inbounds %"class.WTF::HashTable.240", %"class.WTF::HashTable.240"* %0, i64 0, i32 3
  %131 = load i32, i32* %130, align 8
  %132 = add i32 %131, %129
  %133 = shl i32 %132, 1
  %134 = load i32, i32* %12, align 8
  %135 = icmp ult i32 %133, %134
  br i1 %135, label %138, label %136

136:                                              ; preds = %117
  %137 = tail call %"struct.WTF::KeyValuePair.243"* @_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_N4mojo6RemoteIN5blink5mojom5blink12CacheStorageEEEEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENSE_IS9_EEEESF_NS_18PartitionAllocatorEE6ExpandEPSA_(%"class.WTF::HashTable.240"* %0, %"struct.WTF::KeyValuePair.243"* %78)
  br label %138

138:                                              ; preds = %54, %117, %136
  %139 = phi i8 [ 1, %117 ], [ 1, %136 ], [ 0, %54 ]
  %140 = phi %"struct.WTF::KeyValuePair.243"* [ %78, %117 ], [ %137, %136 ], [ %47, %54 ]
  %141 = insertvalue { %"struct.WTF::KeyValuePair.243"*, i8 } undef, %"struct.WTF::KeyValuePair.243"* %140, 0
  %142 = insertvalue { %"struct.WTF::KeyValuePair.243"*, i8 } %141, i8 %139, 1
  ret { %"struct.WTF::KeyValuePair.243"*, i8 } %142
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.WTF::KeyValuePair.243"* @_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_N4mojo6RemoteIN5blink5mojom5blink12CacheStorageEEEEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENSE_IS9_EEEESF_NS_18PartitionAllocatorEE6ExpandEPSA_(%"class.WTF::HashTable.240"*, %"struct.WTF::KeyValuePair.243"*) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = getelementptr inbounds %"class.WTF::HashTable.240", %"class.WTF::HashTable.240"* %0, i64 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %31, label %9

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"class.WTF::HashTable.240", %"class.WTF::HashTable.240"* %0, i64 0, i32 2
  %11 = load i32, i32* %10, align 4
  %12 = mul i32 %11, 6
  %13 = shl i32 %7, 1
  %14 = icmp ult i32 %12, %13
  br i1 %14, label %31, label %15

15:                                               ; preds = %9
  %16 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %16) #16
  %17 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %17, align 8
  %18 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %18)
  %19 = icmp ugt i32 %13, %7
  br i1 %19, label %20, label %21

20:                                               ; preds = %15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18)
  store i8* null, i8** %17, align 8
  br label %30

21:                                               ; preds = %15
  %22 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %13) #16
  %23 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %7) #16
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.13, i64 0, i64 0), i8* %22, i8* %23) #16
  %24 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %25 = load i8*, i8** %24, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18)
  store i8* %25, i8** %17, align 8
  %26 = icmp eq i8* %25, null
  br i1 %26, label %30, label %27

27:                                               ; preds = %21
  %28 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %28) #16
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.14, i64 0, i64 0), i32 1783, %"class.logging::CheckOpResult"* nonnull %4) #16
  %29 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #16
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %28) #16
  br label %30

30:                                               ; preds = %20, %21, %27
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16) #16
  br label %31

31:                                               ; preds = %9, %2, %30
  %32 = phi i32 [ %13, %30 ], [ 8, %2 ], [ %7, %9 ]
  %33 = zext i32 %32 to i64
  %34 = mul nuw nsw i64 %33, 56
  %35 = call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %34, i8* getelementptr inbounds ([128 x i8], [128 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_12KeyValuePairINS_6StringEN4mojo6RemoteIN5blink5mojom5blink12CacheStorageEEEEEEEPKcv, i64 0, i64 0)) #16
  %36 = bitcast i8* %35 to %"struct.WTF::KeyValuePair.243"*
  %37 = icmp eq i32 %32, 0
  br i1 %37, label %43, label %38

38:                                               ; preds = %31, %38
  %39 = phi i64 [ %41, %38 ], [ 0, %31 ]
  %40 = getelementptr inbounds %"struct.WTF::KeyValuePair.243", %"struct.WTF::KeyValuePair.243"* %36, i64 %39
  call void @_ZN3WTF26HashTableBucketInitializerILb0EE10InitializeINS_18HashMapValueTraitsINS_10HashTraitsINS_6StringEEENS4_IN4mojo6RemoteIN5blink5mojom5blink12CacheStorageEEEEEEENS_18PartitionAllocatorENS_12KeyValuePairIS5_SD_EEEEvRT1_(%"struct.WTF::KeyValuePair.243"* dereferenceable(56) %40) #16
  %41 = add nuw nsw i64 %39, 1
  %42 = icmp eq i64 %41, %33
  br i1 %42, label %43, label %38

43:                                               ; preds = %38, %31
  %44 = call %"struct.WTF::KeyValuePair.243"* @_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_N4mojo6RemoteIN5blink5mojom5blink12CacheStorageEEEEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENSE_IS9_EEEESF_NS_18PartitionAllocatorEE8RehashToEPSA_jSK_(%"class.WTF::HashTable.240"* %0, %"struct.WTF::KeyValuePair.243"* %36, i32 %32, %"struct.WTF::KeyValuePair.243"* %1) #16
  ret %"struct.WTF::KeyValuePair.243"* %44
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.WTF::KeyValuePair.243"* @_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_N4mojo6RemoteIN5blink5mojom5blink12CacheStorageEEEEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENSE_IS9_EEEESF_NS_18PartitionAllocatorEE8RehashToEPSA_jSK_(%"class.WTF::HashTable.240"*, %"struct.WTF::KeyValuePair.243"*, i32, %"struct.WTF::KeyValuePair.243"*) local_unnamed_addr #0 comdat align 2 {
  %5 = alloca %"class.WTF::HashTable.240", align 8
  %6 = bitcast %"class.WTF::HashTable.240"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %6) #16
  %7 = getelementptr inbounds %"class.WTF::HashTable.240", %"class.WTF::HashTable.240"* %5, i64 0, i32 0
  %8 = getelementptr inbounds %"class.WTF::HashTable.240", %"class.WTF::HashTable.240"* %5, i64 0, i32 1
  %9 = getelementptr inbounds %"class.WTF::HashTable.240", %"class.WTF::HashTable.240"* %5, i64 0, i32 2
  %10 = getelementptr inbounds %"class.WTF::HashTable.240", %"class.WTF::HashTable.240"* %5, i64 0, i32 3
  %11 = bitcast %"class.WTF::HashTable.240"* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %11, i8 -86, i64 24, i1 false)
  store %"struct.WTF::KeyValuePair.243"* %1, %"struct.WTF::KeyValuePair.243"** %7, align 8
  store i32 %2, i32* %8, align 8
  store i32 0, i32* %9, align 4
  store i32 0, i32* %10, align 8
  %12 = getelementptr inbounds %"class.WTF::HashTable.240", %"class.WTF::HashTable.240"* %0, i64 0, i32 1
  %13 = load i32, i32* %12, align 8
  %14 = icmp eq i32 %13, 0
  %15 = getelementptr inbounds %"class.WTF::HashTable.240", %"class.WTF::HashTable.240"* %0, i64 0, i32 0
  br i1 %14, label %16, label %21

16:                                               ; preds = %4
  %17 = ptrtoint %"struct.WTF::KeyValuePair.243"* %1 to i64
  %18 = bitcast %"class.WTF::HashTable.240"* %0 to i64*
  %19 = load i64, i64* %18, align 8
  %20 = bitcast %"class.WTF::HashTable.240"* %5 to i64*
  br label %28

21:                                               ; preds = %4
  %22 = load %"struct.WTF::KeyValuePair.243"*, %"struct.WTF::KeyValuePair.243"** %15, align 8
  %23 = ptrtoint %"struct.WTF::KeyValuePair.243"* %22 to i64
  br label %84

24:                                               ; preds = %104
  %25 = bitcast %"class.WTF::HashTable.240"* %5 to i64*
  %26 = load i64, i64* %25, align 8
  %27 = bitcast %"class.WTF::HashTable.240"* %0 to i64*
  br label %28

28:                                               ; preds = %16, %24
  %29 = phi i64* [ %20, %16 ], [ %25, %24 ]
  %30 = phi i64* [ %18, %16 ], [ %27, %24 ]
  %31 = phi i64 [ %17, %16 ], [ %26, %24 ]
  %32 = phi i64 [ %19, %16 ], [ %105, %24 ]
  %33 = phi %"struct.WTF::KeyValuePair.243"* [ null, %16 ], [ %108, %24 ]
  %34 = phi i32 [ 0, %16 ], [ %106, %24 ]
  store atomic i64 %31, i64* %30 monotonic, align 8
  store i32 %2, i32* %12, align 8
  store i64 %32, i64* %29, align 8
  store i32 %34, i32* %8, align 8
  %35 = inttoptr i64 %32 to %"struct.WTF::KeyValuePair.243"*
  %36 = icmp eq i64 %32, 0
  br i1 %36, label %80, label %37

37:                                               ; preds = %28
  %38 = icmp eq i32 %34, 0
  br i1 %38, label %78, label %39

39:                                               ; preds = %37
  %40 = zext i32 %34 to i64
  br label %41

41:                                               ; preds = %75, %39
  %42 = phi i64 [ 0, %39 ], [ %76, %75 ]
  %43 = getelementptr inbounds %"struct.WTF::KeyValuePair.243", %"struct.WTF::KeyValuePair.243"* %35, i64 %42
  %44 = bitcast %"struct.WTF::KeyValuePair.243"* %43 to i8**
  %45 = load i8*, i8** %44, align 8
  %46 = icmp eq i8* %45, inttoptr (i64 -1 to i8*)
  br i1 %46, label %75, label %47

47:                                               ; preds = %41
  %48 = getelementptr inbounds %"struct.WTF::KeyValuePair.243", %"struct.WTF::KeyValuePair.243"* %35, i64 %42, i32 1
  %49 = getelementptr inbounds %"struct.WTF::KeyValuePair.243", %"struct.WTF::KeyValuePair.243"* %35, i64 %42, i32 1, i32 0, i32 1, i32 0, i32 0, i32 0
  %50 = load %"class.blink::mojom::blink::CacheStorageProxy"*, %"class.blink::mojom::blink::CacheStorageProxy"** %49, align 8
  store %"class.blink::mojom::blink::CacheStorageProxy"* null, %"class.blink::mojom::blink::CacheStorageProxy"** %49, align 8
  %51 = icmp eq %"class.blink::mojom::blink::CacheStorageProxy"* %50, null
  br i1 %51, label %57, label %52

52:                                               ; preds = %47
  %53 = bitcast %"class.blink::mojom::blink::CacheStorageProxy"* %50 to void (%"class.blink::mojom::blink::CacheStorageProxy"*)***
  %54 = load void (%"class.blink::mojom::blink::CacheStorageProxy"*)**, void (%"class.blink::mojom::blink::CacheStorageProxy"*)*** %53, align 8
  %55 = getelementptr inbounds void (%"class.blink::mojom::blink::CacheStorageProxy"*)*, void (%"class.blink::mojom::blink::CacheStorageProxy"*)** %54, i64 1
  %56 = load void (%"class.blink::mojom::blink::CacheStorageProxy"*)*, void (%"class.blink::mojom::blink::CacheStorageProxy"*)** %55, align 8
  call void %56(%"class.blink::mojom::blink::CacheStorageProxy"* nonnull %50) #16
  br label %57

57:                                               ; preds = %52, %47
  %58 = bitcast %"class.mojo::Remote"* %48 to %"class.mojo::internal::InterfacePtrStateBase"*
  call void @_ZN4mojo8internal21InterfacePtrStateBaseD2Ev(%"class.mojo::internal::InterfacePtrStateBase"* %58) #16
  %59 = getelementptr inbounds %"struct.WTF::KeyValuePair.243", %"struct.WTF::KeyValuePair.243"* %43, i64 0, i32 0, i32 0, i32 0
  %60 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %59, align 8
  %61 = icmp eq %"class.WTF::StringImpl"* %60, null
  br i1 %61, label %75, label %62

62:                                               ; preds = %57
  %63 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %60, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %64 = load atomic i32, i32* %63 monotonic, align 4
  %65 = and i32 %64, 2
  %66 = icmp eq i32 %65, 0
  %67 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %60, i64 0, i32 0
  %68 = load i32, i32* %67, align 4
  br i1 %66, label %69, label %71

69:                                               ; preds = %62
  %70 = add i32 %68, -1
  store i32 %70, i32* %67, align 4
  br label %71

71:                                               ; preds = %69, %62
  %72 = phi i32 [ %70, %69 ], [ %68, %62 ]
  %73 = icmp eq i32 %72, 0
  br i1 %73, label %74, label %75

74:                                               ; preds = %71
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %60) #16
  br label %75

75:                                               ; preds = %74, %71, %57, %41
  %76 = add nuw nsw i64 %42, 1
  %77 = icmp eq i64 %76, %40
  br i1 %77, label %78, label %41

78:                                               ; preds = %75, %37
  %79 = inttoptr i64 %32 to i8*
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %79) #16
  store atomic i64 0, i64* %29 monotonic, align 8
  store i32 0, i32* %8, align 8
  store i32 0, i32* %9, align 4
  br label %80

80:                                               ; preds = %28, %78
  %81 = getelementptr inbounds %"class.WTF::HashTable.240", %"class.WTF::HashTable.240"* %0, i64 0, i32 3
  %82 = load i32, i32* %81, align 8
  %83 = and i32 %82, -2147483648
  store i32 %83, i32* %81, align 8
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %6) #16
  ret %"struct.WTF::KeyValuePair.243"* %33

84:                                               ; preds = %21, %104
  %85 = phi i64 [ %105, %104 ], [ %23, %21 ]
  %86 = phi i32 [ %106, %104 ], [ %13, %21 ]
  %87 = phi %"struct.WTF::KeyValuePair.243"* [ %107, %104 ], [ %22, %21 ]
  %88 = phi %"struct.WTF::KeyValuePair.243"* [ %108, %104 ], [ null, %21 ]
  %89 = phi i32 [ %109, %104 ], [ 0, %21 ]
  %90 = zext i32 %89 to i64
  %91 = getelementptr inbounds %"struct.WTF::KeyValuePair.243", %"struct.WTF::KeyValuePair.243"* %87, i64 %90
  %92 = bitcast %"struct.WTF::KeyValuePair.243"* %91 to i64*
  %93 = load i64, i64* %92, align 8
  switch i64 %93, label %94 [
    i64 -1, label %104
    i64 0, label %104
  ]

94:                                               ; preds = %84
  %95 = getelementptr inbounds %"struct.WTF::KeyValuePair.243", %"struct.WTF::KeyValuePair.243"* %91, i64 0, i32 0
  %96 = call { %"struct.WTF::KeyValuePair.243"*, i8 } @_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_N4mojo6RemoteIN5blink5mojom5blink12CacheStorageEEEEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENSE_IS9_EEEESF_NS_18PartitionAllocatorEE16LookupForWritingERKS1_(%"class.WTF::HashTable.240"* nonnull %5, %"class.WTF::String"* dereferenceable(8) %95) #16
  %97 = extractvalue { %"struct.WTF::KeyValuePair.243"*, i8 } %96, 0
  call void @_ZN3WTF5MoverINS_12KeyValuePairINS_6StringEN4mojo6RemoteIN5blink5mojom5blink12CacheStorageEEEEENS_18PartitionAllocatorENS_18HashMapValueTraitsINS_10HashTraitsIS2_EENSD_IS9_EEEELb1EE4MoveEOSA_RSA_(%"struct.WTF::KeyValuePair.243"* dereferenceable(56) %91, %"struct.WTF::KeyValuePair.243"* dereferenceable(56) %97) #16
  %98 = load %"struct.WTF::KeyValuePair.243"*, %"struct.WTF::KeyValuePair.243"** %15, align 8
  %99 = getelementptr inbounds %"struct.WTF::KeyValuePair.243", %"struct.WTF::KeyValuePair.243"* %98, i64 %90
  %100 = icmp eq %"struct.WTF::KeyValuePair.243"* %99, %3
  %101 = select i1 %100, %"struct.WTF::KeyValuePair.243"* %97, %"struct.WTF::KeyValuePair.243"* %88
  %102 = load i32, i32* %12, align 8
  %103 = ptrtoint %"struct.WTF::KeyValuePair.243"* %98 to i64
  br label %104

104:                                              ; preds = %84, %84, %94
  %105 = phi i64 [ %85, %84 ], [ %103, %94 ], [ %85, %84 ]
  %106 = phi i32 [ %86, %84 ], [ %102, %94 ], [ %86, %84 ]
  %107 = phi %"struct.WTF::KeyValuePair.243"* [ %87, %84 ], [ %98, %94 ], [ %87, %84 ]
  %108 = phi %"struct.WTF::KeyValuePair.243"* [ %88, %84 ], [ %101, %94 ], [ %88, %84 ]
  %109 = add i32 %89, 1
  %110 = icmp eq i32 %109, %106
  br i1 %110, label %24, label %84
}

declare i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64, i8*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF26HashTableBucketInitializerILb0EE10InitializeINS_18HashMapValueTraitsINS_10HashTraitsINS_6StringEEENS4_IN4mojo6RemoteIN5blink5mojom5blink12CacheStorageEEEEEEENS_18PartitionAllocatorENS_12KeyValuePairIS5_SD_EEEEvRT1_(%"struct.WTF::KeyValuePair.243"* dereferenceable(56)) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.mojo::Remote", align 8
  %3 = alloca %"struct.WTF::KeyValuePair.243", align 8
  %4 = bitcast %"struct.WTF::KeyValuePair.243"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %4) #16
  %5 = bitcast %"class.mojo::Remote"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %5) #16, !noalias !69
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %5, i8 0, i64 48, i1 false) #16, !alias.scope !72, !noalias !69
  %6 = bitcast %"class.mojo::Remote"* %2 to %"class.mojo::internal::InterfacePtrStateBase"*
  call void @_ZN4mojo8internal21InterfacePtrStateBaseC2Ev(%"class.mojo::internal::InterfacePtrStateBase"* nonnull %6) #16, !noalias !69
  %7 = getelementptr inbounds %"class.mojo::Remote", %"class.mojo::Remote"* %2, i64 0, i32 0, i32 1
  %8 = bitcast %"class.std::__1::unique_ptr.421"* %7 to i64*
  store i64 0, i64* %8, align 8, !alias.scope !72, !noalias !69
  %9 = bitcast %"struct.WTF::KeyValuePair.243"* %3 to i64*
  store i64 0, i64* %9, align 8, !alias.scope !69
  %10 = getelementptr inbounds %"struct.WTF::KeyValuePair.243", %"struct.WTF::KeyValuePair.243"* %3, i64 0, i32 1
  %11 = bitcast %"class.mojo::Remote"* %10 to %"class.mojo::internal::InterfacePtrStateBase"*
  call void @_ZN4mojo8internal21InterfacePtrStateBaseC2Ev(%"class.mojo::internal::InterfacePtrStateBase"* %11) #16
  %12 = getelementptr inbounds %"struct.WTF::KeyValuePair.243", %"struct.WTF::KeyValuePair.243"* %3, i64 0, i32 1, i32 0, i32 1
  %13 = bitcast %"class.std::__1::unique_ptr.421"* %12 to i64*
  %14 = load i64, i64* %8, align 8, !noalias !69
  store i64 0, i64* %8, align 8, !noalias !69
  store i64 %14, i64* %13, align 8, !alias.scope !69
  call void @_ZN4mojo8internal21InterfacePtrStateBase4SwapEPS1_(%"class.mojo::internal::InterfacePtrStateBase"* %11, %"class.mojo::internal::InterfacePtrStateBase"* nonnull %6) #16
  %15 = getelementptr inbounds %"class.mojo::Remote", %"class.mojo::Remote"* %2, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %16 = load %"class.blink::mojom::blink::CacheStorageProxy"*, %"class.blink::mojom::blink::CacheStorageProxy"** %15, align 8, !noalias !69
  store %"class.blink::mojom::blink::CacheStorageProxy"* null, %"class.blink::mojom::blink::CacheStorageProxy"** %15, align 8, !noalias !69
  %17 = icmp eq %"class.blink::mojom::blink::CacheStorageProxy"* %16, null
  br i1 %17, label %23, label %18

18:                                               ; preds = %1
  %19 = bitcast %"class.blink::mojom::blink::CacheStorageProxy"* %16 to void (%"class.blink::mojom::blink::CacheStorageProxy"*)***
  %20 = load void (%"class.blink::mojom::blink::CacheStorageProxy"*)**, void (%"class.blink::mojom::blink::CacheStorageProxy"*)*** %19, align 8
  %21 = getelementptr inbounds void (%"class.blink::mojom::blink::CacheStorageProxy"*)*, void (%"class.blink::mojom::blink::CacheStorageProxy"*)** %20, i64 1
  %22 = load void (%"class.blink::mojom::blink::CacheStorageProxy"*)*, void (%"class.blink::mojom::blink::CacheStorageProxy"*)** %21, align 8
  call void %22(%"class.blink::mojom::blink::CacheStorageProxy"* nonnull %16) #16
  br label %23

23:                                               ; preds = %1, %18
  call void @_ZN4mojo8internal21InterfacePtrStateBaseD2Ev(%"class.mojo::internal::InterfacePtrStateBase"* nonnull %6) #16
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %5) #16, !noalias !69
  %24 = getelementptr inbounds %"struct.WTF::KeyValuePair.243", %"struct.WTF::KeyValuePair.243"* %3, i64 0, i32 0, i32 0, i32 0
  %25 = load i64, i64* %9, align 8
  %26 = bitcast %"struct.WTF::KeyValuePair.243"* %0 to i64*
  store i64 %25, i64* %26, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %24, align 8
  %27 = getelementptr inbounds %"struct.WTF::KeyValuePair.243", %"struct.WTF::KeyValuePair.243"* %0, i64 0, i32 1
  %28 = bitcast %"class.mojo::Remote"* %27 to %"class.mojo::internal::InterfacePtrStateBase"*
  call void @_ZN4mojo8internal21InterfacePtrStateBaseC2Ev(%"class.mojo::internal::InterfacePtrStateBase"* %28) #16
  %29 = getelementptr inbounds %"struct.WTF::KeyValuePair.243", %"struct.WTF::KeyValuePair.243"* %0, i64 0, i32 1, i32 0, i32 1
  %30 = bitcast %"class.std::__1::unique_ptr.421"* %29 to i64*
  %31 = load i64, i64* %13, align 8
  store i64 0, i64* %13, align 8
  store i64 %31, i64* %30, align 8
  call void @_ZN4mojo8internal21InterfacePtrStateBase4SwapEPS1_(%"class.mojo::internal::InterfacePtrStateBase"* %28, %"class.mojo::internal::InterfacePtrStateBase"* %11) #16
  %32 = getelementptr inbounds %"struct.WTF::KeyValuePair.243", %"struct.WTF::KeyValuePair.243"* %3, i64 0, i32 1, i32 0, i32 1, i32 0, i32 0, i32 0
  %33 = load %"class.blink::mojom::blink::CacheStorageProxy"*, %"class.blink::mojom::blink::CacheStorageProxy"** %32, align 8
  store %"class.blink::mojom::blink::CacheStorageProxy"* null, %"class.blink::mojom::blink::CacheStorageProxy"** %32, align 8
  %34 = icmp eq %"class.blink::mojom::blink::CacheStorageProxy"* %33, null
  br i1 %34, label %40, label %35

35:                                               ; preds = %23
  %36 = bitcast %"class.blink::mojom::blink::CacheStorageProxy"* %33 to void (%"class.blink::mojom::blink::CacheStorageProxy"*)***
  %37 = load void (%"class.blink::mojom::blink::CacheStorageProxy"*)**, void (%"class.blink::mojom::blink::CacheStorageProxy"*)*** %36, align 8
  %38 = getelementptr inbounds void (%"class.blink::mojom::blink::CacheStorageProxy"*)*, void (%"class.blink::mojom::blink::CacheStorageProxy"*)** %37, i64 1
  %39 = load void (%"class.blink::mojom::blink::CacheStorageProxy"*)*, void (%"class.blink::mojom::blink::CacheStorageProxy"*)** %38, align 8
  call void %39(%"class.blink::mojom::blink::CacheStorageProxy"* nonnull %33) #16
  br label %40

40:                                               ; preds = %35, %23
  call void @_ZN4mojo8internal21InterfacePtrStateBaseD2Ev(%"class.mojo::internal::InterfacePtrStateBase"* %11) #16
  %41 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %24, align 8
  %42 = icmp eq %"class.WTF::StringImpl"* %41, null
  br i1 %42, label %56, label %43

43:                                               ; preds = %40
  %44 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %41, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %45 = load atomic i32, i32* %44 monotonic, align 4
  %46 = and i32 %45, 2
  %47 = icmp eq i32 %46, 0
  %48 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %41, i64 0, i32 0
  %49 = load i32, i32* %48, align 4
  br i1 %47, label %50, label %52

50:                                               ; preds = %43
  %51 = add i32 %49, -1
  store i32 %51, i32* %48, align 4
  br label %52

52:                                               ; preds = %50, %43
  %53 = phi i32 [ %51, %50 ], [ %49, %43 ]
  %54 = icmp eq i32 %53, 0
  br i1 %54, label %55, label %56

55:                                               ; preds = %52
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %41) #16
  br label %56

56:                                               ; preds = %40, %52, %55
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %4) #16
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.WTF::KeyValuePair.243"*, i8 } @_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_N4mojo6RemoteIN5blink5mojom5blink12CacheStorageEEEEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENSE_IS9_EEEESF_NS_18PartitionAllocatorEE16LookupForWritingERKS1_(%"class.WTF::HashTable.240"*, %"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::HashTable.240", %"class.WTF::HashTable.240"* %0, i64 0, i32 0
  %4 = load %"struct.WTF::KeyValuePair.243"*, %"struct.WTF::KeyValuePair.243"** %3, align 8
  %5 = getelementptr inbounds %"class.WTF::HashTable.240", %"class.WTF::HashTable.240"* %0, i64 0, i32 1
  %6 = load i32, i32* %5, align 8
  %7 = add i32 %6, -1
  %8 = zext i32 %7 to i64
  %9 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %1, i64 0, i32 0, i32 0
  %10 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %9, align 8
  %11 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %10, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %12 = load atomic i32, i32* %11 monotonic, align 4
  %13 = lshr i32 %12, 8
  %14 = icmp eq i32 %13, 0
  br i1 %14, label %15, label %17

15:                                               ; preds = %2
  %16 = tail call i32 @_ZNK3WTF10StringImpl12HashSlowCaseEv(%"class.WTF::StringImpl"* %10) #16
  br label %17

17:                                               ; preds = %15, %2
  %18 = phi i32 [ %16, %15 ], [ %13, %2 ]
  %19 = and i32 %18, %7
  %20 = zext i32 %19 to i64
  %21 = getelementptr inbounds %"struct.WTF::KeyValuePair.243", %"struct.WTF::KeyValuePair.243"* %4, i64 %20
  %22 = ptrtoint %"struct.WTF::KeyValuePair.243"* %21 to i64
  %23 = getelementptr inbounds %"struct.WTF::KeyValuePair.243", %"struct.WTF::KeyValuePair.243"* %21, i64 0, i32 0, i32 0, i32 0
  %24 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %23, align 8
  %25 = icmp eq %"class.WTF::StringImpl"* %24, null
  br i1 %25, label %42, label %26

26:                                               ; preds = %17
  %27 = xor i32 %18, -1
  %28 = lshr i32 %18, 23
  %29 = add i32 %28, %27
  %30 = shl i32 %29, 12
  %31 = xor i32 %30, %29
  %32 = lshr i32 %31, 7
  %33 = xor i32 %32, %31
  %34 = shl i32 %33, 2
  %35 = xor i32 %34, %33
  %36 = lshr i32 %35, 20
  %37 = xor i32 %36, %35
  %38 = or i32 %37, 1
  %39 = zext i32 %38 to i64
  br label %48

40:                                               ; preds = %61
  %41 = ptrtoint %"struct.WTF::KeyValuePair.243"* %67 to i64
  br label %42

42:                                               ; preds = %40, %17
  %43 = phi i64 [ %22, %17 ], [ %41, %40 ]
  %44 = phi %"struct.WTF::KeyValuePair.243"* [ null, %17 ], [ %62, %40 ]
  %45 = icmp eq %"struct.WTF::KeyValuePair.243"* %44, null
  %46 = ptrtoint %"struct.WTF::KeyValuePair.243"* %44 to i64
  %47 = select i1 %45, i64 %43, i64 %46
  br label %72

48:                                               ; preds = %61, %26
  %49 = phi %"struct.WTF::KeyValuePair.243"* [ null, %26 ], [ %62, %61 ]
  %50 = phi i64 [ %22, %26 ], [ %68, %61 ]
  %51 = phi %"struct.WTF::KeyValuePair.243"* [ %21, %26 ], [ %67, %61 ]
  %52 = phi i64 [ %20, %26 ], [ %66, %61 ]
  %53 = phi i64 [ 0, %26 ], [ %64, %61 ]
  %54 = bitcast %"struct.WTF::KeyValuePair.243"* %51 to i8**
  %55 = load i8*, i8** %54, align 8
  %56 = icmp eq i8* %55, inttoptr (i64 -1 to i8*)
  br i1 %56, label %61, label %57

57:                                               ; preds = %48
  %58 = bitcast i8* %55 to %"class.WTF::StringImpl"*
  %59 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %9, align 8
  %60 = tail call zeroext i1 @_ZN3WTF12EqualNonNullEPKNS_10StringImplES2_(%"class.WTF::StringImpl"* %58, %"class.WTF::StringImpl"* %59) #16
  br i1 %60, label %72, label %61

61:                                               ; preds = %57, %48
  %62 = phi %"struct.WTF::KeyValuePair.243"* [ %49, %57 ], [ %51, %48 ]
  %63 = icmp eq i64 %53, 0
  %64 = select i1 %63, i64 %39, i64 %53
  %65 = add i64 %64, %52
  %66 = and i64 %65, %8
  %67 = getelementptr inbounds %"struct.WTF::KeyValuePair.243", %"struct.WTF::KeyValuePair.243"* %4, i64 %66
  %68 = ptrtoint %"struct.WTF::KeyValuePair.243"* %67 to i64
  %69 = getelementptr inbounds %"struct.WTF::KeyValuePair.243", %"struct.WTF::KeyValuePair.243"* %67, i64 0, i32 0, i32 0, i32 0
  %70 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %69, align 8
  %71 = icmp eq %"class.WTF::StringImpl"* %70, null
  br i1 %71, label %40, label %48

72:                                               ; preds = %57, %42
  %73 = phi i64 [ %47, %42 ], [ %50, %57 ]
  %74 = phi i8 [ 0, %42 ], [ 1, %57 ]
  %75 = inttoptr i64 %73 to %"struct.WTF::KeyValuePair.243"*
  %76 = insertvalue { %"struct.WTF::KeyValuePair.243"*, i8 } undef, %"struct.WTF::KeyValuePair.243"* %75, 0
  %77 = insertvalue { %"struct.WTF::KeyValuePair.243"*, i8 } %76, i8 %74, 1
  ret { %"struct.WTF::KeyValuePair.243"*, i8 } %77
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF5MoverINS_12KeyValuePairINS_6StringEN4mojo6RemoteIN5blink5mojom5blink12CacheStorageEEEEENS_18PartitionAllocatorENS_18HashMapValueTraitsINS_10HashTraitsIS2_EENSD_IS9_EEEELb1EE4MoveEOSA_RSA_(%"struct.WTF::KeyValuePair.243"* dereferenceable(56), %"struct.WTF::KeyValuePair.243"* dereferenceable(56)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"struct.WTF::KeyValuePair.243", %"struct.WTF::KeyValuePair.243"* %1, i64 0, i32 1
  %4 = getelementptr inbounds %"struct.WTF::KeyValuePair.243", %"struct.WTF::KeyValuePair.243"* %1, i64 0, i32 1, i32 0, i32 1, i32 0, i32 0, i32 0
  %5 = load %"class.blink::mojom::blink::CacheStorageProxy"*, %"class.blink::mojom::blink::CacheStorageProxy"** %4, align 8
  store %"class.blink::mojom::blink::CacheStorageProxy"* null, %"class.blink::mojom::blink::CacheStorageProxy"** %4, align 8
  %6 = icmp eq %"class.blink::mojom::blink::CacheStorageProxy"* %5, null
  br i1 %6, label %12, label %7

7:                                                ; preds = %2
  %8 = bitcast %"class.blink::mojom::blink::CacheStorageProxy"* %5 to void (%"class.blink::mojom::blink::CacheStorageProxy"*)***
  %9 = load void (%"class.blink::mojom::blink::CacheStorageProxy"*)**, void (%"class.blink::mojom::blink::CacheStorageProxy"*)*** %8, align 8
  %10 = getelementptr inbounds void (%"class.blink::mojom::blink::CacheStorageProxy"*)*, void (%"class.blink::mojom::blink::CacheStorageProxy"*)** %9, i64 1
  %11 = load void (%"class.blink::mojom::blink::CacheStorageProxy"*)*, void (%"class.blink::mojom::blink::CacheStorageProxy"*)** %10, align 8
  tail call void %11(%"class.blink::mojom::blink::CacheStorageProxy"* nonnull %5) #16
  br label %12

12:                                               ; preds = %7, %2
  %13 = bitcast %"class.mojo::Remote"* %3 to %"class.mojo::internal::InterfacePtrStateBase"*
  tail call void @_ZN4mojo8internal21InterfacePtrStateBaseD2Ev(%"class.mojo::internal::InterfacePtrStateBase"* %13) #16
  %14 = getelementptr inbounds %"struct.WTF::KeyValuePair.243", %"struct.WTF::KeyValuePair.243"* %1, i64 0, i32 0, i32 0, i32 0
  %15 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %14, align 8
  %16 = icmp eq %"class.WTF::StringImpl"* %15, null
  br i1 %16, label %30, label %17

17:                                               ; preds = %12
  %18 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %15, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %19 = load atomic i32, i32* %18 monotonic, align 4
  %20 = and i32 %19, 2
  %21 = icmp eq i32 %20, 0
  %22 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %15, i64 0, i32 0
  %23 = load i32, i32* %22, align 4
  br i1 %21, label %24, label %26

24:                                               ; preds = %17
  %25 = add i32 %23, -1
  store i32 %25, i32* %22, align 4
  br label %26

26:                                               ; preds = %24, %17
  %27 = phi i32 [ %25, %24 ], [ %23, %17 ]
  %28 = icmp eq i32 %27, 0
  br i1 %28, label %29, label %30

29:                                               ; preds = %26
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %15) #16
  br label %30

30:                                               ; preds = %12, %26, %29
  %31 = getelementptr inbounds %"struct.WTF::KeyValuePair.243", %"struct.WTF::KeyValuePair.243"* %0, i64 0, i32 0, i32 0, i32 0
  %32 = bitcast %"struct.WTF::KeyValuePair.243"* %0 to i64*
  %33 = load i64, i64* %32, align 8
  %34 = bitcast %"struct.WTF::KeyValuePair.243"* %1 to i64*
  store i64 %33, i64* %34, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %31, align 8
  %35 = getelementptr inbounds %"struct.WTF::KeyValuePair.243", %"struct.WTF::KeyValuePair.243"* %0, i64 0, i32 1
  tail call void @_ZN4mojo8internal21InterfacePtrStateBaseC2Ev(%"class.mojo::internal::InterfacePtrStateBase"* %13) #16
  %36 = getelementptr inbounds %"struct.WTF::KeyValuePair.243", %"struct.WTF::KeyValuePair.243"* %1, i64 0, i32 1, i32 0, i32 1
  %37 = bitcast %"class.std::__1::unique_ptr.421"* %36 to i64*
  store i64 0, i64* %37, align 8
  %38 = getelementptr inbounds %"struct.WTF::KeyValuePair.243", %"struct.WTF::KeyValuePair.243"* %0, i64 0, i32 1, i32 0, i32 1
  %39 = bitcast %"class.std::__1::unique_ptr.421"* %38 to i64*
  %40 = load i64, i64* %39, align 8
  store i64 0, i64* %39, align 8
  store i64 %40, i64* %37, align 8
  %41 = bitcast %"class.mojo::Remote"* %35 to %"class.mojo::internal::InterfacePtrStateBase"*
  tail call void @_ZN4mojo8internal21InterfacePtrStateBase4SwapEPS1_(%"class.mojo::internal::InterfacePtrStateBase"* %13, %"class.mojo::internal::InterfacePtrStateBase"* %41) #16
  ret void
}

declare void @_ZN20trace_event_internal24UpdateTraceEventDurationEPKhPKcN4base11trace_event16TraceEventHandleE(i8*, i8*, i64) local_unnamed_addr #2

declare %"class.WTF::StringImpl"* @_ZNK3WTF6String9SubstringEjj(%"class.WTF::String"*, i32, i32) local_unnamed_addr #2

; Function Attrs: nofree nounwind readonly
declare i8* @memchr(i8*, i32, i64) local_unnamed_addr #9

; Function Attrs: noreturn nounwind
declare void @abort() local_unnamed_addr #10

declare void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"*, i8*, i64) unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN5blink5mojom5blink17CacheQueryOptionsD1Ev(%"class.blink::mojom::blink::CacheQueryOptions"*) unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN5blink5mojom5blink22MultiCacheQueryOptionsD1Ev(%"class.blink::mojom::blink::MultiCacheQueryOptions"*) unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN5blink5mojom5blink15FetchAPIRequestD1Ev(%"class.blink::mojom::blink::FetchAPIRequest"*) unnamed_addr #3

declare void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink14SecurityOriginD2Ev(%"class.blink::SecurityOrigin"*) unnamed_addr #11 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::SecurityOrigin", %"class.blink::SecurityOrigin"* %0, i64 0, i32 13, i32 0
  %3 = load %"class.blink::SecurityOrigin"*, %"class.blink::SecurityOrigin"** %2, align 8
  %4 = icmp eq %"class.blink::SecurityOrigin"* %3, null
  br i1 %4, label %12, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.blink::SecurityOrigin", %"class.blink::SecurityOrigin"* %3, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %6) #16
  %7 = getelementptr inbounds %"class.blink::SecurityOrigin", %"class.blink::SecurityOrigin"* %3, i64 0, i32 0, i32 0, i32 0, i32 0
  %8 = load i32, i32* %7, align 4
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %10, label %12

10:                                               ; preds = %5
  tail call void @_ZN5blink14SecurityOriginD2Ev(%"class.blink::SecurityOrigin"* nonnull %3) #16
  %11 = bitcast %"class.blink::SecurityOrigin"* %3 to i8*
  tail call void @free(i8* %11) #16
  br label %12

12:                                               ; preds = %5, %10, %1
  %13 = getelementptr inbounds %"class.blink::SecurityOrigin", %"class.blink::SecurityOrigin"* %0, i64 0, i32 3, i32 0, i32 0
  %14 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %13, align 8
  %15 = icmp eq %"class.WTF::StringImpl"* %14, null
  br i1 %15, label %29, label %16

16:                                               ; preds = %12
  %17 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %14, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %18 = load atomic i32, i32* %17 monotonic, align 4
  %19 = and i32 %18, 2
  %20 = icmp eq i32 %19, 0
  %21 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %14, i64 0, i32 0
  %22 = load i32, i32* %21, align 4
  br i1 %20, label %23, label %25

23:                                               ; preds = %16
  %24 = add i32 %22, -1
  store i32 %24, i32* %21, align 4
  br label %25

25:                                               ; preds = %23, %16
  %26 = phi i32 [ %24, %23 ], [ %22, %16 ]
  %27 = icmp eq i32 %26, 0
  br i1 %27, label %28, label %29

28:                                               ; preds = %25
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %14) #16
  br label %29

29:                                               ; preds = %12, %25, %28
  %30 = getelementptr inbounds %"class.blink::SecurityOrigin", %"class.blink::SecurityOrigin"* %0, i64 0, i32 2, i32 0, i32 0
  %31 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %30, align 8
  %32 = icmp eq %"class.WTF::StringImpl"* %31, null
  br i1 %32, label %46, label %33

33:                                               ; preds = %29
  %34 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %31, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %35 = load atomic i32, i32* %34 monotonic, align 4
  %36 = and i32 %35, 2
  %37 = icmp eq i32 %36, 0
  %38 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %31, i64 0, i32 0
  %39 = load i32, i32* %38, align 4
  br i1 %37, label %40, label %42

40:                                               ; preds = %33
  %41 = add i32 %39, -1
  store i32 %41, i32* %38, align 4
  br label %42

42:                                               ; preds = %40, %33
  %43 = phi i32 [ %41, %40 ], [ %39, %33 ]
  %44 = icmp eq i32 %43, 0
  br i1 %44, label %45, label %46

45:                                               ; preds = %42
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %31) #16
  br label %46

46:                                               ; preds = %29, %42, %45
  %47 = getelementptr inbounds %"class.blink::SecurityOrigin", %"class.blink::SecurityOrigin"* %0, i64 0, i32 1, i32 0, i32 0
  %48 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %47, align 8
  %49 = icmp eq %"class.WTF::StringImpl"* %48, null
  br i1 %49, label %63, label %50

50:                                               ; preds = %46
  %51 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %48, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %52 = load atomic i32, i32* %51 monotonic, align 4
  %53 = and i32 %52, 2
  %54 = icmp eq i32 %53, 0
  %55 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %48, i64 0, i32 0
  %56 = load i32, i32* %55, align 4
  br i1 %54, label %57, label %59

57:                                               ; preds = %50
  %58 = add i32 %56, -1
  store i32 %58, i32* %55, align 4
  br label %59

59:                                               ; preds = %57, %50
  %60 = phi i32 [ %58, %57 ], [ %56, %50 ]
  %61 = icmp eq i32 %60, 0
  br i1 %61, label %62, label %63

62:                                               ; preds = %59
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %48) #16
  br label %63

63:                                               ; preds = %46, %59, %62
  ret void
}

; Function Attrs: nounwind
declare void @free(i8* nocapture) local_unnamed_addr #3

declare void @_ZN5blink5mojom5blink17CacheQueryOptionsC1Ev(%"class.blink::mojom::blink::CacheQueryOptions"*) unnamed_addr #2

declare void @_ZN5blink19InspectorAgentStateC1ERKN3WTF6StringE(%"class.blink::InspectorAgentState"*, %"class.WTF::String"* dereferenceable(8)) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_15InspectedFramesEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::InspectedFrames"*
  tail call void @_ZNK5blink15InspectedFrames5TraceEPNS_7VisitorE(%"class.blink::InspectedFrames"* %3, %"class.blink::Visitor"* %0) #16
  ret void
}

declare void @_ZNK5blink15InspectedFrames5TraceEPNS_7VisitorE(%"class.blink::InspectedFrames"*, %"class.blink::Visitor"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_13CoreProbeSinkEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::CoreProbeSink"*
  tail call void @_ZNK5blink13CoreProbeSink5TraceEPNS_7VisitorE(%"class.blink::CoreProbeSink"* %3, %"class.blink::Visitor"* %0) #16
  ret void
}

declare void @_ZNK5blink13CoreProbeSink5TraceEPNS_7VisitorE(%"class.blink::CoreProbeSink"*, %"class.blink::Visitor"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define internal void @"_ZN4base8internal7InvokerINS0_9BindStateIZN5blink26InspectorCacheStorageAgent17requestCacheNamesERKN3WTF6StringENSt3__110unique_ptrINS3_8protocol12CacheStorage7Backend25RequestCacheNamesCallbackENS9_14default_deleteISE_EEEEE3$_0JS6_SH_EEEFvRKNS5_6VectorIS6_Lj0ENS5_18PartitionAllocatorEEEEE7RunOnceEPNS0_13BindStateBaseESO_"(%"class.base::internal::BindStateBase"* nocapture, %"class.WTF::Vector.898"* nocapture readonly dereferenceable(16)) #0 align 2 {
  %3 = alloca %"class.WTF::StringBuilder", align 8
  %4 = alloca %"class.WTF::StringView", align 8
  %5 = alloca %"class.WTF::StringView", align 8
  %6 = alloca %"class.std::__1::unique_ptr.1915", align 8
  %7 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 1
  %8 = bitcast void ()** %7 to %"class.WTF::StringImpl"**
  %9 = bitcast void ()** %7 to i64*
  %10 = load i64, i64* %9, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %8, align 8
  %11 = getelementptr inbounds void ()*, void ()** %7, i64 1
  %12 = bitcast void ()** %11 to %"class.blink::protocol::CacheStorage::Backend::RequestCacheNamesCallback"**
  %13 = load %"class.blink::protocol::CacheStorage::Backend::RequestCacheNamesCallback"*, %"class.blink::protocol::CacheStorage::Backend::RequestCacheNamesCallback"** %12, align 8
  store %"class.blink::protocol::CacheStorage::Backend::RequestCacheNamesCallback"* null, %"class.blink::protocol::CacheStorage::Backend::RequestCacheNamesCallback"** %12, align 8
  %14 = inttoptr i64 %10 to %"class.WTF::StringImpl"*
  %15 = tail call i8* @_Znwm(i64 24) #18
  %16 = bitcast i8* %15 to %"class.std::__1::vector.1913"*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %15, i8 0, i64 24, i1 false) #16
  %17 = getelementptr inbounds %"class.WTF::Vector.898", %"class.WTF::Vector.898"* %1, i64 0, i32 0, i32 0, i32 0
  %18 = load %"class.WTF::String"*, %"class.WTF::String"** %17, align 8
  %19 = getelementptr inbounds %"class.WTF::Vector.898", %"class.WTF::Vector.898"* %1, i64 0, i32 0, i32 0, i32 2
  %20 = load i32, i32* %19, align 4
  %21 = zext i32 %20 to i64
  %22 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %18, i64 %21
  %23 = icmp eq i32 %20, 0
  br i1 %23, label %57, label %24

24:                                               ; preds = %2
  %25 = bitcast %"class.std::__1::unique_ptr.1915"* %6 to i8*
  %26 = icmp eq i64 %10, 0
  %27 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %14, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %28 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %14, i64 0, i32 0
  %29 = bitcast %"class.WTF::StringBuilder"* %3 to i8*
  %30 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %3, i64 0, i32 0, i32 0, i32 0
  %31 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %3, i64 0, i32 1
  %32 = bitcast %union.anon.2179* %31 to i8*
  %33 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %3, i64 0, i32 2
  %34 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %3, i64 0, i32 3
  %35 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %3, i64 0, i32 4
  %36 = bitcast %"class.WTF::StringView"* %4 to i8*
  %37 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %4, i64 0, i32 0
  %38 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %14, i64 0, i32 1
  %39 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %14, i64 1
  %40 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %4, i64 0, i32 1
  %41 = bitcast i8** %40 to %"class.WTF::StringImpl"**
  %42 = bitcast %"class.WTF::StringView"* %4 to i64*
  %43 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %4, i64 0, i32 2
  %44 = bitcast %"class.WTF::StringView"* %5 to i8*
  %45 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %5, i64 0, i32 0
  %46 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %5, i64 0, i32 1
  %47 = bitcast i8** %46 to %"class.WTF::StringImpl"**
  %48 = bitcast %"class.WTF::StringView"* %5 to i64*
  %49 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %5, i64 0, i32 2
  %50 = getelementptr inbounds %"class.std::__1::unique_ptr.1915", %"class.std::__1::unique_ptr.1915"* %6, i64 0, i32 0, i32 0, i32 0
  %51 = bitcast %"class.std::__1::unique_ptr.1915"* %6 to i8**
  %52 = getelementptr inbounds i8, i8* %15, i64 8
  %53 = bitcast i8* %52 to %"class.std::__1::unique_ptr.1915"**
  %54 = getelementptr inbounds i8, i8* %15, i64 16
  %55 = bitcast i8* %54 to %"class.std::__1::unique_ptr.1915"**
  %56 = bitcast i8* %52 to i64*
  br label %82

57:                                               ; preds = %250, %2
  %58 = bitcast %"class.blink::protocol::CacheStorage::Backend::RequestCacheNamesCallback"* %13 to void (%"class.blink::protocol::CacheStorage::Backend::RequestCacheNamesCallback"*, %"class.std::__1::vector.1913"*)***
  %59 = load void (%"class.blink::protocol::CacheStorage::Backend::RequestCacheNamesCallback"*, %"class.std::__1::vector.1913"*)**, void (%"class.blink::protocol::CacheStorage::Backend::RequestCacheNamesCallback"*, %"class.std::__1::vector.1913"*)*** %58, align 8
  %60 = load void (%"class.blink::protocol::CacheStorage::Backend::RequestCacheNamesCallback"*, %"class.std::__1::vector.1913"*)*, void (%"class.blink::protocol::CacheStorage::Backend::RequestCacheNamesCallback"*, %"class.std::__1::vector.1913"*)** %59, align 8
  call void %60(%"class.blink::protocol::CacheStorage::Backend::RequestCacheNamesCallback"* %13, %"class.std::__1::vector.1913"* nonnull %16) #16
  %61 = icmp eq %"class.blink::protocol::CacheStorage::Backend::RequestCacheNamesCallback"* %13, null
  br i1 %61, label %67, label %62

62:                                               ; preds = %57
  %63 = bitcast %"class.blink::protocol::CacheStorage::Backend::RequestCacheNamesCallback"* %13 to void (%"class.blink::protocol::CacheStorage::Backend::RequestCacheNamesCallback"*)***
  %64 = load void (%"class.blink::protocol::CacheStorage::Backend::RequestCacheNamesCallback"*)**, void (%"class.blink::protocol::CacheStorage::Backend::RequestCacheNamesCallback"*)*** %63, align 8
  %65 = getelementptr inbounds void (%"class.blink::protocol::CacheStorage::Backend::RequestCacheNamesCallback"*)*, void (%"class.blink::protocol::CacheStorage::Backend::RequestCacheNamesCallback"*)** %64, i64 4
  %66 = load void (%"class.blink::protocol::CacheStorage::Backend::RequestCacheNamesCallback"*)*, void (%"class.blink::protocol::CacheStorage::Backend::RequestCacheNamesCallback"*)** %65, align 8
  call void %66(%"class.blink::protocol::CacheStorage::Backend::RequestCacheNamesCallback"* nonnull %13) #16
  br label %67

67:                                               ; preds = %62, %57
  %68 = icmp eq i64 %10, 0
  br i1 %68, label %253, label %69

69:                                               ; preds = %67
  %70 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %14, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %71 = load atomic i32, i32* %70 monotonic, align 4
  %72 = and i32 %71, 2
  %73 = icmp eq i32 %72, 0
  %74 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %14, i64 0, i32 0
  %75 = load i32, i32* %74, align 4
  br i1 %73, label %76, label %78

76:                                               ; preds = %69
  %77 = add i32 %75, -1
  store i32 %77, i32* %74, align 4
  br label %78

78:                                               ; preds = %76, %69
  %79 = phi i32 [ %77, %76 ], [ %75, %69 ]
  %80 = icmp eq i32 %79, 0
  br i1 %80, label %81, label %253

81:                                               ; preds = %78
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %14) #16
  br label %253

82:                                               ; preds = %250, %24
  %83 = phi %"class.WTF::String"* [ %18, %24 ], [ %251, %250 ]
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %25) #16
  %84 = call i8* @_Znwm(i64 32) #18
  %85 = bitcast i8* %84 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN5blink8protocol12CacheStorage5CacheE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %85, align 8
  %86 = getelementptr inbounds i8, i8* %84, i64 8
  call void @llvm.memset.p0i8.i64(i8* align 8 %86, i8 0, i64 24, i1 false) #16
  %87 = getelementptr inbounds i8, i8* %84, i64 16
  br i1 %26, label %103, label %88

88:                                               ; preds = %82
  %89 = load atomic i32, i32* %27 monotonic, align 4
  %90 = and i32 %89, 2
  %91 = icmp eq i32 %90, 0
  br i1 %91, label %92, label %103

92:                                               ; preds = %88
  %93 = load i32, i32* %28, align 4
  %94 = zext i32 %93 to i33
  %95 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %94, i33 1) #16
  %96 = extractvalue { i33, i1 } %95, 1
  %97 = extractvalue { i33, i1 } %95, 0
  %98 = icmp slt i33 %97, 0
  %99 = or i1 %96, %98
  br i1 %99, label %100, label %101, !prof !3

100:                                              ; preds = %92
  call void @llvm.trap() #16
  unreachable

101:                                              ; preds = %92
  %102 = trunc i33 %97 to i32
  store i32 %102, i32* %28, align 4
  br label %103

103:                                              ; preds = %101, %88, %82
  %104 = bitcast i8* %87 to i64*
  store i64 %10, i64* %104, align 8
  %105 = getelementptr inbounds i8, i8* %84, i64 24
  %106 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %83, i64 0, i32 0, i32 0
  %107 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %106, align 8
  %108 = icmp eq %"class.WTF::StringImpl"* %107, null
  br i1 %108, label %124, label %109

109:                                              ; preds = %103
  %110 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %107, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %111 = load atomic i32, i32* %110 monotonic, align 4
  %112 = and i32 %111, 2
  %113 = icmp eq i32 %112, 0
  br i1 %113, label %114, label %124

114:                                              ; preds = %109
  %115 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %107, i64 0, i32 0
  %116 = load i32, i32* %115, align 4
  %117 = zext i32 %116 to i33
  %118 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %117, i33 1) #16
  %119 = extractvalue { i33, i1 } %118, 1
  %120 = extractvalue { i33, i1 } %118, 0
  %121 = icmp slt i33 %120, 0
  %122 = or i1 %119, %121
  br i1 %122, label %123, label %127, !prof !3

123:                                              ; preds = %114
  call void @llvm.trap() #16
  unreachable

124:                                              ; preds = %109, %103
  %125 = ptrtoint %"class.WTF::StringImpl"* %107 to i64
  %126 = bitcast i8* %105 to i64*
  store i64 %125, i64* %126, align 8
  br label %147

127:                                              ; preds = %114
  %128 = trunc i33 %120 to i32
  store i32 %128, i32* %115, align 4
  %129 = bitcast i8* %105 to %"class.WTF::StringImpl"**
  %130 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %129, align 8
  %131 = ptrtoint %"class.WTF::StringImpl"* %107 to i64
  %132 = bitcast i8* %105 to i64*
  store i64 %131, i64* %132, align 8
  %133 = icmp eq %"class.WTF::StringImpl"* %130, null
  br i1 %133, label %147, label %134

134:                                              ; preds = %127
  %135 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %130, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %136 = load atomic i32, i32* %135 monotonic, align 4
  %137 = and i32 %136, 2
  %138 = icmp eq i32 %137, 0
  %139 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %130, i64 0, i32 0
  %140 = load i32, i32* %139, align 4
  br i1 %138, label %141, label %143

141:                                              ; preds = %134
  %142 = add i32 %140, -1
  store i32 %142, i32* %139, align 4
  br label %143

143:                                              ; preds = %141, %134
  %144 = phi i32 [ %142, %141 ], [ %140, %134 ]
  %145 = icmp eq i32 %144, 0
  br i1 %145, label %146, label %147

146:                                              ; preds = %143
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %130) #16
  br label %147

147:                                              ; preds = %146, %143, %127, %124
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %29) #16
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %29, i8 -86, i64 48, i1 false) #16
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %30, align 8
  store i8 0, i8* %32, align 8
  store i32 0, i32* %33, align 8
  store i8 1, i8* %34, align 4
  store i8 0, i8* %35, align 1
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %36) #16
  br i1 %26, label %148, label %150

148:                                              ; preds = %147
  store i8* null, i8** %40, align 8
  %149 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  store i64 %149, i64* %42, align 8
  br label %152

150:                                              ; preds = %147
  store %"class.WTF::StringImpl"* %14, %"class.WTF::StringImpl"** %37, align 8
  %151 = load i32, i32* %38, align 4
  store %"class.WTF::StringImpl"* %39, %"class.WTF::StringImpl"** %41, align 8
  br label %152

152:                                              ; preds = %150, %148
  %153 = phi i32 [ %151, %150 ], [ 0, %148 ]
  store i32 %153, i32* %43, align 8
  call void @_ZN3WTF13StringBuilder6AppendERKNS_10StringViewE(%"class.WTF::StringBuilder"* nonnull %3, %"class.WTF::StringView"* nonnull dereferenceable(24) %4) #16
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %36) #16
  call void @_ZN3WTF13StringBuilder6AppendEh(%"class.WTF::StringBuilder"* nonnull %3, i8 zeroext 124) #16
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %44) #16
  %154 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %106, align 8
  %155 = icmp eq %"class.WTF::StringImpl"* %154, null
  br i1 %155, label %156, label %158

156:                                              ; preds = %152
  store i8* null, i8** %46, align 8
  %157 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  store i64 %157, i64* %48, align 8
  br label %162

158:                                              ; preds = %152
  store %"class.WTF::StringImpl"* %154, %"class.WTF::StringImpl"** %45, align 8
  %159 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %154, i64 0, i32 1
  %160 = load i32, i32* %159, align 4
  %161 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %154, i64 1
  store %"class.WTF::StringImpl"* %161, %"class.WTF::StringImpl"** %47, align 8
  br label %162

162:                                              ; preds = %158, %156
  %163 = phi i32 [ %160, %158 ], [ 0, %156 ]
  store i32 %163, i32* %49, align 8
  call void @_ZN3WTF13StringBuilder6AppendERKNS_10StringViewE(%"class.WTF::StringBuilder"* nonnull %3, %"class.WTF::StringView"* nonnull dereferenceable(24) %5) #16
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %44) #16
  %164 = call %"class.WTF::StringImpl"* @_ZN3WTF13StringBuilder8ToStringEv(%"class.WTF::StringBuilder"* nonnull %3) #16
  call void @_ZN3WTF13StringBuilder5ClearEv(%"class.WTF::StringBuilder"* nonnull %3) #16
  %165 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %30, align 8
  %166 = icmp eq %"class.WTF::StringImpl"* %165, null
  br i1 %166, label %180, label %167

167:                                              ; preds = %162
  %168 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %165, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %169 = load atomic i32, i32* %168 monotonic, align 4
  %170 = and i32 %169, 2
  %171 = icmp eq i32 %170, 0
  %172 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %165, i64 0, i32 0
  %173 = load i32, i32* %172, align 4
  br i1 %171, label %174, label %176

174:                                              ; preds = %167
  %175 = add i32 %173, -1
  store i32 %175, i32* %172, align 4
  br label %176

176:                                              ; preds = %174, %167
  %177 = phi i32 [ %175, %174 ], [ %173, %167 ]
  %178 = icmp eq i32 %177, 0
  br i1 %178, label %179, label %180

179:                                              ; preds = %176
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %165) #16
  br label %180

180:                                              ; preds = %179, %176, %162
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %29) #16
  %181 = icmp eq %"class.WTF::StringImpl"* %164, null
  br i1 %181, label %199, label %182

182:                                              ; preds = %180
  %183 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %164, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %184 = load atomic i32, i32* %183 monotonic, align 4
  %185 = and i32 %184, 2
  %186 = icmp eq i32 %185, 0
  br i1 %186, label %187, label %199

187:                                              ; preds = %182
  %188 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %164, i64 0, i32 0
  %189 = load i32, i32* %188, align 4
  %190 = zext i32 %189 to i33
  %191 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %190, i33 1) #16
  %192 = extractvalue { i33, i1 } %191, 1
  %193 = extractvalue { i33, i1 } %191, 0
  %194 = icmp slt i33 %193, 0
  %195 = or i1 %192, %194
  br i1 %195, label %196, label %197, !prof !3

196:                                              ; preds = %187
  call void @llvm.trap() #16
  unreachable

197:                                              ; preds = %187
  %198 = trunc i33 %193 to i32
  store i32 %198, i32* %188, align 4
  br label %199

199:                                              ; preds = %197, %182, %180
  %200 = ptrtoint %"class.WTF::StringImpl"* %164 to i64
  %201 = bitcast i8* %86 to i64*
  %202 = bitcast i8* %86 to %"class.WTF::StringImpl"**
  %203 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %202, align 8
  store i64 %200, i64* %201, align 8
  %204 = icmp eq %"class.WTF::StringImpl"* %203, null
  br i1 %204, label %218, label %205

205:                                              ; preds = %199
  %206 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %203, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %207 = load atomic i32, i32* %206 monotonic, align 4
  %208 = and i32 %207, 2
  %209 = icmp eq i32 %208, 0
  %210 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %203, i64 0, i32 0
  %211 = load i32, i32* %210, align 4
  br i1 %209, label %212, label %214

212:                                              ; preds = %205
  %213 = add i32 %211, -1
  store i32 %213, i32* %210, align 4
  br label %214

214:                                              ; preds = %212, %205
  %215 = phi i32 [ %213, %212 ], [ %211, %205 ]
  %216 = icmp eq i32 %215, 0
  br i1 %216, label %217, label %218

217:                                              ; preds = %214
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %203) #16
  br label %218

218:                                              ; preds = %217, %214, %199
  store i8* %84, i8** %51, align 8
  %219 = load %"class.std::__1::unique_ptr.1915"*, %"class.std::__1::unique_ptr.1915"** %53, align 8
  %220 = load %"class.std::__1::unique_ptr.1915"*, %"class.std::__1::unique_ptr.1915"** %55, align 8
  %221 = icmp ult %"class.std::__1::unique_ptr.1915"* %219, %220
  br i1 %221, label %222, label %227

222:                                              ; preds = %218
  %223 = ptrtoint i8* %84 to i64
  store %"class.blink::protocol::CacheStorage::Cache"* null, %"class.blink::protocol::CacheStorage::Cache"** %50, align 8
  %224 = bitcast %"class.std::__1::unique_ptr.1915"* %219 to i64*
  store i64 %223, i64* %224, align 8
  %225 = getelementptr inbounds %"class.std::__1::unique_ptr.1915", %"class.std::__1::unique_ptr.1915"* %219, i64 1
  %226 = ptrtoint %"class.std::__1::unique_ptr.1915"* %225 to i64
  store i64 %226, i64* %56, align 8
  br label %228

227:                                              ; preds = %218
  call void @_ZNSt3__16vectorINS_10unique_ptrIN5blink8protocol12CacheStorage5CacheENS_14default_deleteIS5_EEEENS_9allocatorIS8_EEE24__emplace_back_slow_pathIJS8_EEEvDpOT_(%"class.std::__1::vector.1913"* nonnull %16, %"class.std::__1::unique_ptr.1915"* nonnull dereferenceable(8) %6) #16
  br label %228

228:                                              ; preds = %227, %222
  %229 = load %"class.blink::protocol::CacheStorage::Cache"*, %"class.blink::protocol::CacheStorage::Cache"** %50, align 8
  store %"class.blink::protocol::CacheStorage::Cache"* null, %"class.blink::protocol::CacheStorage::Cache"** %50, align 8
  %230 = icmp eq %"class.blink::protocol::CacheStorage::Cache"* %229, null
  br i1 %230, label %236, label %231

231:                                              ; preds = %228
  %232 = bitcast %"class.blink::protocol::CacheStorage::Cache"* %229 to void (%"class.blink::protocol::CacheStorage::Cache"*)***
  %233 = load void (%"class.blink::protocol::CacheStorage::Cache"*)**, void (%"class.blink::protocol::CacheStorage::Cache"*)*** %232, align 8
  %234 = getelementptr inbounds void (%"class.blink::protocol::CacheStorage::Cache"*)*, void (%"class.blink::protocol::CacheStorage::Cache"*)** %233, i64 2
  %235 = load void (%"class.blink::protocol::CacheStorage::Cache"*)*, void (%"class.blink::protocol::CacheStorage::Cache"*)** %234, align 8
  call void %235(%"class.blink::protocol::CacheStorage::Cache"* nonnull %229) #16
  br label %236

236:                                              ; preds = %231, %228
  br i1 %181, label %250, label %237

237:                                              ; preds = %236
  %238 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %164, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %239 = load atomic i32, i32* %238 monotonic, align 4
  %240 = and i32 %239, 2
  %241 = icmp eq i32 %240, 0
  %242 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %164, i64 0, i32 0
  %243 = load i32, i32* %242, align 4
  br i1 %241, label %244, label %246

244:                                              ; preds = %237
  %245 = add i32 %243, -1
  store i32 %245, i32* %242, align 4
  br label %246

246:                                              ; preds = %244, %237
  %247 = phi i32 [ %245, %244 ], [ %243, %237 ]
  %248 = icmp eq i32 %247, 0
  br i1 %248, label %249, label %250

249:                                              ; preds = %246
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %164) #16
  br label %250

250:                                              ; preds = %249, %246, %236
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %25) #16
  %251 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %83, i64 1
  %252 = icmp eq %"class.WTF::String"* %251, %22
  br i1 %252, label %57, label %82

253:                                              ; preds = %67, %78, %81
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorINS_10unique_ptrIN5blink8protocol12CacheStorage5CacheENS_14default_deleteIS5_EEEENS_9allocatorIS8_EEE24__emplace_back_slow_pathIJS8_EEEvDpOT_(%"class.std::__1::vector.1913"*, %"class.std::__1::unique_ptr.1915"* dereferenceable(8)) local_unnamed_addr #11 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector.1913", %"class.std::__1::vector.1913"* %0, i64 0, i32 0, i32 1
  %4 = bitcast %"class.std::__1::unique_ptr.1915"** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.std::__1::vector.1913"* %0 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = sub i64 %5, %7
  %9 = ashr exact i64 %8, 3
  %10 = add nsw i64 %9, 1
  %11 = icmp ugt i64 %10, 2305843009213693951
  br i1 %11, label %12, label %14

12:                                               ; preds = %2
  %13 = bitcast %"class.std::__1::vector.1913"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %13) #19
  unreachable

14:                                               ; preds = %2
  %15 = getelementptr inbounds %"class.std::__1::vector.1913", %"class.std::__1::vector.1913"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %16 = bitcast %"class.std::__1::unique_ptr.1915"** %15 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = sub i64 %17, %7
  %19 = ashr exact i64 %18, 3
  %20 = icmp ult i64 %19, 1152921504606846975
  br i1 %20, label %21, label %29

21:                                               ; preds = %14
  %22 = ashr exact i64 %18, 2
  %23 = icmp ult i64 %22, %10
  %24 = select i1 %23, i64 %10, i64 %22
  %25 = icmp eq i64 %24, 0
  br i1 %25, label %34, label %26

26:                                               ; preds = %21
  %27 = icmp ugt i64 %24, 2305843009213693951
  br i1 %27, label %28, label %29

28:                                               ; preds = %26
  tail call void @abort() #19
  unreachable

29:                                               ; preds = %14, %26
  %30 = phi i64 [ %24, %26 ], [ 2305843009213693951, %14 ]
  %31 = shl i64 %30, 3
  %32 = tail call i8* @_Znwm(i64 %31) #18
  %33 = bitcast i8* %32 to %"class.std::__1::unique_ptr.1915"*
  br label %34

34:                                               ; preds = %21, %29
  %35 = phi i64 [ %30, %29 ], [ 0, %21 ]
  %36 = phi %"class.std::__1::unique_ptr.1915"* [ %33, %29 ], [ null, %21 ]
  %37 = getelementptr inbounds %"class.std::__1::unique_ptr.1915", %"class.std::__1::unique_ptr.1915"* %36, i64 %9
  %38 = getelementptr inbounds %"class.std::__1::unique_ptr.1915", %"class.std::__1::unique_ptr.1915"* %36, i64 %35
  %39 = ptrtoint %"class.std::__1::unique_ptr.1915"* %38 to i64
  %40 = getelementptr inbounds %"class.std::__1::unique_ptr.1915", %"class.std::__1::unique_ptr.1915"* %1, i64 0, i32 0, i32 0, i32 0
  %41 = bitcast %"class.std::__1::unique_ptr.1915"* %1 to i64*
  %42 = load i64, i64* %41, align 8
  store %"class.blink::protocol::CacheStorage::Cache"* null, %"class.blink::protocol::CacheStorage::Cache"** %40, align 8
  %43 = bitcast %"class.std::__1::unique_ptr.1915"* %37 to i64*
  store i64 %42, i64* %43, align 8
  %44 = getelementptr inbounds %"class.std::__1::unique_ptr.1915", %"class.std::__1::unique_ptr.1915"* %37, i64 1
  %45 = ptrtoint %"class.std::__1::unique_ptr.1915"* %44 to i64
  %46 = getelementptr inbounds %"class.std::__1::vector.1913", %"class.std::__1::vector.1913"* %0, i64 0, i32 0, i32 0
  %47 = load %"class.std::__1::unique_ptr.1915"*, %"class.std::__1::unique_ptr.1915"** %46, align 8
  %48 = ptrtoint %"class.std::__1::unique_ptr.1915"* %47 to i64
  %49 = load %"class.std::__1::unique_ptr.1915"*, %"class.std::__1::unique_ptr.1915"** %3, align 8
  %50 = icmp eq %"class.std::__1::unique_ptr.1915"* %49, %47
  br i1 %50, label %132, label %51

51:                                               ; preds = %34
  %52 = getelementptr %"class.std::__1::unique_ptr.1915", %"class.std::__1::unique_ptr.1915"* %49, i64 -1, i32 0, i32 0, i32 0
  %53 = ptrtoint %"class.blink::protocol::CacheStorage::Cache"** %52 to i64
  %54 = sub i64 %53, %48
  %55 = lshr i64 %54, 3
  %56 = add nuw nsw i64 %55, 1
  %57 = and i64 %56, 7
  %58 = icmp eq i64 %57, 0
  br i1 %58, label %71, label %59

59:                                               ; preds = %51, %59
  %60 = phi %"class.std::__1::unique_ptr.1915"* [ %63, %59 ], [ %37, %51 ]
  %61 = phi %"class.std::__1::unique_ptr.1915"* [ %64, %59 ], [ %49, %51 ]
  %62 = phi i64 [ %69, %59 ], [ %57, %51 ]
  %63 = getelementptr inbounds %"class.std::__1::unique_ptr.1915", %"class.std::__1::unique_ptr.1915"* %60, i64 -1
  %64 = getelementptr inbounds %"class.std::__1::unique_ptr.1915", %"class.std::__1::unique_ptr.1915"* %61, i64 -1
  %65 = getelementptr inbounds %"class.std::__1::unique_ptr.1915", %"class.std::__1::unique_ptr.1915"* %64, i64 0, i32 0, i32 0, i32 0
  %66 = bitcast %"class.std::__1::unique_ptr.1915"* %64 to i64*
  %67 = load i64, i64* %66, align 8
  store %"class.blink::protocol::CacheStorage::Cache"* null, %"class.blink::protocol::CacheStorage::Cache"** %65, align 8
  %68 = bitcast %"class.std::__1::unique_ptr.1915"* %63 to i64*
  store i64 %67, i64* %68, align 8
  %69 = add i64 %62, -1
  %70 = icmp eq i64 %69, 0
  br i1 %70, label %71, label %59, !llvm.loop !75

71:                                               ; preds = %59, %51
  %72 = phi %"class.std::__1::unique_ptr.1915"* [ undef, %51 ], [ %63, %59 ]
  %73 = phi %"class.std::__1::unique_ptr.1915"* [ %37, %51 ], [ %63, %59 ]
  %74 = phi %"class.std::__1::unique_ptr.1915"* [ %49, %51 ], [ %64, %59 ]
  %75 = icmp ult i64 %54, 56
  br i1 %75, label %128, label %76

76:                                               ; preds = %71, %76
  %77 = phi %"class.std::__1::unique_ptr.1915"* [ %121, %76 ], [ %73, %71 ]
  %78 = phi %"class.std::__1::unique_ptr.1915"* [ %122, %76 ], [ %74, %71 ]
  %79 = getelementptr inbounds %"class.std::__1::unique_ptr.1915", %"class.std::__1::unique_ptr.1915"* %77, i64 -1
  %80 = getelementptr inbounds %"class.std::__1::unique_ptr.1915", %"class.std::__1::unique_ptr.1915"* %78, i64 -1
  %81 = getelementptr inbounds %"class.std::__1::unique_ptr.1915", %"class.std::__1::unique_ptr.1915"* %80, i64 0, i32 0, i32 0, i32 0
  %82 = bitcast %"class.std::__1::unique_ptr.1915"* %80 to i64*
  %83 = load i64, i64* %82, align 8
  store %"class.blink::protocol::CacheStorage::Cache"* null, %"class.blink::protocol::CacheStorage::Cache"** %81, align 8
  %84 = bitcast %"class.std::__1::unique_ptr.1915"* %79 to i64*
  store i64 %83, i64* %84, align 8
  %85 = getelementptr inbounds %"class.std::__1::unique_ptr.1915", %"class.std::__1::unique_ptr.1915"* %77, i64 -2
  %86 = getelementptr inbounds %"class.std::__1::unique_ptr.1915", %"class.std::__1::unique_ptr.1915"* %78, i64 -2
  %87 = getelementptr inbounds %"class.std::__1::unique_ptr.1915", %"class.std::__1::unique_ptr.1915"* %86, i64 0, i32 0, i32 0, i32 0
  %88 = bitcast %"class.std::__1::unique_ptr.1915"* %86 to i64*
  %89 = load i64, i64* %88, align 8
  store %"class.blink::protocol::CacheStorage::Cache"* null, %"class.blink::protocol::CacheStorage::Cache"** %87, align 8
  %90 = bitcast %"class.std::__1::unique_ptr.1915"* %85 to i64*
  store i64 %89, i64* %90, align 8
  %91 = getelementptr inbounds %"class.std::__1::unique_ptr.1915", %"class.std::__1::unique_ptr.1915"* %77, i64 -3
  %92 = getelementptr inbounds %"class.std::__1::unique_ptr.1915", %"class.std::__1::unique_ptr.1915"* %78, i64 -3
  %93 = getelementptr inbounds %"class.std::__1::unique_ptr.1915", %"class.std::__1::unique_ptr.1915"* %92, i64 0, i32 0, i32 0, i32 0
  %94 = bitcast %"class.std::__1::unique_ptr.1915"* %92 to i64*
  %95 = load i64, i64* %94, align 8
  store %"class.blink::protocol::CacheStorage::Cache"* null, %"class.blink::protocol::CacheStorage::Cache"** %93, align 8
  %96 = bitcast %"class.std::__1::unique_ptr.1915"* %91 to i64*
  store i64 %95, i64* %96, align 8
  %97 = getelementptr inbounds %"class.std::__1::unique_ptr.1915", %"class.std::__1::unique_ptr.1915"* %77, i64 -4
  %98 = getelementptr inbounds %"class.std::__1::unique_ptr.1915", %"class.std::__1::unique_ptr.1915"* %78, i64 -4
  %99 = getelementptr inbounds %"class.std::__1::unique_ptr.1915", %"class.std::__1::unique_ptr.1915"* %98, i64 0, i32 0, i32 0, i32 0
  %100 = bitcast %"class.std::__1::unique_ptr.1915"* %98 to i64*
  %101 = load i64, i64* %100, align 8
  store %"class.blink::protocol::CacheStorage::Cache"* null, %"class.blink::protocol::CacheStorage::Cache"** %99, align 8
  %102 = bitcast %"class.std::__1::unique_ptr.1915"* %97 to i64*
  store i64 %101, i64* %102, align 8
  %103 = getelementptr inbounds %"class.std::__1::unique_ptr.1915", %"class.std::__1::unique_ptr.1915"* %77, i64 -5
  %104 = getelementptr inbounds %"class.std::__1::unique_ptr.1915", %"class.std::__1::unique_ptr.1915"* %78, i64 -5
  %105 = getelementptr inbounds %"class.std::__1::unique_ptr.1915", %"class.std::__1::unique_ptr.1915"* %104, i64 0, i32 0, i32 0, i32 0
  %106 = bitcast %"class.std::__1::unique_ptr.1915"* %104 to i64*
  %107 = load i64, i64* %106, align 8
  store %"class.blink::protocol::CacheStorage::Cache"* null, %"class.blink::protocol::CacheStorage::Cache"** %105, align 8
  %108 = bitcast %"class.std::__1::unique_ptr.1915"* %103 to i64*
  store i64 %107, i64* %108, align 8
  %109 = getelementptr inbounds %"class.std::__1::unique_ptr.1915", %"class.std::__1::unique_ptr.1915"* %77, i64 -6
  %110 = getelementptr inbounds %"class.std::__1::unique_ptr.1915", %"class.std::__1::unique_ptr.1915"* %78, i64 -6
  %111 = getelementptr inbounds %"class.std::__1::unique_ptr.1915", %"class.std::__1::unique_ptr.1915"* %110, i64 0, i32 0, i32 0, i32 0
  %112 = bitcast %"class.std::__1::unique_ptr.1915"* %110 to i64*
  %113 = load i64, i64* %112, align 8
  store %"class.blink::protocol::CacheStorage::Cache"* null, %"class.blink::protocol::CacheStorage::Cache"** %111, align 8
  %114 = bitcast %"class.std::__1::unique_ptr.1915"* %109 to i64*
  store i64 %113, i64* %114, align 8
  %115 = getelementptr inbounds %"class.std::__1::unique_ptr.1915", %"class.std::__1::unique_ptr.1915"* %77, i64 -7
  %116 = getelementptr inbounds %"class.std::__1::unique_ptr.1915", %"class.std::__1::unique_ptr.1915"* %78, i64 -7
  %117 = getelementptr inbounds %"class.std::__1::unique_ptr.1915", %"class.std::__1::unique_ptr.1915"* %116, i64 0, i32 0, i32 0, i32 0
  %118 = bitcast %"class.std::__1::unique_ptr.1915"* %116 to i64*
  %119 = load i64, i64* %118, align 8
  store %"class.blink::protocol::CacheStorage::Cache"* null, %"class.blink::protocol::CacheStorage::Cache"** %117, align 8
  %120 = bitcast %"class.std::__1::unique_ptr.1915"* %115 to i64*
  store i64 %119, i64* %120, align 8
  %121 = getelementptr inbounds %"class.std::__1::unique_ptr.1915", %"class.std::__1::unique_ptr.1915"* %77, i64 -8
  %122 = getelementptr inbounds %"class.std::__1::unique_ptr.1915", %"class.std::__1::unique_ptr.1915"* %78, i64 -8
  %123 = getelementptr inbounds %"class.std::__1::unique_ptr.1915", %"class.std::__1::unique_ptr.1915"* %122, i64 0, i32 0, i32 0, i32 0
  %124 = bitcast %"class.std::__1::unique_ptr.1915"* %122 to i64*
  %125 = load i64, i64* %124, align 8
  store %"class.blink::protocol::CacheStorage::Cache"* null, %"class.blink::protocol::CacheStorage::Cache"** %123, align 8
  %126 = bitcast %"class.std::__1::unique_ptr.1915"* %121 to i64*
  store i64 %125, i64* %126, align 8
  %127 = icmp eq %"class.std::__1::unique_ptr.1915"* %122, %47
  br i1 %127, label %128, label %76

128:                                              ; preds = %76, %71
  %129 = phi %"class.std::__1::unique_ptr.1915"* [ %72, %71 ], [ %121, %76 ]
  %130 = load i64, i64* %6, align 8
  %131 = load %"class.std::__1::unique_ptr.1915"*, %"class.std::__1::unique_ptr.1915"** %3, align 8
  br label %132

132:                                              ; preds = %34, %128
  %133 = phi %"class.std::__1::unique_ptr.1915"* [ %131, %128 ], [ %47, %34 ]
  %134 = phi %"class.std::__1::unique_ptr.1915"* [ %129, %128 ], [ %37, %34 ]
  %135 = phi i64 [ %130, %128 ], [ %48, %34 ]
  %136 = ptrtoint %"class.std::__1::unique_ptr.1915"* %134 to i64
  store i64 %136, i64* %6, align 8
  store i64 %45, i64* %4, align 8
  store i64 %39, i64* %16, align 8
  %137 = inttoptr i64 %135 to %"class.std::__1::unique_ptr.1915"*
  %138 = icmp eq %"class.std::__1::unique_ptr.1915"* %133, %137
  br i1 %138, label %152, label %139

139:                                              ; preds = %132, %150
  %140 = phi %"class.std::__1::unique_ptr.1915"* [ %141, %150 ], [ %133, %132 ]
  %141 = getelementptr inbounds %"class.std::__1::unique_ptr.1915", %"class.std::__1::unique_ptr.1915"* %140, i64 -1
  %142 = getelementptr inbounds %"class.std::__1::unique_ptr.1915", %"class.std::__1::unique_ptr.1915"* %141, i64 0, i32 0, i32 0, i32 0
  %143 = load %"class.blink::protocol::CacheStorage::Cache"*, %"class.blink::protocol::CacheStorage::Cache"** %142, align 8
  store %"class.blink::protocol::CacheStorage::Cache"* null, %"class.blink::protocol::CacheStorage::Cache"** %142, align 8
  %144 = icmp eq %"class.blink::protocol::CacheStorage::Cache"* %143, null
  br i1 %144, label %150, label %145

145:                                              ; preds = %139
  %146 = bitcast %"class.blink::protocol::CacheStorage::Cache"* %143 to void (%"class.blink::protocol::CacheStorage::Cache"*)***
  %147 = load void (%"class.blink::protocol::CacheStorage::Cache"*)**, void (%"class.blink::protocol::CacheStorage::Cache"*)*** %146, align 8
  %148 = getelementptr inbounds void (%"class.blink::protocol::CacheStorage::Cache"*)*, void (%"class.blink::protocol::CacheStorage::Cache"*)** %147, i64 2
  %149 = load void (%"class.blink::protocol::CacheStorage::Cache"*)*, void (%"class.blink::protocol::CacheStorage::Cache"*)** %148, align 8
  tail call void %149(%"class.blink::protocol::CacheStorage::Cache"* nonnull %143) #16
  br label %150

150:                                              ; preds = %145, %139
  %151 = icmp eq %"class.std::__1::unique_ptr.1915"* %141, %137
  br i1 %151, label %152, label %139

152:                                              ; preds = %150, %132
  %153 = icmp eq i64 %135, 0
  br i1 %153, label %156, label %154

154:                                              ; preds = %152
  %155 = inttoptr i64 %135 to i8*
  tail call void @_ZdlPv(i8* %155) #18
  br label %156

156:                                              ; preds = %152, %154
  ret void
}

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #12

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF13StringBuilder6AppendERKNS_10StringViewE(%"class.WTF::StringBuilder"*, %"class.WTF::StringView"* dereferenceable(24)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %1, i64 0, i32 2
  %4 = load i32, i32* %3, align 8
  %5 = icmp eq i32 %4, 0
  br i1 %5, label %81, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %1, i64 0, i32 0
  %8 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %7, align 8
  %9 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %8, i64 1
  %10 = bitcast %"class.WTF::StringImpl"* %9 to i8*
  %11 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %1, i64 0, i32 1
  %12 = load i8*, i8** %11, align 8
  %13 = icmp eq i8* %12, %10
  %14 = bitcast i8* %12 to i16*
  br i1 %13, label %15, label %20

15:                                               ; preds = %6
  %16 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %8, i64 0, i32 1
  %17 = load i32, i32* %16, align 4
  %18 = icmp eq i32 %4, %17
  %19 = select i1 %18, %"class.WTF::StringImpl"* %8, %"class.WTF::StringImpl"* null
  br label %20

20:                                               ; preds = %6, %15
  %21 = phi %"class.WTF::StringImpl"* [ %19, %15 ], [ null, %6 ]
  %22 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %0, i64 0, i32 2
  %23 = load i32, i32* %22, align 8
  %24 = icmp eq i32 %23, 0
  br i1 %24, label %25, label %74

25:                                               ; preds = %20
  %26 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %0, i64 0, i32 4
  %27 = load i8, i8* %26, align 1, !range !20
  %28 = icmp eq i8 %27, 0
  %29 = icmp ne %"class.WTF::StringImpl"* %21, null
  %30 = and i1 %29, %28
  br i1 %30, label %31, label %74

31:                                               ; preds = %25
  %32 = ptrtoint %"class.WTF::StringImpl"* %21 to i64
  %33 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %21, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %34 = load atomic i32, i32* %33 monotonic, align 4
  %35 = and i32 %34, 2
  %36 = icmp eq i32 %35, 0
  br i1 %36, label %37, label %49

37:                                               ; preds = %31
  %38 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %21, i64 0, i32 0
  %39 = load i32, i32* %38, align 4
  %40 = zext i32 %39 to i33
  %41 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %40, i33 1) #16
  %42 = extractvalue { i33, i1 } %41, 1
  %43 = extractvalue { i33, i1 } %41, 0
  %44 = icmp slt i33 %43, 0
  %45 = or i1 %42, %44
  br i1 %45, label %46, label %47, !prof !3

46:                                               ; preds = %37
  tail call void @llvm.trap() #16
  unreachable

47:                                               ; preds = %37
  %48 = trunc i33 %43 to i32
  store i32 %48, i32* %38, align 4
  br label %49

49:                                               ; preds = %31, %47
  %50 = bitcast %"class.WTF::StringBuilder"* %0 to i64*
  %51 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %0, i64 0, i32 0, i32 0, i32 0
  %52 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %51, align 8
  store i64 %32, i64* %50, align 8
  %53 = icmp eq %"class.WTF::StringImpl"* %52, null
  br i1 %53, label %67, label %54

54:                                               ; preds = %49
  %55 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %52, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %56 = load atomic i32, i32* %55 monotonic, align 4
  %57 = and i32 %56, 2
  %58 = icmp eq i32 %57, 0
  %59 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %52, i64 0, i32 0
  %60 = load i32, i32* %59, align 4
  br i1 %58, label %61, label %63

61:                                               ; preds = %54
  %62 = add i32 %60, -1
  store i32 %62, i32* %59, align 4
  br label %63

63:                                               ; preds = %61, %54
  %64 = phi i32 [ %62, %61 ], [ %60, %54 ]
  %65 = icmp eq i32 %64, 0
  br i1 %65, label %66, label %67

66:                                               ; preds = %63
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %52) #16
  br label %67

67:                                               ; preds = %66, %63, %49
  %68 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %21, i64 0, i32 1
  %69 = load i32, i32* %68, align 4
  store i32 %69, i32* %22, align 8
  %70 = load atomic i32, i32* %33 monotonic, align 4
  %71 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %0, i64 0, i32 3
  %72 = trunc i32 %70 to i8
  %73 = and i8 %72, 1
  store i8 %73, i8* %71, align 4
  br label %81

74:                                               ; preds = %20, %25
  %75 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %8, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %76 = load atomic i32, i32* %75 monotonic, align 4
  %77 = and i32 %76, 1
  %78 = icmp eq i32 %77, 0
  br i1 %78, label %80, label %79

79:                                               ; preds = %74
  tail call void @_ZN3WTF13StringBuilder6AppendEPKhj(%"class.WTF::StringBuilder"* %0, i8* %12, i32 %4) #16
  br label %81

80:                                               ; preds = %74
  tail call void @_ZN3WTF13StringBuilder6AppendEPKDsj(%"class.WTF::StringBuilder"* %0, i16* %14, i32 %4) #16
  br label %81

81:                                               ; preds = %67, %80, %79, %2
  ret void
}

declare %"class.WTF::StringImpl"* @_ZN3WTF13StringBuilder8ToStringEv(%"class.WTF::StringBuilder"*) local_unnamed_addr #2

declare void @_ZN3WTF13StringBuilder6AppendEPKhj(%"class.WTF::StringBuilder"*, i8*, i32) local_unnamed_addr #2

declare void @_ZN3WTF13StringBuilder6AppendEPKDsj(%"class.WTF::StringBuilder"*, i16*, i32) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF13StringBuilder6AppendEh(%"class.WTF::StringBuilder"*, i8 zeroext) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca i16, align 2
  %4 = alloca i8, align 1
  store i8 %1, i8* %4, align 1
  %5 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %0, i64 0, i32 3
  %6 = load i8, i8* %5, align 4, !range !20
  %7 = icmp eq i8 %6, 0
  br i1 %7, label %8, label %35

8:                                                ; preds = %2
  %9 = zext i8 %1 to i16
  %10 = bitcast i16* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 2, i8* nonnull %10)
  store i16 %9, i16* %3, align 2
  %11 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %0, i64 0, i32 4
  %12 = load i8, i8* %11, align 1, !range !20
  %13 = icmp eq i8 %12, 0
  br i1 %13, label %14, label %15

14:                                               ; preds = %8
  tail call void @_ZN3WTF13StringBuilder14CreateBuffer16Ej(%"class.WTF::StringBuilder"* %0, i32 1) #16
  br label %15

15:                                               ; preds = %14, %8
  %16 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %0, i64 0, i32 1
  %17 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 2
  %18 = load i32, i32* %17, align 4
  %19 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1
  %20 = load i32, i32* %19, align 8
  %21 = icmp eq i32 %18, %20
  br i1 %21, label %29, label %22, !prof !3

22:                                               ; preds = %15
  %23 = bitcast %union.anon.2179* %16 to i16**
  %24 = load i16*, i16** %23, align 8
  %25 = zext i32 %18 to i64
  %26 = getelementptr inbounds i16, i16* %24, i64 %25
  store i16 %9, i16* %26, align 2
  %27 = load i32, i32* %17, align 4
  %28 = add i32 %27, 1
  store i32 %28, i32* %17, align 4
  br label %31

29:                                               ; preds = %15
  %30 = bitcast %union.anon.2179* %16 to %"class.WTF::Vector.2184"*
  call void @_ZN3WTF6VectorIDsLj8ENS_18PartitionAllocatorEE14AppendSlowCaseIRDsEEvOT_(%"class.WTF::Vector.2184"* %30, i16* nonnull dereferenceable(2) %3) #16
  br label %31

31:                                               ; preds = %22, %29
  %32 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %0, i64 0, i32 2
  %33 = load i32, i32* %32, align 8
  %34 = add i32 %33, 1
  store i32 %34, i32* %32, align 8
  call void @llvm.lifetime.end.p0i8(i64 2, i8* nonnull %10)
  br label %59

35:                                               ; preds = %2
  %36 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %0, i64 0, i32 4
  %37 = load i8, i8* %36, align 1, !range !20
  %38 = icmp eq i8 %37, 0
  br i1 %38, label %39, label %40

39:                                               ; preds = %35
  tail call void @_ZN3WTF13StringBuilder13CreateBuffer8Ej(%"class.WTF::StringBuilder"* %0, i32 1) #16
  br label %40

40:                                               ; preds = %35, %39
  %41 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %0, i64 0, i32 1, i32 0
  %42 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 2
  %43 = load i32, i32* %42, align 4
  %44 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1
  %45 = load i32, i32* %44, align 8
  %46 = icmp eq i32 %43, %45
  br i1 %46, label %54, label %47, !prof !3

47:                                               ; preds = %40
  %48 = getelementptr inbounds %"class.WTF::Vector.2180", %"class.WTF::Vector.2180"* %41, i64 0, i32 0, i32 0, i32 0
  %49 = load i8*, i8** %48, align 8
  %50 = zext i32 %43 to i64
  %51 = getelementptr inbounds i8, i8* %49, i64 %50
  store i8 %1, i8* %51, align 1
  %52 = load i32, i32* %42, align 4
  %53 = add i32 %52, 1
  store i32 %53, i32* %42, align 4
  br label %55

54:                                               ; preds = %40
  call void @_ZN3WTF6VectorIhLj16ENS_18PartitionAllocatorEE14AppendSlowCaseIRhEEvOT_(%"class.WTF::Vector.2180"* %41, i8* nonnull dereferenceable(1) %4) #16
  br label %55

55:                                               ; preds = %47, %54
  %56 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %0, i64 0, i32 2
  %57 = load i32, i32* %56, align 8
  %58 = add i32 %57, 1
  store i32 %58, i32* %56, align 8
  br label %59

59:                                               ; preds = %55, %31
  ret void
}

declare void @_ZN3WTF13StringBuilder14CreateBuffer16Ej(%"class.WTF::StringBuilder"*, i32) local_unnamed_addr #2

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIDsLj8ENS_18PartitionAllocatorEE14AppendSlowCaseIRDsEEvOT_(%"class.WTF::Vector.2184"*, i16* dereferenceable(2)) local_unnamed_addr #13 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::Vector.2184", %"class.WTF::Vector.2184"* %0, i64 0, i32 0, i32 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = add i32 %4, 1
  %6 = getelementptr inbounds %"class.WTF::Vector.2184", %"class.WTF::Vector.2184"* %0, i64 0, i32 0, i32 0, i32 0
  %7 = load i16*, i16** %6, align 8
  %8 = icmp ugt i16* %7, %1
  br i1 %8, label %13, label %9

9:                                                ; preds = %2
  %10 = zext i32 %4 to i64
  %11 = getelementptr inbounds i16, i16* %7, i64 %10
  %12 = icmp ugt i16* %11, %1
  br i1 %12, label %15, label %13

13:                                               ; preds = %9, %2
  tail call void @_ZN3WTF6VectorIDsLj8ENS_18PartitionAllocatorEE14ExpandCapacityEj(%"class.WTF::Vector.2184"* %0, i32 %5) #16
  %14 = load i16*, i16** %6, align 8
  br label %22

15:                                               ; preds = %9
  %16 = ptrtoint i16* %1 to i64
  %17 = ptrtoint i16* %7 to i64
  %18 = sub i64 %16, %17
  %19 = ashr exact i64 %18, 1
  tail call void @_ZN3WTF6VectorIDsLj8ENS_18PartitionAllocatorEE14ExpandCapacityEj(%"class.WTF::Vector.2184"* %0, i32 %5) #16
  %20 = load i16*, i16** %6, align 8
  %21 = getelementptr inbounds i16, i16* %20, i64 %19
  br label %22

22:                                               ; preds = %13, %15
  %23 = phi i16* [ %14, %13 ], [ %20, %15 ]
  %24 = phi i16* [ %1, %13 ], [ %21, %15 ]
  %25 = load i32, i32* %3, align 4
  %26 = zext i32 %25 to i64
  %27 = getelementptr inbounds i16, i16* %23, i64 %26
  %28 = load i16, i16* %24, align 2
  store i16 %28, i16* %27, align 2
  %29 = load i32, i32* %3, align 4
  %30 = add i32 %29, 1
  store i32 %30, i32* %3, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIDsLj8ENS_18PartitionAllocatorEE14ExpandCapacityEj(%"class.WTF::Vector.2184"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = getelementptr inbounds %"class.WTF::Vector.2184", %"class.WTF::Vector.2184"* %0, i64 0, i32 0, i32 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = shl i32 %7, 1
  %9 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %9) #16
  %10 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %10, align 8
  %11 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %11)
  %12 = icmp ugt i32 %8, %7
  br i1 %12, label %13, label %14

13:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %11)
  store i8* null, i8** %10, align 8
  br label %23

14:                                               ; preds = %2
  %15 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %8) #16
  %16 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %7) #16
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.17, i64 0, i64 0), i8* %15, i8* %16) #16
  %17 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %18 = load i8*, i8** %17, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %11)
  store i8* %18, i8** %10, align 8
  %19 = icmp eq i8* %18, null
  br i1 %19, label %23, label %20

20:                                               ; preds = %14
  %21 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %21) #16
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.18, i64 0, i64 0), i32 1715, %"class.logging::CheckOpResult"* nonnull %4) #16
  %22 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #16
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %21) #16
  br label %23

23:                                               ; preds = %13, %14, %20
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9) #16
  %24 = icmp ugt i32 %8, 4
  %25 = select i1 %24, i32 %8, i32 4
  %26 = icmp ugt i32 %25, %1
  %27 = select i1 %26, i32 %25, i32 %1
  %28 = load i32, i32* %6, align 8
  %29 = icmp ult i32 %28, %27
  br i1 %29, label %30, label %51, !prof !2

30:                                               ; preds = %23
  %31 = getelementptr inbounds %"class.WTF::Vector.2184", %"class.WTF::Vector.2184"* %0, i64 0, i32 0, i32 0, i32 0
  %32 = load i16*, i16** %31, align 8
  %33 = icmp eq i16* %32, null
  br i1 %33, label %34, label %50

34:                                               ; preds = %30
  %35 = icmp ugt i32 %27, 8
  br i1 %35, label %36, label %44

36:                                               ; preds = %34
  %37 = zext i32 %27 to i64
  %38 = call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIDsEEmm(i64 %37) #16
  %39 = call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %38, i8* getelementptr inbounds ([56 x i8], [56 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIDsEEPKcv, i64 0, i64 0)) #16
  %40 = ptrtoint i8* %39 to i64
  %41 = bitcast %"class.WTF::Vector.2184"* %0 to i64*
  store atomic i64 %40, i64* %41 monotonic, align 8
  %42 = lshr i64 %38, 1
  %43 = trunc i64 %42 to i32
  br label %48

44:                                               ; preds = %34
  %45 = getelementptr inbounds %"class.WTF::Vector.2184", %"class.WTF::Vector.2184"* %0, i64 0, i32 0, i32 1, i64 0
  %46 = ptrtoint i8* %45 to i64
  %47 = bitcast %"class.WTF::Vector.2184"* %0 to i64*
  store atomic i64 %46, i64* %47 monotonic, align 8
  br label %48

48:                                               ; preds = %44, %36
  %49 = phi i32 [ 8, %44 ], [ %43, %36 ]
  store i32 %49, i32* %6, align 8
  br label %51

50:                                               ; preds = %30
  call void @_ZN3WTF6VectorIDsLj8ENS_18PartitionAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector.2184"* %0, i32 %27) #16
  br label %51

51:                                               ; preds = %23, %48, %50
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIDsLj8ENS_18PartitionAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector.2184"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp ult i32 %1, 9
  br i1 %3, label %4, label %29

4:                                                ; preds = %2
  %5 = getelementptr inbounds %"class.WTF::Vector.2184", %"class.WTF::Vector.2184"* %0, i64 0, i32 0, i32 0, i32 0
  %6 = load i16*, i16** %5, align 8
  %7 = icmp eq i16* %6, null
  %8 = getelementptr inbounds %"class.WTF::Vector.2184", %"class.WTF::Vector.2184"* %0, i64 0, i32 0, i32 1, i64 0
  %9 = bitcast i8* %8 to i16*
  %10 = icmp eq i16* %6, %9
  %11 = or i1 %10, %7
  br i1 %11, label %12, label %16

12:                                               ; preds = %4
  %13 = ptrtoint i8* %8 to i64
  %14 = bitcast %"class.WTF::Vector.2184"* %0 to i64*
  store atomic i64 %13, i64* %14 monotonic, align 8
  %15 = getelementptr inbounds %"class.WTF::Vector.2184", %"class.WTF::Vector.2184"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 8, i32* %15, align 8
  br label %58

16:                                               ; preds = %4
  %17 = getelementptr inbounds %"class.WTF::Vector.2184", %"class.WTF::Vector.2184"* %0, i64 0, i32 0, i32 0, i32 2
  %18 = load i32, i32* %17, align 4
  %19 = getelementptr inbounds %"class.WTF::Vector.2184", %"class.WTF::Vector.2184"* %0, i64 0, i32 0
  %20 = ptrtoint i8* %8 to i64
  %21 = bitcast %"class.WTF::Vector.2184"* %0 to i64*
  store atomic i64 %20, i64* %21 monotonic, align 8
  %22 = getelementptr inbounds %"class.WTF::Vector.2184", %"class.WTF::Vector.2184"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 8, i32* %22, align 8
  %23 = icmp eq i8* %8, null
  br i1 %23, label %28, label %24, !prof !3

24:                                               ; preds = %16
  %25 = zext i32 %18 to i64
  %26 = bitcast i16* %6 to i8*
  %27 = shl nuw nsw i64 %25, 1
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 2 %8, i8* nonnull align 2 %26, i64 %27, i1 false) #16
  br label %28

28:                                               ; preds = %24, %16
  tail call void @_ZN3WTF12VectorBufferIDsLj8ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPDs(%"class.WTF::VectorBuffer.2185"* %19, i16* nonnull %6) #16
  br label %58

29:                                               ; preds = %2
  %30 = zext i32 %1 to i64
  %31 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIDsEEmm(i64 %30) #16
  %32 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %31, i8* getelementptr inbounds ([56 x i8], [56 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIDsEEPKcv, i64 0, i64 0)) #16
  %33 = lshr i64 %31, 1
  %34 = ptrtoint i8* %32 to i64
  %35 = getelementptr inbounds %"class.WTF::Vector.2184", %"class.WTF::Vector.2184"* %0, i64 0, i32 0, i32 0, i32 0
  %36 = load i16*, i16** %35, align 8
  %37 = icmp ne i8* %32, null
  %38 = icmp ne i16* %36, null
  %39 = and i1 %37, %38
  br i1 %39, label %40, label %47, !prof !2

40:                                               ; preds = %29
  %41 = getelementptr inbounds %"class.WTF::Vector.2184", %"class.WTF::Vector.2184"* %0, i64 0, i32 0, i32 0, i32 2
  %42 = load i32, i32* %41, align 4
  %43 = zext i32 %42 to i64
  %44 = bitcast i16* %36 to i8*
  %45 = shl nuw nsw i64 %43, 1
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 2 %32, i8* nonnull align 2 %44, i64 %45, i1 false) #16
  %46 = load i16*, i16** %35, align 8
  br label %47

47:                                               ; preds = %29, %40
  %48 = phi i16* [ %36, %29 ], [ %46, %40 ]
  %49 = getelementptr inbounds %"class.WTF::Vector.2184", %"class.WTF::Vector.2184"* %0, i64 0, i32 0, i32 1, i64 0
  %50 = bitcast i8* %49 to i16*
  %51 = icmp eq i16* %48, %50
  br i1 %51, label %54, label %52, !prof !2

52:                                               ; preds = %47
  %53 = getelementptr inbounds %"class.WTF::Vector.2184", %"class.WTF::Vector.2184"* %0, i64 0, i32 0
  tail call void @_ZN3WTF12VectorBufferIDsLj8ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPDs(%"class.WTF::VectorBuffer.2185"* %53, i16* %48) #16
  br label %54

54:                                               ; preds = %47, %52
  %55 = bitcast %"class.WTF::Vector.2184"* %0 to i64*
  store atomic i64 %34, i64* %55 monotonic, align 8
  %56 = trunc i64 %33 to i32
  %57 = getelementptr inbounds %"class.WTF::Vector.2184", %"class.WTF::Vector.2184"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 %56, i32* %57, align 8
  br label %58

58:                                               ; preds = %28, %54, %12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIDsEEmm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #16
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp ugt i64 %0, 1072693248
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #16
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 1072693248) #16
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.20, i64 0, i64 0), i8* %11, i8* %12) #16
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #16
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([78 x i8], [78 x i8]* @.str.21, i64 0, i64 0), i32 31, %"class.logging::CheckOpResult"* nonnull %3) #16
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #16
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #16
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #16
  %20 = shl i64 %0, 1
  %21 = call i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64 %20) #16
  ret i64 %21
}

declare i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64) local_unnamed_addr #2

declare i8* @_ZN7logging15CheckOpValueStrEm(i64) local_unnamed_addr #2

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF12VectorBufferIDsLj8ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPDs(%"class.WTF::VectorBuffer.2185"*, i16*) local_unnamed_addr #13 comdat align 2 {
  %3 = bitcast i16* %1 to i8*
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %3) #16
  ret void
}

declare void @_ZN3WTF13StringBuilder13CreateBuffer8Ej(%"class.WTF::StringBuilder"*, i32) local_unnamed_addr #2

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIhLj16ENS_18PartitionAllocatorEE14AppendSlowCaseIRhEEvOT_(%"class.WTF::Vector.2180"*, i8* dereferenceable(1)) local_unnamed_addr #13 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::Vector.2180", %"class.WTF::Vector.2180"* %0, i64 0, i32 0, i32 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = add i32 %4, 1
  %6 = getelementptr inbounds %"class.WTF::Vector.2180", %"class.WTF::Vector.2180"* %0, i64 0, i32 0, i32 0, i32 0
  %7 = load i8*, i8** %6, align 8
  %8 = icmp ugt i8* %7, %1
  br i1 %8, label %13, label %9

9:                                                ; preds = %2
  %10 = zext i32 %4 to i64
  %11 = getelementptr inbounds i8, i8* %7, i64 %10
  %12 = icmp ugt i8* %11, %1
  br i1 %12, label %15, label %13

13:                                               ; preds = %9, %2
  tail call void @_ZN3WTF6VectorIhLj16ENS_18PartitionAllocatorEE14ExpandCapacityEj(%"class.WTF::Vector.2180"* %0, i32 %5) #16
  %14 = load i8*, i8** %6, align 8
  br label %21

15:                                               ; preds = %9
  %16 = ptrtoint i8* %1 to i64
  %17 = ptrtoint i8* %7 to i64
  %18 = sub i64 %16, %17
  tail call void @_ZN3WTF6VectorIhLj16ENS_18PartitionAllocatorEE14ExpandCapacityEj(%"class.WTF::Vector.2180"* %0, i32 %5) #16
  %19 = load i8*, i8** %6, align 8
  %20 = getelementptr inbounds i8, i8* %19, i64 %18
  br label %21

21:                                               ; preds = %13, %15
  %22 = phi i8* [ %14, %13 ], [ %19, %15 ]
  %23 = phi i8* [ %1, %13 ], [ %20, %15 ]
  %24 = load i32, i32* %3, align 4
  %25 = zext i32 %24 to i64
  %26 = getelementptr inbounds i8, i8* %22, i64 %25
  %27 = load i8, i8* %23, align 1
  store i8 %27, i8* %26, align 1
  %28 = load i32, i32* %3, align 4
  %29 = add i32 %28, 1
  store i32 %29, i32* %3, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIhLj16ENS_18PartitionAllocatorEE14ExpandCapacityEj(%"class.WTF::Vector.2180"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = getelementptr inbounds %"class.WTF::Vector.2180", %"class.WTF::Vector.2180"* %0, i64 0, i32 0, i32 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = shl i32 %7, 1
  %9 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %9) #16
  %10 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %10, align 8
  %11 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %11)
  %12 = icmp ugt i32 %8, %7
  br i1 %12, label %13, label %14

13:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %11)
  store i8* null, i8** %10, align 8
  br label %23

14:                                               ; preds = %2
  %15 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %8) #16
  %16 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %7) #16
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.17, i64 0, i64 0), i8* %15, i8* %16) #16
  %17 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %18 = load i8*, i8** %17, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %11)
  store i8* %18, i8** %10, align 8
  %19 = icmp eq i8* %18, null
  br i1 %19, label %23, label %20

20:                                               ; preds = %14
  %21 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %21) #16
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.18, i64 0, i64 0), i32 1715, %"class.logging::CheckOpResult"* nonnull %4) #16
  %22 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #16
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %21) #16
  br label %23

23:                                               ; preds = %13, %14, %20
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9) #16
  %24 = icmp ugt i32 %8, 4
  %25 = select i1 %24, i32 %8, i32 4
  %26 = icmp ugt i32 %25, %1
  %27 = select i1 %26, i32 %25, i32 %1
  %28 = load i32, i32* %6, align 8
  %29 = icmp ult i32 %28, %27
  br i1 %29, label %30, label %50, !prof !2

30:                                               ; preds = %23
  %31 = getelementptr inbounds %"class.WTF::Vector.2180", %"class.WTF::Vector.2180"* %0, i64 0, i32 0, i32 0, i32 0
  %32 = load i8*, i8** %31, align 8
  %33 = icmp eq i8* %32, null
  br i1 %33, label %34, label %49

34:                                               ; preds = %30
  %35 = icmp ugt i32 %27, 16
  br i1 %35, label %36, label %43

36:                                               ; preds = %34
  %37 = zext i32 %27 to i64
  %38 = call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIhEEmm(i64 %37) #16
  %39 = call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %38, i8* getelementptr inbounds ([61 x i8], [61 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIhEEPKcv, i64 0, i64 0)) #16
  %40 = ptrtoint i8* %39 to i64
  %41 = bitcast %"class.WTF::Vector.2180"* %0 to i64*
  store atomic i64 %40, i64* %41 monotonic, align 8
  %42 = trunc i64 %38 to i32
  br label %47

43:                                               ; preds = %34
  %44 = getelementptr inbounds %"class.WTF::Vector.2180", %"class.WTF::Vector.2180"* %0, i64 0, i32 0, i32 1, i64 0
  %45 = ptrtoint i8* %44 to i64
  %46 = bitcast %"class.WTF::Vector.2180"* %0 to i64*
  store atomic i64 %45, i64* %46 monotonic, align 8
  br label %47

47:                                               ; preds = %43, %36
  %48 = phi i32 [ 16, %43 ], [ %42, %36 ]
  store i32 %48, i32* %6, align 8
  br label %50

49:                                               ; preds = %30
  call void @_ZN3WTF6VectorIhLj16ENS_18PartitionAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector.2180"* %0, i32 %27) #16
  br label %50

50:                                               ; preds = %23, %47, %49
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIhLj16ENS_18PartitionAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector.2180"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp ult i32 %1, 17
  br i1 %3, label %4, label %26

4:                                                ; preds = %2
  %5 = getelementptr inbounds %"class.WTF::Vector.2180", %"class.WTF::Vector.2180"* %0, i64 0, i32 0, i32 0, i32 0
  %6 = load i8*, i8** %5, align 8
  %7 = icmp eq i8* %6, null
  %8 = getelementptr inbounds %"class.WTF::Vector.2180", %"class.WTF::Vector.2180"* %0, i64 0, i32 0, i32 1, i64 0
  %9 = icmp eq i8* %8, %6
  %10 = or i1 %7, %9
  br i1 %10, label %11, label %15

11:                                               ; preds = %4
  %12 = ptrtoint i8* %8 to i64
  %13 = bitcast %"class.WTF::Vector.2180"* %0 to i64*
  store atomic i64 %12, i64* %13 monotonic, align 8
  %14 = getelementptr inbounds %"class.WTF::Vector.2180", %"class.WTF::Vector.2180"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 16, i32* %14, align 8
  br label %51

15:                                               ; preds = %4
  %16 = getelementptr inbounds %"class.WTF::Vector.2180", %"class.WTF::Vector.2180"* %0, i64 0, i32 0, i32 0, i32 2
  %17 = load i32, i32* %16, align 4
  %18 = getelementptr inbounds %"class.WTF::Vector.2180", %"class.WTF::Vector.2180"* %0, i64 0, i32 0
  %19 = ptrtoint i8* %8 to i64
  %20 = bitcast %"class.WTF::Vector.2180"* %0 to i64*
  store atomic i64 %19, i64* %20 monotonic, align 8
  %21 = getelementptr inbounds %"class.WTF::Vector.2180", %"class.WTF::Vector.2180"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 16, i32* %21, align 8
  %22 = icmp eq i8* %8, null
  br i1 %22, label %25, label %23, !prof !3

23:                                               ; preds = %15
  %24 = zext i32 %17 to i64
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %8, i8* nonnull align 1 %6, i64 %24, i1 false) #16
  br label %25

25:                                               ; preds = %23, %15
  tail call void @_ZN3WTF12VectorBufferIhLj16ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPh(%"class.WTF::VectorBuffer.2181"* %18, i8* nonnull %6) #16
  br label %51

26:                                               ; preds = %2
  %27 = zext i32 %1 to i64
  %28 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIhEEmm(i64 %27) #16
  %29 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %28, i8* getelementptr inbounds ([61 x i8], [61 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIhEEPKcv, i64 0, i64 0)) #16
  %30 = ptrtoint i8* %29 to i64
  %31 = getelementptr inbounds %"class.WTF::Vector.2180", %"class.WTF::Vector.2180"* %0, i64 0, i32 0, i32 0, i32 0
  %32 = load i8*, i8** %31, align 8
  %33 = icmp ne i8* %29, null
  %34 = icmp ne i8* %32, null
  %35 = and i1 %33, %34
  br i1 %35, label %36, label %41, !prof !2

36:                                               ; preds = %26
  %37 = getelementptr inbounds %"class.WTF::Vector.2180", %"class.WTF::Vector.2180"* %0, i64 0, i32 0, i32 0, i32 2
  %38 = load i32, i32* %37, align 4
  %39 = zext i32 %38 to i64
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %29, i8* nonnull align 1 %32, i64 %39, i1 false) #16
  %40 = load i8*, i8** %31, align 8
  br label %41

41:                                               ; preds = %26, %36
  %42 = phi i8* [ %32, %26 ], [ %40, %36 ]
  %43 = getelementptr inbounds %"class.WTF::Vector.2180", %"class.WTF::Vector.2180"* %0, i64 0, i32 0, i32 1, i64 0
  %44 = icmp eq i8* %43, %42
  br i1 %44, label %47, label %45, !prof !2

45:                                               ; preds = %41
  %46 = getelementptr inbounds %"class.WTF::Vector.2180", %"class.WTF::Vector.2180"* %0, i64 0, i32 0
  tail call void @_ZN3WTF12VectorBufferIhLj16ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPh(%"class.WTF::VectorBuffer.2181"* %46, i8* %42) #16
  br label %47

47:                                               ; preds = %41, %45
  %48 = bitcast %"class.WTF::Vector.2180"* %0 to i64*
  store atomic i64 %30, i64* %48 monotonic, align 8
  %49 = trunc i64 %28 to i32
  %50 = getelementptr inbounds %"class.WTF::Vector.2180", %"class.WTF::Vector.2180"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 %49, i32* %50, align 8
  br label %51

51:                                               ; preds = %25, %47, %11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIhEEmm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #16
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp ugt i64 %0, 2145386496
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #16
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 2145386496) #16
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.20, i64 0, i64 0), i8* %11, i8* %12) #16
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #16
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([78 x i8], [78 x i8]* @.str.21, i64 0, i64 0), i32 31, %"class.logging::CheckOpResult"* nonnull %3) #16
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #16
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #16
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #16
  %20 = call i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64 %0) #16
  ret i64 %20
}

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF12VectorBufferIhLj16ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPh(%"class.WTF::VectorBuffer.2181"*, i8*) local_unnamed_addr #13 comdat align 2 {
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %1) #16
  ret void
}

declare void @_ZN3WTF13StringBuilder5ClearEv(%"class.WTF::StringBuilder"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define internal void @"_ZN4base8internal9BindStateIZN5blink26InspectorCacheStorageAgent17requestCacheNamesERKN3WTF6StringENSt3__110unique_ptrINS2_8protocol12CacheStorage7Backend25RequestCacheNamesCallbackENS8_14default_deleteISD_EEEEE3$_0JS5_SG_EE7DestroyEPKNS0_13BindStateBaseE"(%"class.base::internal::BindStateBase"*) #0 align 2 {
  %2 = icmp eq %"class.base::internal::BindStateBase"* %0, null
  br i1 %2, label %33, label %3

3:                                                ; preds = %1
  %4 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 2
  %5 = bitcast void (%"class.base::internal::BindStateBase"*)** %4 to %"class.blink::protocol::CacheStorage::Backend::RequestCacheNamesCallback"**
  %6 = load %"class.blink::protocol::CacheStorage::Backend::RequestCacheNamesCallback"*, %"class.blink::protocol::CacheStorage::Backend::RequestCacheNamesCallback"** %5, align 8
  store %"class.blink::protocol::CacheStorage::Backend::RequestCacheNamesCallback"* null, %"class.blink::protocol::CacheStorage::Backend::RequestCacheNamesCallback"** %5, align 8
  %7 = icmp eq %"class.blink::protocol::CacheStorage::Backend::RequestCacheNamesCallback"* %6, null
  br i1 %7, label %13, label %8

8:                                                ; preds = %3
  %9 = bitcast %"class.blink::protocol::CacheStorage::Backend::RequestCacheNamesCallback"* %6 to void (%"class.blink::protocol::CacheStorage::Backend::RequestCacheNamesCallback"*)***
  %10 = load void (%"class.blink::protocol::CacheStorage::Backend::RequestCacheNamesCallback"*)**, void (%"class.blink::protocol::CacheStorage::Backend::RequestCacheNamesCallback"*)*** %9, align 8
  %11 = getelementptr inbounds void (%"class.blink::protocol::CacheStorage::Backend::RequestCacheNamesCallback"*)*, void (%"class.blink::protocol::CacheStorage::Backend::RequestCacheNamesCallback"*)** %10, i64 4
  %12 = load void (%"class.blink::protocol::CacheStorage::Backend::RequestCacheNamesCallback"*)*, void (%"class.blink::protocol::CacheStorage::Backend::RequestCacheNamesCallback"*)** %11, align 8
  tail call void %12(%"class.blink::protocol::CacheStorage::Backend::RequestCacheNamesCallback"* nonnull %6) #16
  br label %13

13:                                               ; preds = %8, %3
  %14 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 1
  %15 = bitcast void ()** %14 to %"class.WTF::StringImpl"**
  %16 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %15, align 8
  %17 = icmp eq %"class.WTF::StringImpl"* %16, null
  br i1 %17, label %31, label %18

18:                                               ; preds = %13
  %19 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %16, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %20 = load atomic i32, i32* %19 monotonic, align 4
  %21 = and i32 %20, 2
  %22 = icmp eq i32 %21, 0
  %23 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %16, i64 0, i32 0
  %24 = load i32, i32* %23, align 4
  br i1 %22, label %25, label %27

25:                                               ; preds = %18
  %26 = add i32 %24, -1
  store i32 %26, i32* %23, align 4
  br label %27

27:                                               ; preds = %25, %18
  %28 = phi i32 [ %26, %25 ], [ %24, %18 ]
  %29 = icmp eq i32 %28, 0
  br i1 %29, label %30, label %31

30:                                               ; preds = %27
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %16) #16
  br label %31

31:                                               ; preds = %13, %27, %30
  %32 = bitcast %"class.base::internal::BindStateBase"* %0 to i8*
  tail call void @_ZdlPv(i8* %32) #18
  br label %33

33:                                               ; preds = %31, %1
  ret void
}

declare void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_E(%"class.base::internal::BindStateBase"*, void ()*, void (%"class.base::internal::BindStateBase"*)*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define internal void @"_ZN4base8internal7InvokerINS0_9BindStateIZN5blink26InspectorCacheStorageAgent14requestEntriesERKN3WTF6StringEN5crdtp6detail10ValueMaybeIiEESC_NSB_IS6_EENSt3__110unique_ptrINS3_8protocol12CacheStorage7Backend22RequestEntriesCallbackENSE_14default_deleteISJ_EEEEE3$_1JNS3_12_GLOBAL__N_117DataRequestParamsESM_EEEFvN4mojo9StructPtrINS3_5mojom5blink10OpenResultEEEEE7RunOnceEPNS0_13BindStateBaseEOSW_"(%"class.base::internal::BindStateBase"* nocapture, %"class.mojo::StructPtr.2200"* nocapture dereferenceable(8)) #0 align 2 {
  %3 = alloca %"class.mojo::PendingAssociatedRemote", align 8
  %4 = alloca %"class.mojo::PendingAssociatedRemote", align 8
  %5 = alloca %"class.base::TimeTicks", align 8
  %6 = alloca %"class.std::__1::unique_ptr.2212", align 8
  %7 = alloca %"class.mojo::StructPtr.1985", align 8
  %8 = alloca %"class.mojo::InlinedStructPtr.2014", align 4
  %9 = alloca %"class.base::OnceCallback.2232", align 8
  %10 = alloca %"class.crdtp::DispatchResponse", align 8
  %11 = alloca %"class.std::__1::basic_string", align 8
  %12 = alloca %"class.WTF::String", align 8
  %13 = alloca %"class.std::__1::basic_string", align 8
  %14 = alloca %"class.std::__1::unique_ptr.2212", align 8
  %15 = alloca %"struct.blink::(anonymous namespace)::DataRequestParams", align 16
  %16 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 1
  %17 = getelementptr inbounds void ()*, void ()** %16, i64 3
  %18 = bitcast void ()** %16 to %"class.WTF::StringImpl"**
  %19 = bitcast void ()** %16 to <2 x i64>*
  %20 = load <2 x i64>, <2 x i64>* %19, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %18, align 8
  %21 = getelementptr inbounds void ()*, void ()** %16, i64 2
  %22 = bitcast void ()** %21 to %"class.WTF::StringImpl"**
  %23 = bitcast void ()** %21 to i64*
  %24 = load i64, i64* %23, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %22, align 8
  %25 = bitcast void ()** %17 to %"class.blink::protocol::CacheStorage::Backend::RequestEntriesCallback"**
  %26 = bitcast void ()** %17 to i64*
  %27 = load i64, i64* %26, align 8
  store %"class.blink::protocol::CacheStorage::Backend::RequestEntriesCallback"* null, %"class.blink::protocol::CacheStorage::Backend::RequestEntriesCallback"** %25, align 8
  %28 = bitcast %"class.mojo::StructPtr.2200"* %1 to i64*
  %29 = getelementptr inbounds %"class.mojo::StructPtr.2200", %"class.mojo::StructPtr.2200"* %1, i64 0, i32 0, i32 0, i32 0, i32 0
  %30 = load %"class.blink::mojom::blink::OpenResult"*, %"class.blink::mojom::blink::OpenResult"** %29, align 8
  store i64 0, i64* %28, align 8
  %31 = inttoptr i64 %27 to %"class.blink::protocol::CacheStorage::Backend::RequestEntriesCallback"*
  %32 = bitcast %"struct.blink::(anonymous namespace)::DataRequestParams"* %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %32) #16
  %33 = bitcast %"class.std::__1::basic_string"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %33) #16
  %34 = getelementptr inbounds %"struct.blink::(anonymous namespace)::DataRequestParams", %"struct.blink::(anonymous namespace)::DataRequestParams"* %15, i64 0, i32 1
  %35 = bitcast i32* %34 to i64*
  %36 = bitcast %"struct.blink::(anonymous namespace)::DataRequestParams"* %15 to <2 x i64>*
  store <2 x i64> %20, <2 x i64>* %36, align 16
  %37 = getelementptr inbounds %"struct.blink::(anonymous namespace)::DataRequestParams", %"struct.blink::(anonymous namespace)::DataRequestParams"* %15, i64 0, i32 3
  %38 = bitcast %"class.WTF::String"* %37 to i64*
  store i64 %24, i64* %38, align 16
  %39 = getelementptr inbounds %"class.blink::mojom::blink::OpenResult", %"class.blink::mojom::blink::OpenResult"* %30, i64 0, i32 0
  %40 = load i32, i32* %39, align 8
  %41 = icmp eq i32 %40, 0
  br i1 %41, label %42, label %108

42:                                               ; preds = %2
  %43 = bitcast %"class.crdtp::DispatchResponse"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %43) #16
  %44 = bitcast %"class.WTF::String"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %44) #16
  %45 = bitcast %"class.std::__1::basic_string"* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %45) #16
  %46 = getelementptr inbounds %"struct.blink::(anonymous namespace)::DataRequestParams", %"struct.blink::(anonymous namespace)::DataRequestParams"* %15, i64 0, i32 0
  call void @_ZNK3WTF6String6Latin1Ev(%"class.std::__1::basic_string"* nonnull sret %13, %"class.WTF::String"* nonnull %46) #16
  %47 = bitcast %"class.std::__1::basic_string"* %13 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %48 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %47, i64 0, i32 1, i32 0
  %49 = load i8, i8* %48, align 1
  %50 = icmp slt i8 %49, 0
  %51 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %13, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %52 = load i8*, i8** %51, align 8
  %53 = select i1 %50, i8* %52, i8* %45
  %54 = getelementptr inbounds %"class.blink::mojom::blink::OpenResult", %"class.blink::mojom::blink::OpenResult"* %30, i64 0, i32 1
  %55 = bitcast %"union.blink::mojom::blink::OpenResult::Union_"* %54 to i32*
  %56 = load i32, i32* %55, align 8
  %57 = add i32 %56, -1
  %58 = icmp ult i32 %57, 9
  br i1 %58, label %59, label %63

59:                                               ; preds = %42
  %60 = sext i32 %57 to i64
  %61 = getelementptr inbounds [9 x i8*], [9 x i8*]* @"switch.table._ZN4base8internal7InvokerINS0_9BindStateIZN5blink26InspectorCacheStorageAgent21requestCachedResponseERKN3WTF6StringES8_NSt3__110unique_ptrINS9_6vectorINSA_INS3_8protocol12CacheStorage6HeaderENS9_14default_deleteISE_EEEENS9_9allocatorISH_EEEENSF_ISK_EEEENSA_INSD_7Backend29RequestCachedResponseCallbackENSF_ISO_EEEEE3$_4JSQ_EEEFvN4mojo9StructPtrINS3_5mojom5blink11MatchResultEEEEE7RunOnceEPNS0_13BindStateBaseEOSY_", i64 0, i64 %60
  %62 = load i8*, i8** %61, align 8
  br label %63

63:                                               ; preds = %42, %59
  %64 = phi i8* [ %62, %59 ], [ getelementptr inbounds ([1 x i8], [1 x i8]* @.str.2, i64 0, i64 0), %42 ]
  %65 = call %"class.WTF::StringImpl"* (i8*, ...) @_ZN3WTF6String6FormatEPKcz(i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.22, i64 0, i64 0), i8* %53, i8* nonnull %64) #16
  %66 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %12, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %65, %"class.WTF::StringImpl"** %66, align 8
  call void @_ZNK3WTF6String4Utf8ENS_18UTF8ConversionModeE(%"class.std::__1::basic_string"* nonnull sret %11, %"class.WTF::String"* nonnull %12, i32 0) #16
  call void @_ZN5crdtp16DispatchResponse11ServerErrorENSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.crdtp::DispatchResponse"* nonnull sret %10, %"class.std::__1::basic_string"* nonnull %11) #16
  %67 = inttoptr i64 %27 to void (%"class.blink::protocol::CacheStorage::Backend::RequestEntriesCallback"*, %"class.crdtp::DispatchResponse"*)***
  %68 = load void (%"class.blink::protocol::CacheStorage::Backend::RequestEntriesCallback"*, %"class.crdtp::DispatchResponse"*)**, void (%"class.blink::protocol::CacheStorage::Backend::RequestEntriesCallback"*, %"class.crdtp::DispatchResponse"*)*** %67, align 8
  %69 = getelementptr inbounds void (%"class.blink::protocol::CacheStorage::Backend::RequestEntriesCallback"*, %"class.crdtp::DispatchResponse"*)*, void (%"class.blink::protocol::CacheStorage::Backend::RequestEntriesCallback"*, %"class.crdtp::DispatchResponse"*)** %68, i64 1
  %70 = load void (%"class.blink::protocol::CacheStorage::Backend::RequestEntriesCallback"*, %"class.crdtp::DispatchResponse"*)*, void (%"class.blink::protocol::CacheStorage::Backend::RequestEntriesCallback"*, %"class.crdtp::DispatchResponse"*)** %69, align 8
  call void %70(%"class.blink::protocol::CacheStorage::Backend::RequestEntriesCallback"* %31, %"class.crdtp::DispatchResponse"* nonnull dereferenceable(32) %10) #16
  %71 = getelementptr inbounds %"class.crdtp::DispatchResponse", %"class.crdtp::DispatchResponse"* %10, i64 0, i32 1
  %72 = bitcast %"class.std::__1::basic_string"* %71 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %73 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %72, i64 0, i32 1, i32 0
  %74 = load i8, i8* %73, align 1
  %75 = icmp slt i8 %74, 0
  br i1 %75, label %76, label %79

76:                                               ; preds = %63
  %77 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %71, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %78 = load i8*, i8** %77, align 8
  call void @_ZdlPv(i8* %78) #18
  br label %79

79:                                               ; preds = %76, %63
  %80 = bitcast %"class.std::__1::basic_string"* %11 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %81 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %80, i64 0, i32 1, i32 0
  %82 = load i8, i8* %81, align 1
  %83 = icmp slt i8 %82, 0
  br i1 %83, label %84, label %87

84:                                               ; preds = %79
  %85 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %11, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %86 = load i8*, i8** %85, align 8
  call void @_ZdlPv(i8* %86) #18
  br label %87

87:                                               ; preds = %84, %79
  %88 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %66, align 8
  %89 = icmp eq %"class.WTF::StringImpl"* %88, null
  br i1 %89, label %103, label %90

90:                                               ; preds = %87
  %91 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %88, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %92 = load atomic i32, i32* %91 monotonic, align 4
  %93 = and i32 %92, 2
  %94 = icmp eq i32 %93, 0
  %95 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %88, i64 0, i32 0
  %96 = load i32, i32* %95, align 4
  br i1 %94, label %97, label %99

97:                                               ; preds = %90
  %98 = add i32 %96, -1
  store i32 %98, i32* %95, align 4
  br label %99

99:                                               ; preds = %97, %90
  %100 = phi i32 [ %98, %97 ], [ %96, %90 ]
  %101 = icmp eq i32 %100, 0
  br i1 %101, label %102, label %103

102:                                              ; preds = %99
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %88) #16
  br label %103

103:                                              ; preds = %102, %99, %87
  %104 = load i8, i8* %48, align 1
  %105 = icmp slt i8 %104, 0
  br i1 %105, label %106, label %271

106:                                              ; preds = %103
  %107 = load i8*, i8** %51, align 8
  call void @_ZdlPv(i8* %107) #18
  br label %271

108:                                              ; preds = %2
  %109 = bitcast %"class.std::__1::unique_ptr.2212"* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %109) #16
  %110 = getelementptr inbounds %"class.std::__1::unique_ptr.2212", %"class.std::__1::unique_ptr.2212"* %14, i64 0, i32 0, i32 0, i32 0
  store %"class.blink::(anonymous namespace)::GetCacheKeysForRequestData"* inttoptr (i64 -6148914691236517206 to %"class.blink::(anonymous namespace)::GetCacheKeysForRequestData"*), %"class.blink::(anonymous namespace)::GetCacheKeysForRequestData"** %110, align 8
  %111 = getelementptr inbounds %"class.blink::mojom::blink::OpenResult", %"class.blink::mojom::blink::OpenResult"* %30, i64 0, i32 1, i32 0
  %112 = load %"class.mojo::PendingAssociatedRemote"*, %"class.mojo::PendingAssociatedRemote"** %111, align 8
  %113 = bitcast %"class.mojo::PendingAssociatedRemote"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %113) #16
  %114 = tail call noalias i8* @malloc(i64 56) #16
  %115 = getelementptr inbounds %"class.mojo::PendingAssociatedRemote", %"class.mojo::PendingAssociatedRemote"* %4, i64 0, i32 0
  %116 = getelementptr inbounds %"class.mojo::PendingAssociatedRemote", %"class.mojo::PendingAssociatedRemote"* %112, i64 0, i32 0
  call void @_ZN4mojo29ScopedInterfaceEndpointHandleC1EOS0_(%"class.mojo::ScopedInterfaceEndpointHandle"* nonnull %115, %"class.mojo::ScopedInterfaceEndpointHandle"* dereferenceable(8) %116) #16
  %117 = getelementptr inbounds %"class.mojo::PendingAssociatedRemote", %"class.mojo::PendingAssociatedRemote"* %4, i64 0, i32 1
  %118 = getelementptr inbounds %"class.mojo::PendingAssociatedRemote", %"class.mojo::PendingAssociatedRemote"* %112, i64 0, i32 1
  %119 = load i32, i32* %118, align 8
  store i32 %119, i32* %117, align 8
  %120 = bitcast %"class.mojo::PendingAssociatedRemote"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %120) #16
  %121 = getelementptr inbounds %"struct.blink::(anonymous namespace)::DataRequestParams", %"struct.blink::(anonymous namespace)::DataRequestParams"* %15, i64 0, i32 0, i32 0, i32 0
  %122 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %121, align 16
  %123 = bitcast i8* %114 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %122, %"class.WTF::StringImpl"** %123, align 8
  %124 = icmp eq %"class.WTF::StringImpl"* %122, null
  br i1 %124, label %142, label %125

125:                                              ; preds = %108
  %126 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %122, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %127 = load atomic i32, i32* %126 monotonic, align 4
  %128 = and i32 %127, 2
  %129 = icmp eq i32 %128, 0
  br i1 %129, label %130, label %142

130:                                              ; preds = %125
  %131 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %122, i64 0, i32 0
  %132 = load i32, i32* %131, align 4
  %133 = zext i32 %132 to i33
  %134 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %133, i33 1) #16
  %135 = extractvalue { i33, i1 } %134, 1
  %136 = extractvalue { i33, i1 } %134, 0
  %137 = icmp slt i33 %136, 0
  %138 = or i1 %135, %137
  br i1 %138, label %139, label %140, !prof !3

139:                                              ; preds = %130
  call void @llvm.trap() #16
  unreachable

140:                                              ; preds = %130
  %141 = trunc i33 %136 to i32
  store i32 %141, i32* %131, align 4
  br label %142

142:                                              ; preds = %140, %125, %108
  %143 = getelementptr inbounds i8, i8* %114, i64 8
  %144 = bitcast i8* %143 to i64*
  %145 = load i64, i64* %35, align 8
  store i64 %145, i64* %144, align 8
  %146 = getelementptr inbounds %"struct.blink::(anonymous namespace)::DataRequestParams", %"struct.blink::(anonymous namespace)::DataRequestParams"* %15, i64 0, i32 3, i32 0, i32 0
  %147 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %146, align 16
  %148 = getelementptr inbounds i8, i8* %114, i64 16
  %149 = bitcast i8* %148 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %147, %"class.WTF::StringImpl"** %149, align 8
  %150 = icmp eq %"class.WTF::StringImpl"* %147, null
  br i1 %150, label %168, label %151

151:                                              ; preds = %142
  %152 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %147, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %153 = load atomic i32, i32* %152 monotonic, align 4
  %154 = and i32 %153, 2
  %155 = icmp eq i32 %154, 0
  br i1 %155, label %156, label %168

156:                                              ; preds = %151
  %157 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %147, i64 0, i32 0
  %158 = load i32, i32* %157, align 4
  %159 = zext i32 %158 to i33
  %160 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %159, i33 1) #16
  %161 = extractvalue { i33, i1 } %160, 1
  %162 = extractvalue { i33, i1 } %160, 0
  %163 = icmp slt i33 %162, 0
  %164 = or i1 %161, %163
  br i1 %164, label %165, label %166, !prof !3

165:                                              ; preds = %156
  call void @llvm.trap() #16
  unreachable

166:                                              ; preds = %156
  %167 = trunc i33 %162 to i32
  store i32 %167, i32* %157, align 4
  br label %168

168:                                              ; preds = %166, %151, %142
  %169 = getelementptr inbounds i8, i8* %114, i64 24
  %170 = bitcast i8* %169 to %"class.mojo::AssociatedRemote.2215"*
  %171 = bitcast i8* %169 to %"class.mojo::internal::AssociatedInterfacePtrStateBase"*
  call void @_ZN4mojo8internal31AssociatedInterfacePtrStateBaseC2Ev(%"class.mojo::internal::AssociatedInterfacePtrStateBase"* %171) #16
  %172 = getelementptr inbounds i8, i8* %114, i64 40
  %173 = bitcast i8* %172 to i64*
  store i64 0, i64* %173, align 8
  %174 = getelementptr inbounds i8, i8* %114, i64 48
  %175 = bitcast i8* %174 to i64*
  store i64 %27, i64* %175, align 8
  %176 = getelementptr inbounds %"class.mojo::PendingAssociatedRemote", %"class.mojo::PendingAssociatedRemote"* %3, i64 0, i32 0
  call void @_ZN4mojo29ScopedInterfaceEndpointHandleC1EOS0_(%"class.mojo::ScopedInterfaceEndpointHandle"* nonnull %176, %"class.mojo::ScopedInterfaceEndpointHandle"* nonnull dereferenceable(8) %115) #16
  %177 = getelementptr inbounds %"class.mojo::PendingAssociatedRemote", %"class.mojo::PendingAssociatedRemote"* %3, i64 0, i32 1
  %178 = load i32, i32* %117, align 8
  store i32 %178, i32* %177, align 8
  call void @_ZN4mojo16AssociatedRemoteIN5blink5mojom5blink17CacheStorageCacheEE4BindENS_23PendingAssociatedRemoteIS4_EE13scoped_refptrIN4base19SequencedTaskRunnerEE(%"class.mojo::AssociatedRemote.2215"* %170, %"class.mojo::PendingAssociatedRemote"* nonnull %3, %"class.base::SequencedTaskRunner"* null) #16
  call void @_ZN4mojo29ScopedInterfaceEndpointHandleD1Ev(%"class.mojo::ScopedInterfaceEndpointHandle"* nonnull %176) #16
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %120) #16
  call void @_ZN4mojo29ScopedInterfaceEndpointHandleD1Ev(%"class.mojo::ScopedInterfaceEndpointHandle"* nonnull %115) #16
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %113) #16
  %179 = ptrtoint i8* %114 to i64
  store %"class.blink::(anonymous namespace)::GetCacheKeysForRequestData"* null, %"class.blink::(anonymous namespace)::GetCacheKeysForRequestData"** %110, align 8
  %180 = bitcast %"class.std::__1::unique_ptr.2212"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %180) #16
  %181 = bitcast %"class.mojo::StructPtr.1985"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %181) #16
  %182 = getelementptr inbounds %"class.mojo::InlinedStructPtr.2014", %"class.mojo::InlinedStructPtr.2014"* %8, i64 0, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %182) #16
  %183 = bitcast %"class.base::OnceCallback.2232"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %183) #16
  %184 = getelementptr inbounds %"class.std::__1::unique_ptr.2212", %"class.std::__1::unique_ptr.2212"* %6, i64 0, i32 0, i32 0, i32 0
  %185 = bitcast %"class.std::__1::unique_ptr.2212"* %6 to i8**
  store i8* %114, i8** %185, align 8
  %186 = call i64 @_ZN5blink13cache_storage13CreateTraceIdEv() #16
  %187 = load i8, i8* getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 23, i32 0), align 16
  %188 = and i8 %187, 25
  %189 = icmp eq i8 %188, 0
  br i1 %189, label %196, label %190, !prof !2

190:                                              ; preds = %168
  %191 = call i32 @_ZN4base14PlatformThread9CurrentIdEv() #16
  %192 = bitcast %"class.base::TimeTicks"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %192) #16
  %193 = getelementptr inbounds %"class.base::TimeTicks", %"class.base::TimeTicks"* %5, i64 0, i32 0, i32 0
  %194 = call i64 @_ZN4base6subtle28TimeTicksNowIgnoringOverrideEv() #16
  store i64 %194, i64* %193, align 8
  %195 = call i64 @_ZN20trace_event_internal37AddTraceEventWithThreadIdAndTimestampEcPKhPKcS3_yyiRKN4base9TimeTicksEPNS4_11trace_event14TraceArgumentsEj(i8 signext 88, i8* getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 23, i32 0), i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.32, i64 0, i64 0), i8* null, i64 0, i64 %186, i32 %191, %"class.base::TimeTicks"* nonnull dereferenceable(8) %5, %"class.base::trace_event::TraceArguments"* null, i32 4352) #16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %192) #16
  br label %196

196:                                              ; preds = %190, %168
  %197 = phi i8* [ null, %168 ], [ getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 23, i32 0), %190 ]
  %198 = phi i8* [ inttoptr (i64 -6148914691236517206 to i8*), %168 ], [ getelementptr inbounds ([37 x i8], [37 x i8]* @.str.32, i64 0, i64 0), %190 ]
  %199 = phi i64 [ -6148914691236517206, %168 ], [ %195, %190 ]
  %200 = bitcast i8* %172 to %"class.blink::mojom::blink::CacheStorageCacheProxy"**
  %201 = load %"class.blink::mojom::blink::CacheStorageCacheProxy"*, %"class.blink::mojom::blink::CacheStorageCacheProxy"** %200, align 8
  %202 = bitcast %"class.mojo::StructPtr.1985"* %7 to i64*
  store i64 0, i64* %202, align 8
  %203 = getelementptr inbounds %"class.mojo::InlinedStructPtr.2014", %"class.mojo::InlinedStructPtr.2014"* %8, i64 0, i32 0
  call void @_ZN5blink5mojom5blink17CacheQueryOptionsC1Ev(%"class.blink::mojom::blink::CacheQueryOptions"* nonnull %203) #16
  %204 = getelementptr inbounds %"class.mojo::InlinedStructPtr.2014", %"class.mojo::InlinedStructPtr.2014"* %8, i64 0, i32 1
  store i32 1, i32* %204, align 4, !alias.scope !77
  %205 = getelementptr inbounds %"class.base::OnceCallback.2232", %"class.base::OnceCallback.2232"* %9, i64 0, i32 0, i32 0, i32 0
  store %"class.base::internal::BindStateBase"* inttoptr (i64 -6148914691236517206 to %"class.base::internal::BindStateBase"*), %"class.base::internal::BindStateBase"** %205, align 8, !alias.scope !80
  %206 = call i8* @_Znwm(i64 72) #18, !noalias !83
  %207 = bitcast i8* %206 to %"class.base::internal::BindStateBase"*
  call void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_E(%"class.base::internal::BindStateBase"* nonnull %207, void ()* bitcast (void (%"class.base::internal::BindStateBase"*, %"class.mojo::StructPtr.2235"*)* @_ZN4base8internal7InvokerINS0_9BindStateIZN5blink12_GLOBAL__N_126GetCacheKeysForRequestData8DispatchENSt3__110unique_ptrIS5_NS6_14default_deleteIS5_EEEEEUlNS4_17DataRequestParamsESA_N4mojo9StructPtrINS3_5mojom5blink15CacheKeysResultEEEE_JSB_SA_EEEFvSH_EE7RunOnceEPNS0_13BindStateBaseEOSH_ to void ()*), void (%"class.base::internal::BindStateBase"*)* nonnull @_ZN4base8internal9BindStateIZN5blink12_GLOBAL__N_126GetCacheKeysForRequestData8DispatchENSt3__110unique_ptrIS4_NS5_14default_deleteIS4_EEEEEUlNS3_17DataRequestParamsES9_N4mojo9StructPtrINS2_5mojom5blink15CacheKeysResultEEEE_JSA_S9_EE7DestroyEPKNS0_13BindStateBaseE) #16, !noalias !83
  %208 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %123, align 8, !noalias !83
  %209 = getelementptr inbounds i8, i8* %206, i64 40
  %210 = bitcast i8* %209 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %208, %"class.WTF::StringImpl"** %210, align 8, !noalias !83
  %211 = icmp eq %"class.WTF::StringImpl"* %208, null
  br i1 %211, label %229, label %212

212:                                              ; preds = %196
  %213 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %208, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %214 = load atomic i32, i32* %213 monotonic, align 4, !noalias !83
  %215 = and i32 %214, 2
  %216 = icmp eq i32 %215, 0
  br i1 %216, label %217, label %229

217:                                              ; preds = %212
  %218 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %208, i64 0, i32 0
  %219 = load i32, i32* %218, align 4, !noalias !83
  %220 = zext i32 %219 to i33
  %221 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %220, i33 1) #16
  %222 = extractvalue { i33, i1 } %221, 1
  %223 = extractvalue { i33, i1 } %221, 0
  %224 = icmp slt i33 %223, 0
  %225 = or i1 %222, %224
  br i1 %225, label %226, label %227, !prof !3

226:                                              ; preds = %217
  call void @llvm.trap() #16, !noalias !83
  unreachable

227:                                              ; preds = %217
  %228 = trunc i33 %223 to i32
  store i32 %228, i32* %218, align 4, !noalias !83
  br label %229

229:                                              ; preds = %227, %212, %196
  %230 = getelementptr inbounds i8, i8* %206, i64 48
  %231 = bitcast i8* %230 to i64*
  %232 = load i64, i64* %144, align 8, !noalias !83
  store i64 %232, i64* %231, align 8, !noalias !83
  %233 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %149, align 8, !noalias !83
  %234 = getelementptr inbounds i8, i8* %206, i64 56
  %235 = bitcast i8* %234 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %233, %"class.WTF::StringImpl"** %235, align 8, !noalias !83
  %236 = icmp eq %"class.WTF::StringImpl"* %233, null
  br i1 %236, label %254, label %237

237:                                              ; preds = %229
  %238 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %233, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %239 = load atomic i32, i32* %238 monotonic, align 4, !noalias !83
  %240 = and i32 %239, 2
  %241 = icmp eq i32 %240, 0
  br i1 %241, label %242, label %254

242:                                              ; preds = %237
  %243 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %233, i64 0, i32 0
  %244 = load i32, i32* %243, align 4, !noalias !83
  %245 = zext i32 %244 to i33
  %246 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %245, i33 1) #16
  %247 = extractvalue { i33, i1 } %246, 1
  %248 = extractvalue { i33, i1 } %246, 0
  %249 = icmp slt i33 %248, 0
  %250 = or i1 %247, %249
  br i1 %250, label %251, label %252, !prof !3

251:                                              ; preds = %242
  call void @llvm.trap() #16, !noalias !83
  unreachable

252:                                              ; preds = %242
  %253 = trunc i33 %248 to i32
  store i32 %253, i32* %243, align 4, !noalias !83
  br label %254

254:                                              ; preds = %252, %237, %229
  %255 = getelementptr inbounds i8, i8* %206, i64 64
  store %"class.blink::(anonymous namespace)::GetCacheKeysForRequestData"* null, %"class.blink::(anonymous namespace)::GetCacheKeysForRequestData"** %184, align 8, !noalias !83
  %256 = bitcast i8* %255 to i64*
  store i64 %179, i64* %256, align 8, !noalias !83
  %257 = bitcast %"class.base::OnceCallback.2232"* %9 to i8**
  store i8* %206, i8** %257, align 8, !alias.scope !83
  call void @_ZN5blink5mojom5blink22CacheStorageCacheProxy4KeysEN4mojo9StructPtrINS1_15FetchAPIRequestEEENS3_16InlinedStructPtrINS1_17CacheQueryOptionsEEElN4base12OnceCallbackIFvNS4_INS1_15CacheKeysResultEEEEEE(%"class.blink::mojom::blink::CacheStorageCacheProxy"* %201, %"class.mojo::StructPtr.1985"* nonnull %7, %"class.mojo::InlinedStructPtr.2014"* nonnull %8, i64 %186, %"class.base::OnceCallback.2232"* nonnull %9) #16
  %258 = getelementptr inbounds %"class.base::OnceCallback.2232", %"class.base::OnceCallback.2232"* %9, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %258) #16
  call void @_ZN5blink5mojom5blink17CacheQueryOptionsD1Ev(%"class.blink::mojom::blink::CacheQueryOptions"* nonnull %203) #16
  %259 = getelementptr inbounds %"class.mojo::StructPtr.1985", %"class.mojo::StructPtr.1985"* %7, i64 0, i32 0, i32 0, i32 0, i32 0
  %260 = load %"class.blink::mojom::blink::FetchAPIRequest"*, %"class.blink::mojom::blink::FetchAPIRequest"** %259, align 8
  store %"class.blink::mojom::blink::FetchAPIRequest"* null, %"class.blink::mojom::blink::FetchAPIRequest"** %259, align 8
  %261 = icmp eq %"class.blink::mojom::blink::FetchAPIRequest"* %260, null
  br i1 %261, label %264, label %262

262:                                              ; preds = %254
  call void @_ZN5blink5mojom5blink15FetchAPIRequestD1Ev(%"class.blink::mojom::blink::FetchAPIRequest"* nonnull %260) #16
  %263 = bitcast %"class.blink::mojom::blink::FetchAPIRequest"* %260 to i8*
  call void @_ZdlPv(i8* %263) #18
  br label %264

264:                                              ; preds = %262, %254
  %265 = icmp eq i8* %197, null
  br i1 %265, label %270, label %266

266:                                              ; preds = %264
  %267 = load i8, i8* %197, align 1
  %268 = icmp eq i8 %267, 0
  br i1 %268, label %270, label %269

269:                                              ; preds = %266
  call void @_ZN20trace_event_internal24UpdateTraceEventDurationEPKhPKcN4base11trace_event16TraceEventHandleE(i8* nonnull %197, i8* %198, i64 %199) #16
  br label %270

270:                                              ; preds = %269, %266, %264
  call fastcc void @_ZNSt3__110unique_ptrIN5blink12_GLOBAL__N_126GetCacheKeysForRequestDataENS_14default_deleteIS3_EEED2Ev(%"class.std::__1::unique_ptr.2212"* nonnull %6) #16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %180) #16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %181) #16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %182) #16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %183) #16
  call fastcc void @_ZNSt3__110unique_ptrIN5blink12_GLOBAL__N_126GetCacheKeysForRequestDataENS_14default_deleteIS3_EEED2Ev(%"class.std::__1::unique_ptr.2212"* nonnull %14) #16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %109) #16
  br label %278

271:                                              ; preds = %106, %103
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %45) #16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %44) #16
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %43) #16
  %272 = icmp eq i64 %27, 0
  br i1 %272, label %278, label %273

273:                                              ; preds = %271
  %274 = inttoptr i64 %27 to void (%"class.blink::protocol::CacheStorage::Backend::RequestEntriesCallback"*)***
  %275 = load void (%"class.blink::protocol::CacheStorage::Backend::RequestEntriesCallback"*)**, void (%"class.blink::protocol::CacheStorage::Backend::RequestEntriesCallback"*)*** %274, align 8
  %276 = getelementptr inbounds void (%"class.blink::protocol::CacheStorage::Backend::RequestEntriesCallback"*)*, void (%"class.blink::protocol::CacheStorage::Backend::RequestEntriesCallback"*)** %275, i64 4
  %277 = load void (%"class.blink::protocol::CacheStorage::Backend::RequestEntriesCallback"*)*, void (%"class.blink::protocol::CacheStorage::Backend::RequestEntriesCallback"*)** %276, align 8
  call void %277(%"class.blink::protocol::CacheStorage::Backend::RequestEntriesCallback"* nonnull %31) #16
  br label %278

278:                                              ; preds = %273, %271, %270
  %279 = getelementptr inbounds %"struct.blink::(anonymous namespace)::DataRequestParams", %"struct.blink::(anonymous namespace)::DataRequestParams"* %15, i64 0, i32 3, i32 0, i32 0
  %280 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %279, align 16
  %281 = icmp eq %"class.WTF::StringImpl"* %280, null
  br i1 %281, label %295, label %282

282:                                              ; preds = %278
  %283 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %280, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %284 = load atomic i32, i32* %283 monotonic, align 4
  %285 = and i32 %284, 2
  %286 = icmp eq i32 %285, 0
  %287 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %280, i64 0, i32 0
  %288 = load i32, i32* %287, align 4
  br i1 %286, label %289, label %291

289:                                              ; preds = %282
  %290 = add i32 %288, -1
  store i32 %290, i32* %287, align 4
  br label %291

291:                                              ; preds = %289, %282
  %292 = phi i32 [ %290, %289 ], [ %288, %282 ]
  %293 = icmp eq i32 %292, 0
  br i1 %293, label %294, label %295

294:                                              ; preds = %291
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %280) #16
  br label %295

295:                                              ; preds = %294, %291, %278
  %296 = getelementptr inbounds %"struct.blink::(anonymous namespace)::DataRequestParams", %"struct.blink::(anonymous namespace)::DataRequestParams"* %15, i64 0, i32 0, i32 0, i32 0
  %297 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %296, align 16
  %298 = icmp eq %"class.WTF::StringImpl"* %297, null
  br i1 %298, label %312, label %299

299:                                              ; preds = %295
  %300 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %297, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %301 = load atomic i32, i32* %300 monotonic, align 4
  %302 = and i32 %301, 2
  %303 = icmp eq i32 %302, 0
  %304 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %297, i64 0, i32 0
  %305 = load i32, i32* %304, align 4
  br i1 %303, label %306, label %308

306:                                              ; preds = %299
  %307 = add i32 %305, -1
  store i32 %307, i32* %304, align 4
  br label %308

308:                                              ; preds = %306, %299
  %309 = phi i32 [ %307, %306 ], [ %305, %299 ]
  %310 = icmp eq i32 %309, 0
  br i1 %310, label %311, label %312

311:                                              ; preds = %308
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %297) #16
  br label %312

312:                                              ; preds = %311, %308, %295
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %32) #16
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %33) #16
  %313 = icmp eq %"class.blink::mojom::blink::OpenResult"* %30, null
  br i1 %313, label %316, label %314

314:                                              ; preds = %312
  call void @_ZN5blink5mojom5blink10OpenResultD1Ev(%"class.blink::mojom::blink::OpenResult"* nonnull %30) #16
  %315 = bitcast %"class.blink::mojom::blink::OpenResult"* %30 to i8*
  call void @_ZdlPv(i8* %315) #18
  br label %316

316:                                              ; preds = %312, %314
  ret void
}

declare %"class.WTF::StringImpl"* @_ZN3WTF6String6FormatEPKcz(i8*, ...) local_unnamed_addr #2

declare void @_ZNK3WTF6String6Latin1Ev(%"class.std::__1::basic_string"* sret, %"class.WTF::String"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define internal fastcc void @_ZNSt3__110unique_ptrIN5blink12_GLOBAL__N_126GetCacheKeysForRequestDataENS_14default_deleteIS3_EEED2Ev(%"class.std::__1::unique_ptr.2212"* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.std::__1::unique_ptr.2212", %"class.std::__1::unique_ptr.2212"* %0, i64 0, i32 0, i32 0, i32 0
  %3 = load %"class.blink::(anonymous namespace)::GetCacheKeysForRequestData"*, %"class.blink::(anonymous namespace)::GetCacheKeysForRequestData"** %2, align 8
  store %"class.blink::(anonymous namespace)::GetCacheKeysForRequestData"* null, %"class.blink::(anonymous namespace)::GetCacheKeysForRequestData"** %2, align 8
  %4 = icmp eq %"class.blink::(anonymous namespace)::GetCacheKeysForRequestData"* %3, null
  br i1 %4, label %61, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.blink::(anonymous namespace)::GetCacheKeysForRequestData", %"class.blink::(anonymous namespace)::GetCacheKeysForRequestData"* %3, i64 0, i32 2, i32 0, i32 0, i32 0
  %7 = load %"class.blink::protocol::CacheStorage::Backend::RequestEntriesCallback"*, %"class.blink::protocol::CacheStorage::Backend::RequestEntriesCallback"** %6, align 8
  store %"class.blink::protocol::CacheStorage::Backend::RequestEntriesCallback"* null, %"class.blink::protocol::CacheStorage::Backend::RequestEntriesCallback"** %6, align 8
  %8 = icmp eq %"class.blink::protocol::CacheStorage::Backend::RequestEntriesCallback"* %7, null
  br i1 %8, label %14, label %9

9:                                                ; preds = %5
  %10 = bitcast %"class.blink::protocol::CacheStorage::Backend::RequestEntriesCallback"* %7 to void (%"class.blink::protocol::CacheStorage::Backend::RequestEntriesCallback"*)***
  %11 = load void (%"class.blink::protocol::CacheStorage::Backend::RequestEntriesCallback"*)**, void (%"class.blink::protocol::CacheStorage::Backend::RequestEntriesCallback"*)*** %10, align 8
  %12 = getelementptr inbounds void (%"class.blink::protocol::CacheStorage::Backend::RequestEntriesCallback"*)*, void (%"class.blink::protocol::CacheStorage::Backend::RequestEntriesCallback"*)** %11, i64 4
  %13 = load void (%"class.blink::protocol::CacheStorage::Backend::RequestEntriesCallback"*)*, void (%"class.blink::protocol::CacheStorage::Backend::RequestEntriesCallback"*)** %12, align 8
  tail call void %13(%"class.blink::protocol::CacheStorage::Backend::RequestEntriesCallback"* nonnull %7) #16
  br label %14

14:                                               ; preds = %9, %5
  %15 = getelementptr inbounds %"class.blink::(anonymous namespace)::GetCacheKeysForRequestData", %"class.blink::(anonymous namespace)::GetCacheKeysForRequestData"* %3, i64 0, i32 1
  %16 = getelementptr inbounds %"class.blink::(anonymous namespace)::GetCacheKeysForRequestData", %"class.blink::(anonymous namespace)::GetCacheKeysForRequestData"* %3, i64 0, i32 1, i32 0, i32 1, i32 0, i32 0, i32 0
  %17 = load %"class.blink::mojom::blink::CacheStorageCacheProxy"*, %"class.blink::mojom::blink::CacheStorageCacheProxy"** %16, align 8
  store %"class.blink::mojom::blink::CacheStorageCacheProxy"* null, %"class.blink::mojom::blink::CacheStorageCacheProxy"** %16, align 8
  %18 = icmp eq %"class.blink::mojom::blink::CacheStorageCacheProxy"* %17, null
  br i1 %18, label %24, label %19

19:                                               ; preds = %14
  %20 = bitcast %"class.blink::mojom::blink::CacheStorageCacheProxy"* %17 to void (%"class.blink::mojom::blink::CacheStorageCacheProxy"*)***
  %21 = load void (%"class.blink::mojom::blink::CacheStorageCacheProxy"*)**, void (%"class.blink::mojom::blink::CacheStorageCacheProxy"*)*** %20, align 8
  %22 = getelementptr inbounds void (%"class.blink::mojom::blink::CacheStorageCacheProxy"*)*, void (%"class.blink::mojom::blink::CacheStorageCacheProxy"*)** %21, i64 1
  %23 = load void (%"class.blink::mojom::blink::CacheStorageCacheProxy"*)*, void (%"class.blink::mojom::blink::CacheStorageCacheProxy"*)** %22, align 8
  tail call void %23(%"class.blink::mojom::blink::CacheStorageCacheProxy"* nonnull %17) #16
  br label %24

24:                                               ; preds = %19, %14
  %25 = bitcast %"class.mojo::AssociatedRemote.2215"* %15 to %"class.mojo::internal::AssociatedInterfacePtrStateBase"*
  tail call void @_ZN4mojo8internal31AssociatedInterfacePtrStateBaseD2Ev(%"class.mojo::internal::AssociatedInterfacePtrStateBase"* %25) #16
  %26 = getelementptr inbounds %"class.blink::(anonymous namespace)::GetCacheKeysForRequestData", %"class.blink::(anonymous namespace)::GetCacheKeysForRequestData"* %3, i64 0, i32 0, i32 3, i32 0, i32 0
  %27 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %26, align 8
  %28 = icmp eq %"class.WTF::StringImpl"* %27, null
  br i1 %28, label %42, label %29

29:                                               ; preds = %24
  %30 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %27, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %31 = load atomic i32, i32* %30 monotonic, align 4
  %32 = and i32 %31, 2
  %33 = icmp eq i32 %32, 0
  %34 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %27, i64 0, i32 0
  %35 = load i32, i32* %34, align 4
  br i1 %33, label %36, label %38

36:                                               ; preds = %29
  %37 = add i32 %35, -1
  store i32 %37, i32* %34, align 4
  br label %38

38:                                               ; preds = %36, %29
  %39 = phi i32 [ %37, %36 ], [ %35, %29 ]
  %40 = icmp eq i32 %39, 0
  br i1 %40, label %41, label %42

41:                                               ; preds = %38
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %27) #16
  br label %42

42:                                               ; preds = %41, %38, %24
  %43 = getelementptr inbounds %"class.blink::(anonymous namespace)::GetCacheKeysForRequestData", %"class.blink::(anonymous namespace)::GetCacheKeysForRequestData"* %3, i64 0, i32 0, i32 0, i32 0, i32 0
  %44 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %43, align 8
  %45 = icmp eq %"class.WTF::StringImpl"* %44, null
  br i1 %45, label %59, label %46

46:                                               ; preds = %42
  %47 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %44, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %48 = load atomic i32, i32* %47 monotonic, align 4
  %49 = and i32 %48, 2
  %50 = icmp eq i32 %49, 0
  %51 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %44, i64 0, i32 0
  %52 = load i32, i32* %51, align 4
  br i1 %50, label %53, label %55

53:                                               ; preds = %46
  %54 = add i32 %52, -1
  store i32 %54, i32* %51, align 4
  br label %55

55:                                               ; preds = %53, %46
  %56 = phi i32 [ %54, %53 ], [ %52, %46 ]
  %57 = icmp eq i32 %56, 0
  br i1 %57, label %58, label %59

58:                                               ; preds = %55
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %44) #16
  br label %59

59:                                               ; preds = %58, %55, %42
  %60 = bitcast %"class.blink::(anonymous namespace)::GetCacheKeysForRequestData"* %3 to i8*
  tail call void @free(i8* %60) #16
  br label %61

61:                                               ; preds = %1, %59
  ret void
}

; Function Attrs: nofree nounwind
declare noalias i8* @malloc(i64) local_unnamed_addr #14

declare void @_ZN4mojo29ScopedInterfaceEndpointHandleC1EOS0_(%"class.mojo::ScopedInterfaceEndpointHandle"*, %"class.mojo::ScopedInterfaceEndpointHandle"* dereferenceable(8)) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4mojo16AssociatedRemoteIN5blink5mojom5blink17CacheStorageCacheEE4BindENS_23PendingAssociatedRemoteIS4_EE13scoped_refptrIN4base19SequencedTaskRunnerEE(%"class.mojo::AssociatedRemote.2215"*, %"class.mojo::PendingAssociatedRemote"*, %"class.base::SequencedTaskRunner"*) local_unnamed_addr #0 comdat align 2 {
  %4 = alloca %"class.mojo::internal::AssociatedInterfacePtrState.2216", align 8
  %5 = alloca %"class.mojo::AssociatedInterfacePtrInfo", align 8
  %6 = alloca %"class.mojo::ScopedInterfaceEndpointHandle", align 8
  %7 = getelementptr inbounds %"class.mojo::PendingAssociatedRemote", %"class.mojo::PendingAssociatedRemote"* %1, i64 0, i32 0
  %8 = tail call zeroext i1 @_ZNK4mojo29ScopedInterfaceEndpointHandle8is_validEv(%"class.mojo::ScopedInterfaceEndpointHandle"* %7) #16
  br i1 %8, label %27, label %9

9:                                                ; preds = %3
  %10 = bitcast %"class.mojo::internal::AssociatedInterfacePtrState.2216"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %10) #16
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %10, i8 -86, i64 24, i1 false) #16
  %11 = bitcast %"class.mojo::internal::AssociatedInterfacePtrState.2216"* %4 to %"class.mojo::internal::AssociatedInterfacePtrStateBase"*
  call void @_ZN4mojo8internal31AssociatedInterfacePtrStateBaseC2Ev(%"class.mojo::internal::AssociatedInterfacePtrStateBase"* nonnull %11) #16
  %12 = getelementptr inbounds %"class.mojo::internal::AssociatedInterfacePtrState.2216", %"class.mojo::internal::AssociatedInterfacePtrState.2216"* %4, i64 0, i32 1
  %13 = bitcast %"class.std::__1::unique_ptr.2217"* %12 to i64*
  store i64 0, i64* %13, align 8
  %14 = bitcast %"class.mojo::AssociatedRemote.2215"* %0 to %"class.mojo::internal::AssociatedInterfacePtrStateBase"*
  call void @_ZN4mojo8internal31AssociatedInterfacePtrStateBase4SwapEPS1_(%"class.mojo::internal::AssociatedInterfacePtrStateBase"* %14, %"class.mojo::internal::AssociatedInterfacePtrStateBase"* nonnull %11) #16
  %15 = getelementptr inbounds %"class.mojo::AssociatedRemote.2215", %"class.mojo::AssociatedRemote.2215"* %0, i64 0, i32 0, i32 1
  %16 = load i64, i64* %13, align 8
  %17 = bitcast %"class.std::__1::unique_ptr.2217"* %15 to i64*
  %18 = load i64, i64* %17, align 8
  store i64 %16, i64* %17, align 8
  %19 = getelementptr inbounds %"class.mojo::internal::AssociatedInterfacePtrState.2216", %"class.mojo::internal::AssociatedInterfacePtrState.2216"* %4, i64 0, i32 1, i32 0, i32 0, i32 0
  store %"class.blink::mojom::blink::CacheStorageCacheProxy"* null, %"class.blink::mojom::blink::CacheStorageCacheProxy"** %19, align 8
  %20 = icmp eq i64 %18, 0
  br i1 %20, label %33, label %21

21:                                               ; preds = %9
  %22 = inttoptr i64 %18 to %"class.blink::mojom::blink::CacheStorageCacheProxy"*
  %23 = inttoptr i64 %18 to void (%"class.blink::mojom::blink::CacheStorageCacheProxy"*)***
  %24 = load void (%"class.blink::mojom::blink::CacheStorageCacheProxy"*)**, void (%"class.blink::mojom::blink::CacheStorageCacheProxy"*)*** %23, align 8
  %25 = getelementptr inbounds void (%"class.blink::mojom::blink::CacheStorageCacheProxy"*)*, void (%"class.blink::mojom::blink::CacheStorageCacheProxy"*)** %24, i64 1
  %26 = load void (%"class.blink::mojom::blink::CacheStorageCacheProxy"*)*, void (%"class.blink::mojom::blink::CacheStorageCacheProxy"*)** %25, align 8
  call void %26(%"class.blink::mojom::blink::CacheStorageCacheProxy"* nonnull %22) #16
  br label %33

27:                                               ; preds = %3
  %28 = getelementptr inbounds %"class.mojo::AssociatedRemote.2215", %"class.mojo::AssociatedRemote.2215"* %0, i64 0, i32 0
  call void @_ZN4mojo29ScopedInterfaceEndpointHandleC1EOS0_(%"class.mojo::ScopedInterfaceEndpointHandle"* nonnull %6, %"class.mojo::ScopedInterfaceEndpointHandle"* dereferenceable(8) %7) #16
  %29 = getelementptr inbounds %"class.mojo::PendingAssociatedRemote", %"class.mojo::PendingAssociatedRemote"* %1, i64 0, i32 1
  %30 = load i32, i32* %29, align 8
  %31 = getelementptr inbounds %"class.mojo::AssociatedInterfacePtrInfo", %"class.mojo::AssociatedInterfacePtrInfo"* %5, i64 0, i32 0
  call void @_ZN4mojo29ScopedInterfaceEndpointHandleC1EOS0_(%"class.mojo::ScopedInterfaceEndpointHandle"* nonnull %31, %"class.mojo::ScopedInterfaceEndpointHandle"* nonnull dereferenceable(8) %6) #16
  %32 = getelementptr inbounds %"class.mojo::AssociatedInterfacePtrInfo", %"class.mojo::AssociatedInterfacePtrInfo"* %5, i64 0, i32 1
  store i32 %30, i32* %32, align 8
  call void @_ZN4mojo8internal27AssociatedInterfacePtrStateIN5blink5mojom5blink17CacheStorageCacheEE4BindENS_26AssociatedInterfacePtrInfoIS5_EE13scoped_refptrIN4base19SequencedTaskRunnerEE(%"class.mojo::internal::AssociatedInterfacePtrState.2216"* %28, %"class.mojo::AssociatedInterfacePtrInfo"* nonnull %5, %"class.base::SequencedTaskRunner"* %2)
  call void @_ZN4mojo29ScopedInterfaceEndpointHandleD1Ev(%"class.mojo::ScopedInterfaceEndpointHandle"* nonnull %31) #16
  call void @_ZN4mojo29ScopedInterfaceEndpointHandleD1Ev(%"class.mojo::ScopedInterfaceEndpointHandle"* nonnull %6) #16
  br label %43

33:                                               ; preds = %21, %9
  call void @_ZN4mojo8internal31AssociatedInterfacePtrStateBaseD2Ev(%"class.mojo::internal::AssociatedInterfacePtrStateBase"* nonnull %11) #16
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %10) #16
  %34 = icmp eq %"class.base::SequencedTaskRunner"* %2, null
  br i1 %34, label %43, label %35

35:                                               ; preds = %33
  %36 = getelementptr inbounds %"class.base::SequencedTaskRunner", %"class.base::SequencedTaskRunner"* %2, i64 0, i32 0, i32 1
  %37 = getelementptr inbounds %"class.base::RefCountedThreadSafe.251", %"class.base::RefCountedThreadSafe.251"* %36, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %38 = atomicrmw sub i32* %37, i32 1 acq_rel
  %39 = icmp eq i32 %38, 1
  br i1 %39, label %40, label %43

40:                                               ; preds = %35
  %41 = getelementptr inbounds %"class.base::RefCountedThreadSafe.251", %"class.base::RefCountedThreadSafe.251"* %36, i64 -2
  %42 = bitcast %"class.base::RefCountedThreadSafe.251"* %41 to %"class.base::TaskRunner"*
  call void @_ZN4base16TaskRunnerTraits8DestructEPKNS_10TaskRunnerE(%"class.base::TaskRunner"* %42) #16
  br label %43

43:                                               ; preds = %27, %33, %35, %40
  ret void
}

declare void @_ZN4mojo8internal31AssociatedInterfacePtrStateBaseC2Ev(%"class.mojo::internal::AssociatedInterfacePtrStateBase"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4mojo8internal27AssociatedInterfacePtrStateIN5blink5mojom5blink17CacheStorageCacheEE4BindENS_26AssociatedInterfacePtrInfoIS5_EE13scoped_refptrIN4base19SequencedTaskRunnerEE(%"class.mojo::internal::AssociatedInterfacePtrState.2216"*, %"class.mojo::AssociatedInterfacePtrInfo"*, %"class.base::SequencedTaskRunner"*) local_unnamed_addr #0 comdat align 2 {
  %4 = alloca %"class.mojo::ScopedInterfaceEndpointHandle", align 8
  %5 = bitcast %"class.mojo::internal::AssociatedInterfacePtrState.2216"* %0 to %"class.mojo::internal::AssociatedInterfacePtrStateBase"*
  %6 = getelementptr inbounds %"class.mojo::AssociatedInterfacePtrInfo", %"class.mojo::AssociatedInterfacePtrInfo"* %1, i64 0, i32 0
  call void @_ZN4mojo29ScopedInterfaceEndpointHandleC1EOS0_(%"class.mojo::ScopedInterfaceEndpointHandle"* nonnull %4, %"class.mojo::ScopedInterfaceEndpointHandle"* dereferenceable(8) %6) #16
  %7 = getelementptr inbounds %"class.mojo::AssociatedInterfacePtrInfo", %"class.mojo::AssociatedInterfacePtrInfo"* %1, i64 0, i32 1
  %8 = load i32, i32* %7, align 8
  %9 = call i8* @_Znwm(i64 8) #18
  %10 = bitcast i8* %9 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN5blink5mojom5blink34CacheStorageCacheResponseValidatorE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %10, align 8
  %11 = bitcast i8* %9 to %"class.mojo::MessageReceiver"*
  call void @_ZN4mojo8internal31AssociatedInterfacePtrStateBase4BindENS_29ScopedInterfaceEndpointHandleEjNSt3__110unique_ptrINS_15MessageReceiverENS3_14default_deleteIS5_EEEE13scoped_refptrIN4base19SequencedTaskRunnerEEPKc(%"class.mojo::internal::AssociatedInterfacePtrStateBase"* %5, %"class.mojo::ScopedInterfaceEndpointHandle"* nonnull %4, i32 %8, %"class.mojo::MessageReceiver"* nonnull %11, %"class.base::SequencedTaskRunner"* %2, i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN5blink5mojom5blink17CacheStorageCache5Name_E, i64 0, i64 0)) #16
  call void @_ZN4mojo29ScopedInterfaceEndpointHandleD1Ev(%"class.mojo::ScopedInterfaceEndpointHandle"* nonnull %4) #16
  %12 = call i8* @_Znwm(i64 16) #18
  %13 = bitcast i8* %12 to %"class.blink::mojom::blink::CacheStorageCacheProxy"*
  %14 = getelementptr inbounds %"class.mojo::internal::AssociatedInterfacePtrState.2216", %"class.mojo::internal::AssociatedInterfacePtrState.2216"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %15 = load %"class.mojo::InterfaceEndpointClient"*, %"class.mojo::InterfaceEndpointClient"** %14, align 8
  %16 = getelementptr inbounds %"class.mojo::InterfaceEndpointClient", %"class.mojo::InterfaceEndpointClient"* %15, i64 0, i32 0
  call void @_ZN5blink5mojom5blink22CacheStorageCacheProxyC1EPN4mojo28MessageReceiverWithResponderE(%"class.blink::mojom::blink::CacheStorageCacheProxy"* nonnull %13, %"class.mojo::MessageReceiverWithResponder"* %16) #16
  %17 = getelementptr inbounds %"class.mojo::internal::AssociatedInterfacePtrState.2216", %"class.mojo::internal::AssociatedInterfacePtrState.2216"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %18 = load %"class.blink::mojom::blink::CacheStorageCacheProxy"*, %"class.blink::mojom::blink::CacheStorageCacheProxy"** %17, align 8
  %19 = bitcast %"class.blink::mojom::blink::CacheStorageCacheProxy"** %17 to i8**
  store i8* %12, i8** %19, align 8
  %20 = icmp eq %"class.blink::mojom::blink::CacheStorageCacheProxy"* %18, null
  br i1 %20, label %26, label %21

21:                                               ; preds = %3
  %22 = bitcast %"class.blink::mojom::blink::CacheStorageCacheProxy"* %18 to void (%"class.blink::mojom::blink::CacheStorageCacheProxy"*)***
  %23 = load void (%"class.blink::mojom::blink::CacheStorageCacheProxy"*)**, void (%"class.blink::mojom::blink::CacheStorageCacheProxy"*)*** %22, align 8
  %24 = getelementptr inbounds void (%"class.blink::mojom::blink::CacheStorageCacheProxy"*)*, void (%"class.blink::mojom::blink::CacheStorageCacheProxy"*)** %23, i64 1
  %25 = load void (%"class.blink::mojom::blink::CacheStorageCacheProxy"*)*, void (%"class.blink::mojom::blink::CacheStorageCacheProxy"*)** %24, align 8
  call void %25(%"class.blink::mojom::blink::CacheStorageCacheProxy"* nonnull %18) #16
  br label %26

26:                                               ; preds = %21, %3
  ret void
}

; Function Attrs: nounwind
declare void @_ZN4mojo29ScopedInterfaceEndpointHandleD1Ev(%"class.mojo::ScopedInterfaceEndpointHandle"*) unnamed_addr #3

declare zeroext i1 @_ZNK4mojo29ScopedInterfaceEndpointHandle8is_validEv(%"class.mojo::ScopedInterfaceEndpointHandle"*) local_unnamed_addr #2

declare void @_ZN4mojo8internal31AssociatedInterfacePtrStateBase4SwapEPS1_(%"class.mojo::internal::AssociatedInterfacePtrStateBase"*, %"class.mojo::internal::AssociatedInterfacePtrStateBase"*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN4mojo8internal31AssociatedInterfacePtrStateBaseD2Ev(%"class.mojo::internal::AssociatedInterfacePtrStateBase"*) unnamed_addr #3

declare void @_ZN4mojo8internal31AssociatedInterfacePtrStateBase4BindENS_29ScopedInterfaceEndpointHandleEjNSt3__110unique_ptrINS_15MessageReceiverENS3_14default_deleteIS5_EEEE13scoped_refptrIN4base19SequencedTaskRunnerEEPKc(%"class.mojo::internal::AssociatedInterfacePtrStateBase"*, %"class.mojo::ScopedInterfaceEndpointHandle"*, i32, %"class.mojo::MessageReceiver"*, %"class.base::SequencedTaskRunner"*, i8*) local_unnamed_addr #2

declare void @_ZN5blink5mojom5blink22CacheStorageCacheProxyC1EPN4mojo28MessageReceiverWithResponderE(%"class.blink::mojom::blink::CacheStorageCacheProxy"*, %"class.mojo::MessageReceiverWithResponder"*) unnamed_addr #2

declare void @_ZN5blink5mojom5blink22CacheStorageCacheProxy4KeysEN4mojo9StructPtrINS1_15FetchAPIRequestEEENS3_16InlinedStructPtrINS1_17CacheQueryOptionsEEElN4base12OnceCallbackIFvNS4_INS1_15CacheKeysResultEEEEEE(%"class.blink::mojom::blink::CacheStorageCacheProxy"*, %"class.mojo::StructPtr.1985"*, %"class.mojo::InlinedStructPtr.2014"*, i64, %"class.base::OnceCallback.2232"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN4base8internal7InvokerINS0_9BindStateIZN5blink12_GLOBAL__N_126GetCacheKeysForRequestData8DispatchENSt3__110unique_ptrIS5_NS6_14default_deleteIS5_EEEEEUlNS4_17DataRequestParamsESA_N4mojo9StructPtrINS3_5mojom5blink15CacheKeysResultEEEE_JSB_SA_EEEFvSH_EE7RunOnceEPNS0_13BindStateBaseEOSH_(%"class.base::internal::BindStateBase"* nocapture, %"class.mojo::StructPtr.2235"* nocapture dereferenceable(8)) #0 align 2 {
  %3 = alloca %"class.mojo::PendingAssociatedRemote", align 8
  %4 = alloca %"class.mojo::PendingAssociatedRemote", align 8
  %5 = alloca %"class.mojo::PendingAssociatedRemote", align 8
  %6 = alloca %"class.blink::KURL", align 8
  %7 = alloca %"class.logging::CheckOpResult", align 8
  %8 = alloca %"class.logging::CheckOpResult", align 8
  %9 = alloca %"class.logging::CheckError", align 8
  %10 = alloca %"class.base::TimeTicks", align 8
  %11 = alloca %"class.WTF::Vector.2239", align 8
  %12 = alloca %"class.WTF::StringView", align 8
  %13 = alloca %"class.mojo::StructPtr.1985", align 8
  %14 = alloca i8*, align 8
  %15 = alloca %"class.blink::ResourceRequestBody", align 8
  %16 = alloca %"class.mojo::StructPtr.2000", align 8
  %17 = alloca %"class.mojo::StructPtr.1985", align 8
  %18 = alloca %"class.mojo::InlinedStructPtr.2014", align 4
  %19 = alloca %"class.base::OnceCallback.2018", align 8
  %20 = alloca %class.scoped_refptr.2273, align 8
  %21 = alloca %"class.std::__1::unique_ptr.2212", align 8
  %22 = alloca %"class.crdtp::DispatchResponse", align 8
  %23 = alloca %"class.std::__1::basic_string", align 8
  %24 = alloca %"class.WTF::String", align 8
  %25 = alloca %"class.std::__1::basic_string", align 8
  %26 = alloca %class.scoped_refptr.2273, align 8
  %27 = alloca %"class.mojo::PendingAssociatedRemote", align 8
  %28 = alloca %"struct.blink::(anonymous namespace)::DataRequestParams", align 16
  %29 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 1
  %30 = bitcast void ()** %29 to %"class.WTF::StringImpl"**
  %31 = bitcast void ()** %29 to <2 x i64>*
  %32 = load <2 x i64>, <2 x i64>* %31, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %30, align 8
  %33 = getelementptr inbounds void ()*, void ()** %29, i64 2
  %34 = bitcast void ()** %33 to %"class.WTF::StringImpl"**
  %35 = bitcast void ()** %33 to i64*
  %36 = load i64, i64* %35, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %34, align 8
  %37 = getelementptr inbounds void ()*, void ()** %29, i64 3
  %38 = bitcast void ()** %37 to %"class.blink::(anonymous namespace)::GetCacheKeysForRequestData"**
  %39 = load %"class.blink::(anonymous namespace)::GetCacheKeysForRequestData"*, %"class.blink::(anonymous namespace)::GetCacheKeysForRequestData"** %38, align 8
  store %"class.blink::(anonymous namespace)::GetCacheKeysForRequestData"* null, %"class.blink::(anonymous namespace)::GetCacheKeysForRequestData"** %38, align 8
  %40 = bitcast %"class.mojo::StructPtr.2235"* %1 to i64*
  %41 = getelementptr inbounds %"class.mojo::StructPtr.2235", %"class.mojo::StructPtr.2235"* %1, i64 0, i32 0, i32 0, i32 0, i32 0
  %42 = load %"class.blink::mojom::blink::CacheKeysResult"*, %"class.blink::mojom::blink::CacheKeysResult"** %41, align 8
  store i64 0, i64* %40, align 8
  %43 = bitcast %"struct.blink::(anonymous namespace)::DataRequestParams"* %28 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %43) #16
  %44 = bitcast %"class.std::__1::unique_ptr.2212"* %21 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %44) #16
  %45 = bitcast %"class.std::__1::basic_string"* %23 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %45) #16
  %46 = bitcast %"class.mojo::PendingAssociatedRemote"* %27 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %46) #16
  %47 = getelementptr inbounds %"struct.blink::(anonymous namespace)::DataRequestParams", %"struct.blink::(anonymous namespace)::DataRequestParams"* %28, i64 0, i32 1
  %48 = bitcast i32* %47 to i64*
  %49 = bitcast %"struct.blink::(anonymous namespace)::DataRequestParams"* %28 to <2 x i64>*
  store <2 x i64> %32, <2 x i64>* %49, align 16
  %50 = getelementptr inbounds %"struct.blink::(anonymous namespace)::DataRequestParams", %"struct.blink::(anonymous namespace)::DataRequestParams"* %28, i64 0, i32 3
  %51 = bitcast %"class.WTF::String"* %50 to i64*
  store i64 %36, i64* %51, align 16
  %52 = getelementptr inbounds %"class.std::__1::unique_ptr.2212", %"class.std::__1::unique_ptr.2212"* %21, i64 0, i32 0, i32 0, i32 0
  store %"class.blink::(anonymous namespace)::GetCacheKeysForRequestData"* %39, %"class.blink::(anonymous namespace)::GetCacheKeysForRequestData"** %52, align 8
  %53 = getelementptr inbounds %"class.blink::mojom::blink::CacheKeysResult", %"class.blink::mojom::blink::CacheKeysResult"* %42, i64 0, i32 0
  %54 = load i32, i32* %53, align 8
  %55 = icmp eq i32 %54, 0
  br i1 %55, label %56, label %125

56:                                               ; preds = %2
  %57 = getelementptr inbounds %"class.blink::(anonymous namespace)::GetCacheKeysForRequestData", %"class.blink::(anonymous namespace)::GetCacheKeysForRequestData"* %39, i64 0, i32 2, i32 0, i32 0, i32 0
  %58 = load %"class.blink::protocol::CacheStorage::Backend::RequestEntriesCallback"*, %"class.blink::protocol::CacheStorage::Backend::RequestEntriesCallback"** %57, align 8
  %59 = bitcast %"class.crdtp::DispatchResponse"* %22 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %59) #16
  %60 = bitcast %"class.WTF::String"* %24 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %60) #16
  %61 = bitcast %"class.std::__1::basic_string"* %25 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %61) #16
  %62 = getelementptr inbounds %"struct.blink::(anonymous namespace)::DataRequestParams", %"struct.blink::(anonymous namespace)::DataRequestParams"* %28, i64 0, i32 0
  call void @_ZNK3WTF6String6Latin1Ev(%"class.std::__1::basic_string"* nonnull sret %25, %"class.WTF::String"* nonnull %62) #16
  %63 = bitcast %"class.std::__1::basic_string"* %25 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %64 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %63, i64 0, i32 1, i32 0
  %65 = load i8, i8* %64, align 1
  %66 = icmp slt i8 %65, 0
  %67 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %25, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %68 = load i8*, i8** %67, align 8
  %69 = select i1 %66, i8* %68, i8* %61
  %70 = getelementptr inbounds %"class.blink::mojom::blink::CacheKeysResult", %"class.blink::mojom::blink::CacheKeysResult"* %42, i64 0, i32 1
  %71 = bitcast %"union.blink::mojom::blink::CacheKeysResult::Union_"* %70 to i32*
  %72 = load i32, i32* %71, align 8
  %73 = add i32 %72, -1
  %74 = icmp ult i32 %73, 9
  br i1 %74, label %75, label %79

75:                                               ; preds = %56
  %76 = sext i32 %73 to i64
  %77 = getelementptr inbounds [9 x i8*], [9 x i8*]* @"switch.table._ZN4base8internal7InvokerINS0_9BindStateIZN5blink26InspectorCacheStorageAgent21requestCachedResponseERKN3WTF6StringES8_NSt3__110unique_ptrINS9_6vectorINSA_INS3_8protocol12CacheStorage6HeaderENS9_14default_deleteISE_EEEENS9_9allocatorISH_EEEENSF_ISK_EEEENSA_INSD_7Backend29RequestCachedResponseCallbackENSF_ISO_EEEEE3$_4JSQ_EEEFvN4mojo9StructPtrINS3_5mojom5blink11MatchResultEEEEE7RunOnceEPNS0_13BindStateBaseEOSY_", i64 0, i64 %76
  %78 = load i8*, i8** %77, align 8
  br label %79

79:                                               ; preds = %56, %75
  %80 = phi i8* [ %78, %75 ], [ getelementptr inbounds ([1 x i8], [1 x i8]* @.str.2, i64 0, i64 0), %56 ]
  %81 = call %"class.WTF::StringImpl"* (i8*, ...) @_ZN3WTF6String6FormatEPKcz(i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.33, i64 0, i64 0), i8* %69, i8* nonnull %80) #16
  %82 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %24, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %81, %"class.WTF::StringImpl"** %82, align 8
  call void @_ZNK3WTF6String4Utf8ENS_18UTF8ConversionModeE(%"class.std::__1::basic_string"* nonnull sret %23, %"class.WTF::String"* nonnull %24, i32 0) #16
  call void @_ZN5crdtp16DispatchResponse11ServerErrorENSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.crdtp::DispatchResponse"* nonnull sret %22, %"class.std::__1::basic_string"* nonnull %23) #16
  %83 = bitcast %"class.blink::protocol::CacheStorage::Backend::RequestEntriesCallback"* %58 to void (%"class.blink::protocol::CacheStorage::Backend::RequestEntriesCallback"*, %"class.crdtp::DispatchResponse"*)***
  %84 = load void (%"class.blink::protocol::CacheStorage::Backend::RequestEntriesCallback"*, %"class.crdtp::DispatchResponse"*)**, void (%"class.blink::protocol::CacheStorage::Backend::RequestEntriesCallback"*, %"class.crdtp::DispatchResponse"*)*** %83, align 8
  %85 = getelementptr inbounds void (%"class.blink::protocol::CacheStorage::Backend::RequestEntriesCallback"*, %"class.crdtp::DispatchResponse"*)*, void (%"class.blink::protocol::CacheStorage::Backend::RequestEntriesCallback"*, %"class.crdtp::DispatchResponse"*)** %84, i64 1
  %86 = load void (%"class.blink::protocol::CacheStorage::Backend::RequestEntriesCallback"*, %"class.crdtp::DispatchResponse"*)*, void (%"class.blink::protocol::CacheStorage::Backend::RequestEntriesCallback"*, %"class.crdtp::DispatchResponse"*)** %85, align 8
  call void %86(%"class.blink::protocol::CacheStorage::Backend::RequestEntriesCallback"* %58, %"class.crdtp::DispatchResponse"* nonnull dereferenceable(32) %22) #16
  %87 = getelementptr inbounds %"class.crdtp::DispatchResponse", %"class.crdtp::DispatchResponse"* %22, i64 0, i32 1
  %88 = bitcast %"class.std::__1::basic_string"* %87 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %89 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %88, i64 0, i32 1, i32 0
  %90 = load i8, i8* %89, align 1
  %91 = icmp slt i8 %90, 0
  br i1 %91, label %92, label %95

92:                                               ; preds = %79
  %93 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %87, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %94 = load i8*, i8** %93, align 8
  call void @_ZdlPv(i8* %94) #18
  br label %95

95:                                               ; preds = %92, %79
  %96 = bitcast %"class.std::__1::basic_string"* %23 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %97 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %96, i64 0, i32 1, i32 0
  %98 = load i8, i8* %97, align 1
  %99 = icmp slt i8 %98, 0
  br i1 %99, label %100, label %103

100:                                              ; preds = %95
  %101 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %23, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %102 = load i8*, i8** %101, align 8
  call void @_ZdlPv(i8* %102) #18
  br label %103

103:                                              ; preds = %100, %95
  %104 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %82, align 8
  %105 = icmp eq %"class.WTF::StringImpl"* %104, null
  br i1 %105, label %119, label %106

106:                                              ; preds = %103
  %107 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %104, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %108 = load atomic i32, i32* %107 monotonic, align 4
  %109 = and i32 %108, 2
  %110 = icmp eq i32 %109, 0
  %111 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %104, i64 0, i32 0
  %112 = load i32, i32* %111, align 4
  br i1 %110, label %113, label %115

113:                                              ; preds = %106
  %114 = add i32 %112, -1
  store i32 %114, i32* %111, align 4
  br label %115

115:                                              ; preds = %113, %106
  %116 = phi i32 [ %114, %113 ], [ %112, %106 ]
  %117 = icmp eq i32 %116, 0
  br i1 %117, label %118, label %119

118:                                              ; preds = %115
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %104) #16
  br label %119

119:                                              ; preds = %118, %115, %103
  %120 = load i8, i8* %64, align 1
  %121 = icmp slt i8 %120, 0
  br i1 %121, label %122, label %124

122:                                              ; preds = %119
  %123 = load i8*, i8** %67, align 8
  call void @_ZdlPv(i8* %123) #18
  br label %124

124:                                              ; preds = %122, %119
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %61) #16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %60) #16
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %59) #16
  br label %557

125:                                              ; preds = %2
  %126 = getelementptr inbounds %"class.blink::mojom::blink::CacheKeysResult", %"class.blink::mojom::blink::CacheKeysResult"* %42, i64 0, i32 1, i32 0
  %127 = load %"class.WTF::Vector.2239"*, %"class.WTF::Vector.2239"** %126, align 8
  %128 = getelementptr inbounds %"class.WTF::Vector.2239", %"class.WTF::Vector.2239"* %127, i64 0, i32 0, i32 0, i32 2
  %129 = load i32, i32* %128, align 4
  %130 = icmp eq i32 %129, 0
  br i1 %130, label %131, label %139

131:                                              ; preds = %125
  %132 = tail call i8* @_Znwm(i64 24) #18
  %133 = bitcast i8* %132 to %"class.std::__1::vector.2254"*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %132, i8 0, i64 24, i1 false) #16
  %134 = getelementptr inbounds %"class.blink::(anonymous namespace)::GetCacheKeysForRequestData", %"class.blink::(anonymous namespace)::GetCacheKeysForRequestData"* %39, i64 0, i32 2, i32 0, i32 0, i32 0
  %135 = load %"class.blink::protocol::CacheStorage::Backend::RequestEntriesCallback"*, %"class.blink::protocol::CacheStorage::Backend::RequestEntriesCallback"** %134, align 8
  %136 = bitcast %"class.blink::protocol::CacheStorage::Backend::RequestEntriesCallback"* %135 to void (%"class.blink::protocol::CacheStorage::Backend::RequestEntriesCallback"*, %"class.std::__1::vector.2254"*, double)***
  %137 = load void (%"class.blink::protocol::CacheStorage::Backend::RequestEntriesCallback"*, %"class.std::__1::vector.2254"*, double)**, void (%"class.blink::protocol::CacheStorage::Backend::RequestEntriesCallback"*, %"class.std::__1::vector.2254"*, double)*** %136, align 8
  %138 = load void (%"class.blink::protocol::CacheStorage::Backend::RequestEntriesCallback"*, %"class.std::__1::vector.2254"*, double)*, void (%"class.blink::protocol::CacheStorage::Backend::RequestEntriesCallback"*, %"class.std::__1::vector.2254"*, double)** %137, align 8
  tail call void %138(%"class.blink::protocol::CacheStorage::Backend::RequestEntriesCallback"* %135, %"class.std::__1::vector.2254"* nonnull %133, double 0.000000e+00) #16
  br label %557

139:                                              ; preds = %125
  %140 = bitcast %class.scoped_refptr.2273* %26 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %140) #16
  %141 = getelementptr inbounds %class.scoped_refptr.2273, %class.scoped_refptr.2273* %26, i64 0, i32 0
  store %"class.blink::(anonymous namespace)::ResponsesAccumulator"* inttoptr (i64 -6148914691236517206 to %"class.blink::(anonymous namespace)::ResponsesAccumulator"*), %"class.blink::(anonymous namespace)::ResponsesAccumulator"** %141, align 8
  %142 = tail call noalias i8* @malloc(i64 88) #16
  %143 = load %"class.WTF::Vector.2239"*, %"class.WTF::Vector.2239"** %126, align 8
  %144 = getelementptr inbounds %"class.WTF::Vector.2239", %"class.WTF::Vector.2239"* %143, i64 0, i32 0, i32 0, i32 2
  %145 = load i32, i32* %144, align 4
  %146 = getelementptr inbounds %"class.blink::(anonymous namespace)::GetCacheKeysForRequestData", %"class.blink::(anonymous namespace)::GetCacheKeysForRequestData"* %39, i64 0, i32 1
  call void @_ZN4mojo16AssociatedRemoteIN5blink5mojom5blink17CacheStorageCacheEE6UnbindEv(%"class.mojo::PendingAssociatedRemote"* nonnull sret %27, %"class.mojo::AssociatedRemote.2215"* %146) #16
  %147 = getelementptr inbounds %"class.blink::(anonymous namespace)::GetCacheKeysForRequestData", %"class.blink::(anonymous namespace)::GetCacheKeysForRequestData"* %39, i64 0, i32 2
  %148 = getelementptr inbounds %"class.std::__1::unique_ptr.1930", %"class.std::__1::unique_ptr.1930"* %147, i64 0, i32 0, i32 0, i32 0
  %149 = bitcast %"class.std::__1::unique_ptr.1930"* %147 to i64*
  %150 = load i64, i64* %149, align 8
  store %"class.blink::protocol::CacheStorage::Backend::RequestEntriesCallback"* null, %"class.blink::protocol::CacheStorage::Backend::RequestEntriesCallback"** %148, align 8
  %151 = bitcast %"class.mojo::PendingAssociatedRemote"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %151) #16
  %152 = bitcast i8* %142 to i32*
  store i32 1, i32* %152, align 4
  %153 = getelementptr inbounds %"struct.blink::(anonymous namespace)::DataRequestParams", %"struct.blink::(anonymous namespace)::DataRequestParams"* %28, i64 0, i32 0, i32 0, i32 0
  %154 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %153, align 16
  %155 = getelementptr inbounds i8, i8* %142, i64 8
  %156 = bitcast i8* %155 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %154, %"class.WTF::StringImpl"** %156, align 8
  %157 = icmp eq %"class.WTF::StringImpl"* %154, null
  br i1 %157, label %175, label %158

158:                                              ; preds = %139
  %159 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %154, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %160 = load atomic i32, i32* %159 monotonic, align 4
  %161 = and i32 %160, 2
  %162 = icmp eq i32 %161, 0
  br i1 %162, label %163, label %175

163:                                              ; preds = %158
  %164 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %154, i64 0, i32 0
  %165 = load i32, i32* %164, align 4
  %166 = zext i32 %165 to i33
  %167 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %166, i33 1) #16
  %168 = extractvalue { i33, i1 } %167, 1
  %169 = extractvalue { i33, i1 } %167, 0
  %170 = icmp slt i33 %169, 0
  %171 = or i1 %168, %170
  br i1 %171, label %172, label %173, !prof !3

172:                                              ; preds = %163
  call void @llvm.trap() #16
  unreachable

173:                                              ; preds = %163
  %174 = trunc i33 %169 to i32
  store i32 %174, i32* %164, align 4
  br label %175

175:                                              ; preds = %173, %158, %139
  %176 = getelementptr inbounds i8, i8* %142, i64 16
  %177 = bitcast i8* %176 to i64*
  %178 = load i64, i64* %48, align 8
  store i64 %178, i64* %177, align 8
  %179 = getelementptr inbounds %"struct.blink::(anonymous namespace)::DataRequestParams", %"struct.blink::(anonymous namespace)::DataRequestParams"* %28, i64 0, i32 3, i32 0, i32 0
  %180 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %179, align 16
  %181 = getelementptr inbounds i8, i8* %142, i64 24
  %182 = bitcast i8* %181 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %180, %"class.WTF::StringImpl"** %182, align 8
  %183 = icmp eq %"class.WTF::StringImpl"* %180, null
  br i1 %183, label %201, label %184

184:                                              ; preds = %175
  %185 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %180, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %186 = load atomic i32, i32* %185 monotonic, align 4
  %187 = and i32 %186, 2
  %188 = icmp eq i32 %187, 0
  br i1 %188, label %189, label %201

189:                                              ; preds = %184
  %190 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %180, i64 0, i32 0
  %191 = load i32, i32* %190, align 4
  %192 = zext i32 %191 to i33
  %193 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %192, i33 1) #16
  %194 = extractvalue { i33, i1 } %193, 1
  %195 = extractvalue { i33, i1 } %193, 0
  %196 = icmp slt i33 %195, 0
  %197 = or i1 %194, %196
  br i1 %197, label %198, label %199, !prof !3

198:                                              ; preds = %189
  call void @llvm.trap() #16
  unreachable

199:                                              ; preds = %189
  %200 = trunc i33 %195 to i32
  store i32 %200, i32* %190, align 4
  br label %201

201:                                              ; preds = %199, %184, %175
  %202 = getelementptr inbounds i8, i8* %142, i64 32
  %203 = bitcast i8* %202 to i32*
  store i32 %145, i32* %203, align 8
  %204 = getelementptr inbounds i8, i8* %142, i64 40
  call void @llvm.memset.p0i8.i64(i8* align 8 %204, i8 0, i64 16, i1 false) #16
  %205 = getelementptr inbounds i8, i8* %142, i64 56
  %206 = bitcast i8* %205 to %"class.mojo::AssociatedRemote.2215"*
  %207 = getelementptr inbounds %"class.mojo::PendingAssociatedRemote", %"class.mojo::PendingAssociatedRemote"* %5, i64 0, i32 0
  %208 = getelementptr inbounds %"class.mojo::PendingAssociatedRemote", %"class.mojo::PendingAssociatedRemote"* %27, i64 0, i32 0
  call void @_ZN4mojo29ScopedInterfaceEndpointHandleC1EOS0_(%"class.mojo::ScopedInterfaceEndpointHandle"* nonnull %207, %"class.mojo::ScopedInterfaceEndpointHandle"* nonnull dereferenceable(8) %208) #16
  %209 = getelementptr inbounds %"class.mojo::PendingAssociatedRemote", %"class.mojo::PendingAssociatedRemote"* %5, i64 0, i32 1
  %210 = getelementptr inbounds %"class.mojo::PendingAssociatedRemote", %"class.mojo::PendingAssociatedRemote"* %27, i64 0, i32 1
  %211 = load i32, i32* %210, align 8
  store i32 %211, i32* %209, align 8
  %212 = bitcast %"class.mojo::PendingAssociatedRemote"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %212) #16
  %213 = getelementptr inbounds %"class.mojo::PendingAssociatedRemote", %"class.mojo::PendingAssociatedRemote"* %4, i64 0, i32 0
  call void @_ZN4mojo29ScopedInterfaceEndpointHandleC1EOS0_(%"class.mojo::ScopedInterfaceEndpointHandle"* nonnull %213, %"class.mojo::ScopedInterfaceEndpointHandle"* nonnull dereferenceable(8) %207) #16
  %214 = getelementptr inbounds %"class.mojo::PendingAssociatedRemote", %"class.mojo::PendingAssociatedRemote"* %4, i64 0, i32 1
  %215 = load i32, i32* %209, align 8
  store i32 %215, i32* %214, align 8
  %216 = bitcast %"class.mojo::PendingAssociatedRemote"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %216) #16
  %217 = bitcast i8* %205 to %"class.mojo::internal::AssociatedInterfacePtrStateBase"*
  call void @_ZN4mojo8internal31AssociatedInterfacePtrStateBaseC2Ev(%"class.mojo::internal::AssociatedInterfacePtrStateBase"* %217) #16
  %218 = getelementptr inbounds i8, i8* %142, i64 72
  %219 = bitcast i8* %218 to i64*
  store i64 0, i64* %219, align 8
  %220 = getelementptr inbounds %"class.mojo::PendingAssociatedRemote", %"class.mojo::PendingAssociatedRemote"* %3, i64 0, i32 0
  call void @_ZN4mojo29ScopedInterfaceEndpointHandleC1EOS0_(%"class.mojo::ScopedInterfaceEndpointHandle"* nonnull %220, %"class.mojo::ScopedInterfaceEndpointHandle"* nonnull dereferenceable(8) %213) #16
  %221 = getelementptr inbounds %"class.mojo::PendingAssociatedRemote", %"class.mojo::PendingAssociatedRemote"* %3, i64 0, i32 1
  %222 = load i32, i32* %214, align 8
  store i32 %222, i32* %221, align 8
  call void @_ZN4mojo16AssociatedRemoteIN5blink5mojom5blink17CacheStorageCacheEE4BindENS_23PendingAssociatedRemoteIS4_EE13scoped_refptrIN4base19SequencedTaskRunnerEE(%"class.mojo::AssociatedRemote.2215"* %206, %"class.mojo::PendingAssociatedRemote"* nonnull %3, %"class.base::SequencedTaskRunner"* null) #16
  call void @_ZN4mojo29ScopedInterfaceEndpointHandleD1Ev(%"class.mojo::ScopedInterfaceEndpointHandle"* nonnull %220) #16
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %216) #16
  call void @_ZN4mojo29ScopedInterfaceEndpointHandleD1Ev(%"class.mojo::ScopedInterfaceEndpointHandle"* nonnull %213) #16
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %212) #16
  call void @_ZN4mojo29ScopedInterfaceEndpointHandleD1Ev(%"class.mojo::ScopedInterfaceEndpointHandle"* nonnull %207) #16
  %223 = getelementptr inbounds i8, i8* %142, i64 80
  %224 = bitcast i8* %223 to i64*
  store i64 %150, i64* %224, align 8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %151) #16
  %225 = bitcast %class.scoped_refptr.2273* %26 to i8**
  store i8* %142, i8** %225, align 8
  call void @_ZN4mojo29ScopedInterfaceEndpointHandleD1Ev(%"class.mojo::ScopedInterfaceEndpointHandle"* nonnull %208) #16
  %226 = load %"class.WTF::Vector.2239"*, %"class.WTF::Vector.2239"** %126, align 8
  %227 = bitcast %"class.WTF::Vector.2239"* %226 to i64*
  %228 = load i64, i64* %227, align 8
  store atomic i64 0, i64* %227 monotonic, align 8
  %229 = getelementptr inbounds %"class.WTF::Vector.2239", %"class.WTF::Vector.2239"* %226, i64 0, i32 0, i32 0, i32 1
  %230 = load i32, i32* %229, align 4
  store i32 0, i32* %229, align 4
  %231 = getelementptr inbounds %"class.WTF::Vector.2239", %"class.WTF::Vector.2239"* %226, i64 0, i32 0, i32 0, i32 2
  %232 = load i32, i32* %231, align 4
  store i32 0, i32* %231, align 4
  %233 = bitcast %"class.mojo::StructPtr.1985"* %17 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %233) #16
  %234 = getelementptr inbounds %"class.mojo::InlinedStructPtr.2014", %"class.mojo::InlinedStructPtr.2014"* %18, i64 0, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %234) #16
  %235 = bitcast %"class.base::OnceCallback.2018"* %19 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %235) #16
  %236 = call i64 @_ZN5blink13cache_storage13CreateTraceIdEv() #16
  %237 = load i8, i8* getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 23, i32 0), align 16
  %238 = and i8 %237, 25
  %239 = icmp eq i8 %238, 0
  br i1 %239, label %246, label %240, !prof !2

240:                                              ; preds = %201
  %241 = call i32 @_ZN4base14PlatformThread9CurrentIdEv() #16
  %242 = bitcast %"class.base::TimeTicks"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %242) #16
  %243 = getelementptr inbounds %"class.base::TimeTicks", %"class.base::TimeTicks"* %10, i64 0, i32 0, i32 0
  %244 = call i64 @_ZN4base6subtle28TimeTicksNowIgnoringOverrideEv() #16
  store i64 %244, i64* %243, align 8
  %245 = call i64 @_ZN20trace_event_internal37AddTraceEventWithThreadIdAndTimestampEcPKhPKcS3_yyiRKN4base9TimeTicksEPNS4_11trace_event14TraceArgumentsEj(i8 signext 88, i8* getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 23, i32 0), i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.36, i64 0, i64 0), i8* null, i64 0, i64 %236, i32 %241, %"class.base::TimeTicks"* nonnull dereferenceable(8) %10, %"class.base::trace_event::TraceArguments"* null, i32 4352) #16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %242) #16
  br label %246

246:                                              ; preds = %240, %201
  %247 = phi i8* [ null, %201 ], [ getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 23, i32 0), %240 ]
  %248 = phi i8* [ inttoptr (i64 -6148914691236517206 to i8*), %201 ], [ getelementptr inbounds ([31 x i8], [31 x i8]* @.str.36, i64 0, i64 0), %240 ]
  %249 = phi i64 [ -6148914691236517206, %201 ], [ %245, %240 ]
  %250 = bitcast %"class.WTF::Vector.2239"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %250) #16
  %251 = getelementptr inbounds %"class.WTF::Vector.2239", %"class.WTF::Vector.2239"* %11, i64 0, i32 0, i32 0, i32 0
  %252 = getelementptr inbounds %"class.WTF::Vector.2239", %"class.WTF::Vector.2239"* %11, i64 0, i32 0, i32 0, i32 1
  %253 = getelementptr inbounds %"class.WTF::Vector.2239", %"class.WTF::Vector.2239"* %11, i64 0, i32 0, i32 0, i32 2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %250, i8 0, i64 16, i1 false) #16
  %254 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %182, align 8
  %255 = icmp eq %"class.WTF::StringImpl"* %254, null
  br i1 %255, label %260, label %256

256:                                              ; preds = %246
  %257 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %254, i64 0, i32 1
  %258 = load i32, i32* %257, align 4
  %259 = icmp eq i32 %258, 0
  br i1 %259, label %260, label %262

260:                                              ; preds = %256, %246
  %261 = bitcast %"class.WTF::Vector.2239"* %11 to i64*
  store atomic i64 %228, i64* %261 monotonic, align 8
  store i32 %230, i32* %252, align 8
  store i32 %232, i32* %253, align 4
  br label %341

262:                                              ; preds = %256
  %263 = inttoptr i64 %228 to %"class.mojo::StructPtr.1985"*
  %264 = zext i32 %232 to i64
  %265 = getelementptr inbounds %"class.mojo::StructPtr.1985", %"class.mojo::StructPtr.1985"* %263, i64 %264
  %266 = icmp eq i32 %232, 0
  br i1 %266, label %346, label %267

267:                                              ; preds = %262
  %268 = bitcast %"class.WTF::StringView"* %12 to i8*
  %269 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %12, i64 0, i32 0
  %270 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %12, i64 0, i32 1
  %271 = bitcast i8** %270 to %"class.WTF::StringImpl"**
  %272 = bitcast %"class.WTF::StringView"* %12 to i64*
  %273 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %12, i64 0, i32 2
  br label %274

274:                                              ; preds = %336, %267
  %275 = phi %"class.mojo::StructPtr.1985"* [ %263, %267 ], [ %337, %336 ]
  %276 = getelementptr inbounds %"class.mojo::StructPtr.1985", %"class.mojo::StructPtr.1985"* %275, i64 0, i32 0, i32 0, i32 0, i32 0
  %277 = load %"class.blink::mojom::blink::FetchAPIRequest"*, %"class.blink::mojom::blink::FetchAPIRequest"** %276, align 8
  %278 = getelementptr inbounds %"class.blink::mojom::blink::FetchAPIRequest", %"class.blink::mojom::blink::FetchAPIRequest"* %277, i64 0, i32 4
  %279 = call %"class.WTF::StringImpl"* @_ZNK5blink4KURL7GetPathEv(%"class.blink::KURL"* %278) #16
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %268) #16
  %280 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %182, align 8
  %281 = icmp eq %"class.WTF::StringImpl"* %280, null
  br i1 %281, label %282, label %284

282:                                              ; preds = %274
  store i8* null, i8** %270, align 8
  %283 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  store i64 %283, i64* %272, align 8
  br label %288

284:                                              ; preds = %274
  store %"class.WTF::StringImpl"* %280, %"class.WTF::StringImpl"** %269, align 8
  %285 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %280, i64 0, i32 1
  %286 = load i32, i32* %285, align 4
  %287 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %280, i64 1
  store %"class.WTF::StringImpl"* %287, %"class.WTF::StringImpl"** %271, align 8
  br label %288

288:                                              ; preds = %284, %282
  %289 = phi i32 [ %286, %284 ], [ 0, %282 ]
  store i32 %289, i32* %273, align 8
  %290 = icmp eq %"class.WTF::StringImpl"* %279, null
  br i1 %290, label %291, label %292

291:                                              ; preds = %288
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %268) #16
  br label %336

292:                                              ; preds = %288
  %293 = call i32 @_ZN3WTF10StringImpl16FindIgnoringCaseERKNS_10StringViewEj(%"class.WTF::StringImpl"* nonnull %279, %"class.WTF::StringView"* nonnull dereferenceable(24) %12, i32 0) #16
  %294 = icmp eq i32 %293, -1
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %268) #16
  br i1 %294, label %323, label %295

295:                                              ; preds = %292
  %296 = load i32, i32* %253, align 4
  %297 = load i32, i32* %252, align 8
  %298 = icmp eq i32 %296, %297
  br i1 %298, label %309, label %299, !prof !3

299:                                              ; preds = %295
  %300 = load %"class.mojo::StructPtr.1985"*, %"class.mojo::StructPtr.1985"** %251, align 8
  %301 = zext i32 %296 to i64
  %302 = getelementptr inbounds %"class.mojo::StructPtr.1985", %"class.mojo::StructPtr.1985"* %300, i64 %301
  %303 = bitcast %"class.mojo::StructPtr.1985"* %302 to i64*
  %304 = getelementptr inbounds %"class.mojo::StructPtr.1985", %"class.mojo::StructPtr.1985"* %302, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.blink::mojom::blink::FetchAPIRequest"* null, %"class.blink::mojom::blink::FetchAPIRequest"** %304, align 8
  %305 = bitcast %"class.mojo::StructPtr.1985"* %275 to i64*
  %306 = load i64, i64* %305, align 8
  store i64 %306, i64* %303, align 8
  store i64 0, i64* %305, align 8
  %307 = load i32, i32* %253, align 4
  %308 = add i32 %307, 1
  store i32 %308, i32* %253, align 4
  br label %310

309:                                              ; preds = %295
  call void @_ZN3WTF6VectorIN4mojo9StructPtrIN5blink5mojom5blink15FetchAPIRequestEEELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIS7_EEvOT_(%"class.WTF::Vector.2239"* nonnull %11, %"class.mojo::StructPtr.1985"* dereferenceable(8) %275) #16
  br label %310

310:                                              ; preds = %309, %299
  %311 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %279, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %312 = load atomic i32, i32* %311 monotonic, align 4
  %313 = and i32 %312, 2
  %314 = icmp eq i32 %313, 0
  %315 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %279, i64 0, i32 0
  %316 = load i32, i32* %315, align 4
  br i1 %314, label %317, label %319

317:                                              ; preds = %310
  %318 = add i32 %316, -1
  store i32 %318, i32* %315, align 4
  br label %319

319:                                              ; preds = %317, %310
  %320 = phi i32 [ %318, %317 ], [ %316, %310 ]
  %321 = icmp eq i32 %320, 0
  br i1 %321, label %322, label %336

322:                                              ; preds = %319
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %279) #16
  br label %336

323:                                              ; preds = %292
  %324 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %279, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %325 = load atomic i32, i32* %324 monotonic, align 4
  %326 = and i32 %325, 2
  %327 = icmp eq i32 %326, 0
  %328 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %279, i64 0, i32 0
  %329 = load i32, i32* %328, align 4
  br i1 %327, label %330, label %332

330:                                              ; preds = %323
  %331 = add i32 %329, -1
  store i32 %331, i32* %328, align 4
  br label %332

332:                                              ; preds = %330, %323
  %333 = phi i32 [ %331, %330 ], [ %329, %323 ]
  %334 = icmp eq i32 %333, 0
  br i1 %334, label %335, label %336

335:                                              ; preds = %332
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %279) #16
  br label %336

336:                                              ; preds = %335, %332, %322, %319, %291
  %337 = getelementptr inbounds %"class.mojo::StructPtr.1985", %"class.mojo::StructPtr.1985"* %275, i64 1
  %338 = icmp eq %"class.mojo::StructPtr.1985"* %337, %265
  br i1 %338, label %339, label %274

339:                                              ; preds = %336
  %340 = load i32, i32* %253, align 4
  br label %341

341:                                              ; preds = %339, %260
  %342 = phi i64 [ 0, %260 ], [ %228, %339 ]
  %343 = phi i32 [ 0, %260 ], [ %232, %339 ]
  %344 = phi i32 [ %232, %260 ], [ %340, %339 ]
  %345 = icmp eq i32 %344, 0
  br i1 %345, label %346, label %356

346:                                              ; preds = %341, %262
  %347 = phi i64 [ %342, %341 ], [ %228, %262 ]
  %348 = phi i32 [ %343, %341 ], [ 0, %262 ]
  %349 = bitcast i8* %223 to %"class.blink::protocol::CacheStorage::Backend::RequestEntriesCallback"**
  %350 = load %"class.blink::protocol::CacheStorage::Backend::RequestEntriesCallback"*, %"class.blink::protocol::CacheStorage::Backend::RequestEntriesCallback"** %349, align 8
  %351 = call i8* @_Znwm(i64 24) #18
  %352 = bitcast i8* %351 to %"class.std::__1::vector.2254"*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %351, i8 0, i64 24, i1 false) #16
  %353 = bitcast %"class.blink::protocol::CacheStorage::Backend::RequestEntriesCallback"* %350 to void (%"class.blink::protocol::CacheStorage::Backend::RequestEntriesCallback"*, %"class.std::__1::vector.2254"*, double)***
  %354 = load void (%"class.blink::protocol::CacheStorage::Backend::RequestEntriesCallback"*, %"class.std::__1::vector.2254"*, double)**, void (%"class.blink::protocol::CacheStorage::Backend::RequestEntriesCallback"*, %"class.std::__1::vector.2254"*, double)*** %353, align 8
  %355 = load void (%"class.blink::protocol::CacheStorage::Backend::RequestEntriesCallback"*, %"class.std::__1::vector.2254"*, double)*, void (%"class.blink::protocol::CacheStorage::Backend::RequestEntriesCallback"*, %"class.std::__1::vector.2254"*, double)** %354, align 8
  call void %355(%"class.blink::protocol::CacheStorage::Backend::RequestEntriesCallback"* %350, %"class.std::__1::vector.2254"* nonnull %352, double 0.000000e+00) #16
  br label %499

356:                                              ; preds = %341
  %357 = zext i32 %344 to i64
  %358 = bitcast %"class.logging::CheckOpResult"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %358) #16
  %359 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %8, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %359, align 8
  %360 = bitcast %"class.logging::CheckOpResult"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %360) #16
  %361 = icmp ugt i32 %344, 22347776
  br i1 %361, label %363, label %362

362:                                              ; preds = %356
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %360) #16
  store i8* null, i8** %359, align 8
  br label %372

363:                                              ; preds = %356
  %364 = call i8* @_ZN7logging15CheckOpValueStrEm(i64 %357) #16
  %365 = call i8* @_ZN7logging15CheckOpValueStrEm(i64 22347776) #16
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %7, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.20, i64 0, i64 0), i8* %364, i8* %365) #16
  %366 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %7, i64 0, i32 0
  %367 = load i8*, i8** %366, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %360) #16
  store i8* %367, i8** %359, align 8
  %368 = icmp eq i8* %367, null
  br i1 %368, label %372, label %369

369:                                              ; preds = %363
  %370 = bitcast %"class.logging::CheckError"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %370) #16
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %9, i8* getelementptr inbounds ([78 x i8], [78 x i8]* @.str.21, i64 0, i64 0), i32 31, %"class.logging::CheckOpResult"* nonnull %8) #16
  %371 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %9) #16
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %9) #16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %370) #16
  br label %372

372:                                              ; preds = %369, %363, %362
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %358) #16
  %373 = mul nuw nsw i64 %357, 96
  %374 = call i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64 %373) #16
  %375 = call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %374, i8* getelementptr inbounds ([93 x i8], [93 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink12_GLOBAL__N_115RequestResponseEEEPKcv, i64 0, i64 0)) #16
  %376 = bitcast i8* %375 to %"struct.blink::(anonymous namespace)::RequestResponse"*
  %377 = getelementptr inbounds %"struct.blink::(anonymous namespace)::RequestResponse", %"struct.blink::(anonymous namespace)::RequestResponse"* %376, i64 %357
  br label %378

378:                                              ; preds = %378, %372
  %379 = phi %"struct.blink::(anonymous namespace)::RequestResponse"* [ %384, %378 ], [ %376, %372 ]
  %380 = bitcast %"struct.blink::(anonymous namespace)::RequestResponse"* %379 to i8*
  %381 = getelementptr inbounds %"struct.blink::(anonymous namespace)::RequestResponse", %"struct.blink::(anonymous namespace)::RequestResponse"* %379, i64 0, i32 2
  call void @llvm.memset.p0i8.i64(i8* align 8 %380, i8 0, i64 96, i1 false) #16
  call void @_ZN5blink13HTTPHeaderMapC1Ev(%"class.blink::HTTPHeaderMap"* %381) #16
  %382 = getelementptr inbounds %"struct.blink::(anonymous namespace)::RequestResponse", %"struct.blink::(anonymous namespace)::RequestResponse"* %379, i64 0, i32 4, i32 0, i32 0
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %382, align 8
  %383 = getelementptr inbounds %"struct.blink::(anonymous namespace)::RequestResponse", %"struct.blink::(anonymous namespace)::RequestResponse"* %379, i64 0, i32 8
  call void @_ZN5blink13HTTPHeaderMapC1Ev(%"class.blink::HTTPHeaderMap"* %383) #16
  %384 = getelementptr inbounds %"struct.blink::(anonymous namespace)::RequestResponse", %"struct.blink::(anonymous namespace)::RequestResponse"* %379, i64 1
  %385 = icmp eq %"struct.blink::(anonymous namespace)::RequestResponse"* %384, %377
  br i1 %385, label %386, label %378

386:                                              ; preds = %378
  %387 = udiv i64 %374, 96
  %388 = ptrtoint i8* %375 to i64
  %389 = trunc i64 %387 to i32
  %390 = bitcast i8* %204 to i64*
  %391 = load i64, i64* %390, align 8
  store atomic i64 %388, i64* %390 monotonic, align 8
  %392 = getelementptr inbounds i8, i8* %142, i64 48
  %393 = bitcast i8* %392 to i32*
  store i32 %389, i32* %393, align 4
  %394 = getelementptr inbounds i8, i8* %142, i64 52
  %395 = bitcast i8* %394 to i32*
  %396 = load i32, i32* %395, align 4
  store i32 %344, i32* %395, align 4
  %397 = inttoptr i64 %391 to %"struct.blink::(anonymous namespace)::RequestResponse"*
  %398 = icmp eq i64 %391, 0
  br i1 %398, label %406, label %399, !prof !2

399:                                              ; preds = %386
  %400 = icmp eq i32 %396, 0
  br i1 %400, label %404, label %401, !prof !3

401:                                              ; preds = %399
  %402 = zext i32 %396 to i64
  %403 = getelementptr inbounds %"struct.blink::(anonymous namespace)::RequestResponse", %"struct.blink::(anonymous namespace)::RequestResponse"* %397, i64 %402
  call fastcc void @_ZN3WTF20VectorTypeOperationsIN5blink12_GLOBAL__N_115RequestResponseENS_18PartitionAllocatorEE8DestructEPS3_S6_(%"struct.blink::(anonymous namespace)::RequestResponse"* nonnull %397, %"struct.blink::(anonymous namespace)::RequestResponse"* %403) #16
  br label %404

404:                                              ; preds = %401, %399
  %405 = inttoptr i64 %391 to i8*
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %405) #16
  br label %406

406:                                              ; preds = %404, %386
  store i32 %344, i32* %203, align 8
  %407 = load %"class.mojo::StructPtr.1985"*, %"class.mojo::StructPtr.1985"** %251, align 8
  %408 = load i32, i32* %253, align 4
  %409 = zext i32 %408 to i64
  %410 = getelementptr inbounds %"class.mojo::StructPtr.1985", %"class.mojo::StructPtr.1985"* %407, i64 %409
  %411 = icmp eq i32 %408, 0
  br i1 %411, label %503, label %412

412:                                              ; preds = %406
  %413 = bitcast %"class.mojo::StructPtr.1985"* %13 to i8*
  %414 = getelementptr inbounds %"class.mojo::StructPtr.1985", %"class.mojo::StructPtr.1985"* %13, i64 0, i32 0, i32 0, i32 0, i32 0
  %415 = bitcast i8** %14 to i8*
  %416 = bitcast %"class.blink::ResourceRequestBody"* %15 to i8*
  %417 = bitcast %"class.mojo::StructPtr.2000"* %16 to i8*
  %418 = getelementptr inbounds %"class.blink::KURL", %"class.blink::KURL"* %6, i64 0, i32 0
  %419 = bitcast %"class.mojo::StructPtr.2000"* %16 to i64*
  %420 = getelementptr inbounds %"class.mojo::StructPtr.2000", %"class.mojo::StructPtr.2000"* %16, i64 0, i32 0, i32 0, i32 0, i32 0
  %421 = bitcast i8* %218 to %"class.blink::mojom::blink::CacheStorageCacheProxy"**
  %422 = bitcast %"class.mojo::StructPtr.1985"* %17 to i64*
  %423 = getelementptr inbounds %"class.mojo::StructPtr.1985", %"class.mojo::StructPtr.1985"* %17, i64 0, i32 0, i32 0, i32 0, i32 0
  %424 = getelementptr inbounds %"class.mojo::InlinedStructPtr.2014", %"class.mojo::InlinedStructPtr.2014"* %18, i64 0, i32 0
  %425 = getelementptr inbounds %"class.mojo::InlinedStructPtr.2014", %"class.mojo::InlinedStructPtr.2014"* %18, i64 0, i32 1
  %426 = bitcast %class.scoped_refptr.2273* %20 to i8*
  %427 = getelementptr inbounds %class.scoped_refptr.2273, %class.scoped_refptr.2273* %20, i64 0, i32 0
  %428 = icmp eq i8* %142, null
  %429 = bitcast i8* %142 to %"class.base::subtle::RefCountedBase"*
  %430 = bitcast %"class.mojo::StructPtr.1985"* %13 to i64*
  %431 = bitcast %"class.base::OnceCallback.2018"* %19 to i8**
  %432 = getelementptr inbounds %"class.base::OnceCallback.2018", %"class.base::OnceCallback.2018"* %19, i64 0, i32 0
  %433 = ptrtoint i8* %142 to i64
  %434 = bitcast %class.scoped_refptr.2273* %20 to i8**
  br label %435

435:                                              ; preds = %496, %412
  %436 = phi %"class.mojo::StructPtr.1985"* [ %407, %412 ], [ %497, %496 ]
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %413) #16
  store %"class.blink::mojom::blink::FetchAPIRequest"* inttoptr (i64 -6148914691236517206 to %"class.blink::mojom::blink::FetchAPIRequest"*), %"class.blink::mojom::blink::FetchAPIRequest"** %414, align 8
  %437 = getelementptr inbounds %"class.mojo::StructPtr.1985", %"class.mojo::StructPtr.1985"* %436, i64 0, i32 0, i32 0, i32 0, i32 0
  %438 = load %"class.blink::mojom::blink::FetchAPIRequest"*, %"class.blink::mojom::blink::FetchAPIRequest"** %437, align 8
  %439 = getelementptr inbounds %"class.blink::mojom::blink::FetchAPIRequest", %"class.blink::mojom::blink::FetchAPIRequest"* %438, i64 0, i32 0
  %440 = getelementptr inbounds %"class.blink::mojom::blink::FetchAPIRequest", %"class.blink::mojom::blink::FetchAPIRequest"* %438, i64 0, i32 1
  %441 = getelementptr inbounds %"class.blink::mojom::blink::FetchAPIRequest", %"class.blink::mojom::blink::FetchAPIRequest"* %438, i64 0, i32 2
  %442 = getelementptr inbounds %"class.blink::mojom::blink::FetchAPIRequest", %"class.blink::mojom::blink::FetchAPIRequest"* %438, i64 0, i32 3
  %443 = getelementptr inbounds %"class.blink::mojom::blink::FetchAPIRequest", %"class.blink::mojom::blink::FetchAPIRequest"* %438, i64 0, i32 4
  %444 = getelementptr inbounds %"class.blink::mojom::blink::FetchAPIRequest", %"class.blink::mojom::blink::FetchAPIRequest"* %438, i64 0, i32 5
  %445 = getelementptr inbounds %"class.blink::mojom::blink::FetchAPIRequest", %"class.blink::mojom::blink::FetchAPIRequest"* %438, i64 0, i32 6
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %415) #16
  store i8* null, i8** %14, align 8
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %416) #16
  call void @_ZN5blink19ResourceRequestBodyC1Ev(%"class.blink::ResourceRequestBody"* nonnull %15) #16
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %417) #16
  %446 = load %"class.blink::mojom::blink::FetchAPIRequest"*, %"class.blink::mojom::blink::FetchAPIRequest"** %437, align 8
  %447 = getelementptr inbounds %"class.blink::mojom::blink::FetchAPIRequest", %"class.blink::mojom::blink::FetchAPIRequest"* %446, i64 0, i32 9, i32 0, i32 0, i32 0, i32 0
  %448 = load %"class.blink::mojom::blink::Referrer"*, %"class.blink::mojom::blink::Referrer"** %447, align 8, !noalias !88
  %449 = icmp eq %"class.blink::mojom::blink::Referrer"* %448, null
  br i1 %449, label %450, label %451

450:                                              ; preds = %435
  store i64 0, i64* %419, align 8, !alias.scope !88
  br label %458

451:                                              ; preds = %435
  call void @llvm.lifetime.start.p0i8(i64 112, i8* nonnull %418) #16, !noalias !91
  %452 = getelementptr inbounds %"class.blink::mojom::blink::Referrer", %"class.blink::mojom::blink::Referrer"* %448, i64 0, i32 0
  call void @_ZN5blink4KURLC1ERKS0_(%"class.blink::KURL"* nonnull %6, %"class.blink::KURL"* dereferenceable(112) %452) #16, !noalias !91
  %453 = getelementptr inbounds %"class.blink::mojom::blink::Referrer", %"class.blink::mojom::blink::Referrer"* %448, i64 0, i32 1
  %454 = load i32, i32* %453, align 4, !noalias !91
  %455 = call i8* @_Znwm(i64 120) #18, !noalias !94
  %456 = bitcast i8* %455 to %"class.blink::mojom::blink::Referrer"*
  call void @_ZN5blink5mojom5blink8ReferrerC1ERKNS_4KURLEN7network5mojom14ReferrerPolicyE(%"class.blink::mojom::blink::Referrer"* nonnull %456, %"class.blink::KURL"* nonnull dereferenceable(112) %6, i32 %454) #16, !noalias !94
  %457 = ptrtoint i8* %455 to i64
  store i64 %457, i64* %419, align 8, !alias.scope !94
  call void @_ZN5blink4KURLD1Ev(%"class.blink::KURL"* nonnull %6) #16, !noalias !91
  call void @llvm.lifetime.end.p0i8(i64 112, i8* nonnull %418) #16, !noalias !91
  br label %458

458:                                              ; preds = %451, %450
  %459 = load %"class.blink::mojom::blink::FetchAPIRequest"*, %"class.blink::mojom::blink::FetchAPIRequest"** %437, align 8
  %460 = getelementptr inbounds %"class.blink::mojom::blink::FetchAPIRequest", %"class.blink::mojom::blink::FetchAPIRequest"* %459, i64 0, i32 10
  %461 = getelementptr inbounds %"class.blink::mojom::blink::FetchAPIRequest", %"class.blink::mojom::blink::FetchAPIRequest"* %459, i64 0, i32 11
  %462 = getelementptr inbounds %"class.blink::mojom::blink::FetchAPIRequest", %"class.blink::mojom::blink::FetchAPIRequest"* %459, i64 0, i32 12
  %463 = getelementptr inbounds %"class.blink::mojom::blink::FetchAPIRequest", %"class.blink::mojom::blink::FetchAPIRequest"* %459, i64 0, i32 13
  %464 = getelementptr inbounds %"class.blink::mojom::blink::FetchAPIRequest", %"class.blink::mojom::blink::FetchAPIRequest"* %459, i64 0, i32 14
  %465 = getelementptr inbounds %"class.blink::mojom::blink::FetchAPIRequest", %"class.blink::mojom::blink::FetchAPIRequest"* %459, i64 0, i32 15
  %466 = getelementptr inbounds %"class.blink::mojom::blink::FetchAPIRequest", %"class.blink::mojom::blink::FetchAPIRequest"* %459, i64 0, i32 16
  %467 = getelementptr inbounds %"class.blink::mojom::blink::FetchAPIRequest", %"class.blink::mojom::blink::FetchAPIRequest"* %459, i64 0, i32 17
  %468 = getelementptr inbounds %"class.blink::mojom::blink::FetchAPIRequest", %"class.blink::mojom::blink::FetchAPIRequest"* %459, i64 0, i32 18
  %469 = getelementptr inbounds %"class.blink::mojom::blink::FetchAPIRequest", %"class.blink::mojom::blink::FetchAPIRequest"* %459, i64 0, i32 19
  call void @_ZN4mojo9StructPtrIN5blink5mojom5blink15FetchAPIRequestEEC2IJRN7network5mojom11RequestModeERbRNS8_18RequestDestinationERNS2_23RequestContextFrameTypeERNS1_4KURLERN3WTF6StringERNSI_7HashMapISJ_SJ_NSI_15CaseFoldingHashENSI_10HashTraitsISJ_EESO_NSI_18PartitionAllocatorEEEDnNS1_19ResourceRequestBodyENS0_INS3_8ReferrerEEERNS8_15CredentialsModeERNS2_14FetchCacheModeERNS8_12RedirectModeESK_RN3net15RequestPriorityERN4absl8optionalIN4base16UnguessableTokenEEESB_SB_SB_SK_EEENS16_10in_place_tEDpOT_(%"class.mojo::StructPtr.1985"* nonnull %13, i32* dereferenceable(4) %439, i8* dereferenceable(1) %440, i32* dereferenceable(4) %441, i32* dereferenceable(4) %442, %"class.blink::KURL"* dereferenceable(112) %443, %"class.WTF::String"* dereferenceable(8) %444, %"class.WTF::HashMap.1989"* dereferenceable(24) %445, i8** nonnull dereferenceable(8) %14, %"class.blink::ResourceRequestBody"* nonnull dereferenceable(16) %15, %"class.mojo::StructPtr.2000"* nonnull dereferenceable(8) %16, i32* dereferenceable(4) %460, i32* dereferenceable(4) %461, i32* dereferenceable(4) %462, %"class.WTF::String"* dereferenceable(8) %463, i32* dereferenceable(4) %464, %"class.absl::optional.494"* dereferenceable(24) %465, i8* dereferenceable(1) %466, i8* dereferenceable(1) %467, i8* dereferenceable(1) %468, %"class.WTF::String"* dereferenceable(8) %469) #16
  %470 = load %"class.blink::mojom::blink::Referrer"*, %"class.blink::mojom::blink::Referrer"** %420, align 8
  store %"class.blink::mojom::blink::Referrer"* null, %"class.blink::mojom::blink::Referrer"** %420, align 8
  %471 = icmp eq %"class.blink::mojom::blink::Referrer"* %470, null
  br i1 %471, label %474, label %472

472:                                              ; preds = %458
  call void @_ZN5blink5mojom5blink8ReferrerD1Ev(%"class.blink::mojom::blink::Referrer"* nonnull %470) #16
  %473 = getelementptr inbounds %"class.blink::mojom::blink::Referrer", %"class.blink::mojom::blink::Referrer"* %470, i64 0, i32 0, i32 0
  call void @_ZdlPv(i8* %473) #18
  br label %474

474:                                              ; preds = %472, %458
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %417) #16
  call void @_ZN5blink19ResourceRequestBodyD1Ev(%"class.blink::ResourceRequestBody"* nonnull %15) #16
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %416) #16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %415) #16
  %475 = load %"class.blink::mojom::blink::CacheStorageCacheProxy"*, %"class.blink::mojom::blink::CacheStorageCacheProxy"** %421, align 8
  store %"class.blink::mojom::blink::FetchAPIRequest"* null, %"class.blink::mojom::blink::FetchAPIRequest"** %423, align 8
  %476 = bitcast %"class.mojo::StructPtr.1985"* %436 to i64*
  %477 = load i64, i64* %476, align 8
  store i64 %477, i64* %422, align 8
  store i64 0, i64* %476, align 8
  call void @_ZN5blink5mojom5blink17CacheQueryOptionsC1Ev(%"class.blink::mojom::blink::CacheQueryOptions"* nonnull %424) #16
  store i32 1, i32* %425, align 4, !alias.scope !97
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %426) #16
  store i8* %142, i8** %434, align 8
  br i1 %428, label %479, label %478

478:                                              ; preds = %474
  call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* nonnull %429) #16
  br label %479

479:                                              ; preds = %478, %474
  %480 = call i8* @_Znwm(i64 56) #18, !noalias !100
  %481 = bitcast i8* %480 to %"class.base::internal::BindStateBase"*
  call void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_E(%"class.base::internal::BindStateBase"* nonnull %481, void ()* bitcast (void (%"class.base::internal::BindStateBase"*, %"class.mojo::StructPtr.2303"*)* @_ZN4base8internal7InvokerINS0_9BindStateIZN5blink12_GLOBAL__N_120ResponsesAccumulator8DispatchEN3WTF6VectorIN4mojo9StructPtrINS3_5mojom5blink15FetchAPIRequestEEELj0ENS6_18PartitionAllocatorEEEEUl13scoped_refptrIS5_ESD_NS9_INSB_11MatchResultEEEE_JSH_SD_EEEFvSJ_EE7RunOnceEPNS0_13BindStateBaseEOSJ_ to void ()*), void (%"class.base::internal::BindStateBase"*)* nonnull @_ZN4base8internal9BindStateIZN5blink12_GLOBAL__N_120ResponsesAccumulator8DispatchEN3WTF6VectorIN4mojo9StructPtrINS2_5mojom5blink15FetchAPIRequestEEELj0ENS5_18PartitionAllocatorEEEEUl13scoped_refptrIS4_ESC_NS8_INSA_11MatchResultEEEE_JSG_SC_EE7DestroyEPKNS0_13BindStateBaseE) #16, !noalias !100
  %482 = getelementptr inbounds i8, i8* %480, i64 40
  %483 = bitcast i8* %482 to i64*
  store i64 %433, i64* %483, align 8, !noalias !100
  store %"class.blink::(anonymous namespace)::ResponsesAccumulator"* null, %"class.blink::(anonymous namespace)::ResponsesAccumulator"** %427, align 8, !noalias !100
  %484 = getelementptr inbounds i8, i8* %480, i64 48
  %485 = bitcast i8* %484 to i64*
  %486 = load i64, i64* %430, align 8, !noalias !100
  store i64 %486, i64* %485, align 8, !noalias !100
  store i64 0, i64* %430, align 8, !noalias !100
  store i8* %480, i8** %431, align 8, !alias.scope !100
  call void @_ZN5blink5mojom5blink22CacheStorageCacheProxy5MatchEN4mojo9StructPtrINS1_15FetchAPIRequestEEENS3_16InlinedStructPtrINS1_17CacheQueryOptionsEEEblN4base12OnceCallbackIFvNS4_INS1_11MatchResultEEEEEE(%"class.blink::mojom::blink::CacheStorageCacheProxy"* %475, %"class.mojo::StructPtr.1985"* nonnull %17, %"class.mojo::InlinedStructPtr.2014"* nonnull %18, i1 zeroext false, i64 %236, %"class.base::OnceCallback.2018"* nonnull %19) #16
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %432) #16
  call fastcc void @_ZN13scoped_refptrIN5blink12_GLOBAL__N_120ResponsesAccumulatorEED2Ev(%class.scoped_refptr.2273* nonnull %20) #16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %426) #16
  call void @_ZN5blink5mojom5blink17CacheQueryOptionsD1Ev(%"class.blink::mojom::blink::CacheQueryOptions"* nonnull %424) #16
  %487 = load %"class.blink::mojom::blink::FetchAPIRequest"*, %"class.blink::mojom::blink::FetchAPIRequest"** %423, align 8
  store %"class.blink::mojom::blink::FetchAPIRequest"* null, %"class.blink::mojom::blink::FetchAPIRequest"** %423, align 8
  %488 = icmp eq %"class.blink::mojom::blink::FetchAPIRequest"* %487, null
  br i1 %488, label %491, label %489

489:                                              ; preds = %479
  call void @_ZN5blink5mojom5blink15FetchAPIRequestD1Ev(%"class.blink::mojom::blink::FetchAPIRequest"* nonnull %487) #16
  %490 = bitcast %"class.blink::mojom::blink::FetchAPIRequest"* %487 to i8*
  call void @_ZdlPv(i8* %490) #18
  br label %491

491:                                              ; preds = %489, %479
  %492 = load %"class.blink::mojom::blink::FetchAPIRequest"*, %"class.blink::mojom::blink::FetchAPIRequest"** %414, align 8
  store %"class.blink::mojom::blink::FetchAPIRequest"* null, %"class.blink::mojom::blink::FetchAPIRequest"** %414, align 8
  %493 = icmp eq %"class.blink::mojom::blink::FetchAPIRequest"* %492, null
  br i1 %493, label %496, label %494

494:                                              ; preds = %491
  call void @_ZN5blink5mojom5blink15FetchAPIRequestD1Ev(%"class.blink::mojom::blink::FetchAPIRequest"* nonnull %492) #16
  %495 = bitcast %"class.blink::mojom::blink::FetchAPIRequest"* %492 to i8*
  call void @_ZdlPv(i8* %495) #18
  br label %496

496:                                              ; preds = %494, %491
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %413) #16
  %497 = getelementptr inbounds %"class.mojo::StructPtr.1985", %"class.mojo::StructPtr.1985"* %436, i64 1
  %498 = icmp eq %"class.mojo::StructPtr.1985"* %497, %410
  br i1 %498, label %499, label %435

499:                                              ; preds = %496, %346
  %500 = phi i64 [ %347, %346 ], [ %342, %496 ]
  %501 = phi i32 [ %348, %346 ], [ %343, %496 ]
  %502 = load %"class.mojo::StructPtr.1985"*, %"class.mojo::StructPtr.1985"** %251, align 8
  br label %503

503:                                              ; preds = %499, %406
  %504 = phi i64 [ %500, %499 ], [ %342, %406 ]
  %505 = phi i32 [ %501, %499 ], [ %343, %406 ]
  %506 = phi %"class.mojo::StructPtr.1985"* [ %502, %499 ], [ %407, %406 ]
  %507 = icmp eq %"class.mojo::StructPtr.1985"* %506, null
  br i1 %507, label %530, label %508, !prof !2

508:                                              ; preds = %503
  %509 = bitcast %"class.mojo::StructPtr.1985"* %506 to i8*
  %510 = load i32, i32* %253, align 4
  %511 = icmp eq i32 %510, 0
  br i1 %511, label %528, label %512, !prof !3

512:                                              ; preds = %508
  %513 = zext i32 %510 to i64
  %514 = getelementptr inbounds %"class.mojo::StructPtr.1985", %"class.mojo::StructPtr.1985"* %506, i64 %513
  br label %515

515:                                              ; preds = %522, %512
  %516 = phi %"class.mojo::StructPtr.1985"* [ %523, %522 ], [ %506, %512 ]
  %517 = getelementptr inbounds %"class.mojo::StructPtr.1985", %"class.mojo::StructPtr.1985"* %516, i64 0, i32 0, i32 0, i32 0, i32 0
  %518 = load %"class.blink::mojom::blink::FetchAPIRequest"*, %"class.blink::mojom::blink::FetchAPIRequest"** %517, align 8
  store %"class.blink::mojom::blink::FetchAPIRequest"* null, %"class.blink::mojom::blink::FetchAPIRequest"** %517, align 8
  %519 = icmp eq %"class.blink::mojom::blink::FetchAPIRequest"* %518, null
  br i1 %519, label %522, label %520

520:                                              ; preds = %515
  call void @_ZN5blink5mojom5blink15FetchAPIRequestD1Ev(%"class.blink::mojom::blink::FetchAPIRequest"* nonnull %518) #16
  %521 = bitcast %"class.blink::mojom::blink::FetchAPIRequest"* %518 to i8*
  call void @_ZdlPv(i8* %521) #18
  br label %522

522:                                              ; preds = %520, %515
  %523 = getelementptr inbounds %"class.mojo::StructPtr.1985", %"class.mojo::StructPtr.1985"* %516, i64 1
  %524 = icmp eq %"class.mojo::StructPtr.1985"* %523, %514
  br i1 %524, label %525, label %515

525:                                              ; preds = %522
  store i32 0, i32* %253, align 4
  %526 = bitcast %"class.WTF::Vector.2239"* %11 to i8**
  %527 = load i8*, i8** %526, align 8
  br label %528

528:                                              ; preds = %525, %508
  %529 = phi i8* [ %527, %525 ], [ %509, %508 ]
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %529) #16
  store %"class.mojo::StructPtr.1985"* null, %"class.mojo::StructPtr.1985"** %251, align 8
  br label %530

530:                                              ; preds = %528, %503
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %250) #16
  %531 = icmp eq i8* %247, null
  br i1 %531, label %536, label %532

532:                                              ; preds = %530
  %533 = load i8, i8* %247, align 1
  %534 = icmp eq i8 %533, 0
  br i1 %534, label %536, label %535

535:                                              ; preds = %532
  call void @_ZN20trace_event_internal24UpdateTraceEventDurationEPKhPKcN4base11trace_event16TraceEventHandleE(i8* nonnull %247, i8* %248, i64 %249) #16
  br label %536

536:                                              ; preds = %535, %532, %530
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %233) #16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %234) #16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %235) #16
  %537 = inttoptr i64 %504 to %"class.mojo::StructPtr.1985"*
  %538 = icmp eq i64 %504, 0
  br i1 %538, label %556, label %539, !prof !2

539:                                              ; preds = %536
  %540 = icmp eq i32 %505, 0
  br i1 %540, label %554, label %541, !prof !3

541:                                              ; preds = %539
  %542 = zext i32 %505 to i64
  %543 = getelementptr inbounds %"class.mojo::StructPtr.1985", %"class.mojo::StructPtr.1985"* %537, i64 %542
  br label %544

544:                                              ; preds = %551, %541
  %545 = phi %"class.mojo::StructPtr.1985"* [ %552, %551 ], [ %537, %541 ]
  %546 = getelementptr inbounds %"class.mojo::StructPtr.1985", %"class.mojo::StructPtr.1985"* %545, i64 0, i32 0, i32 0, i32 0, i32 0
  %547 = load %"class.blink::mojom::blink::FetchAPIRequest"*, %"class.blink::mojom::blink::FetchAPIRequest"** %546, align 8
  store %"class.blink::mojom::blink::FetchAPIRequest"* null, %"class.blink::mojom::blink::FetchAPIRequest"** %546, align 8
  %548 = icmp eq %"class.blink::mojom::blink::FetchAPIRequest"* %547, null
  br i1 %548, label %551, label %549

549:                                              ; preds = %544
  call void @_ZN5blink5mojom5blink15FetchAPIRequestD1Ev(%"class.blink::mojom::blink::FetchAPIRequest"* nonnull %547) #16
  %550 = bitcast %"class.blink::mojom::blink::FetchAPIRequest"* %547 to i8*
  call void @_ZdlPv(i8* %550) #18
  br label %551

551:                                              ; preds = %549, %544
  %552 = getelementptr inbounds %"class.mojo::StructPtr.1985", %"class.mojo::StructPtr.1985"* %545, i64 1
  %553 = icmp eq %"class.mojo::StructPtr.1985"* %552, %543
  br i1 %553, label %554, label %544

554:                                              ; preds = %551, %539
  %555 = inttoptr i64 %504 to i8*
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %555) #16
  br label %556

556:                                              ; preds = %554, %536
  call fastcc void @_ZN13scoped_refptrIN5blink12_GLOBAL__N_120ResponsesAccumulatorEED2Ev(%class.scoped_refptr.2273* nonnull %26) #16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %140) #16
  br label %557

557:                                              ; preds = %556, %131, %124
  call fastcc void @_ZNSt3__110unique_ptrIN5blink12_GLOBAL__N_126GetCacheKeysForRequestDataENS_14default_deleteIS3_EEED2Ev(%"class.std::__1::unique_ptr.2212"* nonnull %21) #16
  %558 = getelementptr inbounds %"struct.blink::(anonymous namespace)::DataRequestParams", %"struct.blink::(anonymous namespace)::DataRequestParams"* %28, i64 0, i32 3, i32 0, i32 0
  %559 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %558, align 16
  %560 = icmp eq %"class.WTF::StringImpl"* %559, null
  br i1 %560, label %574, label %561

561:                                              ; preds = %557
  %562 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %559, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %563 = load atomic i32, i32* %562 monotonic, align 4
  %564 = and i32 %563, 2
  %565 = icmp eq i32 %564, 0
  %566 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %559, i64 0, i32 0
  %567 = load i32, i32* %566, align 4
  br i1 %565, label %568, label %570

568:                                              ; preds = %561
  %569 = add i32 %567, -1
  store i32 %569, i32* %566, align 4
  br label %570

570:                                              ; preds = %568, %561
  %571 = phi i32 [ %569, %568 ], [ %567, %561 ]
  %572 = icmp eq i32 %571, 0
  br i1 %572, label %573, label %574

573:                                              ; preds = %570
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %559) #16
  br label %574

574:                                              ; preds = %573, %570, %557
  %575 = getelementptr inbounds %"struct.blink::(anonymous namespace)::DataRequestParams", %"struct.blink::(anonymous namespace)::DataRequestParams"* %28, i64 0, i32 0, i32 0, i32 0
  %576 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %575, align 16
  %577 = icmp eq %"class.WTF::StringImpl"* %576, null
  br i1 %577, label %591, label %578

578:                                              ; preds = %574
  %579 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %576, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %580 = load atomic i32, i32* %579 monotonic, align 4
  %581 = and i32 %580, 2
  %582 = icmp eq i32 %581, 0
  %583 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %576, i64 0, i32 0
  %584 = load i32, i32* %583, align 4
  br i1 %582, label %585, label %587

585:                                              ; preds = %578
  %586 = add i32 %584, -1
  store i32 %586, i32* %583, align 4
  br label %587

587:                                              ; preds = %585, %578
  %588 = phi i32 [ %586, %585 ], [ %584, %578 ]
  %589 = icmp eq i32 %588, 0
  br i1 %589, label %590, label %591

590:                                              ; preds = %587
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %576) #16
  br label %591

591:                                              ; preds = %590, %587, %574
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %43) #16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %44) #16
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %45) #16
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %46) #16
  %592 = icmp eq %"class.blink::mojom::blink::CacheKeysResult"* %42, null
  br i1 %592, label %595, label %593

593:                                              ; preds = %591
  call void @_ZN5blink5mojom5blink15CacheKeysResultD1Ev(%"class.blink::mojom::blink::CacheKeysResult"* nonnull %42) #16
  %594 = bitcast %"class.blink::mojom::blink::CacheKeysResult"* %42 to i8*
  call void @_ZdlPv(i8* %594) #18
  br label %595

595:                                              ; preds = %591, %593
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4mojo16AssociatedRemoteIN5blink5mojom5blink17CacheStorageCacheEE6UnbindEv(%"class.mojo::PendingAssociatedRemote"* noalias sret, %"class.mojo::AssociatedRemote.2215"*) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.mojo::ScopedInterfaceEndpointHandle", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = alloca %"class.mojo::internal::AssociatedInterfacePtrState.2216", align 8
  %6 = alloca %"class.mojo::AssociatedInterfacePtrInfo", align 8
  %7 = alloca %"class.mojo::ScopedInterfaceEndpointHandle", align 8
  %8 = getelementptr inbounds %"class.mojo::AssociatedRemote.2215", %"class.mojo::AssociatedRemote.2215"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %9 = load %"class.mojo::InterfaceEndpointClient"*, %"class.mojo::InterfaceEndpointClient"** %8, align 8
  %10 = icmp eq %"class.mojo::InterfaceEndpointClient"* %9, null
  br i1 %10, label %22, label %11

11:                                               ; preds = %2
  %12 = getelementptr inbounds %"class.mojo::InterfaceEndpointClient", %"class.mojo::InterfaceEndpointClient"* %9, i64 0, i32 14, i32 0, i32 2, i32 0, i32 0
  %13 = load i64, i64* %12, align 8
  %14 = icmp eq i64 %13, 0
  br i1 %14, label %15, label %19

15:                                               ; preds = %11
  %16 = getelementptr inbounds %"class.mojo::InterfaceEndpointClient", %"class.mojo::InterfaceEndpointClient"* %9, i64 0, i32 15, i32 0, i32 2, i32 0, i32 0
  %17 = load i64, i64* %16, align 8
  %18 = icmp eq i64 %17, 0
  br i1 %18, label %22, label %19

19:                                               ; preds = %15, %11
  %20 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #16
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str.34, i64 0, i64 0), i32 239, i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.35, i64 0, i64 0)) #16
  %21 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #16
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #16
  br label %22

22:                                               ; preds = %15, %2, %19
  %23 = bitcast %"class.mojo::internal::AssociatedInterfacePtrState.2216"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %23) #16
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %23, i8 -86, i64 24, i1 false)
  %24 = bitcast %"class.mojo::internal::AssociatedInterfacePtrState.2216"* %5 to %"class.mojo::internal::AssociatedInterfacePtrStateBase"*
  call void @_ZN4mojo8internal31AssociatedInterfacePtrStateBaseC2Ev(%"class.mojo::internal::AssociatedInterfacePtrStateBase"* nonnull %24) #16
  %25 = getelementptr inbounds %"class.mojo::internal::AssociatedInterfacePtrState.2216", %"class.mojo::internal::AssociatedInterfacePtrState.2216"* %5, i64 0, i32 1
  %26 = bitcast %"class.std::__1::unique_ptr.2217"* %25 to i64*
  store i64 0, i64* %26, align 8
  %27 = bitcast %"class.mojo::AssociatedRemote.2215"* %1 to %"class.mojo::internal::AssociatedInterfacePtrStateBase"*
  call void @_ZN4mojo8internal31AssociatedInterfacePtrStateBase4SwapEPS1_(%"class.mojo::internal::AssociatedInterfacePtrStateBase"* %27, %"class.mojo::internal::AssociatedInterfacePtrStateBase"* nonnull %24) #16
  %28 = getelementptr inbounds %"class.mojo::AssociatedRemote.2215", %"class.mojo::AssociatedRemote.2215"* %1, i64 0, i32 0, i32 1
  %29 = load i64, i64* %26, align 8
  %30 = bitcast %"class.std::__1::unique_ptr.2217"* %28 to i64*
  %31 = load i64, i64* %30, align 8
  store i64 %31, i64* %26, align 8
  store i64 %29, i64* %30, align 8
  %32 = bitcast %"class.mojo::AssociatedInterfacePtrInfo"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %32) #16
  %33 = getelementptr inbounds %"class.mojo::AssociatedInterfacePtrInfo", %"class.mojo::AssociatedInterfacePtrInfo"* %6, i64 0, i32 1
  %34 = bitcast %"class.mojo::ScopedInterfaceEndpointHandle"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %34)
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %32, i8 -86, i64 16, i1 false) #16, !alias.scope !107
  call void @_ZN4mojo8internal31AssociatedInterfacePtrStateBase10PassHandleEv(%"class.mojo::ScopedInterfaceEndpointHandle"* nonnull sret %3, %"class.mojo::internal::AssociatedInterfacePtrStateBase"* nonnull %24) #16, !noalias !107
  %35 = getelementptr inbounds %"class.mojo::internal::AssociatedInterfacePtrState.2216", %"class.mojo::internal::AssociatedInterfacePtrState.2216"* %5, i64 0, i32 0, i32 1
  %36 = load i32, i32* %35, align 8, !noalias !107
  %37 = getelementptr inbounds %"class.mojo::AssociatedInterfacePtrInfo", %"class.mojo::AssociatedInterfacePtrInfo"* %6, i64 0, i32 0
  call void @_ZN4mojo29ScopedInterfaceEndpointHandleC1EOS0_(%"class.mojo::ScopedInterfaceEndpointHandle"* nonnull %37, %"class.mojo::ScopedInterfaceEndpointHandle"* nonnull dereferenceable(8) %3) #16
  store i32 %36, i32* %33, align 8, !alias.scope !107
  call void @_ZN4mojo29ScopedInterfaceEndpointHandleD1Ev(%"class.mojo::ScopedInterfaceEndpointHandle"* nonnull %3) #16
  %38 = getelementptr inbounds %"class.mojo::internal::AssociatedInterfacePtrState.2216", %"class.mojo::internal::AssociatedInterfacePtrState.2216"* %5, i64 0, i32 1, i32 0, i32 0, i32 0
  %39 = load %"class.blink::mojom::blink::CacheStorageCacheProxy"*, %"class.blink::mojom::blink::CacheStorageCacheProxy"** %38, align 8, !noalias !107
  store %"class.blink::mojom::blink::CacheStorageCacheProxy"* null, %"class.blink::mojom::blink::CacheStorageCacheProxy"** %38, align 8, !noalias !107
  %40 = icmp eq %"class.blink::mojom::blink::CacheStorageCacheProxy"* %39, null
  br i1 %40, label %46, label %41

41:                                               ; preds = %22
  %42 = bitcast %"class.blink::mojom::blink::CacheStorageCacheProxy"* %39 to void (%"class.blink::mojom::blink::CacheStorageCacheProxy"*)***
  %43 = load void (%"class.blink::mojom::blink::CacheStorageCacheProxy"*)**, void (%"class.blink::mojom::blink::CacheStorageCacheProxy"*)*** %42, align 8
  %44 = getelementptr inbounds void (%"class.blink::mojom::blink::CacheStorageCacheProxy"*)*, void (%"class.blink::mojom::blink::CacheStorageCacheProxy"*)** %43, i64 1
  %45 = load void (%"class.blink::mojom::blink::CacheStorageCacheProxy"*)*, void (%"class.blink::mojom::blink::CacheStorageCacheProxy"*)** %44, align 8
  call void %45(%"class.blink::mojom::blink::CacheStorageCacheProxy"* nonnull %39) #16
  br label %46

46:                                               ; preds = %22, %41
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %34)
  call void @_ZN4mojo29ScopedInterfaceEndpointHandleC1EOS0_(%"class.mojo::ScopedInterfaceEndpointHandle"* nonnull %7, %"class.mojo::ScopedInterfaceEndpointHandle"* nonnull dereferenceable(8) %37) #16
  %47 = load i32, i32* %33, align 8
  %48 = getelementptr inbounds %"class.mojo::PendingAssociatedRemote", %"class.mojo::PendingAssociatedRemote"* %0, i64 0, i32 0
  call void @_ZN4mojo29ScopedInterfaceEndpointHandleC1EOS0_(%"class.mojo::ScopedInterfaceEndpointHandle"* %48, %"class.mojo::ScopedInterfaceEndpointHandle"* nonnull dereferenceable(8) %7) #16
  %49 = getelementptr inbounds %"class.mojo::PendingAssociatedRemote", %"class.mojo::PendingAssociatedRemote"* %0, i64 0, i32 1
  store i32 %47, i32* %49, align 8
  call void @_ZN4mojo29ScopedInterfaceEndpointHandleD1Ev(%"class.mojo::ScopedInterfaceEndpointHandle"* nonnull %7) #16
  call void @_ZN4mojo29ScopedInterfaceEndpointHandleD1Ev(%"class.mojo::ScopedInterfaceEndpointHandle"* nonnull %37) #16
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %32) #16
  %50 = load %"class.blink::mojom::blink::CacheStorageCacheProxy"*, %"class.blink::mojom::blink::CacheStorageCacheProxy"** %38, align 8
  store %"class.blink::mojom::blink::CacheStorageCacheProxy"* null, %"class.blink::mojom::blink::CacheStorageCacheProxy"** %38, align 8
  %51 = icmp eq %"class.blink::mojom::blink::CacheStorageCacheProxy"* %50, null
  br i1 %51, label %57, label %52

52:                                               ; preds = %46
  %53 = bitcast %"class.blink::mojom::blink::CacheStorageCacheProxy"* %50 to void (%"class.blink::mojom::blink::CacheStorageCacheProxy"*)***
  %54 = load void (%"class.blink::mojom::blink::CacheStorageCacheProxy"*)**, void (%"class.blink::mojom::blink::CacheStorageCacheProxy"*)*** %53, align 8
  %55 = getelementptr inbounds void (%"class.blink::mojom::blink::CacheStorageCacheProxy"*)*, void (%"class.blink::mojom::blink::CacheStorageCacheProxy"*)** %54, i64 1
  %56 = load void (%"class.blink::mojom::blink::CacheStorageCacheProxy"*)*, void (%"class.blink::mojom::blink::CacheStorageCacheProxy"*)** %55, align 8
  call void %56(%"class.blink::mojom::blink::CacheStorageCacheProxy"* nonnull %50) #16
  br label %57

57:                                               ; preds = %46, %52
  call void @_ZN4mojo8internal31AssociatedInterfacePtrStateBaseD2Ev(%"class.mojo::internal::AssociatedInterfacePtrStateBase"* nonnull %24) #16
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %23) #16
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc void @_ZN13scoped_refptrIN5blink12_GLOBAL__N_120ResponsesAccumulatorEED2Ev(%class.scoped_refptr.2273* nocapture readonly) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %class.scoped_refptr.2273, %class.scoped_refptr.2273* %0, i64 0, i32 0
  %3 = load %"class.blink::(anonymous namespace)::ResponsesAccumulator"*, %"class.blink::(anonymous namespace)::ResponsesAccumulator"** %2, align 8
  %4 = icmp eq %"class.blink::(anonymous namespace)::ResponsesAccumulator"* %3, null
  br i1 %4, label %88, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.blink::(anonymous namespace)::ResponsesAccumulator", %"class.blink::(anonymous namespace)::ResponsesAccumulator"* %3, i64 0, i32 0, i32 0
  %7 = getelementptr inbounds %"class.blink::(anonymous namespace)::ResponsesAccumulator", %"class.blink::(anonymous namespace)::ResponsesAccumulator"* %3, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %7) #16
  %8 = getelementptr inbounds %"class.blink::(anonymous namespace)::ResponsesAccumulator", %"class.blink::(anonymous namespace)::ResponsesAccumulator"* %3, i64 0, i32 0, i32 0, i32 0, i32 0
  %9 = load i32, i32* %8, align 4
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %11, label %88

11:                                               ; preds = %5
  %12 = getelementptr inbounds %"class.base::RefCounted.2275", %"class.base::RefCounted.2275"* %6, i64 20
  %13 = bitcast %"class.base::RefCounted.2275"* %12 to %"class.blink::protocol::CacheStorage::Backend::RequestEntriesCallback"**
  %14 = load %"class.blink::protocol::CacheStorage::Backend::RequestEntriesCallback"*, %"class.blink::protocol::CacheStorage::Backend::RequestEntriesCallback"** %13, align 8
  store %"class.blink::protocol::CacheStorage::Backend::RequestEntriesCallback"* null, %"class.blink::protocol::CacheStorage::Backend::RequestEntriesCallback"** %13, align 8
  %15 = icmp eq %"class.blink::protocol::CacheStorage::Backend::RequestEntriesCallback"* %14, null
  br i1 %15, label %21, label %16

16:                                               ; preds = %11
  %17 = bitcast %"class.blink::protocol::CacheStorage::Backend::RequestEntriesCallback"* %14 to void (%"class.blink::protocol::CacheStorage::Backend::RequestEntriesCallback"*)***
  %18 = load void (%"class.blink::protocol::CacheStorage::Backend::RequestEntriesCallback"*)**, void (%"class.blink::protocol::CacheStorage::Backend::RequestEntriesCallback"*)*** %17, align 8
  %19 = getelementptr inbounds void (%"class.blink::protocol::CacheStorage::Backend::RequestEntriesCallback"*)*, void (%"class.blink::protocol::CacheStorage::Backend::RequestEntriesCallback"*)** %18, i64 4
  %20 = load void (%"class.blink::protocol::CacheStorage::Backend::RequestEntriesCallback"*)*, void (%"class.blink::protocol::CacheStorage::Backend::RequestEntriesCallback"*)** %19, align 8
  tail call void %20(%"class.blink::protocol::CacheStorage::Backend::RequestEntriesCallback"* nonnull %14) #16
  br label %21

21:                                               ; preds = %16, %11
  %22 = getelementptr inbounds %"class.base::RefCounted.2275", %"class.base::RefCounted.2275"* %6, i64 14
  %23 = getelementptr inbounds %"class.base::RefCounted.2275", %"class.base::RefCounted.2275"* %6, i64 18
  %24 = bitcast %"class.base::RefCounted.2275"* %23 to %"class.blink::mojom::blink::CacheStorageCacheProxy"**
  %25 = load %"class.blink::mojom::blink::CacheStorageCacheProxy"*, %"class.blink::mojom::blink::CacheStorageCacheProxy"** %24, align 8
  store %"class.blink::mojom::blink::CacheStorageCacheProxy"* null, %"class.blink::mojom::blink::CacheStorageCacheProxy"** %24, align 8
  %26 = icmp eq %"class.blink::mojom::blink::CacheStorageCacheProxy"* %25, null
  br i1 %26, label %32, label %27

27:                                               ; preds = %21
  %28 = bitcast %"class.blink::mojom::blink::CacheStorageCacheProxy"* %25 to void (%"class.blink::mojom::blink::CacheStorageCacheProxy"*)***
  %29 = load void (%"class.blink::mojom::blink::CacheStorageCacheProxy"*)**, void (%"class.blink::mojom::blink::CacheStorageCacheProxy"*)*** %28, align 8
  %30 = getelementptr inbounds void (%"class.blink::mojom::blink::CacheStorageCacheProxy"*)*, void (%"class.blink::mojom::blink::CacheStorageCacheProxy"*)** %29, i64 1
  %31 = load void (%"class.blink::mojom::blink::CacheStorageCacheProxy"*)*, void (%"class.blink::mojom::blink::CacheStorageCacheProxy"*)** %30, align 8
  tail call void %31(%"class.blink::mojom::blink::CacheStorageCacheProxy"* nonnull %25) #16
  br label %32

32:                                               ; preds = %27, %21
  %33 = bitcast %"class.base::RefCounted.2275"* %22 to %"class.mojo::internal::AssociatedInterfacePtrStateBase"*
  tail call void @_ZN4mojo8internal31AssociatedInterfacePtrStateBaseD2Ev(%"class.mojo::internal::AssociatedInterfacePtrStateBase"* %33) #16
  %34 = getelementptr inbounds %"class.base::RefCounted.2275", %"class.base::RefCounted.2275"* %6, i64 10
  %35 = bitcast %"class.base::RefCounted.2275"* %34 to %"struct.blink::(anonymous namespace)::RequestResponse"**
  %36 = load %"struct.blink::(anonymous namespace)::RequestResponse"*, %"struct.blink::(anonymous namespace)::RequestResponse"** %35, align 8
  %37 = icmp eq %"struct.blink::(anonymous namespace)::RequestResponse"* %36, null
  br i1 %37, label %50, label %38, !prof !2

38:                                               ; preds = %32
  %39 = bitcast %"struct.blink::(anonymous namespace)::RequestResponse"* %36 to i8*
  %40 = getelementptr inbounds %"class.base::RefCounted.2275", %"class.base::RefCounted.2275"* %6, i64 13, i32 0, i32 0
  %41 = load i32, i32* %40, align 4
  %42 = icmp eq i32 %41, 0
  br i1 %42, label %48, label %43, !prof !3

43:                                               ; preds = %38
  %44 = zext i32 %41 to i64
  %45 = getelementptr inbounds %"struct.blink::(anonymous namespace)::RequestResponse", %"struct.blink::(anonymous namespace)::RequestResponse"* %36, i64 %44
  tail call fastcc void @_ZN3WTF20VectorTypeOperationsIN5blink12_GLOBAL__N_115RequestResponseENS_18PartitionAllocatorEE8DestructEPS3_S6_(%"struct.blink::(anonymous namespace)::RequestResponse"* nonnull %36, %"struct.blink::(anonymous namespace)::RequestResponse"* %45) #16
  store i32 0, i32* %40, align 4
  %46 = bitcast %"class.base::RefCounted.2275"* %34 to i8**
  %47 = load i8*, i8** %46, align 8
  br label %48

48:                                               ; preds = %43, %38
  %49 = phi i8* [ %47, %43 ], [ %39, %38 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %49) #16
  store %"struct.blink::(anonymous namespace)::RequestResponse"* null, %"struct.blink::(anonymous namespace)::RequestResponse"** %35, align 8
  br label %50

50:                                               ; preds = %48, %32
  %51 = getelementptr inbounds %"class.base::RefCounted.2275", %"class.base::RefCounted.2275"* %6, i64 6
  %52 = bitcast %"class.base::RefCounted.2275"* %51 to %"class.WTF::StringImpl"**
  %53 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %52, align 8
  %54 = icmp eq %"class.WTF::StringImpl"* %53, null
  br i1 %54, label %68, label %55

55:                                               ; preds = %50
  %56 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %53, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %57 = load atomic i32, i32* %56 monotonic, align 4
  %58 = and i32 %57, 2
  %59 = icmp eq i32 %58, 0
  %60 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %53, i64 0, i32 0
  %61 = load i32, i32* %60, align 4
  br i1 %59, label %62, label %64

62:                                               ; preds = %55
  %63 = add i32 %61, -1
  store i32 %63, i32* %60, align 4
  br label %64

64:                                               ; preds = %62, %55
  %65 = phi i32 [ %63, %62 ], [ %61, %55 ]
  %66 = icmp eq i32 %65, 0
  br i1 %66, label %67, label %68

67:                                               ; preds = %64
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %53) #16
  br label %68

68:                                               ; preds = %67, %64, %50
  %69 = getelementptr inbounds %"class.base::RefCounted.2275", %"class.base::RefCounted.2275"* %6, i64 2
  %70 = bitcast %"class.base::RefCounted.2275"* %69 to %"class.WTF::StringImpl"**
  %71 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %70, align 8
  %72 = icmp eq %"class.WTF::StringImpl"* %71, null
  br i1 %72, label %86, label %73

73:                                               ; preds = %68
  %74 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %71, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %75 = load atomic i32, i32* %74 monotonic, align 4
  %76 = and i32 %75, 2
  %77 = icmp eq i32 %76, 0
  %78 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %71, i64 0, i32 0
  %79 = load i32, i32* %78, align 4
  br i1 %77, label %80, label %82

80:                                               ; preds = %73
  %81 = add i32 %79, -1
  store i32 %81, i32* %78, align 4
  br label %82

82:                                               ; preds = %80, %73
  %83 = phi i32 [ %81, %80 ], [ %79, %73 ]
  %84 = icmp eq i32 %83, 0
  br i1 %84, label %85, label %86

85:                                               ; preds = %82
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %71) #16
  br label %86

86:                                               ; preds = %85, %82, %68
  %87 = bitcast %"class.blink::(anonymous namespace)::ResponsesAccumulator"* %3 to i8*
  tail call void @free(i8* %87) #16
  br label %88

88:                                               ; preds = %5, %86, %1
  ret void
}

declare void @_ZN4mojo8internal31AssociatedInterfacePtrStateBase10PassHandleEv(%"class.mojo::ScopedInterfaceEndpointHandle"* sret, %"class.mojo::internal::AssociatedInterfacePtrStateBase"*) local_unnamed_addr #2

declare %"class.WTF::StringImpl"* @_ZNK5blink4KURL7GetPathEv(%"class.blink::KURL"*) local_unnamed_addr #2

declare void @_ZN5blink19ResourceRequestBodyC1Ev(%"class.blink::ResourceRequestBody"*) unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN5blink19ResourceRequestBodyD1Ev(%"class.blink::ResourceRequestBody"*) unnamed_addr #3

declare void @_ZN5blink5mojom5blink22CacheStorageCacheProxy5MatchEN4mojo9StructPtrINS1_15FetchAPIRequestEEENS3_16InlinedStructPtrINS1_17CacheQueryOptionsEEEblN4base12OnceCallbackIFvNS4_INS1_11MatchResultEEEEEE(%"class.blink::mojom::blink::CacheStorageCacheProxy"*, %"class.mojo::StructPtr.1985"*, %"class.mojo::InlinedStructPtr.2014"*, i1 zeroext, i64, %"class.base::OnceCallback.2018"*) unnamed_addr #2

declare i32 @_ZN3WTF10StringImpl16FindIgnoringCaseERKNS_10StringViewEj(%"class.WTF::StringImpl"*, %"class.WTF::StringView"* dereferenceable(24), i32) local_unnamed_addr #2

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN4mojo9StructPtrIN5blink5mojom5blink15FetchAPIRequestEEELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIS7_EEvOT_(%"class.WTF::Vector.2239"*, %"class.mojo::StructPtr.1985"* dereferenceable(8)) local_unnamed_addr #13 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::Vector.2239", %"class.WTF::Vector.2239"* %0, i64 0, i32 0, i32 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = add i32 %4, 1
  %6 = getelementptr inbounds %"class.WTF::Vector.2239", %"class.WTF::Vector.2239"* %0, i64 0, i32 0, i32 0, i32 0
  %7 = load %"class.mojo::StructPtr.1985"*, %"class.mojo::StructPtr.1985"** %6, align 8
  %8 = icmp ugt %"class.mojo::StructPtr.1985"* %7, %1
  br i1 %8, label %13, label %9

9:                                                ; preds = %2
  %10 = zext i32 %4 to i64
  %11 = getelementptr inbounds %"class.mojo::StructPtr.1985", %"class.mojo::StructPtr.1985"* %7, i64 %10
  %12 = icmp ugt %"class.mojo::StructPtr.1985"* %11, %1
  br i1 %12, label %37, label %13

13:                                               ; preds = %9, %2
  %14 = getelementptr inbounds %"class.WTF::Vector.2239", %"class.WTF::Vector.2239"* %0, i64 0, i32 0, i32 0, i32 1
  %15 = load i32, i32* %14, align 8
  %16 = lshr i32 %15, 2
  %17 = add i32 %15, 1
  %18 = add i32 %17, %16
  %19 = icmp ugt i32 %18, 4
  %20 = select i1 %19, i32 %18, i32 4
  %21 = icmp ugt i32 %20, %5
  %22 = select i1 %21, i32 %20, i32 %5
  %23 = icmp ult i32 %15, %22
  br i1 %23, label %24, label %68, !prof !2

24:                                               ; preds = %13
  %25 = icmp eq %"class.mojo::StructPtr.1985"* %7, null
  br i1 %25, label %26, label %35

26:                                               ; preds = %24
  %27 = zext i32 %22 to i64
  %28 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIN4mojo9StructPtrIN5blink5mojom5blink15FetchAPIRequestEEEEEmm(i64 %27) #16
  %29 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %28, i8* getelementptr inbounds ([101 x i8], [101 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN4mojo9StructPtrIN5blink5mojom5blink15FetchAPIRequestEEEEEPKcv, i64 0, i64 0)) #16
  %30 = ptrtoint i8* %29 to i64
  %31 = bitcast %"class.WTF::Vector.2239"* %0 to i64*
  store atomic i64 %30, i64* %31 monotonic, align 8
  %32 = lshr i64 %28, 3
  %33 = trunc i64 %32 to i32
  store i32 %33, i32* %14, align 8
  %34 = bitcast i8* %29 to %"class.mojo::StructPtr.1985"*
  br label %68

35:                                               ; preds = %24
  tail call void @_ZN3WTF6VectorIN4mojo9StructPtrIN5blink5mojom5blink15FetchAPIRequestEEELj0ENS_18PartitionAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector.2239"* %0, i32 %22) #16
  %36 = load %"class.mojo::StructPtr.1985"*, %"class.mojo::StructPtr.1985"** %6, align 8
  br label %68

37:                                               ; preds = %9
  %38 = ptrtoint %"class.mojo::StructPtr.1985"* %1 to i64
  %39 = ptrtoint %"class.mojo::StructPtr.1985"* %7 to i64
  %40 = sub i64 %38, %39
  %41 = ashr exact i64 %40, 3
  %42 = getelementptr inbounds %"class.WTF::Vector.2239", %"class.WTF::Vector.2239"* %0, i64 0, i32 0, i32 0, i32 1
  %43 = load i32, i32* %42, align 8
  %44 = lshr i32 %43, 2
  %45 = add i32 %43, 1
  %46 = add i32 %45, %44
  %47 = icmp ugt i32 %46, 4
  %48 = select i1 %47, i32 %46, i32 4
  %49 = icmp ugt i32 %48, %5
  %50 = select i1 %49, i32 %48, i32 %5
  %51 = icmp ult i32 %43, %50
  br i1 %51, label %52, label %65, !prof !2

52:                                               ; preds = %37
  %53 = icmp eq %"class.mojo::StructPtr.1985"* %7, null
  br i1 %53, label %54, label %63

54:                                               ; preds = %52
  %55 = zext i32 %50 to i64
  %56 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIN4mojo9StructPtrIN5blink5mojom5blink15FetchAPIRequestEEEEEmm(i64 %55) #16
  %57 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %56, i8* getelementptr inbounds ([101 x i8], [101 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN4mojo9StructPtrIN5blink5mojom5blink15FetchAPIRequestEEEEEPKcv, i64 0, i64 0)) #16
  %58 = ptrtoint i8* %57 to i64
  %59 = bitcast %"class.WTF::Vector.2239"* %0 to i64*
  store atomic i64 %58, i64* %59 monotonic, align 8
  %60 = lshr i64 %56, 3
  %61 = trunc i64 %60 to i32
  store i32 %61, i32* %42, align 8
  %62 = bitcast i8* %57 to %"class.mojo::StructPtr.1985"*
  br label %65

63:                                               ; preds = %52
  tail call void @_ZN3WTF6VectorIN4mojo9StructPtrIN5blink5mojom5blink15FetchAPIRequestEEELj0ENS_18PartitionAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector.2239"* %0, i32 %50) #16
  %64 = load %"class.mojo::StructPtr.1985"*, %"class.mojo::StructPtr.1985"** %6, align 8
  br label %65

65:                                               ; preds = %37, %54, %63
  %66 = phi %"class.mojo::StructPtr.1985"* [ %7, %37 ], [ %62, %54 ], [ %64, %63 ]
  %67 = getelementptr inbounds %"class.mojo::StructPtr.1985", %"class.mojo::StructPtr.1985"* %66, i64 %41
  br label %68

68:                                               ; preds = %35, %26, %13, %65
  %69 = phi %"class.mojo::StructPtr.1985"* [ %66, %65 ], [ %7, %13 ], [ %34, %26 ], [ %36, %35 ]
  %70 = phi %"class.mojo::StructPtr.1985"* [ %67, %65 ], [ %1, %13 ], [ %1, %26 ], [ %1, %35 ]
  %71 = load i32, i32* %3, align 4
  %72 = zext i32 %71 to i64
  %73 = getelementptr inbounds %"class.mojo::StructPtr.1985", %"class.mojo::StructPtr.1985"* %69, i64 %72
  %74 = bitcast %"class.mojo::StructPtr.1985"* %73 to i64*
  %75 = getelementptr inbounds %"class.mojo::StructPtr.1985", %"class.mojo::StructPtr.1985"* %73, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.blink::mojom::blink::FetchAPIRequest"* null, %"class.blink::mojom::blink::FetchAPIRequest"** %75, align 8
  %76 = bitcast %"class.mojo::StructPtr.1985"* %70 to i64*
  %77 = load i64, i64* %76, align 8
  store i64 %77, i64* %74, align 8
  store i64 0, i64* %76, align 8
  %78 = load i32, i32* %3, align 4
  %79 = add i32 %78, 1
  store i32 %79, i32* %3, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN4mojo9StructPtrIN5blink5mojom5blink15FetchAPIRequestEEELj0ENS_18PartitionAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector.2239"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq i32 %1, 0
  br i1 %3, label %4, label %72

4:                                                ; preds = %2
  %5 = getelementptr inbounds %"class.WTF::Vector.2239", %"class.WTF::Vector.2239"* %0, i64 0, i32 0, i32 0, i32 0
  %6 = load %"class.mojo::StructPtr.1985"*, %"class.mojo::StructPtr.1985"** %5, align 8
  %7 = bitcast %"class.mojo::StructPtr.1985"* %6 to i8*
  %8 = getelementptr inbounds %"class.WTF::Vector.2239", %"class.WTF::Vector.2239"* %0, i64 0, i32 0, i32 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = zext i32 %9 to i64
  %11 = getelementptr inbounds %"class.mojo::StructPtr.1985", %"class.mojo::StructPtr.1985"* %6, i64 %10
  %12 = bitcast %"class.WTF::Vector.2239"* %0 to i64*
  store atomic i64 0, i64* %12 monotonic, align 8
  %13 = getelementptr inbounds %"class.WTF::Vector.2239", %"class.WTF::Vector.2239"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 0, i32* %13, align 8
  %14 = icmp eq i32 %9, 0
  br i1 %14, label %71, label %15

15:                                               ; preds = %4
  %16 = shl nuw nsw i64 %10, 3
  %17 = add nsw i64 %16, -8
  %18 = lshr exact i64 %17, 3
  %19 = add nuw nsw i64 %18, 1
  %20 = and i64 %19, 3
  %21 = icmp eq i64 %20, 0
  br i1 %21, label %35, label %22

22:                                               ; preds = %15, %22
  %23 = phi %"class.mojo::StructPtr.1985"* [ %32, %22 ], [ %6, %15 ]
  %24 = phi %"class.mojo::StructPtr.1985"* [ %31, %22 ], [ null, %15 ]
  %25 = phi i64 [ %33, %22 ], [ %20, %15 ]
  %26 = bitcast %"class.mojo::StructPtr.1985"* %24 to i64*
  %27 = getelementptr inbounds %"class.mojo::StructPtr.1985", %"class.mojo::StructPtr.1985"* %24, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.blink::mojom::blink::FetchAPIRequest"* null, %"class.blink::mojom::blink::FetchAPIRequest"** %27, align 8
  %28 = bitcast %"class.mojo::StructPtr.1985"* %23 to i64*
  %29 = load i64, i64* %28, align 8
  store i64 %29, i64* %26, align 8
  %30 = getelementptr inbounds %"class.mojo::StructPtr.1985", %"class.mojo::StructPtr.1985"* %23, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.blink::mojom::blink::FetchAPIRequest"* null, %"class.blink::mojom::blink::FetchAPIRequest"** %30, align 8
  %31 = getelementptr inbounds %"class.mojo::StructPtr.1985", %"class.mojo::StructPtr.1985"* %24, i64 1
  %32 = getelementptr inbounds %"class.mojo::StructPtr.1985", %"class.mojo::StructPtr.1985"* %23, i64 1
  %33 = add i64 %25, -1
  %34 = icmp eq i64 %33, 0
  br i1 %34, label %35, label %22, !llvm.loop !110

35:                                               ; preds = %22, %15
  %36 = phi %"class.mojo::StructPtr.1985"* [ %6, %15 ], [ %32, %22 ]
  %37 = phi %"class.mojo::StructPtr.1985"* [ null, %15 ], [ %31, %22 ]
  %38 = icmp ult i64 %17, 24
  br i1 %38, label %71, label %39

39:                                               ; preds = %35, %39
  %40 = phi %"class.mojo::StructPtr.1985"* [ %69, %39 ], [ %36, %35 ]
  %41 = phi %"class.mojo::StructPtr.1985"* [ %68, %39 ], [ %37, %35 ]
  %42 = bitcast %"class.mojo::StructPtr.1985"* %41 to i64*
  %43 = getelementptr inbounds %"class.mojo::StructPtr.1985", %"class.mojo::StructPtr.1985"* %41, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.blink::mojom::blink::FetchAPIRequest"* null, %"class.blink::mojom::blink::FetchAPIRequest"** %43, align 8
  %44 = bitcast %"class.mojo::StructPtr.1985"* %40 to i64*
  %45 = load i64, i64* %44, align 8
  store i64 %45, i64* %42, align 8
  %46 = getelementptr inbounds %"class.mojo::StructPtr.1985", %"class.mojo::StructPtr.1985"* %40, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.blink::mojom::blink::FetchAPIRequest"* null, %"class.blink::mojom::blink::FetchAPIRequest"** %46, align 8
  %47 = getelementptr inbounds %"class.mojo::StructPtr.1985", %"class.mojo::StructPtr.1985"* %41, i64 1
  %48 = getelementptr inbounds %"class.mojo::StructPtr.1985", %"class.mojo::StructPtr.1985"* %40, i64 1
  %49 = bitcast %"class.mojo::StructPtr.1985"* %47 to i64*
  %50 = getelementptr inbounds %"class.mojo::StructPtr.1985", %"class.mojo::StructPtr.1985"* %47, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.blink::mojom::blink::FetchAPIRequest"* null, %"class.blink::mojom::blink::FetchAPIRequest"** %50, align 8
  %51 = bitcast %"class.mojo::StructPtr.1985"* %48 to i64*
  %52 = load i64, i64* %51, align 8
  store i64 %52, i64* %49, align 8
  %53 = getelementptr inbounds %"class.mojo::StructPtr.1985", %"class.mojo::StructPtr.1985"* %48, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.blink::mojom::blink::FetchAPIRequest"* null, %"class.blink::mojom::blink::FetchAPIRequest"** %53, align 8
  %54 = getelementptr inbounds %"class.mojo::StructPtr.1985", %"class.mojo::StructPtr.1985"* %41, i64 2
  %55 = getelementptr inbounds %"class.mojo::StructPtr.1985", %"class.mojo::StructPtr.1985"* %40, i64 2
  %56 = bitcast %"class.mojo::StructPtr.1985"* %54 to i64*
  %57 = getelementptr inbounds %"class.mojo::StructPtr.1985", %"class.mojo::StructPtr.1985"* %54, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.blink::mojom::blink::FetchAPIRequest"* null, %"class.blink::mojom::blink::FetchAPIRequest"** %57, align 8
  %58 = bitcast %"class.mojo::StructPtr.1985"* %55 to i64*
  %59 = load i64, i64* %58, align 8
  store i64 %59, i64* %56, align 8
  %60 = getelementptr inbounds %"class.mojo::StructPtr.1985", %"class.mojo::StructPtr.1985"* %55, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.blink::mojom::blink::FetchAPIRequest"* null, %"class.blink::mojom::blink::FetchAPIRequest"** %60, align 8
  %61 = getelementptr inbounds %"class.mojo::StructPtr.1985", %"class.mojo::StructPtr.1985"* %41, i64 3
  %62 = getelementptr inbounds %"class.mojo::StructPtr.1985", %"class.mojo::StructPtr.1985"* %40, i64 3
  %63 = bitcast %"class.mojo::StructPtr.1985"* %61 to i64*
  %64 = getelementptr inbounds %"class.mojo::StructPtr.1985", %"class.mojo::StructPtr.1985"* %61, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.blink::mojom::blink::FetchAPIRequest"* null, %"class.blink::mojom::blink::FetchAPIRequest"** %64, align 8
  %65 = bitcast %"class.mojo::StructPtr.1985"* %62 to i64*
  %66 = load i64, i64* %65, align 8
  store i64 %66, i64* %63, align 8
  %67 = getelementptr inbounds %"class.mojo::StructPtr.1985", %"class.mojo::StructPtr.1985"* %62, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.blink::mojom::blink::FetchAPIRequest"* null, %"class.blink::mojom::blink::FetchAPIRequest"** %67, align 8
  %68 = getelementptr inbounds %"class.mojo::StructPtr.1985", %"class.mojo::StructPtr.1985"* %41, i64 4
  %69 = getelementptr inbounds %"class.mojo::StructPtr.1985", %"class.mojo::StructPtr.1985"* %40, i64 4
  %70 = icmp eq %"class.mojo::StructPtr.1985"* %69, %11
  br i1 %70, label %71, label %39

71:                                               ; preds = %35, %39, %4
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %7) #16
  br label %152

72:                                               ; preds = %2
  %73 = zext i32 %1 to i64
  %74 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIN4mojo9StructPtrIN5blink5mojom5blink15FetchAPIRequestEEEEEmm(i64 %73) #16
  %75 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %74, i8* getelementptr inbounds ([101 x i8], [101 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN4mojo9StructPtrIN5blink5mojom5blink15FetchAPIRequestEEEEEPKcv, i64 0, i64 0)) #16
  %76 = lshr i64 %74, 3
  %77 = ptrtoint i8* %75 to i64
  %78 = getelementptr inbounds %"class.WTF::Vector.2239", %"class.WTF::Vector.2239"* %0, i64 0, i32 0, i32 0, i32 0
  %79 = load %"class.mojo::StructPtr.1985"*, %"class.mojo::StructPtr.1985"** %78, align 8
  %80 = getelementptr inbounds %"class.WTF::Vector.2239", %"class.WTF::Vector.2239"* %0, i64 0, i32 0, i32 0, i32 2
  %81 = load i32, i32* %80, align 4
  %82 = zext i32 %81 to i64
  %83 = getelementptr inbounds %"class.mojo::StructPtr.1985", %"class.mojo::StructPtr.1985"* %79, i64 %82
  %84 = icmp eq i32 %81, 0
  br i1 %84, label %85, label %87

85:                                               ; preds = %72
  %86 = bitcast %"class.mojo::StructPtr.1985"* %79 to i8*
  br label %147

87:                                               ; preds = %72
  %88 = bitcast i8* %75 to %"class.mojo::StructPtr.1985"*
  %89 = shl nuw nsw i64 %82, 3
  %90 = add nsw i64 %89, -8
  %91 = lshr exact i64 %90, 3
  %92 = add nuw nsw i64 %91, 1
  %93 = and i64 %92, 3
  %94 = icmp eq i64 %93, 0
  br i1 %94, label %108, label %95

95:                                               ; preds = %87, %95
  %96 = phi %"class.mojo::StructPtr.1985"* [ %105, %95 ], [ %79, %87 ]
  %97 = phi %"class.mojo::StructPtr.1985"* [ %104, %95 ], [ %88, %87 ]
  %98 = phi i64 [ %106, %95 ], [ %93, %87 ]
  %99 = bitcast %"class.mojo::StructPtr.1985"* %97 to i64*
  %100 = getelementptr inbounds %"class.mojo::StructPtr.1985", %"class.mojo::StructPtr.1985"* %97, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.blink::mojom::blink::FetchAPIRequest"* null, %"class.blink::mojom::blink::FetchAPIRequest"** %100, align 8
  %101 = bitcast %"class.mojo::StructPtr.1985"* %96 to i64*
  %102 = load i64, i64* %101, align 8
  store i64 %102, i64* %99, align 8
  %103 = getelementptr inbounds %"class.mojo::StructPtr.1985", %"class.mojo::StructPtr.1985"* %96, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.blink::mojom::blink::FetchAPIRequest"* null, %"class.blink::mojom::blink::FetchAPIRequest"** %103, align 8
  %104 = getelementptr inbounds %"class.mojo::StructPtr.1985", %"class.mojo::StructPtr.1985"* %97, i64 1
  %105 = getelementptr inbounds %"class.mojo::StructPtr.1985", %"class.mojo::StructPtr.1985"* %96, i64 1
  %106 = add i64 %98, -1
  %107 = icmp eq i64 %106, 0
  br i1 %107, label %108, label %95, !llvm.loop !111

108:                                              ; preds = %95, %87
  %109 = phi %"class.mojo::StructPtr.1985"* [ %79, %87 ], [ %105, %95 ]
  %110 = phi %"class.mojo::StructPtr.1985"* [ %88, %87 ], [ %104, %95 ]
  %111 = icmp ult i64 %90, 24
  br i1 %111, label %144, label %112

112:                                              ; preds = %108, %112
  %113 = phi %"class.mojo::StructPtr.1985"* [ %142, %112 ], [ %109, %108 ]
  %114 = phi %"class.mojo::StructPtr.1985"* [ %141, %112 ], [ %110, %108 ]
  %115 = bitcast %"class.mojo::StructPtr.1985"* %114 to i64*
  %116 = getelementptr inbounds %"class.mojo::StructPtr.1985", %"class.mojo::StructPtr.1985"* %114, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.blink::mojom::blink::FetchAPIRequest"* null, %"class.blink::mojom::blink::FetchAPIRequest"** %116, align 8
  %117 = bitcast %"class.mojo::StructPtr.1985"* %113 to i64*
  %118 = load i64, i64* %117, align 8
  store i64 %118, i64* %115, align 8
  %119 = getelementptr inbounds %"class.mojo::StructPtr.1985", %"class.mojo::StructPtr.1985"* %113, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.blink::mojom::blink::FetchAPIRequest"* null, %"class.blink::mojom::blink::FetchAPIRequest"** %119, align 8
  %120 = getelementptr inbounds %"class.mojo::StructPtr.1985", %"class.mojo::StructPtr.1985"* %114, i64 1
  %121 = getelementptr inbounds %"class.mojo::StructPtr.1985", %"class.mojo::StructPtr.1985"* %113, i64 1
  %122 = bitcast %"class.mojo::StructPtr.1985"* %120 to i64*
  %123 = getelementptr inbounds %"class.mojo::StructPtr.1985", %"class.mojo::StructPtr.1985"* %120, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.blink::mojom::blink::FetchAPIRequest"* null, %"class.blink::mojom::blink::FetchAPIRequest"** %123, align 8
  %124 = bitcast %"class.mojo::StructPtr.1985"* %121 to i64*
  %125 = load i64, i64* %124, align 8
  store i64 %125, i64* %122, align 8
  %126 = getelementptr inbounds %"class.mojo::StructPtr.1985", %"class.mojo::StructPtr.1985"* %121, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.blink::mojom::blink::FetchAPIRequest"* null, %"class.blink::mojom::blink::FetchAPIRequest"** %126, align 8
  %127 = getelementptr inbounds %"class.mojo::StructPtr.1985", %"class.mojo::StructPtr.1985"* %114, i64 2
  %128 = getelementptr inbounds %"class.mojo::StructPtr.1985", %"class.mojo::StructPtr.1985"* %113, i64 2
  %129 = bitcast %"class.mojo::StructPtr.1985"* %127 to i64*
  %130 = getelementptr inbounds %"class.mojo::StructPtr.1985", %"class.mojo::StructPtr.1985"* %127, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.blink::mojom::blink::FetchAPIRequest"* null, %"class.blink::mojom::blink::FetchAPIRequest"** %130, align 8
  %131 = bitcast %"class.mojo::StructPtr.1985"* %128 to i64*
  %132 = load i64, i64* %131, align 8
  store i64 %132, i64* %129, align 8
  %133 = getelementptr inbounds %"class.mojo::StructPtr.1985", %"class.mojo::StructPtr.1985"* %128, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.blink::mojom::blink::FetchAPIRequest"* null, %"class.blink::mojom::blink::FetchAPIRequest"** %133, align 8
  %134 = getelementptr inbounds %"class.mojo::StructPtr.1985", %"class.mojo::StructPtr.1985"* %114, i64 3
  %135 = getelementptr inbounds %"class.mojo::StructPtr.1985", %"class.mojo::StructPtr.1985"* %113, i64 3
  %136 = bitcast %"class.mojo::StructPtr.1985"* %134 to i64*
  %137 = getelementptr inbounds %"class.mojo::StructPtr.1985", %"class.mojo::StructPtr.1985"* %134, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.blink::mojom::blink::FetchAPIRequest"* null, %"class.blink::mojom::blink::FetchAPIRequest"** %137, align 8
  %138 = bitcast %"class.mojo::StructPtr.1985"* %135 to i64*
  %139 = load i64, i64* %138, align 8
  store i64 %139, i64* %136, align 8
  %140 = getelementptr inbounds %"class.mojo::StructPtr.1985", %"class.mojo::StructPtr.1985"* %135, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.blink::mojom::blink::FetchAPIRequest"* null, %"class.blink::mojom::blink::FetchAPIRequest"** %140, align 8
  %141 = getelementptr inbounds %"class.mojo::StructPtr.1985", %"class.mojo::StructPtr.1985"* %114, i64 4
  %142 = getelementptr inbounds %"class.mojo::StructPtr.1985", %"class.mojo::StructPtr.1985"* %113, i64 4
  %143 = icmp eq %"class.mojo::StructPtr.1985"* %142, %83
  br i1 %143, label %144, label %112

144:                                              ; preds = %112, %108
  %145 = bitcast %"class.WTF::Vector.2239"* %0 to i8**
  %146 = load i8*, i8** %145, align 8
  br label %147

147:                                              ; preds = %85, %144
  %148 = phi i8* [ %146, %144 ], [ %86, %85 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %148) #16
  %149 = bitcast %"class.WTF::Vector.2239"* %0 to i64*
  store atomic i64 %77, i64* %149 monotonic, align 8
  %150 = trunc i64 %76 to i32
  %151 = getelementptr inbounds %"class.WTF::Vector.2239", %"class.WTF::Vector.2239"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 %150, i32* %151, align 8
  br label %152

152:                                              ; preds = %147, %71
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIN4mojo9StructPtrIN5blink5mojom5blink15FetchAPIRequestEEEEEmm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #16
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp ugt i64 %0, 268173312
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #16
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 268173312) #16
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.20, i64 0, i64 0), i8* %11, i8* %12) #16
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #16
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([78 x i8], [78 x i8]* @.str.21, i64 0, i64 0), i32 31, %"class.logging::CheckOpResult"* nonnull %3) #16
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #16
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #16
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #16
  %20 = shl i64 %0, 3
  %21 = call i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64 %20) #16
  ret i64 %21
}

declare void @_ZN5blink13HTTPHeaderMapC1Ev(%"class.blink::HTTPHeaderMap"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define internal fastcc void @_ZN3WTF20VectorTypeOperationsIN5blink12_GLOBAL__N_115RequestResponseENS_18PartitionAllocatorEE8DestructEPS3_S6_(%"struct.blink::(anonymous namespace)::RequestResponse"*, %"struct.blink::(anonymous namespace)::RequestResponse"* readnone) unnamed_addr #0 align 2 {
  %3 = icmp eq %"struct.blink::(anonymous namespace)::RequestResponse"* %0, %1
  br i1 %3, label %61, label %4

4:                                                ; preds = %2, %58
  %5 = phi %"struct.blink::(anonymous namespace)::RequestResponse"* [ %59, %58 ], [ %0, %2 ]
  %6 = getelementptr inbounds %"struct.blink::(anonymous namespace)::RequestResponse", %"struct.blink::(anonymous namespace)::RequestResponse"* %5, i64 0, i32 8
  tail call void @_ZN5blink13HTTPHeaderMapD1Ev(%"class.blink::HTTPHeaderMap"* %6) #16
  %7 = getelementptr inbounds %"struct.blink::(anonymous namespace)::RequestResponse", %"struct.blink::(anonymous namespace)::RequestResponse"* %5, i64 0, i32 4, i32 0, i32 0
  %8 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %7, align 8
  %9 = icmp eq %"class.WTF::StringImpl"* %8, null
  br i1 %9, label %23, label %10

10:                                               ; preds = %4
  %11 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %8, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %12 = load atomic i32, i32* %11 monotonic, align 4
  %13 = and i32 %12, 2
  %14 = icmp eq i32 %13, 0
  %15 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %8, i64 0, i32 0
  %16 = load i32, i32* %15, align 4
  br i1 %14, label %17, label %19

17:                                               ; preds = %10
  %18 = add i32 %16, -1
  store i32 %18, i32* %15, align 4
  br label %19

19:                                               ; preds = %17, %10
  %20 = phi i32 [ %18, %17 ], [ %16, %10 ]
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %22, label %23

22:                                               ; preds = %19
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %8) #16
  br label %23

23:                                               ; preds = %22, %19, %4
  %24 = getelementptr inbounds %"struct.blink::(anonymous namespace)::RequestResponse", %"struct.blink::(anonymous namespace)::RequestResponse"* %5, i64 0, i32 2
  tail call void @_ZN5blink13HTTPHeaderMapD1Ev(%"class.blink::HTTPHeaderMap"* %24) #16
  %25 = getelementptr inbounds %"struct.blink::(anonymous namespace)::RequestResponse", %"struct.blink::(anonymous namespace)::RequestResponse"* %5, i64 0, i32 1, i32 0, i32 0
  %26 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %25, align 8
  %27 = icmp eq %"class.WTF::StringImpl"* %26, null
  br i1 %27, label %41, label %28

28:                                               ; preds = %23
  %29 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %26, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %30 = load atomic i32, i32* %29 monotonic, align 4
  %31 = and i32 %30, 2
  %32 = icmp eq i32 %31, 0
  %33 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %26, i64 0, i32 0
  %34 = load i32, i32* %33, align 4
  br i1 %32, label %35, label %37

35:                                               ; preds = %28
  %36 = add i32 %34, -1
  store i32 %36, i32* %33, align 4
  br label %37

37:                                               ; preds = %35, %28
  %38 = phi i32 [ %36, %35 ], [ %34, %28 ]
  %39 = icmp eq i32 %38, 0
  br i1 %39, label %40, label %41

40:                                               ; preds = %37
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %26) #16
  br label %41

41:                                               ; preds = %40, %37, %23
  %42 = getelementptr inbounds %"struct.blink::(anonymous namespace)::RequestResponse", %"struct.blink::(anonymous namespace)::RequestResponse"* %5, i64 0, i32 0, i32 0, i32 0
  %43 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %42, align 8
  %44 = icmp eq %"class.WTF::StringImpl"* %43, null
  br i1 %44, label %58, label %45

45:                                               ; preds = %41
  %46 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %43, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %47 = load atomic i32, i32* %46 monotonic, align 4
  %48 = and i32 %47, 2
  %49 = icmp eq i32 %48, 0
  %50 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %43, i64 0, i32 0
  %51 = load i32, i32* %50, align 4
  br i1 %49, label %52, label %54

52:                                               ; preds = %45
  %53 = add i32 %51, -1
  store i32 %53, i32* %50, align 4
  br label %54

54:                                               ; preds = %52, %45
  %55 = phi i32 [ %53, %52 ], [ %51, %45 ]
  %56 = icmp eq i32 %55, 0
  br i1 %56, label %57, label %58

57:                                               ; preds = %54
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %43) #16
  br label %58

58:                                               ; preds = %57, %54, %41
  %59 = getelementptr inbounds %"struct.blink::(anonymous namespace)::RequestResponse", %"struct.blink::(anonymous namespace)::RequestResponse"* %5, i64 1
  %60 = icmp eq %"struct.blink::(anonymous namespace)::RequestResponse"* %59, %1
  br i1 %60, label %61, label %4

61:                                               ; preds = %58, %2
  ret void
}

; Function Attrs: nounwind
declare void @_ZN5blink13HTTPHeaderMapD1Ev(%"class.blink::HTTPHeaderMap"*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4mojo9StructPtrIN5blink5mojom5blink15FetchAPIRequestEEC2IJRN7network5mojom11RequestModeERbRNS8_18RequestDestinationERNS2_23RequestContextFrameTypeERNS1_4KURLERN3WTF6StringERNSI_7HashMapISJ_SJ_NSI_15CaseFoldingHashENSI_10HashTraitsISJ_EESO_NSI_18PartitionAllocatorEEEDnNS1_19ResourceRequestBodyENS0_INS3_8ReferrerEEERNS8_15CredentialsModeERNS2_14FetchCacheModeERNS8_12RedirectModeESK_RN3net15RequestPriorityERN4absl8optionalIN4base16UnguessableTokenEEESB_SB_SB_SK_EEENS16_10in_place_tEDpOT_(%"class.mojo::StructPtr.1985"*, i32* dereferenceable(4), i8* dereferenceable(1), i32* dereferenceable(4), i32* dereferenceable(4), %"class.blink::KURL"* dereferenceable(112), %"class.WTF::String"* dereferenceable(8), %"class.WTF::HashMap.1989"* dereferenceable(24), i8** dereferenceable(8), %"class.blink::ResourceRequestBody"* dereferenceable(16), %"class.mojo::StructPtr.2000"* dereferenceable(8), i32* dereferenceable(4), i32* dereferenceable(4), i32* dereferenceable(4), %"class.WTF::String"* dereferenceable(8), i32* dereferenceable(4), %"class.absl::optional.494"* dereferenceable(24), i8* dereferenceable(1), i8* dereferenceable(1), i8* dereferenceable(1), %"class.WTF::String"* dereferenceable(8)) unnamed_addr #0 comdat align 2 {
  %22 = alloca %"class.WTF::HashMap.1989", align 8
  %23 = alloca %class.scoped_refptr.1994, align 8
  %24 = alloca %"class.blink::ResourceRequestBody", align 8
  %25 = alloca %"class.mojo::StructPtr.2000", align 8
  %26 = tail call i8* @_Znwm(i64 264) #18
  %27 = bitcast i8* %26 to %"class.blink::mojom::blink::FetchAPIRequest"*
  %28 = load i32, i32* %1, align 4
  %29 = load i8, i8* %2, align 1, !range !20
  %30 = icmp ne i8 %29, 0
  %31 = load i32, i32* %3, align 4
  %32 = load i32, i32* %4, align 4
  %33 = getelementptr inbounds %"class.WTF::HashMap.1989", %"class.WTF::HashMap.1989"* %22, i64 0, i32 0
  %34 = getelementptr inbounds %"class.WTF::HashMap.1989", %"class.WTF::HashMap.1989"* %7, i64 0, i32 0, i32 2
  %35 = bitcast %"class.WTF::HashMap.1989"* %22 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %35, i8 0, i64 20, i1 false) #16
  %36 = load i32, i32* %34, align 4
  %37 = icmp eq i32 %36, 0
  br i1 %37, label %74, label %38

38:                                               ; preds = %21
  call void @_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_S1_EENS_24KeyValuePairKeyExtractorENS_15CaseFoldingHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EES8_EES8_NS_18PartitionAllocatorEE22ReserveCapacityForSizeEj(%"class.WTF::HashTable.1990"* nonnull %33, i32 %36) #16
  %39 = load i32, i32* %34, align 4
  %40 = icmp eq i32 %39, 0
  %41 = getelementptr inbounds %"class.WTF::HashMap.1989", %"class.WTF::HashMap.1989"* %7, i64 0, i32 0, i32 0
  %42 = load %"struct.WTF::KeyValuePair.1993"*, %"struct.WTF::KeyValuePair.1993"** %41, align 8
  %43 = getelementptr inbounds %"class.WTF::HashMap.1989", %"class.WTF::HashMap.1989"* %7, i64 0, i32 0, i32 1
  %44 = load i32, i32* %43, align 8
  %45 = zext i32 %44 to i64
  %46 = getelementptr inbounds %"struct.WTF::KeyValuePair.1993", %"struct.WTF::KeyValuePair.1993"* %42, i64 %45
  br i1 %40, label %74, label %47

47:                                               ; preds = %38
  %48 = icmp eq i32 %44, 0
  br i1 %48, label %56, label %49

49:                                               ; preds = %47, %53
  %50 = phi %"struct.WTF::KeyValuePair.1993"* [ %54, %53 ], [ %42, %47 ]
  %51 = bitcast %"struct.WTF::KeyValuePair.1993"* %50 to i64*
  %52 = load i64, i64* %51, align 8
  switch i64 %52, label %56 [
    i64 -1, label %53
    i64 0, label %53
  ]

53:                                               ; preds = %49, %49
  %54 = getelementptr inbounds %"struct.WTF::KeyValuePair.1993", %"struct.WTF::KeyValuePair.1993"* %50, i64 1
  %55 = icmp eq %"struct.WTF::KeyValuePair.1993"* %54, %46
  br i1 %55, label %74, label %49

56:                                               ; preds = %49, %47
  %57 = phi %"struct.WTF::KeyValuePair.1993"* [ %42, %47 ], [ %50, %49 ]
  %58 = icmp eq %"struct.WTF::KeyValuePair.1993"* %57, %46
  br i1 %58, label %74, label %59

59:                                               ; preds = %56, %72
  %60 = phi %"struct.WTF::KeyValuePair.1993"* [ %66, %72 ], [ %57, %56 ]
  %61 = getelementptr inbounds %"struct.WTF::KeyValuePair.1993", %"struct.WTF::KeyValuePair.1993"* %60, i64 0, i32 0
  %62 = call { %"struct.WTF::KeyValuePair.1993"*, i8 } @_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_S1_EENS_24KeyValuePairKeyExtractorENS_15CaseFoldingHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EES8_EES8_NS_18PartitionAllocatorEE6insertINS_22IdentityHashTranslatorIS5_S9_SA_EERKS1_RKS3_EENS_18HashTableAddResultISB_S3_EEOT0_OT1_(%"class.WTF::HashTable.1990"* nonnull %33, %"class.WTF::String"* dereferenceable(8) %61, %"struct.WTF::KeyValuePair.1993"* dereferenceable(16) %60) #16
  %63 = getelementptr inbounds %"struct.WTF::KeyValuePair.1993", %"struct.WTF::KeyValuePair.1993"* %60, i64 1
  %64 = icmp eq %"struct.WTF::KeyValuePair.1993"* %63, %46
  br i1 %64, label %74, label %65

65:                                               ; preds = %59, %69
  %66 = phi %"struct.WTF::KeyValuePair.1993"* [ %70, %69 ], [ %63, %59 ]
  %67 = bitcast %"struct.WTF::KeyValuePair.1993"* %66 to i64*
  %68 = load i64, i64* %67, align 8
  switch i64 %68, label %72 [
    i64 -1, label %69
    i64 0, label %69
  ]

69:                                               ; preds = %65, %65
  %70 = getelementptr inbounds %"struct.WTF::KeyValuePair.1993", %"struct.WTF::KeyValuePair.1993"* %66, i64 1
  %71 = icmp eq %"struct.WTF::KeyValuePair.1993"* %70, %46
  br i1 %71, label %74, label %65

72:                                               ; preds = %65
  %73 = icmp eq %"struct.WTF::KeyValuePair.1993"* %66, %46
  br i1 %73, label %74, label %59

74:                                               ; preds = %53, %59, %72, %69, %21, %38, %56
  %75 = bitcast %class.scoped_refptr.1994* %23 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %75) #16
  %76 = getelementptr inbounds %class.scoped_refptr.1994, %class.scoped_refptr.1994* %23, i64 0, i32 0
  store %"class.blink::BlobDataHandle"* null, %"class.blink::BlobDataHandle"** %76, align 8
  call void @_ZN5blink19ResourceRequestBodyC1EOS0_(%"class.blink::ResourceRequestBody"* nonnull %24, %"class.blink::ResourceRequestBody"* dereferenceable(16) %9) #16
  %77 = bitcast %"class.mojo::StructPtr.2000"* %25 to i64*
  %78 = getelementptr inbounds %"class.mojo::StructPtr.2000", %"class.mojo::StructPtr.2000"* %25, i64 0, i32 0, i32 0, i32 0, i32 0
  %79 = bitcast %"class.mojo::StructPtr.2000"* %10 to i64*
  %80 = load i64, i64* %79, align 8
  store i64 %80, i64* %77, align 8
  store i64 0, i64* %79, align 8
  %81 = load i32, i32* %11, align 4
  %82 = load i32, i32* %12, align 4
  %83 = load i32, i32* %13, align 4
  %84 = load i32, i32* %15, align 4
  %85 = load i8, i8* %17, align 1, !range !20
  %86 = icmp ne i8 %85, 0
  %87 = load i8, i8* %18, align 1, !range !20
  %88 = icmp ne i8 %87, 0
  %89 = load i8, i8* %19, align 1, !range !20
  %90 = icmp ne i8 %89, 0
  call void @_ZN5blink5mojom5blink15FetchAPIRequestC1EN7network5mojom11RequestModeEbNS4_18RequestDestinationENS0_23RequestContextFrameTypeERKNS_4KURLERKN3WTF6StringENSB_7HashMapISC_SC_NSB_15CaseFoldingHashENSB_10HashTraitsISC_EESI_NSB_18PartitionAllocatorEEERK13scoped_refptrINS_14BlobDataHandleEENS_19ResourceRequestBodyEN4mojo9StructPtrINS1_8ReferrerEEENS4_15CredentialsModeENS0_14FetchCacheModeENS4_12RedirectModeESE_N3net15RequestPriorityERKN4absl8optionalIN4base16UnguessableTokenEEEbbbSE_(%"class.blink::mojom::blink::FetchAPIRequest"* nonnull %27, i32 %28, i1 zeroext %30, i32 %31, i32 %32, %"class.blink::KURL"* dereferenceable(112) %5, %"class.WTF::String"* dereferenceable(8) %6, %"class.WTF::HashMap.1989"* nonnull %22, %class.scoped_refptr.1994* nonnull dereferenceable(8) %23, %"class.blink::ResourceRequestBody"* nonnull %24, %"class.mojo::StructPtr.2000"* nonnull %25, i32 %81, i32 %82, i32 %83, %"class.WTF::String"* dereferenceable(8) %14, i32 %84, %"class.absl::optional.494"* dereferenceable(24) %16, i1 zeroext %86, i1 zeroext %88, i1 zeroext %90, %"class.WTF::String"* dereferenceable(8) %20) #16
  %91 = ptrtoint i8* %26 to i64
  %92 = bitcast %"class.mojo::StructPtr.1985"* %0 to i64*
  store i64 %91, i64* %92, align 8
  %93 = load %"class.blink::mojom::blink::Referrer"*, %"class.blink::mojom::blink::Referrer"** %78, align 8
  store %"class.blink::mojom::blink::Referrer"* null, %"class.blink::mojom::blink::Referrer"** %78, align 8
  %94 = icmp eq %"class.blink::mojom::blink::Referrer"* %93, null
  br i1 %94, label %97, label %95

95:                                               ; preds = %74
  call void @_ZN5blink5mojom5blink8ReferrerD1Ev(%"class.blink::mojom::blink::Referrer"* nonnull %93) #16
  %96 = getelementptr inbounds %"class.blink::mojom::blink::Referrer", %"class.blink::mojom::blink::Referrer"* %93, i64 0, i32 0, i32 0
  call void @_ZdlPv(i8* %96) #18
  br label %97

97:                                               ; preds = %74, %95
  call void @_ZN5blink19ResourceRequestBodyD1Ev(%"class.blink::ResourceRequestBody"* nonnull %24) #16
  %98 = load %"class.blink::BlobDataHandle"*, %"class.blink::BlobDataHandle"** %76, align 8
  %99 = icmp eq %"class.blink::BlobDataHandle"* %98, null
  br i1 %99, label %106, label %100

100:                                              ; preds = %97
  %101 = getelementptr inbounds %"class.blink::BlobDataHandle", %"class.blink::BlobDataHandle"* %98, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %102 = atomicrmw sub i32* %101, i32 1 acq_rel
  %103 = icmp eq i32 %102, 1
  br i1 %103, label %104, label %106

104:                                              ; preds = %100
  call void @_ZN5blink14BlobDataHandleD1Ev(%"class.blink::BlobDataHandle"* nonnull %98) #16
  %105 = bitcast %"class.blink::BlobDataHandle"* %98 to i8*
  call void @free(i8* %105) #16
  br label %106

106:                                              ; preds = %97, %100, %104
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %75) #16
  %107 = getelementptr inbounds %"class.WTF::HashMap.1989", %"class.WTF::HashMap.1989"* %22, i64 0, i32 0, i32 0
  %108 = load %"struct.WTF::KeyValuePair.1993"*, %"struct.WTF::KeyValuePair.1993"** %107, align 8
  %109 = icmp eq %"struct.WTF::KeyValuePair.1993"* %108, null
  br i1 %109, label %113, label %110, !prof !2

110:                                              ; preds = %106
  %111 = getelementptr inbounds %"class.WTF::HashMap.1989", %"class.WTF::HashMap.1989"* %22, i64 0, i32 0, i32 1
  %112 = load i32, i32* %111, align 8
  call void @_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_S1_EENS_24KeyValuePairKeyExtractorENS_15CaseFoldingHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EES8_EES8_NS_18PartitionAllocatorEE29DeleteAllBucketsAndDeallocateEPS3_j(%"struct.WTF::KeyValuePair.1993"* nonnull %108, i32 %112) #16
  store %"struct.WTF::KeyValuePair.1993"* null, %"struct.WTF::KeyValuePair.1993"** %107, align 8
  br label %113

113:                                              ; preds = %106, %110
  ret void
}

declare void @_ZN5blink19ResourceRequestBodyC1EOS0_(%"class.blink::ResourceRequestBody"*, %"class.blink::ResourceRequestBody"* dereferenceable(16)) unnamed_addr #2

declare void @_ZN5blink5mojom5blink15FetchAPIRequestC1EN7network5mojom11RequestModeEbNS4_18RequestDestinationENS0_23RequestContextFrameTypeERKNS_4KURLERKN3WTF6StringENSB_7HashMapISC_SC_NSB_15CaseFoldingHashENSB_10HashTraitsISC_EESI_NSB_18PartitionAllocatorEEERK13scoped_refptrINS_14BlobDataHandleEENS_19ResourceRequestBodyEN4mojo9StructPtrINS1_8ReferrerEEENS4_15CredentialsModeENS0_14FetchCacheModeENS4_12RedirectModeESE_N3net15RequestPriorityERKN4absl8optionalIN4base16UnguessableTokenEEEbbbSE_(%"class.blink::mojom::blink::FetchAPIRequest"*, i32, i1 zeroext, i32, i32, %"class.blink::KURL"* dereferenceable(112), %"class.WTF::String"* dereferenceable(8), %"class.WTF::HashMap.1989"*, %class.scoped_refptr.1994* dereferenceable(8), %"class.blink::ResourceRequestBody"*, %"class.mojo::StructPtr.2000"*, i32, i32, i32, %"class.WTF::String"* dereferenceable(8), i32, %"class.absl::optional.494"* dereferenceable(24), i1 zeroext, i1 zeroext, i1 zeroext, %"class.WTF::String"* dereferenceable(8)) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_S1_EENS_24KeyValuePairKeyExtractorENS_15CaseFoldingHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EES8_EES8_NS_18PartitionAllocatorEE22ReserveCapacityForSizeEj(%"class.WTF::HashTable.1990"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckError", align 8
  %4 = icmp eq i32 %1, 0
  br i1 %4, label %16, label %5

5:                                                ; preds = %2, %5
  %6 = phi i32 [ %9, %5 ], [ %1, %2 ]
  %7 = phi i32 [ %8, %5 ], [ %1, %2 ]
  %8 = or i32 %7, %6
  %9 = lshr i32 %6, 1
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %11, label %5

11:                                               ; preds = %5
  %12 = shl i32 %8, 1
  %13 = add i32 %12, 2
  %14 = icmp ugt i32 %13, 8
  %15 = select i1 %14, i32 %13, i32 8
  br label %16

16:                                               ; preds = %11, %2
  %17 = phi i32 [ 8, %2 ], [ %15, %11 ]
  %18 = getelementptr inbounds %"class.WTF::HashTable.1990", %"class.WTF::HashTable.1990"* %0, i64 0, i32 1
  %19 = load i32, i32* %18, align 8
  %20 = icmp ugt i32 %17, %19
  br i1 %20, label %21, label %32

21:                                               ; preds = %16
  %22 = icmp slt i32 %17, 0
  br i1 %22, label %23, label %26

23:                                               ; preds = %21
  %24 = bitcast %"class.logging::CheckError"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %24) #16
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %3, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.14, i64 0, i64 0), i32 1094, i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.37, i64 0, i64 0)) #16
  %25 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %3) #16
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %3) #16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %24) #16
  br label %26

26:                                               ; preds = %21, %23
  %27 = zext i32 %17 to i64
  %28 = shl nuw nsw i64 %27, 4
  %29 = call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %28, i8* getelementptr inbounds ([91 x i8], [91 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_12KeyValuePairINS_6StringES2_EEEEPKcv, i64 0, i64 0)) #16
  call void @llvm.memset.p0i8.i64(i8* align 1 %29, i8 0, i64 %28, i1 false) #16
  %30 = bitcast i8* %29 to %"struct.WTF::KeyValuePair.1993"*
  %31 = call %"struct.WTF::KeyValuePair.1993"* @_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_S1_EENS_24KeyValuePairKeyExtractorENS_15CaseFoldingHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EES8_EES8_NS_18PartitionAllocatorEE8RehashToEPS3_jSC_(%"class.WTF::HashTable.1990"* %0, %"struct.WTF::KeyValuePair.1993"* %30, i32 %17, %"struct.WTF::KeyValuePair.1993"* null) #16
  br label %32

32:                                               ; preds = %26, %16
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.WTF::KeyValuePair.1993"* @_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_S1_EENS_24KeyValuePairKeyExtractorENS_15CaseFoldingHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EES8_EES8_NS_18PartitionAllocatorEE8RehashToEPS3_jSC_(%"class.WTF::HashTable.1990"*, %"struct.WTF::KeyValuePair.1993"*, i32, %"struct.WTF::KeyValuePair.1993"*) local_unnamed_addr #0 comdat align 2 {
  %5 = alloca %"class.WTF::HashTable.1990", align 8
  %6 = bitcast %"class.WTF::HashTable.1990"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %6) #16
  %7 = getelementptr inbounds %"class.WTF::HashTable.1990", %"class.WTF::HashTable.1990"* %5, i64 0, i32 0
  %8 = getelementptr inbounds %"class.WTF::HashTable.1990", %"class.WTF::HashTable.1990"* %5, i64 0, i32 1
  %9 = getelementptr inbounds %"class.WTF::HashTable.1990", %"class.WTF::HashTable.1990"* %5, i64 0, i32 2
  %10 = getelementptr inbounds %"class.WTF::HashTable.1990", %"class.WTF::HashTable.1990"* %5, i64 0, i32 3
  %11 = bitcast %"class.WTF::HashTable.1990"* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %11, i8 -86, i64 24, i1 false)
  store %"struct.WTF::KeyValuePair.1993"* %1, %"struct.WTF::KeyValuePair.1993"** %7, align 8
  store i32 %2, i32* %8, align 8
  store i32 0, i32* %9, align 4
  store i32 0, i32* %10, align 8
  %12 = getelementptr inbounds %"class.WTF::HashTable.1990", %"class.WTF::HashTable.1990"* %0, i64 0, i32 1
  %13 = load i32, i32* %12, align 8
  %14 = icmp eq i32 %13, 0
  %15 = getelementptr inbounds %"class.WTF::HashTable.1990", %"class.WTF::HashTable.1990"* %0, i64 0, i32 0
  br i1 %14, label %16, label %21

16:                                               ; preds = %4
  %17 = ptrtoint %"struct.WTF::KeyValuePair.1993"* %1 to i64
  %18 = bitcast %"class.WTF::HashTable.1990"* %0 to i64*
  %19 = load i64, i64* %18, align 8
  %20 = bitcast %"class.WTF::HashTable.1990"* %5 to i64*
  br label %28

21:                                               ; preds = %4
  %22 = load %"struct.WTF::KeyValuePair.1993"*, %"struct.WTF::KeyValuePair.1993"** %15, align 8
  %23 = ptrtoint %"struct.WTF::KeyValuePair.1993"* %22 to i64
  br label %42

24:                                               ; preds = %60
  %25 = bitcast %"class.WTF::HashTable.1990"* %5 to i64*
  %26 = load i64, i64* %25, align 8
  %27 = bitcast %"class.WTF::HashTable.1990"* %0 to i64*
  br label %28

28:                                               ; preds = %16, %24
  %29 = phi i64* [ %20, %16 ], [ %25, %24 ]
  %30 = phi i64* [ %18, %16 ], [ %27, %24 ]
  %31 = phi i64 [ %17, %16 ], [ %26, %24 ]
  %32 = phi i64 [ %19, %16 ], [ %61, %24 ]
  %33 = phi %"struct.WTF::KeyValuePair.1993"* [ null, %16 ], [ %64, %24 ]
  %34 = phi i32 [ 0, %16 ], [ %62, %24 ]
  store atomic i64 %31, i64* %30 monotonic, align 8
  store i32 %2, i32* %12, align 8
  store i64 %32, i64* %29, align 8
  store i32 %34, i32* %8, align 8
  %35 = icmp eq i64 %32, 0
  br i1 %35, label %38, label %36

36:                                               ; preds = %28
  %37 = inttoptr i64 %32 to %"struct.WTF::KeyValuePair.1993"*
  call void @_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_S1_EENS_24KeyValuePairKeyExtractorENS_15CaseFoldingHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EES8_EES8_NS_18PartitionAllocatorEE29DeleteAllBucketsAndDeallocateEPS3_j(%"struct.WTF::KeyValuePair.1993"* nonnull %37, i32 %34) #16
  store atomic i64 0, i64* %29 monotonic, align 8
  store i32 0, i32* %8, align 8
  store i32 0, i32* %9, align 4
  br label %38

38:                                               ; preds = %28, %36
  %39 = getelementptr inbounds %"class.WTF::HashTable.1990", %"class.WTF::HashTable.1990"* %0, i64 0, i32 3
  %40 = load i32, i32* %39, align 8
  %41 = and i32 %40, -2147483648
  store i32 %41, i32* %39, align 8
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %6) #16
  ret %"struct.WTF::KeyValuePair.1993"* %33

42:                                               ; preds = %21, %60
  %43 = phi i64 [ %61, %60 ], [ %23, %21 ]
  %44 = phi i32 [ %62, %60 ], [ %13, %21 ]
  %45 = phi %"struct.WTF::KeyValuePair.1993"* [ %63, %60 ], [ %22, %21 ]
  %46 = phi %"struct.WTF::KeyValuePair.1993"* [ %64, %60 ], [ null, %21 ]
  %47 = phi i32 [ %65, %60 ], [ 0, %21 ]
  %48 = zext i32 %47 to i64
  %49 = getelementptr inbounds %"struct.WTF::KeyValuePair.1993", %"struct.WTF::KeyValuePair.1993"* %45, i64 %48
  %50 = bitcast %"struct.WTF::KeyValuePair.1993"* %49 to i64*
  %51 = load i64, i64* %50, align 8
  switch i64 %51, label %52 [
    i64 -1, label %60
    i64 0, label %60
  ]

52:                                               ; preds = %42
  %53 = call %"struct.WTF::KeyValuePair.1993"* @_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_S1_EENS_24KeyValuePairKeyExtractorENS_15CaseFoldingHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EES8_EES8_NS_18PartitionAllocatorEE8ReinsertEOS3_(%"class.WTF::HashTable.1990"* nonnull %5, %"struct.WTF::KeyValuePair.1993"* dereferenceable(16) %49)
  %54 = load %"struct.WTF::KeyValuePair.1993"*, %"struct.WTF::KeyValuePair.1993"** %15, align 8
  %55 = getelementptr inbounds %"struct.WTF::KeyValuePair.1993", %"struct.WTF::KeyValuePair.1993"* %54, i64 %48
  %56 = icmp eq %"struct.WTF::KeyValuePair.1993"* %55, %3
  %57 = select i1 %56, %"struct.WTF::KeyValuePair.1993"* %53, %"struct.WTF::KeyValuePair.1993"* %46
  %58 = load i32, i32* %12, align 8
  %59 = ptrtoint %"struct.WTF::KeyValuePair.1993"* %54 to i64
  br label %60

60:                                               ; preds = %42, %42, %52
  %61 = phi i64 [ %43, %42 ], [ %59, %52 ], [ %43, %42 ]
  %62 = phi i32 [ %44, %42 ], [ %58, %52 ], [ %44, %42 ]
  %63 = phi %"struct.WTF::KeyValuePair.1993"* [ %45, %42 ], [ %54, %52 ], [ %45, %42 ]
  %64 = phi %"struct.WTF::KeyValuePair.1993"* [ %46, %42 ], [ %57, %52 ], [ %46, %42 ]
  %65 = add i32 %47, 1
  %66 = icmp eq i32 %65, %62
  br i1 %66, label %24, label %42
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.WTF::KeyValuePair.1993"* @_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_S1_EENS_24KeyValuePairKeyExtractorENS_15CaseFoldingHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EES8_EES8_NS_18PartitionAllocatorEE8ReinsertEOS3_(%"class.WTF::HashTable.1990"*, %"struct.WTF::KeyValuePair.1993"* dereferenceable(16)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"struct.WTF::KeyValuePair.1993", %"struct.WTF::KeyValuePair.1993"* %1, i64 0, i32 0
  %4 = tail call { %"struct.WTF::KeyValuePair.1993"*, i8 } @_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_S1_EENS_24KeyValuePairKeyExtractorENS_15CaseFoldingHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EES8_EES8_NS_18PartitionAllocatorEE16LookupForWritingERKS1_(%"class.WTF::HashTable.1990"* %0, %"class.WTF::String"* dereferenceable(8) %3)
  %5 = extractvalue { %"struct.WTF::KeyValuePair.1993"*, i8 } %4, 0
  %6 = getelementptr inbounds %"struct.WTF::KeyValuePair.1993", %"struct.WTF::KeyValuePair.1993"* %5, i64 0, i32 1, i32 0, i32 0
  %7 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %6, align 8
  %8 = icmp eq %"class.WTF::StringImpl"* %7, null
  br i1 %8, label %22, label %9

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %7, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %11 = load atomic i32, i32* %10 monotonic, align 4
  %12 = and i32 %11, 2
  %13 = icmp eq i32 %12, 0
  %14 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %7, i64 0, i32 0
  %15 = load i32, i32* %14, align 4
  br i1 %13, label %16, label %18

16:                                               ; preds = %9
  %17 = add i32 %15, -1
  store i32 %17, i32* %14, align 4
  br label %18

18:                                               ; preds = %16, %9
  %19 = phi i32 [ %17, %16 ], [ %15, %9 ]
  %20 = icmp eq i32 %19, 0
  br i1 %20, label %21, label %22

21:                                               ; preds = %18
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %7) #16
  br label %22

22:                                               ; preds = %21, %18, %2
  %23 = getelementptr inbounds %"struct.WTF::KeyValuePair.1993", %"struct.WTF::KeyValuePair.1993"* %5, i64 0, i32 0, i32 0, i32 0
  %24 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %23, align 8
  %25 = icmp eq %"class.WTF::StringImpl"* %24, null
  br i1 %25, label %39, label %26

26:                                               ; preds = %22
  %27 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %24, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %28 = load atomic i32, i32* %27 monotonic, align 4
  %29 = and i32 %28, 2
  %30 = icmp eq i32 %29, 0
  %31 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %24, i64 0, i32 0
  %32 = load i32, i32* %31, align 4
  br i1 %30, label %33, label %35

33:                                               ; preds = %26
  %34 = add i32 %32, -1
  store i32 %34, i32* %31, align 4
  br label %35

35:                                               ; preds = %33, %26
  %36 = phi i32 [ %34, %33 ], [ %32, %26 ]
  %37 = icmp eq i32 %36, 0
  br i1 %37, label %38, label %39

38:                                               ; preds = %35
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %24) #16
  br label %39

39:                                               ; preds = %22, %35, %38
  %40 = getelementptr inbounds %"struct.WTF::KeyValuePair.1993", %"struct.WTF::KeyValuePair.1993"* %1, i64 0, i32 0, i32 0, i32 0
  %41 = bitcast %"struct.WTF::KeyValuePair.1993"* %1 to i64*
  %42 = load i64, i64* %41, align 8
  %43 = bitcast %"struct.WTF::KeyValuePair.1993"* %5 to i64*
  store i64 %42, i64* %43, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %40, align 8
  %44 = getelementptr inbounds %"struct.WTF::KeyValuePair.1993", %"struct.WTF::KeyValuePair.1993"* %5, i64 0, i32 1
  %45 = getelementptr inbounds %"struct.WTF::KeyValuePair.1993", %"struct.WTF::KeyValuePair.1993"* %1, i64 0, i32 1
  %46 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %45, i64 0, i32 0, i32 0
  %47 = bitcast %"class.WTF::String"* %45 to i64*
  %48 = load i64, i64* %47, align 8
  %49 = bitcast %"class.WTF::String"* %44 to i64*
  store i64 %48, i64* %49, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %46, align 8
  ret %"struct.WTF::KeyValuePair.1993"* %5
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.WTF::KeyValuePair.1993"*, i8 } @_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_S1_EENS_24KeyValuePairKeyExtractorENS_15CaseFoldingHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EES8_EES8_NS_18PartitionAllocatorEE16LookupForWritingERKS1_(%"class.WTF::HashTable.1990"*, %"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.WTF::StringView", align 8
  %4 = alloca %"class.WTF::StringView", align 8
  %5 = getelementptr inbounds %"class.WTF::HashTable.1990", %"class.WTF::HashTable.1990"* %0, i64 0, i32 0
  %6 = load %"struct.WTF::KeyValuePair.1993"*, %"struct.WTF::KeyValuePair.1993"** %5, align 8
  %7 = getelementptr inbounds %"class.WTF::HashTable.1990", %"class.WTF::HashTable.1990"* %0, i64 0, i32 1
  %8 = load i32, i32* %7, align 8
  %9 = add i32 %8, -1
  %10 = zext i32 %9 to i64
  %11 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %1, i64 0, i32 0, i32 0
  %12 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %11, align 8
  %13 = tail call i32 @_ZN3WTF15CaseFoldingHash7GetHashEPNS_10StringImplE(%"class.WTF::StringImpl"* %12) #16
  %14 = and i32 %13, %9
  %15 = zext i32 %14 to i64
  %16 = getelementptr inbounds %"struct.WTF::KeyValuePair.1993", %"struct.WTF::KeyValuePair.1993"* %6, i64 %15
  %17 = ptrtoint %"struct.WTF::KeyValuePair.1993"* %16 to i64
  %18 = getelementptr inbounds %"struct.WTF::KeyValuePair.1993", %"struct.WTF::KeyValuePair.1993"* %16, i64 0, i32 0, i32 0, i32 0
  %19 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %18, align 8
  %20 = icmp eq %"class.WTF::StringImpl"* %19, null
  br i1 %20, label %46, label %21

21:                                               ; preds = %2
  %22 = bitcast %"class.WTF::StringView"* %3 to i8*
  %23 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %3, i64 0, i32 1
  %24 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %3, i64 0, i32 2
  %25 = bitcast %"class.WTF::StringView"* %4 to i8*
  %26 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %4, i64 0, i32 0
  %27 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %4, i64 0, i32 1
  %28 = bitcast i8** %27 to %"class.WTF::StringImpl"**
  %29 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %4, i64 0, i32 2
  %30 = xor i32 %13, -1
  %31 = lshr i32 %13, 23
  %32 = add i32 %31, %30
  %33 = shl i32 %32, 12
  %34 = xor i32 %33, %32
  %35 = lshr i32 %34, 7
  %36 = xor i32 %35, %34
  %37 = shl i32 %36, 2
  %38 = xor i32 %37, %36
  %39 = lshr i32 %38, 20
  %40 = xor i32 %39, %38
  %41 = or i32 %40, 1
  %42 = zext i32 %41 to i64
  %43 = bitcast %"class.WTF::StringView"* %3 to i8**
  br label %52

44:                                               ; preds = %71
  %45 = ptrtoint %"struct.WTF::KeyValuePair.1993"* %77 to i64
  br label %46

46:                                               ; preds = %44, %2
  %47 = phi i64 [ %17, %2 ], [ %45, %44 ]
  %48 = phi %"struct.WTF::KeyValuePair.1993"* [ null, %2 ], [ %72, %44 ]
  %49 = icmp eq %"struct.WTF::KeyValuePair.1993"* %48, null
  %50 = ptrtoint %"struct.WTF::KeyValuePair.1993"* %48 to i64
  %51 = select i1 %49, i64 %47, i64 %50
  br label %82

52:                                               ; preds = %71, %21
  %53 = phi %"struct.WTF::KeyValuePair.1993"* [ null, %21 ], [ %72, %71 ]
  %54 = phi i64 [ %17, %21 ], [ %78, %71 ]
  %55 = phi %"struct.WTF::KeyValuePair.1993"* [ %16, %21 ], [ %77, %71 ]
  %56 = phi i64 [ %15, %21 ], [ %76, %71 ]
  %57 = phi i64 [ 0, %21 ], [ %74, %71 ]
  %58 = bitcast %"struct.WTF::KeyValuePair.1993"* %55 to i8**
  %59 = load i8*, i8** %58, align 8
  %60 = icmp eq i8* %59, inttoptr (i64 -1 to i8*)
  br i1 %60, label %71, label %61

61:                                               ; preds = %52
  %62 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %11, align 8
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %22) #16
  store i8* %59, i8** %43, align 8
  %63 = getelementptr inbounds i8, i8* %59, i64 12
  store i8* %63, i8** %23, align 8
  %64 = getelementptr inbounds i8, i8* %59, i64 4
  %65 = bitcast i8* %64 to i32*
  %66 = load i32, i32* %65, align 4
  store i32 %66, i32* %24, align 8
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %25) #16
  store %"class.WTF::StringImpl"* %62, %"class.WTF::StringImpl"** %26, align 8
  %67 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %62, i64 1
  store %"class.WTF::StringImpl"* %67, %"class.WTF::StringImpl"** %28, align 8
  %68 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %62, i64 0, i32 1
  %69 = load i32, i32* %68, align 4
  store i32 %69, i32* %29, align 8
  %70 = call zeroext i1 @_ZN3WTF37DeprecatedEqualIgnoringCaseAndNullityERKNS_10StringViewES2_(%"class.WTF::StringView"* nonnull dereferenceable(24) %3, %"class.WTF::StringView"* nonnull dereferenceable(24) %4) #16
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %25) #16
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %22) #16
  br i1 %70, label %82, label %71

71:                                               ; preds = %61, %52
  %72 = phi %"struct.WTF::KeyValuePair.1993"* [ %53, %61 ], [ %55, %52 ]
  %73 = icmp eq i64 %57, 0
  %74 = select i1 %73, i64 %42, i64 %57
  %75 = add i64 %74, %56
  %76 = and i64 %75, %10
  %77 = getelementptr inbounds %"struct.WTF::KeyValuePair.1993", %"struct.WTF::KeyValuePair.1993"* %6, i64 %76
  %78 = ptrtoint %"struct.WTF::KeyValuePair.1993"* %77 to i64
  %79 = getelementptr inbounds %"struct.WTF::KeyValuePair.1993", %"struct.WTF::KeyValuePair.1993"* %77, i64 0, i32 0, i32 0, i32 0
  %80 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %79, align 8
  %81 = icmp eq %"class.WTF::StringImpl"* %80, null
  br i1 %81, label %44, label %52

82:                                               ; preds = %61, %46
  %83 = phi i64 [ %51, %46 ], [ %54, %61 ]
  %84 = phi i8 [ 0, %46 ], [ 1, %61 ]
  %85 = inttoptr i64 %83 to %"struct.WTF::KeyValuePair.1993"*
  %86 = insertvalue { %"struct.WTF::KeyValuePair.1993"*, i8 } undef, %"struct.WTF::KeyValuePair.1993"* %85, 0
  %87 = insertvalue { %"struct.WTF::KeyValuePair.1993"*, i8 } %86, i8 %84, 1
  ret { %"struct.WTF::KeyValuePair.1993"*, i8 } %87
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZN3WTF15CaseFoldingHash7GetHashEPNS_10StringImplE(%"class.WTF::StringImpl"*) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca i64, align 8
  %3 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %4 = load atomic i32, i32* %3 monotonic, align 4
  %5 = and i32 %4, 1
  %6 = icmp eq i32 %5, 0
  %7 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %0, i64 1
  br i1 %6, label %77, label %8

8:                                                ; preds = %1
  %9 = bitcast %"class.WTF::StringImpl"* %7 to i8*
  %10 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %0, i64 0, i32 1
  %11 = load i32, i32* %10, align 4
  %12 = and i32 %11, 1
  %13 = icmp eq i32 %12, 0
  %14 = lshr i32 %11, 1
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %48, label %16

16:                                               ; preds = %8
  %17 = add nsw i32 %14, -1
  %18 = zext i32 %17 to i64
  br label %19

19:                                               ; preds = %19, %16
  %20 = phi i32 [ %41, %19 ], [ -1640531527, %16 ]
  %21 = phi i32 [ %23, %19 ], [ %14, %16 ]
  %22 = phi i8* [ %42, %19 ], [ %9, %16 ]
  %23 = add nsw i32 %21, -1
  %24 = load i8, i8* %22, align 1
  %25 = zext i8 %24 to i64
  %26 = getelementptr inbounds [256 x i16], [256 x i16]* @_ZN3WTF10StringImpl20kLatin1CaseFoldTableE, i64 0, i64 %25
  %27 = load i16, i16* %26, align 2
  %28 = getelementptr inbounds i8, i8* %22, i64 1
  %29 = load i8, i8* %28, align 1
  %30 = zext i8 %29 to i64
  %31 = getelementptr inbounds [256 x i16], [256 x i16]* @_ZN3WTF10StringImpl20kLatin1CaseFoldTableE, i64 0, i64 %30
  %32 = load i16, i16* %31, align 2
  %33 = zext i16 %27 to i32
  %34 = add i32 %20, %33
  %35 = shl i32 %34, 16
  %36 = zext i16 %32 to i32
  %37 = shl nuw nsw i32 %36, 11
  %38 = xor i32 %35, %34
  %39 = xor i32 %38, %37
  %40 = lshr i32 %39, 11
  %41 = add i32 %40, %39
  %42 = getelementptr inbounds i8, i8* %22, i64 2
  %43 = icmp eq i32 %23, 0
  br i1 %43, label %44, label %19

44:                                               ; preds = %19
  %45 = shl nuw nsw i64 %18, 1
  %46 = add nuw nsw i64 %45, 2
  %47 = getelementptr i8, i8* %9, i64 %46
  br label %48

48:                                               ; preds = %44, %8
  %49 = phi i32 [ -1640531527, %8 ], [ %41, %44 ]
  %50 = phi i8* [ %9, %8 ], [ %47, %44 ]
  br i1 %13, label %62, label %51

51:                                               ; preds = %48
  %52 = load i8, i8* %50, align 1
  %53 = zext i8 %52 to i64
  %54 = getelementptr inbounds [256 x i16], [256 x i16]* @_ZN3WTF10StringImpl20kLatin1CaseFoldTableE, i64 0, i64 %53
  %55 = load i16, i16* %54, align 2
  %56 = zext i16 %55 to i32
  %57 = add i32 %49, %56
  %58 = shl i32 %57, 11
  %59 = xor i32 %58, %57
  %60 = lshr i32 %59, 17
  %61 = add i32 %60, %59
  br label %62

62:                                               ; preds = %48, %51
  %63 = phi i32 [ %61, %51 ], [ %49, %48 ]
  %64 = shl i32 %63, 3
  %65 = xor i32 %64, %63
  %66 = lshr i32 %65, 5
  %67 = add i32 %66, %65
  %68 = shl i32 %67, 2
  %69 = xor i32 %68, %67
  %70 = lshr i32 %69, 15
  %71 = add i32 %70, %69
  %72 = shl i32 %71, 10
  %73 = xor i32 %72, %71
  %74 = and i32 %73, 16777215
  %75 = icmp eq i32 %74, 0
  %76 = select i1 %75, i32 8388608, i32 %74
  br label %112

77:                                               ; preds = %1
  %78 = bitcast %"class.WTF::StringImpl"* %7 to i16*
  %79 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %0, i64 0, i32 1
  %80 = load i32, i32* %79, align 4
  %81 = bitcast i64* %2 to %"class.WTF::StringHasher"*
  %82 = bitcast i64* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %82) #16
  store i64 186919631157689, i64* %2, align 8
  %83 = bitcast i64* %2 to i32*
  %84 = getelementptr inbounds %"class.WTF::StringHasher", %"class.WTF::StringHasher"* %81, i64 0, i32 1
  call void @_ZN3WTF12StringHasher28AddCharactersAssumingAlignedIDsXadL_ZNS_15CaseFoldingHash8FoldCaseIDsEEDsT_EEEEvPKS4_j(%"class.WTF::StringHasher"* nonnull %81, i16* %78, i32 %80) #16
  %85 = load i32, i32* %83, align 8
  %86 = load i8, i8* %84, align 4, !range !20
  %87 = icmp eq i8 %86, 0
  br i1 %87, label %97, label %88

88:                                               ; preds = %77
  %89 = getelementptr inbounds %"class.WTF::StringHasher", %"class.WTF::StringHasher"* %81, i64 0, i32 2
  %90 = load i16, i16* %89, align 2
  %91 = zext i16 %90 to i32
  %92 = add i32 %85, %91
  %93 = shl i32 %92, 11
  %94 = xor i32 %93, %92
  %95 = lshr i32 %94, 17
  %96 = add i32 %95, %94
  br label %97

97:                                               ; preds = %77, %88
  %98 = phi i32 [ %96, %88 ], [ %85, %77 ]
  %99 = shl i32 %98, 3
  %100 = xor i32 %99, %98
  %101 = lshr i32 %100, 5
  %102 = add i32 %101, %100
  %103 = shl i32 %102, 2
  %104 = xor i32 %103, %102
  %105 = lshr i32 %104, 15
  %106 = add i32 %105, %104
  %107 = shl i32 %106, 10
  %108 = xor i32 %107, %106
  %109 = and i32 %108, 16777215
  %110 = icmp eq i32 %109, 0
  %111 = select i1 %110, i32 8388608, i32 %109
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %82) #16
  br label %112

112:                                              ; preds = %97, %62
  %113 = phi i32 [ %76, %62 ], [ %111, %97 ]
  ret i32 %113
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF12StringHasher28AddCharactersAssumingAlignedIDsXadL_ZNS_15CaseFoldingHash8FoldCaseIDsEEDsT_EEEEvPKS4_j(%"class.WTF::StringHasher"*, i16*, i32) local_unnamed_addr #0 comdat align 2 {
  %4 = and i32 %2, 1
  %5 = icmp eq i32 %4, 0
  %6 = lshr i32 %2, 1
  %7 = icmp eq i32 %6, 0
  br i1 %7, label %33, label %8

8:                                                ; preds = %3
  %9 = getelementptr inbounds %"class.WTF::StringHasher", %"class.WTF::StringHasher"* %0, i64 0, i32 0
  br label %10

10:                                               ; preds = %8, %10
  %11 = phi i32 [ %6, %8 ], [ %13, %10 ]
  %12 = phi i16* [ %1, %8 ], [ %31, %10 ]
  %13 = add nsw i32 %11, -1
  %14 = load i16, i16* %12, align 2
  %15 = zext i16 %14 to i32
  %16 = tail call i32 @u_foldCase_69(i32 %15, i32 0) #16
  %17 = getelementptr inbounds i16, i16* %12, i64 1
  %18 = load i16, i16* %17, align 2
  %19 = zext i16 %18 to i32
  %20 = tail call i32 @u_foldCase_69(i32 %19, i32 0) #16
  %21 = and i32 %16, 65535
  %22 = load i32, i32* %9, align 4
  %23 = add i32 %22, %21
  %24 = shl i32 %23, 16
  %25 = shl i32 %20, 11
  %26 = and i32 %25, 134215680
  %27 = xor i32 %23, %26
  %28 = xor i32 %27, %24
  %29 = lshr i32 %28, 11
  %30 = add i32 %29, %28
  store i32 %30, i32* %9, align 4
  %31 = getelementptr inbounds i16, i16* %12, i64 2
  %32 = icmp eq i32 %13, 0
  br i1 %32, label %33, label %10

33:                                               ; preds = %10, %3
  %34 = phi i16* [ %1, %3 ], [ %31, %10 ]
  br i1 %5, label %59, label %35

35:                                               ; preds = %33
  %36 = load i16, i16* %34, align 2
  %37 = zext i16 %36 to i32
  %38 = tail call i32 @u_foldCase_69(i32 %37, i32 0) #16
  %39 = getelementptr inbounds %"class.WTF::StringHasher", %"class.WTF::StringHasher"* %0, i64 0, i32 1
  %40 = load i8, i8* %39, align 4, !range !20
  %41 = icmp eq i8 %40, 0
  br i1 %41, label %56, label %42

42:                                               ; preds = %35
  store i8 0, i8* %39, align 4
  %43 = getelementptr inbounds %"class.WTF::StringHasher", %"class.WTF::StringHasher"* %0, i64 0, i32 2
  %44 = load i16, i16* %43, align 2
  %45 = zext i16 %44 to i32
  %46 = getelementptr inbounds %"class.WTF::StringHasher", %"class.WTF::StringHasher"* %0, i64 0, i32 0
  %47 = load i32, i32* %46, align 4
  %48 = add i32 %47, %45
  %49 = shl i32 %48, 16
  %50 = shl i32 %38, 11
  %51 = and i32 %50, 134215680
  %52 = xor i32 %48, %51
  %53 = xor i32 %52, %49
  %54 = lshr i32 %53, 11
  %55 = add i32 %54, %53
  store i32 %55, i32* %46, align 4
  br label %59

56:                                               ; preds = %35
  %57 = trunc i32 %38 to i16
  %58 = getelementptr inbounds %"class.WTF::StringHasher", %"class.WTF::StringHasher"* %0, i64 0, i32 2
  store i16 %57, i16* %58, align 2
  store i8 1, i8* %39, align 4
  br label %59

59:                                               ; preds = %56, %42, %33
  ret void
}

declare i32 @u_foldCase_69(i32, i32) local_unnamed_addr #2

declare zeroext i1 @_ZN3WTF37DeprecatedEqualIgnoringCaseAndNullityERKNS_10StringViewES2_(%"class.WTF::StringView"* dereferenceable(24), %"class.WTF::StringView"* dereferenceable(24)) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_S1_EENS_24KeyValuePairKeyExtractorENS_15CaseFoldingHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EES8_EES8_NS_18PartitionAllocatorEE29DeleteAllBucketsAndDeallocateEPS3_j(%"struct.WTF::KeyValuePair.1993"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq i32 %1, 0
  br i1 %3, label %6, label %4

4:                                                ; preds = %2
  %5 = zext i32 %1 to i64
  br label %8

6:                                                ; preds = %48, %2
  %7 = bitcast %"struct.WTF::KeyValuePair.1993"* %0 to i8*
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %7) #16
  ret void

8:                                                ; preds = %48, %4
  %9 = phi i64 [ 0, %4 ], [ %49, %48 ]
  %10 = getelementptr inbounds %"struct.WTF::KeyValuePair.1993", %"struct.WTF::KeyValuePair.1993"* %0, i64 %9
  %11 = bitcast %"struct.WTF::KeyValuePair.1993"* %10 to i8**
  %12 = load i8*, i8** %11, align 8
  %13 = icmp eq i8* %12, inttoptr (i64 -1 to i8*)
  br i1 %13, label %48, label %14

14:                                               ; preds = %8
  %15 = getelementptr inbounds %"struct.WTF::KeyValuePair.1993", %"struct.WTF::KeyValuePair.1993"* %0, i64 %9, i32 1, i32 0, i32 0
  %16 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %15, align 8
  %17 = icmp eq %"class.WTF::StringImpl"* %16, null
  br i1 %17, label %31, label %18

18:                                               ; preds = %14
  %19 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %16, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %20 = load atomic i32, i32* %19 monotonic, align 4
  %21 = and i32 %20, 2
  %22 = icmp eq i32 %21, 0
  %23 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %16, i64 0, i32 0
  %24 = load i32, i32* %23, align 4
  br i1 %22, label %25, label %27

25:                                               ; preds = %18
  %26 = add i32 %24, -1
  store i32 %26, i32* %23, align 4
  br label %27

27:                                               ; preds = %25, %18
  %28 = phi i32 [ %26, %25 ], [ %24, %18 ]
  %29 = icmp eq i32 %28, 0
  br i1 %29, label %30, label %31

30:                                               ; preds = %27
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %16) #16
  br label %31

31:                                               ; preds = %30, %27, %14
  %32 = getelementptr inbounds %"struct.WTF::KeyValuePair.1993", %"struct.WTF::KeyValuePair.1993"* %10, i64 0, i32 0, i32 0, i32 0
  %33 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %32, align 8
  %34 = icmp eq %"class.WTF::StringImpl"* %33, null
  br i1 %34, label %48, label %35

35:                                               ; preds = %31
  %36 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %33, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %37 = load atomic i32, i32* %36 monotonic, align 4
  %38 = and i32 %37, 2
  %39 = icmp eq i32 %38, 0
  %40 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %33, i64 0, i32 0
  %41 = load i32, i32* %40, align 4
  br i1 %39, label %42, label %44

42:                                               ; preds = %35
  %43 = add i32 %41, -1
  store i32 %43, i32* %40, align 4
  br label %44

44:                                               ; preds = %42, %35
  %45 = phi i32 [ %43, %42 ], [ %41, %35 ]
  %46 = icmp eq i32 %45, 0
  br i1 %46, label %47, label %48

47:                                               ; preds = %44
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %33) #16
  br label %48

48:                                               ; preds = %47, %44, %31, %8
  %49 = add nuw nsw i64 %9, 1
  %50 = icmp eq i64 %49, %5
  br i1 %50, label %6, label %8
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.WTF::KeyValuePair.1993"*, i8 } @_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_S1_EENS_24KeyValuePairKeyExtractorENS_15CaseFoldingHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EES8_EES8_NS_18PartitionAllocatorEE6insertINS_22IdentityHashTranslatorIS5_S9_SA_EERKS1_RKS3_EENS_18HashTableAddResultISB_S3_EEOT0_OT1_(%"class.WTF::HashTable.1990"*, %"class.WTF::String"* dereferenceable(8), %"struct.WTF::KeyValuePair.1993"* dereferenceable(16)) local_unnamed_addr #0 comdat align 2 {
  %4 = alloca %"class.WTF::StringView", align 8
  %5 = alloca %"class.WTF::StringView", align 8
  %6 = getelementptr inbounds %"class.WTF::HashTable.1990", %"class.WTF::HashTable.1990"* %0, i64 0, i32 0
  %7 = load %"struct.WTF::KeyValuePair.1993"*, %"struct.WTF::KeyValuePair.1993"** %6, align 8
  %8 = icmp eq %"struct.WTF::KeyValuePair.1993"* %7, null
  br i1 %8, label %9, label %12

9:                                                ; preds = %3
  %10 = tail call %"struct.WTF::KeyValuePair.1993"* @_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_S1_EENS_24KeyValuePairKeyExtractorENS_15CaseFoldingHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EES8_EES8_NS_18PartitionAllocatorEE6ExpandEPS3_(%"class.WTF::HashTable.1990"* %0, %"struct.WTF::KeyValuePair.1993"* null)
  %11 = load %"struct.WTF::KeyValuePair.1993"*, %"struct.WTF::KeyValuePair.1993"** %6, align 8
  br label %12

12:                                               ; preds = %3, %9
  %13 = phi %"struct.WTF::KeyValuePair.1993"* [ %7, %3 ], [ %11, %9 ]
  %14 = getelementptr inbounds %"class.WTF::HashTable.1990", %"class.WTF::HashTable.1990"* %0, i64 0, i32 1
  %15 = load i32, i32* %14, align 8
  %16 = add i32 %15, -1
  %17 = zext i32 %16 to i64
  %18 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %1, i64 0, i32 0, i32 0
  %19 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %18, align 8
  %20 = tail call i32 @_ZN3WTF15CaseFoldingHash7GetHashEPNS_10StringImplE(%"class.WTF::StringImpl"* %19) #16
  %21 = and i32 %20, %16
  %22 = zext i32 %21 to i64
  %23 = getelementptr inbounds %"struct.WTF::KeyValuePair.1993", %"struct.WTF::KeyValuePair.1993"* %13, i64 %22
  %24 = getelementptr inbounds %"struct.WTF::KeyValuePair.1993", %"struct.WTF::KeyValuePair.1993"* %23, i64 0, i32 0, i32 0, i32 0
  %25 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %24, align 8
  %26 = icmp eq %"class.WTF::StringImpl"* %25, null
  br i1 %26, label %88, label %27

27:                                               ; preds = %12
  %28 = bitcast %"class.WTF::StringView"* %4 to i8*
  %29 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %4, i64 0, i32 1
  %30 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %4, i64 0, i32 2
  %31 = bitcast %"class.WTF::StringView"* %5 to i8*
  %32 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %5, i64 0, i32 0
  %33 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %5, i64 0, i32 1
  %34 = bitcast i8** %33 to %"class.WTF::StringImpl"**
  %35 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %5, i64 0, i32 2
  %36 = xor i32 %20, -1
  %37 = lshr i32 %20, 23
  %38 = add i32 %37, %36
  %39 = shl i32 %38, 12
  %40 = xor i32 %39, %38
  %41 = lshr i32 %40, 7
  %42 = xor i32 %41, %40
  %43 = shl i32 %42, 2
  %44 = xor i32 %43, %42
  %45 = lshr i32 %44, 20
  %46 = xor i32 %45, %44
  %47 = or i32 %46, 1
  %48 = zext i32 %47 to i64
  %49 = bitcast %"class.WTF::StringView"* %4 to i8**
  br label %50

50:                                               ; preds = %27, %68
  %51 = phi %"struct.WTF::KeyValuePair.1993"* [ %23, %27 ], [ %74, %68 ]
  %52 = phi %"struct.WTF::KeyValuePair.1993"* [ null, %27 ], [ %69, %68 ]
  %53 = phi i64 [ %22, %27 ], [ %73, %68 ]
  %54 = phi i64 [ 0, %27 ], [ %71, %68 ]
  %55 = bitcast %"struct.WTF::KeyValuePair.1993"* %51 to i8**
  %56 = load i8*, i8** %55, align 8
  %57 = icmp eq i8* %56, inttoptr (i64 -1 to i8*)
  br i1 %57, label %68, label %58

58:                                               ; preds = %50
  %59 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %18, align 8
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %28) #16
  store i8* %56, i8** %49, align 8
  %60 = getelementptr inbounds i8, i8* %56, i64 12
  store i8* %60, i8** %29, align 8
  %61 = getelementptr inbounds i8, i8* %56, i64 4
  %62 = bitcast i8* %61 to i32*
  %63 = load i32, i32* %62, align 4
  store i32 %63, i32* %30, align 8
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %31) #16
  store %"class.WTF::StringImpl"* %59, %"class.WTF::StringImpl"** %32, align 8
  %64 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %59, i64 1
  store %"class.WTF::StringImpl"* %64, %"class.WTF::StringImpl"** %34, align 8
  %65 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %59, i64 0, i32 1
  %66 = load i32, i32* %65, align 4
  store i32 %66, i32* %35, align 8
  %67 = call zeroext i1 @_ZN3WTF37DeprecatedEqualIgnoringCaseAndNullityERKNS_10StringViewES2_(%"class.WTF::StringView"* nonnull dereferenceable(24) %4, %"class.WTF::StringView"* nonnull dereferenceable(24) %5) #16
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %31) #16
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %28) #16
  br i1 %67, label %102, label %68

68:                                               ; preds = %50, %58
  %69 = phi %"struct.WTF::KeyValuePair.1993"* [ %52, %58 ], [ %51, %50 ]
  %70 = icmp eq i64 %54, 0
  %71 = select i1 %70, i64 %48, i64 %54
  %72 = add i64 %71, %53
  %73 = and i64 %72, %17
  %74 = getelementptr inbounds %"struct.WTF::KeyValuePair.1993", %"struct.WTF::KeyValuePair.1993"* %13, i64 %73
  %75 = getelementptr inbounds %"struct.WTF::KeyValuePair.1993", %"struct.WTF::KeyValuePair.1993"* %74, i64 0, i32 0, i32 0, i32 0
  %76 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %75, align 8
  %77 = icmp eq %"class.WTF::StringImpl"* %76, null
  br i1 %77, label %78, label %50

78:                                               ; preds = %68
  %79 = icmp eq %"struct.WTF::KeyValuePair.1993"* %69, null
  br i1 %79, label %88, label %80

80:                                               ; preds = %78
  %81 = bitcast %"struct.WTF::KeyValuePair.1993"* %69 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %81, i8 0, i64 16, i1 false) #16
  %82 = getelementptr inbounds %"class.WTF::HashTable.1990", %"class.WTF::HashTable.1990"* %0, i64 0, i32 3
  %83 = load i32, i32* %82, align 8
  %84 = add i32 %83, 2147483647
  %85 = and i32 %84, 2147483647
  %86 = and i32 %83, -2147483648
  %87 = or i32 %85, %86
  store i32 %87, i32* %82, align 8
  br label %88

88:                                               ; preds = %12, %78, %80
  %89 = phi %"struct.WTF::KeyValuePair.1993"* [ %69, %80 ], [ %74, %78 ], [ %23, %12 ]
  %90 = call dereferenceable(16) %"struct.WTF::KeyValuePair.1993"* @_ZN3WTF12KeyValuePairINS_6StringES1_EaSERKS2_(%"struct.WTF::KeyValuePair.1993"* %89, %"struct.WTF::KeyValuePair.1993"* dereferenceable(16) %2) #16
  %91 = getelementptr inbounds %"class.WTF::HashTable.1990", %"class.WTF::HashTable.1990"* %0, i64 0, i32 2
  %92 = load i32, i32* %91, align 4
  %93 = add i32 %92, 1
  store i32 %93, i32* %91, align 4
  %94 = getelementptr inbounds %"class.WTF::HashTable.1990", %"class.WTF::HashTable.1990"* %0, i64 0, i32 3
  %95 = load i32, i32* %94, align 8
  %96 = add i32 %95, %93
  %97 = shl i32 %96, 1
  %98 = load i32, i32* %14, align 8
  %99 = icmp ult i32 %97, %98
  br i1 %99, label %102, label %100

100:                                              ; preds = %88
  %101 = call %"struct.WTF::KeyValuePair.1993"* @_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_S1_EENS_24KeyValuePairKeyExtractorENS_15CaseFoldingHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EES8_EES8_NS_18PartitionAllocatorEE6ExpandEPS3_(%"class.WTF::HashTable.1990"* %0, %"struct.WTF::KeyValuePair.1993"* %89)
  br label %102

102:                                              ; preds = %58, %88, %100
  %103 = phi i8 [ 1, %88 ], [ 1, %100 ], [ 0, %58 ]
  %104 = phi %"struct.WTF::KeyValuePair.1993"* [ %89, %88 ], [ %101, %100 ], [ %51, %58 ]
  %105 = insertvalue { %"struct.WTF::KeyValuePair.1993"*, i8 } undef, %"struct.WTF::KeyValuePair.1993"* %104, 0
  %106 = insertvalue { %"struct.WTF::KeyValuePair.1993"*, i8 } %105, i8 %103, 1
  ret { %"struct.WTF::KeyValuePair.1993"*, i8 } %106
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.WTF::KeyValuePair.1993"* @_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_S1_EENS_24KeyValuePairKeyExtractorENS_15CaseFoldingHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EES8_EES8_NS_18PartitionAllocatorEE6ExpandEPS3_(%"class.WTF::HashTable.1990"*, %"struct.WTF::KeyValuePair.1993"*) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = getelementptr inbounds %"class.WTF::HashTable.1990", %"class.WTF::HashTable.1990"* %0, i64 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %31, label %9

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"class.WTF::HashTable.1990", %"class.WTF::HashTable.1990"* %0, i64 0, i32 2
  %11 = load i32, i32* %10, align 4
  %12 = mul i32 %11, 6
  %13 = shl i32 %7, 1
  %14 = icmp ult i32 %12, %13
  br i1 %14, label %31, label %15

15:                                               ; preds = %9
  %16 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %16) #16
  %17 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %17, align 8
  %18 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %18)
  %19 = icmp ugt i32 %13, %7
  br i1 %19, label %20, label %21

20:                                               ; preds = %15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18)
  store i8* null, i8** %17, align 8
  br label %30

21:                                               ; preds = %15
  %22 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %13) #16
  %23 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %7) #16
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.13, i64 0, i64 0), i8* %22, i8* %23) #16
  %24 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %25 = load i8*, i8** %24, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18)
  store i8* %25, i8** %17, align 8
  %26 = icmp eq i8* %25, null
  br i1 %26, label %30, label %27

27:                                               ; preds = %21
  %28 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %28) #16
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.14, i64 0, i64 0), i32 1783, %"class.logging::CheckOpResult"* nonnull %4) #16
  %29 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #16
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %28) #16
  br label %30

30:                                               ; preds = %20, %21, %27
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16) #16
  br label %31

31:                                               ; preds = %9, %2, %30
  %32 = phi i32 [ %13, %30 ], [ 8, %2 ], [ %7, %9 ]
  %33 = zext i32 %32 to i64
  %34 = shl nuw nsw i64 %33, 4
  %35 = call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %34, i8* getelementptr inbounds ([91 x i8], [91 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_12KeyValuePairINS_6StringES2_EEEEPKcv, i64 0, i64 0)) #16
  call void @llvm.memset.p0i8.i64(i8* align 1 %35, i8 0, i64 %34, i1 false) #16
  %36 = bitcast i8* %35 to %"struct.WTF::KeyValuePair.1993"*
  %37 = call %"struct.WTF::KeyValuePair.1993"* @_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_S1_EENS_24KeyValuePairKeyExtractorENS_15CaseFoldingHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EES8_EES8_NS_18PartitionAllocatorEE8RehashToEPS3_jSC_(%"class.WTF::HashTable.1990"* %0, %"struct.WTF::KeyValuePair.1993"* %36, i32 %32, %"struct.WTF::KeyValuePair.1993"* %1) #16
  ret %"struct.WTF::KeyValuePair.1993"* %37
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(16) %"struct.WTF::KeyValuePair.1993"* @_ZN3WTF12KeyValuePairINS_6StringES1_EaSERKS2_(%"struct.WTF::KeyValuePair.1993"*, %"struct.WTF::KeyValuePair.1993"* dereferenceable(16)) local_unnamed_addr #11 comdat align 2 {
  %3 = getelementptr inbounds %"struct.WTF::KeyValuePair.1993", %"struct.WTF::KeyValuePair.1993"* %1, i64 0, i32 0, i32 0, i32 0
  %4 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %3, align 8
  %5 = icmp eq %"class.WTF::StringImpl"* %4, null
  br i1 %5, label %23, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %4, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %8 = load atomic i32, i32* %7 monotonic, align 4
  %9 = and i32 %8, 2
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %11, label %23

11:                                               ; preds = %6
  %12 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %4, i64 0, i32 0
  %13 = load i32, i32* %12, align 4
  %14 = zext i32 %13 to i33
  %15 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %14, i33 1) #16
  %16 = extractvalue { i33, i1 } %15, 1
  %17 = extractvalue { i33, i1 } %15, 0
  %18 = icmp slt i33 %17, 0
  %19 = or i1 %16, %18
  br i1 %19, label %20, label %21, !prof !3

20:                                               ; preds = %11
  tail call void @llvm.trap() #16
  unreachable

21:                                               ; preds = %11
  %22 = trunc i33 %17 to i32
  store i32 %22, i32* %12, align 4
  br label %23

23:                                               ; preds = %21, %6, %2
  %24 = ptrtoint %"class.WTF::StringImpl"* %4 to i64
  %25 = bitcast %"struct.WTF::KeyValuePair.1993"* %0 to i64*
  %26 = getelementptr inbounds %"struct.WTF::KeyValuePair.1993", %"struct.WTF::KeyValuePair.1993"* %0, i64 0, i32 0, i32 0, i32 0
  %27 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %26, align 8
  store i64 %24, i64* %25, align 8
  %28 = icmp eq %"class.WTF::StringImpl"* %27, null
  br i1 %28, label %42, label %29

29:                                               ; preds = %23
  %30 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %27, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %31 = load atomic i32, i32* %30 monotonic, align 4
  %32 = and i32 %31, 2
  %33 = icmp eq i32 %32, 0
  %34 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %27, i64 0, i32 0
  %35 = load i32, i32* %34, align 4
  br i1 %33, label %36, label %38

36:                                               ; preds = %29
  %37 = add i32 %35, -1
  store i32 %37, i32* %34, align 4
  br label %38

38:                                               ; preds = %36, %29
  %39 = phi i32 [ %37, %36 ], [ %35, %29 ]
  %40 = icmp eq i32 %39, 0
  br i1 %40, label %41, label %42

41:                                               ; preds = %38
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %27) #16
  br label %42

42:                                               ; preds = %23, %38, %41
  %43 = getelementptr inbounds %"struct.WTF::KeyValuePair.1993", %"struct.WTF::KeyValuePair.1993"* %0, i64 0, i32 1
  %44 = getelementptr inbounds %"struct.WTF::KeyValuePair.1993", %"struct.WTF::KeyValuePair.1993"* %1, i64 0, i32 1, i32 0, i32 0
  %45 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %44, align 8
  %46 = icmp eq %"class.WTF::StringImpl"* %45, null
  br i1 %46, label %64, label %47

47:                                               ; preds = %42
  %48 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %45, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %49 = load atomic i32, i32* %48 monotonic, align 4
  %50 = and i32 %49, 2
  %51 = icmp eq i32 %50, 0
  br i1 %51, label %52, label %64

52:                                               ; preds = %47
  %53 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %45, i64 0, i32 0
  %54 = load i32, i32* %53, align 4
  %55 = zext i32 %54 to i33
  %56 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %55, i33 1) #16
  %57 = extractvalue { i33, i1 } %56, 1
  %58 = extractvalue { i33, i1 } %56, 0
  %59 = icmp slt i33 %58, 0
  %60 = or i1 %57, %59
  br i1 %60, label %61, label %62, !prof !3

61:                                               ; preds = %52
  tail call void @llvm.trap() #16
  unreachable

62:                                               ; preds = %52
  %63 = trunc i33 %58 to i32
  store i32 %63, i32* %53, align 4
  br label %64

64:                                               ; preds = %62, %47, %42
  %65 = ptrtoint %"class.WTF::StringImpl"* %45 to i64
  %66 = bitcast %"class.WTF::String"* %43 to i64*
  %67 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %43, i64 0, i32 0, i32 0
  %68 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %67, align 8
  store i64 %65, i64* %66, align 8
  %69 = icmp eq %"class.WTF::StringImpl"* %68, null
  br i1 %69, label %83, label %70

70:                                               ; preds = %64
  %71 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %68, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %72 = load atomic i32, i32* %71 monotonic, align 4
  %73 = and i32 %72, 2
  %74 = icmp eq i32 %73, 0
  %75 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %68, i64 0, i32 0
  %76 = load i32, i32* %75, align 4
  br i1 %74, label %77, label %79

77:                                               ; preds = %70
  %78 = add i32 %76, -1
  store i32 %78, i32* %75, align 4
  br label %79

79:                                               ; preds = %77, %70
  %80 = phi i32 [ %78, %77 ], [ %76, %70 ]
  %81 = icmp eq i32 %80, 0
  br i1 %81, label %82, label %83

82:                                               ; preds = %79
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %68) #16
  br label %83

83:                                               ; preds = %64, %79, %82
  ret %"struct.WTF::KeyValuePair.1993"* %0
}

; Function Attrs: nounwind
declare void @_ZN5blink5mojom5blink8ReferrerD1Ev(%"class.blink::mojom::blink::Referrer"*) unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN5blink14BlobDataHandleD1Ev(%"class.blink::BlobDataHandle"*) unnamed_addr #3

declare void @_ZN5blink5mojom5blink8ReferrerC1ERKNS_4KURLEN7network5mojom14ReferrerPolicyE(%"class.blink::mojom::blink::Referrer"*, %"class.blink::KURL"* dereferenceable(112), i32) unnamed_addr #2

declare void @_ZN5blink4KURLC1ERKS0_(%"class.blink::KURL"*, %"class.blink::KURL"* dereferenceable(112)) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN4base8internal7InvokerINS0_9BindStateIZN5blink12_GLOBAL__N_120ResponsesAccumulator8DispatchEN3WTF6VectorIN4mojo9StructPtrINS3_5mojom5blink15FetchAPIRequestEEELj0ENS6_18PartitionAllocatorEEEEUl13scoped_refptrIS5_ESD_NS9_INSB_11MatchResultEEEE_JSH_SD_EEEFvSJ_EE7RunOnceEPNS0_13BindStateBaseEOSJ_(%"class.base::internal::BindStateBase"* nocapture, %"class.mojo::StructPtr.2303"* nocapture dereferenceable(8)) #0 align 2 {
  %3 = alloca %"class.crdtp::DispatchResponse", align 8
  %4 = alloca %"class.std::__1::basic_string", align 8
  %5 = alloca %"class.WTF::String", align 8
  %6 = alloca %"class.std::__1::basic_string", align 8
  %7 = alloca %"class.WTF::String", align 8
  %8 = alloca %"class.logging::CheckOpResult", align 8
  %9 = alloca %"class.logging::CheckOpResult", align 8
  %10 = alloca %"class.logging::CheckError", align 8
  %11 = alloca %"class.WTF::AtomicString", align 8
  %12 = alloca %"class.WTF::AtomicString", align 8
  %13 = alloca %"class.WTF::AtomicString", align 8
  %14 = alloca %"class.WTF::AtomicString", align 8
  %15 = alloca %"class.std::__1::unique_ptr.2256", align 8
  %16 = alloca %class.scoped_refptr.2273, align 8
  %17 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 1
  %18 = getelementptr inbounds void ()*, void ()** %17, i64 1
  %19 = bitcast void ()** %17 to %"class.blink::(anonymous namespace)::ResponsesAccumulator"**
  %20 = load %"class.blink::(anonymous namespace)::ResponsesAccumulator"*, %"class.blink::(anonymous namespace)::ResponsesAccumulator"** %19, align 8
  store %"class.blink::(anonymous namespace)::ResponsesAccumulator"* null, %"class.blink::(anonymous namespace)::ResponsesAccumulator"** %19, align 8
  %21 = bitcast void ()** %18 to i64*
  %22 = load i64, i64* %21, align 8
  store i64 0, i64* %21, align 8
  %23 = bitcast %"class.mojo::StructPtr.2303"* %1 to i64*
  %24 = getelementptr inbounds %"class.mojo::StructPtr.2303", %"class.mojo::StructPtr.2303"* %1, i64 0, i32 0, i32 0, i32 0, i32 0
  %25 = load %"class.blink::mojom::blink::MatchResult"*, %"class.blink::mojom::blink::MatchResult"** %24, align 8
  store i64 0, i64* %23, align 8
  %26 = bitcast %class.scoped_refptr.2273* %16 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %26) #16
  %27 = getelementptr inbounds %class.scoped_refptr.2273, %class.scoped_refptr.2273* %16, i64 0, i32 0
  store %"class.blink::(anonymous namespace)::ResponsesAccumulator"* %20, %"class.blink::(anonymous namespace)::ResponsesAccumulator"** %27, align 8
  %28 = getelementptr inbounds %"class.blink::mojom::blink::MatchResult", %"class.blink::mojom::blink::MatchResult"* %25, i64 0, i32 0
  %29 = load i32, i32* %28, align 8
  %30 = icmp eq i32 %29, 0
  br i1 %30, label %31, label %101

31:                                               ; preds = %2
  %32 = getelementptr inbounds %"class.blink::mojom::blink::MatchResult", %"class.blink::mojom::blink::MatchResult"* %25, i64 0, i32 1
  %33 = bitcast %"union.blink::mojom::blink::MatchResult::Union_"* %32 to i32*
  %34 = load i32, i32* %33, align 8
  %35 = bitcast %"class.std::__1::basic_string"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %35) #16
  %36 = getelementptr inbounds %"class.blink::(anonymous namespace)::ResponsesAccumulator", %"class.blink::(anonymous namespace)::ResponsesAccumulator"* %20, i64 0, i32 5, i32 0, i32 0, i32 0
  %37 = load %"class.blink::protocol::CacheStorage::Backend::RequestEntriesCallback"*, %"class.blink::protocol::CacheStorage::Backend::RequestEntriesCallback"** %36, align 8
  %38 = bitcast %"class.crdtp::DispatchResponse"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %38) #16
  %39 = bitcast %"class.WTF::String"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %39) #16
  %40 = bitcast %"class.std::__1::basic_string"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %40) #16
  %41 = getelementptr inbounds %"class.blink::(anonymous namespace)::ResponsesAccumulator", %"class.blink::(anonymous namespace)::ResponsesAccumulator"* %20, i64 0, i32 1, i32 0
  call void @_ZNK3WTF6String6Latin1Ev(%"class.std::__1::basic_string"* nonnull sret %6, %"class.WTF::String"* %41) #16
  %42 = bitcast %"class.std::__1::basic_string"* %6 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %43 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %42, i64 0, i32 1, i32 0
  %44 = load i8, i8* %43, align 1
  %45 = icmp slt i8 %44, 0
  %46 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %47 = load i8*, i8** %46, align 8
  %48 = select i1 %45, i8* %47, i8* %40
  %49 = add i32 %34, -1
  %50 = icmp ult i32 %49, 9
  br i1 %50, label %51, label %55

51:                                               ; preds = %31
  %52 = sext i32 %49 to i64
  %53 = getelementptr inbounds [9 x i8*], [9 x i8*]* @"switch.table._ZN4base8internal7InvokerINS0_9BindStateIZN5blink26InspectorCacheStorageAgent21requestCachedResponseERKN3WTF6StringES8_NSt3__110unique_ptrINS9_6vectorINSA_INS3_8protocol12CacheStorage6HeaderENS9_14default_deleteISE_EEEENS9_9allocatorISH_EEEENSF_ISK_EEEENSA_INSD_7Backend29RequestCachedResponseCallbackENSF_ISO_EEEEE3$_4JSQ_EEEFvN4mojo9StructPtrINS3_5mojom5blink11MatchResultEEEEE7RunOnceEPNS0_13BindStateBaseEOSY_", i64 0, i64 %52
  %54 = load i8*, i8** %53, align 8
  br label %55

55:                                               ; preds = %31, %51
  %56 = phi i8* [ %54, %51 ], [ getelementptr inbounds ([1 x i8], [1 x i8]* @.str.2, i64 0, i64 0), %31 ]
  %57 = call %"class.WTF::StringImpl"* (i8*, ...) @_ZN3WTF6String6FormatEPKcz(i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.38, i64 0, i64 0), i8* %48, i8* nonnull %56) #16
  %58 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %5, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %57, %"class.WTF::StringImpl"** %58, align 8
  call void @_ZNK3WTF6String4Utf8ENS_18UTF8ConversionModeE(%"class.std::__1::basic_string"* nonnull sret %4, %"class.WTF::String"* nonnull %5, i32 0) #16
  call void @_ZN5crdtp16DispatchResponse11ServerErrorENSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.crdtp::DispatchResponse"* nonnull sret %3, %"class.std::__1::basic_string"* nonnull %4) #16
  %59 = bitcast %"class.blink::protocol::CacheStorage::Backend::RequestEntriesCallback"* %37 to void (%"class.blink::protocol::CacheStorage::Backend::RequestEntriesCallback"*, %"class.crdtp::DispatchResponse"*)***
  %60 = load void (%"class.blink::protocol::CacheStorage::Backend::RequestEntriesCallback"*, %"class.crdtp::DispatchResponse"*)**, void (%"class.blink::protocol::CacheStorage::Backend::RequestEntriesCallback"*, %"class.crdtp::DispatchResponse"*)*** %59, align 8
  %61 = getelementptr inbounds void (%"class.blink::protocol::CacheStorage::Backend::RequestEntriesCallback"*, %"class.crdtp::DispatchResponse"*)*, void (%"class.blink::protocol::CacheStorage::Backend::RequestEntriesCallback"*, %"class.crdtp::DispatchResponse"*)** %60, i64 1
  %62 = load void (%"class.blink::protocol::CacheStorage::Backend::RequestEntriesCallback"*, %"class.crdtp::DispatchResponse"*)*, void (%"class.blink::protocol::CacheStorage::Backend::RequestEntriesCallback"*, %"class.crdtp::DispatchResponse"*)** %61, align 8
  call void %62(%"class.blink::protocol::CacheStorage::Backend::RequestEntriesCallback"* %37, %"class.crdtp::DispatchResponse"* nonnull dereferenceable(32) %3) #16
  %63 = getelementptr inbounds %"class.crdtp::DispatchResponse", %"class.crdtp::DispatchResponse"* %3, i64 0, i32 1
  %64 = bitcast %"class.std::__1::basic_string"* %63 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %65 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %64, i64 0, i32 1, i32 0
  %66 = load i8, i8* %65, align 1
  %67 = icmp slt i8 %66, 0
  br i1 %67, label %68, label %71

68:                                               ; preds = %55
  %69 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %63, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %70 = load i8*, i8** %69, align 8
  call void @_ZdlPv(i8* %70) #18
  br label %71

71:                                               ; preds = %68, %55
  %72 = bitcast %"class.std::__1::basic_string"* %4 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %73 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %72, i64 0, i32 1, i32 0
  %74 = load i8, i8* %73, align 1
  %75 = icmp slt i8 %74, 0
  br i1 %75, label %76, label %79

76:                                               ; preds = %71
  %77 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %78 = load i8*, i8** %77, align 8
  call void @_ZdlPv(i8* %78) #18
  br label %79

79:                                               ; preds = %76, %71
  %80 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %58, align 8
  %81 = icmp eq %"class.WTF::StringImpl"* %80, null
  br i1 %81, label %95, label %82

82:                                               ; preds = %79
  %83 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %80, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %84 = load atomic i32, i32* %83 monotonic, align 4
  %85 = and i32 %84, 2
  %86 = icmp eq i32 %85, 0
  %87 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %80, i64 0, i32 0
  %88 = load i32, i32* %87, align 4
  br i1 %86, label %89, label %91

89:                                               ; preds = %82
  %90 = add i32 %88, -1
  store i32 %90, i32* %87, align 4
  br label %91

91:                                               ; preds = %89, %82
  %92 = phi i32 [ %90, %89 ], [ %88, %82 ]
  %93 = icmp eq i32 %92, 0
  br i1 %93, label %94, label %95

94:                                               ; preds = %91
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %80) #16
  br label %95

95:                                               ; preds = %94, %91, %79
  %96 = load i8, i8* %43, align 1
  %97 = icmp slt i8 %96, 0
  br i1 %97, label %98, label %100

98:                                               ; preds = %95
  %99 = load i8*, i8** %46, align 8
  call void @_ZdlPv(i8* %99) #18
  br label %100

100:                                              ; preds = %98, %95
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %40) #16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %39) #16
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %38) #16
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %35) #16
  br label %981

101:                                              ; preds = %2
  %102 = getelementptr inbounds %"class.blink::mojom::blink::MatchResult", %"class.blink::mojom::blink::MatchResult"* %25, i64 0, i32 1, i32 0
  %103 = load %"class.mojo::StructPtr.2307"*, %"class.mojo::StructPtr.2307"** %102, align 8
  %104 = getelementptr inbounds %"class.blink::(anonymous namespace)::ResponsesAccumulator", %"class.blink::(anonymous namespace)::ResponsesAccumulator"* %20, i64 0, i32 3
  %105 = getelementptr inbounds %"class.blink::(anonymous namespace)::ResponsesAccumulator", %"class.blink::(anonymous namespace)::ResponsesAccumulator"* %20, i64 0, i32 3, i32 0, i32 0, i32 2
  %106 = load i32, i32* %105, align 4
  %107 = getelementptr inbounds %"class.blink::(anonymous namespace)::ResponsesAccumulator", %"class.blink::(anonymous namespace)::ResponsesAccumulator"* %20, i64 0, i32 2
  %108 = load i32, i32* %107, align 8
  %109 = sub i32 %106, %108
  %110 = bitcast %"class.logging::CheckOpResult"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %110) #16
  %111 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %9, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %111, align 8
  %112 = bitcast %"class.logging::CheckOpResult"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %112) #16
  %113 = icmp ugt i32 %106, %109
  br i1 %113, label %114, label %115

114:                                              ; preds = %101
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %112) #16
  store i8* null, i8** %111, align 8
  br label %124

115:                                              ; preds = %101
  %116 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %109) #16
  %117 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %106) #16
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %8, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.39, i64 0, i64 0), i8* %116, i8* %117) #16
  %118 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %8, i64 0, i32 0
  %119 = load i8*, i8** %118, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %112) #16
  store i8* %119, i8** %111, align 8
  %120 = icmp eq i8* %119, null
  br i1 %120, label %124, label %121

121:                                              ; preds = %115
  %122 = bitcast %"class.logging::CheckError"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %122) #16
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %10, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.18, i64 0, i64 0), i32 1172, %"class.logging::CheckOpResult"* nonnull %9) #16
  %123 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %10) #16
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %10) #16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %122) #16
  br label %124

124:                                              ; preds = %121, %115, %114
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %110) #16
  %125 = getelementptr inbounds %"class.WTF::Vector.2276", %"class.WTF::Vector.2276"* %104, i64 0, i32 0, i32 0, i32 0
  %126 = load %"struct.blink::(anonymous namespace)::RequestResponse"*, %"struct.blink::(anonymous namespace)::RequestResponse"** %125, align 8
  %127 = zext i32 %109 to i64
  %128 = getelementptr inbounds %"struct.blink::(anonymous namespace)::RequestResponse", %"struct.blink::(anonymous namespace)::RequestResponse"* %126, i64 %127
  %129 = inttoptr i64 %22 to %"class.blink::mojom::blink::FetchAPIRequest"*
  %130 = getelementptr inbounds %"class.blink::mojom::blink::FetchAPIRequest", %"class.blink::mojom::blink::FetchAPIRequest"* %129, i64 0, i32 4, i32 4, i32 0, i32 0
  %131 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %130, align 8
  %132 = icmp eq %"class.WTF::StringImpl"* %131, null
  br i1 %132, label %150, label %133

133:                                              ; preds = %124
  %134 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %131, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %135 = load atomic i32, i32* %134 monotonic, align 4
  %136 = and i32 %135, 2
  %137 = icmp eq i32 %136, 0
  br i1 %137, label %138, label %150

138:                                              ; preds = %133
  %139 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %131, i64 0, i32 0
  %140 = load i32, i32* %139, align 4
  %141 = zext i32 %140 to i33
  %142 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %141, i33 1) #16
  %143 = extractvalue { i33, i1 } %142, 1
  %144 = extractvalue { i33, i1 } %142, 0
  %145 = icmp slt i33 %144, 0
  %146 = or i1 %143, %145
  br i1 %146, label %147, label %148, !prof !3

147:                                              ; preds = %138
  call void @llvm.trap() #16
  unreachable

148:                                              ; preds = %138
  %149 = trunc i33 %144 to i32
  store i32 %149, i32* %139, align 4
  br label %150

150:                                              ; preds = %148, %133, %124
  %151 = ptrtoint %"class.WTF::StringImpl"* %131 to i64
  %152 = bitcast %"struct.blink::(anonymous namespace)::RequestResponse"* %128 to i64*
  %153 = getelementptr inbounds %"struct.blink::(anonymous namespace)::RequestResponse", %"struct.blink::(anonymous namespace)::RequestResponse"* %128, i64 0, i32 0, i32 0, i32 0
  %154 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %153, align 8
  store i64 %151, i64* %152, align 8
  %155 = icmp eq %"class.WTF::StringImpl"* %154, null
  br i1 %155, label %169, label %156

156:                                              ; preds = %150
  %157 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %154, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %158 = load atomic i32, i32* %157 monotonic, align 4
  %159 = and i32 %158, 2
  %160 = icmp eq i32 %159, 0
  %161 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %154, i64 0, i32 0
  %162 = load i32, i32* %161, align 4
  br i1 %160, label %163, label %165

163:                                              ; preds = %156
  %164 = add i32 %162, -1
  store i32 %164, i32* %161, align 4
  br label %165

165:                                              ; preds = %163, %156
  %166 = phi i32 [ %164, %163 ], [ %162, %156 ]
  %167 = icmp eq i32 %166, 0
  br i1 %167, label %168, label %169

168:                                              ; preds = %165
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %154) #16
  br label %169

169:                                              ; preds = %168, %165, %150
  %170 = getelementptr inbounds %"struct.blink::(anonymous namespace)::RequestResponse", %"struct.blink::(anonymous namespace)::RequestResponse"* %126, i64 %127, i32 1
  %171 = getelementptr inbounds %"class.blink::mojom::blink::FetchAPIRequest", %"class.blink::mojom::blink::FetchAPIRequest"* %129, i64 0, i32 5, i32 0, i32 0
  %172 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %171, align 8
  %173 = icmp eq %"class.WTF::StringImpl"* %172, null
  br i1 %173, label %191, label %174

174:                                              ; preds = %169
  %175 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %172, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %176 = load atomic i32, i32* %175 monotonic, align 4
  %177 = and i32 %176, 2
  %178 = icmp eq i32 %177, 0
  br i1 %178, label %179, label %191

179:                                              ; preds = %174
  %180 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %172, i64 0, i32 0
  %181 = load i32, i32* %180, align 4
  %182 = zext i32 %181 to i33
  %183 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %182, i33 1) #16
  %184 = extractvalue { i33, i1 } %183, 1
  %185 = extractvalue { i33, i1 } %183, 0
  %186 = icmp slt i33 %185, 0
  %187 = or i1 %184, %186
  br i1 %187, label %188, label %189, !prof !3

188:                                              ; preds = %179
  call void @llvm.trap() #16
  unreachable

189:                                              ; preds = %179
  %190 = trunc i33 %185 to i32
  store i32 %190, i32* %180, align 4
  br label %191

191:                                              ; preds = %189, %174, %169
  %192 = ptrtoint %"class.WTF::StringImpl"* %172 to i64
  %193 = bitcast %"class.WTF::String"* %170 to i64*
  %194 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %170, i64 0, i32 0, i32 0
  %195 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %194, align 8
  store i64 %192, i64* %193, align 8
  %196 = icmp eq %"class.WTF::StringImpl"* %195, null
  br i1 %196, label %210, label %197

197:                                              ; preds = %191
  %198 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %195, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %199 = load atomic i32, i32* %198 monotonic, align 4
  %200 = and i32 %199, 2
  %201 = icmp eq i32 %200, 0
  %202 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %195, i64 0, i32 0
  %203 = load i32, i32* %202, align 4
  br i1 %201, label %204, label %206

204:                                              ; preds = %197
  %205 = add i32 %203, -1
  store i32 %205, i32* %202, align 4
  br label %206

206:                                              ; preds = %204, %197
  %207 = phi i32 [ %205, %204 ], [ %203, %197 ]
  %208 = icmp eq i32 %207, 0
  br i1 %208, label %209, label %210

209:                                              ; preds = %206
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %195) #16
  br label %210

210:                                              ; preds = %209, %206, %191
  %211 = getelementptr inbounds %"class.blink::mojom::blink::FetchAPIRequest", %"class.blink::mojom::blink::FetchAPIRequest"* %129, i64 0, i32 6, i32 0, i32 2
  %212 = load i32, i32* %211, align 4
  %213 = icmp eq i32 %212, 0
  %214 = getelementptr inbounds %"class.blink::mojom::blink::FetchAPIRequest", %"class.blink::mojom::blink::FetchAPIRequest"* %129, i64 0, i32 6, i32 0, i32 0
  %215 = load %"struct.WTF::KeyValuePair.1993"*, %"struct.WTF::KeyValuePair.1993"** %214, align 8
  %216 = getelementptr inbounds %"class.blink::mojom::blink::FetchAPIRequest", %"class.blink::mojom::blink::FetchAPIRequest"* %129, i64 0, i32 6, i32 0, i32 1
  %217 = load i32, i32* %216, align 8
  %218 = zext i32 %217 to i64
  %219 = getelementptr inbounds %"struct.WTF::KeyValuePair.1993", %"struct.WTF::KeyValuePair.1993"* %215, i64 %218
  br i1 %213, label %240, label %220

220:                                              ; preds = %210
  %221 = icmp eq i32 %217, 0
  br i1 %221, label %229, label %222

222:                                              ; preds = %220, %226
  %223 = phi %"struct.WTF::KeyValuePair.1993"* [ %227, %226 ], [ %215, %220 ]
  %224 = bitcast %"struct.WTF::KeyValuePair.1993"* %223 to i64*
  %225 = load i64, i64* %224, align 8
  switch i64 %225, label %229 [
    i64 -1, label %226
    i64 0, label %226
  ]

226:                                              ; preds = %222, %222
  %227 = getelementptr inbounds %"struct.WTF::KeyValuePair.1993", %"struct.WTF::KeyValuePair.1993"* %223, i64 1
  %228 = icmp eq %"struct.WTF::KeyValuePair.1993"* %227, %219
  br i1 %228, label %240, label %222

229:                                              ; preds = %222, %220
  %230 = phi %"struct.WTF::KeyValuePair.1993"* [ %215, %220 ], [ %223, %222 ]
  %231 = icmp eq %"struct.WTF::KeyValuePair.1993"* %230, %219
  br i1 %231, label %240, label %232

232:                                              ; preds = %229
  %233 = bitcast %"class.WTF::AtomicString"* %11 to i8*
  %234 = bitcast %"class.WTF::AtomicString"* %11 to i64*
  %235 = bitcast %"class.WTF::AtomicString"* %12 to i8*
  %236 = bitcast %"class.WTF::AtomicString"* %12 to i64*
  %237 = getelementptr inbounds %"struct.blink::(anonymous namespace)::RequestResponse", %"struct.blink::(anonymous namespace)::RequestResponse"* %126, i64 %127, i32 2, i32 0, i32 0
  %238 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %12, i64 0, i32 0, i32 0, i32 0
  %239 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %11, i64 0, i32 0, i32 0, i32 0
  br label %327

240:                                              ; preds = %226, %474, %464, %471, %229, %210
  %241 = getelementptr inbounds %"class.mojo::StructPtr.2307", %"class.mojo::StructPtr.2307"* %103, i64 0, i32 0, i32 0, i32 0, i32 0
  %242 = load %"class.blink::mojom::blink::FetchAPIResponse"*, %"class.blink::mojom::blink::FetchAPIResponse"** %241, align 8
  %243 = getelementptr inbounds %"class.blink::mojom::blink::FetchAPIResponse", %"class.blink::mojom::blink::FetchAPIResponse"* %242, i64 0, i32 1
  %244 = load i16, i16* %243, align 8
  %245 = zext i16 %244 to i32
  %246 = getelementptr inbounds %"struct.blink::(anonymous namespace)::RequestResponse", %"struct.blink::(anonymous namespace)::RequestResponse"* %126, i64 %127, i32 3
  store i32 %245, i32* %246, align 8
  %247 = load %"class.blink::mojom::blink::FetchAPIResponse"*, %"class.blink::mojom::blink::FetchAPIResponse"** %241, align 8
  %248 = getelementptr inbounds %"struct.blink::(anonymous namespace)::RequestResponse", %"struct.blink::(anonymous namespace)::RequestResponse"* %126, i64 %127, i32 4
  %249 = getelementptr inbounds %"class.blink::mojom::blink::FetchAPIResponse", %"class.blink::mojom::blink::FetchAPIResponse"* %247, i64 0, i32 2, i32 0, i32 0
  %250 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %249, align 8
  %251 = icmp eq %"class.WTF::StringImpl"* %250, null
  br i1 %251, label %269, label %252

252:                                              ; preds = %240
  %253 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %250, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %254 = load atomic i32, i32* %253 monotonic, align 4
  %255 = and i32 %254, 2
  %256 = icmp eq i32 %255, 0
  br i1 %256, label %257, label %269

257:                                              ; preds = %252
  %258 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %250, i64 0, i32 0
  %259 = load i32, i32* %258, align 4
  %260 = zext i32 %259 to i33
  %261 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %260, i33 1) #16
  %262 = extractvalue { i33, i1 } %261, 1
  %263 = extractvalue { i33, i1 } %261, 0
  %264 = icmp slt i33 %263, 0
  %265 = or i1 %262, %264
  br i1 %265, label %266, label %267, !prof !3

266:                                              ; preds = %257
  call void @llvm.trap() #16
  unreachable

267:                                              ; preds = %257
  %268 = trunc i33 %263 to i32
  store i32 %268, i32* %258, align 4
  br label %269

269:                                              ; preds = %267, %252, %240
  %270 = ptrtoint %"class.WTF::StringImpl"* %250 to i64
  %271 = bitcast %"class.WTF::String"* %248 to i64*
  %272 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %248, i64 0, i32 0, i32 0
  %273 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %272, align 8
  store i64 %270, i64* %271, align 8
  %274 = icmp eq %"class.WTF::StringImpl"* %273, null
  br i1 %274, label %288, label %275

275:                                              ; preds = %269
  %276 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %273, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %277 = load atomic i32, i32* %276 monotonic, align 4
  %278 = and i32 %277, 2
  %279 = icmp eq i32 %278, 0
  %280 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %273, i64 0, i32 0
  %281 = load i32, i32* %280, align 4
  br i1 %279, label %282, label %284

282:                                              ; preds = %275
  %283 = add i32 %281, -1
  store i32 %283, i32* %280, align 4
  br label %284

284:                                              ; preds = %282, %275
  %285 = phi i32 [ %283, %282 ], [ %281, %275 ]
  %286 = icmp eq i32 %285, 0
  br i1 %286, label %287, label %288

287:                                              ; preds = %284
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %273) #16
  br label %288

288:                                              ; preds = %287, %284, %269
  %289 = load %"class.blink::mojom::blink::FetchAPIResponse"*, %"class.blink::mojom::blink::FetchAPIResponse"** %241, align 8
  %290 = getelementptr inbounds %"class.blink::mojom::blink::FetchAPIResponse", %"class.blink::mojom::blink::FetchAPIResponse"* %289, i64 0, i32 12
  %291 = call double @_ZNK4base4Time9ToDoubleTEv(%"class.base::Time"* %290) #16
  %292 = getelementptr inbounds %"struct.blink::(anonymous namespace)::RequestResponse", %"struct.blink::(anonymous namespace)::RequestResponse"* %126, i64 %127, i32 5
  store double %291, double* %292, align 8
  %293 = load %"class.blink::mojom::blink::FetchAPIResponse"*, %"class.blink::mojom::blink::FetchAPIResponse"** %241, align 8
  %294 = getelementptr inbounds %"class.blink::mojom::blink::FetchAPIResponse", %"class.blink::mojom::blink::FetchAPIResponse"* %293, i64 0, i32 3
  %295 = load i32, i32* %294, align 8
  %296 = getelementptr inbounds %"struct.blink::(anonymous namespace)::RequestResponse", %"struct.blink::(anonymous namespace)::RequestResponse"* %126, i64 %127, i32 6
  store i32 %295, i32* %296, align 8
  %297 = load %"class.blink::mojom::blink::FetchAPIResponse"*, %"class.blink::mojom::blink::FetchAPIResponse"** %241, align 8
  %298 = getelementptr inbounds %"class.blink::mojom::blink::FetchAPIResponse", %"class.blink::mojom::blink::FetchAPIResponse"* %297, i64 0, i32 7, i32 0, i32 2
  %299 = load i32, i32* %298, align 4
  %300 = icmp eq i32 %299, 0
  %301 = getelementptr inbounds %"class.blink::mojom::blink::FetchAPIResponse", %"class.blink::mojom::blink::FetchAPIResponse"* %297, i64 0, i32 7, i32 0, i32 0
  %302 = load %"struct.WTF::KeyValuePair.1993"*, %"struct.WTF::KeyValuePair.1993"** %301, align 8
  %303 = getelementptr inbounds %"class.blink::mojom::blink::FetchAPIResponse", %"class.blink::mojom::blink::FetchAPIResponse"* %297, i64 0, i32 7, i32 0, i32 1
  %304 = load i32, i32* %303, align 8
  %305 = zext i32 %304 to i64
  %306 = getelementptr inbounds %"struct.WTF::KeyValuePair.1993", %"struct.WTF::KeyValuePair.1993"* %302, i64 %305
  br i1 %300, label %476, label %307

307:                                              ; preds = %288
  %308 = icmp eq i32 %304, 0
  br i1 %308, label %316, label %309

309:                                              ; preds = %307, %313
  %310 = phi %"struct.WTF::KeyValuePair.1993"* [ %314, %313 ], [ %302, %307 ]
  %311 = bitcast %"struct.WTF::KeyValuePair.1993"* %310 to i64*
  %312 = load i64, i64* %311, align 8
  switch i64 %312, label %316 [
    i64 -1, label %313
    i64 0, label %313
  ]

313:                                              ; preds = %309, %309
  %314 = getelementptr inbounds %"struct.WTF::KeyValuePair.1993", %"struct.WTF::KeyValuePair.1993"* %310, i64 1
  %315 = icmp eq %"struct.WTF::KeyValuePair.1993"* %314, %306
  br i1 %315, label %476, label %309

316:                                              ; preds = %309, %307
  %317 = phi %"struct.WTF::KeyValuePair.1993"* [ %302, %307 ], [ %310, %309 ]
  %318 = icmp eq %"struct.WTF::KeyValuePair.1993"* %317, %306
  br i1 %318, label %476, label %319

319:                                              ; preds = %316
  %320 = bitcast %"class.WTF::AtomicString"* %13 to i8*
  %321 = bitcast %"class.WTF::AtomicString"* %13 to i64*
  %322 = bitcast %"class.WTF::AtomicString"* %14 to i8*
  %323 = bitcast %"class.WTF::AtomicString"* %14 to i64*
  %324 = getelementptr inbounds %"struct.blink::(anonymous namespace)::RequestResponse", %"struct.blink::(anonymous namespace)::RequestResponse"* %126, i64 %127, i32 8, i32 0, i32 0
  %325 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %14, i64 0, i32 0, i32 0, i32 0
  %326 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %13, i64 0, i32 0, i32 0, i32 0
  br label %480

327:                                              ; preds = %474, %232
  %328 = phi %"struct.WTF::KeyValuePair.1993"* [ %230, %232 ], [ %468, %474 ]
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %233) #16
  %329 = getelementptr inbounds %"struct.WTF::KeyValuePair.1993", %"struct.WTF::KeyValuePair.1993"* %328, i64 0, i32 0, i32 0, i32 0
  %330 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %329, align 8
  %331 = icmp eq %"class.WTF::StringImpl"* %330, null
  br i1 %331, label %355, label %332

332:                                              ; preds = %327
  %333 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %330, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %334 = load atomic i32, i32* %333 acquire, align 4
  %335 = and i32 %334, 4
  %336 = icmp eq i32 %335, 0
  br i1 %336, label %353, label %337

337:                                              ; preds = %332
  %338 = load atomic i32, i32* %333 monotonic, align 4
  %339 = and i32 %338, 2
  %340 = icmp eq i32 %339, 0
  br i1 %340, label %341, label %355

341:                                              ; preds = %337
  %342 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %330, i64 0, i32 0
  %343 = load i32, i32* %342, align 4
  %344 = zext i32 %343 to i33
  %345 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %344, i33 1) #16
  %346 = extractvalue { i33, i1 } %345, 1
  %347 = extractvalue { i33, i1 } %345, 0
  %348 = icmp slt i33 %347, 0
  %349 = or i1 %346, %348
  br i1 %349, label %350, label %351, !prof !3

350:                                              ; preds = %341
  call void @llvm.trap() #16
  unreachable

351:                                              ; preds = %341
  %352 = trunc i33 %347 to i32
  store i32 %352, i32* %342, align 4
  br label %355

353:                                              ; preds = %332
  %354 = call %"class.WTF::StringImpl"* @_ZN3WTF12AtomicString11AddSlowCaseEPNS_10StringImplE(%"class.WTF::StringImpl"* nonnull %330) #16
  br label %355

355:                                              ; preds = %353, %351, %337, %327
  %356 = phi %"class.WTF::StringImpl"* [ %354, %353 ], [ %330, %337 ], [ %330, %351 ], [ null, %327 ]
  %357 = ptrtoint %"class.WTF::StringImpl"* %356 to i64
  store i64 %357, i64* %234, align 8
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %235) #16
  %358 = getelementptr inbounds %"struct.WTF::KeyValuePair.1993", %"struct.WTF::KeyValuePair.1993"* %328, i64 0, i32 1, i32 0, i32 0
  %359 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %358, align 8
  %360 = icmp eq %"class.WTF::StringImpl"* %359, null
  br i1 %360, label %384, label %361

361:                                              ; preds = %355
  %362 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %359, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %363 = load atomic i32, i32* %362 acquire, align 4
  %364 = and i32 %363, 4
  %365 = icmp eq i32 %364, 0
  br i1 %365, label %382, label %366

366:                                              ; preds = %361
  %367 = load atomic i32, i32* %362 monotonic, align 4
  %368 = and i32 %367, 2
  %369 = icmp eq i32 %368, 0
  br i1 %369, label %370, label %384

370:                                              ; preds = %366
  %371 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %359, i64 0, i32 0
  %372 = load i32, i32* %371, align 4
  %373 = zext i32 %372 to i33
  %374 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %373, i33 1) #16
  %375 = extractvalue { i33, i1 } %374, 1
  %376 = extractvalue { i33, i1 } %374, 0
  %377 = icmp slt i33 %376, 0
  %378 = or i1 %375, %377
  br i1 %378, label %379, label %380, !prof !3

379:                                              ; preds = %370
  call void @llvm.trap() #16
  unreachable

380:                                              ; preds = %370
  %381 = trunc i33 %376 to i32
  store i32 %381, i32* %371, align 4
  br label %384

382:                                              ; preds = %361
  %383 = call %"class.WTF::StringImpl"* @_ZN3WTF12AtomicString11AddSlowCaseEPNS_10StringImplE(%"class.WTF::StringImpl"* nonnull %359) #16
  br label %384

384:                                              ; preds = %382, %380, %366, %355
  %385 = phi %"class.WTF::StringImpl"* [ %383, %382 ], [ %359, %366 ], [ %359, %380 ], [ null, %355 ]
  %386 = ptrtoint %"class.WTF::StringImpl"* %385 to i64
  store i64 %386, i64* %236, align 8
  %387 = call { %"struct.WTF::KeyValuePair.2283"*, i8 } @_ZN3WTF9HashTableINS_12AtomicStringENS_12KeyValuePairIS1_S1_EENS_24KeyValuePairKeyExtractorENS_15CaseFoldingHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EES8_EES8_NS_18PartitionAllocatorEE6insertINS_17HashMapTranslatorIS9_S5_SA_EERKS1_SG_EENS_18HashTableAddResultISB_S3_EEOT0_OT1_(%"class.WTF::HashTable.2280"* %237, %"class.WTF::AtomicString"* nonnull dereferenceable(8) %11, %"class.WTF::AtomicString"* nonnull dereferenceable(8) %12) #16
  %388 = extractvalue { %"struct.WTF::KeyValuePair.2283"*, i8 } %387, 1
  %389 = and i8 %388, 1
  %390 = icmp eq i8 %389, 0
  br i1 %390, label %391, label %432

391:                                              ; preds = %384
  %392 = extractvalue { %"struct.WTF::KeyValuePair.2283"*, i8 } %387, 0
  %393 = getelementptr inbounds %"struct.WTF::KeyValuePair.2283", %"struct.WTF::KeyValuePair.2283"* %392, i64 0, i32 1
  %394 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %238, align 8
  %395 = icmp eq %"class.WTF::StringImpl"* %394, null
  br i1 %395, label %413, label %396

396:                                              ; preds = %391
  %397 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %394, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %398 = load atomic i32, i32* %397 monotonic, align 4
  %399 = and i32 %398, 2
  %400 = icmp eq i32 %399, 0
  br i1 %400, label %401, label %413

401:                                              ; preds = %396
  %402 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %394, i64 0, i32 0
  %403 = load i32, i32* %402, align 4
  %404 = zext i32 %403 to i33
  %405 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %404, i33 1) #16
  %406 = extractvalue { i33, i1 } %405, 1
  %407 = extractvalue { i33, i1 } %405, 0
  %408 = icmp slt i33 %407, 0
  %409 = or i1 %406, %408
  br i1 %409, label %410, label %411, !prof !3

410:                                              ; preds = %401
  call void @llvm.trap() #16
  unreachable

411:                                              ; preds = %401
  %412 = trunc i33 %407 to i32
  store i32 %412, i32* %402, align 4
  br label %413

413:                                              ; preds = %411, %396, %391
  %414 = ptrtoint %"class.WTF::StringImpl"* %394 to i64
  %415 = bitcast %"class.WTF::AtomicString"* %393 to i64*
  %416 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %393, i64 0, i32 0, i32 0, i32 0
  %417 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %416, align 8
  store i64 %414, i64* %415, align 8
  %418 = icmp eq %"class.WTF::StringImpl"* %417, null
  br i1 %418, label %432, label %419

419:                                              ; preds = %413
  %420 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %417, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %421 = load atomic i32, i32* %420 monotonic, align 4
  %422 = and i32 %421, 2
  %423 = icmp eq i32 %422, 0
  %424 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %417, i64 0, i32 0
  %425 = load i32, i32* %424, align 4
  br i1 %423, label %426, label %428

426:                                              ; preds = %419
  %427 = add i32 %425, -1
  store i32 %427, i32* %424, align 4
  br label %428

428:                                              ; preds = %426, %419
  %429 = phi i32 [ %427, %426 ], [ %425, %419 ]
  %430 = icmp eq i32 %429, 0
  br i1 %430, label %431, label %432

431:                                              ; preds = %428
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %417) #16
  br label %432

432:                                              ; preds = %431, %428, %413, %384
  %433 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %238, align 8
  %434 = icmp eq %"class.WTF::StringImpl"* %433, null
  br i1 %434, label %448, label %435

435:                                              ; preds = %432
  %436 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %433, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %437 = load atomic i32, i32* %436 monotonic, align 4
  %438 = and i32 %437, 2
  %439 = icmp eq i32 %438, 0
  %440 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %433, i64 0, i32 0
  %441 = load i32, i32* %440, align 4
  br i1 %439, label %442, label %444

442:                                              ; preds = %435
  %443 = add i32 %441, -1
  store i32 %443, i32* %440, align 4
  br label %444

444:                                              ; preds = %442, %435
  %445 = phi i32 [ %443, %442 ], [ %441, %435 ]
  %446 = icmp eq i32 %445, 0
  br i1 %446, label %447, label %448

447:                                              ; preds = %444
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %433) #16
  br label %448

448:                                              ; preds = %447, %444, %432
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %235) #16
  %449 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %239, align 8
  %450 = icmp eq %"class.WTF::StringImpl"* %449, null
  br i1 %450, label %464, label %451

451:                                              ; preds = %448
  %452 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %449, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %453 = load atomic i32, i32* %452 monotonic, align 4
  %454 = and i32 %453, 2
  %455 = icmp eq i32 %454, 0
  %456 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %449, i64 0, i32 0
  %457 = load i32, i32* %456, align 4
  br i1 %455, label %458, label %460

458:                                              ; preds = %451
  %459 = add i32 %457, -1
  store i32 %459, i32* %456, align 4
  br label %460

460:                                              ; preds = %458, %451
  %461 = phi i32 [ %459, %458 ], [ %457, %451 ]
  %462 = icmp eq i32 %461, 0
  br i1 %462, label %463, label %464

463:                                              ; preds = %460
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %449) #16
  br label %464

464:                                              ; preds = %463, %460, %448
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %233) #16
  %465 = getelementptr inbounds %"struct.WTF::KeyValuePair.1993", %"struct.WTF::KeyValuePair.1993"* %328, i64 1
  %466 = icmp eq %"struct.WTF::KeyValuePair.1993"* %465, %219
  br i1 %466, label %240, label %467

467:                                              ; preds = %464, %471
  %468 = phi %"struct.WTF::KeyValuePair.1993"* [ %472, %471 ], [ %465, %464 ]
  %469 = bitcast %"struct.WTF::KeyValuePair.1993"* %468 to i64*
  %470 = load i64, i64* %469, align 8
  switch i64 %470, label %474 [
    i64 -1, label %471
    i64 0, label %471
  ]

471:                                              ; preds = %467, %467
  %472 = getelementptr inbounds %"struct.WTF::KeyValuePair.1993", %"struct.WTF::KeyValuePair.1993"* %468, i64 1
  %473 = icmp eq %"struct.WTF::KeyValuePair.1993"* %472, %219
  br i1 %473, label %240, label %467

474:                                              ; preds = %467
  %475 = icmp eq %"struct.WTF::KeyValuePair.1993"* %468, %219
  br i1 %475, label %240, label %327

476:                                              ; preds = %313, %627, %617, %624, %316, %288
  %477 = load i32, i32* %107, align 8
  %478 = add nsw i32 %477, -1
  store i32 %478, i32* %107, align 8
  %479 = icmp eq i32 %478, 0
  br i1 %479, label %629, label %981

480:                                              ; preds = %627, %319
  %481 = phi %"struct.WTF::KeyValuePair.1993"* [ %317, %319 ], [ %621, %627 ]
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %320) #16
  %482 = getelementptr inbounds %"struct.WTF::KeyValuePair.1993", %"struct.WTF::KeyValuePair.1993"* %481, i64 0, i32 0, i32 0, i32 0
  %483 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %482, align 8
  %484 = icmp eq %"class.WTF::StringImpl"* %483, null
  br i1 %484, label %508, label %485

485:                                              ; preds = %480
  %486 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %483, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %487 = load atomic i32, i32* %486 acquire, align 4
  %488 = and i32 %487, 4
  %489 = icmp eq i32 %488, 0
  br i1 %489, label %506, label %490

490:                                              ; preds = %485
  %491 = load atomic i32, i32* %486 monotonic, align 4
  %492 = and i32 %491, 2
  %493 = icmp eq i32 %492, 0
  br i1 %493, label %494, label %508

494:                                              ; preds = %490
  %495 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %483, i64 0, i32 0
  %496 = load i32, i32* %495, align 4
  %497 = zext i32 %496 to i33
  %498 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %497, i33 1) #16
  %499 = extractvalue { i33, i1 } %498, 1
  %500 = extractvalue { i33, i1 } %498, 0
  %501 = icmp slt i33 %500, 0
  %502 = or i1 %499, %501
  br i1 %502, label %503, label %504, !prof !3

503:                                              ; preds = %494
  call void @llvm.trap() #16
  unreachable

504:                                              ; preds = %494
  %505 = trunc i33 %500 to i32
  store i32 %505, i32* %495, align 4
  br label %508

506:                                              ; preds = %485
  %507 = call %"class.WTF::StringImpl"* @_ZN3WTF12AtomicString11AddSlowCaseEPNS_10StringImplE(%"class.WTF::StringImpl"* nonnull %483) #16
  br label %508

508:                                              ; preds = %506, %504, %490, %480
  %509 = phi %"class.WTF::StringImpl"* [ %507, %506 ], [ %483, %490 ], [ %483, %504 ], [ null, %480 ]
  %510 = ptrtoint %"class.WTF::StringImpl"* %509 to i64
  store i64 %510, i64* %321, align 8
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %322) #16
  %511 = getelementptr inbounds %"struct.WTF::KeyValuePair.1993", %"struct.WTF::KeyValuePair.1993"* %481, i64 0, i32 1, i32 0, i32 0
  %512 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %511, align 8
  %513 = icmp eq %"class.WTF::StringImpl"* %512, null
  br i1 %513, label %537, label %514

514:                                              ; preds = %508
  %515 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %512, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %516 = load atomic i32, i32* %515 acquire, align 4
  %517 = and i32 %516, 4
  %518 = icmp eq i32 %517, 0
  br i1 %518, label %535, label %519

519:                                              ; preds = %514
  %520 = load atomic i32, i32* %515 monotonic, align 4
  %521 = and i32 %520, 2
  %522 = icmp eq i32 %521, 0
  br i1 %522, label %523, label %537

523:                                              ; preds = %519
  %524 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %512, i64 0, i32 0
  %525 = load i32, i32* %524, align 4
  %526 = zext i32 %525 to i33
  %527 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %526, i33 1) #16
  %528 = extractvalue { i33, i1 } %527, 1
  %529 = extractvalue { i33, i1 } %527, 0
  %530 = icmp slt i33 %529, 0
  %531 = or i1 %528, %530
  br i1 %531, label %532, label %533, !prof !3

532:                                              ; preds = %523
  call void @llvm.trap() #16
  unreachable

533:                                              ; preds = %523
  %534 = trunc i33 %529 to i32
  store i32 %534, i32* %524, align 4
  br label %537

535:                                              ; preds = %514
  %536 = call %"class.WTF::StringImpl"* @_ZN3WTF12AtomicString11AddSlowCaseEPNS_10StringImplE(%"class.WTF::StringImpl"* nonnull %512) #16
  br label %537

537:                                              ; preds = %535, %533, %519, %508
  %538 = phi %"class.WTF::StringImpl"* [ %536, %535 ], [ %512, %519 ], [ %512, %533 ], [ null, %508 ]
  %539 = ptrtoint %"class.WTF::StringImpl"* %538 to i64
  store i64 %539, i64* %323, align 8
  %540 = call { %"struct.WTF::KeyValuePair.2283"*, i8 } @_ZN3WTF9HashTableINS_12AtomicStringENS_12KeyValuePairIS1_S1_EENS_24KeyValuePairKeyExtractorENS_15CaseFoldingHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EES8_EES8_NS_18PartitionAllocatorEE6insertINS_17HashMapTranslatorIS9_S5_SA_EERKS1_SG_EENS_18HashTableAddResultISB_S3_EEOT0_OT1_(%"class.WTF::HashTable.2280"* %324, %"class.WTF::AtomicString"* nonnull dereferenceable(8) %13, %"class.WTF::AtomicString"* nonnull dereferenceable(8) %14) #16
  %541 = extractvalue { %"struct.WTF::KeyValuePair.2283"*, i8 } %540, 1
  %542 = and i8 %541, 1
  %543 = icmp eq i8 %542, 0
  br i1 %543, label %544, label %585

544:                                              ; preds = %537
  %545 = extractvalue { %"struct.WTF::KeyValuePair.2283"*, i8 } %540, 0
  %546 = getelementptr inbounds %"struct.WTF::KeyValuePair.2283", %"struct.WTF::KeyValuePair.2283"* %545, i64 0, i32 1
  %547 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %325, align 8
  %548 = icmp eq %"class.WTF::StringImpl"* %547, null
  br i1 %548, label %566, label %549

549:                                              ; preds = %544
  %550 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %547, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %551 = load atomic i32, i32* %550 monotonic, align 4
  %552 = and i32 %551, 2
  %553 = icmp eq i32 %552, 0
  br i1 %553, label %554, label %566

554:                                              ; preds = %549
  %555 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %547, i64 0, i32 0
  %556 = load i32, i32* %555, align 4
  %557 = zext i32 %556 to i33
  %558 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %557, i33 1) #16
  %559 = extractvalue { i33, i1 } %558, 1
  %560 = extractvalue { i33, i1 } %558, 0
  %561 = icmp slt i33 %560, 0
  %562 = or i1 %559, %561
  br i1 %562, label %563, label %564, !prof !3

563:                                              ; preds = %554
  call void @llvm.trap() #16
  unreachable

564:                                              ; preds = %554
  %565 = trunc i33 %560 to i32
  store i32 %565, i32* %555, align 4
  br label %566

566:                                              ; preds = %564, %549, %544
  %567 = ptrtoint %"class.WTF::StringImpl"* %547 to i64
  %568 = bitcast %"class.WTF::AtomicString"* %546 to i64*
  %569 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %546, i64 0, i32 0, i32 0, i32 0
  %570 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %569, align 8
  store i64 %567, i64* %568, align 8
  %571 = icmp eq %"class.WTF::StringImpl"* %570, null
  br i1 %571, label %585, label %572

572:                                              ; preds = %566
  %573 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %570, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %574 = load atomic i32, i32* %573 monotonic, align 4
  %575 = and i32 %574, 2
  %576 = icmp eq i32 %575, 0
  %577 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %570, i64 0, i32 0
  %578 = load i32, i32* %577, align 4
  br i1 %576, label %579, label %581

579:                                              ; preds = %572
  %580 = add i32 %578, -1
  store i32 %580, i32* %577, align 4
  br label %581

581:                                              ; preds = %579, %572
  %582 = phi i32 [ %580, %579 ], [ %578, %572 ]
  %583 = icmp eq i32 %582, 0
  br i1 %583, label %584, label %585

584:                                              ; preds = %581
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %570) #16
  br label %585

585:                                              ; preds = %584, %581, %566, %537
  %586 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %325, align 8
  %587 = icmp eq %"class.WTF::StringImpl"* %586, null
  br i1 %587, label %601, label %588

588:                                              ; preds = %585
  %589 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %586, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %590 = load atomic i32, i32* %589 monotonic, align 4
  %591 = and i32 %590, 2
  %592 = icmp eq i32 %591, 0
  %593 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %586, i64 0, i32 0
  %594 = load i32, i32* %593, align 4
  br i1 %592, label %595, label %597

595:                                              ; preds = %588
  %596 = add i32 %594, -1
  store i32 %596, i32* %593, align 4
  br label %597

597:                                              ; preds = %595, %588
  %598 = phi i32 [ %596, %595 ], [ %594, %588 ]
  %599 = icmp eq i32 %598, 0
  br i1 %599, label %600, label %601

600:                                              ; preds = %597
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %586) #16
  br label %601

601:                                              ; preds = %600, %597, %585
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %322) #16
  %602 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %326, align 8
  %603 = icmp eq %"class.WTF::StringImpl"* %602, null
  br i1 %603, label %617, label %604

604:                                              ; preds = %601
  %605 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %602, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %606 = load atomic i32, i32* %605 monotonic, align 4
  %607 = and i32 %606, 2
  %608 = icmp eq i32 %607, 0
  %609 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %602, i64 0, i32 0
  %610 = load i32, i32* %609, align 4
  br i1 %608, label %611, label %613

611:                                              ; preds = %604
  %612 = add i32 %610, -1
  store i32 %612, i32* %609, align 4
  br label %613

613:                                              ; preds = %611, %604
  %614 = phi i32 [ %612, %611 ], [ %610, %604 ]
  %615 = icmp eq i32 %614, 0
  br i1 %615, label %616, label %617

616:                                              ; preds = %613
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %602) #16
  br label %617

617:                                              ; preds = %616, %613, %601
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %320) #16
  %618 = getelementptr inbounds %"struct.WTF::KeyValuePair.1993", %"struct.WTF::KeyValuePair.1993"* %481, i64 1
  %619 = icmp eq %"struct.WTF::KeyValuePair.1993"* %618, %306
  br i1 %619, label %476, label %620

620:                                              ; preds = %617, %624
  %621 = phi %"struct.WTF::KeyValuePair.1993"* [ %625, %624 ], [ %618, %617 ]
  %622 = bitcast %"struct.WTF::KeyValuePair.1993"* %621 to i64*
  %623 = load i64, i64* %622, align 8
  switch i64 %623, label %627 [
    i64 -1, label %624
    i64 0, label %624
  ]

624:                                              ; preds = %620, %620
  %625 = getelementptr inbounds %"struct.WTF::KeyValuePair.1993", %"struct.WTF::KeyValuePair.1993"* %621, i64 1
  %626 = icmp eq %"struct.WTF::KeyValuePair.1993"* %625, %306
  br i1 %626, label %476, label %620

627:                                              ; preds = %620
  %628 = icmp eq %"struct.WTF::KeyValuePair.1993"* %621, %306
  br i1 %628, label %476, label %480

629:                                              ; preds = %476
  %630 = load %"struct.blink::(anonymous namespace)::RequestResponse"*, %"struct.blink::(anonymous namespace)::RequestResponse"** %125, align 8
  %631 = load i32, i32* %105, align 4
  %632 = zext i32 %631 to i64
  %633 = getelementptr inbounds %"struct.blink::(anonymous namespace)::RequestResponse", %"struct.blink::(anonymous namespace)::RequestResponse"* %630, i64 %632
  call fastcc void @_ZNSt3__16__sortIRZN5blink12_GLOBAL__N_120ResponsesAccumulator22AddRequestResponsePairERKN4mojo9StructPtrINS1_5mojom5blink15FetchAPIRequestEEERKNS5_INS7_16FetchAPIResponseEEEEUlRKNS2_15RequestResponseESI_E_PSG_EEvT0_SM_T_(%"struct.blink::(anonymous namespace)::RequestResponse"* %630, %"struct.blink::(anonymous namespace)::RequestResponse"* %633) #16
  %634 = load i32, i32* %105, align 4
  %635 = getelementptr inbounds %"class.blink::(anonymous namespace)::ResponsesAccumulator", %"class.blink::(anonymous namespace)::ResponsesAccumulator"* %20, i64 0, i32 1, i32 1
  %636 = load i32, i32* %635, align 8
  %637 = icmp sgt i32 %636, 0
  br i1 %637, label %638, label %639

638:                                              ; preds = %629
  call fastcc void @_ZN3WTF6VectorIN5blink12_GLOBAL__N_115RequestResponseELj0ENS_18PartitionAllocatorEE7EraseAtEjj(%"class.WTF::Vector.2276"* %104, i32 0, i32 %636) #16
  br label %639

639:                                              ; preds = %638, %629
  %640 = getelementptr inbounds %"class.blink::(anonymous namespace)::ResponsesAccumulator", %"class.blink::(anonymous namespace)::ResponsesAccumulator"* %20, i64 0, i32 1, i32 2
  %641 = load i32, i32* %640, align 4
  %642 = icmp eq i32 %641, -1
  br i1 %642, label %650, label %643

643:                                              ; preds = %639
  %644 = sext i32 %641 to i64
  %645 = load i32, i32* %105, align 4
  %646 = zext i32 %645 to i64
  %647 = icmp ult i64 %644, %646
  br i1 %647, label %648, label %650

648:                                              ; preds = %643
  %649 = sub i32 %645, %641
  call fastcc void @_ZN3WTF6VectorIN5blink12_GLOBAL__N_115RequestResponseELj0ENS_18PartitionAllocatorEE7EraseAtEjj(%"class.WTF::Vector.2276"* %104, i32 %641, i32 %649) #16
  br label %650

650:                                              ; preds = %648, %643, %639
  %651 = call i8* @_Znwm(i64 24) #18
  %652 = bitcast i8* %651 to %"class.std::__1::vector.2254"*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %651, i8 0, i64 24, i1 false) #16
  %653 = load %"struct.blink::(anonymous namespace)::RequestResponse"*, %"struct.blink::(anonymous namespace)::RequestResponse"** %125, align 8
  %654 = load i32, i32* %105, align 4
  %655 = zext i32 %654 to i64
  %656 = getelementptr inbounds %"struct.blink::(anonymous namespace)::RequestResponse", %"struct.blink::(anonymous namespace)::RequestResponse"* %653, i64 %655
  %657 = icmp eq i32 %654, 0
  br i1 %657, label %670, label %658

658:                                              ; preds = %650
  %659 = bitcast %"class.std::__1::unique_ptr.2256"* %15 to i8*
  %660 = getelementptr inbounds %"class.std::__1::unique_ptr.2256", %"class.std::__1::unique_ptr.2256"* %15, i64 0, i32 0, i32 0, i32 0
  %661 = bitcast %"class.WTF::String"* %7 to i8*
  %662 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %7, i64 0, i32 0, i32 0
  %663 = bitcast %"class.std::__1::unique_ptr.2256"* %15 to i8**
  %664 = getelementptr inbounds i8, i8* %651, i64 8
  %665 = bitcast i8* %664 to %"class.std::__1::unique_ptr.2256"**
  %666 = getelementptr inbounds i8, i8* %651, i64 16
  %667 = bitcast i8* %666 to %"class.std::__1::unique_ptr.2256"**
  %668 = bitcast %"class.std::__1::unique_ptr.2256"* %15 to i64*
  %669 = bitcast i8* %664 to i64*
  br label %677

670:                                              ; preds = %978, %650
  %671 = getelementptr inbounds %"class.blink::(anonymous namespace)::ResponsesAccumulator", %"class.blink::(anonymous namespace)::ResponsesAccumulator"* %20, i64 0, i32 5, i32 0, i32 0, i32 0
  %672 = load %"class.blink::protocol::CacheStorage::Backend::RequestEntriesCallback"*, %"class.blink::protocol::CacheStorage::Backend::RequestEntriesCallback"** %671, align 8
  %673 = uitofp i32 %634 to double
  %674 = bitcast %"class.blink::protocol::CacheStorage::Backend::RequestEntriesCallback"* %672 to void (%"class.blink::protocol::CacheStorage::Backend::RequestEntriesCallback"*, %"class.std::__1::vector.2254"*, double)***
  %675 = load void (%"class.blink::protocol::CacheStorage::Backend::RequestEntriesCallback"*, %"class.std::__1::vector.2254"*, double)**, void (%"class.blink::protocol::CacheStorage::Backend::RequestEntriesCallback"*, %"class.std::__1::vector.2254"*, double)*** %674, align 8
  %676 = load void (%"class.blink::protocol::CacheStorage::Backend::RequestEntriesCallback"*, %"class.std::__1::vector.2254"*, double)*, void (%"class.blink::protocol::CacheStorage::Backend::RequestEntriesCallback"*, %"class.std::__1::vector.2254"*, double)** %675, align 8
  call void %676(%"class.blink::protocol::CacheStorage::Backend::RequestEntriesCallback"* %672, %"class.std::__1::vector.2254"* nonnull %652, double %673) #16
  br label %981

677:                                              ; preds = %978, %658
  %678 = phi %"struct.blink::(anonymous namespace)::RequestResponse"* [ %653, %658 ], [ %979, %978 ]
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %659) #16
  store %"class.blink::protocol::CacheStorage::DataEntry"* inttoptr (i64 -6148914691236517206 to %"class.blink::protocol::CacheStorage::DataEntry"*), %"class.blink::protocol::CacheStorage::DataEntry"** %660, align 8
  %679 = call i8* @_Znwm(i64 72) #18
  %680 = bitcast i8* %679 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN5blink8protocol12CacheStorage9DataEntryE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %680, align 8
  %681 = getelementptr inbounds i8, i8* %679, i64 8
  %682 = getelementptr inbounds i8, i8* %679, i64 48
  call void @llvm.memset.p0i8.i64(i8* align 8 %681, i8 0, i64 36, i1 false) #16
  call void @llvm.memset.p0i8.i64(i8* align 8 %682, i8 0, i64 24, i1 false) #16
  %683 = getelementptr inbounds %"struct.blink::(anonymous namespace)::RequestResponse", %"struct.blink::(anonymous namespace)::RequestResponse"* %678, i64 0, i32 0, i32 0, i32 0
  %684 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %683, align 8
  %685 = icmp eq %"class.WTF::StringImpl"* %684, null
  br i1 %685, label %701, label %686

686:                                              ; preds = %677
  %687 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %684, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %688 = load atomic i32, i32* %687 monotonic, align 4
  %689 = and i32 %688, 2
  %690 = icmp eq i32 %689, 0
  br i1 %690, label %691, label %701

691:                                              ; preds = %686
  %692 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %684, i64 0, i32 0
  %693 = load i32, i32* %692, align 4
  %694 = zext i32 %693 to i33
  %695 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %694, i33 1) #16
  %696 = extractvalue { i33, i1 } %695, 1
  %697 = extractvalue { i33, i1 } %695, 0
  %698 = icmp slt i33 %697, 0
  %699 = or i1 %696, %698
  br i1 %699, label %700, label %704, !prof !3

700:                                              ; preds = %691
  call void @llvm.trap() #16
  unreachable

701:                                              ; preds = %686, %677
  %702 = ptrtoint %"class.WTF::StringImpl"* %684 to i64
  %703 = bitcast i8* %681 to i64*
  store i64 %702, i64* %703, align 8
  br label %724

704:                                              ; preds = %691
  %705 = trunc i33 %697 to i32
  store i32 %705, i32* %692, align 4
  %706 = bitcast i8* %681 to %"class.WTF::StringImpl"**
  %707 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %706, align 8
  %708 = ptrtoint %"class.WTF::StringImpl"* %684 to i64
  %709 = bitcast i8* %681 to i64*
  store i64 %708, i64* %709, align 8
  %710 = icmp eq %"class.WTF::StringImpl"* %707, null
  br i1 %710, label %724, label %711

711:                                              ; preds = %704
  %712 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %707, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %713 = load atomic i32, i32* %712 monotonic, align 4
  %714 = and i32 %713, 2
  %715 = icmp eq i32 %714, 0
  %716 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %707, i64 0, i32 0
  %717 = load i32, i32* %716, align 4
  br i1 %715, label %718, label %720

718:                                              ; preds = %711
  %719 = add i32 %717, -1
  store i32 %719, i32* %716, align 4
  br label %720

720:                                              ; preds = %718, %711
  %721 = phi i32 [ %719, %718 ], [ %717, %711 ]
  %722 = icmp eq i32 %721, 0
  br i1 %722, label %723, label %724

723:                                              ; preds = %720
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %707) #16
  br label %724

724:                                              ; preds = %723, %720, %704, %701
  %725 = getelementptr inbounds i8, i8* %679, i64 16
  %726 = getelementptr inbounds %"struct.blink::(anonymous namespace)::RequestResponse", %"struct.blink::(anonymous namespace)::RequestResponse"* %678, i64 0, i32 1, i32 0, i32 0
  %727 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %726, align 8
  %728 = icmp eq %"class.WTF::StringImpl"* %727, null
  br i1 %728, label %746, label %729

729:                                              ; preds = %724
  %730 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %727, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %731 = load atomic i32, i32* %730 monotonic, align 4
  %732 = and i32 %731, 2
  %733 = icmp eq i32 %732, 0
  br i1 %733, label %734, label %746

734:                                              ; preds = %729
  %735 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %727, i64 0, i32 0
  %736 = load i32, i32* %735, align 4
  %737 = zext i32 %736 to i33
  %738 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %737, i33 1) #16
  %739 = extractvalue { i33, i1 } %738, 1
  %740 = extractvalue { i33, i1 } %738, 0
  %741 = icmp slt i33 %740, 0
  %742 = or i1 %739, %741
  br i1 %742, label %743, label %744, !prof !3

743:                                              ; preds = %734
  call void @llvm.trap() #16
  unreachable

744:                                              ; preds = %734
  %745 = trunc i33 %740 to i32
  store i32 %745, i32* %735, align 4
  br label %746

746:                                              ; preds = %744, %729, %724
  %747 = ptrtoint %"class.WTF::StringImpl"* %727 to i64
  %748 = bitcast i8* %725 to i64*
  %749 = bitcast i8* %725 to %"class.WTF::StringImpl"**
  %750 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %749, align 8
  store i64 %747, i64* %748, align 8
  %751 = icmp eq %"class.WTF::StringImpl"* %750, null
  br i1 %751, label %765, label %752

752:                                              ; preds = %746
  %753 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %750, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %754 = load atomic i32, i32* %753 monotonic, align 4
  %755 = and i32 %754, 2
  %756 = icmp eq i32 %755, 0
  %757 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %750, i64 0, i32 0
  %758 = load i32, i32* %757, align 4
  br i1 %756, label %759, label %761

759:                                              ; preds = %752
  %760 = add i32 %758, -1
  store i32 %760, i32* %757, align 4
  br label %761

761:                                              ; preds = %759, %752
  %762 = phi i32 [ %760, %759 ], [ %758, %752 ]
  %763 = icmp eq i32 %762, 0
  br i1 %763, label %764, label %765

764:                                              ; preds = %761
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %750) #16
  br label %765

765:                                              ; preds = %764, %761, %746
  %766 = getelementptr inbounds %"struct.blink::(anonymous namespace)::RequestResponse", %"struct.blink::(anonymous namespace)::RequestResponse"* %678, i64 0, i32 2
  %767 = call fastcc %"class.std::__1::vector.1960"* @_ZN5blink12_GLOBAL__N_120ResponsesAccumulator16SerializeHeadersERKNS_13HTTPHeaderMapE(%"class.blink::HTTPHeaderMap"* dereferenceable(24) %766) #16
  %768 = ptrtoint %"class.std::__1::vector.1960"* %767 to i64
  %769 = getelementptr inbounds i8, i8* %679, i64 24
  %770 = bitcast i8* %769 to %"class.std::__1::vector.1960"**
  %771 = load %"class.std::__1::vector.1960"*, %"class.std::__1::vector.1960"** %770, align 8
  %772 = bitcast i8* %769 to i64*
  store i64 %768, i64* %772, align 8
  %773 = icmp eq %"class.std::__1::vector.1960"* %771, null
  br i1 %773, label %803, label %774

774:                                              ; preds = %765
  %775 = getelementptr inbounds %"class.std::__1::vector.1960", %"class.std::__1::vector.1960"* %771, i64 0, i32 0, i32 0
  %776 = load %"class.std::__1::unique_ptr.1962"*, %"class.std::__1::unique_ptr.1962"** %775, align 8
  %777 = icmp eq %"class.std::__1::unique_ptr.1962"* %776, null
  br i1 %777, label %801, label %778

778:                                              ; preds = %774
  %779 = bitcast %"class.std::__1::unique_ptr.1962"* %776 to i8*
  %780 = getelementptr inbounds %"class.std::__1::vector.1960", %"class.std::__1::vector.1960"* %771, i64 0, i32 0, i32 1
  %781 = load %"class.std::__1::unique_ptr.1962"*, %"class.std::__1::unique_ptr.1962"** %780, align 8
  %782 = icmp eq %"class.std::__1::unique_ptr.1962"* %781, %776
  br i1 %782, label %799, label %783

783:                                              ; preds = %778, %794
  %784 = phi %"class.std::__1::unique_ptr.1962"* [ %785, %794 ], [ %781, %778 ]
  %785 = getelementptr inbounds %"class.std::__1::unique_ptr.1962", %"class.std::__1::unique_ptr.1962"* %784, i64 -1
  %786 = getelementptr inbounds %"class.std::__1::unique_ptr.1962", %"class.std::__1::unique_ptr.1962"* %785, i64 0, i32 0, i32 0, i32 0
  %787 = load %"class.blink::protocol::CacheStorage::Header"*, %"class.blink::protocol::CacheStorage::Header"** %786, align 8
  store %"class.blink::protocol::CacheStorage::Header"* null, %"class.blink::protocol::CacheStorage::Header"** %786, align 8
  %788 = icmp eq %"class.blink::protocol::CacheStorage::Header"* %787, null
  br i1 %788, label %794, label %789

789:                                              ; preds = %783
  %790 = bitcast %"class.blink::protocol::CacheStorage::Header"* %787 to void (%"class.blink::protocol::CacheStorage::Header"*)***
  %791 = load void (%"class.blink::protocol::CacheStorage::Header"*)**, void (%"class.blink::protocol::CacheStorage::Header"*)*** %790, align 8
  %792 = getelementptr inbounds void (%"class.blink::protocol::CacheStorage::Header"*)*, void (%"class.blink::protocol::CacheStorage::Header"*)** %791, i64 2
  %793 = load void (%"class.blink::protocol::CacheStorage::Header"*)*, void (%"class.blink::protocol::CacheStorage::Header"*)** %792, align 8
  call void %793(%"class.blink::protocol::CacheStorage::Header"* nonnull %787) #16
  br label %794

794:                                              ; preds = %789, %783
  %795 = icmp eq %"class.std::__1::unique_ptr.1962"* %785, %776
  br i1 %795, label %796, label %783

796:                                              ; preds = %794
  %797 = bitcast %"class.std::__1::vector.1960"* %771 to i8**
  %798 = load i8*, i8** %797, align 8
  br label %799

799:                                              ; preds = %796, %778
  %800 = phi i8* [ %798, %796 ], [ %779, %778 ]
  store %"class.std::__1::unique_ptr.1962"* %776, %"class.std::__1::unique_ptr.1962"** %780, align 8
  call void @_ZdlPv(i8* %800) #18
  br label %801

801:                                              ; preds = %799, %774
  %802 = bitcast %"class.std::__1::vector.1960"* %771 to i8*
  call void @_ZdlPv(i8* %802) #18
  br label %803

803:                                              ; preds = %801, %765
  %804 = getelementptr inbounds %"struct.blink::(anonymous namespace)::RequestResponse", %"struct.blink::(anonymous namespace)::RequestResponse"* %678, i64 0, i32 3
  %805 = load i32, i32* %804, align 8
  %806 = getelementptr inbounds i8, i8* %679, i64 40
  %807 = bitcast i8* %806 to i32*
  store i32 %805, i32* %807, align 8
  %808 = getelementptr inbounds %"struct.blink::(anonymous namespace)::RequestResponse", %"struct.blink::(anonymous namespace)::RequestResponse"* %678, i64 0, i32 4, i32 0, i32 0
  %809 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %808, align 8
  %810 = icmp eq %"class.WTF::StringImpl"* %809, null
  br i1 %810, label %828, label %811

811:                                              ; preds = %803
  %812 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %809, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %813 = load atomic i32, i32* %812 monotonic, align 4
  %814 = and i32 %813, 2
  %815 = icmp eq i32 %814, 0
  br i1 %815, label %816, label %828

816:                                              ; preds = %811
  %817 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %809, i64 0, i32 0
  %818 = load i32, i32* %817, align 4
  %819 = zext i32 %818 to i33
  %820 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %819, i33 1) #16
  %821 = extractvalue { i33, i1 } %820, 1
  %822 = extractvalue { i33, i1 } %820, 0
  %823 = icmp slt i33 %822, 0
  %824 = or i1 %821, %823
  br i1 %824, label %825, label %826, !prof !3

825:                                              ; preds = %816
  call void @llvm.trap() #16
  unreachable

826:                                              ; preds = %816
  %827 = trunc i33 %822 to i32
  store i32 %827, i32* %817, align 4
  br label %828

828:                                              ; preds = %826, %811, %803
  %829 = ptrtoint %"class.WTF::StringImpl"* %809 to i64
  %830 = bitcast i8* %682 to i64*
  %831 = bitcast i8* %682 to %"class.WTF::StringImpl"**
  %832 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %831, align 8
  store i64 %829, i64* %830, align 8
  %833 = icmp eq %"class.WTF::StringImpl"* %832, null
  br i1 %833, label %847, label %834

834:                                              ; preds = %828
  %835 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %832, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %836 = load atomic i32, i32* %835 monotonic, align 4
  %837 = and i32 %836, 2
  %838 = icmp eq i32 %837, 0
  %839 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %832, i64 0, i32 0
  %840 = load i32, i32* %839, align 4
  br i1 %838, label %841, label %843

841:                                              ; preds = %834
  %842 = add i32 %840, -1
  store i32 %842, i32* %839, align 4
  br label %843

843:                                              ; preds = %841, %834
  %844 = phi i32 [ %842, %841 ], [ %840, %834 ]
  %845 = icmp eq i32 %844, 0
  br i1 %845, label %846, label %847

846:                                              ; preds = %843
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %832) #16
  br label %847

847:                                              ; preds = %846, %843, %828
  %848 = getelementptr inbounds %"struct.blink::(anonymous namespace)::RequestResponse", %"struct.blink::(anonymous namespace)::RequestResponse"* %678, i64 0, i32 5
  %849 = bitcast double* %848 to i64*
  %850 = load i64, i64* %849, align 8
  %851 = getelementptr inbounds i8, i8* %679, i64 32
  %852 = bitcast i8* %851 to i64*
  store i64 %850, i64* %852, align 8
  %853 = getelementptr inbounds %"struct.blink::(anonymous namespace)::RequestResponse", %"struct.blink::(anonymous namespace)::RequestResponse"* %678, i64 0, i32 6
  %854 = load i32, i32* %853, align 8
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %661) #16
  switch i32 %854, label %867 [
    i32 0, label %855
    i32 1, label %857
    i32 2, label %859
    i32 3, label %861
    i32 4, label %863
    i32 5, label %865
  ]

855:                                              ; preds = %847
  %856 = call i64 @strlen(i8* nonnull getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN5blink8protocol12CacheStorage22CachedResponseTypeEnum5BasicE, i64 0, i64 0)) #17
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %7, i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN5blink8protocol12CacheStorage22CachedResponseTypeEnum5BasicE, i64 0, i64 0), i64 %856) #16
  br label %868

857:                                              ; preds = %847
  %858 = call i64 @strlen(i8* nonnull getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN5blink8protocol12CacheStorage22CachedResponseTypeEnum4CorsE, i64 0, i64 0)) #17
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %7, i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN5blink8protocol12CacheStorage22CachedResponseTypeEnum4CorsE, i64 0, i64 0), i64 %858) #16
  br label %868

859:                                              ; preds = %847
  %860 = call i64 @strlen(i8* nonnull getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN5blink8protocol12CacheStorage22CachedResponseTypeEnum7DefaultE, i64 0, i64 0)) #17
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %7, i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN5blink8protocol12CacheStorage22CachedResponseTypeEnum7DefaultE, i64 0, i64 0), i64 %860) #16
  br label %868

861:                                              ; preds = %847
  %862 = call i64 @strlen(i8* nonnull getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN5blink8protocol12CacheStorage22CachedResponseTypeEnum5ErrorE, i64 0, i64 0)) #17
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %7, i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN5blink8protocol12CacheStorage22CachedResponseTypeEnum5ErrorE, i64 0, i64 0), i64 %862) #16
  br label %868

863:                                              ; preds = %847
  %864 = call i64 @strlen(i8* nonnull getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN5blink8protocol12CacheStorage22CachedResponseTypeEnum14OpaqueResponseE, i64 0, i64 0)) #17
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %7, i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN5blink8protocol12CacheStorage22CachedResponseTypeEnum14OpaqueResponseE, i64 0, i64 0), i64 %864) #16
  br label %868

865:                                              ; preds = %847
  %866 = call i64 @strlen(i8* nonnull getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN5blink8protocol12CacheStorage22CachedResponseTypeEnum14OpaqueRedirectE, i64 0, i64 0)) #17
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %7, i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN5blink8protocol12CacheStorage22CachedResponseTypeEnum14OpaqueRedirectE, i64 0, i64 0), i64 %866) #16
  br label %868

867:                                              ; preds = %847
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %7, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.2, i64 0, i64 0), i64 0) #16
  br label %868

868:                                              ; preds = %867, %865, %863, %861, %859, %857, %855
  %869 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %662, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %661) #16
  %870 = getelementptr inbounds i8, i8* %679, i64 56
  %871 = icmp eq %"class.WTF::StringImpl"* %869, null
  br i1 %871, label %889, label %872

872:                                              ; preds = %868
  %873 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %869, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %874 = load atomic i32, i32* %873 monotonic, align 4
  %875 = and i32 %874, 2
  %876 = icmp eq i32 %875, 0
  br i1 %876, label %877, label %889

877:                                              ; preds = %872
  %878 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %869, i64 0, i32 0
  %879 = load i32, i32* %878, align 4
  %880 = zext i32 %879 to i33
  %881 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %880, i33 1) #16
  %882 = extractvalue { i33, i1 } %881, 1
  %883 = extractvalue { i33, i1 } %881, 0
  %884 = icmp slt i33 %883, 0
  %885 = or i1 %882, %884
  br i1 %885, label %886, label %887, !prof !3

886:                                              ; preds = %877
  call void @llvm.trap() #16
  unreachable

887:                                              ; preds = %877
  %888 = trunc i33 %883 to i32
  store i32 %888, i32* %878, align 4
  br label %889

889:                                              ; preds = %887, %872, %868
  %890 = ptrtoint %"class.WTF::StringImpl"* %869 to i64
  %891 = bitcast i8* %870 to i64*
  %892 = bitcast i8* %870 to %"class.WTF::StringImpl"**
  %893 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %892, align 8
  store i64 %890, i64* %891, align 8
  %894 = icmp eq %"class.WTF::StringImpl"* %893, null
  br i1 %894, label %908, label %895

895:                                              ; preds = %889
  %896 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %893, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %897 = load atomic i32, i32* %896 monotonic, align 4
  %898 = and i32 %897, 2
  %899 = icmp eq i32 %898, 0
  %900 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %893, i64 0, i32 0
  %901 = load i32, i32* %900, align 4
  br i1 %899, label %902, label %904

902:                                              ; preds = %895
  %903 = add i32 %901, -1
  store i32 %903, i32* %900, align 4
  br label %904

904:                                              ; preds = %902, %895
  %905 = phi i32 [ %903, %902 ], [ %901, %895 ]
  %906 = icmp eq i32 %905, 0
  br i1 %906, label %907, label %908

907:                                              ; preds = %904
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %893) #16
  br label %908

908:                                              ; preds = %907, %904, %889
  %909 = getelementptr inbounds %"struct.blink::(anonymous namespace)::RequestResponse", %"struct.blink::(anonymous namespace)::RequestResponse"* %678, i64 0, i32 8
  %910 = call fastcc %"class.std::__1::vector.1960"* @_ZN5blink12_GLOBAL__N_120ResponsesAccumulator16SerializeHeadersERKNS_13HTTPHeaderMapE(%"class.blink::HTTPHeaderMap"* dereferenceable(24) %909) #16
  %911 = ptrtoint %"class.std::__1::vector.1960"* %910 to i64
  %912 = getelementptr inbounds i8, i8* %679, i64 64
  %913 = bitcast i8* %912 to %"class.std::__1::vector.1960"**
  %914 = load %"class.std::__1::vector.1960"*, %"class.std::__1::vector.1960"** %913, align 8
  %915 = bitcast i8* %912 to i64*
  store i64 %911, i64* %915, align 8
  %916 = icmp eq %"class.std::__1::vector.1960"* %914, null
  br i1 %916, label %946, label %917

917:                                              ; preds = %908
  %918 = getelementptr inbounds %"class.std::__1::vector.1960", %"class.std::__1::vector.1960"* %914, i64 0, i32 0, i32 0
  %919 = load %"class.std::__1::unique_ptr.1962"*, %"class.std::__1::unique_ptr.1962"** %918, align 8
  %920 = icmp eq %"class.std::__1::unique_ptr.1962"* %919, null
  br i1 %920, label %944, label %921

921:                                              ; preds = %917
  %922 = bitcast %"class.std::__1::unique_ptr.1962"* %919 to i8*
  %923 = getelementptr inbounds %"class.std::__1::vector.1960", %"class.std::__1::vector.1960"* %914, i64 0, i32 0, i32 1
  %924 = load %"class.std::__1::unique_ptr.1962"*, %"class.std::__1::unique_ptr.1962"** %923, align 8
  %925 = icmp eq %"class.std::__1::unique_ptr.1962"* %924, %919
  br i1 %925, label %942, label %926

926:                                              ; preds = %921, %937
  %927 = phi %"class.std::__1::unique_ptr.1962"* [ %928, %937 ], [ %924, %921 ]
  %928 = getelementptr inbounds %"class.std::__1::unique_ptr.1962", %"class.std::__1::unique_ptr.1962"* %927, i64 -1
  %929 = getelementptr inbounds %"class.std::__1::unique_ptr.1962", %"class.std::__1::unique_ptr.1962"* %928, i64 0, i32 0, i32 0, i32 0
  %930 = load %"class.blink::protocol::CacheStorage::Header"*, %"class.blink::protocol::CacheStorage::Header"** %929, align 8
  store %"class.blink::protocol::CacheStorage::Header"* null, %"class.blink::protocol::CacheStorage::Header"** %929, align 8
  %931 = icmp eq %"class.blink::protocol::CacheStorage::Header"* %930, null
  br i1 %931, label %937, label %932

932:                                              ; preds = %926
  %933 = bitcast %"class.blink::protocol::CacheStorage::Header"* %930 to void (%"class.blink::protocol::CacheStorage::Header"*)***
  %934 = load void (%"class.blink::protocol::CacheStorage::Header"*)**, void (%"class.blink::protocol::CacheStorage::Header"*)*** %933, align 8
  %935 = getelementptr inbounds void (%"class.blink::protocol::CacheStorage::Header"*)*, void (%"class.blink::protocol::CacheStorage::Header"*)** %934, i64 2
  %936 = load void (%"class.blink::protocol::CacheStorage::Header"*)*, void (%"class.blink::protocol::CacheStorage::Header"*)** %935, align 8
  call void %936(%"class.blink::protocol::CacheStorage::Header"* nonnull %930) #16
  br label %937

937:                                              ; preds = %932, %926
  %938 = icmp eq %"class.std::__1::unique_ptr.1962"* %928, %919
  br i1 %938, label %939, label %926

939:                                              ; preds = %937
  %940 = bitcast %"class.std::__1::vector.1960"* %914 to i8**
  %941 = load i8*, i8** %940, align 8
  br label %942

942:                                              ; preds = %939, %921
  %943 = phi i8* [ %941, %939 ], [ %922, %921 ]
  store %"class.std::__1::unique_ptr.1962"* %919, %"class.std::__1::unique_ptr.1962"** %923, align 8
  call void @_ZdlPv(i8* %943) #18
  br label %944

944:                                              ; preds = %942, %917
  %945 = bitcast %"class.std::__1::vector.1960"* %914 to i8*
  call void @_ZdlPv(i8* %945) #18
  br label %946

946:                                              ; preds = %944, %908
  store i8* %679, i8** %663, align 8
  br i1 %871, label %960, label %947

947:                                              ; preds = %946
  %948 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %869, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %949 = load atomic i32, i32* %948 monotonic, align 4
  %950 = and i32 %949, 2
  %951 = icmp eq i32 %950, 0
  %952 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %869, i64 0, i32 0
  %953 = load i32, i32* %952, align 4
  br i1 %951, label %954, label %956

954:                                              ; preds = %947
  %955 = add i32 %953, -1
  store i32 %955, i32* %952, align 4
  br label %956

956:                                              ; preds = %954, %947
  %957 = phi i32 [ %955, %954 ], [ %953, %947 ]
  %958 = icmp eq i32 %957, 0
  br i1 %958, label %959, label %960

959:                                              ; preds = %956
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %869) #16
  br label %960

960:                                              ; preds = %959, %956, %946
  %961 = load %"class.std::__1::unique_ptr.2256"*, %"class.std::__1::unique_ptr.2256"** %665, align 8
  %962 = load %"class.std::__1::unique_ptr.2256"*, %"class.std::__1::unique_ptr.2256"** %667, align 8
  %963 = icmp ult %"class.std::__1::unique_ptr.2256"* %961, %962
  br i1 %963, label %964, label %969

964:                                              ; preds = %960
  %965 = load i64, i64* %668, align 8
  store %"class.blink::protocol::CacheStorage::DataEntry"* null, %"class.blink::protocol::CacheStorage::DataEntry"** %660, align 8
  %966 = bitcast %"class.std::__1::unique_ptr.2256"* %961 to i64*
  store i64 %965, i64* %966, align 8
  %967 = getelementptr inbounds %"class.std::__1::unique_ptr.2256", %"class.std::__1::unique_ptr.2256"* %961, i64 1
  %968 = ptrtoint %"class.std::__1::unique_ptr.2256"* %967 to i64
  store i64 %968, i64* %669, align 8
  br label %970

969:                                              ; preds = %960
  call void @_ZNSt3__16vectorINS_10unique_ptrIN5blink8protocol12CacheStorage9DataEntryENS_14default_deleteIS5_EEEENS_9allocatorIS8_EEE24__emplace_back_slow_pathIJS8_EEEvDpOT_(%"class.std::__1::vector.2254"* nonnull %652, %"class.std::__1::unique_ptr.2256"* nonnull dereferenceable(8) %15) #16
  br label %970

970:                                              ; preds = %969, %964
  %971 = load %"class.blink::protocol::CacheStorage::DataEntry"*, %"class.blink::protocol::CacheStorage::DataEntry"** %660, align 8
  store %"class.blink::protocol::CacheStorage::DataEntry"* null, %"class.blink::protocol::CacheStorage::DataEntry"** %660, align 8
  %972 = icmp eq %"class.blink::protocol::CacheStorage::DataEntry"* %971, null
  br i1 %972, label %978, label %973

973:                                              ; preds = %970
  %974 = bitcast %"class.blink::protocol::CacheStorage::DataEntry"* %971 to void (%"class.blink::protocol::CacheStorage::DataEntry"*)***
  %975 = load void (%"class.blink::protocol::CacheStorage::DataEntry"*)**, void (%"class.blink::protocol::CacheStorage::DataEntry"*)*** %974, align 8
  %976 = getelementptr inbounds void (%"class.blink::protocol::CacheStorage::DataEntry"*)*, void (%"class.blink::protocol::CacheStorage::DataEntry"*)** %975, i64 2
  %977 = load void (%"class.blink::protocol::CacheStorage::DataEntry"*)*, void (%"class.blink::protocol::CacheStorage::DataEntry"*)** %976, align 8
  call void %977(%"class.blink::protocol::CacheStorage::DataEntry"* nonnull %971) #16
  br label %978

978:                                              ; preds = %973, %970
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %659) #16
  %979 = getelementptr inbounds %"struct.blink::(anonymous namespace)::RequestResponse", %"struct.blink::(anonymous namespace)::RequestResponse"* %678, i64 1
  %980 = icmp eq %"struct.blink::(anonymous namespace)::RequestResponse"* %979, %656
  br i1 %980, label %670, label %677

981:                                              ; preds = %670, %476, %100
  call fastcc void @_ZN13scoped_refptrIN5blink12_GLOBAL__N_120ResponsesAccumulatorEED2Ev(%class.scoped_refptr.2273* nonnull %16) #16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %26) #16
  %982 = icmp eq %"class.blink::mojom::blink::MatchResult"* %25, null
  br i1 %982, label %985, label %983

983:                                              ; preds = %981
  call void @_ZN5blink5mojom5blink11MatchResultD1Ev(%"class.blink::mojom::blink::MatchResult"* nonnull %25) #16
  %984 = bitcast %"class.blink::mojom::blink::MatchResult"* %25 to i8*
  call void @_ZdlPv(i8* %984) #18
  br label %985

985:                                              ; preds = %983, %981
  %986 = icmp eq i64 %22, 0
  br i1 %986, label %990, label %987

987:                                              ; preds = %985
  %988 = inttoptr i64 %22 to %"class.blink::mojom::blink::FetchAPIRequest"*
  call void @_ZN5blink5mojom5blink15FetchAPIRequestD1Ev(%"class.blink::mojom::blink::FetchAPIRequest"* nonnull %988) #16
  %989 = inttoptr i64 %22 to i8*
  call void @_ZdlPv(i8* %989) #18
  br label %990

990:                                              ; preds = %985, %987
  ret void
}

declare double @_ZNK4base4Time9ToDoubleTEv(%"class.base::Time"*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind ssp uwtable
define internal fastcc void @_ZN3WTF6VectorIN5blink12_GLOBAL__N_115RequestResponseELj0ENS_18PartitionAllocatorEE7EraseAtEjj(%"class.WTF::Vector.2276"* nocapture, i32, i32) unnamed_addr #11 align 2 {
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckOpResult", align 8
  %6 = alloca %"class.logging::CheckError", align 8
  %7 = icmp eq i32 %2, 0
  br i1 %7, label %102, label %8

8:                                                ; preds = %3
  %9 = bitcast %"class.logging::CheckOpResult"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %9) #16
  %10 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %5, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %10, align 8
  %11 = add i32 %2, %1
  %12 = getelementptr inbounds %"class.WTF::Vector.2276", %"class.WTF::Vector.2276"* %0, i64 0, i32 0, i32 0, i32 2
  %13 = load i32, i32* %12, align 4
  %14 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %14)
  %15 = icmp ugt i32 %11, %13
  br i1 %15, label %17, label %16

16:                                               ; preds = %8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %14)
  store i8* null, i8** %10, align 8
  br label %26

17:                                               ; preds = %8
  %18 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %11) #16
  %19 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %13) #16
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %4, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.40, i64 0, i64 0), i8* %18, i8* %19) #16
  %20 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  %21 = load i8*, i8** %20, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %14)
  store i8* %21, i8** %10, align 8
  %22 = icmp eq i8* %21, null
  br i1 %22, label %26, label %23

23:                                               ; preds = %17
  %24 = bitcast %"class.logging::CheckError"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %24) #16
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %6, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.18, i64 0, i64 0), i32 2085, %"class.logging::CheckOpResult"* nonnull %5) #16
  %25 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %6) #16
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %6) #16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %24) #16
  br label %26

26:                                               ; preds = %23, %17, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9) #16
  %27 = getelementptr inbounds %"class.WTF::Vector.2276", %"class.WTF::Vector.2276"* %0, i64 0, i32 0, i32 0, i32 0
  %28 = load %"struct.blink::(anonymous namespace)::RequestResponse"*, %"struct.blink::(anonymous namespace)::RequestResponse"** %27, align 8
  %29 = zext i32 %1 to i64
  %30 = getelementptr inbounds %"struct.blink::(anonymous namespace)::RequestResponse", %"struct.blink::(anonymous namespace)::RequestResponse"* %28, i64 %29
  %31 = zext i32 %2 to i64
  %32 = getelementptr inbounds %"struct.blink::(anonymous namespace)::RequestResponse", %"struct.blink::(anonymous namespace)::RequestResponse"* %30, i64 %31
  call fastcc void @_ZN3WTF20VectorTypeOperationsIN5blink12_GLOBAL__N_115RequestResponseENS_18PartitionAllocatorEE8DestructEPS3_S6_(%"struct.blink::(anonymous namespace)::RequestResponse"* %30, %"struct.blink::(anonymous namespace)::RequestResponse"* %32)
  %33 = load %"struct.blink::(anonymous namespace)::RequestResponse"*, %"struct.blink::(anonymous namespace)::RequestResponse"** %27, align 8
  %34 = load i32, i32* %12, align 4
  %35 = zext i32 %34 to i64
  %36 = getelementptr inbounds %"struct.blink::(anonymous namespace)::RequestResponse", %"struct.blink::(anonymous namespace)::RequestResponse"* %33, i64 %35
  %37 = icmp eq %"struct.blink::(anonymous namespace)::RequestResponse"* %32, %36
  br i1 %37, label %99, label %38

38:                                               ; preds = %26, %93
  %39 = phi %"struct.blink::(anonymous namespace)::RequestResponse"* [ %95, %93 ], [ %32, %26 ]
  %40 = phi %"struct.blink::(anonymous namespace)::RequestResponse"* [ %94, %93 ], [ %30, %26 ]
  call fastcc void @_ZN5blink12_GLOBAL__N_115RequestResponseC2EOS1_(%"struct.blink::(anonymous namespace)::RequestResponse"* %40, %"struct.blink::(anonymous namespace)::RequestResponse"* dereferenceable(96) %39) #16
  %41 = getelementptr inbounds %"struct.blink::(anonymous namespace)::RequestResponse", %"struct.blink::(anonymous namespace)::RequestResponse"* %39, i64 0, i32 8
  call void @_ZN5blink13HTTPHeaderMapD1Ev(%"class.blink::HTTPHeaderMap"* %41) #16
  %42 = getelementptr inbounds %"struct.blink::(anonymous namespace)::RequestResponse", %"struct.blink::(anonymous namespace)::RequestResponse"* %39, i64 0, i32 4, i32 0, i32 0
  %43 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %42, align 8
  %44 = icmp eq %"class.WTF::StringImpl"* %43, null
  br i1 %44, label %58, label %45

45:                                               ; preds = %38
  %46 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %43, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %47 = load atomic i32, i32* %46 monotonic, align 4
  %48 = and i32 %47, 2
  %49 = icmp eq i32 %48, 0
  %50 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %43, i64 0, i32 0
  %51 = load i32, i32* %50, align 4
  br i1 %49, label %52, label %54

52:                                               ; preds = %45
  %53 = add i32 %51, -1
  store i32 %53, i32* %50, align 4
  br label %54

54:                                               ; preds = %52, %45
  %55 = phi i32 [ %53, %52 ], [ %51, %45 ]
  %56 = icmp eq i32 %55, 0
  br i1 %56, label %57, label %58

57:                                               ; preds = %54
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %43) #16
  br label %58

58:                                               ; preds = %57, %54, %38
  %59 = getelementptr inbounds %"struct.blink::(anonymous namespace)::RequestResponse", %"struct.blink::(anonymous namespace)::RequestResponse"* %39, i64 0, i32 2
  call void @_ZN5blink13HTTPHeaderMapD1Ev(%"class.blink::HTTPHeaderMap"* %59) #16
  %60 = getelementptr inbounds %"struct.blink::(anonymous namespace)::RequestResponse", %"struct.blink::(anonymous namespace)::RequestResponse"* %39, i64 0, i32 1, i32 0, i32 0
  %61 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %60, align 8
  %62 = icmp eq %"class.WTF::StringImpl"* %61, null
  br i1 %62, label %76, label %63

63:                                               ; preds = %58
  %64 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %61, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %65 = load atomic i32, i32* %64 monotonic, align 4
  %66 = and i32 %65, 2
  %67 = icmp eq i32 %66, 0
  %68 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %61, i64 0, i32 0
  %69 = load i32, i32* %68, align 4
  br i1 %67, label %70, label %72

70:                                               ; preds = %63
  %71 = add i32 %69, -1
  store i32 %71, i32* %68, align 4
  br label %72

72:                                               ; preds = %70, %63
  %73 = phi i32 [ %71, %70 ], [ %69, %63 ]
  %74 = icmp eq i32 %73, 0
  br i1 %74, label %75, label %76

75:                                               ; preds = %72
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %61) #16
  br label %76

76:                                               ; preds = %75, %72, %58
  %77 = getelementptr inbounds %"struct.blink::(anonymous namespace)::RequestResponse", %"struct.blink::(anonymous namespace)::RequestResponse"* %39, i64 0, i32 0, i32 0, i32 0
  %78 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %77, align 8
  %79 = icmp eq %"class.WTF::StringImpl"* %78, null
  br i1 %79, label %93, label %80

80:                                               ; preds = %76
  %81 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %78, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %82 = load atomic i32, i32* %81 monotonic, align 4
  %83 = and i32 %82, 2
  %84 = icmp eq i32 %83, 0
  %85 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %78, i64 0, i32 0
  %86 = load i32, i32* %85, align 4
  br i1 %84, label %87, label %89

87:                                               ; preds = %80
  %88 = add i32 %86, -1
  store i32 %88, i32* %85, align 4
  br label %89

89:                                               ; preds = %87, %80
  %90 = phi i32 [ %88, %87 ], [ %86, %80 ]
  %91 = icmp eq i32 %90, 0
  br i1 %91, label %92, label %93

92:                                               ; preds = %89
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %78) #16
  br label %93

93:                                               ; preds = %92, %89, %76
  %94 = getelementptr inbounds %"struct.blink::(anonymous namespace)::RequestResponse", %"struct.blink::(anonymous namespace)::RequestResponse"* %40, i64 1
  %95 = getelementptr inbounds %"struct.blink::(anonymous namespace)::RequestResponse", %"struct.blink::(anonymous namespace)::RequestResponse"* %39, i64 1
  %96 = icmp eq %"struct.blink::(anonymous namespace)::RequestResponse"* %95, %36
  br i1 %96, label %97, label %38

97:                                               ; preds = %93
  %98 = load i32, i32* %12, align 4
  br label %99

99:                                               ; preds = %97, %26
  %100 = phi i32 [ %98, %97 ], [ %34, %26 ]
  %101 = sub i32 %100, %2
  store i32 %101, i32* %12, align 4
  br label %102

102:                                              ; preds = %3, %99
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc %"class.std::__1::vector.1960"* @_ZN5blink12_GLOBAL__N_120ResponsesAccumulator16SerializeHeadersERKNS_13HTTPHeaderMapE(%"class.blink::HTTPHeaderMap"* nocapture readonly dereferenceable(24)) unnamed_addr #0 align 2 {
  %2 = alloca %"class.std::__1::unique_ptr.1962", align 8
  %3 = tail call i8* @_Znwm(i64 24) #18
  %4 = bitcast i8* %3 to %"class.std::__1::vector.1960"*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %3, i8 0, i64 24, i1 false) #16
  %5 = getelementptr inbounds %"class.blink::HTTPHeaderMap", %"class.blink::HTTPHeaderMap"* %0, i64 0, i32 0, i32 0, i32 2
  %6 = load i32, i32* %5, align 4
  %7 = icmp eq i32 %6, 0
  %8 = getelementptr inbounds %"class.blink::HTTPHeaderMap", %"class.blink::HTTPHeaderMap"* %0, i64 0, i32 0, i32 0, i32 0
  %9 = load %"struct.WTF::KeyValuePair.2283"*, %"struct.WTF::KeyValuePair.2283"** %8, align 8
  %10 = getelementptr inbounds %"class.blink::HTTPHeaderMap", %"class.blink::HTTPHeaderMap"* %0, i64 0, i32 0, i32 0, i32 1
  %11 = load i32, i32* %10, align 8
  %12 = zext i32 %11 to i64
  %13 = getelementptr inbounds %"struct.WTF::KeyValuePair.2283", %"struct.WTF::KeyValuePair.2283"* %9, i64 %12
  br i1 %7, label %35, label %14

14:                                               ; preds = %1
  %15 = icmp eq i32 %11, 0
  br i1 %15, label %23, label %16

16:                                               ; preds = %14, %20
  %17 = phi %"struct.WTF::KeyValuePair.2283"* [ %21, %20 ], [ %9, %14 ]
  %18 = bitcast %"struct.WTF::KeyValuePair.2283"* %17 to i64*
  %19 = load i64, i64* %18, align 8
  switch i64 %19, label %23 [
    i64 -1, label %20
    i64 0, label %20
  ]

20:                                               ; preds = %16, %16
  %21 = getelementptr inbounds %"struct.WTF::KeyValuePair.2283", %"struct.WTF::KeyValuePair.2283"* %17, i64 1
  %22 = icmp eq %"struct.WTF::KeyValuePair.2283"* %21, %13
  br i1 %22, label %35, label %16

23:                                               ; preds = %16, %14
  %24 = phi %"struct.WTF::KeyValuePair.2283"* [ %9, %14 ], [ %17, %16 ]
  %25 = icmp eq %"struct.WTF::KeyValuePair.2283"* %24, %13
  br i1 %25, label %35, label %26

26:                                               ; preds = %23
  %27 = bitcast %"class.std::__1::unique_ptr.1962"* %2 to i8*
  %28 = getelementptr inbounds %"class.std::__1::unique_ptr.1962", %"class.std::__1::unique_ptr.1962"* %2, i64 0, i32 0, i32 0, i32 0
  %29 = bitcast %"class.std::__1::unique_ptr.1962"* %2 to i8**
  %30 = getelementptr inbounds i8, i8* %3, i64 8
  %31 = bitcast i8* %30 to %"class.std::__1::unique_ptr.1962"**
  %32 = getelementptr inbounds i8, i8* %3, i64 16
  %33 = bitcast i8* %32 to %"class.std::__1::unique_ptr.1962"**
  %34 = bitcast i8* %30 to i64*
  br label %36

35:                                               ; preds = %20, %141, %151, %148, %1, %23
  ret %"class.std::__1::vector.1960"* %4

36:                                               ; preds = %26, %151
  %37 = phi %"struct.WTF::KeyValuePair.2283"* [ %24, %26 ], [ %145, %151 ]
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %27) #16
  %38 = call i8* @_Znwm(i64 24) #18
  %39 = bitcast i8* %38 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN5blink8protocol12CacheStorage6HeaderE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %39, align 8
  %40 = getelementptr inbounds i8, i8* %38, i64 8
  call void @llvm.memset.p0i8.i64(i8* align 8 %40, i8 0, i64 16, i1 false) #16
  %41 = getelementptr inbounds %"struct.WTF::KeyValuePair.2283", %"struct.WTF::KeyValuePair.2283"* %37, i64 0, i32 0, i32 0, i32 0, i32 0
  %42 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %41, align 8
  %43 = icmp eq %"class.WTF::StringImpl"* %42, null
  br i1 %43, label %59, label %44

44:                                               ; preds = %36
  %45 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %42, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %46 = load atomic i32, i32* %45 monotonic, align 4
  %47 = and i32 %46, 2
  %48 = icmp eq i32 %47, 0
  br i1 %48, label %49, label %59

49:                                               ; preds = %44
  %50 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %42, i64 0, i32 0
  %51 = load i32, i32* %50, align 4
  %52 = zext i32 %51 to i33
  %53 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %52, i33 1) #16
  %54 = extractvalue { i33, i1 } %53, 1
  %55 = extractvalue { i33, i1 } %53, 0
  %56 = icmp slt i33 %55, 0
  %57 = or i1 %54, %56
  br i1 %57, label %58, label %62, !prof !3

58:                                               ; preds = %49
  call void @llvm.trap() #16
  unreachable

59:                                               ; preds = %44, %36
  %60 = ptrtoint %"class.WTF::StringImpl"* %42 to i64
  %61 = bitcast i8* %40 to i64*
  store i64 %60, i64* %61, align 8
  br label %82

62:                                               ; preds = %49
  %63 = trunc i33 %55 to i32
  store i32 %63, i32* %50, align 4
  %64 = bitcast i8* %40 to %"class.WTF::StringImpl"**
  %65 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %64, align 8
  %66 = ptrtoint %"class.WTF::StringImpl"* %42 to i64
  %67 = bitcast i8* %40 to i64*
  store i64 %66, i64* %67, align 8
  %68 = icmp eq %"class.WTF::StringImpl"* %65, null
  br i1 %68, label %82, label %69

69:                                               ; preds = %62
  %70 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %65, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %71 = load atomic i32, i32* %70 monotonic, align 4
  %72 = and i32 %71, 2
  %73 = icmp eq i32 %72, 0
  %74 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %65, i64 0, i32 0
  %75 = load i32, i32* %74, align 4
  br i1 %73, label %76, label %78

76:                                               ; preds = %69
  %77 = add i32 %75, -1
  store i32 %77, i32* %74, align 4
  br label %78

78:                                               ; preds = %76, %69
  %79 = phi i32 [ %77, %76 ], [ %75, %69 ]
  %80 = icmp eq i32 %79, 0
  br i1 %80, label %81, label %82

81:                                               ; preds = %78
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %65) #16
  br label %82

82:                                               ; preds = %59, %62, %78, %81
  %83 = getelementptr inbounds i8, i8* %38, i64 16
  %84 = getelementptr inbounds %"struct.WTF::KeyValuePair.2283", %"struct.WTF::KeyValuePair.2283"* %37, i64 0, i32 1, i32 0, i32 0, i32 0
  %85 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %84, align 8
  %86 = icmp eq %"class.WTF::StringImpl"* %85, null
  br i1 %86, label %104, label %87

87:                                               ; preds = %82
  %88 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %85, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %89 = load atomic i32, i32* %88 monotonic, align 4
  %90 = and i32 %89, 2
  %91 = icmp eq i32 %90, 0
  br i1 %91, label %92, label %104

92:                                               ; preds = %87
  %93 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %85, i64 0, i32 0
  %94 = load i32, i32* %93, align 4
  %95 = zext i32 %94 to i33
  %96 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %95, i33 1) #16
  %97 = extractvalue { i33, i1 } %96, 1
  %98 = extractvalue { i33, i1 } %96, 0
  %99 = icmp slt i33 %98, 0
  %100 = or i1 %97, %99
  br i1 %100, label %101, label %102, !prof !3

101:                                              ; preds = %92
  call void @llvm.trap() #16
  unreachable

102:                                              ; preds = %92
  %103 = trunc i33 %98 to i32
  store i32 %103, i32* %93, align 4
  br label %104

104:                                              ; preds = %102, %87, %82
  %105 = ptrtoint %"class.WTF::StringImpl"* %85 to i64
  %106 = bitcast i8* %83 to i64*
  %107 = bitcast i8* %83 to %"class.WTF::StringImpl"**
  %108 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %107, align 8
  store i64 %105, i64* %106, align 8
  %109 = icmp eq %"class.WTF::StringImpl"* %108, null
  br i1 %109, label %123, label %110

110:                                              ; preds = %104
  %111 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %108, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %112 = load atomic i32, i32* %111 monotonic, align 4
  %113 = and i32 %112, 2
  %114 = icmp eq i32 %113, 0
  %115 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %108, i64 0, i32 0
  %116 = load i32, i32* %115, align 4
  br i1 %114, label %117, label %119

117:                                              ; preds = %110
  %118 = add i32 %116, -1
  store i32 %118, i32* %115, align 4
  br label %119

119:                                              ; preds = %117, %110
  %120 = phi i32 [ %118, %117 ], [ %116, %110 ]
  %121 = icmp eq i32 %120, 0
  br i1 %121, label %122, label %123

122:                                              ; preds = %119
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %108) #16
  br label %123

123:                                              ; preds = %104, %119, %122
  store i8* %38, i8** %29, align 8
  %124 = load %"class.std::__1::unique_ptr.1962"*, %"class.std::__1::unique_ptr.1962"** %31, align 8
  %125 = load %"class.std::__1::unique_ptr.1962"*, %"class.std::__1::unique_ptr.1962"** %33, align 8
  %126 = icmp ult %"class.std::__1::unique_ptr.1962"* %124, %125
  br i1 %126, label %127, label %132

127:                                              ; preds = %123
  %128 = ptrtoint i8* %38 to i64
  store %"class.blink::protocol::CacheStorage::Header"* null, %"class.blink::protocol::CacheStorage::Header"** %28, align 8
  %129 = bitcast %"class.std::__1::unique_ptr.1962"* %124 to i64*
  store i64 %128, i64* %129, align 8
  %130 = getelementptr inbounds %"class.std::__1::unique_ptr.1962", %"class.std::__1::unique_ptr.1962"* %124, i64 1
  %131 = ptrtoint %"class.std::__1::unique_ptr.1962"* %130 to i64
  store i64 %131, i64* %34, align 8
  br label %133

132:                                              ; preds = %123
  call void @_ZNSt3__16vectorINS_10unique_ptrIN5blink8protocol12CacheStorage6HeaderENS_14default_deleteIS5_EEEENS_9allocatorIS8_EEE24__emplace_back_slow_pathIJS8_EEEvDpOT_(%"class.std::__1::vector.1960"* nonnull %4, %"class.std::__1::unique_ptr.1962"* nonnull dereferenceable(8) %2) #16
  br label %133

133:                                              ; preds = %127, %132
  %134 = load %"class.blink::protocol::CacheStorage::Header"*, %"class.blink::protocol::CacheStorage::Header"** %28, align 8
  store %"class.blink::protocol::CacheStorage::Header"* null, %"class.blink::protocol::CacheStorage::Header"** %28, align 8
  %135 = icmp eq %"class.blink::protocol::CacheStorage::Header"* %134, null
  br i1 %135, label %141, label %136

136:                                              ; preds = %133
  %137 = bitcast %"class.blink::protocol::CacheStorage::Header"* %134 to void (%"class.blink::protocol::CacheStorage::Header"*)***
  %138 = load void (%"class.blink::protocol::CacheStorage::Header"*)**, void (%"class.blink::protocol::CacheStorage::Header"*)*** %137, align 8
  %139 = getelementptr inbounds void (%"class.blink::protocol::CacheStorage::Header"*)*, void (%"class.blink::protocol::CacheStorage::Header"*)** %138, i64 2
  %140 = load void (%"class.blink::protocol::CacheStorage::Header"*)*, void (%"class.blink::protocol::CacheStorage::Header"*)** %139, align 8
  call void %140(%"class.blink::protocol::CacheStorage::Header"* nonnull %134) #16
  br label %141

141:                                              ; preds = %136, %133
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %27) #16
  %142 = getelementptr inbounds %"struct.WTF::KeyValuePair.2283", %"struct.WTF::KeyValuePair.2283"* %37, i64 1
  %143 = icmp eq %"struct.WTF::KeyValuePair.2283"* %142, %13
  br i1 %143, label %35, label %144

144:                                              ; preds = %141, %148
  %145 = phi %"struct.WTF::KeyValuePair.2283"* [ %149, %148 ], [ %142, %141 ]
  %146 = bitcast %"struct.WTF::KeyValuePair.2283"* %145 to i64*
  %147 = load i64, i64* %146, align 8
  switch i64 %147, label %151 [
    i64 -1, label %148
    i64 0, label %148
  ]

148:                                              ; preds = %144, %144
  %149 = getelementptr inbounds %"struct.WTF::KeyValuePair.2283", %"struct.WTF::KeyValuePair.2283"* %145, i64 1
  %150 = icmp eq %"struct.WTF::KeyValuePair.2283"* %149, %13
  br i1 %150, label %35, label %144

151:                                              ; preds = %144
  %152 = icmp eq %"struct.WTF::KeyValuePair.2283"* %145, %13
  br i1 %152, label %35, label %36
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.WTF::KeyValuePair.2283"*, i8 } @_ZN3WTF9HashTableINS_12AtomicStringENS_12KeyValuePairIS1_S1_EENS_24KeyValuePairKeyExtractorENS_15CaseFoldingHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EES8_EES8_NS_18PartitionAllocatorEE6insertINS_17HashMapTranslatorIS9_S5_SA_EERKS1_SG_EENS_18HashTableAddResultISB_S3_EEOT0_OT1_(%"class.WTF::HashTable.2280"*, %"class.WTF::AtomicString"* dereferenceable(8), %"class.WTF::AtomicString"* dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %4 = alloca %"class.WTF::StringView", align 8
  %5 = alloca %"class.WTF::StringView", align 8
  %6 = getelementptr inbounds %"class.WTF::HashTable.2280", %"class.WTF::HashTable.2280"* %0, i64 0, i32 0
  %7 = load %"struct.WTF::KeyValuePair.2283"*, %"struct.WTF::KeyValuePair.2283"** %6, align 8
  %8 = icmp eq %"struct.WTF::KeyValuePair.2283"* %7, null
  br i1 %8, label %9, label %12

9:                                                ; preds = %3
  %10 = tail call %"struct.WTF::KeyValuePair.2283"* @_ZN3WTF9HashTableINS_12AtomicStringENS_12KeyValuePairIS1_S1_EENS_24KeyValuePairKeyExtractorENS_15CaseFoldingHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EES8_EES8_NS_18PartitionAllocatorEE6ExpandEPS3_(%"class.WTF::HashTable.2280"* %0, %"struct.WTF::KeyValuePair.2283"* null)
  %11 = load %"struct.WTF::KeyValuePair.2283"*, %"struct.WTF::KeyValuePair.2283"** %6, align 8
  br label %12

12:                                               ; preds = %3, %9
  %13 = phi %"struct.WTF::KeyValuePair.2283"* [ %7, %3 ], [ %11, %9 ]
  %14 = getelementptr inbounds %"class.WTF::HashTable.2280", %"class.WTF::HashTable.2280"* %0, i64 0, i32 1
  %15 = load i32, i32* %14, align 8
  %16 = add i32 %15, -1
  %17 = zext i32 %16 to i64
  %18 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %1, i64 0, i32 0, i32 0, i32 0
  %19 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %18, align 8
  %20 = tail call i32 @_ZN3WTF15CaseFoldingHash7GetHashEPNS_10StringImplE(%"class.WTF::StringImpl"* %19) #16
  %21 = and i32 %20, %16
  %22 = zext i32 %21 to i64
  %23 = getelementptr inbounds %"struct.WTF::KeyValuePair.2283", %"struct.WTF::KeyValuePair.2283"* %13, i64 %22
  %24 = getelementptr inbounds %"struct.WTF::KeyValuePair.2283", %"struct.WTF::KeyValuePair.2283"* %23, i64 0, i32 0, i32 0, i32 0, i32 0
  %25 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %24, align 8
  %26 = icmp eq %"class.WTF::StringImpl"* %25, null
  br i1 %26, label %91, label %27

27:                                               ; preds = %12
  %28 = bitcast %"class.WTF::StringView"* %4 to i8*
  %29 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %4, i64 0, i32 1
  %30 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %4, i64 0, i32 2
  %31 = bitcast %"class.WTF::StringView"* %5 to i8*
  %32 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %5, i64 0, i32 0
  %33 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %5, i64 0, i32 1
  %34 = bitcast i8** %33 to %"class.WTF::StringImpl"**
  %35 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %5, i64 0, i32 2
  %36 = xor i32 %20, -1
  %37 = lshr i32 %20, 23
  %38 = add i32 %37, %36
  %39 = shl i32 %38, 12
  %40 = xor i32 %39, %38
  %41 = lshr i32 %40, 7
  %42 = xor i32 %41, %40
  %43 = shl i32 %42, 2
  %44 = xor i32 %43, %42
  %45 = lshr i32 %44, 20
  %46 = xor i32 %45, %44
  %47 = or i32 %46, 1
  %48 = zext i32 %47 to i64
  %49 = bitcast %"class.WTF::StringView"* %4 to i8**
  br label %50

50:                                               ; preds = %27, %71
  %51 = phi %"struct.WTF::KeyValuePair.2283"* [ %23, %27 ], [ %77, %71 ]
  %52 = phi %"struct.WTF::KeyValuePair.2283"* [ null, %27 ], [ %72, %71 ]
  %53 = phi i64 [ %22, %27 ], [ %76, %71 ]
  %54 = phi i64 [ 0, %27 ], [ %74, %71 ]
  %55 = bitcast %"struct.WTF::KeyValuePair.2283"* %51 to i8**
  %56 = load i8*, i8** %55, align 8
  %57 = icmp eq i8* %56, inttoptr (i64 -1 to i8*)
  br i1 %57, label %71, label %58

58:                                               ; preds = %50
  %59 = bitcast i8* %56 to %"class.WTF::StringImpl"*
  %60 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %18, align 8
  %61 = icmp eq %"class.WTF::StringImpl"* %60, %59
  br i1 %61, label %104, label %62

62:                                               ; preds = %58
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %28) #16
  store i8* %56, i8** %49, align 8
  %63 = getelementptr inbounds i8, i8* %56, i64 12
  store i8* %63, i8** %29, align 8
  %64 = getelementptr inbounds i8, i8* %56, i64 4
  %65 = bitcast i8* %64 to i32*
  %66 = load i32, i32* %65, align 4
  store i32 %66, i32* %30, align 8
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %31) #16
  store %"class.WTF::StringImpl"* %60, %"class.WTF::StringImpl"** %32, align 8
  %67 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %60, i64 1
  store %"class.WTF::StringImpl"* %67, %"class.WTF::StringImpl"** %34, align 8
  %68 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %60, i64 0, i32 1
  %69 = load i32, i32* %68, align 4
  store i32 %69, i32* %35, align 8
  %70 = call zeroext i1 @_ZN3WTF37DeprecatedEqualIgnoringCaseAndNullityERKNS_10StringViewES2_(%"class.WTF::StringView"* nonnull dereferenceable(24) %4, %"class.WTF::StringView"* nonnull dereferenceable(24) %5) #16
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %31) #16
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %28) #16
  br i1 %70, label %104, label %71

71:                                               ; preds = %50, %62
  %72 = phi %"struct.WTF::KeyValuePair.2283"* [ %52, %62 ], [ %51, %50 ]
  %73 = icmp eq i64 %54, 0
  %74 = select i1 %73, i64 %48, i64 %54
  %75 = add i64 %74, %53
  %76 = and i64 %75, %17
  %77 = getelementptr inbounds %"struct.WTF::KeyValuePair.2283", %"struct.WTF::KeyValuePair.2283"* %13, i64 %76
  %78 = getelementptr inbounds %"struct.WTF::KeyValuePair.2283", %"struct.WTF::KeyValuePair.2283"* %77, i64 0, i32 0, i32 0, i32 0, i32 0
  %79 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %78, align 8
  %80 = icmp eq %"class.WTF::StringImpl"* %79, null
  br i1 %80, label %81, label %50

81:                                               ; preds = %71
  %82 = icmp eq %"struct.WTF::KeyValuePair.2283"* %72, null
  br i1 %82, label %91, label %83

83:                                               ; preds = %81
  %84 = bitcast %"struct.WTF::KeyValuePair.2283"* %72 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %84, i8 0, i64 16, i1 false) #16
  %85 = getelementptr inbounds %"class.WTF::HashTable.2280", %"class.WTF::HashTable.2280"* %0, i64 0, i32 3
  %86 = load i32, i32* %85, align 8
  %87 = add i32 %86, 2147483647
  %88 = and i32 %87, 2147483647
  %89 = and i32 %86, -2147483648
  %90 = or i32 %88, %89
  store i32 %90, i32* %85, align 8
  br label %91

91:                                               ; preds = %12, %81, %83
  %92 = phi %"struct.WTF::KeyValuePair.2283"* [ %72, %83 ], [ %77, %81 ], [ %23, %12 ]
  call void @_ZN3WTF17HashMapTranslatorINS_18HashMapValueTraitsINS_10HashTraitsINS_12AtomicStringEEES4_EENS_15CaseFoldingHashENS_18PartitionAllocatorEE9TranslateINS_12KeyValuePairIS3_S3_EERKS3_SD_EEvRT_OT0_OT1_(%"struct.WTF::KeyValuePair.2283"* dereferenceable(16) %92, %"class.WTF::AtomicString"* dereferenceable(8) %1, %"class.WTF::AtomicString"* dereferenceable(8) %2)
  %93 = getelementptr inbounds %"class.WTF::HashTable.2280", %"class.WTF::HashTable.2280"* %0, i64 0, i32 2
  %94 = load i32, i32* %93, align 4
  %95 = add i32 %94, 1
  store i32 %95, i32* %93, align 4
  %96 = getelementptr inbounds %"class.WTF::HashTable.2280", %"class.WTF::HashTable.2280"* %0, i64 0, i32 3
  %97 = load i32, i32* %96, align 8
  %98 = add i32 %97, %95
  %99 = shl i32 %98, 1
  %100 = load i32, i32* %14, align 8
  %101 = icmp ult i32 %99, %100
  br i1 %101, label %104, label %102

102:                                              ; preds = %91
  %103 = call %"struct.WTF::KeyValuePair.2283"* @_ZN3WTF9HashTableINS_12AtomicStringENS_12KeyValuePairIS1_S1_EENS_24KeyValuePairKeyExtractorENS_15CaseFoldingHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EES8_EES8_NS_18PartitionAllocatorEE6ExpandEPS3_(%"class.WTF::HashTable.2280"* %0, %"struct.WTF::KeyValuePair.2283"* %92)
  br label %104

104:                                              ; preds = %58, %62, %91, %102
  %105 = phi i8 [ 1, %91 ], [ 1, %102 ], [ 0, %62 ], [ 0, %58 ]
  %106 = phi %"struct.WTF::KeyValuePair.2283"* [ %92, %91 ], [ %103, %102 ], [ %51, %62 ], [ %51, %58 ]
  %107 = insertvalue { %"struct.WTF::KeyValuePair.2283"*, i8 } undef, %"struct.WTF::KeyValuePair.2283"* %106, 0
  %108 = insertvalue { %"struct.WTF::KeyValuePair.2283"*, i8 } %107, i8 %105, 1
  ret { %"struct.WTF::KeyValuePair.2283"*, i8 } %108
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.WTF::KeyValuePair.2283"* @_ZN3WTF9HashTableINS_12AtomicStringENS_12KeyValuePairIS1_S1_EENS_24KeyValuePairKeyExtractorENS_15CaseFoldingHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EES8_EES8_NS_18PartitionAllocatorEE6ExpandEPS3_(%"class.WTF::HashTable.2280"*, %"struct.WTF::KeyValuePair.2283"*) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = getelementptr inbounds %"class.WTF::HashTable.2280", %"class.WTF::HashTable.2280"* %0, i64 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %31, label %9

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"class.WTF::HashTable.2280", %"class.WTF::HashTable.2280"* %0, i64 0, i32 2
  %11 = load i32, i32* %10, align 4
  %12 = mul i32 %11, 6
  %13 = shl i32 %7, 1
  %14 = icmp ult i32 %12, %13
  br i1 %14, label %31, label %15

15:                                               ; preds = %9
  %16 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %16) #16
  %17 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %17, align 8
  %18 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %18)
  %19 = icmp ugt i32 %13, %7
  br i1 %19, label %20, label %21

20:                                               ; preds = %15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18)
  store i8* null, i8** %17, align 8
  br label %30

21:                                               ; preds = %15
  %22 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %13) #16
  %23 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %7) #16
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.13, i64 0, i64 0), i8* %22, i8* %23) #16
  %24 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %25 = load i8*, i8** %24, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18)
  store i8* %25, i8** %17, align 8
  %26 = icmp eq i8* %25, null
  br i1 %26, label %30, label %27

27:                                               ; preds = %21
  %28 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %28) #16
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.14, i64 0, i64 0), i32 1783, %"class.logging::CheckOpResult"* nonnull %4) #16
  %29 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #16
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %28) #16
  br label %30

30:                                               ; preds = %20, %21, %27
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16) #16
  br label %31

31:                                               ; preds = %9, %2, %30
  %32 = phi i32 [ %13, %30 ], [ 8, %2 ], [ %7, %9 ]
  %33 = zext i32 %32 to i64
  %34 = shl nuw nsw i64 %33, 4
  %35 = call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %34, i8* getelementptr inbounds ([103 x i8], [103 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_12KeyValuePairINS_12AtomicStringES2_EEEEPKcv, i64 0, i64 0)) #16
  call void @llvm.memset.p0i8.i64(i8* align 1 %35, i8 0, i64 %34, i1 false) #16
  %36 = bitcast i8* %35 to %"struct.WTF::KeyValuePair.2283"*
  %37 = call %"struct.WTF::KeyValuePair.2283"* @_ZN3WTF9HashTableINS_12AtomicStringENS_12KeyValuePairIS1_S1_EENS_24KeyValuePairKeyExtractorENS_15CaseFoldingHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EES8_EES8_NS_18PartitionAllocatorEE8RehashToEPS3_jSC_(%"class.WTF::HashTable.2280"* %0, %"struct.WTF::KeyValuePair.2283"* %36, i32 %32, %"struct.WTF::KeyValuePair.2283"* %1) #16
  ret %"struct.WTF::KeyValuePair.2283"* %37
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF17HashMapTranslatorINS_18HashMapValueTraitsINS_10HashTraitsINS_12AtomicStringEEES4_EENS_15CaseFoldingHashENS_18PartitionAllocatorEE9TranslateINS_12KeyValuePairIS3_S3_EERKS3_SD_EEvRT_OT0_OT1_(%"struct.WTF::KeyValuePair.2283"* dereferenceable(16), %"class.WTF::AtomicString"* dereferenceable(8), %"class.WTF::AtomicString"* dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %1, i64 0, i32 0, i32 0, i32 0
  %5 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %4, align 8
  %6 = icmp eq %"class.WTF::StringImpl"* %5, null
  br i1 %6, label %24, label %7

7:                                                ; preds = %3
  %8 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %5, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %9 = load atomic i32, i32* %8 monotonic, align 4
  %10 = and i32 %9, 2
  %11 = icmp eq i32 %10, 0
  br i1 %11, label %12, label %24

12:                                               ; preds = %7
  %13 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %5, i64 0, i32 0
  %14 = load i32, i32* %13, align 4
  %15 = zext i32 %14 to i33
  %16 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %15, i33 1) #16
  %17 = extractvalue { i33, i1 } %16, 1
  %18 = extractvalue { i33, i1 } %16, 0
  %19 = icmp slt i33 %18, 0
  %20 = or i1 %17, %19
  br i1 %20, label %21, label %22, !prof !3

21:                                               ; preds = %12
  tail call void @llvm.trap() #16
  unreachable

22:                                               ; preds = %12
  %23 = trunc i33 %18 to i32
  store i32 %23, i32* %13, align 4
  br label %24

24:                                               ; preds = %22, %7, %3
  %25 = ptrtoint %"class.WTF::StringImpl"* %5 to i64
  %26 = bitcast %"struct.WTF::KeyValuePair.2283"* %0 to i64*
  %27 = getelementptr inbounds %"struct.WTF::KeyValuePair.2283", %"struct.WTF::KeyValuePair.2283"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %28 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %27, align 8
  store i64 %25, i64* %26, align 8
  %29 = icmp eq %"class.WTF::StringImpl"* %28, null
  br i1 %29, label %43, label %30

30:                                               ; preds = %24
  %31 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %28, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %32 = load atomic i32, i32* %31 monotonic, align 4
  %33 = and i32 %32, 2
  %34 = icmp eq i32 %33, 0
  %35 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %28, i64 0, i32 0
  %36 = load i32, i32* %35, align 4
  br i1 %34, label %37, label %39

37:                                               ; preds = %30
  %38 = add i32 %36, -1
  store i32 %38, i32* %35, align 4
  br label %39

39:                                               ; preds = %37, %30
  %40 = phi i32 [ %38, %37 ], [ %36, %30 ]
  %41 = icmp eq i32 %40, 0
  br i1 %41, label %42, label %43

42:                                               ; preds = %39
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %28) #16
  br label %43

43:                                               ; preds = %24, %39, %42
  %44 = getelementptr inbounds %"struct.WTF::KeyValuePair.2283", %"struct.WTF::KeyValuePair.2283"* %0, i64 0, i32 1
  %45 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %2, i64 0, i32 0, i32 0, i32 0
  %46 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %45, align 8
  %47 = icmp eq %"class.WTF::StringImpl"* %46, null
  br i1 %47, label %65, label %48

48:                                               ; preds = %43
  %49 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %46, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %50 = load atomic i32, i32* %49 monotonic, align 4
  %51 = and i32 %50, 2
  %52 = icmp eq i32 %51, 0
  br i1 %52, label %53, label %65

53:                                               ; preds = %48
  %54 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %46, i64 0, i32 0
  %55 = load i32, i32* %54, align 4
  %56 = zext i32 %55 to i33
  %57 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %56, i33 1) #16
  %58 = extractvalue { i33, i1 } %57, 1
  %59 = extractvalue { i33, i1 } %57, 0
  %60 = icmp slt i33 %59, 0
  %61 = or i1 %58, %60
  br i1 %61, label %62, label %63, !prof !3

62:                                               ; preds = %53
  tail call void @llvm.trap() #16
  unreachable

63:                                               ; preds = %53
  %64 = trunc i33 %59 to i32
  store i32 %64, i32* %54, align 4
  br label %65

65:                                               ; preds = %63, %48, %43
  %66 = ptrtoint %"class.WTF::StringImpl"* %46 to i64
  %67 = bitcast %"class.WTF::AtomicString"* %44 to i64*
  %68 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %44, i64 0, i32 0, i32 0, i32 0
  %69 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %68, align 8
  store i64 %66, i64* %67, align 8
  %70 = icmp eq %"class.WTF::StringImpl"* %69, null
  br i1 %70, label %84, label %71

71:                                               ; preds = %65
  %72 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %69, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %73 = load atomic i32, i32* %72 monotonic, align 4
  %74 = and i32 %73, 2
  %75 = icmp eq i32 %74, 0
  %76 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %69, i64 0, i32 0
  %77 = load i32, i32* %76, align 4
  br i1 %75, label %78, label %80

78:                                               ; preds = %71
  %79 = add i32 %77, -1
  store i32 %79, i32* %76, align 4
  br label %80

80:                                               ; preds = %78, %71
  %81 = phi i32 [ %79, %78 ], [ %77, %71 ]
  %82 = icmp eq i32 %81, 0
  br i1 %82, label %83, label %84

83:                                               ; preds = %80
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %69) #16
  br label %84

84:                                               ; preds = %65, %80, %83
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.WTF::KeyValuePair.2283"* @_ZN3WTF9HashTableINS_12AtomicStringENS_12KeyValuePairIS1_S1_EENS_24KeyValuePairKeyExtractorENS_15CaseFoldingHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EES8_EES8_NS_18PartitionAllocatorEE8RehashToEPS3_jSC_(%"class.WTF::HashTable.2280"*, %"struct.WTF::KeyValuePair.2283"*, i32, %"struct.WTF::KeyValuePair.2283"*) local_unnamed_addr #0 comdat align 2 {
  %5 = alloca %"class.WTF::HashTable.2280", align 8
  %6 = bitcast %"class.WTF::HashTable.2280"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %6) #16
  %7 = getelementptr inbounds %"class.WTF::HashTable.2280", %"class.WTF::HashTable.2280"* %5, i64 0, i32 0
  %8 = getelementptr inbounds %"class.WTF::HashTable.2280", %"class.WTF::HashTable.2280"* %5, i64 0, i32 1
  %9 = getelementptr inbounds %"class.WTF::HashTable.2280", %"class.WTF::HashTable.2280"* %5, i64 0, i32 2
  %10 = getelementptr inbounds %"class.WTF::HashTable.2280", %"class.WTF::HashTable.2280"* %5, i64 0, i32 3
  %11 = bitcast %"class.WTF::HashTable.2280"* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %11, i8 -86, i64 24, i1 false)
  store %"struct.WTF::KeyValuePair.2283"* %1, %"struct.WTF::KeyValuePair.2283"** %7, align 8
  store i32 %2, i32* %8, align 8
  store i32 0, i32* %9, align 4
  store i32 0, i32* %10, align 8
  %12 = getelementptr inbounds %"class.WTF::HashTable.2280", %"class.WTF::HashTable.2280"* %0, i64 0, i32 1
  %13 = load i32, i32* %12, align 8
  %14 = icmp eq i32 %13, 0
  %15 = getelementptr inbounds %"class.WTF::HashTable.2280", %"class.WTF::HashTable.2280"* %0, i64 0, i32 0
  br i1 %14, label %16, label %21

16:                                               ; preds = %4
  %17 = ptrtoint %"struct.WTF::KeyValuePair.2283"* %1 to i64
  %18 = bitcast %"class.WTF::HashTable.2280"* %0 to i64*
  %19 = load i64, i64* %18, align 8
  %20 = bitcast %"class.WTF::HashTable.2280"* %5 to i64*
  br label %28

21:                                               ; preds = %4
  %22 = load %"struct.WTF::KeyValuePair.2283"*, %"struct.WTF::KeyValuePair.2283"** %15, align 8
  %23 = ptrtoint %"struct.WTF::KeyValuePair.2283"* %22 to i64
  br label %42

24:                                               ; preds = %60
  %25 = bitcast %"class.WTF::HashTable.2280"* %5 to i64*
  %26 = load i64, i64* %25, align 8
  %27 = bitcast %"class.WTF::HashTable.2280"* %0 to i64*
  br label %28

28:                                               ; preds = %16, %24
  %29 = phi i64* [ %20, %16 ], [ %25, %24 ]
  %30 = phi i64* [ %18, %16 ], [ %27, %24 ]
  %31 = phi i64 [ %17, %16 ], [ %26, %24 ]
  %32 = phi i64 [ %19, %16 ], [ %61, %24 ]
  %33 = phi %"struct.WTF::KeyValuePair.2283"* [ null, %16 ], [ %64, %24 ]
  %34 = phi i32 [ 0, %16 ], [ %62, %24 ]
  store atomic i64 %31, i64* %30 monotonic, align 8
  store i32 %2, i32* %12, align 8
  store i64 %32, i64* %29, align 8
  store i32 %34, i32* %8, align 8
  %35 = icmp eq i64 %32, 0
  br i1 %35, label %38, label %36

36:                                               ; preds = %28
  %37 = inttoptr i64 %32 to %"struct.WTF::KeyValuePair.2283"*
  call void @_ZN3WTF9HashTableINS_12AtomicStringENS_12KeyValuePairIS1_S1_EENS_24KeyValuePairKeyExtractorENS_15CaseFoldingHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EES8_EES8_NS_18PartitionAllocatorEE29DeleteAllBucketsAndDeallocateEPS3_j(%"struct.WTF::KeyValuePair.2283"* nonnull %37, i32 %34) #16
  store atomic i64 0, i64* %29 monotonic, align 8
  store i32 0, i32* %8, align 8
  store i32 0, i32* %9, align 4
  br label %38

38:                                               ; preds = %28, %36
  %39 = getelementptr inbounds %"class.WTF::HashTable.2280", %"class.WTF::HashTable.2280"* %0, i64 0, i32 3
  %40 = load i32, i32* %39, align 8
  %41 = and i32 %40, -2147483648
  store i32 %41, i32* %39, align 8
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %6) #16
  ret %"struct.WTF::KeyValuePair.2283"* %33

42:                                               ; preds = %21, %60
  %43 = phi i64 [ %61, %60 ], [ %23, %21 ]
  %44 = phi i32 [ %62, %60 ], [ %13, %21 ]
  %45 = phi %"struct.WTF::KeyValuePair.2283"* [ %63, %60 ], [ %22, %21 ]
  %46 = phi %"struct.WTF::KeyValuePair.2283"* [ %64, %60 ], [ null, %21 ]
  %47 = phi i32 [ %65, %60 ], [ 0, %21 ]
  %48 = zext i32 %47 to i64
  %49 = getelementptr inbounds %"struct.WTF::KeyValuePair.2283", %"struct.WTF::KeyValuePair.2283"* %45, i64 %48
  %50 = bitcast %"struct.WTF::KeyValuePair.2283"* %49 to i64*
  %51 = load i64, i64* %50, align 8
  switch i64 %51, label %52 [
    i64 -1, label %60
    i64 0, label %60
  ]

52:                                               ; preds = %42
  %53 = call %"struct.WTF::KeyValuePair.2283"* @_ZN3WTF9HashTableINS_12AtomicStringENS_12KeyValuePairIS1_S1_EENS_24KeyValuePairKeyExtractorENS_15CaseFoldingHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EES8_EES8_NS_18PartitionAllocatorEE8ReinsertEOS3_(%"class.WTF::HashTable.2280"* nonnull %5, %"struct.WTF::KeyValuePair.2283"* dereferenceable(16) %49)
  %54 = load %"struct.WTF::KeyValuePair.2283"*, %"struct.WTF::KeyValuePair.2283"** %15, align 8
  %55 = getelementptr inbounds %"struct.WTF::KeyValuePair.2283", %"struct.WTF::KeyValuePair.2283"* %54, i64 %48
  %56 = icmp eq %"struct.WTF::KeyValuePair.2283"* %55, %3
  %57 = select i1 %56, %"struct.WTF::KeyValuePair.2283"* %53, %"struct.WTF::KeyValuePair.2283"* %46
  %58 = load i32, i32* %12, align 8
  %59 = ptrtoint %"struct.WTF::KeyValuePair.2283"* %54 to i64
  br label %60

60:                                               ; preds = %42, %42, %52
  %61 = phi i64 [ %43, %42 ], [ %59, %52 ], [ %43, %42 ]
  %62 = phi i32 [ %44, %42 ], [ %58, %52 ], [ %44, %42 ]
  %63 = phi %"struct.WTF::KeyValuePair.2283"* [ %45, %42 ], [ %54, %52 ], [ %45, %42 ]
  %64 = phi %"struct.WTF::KeyValuePair.2283"* [ %46, %42 ], [ %57, %52 ], [ %46, %42 ]
  %65 = add i32 %47, 1
  %66 = icmp eq i32 %65, %62
  br i1 %66, label %24, label %42
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.WTF::KeyValuePair.2283"* @_ZN3WTF9HashTableINS_12AtomicStringENS_12KeyValuePairIS1_S1_EENS_24KeyValuePairKeyExtractorENS_15CaseFoldingHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EES8_EES8_NS_18PartitionAllocatorEE8ReinsertEOS3_(%"class.WTF::HashTable.2280"*, %"struct.WTF::KeyValuePair.2283"* dereferenceable(16)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"struct.WTF::KeyValuePair.2283", %"struct.WTF::KeyValuePair.2283"* %1, i64 0, i32 0
  %4 = tail call { %"struct.WTF::KeyValuePair.2283"*, i8 } @_ZN3WTF9HashTableINS_12AtomicStringENS_12KeyValuePairIS1_S1_EENS_24KeyValuePairKeyExtractorENS_15CaseFoldingHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EES8_EES8_NS_18PartitionAllocatorEE16LookupForWritingERKS1_(%"class.WTF::HashTable.2280"* %0, %"class.WTF::AtomicString"* dereferenceable(8) %3)
  %5 = extractvalue { %"struct.WTF::KeyValuePair.2283"*, i8 } %4, 0
  %6 = getelementptr inbounds %"struct.WTF::KeyValuePair.2283", %"struct.WTF::KeyValuePair.2283"* %5, i64 0, i32 1, i32 0, i32 0, i32 0
  %7 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %6, align 8
  %8 = icmp eq %"class.WTF::StringImpl"* %7, null
  br i1 %8, label %22, label %9

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %7, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %11 = load atomic i32, i32* %10 monotonic, align 4
  %12 = and i32 %11, 2
  %13 = icmp eq i32 %12, 0
  %14 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %7, i64 0, i32 0
  %15 = load i32, i32* %14, align 4
  br i1 %13, label %16, label %18

16:                                               ; preds = %9
  %17 = add i32 %15, -1
  store i32 %17, i32* %14, align 4
  br label %18

18:                                               ; preds = %16, %9
  %19 = phi i32 [ %17, %16 ], [ %15, %9 ]
  %20 = icmp eq i32 %19, 0
  br i1 %20, label %21, label %22

21:                                               ; preds = %18
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %7) #16
  br label %22

22:                                               ; preds = %21, %18, %2
  %23 = getelementptr inbounds %"struct.WTF::KeyValuePair.2283", %"struct.WTF::KeyValuePair.2283"* %5, i64 0, i32 0, i32 0, i32 0, i32 0
  %24 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %23, align 8
  %25 = icmp eq %"class.WTF::StringImpl"* %24, null
  br i1 %25, label %39, label %26

26:                                               ; preds = %22
  %27 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %24, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %28 = load atomic i32, i32* %27 monotonic, align 4
  %29 = and i32 %28, 2
  %30 = icmp eq i32 %29, 0
  %31 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %24, i64 0, i32 0
  %32 = load i32, i32* %31, align 4
  br i1 %30, label %33, label %35

33:                                               ; preds = %26
  %34 = add i32 %32, -1
  store i32 %34, i32* %31, align 4
  br label %35

35:                                               ; preds = %33, %26
  %36 = phi i32 [ %34, %33 ], [ %32, %26 ]
  %37 = icmp eq i32 %36, 0
  br i1 %37, label %38, label %39

38:                                               ; preds = %35
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %24) #16
  br label %39

39:                                               ; preds = %22, %35, %38
  %40 = getelementptr inbounds %"struct.WTF::KeyValuePair.2283", %"struct.WTF::KeyValuePair.2283"* %1, i64 0, i32 0, i32 0, i32 0, i32 0
  %41 = bitcast %"struct.WTF::KeyValuePair.2283"* %1 to i64*
  %42 = load i64, i64* %41, align 8
  %43 = bitcast %"struct.WTF::KeyValuePair.2283"* %5 to i64*
  store i64 %42, i64* %43, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %40, align 8
  %44 = getelementptr inbounds %"struct.WTF::KeyValuePair.2283", %"struct.WTF::KeyValuePair.2283"* %5, i64 0, i32 1
  %45 = getelementptr inbounds %"struct.WTF::KeyValuePair.2283", %"struct.WTF::KeyValuePair.2283"* %1, i64 0, i32 1
  %46 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %45, i64 0, i32 0, i32 0, i32 0
  %47 = bitcast %"class.WTF::AtomicString"* %45 to i64*
  %48 = load i64, i64* %47, align 8
  %49 = bitcast %"class.WTF::AtomicString"* %44 to i64*
  store i64 %48, i64* %49, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %46, align 8
  ret %"struct.WTF::KeyValuePair.2283"* %5
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.WTF::KeyValuePair.2283"*, i8 } @_ZN3WTF9HashTableINS_12AtomicStringENS_12KeyValuePairIS1_S1_EENS_24KeyValuePairKeyExtractorENS_15CaseFoldingHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EES8_EES8_NS_18PartitionAllocatorEE16LookupForWritingERKS1_(%"class.WTF::HashTable.2280"*, %"class.WTF::AtomicString"* dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.WTF::StringView", align 8
  %4 = alloca %"class.WTF::StringView", align 8
  %5 = getelementptr inbounds %"class.WTF::HashTable.2280", %"class.WTF::HashTable.2280"* %0, i64 0, i32 0
  %6 = load %"struct.WTF::KeyValuePair.2283"*, %"struct.WTF::KeyValuePair.2283"** %5, align 8
  %7 = getelementptr inbounds %"class.WTF::HashTable.2280", %"class.WTF::HashTable.2280"* %0, i64 0, i32 1
  %8 = load i32, i32* %7, align 8
  %9 = add i32 %8, -1
  %10 = zext i32 %9 to i64
  %11 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %1, i64 0, i32 0, i32 0, i32 0
  %12 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %11, align 8
  %13 = tail call i32 @_ZN3WTF15CaseFoldingHash7GetHashEPNS_10StringImplE(%"class.WTF::StringImpl"* %12) #16
  %14 = and i32 %13, %9
  %15 = zext i32 %14 to i64
  %16 = getelementptr inbounds %"struct.WTF::KeyValuePair.2283", %"struct.WTF::KeyValuePair.2283"* %6, i64 %15
  %17 = ptrtoint %"struct.WTF::KeyValuePair.2283"* %16 to i64
  %18 = getelementptr inbounds %"struct.WTF::KeyValuePair.2283", %"struct.WTF::KeyValuePair.2283"* %16, i64 0, i32 0, i32 0, i32 0, i32 0
  %19 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %18, align 8
  %20 = icmp eq %"class.WTF::StringImpl"* %19, null
  br i1 %20, label %46, label %21

21:                                               ; preds = %2
  %22 = bitcast %"class.WTF::StringView"* %3 to i8*
  %23 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %3, i64 0, i32 1
  %24 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %3, i64 0, i32 2
  %25 = bitcast %"class.WTF::StringView"* %4 to i8*
  %26 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %4, i64 0, i32 0
  %27 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %4, i64 0, i32 1
  %28 = bitcast i8** %27 to %"class.WTF::StringImpl"**
  %29 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %4, i64 0, i32 2
  %30 = xor i32 %13, -1
  %31 = lshr i32 %13, 23
  %32 = add i32 %31, %30
  %33 = shl i32 %32, 12
  %34 = xor i32 %33, %32
  %35 = lshr i32 %34, 7
  %36 = xor i32 %35, %34
  %37 = shl i32 %36, 2
  %38 = xor i32 %37, %36
  %39 = lshr i32 %38, 20
  %40 = xor i32 %39, %38
  %41 = or i32 %40, 1
  %42 = zext i32 %41 to i64
  %43 = bitcast %"class.WTF::StringView"* %3 to i8**
  br label %52

44:                                               ; preds = %74
  %45 = ptrtoint %"struct.WTF::KeyValuePair.2283"* %80 to i64
  br label %46

46:                                               ; preds = %44, %2
  %47 = phi i64 [ %17, %2 ], [ %45, %44 ]
  %48 = phi %"struct.WTF::KeyValuePair.2283"* [ null, %2 ], [ %75, %44 ]
  %49 = icmp eq %"struct.WTF::KeyValuePair.2283"* %48, null
  %50 = ptrtoint %"struct.WTF::KeyValuePair.2283"* %48 to i64
  %51 = select i1 %49, i64 %47, i64 %50
  br label %85

52:                                               ; preds = %74, %21
  %53 = phi %"struct.WTF::KeyValuePair.2283"* [ null, %21 ], [ %75, %74 ]
  %54 = phi i64 [ %17, %21 ], [ %81, %74 ]
  %55 = phi %"struct.WTF::KeyValuePair.2283"* [ %16, %21 ], [ %80, %74 ]
  %56 = phi i64 [ %15, %21 ], [ %79, %74 ]
  %57 = phi i64 [ 0, %21 ], [ %77, %74 ]
  %58 = bitcast %"struct.WTF::KeyValuePair.2283"* %55 to i8**
  %59 = load i8*, i8** %58, align 8
  %60 = icmp eq i8* %59, inttoptr (i64 -1 to i8*)
  br i1 %60, label %74, label %61

61:                                               ; preds = %52
  %62 = bitcast i8* %59 to %"class.WTF::StringImpl"*
  %63 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %11, align 8
  %64 = icmp eq %"class.WTF::StringImpl"* %63, %62
  br i1 %64, label %85, label %65

65:                                               ; preds = %61
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %22) #16
  store i8* %59, i8** %43, align 8
  %66 = getelementptr inbounds i8, i8* %59, i64 12
  store i8* %66, i8** %23, align 8
  %67 = getelementptr inbounds i8, i8* %59, i64 4
  %68 = bitcast i8* %67 to i32*
  %69 = load i32, i32* %68, align 4
  store i32 %69, i32* %24, align 8
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %25) #16
  store %"class.WTF::StringImpl"* %63, %"class.WTF::StringImpl"** %26, align 8
  %70 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %63, i64 1
  store %"class.WTF::StringImpl"* %70, %"class.WTF::StringImpl"** %28, align 8
  %71 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %63, i64 0, i32 1
  %72 = load i32, i32* %71, align 4
  store i32 %72, i32* %29, align 8
  %73 = call zeroext i1 @_ZN3WTF37DeprecatedEqualIgnoringCaseAndNullityERKNS_10StringViewES2_(%"class.WTF::StringView"* nonnull dereferenceable(24) %3, %"class.WTF::StringView"* nonnull dereferenceable(24) %4) #16
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %25) #16
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %22) #16
  br i1 %73, label %85, label %74

74:                                               ; preds = %65, %52
  %75 = phi %"struct.WTF::KeyValuePair.2283"* [ %53, %65 ], [ %55, %52 ]
  %76 = icmp eq i64 %57, 0
  %77 = select i1 %76, i64 %42, i64 %57
  %78 = add i64 %77, %56
  %79 = and i64 %78, %10
  %80 = getelementptr inbounds %"struct.WTF::KeyValuePair.2283", %"struct.WTF::KeyValuePair.2283"* %6, i64 %79
  %81 = ptrtoint %"struct.WTF::KeyValuePair.2283"* %80 to i64
  %82 = getelementptr inbounds %"struct.WTF::KeyValuePair.2283", %"struct.WTF::KeyValuePair.2283"* %80, i64 0, i32 0, i32 0, i32 0, i32 0
  %83 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %82, align 8
  %84 = icmp eq %"class.WTF::StringImpl"* %83, null
  br i1 %84, label %44, label %52

85:                                               ; preds = %61, %65, %46
  %86 = phi i64 [ %51, %46 ], [ %54, %65 ], [ %54, %61 ]
  %87 = phi i8 [ 0, %46 ], [ 1, %65 ], [ 1, %61 ]
  %88 = inttoptr i64 %86 to %"struct.WTF::KeyValuePair.2283"*
  %89 = insertvalue { %"struct.WTF::KeyValuePair.2283"*, i8 } undef, %"struct.WTF::KeyValuePair.2283"* %88, 0
  %90 = insertvalue { %"struct.WTF::KeyValuePair.2283"*, i8 } %89, i8 %87, 1
  ret { %"struct.WTF::KeyValuePair.2283"*, i8 } %90
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF9HashTableINS_12AtomicStringENS_12KeyValuePairIS1_S1_EENS_24KeyValuePairKeyExtractorENS_15CaseFoldingHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EES8_EES8_NS_18PartitionAllocatorEE29DeleteAllBucketsAndDeallocateEPS3_j(%"struct.WTF::KeyValuePair.2283"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq i32 %1, 0
  br i1 %3, label %6, label %4

4:                                                ; preds = %2
  %5 = zext i32 %1 to i64
  br label %8

6:                                                ; preds = %48, %2
  %7 = bitcast %"struct.WTF::KeyValuePair.2283"* %0 to i8*
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %7) #16
  ret void

8:                                                ; preds = %48, %4
  %9 = phi i64 [ 0, %4 ], [ %49, %48 ]
  %10 = getelementptr inbounds %"struct.WTF::KeyValuePair.2283", %"struct.WTF::KeyValuePair.2283"* %0, i64 %9
  %11 = bitcast %"struct.WTF::KeyValuePair.2283"* %10 to i8**
  %12 = load i8*, i8** %11, align 8
  %13 = icmp eq i8* %12, inttoptr (i64 -1 to i8*)
  br i1 %13, label %48, label %14

14:                                               ; preds = %8
  %15 = getelementptr inbounds %"struct.WTF::KeyValuePair.2283", %"struct.WTF::KeyValuePair.2283"* %0, i64 %9, i32 1, i32 0, i32 0, i32 0
  %16 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %15, align 8
  %17 = icmp eq %"class.WTF::StringImpl"* %16, null
  br i1 %17, label %31, label %18

18:                                               ; preds = %14
  %19 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %16, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %20 = load atomic i32, i32* %19 monotonic, align 4
  %21 = and i32 %20, 2
  %22 = icmp eq i32 %21, 0
  %23 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %16, i64 0, i32 0
  %24 = load i32, i32* %23, align 4
  br i1 %22, label %25, label %27

25:                                               ; preds = %18
  %26 = add i32 %24, -1
  store i32 %26, i32* %23, align 4
  br label %27

27:                                               ; preds = %25, %18
  %28 = phi i32 [ %26, %25 ], [ %24, %18 ]
  %29 = icmp eq i32 %28, 0
  br i1 %29, label %30, label %31

30:                                               ; preds = %27
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %16) #16
  br label %31

31:                                               ; preds = %30, %27, %14
  %32 = getelementptr inbounds %"struct.WTF::KeyValuePair.2283", %"struct.WTF::KeyValuePair.2283"* %10, i64 0, i32 0, i32 0, i32 0, i32 0
  %33 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %32, align 8
  %34 = icmp eq %"class.WTF::StringImpl"* %33, null
  br i1 %34, label %48, label %35

35:                                               ; preds = %31
  %36 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %33, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %37 = load atomic i32, i32* %36 monotonic, align 4
  %38 = and i32 %37, 2
  %39 = icmp eq i32 %38, 0
  %40 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %33, i64 0, i32 0
  %41 = load i32, i32* %40, align 4
  br i1 %39, label %42, label %44

42:                                               ; preds = %35
  %43 = add i32 %41, -1
  store i32 %43, i32* %40, align 4
  br label %44

44:                                               ; preds = %42, %35
  %45 = phi i32 [ %43, %42 ], [ %41, %35 ]
  %46 = icmp eq i32 %45, 0
  br i1 %46, label %47, label %48

47:                                               ; preds = %44
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %33) #16
  br label %48

48:                                               ; preds = %47, %44, %31, %8
  %49 = add nuw nsw i64 %9, 1
  %50 = icmp eq i64 %49, %5
  br i1 %50, label %6, label %8
}

declare %"class.WTF::StringImpl"* @_ZN3WTF12AtomicString11AddSlowCaseEPNS_10StringImplE(%"class.WTF::StringImpl"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define internal fastcc void @_ZNSt3__16__sortIRZN5blink12_GLOBAL__N_120ResponsesAccumulator22AddRequestResponsePairERKN4mojo9StructPtrINS1_5mojom5blink15FetchAPIRequestEEERKNS5_INS7_16FetchAPIResponseEEEEUlRKNS2_15RequestResponseESI_E_PSG_EEvT0_SM_T_(%"struct.blink::(anonymous namespace)::RequestResponse"*, %"struct.blink::(anonymous namespace)::RequestResponse"*) unnamed_addr #0 {
  %3 = alloca %"struct.blink::(anonymous namespace)::RequestResponse", align 8
  br label %4

4:                                                ; preds = %382, %2
  %5 = phi %"struct.blink::(anonymous namespace)::RequestResponse"* [ %1, %2 ], [ %366, %382 ]
  %6 = phi %"struct.blink::(anonymous namespace)::RequestResponse"* [ %0, %2 ], [ %14, %382 ]
  %7 = ptrtoint %"struct.blink::(anonymous namespace)::RequestResponse"* %5 to i64
  %8 = getelementptr inbounds %"struct.blink::(anonymous namespace)::RequestResponse", %"struct.blink::(anonymous namespace)::RequestResponse"* %5, i64 -1
  %9 = getelementptr inbounds %"struct.blink::(anonymous namespace)::RequestResponse", %"struct.blink::(anonymous namespace)::RequestResponse"* %8, i64 0, i32 0
  %10 = ptrtoint %"struct.blink::(anonymous namespace)::RequestResponse"* %5 to i64
  br label %11

11:                                               ; preds = %393, %4
  %12 = phi %"struct.blink::(anonymous namespace)::RequestResponse"* [ %6, %4 ], [ %394, %393 ]
  br label %13

13:                                               ; preds = %327, %11
  %14 = phi %"struct.blink::(anonymous namespace)::RequestResponse"* [ %12, %11 ], [ %318, %327 ]
  %15 = ptrtoint %"struct.blink::(anonymous namespace)::RequestResponse"* %14 to i64
  %16 = sub i64 %7, %15
  %17 = sdiv exact i64 %16, 96
  switch i64 %17, label %39 [
    i64 0, label %397
    i64 1, label %397
    i64 2, label %18
    i64 3, label %24
    i64 4, label %28
    i64 5, label %33
  ]

18:                                               ; preds = %13
  %19 = getelementptr inbounds %"struct.blink::(anonymous namespace)::RequestResponse", %"struct.blink::(anonymous namespace)::RequestResponse"* %5, i64 -1
  %20 = getelementptr inbounds %"struct.blink::(anonymous namespace)::RequestResponse", %"struct.blink::(anonymous namespace)::RequestResponse"* %19, i64 0, i32 0
  %21 = getelementptr inbounds %"struct.blink::(anonymous namespace)::RequestResponse", %"struct.blink::(anonymous namespace)::RequestResponse"* %14, i64 0, i32 0
  %22 = tail call zeroext i1 @_ZN3WTF23CodeUnitCompareLessThanERKNS_6StringES2_(%"class.WTF::String"* dereferenceable(8) %20, %"class.WTF::String"* dereferenceable(8) %21) #16
  br i1 %22, label %23, label %397

23:                                               ; preds = %18
  tail call fastcc void @_ZNSt3__14swapIN5blink12_GLOBAL__N_115RequestResponseEEENS_9enable_ifIXaasr21is_move_constructibleIT_EE5valuesr18is_move_assignableIS5_EE5valueEvE4typeERS5_S8_(%"struct.blink::(anonymous namespace)::RequestResponse"* dereferenceable(96) %14, %"struct.blink::(anonymous namespace)::RequestResponse"* dereferenceable(96) %19)
  br label %397

24:                                               ; preds = %13
  %25 = getelementptr inbounds %"struct.blink::(anonymous namespace)::RequestResponse", %"struct.blink::(anonymous namespace)::RequestResponse"* %14, i64 1
  %26 = getelementptr inbounds %"struct.blink::(anonymous namespace)::RequestResponse", %"struct.blink::(anonymous namespace)::RequestResponse"* %5, i64 -1
  %27 = tail call fastcc i32 @_ZNSt3__17__sort3IRZN5blink12_GLOBAL__N_120ResponsesAccumulator22AddRequestResponsePairERKN4mojo9StructPtrINS1_5mojom5blink15FetchAPIRequestEEERKNS5_INS7_16FetchAPIResponseEEEEUlRKNS2_15RequestResponseESI_E_PSG_EEjT0_SM_SM_T_(%"struct.blink::(anonymous namespace)::RequestResponse"* %14, %"struct.blink::(anonymous namespace)::RequestResponse"* %25, %"struct.blink::(anonymous namespace)::RequestResponse"* %26)
  br label %397

28:                                               ; preds = %13
  %29 = getelementptr inbounds %"struct.blink::(anonymous namespace)::RequestResponse", %"struct.blink::(anonymous namespace)::RequestResponse"* %14, i64 1
  %30 = getelementptr inbounds %"struct.blink::(anonymous namespace)::RequestResponse", %"struct.blink::(anonymous namespace)::RequestResponse"* %14, i64 2
  %31 = getelementptr inbounds %"struct.blink::(anonymous namespace)::RequestResponse", %"struct.blink::(anonymous namespace)::RequestResponse"* %5, i64 -1
  %32 = tail call fastcc i32 @_ZNSt3__17__sort4IRZN5blink12_GLOBAL__N_120ResponsesAccumulator22AddRequestResponsePairERKN4mojo9StructPtrINS1_5mojom5blink15FetchAPIRequestEEERKNS5_INS7_16FetchAPIResponseEEEEUlRKNS2_15RequestResponseESI_E_PSG_EEjT0_SM_SM_SM_T_(%"struct.blink::(anonymous namespace)::RequestResponse"* %14, %"struct.blink::(anonymous namespace)::RequestResponse"* %29, %"struct.blink::(anonymous namespace)::RequestResponse"* %30, %"struct.blink::(anonymous namespace)::RequestResponse"* %31)
  br label %397

33:                                               ; preds = %13
  %34 = getelementptr inbounds %"struct.blink::(anonymous namespace)::RequestResponse", %"struct.blink::(anonymous namespace)::RequestResponse"* %14, i64 1
  %35 = getelementptr inbounds %"struct.blink::(anonymous namespace)::RequestResponse", %"struct.blink::(anonymous namespace)::RequestResponse"* %14, i64 2
  %36 = getelementptr inbounds %"struct.blink::(anonymous namespace)::RequestResponse", %"struct.blink::(anonymous namespace)::RequestResponse"* %14, i64 3
  %37 = getelementptr inbounds %"struct.blink::(anonymous namespace)::RequestResponse", %"struct.blink::(anonymous namespace)::RequestResponse"* %5, i64 -1
  %38 = tail call fastcc i32 @_ZNSt3__17__sort5IRZN5blink12_GLOBAL__N_120ResponsesAccumulator22AddRequestResponsePairERKN4mojo9StructPtrINS1_5mojom5blink15FetchAPIRequestEEERKNS5_INS7_16FetchAPIResponseEEEEUlRKNS2_15RequestResponseESI_E_PSG_EEjT0_SM_SM_SM_SM_T_(%"struct.blink::(anonymous namespace)::RequestResponse"* %14, %"struct.blink::(anonymous namespace)::RequestResponse"* %34, %"struct.blink::(anonymous namespace)::RequestResponse"* %35, %"struct.blink::(anonymous namespace)::RequestResponse"* %36, %"struct.blink::(anonymous namespace)::RequestResponse"* %37)
  br label %397

39:                                               ; preds = %13
  %40 = icmp slt i64 %16, 672
  br i1 %40, label %41, label %277

41:                                               ; preds = %39
  %42 = getelementptr inbounds %"struct.blink::(anonymous namespace)::RequestResponse", %"struct.blink::(anonymous namespace)::RequestResponse"* %14, i64 2
  %43 = getelementptr inbounds %"struct.blink::(anonymous namespace)::RequestResponse", %"struct.blink::(anonymous namespace)::RequestResponse"* %14, i64 1
  %44 = tail call fastcc i32 @_ZNSt3__17__sort3IRZN5blink12_GLOBAL__N_120ResponsesAccumulator22AddRequestResponsePairERKN4mojo9StructPtrINS1_5mojom5blink15FetchAPIRequestEEERKNS5_INS7_16FetchAPIResponseEEEEUlRKNS2_15RequestResponseESI_E_PSG_EEjT0_SM_SM_T_(%"struct.blink::(anonymous namespace)::RequestResponse"* %14, %"struct.blink::(anonymous namespace)::RequestResponse"* %43, %"struct.blink::(anonymous namespace)::RequestResponse"* %42) #16
  %45 = getelementptr inbounds %"struct.blink::(anonymous namespace)::RequestResponse", %"struct.blink::(anonymous namespace)::RequestResponse"* %14, i64 3
  %46 = icmp eq %"struct.blink::(anonymous namespace)::RequestResponse"* %45, %5
  br i1 %46, label %397, label %47

47:                                               ; preds = %41
  %48 = bitcast %"struct.blink::(anonymous namespace)::RequestResponse"* %3 to i8*
  %49 = getelementptr inbounds %"struct.blink::(anonymous namespace)::RequestResponse", %"struct.blink::(anonymous namespace)::RequestResponse"* %3, i64 0, i32 0
  %50 = getelementptr inbounds %"struct.blink::(anonymous namespace)::RequestResponse", %"struct.blink::(anonymous namespace)::RequestResponse"* %3, i64 0, i32 0, i32 0, i32 0
  %51 = bitcast %"struct.blink::(anonymous namespace)::RequestResponse"* %3 to i64*
  %52 = getelementptr inbounds %"struct.blink::(anonymous namespace)::RequestResponse", %"struct.blink::(anonymous namespace)::RequestResponse"* %3, i64 0, i32 1
  %53 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %52, i64 0, i32 0, i32 0
  %54 = bitcast %"class.WTF::String"* %52 to i64*
  %55 = getelementptr inbounds %"struct.blink::(anonymous namespace)::RequestResponse", %"struct.blink::(anonymous namespace)::RequestResponse"* %3, i64 0, i32 2, i32 0, i32 0
  %56 = getelementptr inbounds %"struct.blink::(anonymous namespace)::RequestResponse", %"struct.blink::(anonymous namespace)::RequestResponse"* %3, i64 0, i32 3
  %57 = getelementptr inbounds %"struct.blink::(anonymous namespace)::RequestResponse", %"struct.blink::(anonymous namespace)::RequestResponse"* %3, i64 0, i32 4
  %58 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %57, i64 0, i32 0, i32 0
  %59 = bitcast %"class.WTF::String"* %57 to i64*
  %60 = getelementptr inbounds %"struct.blink::(anonymous namespace)::RequestResponse", %"struct.blink::(anonymous namespace)::RequestResponse"* %3, i64 0, i32 5
  %61 = bitcast double* %60 to i8*
  %62 = getelementptr inbounds %"struct.blink::(anonymous namespace)::RequestResponse", %"struct.blink::(anonymous namespace)::RequestResponse"* %3, i64 0, i32 8, i32 0, i32 0
  %63 = getelementptr inbounds %"struct.blink::(anonymous namespace)::RequestResponse", %"struct.blink::(anonymous namespace)::RequestResponse"* %3, i64 0, i32 8
  %64 = getelementptr inbounds %"struct.blink::(anonymous namespace)::RequestResponse", %"struct.blink::(anonymous namespace)::RequestResponse"* %3, i64 0, i32 4, i32 0, i32 0
  %65 = getelementptr inbounds %"struct.blink::(anonymous namespace)::RequestResponse", %"struct.blink::(anonymous namespace)::RequestResponse"* %3, i64 0, i32 2
  %66 = getelementptr inbounds %"struct.blink::(anonymous namespace)::RequestResponse", %"struct.blink::(anonymous namespace)::RequestResponse"* %3, i64 0, i32 1, i32 0, i32 0
  br label %67

67:                                               ; preds = %274, %47
  %68 = phi %"struct.blink::(anonymous namespace)::RequestResponse"* [ %45, %47 ], [ %275, %274 ]
  %69 = phi %"struct.blink::(anonymous namespace)::RequestResponse"* [ %42, %47 ], [ %68, %274 ]
  %70 = getelementptr inbounds %"struct.blink::(anonymous namespace)::RequestResponse", %"struct.blink::(anonymous namespace)::RequestResponse"* %68, i64 0, i32 0
  %71 = getelementptr inbounds %"struct.blink::(anonymous namespace)::RequestResponse", %"struct.blink::(anonymous namespace)::RequestResponse"* %69, i64 0, i32 0
  %72 = call zeroext i1 @_ZN3WTF23CodeUnitCompareLessThanERKNS_6StringES2_(%"class.WTF::String"* dereferenceable(8) %70, %"class.WTF::String"* dereferenceable(8) %71) #16
  br i1 %72, label %73, label %274

73:                                               ; preds = %67
  call void @llvm.lifetime.start.p0i8(i64 96, i8* nonnull %48) #16
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %48, i8* align 8 bitcast ({ %"class.WTF::String", %"class.WTF::String", %"class.blink::HTTPHeaderMap", i32, [4 x i8], %"class.WTF::String", double, i32, [4 x i8], %"class.blink::HTTPHeaderMap" }* @__const._ZNSt3__127__insertion_sort_incompleteIRZN5blink12_GLOBAL__N_120ResponsesAccumulator22AddRequestResponsePairERKN4mojo9StructPtrINS1_5mojom5blink15FetchAPIRequestEEERKNS5_INS7_16FetchAPIResponseEEEEUlRKNS2_15RequestResponseESI_E_PSG_EEbT0_SM_T_.__t to i8*), i64 96, i1 false) #16
  call fastcc void @_ZN5blink12_GLOBAL__N_115RequestResponseC2EOS1_(%"struct.blink::(anonymous namespace)::RequestResponse"* nonnull %3, %"struct.blink::(anonymous namespace)::RequestResponse"* dereferenceable(96) %68) #16
  br label %74

74:                                               ; preds = %158, %73
  %75 = phi %"struct.blink::(anonymous namespace)::RequestResponse"* [ %68, %73 ], [ %76, %158 ]
  %76 = phi %"struct.blink::(anonymous namespace)::RequestResponse"* [ %69, %73 ], [ %159, %158 ]
  %77 = getelementptr inbounds %"struct.blink::(anonymous namespace)::RequestResponse", %"struct.blink::(anonymous namespace)::RequestResponse"* %76, i64 0, i32 0, i32 0, i32 0
  %78 = bitcast %"struct.blink::(anonymous namespace)::RequestResponse"* %76 to i64*
  %79 = load i64, i64* %78, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %77, align 8
  %80 = bitcast %"struct.blink::(anonymous namespace)::RequestResponse"* %75 to i64*
  %81 = getelementptr inbounds %"struct.blink::(anonymous namespace)::RequestResponse", %"struct.blink::(anonymous namespace)::RequestResponse"* %75, i64 0, i32 0, i32 0, i32 0
  %82 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %81, align 8
  store i64 %79, i64* %80, align 8
  %83 = icmp eq %"class.WTF::StringImpl"* %82, null
  br i1 %83, label %97, label %84

84:                                               ; preds = %74
  %85 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %82, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %86 = load atomic i32, i32* %85 monotonic, align 4
  %87 = and i32 %86, 2
  %88 = icmp eq i32 %87, 0
  %89 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %82, i64 0, i32 0
  %90 = load i32, i32* %89, align 4
  br i1 %88, label %91, label %93

91:                                               ; preds = %84
  %92 = add i32 %90, -1
  store i32 %92, i32* %89, align 4
  br label %93

93:                                               ; preds = %91, %84
  %94 = phi i32 [ %92, %91 ], [ %90, %84 ]
  %95 = icmp eq i32 %94, 0
  br i1 %95, label %96, label %97

96:                                               ; preds = %93
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %82) #16
  br label %97

97:                                               ; preds = %96, %93, %74
  %98 = getelementptr inbounds %"struct.blink::(anonymous namespace)::RequestResponse", %"struct.blink::(anonymous namespace)::RequestResponse"* %75, i64 0, i32 1
  %99 = getelementptr inbounds %"struct.blink::(anonymous namespace)::RequestResponse", %"struct.blink::(anonymous namespace)::RequestResponse"* %76, i64 0, i32 1
  %100 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %99, i64 0, i32 0, i32 0
  %101 = bitcast %"class.WTF::String"* %99 to i64*
  %102 = load i64, i64* %101, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %100, align 8
  %103 = bitcast %"class.WTF::String"* %98 to i64*
  %104 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %98, i64 0, i32 0, i32 0
  %105 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %104, align 8
  store i64 %102, i64* %103, align 8
  %106 = icmp eq %"class.WTF::StringImpl"* %105, null
  br i1 %106, label %120, label %107

107:                                              ; preds = %97
  %108 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %105, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %109 = load atomic i32, i32* %108 monotonic, align 4
  %110 = and i32 %109, 2
  %111 = icmp eq i32 %110, 0
  %112 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %105, i64 0, i32 0
  %113 = load i32, i32* %112, align 4
  br i1 %111, label %114, label %116

114:                                              ; preds = %107
  %115 = add i32 %113, -1
  store i32 %115, i32* %112, align 4
  br label %116

116:                                              ; preds = %114, %107
  %117 = phi i32 [ %115, %114 ], [ %113, %107 ]
  %118 = icmp eq i32 %117, 0
  br i1 %118, label %119, label %120

119:                                              ; preds = %116
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %105) #16
  br label %120

120:                                              ; preds = %119, %116, %97
  %121 = getelementptr inbounds %"struct.blink::(anonymous namespace)::RequestResponse", %"struct.blink::(anonymous namespace)::RequestResponse"* %75, i64 0, i32 2, i32 0, i32 0
  %122 = getelementptr inbounds %"struct.blink::(anonymous namespace)::RequestResponse", %"struct.blink::(anonymous namespace)::RequestResponse"* %76, i64 0, i32 2, i32 0, i32 0
  %123 = call dereferenceable(24) %"class.WTF::HashTable.2280"* @_ZN3WTF9HashTableINS_12AtomicStringENS_12KeyValuePairIS1_S1_EENS_24KeyValuePairKeyExtractorENS_15CaseFoldingHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EES8_EES8_NS_18PartitionAllocatorEEaSERKSB_(%"class.WTF::HashTable.2280"* %121, %"class.WTF::HashTable.2280"* dereferenceable(24) %122) #16
  %124 = getelementptr inbounds %"struct.blink::(anonymous namespace)::RequestResponse", %"struct.blink::(anonymous namespace)::RequestResponse"* %76, i64 0, i32 3
  %125 = load i32, i32* %124, align 8
  %126 = getelementptr inbounds %"struct.blink::(anonymous namespace)::RequestResponse", %"struct.blink::(anonymous namespace)::RequestResponse"* %75, i64 0, i32 3
  store i32 %125, i32* %126, align 8
  %127 = getelementptr inbounds %"struct.blink::(anonymous namespace)::RequestResponse", %"struct.blink::(anonymous namespace)::RequestResponse"* %75, i64 0, i32 4
  %128 = getelementptr inbounds %"struct.blink::(anonymous namespace)::RequestResponse", %"struct.blink::(anonymous namespace)::RequestResponse"* %76, i64 0, i32 4
  %129 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %128, i64 0, i32 0, i32 0
  %130 = bitcast %"class.WTF::String"* %128 to i64*
  %131 = load i64, i64* %130, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %129, align 8
  %132 = bitcast %"class.WTF::String"* %127 to i64*
  %133 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %127, i64 0, i32 0, i32 0
  %134 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %133, align 8
  store i64 %131, i64* %132, align 8
  %135 = icmp eq %"class.WTF::StringImpl"* %134, null
  br i1 %135, label %149, label %136

136:                                              ; preds = %120
  %137 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %134, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %138 = load atomic i32, i32* %137 monotonic, align 4
  %139 = and i32 %138, 2
  %140 = icmp eq i32 %139, 0
  %141 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %134, i64 0, i32 0
  %142 = load i32, i32* %141, align 4
  br i1 %140, label %143, label %145

143:                                              ; preds = %136
  %144 = add i32 %142, -1
  store i32 %144, i32* %141, align 4
  br label %145

145:                                              ; preds = %143, %136
  %146 = phi i32 [ %144, %143 ], [ %142, %136 ]
  %147 = icmp eq i32 %146, 0
  br i1 %147, label %148, label %149

148:                                              ; preds = %145
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %134) #16
  br label %149

149:                                              ; preds = %148, %145, %120
  %150 = getelementptr inbounds %"struct.blink::(anonymous namespace)::RequestResponse", %"struct.blink::(anonymous namespace)::RequestResponse"* %75, i64 0, i32 5
  %151 = getelementptr inbounds %"struct.blink::(anonymous namespace)::RequestResponse", %"struct.blink::(anonymous namespace)::RequestResponse"* %76, i64 0, i32 5
  %152 = bitcast double* %150 to i8*
  %153 = bitcast double* %151 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %152, i8* align 8 %153, i64 12, i1 false) #16
  %154 = getelementptr inbounds %"struct.blink::(anonymous namespace)::RequestResponse", %"struct.blink::(anonymous namespace)::RequestResponse"* %75, i64 0, i32 8, i32 0, i32 0
  %155 = getelementptr inbounds %"struct.blink::(anonymous namespace)::RequestResponse", %"struct.blink::(anonymous namespace)::RequestResponse"* %76, i64 0, i32 8, i32 0, i32 0
  %156 = call dereferenceable(24) %"class.WTF::HashTable.2280"* @_ZN3WTF9HashTableINS_12AtomicStringENS_12KeyValuePairIS1_S1_EENS_24KeyValuePairKeyExtractorENS_15CaseFoldingHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EES8_EES8_NS_18PartitionAllocatorEEaSERKSB_(%"class.WTF::HashTable.2280"* %154, %"class.WTF::HashTable.2280"* dereferenceable(24) %155) #16
  %157 = icmp eq %"struct.blink::(anonymous namespace)::RequestResponse"* %76, %14
  br i1 %157, label %162, label %158

158:                                              ; preds = %149
  %159 = getelementptr inbounds %"struct.blink::(anonymous namespace)::RequestResponse", %"struct.blink::(anonymous namespace)::RequestResponse"* %76, i64 -1
  %160 = getelementptr inbounds %"struct.blink::(anonymous namespace)::RequestResponse", %"struct.blink::(anonymous namespace)::RequestResponse"* %159, i64 0, i32 0
  %161 = call zeroext i1 @_ZN3WTF23CodeUnitCompareLessThanERKNS_6StringES2_(%"class.WTF::String"* nonnull dereferenceable(8) %49, %"class.WTF::String"* dereferenceable(8) %160) #16
  br i1 %161, label %74, label %162

162:                                              ; preds = %158, %149
  %163 = phi %"struct.blink::(anonymous namespace)::RequestResponse"* [ %14, %149 ], [ %76, %158 ]
  %164 = bitcast %"struct.blink::(anonymous namespace)::RequestResponse"* %163 to i64*
  %165 = bitcast %"class.WTF::String"* %99 to i64*
  %166 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %99, i64 0, i32 0, i32 0
  %167 = bitcast %"class.WTF::String"* %128 to i64*
  %168 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %128, i64 0, i32 0, i32 0
  %169 = bitcast double* %151 to i8*
  %170 = getelementptr inbounds %"struct.blink::(anonymous namespace)::RequestResponse", %"struct.blink::(anonymous namespace)::RequestResponse"* %163, i64 0, i32 0, i32 0, i32 0
  %171 = getelementptr inbounds %"struct.blink::(anonymous namespace)::RequestResponse", %"struct.blink::(anonymous namespace)::RequestResponse"* %163, i64 0, i32 3
  %172 = load i64, i64* %51, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %50, align 8
  %173 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %170, align 8
  store i64 %172, i64* %164, align 8
  %174 = icmp eq %"class.WTF::StringImpl"* %173, null
  br i1 %174, label %188, label %175

175:                                              ; preds = %162
  %176 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %173, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %177 = load atomic i32, i32* %176 monotonic, align 4
  %178 = and i32 %177, 2
  %179 = icmp eq i32 %178, 0
  %180 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %173, i64 0, i32 0
  %181 = load i32, i32* %180, align 4
  br i1 %179, label %182, label %184

182:                                              ; preds = %175
  %183 = add i32 %181, -1
  store i32 %183, i32* %180, align 4
  br label %184

184:                                              ; preds = %182, %175
  %185 = phi i32 [ %183, %182 ], [ %181, %175 ]
  %186 = icmp eq i32 %185, 0
  br i1 %186, label %187, label %188

187:                                              ; preds = %184
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %173) #16
  br label %188

188:                                              ; preds = %187, %184, %162
  %189 = load i64, i64* %54, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %53, align 8
  %190 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %166, align 8
  store i64 %189, i64* %165, align 8
  %191 = icmp eq %"class.WTF::StringImpl"* %190, null
  br i1 %191, label %205, label %192

192:                                              ; preds = %188
  %193 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %190, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %194 = load atomic i32, i32* %193 monotonic, align 4
  %195 = and i32 %194, 2
  %196 = icmp eq i32 %195, 0
  %197 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %190, i64 0, i32 0
  %198 = load i32, i32* %197, align 4
  br i1 %196, label %199, label %201

199:                                              ; preds = %192
  %200 = add i32 %198, -1
  store i32 %200, i32* %197, align 4
  br label %201

201:                                              ; preds = %199, %192
  %202 = phi i32 [ %200, %199 ], [ %198, %192 ]
  %203 = icmp eq i32 %202, 0
  br i1 %203, label %204, label %205

204:                                              ; preds = %201
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %190) #16
  br label %205

205:                                              ; preds = %204, %201, %188
  %206 = call dereferenceable(24) %"class.WTF::HashTable.2280"* @_ZN3WTF9HashTableINS_12AtomicStringENS_12KeyValuePairIS1_S1_EENS_24KeyValuePairKeyExtractorENS_15CaseFoldingHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EES8_EES8_NS_18PartitionAllocatorEEaSERKSB_(%"class.WTF::HashTable.2280"* %122, %"class.WTF::HashTable.2280"* dereferenceable(24) %55) #16
  %207 = load i32, i32* %56, align 8
  store i32 %207, i32* %171, align 8
  %208 = load i64, i64* %59, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %58, align 8
  %209 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %168, align 8
  store i64 %208, i64* %167, align 8
  %210 = icmp eq %"class.WTF::StringImpl"* %209, null
  br i1 %210, label %224, label %211

211:                                              ; preds = %205
  %212 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %209, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %213 = load atomic i32, i32* %212 monotonic, align 4
  %214 = and i32 %213, 2
  %215 = icmp eq i32 %214, 0
  %216 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %209, i64 0, i32 0
  %217 = load i32, i32* %216, align 4
  br i1 %215, label %218, label %220

218:                                              ; preds = %211
  %219 = add i32 %217, -1
  store i32 %219, i32* %216, align 4
  br label %220

220:                                              ; preds = %218, %211
  %221 = phi i32 [ %219, %218 ], [ %217, %211 ]
  %222 = icmp eq i32 %221, 0
  br i1 %222, label %223, label %224

223:                                              ; preds = %220
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %209) #16
  br label %224

224:                                              ; preds = %223, %220, %205
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %169, i8* align 8 %61, i64 12, i1 false) #16
  %225 = call dereferenceable(24) %"class.WTF::HashTable.2280"* @_ZN3WTF9HashTableINS_12AtomicStringENS_12KeyValuePairIS1_S1_EENS_24KeyValuePairKeyExtractorENS_15CaseFoldingHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EES8_EES8_NS_18PartitionAllocatorEEaSERKSB_(%"class.WTF::HashTable.2280"* %155, %"class.WTF::HashTable.2280"* dereferenceable(24) %62) #16
  call void @_ZN5blink13HTTPHeaderMapD1Ev(%"class.blink::HTTPHeaderMap"* %63) #16
  %226 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %64, align 8
  %227 = icmp eq %"class.WTF::StringImpl"* %226, null
  br i1 %227, label %241, label %228

228:                                              ; preds = %224
  %229 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %226, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %230 = load atomic i32, i32* %229 monotonic, align 4
  %231 = and i32 %230, 2
  %232 = icmp eq i32 %231, 0
  %233 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %226, i64 0, i32 0
  %234 = load i32, i32* %233, align 4
  br i1 %232, label %235, label %237

235:                                              ; preds = %228
  %236 = add i32 %234, -1
  store i32 %236, i32* %233, align 4
  br label %237

237:                                              ; preds = %235, %228
  %238 = phi i32 [ %236, %235 ], [ %234, %228 ]
  %239 = icmp eq i32 %238, 0
  br i1 %239, label %240, label %241

240:                                              ; preds = %237
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %226) #16
  br label %241

241:                                              ; preds = %240, %237, %224
  call void @_ZN5blink13HTTPHeaderMapD1Ev(%"class.blink::HTTPHeaderMap"* %65) #16
  %242 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %66, align 8
  %243 = icmp eq %"class.WTF::StringImpl"* %242, null
  br i1 %243, label %257, label %244

244:                                              ; preds = %241
  %245 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %242, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %246 = load atomic i32, i32* %245 monotonic, align 4
  %247 = and i32 %246, 2
  %248 = icmp eq i32 %247, 0
  %249 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %242, i64 0, i32 0
  %250 = load i32, i32* %249, align 4
  br i1 %248, label %251, label %253

251:                                              ; preds = %244
  %252 = add i32 %250, -1
  store i32 %252, i32* %249, align 4
  br label %253

253:                                              ; preds = %251, %244
  %254 = phi i32 [ %252, %251 ], [ %250, %244 ]
  %255 = icmp eq i32 %254, 0
  br i1 %255, label %256, label %257

256:                                              ; preds = %253
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %242) #16
  br label %257

257:                                              ; preds = %256, %253, %241
  %258 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %50, align 8
  %259 = icmp eq %"class.WTF::StringImpl"* %258, null
  br i1 %259, label %273, label %260

260:                                              ; preds = %257
  %261 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %258, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %262 = load atomic i32, i32* %261 monotonic, align 4
  %263 = and i32 %262, 2
  %264 = icmp eq i32 %263, 0
  %265 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %258, i64 0, i32 0
  %266 = load i32, i32* %265, align 4
  br i1 %264, label %267, label %269

267:                                              ; preds = %260
  %268 = add i32 %266, -1
  store i32 %268, i32* %265, align 4
  br label %269

269:                                              ; preds = %267, %260
  %270 = phi i32 [ %268, %267 ], [ %266, %260 ]
  %271 = icmp eq i32 %270, 0
  br i1 %271, label %272, label %273

272:                                              ; preds = %269
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %258) #16
  br label %273

273:                                              ; preds = %272, %269, %257
  call void @llvm.lifetime.end.p0i8(i64 96, i8* nonnull %48) #16
  br label %274

274:                                              ; preds = %273, %67
  %275 = getelementptr inbounds %"struct.blink::(anonymous namespace)::RequestResponse", %"struct.blink::(anonymous namespace)::RequestResponse"* %68, i64 1
  %276 = icmp eq %"struct.blink::(anonymous namespace)::RequestResponse"* %275, %5
  br i1 %276, label %397, label %67

277:                                              ; preds = %39
  %278 = icmp sgt i64 %16, 95904
  %279 = udiv i64 %16, 192
  %280 = getelementptr inbounds %"struct.blink::(anonymous namespace)::RequestResponse", %"struct.blink::(anonymous namespace)::RequestResponse"* %14, i64 %279
  br i1 %278, label %281, label %286

281:                                              ; preds = %277
  %282 = udiv i64 %16, 384
  %283 = getelementptr inbounds %"struct.blink::(anonymous namespace)::RequestResponse", %"struct.blink::(anonymous namespace)::RequestResponse"* %14, i64 %282
  %284 = getelementptr inbounds %"struct.blink::(anonymous namespace)::RequestResponse", %"struct.blink::(anonymous namespace)::RequestResponse"* %280, i64 %282
  %285 = tail call fastcc i32 @_ZNSt3__17__sort5IRZN5blink12_GLOBAL__N_120ResponsesAccumulator22AddRequestResponsePairERKN4mojo9StructPtrINS1_5mojom5blink15FetchAPIRequestEEERKNS5_INS7_16FetchAPIResponseEEEEUlRKNS2_15RequestResponseESI_E_PSG_EEjT0_SM_SM_SM_SM_T_(%"struct.blink::(anonymous namespace)::RequestResponse"* %14, %"struct.blink::(anonymous namespace)::RequestResponse"* %283, %"struct.blink::(anonymous namespace)::RequestResponse"* %280, %"struct.blink::(anonymous namespace)::RequestResponse"* %284, %"struct.blink::(anonymous namespace)::RequestResponse"* %8)
  br label %288

286:                                              ; preds = %277
  %287 = tail call fastcc i32 @_ZNSt3__17__sort3IRZN5blink12_GLOBAL__N_120ResponsesAccumulator22AddRequestResponsePairERKN4mojo9StructPtrINS1_5mojom5blink15FetchAPIRequestEEERKNS5_INS7_16FetchAPIResponseEEEEUlRKNS2_15RequestResponseESI_E_PSG_EEjT0_SM_SM_T_(%"struct.blink::(anonymous namespace)::RequestResponse"* %14, %"struct.blink::(anonymous namespace)::RequestResponse"* %280, %"struct.blink::(anonymous namespace)::RequestResponse"* %8)
  br label %288

288:                                              ; preds = %286, %281
  %289 = phi i32 [ %285, %281 ], [ %287, %286 ]
  %290 = getelementptr inbounds %"struct.blink::(anonymous namespace)::RequestResponse", %"struct.blink::(anonymous namespace)::RequestResponse"* %14, i64 0, i32 0
  %291 = getelementptr inbounds %"struct.blink::(anonymous namespace)::RequestResponse", %"struct.blink::(anonymous namespace)::RequestResponse"* %280, i64 0, i32 0
  %292 = tail call zeroext i1 @_ZN3WTF23CodeUnitCompareLessThanERKNS_6StringES2_(%"class.WTF::String"* dereferenceable(8) %290, %"class.WTF::String"* dereferenceable(8) %291) #16
  br i1 %292, label %335, label %293

293:                                              ; preds = %288, %330
  %294 = phi %"struct.blink::(anonymous namespace)::RequestResponse"* [ %295, %330 ], [ %8, %288 ]
  %295 = getelementptr inbounds %"struct.blink::(anonymous namespace)::RequestResponse", %"struct.blink::(anonymous namespace)::RequestResponse"* %294, i64 -1
  %296 = icmp eq %"struct.blink::(anonymous namespace)::RequestResponse"* %14, %295
  br i1 %296, label %297, label %330

297:                                              ; preds = %293
  %298 = getelementptr inbounds %"struct.blink::(anonymous namespace)::RequestResponse", %"struct.blink::(anonymous namespace)::RequestResponse"* %14, i64 1
  %299 = tail call zeroext i1 @_ZN3WTF23CodeUnitCompareLessThanERKNS_6StringES2_(%"class.WTF::String"* dereferenceable(8) %290, %"class.WTF::String"* dereferenceable(8) %9) #16
  br i1 %299, label %311, label %300

300:                                              ; preds = %297
  %301 = icmp eq %"struct.blink::(anonymous namespace)::RequestResponse"* %298, %8
  br i1 %301, label %397, label %302

302:                                              ; preds = %300, %308
  %303 = phi %"struct.blink::(anonymous namespace)::RequestResponse"* [ %309, %308 ], [ %298, %300 ]
  %304 = getelementptr inbounds %"struct.blink::(anonymous namespace)::RequestResponse", %"struct.blink::(anonymous namespace)::RequestResponse"* %303, i64 0, i32 0
  %305 = tail call zeroext i1 @_ZN3WTF23CodeUnitCompareLessThanERKNS_6StringES2_(%"class.WTF::String"* dereferenceable(8) %290, %"class.WTF::String"* dereferenceable(8) %304) #16
  br i1 %305, label %306, label %308

306:                                              ; preds = %302
  tail call fastcc void @_ZNSt3__14swapIN5blink12_GLOBAL__N_115RequestResponseEEENS_9enable_ifIXaasr21is_move_constructibleIT_EE5valuesr18is_move_assignableIS5_EE5valueEvE4typeERS5_S8_(%"struct.blink::(anonymous namespace)::RequestResponse"* dereferenceable(96) %303, %"struct.blink::(anonymous namespace)::RequestResponse"* dereferenceable(96) %8)
  %307 = getelementptr inbounds %"struct.blink::(anonymous namespace)::RequestResponse", %"struct.blink::(anonymous namespace)::RequestResponse"* %303, i64 1
  br label %311

308:                                              ; preds = %302
  %309 = getelementptr inbounds %"struct.blink::(anonymous namespace)::RequestResponse", %"struct.blink::(anonymous namespace)::RequestResponse"* %303, i64 1
  %310 = icmp eq %"struct.blink::(anonymous namespace)::RequestResponse"* %309, %8
  br i1 %310, label %397, label %302

311:                                              ; preds = %306, %297
  %312 = phi %"struct.blink::(anonymous namespace)::RequestResponse"* [ %298, %297 ], [ %307, %306 ]
  %313 = icmp eq %"struct.blink::(anonymous namespace)::RequestResponse"* %312, %8
  br i1 %313, label %397, label %314

314:                                              ; preds = %311, %329
  %315 = phi %"struct.blink::(anonymous namespace)::RequestResponse"* [ %321, %329 ], [ %312, %311 ]
  %316 = phi %"struct.blink::(anonymous namespace)::RequestResponse"* [ %324, %329 ], [ %8, %311 ]
  br label %317

317:                                              ; preds = %317, %314
  %318 = phi %"struct.blink::(anonymous namespace)::RequestResponse"* [ %315, %314 ], [ %321, %317 ]
  %319 = getelementptr inbounds %"struct.blink::(anonymous namespace)::RequestResponse", %"struct.blink::(anonymous namespace)::RequestResponse"* %318, i64 0, i32 0
  %320 = tail call zeroext i1 @_ZN3WTF23CodeUnitCompareLessThanERKNS_6StringES2_(%"class.WTF::String"* dereferenceable(8) %290, %"class.WTF::String"* dereferenceable(8) %319) #16
  %321 = getelementptr inbounds %"struct.blink::(anonymous namespace)::RequestResponse", %"struct.blink::(anonymous namespace)::RequestResponse"* %318, i64 1
  br i1 %320, label %322, label %317

322:                                              ; preds = %317, %322
  %323 = phi %"struct.blink::(anonymous namespace)::RequestResponse"* [ %324, %322 ], [ %316, %317 ]
  %324 = getelementptr inbounds %"struct.blink::(anonymous namespace)::RequestResponse", %"struct.blink::(anonymous namespace)::RequestResponse"* %323, i64 -1
  %325 = getelementptr inbounds %"struct.blink::(anonymous namespace)::RequestResponse", %"struct.blink::(anonymous namespace)::RequestResponse"* %324, i64 0, i32 0
  %326 = tail call zeroext i1 @_ZN3WTF23CodeUnitCompareLessThanERKNS_6StringES2_(%"class.WTF::String"* dereferenceable(8) %290, %"class.WTF::String"* dereferenceable(8) %325) #16
  br i1 %326, label %322, label %327

327:                                              ; preds = %322
  %328 = icmp ult %"struct.blink::(anonymous namespace)::RequestResponse"* %318, %324
  br i1 %328, label %329, label %13

329:                                              ; preds = %327
  tail call fastcc void @_ZNSt3__14swapIN5blink12_GLOBAL__N_115RequestResponseEEENS_9enable_ifIXaasr21is_move_constructibleIT_EE5valuesr18is_move_assignableIS5_EE5valueEvE4typeERS5_S8_(%"struct.blink::(anonymous namespace)::RequestResponse"* dereferenceable(96) %318, %"struct.blink::(anonymous namespace)::RequestResponse"* dereferenceable(96) %324)
  br label %314

330:                                              ; preds = %293
  %331 = getelementptr inbounds %"struct.blink::(anonymous namespace)::RequestResponse", %"struct.blink::(anonymous namespace)::RequestResponse"* %295, i64 0, i32 0
  %332 = tail call zeroext i1 @_ZN3WTF23CodeUnitCompareLessThanERKNS_6StringES2_(%"class.WTF::String"* dereferenceable(8) %331, %"class.WTF::String"* dereferenceable(8) %291) #16
  br i1 %332, label %333, label %293

333:                                              ; preds = %330
  tail call fastcc void @_ZNSt3__14swapIN5blink12_GLOBAL__N_115RequestResponseEEENS_9enable_ifIXaasr21is_move_constructibleIT_EE5valuesr18is_move_assignableIS5_EE5valueEvE4typeERS5_S8_(%"struct.blink::(anonymous namespace)::RequestResponse"* dereferenceable(96) %14, %"struct.blink::(anonymous namespace)::RequestResponse"* dereferenceable(96) %295)
  %334 = add i32 %289, 1
  br label %335

335:                                              ; preds = %288, %333
  %336 = phi i32 [ %334, %333 ], [ %289, %288 ]
  %337 = phi %"struct.blink::(anonymous namespace)::RequestResponse"* [ %295, %333 ], [ %8, %288 ]
  %338 = ptrtoint %"struct.blink::(anonymous namespace)::RequestResponse"* %14 to i64
  %339 = getelementptr inbounds %"struct.blink::(anonymous namespace)::RequestResponse", %"struct.blink::(anonymous namespace)::RequestResponse"* %14, i64 1
  %340 = icmp ult %"struct.blink::(anonymous namespace)::RequestResponse"* %339, %337
  br i1 %340, label %341, label %363

341:                                              ; preds = %335, %359
  %342 = phi %"struct.blink::(anonymous namespace)::RequestResponse"* [ %362, %359 ], [ %280, %335 ]
  %343 = phi i32 [ %360, %359 ], [ %336, %335 ]
  %344 = phi %"struct.blink::(anonymous namespace)::RequestResponse"* [ %351, %359 ], [ %339, %335 ]
  %345 = phi %"struct.blink::(anonymous namespace)::RequestResponse"* [ %354, %359 ], [ %337, %335 ]
  %346 = getelementptr inbounds %"struct.blink::(anonymous namespace)::RequestResponse", %"struct.blink::(anonymous namespace)::RequestResponse"* %342, i64 0, i32 0
  br label %347

347:                                              ; preds = %347, %341
  %348 = phi %"struct.blink::(anonymous namespace)::RequestResponse"* [ %344, %341 ], [ %351, %347 ]
  %349 = getelementptr inbounds %"struct.blink::(anonymous namespace)::RequestResponse", %"struct.blink::(anonymous namespace)::RequestResponse"* %348, i64 0, i32 0
  %350 = tail call zeroext i1 @_ZN3WTF23CodeUnitCompareLessThanERKNS_6StringES2_(%"class.WTF::String"* dereferenceable(8) %349, %"class.WTF::String"* dereferenceable(8) %346) #16
  %351 = getelementptr inbounds %"struct.blink::(anonymous namespace)::RequestResponse", %"struct.blink::(anonymous namespace)::RequestResponse"* %348, i64 1
  br i1 %350, label %347, label %352

352:                                              ; preds = %347, %352
  %353 = phi %"struct.blink::(anonymous namespace)::RequestResponse"* [ %354, %352 ], [ %345, %347 ]
  %354 = getelementptr inbounds %"struct.blink::(anonymous namespace)::RequestResponse", %"struct.blink::(anonymous namespace)::RequestResponse"* %353, i64 -1
  %355 = getelementptr inbounds %"struct.blink::(anonymous namespace)::RequestResponse", %"struct.blink::(anonymous namespace)::RequestResponse"* %354, i64 0, i32 0
  %356 = tail call zeroext i1 @_ZN3WTF23CodeUnitCompareLessThanERKNS_6StringES2_(%"class.WTF::String"* dereferenceable(8) %355, %"class.WTF::String"* dereferenceable(8) %346) #16
  br i1 %356, label %357, label %352

357:                                              ; preds = %352
  %358 = icmp ugt %"struct.blink::(anonymous namespace)::RequestResponse"* %348, %354
  br i1 %358, label %363, label %359

359:                                              ; preds = %357
  tail call fastcc void @_ZNSt3__14swapIN5blink12_GLOBAL__N_115RequestResponseEEENS_9enable_ifIXaasr21is_move_constructibleIT_EE5valuesr18is_move_assignableIS5_EE5valueEvE4typeERS5_S8_(%"struct.blink::(anonymous namespace)::RequestResponse"* dereferenceable(96) %348, %"struct.blink::(anonymous namespace)::RequestResponse"* dereferenceable(96) %354)
  %360 = add i32 %343, 1
  %361 = icmp eq %"struct.blink::(anonymous namespace)::RequestResponse"* %342, %348
  %362 = select i1 %361, %"struct.blink::(anonymous namespace)::RequestResponse"* %354, %"struct.blink::(anonymous namespace)::RequestResponse"* %342
  br label %341

363:                                              ; preds = %357, %335
  %364 = phi %"struct.blink::(anonymous namespace)::RequestResponse"* [ %280, %335 ], [ %342, %357 ]
  %365 = phi i32 [ %336, %335 ], [ %343, %357 ]
  %366 = phi %"struct.blink::(anonymous namespace)::RequestResponse"* [ %339, %335 ], [ %348, %357 ]
  %367 = icmp eq %"struct.blink::(anonymous namespace)::RequestResponse"* %366, %364
  br i1 %367, label %374, label %368

368:                                              ; preds = %363
  %369 = getelementptr inbounds %"struct.blink::(anonymous namespace)::RequestResponse", %"struct.blink::(anonymous namespace)::RequestResponse"* %364, i64 0, i32 0
  %370 = getelementptr inbounds %"struct.blink::(anonymous namespace)::RequestResponse", %"struct.blink::(anonymous namespace)::RequestResponse"* %366, i64 0, i32 0
  %371 = tail call zeroext i1 @_ZN3WTF23CodeUnitCompareLessThanERKNS_6StringES2_(%"class.WTF::String"* dereferenceable(8) %369, %"class.WTF::String"* dereferenceable(8) %370) #16
  br i1 %371, label %372, label %374

372:                                              ; preds = %368
  tail call fastcc void @_ZNSt3__14swapIN5blink12_GLOBAL__N_115RequestResponseEEENS_9enable_ifIXaasr21is_move_constructibleIT_EE5valuesr18is_move_assignableIS5_EE5valueEvE4typeERS5_S8_(%"struct.blink::(anonymous namespace)::RequestResponse"* dereferenceable(96) %366, %"struct.blink::(anonymous namespace)::RequestResponse"* dereferenceable(96) %364)
  %373 = add i32 %365, 1
  br label %374

374:                                              ; preds = %363, %372, %368
  %375 = phi i32 [ %373, %372 ], [ %365, %368 ], [ %365, %363 ]
  %376 = icmp eq i32 %375, 0
  br i1 %376, label %377, label %384

377:                                              ; preds = %374
  %378 = tail call fastcc zeroext i1 @_ZNSt3__127__insertion_sort_incompleteIRZN5blink12_GLOBAL__N_120ResponsesAccumulator22AddRequestResponsePairERKN4mojo9StructPtrINS1_5mojom5blink15FetchAPIRequestEEERKNS5_INS7_16FetchAPIResponseEEEEUlRKNS2_15RequestResponseESI_E_PSG_EEbT0_SM_T_(%"struct.blink::(anonymous namespace)::RequestResponse"* %14, %"struct.blink::(anonymous namespace)::RequestResponse"* %366)
  %379 = getelementptr inbounds %"struct.blink::(anonymous namespace)::RequestResponse", %"struct.blink::(anonymous namespace)::RequestResponse"* %366, i64 1
  %380 = tail call fastcc zeroext i1 @_ZNSt3__127__insertion_sort_incompleteIRZN5blink12_GLOBAL__N_120ResponsesAccumulator22AddRequestResponsePairERKN4mojo9StructPtrINS1_5mojom5blink15FetchAPIRequestEEERKNS5_INS7_16FetchAPIResponseEEEEUlRKNS2_15RequestResponseESI_E_PSG_EEbT0_SM_T_(%"struct.blink::(anonymous namespace)::RequestResponse"* %379, %"struct.blink::(anonymous namespace)::RequestResponse"* %5)
  br i1 %380, label %381, label %383

381:                                              ; preds = %377
  br i1 %378, label %397, label %382

382:                                              ; preds = %381, %395
  br label %4

383:                                              ; preds = %377
  br i1 %378, label %393, label %384

384:                                              ; preds = %383, %374
  %385 = ptrtoint %"struct.blink::(anonymous namespace)::RequestResponse"* %366 to i64
  %386 = sub i64 %385, %338
  %387 = sdiv exact i64 %386, 96
  %388 = sub i64 %10, %385
  %389 = sdiv exact i64 %388, 96
  %390 = icmp slt i64 %387, %389
  br i1 %390, label %391, label %395

391:                                              ; preds = %384
  tail call fastcc void @_ZNSt3__16__sortIRZN5blink12_GLOBAL__N_120ResponsesAccumulator22AddRequestResponsePairERKN4mojo9StructPtrINS1_5mojom5blink15FetchAPIRequestEEERKNS5_INS7_16FetchAPIResponseEEEEUlRKNS2_15RequestResponseESI_E_PSG_EEvT0_SM_T_(%"struct.blink::(anonymous namespace)::RequestResponse"* %14, %"struct.blink::(anonymous namespace)::RequestResponse"* %366)
  %392 = getelementptr inbounds %"struct.blink::(anonymous namespace)::RequestResponse", %"struct.blink::(anonymous namespace)::RequestResponse"* %366, i64 1
  br label %393

393:                                              ; preds = %391, %383
  %394 = phi %"struct.blink::(anonymous namespace)::RequestResponse"* [ %379, %383 ], [ %392, %391 ]
  br label %11

395:                                              ; preds = %384
  %396 = getelementptr inbounds %"struct.blink::(anonymous namespace)::RequestResponse", %"struct.blink::(anonymous namespace)::RequestResponse"* %366, i64 1
  tail call fastcc void @_ZNSt3__16__sortIRZN5blink12_GLOBAL__N_120ResponsesAccumulator22AddRequestResponsePairERKN4mojo9StructPtrINS1_5mojom5blink15FetchAPIRequestEEERKNS5_INS7_16FetchAPIResponseEEEEUlRKNS2_15RequestResponseESI_E_PSG_EEvT0_SM_T_(%"struct.blink::(anonymous namespace)::RequestResponse"* %396, %"struct.blink::(anonymous namespace)::RequestResponse"* %5)
  br label %382

397:                                              ; preds = %381, %311, %13, %13, %300, %308, %274, %41, %18, %23, %24, %28, %33
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define internal fastcc void @_ZNSt3__14swapIN5blink12_GLOBAL__N_115RequestResponseEEENS_9enable_ifIXaasr21is_move_constructibleIT_EE5valuesr18is_move_assignableIS5_EE5valueEvE4typeERS5_S8_(%"struct.blink::(anonymous namespace)::RequestResponse"* dereferenceable(96), %"struct.blink::(anonymous namespace)::RequestResponse"* dereferenceable(96)) unnamed_addr #11 {
  %3 = alloca %"struct.blink::(anonymous namespace)::RequestResponse", align 8
  %4 = bitcast %"struct.blink::(anonymous namespace)::RequestResponse"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 96, i8* nonnull %4) #16
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %4, i8* align 8 bitcast ({ %"class.WTF::String", %"class.WTF::String", %"class.blink::HTTPHeaderMap", i32, [4 x i8], %"class.WTF::String", double, i32, [4 x i8], %"class.blink::HTTPHeaderMap" }* @__const._ZNSt3__127__insertion_sort_incompleteIRZN5blink12_GLOBAL__N_120ResponsesAccumulator22AddRequestResponsePairERKN4mojo9StructPtrINS1_5mojom5blink15FetchAPIRequestEEERKNS5_INS7_16FetchAPIResponseEEEEUlRKNS2_15RequestResponseESI_E_PSG_EEbT0_SM_T_.__t to i8*), i64 96, i1 false)
  call fastcc void @_ZN5blink12_GLOBAL__N_115RequestResponseC2EOS1_(%"struct.blink::(anonymous namespace)::RequestResponse"* nonnull %3, %"struct.blink::(anonymous namespace)::RequestResponse"* dereferenceable(96) %0)
  %5 = getelementptr inbounds %"struct.blink::(anonymous namespace)::RequestResponse", %"struct.blink::(anonymous namespace)::RequestResponse"* %1, i64 0, i32 0, i32 0, i32 0
  %6 = bitcast %"struct.blink::(anonymous namespace)::RequestResponse"* %1 to i64*
  %7 = load i64, i64* %6, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %5, align 8
  %8 = bitcast %"struct.blink::(anonymous namespace)::RequestResponse"* %0 to i64*
  %9 = getelementptr inbounds %"struct.blink::(anonymous namespace)::RequestResponse", %"struct.blink::(anonymous namespace)::RequestResponse"* %0, i64 0, i32 0, i32 0, i32 0
  %10 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %9, align 8
  store i64 %7, i64* %8, align 8
  %11 = icmp eq %"class.WTF::StringImpl"* %10, null
  br i1 %11, label %25, label %12

12:                                               ; preds = %2
  %13 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %10, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %14 = load atomic i32, i32* %13 monotonic, align 4
  %15 = and i32 %14, 2
  %16 = icmp eq i32 %15, 0
  %17 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %10, i64 0, i32 0
  %18 = load i32, i32* %17, align 4
  br i1 %16, label %19, label %21

19:                                               ; preds = %12
  %20 = add i32 %18, -1
  store i32 %20, i32* %17, align 4
  br label %21

21:                                               ; preds = %19, %12
  %22 = phi i32 [ %20, %19 ], [ %18, %12 ]
  %23 = icmp eq i32 %22, 0
  br i1 %23, label %24, label %25

24:                                               ; preds = %21
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %10) #16
  br label %25

25:                                               ; preds = %24, %21, %2
  %26 = getelementptr inbounds %"struct.blink::(anonymous namespace)::RequestResponse", %"struct.blink::(anonymous namespace)::RequestResponse"* %0, i64 0, i32 1
  %27 = getelementptr inbounds %"struct.blink::(anonymous namespace)::RequestResponse", %"struct.blink::(anonymous namespace)::RequestResponse"* %1, i64 0, i32 1
  %28 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %27, i64 0, i32 0, i32 0
  %29 = bitcast %"class.WTF::String"* %27 to i64*
  %30 = load i64, i64* %29, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %28, align 8
  %31 = bitcast %"class.WTF::String"* %26 to i64*
  %32 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %26, i64 0, i32 0, i32 0
  %33 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %32, align 8
  store i64 %30, i64* %31, align 8
  %34 = icmp eq %"class.WTF::StringImpl"* %33, null
  br i1 %34, label %48, label %35

35:                                               ; preds = %25
  %36 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %33, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %37 = load atomic i32, i32* %36 monotonic, align 4
  %38 = and i32 %37, 2
  %39 = icmp eq i32 %38, 0
  %40 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %33, i64 0, i32 0
  %41 = load i32, i32* %40, align 4
  br i1 %39, label %42, label %44

42:                                               ; preds = %35
  %43 = add i32 %41, -1
  store i32 %43, i32* %40, align 4
  br label %44

44:                                               ; preds = %42, %35
  %45 = phi i32 [ %43, %42 ], [ %41, %35 ]
  %46 = icmp eq i32 %45, 0
  br i1 %46, label %47, label %48

47:                                               ; preds = %44
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %33) #16
  br label %48

48:                                               ; preds = %25, %44, %47
  %49 = getelementptr inbounds %"struct.blink::(anonymous namespace)::RequestResponse", %"struct.blink::(anonymous namespace)::RequestResponse"* %0, i64 0, i32 2, i32 0, i32 0
  %50 = getelementptr inbounds %"struct.blink::(anonymous namespace)::RequestResponse", %"struct.blink::(anonymous namespace)::RequestResponse"* %1, i64 0, i32 2, i32 0, i32 0
  %51 = call dereferenceable(24) %"class.WTF::HashTable.2280"* @_ZN3WTF9HashTableINS_12AtomicStringENS_12KeyValuePairIS1_S1_EENS_24KeyValuePairKeyExtractorENS_15CaseFoldingHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EES8_EES8_NS_18PartitionAllocatorEEaSERKSB_(%"class.WTF::HashTable.2280"* %49, %"class.WTF::HashTable.2280"* dereferenceable(24) %50) #16
  %52 = getelementptr inbounds %"struct.blink::(anonymous namespace)::RequestResponse", %"struct.blink::(anonymous namespace)::RequestResponse"* %1, i64 0, i32 3
  %53 = load i32, i32* %52, align 8
  %54 = getelementptr inbounds %"struct.blink::(anonymous namespace)::RequestResponse", %"struct.blink::(anonymous namespace)::RequestResponse"* %0, i64 0, i32 3
  store i32 %53, i32* %54, align 8
  %55 = getelementptr inbounds %"struct.blink::(anonymous namespace)::RequestResponse", %"struct.blink::(anonymous namespace)::RequestResponse"* %0, i64 0, i32 4
  %56 = getelementptr inbounds %"struct.blink::(anonymous namespace)::RequestResponse", %"struct.blink::(anonymous namespace)::RequestResponse"* %1, i64 0, i32 4
  %57 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %56, i64 0, i32 0, i32 0
  %58 = bitcast %"class.WTF::String"* %56 to i64*
  %59 = load i64, i64* %58, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %57, align 8
  %60 = bitcast %"class.WTF::String"* %55 to i64*
  %61 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %55, i64 0, i32 0, i32 0
  %62 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %61, align 8
  store i64 %59, i64* %60, align 8
  %63 = icmp eq %"class.WTF::StringImpl"* %62, null
  br i1 %63, label %77, label %64

64:                                               ; preds = %48
  %65 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %62, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %66 = load atomic i32, i32* %65 monotonic, align 4
  %67 = and i32 %66, 2
  %68 = icmp eq i32 %67, 0
  %69 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %62, i64 0, i32 0
  %70 = load i32, i32* %69, align 4
  br i1 %68, label %71, label %73

71:                                               ; preds = %64
  %72 = add i32 %70, -1
  store i32 %72, i32* %69, align 4
  br label %73

73:                                               ; preds = %71, %64
  %74 = phi i32 [ %72, %71 ], [ %70, %64 ]
  %75 = icmp eq i32 %74, 0
  br i1 %75, label %76, label %77

76:                                               ; preds = %73
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %62) #16
  br label %77

77:                                               ; preds = %48, %73, %76
  %78 = getelementptr inbounds %"struct.blink::(anonymous namespace)::RequestResponse", %"struct.blink::(anonymous namespace)::RequestResponse"* %0, i64 0, i32 5
  %79 = getelementptr inbounds %"struct.blink::(anonymous namespace)::RequestResponse", %"struct.blink::(anonymous namespace)::RequestResponse"* %1, i64 0, i32 5
  %80 = bitcast double* %78 to i8*
  %81 = bitcast double* %79 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %80, i8* align 8 %81, i64 12, i1 false) #16
  %82 = getelementptr inbounds %"struct.blink::(anonymous namespace)::RequestResponse", %"struct.blink::(anonymous namespace)::RequestResponse"* %0, i64 0, i32 8, i32 0, i32 0
  %83 = getelementptr inbounds %"struct.blink::(anonymous namespace)::RequestResponse", %"struct.blink::(anonymous namespace)::RequestResponse"* %1, i64 0, i32 8, i32 0, i32 0
  %84 = call dereferenceable(24) %"class.WTF::HashTable.2280"* @_ZN3WTF9HashTableINS_12AtomicStringENS_12KeyValuePairIS1_S1_EENS_24KeyValuePairKeyExtractorENS_15CaseFoldingHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EES8_EES8_NS_18PartitionAllocatorEEaSERKSB_(%"class.WTF::HashTable.2280"* %82, %"class.WTF::HashTable.2280"* dereferenceable(24) %83) #16
  %85 = getelementptr inbounds %"struct.blink::(anonymous namespace)::RequestResponse", %"struct.blink::(anonymous namespace)::RequestResponse"* %3, i64 0, i32 0, i32 0, i32 0
  %86 = bitcast %"struct.blink::(anonymous namespace)::RequestResponse"* %3 to i64*
  %87 = load i64, i64* %86, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %85, align 8
  %88 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %5, align 8
  store i64 %87, i64* %6, align 8
  %89 = icmp eq %"class.WTF::StringImpl"* %88, null
  br i1 %89, label %103, label %90

90:                                               ; preds = %77
  %91 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %88, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %92 = load atomic i32, i32* %91 monotonic, align 4
  %93 = and i32 %92, 2
  %94 = icmp eq i32 %93, 0
  %95 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %88, i64 0, i32 0
  %96 = load i32, i32* %95, align 4
  br i1 %94, label %97, label %99

97:                                               ; preds = %90
  %98 = add i32 %96, -1
  store i32 %98, i32* %95, align 4
  br label %99

99:                                               ; preds = %97, %90
  %100 = phi i32 [ %98, %97 ], [ %96, %90 ]
  %101 = icmp eq i32 %100, 0
  br i1 %101, label %102, label %103

102:                                              ; preds = %99
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %88) #16
  br label %103

103:                                              ; preds = %102, %99, %77
  %104 = getelementptr inbounds %"struct.blink::(anonymous namespace)::RequestResponse", %"struct.blink::(anonymous namespace)::RequestResponse"* %3, i64 0, i32 1
  %105 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %104, i64 0, i32 0, i32 0
  %106 = bitcast %"class.WTF::String"* %104 to i64*
  %107 = load i64, i64* %106, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %105, align 8
  %108 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %28, align 8
  store i64 %107, i64* %29, align 8
  %109 = icmp eq %"class.WTF::StringImpl"* %108, null
  br i1 %109, label %123, label %110

110:                                              ; preds = %103
  %111 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %108, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %112 = load atomic i32, i32* %111 monotonic, align 4
  %113 = and i32 %112, 2
  %114 = icmp eq i32 %113, 0
  %115 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %108, i64 0, i32 0
  %116 = load i32, i32* %115, align 4
  br i1 %114, label %117, label %119

117:                                              ; preds = %110
  %118 = add i32 %116, -1
  store i32 %118, i32* %115, align 4
  br label %119

119:                                              ; preds = %117, %110
  %120 = phi i32 [ %118, %117 ], [ %116, %110 ]
  %121 = icmp eq i32 %120, 0
  br i1 %121, label %122, label %123

122:                                              ; preds = %119
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %108) #16
  br label %123

123:                                              ; preds = %103, %119, %122
  %124 = getelementptr inbounds %"struct.blink::(anonymous namespace)::RequestResponse", %"struct.blink::(anonymous namespace)::RequestResponse"* %3, i64 0, i32 2, i32 0, i32 0
  %125 = call dereferenceable(24) %"class.WTF::HashTable.2280"* @_ZN3WTF9HashTableINS_12AtomicStringENS_12KeyValuePairIS1_S1_EENS_24KeyValuePairKeyExtractorENS_15CaseFoldingHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EES8_EES8_NS_18PartitionAllocatorEEaSERKSB_(%"class.WTF::HashTable.2280"* %50, %"class.WTF::HashTable.2280"* dereferenceable(24) %124) #16
  %126 = getelementptr inbounds %"struct.blink::(anonymous namespace)::RequestResponse", %"struct.blink::(anonymous namespace)::RequestResponse"* %3, i64 0, i32 3
  %127 = load i32, i32* %126, align 8
  store i32 %127, i32* %52, align 8
  %128 = getelementptr inbounds %"struct.blink::(anonymous namespace)::RequestResponse", %"struct.blink::(anonymous namespace)::RequestResponse"* %3, i64 0, i32 4
  %129 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %128, i64 0, i32 0, i32 0
  %130 = bitcast %"class.WTF::String"* %128 to i64*
  %131 = load i64, i64* %130, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %129, align 8
  %132 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %57, align 8
  store i64 %131, i64* %58, align 8
  %133 = icmp eq %"class.WTF::StringImpl"* %132, null
  br i1 %133, label %147, label %134

134:                                              ; preds = %123
  %135 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %132, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %136 = load atomic i32, i32* %135 monotonic, align 4
  %137 = and i32 %136, 2
  %138 = icmp eq i32 %137, 0
  %139 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %132, i64 0, i32 0
  %140 = load i32, i32* %139, align 4
  br i1 %138, label %141, label %143

141:                                              ; preds = %134
  %142 = add i32 %140, -1
  store i32 %142, i32* %139, align 4
  br label %143

143:                                              ; preds = %141, %134
  %144 = phi i32 [ %142, %141 ], [ %140, %134 ]
  %145 = icmp eq i32 %144, 0
  br i1 %145, label %146, label %147

146:                                              ; preds = %143
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %132) #16
  br label %147

147:                                              ; preds = %123, %143, %146
  %148 = getelementptr inbounds %"struct.blink::(anonymous namespace)::RequestResponse", %"struct.blink::(anonymous namespace)::RequestResponse"* %3, i64 0, i32 5
  %149 = bitcast double* %148 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %81, i8* align 8 %149, i64 12, i1 false) #16
  %150 = getelementptr inbounds %"struct.blink::(anonymous namespace)::RequestResponse", %"struct.blink::(anonymous namespace)::RequestResponse"* %3, i64 0, i32 8, i32 0, i32 0
  %151 = call dereferenceable(24) %"class.WTF::HashTable.2280"* @_ZN3WTF9HashTableINS_12AtomicStringENS_12KeyValuePairIS1_S1_EENS_24KeyValuePairKeyExtractorENS_15CaseFoldingHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EES8_EES8_NS_18PartitionAllocatorEEaSERKSB_(%"class.WTF::HashTable.2280"* %83, %"class.WTF::HashTable.2280"* dereferenceable(24) %150) #16
  %152 = getelementptr inbounds %"struct.blink::(anonymous namespace)::RequestResponse", %"struct.blink::(anonymous namespace)::RequestResponse"* %3, i64 0, i32 8
  call void @_ZN5blink13HTTPHeaderMapD1Ev(%"class.blink::HTTPHeaderMap"* %152) #16
  %153 = getelementptr inbounds %"struct.blink::(anonymous namespace)::RequestResponse", %"struct.blink::(anonymous namespace)::RequestResponse"* %3, i64 0, i32 4, i32 0, i32 0
  %154 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %153, align 8
  %155 = icmp eq %"class.WTF::StringImpl"* %154, null
  br i1 %155, label %169, label %156

156:                                              ; preds = %147
  %157 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %154, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %158 = load atomic i32, i32* %157 monotonic, align 4
  %159 = and i32 %158, 2
  %160 = icmp eq i32 %159, 0
  %161 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %154, i64 0, i32 0
  %162 = load i32, i32* %161, align 4
  br i1 %160, label %163, label %165

163:                                              ; preds = %156
  %164 = add i32 %162, -1
  store i32 %164, i32* %161, align 4
  br label %165

165:                                              ; preds = %163, %156
  %166 = phi i32 [ %164, %163 ], [ %162, %156 ]
  %167 = icmp eq i32 %166, 0
  br i1 %167, label %168, label %169

168:                                              ; preds = %165
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %154) #16
  br label %169

169:                                              ; preds = %168, %165, %147
  %170 = getelementptr inbounds %"struct.blink::(anonymous namespace)::RequestResponse", %"struct.blink::(anonymous namespace)::RequestResponse"* %3, i64 0, i32 2
  call void @_ZN5blink13HTTPHeaderMapD1Ev(%"class.blink::HTTPHeaderMap"* %170) #16
  %171 = getelementptr inbounds %"struct.blink::(anonymous namespace)::RequestResponse", %"struct.blink::(anonymous namespace)::RequestResponse"* %3, i64 0, i32 1, i32 0, i32 0
  %172 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %171, align 8
  %173 = icmp eq %"class.WTF::StringImpl"* %172, null
  br i1 %173, label %187, label %174

174:                                              ; preds = %169
  %175 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %172, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %176 = load atomic i32, i32* %175 monotonic, align 4
  %177 = and i32 %176, 2
  %178 = icmp eq i32 %177, 0
  %179 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %172, i64 0, i32 0
  %180 = load i32, i32* %179, align 4
  br i1 %178, label %181, label %183

181:                                              ; preds = %174
  %182 = add i32 %180, -1
  store i32 %182, i32* %179, align 4
  br label %183

183:                                              ; preds = %181, %174
  %184 = phi i32 [ %182, %181 ], [ %180, %174 ]
  %185 = icmp eq i32 %184, 0
  br i1 %185, label %186, label %187

186:                                              ; preds = %183
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %172) #16
  br label %187

187:                                              ; preds = %186, %183, %169
  %188 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %85, align 8
  %189 = icmp eq %"class.WTF::StringImpl"* %188, null
  br i1 %189, label %203, label %190

190:                                              ; preds = %187
  %191 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %188, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %192 = load atomic i32, i32* %191 monotonic, align 4
  %193 = and i32 %192, 2
  %194 = icmp eq i32 %193, 0
  %195 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %188, i64 0, i32 0
  %196 = load i32, i32* %195, align 4
  br i1 %194, label %197, label %199

197:                                              ; preds = %190
  %198 = add i32 %196, -1
  store i32 %198, i32* %195, align 4
  br label %199

199:                                              ; preds = %197, %190
  %200 = phi i32 [ %198, %197 ], [ %196, %190 ]
  %201 = icmp eq i32 %200, 0
  br i1 %201, label %202, label %203

202:                                              ; preds = %199
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %188) #16
  br label %203

203:                                              ; preds = %187, %199, %202
  call void @llvm.lifetime.end.p0i8(i64 96, i8* nonnull %4) #16
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc i32 @_ZNSt3__17__sort3IRZN5blink12_GLOBAL__N_120ResponsesAccumulator22AddRequestResponsePairERKN4mojo9StructPtrINS1_5mojom5blink15FetchAPIRequestEEERKNS5_INS7_16FetchAPIResponseEEEEUlRKNS2_15RequestResponseESI_E_PSG_EEjT0_SM_SM_T_(%"struct.blink::(anonymous namespace)::RequestResponse"*, %"struct.blink::(anonymous namespace)::RequestResponse"*, %"struct.blink::(anonymous namespace)::RequestResponse"*) unnamed_addr #0 {
  %4 = getelementptr inbounds %"struct.blink::(anonymous namespace)::RequestResponse", %"struct.blink::(anonymous namespace)::RequestResponse"* %1, i64 0, i32 0
  %5 = getelementptr inbounds %"struct.blink::(anonymous namespace)::RequestResponse", %"struct.blink::(anonymous namespace)::RequestResponse"* %0, i64 0, i32 0
  %6 = tail call zeroext i1 @_ZN3WTF23CodeUnitCompareLessThanERKNS_6StringES2_(%"class.WTF::String"* dereferenceable(8) %4, %"class.WTF::String"* dereferenceable(8) %5) #16
  %7 = getelementptr inbounds %"struct.blink::(anonymous namespace)::RequestResponse", %"struct.blink::(anonymous namespace)::RequestResponse"* %2, i64 0, i32 0
  %8 = tail call zeroext i1 @_ZN3WTF23CodeUnitCompareLessThanERKNS_6StringES2_(%"class.WTF::String"* dereferenceable(8) %7, %"class.WTF::String"* dereferenceable(8) %4) #16
  br i1 %6, label %13, label %9

9:                                                ; preds = %3
  br i1 %8, label %10, label %18

10:                                               ; preds = %9
  tail call fastcc void @_ZNSt3__14swapIN5blink12_GLOBAL__N_115RequestResponseEEENS_9enable_ifIXaasr21is_move_constructibleIT_EE5valuesr18is_move_assignableIS5_EE5valueEvE4typeERS5_S8_(%"struct.blink::(anonymous namespace)::RequestResponse"* dereferenceable(96) %1, %"struct.blink::(anonymous namespace)::RequestResponse"* dereferenceable(96) %2)
  %11 = tail call zeroext i1 @_ZN3WTF23CodeUnitCompareLessThanERKNS_6StringES2_(%"class.WTF::String"* dereferenceable(8) %4, %"class.WTF::String"* dereferenceable(8) %5) #16
  br i1 %11, label %12, label %18

12:                                               ; preds = %10
  tail call fastcc void @_ZNSt3__14swapIN5blink12_GLOBAL__N_115RequestResponseEEENS_9enable_ifIXaasr21is_move_constructibleIT_EE5valuesr18is_move_assignableIS5_EE5valueEvE4typeERS5_S8_(%"struct.blink::(anonymous namespace)::RequestResponse"* dereferenceable(96) %0, %"struct.blink::(anonymous namespace)::RequestResponse"* dereferenceable(96) %1)
  br label %18

13:                                               ; preds = %3
  br i1 %8, label %14, label %15

14:                                               ; preds = %13
  tail call fastcc void @_ZNSt3__14swapIN5blink12_GLOBAL__N_115RequestResponseEEENS_9enable_ifIXaasr21is_move_constructibleIT_EE5valuesr18is_move_assignableIS5_EE5valueEvE4typeERS5_S8_(%"struct.blink::(anonymous namespace)::RequestResponse"* dereferenceable(96) %0, %"struct.blink::(anonymous namespace)::RequestResponse"* dereferenceable(96) %2)
  br label %18

15:                                               ; preds = %13
  tail call fastcc void @_ZNSt3__14swapIN5blink12_GLOBAL__N_115RequestResponseEEENS_9enable_ifIXaasr21is_move_constructibleIT_EE5valuesr18is_move_assignableIS5_EE5valueEvE4typeERS5_S8_(%"struct.blink::(anonymous namespace)::RequestResponse"* dereferenceable(96) %0, %"struct.blink::(anonymous namespace)::RequestResponse"* dereferenceable(96) %1)
  %16 = tail call zeroext i1 @_ZN3WTF23CodeUnitCompareLessThanERKNS_6StringES2_(%"class.WTF::String"* dereferenceable(8) %7, %"class.WTF::String"* dereferenceable(8) %4) #16
  br i1 %16, label %17, label %18

17:                                               ; preds = %15
  tail call fastcc void @_ZNSt3__14swapIN5blink12_GLOBAL__N_115RequestResponseEEENS_9enable_ifIXaasr21is_move_constructibleIT_EE5valuesr18is_move_assignableIS5_EE5valueEvE4typeERS5_S8_(%"struct.blink::(anonymous namespace)::RequestResponse"* dereferenceable(96) %1, %"struct.blink::(anonymous namespace)::RequestResponse"* dereferenceable(96) %2)
  br label %18

18:                                               ; preds = %15, %17, %10, %12, %9, %14
  %19 = phi i32 [ 1, %14 ], [ 0, %9 ], [ 2, %12 ], [ 1, %10 ], [ 2, %17 ], [ 1, %15 ]
  ret i32 %19
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc i32 @_ZNSt3__17__sort4IRZN5blink12_GLOBAL__N_120ResponsesAccumulator22AddRequestResponsePairERKN4mojo9StructPtrINS1_5mojom5blink15FetchAPIRequestEEERKNS5_INS7_16FetchAPIResponseEEEEUlRKNS2_15RequestResponseESI_E_PSG_EEjT0_SM_SM_SM_T_(%"struct.blink::(anonymous namespace)::RequestResponse"*, %"struct.blink::(anonymous namespace)::RequestResponse"*, %"struct.blink::(anonymous namespace)::RequestResponse"*, %"struct.blink::(anonymous namespace)::RequestResponse"*) unnamed_addr #0 {
  %5 = tail call fastcc i32 @_ZNSt3__17__sort3IRZN5blink12_GLOBAL__N_120ResponsesAccumulator22AddRequestResponsePairERKN4mojo9StructPtrINS1_5mojom5blink15FetchAPIRequestEEERKNS5_INS7_16FetchAPIResponseEEEEUlRKNS2_15RequestResponseESI_E_PSG_EEjT0_SM_SM_T_(%"struct.blink::(anonymous namespace)::RequestResponse"* %0, %"struct.blink::(anonymous namespace)::RequestResponse"* %1, %"struct.blink::(anonymous namespace)::RequestResponse"* %2)
  %6 = getelementptr inbounds %"struct.blink::(anonymous namespace)::RequestResponse", %"struct.blink::(anonymous namespace)::RequestResponse"* %3, i64 0, i32 0
  %7 = getelementptr inbounds %"struct.blink::(anonymous namespace)::RequestResponse", %"struct.blink::(anonymous namespace)::RequestResponse"* %2, i64 0, i32 0
  %8 = tail call zeroext i1 @_ZN3WTF23CodeUnitCompareLessThanERKNS_6StringES2_(%"class.WTF::String"* dereferenceable(8) %6, %"class.WTF::String"* dereferenceable(8) %7) #16
  br i1 %8, label %9, label %19

9:                                                ; preds = %4
  tail call fastcc void @_ZNSt3__14swapIN5blink12_GLOBAL__N_115RequestResponseEEENS_9enable_ifIXaasr21is_move_constructibleIT_EE5valuesr18is_move_assignableIS5_EE5valueEvE4typeERS5_S8_(%"struct.blink::(anonymous namespace)::RequestResponse"* dereferenceable(96) %2, %"struct.blink::(anonymous namespace)::RequestResponse"* dereferenceable(96) %3)
  %10 = add i32 %5, 1
  %11 = getelementptr inbounds %"struct.blink::(anonymous namespace)::RequestResponse", %"struct.blink::(anonymous namespace)::RequestResponse"* %1, i64 0, i32 0
  %12 = tail call zeroext i1 @_ZN3WTF23CodeUnitCompareLessThanERKNS_6StringES2_(%"class.WTF::String"* dereferenceable(8) %7, %"class.WTF::String"* dereferenceable(8) %11) #16
  br i1 %12, label %13, label %19

13:                                               ; preds = %9
  tail call fastcc void @_ZNSt3__14swapIN5blink12_GLOBAL__N_115RequestResponseEEENS_9enable_ifIXaasr21is_move_constructibleIT_EE5valuesr18is_move_assignableIS5_EE5valueEvE4typeERS5_S8_(%"struct.blink::(anonymous namespace)::RequestResponse"* dereferenceable(96) %1, %"struct.blink::(anonymous namespace)::RequestResponse"* dereferenceable(96) %2)
  %14 = add i32 %5, 2
  %15 = getelementptr inbounds %"struct.blink::(anonymous namespace)::RequestResponse", %"struct.blink::(anonymous namespace)::RequestResponse"* %0, i64 0, i32 0
  %16 = tail call zeroext i1 @_ZN3WTF23CodeUnitCompareLessThanERKNS_6StringES2_(%"class.WTF::String"* dereferenceable(8) %11, %"class.WTF::String"* dereferenceable(8) %15) #16
  br i1 %16, label %17, label %19

17:                                               ; preds = %13
  tail call fastcc void @_ZNSt3__14swapIN5blink12_GLOBAL__N_115RequestResponseEEENS_9enable_ifIXaasr21is_move_constructibleIT_EE5valuesr18is_move_assignableIS5_EE5valueEvE4typeERS5_S8_(%"struct.blink::(anonymous namespace)::RequestResponse"* dereferenceable(96) %0, %"struct.blink::(anonymous namespace)::RequestResponse"* dereferenceable(96) %1)
  %18 = add i32 %5, 3
  br label %19

19:                                               ; preds = %9, %17, %13, %4
  %20 = phi i32 [ %18, %17 ], [ %14, %13 ], [ %10, %9 ], [ %5, %4 ]
  ret i32 %20
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc i32 @_ZNSt3__17__sort5IRZN5blink12_GLOBAL__N_120ResponsesAccumulator22AddRequestResponsePairERKN4mojo9StructPtrINS1_5mojom5blink15FetchAPIRequestEEERKNS5_INS7_16FetchAPIResponseEEEEUlRKNS2_15RequestResponseESI_E_PSG_EEjT0_SM_SM_SM_SM_T_(%"struct.blink::(anonymous namespace)::RequestResponse"*, %"struct.blink::(anonymous namespace)::RequestResponse"*, %"struct.blink::(anonymous namespace)::RequestResponse"*, %"struct.blink::(anonymous namespace)::RequestResponse"*, %"struct.blink::(anonymous namespace)::RequestResponse"*) unnamed_addr #0 {
  %6 = tail call fastcc i32 @_ZNSt3__17__sort4IRZN5blink12_GLOBAL__N_120ResponsesAccumulator22AddRequestResponsePairERKN4mojo9StructPtrINS1_5mojom5blink15FetchAPIRequestEEERKNS5_INS7_16FetchAPIResponseEEEEUlRKNS2_15RequestResponseESI_E_PSG_EEjT0_SM_SM_SM_T_(%"struct.blink::(anonymous namespace)::RequestResponse"* %0, %"struct.blink::(anonymous namespace)::RequestResponse"* %1, %"struct.blink::(anonymous namespace)::RequestResponse"* %2, %"struct.blink::(anonymous namespace)::RequestResponse"* %3)
  %7 = getelementptr inbounds %"struct.blink::(anonymous namespace)::RequestResponse", %"struct.blink::(anonymous namespace)::RequestResponse"* %4, i64 0, i32 0
  %8 = getelementptr inbounds %"struct.blink::(anonymous namespace)::RequestResponse", %"struct.blink::(anonymous namespace)::RequestResponse"* %3, i64 0, i32 0
  %9 = tail call zeroext i1 @_ZN3WTF23CodeUnitCompareLessThanERKNS_6StringES2_(%"class.WTF::String"* dereferenceable(8) %7, %"class.WTF::String"* dereferenceable(8) %8) #16
  br i1 %9, label %10, label %24

10:                                               ; preds = %5
  tail call fastcc void @_ZNSt3__14swapIN5blink12_GLOBAL__N_115RequestResponseEEENS_9enable_ifIXaasr21is_move_constructibleIT_EE5valuesr18is_move_assignableIS5_EE5valueEvE4typeERS5_S8_(%"struct.blink::(anonymous namespace)::RequestResponse"* dereferenceable(96) %3, %"struct.blink::(anonymous namespace)::RequestResponse"* dereferenceable(96) %4)
  %11 = add i32 %6, 1
  %12 = getelementptr inbounds %"struct.blink::(anonymous namespace)::RequestResponse", %"struct.blink::(anonymous namespace)::RequestResponse"* %2, i64 0, i32 0
  %13 = tail call zeroext i1 @_ZN3WTF23CodeUnitCompareLessThanERKNS_6StringES2_(%"class.WTF::String"* dereferenceable(8) %8, %"class.WTF::String"* dereferenceable(8) %12) #16
  br i1 %13, label %14, label %24

14:                                               ; preds = %10
  tail call fastcc void @_ZNSt3__14swapIN5blink12_GLOBAL__N_115RequestResponseEEENS_9enable_ifIXaasr21is_move_constructibleIT_EE5valuesr18is_move_assignableIS5_EE5valueEvE4typeERS5_S8_(%"struct.blink::(anonymous namespace)::RequestResponse"* dereferenceable(96) %2, %"struct.blink::(anonymous namespace)::RequestResponse"* dereferenceable(96) %3)
  %15 = add i32 %6, 2
  %16 = getelementptr inbounds %"struct.blink::(anonymous namespace)::RequestResponse", %"struct.blink::(anonymous namespace)::RequestResponse"* %1, i64 0, i32 0
  %17 = tail call zeroext i1 @_ZN3WTF23CodeUnitCompareLessThanERKNS_6StringES2_(%"class.WTF::String"* dereferenceable(8) %12, %"class.WTF::String"* dereferenceable(8) %16) #16
  br i1 %17, label %18, label %24

18:                                               ; preds = %14
  tail call fastcc void @_ZNSt3__14swapIN5blink12_GLOBAL__N_115RequestResponseEEENS_9enable_ifIXaasr21is_move_constructibleIT_EE5valuesr18is_move_assignableIS5_EE5valueEvE4typeERS5_S8_(%"struct.blink::(anonymous namespace)::RequestResponse"* dereferenceable(96) %1, %"struct.blink::(anonymous namespace)::RequestResponse"* dereferenceable(96) %2)
  %19 = add i32 %6, 3
  %20 = getelementptr inbounds %"struct.blink::(anonymous namespace)::RequestResponse", %"struct.blink::(anonymous namespace)::RequestResponse"* %0, i64 0, i32 0
  %21 = tail call zeroext i1 @_ZN3WTF23CodeUnitCompareLessThanERKNS_6StringES2_(%"class.WTF::String"* dereferenceable(8) %16, %"class.WTF::String"* dereferenceable(8) %20) #16
  br i1 %21, label %22, label %24

22:                                               ; preds = %18
  tail call fastcc void @_ZNSt3__14swapIN5blink12_GLOBAL__N_115RequestResponseEEENS_9enable_ifIXaasr21is_move_constructibleIT_EE5valuesr18is_move_assignableIS5_EE5valueEvE4typeERS5_S8_(%"struct.blink::(anonymous namespace)::RequestResponse"* dereferenceable(96) %0, %"struct.blink::(anonymous namespace)::RequestResponse"* dereferenceable(96) %1)
  %23 = add i32 %6, 4
  br label %24

24:                                               ; preds = %10, %18, %22, %14, %5
  %25 = phi i32 [ %23, %22 ], [ %19, %18 ], [ %15, %14 ], [ %11, %10 ], [ %6, %5 ]
  ret i32 %25
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc zeroext i1 @_ZNSt3__127__insertion_sort_incompleteIRZN5blink12_GLOBAL__N_120ResponsesAccumulator22AddRequestResponsePairERKN4mojo9StructPtrINS1_5mojom5blink15FetchAPIRequestEEERKNS5_INS7_16FetchAPIResponseEEEEUlRKNS2_15RequestResponseESI_E_PSG_EEbT0_SM_T_(%"struct.blink::(anonymous namespace)::RequestResponse"*, %"struct.blink::(anonymous namespace)::RequestResponse"*) unnamed_addr #0 {
  %3 = alloca %"struct.blink::(anonymous namespace)::RequestResponse", align 8
  %4 = ptrtoint %"struct.blink::(anonymous namespace)::RequestResponse"* %1 to i64
  %5 = ptrtoint %"struct.blink::(anonymous namespace)::RequestResponse"* %0 to i64
  %6 = sub i64 %4, %5
  %7 = sdiv exact i64 %6, 96
  switch i64 %7, label %29 [
    i64 0, label %272
    i64 1, label %272
    i64 2, label %8
    i64 3, label %14
    i64 4, label %18
    i64 5, label %23
  ]

8:                                                ; preds = %2
  %9 = getelementptr inbounds %"struct.blink::(anonymous namespace)::RequestResponse", %"struct.blink::(anonymous namespace)::RequestResponse"* %1, i64 -1
  %10 = getelementptr inbounds %"struct.blink::(anonymous namespace)::RequestResponse", %"struct.blink::(anonymous namespace)::RequestResponse"* %9, i64 0, i32 0
  %11 = getelementptr inbounds %"struct.blink::(anonymous namespace)::RequestResponse", %"struct.blink::(anonymous namespace)::RequestResponse"* %0, i64 0, i32 0
  %12 = tail call zeroext i1 @_ZN3WTF23CodeUnitCompareLessThanERKNS_6StringES2_(%"class.WTF::String"* dereferenceable(8) %10, %"class.WTF::String"* dereferenceable(8) %11) #16
  br i1 %12, label %13, label %272

13:                                               ; preds = %8
  tail call fastcc void @_ZNSt3__14swapIN5blink12_GLOBAL__N_115RequestResponseEEENS_9enable_ifIXaasr21is_move_constructibleIT_EE5valuesr18is_move_assignableIS5_EE5valueEvE4typeERS5_S8_(%"struct.blink::(anonymous namespace)::RequestResponse"* dereferenceable(96) %0, %"struct.blink::(anonymous namespace)::RequestResponse"* dereferenceable(96) %9)
  br label %272

14:                                               ; preds = %2
  %15 = getelementptr inbounds %"struct.blink::(anonymous namespace)::RequestResponse", %"struct.blink::(anonymous namespace)::RequestResponse"* %0, i64 1
  %16 = getelementptr inbounds %"struct.blink::(anonymous namespace)::RequestResponse", %"struct.blink::(anonymous namespace)::RequestResponse"* %1, i64 -1
  %17 = tail call fastcc i32 @_ZNSt3__17__sort3IRZN5blink12_GLOBAL__N_120ResponsesAccumulator22AddRequestResponsePairERKN4mojo9StructPtrINS1_5mojom5blink15FetchAPIRequestEEERKNS5_INS7_16FetchAPIResponseEEEEUlRKNS2_15RequestResponseESI_E_PSG_EEjT0_SM_SM_T_(%"struct.blink::(anonymous namespace)::RequestResponse"* %0, %"struct.blink::(anonymous namespace)::RequestResponse"* %15, %"struct.blink::(anonymous namespace)::RequestResponse"* %16)
  br label %272

18:                                               ; preds = %2
  %19 = getelementptr inbounds %"struct.blink::(anonymous namespace)::RequestResponse", %"struct.blink::(anonymous namespace)::RequestResponse"* %0, i64 1
  %20 = getelementptr inbounds %"struct.blink::(anonymous namespace)::RequestResponse", %"struct.blink::(anonymous namespace)::RequestResponse"* %0, i64 2
  %21 = getelementptr inbounds %"struct.blink::(anonymous namespace)::RequestResponse", %"struct.blink::(anonymous namespace)::RequestResponse"* %1, i64 -1
  %22 = tail call fastcc i32 @_ZNSt3__17__sort4IRZN5blink12_GLOBAL__N_120ResponsesAccumulator22AddRequestResponsePairERKN4mojo9StructPtrINS1_5mojom5blink15FetchAPIRequestEEERKNS5_INS7_16FetchAPIResponseEEEEUlRKNS2_15RequestResponseESI_E_PSG_EEjT0_SM_SM_SM_T_(%"struct.blink::(anonymous namespace)::RequestResponse"* %0, %"struct.blink::(anonymous namespace)::RequestResponse"* %19, %"struct.blink::(anonymous namespace)::RequestResponse"* %20, %"struct.blink::(anonymous namespace)::RequestResponse"* %21)
  br label %272

23:                                               ; preds = %2
  %24 = getelementptr inbounds %"struct.blink::(anonymous namespace)::RequestResponse", %"struct.blink::(anonymous namespace)::RequestResponse"* %0, i64 1
  %25 = getelementptr inbounds %"struct.blink::(anonymous namespace)::RequestResponse", %"struct.blink::(anonymous namespace)::RequestResponse"* %0, i64 2
  %26 = getelementptr inbounds %"struct.blink::(anonymous namespace)::RequestResponse", %"struct.blink::(anonymous namespace)::RequestResponse"* %0, i64 3
  %27 = getelementptr inbounds %"struct.blink::(anonymous namespace)::RequestResponse", %"struct.blink::(anonymous namespace)::RequestResponse"* %1, i64 -1
  %28 = tail call fastcc i32 @_ZNSt3__17__sort5IRZN5blink12_GLOBAL__N_120ResponsesAccumulator22AddRequestResponsePairERKN4mojo9StructPtrINS1_5mojom5blink15FetchAPIRequestEEERKNS5_INS7_16FetchAPIResponseEEEEUlRKNS2_15RequestResponseESI_E_PSG_EEjT0_SM_SM_SM_SM_T_(%"struct.blink::(anonymous namespace)::RequestResponse"* %0, %"struct.blink::(anonymous namespace)::RequestResponse"* %24, %"struct.blink::(anonymous namespace)::RequestResponse"* %25, %"struct.blink::(anonymous namespace)::RequestResponse"* %26, %"struct.blink::(anonymous namespace)::RequestResponse"* %27)
  br label %272

29:                                               ; preds = %2
  %30 = getelementptr inbounds %"struct.blink::(anonymous namespace)::RequestResponse", %"struct.blink::(anonymous namespace)::RequestResponse"* %0, i64 2
  %31 = getelementptr inbounds %"struct.blink::(anonymous namespace)::RequestResponse", %"struct.blink::(anonymous namespace)::RequestResponse"* %0, i64 1
  %32 = tail call fastcc i32 @_ZNSt3__17__sort3IRZN5blink12_GLOBAL__N_120ResponsesAccumulator22AddRequestResponsePairERKN4mojo9StructPtrINS1_5mojom5blink15FetchAPIRequestEEERKNS5_INS7_16FetchAPIResponseEEEEUlRKNS2_15RequestResponseESI_E_PSG_EEjT0_SM_SM_T_(%"struct.blink::(anonymous namespace)::RequestResponse"* %0, %"struct.blink::(anonymous namespace)::RequestResponse"* %31, %"struct.blink::(anonymous namespace)::RequestResponse"* %30)
  %33 = getelementptr inbounds %"struct.blink::(anonymous namespace)::RequestResponse", %"struct.blink::(anonymous namespace)::RequestResponse"* %0, i64 3
  %34 = icmp eq %"struct.blink::(anonymous namespace)::RequestResponse"* %33, %1
  br i1 %34, label %272, label %35

35:                                               ; preds = %29
  %36 = bitcast %"struct.blink::(anonymous namespace)::RequestResponse"* %3 to i8*
  %37 = getelementptr inbounds %"struct.blink::(anonymous namespace)::RequestResponse", %"struct.blink::(anonymous namespace)::RequestResponse"* %3, i64 0, i32 0
  %38 = getelementptr inbounds %"struct.blink::(anonymous namespace)::RequestResponse", %"struct.blink::(anonymous namespace)::RequestResponse"* %3, i64 0, i32 0, i32 0, i32 0
  %39 = bitcast %"struct.blink::(anonymous namespace)::RequestResponse"* %3 to i64*
  %40 = getelementptr inbounds %"struct.blink::(anonymous namespace)::RequestResponse", %"struct.blink::(anonymous namespace)::RequestResponse"* %3, i64 0, i32 1
  %41 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %40, i64 0, i32 0, i32 0
  %42 = bitcast %"class.WTF::String"* %40 to i64*
  %43 = getelementptr inbounds %"struct.blink::(anonymous namespace)::RequestResponse", %"struct.blink::(anonymous namespace)::RequestResponse"* %3, i64 0, i32 2, i32 0, i32 0
  %44 = getelementptr inbounds %"struct.blink::(anonymous namespace)::RequestResponse", %"struct.blink::(anonymous namespace)::RequestResponse"* %3, i64 0, i32 3
  %45 = getelementptr inbounds %"struct.blink::(anonymous namespace)::RequestResponse", %"struct.blink::(anonymous namespace)::RequestResponse"* %3, i64 0, i32 4
  %46 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %45, i64 0, i32 0, i32 0
  %47 = bitcast %"class.WTF::String"* %45 to i64*
  %48 = getelementptr inbounds %"struct.blink::(anonymous namespace)::RequestResponse", %"struct.blink::(anonymous namespace)::RequestResponse"* %3, i64 0, i32 5
  %49 = bitcast double* %48 to i8*
  %50 = getelementptr inbounds %"struct.blink::(anonymous namespace)::RequestResponse", %"struct.blink::(anonymous namespace)::RequestResponse"* %3, i64 0, i32 8, i32 0, i32 0
  %51 = getelementptr inbounds %"struct.blink::(anonymous namespace)::RequestResponse", %"struct.blink::(anonymous namespace)::RequestResponse"* %3, i64 0, i32 8
  %52 = getelementptr inbounds %"struct.blink::(anonymous namespace)::RequestResponse", %"struct.blink::(anonymous namespace)::RequestResponse"* %3, i64 0, i32 4, i32 0, i32 0
  %53 = getelementptr inbounds %"struct.blink::(anonymous namespace)::RequestResponse", %"struct.blink::(anonymous namespace)::RequestResponse"* %3, i64 0, i32 2
  %54 = getelementptr inbounds %"struct.blink::(anonymous namespace)::RequestResponse", %"struct.blink::(anonymous namespace)::RequestResponse"* %3, i64 0, i32 1, i32 0, i32 0
  br label %55

55:                                               ; preds = %35, %265
  %56 = phi %"struct.blink::(anonymous namespace)::RequestResponse"* [ %33, %35 ], [ %267, %265 ]
  %57 = phi i32 [ 0, %35 ], [ %266, %265 ]
  %58 = phi %"struct.blink::(anonymous namespace)::RequestResponse"* [ %30, %35 ], [ %56, %265 ]
  %59 = getelementptr inbounds %"struct.blink::(anonymous namespace)::RequestResponse", %"struct.blink::(anonymous namespace)::RequestResponse"* %56, i64 0, i32 0
  %60 = getelementptr inbounds %"struct.blink::(anonymous namespace)::RequestResponse", %"struct.blink::(anonymous namespace)::RequestResponse"* %58, i64 0, i32 0
  %61 = call zeroext i1 @_ZN3WTF23CodeUnitCompareLessThanERKNS_6StringES2_(%"class.WTF::String"* dereferenceable(8) %59, %"class.WTF::String"* dereferenceable(8) %60) #16
  br i1 %61, label %62, label %265

62:                                               ; preds = %55
  call void @llvm.lifetime.start.p0i8(i64 96, i8* nonnull %36) #16
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %36, i8* align 8 bitcast ({ %"class.WTF::String", %"class.WTF::String", %"class.blink::HTTPHeaderMap", i32, [4 x i8], %"class.WTF::String", double, i32, [4 x i8], %"class.blink::HTTPHeaderMap" }* @__const._ZNSt3__127__insertion_sort_incompleteIRZN5blink12_GLOBAL__N_120ResponsesAccumulator22AddRequestResponsePairERKN4mojo9StructPtrINS1_5mojom5blink15FetchAPIRequestEEERKNS5_INS7_16FetchAPIResponseEEEEUlRKNS2_15RequestResponseESI_E_PSG_EEbT0_SM_T_.__t to i8*), i64 96, i1 false)
  call fastcc void @_ZN5blink12_GLOBAL__N_115RequestResponseC2EOS1_(%"struct.blink::(anonymous namespace)::RequestResponse"* nonnull %3, %"struct.blink::(anonymous namespace)::RequestResponse"* dereferenceable(96) %56)
  br label %63

63:                                               ; preds = %147, %62
  %64 = phi %"struct.blink::(anonymous namespace)::RequestResponse"* [ %56, %62 ], [ %65, %147 ]
  %65 = phi %"struct.blink::(anonymous namespace)::RequestResponse"* [ %58, %62 ], [ %148, %147 ]
  %66 = getelementptr inbounds %"struct.blink::(anonymous namespace)::RequestResponse", %"struct.blink::(anonymous namespace)::RequestResponse"* %65, i64 0, i32 0, i32 0, i32 0
  %67 = bitcast %"struct.blink::(anonymous namespace)::RequestResponse"* %65 to i64*
  %68 = load i64, i64* %67, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %66, align 8
  %69 = bitcast %"struct.blink::(anonymous namespace)::RequestResponse"* %64 to i64*
  %70 = getelementptr inbounds %"struct.blink::(anonymous namespace)::RequestResponse", %"struct.blink::(anonymous namespace)::RequestResponse"* %64, i64 0, i32 0, i32 0, i32 0
  %71 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %70, align 8
  store i64 %68, i64* %69, align 8
  %72 = icmp eq %"class.WTF::StringImpl"* %71, null
  br i1 %72, label %86, label %73

73:                                               ; preds = %63
  %74 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %71, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %75 = load atomic i32, i32* %74 monotonic, align 4
  %76 = and i32 %75, 2
  %77 = icmp eq i32 %76, 0
  %78 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %71, i64 0, i32 0
  %79 = load i32, i32* %78, align 4
  br i1 %77, label %80, label %82

80:                                               ; preds = %73
  %81 = add i32 %79, -1
  store i32 %81, i32* %78, align 4
  br label %82

82:                                               ; preds = %80, %73
  %83 = phi i32 [ %81, %80 ], [ %79, %73 ]
  %84 = icmp eq i32 %83, 0
  br i1 %84, label %85, label %86

85:                                               ; preds = %82
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %71) #16
  br label %86

86:                                               ; preds = %85, %82, %63
  %87 = getelementptr inbounds %"struct.blink::(anonymous namespace)::RequestResponse", %"struct.blink::(anonymous namespace)::RequestResponse"* %64, i64 0, i32 1
  %88 = getelementptr inbounds %"struct.blink::(anonymous namespace)::RequestResponse", %"struct.blink::(anonymous namespace)::RequestResponse"* %65, i64 0, i32 1
  %89 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %88, i64 0, i32 0, i32 0
  %90 = bitcast %"class.WTF::String"* %88 to i64*
  %91 = load i64, i64* %90, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %89, align 8
  %92 = bitcast %"class.WTF::String"* %87 to i64*
  %93 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %87, i64 0, i32 0, i32 0
  %94 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %93, align 8
  store i64 %91, i64* %92, align 8
  %95 = icmp eq %"class.WTF::StringImpl"* %94, null
  br i1 %95, label %109, label %96

96:                                               ; preds = %86
  %97 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %94, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %98 = load atomic i32, i32* %97 monotonic, align 4
  %99 = and i32 %98, 2
  %100 = icmp eq i32 %99, 0
  %101 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %94, i64 0, i32 0
  %102 = load i32, i32* %101, align 4
  br i1 %100, label %103, label %105

103:                                              ; preds = %96
  %104 = add i32 %102, -1
  store i32 %104, i32* %101, align 4
  br label %105

105:                                              ; preds = %103, %96
  %106 = phi i32 [ %104, %103 ], [ %102, %96 ]
  %107 = icmp eq i32 %106, 0
  br i1 %107, label %108, label %109

108:                                              ; preds = %105
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %94) #16
  br label %109

109:                                              ; preds = %86, %105, %108
  %110 = getelementptr inbounds %"struct.blink::(anonymous namespace)::RequestResponse", %"struct.blink::(anonymous namespace)::RequestResponse"* %64, i64 0, i32 2, i32 0, i32 0
  %111 = getelementptr inbounds %"struct.blink::(anonymous namespace)::RequestResponse", %"struct.blink::(anonymous namespace)::RequestResponse"* %65, i64 0, i32 2, i32 0, i32 0
  %112 = call dereferenceable(24) %"class.WTF::HashTable.2280"* @_ZN3WTF9HashTableINS_12AtomicStringENS_12KeyValuePairIS1_S1_EENS_24KeyValuePairKeyExtractorENS_15CaseFoldingHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EES8_EES8_NS_18PartitionAllocatorEEaSERKSB_(%"class.WTF::HashTable.2280"* %110, %"class.WTF::HashTable.2280"* dereferenceable(24) %111) #16
  %113 = getelementptr inbounds %"struct.blink::(anonymous namespace)::RequestResponse", %"struct.blink::(anonymous namespace)::RequestResponse"* %65, i64 0, i32 3
  %114 = load i32, i32* %113, align 8
  %115 = getelementptr inbounds %"struct.blink::(anonymous namespace)::RequestResponse", %"struct.blink::(anonymous namespace)::RequestResponse"* %64, i64 0, i32 3
  store i32 %114, i32* %115, align 8
  %116 = getelementptr inbounds %"struct.blink::(anonymous namespace)::RequestResponse", %"struct.blink::(anonymous namespace)::RequestResponse"* %64, i64 0, i32 4
  %117 = getelementptr inbounds %"struct.blink::(anonymous namespace)::RequestResponse", %"struct.blink::(anonymous namespace)::RequestResponse"* %65, i64 0, i32 4
  %118 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %117, i64 0, i32 0, i32 0
  %119 = bitcast %"class.WTF::String"* %117 to i64*
  %120 = load i64, i64* %119, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %118, align 8
  %121 = bitcast %"class.WTF::String"* %116 to i64*
  %122 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %116, i64 0, i32 0, i32 0
  %123 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %122, align 8
  store i64 %120, i64* %121, align 8
  %124 = icmp eq %"class.WTF::StringImpl"* %123, null
  br i1 %124, label %138, label %125

125:                                              ; preds = %109
  %126 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %123, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %127 = load atomic i32, i32* %126 monotonic, align 4
  %128 = and i32 %127, 2
  %129 = icmp eq i32 %128, 0
  %130 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %123, i64 0, i32 0
  %131 = load i32, i32* %130, align 4
  br i1 %129, label %132, label %134

132:                                              ; preds = %125
  %133 = add i32 %131, -1
  store i32 %133, i32* %130, align 4
  br label %134

134:                                              ; preds = %132, %125
  %135 = phi i32 [ %133, %132 ], [ %131, %125 ]
  %136 = icmp eq i32 %135, 0
  br i1 %136, label %137, label %138

137:                                              ; preds = %134
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %123) #16
  br label %138

138:                                              ; preds = %109, %134, %137
  %139 = getelementptr inbounds %"struct.blink::(anonymous namespace)::RequestResponse", %"struct.blink::(anonymous namespace)::RequestResponse"* %64, i64 0, i32 5
  %140 = getelementptr inbounds %"struct.blink::(anonymous namespace)::RequestResponse", %"struct.blink::(anonymous namespace)::RequestResponse"* %65, i64 0, i32 5
  %141 = bitcast double* %139 to i8*
  %142 = bitcast double* %140 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %141, i8* align 8 %142, i64 12, i1 false) #16
  %143 = getelementptr inbounds %"struct.blink::(anonymous namespace)::RequestResponse", %"struct.blink::(anonymous namespace)::RequestResponse"* %64, i64 0, i32 8, i32 0, i32 0
  %144 = getelementptr inbounds %"struct.blink::(anonymous namespace)::RequestResponse", %"struct.blink::(anonymous namespace)::RequestResponse"* %65, i64 0, i32 8, i32 0, i32 0
  %145 = call dereferenceable(24) %"class.WTF::HashTable.2280"* @_ZN3WTF9HashTableINS_12AtomicStringENS_12KeyValuePairIS1_S1_EENS_24KeyValuePairKeyExtractorENS_15CaseFoldingHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EES8_EES8_NS_18PartitionAllocatorEEaSERKSB_(%"class.WTF::HashTable.2280"* %143, %"class.WTF::HashTable.2280"* dereferenceable(24) %144) #16
  %146 = icmp eq %"struct.blink::(anonymous namespace)::RequestResponse"* %65, %0
  br i1 %146, label %151, label %147

147:                                              ; preds = %138
  %148 = getelementptr inbounds %"struct.blink::(anonymous namespace)::RequestResponse", %"struct.blink::(anonymous namespace)::RequestResponse"* %65, i64 -1
  %149 = getelementptr inbounds %"struct.blink::(anonymous namespace)::RequestResponse", %"struct.blink::(anonymous namespace)::RequestResponse"* %148, i64 0, i32 0
  %150 = call zeroext i1 @_ZN3WTF23CodeUnitCompareLessThanERKNS_6StringES2_(%"class.WTF::String"* nonnull dereferenceable(8) %37, %"class.WTF::String"* dereferenceable(8) %149) #16
  br i1 %150, label %63, label %151

151:                                              ; preds = %138, %147
  %152 = phi %"struct.blink::(anonymous namespace)::RequestResponse"* [ %65, %147 ], [ %0, %138 ]
  %153 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %88, i64 0, i32 0, i32 0
  %154 = bitcast %"class.WTF::String"* %88 to i64*
  %155 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %117, i64 0, i32 0, i32 0
  %156 = bitcast %"class.WTF::String"* %117 to i64*
  %157 = bitcast double* %140 to i8*
  %158 = getelementptr inbounds %"struct.blink::(anonymous namespace)::RequestResponse", %"struct.blink::(anonymous namespace)::RequestResponse"* %152, i64 0, i32 0, i32 0, i32 0
  %159 = bitcast %"struct.blink::(anonymous namespace)::RequestResponse"* %152 to i64*
  %160 = getelementptr inbounds %"struct.blink::(anonymous namespace)::RequestResponse", %"struct.blink::(anonymous namespace)::RequestResponse"* %152, i64 0, i32 3
  %161 = load i64, i64* %39, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %38, align 8
  %162 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %158, align 8
  store i64 %161, i64* %159, align 8
  %163 = icmp eq %"class.WTF::StringImpl"* %162, null
  br i1 %163, label %177, label %164

164:                                              ; preds = %151
  %165 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %162, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %166 = load atomic i32, i32* %165 monotonic, align 4
  %167 = and i32 %166, 2
  %168 = icmp eq i32 %167, 0
  %169 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %162, i64 0, i32 0
  %170 = load i32, i32* %169, align 4
  br i1 %168, label %171, label %173

171:                                              ; preds = %164
  %172 = add i32 %170, -1
  store i32 %172, i32* %169, align 4
  br label %173

173:                                              ; preds = %171, %164
  %174 = phi i32 [ %172, %171 ], [ %170, %164 ]
  %175 = icmp eq i32 %174, 0
  br i1 %175, label %176, label %177

176:                                              ; preds = %173
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %162) #16
  br label %177

177:                                              ; preds = %176, %173, %151
  %178 = load i64, i64* %42, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %41, align 8
  %179 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %153, align 8
  store i64 %178, i64* %154, align 8
  %180 = icmp eq %"class.WTF::StringImpl"* %179, null
  br i1 %180, label %194, label %181

181:                                              ; preds = %177
  %182 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %179, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %183 = load atomic i32, i32* %182 monotonic, align 4
  %184 = and i32 %183, 2
  %185 = icmp eq i32 %184, 0
  %186 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %179, i64 0, i32 0
  %187 = load i32, i32* %186, align 4
  br i1 %185, label %188, label %190

188:                                              ; preds = %181
  %189 = add i32 %187, -1
  store i32 %189, i32* %186, align 4
  br label %190

190:                                              ; preds = %188, %181
  %191 = phi i32 [ %189, %188 ], [ %187, %181 ]
  %192 = icmp eq i32 %191, 0
  br i1 %192, label %193, label %194

193:                                              ; preds = %190
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %179) #16
  br label %194

194:                                              ; preds = %177, %190, %193
  %195 = call dereferenceable(24) %"class.WTF::HashTable.2280"* @_ZN3WTF9HashTableINS_12AtomicStringENS_12KeyValuePairIS1_S1_EENS_24KeyValuePairKeyExtractorENS_15CaseFoldingHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EES8_EES8_NS_18PartitionAllocatorEEaSERKSB_(%"class.WTF::HashTable.2280"* %111, %"class.WTF::HashTable.2280"* dereferenceable(24) %43) #16
  %196 = load i32, i32* %44, align 8
  store i32 %196, i32* %160, align 8
  %197 = load i64, i64* %47, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %46, align 8
  %198 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %155, align 8
  store i64 %197, i64* %156, align 8
  %199 = icmp eq %"class.WTF::StringImpl"* %198, null
  br i1 %199, label %213, label %200

200:                                              ; preds = %194
  %201 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %198, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %202 = load atomic i32, i32* %201 monotonic, align 4
  %203 = and i32 %202, 2
  %204 = icmp eq i32 %203, 0
  %205 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %198, i64 0, i32 0
  %206 = load i32, i32* %205, align 4
  br i1 %204, label %207, label %209

207:                                              ; preds = %200
  %208 = add i32 %206, -1
  store i32 %208, i32* %205, align 4
  br label %209

209:                                              ; preds = %207, %200
  %210 = phi i32 [ %208, %207 ], [ %206, %200 ]
  %211 = icmp eq i32 %210, 0
  br i1 %211, label %212, label %213

212:                                              ; preds = %209
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %198) #16
  br label %213

213:                                              ; preds = %194, %209, %212
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %157, i8* align 8 %49, i64 12, i1 false) #16
  %214 = call dereferenceable(24) %"class.WTF::HashTable.2280"* @_ZN3WTF9HashTableINS_12AtomicStringENS_12KeyValuePairIS1_S1_EENS_24KeyValuePairKeyExtractorENS_15CaseFoldingHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EES8_EES8_NS_18PartitionAllocatorEEaSERKSB_(%"class.WTF::HashTable.2280"* %144, %"class.WTF::HashTable.2280"* dereferenceable(24) %50) #16
  %215 = add i32 %57, 1
  %216 = icmp eq i32 %215, 8
  call void @_ZN5blink13HTTPHeaderMapD1Ev(%"class.blink::HTTPHeaderMap"* %51) #16
  %217 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %52, align 8
  %218 = icmp eq %"class.WTF::StringImpl"* %217, null
  br i1 %218, label %232, label %219

219:                                              ; preds = %213
  %220 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %217, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %221 = load atomic i32, i32* %220 monotonic, align 4
  %222 = and i32 %221, 2
  %223 = icmp eq i32 %222, 0
  %224 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %217, i64 0, i32 0
  %225 = load i32, i32* %224, align 4
  br i1 %223, label %226, label %228

226:                                              ; preds = %219
  %227 = add i32 %225, -1
  store i32 %227, i32* %224, align 4
  br label %228

228:                                              ; preds = %226, %219
  %229 = phi i32 [ %227, %226 ], [ %225, %219 ]
  %230 = icmp eq i32 %229, 0
  br i1 %230, label %231, label %232

231:                                              ; preds = %228
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %217) #16
  br label %232

232:                                              ; preds = %231, %228, %213
  call void @_ZN5blink13HTTPHeaderMapD1Ev(%"class.blink::HTTPHeaderMap"* %53) #16
  %233 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %54, align 8
  %234 = icmp eq %"class.WTF::StringImpl"* %233, null
  br i1 %234, label %248, label %235

235:                                              ; preds = %232
  %236 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %233, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %237 = load atomic i32, i32* %236 monotonic, align 4
  %238 = and i32 %237, 2
  %239 = icmp eq i32 %238, 0
  %240 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %233, i64 0, i32 0
  %241 = load i32, i32* %240, align 4
  br i1 %239, label %242, label %244

242:                                              ; preds = %235
  %243 = add i32 %241, -1
  store i32 %243, i32* %240, align 4
  br label %244

244:                                              ; preds = %242, %235
  %245 = phi i32 [ %243, %242 ], [ %241, %235 ]
  %246 = icmp eq i32 %245, 0
  br i1 %246, label %247, label %248

247:                                              ; preds = %244
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %233) #16
  br label %248

248:                                              ; preds = %247, %244, %232
  %249 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %38, align 8
  %250 = icmp eq %"class.WTF::StringImpl"* %249, null
  br i1 %250, label %264, label %251

251:                                              ; preds = %248
  %252 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %249, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %253 = load atomic i32, i32* %252 monotonic, align 4
  %254 = and i32 %253, 2
  %255 = icmp eq i32 %254, 0
  %256 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %249, i64 0, i32 0
  %257 = load i32, i32* %256, align 4
  br i1 %255, label %258, label %260

258:                                              ; preds = %251
  %259 = add i32 %257, -1
  store i32 %259, i32* %256, align 4
  br label %260

260:                                              ; preds = %258, %251
  %261 = phi i32 [ %259, %258 ], [ %257, %251 ]
  %262 = icmp eq i32 %261, 0
  br i1 %262, label %263, label %264

263:                                              ; preds = %260
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %249) #16
  br label %264

264:                                              ; preds = %248, %260, %263
  call void @llvm.lifetime.end.p0i8(i64 96, i8* nonnull %36) #16
  br i1 %216, label %269, label %265

265:                                              ; preds = %264, %55
  %266 = phi i32 [ %215, %264 ], [ %57, %55 ]
  %267 = getelementptr inbounds %"struct.blink::(anonymous namespace)::RequestResponse", %"struct.blink::(anonymous namespace)::RequestResponse"* %56, i64 1
  %268 = icmp eq %"struct.blink::(anonymous namespace)::RequestResponse"* %267, %1
  br i1 %268, label %272, label %55

269:                                              ; preds = %264
  %270 = getelementptr inbounds %"struct.blink::(anonymous namespace)::RequestResponse", %"struct.blink::(anonymous namespace)::RequestResponse"* %56, i64 1
  %271 = icmp eq %"struct.blink::(anonymous namespace)::RequestResponse"* %270, %1
  br label %272

272:                                              ; preds = %265, %269, %29, %8, %13, %2, %2, %23, %18, %14
  %273 = phi i1 [ true, %23 ], [ true, %18 ], [ true, %14 ], [ true, %2 ], [ true, %2 ], [ true, %13 ], [ true, %8 ], [ true, %29 ], [ %271, %269 ], [ true, %265 ]
  ret i1 %273
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN3WTF23CodeUnitCompareLessThanERKNS_6StringES2_(%"class.WTF::String"* dereferenceable(8), %"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #11 comdat {
  %3 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %0, i64 0, i32 0, i32 0
  %4 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %3, align 8
  %5 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %1, i64 0, i32 0, i32 0
  %6 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %5, align 8
  %7 = icmp eq %"class.WTF::StringImpl"* %4, null
  %8 = icmp ne %"class.WTF::StringImpl"* %6, null
  br i1 %7, label %9, label %15

9:                                                ; preds = %2
  br i1 %8, label %10, label %168

10:                                               ; preds = %9
  %11 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %6, i64 0, i32 1
  %12 = load i32, i32* %11, align 4
  %13 = icmp ne i32 %12, 0
  %14 = sext i1 %13 to i32
  br label %168

15:                                               ; preds = %2
  br i1 %8, label %21, label %16

16:                                               ; preds = %15
  %17 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %4, i64 0, i32 1
  %18 = load i32, i32* %17, align 4
  %19 = icmp ne i32 %18, 0
  %20 = zext i1 %19 to i32
  br label %168

21:                                               ; preds = %15
  %22 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %4, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %23 = load atomic i32, i32* %22 monotonic, align 4
  %24 = and i32 %23, 1
  %25 = icmp eq i32 %24, 0
  %26 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %6, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %27 = load atomic i32, i32* %26 monotonic, align 4
  %28 = and i32 %27, 1
  %29 = icmp ne i32 %28, 0
  br i1 %25, label %94, label %30

30:                                               ; preds = %21
  %31 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %4, i64 0, i32 1
  %32 = load i32, i32* %31, align 4
  %33 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %6, i64 0, i32 1
  %34 = load i32, i32* %33, align 4
  %35 = icmp ult i32 %32, %34
  %36 = select i1 %35, i32 %32, i32 %34
  %37 = icmp eq i32 %36, 0
  br i1 %29, label %38, label %64

38:                                               ; preds = %30
  br i1 %37, label %59, label %39

39:                                               ; preds = %38
  %40 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %6, i64 1
  %41 = bitcast %"class.WTF::StringImpl"* %40 to i8*
  %42 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %4, i64 1
  %43 = bitcast %"class.WTF::StringImpl"* %42 to i8*
  br label %44

44:                                               ; preds = %51, %39
  %45 = phi i32 [ %54, %51 ], [ 0, %39 ]
  %46 = phi i8* [ %53, %51 ], [ %41, %39 ]
  %47 = phi i8* [ %52, %51 ], [ %43, %39 ]
  %48 = load i8, i8* %47, align 1
  %49 = load i8, i8* %46, align 1
  %50 = icmp eq i8 %48, %49
  br i1 %50, label %51, label %56

51:                                               ; preds = %44
  %52 = getelementptr inbounds i8, i8* %47, i64 1
  %53 = getelementptr inbounds i8, i8* %46, i64 1
  %54 = add nuw i32 %45, 1
  %55 = icmp ult i32 %54, %36
  br i1 %55, label %44, label %59

56:                                               ; preds = %44
  %57 = icmp ugt i8 %48, %49
  %58 = select i1 %57, i32 1, i32 -1
  br label %168

59:                                               ; preds = %51, %38
  %60 = icmp eq i32 %32, %34
  br i1 %60, label %168, label %61

61:                                               ; preds = %59
  %62 = icmp ugt i32 %32, %34
  %63 = select i1 %62, i32 1, i32 -1
  br label %168

64:                                               ; preds = %30
  br i1 %37, label %89, label %65

65:                                               ; preds = %64
  %66 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %6, i64 1
  %67 = bitcast %"class.WTF::StringImpl"* %66 to i16*
  %68 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %4, i64 1
  %69 = bitcast %"class.WTF::StringImpl"* %68 to i8*
  br label %70

70:                                               ; preds = %79, %65
  %71 = phi i32 [ %82, %79 ], [ 0, %65 ]
  %72 = phi i16* [ %81, %79 ], [ %67, %65 ]
  %73 = phi i8* [ %80, %79 ], [ %69, %65 ]
  %74 = load i8, i8* %73, align 1
  %75 = zext i8 %74 to i32
  %76 = load i16, i16* %72, align 2
  %77 = zext i16 %76 to i32
  %78 = icmp eq i32 %75, %77
  br i1 %78, label %79, label %84

79:                                               ; preds = %70
  %80 = getelementptr inbounds i8, i8* %73, i64 1
  %81 = getelementptr inbounds i16, i16* %72, i64 1
  %82 = add nuw i32 %71, 1
  %83 = icmp ult i32 %82, %36
  br i1 %83, label %70, label %89

84:                                               ; preds = %70
  %85 = zext i8 %74 to i32
  %86 = zext i16 %76 to i32
  %87 = icmp ugt i32 %85, %86
  %88 = select i1 %87, i32 1, i32 -1
  br label %168

89:                                               ; preds = %79, %64
  %90 = icmp eq i32 %32, %34
  br i1 %90, label %168, label %91

91:                                               ; preds = %89
  %92 = icmp ugt i32 %32, %34
  %93 = select i1 %92, i32 1, i32 -1
  br label %168

94:                                               ; preds = %21
  br i1 %29, label %95, label %135

95:                                               ; preds = %94
  %96 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %6, i64 0, i32 1
  %97 = load i32, i32* %96, align 4
  %98 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %4, i64 0, i32 1
  %99 = load i32, i32* %98, align 4
  %100 = icmp ult i32 %97, %99
  %101 = select i1 %100, i32 %97, i32 %99
  %102 = icmp eq i32 %101, 0
  br i1 %102, label %127, label %103

103:                                              ; preds = %95
  %104 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %4, i64 1
  %105 = bitcast %"class.WTF::StringImpl"* %104 to i16*
  %106 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %6, i64 1
  %107 = bitcast %"class.WTF::StringImpl"* %106 to i8*
  br label %108

108:                                              ; preds = %117, %103
  %109 = phi i32 [ %120, %117 ], [ 0, %103 ]
  %110 = phi i16* [ %119, %117 ], [ %105, %103 ]
  %111 = phi i8* [ %118, %117 ], [ %107, %103 ]
  %112 = load i8, i8* %111, align 1
  %113 = zext i8 %112 to i32
  %114 = load i16, i16* %110, align 2
  %115 = zext i16 %114 to i32
  %116 = icmp eq i32 %113, %115
  br i1 %116, label %117, label %122

117:                                              ; preds = %108
  %118 = getelementptr inbounds i8, i8* %111, i64 1
  %119 = getelementptr inbounds i16, i16* %110, i64 1
  %120 = add nuw i32 %109, 1
  %121 = icmp ult i32 %120, %101
  br i1 %121, label %108, label %127

122:                                              ; preds = %108
  %123 = zext i8 %112 to i32
  %124 = zext i16 %114 to i32
  %125 = icmp ugt i32 %123, %124
  %126 = select i1 %125, i32 1, i32 -1
  br label %132

127:                                              ; preds = %117, %95
  %128 = icmp eq i32 %97, %99
  br i1 %128, label %132, label %129

129:                                              ; preds = %127
  %130 = icmp ugt i32 %97, %99
  %131 = select i1 %130, i32 1, i32 -1
  br label %132

132:                                              ; preds = %129, %127, %122
  %133 = phi i32 [ %126, %122 ], [ %131, %129 ], [ 0, %127 ]
  %134 = sub nsw i32 0, %133
  br label %168

135:                                              ; preds = %94
  %136 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %4, i64 0, i32 1
  %137 = load i32, i32* %136, align 4
  %138 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %6, i64 0, i32 1
  %139 = load i32, i32* %138, align 4
  %140 = icmp ult i32 %137, %139
  %141 = select i1 %140, i32 %137, i32 %139
  %142 = icmp eq i32 %141, 0
  br i1 %142, label %163, label %143

143:                                              ; preds = %135
  %144 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %6, i64 1
  %145 = bitcast %"class.WTF::StringImpl"* %144 to i16*
  %146 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %4, i64 1
  %147 = bitcast %"class.WTF::StringImpl"* %146 to i16*
  br label %148

148:                                              ; preds = %155, %143
  %149 = phi i32 [ %158, %155 ], [ 0, %143 ]
  %150 = phi i16* [ %157, %155 ], [ %145, %143 ]
  %151 = phi i16* [ %156, %155 ], [ %147, %143 ]
  %152 = load i16, i16* %151, align 2
  %153 = load i16, i16* %150, align 2
  %154 = icmp eq i16 %152, %153
  br i1 %154, label %155, label %160

155:                                              ; preds = %148
  %156 = getelementptr inbounds i16, i16* %151, i64 1
  %157 = getelementptr inbounds i16, i16* %150, i64 1
  %158 = add nuw i32 %149, 1
  %159 = icmp ult i32 %158, %141
  br i1 %159, label %148, label %163

160:                                              ; preds = %148
  %161 = icmp ugt i16 %152, %153
  %162 = select i1 %161, i32 1, i32 -1
  br label %168

163:                                              ; preds = %155, %135
  %164 = icmp eq i32 %137, %139
  br i1 %164, label %168, label %165

165:                                              ; preds = %163
  %166 = icmp ugt i32 %137, %139
  %167 = select i1 %166, i32 1, i32 -1
  br label %168

168:                                              ; preds = %9, %10, %16, %56, %59, %61, %84, %89, %91, %132, %160, %163, %165
  %169 = phi i32 [ %20, %16 ], [ 0, %9 ], [ %14, %10 ], [ %134, %132 ], [ %58, %56 ], [ %63, %61 ], [ 0, %59 ], [ %88, %84 ], [ %93, %91 ], [ 0, %89 ], [ %162, %160 ], [ %167, %165 ], [ 0, %163 ]
  %170 = icmp slt i32 %169, 0
  ret i1 %170
}

; Function Attrs: inlinehint nounwind ssp uwtable
define internal fastcc void @_ZN5blink12_GLOBAL__N_115RequestResponseC2EOS1_(%"struct.blink::(anonymous namespace)::RequestResponse"*, %"struct.blink::(anonymous namespace)::RequestResponse"* nocapture dereferenceable(96)) unnamed_addr #11 align 2 {
  %3 = getelementptr inbounds %"struct.blink::(anonymous namespace)::RequestResponse", %"struct.blink::(anonymous namespace)::RequestResponse"* %1, i64 0, i32 0, i32 0, i32 0
  %4 = bitcast %"struct.blink::(anonymous namespace)::RequestResponse"* %1 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"struct.blink::(anonymous namespace)::RequestResponse"* %0 to i64*
  store i64 %5, i64* %6, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %3, align 8
  %7 = getelementptr inbounds %"struct.blink::(anonymous namespace)::RequestResponse", %"struct.blink::(anonymous namespace)::RequestResponse"* %0, i64 0, i32 1
  %8 = getelementptr inbounds %"struct.blink::(anonymous namespace)::RequestResponse", %"struct.blink::(anonymous namespace)::RequestResponse"* %1, i64 0, i32 1
  %9 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %8, i64 0, i32 0, i32 0
  %10 = bitcast %"class.WTF::String"* %8 to i64*
  %11 = load i64, i64* %10, align 8
  %12 = bitcast %"class.WTF::String"* %7 to i64*
  store i64 %11, i64* %12, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %9, align 8
  %13 = getelementptr inbounds %"struct.blink::(anonymous namespace)::RequestResponse", %"struct.blink::(anonymous namespace)::RequestResponse"* %0, i64 0, i32 2
  %14 = getelementptr inbounds %"class.blink::HTTPHeaderMap", %"class.blink::HTTPHeaderMap"* %13, i64 0, i32 0, i32 0
  %15 = getelementptr inbounds %"struct.blink::(anonymous namespace)::RequestResponse", %"struct.blink::(anonymous namespace)::RequestResponse"* %1, i64 0, i32 2, i32 0, i32 0, i32 2
  %16 = bitcast %"class.blink::HTTPHeaderMap"* %13 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %16, i8 0, i64 20, i1 false) #16
  %17 = load i32, i32* %15, align 4
  %18 = icmp eq i32 %17, 0
  br i1 %18, label %55, label %19

19:                                               ; preds = %2
  tail call void @_ZN3WTF9HashTableINS_12AtomicStringENS_12KeyValuePairIS1_S1_EENS_24KeyValuePairKeyExtractorENS_15CaseFoldingHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EES8_EES8_NS_18PartitionAllocatorEE22ReserveCapacityForSizeEj(%"class.WTF::HashTable.2280"* %14, i32 %17) #16
  %20 = load i32, i32* %15, align 4
  %21 = icmp eq i32 %20, 0
  %22 = getelementptr inbounds %"struct.blink::(anonymous namespace)::RequestResponse", %"struct.blink::(anonymous namespace)::RequestResponse"* %1, i64 0, i32 2, i32 0, i32 0, i32 0
  %23 = load %"struct.WTF::KeyValuePair.2283"*, %"struct.WTF::KeyValuePair.2283"** %22, align 8
  %24 = getelementptr inbounds %"struct.blink::(anonymous namespace)::RequestResponse", %"struct.blink::(anonymous namespace)::RequestResponse"* %1, i64 0, i32 2, i32 0, i32 0, i32 1
  %25 = load i32, i32* %24, align 8
  %26 = zext i32 %25 to i64
  %27 = getelementptr inbounds %"struct.WTF::KeyValuePair.2283", %"struct.WTF::KeyValuePair.2283"* %23, i64 %26
  br i1 %21, label %55, label %28

28:                                               ; preds = %19
  %29 = icmp eq i32 %25, 0
  br i1 %29, label %37, label %30

30:                                               ; preds = %28, %34
  %31 = phi %"struct.WTF::KeyValuePair.2283"* [ %35, %34 ], [ %23, %28 ]
  %32 = bitcast %"struct.WTF::KeyValuePair.2283"* %31 to i64*
  %33 = load i64, i64* %32, align 8
  switch i64 %33, label %37 [
    i64 -1, label %34
    i64 0, label %34
  ]

34:                                               ; preds = %30, %30
  %35 = getelementptr inbounds %"struct.WTF::KeyValuePair.2283", %"struct.WTF::KeyValuePair.2283"* %31, i64 1
  %36 = icmp eq %"struct.WTF::KeyValuePair.2283"* %35, %27
  br i1 %36, label %55, label %30

37:                                               ; preds = %30, %28
  %38 = phi %"struct.WTF::KeyValuePair.2283"* [ %23, %28 ], [ %31, %30 ]
  %39 = icmp eq %"struct.WTF::KeyValuePair.2283"* %38, %27
  br i1 %39, label %55, label %40

40:                                               ; preds = %37, %53
  %41 = phi %"struct.WTF::KeyValuePair.2283"* [ %47, %53 ], [ %38, %37 ]
  %42 = getelementptr inbounds %"struct.WTF::KeyValuePair.2283", %"struct.WTF::KeyValuePair.2283"* %41, i64 0, i32 0
  %43 = tail call { %"struct.WTF::KeyValuePair.2283"*, i8 } @_ZN3WTF9HashTableINS_12AtomicStringENS_12KeyValuePairIS1_S1_EENS_24KeyValuePairKeyExtractorENS_15CaseFoldingHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EES8_EES8_NS_18PartitionAllocatorEE6insertINS_22IdentityHashTranslatorIS5_S9_SA_EERKS1_RKS3_EENS_18HashTableAddResultISB_S3_EEOT0_OT1_(%"class.WTF::HashTable.2280"* %14, %"class.WTF::AtomicString"* dereferenceable(8) %42, %"struct.WTF::KeyValuePair.2283"* dereferenceable(16) %41) #16
  %44 = getelementptr inbounds %"struct.WTF::KeyValuePair.2283", %"struct.WTF::KeyValuePair.2283"* %41, i64 1
  %45 = icmp eq %"struct.WTF::KeyValuePair.2283"* %44, %27
  br i1 %45, label %55, label %46

46:                                               ; preds = %40, %50
  %47 = phi %"struct.WTF::KeyValuePair.2283"* [ %51, %50 ], [ %44, %40 ]
  %48 = bitcast %"struct.WTF::KeyValuePair.2283"* %47 to i64*
  %49 = load i64, i64* %48, align 8
  switch i64 %49, label %53 [
    i64 -1, label %50
    i64 0, label %50
  ]

50:                                               ; preds = %46, %46
  %51 = getelementptr inbounds %"struct.WTF::KeyValuePair.2283", %"struct.WTF::KeyValuePair.2283"* %47, i64 1
  %52 = icmp eq %"struct.WTF::KeyValuePair.2283"* %51, %27
  br i1 %52, label %55, label %46

53:                                               ; preds = %46
  %54 = icmp eq %"struct.WTF::KeyValuePair.2283"* %47, %27
  br i1 %54, label %55, label %40

55:                                               ; preds = %34, %40, %53, %50, %2, %19, %37
  %56 = getelementptr inbounds %"struct.blink::(anonymous namespace)::RequestResponse", %"struct.blink::(anonymous namespace)::RequestResponse"* %0, i64 0, i32 3
  %57 = getelementptr inbounds %"struct.blink::(anonymous namespace)::RequestResponse", %"struct.blink::(anonymous namespace)::RequestResponse"* %1, i64 0, i32 3
  %58 = load i32, i32* %57, align 8
  store i32 %58, i32* %56, align 8
  %59 = getelementptr inbounds %"struct.blink::(anonymous namespace)::RequestResponse", %"struct.blink::(anonymous namespace)::RequestResponse"* %0, i64 0, i32 4
  %60 = getelementptr inbounds %"struct.blink::(anonymous namespace)::RequestResponse", %"struct.blink::(anonymous namespace)::RequestResponse"* %1, i64 0, i32 4
  %61 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %60, i64 0, i32 0, i32 0
  %62 = bitcast %"class.WTF::String"* %60 to i64*
  %63 = load i64, i64* %62, align 8
  %64 = bitcast %"class.WTF::String"* %59 to i64*
  store i64 %63, i64* %64, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %61, align 8
  %65 = getelementptr inbounds %"struct.blink::(anonymous namespace)::RequestResponse", %"struct.blink::(anonymous namespace)::RequestResponse"* %0, i64 0, i32 5
  %66 = getelementptr inbounds %"struct.blink::(anonymous namespace)::RequestResponse", %"struct.blink::(anonymous namespace)::RequestResponse"* %1, i64 0, i32 5
  %67 = bitcast double* %65 to i8*
  %68 = bitcast double* %66 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %67, i8* align 8 %68, i64 12, i1 false)
  %69 = getelementptr inbounds %"struct.blink::(anonymous namespace)::RequestResponse", %"struct.blink::(anonymous namespace)::RequestResponse"* %0, i64 0, i32 8
  %70 = getelementptr inbounds %"class.blink::HTTPHeaderMap", %"class.blink::HTTPHeaderMap"* %69, i64 0, i32 0, i32 0
  %71 = getelementptr inbounds %"struct.blink::(anonymous namespace)::RequestResponse", %"struct.blink::(anonymous namespace)::RequestResponse"* %1, i64 0, i32 8, i32 0, i32 0, i32 2
  %72 = bitcast %"class.blink::HTTPHeaderMap"* %69 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %72, i8 0, i64 20, i1 false) #16
  %73 = load i32, i32* %71, align 4
  %74 = icmp eq i32 %73, 0
  br i1 %74, label %111, label %75

75:                                               ; preds = %55
  tail call void @_ZN3WTF9HashTableINS_12AtomicStringENS_12KeyValuePairIS1_S1_EENS_24KeyValuePairKeyExtractorENS_15CaseFoldingHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EES8_EES8_NS_18PartitionAllocatorEE22ReserveCapacityForSizeEj(%"class.WTF::HashTable.2280"* %70, i32 %73) #16
  %76 = load i32, i32* %71, align 4
  %77 = icmp eq i32 %76, 0
  %78 = getelementptr inbounds %"struct.blink::(anonymous namespace)::RequestResponse", %"struct.blink::(anonymous namespace)::RequestResponse"* %1, i64 0, i32 8, i32 0, i32 0, i32 0
  %79 = load %"struct.WTF::KeyValuePair.2283"*, %"struct.WTF::KeyValuePair.2283"** %78, align 8
  %80 = getelementptr inbounds %"struct.blink::(anonymous namespace)::RequestResponse", %"struct.blink::(anonymous namespace)::RequestResponse"* %1, i64 0, i32 8, i32 0, i32 0, i32 1
  %81 = load i32, i32* %80, align 8
  %82 = zext i32 %81 to i64
  %83 = getelementptr inbounds %"struct.WTF::KeyValuePair.2283", %"struct.WTF::KeyValuePair.2283"* %79, i64 %82
  br i1 %77, label %111, label %84

84:                                               ; preds = %75
  %85 = icmp eq i32 %81, 0
  br i1 %85, label %93, label %86

86:                                               ; preds = %84, %90
  %87 = phi %"struct.WTF::KeyValuePair.2283"* [ %91, %90 ], [ %79, %84 ]
  %88 = bitcast %"struct.WTF::KeyValuePair.2283"* %87 to i64*
  %89 = load i64, i64* %88, align 8
  switch i64 %89, label %93 [
    i64 -1, label %90
    i64 0, label %90
  ]

90:                                               ; preds = %86, %86
  %91 = getelementptr inbounds %"struct.WTF::KeyValuePair.2283", %"struct.WTF::KeyValuePair.2283"* %87, i64 1
  %92 = icmp eq %"struct.WTF::KeyValuePair.2283"* %91, %83
  br i1 %92, label %111, label %86

93:                                               ; preds = %86, %84
  %94 = phi %"struct.WTF::KeyValuePair.2283"* [ %79, %84 ], [ %87, %86 ]
  %95 = icmp eq %"struct.WTF::KeyValuePair.2283"* %94, %83
  br i1 %95, label %111, label %96

96:                                               ; preds = %93, %109
  %97 = phi %"struct.WTF::KeyValuePair.2283"* [ %103, %109 ], [ %94, %93 ]
  %98 = getelementptr inbounds %"struct.WTF::KeyValuePair.2283", %"struct.WTF::KeyValuePair.2283"* %97, i64 0, i32 0
  %99 = tail call { %"struct.WTF::KeyValuePair.2283"*, i8 } @_ZN3WTF9HashTableINS_12AtomicStringENS_12KeyValuePairIS1_S1_EENS_24KeyValuePairKeyExtractorENS_15CaseFoldingHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EES8_EES8_NS_18PartitionAllocatorEE6insertINS_22IdentityHashTranslatorIS5_S9_SA_EERKS1_RKS3_EENS_18HashTableAddResultISB_S3_EEOT0_OT1_(%"class.WTF::HashTable.2280"* %70, %"class.WTF::AtomicString"* dereferenceable(8) %98, %"struct.WTF::KeyValuePair.2283"* dereferenceable(16) %97) #16
  %100 = getelementptr inbounds %"struct.WTF::KeyValuePair.2283", %"struct.WTF::KeyValuePair.2283"* %97, i64 1
  %101 = icmp eq %"struct.WTF::KeyValuePair.2283"* %100, %83
  br i1 %101, label %111, label %102

102:                                              ; preds = %96, %106
  %103 = phi %"struct.WTF::KeyValuePair.2283"* [ %107, %106 ], [ %100, %96 ]
  %104 = bitcast %"struct.WTF::KeyValuePair.2283"* %103 to i64*
  %105 = load i64, i64* %104, align 8
  switch i64 %105, label %109 [
    i64 -1, label %106
    i64 0, label %106
  ]

106:                                              ; preds = %102, %102
  %107 = getelementptr inbounds %"struct.WTF::KeyValuePair.2283", %"struct.WTF::KeyValuePair.2283"* %103, i64 1
  %108 = icmp eq %"struct.WTF::KeyValuePair.2283"* %107, %83
  br i1 %108, label %111, label %102

109:                                              ; preds = %102
  %110 = icmp eq %"struct.WTF::KeyValuePair.2283"* %103, %83
  br i1 %110, label %111, label %96

111:                                              ; preds = %90, %96, %109, %106, %55, %75, %93
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF9HashTableINS_12AtomicStringENS_12KeyValuePairIS1_S1_EENS_24KeyValuePairKeyExtractorENS_15CaseFoldingHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EES8_EES8_NS_18PartitionAllocatorEE22ReserveCapacityForSizeEj(%"class.WTF::HashTable.2280"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckError", align 8
  %4 = icmp eq i32 %1, 0
  br i1 %4, label %16, label %5

5:                                                ; preds = %2, %5
  %6 = phi i32 [ %9, %5 ], [ %1, %2 ]
  %7 = phi i32 [ %8, %5 ], [ %1, %2 ]
  %8 = or i32 %7, %6
  %9 = lshr i32 %6, 1
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %11, label %5

11:                                               ; preds = %5
  %12 = shl i32 %8, 1
  %13 = add i32 %12, 2
  %14 = icmp ugt i32 %13, 8
  %15 = select i1 %14, i32 %13, i32 8
  br label %16

16:                                               ; preds = %11, %2
  %17 = phi i32 [ 8, %2 ], [ %15, %11 ]
  %18 = getelementptr inbounds %"class.WTF::HashTable.2280", %"class.WTF::HashTable.2280"* %0, i64 0, i32 1
  %19 = load i32, i32* %18, align 8
  %20 = icmp ugt i32 %17, %19
  br i1 %20, label %21, label %32

21:                                               ; preds = %16
  %22 = icmp slt i32 %17, 0
  br i1 %22, label %23, label %26

23:                                               ; preds = %21
  %24 = bitcast %"class.logging::CheckError"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %24) #16
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %3, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.14, i64 0, i64 0), i32 1094, i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.37, i64 0, i64 0)) #16
  %25 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %3) #16
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %3) #16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %24) #16
  br label %26

26:                                               ; preds = %21, %23
  %27 = zext i32 %17 to i64
  %28 = shl nuw nsw i64 %27, 4
  %29 = call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %28, i8* getelementptr inbounds ([103 x i8], [103 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_12KeyValuePairINS_12AtomicStringES2_EEEEPKcv, i64 0, i64 0)) #16
  call void @llvm.memset.p0i8.i64(i8* align 1 %29, i8 0, i64 %28, i1 false) #16
  %30 = bitcast i8* %29 to %"struct.WTF::KeyValuePair.2283"*
  %31 = call %"struct.WTF::KeyValuePair.2283"* @_ZN3WTF9HashTableINS_12AtomicStringENS_12KeyValuePairIS1_S1_EENS_24KeyValuePairKeyExtractorENS_15CaseFoldingHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EES8_EES8_NS_18PartitionAllocatorEE8RehashToEPS3_jSC_(%"class.WTF::HashTable.2280"* %0, %"struct.WTF::KeyValuePair.2283"* %30, i32 %17, %"struct.WTF::KeyValuePair.2283"* null) #16
  br label %32

32:                                               ; preds = %26, %16
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.WTF::KeyValuePair.2283"*, i8 } @_ZN3WTF9HashTableINS_12AtomicStringENS_12KeyValuePairIS1_S1_EENS_24KeyValuePairKeyExtractorENS_15CaseFoldingHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EES8_EES8_NS_18PartitionAllocatorEE6insertINS_22IdentityHashTranslatorIS5_S9_SA_EERKS1_RKS3_EENS_18HashTableAddResultISB_S3_EEOT0_OT1_(%"class.WTF::HashTable.2280"*, %"class.WTF::AtomicString"* dereferenceable(8), %"struct.WTF::KeyValuePair.2283"* dereferenceable(16)) local_unnamed_addr #0 comdat align 2 {
  %4 = alloca %"class.WTF::StringView", align 8
  %5 = alloca %"class.WTF::StringView", align 8
  %6 = getelementptr inbounds %"class.WTF::HashTable.2280", %"class.WTF::HashTable.2280"* %0, i64 0, i32 0
  %7 = load %"struct.WTF::KeyValuePair.2283"*, %"struct.WTF::KeyValuePair.2283"** %6, align 8
  %8 = icmp eq %"struct.WTF::KeyValuePair.2283"* %7, null
  br i1 %8, label %9, label %12

9:                                                ; preds = %3
  %10 = tail call %"struct.WTF::KeyValuePair.2283"* @_ZN3WTF9HashTableINS_12AtomicStringENS_12KeyValuePairIS1_S1_EENS_24KeyValuePairKeyExtractorENS_15CaseFoldingHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EES8_EES8_NS_18PartitionAllocatorEE6ExpandEPS3_(%"class.WTF::HashTable.2280"* %0, %"struct.WTF::KeyValuePair.2283"* null)
  %11 = load %"struct.WTF::KeyValuePair.2283"*, %"struct.WTF::KeyValuePair.2283"** %6, align 8
  br label %12

12:                                               ; preds = %3, %9
  %13 = phi %"struct.WTF::KeyValuePair.2283"* [ %7, %3 ], [ %11, %9 ]
  %14 = getelementptr inbounds %"class.WTF::HashTable.2280", %"class.WTF::HashTable.2280"* %0, i64 0, i32 1
  %15 = load i32, i32* %14, align 8
  %16 = add i32 %15, -1
  %17 = zext i32 %16 to i64
  %18 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %1, i64 0, i32 0, i32 0, i32 0
  %19 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %18, align 8
  %20 = tail call i32 @_ZN3WTF15CaseFoldingHash7GetHashEPNS_10StringImplE(%"class.WTF::StringImpl"* %19) #16
  %21 = and i32 %20, %16
  %22 = zext i32 %21 to i64
  %23 = getelementptr inbounds %"struct.WTF::KeyValuePair.2283", %"struct.WTF::KeyValuePair.2283"* %13, i64 %22
  %24 = getelementptr inbounds %"struct.WTF::KeyValuePair.2283", %"struct.WTF::KeyValuePair.2283"* %23, i64 0, i32 0, i32 0, i32 0, i32 0
  %25 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %24, align 8
  %26 = icmp eq %"class.WTF::StringImpl"* %25, null
  br i1 %26, label %91, label %27

27:                                               ; preds = %12
  %28 = bitcast %"class.WTF::StringView"* %4 to i8*
  %29 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %4, i64 0, i32 1
  %30 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %4, i64 0, i32 2
  %31 = bitcast %"class.WTF::StringView"* %5 to i8*
  %32 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %5, i64 0, i32 0
  %33 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %5, i64 0, i32 1
  %34 = bitcast i8** %33 to %"class.WTF::StringImpl"**
  %35 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %5, i64 0, i32 2
  %36 = xor i32 %20, -1
  %37 = lshr i32 %20, 23
  %38 = add i32 %37, %36
  %39 = shl i32 %38, 12
  %40 = xor i32 %39, %38
  %41 = lshr i32 %40, 7
  %42 = xor i32 %41, %40
  %43 = shl i32 %42, 2
  %44 = xor i32 %43, %42
  %45 = lshr i32 %44, 20
  %46 = xor i32 %45, %44
  %47 = or i32 %46, 1
  %48 = zext i32 %47 to i64
  %49 = bitcast %"class.WTF::StringView"* %4 to i8**
  br label %50

50:                                               ; preds = %27, %71
  %51 = phi %"struct.WTF::KeyValuePair.2283"* [ %23, %27 ], [ %77, %71 ]
  %52 = phi %"struct.WTF::KeyValuePair.2283"* [ null, %27 ], [ %72, %71 ]
  %53 = phi i64 [ %22, %27 ], [ %76, %71 ]
  %54 = phi i64 [ 0, %27 ], [ %74, %71 ]
  %55 = bitcast %"struct.WTF::KeyValuePair.2283"* %51 to i8**
  %56 = load i8*, i8** %55, align 8
  %57 = icmp eq i8* %56, inttoptr (i64 -1 to i8*)
  br i1 %57, label %71, label %58

58:                                               ; preds = %50
  %59 = bitcast i8* %56 to %"class.WTF::StringImpl"*
  %60 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %18, align 8
  %61 = icmp eq %"class.WTF::StringImpl"* %60, %59
  br i1 %61, label %105, label %62

62:                                               ; preds = %58
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %28) #16
  store i8* %56, i8** %49, align 8
  %63 = getelementptr inbounds i8, i8* %56, i64 12
  store i8* %63, i8** %29, align 8
  %64 = getelementptr inbounds i8, i8* %56, i64 4
  %65 = bitcast i8* %64 to i32*
  %66 = load i32, i32* %65, align 4
  store i32 %66, i32* %30, align 8
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %31) #16
  store %"class.WTF::StringImpl"* %60, %"class.WTF::StringImpl"** %32, align 8
  %67 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %60, i64 1
  store %"class.WTF::StringImpl"* %67, %"class.WTF::StringImpl"** %34, align 8
  %68 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %60, i64 0, i32 1
  %69 = load i32, i32* %68, align 4
  store i32 %69, i32* %35, align 8
  %70 = call zeroext i1 @_ZN3WTF37DeprecatedEqualIgnoringCaseAndNullityERKNS_10StringViewES2_(%"class.WTF::StringView"* nonnull dereferenceable(24) %4, %"class.WTF::StringView"* nonnull dereferenceable(24) %5) #16
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %31) #16
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %28) #16
  br i1 %70, label %105, label %71

71:                                               ; preds = %50, %62
  %72 = phi %"struct.WTF::KeyValuePair.2283"* [ %52, %62 ], [ %51, %50 ]
  %73 = icmp eq i64 %54, 0
  %74 = select i1 %73, i64 %48, i64 %54
  %75 = add i64 %74, %53
  %76 = and i64 %75, %17
  %77 = getelementptr inbounds %"struct.WTF::KeyValuePair.2283", %"struct.WTF::KeyValuePair.2283"* %13, i64 %76
  %78 = getelementptr inbounds %"struct.WTF::KeyValuePair.2283", %"struct.WTF::KeyValuePair.2283"* %77, i64 0, i32 0, i32 0, i32 0, i32 0
  %79 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %78, align 8
  %80 = icmp eq %"class.WTF::StringImpl"* %79, null
  br i1 %80, label %81, label %50

81:                                               ; preds = %71
  %82 = icmp eq %"struct.WTF::KeyValuePair.2283"* %72, null
  br i1 %82, label %91, label %83

83:                                               ; preds = %81
  %84 = bitcast %"struct.WTF::KeyValuePair.2283"* %72 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %84, i8 0, i64 16, i1 false) #16
  %85 = getelementptr inbounds %"class.WTF::HashTable.2280", %"class.WTF::HashTable.2280"* %0, i64 0, i32 3
  %86 = load i32, i32* %85, align 8
  %87 = add i32 %86, 2147483647
  %88 = and i32 %87, 2147483647
  %89 = and i32 %86, -2147483648
  %90 = or i32 %88, %89
  store i32 %90, i32* %85, align 8
  br label %91

91:                                               ; preds = %12, %81, %83
  %92 = phi %"struct.WTF::KeyValuePair.2283"* [ %72, %83 ], [ %77, %81 ], [ %23, %12 ]
  %93 = call dereferenceable(16) %"struct.WTF::KeyValuePair.2283"* @_ZN3WTF12KeyValuePairINS_12AtomicStringES1_EaSERKS2_(%"struct.WTF::KeyValuePair.2283"* %92, %"struct.WTF::KeyValuePair.2283"* dereferenceable(16) %2) #16
  %94 = getelementptr inbounds %"class.WTF::HashTable.2280", %"class.WTF::HashTable.2280"* %0, i64 0, i32 2
  %95 = load i32, i32* %94, align 4
  %96 = add i32 %95, 1
  store i32 %96, i32* %94, align 4
  %97 = getelementptr inbounds %"class.WTF::HashTable.2280", %"class.WTF::HashTable.2280"* %0, i64 0, i32 3
  %98 = load i32, i32* %97, align 8
  %99 = add i32 %98, %96
  %100 = shl i32 %99, 1
  %101 = load i32, i32* %14, align 8
  %102 = icmp ult i32 %100, %101
  br i1 %102, label %105, label %103

103:                                              ; preds = %91
  %104 = call %"struct.WTF::KeyValuePair.2283"* @_ZN3WTF9HashTableINS_12AtomicStringENS_12KeyValuePairIS1_S1_EENS_24KeyValuePairKeyExtractorENS_15CaseFoldingHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EES8_EES8_NS_18PartitionAllocatorEE6ExpandEPS3_(%"class.WTF::HashTable.2280"* %0, %"struct.WTF::KeyValuePair.2283"* %92)
  br label %105

105:                                              ; preds = %58, %62, %91, %103
  %106 = phi i8 [ 1, %91 ], [ 1, %103 ], [ 0, %62 ], [ 0, %58 ]
  %107 = phi %"struct.WTF::KeyValuePair.2283"* [ %92, %91 ], [ %104, %103 ], [ %51, %62 ], [ %51, %58 ]
  %108 = insertvalue { %"struct.WTF::KeyValuePair.2283"*, i8 } undef, %"struct.WTF::KeyValuePair.2283"* %107, 0
  %109 = insertvalue { %"struct.WTF::KeyValuePair.2283"*, i8 } %108, i8 %106, 1
  ret { %"struct.WTF::KeyValuePair.2283"*, i8 } %109
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(16) %"struct.WTF::KeyValuePair.2283"* @_ZN3WTF12KeyValuePairINS_12AtomicStringES1_EaSERKS2_(%"struct.WTF::KeyValuePair.2283"*, %"struct.WTF::KeyValuePair.2283"* dereferenceable(16)) local_unnamed_addr #11 comdat align 2 {
  %3 = getelementptr inbounds %"struct.WTF::KeyValuePair.2283", %"struct.WTF::KeyValuePair.2283"* %1, i64 0, i32 0, i32 0, i32 0, i32 0
  %4 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %3, align 8
  %5 = icmp eq %"class.WTF::StringImpl"* %4, null
  br i1 %5, label %23, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %4, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %8 = load atomic i32, i32* %7 monotonic, align 4
  %9 = and i32 %8, 2
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %11, label %23

11:                                               ; preds = %6
  %12 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %4, i64 0, i32 0
  %13 = load i32, i32* %12, align 4
  %14 = zext i32 %13 to i33
  %15 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %14, i33 1) #16
  %16 = extractvalue { i33, i1 } %15, 1
  %17 = extractvalue { i33, i1 } %15, 0
  %18 = icmp slt i33 %17, 0
  %19 = or i1 %16, %18
  br i1 %19, label %20, label %21, !prof !3

20:                                               ; preds = %11
  tail call void @llvm.trap() #16
  unreachable

21:                                               ; preds = %11
  %22 = trunc i33 %17 to i32
  store i32 %22, i32* %12, align 4
  br label %23

23:                                               ; preds = %21, %6, %2
  %24 = ptrtoint %"class.WTF::StringImpl"* %4 to i64
  %25 = bitcast %"struct.WTF::KeyValuePair.2283"* %0 to i64*
  %26 = getelementptr inbounds %"struct.WTF::KeyValuePair.2283", %"struct.WTF::KeyValuePair.2283"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %27 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %26, align 8
  store i64 %24, i64* %25, align 8
  %28 = icmp eq %"class.WTF::StringImpl"* %27, null
  br i1 %28, label %42, label %29

29:                                               ; preds = %23
  %30 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %27, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %31 = load atomic i32, i32* %30 monotonic, align 4
  %32 = and i32 %31, 2
  %33 = icmp eq i32 %32, 0
  %34 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %27, i64 0, i32 0
  %35 = load i32, i32* %34, align 4
  br i1 %33, label %36, label %38

36:                                               ; preds = %29
  %37 = add i32 %35, -1
  store i32 %37, i32* %34, align 4
  br label %38

38:                                               ; preds = %36, %29
  %39 = phi i32 [ %37, %36 ], [ %35, %29 ]
  %40 = icmp eq i32 %39, 0
  br i1 %40, label %41, label %42

41:                                               ; preds = %38
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %27) #16
  br label %42

42:                                               ; preds = %23, %38, %41
  %43 = getelementptr inbounds %"struct.WTF::KeyValuePair.2283", %"struct.WTF::KeyValuePair.2283"* %0, i64 0, i32 1
  %44 = getelementptr inbounds %"struct.WTF::KeyValuePair.2283", %"struct.WTF::KeyValuePair.2283"* %1, i64 0, i32 1, i32 0, i32 0, i32 0
  %45 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %44, align 8
  %46 = icmp eq %"class.WTF::StringImpl"* %45, null
  br i1 %46, label %64, label %47

47:                                               ; preds = %42
  %48 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %45, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %49 = load atomic i32, i32* %48 monotonic, align 4
  %50 = and i32 %49, 2
  %51 = icmp eq i32 %50, 0
  br i1 %51, label %52, label %64

52:                                               ; preds = %47
  %53 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %45, i64 0, i32 0
  %54 = load i32, i32* %53, align 4
  %55 = zext i32 %54 to i33
  %56 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %55, i33 1) #16
  %57 = extractvalue { i33, i1 } %56, 1
  %58 = extractvalue { i33, i1 } %56, 0
  %59 = icmp slt i33 %58, 0
  %60 = or i1 %57, %59
  br i1 %60, label %61, label %62, !prof !3

61:                                               ; preds = %52
  tail call void @llvm.trap() #16
  unreachable

62:                                               ; preds = %52
  %63 = trunc i33 %58 to i32
  store i32 %63, i32* %53, align 4
  br label %64

64:                                               ; preds = %62, %47, %42
  %65 = ptrtoint %"class.WTF::StringImpl"* %45 to i64
  %66 = bitcast %"class.WTF::AtomicString"* %43 to i64*
  %67 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %43, i64 0, i32 0, i32 0, i32 0
  %68 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %67, align 8
  store i64 %65, i64* %66, align 8
  %69 = icmp eq %"class.WTF::StringImpl"* %68, null
  br i1 %69, label %83, label %70

70:                                               ; preds = %64
  %71 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %68, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %72 = load atomic i32, i32* %71 monotonic, align 4
  %73 = and i32 %72, 2
  %74 = icmp eq i32 %73, 0
  %75 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %68, i64 0, i32 0
  %76 = load i32, i32* %75, align 4
  br i1 %74, label %77, label %79

77:                                               ; preds = %70
  %78 = add i32 %76, -1
  store i32 %78, i32* %75, align 4
  br label %79

79:                                               ; preds = %77, %70
  %80 = phi i32 [ %78, %77 ], [ %76, %70 ]
  %81 = icmp eq i32 %80, 0
  br i1 %81, label %82, label %83

82:                                               ; preds = %79
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %68) #16
  br label %83

83:                                               ; preds = %64, %79, %82
  ret %"struct.WTF::KeyValuePair.2283"* %0
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(24) %"class.WTF::HashTable.2280"* @_ZN3WTF9HashTableINS_12AtomicStringENS_12KeyValuePairIS1_S1_EENS_24KeyValuePairKeyExtractorENS_15CaseFoldingHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EES8_EES8_NS_18PartitionAllocatorEEaSERKSB_(%"class.WTF::HashTable.2280"*, %"class.WTF::HashTable.2280"* dereferenceable(24)) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.WTF::HashTable.2280", align 8
  %4 = bitcast %"class.WTF::HashTable.2280"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %4) #16
  %5 = getelementptr inbounds %"class.WTF::HashTable.2280", %"class.WTF::HashTable.2280"* %3, i64 0, i32 0
  %6 = getelementptr inbounds %"class.WTF::HashTable.2280", %"class.WTF::HashTable.2280"* %3, i64 0, i32 1
  %7 = getelementptr inbounds %"class.WTF::HashTable.2280", %"class.WTF::HashTable.2280"* %3, i64 0, i32 2
  %8 = getelementptr inbounds %"class.WTF::HashTable.2280", %"class.WTF::HashTable.2280"* %3, i64 0, i32 3
  %9 = getelementptr inbounds %"class.WTF::HashTable.2280", %"class.WTF::HashTable.2280"* %1, i64 0, i32 2
  %10 = bitcast %"class.WTF::HashTable.2280"* %3 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %10, i8 -86, i64 24, i1 false)
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %4, i8 0, i64 20, i1 false) #16
  %11 = load i32, i32* %9, align 4
  %12 = icmp eq i32 %11, 0
  br i1 %12, label %49, label %13

13:                                               ; preds = %2
  call void @_ZN3WTF9HashTableINS_12AtomicStringENS_12KeyValuePairIS1_S1_EENS_24KeyValuePairKeyExtractorENS_15CaseFoldingHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EES8_EES8_NS_18PartitionAllocatorEE22ReserveCapacityForSizeEj(%"class.WTF::HashTable.2280"* nonnull %3, i32 %11) #16
  %14 = load i32, i32* %9, align 4
  %15 = icmp eq i32 %14, 0
  %16 = getelementptr inbounds %"class.WTF::HashTable.2280", %"class.WTF::HashTable.2280"* %1, i64 0, i32 0
  %17 = load %"struct.WTF::KeyValuePair.2283"*, %"struct.WTF::KeyValuePair.2283"** %16, align 8
  %18 = getelementptr inbounds %"class.WTF::HashTable.2280", %"class.WTF::HashTable.2280"* %1, i64 0, i32 1
  %19 = load i32, i32* %18, align 8
  %20 = zext i32 %19 to i64
  %21 = getelementptr inbounds %"struct.WTF::KeyValuePair.2283", %"struct.WTF::KeyValuePair.2283"* %17, i64 %20
  br i1 %15, label %49, label %22

22:                                               ; preds = %13
  %23 = icmp eq i32 %19, 0
  br i1 %23, label %31, label %24

24:                                               ; preds = %22, %28
  %25 = phi %"struct.WTF::KeyValuePair.2283"* [ %29, %28 ], [ %17, %22 ]
  %26 = bitcast %"struct.WTF::KeyValuePair.2283"* %25 to i64*
  %27 = load i64, i64* %26, align 8
  switch i64 %27, label %31 [
    i64 -1, label %28
    i64 0, label %28
  ]

28:                                               ; preds = %24, %24
  %29 = getelementptr inbounds %"struct.WTF::KeyValuePair.2283", %"struct.WTF::KeyValuePair.2283"* %25, i64 1
  %30 = icmp eq %"struct.WTF::KeyValuePair.2283"* %29, %21
  br i1 %30, label %49, label %24

31:                                               ; preds = %24, %22
  %32 = phi %"struct.WTF::KeyValuePair.2283"* [ %17, %22 ], [ %25, %24 ]
  %33 = icmp eq %"struct.WTF::KeyValuePair.2283"* %32, %21
  br i1 %33, label %49, label %34

34:                                               ; preds = %31, %47
  %35 = phi %"struct.WTF::KeyValuePair.2283"* [ %41, %47 ], [ %32, %31 ]
  %36 = getelementptr inbounds %"struct.WTF::KeyValuePair.2283", %"struct.WTF::KeyValuePair.2283"* %35, i64 0, i32 0
  %37 = call { %"struct.WTF::KeyValuePair.2283"*, i8 } @_ZN3WTF9HashTableINS_12AtomicStringENS_12KeyValuePairIS1_S1_EENS_24KeyValuePairKeyExtractorENS_15CaseFoldingHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EES8_EES8_NS_18PartitionAllocatorEE6insertINS_22IdentityHashTranslatorIS5_S9_SA_EERKS1_RKS3_EENS_18HashTableAddResultISB_S3_EEOT0_OT1_(%"class.WTF::HashTable.2280"* nonnull %3, %"class.WTF::AtomicString"* dereferenceable(8) %36, %"struct.WTF::KeyValuePair.2283"* dereferenceable(16) %35) #16
  %38 = getelementptr inbounds %"struct.WTF::KeyValuePair.2283", %"struct.WTF::KeyValuePair.2283"* %35, i64 1
  %39 = icmp eq %"struct.WTF::KeyValuePair.2283"* %38, %21
  br i1 %39, label %49, label %40

40:                                               ; preds = %34, %44
  %41 = phi %"struct.WTF::KeyValuePair.2283"* [ %45, %44 ], [ %38, %34 ]
  %42 = bitcast %"struct.WTF::KeyValuePair.2283"* %41 to i64*
  %43 = load i64, i64* %42, align 8
  switch i64 %43, label %47 [
    i64 -1, label %44
    i64 0, label %44
  ]

44:                                               ; preds = %40, %40
  %45 = getelementptr inbounds %"struct.WTF::KeyValuePair.2283", %"struct.WTF::KeyValuePair.2283"* %41, i64 1
  %46 = icmp eq %"struct.WTF::KeyValuePair.2283"* %45, %21
  br i1 %46, label %49, label %40

47:                                               ; preds = %40
  %48 = icmp eq %"struct.WTF::KeyValuePair.2283"* %41, %21
  br i1 %48, label %49, label %34

49:                                               ; preds = %28, %34, %47, %44, %2, %13, %31
  %50 = bitcast %"class.WTF::HashTable.2280"* %3 to i64*
  %51 = load i64, i64* %50, align 8
  %52 = bitcast %"class.WTF::HashTable.2280"* %0 to i64*
  %53 = load i64, i64* %52, align 8
  store atomic i64 %53, i64* %50 monotonic, align 8
  store atomic i64 %51, i64* %52 monotonic, align 8
  %54 = getelementptr inbounds %"class.WTF::HashTable.2280", %"class.WTF::HashTable.2280"* %0, i64 0, i32 1
  %55 = load i32, i32* %54, align 4
  %56 = load i32, i32* %6, align 8
  store i32 %56, i32* %54, align 4
  store i32 %55, i32* %6, align 8
  %57 = getelementptr inbounds %"class.WTF::HashTable.2280", %"class.WTF::HashTable.2280"* %0, i64 0, i32 2
  %58 = load i32, i32* %57, align 4
  %59 = load i32, i32* %7, align 4
  store i32 %59, i32* %57, align 4
  store i32 %58, i32* %7, align 4
  %60 = getelementptr inbounds %"class.WTF::HashTable.2280", %"class.WTF::HashTable.2280"* %0, i64 0, i32 3
  %61 = load i32, i32* %60, align 8
  %62 = and i32 %61, 2147483647
  %63 = load i32, i32* %8, align 8
  %64 = and i32 %63, 2147483647
  %65 = and i32 %61, -2147483648
  %66 = or i32 %64, %65
  store i32 %66, i32* %60, align 8
  %67 = and i32 %63, -2147483648
  %68 = or i32 %67, %62
  store i32 %68, i32* %8, align 8
  %69 = icmp eq i64 %53, 0
  br i1 %69, label %72, label %70, !prof !2

70:                                               ; preds = %49
  %71 = inttoptr i64 %53 to %"struct.WTF::KeyValuePair.2283"*
  call void @_ZN3WTF9HashTableINS_12AtomicStringENS_12KeyValuePairIS1_S1_EENS_24KeyValuePairKeyExtractorENS_15CaseFoldingHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EES8_EES8_NS_18PartitionAllocatorEE29DeleteAllBucketsAndDeallocateEPS3_j(%"struct.WTF::KeyValuePair.2283"* nonnull %71, i32 %55) #16
  store %"struct.WTF::KeyValuePair.2283"* null, %"struct.WTF::KeyValuePair.2283"** %5, align 8
  br label %72

72:                                               ; preds = %49, %70
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %4) #16
  ret %"class.WTF::HashTable.2280"* %0
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorINS_10unique_ptrIN5blink8protocol12CacheStorage6HeaderENS_14default_deleteIS5_EEEENS_9allocatorIS8_EEE24__emplace_back_slow_pathIJS8_EEEvDpOT_(%"class.std::__1::vector.1960"*, %"class.std::__1::unique_ptr.1962"* dereferenceable(8)) local_unnamed_addr #11 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector.1960", %"class.std::__1::vector.1960"* %0, i64 0, i32 0, i32 1
  %4 = bitcast %"class.std::__1::unique_ptr.1962"** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.std::__1::vector.1960"* %0 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = sub i64 %5, %7
  %9 = ashr exact i64 %8, 3
  %10 = add nsw i64 %9, 1
  %11 = icmp ugt i64 %10, 2305843009213693951
  br i1 %11, label %12, label %14

12:                                               ; preds = %2
  %13 = bitcast %"class.std::__1::vector.1960"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %13) #19
  unreachable

14:                                               ; preds = %2
  %15 = getelementptr inbounds %"class.std::__1::vector.1960", %"class.std::__1::vector.1960"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %16 = bitcast %"class.std::__1::unique_ptr.1962"** %15 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = sub i64 %17, %7
  %19 = ashr exact i64 %18, 3
  %20 = icmp ult i64 %19, 1152921504606846975
  br i1 %20, label %21, label %29

21:                                               ; preds = %14
  %22 = ashr exact i64 %18, 2
  %23 = icmp ult i64 %22, %10
  %24 = select i1 %23, i64 %10, i64 %22
  %25 = icmp eq i64 %24, 0
  br i1 %25, label %34, label %26

26:                                               ; preds = %21
  %27 = icmp ugt i64 %24, 2305843009213693951
  br i1 %27, label %28, label %29

28:                                               ; preds = %26
  tail call void @abort() #19
  unreachable

29:                                               ; preds = %14, %26
  %30 = phi i64 [ %24, %26 ], [ 2305843009213693951, %14 ]
  %31 = shl i64 %30, 3
  %32 = tail call i8* @_Znwm(i64 %31) #18
  %33 = bitcast i8* %32 to %"class.std::__1::unique_ptr.1962"*
  br label %34

34:                                               ; preds = %21, %29
  %35 = phi i64 [ %30, %29 ], [ 0, %21 ]
  %36 = phi %"class.std::__1::unique_ptr.1962"* [ %33, %29 ], [ null, %21 ]
  %37 = getelementptr inbounds %"class.std::__1::unique_ptr.1962", %"class.std::__1::unique_ptr.1962"* %36, i64 %9
  %38 = getelementptr inbounds %"class.std::__1::unique_ptr.1962", %"class.std::__1::unique_ptr.1962"* %36, i64 %35
  %39 = ptrtoint %"class.std::__1::unique_ptr.1962"* %38 to i64
  %40 = getelementptr inbounds %"class.std::__1::unique_ptr.1962", %"class.std::__1::unique_ptr.1962"* %1, i64 0, i32 0, i32 0, i32 0
  %41 = bitcast %"class.std::__1::unique_ptr.1962"* %1 to i64*
  %42 = load i64, i64* %41, align 8
  store %"class.blink::protocol::CacheStorage::Header"* null, %"class.blink::protocol::CacheStorage::Header"** %40, align 8
  %43 = bitcast %"class.std::__1::unique_ptr.1962"* %37 to i64*
  store i64 %42, i64* %43, align 8
  %44 = getelementptr inbounds %"class.std::__1::unique_ptr.1962", %"class.std::__1::unique_ptr.1962"* %37, i64 1
  %45 = ptrtoint %"class.std::__1::unique_ptr.1962"* %44 to i64
  %46 = getelementptr inbounds %"class.std::__1::vector.1960", %"class.std::__1::vector.1960"* %0, i64 0, i32 0, i32 0
  %47 = load %"class.std::__1::unique_ptr.1962"*, %"class.std::__1::unique_ptr.1962"** %46, align 8
  %48 = ptrtoint %"class.std::__1::unique_ptr.1962"* %47 to i64
  %49 = load %"class.std::__1::unique_ptr.1962"*, %"class.std::__1::unique_ptr.1962"** %3, align 8
  %50 = icmp eq %"class.std::__1::unique_ptr.1962"* %49, %47
  br i1 %50, label %132, label %51

51:                                               ; preds = %34
  %52 = getelementptr %"class.std::__1::unique_ptr.1962", %"class.std::__1::unique_ptr.1962"* %49, i64 -1, i32 0, i32 0, i32 0
  %53 = ptrtoint %"class.blink::protocol::CacheStorage::Header"** %52 to i64
  %54 = sub i64 %53, %48
  %55 = lshr i64 %54, 3
  %56 = add nuw nsw i64 %55, 1
  %57 = and i64 %56, 7
  %58 = icmp eq i64 %57, 0
  br i1 %58, label %71, label %59

59:                                               ; preds = %51, %59
  %60 = phi %"class.std::__1::unique_ptr.1962"* [ %63, %59 ], [ %37, %51 ]
  %61 = phi %"class.std::__1::unique_ptr.1962"* [ %64, %59 ], [ %49, %51 ]
  %62 = phi i64 [ %69, %59 ], [ %57, %51 ]
  %63 = getelementptr inbounds %"class.std::__1::unique_ptr.1962", %"class.std::__1::unique_ptr.1962"* %60, i64 -1
  %64 = getelementptr inbounds %"class.std::__1::unique_ptr.1962", %"class.std::__1::unique_ptr.1962"* %61, i64 -1
  %65 = getelementptr inbounds %"class.std::__1::unique_ptr.1962", %"class.std::__1::unique_ptr.1962"* %64, i64 0, i32 0, i32 0, i32 0
  %66 = bitcast %"class.std::__1::unique_ptr.1962"* %64 to i64*
  %67 = load i64, i64* %66, align 8
  store %"class.blink::protocol::CacheStorage::Header"* null, %"class.blink::protocol::CacheStorage::Header"** %65, align 8
  %68 = bitcast %"class.std::__1::unique_ptr.1962"* %63 to i64*
  store i64 %67, i64* %68, align 8
  %69 = add i64 %62, -1
  %70 = icmp eq i64 %69, 0
  br i1 %70, label %71, label %59, !llvm.loop !112

71:                                               ; preds = %59, %51
  %72 = phi %"class.std::__1::unique_ptr.1962"* [ undef, %51 ], [ %63, %59 ]
  %73 = phi %"class.std::__1::unique_ptr.1962"* [ %37, %51 ], [ %63, %59 ]
  %74 = phi %"class.std::__1::unique_ptr.1962"* [ %49, %51 ], [ %64, %59 ]
  %75 = icmp ult i64 %54, 56
  br i1 %75, label %128, label %76

76:                                               ; preds = %71, %76
  %77 = phi %"class.std::__1::unique_ptr.1962"* [ %121, %76 ], [ %73, %71 ]
  %78 = phi %"class.std::__1::unique_ptr.1962"* [ %122, %76 ], [ %74, %71 ]
  %79 = getelementptr inbounds %"class.std::__1::unique_ptr.1962", %"class.std::__1::unique_ptr.1962"* %77, i64 -1
  %80 = getelementptr inbounds %"class.std::__1::unique_ptr.1962", %"class.std::__1::unique_ptr.1962"* %78, i64 -1
  %81 = getelementptr inbounds %"class.std::__1::unique_ptr.1962", %"class.std::__1::unique_ptr.1962"* %80, i64 0, i32 0, i32 0, i32 0
  %82 = bitcast %"class.std::__1::unique_ptr.1962"* %80 to i64*
  %83 = load i64, i64* %82, align 8
  store %"class.blink::protocol::CacheStorage::Header"* null, %"class.blink::protocol::CacheStorage::Header"** %81, align 8
  %84 = bitcast %"class.std::__1::unique_ptr.1962"* %79 to i64*
  store i64 %83, i64* %84, align 8
  %85 = getelementptr inbounds %"class.std::__1::unique_ptr.1962", %"class.std::__1::unique_ptr.1962"* %77, i64 -2
  %86 = getelementptr inbounds %"class.std::__1::unique_ptr.1962", %"class.std::__1::unique_ptr.1962"* %78, i64 -2
  %87 = getelementptr inbounds %"class.std::__1::unique_ptr.1962", %"class.std::__1::unique_ptr.1962"* %86, i64 0, i32 0, i32 0, i32 0
  %88 = bitcast %"class.std::__1::unique_ptr.1962"* %86 to i64*
  %89 = load i64, i64* %88, align 8
  store %"class.blink::protocol::CacheStorage::Header"* null, %"class.blink::protocol::CacheStorage::Header"** %87, align 8
  %90 = bitcast %"class.std::__1::unique_ptr.1962"* %85 to i64*
  store i64 %89, i64* %90, align 8
  %91 = getelementptr inbounds %"class.std::__1::unique_ptr.1962", %"class.std::__1::unique_ptr.1962"* %77, i64 -3
  %92 = getelementptr inbounds %"class.std::__1::unique_ptr.1962", %"class.std::__1::unique_ptr.1962"* %78, i64 -3
  %93 = getelementptr inbounds %"class.std::__1::unique_ptr.1962", %"class.std::__1::unique_ptr.1962"* %92, i64 0, i32 0, i32 0, i32 0
  %94 = bitcast %"class.std::__1::unique_ptr.1962"* %92 to i64*
  %95 = load i64, i64* %94, align 8
  store %"class.blink::protocol::CacheStorage::Header"* null, %"class.blink::protocol::CacheStorage::Header"** %93, align 8
  %96 = bitcast %"class.std::__1::unique_ptr.1962"* %91 to i64*
  store i64 %95, i64* %96, align 8
  %97 = getelementptr inbounds %"class.std::__1::unique_ptr.1962", %"class.std::__1::unique_ptr.1962"* %77, i64 -4
  %98 = getelementptr inbounds %"class.std::__1::unique_ptr.1962", %"class.std::__1::unique_ptr.1962"* %78, i64 -4
  %99 = getelementptr inbounds %"class.std::__1::unique_ptr.1962", %"class.std::__1::unique_ptr.1962"* %98, i64 0, i32 0, i32 0, i32 0
  %100 = bitcast %"class.std::__1::unique_ptr.1962"* %98 to i64*
  %101 = load i64, i64* %100, align 8
  store %"class.blink::protocol::CacheStorage::Header"* null, %"class.blink::protocol::CacheStorage::Header"** %99, align 8
  %102 = bitcast %"class.std::__1::unique_ptr.1962"* %97 to i64*
  store i64 %101, i64* %102, align 8
  %103 = getelementptr inbounds %"class.std::__1::unique_ptr.1962", %"class.std::__1::unique_ptr.1962"* %77, i64 -5
  %104 = getelementptr inbounds %"class.std::__1::unique_ptr.1962", %"class.std::__1::unique_ptr.1962"* %78, i64 -5
  %105 = getelementptr inbounds %"class.std::__1::unique_ptr.1962", %"class.std::__1::unique_ptr.1962"* %104, i64 0, i32 0, i32 0, i32 0
  %106 = bitcast %"class.std::__1::unique_ptr.1962"* %104 to i64*
  %107 = load i64, i64* %106, align 8
  store %"class.blink::protocol::CacheStorage::Header"* null, %"class.blink::protocol::CacheStorage::Header"** %105, align 8
  %108 = bitcast %"class.std::__1::unique_ptr.1962"* %103 to i64*
  store i64 %107, i64* %108, align 8
  %109 = getelementptr inbounds %"class.std::__1::unique_ptr.1962", %"class.std::__1::unique_ptr.1962"* %77, i64 -6
  %110 = getelementptr inbounds %"class.std::__1::unique_ptr.1962", %"class.std::__1::unique_ptr.1962"* %78, i64 -6
  %111 = getelementptr inbounds %"class.std::__1::unique_ptr.1962", %"class.std::__1::unique_ptr.1962"* %110, i64 0, i32 0, i32 0, i32 0
  %112 = bitcast %"class.std::__1::unique_ptr.1962"* %110 to i64*
  %113 = load i64, i64* %112, align 8
  store %"class.blink::protocol::CacheStorage::Header"* null, %"class.blink::protocol::CacheStorage::Header"** %111, align 8
  %114 = bitcast %"class.std::__1::unique_ptr.1962"* %109 to i64*
  store i64 %113, i64* %114, align 8
  %115 = getelementptr inbounds %"class.std::__1::unique_ptr.1962", %"class.std::__1::unique_ptr.1962"* %77, i64 -7
  %116 = getelementptr inbounds %"class.std::__1::unique_ptr.1962", %"class.std::__1::unique_ptr.1962"* %78, i64 -7
  %117 = getelementptr inbounds %"class.std::__1::unique_ptr.1962", %"class.std::__1::unique_ptr.1962"* %116, i64 0, i32 0, i32 0, i32 0
  %118 = bitcast %"class.std::__1::unique_ptr.1962"* %116 to i64*
  %119 = load i64, i64* %118, align 8
  store %"class.blink::protocol::CacheStorage::Header"* null, %"class.blink::protocol::CacheStorage::Header"** %117, align 8
  %120 = bitcast %"class.std::__1::unique_ptr.1962"* %115 to i64*
  store i64 %119, i64* %120, align 8
  %121 = getelementptr inbounds %"class.std::__1::unique_ptr.1962", %"class.std::__1::unique_ptr.1962"* %77, i64 -8
  %122 = getelementptr inbounds %"class.std::__1::unique_ptr.1962", %"class.std::__1::unique_ptr.1962"* %78, i64 -8
  %123 = getelementptr inbounds %"class.std::__1::unique_ptr.1962", %"class.std::__1::unique_ptr.1962"* %122, i64 0, i32 0, i32 0, i32 0
  %124 = bitcast %"class.std::__1::unique_ptr.1962"* %122 to i64*
  %125 = load i64, i64* %124, align 8
  store %"class.blink::protocol::CacheStorage::Header"* null, %"class.blink::protocol::CacheStorage::Header"** %123, align 8
  %126 = bitcast %"class.std::__1::unique_ptr.1962"* %121 to i64*
  store i64 %125, i64* %126, align 8
  %127 = icmp eq %"class.std::__1::unique_ptr.1962"* %122, %47
  br i1 %127, label %128, label %76

128:                                              ; preds = %76, %71
  %129 = phi %"class.std::__1::unique_ptr.1962"* [ %72, %71 ], [ %121, %76 ]
  %130 = load i64, i64* %6, align 8
  %131 = load %"class.std::__1::unique_ptr.1962"*, %"class.std::__1::unique_ptr.1962"** %3, align 8
  br label %132

132:                                              ; preds = %34, %128
  %133 = phi %"class.std::__1::unique_ptr.1962"* [ %131, %128 ], [ %47, %34 ]
  %134 = phi %"class.std::__1::unique_ptr.1962"* [ %129, %128 ], [ %37, %34 ]
  %135 = phi i64 [ %130, %128 ], [ %48, %34 ]
  %136 = ptrtoint %"class.std::__1::unique_ptr.1962"* %134 to i64
  store i64 %136, i64* %6, align 8
  store i64 %45, i64* %4, align 8
  store i64 %39, i64* %16, align 8
  %137 = inttoptr i64 %135 to %"class.std::__1::unique_ptr.1962"*
  %138 = icmp eq %"class.std::__1::unique_ptr.1962"* %133, %137
  br i1 %138, label %152, label %139

139:                                              ; preds = %132, %150
  %140 = phi %"class.std::__1::unique_ptr.1962"* [ %141, %150 ], [ %133, %132 ]
  %141 = getelementptr inbounds %"class.std::__1::unique_ptr.1962", %"class.std::__1::unique_ptr.1962"* %140, i64 -1
  %142 = getelementptr inbounds %"class.std::__1::unique_ptr.1962", %"class.std::__1::unique_ptr.1962"* %141, i64 0, i32 0, i32 0, i32 0
  %143 = load %"class.blink::protocol::CacheStorage::Header"*, %"class.blink::protocol::CacheStorage::Header"** %142, align 8
  store %"class.blink::protocol::CacheStorage::Header"* null, %"class.blink::protocol::CacheStorage::Header"** %142, align 8
  %144 = icmp eq %"class.blink::protocol::CacheStorage::Header"* %143, null
  br i1 %144, label %150, label %145

145:                                              ; preds = %139
  %146 = bitcast %"class.blink::protocol::CacheStorage::Header"* %143 to void (%"class.blink::protocol::CacheStorage::Header"*)***
  %147 = load void (%"class.blink::protocol::CacheStorage::Header"*)**, void (%"class.blink::protocol::CacheStorage::Header"*)*** %146, align 8
  %148 = getelementptr inbounds void (%"class.blink::protocol::CacheStorage::Header"*)*, void (%"class.blink::protocol::CacheStorage::Header"*)** %147, i64 2
  %149 = load void (%"class.blink::protocol::CacheStorage::Header"*)*, void (%"class.blink::protocol::CacheStorage::Header"*)** %148, align 8
  tail call void %149(%"class.blink::protocol::CacheStorage::Header"* nonnull %143) #16
  br label %150

150:                                              ; preds = %145, %139
  %151 = icmp eq %"class.std::__1::unique_ptr.1962"* %141, %137
  br i1 %151, label %152, label %139

152:                                              ; preds = %150, %132
  %153 = icmp eq i64 %135, 0
  br i1 %153, label %156, label %154

154:                                              ; preds = %152
  %155 = inttoptr i64 %135 to i8*
  tail call void @_ZdlPv(i8* %155) #18
  br label %156

156:                                              ; preds = %152, %154
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorINS_10unique_ptrIN5blink8protocol12CacheStorage9DataEntryENS_14default_deleteIS5_EEEENS_9allocatorIS8_EEE24__emplace_back_slow_pathIJS8_EEEvDpOT_(%"class.std::__1::vector.2254"*, %"class.std::__1::unique_ptr.2256"* dereferenceable(8)) local_unnamed_addr #11 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector.2254", %"class.std::__1::vector.2254"* %0, i64 0, i32 0, i32 1
  %4 = bitcast %"class.std::__1::unique_ptr.2256"** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.std::__1::vector.2254"* %0 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = sub i64 %5, %7
  %9 = ashr exact i64 %8, 3
  %10 = add nsw i64 %9, 1
  %11 = icmp ugt i64 %10, 2305843009213693951
  br i1 %11, label %12, label %14

12:                                               ; preds = %2
  %13 = bitcast %"class.std::__1::vector.2254"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %13) #19
  unreachable

14:                                               ; preds = %2
  %15 = getelementptr inbounds %"class.std::__1::vector.2254", %"class.std::__1::vector.2254"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %16 = bitcast %"class.std::__1::unique_ptr.2256"** %15 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = sub i64 %17, %7
  %19 = ashr exact i64 %18, 3
  %20 = icmp ult i64 %19, 1152921504606846975
  br i1 %20, label %21, label %29

21:                                               ; preds = %14
  %22 = ashr exact i64 %18, 2
  %23 = icmp ult i64 %22, %10
  %24 = select i1 %23, i64 %10, i64 %22
  %25 = icmp eq i64 %24, 0
  br i1 %25, label %34, label %26

26:                                               ; preds = %21
  %27 = icmp ugt i64 %24, 2305843009213693951
  br i1 %27, label %28, label %29

28:                                               ; preds = %26
  tail call void @abort() #19
  unreachable

29:                                               ; preds = %14, %26
  %30 = phi i64 [ %24, %26 ], [ 2305843009213693951, %14 ]
  %31 = shl i64 %30, 3
  %32 = tail call i8* @_Znwm(i64 %31) #18
  %33 = bitcast i8* %32 to %"class.std::__1::unique_ptr.2256"*
  br label %34

34:                                               ; preds = %21, %29
  %35 = phi i64 [ %30, %29 ], [ 0, %21 ]
  %36 = phi %"class.std::__1::unique_ptr.2256"* [ %33, %29 ], [ null, %21 ]
  %37 = getelementptr inbounds %"class.std::__1::unique_ptr.2256", %"class.std::__1::unique_ptr.2256"* %36, i64 %9
  %38 = getelementptr inbounds %"class.std::__1::unique_ptr.2256", %"class.std::__1::unique_ptr.2256"* %36, i64 %35
  %39 = ptrtoint %"class.std::__1::unique_ptr.2256"* %38 to i64
  %40 = getelementptr inbounds %"class.std::__1::unique_ptr.2256", %"class.std::__1::unique_ptr.2256"* %1, i64 0, i32 0, i32 0, i32 0
  %41 = bitcast %"class.std::__1::unique_ptr.2256"* %1 to i64*
  %42 = load i64, i64* %41, align 8
  store %"class.blink::protocol::CacheStorage::DataEntry"* null, %"class.blink::protocol::CacheStorage::DataEntry"** %40, align 8
  %43 = bitcast %"class.std::__1::unique_ptr.2256"* %37 to i64*
  store i64 %42, i64* %43, align 8
  %44 = getelementptr inbounds %"class.std::__1::unique_ptr.2256", %"class.std::__1::unique_ptr.2256"* %37, i64 1
  %45 = ptrtoint %"class.std::__1::unique_ptr.2256"* %44 to i64
  %46 = getelementptr inbounds %"class.std::__1::vector.2254", %"class.std::__1::vector.2254"* %0, i64 0, i32 0, i32 0
  %47 = load %"class.std::__1::unique_ptr.2256"*, %"class.std::__1::unique_ptr.2256"** %46, align 8
  %48 = ptrtoint %"class.std::__1::unique_ptr.2256"* %47 to i64
  %49 = load %"class.std::__1::unique_ptr.2256"*, %"class.std::__1::unique_ptr.2256"** %3, align 8
  %50 = icmp eq %"class.std::__1::unique_ptr.2256"* %49, %47
  br i1 %50, label %132, label %51

51:                                               ; preds = %34
  %52 = getelementptr %"class.std::__1::unique_ptr.2256", %"class.std::__1::unique_ptr.2256"* %49, i64 -1, i32 0, i32 0, i32 0
  %53 = ptrtoint %"class.blink::protocol::CacheStorage::DataEntry"** %52 to i64
  %54 = sub i64 %53, %48
  %55 = lshr i64 %54, 3
  %56 = add nuw nsw i64 %55, 1
  %57 = and i64 %56, 7
  %58 = icmp eq i64 %57, 0
  br i1 %58, label %71, label %59

59:                                               ; preds = %51, %59
  %60 = phi %"class.std::__1::unique_ptr.2256"* [ %63, %59 ], [ %37, %51 ]
  %61 = phi %"class.std::__1::unique_ptr.2256"* [ %64, %59 ], [ %49, %51 ]
  %62 = phi i64 [ %69, %59 ], [ %57, %51 ]
  %63 = getelementptr inbounds %"class.std::__1::unique_ptr.2256", %"class.std::__1::unique_ptr.2256"* %60, i64 -1
  %64 = getelementptr inbounds %"class.std::__1::unique_ptr.2256", %"class.std::__1::unique_ptr.2256"* %61, i64 -1
  %65 = getelementptr inbounds %"class.std::__1::unique_ptr.2256", %"class.std::__1::unique_ptr.2256"* %64, i64 0, i32 0, i32 0, i32 0
  %66 = bitcast %"class.std::__1::unique_ptr.2256"* %64 to i64*
  %67 = load i64, i64* %66, align 8
  store %"class.blink::protocol::CacheStorage::DataEntry"* null, %"class.blink::protocol::CacheStorage::DataEntry"** %65, align 8
  %68 = bitcast %"class.std::__1::unique_ptr.2256"* %63 to i64*
  store i64 %67, i64* %68, align 8
  %69 = add i64 %62, -1
  %70 = icmp eq i64 %69, 0
  br i1 %70, label %71, label %59, !llvm.loop !113

71:                                               ; preds = %59, %51
  %72 = phi %"class.std::__1::unique_ptr.2256"* [ undef, %51 ], [ %63, %59 ]
  %73 = phi %"class.std::__1::unique_ptr.2256"* [ %37, %51 ], [ %63, %59 ]
  %74 = phi %"class.std::__1::unique_ptr.2256"* [ %49, %51 ], [ %64, %59 ]
  %75 = icmp ult i64 %54, 56
  br i1 %75, label %128, label %76

76:                                               ; preds = %71, %76
  %77 = phi %"class.std::__1::unique_ptr.2256"* [ %121, %76 ], [ %73, %71 ]
  %78 = phi %"class.std::__1::unique_ptr.2256"* [ %122, %76 ], [ %74, %71 ]
  %79 = getelementptr inbounds %"class.std::__1::unique_ptr.2256", %"class.std::__1::unique_ptr.2256"* %77, i64 -1
  %80 = getelementptr inbounds %"class.std::__1::unique_ptr.2256", %"class.std::__1::unique_ptr.2256"* %78, i64 -1
  %81 = getelementptr inbounds %"class.std::__1::unique_ptr.2256", %"class.std::__1::unique_ptr.2256"* %80, i64 0, i32 0, i32 0, i32 0
  %82 = bitcast %"class.std::__1::unique_ptr.2256"* %80 to i64*
  %83 = load i64, i64* %82, align 8
  store %"class.blink::protocol::CacheStorage::DataEntry"* null, %"class.blink::protocol::CacheStorage::DataEntry"** %81, align 8
  %84 = bitcast %"class.std::__1::unique_ptr.2256"* %79 to i64*
  store i64 %83, i64* %84, align 8
  %85 = getelementptr inbounds %"class.std::__1::unique_ptr.2256", %"class.std::__1::unique_ptr.2256"* %77, i64 -2
  %86 = getelementptr inbounds %"class.std::__1::unique_ptr.2256", %"class.std::__1::unique_ptr.2256"* %78, i64 -2
  %87 = getelementptr inbounds %"class.std::__1::unique_ptr.2256", %"class.std::__1::unique_ptr.2256"* %86, i64 0, i32 0, i32 0, i32 0
  %88 = bitcast %"class.std::__1::unique_ptr.2256"* %86 to i64*
  %89 = load i64, i64* %88, align 8
  store %"class.blink::protocol::CacheStorage::DataEntry"* null, %"class.blink::protocol::CacheStorage::DataEntry"** %87, align 8
  %90 = bitcast %"class.std::__1::unique_ptr.2256"* %85 to i64*
  store i64 %89, i64* %90, align 8
  %91 = getelementptr inbounds %"class.std::__1::unique_ptr.2256", %"class.std::__1::unique_ptr.2256"* %77, i64 -3
  %92 = getelementptr inbounds %"class.std::__1::unique_ptr.2256", %"class.std::__1::unique_ptr.2256"* %78, i64 -3
  %93 = getelementptr inbounds %"class.std::__1::unique_ptr.2256", %"class.std::__1::unique_ptr.2256"* %92, i64 0, i32 0, i32 0, i32 0
  %94 = bitcast %"class.std::__1::unique_ptr.2256"* %92 to i64*
  %95 = load i64, i64* %94, align 8
  store %"class.blink::protocol::CacheStorage::DataEntry"* null, %"class.blink::protocol::CacheStorage::DataEntry"** %93, align 8
  %96 = bitcast %"class.std::__1::unique_ptr.2256"* %91 to i64*
  store i64 %95, i64* %96, align 8
  %97 = getelementptr inbounds %"class.std::__1::unique_ptr.2256", %"class.std::__1::unique_ptr.2256"* %77, i64 -4
  %98 = getelementptr inbounds %"class.std::__1::unique_ptr.2256", %"class.std::__1::unique_ptr.2256"* %78, i64 -4
  %99 = getelementptr inbounds %"class.std::__1::unique_ptr.2256", %"class.std::__1::unique_ptr.2256"* %98, i64 0, i32 0, i32 0, i32 0
  %100 = bitcast %"class.std::__1::unique_ptr.2256"* %98 to i64*
  %101 = load i64, i64* %100, align 8
  store %"class.blink::protocol::CacheStorage::DataEntry"* null, %"class.blink::protocol::CacheStorage::DataEntry"** %99, align 8
  %102 = bitcast %"class.std::__1::unique_ptr.2256"* %97 to i64*
  store i64 %101, i64* %102, align 8
  %103 = getelementptr inbounds %"class.std::__1::unique_ptr.2256", %"class.std::__1::unique_ptr.2256"* %77, i64 -5
  %104 = getelementptr inbounds %"class.std::__1::unique_ptr.2256", %"class.std::__1::unique_ptr.2256"* %78, i64 -5
  %105 = getelementptr inbounds %"class.std::__1::unique_ptr.2256", %"class.std::__1::unique_ptr.2256"* %104, i64 0, i32 0, i32 0, i32 0
  %106 = bitcast %"class.std::__1::unique_ptr.2256"* %104 to i64*
  %107 = load i64, i64* %106, align 8
  store %"class.blink::protocol::CacheStorage::DataEntry"* null, %"class.blink::protocol::CacheStorage::DataEntry"** %105, align 8
  %108 = bitcast %"class.std::__1::unique_ptr.2256"* %103 to i64*
  store i64 %107, i64* %108, align 8
  %109 = getelementptr inbounds %"class.std::__1::unique_ptr.2256", %"class.std::__1::unique_ptr.2256"* %77, i64 -6
  %110 = getelementptr inbounds %"class.std::__1::unique_ptr.2256", %"class.std::__1::unique_ptr.2256"* %78, i64 -6
  %111 = getelementptr inbounds %"class.std::__1::unique_ptr.2256", %"class.std::__1::unique_ptr.2256"* %110, i64 0, i32 0, i32 0, i32 0
  %112 = bitcast %"class.std::__1::unique_ptr.2256"* %110 to i64*
  %113 = load i64, i64* %112, align 8
  store %"class.blink::protocol::CacheStorage::DataEntry"* null, %"class.blink::protocol::CacheStorage::DataEntry"** %111, align 8
  %114 = bitcast %"class.std::__1::unique_ptr.2256"* %109 to i64*
  store i64 %113, i64* %114, align 8
  %115 = getelementptr inbounds %"class.std::__1::unique_ptr.2256", %"class.std::__1::unique_ptr.2256"* %77, i64 -7
  %116 = getelementptr inbounds %"class.std::__1::unique_ptr.2256", %"class.std::__1::unique_ptr.2256"* %78, i64 -7
  %117 = getelementptr inbounds %"class.std::__1::unique_ptr.2256", %"class.std::__1::unique_ptr.2256"* %116, i64 0, i32 0, i32 0, i32 0
  %118 = bitcast %"class.std::__1::unique_ptr.2256"* %116 to i64*
  %119 = load i64, i64* %118, align 8
  store %"class.blink::protocol::CacheStorage::DataEntry"* null, %"class.blink::protocol::CacheStorage::DataEntry"** %117, align 8
  %120 = bitcast %"class.std::__1::unique_ptr.2256"* %115 to i64*
  store i64 %119, i64* %120, align 8
  %121 = getelementptr inbounds %"class.std::__1::unique_ptr.2256", %"class.std::__1::unique_ptr.2256"* %77, i64 -8
  %122 = getelementptr inbounds %"class.std::__1::unique_ptr.2256", %"class.std::__1::unique_ptr.2256"* %78, i64 -8
  %123 = getelementptr inbounds %"class.std::__1::unique_ptr.2256", %"class.std::__1::unique_ptr.2256"* %122, i64 0, i32 0, i32 0, i32 0
  %124 = bitcast %"class.std::__1::unique_ptr.2256"* %122 to i64*
  %125 = load i64, i64* %124, align 8
  store %"class.blink::protocol::CacheStorage::DataEntry"* null, %"class.blink::protocol::CacheStorage::DataEntry"** %123, align 8
  %126 = bitcast %"class.std::__1::unique_ptr.2256"* %121 to i64*
  store i64 %125, i64* %126, align 8
  %127 = icmp eq %"class.std::__1::unique_ptr.2256"* %122, %47
  br i1 %127, label %128, label %76

128:                                              ; preds = %76, %71
  %129 = phi %"class.std::__1::unique_ptr.2256"* [ %72, %71 ], [ %121, %76 ]
  %130 = load i64, i64* %6, align 8
  %131 = load %"class.std::__1::unique_ptr.2256"*, %"class.std::__1::unique_ptr.2256"** %3, align 8
  br label %132

132:                                              ; preds = %34, %128
  %133 = phi %"class.std::__1::unique_ptr.2256"* [ %131, %128 ], [ %47, %34 ]
  %134 = phi %"class.std::__1::unique_ptr.2256"* [ %129, %128 ], [ %37, %34 ]
  %135 = phi i64 [ %130, %128 ], [ %48, %34 ]
  %136 = ptrtoint %"class.std::__1::unique_ptr.2256"* %134 to i64
  store i64 %136, i64* %6, align 8
  store i64 %45, i64* %4, align 8
  store i64 %39, i64* %16, align 8
  %137 = inttoptr i64 %135 to %"class.std::__1::unique_ptr.2256"*
  %138 = icmp eq %"class.std::__1::unique_ptr.2256"* %133, %137
  br i1 %138, label %152, label %139

139:                                              ; preds = %132, %150
  %140 = phi %"class.std::__1::unique_ptr.2256"* [ %141, %150 ], [ %133, %132 ]
  %141 = getelementptr inbounds %"class.std::__1::unique_ptr.2256", %"class.std::__1::unique_ptr.2256"* %140, i64 -1
  %142 = getelementptr inbounds %"class.std::__1::unique_ptr.2256", %"class.std::__1::unique_ptr.2256"* %141, i64 0, i32 0, i32 0, i32 0
  %143 = load %"class.blink::protocol::CacheStorage::DataEntry"*, %"class.blink::protocol::CacheStorage::DataEntry"** %142, align 8
  store %"class.blink::protocol::CacheStorage::DataEntry"* null, %"class.blink::protocol::CacheStorage::DataEntry"** %142, align 8
  %144 = icmp eq %"class.blink::protocol::CacheStorage::DataEntry"* %143, null
  br i1 %144, label %150, label %145

145:                                              ; preds = %139
  %146 = bitcast %"class.blink::protocol::CacheStorage::DataEntry"* %143 to void (%"class.blink::protocol::CacheStorage::DataEntry"*)***
  %147 = load void (%"class.blink::protocol::CacheStorage::DataEntry"*)**, void (%"class.blink::protocol::CacheStorage::DataEntry"*)*** %146, align 8
  %148 = getelementptr inbounds void (%"class.blink::protocol::CacheStorage::DataEntry"*)*, void (%"class.blink::protocol::CacheStorage::DataEntry"*)** %147, i64 2
  %149 = load void (%"class.blink::protocol::CacheStorage::DataEntry"*)*, void (%"class.blink::protocol::CacheStorage::DataEntry"*)** %148, align 8
  tail call void %149(%"class.blink::protocol::CacheStorage::DataEntry"* nonnull %143) #16
  br label %150

150:                                              ; preds = %145, %139
  %151 = icmp eq %"class.std::__1::unique_ptr.2256"* %141, %137
  br i1 %151, label %152, label %139

152:                                              ; preds = %150, %132
  %153 = icmp eq i64 %135, 0
  br i1 %153, label %156, label %154

154:                                              ; preds = %152
  %155 = inttoptr i64 %135 to i8*
  tail call void @_ZdlPv(i8* %155) #18
  br label %156

156:                                              ; preds = %152, %154
  ret void
}

; Function Attrs: nounwind
declare void @_ZN5blink5mojom5blink11MatchResultD1Ev(%"class.blink::mojom::blink::MatchResult"*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN4base8internal9BindStateIZN5blink12_GLOBAL__N_120ResponsesAccumulator8DispatchEN3WTF6VectorIN4mojo9StructPtrINS2_5mojom5blink15FetchAPIRequestEEELj0ENS5_18PartitionAllocatorEEEEUl13scoped_refptrIS4_ESC_NS8_INSA_11MatchResultEEEE_JSG_SC_EE7DestroyEPKNS0_13BindStateBaseE(%"class.base::internal::BindStateBase"*) #0 align 2 {
  %2 = icmp eq %"class.base::internal::BindStateBase"* %0, null
  br i1 %2, label %14, label %3

3:                                                ; preds = %1
  %4 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 2
  %5 = bitcast void (%"class.base::internal::BindStateBase"*)** %4 to %"class.blink::mojom::blink::FetchAPIRequest"**
  %6 = load %"class.blink::mojom::blink::FetchAPIRequest"*, %"class.blink::mojom::blink::FetchAPIRequest"** %5, align 8
  store %"class.blink::mojom::blink::FetchAPIRequest"* null, %"class.blink::mojom::blink::FetchAPIRequest"** %5, align 8
  %7 = icmp eq %"class.blink::mojom::blink::FetchAPIRequest"* %6, null
  br i1 %7, label %10, label %8

8:                                                ; preds = %3
  tail call void @_ZN5blink5mojom5blink15FetchAPIRequestD1Ev(%"class.blink::mojom::blink::FetchAPIRequest"* nonnull %6) #16
  %9 = bitcast %"class.blink::mojom::blink::FetchAPIRequest"* %6 to i8*
  tail call void @_ZdlPv(i8* %9) #18
  br label %10

10:                                               ; preds = %3, %8
  %11 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 1
  %12 = bitcast void ()** %11 to %class.scoped_refptr.2273*
  tail call fastcc void @_ZN13scoped_refptrIN5blink12_GLOBAL__N_120ResponsesAccumulatorEED2Ev(%class.scoped_refptr.2273* %12) #16
  %13 = bitcast %"class.base::internal::BindStateBase"* %0 to i8*
  tail call void @_ZdlPv(i8* %13) #18
  br label %14

14:                                               ; preds = %10, %1
  ret void
}

declare void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN5blink5mojom5blink15CacheKeysResultD1Ev(%"class.blink::mojom::blink::CacheKeysResult"*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN4base8internal9BindStateIZN5blink12_GLOBAL__N_126GetCacheKeysForRequestData8DispatchENSt3__110unique_ptrIS4_NS5_14default_deleteIS4_EEEEEUlNS3_17DataRequestParamsES9_N4mojo9StructPtrINS2_5mojom5blink15CacheKeysResultEEEE_JSA_S9_EE7DestroyEPKNS0_13BindStateBaseE(%"class.base::internal::BindStateBase"*) #0 align 2 {
  %2 = icmp eq %"class.base::internal::BindStateBase"* %0, null
  br i1 %2, label %43, label %3

3:                                                ; preds = %1
  %4 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 2
  %5 = bitcast %"class.base::internal::BindStateBase"* %4 to %"class.std::__1::unique_ptr.2212"*
  tail call fastcc void @_ZNSt3__110unique_ptrIN5blink12_GLOBAL__N_126GetCacheKeysForRequestDataENS_14default_deleteIS3_EEED2Ev(%"class.std::__1::unique_ptr.2212"* %5) #16
  %6 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 3
  %7 = bitcast i1 (%"class.base::internal::BindStateBase"*, i32)** %6 to %"class.WTF::StringImpl"**
  %8 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %7, align 8
  %9 = icmp eq %"class.WTF::StringImpl"* %8, null
  br i1 %9, label %23, label %10

10:                                               ; preds = %3
  %11 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %8, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %12 = load atomic i32, i32* %11 monotonic, align 4
  %13 = and i32 %12, 2
  %14 = icmp eq i32 %13, 0
  %15 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %8, i64 0, i32 0
  %16 = load i32, i32* %15, align 4
  br i1 %14, label %17, label %19

17:                                               ; preds = %10
  %18 = add i32 %16, -1
  store i32 %18, i32* %15, align 4
  br label %19

19:                                               ; preds = %17, %10
  %20 = phi i32 [ %18, %17 ], [ %16, %10 ]
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %22, label %23

22:                                               ; preds = %19
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %8) #16
  br label %23

23:                                               ; preds = %22, %19, %3
  %24 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 1
  %25 = bitcast void ()** %24 to %"class.WTF::StringImpl"**
  %26 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %25, align 8
  %27 = icmp eq %"class.WTF::StringImpl"* %26, null
  br i1 %27, label %41, label %28

28:                                               ; preds = %23
  %29 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %26, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %30 = load atomic i32, i32* %29 monotonic, align 4
  %31 = and i32 %30, 2
  %32 = icmp eq i32 %31, 0
  %33 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %26, i64 0, i32 0
  %34 = load i32, i32* %33, align 4
  br i1 %32, label %35, label %37

35:                                               ; preds = %28
  %36 = add i32 %34, -1
  store i32 %36, i32* %33, align 4
  br label %37

37:                                               ; preds = %35, %28
  %38 = phi i32 [ %36, %35 ], [ %34, %28 ]
  %39 = icmp eq i32 %38, 0
  br i1 %39, label %40, label %41

40:                                               ; preds = %37
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %26) #16
  br label %41

41:                                               ; preds = %23, %37, %40
  %42 = bitcast %"class.base::internal::BindStateBase"* %0 to i8*
  tail call void @_ZdlPv(i8* %42) #18
  br label %43

43:                                               ; preds = %41, %1
  ret void
}

; Function Attrs: nounwind
declare void @_ZN5blink5mojom5blink10OpenResultD1Ev(%"class.blink::mojom::blink::OpenResult"*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define internal void @"_ZN4base8internal9BindStateIZN5blink26InspectorCacheStorageAgent14requestEntriesERKN3WTF6StringEN5crdtp6detail10ValueMaybeIiEESB_NSA_IS5_EENSt3__110unique_ptrINS2_8protocol12CacheStorage7Backend22RequestEntriesCallbackENSD_14default_deleteISI_EEEEE3$_1JNS2_12_GLOBAL__N_117DataRequestParamsESL_EE7DestroyEPKNS0_13BindStateBaseE"(%"class.base::internal::BindStateBase"*) #0 align 2 {
  %2 = icmp eq %"class.base::internal::BindStateBase"* %0, null
  br i1 %2, label %51, label %3

3:                                                ; preds = %1
  %4 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 2
  %5 = bitcast %"class.base::internal::BindStateBase"* %4 to %"class.blink::protocol::CacheStorage::Backend::RequestEntriesCallback"**
  %6 = load %"class.blink::protocol::CacheStorage::Backend::RequestEntriesCallback"*, %"class.blink::protocol::CacheStorage::Backend::RequestEntriesCallback"** %5, align 8
  store %"class.blink::protocol::CacheStorage::Backend::RequestEntriesCallback"* null, %"class.blink::protocol::CacheStorage::Backend::RequestEntriesCallback"** %5, align 8
  %7 = icmp eq %"class.blink::protocol::CacheStorage::Backend::RequestEntriesCallback"* %6, null
  br i1 %7, label %13, label %8

8:                                                ; preds = %3
  %9 = bitcast %"class.blink::protocol::CacheStorage::Backend::RequestEntriesCallback"* %6 to void (%"class.blink::protocol::CacheStorage::Backend::RequestEntriesCallback"*)***
  %10 = load void (%"class.blink::protocol::CacheStorage::Backend::RequestEntriesCallback"*)**, void (%"class.blink::protocol::CacheStorage::Backend::RequestEntriesCallback"*)*** %9, align 8
  %11 = getelementptr inbounds void (%"class.blink::protocol::CacheStorage::Backend::RequestEntriesCallback"*)*, void (%"class.blink::protocol::CacheStorage::Backend::RequestEntriesCallback"*)** %10, i64 4
  %12 = load void (%"class.blink::protocol::CacheStorage::Backend::RequestEntriesCallback"*)*, void (%"class.blink::protocol::CacheStorage::Backend::RequestEntriesCallback"*)** %11, align 8
  tail call void %12(%"class.blink::protocol::CacheStorage::Backend::RequestEntriesCallback"* nonnull %6) #16
  br label %13

13:                                               ; preds = %8, %3
  %14 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 3
  %15 = bitcast i1 (%"class.base::internal::BindStateBase"*, i32)** %14 to %"class.WTF::StringImpl"**
  %16 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %15, align 8
  %17 = icmp eq %"class.WTF::StringImpl"* %16, null
  br i1 %17, label %31, label %18

18:                                               ; preds = %13
  %19 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %16, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %20 = load atomic i32, i32* %19 monotonic, align 4
  %21 = and i32 %20, 2
  %22 = icmp eq i32 %21, 0
  %23 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %16, i64 0, i32 0
  %24 = load i32, i32* %23, align 4
  br i1 %22, label %25, label %27

25:                                               ; preds = %18
  %26 = add i32 %24, -1
  store i32 %26, i32* %23, align 4
  br label %27

27:                                               ; preds = %25, %18
  %28 = phi i32 [ %26, %25 ], [ %24, %18 ]
  %29 = icmp eq i32 %28, 0
  br i1 %29, label %30, label %31

30:                                               ; preds = %27
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %16) #16
  br label %31

31:                                               ; preds = %30, %27, %13
  %32 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 1
  %33 = bitcast void ()** %32 to %"class.WTF::StringImpl"**
  %34 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %33, align 8
  %35 = icmp eq %"class.WTF::StringImpl"* %34, null
  br i1 %35, label %49, label %36

36:                                               ; preds = %31
  %37 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %34, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %38 = load atomic i32, i32* %37 monotonic, align 4
  %39 = and i32 %38, 2
  %40 = icmp eq i32 %39, 0
  %41 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %34, i64 0, i32 0
  %42 = load i32, i32* %41, align 4
  br i1 %40, label %43, label %45

43:                                               ; preds = %36
  %44 = add i32 %42, -1
  store i32 %44, i32* %41, align 4
  br label %45

45:                                               ; preds = %43, %36
  %46 = phi i32 [ %44, %43 ], [ %42, %36 ]
  %47 = icmp eq i32 %46, 0
  br i1 %47, label %48, label %49

48:                                               ; preds = %45
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %34) #16
  br label %49

49:                                               ; preds = %31, %45, %48
  %50 = bitcast %"class.base::internal::BindStateBase"* %0 to i8*
  tail call void @_ZdlPv(i8* %50) #18
  br label %51

51:                                               ; preds = %49, %1
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @"_ZN4base8internal7InvokerINS0_9BindStateIZN5blink26InspectorCacheStorageAgent11deleteCacheERKN3WTF6StringENSt3__110unique_ptrINS3_8protocol12CacheStorage7Backend19DeleteCacheCallbackENS9_14default_deleteISE_EEEEE3$_2JSH_EEEFvNS3_5mojom17CacheStorageErrorEEE7RunOnceEPNS0_13BindStateBaseESL_"(%"class.base::internal::BindStateBase"* nocapture, i32) #0 align 2 {
  %3 = alloca %"class.crdtp::DispatchResponse", align 8
  %4 = alloca %"class.std::__1::basic_string", align 8
  %5 = alloca %"class.WTF::String", align 8
  %6 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 1
  %7 = bitcast void ()** %6 to %"class.blink::protocol::CacheStorage::Backend::DeleteCacheCallback"**
  %8 = load %"class.blink::protocol::CacheStorage::Backend::DeleteCacheCallback"*, %"class.blink::protocol::CacheStorage::Backend::DeleteCacheCallback"** %7, align 8
  store %"class.blink::protocol::CacheStorage::Backend::DeleteCacheCallback"* null, %"class.blink::protocol::CacheStorage::Backend::DeleteCacheCallback"** %7, align 8
  %9 = bitcast %"class.std::__1::basic_string"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %9) #16
  %10 = icmp eq i32 %1, 0
  br i1 %10, label %11, label %15

11:                                               ; preds = %2
  %12 = bitcast %"class.blink::protocol::CacheStorage::Backend::DeleteCacheCallback"* %8 to void (%"class.blink::protocol::CacheStorage::Backend::DeleteCacheCallback"*)***
  %13 = load void (%"class.blink::protocol::CacheStorage::Backend::DeleteCacheCallback"*)**, void (%"class.blink::protocol::CacheStorage::Backend::DeleteCacheCallback"*)*** %12, align 8
  %14 = load void (%"class.blink::protocol::CacheStorage::Backend::DeleteCacheCallback"*)*, void (%"class.blink::protocol::CacheStorage::Backend::DeleteCacheCallback"*)** %13, align 8
  tail call void %14(%"class.blink::protocol::CacheStorage::Backend::DeleteCacheCallback"* %8) #16
  br label %65

15:                                               ; preds = %2
  %16 = bitcast %"class.crdtp::DispatchResponse"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %16) #16
  %17 = bitcast %"class.WTF::String"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #16
  %18 = add i32 %1, -1
  %19 = icmp ult i32 %18, 9
  br i1 %19, label %20, label %24

20:                                               ; preds = %15
  %21 = sext i32 %18 to i64
  %22 = getelementptr inbounds [9 x i8*], [9 x i8*]* @"switch.table._ZN4base8internal7InvokerINS0_9BindStateIZN5blink26InspectorCacheStorageAgent21requestCachedResponseERKN3WTF6StringES8_NSt3__110unique_ptrINS9_6vectorINSA_INS3_8protocol12CacheStorage6HeaderENS9_14default_deleteISE_EEEENS9_9allocatorISH_EEEENSF_ISK_EEEENSA_INSD_7Backend29RequestCachedResponseCallbackENSF_ISO_EEEEE3$_4JSQ_EEEFvN4mojo9StructPtrINS3_5mojom5blink11MatchResultEEEEE7RunOnceEPNS0_13BindStateBaseEOSY_", i64 0, i64 %21
  %23 = load i8*, i8** %22, align 8
  br label %24

24:                                               ; preds = %15, %20
  %25 = phi i8* [ %23, %20 ], [ getelementptr inbounds ([1 x i8], [1 x i8]* @.str.2, i64 0, i64 0), %15 ]
  %26 = tail call %"class.WTF::StringImpl"* (i8*, ...) @_ZN3WTF6String6FormatEPKcz(i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.41, i64 0, i64 0), i8* nonnull %25) #16
  %27 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %5, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %26, %"class.WTF::StringImpl"** %27, align 8
  call void @_ZNK3WTF6String4Utf8ENS_18UTF8ConversionModeE(%"class.std::__1::basic_string"* nonnull sret %4, %"class.WTF::String"* nonnull %5, i32 0) #16
  call void @_ZN5crdtp16DispatchResponse11ServerErrorENSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.crdtp::DispatchResponse"* nonnull sret %3, %"class.std::__1::basic_string"* nonnull %4) #16
  %28 = bitcast %"class.blink::protocol::CacheStorage::Backend::DeleteCacheCallback"* %8 to void (%"class.blink::protocol::CacheStorage::Backend::DeleteCacheCallback"*, %"class.crdtp::DispatchResponse"*)***
  %29 = load void (%"class.blink::protocol::CacheStorage::Backend::DeleteCacheCallback"*, %"class.crdtp::DispatchResponse"*)**, void (%"class.blink::protocol::CacheStorage::Backend::DeleteCacheCallback"*, %"class.crdtp::DispatchResponse"*)*** %28, align 8
  %30 = getelementptr inbounds void (%"class.blink::protocol::CacheStorage::Backend::DeleteCacheCallback"*, %"class.crdtp::DispatchResponse"*)*, void (%"class.blink::protocol::CacheStorage::Backend::DeleteCacheCallback"*, %"class.crdtp::DispatchResponse"*)** %29, i64 1
  %31 = load void (%"class.blink::protocol::CacheStorage::Backend::DeleteCacheCallback"*, %"class.crdtp::DispatchResponse"*)*, void (%"class.blink::protocol::CacheStorage::Backend::DeleteCacheCallback"*, %"class.crdtp::DispatchResponse"*)** %30, align 8
  call void %31(%"class.blink::protocol::CacheStorage::Backend::DeleteCacheCallback"* %8, %"class.crdtp::DispatchResponse"* nonnull dereferenceable(32) %3) #16
  %32 = getelementptr inbounds %"class.crdtp::DispatchResponse", %"class.crdtp::DispatchResponse"* %3, i64 0, i32 1
  %33 = bitcast %"class.std::__1::basic_string"* %32 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %34 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %33, i64 0, i32 1, i32 0
  %35 = load i8, i8* %34, align 1
  %36 = icmp slt i8 %35, 0
  br i1 %36, label %37, label %40

37:                                               ; preds = %24
  %38 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %32, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %39 = load i8*, i8** %38, align 8
  call void @_ZdlPv(i8* %39) #18
  br label %40

40:                                               ; preds = %37, %24
  %41 = bitcast %"class.std::__1::basic_string"* %4 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %42 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %41, i64 0, i32 1, i32 0
  %43 = load i8, i8* %42, align 1
  %44 = icmp slt i8 %43, 0
  br i1 %44, label %45, label %48

45:                                               ; preds = %40
  %46 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %47 = load i8*, i8** %46, align 8
  call void @_ZdlPv(i8* %47) #18
  br label %48

48:                                               ; preds = %45, %40
  %49 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %27, align 8
  %50 = icmp eq %"class.WTF::StringImpl"* %49, null
  br i1 %50, label %64, label %51

51:                                               ; preds = %48
  %52 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %49, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %53 = load atomic i32, i32* %52 monotonic, align 4
  %54 = and i32 %53, 2
  %55 = icmp eq i32 %54, 0
  %56 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %49, i64 0, i32 0
  %57 = load i32, i32* %56, align 4
  br i1 %55, label %58, label %60

58:                                               ; preds = %51
  %59 = add i32 %57, -1
  store i32 %59, i32* %56, align 4
  br label %60

60:                                               ; preds = %58, %51
  %61 = phi i32 [ %59, %58 ], [ %57, %51 ]
  %62 = icmp eq i32 %61, 0
  br i1 %62, label %63, label %64

63:                                               ; preds = %60
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %49) #16
  br label %64

64:                                               ; preds = %63, %60, %48
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #16
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %16) #16
  br label %65

65:                                               ; preds = %64, %11
  %66 = icmp eq %"class.blink::protocol::CacheStorage::Backend::DeleteCacheCallback"* %8, null
  br i1 %66, label %72, label %67

67:                                               ; preds = %65
  %68 = bitcast %"class.blink::protocol::CacheStorage::Backend::DeleteCacheCallback"* %8 to void (%"class.blink::protocol::CacheStorage::Backend::DeleteCacheCallback"*)***
  %69 = load void (%"class.blink::protocol::CacheStorage::Backend::DeleteCacheCallback"*)**, void (%"class.blink::protocol::CacheStorage::Backend::DeleteCacheCallback"*)*** %68, align 8
  %70 = getelementptr inbounds void (%"class.blink::protocol::CacheStorage::Backend::DeleteCacheCallback"*)*, void (%"class.blink::protocol::CacheStorage::Backend::DeleteCacheCallback"*)** %69, i64 4
  %71 = load void (%"class.blink::protocol::CacheStorage::Backend::DeleteCacheCallback"*)*, void (%"class.blink::protocol::CacheStorage::Backend::DeleteCacheCallback"*)** %70, align 8
  call void %71(%"class.blink::protocol::CacheStorage::Backend::DeleteCacheCallback"* nonnull %8) #16
  br label %72

72:                                               ; preds = %65, %67
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %9) #16
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @"_ZN4base8internal9BindStateIZN5blink26InspectorCacheStorageAgent11deleteCacheERKN3WTF6StringENSt3__110unique_ptrINS2_8protocol12CacheStorage7Backend19DeleteCacheCallbackENS8_14default_deleteISD_EEEEE3$_2JSG_EE7DestroyEPKNS0_13BindStateBaseE"(%"class.base::internal::BindStateBase"*) #0 align 2 {
  %2 = icmp eq %"class.base::internal::BindStateBase"* %0, null
  br i1 %2, label %15, label %3

3:                                                ; preds = %1
  %4 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 1
  %5 = bitcast void ()** %4 to %"class.blink::protocol::CacheStorage::Backend::DeleteCacheCallback"**
  %6 = load %"class.blink::protocol::CacheStorage::Backend::DeleteCacheCallback"*, %"class.blink::protocol::CacheStorage::Backend::DeleteCacheCallback"** %5, align 8
  store %"class.blink::protocol::CacheStorage::Backend::DeleteCacheCallback"* null, %"class.blink::protocol::CacheStorage::Backend::DeleteCacheCallback"** %5, align 8
  %7 = icmp eq %"class.blink::protocol::CacheStorage::Backend::DeleteCacheCallback"* %6, null
  br i1 %7, label %13, label %8

8:                                                ; preds = %3
  %9 = bitcast %"class.blink::protocol::CacheStorage::Backend::DeleteCacheCallback"* %6 to void (%"class.blink::protocol::CacheStorage::Backend::DeleteCacheCallback"*)***
  %10 = load void (%"class.blink::protocol::CacheStorage::Backend::DeleteCacheCallback"*)**, void (%"class.blink::protocol::CacheStorage::Backend::DeleteCacheCallback"*)*** %9, align 8
  %11 = getelementptr inbounds void (%"class.blink::protocol::CacheStorage::Backend::DeleteCacheCallback"*)*, void (%"class.blink::protocol::CacheStorage::Backend::DeleteCacheCallback"*)** %10, i64 4
  %12 = load void (%"class.blink::protocol::CacheStorage::Backend::DeleteCacheCallback"*)*, void (%"class.blink::protocol::CacheStorage::Backend::DeleteCacheCallback"*)** %11, align 8
  tail call void %12(%"class.blink::protocol::CacheStorage::Backend::DeleteCacheCallback"* nonnull %6) #16
  br label %13

13:                                               ; preds = %3, %8
  %14 = bitcast %"class.base::internal::BindStateBase"* %0 to i8*
  tail call void @_ZdlPv(i8* %14) #18
  br label %15

15:                                               ; preds = %13, %1
  ret void
}

declare void @_ZN5blink5mojom5blink15FetchAPIRequestC1Ev(%"class.blink::mojom::blink::FetchAPIRequest"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define internal void @"_ZN4base8internal7InvokerINS0_9BindStateIZN5blink26InspectorCacheStorageAgent11deleteEntryERKN3WTF6StringES8_NSt3__110unique_ptrINS3_8protocol12CacheStorage7Backend19DeleteEntryCallbackENS9_14default_deleteISE_EEEEE3$_3JS6_S6_lSH_EEEFvN4mojo9StructPtrINS3_5mojom5blink10OpenResultEEEEE7RunOnceEPNS0_13BindStateBaseEOSP_"(%"class.base::internal::BindStateBase"* nocapture, %"class.mojo::StructPtr.2200"* nocapture dereferenceable(8)) #0 align 2 {
  %3 = alloca %"class.WTF::String", align 8
  %4 = alloca %"class.WTF::String", align 8
  %5 = alloca %"class.crdtp::DispatchResponse", align 8
  %6 = alloca %"class.std::__1::basic_string", align 8
  %7 = alloca %"class.WTF::String", align 8
  %8 = alloca %"class.std::__1::basic_string", align 8
  %9 = alloca %"class.WTF::Vector.2436", align 8
  %10 = alloca %"class.mojo::StructPtr.2439", align 8
  %11 = alloca %"class.blink::KURL", align 8
  %12 = alloca %"class.WTF::String", align 8
  %13 = alloca %"class.mojo::AssociatedRemote.2215", align 8
  %14 = alloca %"class.mojo::PendingAssociatedRemote", align 8
  %15 = alloca %"class.WTF::Vector.2436", align 8
  %16 = alloca %"class.base::OnceCallback.2448", align 8
  %17 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 1
  %18 = getelementptr inbounds void ()*, void ()** %17, i64 1
  %19 = getelementptr inbounds void ()*, void ()** %17, i64 2
  %20 = bitcast void ()** %19 to i64*
  %21 = getelementptr inbounds void ()*, void ()** %17, i64 3
  %22 = bitcast void ()** %17 to i64*
  %23 = load i64, i64* %22, align 8
  %24 = bitcast void ()** %18 to i64*
  %25 = load i64, i64* %24, align 8
  %26 = bitcast void ()** %17 to <2 x %"class.WTF::StringImpl"*>*
  store <2 x %"class.WTF::StringImpl"*> zeroinitializer, <2 x %"class.WTF::StringImpl"*>* %26, align 8
  %27 = load i64, i64* %20, align 8
  %28 = bitcast void ()** %21 to %"class.blink::protocol::CacheStorage::Backend::DeleteEntryCallback"**
  %29 = bitcast void ()** %21 to i64*
  %30 = load i64, i64* %29, align 8
  store %"class.blink::protocol::CacheStorage::Backend::DeleteEntryCallback"* null, %"class.blink::protocol::CacheStorage::Backend::DeleteEntryCallback"** %28, align 8
  %31 = bitcast %"class.mojo::StructPtr.2200"* %1 to i64*
  %32 = getelementptr inbounds %"class.mojo::StructPtr.2200", %"class.mojo::StructPtr.2200"* %1, i64 0, i32 0, i32 0, i32 0, i32 0
  %33 = load %"class.blink::mojom::blink::OpenResult"*, %"class.blink::mojom::blink::OpenResult"** %32, align 8
  store i64 0, i64* %31, align 8
  %34 = inttoptr i64 %30 to %"class.blink::protocol::CacheStorage::Backend::DeleteEntryCallback"*
  %35 = bitcast %"class.WTF::String"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %35) #16
  %36 = bitcast %"class.WTF::String"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %36) #16
  %37 = bitcast %"class.std::__1::basic_string"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %37) #16
  %38 = bitcast %"class.mojo::PendingAssociatedRemote"* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %38) #16
  %39 = bitcast %"class.WTF::Vector.2436"* %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %39) #16
  %40 = bitcast %"class.base::OnceCallback.2448"* %16 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %40) #16
  %41 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %3, i64 0, i32 0, i32 0
  %42 = bitcast %"class.WTF::String"* %3 to i64*
  store i64 %23, i64* %42, align 8
  %43 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %4, i64 0, i32 0, i32 0
  %44 = bitcast %"class.WTF::String"* %4 to i64*
  store i64 %25, i64* %44, align 8
  %45 = getelementptr inbounds %"class.blink::mojom::blink::OpenResult", %"class.blink::mojom::blink::OpenResult"* %33, i64 0, i32 0
  %46 = load i32, i32* %45, align 8
  %47 = icmp eq i32 %46, 0
  br i1 %47, label %48, label %113

48:                                               ; preds = %2
  %49 = bitcast %"class.crdtp::DispatchResponse"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %49) #16
  %50 = bitcast %"class.WTF::String"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %50) #16
  %51 = bitcast %"class.std::__1::basic_string"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %51) #16
  call void @_ZNK3WTF6String6Latin1Ev(%"class.std::__1::basic_string"* nonnull sret %8, %"class.WTF::String"* nonnull %3) #16
  %52 = bitcast %"class.std::__1::basic_string"* %8 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %53 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %52, i64 0, i32 1, i32 0
  %54 = load i8, i8* %53, align 1
  %55 = icmp slt i8 %54, 0
  %56 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %57 = load i8*, i8** %56, align 8
  %58 = select i1 %55, i8* %57, i8* %51
  %59 = getelementptr inbounds %"class.blink::mojom::blink::OpenResult", %"class.blink::mojom::blink::OpenResult"* %33, i64 0, i32 1
  %60 = bitcast %"union.blink::mojom::blink::OpenResult::Union_"* %59 to i32*
  %61 = load i32, i32* %60, align 8
  %62 = add i32 %61, -1
  %63 = icmp ult i32 %62, 9
  br i1 %63, label %64, label %68

64:                                               ; preds = %48
  %65 = sext i32 %62 to i64
  %66 = getelementptr inbounds [9 x i8*], [9 x i8*]* @"switch.table._ZN4base8internal7InvokerINS0_9BindStateIZN5blink26InspectorCacheStorageAgent21requestCachedResponseERKN3WTF6StringES8_NSt3__110unique_ptrINS9_6vectorINSA_INS3_8protocol12CacheStorage6HeaderENS9_14default_deleteISE_EEEENS9_9allocatorISH_EEEENSF_ISK_EEEENSA_INSD_7Backend29RequestCachedResponseCallbackENSF_ISO_EEEEE3$_4JSQ_EEEFvN4mojo9StructPtrINS3_5mojom5blink11MatchResultEEEEE7RunOnceEPNS0_13BindStateBaseEOSY_", i64 0, i64 %65
  %67 = load i8*, i8** %66, align 8
  br label %68

68:                                               ; preds = %48, %64
  %69 = phi i8* [ %67, %64 ], [ getelementptr inbounds ([1 x i8], [1 x i8]* @.str.2, i64 0, i64 0), %48 ]
  %70 = call %"class.WTF::StringImpl"* (i8*, ...) @_ZN3WTF6String6FormatEPKcz(i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.22, i64 0, i64 0), i8* %58, i8* nonnull %69) #16
  %71 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %7, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %70, %"class.WTF::StringImpl"** %71, align 8
  call void @_ZNK3WTF6String4Utf8ENS_18UTF8ConversionModeE(%"class.std::__1::basic_string"* nonnull sret %6, %"class.WTF::String"* nonnull %7, i32 0) #16
  call void @_ZN5crdtp16DispatchResponse11ServerErrorENSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.crdtp::DispatchResponse"* nonnull sret %5, %"class.std::__1::basic_string"* nonnull %6) #16
  %72 = inttoptr i64 %30 to void (%"class.blink::protocol::CacheStorage::Backend::DeleteEntryCallback"*, %"class.crdtp::DispatchResponse"*)***
  %73 = load void (%"class.blink::protocol::CacheStorage::Backend::DeleteEntryCallback"*, %"class.crdtp::DispatchResponse"*)**, void (%"class.blink::protocol::CacheStorage::Backend::DeleteEntryCallback"*, %"class.crdtp::DispatchResponse"*)*** %72, align 8
  %74 = getelementptr inbounds void (%"class.blink::protocol::CacheStorage::Backend::DeleteEntryCallback"*, %"class.crdtp::DispatchResponse"*)*, void (%"class.blink::protocol::CacheStorage::Backend::DeleteEntryCallback"*, %"class.crdtp::DispatchResponse"*)** %73, i64 1
  %75 = load void (%"class.blink::protocol::CacheStorage::Backend::DeleteEntryCallback"*, %"class.crdtp::DispatchResponse"*)*, void (%"class.blink::protocol::CacheStorage::Backend::DeleteEntryCallback"*, %"class.crdtp::DispatchResponse"*)** %74, align 8
  call void %75(%"class.blink::protocol::CacheStorage::Backend::DeleteEntryCallback"* %34, %"class.crdtp::DispatchResponse"* nonnull dereferenceable(32) %5) #16
  %76 = getelementptr inbounds %"class.crdtp::DispatchResponse", %"class.crdtp::DispatchResponse"* %5, i64 0, i32 1
  %77 = bitcast %"class.std::__1::basic_string"* %76 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %78 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %77, i64 0, i32 1, i32 0
  %79 = load i8, i8* %78, align 1
  %80 = icmp slt i8 %79, 0
  br i1 %80, label %81, label %84

81:                                               ; preds = %68
  %82 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %76, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %83 = load i8*, i8** %82, align 8
  call void @_ZdlPv(i8* %83) #18
  br label %84

84:                                               ; preds = %81, %68
  %85 = bitcast %"class.std::__1::basic_string"* %6 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %86 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %85, i64 0, i32 1, i32 0
  %87 = load i8, i8* %86, align 1
  %88 = icmp slt i8 %87, 0
  br i1 %88, label %89, label %92

89:                                               ; preds = %84
  %90 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %91 = load i8*, i8** %90, align 8
  call void @_ZdlPv(i8* %91) #18
  br label %92

92:                                               ; preds = %89, %84
  %93 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %71, align 8
  %94 = icmp eq %"class.WTF::StringImpl"* %93, null
  br i1 %94, label %108, label %95

95:                                               ; preds = %92
  %96 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %93, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %97 = load atomic i32, i32* %96 monotonic, align 4
  %98 = and i32 %97, 2
  %99 = icmp eq i32 %98, 0
  %100 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %93, i64 0, i32 0
  %101 = load i32, i32* %100, align 4
  br i1 %99, label %102, label %104

102:                                              ; preds = %95
  %103 = add i32 %101, -1
  store i32 %103, i32* %100, align 4
  br label %104

104:                                              ; preds = %102, %95
  %105 = phi i32 [ %103, %102 ], [ %101, %95 ]
  %106 = icmp eq i32 %105, 0
  br i1 %106, label %107, label %108

107:                                              ; preds = %104
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %93) #16
  br label %108

108:                                              ; preds = %107, %104, %92
  %109 = load i8, i8* %53, align 1
  %110 = icmp slt i8 %109, 0
  br i1 %110, label %111, label %292

111:                                              ; preds = %108
  %112 = load i8*, i8** %56, align 8
  call void @_ZdlPv(i8* %112) #18
  br label %292

113:                                              ; preds = %2
  %114 = bitcast %"class.WTF::Vector.2436"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %114) #16
  %115 = getelementptr inbounds %"class.WTF::Vector.2436", %"class.WTF::Vector.2436"* %9, i64 0, i32 0, i32 0, i32 0
  %116 = getelementptr inbounds %"class.WTF::Vector.2436", %"class.WTF::Vector.2436"* %9, i64 0, i32 0, i32 0, i32 1
  %117 = getelementptr inbounds %"class.WTF::Vector.2436", %"class.WTF::Vector.2436"* %9, i64 0, i32 0, i32 0, i32 2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %114, i8 0, i64 16, i1 false) #16
  %118 = bitcast %"class.mojo::StructPtr.2439"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %118) #16
  %119 = tail call i8* @_Znwm(i64 32) #18, !noalias !114
  %120 = bitcast i8* %119 to %"class.blink::mojom::blink::BatchOperation"*
  tail call void @_ZN5blink5mojom5blink14BatchOperationC1Ev(%"class.blink::mojom::blink::BatchOperation"* nonnull %120) #16, !noalias !114
  %121 = ptrtoint i8* %119 to i64
  %122 = bitcast %"class.mojo::StructPtr.2439"* %10 to i64*
  store i64 %121, i64* %122, align 8, !alias.scope !114
  call void @_ZN3WTF6VectorIN4mojo9StructPtrIN5blink5mojom5blink14BatchOperationEEELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIS7_EEvOT_(%"class.WTF::Vector.2436"* nonnull %9, %"class.mojo::StructPtr.2439"* nonnull dereferenceable(8) %10) #16
  %123 = getelementptr inbounds %"class.mojo::StructPtr.2439", %"class.mojo::StructPtr.2439"* %10, i64 0, i32 0, i32 0, i32 0, i32 0
  %124 = load %"class.blink::mojom::blink::BatchOperation"*, %"class.blink::mojom::blink::BatchOperation"** %123, align 8
  store %"class.blink::mojom::blink::BatchOperation"* null, %"class.blink::mojom::blink::BatchOperation"** %123, align 8
  %125 = icmp eq %"class.blink::mojom::blink::BatchOperation"* %124, null
  br i1 %125, label %128, label %126

126:                                              ; preds = %113
  %127 = bitcast %"class.blink::mojom::blink::BatchOperation"* %124 to i8*
  call void @_ZN5blink5mojom5blink14BatchOperationD1Ev(%"class.blink::mojom::blink::BatchOperation"* nonnull %124) #16
  call void @_ZdlPv(i8* %127) #18
  br label %128

128:                                              ; preds = %126, %113
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %118) #16
  %129 = load i32, i32* %117, align 4
  %130 = add i32 %129, -1
  %131 = call dereferenceable(8) %"class.mojo::StructPtr.2439"* @_ZN3WTF6VectorIN4mojo9StructPtrIN5blink5mojom5blink14BatchOperationEEELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.2436"* nonnull %9, i32 %130) #16
  %132 = getelementptr inbounds %"class.mojo::StructPtr.2439", %"class.mojo::StructPtr.2439"* %131, i64 0, i32 0, i32 0, i32 0, i32 0
  %133 = load %"class.blink::mojom::blink::BatchOperation"*, %"class.blink::mojom::blink::BatchOperation"** %132, align 8
  %134 = getelementptr inbounds %"class.blink::mojom::blink::BatchOperation", %"class.blink::mojom::blink::BatchOperation"* %133, i64 0, i32 0
  store i32 2, i32* %134, align 8
  %135 = call i8* @_Znwm(i64 264) #18, !noalias !117
  %136 = bitcast i8* %135 to %"class.blink::mojom::blink::FetchAPIRequest"*
  call void @_ZN5blink5mojom5blink15FetchAPIRequestC1Ev(%"class.blink::mojom::blink::FetchAPIRequest"* nonnull %136) #16, !noalias !117
  %137 = ptrtoint i8* %135 to i64
  %138 = load %"class.blink::mojom::blink::BatchOperation"*, %"class.blink::mojom::blink::BatchOperation"** %132, align 8
  %139 = getelementptr inbounds %"class.blink::mojom::blink::BatchOperation", %"class.blink::mojom::blink::BatchOperation"* %138, i64 0, i32 1
  %140 = getelementptr inbounds %"class.mojo::StructPtr.1985", %"class.mojo::StructPtr.1985"* %139, i64 0, i32 0, i32 0, i32 0, i32 0
  %141 = load %"class.blink::mojom::blink::FetchAPIRequest"*, %"class.blink::mojom::blink::FetchAPIRequest"** %140, align 8
  store %"class.blink::mojom::blink::FetchAPIRequest"* null, %"class.blink::mojom::blink::FetchAPIRequest"** %140, align 8
  %142 = icmp eq %"class.blink::mojom::blink::FetchAPIRequest"* %141, null
  br i1 %142, label %143, label %145

143:                                              ; preds = %128
  %144 = bitcast %"class.mojo::StructPtr.1985"* %139 to i64*
  store i64 %137, i64* %144, align 8
  br label %152

145:                                              ; preds = %128
  call void @_ZN5blink5mojom5blink15FetchAPIRequestD1Ev(%"class.blink::mojom::blink::FetchAPIRequest"* nonnull %141) #16
  %146 = bitcast %"class.blink::mojom::blink::FetchAPIRequest"* %141 to i8*
  call void @_ZdlPv(i8* %146) #18
  %147 = bitcast %"class.mojo::StructPtr.1985"* %139 to i64*
  %148 = load %"class.blink::mojom::blink::FetchAPIRequest"*, %"class.blink::mojom::blink::FetchAPIRequest"** %140, align 8
  store i64 %137, i64* %147, align 8
  %149 = icmp eq %"class.blink::mojom::blink::FetchAPIRequest"* %148, null
  br i1 %149, label %152, label %150

150:                                              ; preds = %145
  call void @_ZN5blink5mojom5blink15FetchAPIRequestD1Ev(%"class.blink::mojom::blink::FetchAPIRequest"* nonnull %148) #16
  %151 = bitcast %"class.blink::mojom::blink::FetchAPIRequest"* %148 to i8*
  call void @_ZdlPv(i8* %151) #18
  br label %152

152:                                              ; preds = %150, %145, %143
  %153 = getelementptr inbounds %"class.blink::KURL", %"class.blink::KURL"* %11, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 112, i8* nonnull %153) #16
  call void @_ZN5blink4KURLC1ERKN3WTF6StringE(%"class.blink::KURL"* nonnull %11, %"class.WTF::String"* nonnull dereferenceable(8) %4) #16
  %154 = load %"class.blink::mojom::blink::BatchOperation"*, %"class.blink::mojom::blink::BatchOperation"** %132, align 8
  %155 = getelementptr inbounds %"class.blink::mojom::blink::BatchOperation", %"class.blink::mojom::blink::BatchOperation"* %154, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %156 = load %"class.blink::mojom::blink::FetchAPIRequest"*, %"class.blink::mojom::blink::FetchAPIRequest"** %155, align 8
  %157 = getelementptr inbounds %"class.blink::mojom::blink::FetchAPIRequest", %"class.blink::mojom::blink::FetchAPIRequest"* %156, i64 0, i32 4
  %158 = call dereferenceable(112) %"class.blink::KURL"* @_ZN5blink4KURLaSERKS0_(%"class.blink::KURL"* %157, %"class.blink::KURL"* nonnull dereferenceable(112) %11) #16
  call void @_ZN5blink4KURLD1Ev(%"class.blink::KURL"* nonnull %11) #16
  call void @llvm.lifetime.end.p0i8(i64 112, i8* nonnull %153) #16
  %159 = bitcast %"class.WTF::String"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %159) #16
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %12, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.6, i64 0, i64 0), i64 3) #16
  %160 = load %"class.blink::mojom::blink::BatchOperation"*, %"class.blink::mojom::blink::BatchOperation"** %132, align 8
  %161 = getelementptr inbounds %"class.blink::mojom::blink::BatchOperation", %"class.blink::mojom::blink::BatchOperation"* %160, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %162 = load %"class.blink::mojom::blink::FetchAPIRequest"*, %"class.blink::mojom::blink::FetchAPIRequest"** %161, align 8
  %163 = getelementptr inbounds %"class.blink::mojom::blink::FetchAPIRequest", %"class.blink::mojom::blink::FetchAPIRequest"* %162, i64 0, i32 5
  %164 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %12, i64 0, i32 0, i32 0
  %165 = bitcast %"class.WTF::String"* %12 to i64*
  %166 = load i64, i64* %165, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %164, align 8
  %167 = bitcast %"class.WTF::String"* %163 to i64*
  %168 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %163, i64 0, i32 0, i32 0
  %169 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %168, align 8
  store i64 %166, i64* %167, align 8
  %170 = icmp eq %"class.WTF::StringImpl"* %169, null
  br i1 %170, label %184, label %171

171:                                              ; preds = %152
  %172 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %169, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %173 = load atomic i32, i32* %172 monotonic, align 4
  %174 = and i32 %173, 2
  %175 = icmp eq i32 %174, 0
  %176 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %169, i64 0, i32 0
  %177 = load i32, i32* %176, align 4
  br i1 %175, label %178, label %180

178:                                              ; preds = %171
  %179 = add i32 %177, -1
  store i32 %179, i32* %176, align 4
  br label %180

180:                                              ; preds = %178, %171
  %181 = phi i32 [ %179, %178 ], [ %177, %171 ]
  %182 = icmp eq i32 %181, 0
  br i1 %182, label %183, label %184

183:                                              ; preds = %180
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %169) #16
  br label %184

184:                                              ; preds = %183, %180, %152
  %185 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %164, align 8
  %186 = icmp eq %"class.WTF::StringImpl"* %185, null
  br i1 %186, label %200, label %187

187:                                              ; preds = %184
  %188 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %185, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %189 = load atomic i32, i32* %188 monotonic, align 4
  %190 = and i32 %189, 2
  %191 = icmp eq i32 %190, 0
  %192 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %185, i64 0, i32 0
  %193 = load i32, i32* %192, align 4
  br i1 %191, label %194, label %196

194:                                              ; preds = %187
  %195 = add i32 %193, -1
  store i32 %195, i32* %192, align 4
  br label %196

196:                                              ; preds = %194, %187
  %197 = phi i32 [ %195, %194 ], [ %193, %187 ]
  %198 = icmp eq i32 %197, 0
  br i1 %198, label %199, label %200

199:                                              ; preds = %196
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %185) #16
  br label %200

200:                                              ; preds = %199, %196, %184
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %159) #16
  %201 = bitcast %"class.mojo::AssociatedRemote.2215"* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %201) #16
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %201, i8 -86, i64 24, i1 false) #16
  %202 = bitcast %"class.mojo::AssociatedRemote.2215"* %13 to %"class.mojo::internal::AssociatedInterfacePtrStateBase"*
  call void @_ZN4mojo8internal31AssociatedInterfacePtrStateBaseC2Ev(%"class.mojo::internal::AssociatedInterfacePtrStateBase"* nonnull %202) #16
  %203 = getelementptr inbounds %"class.mojo::AssociatedRemote.2215", %"class.mojo::AssociatedRemote.2215"* %13, i64 0, i32 0, i32 1
  %204 = bitcast %"class.std::__1::unique_ptr.2217"* %203 to i64*
  store i64 0, i64* %204, align 8
  %205 = getelementptr inbounds %"class.blink::mojom::blink::OpenResult", %"class.blink::mojom::blink::OpenResult"* %33, i64 0, i32 1, i32 0
  %206 = load %"class.mojo::PendingAssociatedRemote"*, %"class.mojo::PendingAssociatedRemote"** %205, align 8
  %207 = getelementptr inbounds %"class.mojo::PendingAssociatedRemote", %"class.mojo::PendingAssociatedRemote"* %14, i64 0, i32 0
  %208 = getelementptr inbounds %"class.mojo::PendingAssociatedRemote", %"class.mojo::PendingAssociatedRemote"* %206, i64 0, i32 0
  call void @_ZN4mojo29ScopedInterfaceEndpointHandleC1EOS0_(%"class.mojo::ScopedInterfaceEndpointHandle"* nonnull %207, %"class.mojo::ScopedInterfaceEndpointHandle"* dereferenceable(8) %208) #16
  %209 = getelementptr inbounds %"class.mojo::PendingAssociatedRemote", %"class.mojo::PendingAssociatedRemote"* %14, i64 0, i32 1
  %210 = getelementptr inbounds %"class.mojo::PendingAssociatedRemote", %"class.mojo::PendingAssociatedRemote"* %206, i64 0, i32 1
  %211 = load i32, i32* %210, align 8
  store i32 %211, i32* %209, align 8
  call void @_ZN4mojo16AssociatedRemoteIN5blink5mojom5blink17CacheStorageCacheEE4BindENS_23PendingAssociatedRemoteIS4_EE13scoped_refptrIN4base19SequencedTaskRunnerEE(%"class.mojo::AssociatedRemote.2215"* nonnull %13, %"class.mojo::PendingAssociatedRemote"* nonnull %14, %"class.base::SequencedTaskRunner"* null) #16
  call void @_ZN4mojo29ScopedInterfaceEndpointHandleD1Ev(%"class.mojo::ScopedInterfaceEndpointHandle"* nonnull %207) #16
  %212 = getelementptr inbounds %"class.mojo::AssociatedRemote.2215", %"class.mojo::AssociatedRemote.2215"* %13, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %213 = load %"class.blink::mojom::blink::CacheStorageCacheProxy"*, %"class.blink::mojom::blink::CacheStorageCacheProxy"** %212, align 8
  %214 = getelementptr inbounds %"class.WTF::Vector.2436", %"class.WTF::Vector.2436"* %15, i64 0, i32 0, i32 0, i32 1
  %215 = getelementptr inbounds %"class.WTF::Vector.2436", %"class.WTF::Vector.2436"* %15, i64 0, i32 0, i32 0, i32 2
  %216 = bitcast %"class.WTF::Vector.2436"* %9 to i64*
  %217 = bitcast %"class.WTF::Vector.2436"* %15 to i64*
  store i64 0, i64* %217, align 8
  %218 = load i64, i64* %216, align 8
  store atomic i64 0, i64* %216 monotonic, align 8
  store atomic i64 %218, i64* %217 monotonic, align 8
  %219 = load i32, i32* %116, align 8
  store i32 %219, i32* %214, align 8
  store i32 0, i32* %116, align 8
  %220 = load i32, i32* %117, align 4
  store i32 %220, i32* %215, align 4
  store i32 0, i32* %117, align 4
  %221 = call i8* @_Znwm(i64 72) #18, !noalias !120
  %222 = bitcast i8* %221 to %"class.base::internal::BindStateBase"*
  call void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_E(%"class.base::internal::BindStateBase"* nonnull %222, void ()* bitcast (void (%"class.base::internal::BindStateBase"*, %"class.mojo::InlinedStructPtr.2455"*)* @"_ZN4base8internal7InvokerINS0_9BindStateIZZN5blink26InspectorCacheStorageAgent11deleteEntryERKN3WTF6StringES8_NSt3__110unique_ptrINS3_8protocol12CacheStorage7Backend19DeleteEntryCallbackENS9_14default_deleteISE_EEEEENK3$_3clES6_S6_lSH_N4mojo9StructPtrINS3_5mojom5blink10OpenResultEEEEUlNSJ_16AssociatedRemoteINSM_17CacheStorageCacheEEESH_NSJ_16InlinedStructPtrINSM_24CacheStorageVerboseErrorEEEE_JSR_SH_EEEFvSU_EE7RunOnceEPNS0_13BindStateBaseEOSU_" to void ()*), void (%"class.base::internal::BindStateBase"*)* nonnull @"_ZN4base8internal9BindStateIZZN5blink26InspectorCacheStorageAgent11deleteEntryERKN3WTF6StringES7_NSt3__110unique_ptrINS2_8protocol12CacheStorage7Backend19DeleteEntryCallbackENS8_14default_deleteISD_EEEEENK3$_3clES5_S5_lSG_N4mojo9StructPtrINS2_5mojom5blink10OpenResultEEEEUlNSI_16AssociatedRemoteINSL_17CacheStorageCacheEEESG_NSI_16InlinedStructPtrINSL_24CacheStorageVerboseErrorEEEE_JSQ_SG_EE7DestroyEPKNS0_13BindStateBaseE") #16, !noalias !120
  %223 = getelementptr inbounds i8, i8* %221, i64 40
  %224 = bitcast i8* %223 to %"class.mojo::internal::AssociatedInterfacePtrStateBase"*
  call void @_ZN4mojo8internal31AssociatedInterfacePtrStateBaseC2Ev(%"class.mojo::internal::AssociatedInterfacePtrStateBase"* %224) #16, !noalias !120
  %225 = getelementptr inbounds i8, i8* %221, i64 56
  %226 = bitcast i8* %225 to i64*
  store i64 0, i64* %226, align 8, !noalias !120
  call void @_ZN4mojo8internal31AssociatedInterfacePtrStateBase4SwapEPS1_(%"class.mojo::internal::AssociatedInterfacePtrStateBase"* %224, %"class.mojo::internal::AssociatedInterfacePtrStateBase"* nonnull %202) #16, !noalias !120
  %227 = load i64, i64* %204, align 8, !noalias !120
  %228 = load i64, i64* %226, align 8, !noalias !120
  store i64 %228, i64* %204, align 8, !noalias !120
  store i64 %227, i64* %226, align 8, !noalias !120
  %229 = getelementptr inbounds i8, i8* %221, i64 64
  %230 = bitcast i8* %229 to i64*
  store i64 %30, i64* %230, align 8, !noalias !120
  %231 = bitcast %"class.base::OnceCallback.2448"* %16 to i8**
  store i8* %221, i8** %231, align 8, !alias.scope !120
  call void @_ZN5blink5mojom5blink22CacheStorageCacheProxy5BatchEN3WTF6VectorIN4mojo9StructPtrINS1_14BatchOperationEEELj0ENS3_18PartitionAllocatorEEElN4base12OnceCallbackIFvNS5_16InlinedStructPtrINS1_24CacheStorageVerboseErrorEEEEEE(%"class.blink::mojom::blink::CacheStorageCacheProxy"* %213, %"class.WTF::Vector.2436"* nonnull %15, i64 %27, %"class.base::OnceCallback.2448"* nonnull %16) #16
  %232 = getelementptr inbounds %"class.base::OnceCallback.2448", %"class.base::OnceCallback.2448"* %16, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %232) #16
  %233 = getelementptr inbounds %"class.WTF::Vector.2436", %"class.WTF::Vector.2436"* %15, i64 0, i32 0, i32 0, i32 0
  %234 = load %"class.mojo::StructPtr.2439"*, %"class.mojo::StructPtr.2439"** %233, align 8
  %235 = icmp eq %"class.mojo::StructPtr.2439"* %234, null
  br i1 %235, label %258, label %236, !prof !2

236:                                              ; preds = %200
  %237 = bitcast %"class.mojo::StructPtr.2439"* %234 to i8*
  %238 = load i32, i32* %215, align 4
  %239 = icmp eq i32 %238, 0
  br i1 %239, label %256, label %240, !prof !3

240:                                              ; preds = %236
  %241 = zext i32 %238 to i64
  %242 = getelementptr inbounds %"class.mojo::StructPtr.2439", %"class.mojo::StructPtr.2439"* %234, i64 %241
  br label %243

243:                                              ; preds = %250, %240
  %244 = phi %"class.mojo::StructPtr.2439"* [ %251, %250 ], [ %234, %240 ]
  %245 = getelementptr inbounds %"class.mojo::StructPtr.2439", %"class.mojo::StructPtr.2439"* %244, i64 0, i32 0, i32 0, i32 0, i32 0
  %246 = load %"class.blink::mojom::blink::BatchOperation"*, %"class.blink::mojom::blink::BatchOperation"** %245, align 8
  store %"class.blink::mojom::blink::BatchOperation"* null, %"class.blink::mojom::blink::BatchOperation"** %245, align 8
  %247 = icmp eq %"class.blink::mojom::blink::BatchOperation"* %246, null
  br i1 %247, label %250, label %248

248:                                              ; preds = %243
  call void @_ZN5blink5mojom5blink14BatchOperationD1Ev(%"class.blink::mojom::blink::BatchOperation"* nonnull %246) #16
  %249 = bitcast %"class.blink::mojom::blink::BatchOperation"* %246 to i8*
  call void @_ZdlPv(i8* %249) #18
  br label %250

250:                                              ; preds = %248, %243
  %251 = getelementptr inbounds %"class.mojo::StructPtr.2439", %"class.mojo::StructPtr.2439"* %244, i64 1
  %252 = icmp eq %"class.mojo::StructPtr.2439"* %251, %242
  br i1 %252, label %253, label %243

253:                                              ; preds = %250
  store i32 0, i32* %215, align 4
  %254 = bitcast %"class.WTF::Vector.2436"* %15 to i8**
  %255 = load i8*, i8** %254, align 8
  br label %256

256:                                              ; preds = %253, %236
  %257 = phi i8* [ %255, %253 ], [ %237, %236 ]
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %257) #16
  store %"class.mojo::StructPtr.2439"* null, %"class.mojo::StructPtr.2439"** %233, align 8
  br label %258

258:                                              ; preds = %256, %200
  %259 = load %"class.blink::mojom::blink::CacheStorageCacheProxy"*, %"class.blink::mojom::blink::CacheStorageCacheProxy"** %212, align 8
  store %"class.blink::mojom::blink::CacheStorageCacheProxy"* null, %"class.blink::mojom::blink::CacheStorageCacheProxy"** %212, align 8
  %260 = icmp eq %"class.blink::mojom::blink::CacheStorageCacheProxy"* %259, null
  br i1 %260, label %266, label %261

261:                                              ; preds = %258
  %262 = bitcast %"class.blink::mojom::blink::CacheStorageCacheProxy"* %259 to void (%"class.blink::mojom::blink::CacheStorageCacheProxy"*)***
  %263 = load void (%"class.blink::mojom::blink::CacheStorageCacheProxy"*)**, void (%"class.blink::mojom::blink::CacheStorageCacheProxy"*)*** %262, align 8
  %264 = getelementptr inbounds void (%"class.blink::mojom::blink::CacheStorageCacheProxy"*)*, void (%"class.blink::mojom::blink::CacheStorageCacheProxy"*)** %263, i64 1
  %265 = load void (%"class.blink::mojom::blink::CacheStorageCacheProxy"*)*, void (%"class.blink::mojom::blink::CacheStorageCacheProxy"*)** %264, align 8
  call void %265(%"class.blink::mojom::blink::CacheStorageCacheProxy"* nonnull %259) #16
  br label %266

266:                                              ; preds = %261, %258
  call void @_ZN4mojo8internal31AssociatedInterfacePtrStateBaseD2Ev(%"class.mojo::internal::AssociatedInterfacePtrStateBase"* nonnull %202) #16
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %201) #16
  %267 = load %"class.mojo::StructPtr.2439"*, %"class.mojo::StructPtr.2439"** %115, align 8
  %268 = icmp eq %"class.mojo::StructPtr.2439"* %267, null
  br i1 %268, label %291, label %269, !prof !2

269:                                              ; preds = %266
  %270 = bitcast %"class.mojo::StructPtr.2439"* %267 to i8*
  %271 = load i32, i32* %117, align 4
  %272 = icmp eq i32 %271, 0
  br i1 %272, label %289, label %273, !prof !3

273:                                              ; preds = %269
  %274 = zext i32 %271 to i64
  %275 = getelementptr inbounds %"class.mojo::StructPtr.2439", %"class.mojo::StructPtr.2439"* %267, i64 %274
  br label %276

276:                                              ; preds = %283, %273
  %277 = phi %"class.mojo::StructPtr.2439"* [ %284, %283 ], [ %267, %273 ]
  %278 = getelementptr inbounds %"class.mojo::StructPtr.2439", %"class.mojo::StructPtr.2439"* %277, i64 0, i32 0, i32 0, i32 0, i32 0
  %279 = load %"class.blink::mojom::blink::BatchOperation"*, %"class.blink::mojom::blink::BatchOperation"** %278, align 8
  store %"class.blink::mojom::blink::BatchOperation"* null, %"class.blink::mojom::blink::BatchOperation"** %278, align 8
  %280 = icmp eq %"class.blink::mojom::blink::BatchOperation"* %279, null
  br i1 %280, label %283, label %281

281:                                              ; preds = %276
  call void @_ZN5blink5mojom5blink14BatchOperationD1Ev(%"class.blink::mojom::blink::BatchOperation"* nonnull %279) #16
  %282 = bitcast %"class.blink::mojom::blink::BatchOperation"* %279 to i8*
  call void @_ZdlPv(i8* %282) #18
  br label %283

283:                                              ; preds = %281, %276
  %284 = getelementptr inbounds %"class.mojo::StructPtr.2439", %"class.mojo::StructPtr.2439"* %277, i64 1
  %285 = icmp eq %"class.mojo::StructPtr.2439"* %284, %275
  br i1 %285, label %286, label %276

286:                                              ; preds = %283
  store i32 0, i32* %117, align 4
  %287 = bitcast %"class.WTF::Vector.2436"* %9 to i8**
  %288 = load i8*, i8** %287, align 8
  br label %289

289:                                              ; preds = %286, %269
  %290 = phi i8* [ %288, %286 ], [ %270, %269 ]
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %290) #16
  store %"class.mojo::StructPtr.2439"* null, %"class.mojo::StructPtr.2439"** %115, align 8
  br label %291

291:                                              ; preds = %289, %266
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %114) #16
  br label %299

292:                                              ; preds = %111, %108
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %51) #16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %50) #16
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %49) #16
  %293 = icmp eq i64 %30, 0
  br i1 %293, label %299, label %294

294:                                              ; preds = %292
  %295 = inttoptr i64 %30 to void (%"class.blink::protocol::CacheStorage::Backend::DeleteEntryCallback"*)***
  %296 = load void (%"class.blink::protocol::CacheStorage::Backend::DeleteEntryCallback"*)**, void (%"class.blink::protocol::CacheStorage::Backend::DeleteEntryCallback"*)*** %295, align 8
  %297 = getelementptr inbounds void (%"class.blink::protocol::CacheStorage::Backend::DeleteEntryCallback"*)*, void (%"class.blink::protocol::CacheStorage::Backend::DeleteEntryCallback"*)** %296, i64 4
  %298 = load void (%"class.blink::protocol::CacheStorage::Backend::DeleteEntryCallback"*)*, void (%"class.blink::protocol::CacheStorage::Backend::DeleteEntryCallback"*)** %297, align 8
  call void %298(%"class.blink::protocol::CacheStorage::Backend::DeleteEntryCallback"* nonnull %34) #16
  br label %299

299:                                              ; preds = %294, %292, %291
  %300 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %43, align 8
  %301 = icmp eq %"class.WTF::StringImpl"* %300, null
  br i1 %301, label %315, label %302

302:                                              ; preds = %299
  %303 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %300, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %304 = load atomic i32, i32* %303 monotonic, align 4
  %305 = and i32 %304, 2
  %306 = icmp eq i32 %305, 0
  %307 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %300, i64 0, i32 0
  %308 = load i32, i32* %307, align 4
  br i1 %306, label %309, label %311

309:                                              ; preds = %302
  %310 = add i32 %308, -1
  store i32 %310, i32* %307, align 4
  br label %311

311:                                              ; preds = %309, %302
  %312 = phi i32 [ %310, %309 ], [ %308, %302 ]
  %313 = icmp eq i32 %312, 0
  br i1 %313, label %314, label %315

314:                                              ; preds = %311
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %300) #16
  br label %315

315:                                              ; preds = %314, %311, %299
  %316 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %41, align 8
  %317 = icmp eq %"class.WTF::StringImpl"* %316, null
  br i1 %317, label %331, label %318

318:                                              ; preds = %315
  %319 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %316, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %320 = load atomic i32, i32* %319 monotonic, align 4
  %321 = and i32 %320, 2
  %322 = icmp eq i32 %321, 0
  %323 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %316, i64 0, i32 0
  %324 = load i32, i32* %323, align 4
  br i1 %322, label %325, label %327

325:                                              ; preds = %318
  %326 = add i32 %324, -1
  store i32 %326, i32* %323, align 4
  br label %327

327:                                              ; preds = %325, %318
  %328 = phi i32 [ %326, %325 ], [ %324, %318 ]
  %329 = icmp eq i32 %328, 0
  br i1 %329, label %330, label %331

330:                                              ; preds = %327
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %316) #16
  br label %331

331:                                              ; preds = %330, %327, %315
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %35) #16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %36) #16
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %37) #16
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %38) #16
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %39) #16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %40) #16
  %332 = icmp eq %"class.blink::mojom::blink::OpenResult"* %33, null
  br i1 %332, label %335, label %333

333:                                              ; preds = %331
  call void @_ZN5blink5mojom5blink10OpenResultD1Ev(%"class.blink::mojom::blink::OpenResult"* nonnull %33) #16
  %334 = bitcast %"class.blink::mojom::blink::OpenResult"* %33 to i8*
  call void @_ZdlPv(i8* %334) #18
  br label %335

335:                                              ; preds = %331, %333
  ret void
}

declare void @_ZN5blink5mojom5blink22CacheStorageCacheProxy5BatchEN3WTF6VectorIN4mojo9StructPtrINS1_14BatchOperationEEELj0ENS3_18PartitionAllocatorEEElN4base12OnceCallbackIFvNS5_16InlinedStructPtrINS1_24CacheStorageVerboseErrorEEEEEE(%"class.blink::mojom::blink::CacheStorageCacheProxy"*, %"class.WTF::Vector.2436"*, i64, %"class.base::OnceCallback.2448"*) unnamed_addr #2

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN4mojo9StructPtrIN5blink5mojom5blink14BatchOperationEEELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIS7_EEvOT_(%"class.WTF::Vector.2436"*, %"class.mojo::StructPtr.2439"* dereferenceable(8)) local_unnamed_addr #13 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::Vector.2436", %"class.WTF::Vector.2436"* %0, i64 0, i32 0, i32 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = add i32 %4, 1
  %6 = getelementptr inbounds %"class.WTF::Vector.2436", %"class.WTF::Vector.2436"* %0, i64 0, i32 0, i32 0, i32 0
  %7 = load %"class.mojo::StructPtr.2439"*, %"class.mojo::StructPtr.2439"** %6, align 8
  %8 = icmp ugt %"class.mojo::StructPtr.2439"* %7, %1
  br i1 %8, label %13, label %9

9:                                                ; preds = %2
  %10 = zext i32 %4 to i64
  %11 = getelementptr inbounds %"class.mojo::StructPtr.2439", %"class.mojo::StructPtr.2439"* %7, i64 %10
  %12 = icmp ugt %"class.mojo::StructPtr.2439"* %11, %1
  br i1 %12, label %37, label %13

13:                                               ; preds = %9, %2
  %14 = getelementptr inbounds %"class.WTF::Vector.2436", %"class.WTF::Vector.2436"* %0, i64 0, i32 0, i32 0, i32 1
  %15 = load i32, i32* %14, align 8
  %16 = lshr i32 %15, 2
  %17 = add i32 %15, 1
  %18 = add i32 %17, %16
  %19 = icmp ugt i32 %18, 4
  %20 = select i1 %19, i32 %18, i32 4
  %21 = icmp ugt i32 %20, %5
  %22 = select i1 %21, i32 %20, i32 %5
  %23 = icmp ult i32 %15, %22
  br i1 %23, label %24, label %68, !prof !2

24:                                               ; preds = %13
  %25 = icmp eq %"class.mojo::StructPtr.2439"* %7, null
  br i1 %25, label %26, label %35

26:                                               ; preds = %24
  %27 = zext i32 %22 to i64
  %28 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIN4mojo9StructPtrIN5blink5mojom5blink14BatchOperationEEEEEmm(i64 %27) #16
  %29 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %28, i8* getelementptr inbounds ([100 x i8], [100 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN4mojo9StructPtrIN5blink5mojom5blink14BatchOperationEEEEEPKcv, i64 0, i64 0)) #16
  %30 = ptrtoint i8* %29 to i64
  %31 = bitcast %"class.WTF::Vector.2436"* %0 to i64*
  store atomic i64 %30, i64* %31 monotonic, align 8
  %32 = lshr i64 %28, 3
  %33 = trunc i64 %32 to i32
  store i32 %33, i32* %14, align 8
  %34 = bitcast i8* %29 to %"class.mojo::StructPtr.2439"*
  br label %68

35:                                               ; preds = %24
  tail call void @_ZN3WTF6VectorIN4mojo9StructPtrIN5blink5mojom5blink14BatchOperationEEELj0ENS_18PartitionAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector.2436"* %0, i32 %22) #16
  %36 = load %"class.mojo::StructPtr.2439"*, %"class.mojo::StructPtr.2439"** %6, align 8
  br label %68

37:                                               ; preds = %9
  %38 = ptrtoint %"class.mojo::StructPtr.2439"* %1 to i64
  %39 = ptrtoint %"class.mojo::StructPtr.2439"* %7 to i64
  %40 = sub i64 %38, %39
  %41 = ashr exact i64 %40, 3
  %42 = getelementptr inbounds %"class.WTF::Vector.2436", %"class.WTF::Vector.2436"* %0, i64 0, i32 0, i32 0, i32 1
  %43 = load i32, i32* %42, align 8
  %44 = lshr i32 %43, 2
  %45 = add i32 %43, 1
  %46 = add i32 %45, %44
  %47 = icmp ugt i32 %46, 4
  %48 = select i1 %47, i32 %46, i32 4
  %49 = icmp ugt i32 %48, %5
  %50 = select i1 %49, i32 %48, i32 %5
  %51 = icmp ult i32 %43, %50
  br i1 %51, label %52, label %65, !prof !2

52:                                               ; preds = %37
  %53 = icmp eq %"class.mojo::StructPtr.2439"* %7, null
  br i1 %53, label %54, label %63

54:                                               ; preds = %52
  %55 = zext i32 %50 to i64
  %56 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIN4mojo9StructPtrIN5blink5mojom5blink14BatchOperationEEEEEmm(i64 %55) #16
  %57 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %56, i8* getelementptr inbounds ([100 x i8], [100 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN4mojo9StructPtrIN5blink5mojom5blink14BatchOperationEEEEEPKcv, i64 0, i64 0)) #16
  %58 = ptrtoint i8* %57 to i64
  %59 = bitcast %"class.WTF::Vector.2436"* %0 to i64*
  store atomic i64 %58, i64* %59 monotonic, align 8
  %60 = lshr i64 %56, 3
  %61 = trunc i64 %60 to i32
  store i32 %61, i32* %42, align 8
  %62 = bitcast i8* %57 to %"class.mojo::StructPtr.2439"*
  br label %65

63:                                               ; preds = %52
  tail call void @_ZN3WTF6VectorIN4mojo9StructPtrIN5blink5mojom5blink14BatchOperationEEELj0ENS_18PartitionAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector.2436"* %0, i32 %50) #16
  %64 = load %"class.mojo::StructPtr.2439"*, %"class.mojo::StructPtr.2439"** %6, align 8
  br label %65

65:                                               ; preds = %37, %54, %63
  %66 = phi %"class.mojo::StructPtr.2439"* [ %7, %37 ], [ %62, %54 ], [ %64, %63 ]
  %67 = getelementptr inbounds %"class.mojo::StructPtr.2439", %"class.mojo::StructPtr.2439"* %66, i64 %41
  br label %68

68:                                               ; preds = %35, %26, %13, %65
  %69 = phi %"class.mojo::StructPtr.2439"* [ %66, %65 ], [ %7, %13 ], [ %34, %26 ], [ %36, %35 ]
  %70 = phi %"class.mojo::StructPtr.2439"* [ %67, %65 ], [ %1, %13 ], [ %1, %26 ], [ %1, %35 ]
  %71 = load i32, i32* %3, align 4
  %72 = zext i32 %71 to i64
  %73 = getelementptr inbounds %"class.mojo::StructPtr.2439", %"class.mojo::StructPtr.2439"* %69, i64 %72
  %74 = bitcast %"class.mojo::StructPtr.2439"* %73 to i64*
  %75 = getelementptr inbounds %"class.mojo::StructPtr.2439", %"class.mojo::StructPtr.2439"* %73, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.blink::mojom::blink::BatchOperation"* null, %"class.blink::mojom::blink::BatchOperation"** %75, align 8
  %76 = bitcast %"class.mojo::StructPtr.2439"* %70 to i64*
  %77 = load i64, i64* %76, align 8
  store i64 %77, i64* %74, align 8
  store i64 0, i64* %76, align 8
  %78 = load i32, i32* %3, align 4
  %79 = add i32 %78, 1
  store i32 %79, i32* %3, align 4
  ret void
}

; Function Attrs: nounwind
declare void @_ZN5blink5mojom5blink14BatchOperationD1Ev(%"class.blink::mojom::blink::BatchOperation"*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN4mojo9StructPtrIN5blink5mojom5blink14BatchOperationEEELj0ENS_18PartitionAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector.2436"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq i32 %1, 0
  br i1 %3, label %4, label %72

4:                                                ; preds = %2
  %5 = getelementptr inbounds %"class.WTF::Vector.2436", %"class.WTF::Vector.2436"* %0, i64 0, i32 0, i32 0, i32 0
  %6 = load %"class.mojo::StructPtr.2439"*, %"class.mojo::StructPtr.2439"** %5, align 8
  %7 = bitcast %"class.mojo::StructPtr.2439"* %6 to i8*
  %8 = getelementptr inbounds %"class.WTF::Vector.2436", %"class.WTF::Vector.2436"* %0, i64 0, i32 0, i32 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = zext i32 %9 to i64
  %11 = getelementptr inbounds %"class.mojo::StructPtr.2439", %"class.mojo::StructPtr.2439"* %6, i64 %10
  %12 = bitcast %"class.WTF::Vector.2436"* %0 to i64*
  store atomic i64 0, i64* %12 monotonic, align 8
  %13 = getelementptr inbounds %"class.WTF::Vector.2436", %"class.WTF::Vector.2436"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 0, i32* %13, align 8
  %14 = icmp eq i32 %9, 0
  br i1 %14, label %71, label %15

15:                                               ; preds = %4
  %16 = shl nuw nsw i64 %10, 3
  %17 = add nsw i64 %16, -8
  %18 = lshr exact i64 %17, 3
  %19 = add nuw nsw i64 %18, 1
  %20 = and i64 %19, 3
  %21 = icmp eq i64 %20, 0
  br i1 %21, label %35, label %22

22:                                               ; preds = %15, %22
  %23 = phi %"class.mojo::StructPtr.2439"* [ %32, %22 ], [ %6, %15 ]
  %24 = phi %"class.mojo::StructPtr.2439"* [ %31, %22 ], [ null, %15 ]
  %25 = phi i64 [ %33, %22 ], [ %20, %15 ]
  %26 = bitcast %"class.mojo::StructPtr.2439"* %24 to i64*
  %27 = getelementptr inbounds %"class.mojo::StructPtr.2439", %"class.mojo::StructPtr.2439"* %24, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.blink::mojom::blink::BatchOperation"* null, %"class.blink::mojom::blink::BatchOperation"** %27, align 8
  %28 = bitcast %"class.mojo::StructPtr.2439"* %23 to i64*
  %29 = load i64, i64* %28, align 8
  store i64 %29, i64* %26, align 8
  %30 = getelementptr inbounds %"class.mojo::StructPtr.2439", %"class.mojo::StructPtr.2439"* %23, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.blink::mojom::blink::BatchOperation"* null, %"class.blink::mojom::blink::BatchOperation"** %30, align 8
  %31 = getelementptr inbounds %"class.mojo::StructPtr.2439", %"class.mojo::StructPtr.2439"* %24, i64 1
  %32 = getelementptr inbounds %"class.mojo::StructPtr.2439", %"class.mojo::StructPtr.2439"* %23, i64 1
  %33 = add i64 %25, -1
  %34 = icmp eq i64 %33, 0
  br i1 %34, label %35, label %22, !llvm.loop !127

35:                                               ; preds = %22, %15
  %36 = phi %"class.mojo::StructPtr.2439"* [ %6, %15 ], [ %32, %22 ]
  %37 = phi %"class.mojo::StructPtr.2439"* [ null, %15 ], [ %31, %22 ]
  %38 = icmp ult i64 %17, 24
  br i1 %38, label %71, label %39

39:                                               ; preds = %35, %39
  %40 = phi %"class.mojo::StructPtr.2439"* [ %69, %39 ], [ %36, %35 ]
  %41 = phi %"class.mojo::StructPtr.2439"* [ %68, %39 ], [ %37, %35 ]
  %42 = bitcast %"class.mojo::StructPtr.2439"* %41 to i64*
  %43 = getelementptr inbounds %"class.mojo::StructPtr.2439", %"class.mojo::StructPtr.2439"* %41, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.blink::mojom::blink::BatchOperation"* null, %"class.blink::mojom::blink::BatchOperation"** %43, align 8
  %44 = bitcast %"class.mojo::StructPtr.2439"* %40 to i64*
  %45 = load i64, i64* %44, align 8
  store i64 %45, i64* %42, align 8
  %46 = getelementptr inbounds %"class.mojo::StructPtr.2439", %"class.mojo::StructPtr.2439"* %40, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.blink::mojom::blink::BatchOperation"* null, %"class.blink::mojom::blink::BatchOperation"** %46, align 8
  %47 = getelementptr inbounds %"class.mojo::StructPtr.2439", %"class.mojo::StructPtr.2439"* %41, i64 1
  %48 = getelementptr inbounds %"class.mojo::StructPtr.2439", %"class.mojo::StructPtr.2439"* %40, i64 1
  %49 = bitcast %"class.mojo::StructPtr.2439"* %47 to i64*
  %50 = getelementptr inbounds %"class.mojo::StructPtr.2439", %"class.mojo::StructPtr.2439"* %47, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.blink::mojom::blink::BatchOperation"* null, %"class.blink::mojom::blink::BatchOperation"** %50, align 8
  %51 = bitcast %"class.mojo::StructPtr.2439"* %48 to i64*
  %52 = load i64, i64* %51, align 8
  store i64 %52, i64* %49, align 8
  %53 = getelementptr inbounds %"class.mojo::StructPtr.2439", %"class.mojo::StructPtr.2439"* %48, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.blink::mojom::blink::BatchOperation"* null, %"class.blink::mojom::blink::BatchOperation"** %53, align 8
  %54 = getelementptr inbounds %"class.mojo::StructPtr.2439", %"class.mojo::StructPtr.2439"* %41, i64 2
  %55 = getelementptr inbounds %"class.mojo::StructPtr.2439", %"class.mojo::StructPtr.2439"* %40, i64 2
  %56 = bitcast %"class.mojo::StructPtr.2439"* %54 to i64*
  %57 = getelementptr inbounds %"class.mojo::StructPtr.2439", %"class.mojo::StructPtr.2439"* %54, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.blink::mojom::blink::BatchOperation"* null, %"class.blink::mojom::blink::BatchOperation"** %57, align 8
  %58 = bitcast %"class.mojo::StructPtr.2439"* %55 to i64*
  %59 = load i64, i64* %58, align 8
  store i64 %59, i64* %56, align 8
  %60 = getelementptr inbounds %"class.mojo::StructPtr.2439", %"class.mojo::StructPtr.2439"* %55, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.blink::mojom::blink::BatchOperation"* null, %"class.blink::mojom::blink::BatchOperation"** %60, align 8
  %61 = getelementptr inbounds %"class.mojo::StructPtr.2439", %"class.mojo::StructPtr.2439"* %41, i64 3
  %62 = getelementptr inbounds %"class.mojo::StructPtr.2439", %"class.mojo::StructPtr.2439"* %40, i64 3
  %63 = bitcast %"class.mojo::StructPtr.2439"* %61 to i64*
  %64 = getelementptr inbounds %"class.mojo::StructPtr.2439", %"class.mojo::StructPtr.2439"* %61, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.blink::mojom::blink::BatchOperation"* null, %"class.blink::mojom::blink::BatchOperation"** %64, align 8
  %65 = bitcast %"class.mojo::StructPtr.2439"* %62 to i64*
  %66 = load i64, i64* %65, align 8
  store i64 %66, i64* %63, align 8
  %67 = getelementptr inbounds %"class.mojo::StructPtr.2439", %"class.mojo::StructPtr.2439"* %62, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.blink::mojom::blink::BatchOperation"* null, %"class.blink::mojom::blink::BatchOperation"** %67, align 8
  %68 = getelementptr inbounds %"class.mojo::StructPtr.2439", %"class.mojo::StructPtr.2439"* %41, i64 4
  %69 = getelementptr inbounds %"class.mojo::StructPtr.2439", %"class.mojo::StructPtr.2439"* %40, i64 4
  %70 = icmp eq %"class.mojo::StructPtr.2439"* %69, %11
  br i1 %70, label %71, label %39

71:                                               ; preds = %35, %39, %4
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %7) #16
  br label %152

72:                                               ; preds = %2
  %73 = zext i32 %1 to i64
  %74 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIN4mojo9StructPtrIN5blink5mojom5blink14BatchOperationEEEEEmm(i64 %73) #16
  %75 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %74, i8* getelementptr inbounds ([100 x i8], [100 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN4mojo9StructPtrIN5blink5mojom5blink14BatchOperationEEEEEPKcv, i64 0, i64 0)) #16
  %76 = lshr i64 %74, 3
  %77 = ptrtoint i8* %75 to i64
  %78 = getelementptr inbounds %"class.WTF::Vector.2436", %"class.WTF::Vector.2436"* %0, i64 0, i32 0, i32 0, i32 0
  %79 = load %"class.mojo::StructPtr.2439"*, %"class.mojo::StructPtr.2439"** %78, align 8
  %80 = getelementptr inbounds %"class.WTF::Vector.2436", %"class.WTF::Vector.2436"* %0, i64 0, i32 0, i32 0, i32 2
  %81 = load i32, i32* %80, align 4
  %82 = zext i32 %81 to i64
  %83 = getelementptr inbounds %"class.mojo::StructPtr.2439", %"class.mojo::StructPtr.2439"* %79, i64 %82
  %84 = icmp eq i32 %81, 0
  br i1 %84, label %85, label %87

85:                                               ; preds = %72
  %86 = bitcast %"class.mojo::StructPtr.2439"* %79 to i8*
  br label %147

87:                                               ; preds = %72
  %88 = bitcast i8* %75 to %"class.mojo::StructPtr.2439"*
  %89 = shl nuw nsw i64 %82, 3
  %90 = add nsw i64 %89, -8
  %91 = lshr exact i64 %90, 3
  %92 = add nuw nsw i64 %91, 1
  %93 = and i64 %92, 3
  %94 = icmp eq i64 %93, 0
  br i1 %94, label %108, label %95

95:                                               ; preds = %87, %95
  %96 = phi %"class.mojo::StructPtr.2439"* [ %105, %95 ], [ %79, %87 ]
  %97 = phi %"class.mojo::StructPtr.2439"* [ %104, %95 ], [ %88, %87 ]
  %98 = phi i64 [ %106, %95 ], [ %93, %87 ]
  %99 = bitcast %"class.mojo::StructPtr.2439"* %97 to i64*
  %100 = getelementptr inbounds %"class.mojo::StructPtr.2439", %"class.mojo::StructPtr.2439"* %97, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.blink::mojom::blink::BatchOperation"* null, %"class.blink::mojom::blink::BatchOperation"** %100, align 8
  %101 = bitcast %"class.mojo::StructPtr.2439"* %96 to i64*
  %102 = load i64, i64* %101, align 8
  store i64 %102, i64* %99, align 8
  %103 = getelementptr inbounds %"class.mojo::StructPtr.2439", %"class.mojo::StructPtr.2439"* %96, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.blink::mojom::blink::BatchOperation"* null, %"class.blink::mojom::blink::BatchOperation"** %103, align 8
  %104 = getelementptr inbounds %"class.mojo::StructPtr.2439", %"class.mojo::StructPtr.2439"* %97, i64 1
  %105 = getelementptr inbounds %"class.mojo::StructPtr.2439", %"class.mojo::StructPtr.2439"* %96, i64 1
  %106 = add i64 %98, -1
  %107 = icmp eq i64 %106, 0
  br i1 %107, label %108, label %95, !llvm.loop !128

108:                                              ; preds = %95, %87
  %109 = phi %"class.mojo::StructPtr.2439"* [ %79, %87 ], [ %105, %95 ]
  %110 = phi %"class.mojo::StructPtr.2439"* [ %88, %87 ], [ %104, %95 ]
  %111 = icmp ult i64 %90, 24
  br i1 %111, label %144, label %112

112:                                              ; preds = %108, %112
  %113 = phi %"class.mojo::StructPtr.2439"* [ %142, %112 ], [ %109, %108 ]
  %114 = phi %"class.mojo::StructPtr.2439"* [ %141, %112 ], [ %110, %108 ]
  %115 = bitcast %"class.mojo::StructPtr.2439"* %114 to i64*
  %116 = getelementptr inbounds %"class.mojo::StructPtr.2439", %"class.mojo::StructPtr.2439"* %114, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.blink::mojom::blink::BatchOperation"* null, %"class.blink::mojom::blink::BatchOperation"** %116, align 8
  %117 = bitcast %"class.mojo::StructPtr.2439"* %113 to i64*
  %118 = load i64, i64* %117, align 8
  store i64 %118, i64* %115, align 8
  %119 = getelementptr inbounds %"class.mojo::StructPtr.2439", %"class.mojo::StructPtr.2439"* %113, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.blink::mojom::blink::BatchOperation"* null, %"class.blink::mojom::blink::BatchOperation"** %119, align 8
  %120 = getelementptr inbounds %"class.mojo::StructPtr.2439", %"class.mojo::StructPtr.2439"* %114, i64 1
  %121 = getelementptr inbounds %"class.mojo::StructPtr.2439", %"class.mojo::StructPtr.2439"* %113, i64 1
  %122 = bitcast %"class.mojo::StructPtr.2439"* %120 to i64*
  %123 = getelementptr inbounds %"class.mojo::StructPtr.2439", %"class.mojo::StructPtr.2439"* %120, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.blink::mojom::blink::BatchOperation"* null, %"class.blink::mojom::blink::BatchOperation"** %123, align 8
  %124 = bitcast %"class.mojo::StructPtr.2439"* %121 to i64*
  %125 = load i64, i64* %124, align 8
  store i64 %125, i64* %122, align 8
  %126 = getelementptr inbounds %"class.mojo::StructPtr.2439", %"class.mojo::StructPtr.2439"* %121, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.blink::mojom::blink::BatchOperation"* null, %"class.blink::mojom::blink::BatchOperation"** %126, align 8
  %127 = getelementptr inbounds %"class.mojo::StructPtr.2439", %"class.mojo::StructPtr.2439"* %114, i64 2
  %128 = getelementptr inbounds %"class.mojo::StructPtr.2439", %"class.mojo::StructPtr.2439"* %113, i64 2
  %129 = bitcast %"class.mojo::StructPtr.2439"* %127 to i64*
  %130 = getelementptr inbounds %"class.mojo::StructPtr.2439", %"class.mojo::StructPtr.2439"* %127, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.blink::mojom::blink::BatchOperation"* null, %"class.blink::mojom::blink::BatchOperation"** %130, align 8
  %131 = bitcast %"class.mojo::StructPtr.2439"* %128 to i64*
  %132 = load i64, i64* %131, align 8
  store i64 %132, i64* %129, align 8
  %133 = getelementptr inbounds %"class.mojo::StructPtr.2439", %"class.mojo::StructPtr.2439"* %128, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.blink::mojom::blink::BatchOperation"* null, %"class.blink::mojom::blink::BatchOperation"** %133, align 8
  %134 = getelementptr inbounds %"class.mojo::StructPtr.2439", %"class.mojo::StructPtr.2439"* %114, i64 3
  %135 = getelementptr inbounds %"class.mojo::StructPtr.2439", %"class.mojo::StructPtr.2439"* %113, i64 3
  %136 = bitcast %"class.mojo::StructPtr.2439"* %134 to i64*
  %137 = getelementptr inbounds %"class.mojo::StructPtr.2439", %"class.mojo::StructPtr.2439"* %134, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.blink::mojom::blink::BatchOperation"* null, %"class.blink::mojom::blink::BatchOperation"** %137, align 8
  %138 = bitcast %"class.mojo::StructPtr.2439"* %135 to i64*
  %139 = load i64, i64* %138, align 8
  store i64 %139, i64* %136, align 8
  %140 = getelementptr inbounds %"class.mojo::StructPtr.2439", %"class.mojo::StructPtr.2439"* %135, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.blink::mojom::blink::BatchOperation"* null, %"class.blink::mojom::blink::BatchOperation"** %140, align 8
  %141 = getelementptr inbounds %"class.mojo::StructPtr.2439", %"class.mojo::StructPtr.2439"* %114, i64 4
  %142 = getelementptr inbounds %"class.mojo::StructPtr.2439", %"class.mojo::StructPtr.2439"* %113, i64 4
  %143 = icmp eq %"class.mojo::StructPtr.2439"* %142, %83
  br i1 %143, label %144, label %112

144:                                              ; preds = %112, %108
  %145 = bitcast %"class.WTF::Vector.2436"* %0 to i8**
  %146 = load i8*, i8** %145, align 8
  br label %147

147:                                              ; preds = %85, %144
  %148 = phi i8* [ %146, %144 ], [ %86, %85 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %148) #16
  %149 = bitcast %"class.WTF::Vector.2436"* %0 to i64*
  store atomic i64 %77, i64* %149 monotonic, align 8
  %150 = trunc i64 %76 to i32
  %151 = getelementptr inbounds %"class.WTF::Vector.2436", %"class.WTF::Vector.2436"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 %150, i32* %151, align 8
  br label %152

152:                                              ; preds = %147, %71
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIN4mojo9StructPtrIN5blink5mojom5blink14BatchOperationEEEEEmm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #16
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp ugt i64 %0, 268173312
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #16
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 268173312) #16
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.20, i64 0, i64 0), i8* %11, i8* %12) #16
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #16
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([78 x i8], [78 x i8]* @.str.21, i64 0, i64 0), i32 31, %"class.logging::CheckOpResult"* nonnull %3) #16
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #16
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #16
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #16
  %20 = shl i64 %0, 3
  %21 = call i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64 %20) #16
  ret i64 %21
}

declare void @_ZN5blink5mojom5blink14BatchOperationC1Ev(%"class.blink::mojom::blink::BatchOperation"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(8) %"class.mojo::StructPtr.2439"* @_ZN3WTF6VectorIN4mojo9StructPtrIN5blink5mojom5blink14BatchOperationEEELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.2436"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #16
  %7 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %7, align 8
  %8 = getelementptr inbounds %"class.WTF::Vector.2436", %"class.WTF::Vector.2436"* %0, i64 0, i32 0, i32 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10)
  %11 = icmp ugt i32 %9, %1
  br i1 %11, label %12, label %13

12:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* null, i8** %7, align 8
  br label %22

13:                                               ; preds = %2
  %14 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %1) #16
  %15 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %9) #16
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.39, i64 0, i64 0), i8* %14, i8* %15) #16
  %16 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %17 = load i8*, i8** %16, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* %17, i8** %7, align 8
  %18 = icmp eq i8* %17, null
  br i1 %18, label %22, label %19

19:                                               ; preds = %13
  %20 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #16
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.18, i64 0, i64 0), i32 1172, %"class.logging::CheckOpResult"* nonnull %4) #16
  %21 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #16
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #16
  br label %22

22:                                               ; preds = %12, %13, %19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #16
  %23 = getelementptr inbounds %"class.WTF::Vector.2436", %"class.WTF::Vector.2436"* %0, i64 0, i32 0, i32 0, i32 0
  %24 = load %"class.mojo::StructPtr.2439"*, %"class.mojo::StructPtr.2439"** %23, align 8
  %25 = zext i32 %1 to i64
  %26 = getelementptr inbounds %"class.mojo::StructPtr.2439", %"class.mojo::StructPtr.2439"* %24, i64 %25
  ret %"class.mojo::StructPtr.2439"* %26
}

; Function Attrs: nounwind ssp uwtable
define internal void @"_ZN4base8internal7InvokerINS0_9BindStateIZZN5blink26InspectorCacheStorageAgent11deleteEntryERKN3WTF6StringES8_NSt3__110unique_ptrINS3_8protocol12CacheStorage7Backend19DeleteEntryCallbackENS9_14default_deleteISE_EEEEENK3$_3clES6_S6_lSH_N4mojo9StructPtrINS3_5mojom5blink10OpenResultEEEEUlNSJ_16AssociatedRemoteINSM_17CacheStorageCacheEEESH_NSJ_16InlinedStructPtrINSM_24CacheStorageVerboseErrorEEEE_JSR_SH_EEEFvSU_EE7RunOnceEPNS0_13BindStateBaseEOSU_"(%"class.base::internal::BindStateBase"*, %"class.mojo::InlinedStructPtr.2455"* dereferenceable(24)) #0 align 2 {
  %3 = alloca %"class.crdtp::DispatchResponse", align 8
  %4 = alloca %"class.std::__1::basic_string", align 8
  %5 = alloca %"class.WTF::String", align 8
  %6 = alloca %"class.mojo::AssociatedRemote.2215", align 8
  %7 = alloca %"class.mojo::InlinedStructPtr.2455", align 8
  %8 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 1
  %9 = bitcast %"class.mojo::AssociatedRemote.2215"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %9) #16
  %10 = bitcast %"class.mojo::InlinedStructPtr.2455"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %10) #16
  %11 = bitcast %"class.mojo::AssociatedRemote.2215"* %6 to %"class.mojo::internal::AssociatedInterfacePtrStateBase"*
  call void @_ZN4mojo8internal31AssociatedInterfacePtrStateBaseC2Ev(%"class.mojo::internal::AssociatedInterfacePtrStateBase"* nonnull %11) #16
  %12 = getelementptr inbounds %"class.mojo::AssociatedRemote.2215", %"class.mojo::AssociatedRemote.2215"* %6, i64 0, i32 0, i32 1
  %13 = bitcast %"class.std::__1::unique_ptr.2217"* %12 to i64*
  store i64 0, i64* %13, align 8
  %14 = bitcast void ()** %8 to %"class.mojo::internal::AssociatedInterfacePtrStateBase"*
  call void @_ZN4mojo8internal31AssociatedInterfacePtrStateBase4SwapEPS1_(%"class.mojo::internal::AssociatedInterfacePtrStateBase"* nonnull %11, %"class.mojo::internal::AssociatedInterfacePtrStateBase"* %14) #16
  %15 = getelementptr inbounds void ()*, void ()** %8, i64 2
  %16 = bitcast void ()** %15 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = load i64, i64* %13, align 8
  store i64 %18, i64* %16, align 8
  store i64 %17, i64* %13, align 8
  %19 = getelementptr inbounds void ()*, void ()** %8, i64 3
  %20 = bitcast void ()** %19 to %"class.blink::protocol::CacheStorage::Backend::DeleteEntryCallback"**
  %21 = load %"class.blink::protocol::CacheStorage::Backend::DeleteEntryCallback"*, %"class.blink::protocol::CacheStorage::Backend::DeleteEntryCallback"** %20, align 8
  store %"class.blink::protocol::CacheStorage::Backend::DeleteEntryCallback"* null, %"class.blink::protocol::CacheStorage::Backend::DeleteEntryCallback"** %20, align 8
  %22 = getelementptr inbounds %"class.mojo::InlinedStructPtr.2455", %"class.mojo::InlinedStructPtr.2455"* %7, i64 0, i32 0
  call void @_ZN5blink5mojom5blink24CacheStorageVerboseErrorC1Ev(%"class.blink::mojom::blink::CacheStorageVerboseError"* nonnull %22) #16
  %23 = getelementptr inbounds %"class.mojo::InlinedStructPtr.2455", %"class.mojo::InlinedStructPtr.2455"* %7, i64 0, i32 1
  store i32 0, i32* %23, align 8
  call void @_ZN5blink5mojom5blink24CacheStorageVerboseErrorD1Ev(%"class.blink::mojom::blink::CacheStorageVerboseError"* nonnull %22) #16
  call void @_ZN5blink5mojom5blink24CacheStorageVerboseErrorC1Ev(%"class.blink::mojom::blink::CacheStorageVerboseError"* nonnull %22) #16
  %24 = getelementptr inbounds %"class.mojo::InlinedStructPtr.2455", %"class.mojo::InlinedStructPtr.2455"* %1, i64 0, i32 0
  call void @_ZNSt3__14swapIN5blink5mojom5blink24CacheStorageVerboseErrorEEENS_9enable_ifIXaasr21is_move_constructibleIT_EE5valuesr18is_move_assignableIS6_EE5valueEvE4typeERS6_S9_(%"class.blink::mojom::blink::CacheStorageVerboseError"* nonnull dereferenceable(16) %22, %"class.blink::mojom::blink::CacheStorageVerboseError"* dereferenceable(16) %24) #16
  %25 = getelementptr inbounds %"class.mojo::InlinedStructPtr.2455", %"class.mojo::InlinedStructPtr.2455"* %1, i64 0, i32 1
  %26 = load i32, i32* %23, align 8
  %27 = load i32, i32* %25, align 4
  store i32 %27, i32* %23, align 8
  store i32 %26, i32* %25, align 4
  %28 = bitcast %"class.std::__1::basic_string"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %28) #16
  %29 = getelementptr inbounds %"class.mojo::InlinedStructPtr.2455", %"class.mojo::InlinedStructPtr.2455"* %7, i64 0, i32 0, i32 0
  %30 = load i32, i32* %29, align 8
  %31 = icmp eq i32 %30, 0
  br i1 %31, label %82, label %32

32:                                               ; preds = %2
  %33 = bitcast %"class.crdtp::DispatchResponse"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %33) #16
  %34 = bitcast %"class.WTF::String"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %34) #16
  %35 = add i32 %30, -1
  %36 = icmp ult i32 %35, 9
  br i1 %36, label %37, label %41

37:                                               ; preds = %32
  %38 = sext i32 %35 to i64
  %39 = getelementptr inbounds [9 x i8*], [9 x i8*]* @"switch.table._ZN4base8internal7InvokerINS0_9BindStateIZN5blink26InspectorCacheStorageAgent21requestCachedResponseERKN3WTF6StringES8_NSt3__110unique_ptrINS9_6vectorINSA_INS3_8protocol12CacheStorage6HeaderENS9_14default_deleteISE_EEEENS9_9allocatorISH_EEEENSF_ISK_EEEENSA_INSD_7Backend29RequestCachedResponseCallbackENSF_ISO_EEEEE3$_4JSQ_EEEFvN4mojo9StructPtrINS3_5mojom5blink11MatchResultEEEEE7RunOnceEPNS0_13BindStateBaseEOSY_", i64 0, i64 %38
  %40 = load i8*, i8** %39, align 8
  br label %41

41:                                               ; preds = %32, %37
  %42 = phi i8* [ %40, %37 ], [ getelementptr inbounds ([1 x i8], [1 x i8]* @.str.2, i64 0, i64 0), %32 ]
  %43 = call %"class.WTF::StringImpl"* (i8*, ...) @_ZN3WTF6String6FormatEPKcz(i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.42, i64 0, i64 0), i8* nonnull %42) #16
  %44 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %5, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %43, %"class.WTF::StringImpl"** %44, align 8
  call void @_ZNK3WTF6String4Utf8ENS_18UTF8ConversionModeE(%"class.std::__1::basic_string"* nonnull sret %4, %"class.WTF::String"* nonnull %5, i32 0) #16
  call void @_ZN5crdtp16DispatchResponse11ServerErrorENSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.crdtp::DispatchResponse"* nonnull sret %3, %"class.std::__1::basic_string"* nonnull %4) #16
  %45 = bitcast %"class.blink::protocol::CacheStorage::Backend::DeleteEntryCallback"* %21 to void (%"class.blink::protocol::CacheStorage::Backend::DeleteEntryCallback"*, %"class.crdtp::DispatchResponse"*)***
  %46 = load void (%"class.blink::protocol::CacheStorage::Backend::DeleteEntryCallback"*, %"class.crdtp::DispatchResponse"*)**, void (%"class.blink::protocol::CacheStorage::Backend::DeleteEntryCallback"*, %"class.crdtp::DispatchResponse"*)*** %45, align 8
  %47 = getelementptr inbounds void (%"class.blink::protocol::CacheStorage::Backend::DeleteEntryCallback"*, %"class.crdtp::DispatchResponse"*)*, void (%"class.blink::protocol::CacheStorage::Backend::DeleteEntryCallback"*, %"class.crdtp::DispatchResponse"*)** %46, i64 1
  %48 = load void (%"class.blink::protocol::CacheStorage::Backend::DeleteEntryCallback"*, %"class.crdtp::DispatchResponse"*)*, void (%"class.blink::protocol::CacheStorage::Backend::DeleteEntryCallback"*, %"class.crdtp::DispatchResponse"*)** %47, align 8
  call void %48(%"class.blink::protocol::CacheStorage::Backend::DeleteEntryCallback"* %21, %"class.crdtp::DispatchResponse"* nonnull dereferenceable(32) %3) #16
  %49 = getelementptr inbounds %"class.crdtp::DispatchResponse", %"class.crdtp::DispatchResponse"* %3, i64 0, i32 1
  %50 = bitcast %"class.std::__1::basic_string"* %49 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %51 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %50, i64 0, i32 1, i32 0
  %52 = load i8, i8* %51, align 1
  %53 = icmp slt i8 %52, 0
  br i1 %53, label %54, label %57

54:                                               ; preds = %41
  %55 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %49, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %56 = load i8*, i8** %55, align 8
  call void @_ZdlPv(i8* %56) #18
  br label %57

57:                                               ; preds = %54, %41
  %58 = bitcast %"class.std::__1::basic_string"* %4 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %59 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %58, i64 0, i32 1, i32 0
  %60 = load i8, i8* %59, align 1
  %61 = icmp slt i8 %60, 0
  br i1 %61, label %62, label %65

62:                                               ; preds = %57
  %63 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %64 = load i8*, i8** %63, align 8
  call void @_ZdlPv(i8* %64) #18
  br label %65

65:                                               ; preds = %62, %57
  %66 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %44, align 8
  %67 = icmp eq %"class.WTF::StringImpl"* %66, null
  br i1 %67, label %81, label %68

68:                                               ; preds = %65
  %69 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %66, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %70 = load atomic i32, i32* %69 monotonic, align 4
  %71 = and i32 %70, 2
  %72 = icmp eq i32 %71, 0
  %73 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %66, i64 0, i32 0
  %74 = load i32, i32* %73, align 4
  br i1 %72, label %75, label %77

75:                                               ; preds = %68
  %76 = add i32 %74, -1
  store i32 %76, i32* %73, align 4
  br label %77

77:                                               ; preds = %75, %68
  %78 = phi i32 [ %76, %75 ], [ %74, %68 ]
  %79 = icmp eq i32 %78, 0
  br i1 %79, label %80, label %81

80:                                               ; preds = %77
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %66) #16
  br label %81

81:                                               ; preds = %80, %77, %65
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %34) #16
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %33) #16
  br label %86

82:                                               ; preds = %2
  %83 = bitcast %"class.blink::protocol::CacheStorage::Backend::DeleteEntryCallback"* %21 to void (%"class.blink::protocol::CacheStorage::Backend::DeleteEntryCallback"*)***
  %84 = load void (%"class.blink::protocol::CacheStorage::Backend::DeleteEntryCallback"*)**, void (%"class.blink::protocol::CacheStorage::Backend::DeleteEntryCallback"*)*** %83, align 8
  %85 = load void (%"class.blink::protocol::CacheStorage::Backend::DeleteEntryCallback"*)*, void (%"class.blink::protocol::CacheStorage::Backend::DeleteEntryCallback"*)** %84, align 8
  call void %85(%"class.blink::protocol::CacheStorage::Backend::DeleteEntryCallback"* %21) #16
  br label %86

86:                                               ; preds = %82, %81
  %87 = icmp eq %"class.blink::protocol::CacheStorage::Backend::DeleteEntryCallback"* %21, null
  br i1 %87, label %93, label %88

88:                                               ; preds = %86
  %89 = bitcast %"class.blink::protocol::CacheStorage::Backend::DeleteEntryCallback"* %21 to void (%"class.blink::protocol::CacheStorage::Backend::DeleteEntryCallback"*)***
  %90 = load void (%"class.blink::protocol::CacheStorage::Backend::DeleteEntryCallback"*)**, void (%"class.blink::protocol::CacheStorage::Backend::DeleteEntryCallback"*)*** %89, align 8
  %91 = getelementptr inbounds void (%"class.blink::protocol::CacheStorage::Backend::DeleteEntryCallback"*)*, void (%"class.blink::protocol::CacheStorage::Backend::DeleteEntryCallback"*)** %90, i64 4
  %92 = load void (%"class.blink::protocol::CacheStorage::Backend::DeleteEntryCallback"*)*, void (%"class.blink::protocol::CacheStorage::Backend::DeleteEntryCallback"*)** %91, align 8
  call void %92(%"class.blink::protocol::CacheStorage::Backend::DeleteEntryCallback"* nonnull %21) #16
  br label %93

93:                                               ; preds = %88, %86
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %28) #16
  call void @_ZN5blink5mojom5blink24CacheStorageVerboseErrorD1Ev(%"class.blink::mojom::blink::CacheStorageVerboseError"* nonnull %22) #16
  %94 = getelementptr inbounds %"class.mojo::AssociatedRemote.2215", %"class.mojo::AssociatedRemote.2215"* %6, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %95 = load %"class.blink::mojom::blink::CacheStorageCacheProxy"*, %"class.blink::mojom::blink::CacheStorageCacheProxy"** %94, align 8
  store %"class.blink::mojom::blink::CacheStorageCacheProxy"* null, %"class.blink::mojom::blink::CacheStorageCacheProxy"** %94, align 8
  %96 = icmp eq %"class.blink::mojom::blink::CacheStorageCacheProxy"* %95, null
  br i1 %96, label %102, label %97

97:                                               ; preds = %93
  %98 = bitcast %"class.blink::mojom::blink::CacheStorageCacheProxy"* %95 to void (%"class.blink::mojom::blink::CacheStorageCacheProxy"*)***
  %99 = load void (%"class.blink::mojom::blink::CacheStorageCacheProxy"*)**, void (%"class.blink::mojom::blink::CacheStorageCacheProxy"*)*** %98, align 8
  %100 = getelementptr inbounds void (%"class.blink::mojom::blink::CacheStorageCacheProxy"*)*, void (%"class.blink::mojom::blink::CacheStorageCacheProxy"*)** %99, i64 1
  %101 = load void (%"class.blink::mojom::blink::CacheStorageCacheProxy"*)*, void (%"class.blink::mojom::blink::CacheStorageCacheProxy"*)** %100, align 8
  call void %101(%"class.blink::mojom::blink::CacheStorageCacheProxy"* nonnull %95) #16
  br label %102

102:                                              ; preds = %93, %97
  call void @_ZN4mojo8internal31AssociatedInterfacePtrStateBaseD2Ev(%"class.mojo::internal::AssociatedInterfacePtrStateBase"* nonnull %11) #16
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %9) #16
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %10) #16
  ret void
}

declare void @_ZN5blink5mojom5blink24CacheStorageVerboseErrorC1Ev(%"class.blink::mojom::blink::CacheStorageVerboseError"*) unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN5blink5mojom5blink24CacheStorageVerboseErrorD1Ev(%"class.blink::mojom::blink::CacheStorageVerboseError"*) unnamed_addr #3

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__14swapIN5blink5mojom5blink24CacheStorageVerboseErrorEEENS_9enable_ifIXaasr21is_move_constructibleIT_EE5valuesr18is_move_assignableIS6_EE5valueEvE4typeERS6_S9_(%"class.blink::mojom::blink::CacheStorageVerboseError"* dereferenceable(16), %"class.blink::mojom::blink::CacheStorageVerboseError"* dereferenceable(16)) local_unnamed_addr #11 comdat {
  %3 = alloca %"class.blink::mojom::blink::CacheStorageVerboseError", align 8
  %4 = bitcast %"class.blink::mojom::blink::CacheStorageVerboseError"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %4) #16
  %5 = bitcast %"class.blink::mojom::blink::CacheStorageVerboseError"* %3 to i64*
  store i64 -6148914691236517206, i64* %5, align 8
  %6 = getelementptr inbounds %"class.blink::mojom::blink::CacheStorageVerboseError", %"class.blink::mojom::blink::CacheStorageVerboseError"* %3, i64 0, i32 0
  %7 = getelementptr inbounds %"class.blink::mojom::blink::CacheStorageVerboseError", %"class.blink::mojom::blink::CacheStorageVerboseError"* %0, i64 0, i32 0
  %8 = load i32, i32* %7, align 8
  store i32 %8, i32* %6, align 8
  %9 = getelementptr inbounds %"class.blink::mojom::blink::CacheStorageVerboseError", %"class.blink::mojom::blink::CacheStorageVerboseError"* %0, i64 0, i32 1, i32 0, i32 0
  %10 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %9, align 8
  %11 = getelementptr inbounds %"class.blink::mojom::blink::CacheStorageVerboseError", %"class.blink::mojom::blink::CacheStorageVerboseError"* %3, i64 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* %10, %"class.WTF::StringImpl"** %11, align 8
  %12 = icmp eq %"class.WTF::StringImpl"* %10, null
  br i1 %12, label %30, label %13

13:                                               ; preds = %2
  %14 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %10, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %15 = load atomic i32, i32* %14 monotonic, align 4
  %16 = and i32 %15, 2
  %17 = icmp eq i32 %16, 0
  br i1 %17, label %18, label %30

18:                                               ; preds = %13
  %19 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %10, i64 0, i32 0
  %20 = load i32, i32* %19, align 4
  %21 = zext i32 %20 to i33
  %22 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %21, i33 1) #16
  %23 = extractvalue { i33, i1 } %22, 1
  %24 = extractvalue { i33, i1 } %22, 0
  %25 = icmp slt i33 %24, 0
  %26 = or i1 %23, %25
  br i1 %26, label %27, label %28, !prof !3

27:                                               ; preds = %18
  tail call void @llvm.trap() #16
  unreachable

28:                                               ; preds = %18
  %29 = trunc i33 %24 to i32
  store i32 %29, i32* %19, align 4
  br label %30

30:                                               ; preds = %2, %13, %28
  %31 = getelementptr inbounds %"class.blink::mojom::blink::CacheStorageVerboseError", %"class.blink::mojom::blink::CacheStorageVerboseError"* %1, i64 0, i32 0
  %32 = load i32, i32* %31, align 8
  store i32 %32, i32* %7, align 8
  %33 = getelementptr inbounds %"class.blink::mojom::blink::CacheStorageVerboseError", %"class.blink::mojom::blink::CacheStorageVerboseError"* %0, i64 0, i32 1
  %34 = getelementptr inbounds %"class.blink::mojom::blink::CacheStorageVerboseError", %"class.blink::mojom::blink::CacheStorageVerboseError"* %1, i64 0, i32 1, i32 0, i32 0
  %35 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %34, align 8
  %36 = icmp eq %"class.WTF::StringImpl"* %35, null
  br i1 %36, label %54, label %37

37:                                               ; preds = %30
  %38 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %35, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %39 = load atomic i32, i32* %38 monotonic, align 4
  %40 = and i32 %39, 2
  %41 = icmp eq i32 %40, 0
  br i1 %41, label %42, label %54

42:                                               ; preds = %37
  %43 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %35, i64 0, i32 0
  %44 = load i32, i32* %43, align 4
  %45 = zext i32 %44 to i33
  %46 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %45, i33 1) #16
  %47 = extractvalue { i33, i1 } %46, 1
  %48 = extractvalue { i33, i1 } %46, 0
  %49 = icmp slt i33 %48, 0
  %50 = or i1 %47, %49
  br i1 %50, label %51, label %52, !prof !3

51:                                               ; preds = %42
  tail call void @llvm.trap() #16
  unreachable

52:                                               ; preds = %42
  %53 = trunc i33 %48 to i32
  store i32 %53, i32* %43, align 4
  br label %54

54:                                               ; preds = %52, %37, %30
  %55 = ptrtoint %"class.WTF::StringImpl"* %35 to i64
  %56 = bitcast %"class.WTF::String"* %33 to i64*
  %57 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %33, i64 0, i32 0, i32 0
  %58 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %57, align 8
  store i64 %55, i64* %56, align 8
  %59 = icmp eq %"class.WTF::StringImpl"* %58, null
  br i1 %59, label %73, label %60

60:                                               ; preds = %54
  %61 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %58, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %62 = load atomic i32, i32* %61 monotonic, align 4
  %63 = and i32 %62, 2
  %64 = icmp eq i32 %63, 0
  %65 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %58, i64 0, i32 0
  %66 = load i32, i32* %65, align 4
  br i1 %64, label %67, label %69

67:                                               ; preds = %60
  %68 = add i32 %66, -1
  store i32 %68, i32* %65, align 4
  br label %69

69:                                               ; preds = %67, %60
  %70 = phi i32 [ %68, %67 ], [ %66, %60 ]
  %71 = icmp eq i32 %70, 0
  br i1 %71, label %72, label %73

72:                                               ; preds = %69
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %58) #16
  br label %73

73:                                               ; preds = %54, %69, %72
  %74 = load i32, i32* %6, align 8
  store i32 %74, i32* %31, align 8
  %75 = getelementptr inbounds %"class.blink::mojom::blink::CacheStorageVerboseError", %"class.blink::mojom::blink::CacheStorageVerboseError"* %1, i64 0, i32 1
  %76 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %11, align 8
  %77 = icmp eq %"class.WTF::StringImpl"* %76, null
  br i1 %77, label %95, label %78

78:                                               ; preds = %73
  %79 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %76, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %80 = load atomic i32, i32* %79 monotonic, align 4
  %81 = and i32 %80, 2
  %82 = icmp eq i32 %81, 0
  br i1 %82, label %83, label %95

83:                                               ; preds = %78
  %84 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %76, i64 0, i32 0
  %85 = load i32, i32* %84, align 4
  %86 = zext i32 %85 to i33
  %87 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %86, i33 1) #16
  %88 = extractvalue { i33, i1 } %87, 1
  %89 = extractvalue { i33, i1 } %87, 0
  %90 = icmp slt i33 %89, 0
  %91 = or i1 %88, %90
  br i1 %91, label %92, label %93, !prof !3

92:                                               ; preds = %83
  tail call void @llvm.trap() #16
  unreachable

93:                                               ; preds = %83
  %94 = trunc i33 %89 to i32
  store i32 %94, i32* %84, align 4
  br label %95

95:                                               ; preds = %93, %78, %73
  %96 = ptrtoint %"class.WTF::StringImpl"* %76 to i64
  %97 = bitcast %"class.WTF::String"* %75 to i64*
  %98 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %75, i64 0, i32 0, i32 0
  %99 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %98, align 8
  store i64 %96, i64* %97, align 8
  %100 = icmp eq %"class.WTF::StringImpl"* %99, null
  br i1 %100, label %114, label %101

101:                                              ; preds = %95
  %102 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %99, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %103 = load atomic i32, i32* %102 monotonic, align 4
  %104 = and i32 %103, 2
  %105 = icmp eq i32 %104, 0
  %106 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %99, i64 0, i32 0
  %107 = load i32, i32* %106, align 4
  br i1 %105, label %108, label %110

108:                                              ; preds = %101
  %109 = add i32 %107, -1
  store i32 %109, i32* %106, align 4
  br label %110

110:                                              ; preds = %108, %101
  %111 = phi i32 [ %109, %108 ], [ %107, %101 ]
  %112 = icmp eq i32 %111, 0
  br i1 %112, label %113, label %114

113:                                              ; preds = %110
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %99) #16
  br label %114

114:                                              ; preds = %95, %110, %113
  call void @_ZN5blink5mojom5blink24CacheStorageVerboseErrorD1Ev(%"class.blink::mojom::blink::CacheStorageVerboseError"* nonnull %3) #16
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %4) #16
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @"_ZN4base8internal9BindStateIZZN5blink26InspectorCacheStorageAgent11deleteEntryERKN3WTF6StringES7_NSt3__110unique_ptrINS2_8protocol12CacheStorage7Backend19DeleteEntryCallbackENS8_14default_deleteISD_EEEEENK3$_3clES5_S5_lSG_N4mojo9StructPtrINS2_5mojom5blink10OpenResultEEEEUlNSI_16AssociatedRemoteINSL_17CacheStorageCacheEEESG_NSI_16InlinedStructPtrINSL_24CacheStorageVerboseErrorEEEE_JSQ_SG_EE7DestroyEPKNS0_13BindStateBaseE"(%"class.base::internal::BindStateBase"*) #0 align 2 {
  %2 = icmp eq %"class.base::internal::BindStateBase"* %0, null
  br i1 %2, label %27, label %3

3:                                                ; preds = %1
  %4 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 1
  %5 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 2
  %6 = bitcast %"class.base::internal::BindStateBase"* %5 to %"class.blink::protocol::CacheStorage::Backend::DeleteEntryCallback"**
  %7 = load %"class.blink::protocol::CacheStorage::Backend::DeleteEntryCallback"*, %"class.blink::protocol::CacheStorage::Backend::DeleteEntryCallback"** %6, align 8
  store %"class.blink::protocol::CacheStorage::Backend::DeleteEntryCallback"* null, %"class.blink::protocol::CacheStorage::Backend::DeleteEntryCallback"** %6, align 8
  %8 = icmp eq %"class.blink::protocol::CacheStorage::Backend::DeleteEntryCallback"* %7, null
  br i1 %8, label %14, label %9

9:                                                ; preds = %3
  %10 = bitcast %"class.blink::protocol::CacheStorage::Backend::DeleteEntryCallback"* %7 to void (%"class.blink::protocol::CacheStorage::Backend::DeleteEntryCallback"*)***
  %11 = load void (%"class.blink::protocol::CacheStorage::Backend::DeleteEntryCallback"*)**, void (%"class.blink::protocol::CacheStorage::Backend::DeleteEntryCallback"*)*** %10, align 8
  %12 = getelementptr inbounds void (%"class.blink::protocol::CacheStorage::Backend::DeleteEntryCallback"*)*, void (%"class.blink::protocol::CacheStorage::Backend::DeleteEntryCallback"*)** %11, i64 4
  %13 = load void (%"class.blink::protocol::CacheStorage::Backend::DeleteEntryCallback"*)*, void (%"class.blink::protocol::CacheStorage::Backend::DeleteEntryCallback"*)** %12, align 8
  tail call void %13(%"class.blink::protocol::CacheStorage::Backend::DeleteEntryCallback"* nonnull %7) #16
  br label %14

14:                                               ; preds = %9, %3
  %15 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 3
  %16 = bitcast i1 (%"class.base::internal::BindStateBase"*, i32)** %15 to %"class.blink::mojom::blink::CacheStorageCacheProxy"**
  %17 = load %"class.blink::mojom::blink::CacheStorageCacheProxy"*, %"class.blink::mojom::blink::CacheStorageCacheProxy"** %16, align 8
  store %"class.blink::mojom::blink::CacheStorageCacheProxy"* null, %"class.blink::mojom::blink::CacheStorageCacheProxy"** %16, align 8
  %18 = icmp eq %"class.blink::mojom::blink::CacheStorageCacheProxy"* %17, null
  br i1 %18, label %24, label %19

19:                                               ; preds = %14
  %20 = bitcast %"class.blink::mojom::blink::CacheStorageCacheProxy"* %17 to void (%"class.blink::mojom::blink::CacheStorageCacheProxy"*)***
  %21 = load void (%"class.blink::mojom::blink::CacheStorageCacheProxy"*)**, void (%"class.blink::mojom::blink::CacheStorageCacheProxy"*)*** %20, align 8
  %22 = getelementptr inbounds void (%"class.blink::mojom::blink::CacheStorageCacheProxy"*)*, void (%"class.blink::mojom::blink::CacheStorageCacheProxy"*)** %21, i64 1
  %23 = load void (%"class.blink::mojom::blink::CacheStorageCacheProxy"*)*, void (%"class.blink::mojom::blink::CacheStorageCacheProxy"*)** %22, align 8
  tail call void %23(%"class.blink::mojom::blink::CacheStorageCacheProxy"* nonnull %17) #16
  br label %24

24:                                               ; preds = %14, %19
  %25 = bitcast void ()** %4 to %"class.mojo::internal::AssociatedInterfacePtrStateBase"*
  tail call void @_ZN4mojo8internal31AssociatedInterfacePtrStateBaseD2Ev(%"class.mojo::internal::AssociatedInterfacePtrStateBase"* %25) #16
  %26 = bitcast %"class.base::internal::BindStateBase"* %0 to i8*
  tail call void @_ZdlPv(i8* %26) #18
  br label %27

27:                                               ; preds = %24, %1
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @"_ZN4base8internal9BindStateIZN5blink26InspectorCacheStorageAgent11deleteEntryERKN3WTF6StringES7_NSt3__110unique_ptrINS2_8protocol12CacheStorage7Backend19DeleteEntryCallbackENS8_14default_deleteISD_EEEEE3$_3JS5_S5_lSG_EE7DestroyEPKNS0_13BindStateBaseE"(%"class.base::internal::BindStateBase"*) #0 align 2 {
  %2 = icmp eq %"class.base::internal::BindStateBase"* %0, null
  br i1 %2, label %51, label %3

3:                                                ; preds = %1
  %4 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 2
  %5 = bitcast %"class.base::internal::BindStateBase"* %4 to %"class.blink::protocol::CacheStorage::Backend::DeleteEntryCallback"**
  %6 = load %"class.blink::protocol::CacheStorage::Backend::DeleteEntryCallback"*, %"class.blink::protocol::CacheStorage::Backend::DeleteEntryCallback"** %5, align 8
  store %"class.blink::protocol::CacheStorage::Backend::DeleteEntryCallback"* null, %"class.blink::protocol::CacheStorage::Backend::DeleteEntryCallback"** %5, align 8
  %7 = icmp eq %"class.blink::protocol::CacheStorage::Backend::DeleteEntryCallback"* %6, null
  br i1 %7, label %13, label %8

8:                                                ; preds = %3
  %9 = bitcast %"class.blink::protocol::CacheStorage::Backend::DeleteEntryCallback"* %6 to void (%"class.blink::protocol::CacheStorage::Backend::DeleteEntryCallback"*)***
  %10 = load void (%"class.blink::protocol::CacheStorage::Backend::DeleteEntryCallback"*)**, void (%"class.blink::protocol::CacheStorage::Backend::DeleteEntryCallback"*)*** %9, align 8
  %11 = getelementptr inbounds void (%"class.blink::protocol::CacheStorage::Backend::DeleteEntryCallback"*)*, void (%"class.blink::protocol::CacheStorage::Backend::DeleteEntryCallback"*)** %10, i64 4
  %12 = load void (%"class.blink::protocol::CacheStorage::Backend::DeleteEntryCallback"*)*, void (%"class.blink::protocol::CacheStorage::Backend::DeleteEntryCallback"*)** %11, align 8
  tail call void %12(%"class.blink::protocol::CacheStorage::Backend::DeleteEntryCallback"* nonnull %6) #16
  br label %13

13:                                               ; preds = %8, %3
  %14 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 2
  %15 = bitcast void (%"class.base::internal::BindStateBase"*)** %14 to %"class.WTF::StringImpl"**
  %16 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %15, align 8
  %17 = icmp eq %"class.WTF::StringImpl"* %16, null
  br i1 %17, label %31, label %18

18:                                               ; preds = %13
  %19 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %16, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %20 = load atomic i32, i32* %19 monotonic, align 4
  %21 = and i32 %20, 2
  %22 = icmp eq i32 %21, 0
  %23 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %16, i64 0, i32 0
  %24 = load i32, i32* %23, align 4
  br i1 %22, label %25, label %27

25:                                               ; preds = %18
  %26 = add i32 %24, -1
  store i32 %26, i32* %23, align 4
  br label %27

27:                                               ; preds = %25, %18
  %28 = phi i32 [ %26, %25 ], [ %24, %18 ]
  %29 = icmp eq i32 %28, 0
  br i1 %29, label %30, label %31

30:                                               ; preds = %27
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %16) #16
  br label %31

31:                                               ; preds = %30, %27, %13
  %32 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 1
  %33 = bitcast void ()** %32 to %"class.WTF::StringImpl"**
  %34 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %33, align 8
  %35 = icmp eq %"class.WTF::StringImpl"* %34, null
  br i1 %35, label %49, label %36

36:                                               ; preds = %31
  %37 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %34, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %38 = load atomic i32, i32* %37 monotonic, align 4
  %39 = and i32 %38, 2
  %40 = icmp eq i32 %39, 0
  %41 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %34, i64 0, i32 0
  %42 = load i32, i32* %41, align 4
  br i1 %40, label %43, label %45

43:                                               ; preds = %36
  %44 = add i32 %42, -1
  store i32 %44, i32* %41, align 4
  br label %45

45:                                               ; preds = %43, %36
  %46 = phi i32 [ %44, %43 ], [ %42, %36 ]
  %47 = icmp eq i32 %46, 0
  br i1 %47, label %48, label %49

48:                                               ; preds = %45
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %34) #16
  br label %49

49:                                               ; preds = %31, %45, %48
  %50 = bitcast %"class.base::internal::BindStateBase"* %0 to i8*
  tail call void @_ZdlPv(i8* %50) #18
  br label %51

51:                                               ; preds = %49, %1
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.WTF::KeyValuePair.1993"*, i8 } @_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_S1_EENS_24KeyValuePairKeyExtractorENS_15CaseFoldingHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EES8_EES8_NS_18PartitionAllocatorEE6insertINS_17HashMapTranslatorIS9_S5_SA_EES1_S1_EENS_18HashTableAddResultISB_S3_EEOT0_OT1_(%"class.WTF::HashTable.1990"*, %"class.WTF::String"* dereferenceable(8), %"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %4 = alloca %"class.WTF::StringView", align 8
  %5 = alloca %"class.WTF::StringView", align 8
  %6 = getelementptr inbounds %"class.WTF::HashTable.1990", %"class.WTF::HashTable.1990"* %0, i64 0, i32 0
  %7 = load %"struct.WTF::KeyValuePair.1993"*, %"struct.WTF::KeyValuePair.1993"** %6, align 8
  %8 = icmp eq %"struct.WTF::KeyValuePair.1993"* %7, null
  br i1 %8, label %9, label %12

9:                                                ; preds = %3
  %10 = tail call %"struct.WTF::KeyValuePair.1993"* @_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_S1_EENS_24KeyValuePairKeyExtractorENS_15CaseFoldingHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EES8_EES8_NS_18PartitionAllocatorEE6ExpandEPS3_(%"class.WTF::HashTable.1990"* %0, %"struct.WTF::KeyValuePair.1993"* null)
  %11 = load %"struct.WTF::KeyValuePair.1993"*, %"struct.WTF::KeyValuePair.1993"** %6, align 8
  br label %12

12:                                               ; preds = %3, %9
  %13 = phi %"struct.WTF::KeyValuePair.1993"* [ %7, %3 ], [ %11, %9 ]
  %14 = getelementptr inbounds %"class.WTF::HashTable.1990", %"class.WTF::HashTable.1990"* %0, i64 0, i32 1
  %15 = load i32, i32* %14, align 8
  %16 = add i32 %15, -1
  %17 = zext i32 %16 to i64
  %18 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %1, i64 0, i32 0, i32 0
  %19 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %18, align 8
  %20 = tail call i32 @_ZN3WTF15CaseFoldingHash7GetHashEPNS_10StringImplE(%"class.WTF::StringImpl"* %19) #16
  %21 = and i32 %20, %16
  %22 = zext i32 %21 to i64
  %23 = getelementptr inbounds %"struct.WTF::KeyValuePair.1993", %"struct.WTF::KeyValuePair.1993"* %13, i64 %22
  %24 = getelementptr inbounds %"struct.WTF::KeyValuePair.1993", %"struct.WTF::KeyValuePair.1993"* %23, i64 0, i32 0, i32 0, i32 0
  %25 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %24, align 8
  %26 = icmp eq %"class.WTF::StringImpl"* %25, null
  br i1 %26, label %88, label %27

27:                                               ; preds = %12
  %28 = bitcast %"class.WTF::StringView"* %4 to i8*
  %29 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %4, i64 0, i32 1
  %30 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %4, i64 0, i32 2
  %31 = bitcast %"class.WTF::StringView"* %5 to i8*
  %32 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %5, i64 0, i32 0
  %33 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %5, i64 0, i32 1
  %34 = bitcast i8** %33 to %"class.WTF::StringImpl"**
  %35 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %5, i64 0, i32 2
  %36 = xor i32 %20, -1
  %37 = lshr i32 %20, 23
  %38 = add i32 %37, %36
  %39 = shl i32 %38, 12
  %40 = xor i32 %39, %38
  %41 = lshr i32 %40, 7
  %42 = xor i32 %41, %40
  %43 = shl i32 %42, 2
  %44 = xor i32 %43, %42
  %45 = lshr i32 %44, 20
  %46 = xor i32 %45, %44
  %47 = or i32 %46, 1
  %48 = zext i32 %47 to i64
  %49 = bitcast %"class.WTF::StringView"* %4 to i8**
  br label %50

50:                                               ; preds = %27, %68
  %51 = phi %"struct.WTF::KeyValuePair.1993"* [ %23, %27 ], [ %74, %68 ]
  %52 = phi %"struct.WTF::KeyValuePair.1993"* [ null, %27 ], [ %69, %68 ]
  %53 = phi i64 [ %22, %27 ], [ %73, %68 ]
  %54 = phi i64 [ 0, %27 ], [ %71, %68 ]
  %55 = bitcast %"struct.WTF::KeyValuePair.1993"* %51 to i8**
  %56 = load i8*, i8** %55, align 8
  %57 = icmp eq i8* %56, inttoptr (i64 -1 to i8*)
  br i1 %57, label %68, label %58

58:                                               ; preds = %50
  %59 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %18, align 8
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %28) #16
  store i8* %56, i8** %49, align 8
  %60 = getelementptr inbounds i8, i8* %56, i64 12
  store i8* %60, i8** %29, align 8
  %61 = getelementptr inbounds i8, i8* %56, i64 4
  %62 = bitcast i8* %61 to i32*
  %63 = load i32, i32* %62, align 4
  store i32 %63, i32* %30, align 8
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %31) #16
  store %"class.WTF::StringImpl"* %59, %"class.WTF::StringImpl"** %32, align 8
  %64 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %59, i64 1
  store %"class.WTF::StringImpl"* %64, %"class.WTF::StringImpl"** %34, align 8
  %65 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %59, i64 0, i32 1
  %66 = load i32, i32* %65, align 4
  store i32 %66, i32* %35, align 8
  %67 = call zeroext i1 @_ZN3WTF37DeprecatedEqualIgnoringCaseAndNullityERKNS_10StringViewES2_(%"class.WTF::StringView"* nonnull dereferenceable(24) %4, %"class.WTF::StringView"* nonnull dereferenceable(24) %5) #16
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %31) #16
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %28) #16
  br i1 %67, label %143, label %68

68:                                               ; preds = %50, %58
  %69 = phi %"struct.WTF::KeyValuePair.1993"* [ %52, %58 ], [ %51, %50 ]
  %70 = icmp eq i64 %54, 0
  %71 = select i1 %70, i64 %48, i64 %54
  %72 = add i64 %71, %53
  %73 = and i64 %72, %17
  %74 = getelementptr inbounds %"struct.WTF::KeyValuePair.1993", %"struct.WTF::KeyValuePair.1993"* %13, i64 %73
  %75 = getelementptr inbounds %"struct.WTF::KeyValuePair.1993", %"struct.WTF::KeyValuePair.1993"* %74, i64 0, i32 0, i32 0, i32 0
  %76 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %75, align 8
  %77 = icmp eq %"class.WTF::StringImpl"* %76, null
  br i1 %77, label %78, label %50

78:                                               ; preds = %68
  %79 = icmp eq %"struct.WTF::KeyValuePair.1993"* %69, null
  br i1 %79, label %88, label %80

80:                                               ; preds = %78
  %81 = bitcast %"struct.WTF::KeyValuePair.1993"* %69 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %81, i8 0, i64 16, i1 false) #16
  %82 = getelementptr inbounds %"class.WTF::HashTable.1990", %"class.WTF::HashTable.1990"* %0, i64 0, i32 3
  %83 = load i32, i32* %82, align 8
  %84 = add i32 %83, 2147483647
  %85 = and i32 %84, 2147483647
  %86 = and i32 %83, -2147483648
  %87 = or i32 %85, %86
  store i32 %87, i32* %82, align 8
  br label %88

88:                                               ; preds = %12, %78, %80
  %89 = phi %"struct.WTF::KeyValuePair.1993"* [ %69, %80 ], [ %74, %78 ], [ %23, %12 ]
  %90 = bitcast %"class.WTF::String"* %1 to i64*
  %91 = load i64, i64* %90, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %18, align 8
  %92 = bitcast %"struct.WTF::KeyValuePair.1993"* %89 to i64*
  %93 = getelementptr inbounds %"struct.WTF::KeyValuePair.1993", %"struct.WTF::KeyValuePair.1993"* %89, i64 0, i32 0, i32 0, i32 0
  %94 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %93, align 8
  store i64 %91, i64* %92, align 8
  %95 = icmp eq %"class.WTF::StringImpl"* %94, null
  br i1 %95, label %109, label %96

96:                                               ; preds = %88
  %97 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %94, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %98 = load atomic i32, i32* %97 monotonic, align 4
  %99 = and i32 %98, 2
  %100 = icmp eq i32 %99, 0
  %101 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %94, i64 0, i32 0
  %102 = load i32, i32* %101, align 4
  br i1 %100, label %103, label %105

103:                                              ; preds = %96
  %104 = add i32 %102, -1
  store i32 %104, i32* %101, align 4
  br label %105

105:                                              ; preds = %103, %96
  %106 = phi i32 [ %104, %103 ], [ %102, %96 ]
  %107 = icmp eq i32 %106, 0
  br i1 %107, label %108, label %109

108:                                              ; preds = %105
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %94) #16
  br label %109

109:                                              ; preds = %108, %105, %88
  %110 = getelementptr inbounds %"struct.WTF::KeyValuePair.1993", %"struct.WTF::KeyValuePair.1993"* %89, i64 0, i32 1
  %111 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %2, i64 0, i32 0, i32 0
  %112 = bitcast %"class.WTF::String"* %2 to i64*
  %113 = load i64, i64* %112, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %111, align 8
  %114 = bitcast %"class.WTF::String"* %110 to i64*
  %115 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %110, i64 0, i32 0, i32 0
  %116 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %115, align 8
  store i64 %113, i64* %114, align 8
  %117 = icmp eq %"class.WTF::StringImpl"* %116, null
  br i1 %117, label %131, label %118

118:                                              ; preds = %109
  %119 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %116, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %120 = load atomic i32, i32* %119 monotonic, align 4
  %121 = and i32 %120, 2
  %122 = icmp eq i32 %121, 0
  %123 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %116, i64 0, i32 0
  %124 = load i32, i32* %123, align 4
  br i1 %122, label %125, label %127

125:                                              ; preds = %118
  %126 = add i32 %124, -1
  store i32 %126, i32* %123, align 4
  br label %127

127:                                              ; preds = %125, %118
  %128 = phi i32 [ %126, %125 ], [ %124, %118 ]
  %129 = icmp eq i32 %128, 0
  br i1 %129, label %130, label %131

130:                                              ; preds = %127
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %116) #16
  br label %131

131:                                              ; preds = %109, %127, %130
  %132 = getelementptr inbounds %"class.WTF::HashTable.1990", %"class.WTF::HashTable.1990"* %0, i64 0, i32 2
  %133 = load i32, i32* %132, align 4
  %134 = add i32 %133, 1
  store i32 %134, i32* %132, align 4
  %135 = getelementptr inbounds %"class.WTF::HashTable.1990", %"class.WTF::HashTable.1990"* %0, i64 0, i32 3
  %136 = load i32, i32* %135, align 8
  %137 = add i32 %136, %134
  %138 = shl i32 %137, 1
  %139 = load i32, i32* %14, align 8
  %140 = icmp ult i32 %138, %139
  br i1 %140, label %143, label %141

141:                                              ; preds = %131
  %142 = call %"struct.WTF::KeyValuePair.1993"* @_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_S1_EENS_24KeyValuePairKeyExtractorENS_15CaseFoldingHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EES8_EES8_NS_18PartitionAllocatorEE6ExpandEPS3_(%"class.WTF::HashTable.1990"* %0, %"struct.WTF::KeyValuePair.1993"* %89)
  br label %143

143:                                              ; preds = %58, %131, %141
  %144 = phi i8 [ 1, %131 ], [ 1, %141 ], [ 0, %58 ]
  %145 = phi %"struct.WTF::KeyValuePair.1993"* [ %89, %131 ], [ %142, %141 ], [ %51, %58 ]
  %146 = insertvalue { %"struct.WTF::KeyValuePair.1993"*, i8 } undef, %"struct.WTF::KeyValuePair.1993"* %145, 0
  %147 = insertvalue { %"struct.WTF::KeyValuePair.1993"*, i8 } %146, i8 %144, 1
  ret { %"struct.WTF::KeyValuePair.1993"*, i8 } %147
}

declare void @_ZN5blink5mojom5blink22MultiCacheQueryOptionsC1Ev(%"class.blink::mojom::blink::MultiCacheQueryOptions"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define internal void @"_ZN4base8internal7InvokerINS0_9BindStateIZN5blink26InspectorCacheStorageAgent21requestCachedResponseERKN3WTF6StringES8_NSt3__110unique_ptrINS9_6vectorINSA_INS3_8protocol12CacheStorage6HeaderENS9_14default_deleteISE_EEEENS9_9allocatorISH_EEEENSF_ISK_EEEENSA_INSD_7Backend29RequestCachedResponseCallbackENSF_ISO_EEEEE3$_4JSQ_EEEFvN4mojo9StructPtrINS3_5mojom5blink11MatchResultEEEEE7RunOnceEPNS0_13BindStateBaseEOSY_"(%"class.base::internal::BindStateBase"* nocapture, %"class.mojo::StructPtr.2303"* nocapture dereferenceable(8)) #0 align 2 {
  %3 = alloca %"class.crdtp::DispatchResponse", align 8
  %4 = alloca %"class.std::__1::basic_string", align 8
  %5 = alloca %"class.WTF::String", align 8
  %6 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 1
  %7 = bitcast void ()** %6 to %"class.blink::protocol::CacheStorage::Backend::RequestCachedResponseCallback"**
  %8 = bitcast void ()** %6 to i64*
  %9 = load i64, i64* %8, align 8
  store %"class.blink::protocol::CacheStorage::Backend::RequestCachedResponseCallback"* null, %"class.blink::protocol::CacheStorage::Backend::RequestCachedResponseCallback"** %7, align 8
  %10 = bitcast %"class.mojo::StructPtr.2303"* %1 to i64*
  %11 = getelementptr inbounds %"class.mojo::StructPtr.2303", %"class.mojo::StructPtr.2303"* %1, i64 0, i32 0, i32 0, i32 0, i32 0
  %12 = load %"class.blink::mojom::blink::MatchResult"*, %"class.blink::mojom::blink::MatchResult"** %11, align 8
  store i64 0, i64* %10, align 8
  %13 = inttoptr i64 %9 to %"class.blink::protocol::CacheStorage::Backend::RequestCachedResponseCallback"*
  %14 = bitcast %"class.std::__1::basic_string"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %14) #16
  %15 = getelementptr inbounds %"class.blink::mojom::blink::MatchResult", %"class.blink::mojom::blink::MatchResult"* %12, i64 0, i32 0
  %16 = load i32, i32* %15, align 8
  %17 = icmp eq i32 %16, 0
  br i1 %17, label %18, label %71

18:                                               ; preds = %2
  %19 = bitcast %"class.crdtp::DispatchResponse"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %19) #16
  %20 = bitcast %"class.WTF::String"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #16
  %21 = getelementptr inbounds %"class.blink::mojom::blink::MatchResult", %"class.blink::mojom::blink::MatchResult"* %12, i64 0, i32 1
  %22 = bitcast %"union.blink::mojom::blink::MatchResult::Union_"* %21 to i32*
  %23 = load i32, i32* %22, align 8
  %24 = add i32 %23, -1
  %25 = icmp ult i32 %24, 9
  br i1 %25, label %26, label %30

26:                                               ; preds = %18
  %27 = sext i32 %24 to i64
  %28 = getelementptr inbounds [9 x i8*], [9 x i8*]* @"switch.table._ZN4base8internal7InvokerINS0_9BindStateIZN5blink26InspectorCacheStorageAgent21requestCachedResponseERKN3WTF6StringES8_NSt3__110unique_ptrINS9_6vectorINSA_INS3_8protocol12CacheStorage6HeaderENS9_14default_deleteISE_EEEENS9_9allocatorISH_EEEENSF_ISK_EEEENSA_INSD_7Backend29RequestCachedResponseCallbackENSF_ISO_EEEEE3$_4JSQ_EEEFvN4mojo9StructPtrINS3_5mojom5blink11MatchResultEEEEE7RunOnceEPNS0_13BindStateBaseEOSY_", i64 0, i64 %27
  %29 = load i8*, i8** %28, align 8
  br label %30

30:                                               ; preds = %18, %26
  %31 = phi i8* [ %29, %26 ], [ getelementptr inbounds ([1 x i8], [1 x i8]* @.str.2, i64 0, i64 0), %18 ]
  %32 = tail call %"class.WTF::StringImpl"* (i8*, ...) @_ZN3WTF6String6FormatEPKcz(i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.43, i64 0, i64 0), i8* nonnull %31) #16
  %33 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %5, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %32, %"class.WTF::StringImpl"** %33, align 8
  call void @_ZNK3WTF6String4Utf8ENS_18UTF8ConversionModeE(%"class.std::__1::basic_string"* nonnull sret %4, %"class.WTF::String"* nonnull %5, i32 0) #16
  call void @_ZN5crdtp16DispatchResponse11ServerErrorENSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.crdtp::DispatchResponse"* nonnull sret %3, %"class.std::__1::basic_string"* nonnull %4) #16
  %34 = inttoptr i64 %9 to void (%"class.blink::protocol::CacheStorage::Backend::RequestCachedResponseCallback"*, %"class.crdtp::DispatchResponse"*)***
  %35 = load void (%"class.blink::protocol::CacheStorage::Backend::RequestCachedResponseCallback"*, %"class.crdtp::DispatchResponse"*)**, void (%"class.blink::protocol::CacheStorage::Backend::RequestCachedResponseCallback"*, %"class.crdtp::DispatchResponse"*)*** %34, align 8
  %36 = getelementptr inbounds void (%"class.blink::protocol::CacheStorage::Backend::RequestCachedResponseCallback"*, %"class.crdtp::DispatchResponse"*)*, void (%"class.blink::protocol::CacheStorage::Backend::RequestCachedResponseCallback"*, %"class.crdtp::DispatchResponse"*)** %35, i64 1
  %37 = load void (%"class.blink::protocol::CacheStorage::Backend::RequestCachedResponseCallback"*, %"class.crdtp::DispatchResponse"*)*, void (%"class.blink::protocol::CacheStorage::Backend::RequestCachedResponseCallback"*, %"class.crdtp::DispatchResponse"*)** %36, align 8
  call void %37(%"class.blink::protocol::CacheStorage::Backend::RequestCachedResponseCallback"* %13, %"class.crdtp::DispatchResponse"* nonnull dereferenceable(32) %3) #16
  %38 = getelementptr inbounds %"class.crdtp::DispatchResponse", %"class.crdtp::DispatchResponse"* %3, i64 0, i32 1
  %39 = bitcast %"class.std::__1::basic_string"* %38 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %40 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %39, i64 0, i32 1, i32 0
  %41 = load i8, i8* %40, align 1
  %42 = icmp slt i8 %41, 0
  br i1 %42, label %43, label %46

43:                                               ; preds = %30
  %44 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %38, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %45 = load i8*, i8** %44, align 8
  call void @_ZdlPv(i8* %45) #18
  br label %46

46:                                               ; preds = %43, %30
  %47 = bitcast %"class.std::__1::basic_string"* %4 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %48 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %47, i64 0, i32 1, i32 0
  %49 = load i8, i8* %48, align 1
  %50 = icmp slt i8 %49, 0
  br i1 %50, label %51, label %54

51:                                               ; preds = %46
  %52 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %53 = load i8*, i8** %52, align 8
  call void @_ZdlPv(i8* %53) #18
  br label %54

54:                                               ; preds = %51, %46
  %55 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %33, align 8
  %56 = icmp eq %"class.WTF::StringImpl"* %55, null
  br i1 %56, label %70, label %57

57:                                               ; preds = %54
  %58 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %55, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %59 = load atomic i32, i32* %58 monotonic, align 4
  %60 = and i32 %59, 2
  %61 = icmp eq i32 %60, 0
  %62 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %55, i64 0, i32 0
  %63 = load i32, i32* %62, align 4
  br i1 %61, label %64, label %66

64:                                               ; preds = %57
  %65 = add i32 %63, -1
  store i32 %65, i32* %62, align 4
  br label %66

66:                                               ; preds = %64, %57
  %67 = phi i32 [ %65, %64 ], [ %63, %57 ]
  %68 = icmp eq i32 %67, 0
  br i1 %68, label %69, label %70

69:                                               ; preds = %66
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %55) #16
  br label %70

70:                                               ; preds = %69, %66, %54
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #16
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %19) #16
  br label %120

71:                                               ; preds = %2
  %72 = tail call i8* @_Znwm(i64 80) #18
  %73 = bitcast i8* %72 to %"class.blink::protocol::DictionaryValue"*
  tail call void @_ZN5blink8protocol15DictionaryValueC1Ev(%"class.blink::protocol::DictionaryValue"* nonnull %73) #16
  %74 = getelementptr inbounds %"class.blink::mojom::blink::MatchResult", %"class.blink::mojom::blink::MatchResult"* %12, i64 0, i32 1, i32 0
  %75 = load %"class.mojo::StructPtr.2307"*, %"class.mojo::StructPtr.2307"** %74, align 8
  %76 = getelementptr inbounds %"class.mojo::StructPtr.2307", %"class.mojo::StructPtr.2307"* %75, i64 0, i32 0, i32 0, i32 0, i32 0
  %77 = load %"class.blink::mojom::blink::FetchAPIResponse"*, %"class.blink::mojom::blink::FetchAPIResponse"** %76, align 8
  %78 = getelementptr inbounds %"class.blink::mojom::blink::FetchAPIResponse", %"class.blink::mojom::blink::FetchAPIResponse"* %77, i64 0, i32 10, i32 0
  %79 = load %"class.blink::BlobDataHandle"*, %"class.blink::BlobDataHandle"** %78, align 8
  %80 = icmp eq %"class.blink::BlobDataHandle"* %79, null
  br i1 %80, label %81, label %94

81:                                               ; preds = %71
  %82 = tail call i8* @_Znwm(i64 24) #18
  %83 = bitcast i8* %82 to <2 x i32 (...)**>*
  store <2 x i32 (...)**> <i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN5blink8protocol12CacheStorage14CachedResponseE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN5blink8protocol6BinaryE, i64 0, inrange i32 0, i64 2) to i32 (...)**)>, <2 x i32 (...)**>* %83, align 8
  %84 = getelementptr inbounds i8, i8* %82, i64 16
  %85 = bitcast i8* %82 to %"class.blink::protocol::CacheStorage::CachedResponse"*
  %86 = bitcast i8* %84 to i64*
  store i64 0, i64* %86, align 8
  %87 = inttoptr i64 %9 to void (%"class.blink::protocol::CacheStorage::Backend::RequestCachedResponseCallback"*, %"class.blink::protocol::CacheStorage::CachedResponse"*)***
  %88 = load void (%"class.blink::protocol::CacheStorage::Backend::RequestCachedResponseCallback"*, %"class.blink::protocol::CacheStorage::CachedResponse"*)**, void (%"class.blink::protocol::CacheStorage::Backend::RequestCachedResponseCallback"*, %"class.blink::protocol::CacheStorage::CachedResponse"*)*** %87, align 8
  %89 = load void (%"class.blink::protocol::CacheStorage::Backend::RequestCachedResponseCallback"*, %"class.blink::protocol::CacheStorage::CachedResponse"*)*, void (%"class.blink::protocol::CacheStorage::Backend::RequestCachedResponseCallback"*, %"class.blink::protocol::CacheStorage::CachedResponse"*)** %88, align 8
  tail call void %89(%"class.blink::protocol::CacheStorage::Backend::RequestCachedResponseCallback"* %13, %"class.blink::protocol::CacheStorage::CachedResponse"* nonnull %85) #16
  %90 = bitcast i8* %72 to void (%"class.blink::protocol::DictionaryValue"*)***
  %91 = load void (%"class.blink::protocol::DictionaryValue"*)**, void (%"class.blink::protocol::DictionaryValue"*)*** %90, align 8
  %92 = getelementptr inbounds void (%"class.blink::protocol::DictionaryValue"*)*, void (%"class.blink::protocol::DictionaryValue"*)** %91, i64 2
  %93 = load void (%"class.blink::protocol::DictionaryValue"*)*, void (%"class.blink::protocol::DictionaryValue"*)** %92, align 8
  tail call void %93(%"class.blink::protocol::DictionaryValue"* nonnull %73) #16
  br label %120

94:                                               ; preds = %71
  store %"class.blink::BlobDataHandle"* null, %"class.blink::BlobDataHandle"** %78, align 8
  %95 = tail call i8* @_Znwm(i64 32) #18
  %96 = bitcast i8* %95 to %"class.blink::FileReaderLoaderClient"*
  %97 = bitcast i8* %95 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink12_GLOBAL__N_136CachedResponseFileReaderLoaderClientE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %97, align 8
  %98 = tail call %"class.blink::ThreadScheduler"* @_ZN5blink15ThreadScheduler7CurrentEv() #16
  %99 = bitcast %"class.blink::ThreadScheduler"* %98 to %"class.base::SingleThreadTaskRunner"* (%"class.blink::ThreadScheduler"*)***
  %100 = load %"class.base::SingleThreadTaskRunner"* (%"class.blink::ThreadScheduler"*)**, %"class.base::SingleThreadTaskRunner"* (%"class.blink::ThreadScheduler"*)*** %99, align 8
  %101 = getelementptr inbounds %"class.base::SingleThreadTaskRunner"* (%"class.blink::ThreadScheduler"*)*, %"class.base::SingleThreadTaskRunner"* (%"class.blink::ThreadScheduler"*)** %100, i64 13
  %102 = load %"class.base::SingleThreadTaskRunner"* (%"class.blink::ThreadScheduler"*)*, %"class.base::SingleThreadTaskRunner"* (%"class.blink::ThreadScheduler"*)** %101, align 8
  %103 = tail call %"class.base::SingleThreadTaskRunner"* %102(%"class.blink::ThreadScheduler"* %98) #16
  %104 = tail call noalias i8* @malloc(i64 296) #16
  %105 = bitcast i8* %104 to %"class.blink::FileReaderLoader"*
  tail call void @_ZN5blink16FileReaderLoaderC1ENS0_8ReadTypeEPNS_22FileReaderLoaderClientE13scoped_refptrIN4base22SingleThreadTaskRunnerEE(%"class.blink::FileReaderLoader"* %105, i32 4, %"class.blink::FileReaderLoaderClient"* nonnull %96, %"class.base::SingleThreadTaskRunner"* %103) #16
  %106 = getelementptr inbounds i8, i8* %95, i64 8
  %107 = bitcast i8* %106 to %"class.blink::FileReaderLoader"**
  %108 = bitcast i8* %106 to i8**
  store i8* %104, i8** %108, align 8
  %109 = getelementptr inbounds i8, i8* %95, i64 16
  %110 = bitcast i8* %109 to i64*
  store i64 %9, i64* %110, align 8
  %111 = tail call noalias i8* @malloc(i64 48) #16
  %112 = bitcast i8* %111 to %"class.WTF::SharedBuffer"*
  tail call void @_ZN3WTF12SharedBufferC1Ev(%"class.WTF::SharedBuffer"* %112) #16
  %113 = getelementptr inbounds i8, i8* %95, i64 24
  %114 = bitcast i8* %113 to i8**
  store i8* %111, i8** %114, align 8
  %115 = load %"class.blink::FileReaderLoader"*, %"class.blink::FileReaderLoader"** %107, align 8
  tail call void @_ZN5blink16FileReaderLoader5StartE13scoped_refptrINS_14BlobDataHandleEE(%"class.blink::FileReaderLoader"* %115, %"class.blink::BlobDataHandle"* nonnull %79) #16
  %116 = bitcast i8* %72 to void (%"class.blink::protocol::DictionaryValue"*)***
  %117 = load void (%"class.blink::protocol::DictionaryValue"*)**, void (%"class.blink::protocol::DictionaryValue"*)*** %116, align 8
  %118 = getelementptr inbounds void (%"class.blink::protocol::DictionaryValue"*)*, void (%"class.blink::protocol::DictionaryValue"*)** %117, i64 2
  %119 = load void (%"class.blink::protocol::DictionaryValue"*)*, void (%"class.blink::protocol::DictionaryValue"*)** %118, align 8
  tail call void %119(%"class.blink::protocol::DictionaryValue"* nonnull %73) #16
  br label %127

120:                                              ; preds = %81, %70
  %121 = icmp eq i64 %9, 0
  br i1 %121, label %127, label %122

122:                                              ; preds = %120
  %123 = inttoptr i64 %9 to void (%"class.blink::protocol::CacheStorage::Backend::RequestCachedResponseCallback"*)***
  %124 = load void (%"class.blink::protocol::CacheStorage::Backend::RequestCachedResponseCallback"*)**, void (%"class.blink::protocol::CacheStorage::Backend::RequestCachedResponseCallback"*)*** %123, align 8
  %125 = getelementptr inbounds void (%"class.blink::protocol::CacheStorage::Backend::RequestCachedResponseCallback"*)*, void (%"class.blink::protocol::CacheStorage::Backend::RequestCachedResponseCallback"*)** %124, i64 4
  %126 = load void (%"class.blink::protocol::CacheStorage::Backend::RequestCachedResponseCallback"*)*, void (%"class.blink::protocol::CacheStorage::Backend::RequestCachedResponseCallback"*)** %125, align 8
  call void %126(%"class.blink::protocol::CacheStorage::Backend::RequestCachedResponseCallback"* nonnull %13) #16
  br label %127

127:                                              ; preds = %122, %120, %94
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %14) #16
  %128 = icmp eq %"class.blink::mojom::blink::MatchResult"* %12, null
  br i1 %128, label %131, label %129

129:                                              ; preds = %127
  call void @_ZN5blink5mojom5blink11MatchResultD1Ev(%"class.blink::mojom::blink::MatchResult"* nonnull %12) #16
  %130 = bitcast %"class.blink::mojom::blink::MatchResult"* %12 to i8*
  call void @_ZdlPv(i8* %130) #18
  br label %131

131:                                              ; preds = %127, %129
  ret void
}

declare void @_ZN5blink8protocol15DictionaryValueC1Ev(%"class.blink::protocol::DictionaryValue"*) unnamed_addr #2

declare %"class.blink::ThreadScheduler"* @_ZN5blink15ThreadScheduler7CurrentEv() local_unnamed_addr #2

declare void @_ZN5blink16FileReaderLoader5StartE13scoped_refptrINS_14BlobDataHandleEE(%"class.blink::FileReaderLoader"*, %"class.blink::BlobDataHandle"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN5blink12_GLOBAL__N_136CachedResponseFileReaderLoaderClientD2Ev(%"class.blink::(anonymous namespace)::CachedResponseFileReaderLoaderClient"* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::(anonymous namespace)::CachedResponseFileReaderLoaderClient", %"class.blink::(anonymous namespace)::CachedResponseFileReaderLoaderClient"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink12_GLOBAL__N_136CachedResponseFileReaderLoaderClientE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.blink::(anonymous namespace)::CachedResponseFileReaderLoaderClient", %"class.blink::(anonymous namespace)::CachedResponseFileReaderLoaderClient"* %0, i64 0, i32 3, i32 0
  %4 = load %"class.WTF::SharedBuffer"*, %"class.WTF::SharedBuffer"** %3, align 8
  %5 = icmp eq %"class.WTF::SharedBuffer"* %4, null
  br i1 %5, label %13, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.WTF::SharedBuffer", %"class.WTF::SharedBuffer"* %4, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %7) #16
  %8 = getelementptr inbounds %"class.WTF::SharedBuffer", %"class.WTF::SharedBuffer"* %4, i64 0, i32 0, i32 0, i32 0, i32 0
  %9 = load i32, i32* %8, align 4
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %11, label %13

11:                                               ; preds = %6
  tail call void @_ZN3WTF12SharedBufferD1Ev(%"class.WTF::SharedBuffer"* nonnull %4) #16
  %12 = bitcast %"class.WTF::SharedBuffer"* %4 to i8*
  tail call void @free(i8* %12) #16
  br label %13

13:                                               ; preds = %1, %6, %11
  %14 = getelementptr inbounds %"class.blink::(anonymous namespace)::CachedResponseFileReaderLoaderClient", %"class.blink::(anonymous namespace)::CachedResponseFileReaderLoaderClient"* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  %15 = load %"class.blink::protocol::CacheStorage::Backend::RequestCachedResponseCallback"*, %"class.blink::protocol::CacheStorage::Backend::RequestCachedResponseCallback"** %14, align 8
  store %"class.blink::protocol::CacheStorage::Backend::RequestCachedResponseCallback"* null, %"class.blink::protocol::CacheStorage::Backend::RequestCachedResponseCallback"** %14, align 8
  %16 = icmp eq %"class.blink::protocol::CacheStorage::Backend::RequestCachedResponseCallback"* %15, null
  br i1 %16, label %22, label %17

17:                                               ; preds = %13
  %18 = bitcast %"class.blink::protocol::CacheStorage::Backend::RequestCachedResponseCallback"* %15 to void (%"class.blink::protocol::CacheStorage::Backend::RequestCachedResponseCallback"*)***
  %19 = load void (%"class.blink::protocol::CacheStorage::Backend::RequestCachedResponseCallback"*)**, void (%"class.blink::protocol::CacheStorage::Backend::RequestCachedResponseCallback"*)*** %18, align 8
  %20 = getelementptr inbounds void (%"class.blink::protocol::CacheStorage::Backend::RequestCachedResponseCallback"*)*, void (%"class.blink::protocol::CacheStorage::Backend::RequestCachedResponseCallback"*)** %19, i64 4
  %21 = load void (%"class.blink::protocol::CacheStorage::Backend::RequestCachedResponseCallback"*)*, void (%"class.blink::protocol::CacheStorage::Backend::RequestCachedResponseCallback"*)** %20, align 8
  tail call void %21(%"class.blink::protocol::CacheStorage::Backend::RequestCachedResponseCallback"* nonnull %15) #16
  br label %22

22:                                               ; preds = %13, %17
  %23 = getelementptr inbounds %"class.blink::(anonymous namespace)::CachedResponseFileReaderLoaderClient", %"class.blink::(anonymous namespace)::CachedResponseFileReaderLoaderClient"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %24 = load %"class.blink::FileReaderLoader"*, %"class.blink::FileReaderLoader"** %23, align 8
  store %"class.blink::FileReaderLoader"* null, %"class.blink::FileReaderLoader"** %23, align 8
  %25 = icmp eq %"class.blink::FileReaderLoader"* %24, null
  br i1 %25, label %31, label %26

26:                                               ; preds = %22
  %27 = bitcast %"class.blink::FileReaderLoader"* %24 to void (%"class.blink::FileReaderLoader"*)***
  %28 = load void (%"class.blink::FileReaderLoader"*)**, void (%"class.blink::FileReaderLoader"*)*** %27, align 8
  %29 = getelementptr inbounds void (%"class.blink::FileReaderLoader"*)*, void (%"class.blink::FileReaderLoader"*)** %28, i64 1
  %30 = load void (%"class.blink::FileReaderLoader"*)*, void (%"class.blink::FileReaderLoader"*)** %29, align 8
  tail call void %30(%"class.blink::FileReaderLoader"* nonnull %24) #16
  br label %31

31:                                               ; preds = %22, %26
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN5blink12_GLOBAL__N_136CachedResponseFileReaderLoaderClientD0Ev(%"class.blink::(anonymous namespace)::CachedResponseFileReaderLoaderClient"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::(anonymous namespace)::CachedResponseFileReaderLoaderClient", %"class.blink::(anonymous namespace)::CachedResponseFileReaderLoaderClient"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink12_GLOBAL__N_136CachedResponseFileReaderLoaderClientE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.blink::(anonymous namespace)::CachedResponseFileReaderLoaderClient", %"class.blink::(anonymous namespace)::CachedResponseFileReaderLoaderClient"* %0, i64 0, i32 3, i32 0
  %4 = load %"class.WTF::SharedBuffer"*, %"class.WTF::SharedBuffer"** %3, align 8
  %5 = icmp eq %"class.WTF::SharedBuffer"* %4, null
  br i1 %5, label %13, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.WTF::SharedBuffer", %"class.WTF::SharedBuffer"* %4, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %7) #16
  %8 = getelementptr inbounds %"class.WTF::SharedBuffer", %"class.WTF::SharedBuffer"* %4, i64 0, i32 0, i32 0, i32 0, i32 0
  %9 = load i32, i32* %8, align 4
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %11, label %13

11:                                               ; preds = %6
  tail call void @_ZN3WTF12SharedBufferD1Ev(%"class.WTF::SharedBuffer"* nonnull %4) #16
  %12 = bitcast %"class.WTF::SharedBuffer"* %4 to i8*
  tail call void @free(i8* %12) #16
  br label %13

13:                                               ; preds = %11, %6, %1
  %14 = getelementptr inbounds %"class.blink::(anonymous namespace)::CachedResponseFileReaderLoaderClient", %"class.blink::(anonymous namespace)::CachedResponseFileReaderLoaderClient"* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  %15 = load %"class.blink::protocol::CacheStorage::Backend::RequestCachedResponseCallback"*, %"class.blink::protocol::CacheStorage::Backend::RequestCachedResponseCallback"** %14, align 8
  store %"class.blink::protocol::CacheStorage::Backend::RequestCachedResponseCallback"* null, %"class.blink::protocol::CacheStorage::Backend::RequestCachedResponseCallback"** %14, align 8
  %16 = icmp eq %"class.blink::protocol::CacheStorage::Backend::RequestCachedResponseCallback"* %15, null
  br i1 %16, label %22, label %17

17:                                               ; preds = %13
  %18 = bitcast %"class.blink::protocol::CacheStorage::Backend::RequestCachedResponseCallback"* %15 to void (%"class.blink::protocol::CacheStorage::Backend::RequestCachedResponseCallback"*)***
  %19 = load void (%"class.blink::protocol::CacheStorage::Backend::RequestCachedResponseCallback"*)**, void (%"class.blink::protocol::CacheStorage::Backend::RequestCachedResponseCallback"*)*** %18, align 8
  %20 = getelementptr inbounds void (%"class.blink::protocol::CacheStorage::Backend::RequestCachedResponseCallback"*)*, void (%"class.blink::protocol::CacheStorage::Backend::RequestCachedResponseCallback"*)** %19, i64 4
  %21 = load void (%"class.blink::protocol::CacheStorage::Backend::RequestCachedResponseCallback"*)*, void (%"class.blink::protocol::CacheStorage::Backend::RequestCachedResponseCallback"*)** %20, align 8
  tail call void %21(%"class.blink::protocol::CacheStorage::Backend::RequestCachedResponseCallback"* nonnull %15) #16
  br label %22

22:                                               ; preds = %17, %13
  %23 = getelementptr inbounds %"class.blink::(anonymous namespace)::CachedResponseFileReaderLoaderClient", %"class.blink::(anonymous namespace)::CachedResponseFileReaderLoaderClient"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %24 = load %"class.blink::FileReaderLoader"*, %"class.blink::FileReaderLoader"** %23, align 8
  store %"class.blink::FileReaderLoader"* null, %"class.blink::FileReaderLoader"** %23, align 8
  %25 = icmp eq %"class.blink::FileReaderLoader"* %24, null
  br i1 %25, label %31, label %26

26:                                               ; preds = %22
  %27 = bitcast %"class.blink::FileReaderLoader"* %24 to void (%"class.blink::FileReaderLoader"*)***
  %28 = load void (%"class.blink::FileReaderLoader"*)**, void (%"class.blink::FileReaderLoader"*)*** %27, align 8
  %29 = getelementptr inbounds void (%"class.blink::FileReaderLoader"*)*, void (%"class.blink::FileReaderLoader"*)** %28, i64 1
  %30 = load void (%"class.blink::FileReaderLoader"*)*, void (%"class.blink::FileReaderLoader"*)** %29, align 8
  tail call void %30(%"class.blink::FileReaderLoader"* nonnull %24) #16
  br label %31

31:                                               ; preds = %22, %26
  %32 = bitcast %"class.blink::(anonymous namespace)::CachedResponseFileReaderLoaderClient"* %0 to i8*
  tail call void @_ZdlPv(i8* %32) #18
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define internal void @_ZN5blink12_GLOBAL__N_136CachedResponseFileReaderLoaderClient15DidStartLoadingEv(%"class.blink::(anonymous namespace)::CachedResponseFileReaderLoaderClient"* nocapture) unnamed_addr #15 align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink22FileReaderLoaderClient14DidReceiveDataEv(%"class.blink::FileReaderLoaderClient"*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN5blink12_GLOBAL__N_136CachedResponseFileReaderLoaderClient23DidReceiveDataForClientEPKcj(%"class.blink::(anonymous namespace)::CachedResponseFileReaderLoaderClient"* nocapture readonly, i8*, i32) unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.blink::(anonymous namespace)::CachedResponseFileReaderLoaderClient", %"class.blink::(anonymous namespace)::CachedResponseFileReaderLoaderClient"* %0, i64 0, i32 3, i32 0
  %5 = load %"class.WTF::SharedBuffer"*, %"class.WTF::SharedBuffer"** %4, align 8
  %6 = zext i32 %2 to i64
  tail call void @_ZN3WTF12SharedBuffer14AppendInternalEPKcm(%"class.WTF::SharedBuffer"* %5, i8* %1, i64 %6) #16
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN5blink12_GLOBAL__N_136CachedResponseFileReaderLoaderClient16DidFinishLoadingEv(%"class.blink::(anonymous namespace)::CachedResponseFileReaderLoaderClient"*) unnamed_addr #0 align 2 {
  %2 = alloca %"class.blink::protocol::Binary", align 8
  %3 = tail call i8* @_Znwm(i64 24) #18
  %4 = bitcast i8* %3 to <2 x i32 (...)**>*
  store <2 x i32 (...)**> <i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN5blink8protocol12CacheStorage14CachedResponseE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN5blink8protocol6BinaryE, i64 0, inrange i32 0, i64 2) to i32 (...)**)>, <2 x i32 (...)**>* %4, align 8
  %5 = getelementptr inbounds i8, i8* %3, i64 16
  %6 = bitcast i8* %5 to %"class.blink::protocol::Binary::Impl"**
  store %"class.blink::protocol::Binary::Impl"* null, %"class.blink::protocol::Binary::Impl"** %6, align 8
  %7 = bitcast i8* %3 to %"class.blink::protocol::CacheStorage::CachedResponse"*
  %8 = bitcast %"class.blink::protocol::Binary"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %8) #16
  %9 = getelementptr inbounds %"class.blink::(anonymous namespace)::CachedResponseFileReaderLoaderClient", %"class.blink::(anonymous namespace)::CachedResponseFileReaderLoaderClient"* %0, i64 0, i32 3, i32 0
  %10 = load %"class.WTF::SharedBuffer"*, %"class.WTF::SharedBuffer"** %9, align 8
  %11 = icmp eq %"class.WTF::SharedBuffer"* %10, null
  br i1 %11, label %14, label %12

12:                                               ; preds = %1
  %13 = getelementptr inbounds %"class.WTF::SharedBuffer", %"class.WTF::SharedBuffer"* %10, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %13) #16
  br label %14

14:                                               ; preds = %1, %12
  call void @_ZN5blink8protocol6Binary16fromSharedBufferE13scoped_refptrIN3WTF12SharedBufferEE(%"class.blink::protocol::Binary"* nonnull sret %2, %"class.WTF::SharedBuffer"* %10) #16
  %15 = getelementptr inbounds %"class.blink::protocol::Binary", %"class.blink::protocol::Binary"* %2, i64 0, i32 1, i32 0
  %16 = load %"class.blink::protocol::Binary::Impl"*, %"class.blink::protocol::Binary::Impl"** %15, align 8
  %17 = icmp eq %"class.blink::protocol::Binary::Impl"* %16, null
  br i1 %17, label %20, label %18

18:                                               ; preds = %14
  %19 = getelementptr inbounds %"class.blink::protocol::Binary::Impl", %"class.blink::protocol::Binary::Impl"* %16, i64 0, i32 1, i32 0, i32 0
  call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %19) #16
  br label %20

20:                                               ; preds = %18, %14
  %21 = ptrtoint %"class.blink::protocol::Binary::Impl"* %16 to i64
  %22 = bitcast i8* %5 to i64*
  %23 = load %"class.blink::protocol::Binary::Impl"*, %"class.blink::protocol::Binary::Impl"** %6, align 8
  store i64 %21, i64* %22, align 8
  %24 = icmp eq %"class.blink::protocol::Binary::Impl"* %23, null
  br i1 %24, label %38, label %25

25:                                               ; preds = %20
  %26 = getelementptr inbounds %"class.blink::protocol::Binary::Impl", %"class.blink::protocol::Binary::Impl"* %23, i64 0, i32 1, i32 0
  %27 = getelementptr inbounds %"class.base::RefCounted.2514", %"class.base::RefCounted.2514"* %26, i64 0, i32 0
  call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %27) #16
  %28 = getelementptr inbounds %"class.base::RefCounted.2514", %"class.base::RefCounted.2514"* %26, i64 0, i32 0, i32 0
  %29 = load i32, i32* %28, align 4
  %30 = icmp eq i32 %29, 0
  br i1 %30, label %31, label %38

31:                                               ; preds = %25
  %32 = getelementptr inbounds %"class.base::RefCounted.2514", %"class.base::RefCounted.2514"* %26, i64 -2
  %33 = bitcast %"class.base::RefCounted.2514"* %32 to %"class.blink::protocol::Binary::Impl"*
  %34 = bitcast %"class.base::RefCounted.2514"* %32 to void (%"class.blink::protocol::Binary::Impl"*)***
  %35 = load void (%"class.blink::protocol::Binary::Impl"*)**, void (%"class.blink::protocol::Binary::Impl"*)*** %34, align 8
  %36 = getelementptr inbounds void (%"class.blink::protocol::Binary::Impl"*)*, void (%"class.blink::protocol::Binary::Impl"*)** %35, i64 1
  %37 = load void (%"class.blink::protocol::Binary::Impl"*)*, void (%"class.blink::protocol::Binary::Impl"*)** %36, align 8
  call void %37(%"class.blink::protocol::Binary::Impl"* nonnull %33) #16
  br label %38

38:                                               ; preds = %20, %25, %31
  %39 = getelementptr inbounds %"class.blink::protocol::Binary", %"class.blink::protocol::Binary"* %2, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN5blink8protocol6BinaryE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %39, align 8
  %40 = load %"class.blink::protocol::Binary::Impl"*, %"class.blink::protocol::Binary::Impl"** %15, align 8
  %41 = icmp eq %"class.blink::protocol::Binary::Impl"* %40, null
  br i1 %41, label %55, label %42

42:                                               ; preds = %38
  %43 = getelementptr inbounds %"class.blink::protocol::Binary::Impl", %"class.blink::protocol::Binary::Impl"* %40, i64 0, i32 1, i32 0
  %44 = getelementptr inbounds %"class.base::RefCounted.2514", %"class.base::RefCounted.2514"* %43, i64 0, i32 0
  call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %44) #16
  %45 = getelementptr inbounds %"class.base::RefCounted.2514", %"class.base::RefCounted.2514"* %43, i64 0, i32 0, i32 0
  %46 = load i32, i32* %45, align 4
  %47 = icmp eq i32 %46, 0
  br i1 %47, label %48, label %55

48:                                               ; preds = %42
  %49 = getelementptr inbounds %"class.base::RefCounted.2514", %"class.base::RefCounted.2514"* %43, i64 -2
  %50 = bitcast %"class.base::RefCounted.2514"* %49 to %"class.blink::protocol::Binary::Impl"*
  %51 = bitcast %"class.base::RefCounted.2514"* %49 to void (%"class.blink::protocol::Binary::Impl"*)***
  %52 = load void (%"class.blink::protocol::Binary::Impl"*)**, void (%"class.blink::protocol::Binary::Impl"*)*** %51, align 8
  %53 = getelementptr inbounds void (%"class.blink::protocol::Binary::Impl"*)*, void (%"class.blink::protocol::Binary::Impl"*)** %52, i64 1
  %54 = load void (%"class.blink::protocol::Binary::Impl"*)*, void (%"class.blink::protocol::Binary::Impl"*)** %53, align 8
  call void %54(%"class.blink::protocol::Binary::Impl"* nonnull %50) #16
  br label %55

55:                                               ; preds = %48, %42, %38
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %8) #16
  %56 = getelementptr inbounds %"class.blink::(anonymous namespace)::CachedResponseFileReaderLoaderClient", %"class.blink::(anonymous namespace)::CachedResponseFileReaderLoaderClient"* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  %57 = load %"class.blink::protocol::CacheStorage::Backend::RequestCachedResponseCallback"*, %"class.blink::protocol::CacheStorage::Backend::RequestCachedResponseCallback"** %56, align 8
  %58 = bitcast %"class.blink::protocol::CacheStorage::Backend::RequestCachedResponseCallback"* %57 to void (%"class.blink::protocol::CacheStorage::Backend::RequestCachedResponseCallback"*, %"class.blink::protocol::CacheStorage::CachedResponse"*)***
  %59 = load void (%"class.blink::protocol::CacheStorage::Backend::RequestCachedResponseCallback"*, %"class.blink::protocol::CacheStorage::CachedResponse"*)**, void (%"class.blink::protocol::CacheStorage::Backend::RequestCachedResponseCallback"*, %"class.blink::protocol::CacheStorage::CachedResponse"*)*** %58, align 8
  %60 = load void (%"class.blink::protocol::CacheStorage::Backend::RequestCachedResponseCallback"*, %"class.blink::protocol::CacheStorage::CachedResponse"*)*, void (%"class.blink::protocol::CacheStorage::Backend::RequestCachedResponseCallback"*, %"class.blink::protocol::CacheStorage::CachedResponse"*)** %59, align 8
  call void %60(%"class.blink::protocol::CacheStorage::Backend::RequestCachedResponseCallback"* %57, %"class.blink::protocol::CacheStorage::CachedResponse"* nonnull %7) #16
  %61 = icmp eq %"class.blink::(anonymous namespace)::CachedResponseFileReaderLoaderClient"* %0, null
  br i1 %61, label %67, label %62

62:                                               ; preds = %55
  %63 = bitcast %"class.blink::(anonymous namespace)::CachedResponseFileReaderLoaderClient"* %0 to void (%"class.blink::(anonymous namespace)::CachedResponseFileReaderLoaderClient"*)***
  %64 = load void (%"class.blink::(anonymous namespace)::CachedResponseFileReaderLoaderClient"*)**, void (%"class.blink::(anonymous namespace)::CachedResponseFileReaderLoaderClient"*)*** %63, align 8
  %65 = getelementptr inbounds void (%"class.blink::(anonymous namespace)::CachedResponseFileReaderLoaderClient"*)*, void (%"class.blink::(anonymous namespace)::CachedResponseFileReaderLoaderClient"*)** %64, i64 1
  %66 = load void (%"class.blink::(anonymous namespace)::CachedResponseFileReaderLoaderClient"*)*, void (%"class.blink::(anonymous namespace)::CachedResponseFileReaderLoaderClient"*)** %65, align 8
  call void %66(%"class.blink::(anonymous namespace)::CachedResponseFileReaderLoaderClient"* nonnull %0) #16
  br label %67

67:                                               ; preds = %62, %55
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN5blink12_GLOBAL__N_136CachedResponseFileReaderLoaderClient7DidFailENS_13FileErrorCodeE(%"class.blink::(anonymous namespace)::CachedResponseFileReaderLoaderClient"*, i32) unnamed_addr #0 align 2 {
  %3 = alloca %"class.crdtp::DispatchResponse", align 8
  %4 = alloca %"class.std::__1::basic_string", align 8
  %5 = alloca %"class.WTF::String", align 8
  %6 = getelementptr inbounds %"class.blink::(anonymous namespace)::CachedResponseFileReaderLoaderClient", %"class.blink::(anonymous namespace)::CachedResponseFileReaderLoaderClient"* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  %7 = load %"class.blink::protocol::CacheStorage::Backend::RequestCachedResponseCallback"*, %"class.blink::protocol::CacheStorage::Backend::RequestCachedResponseCallback"** %6, align 8
  %8 = bitcast %"class.crdtp::DispatchResponse"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %8) #16
  %9 = bitcast %"class.WTF::String"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %9) #16
  %10 = tail call %"class.WTF::StringImpl"* (i8*, ...) @_ZN3WTF6String6FormatEPKcz(i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str.44, i64 0, i64 0), i32 %1) #16
  %11 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %5, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %10, %"class.WTF::StringImpl"** %11, align 8
  call void @_ZNK3WTF6String4Utf8ENS_18UTF8ConversionModeE(%"class.std::__1::basic_string"* nonnull sret %4, %"class.WTF::String"* nonnull %5, i32 0) #16
  call void @_ZN5crdtp16DispatchResponse11ServerErrorENSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.crdtp::DispatchResponse"* nonnull sret %3, %"class.std::__1::basic_string"* nonnull %4) #16
  %12 = bitcast %"class.blink::protocol::CacheStorage::Backend::RequestCachedResponseCallback"* %7 to void (%"class.blink::protocol::CacheStorage::Backend::RequestCachedResponseCallback"*, %"class.crdtp::DispatchResponse"*)***
  %13 = load void (%"class.blink::protocol::CacheStorage::Backend::RequestCachedResponseCallback"*, %"class.crdtp::DispatchResponse"*)**, void (%"class.blink::protocol::CacheStorage::Backend::RequestCachedResponseCallback"*, %"class.crdtp::DispatchResponse"*)*** %12, align 8
  %14 = getelementptr inbounds void (%"class.blink::protocol::CacheStorage::Backend::RequestCachedResponseCallback"*, %"class.crdtp::DispatchResponse"*)*, void (%"class.blink::protocol::CacheStorage::Backend::RequestCachedResponseCallback"*, %"class.crdtp::DispatchResponse"*)** %13, i64 1
  %15 = load void (%"class.blink::protocol::CacheStorage::Backend::RequestCachedResponseCallback"*, %"class.crdtp::DispatchResponse"*)*, void (%"class.blink::protocol::CacheStorage::Backend::RequestCachedResponseCallback"*, %"class.crdtp::DispatchResponse"*)** %14, align 8
  call void %15(%"class.blink::protocol::CacheStorage::Backend::RequestCachedResponseCallback"* %7, %"class.crdtp::DispatchResponse"* nonnull dereferenceable(32) %3) #16
  %16 = getelementptr inbounds %"class.crdtp::DispatchResponse", %"class.crdtp::DispatchResponse"* %3, i64 0, i32 1
  %17 = bitcast %"class.std::__1::basic_string"* %16 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %18 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %17, i64 0, i32 1, i32 0
  %19 = load i8, i8* %18, align 1
  %20 = icmp slt i8 %19, 0
  br i1 %20, label %21, label %24

21:                                               ; preds = %2
  %22 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %16, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %23 = load i8*, i8** %22, align 8
  call void @_ZdlPv(i8* %23) #18
  br label %24

24:                                               ; preds = %2, %21
  %25 = bitcast %"class.std::__1::basic_string"* %4 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %26 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %25, i64 0, i32 1, i32 0
  %27 = load i8, i8* %26, align 1
  %28 = icmp slt i8 %27, 0
  br i1 %28, label %29, label %32

29:                                               ; preds = %24
  %30 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %31 = load i8*, i8** %30, align 8
  call void @_ZdlPv(i8* %31) #18
  br label %32

32:                                               ; preds = %24, %29
  %33 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %11, align 8
  %34 = icmp eq %"class.WTF::StringImpl"* %33, null
  br i1 %34, label %48, label %35

35:                                               ; preds = %32
  %36 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %33, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %37 = load atomic i32, i32* %36 monotonic, align 4
  %38 = and i32 %37, 2
  %39 = icmp eq i32 %38, 0
  %40 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %33, i64 0, i32 0
  %41 = load i32, i32* %40, align 4
  br i1 %39, label %42, label %44

42:                                               ; preds = %35
  %43 = add i32 %41, -1
  store i32 %43, i32* %40, align 4
  br label %44

44:                                               ; preds = %42, %35
  %45 = phi i32 [ %43, %42 ], [ %41, %35 ]
  %46 = icmp eq i32 %45, 0
  br i1 %46, label %47, label %48

47:                                               ; preds = %44
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %33) #16
  br label %48

48:                                               ; preds = %32, %44, %47
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9) #16
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %8) #16
  %49 = icmp eq %"class.blink::(anonymous namespace)::CachedResponseFileReaderLoaderClient"* %0, null
  br i1 %49, label %55, label %50

50:                                               ; preds = %48
  %51 = bitcast %"class.blink::(anonymous namespace)::CachedResponseFileReaderLoaderClient"* %0 to void (%"class.blink::(anonymous namespace)::CachedResponseFileReaderLoaderClient"*)***
  %52 = load void (%"class.blink::(anonymous namespace)::CachedResponseFileReaderLoaderClient"*)**, void (%"class.blink::(anonymous namespace)::CachedResponseFileReaderLoaderClient"*)*** %51, align 8
  %53 = getelementptr inbounds void (%"class.blink::(anonymous namespace)::CachedResponseFileReaderLoaderClient"*)*, void (%"class.blink::(anonymous namespace)::CachedResponseFileReaderLoaderClient"*)** %52, i64 1
  %54 = load void (%"class.blink::(anonymous namespace)::CachedResponseFileReaderLoaderClient"*)*, void (%"class.blink::(anonymous namespace)::CachedResponseFileReaderLoaderClient"*)** %53, align 8
  call void %54(%"class.blink::(anonymous namespace)::CachedResponseFileReaderLoaderClient"* nonnull %0) #16
  br label %55

55:                                               ; preds = %48, %50
  ret void
}

declare void @_ZN5blink16FileReaderLoaderC1ENS0_8ReadTypeEPNS_22FileReaderLoaderClientE13scoped_refptrIN4base22SingleThreadTaskRunnerEE(%"class.blink::FileReaderLoader"*, i32, %"class.blink::FileReaderLoaderClient"*, %"class.base::SingleThreadTaskRunner"*) unnamed_addr #2

declare void @_ZN3WTF12SharedBufferC1Ev(%"class.WTF::SharedBuffer"*) unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN3WTF12SharedBufferD1Ev(%"class.WTF::SharedBuffer"*) unnamed_addr #3

declare void @_ZN3WTF12SharedBuffer14AppendInternalEPKcm(%"class.WTF::SharedBuffer"*, i8*, i64) local_unnamed_addr #2

declare void @_ZN5blink8protocol6Binary16fromSharedBufferE13scoped_refptrIN3WTF12SharedBufferEE(%"class.blink::protocol::Binary"* sret, %"class.WTF::SharedBuffer"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define internal void @"_ZN4base8internal9BindStateIZN5blink26InspectorCacheStorageAgent21requestCachedResponseERKN3WTF6StringES7_NSt3__110unique_ptrINS8_6vectorINS9_INS2_8protocol12CacheStorage6HeaderENS8_14default_deleteISD_EEEENS8_9allocatorISG_EEEENSE_ISJ_EEEENS9_INSC_7Backend29RequestCachedResponseCallbackENSE_ISN_EEEEE3$_4JSP_EE7DestroyEPKNS0_13BindStateBaseE"(%"class.base::internal::BindStateBase"*) #0 align 2 {
  %2 = icmp eq %"class.base::internal::BindStateBase"* %0, null
  br i1 %2, label %15, label %3

3:                                                ; preds = %1
  %4 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 1
  %5 = bitcast void ()** %4 to %"class.blink::protocol::CacheStorage::Backend::RequestCachedResponseCallback"**
  %6 = load %"class.blink::protocol::CacheStorage::Backend::RequestCachedResponseCallback"*, %"class.blink::protocol::CacheStorage::Backend::RequestCachedResponseCallback"** %5, align 8
  store %"class.blink::protocol::CacheStorage::Backend::RequestCachedResponseCallback"* null, %"class.blink::protocol::CacheStorage::Backend::RequestCachedResponseCallback"** %5, align 8
  %7 = icmp eq %"class.blink::protocol::CacheStorage::Backend::RequestCachedResponseCallback"* %6, null
  br i1 %7, label %13, label %8

8:                                                ; preds = %3
  %9 = bitcast %"class.blink::protocol::CacheStorage::Backend::RequestCachedResponseCallback"* %6 to void (%"class.blink::protocol::CacheStorage::Backend::RequestCachedResponseCallback"*)***
  %10 = load void (%"class.blink::protocol::CacheStorage::Backend::RequestCachedResponseCallback"*)**, void (%"class.blink::protocol::CacheStorage::Backend::RequestCachedResponseCallback"*)*** %9, align 8
  %11 = getelementptr inbounds void (%"class.blink::protocol::CacheStorage::Backend::RequestCachedResponseCallback"*)*, void (%"class.blink::protocol::CacheStorage::Backend::RequestCachedResponseCallback"*)** %10, i64 4
  %12 = load void (%"class.blink::protocol::CacheStorage::Backend::RequestCachedResponseCallback"*)*, void (%"class.blink::protocol::CacheStorage::Backend::RequestCachedResponseCallback"*)** %11, align 8
  tail call void %12(%"class.blink::protocol::CacheStorage::Backend::RequestCachedResponseCallback"* nonnull %6) #16
  br label %13

13:                                               ; preds = %3, %8
  %14 = bitcast %"class.base::internal::BindStateBase"* %0 to i8*
  tail call void @_ZdlPv(i8* %14) #18
  br label %15

15:                                               ; preds = %13, %1
  ret void
}

declare void @_ZN5blink8protocol12CacheStorage10Dispatcher4wireEPN5crdtp14UberDispatcherEPNS1_7BackendE(%"class.crdtp::UberDispatcher"*, %"class.blink::protocol::CacheStorage::Backend"*) local_unnamed_addr #2

declare void @_ZN5blink19InspectorAgentState8InitFromEPNS_21InspectorSessionStateE(%"class.blink::InspectorAgentState"*, %"class.blink::InspectorSessionState"*) local_unnamed_addr #2

declare zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8*) local_unnamed_addr #2

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { cold noreturn nounwind }
attributes #6 = { nounwind readnone speculatable }
attributes #7 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { argmemonly nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #11 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #12 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #13 = { noinline nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #14 = { nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #15 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #16 = { nounwind }
attributes #17 = { nounwind readonly }
attributes #18 = { builtin nounwind }
attributes #19 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!"branch_weights", i32 2000, i32 1}
!3 = !{!"branch_weights", i32 1, i32 2000}
!4 = !{!5}
!5 = distinct !{!5, !6, !"_ZN3WTF4BindIZN5blink26InspectorCacheStorageAgent17requestCacheNamesERKNS_6StringENSt3__110unique_ptrINS1_8protocol12CacheStorage7Backend25RequestCacheNamesCallbackENS6_14default_deleteISB_EEEEE3$_0JS5_SE_EFvRKNS_6VectorIS3_Lj0ENS_18PartitionAllocatorEEEEEEN4base12OnceCallbackIT1_EEOT_DpOT0_: argument 0"}
!6 = distinct !{!6, !"_ZN3WTF4BindIZN5blink26InspectorCacheStorageAgent17requestCacheNamesERKNS_6StringENSt3__110unique_ptrINS1_8protocol12CacheStorage7Backend25RequestCacheNamesCallbackENS6_14default_deleteISB_EEEEE3$_0JS5_SE_EFvRKNS_6VectorIS3_Lj0ENS_18PartitionAllocatorEEEEEEN4base12OnceCallbackIT1_EEOT_DpOT0_"}
!7 = !{!8, !10, !5}
!8 = distinct !{!8, !9, !"_ZN4base8internal8BindImplINS_12OnceCallbackEZN5blink26InspectorCacheStorageAgent17requestCacheNamesERKN3WTF6StringENSt3__110unique_ptrINS3_8protocol12CacheStorage7Backend25RequestCacheNamesCallbackENS9_14default_deleteISE_EEEEE3$_0JS8_SH_EEEDcOT0_DpOT1_: argument 0"}
!9 = distinct !{!9, !"_ZN4base8internal8BindImplINS_12OnceCallbackEZN5blink26InspectorCacheStorageAgent17requestCacheNamesERKN3WTF6StringENSt3__110unique_ptrINS3_8protocol12CacheStorage7Backend25RequestCacheNamesCallbackENS9_14default_deleteISE_EEEEE3$_0JS8_SH_EEEDcOT0_DpOT1_"}
!10 = distinct !{!10, !11, !"_ZN4base8BindOnceIZN5blink26InspectorCacheStorageAgent17requestCacheNamesERKN3WTF6StringENSt3__110unique_ptrINS1_8protocol12CacheStorage7Backend25RequestCacheNamesCallbackENS7_14default_deleteISC_EEEEE3$_0JS6_SF_EEENS_12OnceCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSK_DpOSL_: argument 0"}
!11 = distinct !{!11, !"_ZN4base8BindOnceIZN5blink26InspectorCacheStorageAgent17requestCacheNamesERKN3WTF6StringENSt3__110unique_ptrINS1_8protocol12CacheStorage7Backend25RequestCacheNamesCallbackENS7_14default_deleteISC_EEEEE3$_0JS6_SF_EEENS_12OnceCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSK_DpOSL_"}
!12 = !{!13}
!13 = distinct !{!13, !14, !"_ZN5blink12_GLOBAL__N_119GetExecutionContextEPNS_15InspectedFramesERKN3WTF6StringEPPNS_16ExecutionContextE: argument 0"}
!14 = distinct !{!14, !"_ZN5blink12_GLOBAL__N_119GetExecutionContextEPNS_15InspectedFramesERKN3WTF6StringEPPNS_16ExecutionContextE"}
!15 = !{!16, !18}
!16 = distinct !{!16, !17, !"_ZN4mojo16ScopedHandleBaseINS_17MessagePipeHandleEE7releaseEv: argument 0"}
!17 = distinct !{!17, !"_ZN4mojo16ScopedHandleBaseINS_17MessagePipeHandleEE7releaseEv"}
!18 = distinct !{!18, !19, !"_ZN4mojo15PendingReceiverIN5blink5mojom5blink12CacheStorageEE8PassPipeEv: argument 0"}
!19 = distinct !{!19, !"_ZN4mojo15PendingReceiverIN5blink5mojom5blink12CacheStorageEE8PassPipeEv"}
!20 = !{i8 0, i8 2}
!21 = !{!22}
!22 = distinct !{!22, !23, !"_ZN3WTF4BindIZN5blink26InspectorCacheStorageAgent14requestEntriesERKNS_6StringEN5crdtp6detail10ValueMaybeIiEES9_NS8_IS3_EENSt3__110unique_ptrINS1_8protocol12CacheStorage7Backend22RequestEntriesCallbackENSB_14default_deleteISG_EEEEE3$_1JRNS1_12_GLOBAL__N_117DataRequestParamsESJ_EFvN4mojo9StructPtrINS1_5mojom5blink10OpenResultEEEEEEN4base12OnceCallbackIT1_EEOT_DpOT0_: argument 0"}
!23 = distinct !{!23, !"_ZN3WTF4BindIZN5blink26InspectorCacheStorageAgent14requestEntriesERKNS_6StringEN5crdtp6detail10ValueMaybeIiEES9_NS8_IS3_EENSt3__110unique_ptrINS1_8protocol12CacheStorage7Backend22RequestEntriesCallbackENSB_14default_deleteISG_EEEEE3$_1JRNS1_12_GLOBAL__N_117DataRequestParamsESJ_EFvN4mojo9StructPtrINS1_5mojom5blink10OpenResultEEEEEEN4base12OnceCallbackIT1_EEOT_DpOT0_"}
!24 = !{!25, !27, !22}
!25 = distinct !{!25, !26, !"_ZN4base8internal8BindImplINS_12OnceCallbackEZN5blink26InspectorCacheStorageAgent14requestEntriesERKN3WTF6StringEN5crdtp6detail10ValueMaybeIiEESC_NSB_IS6_EENSt3__110unique_ptrINS3_8protocol12CacheStorage7Backend22RequestEntriesCallbackENSE_14default_deleteISJ_EEEEE3$_1JRNS3_12_GLOBAL__N_117DataRequestParamsESM_EEEDcOT0_DpOT1_: argument 0"}
!26 = distinct !{!26, !"_ZN4base8internal8BindImplINS_12OnceCallbackEZN5blink26InspectorCacheStorageAgent14requestEntriesERKN3WTF6StringEN5crdtp6detail10ValueMaybeIiEESC_NSB_IS6_EENSt3__110unique_ptrINS3_8protocol12CacheStorage7Backend22RequestEntriesCallbackENSE_14default_deleteISJ_EEEEE3$_1JRNS3_12_GLOBAL__N_117DataRequestParamsESM_EEEDcOT0_DpOT1_"}
!27 = distinct !{!27, !28, !"_ZN4base8BindOnceIZN5blink26InspectorCacheStorageAgent14requestEntriesERKN3WTF6StringEN5crdtp6detail10ValueMaybeIiEESA_NS9_IS4_EENSt3__110unique_ptrINS1_8protocol12CacheStorage7Backend22RequestEntriesCallbackENSC_14default_deleteISH_EEEEE3$_1JRNS1_12_GLOBAL__N_117DataRequestParamsESK_EEENS_12OnceCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSS_DpOST_: argument 0"}
!28 = distinct !{!28, !"_ZN4base8BindOnceIZN5blink26InspectorCacheStorageAgent14requestEntriesERKN3WTF6StringEN5crdtp6detail10ValueMaybeIiEESA_NS9_IS4_EENSt3__110unique_ptrINS1_8protocol12CacheStorage7Backend22RequestEntriesCallbackENSC_14default_deleteISH_EEEEE3$_1JRNS1_12_GLOBAL__N_117DataRequestParamsESK_EEENS_12OnceCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSS_DpOST_"}
!29 = !{!30}
!30 = distinct !{!30, !31, !"_ZN5blink12_GLOBAL__N_112ParseCacheIdERKN3WTF6StringEPS2_S5_: argument 0"}
!31 = distinct !{!31, !"_ZN5blink12_GLOBAL__N_112ParseCacheIdERKN3WTF6StringEPS2_S5_"}
!32 = !{!33, !35, !37}
!33 = distinct !{!33, !34, !"_ZN4base8internal8BindImplINS_12OnceCallbackEZN5blink26InspectorCacheStorageAgent11deleteCacheERKN3WTF6StringENSt3__110unique_ptrINS3_8protocol12CacheStorage7Backend19DeleteCacheCallbackENS9_14default_deleteISE_EEEEE3$_2JSH_EEEDcOT0_DpOT1_: argument 0"}
!34 = distinct !{!34, !"_ZN4base8internal8BindImplINS_12OnceCallbackEZN5blink26InspectorCacheStorageAgent11deleteCacheERKN3WTF6StringENSt3__110unique_ptrINS3_8protocol12CacheStorage7Backend19DeleteCacheCallbackENS9_14default_deleteISE_EEEEE3$_2JSH_EEEDcOT0_DpOT1_"}
!35 = distinct !{!35, !36, !"_ZN4base8BindOnceIZN5blink26InspectorCacheStorageAgent11deleteCacheERKN3WTF6StringENSt3__110unique_ptrINS1_8protocol12CacheStorage7Backend19DeleteCacheCallbackENS7_14default_deleteISC_EEEEE3$_2JSF_EEENS_12OnceCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSK_DpOSL_: argument 0"}
!36 = distinct !{!36, !"_ZN4base8BindOnceIZN5blink26InspectorCacheStorageAgent11deleteCacheERKN3WTF6StringENSt3__110unique_ptrINS1_8protocol12CacheStorage7Backend19DeleteCacheCallbackENS7_14default_deleteISC_EEEEE3$_2JSF_EEENS_12OnceCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSK_DpOSL_"}
!37 = distinct !{!37, !38, !"_ZN3WTF4BindIZN5blink26InspectorCacheStorageAgent11deleteCacheERKNS_6StringENSt3__110unique_ptrINS1_8protocol12CacheStorage7Backend19DeleteCacheCallbackENS6_14default_deleteISB_EEEEE3$_2JSE_EFvNS1_5mojom17CacheStorageErrorEEEEN4base12OnceCallbackIT1_EEOT_DpOT0_: argument 0"}
!38 = distinct !{!38, !"_ZN3WTF4BindIZN5blink26InspectorCacheStorageAgent11deleteCacheERKNS_6StringENSt3__110unique_ptrINS1_8protocol12CacheStorage7Backend19DeleteCacheCallbackENS6_14default_deleteISB_EEEEE3$_2JSE_EFvNS1_5mojom17CacheStorageErrorEEEEN4base12OnceCallbackIT1_EEOT_DpOT0_"}
!39 = !{!40}
!40 = distinct !{!40, !41, !"_ZN3WTF4BindIZN5blink26InspectorCacheStorageAgent11deleteEntryERKNS_6StringES5_NSt3__110unique_ptrINS1_8protocol12CacheStorage7Backend19DeleteEntryCallbackENS6_14default_deleteISB_EEEEE3$_3JRS3_S5_RlSE_EFvN4mojo9StructPtrINS1_5mojom5blink10OpenResultEEEEEEN4base12OnceCallbackIT1_EEOT_DpOT0_: argument 0"}
!41 = distinct !{!41, !"_ZN3WTF4BindIZN5blink26InspectorCacheStorageAgent11deleteEntryERKNS_6StringES5_NSt3__110unique_ptrINS1_8protocol12CacheStorage7Backend19DeleteEntryCallbackENS6_14default_deleteISB_EEEEE3$_3JRS3_S5_RlSE_EFvN4mojo9StructPtrINS1_5mojom5blink10OpenResultEEEEEEN4base12OnceCallbackIT1_EEOT_DpOT0_"}
!42 = !{!43, !45, !40}
!43 = distinct !{!43, !44, !"_ZN4base8internal8BindImplINS_12OnceCallbackEZN5blink26InspectorCacheStorageAgent11deleteEntryERKN3WTF6StringES8_NSt3__110unique_ptrINS3_8protocol12CacheStorage7Backend19DeleteEntryCallbackENS9_14default_deleteISE_EEEEE3$_3JRS6_S8_RlSH_EEEDcOT0_DpOT1_: argument 0"}
!44 = distinct !{!44, !"_ZN4base8internal8BindImplINS_12OnceCallbackEZN5blink26InspectorCacheStorageAgent11deleteEntryERKN3WTF6StringES8_NSt3__110unique_ptrINS3_8protocol12CacheStorage7Backend19DeleteEntryCallbackENS9_14default_deleteISE_EEEEE3$_3JRS6_S8_RlSH_EEEDcOT0_DpOT1_"}
!45 = distinct !{!45, !46, !"_ZN4base8BindOnceIZN5blink26InspectorCacheStorageAgent11deleteEntryERKN3WTF6StringES6_NSt3__110unique_ptrINS1_8protocol12CacheStorage7Backend19DeleteEntryCallbackENS7_14default_deleteISC_EEEEE3$_3JRS4_S6_RlSF_EEENS_12OnceCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSM_DpOSN_: argument 0"}
!46 = distinct !{!46, !"_ZN4base8BindOnceIZN5blink26InspectorCacheStorageAgent11deleteEntryERKN3WTF6StringES6_NSt3__110unique_ptrINS1_8protocol12CacheStorage7Backend19DeleteEntryCallbackENS7_14default_deleteISC_EEEEE3$_3JRS4_S6_RlSF_EEENS_12OnceCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSM_DpOSN_"}
!47 = !{!48}
!48 = distinct !{!48, !49, !"_ZN5blink5mojom5blink15FetchAPIRequest3NewIJEEEN4mojo9StructPtrIS2_EEDpOT_: argument 0"}
!49 = distinct !{!49, !"_ZN5blink5mojom5blink15FetchAPIRequest3NewIJEEEN4mojo9StructPtrIS2_EEDpOT_"}
!50 = !{!51}
!51 = distinct !{!51, !52, !"_ZN5blink5mojom5blink22MultiCacheQueryOptions3NewIJEEEN4mojo9StructPtrIS2_EEDpOT_: argument 0"}
!52 = distinct !{!52, !"_ZN5blink5mojom5blink22MultiCacheQueryOptions3NewIJEEEN4mojo9StructPtrIS2_EEDpOT_"}
!53 = !{!54}
!54 = distinct !{!54, !55, !"_ZN5blink5mojom5blink17CacheQueryOptions3NewIJEEEN4mojo16InlinedStructPtrIS2_EEDpOT_: argument 0"}
!55 = distinct !{!55, !"_ZN5blink5mojom5blink17CacheQueryOptions3NewIJEEEN4mojo16InlinedStructPtrIS2_EEDpOT_"}
!56 = !{!57, !59, !61}
!57 = distinct !{!57, !58, !"_ZN4base8internal8BindImplINS_12OnceCallbackEZN5blink26InspectorCacheStorageAgent21requestCachedResponseERKN3WTF6StringES8_NSt3__110unique_ptrINS9_6vectorINSA_INS3_8protocol12CacheStorage6HeaderENS9_14default_deleteISE_EEEENS9_9allocatorISH_EEEENSF_ISK_EEEENSA_INSD_7Backend29RequestCachedResponseCallbackENSF_ISO_EEEEE3$_4JSQ_EEEDcOT0_DpOT1_: argument 0"}
!58 = distinct !{!58, !"_ZN4base8internal8BindImplINS_12OnceCallbackEZN5blink26InspectorCacheStorageAgent21requestCachedResponseERKN3WTF6StringES8_NSt3__110unique_ptrINS9_6vectorINSA_INS3_8protocol12CacheStorage6HeaderENS9_14default_deleteISE_EEEENS9_9allocatorISH_EEEENSF_ISK_EEEENSA_INSD_7Backend29RequestCachedResponseCallbackENSF_ISO_EEEEE3$_4JSQ_EEEDcOT0_DpOT1_"}
!59 = distinct !{!59, !60, !"_ZN4base8BindOnceIZN5blink26InspectorCacheStorageAgent21requestCachedResponseERKN3WTF6StringES6_NSt3__110unique_ptrINS7_6vectorINS8_INS1_8protocol12CacheStorage6HeaderENS7_14default_deleteISC_EEEENS7_9allocatorISF_EEEENSD_ISI_EEEENS8_INSB_7Backend29RequestCachedResponseCallbackENSD_ISM_EEEEE3$_4JSO_EEENS_12OnceCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOST_DpOSU_: argument 0"}
!60 = distinct !{!60, !"_ZN4base8BindOnceIZN5blink26InspectorCacheStorageAgent21requestCachedResponseERKN3WTF6StringES6_NSt3__110unique_ptrINS7_6vectorINS8_INS1_8protocol12CacheStorage6HeaderENS7_14default_deleteISC_EEEENS7_9allocatorISF_EEEENSD_ISI_EEEENS8_INSB_7Backend29RequestCachedResponseCallbackENSD_ISM_EEEEE3$_4JSO_EEENS_12OnceCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOST_DpOSU_"}
!61 = distinct !{!61, !62, !"_ZN3WTF4BindIZN5blink26InspectorCacheStorageAgent21requestCachedResponseERKNS_6StringES5_NSt3__110unique_ptrINS6_6vectorINS7_INS1_8protocol12CacheStorage6HeaderENS6_14default_deleteISB_EEEENS6_9allocatorISE_EEEENSC_ISH_EEEENS7_INSA_7Backend29RequestCachedResponseCallbackENSC_ISL_EEEEE3$_4JSN_EFvN4mojo9StructPtrINS1_5mojom5blink11MatchResultEEEEEEN4base12OnceCallbackIT1_EEOT_DpOT0_: argument 0"}
!62 = distinct !{!62, !"_ZN3WTF4BindIZN5blink26InspectorCacheStorageAgent21requestCachedResponseERKNS_6StringES5_NSt3__110unique_ptrINS6_6vectorINS7_INS1_8protocol12CacheStorage6HeaderENS6_14default_deleteISB_EEEENS6_9allocatorISE_EEEENSC_ISH_EEEENS7_INSA_7Backend29RequestCachedResponseCallbackENSC_ISL_EEEEE3$_4JSN_EFvN4mojo9StructPtrINS1_5mojom5blink11MatchResultEEEEEEN4base12OnceCallbackIT1_EEOT_DpOT0_"}
!63 = !{!64}
!64 = distinct !{!64, !65, !"_ZN4mojo16ScopedHandleBaseINS_17MessagePipeHandleEE7releaseEv: argument 0"}
!65 = distinct !{!65, !"_ZN4mojo16ScopedHandleBaseINS_17MessagePipeHandleEE7releaseEv"}
!66 = !{!67}
!67 = distinct !{!67, !68, !"_ZN4mojo16ScopedHandleBaseINS_17MessagePipeHandleEE7releaseEv: argument 0"}
!68 = distinct !{!68, !"_ZN4mojo16ScopedHandleBaseINS_17MessagePipeHandleEE7releaseEv"}
!69 = !{!70}
!70 = distinct !{!70, !71, !"_ZN3WTF22KeyValuePairHashTraitsINS_10HashTraitsINS_6StringEEENS1_IN4mojo6RemoteIN5blink5mojom5blink12CacheStorageEEEEEE10EmptyValueEv: argument 0"}
!71 = distinct !{!71, !"_ZN3WTF22KeyValuePairHashTraitsINS_10HashTraitsINS_6StringEEENS1_IN4mojo6RemoteIN5blink5mojom5blink12CacheStorageEEEEEE10EmptyValueEv"}
!72 = !{!73}
!73 = distinct !{!73, !74, !"_ZN3WTF17GenericHashTraitsIN4mojo6RemoteIN5blink5mojom5blink12CacheStorageEEEE10EmptyValueEv: argument 0"}
!74 = distinct !{!74, !"_ZN3WTF17GenericHashTraitsIN4mojo6RemoteIN5blink5mojom5blink12CacheStorageEEEE10EmptyValueEv"}
!75 = distinct !{!75, !76}
!76 = !{!"llvm.loop.unroll.disable"}
!77 = !{!78}
!78 = distinct !{!78, !79, !"_ZN5blink5mojom5blink17CacheQueryOptions3NewIJEEEN4mojo16InlinedStructPtrIS2_EEDpOT_: argument 0"}
!79 = distinct !{!79, !"_ZN5blink5mojom5blink17CacheQueryOptions3NewIJEEEN4mojo16InlinedStructPtrIS2_EEDpOT_"}
!80 = !{!81}
!81 = distinct !{!81, !82, !"_ZN3WTF4BindIZN5blink12_GLOBAL__N_126GetCacheKeysForRequestData8DispatchENSt3__110unique_ptrIS3_NS4_14default_deleteIS3_EEEEEUlNS2_17DataRequestParamsES8_N4mojo9StructPtrINS1_5mojom5blink15CacheKeysResultEEEE_JRS9_S8_EFvSF_EEEN4base12OnceCallbackIT1_EEOT_DpOT0_: argument 0"}
!82 = distinct !{!82, !"_ZN3WTF4BindIZN5blink12_GLOBAL__N_126GetCacheKeysForRequestData8DispatchENSt3__110unique_ptrIS3_NS4_14default_deleteIS3_EEEEEUlNS2_17DataRequestParamsES8_N4mojo9StructPtrINS1_5mojom5blink15CacheKeysResultEEEE_JRS9_S8_EFvSF_EEEN4base12OnceCallbackIT1_EEOT_DpOT0_"}
!83 = !{!84, !86, !81}
!84 = distinct !{!84, !85, !"_ZN4base8internal8BindImplINS_12OnceCallbackEZN5blink12_GLOBAL__N_126GetCacheKeysForRequestData8DispatchENSt3__110unique_ptrIS5_NS6_14default_deleteIS5_EEEEEUlNS4_17DataRequestParamsESA_N4mojo9StructPtrINS3_5mojom5blink15CacheKeysResultEEEE_JRSB_SA_EEEDcOT0_DpOT1_: argument 0"}
!85 = distinct !{!85, !"_ZN4base8internal8BindImplINS_12OnceCallbackEZN5blink12_GLOBAL__N_126GetCacheKeysForRequestData8DispatchENSt3__110unique_ptrIS5_NS6_14default_deleteIS5_EEEEEUlNS4_17DataRequestParamsESA_N4mojo9StructPtrINS3_5mojom5blink15CacheKeysResultEEEE_JRSB_SA_EEEDcOT0_DpOT1_"}
!86 = distinct !{!86, !87, !"_ZN4base8BindOnceIZN5blink12_GLOBAL__N_126GetCacheKeysForRequestData8DispatchENSt3__110unique_ptrIS3_NS4_14default_deleteIS3_EEEEEUlNS2_17DataRequestParamsES8_N4mojo9StructPtrINS1_5mojom5blink15CacheKeysResultEEEE_JRS9_S8_EEENS_12OnceCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSL_DpOSM_: argument 0"}
!87 = distinct !{!87, !"_ZN4base8BindOnceIZN5blink12_GLOBAL__N_126GetCacheKeysForRequestData8DispatchENSt3__110unique_ptrIS3_NS4_14default_deleteIS3_EEEEEUlNS2_17DataRequestParamsES8_N4mojo9StructPtrINS1_5mojom5blink15CacheKeysResultEEEE_JRS9_S8_EEENS_12OnceCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSL_DpOSM_"}
!88 = !{!89}
!89 = distinct !{!89, !90, !"_ZNK4mojo9StructPtrIN5blink5mojom5blink8ReferrerEE5CloneEv: argument 0"}
!90 = distinct !{!90, !"_ZNK4mojo9StructPtrIN5blink5mojom5blink8ReferrerEE5CloneEv"}
!91 = !{!92, !89}
!92 = distinct !{!92, !93, !"_ZNK5blink5mojom5blink8Referrer5CloneIN4mojo9StructPtrIS2_EEEES6_v: argument 0"}
!93 = distinct !{!93, !"_ZNK5blink5mojom5blink8Referrer5CloneIN4mojo9StructPtrIS2_EEEES6_v"}
!94 = !{!95, !92, !89}
!95 = distinct !{!95, !96, !"_ZN5blink5mojom5blink8Referrer3NewIJNS_4KURLEN7network5mojom14ReferrerPolicyEEEEN4mojo9StructPtrIS2_EEDpOT_: argument 0"}
!96 = distinct !{!96, !"_ZN5blink5mojom5blink8Referrer3NewIJNS_4KURLEN7network5mojom14ReferrerPolicyEEEEN4mojo9StructPtrIS2_EEDpOT_"}
!97 = !{!98}
!98 = distinct !{!98, !99, !"_ZN5blink5mojom5blink17CacheQueryOptions3NewIJEEEN4mojo16InlinedStructPtrIS2_EEDpOT_: argument 0"}
!99 = distinct !{!99, !"_ZN5blink5mojom5blink17CacheQueryOptions3NewIJEEEN4mojo16InlinedStructPtrIS2_EEDpOT_"}
!100 = !{!101, !103, !105}
!101 = distinct !{!101, !102, !"_ZN4base8internal8BindImplINS_12OnceCallbackEZN5blink12_GLOBAL__N_120ResponsesAccumulator8DispatchEN3WTF6VectorIN4mojo9StructPtrINS3_5mojom5blink15FetchAPIRequestEEELj0ENS6_18PartitionAllocatorEEEEUl13scoped_refptrIS5_ESD_NS9_INSB_11MatchResultEEEE_JSH_SD_EEEDcOT0_DpOT1_: argument 0"}
!102 = distinct !{!102, !"_ZN4base8internal8BindImplINS_12OnceCallbackEZN5blink12_GLOBAL__N_120ResponsesAccumulator8DispatchEN3WTF6VectorIN4mojo9StructPtrINS3_5mojom5blink15FetchAPIRequestEEELj0ENS6_18PartitionAllocatorEEEEUl13scoped_refptrIS5_ESD_NS9_INSB_11MatchResultEEEE_JSH_SD_EEEDcOT0_DpOT1_"}
!103 = distinct !{!103, !104, !"_ZN4base8BindOnceIZN5blink12_GLOBAL__N_120ResponsesAccumulator8DispatchEN3WTF6VectorIN4mojo9StructPtrINS1_5mojom5blink15FetchAPIRequestEEELj0ENS4_18PartitionAllocatorEEEEUl13scoped_refptrIS3_ESB_NS7_INS9_11MatchResultEEEE_JSF_SB_EEENS_12OnceCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSM_DpOSN_: argument 0"}
!104 = distinct !{!104, !"_ZN4base8BindOnceIZN5blink12_GLOBAL__N_120ResponsesAccumulator8DispatchEN3WTF6VectorIN4mojo9StructPtrINS1_5mojom5blink15FetchAPIRequestEEELj0ENS4_18PartitionAllocatorEEEEUl13scoped_refptrIS3_ESB_NS7_INS9_11MatchResultEEEE_JSF_SB_EEENS_12OnceCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSM_DpOSN_"}
!105 = distinct !{!105, !106, !"_ZN3WTF4BindIZN5blink12_GLOBAL__N_120ResponsesAccumulator8DispatchENS_6VectorIN4mojo9StructPtrINS1_5mojom5blink15FetchAPIRequestEEELj0ENS_18PartitionAllocatorEEEEUl13scoped_refptrIS3_ESA_NS6_INS8_11MatchResultEEEE_JSE_SA_EFvSG_EEEN4base12OnceCallbackIT1_EEOT_DpOT0_: argument 0"}
!106 = distinct !{!106, !"_ZN3WTF4BindIZN5blink12_GLOBAL__N_120ResponsesAccumulator8DispatchENS_6VectorIN4mojo9StructPtrINS1_5mojom5blink15FetchAPIRequestEEELj0ENS_18PartitionAllocatorEEEEUl13scoped_refptrIS3_ESA_NS6_INS8_11MatchResultEEEE_JSE_SA_EFvSG_EEEN4base12OnceCallbackIT1_EEOT_DpOT0_"}
!107 = !{!108}
!108 = distinct !{!108, !109, !"_ZN4mojo8internal27AssociatedInterfacePtrStateIN5blink5mojom5blink17CacheStorageCacheEE13PassInterfaceEv: argument 0"}
!109 = distinct !{!109, !"_ZN4mojo8internal27AssociatedInterfacePtrStateIN5blink5mojom5blink17CacheStorageCacheEE13PassInterfaceEv"}
!110 = distinct !{!110, !76}
!111 = distinct !{!111, !76}
!112 = distinct !{!112, !76}
!113 = distinct !{!113, !76}
!114 = !{!115}
!115 = distinct !{!115, !116, !"_ZN5blink5mojom5blink14BatchOperation3NewIJEEEN4mojo9StructPtrIS2_EEDpOT_: argument 0"}
!116 = distinct !{!116, !"_ZN5blink5mojom5blink14BatchOperation3NewIJEEEN4mojo9StructPtrIS2_EEDpOT_"}
!117 = !{!118}
!118 = distinct !{!118, !119, !"_ZN5blink5mojom5blink15FetchAPIRequest3NewIJEEEN4mojo9StructPtrIS2_EEDpOT_: argument 0"}
!119 = distinct !{!119, !"_ZN5blink5mojom5blink15FetchAPIRequest3NewIJEEEN4mojo9StructPtrIS2_EEDpOT_"}
!120 = !{!121, !123, !125}
!121 = distinct !{!121, !122, !"_ZN4base8internal8BindImplINS_12OnceCallbackEZZN5blink26InspectorCacheStorageAgent11deleteEntryERKN3WTF6StringES8_NSt3__110unique_ptrINS3_8protocol12CacheStorage7Backend19DeleteEntryCallbackENS9_14default_deleteISE_EEEEENK3$_3clES6_S6_lSH_N4mojo9StructPtrINS3_5mojom5blink10OpenResultEEEEUlNSJ_16AssociatedRemoteINSM_17CacheStorageCacheEEESH_NSJ_16InlinedStructPtrINSM_24CacheStorageVerboseErrorEEEE_JSR_SH_EEEDcOT0_DpOT1_: argument 0"}
!122 = distinct !{!122, !"_ZN4base8internal8BindImplINS_12OnceCallbackEZZN5blink26InspectorCacheStorageAgent11deleteEntryERKN3WTF6StringES8_NSt3__110unique_ptrINS3_8protocol12CacheStorage7Backend19DeleteEntryCallbackENS9_14default_deleteISE_EEEEENK3$_3clES6_S6_lSH_N4mojo9StructPtrINS3_5mojom5blink10OpenResultEEEEUlNSJ_16AssociatedRemoteINSM_17CacheStorageCacheEEESH_NSJ_16InlinedStructPtrINSM_24CacheStorageVerboseErrorEEEE_JSR_SH_EEEDcOT0_DpOT1_"}
!123 = distinct !{!123, !124, !"_ZN4base8BindOnceIZZN5blink26InspectorCacheStorageAgent11deleteEntryERKN3WTF6StringES6_NSt3__110unique_ptrINS1_8protocol12CacheStorage7Backend19DeleteEntryCallbackENS7_14default_deleteISC_EEEEENK3$_3clES4_S4_lSF_N4mojo9StructPtrINS1_5mojom5blink10OpenResultEEEEUlNSH_16AssociatedRemoteINSK_17CacheStorageCacheEEESF_NSH_16InlinedStructPtrINSK_24CacheStorageVerboseErrorEEEE_JSP_SF_EEENS_12OnceCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSX_DpOSY_: argument 0"}
!124 = distinct !{!124, !"_ZN4base8BindOnceIZZN5blink26InspectorCacheStorageAgent11deleteEntryERKN3WTF6StringES6_NSt3__110unique_ptrINS1_8protocol12CacheStorage7Backend19DeleteEntryCallbackENS7_14default_deleteISC_EEEEENK3$_3clES4_S4_lSF_N4mojo9StructPtrINS1_5mojom5blink10OpenResultEEEEUlNSH_16AssociatedRemoteINSK_17CacheStorageCacheEEESF_NSH_16InlinedStructPtrINSK_24CacheStorageVerboseErrorEEEE_JSP_SF_EEENS_12OnceCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSX_DpOSY_"}
!125 = distinct !{!125, !126, !"_ZN3WTF4BindIZZN5blink26InspectorCacheStorageAgent11deleteEntryERKNS_6StringES5_NSt3__110unique_ptrINS1_8protocol12CacheStorage7Backend19DeleteEntryCallbackENS6_14default_deleteISB_EEEEENK3$_3clES3_S3_lSE_N4mojo9StructPtrINS1_5mojom5blink10OpenResultEEEEUlNSG_16AssociatedRemoteINSJ_17CacheStorageCacheEEESE_NSG_16InlinedStructPtrINSJ_24CacheStorageVerboseErrorEEEE_JSO_SE_EFvSR_EEEN4base12OnceCallbackIT1_EEOT_DpOT0_: argument 0"}
!126 = distinct !{!126, !"_ZN3WTF4BindIZZN5blink26InspectorCacheStorageAgent11deleteEntryERKNS_6StringES5_NSt3__110unique_ptrINS1_8protocol12CacheStorage7Backend19DeleteEntryCallbackENS6_14default_deleteISB_EEEEENK3$_3clES3_S3_lSE_N4mojo9StructPtrINS1_5mojom5blink10OpenResultEEEEUlNSG_16AssociatedRemoteINSJ_17CacheStorageCacheEEESE_NSG_16InlinedStructPtrINSJ_24CacheStorageVerboseErrorEEEE_JSO_SE_EFvSR_EEEN4base12OnceCallbackIT1_EEOT_DpOT0_"}
!127 = distinct !{!127, !76}
!128 = distinct !{!128, !76}
