; ModuleID = '../../ui/views/view_targeter_delegate.cc'
source_filename = "../../ui/views/view_targeter_delegate.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.views::ViewTargeterDelegate" = type { i32 (...)** }
%"class.views::View" = type <{ %"class.ui::LayerDelegate", %"class.ui::LayerObserver", %"class.ui::LayerOwner", %"class.ui::AcceleratorTarget", %"class.ui::EventTarget", %"class.ui::EventHandler", %"class.ui::PropertyHandler", %"class.ui::metadata::MetaDataProvider", i8, [3 x i8], i32, i32, [4 x i8], %"class.views::View"*, %"class.std::__1::vector.35", i8, [3 x i8], %"class.absl::optional", %"class.gfx::Rect", i8, i8, i8, i8, [4 x i8], %"class.std::__1::unique_ptr.42", %class.SkPath, i8, [7 x i8], %"class.std::__1::unique_ptr.61", %"class.absl::optional.67", i8, [7 x i8], %"class.std::__1::unique_ptr.72", %"class.std::__1::unique_ptr.78", %"class.ui::PaintCache", i8, [7 x i8], %"class.ui::NativeTheme"*, i8, %"class.absl::optional.89", i8, i8, [3 x i8], %"class.std::__1::vector.94", %"class.std::__1::unique_ptr.101", %"class.views::FocusManager"*, %"class.std::__1::unique_ptr.107", i64, %"class.views::View"*, %"class.views::View"*, i32, [4 x i8], %"class.views::ContextMenuController"*, %"class.views::DragController"*, %"class.std::__1::unique_ptr.114", %"class.std::__1::unique_ptr.120", %"class.base::ObserverList.126", i32, [4 x i8] }>
%"class.ui::LayerDelegate" = type { i32 (...)** }
%"class.ui::LayerObserver" = type { i32 (...)** }
%"class.ui::LayerOwner" = type { i32 (...)**, %"class.std::__1::unique_ptr", %"class.ui::Layer"*, %"class.base::ObserverList" }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.ui::Layer"* }
%"class.ui::Layer" = type opaque
%"class.base::ObserverList" = type <{ %"class.std::__1::vector", %"class.base::LinkedList", i64, i32, [4 x i8] }>
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"*, %"class.std::__1::__compressed_pair.1" }
%"class.base::internal::UncheckedObserverAdapter" = type { i8* }
%"class.std::__1::__compressed_pair.1" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"struct.std::__1::__compressed_pair_elem.2" = type { %"class.base::internal::UncheckedObserverAdapter"* }
%"class.base::LinkedList" = type { %"class.base::LinkNode" }
%"class.base::LinkNode" = type { %"class.base::internal::LinkNodeBase" }
%"class.base::internal::LinkNodeBase" = type { %"class.base::internal::LinkNodeBase"*, %"class.base::internal::LinkNodeBase"* }
%"class.ui::AcceleratorTarget" = type { i32 (...)** }
%"class.ui::EventTarget" = type { i32 (...)**, %"class.std::__1::vector.4", %"class.std::__1::vector.11", %"class.ui::EventHandler"* }
%"class.std::__1::vector.4" = type { %"class.std::__1::__vector_base.5" }
%"class.std::__1::__vector_base.5" = type { %"struct.ui::EventTarget::PrioritizedHandler"*, %"struct.ui::EventTarget::PrioritizedHandler"*, %"class.std::__1::__compressed_pair.6" }
%"struct.ui::EventTarget::PrioritizedHandler" = type <{ %"class.ui::EventHandler"*, i32, [4 x i8] }>
%"class.std::__1::__compressed_pair.6" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"struct.std::__1::__compressed_pair_elem.7" = type { %"struct.ui::EventTarget::PrioritizedHandler"* }
%"class.std::__1::vector.11" = type { %"class.std::__1::__vector_base.12" }
%"class.std::__1::__vector_base.12" = type { %"class.ui::EventHandler"**, %"class.ui::EventHandler"**, %"class.std::__1::__compressed_pair.13" }
%"class.std::__1::__compressed_pair.13" = type { %"struct.std::__1::__compressed_pair_elem.14" }
%"struct.std::__1::__compressed_pair_elem.14" = type { %"class.ui::EventHandler"** }
%"class.ui::EventHandler" = type { i32 (...)**, %"class.std::__1::stack" }
%"class.std::__1::stack" = type { %"class.base::circular_deque" }
%"class.base::circular_deque" = type { %"class.base::internal::VectorBuffer", i64, i64 }
%"class.base::internal::VectorBuffer" = type { %"class.ui::EventDispatcher"**, i64 }
%"class.ui::EventDispatcher" = type opaque
%"class.ui::PropertyHandler" = type { i32 (...)**, %"class.std::__1::map" }
%"class.std::__1::map" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.18", %"class.std::__1::__compressed_pair.23" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type opaque
%"class.std::__1::__compressed_pair.18" = type { %"struct.std::__1::__compressed_pair_elem.19" }
%"struct.std::__1::__compressed_pair_elem.19" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.23" = type { %"struct.std::__1::__compressed_pair_elem.24" }
%"struct.std::__1::__compressed_pair_elem.24" = type { i64 }
%"class.ui::metadata::MetaDataProvider" = type { i32 (...)**, %"class.std::__1::map.26" }
%"class.std::__1::map.26" = type { %"class.std::__1::__tree.27" }
%"class.std::__1::__tree.27" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.28", %"class.std::__1::__compressed_pair.32" }
%"class.std::__1::__compressed_pair.28" = type { %"struct.std::__1::__compressed_pair_elem.19" }
%"class.std::__1::__compressed_pair.32" = type { %"struct.std::__1::__compressed_pair_elem.24" }
%"class.std::__1::vector.35" = type { %"class.std::__1::__vector_base.36" }
%"class.std::__1::__vector_base.36" = type { %"class.views::View"**, %"class.views::View"**, %"class.std::__1::__compressed_pair.37" }
%"class.std::__1::__compressed_pair.37" = type { %"struct.std::__1::__compressed_pair_elem.38" }
%"struct.std::__1::__compressed_pair_elem.38" = type { %"class.views::View"** }
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon }
%union.anon = type { %"class.gfx::Size" }
%"class.gfx::Size" = type { i32, i32 }
%"class.gfx::Rect" = type { %"class.gfx::Point", %"class.gfx::Size" }
%"class.gfx::Point" = type { i32, i32 }
%"class.std::__1::unique_ptr.42" = type { %"class.std::__1::__compressed_pair.43" }
%"class.std::__1::__compressed_pair.43" = type { %"struct.std::__1::__compressed_pair_elem.44" }
%"struct.std::__1::__compressed_pair_elem.44" = type { %"class.std::__1::vector.35"* }
%class.SkPath = type <{ %class.sk_sp, i32, %"struct.std::__1::atomic.51", %"struct.std::__1::atomic.51", i8, i8 }>
%class.sk_sp = type { %class.SkPathRef* }
%class.SkPathRef = type <{ %class.SkNVRefCnt, %struct.SkRect, [4 x i8], %class.SkTDArray, %class.SkTDArray.49, %class.SkTDArray.50, i32, [4 x i8], %"class.SkIDChangeListener::List", i8, i8, i8, i8, i8, i8, i8, i8 }>
%class.SkNVRefCnt = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.48" }
%"struct.std::__1::__atomic_base.48" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%struct.SkRect = type { float, float, float, float }
%class.SkTDArray = type { %struct.SkPoint*, i32, i32 }
%struct.SkPoint = type { float, float }
%class.SkTDArray.49 = type { i8*, i32, i32 }
%class.SkTDArray.50 = type { float*, i32, i32 }
%"class.SkIDChangeListener::List" = type { %class.SkMutex, %class.SkTDArray.56 }
%class.SkMutex = type { %class.SkSemaphore }
%class.SkSemaphore = type { %"struct.std::__1::atomic", %class.SkOnce, %"struct.SkSemaphore::OSSemaphore"* }
%class.SkOnce = type { %"struct.std::__1::atomic.51" }
%"struct.SkSemaphore::OSSemaphore" = type opaque
%class.SkTDArray.56 = type { %class.SkIDChangeListener**, i32, i32 }
%class.SkIDChangeListener = type { %class.SkRefCnt.base, %"struct.std::__1::atomic.57", [3 x i8] }
%class.SkRefCnt.base = type { %class.SkRefCntBase.base }
%class.SkRefCntBase.base = type <{ i32 (...)**, %"struct.std::__1::atomic" }>
%"struct.std::__1::atomic.57" = type { %"struct.std::__1::__atomic_base.58" }
%"struct.std::__1::__atomic_base.58" = type { %"struct.std::__1::__cxx_atomic_impl.59" }
%"struct.std::__1::__cxx_atomic_impl.59" = type { %"struct.std::__1::__cxx_atomic_base_impl.60" }
%"struct.std::__1::__cxx_atomic_base_impl.60" = type { i8 }
%"struct.std::__1::atomic.51" = type { %"struct.std::__1::__atomic_base.52" }
%"struct.std::__1::__atomic_base.52" = type { %"struct.std::__1::__atomic_base.53" }
%"struct.std::__1::__atomic_base.53" = type { %"struct.std::__1::__cxx_atomic_impl.54" }
%"struct.std::__1::__cxx_atomic_impl.54" = type { %"struct.std::__1::__cxx_atomic_base_impl.55" }
%"struct.std::__1::__cxx_atomic_base_impl.55" = type { i8 }
%"class.std::__1::unique_ptr.61" = type { %"class.std::__1::__compressed_pair.62" }
%"class.std::__1::__compressed_pair.62" = type { %"struct.std::__1::__compressed_pair_elem.63" }
%"struct.std::__1::__compressed_pair_elem.63" = type { %"class.views::LayoutManager"* }
%"class.views::LayoutManager" = type { i32 (...)**, %"class.views::View"* }
%"class.absl::optional.67" = type { %"class.absl::optional_internal::optional_data.68" }
%"class.absl::optional_internal::optional_data.68" = type { %"class.absl::optional_internal::optional_data_base.69" }
%"class.absl::optional_internal::optional_data_base.69" = type { %"class.absl::optional_internal::optional_data_dtor_base.70" }
%"class.absl::optional_internal::optional_data_dtor_base.70" = type { i8, %union.anon.71 }
%union.anon.71 = type { %"class.views::View::DefaultFillLayout" }
%"class.views::View::DefaultFillLayout" = type { %"class.views::LayoutManager" }
%"class.std::__1::unique_ptr.72" = type { %"class.std::__1::__compressed_pair.73" }
%"class.std::__1::__compressed_pair.73" = type { %"struct.std::__1::__compressed_pair_elem.74" }
%"struct.std::__1::__compressed_pair_elem.74" = type { %"class.views::Background"* }
%"class.views::Background" = type opaque
%"class.std::__1::unique_ptr.78" = type { %"class.std::__1::__compressed_pair.79" }
%"class.std::__1::__compressed_pair.79" = type { %"struct.std::__1::__compressed_pair_elem.80" }
%"struct.std::__1::__compressed_pair_elem.80" = type { %"class.views::Border"* }
%"class.views::Border" = type opaque
%"class.ui::PaintCache" = type <{ %class.sk_sp.84, float, [4 x i8] }>
%class.sk_sp.84 = type { %"class.cc::PaintOpBuffer"* }
%"class.cc::PaintOpBuffer" = type <{ %class.SkRefCnt.base, [4 x i8], %"class.std::__1::unique_ptr.85", i64, i64, i64, i64, i64, i32, i8, [3 x i8] }>
%"class.std::__1::unique_ptr.85" = type { %"class.std::__1::__compressed_pair.86" }
%"class.std::__1::__compressed_pair.86" = type { %"struct.std::__1::__compressed_pair_elem.87" }
%"struct.std::__1::__compressed_pair_elem.87" = type { i8* }
%"class.ui::NativeTheme" = type opaque
%"class.absl::optional.89" = type { %"class.absl::optional_internal::optional_data.90" }
%"class.absl::optional_internal::optional_data.90" = type { %"class.absl::optional_internal::optional_data_base.91" }
%"class.absl::optional_internal::optional_data_base.91" = type { %"class.absl::optional_internal::optional_data_dtor_base.92" }
%"class.absl::optional_internal::optional_data_dtor_base.92" = type { i8, %union.anon.93 }
%union.anon.93 = type { i8 }
%"class.std::__1::vector.94" = type { %"class.std::__1::__vector_base.95" }
%"class.std::__1::__vector_base.95" = type { %"class.ui::Layer"**, %"class.ui::Layer"**, %"class.std::__1::__compressed_pair.96" }
%"class.std::__1::__compressed_pair.96" = type { %"struct.std::__1::__compressed_pair_elem.97" }
%"struct.std::__1::__compressed_pair_elem.97" = type { %"class.ui::Layer"** }
%"class.std::__1::unique_ptr.101" = type { %"class.std::__1::__compressed_pair.102" }
%"class.std::__1::__compressed_pair.102" = type { %"struct.std::__1::__compressed_pair_elem.103" }
%"struct.std::__1::__compressed_pair_elem.103" = type { %"class.views::ViewMaskLayer"* }
%"class.views::ViewMaskLayer" = type opaque
%"class.views::FocusManager" = type opaque
%"class.std::__1::unique_ptr.107" = type { %"class.std::__1::__compressed_pair.108" }
%"class.std::__1::__compressed_pair.108" = type { %"struct.std::__1::__compressed_pair_elem.109" }
%"struct.std::__1::__compressed_pair_elem.109" = type { %"class.std::__1::vector.110"* }
%"class.std::__1::vector.110" = type opaque
%"class.views::ContextMenuController" = type opaque
%"class.views::DragController" = type opaque
%"class.std::__1::unique_ptr.114" = type { %"class.std::__1::__compressed_pair.115" }
%"class.std::__1::__compressed_pair.115" = type { %"struct.std::__1::__compressed_pair_elem.116" }
%"struct.std::__1::__compressed_pair_elem.116" = type { %"class.views::ViewTargeter"* }
%"class.views::ViewTargeter" = type { %"class.ui::EventTargeter", %"class.views::ViewTargeterDelegate"* }
%"class.ui::EventTargeter" = type { i32 (...)** }
%"class.std::__1::unique_ptr.120" = type { %"class.std::__1::__compressed_pair.121" }
%"class.std::__1::__compressed_pair.121" = type { %"struct.std::__1::__compressed_pair_elem.122" }
%"struct.std::__1::__compressed_pair_elem.122" = type { %"class.views::ViewAccessibility"* }
%"class.views::ViewAccessibility" = type opaque
%"class.base::ObserverList.126" = type <{ %"class.std::__1::vector", %"class.base::LinkedList.127", i64, i32, [4 x i8] }>
%"class.base::LinkedList.127" = type { %"class.base::LinkNode.128" }
%"class.base::LinkNode.128" = type { %"class.base::internal::LinkNodeBase" }
%"class.gfx::RectF" = type { %"class.gfx::PointF", %"class.gfx::SizeF" }
%"class.gfx::PointF" = type { float, float }
%"class.gfx::SizeF" = type { float, float }

$_ZN5views20ViewTargeterDelegateD2Ev = comdat any

$_ZN5views20ViewTargeterDelegateD0Ev = comdat any

@_ZTVN5views20ViewTargeterDelegateE = hidden unnamed_addr constant { [6 x i8*] } { [6 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.views::ViewTargeterDelegate"*)* @_ZN5views20ViewTargeterDelegateD2Ev to i8*), i8* bitcast (void (%"class.views::ViewTargeterDelegate"*)* @_ZN5views20ViewTargeterDelegateD0Ev to i8*), i8* bitcast (i1 (%"class.views::ViewTargeterDelegate"*, %"class.views::View"*, %"class.gfx::Rect"*)* @_ZNK5views20ViewTargeterDelegate17DoesIntersectRectEPKNS_4ViewERKN3gfx4RectE to i8*), i8* bitcast (%"class.views::View"* (%"class.views::ViewTargeterDelegate"*, %"class.views::View"*, %"class.gfx::Rect"*)* @_ZN5views20ViewTargeterDelegate13TargetForRectEPNS_4ViewERKN3gfx4RectE to i8*)] }, align 8

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK5views20ViewTargeterDelegate17DoesIntersectRectEPKNS_4ViewERKN3gfx4RectE(%"class.views::ViewTargeterDelegate"* nocapture readnone, %"class.views::View"*, %"class.gfx::Rect"* dereferenceable(16)) unnamed_addr #0 align 2 {
  %4 = alloca { i64, i64 }, align 8
  %5 = bitcast { i64, i64 }* %4 to %"class.gfx::Rect"*
  %6 = bitcast { i64, i64 }* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %6) #4
  %7 = tail call { i64, i64 } @_ZNK5views4View14GetLocalBoundsEv(%"class.views::View"* %1) #4
  %8 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %4, i64 0, i32 0
  %9 = extractvalue { i64, i64 } %7, 0
  store i64 %9, i64* %8, align 8
  %10 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %4, i64 0, i32 1
  %11 = extractvalue { i64, i64 } %7, 1
  store i64 %11, i64* %10, align 8
  %12 = call zeroext i1 @_ZNK3gfx4Rect10IntersectsERKS0_(%"class.gfx::Rect"* nonnull %5, %"class.gfx::Rect"* dereferenceable(16) %2) #4
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %6) #4
  ret i1 %12
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

declare { i64, i64 } @_ZNK5views4View14GetLocalBoundsEv(%"class.views::View"*) local_unnamed_addr #2

declare zeroext i1 @_ZNK3gfx4Rect10IntersectsERKS0_(%"class.gfx::Rect"*, %"class.gfx::Rect"* dereferenceable(16)) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define hidden %"class.views::View"* @_ZN5views20ViewTargeterDelegate13TargetForRectEPNS_4ViewERKN3gfx4RectE(%"class.views::ViewTargeterDelegate"* nocapture readnone, %"class.views::View"*, %"class.gfx::Rect"* dereferenceable(16)) unnamed_addr #0 align 2 {
  %4 = alloca %"class.std::__1::vector.35", align 8
  %5 = alloca %"class.gfx::RectF", align 4
  %6 = alloca { i64, i64 }, align 8
  %7 = bitcast { i64, i64 }* %6 to %"class.gfx::Rect"*
  %8 = alloca %"class.gfx::RectF", align 4
  %9 = alloca { i64, i64 }, align 8
  %10 = bitcast { i64, i64 }* %9 to %"class.gfx::Rect"*
  %11 = alloca i64, align 8
  %12 = bitcast i64* %11 to %"class.gfx::Point"*
  %13 = alloca i64, align 8
  %14 = bitcast i64* %13 to %"class.gfx::Point"*
  %15 = bitcast %"class.std::__1::vector.35"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %15) #4
  %16 = getelementptr inbounds %"class.std::__1::vector.35", %"class.std::__1::vector.35"* %4, i64 0, i32 0, i32 0
  %17 = getelementptr inbounds %"class.std::__1::vector.35", %"class.std::__1::vector.35"* %4, i64 0, i32 0, i32 1
  %18 = bitcast %"class.views::View"* %1 to void (%"class.std::__1::vector.35"*, %"class.views::View"*)***
  %19 = bitcast %"class.std::__1::vector.35"* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %19, i8 -86, i64 24, i1 false)
  %20 = load void (%"class.std::__1::vector.35"*, %"class.views::View"*)**, void (%"class.std::__1::vector.35"*, %"class.views::View"*)*** %18, align 8
  %21 = getelementptr inbounds void (%"class.std::__1::vector.35"*, %"class.views::View"*)*, void (%"class.std::__1::vector.35"*, %"class.views::View"*)** %20, i64 23
  %22 = load void (%"class.std::__1::vector.35"*, %"class.views::View"*)*, void (%"class.std::__1::vector.35"*, %"class.views::View"*)** %21, align 8
  call void %22(%"class.std::__1::vector.35"* nonnull sret %4, %"class.views::View"* %1) #4
  %23 = load %"class.views::View"**, %"class.views::View"*** %17, align 8
  %24 = load %"class.views::View"**, %"class.views::View"*** %16, align 8
  %25 = icmp eq %"class.views::View"** %23, %24
  br i1 %25, label %151, label %26

26:                                               ; preds = %3
  %27 = bitcast %"class.gfx::RectF"* %5 to i8*
  %28 = getelementptr inbounds %"class.gfx::RectF", %"class.gfx::RectF"* %5, i64 0, i32 0, i32 0
  %29 = getelementptr inbounds %"class.gfx::RectF", %"class.gfx::RectF"* %5, i64 0, i32 0, i32 1
  %30 = getelementptr inbounds %"class.gfx::RectF", %"class.gfx::RectF"* %5, i64 0, i32 1, i32 0
  %31 = getelementptr inbounds %"class.gfx::RectF", %"class.gfx::RectF"* %5, i64 0, i32 1, i32 1
  %32 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %2, i64 0, i32 0, i32 0
  %33 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %2, i64 0, i32 0, i32 1
  %34 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %2, i64 0, i32 1, i32 0
  %35 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %2, i64 0, i32 1, i32 1
  %36 = bitcast { i64, i64 }* %6 to i8*
  %37 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %6, i64 0, i32 1
  %38 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %6, i64 0, i32 0
  %39 = bitcast %"class.gfx::RectF"* %8 to i8*
  %40 = getelementptr inbounds %"class.gfx::RectF", %"class.gfx::RectF"* %8, i64 0, i32 0, i32 0
  %41 = getelementptr inbounds %"class.gfx::RectF", %"class.gfx::RectF"* %8, i64 0, i32 0, i32 1
  %42 = getelementptr inbounds %"class.gfx::RectF", %"class.gfx::RectF"* %8, i64 0, i32 1, i32 0
  %43 = getelementptr inbounds %"class.gfx::RectF", %"class.gfx::RectF"* %8, i64 0, i32 1, i32 1
  %44 = bitcast { i64, i64 }* %9 to i8*
  %45 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %9, i64 0, i32 1
  %46 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %9, i64 0, i32 0
  %47 = bitcast i64* %11 to i8*
  %48 = bitcast i64* %11 to i32*
  %49 = getelementptr inbounds %"class.gfx::Point", %"class.gfx::Point"* %12, i64 0, i32 1
  %50 = bitcast i64* %13 to i8*
  %51 = bitcast i64* %13 to i32*
  %52 = getelementptr inbounds %"class.gfx::Point", %"class.gfx::Point"* %14, i64 0, i32 1
  %53 = bitcast { i64, i64 }* %6 to i8*
  %54 = bitcast %"class.gfx::RectF"* %8 to i8*
  %55 = bitcast { i64, i64 }* %9 to i8*
  br label %56

56:                                               ; preds = %26, %145
  %57 = phi %"class.views::View"* [ null, %26 ], [ %146, %145 ]
  %58 = phi i32 [ 2147483647, %26 ], [ %147, %145 ]
  %59 = phi %"class.views::View"* [ null, %26 ], [ %148, %145 ]
  %60 = phi %"class.views::View"** [ %23, %26 ], [ %61, %145 ]
  %61 = getelementptr inbounds %"class.views::View"*, %"class.views::View"** %60, i64 -1
  %62 = load %"class.views::View"*, %"class.views::View"** %61, align 8
  %63 = bitcast %"class.views::View"* %62 to i1 (%"class.views::View"*)***
  %64 = load i1 (%"class.views::View"*)**, i1 (%"class.views::View"*)*** %63, align 8
  %65 = getelementptr inbounds i1 (%"class.views::View"*)*, i1 (%"class.views::View"*)** %64, i64 34
  %66 = load i1 (%"class.views::View"*)*, i1 (%"class.views::View"*)** %65, align 8
  %67 = call zeroext i1 %66(%"class.views::View"* %62) #4
  br i1 %67, label %68, label %145

68:                                               ; preds = %56
  %69 = call zeroext i1 @_ZNK5views4View10GetEnabledEv(%"class.views::View"* %62) #4
  br i1 %69, label %70, label %145

70:                                               ; preds = %68
  %71 = call zeroext i1 @_ZNK5views4View10GetVisibleEv(%"class.views::View"* %62) #4
  br i1 %71, label %72, label %145

72:                                               ; preds = %70
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %27) #4
  %73 = load i32, i32* %32, align 4
  %74 = sitofp i32 %73 to float
  %75 = load i32, i32* %33, align 4
  %76 = sitofp i32 %75 to float
  %77 = load i32, i32* %34, align 4
  %78 = load i32, i32* %35, align 4
  store float %74, float* %28, align 4
  store float %76, float* %29, align 4
  %79 = icmp sgt i32 %77, 0
  %80 = select i1 %79, i32 %77, i32 0
  %81 = sitofp i32 %80 to float
  store float %81, float* %30, align 4
  %82 = icmp sgt i32 %78, 0
  %83 = select i1 %82, i32 %78, i32 0
  %84 = sitofp i32 %83 to float
  store float %84, float* %31, align 4
  call void @_ZN5views4View19ConvertRectToTargetEPKS0_S2_PN3gfx5RectFE(%"class.views::View"* %1, %"class.views::View"* %62, %"class.gfx::RectF"* nonnull %5) #4
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %36) #4
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %53, i8 -86, i64 16, i1 false)
  %85 = call { i64, i64 } @_ZN3gfx15ToEnclosingRectERKNS_5RectFE(%"class.gfx::RectF"* nonnull dereferenceable(16) %5) #4
  %86 = extractvalue { i64, i64 } %85, 0
  store i64 %86, i64* %38, align 8
  %87 = extractvalue { i64, i64 } %85, 1
  store i64 %87, i64* %37, align 8
  %88 = call zeroext i1 @_ZNK5views4View11HitTestRectERKN3gfx4RectE(%"class.views::View"* %62, %"class.gfx::Rect"* nonnull dereferenceable(16) %7) #4
  br i1 %88, label %89, label %141

89:                                               ; preds = %72
  %90 = call %"class.views::View"* @_ZN5views4View22GetEventHandlerForRectERKN3gfx4RectE(%"class.views::View"* %62, %"class.gfx::Rect"* nonnull dereferenceable(16) %7) #4
  %91 = call zeroext i1 @_ZN5views22UsePointBasedTargetingERKN3gfx4RectE(%"class.gfx::Rect"* dereferenceable(16) %2) #4
  br i1 %91, label %150, label %92

92:                                               ; preds = %89
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %39) #4
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %54, i8 -1, i64 16, i1 false)
  %93 = call { i64, i64 } @_ZNK5views4View14GetLocalBoundsEv(%"class.views::View"* %90) #4
  %94 = extractvalue { i64, i64 } %93, 0
  %95 = trunc i64 %94 to i32
  %96 = lshr i64 %94, 32
  %97 = trunc i64 %96 to i32
  %98 = extractvalue { i64, i64 } %93, 1
  %99 = sitofp i32 %95 to float
  %100 = sitofp i32 %97 to float
  %101 = trunc i64 %98 to i32
  %102 = lshr i64 %98, 32
  %103 = trunc i64 %102 to i32
  store float %99, float* %40, align 4
  store float %100, float* %41, align 4
  %104 = icmp sgt i32 %101, 0
  %105 = select i1 %104, i32 %101, i32 0
  %106 = sitofp i32 %105 to float
  store float %106, float* %42, align 4
  %107 = icmp sgt i32 %103, 0
  %108 = select i1 %107, i32 %103, i32 0
  %109 = sitofp i32 %108 to float
  store float %109, float* %43, align 4
  call void @_ZN5views4View19ConvertRectToTargetEPKS0_S2_PN3gfx5RectFE(%"class.views::View"* %90, %"class.views::View"* %1, %"class.gfx::RectF"* nonnull %8) #4
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %44) #4
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %55, i8 -86, i64 16, i1 false)
  %110 = call { i64, i64 } @_ZN3gfx15ToEnclosingRectERKNS_5RectFE(%"class.gfx::RectF"* nonnull dereferenceable(16) %8) #4
  %111 = extractvalue { i64, i64 } %110, 0
  store i64 %111, i64* %46, align 8
  %112 = extractvalue { i64, i64 } %110, 1
  store i64 %112, i64* %45, align 8
  %113 = call float @_ZN5views16PercentCoveredByERKN3gfx4RectES3_(%"class.gfx::Rect"* nonnull dereferenceable(16) %10, %"class.gfx::Rect"* dereferenceable(16) %2) #4
  %114 = fcmp ult float %113, 0x3FE3333340000000
  br i1 %114, label %123, label %115

115:                                              ; preds = %92
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %47) #4
  store i32 -1431655766, i32* %48, align 8
  store i32 -1431655766, i32* %49, align 4
  %116 = call i64 @_ZNK3gfx4Rect11CenterPointEv(%"class.gfx::Rect"* %2) #4
  store i64 %116, i64* %11, align 8
  %117 = call i32 @_ZN5views32DistanceSquaredFromCenterToPointERKN3gfx5PointERKNS0_4RectE(%"class.gfx::Point"* nonnull dereferenceable(8) %12, %"class.gfx::Rect"* nonnull dereferenceable(16) %10) #4
  %118 = icmp eq %"class.views::View"* %59, null
  %119 = icmp slt i32 %117, %58
  %120 = or i1 %118, %119
  %121 = select i1 %120, %"class.views::View"* %90, %"class.views::View"* %59
  %122 = select i1 %120, i32 %117, i32 %58
  br label %132

123:                                              ; preds = %92
  %124 = icmp ne %"class.views::View"* %59, null
  %125 = icmp ne %"class.views::View"* %57, null
  %126 = or i1 %124, %125
  br i1 %126, label %137, label %127

127:                                              ; preds = %123
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %50) #4
  store i32 -1431655766, i32* %51, align 8
  store i32 -1431655766, i32* %52, align 4
  %128 = call i64 @_ZNK3gfx4Rect11CenterPointEv(%"class.gfx::Rect"* nonnull %7) #4
  store i64 %128, i64* %13, align 8
  %129 = call zeroext i1 @_ZNK5views4View12HitTestPointERKN3gfx5PointE(%"class.views::View"* %62, %"class.gfx::Point"* nonnull dereferenceable(8) %14) #4
  br i1 %129, label %130, label %132

130:                                              ; preds = %127
  %131 = call %"class.views::View"* @_ZN5views4View23GetEventHandlerForPointERKN3gfx5PointE(%"class.views::View"* %62, %"class.gfx::Point"* nonnull dereferenceable(8) %14) #4
  br label %132

132:                                              ; preds = %127, %130, %115
  %133 = phi i8* [ %47, %115 ], [ %50, %130 ], [ %50, %127 ]
  %134 = phi %"class.views::View"* [ %121, %115 ], [ null, %130 ], [ null, %127 ]
  %135 = phi i32 [ %122, %115 ], [ %58, %130 ], [ %58, %127 ]
  %136 = phi %"class.views::View"* [ %57, %115 ], [ %131, %130 ], [ null, %127 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %133) #4
  br label %137

137:                                              ; preds = %132, %123
  %138 = phi %"class.views::View"* [ %59, %123 ], [ %134, %132 ]
  %139 = phi i32 [ %58, %123 ], [ %135, %132 ]
  %140 = phi %"class.views::View"* [ %57, %123 ], [ %136, %132 ]
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %44) #4
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %39) #4
  br label %141

141:                                              ; preds = %72, %137
  %142 = phi %"class.views::View"* [ %138, %137 ], [ %59, %72 ]
  %143 = phi i32 [ %139, %137 ], [ %58, %72 ]
  %144 = phi %"class.views::View"* [ %140, %137 ], [ %57, %72 ]
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %36) #4
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %27) #4
  br label %145

145:                                              ; preds = %70, %56, %68, %141
  %146 = phi %"class.views::View"* [ %144, %141 ], [ %57, %68 ], [ %57, %56 ], [ %57, %70 ]
  %147 = phi i32 [ %143, %141 ], [ %58, %68 ], [ %58, %56 ], [ %58, %70 ]
  %148 = phi %"class.views::View"* [ %142, %141 ], [ %59, %68 ], [ %59, %56 ], [ %59, %70 ]
  %149 = icmp eq %"class.views::View"** %61, %24
  br i1 %149, label %151, label %56

150:                                              ; preds = %89
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %36) #4
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %27) #4
  br label %161

151:                                              ; preds = %145, %3
  %152 = phi %"class.views::View"* [ null, %3 ], [ %148, %145 ]
  %153 = phi %"class.views::View"* [ null, %3 ], [ %146, %145 ]
  %154 = call zeroext i1 @_ZN5views22UsePointBasedTargetingERKN3gfx4RectE(%"class.gfx::Rect"* dereferenceable(16) %2) #4
  br i1 %154, label %161, label %155

155:                                              ; preds = %151
  %156 = icmp ne %"class.views::View"* %152, null
  %157 = icmp ne %"class.views::View"* %153, null
  %158 = or i1 %156, %157
  %159 = select i1 %156, %"class.views::View"* %152, %"class.views::View"* %153
  %160 = select i1 %158, %"class.views::View"* %159, %"class.views::View"* %1
  br label %161

161:                                              ; preds = %150, %155, %151
  %162 = phi %"class.views::View"* [ %90, %150 ], [ %1, %151 ], [ %160, %155 ]
  %163 = load %"class.views::View"**, %"class.views::View"*** %16, align 8
  %164 = icmp eq %"class.views::View"** %163, null
  br i1 %164, label %169, label %165

165:                                              ; preds = %161
  %166 = ptrtoint %"class.views::View"** %163 to i64
  %167 = bitcast %"class.views::View"*** %17 to i64*
  store i64 %166, i64* %167, align 8
  %168 = bitcast %"class.views::View"** %163 to i8*
  call void @_ZdlPv(i8* %168) #5
  br label %169

169:                                              ; preds = %161, %165
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %15) #4
  ret %"class.views::View"* %162
}

declare zeroext i1 @_ZNK5views4View10GetEnabledEv(%"class.views::View"*) local_unnamed_addr #2

declare zeroext i1 @_ZNK5views4View10GetVisibleEv(%"class.views::View"*) local_unnamed_addr #2

declare void @_ZN5views4View19ConvertRectToTargetEPKS0_S2_PN3gfx5RectFE(%"class.views::View"*, %"class.views::View"*, %"class.gfx::RectF"*) local_unnamed_addr #2

declare { i64, i64 } @_ZN3gfx15ToEnclosingRectERKNS_5RectFE(%"class.gfx::RectF"* dereferenceable(16)) local_unnamed_addr #2

declare zeroext i1 @_ZNK5views4View11HitTestRectERKN3gfx4RectE(%"class.views::View"*, %"class.gfx::Rect"* dereferenceable(16)) local_unnamed_addr #2

declare %"class.views::View"* @_ZN5views4View22GetEventHandlerForRectERKN3gfx4RectE(%"class.views::View"*, %"class.gfx::Rect"* dereferenceable(16)) local_unnamed_addr #2

declare zeroext i1 @_ZN5views22UsePointBasedTargetingERKN3gfx4RectE(%"class.gfx::Rect"* dereferenceable(16)) local_unnamed_addr #2

declare float @_ZN5views16PercentCoveredByERKN3gfx4RectES3_(%"class.gfx::Rect"* dereferenceable(16), %"class.gfx::Rect"* dereferenceable(16)) local_unnamed_addr #2

declare i64 @_ZNK3gfx4Rect11CenterPointEv(%"class.gfx::Rect"*) local_unnamed_addr #2

declare i32 @_ZN5views32DistanceSquaredFromCenterToPointERKN3gfx5PointERKNS0_4RectE(%"class.gfx::Point"* dereferenceable(8), %"class.gfx::Rect"* dereferenceable(16)) local_unnamed_addr #2

declare zeroext i1 @_ZNK5views4View12HitTestPointERKN3gfx5PointE(%"class.views::View"*, %"class.gfx::Point"* dereferenceable(8)) local_unnamed_addr #2

declare %"class.views::View"* @_ZN5views4View23GetEventHandlerForPointERKN3gfx5PointE(%"class.views::View"*, %"class.gfx::Point"* dereferenceable(8)) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5views20ViewTargeterDelegateD2Ev(%"class.views::ViewTargeterDelegate"*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5views20ViewTargeterDelegateD0Ev(%"class.views::ViewTargeterDelegate"*) unnamed_addr #0 comdat align 2 {
  %2 = bitcast %"class.views::ViewTargeterDelegate"* %0 to i8*
  tail call void @_ZdlPv(i8* %2) #5
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #3

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind }
attributes #5 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
