; ModuleID = '../../base/allocator/partition_allocator/starscan/pcscan_internal.cc'
source_filename = "../../base/allocator/partition_allocator/starscan/pcscan_internal.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.base::NoDestructor" = type { [312 x i8] }
%"class.std::__1::locale::id" = type <{ %"struct.std::__1::once_flag", i32, [4 x i8] }>
%"struct.std::__1::once_flag" = type { i64 }
%"class.base::internal::PCScan" = type <{ %"class.base::internal::PCScanScheduler", %"struct.std::__1::atomic.57", i8, [6 x i8] }>
%"class.base::internal::PCScanScheduler" = type { %"struct.base::internal::QuarantineData", %"class.base::internal::LimitBackend", %"class.base::internal::PCScanSchedulingBackend"* }
%"struct.base::internal::QuarantineData" = type { %"struct.std::__1::atomic.50", %"struct.std::__1::atomic.50", %"struct.std::__1::atomic.50", i64 }
%"struct.std::__1::atomic.50" = type { %"struct.std::__1::__atomic_base.51" }
%"struct.std::__1::__atomic_base.51" = type { %"struct.std::__1::__atomic_base.52" }
%"struct.std::__1::__atomic_base.52" = type { %"struct.std::__1::__cxx_atomic_impl.53" }
%"struct.std::__1::__cxx_atomic_impl.53" = type { %"struct.std::__1::__cxx_atomic_base_impl.54" }
%"struct.std::__1::__cxx_atomic_base_impl.54" = type { i64 }
%"class.base::internal::LimitBackend" = type { %"class.base::internal::PCScanSchedulingBackend" }
%"class.base::internal::PCScanSchedulingBackend" = type { i32 (...)**, %"class.base::internal::PCScanScheduler"* }
%"struct.std::__1::atomic.57" = type { %"struct.std::__1::__atomic_base.58" }
%"struct.std::__1::__atomic_base.58" = type { %"struct.std::__1::__cxx_atomic_impl.59" }
%"struct.std::__1::__cxx_atomic_impl.59" = type { %"struct.std::__1::__cxx_atomic_base_impl.60" }
%"struct.std::__1::__cxx_atomic_base_impl.60" = type { i8 }
%"class.base::NoDestructor.156" = type { [104 x i8] }
%"struct.std::__1::piecewise_construct_t" = type { i8 }
%"class.base::internal::PCScanTask" = type { %"class.base::RefCountedThreadSafe", i64, %"class.base::internal::(anonymous namespace)::PCScanSnapshot", %"class.base::internal::StatsCollector", %"class.std::__1::mutex", %"class.std::__1::condition_variable", %"struct.std::__1::atomic.50", %"struct.std::__1::once_flag", %"class.base::internal::PCScan"* }
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.0" }
%"struct.std::__1::__atomic_base.0" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.base::internal::(anonymous namespace)::PCScanSnapshot" = type { %"class.std::__1::set", %"class.base::internal::RacefulWorklist", %"class.base::internal::RacefulWorklist.14", %"class.base::internal::RacefulWorklist.23", %"struct.std::__1::once_flag" }
%"class.std::__1::set" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair", %"class.std::__1::__compressed_pair.2" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8, [7 x i8] }>
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.2" = type { %"struct.std::__1::__compressed_pair_elem.3" }
%"struct.std::__1::__compressed_pair_elem.3" = type { i64 }
%"class.base::internal::RacefulWorklist" = type <{ %"class.std::__1::vector", %"struct.std::__1::atomic.10", [7 x i8] }>
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"struct.base::internal::RacefulWorklist<base::internal::(anonymous namespace)::PCScanSnapshot::ScanArea>::Node"*, %"struct.base::internal::RacefulWorklist<base::internal::(anonymous namespace)::PCScanSnapshot::ScanArea>::Node"*, %"class.std::__1::__compressed_pair.5" }
%"struct.base::internal::RacefulWorklist<base::internal::(anonymous namespace)::PCScanSnapshot::ScanArea>::Node" = type <{ %"struct.base::internal::(anonymous namespace)::PCScanSnapshot::ScanArea", %"struct.std::__1::atomic.10", %"struct.std::__1::atomic.10", [6 x i8] }>
%"struct.base::internal::(anonymous namespace)::PCScanSnapshot::ScanArea" = type { i64*, i64* }
%"class.std::__1::__compressed_pair.5" = type { %"struct.std::__1::__compressed_pair_elem.6" }
%"struct.std::__1::__compressed_pair_elem.6" = type { %"struct.base::internal::RacefulWorklist<base::internal::(anonymous namespace)::PCScanSnapshot::ScanArea>::Node"* }
%"struct.std::__1::atomic.10" = type { %"struct.std::__1::__atomic_base.11" }
%"struct.std::__1::__atomic_base.11" = type { %"struct.std::__1::__cxx_atomic_impl.12" }
%"struct.std::__1::__cxx_atomic_impl.12" = type { %"struct.std::__1::__cxx_atomic_base_impl.13" }
%"struct.std::__1::__cxx_atomic_base_impl.13" = type { i8 }
%"class.base::internal::RacefulWorklist.14" = type <{ %"class.std::__1::vector.15", %"struct.std::__1::atomic.10", [7 x i8] }>
%"class.std::__1::vector.15" = type { %"class.std::__1::__vector_base.16" }
%"class.std::__1::__vector_base.16" = type { %"struct.base::internal::RacefulWorklist<base::internal::(anonymous namespace)::PCScanSnapshot::LargeScanArea>::Node"*, %"struct.base::internal::RacefulWorklist<base::internal::(anonymous namespace)::PCScanSnapshot::LargeScanArea>::Node"*, %"class.std::__1::__compressed_pair.17" }
%"struct.base::internal::RacefulWorklist<base::internal::(anonymous namespace)::PCScanSnapshot::LargeScanArea>::Node" = type <{ %"struct.base::internal::(anonymous namespace)::PCScanSnapshot::LargeScanArea", %"struct.std::__1::atomic.10", %"struct.std::__1::atomic.10", [6 x i8] }>
%"struct.base::internal::(anonymous namespace)::PCScanSnapshot::LargeScanArea" = type { %"struct.base::internal::(anonymous namespace)::PCScanSnapshot::ScanArea", i64 }
%"class.std::__1::__compressed_pair.17" = type { %"struct.std::__1::__compressed_pair_elem.18" }
%"struct.std::__1::__compressed_pair_elem.18" = type { %"struct.base::internal::RacefulWorklist<base::internal::(anonymous namespace)::PCScanSnapshot::LargeScanArea>::Node"* }
%"class.base::internal::RacefulWorklist.23" = type <{ %"class.std::__1::vector.24", %"struct.std::__1::atomic.10", [7 x i8] }>
%"class.std::__1::vector.24" = type { %"class.std::__1::__vector_base.25" }
%"class.std::__1::__vector_base.25" = type { %"struct.base::internal::RacefulWorklist<unsigned long>::Node"*, %"struct.base::internal::RacefulWorklist<unsigned long>::Node"*, %"class.std::__1::__compressed_pair.26" }
%"struct.base::internal::RacefulWorklist<unsigned long>::Node" = type <{ i64, %"struct.std::__1::atomic.10", %"struct.std::__1::atomic.10", [6 x i8] }>
%"class.std::__1::__compressed_pair.26" = type { %"struct.std::__1::__compressed_pair_elem.27" }
%"struct.std::__1::__compressed_pair_elem.27" = type { %"struct.base::internal::RacefulWorklist<unsigned long>::Node"* }
%"class.base::internal::StatsCollector" = type { %"class.base::internal::StatsCollector::DeferredTraceEventMap", %"class.base::internal::StatsCollector::DeferredTraceEventMap.49", %"struct.std::__1::atomic.50", i64, i8* }
%"class.base::internal::StatsCollector::DeferredTraceEventMap" = type { %"class.std::__1::mutex", %"class.std::__1::unordered_map" }
%"class.std::__1::unordered_map" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr", %"class.std::__1::__compressed_pair.39", %"class.std::__1::__compressed_pair.44", %"class.std::__1::__compressed_pair.46", [4 x i8] }>
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair.32" }
%"class.std::__1::__compressed_pair.32" = type { %"struct.std::__1::__compressed_pair_elem.33", %"struct.std::__1::__compressed_pair_elem.34" }
%"struct.std::__1::__compressed_pair_elem.33" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.34" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.35" }
%"class.std::__1::__compressed_pair.35" = type { %"struct.std::__1::__compressed_pair_elem.3" }
%"class.std::__1::__compressed_pair.39" = type { %"struct.std::__1::__compressed_pair_elem.40" }
%"struct.std::__1::__compressed_pair_elem.40" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.44" = type { %"struct.std::__1::__compressed_pair_elem.3" }
%"class.std::__1::__compressed_pair.46" = type { %"struct.std::__1::__compressed_pair_elem.47" }
%"struct.std::__1::__compressed_pair_elem.47" = type { float }
%"class.base::internal::StatsCollector::DeferredTraceEventMap.49" = type { %"class.std::__1::mutex", %"class.std::__1::unordered_map" }
%"class.std::__1::mutex" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"class.std::__1::condition_variable" = type { %union.pthread_cond_t }
%union.pthread_cond_t = type { %struct.__pthread_cond_s }
%struct.__pthread_cond_s = type { %union.anon, %union.anon.55, [2 x i32], [2 x i32], i32, i32, [2 x i32] }
%union.anon = type { i64 }
%union.anon.55 = type { i64 }
%"class.base::internal::PCScanInternal" = type <{ %class.scoped_refptr, %"class.std::__1::mutex", %"class.base::internal::PCScanInternal::Roots", %"class.base::internal::PCScanInternal::Roots", i8, [7 x i8], %"class.std::__1::unordered_map.64", %"class.std::__1::mutex", i8*, i8, [7 x i8], %"class.std::__1::unique_ptr.88", i8, [7 x i8] }>
%class.scoped_refptr = type { %"class.base::internal::PCScanTask"* }
%"class.base::internal::PCScanInternal::Roots" = type { %"struct.std::__1::array", i64 }
%"struct.std::__1::array" = type { [8 x %"struct.base::PartitionRoot"*] }
%"struct.base::PartitionRoot" = type <{ i8, i8, i8, i8, i8, i8, i8, i8, %"class.base::internal::MaybeSpinLock", [4 x i8], [128 x %"struct.base::internal::PartitionBucket"], %"struct.base::internal::PartitionBucket", i8, [7 x i8], %"struct.std::__1::atomic.50", %"struct.std::__1::atomic.50", %"struct.std::__1::atomic.50", i8*, i8*, i8*, %"struct.base::internal::PartitionSuperPageExtentEntry"*, %"struct.base::internal::PartitionSuperPageExtentEntry"*, %"struct.base::internal::PartitionDirectMapExtent"*, [16 x %"struct.base::internal::SlotSpanMetadata"*], i16, [6 x i8], i64, %"struct.std::__1::atomic", [4 x i8] }>
%"class.base::internal::MaybeSpinLock" = type { %"class.base::internal::SpinningMutex" }
%"class.base::internal::SpinningMutex" = type { %"struct.std::__1::atomic" }
%"struct.base::internal::PartitionBucket" = type { %"struct.base::internal::SlotSpanMetadata"*, %"struct.base::internal::SlotSpanMetadata"*, %"struct.base::internal::SlotSpanMetadata"*, i32, i32, i64 }
%"struct.base::internal::SlotSpanMetadata" = type <{ %"class.base::internal::PartitionFreelistEntry"*, %"struct.base::internal::SlotSpanMetadata"*, %"struct.base::internal::PartitionBucket"*, i16, i16, i8, i8 }>
%"class.base::internal::PartitionFreelistEntry" = type { %"struct.base::internal::EncodedPartitionFreelistEntry"*, i64 }
%"struct.base::internal::EncodedPartitionFreelistEntry" = type { [8 x i8], [8 x i8] }
%"struct.base::internal::PartitionSuperPageExtentEntry" = type { %"struct.base::PartitionRoot"*, i8*, i8*, %"struct.base::internal::PartitionSuperPageExtentEntry"* }
%"struct.base::internal::PartitionDirectMapExtent" = type opaque
%"class.std::__1::unordered_map.64" = type { %"class.std::__1::__hash_table.65" }
%"class.std::__1::__hash_table.65" = type <{ %"class.std::__1::unique_ptr.66", %"class.std::__1::__compressed_pair.76", %"class.std::__1::__compressed_pair.81", %"class.std::__1::__compressed_pair.84", [4 x i8] }>
%"class.std::__1::unique_ptr.66" = type { %"class.std::__1::__compressed_pair.67" }
%"class.std::__1::__compressed_pair.67" = type { %"struct.std::__1::__compressed_pair_elem.68", %"struct.std::__1::__compressed_pair_elem.70" }
%"struct.std::__1::__compressed_pair_elem.68" = type { %"struct.std::__1::__hash_node_base.69"** }
%"struct.std::__1::__hash_node_base.69" = type { %"struct.std::__1::__hash_node_base.69"* }
%"struct.std::__1::__compressed_pair_elem.70" = type { %"class.std::__1::__bucket_list_deallocator.71" }
%"class.std::__1::__bucket_list_deallocator.71" = type { %"class.std::__1::__compressed_pair.72" }
%"class.std::__1::__compressed_pair.72" = type { %"struct.std::__1::__compressed_pair_elem.3" }
%"class.std::__1::__compressed_pair.76" = type { %"struct.std::__1::__compressed_pair_elem.77" }
%"struct.std::__1::__compressed_pair_elem.77" = type { %"struct.std::__1::__hash_node_base.69" }
%"class.std::__1::__compressed_pair.81" = type { %"struct.std::__1::__compressed_pair_elem.3" }
%"class.std::__1::__compressed_pair.84" = type { %"struct.std::__1::__compressed_pair_elem.47" }
%"class.std::__1::unique_ptr.88" = type { %"class.std::__1::__compressed_pair.89" }
%"class.std::__1::__compressed_pair.89" = type { %"struct.std::__1::__compressed_pair_elem.90" }
%"struct.std::__1::__compressed_pair_elem.90" = type { %"class.base::internal::WriteProtector"* }
%"class.base::internal::WriteProtector" = type { i32 (...)** }
%"class.std::__1::vector.181" = type { %"class.std::__1::__vector_base.182" }
%"class.std::__1::__vector_base.182" = type { %"class.std::__1::__wrap_iter"*, %"class.std::__1::__wrap_iter"*, %"class.std::__1::__compressed_pair.183" }
%"class.std::__1::__wrap_iter" = type { %"struct.base::internal::RacefulWorklist<unsigned long>::Node"* }
%"class.std::__1::__compressed_pair.183" = type { %"struct.std::__1::__compressed_pair_elem.184" }
%"struct.std::__1::__compressed_pair_elem.184" = type { %"class.std::__1::__wrap_iter"* }
%"class.base::internal::MetadataAllocator.186" = type { i8 }
%"class.std::__1::__vector_base_common" = type { i8 }
%"class.base::internal::ObjectBitmap" = type { %"struct.std::__1::array.94" }
%"struct.std::__1::array.94" = type { [2048 x i64] }
%"struct.base::internal::PartitionPage" = type { %union.anon.123, i8, i8 }
%union.anon.123 = type <{ %"struct.base::internal::SubsequentPageMetadata", [22 x i8] }>
%"struct.base::internal::SubsequentPageMetadata" = type { i64 }
%"class.base::internal::(anonymous namespace)::QuarantineCardTable" = type { %"struct.std::__1::array.118" }
%"struct.std::__1::array.118" = type { [2097152 x i8] }
%"class.std::__1::tuple.194" = type { %"struct.std::__1::__tuple_impl.195" }
%"struct.std::__1::__tuple_impl.195" = type { %"class.std::__1::__tuple_leaf.196" }
%"class.std::__1::__tuple_leaf.196" = type { %class.anon.63* }
%class.anon.63 = type { %"class.base::internal::PCScanTask"* }
%"class.std::__1::__call_once_param.197" = type { %"class.std::__1::tuple.194"* }
%"class.base::CPU" = type { i32, i32, i32, i32, i32, i32, i32, i32, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, %"class.std::__1::basic_string", %"class.std::__1::basic_string" }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.124" }
%"class.std::__1::__compressed_pair.124" = type { %"struct.std::__1::__compressed_pair_elem.125" }
%"struct.std::__1::__compressed_pair_elem.125" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon.126 }
%union.anon.126 = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon.127 }
%struct.anon.127 = type { i8 }
%"class.base::internal::Stack" = type { i8* }
%"class.base::internal::PCScanTask::StackVisitor" = type { %"class.base::internal::StackVisitor", %"class.base::internal::PCScanTask"*, i64 }
%"class.base::internal::StackVisitor" = type { i32 (...)** }
%"class.std::__1::vector.203" = type { %"class.std::__1::__vector_base.204" }
%"class.std::__1::__vector_base.204" = type { %"class.std::__1::__wrap_iter.205"*, %"class.std::__1::__wrap_iter.205"*, %"class.std::__1::__compressed_pair.206" }
%"class.std::__1::__wrap_iter.205" = type { %"struct.base::internal::RacefulWorklist<base::internal::(anonymous namespace)::PCScanSnapshot::LargeScanArea>::Node"* }
%"class.std::__1::__compressed_pair.206" = type { %"struct.std::__1::__compressed_pair_elem.207" }
%"struct.std::__1::__compressed_pair_elem.207" = type { %"class.std::__1::__wrap_iter.205"* }
%"class.std::__1::vector.215" = type { %"class.std::__1::__vector_base.216" }
%"class.std::__1::__vector_base.216" = type { %"class.std::__1::__wrap_iter.217"*, %"class.std::__1::__wrap_iter.217"*, %"class.std::__1::__compressed_pair.218" }
%"class.std::__1::__wrap_iter.217" = type { %"struct.base::internal::RacefulWorklist<base::internal::(anonymous namespace)::PCScanSnapshot::ScanArea>::Node"* }
%"class.std::__1::__compressed_pair.218" = type { %"struct.std::__1::__compressed_pair_elem.219" }
%"struct.std::__1::__compressed_pair_elem.219" = type { %"class.std::__1::__wrap_iter.217"* }
%"class.base::internal::PCScanScanLoop" = type { %"class.base::internal::ScanLoop", i64, %"class.base::internal::PCScanTask"*, i64 }
%"class.base::internal::ScanLoop" = type { i8 }
%"struct.base::internal::DeferredUnmap" = type { i8*, i64 }
%"class.base::internal::ThreadCache" = type { [89 x %"struct.base::internal::ThreadCache::Bucket"], i64, %"struct.std::__1::atomic.10", %"struct.base::ThreadCacheStats", %"struct.base::PartitionRoot"*, %"class.base::internal::ThreadCache"*, %"class.base::internal::ThreadCache"* }
%"struct.base::internal::ThreadCache::Bucket" = type <{ %"class.base::internal::PartitionFreelistEntry"*, i8, %"struct.std::__1::atomic.96", i16, [4 x i8] }>
%"struct.std::__1::atomic.96" = type { %"struct.std::__1::__atomic_base.97" }
%"struct.std::__1::__atomic_base.97" = type { %"struct.std::__1::__atomic_base.98" }
%"struct.std::__1::__atomic_base.98" = type { %"struct.std::__1::__cxx_atomic_impl.99" }
%"struct.std::__1::__cxx_atomic_impl.99" = type { %"struct.std::__1::__cxx_atomic_base_impl.100" }
%"struct.std::__1::__cxx_atomic_base_impl.100" = type { i8 }
%"struct.base::ThreadCacheStats" = type { i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, [129 x i64], [129 x i64] }
%"class.logging::LogMessage" = type { i32 (...)**, i32, %"class.std::__1::basic_ostringstream", i64, i8*, i32, %"class.base::ScopedClearLastErrorBase" }
%"class.std::__1::basic_ostringstream" = type { %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.base::ScopedClearLastErrorBase" = type { i32 }
%"class.std::__1::tuple.231" = type { %"struct.std::__1::__tuple_impl.232" }
%"struct.std::__1::__tuple_impl.232" = type { %"class.std::__1::__tuple_leaf.233" }
%"class.std::__1::__tuple_leaf.233" = type { i32* }
%"class.std::__1::tuple.234" = type { i8 }
%"class.std::__1::tuple.129" = type { %"struct.std::__1::__tuple_impl.130" }
%"struct.std::__1::__tuple_impl.130" = type { %"class.std::__1::__tuple_leaf.131", %"class.std::__1::__tuple_leaf.132", %"class.std::__1::__tuple_leaf.133" }
%"class.std::__1::__tuple_leaf.131" = type { { i64, i64 }* }
%"class.std::__1::__tuple_leaf.132" = type { %"class.base::internal::(anonymous namespace)::PCScanSnapshot"** }
%"class.std::__1::__tuple_leaf.133" = type { i64* }
%"class.std::__1::__call_once_param" = type { %"class.std::__1::tuple.129"* }
%"class.base::internal::PCScanTask::SyncScope.102" = type { %"class.base::internal::PCScanTask"* }
%"class.std::__1::unique_lock" = type <{ %"class.std::__1::mutex"*, i8, [7 x i8] }>
%"class.base::internal::MetadataAllocator.79" = type { i8 }
%"struct.std::__1::__hash_node.242" = type { %"struct.std::__1::__hash_node_base.69", i64, %"struct.std::__1::__hash_value_type.243" }
%"struct.std::__1::__hash_value_type.243" = type { %"struct.std::__1::pair.117" }
%"struct.std::__1::pair.117" = type { i32, i8* }
%"class.base::internal::MetadataAllocator.74" = type { i8 }
%"class.base::internal::UserFaultFDWriteProtector" = type <{ %"class.base::internal::WriteProtector", i32, [4 x i8] }>
%"class.base::internal::PCScan::PCScanThread" = type { %"class.std::__1::mutex", %"class.std::__1::condition_variable", %class.scoped_refptr, %"class.base::TimeDelta" }
%"class.base::TimeDelta" = type { i64 }
%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry" = type { i8, %"class.std::__1::basic_ostream"* }
%"class.std::__1::locale::facet" = type { %"class.std::__1::__shared_count" }
%"class.std::__1::__shared_count" = type { i32 (...)**, i64 }
%"class.std::__1::ctype" = type <{ %"class.std::__1::locale::facet", i16*, i8, [7 x i8] }>
%"class.std::__1::__tree_node" = type { %"class.std::__1::__tree_node_base.base", i64 }
%"class.std::__1::__tree_node_base.base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8 }>
%"class.base::internal::MetadataAllocator" = type { i8 }
%"class.base::internal::MetadataAllocator.29" = type { i8 }
%"class.std::__1::thread" = type { i64 }
%"class.std::__1::__thread_struct" = type { %"class.std::__1::__thread_struct_imp"* }
%"class.std::__1::__thread_struct_imp" = type opaque
%union.pthread_attr_t = type { i64, [48 x i8] }
%"class.std::__1::__thread_specific_ptr" = type { i32 }
%"class.std::__1::chrono::duration" = type { i64 }
%"class.base::internal::MetadataAllocator.42" = type { i8 }
%"struct.std::__1::__hash_node" = type { %"struct.std::__1::__hash_node_base", i64, %"struct.std::__1::__hash_value_type" }
%"struct.std::__1::__hash_value_type" = type { %"struct.std::__1::pair.235" }
%"struct.std::__1::pair.235" = type { i32, %"struct.std::__1::array.227" }
%"struct.std::__1::array.227" = type { [4 x %"struct.base::internal::StatsCollector::DeferredTraceEvent"] }
%"struct.base::internal::StatsCollector::DeferredTraceEvent" = type { %"class.base::TimeTicks", %"class.base::TimeTicks" }
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.base::internal::MetadataAllocator.37" = type { i8 }
%"class.std::__1::unique_ptr.246" = type { %"class.std::__1::__compressed_pair.247" }
%"class.std::__1::__compressed_pair.247" = type { %"struct.std::__1::__compressed_pair_elem.248", %"struct.std::__1::__compressed_pair_elem.249" }
%"struct.std::__1::__compressed_pair_elem.248" = type { %"struct.std::__1::__hash_node.242"* }
%"struct.std::__1::__compressed_pair_elem.249" = type { %"class.std::__1::__hash_node_destructor.250" }
%"class.std::__1::__hash_node_destructor.250" = type <{ %"class.base::internal::MetadataAllocator.79"*, i8, [7 x i8] }>

$_ZN4base8internal14PCScanInternal8InstanceEv = comdat any

$_ZN4base8internal10PCScanTask9SyncScopeILNS0_7ContextE1EED2Ev = comdat any

$_ZN4base8internal10PCScanTask12StackVisitor10VisitStackEPmS3_ = comdat any

$_ZN4base8internal8ScanLoopINS0_14PCScanScanLoopEE7RunAVX2EPmS4_ = comdat any

$_ZN4base8internal8ScanLoopINS0_14PCScanScanLoopEE7RunSSE4EPmS4_ = comdat any

$_ZN4base8internal8ScanLoopINS0_14PCScanScanLoopEE15RunUnvectorizedEPmS4_ = comdat any

$_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m = comdat any

$_ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_ = comdat any

$_ZN4base8internal17MetadataAllocatorINSt3__111__tree_nodeImPvEEE8allocateEm = comdat any

$_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_ = comdat any

$_ZN4base8internal17MetadataAllocatorINSt3__111__tree_nodeImPvEEE10deallocateEPS5_m = comdat any

$_ZNSt3__16vectorIN4base8internal15RacefulWorklistImE4NodeENS2_17MetadataAllocatorIS5_EEE21__push_back_slow_pathIS5_EEvOT_ = comdat any

$_ZN4base8internal17MetadataAllocatorINS0_15RacefulWorklistImE4NodeEE8allocateEm = comdat any

$_ZN4base8internal17MetadataAllocatorINS0_15RacefulWorklistImE4NodeEE10deallocateEPS4_m = comdat any

$_ZN4base8internal6PCScan12PCScanThreadC2Ev = comdat any

$_ZNSt3__114__thread_proxyINS_5tupleIJNS_10unique_ptrINS_15__thread_structENS_14default_deleteIS3_EEEEZN4base8internal6PCScan12PCScanThreadC1EvEUlvE_EEEEEPvSD_ = comdat any

$_ZN4base8internal6PCScan12PCScanThread8TaskLoopEv = comdat any

$_ZNSt3__118condition_variable8wait_forIxNS_5ratioILl1ELl1000000EEEEENS_9cv_statusERNS_11unique_lockINS_5mutexEEERKNS_6chrono8durationIT_T0_EE = comdat any

$_ZN4base8internal17MetadataAllocatorINSt3__111__wrap_iterIPNS0_15RacefulWorklistImE4NodeEEEE8allocateEm = comdat any

$_ZN4base8internal17MetadataAllocatorINSt3__111__wrap_iterIPNS0_15RacefulWorklistImE4NodeEEEE10deallocateEPS8_m = comdat any

$_ZNSt3__112__hash_tableINS_17__hash_value_typeIiNS_5arrayIN4base8internal14StatsCollector18DeferredTraceEventELm4EEEEENS_22__unordered_map_hasherIiS8_NS_4hashIiEENS_8equal_toIvEELb1EEENS_21__unordered_map_equalIiS8_SD_SB_Lb1EEENS4_17MetadataAllocatorIS8_EEE25__emplace_unique_key_argsIiJRKNS_21piecewise_construct_tENS_5tupleIJRKiEEENSO_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS8_PvEEEEbEERKT_DpOT0_ = comdat any

$_ZNSt3__112__hash_tableINS_17__hash_value_typeIiNS_5arrayIN4base8internal14StatsCollector18DeferredTraceEventELm4EEEEENS_22__unordered_map_hasherIiS8_NS_4hashIiEENS_8equal_toIvEELb1EEENS_21__unordered_map_equalIiS8_SD_SB_Lb1EEENS4_17MetadataAllocatorIS8_EEE6rehashEm = comdat any

$_ZN4base8internal17MetadataAllocatorINSt3__111__hash_nodeINS2_17__hash_value_typeIiNS2_5arrayINS0_14StatsCollector18DeferredTraceEventELm4EEEEEPvEEE8allocateEm = comdat any

$_ZNSt3__112__hash_tableINS_17__hash_value_typeIiNS_5arrayIN4base8internal14StatsCollector18DeferredTraceEventELm4EEEEENS_22__unordered_map_hasherIiS8_NS_4hashIiEENS_8equal_toIvEELb1EEENS_21__unordered_map_equalIiS8_SD_SB_Lb1EEENS4_17MetadataAllocatorIS8_EEE8__rehashEm = comdat any

$_ZN4base8internal17MetadataAllocatorIPNSt3__116__hash_node_baseIPNS2_11__hash_nodeINS2_17__hash_value_typeIiNS2_5arrayINS0_14StatsCollector18DeferredTraceEventELm4EEEEEPvEEEEE10deallocateEPSF_m = comdat any

$_ZN4base8internal17MetadataAllocatorIPNSt3__116__hash_node_baseIPNS2_11__hash_nodeINS2_17__hash_value_typeIiNS2_5arrayINS0_14StatsCollector18DeferredTraceEventELm4EEEEEPvEEEEE8allocateEm = comdat any

$_ZN4base8internal10PCScanTaskD2Ev = comdat any

$_ZN4base8internal34AllocatedOnPCScanMetadataPartitiondlEPv = comdat any

$_ZNSt3__16__treeImNS_4lessIvEEN4base8internal17MetadataAllocatorImEEE7destroyEPNS_11__tree_nodeImPvEE = comdat any

$_ZN4base8internal17MetadataAllocatorINSt3__111__hash_nodeINS2_17__hash_value_typeIiPvEES5_EEE10deallocateEPS7_m = comdat any

$_ZN4base8internal17MetadataAllocatorIPNSt3__116__hash_node_baseIPNS2_11__hash_nodeINS2_17__hash_value_typeIiPvEES6_EEEEE10deallocateEPSB_m = comdat any

$_ZN4base8internal34AllocatedOnPCScanMetadataPartitionnwEm = comdat any

$_ZNSt3__112__hash_tableINS_17__hash_value_typeIiPvEENS_22__unordered_map_hasherIiS3_NS_4hashIiEENS_8equal_toIvEELb1EEENS_21__unordered_map_equalIiS3_S8_S6_Lb1EEEN4base8internal17MetadataAllocatorIS3_EEE25__emplace_unique_key_argsIiJNS_4pairIKiS2_EEEEENSI_INS_15__hash_iteratorIPNS_11__hash_nodeIS3_S2_EEEEbEERKT_DpOT0_ = comdat any

$_ZNSt3__112__hash_tableINS_17__hash_value_typeIiPvEENS_22__unordered_map_hasherIiS3_NS_4hashIiEENS_8equal_toIvEELb1EEENS_21__unordered_map_equalIiS3_S8_S6_Lb1EEEN4base8internal17MetadataAllocatorIS3_EEE6rehashEm = comdat any

$_ZN4base8internal17MetadataAllocatorINSt3__111__hash_nodeINS2_17__hash_value_typeIiPvEES5_EEE8allocateEm = comdat any

$_ZNSt3__112__hash_tableINS_17__hash_value_typeIiPvEENS_22__unordered_map_hasherIiS3_NS_4hashIiEENS_8equal_toIvEELb1EEENS_21__unordered_map_equalIiS3_S8_S6_Lb1EEEN4base8internal17MetadataAllocatorIS3_EEE8__rehashEm = comdat any

$_ZN4base8internal17MetadataAllocatorIPNSt3__116__hash_node_baseIPNS2_11__hash_nodeINS2_17__hash_value_typeIiPvEES6_EEEEE8allocateEm = comdat any

$_ZNSt3__112__hash_tableINS_17__hash_value_typeIiPvEENS_22__unordered_map_hasherIiS3_NS_4hashIiEENS_8equal_toIvEELb1EEENS_21__unordered_map_equalIiS3_S8_S6_Lb1EEEN4base8internal17MetadataAllocatorIS3_EEE14__erase_uniqueIiEEmRKT_ = comdat any

$_ZNSt3__112__hash_tableINS_17__hash_value_typeIiPvEENS_22__unordered_map_hasherIiS3_NS_4hashIiEENS_8equal_toIvEELb1EEENS_21__unordered_map_equalIiS3_S8_S6_Lb1EEEN4base8internal17MetadataAllocatorIS3_EEE6removeENS_21__hash_const_iteratorIPNS_11__hash_nodeIS3_S2_EEEE = comdat any

$_ZZN4base8internal14PCScanInternal8InstanceEvE8instance = comdat any

$_ZGVZN4base8internal14PCScanInternal8InstanceEvE8instance = comdat any

$_ZTVN4base8internal10PCScanTask12StackVisitorE = comdat any

$_ZZN4base8internal6PCScan12PCScanThread8InstanceEvE8instance = comdat any

$_ZGVZN4base8internal6PCScan12PCScanThread8InstanceEvE8instance = comdat any

@.str = private unnamed_addr constant [207 x i8] c"../../base/allocator/partition_allocator/starscan/pcscan_internal.cc(811) Check failed: pcscan_.state_.exchange(PCScan::State::kNotRunning, std::memory_order_acq_rel) == PCScan::State::kSweepingAndFinishing\00", align 1
@.str.1 = private unnamed_addr constant [129 x i8] c"../../base/allocator/partition_allocator/starscan/pcscan_internal.cc(982) Check failed: std::find(begin(), end(), root) == end()\00", align 1
@.str.2 = private unnamed_addr constant [118 x i8] c"../../base/allocator/partition_allocator/starscan/pcscan_internal.cc(985) Check failed: current_ != kMaxNumberOfRoots\00", align 1
@.str.3 = private unnamed_addr constant [117 x i8] c"../../base/allocator/partition_allocator/starscan/pcscan_internal.cc(1099) Check failed: root->IsQuarantineAllowed()\00", align 1
@.str.4 = private unnamed_addr constant [118 x i8] c"../../base/allocator/partition_allocator/starscan/pcscan_internal.cc(1103) Check failed: !root->IsQuarantineEnabled()\00", align 1
@.str.5 = private unnamed_addr constant [117 x i8] c"../../base/allocator/partition_allocator/starscan/pcscan_internal.cc(1113) Check failed: root->IsQuarantineAllowed()\00", align 1
@.str.6 = private unnamed_addr constant [108 x i8] c"../../base/allocator/partition_allocator/starscan/pcscan_internal.cc(1213) Check failed: current_task.get()\00", align 1
@_ZZN4base8internal14PCScanInternal8InstanceEvE8instance = linkonce_odr hidden global %"class.base::NoDestructor" zeroinitializer, comdat, align 8
@_ZGVZN4base8internal14PCScanInternal8InstanceEvE8instance = linkonce_odr hidden global i64 0, comdat, align 8
@_ZTVN4base8internal10PCScanTask12StackVisitorE = linkonce_odr hidden unnamed_addr constant { [3 x i8*] } { [3 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.base::internal::PCScanTask::StackVisitor"*, i64*, i64*)* @_ZN4base8internal10PCScanTask12StackVisitor10VisitStackEPmS3_ to i8*)] }, comdat, align 8
@.str.7 = private unnamed_addr constant [110 x i8] c"../../base/allocator/partition_allocator/starscan/pcscan_internal.cc(675) Check failed: stack_ptr < stack_top\00", align 1
@_ZN4base8internal21PartitionAddressSpace22brp_pool_base_address_E = external local_unnamed_addr global i64, align 8
@_ZN4base8internal18g_thread_cache_keyE = external local_unnamed_addr global i32, align 4
@.str.8 = private unnamed_addr constant [69 x i8] c"../../base/allocator/partition_allocator/starscan/pcscan_internal.cc\00", align 1
@.str.9 = private unnamed_addr constant [18 x i8] c"quarantine size: \00", align 1
@.str.10 = private unnamed_addr constant [5 x i8] c" -> \00", align 1
@.str.11 = private unnamed_addr constant [16 x i8] c", swept bytes: \00", align 1
@.str.12 = private unnamed_addr constant [18 x i8] c", survival rate: \00", align 1
@_ZNSt3__15ctypeIcE2idE = external global %"class.std::__1::locale::id", align 8
@_ZZN4base8internal17BucketIndexLookup8GetIndexEmE6lookup = internal unnamed_addr constant { [128 x i64], [521 x i16] } { [128 x i64] [i64 16, i64 18, i64 20, i64 22, i64 24, i64 26, i64 28, i64 30, i64 32, i64 36, i64 40, i64 44, i64 48, i64 52, i64 56, i64 60, i64 64, i64 72, i64 80, i64 88, i64 96, i64 104, i64 112, i64 120, i64 128, i64 144, i64 160, i64 176, i64 192, i64 208, i64 224, i64 240, i64 256, i64 288, i64 320, i64 352, i64 384, i64 416, i64 448, i64 480, i64 512, i64 576, i64 640, i64 704, i64 768, i64 832, i64 896, i64 960, i64 1024, i64 1152, i64 1280, i64 1408, i64 1536, i64 1664, i64 1792, i64 1920, i64 2048, i64 2304, i64 2560, i64 2816, i64 3072, i64 3328, i64 3584, i64 3840, i64 4096, i64 4608, i64 5120, i64 5632, i64 6144, i64 6656, i64 7168, i64 7680, i64 8192, i64 9216, i64 10240, i64 11264, i64 12288, i64 13312, i64 14336, i64 15360, i64 16384, i64 18432, i64 20480, i64 22528, i64 24576, i64 26624, i64 28672, i64 30720, i64 32768, i64 36864, i64 40960, i64 45056, i64 49152, i64 53248, i64 57344, i64 61440, i64 65536, i64 73728, i64 81920, i64 90112, i64 98304, i64 106496, i64 114688, i64 122880, i64 131072, i64 147456, i64 163840, i64 180224, i64 196608, i64 212992, i64 229376, i64 245760, i64 262144, i64 294912, i64 327680, i64 360448, i64 393216, i64 425984, i64 458752, i64 491520, i64 524288, i64 589824, i64 655360, i64 720896, i64 786432, i64 851968, i64 917504, i64 983040], [521 x i16] [i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 8, i16 8, i16 8, i16 8, i16 8, i16 8, i16 8, i16 8, i16 12, i16 12, i16 12, i16 12, i16 16, i16 16, i16 16, i16 16, i16 18, i16 18, i16 20, i16 20, i16 22, i16 22, i16 24, i16 24, i16 25, i16 26, i16 27, i16 28, i16 29, i16 30, i16 31, i16 32, i16 33, i16 34, i16 35, i16 36, i16 37, i16 38, i16 39, i16 40, i16 41, i16 42, i16 43, i16 44, i16 45, i16 46, i16 47, i16 48, i16 49, i16 50, i16 51, i16 52, i16 53, i16 54, i16 55, i16 56, i16 57, i16 58, i16 59, i16 60, i16 61, i16 62, i16 63, i16 64, i16 65, i16 66, i16 67, i16 68, i16 69, i16 70, i16 71, i16 72, i16 73, i16 74, i16 75, i16 76, i16 77, i16 78, i16 79, i16 80, i16 81, i16 82, i16 83, i16 84, i16 85, i16 86, i16 87, i16 88, i16 89, i16 90, i16 91, i16 92, i16 93, i16 94, i16 95, i16 96, i16 97, i16 98, i16 99, i16 100, i16 101, i16 102, i16 103, i16 104, i16 105, i16 106, i16 107, i16 108, i16 109, i16 110, i16 111, i16 112, i16 113, i16 114, i16 115, i16 116, i16 117, i16 118, i16 119, i16 120, i16 121, i16 122, i16 123, i16 124, i16 125, i16 126, i16 127, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128] }, align 8
@_ZN4base12_GLOBAL__N_116kOrderIndexShiftE = internal unnamed_addr constant [65 x i8] c"\00\00\00\00\00\01\02\03\04\05\06\07\08\09\0A\0B\0C\0D\0E\0F\10\11\12\13\14\15\16\17\18\19\1A\1B\1C\1D\1E\1F !\22#$%&'()*+,-./0123456789:;<", align 16
@_ZN4base12_GLOBAL__N_118kOrderSubIndexMaskE = internal unnamed_addr constant [65 x i64] [i64 0, i64 0, i64 0, i64 0, i64 0, i64 1, i64 3, i64 7, i64 15, i64 31, i64 63, i64 127, i64 255, i64 511, i64 1023, i64 2047, i64 4095, i64 8191, i64 16383, i64 32767, i64 65535, i64 131071, i64 262143, i64 524287, i64 1048575, i64 2097151, i64 4194303, i64 8388607, i64 16777215, i64 33554431, i64 67108863, i64 134217727, i64 268435455, i64 536870911, i64 1073741823, i64 2147483647, i64 4294967295, i64 8589934591, i64 17179869183, i64 34359738367, i64 68719476735, i64 137438953471, i64 274877906943, i64 549755813887, i64 1099511627775, i64 2199023255551, i64 4398046511103, i64 8796093022207, i64 17592186044415, i64 35184372088831, i64 70368744177663, i64 140737488355327, i64 281474976710655, i64 562949953421311, i64 1125899906842623, i64 2251799813685247, i64 4503599627370495, i64 9007199254740991, i64 18014398509481983, i64 36028797018963967, i64 72057594037927935, i64 144115188075855871, i64 288230376151711743, i64 576460752303423487, i64 1152921504606846975], align 16
@_ZN4base8internal11ThreadCache28largest_active_bucket_index_E = external local_unnamed_addr global i16, align 2
@.str.15 = private unnamed_addr constant [105 x i8] c"../../base/allocator/partition_allocator/partition_page.h(549) Check failed: slot_start != freelist_head\00", align 1
@_ZN4base8internal6PCScan9instance_E = external global %"class.base::internal::PCScan", align 8
@_ZZN4base8internal6PCScan12PCScanThread8InstanceEvE8instance = linkonce_odr hidden global %"class.base::NoDestructor.156" zeroinitializer, comdat, align 8
@_ZGVZN4base8internal6PCScan12PCScanThread8InstanceEvE8instance = linkonce_odr hidden global i64 0, comdat, align 8
@.str.16 = private unnamed_addr constant [26 x i8] c"thread constructor failed\00", align 1
@.str.17 = private unnamed_addr constant [7 x i8] c"PCScan\00", align 1
@_ZNSt3__1L19piecewise_constructE = internal constant %"struct.std::__1::piecewise_construct_t" undef, align 1
@_ZTVN4base8internal16NoWriteProtectorE = external unnamed_addr constant { [7 x i8*] }, align 8

@_ZN4base8internal10PCScanTaskC1ERNS0_6PCScanE = hidden unnamed_addr alias void (%"class.base::internal::PCScanTask"*, %"class.base::internal::PCScan"*), void (%"class.base::internal::PCScanTask"*, %"class.base::internal::PCScan"*)* @_ZN4base8internal10PCScanTaskC2ERNS0_6PCScanE
@_ZN4base8internal14PCScanInternalC1Ev = hidden unnamed_addr alias void (%"class.base::internal::PCScanInternal"*), void (%"class.base::internal::PCScanInternal"*)* @_ZN4base8internal14PCScanInternalC2Ev
@_ZN4base8internal14PCScanInternalD1Ev = hidden unnamed_addr alias void (%"class.base::internal::PCScanInternal"*), void (%"class.base::internal::PCScanInternal"*)* @_ZN4base8internal14PCScanInternalD2Ev

; Function Attrs: noinline noreturn nounwind ssp uwtable
define hidden void @_ZN4base8internal17DoubleFreeAttemptEv() local_unnamed_addr #0 {
  %1 = alloca i32, align 4
  %2 = bitcast i32* %1 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %2) #17
  store i32 69, i32* %1, align 4
  call void @_ZN4base5debug5AliasEPKv(i8* nonnull %2) #17
  call void asm sideeffect "int3", "~{dirflag},~{fpsr},~{flags}"() #17, !srcloc !2
  call void asm sideeffect "ud2", "~{dirflag},~{fpsr},~{flags}"() #17, !srcloc !3
  unreachable
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

declare void @_ZN4base5debug5AliasEPKv(i8*) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4base8internal10PCScanTask42ClearQuarantinedObjectsAndPrepareCardTableEv(%"class.base::internal::PCScanTask"*) local_unnamed_addr #3 align 2 {
  %2 = alloca %"class.std::__1::vector.181", align 8
  %3 = getelementptr inbounds %"class.base::internal::PCScanTask", %"class.base::internal::PCScanTask"* %0, i64 0, i32 8
  %4 = load %"class.base::internal::PCScan"*, %"class.base::internal::PCScan"** %3, align 8
  %5 = getelementptr inbounds %"class.base::internal::PCScan", %"class.base::internal::PCScan"* %4, i64 0, i32 2
  %6 = load i8, i8* %5, align 1
  %7 = getelementptr inbounds %"class.base::internal::PCScanTask", %"class.base::internal::PCScanTask"* %0, i64 0, i32 2, i32 3
  %8 = getelementptr inbounds %"class.base::internal::PCScanTask", %"class.base::internal::PCScanTask"* %0, i64 0, i32 2, i32 3, i32 0, i32 0, i32 1
  %9 = bitcast %"struct.base::internal::RacefulWorklist<unsigned long>::Node"** %8 to i64*
  %10 = load i64, i64* %9, align 8
  %11 = bitcast %"class.base::internal::RacefulWorklist.23"* %7 to i64*
  %12 = load i64, i64* %11, align 8
  %13 = sub i64 %10, %12
  %14 = icmp eq i64 %13, 0
  br i1 %14, label %18, label %15

15:                                               ; preds = %1
  %16 = ashr exact i64 %13, 4
  %17 = tail call i64 @_ZN4base13RandGeneratorEm(i64 %16) #17
  br label %18

18:                                               ; preds = %1, %15
  %19 = phi i64 [ 0, %1 ], [ %17, %15 ]
  %20 = bitcast %"class.std::__1::vector.181"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %20) #17
  %21 = getelementptr inbounds %"class.std::__1::vector.181", %"class.std::__1::vector.181"* %2, i64 0, i32 0, i32 0
  %22 = getelementptr inbounds %"class.std::__1::vector.181", %"class.std::__1::vector.181"* %2, i64 0, i32 0, i32 1
  %23 = getelementptr inbounds %"class.std::__1::vector.181", %"class.std::__1::vector.181"* %2, i64 0, i32 0, i32 2, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %20, i8 0, i64 24, i1 false) #17
  %24 = getelementptr inbounds %"class.base::internal::PCScanTask", %"class.base::internal::PCScanTask"* %0, i64 0, i32 2, i32 3, i32 1, i32 0, i32 0, i32 0, i32 0
  %25 = load atomic i8, i8* %24 acquire, align 1
  %26 = and i8 %25, 1
  %27 = icmp eq i8 %26, 0
  br i1 %27, label %28, label %470

28:                                               ; preds = %18
  %29 = getelementptr inbounds %"class.base::internal::RacefulWorklist.23", %"class.base::internal::RacefulWorklist.23"* %7, i64 0, i32 0, i32 0, i32 0
  %30 = load %"struct.base::internal::RacefulWorklist<unsigned long>::Node"*, %"struct.base::internal::RacefulWorklist<unsigned long>::Node"** %29, align 8
  %31 = getelementptr inbounds %"struct.base::internal::RacefulWorklist<unsigned long>::Node", %"struct.base::internal::RacefulWorklist<unsigned long>::Node"* %30, i64 %19
  %32 = load %"struct.base::internal::RacefulWorklist<unsigned long>::Node"*, %"struct.base::internal::RacefulWorklist<unsigned long>::Node"** %8, align 8
  %33 = icmp eq %"struct.base::internal::RacefulWorklist<unsigned long>::Node"* %31, %32
  br i1 %33, label %34, label %36

34:                                               ; preds = %28
  %35 = ptrtoint %"struct.base::internal::RacefulWorklist<unsigned long>::Node"* %30 to i64
  br label %46

36:                                               ; preds = %28
  %37 = bitcast %"class.std::__1::__wrap_iter"** %22 to i64*
  %38 = getelementptr inbounds %"class.std::__1::vector.181", %"class.std::__1::vector.181"* %2, i64 0, i32 0, i32 2
  %39 = bitcast %"class.std::__1::__compressed_pair.183"* %38 to %"class.base::internal::MetadataAllocator.186"*
  %40 = bitcast %"class.std::__1::vector.181"* %2 to i64*
  %41 = bitcast %"class.std::__1::__wrap_iter"** %23 to i64*
  %42 = getelementptr inbounds %"class.base::internal::PCScanTask", %"class.base::internal::PCScanTask"* %0, i64 0, i32 1
  %43 = icmp eq i8 %6, 0
  br label %58

44:                                               ; preds = %210
  %45 = load i64, i64* %11, align 8
  br label %46

46:                                               ; preds = %44, %34
  %47 = phi i64 [ %45, %44 ], [ %35, %34 ]
  %48 = inttoptr i64 %47 to %"struct.base::internal::RacefulWorklist<unsigned long>::Node"*
  %49 = icmp eq %"struct.base::internal::RacefulWorklist<unsigned long>::Node"* %31, %48
  br i1 %49, label %214, label %50

50:                                               ; preds = %46
  %51 = bitcast %"class.std::__1::__wrap_iter"** %22 to i64*
  %52 = getelementptr inbounds %"class.std::__1::vector.181", %"class.std::__1::vector.181"* %2, i64 0, i32 0, i32 2
  %53 = bitcast %"class.std::__1::__compressed_pair.183"* %52 to %"class.base::internal::MetadataAllocator.186"*
  %54 = bitcast %"class.std::__1::vector.181"* %2 to i64*
  %55 = bitcast %"class.std::__1::__wrap_iter"** %23 to i64*
  %56 = getelementptr inbounds %"class.base::internal::PCScanTask", %"class.base::internal::PCScanTask"* %0, i64 0, i32 1
  %57 = icmp eq i8 %6, 0
  br label %221

58:                                               ; preds = %210, %36
  %59 = phi %"struct.base::internal::RacefulWorklist<unsigned long>::Node"* [ %31, %36 ], [ %211, %210 ]
  %60 = ptrtoint %"struct.base::internal::RacefulWorklist<unsigned long>::Node"* %59 to i64
  %61 = getelementptr inbounds %"struct.base::internal::RacefulWorklist<unsigned long>::Node", %"struct.base::internal::RacefulWorklist<unsigned long>::Node"* %59, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0
  %62 = load atomic i8, i8* %61 monotonic, align 1
  %63 = and i8 %62, 1
  %64 = icmp eq i8 %63, 0
  br i1 %64, label %65, label %210

65:                                               ; preds = %58
  %66 = getelementptr inbounds %"struct.base::internal::RacefulWorklist<unsigned long>::Node", %"struct.base::internal::RacefulWorklist<unsigned long>::Node"* %59, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %67 = load atomic i8, i8* %66 monotonic, align 1
  %68 = and i8 %67, 1
  %69 = icmp eq i8 %68, 0
  br i1 %69, label %130, label %70

70:                                               ; preds = %65
  %71 = load %"class.std::__1::__wrap_iter"*, %"class.std::__1::__wrap_iter"** %22, align 8
  %72 = load %"class.std::__1::__wrap_iter"*, %"class.std::__1::__wrap_iter"** %23, align 8
  %73 = icmp eq %"class.std::__1::__wrap_iter"* %71, %72
  %74 = ptrtoint %"class.std::__1::__wrap_iter"* %72 to i64
  br i1 %73, label %79, label %75

75:                                               ; preds = %70
  %76 = bitcast %"class.std::__1::__wrap_iter"* %71 to i64*
  store i64 %60, i64* %76, align 8
  %77 = getelementptr inbounds %"class.std::__1::__wrap_iter", %"class.std::__1::__wrap_iter"* %71, i64 1
  %78 = ptrtoint %"class.std::__1::__wrap_iter"* %77 to i64
  store i64 %78, i64* %37, align 8
  br label %210

79:                                               ; preds = %70
  %80 = ptrtoint %"class.std::__1::__wrap_iter"* %71 to i64
  %81 = load i64, i64* %40, align 8
  %82 = sub i64 %80, %81
  %83 = ashr exact i64 %82, 3
  %84 = add nsw i64 %83, 1
  %85 = icmp ugt i64 %84, 2305843009213693951
  br i1 %85, label %86, label %88

86:                                               ; preds = %79
  %87 = bitcast %"class.std::__1::vector.181"* %2 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %87) #18
  unreachable

88:                                               ; preds = %79
  %89 = sub i64 %74, %81
  %90 = ashr exact i64 %89, 3
  %91 = icmp ult i64 %90, 1152921504606846975
  br i1 %91, label %92, label %97

92:                                               ; preds = %88
  %93 = ashr exact i64 %89, 2
  %94 = icmp ult i64 %93, %84
  %95 = select i1 %94, i64 %84, i64 %93
  %96 = icmp eq i64 %95, 0
  br i1 %96, label %100, label %97

97:                                               ; preds = %92, %88
  %98 = phi i64 [ %95, %92 ], [ 2305843009213693951, %88 ]
  %99 = call %"class.std::__1::__wrap_iter"* @_ZN4base8internal17MetadataAllocatorINSt3__111__wrap_iterIPNS0_15RacefulWorklistImE4NodeEEEE8allocateEm(%"class.base::internal::MetadataAllocator.186"* %39, i64 %98) #17
  br label %100

100:                                              ; preds = %97, %92
  %101 = phi i64 [ %98, %97 ], [ 0, %92 ]
  %102 = phi %"class.std::__1::__wrap_iter"* [ %99, %97 ], [ null, %92 ]
  %103 = getelementptr inbounds %"class.std::__1::__wrap_iter", %"class.std::__1::__wrap_iter"* %102, i64 %83
  %104 = getelementptr inbounds %"class.std::__1::__wrap_iter", %"class.std::__1::__wrap_iter"* %102, i64 %101
  %105 = ptrtoint %"class.std::__1::__wrap_iter"* %104 to i64
  %106 = bitcast %"class.std::__1::__wrap_iter"* %103 to i64*
  store i64 %60, i64* %106, align 8
  %107 = getelementptr inbounds %"class.std::__1::__wrap_iter", %"class.std::__1::__wrap_iter"* %103, i64 1
  %108 = ptrtoint %"class.std::__1::__wrap_iter"* %107 to i64
  %109 = load %"class.std::__1::__wrap_iter"*, %"class.std::__1::__wrap_iter"** %21, align 8
  %110 = load i64, i64* %37, align 8
  %111 = ptrtoint %"class.std::__1::__wrap_iter"* %109 to i64
  %112 = sub i64 %110, %111
  %113 = ashr exact i64 %112, 3
  %114 = sub nsw i64 0, %113
  %115 = getelementptr inbounds %"class.std::__1::__wrap_iter", %"class.std::__1::__wrap_iter"* %103, i64 %114
  %116 = ptrtoint %"class.std::__1::__wrap_iter"* %115 to i64
  %117 = icmp sgt i64 %112, 0
  br i1 %117, label %118, label %122

118:                                              ; preds = %100
  %119 = bitcast %"class.std::__1::__wrap_iter"* %115 to i8*
  %120 = bitcast %"class.std::__1::__wrap_iter"* %109 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %119, i8* align 8 %120, i64 %112, i1 false) #17
  %121 = load i64, i64* %40, align 8
  br label %122

122:                                              ; preds = %118, %100
  %123 = phi i64 [ %111, %100 ], [ %121, %118 ]
  store i64 %116, i64* %40, align 8
  store i64 %108, i64* %37, align 8
  %124 = load i64, i64* %41, align 8
  store i64 %105, i64* %41, align 8
  %125 = icmp eq i64 %123, 0
  br i1 %125, label %210, label %126

126:                                              ; preds = %122
  %127 = inttoptr i64 %123 to %"class.std::__1::__wrap_iter"*
  %128 = sub i64 %124, %123
  %129 = ashr exact i64 %128, 3
  call void @_ZN4base8internal17MetadataAllocatorINSt3__111__wrap_iterIPNS0_15RacefulWorklistImE4NodeEEEE10deallocateEPS8_m(%"class.base::internal::MetadataAllocator.186"* %39, %"class.std::__1::__wrap_iter"* nonnull %127, i64 %129) #17
  br label %210

130:                                              ; preds = %65
  store atomic i8 1, i8* %66 monotonic, align 1
  %131 = getelementptr inbounds %"struct.base::internal::RacefulWorklist<unsigned long>::Node", %"struct.base::internal::RacefulWorklist<unsigned long>::Node"* %59, i64 0, i32 0
  %132 = load i64, i64* %131, align 8
  %133 = load i64, i64* %42, align 8
  %134 = and i64 %132, -2097152
  %135 = inttoptr i64 %134 to i8*
  %136 = and i64 %133, 1
  %137 = icmp eq i64 %136, 0
  %138 = select i1 %137, i64 32768, i64 16384
  %139 = getelementptr inbounds i8, i8* %135, i64 %138
  %140 = ptrtoint i8* %139 to i64
  %141 = bitcast i8* %139 to %"class.base::internal::ObjectBitmap"*
  %142 = and i64 %140, -2097152
  br label %143

143:                                              ; preds = %206, %130
  %144 = phi i64 [ 0, %130 ], [ %207, %206 ]
  %145 = getelementptr inbounds %"class.base::internal::ObjectBitmap", %"class.base::internal::ObjectBitmap"* %141, i64 0, i32 0, i32 0, i64 %144
  %146 = load i64, i64* %145, align 8
  %147 = icmp eq i64 %146, 0
  br i1 %147, label %206, label %148

148:                                              ; preds = %143
  %149 = shl i64 %144, 6
  br label %150

150:                                              ; preds = %201, %148
  %151 = phi i64 [ %146, %148 ], [ %204, %201 ]
  %152 = call i64 @llvm.cttz.i64(i64 %151, i1 true) #17, !range !4
  %153 = or i64 %152, %149
  %154 = shl i64 %153, 4
  %155 = add i64 %154, %142
  %156 = inttoptr i64 %155 to i8*
  %157 = and i64 %155, -2097152
  %158 = or i64 %157, 4096
  %159 = inttoptr i64 %158 to i8*
  %160 = lshr i64 %155, 9
  %161 = and i64 %160, 4064
  %162 = getelementptr inbounds i8, i8* %159, i64 %161
  %163 = bitcast i8* %162 to %"struct.base::internal::PartitionPage"*
  %164 = getelementptr inbounds i8, i8* %162, i64 30
  %165 = load i8, i8* %164, align 2
  %166 = zext i8 %165 to i64
  %167 = sub nsw i64 0, %166
  %168 = getelementptr inbounds %"struct.base::internal::PartitionPage", %"struct.base::internal::PartitionPage"* %163, i64 %167, i32 0, i32 1, i64 21
  %169 = load i8, i8* %168, align 1, !range !5
  %170 = icmp eq i8 %169, 0
  br i1 %170, label %171, label %178, !prof !6

171:                                              ; preds = %150
  %172 = getelementptr inbounds %"struct.base::internal::PartitionPage", %"struct.base::internal::PartitionPage"* %163, i64 %167, i32 0, i32 1, i64 8
  %173 = bitcast i8* %172 to %"struct.base::internal::PartitionBucket"**
  %174 = load %"struct.base::internal::PartitionBucket"*, %"struct.base::internal::PartitionBucket"** %173, align 1
  %175 = getelementptr inbounds %"struct.base::internal::PartitionBucket", %"struct.base::internal::PartitionBucket"* %174, i64 0, i32 3
  %176 = load i32, i32* %175, align 8
  %177 = zext i32 %176 to i64
  br label %183

178:                                              ; preds = %150
  %179 = getelementptr inbounds %"struct.base::internal::PartitionPage", %"struct.base::internal::PartitionPage"* %163, i64 %167, i32 0
  %180 = bitcast %union.anon.123* %179 to %"struct.base::internal::PartitionPage"*
  %181 = getelementptr inbounds %"struct.base::internal::PartitionPage", %"struct.base::internal::PartitionPage"* %180, i64 1, i32 0, i32 0, i32 0
  %182 = load i64, i64* %181, align 1
  br label %183

183:                                              ; preds = %178, %171
  %184 = phi i64 [ %177, %171 ], [ %182, %178 ]
  br i1 %43, label %185, label %186

185:                                              ; preds = %183
  call void @llvm.memset.p0i8.i64(i8* align 16 %156, i8 0, i64 %184, i1 false) #17
  br label %186

186:                                              ; preds = %185, %183
  %187 = lshr i64 %155, 12
  %188 = and i64 %187, 2097151
  %189 = add i64 %184, 4095
  %190 = lshr i64 %189, 12
  %191 = add nuw nsw i64 %190, %188
  %192 = icmp eq i64 %190, 0
  br i1 %192, label %201, label %193

193:                                              ; preds = %186
  %194 = and i64 %155, -8589934592
  %195 = inttoptr i64 %194 to %"class.base::internal::(anonymous namespace)::QuarantineCardTable"*
  %196 = getelementptr %"class.base::internal::(anonymous namespace)::QuarantineCardTable", %"class.base::internal::(anonymous namespace)::QuarantineCardTable"* %195, i64 0, i32 0, i32 0, i64 %188
  %197 = add nuw nsw i64 %188, 1
  %198 = icmp ugt i64 %191, %197
  %199 = select i1 %198, i64 %191, i64 %197
  %200 = sub nsw i64 %199, %188
  call void @llvm.memset.p0i8.i64(i8* align 1 %196, i8 1, i64 %200, i1 false) #17
  br label %201

201:                                              ; preds = %193, %186
  %202 = shl i64 1, %152
  %203 = xor i64 %202, -1
  %204 = and i64 %151, %203
  %205 = icmp eq i64 %204, 0
  br i1 %205, label %206, label %150

206:                                              ; preds = %201, %143
  %207 = add nuw nsw i64 %144, 1
  %208 = icmp eq i64 %207, 2048
  br i1 %208, label %209, label %143

209:                                              ; preds = %206
  store atomic i8 1, i8* %61 monotonic, align 1
  br label %210

210:                                              ; preds = %209, %126, %122, %75, %58
  %211 = getelementptr inbounds %"struct.base::internal::RacefulWorklist<unsigned long>::Node", %"struct.base::internal::RacefulWorklist<unsigned long>::Node"* %59, i64 1
  %212 = load %"struct.base::internal::RacefulWorklist<unsigned long>::Node"*, %"struct.base::internal::RacefulWorklist<unsigned long>::Node"** %8, align 8
  %213 = icmp eq %"struct.base::internal::RacefulWorklist<unsigned long>::Node"* %211, %212
  br i1 %213, label %44, label %58

214:                                              ; preds = %373, %46
  %215 = load %"class.std::__1::__wrap_iter"*, %"class.std::__1::__wrap_iter"** %21, align 8
  %216 = load %"class.std::__1::__wrap_iter"*, %"class.std::__1::__wrap_iter"** %22, align 8
  %217 = icmp eq %"class.std::__1::__wrap_iter"* %215, %216
  br i1 %217, label %377, label %218

218:                                              ; preds = %214
  %219 = getelementptr inbounds %"class.base::internal::PCScanTask", %"class.base::internal::PCScanTask"* %0, i64 0, i32 1
  %220 = icmp eq i8 %6, 0
  br label %378

221:                                              ; preds = %373, %50
  %222 = phi %"struct.base::internal::RacefulWorklist<unsigned long>::Node"* [ %48, %50 ], [ %374, %373 ]
  %223 = phi i64 [ %47, %50 ], [ %375, %373 ]
  %224 = getelementptr inbounds %"struct.base::internal::RacefulWorklist<unsigned long>::Node", %"struct.base::internal::RacefulWorklist<unsigned long>::Node"* %222, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0
  %225 = load atomic i8, i8* %224 monotonic, align 1
  %226 = and i8 %225, 1
  %227 = icmp eq i8 %226, 0
  br i1 %227, label %228, label %373

228:                                              ; preds = %221
  %229 = getelementptr inbounds %"struct.base::internal::RacefulWorklist<unsigned long>::Node", %"struct.base::internal::RacefulWorklist<unsigned long>::Node"* %222, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %230 = load atomic i8, i8* %229 monotonic, align 1
  %231 = and i8 %230, 1
  %232 = icmp eq i8 %231, 0
  br i1 %232, label %293, label %233

233:                                              ; preds = %228
  %234 = load %"class.std::__1::__wrap_iter"*, %"class.std::__1::__wrap_iter"** %22, align 8
  %235 = load %"class.std::__1::__wrap_iter"*, %"class.std::__1::__wrap_iter"** %23, align 8
  %236 = icmp eq %"class.std::__1::__wrap_iter"* %234, %235
  %237 = ptrtoint %"class.std::__1::__wrap_iter"* %235 to i64
  br i1 %236, label %242, label %238

238:                                              ; preds = %233
  %239 = bitcast %"class.std::__1::__wrap_iter"* %234 to i64*
  store i64 %223, i64* %239, align 8
  %240 = getelementptr inbounds %"class.std::__1::__wrap_iter", %"class.std::__1::__wrap_iter"* %234, i64 1
  %241 = ptrtoint %"class.std::__1::__wrap_iter"* %240 to i64
  store i64 %241, i64* %51, align 8
  br label %373

242:                                              ; preds = %233
  %243 = ptrtoint %"class.std::__1::__wrap_iter"* %234 to i64
  %244 = load i64, i64* %54, align 8
  %245 = sub i64 %243, %244
  %246 = ashr exact i64 %245, 3
  %247 = add nsw i64 %246, 1
  %248 = icmp ugt i64 %247, 2305843009213693951
  br i1 %248, label %249, label %251

249:                                              ; preds = %242
  %250 = bitcast %"class.std::__1::vector.181"* %2 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %250) #18
  unreachable

251:                                              ; preds = %242
  %252 = sub i64 %237, %244
  %253 = ashr exact i64 %252, 3
  %254 = icmp ult i64 %253, 1152921504606846975
  br i1 %254, label %255, label %260

255:                                              ; preds = %251
  %256 = ashr exact i64 %252, 2
  %257 = icmp ult i64 %256, %247
  %258 = select i1 %257, i64 %247, i64 %256
  %259 = icmp eq i64 %258, 0
  br i1 %259, label %263, label %260

260:                                              ; preds = %255, %251
  %261 = phi i64 [ %258, %255 ], [ 2305843009213693951, %251 ]
  %262 = call %"class.std::__1::__wrap_iter"* @_ZN4base8internal17MetadataAllocatorINSt3__111__wrap_iterIPNS0_15RacefulWorklistImE4NodeEEEE8allocateEm(%"class.base::internal::MetadataAllocator.186"* %53, i64 %261) #17
  br label %263

263:                                              ; preds = %260, %255
  %264 = phi i64 [ %261, %260 ], [ 0, %255 ]
  %265 = phi %"class.std::__1::__wrap_iter"* [ %262, %260 ], [ null, %255 ]
  %266 = getelementptr inbounds %"class.std::__1::__wrap_iter", %"class.std::__1::__wrap_iter"* %265, i64 %246
  %267 = getelementptr inbounds %"class.std::__1::__wrap_iter", %"class.std::__1::__wrap_iter"* %265, i64 %264
  %268 = ptrtoint %"class.std::__1::__wrap_iter"* %267 to i64
  %269 = bitcast %"class.std::__1::__wrap_iter"* %266 to i64*
  store i64 %223, i64* %269, align 8
  %270 = getelementptr inbounds %"class.std::__1::__wrap_iter", %"class.std::__1::__wrap_iter"* %266, i64 1
  %271 = ptrtoint %"class.std::__1::__wrap_iter"* %270 to i64
  %272 = load %"class.std::__1::__wrap_iter"*, %"class.std::__1::__wrap_iter"** %21, align 8
  %273 = load i64, i64* %51, align 8
  %274 = ptrtoint %"class.std::__1::__wrap_iter"* %272 to i64
  %275 = sub i64 %273, %274
  %276 = ashr exact i64 %275, 3
  %277 = sub nsw i64 0, %276
  %278 = getelementptr inbounds %"class.std::__1::__wrap_iter", %"class.std::__1::__wrap_iter"* %266, i64 %277
  %279 = ptrtoint %"class.std::__1::__wrap_iter"* %278 to i64
  %280 = icmp sgt i64 %275, 0
  br i1 %280, label %281, label %285

281:                                              ; preds = %263
  %282 = bitcast %"class.std::__1::__wrap_iter"* %278 to i8*
  %283 = bitcast %"class.std::__1::__wrap_iter"* %272 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %282, i8* align 8 %283, i64 %275, i1 false) #17
  %284 = load i64, i64* %54, align 8
  br label %285

285:                                              ; preds = %281, %263
  %286 = phi i64 [ %274, %263 ], [ %284, %281 ]
  store i64 %279, i64* %54, align 8
  store i64 %271, i64* %51, align 8
  %287 = load i64, i64* %55, align 8
  store i64 %268, i64* %55, align 8
  %288 = icmp eq i64 %286, 0
  br i1 %288, label %373, label %289

289:                                              ; preds = %285
  %290 = inttoptr i64 %286 to %"class.std::__1::__wrap_iter"*
  %291 = sub i64 %287, %286
  %292 = ashr exact i64 %291, 3
  call void @_ZN4base8internal17MetadataAllocatorINSt3__111__wrap_iterIPNS0_15RacefulWorklistImE4NodeEEEE10deallocateEPS8_m(%"class.base::internal::MetadataAllocator.186"* %53, %"class.std::__1::__wrap_iter"* nonnull %290, i64 %292) #17
  br label %373

293:                                              ; preds = %228
  store atomic i8 1, i8* %229 monotonic, align 1
  %294 = getelementptr inbounds %"struct.base::internal::RacefulWorklist<unsigned long>::Node", %"struct.base::internal::RacefulWorklist<unsigned long>::Node"* %222, i64 0, i32 0
  %295 = load i64, i64* %294, align 8
  %296 = load i64, i64* %56, align 8
  %297 = and i64 %295, -2097152
  %298 = inttoptr i64 %297 to i8*
  %299 = and i64 %296, 1
  %300 = icmp eq i64 %299, 0
  %301 = select i1 %300, i64 32768, i64 16384
  %302 = getelementptr inbounds i8, i8* %298, i64 %301
  %303 = ptrtoint i8* %302 to i64
  %304 = bitcast i8* %302 to %"class.base::internal::ObjectBitmap"*
  %305 = and i64 %303, -2097152
  br label %306

306:                                              ; preds = %369, %293
  %307 = phi i64 [ 0, %293 ], [ %370, %369 ]
  %308 = getelementptr inbounds %"class.base::internal::ObjectBitmap", %"class.base::internal::ObjectBitmap"* %304, i64 0, i32 0, i32 0, i64 %307
  %309 = load i64, i64* %308, align 8
  %310 = icmp eq i64 %309, 0
  br i1 %310, label %369, label %311

311:                                              ; preds = %306
  %312 = shl i64 %307, 6
  br label %313

313:                                              ; preds = %364, %311
  %314 = phi i64 [ %309, %311 ], [ %367, %364 ]
  %315 = call i64 @llvm.cttz.i64(i64 %314, i1 true) #17, !range !4
  %316 = or i64 %315, %312
  %317 = shl i64 %316, 4
  %318 = add i64 %317, %305
  %319 = inttoptr i64 %318 to i8*
  %320 = and i64 %318, -2097152
  %321 = or i64 %320, 4096
  %322 = inttoptr i64 %321 to i8*
  %323 = lshr i64 %318, 9
  %324 = and i64 %323, 4064
  %325 = getelementptr inbounds i8, i8* %322, i64 %324
  %326 = bitcast i8* %325 to %"struct.base::internal::PartitionPage"*
  %327 = getelementptr inbounds i8, i8* %325, i64 30
  %328 = load i8, i8* %327, align 2
  %329 = zext i8 %328 to i64
  %330 = sub nsw i64 0, %329
  %331 = getelementptr inbounds %"struct.base::internal::PartitionPage", %"struct.base::internal::PartitionPage"* %326, i64 %330, i32 0, i32 1, i64 21
  %332 = load i8, i8* %331, align 1, !range !5
  %333 = icmp eq i8 %332, 0
  br i1 %333, label %334, label %341, !prof !6

334:                                              ; preds = %313
  %335 = getelementptr inbounds %"struct.base::internal::PartitionPage", %"struct.base::internal::PartitionPage"* %326, i64 %330, i32 0, i32 1, i64 8
  %336 = bitcast i8* %335 to %"struct.base::internal::PartitionBucket"**
  %337 = load %"struct.base::internal::PartitionBucket"*, %"struct.base::internal::PartitionBucket"** %336, align 1
  %338 = getelementptr inbounds %"struct.base::internal::PartitionBucket", %"struct.base::internal::PartitionBucket"* %337, i64 0, i32 3
  %339 = load i32, i32* %338, align 8
  %340 = zext i32 %339 to i64
  br label %346

341:                                              ; preds = %313
  %342 = getelementptr inbounds %"struct.base::internal::PartitionPage", %"struct.base::internal::PartitionPage"* %326, i64 %330, i32 0
  %343 = bitcast %union.anon.123* %342 to %"struct.base::internal::PartitionPage"*
  %344 = getelementptr inbounds %"struct.base::internal::PartitionPage", %"struct.base::internal::PartitionPage"* %343, i64 1, i32 0, i32 0, i32 0
  %345 = load i64, i64* %344, align 1
  br label %346

346:                                              ; preds = %341, %334
  %347 = phi i64 [ %340, %334 ], [ %345, %341 ]
  br i1 %57, label %348, label %349

348:                                              ; preds = %346
  call void @llvm.memset.p0i8.i64(i8* align 16 %319, i8 0, i64 %347, i1 false) #17
  br label %349

349:                                              ; preds = %348, %346
  %350 = lshr i64 %318, 12
  %351 = and i64 %350, 2097151
  %352 = add i64 %347, 4095
  %353 = lshr i64 %352, 12
  %354 = add nuw nsw i64 %353, %351
  %355 = icmp eq i64 %353, 0
  br i1 %355, label %364, label %356

356:                                              ; preds = %349
  %357 = and i64 %318, -8589934592
  %358 = inttoptr i64 %357 to %"class.base::internal::(anonymous namespace)::QuarantineCardTable"*
  %359 = getelementptr %"class.base::internal::(anonymous namespace)::QuarantineCardTable", %"class.base::internal::(anonymous namespace)::QuarantineCardTable"* %358, i64 0, i32 0, i32 0, i64 %351
  %360 = add nuw nsw i64 %351, 1
  %361 = icmp ugt i64 %354, %360
  %362 = select i1 %361, i64 %354, i64 %360
  %363 = sub nsw i64 %362, %351
  call void @llvm.memset.p0i8.i64(i8* align 1 %359, i8 1, i64 %363, i1 false) #17
  br label %364

364:                                              ; preds = %356, %349
  %365 = shl i64 1, %315
  %366 = xor i64 %365, -1
  %367 = and i64 %314, %366
  %368 = icmp eq i64 %367, 0
  br i1 %368, label %369, label %313

369:                                              ; preds = %364, %306
  %370 = add nuw nsw i64 %307, 1
  %371 = icmp eq i64 %370, 2048
  br i1 %371, label %372, label %306

372:                                              ; preds = %369
  store atomic i8 1, i8* %224 monotonic, align 1
  br label %373

373:                                              ; preds = %372, %289, %285, %238, %221
  %374 = getelementptr inbounds %"struct.base::internal::RacefulWorklist<unsigned long>::Node", %"struct.base::internal::RacefulWorklist<unsigned long>::Node"* %222, i64 1
  %375 = ptrtoint %"struct.base::internal::RacefulWorklist<unsigned long>::Node"* %374 to i64
  %376 = icmp eq %"struct.base::internal::RacefulWorklist<unsigned long>::Node"* %31, %374
  br i1 %376, label %214, label %221

377:                                              ; preds = %467, %214
  store atomic i8 1, i8* %24 release, align 1
  br label %470

378:                                              ; preds = %467, %218
  %379 = phi %"class.std::__1::__wrap_iter"* [ %215, %218 ], [ %468, %467 ]
  %380 = getelementptr inbounds %"class.std::__1::__wrap_iter", %"class.std::__1::__wrap_iter"* %379, i64 0, i32 0
  %381 = load %"struct.base::internal::RacefulWorklist<unsigned long>::Node"*, %"struct.base::internal::RacefulWorklist<unsigned long>::Node"** %380, align 8
  %382 = getelementptr inbounds %"struct.base::internal::RacefulWorklist<unsigned long>::Node", %"struct.base::internal::RacefulWorklist<unsigned long>::Node"* %381, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0
  %383 = load atomic i8, i8* %382 monotonic, align 1
  %384 = and i8 %383, 1
  %385 = icmp eq i8 %384, 0
  br i1 %385, label %386, label %467, !prof !7

386:                                              ; preds = %378
  %387 = getelementptr inbounds %"struct.base::internal::RacefulWorklist<unsigned long>::Node", %"struct.base::internal::RacefulWorklist<unsigned long>::Node"* %381, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0
  store atomic i8 1, i8* %387 monotonic, align 1
  %388 = getelementptr inbounds %"struct.base::internal::RacefulWorklist<unsigned long>::Node", %"struct.base::internal::RacefulWorklist<unsigned long>::Node"* %381, i64 0, i32 0
  %389 = load i64, i64* %388, align 8
  %390 = load i64, i64* %219, align 8
  %391 = and i64 %389, -2097152
  %392 = inttoptr i64 %391 to i8*
  %393 = and i64 %390, 1
  %394 = icmp eq i64 %393, 0
  %395 = select i1 %394, i64 32768, i64 16384
  %396 = getelementptr inbounds i8, i8* %392, i64 %395
  %397 = ptrtoint i8* %396 to i64
  %398 = bitcast i8* %396 to %"class.base::internal::ObjectBitmap"*
  %399 = and i64 %397, -2097152
  br label %400

400:                                              ; preds = %463, %386
  %401 = phi i64 [ 0, %386 ], [ %464, %463 ]
  %402 = getelementptr inbounds %"class.base::internal::ObjectBitmap", %"class.base::internal::ObjectBitmap"* %398, i64 0, i32 0, i32 0, i64 %401
  %403 = load i64, i64* %402, align 8
  %404 = icmp eq i64 %403, 0
  br i1 %404, label %463, label %405

405:                                              ; preds = %400
  %406 = shl i64 %401, 6
  br label %407

407:                                              ; preds = %458, %405
  %408 = phi i64 [ %403, %405 ], [ %461, %458 ]
  %409 = call i64 @llvm.cttz.i64(i64 %408, i1 true) #17, !range !4
  %410 = or i64 %409, %406
  %411 = shl i64 %410, 4
  %412 = add i64 %411, %399
  %413 = inttoptr i64 %412 to i8*
  %414 = and i64 %412, -2097152
  %415 = or i64 %414, 4096
  %416 = inttoptr i64 %415 to i8*
  %417 = lshr i64 %412, 9
  %418 = and i64 %417, 4064
  %419 = getelementptr inbounds i8, i8* %416, i64 %418
  %420 = bitcast i8* %419 to %"struct.base::internal::PartitionPage"*
  %421 = getelementptr inbounds i8, i8* %419, i64 30
  %422 = load i8, i8* %421, align 2
  %423 = zext i8 %422 to i64
  %424 = sub nsw i64 0, %423
  %425 = getelementptr inbounds %"struct.base::internal::PartitionPage", %"struct.base::internal::PartitionPage"* %420, i64 %424, i32 0, i32 1, i64 21
  %426 = load i8, i8* %425, align 1, !range !5
  %427 = icmp eq i8 %426, 0
  br i1 %427, label %428, label %435, !prof !6

428:                                              ; preds = %407
  %429 = getelementptr inbounds %"struct.base::internal::PartitionPage", %"struct.base::internal::PartitionPage"* %420, i64 %424, i32 0, i32 1, i64 8
  %430 = bitcast i8* %429 to %"struct.base::internal::PartitionBucket"**
  %431 = load %"struct.base::internal::PartitionBucket"*, %"struct.base::internal::PartitionBucket"** %430, align 1
  %432 = getelementptr inbounds %"struct.base::internal::PartitionBucket", %"struct.base::internal::PartitionBucket"* %431, i64 0, i32 3
  %433 = load i32, i32* %432, align 8
  %434 = zext i32 %433 to i64
  br label %440

435:                                              ; preds = %407
  %436 = getelementptr inbounds %"struct.base::internal::PartitionPage", %"struct.base::internal::PartitionPage"* %420, i64 %424, i32 0
  %437 = bitcast %union.anon.123* %436 to %"struct.base::internal::PartitionPage"*
  %438 = getelementptr inbounds %"struct.base::internal::PartitionPage", %"struct.base::internal::PartitionPage"* %437, i64 1, i32 0, i32 0, i32 0
  %439 = load i64, i64* %438, align 1
  br label %440

440:                                              ; preds = %435, %428
  %441 = phi i64 [ %434, %428 ], [ %439, %435 ]
  br i1 %220, label %442, label %443

442:                                              ; preds = %440
  call void @llvm.memset.p0i8.i64(i8* align 16 %413, i8 0, i64 %441, i1 false) #17
  br label %443

443:                                              ; preds = %442, %440
  %444 = lshr i64 %412, 12
  %445 = and i64 %444, 2097151
  %446 = add i64 %441, 4095
  %447 = lshr i64 %446, 12
  %448 = add nuw nsw i64 %447, %445
  %449 = icmp eq i64 %447, 0
  br i1 %449, label %458, label %450

450:                                              ; preds = %443
  %451 = and i64 %412, -8589934592
  %452 = inttoptr i64 %451 to %"class.base::internal::(anonymous namespace)::QuarantineCardTable"*
  %453 = getelementptr %"class.base::internal::(anonymous namespace)::QuarantineCardTable", %"class.base::internal::(anonymous namespace)::QuarantineCardTable"* %452, i64 0, i32 0, i32 0, i64 %445
  %454 = add nuw nsw i64 %445, 1
  %455 = icmp ugt i64 %448, %454
  %456 = select i1 %455, i64 %448, i64 %454
  %457 = sub nsw i64 %456, %445
  call void @llvm.memset.p0i8.i64(i8* align 1 %453, i8 1, i64 %457, i1 false) #17
  br label %458

458:                                              ; preds = %450, %443
  %459 = shl i64 1, %409
  %460 = xor i64 %459, -1
  %461 = and i64 %408, %460
  %462 = icmp eq i64 %461, 0
  br i1 %462, label %463, label %407

463:                                              ; preds = %458, %400
  %464 = add nuw nsw i64 %401, 1
  %465 = icmp eq i64 %464, 2048
  br i1 %465, label %466, label %400

466:                                              ; preds = %463
  store atomic i8 1, i8* %382 monotonic, align 1
  br label %467

467:                                              ; preds = %466, %378
  %468 = getelementptr inbounds %"class.std::__1::__wrap_iter", %"class.std::__1::__wrap_iter"* %379, i64 1
  %469 = icmp eq %"class.std::__1::__wrap_iter"* %468, %216
  br i1 %469, label %377, label %378

470:                                              ; preds = %377, %18
  %471 = load %"class.std::__1::__wrap_iter"*, %"class.std::__1::__wrap_iter"** %21, align 8
  %472 = icmp eq %"class.std::__1::__wrap_iter"* %471, null
  %473 = ptrtoint %"class.std::__1::__wrap_iter"* %471 to i64
  br i1 %472, label %482, label %474

474:                                              ; preds = %470
  %475 = bitcast %"class.std::__1::__wrap_iter"** %22 to i64*
  store i64 %473, i64* %475, align 8
  %476 = getelementptr inbounds %"class.std::__1::vector.181", %"class.std::__1::vector.181"* %2, i64 0, i32 0, i32 2
  %477 = bitcast %"class.std::__1::__compressed_pair.183"* %476 to %"class.base::internal::MetadataAllocator.186"*
  %478 = bitcast %"class.std::__1::__wrap_iter"** %23 to i64*
  %479 = load i64, i64* %478, align 8
  %480 = sub i64 %479, %473
  %481 = ashr exact i64 %480, 3
  call void @_ZN4base8internal17MetadataAllocatorINSt3__111__wrap_iterIPNS0_15RacefulWorklistImE4NodeEEEE10deallocateEPS8_m(%"class.base::internal::MetadataAllocator.186"* %477, %"class.std::__1::__wrap_iter"* nonnull %471, i64 %481) #17
  br label %482

482:                                              ; preds = %470, %474
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %20) #17
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4base8internal10PCScanTask19UnprotectPartitionsEv(%"class.base::internal::PCScanTask"*) local_unnamed_addr #3 align 2 {
  %2 = alloca %"class.std::__1::tuple.194", align 8
  %3 = alloca %"class.std::__1::__call_once_param.197", align 8
  %4 = alloca %class.anon.63, align 8
  %5 = bitcast %class.anon.63* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #17
  %6 = getelementptr inbounds %class.anon.63, %class.anon.63* %4, i64 0, i32 0
  store %"class.base::internal::PCScanTask"* %0, %"class.base::internal::PCScanTask"** %6, align 8
  %7 = getelementptr inbounds %"class.base::internal::PCScanTask", %"class.base::internal::PCScanTask"* %0, i64 0, i32 7, i32 0
  %8 = load atomic i64, i64* %7 acquire, align 8
  %9 = icmp eq i64 %8, -1
  br i1 %9, label %15, label %10

10:                                               ; preds = %1
  %11 = bitcast %"class.std::__1::tuple.194"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %11) #17
  %12 = getelementptr inbounds %"class.std::__1::tuple.194", %"class.std::__1::tuple.194"* %2, i64 0, i32 0, i32 0, i32 0
  store %class.anon.63* %4, %class.anon.63** %12, align 8
  %13 = bitcast %"class.std::__1::__call_once_param.197"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %13) #17
  %14 = getelementptr inbounds %"class.std::__1::__call_once_param.197", %"class.std::__1::__call_once_param.197"* %3, i64 0, i32 0
  store %"class.std::__1::tuple.194"* %2, %"class.std::__1::tuple.194"** %14, align 8
  call void @_ZNSt3__111__call_onceERVmPvPFvS2_E(i64* dereferenceable(8) %7, i8* nonnull %13, void (i8*)* nonnull @"_ZNSt3__117__call_once_proxyINS_5tupleIJOZN4base8internal10PCScanTask19UnprotectPartitionsEvE3$_2EEEEEvPv") #17
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %13) #17
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %11) #17
  br label %15

15:                                               ; preds = %1, %10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #17
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4base8internal10PCScanTaskC2ERNS0_6PCScanE(%"class.base::internal::PCScanTask"*, %"class.base::internal::PCScan"* dereferenceable(64)) unnamed_addr #3 align 2 {
  %3 = getelementptr inbounds %"class.base::internal::PCScanTask", %"class.base::internal::PCScanTask"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i32 0, i32* %3, align 4
  %4 = getelementptr inbounds %"class.base::internal::PCScanTask", %"class.base::internal::PCScanTask"* %0, i64 0, i32 1
  %5 = getelementptr inbounds %"class.base::internal::PCScan", %"class.base::internal::PCScan"* %1, i64 0, i32 0, i32 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %6 = load atomic i64, i64* %5 monotonic, align 8
  store i64 %6, i64* %4, align 8
  %7 = getelementptr inbounds %"class.base::internal::PCScanTask", %"class.base::internal::PCScanTask"* %0, i64 0, i32 2, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %8 = getelementptr inbounds %"class.base::internal::PCScanTask", %"class.base::internal::PCScanTask"* %0, i64 0, i32 2, i32 0, i32 0, i32 1, i32 0, i32 0
  %9 = getelementptr inbounds %"class.base::internal::PCScanTask", %"class.base::internal::PCScanTask"* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  %10 = bitcast %"class.std::__1::__tree_node_base"** %7 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %10, i8 0, i64 16, i1 false) #17
  store %"class.std::__1::__tree_end_node"* %8, %"class.std::__1::__tree_end_node"** %9, align 8
  %11 = getelementptr inbounds %"class.base::internal::PCScanTask", %"class.base::internal::PCScanTask"* %0, i64 0, i32 2, i32 1
  %12 = bitcast %"class.base::internal::RacefulWorklist"* %11 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %12, i8 0, i64 25, i1 false) #17
  %13 = getelementptr inbounds %"class.base::internal::PCScanTask", %"class.base::internal::PCScanTask"* %0, i64 0, i32 2, i32 2
  %14 = bitcast %"class.base::internal::RacefulWorklist.14"* %13 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %14, i8 0, i64 25, i1 false) #17
  %15 = getelementptr inbounds %"class.base::internal::PCScanTask", %"class.base::internal::PCScanTask"* %0, i64 0, i32 2, i32 3
  %16 = bitcast %"class.base::internal::RacefulWorklist.23"* %15 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %16, i8 0, i64 25, i1 false) #17
  %17 = getelementptr inbounds %"class.base::internal::PCScanTask", %"class.base::internal::PCScanTask"* %0, i64 0, i32 2, i32 4, i32 0
  store i64 0, i64* %17, align 8
  %18 = getelementptr inbounds %"class.base::internal::PCScanTask", %"class.base::internal::PCScanTask"* %0, i64 0, i32 3
  %19 = tail call dereferenceable(312) %"class.base::internal::PCScanInternal"* @_ZN4base8internal14PCScanInternal8InstanceEv()
  %20 = getelementptr inbounds %"class.base::internal::PCScanInternal", %"class.base::internal::PCScanInternal"* %19, i64 0, i32 8
  %21 = load i8*, i8** %20, align 8
  tail call void @_ZN4base8internal14StatsCollectorC1EPKc(%"class.base::internal::StatsCollector"* %18, i8* %21) #17
  %22 = getelementptr inbounds %"class.base::internal::PCScanTask", %"class.base::internal::PCScanTask"* %0, i64 0, i32 4
  %23 = getelementptr inbounds %"class.base::internal::PCScanTask", %"class.base::internal::PCScanTask"* %0, i64 0, i32 8
  %24 = bitcast %"class.std::__1::mutex"* %22 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %24, i8 0, i64 104, i1 false)
  store %"class.base::internal::PCScan"* %1, %"class.base::internal::PCScan"** %23, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(312) %"class.base::internal::PCScanInternal"* @_ZN4base8internal14PCScanInternal8InstanceEv() local_unnamed_addr #3 comdat align 2 {
  %1 = alloca %"class.base::CPU", align 8
  %2 = load atomic i8, i8* bitcast (i64* @_ZGVZN4base8internal14PCScanInternal8InstanceEvE8instance to i8*) acquire, align 8
  %3 = icmp eq i8 %2, 0
  br i1 %3, label %4, label %33, !prof !8

4:                                                ; preds = %0
  %5 = tail call i32 @__cxa_guard_acquire(i64* nonnull @_ZGVZN4base8internal14PCScanInternal8InstanceEvE8instance) #17
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %33, label %7

7:                                                ; preds = %4
  tail call void @llvm.memset.p0i8.i64(i8* align 8 getelementptr inbounds (%"class.base::NoDestructor", %"class.base::NoDestructor"* @_ZZN4base8internal14PCScanInternal8InstanceEvE8instance, i64 0, i32 0, i64 200), i8 0, i64 32, i1 false) #17
  tail call void @llvm.memset.p0i8.i64(i8* align 8 getelementptr inbounds (%"class.base::NoDestructor", %"class.base::NoDestructor"* @_ZZN4base8internal14PCScanInternal8InstanceEvE8instance, i64 0, i32 0, i64 0), i8 0, i64 193, i1 false) #17
  store i32 1065353216, i32* bitcast (i8* getelementptr inbounds (%"class.base::NoDestructor", %"class.base::NoDestructor"* @_ZZN4base8internal14PCScanInternal8InstanceEvE8instance, i64 0, i32 0, i64 232) to i32*), align 8
  %8 = bitcast %"class.base::CPU"* %1 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 getelementptr inbounds (%"class.base::NoDestructor", %"class.base::NoDestructor"* @_ZZN4base8internal14PCScanInternal8InstanceEvE8instance, i64 0, i32 0, i64 240), i8 0, i64 48, i1 false) #17
  call void @llvm.lifetime.start.p0i8(i64 96, i8* nonnull %8) #17
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %8, i8 -86, i64 96, i1 false) #17
  call void @_ZN4base3CPUC1Ev(%"class.base::CPU"* nonnull %1) #17
  %9 = getelementptr inbounds %"class.base::CPU", %"class.base::CPU"* %1, i64 0, i32 18
  %10 = load i8, i8* %9, align 2, !range !5
  %11 = icmp eq i8 %10, 0
  %12 = getelementptr inbounds %"class.base::CPU", %"class.base::CPU"* %1, i64 0, i32 14
  %13 = load i8, i8* %12, align 2
  %14 = select i1 %11, i8 %13, i8 2
  %15 = getelementptr inbounds %"class.base::CPU", %"class.base::CPU"* %1, i64 0, i32 25
  %16 = bitcast %"class.std::__1::basic_string"* %15 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %17 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %16, i64 0, i32 1, i32 0
  %18 = load i8, i8* %17, align 1
  %19 = icmp slt i8 %18, 0
  br i1 %19, label %20, label %23

20:                                               ; preds = %7
  %21 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %15, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %22 = load i8*, i8** %21, align 8
  call void @_ZdlPv(i8* %22) #19
  br label %23

23:                                               ; preds = %20, %7
  %24 = getelementptr inbounds %"class.base::CPU", %"class.base::CPU"* %1, i64 0, i32 24
  %25 = bitcast %"class.std::__1::basic_string"* %24 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %26 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %25, i64 0, i32 1, i32 0
  %27 = load i8, i8* %26, align 1
  %28 = icmp slt i8 %27, 0
  br i1 %28, label %29, label %32

29:                                               ; preds = %23
  %30 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %24, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %31 = load i8*, i8** %30, align 8
  call void @_ZdlPv(i8* %31) #19
  br label %32

32:                                               ; preds = %23, %29
  call void @llvm.lifetime.end.p0i8(i64 96, i8* nonnull %8) #17
  store i8 %14, i8* getelementptr inbounds (%"class.base::NoDestructor", %"class.base::NoDestructor"* @_ZZN4base8internal14PCScanInternal8InstanceEvE8instance, i64 0, i32 0, i64 288), align 8
  store i64 0, i64* bitcast (i8* getelementptr inbounds (%"class.base::NoDestructor", %"class.base::NoDestructor"* @_ZZN4base8internal14PCScanInternal8InstanceEvE8instance, i64 0, i32 0, i64 296) to i64*), align 8
  store i8 0, i8* getelementptr inbounds (%"class.base::NoDestructor", %"class.base::NoDestructor"* @_ZZN4base8internal14PCScanInternal8InstanceEvE8instance, i64 0, i32 0, i64 304), align 8
  call void @__cxa_guard_release(i64* nonnull @_ZGVZN4base8internal14PCScanInternal8InstanceEvE8instance) #17
  br label %33

33:                                               ; preds = %4, %32, %0
  ret %"class.base::internal::PCScanInternal"* bitcast (%"class.base::NoDestructor"* @_ZZN4base8internal14PCScanInternal8InstanceEvE8instance to %"class.base::internal::PCScanInternal"*)
}

declare void @_ZN4base8internal14StatsCollectorC1EPKc(%"class.base::internal::StatsCollector"*, i8*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4base8internal10PCScanTask9ScanStackEv(%"class.base::internal::PCScanTask"*) local_unnamed_addr #3 align 2 {
  %2 = alloca %"class.base::internal::Stack", align 8
  %3 = alloca %"class.base::internal::PCScanTask::StackVisitor", align 8
  %4 = tail call dereferenceable(312) %"class.base::internal::PCScanInternal"* @_ZN4base8internal14PCScanInternal8InstanceEv()
  %5 = getelementptr inbounds %"class.base::internal::PCScanInternal", %"class.base::internal::PCScanInternal"* %4, i64 0, i32 4
  %6 = load i8, i8* %5, align 8, !range !5
  %7 = icmp eq i8 %6, 0
  br i1 %7, label %22, label %8

8:                                                ; preds = %1
  %9 = tail call i8* @_ZNK4base8internal14PCScanInternal24GetCurrentThreadStackTopEv(%"class.base::internal::PCScanInternal"* %4)
  %10 = icmp eq i8* %9, null
  br i1 %10, label %22, label %11, !prof !7

11:                                               ; preds = %8
  %12 = bitcast %"class.base::internal::Stack"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %12) #17
  %13 = getelementptr inbounds %"class.base::internal::Stack", %"class.base::internal::Stack"* %2, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %13, align 8
  call void @_ZN4base8internal5StackC1EPv(%"class.base::internal::Stack"* nonnull %2, i8* nonnull %9) #17
  %14 = bitcast %"class.base::internal::PCScanTask::StackVisitor"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %14) #17
  %15 = getelementptr inbounds %"class.base::internal::PCScanTask::StackVisitor", %"class.base::internal::PCScanTask::StackVisitor"* %3, i64 0, i32 0, i32 0
  %16 = getelementptr inbounds %"class.base::internal::PCScanTask::StackVisitor", %"class.base::internal::PCScanTask::StackVisitor"* %3, i64 0, i32 1
  %17 = getelementptr inbounds %"class.base::internal::PCScanTask::StackVisitor", %"class.base::internal::PCScanTask::StackVisitor"* %3, i64 0, i32 2
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [3 x i8*] }, { [3 x i8*] }* @_ZTVN4base8internal10PCScanTask12StackVisitorE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %15, align 8
  store %"class.base::internal::PCScanTask"* %0, %"class.base::internal::PCScanTask"** %16, align 8
  store i64 0, i64* %17, align 8
  %18 = getelementptr inbounds %"class.base::internal::PCScanTask::StackVisitor", %"class.base::internal::PCScanTask::StackVisitor"* %3, i64 0, i32 0
  call void @_ZNK4base8internal5Stack15IteratePointersEPNS0_12StackVisitorE(%"class.base::internal::Stack"* nonnull %2, %"class.base::internal::StackVisitor"* nonnull %18) #17
  %19 = load i64, i64* %17, align 8
  %20 = getelementptr inbounds %"class.base::internal::PCScanTask", %"class.base::internal::PCScanTask"* %0, i64 0, i32 3, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %21 = atomicrmw add i64* %20, i64 %19 monotonic
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %14) #17
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %12) #17
  br label %22

22:                                               ; preds = %1, %11, %8
  ret void
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK4base8internal14PCScanInternal22IsStackScanningEnabledEv(%"class.base::internal::PCScanInternal"* nocapture readonly) local_unnamed_addr #4 align 2 {
  %2 = getelementptr inbounds %"class.base::internal::PCScanInternal", %"class.base::internal::PCScanInternal"* %0, i64 0, i32 4
  %3 = load i8, i8* %2, align 8, !range !5
  %4 = icmp ne i8 %3, 0
  ret i1 %4
}

; Function Attrs: nounwind ssp uwtable
define hidden i8* @_ZNK4base8internal14PCScanInternal24GetCurrentThreadStackTopEv(%"class.base::internal::PCScanInternal"*) local_unnamed_addr #3 align 2 {
  %2 = tail call i32 @_ZN4base14PlatformThread9CurrentIdEv() #17
  %3 = getelementptr inbounds %"class.base::internal::PCScanInternal", %"class.base::internal::PCScanInternal"* %0, i64 0, i32 7
  tail call void @_ZNSt3__15mutex4lockEv(%"class.std::__1::mutex"* %3) #17
  %4 = sext i32 %2 to i64
  %5 = getelementptr inbounds %"class.base::internal::PCScanInternal", %"class.base::internal::PCScanInternal"* %0, i64 0, i32 6, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %6 = load i64, i64* %5, align 8
  %7 = icmp eq i64 %6, 0
  br i1 %7, label %60, label %8

8:                                                ; preds = %1
  %9 = tail call i64 @llvm.ctpop.i64(i64 %6) #17, !range !4
  %10 = icmp ugt i64 %9, 1
  br i1 %10, label %14, label %11

11:                                               ; preds = %8
  %12 = add i64 %6, -1
  %13 = and i64 %12, %4
  br label %18

14:                                               ; preds = %8
  %15 = icmp ugt i64 %6, %4
  br i1 %15, label %18, label %16

16:                                               ; preds = %14
  %17 = urem i64 %4, %6
  br label %18

18:                                               ; preds = %16, %14, %11
  %19 = phi i64 [ %13, %11 ], [ %17, %16 ], [ %4, %14 ]
  %20 = getelementptr inbounds %"class.base::internal::PCScanInternal", %"class.base::internal::PCScanInternal"* %0, i64 0, i32 6, i32 0, i32 0, i32 0, i32 0, i32 0
  %21 = load %"struct.std::__1::__hash_node_base.69"**, %"struct.std::__1::__hash_node_base.69"*** %20, align 8
  %22 = getelementptr inbounds %"struct.std::__1::__hash_node_base.69"*, %"struct.std::__1::__hash_node_base.69"** %21, i64 %19
  %23 = load %"struct.std::__1::__hash_node_base.69"*, %"struct.std::__1::__hash_node_base.69"** %22, align 8
  %24 = icmp eq %"struct.std::__1::__hash_node_base.69"* %23, null
  br i1 %24, label %60, label %25

25:                                               ; preds = %18
  %26 = getelementptr inbounds %"struct.std::__1::__hash_node_base.69", %"struct.std::__1::__hash_node_base.69"* %23, i64 0, i32 0
  %27 = load %"struct.std::__1::__hash_node_base.69"*, %"struct.std::__1::__hash_node_base.69"** %26, align 8
  %28 = icmp eq %"struct.std::__1::__hash_node_base.69"* %27, null
  br i1 %28, label %60, label %29

29:                                               ; preds = %25
  %30 = add i64 %6, -1
  br label %31

31:                                               ; preds = %52, %29
  %32 = phi %"struct.std::__1::__hash_node_base.69"* [ %27, %29 ], [ %54, %52 ]
  %33 = getelementptr inbounds %"struct.std::__1::__hash_node_base.69", %"struct.std::__1::__hash_node_base.69"* %32, i64 1
  %34 = bitcast %"struct.std::__1::__hash_node_base.69"* %33 to i64*
  %35 = load i64, i64* %34, align 8
  %36 = icmp eq i64 %35, %4
  br i1 %36, label %47, label %37

37:                                               ; preds = %31
  br i1 %10, label %40, label %38

38:                                               ; preds = %37
  %39 = and i64 %35, %30
  br label %44

40:                                               ; preds = %37
  %41 = icmp ult i64 %35, %6
  br i1 %41, label %44, label %42

42:                                               ; preds = %40
  %43 = urem i64 %35, %6
  br label %44

44:                                               ; preds = %42, %40, %38
  %45 = phi i64 [ %39, %38 ], [ %43, %42 ], [ %35, %40 ]
  %46 = icmp eq i64 %45, %19
  br i1 %46, label %52, label %60

47:                                               ; preds = %31
  %48 = getelementptr inbounds %"struct.std::__1::__hash_node_base.69", %"struct.std::__1::__hash_node_base.69"* %32, i64 2
  %49 = bitcast %"struct.std::__1::__hash_node_base.69"* %48 to i32*
  %50 = load i32, i32* %49, align 4
  %51 = icmp eq i32 %50, %2
  br i1 %51, label %56, label %52

52:                                               ; preds = %47, %44
  %53 = getelementptr inbounds %"struct.std::__1::__hash_node_base.69", %"struct.std::__1::__hash_node_base.69"* %32, i64 0, i32 0
  %54 = load %"struct.std::__1::__hash_node_base.69"*, %"struct.std::__1::__hash_node_base.69"** %53, align 8
  %55 = icmp eq %"struct.std::__1::__hash_node_base.69"* %54, null
  br i1 %55, label %60, label %31

56:                                               ; preds = %47
  %57 = getelementptr inbounds %"struct.std::__1::__hash_node_base.69", %"struct.std::__1::__hash_node_base.69"* %32, i64 3
  %58 = bitcast %"struct.std::__1::__hash_node_base.69"* %57 to i8**
  %59 = load i8*, i8** %58, align 8
  br label %60

60:                                               ; preds = %52, %44, %25, %1, %18, %56
  %61 = phi i8* [ %59, %56 ], [ null, %18 ], [ null, %1 ], [ null, %25 ], [ null, %44 ], [ null, %52 ]
  tail call void @_ZNSt3__15mutex6unlockEv(%"class.std::__1::mutex"* %3) #17
  ret i8* %61
}

declare void @_ZN4base8internal5StackC1EPv(%"class.base::internal::Stack"*, i8*) unnamed_addr #2

declare void @_ZNK4base8internal5Stack15IteratePointersEPNS0_12StackVisitorE(%"class.base::internal::Stack"*, %"class.base::internal::StackVisitor"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4base8internal10PCScanTask14ScanPartitionsEv(%"class.base::internal::PCScanTask"*) local_unnamed_addr #3 align 2 {
  %2 = alloca %"class.std::__1::vector.203", align 8
  %3 = alloca %"class.std::__1::__wrap_iter.205", align 8
  %4 = alloca %"class.std::__1::__wrap_iter.205", align 8
  %5 = alloca %"class.std::__1::vector.215", align 8
  %6 = alloca %"class.std::__1::__wrap_iter.217", align 8
  %7 = alloca %"class.std::__1::__wrap_iter.217", align 8
  %8 = alloca %"class.base::internal::PCScanScanLoop", align 8
  %9 = getelementptr inbounds %"class.base::internal::PCScanScanLoop", %"class.base::internal::PCScanScanLoop"* %8, i64 0, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %9) #17
  %10 = bitcast %"class.base::internal::PCScanScanLoop"* %8 to i64*
  store i64 -6148914691236517206, i64* %10, align 8
  %11 = tail call dereferenceable(312) %"class.base::internal::PCScanInternal"* @_ZN4base8internal14PCScanInternal8InstanceEv() #17
  %12 = getelementptr inbounds %"class.base::internal::PCScanInternal", %"class.base::internal::PCScanInternal"* %11, i64 0, i32 9
  %13 = load i8, i8* %12, align 8
  store i8 %13, i8* %9, align 8
  %14 = getelementptr inbounds %"class.base::internal::PCScanScanLoop", %"class.base::internal::PCScanScanLoop"* %8, i64 0, i32 1
  %15 = load i64, i64* @_ZN4base8internal21PartitionAddressSpace22brp_pool_base_address_E, align 8
  store i64 %15, i64* %14, align 8
  %16 = getelementptr inbounds %"class.base::internal::PCScanScanLoop", %"class.base::internal::PCScanScanLoop"* %8, i64 0, i32 2
  store %"class.base::internal::PCScanTask"* %0, %"class.base::internal::PCScanTask"** %16, align 8
  %17 = getelementptr inbounds %"class.base::internal::PCScanScanLoop", %"class.base::internal::PCScanScanLoop"* %8, i64 0, i32 3
  store i64 0, i64* %17, align 8
  %18 = getelementptr inbounds %"class.base::internal::PCScanTask", %"class.base::internal::PCScanTask"* %0, i64 0, i32 2, i32 2
  %19 = getelementptr inbounds %"class.base::internal::PCScanTask", %"class.base::internal::PCScanTask"* %0, i64 0, i32 2, i32 2, i32 0, i32 0, i32 1
  %20 = bitcast %"struct.base::internal::RacefulWorklist<base::internal::(anonymous namespace)::PCScanSnapshot::LargeScanArea>::Node"** %19 to i64*
  %21 = load i64, i64* %20, align 8
  %22 = bitcast %"class.base::internal::RacefulWorklist.14"* %18 to i64*
  %23 = load i64, i64* %22, align 8
  %24 = sub i64 %21, %23
  %25 = icmp eq i64 %24, 0
  br i1 %25, label %29, label %26

26:                                               ; preds = %1
  %27 = ashr exact i64 %24, 5
  %28 = tail call i64 @_ZN4base13RandGeneratorEm(i64 %27) #17
  br label %29

29:                                               ; preds = %1, %26
  %30 = phi i64 [ 0, %1 ], [ %28, %26 ]
  %31 = tail call dereferenceable(312) %"class.base::internal::PCScanInternal"* @_ZN4base8internal14PCScanInternal8InstanceEv()
  %32 = bitcast %"class.std::__1::vector.203"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %32) #17
  %33 = getelementptr inbounds %"class.std::__1::vector.203", %"class.std::__1::vector.203"* %2, i64 0, i32 0, i32 0
  %34 = getelementptr inbounds %"class.std::__1::vector.203", %"class.std::__1::vector.203"* %2, i64 0, i32 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %32, i8 0, i64 24, i1 false) #17
  %35 = getelementptr inbounds %"class.base::internal::PCScanTask", %"class.base::internal::PCScanTask"* %0, i64 0, i32 2, i32 2, i32 1, i32 0, i32 0, i32 0, i32 0
  %36 = load atomic i8, i8* %35 acquire, align 1
  %37 = and i8 %36, 1
  %38 = icmp eq i8 %37, 0
  br i1 %38, label %39, label %273

39:                                               ; preds = %29
  %40 = getelementptr inbounds %"class.base::internal::RacefulWorklist.14", %"class.base::internal::RacefulWorklist.14"* %18, i64 0, i32 0, i32 0, i32 0
  %41 = load %"struct.base::internal::RacefulWorklist<base::internal::(anonymous namespace)::PCScanSnapshot::LargeScanArea>::Node"*, %"struct.base::internal::RacefulWorklist<base::internal::(anonymous namespace)::PCScanSnapshot::LargeScanArea>::Node"** %40, align 8
  %42 = getelementptr inbounds %"struct.base::internal::RacefulWorklist<base::internal::(anonymous namespace)::PCScanSnapshot::LargeScanArea>::Node", %"struct.base::internal::RacefulWorklist<base::internal::(anonymous namespace)::PCScanSnapshot::LargeScanArea>::Node"* %41, i64 %30
  %43 = ptrtoint %"struct.base::internal::RacefulWorklist<base::internal::(anonymous namespace)::PCScanSnapshot::LargeScanArea>::Node"* %42 to i64
  %44 = bitcast %"class.std::__1::__wrap_iter.205"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %44) #17
  %45 = getelementptr inbounds %"class.std::__1::__wrap_iter.205", %"class.std::__1::__wrap_iter.205"* %3, i64 0, i32 0
  %46 = bitcast %"class.std::__1::__wrap_iter.205"* %3 to i64*
  store i64 %43, i64* %46, align 8
  %47 = load %"struct.base::internal::RacefulWorklist<base::internal::(anonymous namespace)::PCScanSnapshot::LargeScanArea>::Node"*, %"struct.base::internal::RacefulWorklist<base::internal::(anonymous namespace)::PCScanSnapshot::LargeScanArea>::Node"** %19, align 8
  %48 = icmp eq %"struct.base::internal::RacefulWorklist<base::internal::(anonymous namespace)::PCScanSnapshot::LargeScanArea>::Node"* %42, %47
  br i1 %48, label %53, label %49

49:                                               ; preds = %39
  %50 = getelementptr inbounds %"class.base::internal::PCScanInternal", %"class.base::internal::PCScanInternal"* %31, i64 0, i32 11, i32 0, i32 0, i32 0
  %51 = getelementptr inbounds %"class.base::internal::PCScanTask", %"class.base::internal::PCScanTask"* %0, i64 0, i32 1
  %52 = getelementptr inbounds %"class.base::internal::PCScanScanLoop", %"class.base::internal::PCScanScanLoop"* %8, i64 0, i32 0
  br label %68

53:                                               ; preds = %39
  %54 = ptrtoint %"struct.base::internal::RacefulWorklist<base::internal::(anonymous namespace)::PCScanSnapshot::LargeScanArea>::Node"* %41 to i64
  br label %57

55:                                               ; preds = %131
  %56 = load i64, i64* %22, align 8
  br label %57

57:                                               ; preds = %55, %53
  %58 = phi i64 [ %56, %55 ], [ %54, %53 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %44) #17
  %59 = bitcast %"class.std::__1::__wrap_iter.205"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %59) #17
  %60 = getelementptr inbounds %"class.std::__1::__wrap_iter.205", %"class.std::__1::__wrap_iter.205"* %4, i64 0, i32 0
  %61 = bitcast %"class.std::__1::__wrap_iter.205"* %4 to i64*
  store i64 %58, i64* %61, align 8
  %62 = inttoptr i64 %58 to %"struct.base::internal::RacefulWorklist<base::internal::(anonymous namespace)::PCScanSnapshot::LargeScanArea>::Node"*
  %63 = icmp eq %"struct.base::internal::RacefulWorklist<base::internal::(anonymous namespace)::PCScanSnapshot::LargeScanArea>::Node"* %42, %62
  br i1 %63, label %135, label %64

64:                                               ; preds = %57
  %65 = getelementptr inbounds %"class.base::internal::PCScanInternal", %"class.base::internal::PCScanInternal"* %31, i64 0, i32 11, i32 0, i32 0, i32 0
  %66 = getelementptr inbounds %"class.base::internal::PCScanTask", %"class.base::internal::PCScanTask"* %0, i64 0, i32 1
  %67 = getelementptr inbounds %"class.base::internal::PCScanScanLoop", %"class.base::internal::PCScanScanLoop"* %8, i64 0, i32 0
  br label %143

68:                                               ; preds = %49, %131
  %69 = phi %"struct.base::internal::RacefulWorklist<base::internal::(anonymous namespace)::PCScanSnapshot::LargeScanArea>::Node"* [ %132, %131 ], [ %42, %49 ]
  %70 = getelementptr inbounds %"struct.base::internal::RacefulWorklist<base::internal::(anonymous namespace)::PCScanSnapshot::LargeScanArea>::Node", %"struct.base::internal::RacefulWorklist<base::internal::(anonymous namespace)::PCScanSnapshot::LargeScanArea>::Node"* %69, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0
  %71 = load atomic i8, i8* %70 monotonic, align 1
  %72 = and i8 %71, 1
  %73 = icmp eq i8 %72, 0
  br i1 %73, label %74, label %131

74:                                               ; preds = %68
  %75 = getelementptr inbounds %"struct.base::internal::RacefulWorklist<base::internal::(anonymous namespace)::PCScanSnapshot::LargeScanArea>::Node", %"struct.base::internal::RacefulWorklist<base::internal::(anonymous namespace)::PCScanSnapshot::LargeScanArea>::Node"* %69, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %76 = load atomic i8, i8* %75 monotonic, align 1
  %77 = and i8 %76, 1
  %78 = icmp eq i8 %77, 0
  br i1 %78, label %80, label %79

79:                                               ; preds = %74
  call fastcc void @_ZNSt3__16vectorINS_11__wrap_iterIPN4base8internal15RacefulWorklistINS3_12_GLOBAL__N_114PCScanSnapshot13LargeScanAreaEE4NodeEEENS3_17MetadataAllocatorISB_EEE9push_backERKSB_(%"class.std::__1::vector.203"* nonnull %2, %"class.std::__1::__wrap_iter.205"* nonnull dereferenceable(8) %3) #17
  br label %131

80:                                               ; preds = %74
  store atomic i8 1, i8* %75 monotonic, align 1
  %81 = bitcast %"struct.base::internal::RacefulWorklist<base::internal::(anonymous namespace)::PCScanSnapshot::LargeScanArea>::Node"* %69 to i64*
  %82 = load i64, i64* %81, align 8
  %83 = getelementptr inbounds %"struct.base::internal::RacefulWorklist<base::internal::(anonymous namespace)::PCScanSnapshot::LargeScanArea>::Node", %"struct.base::internal::RacefulWorklist<base::internal::(anonymous namespace)::PCScanSnapshot::LargeScanArea>::Node"* %69, i64 0, i32 0, i32 0, i32 1
  %84 = bitcast i64** %83 to i64*
  %85 = load i64, i64* %84, align 8
  %86 = getelementptr inbounds %"struct.base::internal::RacefulWorklist<base::internal::(anonymous namespace)::PCScanSnapshot::LargeScanArea>::Node", %"struct.base::internal::RacefulWorklist<base::internal::(anonymous namespace)::PCScanSnapshot::LargeScanArea>::Node"* %69, i64 0, i32 0, i32 1
  %87 = load i64, i64* %86, align 8
  %88 = load %"class.base::internal::WriteProtector"*, %"class.base::internal::WriteProtector"** %50, align 8
  %89 = sub i64 4095, %82
  %90 = add i64 %89, %85
  %91 = and i64 %90, -4096
  %92 = bitcast %"class.base::internal::WriteProtector"* %88 to void (%"class.base::internal::WriteProtector"*, i64, i64)***
  %93 = load void (%"class.base::internal::WriteProtector"*, i64, i64)**, void (%"class.base::internal::WriteProtector"*, i64, i64)*** %92, align 8
  %94 = getelementptr inbounds void (%"class.base::internal::WriteProtector"*, i64, i64)*, void (%"class.base::internal::WriteProtector"*, i64, i64)** %93, i64 2
  %95 = load void (%"class.base::internal::WriteProtector"*, i64, i64)*, void (%"class.base::internal::WriteProtector"*, i64, i64)** %94, align 8
  call void %95(%"class.base::internal::WriteProtector"* %88, i64 %82, i64 %91) #17
  %96 = load i64, i64* %51, align 8
  %97 = and i64 %82, -2097152
  %98 = inttoptr i64 %97 to i8*
  %99 = and i64 %96, 1
  %100 = icmp eq i64 %99, 0
  %101 = select i1 %100, i64 32768, i64 16384
  %102 = getelementptr inbounds i8, i8* %98, i64 %101
  %103 = bitcast i8* %102 to %"class.base::internal::ObjectBitmap"*
  %104 = inttoptr i64 %82 to i64*
  %105 = inttoptr i64 %85 to i64*
  %106 = icmp ugt i64* %105, %104
  br i1 %106, label %107, label %130

107:                                              ; preds = %80
  %108 = lshr i64 %87, 3
  br label %109

109:                                              ; preds = %127, %107
  %110 = phi i64* [ %104, %107 ], [ %128, %127 ]
  %111 = ptrtoint i64* %110 to i64
  %112 = lshr i64 %111, 4
  %113 = lshr i64 %111, 10
  %114 = and i64 %113, 2047
  %115 = and i64 %112, 63
  %116 = getelementptr inbounds %"class.base::internal::ObjectBitmap", %"class.base::internal::ObjectBitmap"* %103, i64 0, i32 0, i32 0, i64 %114
  %117 = load atomic i64, i64* %116 monotonic, align 8
  %118 = shl i64 1, %115
  %119 = and i64 %118, %117
  %120 = icmp eq i64 %119, 0
  br i1 %120, label %121, label %127

121:                                              ; preds = %109
  %122 = getelementptr inbounds i64, i64* %110, i64 %108
  %123 = load i8, i8* %9, align 8
  switch i8 %123, label %126 [
    i8 2, label %124
    i8 1, label %125
  ]

124:                                              ; preds = %121
  call void @_ZN4base8internal8ScanLoopINS0_14PCScanScanLoopEE7RunAVX2EPmS4_(%"class.base::internal::ScanLoop"* nonnull %52, i64* %110, i64* %122) #17
  br label %127

125:                                              ; preds = %121
  call void @_ZN4base8internal8ScanLoopINS0_14PCScanScanLoopEE7RunSSE4EPmS4_(%"class.base::internal::ScanLoop"* nonnull %52, i64* %110, i64* %122) #17
  br label %127

126:                                              ; preds = %121
  call void @_ZN4base8internal8ScanLoopINS0_14PCScanScanLoopEE15RunUnvectorizedEPmS4_(%"class.base::internal::ScanLoop"* nonnull %52, i64* %110, i64* %122) #17
  br label %127

127:                                              ; preds = %126, %125, %124, %109
  %128 = getelementptr inbounds i64, i64* %110, i64 %108
  %129 = icmp ult i64* %128, %105
  br i1 %129, label %109, label %130

130:                                              ; preds = %127, %80
  store atomic i8 1, i8* %70 monotonic, align 1
  br label %131

131:                                              ; preds = %130, %79, %68
  %132 = getelementptr inbounds %"struct.base::internal::RacefulWorklist<base::internal::(anonymous namespace)::PCScanSnapshot::LargeScanArea>::Node", %"struct.base::internal::RacefulWorklist<base::internal::(anonymous namespace)::PCScanSnapshot::LargeScanArea>::Node"* %69, i64 1
  store %"struct.base::internal::RacefulWorklist<base::internal::(anonymous namespace)::PCScanSnapshot::LargeScanArea>::Node"* %132, %"struct.base::internal::RacefulWorklist<base::internal::(anonymous namespace)::PCScanSnapshot::LargeScanArea>::Node"** %45, align 8
  %133 = load %"struct.base::internal::RacefulWorklist<base::internal::(anonymous namespace)::PCScanSnapshot::LargeScanArea>::Node"*, %"struct.base::internal::RacefulWorklist<base::internal::(anonymous namespace)::PCScanSnapshot::LargeScanArea>::Node"** %19, align 8
  %134 = icmp eq %"struct.base::internal::RacefulWorklist<base::internal::(anonymous namespace)::PCScanSnapshot::LargeScanArea>::Node"* %132, %133
  br i1 %134, label %55, label %68

135:                                              ; preds = %206, %57
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %59) #17
  %136 = load %"class.std::__1::__wrap_iter.205"*, %"class.std::__1::__wrap_iter.205"** %33, align 8
  %137 = load %"class.std::__1::__wrap_iter.205"*, %"class.std::__1::__wrap_iter.205"** %34, align 8
  %138 = icmp eq %"class.std::__1::__wrap_iter.205"* %136, %137
  br i1 %138, label %209, label %139

139:                                              ; preds = %135
  %140 = getelementptr inbounds %"class.base::internal::PCScanInternal", %"class.base::internal::PCScanInternal"* %31, i64 0, i32 11, i32 0, i32 0, i32 0
  %141 = getelementptr inbounds %"class.base::internal::PCScanTask", %"class.base::internal::PCScanTask"* %0, i64 0, i32 1
  %142 = getelementptr inbounds %"class.base::internal::PCScanScanLoop", %"class.base::internal::PCScanScanLoop"* %8, i64 0, i32 0
  br label %210

143:                                              ; preds = %64, %206
  %144 = phi %"struct.base::internal::RacefulWorklist<base::internal::(anonymous namespace)::PCScanSnapshot::LargeScanArea>::Node"* [ %207, %206 ], [ %62, %64 ]
  %145 = getelementptr inbounds %"struct.base::internal::RacefulWorklist<base::internal::(anonymous namespace)::PCScanSnapshot::LargeScanArea>::Node", %"struct.base::internal::RacefulWorklist<base::internal::(anonymous namespace)::PCScanSnapshot::LargeScanArea>::Node"* %144, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0
  %146 = load atomic i8, i8* %145 monotonic, align 1
  %147 = and i8 %146, 1
  %148 = icmp eq i8 %147, 0
  br i1 %148, label %149, label %206

149:                                              ; preds = %143
  %150 = getelementptr inbounds %"struct.base::internal::RacefulWorklist<base::internal::(anonymous namespace)::PCScanSnapshot::LargeScanArea>::Node", %"struct.base::internal::RacefulWorklist<base::internal::(anonymous namespace)::PCScanSnapshot::LargeScanArea>::Node"* %144, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %151 = load atomic i8, i8* %150 monotonic, align 1
  %152 = and i8 %151, 1
  %153 = icmp eq i8 %152, 0
  br i1 %153, label %155, label %154

154:                                              ; preds = %149
  call fastcc void @_ZNSt3__16vectorINS_11__wrap_iterIPN4base8internal15RacefulWorklistINS3_12_GLOBAL__N_114PCScanSnapshot13LargeScanAreaEE4NodeEEENS3_17MetadataAllocatorISB_EEE9push_backERKSB_(%"class.std::__1::vector.203"* nonnull %2, %"class.std::__1::__wrap_iter.205"* nonnull dereferenceable(8) %4) #17
  br label %206

155:                                              ; preds = %149
  store atomic i8 1, i8* %150 monotonic, align 1
  %156 = bitcast %"struct.base::internal::RacefulWorklist<base::internal::(anonymous namespace)::PCScanSnapshot::LargeScanArea>::Node"* %144 to i64*
  %157 = load i64, i64* %156, align 8
  %158 = getelementptr inbounds %"struct.base::internal::RacefulWorklist<base::internal::(anonymous namespace)::PCScanSnapshot::LargeScanArea>::Node", %"struct.base::internal::RacefulWorklist<base::internal::(anonymous namespace)::PCScanSnapshot::LargeScanArea>::Node"* %144, i64 0, i32 0, i32 0, i32 1
  %159 = bitcast i64** %158 to i64*
  %160 = load i64, i64* %159, align 8
  %161 = getelementptr inbounds %"struct.base::internal::RacefulWorklist<base::internal::(anonymous namespace)::PCScanSnapshot::LargeScanArea>::Node", %"struct.base::internal::RacefulWorklist<base::internal::(anonymous namespace)::PCScanSnapshot::LargeScanArea>::Node"* %144, i64 0, i32 0, i32 1
  %162 = load i64, i64* %161, align 8
  %163 = load %"class.base::internal::WriteProtector"*, %"class.base::internal::WriteProtector"** %65, align 8
  %164 = sub i64 4095, %157
  %165 = add i64 %164, %160
  %166 = and i64 %165, -4096
  %167 = bitcast %"class.base::internal::WriteProtector"* %163 to void (%"class.base::internal::WriteProtector"*, i64, i64)***
  %168 = load void (%"class.base::internal::WriteProtector"*, i64, i64)**, void (%"class.base::internal::WriteProtector"*, i64, i64)*** %167, align 8
  %169 = getelementptr inbounds void (%"class.base::internal::WriteProtector"*, i64, i64)*, void (%"class.base::internal::WriteProtector"*, i64, i64)** %168, i64 2
  %170 = load void (%"class.base::internal::WriteProtector"*, i64, i64)*, void (%"class.base::internal::WriteProtector"*, i64, i64)** %169, align 8
  call void %170(%"class.base::internal::WriteProtector"* %163, i64 %157, i64 %166) #17
  %171 = load i64, i64* %66, align 8
  %172 = and i64 %157, -2097152
  %173 = inttoptr i64 %172 to i8*
  %174 = and i64 %171, 1
  %175 = icmp eq i64 %174, 0
  %176 = select i1 %175, i64 32768, i64 16384
  %177 = getelementptr inbounds i8, i8* %173, i64 %176
  %178 = bitcast i8* %177 to %"class.base::internal::ObjectBitmap"*
  %179 = inttoptr i64 %157 to i64*
  %180 = inttoptr i64 %160 to i64*
  %181 = icmp ugt i64* %180, %179
  br i1 %181, label %182, label %205

182:                                              ; preds = %155
  %183 = lshr i64 %162, 3
  br label %184

184:                                              ; preds = %202, %182
  %185 = phi i64* [ %179, %182 ], [ %203, %202 ]
  %186 = ptrtoint i64* %185 to i64
  %187 = lshr i64 %186, 4
  %188 = lshr i64 %186, 10
  %189 = and i64 %188, 2047
  %190 = and i64 %187, 63
  %191 = getelementptr inbounds %"class.base::internal::ObjectBitmap", %"class.base::internal::ObjectBitmap"* %178, i64 0, i32 0, i32 0, i64 %189
  %192 = load atomic i64, i64* %191 monotonic, align 8
  %193 = shl i64 1, %190
  %194 = and i64 %193, %192
  %195 = icmp eq i64 %194, 0
  br i1 %195, label %196, label %202

196:                                              ; preds = %184
  %197 = getelementptr inbounds i64, i64* %185, i64 %183
  %198 = load i8, i8* %9, align 8
  switch i8 %198, label %201 [
    i8 2, label %199
    i8 1, label %200
  ]

199:                                              ; preds = %196
  call void @_ZN4base8internal8ScanLoopINS0_14PCScanScanLoopEE7RunAVX2EPmS4_(%"class.base::internal::ScanLoop"* nonnull %67, i64* %185, i64* %197) #17
  br label %202

200:                                              ; preds = %196
  call void @_ZN4base8internal8ScanLoopINS0_14PCScanScanLoopEE7RunSSE4EPmS4_(%"class.base::internal::ScanLoop"* nonnull %67, i64* %185, i64* %197) #17
  br label %202

201:                                              ; preds = %196
  call void @_ZN4base8internal8ScanLoopINS0_14PCScanScanLoopEE15RunUnvectorizedEPmS4_(%"class.base::internal::ScanLoop"* nonnull %67, i64* %185, i64* %197) #17
  br label %202

202:                                              ; preds = %201, %200, %199, %184
  %203 = getelementptr inbounds i64, i64* %185, i64 %183
  %204 = icmp ult i64* %203, %180
  br i1 %204, label %184, label %205

205:                                              ; preds = %202, %155
  store atomic i8 1, i8* %145 monotonic, align 1
  br label %206

206:                                              ; preds = %205, %154, %143
  %207 = getelementptr inbounds %"struct.base::internal::RacefulWorklist<base::internal::(anonymous namespace)::PCScanSnapshot::LargeScanArea>::Node", %"struct.base::internal::RacefulWorklist<base::internal::(anonymous namespace)::PCScanSnapshot::LargeScanArea>::Node"* %144, i64 1
  store %"struct.base::internal::RacefulWorklist<base::internal::(anonymous namespace)::PCScanSnapshot::LargeScanArea>::Node"* %207, %"struct.base::internal::RacefulWorklist<base::internal::(anonymous namespace)::PCScanSnapshot::LargeScanArea>::Node"** %60, align 8
  %208 = icmp eq %"struct.base::internal::RacefulWorklist<base::internal::(anonymous namespace)::PCScanSnapshot::LargeScanArea>::Node"* %207, %42
  br i1 %208, label %135, label %143

209:                                              ; preds = %270, %135
  store atomic i8 1, i8* %35 release, align 1
  br label %273

210:                                              ; preds = %139, %270
  %211 = phi %"class.std::__1::__wrap_iter.205"* [ %271, %270 ], [ %136, %139 ]
  %212 = getelementptr inbounds %"class.std::__1::__wrap_iter.205", %"class.std::__1::__wrap_iter.205"* %211, i64 0, i32 0
  %213 = load %"struct.base::internal::RacefulWorklist<base::internal::(anonymous namespace)::PCScanSnapshot::LargeScanArea>::Node"*, %"struct.base::internal::RacefulWorklist<base::internal::(anonymous namespace)::PCScanSnapshot::LargeScanArea>::Node"** %212, align 8
  %214 = getelementptr inbounds %"struct.base::internal::RacefulWorklist<base::internal::(anonymous namespace)::PCScanSnapshot::LargeScanArea>::Node", %"struct.base::internal::RacefulWorklist<base::internal::(anonymous namespace)::PCScanSnapshot::LargeScanArea>::Node"* %213, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0
  %215 = load atomic i8, i8* %214 monotonic, align 1
  %216 = and i8 %215, 1
  %217 = icmp eq i8 %216, 0
  br i1 %217, label %218, label %270, !prof !7

218:                                              ; preds = %210
  %219 = getelementptr inbounds %"struct.base::internal::RacefulWorklist<base::internal::(anonymous namespace)::PCScanSnapshot::LargeScanArea>::Node", %"struct.base::internal::RacefulWorklist<base::internal::(anonymous namespace)::PCScanSnapshot::LargeScanArea>::Node"* %213, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0
  store atomic i8 1, i8* %219 monotonic, align 1
  %220 = bitcast %"struct.base::internal::RacefulWorklist<base::internal::(anonymous namespace)::PCScanSnapshot::LargeScanArea>::Node"* %213 to i64*
  %221 = load i64, i64* %220, align 8
  %222 = getelementptr inbounds %"struct.base::internal::RacefulWorklist<base::internal::(anonymous namespace)::PCScanSnapshot::LargeScanArea>::Node", %"struct.base::internal::RacefulWorklist<base::internal::(anonymous namespace)::PCScanSnapshot::LargeScanArea>::Node"* %213, i64 0, i32 0, i32 0, i32 1
  %223 = bitcast i64** %222 to i64*
  %224 = load i64, i64* %223, align 8
  %225 = getelementptr inbounds %"struct.base::internal::RacefulWorklist<base::internal::(anonymous namespace)::PCScanSnapshot::LargeScanArea>::Node", %"struct.base::internal::RacefulWorklist<base::internal::(anonymous namespace)::PCScanSnapshot::LargeScanArea>::Node"* %213, i64 0, i32 0, i32 1
  %226 = load i64, i64* %225, align 8
  %227 = load %"class.base::internal::WriteProtector"*, %"class.base::internal::WriteProtector"** %140, align 8
  %228 = sub i64 4095, %221
  %229 = add i64 %228, %224
  %230 = and i64 %229, -4096
  %231 = bitcast %"class.base::internal::WriteProtector"* %227 to void (%"class.base::internal::WriteProtector"*, i64, i64)***
  %232 = load void (%"class.base::internal::WriteProtector"*, i64, i64)**, void (%"class.base::internal::WriteProtector"*, i64, i64)*** %231, align 8
  %233 = getelementptr inbounds void (%"class.base::internal::WriteProtector"*, i64, i64)*, void (%"class.base::internal::WriteProtector"*, i64, i64)** %232, i64 2
  %234 = load void (%"class.base::internal::WriteProtector"*, i64, i64)*, void (%"class.base::internal::WriteProtector"*, i64, i64)** %233, align 8
  call void %234(%"class.base::internal::WriteProtector"* %227, i64 %221, i64 %230) #17
  %235 = load i64, i64* %141, align 8
  %236 = and i64 %221, -2097152
  %237 = inttoptr i64 %236 to i8*
  %238 = and i64 %235, 1
  %239 = icmp eq i64 %238, 0
  %240 = select i1 %239, i64 32768, i64 16384
  %241 = getelementptr inbounds i8, i8* %237, i64 %240
  %242 = bitcast i8* %241 to %"class.base::internal::ObjectBitmap"*
  %243 = inttoptr i64 %221 to i64*
  %244 = inttoptr i64 %224 to i64*
  %245 = icmp ugt i64* %244, %243
  br i1 %245, label %246, label %269

246:                                              ; preds = %218
  %247 = lshr i64 %226, 3
  br label %248

248:                                              ; preds = %266, %246
  %249 = phi i64* [ %243, %246 ], [ %267, %266 ]
  %250 = ptrtoint i64* %249 to i64
  %251 = lshr i64 %250, 4
  %252 = lshr i64 %250, 10
  %253 = and i64 %252, 2047
  %254 = and i64 %251, 63
  %255 = getelementptr inbounds %"class.base::internal::ObjectBitmap", %"class.base::internal::ObjectBitmap"* %242, i64 0, i32 0, i32 0, i64 %253
  %256 = load atomic i64, i64* %255 monotonic, align 8
  %257 = shl i64 1, %254
  %258 = and i64 %257, %256
  %259 = icmp eq i64 %258, 0
  br i1 %259, label %260, label %266

260:                                              ; preds = %248
  %261 = getelementptr inbounds i64, i64* %249, i64 %247
  %262 = load i8, i8* %9, align 8
  switch i8 %262, label %265 [
    i8 2, label %263
    i8 1, label %264
  ]

263:                                              ; preds = %260
  call void @_ZN4base8internal8ScanLoopINS0_14PCScanScanLoopEE7RunAVX2EPmS4_(%"class.base::internal::ScanLoop"* nonnull %142, i64* %249, i64* %261) #17
  br label %266

264:                                              ; preds = %260
  call void @_ZN4base8internal8ScanLoopINS0_14PCScanScanLoopEE7RunSSE4EPmS4_(%"class.base::internal::ScanLoop"* nonnull %142, i64* %249, i64* %261) #17
  br label %266

265:                                              ; preds = %260
  call void @_ZN4base8internal8ScanLoopINS0_14PCScanScanLoopEE15RunUnvectorizedEPmS4_(%"class.base::internal::ScanLoop"* nonnull %142, i64* %249, i64* %261) #17
  br label %266

266:                                              ; preds = %265, %264, %263, %248
  %267 = getelementptr inbounds i64, i64* %249, i64 %247
  %268 = icmp ult i64* %267, %244
  br i1 %268, label %248, label %269

269:                                              ; preds = %266, %218
  store atomic i8 1, i8* %214 monotonic, align 1
  br label %270

270:                                              ; preds = %269, %210
  %271 = getelementptr inbounds %"class.std::__1::__wrap_iter.205", %"class.std::__1::__wrap_iter.205"* %211, i64 1
  %272 = icmp eq %"class.std::__1::__wrap_iter.205"* %271, %137
  br i1 %272, label %209, label %210

273:                                              ; preds = %209, %29
  %274 = load %"class.std::__1::__wrap_iter.205"*, %"class.std::__1::__wrap_iter.205"** %33, align 8
  %275 = icmp eq %"class.std::__1::__wrap_iter.205"* %274, null
  br i1 %275, label %279, label %276

276:                                              ; preds = %273
  %277 = ptrtoint %"class.std::__1::__wrap_iter.205"* %274 to i64
  %278 = bitcast %"class.std::__1::__wrap_iter.205"** %34 to i64*
  store i64 %277, i64* %278, align 8
  call fastcc void @_ZNSt3__116allocator_traitsIN4base8internal17MetadataAllocatorINS_11__wrap_iterIPNS2_15RacefulWorklistINS2_12_GLOBAL__N_114PCScanSnapshot13LargeScanAreaEE4NodeEEEEEE10deallocateERSD_PSC_m(%"class.std::__1::__wrap_iter.205"* nonnull %274) #17
  br label %279

279:                                              ; preds = %273, %276
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %32) #17
  %280 = getelementptr inbounds %"class.base::internal::PCScanTask", %"class.base::internal::PCScanTask"* %0, i64 0, i32 2, i32 1
  %281 = getelementptr inbounds %"class.base::internal::PCScanTask", %"class.base::internal::PCScanTask"* %0, i64 0, i32 2, i32 1, i32 0, i32 0, i32 1
  %282 = bitcast %"struct.base::internal::RacefulWorklist<base::internal::(anonymous namespace)::PCScanSnapshot::ScanArea>::Node"** %281 to i64*
  %283 = load i64, i64* %282, align 8
  %284 = bitcast %"class.base::internal::RacefulWorklist"* %280 to i64*
  %285 = load i64, i64* %284, align 8
  %286 = sub i64 %283, %285
  %287 = icmp eq i64 %286, 0
  br i1 %287, label %291, label %288

288:                                              ; preds = %279
  %289 = sdiv exact i64 %286, 24
  %290 = call i64 @_ZN4base13RandGeneratorEm(i64 %289) #17
  br label %291

291:                                              ; preds = %279, %288
  %292 = phi i64 [ 0, %279 ], [ %290, %288 ]
  %293 = bitcast %"class.std::__1::vector.215"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %293) #17
  %294 = getelementptr inbounds %"class.std::__1::vector.215", %"class.std::__1::vector.215"* %5, i64 0, i32 0, i32 0
  %295 = getelementptr inbounds %"class.std::__1::vector.215", %"class.std::__1::vector.215"* %5, i64 0, i32 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %293, i8 0, i64 24, i1 false) #17
  %296 = getelementptr inbounds %"class.base::internal::PCScanTask", %"class.base::internal::PCScanTask"* %0, i64 0, i32 2, i32 1, i32 1, i32 0, i32 0, i32 0, i32 0
  %297 = load atomic i8, i8* %296 acquire, align 1
  %298 = and i8 %297, 1
  %299 = icmp eq i8 %298, 0
  br i1 %299, label %300, label %438

300:                                              ; preds = %291
  %301 = getelementptr inbounds %"class.base::internal::RacefulWorklist", %"class.base::internal::RacefulWorklist"* %280, i64 0, i32 0, i32 0, i32 0
  %302 = load %"struct.base::internal::RacefulWorklist<base::internal::(anonymous namespace)::PCScanSnapshot::ScanArea>::Node"*, %"struct.base::internal::RacefulWorklist<base::internal::(anonymous namespace)::PCScanSnapshot::ScanArea>::Node"** %301, align 8
  %303 = getelementptr inbounds %"struct.base::internal::RacefulWorklist<base::internal::(anonymous namespace)::PCScanSnapshot::ScanArea>::Node", %"struct.base::internal::RacefulWorklist<base::internal::(anonymous namespace)::PCScanSnapshot::ScanArea>::Node"* %302, i64 %292
  %304 = ptrtoint %"struct.base::internal::RacefulWorklist<base::internal::(anonymous namespace)::PCScanSnapshot::ScanArea>::Node"* %303 to i64
  %305 = bitcast %"class.std::__1::__wrap_iter.217"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %305) #17
  %306 = getelementptr inbounds %"class.std::__1::__wrap_iter.217", %"class.std::__1::__wrap_iter.217"* %6, i64 0, i32 0
  %307 = bitcast %"class.std::__1::__wrap_iter.217"* %6 to i64*
  store i64 %304, i64* %307, align 8
  %308 = load %"struct.base::internal::RacefulWorklist<base::internal::(anonymous namespace)::PCScanSnapshot::ScanArea>::Node"*, %"struct.base::internal::RacefulWorklist<base::internal::(anonymous namespace)::PCScanSnapshot::ScanArea>::Node"** %281, align 8
  %309 = icmp eq %"struct.base::internal::RacefulWorklist<base::internal::(anonymous namespace)::PCScanSnapshot::ScanArea>::Node"* %303, %308
  br i1 %309, label %310, label %312

310:                                              ; preds = %300
  %311 = ptrtoint %"struct.base::internal::RacefulWorklist<base::internal::(anonymous namespace)::PCScanSnapshot::ScanArea>::Node"* %302 to i64
  br label %317

312:                                              ; preds = %300
  %313 = getelementptr inbounds %"class.base::internal::PCScanInternal", %"class.base::internal::PCScanInternal"* %31, i64 0, i32 11, i32 0, i32 0, i32 0
  %314 = getelementptr inbounds %"class.base::internal::PCScanScanLoop", %"class.base::internal::PCScanScanLoop"* %8, i64 0, i32 0
  br label %327

315:                                              ; preds = %359
  %316 = load i64, i64* %284, align 8
  br label %317

317:                                              ; preds = %315, %310
  %318 = phi i64 [ %316, %315 ], [ %311, %310 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %305) #17
  %319 = bitcast %"class.std::__1::__wrap_iter.217"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %319) #17
  %320 = getelementptr inbounds %"class.std::__1::__wrap_iter.217", %"class.std::__1::__wrap_iter.217"* %7, i64 0, i32 0
  %321 = bitcast %"class.std::__1::__wrap_iter.217"* %7 to i64*
  store i64 %318, i64* %321, align 8
  %322 = inttoptr i64 %318 to %"struct.base::internal::RacefulWorklist<base::internal::(anonymous namespace)::PCScanSnapshot::ScanArea>::Node"*
  %323 = icmp eq %"struct.base::internal::RacefulWorklist<base::internal::(anonymous namespace)::PCScanSnapshot::ScanArea>::Node"* %303, %322
  br i1 %323, label %363, label %324

324:                                              ; preds = %317
  %325 = getelementptr inbounds %"class.base::internal::PCScanInternal", %"class.base::internal::PCScanInternal"* %31, i64 0, i32 11, i32 0, i32 0, i32 0
  %326 = getelementptr inbounds %"class.base::internal::PCScanScanLoop", %"class.base::internal::PCScanScanLoop"* %8, i64 0, i32 0
  br label %370

327:                                              ; preds = %359, %312
  %328 = phi %"struct.base::internal::RacefulWorklist<base::internal::(anonymous namespace)::PCScanSnapshot::ScanArea>::Node"* [ %303, %312 ], [ %360, %359 ]
  %329 = getelementptr inbounds %"struct.base::internal::RacefulWorklist<base::internal::(anonymous namespace)::PCScanSnapshot::ScanArea>::Node", %"struct.base::internal::RacefulWorklist<base::internal::(anonymous namespace)::PCScanSnapshot::ScanArea>::Node"* %328, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0
  %330 = load atomic i8, i8* %329 monotonic, align 1
  %331 = and i8 %330, 1
  %332 = icmp eq i8 %331, 0
  br i1 %332, label %333, label %359

333:                                              ; preds = %327
  %334 = getelementptr inbounds %"struct.base::internal::RacefulWorklist<base::internal::(anonymous namespace)::PCScanSnapshot::ScanArea>::Node", %"struct.base::internal::RacefulWorklist<base::internal::(anonymous namespace)::PCScanSnapshot::ScanArea>::Node"* %328, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %335 = load atomic i8, i8* %334 monotonic, align 1
  %336 = and i8 %335, 1
  %337 = icmp eq i8 %336, 0
  br i1 %337, label %339, label %338

338:                                              ; preds = %333
  call fastcc void @_ZNSt3__16vectorINS_11__wrap_iterIPN4base8internal15RacefulWorklistINS3_12_GLOBAL__N_114PCScanSnapshot8ScanAreaEE4NodeEEENS3_17MetadataAllocatorISB_EEE9push_backERKSB_(%"class.std::__1::vector.215"* nonnull %5, %"class.std::__1::__wrap_iter.217"* nonnull dereferenceable(8) %6) #17
  br label %359

339:                                              ; preds = %333
  store atomic i8 1, i8* %334 monotonic, align 1
  %340 = getelementptr inbounds %"struct.base::internal::RacefulWorklist<base::internal::(anonymous namespace)::PCScanSnapshot::ScanArea>::Node", %"struct.base::internal::RacefulWorklist<base::internal::(anonymous namespace)::PCScanSnapshot::ScanArea>::Node"* %328, i64 0, i32 0, i32 0
  %341 = load i64*, i64** %340, align 8
  %342 = getelementptr inbounds %"struct.base::internal::RacefulWorklist<base::internal::(anonymous namespace)::PCScanSnapshot::ScanArea>::Node", %"struct.base::internal::RacefulWorklist<base::internal::(anonymous namespace)::PCScanSnapshot::ScanArea>::Node"* %328, i64 0, i32 0, i32 1
  %343 = load i64*, i64** %342, align 8
  %344 = ptrtoint i64* %341 to i64
  %345 = ptrtoint i64* %343 to i64
  %346 = load %"class.base::internal::WriteProtector"*, %"class.base::internal::WriteProtector"** %313, align 8
  %347 = sub i64 4095, %344
  %348 = add i64 %347, %345
  %349 = and i64 %348, -4096
  %350 = bitcast %"class.base::internal::WriteProtector"* %346 to void (%"class.base::internal::WriteProtector"*, i64, i64)***
  %351 = load void (%"class.base::internal::WriteProtector"*, i64, i64)**, void (%"class.base::internal::WriteProtector"*, i64, i64)*** %350, align 8
  %352 = getelementptr inbounds void (%"class.base::internal::WriteProtector"*, i64, i64)*, void (%"class.base::internal::WriteProtector"*, i64, i64)** %351, i64 2
  %353 = load void (%"class.base::internal::WriteProtector"*, i64, i64)*, void (%"class.base::internal::WriteProtector"*, i64, i64)** %352, align 8
  call void %353(%"class.base::internal::WriteProtector"* %346, i64 %344, i64 %349) #17
  %354 = load i8, i8* %9, align 8
  switch i8 %354, label %357 [
    i8 2, label %355
    i8 1, label %356
  ]

355:                                              ; preds = %339
  call void @_ZN4base8internal8ScanLoopINS0_14PCScanScanLoopEE7RunAVX2EPmS4_(%"class.base::internal::ScanLoop"* nonnull %314, i64* %341, i64* %343) #17
  br label %358

356:                                              ; preds = %339
  call void @_ZN4base8internal8ScanLoopINS0_14PCScanScanLoopEE7RunSSE4EPmS4_(%"class.base::internal::ScanLoop"* nonnull %314, i64* %341, i64* %343) #17
  br label %358

357:                                              ; preds = %339
  call void @_ZN4base8internal8ScanLoopINS0_14PCScanScanLoopEE15RunUnvectorizedEPmS4_(%"class.base::internal::ScanLoop"* nonnull %314, i64* %341, i64* %343) #17
  br label %358

358:                                              ; preds = %357, %356, %355
  store atomic i8 1, i8* %329 monotonic, align 1
  br label %359

359:                                              ; preds = %358, %338, %327
  %360 = getelementptr inbounds %"struct.base::internal::RacefulWorklist<base::internal::(anonymous namespace)::PCScanSnapshot::ScanArea>::Node", %"struct.base::internal::RacefulWorklist<base::internal::(anonymous namespace)::PCScanSnapshot::ScanArea>::Node"* %328, i64 1
  store %"struct.base::internal::RacefulWorklist<base::internal::(anonymous namespace)::PCScanSnapshot::ScanArea>::Node"* %360, %"struct.base::internal::RacefulWorklist<base::internal::(anonymous namespace)::PCScanSnapshot::ScanArea>::Node"** %306, align 8
  %361 = load %"struct.base::internal::RacefulWorklist<base::internal::(anonymous namespace)::PCScanSnapshot::ScanArea>::Node"*, %"struct.base::internal::RacefulWorklist<base::internal::(anonymous namespace)::PCScanSnapshot::ScanArea>::Node"** %281, align 8
  %362 = icmp eq %"struct.base::internal::RacefulWorklist<base::internal::(anonymous namespace)::PCScanSnapshot::ScanArea>::Node"* %360, %361
  br i1 %362, label %315, label %327

363:                                              ; preds = %402, %317
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %319) #17
  %364 = load %"class.std::__1::__wrap_iter.217"*, %"class.std::__1::__wrap_iter.217"** %294, align 8
  %365 = load %"class.std::__1::__wrap_iter.217"*, %"class.std::__1::__wrap_iter.217"** %295, align 8
  %366 = icmp eq %"class.std::__1::__wrap_iter.217"* %364, %365
  br i1 %366, label %405, label %367

367:                                              ; preds = %363
  %368 = getelementptr inbounds %"class.base::internal::PCScanInternal", %"class.base::internal::PCScanInternal"* %31, i64 0, i32 11, i32 0, i32 0, i32 0
  %369 = getelementptr inbounds %"class.base::internal::PCScanScanLoop", %"class.base::internal::PCScanScanLoop"* %8, i64 0, i32 0
  br label %406

370:                                              ; preds = %402, %324
  %371 = phi %"struct.base::internal::RacefulWorklist<base::internal::(anonymous namespace)::PCScanSnapshot::ScanArea>::Node"* [ %322, %324 ], [ %403, %402 ]
  %372 = getelementptr inbounds %"struct.base::internal::RacefulWorklist<base::internal::(anonymous namespace)::PCScanSnapshot::ScanArea>::Node", %"struct.base::internal::RacefulWorklist<base::internal::(anonymous namespace)::PCScanSnapshot::ScanArea>::Node"* %371, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0
  %373 = load atomic i8, i8* %372 monotonic, align 1
  %374 = and i8 %373, 1
  %375 = icmp eq i8 %374, 0
  br i1 %375, label %376, label %402

376:                                              ; preds = %370
  %377 = getelementptr inbounds %"struct.base::internal::RacefulWorklist<base::internal::(anonymous namespace)::PCScanSnapshot::ScanArea>::Node", %"struct.base::internal::RacefulWorklist<base::internal::(anonymous namespace)::PCScanSnapshot::ScanArea>::Node"* %371, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %378 = load atomic i8, i8* %377 monotonic, align 1
  %379 = and i8 %378, 1
  %380 = icmp eq i8 %379, 0
  br i1 %380, label %382, label %381

381:                                              ; preds = %376
  call fastcc void @_ZNSt3__16vectorINS_11__wrap_iterIPN4base8internal15RacefulWorklistINS3_12_GLOBAL__N_114PCScanSnapshot8ScanAreaEE4NodeEEENS3_17MetadataAllocatorISB_EEE9push_backERKSB_(%"class.std::__1::vector.215"* nonnull %5, %"class.std::__1::__wrap_iter.217"* nonnull dereferenceable(8) %7) #17
  br label %402

382:                                              ; preds = %376
  store atomic i8 1, i8* %377 monotonic, align 1
  %383 = getelementptr inbounds %"struct.base::internal::RacefulWorklist<base::internal::(anonymous namespace)::PCScanSnapshot::ScanArea>::Node", %"struct.base::internal::RacefulWorklist<base::internal::(anonymous namespace)::PCScanSnapshot::ScanArea>::Node"* %371, i64 0, i32 0, i32 0
  %384 = load i64*, i64** %383, align 8
  %385 = getelementptr inbounds %"struct.base::internal::RacefulWorklist<base::internal::(anonymous namespace)::PCScanSnapshot::ScanArea>::Node", %"struct.base::internal::RacefulWorklist<base::internal::(anonymous namespace)::PCScanSnapshot::ScanArea>::Node"* %371, i64 0, i32 0, i32 1
  %386 = load i64*, i64** %385, align 8
  %387 = ptrtoint i64* %384 to i64
  %388 = ptrtoint i64* %386 to i64
  %389 = load %"class.base::internal::WriteProtector"*, %"class.base::internal::WriteProtector"** %325, align 8
  %390 = sub i64 4095, %387
  %391 = add i64 %390, %388
  %392 = and i64 %391, -4096
  %393 = bitcast %"class.base::internal::WriteProtector"* %389 to void (%"class.base::internal::WriteProtector"*, i64, i64)***
  %394 = load void (%"class.base::internal::WriteProtector"*, i64, i64)**, void (%"class.base::internal::WriteProtector"*, i64, i64)*** %393, align 8
  %395 = getelementptr inbounds void (%"class.base::internal::WriteProtector"*, i64, i64)*, void (%"class.base::internal::WriteProtector"*, i64, i64)** %394, i64 2
  %396 = load void (%"class.base::internal::WriteProtector"*, i64, i64)*, void (%"class.base::internal::WriteProtector"*, i64, i64)** %395, align 8
  call void %396(%"class.base::internal::WriteProtector"* %389, i64 %387, i64 %392) #17
  %397 = load i8, i8* %9, align 8
  switch i8 %397, label %400 [
    i8 2, label %398
    i8 1, label %399
  ]

398:                                              ; preds = %382
  call void @_ZN4base8internal8ScanLoopINS0_14PCScanScanLoopEE7RunAVX2EPmS4_(%"class.base::internal::ScanLoop"* nonnull %326, i64* %384, i64* %386) #17
  br label %401

399:                                              ; preds = %382
  call void @_ZN4base8internal8ScanLoopINS0_14PCScanScanLoopEE7RunSSE4EPmS4_(%"class.base::internal::ScanLoop"* nonnull %326, i64* %384, i64* %386) #17
  br label %401

400:                                              ; preds = %382
  call void @_ZN4base8internal8ScanLoopINS0_14PCScanScanLoopEE15RunUnvectorizedEPmS4_(%"class.base::internal::ScanLoop"* nonnull %326, i64* %384, i64* %386) #17
  br label %401

401:                                              ; preds = %400, %399, %398
  store atomic i8 1, i8* %372 monotonic, align 1
  br label %402

402:                                              ; preds = %401, %381, %370
  %403 = getelementptr inbounds %"struct.base::internal::RacefulWorklist<base::internal::(anonymous namespace)::PCScanSnapshot::ScanArea>::Node", %"struct.base::internal::RacefulWorklist<base::internal::(anonymous namespace)::PCScanSnapshot::ScanArea>::Node"* %371, i64 1
  store %"struct.base::internal::RacefulWorklist<base::internal::(anonymous namespace)::PCScanSnapshot::ScanArea>::Node"* %403, %"struct.base::internal::RacefulWorklist<base::internal::(anonymous namespace)::PCScanSnapshot::ScanArea>::Node"** %320, align 8
  %404 = icmp eq %"struct.base::internal::RacefulWorklist<base::internal::(anonymous namespace)::PCScanSnapshot::ScanArea>::Node"* %403, %303
  br i1 %404, label %363, label %370

405:                                              ; preds = %435, %363
  store atomic i8 1, i8* %296 release, align 1
  br label %438

406:                                              ; preds = %435, %367
  %407 = phi %"class.std::__1::__wrap_iter.217"* [ %364, %367 ], [ %436, %435 ]
  %408 = getelementptr inbounds %"class.std::__1::__wrap_iter.217", %"class.std::__1::__wrap_iter.217"* %407, i64 0, i32 0
  %409 = load %"struct.base::internal::RacefulWorklist<base::internal::(anonymous namespace)::PCScanSnapshot::ScanArea>::Node"*, %"struct.base::internal::RacefulWorklist<base::internal::(anonymous namespace)::PCScanSnapshot::ScanArea>::Node"** %408, align 8
  %410 = getelementptr inbounds %"struct.base::internal::RacefulWorklist<base::internal::(anonymous namespace)::PCScanSnapshot::ScanArea>::Node", %"struct.base::internal::RacefulWorklist<base::internal::(anonymous namespace)::PCScanSnapshot::ScanArea>::Node"* %409, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0
  %411 = load atomic i8, i8* %410 monotonic, align 1
  %412 = and i8 %411, 1
  %413 = icmp eq i8 %412, 0
  br i1 %413, label %414, label %435, !prof !7

414:                                              ; preds = %406
  %415 = getelementptr inbounds %"struct.base::internal::RacefulWorklist<base::internal::(anonymous namespace)::PCScanSnapshot::ScanArea>::Node", %"struct.base::internal::RacefulWorklist<base::internal::(anonymous namespace)::PCScanSnapshot::ScanArea>::Node"* %409, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0
  store atomic i8 1, i8* %415 monotonic, align 1
  %416 = getelementptr inbounds %"struct.base::internal::RacefulWorklist<base::internal::(anonymous namespace)::PCScanSnapshot::ScanArea>::Node", %"struct.base::internal::RacefulWorklist<base::internal::(anonymous namespace)::PCScanSnapshot::ScanArea>::Node"* %409, i64 0, i32 0, i32 0
  %417 = load i64*, i64** %416, align 8
  %418 = getelementptr inbounds %"struct.base::internal::RacefulWorklist<base::internal::(anonymous namespace)::PCScanSnapshot::ScanArea>::Node", %"struct.base::internal::RacefulWorklist<base::internal::(anonymous namespace)::PCScanSnapshot::ScanArea>::Node"* %409, i64 0, i32 0, i32 1
  %419 = load i64*, i64** %418, align 8
  %420 = ptrtoint i64* %417 to i64
  %421 = ptrtoint i64* %419 to i64
  %422 = load %"class.base::internal::WriteProtector"*, %"class.base::internal::WriteProtector"** %368, align 8
  %423 = sub i64 4095, %420
  %424 = add i64 %423, %421
  %425 = and i64 %424, -4096
  %426 = bitcast %"class.base::internal::WriteProtector"* %422 to void (%"class.base::internal::WriteProtector"*, i64, i64)***
  %427 = load void (%"class.base::internal::WriteProtector"*, i64, i64)**, void (%"class.base::internal::WriteProtector"*, i64, i64)*** %426, align 8
  %428 = getelementptr inbounds void (%"class.base::internal::WriteProtector"*, i64, i64)*, void (%"class.base::internal::WriteProtector"*, i64, i64)** %427, i64 2
  %429 = load void (%"class.base::internal::WriteProtector"*, i64, i64)*, void (%"class.base::internal::WriteProtector"*, i64, i64)** %428, align 8
  call void %429(%"class.base::internal::WriteProtector"* %422, i64 %420, i64 %425) #17
  %430 = load i8, i8* %9, align 8
  switch i8 %430, label %433 [
    i8 2, label %431
    i8 1, label %432
  ]

431:                                              ; preds = %414
  call void @_ZN4base8internal8ScanLoopINS0_14PCScanScanLoopEE7RunAVX2EPmS4_(%"class.base::internal::ScanLoop"* nonnull %369, i64* %417, i64* %419) #17
  br label %434

432:                                              ; preds = %414
  call void @_ZN4base8internal8ScanLoopINS0_14PCScanScanLoopEE7RunSSE4EPmS4_(%"class.base::internal::ScanLoop"* nonnull %369, i64* %417, i64* %419) #17
  br label %434

433:                                              ; preds = %414
  call void @_ZN4base8internal8ScanLoopINS0_14PCScanScanLoopEE15RunUnvectorizedEPmS4_(%"class.base::internal::ScanLoop"* nonnull %369, i64* %417, i64* %419) #17
  br label %434

434:                                              ; preds = %433, %432, %431
  store atomic i8 1, i8* %410 monotonic, align 1
  br label %435

435:                                              ; preds = %434, %406
  %436 = getelementptr inbounds %"class.std::__1::__wrap_iter.217", %"class.std::__1::__wrap_iter.217"* %407, i64 1
  %437 = icmp eq %"class.std::__1::__wrap_iter.217"* %436, %365
  br i1 %437, label %405, label %406

438:                                              ; preds = %405, %291
  %439 = load %"class.std::__1::__wrap_iter.217"*, %"class.std::__1::__wrap_iter.217"** %294, align 8
  %440 = icmp eq %"class.std::__1::__wrap_iter.217"* %439, null
  br i1 %440, label %444, label %441

441:                                              ; preds = %438
  %442 = ptrtoint %"class.std::__1::__wrap_iter.217"* %439 to i64
  %443 = bitcast %"class.std::__1::__wrap_iter.217"** %295 to i64*
  store i64 %442, i64* %443, align 8
  call fastcc void @_ZNSt3__116allocator_traitsIN4base8internal17MetadataAllocatorINS_11__wrap_iterIPNS2_15RacefulWorklistINS2_12_GLOBAL__N_114PCScanSnapshot8ScanAreaEE4NodeEEEEEE10deallocateERSD_PSC_m(%"class.std::__1::__wrap_iter.217"* nonnull %439) #17
  br label %444

444:                                              ; preds = %438, %441
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %293) #17
  %445 = load i64, i64* %17, align 8
  %446 = getelementptr inbounds %"class.base::internal::PCScanTask", %"class.base::internal::PCScanTask"* %0, i64 0, i32 3, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %447 = atomicrmw add i64* %446, i64 %445 monotonic
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %9) #17
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4base8internal10PCScanTask15SweepQuarantineEv(%"class.base::internal::PCScanTask"*) local_unnamed_addr #3 align 2 {
  %2 = alloca %"struct.base::internal::DeferredUnmap", align 8
  %3 = getelementptr inbounds %"class.base::internal::PCScanTask", %"class.base::internal::PCScanTask"* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  %4 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %3, align 8
  %5 = getelementptr inbounds %"class.base::internal::PCScanTask", %"class.base::internal::PCScanTask"* %0, i64 0, i32 2, i32 0, i32 0, i32 1, i32 0, i32 0
  %6 = icmp eq %"class.std::__1::__tree_end_node"* %4, %5
  br i1 %6, label %12, label %7

7:                                                ; preds = %1
  %8 = getelementptr inbounds %"class.base::internal::PCScanTask", %"class.base::internal::PCScanTask"* %0, i64 0, i32 1
  %9 = bitcast %"struct.base::internal::DeferredUnmap"* %2 to i8*
  %10 = getelementptr inbounds %"struct.base::internal::DeferredUnmap", %"struct.base::internal::DeferredUnmap"* %2, i64 0, i32 0
  %11 = getelementptr inbounds %"struct.base::internal::DeferredUnmap", %"struct.base::internal::DeferredUnmap"* %2, i64 0, i32 1
  br label %20

12:                                               ; preds = %273, %1
  %13 = phi i64 [ 0, %1 ], [ %242, %273 ]
  %14 = getelementptr inbounds %"class.base::internal::PCScanTask", %"class.base::internal::PCScanTask"* %0, i64 0, i32 3, i32 3
  %15 = load i64, i64* %14, align 8
  %16 = add i64 %15, %13
  store i64 %16, i64* %14, align 8
  %17 = load i32, i32* @_ZN4base8internal18g_thread_cache_keyE, align 4
  %18 = call i8* @pthread_getspecific(i32 %17) #17
  %19 = icmp ugt i8* %18, inttoptr (i64 1 to i8*)
  br i1 %19, label %276, label %278

20:                                               ; preds = %7, %273
  %21 = phi %"class.std::__1::__tree_end_node"* [ %4, %7 ], [ %274, %273 ]
  %22 = phi i64 [ 0, %7 ], [ %242, %273 ]
  %23 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %21, i64 4
  %24 = bitcast %"class.std::__1::__tree_end_node"* %23 to i64*
  %25 = load i64, i64* %24, align 8
  %26 = load i64, i64* %8, align 8
  %27 = and i64 %25, -2097152
  %28 = inttoptr i64 %27 to i8*
  %29 = and i64 %26, 1
  %30 = icmp eq i64 %29, 0
  %31 = select i1 %30, i64 32768, i64 16384
  %32 = getelementptr inbounds i8, i8* %28, i64 %31
  %33 = ptrtoint i8* %32 to i64
  %34 = bitcast i8* %32 to %"class.base::internal::ObjectBitmap"*
  %35 = add i64 %25, 4096
  %36 = inttoptr i64 %35 to %"struct.base::PartitionRoot"**
  %37 = load %"struct.base::PartitionRoot"*, %"struct.base::PartitionRoot"** %36, align 8
  %38 = and i64 %33, -2097152
  %39 = getelementptr inbounds %"struct.base::PartitionRoot", %"struct.base::PartitionRoot"* %37, i64 0, i32 2
  %40 = getelementptr inbounds %"struct.base::PartitionRoot", %"struct.base::PartitionRoot"* %37, i64 0, i32 10, i64 0
  %41 = getelementptr inbounds %"struct.base::PartitionRoot", %"struct.base::PartitionRoot"* %37, i64 0, i32 11
  %42 = ptrtoint %"struct.base::internal::PartitionBucket"* %40 to i64
  %43 = getelementptr inbounds %"struct.base::PartitionRoot", %"struct.base::PartitionRoot"* %37, i64 0, i32 8
  %44 = getelementptr inbounds %"class.base::internal::MaybeSpinLock", %"class.base::internal::MaybeSpinLock"* %43, i64 0, i32 0
  %45 = getelementptr inbounds %"class.base::internal::MaybeSpinLock", %"class.base::internal::MaybeSpinLock"* %43, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  br label %46

46:                                               ; preds = %241, %20
  %47 = phi i64 [ %22, %20 ], [ %242, %241 ]
  %48 = phi i64 [ 0, %20 ], [ %243, %241 ]
  %49 = getelementptr inbounds %"class.base::internal::ObjectBitmap", %"class.base::internal::ObjectBitmap"* %34, i64 0, i32 0, i32 0, i64 %48
  %50 = load i64, i64* %49, align 8
  %51 = icmp eq i64 %50, 0
  br i1 %51, label %241, label %52

52:                                               ; preds = %46
  %53 = shl i64 %48, 6
  br label %54

54:                                               ; preds = %236, %52
  %55 = phi i64 [ %47, %52 ], [ %81, %236 ]
  %56 = phi i64 [ %50, %52 ], [ %239, %236 ]
  %57 = call i64 @llvm.cttz.i64(i64 %56, i1 true) #17, !range !4
  %58 = or i64 %57, %53
  %59 = shl i64 %58, 4
  %60 = add i64 %59, %38
  %61 = inttoptr i64 %60 to i8*
  %62 = and i64 %60, -2097152
  %63 = or i64 %62, 4096
  %64 = inttoptr i64 %63 to i8*
  %65 = lshr i64 %60, 9
  %66 = and i64 %65, 4064
  %67 = getelementptr inbounds i8, i8* %64, i64 %66
  %68 = bitcast i8* %67 to %"struct.base::internal::PartitionPage"*
  %69 = getelementptr inbounds i8, i8* %67, i64 30
  %70 = load i8, i8* %69, align 2
  %71 = zext i8 %70 to i64
  %72 = sub nsw i64 0, %71
  %73 = getelementptr inbounds %"struct.base::internal::PartitionPage", %"struct.base::internal::PartitionPage"* %68, i64 %72, i32 0
  %74 = bitcast %union.anon.123* %73 to %"struct.base::internal::SlotSpanMetadata"*
  %75 = getelementptr inbounds %"struct.base::internal::PartitionPage", %"struct.base::internal::PartitionPage"* %68, i64 %72, i32 0, i32 1, i64 8
  %76 = bitcast i8* %75 to %"struct.base::internal::PartitionBucket"**
  %77 = load %"struct.base::internal::PartitionBucket"*, %"struct.base::internal::PartitionBucket"** %76, align 1
  %78 = getelementptr inbounds %"struct.base::internal::PartitionBucket", %"struct.base::internal::PartitionBucket"* %77, i64 0, i32 3
  %79 = load i32, i32* %78, align 8
  %80 = zext i32 %79 to i64
  %81 = add i64 %55, %80
  %82 = load i8, i8* %39, align 2, !range !5
  %83 = icmp eq i8 %82, 0
  br i1 %83, label %146, label %84, !prof !7

84:                                               ; preds = %54
  %85 = icmp ule %"struct.base::internal::PartitionBucket"* %40, %77
  %86 = icmp uge %"struct.base::internal::PartitionBucket"* %41, %77
  %87 = and i1 %86, %85
  %88 = ptrtoint %"struct.base::internal::PartitionBucket"* %77 to i64
  br i1 %87, label %89, label %146, !prof !6

89:                                               ; preds = %84
  %90 = load i32, i32* @_ZN4base8internal18g_thread_cache_keyE, align 4
  %91 = call i8* @pthread_getspecific(i32 %90) #17
  %92 = bitcast i8* %91 to %"class.base::internal::ThreadCache"*
  %93 = icmp ugt i8* %91, inttoptr (i64 1 to i8*)
  br i1 %93, label %94, label %146, !prof !6

94:                                               ; preds = %89
  %95 = sub i64 %88, %42
  %96 = sdiv exact i64 %95, 40
  %97 = getelementptr inbounds i8, i8* %91, i64 1480
  %98 = bitcast i8* %97 to i64*
  %99 = load i64, i64* %98, align 8
  %100 = add i64 %99, 1
  store i64 %100, i64* %98, align 8
  %101 = load i16, i16* @_ZN4base8internal11ThreadCache28largest_active_bucket_index_E, align 2
  %102 = zext i16 %101 to i64
  %103 = icmp ugt i64 %96, %102
  br i1 %103, label %104, label %109, !prof !7

104:                                              ; preds = %94
  %105 = getelementptr inbounds i8, i8* %91, i64 1496
  %106 = bitcast i8* %105 to i64*
  %107 = load i64, i64* %106, align 8
  %108 = add i64 %107, 1
  store i64 %108, i64* %106, align 8
  br label %146

109:                                              ; preds = %94
  %110 = getelementptr inbounds %"class.base::internal::ThreadCache", %"class.base::internal::ThreadCache"* %92, i64 0, i32 0, i64 %96
  %111 = bitcast %"struct.base::internal::ThreadCache::Bucket"* %110 to i64*
  %112 = load i64, i64* %111, align 8
  %113 = call i64 @llvm.bswap.i64(i64 %112) #17
  %114 = inttoptr i64 %113 to %"struct.base::internal::EncodedPartitionFreelistEntry"*
  %115 = inttoptr i64 %60 to %"struct.base::internal::EncodedPartitionFreelistEntry"**
  store %"struct.base::internal::EncodedPartitionFreelistEntry"* %114, %"struct.base::internal::EncodedPartitionFreelistEntry"** %115, align 16
  %116 = xor i64 %113, -1
  %117 = getelementptr inbounds i8, i8* %61, i64 8
  %118 = bitcast i8* %117 to i64*
  store i64 %116, i64* %118, align 8
  %119 = bitcast %"struct.base::internal::ThreadCache::Bucket"* %110 to i8**
  store i8* %61, i8** %119, align 8
  %120 = getelementptr inbounds %"class.base::internal::ThreadCache", %"class.base::internal::ThreadCache"* %92, i64 0, i32 0, i64 %96, i32 1
  %121 = load i8, i8* %120, align 8
  %122 = add i8 %121, 1
  store i8 %122, i8* %120, align 8
  %123 = getelementptr inbounds %"class.base::internal::ThreadCache", %"class.base::internal::ThreadCache"* %92, i64 0, i32 0, i64 %96, i32 3
  %124 = load i16, i16* %123, align 2
  %125 = zext i16 %124 to i64
  %126 = getelementptr inbounds i8, i8* %91, i64 1424
  %127 = bitcast i8* %126 to i64*
  %128 = load i64, i64* %127, align 8
  %129 = add i64 %128, %125
  store i64 %129, i64* %127, align 8
  %130 = getelementptr inbounds i8, i8* %91, i64 1488
  %131 = bitcast i8* %130 to i64*
  %132 = load i64, i64* %131, align 8
  %133 = add i64 %132, 1
  store i64 %133, i64* %131, align 8
  %134 = getelementptr inbounds %"class.base::internal::ThreadCache", %"class.base::internal::ThreadCache"* %92, i64 0, i32 0, i64 %96, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %135 = load atomic i8, i8* %134 monotonic, align 1
  %136 = icmp ugt i8 %122, %135
  br i1 %136, label %137, label %140, !prof !7

137:                                              ; preds = %109
  %138 = lshr i8 %135, 1
  %139 = zext i8 %138 to i64
  call void @_ZN4base8internal11ThreadCache11ClearBucketERNS1_6BucketEm(%"class.base::internal::ThreadCache"* %92, %"struct.base::internal::ThreadCache::Bucket"* dereferenceable(16) %110, i64 %139) #17
  br label %140

140:                                              ; preds = %137, %109
  %141 = getelementptr inbounds i8, i8* %91, i64 1432
  %142 = load atomic i8, i8* %141 monotonic, align 1
  %143 = and i8 %142, 1
  %144 = icmp eq i8 %143, 0
  br i1 %144, label %207, label %145, !prof !6

145:                                              ; preds = %140
  call void @_ZN4base8internal11ThreadCache13PurgeInternalEv(%"class.base::internal::ThreadCache"* %92) #17
  br label %207

146:                                              ; preds = %104, %89, %84, %54
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %9) #17
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %9, i8 0, i64 16, i1 false) #17
  br label %147

147:                                              ; preds = %159, %146
  %148 = phi i32 [ 0, %146 ], [ %160, %159 ]
  %149 = phi i32 [ 1, %146 ], [ %163, %159 ]
  %150 = load atomic i32, i32* %45 monotonic, align 4
  %151 = icmp eq i32 %150, 0
  br i1 %151, label %152, label %155, !prof !9

152:                                              ; preds = %147
  %153 = cmpxchg weak i32* %45, i32 0, i32 1 acquire monotonic
  %154 = extractvalue { i32, i1 } %153, 1
  br i1 %154, label %170, label %155, !prof !6

155:                                              ; preds = %152, %147
  %156 = icmp sgt i32 %149, 0
  br i1 %156, label %165, label %159

157:                                              ; preds = %165
  %158 = add i32 %149, %148
  br label %159

159:                                              ; preds = %157, %155
  %160 = phi i32 [ %148, %155 ], [ %158, %157 ]
  %161 = shl i32 %149, 1
  %162 = icmp slt i32 %161, 64
  %163 = select i1 %162, i32 %161, i32 64
  %164 = icmp slt i32 %160, 1000
  br i1 %164, label %147, label %169

165:                                              ; preds = %155, %165
  %166 = phi i32 [ %167, %165 ], [ 0, %155 ]
  call void asm sideeffect "pause", "~{dirflag},~{fpsr},~{flags}"() #17, !srcloc !10
  %167 = add nuw nsw i32 %166, 1
  %168 = icmp eq i32 %167, %149
  br i1 %168, label %157, label %165

169:                                              ; preds = %159
  call void @_ZN4base8internal13SpinningMutex8LockSlowEv(%"class.base::internal::SpinningMutex"* %44) #17
  br label %170

170:                                              ; preds = %152, %169
  %171 = bitcast %union.anon.123* %73 to i8**
  %172 = load i8*, i8** %171, align 1
  %173 = icmp eq i8* %172, %61
  br i1 %173, label %176, label %174, !prof !7

174:                                              ; preds = %170
  %175 = ptrtoint i8* %172 to i64
  br label %179

176:                                              ; preds = %170
  call void @_ZN7logging8RawCheckEPKc(i8* getelementptr inbounds ([105 x i8], [105 x i8]* @.str.15, i64 0, i64 0)) #17
  %177 = getelementptr inbounds %union.anon.123, %union.anon.123* %73, i64 0, i32 0, i32 0
  %178 = load i64, i64* %177, align 1
  br label %179

179:                                              ; preds = %176, %174
  %180 = phi i64 [ %175, %174 ], [ %178, %176 ]
  %181 = call i64 @llvm.bswap.i64(i64 %180) #17
  %182 = inttoptr i64 %181 to %"struct.base::internal::EncodedPartitionFreelistEntry"*
  %183 = inttoptr i64 %60 to %"struct.base::internal::EncodedPartitionFreelistEntry"**
  store %"struct.base::internal::EncodedPartitionFreelistEntry"* %182, %"struct.base::internal::EncodedPartitionFreelistEntry"** %183, align 16
  %184 = xor i64 %181, -1
  %185 = getelementptr inbounds i8, i8* %61, i64 8
  %186 = bitcast i8* %185 to i64*
  store i64 %184, i64* %186, align 8
  store i8* %61, i8** %171, align 1
  %187 = getelementptr inbounds %"struct.base::internal::PartitionPage", %"struct.base::internal::PartitionPage"* %68, i64 %72, i32 0, i32 1, i64 16
  %188 = bitcast i8* %187 to i16*
  %189 = load i16, i16* %188, align 1
  %190 = add i16 %189, -1
  store i16 %190, i16* %188, align 1
  %191 = icmp slt i16 %190, 1
  br i1 %191, label %192, label %196, !prof !7

192:                                              ; preds = %179
  %193 = call { i8*, i64 } @_ZN4base8internal16SlotSpanMetadataILb1EE12FreeSlowPathEv(%"struct.base::internal::SlotSpanMetadata"* %74) #17
  %194 = extractvalue { i8*, i64 } %193, 0
  %195 = extractvalue { i8*, i64 } %193, 1
  br label %196

196:                                              ; preds = %192, %179
  %197 = phi i8* [ %194, %192 ], [ null, %179 ]
  %198 = phi i64 [ %195, %192 ], [ 0, %179 ]
  store i8* %197, i8** %10, align 8
  store i64 %198, i64* %11, align 8
  %199 = atomicrmw xchg i32* %45, i32 0 release
  %200 = icmp eq i32 %199, 2
  br i1 %200, label %201, label %202, !prof !7

201:                                              ; preds = %196
  call void @_ZN4base8internal13SpinningMutex9FutexWakeEv(%"class.base::internal::SpinningMutex"* %44) #17
  br label %202

202:                                              ; preds = %201, %196
  %203 = load i8*, i8** %10, align 8
  %204 = icmp eq i8* %203, null
  br i1 %204, label %206, label %205, !prof !6

205:                                              ; preds = %202
  call void @_ZN4base8internal13DeferredUnmap5UnmapEv(%"struct.base::internal::DeferredUnmap"* nonnull %2) #17
  br label %206

206:                                              ; preds = %205, %202
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %9) #17
  br label %207

207:                                              ; preds = %206, %145, %140
  %208 = and i64 %60, -8589934592
  %209 = inttoptr i64 %208 to %"class.base::internal::(anonymous namespace)::QuarantineCardTable"*
  %210 = getelementptr inbounds %"struct.base::internal::PartitionPage", %"struct.base::internal::PartitionPage"* %68, i64 %72, i32 0, i32 1, i64 21
  %211 = load i8, i8* %210, align 1, !range !5
  %212 = icmp eq i8 %211, 0
  br i1 %212, label %213, label %218, !prof !6

213:                                              ; preds = %207
  %214 = load %"struct.base::internal::PartitionBucket"*, %"struct.base::internal::PartitionBucket"** %76, align 1
  %215 = getelementptr inbounds %"struct.base::internal::PartitionBucket", %"struct.base::internal::PartitionBucket"* %214, i64 0, i32 3
  %216 = load i32, i32* %215, align 8
  %217 = zext i32 %216 to i64
  br label %222

218:                                              ; preds = %207
  %219 = bitcast %union.anon.123* %73 to %"struct.base::internal::PartitionPage"*
  %220 = getelementptr inbounds %"struct.base::internal::PartitionPage", %"struct.base::internal::PartitionPage"* %219, i64 1, i32 0, i32 0, i32 0
  %221 = load i64, i64* %220, align 1
  br label %222

222:                                              ; preds = %218, %213
  %223 = phi i64 [ %217, %213 ], [ %221, %218 ]
  %224 = lshr i64 %60, 12
  %225 = and i64 %224, 2097151
  %226 = add i64 %223, 4095
  %227 = lshr i64 %226, 12
  %228 = add nuw nsw i64 %227, %225
  %229 = icmp eq i64 %227, 0
  br i1 %229, label %236, label %230

230:                                              ; preds = %222
  %231 = getelementptr %"class.base::internal::(anonymous namespace)::QuarantineCardTable", %"class.base::internal::(anonymous namespace)::QuarantineCardTable"* %209, i64 0, i32 0, i32 0, i64 %225
  %232 = add nuw nsw i64 %225, 1
  %233 = icmp ugt i64 %228, %232
  %234 = select i1 %233, i64 %228, i64 %232
  %235 = sub nsw i64 %234, %225
  call void @llvm.memset.p0i8.i64(i8* align 1 %231, i8 0, i64 %235, i1 false) #17
  br label %236

236:                                              ; preds = %230, %222
  %237 = shl i64 1, %57
  %238 = xor i64 %237, -1
  %239 = and i64 %56, %238
  %240 = icmp eq i64 %239, 0
  br i1 %240, label %241, label %54

241:                                              ; preds = %236, %46
  %242 = phi i64 [ %47, %46 ], [ %81, %236 ]
  store i64 0, i64* %49, align 8
  %243 = add nuw nsw i64 %48, 1
  %244 = icmp eq i64 %243, 2048
  br i1 %244, label %245, label %46

245:                                              ; preds = %241
  %246 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %21, i64 1, i32 0
  %247 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %246, align 8
  %248 = icmp eq %"class.std::__1::__tree_node_base"* %247, null
  br i1 %248, label %249, label %257

249:                                              ; preds = %245
  %250 = bitcast %"class.std::__1::__tree_end_node"* %21 to %"class.std::__1::__tree_node_base"*
  %251 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %21, i64 2
  %252 = bitcast %"class.std::__1::__tree_end_node"* %251 to %"class.std::__1::__tree_end_node"**
  %253 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %252, align 8
  %254 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %253, i64 0, i32 0
  %255 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %254, align 8
  %256 = icmp eq %"class.std::__1::__tree_node_base"* %255, %250
  br i1 %256, label %273, label %264

257:                                              ; preds = %245, %257
  %258 = phi %"class.std::__1::__tree_node_base"* [ %260, %257 ], [ %247, %245 ]
  %259 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %258, i64 0, i32 0, i32 0
  %260 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %259, align 8
  %261 = icmp eq %"class.std::__1::__tree_node_base"* %260, null
  br i1 %261, label %262, label %257

262:                                              ; preds = %257
  %263 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %258, i64 0, i32 0
  br label %273

264:                                              ; preds = %249, %264
  %265 = phi %"class.std::__1::__tree_end_node"** [ %268, %264 ], [ %252, %249 ]
  %266 = bitcast %"class.std::__1::__tree_end_node"** %265 to %"class.std::__1::__tree_node_base"**
  %267 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %266, align 8
  %268 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %267, i64 0, i32 2
  %269 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %268, align 8
  %270 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %269, i64 0, i32 0
  %271 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %270, align 8
  %272 = icmp eq %"class.std::__1::__tree_node_base"* %271, %267
  br i1 %272, label %273, label %264

273:                                              ; preds = %264, %249, %262
  %274 = phi %"class.std::__1::__tree_end_node"* [ %263, %262 ], [ %253, %249 ], [ %269, %264 ]
  %275 = icmp eq %"class.std::__1::__tree_end_node"* %274, %5
  br i1 %275, label %12, label %20

276:                                              ; preds = %12
  %277 = bitcast i8* %18 to %"class.base::internal::ThreadCache"*
  call void @_ZN4base8internal11ThreadCache5PurgeEv(%"class.base::internal::ThreadCache"* %277) #17
  br label %278

278:                                              ; preds = %276, %12
  ret void
}

declare void @_ZN4base8internal11ThreadCache5PurgeEv(%"class.base::internal::ThreadCache"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4base8internal10PCScanTask13FinishScannerEv(%"class.base::internal::PCScanTask"*) local_unnamed_addr #3 align 2 {
  %2 = alloca %"class.logging::LogMessage", align 8
  %3 = getelementptr inbounds %"class.base::internal::PCScanTask", %"class.base::internal::PCScanTask"* %0, i64 0, i32 3
  tail call void @_ZNK4base8internal14StatsCollector20ReportTracesAndHistsEv(%"class.base::internal::StatsCollector"* %3) #17
  %4 = getelementptr inbounds %"class.base::internal::PCScanTask", %"class.base::internal::PCScanTask"* %0, i64 0, i32 3, i32 3
  %5 = load i64, i64* %4, align 8
  %6 = getelementptr inbounds %"class.base::internal::PCScanTask", %"class.base::internal::PCScanTask"* %0, i64 0, i32 8
  %7 = load %"class.base::internal::PCScan"*, %"class.base::internal::PCScan"** %6, align 8
  %8 = getelementptr inbounds %"class.base::internal::PCScan", %"class.base::internal::PCScan"* %7, i64 0, i32 0, i32 2
  %9 = load %"class.base::internal::PCScanSchedulingBackend"*, %"class.base::internal::PCScanSchedulingBackend"** %8, align 8
  %10 = getelementptr inbounds %"class.base::internal::PCScanSchedulingBackend", %"class.base::internal::PCScanSchedulingBackend"* %9, i64 0, i32 1
  %11 = load %"class.base::internal::PCScanScheduler"*, %"class.base::internal::PCScanScheduler"** %10, align 8
  %12 = getelementptr inbounds %"class.base::internal::PCScanScheduler", %"class.base::internal::PCScanScheduler"* %11, i64 0, i32 0, i32 3
  %13 = load i64, i64* %12, align 8
  %14 = getelementptr inbounds %"class.base::internal::PCScanTask", %"class.base::internal::PCScanTask"* %0, i64 0, i32 3, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %15 = load atomic i64, i64* %14 monotonic, align 8
  %16 = tail call i32 @_ZN7logging18GetVlogLevelHelperEPKcm(i8* getelementptr inbounds ([69 x i8], [69 x i8]* @.str.8, i64 0, i64 0), i64 69) #17
  %17 = icmp sgt i32 %16, 1
  br i1 %17, label %18, label %33

18:                                               ; preds = %1
  %19 = bitcast %"class.logging::LogMessage"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 304, i8* nonnull %19) #17
  call void @_ZN7logging10LogMessageC1EPKcii(%"class.logging::LogMessage"* nonnull %2, i8* getelementptr inbounds ([69 x i8], [69 x i8]* @.str.8, i64 0, i64 0), i32 173, i32 -2) #17
  %20 = getelementptr inbounds %"class.logging::LogMessage", %"class.logging::LogMessage"* %2, i64 0, i32 2
  %21 = bitcast %"class.std::__1::basic_ostringstream"* %20 to %"class.std::__1::basic_ostream"*
  %22 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %21, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.9, i64 0, i64 0), i64 17) #17
  %23 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEm(%"class.std::__1::basic_ostream"* %22, i64 %13) #17
  %24 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %23, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.10, i64 0, i64 0), i64 4) #17
  %25 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEm(%"class.std::__1::basic_ostream"* %24, i64 %15) #17
  %26 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %25, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.11, i64 0, i64 0), i64 15) #17
  %27 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEm(%"class.std::__1::basic_ostream"* %26, i64 %5) #17
  %28 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %27, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.12, i64 0, i64 0), i64 17) #17
  %29 = uitofp i64 %15 to double
  %30 = uitofp i64 %13 to double
  %31 = fdiv double %29, %30
  %32 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEd(%"class.std::__1::basic_ostream"* %28, double %31) #17
  call void @_ZN7logging10LogMessageD1Ev(%"class.logging::LogMessage"* nonnull %2) #17
  call void @llvm.lifetime.end.p0i8(i64 304, i8* nonnull %19) #17
  br label %33

33:                                               ; preds = %1, %18
  %34 = load %"class.base::internal::PCScan"*, %"class.base::internal::PCScan"** %6, align 8
  %35 = getelementptr inbounds %"class.base::internal::PCScan", %"class.base::internal::PCScan"* %34, i64 0, i32 0, i32 2
  %36 = load %"class.base::internal::PCScanSchedulingBackend"*, %"class.base::internal::PCScanSchedulingBackend"** %35, align 8
  %37 = load atomic i64, i64* %14 monotonic, align 8
  %38 = call i64 @_ZNK4base8internal14StatsCollector14GetOverallTimeEv(%"class.base::internal::StatsCollector"* %3) #17
  %39 = call dereferenceable(312) %"class.base::internal::PCScanInternal"* @_ZN4base8internal14PCScanInternal8InstanceEv()
  %40 = getelementptr inbounds %"class.base::internal::PCScanInternal", %"class.base::internal::PCScanInternal"* %39, i64 0, i32 2, i32 1
  %41 = load i64, i64* %40, align 8
  %42 = icmp eq i64 %41, 0
  br i1 %42, label %124, label %43

43:                                               ; preds = %33
  %44 = getelementptr inbounds %"class.base::internal::PCScanInternal", %"class.base::internal::PCScanInternal"* %39, i64 0, i32 2, i32 0, i32 0, i64 0
  %45 = shl nsw i64 %41, 3
  %46 = add i64 %45, -8
  %47 = lshr exact i64 %46, 3
  %48 = add nuw nsw i64 %47, 1
  %49 = and i64 %48, 7
  %50 = icmp ult i64 %46, 56
  br i1 %50, label %107, label %51

51:                                               ; preds = %43
  %52 = sub nsw i64 %48, %49
  br label %53

53:                                               ; preds = %53, %51
  %54 = phi i32 [ 0, %51 ], [ %103, %53 ]
  %55 = phi %"struct.base::PartitionRoot"** [ %44, %51 ], [ %104, %53 ]
  %56 = phi i64 [ %52, %51 ], [ %105, %53 ]
  %57 = load %"struct.base::PartitionRoot"*, %"struct.base::PartitionRoot"** %55, align 8
  %58 = getelementptr inbounds %"struct.base::PartitionRoot", %"struct.base::PartitionRoot"* %57, i64 0, i32 14, i32 0, i32 0, i32 0, i32 0, i32 0
  %59 = load atomic i64, i64* %58 monotonic, align 8
  %60 = trunc i64 %59 to i32
  %61 = add i32 %54, %60
  %62 = getelementptr inbounds %"struct.base::PartitionRoot"*, %"struct.base::PartitionRoot"** %55, i64 1
  %63 = load %"struct.base::PartitionRoot"*, %"struct.base::PartitionRoot"** %62, align 8
  %64 = getelementptr inbounds %"struct.base::PartitionRoot", %"struct.base::PartitionRoot"* %63, i64 0, i32 14, i32 0, i32 0, i32 0, i32 0, i32 0
  %65 = load atomic i64, i64* %64 monotonic, align 8
  %66 = trunc i64 %65 to i32
  %67 = add i32 %61, %66
  %68 = getelementptr inbounds %"struct.base::PartitionRoot"*, %"struct.base::PartitionRoot"** %55, i64 2
  %69 = load %"struct.base::PartitionRoot"*, %"struct.base::PartitionRoot"** %68, align 8
  %70 = getelementptr inbounds %"struct.base::PartitionRoot", %"struct.base::PartitionRoot"* %69, i64 0, i32 14, i32 0, i32 0, i32 0, i32 0, i32 0
  %71 = load atomic i64, i64* %70 monotonic, align 8
  %72 = trunc i64 %71 to i32
  %73 = add i32 %67, %72
  %74 = getelementptr inbounds %"struct.base::PartitionRoot"*, %"struct.base::PartitionRoot"** %55, i64 3
  %75 = load %"struct.base::PartitionRoot"*, %"struct.base::PartitionRoot"** %74, align 8
  %76 = getelementptr inbounds %"struct.base::PartitionRoot", %"struct.base::PartitionRoot"* %75, i64 0, i32 14, i32 0, i32 0, i32 0, i32 0, i32 0
  %77 = load atomic i64, i64* %76 monotonic, align 8
  %78 = trunc i64 %77 to i32
  %79 = add i32 %73, %78
  %80 = getelementptr inbounds %"struct.base::PartitionRoot"*, %"struct.base::PartitionRoot"** %55, i64 4
  %81 = load %"struct.base::PartitionRoot"*, %"struct.base::PartitionRoot"** %80, align 8
  %82 = getelementptr inbounds %"struct.base::PartitionRoot", %"struct.base::PartitionRoot"* %81, i64 0, i32 14, i32 0, i32 0, i32 0, i32 0, i32 0
  %83 = load atomic i64, i64* %82 monotonic, align 8
  %84 = trunc i64 %83 to i32
  %85 = add i32 %79, %84
  %86 = getelementptr inbounds %"struct.base::PartitionRoot"*, %"struct.base::PartitionRoot"** %55, i64 5
  %87 = load %"struct.base::PartitionRoot"*, %"struct.base::PartitionRoot"** %86, align 8
  %88 = getelementptr inbounds %"struct.base::PartitionRoot", %"struct.base::PartitionRoot"* %87, i64 0, i32 14, i32 0, i32 0, i32 0, i32 0, i32 0
  %89 = load atomic i64, i64* %88 monotonic, align 8
  %90 = trunc i64 %89 to i32
  %91 = add i32 %85, %90
  %92 = getelementptr inbounds %"struct.base::PartitionRoot"*, %"struct.base::PartitionRoot"** %55, i64 6
  %93 = load %"struct.base::PartitionRoot"*, %"struct.base::PartitionRoot"** %92, align 8
  %94 = getelementptr inbounds %"struct.base::PartitionRoot", %"struct.base::PartitionRoot"* %93, i64 0, i32 14, i32 0, i32 0, i32 0, i32 0, i32 0
  %95 = load atomic i64, i64* %94 monotonic, align 8
  %96 = trunc i64 %95 to i32
  %97 = add i32 %91, %96
  %98 = getelementptr inbounds %"struct.base::PartitionRoot"*, %"struct.base::PartitionRoot"** %55, i64 7
  %99 = load %"struct.base::PartitionRoot"*, %"struct.base::PartitionRoot"** %98, align 8
  %100 = getelementptr inbounds %"struct.base::PartitionRoot", %"struct.base::PartitionRoot"* %99, i64 0, i32 14, i32 0, i32 0, i32 0, i32 0, i32 0
  %101 = load atomic i64, i64* %100 monotonic, align 8
  %102 = trunc i64 %101 to i32
  %103 = add i32 %97, %102
  %104 = getelementptr inbounds %"struct.base::PartitionRoot"*, %"struct.base::PartitionRoot"** %55, i64 8
  %105 = add i64 %56, -8
  %106 = icmp eq i64 %105, 0
  br i1 %106, label %107, label %53

107:                                              ; preds = %53, %43
  %108 = phi i32 [ undef, %43 ], [ %103, %53 ]
  %109 = phi i32 [ 0, %43 ], [ %103, %53 ]
  %110 = phi %"struct.base::PartitionRoot"** [ %44, %43 ], [ %104, %53 ]
  %111 = icmp eq i64 %49, 0
  br i1 %111, label %124, label %112

112:                                              ; preds = %107, %112
  %113 = phi i32 [ %120, %112 ], [ %109, %107 ]
  %114 = phi %"struct.base::PartitionRoot"** [ %121, %112 ], [ %110, %107 ]
  %115 = phi i64 [ %122, %112 ], [ %49, %107 ]
  %116 = load %"struct.base::PartitionRoot"*, %"struct.base::PartitionRoot"** %114, align 8
  %117 = getelementptr inbounds %"struct.base::PartitionRoot", %"struct.base::PartitionRoot"* %116, i64 0, i32 14, i32 0, i32 0, i32 0, i32 0, i32 0
  %118 = load atomic i64, i64* %117 monotonic, align 8
  %119 = trunc i64 %118 to i32
  %120 = add i32 %113, %119
  %121 = getelementptr inbounds %"struct.base::PartitionRoot"*, %"struct.base::PartitionRoot"** %114, i64 1
  %122 = add i64 %115, -1
  %123 = icmp eq i64 %122, 0
  br i1 %123, label %124, label %112, !llvm.loop !11

124:                                              ; preds = %107, %112, %33
  %125 = phi i32 [ 0, %33 ], [ %108, %107 ], [ %120, %112 ]
  %126 = getelementptr inbounds %"class.base::internal::PCScanInternal", %"class.base::internal::PCScanInternal"* %39, i64 0, i32 3, i32 1
  %127 = load i64, i64* %126, align 8
  %128 = icmp eq i64 %127, 0
  br i1 %128, label %210, label %129

129:                                              ; preds = %124
  %130 = getelementptr inbounds %"class.base::internal::PCScanInternal", %"class.base::internal::PCScanInternal"* %39, i64 0, i32 3, i32 0, i32 0, i64 0
  %131 = shl nsw i64 %127, 3
  %132 = add i64 %131, -8
  %133 = lshr exact i64 %132, 3
  %134 = add nuw nsw i64 %133, 1
  %135 = and i64 %134, 7
  %136 = icmp ult i64 %132, 56
  br i1 %136, label %193, label %137

137:                                              ; preds = %129
  %138 = sub nsw i64 %134, %135
  br label %139

139:                                              ; preds = %139, %137
  %140 = phi i32 [ 0, %137 ], [ %189, %139 ]
  %141 = phi %"struct.base::PartitionRoot"** [ %130, %137 ], [ %190, %139 ]
  %142 = phi i64 [ %138, %137 ], [ %191, %139 ]
  %143 = load %"struct.base::PartitionRoot"*, %"struct.base::PartitionRoot"** %141, align 8
  %144 = getelementptr inbounds %"struct.base::PartitionRoot", %"struct.base::PartitionRoot"* %143, i64 0, i32 14, i32 0, i32 0, i32 0, i32 0, i32 0
  %145 = load atomic i64, i64* %144 monotonic, align 8
  %146 = trunc i64 %145 to i32
  %147 = add i32 %140, %146
  %148 = getelementptr inbounds %"struct.base::PartitionRoot"*, %"struct.base::PartitionRoot"** %141, i64 1
  %149 = load %"struct.base::PartitionRoot"*, %"struct.base::PartitionRoot"** %148, align 8
  %150 = getelementptr inbounds %"struct.base::PartitionRoot", %"struct.base::PartitionRoot"* %149, i64 0, i32 14, i32 0, i32 0, i32 0, i32 0, i32 0
  %151 = load atomic i64, i64* %150 monotonic, align 8
  %152 = trunc i64 %151 to i32
  %153 = add i32 %147, %152
  %154 = getelementptr inbounds %"struct.base::PartitionRoot"*, %"struct.base::PartitionRoot"** %141, i64 2
  %155 = load %"struct.base::PartitionRoot"*, %"struct.base::PartitionRoot"** %154, align 8
  %156 = getelementptr inbounds %"struct.base::PartitionRoot", %"struct.base::PartitionRoot"* %155, i64 0, i32 14, i32 0, i32 0, i32 0, i32 0, i32 0
  %157 = load atomic i64, i64* %156 monotonic, align 8
  %158 = trunc i64 %157 to i32
  %159 = add i32 %153, %158
  %160 = getelementptr inbounds %"struct.base::PartitionRoot"*, %"struct.base::PartitionRoot"** %141, i64 3
  %161 = load %"struct.base::PartitionRoot"*, %"struct.base::PartitionRoot"** %160, align 8
  %162 = getelementptr inbounds %"struct.base::PartitionRoot", %"struct.base::PartitionRoot"* %161, i64 0, i32 14, i32 0, i32 0, i32 0, i32 0, i32 0
  %163 = load atomic i64, i64* %162 monotonic, align 8
  %164 = trunc i64 %163 to i32
  %165 = add i32 %159, %164
  %166 = getelementptr inbounds %"struct.base::PartitionRoot"*, %"struct.base::PartitionRoot"** %141, i64 4
  %167 = load %"struct.base::PartitionRoot"*, %"struct.base::PartitionRoot"** %166, align 8
  %168 = getelementptr inbounds %"struct.base::PartitionRoot", %"struct.base::PartitionRoot"* %167, i64 0, i32 14, i32 0, i32 0, i32 0, i32 0, i32 0
  %169 = load atomic i64, i64* %168 monotonic, align 8
  %170 = trunc i64 %169 to i32
  %171 = add i32 %165, %170
  %172 = getelementptr inbounds %"struct.base::PartitionRoot"*, %"struct.base::PartitionRoot"** %141, i64 5
  %173 = load %"struct.base::PartitionRoot"*, %"struct.base::PartitionRoot"** %172, align 8
  %174 = getelementptr inbounds %"struct.base::PartitionRoot", %"struct.base::PartitionRoot"* %173, i64 0, i32 14, i32 0, i32 0, i32 0, i32 0, i32 0
  %175 = load atomic i64, i64* %174 monotonic, align 8
  %176 = trunc i64 %175 to i32
  %177 = add i32 %171, %176
  %178 = getelementptr inbounds %"struct.base::PartitionRoot"*, %"struct.base::PartitionRoot"** %141, i64 6
  %179 = load %"struct.base::PartitionRoot"*, %"struct.base::PartitionRoot"** %178, align 8
  %180 = getelementptr inbounds %"struct.base::PartitionRoot", %"struct.base::PartitionRoot"* %179, i64 0, i32 14, i32 0, i32 0, i32 0, i32 0, i32 0
  %181 = load atomic i64, i64* %180 monotonic, align 8
  %182 = trunc i64 %181 to i32
  %183 = add i32 %177, %182
  %184 = getelementptr inbounds %"struct.base::PartitionRoot"*, %"struct.base::PartitionRoot"** %141, i64 7
  %185 = load %"struct.base::PartitionRoot"*, %"struct.base::PartitionRoot"** %184, align 8
  %186 = getelementptr inbounds %"struct.base::PartitionRoot", %"struct.base::PartitionRoot"* %185, i64 0, i32 14, i32 0, i32 0, i32 0, i32 0, i32 0
  %187 = load atomic i64, i64* %186 monotonic, align 8
  %188 = trunc i64 %187 to i32
  %189 = add i32 %183, %188
  %190 = getelementptr inbounds %"struct.base::PartitionRoot"*, %"struct.base::PartitionRoot"** %141, i64 8
  %191 = add i64 %142, -8
  %192 = icmp eq i64 %191, 0
  br i1 %192, label %193, label %139

193:                                              ; preds = %139, %129
  %194 = phi i32 [ undef, %129 ], [ %189, %139 ]
  %195 = phi i32 [ 0, %129 ], [ %189, %139 ]
  %196 = phi %"struct.base::PartitionRoot"** [ %130, %129 ], [ %190, %139 ]
  %197 = icmp eq i64 %135, 0
  br i1 %197, label %210, label %198

198:                                              ; preds = %193, %198
  %199 = phi i32 [ %206, %198 ], [ %195, %193 ]
  %200 = phi %"struct.base::PartitionRoot"** [ %207, %198 ], [ %196, %193 ]
  %201 = phi i64 [ %208, %198 ], [ %135, %193 ]
  %202 = load %"struct.base::PartitionRoot"*, %"struct.base::PartitionRoot"** %200, align 8
  %203 = getelementptr inbounds %"struct.base::PartitionRoot", %"struct.base::PartitionRoot"* %202, i64 0, i32 14, i32 0, i32 0, i32 0, i32 0, i32 0
  %204 = load atomic i64, i64* %203 monotonic, align 8
  %205 = trunc i64 %204 to i32
  %206 = add i32 %199, %205
  %207 = getelementptr inbounds %"struct.base::PartitionRoot"*, %"struct.base::PartitionRoot"** %200, i64 1
  %208 = add i64 %201, -1
  %209 = icmp eq i64 %208, 0
  br i1 %209, label %210, label %198, !llvm.loop !13

210:                                              ; preds = %193, %198, %124
  %211 = phi i32 [ 0, %124 ], [ %194, %193 ], [ %206, %198 ]
  %212 = add i32 %211, %125
  %213 = zext i32 %212 to i64
  %214 = bitcast %"class.base::internal::PCScanSchedulingBackend"* %36 to void (%"class.base::internal::PCScanSchedulingBackend"*, i64, i64, i64)***
  %215 = load void (%"class.base::internal::PCScanSchedulingBackend"*, i64, i64, i64)**, void (%"class.base::internal::PCScanSchedulingBackend"*, i64, i64, i64)*** %214, align 8
  %216 = getelementptr inbounds void (%"class.base::internal::PCScanSchedulingBackend"*, i64, i64, i64)*, void (%"class.base::internal::PCScanSchedulingBackend"*, i64, i64, i64)** %215, i64 2
  %217 = load void (%"class.base::internal::PCScanSchedulingBackend"*, i64, i64, i64)*, void (%"class.base::internal::PCScanSchedulingBackend"*, i64, i64, i64)** %216, align 8
  call void %217(%"class.base::internal::PCScanSchedulingBackend"* %36, i64 %37, i64 %38, i64 %213) #17
  %218 = call dereferenceable(312) %"class.base::internal::PCScanInternal"* @_ZN4base8internal14PCScanInternal8InstanceEv()
  %219 = getelementptr inbounds %"class.base::internal::PCScanInternal", %"class.base::internal::PCScanInternal"* %218, i64 0, i32 1
  call void @_ZNSt3__15mutex4lockEv(%"class.std::__1::mutex"* %219) #17
  %220 = bitcast %"class.base::internal::PCScanInternal"* %218 to i64*
  %221 = getelementptr inbounds %"class.base::internal::PCScanInternal", %"class.base::internal::PCScanInternal"* %218, i64 0, i32 0, i32 0
  %222 = load %"class.base::internal::PCScanTask"*, %"class.base::internal::PCScanTask"** %221, align 8
  store i64 0, i64* %220, align 8
  %223 = icmp eq %"class.base::internal::PCScanTask"* %222, null
  br i1 %223, label %230, label %224

224:                                              ; preds = %210
  %225 = getelementptr inbounds %"class.base::internal::PCScanTask", %"class.base::internal::PCScanTask"* %222, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %226 = atomicrmw sub i32* %225, i32 1 acq_rel
  %227 = icmp eq i32 %226, 1
  br i1 %227, label %228, label %230

228:                                              ; preds = %224
  call void @_ZN4base8internal10PCScanTaskD2Ev(%"class.base::internal::PCScanTask"* nonnull %222) #17
  %229 = bitcast %"class.base::internal::PCScanTask"* %222 to i8*
  call void @_ZN4base8internal34AllocatedOnPCScanMetadataPartitiondlEPv(i8* nonnull %229) #17
  br label %230

230:                                              ; preds = %210, %224, %228
  call void @_ZNSt3__15mutex6unlockEv(%"class.std::__1::mutex"* %219) #17
  %231 = load %"class.base::internal::PCScan"*, %"class.base::internal::PCScan"** %6, align 8
  %232 = getelementptr inbounds %"class.base::internal::PCScan", %"class.base::internal::PCScan"* %231, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %233 = atomicrmw xchg i8* %232, i8 0 acq_rel
  %234 = icmp eq i8 %233, 3
  br i1 %234, label %236, label %235, !prof !6

235:                                              ; preds = %230
  call void @_ZN7logging8RawCheckEPKc(i8* getelementptr inbounds ([207 x i8], [207 x i8]* @.str, i64 0, i64 0)) #17
  br label %236

236:                                              ; preds = %230, %235
  ret void
}

declare void @_ZNK4base8internal14StatsCollector20ReportTracesAndHistsEv(%"class.base::internal::StatsCollector"*) local_unnamed_addr #2

declare i64 @_ZNK4base8internal14StatsCollector14GetOverallTimeEv(%"class.base::internal::StatsCollector"*) local_unnamed_addr #2

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden i64 @_ZNK4base8internal14PCScanInternal22CalculateTotalHeapSizeEv(%"class.base::internal::PCScanInternal"* readonly) local_unnamed_addr #5 align 2 {
  %2 = getelementptr inbounds %"class.base::internal::PCScanInternal", %"class.base::internal::PCScanInternal"* %0, i64 0, i32 2, i32 1
  %3 = load i64, i64* %2, align 8
  %4 = icmp eq i64 %3, 0
  br i1 %4, label %86, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.base::internal::PCScanInternal", %"class.base::internal::PCScanInternal"* %0, i64 0, i32 2, i32 0, i32 0, i64 0
  %7 = shl nsw i64 %3, 3
  %8 = add i64 %7, -8
  %9 = lshr exact i64 %8, 3
  %10 = add nuw nsw i64 %9, 1
  %11 = and i64 %10, 7
  %12 = icmp ult i64 %8, 56
  br i1 %12, label %69, label %13

13:                                               ; preds = %5
  %14 = sub nsw i64 %10, %11
  br label %15

15:                                               ; preds = %15, %13
  %16 = phi i32 [ 0, %13 ], [ %65, %15 ]
  %17 = phi %"struct.base::PartitionRoot"** [ %6, %13 ], [ %66, %15 ]
  %18 = phi i64 [ %14, %13 ], [ %67, %15 ]
  %19 = load %"struct.base::PartitionRoot"*, %"struct.base::PartitionRoot"** %17, align 8
  %20 = getelementptr inbounds %"struct.base::PartitionRoot", %"struct.base::PartitionRoot"* %19, i64 0, i32 14, i32 0, i32 0, i32 0, i32 0, i32 0
  %21 = load atomic i64, i64* %20 monotonic, align 8
  %22 = trunc i64 %21 to i32
  %23 = add i32 %16, %22
  %24 = getelementptr inbounds %"struct.base::PartitionRoot"*, %"struct.base::PartitionRoot"** %17, i64 1
  %25 = load %"struct.base::PartitionRoot"*, %"struct.base::PartitionRoot"** %24, align 8
  %26 = getelementptr inbounds %"struct.base::PartitionRoot", %"struct.base::PartitionRoot"* %25, i64 0, i32 14, i32 0, i32 0, i32 0, i32 0, i32 0
  %27 = load atomic i64, i64* %26 monotonic, align 8
  %28 = trunc i64 %27 to i32
  %29 = add i32 %23, %28
  %30 = getelementptr inbounds %"struct.base::PartitionRoot"*, %"struct.base::PartitionRoot"** %17, i64 2
  %31 = load %"struct.base::PartitionRoot"*, %"struct.base::PartitionRoot"** %30, align 8
  %32 = getelementptr inbounds %"struct.base::PartitionRoot", %"struct.base::PartitionRoot"* %31, i64 0, i32 14, i32 0, i32 0, i32 0, i32 0, i32 0
  %33 = load atomic i64, i64* %32 monotonic, align 8
  %34 = trunc i64 %33 to i32
  %35 = add i32 %29, %34
  %36 = getelementptr inbounds %"struct.base::PartitionRoot"*, %"struct.base::PartitionRoot"** %17, i64 3
  %37 = load %"struct.base::PartitionRoot"*, %"struct.base::PartitionRoot"** %36, align 8
  %38 = getelementptr inbounds %"struct.base::PartitionRoot", %"struct.base::PartitionRoot"* %37, i64 0, i32 14, i32 0, i32 0, i32 0, i32 0, i32 0
  %39 = load atomic i64, i64* %38 monotonic, align 8
  %40 = trunc i64 %39 to i32
  %41 = add i32 %35, %40
  %42 = getelementptr inbounds %"struct.base::PartitionRoot"*, %"struct.base::PartitionRoot"** %17, i64 4
  %43 = load %"struct.base::PartitionRoot"*, %"struct.base::PartitionRoot"** %42, align 8
  %44 = getelementptr inbounds %"struct.base::PartitionRoot", %"struct.base::PartitionRoot"* %43, i64 0, i32 14, i32 0, i32 0, i32 0, i32 0, i32 0
  %45 = load atomic i64, i64* %44 monotonic, align 8
  %46 = trunc i64 %45 to i32
  %47 = add i32 %41, %46
  %48 = getelementptr inbounds %"struct.base::PartitionRoot"*, %"struct.base::PartitionRoot"** %17, i64 5
  %49 = load %"struct.base::PartitionRoot"*, %"struct.base::PartitionRoot"** %48, align 8
  %50 = getelementptr inbounds %"struct.base::PartitionRoot", %"struct.base::PartitionRoot"* %49, i64 0, i32 14, i32 0, i32 0, i32 0, i32 0, i32 0
  %51 = load atomic i64, i64* %50 monotonic, align 8
  %52 = trunc i64 %51 to i32
  %53 = add i32 %47, %52
  %54 = getelementptr inbounds %"struct.base::PartitionRoot"*, %"struct.base::PartitionRoot"** %17, i64 6
  %55 = load %"struct.base::PartitionRoot"*, %"struct.base::PartitionRoot"** %54, align 8
  %56 = getelementptr inbounds %"struct.base::PartitionRoot", %"struct.base::PartitionRoot"* %55, i64 0, i32 14, i32 0, i32 0, i32 0, i32 0, i32 0
  %57 = load atomic i64, i64* %56 monotonic, align 8
  %58 = trunc i64 %57 to i32
  %59 = add i32 %53, %58
  %60 = getelementptr inbounds %"struct.base::PartitionRoot"*, %"struct.base::PartitionRoot"** %17, i64 7
  %61 = load %"struct.base::PartitionRoot"*, %"struct.base::PartitionRoot"** %60, align 8
  %62 = getelementptr inbounds %"struct.base::PartitionRoot", %"struct.base::PartitionRoot"* %61, i64 0, i32 14, i32 0, i32 0, i32 0, i32 0, i32 0
  %63 = load atomic i64, i64* %62 monotonic, align 8
  %64 = trunc i64 %63 to i32
  %65 = add i32 %59, %64
  %66 = getelementptr inbounds %"struct.base::PartitionRoot"*, %"struct.base::PartitionRoot"** %17, i64 8
  %67 = add i64 %18, -8
  %68 = icmp eq i64 %67, 0
  br i1 %68, label %69, label %15

69:                                               ; preds = %15, %5
  %70 = phi i32 [ undef, %5 ], [ %65, %15 ]
  %71 = phi i32 [ 0, %5 ], [ %65, %15 ]
  %72 = phi %"struct.base::PartitionRoot"** [ %6, %5 ], [ %66, %15 ]
  %73 = icmp eq i64 %11, 0
  br i1 %73, label %86, label %74

74:                                               ; preds = %69, %74
  %75 = phi i32 [ %82, %74 ], [ %71, %69 ]
  %76 = phi %"struct.base::PartitionRoot"** [ %83, %74 ], [ %72, %69 ]
  %77 = phi i64 [ %84, %74 ], [ %11, %69 ]
  %78 = load %"struct.base::PartitionRoot"*, %"struct.base::PartitionRoot"** %76, align 8
  %79 = getelementptr inbounds %"struct.base::PartitionRoot", %"struct.base::PartitionRoot"* %78, i64 0, i32 14, i32 0, i32 0, i32 0, i32 0, i32 0
  %80 = load atomic i64, i64* %79 monotonic, align 8
  %81 = trunc i64 %80 to i32
  %82 = add i32 %75, %81
  %83 = getelementptr inbounds %"struct.base::PartitionRoot"*, %"struct.base::PartitionRoot"** %76, i64 1
  %84 = add i64 %77, -1
  %85 = icmp eq i64 %84, 0
  br i1 %85, label %86, label %74, !llvm.loop !14

86:                                               ; preds = %69, %74, %1
  %87 = phi i32 [ 0, %1 ], [ %70, %69 ], [ %82, %74 ]
  %88 = getelementptr inbounds %"class.base::internal::PCScanInternal", %"class.base::internal::PCScanInternal"* %0, i64 0, i32 3, i32 1
  %89 = load i64, i64* %88, align 8
  %90 = icmp eq i64 %89, 0
  br i1 %90, label %172, label %91

91:                                               ; preds = %86
  %92 = getelementptr inbounds %"class.base::internal::PCScanInternal", %"class.base::internal::PCScanInternal"* %0, i64 0, i32 3, i32 0, i32 0, i64 0
  %93 = shl nsw i64 %89, 3
  %94 = add i64 %93, -8
  %95 = lshr exact i64 %94, 3
  %96 = add nuw nsw i64 %95, 1
  %97 = and i64 %96, 7
  %98 = icmp ult i64 %94, 56
  br i1 %98, label %155, label %99

99:                                               ; preds = %91
  %100 = sub nsw i64 %96, %97
  br label %101

101:                                              ; preds = %101, %99
  %102 = phi i32 [ 0, %99 ], [ %151, %101 ]
  %103 = phi %"struct.base::PartitionRoot"** [ %92, %99 ], [ %152, %101 ]
  %104 = phi i64 [ %100, %99 ], [ %153, %101 ]
  %105 = load %"struct.base::PartitionRoot"*, %"struct.base::PartitionRoot"** %103, align 8
  %106 = getelementptr inbounds %"struct.base::PartitionRoot", %"struct.base::PartitionRoot"* %105, i64 0, i32 14, i32 0, i32 0, i32 0, i32 0, i32 0
  %107 = load atomic i64, i64* %106 monotonic, align 8
  %108 = trunc i64 %107 to i32
  %109 = add i32 %102, %108
  %110 = getelementptr inbounds %"struct.base::PartitionRoot"*, %"struct.base::PartitionRoot"** %103, i64 1
  %111 = load %"struct.base::PartitionRoot"*, %"struct.base::PartitionRoot"** %110, align 8
  %112 = getelementptr inbounds %"struct.base::PartitionRoot", %"struct.base::PartitionRoot"* %111, i64 0, i32 14, i32 0, i32 0, i32 0, i32 0, i32 0
  %113 = load atomic i64, i64* %112 monotonic, align 8
  %114 = trunc i64 %113 to i32
  %115 = add i32 %109, %114
  %116 = getelementptr inbounds %"struct.base::PartitionRoot"*, %"struct.base::PartitionRoot"** %103, i64 2
  %117 = load %"struct.base::PartitionRoot"*, %"struct.base::PartitionRoot"** %116, align 8
  %118 = getelementptr inbounds %"struct.base::PartitionRoot", %"struct.base::PartitionRoot"* %117, i64 0, i32 14, i32 0, i32 0, i32 0, i32 0, i32 0
  %119 = load atomic i64, i64* %118 monotonic, align 8
  %120 = trunc i64 %119 to i32
  %121 = add i32 %115, %120
  %122 = getelementptr inbounds %"struct.base::PartitionRoot"*, %"struct.base::PartitionRoot"** %103, i64 3
  %123 = load %"struct.base::PartitionRoot"*, %"struct.base::PartitionRoot"** %122, align 8
  %124 = getelementptr inbounds %"struct.base::PartitionRoot", %"struct.base::PartitionRoot"* %123, i64 0, i32 14, i32 0, i32 0, i32 0, i32 0, i32 0
  %125 = load atomic i64, i64* %124 monotonic, align 8
  %126 = trunc i64 %125 to i32
  %127 = add i32 %121, %126
  %128 = getelementptr inbounds %"struct.base::PartitionRoot"*, %"struct.base::PartitionRoot"** %103, i64 4
  %129 = load %"struct.base::PartitionRoot"*, %"struct.base::PartitionRoot"** %128, align 8
  %130 = getelementptr inbounds %"struct.base::PartitionRoot", %"struct.base::PartitionRoot"* %129, i64 0, i32 14, i32 0, i32 0, i32 0, i32 0, i32 0
  %131 = load atomic i64, i64* %130 monotonic, align 8
  %132 = trunc i64 %131 to i32
  %133 = add i32 %127, %132
  %134 = getelementptr inbounds %"struct.base::PartitionRoot"*, %"struct.base::PartitionRoot"** %103, i64 5
  %135 = load %"struct.base::PartitionRoot"*, %"struct.base::PartitionRoot"** %134, align 8
  %136 = getelementptr inbounds %"struct.base::PartitionRoot", %"struct.base::PartitionRoot"* %135, i64 0, i32 14, i32 0, i32 0, i32 0, i32 0, i32 0
  %137 = load atomic i64, i64* %136 monotonic, align 8
  %138 = trunc i64 %137 to i32
  %139 = add i32 %133, %138
  %140 = getelementptr inbounds %"struct.base::PartitionRoot"*, %"struct.base::PartitionRoot"** %103, i64 6
  %141 = load %"struct.base::PartitionRoot"*, %"struct.base::PartitionRoot"** %140, align 8
  %142 = getelementptr inbounds %"struct.base::PartitionRoot", %"struct.base::PartitionRoot"* %141, i64 0, i32 14, i32 0, i32 0, i32 0, i32 0, i32 0
  %143 = load atomic i64, i64* %142 monotonic, align 8
  %144 = trunc i64 %143 to i32
  %145 = add i32 %139, %144
  %146 = getelementptr inbounds %"struct.base::PartitionRoot"*, %"struct.base::PartitionRoot"** %103, i64 7
  %147 = load %"struct.base::PartitionRoot"*, %"struct.base::PartitionRoot"** %146, align 8
  %148 = getelementptr inbounds %"struct.base::PartitionRoot", %"struct.base::PartitionRoot"* %147, i64 0, i32 14, i32 0, i32 0, i32 0, i32 0, i32 0
  %149 = load atomic i64, i64* %148 monotonic, align 8
  %150 = trunc i64 %149 to i32
  %151 = add i32 %145, %150
  %152 = getelementptr inbounds %"struct.base::PartitionRoot"*, %"struct.base::PartitionRoot"** %103, i64 8
  %153 = add i64 %104, -8
  %154 = icmp eq i64 %153, 0
  br i1 %154, label %155, label %101

155:                                              ; preds = %101, %91
  %156 = phi i32 [ undef, %91 ], [ %151, %101 ]
  %157 = phi i32 [ 0, %91 ], [ %151, %101 ]
  %158 = phi %"struct.base::PartitionRoot"** [ %92, %91 ], [ %152, %101 ]
  %159 = icmp eq i64 %97, 0
  br i1 %159, label %172, label %160

160:                                              ; preds = %155, %160
  %161 = phi i32 [ %168, %160 ], [ %157, %155 ]
  %162 = phi %"struct.base::PartitionRoot"** [ %169, %160 ], [ %158, %155 ]
  %163 = phi i64 [ %170, %160 ], [ %97, %155 ]
  %164 = load %"struct.base::PartitionRoot"*, %"struct.base::PartitionRoot"** %162, align 8
  %165 = getelementptr inbounds %"struct.base::PartitionRoot", %"struct.base::PartitionRoot"* %164, i64 0, i32 14, i32 0, i32 0, i32 0, i32 0, i32 0
  %166 = load atomic i64, i64* %165 monotonic, align 8
  %167 = trunc i64 %166 to i32
  %168 = add i32 %161, %167
  %169 = getelementptr inbounds %"struct.base::PartitionRoot"*, %"struct.base::PartitionRoot"** %162, i64 1
  %170 = add i64 %163, -1
  %171 = icmp eq i64 %170, 0
  br i1 %171, label %172, label %160, !llvm.loop !15

172:                                              ; preds = %155, %160, %86
  %173 = phi i32 [ 0, %86 ], [ %156, %155 ], [ %168, %160 ]
  %174 = add i32 %173, %87
  %175 = zext i32 %174 to i64
  ret i64 %175
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4base8internal14PCScanInternal22ResetCurrentPCScanTaskEv(%"class.base::internal::PCScanInternal"*) local_unnamed_addr #3 align 2 {
  %2 = getelementptr inbounds %"class.base::internal::PCScanInternal", %"class.base::internal::PCScanInternal"* %0, i64 0, i32 1
  tail call void @_ZNSt3__15mutex4lockEv(%"class.std::__1::mutex"* %2) #17
  %3 = bitcast %"class.base::internal::PCScanInternal"* %0 to i64*
  %4 = getelementptr inbounds %"class.base::internal::PCScanInternal", %"class.base::internal::PCScanInternal"* %0, i64 0, i32 0, i32 0
  %5 = load %"class.base::internal::PCScanTask"*, %"class.base::internal::PCScanTask"** %4, align 8
  store i64 0, i64* %3, align 8
  %6 = icmp eq %"class.base::internal::PCScanTask"* %5, null
  br i1 %6, label %13, label %7

7:                                                ; preds = %1
  %8 = getelementptr inbounds %"class.base::internal::PCScanTask", %"class.base::internal::PCScanTask"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %9 = atomicrmw sub i32* %8, i32 1 acq_rel
  %10 = icmp eq i32 %9, 1
  br i1 %10, label %11, label %13

11:                                               ; preds = %7
  tail call void @_ZN4base8internal10PCScanTaskD2Ev(%"class.base::internal::PCScanTask"* nonnull %5) #17
  %12 = bitcast %"class.base::internal::PCScanTask"* %5 to i8*
  tail call void @_ZN4base8internal34AllocatedOnPCScanMetadataPartitiondlEPv(i8* nonnull %12) #17
  br label %13

13:                                               ; preds = %1, %7, %11
  tail call void @_ZNSt3__15mutex6unlockEv(%"class.std::__1::mutex"* %2) #17
  ret void
}

declare void @_ZN7logging8RawCheckEPKc(i8*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4base8internal10PCScanTask14RunFromMutatorEv(%"class.base::internal::PCScanTask"*) local_unnamed_addr #3 align 2 {
  %2 = alloca %"class.std::__1::tuple.231", align 8
  %3 = alloca %"class.std::__1::tuple.234", align 1
  %4 = alloca i32, align 4
  %5 = alloca %"class.std::__1::tuple.194", align 8
  %6 = alloca %"class.std::__1::__call_once_param.197", align 8
  %7 = alloca %class.anon.63, align 8
  %8 = alloca %"class.std::__1::tuple.194", align 8
  %9 = alloca %"class.std::__1::__call_once_param.197", align 8
  %10 = alloca %class.anon.63, align 8
  %11 = alloca %"class.std::__1::tuple.231", align 8
  %12 = alloca %"class.std::__1::tuple.234", align 1
  %13 = alloca i32, align 4
  %14 = alloca %"class.std::__1::tuple.231", align 8
  %15 = alloca %"class.std::__1::tuple.234", align 1
  %16 = alloca i32, align 4
  %17 = alloca %"class.std::__1::tuple.231", align 8
  %18 = alloca %"class.std::__1::tuple.234", align 1
  %19 = alloca i32, align 4
  %20 = alloca %"class.base::internal::Stack", align 8
  %21 = alloca %"class.base::internal::PCScanTask::StackVisitor", align 8
  %22 = alloca %"class.std::__1::tuple.231", align 8
  %23 = alloca %"class.std::__1::tuple.234", align 1
  %24 = alloca i32, align 4
  %25 = alloca %"class.std::__1::tuple.231", align 8
  %26 = alloca %"class.std::__1::tuple.234", align 1
  %27 = alloca i32, align 4
  %28 = alloca %"class.std::__1::tuple.231", align 8
  %29 = alloca %"class.std::__1::tuple.234", align 1
  %30 = alloca i32, align 4
  %31 = alloca %"class.std::__1::tuple.129", align 8
  %32 = alloca %"class.std::__1::__call_once_param", align 8
  %33 = alloca i64, align 8
  %34 = alloca <2 x i64>, align 16
  %35 = alloca %"class.base::internal::(anonymous namespace)::PCScanSnapshot"*, align 8
  %36 = alloca %"class.std::__1::tuple.231", align 8
  %37 = alloca %"class.std::__1::tuple.234", align 1
  %38 = alloca i32, align 4
  %39 = getelementptr inbounds %"class.base::internal::PCScanTask", %"class.base::internal::PCScanTask"* %0, i64 0, i32 3, i32 0, i32 0
  tail call void @_ZNSt3__15mutex4lockEv(%"class.std::__1::mutex"* %39) #17
  %40 = bitcast i32* %38 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %40) #17
  %41 = tail call i32 @_ZN4base14PlatformThread9CurrentIdEv() #17
  store i32 %41, i32* %38, align 4
  %42 = tail call i64 @_ZN4base9TimeTicks3NowEv() #17
  %43 = getelementptr inbounds %"class.base::internal::PCScanTask", %"class.base::internal::PCScanTask"* %0, i64 0, i32 3, i32 0, i32 1, i32 0
  %44 = bitcast %"class.std::__1::tuple.231"* %36 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %44) #17
  %45 = getelementptr inbounds %"class.std::__1::tuple.231", %"class.std::__1::tuple.231"* %36, i64 0, i32 0, i32 0, i32 0
  store i32* %38, i32** %45, align 8
  %46 = getelementptr inbounds %"class.std::__1::tuple.234", %"class.std::__1::tuple.234"* %37, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %46) #17
  %47 = call { %"struct.std::__1::__hash_node_base"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeIiNS_5arrayIN4base8internal14StatsCollector18DeferredTraceEventELm4EEEEENS_22__unordered_map_hasherIiS8_NS_4hashIiEENS_8equal_toIvEELb1EEENS_21__unordered_map_equalIiS8_SD_SB_Lb1EEENS4_17MetadataAllocatorIS8_EEE25__emplace_unique_key_argsIiJRKNS_21piecewise_construct_tENS_5tupleIJRKiEEENSO_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS8_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table"* %43, i32* nonnull dereferenceable(4) %38, %"struct.std::__1::piecewise_construct_t"* nonnull dereferenceable(1) @_ZNSt3__1L19piecewise_constructE, %"class.std::__1::tuple.231"* nonnull dereferenceable(8) %36, %"class.std::__1::tuple.234"* nonnull dereferenceable(1) %37) #17
  %48 = extractvalue { %"struct.std::__1::__hash_node_base"*, i8 } %47, 0
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %46) #17
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %44) #17
  %49 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %48, i64 9
  %50 = bitcast %"struct.std::__1::__hash_node_base"* %49 to i64*
  store i64 %42, i64* %50, align 8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %40) #17
  call void @_ZNSt3__15mutex6unlockEv(%"class.std::__1::mutex"* %39) #17
  %51 = getelementptr inbounds %"class.base::internal::PCScanTask", %"class.base::internal::PCScanTask"* %0, i64 0, i32 6, i32 0, i32 0, i32 0, i32 0, i32 0
  %52 = atomicrmw add i64* %51, i64 1 monotonic
  %53 = getelementptr inbounds %"class.base::internal::PCScanTask", %"class.base::internal::PCScanTask"* %0, i64 0, i32 8
  %54 = load %"class.base::internal::PCScan"*, %"class.base::internal::PCScan"** %53, align 8
  %55 = getelementptr inbounds %"class.base::internal::PCScan", %"class.base::internal::PCScan"* %54, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %56 = load atomic i8, i8* %55 acquire, align 1
  %57 = icmp eq i8 %56, 2
  br i1 %57, label %58, label %171

58:                                               ; preds = %1
  %59 = getelementptr inbounds %"class.base::internal::PCScanTask", %"class.base::internal::PCScanTask"* %0, i64 0, i32 2
  %60 = getelementptr inbounds %"class.base::internal::PCScanTask", %"class.base::internal::PCScanTask"* %0, i64 0, i32 1
  %61 = load i64, i64* %60, align 8
  %62 = bitcast i64* %33 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %62)
  store i64 %61, i64* %33, align 8
  %63 = bitcast <2 x i64>* %34 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %63) #17
  store <2 x i64> <i64 ptrtoint (void (%"class.base::internal::(anonymous namespace)::PCScanSnapshot"*, i64)* @_ZN4base8internal12_GLOBAL__N_114PCScanSnapshot4TakeEm to i64), i64 0>, <2 x i64>* %34, align 16
  %64 = bitcast %"class.base::internal::(anonymous namespace)::PCScanSnapshot"** %35 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %64) #17
  store %"class.base::internal::(anonymous namespace)::PCScanSnapshot"* %59, %"class.base::internal::(anonymous namespace)::PCScanSnapshot"** %35, align 8
  %65 = getelementptr inbounds %"class.base::internal::PCScanTask", %"class.base::internal::PCScanTask"* %0, i64 0, i32 2, i32 4, i32 0
  %66 = load atomic i64, i64* %65 acquire, align 8
  %67 = icmp eq i64 %66, -1
  br i1 %67, label %75, label %68

68:                                               ; preds = %58
  %69 = bitcast %"class.std::__1::tuple.129"* %31 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %69) #17
  %70 = getelementptr inbounds %"class.std::__1::tuple.129", %"class.std::__1::tuple.129"* %31, i64 0, i32 0, i32 1, i32 0
  %71 = getelementptr inbounds %"class.std::__1::tuple.129", %"class.std::__1::tuple.129"* %31, i64 0, i32 0, i32 2, i32 0
  %72 = bitcast %"class.std::__1::tuple.129"* %31 to <2 x i64>**
  store <2 x i64>* %34, <2 x i64>** %72, align 8
  store %"class.base::internal::(anonymous namespace)::PCScanSnapshot"** %35, %"class.base::internal::(anonymous namespace)::PCScanSnapshot"*** %70, align 8
  store i64* %33, i64** %71, align 8
  %73 = bitcast %"class.std::__1::__call_once_param"* %32 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %73) #17
  %74 = getelementptr inbounds %"class.std::__1::__call_once_param", %"class.std::__1::__call_once_param"* %32, i64 0, i32 0
  store %"class.std::__1::tuple.129"* %31, %"class.std::__1::tuple.129"** %74, align 8
  call void @_ZNSt3__111__call_onceERVmPvPFvS2_E(i64* dereferenceable(8) %65, i8* nonnull %73, void (i8*)* nonnull @_ZNSt3__117__call_once_proxyINS_5tupleIJOMN4base8internal12_GLOBAL__N_114PCScanSnapshotEFvmEOPS5_RmEEEEEvPv) #17
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %73) #17
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %69) #17
  br label %75

75:                                               ; preds = %58, %68
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %64) #17
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %63) #17
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %62)
  call void @_ZNSt3__15mutex4lockEv(%"class.std::__1::mutex"* %39) #17
  %76 = bitcast i32* %30 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %76) #17
  %77 = call i32 @_ZN4base14PlatformThread9CurrentIdEv() #17
  store i32 %77, i32* %30, align 4
  %78 = call i64 @_ZN4base9TimeTicks3NowEv() #17
  %79 = bitcast %"class.std::__1::tuple.231"* %28 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %79) #17
  %80 = getelementptr inbounds %"class.std::__1::tuple.231", %"class.std::__1::tuple.231"* %28, i64 0, i32 0, i32 0, i32 0
  store i32* %30, i32** %80, align 8
  %81 = getelementptr inbounds %"class.std::__1::tuple.234", %"class.std::__1::tuple.234"* %29, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %81) #17
  %82 = call { %"struct.std::__1::__hash_node_base"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeIiNS_5arrayIN4base8internal14StatsCollector18DeferredTraceEventELm4EEEEENS_22__unordered_map_hasherIiS8_NS_4hashIiEENS_8equal_toIvEELb1EEENS_21__unordered_map_equalIiS8_SD_SB_Lb1EEENS4_17MetadataAllocatorIS8_EEE25__emplace_unique_key_argsIiJRKNS_21piecewise_construct_tENS_5tupleIJRKiEEENSO_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS8_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table"* %43, i32* nonnull dereferenceable(4) %30, %"struct.std::__1::piecewise_construct_t"* nonnull dereferenceable(1) @_ZNSt3__1L19piecewise_constructE, %"class.std::__1::tuple.231"* nonnull dereferenceable(8) %28, %"class.std::__1::tuple.234"* nonnull dereferenceable(1) %29) #17
  %83 = extractvalue { %"struct.std::__1::__hash_node_base"*, i8 } %82, 0
  %84 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %83, i64 3
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %81) #17
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %79) #17
  %85 = bitcast %"struct.std::__1::__hash_node_base"* %84 to i64*
  store i64 %78, i64* %85, align 8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %76) #17
  call void @_ZNSt3__15mutex6unlockEv(%"class.std::__1::mutex"* %39) #17
  call void @_ZN4base8internal10PCScanTask42ClearQuarantinedObjectsAndPrepareCardTableEv(%"class.base::internal::PCScanTask"* %0)
  call void @_ZNSt3__15mutex4lockEv(%"class.std::__1::mutex"* %39) #17
  %86 = bitcast i32* %27 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %86) #17
  %87 = call i32 @_ZN4base14PlatformThread9CurrentIdEv() #17
  store i32 %87, i32* %27, align 4
  %88 = call i64 @_ZN4base9TimeTicks3NowEv() #17
  %89 = bitcast %"class.std::__1::tuple.231"* %25 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %89) #17
  %90 = getelementptr inbounds %"class.std::__1::tuple.231", %"class.std::__1::tuple.231"* %25, i64 0, i32 0, i32 0, i32 0
  store i32* %27, i32** %90, align 8
  %91 = getelementptr inbounds %"class.std::__1::tuple.234", %"class.std::__1::tuple.234"* %26, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %91) #17
  %92 = call { %"struct.std::__1::__hash_node_base"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeIiNS_5arrayIN4base8internal14StatsCollector18DeferredTraceEventELm4EEEEENS_22__unordered_map_hasherIiS8_NS_4hashIiEENS_8equal_toIvEELb1EEENS_21__unordered_map_equalIiS8_SD_SB_Lb1EEENS4_17MetadataAllocatorIS8_EEE25__emplace_unique_key_argsIiJRKNS_21piecewise_construct_tENS_5tupleIJRKiEEENSO_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS8_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table"* %43, i32* nonnull dereferenceable(4) %27, %"struct.std::__1::piecewise_construct_t"* nonnull dereferenceable(1) @_ZNSt3__1L19piecewise_constructE, %"class.std::__1::tuple.231"* nonnull dereferenceable(8) %25, %"class.std::__1::tuple.234"* nonnull dereferenceable(1) %26) #17
  %93 = extractvalue { %"struct.std::__1::__hash_node_base"*, i8 } %92, 0
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %91) #17
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %89) #17
  %94 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %93, i64 4
  %95 = bitcast %"struct.std::__1::__hash_node_base"* %94 to i64*
  store i64 %88, i64* %95, align 8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %86) #17
  call void @_ZNSt3__15mutex6unlockEv(%"class.std::__1::mutex"* %39) #17
  call void @_ZNSt3__15mutex4lockEv(%"class.std::__1::mutex"* %39) #17
  %96 = bitcast i32* %24 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %96) #17
  %97 = call i32 @_ZN4base14PlatformThread9CurrentIdEv() #17
  store i32 %97, i32* %24, align 4
  %98 = call i64 @_ZN4base9TimeTicks3NowEv() #17
  %99 = bitcast %"class.std::__1::tuple.231"* %22 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %99) #17
  %100 = getelementptr inbounds %"class.std::__1::tuple.231", %"class.std::__1::tuple.231"* %22, i64 0, i32 0, i32 0, i32 0
  store i32* %24, i32** %100, align 8
  %101 = getelementptr inbounds %"class.std::__1::tuple.234", %"class.std::__1::tuple.234"* %23, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %101) #17
  %102 = call { %"struct.std::__1::__hash_node_base"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeIiNS_5arrayIN4base8internal14StatsCollector18DeferredTraceEventELm4EEEEENS_22__unordered_map_hasherIiS8_NS_4hashIiEENS_8equal_toIvEELb1EEENS_21__unordered_map_equalIiS8_SD_SB_Lb1EEENS4_17MetadataAllocatorIS8_EEE25__emplace_unique_key_argsIiJRKNS_21piecewise_construct_tENS_5tupleIJRKiEEENSO_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS8_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table"* %43, i32* nonnull dereferenceable(4) %24, %"struct.std::__1::piecewise_construct_t"* nonnull dereferenceable(1) @_ZNSt3__1L19piecewise_constructE, %"class.std::__1::tuple.231"* nonnull dereferenceable(8) %22, %"class.std::__1::tuple.234"* nonnull dereferenceable(1) %23) #17
  %103 = extractvalue { %"struct.std::__1::__hash_node_base"*, i8 } %102, 0
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %101) #17
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %99) #17
  %104 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %103, i64 5
  %105 = bitcast %"struct.std::__1::__hash_node_base"* %104 to i64*
  store i64 %98, i64* %105, align 8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %96) #17
  call void @_ZNSt3__15mutex6unlockEv(%"class.std::__1::mutex"* %39) #17
  %106 = call dereferenceable(312) %"class.base::internal::PCScanInternal"* @_ZN4base8internal14PCScanInternal8InstanceEv() #17
  %107 = getelementptr inbounds %"class.base::internal::PCScanInternal", %"class.base::internal::PCScanInternal"* %106, i64 0, i32 4
  %108 = load i8, i8* %107, align 8, !range !5
  %109 = icmp eq i8 %108, 0
  br i1 %109, label %124, label %110

110:                                              ; preds = %75
  %111 = call i8* @_ZNK4base8internal14PCScanInternal24GetCurrentThreadStackTopEv(%"class.base::internal::PCScanInternal"* %106) #17
  %112 = icmp eq i8* %111, null
  br i1 %112, label %124, label %113, !prof !7

113:                                              ; preds = %110
  %114 = bitcast %"class.base::internal::Stack"* %20 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %114) #17
  %115 = getelementptr inbounds %"class.base::internal::Stack", %"class.base::internal::Stack"* %20, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %115, align 8
  call void @_ZN4base8internal5StackC1EPv(%"class.base::internal::Stack"* nonnull %20, i8* nonnull %111) #17
  %116 = bitcast %"class.base::internal::PCScanTask::StackVisitor"* %21 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %116) #17
  %117 = getelementptr inbounds %"class.base::internal::PCScanTask::StackVisitor", %"class.base::internal::PCScanTask::StackVisitor"* %21, i64 0, i32 0, i32 0
  %118 = getelementptr inbounds %"class.base::internal::PCScanTask::StackVisitor", %"class.base::internal::PCScanTask::StackVisitor"* %21, i64 0, i32 1
  %119 = getelementptr inbounds %"class.base::internal::PCScanTask::StackVisitor", %"class.base::internal::PCScanTask::StackVisitor"* %21, i64 0, i32 2
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [3 x i8*] }, { [3 x i8*] }* @_ZTVN4base8internal10PCScanTask12StackVisitorE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %117, align 8
  store %"class.base::internal::PCScanTask"* %0, %"class.base::internal::PCScanTask"** %118, align 8
  store i64 0, i64* %119, align 8
  %120 = getelementptr inbounds %"class.base::internal::PCScanTask::StackVisitor", %"class.base::internal::PCScanTask::StackVisitor"* %21, i64 0, i32 0
  call void @_ZNK4base8internal5Stack15IteratePointersEPNS0_12StackVisitorE(%"class.base::internal::Stack"* nonnull %20, %"class.base::internal::StackVisitor"* nonnull %120) #17
  %121 = load i64, i64* %119, align 8
  %122 = getelementptr inbounds %"class.base::internal::PCScanTask", %"class.base::internal::PCScanTask"* %0, i64 0, i32 3, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %123 = atomicrmw add i64* %122, i64 %121 monotonic
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %116) #17
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %114) #17
  br label %124

124:                                              ; preds = %75, %110, %113
  call void @_ZNSt3__15mutex4lockEv(%"class.std::__1::mutex"* %39) #17
  %125 = bitcast i32* %19 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %125) #17
  %126 = call i32 @_ZN4base14PlatformThread9CurrentIdEv() #17
  store i32 %126, i32* %19, align 4
  %127 = call i64 @_ZN4base9TimeTicks3NowEv() #17
  %128 = bitcast %"class.std::__1::tuple.231"* %17 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %128) #17
  %129 = getelementptr inbounds %"class.std::__1::tuple.231", %"class.std::__1::tuple.231"* %17, i64 0, i32 0, i32 0, i32 0
  store i32* %19, i32** %129, align 8
  %130 = getelementptr inbounds %"class.std::__1::tuple.234", %"class.std::__1::tuple.234"* %18, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %130) #17
  %131 = call { %"struct.std::__1::__hash_node_base"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeIiNS_5arrayIN4base8internal14StatsCollector18DeferredTraceEventELm4EEEEENS_22__unordered_map_hasherIiS8_NS_4hashIiEENS_8equal_toIvEELb1EEENS_21__unordered_map_equalIiS8_SD_SB_Lb1EEENS4_17MetadataAllocatorIS8_EEE25__emplace_unique_key_argsIiJRKNS_21piecewise_construct_tENS_5tupleIJRKiEEENSO_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS8_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table"* %43, i32* nonnull dereferenceable(4) %19, %"struct.std::__1::piecewise_construct_t"* nonnull dereferenceable(1) @_ZNSt3__1L19piecewise_constructE, %"class.std::__1::tuple.231"* nonnull dereferenceable(8) %17, %"class.std::__1::tuple.234"* nonnull dereferenceable(1) %18) #17
  %132 = extractvalue { %"struct.std::__1::__hash_node_base"*, i8 } %131, 0
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %130) #17
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %128) #17
  %133 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %132, i64 6
  %134 = bitcast %"struct.std::__1::__hash_node_base"* %133 to i64*
  store i64 %127, i64* %134, align 8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %125) #17
  call void @_ZNSt3__15mutex6unlockEv(%"class.std::__1::mutex"* %39) #17
  call void @_ZNSt3__15mutex4lockEv(%"class.std::__1::mutex"* %39) #17
  %135 = bitcast i32* %16 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %135) #17
  %136 = call i32 @_ZN4base14PlatformThread9CurrentIdEv() #17
  store i32 %136, i32* %16, align 4
  %137 = call i64 @_ZN4base9TimeTicks3NowEv() #17
  %138 = bitcast %"class.std::__1::tuple.231"* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %138) #17
  %139 = getelementptr inbounds %"class.std::__1::tuple.231", %"class.std::__1::tuple.231"* %14, i64 0, i32 0, i32 0, i32 0
  store i32* %16, i32** %139, align 8
  %140 = getelementptr inbounds %"class.std::__1::tuple.234", %"class.std::__1::tuple.234"* %15, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %140) #17
  %141 = call { %"struct.std::__1::__hash_node_base"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeIiNS_5arrayIN4base8internal14StatsCollector18DeferredTraceEventELm4EEEEENS_22__unordered_map_hasherIiS8_NS_4hashIiEENS_8equal_toIvEELb1EEENS_21__unordered_map_equalIiS8_SD_SB_Lb1EEENS4_17MetadataAllocatorIS8_EEE25__emplace_unique_key_argsIiJRKNS_21piecewise_construct_tENS_5tupleIJRKiEEENSO_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS8_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table"* %43, i32* nonnull dereferenceable(4) %16, %"struct.std::__1::piecewise_construct_t"* nonnull dereferenceable(1) @_ZNSt3__1L19piecewise_constructE, %"class.std::__1::tuple.231"* nonnull dereferenceable(8) %14, %"class.std::__1::tuple.234"* nonnull dereferenceable(1) %15) #17
  %142 = extractvalue { %"struct.std::__1::__hash_node_base"*, i8 } %141, 0
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %140) #17
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %138) #17
  %143 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %142, i64 7
  %144 = bitcast %"struct.std::__1::__hash_node_base"* %143 to i64*
  store i64 %137, i64* %144, align 8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %135) #17
  call void @_ZNSt3__15mutex6unlockEv(%"class.std::__1::mutex"* %39) #17
  call void @_ZN4base8internal10PCScanTask14ScanPartitionsEv(%"class.base::internal::PCScanTask"* %0)
  call void @_ZNSt3__15mutex4lockEv(%"class.std::__1::mutex"* %39) #17
  %145 = bitcast i32* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %145) #17
  %146 = call i32 @_ZN4base14PlatformThread9CurrentIdEv() #17
  store i32 %146, i32* %13, align 4
  %147 = call i64 @_ZN4base9TimeTicks3NowEv() #17
  %148 = bitcast %"class.std::__1::tuple.231"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %148) #17
  %149 = getelementptr inbounds %"class.std::__1::tuple.231", %"class.std::__1::tuple.231"* %11, i64 0, i32 0, i32 0, i32 0
  store i32* %13, i32** %149, align 8
  %150 = getelementptr inbounds %"class.std::__1::tuple.234", %"class.std::__1::tuple.234"* %12, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %150) #17
  %151 = call { %"struct.std::__1::__hash_node_base"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeIiNS_5arrayIN4base8internal14StatsCollector18DeferredTraceEventELm4EEEEENS_22__unordered_map_hasherIiS8_NS_4hashIiEENS_8equal_toIvEELb1EEENS_21__unordered_map_equalIiS8_SD_SB_Lb1EEENS4_17MetadataAllocatorIS8_EEE25__emplace_unique_key_argsIiJRKNS_21piecewise_construct_tENS_5tupleIJRKiEEENSO_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS8_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table"* %43, i32* nonnull dereferenceable(4) %13, %"struct.std::__1::piecewise_construct_t"* nonnull dereferenceable(1) @_ZNSt3__1L19piecewise_constructE, %"class.std::__1::tuple.231"* nonnull dereferenceable(8) %11, %"class.std::__1::tuple.234"* nonnull dereferenceable(1) %12) #17
  %152 = extractvalue { %"struct.std::__1::__hash_node_base"*, i8 } %151, 0
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %150) #17
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %148) #17
  %153 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %152, i64 8
  %154 = bitcast %"struct.std::__1::__hash_node_base"* %153 to i64*
  store i64 %147, i64* %154, align 8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %145) #17
  call void @_ZNSt3__15mutex6unlockEv(%"class.std::__1::mutex"* %39) #17
  %155 = getelementptr inbounds %"class.base::internal::PCScanTask", %"class.base::internal::PCScanTask"* %0, i64 0, i32 4
  call void @_ZNSt3__15mutex4lockEv(%"class.std::__1::mutex"* %155) #17
  %156 = atomicrmw sub i64* %51, i64 1 monotonic
  %157 = load %"class.base::internal::PCScan"*, %"class.base::internal::PCScan"** %53, align 8
  %158 = getelementptr inbounds %"class.base::internal::PCScan", %"class.base::internal::PCScan"* %157, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %159 = cmpxchg i8* %158, i8 2, i8 3 monotonic monotonic
  call void @_ZNSt3__15mutex6unlockEv(%"class.std::__1::mutex"* %155) #17
  %160 = getelementptr inbounds %"class.base::internal::PCScanTask", %"class.base::internal::PCScanTask"* %0, i64 0, i32 5
  call void @_ZNSt3__118condition_variable10notify_allEv(%"class.std::__1::condition_variable"* %160) #17
  %161 = bitcast %class.anon.63* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %161) #17
  %162 = getelementptr inbounds %class.anon.63, %class.anon.63* %10, i64 0, i32 0
  store %"class.base::internal::PCScanTask"* %0, %"class.base::internal::PCScanTask"** %162, align 8
  %163 = getelementptr inbounds %"class.base::internal::PCScanTask", %"class.base::internal::PCScanTask"* %0, i64 0, i32 7, i32 0
  %164 = load atomic i64, i64* %163 acquire, align 8
  %165 = icmp eq i64 %164, -1
  br i1 %165, label %188, label %166

166:                                              ; preds = %124
  %167 = bitcast %"class.std::__1::tuple.194"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %167) #17
  %168 = getelementptr inbounds %"class.std::__1::tuple.194", %"class.std::__1::tuple.194"* %8, i64 0, i32 0, i32 0, i32 0
  store %class.anon.63* %10, %class.anon.63** %168, align 8
  %169 = bitcast %"class.std::__1::__call_once_param.197"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %169) #17
  %170 = getelementptr inbounds %"class.std::__1::__call_once_param.197", %"class.std::__1::__call_once_param.197"* %9, i64 0, i32 0
  store %"class.std::__1::tuple.194"* %8, %"class.std::__1::tuple.194"** %170, align 8
  call void @_ZNSt3__111__call_onceERVmPvPFvS2_E(i64* dereferenceable(8) %163, i8* nonnull %169, void (i8*)* nonnull @"_ZNSt3__117__call_once_proxyINS_5tupleIJOZN4base8internal10PCScanTask19UnprotectPartitionsEvE3$_2EEEEEvPv") #17
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %169) #17
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %167) #17
  br label %188

171:                                              ; preds = %1
  %172 = getelementptr inbounds %"class.base::internal::PCScanTask", %"class.base::internal::PCScanTask"* %0, i64 0, i32 4
  call void @_ZNSt3__15mutex4lockEv(%"class.std::__1::mutex"* %172) #17
  %173 = atomicrmw sub i64* %51, i64 1 monotonic
  %174 = load %"class.base::internal::PCScan"*, %"class.base::internal::PCScan"** %53, align 8
  %175 = getelementptr inbounds %"class.base::internal::PCScan", %"class.base::internal::PCScan"* %174, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %176 = cmpxchg i8* %175, i8 2, i8 3 monotonic monotonic
  call void @_ZNSt3__15mutex6unlockEv(%"class.std::__1::mutex"* %172) #17
  %177 = getelementptr inbounds %"class.base::internal::PCScanTask", %"class.base::internal::PCScanTask"* %0, i64 0, i32 5
  call void @_ZNSt3__118condition_variable10notify_allEv(%"class.std::__1::condition_variable"* %177) #17
  %178 = bitcast %class.anon.63* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %178) #17
  %179 = getelementptr inbounds %class.anon.63, %class.anon.63* %7, i64 0, i32 0
  store %"class.base::internal::PCScanTask"* %0, %"class.base::internal::PCScanTask"** %179, align 8
  %180 = getelementptr inbounds %"class.base::internal::PCScanTask", %"class.base::internal::PCScanTask"* %0, i64 0, i32 7, i32 0
  %181 = load atomic i64, i64* %180 acquire, align 8
  %182 = icmp eq i64 %181, -1
  br i1 %182, label %188, label %183

183:                                              ; preds = %171
  %184 = bitcast %"class.std::__1::tuple.194"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %184) #17
  %185 = getelementptr inbounds %"class.std::__1::tuple.194", %"class.std::__1::tuple.194"* %5, i64 0, i32 0, i32 0, i32 0
  store %class.anon.63* %7, %class.anon.63** %185, align 8
  %186 = bitcast %"class.std::__1::__call_once_param.197"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %186) #17
  %187 = getelementptr inbounds %"class.std::__1::__call_once_param.197", %"class.std::__1::__call_once_param.197"* %6, i64 0, i32 0
  store %"class.std::__1::tuple.194"* %5, %"class.std::__1::tuple.194"** %187, align 8
  call void @_ZNSt3__111__call_onceERVmPvPFvS2_E(i64* dereferenceable(8) %180, i8* nonnull %186, void (i8*)* nonnull @"_ZNSt3__117__call_once_proxyINS_5tupleIJOZN4base8internal10PCScanTask19UnprotectPartitionsEvE3$_2EEEEEvPv") #17
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %186) #17
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %184) #17
  br label %188

188:                                              ; preds = %183, %171, %166, %124
  %189 = phi i8* [ %161, %124 ], [ %161, %166 ], [ %178, %171 ], [ %178, %183 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %189) #17
  call void @_ZNSt3__15mutex4lockEv(%"class.std::__1::mutex"* %39) #17
  %190 = bitcast i32* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %190) #17
  %191 = call i32 @_ZN4base14PlatformThread9CurrentIdEv() #17
  store i32 %191, i32* %4, align 4
  %192 = call i64 @_ZN4base9TimeTicks3NowEv() #17
  %193 = bitcast %"class.std::__1::tuple.231"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %193) #17
  %194 = getelementptr inbounds %"class.std::__1::tuple.231", %"class.std::__1::tuple.231"* %2, i64 0, i32 0, i32 0, i32 0
  store i32* %4, i32** %194, align 8
  %195 = getelementptr inbounds %"class.std::__1::tuple.234", %"class.std::__1::tuple.234"* %3, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %195) #17
  %196 = call { %"struct.std::__1::__hash_node_base"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeIiNS_5arrayIN4base8internal14StatsCollector18DeferredTraceEventELm4EEEEENS_22__unordered_map_hasherIiS8_NS_4hashIiEENS_8equal_toIvEELb1EEENS_21__unordered_map_equalIiS8_SD_SB_Lb1EEENS4_17MetadataAllocatorIS8_EEE25__emplace_unique_key_argsIiJRKNS_21piecewise_construct_tENS_5tupleIJRKiEEENSO_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS8_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table"* %43, i32* nonnull dereferenceable(4) %4, %"struct.std::__1::piecewise_construct_t"* nonnull dereferenceable(1) @_ZNSt3__1L19piecewise_constructE, %"class.std::__1::tuple.231"* nonnull dereferenceable(8) %2, %"class.std::__1::tuple.234"* nonnull dereferenceable(1) %3) #17
  %197 = extractvalue { %"struct.std::__1::__hash_node_base"*, i8 } %196, 0
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %195) #17
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %193) #17
  %198 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %197, i64 10
  %199 = bitcast %"struct.std::__1::__hash_node_base"* %198 to i64*
  store i64 %192, i64* %199, align 8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %190) #17
  call void @_ZNSt3__15mutex6unlockEv(%"class.std::__1::mutex"* %39) #17
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4base8internal10PCScanTask14RunFromScannerEv(%"class.base::internal::PCScanTask"*) local_unnamed_addr #3 align 2 {
  %2 = alloca %"class.std::__1::tuple.231", align 8
  %3 = alloca %"class.std::__1::tuple.234", align 1
  %4 = alloca i32, align 4
  %5 = alloca %"class.std::__1::tuple.231", align 8
  %6 = alloca %"class.std::__1::tuple.234", align 1
  %7 = alloca i32, align 4
  %8 = alloca %"class.std::__1::tuple.231", align 8
  %9 = alloca %"class.std::__1::tuple.234", align 1
  %10 = alloca i32, align 4
  %11 = alloca %"class.std::__1::tuple.231", align 8
  %12 = alloca %"class.std::__1::tuple.234", align 1
  %13 = alloca i32, align 4
  %14 = alloca %"class.std::__1::tuple.231", align 8
  %15 = alloca %"class.std::__1::tuple.234", align 1
  %16 = alloca i32, align 4
  %17 = alloca %"class.std::__1::tuple.231", align 8
  %18 = alloca %"class.std::__1::tuple.234", align 1
  %19 = alloca i32, align 4
  %20 = alloca %"class.std::__1::tuple.231", align 8
  %21 = alloca %"class.std::__1::tuple.234", align 1
  %22 = alloca i32, align 4
  %23 = alloca %"class.std::__1::tuple.129", align 8
  %24 = alloca %"class.std::__1::__call_once_param", align 8
  %25 = alloca i64, align 8
  %26 = alloca <2 x i64>, align 16
  %27 = alloca %"class.base::internal::(anonymous namespace)::PCScanSnapshot"*, align 8
  %28 = alloca %"class.std::__1::tuple.231", align 8
  %29 = alloca %"class.std::__1::tuple.234", align 1
  %30 = alloca i32, align 4
  %31 = alloca %"class.base::internal::PCScanTask::SyncScope.102", align 8
  %32 = getelementptr inbounds %"class.base::internal::PCScanTask", %"class.base::internal::PCScanTask"* %0, i64 0, i32 3, i32 1, i32 0
  tail call void @_ZNSt3__15mutex4lockEv(%"class.std::__1::mutex"* %32) #17
  %33 = bitcast i32* %30 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %33) #17
  %34 = tail call i32 @_ZN4base14PlatformThread9CurrentIdEv() #17
  store i32 %34, i32* %30, align 4
  %35 = tail call i64 @_ZN4base9TimeTicks3NowEv() #17
  %36 = getelementptr inbounds %"class.base::internal::PCScanTask", %"class.base::internal::PCScanTask"* %0, i64 0, i32 3, i32 1, i32 1, i32 0
  %37 = bitcast %"class.std::__1::tuple.231"* %28 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %37) #17
  %38 = getelementptr inbounds %"class.std::__1::tuple.231", %"class.std::__1::tuple.231"* %28, i64 0, i32 0, i32 0, i32 0
  store i32* %30, i32** %38, align 8
  %39 = getelementptr inbounds %"class.std::__1::tuple.234", %"class.std::__1::tuple.234"* %29, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %39) #17
  %40 = call { %"struct.std::__1::__hash_node_base"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeIiNS_5arrayIN4base8internal14StatsCollector18DeferredTraceEventELm4EEEEENS_22__unordered_map_hasherIiS8_NS_4hashIiEENS_8equal_toIvEELb1EEENS_21__unordered_map_equalIiS8_SD_SB_Lb1EEENS4_17MetadataAllocatorIS8_EEE25__emplace_unique_key_argsIiJRKNS_21piecewise_construct_tENS_5tupleIJRKiEEENSO_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS8_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table"* %36, i32* nonnull dereferenceable(4) %30, %"struct.std::__1::piecewise_construct_t"* nonnull dereferenceable(1) @_ZNSt3__1L19piecewise_constructE, %"class.std::__1::tuple.231"* nonnull dereferenceable(8) %28, %"class.std::__1::tuple.234"* nonnull dereferenceable(1) %29) #17
  %41 = extractvalue { %"struct.std::__1::__hash_node_base"*, i8 } %40, 0
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %39) #17
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %37) #17
  %42 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %41, i64 9
  %43 = bitcast %"struct.std::__1::__hash_node_base"* %42 to i64*
  store i64 %35, i64* %43, align 8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %33) #17
  call void @_ZNSt3__15mutex6unlockEv(%"class.std::__1::mutex"* %32) #17
  %44 = bitcast %"class.base::internal::PCScanTask::SyncScope.102"* %31 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %44) #17
  %45 = getelementptr inbounds %"class.base::internal::PCScanTask::SyncScope.102", %"class.base::internal::PCScanTask::SyncScope.102"* %31, i64 0, i32 0
  store %"class.base::internal::PCScanTask"* %0, %"class.base::internal::PCScanTask"** %45, align 8
  %46 = getelementptr inbounds %"class.base::internal::PCScanTask", %"class.base::internal::PCScanTask"* %0, i64 0, i32 6, i32 0, i32 0, i32 0, i32 0, i32 0
  %47 = atomicrmw add i64* %46, i64 1 monotonic
  %48 = getelementptr inbounds %"class.base::internal::PCScanTask", %"class.base::internal::PCScanTask"* %0, i64 0, i32 8
  %49 = load %"class.base::internal::PCScan"*, %"class.base::internal::PCScan"** %48, align 8
  %50 = getelementptr inbounds %"class.base::internal::PCScan", %"class.base::internal::PCScan"* %49, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0
  store atomic i8 2, i8* %50 release, align 1
  %51 = getelementptr inbounds %"class.base::internal::PCScanTask", %"class.base::internal::PCScanTask"* %0, i64 0, i32 2
  %52 = getelementptr inbounds %"class.base::internal::PCScanTask", %"class.base::internal::PCScanTask"* %0, i64 0, i32 1
  %53 = load i64, i64* %52, align 8
  %54 = bitcast i64* %25 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %54)
  store i64 %53, i64* %25, align 8
  %55 = bitcast <2 x i64>* %26 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %55) #17
  store <2 x i64> <i64 ptrtoint (void (%"class.base::internal::(anonymous namespace)::PCScanSnapshot"*, i64)* @_ZN4base8internal12_GLOBAL__N_114PCScanSnapshot4TakeEm to i64), i64 0>, <2 x i64>* %26, align 16
  %56 = bitcast %"class.base::internal::(anonymous namespace)::PCScanSnapshot"** %27 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %56) #17
  store %"class.base::internal::(anonymous namespace)::PCScanSnapshot"* %51, %"class.base::internal::(anonymous namespace)::PCScanSnapshot"** %27, align 8
  %57 = getelementptr inbounds %"class.base::internal::PCScanTask", %"class.base::internal::PCScanTask"* %0, i64 0, i32 2, i32 4, i32 0
  %58 = load atomic i64, i64* %57 acquire, align 8
  %59 = icmp eq i64 %58, -1
  br i1 %59, label %67, label %60

60:                                               ; preds = %1
  %61 = bitcast %"class.std::__1::tuple.129"* %23 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %61) #17
  %62 = getelementptr inbounds %"class.std::__1::tuple.129", %"class.std::__1::tuple.129"* %23, i64 0, i32 0, i32 1, i32 0
  %63 = getelementptr inbounds %"class.std::__1::tuple.129", %"class.std::__1::tuple.129"* %23, i64 0, i32 0, i32 2, i32 0
  %64 = bitcast %"class.std::__1::tuple.129"* %23 to <2 x i64>**
  store <2 x i64>* %26, <2 x i64>** %64, align 8
  store %"class.base::internal::(anonymous namespace)::PCScanSnapshot"** %27, %"class.base::internal::(anonymous namespace)::PCScanSnapshot"*** %62, align 8
  store i64* %25, i64** %63, align 8
  %65 = bitcast %"class.std::__1::__call_once_param"* %24 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %65) #17
  %66 = getelementptr inbounds %"class.std::__1::__call_once_param", %"class.std::__1::__call_once_param"* %24, i64 0, i32 0
  store %"class.std::__1::tuple.129"* %23, %"class.std::__1::tuple.129"** %66, align 8
  call void @_ZNSt3__111__call_onceERVmPvPFvS2_E(i64* dereferenceable(8) %57, i8* nonnull %65, void (i8*)* nonnull @_ZNSt3__117__call_once_proxyINS_5tupleIJOMN4base8internal12_GLOBAL__N_114PCScanSnapshotEFvmEOPS5_RmEEEEEvPv) #17
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %65) #17
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %61) #17
  br label %67

67:                                               ; preds = %1, %60
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %56) #17
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %55) #17
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %54)
  call void @_ZNSt3__15mutex4lockEv(%"class.std::__1::mutex"* %32) #17
  %68 = bitcast i32* %22 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %68) #17
  %69 = call i32 @_ZN4base14PlatformThread9CurrentIdEv() #17
  store i32 %69, i32* %22, align 4
  %70 = call i64 @_ZN4base9TimeTicks3NowEv() #17
  %71 = bitcast %"class.std::__1::tuple.231"* %20 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %71) #17
  %72 = getelementptr inbounds %"class.std::__1::tuple.231", %"class.std::__1::tuple.231"* %20, i64 0, i32 0, i32 0, i32 0
  store i32* %22, i32** %72, align 8
  %73 = getelementptr inbounds %"class.std::__1::tuple.234", %"class.std::__1::tuple.234"* %21, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %73) #17
  %74 = call { %"struct.std::__1::__hash_node_base"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeIiNS_5arrayIN4base8internal14StatsCollector18DeferredTraceEventELm4EEEEENS_22__unordered_map_hasherIiS8_NS_4hashIiEENS_8equal_toIvEELb1EEENS_21__unordered_map_equalIiS8_SD_SB_Lb1EEENS4_17MetadataAllocatorIS8_EEE25__emplace_unique_key_argsIiJRKNS_21piecewise_construct_tENS_5tupleIJRKiEEENSO_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS8_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table"* %36, i32* nonnull dereferenceable(4) %22, %"struct.std::__1::piecewise_construct_t"* nonnull dereferenceable(1) @_ZNSt3__1L19piecewise_constructE, %"class.std::__1::tuple.231"* nonnull dereferenceable(8) %20, %"class.std::__1::tuple.234"* nonnull dereferenceable(1) %21) #17
  %75 = extractvalue { %"struct.std::__1::__hash_node_base"*, i8 } %74, 0
  %76 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %75, i64 3
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %73) #17
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %71) #17
  %77 = bitcast %"struct.std::__1::__hash_node_base"* %76 to i64*
  store i64 %70, i64* %77, align 8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %68) #17
  call void @_ZNSt3__15mutex6unlockEv(%"class.std::__1::mutex"* %32) #17
  call void @_ZN4base8internal10PCScanTask42ClearQuarantinedObjectsAndPrepareCardTableEv(%"class.base::internal::PCScanTask"* %0)
  call void @_ZNSt3__15mutex4lockEv(%"class.std::__1::mutex"* %32) #17
  %78 = bitcast i32* %19 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %78) #17
  %79 = call i32 @_ZN4base14PlatformThread9CurrentIdEv() #17
  store i32 %79, i32* %19, align 4
  %80 = call i64 @_ZN4base9TimeTicks3NowEv() #17
  %81 = bitcast %"class.std::__1::tuple.231"* %17 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %81) #17
  %82 = getelementptr inbounds %"class.std::__1::tuple.231", %"class.std::__1::tuple.231"* %17, i64 0, i32 0, i32 0, i32 0
  store i32* %19, i32** %82, align 8
  %83 = getelementptr inbounds %"class.std::__1::tuple.234", %"class.std::__1::tuple.234"* %18, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %83) #17
  %84 = call { %"struct.std::__1::__hash_node_base"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeIiNS_5arrayIN4base8internal14StatsCollector18DeferredTraceEventELm4EEEEENS_22__unordered_map_hasherIiS8_NS_4hashIiEENS_8equal_toIvEELb1EEENS_21__unordered_map_equalIiS8_SD_SB_Lb1EEENS4_17MetadataAllocatorIS8_EEE25__emplace_unique_key_argsIiJRKNS_21piecewise_construct_tENS_5tupleIJRKiEEENSO_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS8_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table"* %36, i32* nonnull dereferenceable(4) %19, %"struct.std::__1::piecewise_construct_t"* nonnull dereferenceable(1) @_ZNSt3__1L19piecewise_constructE, %"class.std::__1::tuple.231"* nonnull dereferenceable(8) %17, %"class.std::__1::tuple.234"* nonnull dereferenceable(1) %18) #17
  %85 = extractvalue { %"struct.std::__1::__hash_node_base"*, i8 } %84, 0
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %83) #17
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %81) #17
  %86 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %85, i64 4
  %87 = bitcast %"struct.std::__1::__hash_node_base"* %86 to i64*
  store i64 %80, i64* %87, align 8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %78) #17
  call void @_ZNSt3__15mutex6unlockEv(%"class.std::__1::mutex"* %32) #17
  call void @_ZNSt3__15mutex4lockEv(%"class.std::__1::mutex"* %32) #17
  %88 = bitcast i32* %16 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %88) #17
  %89 = call i32 @_ZN4base14PlatformThread9CurrentIdEv() #17
  store i32 %89, i32* %16, align 4
  %90 = call i64 @_ZN4base9TimeTicks3NowEv() #17
  %91 = bitcast %"class.std::__1::tuple.231"* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %91) #17
  %92 = getelementptr inbounds %"class.std::__1::tuple.231", %"class.std::__1::tuple.231"* %14, i64 0, i32 0, i32 0, i32 0
  store i32* %16, i32** %92, align 8
  %93 = getelementptr inbounds %"class.std::__1::tuple.234", %"class.std::__1::tuple.234"* %15, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %93) #17
  %94 = call { %"struct.std::__1::__hash_node_base"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeIiNS_5arrayIN4base8internal14StatsCollector18DeferredTraceEventELm4EEEEENS_22__unordered_map_hasherIiS8_NS_4hashIiEENS_8equal_toIvEELb1EEENS_21__unordered_map_equalIiS8_SD_SB_Lb1EEENS4_17MetadataAllocatorIS8_EEE25__emplace_unique_key_argsIiJRKNS_21piecewise_construct_tENS_5tupleIJRKiEEENSO_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS8_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table"* %36, i32* nonnull dereferenceable(4) %16, %"struct.std::__1::piecewise_construct_t"* nonnull dereferenceable(1) @_ZNSt3__1L19piecewise_constructE, %"class.std::__1::tuple.231"* nonnull dereferenceable(8) %14, %"class.std::__1::tuple.234"* nonnull dereferenceable(1) %15) #17
  %95 = extractvalue { %"struct.std::__1::__hash_node_base"*, i8 } %94, 0
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %93) #17
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %91) #17
  %96 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %95, i64 5
  %97 = bitcast %"struct.std::__1::__hash_node_base"* %96 to i64*
  store i64 %90, i64* %97, align 8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %88) #17
  call void @_ZNSt3__15mutex6unlockEv(%"class.std::__1::mutex"* %32) #17
  call void @_ZN4base8internal10PCScanTask14ScanPartitionsEv(%"class.base::internal::PCScanTask"* %0)
  call void @_ZNSt3__15mutex4lockEv(%"class.std::__1::mutex"* %32) #17
  %98 = bitcast i32* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %98) #17
  %99 = call i32 @_ZN4base14PlatformThread9CurrentIdEv() #17
  store i32 %99, i32* %13, align 4
  %100 = call i64 @_ZN4base9TimeTicks3NowEv() #17
  %101 = bitcast %"class.std::__1::tuple.231"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %101) #17
  %102 = getelementptr inbounds %"class.std::__1::tuple.231", %"class.std::__1::tuple.231"* %11, i64 0, i32 0, i32 0, i32 0
  store i32* %13, i32** %102, align 8
  %103 = getelementptr inbounds %"class.std::__1::tuple.234", %"class.std::__1::tuple.234"* %12, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %103) #17
  %104 = call { %"struct.std::__1::__hash_node_base"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeIiNS_5arrayIN4base8internal14StatsCollector18DeferredTraceEventELm4EEEEENS_22__unordered_map_hasherIiS8_NS_4hashIiEENS_8equal_toIvEELb1EEENS_21__unordered_map_equalIiS8_SD_SB_Lb1EEENS4_17MetadataAllocatorIS8_EEE25__emplace_unique_key_argsIiJRKNS_21piecewise_construct_tENS_5tupleIJRKiEEENSO_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS8_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table"* %36, i32* nonnull dereferenceable(4) %13, %"struct.std::__1::piecewise_construct_t"* nonnull dereferenceable(1) @_ZNSt3__1L19piecewise_constructE, %"class.std::__1::tuple.231"* nonnull dereferenceable(8) %11, %"class.std::__1::tuple.234"* nonnull dereferenceable(1) %12) #17
  %105 = extractvalue { %"struct.std::__1::__hash_node_base"*, i8 } %104, 0
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %103) #17
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %101) #17
  %106 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %105, i64 6
  %107 = bitcast %"struct.std::__1::__hash_node_base"* %106 to i64*
  store i64 %100, i64* %107, align 8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %98) #17
  call void @_ZNSt3__15mutex6unlockEv(%"class.std::__1::mutex"* %32) #17
  call void @_ZN4base8internal10PCScanTask9SyncScopeILNS0_7ContextE1EED2Ev(%"class.base::internal::PCScanTask::SyncScope.102"* nonnull %31) #17
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %44) #17
  call void @_ZNSt3__15mutex4lockEv(%"class.std::__1::mutex"* %32) #17
  %108 = bitcast i32* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %108) #17
  %109 = call i32 @_ZN4base14PlatformThread9CurrentIdEv() #17
  store i32 %109, i32* %10, align 4
  %110 = call i64 @_ZN4base9TimeTicks3NowEv() #17
  %111 = bitcast %"class.std::__1::tuple.231"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %111) #17
  %112 = getelementptr inbounds %"class.std::__1::tuple.231", %"class.std::__1::tuple.231"* %8, i64 0, i32 0, i32 0, i32 0
  store i32* %10, i32** %112, align 8
  %113 = getelementptr inbounds %"class.std::__1::tuple.234", %"class.std::__1::tuple.234"* %9, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %113) #17
  %114 = call { %"struct.std::__1::__hash_node_base"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeIiNS_5arrayIN4base8internal14StatsCollector18DeferredTraceEventELm4EEEEENS_22__unordered_map_hasherIiS8_NS_4hashIiEENS_8equal_toIvEELb1EEENS_21__unordered_map_equalIiS8_SD_SB_Lb1EEENS4_17MetadataAllocatorIS8_EEE25__emplace_unique_key_argsIiJRKNS_21piecewise_construct_tENS_5tupleIJRKiEEENSO_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS8_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table"* %36, i32* nonnull dereferenceable(4) %10, %"struct.std::__1::piecewise_construct_t"* nonnull dereferenceable(1) @_ZNSt3__1L19piecewise_constructE, %"class.std::__1::tuple.231"* nonnull dereferenceable(8) %8, %"class.std::__1::tuple.234"* nonnull dereferenceable(1) %9) #17
  %115 = extractvalue { %"struct.std::__1::__hash_node_base"*, i8 } %114, 0
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %113) #17
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %111) #17
  %116 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %115, i64 7
  %117 = bitcast %"struct.std::__1::__hash_node_base"* %116 to i64*
  store i64 %110, i64* %117, align 8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %108) #17
  call void @_ZNSt3__15mutex6unlockEv(%"class.std::__1::mutex"* %32) #17
  call void @_ZN4base8internal10PCScanTask15SweepQuarantineEv(%"class.base::internal::PCScanTask"* %0)
  call void @_ZNSt3__15mutex4lockEv(%"class.std::__1::mutex"* %32) #17
  %118 = bitcast i32* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %118) #17
  %119 = call i32 @_ZN4base14PlatformThread9CurrentIdEv() #17
  store i32 %119, i32* %7, align 4
  %120 = call i64 @_ZN4base9TimeTicks3NowEv() #17
  %121 = bitcast %"class.std::__1::tuple.231"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %121) #17
  %122 = getelementptr inbounds %"class.std::__1::tuple.231", %"class.std::__1::tuple.231"* %5, i64 0, i32 0, i32 0, i32 0
  store i32* %7, i32** %122, align 8
  %123 = getelementptr inbounds %"class.std::__1::tuple.234", %"class.std::__1::tuple.234"* %6, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %123) #17
  %124 = call { %"struct.std::__1::__hash_node_base"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeIiNS_5arrayIN4base8internal14StatsCollector18DeferredTraceEventELm4EEEEENS_22__unordered_map_hasherIiS8_NS_4hashIiEENS_8equal_toIvEELb1EEENS_21__unordered_map_equalIiS8_SD_SB_Lb1EEENS4_17MetadataAllocatorIS8_EEE25__emplace_unique_key_argsIiJRKNS_21piecewise_construct_tENS_5tupleIJRKiEEENSO_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS8_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table"* %36, i32* nonnull dereferenceable(4) %7, %"struct.std::__1::piecewise_construct_t"* nonnull dereferenceable(1) @_ZNSt3__1L19piecewise_constructE, %"class.std::__1::tuple.231"* nonnull dereferenceable(8) %5, %"class.std::__1::tuple.234"* nonnull dereferenceable(1) %6) #17
  %125 = extractvalue { %"struct.std::__1::__hash_node_base"*, i8 } %124, 0
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %123) #17
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %121) #17
  %126 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %125, i64 8
  %127 = bitcast %"struct.std::__1::__hash_node_base"* %126 to i64*
  store i64 %120, i64* %127, align 8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %118) #17
  call void @_ZNSt3__15mutex6unlockEv(%"class.std::__1::mutex"* %32) #17
  call void @_ZNSt3__15mutex4lockEv(%"class.std::__1::mutex"* %32) #17
  %128 = bitcast i32* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %128) #17
  %129 = call i32 @_ZN4base14PlatformThread9CurrentIdEv() #17
  store i32 %129, i32* %4, align 4
  %130 = call i64 @_ZN4base9TimeTicks3NowEv() #17
  %131 = bitcast %"class.std::__1::tuple.231"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %131) #17
  %132 = getelementptr inbounds %"class.std::__1::tuple.231", %"class.std::__1::tuple.231"* %2, i64 0, i32 0, i32 0, i32 0
  store i32* %4, i32** %132, align 8
  %133 = getelementptr inbounds %"class.std::__1::tuple.234", %"class.std::__1::tuple.234"* %3, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %133) #17
  %134 = call { %"struct.std::__1::__hash_node_base"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeIiNS_5arrayIN4base8internal14StatsCollector18DeferredTraceEventELm4EEEEENS_22__unordered_map_hasherIiS8_NS_4hashIiEENS_8equal_toIvEELb1EEENS_21__unordered_map_equalIiS8_SD_SB_Lb1EEENS4_17MetadataAllocatorIS8_EEE25__emplace_unique_key_argsIiJRKNS_21piecewise_construct_tENS_5tupleIJRKiEEENSO_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS8_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table"* %36, i32* nonnull dereferenceable(4) %4, %"struct.std::__1::piecewise_construct_t"* nonnull dereferenceable(1) @_ZNSt3__1L19piecewise_constructE, %"class.std::__1::tuple.231"* nonnull dereferenceable(8) %2, %"class.std::__1::tuple.234"* nonnull dereferenceable(1) %3) #17
  %135 = extractvalue { %"struct.std::__1::__hash_node_base"*, i8 } %134, 0
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %133) #17
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %131) #17
  %136 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %135, i64 10
  %137 = bitcast %"struct.std::__1::__hash_node_base"* %136 to i64*
  store i64 %130, i64* %137, align 8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %128) #17
  call void @_ZNSt3__15mutex6unlockEv(%"class.std::__1::mutex"* %32) #17
  call void @_ZN4base8internal10PCScanTask13FinishScannerEv(%"class.base::internal::PCScanTask"* %0)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal10PCScanTask9SyncScopeILNS0_7ContextE1EED2Ev(%"class.base::internal::PCScanTask::SyncScope.102"*) unnamed_addr #3 comdat align 2 {
  %2 = alloca %"class.std::__1::unique_lock", align 8
  %3 = alloca %"class.std::__1::tuple.194", align 8
  %4 = alloca %"class.std::__1::__call_once_param.197", align 8
  %5 = alloca %class.anon.63, align 8
  %6 = getelementptr inbounds %"class.base::internal::PCScanTask::SyncScope.102", %"class.base::internal::PCScanTask::SyncScope.102"* %0, i64 0, i32 0
  %7 = load %"class.base::internal::PCScanTask"*, %"class.base::internal::PCScanTask"** %6, align 8
  %8 = getelementptr inbounds %"class.base::internal::PCScanTask", %"class.base::internal::PCScanTask"* %7, i64 0, i32 4
  tail call void @_ZNSt3__15mutex4lockEv(%"class.std::__1::mutex"* %8) #17
  %9 = load %"class.base::internal::PCScanTask"*, %"class.base::internal::PCScanTask"** %6, align 8
  %10 = getelementptr inbounds %"class.base::internal::PCScanTask", %"class.base::internal::PCScanTask"* %9, i64 0, i32 6, i32 0, i32 0, i32 0, i32 0, i32 0
  %11 = atomicrmw sub i64* %10, i64 1 monotonic
  %12 = load %"class.base::internal::PCScanTask"*, %"class.base::internal::PCScanTask"** %6, align 8
  %13 = getelementptr inbounds %"class.base::internal::PCScanTask", %"class.base::internal::PCScanTask"* %12, i64 0, i32 8
  %14 = load %"class.base::internal::PCScan"*, %"class.base::internal::PCScan"** %13, align 8
  %15 = getelementptr inbounds %"class.base::internal::PCScan", %"class.base::internal::PCScan"* %14, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %16 = cmpxchg i8* %15, i8 2, i8 3 monotonic monotonic
  tail call void @_ZNSt3__15mutex6unlockEv(%"class.std::__1::mutex"* %8) #17
  %17 = load %"class.base::internal::PCScanTask"*, %"class.base::internal::PCScanTask"** %6, align 8
  %18 = getelementptr inbounds %"class.base::internal::PCScanTask", %"class.base::internal::PCScanTask"* %17, i64 0, i32 5
  tail call void @_ZNSt3__118condition_variable10notify_allEv(%"class.std::__1::condition_variable"* %18) #17
  %19 = load %"class.base::internal::PCScanTask"*, %"class.base::internal::PCScanTask"** %6, align 8
  %20 = bitcast %class.anon.63* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #17
  %21 = getelementptr inbounds %class.anon.63, %class.anon.63* %5, i64 0, i32 0
  store %"class.base::internal::PCScanTask"* %19, %"class.base::internal::PCScanTask"** %21, align 8
  %22 = getelementptr inbounds %"class.base::internal::PCScanTask", %"class.base::internal::PCScanTask"* %19, i64 0, i32 7, i32 0
  %23 = load atomic i64, i64* %22 acquire, align 8
  %24 = icmp eq i64 %23, -1
  br i1 %24, label %30, label %25

25:                                               ; preds = %1
  %26 = bitcast %"class.std::__1::tuple.194"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %26) #17
  %27 = getelementptr inbounds %"class.std::__1::tuple.194", %"class.std::__1::tuple.194"* %3, i64 0, i32 0, i32 0, i32 0
  store %class.anon.63* %5, %class.anon.63** %27, align 8
  %28 = bitcast %"class.std::__1::__call_once_param.197"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %28) #17
  %29 = getelementptr inbounds %"class.std::__1::__call_once_param.197", %"class.std::__1::__call_once_param.197"* %4, i64 0, i32 0
  store %"class.std::__1::tuple.194"* %3, %"class.std::__1::tuple.194"** %29, align 8
  call void @_ZNSt3__111__call_onceERVmPvPFvS2_E(i64* dereferenceable(8) %22, i8* nonnull %28, void (i8*)* nonnull @"_ZNSt3__117__call_once_proxyINS_5tupleIJOZN4base8internal10PCScanTask19UnprotectPartitionsEvE3$_2EEEEEvPv") #17
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %28) #17
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %26) #17
  br label %30

30:                                               ; preds = %1, %25
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #17
  %31 = bitcast %"class.std::__1::unique_lock"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %31) #17
  %32 = getelementptr inbounds %"class.std::__1::unique_lock", %"class.std::__1::unique_lock"* %2, i64 0, i32 0
  %33 = getelementptr inbounds %"class.std::__1::unique_lock", %"class.std::__1::unique_lock"* %2, i64 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %31, i8 -86, i64 16, i1 false) #17
  %34 = load %"class.base::internal::PCScanTask"*, %"class.base::internal::PCScanTask"** %6, align 8
  %35 = getelementptr inbounds %"class.base::internal::PCScanTask", %"class.base::internal::PCScanTask"* %34, i64 0, i32 4
  store %"class.std::__1::mutex"* %35, %"class.std::__1::mutex"** %32, align 8
  store i8 1, i8* %33, align 8
  call void @_ZNSt3__15mutex4lockEv(%"class.std::__1::mutex"* %35) #17
  %36 = load %"class.base::internal::PCScanTask"*, %"class.base::internal::PCScanTask"** %6, align 8
  %37 = getelementptr inbounds %"class.base::internal::PCScanTask", %"class.base::internal::PCScanTask"* %36, i64 0, i32 5
  %38 = getelementptr inbounds %"class.base::internal::PCScanTask", %"class.base::internal::PCScanTask"* %36, i64 0, i32 6, i32 0, i32 0, i32 0, i32 0, i32 0
  %39 = load atomic i64, i64* %38 monotonic, align 8
  %40 = icmp eq i64 %39, 0
  br i1 %40, label %51, label %41

41:                                               ; preds = %30, %41
  call void @_ZNSt3__118condition_variable4waitERNS_11unique_lockINS_5mutexEEE(%"class.std::__1::condition_variable"* %37, %"class.std::__1::unique_lock"* nonnull dereferenceable(16) %2) #17
  %42 = load %"class.base::internal::PCScanTask"*, %"class.base::internal::PCScanTask"** %6, align 8
  %43 = getelementptr inbounds %"class.base::internal::PCScanTask", %"class.base::internal::PCScanTask"* %42, i64 0, i32 6, i32 0, i32 0, i32 0, i32 0, i32 0
  %44 = load atomic i64, i64* %43 monotonic, align 8
  %45 = icmp eq i64 %44, 0
  br i1 %45, label %46, label %41

46:                                               ; preds = %41
  %47 = load i8, i8* %33, align 8, !range !5
  %48 = icmp eq i8 %47, 0
  br i1 %48, label %53, label %49

49:                                               ; preds = %46
  %50 = load %"class.std::__1::mutex"*, %"class.std::__1::mutex"** %32, align 8
  br label %51

51:                                               ; preds = %49, %30
  %52 = phi %"class.std::__1::mutex"* [ %50, %49 ], [ %35, %30 ]
  call void @_ZNSt3__15mutex6unlockEv(%"class.std::__1::mutex"* %52) #17
  br label %53

53:                                               ; preds = %46, %51
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %31) #17
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4base8internal14PCScanInternal5Roots3AddEPNS_13PartitionRootILb1EEE(%"class.base::internal::PCScanInternal::Roots"*, %"struct.base::PartitionRoot"*) local_unnamed_addr #3 align 2 {
  %3 = ptrtoint %"struct.base::PartitionRoot"* %1 to i64
  %4 = getelementptr inbounds %"class.base::internal::PCScanInternal::Roots", %"class.base::internal::PCScanInternal::Roots"* %0, i64 0, i32 0, i32 0, i64 0
  %5 = getelementptr inbounds %"class.base::internal::PCScanInternal::Roots", %"class.base::internal::PCScanInternal::Roots"* %0, i64 0, i32 1
  %6 = load i64, i64* %5, align 8
  %7 = getelementptr inbounds %"class.base::internal::PCScanInternal::Roots", %"class.base::internal::PCScanInternal::Roots"* %0, i64 0, i32 0, i32 0, i64 %6
  %8 = icmp eq i64 %6, 0
  br i1 %8, label %16, label %9

9:                                                ; preds = %2, %13
  %10 = phi %"struct.base::PartitionRoot"** [ %14, %13 ], [ %4, %2 ]
  %11 = load %"struct.base::PartitionRoot"*, %"struct.base::PartitionRoot"** %10, align 8
  %12 = icmp eq %"struct.base::PartitionRoot"* %11, %1
  br i1 %12, label %16, label %13

13:                                               ; preds = %9
  %14 = getelementptr inbounds %"struct.base::PartitionRoot"*, %"struct.base::PartitionRoot"** %10, i64 1
  %15 = icmp eq %"struct.base::PartitionRoot"** %14, %7
  br i1 %15, label %21, label %9

16:                                               ; preds = %9, %2
  %17 = phi %"struct.base::PartitionRoot"** [ %4, %2 ], [ %10, %9 ]
  %18 = icmp eq %"struct.base::PartitionRoot"** %17, %7
  br i1 %18, label %21, label %19, !prof !6

19:                                               ; preds = %16
  tail call void @_ZN7logging8RawCheckEPKc(i8* getelementptr inbounds ([129 x i8], [129 x i8]* @.str.1, i64 0, i64 0)) #17
  %20 = load i64, i64* %5, align 8
  br label %21

21:                                               ; preds = %13, %16, %19
  %22 = phi i64 [ %6, %16 ], [ %20, %19 ], [ %6, %13 ]
  %23 = getelementptr inbounds %"class.base::internal::PCScanInternal::Roots", %"class.base::internal::PCScanInternal::Roots"* %0, i64 0, i32 0, i32 0, i64 %22
  %24 = bitcast %"struct.base::PartitionRoot"** %23 to i64*
  store i64 %3, i64* %24, align 8
  %25 = load i64, i64* %5, align 8
  %26 = add i64 %25, 1
  store i64 %26, i64* %5, align 8
  %27 = icmp eq i64 %26, 8
  br i1 %27, label %28, label %29, !prof !7

28:                                               ; preds = %21
  tail call void @_ZN7logging8RawCheckEPKc(i8* getelementptr inbounds ([118 x i8], [118 x i8]* @.str.2, i64 0, i64 0)) #17
  br label %29

29:                                               ; preds = %21, %28
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4base8internal14PCScanInternal5Roots15ClearForTestingEv(%"class.base::internal::PCScanInternal::Roots"*) local_unnamed_addr #3 align 2 {
  %2 = getelementptr inbounds %"class.base::internal::PCScanInternal::Roots", %"class.base::internal::PCScanInternal::Roots"* %0, i64 0, i32 1
  %3 = load i64, i64* %2, align 8
  %4 = shl nuw i64 %3, 3
  %5 = icmp sgt i64 %4, 0
  br i1 %5, label %6, label %8

6:                                                ; preds = %1
  %7 = bitcast %"class.base::internal::PCScanInternal::Roots"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %7, i8 0, i64 %4, i1 false) #17
  br label %8

8:                                                ; preds = %1, %6
  store i64 0, i64* %2, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4base8internal14PCScanInternalC2Ev(%"class.base::internal::PCScanInternal"* nocapture) unnamed_addr #3 align 2 {
  %2 = alloca %"class.base::CPU", align 8
  %3 = getelementptr inbounds %"class.base::internal::PCScanInternal", %"class.base::internal::PCScanInternal"* %0, i64 0, i32 6
  %4 = getelementptr inbounds %"class.base::internal::PCScanInternal", %"class.base::internal::PCScanInternal"* %0, i64 0, i32 6, i32 0, i32 3
  %5 = bitcast %"class.std::__1::__compressed_pair.84"* %4 to i32*
  %6 = bitcast %"class.std::__1::unordered_map.64"* %3 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %6, i8 0, i64 32, i1 false) #17
  %7 = bitcast %"class.base::internal::PCScanInternal"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %7, i8 0, i64 193, i1 false)
  store i32 1065353216, i32* %5, align 4
  %8 = getelementptr inbounds %"class.base::internal::PCScanInternal", %"class.base::internal::PCScanInternal"* %0, i64 0, i32 7
  %9 = getelementptr inbounds %"class.base::internal::PCScanInternal", %"class.base::internal::PCScanInternal"* %0, i64 0, i32 9
  %10 = bitcast %"class.base::CPU"* %2 to i8*
  %11 = bitcast %"class.std::__1::mutex"* %8 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %11, i8 0, i64 48, i1 false)
  call void @llvm.lifetime.start.p0i8(i64 96, i8* nonnull %10) #17
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %10, i8 -86, i64 96, i1 false) #17
  call void @_ZN4base3CPUC1Ev(%"class.base::CPU"* nonnull %2) #17
  %12 = getelementptr inbounds %"class.base::CPU", %"class.base::CPU"* %2, i64 0, i32 18
  %13 = load i8, i8* %12, align 2, !range !5
  %14 = icmp eq i8 %13, 0
  %15 = getelementptr inbounds %"class.base::CPU", %"class.base::CPU"* %2, i64 0, i32 14
  %16 = load i8, i8* %15, align 2
  %17 = select i1 %14, i8 %16, i8 2
  %18 = getelementptr inbounds %"class.base::CPU", %"class.base::CPU"* %2, i64 0, i32 25
  %19 = bitcast %"class.std::__1::basic_string"* %18 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %20 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %19, i64 0, i32 1, i32 0
  %21 = load i8, i8* %20, align 1
  %22 = icmp slt i8 %21, 0
  br i1 %22, label %23, label %26

23:                                               ; preds = %1
  %24 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %18, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %25 = load i8*, i8** %24, align 8
  call void @_ZdlPv(i8* %25) #19
  br label %26

26:                                               ; preds = %23, %1
  %27 = getelementptr inbounds %"class.base::CPU", %"class.base::CPU"* %2, i64 0, i32 24
  %28 = bitcast %"class.std::__1::basic_string"* %27 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %29 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %28, i64 0, i32 1, i32 0
  %30 = load i8, i8* %29, align 1
  %31 = icmp slt i8 %30, 0
  br i1 %31, label %32, label %35

32:                                               ; preds = %26
  %33 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %27, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %34 = load i8*, i8** %33, align 8
  call void @_ZdlPv(i8* %34) #19
  br label %35

35:                                               ; preds = %26, %32
  call void @llvm.lifetime.end.p0i8(i64 96, i8* nonnull %10) #17
  store i8 %17, i8* %9, align 8
  %36 = getelementptr inbounds %"class.base::internal::PCScanInternal", %"class.base::internal::PCScanInternal"* %0, i64 0, i32 11
  %37 = bitcast %"class.std::__1::unique_ptr.88"* %36 to i64*
  store i64 0, i64* %37, align 8
  %38 = getelementptr inbounds %"class.base::internal::PCScanInternal", %"class.base::internal::PCScanInternal"* %0, i64 0, i32 12
  store i8 0, i8* %38, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4base8internal14PCScanInternalD2Ev(%"class.base::internal::PCScanInternal"*) unnamed_addr #3 align 2 {
  %2 = getelementptr inbounds %"class.base::internal::PCScanInternal", %"class.base::internal::PCScanInternal"* %0, i64 0, i32 11, i32 0, i32 0, i32 0
  %3 = load %"class.base::internal::WriteProtector"*, %"class.base::internal::WriteProtector"** %2, align 8
  store %"class.base::internal::WriteProtector"* null, %"class.base::internal::WriteProtector"** %2, align 8
  %4 = icmp eq %"class.base::internal::WriteProtector"* %3, null
  br i1 %4, label %10, label %5

5:                                                ; preds = %1
  %6 = bitcast %"class.base::internal::WriteProtector"* %3 to void (%"class.base::internal::WriteProtector"*)***
  %7 = load void (%"class.base::internal::WriteProtector"*)**, void (%"class.base::internal::WriteProtector"*)*** %6, align 8
  %8 = getelementptr inbounds void (%"class.base::internal::WriteProtector"*)*, void (%"class.base::internal::WriteProtector"*)** %7, i64 1
  %9 = load void (%"class.base::internal::WriteProtector"*)*, void (%"class.base::internal::WriteProtector"*)** %8, align 8
  tail call void %9(%"class.base::internal::WriteProtector"* nonnull %3) #17
  br label %10

10:                                               ; preds = %1, %5
  %11 = getelementptr inbounds %"class.base::internal::PCScanInternal", %"class.base::internal::PCScanInternal"* %0, i64 0, i32 6, i32 0, i32 1
  %12 = getelementptr inbounds %"class.std::__1::__compressed_pair.76", %"class.std::__1::__compressed_pair.76"* %11, i64 0, i32 0, i32 0, i32 0
  %13 = load %"struct.std::__1::__hash_node_base.69"*, %"struct.std::__1::__hash_node_base.69"** %12, align 8
  %14 = bitcast %"class.std::__1::__compressed_pair.76"* %11 to %"class.base::internal::MetadataAllocator.79"*
  %15 = icmp eq %"struct.std::__1::__hash_node_base.69"* %13, null
  br i1 %15, label %22, label %16

16:                                               ; preds = %10, %16
  %17 = phi %"struct.std::__1::__hash_node_base.69"* [ %19, %16 ], [ %13, %10 ]
  %18 = getelementptr inbounds %"struct.std::__1::__hash_node_base.69", %"struct.std::__1::__hash_node_base.69"* %17, i64 0, i32 0
  %19 = load %"struct.std::__1::__hash_node_base.69"*, %"struct.std::__1::__hash_node_base.69"** %18, align 8
  %20 = bitcast %"struct.std::__1::__hash_node_base.69"* %17 to %"struct.std::__1::__hash_node.242"*
  tail call void @_ZN4base8internal17MetadataAllocatorINSt3__111__hash_nodeINS2_17__hash_value_typeIiPvEES5_EEE10deallocateEPS7_m(%"class.base::internal::MetadataAllocator.79"* %14, %"struct.std::__1::__hash_node.242"* nonnull %20, i64 1) #17
  %21 = icmp eq %"struct.std::__1::__hash_node_base.69"* %19, null
  br i1 %21, label %22, label %16

22:                                               ; preds = %16, %10
  %23 = getelementptr inbounds %"class.base::internal::PCScanInternal", %"class.base::internal::PCScanInternal"* %0, i64 0, i32 6, i32 0, i32 0, i32 0, i32 0, i32 0
  %24 = load %"struct.std::__1::__hash_node_base.69"**, %"struct.std::__1::__hash_node_base.69"*** %23, align 8
  store %"struct.std::__1::__hash_node_base.69"** null, %"struct.std::__1::__hash_node_base.69"*** %23, align 8
  %25 = icmp eq %"struct.std::__1::__hash_node_base.69"** %24, null
  br i1 %25, label %31, label %26

26:                                               ; preds = %22
  %27 = getelementptr inbounds %"class.base::internal::PCScanInternal", %"class.base::internal::PCScanInternal"* %0, i64 0, i32 6, i32 0, i32 0, i32 0, i32 1, i32 0
  %28 = bitcast %"class.std::__1::__bucket_list_deallocator.71"* %27 to %"class.base::internal::MetadataAllocator.74"*
  %29 = getelementptr inbounds %"class.std::__1::__bucket_list_deallocator.71", %"class.std::__1::__bucket_list_deallocator.71"* %27, i64 0, i32 0, i32 0, i32 0
  %30 = load i64, i64* %29, align 8
  tail call void @_ZN4base8internal17MetadataAllocatorIPNSt3__116__hash_node_baseIPNS2_11__hash_nodeINS2_17__hash_value_typeIiPvEES6_EEEEE10deallocateEPSB_m(%"class.base::internal::MetadataAllocator.74"* %28, %"struct.std::__1::__hash_node_base.69"** nonnull %24, i64 %30) #17
  br label %31

31:                                               ; preds = %22, %26
  %32 = getelementptr inbounds %"class.base::internal::PCScanInternal", %"class.base::internal::PCScanInternal"* %0, i64 0, i32 0, i32 0
  %33 = load %"class.base::internal::PCScanTask"*, %"class.base::internal::PCScanTask"** %32, align 8
  %34 = icmp eq %"class.base::internal::PCScanTask"* %33, null
  br i1 %34, label %41, label %35

35:                                               ; preds = %31
  %36 = getelementptr inbounds %"class.base::internal::PCScanTask", %"class.base::internal::PCScanTask"* %33, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %37 = atomicrmw sub i32* %36, i32 1 acq_rel
  %38 = icmp eq i32 %37, 1
  br i1 %38, label %39, label %41

39:                                               ; preds = %35
  tail call void @_ZN4base8internal10PCScanTaskD2Ev(%"class.base::internal::PCScanTask"* nonnull %33) #17
  %40 = bitcast %"class.base::internal::PCScanTask"* %33 to i8*
  tail call void @_ZN4base8internal34AllocatedOnPCScanMetadataPartitiondlEPv(i8* nonnull %40) #17
  br label %41

41:                                               ; preds = %31, %35, %39
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4base8internal14PCScanInternal10InitializeENS0_6PCScan25WantedWriteProtectionModeE(%"class.base::internal::PCScanInternal"* nocapture, i8 zeroext) local_unnamed_addr #3 align 2 {
  tail call void @_ZN4base8internal21PartitionAddressSpace4InitEv() #17
  %3 = load i8*, i8** bitcast (i64* @_ZN4base8internal21PartitionAddressSpace22brp_pool_base_address_E to i8**), align 8
  tail call void @_ZN4base19RecommitSystemPagesEPvmNS_30PageAccessibilityConfigurationENS_28PageAccessibilityDispositionE(i8* %3, i64 2097152, i32 2, i32 0) #17
  %4 = icmp eq i8 %1, 1
  br i1 %4, label %5, label %17

5:                                                ; preds = %2
  %6 = tail call i8* @_ZN4base8internal34AllocatedOnPCScanMetadataPartitionnwEm(i64 16) #17
  %7 = bitcast i8* %6 to %"class.base::internal::UserFaultFDWriteProtector"*
  tail call void @_ZN4base8internal25UserFaultFDWriteProtectorC1Ev(%"class.base::internal::UserFaultFDWriteProtector"* %7) #17
  %8 = getelementptr inbounds %"class.base::internal::PCScanInternal", %"class.base::internal::PCScanInternal"* %0, i64 0, i32 11, i32 0, i32 0, i32 0
  %9 = load %"class.base::internal::WriteProtector"*, %"class.base::internal::WriteProtector"** %8, align 8
  %10 = bitcast %"class.base::internal::WriteProtector"** %8 to i8**
  store i8* %6, i8** %10, align 8
  %11 = icmp eq %"class.base::internal::WriteProtector"* %9, null
  br i1 %11, label %29, label %12

12:                                               ; preds = %5
  %13 = bitcast %"class.base::internal::WriteProtector"* %9 to void (%"class.base::internal::WriteProtector"*)***
  %14 = load void (%"class.base::internal::WriteProtector"*)**, void (%"class.base::internal::WriteProtector"*)*** %13, align 8
  %15 = getelementptr inbounds void (%"class.base::internal::WriteProtector"*)*, void (%"class.base::internal::WriteProtector"*)** %14, i64 1
  %16 = load void (%"class.base::internal::WriteProtector"*)*, void (%"class.base::internal::WriteProtector"*)** %15, align 8
  tail call void %16(%"class.base::internal::WriteProtector"* nonnull %9) #17
  br label %29

17:                                               ; preds = %2
  %18 = tail call i8* @_ZN4base8internal34AllocatedOnPCScanMetadataPartitionnwEm(i64 8) #17
  %19 = bitcast i8* %18 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVN4base8internal16NoWriteProtectorE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %19, align 8
  %20 = getelementptr inbounds %"class.base::internal::PCScanInternal", %"class.base::internal::PCScanInternal"* %0, i64 0, i32 11, i32 0, i32 0, i32 0
  %21 = load %"class.base::internal::WriteProtector"*, %"class.base::internal::WriteProtector"** %20, align 8
  %22 = bitcast %"class.base::internal::WriteProtector"** %20 to i8**
  store i8* %18, i8** %22, align 8
  %23 = icmp eq %"class.base::internal::WriteProtector"* %21, null
  br i1 %23, label %29, label %24

24:                                               ; preds = %17
  %25 = bitcast %"class.base::internal::WriteProtector"* %21 to void (%"class.base::internal::WriteProtector"*)***
  %26 = load void (%"class.base::internal::WriteProtector"*)**, void (%"class.base::internal::WriteProtector"*)*** %25, align 8
  %27 = getelementptr inbounds void (%"class.base::internal::WriteProtector"*)*, void (%"class.base::internal::WriteProtector"*)** %26, i64 1
  %28 = load void (%"class.base::internal::WriteProtector"*)*, void (%"class.base::internal::WriteProtector"*)** %27, align 8
  tail call void %28(%"class.base::internal::WriteProtector"* nonnull %21) #17
  br label %29

29:                                               ; preds = %17, %24, %5, %12
  %30 = getelementptr inbounds %"class.base::internal::PCScanInternal", %"class.base::internal::PCScanInternal"* %0, i64 0, i32 11, i32 0, i32 0, i32 0
  %31 = load %"class.base::internal::WriteProtector"*, %"class.base::internal::WriteProtector"** %30, align 8
  %32 = bitcast %"class.base::internal::WriteProtector"* %31 to i8 (%"class.base::internal::WriteProtector"*)***
  %33 = load i8 (%"class.base::internal::WriteProtector"*)**, i8 (%"class.base::internal::WriteProtector"*)*** %32, align 8
  %34 = getelementptr inbounds i8 (%"class.base::internal::WriteProtector"*)*, i8 (%"class.base::internal::WriteProtector"*)** %33, i64 4
  %35 = load i8 (%"class.base::internal::WriteProtector"*)*, i8 (%"class.base::internal::WriteProtector"*)** %34, align 8
  %36 = tail call zeroext i8 %35(%"class.base::internal::WriteProtector"* %31) #17
  tail call void @_ZN4base8internal6PCScan12SetClearTypeENS1_9ClearTypeE(i8 zeroext %36) #17
  %37 = getelementptr inbounds %"class.base::internal::PCScanInternal", %"class.base::internal::PCScanInternal"* %0, i64 0, i32 12
  store i8 1, i8* %37, align 8
  ret void
}

declare void @_ZN4base8internal6PCScan12SetClearTypeENS1_9ClearTypeE(i8 zeroext) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4base8internal14PCScanInternal11PerformScanENS0_6PCScan14InvocationModeE(%"class.base::internal::PCScanInternal"* nocapture readnone, i32) local_unnamed_addr #3 align 2 {
  %3 = cmpxchg i8* getelementptr inbounds (%"class.base::internal::PCScan", %"class.base::internal::PCScan"* @_ZN4base8internal6PCScan9instance_E, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0), i8 0, i8 1 acq_rel monotonic
  %4 = extractvalue { i8, i1 } %3, 1
  br i1 %4, label %5, label %79

5:                                                ; preds = %2
  %6 = load %"class.base::internal::PCScanSchedulingBackend"*, %"class.base::internal::PCScanSchedulingBackend"** getelementptr inbounds (%"class.base::internal::PCScan", %"class.base::internal::PCScan"* @_ZN4base8internal6PCScan9instance_E, i64 0, i32 0, i32 2), align 8
  %7 = bitcast %"class.base::internal::PCScanSchedulingBackend"* %6 to void (%"class.base::internal::PCScanSchedulingBackend"*)***
  %8 = load void (%"class.base::internal::PCScanSchedulingBackend"*)**, void (%"class.base::internal::PCScanSchedulingBackend"*)*** %7, align 8
  %9 = getelementptr inbounds void (%"class.base::internal::PCScanSchedulingBackend"*)*, void (%"class.base::internal::PCScanSchedulingBackend"*)** %8, i64 1
  %10 = load void (%"class.base::internal::PCScanSchedulingBackend"*)*, void (%"class.base::internal::PCScanSchedulingBackend"*)** %9, align 8
  tail call void %10(%"class.base::internal::PCScanSchedulingBackend"* %6) #17
  %11 = tail call i8* @_ZN4base8internal34AllocatedOnPCScanMetadataPartitionnwEm(i64 440) #17
  %12 = bitcast i8* %11 to %"class.base::internal::PCScanTask"*
  %13 = bitcast i8* %11 to i32*
  store i32 0, i32* %13, align 4
  %14 = getelementptr inbounds i8, i8* %11, i64 8
  %15 = bitcast i8* %14 to i64*
  %16 = load atomic i64, i64* getelementptr inbounds (%"class.base::internal::PCScan", %"class.base::internal::PCScan"* @_ZN4base8internal6PCScan9instance_E, i64 0, i32 0, i32 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 8
  store i64 %16, i64* %15, align 8
  %17 = getelementptr inbounds i8, i8* %11, i64 24
  %18 = getelementptr inbounds i8, i8* %11, i64 16
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %17, i8 0, i64 16, i1 false) #17
  %19 = bitcast i8* %18 to i8**
  store i8* %17, i8** %19, align 8
  %20 = getelementptr inbounds i8, i8* %11, i64 40
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %20, i8 0, i64 25, i1 false) #17
  %21 = getelementptr inbounds i8, i8* %11, i64 72
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %21, i8 0, i64 25, i1 false) #17
  %22 = getelementptr inbounds i8, i8* %11, i64 104
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %22, i8 0, i64 25, i1 false) #17
  %23 = getelementptr inbounds i8, i8* %11, i64 136
  %24 = bitcast i8* %23 to i64*
  store i64 0, i64* %24, align 8
  %25 = getelementptr inbounds i8, i8* %11, i64 144
  %26 = bitcast i8* %25 to %"class.base::internal::StatsCollector"*
  %27 = tail call dereferenceable(312) %"class.base::internal::PCScanInternal"* @_ZN4base8internal14PCScanInternal8InstanceEv() #17
  %28 = getelementptr inbounds %"class.base::internal::PCScanInternal", %"class.base::internal::PCScanInternal"* %27, i64 0, i32 8
  %29 = load i8*, i8** %28, align 8
  tail call void @_ZN4base8internal14StatsCollectorC1EPKc(%"class.base::internal::StatsCollector"* %26, i8* %29) #17
  %30 = getelementptr inbounds i8, i8* %11, i64 328
  %31 = getelementptr inbounds i8, i8* %11, i64 432
  %32 = bitcast i8* %31 to %"class.base::internal::PCScan"**
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %30, i8 0, i64 104, i1 false) #17
  store %"class.base::internal::PCScan"* @_ZN4base8internal6PCScan9instance_E, %"class.base::internal::PCScan"** %32, align 8
  %33 = icmp eq i8* %11, null
  br i1 %33, label %34, label %36

34:                                               ; preds = %5
  %35 = tail call dereferenceable(312) %"class.base::internal::PCScanInternal"* @_ZN4base8internal14PCScanInternal8InstanceEv()
  br label %40

36:                                               ; preds = %5
  %37 = atomicrmw add i32* %13, i32 1 monotonic
  %38 = tail call dereferenceable(312) %"class.base::internal::PCScanInternal"* @_ZN4base8internal14PCScanInternal8InstanceEv()
  %39 = atomicrmw add i32* %13, i32 1 monotonic
  br label %40

40:                                               ; preds = %34, %36
  %41 = phi %"class.base::internal::PCScanInternal"* [ %35, %34 ], [ %38, %36 ]
  %42 = ptrtoint i8* %11 to i64
  %43 = getelementptr inbounds %"class.base::internal::PCScanInternal", %"class.base::internal::PCScanInternal"* %41, i64 0, i32 1
  tail call void @_ZNSt3__15mutex4lockEv(%"class.std::__1::mutex"* %43) #17
  %44 = bitcast %"class.base::internal::PCScanInternal"* %41 to i64*
  %45 = getelementptr inbounds %"class.base::internal::PCScanInternal", %"class.base::internal::PCScanInternal"* %41, i64 0, i32 0, i32 0
  %46 = load %"class.base::internal::PCScanTask"*, %"class.base::internal::PCScanTask"** %45, align 8
  store i64 %42, i64* %44, align 8
  %47 = icmp eq %"class.base::internal::PCScanTask"* %46, null
  br i1 %47, label %54, label %48

48:                                               ; preds = %40
  %49 = getelementptr inbounds %"class.base::internal::PCScanTask", %"class.base::internal::PCScanTask"* %46, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %50 = atomicrmw sub i32* %49, i32 1 acq_rel
  %51 = icmp eq i32 %50, 1
  br i1 %51, label %52, label %54

52:                                               ; preds = %48
  tail call void @_ZN4base8internal10PCScanTaskD2Ev(%"class.base::internal::PCScanTask"* nonnull %46) #17
  %53 = bitcast %"class.base::internal::PCScanTask"* %46 to i8*
  tail call void @_ZN4base8internal34AllocatedOnPCScanMetadataPartitiondlEPv(i8* nonnull %53) #17
  br label %54

54:                                               ; preds = %40, %48, %52
  tail call void @_ZNSt3__15mutex6unlockEv(%"class.std::__1::mutex"* %43) #17
  switch i32 %1, label %73 [
    i32 3, label %55
    i32 1, label %56
  ], !prof !16

55:                                               ; preds = %54
  store atomic i8 2, i8* getelementptr inbounds (%"class.base::internal::PCScan", %"class.base::internal::PCScan"* @_ZN4base8internal6PCScan9instance_E, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0) release, align 8
  br label %74

56:                                               ; preds = %54
  %57 = load atomic i8, i8* bitcast (i64* @_ZGVZN4base8internal6PCScan12PCScanThread8InstanceEvE8instance to i8*) acquire, align 8
  %58 = icmp eq i8 %57, 0
  br i1 %58, label %59, label %63, !prof !8

59:                                               ; preds = %56
  %60 = tail call i32 @__cxa_guard_acquire(i64* nonnull @_ZGVZN4base8internal6PCScan12PCScanThread8InstanceEvE8instance) #17
  %61 = icmp eq i32 %60, 0
  br i1 %61, label %63, label %62

62:                                               ; preds = %59
  tail call void @_ZN4base8internal6PCScan12PCScanThreadC2Ev(%"class.base::internal::PCScan::PCScanThread"* bitcast (%"class.base::NoDestructor.156"* @_ZZN4base8internal6PCScan12PCScanThread8InstanceEvE8instance to %"class.base::internal::PCScan::PCScanThread"*)) #17
  tail call void @__cxa_guard_release(i64* nonnull @_ZGVZN4base8internal6PCScan12PCScanThread8InstanceEvE8instance) #17
  br label %63

63:                                               ; preds = %56, %59, %62
  tail call void @_ZNSt3__15mutex4lockEv(%"class.std::__1::mutex"* bitcast (%"class.base::NoDestructor.156"* @_ZZN4base8internal6PCScan12PCScanThread8InstanceEvE8instance to %"class.std::__1::mutex"*)) #17
  %64 = load %"class.base::internal::PCScanTask"*, %"class.base::internal::PCScanTask"** bitcast (i8* getelementptr inbounds (%"class.base::NoDestructor.156", %"class.base::NoDestructor.156"* @_ZZN4base8internal6PCScan12PCScanThread8InstanceEvE8instance, i64 0, i32 0, i64 88) to %"class.base::internal::PCScanTask"**), align 8
  store i64 %42, i64* bitcast (i8* getelementptr inbounds (%"class.base::NoDestructor.156", %"class.base::NoDestructor.156"* @_ZZN4base8internal6PCScan12PCScanThread8InstanceEvE8instance, i64 0, i32 0, i64 88) to i64*), align 8
  %65 = icmp eq %"class.base::internal::PCScanTask"* %64, null
  br i1 %65, label %72, label %66

66:                                               ; preds = %63
  %67 = getelementptr inbounds %"class.base::internal::PCScanTask", %"class.base::internal::PCScanTask"* %64, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %68 = atomicrmw sub i32* %67, i32 1 acq_rel
  %69 = icmp eq i32 %68, 1
  br i1 %69, label %70, label %72

70:                                               ; preds = %66
  tail call void @_ZN4base8internal10PCScanTaskD2Ev(%"class.base::internal::PCScanTask"* nonnull %64) #17
  %71 = bitcast %"class.base::internal::PCScanTask"* %64 to i8*
  tail call void @_ZN4base8internal34AllocatedOnPCScanMetadataPartitiondlEPv(i8* nonnull %71) #17
  br label %72

72:                                               ; preds = %70, %66, %63
  store i64 0, i64* bitcast (i8* getelementptr inbounds (%"class.base::NoDestructor.156", %"class.base::NoDestructor.156"* @_ZZN4base8internal6PCScan12PCScanThread8InstanceEvE8instance, i64 0, i32 0, i64 96) to i64*), align 8
  tail call void @_ZNSt3__15mutex6unlockEv(%"class.std::__1::mutex"* bitcast (%"class.base::NoDestructor.156"* @_ZZN4base8internal6PCScan12PCScanThread8InstanceEvE8instance to %"class.std::__1::mutex"*)) #17
  tail call void @_ZNSt3__118condition_variable10notify_oneEv(%"class.std::__1::condition_variable"* bitcast (i8* getelementptr inbounds (%"class.base::NoDestructor.156", %"class.base::NoDestructor.156"* @_ZZN4base8internal6PCScan12PCScanThread8InstanceEvE8instance, i64 0, i32 0, i64 40) to %"class.std::__1::condition_variable"*)) #17
  br label %79

73:                                               ; preds = %54
  tail call void @_ZN4base8internal10PCScanTask14RunFromScannerEv(%"class.base::internal::PCScanTask"* %12)
  br label %74

74:                                               ; preds = %73, %55
  br i1 %33, label %79, label %75

75:                                               ; preds = %74
  %76 = atomicrmw sub i32* %13, i32 1 acq_rel
  %77 = icmp eq i32 %76, 1
  br i1 %77, label %78, label %79

78:                                               ; preds = %75
  tail call void @_ZN4base8internal10PCScanTaskD2Ev(%"class.base::internal::PCScanTask"* nonnull %12) #17
  tail call void @_ZN4base8internal34AllocatedOnPCScanMetadataPartitiondlEPv(i8* nonnull %11) #17
  br label %79

79:                                               ; preds = %78, %75, %74, %72, %2
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4base8internal14PCScanInternal20SetCurrentPCScanTaskE13scoped_refptrINS0_10PCScanTaskEE(%"class.base::internal::PCScanInternal"*, %"class.base::internal::PCScanTask"*) local_unnamed_addr #3 align 2 {
  %3 = ptrtoint %"class.base::internal::PCScanTask"* %1 to i64
  %4 = getelementptr inbounds %"class.base::internal::PCScanInternal", %"class.base::internal::PCScanInternal"* %0, i64 0, i32 1
  tail call void @_ZNSt3__15mutex4lockEv(%"class.std::__1::mutex"* %4) #17
  %5 = bitcast %"class.base::internal::PCScanInternal"* %0 to i64*
  %6 = getelementptr inbounds %"class.base::internal::PCScanInternal", %"class.base::internal::PCScanInternal"* %0, i64 0, i32 0, i32 0
  %7 = load %"class.base::internal::PCScanTask"*, %"class.base::internal::PCScanTask"** %6, align 8
  store i64 %3, i64* %5, align 8
  %8 = icmp eq %"class.base::internal::PCScanTask"* %7, null
  br i1 %8, label %15, label %9

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"class.base::internal::PCScanTask", %"class.base::internal::PCScanTask"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %11 = atomicrmw sub i32* %10, i32 1 acq_rel
  %12 = icmp eq i32 %11, 1
  br i1 %12, label %13, label %15

13:                                               ; preds = %9
  tail call void @_ZN4base8internal10PCScanTaskD2Ev(%"class.base::internal::PCScanTask"* nonnull %7) #17
  %14 = bitcast %"class.base::internal::PCScanTask"* %7 to i8*
  tail call void @_ZN4base8internal34AllocatedOnPCScanMetadataPartitiondlEPv(i8* nonnull %14) #17
  br label %15

15:                                               ; preds = %13, %9, %2
  tail call void @_ZNSt3__15mutex6unlockEv(%"class.std::__1::mutex"* %4) #17
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4base8internal14PCScanInternal19PerformScanIfNeededENS0_6PCScan14InvocationModeE(%"class.base::internal::PCScanInternal"* nocapture readonly, i32) local_unnamed_addr #3 align 2 {
  %3 = getelementptr inbounds %"class.base::internal::PCScanInternal", %"class.base::internal::PCScanInternal"* %0, i64 0, i32 2, i32 1
  %4 = load i64, i64* %3, align 8
  %5 = icmp eq i64 %4, 0
  br i1 %5, label %16, label %6

6:                                                ; preds = %2
  %7 = icmp eq i32 %1, 2
  br i1 %7, label %15, label %8

8:                                                ; preds = %6
  %9 = load %"class.base::internal::PCScanSchedulingBackend"*, %"class.base::internal::PCScanSchedulingBackend"** getelementptr inbounds (%"class.base::internal::PCScan", %"class.base::internal::PCScan"* @_ZN4base8internal6PCScan9instance_E, i64 0, i32 0, i32 2), align 8
  %10 = getelementptr inbounds %"class.base::internal::PCScanSchedulingBackend", %"class.base::internal::PCScanSchedulingBackend"* %9, i64 0, i32 1
  %11 = load %"class.base::internal::PCScanScheduler"*, %"class.base::internal::PCScanScheduler"** %10, align 8
  %12 = getelementptr inbounds %"class.base::internal::PCScanScheduler", %"class.base::internal::PCScanScheduler"* %11, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %13 = load atomic i64, i64* %12 monotonic, align 8
  %14 = icmp ugt i64 %13, 1048576
  br i1 %14, label %15, label %16

15:                                               ; preds = %8, %6
  tail call void @_ZN4base8internal14PCScanInternal11PerformScanENS0_6PCScan14InvocationModeE(%"class.base::internal::PCScanInternal"* undef, i32 %1)
  br label %16

16:                                               ; preds = %8, %15, %2
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4base8internal14PCScanInternal18PerformDelayedScanENS_9TimeDeltaE(%"class.base::internal::PCScanInternal"* nocapture readnone, i64) local_unnamed_addr #3 align 2 {
  %3 = load atomic i8, i8* bitcast (i64* @_ZGVZN4base8internal6PCScan12PCScanThread8InstanceEvE8instance to i8*) acquire, align 8
  %4 = icmp eq i8 %3, 0
  br i1 %4, label %5, label %9, !prof !8

5:                                                ; preds = %2
  %6 = tail call i32 @__cxa_guard_acquire(i64* nonnull @_ZGVZN4base8internal6PCScan12PCScanThread8InstanceEvE8instance) #17
  %7 = icmp eq i32 %6, 0
  br i1 %7, label %9, label %8

8:                                                ; preds = %5
  tail call void @_ZN4base8internal6PCScan12PCScanThreadC2Ev(%"class.base::internal::PCScan::PCScanThread"* bitcast (%"class.base::NoDestructor.156"* @_ZZN4base8internal6PCScan12PCScanThread8InstanceEvE8instance to %"class.base::internal::PCScan::PCScanThread"*)) #17
  tail call void @__cxa_guard_release(i64* nonnull @_ZGVZN4base8internal6PCScan12PCScanThread8InstanceEvE8instance) #17
  br label %9

9:                                                ; preds = %2, %5, %8
  tail call void @_ZNSt3__15mutex4lockEv(%"class.std::__1::mutex"* bitcast (%"class.base::NoDestructor.156"* @_ZZN4base8internal6PCScan12PCScanThread8InstanceEvE8instance to %"class.std::__1::mutex"*)) #17
  %10 = load %"class.base::internal::PCScanTask"*, %"class.base::internal::PCScanTask"** bitcast (i8* getelementptr inbounds (%"class.base::NoDestructor.156", %"class.base::NoDestructor.156"* @_ZZN4base8internal6PCScan12PCScanThread8InstanceEvE8instance, i64 0, i32 0, i64 88) to %"class.base::internal::PCScanTask"**), align 8
  %11 = icmp eq %"class.base::internal::PCScanTask"* %10, null
  br i1 %11, label %12, label %13

12:                                               ; preds = %9
  store i64 %1, i64* bitcast (i8* getelementptr inbounds (%"class.base::NoDestructor.156", %"class.base::NoDestructor.156"* @_ZZN4base8internal6PCScan12PCScanThread8InstanceEvE8instance, i64 0, i32 0, i64 96) to i64*), align 8
  tail call void @_ZNSt3__15mutex6unlockEv(%"class.std::__1::mutex"* bitcast (%"class.base::NoDestructor.156"* @_ZZN4base8internal6PCScan12PCScanThread8InstanceEvE8instance to %"class.std::__1::mutex"*)) #17
  tail call void @_ZNSt3__118condition_variable10notify_oneEv(%"class.std::__1::condition_variable"* bitcast (i8* getelementptr inbounds (%"class.base::NoDestructor.156", %"class.base::NoDestructor.156"* @_ZZN4base8internal6PCScan12PCScanThread8InstanceEvE8instance, i64 0, i32 0, i64 40) to %"class.std::__1::condition_variable"*)) #17
  br label %14

13:                                               ; preds = %9
  tail call void @_ZNSt3__15mutex6unlockEv(%"class.std::__1::mutex"* bitcast (%"class.base::NoDestructor.156"* @_ZZN4base8internal6PCScan12PCScanThread8InstanceEvE8instance to %"class.std::__1::mutex"*)) #17
  br label %14

14:                                               ; preds = %12, %13
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4base8internal14PCScanInternal8JoinScanEv(%"class.base::internal::PCScanInternal"*) local_unnamed_addr #3 align 2 {
  %2 = getelementptr inbounds %"class.base::internal::PCScanInternal", %"class.base::internal::PCScanInternal"* %0, i64 0, i32 1
  tail call void @_ZNSt3__15mutex4lockEv(%"class.std::__1::mutex"* %2) #17
  %3 = getelementptr inbounds %"class.base::internal::PCScanInternal", %"class.base::internal::PCScanInternal"* %0, i64 0, i32 0, i32 0
  %4 = load %"class.base::internal::PCScanTask"*, %"class.base::internal::PCScanTask"** %3, align 8
  %5 = icmp eq %"class.base::internal::PCScanTask"* %4, null
  br i1 %5, label %6, label %7

6:                                                ; preds = %1
  tail call void @_ZNSt3__15mutex6unlockEv(%"class.std::__1::mutex"* %2) #17
  br label %14

7:                                                ; preds = %1
  %8 = getelementptr inbounds %"class.base::internal::PCScanTask", %"class.base::internal::PCScanTask"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %9 = atomicrmw add i32* %8, i32 1 monotonic
  tail call void @_ZNSt3__15mutex6unlockEv(%"class.std::__1::mutex"* %2) #17
  tail call void @_ZN4base8internal10PCScanTask14RunFromMutatorEv(%"class.base::internal::PCScanTask"* nonnull %4)
  %10 = atomicrmw sub i32* %8, i32 1 acq_rel
  %11 = icmp eq i32 %10, 1
  br i1 %11, label %12, label %14

12:                                               ; preds = %7
  tail call void @_ZN4base8internal10PCScanTaskD2Ev(%"class.base::internal::PCScanTask"* nonnull %4) #17
  %13 = bitcast %"class.base::internal::PCScanTask"* %4 to i8*
  tail call void @_ZN4base8internal34AllocatedOnPCScanMetadataPartitiondlEPv(i8* nonnull %13) #17
  br label %14

14:                                               ; preds = %6, %7, %12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.base::internal::PCScanTask"* @_ZNK4base8internal14PCScanInternal17CurrentPCScanTaskEv(%"class.base::internal::PCScanInternal"*) local_unnamed_addr #3 align 2 {
  %2 = getelementptr inbounds %"class.base::internal::PCScanInternal", %"class.base::internal::PCScanInternal"* %0, i64 0, i32 1
  tail call void @_ZNSt3__15mutex4lockEv(%"class.std::__1::mutex"* %2) #17
  %3 = getelementptr inbounds %"class.base::internal::PCScanInternal", %"class.base::internal::PCScanInternal"* %0, i64 0, i32 0, i32 0
  %4 = load %"class.base::internal::PCScanTask"*, %"class.base::internal::PCScanTask"** %3, align 8
  %5 = icmp eq %"class.base::internal::PCScanTask"* %4, null
  br i1 %5, label %9, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.base::internal::PCScanTask", %"class.base::internal::PCScanTask"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %8 = atomicrmw add i32* %7, i32 1 monotonic
  br label %9

9:                                                ; preds = %1, %6
  tail call void @_ZNSt3__15mutex6unlockEv(%"class.std::__1::mutex"* %2) #17
  ret %"class.base::internal::PCScanTask"* %4
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4base8internal14PCScanInternal21RegisterScannableRootEPNS_13PartitionRootILb1EEE(%"class.base::internal::PCScanInternal"*, %"struct.base::PartitionRoot"*) local_unnamed_addr #3 align 2 {
  %3 = getelementptr inbounds %"struct.base::PartitionRoot", %"struct.base::PartitionRoot"* %1, i64 0, i32 0
  %4 = load i8, i8* %3, align 8
  %5 = icmp eq i8 %4, 0
  br i1 %5, label %6, label %7, !prof !7

6:                                                ; preds = %2
  tail call void @_ZN7logging8RawCheckEPKc(i8* getelementptr inbounds ([117 x i8], [117 x i8]* @.str.3, i64 0, i64 0)) #17
  br label %7

7:                                                ; preds = %2, %6
  %8 = getelementptr inbounds %"struct.base::PartitionRoot", %"struct.base::PartitionRoot"* %1, i64 0, i32 8
  %9 = getelementptr inbounds %"class.base::internal::MaybeSpinLock", %"class.base::internal::MaybeSpinLock"* %8, i64 0, i32 0
  %10 = getelementptr inbounds %"class.base::internal::MaybeSpinLock", %"class.base::internal::MaybeSpinLock"* %8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  br label %11

11:                                               ; preds = %23, %7
  %12 = phi i32 [ 0, %7 ], [ %24, %23 ]
  %13 = phi i32 [ 1, %7 ], [ %27, %23 ]
  %14 = load atomic i32, i32* %10 monotonic, align 4
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %16, label %19, !prof !9

16:                                               ; preds = %11
  %17 = cmpxchg weak i32* %10, i32 0, i32 1 acquire monotonic
  %18 = extractvalue { i32, i1 } %17, 1
  br i1 %18, label %34, label %19, !prof !6

19:                                               ; preds = %16, %11
  %20 = icmp sgt i32 %13, 0
  br i1 %20, label %29, label %23

21:                                               ; preds = %29
  %22 = add i32 %13, %12
  br label %23

23:                                               ; preds = %21, %19
  %24 = phi i32 [ %12, %19 ], [ %22, %21 ]
  %25 = shl i32 %13, 1
  %26 = icmp slt i32 %25, 64
  %27 = select i1 %26, i32 %25, i32 64
  %28 = icmp slt i32 %24, 1000
  br i1 %28, label %11, label %33

29:                                               ; preds = %19, %29
  %30 = phi i32 [ %31, %29 ], [ 0, %19 ]
  tail call void asm sideeffect "pause", "~{dirflag},~{fpsr},~{flags}"() #17, !srcloc !10
  %31 = add nuw nsw i32 %30, 1
  %32 = icmp eq i32 %31, %13
  br i1 %32, label %21, label %29

33:                                               ; preds = %23
  tail call void @_ZN4base8internal13SpinningMutex8LockSlowEv(%"class.base::internal::SpinningMutex"* %9) #17
  br label %34

34:                                               ; preds = %16, %33
  %35 = getelementptr inbounds %"struct.base::PartitionRoot", %"struct.base::PartitionRoot"* %1, i64 0, i32 1
  %36 = load i8, i8* %35, align 1
  %37 = icmp eq i8 %36, 1
  br i1 %37, label %90, label %38

38:                                               ; preds = %34
  %39 = load i8, i8* %3, align 8
  %40 = icmp eq i8 %39, 2
  br i1 %40, label %41, label %42, !prof !7

41:                                               ; preds = %38
  tail call void @_ZN7logging8RawCheckEPKc(i8* getelementptr inbounds ([118 x i8], [118 x i8]* @.str.4, i64 0, i64 0)) #17
  br label %42

42:                                               ; preds = %38, %41
  %43 = getelementptr inbounds %"struct.base::PartitionRoot", %"struct.base::PartitionRoot"* %1, i64 0, i32 21
  %44 = load %"struct.base::internal::PartitionSuperPageExtentEntry"*, %"struct.base::internal::PartitionSuperPageExtentEntry"** %43, align 8
  %45 = icmp eq %"struct.base::internal::PartitionSuperPageExtentEntry"* %44, null
  br i1 %45, label %63, label %46

46:                                               ; preds = %42, %53
  %47 = phi %"struct.base::internal::PartitionSuperPageExtentEntry"* [ %55, %53 ], [ %44, %42 ]
  %48 = getelementptr inbounds %"struct.base::internal::PartitionSuperPageExtentEntry", %"struct.base::internal::PartitionSuperPageExtentEntry"* %47, i64 0, i32 1
  %49 = load i8*, i8** %48, align 8
  %50 = getelementptr inbounds %"struct.base::internal::PartitionSuperPageExtentEntry", %"struct.base::internal::PartitionSuperPageExtentEntry"* %47, i64 0, i32 2
  %51 = load i8*, i8** %50, align 8
  %52 = icmp eq i8* %49, %51
  br i1 %52, label %53, label %57

53:                                               ; preds = %57, %46
  %54 = getelementptr inbounds %"struct.base::internal::PartitionSuperPageExtentEntry", %"struct.base::internal::PartitionSuperPageExtentEntry"* %47, i64 0, i32 3
  %55 = load %"struct.base::internal::PartitionSuperPageExtentEntry"*, %"struct.base::internal::PartitionSuperPageExtentEntry"** %54, align 8
  %56 = icmp eq %"struct.base::internal::PartitionSuperPageExtentEntry"* %55, null
  br i1 %56, label %63, label %46

57:                                               ; preds = %46, %57
  %58 = phi i8* [ %60, %57 ], [ %49, %46 ]
  %59 = getelementptr inbounds i8, i8* %58, i64 16384
  tail call void @_ZN4base19RecommitSystemPagesEPvmNS_30PageAccessibilityConfigurationENS_28PageAccessibilityDispositionE(i8* %59, i64 32768, i32 2, i32 0) #17
  %60 = getelementptr inbounds i8, i8* %58, i64 2097152
  %61 = load i8*, i8** %50, align 8
  %62 = icmp eq i8* %60, %61
  br i1 %62, label %53, label %57

63:                                               ; preds = %53, %42
  store i8 1, i8* %35, align 1
  store i8 2, i8* %3, align 8
  %64 = ptrtoint %"struct.base::PartitionRoot"* %1 to i64
  %65 = getelementptr inbounds %"class.base::internal::PCScanInternal", %"class.base::internal::PCScanInternal"* %0, i64 0, i32 2, i32 0, i32 0, i64 0
  %66 = getelementptr inbounds %"class.base::internal::PCScanInternal", %"class.base::internal::PCScanInternal"* %0, i64 0, i32 2, i32 1
  %67 = load i64, i64* %66, align 8
  %68 = getelementptr inbounds %"class.base::internal::PCScanInternal", %"class.base::internal::PCScanInternal"* %0, i64 0, i32 2, i32 0, i32 0, i64 %67
  %69 = icmp eq i64 %67, 0
  br i1 %69, label %77, label %70

70:                                               ; preds = %63, %74
  %71 = phi %"struct.base::PartitionRoot"** [ %75, %74 ], [ %65, %63 ]
  %72 = load %"struct.base::PartitionRoot"*, %"struct.base::PartitionRoot"** %71, align 8
  %73 = icmp eq %"struct.base::PartitionRoot"* %72, %1
  br i1 %73, label %77, label %74

74:                                               ; preds = %70
  %75 = getelementptr inbounds %"struct.base::PartitionRoot"*, %"struct.base::PartitionRoot"** %71, i64 1
  %76 = icmp eq %"struct.base::PartitionRoot"** %75, %68
  br i1 %76, label %82, label %70

77:                                               ; preds = %70, %63
  %78 = phi %"struct.base::PartitionRoot"** [ %65, %63 ], [ %71, %70 ]
  %79 = icmp eq %"struct.base::PartitionRoot"** %78, %68
  br i1 %79, label %82, label %80, !prof !6

80:                                               ; preds = %77
  tail call void @_ZN7logging8RawCheckEPKc(i8* getelementptr inbounds ([129 x i8], [129 x i8]* @.str.1, i64 0, i64 0)) #17
  %81 = load i64, i64* %66, align 8
  br label %82

82:                                               ; preds = %74, %80, %77
  %83 = phi i64 [ %67, %77 ], [ %81, %80 ], [ %67, %74 ]
  %84 = getelementptr inbounds %"class.base::internal::PCScanInternal", %"class.base::internal::PCScanInternal"* %0, i64 0, i32 2, i32 0, i32 0, i64 %83
  %85 = bitcast %"struct.base::PartitionRoot"** %84 to i64*
  store i64 %64, i64* %85, align 8
  %86 = load i64, i64* %66, align 8
  %87 = add i64 %86, 1
  store i64 %87, i64* %66, align 8
  %88 = icmp eq i64 %87, 8
  br i1 %88, label %89, label %90, !prof !7

89:                                               ; preds = %82
  tail call void @_ZN7logging8RawCheckEPKc(i8* getelementptr inbounds ([118 x i8], [118 x i8]* @.str.2, i64 0, i64 0)) #17
  br label %90

90:                                               ; preds = %89, %82, %34
  %91 = atomicrmw xchg i32* %10, i32 0 release
  %92 = icmp eq i32 %91, 2
  br i1 %92, label %93, label %94, !prof !7

93:                                               ; preds = %90
  tail call void @_ZN4base8internal13SpinningMutex9FutexWakeEv(%"class.base::internal::SpinningMutex"* %9) #17
  br label %94

94:                                               ; preds = %90, %93
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4base8internal14PCScanInternal24RegisterNonScannableRootEPNS_13PartitionRootILb1EEE(%"class.base::internal::PCScanInternal"*, %"struct.base::PartitionRoot"*) local_unnamed_addr #3 align 2 {
  %3 = getelementptr inbounds %"struct.base::PartitionRoot", %"struct.base::PartitionRoot"* %1, i64 0, i32 0
  %4 = load i8, i8* %3, align 8
  %5 = icmp eq i8 %4, 0
  br i1 %5, label %6, label %7, !prof !7

6:                                                ; preds = %2
  tail call void @_ZN7logging8RawCheckEPKc(i8* getelementptr inbounds ([117 x i8], [117 x i8]* @.str.5, i64 0, i64 0)) #17
  br label %7

7:                                                ; preds = %2, %6
  %8 = getelementptr inbounds %"struct.base::PartitionRoot", %"struct.base::PartitionRoot"* %1, i64 0, i32 8
  %9 = getelementptr inbounds %"class.base::internal::MaybeSpinLock", %"class.base::internal::MaybeSpinLock"* %8, i64 0, i32 0
  %10 = getelementptr inbounds %"class.base::internal::MaybeSpinLock", %"class.base::internal::MaybeSpinLock"* %8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  br label %11

11:                                               ; preds = %23, %7
  %12 = phi i32 [ 0, %7 ], [ %24, %23 ]
  %13 = phi i32 [ 1, %7 ], [ %27, %23 ]
  %14 = load atomic i32, i32* %10 monotonic, align 4
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %16, label %19, !prof !9

16:                                               ; preds = %11
  %17 = cmpxchg weak i32* %10, i32 0, i32 1 acquire monotonic
  %18 = extractvalue { i32, i1 } %17, 1
  br i1 %18, label %34, label %19, !prof !6

19:                                               ; preds = %16, %11
  %20 = icmp sgt i32 %13, 0
  br i1 %20, label %29, label %23

21:                                               ; preds = %29
  %22 = add i32 %13, %12
  br label %23

23:                                               ; preds = %21, %19
  %24 = phi i32 [ %12, %19 ], [ %22, %21 ]
  %25 = shl i32 %13, 1
  %26 = icmp slt i32 %25, 64
  %27 = select i1 %26, i32 %25, i32 64
  %28 = icmp slt i32 %24, 1000
  br i1 %28, label %11, label %33

29:                                               ; preds = %19, %29
  %30 = phi i32 [ %31, %29 ], [ 0, %19 ]
  tail call void asm sideeffect "pause", "~{dirflag},~{fpsr},~{flags}"() #17, !srcloc !10
  %31 = add nuw nsw i32 %30, 1
  %32 = icmp eq i32 %31, %13
  br i1 %32, label %21, label %29

33:                                               ; preds = %23
  tail call void @_ZN4base8internal13SpinningMutex8LockSlowEv(%"class.base::internal::SpinningMutex"* %9) #17
  br label %34

34:                                               ; preds = %16, %33
  %35 = load i8, i8* %3, align 8
  %36 = icmp eq i8 %35, 2
  br i1 %36, label %85, label %37

37:                                               ; preds = %34
  %38 = getelementptr inbounds %"struct.base::PartitionRoot", %"struct.base::PartitionRoot"* %1, i64 0, i32 21
  %39 = load %"struct.base::internal::PartitionSuperPageExtentEntry"*, %"struct.base::internal::PartitionSuperPageExtentEntry"** %38, align 8
  %40 = icmp eq %"struct.base::internal::PartitionSuperPageExtentEntry"* %39, null
  br i1 %40, label %58, label %41

41:                                               ; preds = %37, %48
  %42 = phi %"struct.base::internal::PartitionSuperPageExtentEntry"* [ %50, %48 ], [ %39, %37 ]
  %43 = getelementptr inbounds %"struct.base::internal::PartitionSuperPageExtentEntry", %"struct.base::internal::PartitionSuperPageExtentEntry"* %42, i64 0, i32 1
  %44 = load i8*, i8** %43, align 8
  %45 = getelementptr inbounds %"struct.base::internal::PartitionSuperPageExtentEntry", %"struct.base::internal::PartitionSuperPageExtentEntry"* %42, i64 0, i32 2
  %46 = load i8*, i8** %45, align 8
  %47 = icmp eq i8* %44, %46
  br i1 %47, label %48, label %52

48:                                               ; preds = %52, %41
  %49 = getelementptr inbounds %"struct.base::internal::PartitionSuperPageExtentEntry", %"struct.base::internal::PartitionSuperPageExtentEntry"* %42, i64 0, i32 3
  %50 = load %"struct.base::internal::PartitionSuperPageExtentEntry"*, %"struct.base::internal::PartitionSuperPageExtentEntry"** %49, align 8
  %51 = icmp eq %"struct.base::internal::PartitionSuperPageExtentEntry"* %50, null
  br i1 %51, label %58, label %41

52:                                               ; preds = %41, %52
  %53 = phi i8* [ %55, %52 ], [ %44, %41 ]
  %54 = getelementptr inbounds i8, i8* %53, i64 16384
  tail call void @_ZN4base19RecommitSystemPagesEPvmNS_30PageAccessibilityConfigurationENS_28PageAccessibilityDispositionE(i8* %54, i64 32768, i32 2, i32 0) #17
  %55 = getelementptr inbounds i8, i8* %53, i64 2097152
  %56 = load i8*, i8** %45, align 8
  %57 = icmp eq i8* %55, %56
  br i1 %57, label %48, label %52

58:                                               ; preds = %48, %37
  store i8 2, i8* %3, align 8
  %59 = ptrtoint %"struct.base::PartitionRoot"* %1 to i64
  %60 = getelementptr inbounds %"class.base::internal::PCScanInternal", %"class.base::internal::PCScanInternal"* %0, i64 0, i32 3, i32 0, i32 0, i64 0
  %61 = getelementptr inbounds %"class.base::internal::PCScanInternal", %"class.base::internal::PCScanInternal"* %0, i64 0, i32 3, i32 1
  %62 = load i64, i64* %61, align 8
  %63 = getelementptr inbounds %"class.base::internal::PCScanInternal", %"class.base::internal::PCScanInternal"* %0, i64 0, i32 3, i32 0, i32 0, i64 %62
  %64 = icmp eq i64 %62, 0
  br i1 %64, label %72, label %65

65:                                               ; preds = %58, %69
  %66 = phi %"struct.base::PartitionRoot"** [ %70, %69 ], [ %60, %58 ]
  %67 = load %"struct.base::PartitionRoot"*, %"struct.base::PartitionRoot"** %66, align 8
  %68 = icmp eq %"struct.base::PartitionRoot"* %67, %1
  br i1 %68, label %72, label %69

69:                                               ; preds = %65
  %70 = getelementptr inbounds %"struct.base::PartitionRoot"*, %"struct.base::PartitionRoot"** %66, i64 1
  %71 = icmp eq %"struct.base::PartitionRoot"** %70, %63
  br i1 %71, label %77, label %65

72:                                               ; preds = %65, %58
  %73 = phi %"struct.base::PartitionRoot"** [ %60, %58 ], [ %66, %65 ]
  %74 = icmp eq %"struct.base::PartitionRoot"** %73, %63
  br i1 %74, label %77, label %75, !prof !6

75:                                               ; preds = %72
  tail call void @_ZN7logging8RawCheckEPKc(i8* getelementptr inbounds ([129 x i8], [129 x i8]* @.str.1, i64 0, i64 0)) #17
  %76 = load i64, i64* %61, align 8
  br label %77

77:                                               ; preds = %69, %75, %72
  %78 = phi i64 [ %62, %72 ], [ %76, %75 ], [ %62, %69 ]
  %79 = getelementptr inbounds %"class.base::internal::PCScanInternal", %"class.base::internal::PCScanInternal"* %0, i64 0, i32 3, i32 0, i32 0, i64 %78
  %80 = bitcast %"struct.base::PartitionRoot"** %79 to i64*
  store i64 %59, i64* %80, align 8
  %81 = load i64, i64* %61, align 8
  %82 = add i64 %81, 1
  store i64 %82, i64* %61, align 8
  %83 = icmp eq i64 %82, 8
  br i1 %83, label %84, label %85, !prof !7

84:                                               ; preds = %77
  tail call void @_ZN7logging8RawCheckEPKc(i8* getelementptr inbounds ([118 x i8], [118 x i8]* @.str.2, i64 0, i64 0)) #17
  br label %85

85:                                               ; preds = %84, %77, %34
  %86 = atomicrmw xchg i32* %10, i32 0 release
  %87 = icmp eq i32 %86, 2
  br i1 %87, label %88, label %89, !prof !7

88:                                               ; preds = %85
  tail call void @_ZN4base8internal13SpinningMutex9FutexWakeEv(%"class.base::internal::SpinningMutex"* %9) #17
  br label %89

89:                                               ; preds = %85, %88
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN4base8internal14PCScanInternal14SetProcessNameEPKc(%"class.base::internal::PCScanInternal"* nocapture, i8*) local_unnamed_addr #6 align 2 {
  %3 = getelementptr inbounds %"class.base::internal::PCScanInternal", %"class.base::internal::PCScanInternal"* %0, i64 0, i32 8
  store i8* %1, i8** %3, align 8
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN4base8internal14PCScanInternal19EnableStackScanningEv(%"class.base::internal::PCScanInternal"* nocapture) local_unnamed_addr #6 align 2 {
  %2 = getelementptr inbounds %"class.base::internal::PCScanInternal", %"class.base::internal::PCScanInternal"* %0, i64 0, i32 4
  store i8 1, i8* %2, align 8
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN4base8internal14PCScanInternal20DisableStackScanningEv(%"class.base::internal::PCScanInternal"* nocapture) local_unnamed_addr #6 align 2 {
  %2 = getelementptr inbounds %"class.base::internal::PCScanInternal", %"class.base::internal::PCScanInternal"* %0, i64 0, i32 4
  store i8 0, i8* %2, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4base8internal14PCScanInternal19NotifyThreadCreatedEPv(%"class.base::internal::PCScanInternal"*, i8*) local_unnamed_addr #3 align 2 {
  %3 = alloca %"struct.std::__1::pair.117", align 8
  %4 = ptrtoint i8* %1 to i64
  %5 = tail call i32 @_ZN4base14PlatformThread9CurrentIdEv() #17
  %6 = getelementptr inbounds %"class.base::internal::PCScanInternal", %"class.base::internal::PCScanInternal"* %0, i64 0, i32 7
  tail call void @_ZNSt3__15mutex4lockEv(%"class.std::__1::mutex"* %6) #17
  %7 = bitcast %"struct.std::__1::pair.117"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %7) #17
  %8 = getelementptr inbounds %"struct.std::__1::pair.117", %"struct.std::__1::pair.117"* %3, i64 0, i32 0
  store i32 %5, i32* %8, align 8
  %9 = getelementptr inbounds %"struct.std::__1::pair.117", %"struct.std::__1::pair.117"* %3, i64 0, i32 1
  %10 = bitcast i8** %9 to i64*
  store i64 %4, i64* %10, align 8
  %11 = getelementptr inbounds %"class.base::internal::PCScanInternal", %"class.base::internal::PCScanInternal"* %0, i64 0, i32 6, i32 0
  %12 = call { %"struct.std::__1::__hash_node_base.69"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeIiPvEENS_22__unordered_map_hasherIiS3_NS_4hashIiEENS_8equal_toIvEELb1EEENS_21__unordered_map_equalIiS3_S8_S6_Lb1EEEN4base8internal17MetadataAllocatorIS3_EEE25__emplace_unique_key_argsIiJNS_4pairIKiS2_EEEEENSI_INS_15__hash_iteratorIPNS_11__hash_nodeIS3_S2_EEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table.65"* %11, i32* nonnull dereferenceable(4) %8, %"struct.std::__1::pair.117"* nonnull dereferenceable(16) %3) #17
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %7) #17
  call void @_ZNSt3__15mutex6unlockEv(%"class.std::__1::mutex"* %6) #17
  ret void
}

declare i32 @_ZN4base14PlatformThread9CurrentIdEv() local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4base8internal14PCScanInternal21NotifyThreadDestroyedEv(%"class.base::internal::PCScanInternal"*) local_unnamed_addr #3 align 2 {
  %2 = alloca i32, align 4
  %3 = bitcast i32* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3) #17
  %4 = tail call i32 @_ZN4base14PlatformThread9CurrentIdEv() #17
  store i32 %4, i32* %2, align 4
  %5 = getelementptr inbounds %"class.base::internal::PCScanInternal", %"class.base::internal::PCScanInternal"* %0, i64 0, i32 7
  tail call void @_ZNSt3__15mutex4lockEv(%"class.std::__1::mutex"* %5) #17
  %6 = getelementptr inbounds %"class.base::internal::PCScanInternal", %"class.base::internal::PCScanInternal"* %0, i64 0, i32 6, i32 0
  %7 = call i64 @_ZNSt3__112__hash_tableINS_17__hash_value_typeIiPvEENS_22__unordered_map_hasherIiS3_NS_4hashIiEENS_8equal_toIvEELb1EEENS_21__unordered_map_equalIiS3_S8_S6_Lb1EEEN4base8internal17MetadataAllocatorIS3_EEE14__erase_uniqueIiEEmRKT_(%"class.std::__1::__hash_table.65"* %6, i32* nonnull dereferenceable(4) %2) #17
  call void @_ZNSt3__15mutex6unlockEv(%"class.std::__1::mutex"* %5) #17
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3) #17
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4base8internal14PCScanInternal12ProtectPagesEmm(%"class.base::internal::PCScanInternal"* nocapture readonly, i64, i64) local_unnamed_addr #3 align 2 {
  %4 = getelementptr inbounds %"class.base::internal::PCScanInternal", %"class.base::internal::PCScanInternal"* %0, i64 0, i32 11, i32 0, i32 0, i32 0
  %5 = load %"class.base::internal::WriteProtector"*, %"class.base::internal::WriteProtector"** %4, align 8
  %6 = add i64 %2, 4095
  %7 = and i64 %6, -4096
  %8 = bitcast %"class.base::internal::WriteProtector"* %5 to void (%"class.base::internal::WriteProtector"*, i64, i64)***
  %9 = load void (%"class.base::internal::WriteProtector"*, i64, i64)**, void (%"class.base::internal::WriteProtector"*, i64, i64)*** %8, align 8
  %10 = getelementptr inbounds void (%"class.base::internal::WriteProtector"*, i64, i64)*, void (%"class.base::internal::WriteProtector"*, i64, i64)** %9, i64 2
  %11 = load void (%"class.base::internal::WriteProtector"*, i64, i64)*, void (%"class.base::internal::WriteProtector"*, i64, i64)** %10, align 8
  tail call void %11(%"class.base::internal::WriteProtector"* %5, i64 %1, i64 %7) #17
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4base8internal14PCScanInternal14UnprotectPagesEmm(%"class.base::internal::PCScanInternal"* nocapture readonly, i64, i64) local_unnamed_addr #3 align 2 {
  %4 = getelementptr inbounds %"class.base::internal::PCScanInternal", %"class.base::internal::PCScanInternal"* %0, i64 0, i32 11, i32 0, i32 0, i32 0
  %5 = load %"class.base::internal::WriteProtector"*, %"class.base::internal::WriteProtector"** %4, align 8
  %6 = add i64 %2, 4095
  %7 = and i64 %6, -4096
  %8 = bitcast %"class.base::internal::WriteProtector"* %5 to void (%"class.base::internal::WriteProtector"*, i64, i64)***
  %9 = load void (%"class.base::internal::WriteProtector"*, i64, i64)**, void (%"class.base::internal::WriteProtector"*, i64, i64)*** %8, align 8
  %10 = getelementptr inbounds void (%"class.base::internal::WriteProtector"*, i64, i64)*, void (%"class.base::internal::WriteProtector"*, i64, i64)** %9, i64 3
  %11 = load void (%"class.base::internal::WriteProtector"*, i64, i64)*, void (%"class.base::internal::WriteProtector"*, i64, i64)** %10, align 8
  tail call void %11(%"class.base::internal::WriteProtector"* %5, i64 %1, i64 %7) #17
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4base8internal14PCScanInternal20ClearRootsForTestingEv(%"class.base::internal::PCScanInternal"*) local_unnamed_addr #3 align 2 {
  %2 = getelementptr inbounds %"class.base::internal::PCScanInternal", %"class.base::internal::PCScanInternal"* %0, i64 0, i32 2
  %3 = getelementptr inbounds %"class.base::internal::PCScanInternal::Roots", %"class.base::internal::PCScanInternal::Roots"* %2, i64 0, i32 0, i32 0, i64 0
  %4 = getelementptr inbounds %"class.base::internal::PCScanInternal", %"class.base::internal::PCScanInternal"* %0, i64 0, i32 2, i32 1
  %5 = load i64, i64* %4, align 8
  %6 = getelementptr inbounds %"class.base::internal::PCScanInternal", %"class.base::internal::PCScanInternal"* %0, i64 0, i32 2, i32 0, i32 0, i64 %5
  %7 = icmp eq %"struct.base::PartitionRoot"** %3, %6
  br i1 %7, label %27, label %8

8:                                                ; preds = %1
  %9 = shl nsw i64 %5, 3
  %10 = add i64 %9, -8
  %11 = lshr exact i64 %10, 3
  %12 = add nuw nsw i64 %11, 1
  %13 = and i64 %12, 7
  %14 = icmp eq i64 %13, 0
  br i1 %14, label %24, label %15

15:                                               ; preds = %8, %15
  %16 = phi %"struct.base::PartitionRoot"** [ %21, %15 ], [ %3, %8 ]
  %17 = phi i64 [ %22, %15 ], [ %13, %8 ]
  %18 = load %"struct.base::PartitionRoot"*, %"struct.base::PartitionRoot"** %16, align 8
  %19 = getelementptr inbounds %"struct.base::PartitionRoot", %"struct.base::PartitionRoot"* %18, i64 0, i32 1
  store i8 0, i8* %19, align 1
  %20 = getelementptr inbounds %"struct.base::PartitionRoot", %"struct.base::PartitionRoot"* %18, i64 0, i32 0
  store i8 1, i8* %20, align 8
  %21 = getelementptr inbounds %"struct.base::PartitionRoot"*, %"struct.base::PartitionRoot"** %16, i64 1
  %22 = add i64 %17, -1
  %23 = icmp eq i64 %22, 0
  br i1 %23, label %24, label %15, !llvm.loop !17

24:                                               ; preds = %15, %8
  %25 = phi %"struct.base::PartitionRoot"** [ %3, %8 ], [ %21, %15 ]
  %26 = icmp ult i64 %10, 56
  br i1 %26, label %27, label %52

27:                                               ; preds = %24, %52, %1
  %28 = getelementptr inbounds %"class.base::internal::PCScanInternal", %"class.base::internal::PCScanInternal"* %0, i64 0, i32 3
  %29 = getelementptr inbounds %"class.base::internal::PCScanInternal::Roots", %"class.base::internal::PCScanInternal::Roots"* %28, i64 0, i32 0, i32 0, i64 0
  %30 = getelementptr inbounds %"class.base::internal::PCScanInternal", %"class.base::internal::PCScanInternal"* %0, i64 0, i32 3, i32 1
  %31 = load i64, i64* %30, align 8
  %32 = getelementptr inbounds %"class.base::internal::PCScanInternal", %"class.base::internal::PCScanInternal"* %0, i64 0, i32 3, i32 0, i32 0, i64 %31
  %33 = icmp eq %"struct.base::PartitionRoot"** %29, %32
  br i1 %33, label %87, label %34

34:                                               ; preds = %27
  %35 = shl nsw i64 %31, 3
  %36 = add i64 %35, -8
  %37 = lshr exact i64 %36, 3
  %38 = add nuw nsw i64 %37, 1
  %39 = and i64 %38, 7
  %40 = icmp eq i64 %39, 0
  br i1 %40, label %49, label %41

41:                                               ; preds = %34, %41
  %42 = phi %"struct.base::PartitionRoot"** [ %46, %41 ], [ %29, %34 ]
  %43 = phi i64 [ %47, %41 ], [ %39, %34 ]
  %44 = load %"struct.base::PartitionRoot"*, %"struct.base::PartitionRoot"** %42, align 8
  %45 = getelementptr inbounds %"struct.base::PartitionRoot", %"struct.base::PartitionRoot"* %44, i64 0, i32 0
  store i8 1, i8* %45, align 8
  %46 = getelementptr inbounds %"struct.base::PartitionRoot"*, %"struct.base::PartitionRoot"** %42, i64 1
  %47 = add i64 %43, -1
  %48 = icmp eq i64 %47, 0
  br i1 %48, label %49, label %41, !llvm.loop !18

49:                                               ; preds = %41, %34
  %50 = phi %"struct.base::PartitionRoot"** [ %29, %34 ], [ %46, %41 ]
  %51 = icmp ult i64 %36, 56
  br i1 %51, label %87, label %109

52:                                               ; preds = %24, %52
  %53 = phi %"struct.base::PartitionRoot"** [ %85, %52 ], [ %25, %24 ]
  %54 = load %"struct.base::PartitionRoot"*, %"struct.base::PartitionRoot"** %53, align 8
  %55 = getelementptr inbounds %"struct.base::PartitionRoot", %"struct.base::PartitionRoot"* %54, i64 0, i32 1
  store i8 0, i8* %55, align 1
  %56 = getelementptr inbounds %"struct.base::PartitionRoot", %"struct.base::PartitionRoot"* %54, i64 0, i32 0
  store i8 1, i8* %56, align 8
  %57 = getelementptr inbounds %"struct.base::PartitionRoot"*, %"struct.base::PartitionRoot"** %53, i64 1
  %58 = load %"struct.base::PartitionRoot"*, %"struct.base::PartitionRoot"** %57, align 8
  %59 = getelementptr inbounds %"struct.base::PartitionRoot", %"struct.base::PartitionRoot"* %58, i64 0, i32 1
  store i8 0, i8* %59, align 1
  %60 = getelementptr inbounds %"struct.base::PartitionRoot", %"struct.base::PartitionRoot"* %58, i64 0, i32 0
  store i8 1, i8* %60, align 8
  %61 = getelementptr inbounds %"struct.base::PartitionRoot"*, %"struct.base::PartitionRoot"** %53, i64 2
  %62 = load %"struct.base::PartitionRoot"*, %"struct.base::PartitionRoot"** %61, align 8
  %63 = getelementptr inbounds %"struct.base::PartitionRoot", %"struct.base::PartitionRoot"* %62, i64 0, i32 1
  store i8 0, i8* %63, align 1
  %64 = getelementptr inbounds %"struct.base::PartitionRoot", %"struct.base::PartitionRoot"* %62, i64 0, i32 0
  store i8 1, i8* %64, align 8
  %65 = getelementptr inbounds %"struct.base::PartitionRoot"*, %"struct.base::PartitionRoot"** %53, i64 3
  %66 = load %"struct.base::PartitionRoot"*, %"struct.base::PartitionRoot"** %65, align 8
  %67 = getelementptr inbounds %"struct.base::PartitionRoot", %"struct.base::PartitionRoot"* %66, i64 0, i32 1
  store i8 0, i8* %67, align 1
  %68 = getelementptr inbounds %"struct.base::PartitionRoot", %"struct.base::PartitionRoot"* %66, i64 0, i32 0
  store i8 1, i8* %68, align 8
  %69 = getelementptr inbounds %"struct.base::PartitionRoot"*, %"struct.base::PartitionRoot"** %53, i64 4
  %70 = load %"struct.base::PartitionRoot"*, %"struct.base::PartitionRoot"** %69, align 8
  %71 = getelementptr inbounds %"struct.base::PartitionRoot", %"struct.base::PartitionRoot"* %70, i64 0, i32 1
  store i8 0, i8* %71, align 1
  %72 = getelementptr inbounds %"struct.base::PartitionRoot", %"struct.base::PartitionRoot"* %70, i64 0, i32 0
  store i8 1, i8* %72, align 8
  %73 = getelementptr inbounds %"struct.base::PartitionRoot"*, %"struct.base::PartitionRoot"** %53, i64 5
  %74 = load %"struct.base::PartitionRoot"*, %"struct.base::PartitionRoot"** %73, align 8
  %75 = getelementptr inbounds %"struct.base::PartitionRoot", %"struct.base::PartitionRoot"* %74, i64 0, i32 1
  store i8 0, i8* %75, align 1
  %76 = getelementptr inbounds %"struct.base::PartitionRoot", %"struct.base::PartitionRoot"* %74, i64 0, i32 0
  store i8 1, i8* %76, align 8
  %77 = getelementptr inbounds %"struct.base::PartitionRoot"*, %"struct.base::PartitionRoot"** %53, i64 6
  %78 = load %"struct.base::PartitionRoot"*, %"struct.base::PartitionRoot"** %77, align 8
  %79 = getelementptr inbounds %"struct.base::PartitionRoot", %"struct.base::PartitionRoot"* %78, i64 0, i32 1
  store i8 0, i8* %79, align 1
  %80 = getelementptr inbounds %"struct.base::PartitionRoot", %"struct.base::PartitionRoot"* %78, i64 0, i32 0
  store i8 1, i8* %80, align 8
  %81 = getelementptr inbounds %"struct.base::PartitionRoot"*, %"struct.base::PartitionRoot"** %53, i64 7
  %82 = load %"struct.base::PartitionRoot"*, %"struct.base::PartitionRoot"** %81, align 8
  %83 = getelementptr inbounds %"struct.base::PartitionRoot", %"struct.base::PartitionRoot"* %82, i64 0, i32 1
  store i8 0, i8* %83, align 1
  %84 = getelementptr inbounds %"struct.base::PartitionRoot", %"struct.base::PartitionRoot"* %82, i64 0, i32 0
  store i8 1, i8* %84, align 8
  %85 = getelementptr inbounds %"struct.base::PartitionRoot"*, %"struct.base::PartitionRoot"** %53, i64 8
  %86 = icmp eq %"struct.base::PartitionRoot"** %85, %6
  br i1 %86, label %27, label %52

87:                                               ; preds = %49, %109, %27
  %88 = load i64, i64* %4, align 8
  %89 = shl nuw i64 %88, 3
  %90 = icmp sgt i64 %89, 0
  br i1 %90, label %91, label %93

91:                                               ; preds = %87
  %92 = bitcast %"class.base::internal::PCScanInternal::Roots"* %2 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %92, i8 0, i64 %89, i1 false) #17
  br label %93

93:                                               ; preds = %87, %91
  store i64 0, i64* %4, align 8
  %94 = load i64, i64* %30, align 8
  %95 = shl nuw i64 %94, 3
  %96 = icmp sgt i64 %95, 0
  br i1 %96, label %97, label %99

97:                                               ; preds = %93
  %98 = bitcast %"class.base::internal::PCScanInternal::Roots"* %28 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %98, i8 0, i64 %95, i1 false) #17
  br label %99

99:                                               ; preds = %93, %97
  store i64 0, i64* %30, align 8
  %100 = getelementptr inbounds %"class.base::internal::PCScanInternal", %"class.base::internal::PCScanInternal"* %0, i64 0, i32 11, i32 0, i32 0, i32 0
  %101 = load %"class.base::internal::WriteProtector"*, %"class.base::internal::WriteProtector"** %100, align 8
  store %"class.base::internal::WriteProtector"* null, %"class.base::internal::WriteProtector"** %100, align 8
  %102 = icmp eq %"class.base::internal::WriteProtector"* %101, null
  br i1 %102, label %108, label %103

103:                                              ; preds = %99
  %104 = bitcast %"class.base::internal::WriteProtector"* %101 to void (%"class.base::internal::WriteProtector"*)***
  %105 = load void (%"class.base::internal::WriteProtector"*)**, void (%"class.base::internal::WriteProtector"*)*** %104, align 8
  %106 = getelementptr inbounds void (%"class.base::internal::WriteProtector"*)*, void (%"class.base::internal::WriteProtector"*)** %105, i64 1
  %107 = load void (%"class.base::internal::WriteProtector"*)*, void (%"class.base::internal::WriteProtector"*)** %106, align 8
  tail call void %107(%"class.base::internal::WriteProtector"* nonnull %101) #17
  br label %108

108:                                              ; preds = %99, %103
  ret void

109:                                              ; preds = %49, %109
  %110 = phi %"struct.base::PartitionRoot"** [ %134, %109 ], [ %50, %49 ]
  %111 = load %"struct.base::PartitionRoot"*, %"struct.base::PartitionRoot"** %110, align 8
  %112 = getelementptr inbounds %"struct.base::PartitionRoot", %"struct.base::PartitionRoot"* %111, i64 0, i32 0
  store i8 1, i8* %112, align 8
  %113 = getelementptr inbounds %"struct.base::PartitionRoot"*, %"struct.base::PartitionRoot"** %110, i64 1
  %114 = load %"struct.base::PartitionRoot"*, %"struct.base::PartitionRoot"** %113, align 8
  %115 = getelementptr inbounds %"struct.base::PartitionRoot", %"struct.base::PartitionRoot"* %114, i64 0, i32 0
  store i8 1, i8* %115, align 8
  %116 = getelementptr inbounds %"struct.base::PartitionRoot"*, %"struct.base::PartitionRoot"** %110, i64 2
  %117 = load %"struct.base::PartitionRoot"*, %"struct.base::PartitionRoot"** %116, align 8
  %118 = getelementptr inbounds %"struct.base::PartitionRoot", %"struct.base::PartitionRoot"* %117, i64 0, i32 0
  store i8 1, i8* %118, align 8
  %119 = getelementptr inbounds %"struct.base::PartitionRoot"*, %"struct.base::PartitionRoot"** %110, i64 3
  %120 = load %"struct.base::PartitionRoot"*, %"struct.base::PartitionRoot"** %119, align 8
  %121 = getelementptr inbounds %"struct.base::PartitionRoot", %"struct.base::PartitionRoot"* %120, i64 0, i32 0
  store i8 1, i8* %121, align 8
  %122 = getelementptr inbounds %"struct.base::PartitionRoot"*, %"struct.base::PartitionRoot"** %110, i64 4
  %123 = load %"struct.base::PartitionRoot"*, %"struct.base::PartitionRoot"** %122, align 8
  %124 = getelementptr inbounds %"struct.base::PartitionRoot", %"struct.base::PartitionRoot"* %123, i64 0, i32 0
  store i8 1, i8* %124, align 8
  %125 = getelementptr inbounds %"struct.base::PartitionRoot"*, %"struct.base::PartitionRoot"** %110, i64 5
  %126 = load %"struct.base::PartitionRoot"*, %"struct.base::PartitionRoot"** %125, align 8
  %127 = getelementptr inbounds %"struct.base::PartitionRoot", %"struct.base::PartitionRoot"* %126, i64 0, i32 0
  store i8 1, i8* %127, align 8
  %128 = getelementptr inbounds %"struct.base::PartitionRoot"*, %"struct.base::PartitionRoot"** %110, i64 6
  %129 = load %"struct.base::PartitionRoot"*, %"struct.base::PartitionRoot"** %128, align 8
  %130 = getelementptr inbounds %"struct.base::PartitionRoot", %"struct.base::PartitionRoot"* %129, i64 0, i32 0
  store i8 1, i8* %130, align 8
  %131 = getelementptr inbounds %"struct.base::PartitionRoot"*, %"struct.base::PartitionRoot"** %110, i64 7
  %132 = load %"struct.base::PartitionRoot"*, %"struct.base::PartitionRoot"** %131, align 8
  %133 = getelementptr inbounds %"struct.base::PartitionRoot", %"struct.base::PartitionRoot"* %132, i64 0, i32 0
  store i8 1, i8* %133, align 8
  %134 = getelementptr inbounds %"struct.base::PartitionRoot"*, %"struct.base::PartitionRoot"** %110, i64 8
  %135 = icmp eq %"struct.base::PartitionRoot"** %134, %32
  br i1 %135, label %87, label %109
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4base8internal14PCScanInternal16ReinitForTestingENS0_6PCScan25WantedWriteProtectionModeE(%"class.base::internal::PCScanInternal"* nocapture, i8 zeroext) local_unnamed_addr #3 align 2 {
  %3 = getelementptr inbounds %"class.base::internal::PCScanInternal", %"class.base::internal::PCScanInternal"* %0, i64 0, i32 12
  store i8 0, i8* %3, align 8
  tail call void @_ZN4base8internal14PCScanInternal10InitializeENS0_6PCScan25WantedWriteProtectionModeE(%"class.base::internal::PCScanInternal"* %0, i8 zeroext %1)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4base8internal14PCScanInternal20FinishScanForTestingEv(%"class.base::internal::PCScanInternal"*) local_unnamed_addr #3 align 2 {
  %2 = getelementptr inbounds %"class.base::internal::PCScanInternal", %"class.base::internal::PCScanInternal"* %0, i64 0, i32 1
  tail call void @_ZNSt3__15mutex4lockEv(%"class.std::__1::mutex"* %2) #17
  %3 = getelementptr inbounds %"class.base::internal::PCScanInternal", %"class.base::internal::PCScanInternal"* %0, i64 0, i32 0, i32 0
  %4 = load %"class.base::internal::PCScanTask"*, %"class.base::internal::PCScanTask"** %3, align 8
  %5 = icmp eq %"class.base::internal::PCScanTask"* %4, null
  br i1 %5, label %6, label %7

6:                                                ; preds = %1
  tail call void @_ZNSt3__15mutex6unlockEv(%"class.std::__1::mutex"* %2) #17
  tail call void @_ZN7logging8RawCheckEPKc(i8* getelementptr inbounds ([108 x i8], [108 x i8]* @.str.6, i64 0, i64 0)) #17
  tail call void @_ZN4base8internal10PCScanTask14RunFromScannerEv(%"class.base::internal::PCScanTask"* null)
  br label %14

7:                                                ; preds = %1
  %8 = getelementptr inbounds %"class.base::internal::PCScanTask", %"class.base::internal::PCScanTask"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %9 = atomicrmw add i32* %8, i32 1 monotonic
  tail call void @_ZNSt3__15mutex6unlockEv(%"class.std::__1::mutex"* %2) #17
  tail call void @_ZN4base8internal10PCScanTask14RunFromScannerEv(%"class.base::internal::PCScanTask"* nonnull %4)
  %10 = atomicrmw sub i32* %8, i32 1 acq_rel
  %11 = icmp eq i32 %10, 1
  br i1 %11, label %12, label %14

12:                                               ; preds = %7
  tail call void @_ZN4base8internal10PCScanTaskD2Ev(%"class.base::internal::PCScanTask"* nonnull %4) #17
  %13 = bitcast %"class.base::internal::PCScanTask"* %4 to i8*
  tail call void @_ZN4base8internal34AllocatedOnPCScanMetadataPartitiondlEPv(i8* nonnull %13) #17
  br label %14

14:                                               ; preds = %6, %7, %12
  ret void
}

; Function Attrs: nofree nounwind
declare i32 @__cxa_guard_acquire(i64*) local_unnamed_addr #7

; Function Attrs: nofree nounwind
declare void @__cxa_guard_release(i64*) local_unnamed_addr #7

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal10PCScanTask12StackVisitor10VisitStackEPmS3_(%"class.base::internal::PCScanTask::StackVisitor"*, i64*, i64*) unnamed_addr #3 comdat align 2 {
  %4 = alloca %"class.base::internal::PCScanScanLoop", align 8
  %5 = ptrtoint i64* %1 to i64
  %6 = and i64 %5, -32
  %7 = inttoptr i64 %6 to i64*
  %8 = ptrtoint i64* %2 to i64
  %9 = add i64 %8, 31
  %10 = and i64 %9, -32
  %11 = inttoptr i64 %10 to i64*
  %12 = icmp ult i64* %7, %11
  br i1 %12, label %14, label %13, !prof !6

13:                                               ; preds = %3
  tail call void @_ZN7logging8RawCheckEPKc(i8* getelementptr inbounds ([110 x i8], [110 x i8]* @.str.7, i64 0, i64 0)) #17
  br label %14

14:                                               ; preds = %3, %13
  %15 = getelementptr inbounds %"class.base::internal::PCScanScanLoop", %"class.base::internal::PCScanScanLoop"* %4, i64 0, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %15) #17
  %16 = bitcast %"class.base::internal::PCScanScanLoop"* %4 to i64*
  store i64 -6148914691236517206, i64* %16, align 8
  %17 = getelementptr inbounds %"class.base::internal::PCScanTask::StackVisitor", %"class.base::internal::PCScanTask::StackVisitor"* %0, i64 0, i32 1
  %18 = bitcast %"class.base::internal::PCScanTask"** %17 to i64*
  %19 = load i64, i64* %18, align 8
  %20 = tail call dereferenceable(312) %"class.base::internal::PCScanInternal"* @_ZN4base8internal14PCScanInternal8InstanceEv() #17
  %21 = getelementptr inbounds %"class.base::internal::PCScanInternal", %"class.base::internal::PCScanInternal"* %20, i64 0, i32 9
  %22 = load i8, i8* %21, align 8
  store i8 %22, i8* %15, align 8
  %23 = getelementptr inbounds %"class.base::internal::PCScanScanLoop", %"class.base::internal::PCScanScanLoop"* %4, i64 0, i32 1
  %24 = load i64, i64* @_ZN4base8internal21PartitionAddressSpace22brp_pool_base_address_E, align 8
  store i64 %24, i64* %23, align 8
  %25 = getelementptr inbounds %"class.base::internal::PCScanScanLoop", %"class.base::internal::PCScanScanLoop"* %4, i64 0, i32 2
  %26 = bitcast %"class.base::internal::PCScanTask"** %25 to i64*
  store i64 %19, i64* %26, align 8
  %27 = getelementptr inbounds %"class.base::internal::PCScanScanLoop", %"class.base::internal::PCScanScanLoop"* %4, i64 0, i32 3
  store i64 0, i64* %27, align 8
  %28 = getelementptr inbounds %"class.base::internal::PCScanScanLoop", %"class.base::internal::PCScanScanLoop"* %4, i64 0, i32 0
  switch i8 %22, label %31 [
    i8 2, label %29
    i8 1, label %30
  ]

29:                                               ; preds = %14
  call void @_ZN4base8internal8ScanLoopINS0_14PCScanScanLoopEE7RunAVX2EPmS4_(%"class.base::internal::ScanLoop"* nonnull %28, i64* %7, i64* %11) #17
  br label %32

30:                                               ; preds = %14
  call void @_ZN4base8internal8ScanLoopINS0_14PCScanScanLoopEE7RunSSE4EPmS4_(%"class.base::internal::ScanLoop"* nonnull %28, i64* %7, i64* %11) #17
  br label %32

31:                                               ; preds = %14
  call void @_ZN4base8internal8ScanLoopINS0_14PCScanScanLoopEE15RunUnvectorizedEPmS4_(%"class.base::internal::ScanLoop"* nonnull %28, i64* %7, i64* %11) #17
  br label %32

32:                                               ; preds = %29, %30, %31
  %33 = load i64, i64* %27, align 8
  %34 = getelementptr inbounds %"class.base::internal::PCScanTask::StackVisitor", %"class.base::internal::PCScanTask::StackVisitor"* %0, i64 0, i32 2
  %35 = load i64, i64* %34, align 8
  %36 = add i64 %35, %33
  store i64 %36, i64* %34, align 8
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %15) #17
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal8ScanLoopINS0_14PCScanScanLoopEE7RunAVX2EPmS4_(%"class.base::internal::ScanLoop"*, i64*, i64*) local_unnamed_addr #8 comdat align 2 {
  %4 = getelementptr inbounds %"class.base::internal::ScanLoop", %"class.base::internal::ScanLoop"* %0, i64 8
  %5 = bitcast %"class.base::internal::ScanLoop"* %4 to i64*
  %6 = load i64, i64* %5, align 8
  %7 = insertelement <4 x i64> undef, i64 %6, i32 0
  %8 = shufflevector <4 x i64> %7, <4 x i64> undef, <4 x i32> zeroinitializer
  %9 = getelementptr inbounds i64, i64* %2, i64 -4
  %10 = icmp ugt i64* %9, %1
  br i1 %10, label %11, label %572

11:                                               ; preds = %3
  %12 = getelementptr inbounds %"class.base::internal::ScanLoop", %"class.base::internal::ScanLoop"* %0, i64 16
  %13 = bitcast %"class.base::internal::ScanLoop"* %12 to %"class.base::internal::PCScanTask"**
  %14 = getelementptr inbounds %"class.base::internal::ScanLoop", %"class.base::internal::ScanLoop"* %0, i64 24
  %15 = bitcast %"class.base::internal::ScanLoop"* %14 to i64*
  br label %16

16:                                               ; preds = %11, %569
  %17 = phi i64* [ %1, %11 ], [ %570, %569 ]
  %18 = bitcast i64* %17 to <4 x i64>*
  %19 = load <4 x i64>, <4 x i64>* %18, align 32
  %20 = and <4 x i64> %19, <i64 -8589934592, i64 -8589934592, i64 -8589934592, i64 -8589934592>
  %21 = icmp eq <4 x i64> %20, %8
  %22 = bitcast <4 x i1> %21 to i4
  %23 = zext i4 %22 to i32
  %24 = icmp eq i4 %22, 0
  br i1 %24, label %569, label %25, !prof !6

25:                                               ; preds = %16
  %26 = and i32 %23, 1
  %27 = icmp eq i32 %26, 0
  br i1 %27, label %161, label %28

28:                                               ; preds = %25
  %29 = extractelement <4 x i64> %19, i64 0
  %30 = load %"class.base::internal::PCScanTask"*, %"class.base::internal::PCScanTask"** %13, align 8
  %31 = and i64 %29, -8589934592
  %32 = inttoptr i64 %31 to %"class.base::internal::(anonymous namespace)::QuarantineCardTable"*
  %33 = lshr i64 %29, 12
  %34 = and i64 %33, 2097151
  %35 = getelementptr inbounds %"class.base::internal::(anonymous namespace)::QuarantineCardTable", %"class.base::internal::(anonymous namespace)::QuarantineCardTable"* %32, i64 0, i32 0, i32 0, i64 %34
  %36 = load i8, i8* %35, align 1, !range !5
  %37 = icmp eq i8 %36, 0
  br i1 %37, label %157, label %38, !prof !6

38:                                               ; preds = %28
  %39 = inttoptr i64 %29 to i8*
  %40 = and i64 %29, -2097152
  %41 = inttoptr i64 %40 to i8*
  %42 = getelementptr inbounds i8, i8* %41, i64 49152
  %43 = getelementptr inbounds i8, i8* %41, i64 2080768
  %44 = icmp ule i8* %42, %39
  %45 = icmp ugt i8* %43, %39
  %46 = and i1 %45, %44
  br i1 %46, label %47, label %157

47:                                               ; preds = %38
  %48 = getelementptr inbounds %"class.base::internal::PCScanTask", %"class.base::internal::PCScanTask"* %30, i64 0, i32 1
  %49 = load i64, i64* %48, align 8
  %50 = and i64 %49, 1
  %51 = icmp eq i64 %50, 0
  %52 = select i1 %51, i64 32768, i64 16384
  %53 = getelementptr inbounds i8, i8* %41, i64 %52
  %54 = bitcast i8* %53 to %"class.base::internal::ObjectBitmap"*
  %55 = or i64 %40, 4096
  %56 = inttoptr i64 %55 to i8*
  %57 = lshr i64 %29, 9
  %58 = and i64 %57, 4064
  %59 = getelementptr inbounds i8, i8* %56, i64 %58
  %60 = bitcast i8* %59 to %"struct.base::internal::PartitionPage"*
  %61 = getelementptr inbounds i8, i8* %59, i64 30
  %62 = load i8, i8* %61, align 2
  %63 = zext i8 %62 to i64
  %64 = sub nsw i64 0, %63
  %65 = getelementptr inbounds %"struct.base::internal::PartitionPage", %"struct.base::internal::PartitionPage"* %60, i64 %64, i32 0, i32 1, i64 8
  %66 = bitcast i8* %65 to %"struct.base::internal::PartitionBucket"**
  %67 = load %"struct.base::internal::PartitionBucket"*, %"struct.base::internal::PartitionBucket"** %66, align 1
  %68 = icmp eq %"struct.base::internal::PartitionBucket"* %67, null
  br i1 %68, label %157, label %69

69:                                               ; preds = %47
  %70 = getelementptr inbounds %"struct.base::internal::PartitionPage", %"struct.base::internal::PartitionPage"* %60, i64 %64, i32 0
  %71 = ptrtoint %union.anon.123* %70 to i64
  %72 = and i64 %71, 2097151
  %73 = add nuw nsw i64 %72, 36028797018959872
  %74 = lshr i64 %73, 5
  %75 = and i64 %71, -2097152
  %76 = shl i64 %74, 14
  %77 = add i64 %76, %75
  %78 = sub i64 %29, %77
  %79 = getelementptr inbounds %"struct.base::internal::PartitionBucket", %"struct.base::internal::PartitionBucket"* %67, i64 0, i32 4
  %80 = load i32, i32* %79, align 4
  %81 = shl i32 %80, 12
  %82 = and i32 %81, 1044480
  %83 = zext i32 %82 to i64
  %84 = icmp slt i64 %78, %83
  br i1 %84, label %85, label %157

85:                                               ; preds = %69
  %86 = inttoptr i64 %77 to i8*
  %87 = getelementptr inbounds %"struct.base::internal::PartitionBucket", %"struct.base::internal::PartitionBucket"* %67, i64 0, i32 3
  %88 = load i32, i32* %87, align 8
  %89 = zext i32 %88 to i64
  %90 = getelementptr inbounds %"struct.base::internal::PartitionBucket", %"struct.base::internal::PartitionBucket"* %67, i64 0, i32 5
  %91 = load i64, i64* %90, align 8
  %92 = mul i64 %91, %78
  %93 = lshr i64 %92, 42
  %94 = mul nuw nsw i64 %93, %89
  %95 = getelementptr inbounds i8, i8* %86, i64 %94
  %96 = ptrtoint i8* %95 to i64
  %97 = icmp eq i8* %95, null
  br i1 %97, label %157, label %98

98:                                               ; preds = %85
  %99 = lshr i64 %96, 4
  %100 = lshr i64 %96, 10
  %101 = and i64 %100, 2047
  %102 = and i64 %99, 63
  %103 = getelementptr inbounds %"class.base::internal::ObjectBitmap", %"class.base::internal::ObjectBitmap"* %54, i64 0, i32 0, i32 0, i64 %101
  %104 = load atomic i64, i64* %103 monotonic, align 8
  %105 = shl i64 1, %102
  %106 = and i64 %104, %105
  %107 = icmp eq i64 %106, 0
  br i1 %107, label %157, label %108

108:                                              ; preds = %98
  %109 = and i64 %96, -2097152
  %110 = or i64 %109, 4096
  %111 = inttoptr i64 %110 to i8*
  %112 = lshr i64 %96, 9
  %113 = and i64 %112, 4064
  %114 = getelementptr inbounds i8, i8* %111, i64 %113
  %115 = bitcast i8* %114 to %"struct.base::internal::PartitionPage"*
  %116 = getelementptr inbounds i8, i8* %114, i64 30
  %117 = load i8, i8* %116, align 2
  %118 = zext i8 %117 to i64
  %119 = sub nsw i64 0, %118
  %120 = getelementptr inbounds %"struct.base::internal::PartitionPage", %"struct.base::internal::PartitionPage"* %115, i64 %119, i32 0, i32 1, i64 21
  %121 = load i8, i8* %120, align 1, !range !5
  %122 = icmp eq i8 %121, 0
  br i1 %122, label %123, label %130, !prof !6

123:                                              ; preds = %108
  %124 = getelementptr inbounds %"struct.base::internal::PartitionPage", %"struct.base::internal::PartitionPage"* %115, i64 %119, i32 0, i32 1, i64 8
  %125 = bitcast i8* %124 to %"struct.base::internal::PartitionBucket"**
  %126 = load %"struct.base::internal::PartitionBucket"*, %"struct.base::internal::PartitionBucket"** %125, align 1
  %127 = getelementptr inbounds %"struct.base::internal::PartitionBucket", %"struct.base::internal::PartitionBucket"* %126, i64 0, i32 3
  %128 = load i32, i32* %127, align 8
  %129 = zext i32 %128 to i64
  br label %135

130:                                              ; preds = %108
  %131 = getelementptr inbounds %"struct.base::internal::PartitionPage", %"struct.base::internal::PartitionPage"* %115, i64 %119, i32 0
  %132 = bitcast %union.anon.123* %131 to %"struct.base::internal::PartitionPage"*
  %133 = getelementptr inbounds %"struct.base::internal::PartitionPage", %"struct.base::internal::PartitionPage"* %132, i64 1, i32 0, i32 0, i32 0
  %134 = load i64, i64* %133, align 1
  br label %135

135:                                              ; preds = %130, %123
  %136 = phi i64 [ %129, %123 ], [ %134, %130 ]
  %137 = add i64 %136, %96
  %138 = icmp ugt i64 %137, %29
  br i1 %138, label %139, label %157

139:                                              ; preds = %135
  %140 = xor i64 %105, -1
  %141 = atomicrmw and i64* %103, i64 %140 monotonic
  %142 = load i64, i64* %48, align 8
  %143 = inttoptr i64 %109 to i8*
  %144 = and i64 %142, 1
  %145 = icmp eq i64 %144, 0
  %146 = select i1 %145, i64 16384, i64 32768
  %147 = getelementptr inbounds i8, i8* %143, i64 %146
  %148 = bitcast i8* %147 to %"class.base::internal::ObjectBitmap"*
  %149 = getelementptr inbounds %"class.base::internal::ObjectBitmap", %"class.base::internal::ObjectBitmap"* %148, i64 0, i32 0, i32 0, i64 %101
  %150 = atomicrmw or i64* %149, i64 %105 monotonic
  %151 = getelementptr inbounds %"struct.base::internal::PartitionPage", %"struct.base::internal::PartitionPage"* %115, i64 %119, i32 0, i32 1, i64 8
  %152 = bitcast i8* %151 to %"struct.base::internal::PartitionBucket"**
  %153 = load %"struct.base::internal::PartitionBucket"*, %"struct.base::internal::PartitionBucket"** %152, align 1
  %154 = getelementptr inbounds %"struct.base::internal::PartitionBucket", %"struct.base::internal::PartitionBucket"* %153, i64 0, i32 3
  %155 = load i32, i32* %154, align 8
  %156 = zext i32 %155 to i64
  br label %157

157:                                              ; preds = %28, %38, %47, %69, %85, %98, %135, %139
  %158 = phi i64 [ 0, %85 ], [ 0, %98 ], [ %156, %139 ], [ 0, %135 ], [ 0, %28 ], [ 0, %38 ], [ 0, %69 ], [ 0, %47 ]
  %159 = load i64, i64* %15, align 8
  %160 = add i64 %159, %158
  store i64 %160, i64* %15, align 8
  br label %161

161:                                              ; preds = %25, %157
  %162 = and i32 %23, 2
  %163 = icmp eq i32 %162, 0
  br i1 %163, label %297, label %164

164:                                              ; preds = %161
  %165 = extractelement <4 x i64> %19, i64 1
  %166 = load %"class.base::internal::PCScanTask"*, %"class.base::internal::PCScanTask"** %13, align 8
  %167 = and i64 %165, -8589934592
  %168 = inttoptr i64 %167 to %"class.base::internal::(anonymous namespace)::QuarantineCardTable"*
  %169 = lshr i64 %165, 12
  %170 = and i64 %169, 2097151
  %171 = getelementptr inbounds %"class.base::internal::(anonymous namespace)::QuarantineCardTable", %"class.base::internal::(anonymous namespace)::QuarantineCardTable"* %168, i64 0, i32 0, i32 0, i64 %170
  %172 = load i8, i8* %171, align 1, !range !5
  %173 = icmp eq i8 %172, 0
  br i1 %173, label %293, label %174, !prof !6

174:                                              ; preds = %164
  %175 = inttoptr i64 %165 to i8*
  %176 = and i64 %165, -2097152
  %177 = inttoptr i64 %176 to i8*
  %178 = getelementptr inbounds i8, i8* %177, i64 49152
  %179 = getelementptr inbounds i8, i8* %177, i64 2080768
  %180 = icmp ule i8* %178, %175
  %181 = icmp ugt i8* %179, %175
  %182 = and i1 %181, %180
  br i1 %182, label %183, label %293

183:                                              ; preds = %174
  %184 = getelementptr inbounds %"class.base::internal::PCScanTask", %"class.base::internal::PCScanTask"* %166, i64 0, i32 1
  %185 = load i64, i64* %184, align 8
  %186 = and i64 %185, 1
  %187 = icmp eq i64 %186, 0
  %188 = select i1 %187, i64 32768, i64 16384
  %189 = getelementptr inbounds i8, i8* %177, i64 %188
  %190 = bitcast i8* %189 to %"class.base::internal::ObjectBitmap"*
  %191 = or i64 %176, 4096
  %192 = inttoptr i64 %191 to i8*
  %193 = lshr i64 %165, 9
  %194 = and i64 %193, 4064
  %195 = getelementptr inbounds i8, i8* %192, i64 %194
  %196 = bitcast i8* %195 to %"struct.base::internal::PartitionPage"*
  %197 = getelementptr inbounds i8, i8* %195, i64 30
  %198 = load i8, i8* %197, align 2
  %199 = zext i8 %198 to i64
  %200 = sub nsw i64 0, %199
  %201 = getelementptr inbounds %"struct.base::internal::PartitionPage", %"struct.base::internal::PartitionPage"* %196, i64 %200, i32 0, i32 1, i64 8
  %202 = bitcast i8* %201 to %"struct.base::internal::PartitionBucket"**
  %203 = load %"struct.base::internal::PartitionBucket"*, %"struct.base::internal::PartitionBucket"** %202, align 1
  %204 = icmp eq %"struct.base::internal::PartitionBucket"* %203, null
  br i1 %204, label %293, label %205

205:                                              ; preds = %183
  %206 = getelementptr inbounds %"struct.base::internal::PartitionPage", %"struct.base::internal::PartitionPage"* %196, i64 %200, i32 0
  %207 = ptrtoint %union.anon.123* %206 to i64
  %208 = and i64 %207, 2097151
  %209 = add nuw nsw i64 %208, 36028797018959872
  %210 = lshr i64 %209, 5
  %211 = and i64 %207, -2097152
  %212 = shl i64 %210, 14
  %213 = add i64 %212, %211
  %214 = sub i64 %165, %213
  %215 = getelementptr inbounds %"struct.base::internal::PartitionBucket", %"struct.base::internal::PartitionBucket"* %203, i64 0, i32 4
  %216 = load i32, i32* %215, align 4
  %217 = shl i32 %216, 12
  %218 = and i32 %217, 1044480
  %219 = zext i32 %218 to i64
  %220 = icmp slt i64 %214, %219
  br i1 %220, label %221, label %293

221:                                              ; preds = %205
  %222 = inttoptr i64 %213 to i8*
  %223 = getelementptr inbounds %"struct.base::internal::PartitionBucket", %"struct.base::internal::PartitionBucket"* %203, i64 0, i32 3
  %224 = load i32, i32* %223, align 8
  %225 = zext i32 %224 to i64
  %226 = getelementptr inbounds %"struct.base::internal::PartitionBucket", %"struct.base::internal::PartitionBucket"* %203, i64 0, i32 5
  %227 = load i64, i64* %226, align 8
  %228 = mul i64 %227, %214
  %229 = lshr i64 %228, 42
  %230 = mul nuw nsw i64 %229, %225
  %231 = getelementptr inbounds i8, i8* %222, i64 %230
  %232 = ptrtoint i8* %231 to i64
  %233 = icmp eq i8* %231, null
  br i1 %233, label %293, label %234

234:                                              ; preds = %221
  %235 = lshr i64 %232, 4
  %236 = lshr i64 %232, 10
  %237 = and i64 %236, 2047
  %238 = and i64 %235, 63
  %239 = getelementptr inbounds %"class.base::internal::ObjectBitmap", %"class.base::internal::ObjectBitmap"* %190, i64 0, i32 0, i32 0, i64 %237
  %240 = load atomic i64, i64* %239 monotonic, align 8
  %241 = shl i64 1, %238
  %242 = and i64 %240, %241
  %243 = icmp eq i64 %242, 0
  br i1 %243, label %293, label %244

244:                                              ; preds = %234
  %245 = and i64 %232, -2097152
  %246 = or i64 %245, 4096
  %247 = inttoptr i64 %246 to i8*
  %248 = lshr i64 %232, 9
  %249 = and i64 %248, 4064
  %250 = getelementptr inbounds i8, i8* %247, i64 %249
  %251 = bitcast i8* %250 to %"struct.base::internal::PartitionPage"*
  %252 = getelementptr inbounds i8, i8* %250, i64 30
  %253 = load i8, i8* %252, align 2
  %254 = zext i8 %253 to i64
  %255 = sub nsw i64 0, %254
  %256 = getelementptr inbounds %"struct.base::internal::PartitionPage", %"struct.base::internal::PartitionPage"* %251, i64 %255, i32 0, i32 1, i64 21
  %257 = load i8, i8* %256, align 1, !range !5
  %258 = icmp eq i8 %257, 0
  br i1 %258, label %259, label %266, !prof !6

259:                                              ; preds = %244
  %260 = getelementptr inbounds %"struct.base::internal::PartitionPage", %"struct.base::internal::PartitionPage"* %251, i64 %255, i32 0, i32 1, i64 8
  %261 = bitcast i8* %260 to %"struct.base::internal::PartitionBucket"**
  %262 = load %"struct.base::internal::PartitionBucket"*, %"struct.base::internal::PartitionBucket"** %261, align 1
  %263 = getelementptr inbounds %"struct.base::internal::PartitionBucket", %"struct.base::internal::PartitionBucket"* %262, i64 0, i32 3
  %264 = load i32, i32* %263, align 8
  %265 = zext i32 %264 to i64
  br label %271

266:                                              ; preds = %244
  %267 = getelementptr inbounds %"struct.base::internal::PartitionPage", %"struct.base::internal::PartitionPage"* %251, i64 %255, i32 0
  %268 = bitcast %union.anon.123* %267 to %"struct.base::internal::PartitionPage"*
  %269 = getelementptr inbounds %"struct.base::internal::PartitionPage", %"struct.base::internal::PartitionPage"* %268, i64 1, i32 0, i32 0, i32 0
  %270 = load i64, i64* %269, align 1
  br label %271

271:                                              ; preds = %266, %259
  %272 = phi i64 [ %265, %259 ], [ %270, %266 ]
  %273 = add i64 %272, %232
  %274 = icmp ugt i64 %273, %165
  br i1 %274, label %275, label %293

275:                                              ; preds = %271
  %276 = xor i64 %241, -1
  %277 = atomicrmw and i64* %239, i64 %276 monotonic
  %278 = load i64, i64* %184, align 8
  %279 = inttoptr i64 %245 to i8*
  %280 = and i64 %278, 1
  %281 = icmp eq i64 %280, 0
  %282 = select i1 %281, i64 16384, i64 32768
  %283 = getelementptr inbounds i8, i8* %279, i64 %282
  %284 = bitcast i8* %283 to %"class.base::internal::ObjectBitmap"*
  %285 = getelementptr inbounds %"class.base::internal::ObjectBitmap", %"class.base::internal::ObjectBitmap"* %284, i64 0, i32 0, i32 0, i64 %237
  %286 = atomicrmw or i64* %285, i64 %241 monotonic
  %287 = getelementptr inbounds %"struct.base::internal::PartitionPage", %"struct.base::internal::PartitionPage"* %251, i64 %255, i32 0, i32 1, i64 8
  %288 = bitcast i8* %287 to %"struct.base::internal::PartitionBucket"**
  %289 = load %"struct.base::internal::PartitionBucket"*, %"struct.base::internal::PartitionBucket"** %288, align 1
  %290 = getelementptr inbounds %"struct.base::internal::PartitionBucket", %"struct.base::internal::PartitionBucket"* %289, i64 0, i32 3
  %291 = load i32, i32* %290, align 8
  %292 = zext i32 %291 to i64
  br label %293

293:                                              ; preds = %164, %174, %183, %205, %221, %234, %271, %275
  %294 = phi i64 [ 0, %221 ], [ 0, %234 ], [ %292, %275 ], [ 0, %271 ], [ 0, %164 ], [ 0, %174 ], [ 0, %205 ], [ 0, %183 ]
  %295 = load i64, i64* %15, align 8
  %296 = add i64 %295, %294
  store i64 %296, i64* %15, align 8
  br label %297

297:                                              ; preds = %161, %293
  %298 = and i32 %23, 4
  %299 = icmp eq i32 %298, 0
  br i1 %299, label %433, label %300

300:                                              ; preds = %297
  %301 = extractelement <4 x i64> %19, i64 2
  %302 = load %"class.base::internal::PCScanTask"*, %"class.base::internal::PCScanTask"** %13, align 8
  %303 = and i64 %301, -8589934592
  %304 = inttoptr i64 %303 to %"class.base::internal::(anonymous namespace)::QuarantineCardTable"*
  %305 = lshr i64 %301, 12
  %306 = and i64 %305, 2097151
  %307 = getelementptr inbounds %"class.base::internal::(anonymous namespace)::QuarantineCardTable", %"class.base::internal::(anonymous namespace)::QuarantineCardTable"* %304, i64 0, i32 0, i32 0, i64 %306
  %308 = load i8, i8* %307, align 1, !range !5
  %309 = icmp eq i8 %308, 0
  br i1 %309, label %429, label %310, !prof !6

310:                                              ; preds = %300
  %311 = inttoptr i64 %301 to i8*
  %312 = and i64 %301, -2097152
  %313 = inttoptr i64 %312 to i8*
  %314 = getelementptr inbounds i8, i8* %313, i64 49152
  %315 = getelementptr inbounds i8, i8* %313, i64 2080768
  %316 = icmp ule i8* %314, %311
  %317 = icmp ugt i8* %315, %311
  %318 = and i1 %317, %316
  br i1 %318, label %319, label %429

319:                                              ; preds = %310
  %320 = getelementptr inbounds %"class.base::internal::PCScanTask", %"class.base::internal::PCScanTask"* %302, i64 0, i32 1
  %321 = load i64, i64* %320, align 8
  %322 = and i64 %321, 1
  %323 = icmp eq i64 %322, 0
  %324 = select i1 %323, i64 32768, i64 16384
  %325 = getelementptr inbounds i8, i8* %313, i64 %324
  %326 = bitcast i8* %325 to %"class.base::internal::ObjectBitmap"*
  %327 = or i64 %312, 4096
  %328 = inttoptr i64 %327 to i8*
  %329 = lshr i64 %301, 9
  %330 = and i64 %329, 4064
  %331 = getelementptr inbounds i8, i8* %328, i64 %330
  %332 = bitcast i8* %331 to %"struct.base::internal::PartitionPage"*
  %333 = getelementptr inbounds i8, i8* %331, i64 30
  %334 = load i8, i8* %333, align 2
  %335 = zext i8 %334 to i64
  %336 = sub nsw i64 0, %335
  %337 = getelementptr inbounds %"struct.base::internal::PartitionPage", %"struct.base::internal::PartitionPage"* %332, i64 %336, i32 0, i32 1, i64 8
  %338 = bitcast i8* %337 to %"struct.base::internal::PartitionBucket"**
  %339 = load %"struct.base::internal::PartitionBucket"*, %"struct.base::internal::PartitionBucket"** %338, align 1
  %340 = icmp eq %"struct.base::internal::PartitionBucket"* %339, null
  br i1 %340, label %429, label %341

341:                                              ; preds = %319
  %342 = getelementptr inbounds %"struct.base::internal::PartitionPage", %"struct.base::internal::PartitionPage"* %332, i64 %336, i32 0
  %343 = ptrtoint %union.anon.123* %342 to i64
  %344 = and i64 %343, 2097151
  %345 = add nuw nsw i64 %344, 36028797018959872
  %346 = lshr i64 %345, 5
  %347 = and i64 %343, -2097152
  %348 = shl i64 %346, 14
  %349 = add i64 %348, %347
  %350 = sub i64 %301, %349
  %351 = getelementptr inbounds %"struct.base::internal::PartitionBucket", %"struct.base::internal::PartitionBucket"* %339, i64 0, i32 4
  %352 = load i32, i32* %351, align 4
  %353 = shl i32 %352, 12
  %354 = and i32 %353, 1044480
  %355 = zext i32 %354 to i64
  %356 = icmp slt i64 %350, %355
  br i1 %356, label %357, label %429

357:                                              ; preds = %341
  %358 = inttoptr i64 %349 to i8*
  %359 = getelementptr inbounds %"struct.base::internal::PartitionBucket", %"struct.base::internal::PartitionBucket"* %339, i64 0, i32 3
  %360 = load i32, i32* %359, align 8
  %361 = zext i32 %360 to i64
  %362 = getelementptr inbounds %"struct.base::internal::PartitionBucket", %"struct.base::internal::PartitionBucket"* %339, i64 0, i32 5
  %363 = load i64, i64* %362, align 8
  %364 = mul i64 %363, %350
  %365 = lshr i64 %364, 42
  %366 = mul nuw nsw i64 %365, %361
  %367 = getelementptr inbounds i8, i8* %358, i64 %366
  %368 = ptrtoint i8* %367 to i64
  %369 = icmp eq i8* %367, null
  br i1 %369, label %429, label %370

370:                                              ; preds = %357
  %371 = lshr i64 %368, 4
  %372 = lshr i64 %368, 10
  %373 = and i64 %372, 2047
  %374 = and i64 %371, 63
  %375 = getelementptr inbounds %"class.base::internal::ObjectBitmap", %"class.base::internal::ObjectBitmap"* %326, i64 0, i32 0, i32 0, i64 %373
  %376 = load atomic i64, i64* %375 monotonic, align 8
  %377 = shl i64 1, %374
  %378 = and i64 %376, %377
  %379 = icmp eq i64 %378, 0
  br i1 %379, label %429, label %380

380:                                              ; preds = %370
  %381 = and i64 %368, -2097152
  %382 = or i64 %381, 4096
  %383 = inttoptr i64 %382 to i8*
  %384 = lshr i64 %368, 9
  %385 = and i64 %384, 4064
  %386 = getelementptr inbounds i8, i8* %383, i64 %385
  %387 = bitcast i8* %386 to %"struct.base::internal::PartitionPage"*
  %388 = getelementptr inbounds i8, i8* %386, i64 30
  %389 = load i8, i8* %388, align 2
  %390 = zext i8 %389 to i64
  %391 = sub nsw i64 0, %390
  %392 = getelementptr inbounds %"struct.base::internal::PartitionPage", %"struct.base::internal::PartitionPage"* %387, i64 %391, i32 0, i32 1, i64 21
  %393 = load i8, i8* %392, align 1, !range !5
  %394 = icmp eq i8 %393, 0
  br i1 %394, label %395, label %402, !prof !6

395:                                              ; preds = %380
  %396 = getelementptr inbounds %"struct.base::internal::PartitionPage", %"struct.base::internal::PartitionPage"* %387, i64 %391, i32 0, i32 1, i64 8
  %397 = bitcast i8* %396 to %"struct.base::internal::PartitionBucket"**
  %398 = load %"struct.base::internal::PartitionBucket"*, %"struct.base::internal::PartitionBucket"** %397, align 1
  %399 = getelementptr inbounds %"struct.base::internal::PartitionBucket", %"struct.base::internal::PartitionBucket"* %398, i64 0, i32 3
  %400 = load i32, i32* %399, align 8
  %401 = zext i32 %400 to i64
  br label %407

402:                                              ; preds = %380
  %403 = getelementptr inbounds %"struct.base::internal::PartitionPage", %"struct.base::internal::PartitionPage"* %387, i64 %391, i32 0
  %404 = bitcast %union.anon.123* %403 to %"struct.base::internal::PartitionPage"*
  %405 = getelementptr inbounds %"struct.base::internal::PartitionPage", %"struct.base::internal::PartitionPage"* %404, i64 1, i32 0, i32 0, i32 0
  %406 = load i64, i64* %405, align 1
  br label %407

407:                                              ; preds = %402, %395
  %408 = phi i64 [ %401, %395 ], [ %406, %402 ]
  %409 = add i64 %408, %368
  %410 = icmp ugt i64 %409, %301
  br i1 %410, label %411, label %429

411:                                              ; preds = %407
  %412 = xor i64 %377, -1
  %413 = atomicrmw and i64* %375, i64 %412 monotonic
  %414 = load i64, i64* %320, align 8
  %415 = inttoptr i64 %381 to i8*
  %416 = and i64 %414, 1
  %417 = icmp eq i64 %416, 0
  %418 = select i1 %417, i64 16384, i64 32768
  %419 = getelementptr inbounds i8, i8* %415, i64 %418
  %420 = bitcast i8* %419 to %"class.base::internal::ObjectBitmap"*
  %421 = getelementptr inbounds %"class.base::internal::ObjectBitmap", %"class.base::internal::ObjectBitmap"* %420, i64 0, i32 0, i32 0, i64 %373
  %422 = atomicrmw or i64* %421, i64 %377 monotonic
  %423 = getelementptr inbounds %"struct.base::internal::PartitionPage", %"struct.base::internal::PartitionPage"* %387, i64 %391, i32 0, i32 1, i64 8
  %424 = bitcast i8* %423 to %"struct.base::internal::PartitionBucket"**
  %425 = load %"struct.base::internal::PartitionBucket"*, %"struct.base::internal::PartitionBucket"** %424, align 1
  %426 = getelementptr inbounds %"struct.base::internal::PartitionBucket", %"struct.base::internal::PartitionBucket"* %425, i64 0, i32 3
  %427 = load i32, i32* %426, align 8
  %428 = zext i32 %427 to i64
  br label %429

429:                                              ; preds = %300, %310, %319, %341, %357, %370, %407, %411
  %430 = phi i64 [ 0, %357 ], [ 0, %370 ], [ %428, %411 ], [ 0, %407 ], [ 0, %300 ], [ 0, %310 ], [ 0, %341 ], [ 0, %319 ]
  %431 = load i64, i64* %15, align 8
  %432 = add i64 %431, %430
  store i64 %432, i64* %15, align 8
  br label %433

433:                                              ; preds = %297, %429
  %434 = and i32 %23, 8
  %435 = icmp eq i32 %434, 0
  br i1 %435, label %569, label %436

436:                                              ; preds = %433
  %437 = extractelement <4 x i64> %19, i64 3
  %438 = load %"class.base::internal::PCScanTask"*, %"class.base::internal::PCScanTask"** %13, align 8
  %439 = and i64 %437, -8589934592
  %440 = inttoptr i64 %439 to %"class.base::internal::(anonymous namespace)::QuarantineCardTable"*
  %441 = lshr i64 %437, 12
  %442 = and i64 %441, 2097151
  %443 = getelementptr inbounds %"class.base::internal::(anonymous namespace)::QuarantineCardTable", %"class.base::internal::(anonymous namespace)::QuarantineCardTable"* %440, i64 0, i32 0, i32 0, i64 %442
  %444 = load i8, i8* %443, align 1, !range !5
  %445 = icmp eq i8 %444, 0
  br i1 %445, label %565, label %446, !prof !6

446:                                              ; preds = %436
  %447 = inttoptr i64 %437 to i8*
  %448 = and i64 %437, -2097152
  %449 = inttoptr i64 %448 to i8*
  %450 = getelementptr inbounds i8, i8* %449, i64 49152
  %451 = getelementptr inbounds i8, i8* %449, i64 2080768
  %452 = icmp ule i8* %450, %447
  %453 = icmp ugt i8* %451, %447
  %454 = and i1 %453, %452
  br i1 %454, label %455, label %565

455:                                              ; preds = %446
  %456 = getelementptr inbounds %"class.base::internal::PCScanTask", %"class.base::internal::PCScanTask"* %438, i64 0, i32 1
  %457 = load i64, i64* %456, align 8
  %458 = and i64 %457, 1
  %459 = icmp eq i64 %458, 0
  %460 = select i1 %459, i64 32768, i64 16384
  %461 = getelementptr inbounds i8, i8* %449, i64 %460
  %462 = bitcast i8* %461 to %"class.base::internal::ObjectBitmap"*
  %463 = or i64 %448, 4096
  %464 = inttoptr i64 %463 to i8*
  %465 = lshr i64 %437, 9
  %466 = and i64 %465, 4064
  %467 = getelementptr inbounds i8, i8* %464, i64 %466
  %468 = bitcast i8* %467 to %"struct.base::internal::PartitionPage"*
  %469 = getelementptr inbounds i8, i8* %467, i64 30
  %470 = load i8, i8* %469, align 2
  %471 = zext i8 %470 to i64
  %472 = sub nsw i64 0, %471
  %473 = getelementptr inbounds %"struct.base::internal::PartitionPage", %"struct.base::internal::PartitionPage"* %468, i64 %472, i32 0, i32 1, i64 8
  %474 = bitcast i8* %473 to %"struct.base::internal::PartitionBucket"**
  %475 = load %"struct.base::internal::PartitionBucket"*, %"struct.base::internal::PartitionBucket"** %474, align 1
  %476 = icmp eq %"struct.base::internal::PartitionBucket"* %475, null
  br i1 %476, label %565, label %477

477:                                              ; preds = %455
  %478 = getelementptr inbounds %"struct.base::internal::PartitionPage", %"struct.base::internal::PartitionPage"* %468, i64 %472, i32 0
  %479 = ptrtoint %union.anon.123* %478 to i64
  %480 = and i64 %479, 2097151
  %481 = add nuw nsw i64 %480, 36028797018959872
  %482 = lshr i64 %481, 5
  %483 = and i64 %479, -2097152
  %484 = shl i64 %482, 14
  %485 = add i64 %484, %483
  %486 = sub i64 %437, %485
  %487 = getelementptr inbounds %"struct.base::internal::PartitionBucket", %"struct.base::internal::PartitionBucket"* %475, i64 0, i32 4
  %488 = load i32, i32* %487, align 4
  %489 = shl i32 %488, 12
  %490 = and i32 %489, 1044480
  %491 = zext i32 %490 to i64
  %492 = icmp slt i64 %486, %491
  br i1 %492, label %493, label %565

493:                                              ; preds = %477
  %494 = inttoptr i64 %485 to i8*
  %495 = getelementptr inbounds %"struct.base::internal::PartitionBucket", %"struct.base::internal::PartitionBucket"* %475, i64 0, i32 3
  %496 = load i32, i32* %495, align 8
  %497 = zext i32 %496 to i64
  %498 = getelementptr inbounds %"struct.base::internal::PartitionBucket", %"struct.base::internal::PartitionBucket"* %475, i64 0, i32 5
  %499 = load i64, i64* %498, align 8
  %500 = mul i64 %499, %486
  %501 = lshr i64 %500, 42
  %502 = mul nuw nsw i64 %501, %497
  %503 = getelementptr inbounds i8, i8* %494, i64 %502
  %504 = ptrtoint i8* %503 to i64
  %505 = icmp eq i8* %503, null
  br i1 %505, label %565, label %506

506:                                              ; preds = %493
  %507 = lshr i64 %504, 4
  %508 = lshr i64 %504, 10
  %509 = and i64 %508, 2047
  %510 = and i64 %507, 63
  %511 = getelementptr inbounds %"class.base::internal::ObjectBitmap", %"class.base::internal::ObjectBitmap"* %462, i64 0, i32 0, i32 0, i64 %509
  %512 = load atomic i64, i64* %511 monotonic, align 8
  %513 = shl i64 1, %510
  %514 = and i64 %512, %513
  %515 = icmp eq i64 %514, 0
  br i1 %515, label %565, label %516

516:                                              ; preds = %506
  %517 = and i64 %504, -2097152
  %518 = or i64 %517, 4096
  %519 = inttoptr i64 %518 to i8*
  %520 = lshr i64 %504, 9
  %521 = and i64 %520, 4064
  %522 = getelementptr inbounds i8, i8* %519, i64 %521
  %523 = bitcast i8* %522 to %"struct.base::internal::PartitionPage"*
  %524 = getelementptr inbounds i8, i8* %522, i64 30
  %525 = load i8, i8* %524, align 2
  %526 = zext i8 %525 to i64
  %527 = sub nsw i64 0, %526
  %528 = getelementptr inbounds %"struct.base::internal::PartitionPage", %"struct.base::internal::PartitionPage"* %523, i64 %527, i32 0, i32 1, i64 21
  %529 = load i8, i8* %528, align 1, !range !5
  %530 = icmp eq i8 %529, 0
  br i1 %530, label %531, label %538, !prof !6

531:                                              ; preds = %516
  %532 = getelementptr inbounds %"struct.base::internal::PartitionPage", %"struct.base::internal::PartitionPage"* %523, i64 %527, i32 0, i32 1, i64 8
  %533 = bitcast i8* %532 to %"struct.base::internal::PartitionBucket"**
  %534 = load %"struct.base::internal::PartitionBucket"*, %"struct.base::internal::PartitionBucket"** %533, align 1
  %535 = getelementptr inbounds %"struct.base::internal::PartitionBucket", %"struct.base::internal::PartitionBucket"* %534, i64 0, i32 3
  %536 = load i32, i32* %535, align 8
  %537 = zext i32 %536 to i64
  br label %543

538:                                              ; preds = %516
  %539 = getelementptr inbounds %"struct.base::internal::PartitionPage", %"struct.base::internal::PartitionPage"* %523, i64 %527, i32 0
  %540 = bitcast %union.anon.123* %539 to %"struct.base::internal::PartitionPage"*
  %541 = getelementptr inbounds %"struct.base::internal::PartitionPage", %"struct.base::internal::PartitionPage"* %540, i64 1, i32 0, i32 0, i32 0
  %542 = load i64, i64* %541, align 1
  br label %543

543:                                              ; preds = %538, %531
  %544 = phi i64 [ %537, %531 ], [ %542, %538 ]
  %545 = add i64 %544, %504
  %546 = icmp ugt i64 %545, %437
  br i1 %546, label %547, label %565

547:                                              ; preds = %543
  %548 = xor i64 %513, -1
  %549 = atomicrmw and i64* %511, i64 %548 monotonic
  %550 = load i64, i64* %456, align 8
  %551 = inttoptr i64 %517 to i8*
  %552 = and i64 %550, 1
  %553 = icmp eq i64 %552, 0
  %554 = select i1 %553, i64 16384, i64 32768
  %555 = getelementptr inbounds i8, i8* %551, i64 %554
  %556 = bitcast i8* %555 to %"class.base::internal::ObjectBitmap"*
  %557 = getelementptr inbounds %"class.base::internal::ObjectBitmap", %"class.base::internal::ObjectBitmap"* %556, i64 0, i32 0, i32 0, i64 %509
  %558 = atomicrmw or i64* %557, i64 %513 monotonic
  %559 = getelementptr inbounds %"struct.base::internal::PartitionPage", %"struct.base::internal::PartitionPage"* %523, i64 %527, i32 0, i32 1, i64 8
  %560 = bitcast i8* %559 to %"struct.base::internal::PartitionBucket"**
  %561 = load %"struct.base::internal::PartitionBucket"*, %"struct.base::internal::PartitionBucket"** %560, align 1
  %562 = getelementptr inbounds %"struct.base::internal::PartitionBucket", %"struct.base::internal::PartitionBucket"* %561, i64 0, i32 3
  %563 = load i32, i32* %562, align 8
  %564 = zext i32 %563 to i64
  br label %565

565:                                              ; preds = %436, %446, %455, %477, %493, %506, %543, %547
  %566 = phi i64 [ 0, %493 ], [ 0, %506 ], [ %564, %547 ], [ 0, %543 ], [ 0, %436 ], [ 0, %446 ], [ 0, %477 ], [ 0, %455 ]
  %567 = load i64, i64* %15, align 8
  %568 = add i64 %567, %566
  store i64 %568, i64* %15, align 8
  br label %569

569:                                              ; preds = %565, %433, %16
  %570 = getelementptr inbounds i64, i64* %17, i64 4
  %571 = icmp ult i64* %570, %9
  br i1 %571, label %16, label %572

572:                                              ; preds = %569, %3
  %573 = phi i64* [ %1, %3 ], [ %570, %569 ]
  tail call void @_ZN4base8internal8ScanLoopINS0_14PCScanScanLoopEE15RunUnvectorizedEPmS4_(%"class.base::internal::ScanLoop"* %0, i64* %573, i64* %2)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal8ScanLoopINS0_14PCScanScanLoopEE7RunSSE4EPmS4_(%"class.base::internal::ScanLoop"*, i64*, i64*) local_unnamed_addr #9 comdat align 2 {
  %4 = getelementptr inbounds %"class.base::internal::ScanLoop", %"class.base::internal::ScanLoop"* %0, i64 8
  %5 = bitcast %"class.base::internal::ScanLoop"* %4 to i64*
  %6 = load i64, i64* %5, align 8
  %7 = insertelement <2 x i64> undef, i64 %6, i32 0
  %8 = shufflevector <2 x i64> %7, <2 x i64> undef, <2 x i32> zeroinitializer
  %9 = getelementptr inbounds i64, i64* %2, i64 -2
  %10 = icmp ugt i64* %9, %1
  br i1 %10, label %11, label %303

11:                                               ; preds = %3
  %12 = getelementptr inbounds %"class.base::internal::ScanLoop", %"class.base::internal::ScanLoop"* %0, i64 16
  %13 = bitcast %"class.base::internal::ScanLoop"* %12 to %"class.base::internal::PCScanTask"**
  %14 = getelementptr inbounds %"class.base::internal::ScanLoop", %"class.base::internal::ScanLoop"* %0, i64 24
  %15 = bitcast %"class.base::internal::ScanLoop"* %14 to i64*
  br label %16

16:                                               ; preds = %11, %300
  %17 = phi i64* [ %1, %11 ], [ %301, %300 ]
  %18 = bitcast i64* %17 to <2 x i64>*
  %19 = load <2 x i64>, <2 x i64>* %18, align 1
  %20 = and <2 x i64> %19, <i64 -8589934592, i64 -8589934592>
  %21 = icmp eq <2 x i64> %20, %8
  %22 = bitcast <2 x i1> %21 to i2
  %23 = zext i2 %22 to i32
  %24 = icmp eq i2 %22, 0
  br i1 %24, label %300, label %25, !prof !6

25:                                               ; preds = %16
  %26 = and i32 %23, 1
  %27 = icmp eq i32 %26, 0
  br i1 %27, label %161, label %28

28:                                               ; preds = %25
  %29 = extractelement <2 x i64> %19, i32 0
  %30 = load %"class.base::internal::PCScanTask"*, %"class.base::internal::PCScanTask"** %13, align 8
  %31 = and i64 %29, -8589934592
  %32 = inttoptr i64 %31 to %"class.base::internal::(anonymous namespace)::QuarantineCardTable"*
  %33 = lshr i64 %29, 12
  %34 = and i64 %33, 2097151
  %35 = getelementptr inbounds %"class.base::internal::(anonymous namespace)::QuarantineCardTable", %"class.base::internal::(anonymous namespace)::QuarantineCardTable"* %32, i64 0, i32 0, i32 0, i64 %34
  %36 = load i8, i8* %35, align 1, !range !5
  %37 = icmp eq i8 %36, 0
  br i1 %37, label %157, label %38, !prof !6

38:                                               ; preds = %28
  %39 = inttoptr i64 %29 to i8*
  %40 = and i64 %29, -2097152
  %41 = inttoptr i64 %40 to i8*
  %42 = getelementptr inbounds i8, i8* %41, i64 49152
  %43 = getelementptr inbounds i8, i8* %41, i64 2080768
  %44 = icmp ule i8* %42, %39
  %45 = icmp ugt i8* %43, %39
  %46 = and i1 %45, %44
  br i1 %46, label %47, label %157

47:                                               ; preds = %38
  %48 = getelementptr inbounds %"class.base::internal::PCScanTask", %"class.base::internal::PCScanTask"* %30, i64 0, i32 1
  %49 = load i64, i64* %48, align 8
  %50 = and i64 %49, 1
  %51 = icmp eq i64 %50, 0
  %52 = select i1 %51, i64 32768, i64 16384
  %53 = getelementptr inbounds i8, i8* %41, i64 %52
  %54 = bitcast i8* %53 to %"class.base::internal::ObjectBitmap"*
  %55 = or i64 %40, 4096
  %56 = inttoptr i64 %55 to i8*
  %57 = lshr i64 %29, 9
  %58 = and i64 %57, 4064
  %59 = getelementptr inbounds i8, i8* %56, i64 %58
  %60 = bitcast i8* %59 to %"struct.base::internal::PartitionPage"*
  %61 = getelementptr inbounds i8, i8* %59, i64 30
  %62 = load i8, i8* %61, align 2
  %63 = zext i8 %62 to i64
  %64 = sub nsw i64 0, %63
  %65 = getelementptr inbounds %"struct.base::internal::PartitionPage", %"struct.base::internal::PartitionPage"* %60, i64 %64, i32 0, i32 1, i64 8
  %66 = bitcast i8* %65 to %"struct.base::internal::PartitionBucket"**
  %67 = load %"struct.base::internal::PartitionBucket"*, %"struct.base::internal::PartitionBucket"** %66, align 1
  %68 = icmp eq %"struct.base::internal::PartitionBucket"* %67, null
  br i1 %68, label %157, label %69

69:                                               ; preds = %47
  %70 = getelementptr inbounds %"struct.base::internal::PartitionPage", %"struct.base::internal::PartitionPage"* %60, i64 %64, i32 0
  %71 = ptrtoint %union.anon.123* %70 to i64
  %72 = and i64 %71, 2097151
  %73 = add nuw nsw i64 %72, 36028797018959872
  %74 = lshr i64 %73, 5
  %75 = and i64 %71, -2097152
  %76 = shl i64 %74, 14
  %77 = add i64 %76, %75
  %78 = sub i64 %29, %77
  %79 = getelementptr inbounds %"struct.base::internal::PartitionBucket", %"struct.base::internal::PartitionBucket"* %67, i64 0, i32 4
  %80 = load i32, i32* %79, align 4
  %81 = shl i32 %80, 12
  %82 = and i32 %81, 1044480
  %83 = zext i32 %82 to i64
  %84 = icmp slt i64 %78, %83
  br i1 %84, label %85, label %157

85:                                               ; preds = %69
  %86 = inttoptr i64 %77 to i8*
  %87 = getelementptr inbounds %"struct.base::internal::PartitionBucket", %"struct.base::internal::PartitionBucket"* %67, i64 0, i32 3
  %88 = load i32, i32* %87, align 8
  %89 = zext i32 %88 to i64
  %90 = getelementptr inbounds %"struct.base::internal::PartitionBucket", %"struct.base::internal::PartitionBucket"* %67, i64 0, i32 5
  %91 = load i64, i64* %90, align 8
  %92 = mul i64 %91, %78
  %93 = lshr i64 %92, 42
  %94 = mul nuw nsw i64 %93, %89
  %95 = getelementptr inbounds i8, i8* %86, i64 %94
  %96 = ptrtoint i8* %95 to i64
  %97 = icmp eq i8* %95, null
  br i1 %97, label %157, label %98

98:                                               ; preds = %85
  %99 = lshr i64 %96, 4
  %100 = lshr i64 %96, 10
  %101 = and i64 %100, 2047
  %102 = and i64 %99, 63
  %103 = getelementptr inbounds %"class.base::internal::ObjectBitmap", %"class.base::internal::ObjectBitmap"* %54, i64 0, i32 0, i32 0, i64 %101
  %104 = load atomic i64, i64* %103 monotonic, align 8
  %105 = shl i64 1, %102
  %106 = and i64 %104, %105
  %107 = icmp eq i64 %106, 0
  br i1 %107, label %157, label %108

108:                                              ; preds = %98
  %109 = and i64 %96, -2097152
  %110 = or i64 %109, 4096
  %111 = inttoptr i64 %110 to i8*
  %112 = lshr i64 %96, 9
  %113 = and i64 %112, 4064
  %114 = getelementptr inbounds i8, i8* %111, i64 %113
  %115 = bitcast i8* %114 to %"struct.base::internal::PartitionPage"*
  %116 = getelementptr inbounds i8, i8* %114, i64 30
  %117 = load i8, i8* %116, align 2
  %118 = zext i8 %117 to i64
  %119 = sub nsw i64 0, %118
  %120 = getelementptr inbounds %"struct.base::internal::PartitionPage", %"struct.base::internal::PartitionPage"* %115, i64 %119, i32 0, i32 1, i64 21
  %121 = load i8, i8* %120, align 1, !range !5
  %122 = icmp eq i8 %121, 0
  br i1 %122, label %123, label %130, !prof !6

123:                                              ; preds = %108
  %124 = getelementptr inbounds %"struct.base::internal::PartitionPage", %"struct.base::internal::PartitionPage"* %115, i64 %119, i32 0, i32 1, i64 8
  %125 = bitcast i8* %124 to %"struct.base::internal::PartitionBucket"**
  %126 = load %"struct.base::internal::PartitionBucket"*, %"struct.base::internal::PartitionBucket"** %125, align 1
  %127 = getelementptr inbounds %"struct.base::internal::PartitionBucket", %"struct.base::internal::PartitionBucket"* %126, i64 0, i32 3
  %128 = load i32, i32* %127, align 8
  %129 = zext i32 %128 to i64
  br label %135

130:                                              ; preds = %108
  %131 = getelementptr inbounds %"struct.base::internal::PartitionPage", %"struct.base::internal::PartitionPage"* %115, i64 %119, i32 0
  %132 = bitcast %union.anon.123* %131 to %"struct.base::internal::PartitionPage"*
  %133 = getelementptr inbounds %"struct.base::internal::PartitionPage", %"struct.base::internal::PartitionPage"* %132, i64 1, i32 0, i32 0, i32 0
  %134 = load i64, i64* %133, align 1
  br label %135

135:                                              ; preds = %130, %123
  %136 = phi i64 [ %129, %123 ], [ %134, %130 ]
  %137 = add i64 %136, %96
  %138 = icmp ugt i64 %137, %29
  br i1 %138, label %139, label %157

139:                                              ; preds = %135
  %140 = xor i64 %105, -1
  %141 = atomicrmw and i64* %103, i64 %140 monotonic
  %142 = load i64, i64* %48, align 8
  %143 = inttoptr i64 %109 to i8*
  %144 = and i64 %142, 1
  %145 = icmp eq i64 %144, 0
  %146 = select i1 %145, i64 16384, i64 32768
  %147 = getelementptr inbounds i8, i8* %143, i64 %146
  %148 = bitcast i8* %147 to %"class.base::internal::ObjectBitmap"*
  %149 = getelementptr inbounds %"class.base::internal::ObjectBitmap", %"class.base::internal::ObjectBitmap"* %148, i64 0, i32 0, i32 0, i64 %101
  %150 = atomicrmw or i64* %149, i64 %105 monotonic
  %151 = getelementptr inbounds %"struct.base::internal::PartitionPage", %"struct.base::internal::PartitionPage"* %115, i64 %119, i32 0, i32 1, i64 8
  %152 = bitcast i8* %151 to %"struct.base::internal::PartitionBucket"**
  %153 = load %"struct.base::internal::PartitionBucket"*, %"struct.base::internal::PartitionBucket"** %152, align 1
  %154 = getelementptr inbounds %"struct.base::internal::PartitionBucket", %"struct.base::internal::PartitionBucket"* %153, i64 0, i32 3
  %155 = load i32, i32* %154, align 8
  %156 = zext i32 %155 to i64
  br label %157

157:                                              ; preds = %28, %38, %47, %69, %85, %98, %135, %139
  %158 = phi i64 [ 0, %85 ], [ 0, %98 ], [ %156, %139 ], [ 0, %135 ], [ 0, %28 ], [ 0, %38 ], [ 0, %69 ], [ 0, %47 ]
  %159 = load i64, i64* %15, align 8
  %160 = add i64 %159, %158
  store i64 %160, i64* %15, align 8
  br label %161

161:                                              ; preds = %25, %157
  %162 = and i32 %23, 2
  %163 = icmp eq i32 %162, 0
  br i1 %163, label %300, label %164

164:                                              ; preds = %161
  %165 = bitcast <2 x i64> %19 to <4 x i32>
  %166 = shufflevector <4 x i32> %165, <4 x i32> undef, <4 x i32> <i32 2, i32 3, i32 undef, i32 undef>
  %167 = bitcast <4 x i32> %166 to <2 x i64>
  %168 = extractelement <2 x i64> %167, i32 0
  %169 = load %"class.base::internal::PCScanTask"*, %"class.base::internal::PCScanTask"** %13, align 8
  %170 = and i64 %168, -8589934592
  %171 = inttoptr i64 %170 to %"class.base::internal::(anonymous namespace)::QuarantineCardTable"*
  %172 = lshr i64 %168, 12
  %173 = and i64 %172, 2097151
  %174 = getelementptr inbounds %"class.base::internal::(anonymous namespace)::QuarantineCardTable", %"class.base::internal::(anonymous namespace)::QuarantineCardTable"* %171, i64 0, i32 0, i32 0, i64 %173
  %175 = load i8, i8* %174, align 1, !range !5
  %176 = icmp eq i8 %175, 0
  br i1 %176, label %296, label %177, !prof !6

177:                                              ; preds = %164
  %178 = inttoptr i64 %168 to i8*
  %179 = and i64 %168, -2097152
  %180 = inttoptr i64 %179 to i8*
  %181 = getelementptr inbounds i8, i8* %180, i64 49152
  %182 = getelementptr inbounds i8, i8* %180, i64 2080768
  %183 = icmp ule i8* %181, %178
  %184 = icmp ugt i8* %182, %178
  %185 = and i1 %184, %183
  br i1 %185, label %186, label %296

186:                                              ; preds = %177
  %187 = getelementptr inbounds %"class.base::internal::PCScanTask", %"class.base::internal::PCScanTask"* %169, i64 0, i32 1
  %188 = load i64, i64* %187, align 8
  %189 = and i64 %188, 1
  %190 = icmp eq i64 %189, 0
  %191 = select i1 %190, i64 32768, i64 16384
  %192 = getelementptr inbounds i8, i8* %180, i64 %191
  %193 = bitcast i8* %192 to %"class.base::internal::ObjectBitmap"*
  %194 = or i64 %179, 4096
  %195 = inttoptr i64 %194 to i8*
  %196 = lshr i64 %168, 9
  %197 = and i64 %196, 4064
  %198 = getelementptr inbounds i8, i8* %195, i64 %197
  %199 = bitcast i8* %198 to %"struct.base::internal::PartitionPage"*
  %200 = getelementptr inbounds i8, i8* %198, i64 30
  %201 = load i8, i8* %200, align 2
  %202 = zext i8 %201 to i64
  %203 = sub nsw i64 0, %202
  %204 = getelementptr inbounds %"struct.base::internal::PartitionPage", %"struct.base::internal::PartitionPage"* %199, i64 %203, i32 0, i32 1, i64 8
  %205 = bitcast i8* %204 to %"struct.base::internal::PartitionBucket"**
  %206 = load %"struct.base::internal::PartitionBucket"*, %"struct.base::internal::PartitionBucket"** %205, align 1
  %207 = icmp eq %"struct.base::internal::PartitionBucket"* %206, null
  br i1 %207, label %296, label %208

208:                                              ; preds = %186
  %209 = getelementptr inbounds %"struct.base::internal::PartitionPage", %"struct.base::internal::PartitionPage"* %199, i64 %203, i32 0
  %210 = ptrtoint %union.anon.123* %209 to i64
  %211 = and i64 %210, 2097151
  %212 = add nuw nsw i64 %211, 36028797018959872
  %213 = lshr i64 %212, 5
  %214 = and i64 %210, -2097152
  %215 = shl i64 %213, 14
  %216 = add i64 %215, %214
  %217 = sub i64 %168, %216
  %218 = getelementptr inbounds %"struct.base::internal::PartitionBucket", %"struct.base::internal::PartitionBucket"* %206, i64 0, i32 4
  %219 = load i32, i32* %218, align 4
  %220 = shl i32 %219, 12
  %221 = and i32 %220, 1044480
  %222 = zext i32 %221 to i64
  %223 = icmp slt i64 %217, %222
  br i1 %223, label %224, label %296

224:                                              ; preds = %208
  %225 = inttoptr i64 %216 to i8*
  %226 = getelementptr inbounds %"struct.base::internal::PartitionBucket", %"struct.base::internal::PartitionBucket"* %206, i64 0, i32 3
  %227 = load i32, i32* %226, align 8
  %228 = zext i32 %227 to i64
  %229 = getelementptr inbounds %"struct.base::internal::PartitionBucket", %"struct.base::internal::PartitionBucket"* %206, i64 0, i32 5
  %230 = load i64, i64* %229, align 8
  %231 = mul i64 %230, %217
  %232 = lshr i64 %231, 42
  %233 = mul nuw nsw i64 %232, %228
  %234 = getelementptr inbounds i8, i8* %225, i64 %233
  %235 = ptrtoint i8* %234 to i64
  %236 = icmp eq i8* %234, null
  br i1 %236, label %296, label %237

237:                                              ; preds = %224
  %238 = lshr i64 %235, 4
  %239 = lshr i64 %235, 10
  %240 = and i64 %239, 2047
  %241 = and i64 %238, 63
  %242 = getelementptr inbounds %"class.base::internal::ObjectBitmap", %"class.base::internal::ObjectBitmap"* %193, i64 0, i32 0, i32 0, i64 %240
  %243 = load atomic i64, i64* %242 monotonic, align 8
  %244 = shl i64 1, %241
  %245 = and i64 %243, %244
  %246 = icmp eq i64 %245, 0
  br i1 %246, label %296, label %247

247:                                              ; preds = %237
  %248 = and i64 %235, -2097152
  %249 = or i64 %248, 4096
  %250 = inttoptr i64 %249 to i8*
  %251 = lshr i64 %235, 9
  %252 = and i64 %251, 4064
  %253 = getelementptr inbounds i8, i8* %250, i64 %252
  %254 = bitcast i8* %253 to %"struct.base::internal::PartitionPage"*
  %255 = getelementptr inbounds i8, i8* %253, i64 30
  %256 = load i8, i8* %255, align 2
  %257 = zext i8 %256 to i64
  %258 = sub nsw i64 0, %257
  %259 = getelementptr inbounds %"struct.base::internal::PartitionPage", %"struct.base::internal::PartitionPage"* %254, i64 %258, i32 0, i32 1, i64 21
  %260 = load i8, i8* %259, align 1, !range !5
  %261 = icmp eq i8 %260, 0
  br i1 %261, label %262, label %269, !prof !6

262:                                              ; preds = %247
  %263 = getelementptr inbounds %"struct.base::internal::PartitionPage", %"struct.base::internal::PartitionPage"* %254, i64 %258, i32 0, i32 1, i64 8
  %264 = bitcast i8* %263 to %"struct.base::internal::PartitionBucket"**
  %265 = load %"struct.base::internal::PartitionBucket"*, %"struct.base::internal::PartitionBucket"** %264, align 1
  %266 = getelementptr inbounds %"struct.base::internal::PartitionBucket", %"struct.base::internal::PartitionBucket"* %265, i64 0, i32 3
  %267 = load i32, i32* %266, align 8
  %268 = zext i32 %267 to i64
  br label %274

269:                                              ; preds = %247
  %270 = getelementptr inbounds %"struct.base::internal::PartitionPage", %"struct.base::internal::PartitionPage"* %254, i64 %258, i32 0
  %271 = bitcast %union.anon.123* %270 to %"struct.base::internal::PartitionPage"*
  %272 = getelementptr inbounds %"struct.base::internal::PartitionPage", %"struct.base::internal::PartitionPage"* %271, i64 1, i32 0, i32 0, i32 0
  %273 = load i64, i64* %272, align 1
  br label %274

274:                                              ; preds = %269, %262
  %275 = phi i64 [ %268, %262 ], [ %273, %269 ]
  %276 = add i64 %275, %235
  %277 = icmp ugt i64 %276, %168
  br i1 %277, label %278, label %296

278:                                              ; preds = %274
  %279 = xor i64 %244, -1
  %280 = atomicrmw and i64* %242, i64 %279 monotonic
  %281 = load i64, i64* %187, align 8
  %282 = inttoptr i64 %248 to i8*
  %283 = and i64 %281, 1
  %284 = icmp eq i64 %283, 0
  %285 = select i1 %284, i64 16384, i64 32768
  %286 = getelementptr inbounds i8, i8* %282, i64 %285
  %287 = bitcast i8* %286 to %"class.base::internal::ObjectBitmap"*
  %288 = getelementptr inbounds %"class.base::internal::ObjectBitmap", %"class.base::internal::ObjectBitmap"* %287, i64 0, i32 0, i32 0, i64 %240
  %289 = atomicrmw or i64* %288, i64 %244 monotonic
  %290 = getelementptr inbounds %"struct.base::internal::PartitionPage", %"struct.base::internal::PartitionPage"* %254, i64 %258, i32 0, i32 1, i64 8
  %291 = bitcast i8* %290 to %"struct.base::internal::PartitionBucket"**
  %292 = load %"struct.base::internal::PartitionBucket"*, %"struct.base::internal::PartitionBucket"** %291, align 1
  %293 = getelementptr inbounds %"struct.base::internal::PartitionBucket", %"struct.base::internal::PartitionBucket"* %292, i64 0, i32 3
  %294 = load i32, i32* %293, align 8
  %295 = zext i32 %294 to i64
  br label %296

296:                                              ; preds = %164, %177, %186, %208, %224, %237, %274, %278
  %297 = phi i64 [ 0, %224 ], [ 0, %237 ], [ %295, %278 ], [ 0, %274 ], [ 0, %164 ], [ 0, %177 ], [ 0, %208 ], [ 0, %186 ]
  %298 = load i64, i64* %15, align 8
  %299 = add i64 %298, %297
  store i64 %299, i64* %15, align 8
  br label %300

300:                                              ; preds = %296, %161, %16
  %301 = getelementptr inbounds i64, i64* %17, i64 2
  %302 = icmp ult i64* %301, %9
  br i1 %302, label %16, label %303

303:                                              ; preds = %300, %3
  %304 = phi i64* [ %1, %3 ], [ %301, %300 ]
  tail call void @_ZN4base8internal8ScanLoopINS0_14PCScanScanLoopEE15RunUnvectorizedEPmS4_(%"class.base::internal::ScanLoop"* %0, i64* %304, i64* %2)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal8ScanLoopINS0_14PCScanScanLoopEE15RunUnvectorizedEPmS4_(%"class.base::internal::ScanLoop"*, i64*, i64*) local_unnamed_addr #3 comdat align 2 {
  %4 = getelementptr inbounds %"class.base::internal::ScanLoop", %"class.base::internal::ScanLoop"* %0, i64 8
  %5 = bitcast %"class.base::internal::ScanLoop"* %4 to i64*
  %6 = load i64, i64* %5, align 8
  %7 = icmp ult i64* %1, %2
  br i1 %7, label %8, label %152

8:                                                ; preds = %3
  %9 = getelementptr inbounds %"class.base::internal::ScanLoop", %"class.base::internal::ScanLoop"* %0, i64 16
  %10 = bitcast %"class.base::internal::ScanLoop"* %9 to %"class.base::internal::PCScanTask"**
  %11 = getelementptr inbounds %"class.base::internal::ScanLoop", %"class.base::internal::ScanLoop"* %0, i64 24
  %12 = bitcast %"class.base::internal::ScanLoop"* %11 to i64*
  %13 = inttoptr i64 %6 to %"class.base::internal::(anonymous namespace)::QuarantineCardTable"*
  br label %14

14:                                               ; preds = %8, %149
  %15 = phi i64* [ %1, %8 ], [ %150, %149 ]
  %16 = load i64, i64* %15, align 8
  %17 = and i64 %16, -8589934592
  %18 = icmp eq i64 %17, %6
  br i1 %18, label %19, label %149, !prof !7

19:                                               ; preds = %14
  %20 = load %"class.base::internal::PCScanTask"*, %"class.base::internal::PCScanTask"** %10, align 8
  %21 = lshr i64 %16, 12
  %22 = and i64 %21, 2097151
  %23 = getelementptr inbounds %"class.base::internal::(anonymous namespace)::QuarantineCardTable", %"class.base::internal::(anonymous namespace)::QuarantineCardTable"* %13, i64 0, i32 0, i32 0, i64 %22
  %24 = load i8, i8* %23, align 1, !range !5
  %25 = icmp eq i8 %24, 0
  br i1 %25, label %145, label %26, !prof !6

26:                                               ; preds = %19
  %27 = inttoptr i64 %16 to i8*
  %28 = and i64 %16, -2097152
  %29 = inttoptr i64 %28 to i8*
  %30 = getelementptr inbounds i8, i8* %29, i64 49152
  %31 = getelementptr inbounds i8, i8* %29, i64 2080768
  %32 = icmp ule i8* %30, %27
  %33 = icmp ugt i8* %31, %27
  %34 = and i1 %33, %32
  br i1 %34, label %35, label %145

35:                                               ; preds = %26
  %36 = getelementptr inbounds %"class.base::internal::PCScanTask", %"class.base::internal::PCScanTask"* %20, i64 0, i32 1
  %37 = load i64, i64* %36, align 8
  %38 = and i64 %37, 1
  %39 = icmp eq i64 %38, 0
  %40 = select i1 %39, i64 32768, i64 16384
  %41 = getelementptr inbounds i8, i8* %29, i64 %40
  %42 = bitcast i8* %41 to %"class.base::internal::ObjectBitmap"*
  %43 = or i64 %28, 4096
  %44 = inttoptr i64 %43 to i8*
  %45 = lshr i64 %16, 9
  %46 = and i64 %45, 4064
  %47 = getelementptr inbounds i8, i8* %44, i64 %46
  %48 = bitcast i8* %47 to %"struct.base::internal::PartitionPage"*
  %49 = getelementptr inbounds i8, i8* %47, i64 30
  %50 = load i8, i8* %49, align 2
  %51 = zext i8 %50 to i64
  %52 = sub nsw i64 0, %51
  %53 = getelementptr inbounds %"struct.base::internal::PartitionPage", %"struct.base::internal::PartitionPage"* %48, i64 %52, i32 0, i32 1, i64 8
  %54 = bitcast i8* %53 to %"struct.base::internal::PartitionBucket"**
  %55 = load %"struct.base::internal::PartitionBucket"*, %"struct.base::internal::PartitionBucket"** %54, align 1
  %56 = icmp eq %"struct.base::internal::PartitionBucket"* %55, null
  br i1 %56, label %145, label %57

57:                                               ; preds = %35
  %58 = getelementptr inbounds %"struct.base::internal::PartitionPage", %"struct.base::internal::PartitionPage"* %48, i64 %52, i32 0
  %59 = ptrtoint %union.anon.123* %58 to i64
  %60 = and i64 %59, 2097151
  %61 = add nuw nsw i64 %60, 36028797018959872
  %62 = lshr i64 %61, 5
  %63 = and i64 %59, -2097152
  %64 = shl i64 %62, 14
  %65 = add i64 %64, %63
  %66 = sub i64 %16, %65
  %67 = getelementptr inbounds %"struct.base::internal::PartitionBucket", %"struct.base::internal::PartitionBucket"* %55, i64 0, i32 4
  %68 = load i32, i32* %67, align 4
  %69 = shl i32 %68, 12
  %70 = and i32 %69, 1044480
  %71 = zext i32 %70 to i64
  %72 = icmp slt i64 %66, %71
  br i1 %72, label %73, label %145

73:                                               ; preds = %57
  %74 = inttoptr i64 %65 to i8*
  %75 = getelementptr inbounds %"struct.base::internal::PartitionBucket", %"struct.base::internal::PartitionBucket"* %55, i64 0, i32 3
  %76 = load i32, i32* %75, align 8
  %77 = zext i32 %76 to i64
  %78 = getelementptr inbounds %"struct.base::internal::PartitionBucket", %"struct.base::internal::PartitionBucket"* %55, i64 0, i32 5
  %79 = load i64, i64* %78, align 8
  %80 = mul i64 %79, %66
  %81 = lshr i64 %80, 42
  %82 = mul nuw nsw i64 %81, %77
  %83 = getelementptr inbounds i8, i8* %74, i64 %82
  %84 = ptrtoint i8* %83 to i64
  %85 = icmp eq i8* %83, null
  br i1 %85, label %145, label %86

86:                                               ; preds = %73
  %87 = lshr i64 %84, 4
  %88 = lshr i64 %84, 10
  %89 = and i64 %88, 2047
  %90 = and i64 %87, 63
  %91 = getelementptr inbounds %"class.base::internal::ObjectBitmap", %"class.base::internal::ObjectBitmap"* %42, i64 0, i32 0, i32 0, i64 %89
  %92 = load atomic i64, i64* %91 monotonic, align 8
  %93 = shl i64 1, %90
  %94 = and i64 %92, %93
  %95 = icmp eq i64 %94, 0
  br i1 %95, label %145, label %96

96:                                               ; preds = %86
  %97 = and i64 %84, -2097152
  %98 = or i64 %97, 4096
  %99 = inttoptr i64 %98 to i8*
  %100 = lshr i64 %84, 9
  %101 = and i64 %100, 4064
  %102 = getelementptr inbounds i8, i8* %99, i64 %101
  %103 = bitcast i8* %102 to %"struct.base::internal::PartitionPage"*
  %104 = getelementptr inbounds i8, i8* %102, i64 30
  %105 = load i8, i8* %104, align 2
  %106 = zext i8 %105 to i64
  %107 = sub nsw i64 0, %106
  %108 = getelementptr inbounds %"struct.base::internal::PartitionPage", %"struct.base::internal::PartitionPage"* %103, i64 %107, i32 0, i32 1, i64 21
  %109 = load i8, i8* %108, align 1, !range !5
  %110 = icmp eq i8 %109, 0
  br i1 %110, label %111, label %118, !prof !6

111:                                              ; preds = %96
  %112 = getelementptr inbounds %"struct.base::internal::PartitionPage", %"struct.base::internal::PartitionPage"* %103, i64 %107, i32 0, i32 1, i64 8
  %113 = bitcast i8* %112 to %"struct.base::internal::PartitionBucket"**
  %114 = load %"struct.base::internal::PartitionBucket"*, %"struct.base::internal::PartitionBucket"** %113, align 1
  %115 = getelementptr inbounds %"struct.base::internal::PartitionBucket", %"struct.base::internal::PartitionBucket"* %114, i64 0, i32 3
  %116 = load i32, i32* %115, align 8
  %117 = zext i32 %116 to i64
  br label %123

118:                                              ; preds = %96
  %119 = getelementptr inbounds %"struct.base::internal::PartitionPage", %"struct.base::internal::PartitionPage"* %103, i64 %107, i32 0
  %120 = bitcast %union.anon.123* %119 to %"struct.base::internal::PartitionPage"*
  %121 = getelementptr inbounds %"struct.base::internal::PartitionPage", %"struct.base::internal::PartitionPage"* %120, i64 1, i32 0, i32 0, i32 0
  %122 = load i64, i64* %121, align 1
  br label %123

123:                                              ; preds = %118, %111
  %124 = phi i64 [ %117, %111 ], [ %122, %118 ]
  %125 = add i64 %124, %84
  %126 = icmp ugt i64 %125, %16
  br i1 %126, label %127, label %145

127:                                              ; preds = %123
  %128 = xor i64 %93, -1
  %129 = atomicrmw and i64* %91, i64 %128 monotonic
  %130 = load i64, i64* %36, align 8
  %131 = inttoptr i64 %97 to i8*
  %132 = and i64 %130, 1
  %133 = icmp eq i64 %132, 0
  %134 = select i1 %133, i64 16384, i64 32768
  %135 = getelementptr inbounds i8, i8* %131, i64 %134
  %136 = bitcast i8* %135 to %"class.base::internal::ObjectBitmap"*
  %137 = getelementptr inbounds %"class.base::internal::ObjectBitmap", %"class.base::internal::ObjectBitmap"* %136, i64 0, i32 0, i32 0, i64 %89
  %138 = atomicrmw or i64* %137, i64 %93 monotonic
  %139 = getelementptr inbounds %"struct.base::internal::PartitionPage", %"struct.base::internal::PartitionPage"* %103, i64 %107, i32 0, i32 1, i64 8
  %140 = bitcast i8* %139 to %"struct.base::internal::PartitionBucket"**
  %141 = load %"struct.base::internal::PartitionBucket"*, %"struct.base::internal::PartitionBucket"** %140, align 1
  %142 = getelementptr inbounds %"struct.base::internal::PartitionBucket", %"struct.base::internal::PartitionBucket"* %141, i64 0, i32 3
  %143 = load i32, i32* %142, align 8
  %144 = zext i32 %143 to i64
  br label %145

145:                                              ; preds = %19, %26, %35, %57, %73, %86, %123, %127
  %146 = phi i64 [ 0, %73 ], [ 0, %86 ], [ %144, %127 ], [ 0, %123 ], [ 0, %19 ], [ 0, %26 ], [ 0, %57 ], [ 0, %35 ]
  %147 = load i64, i64* %12, align 8
  %148 = add i64 %147, %146
  store i64 %148, i64* %12, align 8
  br label %149

149:                                              ; preds = %14, %145
  %150 = getelementptr inbounds i64, i64* %15, i64 1
  %151 = icmp ult i64* %150, %2
  br i1 %151, label %14, label %152

152:                                              ; preds = %149, %3
  ret void
}

; Function Attrs: nounwind
declare i8* @pthread_getspecific(i32) local_unnamed_addr #10

declare void @_ZN7logging10LogMessageC1EPKcii(%"class.logging::LogMessage"*, i8*, i32, i32) unnamed_addr #2

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEm(%"class.std::__1::basic_ostream"*, i64) local_unnamed_addr #2

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEd(%"class.std::__1::basic_ostream"*, double) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN7logging10LogMessageD1Ev(%"class.logging::LogMessage"*) unnamed_addr #10

declare i32 @_ZN7logging18GetVlogLevelHelperEPKcm(i8*, i64) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160), i8*, i64) local_unnamed_addr #3 comdat {
  %4 = alloca %"class.std::__1::locale", align 8
  %5 = alloca %"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry", align 8
  %6 = getelementptr inbounds %"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry", %"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"* %5, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %6) #17
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %6, i8 -86, i64 16, i1 false)
  call void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryC1ERS3_(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"* nonnull %5, %"class.std::__1::basic_ostream"* dereferenceable(160) %0) #17
  %7 = load i8, i8* %6, align 8, !range !5
  %8 = icmp eq i8 %7, 0
  br i1 %8, label %58, label %9

9:                                                ; preds = %3
  %10 = bitcast %"class.std::__1::basic_ostream"* %0 to i8**
  %11 = load i8*, i8** %10, align 8
  %12 = getelementptr i8, i8* %11, i64 -24
  %13 = bitcast i8* %12 to i64*
  %14 = load i64, i64* %13, align 8
  %15 = bitcast %"class.std::__1::basic_ostream"* %0 to i8*
  %16 = getelementptr inbounds i8, i8* %15, i64 %14
  %17 = getelementptr inbounds i8, i8* %16, i64 40
  %18 = bitcast i8* %17 to %"class.std::__1::basic_streambuf"**
  %19 = load %"class.std::__1::basic_streambuf"*, %"class.std::__1::basic_streambuf"** %18, align 8
  %20 = bitcast i8* %16 to %"class.std::__1::ios_base"*
  %21 = getelementptr inbounds i8, i8* %16, i64 8
  %22 = bitcast i8* %21 to i32*
  %23 = load i32, i32* %22, align 8
  %24 = and i32 %23, 176
  %25 = icmp eq i32 %24, 32
  %26 = getelementptr inbounds i8, i8* %1, i64 %2
  %27 = select i1 %25, i8* %26, i8* %1
  %28 = getelementptr inbounds i8, i8* %16, i64 144
  %29 = bitcast i8* %28 to i32*
  %30 = load i32, i32* %29, align 8
  %31 = icmp eq i32 %30, -1
  br i1 %31, label %32, label %42

32:                                               ; preds = %9
  %33 = bitcast %"class.std::__1::locale"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %33) #17
  call void @_ZNKSt3__18ios_base6getlocEv(%"class.std::__1::locale"* nonnull sret %4, %"class.std::__1::ios_base"* %20) #17
  %34 = call %"class.std::__1::locale::facet"* @_ZNKSt3__16locale9use_facetERNS0_2idE(%"class.std::__1::locale"* nonnull %4, %"class.std::__1::locale::id"* nonnull dereferenceable(16) @_ZNSt3__15ctypeIcE2idE) #17
  %35 = bitcast %"class.std::__1::locale::facet"* %34 to %"class.std::__1::ctype"*
  %36 = bitcast %"class.std::__1::locale::facet"* %34 to i8 (%"class.std::__1::ctype"*, i8)***
  %37 = load i8 (%"class.std::__1::ctype"*, i8)**, i8 (%"class.std::__1::ctype"*, i8)*** %36, align 8
  %38 = getelementptr inbounds i8 (%"class.std::__1::ctype"*, i8)*, i8 (%"class.std::__1::ctype"*, i8)** %37, i64 7
  %39 = load i8 (%"class.std::__1::ctype"*, i8)*, i8 (%"class.std::__1::ctype"*, i8)** %38, align 8
  %40 = call signext i8 %39(%"class.std::__1::ctype"* %35, i8 signext 32) #17
  call void @_ZNSt3__16localeD1Ev(%"class.std::__1::locale"* nonnull %4) #17
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %33) #17
  %41 = sext i8 %40 to i32
  store i32 %41, i32* %29, align 8
  br label %42

42:                                               ; preds = %9, %32
  %43 = phi i32 [ %41, %32 ], [ %30, %9 ]
  %44 = trunc i32 %43 to i8
  %45 = call %"class.std::__1::basic_streambuf"* @_ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_(%"class.std::__1::basic_streambuf"* %19, i8* %1, i8* %27, i8* %26, %"class.std::__1::ios_base"* dereferenceable(136) %20, i8 signext %44)
  %46 = icmp eq %"class.std::__1::basic_streambuf"* %45, null
  br i1 %46, label %47, label %58

47:                                               ; preds = %42
  %48 = load i8*, i8** %10, align 8
  %49 = getelementptr i8, i8* %48, i64 -24
  %50 = bitcast i8* %49 to i64*
  %51 = load i64, i64* %50, align 8
  %52 = getelementptr inbounds i8, i8* %15, i64 %51
  %53 = bitcast i8* %52 to %"class.std::__1::ios_base"*
  %54 = getelementptr inbounds i8, i8* %52, i64 32
  %55 = bitcast i8* %54 to i32*
  %56 = load i32, i32* %55, align 8
  %57 = or i32 %56, 5
  call void @_ZNSt3__18ios_base5clearEj(%"class.std::__1::ios_base"* %53, i32 %57) #17
  br label %58

58:                                               ; preds = %3, %42, %47
  call void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryD1Ev(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"* nonnull %5) #17
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %6) #17
  ret %"class.std::__1::basic_ostream"* %0
}

declare void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryC1ERS3_(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"*, %"class.std::__1::basic_ostream"* dereferenceable(160)) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.std::__1::basic_streambuf"* @_ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_(%"class.std::__1::basic_streambuf"*, i8*, i8*, i8*, %"class.std::__1::ios_base"* dereferenceable(136), i8 signext) local_unnamed_addr #3 comdat {
  %7 = alloca %"class.std::__1::basic_string", align 8
  %8 = icmp eq %"class.std::__1::basic_streambuf"* %0, null
  br i1 %8, label %78, label %9

9:                                                ; preds = %6
  %10 = ptrtoint i8* %3 to i64
  %11 = ptrtoint i8* %1 to i64
  %12 = sub i64 %10, %11
  %13 = getelementptr inbounds %"class.std::__1::ios_base", %"class.std::__1::ios_base"* %4, i64 0, i32 3
  %14 = load i64, i64* %13, align 8
  %15 = icmp sgt i64 %14, %12
  %16 = sub nsw i64 %14, %12
  %17 = select i1 %15, i64 %16, i64 0
  %18 = ptrtoint i8* %2 to i64
  %19 = sub i64 %18, %11
  %20 = icmp sgt i64 %19, 0
  br i1 %20, label %21, label %28

21:                                               ; preds = %9
  %22 = bitcast %"class.std::__1::basic_streambuf"* %0 to i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)***
  %23 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)**, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*** %22, align 8
  %24 = getelementptr inbounds i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %23, i64 12
  %25 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %24, align 8
  %26 = tail call i64 %25(%"class.std::__1::basic_streambuf"* nonnull %0, i8* %1, i64 %19) #17
  %27 = icmp eq i64 %26, %19
  br i1 %27, label %28, label %78

28:                                               ; preds = %21, %9
  %29 = icmp sgt i64 %17, 0
  br i1 %29, label %30, label %67

30:                                               ; preds = %28
  %31 = bitcast %"class.std::__1::basic_string"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %31) #17
  %32 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %33 = icmp ult i64 %17, 23
  %34 = bitcast %"class.std::__1::basic_string"* %7 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %34, i8 -86, i64 24, i1 false)
  br i1 %33, label %43, label %35

35:                                               ; preds = %30
  %36 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %37 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %38 = add nuw i64 %17, 16
  %39 = and i64 %38, -16
  %40 = tail call i8* @_Znwm(i64 %39) #19
  store i8* %40, i8** %32, align 8
  %41 = or i64 %39, -9223372036854775808
  store i64 %41, i64* %36, align 8
  store i64 %17, i64* %37, align 8
  %42 = bitcast %"class.std::__1::basic_string"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  br label %47

43:                                               ; preds = %30
  %44 = trunc i64 %17 to i8
  %45 = bitcast %"class.std::__1::basic_string"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %46 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %45, i64 0, i32 1, i32 0
  store i8 %44, i8* %46, align 1
  br label %47

47:                                               ; preds = %35, %43
  %48 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %42, %35 ], [ %45, %43 ]
  %49 = phi i8* [ %40, %35 ], [ %31, %43 ]
  call void @llvm.memset.p0i8.i64(i8* nonnull align 1 %49, i8 %5, i64 %17, i1 false) #17
  %50 = getelementptr inbounds i8, i8* %49, i64 %17
  store i8 0, i8* %50, align 1
  %51 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %48, i64 0, i32 1, i32 0
  %52 = load i8, i8* %51, align 1
  %53 = icmp slt i8 %52, 0
  %54 = load i8*, i8** %32, align 8
  %55 = select i1 %53, i8* %54, i8* %31
  %56 = bitcast %"class.std::__1::basic_streambuf"* %0 to i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)***
  %57 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)**, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*** %56, align 8
  %58 = getelementptr inbounds i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %57, i64 12
  %59 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %58, align 8
  %60 = call i64 %59(%"class.std::__1::basic_streambuf"* nonnull %0, i8* %55, i64 %17) #17
  %61 = icmp eq i64 %60, %17
  %62 = load i8, i8* %51, align 1
  %63 = icmp slt i8 %62, 0
  br i1 %63, label %64, label %66

64:                                               ; preds = %47
  %65 = load i8*, i8** %32, align 8
  call void @_ZdlPv(i8* %65) #19
  br label %66

66:                                               ; preds = %47, %64
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %31) #17
  br i1 %61, label %67, label %78

67:                                               ; preds = %66, %28
  %68 = sub i64 %10, %18
  %69 = icmp sgt i64 %68, 0
  br i1 %69, label %70, label %77

70:                                               ; preds = %67
  %71 = bitcast %"class.std::__1::basic_streambuf"* %0 to i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)***
  %72 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)**, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*** %71, align 8
  %73 = getelementptr inbounds i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %72, i64 12
  %74 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %73, align 8
  %75 = call i64 %74(%"class.std::__1::basic_streambuf"* nonnull %0, i8* %2, i64 %68) #17
  %76 = icmp eq i64 %75, %68
  br i1 %76, label %77, label %78

77:                                               ; preds = %70, %67
  store i64 0, i64* %13, align 8
  br label %78

78:                                               ; preds = %77, %66, %21, %70, %6
  %79 = phi %"class.std::__1::basic_streambuf"* [ null, %6 ], [ %0, %77 ], [ null, %66 ], [ null, %21 ], [ null, %70 ]
  ret %"class.std::__1::basic_streambuf"* %79
}

; Function Attrs: nounwind
declare void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryD1Ev(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"*) unnamed_addr #10

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #11

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #12

declare void @_ZNKSt3__18ios_base6getlocEv(%"class.std::__1::locale"* sret, %"class.std::__1::ios_base"*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZNSt3__16localeD1Ev(%"class.std::__1::locale"*) unnamed_addr #10

declare %"class.std::__1::locale::facet"* @_ZNKSt3__16locale9use_facetERNS0_2idE(%"class.std::__1::locale"*, %"class.std::__1::locale::id"* dereferenceable(16)) local_unnamed_addr #2

declare void @_ZNSt3__18ios_base5clearEj(%"class.std::__1::ios_base"*, i32) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN4base8internal12_GLOBAL__N_114PCScanSnapshot4TakeEm(%"class.base::internal::(anonymous namespace)::PCScanSnapshot"*, i64) #3 align 2 {
  %3 = alloca %"struct.base::internal::RacefulWorklist<unsigned long>::Node", align 8
  %4 = alloca i8, align 1
  %5 = alloca i64, align 8
  %6 = alloca i8, align 1
  %7 = alloca i64, align 8
  %8 = alloca %"struct.base::internal::RacefulWorklist<unsigned long>::Node", align 8
  %9 = tail call dereferenceable(312) %"class.base::internal::PCScanInternal"* @_ZN4base8internal14PCScanInternal8InstanceEv()
  %10 = getelementptr inbounds %"class.base::internal::PCScanInternal", %"class.base::internal::PCScanInternal"* %9, i64 0, i32 2, i32 1
  %11 = load i64, i64* %10, align 8
  %12 = getelementptr inbounds %"class.base::internal::PCScanInternal", %"class.base::internal::PCScanInternal"* %9, i64 0, i32 2, i32 0, i32 0, i64 %11
  %13 = icmp eq i64 %11, 0
  br i1 %13, label %49, label %14

14:                                               ; preds = %2
  %15 = getelementptr inbounds %"class.base::internal::PCScanInternal", %"class.base::internal::PCScanInternal"* %9, i64 0, i32 2, i32 0, i32 0, i64 0
  %16 = getelementptr inbounds %"class.base::internal::(anonymous namespace)::PCScanSnapshot", %"class.base::internal::(anonymous namespace)::PCScanSnapshot"* %0, i64 0, i32 1
  %17 = getelementptr inbounds %"class.base::internal::(anonymous namespace)::PCScanSnapshot", %"class.base::internal::(anonymous namespace)::PCScanSnapshot"* %0, i64 0, i32 1, i32 0, i32 0, i32 1
  %18 = getelementptr inbounds %"class.base::internal::(anonymous namespace)::PCScanSnapshot", %"class.base::internal::(anonymous namespace)::PCScanSnapshot"* %0, i64 0, i32 1, i32 0, i32 0, i32 2, i32 0, i32 0
  %19 = bitcast %"struct.base::internal::RacefulWorklist<base::internal::(anonymous namespace)::PCScanSnapshot::ScanArea>::Node"** %17 to i64*
  %20 = bitcast %"class.base::internal::RacefulWorklist"* %16 to i64*
  %21 = bitcast %"struct.base::internal::RacefulWorklist<base::internal::(anonymous namespace)::PCScanSnapshot::ScanArea>::Node"** %18 to i64*
  %22 = bitcast i64* %7 to i8*
  %23 = getelementptr inbounds %"class.base::internal::RacefulWorklist", %"class.base::internal::RacefulWorklist"* %16, i64 0, i32 0, i32 0, i32 0
  %24 = getelementptr inbounds %"class.base::internal::(anonymous namespace)::PCScanSnapshot", %"class.base::internal::(anonymous namespace)::PCScanSnapshot"* %0, i64 0, i32 2
  %25 = getelementptr inbounds %"class.base::internal::(anonymous namespace)::PCScanSnapshot", %"class.base::internal::(anonymous namespace)::PCScanSnapshot"* %0, i64 0, i32 2, i32 0, i32 0, i32 1
  %26 = getelementptr inbounds %"class.base::internal::(anonymous namespace)::PCScanSnapshot", %"class.base::internal::(anonymous namespace)::PCScanSnapshot"* %0, i64 0, i32 2, i32 0, i32 0, i32 2, i32 0, i32 0
  %27 = bitcast %"struct.base::internal::RacefulWorklist<base::internal::(anonymous namespace)::PCScanSnapshot::LargeScanArea>::Node"** %25 to i64*
  %28 = bitcast %"class.base::internal::RacefulWorklist.14"* %24 to i64*
  %29 = bitcast %"struct.base::internal::RacefulWorklist<base::internal::(anonymous namespace)::PCScanSnapshot::LargeScanArea>::Node"** %26 to i64*
  %30 = bitcast i64* %5 to i8*
  %31 = getelementptr inbounds %"class.base::internal::RacefulWorklist.14", %"class.base::internal::RacefulWorklist.14"* %24, i64 0, i32 0, i32 0, i32 0
  %32 = getelementptr inbounds %"class.base::internal::(anonymous namespace)::PCScanSnapshot", %"class.base::internal::(anonymous namespace)::PCScanSnapshot"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %33 = bitcast %"class.std::__1::__tree_end_node"* %32 to %"class.std::__1::__tree_node"**
  %34 = getelementptr inbounds %"class.base::internal::(anonymous namespace)::PCScanSnapshot", %"class.base::internal::(anonymous namespace)::PCScanSnapshot"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %35 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %32, i64 0, i32 0
  %36 = getelementptr inbounds %"class.base::internal::(anonymous namespace)::PCScanSnapshot", %"class.base::internal::(anonymous namespace)::PCScanSnapshot"* %0, i64 0, i32 0, i32 0, i32 1
  %37 = bitcast %"class.std::__1::__compressed_pair"* %36 to %"class.base::internal::MetadataAllocator"*
  %38 = getelementptr inbounds %"class.base::internal::(anonymous namespace)::PCScanSnapshot", %"class.base::internal::(anonymous namespace)::PCScanSnapshot"* %0, i64 0, i32 0, i32 0, i32 0
  %39 = bitcast %"class.base::internal::(anonymous namespace)::PCScanSnapshot"* %0 to i64*
  %40 = getelementptr inbounds %"class.base::internal::(anonymous namespace)::PCScanSnapshot", %"class.base::internal::(anonymous namespace)::PCScanSnapshot"* %0, i64 0, i32 0, i32 0, i32 2, i32 0, i32 0
  %41 = bitcast %"struct.base::internal::RacefulWorklist<unsigned long>::Node"* %3 to i8*
  %42 = getelementptr inbounds %"struct.base::internal::RacefulWorklist<unsigned long>::Node", %"struct.base::internal::RacefulWorklist<unsigned long>::Node"* %3, i64 0, i32 0
  %43 = getelementptr inbounds %"struct.base::internal::RacefulWorklist<unsigned long>::Node", %"struct.base::internal::RacefulWorklist<unsigned long>::Node"* %3, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %44 = getelementptr inbounds %"struct.base::internal::RacefulWorklist<unsigned long>::Node", %"struct.base::internal::RacefulWorklist<unsigned long>::Node"* %3, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0
  %45 = getelementptr inbounds %"class.base::internal::(anonymous namespace)::PCScanSnapshot", %"class.base::internal::(anonymous namespace)::PCScanSnapshot"* %0, i64 0, i32 3, i32 0, i32 0, i32 1
  %46 = getelementptr inbounds %"class.base::internal::(anonymous namespace)::PCScanSnapshot", %"class.base::internal::(anonymous namespace)::PCScanSnapshot"* %0, i64 0, i32 3, i32 0, i32 0, i32 2, i32 0, i32 0
  %47 = getelementptr inbounds %"class.base::internal::(anonymous namespace)::PCScanSnapshot", %"class.base::internal::(anonymous namespace)::PCScanSnapshot"* %0, i64 0, i32 3, i32 0
  %48 = bitcast %"struct.base::internal::RacefulWorklist<unsigned long>::Node"** %45 to i64*
  br label %73

49:                                               ; preds = %110, %2
  %50 = getelementptr inbounds %"class.base::internal::PCScanInternal", %"class.base::internal::PCScanInternal"* %9, i64 0, i32 3, i32 1
  %51 = load i64, i64* %50, align 8
  %52 = getelementptr inbounds %"class.base::internal::PCScanInternal", %"class.base::internal::PCScanInternal"* %9, i64 0, i32 3, i32 0, i32 0, i64 %51
  %53 = icmp eq i64 %51, 0
  br i1 %53, label %981, label %54

54:                                               ; preds = %49
  %55 = getelementptr inbounds %"class.base::internal::PCScanInternal", %"class.base::internal::PCScanInternal"* %9, i64 0, i32 3, i32 0, i32 0, i64 0
  %56 = getelementptr inbounds %"class.base::internal::(anonymous namespace)::PCScanSnapshot", %"class.base::internal::(anonymous namespace)::PCScanSnapshot"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %57 = bitcast %"class.std::__1::__tree_end_node"* %56 to %"class.std::__1::__tree_node"**
  %58 = getelementptr inbounds %"class.base::internal::(anonymous namespace)::PCScanSnapshot", %"class.base::internal::(anonymous namespace)::PCScanSnapshot"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %59 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %56, i64 0, i32 0
  %60 = getelementptr inbounds %"class.base::internal::(anonymous namespace)::PCScanSnapshot", %"class.base::internal::(anonymous namespace)::PCScanSnapshot"* %0, i64 0, i32 0, i32 0, i32 1
  %61 = bitcast %"class.std::__1::__compressed_pair"* %60 to %"class.base::internal::MetadataAllocator"*
  %62 = getelementptr inbounds %"class.base::internal::(anonymous namespace)::PCScanSnapshot", %"class.base::internal::(anonymous namespace)::PCScanSnapshot"* %0, i64 0, i32 0, i32 0, i32 0
  %63 = bitcast %"class.base::internal::(anonymous namespace)::PCScanSnapshot"* %0 to i64*
  %64 = getelementptr inbounds %"class.base::internal::(anonymous namespace)::PCScanSnapshot", %"class.base::internal::(anonymous namespace)::PCScanSnapshot"* %0, i64 0, i32 0, i32 0, i32 2, i32 0, i32 0
  %65 = bitcast %"struct.base::internal::RacefulWorklist<unsigned long>::Node"* %8 to i8*
  %66 = getelementptr inbounds %"struct.base::internal::RacefulWorklist<unsigned long>::Node", %"struct.base::internal::RacefulWorklist<unsigned long>::Node"* %8, i64 0, i32 0
  %67 = getelementptr inbounds %"struct.base::internal::RacefulWorklist<unsigned long>::Node", %"struct.base::internal::RacefulWorklist<unsigned long>::Node"* %8, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %68 = getelementptr inbounds %"struct.base::internal::RacefulWorklist<unsigned long>::Node", %"struct.base::internal::RacefulWorklist<unsigned long>::Node"* %8, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0
  %69 = getelementptr inbounds %"class.base::internal::(anonymous namespace)::PCScanSnapshot", %"class.base::internal::(anonymous namespace)::PCScanSnapshot"* %0, i64 0, i32 3, i32 0, i32 0, i32 1
  %70 = getelementptr inbounds %"class.base::internal::(anonymous namespace)::PCScanSnapshot", %"class.base::internal::(anonymous namespace)::PCScanSnapshot"* %0, i64 0, i32 3, i32 0, i32 0, i32 2, i32 0, i32 0
  %71 = getelementptr inbounds %"class.base::internal::(anonymous namespace)::PCScanSnapshot", %"class.base::internal::(anonymous namespace)::PCScanSnapshot"* %0, i64 0, i32 3, i32 0
  %72 = bitcast %"struct.base::internal::RacefulWorklist<unsigned long>::Node"** %69 to i64*
  br label %982

73:                                               ; preds = %14, %110
  %74 = phi %"struct.base::PartitionRoot"** [ %15, %14 ], [ %111, %110 ]
  %75 = load %"struct.base::PartitionRoot"*, %"struct.base::PartitionRoot"** %74, align 8
  %76 = getelementptr inbounds %"struct.base::PartitionRoot", %"struct.base::PartitionRoot"* %75, i64 0, i32 8
  %77 = getelementptr inbounds %"class.base::internal::MaybeSpinLock", %"class.base::internal::MaybeSpinLock"* %76, i64 0, i32 0
  %78 = getelementptr inbounds %"class.base::internal::MaybeSpinLock", %"class.base::internal::MaybeSpinLock"* %76, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  br label %79

79:                                               ; preds = %91, %73
  %80 = phi i32 [ 0, %73 ], [ %92, %91 ]
  %81 = phi i32 [ 1, %73 ], [ %95, %91 ]
  %82 = load atomic i32, i32* %78 monotonic, align 4
  %83 = icmp eq i32 %82, 0
  br i1 %83, label %84, label %87, !prof !9

84:                                               ; preds = %79
  %85 = cmpxchg weak i32* %78, i32 0, i32 1 acquire monotonic
  %86 = extractvalue { i32, i1 } %85, 1
  br i1 %86, label %102, label %87, !prof !6

87:                                               ; preds = %84, %79
  %88 = icmp sgt i32 %81, 0
  br i1 %88, label %97, label %91

89:                                               ; preds = %97
  %90 = add i32 %81, %80
  br label %91

91:                                               ; preds = %89, %87
  %92 = phi i32 [ %80, %87 ], [ %90, %89 ]
  %93 = shl i32 %81, 1
  %94 = icmp slt i32 %93, 64
  %95 = select i1 %94, i32 %93, i32 64
  %96 = icmp slt i32 %92, 1000
  br i1 %96, label %79, label %101

97:                                               ; preds = %87, %97
  %98 = phi i32 [ %99, %97 ], [ 0, %87 ]
  call void asm sideeffect "pause", "~{dirflag},~{fpsr},~{flags}"() #17, !srcloc !10
  %99 = add nuw nsw i32 %98, 1
  %100 = icmp eq i32 %99, %81
  br i1 %100, label %89, label %97

101:                                              ; preds = %91
  call void @_ZN4base8internal13SpinningMutex8LockSlowEv(%"class.base::internal::SpinningMutex"* %77) #17
  br label %102

102:                                              ; preds = %84, %101
  %103 = getelementptr inbounds %"struct.base::PartitionRoot", %"struct.base::PartitionRoot"* %75, i64 0, i32 21
  %104 = load %"struct.base::internal::PartitionSuperPageExtentEntry"*, %"struct.base::internal::PartitionSuperPageExtentEntry"** %103, align 8
  %105 = icmp eq %"struct.base::internal::PartitionSuperPageExtentEntry"* %104, null
  br i1 %105, label %106, label %113

106:                                              ; preds = %120, %102
  %107 = atomicrmw xchg i32* %78, i32 0 release
  %108 = icmp eq i32 %107, 2
  br i1 %108, label %109, label %110, !prof !7

109:                                              ; preds = %106
  call void @_ZN4base8internal13SpinningMutex9FutexWakeEv(%"class.base::internal::SpinningMutex"* %77) #17
  br label %110

110:                                              ; preds = %106, %109
  %111 = getelementptr inbounds %"struct.base::PartitionRoot"*, %"struct.base::PartitionRoot"** %74, i64 1
  %112 = icmp eq %"struct.base::PartitionRoot"** %111, %12
  br i1 %112, label %49, label %73

113:                                              ; preds = %102, %120
  %114 = phi %"struct.base::internal::PartitionSuperPageExtentEntry"* [ %122, %120 ], [ %104, %102 ]
  %115 = getelementptr inbounds %"struct.base::internal::PartitionSuperPageExtentEntry", %"struct.base::internal::PartitionSuperPageExtentEntry"* %114, i64 0, i32 1
  %116 = load i8*, i8** %115, align 8
  %117 = getelementptr inbounds %"struct.base::internal::PartitionSuperPageExtentEntry", %"struct.base::internal::PartitionSuperPageExtentEntry"* %114, i64 0, i32 2
  %118 = load i8*, i8** %117, align 8
  %119 = icmp eq i8* %116, %118
  br i1 %119, label %120, label %124

120:                                              ; preds = %977, %113
  %121 = getelementptr inbounds %"struct.base::internal::PartitionSuperPageExtentEntry", %"struct.base::internal::PartitionSuperPageExtentEntry"* %114, i64 0, i32 3
  %122 = load %"struct.base::internal::PartitionSuperPageExtentEntry"*, %"struct.base::internal::PartitionSuperPageExtentEntry"** %121, align 8
  %123 = icmp eq %"struct.base::internal::PartitionSuperPageExtentEntry"* %122, null
  br i1 %123, label %106, label %113

124:                                              ; preds = %113, %977
  %125 = phi i8* [ %978, %977 ], [ %116, %113 ]
  %126 = getelementptr inbounds i8, i8* %125, i64 49152
  %127 = ptrtoint i8* %126 to i64
  %128 = and i64 %127, -2097152
  %129 = or i64 %128, 4096
  %130 = inttoptr i64 %129 to i8*
  %131 = lshr i64 %127, 9
  %132 = and i64 %131, 4064
  %133 = getelementptr inbounds i8, i8* %130, i64 %132
  %134 = getelementptr inbounds i8, i8* %125, i64 2064384
  %135 = ptrtoint i8* %134 to i64
  %136 = and i64 %135, -2097152
  %137 = or i64 %136, 4096
  %138 = inttoptr i64 %137 to i8*
  %139 = lshr i64 %135, 9
  %140 = and i64 %139, 4064
  %141 = getelementptr inbounds i8, i8* %138, i64 %140
  %142 = bitcast i8* %141 to %"struct.base::internal::PartitionPage"*
  %143 = icmp ugt i8* %133, %141
  br i1 %143, label %977, label %144

144:                                              ; preds = %124
  %145 = bitcast i8* %133 to %"struct.base::internal::PartitionPage"*
  br label %146

146:                                              ; preds = %891, %144
  %147 = phi %"struct.base::internal::PartitionPage"* [ %145, %144 ], [ %902, %891 ]
  %148 = phi i64 [ 0, %144 ], [ %892, %891 ]
  br label %149

149:                                              ; preds = %158, %146
  %150 = phi %"struct.base::internal::PartitionPage"* [ %147, %146 ], [ %159, %158 ]
  %151 = getelementptr inbounds %"struct.base::internal::PartitionPage", %"struct.base::internal::PartitionPage"* %150, i64 0, i32 2
  %152 = load i8, i8* %151, align 1
  %153 = and i8 %152, 1
  %154 = icmp eq i8 %153, 0
  br i1 %154, label %155, label %161

155:                                              ; preds = %149
  %156 = and i8 %152, 2
  %157 = icmp eq i8 %156, 0
  br i1 %157, label %904, label %158

158:                                              ; preds = %155
  %159 = getelementptr inbounds %"struct.base::internal::PartitionPage", %"struct.base::internal::PartitionPage"* %150, i64 1
  %160 = icmp ugt %"struct.base::internal::PartitionPage"* %159, %142
  br i1 %160, label %904, label %149

161:                                              ; preds = %149
  %162 = getelementptr inbounds %"struct.base::internal::PartitionPage", %"struct.base::internal::PartitionPage"* %150, i64 0, i32 0, i32 1, i64 16
  %163 = bitcast i8* %162 to i16*
  %164 = load i16, i16* %163, align 1
  %165 = icmp eq i16 %164, 0
  br i1 %165, label %891, label %166

166:                                              ; preds = %161
  %167 = ptrtoint %"struct.base::internal::PartitionPage"* %150 to i64
  %168 = and i64 %167, 2097151
  %169 = add nuw nsw i64 %168, 36028797018959872
  %170 = lshr i64 %169, 5
  %171 = and i64 %167, -2097152
  %172 = shl i64 %170, 14
  %173 = add i64 %172, %171
  %174 = inttoptr i64 %173 to i64*
  %175 = getelementptr inbounds %"struct.base::internal::PartitionPage", %"struct.base::internal::PartitionPage"* %150, i64 0, i32 0, i32 1, i64 8
  %176 = bitcast i8* %175 to %"struct.base::internal::PartitionBucket"**
  %177 = load %"struct.base::internal::PartitionBucket"*, %"struct.base::internal::PartitionBucket"** %176, align 1
  %178 = getelementptr inbounds %"struct.base::internal::PartitionBucket", %"struct.base::internal::PartitionBucket"* %177, i64 0, i32 4
  %179 = load i32, i32* %178, align 4
  %180 = shl i32 %179, 12
  %181 = and i32 %180, 1044480
  %182 = getelementptr inbounds %"struct.base::internal::PartitionBucket", %"struct.base::internal::PartitionBucket"* %177, i64 0, i32 3
  %183 = load i32, i32* %182, align 8
  %184 = udiv i32 %181, %183
  %185 = and i32 %184, 65535
  %186 = zext i32 %185 to i64
  %187 = getelementptr inbounds %"struct.base::internal::PartitionPage", %"struct.base::internal::PartitionPage"* %150, i64 0, i32 0, i32 1, i64 18
  %188 = bitcast i8* %187 to i16*
  %189 = load i16, i16* %188, align 1
  %190 = zext i16 %189 to i64
  %191 = sub nsw i64 %186, %190
  %192 = zext i32 %183 to i64
  %193 = mul nsw i64 %191, %192
  %194 = lshr i64 %193, 3
  %195 = getelementptr inbounds i64, i64* %174, i64 %194
  %196 = icmp ugt i32 %183, 8191
  br i1 %196, label %197, label %562

197:                                              ; preds = %166
  %198 = load %"struct.base::internal::RacefulWorklist<base::internal::(anonymous namespace)::PCScanSnapshot::LargeScanArea>::Node"*, %"struct.base::internal::RacefulWorklist<base::internal::(anonymous namespace)::PCScanSnapshot::LargeScanArea>::Node"** %25, align 8
  %199 = load %"struct.base::internal::RacefulWorklist<base::internal::(anonymous namespace)::PCScanSnapshot::LargeScanArea>::Node"*, %"struct.base::internal::RacefulWorklist<base::internal::(anonymous namespace)::PCScanSnapshot::LargeScanArea>::Node"** %26, align 8
  %200 = icmp ult %"struct.base::internal::RacefulWorklist<base::internal::(anonymous namespace)::PCScanSnapshot::LargeScanArea>::Node"* %198, %199
  %201 = ptrtoint %"struct.base::internal::RacefulWorklist<base::internal::(anonymous namespace)::PCScanSnapshot::LargeScanArea>::Node"* %199 to i64
  br i1 %200, label %202, label %210

202:                                              ; preds = %197
  %203 = getelementptr inbounds %"struct.base::internal::RacefulWorklist<base::internal::(anonymous namespace)::PCScanSnapshot::LargeScanArea>::Node", %"struct.base::internal::RacefulWorklist<base::internal::(anonymous namespace)::PCScanSnapshot::LargeScanArea>::Node"* %198, i64 0, i32 0, i32 0, i32 0
  store i64* %174, i64** %203, align 8
  %204 = getelementptr inbounds %"struct.base::internal::RacefulWorklist<base::internal::(anonymous namespace)::PCScanSnapshot::LargeScanArea>::Node", %"struct.base::internal::RacefulWorklist<base::internal::(anonymous namespace)::PCScanSnapshot::LargeScanArea>::Node"* %198, i64 0, i32 0, i32 0, i32 1
  store i64* %195, i64** %204, align 8
  %205 = getelementptr inbounds %"struct.base::internal::RacefulWorklist<base::internal::(anonymous namespace)::PCScanSnapshot::LargeScanArea>::Node", %"struct.base::internal::RacefulWorklist<base::internal::(anonymous namespace)::PCScanSnapshot::LargeScanArea>::Node"* %198, i64 0, i32 0, i32 1
  store i64 %192, i64* %205, align 8
  %206 = getelementptr inbounds %"struct.base::internal::RacefulWorklist<base::internal::(anonymous namespace)::PCScanSnapshot::LargeScanArea>::Node", %"struct.base::internal::RacefulWorklist<base::internal::(anonymous namespace)::PCScanSnapshot::LargeScanArea>::Node"* %198, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %206, align 1
  %207 = getelementptr inbounds %"struct.base::internal::RacefulWorklist<base::internal::(anonymous namespace)::PCScanSnapshot::LargeScanArea>::Node", %"struct.base::internal::RacefulWorklist<base::internal::(anonymous namespace)::PCScanSnapshot::LargeScanArea>::Node"* %198, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %207, align 1
  %208 = getelementptr inbounds %"struct.base::internal::RacefulWorklist<base::internal::(anonymous namespace)::PCScanSnapshot::LargeScanArea>::Node", %"struct.base::internal::RacefulWorklist<base::internal::(anonymous namespace)::PCScanSnapshot::LargeScanArea>::Node"* %198, i64 1
  %209 = ptrtoint %"struct.base::internal::RacefulWorklist<base::internal::(anonymous namespace)::PCScanSnapshot::LargeScanArea>::Node"* %208 to i64
  store i64 %209, i64* %27, align 8
  br label %889

210:                                              ; preds = %197
  %211 = ptrtoint %"struct.base::internal::RacefulWorklist<base::internal::(anonymous namespace)::PCScanSnapshot::LargeScanArea>::Node"* %198 to i64
  %212 = load i64, i64* %28, align 8
  %213 = sub i64 %211, %212
  %214 = ashr exact i64 %213, 5
  %215 = add nsw i64 %214, 1
  %216 = icmp ugt i64 %215, 576460752303423487
  br i1 %216, label %217, label %219

217:                                              ; preds = %210
  %218 = bitcast %"class.base::internal::RacefulWorklist.14"* %24 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %218) #18
  unreachable

219:                                              ; preds = %210
  %220 = sub i64 %201, %212
  %221 = ashr exact i64 %220, 5
  %222 = icmp ult i64 %221, 288230376151711743
  br i1 %222, label %223, label %228

223:                                              ; preds = %219
  %224 = ashr exact i64 %220, 4
  %225 = icmp ult i64 %224, %215
  %226 = select i1 %225, i64 %215, i64 %224
  %227 = icmp eq i64 %226, 0
  br i1 %227, label %483, label %228

228:                                              ; preds = %223, %219
  %229 = phi i64 [ %226, %223 ], [ 576460752303423487, %219 ]
  %230 = call dereferenceable(5408) %"struct.base::PartitionRoot"* @_ZN4base8internal23PCScanMetadataAllocatorEv() #17
  %231 = shl i64 %229, 5
  %232 = call i64 @llvm.ctlz.i64(i64 %231, i1 false) #17, !range !4
  %233 = sub nuw nsw i64 64, %232
  %234 = and i64 %233, 255
  %235 = getelementptr inbounds [65 x i8], [65 x i8]* @_ZN4base12_GLOBAL__N_116kOrderIndexShiftE, i64 0, i64 %234
  %236 = load i8, i8* %235, align 1
  %237 = zext i8 %236 to i64
  %238 = lshr i64 %231, %237
  %239 = and i64 %238, 7
  %240 = getelementptr inbounds [65 x i64], [65 x i64]* @_ZN4base12_GLOBAL__N_118kOrderSubIndexMaskE, i64 0, i64 %234
  %241 = load i64, i64* %240, align 8
  %242 = and i64 %241, %231
  %243 = shl nuw nsw i64 %234, 3
  %244 = or i64 %239, %243
  %245 = icmp ne i64 %242, 0
  %246 = zext i1 %245 to i64
  %247 = add nuw nsw i64 %244, %246
  %248 = getelementptr inbounds { [128 x i64], [521 x i16] }, { [128 x i64], [521 x i16] }* @_ZZN4base8internal17BucketIndexLookup8GetIndexEmE6lookup, i64 0, i32 1, i64 %247
  %249 = load i16, i16* %248, align 2
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %4) #17
  store i8 0, i8* %4, align 1
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %30) #17
  store i64 -6148914691236517206, i64* %5, align 8
  %250 = getelementptr inbounds %"struct.base::PartitionRoot", %"struct.base::PartitionRoot"* %230, i64 0, i32 0
  %251 = load i8, i8* %250, align 8
  %252 = icmp eq i8 %251, 2
  br i1 %252, label %253, label %257

253:                                              ; preds = %228
  %254 = load atomic i8, i8* getelementptr inbounds (%"class.base::internal::PCScan", %"class.base::internal::PCScan"* @_ZN4base8internal6PCScan9instance_E, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0) acquire, align 8
  %255 = icmp eq i8 %254, 2
  br i1 %255, label %256, label %257, !prof !7

256:                                              ; preds = %253
  call void @_ZN4base8internal6PCScan8JoinScanEv() #17
  br label %257

257:                                              ; preds = %256, %253, %228
  %258 = getelementptr inbounds %"struct.base::PartitionRoot", %"struct.base::PartitionRoot"* %230, i64 0, i32 2
  %259 = load i8, i8* %258, align 2, !range !5
  %260 = icmp eq i8 %259, 0
  br i1 %260, label %409, label %261, !prof !19

261:                                              ; preds = %257
  %262 = load i32, i32* @_ZN4base8internal18g_thread_cache_keyE, align 4
  %263 = call i8* @pthread_getspecific(i32 %262) #17
  %264 = bitcast i8* %263 to %"class.base::internal::ThreadCache"*
  %265 = icmp ugt i8* %263, inttoptr (i64 1 to i8*)
  br i1 %265, label %266, label %336, !prof !6

266:                                              ; preds = %261
  %267 = zext i16 %249 to i64
  %268 = getelementptr inbounds %"class.base::internal::ThreadCache", %"class.base::internal::ThreadCache"* %264, i64 0, i32 3, i32 12, i64 %267
  %269 = load i64, i64* %268, align 8
  %270 = add i64 %269, 1
  store i64 %270, i64* %268, align 8
  %271 = getelementptr inbounds i8, i8* %263, i64 1440
  %272 = bitcast i8* %271 to i64*
  %273 = load i64, i64* %272, align 8
  %274 = add i64 %273, 1
  store i64 %274, i64* %272, align 8
  %275 = load i16, i16* @_ZN4base8internal11ThreadCache28largest_active_bucket_index_E, align 2
  %276 = icmp ult i16 %275, %249
  br i1 %276, label %277, label %286, !prof !7

277:                                              ; preds = %266
  %278 = getelementptr inbounds i8, i8* %263, i64 1472
  %279 = bitcast i8* %278 to i64*
  %280 = load i64, i64* %279, align 8
  %281 = add i64 %280, 1
  store i64 %281, i64* %279, align 8
  %282 = getelementptr inbounds i8, i8* %263, i64 1456
  %283 = bitcast i8* %282 to i64*
  %284 = load i64, i64* %283, align 8
  %285 = add i64 %284, 1
  store i64 %285, i64* %283, align 8
  br label %343

286:                                              ; preds = %266
  %287 = getelementptr inbounds %"class.base::internal::ThreadCache", %"class.base::internal::ThreadCache"* %264, i64 0, i32 0, i64 %267, i32 0
  %288 = load %"class.base::internal::PartitionFreelistEntry"*, %"class.base::internal::PartitionFreelistEntry"** %287, align 8
  %289 = icmp eq %"class.base::internal::PartitionFreelistEntry"* %288, null
  br i1 %289, label %295, label %290, !prof !7

290:                                              ; preds = %286
  %291 = getelementptr inbounds i8, i8* %263, i64 1448
  %292 = bitcast i8* %291 to i64*
  %293 = load i64, i64* %292, align 8
  %294 = add i64 %293, 1
  store i64 %294, i64* %292, align 8
  br label %303

295:                                              ; preds = %286
  %296 = getelementptr inbounds i8, i8* %263, i64 1456
  %297 = bitcast i8* %296 to <2 x i64>*
  %298 = load <2 x i64>, <2 x i64>* %297, align 8
  %299 = add <2 x i64> %298, <i64 1, i64 1>
  %300 = bitcast i8* %296 to <2 x i64>*
  store <2 x i64> %299, <2 x i64>* %300, align 8
  call void @_ZN4base8internal11ThreadCache10FillBucketEm(%"class.base::internal::ThreadCache"* %264, i64 %267) #17
  %301 = load %"class.base::internal::PartitionFreelistEntry"*, %"class.base::internal::PartitionFreelistEntry"** %287, align 8
  %302 = icmp eq %"class.base::internal::PartitionFreelistEntry"* %301, null
  br i1 %302, label %343, label %303, !prof !7

303:                                              ; preds = %295, %290
  %304 = phi %"class.base::internal::PartitionFreelistEntry"* [ %301, %295 ], [ %288, %290 ]
  %305 = getelementptr inbounds %"class.base::internal::PartitionFreelistEntry", %"class.base::internal::PartitionFreelistEntry"* %304, i64 0, i32 0
  %306 = load %"struct.base::internal::EncodedPartitionFreelistEntry"*, %"struct.base::internal::EncodedPartitionFreelistEntry"** %305, align 8
  %307 = icmp eq %"struct.base::internal::EncodedPartitionFreelistEntry"* %306, null
  %308 = ptrtoint %"struct.base::internal::EncodedPartitionFreelistEntry"* %306 to i64
  br i1 %307, label %309, label %311

309:                                              ; preds = %303
  %310 = call i64 @llvm.bswap.i64(i64 %308) #17
  br label %320

311:                                              ; preds = %303
  %312 = xor i64 %308, -1
  %313 = getelementptr inbounds %"class.base::internal::PartitionFreelistEntry", %"class.base::internal::PartitionFreelistEntry"* %304, i64 0, i32 1
  %314 = load i64, i64* %313, align 8
  %315 = icmp eq i64 %314, %312
  br i1 %315, label %317, label %316, !prof !6

316:                                              ; preds = %311
  call fastcc void @_ZN4base8internal12_GLOBAL__N_126FreelistCorruptionDetectedEv() #18
  unreachable

317:                                              ; preds = %311
  %318 = call i64 @llvm.bswap.i64(i64 %308) #17
  %319 = inttoptr i64 %318 to i8*
  call void @llvm.prefetch(i8* nonnull %319, i32 0, i32 3, i32 1) #17
  br label %320

320:                                              ; preds = %317, %309
  %321 = phi i64 [ %310, %309 ], [ %318, %317 ]
  %322 = inttoptr i64 %321 to %"class.base::internal::PartitionFreelistEntry"*
  %323 = getelementptr inbounds %"class.base::internal::ThreadCache", %"class.base::internal::ThreadCache"* %264, i64 0, i32 0, i64 %267, i32 1
  %324 = load i8, i8* %323, align 8
  %325 = add i8 %324, -1
  store i8 %325, i8* %323, align 8
  store %"class.base::internal::PartitionFreelistEntry"* %322, %"class.base::internal::PartitionFreelistEntry"** %287, align 8
  %326 = getelementptr inbounds %"class.base::internal::ThreadCache", %"class.base::internal::ThreadCache"* %264, i64 0, i32 0, i64 %267, i32 3
  %327 = load i16, i16* %326, align 2
  %328 = zext i16 %327 to i64
  store i64 %328, i64* %5, align 8
  %329 = load i16, i16* %326, align 2
  %330 = zext i16 %329 to i64
  %331 = getelementptr inbounds i8, i8* %263, i64 1424
  %332 = bitcast i8* %331 to i64*
  %333 = load i64, i64* %332, align 8
  %334 = sub i64 %333, %330
  store i64 %334, i64* %332, align 8
  %335 = bitcast %"class.base::internal::PartitionFreelistEntry"* %304 to i8*
  br label %338

336:                                              ; preds = %261
  %337 = call i8* @_ZN4base13PartitionRootILb1EE28MaybeInitThreadCacheAndAllocEtPm(%"struct.base::PartitionRoot"* %230, i16 zeroext %249, i64* nonnull %5) #17
  br label %338

338:                                              ; preds = %336, %320
  %339 = phi i8* [ %337, %336 ], [ %335, %320 ]
  %340 = icmp eq i8* %339, null
  br i1 %340, label %341, label %478, !prof !7

341:                                              ; preds = %338
  %342 = zext i16 %249 to i64
  br label %343

343:                                              ; preds = %341, %295, %277
  %344 = phi i64 [ %342, %341 ], [ %267, %295 ], [ %267, %277 ]
  %345 = getelementptr inbounds %"struct.base::PartitionRoot", %"struct.base::PartitionRoot"* %230, i64 0, i32 10, i64 %344
  %346 = getelementptr inbounds %"struct.base::PartitionRoot", %"struct.base::PartitionRoot"* %230, i64 0, i32 8
  %347 = getelementptr inbounds %"class.base::internal::MaybeSpinLock", %"class.base::internal::MaybeSpinLock"* %346, i64 0, i32 0
  %348 = getelementptr inbounds %"class.base::internal::MaybeSpinLock", %"class.base::internal::MaybeSpinLock"* %346, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  br label %349

349:                                              ; preds = %361, %343
  %350 = phi i32 [ 0, %343 ], [ %362, %361 ]
  %351 = phi i32 [ 1, %343 ], [ %365, %361 ]
  %352 = load atomic i32, i32* %348 monotonic, align 4
  %353 = icmp eq i32 %352, 0
  br i1 %353, label %354, label %357, !prof !9

354:                                              ; preds = %349
  %355 = cmpxchg weak i32* %348, i32 0, i32 1 acquire monotonic
  %356 = extractvalue { i32, i1 } %355, 1
  br i1 %356, label %372, label %357, !prof !6

357:                                              ; preds = %354, %349
  %358 = icmp sgt i32 %351, 0
  br i1 %358, label %367, label %361

359:                                              ; preds = %367
  %360 = add i32 %351, %350
  br label %361

361:                                              ; preds = %359, %357
  %362 = phi i32 [ %350, %357 ], [ %360, %359 ]
  %363 = shl i32 %351, 1
  %364 = icmp slt i32 %363, 64
  %365 = select i1 %364, i32 %363, i32 64
  %366 = icmp slt i32 %362, 1000
  br i1 %366, label %349, label %371

367:                                              ; preds = %357, %367
  %368 = phi i32 [ %369, %367 ], [ 0, %357 ]
  call void asm sideeffect "pause", "~{dirflag},~{fpsr},~{flags}"() #17, !srcloc !10
  %369 = add nuw nsw i32 %368, 1
  %370 = icmp eq i32 %369, %351
  br i1 %370, label %359, label %367

371:                                              ; preds = %361
  call void @_ZN4base8internal13SpinningMutex8LockSlowEv(%"class.base::internal::SpinningMutex"* %347) #17
  br label %372

372:                                              ; preds = %354, %371
  %373 = getelementptr inbounds %"struct.base::internal::PartitionBucket", %"struct.base::internal::PartitionBucket"* %345, i64 0, i32 0
  %374 = load %"struct.base::internal::SlotSpanMetadata"*, %"struct.base::internal::SlotSpanMetadata"** %373, align 8
  %375 = bitcast %"struct.base::internal::SlotSpanMetadata"* %374 to i8**
  %376 = load i8*, i8** %375, align 1
  %377 = icmp eq i8* %376, null
  br i1 %377, label %402, label %378, !prof !7

378:                                              ; preds = %372
  %379 = getelementptr inbounds %"struct.base::internal::SlotSpanMetadata", %"struct.base::internal::SlotSpanMetadata"* %374, i64 0, i32 0
  store i8 0, i8* %4, align 1
  %380 = bitcast i8* %376 to %"struct.base::internal::EncodedPartitionFreelistEntry"**
  %381 = load %"struct.base::internal::EncodedPartitionFreelistEntry"*, %"struct.base::internal::EncodedPartitionFreelistEntry"** %380, align 8
  %382 = icmp eq %"struct.base::internal::EncodedPartitionFreelistEntry"* %381, null
  %383 = ptrtoint %"struct.base::internal::EncodedPartitionFreelistEntry"* %381 to i64
  br i1 %382, label %384, label %386

384:                                              ; preds = %378
  %385 = call i64 @llvm.bswap.i64(i64 %383) #17
  br label %396

386:                                              ; preds = %378
  %387 = xor i64 %383, -1
  %388 = getelementptr inbounds i8, i8* %376, i64 8
  %389 = bitcast i8* %388 to i64*
  %390 = load i64, i64* %389, align 8
  %391 = icmp eq i64 %390, %387
  br i1 %391, label %393, label %392, !prof !6

392:                                              ; preds = %386
  call fastcc void @_ZN4base8internal12_GLOBAL__N_126FreelistCorruptionDetectedEv() #18
  unreachable

393:                                              ; preds = %386
  %394 = call i64 @llvm.bswap.i64(i64 %383) #17
  %395 = inttoptr i64 %394 to i8*
  call void @llvm.prefetch(i8* nonnull %395, i32 0, i32 3, i32 1) #17
  br label %396

396:                                              ; preds = %393, %384
  %397 = phi i64 [ %385, %384 ], [ %394, %393 ]
  %398 = inttoptr i64 %397 to %"class.base::internal::PartitionFreelistEntry"*
  store %"class.base::internal::PartitionFreelistEntry"* %398, %"class.base::internal::PartitionFreelistEntry"** %379, align 1
  %399 = getelementptr inbounds %"struct.base::internal::SlotSpanMetadata", %"struct.base::internal::SlotSpanMetadata"* %374, i64 0, i32 3
  %400 = load i16, i16* %399, align 1
  %401 = add i16 %400, 1
  store i16 %401, i16* %399, align 1
  br label %404

402:                                              ; preds = %372
  %403 = call i8* @_ZN4base8internal15PartitionBucketILb1EE13SlowPathAllocEPNS_13PartitionRootILb1EEEimmPb(%"struct.base::internal::PartitionBucket"* %345, %"struct.base::PartitionRoot"* %230, i32 0, i64 %231, i64 16384, i8* nonnull %4) #17
  br label %404

404:                                              ; preds = %402, %396
  %405 = phi i8* [ %376, %396 ], [ %403, %402 ]
  %406 = atomicrmw xchg i32* %348, i32 0 release
  %407 = icmp eq i32 %406, 2
  br i1 %407, label %408, label %475, !prof !7

408:                                              ; preds = %404
  call void @_ZN4base8internal13SpinningMutex9FutexWakeEv(%"class.base::internal::SpinningMutex"* %347) #17
  br label %475

409:                                              ; preds = %257
  %410 = zext i16 %249 to i64
  %411 = getelementptr inbounds %"struct.base::PartitionRoot", %"struct.base::PartitionRoot"* %230, i64 0, i32 10, i64 %410
  %412 = getelementptr inbounds %"struct.base::PartitionRoot", %"struct.base::PartitionRoot"* %230, i64 0, i32 8
  %413 = getelementptr inbounds %"class.base::internal::MaybeSpinLock", %"class.base::internal::MaybeSpinLock"* %412, i64 0, i32 0
  %414 = getelementptr inbounds %"class.base::internal::MaybeSpinLock", %"class.base::internal::MaybeSpinLock"* %412, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  br label %415

415:                                              ; preds = %427, %409
  %416 = phi i32 [ 0, %409 ], [ %428, %427 ]
  %417 = phi i32 [ 1, %409 ], [ %431, %427 ]
  %418 = load atomic i32, i32* %414 monotonic, align 4
  %419 = icmp eq i32 %418, 0
  br i1 %419, label %420, label %423, !prof !9

420:                                              ; preds = %415
  %421 = cmpxchg weak i32* %414, i32 0, i32 1 acquire monotonic
  %422 = extractvalue { i32, i1 } %421, 1
  br i1 %422, label %438, label %423, !prof !6

423:                                              ; preds = %420, %415
  %424 = icmp sgt i32 %417, 0
  br i1 %424, label %433, label %427

425:                                              ; preds = %433
  %426 = add i32 %417, %416
  br label %427

427:                                              ; preds = %425, %423
  %428 = phi i32 [ %416, %423 ], [ %426, %425 ]
  %429 = shl i32 %417, 1
  %430 = icmp slt i32 %429, 64
  %431 = select i1 %430, i32 %429, i32 64
  %432 = icmp slt i32 %428, 1000
  br i1 %432, label %415, label %437

433:                                              ; preds = %423, %433
  %434 = phi i32 [ %435, %433 ], [ 0, %423 ]
  call void asm sideeffect "pause", "~{dirflag},~{fpsr},~{flags}"() #17, !srcloc !10
  %435 = add nuw nsw i32 %434, 1
  %436 = icmp eq i32 %435, %417
  br i1 %436, label %425, label %433

437:                                              ; preds = %427
  call void @_ZN4base8internal13SpinningMutex8LockSlowEv(%"class.base::internal::SpinningMutex"* %413) #17
  br label %438

438:                                              ; preds = %420, %437
  %439 = getelementptr inbounds %"struct.base::internal::PartitionBucket", %"struct.base::internal::PartitionBucket"* %411, i64 0, i32 0
  %440 = load %"struct.base::internal::SlotSpanMetadata"*, %"struct.base::internal::SlotSpanMetadata"** %439, align 8
  %441 = bitcast %"struct.base::internal::SlotSpanMetadata"* %440 to i8**
  %442 = load i8*, i8** %441, align 1
  %443 = icmp eq i8* %442, null
  br i1 %443, label %468, label %444, !prof !7

444:                                              ; preds = %438
  %445 = getelementptr inbounds %"struct.base::internal::SlotSpanMetadata", %"struct.base::internal::SlotSpanMetadata"* %440, i64 0, i32 0
  store i8 0, i8* %4, align 1
  %446 = bitcast i8* %442 to %"struct.base::internal::EncodedPartitionFreelistEntry"**
  %447 = load %"struct.base::internal::EncodedPartitionFreelistEntry"*, %"struct.base::internal::EncodedPartitionFreelistEntry"** %446, align 8
  %448 = icmp eq %"struct.base::internal::EncodedPartitionFreelistEntry"* %447, null
  %449 = ptrtoint %"struct.base::internal::EncodedPartitionFreelistEntry"* %447 to i64
  br i1 %448, label %450, label %452

450:                                              ; preds = %444
  %451 = call i64 @llvm.bswap.i64(i64 %449) #17
  br label %462

452:                                              ; preds = %444
  %453 = xor i64 %449, -1
  %454 = getelementptr inbounds i8, i8* %442, i64 8
  %455 = bitcast i8* %454 to i64*
  %456 = load i64, i64* %455, align 8
  %457 = icmp eq i64 %456, %453
  br i1 %457, label %459, label %458, !prof !6

458:                                              ; preds = %452
  call fastcc void @_ZN4base8internal12_GLOBAL__N_126FreelistCorruptionDetectedEv() #18
  unreachable

459:                                              ; preds = %452
  %460 = call i64 @llvm.bswap.i64(i64 %449) #17
  %461 = inttoptr i64 %460 to i8*
  call void @llvm.prefetch(i8* nonnull %461, i32 0, i32 3, i32 1) #17
  br label %462

462:                                              ; preds = %459, %450
  %463 = phi i64 [ %451, %450 ], [ %460, %459 ]
  %464 = inttoptr i64 %463 to %"class.base::internal::PartitionFreelistEntry"*
  store %"class.base::internal::PartitionFreelistEntry"* %464, %"class.base::internal::PartitionFreelistEntry"** %445, align 1
  %465 = getelementptr inbounds %"struct.base::internal::SlotSpanMetadata", %"struct.base::internal::SlotSpanMetadata"* %440, i64 0, i32 3
  %466 = load i16, i16* %465, align 1
  %467 = add i16 %466, 1
  store i16 %467, i16* %465, align 1
  br label %470

468:                                              ; preds = %438
  %469 = call i8* @_ZN4base8internal15PartitionBucketILb1EE13SlowPathAllocEPNS_13PartitionRootILb1EEEimmPb(%"struct.base::internal::PartitionBucket"* %411, %"struct.base::PartitionRoot"* %230, i32 0, i64 %231, i64 16384, i8* nonnull %4) #17
  br label %470

470:                                              ; preds = %468, %462
  %471 = phi i8* [ %442, %462 ], [ %469, %468 ]
  %472 = atomicrmw xchg i32* %414, i32 0 release
  %473 = icmp eq i32 %472, 2
  br i1 %473, label %474, label %475, !prof !7

474:                                              ; preds = %470
  call void @_ZN4base8internal13SpinningMutex9FutexWakeEv(%"class.base::internal::SpinningMutex"* %413) #17
  br label %475

475:                                              ; preds = %474, %470, %408, %404
  %476 = phi i8* [ %405, %404 ], [ %405, %408 ], [ %471, %470 ], [ %471, %474 ]
  %477 = icmp eq i8* %476, null
  br i1 %477, label %480, label %478, !prof !7

478:                                              ; preds = %475, %338
  %479 = phi i8* [ %476, %475 ], [ %339, %338 ]
  br label %480

480:                                              ; preds = %478, %475
  %481 = phi i8* [ null, %475 ], [ %479, %478 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %30) #17
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %4) #17
  %482 = bitcast i8* %481 to %"struct.base::internal::RacefulWorklist<base::internal::(anonymous namespace)::PCScanSnapshot::LargeScanArea>::Node"*
  br label %483

483:                                              ; preds = %480, %223
  %484 = phi i64 [ %229, %480 ], [ 0, %223 ]
  %485 = phi %"struct.base::internal::RacefulWorklist<base::internal::(anonymous namespace)::PCScanSnapshot::LargeScanArea>::Node"* [ %482, %480 ], [ null, %223 ]
  %486 = getelementptr inbounds %"struct.base::internal::RacefulWorklist<base::internal::(anonymous namespace)::PCScanSnapshot::LargeScanArea>::Node", %"struct.base::internal::RacefulWorklist<base::internal::(anonymous namespace)::PCScanSnapshot::LargeScanArea>::Node"* %485, i64 %214
  %487 = getelementptr inbounds %"struct.base::internal::RacefulWorklist<base::internal::(anonymous namespace)::PCScanSnapshot::LargeScanArea>::Node", %"struct.base::internal::RacefulWorklist<base::internal::(anonymous namespace)::PCScanSnapshot::LargeScanArea>::Node"* %485, i64 %484
  %488 = ptrtoint %"struct.base::internal::RacefulWorklist<base::internal::(anonymous namespace)::PCScanSnapshot::LargeScanArea>::Node"* %487 to i64
  %489 = getelementptr inbounds %"struct.base::internal::RacefulWorklist<base::internal::(anonymous namespace)::PCScanSnapshot::LargeScanArea>::Node", %"struct.base::internal::RacefulWorklist<base::internal::(anonymous namespace)::PCScanSnapshot::LargeScanArea>::Node"* %486, i64 0, i32 0, i32 0, i32 0
  store i64* %174, i64** %489, align 8
  %490 = getelementptr inbounds %"struct.base::internal::RacefulWorklist<base::internal::(anonymous namespace)::PCScanSnapshot::LargeScanArea>::Node", %"struct.base::internal::RacefulWorklist<base::internal::(anonymous namespace)::PCScanSnapshot::LargeScanArea>::Node"* %485, i64 %214, i32 0, i32 0, i32 1
  store i64* %195, i64** %490, align 8
  %491 = getelementptr inbounds %"struct.base::internal::RacefulWorklist<base::internal::(anonymous namespace)::PCScanSnapshot::LargeScanArea>::Node", %"struct.base::internal::RacefulWorklist<base::internal::(anonymous namespace)::PCScanSnapshot::LargeScanArea>::Node"* %485, i64 %214, i32 0, i32 1
  store i64 %192, i64* %491, align 8
  %492 = getelementptr inbounds %"struct.base::internal::RacefulWorklist<base::internal::(anonymous namespace)::PCScanSnapshot::LargeScanArea>::Node", %"struct.base::internal::RacefulWorklist<base::internal::(anonymous namespace)::PCScanSnapshot::LargeScanArea>::Node"* %485, i64 %214, i32 1, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %492, align 1
  %493 = getelementptr inbounds %"struct.base::internal::RacefulWorklist<base::internal::(anonymous namespace)::PCScanSnapshot::LargeScanArea>::Node", %"struct.base::internal::RacefulWorklist<base::internal::(anonymous namespace)::PCScanSnapshot::LargeScanArea>::Node"* %485, i64 %214, i32 2, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %493, align 1
  %494 = getelementptr inbounds %"struct.base::internal::RacefulWorklist<base::internal::(anonymous namespace)::PCScanSnapshot::LargeScanArea>::Node", %"struct.base::internal::RacefulWorklist<base::internal::(anonymous namespace)::PCScanSnapshot::LargeScanArea>::Node"* %486, i64 1
  %495 = ptrtoint %"struct.base::internal::RacefulWorklist<base::internal::(anonymous namespace)::PCScanSnapshot::LargeScanArea>::Node"* %494 to i64
  %496 = load %"struct.base::internal::RacefulWorklist<base::internal::(anonymous namespace)::PCScanSnapshot::LargeScanArea>::Node"*, %"struct.base::internal::RacefulWorklist<base::internal::(anonymous namespace)::PCScanSnapshot::LargeScanArea>::Node"** %31, align 8
  %497 = ptrtoint %"struct.base::internal::RacefulWorklist<base::internal::(anonymous namespace)::PCScanSnapshot::LargeScanArea>::Node"* %496 to i64
  %498 = load %"struct.base::internal::RacefulWorklist<base::internal::(anonymous namespace)::PCScanSnapshot::LargeScanArea>::Node"*, %"struct.base::internal::RacefulWorklist<base::internal::(anonymous namespace)::PCScanSnapshot::LargeScanArea>::Node"** %25, align 8
  %499 = icmp eq %"struct.base::internal::RacefulWorklist<base::internal::(anonymous namespace)::PCScanSnapshot::LargeScanArea>::Node"* %498, %496
  br i1 %499, label %555, label %500

500:                                              ; preds = %483
  %501 = getelementptr %"struct.base::internal::RacefulWorklist<base::internal::(anonymous namespace)::PCScanSnapshot::LargeScanArea>::Node", %"struct.base::internal::RacefulWorklist<base::internal::(anonymous namespace)::PCScanSnapshot::LargeScanArea>::Node"* %498, i64 -1
  %502 = ptrtoint %"struct.base::internal::RacefulWorklist<base::internal::(anonymous namespace)::PCScanSnapshot::LargeScanArea>::Node"* %501 to i64
  %503 = sub i64 %502, %497
  %504 = and i64 %503, 32
  %505 = icmp eq i64 %504, 0
  br i1 %505, label %506, label %519

506:                                              ; preds = %500
  %507 = getelementptr inbounds %"struct.base::internal::RacefulWorklist<base::internal::(anonymous namespace)::PCScanSnapshot::LargeScanArea>::Node", %"struct.base::internal::RacefulWorklist<base::internal::(anonymous namespace)::PCScanSnapshot::LargeScanArea>::Node"* %486, i64 -1
  %508 = getelementptr inbounds %"struct.base::internal::RacefulWorklist<base::internal::(anonymous namespace)::PCScanSnapshot::LargeScanArea>::Node", %"struct.base::internal::RacefulWorklist<base::internal::(anonymous namespace)::PCScanSnapshot::LargeScanArea>::Node"* %498, i64 -1
  %509 = bitcast %"struct.base::internal::RacefulWorklist<base::internal::(anonymous namespace)::PCScanSnapshot::LargeScanArea>::Node"* %507 to i8*
  %510 = bitcast %"struct.base::internal::RacefulWorklist<base::internal::(anonymous namespace)::PCScanSnapshot::LargeScanArea>::Node"* %508 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %509, i8* align 8 %510, i64 24, i1 false) #17
  %511 = getelementptr inbounds %"struct.base::internal::RacefulWorklist<base::internal::(anonymous namespace)::PCScanSnapshot::LargeScanArea>::Node", %"struct.base::internal::RacefulWorklist<base::internal::(anonymous namespace)::PCScanSnapshot::LargeScanArea>::Node"* %498, i64 -1, i32 1, i32 0, i32 0, i32 0, i32 0
  %512 = load atomic i8, i8* %511 monotonic, align 1
  %513 = and i8 %512, 1
  %514 = getelementptr inbounds %"struct.base::internal::RacefulWorklist<base::internal::(anonymous namespace)::PCScanSnapshot::LargeScanArea>::Node", %"struct.base::internal::RacefulWorklist<base::internal::(anonymous namespace)::PCScanSnapshot::LargeScanArea>::Node"* %486, i64 -1, i32 1, i32 0, i32 0, i32 0, i32 0
  store i8 %513, i8* %514, align 1
  %515 = getelementptr inbounds %"struct.base::internal::RacefulWorklist<base::internal::(anonymous namespace)::PCScanSnapshot::LargeScanArea>::Node", %"struct.base::internal::RacefulWorklist<base::internal::(anonymous namespace)::PCScanSnapshot::LargeScanArea>::Node"* %498, i64 -1, i32 2, i32 0, i32 0, i32 0, i32 0
  %516 = load atomic i8, i8* %515 monotonic, align 1
  %517 = and i8 %516, 1
  %518 = getelementptr inbounds %"struct.base::internal::RacefulWorklist<base::internal::(anonymous namespace)::PCScanSnapshot::LargeScanArea>::Node", %"struct.base::internal::RacefulWorklist<base::internal::(anonymous namespace)::PCScanSnapshot::LargeScanArea>::Node"* %486, i64 -1, i32 2, i32 0, i32 0, i32 0, i32 0
  store i8 %517, i8* %518, align 1
  br label %519

519:                                              ; preds = %506, %500
  %520 = phi %"struct.base::internal::RacefulWorklist<base::internal::(anonymous namespace)::PCScanSnapshot::LargeScanArea>::Node"* [ %507, %506 ], [ undef, %500 ]
  %521 = phi %"struct.base::internal::RacefulWorklist<base::internal::(anonymous namespace)::PCScanSnapshot::LargeScanArea>::Node"* [ %507, %506 ], [ %486, %500 ]
  %522 = phi %"struct.base::internal::RacefulWorklist<base::internal::(anonymous namespace)::PCScanSnapshot::LargeScanArea>::Node"* [ %508, %506 ], [ %498, %500 ]
  %523 = icmp ult i64 %503, 32
  br i1 %523, label %552, label %524

524:                                              ; preds = %519, %524
  %525 = phi %"struct.base::internal::RacefulWorklist<base::internal::(anonymous namespace)::PCScanSnapshot::LargeScanArea>::Node"* [ %539, %524 ], [ %521, %519 ]
  %526 = phi %"struct.base::internal::RacefulWorklist<base::internal::(anonymous namespace)::PCScanSnapshot::LargeScanArea>::Node"* [ %540, %524 ], [ %522, %519 ]
  %527 = getelementptr inbounds %"struct.base::internal::RacefulWorklist<base::internal::(anonymous namespace)::PCScanSnapshot::LargeScanArea>::Node", %"struct.base::internal::RacefulWorklist<base::internal::(anonymous namespace)::PCScanSnapshot::LargeScanArea>::Node"* %525, i64 -1
  %528 = getelementptr inbounds %"struct.base::internal::RacefulWorklist<base::internal::(anonymous namespace)::PCScanSnapshot::LargeScanArea>::Node", %"struct.base::internal::RacefulWorklist<base::internal::(anonymous namespace)::PCScanSnapshot::LargeScanArea>::Node"* %526, i64 -1
  %529 = bitcast %"struct.base::internal::RacefulWorklist<base::internal::(anonymous namespace)::PCScanSnapshot::LargeScanArea>::Node"* %527 to i8*
  %530 = bitcast %"struct.base::internal::RacefulWorklist<base::internal::(anonymous namespace)::PCScanSnapshot::LargeScanArea>::Node"* %528 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %529, i8* align 8 %530, i64 24, i1 false) #17
  %531 = getelementptr inbounds %"struct.base::internal::RacefulWorklist<base::internal::(anonymous namespace)::PCScanSnapshot::LargeScanArea>::Node", %"struct.base::internal::RacefulWorklist<base::internal::(anonymous namespace)::PCScanSnapshot::LargeScanArea>::Node"* %526, i64 -1, i32 1, i32 0, i32 0, i32 0, i32 0
  %532 = load atomic i8, i8* %531 monotonic, align 1
  %533 = and i8 %532, 1
  %534 = getelementptr inbounds %"struct.base::internal::RacefulWorklist<base::internal::(anonymous namespace)::PCScanSnapshot::LargeScanArea>::Node", %"struct.base::internal::RacefulWorklist<base::internal::(anonymous namespace)::PCScanSnapshot::LargeScanArea>::Node"* %525, i64 -1, i32 1, i32 0, i32 0, i32 0, i32 0
  store i8 %533, i8* %534, align 1
  %535 = getelementptr inbounds %"struct.base::internal::RacefulWorklist<base::internal::(anonymous namespace)::PCScanSnapshot::LargeScanArea>::Node", %"struct.base::internal::RacefulWorklist<base::internal::(anonymous namespace)::PCScanSnapshot::LargeScanArea>::Node"* %526, i64 -1, i32 2, i32 0, i32 0, i32 0, i32 0
  %536 = load atomic i8, i8* %535 monotonic, align 1
  %537 = and i8 %536, 1
  %538 = getelementptr inbounds %"struct.base::internal::RacefulWorklist<base::internal::(anonymous namespace)::PCScanSnapshot::LargeScanArea>::Node", %"struct.base::internal::RacefulWorklist<base::internal::(anonymous namespace)::PCScanSnapshot::LargeScanArea>::Node"* %525, i64 -1, i32 2, i32 0, i32 0, i32 0, i32 0
  store i8 %537, i8* %538, align 1
  %539 = getelementptr inbounds %"struct.base::internal::RacefulWorklist<base::internal::(anonymous namespace)::PCScanSnapshot::LargeScanArea>::Node", %"struct.base::internal::RacefulWorklist<base::internal::(anonymous namespace)::PCScanSnapshot::LargeScanArea>::Node"* %525, i64 -2
  %540 = getelementptr inbounds %"struct.base::internal::RacefulWorklist<base::internal::(anonymous namespace)::PCScanSnapshot::LargeScanArea>::Node", %"struct.base::internal::RacefulWorklist<base::internal::(anonymous namespace)::PCScanSnapshot::LargeScanArea>::Node"* %526, i64 -2
  %541 = bitcast %"struct.base::internal::RacefulWorklist<base::internal::(anonymous namespace)::PCScanSnapshot::LargeScanArea>::Node"* %539 to i8*
  %542 = bitcast %"struct.base::internal::RacefulWorklist<base::internal::(anonymous namespace)::PCScanSnapshot::LargeScanArea>::Node"* %540 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %541, i8* align 8 %542, i64 24, i1 false) #17
  %543 = getelementptr inbounds %"struct.base::internal::RacefulWorklist<base::internal::(anonymous namespace)::PCScanSnapshot::LargeScanArea>::Node", %"struct.base::internal::RacefulWorklist<base::internal::(anonymous namespace)::PCScanSnapshot::LargeScanArea>::Node"* %526, i64 -2, i32 1, i32 0, i32 0, i32 0, i32 0
  %544 = load atomic i8, i8* %543 monotonic, align 1
  %545 = and i8 %544, 1
  %546 = getelementptr inbounds %"struct.base::internal::RacefulWorklist<base::internal::(anonymous namespace)::PCScanSnapshot::LargeScanArea>::Node", %"struct.base::internal::RacefulWorklist<base::internal::(anonymous namespace)::PCScanSnapshot::LargeScanArea>::Node"* %525, i64 -2, i32 1, i32 0, i32 0, i32 0, i32 0
  store i8 %545, i8* %546, align 1
  %547 = getelementptr inbounds %"struct.base::internal::RacefulWorklist<base::internal::(anonymous namespace)::PCScanSnapshot::LargeScanArea>::Node", %"struct.base::internal::RacefulWorklist<base::internal::(anonymous namespace)::PCScanSnapshot::LargeScanArea>::Node"* %526, i64 -2, i32 2, i32 0, i32 0, i32 0, i32 0
  %548 = load atomic i8, i8* %547 monotonic, align 1
  %549 = and i8 %548, 1
  %550 = getelementptr inbounds %"struct.base::internal::RacefulWorklist<base::internal::(anonymous namespace)::PCScanSnapshot::LargeScanArea>::Node", %"struct.base::internal::RacefulWorklist<base::internal::(anonymous namespace)::PCScanSnapshot::LargeScanArea>::Node"* %525, i64 -2, i32 2, i32 0, i32 0, i32 0, i32 0
  store i8 %549, i8* %550, align 1
  %551 = icmp eq %"struct.base::internal::RacefulWorklist<base::internal::(anonymous namespace)::PCScanSnapshot::LargeScanArea>::Node"* %540, %496
  br i1 %551, label %552, label %524

552:                                              ; preds = %524, %519
  %553 = phi %"struct.base::internal::RacefulWorklist<base::internal::(anonymous namespace)::PCScanSnapshot::LargeScanArea>::Node"* [ %520, %519 ], [ %539, %524 ]
  %554 = load i64, i64* %28, align 8
  br label %555

555:                                              ; preds = %483, %552
  %556 = phi %"struct.base::internal::RacefulWorklist<base::internal::(anonymous namespace)::PCScanSnapshot::LargeScanArea>::Node"* [ %553, %552 ], [ %486, %483 ]
  %557 = phi i64 [ %554, %552 ], [ %497, %483 ]
  %558 = ptrtoint %"struct.base::internal::RacefulWorklist<base::internal::(anonymous namespace)::PCScanSnapshot::LargeScanArea>::Node"* %556 to i64
  store i64 %558, i64* %28, align 8
  store i64 %495, i64* %27, align 8
  store i64 %488, i64* %29, align 8
  %559 = icmp eq i64 %557, 0
  br i1 %559, label %889, label %560

560:                                              ; preds = %555
  %561 = inttoptr i64 %557 to %"struct.base::internal::RacefulWorklist<base::internal::(anonymous namespace)::PCScanSnapshot::LargeScanArea>::Node"*
  call fastcc void @_ZNSt3__116allocator_traitsIN4base8internal17MetadataAllocatorINS2_15RacefulWorklistINS2_12_GLOBAL__N_114PCScanSnapshot13LargeScanAreaEE4NodeEEEE10deallocateERSA_PS9_m(%"struct.base::internal::RacefulWorklist<base::internal::(anonymous namespace)::PCScanSnapshot::LargeScanArea>::Node"* nonnull %561) #17
  br label %889

562:                                              ; preds = %166
  %563 = load %"struct.base::internal::RacefulWorklist<base::internal::(anonymous namespace)::PCScanSnapshot::ScanArea>::Node"*, %"struct.base::internal::RacefulWorklist<base::internal::(anonymous namespace)::PCScanSnapshot::ScanArea>::Node"** %17, align 8
  %564 = load %"struct.base::internal::RacefulWorklist<base::internal::(anonymous namespace)::PCScanSnapshot::ScanArea>::Node"*, %"struct.base::internal::RacefulWorklist<base::internal::(anonymous namespace)::PCScanSnapshot::ScanArea>::Node"** %18, align 8
  %565 = icmp ult %"struct.base::internal::RacefulWorklist<base::internal::(anonymous namespace)::PCScanSnapshot::ScanArea>::Node"* %563, %564
  %566 = ptrtoint %"struct.base::internal::RacefulWorklist<base::internal::(anonymous namespace)::PCScanSnapshot::ScanArea>::Node"* %564 to i64
  br i1 %565, label %567, label %574

567:                                              ; preds = %562
  %568 = getelementptr inbounds %"struct.base::internal::RacefulWorklist<base::internal::(anonymous namespace)::PCScanSnapshot::ScanArea>::Node", %"struct.base::internal::RacefulWorklist<base::internal::(anonymous namespace)::PCScanSnapshot::ScanArea>::Node"* %563, i64 0, i32 0, i32 0
  store i64* %174, i64** %568, align 8
  %569 = getelementptr inbounds %"struct.base::internal::RacefulWorklist<base::internal::(anonymous namespace)::PCScanSnapshot::ScanArea>::Node", %"struct.base::internal::RacefulWorklist<base::internal::(anonymous namespace)::PCScanSnapshot::ScanArea>::Node"* %563, i64 0, i32 0, i32 1
  store i64* %195, i64** %569, align 8
  %570 = getelementptr inbounds %"struct.base::internal::RacefulWorklist<base::internal::(anonymous namespace)::PCScanSnapshot::ScanArea>::Node", %"struct.base::internal::RacefulWorklist<base::internal::(anonymous namespace)::PCScanSnapshot::ScanArea>::Node"* %563, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %570, align 1
  %571 = getelementptr inbounds %"struct.base::internal::RacefulWorklist<base::internal::(anonymous namespace)::PCScanSnapshot::ScanArea>::Node", %"struct.base::internal::RacefulWorklist<base::internal::(anonymous namespace)::PCScanSnapshot::ScanArea>::Node"* %563, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %571, align 1
  %572 = getelementptr inbounds %"struct.base::internal::RacefulWorklist<base::internal::(anonymous namespace)::PCScanSnapshot::ScanArea>::Node", %"struct.base::internal::RacefulWorklist<base::internal::(anonymous namespace)::PCScanSnapshot::ScanArea>::Node"* %563, i64 1
  %573 = ptrtoint %"struct.base::internal::RacefulWorklist<base::internal::(anonymous namespace)::PCScanSnapshot::ScanArea>::Node"* %572 to i64
  store i64 %573, i64* %19, align 8
  br label %889

574:                                              ; preds = %562
  %575 = ptrtoint %"struct.base::internal::RacefulWorklist<base::internal::(anonymous namespace)::PCScanSnapshot::ScanArea>::Node"* %563 to i64
  %576 = load i64, i64* %20, align 8
  %577 = sub i64 %575, %576
  %578 = sdiv exact i64 %577, 24
  %579 = add nsw i64 %578, 1
  %580 = icmp ugt i64 %579, 768614336404564650
  br i1 %580, label %581, label %583

581:                                              ; preds = %574
  %582 = bitcast %"class.base::internal::RacefulWorklist"* %16 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %582) #18
  unreachable

583:                                              ; preds = %574
  %584 = sub i64 %566, %576
  %585 = sdiv exact i64 %584, 24
  %586 = icmp ult i64 %585, 384307168202282325
  br i1 %586, label %587, label %592

587:                                              ; preds = %583
  %588 = shl nsw i64 %585, 1
  %589 = icmp ult i64 %588, %579
  %590 = select i1 %589, i64 %579, i64 %588
  %591 = icmp eq i64 %590, 0
  br i1 %591, label %847, label %592

592:                                              ; preds = %587, %583
  %593 = phi i64 [ %590, %587 ], [ 768614336404564650, %583 ]
  %594 = call dereferenceable(5408) %"struct.base::PartitionRoot"* @_ZN4base8internal23PCScanMetadataAllocatorEv() #17
  %595 = mul i64 %593, 24
  %596 = call i64 @llvm.ctlz.i64(i64 %595, i1 false) #17, !range !4
  %597 = sub nuw nsw i64 64, %596
  %598 = and i64 %597, 255
  %599 = getelementptr inbounds [65 x i8], [65 x i8]* @_ZN4base12_GLOBAL__N_116kOrderIndexShiftE, i64 0, i64 %598
  %600 = load i8, i8* %599, align 1
  %601 = zext i8 %600 to i64
  %602 = lshr i64 %595, %601
  %603 = and i64 %602, 7
  %604 = getelementptr inbounds [65 x i64], [65 x i64]* @_ZN4base12_GLOBAL__N_118kOrderSubIndexMaskE, i64 0, i64 %598
  %605 = load i64, i64* %604, align 8
  %606 = and i64 %605, %595
  %607 = shl nuw nsw i64 %598, 3
  %608 = or i64 %603, %607
  %609 = icmp ne i64 %606, 0
  %610 = zext i1 %609 to i64
  %611 = add nuw nsw i64 %608, %610
  %612 = getelementptr inbounds { [128 x i64], [521 x i16] }, { [128 x i64], [521 x i16] }* @_ZZN4base8internal17BucketIndexLookup8GetIndexEmE6lookup, i64 0, i32 1, i64 %611
  %613 = load i16, i16* %612, align 2
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %6) #17
  store i8 0, i8* %6, align 1
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %22) #17
  store i64 -6148914691236517206, i64* %7, align 8
  %614 = getelementptr inbounds %"struct.base::PartitionRoot", %"struct.base::PartitionRoot"* %594, i64 0, i32 0
  %615 = load i8, i8* %614, align 8
  %616 = icmp eq i8 %615, 2
  br i1 %616, label %617, label %621

617:                                              ; preds = %592
  %618 = load atomic i8, i8* getelementptr inbounds (%"class.base::internal::PCScan", %"class.base::internal::PCScan"* @_ZN4base8internal6PCScan9instance_E, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0) acquire, align 8
  %619 = icmp eq i8 %618, 2
  br i1 %619, label %620, label %621, !prof !7

620:                                              ; preds = %617
  call void @_ZN4base8internal6PCScan8JoinScanEv() #17
  br label %621

621:                                              ; preds = %620, %617, %592
  %622 = getelementptr inbounds %"struct.base::PartitionRoot", %"struct.base::PartitionRoot"* %594, i64 0, i32 2
  %623 = load i8, i8* %622, align 2, !range !5
  %624 = icmp eq i8 %623, 0
  br i1 %624, label %773, label %625, !prof !19

625:                                              ; preds = %621
  %626 = load i32, i32* @_ZN4base8internal18g_thread_cache_keyE, align 4
  %627 = call i8* @pthread_getspecific(i32 %626) #17
  %628 = bitcast i8* %627 to %"class.base::internal::ThreadCache"*
  %629 = icmp ugt i8* %627, inttoptr (i64 1 to i8*)
  br i1 %629, label %630, label %700, !prof !6

630:                                              ; preds = %625
  %631 = zext i16 %613 to i64
  %632 = getelementptr inbounds %"class.base::internal::ThreadCache", %"class.base::internal::ThreadCache"* %628, i64 0, i32 3, i32 12, i64 %631
  %633 = load i64, i64* %632, align 8
  %634 = add i64 %633, 1
  store i64 %634, i64* %632, align 8
  %635 = getelementptr inbounds i8, i8* %627, i64 1440
  %636 = bitcast i8* %635 to i64*
  %637 = load i64, i64* %636, align 8
  %638 = add i64 %637, 1
  store i64 %638, i64* %636, align 8
  %639 = load i16, i16* @_ZN4base8internal11ThreadCache28largest_active_bucket_index_E, align 2
  %640 = icmp ult i16 %639, %613
  br i1 %640, label %641, label %650, !prof !7

641:                                              ; preds = %630
  %642 = getelementptr inbounds i8, i8* %627, i64 1472
  %643 = bitcast i8* %642 to i64*
  %644 = load i64, i64* %643, align 8
  %645 = add i64 %644, 1
  store i64 %645, i64* %643, align 8
  %646 = getelementptr inbounds i8, i8* %627, i64 1456
  %647 = bitcast i8* %646 to i64*
  %648 = load i64, i64* %647, align 8
  %649 = add i64 %648, 1
  store i64 %649, i64* %647, align 8
  br label %707

650:                                              ; preds = %630
  %651 = getelementptr inbounds %"class.base::internal::ThreadCache", %"class.base::internal::ThreadCache"* %628, i64 0, i32 0, i64 %631, i32 0
  %652 = load %"class.base::internal::PartitionFreelistEntry"*, %"class.base::internal::PartitionFreelistEntry"** %651, align 8
  %653 = icmp eq %"class.base::internal::PartitionFreelistEntry"* %652, null
  br i1 %653, label %659, label %654, !prof !7

654:                                              ; preds = %650
  %655 = getelementptr inbounds i8, i8* %627, i64 1448
  %656 = bitcast i8* %655 to i64*
  %657 = load i64, i64* %656, align 8
  %658 = add i64 %657, 1
  store i64 %658, i64* %656, align 8
  br label %667

659:                                              ; preds = %650
  %660 = getelementptr inbounds i8, i8* %627, i64 1456
  %661 = bitcast i8* %660 to <2 x i64>*
  %662 = load <2 x i64>, <2 x i64>* %661, align 8
  %663 = add <2 x i64> %662, <i64 1, i64 1>
  %664 = bitcast i8* %660 to <2 x i64>*
  store <2 x i64> %663, <2 x i64>* %664, align 8
  call void @_ZN4base8internal11ThreadCache10FillBucketEm(%"class.base::internal::ThreadCache"* %628, i64 %631) #17
  %665 = load %"class.base::internal::PartitionFreelistEntry"*, %"class.base::internal::PartitionFreelistEntry"** %651, align 8
  %666 = icmp eq %"class.base::internal::PartitionFreelistEntry"* %665, null
  br i1 %666, label %707, label %667, !prof !7

667:                                              ; preds = %659, %654
  %668 = phi %"class.base::internal::PartitionFreelistEntry"* [ %665, %659 ], [ %652, %654 ]
  %669 = getelementptr inbounds %"class.base::internal::PartitionFreelistEntry", %"class.base::internal::PartitionFreelistEntry"* %668, i64 0, i32 0
  %670 = load %"struct.base::internal::EncodedPartitionFreelistEntry"*, %"struct.base::internal::EncodedPartitionFreelistEntry"** %669, align 8
  %671 = icmp eq %"struct.base::internal::EncodedPartitionFreelistEntry"* %670, null
  %672 = ptrtoint %"struct.base::internal::EncodedPartitionFreelistEntry"* %670 to i64
  br i1 %671, label %673, label %675

673:                                              ; preds = %667
  %674 = call i64 @llvm.bswap.i64(i64 %672) #17
  br label %684

675:                                              ; preds = %667
  %676 = xor i64 %672, -1
  %677 = getelementptr inbounds %"class.base::internal::PartitionFreelistEntry", %"class.base::internal::PartitionFreelistEntry"* %668, i64 0, i32 1
  %678 = load i64, i64* %677, align 8
  %679 = icmp eq i64 %678, %676
  br i1 %679, label %681, label %680, !prof !6

680:                                              ; preds = %675
  call fastcc void @_ZN4base8internal12_GLOBAL__N_126FreelistCorruptionDetectedEv() #18
  unreachable

681:                                              ; preds = %675
  %682 = call i64 @llvm.bswap.i64(i64 %672) #17
  %683 = inttoptr i64 %682 to i8*
  call void @llvm.prefetch(i8* nonnull %683, i32 0, i32 3, i32 1) #17
  br label %684

684:                                              ; preds = %681, %673
  %685 = phi i64 [ %674, %673 ], [ %682, %681 ]
  %686 = inttoptr i64 %685 to %"class.base::internal::PartitionFreelistEntry"*
  %687 = getelementptr inbounds %"class.base::internal::ThreadCache", %"class.base::internal::ThreadCache"* %628, i64 0, i32 0, i64 %631, i32 1
  %688 = load i8, i8* %687, align 8
  %689 = add i8 %688, -1
  store i8 %689, i8* %687, align 8
  store %"class.base::internal::PartitionFreelistEntry"* %686, %"class.base::internal::PartitionFreelistEntry"** %651, align 8
  %690 = getelementptr inbounds %"class.base::internal::ThreadCache", %"class.base::internal::ThreadCache"* %628, i64 0, i32 0, i64 %631, i32 3
  %691 = load i16, i16* %690, align 2
  %692 = zext i16 %691 to i64
  store i64 %692, i64* %7, align 8
  %693 = load i16, i16* %690, align 2
  %694 = zext i16 %693 to i64
  %695 = getelementptr inbounds i8, i8* %627, i64 1424
  %696 = bitcast i8* %695 to i64*
  %697 = load i64, i64* %696, align 8
  %698 = sub i64 %697, %694
  store i64 %698, i64* %696, align 8
  %699 = bitcast %"class.base::internal::PartitionFreelistEntry"* %668 to i8*
  br label %702

700:                                              ; preds = %625
  %701 = call i8* @_ZN4base13PartitionRootILb1EE28MaybeInitThreadCacheAndAllocEtPm(%"struct.base::PartitionRoot"* %594, i16 zeroext %613, i64* nonnull %7) #17
  br label %702

702:                                              ; preds = %700, %684
  %703 = phi i8* [ %701, %700 ], [ %699, %684 ]
  %704 = icmp eq i8* %703, null
  br i1 %704, label %705, label %842, !prof !7

705:                                              ; preds = %702
  %706 = zext i16 %613 to i64
  br label %707

707:                                              ; preds = %705, %659, %641
  %708 = phi i64 [ %706, %705 ], [ %631, %659 ], [ %631, %641 ]
  %709 = getelementptr inbounds %"struct.base::PartitionRoot", %"struct.base::PartitionRoot"* %594, i64 0, i32 10, i64 %708
  %710 = getelementptr inbounds %"struct.base::PartitionRoot", %"struct.base::PartitionRoot"* %594, i64 0, i32 8
  %711 = getelementptr inbounds %"class.base::internal::MaybeSpinLock", %"class.base::internal::MaybeSpinLock"* %710, i64 0, i32 0
  %712 = getelementptr inbounds %"class.base::internal::MaybeSpinLock", %"class.base::internal::MaybeSpinLock"* %710, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  br label %713

713:                                              ; preds = %725, %707
  %714 = phi i32 [ 0, %707 ], [ %726, %725 ]
  %715 = phi i32 [ 1, %707 ], [ %729, %725 ]
  %716 = load atomic i32, i32* %712 monotonic, align 4
  %717 = icmp eq i32 %716, 0
  br i1 %717, label %718, label %721, !prof !9

718:                                              ; preds = %713
  %719 = cmpxchg weak i32* %712, i32 0, i32 1 acquire monotonic
  %720 = extractvalue { i32, i1 } %719, 1
  br i1 %720, label %736, label %721, !prof !6

721:                                              ; preds = %718, %713
  %722 = icmp sgt i32 %715, 0
  br i1 %722, label %731, label %725

723:                                              ; preds = %731
  %724 = add i32 %715, %714
  br label %725

725:                                              ; preds = %723, %721
  %726 = phi i32 [ %714, %721 ], [ %724, %723 ]
  %727 = shl i32 %715, 1
  %728 = icmp slt i32 %727, 64
  %729 = select i1 %728, i32 %727, i32 64
  %730 = icmp slt i32 %726, 1000
  br i1 %730, label %713, label %735

731:                                              ; preds = %721, %731
  %732 = phi i32 [ %733, %731 ], [ 0, %721 ]
  call void asm sideeffect "pause", "~{dirflag},~{fpsr},~{flags}"() #17, !srcloc !10
  %733 = add nuw nsw i32 %732, 1
  %734 = icmp eq i32 %733, %715
  br i1 %734, label %723, label %731

735:                                              ; preds = %725
  call void @_ZN4base8internal13SpinningMutex8LockSlowEv(%"class.base::internal::SpinningMutex"* %711) #17
  br label %736

736:                                              ; preds = %718, %735
  %737 = getelementptr inbounds %"struct.base::internal::PartitionBucket", %"struct.base::internal::PartitionBucket"* %709, i64 0, i32 0
  %738 = load %"struct.base::internal::SlotSpanMetadata"*, %"struct.base::internal::SlotSpanMetadata"** %737, align 8
  %739 = bitcast %"struct.base::internal::SlotSpanMetadata"* %738 to i8**
  %740 = load i8*, i8** %739, align 1
  %741 = icmp eq i8* %740, null
  br i1 %741, label %766, label %742, !prof !7

742:                                              ; preds = %736
  %743 = getelementptr inbounds %"struct.base::internal::SlotSpanMetadata", %"struct.base::internal::SlotSpanMetadata"* %738, i64 0, i32 0
  store i8 0, i8* %6, align 1
  %744 = bitcast i8* %740 to %"struct.base::internal::EncodedPartitionFreelistEntry"**
  %745 = load %"struct.base::internal::EncodedPartitionFreelistEntry"*, %"struct.base::internal::EncodedPartitionFreelistEntry"** %744, align 8
  %746 = icmp eq %"struct.base::internal::EncodedPartitionFreelistEntry"* %745, null
  %747 = ptrtoint %"struct.base::internal::EncodedPartitionFreelistEntry"* %745 to i64
  br i1 %746, label %748, label %750

748:                                              ; preds = %742
  %749 = call i64 @llvm.bswap.i64(i64 %747) #17
  br label %760

750:                                              ; preds = %742
  %751 = xor i64 %747, -1
  %752 = getelementptr inbounds i8, i8* %740, i64 8
  %753 = bitcast i8* %752 to i64*
  %754 = load i64, i64* %753, align 8
  %755 = icmp eq i64 %754, %751
  br i1 %755, label %757, label %756, !prof !6

756:                                              ; preds = %750
  call fastcc void @_ZN4base8internal12_GLOBAL__N_126FreelistCorruptionDetectedEv() #18
  unreachable

757:                                              ; preds = %750
  %758 = call i64 @llvm.bswap.i64(i64 %747) #17
  %759 = inttoptr i64 %758 to i8*
  call void @llvm.prefetch(i8* nonnull %759, i32 0, i32 3, i32 1) #17
  br label %760

760:                                              ; preds = %757, %748
  %761 = phi i64 [ %749, %748 ], [ %758, %757 ]
  %762 = inttoptr i64 %761 to %"class.base::internal::PartitionFreelistEntry"*
  store %"class.base::internal::PartitionFreelistEntry"* %762, %"class.base::internal::PartitionFreelistEntry"** %743, align 1
  %763 = getelementptr inbounds %"struct.base::internal::SlotSpanMetadata", %"struct.base::internal::SlotSpanMetadata"* %738, i64 0, i32 3
  %764 = load i16, i16* %763, align 1
  %765 = add i16 %764, 1
  store i16 %765, i16* %763, align 1
  br label %768

766:                                              ; preds = %736
  %767 = call i8* @_ZN4base8internal15PartitionBucketILb1EE13SlowPathAllocEPNS_13PartitionRootILb1EEEimmPb(%"struct.base::internal::PartitionBucket"* %709, %"struct.base::PartitionRoot"* %594, i32 0, i64 %595, i64 16384, i8* nonnull %6) #17
  br label %768

768:                                              ; preds = %766, %760
  %769 = phi i8* [ %740, %760 ], [ %767, %766 ]
  %770 = atomicrmw xchg i32* %712, i32 0 release
  %771 = icmp eq i32 %770, 2
  br i1 %771, label %772, label %839, !prof !7

772:                                              ; preds = %768
  call void @_ZN4base8internal13SpinningMutex9FutexWakeEv(%"class.base::internal::SpinningMutex"* %711) #17
  br label %839

773:                                              ; preds = %621
  %774 = zext i16 %613 to i64
  %775 = getelementptr inbounds %"struct.base::PartitionRoot", %"struct.base::PartitionRoot"* %594, i64 0, i32 10, i64 %774
  %776 = getelementptr inbounds %"struct.base::PartitionRoot", %"struct.base::PartitionRoot"* %594, i64 0, i32 8
  %777 = getelementptr inbounds %"class.base::internal::MaybeSpinLock", %"class.base::internal::MaybeSpinLock"* %776, i64 0, i32 0
  %778 = getelementptr inbounds %"class.base::internal::MaybeSpinLock", %"class.base::internal::MaybeSpinLock"* %776, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  br label %779

779:                                              ; preds = %791, %773
  %780 = phi i32 [ 0, %773 ], [ %792, %791 ]
  %781 = phi i32 [ 1, %773 ], [ %795, %791 ]
  %782 = load atomic i32, i32* %778 monotonic, align 4
  %783 = icmp eq i32 %782, 0
  br i1 %783, label %784, label %787, !prof !9

784:                                              ; preds = %779
  %785 = cmpxchg weak i32* %778, i32 0, i32 1 acquire monotonic
  %786 = extractvalue { i32, i1 } %785, 1
  br i1 %786, label %802, label %787, !prof !6

787:                                              ; preds = %784, %779
  %788 = icmp sgt i32 %781, 0
  br i1 %788, label %797, label %791

789:                                              ; preds = %797
  %790 = add i32 %781, %780
  br label %791

791:                                              ; preds = %789, %787
  %792 = phi i32 [ %780, %787 ], [ %790, %789 ]
  %793 = shl i32 %781, 1
  %794 = icmp slt i32 %793, 64
  %795 = select i1 %794, i32 %793, i32 64
  %796 = icmp slt i32 %792, 1000
  br i1 %796, label %779, label %801

797:                                              ; preds = %787, %797
  %798 = phi i32 [ %799, %797 ], [ 0, %787 ]
  call void asm sideeffect "pause", "~{dirflag},~{fpsr},~{flags}"() #17, !srcloc !10
  %799 = add nuw nsw i32 %798, 1
  %800 = icmp eq i32 %799, %781
  br i1 %800, label %789, label %797

801:                                              ; preds = %791
  call void @_ZN4base8internal13SpinningMutex8LockSlowEv(%"class.base::internal::SpinningMutex"* %777) #17
  br label %802

802:                                              ; preds = %784, %801
  %803 = getelementptr inbounds %"struct.base::internal::PartitionBucket", %"struct.base::internal::PartitionBucket"* %775, i64 0, i32 0
  %804 = load %"struct.base::internal::SlotSpanMetadata"*, %"struct.base::internal::SlotSpanMetadata"** %803, align 8
  %805 = bitcast %"struct.base::internal::SlotSpanMetadata"* %804 to i8**
  %806 = load i8*, i8** %805, align 1
  %807 = icmp eq i8* %806, null
  br i1 %807, label %832, label %808, !prof !7

808:                                              ; preds = %802
  %809 = getelementptr inbounds %"struct.base::internal::SlotSpanMetadata", %"struct.base::internal::SlotSpanMetadata"* %804, i64 0, i32 0
  store i8 0, i8* %6, align 1
  %810 = bitcast i8* %806 to %"struct.base::internal::EncodedPartitionFreelistEntry"**
  %811 = load %"struct.base::internal::EncodedPartitionFreelistEntry"*, %"struct.base::internal::EncodedPartitionFreelistEntry"** %810, align 8
  %812 = icmp eq %"struct.base::internal::EncodedPartitionFreelistEntry"* %811, null
  %813 = ptrtoint %"struct.base::internal::EncodedPartitionFreelistEntry"* %811 to i64
  br i1 %812, label %814, label %816

814:                                              ; preds = %808
  %815 = call i64 @llvm.bswap.i64(i64 %813) #17
  br label %826

816:                                              ; preds = %808
  %817 = xor i64 %813, -1
  %818 = getelementptr inbounds i8, i8* %806, i64 8
  %819 = bitcast i8* %818 to i64*
  %820 = load i64, i64* %819, align 8
  %821 = icmp eq i64 %820, %817
  br i1 %821, label %823, label %822, !prof !6

822:                                              ; preds = %816
  call fastcc void @_ZN4base8internal12_GLOBAL__N_126FreelistCorruptionDetectedEv() #18
  unreachable

823:                                              ; preds = %816
  %824 = call i64 @llvm.bswap.i64(i64 %813) #17
  %825 = inttoptr i64 %824 to i8*
  call void @llvm.prefetch(i8* nonnull %825, i32 0, i32 3, i32 1) #17
  br label %826

826:                                              ; preds = %823, %814
  %827 = phi i64 [ %815, %814 ], [ %824, %823 ]
  %828 = inttoptr i64 %827 to %"class.base::internal::PartitionFreelistEntry"*
  store %"class.base::internal::PartitionFreelistEntry"* %828, %"class.base::internal::PartitionFreelistEntry"** %809, align 1
  %829 = getelementptr inbounds %"struct.base::internal::SlotSpanMetadata", %"struct.base::internal::SlotSpanMetadata"* %804, i64 0, i32 3
  %830 = load i16, i16* %829, align 1
  %831 = add i16 %830, 1
  store i16 %831, i16* %829, align 1
  br label %834

832:                                              ; preds = %802
  %833 = call i8* @_ZN4base8internal15PartitionBucketILb1EE13SlowPathAllocEPNS_13PartitionRootILb1EEEimmPb(%"struct.base::internal::PartitionBucket"* %775, %"struct.base::PartitionRoot"* %594, i32 0, i64 %595, i64 16384, i8* nonnull %6) #17
  br label %834

834:                                              ; preds = %832, %826
  %835 = phi i8* [ %806, %826 ], [ %833, %832 ]
  %836 = atomicrmw xchg i32* %778, i32 0 release
  %837 = icmp eq i32 %836, 2
  br i1 %837, label %838, label %839, !prof !7

838:                                              ; preds = %834
  call void @_ZN4base8internal13SpinningMutex9FutexWakeEv(%"class.base::internal::SpinningMutex"* %777) #17
  br label %839

839:                                              ; preds = %838, %834, %772, %768
  %840 = phi i8* [ %769, %768 ], [ %769, %772 ], [ %835, %834 ], [ %835, %838 ]
  %841 = icmp eq i8* %840, null
  br i1 %841, label %844, label %842, !prof !7

842:                                              ; preds = %839, %702
  %843 = phi i8* [ %840, %839 ], [ %703, %702 ]
  br label %844

844:                                              ; preds = %842, %839
  %845 = phi i8* [ null, %839 ], [ %843, %842 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %22) #17
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %6) #17
  %846 = bitcast i8* %845 to %"struct.base::internal::RacefulWorklist<base::internal::(anonymous namespace)::PCScanSnapshot::ScanArea>::Node"*
  br label %847

847:                                              ; preds = %844, %587
  %848 = phi i64 [ %593, %844 ], [ 0, %587 ]
  %849 = phi %"struct.base::internal::RacefulWorklist<base::internal::(anonymous namespace)::PCScanSnapshot::ScanArea>::Node"* [ %846, %844 ], [ null, %587 ]
  %850 = getelementptr inbounds %"struct.base::internal::RacefulWorklist<base::internal::(anonymous namespace)::PCScanSnapshot::ScanArea>::Node", %"struct.base::internal::RacefulWorklist<base::internal::(anonymous namespace)::PCScanSnapshot::ScanArea>::Node"* %849, i64 %578
  %851 = getelementptr inbounds %"struct.base::internal::RacefulWorklist<base::internal::(anonymous namespace)::PCScanSnapshot::ScanArea>::Node", %"struct.base::internal::RacefulWorklist<base::internal::(anonymous namespace)::PCScanSnapshot::ScanArea>::Node"* %849, i64 %848
  %852 = ptrtoint %"struct.base::internal::RacefulWorklist<base::internal::(anonymous namespace)::PCScanSnapshot::ScanArea>::Node"* %851 to i64
  %853 = getelementptr inbounds %"struct.base::internal::RacefulWorklist<base::internal::(anonymous namespace)::PCScanSnapshot::ScanArea>::Node", %"struct.base::internal::RacefulWorklist<base::internal::(anonymous namespace)::PCScanSnapshot::ScanArea>::Node"* %850, i64 0, i32 0, i32 0
  store i64* %174, i64** %853, align 8
  %854 = getelementptr inbounds %"struct.base::internal::RacefulWorklist<base::internal::(anonymous namespace)::PCScanSnapshot::ScanArea>::Node", %"struct.base::internal::RacefulWorklist<base::internal::(anonymous namespace)::PCScanSnapshot::ScanArea>::Node"* %849, i64 %578, i32 0, i32 1
  store i64* %195, i64** %854, align 8
  %855 = getelementptr inbounds %"struct.base::internal::RacefulWorklist<base::internal::(anonymous namespace)::PCScanSnapshot::ScanArea>::Node", %"struct.base::internal::RacefulWorklist<base::internal::(anonymous namespace)::PCScanSnapshot::ScanArea>::Node"* %849, i64 %578, i32 1, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %855, align 1
  %856 = getelementptr inbounds %"struct.base::internal::RacefulWorklist<base::internal::(anonymous namespace)::PCScanSnapshot::ScanArea>::Node", %"struct.base::internal::RacefulWorklist<base::internal::(anonymous namespace)::PCScanSnapshot::ScanArea>::Node"* %849, i64 %578, i32 2, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %856, align 1
  %857 = getelementptr inbounds %"struct.base::internal::RacefulWorklist<base::internal::(anonymous namespace)::PCScanSnapshot::ScanArea>::Node", %"struct.base::internal::RacefulWorklist<base::internal::(anonymous namespace)::PCScanSnapshot::ScanArea>::Node"* %850, i64 1
  %858 = ptrtoint %"struct.base::internal::RacefulWorklist<base::internal::(anonymous namespace)::PCScanSnapshot::ScanArea>::Node"* %857 to i64
  %859 = load %"struct.base::internal::RacefulWorklist<base::internal::(anonymous namespace)::PCScanSnapshot::ScanArea>::Node"*, %"struct.base::internal::RacefulWorklist<base::internal::(anonymous namespace)::PCScanSnapshot::ScanArea>::Node"** %23, align 8
  %860 = load %"struct.base::internal::RacefulWorklist<base::internal::(anonymous namespace)::PCScanSnapshot::ScanArea>::Node"*, %"struct.base::internal::RacefulWorklist<base::internal::(anonymous namespace)::PCScanSnapshot::ScanArea>::Node"** %17, align 8
  %861 = icmp eq %"struct.base::internal::RacefulWorklist<base::internal::(anonymous namespace)::PCScanSnapshot::ScanArea>::Node"* %860, %859
  br i1 %861, label %862, label %864

862:                                              ; preds = %847
  %863 = ptrtoint %"struct.base::internal::RacefulWorklist<base::internal::(anonymous namespace)::PCScanSnapshot::ScanArea>::Node"* %859 to i64
  br label %882

864:                                              ; preds = %847, %864
  %865 = phi %"struct.base::internal::RacefulWorklist<base::internal::(anonymous namespace)::PCScanSnapshot::ScanArea>::Node"* [ %867, %864 ], [ %850, %847 ]
  %866 = phi %"struct.base::internal::RacefulWorklist<base::internal::(anonymous namespace)::PCScanSnapshot::ScanArea>::Node"* [ %868, %864 ], [ %860, %847 ]
  %867 = getelementptr inbounds %"struct.base::internal::RacefulWorklist<base::internal::(anonymous namespace)::PCScanSnapshot::ScanArea>::Node", %"struct.base::internal::RacefulWorklist<base::internal::(anonymous namespace)::PCScanSnapshot::ScanArea>::Node"* %865, i64 -1
  %868 = getelementptr inbounds %"struct.base::internal::RacefulWorklist<base::internal::(anonymous namespace)::PCScanSnapshot::ScanArea>::Node", %"struct.base::internal::RacefulWorklist<base::internal::(anonymous namespace)::PCScanSnapshot::ScanArea>::Node"* %866, i64 -1
  %869 = bitcast %"struct.base::internal::RacefulWorklist<base::internal::(anonymous namespace)::PCScanSnapshot::ScanArea>::Node"* %867 to i8*
  %870 = bitcast %"struct.base::internal::RacefulWorklist<base::internal::(anonymous namespace)::PCScanSnapshot::ScanArea>::Node"* %868 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %869, i8* align 8 %870, i64 16, i1 false) #17
  %871 = getelementptr inbounds %"struct.base::internal::RacefulWorklist<base::internal::(anonymous namespace)::PCScanSnapshot::ScanArea>::Node", %"struct.base::internal::RacefulWorklist<base::internal::(anonymous namespace)::PCScanSnapshot::ScanArea>::Node"* %866, i64 -1, i32 1, i32 0, i32 0, i32 0, i32 0
  %872 = load atomic i8, i8* %871 monotonic, align 1
  %873 = and i8 %872, 1
  %874 = getelementptr inbounds %"struct.base::internal::RacefulWorklist<base::internal::(anonymous namespace)::PCScanSnapshot::ScanArea>::Node", %"struct.base::internal::RacefulWorklist<base::internal::(anonymous namespace)::PCScanSnapshot::ScanArea>::Node"* %865, i64 -1, i32 1, i32 0, i32 0, i32 0, i32 0
  store i8 %873, i8* %874, align 1
  %875 = getelementptr inbounds %"struct.base::internal::RacefulWorklist<base::internal::(anonymous namespace)::PCScanSnapshot::ScanArea>::Node", %"struct.base::internal::RacefulWorklist<base::internal::(anonymous namespace)::PCScanSnapshot::ScanArea>::Node"* %866, i64 -1, i32 2, i32 0, i32 0, i32 0, i32 0
  %876 = load atomic i8, i8* %875 monotonic, align 1
  %877 = and i8 %876, 1
  %878 = getelementptr inbounds %"struct.base::internal::RacefulWorklist<base::internal::(anonymous namespace)::PCScanSnapshot::ScanArea>::Node", %"struct.base::internal::RacefulWorklist<base::internal::(anonymous namespace)::PCScanSnapshot::ScanArea>::Node"* %865, i64 -1, i32 2, i32 0, i32 0, i32 0, i32 0
  store i8 %877, i8* %878, align 1
  %879 = icmp eq %"struct.base::internal::RacefulWorklist<base::internal::(anonymous namespace)::PCScanSnapshot::ScanArea>::Node"* %868, %859
  br i1 %879, label %880, label %864

880:                                              ; preds = %864
  %881 = load i64, i64* %20, align 8
  br label %882

882:                                              ; preds = %880, %862
  %883 = phi %"struct.base::internal::RacefulWorklist<base::internal::(anonymous namespace)::PCScanSnapshot::ScanArea>::Node"* [ %850, %862 ], [ %867, %880 ]
  %884 = phi i64 [ %863, %862 ], [ %881, %880 ]
  %885 = ptrtoint %"struct.base::internal::RacefulWorklist<base::internal::(anonymous namespace)::PCScanSnapshot::ScanArea>::Node"* %883 to i64
  store i64 %885, i64* %20, align 8
  store i64 %858, i64* %19, align 8
  store i64 %852, i64* %21, align 8
  %886 = icmp eq i64 %884, 0
  br i1 %886, label %889, label %887

887:                                              ; preds = %882
  %888 = inttoptr i64 %884 to %"struct.base::internal::RacefulWorklist<base::internal::(anonymous namespace)::PCScanSnapshot::ScanArea>::Node"*
  call fastcc void @_ZNSt3__116allocator_traitsIN4base8internal17MetadataAllocatorINS2_15RacefulWorklistINS2_12_GLOBAL__N_114PCScanSnapshot8ScanAreaEE4NodeEEEE10deallocateERSA_PS9_m(%"struct.base::internal::RacefulWorklist<base::internal::(anonymous namespace)::PCScanSnapshot::ScanArea>::Node"* nonnull %888) #17
  br label %889

889:                                              ; preds = %887, %882, %567, %560, %555, %202
  %890 = add i64 %148, 1
  br label %891

891:                                              ; preds = %161, %889
  %892 = phi i64 [ %890, %889 ], [ %148, %161 ]
  %893 = getelementptr inbounds %"struct.base::internal::PartitionPage", %"struct.base::internal::PartitionPage"* %150, i64 0, i32 0, i32 1, i64 8
  %894 = bitcast i8* %893 to %"struct.base::internal::PartitionBucket"**
  %895 = load %"struct.base::internal::PartitionBucket"*, %"struct.base::internal::PartitionBucket"** %894, align 1
  %896 = getelementptr inbounds %"struct.base::internal::PartitionBucket", %"struct.base::internal::PartitionBucket"* %895, i64 0, i32 4
  %897 = load i32, i32* %896, align 4
  %898 = and i32 %897, 255
  %899 = add nuw nsw i32 %898, 3
  %900 = lshr i32 %899, 2
  %901 = zext i32 %900 to i64
  %902 = getelementptr inbounds %"struct.base::internal::PartitionPage", %"struct.base::internal::PartitionPage"* %150, i64 %901
  %903 = icmp ugt %"struct.base::internal::PartitionPage"* %902, %142
  br i1 %903, label %904, label %146

904:                                              ; preds = %891, %155, %158
  %905 = phi i64 [ %148, %158 ], [ %148, %155 ], [ %892, %891 ]
  %906 = icmp eq i64 %905, 0
  br i1 %906, label %977, label %907, !prof !7

907:                                              ; preds = %904
  %908 = ptrtoint i8* %125 to i64
  %909 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %33, align 8
  %910 = icmp eq %"class.std::__1::__tree_node"* %909, null
  br i1 %910, label %937, label %911

911:                                              ; preds = %907, %933
  %912 = phi %"class.std::__1::__tree_node"* [ %936, %933 ], [ %909, %907 ]
  %913 = phi %"class.std::__1::__tree_node_base"** [ %935, %933 ], [ %34, %907 ]
  %914 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %912, i64 0, i32 1
  %915 = load i64, i64* %914, align 8
  %916 = icmp ugt i64 %915, %908
  br i1 %916, label %917, label %923

917:                                              ; preds = %911
  %918 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %912, i64 0, i32 0, i32 0, i32 0
  %919 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %918, align 8
  %920 = icmp eq %"class.std::__1::__tree_node_base"* %919, null
  br i1 %920, label %921, label %933

921:                                              ; preds = %917
  %922 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %912, i64 0, i32 0, i32 0
  br label %937

923:                                              ; preds = %911
  %924 = icmp ult i64 %915, %908
  br i1 %924, label %925, label %931

925:                                              ; preds = %923
  %926 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %912, i64 0, i32 0, i32 1
  %927 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %926, align 8
  %928 = icmp eq %"class.std::__1::__tree_node_base"* %927, null
  br i1 %928, label %929, label %933

929:                                              ; preds = %925
  %930 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %912, i64 0, i32 0, i32 0
  br label %937

931:                                              ; preds = %923
  %932 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %912, i64 0, i32 0, i32 0
  br label %937

933:                                              ; preds = %925, %917
  %934 = phi %"class.std::__1::__tree_node_base"* [ %919, %917 ], [ %927, %925 ]
  %935 = phi %"class.std::__1::__tree_node_base"** [ %918, %917 ], [ %926, %925 ]
  %936 = bitcast %"class.std::__1::__tree_node_base"* %934 to %"class.std::__1::__tree_node"*
  br label %911

937:                                              ; preds = %907, %931, %929, %921
  %938 = phi %"class.std::__1::__tree_end_node"* [ %922, %921 ], [ %930, %929 ], [ %932, %931 ], [ %32, %907 ]
  %939 = phi %"class.std::__1::__tree_node_base"** [ %918, %921 ], [ %926, %929 ], [ %913, %931 ], [ %35, %907 ]
  %940 = bitcast %"class.std::__1::__tree_node_base"** %939 to %"class.std::__1::__tree_node"**
  %941 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %940, align 8
  %942 = icmp eq %"class.std::__1::__tree_node"* %941, null
  br i1 %942, label %943, label %961

943:                                              ; preds = %937
  %944 = call %"class.std::__1::__tree_node"* @_ZN4base8internal17MetadataAllocatorINSt3__111__tree_nodeImPvEEE8allocateEm(%"class.base::internal::MetadataAllocator"* %37, i64 1) #17, !noalias !20
  %945 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %944, i64 0, i32 1
  store i64 %908, i64* %945, align 8, !noalias !20
  %946 = bitcast %"class.std::__1::__tree_node"* %944 to %"class.std::__1::__tree_node_base"*
  %947 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %944, i64 0, i32 0, i32 2
  %948 = bitcast %"class.std::__1::__tree_node"* %944 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %948, i8 0, i64 16, i1 false) #17
  store %"class.std::__1::__tree_end_node"* %938, %"class.std::__1::__tree_end_node"** %947, align 8
  store %"class.std::__1::__tree_node"* %944, %"class.std::__1::__tree_node"** %940, align 8
  %949 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %38, align 8
  %950 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %949, i64 0, i32 0
  %951 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %950, align 8
  %952 = icmp eq %"class.std::__1::__tree_node_base"* %951, null
  br i1 %952, label %956, label %953

953:                                              ; preds = %943
  %954 = ptrtoint %"class.std::__1::__tree_node_base"* %951 to i64
  store i64 %954, i64* %39, align 8
  %955 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %939, align 8
  br label %956

956:                                              ; preds = %953, %943
  %957 = phi %"class.std::__1::__tree_node_base"* [ %946, %943 ], [ %955, %953 ]
  %958 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %34, align 8
  call void @_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"* %958, %"class.std::__1::__tree_node_base"* %957) #17
  %959 = load i64, i64* %40, align 8
  %960 = add i64 %959, 1
  store i64 %960, i64* %40, align 8
  br label %961

961:                                              ; preds = %937, %956
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %41) #17
  store i64 %908, i64* %42, align 8
  store i8 0, i8* %43, align 8
  store i8 0, i8* %44, align 1
  %962 = load %"struct.base::internal::RacefulWorklist<unsigned long>::Node"*, %"struct.base::internal::RacefulWorklist<unsigned long>::Node"** %45, align 8
  %963 = load %"struct.base::internal::RacefulWorklist<unsigned long>::Node"*, %"struct.base::internal::RacefulWorklist<unsigned long>::Node"** %46, align 8
  %964 = icmp ult %"struct.base::internal::RacefulWorklist<unsigned long>::Node"* %962, %963
  br i1 %964, label %965, label %975

965:                                              ; preds = %961
  %966 = getelementptr inbounds %"struct.base::internal::RacefulWorklist<unsigned long>::Node", %"struct.base::internal::RacefulWorklist<unsigned long>::Node"* %962, i64 0, i32 0
  store i64 %908, i64* %966, align 8
  %967 = load atomic i8, i8* %43 monotonic, align 8
  %968 = and i8 %967, 1
  %969 = getelementptr inbounds %"struct.base::internal::RacefulWorklist<unsigned long>::Node", %"struct.base::internal::RacefulWorklist<unsigned long>::Node"* %962, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0
  store i8 %968, i8* %969, align 1
  %970 = load atomic i8, i8* %44 monotonic, align 1
  %971 = and i8 %970, 1
  %972 = getelementptr inbounds %"struct.base::internal::RacefulWorklist<unsigned long>::Node", %"struct.base::internal::RacefulWorklist<unsigned long>::Node"* %962, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0
  store i8 %971, i8* %972, align 1
  %973 = getelementptr inbounds %"struct.base::internal::RacefulWorklist<unsigned long>::Node", %"struct.base::internal::RacefulWorklist<unsigned long>::Node"* %962, i64 1
  %974 = ptrtoint %"struct.base::internal::RacefulWorklist<unsigned long>::Node"* %973 to i64
  store i64 %974, i64* %48, align 8
  br label %976

975:                                              ; preds = %961
  call void @_ZNSt3__16vectorIN4base8internal15RacefulWorklistImE4NodeENS2_17MetadataAllocatorIS5_EEE21__push_back_slow_pathIS5_EEvOT_(%"class.std::__1::vector.24"* %47, %"struct.base::internal::RacefulWorklist<unsigned long>::Node"* nonnull dereferenceable(16) %3) #17
  br label %976

976:                                              ; preds = %965, %975
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %41) #17
  br label %977

977:                                              ; preds = %124, %904, %976
  %978 = getelementptr inbounds i8, i8* %125, i64 2097152
  %979 = load i8*, i8** %117, align 8
  %980 = icmp eq i8* %978, %979
  br i1 %980, label %120, label %124

981:                                              ; preds = %1019, %49
  ret void

982:                                              ; preds = %54, %1019
  %983 = phi %"struct.base::PartitionRoot"** [ %55, %54 ], [ %1020, %1019 ]
  %984 = load %"struct.base::PartitionRoot"*, %"struct.base::PartitionRoot"** %983, align 8
  %985 = getelementptr inbounds %"struct.base::PartitionRoot", %"struct.base::PartitionRoot"* %984, i64 0, i32 8
  %986 = getelementptr inbounds %"class.base::internal::MaybeSpinLock", %"class.base::internal::MaybeSpinLock"* %985, i64 0, i32 0
  %987 = getelementptr inbounds %"class.base::internal::MaybeSpinLock", %"class.base::internal::MaybeSpinLock"* %985, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  br label %988

988:                                              ; preds = %1000, %982
  %989 = phi i32 [ 0, %982 ], [ %1001, %1000 ]
  %990 = phi i32 [ 1, %982 ], [ %1004, %1000 ]
  %991 = load atomic i32, i32* %987 monotonic, align 4
  %992 = icmp eq i32 %991, 0
  br i1 %992, label %993, label %996, !prof !9

993:                                              ; preds = %988
  %994 = cmpxchg weak i32* %987, i32 0, i32 1 acquire monotonic
  %995 = extractvalue { i32, i1 } %994, 1
  br i1 %995, label %1011, label %996, !prof !6

996:                                              ; preds = %993, %988
  %997 = icmp sgt i32 %990, 0
  br i1 %997, label %1006, label %1000

998:                                              ; preds = %1006
  %999 = add i32 %990, %989
  br label %1000

1000:                                             ; preds = %998, %996
  %1001 = phi i32 [ %989, %996 ], [ %999, %998 ]
  %1002 = shl i32 %990, 1
  %1003 = icmp slt i32 %1002, 64
  %1004 = select i1 %1003, i32 %1002, i32 64
  %1005 = icmp slt i32 %1001, 1000
  br i1 %1005, label %988, label %1010

1006:                                             ; preds = %996, %1006
  %1007 = phi i32 [ %1008, %1006 ], [ 0, %996 ]
  call void asm sideeffect "pause", "~{dirflag},~{fpsr},~{flags}"() #17, !srcloc !10
  %1008 = add nuw nsw i32 %1007, 1
  %1009 = icmp eq i32 %1008, %990
  br i1 %1009, label %998, label %1006

1010:                                             ; preds = %1000
  call void @_ZN4base8internal13SpinningMutex8LockSlowEv(%"class.base::internal::SpinningMutex"* %986) #17
  br label %1011

1011:                                             ; preds = %993, %1010
  %1012 = getelementptr inbounds %"struct.base::PartitionRoot", %"struct.base::PartitionRoot"* %984, i64 0, i32 21
  %1013 = load %"struct.base::internal::PartitionSuperPageExtentEntry"*, %"struct.base::internal::PartitionSuperPageExtentEntry"** %1012, align 8
  %1014 = icmp eq %"struct.base::internal::PartitionSuperPageExtentEntry"* %1013, null
  br i1 %1014, label %1015, label %1022

1015:                                             ; preds = %1029, %1011
  %1016 = atomicrmw xchg i32* %987, i32 0 release
  %1017 = icmp eq i32 %1016, 2
  br i1 %1017, label %1018, label %1019, !prof !7

1018:                                             ; preds = %1015
  call void @_ZN4base8internal13SpinningMutex9FutexWakeEv(%"class.base::internal::SpinningMutex"* %986) #17
  br label %1019

1019:                                             ; preds = %1015, %1018
  %1020 = getelementptr inbounds %"struct.base::PartitionRoot"*, %"struct.base::PartitionRoot"** %983, i64 1
  %1021 = icmp eq %"struct.base::PartitionRoot"** %1020, %52
  br i1 %1021, label %981, label %982

1022:                                             ; preds = %1011, %1029
  %1023 = phi %"struct.base::internal::PartitionSuperPageExtentEntry"* [ %1031, %1029 ], [ %1013, %1011 ]
  %1024 = getelementptr inbounds %"struct.base::internal::PartitionSuperPageExtentEntry", %"struct.base::internal::PartitionSuperPageExtentEntry"* %1023, i64 0, i32 1
  %1025 = load i8*, i8** %1024, align 8
  %1026 = getelementptr inbounds %"struct.base::internal::PartitionSuperPageExtentEntry", %"struct.base::internal::PartitionSuperPageExtentEntry"* %1023, i64 0, i32 2
  %1027 = load i8*, i8** %1026, align 8
  %1028 = icmp eq i8* %1025, %1027
  br i1 %1028, label %1029, label %1033

1029:                                             ; preds = %1103, %1022
  %1030 = getelementptr inbounds %"struct.base::internal::PartitionSuperPageExtentEntry", %"struct.base::internal::PartitionSuperPageExtentEntry"* %1023, i64 0, i32 3
  %1031 = load %"struct.base::internal::PartitionSuperPageExtentEntry"*, %"struct.base::internal::PartitionSuperPageExtentEntry"** %1030, align 8
  %1032 = icmp eq %"struct.base::internal::PartitionSuperPageExtentEntry"* %1031, null
  br i1 %1032, label %1015, label %1022

1033:                                             ; preds = %1022, %1103
  %1034 = phi i8* [ %1104, %1103 ], [ %1025, %1022 ]
  %1035 = ptrtoint i8* %1034 to i64
  %1036 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %57, align 8
  %1037 = icmp eq %"class.std::__1::__tree_node"* %1036, null
  br i1 %1037, label %1064, label %1038

1038:                                             ; preds = %1033, %1060
  %1039 = phi %"class.std::__1::__tree_node"* [ %1063, %1060 ], [ %1036, %1033 ]
  %1040 = phi %"class.std::__1::__tree_node_base"** [ %1062, %1060 ], [ %58, %1033 ]
  %1041 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %1039, i64 0, i32 1
  %1042 = load i64, i64* %1041, align 8
  %1043 = icmp ugt i64 %1042, %1035
  br i1 %1043, label %1044, label %1050

1044:                                             ; preds = %1038
  %1045 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %1039, i64 0, i32 0, i32 0, i32 0
  %1046 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %1045, align 8
  %1047 = icmp eq %"class.std::__1::__tree_node_base"* %1046, null
  br i1 %1047, label %1048, label %1060

1048:                                             ; preds = %1044
  %1049 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %1039, i64 0, i32 0, i32 0
  br label %1064

1050:                                             ; preds = %1038
  %1051 = icmp ult i64 %1042, %1035
  br i1 %1051, label %1052, label %1058

1052:                                             ; preds = %1050
  %1053 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %1039, i64 0, i32 0, i32 1
  %1054 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %1053, align 8
  %1055 = icmp eq %"class.std::__1::__tree_node_base"* %1054, null
  br i1 %1055, label %1056, label %1060

1056:                                             ; preds = %1052
  %1057 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %1039, i64 0, i32 0, i32 0
  br label %1064

1058:                                             ; preds = %1050
  %1059 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %1039, i64 0, i32 0, i32 0
  br label %1064

1060:                                             ; preds = %1052, %1044
  %1061 = phi %"class.std::__1::__tree_node_base"* [ %1046, %1044 ], [ %1054, %1052 ]
  %1062 = phi %"class.std::__1::__tree_node_base"** [ %1045, %1044 ], [ %1053, %1052 ]
  %1063 = bitcast %"class.std::__1::__tree_node_base"* %1061 to %"class.std::__1::__tree_node"*
  br label %1038

1064:                                             ; preds = %1033, %1058, %1056, %1048
  %1065 = phi %"class.std::__1::__tree_end_node"* [ %1049, %1048 ], [ %1057, %1056 ], [ %1059, %1058 ], [ %56, %1033 ]
  %1066 = phi %"class.std::__1::__tree_node_base"** [ %1045, %1048 ], [ %1053, %1056 ], [ %1040, %1058 ], [ %59, %1033 ]
  %1067 = bitcast %"class.std::__1::__tree_node_base"** %1066 to %"class.std::__1::__tree_node"**
  %1068 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %1067, align 8
  %1069 = icmp eq %"class.std::__1::__tree_node"* %1068, null
  br i1 %1069, label %1070, label %1088

1070:                                             ; preds = %1064
  %1071 = call %"class.std::__1::__tree_node"* @_ZN4base8internal17MetadataAllocatorINSt3__111__tree_nodeImPvEEE8allocateEm(%"class.base::internal::MetadataAllocator"* %61, i64 1) #17, !noalias !23
  %1072 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %1071, i64 0, i32 1
  store i64 %1035, i64* %1072, align 8, !noalias !23
  %1073 = bitcast %"class.std::__1::__tree_node"* %1071 to %"class.std::__1::__tree_node_base"*
  %1074 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %1071, i64 0, i32 0, i32 2
  %1075 = bitcast %"class.std::__1::__tree_node"* %1071 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %1075, i8 0, i64 16, i1 false) #17
  store %"class.std::__1::__tree_end_node"* %1065, %"class.std::__1::__tree_end_node"** %1074, align 8
  store %"class.std::__1::__tree_node"* %1071, %"class.std::__1::__tree_node"** %1067, align 8
  %1076 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %62, align 8
  %1077 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %1076, i64 0, i32 0
  %1078 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %1077, align 8
  %1079 = icmp eq %"class.std::__1::__tree_node_base"* %1078, null
  br i1 %1079, label %1083, label %1080

1080:                                             ; preds = %1070
  %1081 = ptrtoint %"class.std::__1::__tree_node_base"* %1078 to i64
  store i64 %1081, i64* %63, align 8
  %1082 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %1066, align 8
  br label %1083

1083:                                             ; preds = %1080, %1070
  %1084 = phi %"class.std::__1::__tree_node_base"* [ %1073, %1070 ], [ %1082, %1080 ]
  %1085 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %58, align 8
  call void @_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"* %1085, %"class.std::__1::__tree_node_base"* %1084) #17
  %1086 = load i64, i64* %64, align 8
  %1087 = add i64 %1086, 1
  store i64 %1087, i64* %64, align 8
  br label %1088

1088:                                             ; preds = %1064, %1083
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %65) #17
  store i64 %1035, i64* %66, align 8
  store i8 0, i8* %67, align 8
  store i8 0, i8* %68, align 1
  %1089 = load %"struct.base::internal::RacefulWorklist<unsigned long>::Node"*, %"struct.base::internal::RacefulWorklist<unsigned long>::Node"** %69, align 8
  %1090 = load %"struct.base::internal::RacefulWorklist<unsigned long>::Node"*, %"struct.base::internal::RacefulWorklist<unsigned long>::Node"** %70, align 8
  %1091 = icmp ult %"struct.base::internal::RacefulWorklist<unsigned long>::Node"* %1089, %1090
  br i1 %1091, label %1092, label %1102

1092:                                             ; preds = %1088
  %1093 = getelementptr inbounds %"struct.base::internal::RacefulWorklist<unsigned long>::Node", %"struct.base::internal::RacefulWorklist<unsigned long>::Node"* %1089, i64 0, i32 0
  store i64 %1035, i64* %1093, align 8
  %1094 = load atomic i8, i8* %67 monotonic, align 8
  %1095 = and i8 %1094, 1
  %1096 = getelementptr inbounds %"struct.base::internal::RacefulWorklist<unsigned long>::Node", %"struct.base::internal::RacefulWorklist<unsigned long>::Node"* %1089, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0
  store i8 %1095, i8* %1096, align 1
  %1097 = load atomic i8, i8* %68 monotonic, align 1
  %1098 = and i8 %1097, 1
  %1099 = getelementptr inbounds %"struct.base::internal::RacefulWorklist<unsigned long>::Node", %"struct.base::internal::RacefulWorklist<unsigned long>::Node"* %1089, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0
  store i8 %1098, i8* %1099, align 1
  %1100 = getelementptr inbounds %"struct.base::internal::RacefulWorklist<unsigned long>::Node", %"struct.base::internal::RacefulWorklist<unsigned long>::Node"* %1089, i64 1
  %1101 = ptrtoint %"struct.base::internal::RacefulWorklist<unsigned long>::Node"* %1100 to i64
  store i64 %1101, i64* %72, align 8
  br label %1103

1102:                                             ; preds = %1088
  call void @_ZNSt3__16vectorIN4base8internal15RacefulWorklistImE4NodeENS2_17MetadataAllocatorIS5_EEE21__push_back_slow_pathIS5_EEvOT_(%"class.std::__1::vector.24"* %71, %"struct.base::internal::RacefulWorklist<unsigned long>::Node"* nonnull dereferenceable(16) %8) #17
  br label %1103

1103:                                             ; preds = %1092, %1102
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %65) #17
  %1104 = getelementptr inbounds i8, i8* %1034, i64 2097152
  %1105 = load i8*, i8** %1026, align 8
  %1106 = icmp eq i8* %1104, %1105
  br i1 %1106, label %1029, label %1033
}

declare void @_ZNSt3__111__call_onceERVmPvPFvS2_E(i64* dereferenceable(8), i8*, void (i8*)*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define internal void @_ZNSt3__117__call_once_proxyINS_5tupleIJOMN4base8internal12_GLOBAL__N_114PCScanSnapshotEFvmEOPS5_RmEEEEEvPv(i8* nocapture readonly) #3 {
  %2 = bitcast i8* %0 to %"class.std::__1::tuple.129"**
  %3 = load %"class.std::__1::tuple.129"*, %"class.std::__1::tuple.129"** %2, align 8
  %4 = getelementptr inbounds %"class.std::__1::tuple.129", %"class.std::__1::tuple.129"* %3, i64 0, i32 0, i32 0, i32 0
  %5 = load { i64, i64 }*, { i64, i64 }** %4, align 8
  %6 = getelementptr inbounds %"class.std::__1::tuple.129", %"class.std::__1::tuple.129"* %3, i64 0, i32 0, i32 1, i32 0
  %7 = bitcast %"class.base::internal::(anonymous namespace)::PCScanSnapshot"*** %6 to i8***
  %8 = load i8**, i8*** %7, align 8
  %9 = getelementptr inbounds %"class.std::__1::tuple.129", %"class.std::__1::tuple.129"* %3, i64 0, i32 0, i32 2, i32 0
  %10 = load i64*, i64** %9, align 8
  %11 = load i8*, i8** %8, align 8
  %12 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %5, i64 0, i32 0
  %13 = load i64, i64* %12, align 8
  %14 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %5, i64 0, i32 1
  %15 = load i64, i64* %14, align 8
  %16 = getelementptr inbounds i8, i8* %11, i64 %15
  %17 = bitcast i8* %16 to %"class.base::internal::(anonymous namespace)::PCScanSnapshot"*
  %18 = and i64 %13, 1
  %19 = icmp eq i64 %18, 0
  br i1 %19, label %27, label %20

20:                                               ; preds = %1
  %21 = bitcast i8* %16 to i8**
  %22 = load i8*, i8** %21, align 8
  %23 = add i64 %13, -1
  %24 = getelementptr i8, i8* %22, i64 %23
  %25 = bitcast i8* %24 to void (%"class.base::internal::(anonymous namespace)::PCScanSnapshot"*, i64)**
  %26 = load void (%"class.base::internal::(anonymous namespace)::PCScanSnapshot"*, i64)*, void (%"class.base::internal::(anonymous namespace)::PCScanSnapshot"*, i64)** %25, align 8
  br label %29

27:                                               ; preds = %1
  %28 = inttoptr i64 %13 to void (%"class.base::internal::(anonymous namespace)::PCScanSnapshot"*, i64)*
  br label %29

29:                                               ; preds = %20, %27
  %30 = phi void (%"class.base::internal::(anonymous namespace)::PCScanSnapshot"*, i64)* [ %26, %20 ], [ %28, %27 ]
  %31 = load i64, i64* %10, align 8
  tail call void %30(%"class.base::internal::(anonymous namespace)::PCScanSnapshot"* %17, i64 %31) #17
  ret void
}

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #13

declare dereferenceable(5408) %"struct.base::PartitionRoot"* @_ZN4base8internal23PCScanMetadataAllocatorEv() local_unnamed_addr #2

declare i8* @_ZN4base13PartitionRootILb1EE28MaybeInitThreadCacheAndAllocEtPm(%"struct.base::PartitionRoot"*, i16 zeroext, i64*) local_unnamed_addr #2

; Function Attrs: nounwind readnone speculatable
declare i64 @llvm.ctlz.i64(i64, i1 immarg) #14

declare void @_ZN4base8internal6PCScan8JoinScanEv() local_unnamed_addr #2

declare void @_ZN4base8internal11ThreadCache10FillBucketEm(%"class.base::internal::ThreadCache"*, i64) local_unnamed_addr #2

; Function Attrs: noinline noreturn nounwind ssp uwtable
define internal fastcc void @_ZN4base8internal12_GLOBAL__N_126FreelistCorruptionDetectedEv() unnamed_addr #0 {
  tail call void asm sideeffect "int3", "~{dirflag},~{fpsr},~{flags}"() #17, !srcloc !26
  tail call void asm sideeffect "ud2", "~{dirflag},~{fpsr},~{flags}"() #17, !srcloc !27
  unreachable
}

; Function Attrs: inaccessiblemem_or_argmemonly nounwind
declare void @llvm.prefetch(i8* nocapture readonly, i32 immarg, i32 immarg, i32) #15

; Function Attrs: nounwind readnone speculatable
declare i64 @llvm.bswap.i64(i64) #14

declare i8* @_ZN4base8internal15PartitionBucketILb1EE13SlowPathAllocEPNS_13PartitionRootILb1EEEimmPb(%"struct.base::internal::PartitionBucket"*, %"struct.base::PartitionRoot"*, i32, i64, i64, i8*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define internal fastcc void @_ZNSt3__116allocator_traitsIN4base8internal17MetadataAllocatorINS2_15RacefulWorklistINS2_12_GLOBAL__N_114PCScanSnapshot13LargeScanAreaEE4NodeEEEE10deallocateERSA_PS9_m(%"struct.base::internal::RacefulWorklist<base::internal::(anonymous namespace)::PCScanSnapshot::LargeScanArea>::Node"*) unnamed_addr #3 align 2 {
  %2 = alloca %"struct.base::internal::DeferredUnmap", align 8
  %3 = tail call dereferenceable(5408) %"struct.base::PartitionRoot"* @_ZN4base8internal23PCScanMetadataAllocatorEv() #17
  %4 = bitcast %"struct.base::internal::RacefulWorklist<base::internal::(anonymous namespace)::PCScanSnapshot::LargeScanArea>::Node"* %0 to i8*
  %5 = icmp eq %"struct.base::internal::RacefulWorklist<base::internal::(anonymous namespace)::PCScanSnapshot::LargeScanArea>::Node"* %0, null
  br i1 %5, label %239, label %6, !prof !7

6:                                                ; preds = %1
  tail call void @llvm.prefetch(i8* nonnull %4, i32 0, i32 3, i32 1) #17
  %7 = ptrtoint %"struct.base::internal::RacefulWorklist<base::internal::(anonymous namespace)::PCScanSnapshot::LargeScanArea>::Node"* %0 to i64
  %8 = and i64 %7, -2097152
  %9 = or i64 %8, 4096
  %10 = inttoptr i64 %9 to i8*
  %11 = lshr i64 %7, 9
  %12 = and i64 %11, 4064
  %13 = getelementptr inbounds i8, i8* %10, i64 %12
  %14 = bitcast i8* %13 to %"struct.base::internal::PartitionPage"*
  %15 = getelementptr inbounds i8, i8* %13, i64 30
  %16 = load i8, i8* %15, align 2
  %17 = zext i8 %16 to i64
  %18 = sub nsw i64 0, %17
  %19 = getelementptr inbounds %"struct.base::internal::PartitionPage", %"struct.base::internal::PartitionPage"* %14, i64 %18, i32 0
  %20 = bitcast %union.anon.123* %19 to %"struct.base::internal::SlotSpanMetadata"*
  %21 = bitcast %union.anon.123* %19 to i8*
  tail call void @llvm.prefetch(i8* %21, i32 0, i32 3, i32 1) #17
  %22 = ptrtoint %union.anon.123* %19 to i64
  %23 = and i64 %22, -4096
  %24 = inttoptr i64 %23 to %"struct.base::internal::PartitionSuperPageExtentEntry"*
  %25 = getelementptr inbounds %"struct.base::internal::PartitionSuperPageExtentEntry", %"struct.base::internal::PartitionSuperPageExtentEntry"* %24, i64 0, i32 0
  %26 = load %"struct.base::PartitionRoot"*, %"struct.base::PartitionRoot"** %25, align 4096
  %27 = getelementptr inbounds %"struct.base::PartitionRoot", %"struct.base::PartitionRoot"* %26, i64 0, i32 0
  %28 = load i8, i8* %27, align 8
  %29 = icmp eq i8 %28, 2
  br i1 %29, label %30, label %99, !prof !7

30:                                               ; preds = %6
  %31 = load atomic i8, i8* getelementptr inbounds (%"class.base::internal::PCScan", %"class.base::internal::PCScan"* @_ZN4base8internal6PCScan9instance_E, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0) acquire, align 8
  %32 = icmp eq i8 %31, 2
  br i1 %32, label %33, label %34, !prof !7

33:                                               ; preds = %30
  tail call void @_ZN4base8internal6PCScan8JoinScanEv() #17
  br label %34

34:                                               ; preds = %33, %30
  %35 = getelementptr inbounds %"struct.base::internal::PartitionPage", %"struct.base::internal::PartitionPage"* %14, i64 %18, i32 0, i32 1, i64 8
  %36 = bitcast i8* %35 to %"struct.base::internal::PartitionBucket"**
  %37 = load %"struct.base::internal::PartitionBucket"*, %"struct.base::internal::PartitionBucket"** %36, align 1
  %38 = getelementptr inbounds %"struct.base::PartitionRoot", %"struct.base::PartitionRoot"* %26, i64 0, i32 10, i64 0
  %39 = icmp ugt %"struct.base::internal::PartitionBucket"* %38, %37
  %40 = getelementptr inbounds %"struct.base::PartitionRoot", %"struct.base::PartitionRoot"* %26, i64 0, i32 11
  %41 = icmp ult %"struct.base::internal::PartitionBucket"* %40, %37
  %42 = or i1 %39, %41
  br i1 %42, label %99, label %43, !prof !7

43:                                               ; preds = %34
  %44 = getelementptr inbounds %"struct.base::internal::PartitionPage", %"struct.base::internal::PartitionPage"* %14, i64 %18, i32 0, i32 1, i64 21
  %45 = load i8, i8* %44, align 1, !range !5
  %46 = icmp eq i8 %45, 0
  br i1 %46, label %47, label %51, !prof !6

47:                                               ; preds = %43
  %48 = getelementptr inbounds %"struct.base::internal::PartitionBucket", %"struct.base::internal::PartitionBucket"* %37, i64 0, i32 3
  %49 = load i32, i32* %48, align 8
  %50 = zext i32 %49 to i64
  br label %58

51:                                               ; preds = %43
  %52 = bitcast %union.anon.123* %19 to %"struct.base::internal::PartitionPage"*
  %53 = getelementptr inbounds %"struct.base::internal::PartitionPage", %"struct.base::internal::PartitionPage"* %52, i64 1, i32 0, i32 0, i32 0
  %54 = load i64, i64* %53, align 1
  %55 = getelementptr inbounds %"struct.base::internal::PartitionBucket", %"struct.base::internal::PartitionBucket"* %37, i64 0, i32 3
  %56 = load i32, i32* %55, align 8
  %57 = zext i32 %56 to i64
  br label %58

58:                                               ; preds = %51, %47
  %59 = phi i64 [ %50, %47 ], [ %57, %51 ]
  %60 = phi i64 [ %50, %47 ], [ %54, %51 ]
  %61 = load atomic i64, i64* getelementptr inbounds (%"class.base::internal::PCScan", %"class.base::internal::PCScan"* @_ZN4base8internal6PCScan9instance_E, i64 0, i32 0, i32 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 8
  %62 = inttoptr i64 %8 to i8*
  %63 = and i64 %61, 1
  %64 = icmp eq i64 %63, 0
  %65 = select i1 %64, i64 16384, i64 32768
  %66 = getelementptr inbounds i8, i8* %62, i64 %65
  %67 = bitcast i8* %66 to %"class.base::internal::ObjectBitmap"*
  %68 = lshr i64 %7, 4
  %69 = lshr i64 %7, 10
  %70 = and i64 %69, 2047
  %71 = and i64 %68, 63
  %72 = shl i64 1, %71
  %73 = getelementptr inbounds %"class.base::internal::ObjectBitmap", %"class.base::internal::ObjectBitmap"* %67, i64 0, i32 0, i32 0, i64 %70
  %74 = atomicrmw or i64* %73, i64 %72 monotonic
  %75 = and i64 %74, %72
  %76 = icmp eq i64 %75, 0
  br i1 %76, label %78, label %77, !prof !6

77:                                               ; preds = %58
  notail call void @_ZN4base8internal17DoubleFreeAttemptEv() #18
  unreachable

78:                                               ; preds = %58
  %79 = atomicrmw add i64* getelementptr inbounds (%"class.base::internal::PCScan", %"class.base::internal::PCScan"* @_ZN4base8internal6PCScan9instance_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0), i64 %59 monotonic
  %80 = add i64 %79, %59
  %81 = load atomic i64, i64* getelementptr inbounds (%"class.base::internal::PCScan", %"class.base::internal::PCScan"* @_ZN4base8internal6PCScan9instance_E, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 8
  %82 = icmp ugt i64 %80, %81
  br i1 %82, label %83, label %89

83:                                               ; preds = %78
  %84 = load %"class.base::internal::PCScanSchedulingBackend"*, %"class.base::internal::PCScanSchedulingBackend"** getelementptr inbounds (%"class.base::internal::PCScan", %"class.base::internal::PCScan"* @_ZN4base8internal6PCScan9instance_E, i64 0, i32 0, i32 2), align 8
  %85 = bitcast %"class.base::internal::PCScanSchedulingBackend"* %84 to i1 (%"class.base::internal::PCScanSchedulingBackend"*)***
  %86 = load i1 (%"class.base::internal::PCScanSchedulingBackend"*)**, i1 (%"class.base::internal::PCScanSchedulingBackend"*)*** %85, align 8
  %87 = load i1 (%"class.base::internal::PCScanSchedulingBackend"*)*, i1 (%"class.base::internal::PCScanSchedulingBackend"*)** %86, align 8
  %88 = tail call zeroext i1 %87(%"class.base::internal::PCScanSchedulingBackend"* %84) #17
  br label %89

89:                                               ; preds = %83, %78
  %90 = phi i1 [ false, %78 ], [ %88, %83 ]
  %91 = load i8, i8* getelementptr inbounds (%"class.base::internal::PCScan", %"class.base::internal::PCScan"* @_ZN4base8internal6PCScan9instance_E, i64 0, i32 2), align 1
  %92 = icmp eq i8 %91, 1
  br i1 %92, label %93, label %94

93:                                               ; preds = %89
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 1 %4, i8 0, i64 %60, i1 false) #17
  br label %94

94:                                               ; preds = %93, %89
  br i1 %90, label %95, label %239, !prof !7

95:                                               ; preds = %94
  %96 = load atomic i8, i8* getelementptr inbounds (%"class.base::internal::PCScan", %"class.base::internal::PCScan"* @_ZN4base8internal6PCScan9instance_E, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0) monotonic, align 8
  %97 = icmp eq i8 %96, 0
  br i1 %97, label %98, label %239

98:                                               ; preds = %95
  tail call void @_ZN4base8internal6PCScan11PerformScanENS1_14InvocationModeE(%"class.base::internal::PCScan"* nonnull @_ZN4base8internal6PCScan9instance_E, i32 1) #17
  br label %239

99:                                               ; preds = %34, %6
  %100 = getelementptr inbounds %"struct.base::PartitionRoot", %"struct.base::PartitionRoot"* %26, i64 0, i32 2
  %101 = load i8, i8* %100, align 2, !range !5
  %102 = icmp eq i8 %101, 0
  br i1 %102, label %171, label %103, !prof !7

103:                                              ; preds = %99
  %104 = getelementptr inbounds %"struct.base::internal::PartitionPage", %"struct.base::internal::PartitionPage"* %14, i64 %18, i32 0, i32 1, i64 8
  %105 = bitcast i8* %104 to %"struct.base::internal::PartitionBucket"**
  %106 = load %"struct.base::internal::PartitionBucket"*, %"struct.base::internal::PartitionBucket"** %105, align 1
  %107 = getelementptr inbounds %"struct.base::PartitionRoot", %"struct.base::PartitionRoot"* %26, i64 0, i32 10, i64 0
  %108 = icmp ule %"struct.base::internal::PartitionBucket"* %107, %106
  %109 = getelementptr inbounds %"struct.base::PartitionRoot", %"struct.base::PartitionRoot"* %26, i64 0, i32 11
  %110 = icmp uge %"struct.base::internal::PartitionBucket"* %109, %106
  %111 = and i1 %110, %108
  %112 = ptrtoint %"struct.base::internal::PartitionBucket"* %106 to i64
  br i1 %111, label %113, label %171, !prof !6

113:                                              ; preds = %103
  %114 = load i32, i32* @_ZN4base8internal18g_thread_cache_keyE, align 4
  %115 = tail call i8* @pthread_getspecific(i32 %114) #17
  %116 = bitcast i8* %115 to %"class.base::internal::ThreadCache"*
  %117 = icmp ugt i8* %115, inttoptr (i64 1 to i8*)
  br i1 %117, label %118, label %171, !prof !6

118:                                              ; preds = %113
  %119 = ptrtoint %"struct.base::internal::PartitionBucket"* %107 to i64
  %120 = sub i64 %112, %119
  %121 = sdiv exact i64 %120, 40
  %122 = getelementptr inbounds i8, i8* %115, i64 1480
  %123 = bitcast i8* %122 to i64*
  %124 = load i64, i64* %123, align 8
  %125 = add i64 %124, 1
  store i64 %125, i64* %123, align 8
  %126 = load i16, i16* @_ZN4base8internal11ThreadCache28largest_active_bucket_index_E, align 2
  %127 = zext i16 %126 to i64
  %128 = icmp ugt i64 %121, %127
  br i1 %128, label %129, label %134, !prof !7

129:                                              ; preds = %118
  %130 = getelementptr inbounds i8, i8* %115, i64 1496
  %131 = bitcast i8* %130 to i64*
  %132 = load i64, i64* %131, align 8
  %133 = add i64 %132, 1
  store i64 %133, i64* %131, align 8
  br label %171

134:                                              ; preds = %118
  %135 = getelementptr inbounds %"class.base::internal::ThreadCache", %"class.base::internal::ThreadCache"* %116, i64 0, i32 0, i64 %121
  %136 = bitcast %"struct.base::internal::ThreadCache::Bucket"* %135 to i64*
  %137 = load i64, i64* %136, align 8
  %138 = tail call i64 @llvm.bswap.i64(i64 %137) #17
  %139 = inttoptr i64 %138 to %"struct.base::internal::EncodedPartitionFreelistEntry"*
  %140 = bitcast %"struct.base::internal::RacefulWorklist<base::internal::(anonymous namespace)::PCScanSnapshot::LargeScanArea>::Node"* %0 to %"struct.base::internal::EncodedPartitionFreelistEntry"**
  store %"struct.base::internal::EncodedPartitionFreelistEntry"* %139, %"struct.base::internal::EncodedPartitionFreelistEntry"** %140, align 8
  %141 = xor i64 %138, -1
  %142 = getelementptr inbounds %"struct.base::internal::RacefulWorklist<base::internal::(anonymous namespace)::PCScanSnapshot::LargeScanArea>::Node", %"struct.base::internal::RacefulWorklist<base::internal::(anonymous namespace)::PCScanSnapshot::LargeScanArea>::Node"* %0, i64 0, i32 0, i32 0, i32 1
  %143 = bitcast i64** %142 to i64*
  store i64 %141, i64* %143, align 8
  %144 = bitcast %"struct.base::internal::ThreadCache::Bucket"* %135 to %"struct.base::internal::RacefulWorklist<base::internal::(anonymous namespace)::PCScanSnapshot::LargeScanArea>::Node"**
  store %"struct.base::internal::RacefulWorklist<base::internal::(anonymous namespace)::PCScanSnapshot::LargeScanArea>::Node"* %0, %"struct.base::internal::RacefulWorklist<base::internal::(anonymous namespace)::PCScanSnapshot::LargeScanArea>::Node"** %144, align 8
  %145 = getelementptr inbounds %"class.base::internal::ThreadCache", %"class.base::internal::ThreadCache"* %116, i64 0, i32 0, i64 %121, i32 1
  %146 = load i8, i8* %145, align 8
  %147 = add i8 %146, 1
  store i8 %147, i8* %145, align 8
  %148 = getelementptr inbounds %"class.base::internal::ThreadCache", %"class.base::internal::ThreadCache"* %116, i64 0, i32 0, i64 %121, i32 3
  %149 = load i16, i16* %148, align 2
  %150 = zext i16 %149 to i64
  %151 = getelementptr inbounds i8, i8* %115, i64 1424
  %152 = bitcast i8* %151 to i64*
  %153 = load i64, i64* %152, align 8
  %154 = add i64 %153, %150
  store i64 %154, i64* %152, align 8
  %155 = getelementptr inbounds i8, i8* %115, i64 1488
  %156 = bitcast i8* %155 to i64*
  %157 = load i64, i64* %156, align 8
  %158 = add i64 %157, 1
  store i64 %158, i64* %156, align 8
  %159 = getelementptr inbounds %"class.base::internal::ThreadCache", %"class.base::internal::ThreadCache"* %116, i64 0, i32 0, i64 %121, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %160 = load atomic i8, i8* %159 monotonic, align 1
  %161 = icmp ugt i8 %147, %160
  br i1 %161, label %162, label %165, !prof !7

162:                                              ; preds = %134
  %163 = lshr i8 %160, 1
  %164 = zext i8 %163 to i64
  tail call void @_ZN4base8internal11ThreadCache11ClearBucketERNS1_6BucketEm(%"class.base::internal::ThreadCache"* %116, %"struct.base::internal::ThreadCache::Bucket"* dereferenceable(16) %135, i64 %164) #17
  br label %165

165:                                              ; preds = %162, %134
  %166 = getelementptr inbounds i8, i8* %115, i64 1432
  %167 = load atomic i8, i8* %166 monotonic, align 1
  %168 = and i8 %167, 1
  %169 = icmp eq i8 %168, 0
  br i1 %169, label %239, label %170, !prof !6

170:                                              ; preds = %165
  tail call void @_ZN4base8internal11ThreadCache13PurgeInternalEv(%"class.base::internal::ThreadCache"* %116) #17
  br label %239

171:                                              ; preds = %129, %113, %103, %99
  %172 = bitcast %"struct.base::internal::DeferredUnmap"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %172) #17
  %173 = getelementptr inbounds %"struct.base::internal::DeferredUnmap", %"struct.base::internal::DeferredUnmap"* %2, i64 0, i32 0
  %174 = getelementptr inbounds %"struct.base::internal::DeferredUnmap", %"struct.base::internal::DeferredUnmap"* %2, i64 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %172, i8 0, i64 16, i1 false) #17
  %175 = getelementptr inbounds %"struct.base::PartitionRoot", %"struct.base::PartitionRoot"* %26, i64 0, i32 8
  %176 = getelementptr inbounds %"class.base::internal::MaybeSpinLock", %"class.base::internal::MaybeSpinLock"* %175, i64 0, i32 0
  %177 = getelementptr inbounds %"class.base::internal::MaybeSpinLock", %"class.base::internal::MaybeSpinLock"* %175, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  br label %178

178:                                              ; preds = %190, %171
  %179 = phi i32 [ 0, %171 ], [ %191, %190 ]
  %180 = phi i32 [ 1, %171 ], [ %194, %190 ]
  %181 = load atomic i32, i32* %177 monotonic, align 4
  %182 = icmp eq i32 %181, 0
  br i1 %182, label %183, label %186, !prof !9

183:                                              ; preds = %178
  %184 = cmpxchg weak i32* %177, i32 0, i32 1 acquire monotonic
  %185 = extractvalue { i32, i1 } %184, 1
  br i1 %185, label %201, label %186, !prof !6

186:                                              ; preds = %183, %178
  %187 = icmp sgt i32 %180, 0
  br i1 %187, label %196, label %190

188:                                              ; preds = %196
  %189 = add i32 %180, %179
  br label %190

190:                                              ; preds = %188, %186
  %191 = phi i32 [ %179, %186 ], [ %189, %188 ]
  %192 = shl i32 %180, 1
  %193 = icmp slt i32 %192, 64
  %194 = select i1 %193, i32 %192, i32 64
  %195 = icmp slt i32 %191, 1000
  br i1 %195, label %178, label %200

196:                                              ; preds = %186, %196
  %197 = phi i32 [ %198, %196 ], [ 0, %186 ]
  tail call void asm sideeffect "pause", "~{dirflag},~{fpsr},~{flags}"() #17, !srcloc !10
  %198 = add nuw nsw i32 %197, 1
  %199 = icmp eq i32 %198, %180
  br i1 %199, label %188, label %196

200:                                              ; preds = %190
  tail call void @_ZN4base8internal13SpinningMutex8LockSlowEv(%"class.base::internal::SpinningMutex"* %176) #17
  br label %201

201:                                              ; preds = %183, %200
  %202 = bitcast %union.anon.123* %19 to i8**
  %203 = load i8*, i8** %202, align 1
  %204 = icmp eq i8* %203, %4
  br i1 %204, label %207, label %205, !prof !7

205:                                              ; preds = %201
  %206 = ptrtoint i8* %203 to i64
  br label %210

207:                                              ; preds = %201
  tail call void @_ZN7logging8RawCheckEPKc(i8* getelementptr inbounds ([105 x i8], [105 x i8]* @.str.15, i64 0, i64 0)) #17
  %208 = getelementptr inbounds %union.anon.123, %union.anon.123* %19, i64 0, i32 0, i32 0
  %209 = load i64, i64* %208, align 1
  br label %210

210:                                              ; preds = %207, %205
  %211 = phi i64 [ %206, %205 ], [ %209, %207 ]
  %212 = tail call i64 @llvm.bswap.i64(i64 %211) #17
  %213 = inttoptr i64 %212 to %"struct.base::internal::EncodedPartitionFreelistEntry"*
  %214 = bitcast %"struct.base::internal::RacefulWorklist<base::internal::(anonymous namespace)::PCScanSnapshot::LargeScanArea>::Node"* %0 to %"struct.base::internal::EncodedPartitionFreelistEntry"**
  store %"struct.base::internal::EncodedPartitionFreelistEntry"* %213, %"struct.base::internal::EncodedPartitionFreelistEntry"** %214, align 8
  %215 = xor i64 %212, -1
  %216 = getelementptr inbounds %"struct.base::internal::RacefulWorklist<base::internal::(anonymous namespace)::PCScanSnapshot::LargeScanArea>::Node", %"struct.base::internal::RacefulWorklist<base::internal::(anonymous namespace)::PCScanSnapshot::LargeScanArea>::Node"* %0, i64 0, i32 0, i32 0, i32 1
  %217 = bitcast i64** %216 to i64*
  store i64 %215, i64* %217, align 8
  %218 = bitcast %union.anon.123* %19 to %"struct.base::internal::RacefulWorklist<base::internal::(anonymous namespace)::PCScanSnapshot::LargeScanArea>::Node"**
  store %"struct.base::internal::RacefulWorklist<base::internal::(anonymous namespace)::PCScanSnapshot::LargeScanArea>::Node"* %0, %"struct.base::internal::RacefulWorklist<base::internal::(anonymous namespace)::PCScanSnapshot::LargeScanArea>::Node"** %218, align 1
  %219 = getelementptr inbounds %"struct.base::internal::PartitionPage", %"struct.base::internal::PartitionPage"* %14, i64 %18, i32 0, i32 1, i64 16
  %220 = bitcast i8* %219 to i16*
  %221 = load i16, i16* %220, align 1
  %222 = add i16 %221, -1
  store i16 %222, i16* %220, align 1
  %223 = icmp slt i16 %222, 1
  br i1 %223, label %224, label %228, !prof !7

224:                                              ; preds = %210
  %225 = tail call { i8*, i64 } @_ZN4base8internal16SlotSpanMetadataILb1EE12FreeSlowPathEv(%"struct.base::internal::SlotSpanMetadata"* %20) #17
  %226 = extractvalue { i8*, i64 } %225, 0
  %227 = extractvalue { i8*, i64 } %225, 1
  br label %228

228:                                              ; preds = %224, %210
  %229 = phi i8* [ %226, %224 ], [ null, %210 ]
  %230 = phi i64 [ %227, %224 ], [ 0, %210 ]
  store i8* %229, i8** %173, align 8
  store i64 %230, i64* %174, align 8
  %231 = atomicrmw xchg i32* %177, i32 0 release
  %232 = icmp eq i32 %231, 2
  br i1 %232, label %233, label %234, !prof !7

233:                                              ; preds = %228
  tail call void @_ZN4base8internal13SpinningMutex9FutexWakeEv(%"class.base::internal::SpinningMutex"* %176) #17
  br label %234

234:                                              ; preds = %233, %228
  %235 = load i8*, i8** %173, align 8
  %236 = icmp eq i8* %235, null
  br i1 %236, label %238, label %237, !prof !6

237:                                              ; preds = %234
  call void @_ZN4base8internal13DeferredUnmap5UnmapEv(%"struct.base::internal::DeferredUnmap"* nonnull %2) #17
  br label %238

238:                                              ; preds = %237, %234
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %172) #17
  br label %239

239:                                              ; preds = %1, %94, %95, %98, %165, %170, %238
  ret void
}

declare void @_ZN4base8internal6PCScan11PerformScanENS1_14InvocationModeE(%"class.base::internal::PCScan"*, i32) local_unnamed_addr #2

declare void @_ZN4base8internal11ThreadCache11ClearBucketERNS1_6BucketEm(%"class.base::internal::ThreadCache"*, %"struct.base::internal::ThreadCache::Bucket"* dereferenceable(16), i64) local_unnamed_addr #2

declare void @_ZN4base8internal11ThreadCache13PurgeInternalEv(%"class.base::internal::ThreadCache"*) local_unnamed_addr #2

declare { i8*, i64 } @_ZN4base8internal16SlotSpanMetadataILb1EE12FreeSlowPathEv(%"struct.base::internal::SlotSpanMetadata"*) local_unnamed_addr #2

declare void @_ZN4base8internal13DeferredUnmap5UnmapEv(%"struct.base::internal::DeferredUnmap"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define internal fastcc void @_ZNSt3__116allocator_traitsIN4base8internal17MetadataAllocatorINS2_15RacefulWorklistINS2_12_GLOBAL__N_114PCScanSnapshot8ScanAreaEE4NodeEEEE10deallocateERSA_PS9_m(%"struct.base::internal::RacefulWorklist<base::internal::(anonymous namespace)::PCScanSnapshot::ScanArea>::Node"*) unnamed_addr #3 align 2 {
  %2 = alloca %"struct.base::internal::DeferredUnmap", align 8
  %3 = tail call dereferenceable(5408) %"struct.base::PartitionRoot"* @_ZN4base8internal23PCScanMetadataAllocatorEv() #17
  %4 = bitcast %"struct.base::internal::RacefulWorklist<base::internal::(anonymous namespace)::PCScanSnapshot::ScanArea>::Node"* %0 to i8*
  %5 = icmp eq %"struct.base::internal::RacefulWorklist<base::internal::(anonymous namespace)::PCScanSnapshot::ScanArea>::Node"* %0, null
  br i1 %5, label %239, label %6, !prof !7

6:                                                ; preds = %1
  tail call void @llvm.prefetch(i8* nonnull %4, i32 0, i32 3, i32 1) #17
  %7 = ptrtoint %"struct.base::internal::RacefulWorklist<base::internal::(anonymous namespace)::PCScanSnapshot::ScanArea>::Node"* %0 to i64
  %8 = and i64 %7, -2097152
  %9 = or i64 %8, 4096
  %10 = inttoptr i64 %9 to i8*
  %11 = lshr i64 %7, 9
  %12 = and i64 %11, 4064
  %13 = getelementptr inbounds i8, i8* %10, i64 %12
  %14 = bitcast i8* %13 to %"struct.base::internal::PartitionPage"*
  %15 = getelementptr inbounds i8, i8* %13, i64 30
  %16 = load i8, i8* %15, align 2
  %17 = zext i8 %16 to i64
  %18 = sub nsw i64 0, %17
  %19 = getelementptr inbounds %"struct.base::internal::PartitionPage", %"struct.base::internal::PartitionPage"* %14, i64 %18, i32 0
  %20 = bitcast %union.anon.123* %19 to %"struct.base::internal::SlotSpanMetadata"*
  %21 = bitcast %union.anon.123* %19 to i8*
  tail call void @llvm.prefetch(i8* %21, i32 0, i32 3, i32 1) #17
  %22 = ptrtoint %union.anon.123* %19 to i64
  %23 = and i64 %22, -4096
  %24 = inttoptr i64 %23 to %"struct.base::internal::PartitionSuperPageExtentEntry"*
  %25 = getelementptr inbounds %"struct.base::internal::PartitionSuperPageExtentEntry", %"struct.base::internal::PartitionSuperPageExtentEntry"* %24, i64 0, i32 0
  %26 = load %"struct.base::PartitionRoot"*, %"struct.base::PartitionRoot"** %25, align 4096
  %27 = getelementptr inbounds %"struct.base::PartitionRoot", %"struct.base::PartitionRoot"* %26, i64 0, i32 0
  %28 = load i8, i8* %27, align 8
  %29 = icmp eq i8 %28, 2
  br i1 %29, label %30, label %99, !prof !7

30:                                               ; preds = %6
  %31 = load atomic i8, i8* getelementptr inbounds (%"class.base::internal::PCScan", %"class.base::internal::PCScan"* @_ZN4base8internal6PCScan9instance_E, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0) acquire, align 8
  %32 = icmp eq i8 %31, 2
  br i1 %32, label %33, label %34, !prof !7

33:                                               ; preds = %30
  tail call void @_ZN4base8internal6PCScan8JoinScanEv() #17
  br label %34

34:                                               ; preds = %33, %30
  %35 = getelementptr inbounds %"struct.base::internal::PartitionPage", %"struct.base::internal::PartitionPage"* %14, i64 %18, i32 0, i32 1, i64 8
  %36 = bitcast i8* %35 to %"struct.base::internal::PartitionBucket"**
  %37 = load %"struct.base::internal::PartitionBucket"*, %"struct.base::internal::PartitionBucket"** %36, align 1
  %38 = getelementptr inbounds %"struct.base::PartitionRoot", %"struct.base::PartitionRoot"* %26, i64 0, i32 10, i64 0
  %39 = icmp ugt %"struct.base::internal::PartitionBucket"* %38, %37
  %40 = getelementptr inbounds %"struct.base::PartitionRoot", %"struct.base::PartitionRoot"* %26, i64 0, i32 11
  %41 = icmp ult %"struct.base::internal::PartitionBucket"* %40, %37
  %42 = or i1 %39, %41
  br i1 %42, label %99, label %43, !prof !7

43:                                               ; preds = %34
  %44 = getelementptr inbounds %"struct.base::internal::PartitionPage", %"struct.base::internal::PartitionPage"* %14, i64 %18, i32 0, i32 1, i64 21
  %45 = load i8, i8* %44, align 1, !range !5
  %46 = icmp eq i8 %45, 0
  br i1 %46, label %47, label %51, !prof !6

47:                                               ; preds = %43
  %48 = getelementptr inbounds %"struct.base::internal::PartitionBucket", %"struct.base::internal::PartitionBucket"* %37, i64 0, i32 3
  %49 = load i32, i32* %48, align 8
  %50 = zext i32 %49 to i64
  br label %58

51:                                               ; preds = %43
  %52 = bitcast %union.anon.123* %19 to %"struct.base::internal::PartitionPage"*
  %53 = getelementptr inbounds %"struct.base::internal::PartitionPage", %"struct.base::internal::PartitionPage"* %52, i64 1, i32 0, i32 0, i32 0
  %54 = load i64, i64* %53, align 1
  %55 = getelementptr inbounds %"struct.base::internal::PartitionBucket", %"struct.base::internal::PartitionBucket"* %37, i64 0, i32 3
  %56 = load i32, i32* %55, align 8
  %57 = zext i32 %56 to i64
  br label %58

58:                                               ; preds = %51, %47
  %59 = phi i64 [ %50, %47 ], [ %57, %51 ]
  %60 = phi i64 [ %50, %47 ], [ %54, %51 ]
  %61 = load atomic i64, i64* getelementptr inbounds (%"class.base::internal::PCScan", %"class.base::internal::PCScan"* @_ZN4base8internal6PCScan9instance_E, i64 0, i32 0, i32 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 8
  %62 = inttoptr i64 %8 to i8*
  %63 = and i64 %61, 1
  %64 = icmp eq i64 %63, 0
  %65 = select i1 %64, i64 16384, i64 32768
  %66 = getelementptr inbounds i8, i8* %62, i64 %65
  %67 = bitcast i8* %66 to %"class.base::internal::ObjectBitmap"*
  %68 = lshr i64 %7, 4
  %69 = lshr i64 %7, 10
  %70 = and i64 %69, 2047
  %71 = and i64 %68, 63
  %72 = shl i64 1, %71
  %73 = getelementptr inbounds %"class.base::internal::ObjectBitmap", %"class.base::internal::ObjectBitmap"* %67, i64 0, i32 0, i32 0, i64 %70
  %74 = atomicrmw or i64* %73, i64 %72 monotonic
  %75 = and i64 %74, %72
  %76 = icmp eq i64 %75, 0
  br i1 %76, label %78, label %77, !prof !6

77:                                               ; preds = %58
  notail call void @_ZN4base8internal17DoubleFreeAttemptEv() #18
  unreachable

78:                                               ; preds = %58
  %79 = atomicrmw add i64* getelementptr inbounds (%"class.base::internal::PCScan", %"class.base::internal::PCScan"* @_ZN4base8internal6PCScan9instance_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0), i64 %59 monotonic
  %80 = add i64 %79, %59
  %81 = load atomic i64, i64* getelementptr inbounds (%"class.base::internal::PCScan", %"class.base::internal::PCScan"* @_ZN4base8internal6PCScan9instance_E, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 8
  %82 = icmp ugt i64 %80, %81
  br i1 %82, label %83, label %89

83:                                               ; preds = %78
  %84 = load %"class.base::internal::PCScanSchedulingBackend"*, %"class.base::internal::PCScanSchedulingBackend"** getelementptr inbounds (%"class.base::internal::PCScan", %"class.base::internal::PCScan"* @_ZN4base8internal6PCScan9instance_E, i64 0, i32 0, i32 2), align 8
  %85 = bitcast %"class.base::internal::PCScanSchedulingBackend"* %84 to i1 (%"class.base::internal::PCScanSchedulingBackend"*)***
  %86 = load i1 (%"class.base::internal::PCScanSchedulingBackend"*)**, i1 (%"class.base::internal::PCScanSchedulingBackend"*)*** %85, align 8
  %87 = load i1 (%"class.base::internal::PCScanSchedulingBackend"*)*, i1 (%"class.base::internal::PCScanSchedulingBackend"*)** %86, align 8
  %88 = tail call zeroext i1 %87(%"class.base::internal::PCScanSchedulingBackend"* %84) #17
  br label %89

89:                                               ; preds = %83, %78
  %90 = phi i1 [ false, %78 ], [ %88, %83 ]
  %91 = load i8, i8* getelementptr inbounds (%"class.base::internal::PCScan", %"class.base::internal::PCScan"* @_ZN4base8internal6PCScan9instance_E, i64 0, i32 2), align 1
  %92 = icmp eq i8 %91, 1
  br i1 %92, label %93, label %94

93:                                               ; preds = %89
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 1 %4, i8 0, i64 %60, i1 false) #17
  br label %94

94:                                               ; preds = %93, %89
  br i1 %90, label %95, label %239, !prof !7

95:                                               ; preds = %94
  %96 = load atomic i8, i8* getelementptr inbounds (%"class.base::internal::PCScan", %"class.base::internal::PCScan"* @_ZN4base8internal6PCScan9instance_E, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0) monotonic, align 8
  %97 = icmp eq i8 %96, 0
  br i1 %97, label %98, label %239

98:                                               ; preds = %95
  tail call void @_ZN4base8internal6PCScan11PerformScanENS1_14InvocationModeE(%"class.base::internal::PCScan"* nonnull @_ZN4base8internal6PCScan9instance_E, i32 1) #17
  br label %239

99:                                               ; preds = %34, %6
  %100 = getelementptr inbounds %"struct.base::PartitionRoot", %"struct.base::PartitionRoot"* %26, i64 0, i32 2
  %101 = load i8, i8* %100, align 2, !range !5
  %102 = icmp eq i8 %101, 0
  br i1 %102, label %171, label %103, !prof !7

103:                                              ; preds = %99
  %104 = getelementptr inbounds %"struct.base::internal::PartitionPage", %"struct.base::internal::PartitionPage"* %14, i64 %18, i32 0, i32 1, i64 8
  %105 = bitcast i8* %104 to %"struct.base::internal::PartitionBucket"**
  %106 = load %"struct.base::internal::PartitionBucket"*, %"struct.base::internal::PartitionBucket"** %105, align 1
  %107 = getelementptr inbounds %"struct.base::PartitionRoot", %"struct.base::PartitionRoot"* %26, i64 0, i32 10, i64 0
  %108 = icmp ule %"struct.base::internal::PartitionBucket"* %107, %106
  %109 = getelementptr inbounds %"struct.base::PartitionRoot", %"struct.base::PartitionRoot"* %26, i64 0, i32 11
  %110 = icmp uge %"struct.base::internal::PartitionBucket"* %109, %106
  %111 = and i1 %110, %108
  %112 = ptrtoint %"struct.base::internal::PartitionBucket"* %106 to i64
  br i1 %111, label %113, label %171, !prof !6

113:                                              ; preds = %103
  %114 = load i32, i32* @_ZN4base8internal18g_thread_cache_keyE, align 4
  %115 = tail call i8* @pthread_getspecific(i32 %114) #17
  %116 = bitcast i8* %115 to %"class.base::internal::ThreadCache"*
  %117 = icmp ugt i8* %115, inttoptr (i64 1 to i8*)
  br i1 %117, label %118, label %171, !prof !6

118:                                              ; preds = %113
  %119 = ptrtoint %"struct.base::internal::PartitionBucket"* %107 to i64
  %120 = sub i64 %112, %119
  %121 = sdiv exact i64 %120, 40
  %122 = getelementptr inbounds i8, i8* %115, i64 1480
  %123 = bitcast i8* %122 to i64*
  %124 = load i64, i64* %123, align 8
  %125 = add i64 %124, 1
  store i64 %125, i64* %123, align 8
  %126 = load i16, i16* @_ZN4base8internal11ThreadCache28largest_active_bucket_index_E, align 2
  %127 = zext i16 %126 to i64
  %128 = icmp ugt i64 %121, %127
  br i1 %128, label %129, label %134, !prof !7

129:                                              ; preds = %118
  %130 = getelementptr inbounds i8, i8* %115, i64 1496
  %131 = bitcast i8* %130 to i64*
  %132 = load i64, i64* %131, align 8
  %133 = add i64 %132, 1
  store i64 %133, i64* %131, align 8
  br label %171

134:                                              ; preds = %118
  %135 = getelementptr inbounds %"class.base::internal::ThreadCache", %"class.base::internal::ThreadCache"* %116, i64 0, i32 0, i64 %121
  %136 = bitcast %"struct.base::internal::ThreadCache::Bucket"* %135 to i64*
  %137 = load i64, i64* %136, align 8
  %138 = tail call i64 @llvm.bswap.i64(i64 %137) #17
  %139 = inttoptr i64 %138 to %"struct.base::internal::EncodedPartitionFreelistEntry"*
  %140 = bitcast %"struct.base::internal::RacefulWorklist<base::internal::(anonymous namespace)::PCScanSnapshot::ScanArea>::Node"* %0 to %"struct.base::internal::EncodedPartitionFreelistEntry"**
  store %"struct.base::internal::EncodedPartitionFreelistEntry"* %139, %"struct.base::internal::EncodedPartitionFreelistEntry"** %140, align 8
  %141 = xor i64 %138, -1
  %142 = getelementptr inbounds %"struct.base::internal::RacefulWorklist<base::internal::(anonymous namespace)::PCScanSnapshot::ScanArea>::Node", %"struct.base::internal::RacefulWorklist<base::internal::(anonymous namespace)::PCScanSnapshot::ScanArea>::Node"* %0, i64 0, i32 0, i32 1
  %143 = bitcast i64** %142 to i64*
  store i64 %141, i64* %143, align 8
  %144 = bitcast %"struct.base::internal::ThreadCache::Bucket"* %135 to %"struct.base::internal::RacefulWorklist<base::internal::(anonymous namespace)::PCScanSnapshot::ScanArea>::Node"**
  store %"struct.base::internal::RacefulWorklist<base::internal::(anonymous namespace)::PCScanSnapshot::ScanArea>::Node"* %0, %"struct.base::internal::RacefulWorklist<base::internal::(anonymous namespace)::PCScanSnapshot::ScanArea>::Node"** %144, align 8
  %145 = getelementptr inbounds %"class.base::internal::ThreadCache", %"class.base::internal::ThreadCache"* %116, i64 0, i32 0, i64 %121, i32 1
  %146 = load i8, i8* %145, align 8
  %147 = add i8 %146, 1
  store i8 %147, i8* %145, align 8
  %148 = getelementptr inbounds %"class.base::internal::ThreadCache", %"class.base::internal::ThreadCache"* %116, i64 0, i32 0, i64 %121, i32 3
  %149 = load i16, i16* %148, align 2
  %150 = zext i16 %149 to i64
  %151 = getelementptr inbounds i8, i8* %115, i64 1424
  %152 = bitcast i8* %151 to i64*
  %153 = load i64, i64* %152, align 8
  %154 = add i64 %153, %150
  store i64 %154, i64* %152, align 8
  %155 = getelementptr inbounds i8, i8* %115, i64 1488
  %156 = bitcast i8* %155 to i64*
  %157 = load i64, i64* %156, align 8
  %158 = add i64 %157, 1
  store i64 %158, i64* %156, align 8
  %159 = getelementptr inbounds %"class.base::internal::ThreadCache", %"class.base::internal::ThreadCache"* %116, i64 0, i32 0, i64 %121, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %160 = load atomic i8, i8* %159 monotonic, align 1
  %161 = icmp ugt i8 %147, %160
  br i1 %161, label %162, label %165, !prof !7

162:                                              ; preds = %134
  %163 = lshr i8 %160, 1
  %164 = zext i8 %163 to i64
  tail call void @_ZN4base8internal11ThreadCache11ClearBucketERNS1_6BucketEm(%"class.base::internal::ThreadCache"* %116, %"struct.base::internal::ThreadCache::Bucket"* dereferenceable(16) %135, i64 %164) #17
  br label %165

165:                                              ; preds = %162, %134
  %166 = getelementptr inbounds i8, i8* %115, i64 1432
  %167 = load atomic i8, i8* %166 monotonic, align 1
  %168 = and i8 %167, 1
  %169 = icmp eq i8 %168, 0
  br i1 %169, label %239, label %170, !prof !6

170:                                              ; preds = %165
  tail call void @_ZN4base8internal11ThreadCache13PurgeInternalEv(%"class.base::internal::ThreadCache"* %116) #17
  br label %239

171:                                              ; preds = %129, %113, %103, %99
  %172 = bitcast %"struct.base::internal::DeferredUnmap"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %172) #17
  %173 = getelementptr inbounds %"struct.base::internal::DeferredUnmap", %"struct.base::internal::DeferredUnmap"* %2, i64 0, i32 0
  %174 = getelementptr inbounds %"struct.base::internal::DeferredUnmap", %"struct.base::internal::DeferredUnmap"* %2, i64 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %172, i8 0, i64 16, i1 false) #17
  %175 = getelementptr inbounds %"struct.base::PartitionRoot", %"struct.base::PartitionRoot"* %26, i64 0, i32 8
  %176 = getelementptr inbounds %"class.base::internal::MaybeSpinLock", %"class.base::internal::MaybeSpinLock"* %175, i64 0, i32 0
  %177 = getelementptr inbounds %"class.base::internal::MaybeSpinLock", %"class.base::internal::MaybeSpinLock"* %175, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  br label %178

178:                                              ; preds = %190, %171
  %179 = phi i32 [ 0, %171 ], [ %191, %190 ]
  %180 = phi i32 [ 1, %171 ], [ %194, %190 ]
  %181 = load atomic i32, i32* %177 monotonic, align 4
  %182 = icmp eq i32 %181, 0
  br i1 %182, label %183, label %186, !prof !9

183:                                              ; preds = %178
  %184 = cmpxchg weak i32* %177, i32 0, i32 1 acquire monotonic
  %185 = extractvalue { i32, i1 } %184, 1
  br i1 %185, label %201, label %186, !prof !6

186:                                              ; preds = %183, %178
  %187 = icmp sgt i32 %180, 0
  br i1 %187, label %196, label %190

188:                                              ; preds = %196
  %189 = add i32 %180, %179
  br label %190

190:                                              ; preds = %188, %186
  %191 = phi i32 [ %179, %186 ], [ %189, %188 ]
  %192 = shl i32 %180, 1
  %193 = icmp slt i32 %192, 64
  %194 = select i1 %193, i32 %192, i32 64
  %195 = icmp slt i32 %191, 1000
  br i1 %195, label %178, label %200

196:                                              ; preds = %186, %196
  %197 = phi i32 [ %198, %196 ], [ 0, %186 ]
  tail call void asm sideeffect "pause", "~{dirflag},~{fpsr},~{flags}"() #17, !srcloc !10
  %198 = add nuw nsw i32 %197, 1
  %199 = icmp eq i32 %198, %180
  br i1 %199, label %188, label %196

200:                                              ; preds = %190
  tail call void @_ZN4base8internal13SpinningMutex8LockSlowEv(%"class.base::internal::SpinningMutex"* %176) #17
  br label %201

201:                                              ; preds = %183, %200
  %202 = bitcast %union.anon.123* %19 to i8**
  %203 = load i8*, i8** %202, align 1
  %204 = icmp eq i8* %203, %4
  br i1 %204, label %207, label %205, !prof !7

205:                                              ; preds = %201
  %206 = ptrtoint i8* %203 to i64
  br label %210

207:                                              ; preds = %201
  tail call void @_ZN7logging8RawCheckEPKc(i8* getelementptr inbounds ([105 x i8], [105 x i8]* @.str.15, i64 0, i64 0)) #17
  %208 = getelementptr inbounds %union.anon.123, %union.anon.123* %19, i64 0, i32 0, i32 0
  %209 = load i64, i64* %208, align 1
  br label %210

210:                                              ; preds = %207, %205
  %211 = phi i64 [ %206, %205 ], [ %209, %207 ]
  %212 = tail call i64 @llvm.bswap.i64(i64 %211) #17
  %213 = inttoptr i64 %212 to %"struct.base::internal::EncodedPartitionFreelistEntry"*
  %214 = bitcast %"struct.base::internal::RacefulWorklist<base::internal::(anonymous namespace)::PCScanSnapshot::ScanArea>::Node"* %0 to %"struct.base::internal::EncodedPartitionFreelistEntry"**
  store %"struct.base::internal::EncodedPartitionFreelistEntry"* %213, %"struct.base::internal::EncodedPartitionFreelistEntry"** %214, align 8
  %215 = xor i64 %212, -1
  %216 = getelementptr inbounds %"struct.base::internal::RacefulWorklist<base::internal::(anonymous namespace)::PCScanSnapshot::ScanArea>::Node", %"struct.base::internal::RacefulWorklist<base::internal::(anonymous namespace)::PCScanSnapshot::ScanArea>::Node"* %0, i64 0, i32 0, i32 1
  %217 = bitcast i64** %216 to i64*
  store i64 %215, i64* %217, align 8
  %218 = bitcast %union.anon.123* %19 to %"struct.base::internal::RacefulWorklist<base::internal::(anonymous namespace)::PCScanSnapshot::ScanArea>::Node"**
  store %"struct.base::internal::RacefulWorklist<base::internal::(anonymous namespace)::PCScanSnapshot::ScanArea>::Node"* %0, %"struct.base::internal::RacefulWorklist<base::internal::(anonymous namespace)::PCScanSnapshot::ScanArea>::Node"** %218, align 1
  %219 = getelementptr inbounds %"struct.base::internal::PartitionPage", %"struct.base::internal::PartitionPage"* %14, i64 %18, i32 0, i32 1, i64 16
  %220 = bitcast i8* %219 to i16*
  %221 = load i16, i16* %220, align 1
  %222 = add i16 %221, -1
  store i16 %222, i16* %220, align 1
  %223 = icmp slt i16 %222, 1
  br i1 %223, label %224, label %228, !prof !7

224:                                              ; preds = %210
  %225 = tail call { i8*, i64 } @_ZN4base8internal16SlotSpanMetadataILb1EE12FreeSlowPathEv(%"struct.base::internal::SlotSpanMetadata"* %20) #17
  %226 = extractvalue { i8*, i64 } %225, 0
  %227 = extractvalue { i8*, i64 } %225, 1
  br label %228

228:                                              ; preds = %224, %210
  %229 = phi i8* [ %226, %224 ], [ null, %210 ]
  %230 = phi i64 [ %227, %224 ], [ 0, %210 ]
  store i8* %229, i8** %173, align 8
  store i64 %230, i64* %174, align 8
  %231 = atomicrmw xchg i32* %177, i32 0 release
  %232 = icmp eq i32 %231, 2
  br i1 %232, label %233, label %234, !prof !7

233:                                              ; preds = %228
  tail call void @_ZN4base8internal13SpinningMutex9FutexWakeEv(%"class.base::internal::SpinningMutex"* %176) #17
  br label %234

234:                                              ; preds = %233, %228
  %235 = load i8*, i8** %173, align 8
  %236 = icmp eq i8* %235, null
  br i1 %236, label %238, label %237, !prof !6

237:                                              ; preds = %234
  call void @_ZN4base8internal13DeferredUnmap5UnmapEv(%"struct.base::internal::DeferredUnmap"* nonnull %2) #17
  br label %238

238:                                              ; preds = %237, %234
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %172) #17
  br label %239

239:                                              ; preds = %1, %94, %95, %98, %165, %170, %238
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.std::__1::__tree_node"* @_ZN4base8internal17MetadataAllocatorINSt3__111__tree_nodeImPvEEE8allocateEm(%"class.base::internal::MetadataAllocator"*, i64) local_unnamed_addr #3 comdat align 2 {
  %3 = alloca i8, align 1
  %4 = alloca i64, align 8
  %5 = tail call dereferenceable(5408) %"struct.base::PartitionRoot"* @_ZN4base8internal23PCScanMetadataAllocatorEv() #17
  %6 = mul i64 %1, 40
  %7 = tail call i64 @llvm.ctlz.i64(i64 %6, i1 false) #17, !range !4
  %8 = sub nuw nsw i64 64, %7
  %9 = and i64 %8, 255
  %10 = getelementptr inbounds [65 x i8], [65 x i8]* @_ZN4base12_GLOBAL__N_116kOrderIndexShiftE, i64 0, i64 %9
  %11 = load i8, i8* %10, align 1
  %12 = zext i8 %11 to i64
  %13 = lshr i64 %6, %12
  %14 = and i64 %13, 7
  %15 = getelementptr inbounds [65 x i64], [65 x i64]* @_ZN4base12_GLOBAL__N_118kOrderSubIndexMaskE, i64 0, i64 %9
  %16 = load i64, i64* %15, align 8
  %17 = and i64 %16, %6
  %18 = shl nuw nsw i64 %9, 3
  %19 = or i64 %14, %18
  %20 = icmp ne i64 %17, 0
  %21 = zext i1 %20 to i64
  %22 = add nuw nsw i64 %19, %21
  %23 = getelementptr inbounds { [128 x i64], [521 x i16] }, { [128 x i64], [521 x i16] }* @_ZZN4base8internal17BucketIndexLookup8GetIndexEmE6lookup, i64 0, i32 1, i64 %22
  %24 = load i16, i16* %23, align 2
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %3) #17
  store i8 0, i8* %3, align 1
  %25 = bitcast i64* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %25) #17
  store i64 -6148914691236517206, i64* %4, align 8
  %26 = getelementptr inbounds %"struct.base::PartitionRoot", %"struct.base::PartitionRoot"* %5, i64 0, i32 0
  %27 = load i8, i8* %26, align 8
  %28 = icmp eq i8 %27, 2
  br i1 %28, label %29, label %33

29:                                               ; preds = %2
  %30 = load atomic i8, i8* getelementptr inbounds (%"class.base::internal::PCScan", %"class.base::internal::PCScan"* @_ZN4base8internal6PCScan9instance_E, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0) acquire, align 8
  %31 = icmp eq i8 %30, 2
  br i1 %31, label %32, label %33, !prof !7

32:                                               ; preds = %29
  tail call void @_ZN4base8internal6PCScan8JoinScanEv() #17
  br label %33

33:                                               ; preds = %32, %29, %2
  %34 = getelementptr inbounds %"struct.base::PartitionRoot", %"struct.base::PartitionRoot"* %5, i64 0, i32 2
  %35 = load i8, i8* %34, align 2, !range !5
  %36 = icmp eq i8 %35, 0
  br i1 %36, label %185, label %37, !prof !19

37:                                               ; preds = %33
  %38 = load i32, i32* @_ZN4base8internal18g_thread_cache_keyE, align 4
  %39 = tail call i8* @pthread_getspecific(i32 %38) #17
  %40 = bitcast i8* %39 to %"class.base::internal::ThreadCache"*
  %41 = icmp ugt i8* %39, inttoptr (i64 1 to i8*)
  br i1 %41, label %42, label %112, !prof !6

42:                                               ; preds = %37
  %43 = zext i16 %24 to i64
  %44 = getelementptr inbounds %"class.base::internal::ThreadCache", %"class.base::internal::ThreadCache"* %40, i64 0, i32 3, i32 12, i64 %43
  %45 = load i64, i64* %44, align 8
  %46 = add i64 %45, 1
  store i64 %46, i64* %44, align 8
  %47 = getelementptr inbounds i8, i8* %39, i64 1440
  %48 = bitcast i8* %47 to i64*
  %49 = load i64, i64* %48, align 8
  %50 = add i64 %49, 1
  store i64 %50, i64* %48, align 8
  %51 = load i16, i16* @_ZN4base8internal11ThreadCache28largest_active_bucket_index_E, align 2
  %52 = icmp ult i16 %51, %24
  br i1 %52, label %53, label %62, !prof !7

53:                                               ; preds = %42
  %54 = getelementptr inbounds i8, i8* %39, i64 1472
  %55 = bitcast i8* %54 to i64*
  %56 = load i64, i64* %55, align 8
  %57 = add i64 %56, 1
  store i64 %57, i64* %55, align 8
  %58 = getelementptr inbounds i8, i8* %39, i64 1456
  %59 = bitcast i8* %58 to i64*
  %60 = load i64, i64* %59, align 8
  %61 = add i64 %60, 1
  store i64 %61, i64* %59, align 8
  br label %119

62:                                               ; preds = %42
  %63 = getelementptr inbounds %"class.base::internal::ThreadCache", %"class.base::internal::ThreadCache"* %40, i64 0, i32 0, i64 %43, i32 0
  %64 = load %"class.base::internal::PartitionFreelistEntry"*, %"class.base::internal::PartitionFreelistEntry"** %63, align 8
  %65 = icmp eq %"class.base::internal::PartitionFreelistEntry"* %64, null
  br i1 %65, label %71, label %66, !prof !7

66:                                               ; preds = %62
  %67 = getelementptr inbounds i8, i8* %39, i64 1448
  %68 = bitcast i8* %67 to i64*
  %69 = load i64, i64* %68, align 8
  %70 = add i64 %69, 1
  store i64 %70, i64* %68, align 8
  br label %79

71:                                               ; preds = %62
  %72 = getelementptr inbounds i8, i8* %39, i64 1456
  %73 = bitcast i8* %72 to <2 x i64>*
  %74 = load <2 x i64>, <2 x i64>* %73, align 8
  %75 = add <2 x i64> %74, <i64 1, i64 1>
  %76 = bitcast i8* %72 to <2 x i64>*
  store <2 x i64> %75, <2 x i64>* %76, align 8
  tail call void @_ZN4base8internal11ThreadCache10FillBucketEm(%"class.base::internal::ThreadCache"* %40, i64 %43) #17
  %77 = load %"class.base::internal::PartitionFreelistEntry"*, %"class.base::internal::PartitionFreelistEntry"** %63, align 8
  %78 = icmp eq %"class.base::internal::PartitionFreelistEntry"* %77, null
  br i1 %78, label %119, label %79, !prof !7

79:                                               ; preds = %71, %66
  %80 = phi %"class.base::internal::PartitionFreelistEntry"* [ %77, %71 ], [ %64, %66 ]
  %81 = getelementptr inbounds %"class.base::internal::PartitionFreelistEntry", %"class.base::internal::PartitionFreelistEntry"* %80, i64 0, i32 0
  %82 = load %"struct.base::internal::EncodedPartitionFreelistEntry"*, %"struct.base::internal::EncodedPartitionFreelistEntry"** %81, align 8
  %83 = icmp eq %"struct.base::internal::EncodedPartitionFreelistEntry"* %82, null
  %84 = ptrtoint %"struct.base::internal::EncodedPartitionFreelistEntry"* %82 to i64
  br i1 %83, label %85, label %87

85:                                               ; preds = %79
  %86 = tail call i64 @llvm.bswap.i64(i64 %84) #17
  br label %96

87:                                               ; preds = %79
  %88 = xor i64 %84, -1
  %89 = getelementptr inbounds %"class.base::internal::PartitionFreelistEntry", %"class.base::internal::PartitionFreelistEntry"* %80, i64 0, i32 1
  %90 = load i64, i64* %89, align 8
  %91 = icmp eq i64 %90, %88
  br i1 %91, label %93, label %92, !prof !6

92:                                               ; preds = %87
  tail call fastcc void @_ZN4base8internal12_GLOBAL__N_126FreelistCorruptionDetectedEv() #18
  unreachable

93:                                               ; preds = %87
  %94 = tail call i64 @llvm.bswap.i64(i64 %84) #17
  %95 = inttoptr i64 %94 to i8*
  tail call void @llvm.prefetch(i8* nonnull %95, i32 0, i32 3, i32 1) #17
  br label %96

96:                                               ; preds = %93, %85
  %97 = phi i64 [ %86, %85 ], [ %94, %93 ]
  %98 = inttoptr i64 %97 to %"class.base::internal::PartitionFreelistEntry"*
  %99 = getelementptr inbounds %"class.base::internal::ThreadCache", %"class.base::internal::ThreadCache"* %40, i64 0, i32 0, i64 %43, i32 1
  %100 = load i8, i8* %99, align 8
  %101 = add i8 %100, -1
  store i8 %101, i8* %99, align 8
  store %"class.base::internal::PartitionFreelistEntry"* %98, %"class.base::internal::PartitionFreelistEntry"** %63, align 8
  %102 = getelementptr inbounds %"class.base::internal::ThreadCache", %"class.base::internal::ThreadCache"* %40, i64 0, i32 0, i64 %43, i32 3
  %103 = load i16, i16* %102, align 2
  %104 = zext i16 %103 to i64
  store i64 %104, i64* %4, align 8
  %105 = load i16, i16* %102, align 2
  %106 = zext i16 %105 to i64
  %107 = getelementptr inbounds i8, i8* %39, i64 1424
  %108 = bitcast i8* %107 to i64*
  %109 = load i64, i64* %108, align 8
  %110 = sub i64 %109, %106
  store i64 %110, i64* %108, align 8
  %111 = bitcast %"class.base::internal::PartitionFreelistEntry"* %80 to i8*
  br label %114

112:                                              ; preds = %37
  %113 = call i8* @_ZN4base13PartitionRootILb1EE28MaybeInitThreadCacheAndAllocEtPm(%"struct.base::PartitionRoot"* %5, i16 zeroext %24, i64* nonnull %4) #17
  br label %114

114:                                              ; preds = %112, %96
  %115 = phi i8* [ %113, %112 ], [ %111, %96 ]
  %116 = icmp eq i8* %115, null
  br i1 %116, label %117, label %254, !prof !7

117:                                              ; preds = %114
  %118 = zext i16 %24 to i64
  br label %119

119:                                              ; preds = %117, %71, %53
  %120 = phi i64 [ %118, %117 ], [ %43, %71 ], [ %43, %53 ]
  %121 = getelementptr inbounds %"struct.base::PartitionRoot", %"struct.base::PartitionRoot"* %5, i64 0, i32 10, i64 %120
  %122 = getelementptr inbounds %"struct.base::PartitionRoot", %"struct.base::PartitionRoot"* %5, i64 0, i32 8
  %123 = getelementptr inbounds %"class.base::internal::MaybeSpinLock", %"class.base::internal::MaybeSpinLock"* %122, i64 0, i32 0
  %124 = getelementptr inbounds %"class.base::internal::MaybeSpinLock", %"class.base::internal::MaybeSpinLock"* %122, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  br label %125

125:                                              ; preds = %137, %119
  %126 = phi i32 [ 0, %119 ], [ %138, %137 ]
  %127 = phi i32 [ 1, %119 ], [ %141, %137 ]
  %128 = load atomic i32, i32* %124 monotonic, align 4
  %129 = icmp eq i32 %128, 0
  br i1 %129, label %130, label %133, !prof !9

130:                                              ; preds = %125
  %131 = cmpxchg weak i32* %124, i32 0, i32 1 acquire monotonic
  %132 = extractvalue { i32, i1 } %131, 1
  br i1 %132, label %148, label %133, !prof !6

133:                                              ; preds = %130, %125
  %134 = icmp sgt i32 %127, 0
  br i1 %134, label %143, label %137

135:                                              ; preds = %143
  %136 = add i32 %127, %126
  br label %137

137:                                              ; preds = %135, %133
  %138 = phi i32 [ %126, %133 ], [ %136, %135 ]
  %139 = shl i32 %127, 1
  %140 = icmp slt i32 %139, 64
  %141 = select i1 %140, i32 %139, i32 64
  %142 = icmp slt i32 %138, 1000
  br i1 %142, label %125, label %147

143:                                              ; preds = %133, %143
  %144 = phi i32 [ %145, %143 ], [ 0, %133 ]
  call void asm sideeffect "pause", "~{dirflag},~{fpsr},~{flags}"() #17, !srcloc !10
  %145 = add nuw nsw i32 %144, 1
  %146 = icmp eq i32 %145, %127
  br i1 %146, label %135, label %143

147:                                              ; preds = %137
  call void @_ZN4base8internal13SpinningMutex8LockSlowEv(%"class.base::internal::SpinningMutex"* %123) #17
  br label %148

148:                                              ; preds = %130, %147
  %149 = getelementptr inbounds %"struct.base::internal::PartitionBucket", %"struct.base::internal::PartitionBucket"* %121, i64 0, i32 0
  %150 = load %"struct.base::internal::SlotSpanMetadata"*, %"struct.base::internal::SlotSpanMetadata"** %149, align 8
  %151 = bitcast %"struct.base::internal::SlotSpanMetadata"* %150 to i8**
  %152 = load i8*, i8** %151, align 1
  %153 = icmp eq i8* %152, null
  br i1 %153, label %178, label %154, !prof !7

154:                                              ; preds = %148
  %155 = getelementptr inbounds %"struct.base::internal::SlotSpanMetadata", %"struct.base::internal::SlotSpanMetadata"* %150, i64 0, i32 0
  store i8 0, i8* %3, align 1
  %156 = bitcast i8* %152 to %"struct.base::internal::EncodedPartitionFreelistEntry"**
  %157 = load %"struct.base::internal::EncodedPartitionFreelistEntry"*, %"struct.base::internal::EncodedPartitionFreelistEntry"** %156, align 8
  %158 = icmp eq %"struct.base::internal::EncodedPartitionFreelistEntry"* %157, null
  %159 = ptrtoint %"struct.base::internal::EncodedPartitionFreelistEntry"* %157 to i64
  br i1 %158, label %160, label %162

160:                                              ; preds = %154
  %161 = call i64 @llvm.bswap.i64(i64 %159) #17
  br label %172

162:                                              ; preds = %154
  %163 = xor i64 %159, -1
  %164 = getelementptr inbounds i8, i8* %152, i64 8
  %165 = bitcast i8* %164 to i64*
  %166 = load i64, i64* %165, align 8
  %167 = icmp eq i64 %166, %163
  br i1 %167, label %169, label %168, !prof !6

168:                                              ; preds = %162
  call fastcc void @_ZN4base8internal12_GLOBAL__N_126FreelistCorruptionDetectedEv() #18
  unreachable

169:                                              ; preds = %162
  %170 = call i64 @llvm.bswap.i64(i64 %159) #17
  %171 = inttoptr i64 %170 to i8*
  call void @llvm.prefetch(i8* nonnull %171, i32 0, i32 3, i32 1) #17
  br label %172

172:                                              ; preds = %169, %160
  %173 = phi i64 [ %161, %160 ], [ %170, %169 ]
  %174 = inttoptr i64 %173 to %"class.base::internal::PartitionFreelistEntry"*
  store %"class.base::internal::PartitionFreelistEntry"* %174, %"class.base::internal::PartitionFreelistEntry"** %155, align 1
  %175 = getelementptr inbounds %"struct.base::internal::SlotSpanMetadata", %"struct.base::internal::SlotSpanMetadata"* %150, i64 0, i32 3
  %176 = load i16, i16* %175, align 1
  %177 = add i16 %176, 1
  store i16 %177, i16* %175, align 1
  br label %180

178:                                              ; preds = %148
  %179 = call i8* @_ZN4base8internal15PartitionBucketILb1EE13SlowPathAllocEPNS_13PartitionRootILb1EEEimmPb(%"struct.base::internal::PartitionBucket"* %121, %"struct.base::PartitionRoot"* %5, i32 0, i64 %6, i64 16384, i8* nonnull %3) #17
  br label %180

180:                                              ; preds = %178, %172
  %181 = phi i8* [ %152, %172 ], [ %179, %178 ]
  %182 = atomicrmw xchg i32* %124, i32 0 release
  %183 = icmp eq i32 %182, 2
  br i1 %183, label %184, label %251, !prof !7

184:                                              ; preds = %180
  call void @_ZN4base8internal13SpinningMutex9FutexWakeEv(%"class.base::internal::SpinningMutex"* %123) #17
  br label %251

185:                                              ; preds = %33
  %186 = zext i16 %24 to i64
  %187 = getelementptr inbounds %"struct.base::PartitionRoot", %"struct.base::PartitionRoot"* %5, i64 0, i32 10, i64 %186
  %188 = getelementptr inbounds %"struct.base::PartitionRoot", %"struct.base::PartitionRoot"* %5, i64 0, i32 8
  %189 = getelementptr inbounds %"class.base::internal::MaybeSpinLock", %"class.base::internal::MaybeSpinLock"* %188, i64 0, i32 0
  %190 = getelementptr inbounds %"class.base::internal::MaybeSpinLock", %"class.base::internal::MaybeSpinLock"* %188, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  br label %191

191:                                              ; preds = %203, %185
  %192 = phi i32 [ 0, %185 ], [ %204, %203 ]
  %193 = phi i32 [ 1, %185 ], [ %207, %203 ]
  %194 = load atomic i32, i32* %190 monotonic, align 4
  %195 = icmp eq i32 %194, 0
  br i1 %195, label %196, label %199, !prof !9

196:                                              ; preds = %191
  %197 = cmpxchg weak i32* %190, i32 0, i32 1 acquire monotonic
  %198 = extractvalue { i32, i1 } %197, 1
  br i1 %198, label %214, label %199, !prof !6

199:                                              ; preds = %196, %191
  %200 = icmp sgt i32 %193, 0
  br i1 %200, label %209, label %203

201:                                              ; preds = %209
  %202 = add i32 %193, %192
  br label %203

203:                                              ; preds = %201, %199
  %204 = phi i32 [ %192, %199 ], [ %202, %201 ]
  %205 = shl i32 %193, 1
  %206 = icmp slt i32 %205, 64
  %207 = select i1 %206, i32 %205, i32 64
  %208 = icmp slt i32 %204, 1000
  br i1 %208, label %191, label %213

209:                                              ; preds = %199, %209
  %210 = phi i32 [ %211, %209 ], [ 0, %199 ]
  tail call void asm sideeffect "pause", "~{dirflag},~{fpsr},~{flags}"() #17, !srcloc !10
  %211 = add nuw nsw i32 %210, 1
  %212 = icmp eq i32 %211, %193
  br i1 %212, label %201, label %209

213:                                              ; preds = %203
  tail call void @_ZN4base8internal13SpinningMutex8LockSlowEv(%"class.base::internal::SpinningMutex"* %189) #17
  br label %214

214:                                              ; preds = %196, %213
  %215 = getelementptr inbounds %"struct.base::internal::PartitionBucket", %"struct.base::internal::PartitionBucket"* %187, i64 0, i32 0
  %216 = load %"struct.base::internal::SlotSpanMetadata"*, %"struct.base::internal::SlotSpanMetadata"** %215, align 8
  %217 = bitcast %"struct.base::internal::SlotSpanMetadata"* %216 to i8**
  %218 = load i8*, i8** %217, align 1
  %219 = icmp eq i8* %218, null
  br i1 %219, label %244, label %220, !prof !7

220:                                              ; preds = %214
  %221 = getelementptr inbounds %"struct.base::internal::SlotSpanMetadata", %"struct.base::internal::SlotSpanMetadata"* %216, i64 0, i32 0
  store i8 0, i8* %3, align 1
  %222 = bitcast i8* %218 to %"struct.base::internal::EncodedPartitionFreelistEntry"**
  %223 = load %"struct.base::internal::EncodedPartitionFreelistEntry"*, %"struct.base::internal::EncodedPartitionFreelistEntry"** %222, align 8
  %224 = icmp eq %"struct.base::internal::EncodedPartitionFreelistEntry"* %223, null
  %225 = ptrtoint %"struct.base::internal::EncodedPartitionFreelistEntry"* %223 to i64
  br i1 %224, label %226, label %228

226:                                              ; preds = %220
  %227 = tail call i64 @llvm.bswap.i64(i64 %225) #17
  br label %238

228:                                              ; preds = %220
  %229 = xor i64 %225, -1
  %230 = getelementptr inbounds i8, i8* %218, i64 8
  %231 = bitcast i8* %230 to i64*
  %232 = load i64, i64* %231, align 8
  %233 = icmp eq i64 %232, %229
  br i1 %233, label %235, label %234, !prof !6

234:                                              ; preds = %228
  tail call fastcc void @_ZN4base8internal12_GLOBAL__N_126FreelistCorruptionDetectedEv() #18
  unreachable

235:                                              ; preds = %228
  %236 = tail call i64 @llvm.bswap.i64(i64 %225) #17
  %237 = inttoptr i64 %236 to i8*
  tail call void @llvm.prefetch(i8* nonnull %237, i32 0, i32 3, i32 1) #17
  br label %238

238:                                              ; preds = %235, %226
  %239 = phi i64 [ %227, %226 ], [ %236, %235 ]
  %240 = inttoptr i64 %239 to %"class.base::internal::PartitionFreelistEntry"*
  store %"class.base::internal::PartitionFreelistEntry"* %240, %"class.base::internal::PartitionFreelistEntry"** %221, align 1
  %241 = getelementptr inbounds %"struct.base::internal::SlotSpanMetadata", %"struct.base::internal::SlotSpanMetadata"* %216, i64 0, i32 3
  %242 = load i16, i16* %241, align 1
  %243 = add i16 %242, 1
  store i16 %243, i16* %241, align 1
  br label %246

244:                                              ; preds = %214
  %245 = call i8* @_ZN4base8internal15PartitionBucketILb1EE13SlowPathAllocEPNS_13PartitionRootILb1EEEimmPb(%"struct.base::internal::PartitionBucket"* %187, %"struct.base::PartitionRoot"* %5, i32 0, i64 %6, i64 16384, i8* nonnull %3) #17
  br label %246

246:                                              ; preds = %244, %238
  %247 = phi i8* [ %218, %238 ], [ %245, %244 ]
  %248 = atomicrmw xchg i32* %190, i32 0 release
  %249 = icmp eq i32 %248, 2
  br i1 %249, label %250, label %251, !prof !7

250:                                              ; preds = %246
  call void @_ZN4base8internal13SpinningMutex9FutexWakeEv(%"class.base::internal::SpinningMutex"* %189) #17
  br label %251

251:                                              ; preds = %250, %246, %184, %180
  %252 = phi i8* [ %181, %180 ], [ %181, %184 ], [ %247, %246 ], [ %247, %250 ]
  %253 = icmp eq i8* %252, null
  br i1 %253, label %256, label %254, !prof !7

254:                                              ; preds = %114, %251
  %255 = phi i8* [ %252, %251 ], [ %115, %114 ]
  br label %256

256:                                              ; preds = %251, %254
  %257 = phi i8* [ null, %251 ], [ %255, %254 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %25) #17
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %3) #17
  %258 = bitcast i8* %257 to %"class.std::__1::__tree_node"*
  ret %"class.std::__1::__tree_node"* %258
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"*) local_unnamed_addr #3 comdat {
  %3 = icmp eq %"class.std::__1::__tree_node_base"* %1, %0
  %4 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %1, i64 0, i32 3
  %5 = zext i1 %3 to i8
  store i8 %5, i8* %4, align 8
  br i1 %3, label %156, label %6

6:                                                ; preds = %2, %149
  %7 = phi %"class.std::__1::__tree_node_base"* [ %20, %149 ], [ %1, %2 ]
  %8 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %7, i64 0, i32 2
  %9 = bitcast %"class.std::__1::__tree_end_node"** %8 to %"class.std::__1::__tree_node_base"**
  %10 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %9, align 8
  %11 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 3
  %12 = load i8, i8* %11, align 8, !range !5
  %13 = icmp eq i8 %12, 0
  br i1 %13, label %14, label %156

14:                                               ; preds = %6
  %15 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 2
  %16 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %15, align 8
  %17 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %16, i64 0, i32 0
  %18 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %17, align 8
  %19 = icmp eq %"class.std::__1::__tree_node_base"* %18, %10
  %20 = bitcast %"class.std::__1::__tree_end_node"* %16 to %"class.std::__1::__tree_node_base"*
  br i1 %19, label %21, label %87

21:                                               ; preds = %14
  %22 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %16, i64 1, i32 0
  %23 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %22, align 8
  %24 = icmp eq %"class.std::__1::__tree_node_base"* %23, null
  br i1 %24, label %29, label %25

25:                                               ; preds = %21
  %26 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %23, i64 0, i32 3
  %27 = load i8, i8* %26, align 8, !range !5
  %28 = icmp eq i8 %27, 0
  br i1 %28, label %149, label %29

29:                                               ; preds = %25, %21
  %30 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 2
  %31 = bitcast %"class.std::__1::__tree_end_node"* %16 to %"class.std::__1::__tree_node_base"*
  %32 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0, i32 0
  %33 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %32, align 8
  %34 = icmp eq %"class.std::__1::__tree_node_base"* %33, %7
  br i1 %34, label %61, label %35

35:                                               ; preds = %29
  %36 = ptrtoint %"class.std::__1::__tree_end_node"* %16 to i64
  %37 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 1
  %38 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %37, align 8
  %39 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %38, i64 0, i32 0, i32 0
  %40 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %39, align 8
  store %"class.std::__1::__tree_node_base"* %40, %"class.std::__1::__tree_node_base"** %37, align 8
  %41 = icmp eq %"class.std::__1::__tree_node_base"* %40, null
  br i1 %41, label %47, label %42

42:                                               ; preds = %35
  %43 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0
  %44 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %40, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %43, %"class.std::__1::__tree_end_node"** %44, align 8
  %45 = bitcast %"class.std::__1::__tree_end_node"** %30 to i64*
  %46 = load i64, i64* %45, align 8
  br label %47

47:                                               ; preds = %35, %42
  %48 = phi i64 [ %46, %42 ], [ %36, %35 ]
  %49 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %38, i64 0, i32 2
  %50 = bitcast %"class.std::__1::__tree_end_node"** %49 to i64*
  store i64 %48, i64* %50, align 8
  %51 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %30, align 8
  %52 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %51, i64 0, i32 0
  %53 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %52, align 8
  %54 = icmp eq %"class.std::__1::__tree_node_base"* %53, %10
  %55 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %51, i64 1, i32 0
  %56 = select i1 %54, %"class.std::__1::__tree_node_base"** %52, %"class.std::__1::__tree_node_base"** %55
  store %"class.std::__1::__tree_node_base"* %38, %"class.std::__1::__tree_node_base"** %56, align 8
  store %"class.std::__1::__tree_node_base"* %10, %"class.std::__1::__tree_node_base"** %39, align 8
  %57 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %38, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %57, %"class.std::__1::__tree_end_node"** %30, align 8
  %58 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %38, i64 0, i32 2
  %59 = bitcast %"class.std::__1::__tree_end_node"** %58 to %"class.std::__1::__tree_node_base"**
  %60 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %59, align 8
  br label %61

61:                                               ; preds = %47, %29
  %62 = phi %"class.std::__1::__tree_node_base"* [ %31, %29 ], [ %60, %47 ]
  %63 = phi %"class.std::__1::__tree_node_base"* [ %10, %29 ], [ %38, %47 ]
  %64 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %63, i64 0, i32 3
  store i8 1, i8* %64, align 8
  %65 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %62, i64 0, i32 3
  store i8 0, i8* %65, align 8
  %66 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %62, i64 0, i32 0, i32 0
  %67 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %66, align 8
  %68 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %67, i64 0, i32 1
  %69 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %68, align 8
  store %"class.std::__1::__tree_node_base"* %69, %"class.std::__1::__tree_node_base"** %66, align 8
  %70 = icmp eq %"class.std::__1::__tree_node_base"* %69, null
  br i1 %70, label %74, label %71

71:                                               ; preds = %61
  %72 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %62, i64 0, i32 0
  %73 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %69, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %72, %"class.std::__1::__tree_end_node"** %73, align 8
  br label %74

74:                                               ; preds = %71, %61
  %75 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %62, i64 0, i32 2
  %76 = bitcast %"class.std::__1::__tree_end_node"** %75 to i64*
  %77 = load i64, i64* %76, align 8
  %78 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %67, i64 0, i32 2
  %79 = bitcast %"class.std::__1::__tree_end_node"** %78 to i64*
  store i64 %77, i64* %79, align 8
  %80 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %75, align 8
  %81 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %80, i64 0, i32 0
  %82 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %81, align 8
  %83 = icmp eq %"class.std::__1::__tree_node_base"* %82, %62
  %84 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %80, i64 1, i32 0
  %85 = select i1 %83, %"class.std::__1::__tree_node_base"** %81, %"class.std::__1::__tree_node_base"** %84
  store %"class.std::__1::__tree_node_base"* %67, %"class.std::__1::__tree_node_base"** %85, align 8
  store %"class.std::__1::__tree_node_base"* %62, %"class.std::__1::__tree_node_base"** %68, align 8
  %86 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %67, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %86, %"class.std::__1::__tree_end_node"** %75, align 8
  br label %156

87:                                               ; preds = %14
  %88 = icmp eq %"class.std::__1::__tree_node_base"* %18, null
  br i1 %88, label %93, label %89

89:                                               ; preds = %87
  %90 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %18, i64 0, i32 3
  %91 = load i8, i8* %90, align 8, !range !5
  %92 = icmp eq i8 %91, 0
  br i1 %92, label %149, label %93

93:                                               ; preds = %89, %87
  %94 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 2
  %95 = bitcast %"class.std::__1::__tree_end_node"* %16 to %"class.std::__1::__tree_node_base"*
  %96 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0, i32 0
  %97 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %96, align 8
  %98 = icmp eq %"class.std::__1::__tree_node_base"* %97, %7
  br i1 %98, label %99, label %123

99:                                               ; preds = %93
  %100 = ptrtoint %"class.std::__1::__tree_end_node"* %16 to i64
  %101 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0, i32 0
  %102 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %7, i64 0, i32 1
  %103 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %102, align 8
  store %"class.std::__1::__tree_node_base"* %103, %"class.std::__1::__tree_node_base"** %101, align 8
  %104 = icmp eq %"class.std::__1::__tree_node_base"* %103, null
  br i1 %104, label %110, label %105

105:                                              ; preds = %99
  %106 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0
  %107 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %103, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %106, %"class.std::__1::__tree_end_node"** %107, align 8
  %108 = bitcast %"class.std::__1::__tree_end_node"** %94 to i64*
  %109 = load i64, i64* %108, align 8
  br label %110

110:                                              ; preds = %99, %105
  %111 = phi i64 [ %109, %105 ], [ %100, %99 ]
  %112 = bitcast %"class.std::__1::__tree_end_node"** %8 to i64*
  store i64 %111, i64* %112, align 8
  %113 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %94, align 8
  %114 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %113, i64 0, i32 0
  %115 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %114, align 8
  %116 = icmp eq %"class.std::__1::__tree_node_base"* %115, %10
  %117 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %113, i64 1, i32 0
  %118 = select i1 %116, %"class.std::__1::__tree_node_base"** %114, %"class.std::__1::__tree_node_base"** %117
  store %"class.std::__1::__tree_node_base"* %7, %"class.std::__1::__tree_node_base"** %118, align 8
  store %"class.std::__1::__tree_node_base"* %10, %"class.std::__1::__tree_node_base"** %102, align 8
  %119 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %7, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %119, %"class.std::__1::__tree_end_node"** %94, align 8
  %120 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %7, i64 0, i32 2
  %121 = bitcast %"class.std::__1::__tree_end_node"** %120 to %"class.std::__1::__tree_node_base"**
  %122 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %121, align 8
  br label %123

123:                                              ; preds = %93, %110
  %124 = phi %"class.std::__1::__tree_node_base"* [ %122, %110 ], [ %95, %93 ]
  %125 = phi %"class.std::__1::__tree_node_base"* [ %7, %110 ], [ %10, %93 ]
  %126 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %125, i64 0, i32 3
  store i8 1, i8* %126, align 8
  %127 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %124, i64 0, i32 3
  store i8 0, i8* %127, align 8
  %128 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %124, i64 0, i32 1
  %129 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %128, align 8
  %130 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %129, i64 0, i32 0, i32 0
  %131 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %130, align 8
  store %"class.std::__1::__tree_node_base"* %131, %"class.std::__1::__tree_node_base"** %128, align 8
  %132 = icmp eq %"class.std::__1::__tree_node_base"* %131, null
  br i1 %132, label %136, label %133

133:                                              ; preds = %123
  %134 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %124, i64 0, i32 0
  %135 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %131, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %134, %"class.std::__1::__tree_end_node"** %135, align 8
  br label %136

136:                                              ; preds = %133, %123
  %137 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %124, i64 0, i32 2
  %138 = bitcast %"class.std::__1::__tree_end_node"** %137 to i64*
  %139 = load i64, i64* %138, align 8
  %140 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %129, i64 0, i32 2
  %141 = bitcast %"class.std::__1::__tree_end_node"** %140 to i64*
  store i64 %139, i64* %141, align 8
  %142 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %137, align 8
  %143 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %142, i64 0, i32 0
  %144 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %143, align 8
  %145 = icmp eq %"class.std::__1::__tree_node_base"* %144, %124
  %146 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %142, i64 1, i32 0
  %147 = select i1 %145, %"class.std::__1::__tree_node_base"** %143, %"class.std::__1::__tree_node_base"** %146
  store %"class.std::__1::__tree_node_base"* %129, %"class.std::__1::__tree_node_base"** %147, align 8
  store %"class.std::__1::__tree_node_base"* %124, %"class.std::__1::__tree_node_base"** %130, align 8
  %148 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %129, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %148, %"class.std::__1::__tree_end_node"** %137, align 8
  br label %156

149:                                              ; preds = %89, %25
  %150 = phi i8* [ %26, %25 ], [ %90, %89 ]
  store i8 1, i8* %11, align 8
  %151 = icmp eq %"class.std::__1::__tree_node_base"* %20, %0
  %152 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %16, i64 3
  %153 = bitcast %"class.std::__1::__tree_end_node"* %152 to i8*
  %154 = zext i1 %151 to i8
  store i8 %154, i8* %153, align 8
  store i8 1, i8* %150, align 8
  %155 = icmp eq %"class.std::__1::__tree_node_base"* %20, %0
  br i1 %155, label %156, label %6

156:                                              ; preds = %6, %149, %2, %136, %74
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal17MetadataAllocatorINSt3__111__tree_nodeImPvEEE10deallocateEPS5_m(%"class.base::internal::MetadataAllocator"*, %"class.std::__1::__tree_node"*, i64) local_unnamed_addr #3 comdat align 2 {
  %4 = alloca %"struct.base::internal::DeferredUnmap", align 8
  %5 = tail call dereferenceable(5408) %"struct.base::PartitionRoot"* @_ZN4base8internal23PCScanMetadataAllocatorEv() #17
  %6 = bitcast %"class.std::__1::__tree_node"* %1 to i8*
  %7 = icmp eq %"class.std::__1::__tree_node"* %1, null
  br i1 %7, label %241, label %8, !prof !7

8:                                                ; preds = %3
  tail call void @llvm.prefetch(i8* nonnull %6, i32 0, i32 3, i32 1) #17
  %9 = ptrtoint %"class.std::__1::__tree_node"* %1 to i64
  %10 = and i64 %9, -2097152
  %11 = or i64 %10, 4096
  %12 = inttoptr i64 %11 to i8*
  %13 = lshr i64 %9, 9
  %14 = and i64 %13, 4064
  %15 = getelementptr inbounds i8, i8* %12, i64 %14
  %16 = bitcast i8* %15 to %"struct.base::internal::PartitionPage"*
  %17 = getelementptr inbounds i8, i8* %15, i64 30
  %18 = load i8, i8* %17, align 2
  %19 = zext i8 %18 to i64
  %20 = sub nsw i64 0, %19
  %21 = getelementptr inbounds %"struct.base::internal::PartitionPage", %"struct.base::internal::PartitionPage"* %16, i64 %20, i32 0
  %22 = bitcast %union.anon.123* %21 to %"struct.base::internal::SlotSpanMetadata"*
  %23 = bitcast %union.anon.123* %21 to i8*
  tail call void @llvm.prefetch(i8* %23, i32 0, i32 3, i32 1) #17
  %24 = ptrtoint %union.anon.123* %21 to i64
  %25 = and i64 %24, -4096
  %26 = inttoptr i64 %25 to %"struct.base::internal::PartitionSuperPageExtentEntry"*
  %27 = getelementptr inbounds %"struct.base::internal::PartitionSuperPageExtentEntry", %"struct.base::internal::PartitionSuperPageExtentEntry"* %26, i64 0, i32 0
  %28 = load %"struct.base::PartitionRoot"*, %"struct.base::PartitionRoot"** %27, align 4096
  %29 = getelementptr inbounds %"struct.base::PartitionRoot", %"struct.base::PartitionRoot"* %28, i64 0, i32 0
  %30 = load i8, i8* %29, align 8
  %31 = icmp eq i8 %30, 2
  br i1 %31, label %32, label %101, !prof !7

32:                                               ; preds = %8
  %33 = load atomic i8, i8* getelementptr inbounds (%"class.base::internal::PCScan", %"class.base::internal::PCScan"* @_ZN4base8internal6PCScan9instance_E, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0) acquire, align 8
  %34 = icmp eq i8 %33, 2
  br i1 %34, label %35, label %36, !prof !7

35:                                               ; preds = %32
  tail call void @_ZN4base8internal6PCScan8JoinScanEv() #17
  br label %36

36:                                               ; preds = %35, %32
  %37 = getelementptr inbounds %"struct.base::internal::PartitionPage", %"struct.base::internal::PartitionPage"* %16, i64 %20, i32 0, i32 1, i64 8
  %38 = bitcast i8* %37 to %"struct.base::internal::PartitionBucket"**
  %39 = load %"struct.base::internal::PartitionBucket"*, %"struct.base::internal::PartitionBucket"** %38, align 1
  %40 = getelementptr inbounds %"struct.base::PartitionRoot", %"struct.base::PartitionRoot"* %28, i64 0, i32 10, i64 0
  %41 = icmp ugt %"struct.base::internal::PartitionBucket"* %40, %39
  %42 = getelementptr inbounds %"struct.base::PartitionRoot", %"struct.base::PartitionRoot"* %28, i64 0, i32 11
  %43 = icmp ult %"struct.base::internal::PartitionBucket"* %42, %39
  %44 = or i1 %41, %43
  br i1 %44, label %101, label %45, !prof !7

45:                                               ; preds = %36
  %46 = getelementptr inbounds %"struct.base::internal::PartitionPage", %"struct.base::internal::PartitionPage"* %16, i64 %20, i32 0, i32 1, i64 21
  %47 = load i8, i8* %46, align 1, !range !5
  %48 = icmp eq i8 %47, 0
  br i1 %48, label %49, label %53, !prof !6

49:                                               ; preds = %45
  %50 = getelementptr inbounds %"struct.base::internal::PartitionBucket", %"struct.base::internal::PartitionBucket"* %39, i64 0, i32 3
  %51 = load i32, i32* %50, align 8
  %52 = zext i32 %51 to i64
  br label %60

53:                                               ; preds = %45
  %54 = bitcast %union.anon.123* %21 to %"struct.base::internal::PartitionPage"*
  %55 = getelementptr inbounds %"struct.base::internal::PartitionPage", %"struct.base::internal::PartitionPage"* %54, i64 1, i32 0, i32 0, i32 0
  %56 = load i64, i64* %55, align 1
  %57 = getelementptr inbounds %"struct.base::internal::PartitionBucket", %"struct.base::internal::PartitionBucket"* %39, i64 0, i32 3
  %58 = load i32, i32* %57, align 8
  %59 = zext i32 %58 to i64
  br label %60

60:                                               ; preds = %53, %49
  %61 = phi i64 [ %52, %49 ], [ %59, %53 ]
  %62 = phi i64 [ %52, %49 ], [ %56, %53 ]
  %63 = load atomic i64, i64* getelementptr inbounds (%"class.base::internal::PCScan", %"class.base::internal::PCScan"* @_ZN4base8internal6PCScan9instance_E, i64 0, i32 0, i32 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 8
  %64 = inttoptr i64 %10 to i8*
  %65 = and i64 %63, 1
  %66 = icmp eq i64 %65, 0
  %67 = select i1 %66, i64 16384, i64 32768
  %68 = getelementptr inbounds i8, i8* %64, i64 %67
  %69 = bitcast i8* %68 to %"class.base::internal::ObjectBitmap"*
  %70 = lshr i64 %9, 4
  %71 = lshr i64 %9, 10
  %72 = and i64 %71, 2047
  %73 = and i64 %70, 63
  %74 = shl i64 1, %73
  %75 = getelementptr inbounds %"class.base::internal::ObjectBitmap", %"class.base::internal::ObjectBitmap"* %69, i64 0, i32 0, i32 0, i64 %72
  %76 = atomicrmw or i64* %75, i64 %74 monotonic
  %77 = and i64 %76, %74
  %78 = icmp eq i64 %77, 0
  br i1 %78, label %80, label %79, !prof !6

79:                                               ; preds = %60
  notail call void @_ZN4base8internal17DoubleFreeAttemptEv() #18
  unreachable

80:                                               ; preds = %60
  %81 = atomicrmw add i64* getelementptr inbounds (%"class.base::internal::PCScan", %"class.base::internal::PCScan"* @_ZN4base8internal6PCScan9instance_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0), i64 %61 monotonic
  %82 = add i64 %81, %61
  %83 = load atomic i64, i64* getelementptr inbounds (%"class.base::internal::PCScan", %"class.base::internal::PCScan"* @_ZN4base8internal6PCScan9instance_E, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 8
  %84 = icmp ugt i64 %82, %83
  br i1 %84, label %85, label %91

85:                                               ; preds = %80
  %86 = load %"class.base::internal::PCScanSchedulingBackend"*, %"class.base::internal::PCScanSchedulingBackend"** getelementptr inbounds (%"class.base::internal::PCScan", %"class.base::internal::PCScan"* @_ZN4base8internal6PCScan9instance_E, i64 0, i32 0, i32 2), align 8
  %87 = bitcast %"class.base::internal::PCScanSchedulingBackend"* %86 to i1 (%"class.base::internal::PCScanSchedulingBackend"*)***
  %88 = load i1 (%"class.base::internal::PCScanSchedulingBackend"*)**, i1 (%"class.base::internal::PCScanSchedulingBackend"*)*** %87, align 8
  %89 = load i1 (%"class.base::internal::PCScanSchedulingBackend"*)*, i1 (%"class.base::internal::PCScanSchedulingBackend"*)** %88, align 8
  %90 = tail call zeroext i1 %89(%"class.base::internal::PCScanSchedulingBackend"* %86) #17
  br label %91

91:                                               ; preds = %85, %80
  %92 = phi i1 [ false, %80 ], [ %90, %85 ]
  %93 = load i8, i8* getelementptr inbounds (%"class.base::internal::PCScan", %"class.base::internal::PCScan"* @_ZN4base8internal6PCScan9instance_E, i64 0, i32 2), align 1
  %94 = icmp eq i8 %93, 1
  br i1 %94, label %95, label %96

95:                                               ; preds = %91
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 1 %6, i8 0, i64 %62, i1 false) #17
  br label %96

96:                                               ; preds = %95, %91
  br i1 %92, label %97, label %241, !prof !7

97:                                               ; preds = %96
  %98 = load atomic i8, i8* getelementptr inbounds (%"class.base::internal::PCScan", %"class.base::internal::PCScan"* @_ZN4base8internal6PCScan9instance_E, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0) monotonic, align 8
  %99 = icmp eq i8 %98, 0
  br i1 %99, label %100, label %241

100:                                              ; preds = %97
  tail call void @_ZN4base8internal6PCScan11PerformScanENS1_14InvocationModeE(%"class.base::internal::PCScan"* nonnull @_ZN4base8internal6PCScan9instance_E, i32 1) #17
  br label %241

101:                                              ; preds = %36, %8
  %102 = getelementptr inbounds %"struct.base::PartitionRoot", %"struct.base::PartitionRoot"* %28, i64 0, i32 2
  %103 = load i8, i8* %102, align 2, !range !5
  %104 = icmp eq i8 %103, 0
  br i1 %104, label %173, label %105, !prof !7

105:                                              ; preds = %101
  %106 = getelementptr inbounds %"struct.base::internal::PartitionPage", %"struct.base::internal::PartitionPage"* %16, i64 %20, i32 0, i32 1, i64 8
  %107 = bitcast i8* %106 to %"struct.base::internal::PartitionBucket"**
  %108 = load %"struct.base::internal::PartitionBucket"*, %"struct.base::internal::PartitionBucket"** %107, align 1
  %109 = getelementptr inbounds %"struct.base::PartitionRoot", %"struct.base::PartitionRoot"* %28, i64 0, i32 10, i64 0
  %110 = icmp ule %"struct.base::internal::PartitionBucket"* %109, %108
  %111 = getelementptr inbounds %"struct.base::PartitionRoot", %"struct.base::PartitionRoot"* %28, i64 0, i32 11
  %112 = icmp uge %"struct.base::internal::PartitionBucket"* %111, %108
  %113 = and i1 %112, %110
  %114 = ptrtoint %"struct.base::internal::PartitionBucket"* %108 to i64
  br i1 %113, label %115, label %173, !prof !6

115:                                              ; preds = %105
  %116 = load i32, i32* @_ZN4base8internal18g_thread_cache_keyE, align 4
  %117 = tail call i8* @pthread_getspecific(i32 %116) #17
  %118 = bitcast i8* %117 to %"class.base::internal::ThreadCache"*
  %119 = icmp ugt i8* %117, inttoptr (i64 1 to i8*)
  br i1 %119, label %120, label %173, !prof !6

120:                                              ; preds = %115
  %121 = ptrtoint %"struct.base::internal::PartitionBucket"* %109 to i64
  %122 = sub i64 %114, %121
  %123 = sdiv exact i64 %122, 40
  %124 = getelementptr inbounds i8, i8* %117, i64 1480
  %125 = bitcast i8* %124 to i64*
  %126 = load i64, i64* %125, align 8
  %127 = add i64 %126, 1
  store i64 %127, i64* %125, align 8
  %128 = load i16, i16* @_ZN4base8internal11ThreadCache28largest_active_bucket_index_E, align 2
  %129 = zext i16 %128 to i64
  %130 = icmp ugt i64 %123, %129
  br i1 %130, label %131, label %136, !prof !7

131:                                              ; preds = %120
  %132 = getelementptr inbounds i8, i8* %117, i64 1496
  %133 = bitcast i8* %132 to i64*
  %134 = load i64, i64* %133, align 8
  %135 = add i64 %134, 1
  store i64 %135, i64* %133, align 8
  br label %173

136:                                              ; preds = %120
  %137 = getelementptr inbounds %"class.base::internal::ThreadCache", %"class.base::internal::ThreadCache"* %118, i64 0, i32 0, i64 %123
  %138 = bitcast %"struct.base::internal::ThreadCache::Bucket"* %137 to i64*
  %139 = load i64, i64* %138, align 8
  %140 = tail call i64 @llvm.bswap.i64(i64 %139) #17
  %141 = inttoptr i64 %140 to %"struct.base::internal::EncodedPartitionFreelistEntry"*
  %142 = bitcast %"class.std::__1::__tree_node"* %1 to %"struct.base::internal::EncodedPartitionFreelistEntry"**
  store %"struct.base::internal::EncodedPartitionFreelistEntry"* %141, %"struct.base::internal::EncodedPartitionFreelistEntry"** %142, align 8
  %143 = xor i64 %140, -1
  %144 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %1, i64 0, i32 0, i32 1
  %145 = bitcast %"class.std::__1::__tree_node_base"** %144 to i64*
  store i64 %143, i64* %145, align 8
  %146 = bitcast %"struct.base::internal::ThreadCache::Bucket"* %137 to %"class.std::__1::__tree_node"**
  store %"class.std::__1::__tree_node"* %1, %"class.std::__1::__tree_node"** %146, align 8
  %147 = getelementptr inbounds %"class.base::internal::ThreadCache", %"class.base::internal::ThreadCache"* %118, i64 0, i32 0, i64 %123, i32 1
  %148 = load i8, i8* %147, align 8
  %149 = add i8 %148, 1
  store i8 %149, i8* %147, align 8
  %150 = getelementptr inbounds %"class.base::internal::ThreadCache", %"class.base::internal::ThreadCache"* %118, i64 0, i32 0, i64 %123, i32 3
  %151 = load i16, i16* %150, align 2
  %152 = zext i16 %151 to i64
  %153 = getelementptr inbounds i8, i8* %117, i64 1424
  %154 = bitcast i8* %153 to i64*
  %155 = load i64, i64* %154, align 8
  %156 = add i64 %155, %152
  store i64 %156, i64* %154, align 8
  %157 = getelementptr inbounds i8, i8* %117, i64 1488
  %158 = bitcast i8* %157 to i64*
  %159 = load i64, i64* %158, align 8
  %160 = add i64 %159, 1
  store i64 %160, i64* %158, align 8
  %161 = getelementptr inbounds %"class.base::internal::ThreadCache", %"class.base::internal::ThreadCache"* %118, i64 0, i32 0, i64 %123, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %162 = load atomic i8, i8* %161 monotonic, align 1
  %163 = icmp ugt i8 %149, %162
  br i1 %163, label %164, label %167, !prof !7

164:                                              ; preds = %136
  %165 = lshr i8 %162, 1
  %166 = zext i8 %165 to i64
  tail call void @_ZN4base8internal11ThreadCache11ClearBucketERNS1_6BucketEm(%"class.base::internal::ThreadCache"* %118, %"struct.base::internal::ThreadCache::Bucket"* dereferenceable(16) %137, i64 %166) #17
  br label %167

167:                                              ; preds = %164, %136
  %168 = getelementptr inbounds i8, i8* %117, i64 1432
  %169 = load atomic i8, i8* %168 monotonic, align 1
  %170 = and i8 %169, 1
  %171 = icmp eq i8 %170, 0
  br i1 %171, label %241, label %172, !prof !6

172:                                              ; preds = %167
  tail call void @_ZN4base8internal11ThreadCache13PurgeInternalEv(%"class.base::internal::ThreadCache"* %118) #17
  br label %241

173:                                              ; preds = %131, %115, %105, %101
  %174 = bitcast %"struct.base::internal::DeferredUnmap"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %174) #17
  %175 = getelementptr inbounds %"struct.base::internal::DeferredUnmap", %"struct.base::internal::DeferredUnmap"* %4, i64 0, i32 0
  %176 = getelementptr inbounds %"struct.base::internal::DeferredUnmap", %"struct.base::internal::DeferredUnmap"* %4, i64 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %174, i8 0, i64 16, i1 false) #17
  %177 = getelementptr inbounds %"struct.base::PartitionRoot", %"struct.base::PartitionRoot"* %28, i64 0, i32 8
  %178 = getelementptr inbounds %"class.base::internal::MaybeSpinLock", %"class.base::internal::MaybeSpinLock"* %177, i64 0, i32 0
  %179 = getelementptr inbounds %"class.base::internal::MaybeSpinLock", %"class.base::internal::MaybeSpinLock"* %177, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  br label %180

180:                                              ; preds = %192, %173
  %181 = phi i32 [ 0, %173 ], [ %193, %192 ]
  %182 = phi i32 [ 1, %173 ], [ %196, %192 ]
  %183 = load atomic i32, i32* %179 monotonic, align 4
  %184 = icmp eq i32 %183, 0
  br i1 %184, label %185, label %188, !prof !9

185:                                              ; preds = %180
  %186 = cmpxchg weak i32* %179, i32 0, i32 1 acquire monotonic
  %187 = extractvalue { i32, i1 } %186, 1
  br i1 %187, label %203, label %188, !prof !6

188:                                              ; preds = %185, %180
  %189 = icmp sgt i32 %182, 0
  br i1 %189, label %198, label %192

190:                                              ; preds = %198
  %191 = add i32 %182, %181
  br label %192

192:                                              ; preds = %190, %188
  %193 = phi i32 [ %181, %188 ], [ %191, %190 ]
  %194 = shl i32 %182, 1
  %195 = icmp slt i32 %194, 64
  %196 = select i1 %195, i32 %194, i32 64
  %197 = icmp slt i32 %193, 1000
  br i1 %197, label %180, label %202

198:                                              ; preds = %188, %198
  %199 = phi i32 [ %200, %198 ], [ 0, %188 ]
  tail call void asm sideeffect "pause", "~{dirflag},~{fpsr},~{flags}"() #17, !srcloc !10
  %200 = add nuw nsw i32 %199, 1
  %201 = icmp eq i32 %200, %182
  br i1 %201, label %190, label %198

202:                                              ; preds = %192
  tail call void @_ZN4base8internal13SpinningMutex8LockSlowEv(%"class.base::internal::SpinningMutex"* %178) #17
  br label %203

203:                                              ; preds = %185, %202
  %204 = bitcast %union.anon.123* %21 to i8**
  %205 = load i8*, i8** %204, align 1
  %206 = icmp eq i8* %205, %6
  br i1 %206, label %209, label %207, !prof !7

207:                                              ; preds = %203
  %208 = ptrtoint i8* %205 to i64
  br label %212

209:                                              ; preds = %203
  tail call void @_ZN7logging8RawCheckEPKc(i8* getelementptr inbounds ([105 x i8], [105 x i8]* @.str.15, i64 0, i64 0)) #17
  %210 = getelementptr inbounds %union.anon.123, %union.anon.123* %21, i64 0, i32 0, i32 0
  %211 = load i64, i64* %210, align 1
  br label %212

212:                                              ; preds = %209, %207
  %213 = phi i64 [ %208, %207 ], [ %211, %209 ]
  %214 = tail call i64 @llvm.bswap.i64(i64 %213) #17
  %215 = inttoptr i64 %214 to %"struct.base::internal::EncodedPartitionFreelistEntry"*
  %216 = bitcast %"class.std::__1::__tree_node"* %1 to %"struct.base::internal::EncodedPartitionFreelistEntry"**
  store %"struct.base::internal::EncodedPartitionFreelistEntry"* %215, %"struct.base::internal::EncodedPartitionFreelistEntry"** %216, align 8
  %217 = xor i64 %214, -1
  %218 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %1, i64 0, i32 0, i32 1
  %219 = bitcast %"class.std::__1::__tree_node_base"** %218 to i64*
  store i64 %217, i64* %219, align 8
  %220 = bitcast %union.anon.123* %21 to %"class.std::__1::__tree_node"**
  store %"class.std::__1::__tree_node"* %1, %"class.std::__1::__tree_node"** %220, align 1
  %221 = getelementptr inbounds %"struct.base::internal::PartitionPage", %"struct.base::internal::PartitionPage"* %16, i64 %20, i32 0, i32 1, i64 16
  %222 = bitcast i8* %221 to i16*
  %223 = load i16, i16* %222, align 1
  %224 = add i16 %223, -1
  store i16 %224, i16* %222, align 1
  %225 = icmp slt i16 %224, 1
  br i1 %225, label %226, label %230, !prof !7

226:                                              ; preds = %212
  %227 = tail call { i8*, i64 } @_ZN4base8internal16SlotSpanMetadataILb1EE12FreeSlowPathEv(%"struct.base::internal::SlotSpanMetadata"* %22) #17
  %228 = extractvalue { i8*, i64 } %227, 0
  %229 = extractvalue { i8*, i64 } %227, 1
  br label %230

230:                                              ; preds = %226, %212
  %231 = phi i8* [ %228, %226 ], [ null, %212 ]
  %232 = phi i64 [ %229, %226 ], [ 0, %212 ]
  store i8* %231, i8** %175, align 8
  store i64 %232, i64* %176, align 8
  %233 = atomicrmw xchg i32* %179, i32 0 release
  %234 = icmp eq i32 %233, 2
  br i1 %234, label %235, label %236, !prof !7

235:                                              ; preds = %230
  tail call void @_ZN4base8internal13SpinningMutex9FutexWakeEv(%"class.base::internal::SpinningMutex"* %178) #17
  br label %236

236:                                              ; preds = %235, %230
  %237 = load i8*, i8** %175, align 8
  %238 = icmp eq i8* %237, null
  br i1 %238, label %240, label %239, !prof !6

239:                                              ; preds = %236
  call void @_ZN4base8internal13DeferredUnmap5UnmapEv(%"struct.base::internal::DeferredUnmap"* nonnull %4) #17
  br label %240

240:                                              ; preds = %239, %236
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %174) #17
  br label %241

241:                                              ; preds = %3, %96, %97, %100, %167, %172, %240
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorIN4base8internal15RacefulWorklistImE4NodeENS2_17MetadataAllocatorIS5_EEE21__push_back_slow_pathIS5_EEvOT_(%"class.std::__1::vector.24"*, %"struct.base::internal::RacefulWorklist<unsigned long>::Node"* dereferenceable(16)) local_unnamed_addr #16 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector.24", %"class.std::__1::vector.24"* %0, i64 0, i32 0, i32 2
  %4 = bitcast %"class.std::__1::__compressed_pair.26"* %3 to %"class.base::internal::MetadataAllocator.29"*
  %5 = getelementptr inbounds %"class.std::__1::vector.24", %"class.std::__1::vector.24"* %0, i64 0, i32 0, i32 1
  %6 = bitcast %"struct.base::internal::RacefulWorklist<unsigned long>::Node"** %5 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = bitcast %"class.std::__1::vector.24"* %0 to i64*
  %9 = load i64, i64* %8, align 8
  %10 = sub i64 %7, %9
  %11 = ashr exact i64 %10, 4
  %12 = add nsw i64 %11, 1
  %13 = icmp ugt i64 %12, 1152921504606846975
  br i1 %13, label %14, label %16

14:                                               ; preds = %2
  %15 = bitcast %"class.std::__1::vector.24"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %15) #18
  unreachable

16:                                               ; preds = %2
  %17 = getelementptr inbounds %"class.std::__1::vector.24", %"class.std::__1::vector.24"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %18 = bitcast %"struct.base::internal::RacefulWorklist<unsigned long>::Node"** %17 to i64*
  %19 = load i64, i64* %18, align 8
  %20 = sub i64 %19, %9
  %21 = ashr exact i64 %20, 4
  %22 = icmp ult i64 %21, 576460752303423487
  br i1 %22, label %23, label %28

23:                                               ; preds = %16
  %24 = ashr exact i64 %20, 3
  %25 = icmp ult i64 %24, %12
  %26 = select i1 %25, i64 %12, i64 %24
  %27 = icmp eq i64 %26, 0
  br i1 %27, label %31, label %28

28:                                               ; preds = %16, %23
  %29 = phi i64 [ %26, %23 ], [ 1152921504606846975, %16 ]
  %30 = tail call %"struct.base::internal::RacefulWorklist<unsigned long>::Node"* @_ZN4base8internal17MetadataAllocatorINS0_15RacefulWorklistImE4NodeEE8allocateEm(%"class.base::internal::MetadataAllocator.29"* %4, i64 %29) #17
  br label %31

31:                                               ; preds = %23, %28
  %32 = phi i64 [ %29, %28 ], [ 0, %23 ]
  %33 = phi %"struct.base::internal::RacefulWorklist<unsigned long>::Node"* [ %30, %28 ], [ null, %23 ]
  %34 = getelementptr inbounds %"struct.base::internal::RacefulWorklist<unsigned long>::Node", %"struct.base::internal::RacefulWorklist<unsigned long>::Node"* %33, i64 %11
  %35 = getelementptr inbounds %"struct.base::internal::RacefulWorklist<unsigned long>::Node", %"struct.base::internal::RacefulWorklist<unsigned long>::Node"* %33, i64 %32
  %36 = ptrtoint %"struct.base::internal::RacefulWorklist<unsigned long>::Node"* %35 to i64
  %37 = getelementptr inbounds %"struct.base::internal::RacefulWorklist<unsigned long>::Node", %"struct.base::internal::RacefulWorklist<unsigned long>::Node"* %34, i64 0, i32 0
  %38 = getelementptr inbounds %"struct.base::internal::RacefulWorklist<unsigned long>::Node", %"struct.base::internal::RacefulWorklist<unsigned long>::Node"* %1, i64 0, i32 0
  %39 = load i64, i64* %38, align 8
  store i64 %39, i64* %37, align 8
  %40 = getelementptr inbounds %"struct.base::internal::RacefulWorklist<unsigned long>::Node", %"struct.base::internal::RacefulWorklist<unsigned long>::Node"* %1, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %41 = load atomic i8, i8* %40 monotonic, align 1
  %42 = and i8 %41, 1
  %43 = getelementptr inbounds %"struct.base::internal::RacefulWorklist<unsigned long>::Node", %"struct.base::internal::RacefulWorklist<unsigned long>::Node"* %33, i64 %11, i32 1, i32 0, i32 0, i32 0, i32 0
  store i8 %42, i8* %43, align 1
  %44 = getelementptr inbounds %"struct.base::internal::RacefulWorklist<unsigned long>::Node", %"struct.base::internal::RacefulWorklist<unsigned long>::Node"* %1, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0
  %45 = load atomic i8, i8* %44 monotonic, align 1
  %46 = and i8 %45, 1
  %47 = getelementptr inbounds %"struct.base::internal::RacefulWorklist<unsigned long>::Node", %"struct.base::internal::RacefulWorklist<unsigned long>::Node"* %33, i64 %11, i32 2, i32 0, i32 0, i32 0, i32 0
  store i8 %46, i8* %47, align 1
  %48 = getelementptr inbounds %"struct.base::internal::RacefulWorklist<unsigned long>::Node", %"struct.base::internal::RacefulWorklist<unsigned long>::Node"* %34, i64 1
  %49 = ptrtoint %"struct.base::internal::RacefulWorklist<unsigned long>::Node"* %48 to i64
  %50 = getelementptr inbounds %"class.std::__1::vector.24", %"class.std::__1::vector.24"* %0, i64 0, i32 0, i32 0
  %51 = load %"struct.base::internal::RacefulWorklist<unsigned long>::Node"*, %"struct.base::internal::RacefulWorklist<unsigned long>::Node"** %50, align 8
  %52 = ptrtoint %"struct.base::internal::RacefulWorklist<unsigned long>::Node"* %51 to i64
  %53 = load %"struct.base::internal::RacefulWorklist<unsigned long>::Node"*, %"struct.base::internal::RacefulWorklist<unsigned long>::Node"** %5, align 8
  %54 = icmp eq %"struct.base::internal::RacefulWorklist<unsigned long>::Node"* %53, %51
  br i1 %54, label %111, label %55

55:                                               ; preds = %31
  %56 = getelementptr %"struct.base::internal::RacefulWorklist<unsigned long>::Node", %"struct.base::internal::RacefulWorklist<unsigned long>::Node"* %53, i64 -1, i32 0
  %57 = ptrtoint i64* %56 to i64
  %58 = sub i64 %57, %52
  %59 = and i64 %58, 16
  %60 = icmp eq i64 %59, 0
  br i1 %60, label %61, label %75

61:                                               ; preds = %55
  %62 = getelementptr inbounds %"struct.base::internal::RacefulWorklist<unsigned long>::Node", %"struct.base::internal::RacefulWorklist<unsigned long>::Node"* %53, i64 -1
  %63 = getelementptr inbounds %"struct.base::internal::RacefulWorklist<unsigned long>::Node", %"struct.base::internal::RacefulWorklist<unsigned long>::Node"* %34, i64 -1, i32 0
  %64 = getelementptr inbounds %"struct.base::internal::RacefulWorklist<unsigned long>::Node", %"struct.base::internal::RacefulWorklist<unsigned long>::Node"* %62, i64 0, i32 0
  %65 = load i64, i64* %64, align 8
  store i64 %65, i64* %63, align 8
  %66 = getelementptr inbounds %"struct.base::internal::RacefulWorklist<unsigned long>::Node", %"struct.base::internal::RacefulWorklist<unsigned long>::Node"* %53, i64 -1, i32 1, i32 0, i32 0, i32 0, i32 0
  %67 = load atomic i8, i8* %66 monotonic, align 1
  %68 = and i8 %67, 1
  %69 = getelementptr inbounds %"struct.base::internal::RacefulWorklist<unsigned long>::Node", %"struct.base::internal::RacefulWorklist<unsigned long>::Node"* %34, i64 -1, i32 1, i32 0, i32 0, i32 0, i32 0
  store i8 %68, i8* %69, align 1
  %70 = getelementptr inbounds %"struct.base::internal::RacefulWorklist<unsigned long>::Node", %"struct.base::internal::RacefulWorklist<unsigned long>::Node"* %53, i64 -1, i32 2, i32 0, i32 0, i32 0, i32 0
  %71 = load atomic i8, i8* %70 monotonic, align 1
  %72 = and i8 %71, 1
  %73 = getelementptr inbounds %"struct.base::internal::RacefulWorklist<unsigned long>::Node", %"struct.base::internal::RacefulWorklist<unsigned long>::Node"* %34, i64 -1, i32 2, i32 0, i32 0, i32 0, i32 0
  store i8 %72, i8* %73, align 1
  %74 = getelementptr inbounds %"struct.base::internal::RacefulWorklist<unsigned long>::Node", %"struct.base::internal::RacefulWorklist<unsigned long>::Node"* %34, i64 -1
  br label %75

75:                                               ; preds = %61, %55
  %76 = phi %"struct.base::internal::RacefulWorklist<unsigned long>::Node"* [ undef, %55 ], [ %74, %61 ]
  %77 = phi %"struct.base::internal::RacefulWorklist<unsigned long>::Node"* [ %34, %55 ], [ %74, %61 ]
  %78 = phi %"struct.base::internal::RacefulWorklist<unsigned long>::Node"* [ %53, %55 ], [ %62, %61 ]
  %79 = icmp ult i64 %58, 16
  br i1 %79, label %108, label %80

80:                                               ; preds = %75, %80
  %81 = phi %"struct.base::internal::RacefulWorklist<unsigned long>::Node"* [ %106, %80 ], [ %77, %75 ]
  %82 = phi %"struct.base::internal::RacefulWorklist<unsigned long>::Node"* [ %94, %80 ], [ %78, %75 ]
  %83 = getelementptr inbounds %"struct.base::internal::RacefulWorklist<unsigned long>::Node", %"struct.base::internal::RacefulWorklist<unsigned long>::Node"* %81, i64 -1, i32 0
  %84 = getelementptr inbounds %"struct.base::internal::RacefulWorklist<unsigned long>::Node", %"struct.base::internal::RacefulWorklist<unsigned long>::Node"* %82, i64 -1, i32 0
  %85 = load i64, i64* %84, align 8
  store i64 %85, i64* %83, align 8
  %86 = getelementptr inbounds %"struct.base::internal::RacefulWorklist<unsigned long>::Node", %"struct.base::internal::RacefulWorklist<unsigned long>::Node"* %82, i64 -1, i32 1, i32 0, i32 0, i32 0, i32 0
  %87 = load atomic i8, i8* %86 monotonic, align 1
  %88 = and i8 %87, 1
  %89 = getelementptr inbounds %"struct.base::internal::RacefulWorklist<unsigned long>::Node", %"struct.base::internal::RacefulWorklist<unsigned long>::Node"* %81, i64 -1, i32 1, i32 0, i32 0, i32 0, i32 0
  store i8 %88, i8* %89, align 1
  %90 = getelementptr inbounds %"struct.base::internal::RacefulWorklist<unsigned long>::Node", %"struct.base::internal::RacefulWorklist<unsigned long>::Node"* %82, i64 -1, i32 2, i32 0, i32 0, i32 0, i32 0
  %91 = load atomic i8, i8* %90 monotonic, align 1
  %92 = and i8 %91, 1
  %93 = getelementptr inbounds %"struct.base::internal::RacefulWorklist<unsigned long>::Node", %"struct.base::internal::RacefulWorklist<unsigned long>::Node"* %81, i64 -1, i32 2, i32 0, i32 0, i32 0, i32 0
  store i8 %92, i8* %93, align 1
  %94 = getelementptr inbounds %"struct.base::internal::RacefulWorklist<unsigned long>::Node", %"struct.base::internal::RacefulWorklist<unsigned long>::Node"* %82, i64 -2
  %95 = getelementptr inbounds %"struct.base::internal::RacefulWorklist<unsigned long>::Node", %"struct.base::internal::RacefulWorklist<unsigned long>::Node"* %81, i64 -2, i32 0
  %96 = getelementptr inbounds %"struct.base::internal::RacefulWorklist<unsigned long>::Node", %"struct.base::internal::RacefulWorklist<unsigned long>::Node"* %94, i64 0, i32 0
  %97 = load i64, i64* %96, align 8
  store i64 %97, i64* %95, align 8
  %98 = getelementptr inbounds %"struct.base::internal::RacefulWorklist<unsigned long>::Node", %"struct.base::internal::RacefulWorklist<unsigned long>::Node"* %82, i64 -2, i32 1, i32 0, i32 0, i32 0, i32 0
  %99 = load atomic i8, i8* %98 monotonic, align 1
  %100 = and i8 %99, 1
  %101 = getelementptr inbounds %"struct.base::internal::RacefulWorklist<unsigned long>::Node", %"struct.base::internal::RacefulWorklist<unsigned long>::Node"* %81, i64 -2, i32 1, i32 0, i32 0, i32 0, i32 0
  store i8 %100, i8* %101, align 1
  %102 = getelementptr inbounds %"struct.base::internal::RacefulWorklist<unsigned long>::Node", %"struct.base::internal::RacefulWorklist<unsigned long>::Node"* %82, i64 -2, i32 2, i32 0, i32 0, i32 0, i32 0
  %103 = load atomic i8, i8* %102 monotonic, align 1
  %104 = and i8 %103, 1
  %105 = getelementptr inbounds %"struct.base::internal::RacefulWorklist<unsigned long>::Node", %"struct.base::internal::RacefulWorklist<unsigned long>::Node"* %81, i64 -2, i32 2, i32 0, i32 0, i32 0, i32 0
  store i8 %104, i8* %105, align 1
  %106 = getelementptr inbounds %"struct.base::internal::RacefulWorklist<unsigned long>::Node", %"struct.base::internal::RacefulWorklist<unsigned long>::Node"* %81, i64 -2
  %107 = icmp eq %"struct.base::internal::RacefulWorklist<unsigned long>::Node"* %94, %51
  br i1 %107, label %108, label %80

108:                                              ; preds = %80, %75
  %109 = phi %"struct.base::internal::RacefulWorklist<unsigned long>::Node"* [ %76, %75 ], [ %106, %80 ]
  %110 = load i64, i64* %8, align 8
  br label %111

111:                                              ; preds = %31, %108
  %112 = phi %"struct.base::internal::RacefulWorklist<unsigned long>::Node"* [ %109, %108 ], [ %34, %31 ]
  %113 = phi i64 [ %110, %108 ], [ %52, %31 ]
  %114 = ptrtoint %"struct.base::internal::RacefulWorklist<unsigned long>::Node"* %112 to i64
  store i64 %114, i64* %8, align 8
  store i64 %49, i64* %6, align 8
  %115 = load i64, i64* %18, align 8
  store i64 %36, i64* %18, align 8
  %116 = icmp eq i64 %113, 0
  br i1 %116, label %121, label %117

117:                                              ; preds = %111
  %118 = inttoptr i64 %113 to %"struct.base::internal::RacefulWorklist<unsigned long>::Node"*
  %119 = sub i64 %115, %113
  %120 = ashr exact i64 %119, 4
  tail call void @_ZN4base8internal17MetadataAllocatorINS0_15RacefulWorklistImE4NodeEE10deallocateEPS4_m(%"class.base::internal::MetadataAllocator.29"* %4, %"struct.base::internal::RacefulWorklist<unsigned long>::Node"* nonnull %118, i64 %120) #17
  br label %121

121:                                              ; preds = %111, %117
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.base::internal::RacefulWorklist<unsigned long>::Node"* @_ZN4base8internal17MetadataAllocatorINS0_15RacefulWorklistImE4NodeEE8allocateEm(%"class.base::internal::MetadataAllocator.29"*, i64) local_unnamed_addr #3 comdat align 2 {
  %3 = alloca i8, align 1
  %4 = alloca i64, align 8
  %5 = tail call dereferenceable(5408) %"struct.base::PartitionRoot"* @_ZN4base8internal23PCScanMetadataAllocatorEv() #17
  %6 = shl i64 %1, 4
  %7 = tail call i64 @llvm.ctlz.i64(i64 %6, i1 false) #17, !range !4
  %8 = sub nuw nsw i64 64, %7
  %9 = and i64 %8, 255
  %10 = getelementptr inbounds [65 x i8], [65 x i8]* @_ZN4base12_GLOBAL__N_116kOrderIndexShiftE, i64 0, i64 %9
  %11 = load i8, i8* %10, align 1
  %12 = zext i8 %11 to i64
  %13 = lshr i64 %6, %12
  %14 = and i64 %13, 7
  %15 = getelementptr inbounds [65 x i64], [65 x i64]* @_ZN4base12_GLOBAL__N_118kOrderSubIndexMaskE, i64 0, i64 %9
  %16 = load i64, i64* %15, align 8
  %17 = and i64 %16, %6
  %18 = shl nuw nsw i64 %9, 3
  %19 = or i64 %14, %18
  %20 = icmp ne i64 %17, 0
  %21 = zext i1 %20 to i64
  %22 = add nuw nsw i64 %19, %21
  %23 = getelementptr inbounds { [128 x i64], [521 x i16] }, { [128 x i64], [521 x i16] }* @_ZZN4base8internal17BucketIndexLookup8GetIndexEmE6lookup, i64 0, i32 1, i64 %22
  %24 = load i16, i16* %23, align 2
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %3) #17
  store i8 0, i8* %3, align 1
  %25 = bitcast i64* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %25) #17
  store i64 -6148914691236517206, i64* %4, align 8
  %26 = getelementptr inbounds %"struct.base::PartitionRoot", %"struct.base::PartitionRoot"* %5, i64 0, i32 0
  %27 = load i8, i8* %26, align 8
  %28 = icmp eq i8 %27, 2
  br i1 %28, label %29, label %33

29:                                               ; preds = %2
  %30 = load atomic i8, i8* getelementptr inbounds (%"class.base::internal::PCScan", %"class.base::internal::PCScan"* @_ZN4base8internal6PCScan9instance_E, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0) acquire, align 8
  %31 = icmp eq i8 %30, 2
  br i1 %31, label %32, label %33, !prof !7

32:                                               ; preds = %29
  tail call void @_ZN4base8internal6PCScan8JoinScanEv() #17
  br label %33

33:                                               ; preds = %32, %29, %2
  %34 = getelementptr inbounds %"struct.base::PartitionRoot", %"struct.base::PartitionRoot"* %5, i64 0, i32 2
  %35 = load i8, i8* %34, align 2, !range !5
  %36 = icmp eq i8 %35, 0
  br i1 %36, label %185, label %37, !prof !19

37:                                               ; preds = %33
  %38 = load i32, i32* @_ZN4base8internal18g_thread_cache_keyE, align 4
  %39 = tail call i8* @pthread_getspecific(i32 %38) #17
  %40 = bitcast i8* %39 to %"class.base::internal::ThreadCache"*
  %41 = icmp ugt i8* %39, inttoptr (i64 1 to i8*)
  br i1 %41, label %42, label %112, !prof !6

42:                                               ; preds = %37
  %43 = zext i16 %24 to i64
  %44 = getelementptr inbounds %"class.base::internal::ThreadCache", %"class.base::internal::ThreadCache"* %40, i64 0, i32 3, i32 12, i64 %43
  %45 = load i64, i64* %44, align 8
  %46 = add i64 %45, 1
  store i64 %46, i64* %44, align 8
  %47 = getelementptr inbounds i8, i8* %39, i64 1440
  %48 = bitcast i8* %47 to i64*
  %49 = load i64, i64* %48, align 8
  %50 = add i64 %49, 1
  store i64 %50, i64* %48, align 8
  %51 = load i16, i16* @_ZN4base8internal11ThreadCache28largest_active_bucket_index_E, align 2
  %52 = icmp ult i16 %51, %24
  br i1 %52, label %53, label %62, !prof !7

53:                                               ; preds = %42
  %54 = getelementptr inbounds i8, i8* %39, i64 1472
  %55 = bitcast i8* %54 to i64*
  %56 = load i64, i64* %55, align 8
  %57 = add i64 %56, 1
  store i64 %57, i64* %55, align 8
  %58 = getelementptr inbounds i8, i8* %39, i64 1456
  %59 = bitcast i8* %58 to i64*
  %60 = load i64, i64* %59, align 8
  %61 = add i64 %60, 1
  store i64 %61, i64* %59, align 8
  br label %119

62:                                               ; preds = %42
  %63 = getelementptr inbounds %"class.base::internal::ThreadCache", %"class.base::internal::ThreadCache"* %40, i64 0, i32 0, i64 %43, i32 0
  %64 = load %"class.base::internal::PartitionFreelistEntry"*, %"class.base::internal::PartitionFreelistEntry"** %63, align 8
  %65 = icmp eq %"class.base::internal::PartitionFreelistEntry"* %64, null
  br i1 %65, label %71, label %66, !prof !7

66:                                               ; preds = %62
  %67 = getelementptr inbounds i8, i8* %39, i64 1448
  %68 = bitcast i8* %67 to i64*
  %69 = load i64, i64* %68, align 8
  %70 = add i64 %69, 1
  store i64 %70, i64* %68, align 8
  br label %79

71:                                               ; preds = %62
  %72 = getelementptr inbounds i8, i8* %39, i64 1456
  %73 = bitcast i8* %72 to <2 x i64>*
  %74 = load <2 x i64>, <2 x i64>* %73, align 8
  %75 = add <2 x i64> %74, <i64 1, i64 1>
  %76 = bitcast i8* %72 to <2 x i64>*
  store <2 x i64> %75, <2 x i64>* %76, align 8
  tail call void @_ZN4base8internal11ThreadCache10FillBucketEm(%"class.base::internal::ThreadCache"* %40, i64 %43) #17
  %77 = load %"class.base::internal::PartitionFreelistEntry"*, %"class.base::internal::PartitionFreelistEntry"** %63, align 8
  %78 = icmp eq %"class.base::internal::PartitionFreelistEntry"* %77, null
  br i1 %78, label %119, label %79, !prof !7

79:                                               ; preds = %71, %66
  %80 = phi %"class.base::internal::PartitionFreelistEntry"* [ %77, %71 ], [ %64, %66 ]
  %81 = getelementptr inbounds %"class.base::internal::PartitionFreelistEntry", %"class.base::internal::PartitionFreelistEntry"* %80, i64 0, i32 0
  %82 = load %"struct.base::internal::EncodedPartitionFreelistEntry"*, %"struct.base::internal::EncodedPartitionFreelistEntry"** %81, align 8
  %83 = icmp eq %"struct.base::internal::EncodedPartitionFreelistEntry"* %82, null
  %84 = ptrtoint %"struct.base::internal::EncodedPartitionFreelistEntry"* %82 to i64
  br i1 %83, label %85, label %87

85:                                               ; preds = %79
  %86 = tail call i64 @llvm.bswap.i64(i64 %84) #17
  br label %96

87:                                               ; preds = %79
  %88 = xor i64 %84, -1
  %89 = getelementptr inbounds %"class.base::internal::PartitionFreelistEntry", %"class.base::internal::PartitionFreelistEntry"* %80, i64 0, i32 1
  %90 = load i64, i64* %89, align 8
  %91 = icmp eq i64 %90, %88
  br i1 %91, label %93, label %92, !prof !6

92:                                               ; preds = %87
  tail call fastcc void @_ZN4base8internal12_GLOBAL__N_126FreelistCorruptionDetectedEv() #18
  unreachable

93:                                               ; preds = %87
  %94 = tail call i64 @llvm.bswap.i64(i64 %84) #17
  %95 = inttoptr i64 %94 to i8*
  tail call void @llvm.prefetch(i8* nonnull %95, i32 0, i32 3, i32 1) #17
  br label %96

96:                                               ; preds = %93, %85
  %97 = phi i64 [ %86, %85 ], [ %94, %93 ]
  %98 = inttoptr i64 %97 to %"class.base::internal::PartitionFreelistEntry"*
  %99 = getelementptr inbounds %"class.base::internal::ThreadCache", %"class.base::internal::ThreadCache"* %40, i64 0, i32 0, i64 %43, i32 1
  %100 = load i8, i8* %99, align 8
  %101 = add i8 %100, -1
  store i8 %101, i8* %99, align 8
  store %"class.base::internal::PartitionFreelistEntry"* %98, %"class.base::internal::PartitionFreelistEntry"** %63, align 8
  %102 = getelementptr inbounds %"class.base::internal::ThreadCache", %"class.base::internal::ThreadCache"* %40, i64 0, i32 0, i64 %43, i32 3
  %103 = load i16, i16* %102, align 2
  %104 = zext i16 %103 to i64
  store i64 %104, i64* %4, align 8
  %105 = load i16, i16* %102, align 2
  %106 = zext i16 %105 to i64
  %107 = getelementptr inbounds i8, i8* %39, i64 1424
  %108 = bitcast i8* %107 to i64*
  %109 = load i64, i64* %108, align 8
  %110 = sub i64 %109, %106
  store i64 %110, i64* %108, align 8
  %111 = bitcast %"class.base::internal::PartitionFreelistEntry"* %80 to i8*
  br label %114

112:                                              ; preds = %37
  %113 = call i8* @_ZN4base13PartitionRootILb1EE28MaybeInitThreadCacheAndAllocEtPm(%"struct.base::PartitionRoot"* %5, i16 zeroext %24, i64* nonnull %4) #17
  br label %114

114:                                              ; preds = %112, %96
  %115 = phi i8* [ %113, %112 ], [ %111, %96 ]
  %116 = icmp eq i8* %115, null
  br i1 %116, label %117, label %254, !prof !7

117:                                              ; preds = %114
  %118 = zext i16 %24 to i64
  br label %119

119:                                              ; preds = %117, %71, %53
  %120 = phi i64 [ %118, %117 ], [ %43, %71 ], [ %43, %53 ]
  %121 = getelementptr inbounds %"struct.base::PartitionRoot", %"struct.base::PartitionRoot"* %5, i64 0, i32 10, i64 %120
  %122 = getelementptr inbounds %"struct.base::PartitionRoot", %"struct.base::PartitionRoot"* %5, i64 0, i32 8
  %123 = getelementptr inbounds %"class.base::internal::MaybeSpinLock", %"class.base::internal::MaybeSpinLock"* %122, i64 0, i32 0
  %124 = getelementptr inbounds %"class.base::internal::MaybeSpinLock", %"class.base::internal::MaybeSpinLock"* %122, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  br label %125

125:                                              ; preds = %137, %119
  %126 = phi i32 [ 0, %119 ], [ %138, %137 ]
  %127 = phi i32 [ 1, %119 ], [ %141, %137 ]
  %128 = load atomic i32, i32* %124 monotonic, align 4
  %129 = icmp eq i32 %128, 0
  br i1 %129, label %130, label %133, !prof !9

130:                                              ; preds = %125
  %131 = cmpxchg weak i32* %124, i32 0, i32 1 acquire monotonic
  %132 = extractvalue { i32, i1 } %131, 1
  br i1 %132, label %148, label %133, !prof !6

133:                                              ; preds = %130, %125
  %134 = icmp sgt i32 %127, 0
  br i1 %134, label %143, label %137

135:                                              ; preds = %143
  %136 = add i32 %127, %126
  br label %137

137:                                              ; preds = %135, %133
  %138 = phi i32 [ %126, %133 ], [ %136, %135 ]
  %139 = shl i32 %127, 1
  %140 = icmp slt i32 %139, 64
  %141 = select i1 %140, i32 %139, i32 64
  %142 = icmp slt i32 %138, 1000
  br i1 %142, label %125, label %147

143:                                              ; preds = %133, %143
  %144 = phi i32 [ %145, %143 ], [ 0, %133 ]
  call void asm sideeffect "pause", "~{dirflag},~{fpsr},~{flags}"() #17, !srcloc !10
  %145 = add nuw nsw i32 %144, 1
  %146 = icmp eq i32 %145, %127
  br i1 %146, label %135, label %143

147:                                              ; preds = %137
  call void @_ZN4base8internal13SpinningMutex8LockSlowEv(%"class.base::internal::SpinningMutex"* %123) #17
  br label %148

148:                                              ; preds = %130, %147
  %149 = getelementptr inbounds %"struct.base::internal::PartitionBucket", %"struct.base::internal::PartitionBucket"* %121, i64 0, i32 0
  %150 = load %"struct.base::internal::SlotSpanMetadata"*, %"struct.base::internal::SlotSpanMetadata"** %149, align 8
  %151 = bitcast %"struct.base::internal::SlotSpanMetadata"* %150 to i8**
  %152 = load i8*, i8** %151, align 1
  %153 = icmp eq i8* %152, null
  br i1 %153, label %178, label %154, !prof !7

154:                                              ; preds = %148
  %155 = getelementptr inbounds %"struct.base::internal::SlotSpanMetadata", %"struct.base::internal::SlotSpanMetadata"* %150, i64 0, i32 0
  store i8 0, i8* %3, align 1
  %156 = bitcast i8* %152 to %"struct.base::internal::EncodedPartitionFreelistEntry"**
  %157 = load %"struct.base::internal::EncodedPartitionFreelistEntry"*, %"struct.base::internal::EncodedPartitionFreelistEntry"** %156, align 8
  %158 = icmp eq %"struct.base::internal::EncodedPartitionFreelistEntry"* %157, null
  %159 = ptrtoint %"struct.base::internal::EncodedPartitionFreelistEntry"* %157 to i64
  br i1 %158, label %160, label %162

160:                                              ; preds = %154
  %161 = call i64 @llvm.bswap.i64(i64 %159) #17
  br label %172

162:                                              ; preds = %154
  %163 = xor i64 %159, -1
  %164 = getelementptr inbounds i8, i8* %152, i64 8
  %165 = bitcast i8* %164 to i64*
  %166 = load i64, i64* %165, align 8
  %167 = icmp eq i64 %166, %163
  br i1 %167, label %169, label %168, !prof !6

168:                                              ; preds = %162
  call fastcc void @_ZN4base8internal12_GLOBAL__N_126FreelistCorruptionDetectedEv() #18
  unreachable

169:                                              ; preds = %162
  %170 = call i64 @llvm.bswap.i64(i64 %159) #17
  %171 = inttoptr i64 %170 to i8*
  call void @llvm.prefetch(i8* nonnull %171, i32 0, i32 3, i32 1) #17
  br label %172

172:                                              ; preds = %169, %160
  %173 = phi i64 [ %161, %160 ], [ %170, %169 ]
  %174 = inttoptr i64 %173 to %"class.base::internal::PartitionFreelistEntry"*
  store %"class.base::internal::PartitionFreelistEntry"* %174, %"class.base::internal::PartitionFreelistEntry"** %155, align 1
  %175 = getelementptr inbounds %"struct.base::internal::SlotSpanMetadata", %"struct.base::internal::SlotSpanMetadata"* %150, i64 0, i32 3
  %176 = load i16, i16* %175, align 1
  %177 = add i16 %176, 1
  store i16 %177, i16* %175, align 1
  br label %180

178:                                              ; preds = %148
  %179 = call i8* @_ZN4base8internal15PartitionBucketILb1EE13SlowPathAllocEPNS_13PartitionRootILb1EEEimmPb(%"struct.base::internal::PartitionBucket"* %121, %"struct.base::PartitionRoot"* %5, i32 0, i64 %6, i64 16384, i8* nonnull %3) #17
  br label %180

180:                                              ; preds = %178, %172
  %181 = phi i8* [ %152, %172 ], [ %179, %178 ]
  %182 = atomicrmw xchg i32* %124, i32 0 release
  %183 = icmp eq i32 %182, 2
  br i1 %183, label %184, label %251, !prof !7

184:                                              ; preds = %180
  call void @_ZN4base8internal13SpinningMutex9FutexWakeEv(%"class.base::internal::SpinningMutex"* %123) #17
  br label %251

185:                                              ; preds = %33
  %186 = zext i16 %24 to i64
  %187 = getelementptr inbounds %"struct.base::PartitionRoot", %"struct.base::PartitionRoot"* %5, i64 0, i32 10, i64 %186
  %188 = getelementptr inbounds %"struct.base::PartitionRoot", %"struct.base::PartitionRoot"* %5, i64 0, i32 8
  %189 = getelementptr inbounds %"class.base::internal::MaybeSpinLock", %"class.base::internal::MaybeSpinLock"* %188, i64 0, i32 0
  %190 = getelementptr inbounds %"class.base::internal::MaybeSpinLock", %"class.base::internal::MaybeSpinLock"* %188, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  br label %191

191:                                              ; preds = %203, %185
  %192 = phi i32 [ 0, %185 ], [ %204, %203 ]
  %193 = phi i32 [ 1, %185 ], [ %207, %203 ]
  %194 = load atomic i32, i32* %190 monotonic, align 4
  %195 = icmp eq i32 %194, 0
  br i1 %195, label %196, label %199, !prof !9

196:                                              ; preds = %191
  %197 = cmpxchg weak i32* %190, i32 0, i32 1 acquire monotonic
  %198 = extractvalue { i32, i1 } %197, 1
  br i1 %198, label %214, label %199, !prof !6

199:                                              ; preds = %196, %191
  %200 = icmp sgt i32 %193, 0
  br i1 %200, label %209, label %203

201:                                              ; preds = %209
  %202 = add i32 %193, %192
  br label %203

203:                                              ; preds = %201, %199
  %204 = phi i32 [ %192, %199 ], [ %202, %201 ]
  %205 = shl i32 %193, 1
  %206 = icmp slt i32 %205, 64
  %207 = select i1 %206, i32 %205, i32 64
  %208 = icmp slt i32 %204, 1000
  br i1 %208, label %191, label %213

209:                                              ; preds = %199, %209
  %210 = phi i32 [ %211, %209 ], [ 0, %199 ]
  tail call void asm sideeffect "pause", "~{dirflag},~{fpsr},~{flags}"() #17, !srcloc !10
  %211 = add nuw nsw i32 %210, 1
  %212 = icmp eq i32 %211, %193
  br i1 %212, label %201, label %209

213:                                              ; preds = %203
  tail call void @_ZN4base8internal13SpinningMutex8LockSlowEv(%"class.base::internal::SpinningMutex"* %189) #17
  br label %214

214:                                              ; preds = %196, %213
  %215 = getelementptr inbounds %"struct.base::internal::PartitionBucket", %"struct.base::internal::PartitionBucket"* %187, i64 0, i32 0
  %216 = load %"struct.base::internal::SlotSpanMetadata"*, %"struct.base::internal::SlotSpanMetadata"** %215, align 8
  %217 = bitcast %"struct.base::internal::SlotSpanMetadata"* %216 to i8**
  %218 = load i8*, i8** %217, align 1
  %219 = icmp eq i8* %218, null
  br i1 %219, label %244, label %220, !prof !7

220:                                              ; preds = %214
  %221 = getelementptr inbounds %"struct.base::internal::SlotSpanMetadata", %"struct.base::internal::SlotSpanMetadata"* %216, i64 0, i32 0
  store i8 0, i8* %3, align 1
  %222 = bitcast i8* %218 to %"struct.base::internal::EncodedPartitionFreelistEntry"**
  %223 = load %"struct.base::internal::EncodedPartitionFreelistEntry"*, %"struct.base::internal::EncodedPartitionFreelistEntry"** %222, align 8
  %224 = icmp eq %"struct.base::internal::EncodedPartitionFreelistEntry"* %223, null
  %225 = ptrtoint %"struct.base::internal::EncodedPartitionFreelistEntry"* %223 to i64
  br i1 %224, label %226, label %228

226:                                              ; preds = %220
  %227 = tail call i64 @llvm.bswap.i64(i64 %225) #17
  br label %238

228:                                              ; preds = %220
  %229 = xor i64 %225, -1
  %230 = getelementptr inbounds i8, i8* %218, i64 8
  %231 = bitcast i8* %230 to i64*
  %232 = load i64, i64* %231, align 8
  %233 = icmp eq i64 %232, %229
  br i1 %233, label %235, label %234, !prof !6

234:                                              ; preds = %228
  tail call fastcc void @_ZN4base8internal12_GLOBAL__N_126FreelistCorruptionDetectedEv() #18
  unreachable

235:                                              ; preds = %228
  %236 = tail call i64 @llvm.bswap.i64(i64 %225) #17
  %237 = inttoptr i64 %236 to i8*
  tail call void @llvm.prefetch(i8* nonnull %237, i32 0, i32 3, i32 1) #17
  br label %238

238:                                              ; preds = %235, %226
  %239 = phi i64 [ %227, %226 ], [ %236, %235 ]
  %240 = inttoptr i64 %239 to %"class.base::internal::PartitionFreelistEntry"*
  store %"class.base::internal::PartitionFreelistEntry"* %240, %"class.base::internal::PartitionFreelistEntry"** %221, align 1
  %241 = getelementptr inbounds %"struct.base::internal::SlotSpanMetadata", %"struct.base::internal::SlotSpanMetadata"* %216, i64 0, i32 3
  %242 = load i16, i16* %241, align 1
  %243 = add i16 %242, 1
  store i16 %243, i16* %241, align 1
  br label %246

244:                                              ; preds = %214
  %245 = call i8* @_ZN4base8internal15PartitionBucketILb1EE13SlowPathAllocEPNS_13PartitionRootILb1EEEimmPb(%"struct.base::internal::PartitionBucket"* %187, %"struct.base::PartitionRoot"* %5, i32 0, i64 %6, i64 16384, i8* nonnull %3) #17
  br label %246

246:                                              ; preds = %244, %238
  %247 = phi i8* [ %218, %238 ], [ %245, %244 ]
  %248 = atomicrmw xchg i32* %190, i32 0 release
  %249 = icmp eq i32 %248, 2
  br i1 %249, label %250, label %251, !prof !7

250:                                              ; preds = %246
  call void @_ZN4base8internal13SpinningMutex9FutexWakeEv(%"class.base::internal::SpinningMutex"* %189) #17
  br label %251

251:                                              ; preds = %250, %246, %184, %180
  %252 = phi i8* [ %181, %180 ], [ %181, %184 ], [ %247, %246 ], [ %247, %250 ]
  %253 = icmp eq i8* %252, null
  br i1 %253, label %256, label %254, !prof !7

254:                                              ; preds = %114, %251
  %255 = phi i8* [ %252, %251 ], [ %115, %114 ]
  br label %256

256:                                              ; preds = %251, %254
  %257 = phi i8* [ null, %251 ], [ %255, %254 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %25) #17
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %3) #17
  %258 = bitcast i8* %257 to %"struct.base::internal::RacefulWorklist<unsigned long>::Node"*
  ret %"struct.base::internal::RacefulWorklist<unsigned long>::Node"* %258
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal17MetadataAllocatorINS0_15RacefulWorklistImE4NodeEE10deallocateEPS4_m(%"class.base::internal::MetadataAllocator.29"*, %"struct.base::internal::RacefulWorklist<unsigned long>::Node"*, i64) local_unnamed_addr #3 comdat align 2 {
  %4 = alloca %"struct.base::internal::DeferredUnmap", align 8
  %5 = tail call dereferenceable(5408) %"struct.base::PartitionRoot"* @_ZN4base8internal23PCScanMetadataAllocatorEv() #17
  %6 = bitcast %"struct.base::internal::RacefulWorklist<unsigned long>::Node"* %1 to i8*
  %7 = icmp eq %"struct.base::internal::RacefulWorklist<unsigned long>::Node"* %1, null
  br i1 %7, label %241, label %8, !prof !7

8:                                                ; preds = %3
  tail call void @llvm.prefetch(i8* nonnull %6, i32 0, i32 3, i32 1) #17
  %9 = ptrtoint %"struct.base::internal::RacefulWorklist<unsigned long>::Node"* %1 to i64
  %10 = and i64 %9, -2097152
  %11 = or i64 %10, 4096
  %12 = inttoptr i64 %11 to i8*
  %13 = lshr i64 %9, 9
  %14 = and i64 %13, 4064
  %15 = getelementptr inbounds i8, i8* %12, i64 %14
  %16 = bitcast i8* %15 to %"struct.base::internal::PartitionPage"*
  %17 = getelementptr inbounds i8, i8* %15, i64 30
  %18 = load i8, i8* %17, align 2
  %19 = zext i8 %18 to i64
  %20 = sub nsw i64 0, %19
  %21 = getelementptr inbounds %"struct.base::internal::PartitionPage", %"struct.base::internal::PartitionPage"* %16, i64 %20, i32 0
  %22 = bitcast %union.anon.123* %21 to %"struct.base::internal::SlotSpanMetadata"*
  %23 = bitcast %union.anon.123* %21 to i8*
  tail call void @llvm.prefetch(i8* %23, i32 0, i32 3, i32 1) #17
  %24 = ptrtoint %union.anon.123* %21 to i64
  %25 = and i64 %24, -4096
  %26 = inttoptr i64 %25 to %"struct.base::internal::PartitionSuperPageExtentEntry"*
  %27 = getelementptr inbounds %"struct.base::internal::PartitionSuperPageExtentEntry", %"struct.base::internal::PartitionSuperPageExtentEntry"* %26, i64 0, i32 0
  %28 = load %"struct.base::PartitionRoot"*, %"struct.base::PartitionRoot"** %27, align 4096
  %29 = getelementptr inbounds %"struct.base::PartitionRoot", %"struct.base::PartitionRoot"* %28, i64 0, i32 0
  %30 = load i8, i8* %29, align 8
  %31 = icmp eq i8 %30, 2
  br i1 %31, label %32, label %101, !prof !7

32:                                               ; preds = %8
  %33 = load atomic i8, i8* getelementptr inbounds (%"class.base::internal::PCScan", %"class.base::internal::PCScan"* @_ZN4base8internal6PCScan9instance_E, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0) acquire, align 8
  %34 = icmp eq i8 %33, 2
  br i1 %34, label %35, label %36, !prof !7

35:                                               ; preds = %32
  tail call void @_ZN4base8internal6PCScan8JoinScanEv() #17
  br label %36

36:                                               ; preds = %35, %32
  %37 = getelementptr inbounds %"struct.base::internal::PartitionPage", %"struct.base::internal::PartitionPage"* %16, i64 %20, i32 0, i32 1, i64 8
  %38 = bitcast i8* %37 to %"struct.base::internal::PartitionBucket"**
  %39 = load %"struct.base::internal::PartitionBucket"*, %"struct.base::internal::PartitionBucket"** %38, align 1
  %40 = getelementptr inbounds %"struct.base::PartitionRoot", %"struct.base::PartitionRoot"* %28, i64 0, i32 10, i64 0
  %41 = icmp ugt %"struct.base::internal::PartitionBucket"* %40, %39
  %42 = getelementptr inbounds %"struct.base::PartitionRoot", %"struct.base::PartitionRoot"* %28, i64 0, i32 11
  %43 = icmp ult %"struct.base::internal::PartitionBucket"* %42, %39
  %44 = or i1 %41, %43
  br i1 %44, label %101, label %45, !prof !7

45:                                               ; preds = %36
  %46 = getelementptr inbounds %"struct.base::internal::PartitionPage", %"struct.base::internal::PartitionPage"* %16, i64 %20, i32 0, i32 1, i64 21
  %47 = load i8, i8* %46, align 1, !range !5
  %48 = icmp eq i8 %47, 0
  br i1 %48, label %49, label %53, !prof !6

49:                                               ; preds = %45
  %50 = getelementptr inbounds %"struct.base::internal::PartitionBucket", %"struct.base::internal::PartitionBucket"* %39, i64 0, i32 3
  %51 = load i32, i32* %50, align 8
  %52 = zext i32 %51 to i64
  br label %60

53:                                               ; preds = %45
  %54 = bitcast %union.anon.123* %21 to %"struct.base::internal::PartitionPage"*
  %55 = getelementptr inbounds %"struct.base::internal::PartitionPage", %"struct.base::internal::PartitionPage"* %54, i64 1, i32 0, i32 0, i32 0
  %56 = load i64, i64* %55, align 1
  %57 = getelementptr inbounds %"struct.base::internal::PartitionBucket", %"struct.base::internal::PartitionBucket"* %39, i64 0, i32 3
  %58 = load i32, i32* %57, align 8
  %59 = zext i32 %58 to i64
  br label %60

60:                                               ; preds = %53, %49
  %61 = phi i64 [ %52, %49 ], [ %59, %53 ]
  %62 = phi i64 [ %52, %49 ], [ %56, %53 ]
  %63 = load atomic i64, i64* getelementptr inbounds (%"class.base::internal::PCScan", %"class.base::internal::PCScan"* @_ZN4base8internal6PCScan9instance_E, i64 0, i32 0, i32 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 8
  %64 = inttoptr i64 %10 to i8*
  %65 = and i64 %63, 1
  %66 = icmp eq i64 %65, 0
  %67 = select i1 %66, i64 16384, i64 32768
  %68 = getelementptr inbounds i8, i8* %64, i64 %67
  %69 = bitcast i8* %68 to %"class.base::internal::ObjectBitmap"*
  %70 = lshr i64 %9, 4
  %71 = lshr i64 %9, 10
  %72 = and i64 %71, 2047
  %73 = and i64 %70, 63
  %74 = shl i64 1, %73
  %75 = getelementptr inbounds %"class.base::internal::ObjectBitmap", %"class.base::internal::ObjectBitmap"* %69, i64 0, i32 0, i32 0, i64 %72
  %76 = atomicrmw or i64* %75, i64 %74 monotonic
  %77 = and i64 %76, %74
  %78 = icmp eq i64 %77, 0
  br i1 %78, label %80, label %79, !prof !6

79:                                               ; preds = %60
  notail call void @_ZN4base8internal17DoubleFreeAttemptEv() #18
  unreachable

80:                                               ; preds = %60
  %81 = atomicrmw add i64* getelementptr inbounds (%"class.base::internal::PCScan", %"class.base::internal::PCScan"* @_ZN4base8internal6PCScan9instance_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0), i64 %61 monotonic
  %82 = add i64 %81, %61
  %83 = load atomic i64, i64* getelementptr inbounds (%"class.base::internal::PCScan", %"class.base::internal::PCScan"* @_ZN4base8internal6PCScan9instance_E, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 8
  %84 = icmp ugt i64 %82, %83
  br i1 %84, label %85, label %91

85:                                               ; preds = %80
  %86 = load %"class.base::internal::PCScanSchedulingBackend"*, %"class.base::internal::PCScanSchedulingBackend"** getelementptr inbounds (%"class.base::internal::PCScan", %"class.base::internal::PCScan"* @_ZN4base8internal6PCScan9instance_E, i64 0, i32 0, i32 2), align 8
  %87 = bitcast %"class.base::internal::PCScanSchedulingBackend"* %86 to i1 (%"class.base::internal::PCScanSchedulingBackend"*)***
  %88 = load i1 (%"class.base::internal::PCScanSchedulingBackend"*)**, i1 (%"class.base::internal::PCScanSchedulingBackend"*)*** %87, align 8
  %89 = load i1 (%"class.base::internal::PCScanSchedulingBackend"*)*, i1 (%"class.base::internal::PCScanSchedulingBackend"*)** %88, align 8
  %90 = tail call zeroext i1 %89(%"class.base::internal::PCScanSchedulingBackend"* %86) #17
  br label %91

91:                                               ; preds = %85, %80
  %92 = phi i1 [ false, %80 ], [ %90, %85 ]
  %93 = load i8, i8* getelementptr inbounds (%"class.base::internal::PCScan", %"class.base::internal::PCScan"* @_ZN4base8internal6PCScan9instance_E, i64 0, i32 2), align 1
  %94 = icmp eq i8 %93, 1
  br i1 %94, label %95, label %96

95:                                               ; preds = %91
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 1 %6, i8 0, i64 %62, i1 false) #17
  br label %96

96:                                               ; preds = %95, %91
  br i1 %92, label %97, label %241, !prof !7

97:                                               ; preds = %96
  %98 = load atomic i8, i8* getelementptr inbounds (%"class.base::internal::PCScan", %"class.base::internal::PCScan"* @_ZN4base8internal6PCScan9instance_E, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0) monotonic, align 8
  %99 = icmp eq i8 %98, 0
  br i1 %99, label %100, label %241

100:                                              ; preds = %97
  tail call void @_ZN4base8internal6PCScan11PerformScanENS1_14InvocationModeE(%"class.base::internal::PCScan"* nonnull @_ZN4base8internal6PCScan9instance_E, i32 1) #17
  br label %241

101:                                              ; preds = %36, %8
  %102 = getelementptr inbounds %"struct.base::PartitionRoot", %"struct.base::PartitionRoot"* %28, i64 0, i32 2
  %103 = load i8, i8* %102, align 2, !range !5
  %104 = icmp eq i8 %103, 0
  br i1 %104, label %173, label %105, !prof !7

105:                                              ; preds = %101
  %106 = getelementptr inbounds %"struct.base::internal::PartitionPage", %"struct.base::internal::PartitionPage"* %16, i64 %20, i32 0, i32 1, i64 8
  %107 = bitcast i8* %106 to %"struct.base::internal::PartitionBucket"**
  %108 = load %"struct.base::internal::PartitionBucket"*, %"struct.base::internal::PartitionBucket"** %107, align 1
  %109 = getelementptr inbounds %"struct.base::PartitionRoot", %"struct.base::PartitionRoot"* %28, i64 0, i32 10, i64 0
  %110 = icmp ule %"struct.base::internal::PartitionBucket"* %109, %108
  %111 = getelementptr inbounds %"struct.base::PartitionRoot", %"struct.base::PartitionRoot"* %28, i64 0, i32 11
  %112 = icmp uge %"struct.base::internal::PartitionBucket"* %111, %108
  %113 = and i1 %112, %110
  %114 = ptrtoint %"struct.base::internal::PartitionBucket"* %108 to i64
  br i1 %113, label %115, label %173, !prof !6

115:                                              ; preds = %105
  %116 = load i32, i32* @_ZN4base8internal18g_thread_cache_keyE, align 4
  %117 = tail call i8* @pthread_getspecific(i32 %116) #17
  %118 = bitcast i8* %117 to %"class.base::internal::ThreadCache"*
  %119 = icmp ugt i8* %117, inttoptr (i64 1 to i8*)
  br i1 %119, label %120, label %173, !prof !6

120:                                              ; preds = %115
  %121 = ptrtoint %"struct.base::internal::PartitionBucket"* %109 to i64
  %122 = sub i64 %114, %121
  %123 = sdiv exact i64 %122, 40
  %124 = getelementptr inbounds i8, i8* %117, i64 1480
  %125 = bitcast i8* %124 to i64*
  %126 = load i64, i64* %125, align 8
  %127 = add i64 %126, 1
  store i64 %127, i64* %125, align 8
  %128 = load i16, i16* @_ZN4base8internal11ThreadCache28largest_active_bucket_index_E, align 2
  %129 = zext i16 %128 to i64
  %130 = icmp ugt i64 %123, %129
  br i1 %130, label %131, label %136, !prof !7

131:                                              ; preds = %120
  %132 = getelementptr inbounds i8, i8* %117, i64 1496
  %133 = bitcast i8* %132 to i64*
  %134 = load i64, i64* %133, align 8
  %135 = add i64 %134, 1
  store i64 %135, i64* %133, align 8
  br label %173

136:                                              ; preds = %120
  %137 = getelementptr inbounds %"class.base::internal::ThreadCache", %"class.base::internal::ThreadCache"* %118, i64 0, i32 0, i64 %123
  %138 = bitcast %"struct.base::internal::ThreadCache::Bucket"* %137 to i64*
  %139 = load i64, i64* %138, align 8
  %140 = tail call i64 @llvm.bswap.i64(i64 %139) #17
  %141 = inttoptr i64 %140 to %"struct.base::internal::EncodedPartitionFreelistEntry"*
  %142 = bitcast %"struct.base::internal::RacefulWorklist<unsigned long>::Node"* %1 to %"struct.base::internal::EncodedPartitionFreelistEntry"**
  store %"struct.base::internal::EncodedPartitionFreelistEntry"* %141, %"struct.base::internal::EncodedPartitionFreelistEntry"** %142, align 8
  %143 = xor i64 %140, -1
  %144 = getelementptr inbounds %"struct.base::internal::RacefulWorklist<unsigned long>::Node", %"struct.base::internal::RacefulWorklist<unsigned long>::Node"* %1, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %145 = bitcast i8* %144 to i64*
  store i64 %143, i64* %145, align 8
  %146 = bitcast %"struct.base::internal::ThreadCache::Bucket"* %137 to %"struct.base::internal::RacefulWorklist<unsigned long>::Node"**
  store %"struct.base::internal::RacefulWorklist<unsigned long>::Node"* %1, %"struct.base::internal::RacefulWorklist<unsigned long>::Node"** %146, align 8
  %147 = getelementptr inbounds %"class.base::internal::ThreadCache", %"class.base::internal::ThreadCache"* %118, i64 0, i32 0, i64 %123, i32 1
  %148 = load i8, i8* %147, align 8
  %149 = add i8 %148, 1
  store i8 %149, i8* %147, align 8
  %150 = getelementptr inbounds %"class.base::internal::ThreadCache", %"class.base::internal::ThreadCache"* %118, i64 0, i32 0, i64 %123, i32 3
  %151 = load i16, i16* %150, align 2
  %152 = zext i16 %151 to i64
  %153 = getelementptr inbounds i8, i8* %117, i64 1424
  %154 = bitcast i8* %153 to i64*
  %155 = load i64, i64* %154, align 8
  %156 = add i64 %155, %152
  store i64 %156, i64* %154, align 8
  %157 = getelementptr inbounds i8, i8* %117, i64 1488
  %158 = bitcast i8* %157 to i64*
  %159 = load i64, i64* %158, align 8
  %160 = add i64 %159, 1
  store i64 %160, i64* %158, align 8
  %161 = getelementptr inbounds %"class.base::internal::ThreadCache", %"class.base::internal::ThreadCache"* %118, i64 0, i32 0, i64 %123, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %162 = load atomic i8, i8* %161 monotonic, align 1
  %163 = icmp ugt i8 %149, %162
  br i1 %163, label %164, label %167, !prof !7

164:                                              ; preds = %136
  %165 = lshr i8 %162, 1
  %166 = zext i8 %165 to i64
  tail call void @_ZN4base8internal11ThreadCache11ClearBucketERNS1_6BucketEm(%"class.base::internal::ThreadCache"* %118, %"struct.base::internal::ThreadCache::Bucket"* dereferenceable(16) %137, i64 %166) #17
  br label %167

167:                                              ; preds = %164, %136
  %168 = getelementptr inbounds i8, i8* %117, i64 1432
  %169 = load atomic i8, i8* %168 monotonic, align 1
  %170 = and i8 %169, 1
  %171 = icmp eq i8 %170, 0
  br i1 %171, label %241, label %172, !prof !6

172:                                              ; preds = %167
  tail call void @_ZN4base8internal11ThreadCache13PurgeInternalEv(%"class.base::internal::ThreadCache"* %118) #17
  br label %241

173:                                              ; preds = %131, %115, %105, %101
  %174 = bitcast %"struct.base::internal::DeferredUnmap"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %174) #17
  %175 = getelementptr inbounds %"struct.base::internal::DeferredUnmap", %"struct.base::internal::DeferredUnmap"* %4, i64 0, i32 0
  %176 = getelementptr inbounds %"struct.base::internal::DeferredUnmap", %"struct.base::internal::DeferredUnmap"* %4, i64 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %174, i8 0, i64 16, i1 false) #17
  %177 = getelementptr inbounds %"struct.base::PartitionRoot", %"struct.base::PartitionRoot"* %28, i64 0, i32 8
  %178 = getelementptr inbounds %"class.base::internal::MaybeSpinLock", %"class.base::internal::MaybeSpinLock"* %177, i64 0, i32 0
  %179 = getelementptr inbounds %"class.base::internal::MaybeSpinLock", %"class.base::internal::MaybeSpinLock"* %177, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  br label %180

180:                                              ; preds = %192, %173
  %181 = phi i32 [ 0, %173 ], [ %193, %192 ]
  %182 = phi i32 [ 1, %173 ], [ %196, %192 ]
  %183 = load atomic i32, i32* %179 monotonic, align 4
  %184 = icmp eq i32 %183, 0
  br i1 %184, label %185, label %188, !prof !9

185:                                              ; preds = %180
  %186 = cmpxchg weak i32* %179, i32 0, i32 1 acquire monotonic
  %187 = extractvalue { i32, i1 } %186, 1
  br i1 %187, label %203, label %188, !prof !6

188:                                              ; preds = %185, %180
  %189 = icmp sgt i32 %182, 0
  br i1 %189, label %198, label %192

190:                                              ; preds = %198
  %191 = add i32 %182, %181
  br label %192

192:                                              ; preds = %190, %188
  %193 = phi i32 [ %181, %188 ], [ %191, %190 ]
  %194 = shl i32 %182, 1
  %195 = icmp slt i32 %194, 64
  %196 = select i1 %195, i32 %194, i32 64
  %197 = icmp slt i32 %193, 1000
  br i1 %197, label %180, label %202

198:                                              ; preds = %188, %198
  %199 = phi i32 [ %200, %198 ], [ 0, %188 ]
  tail call void asm sideeffect "pause", "~{dirflag},~{fpsr},~{flags}"() #17, !srcloc !10
  %200 = add nuw nsw i32 %199, 1
  %201 = icmp eq i32 %200, %182
  br i1 %201, label %190, label %198

202:                                              ; preds = %192
  tail call void @_ZN4base8internal13SpinningMutex8LockSlowEv(%"class.base::internal::SpinningMutex"* %178) #17
  br label %203

203:                                              ; preds = %185, %202
  %204 = bitcast %union.anon.123* %21 to i8**
  %205 = load i8*, i8** %204, align 1
  %206 = icmp eq i8* %205, %6
  br i1 %206, label %209, label %207, !prof !7

207:                                              ; preds = %203
  %208 = ptrtoint i8* %205 to i64
  br label %212

209:                                              ; preds = %203
  tail call void @_ZN7logging8RawCheckEPKc(i8* getelementptr inbounds ([105 x i8], [105 x i8]* @.str.15, i64 0, i64 0)) #17
  %210 = getelementptr inbounds %union.anon.123, %union.anon.123* %21, i64 0, i32 0, i32 0
  %211 = load i64, i64* %210, align 1
  br label %212

212:                                              ; preds = %209, %207
  %213 = phi i64 [ %208, %207 ], [ %211, %209 ]
  %214 = tail call i64 @llvm.bswap.i64(i64 %213) #17
  %215 = inttoptr i64 %214 to %"struct.base::internal::EncodedPartitionFreelistEntry"*
  %216 = bitcast %"struct.base::internal::RacefulWorklist<unsigned long>::Node"* %1 to %"struct.base::internal::EncodedPartitionFreelistEntry"**
  store %"struct.base::internal::EncodedPartitionFreelistEntry"* %215, %"struct.base::internal::EncodedPartitionFreelistEntry"** %216, align 8
  %217 = xor i64 %214, -1
  %218 = getelementptr inbounds %"struct.base::internal::RacefulWorklist<unsigned long>::Node", %"struct.base::internal::RacefulWorklist<unsigned long>::Node"* %1, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %219 = bitcast i8* %218 to i64*
  store i64 %217, i64* %219, align 8
  %220 = bitcast %union.anon.123* %21 to %"struct.base::internal::RacefulWorklist<unsigned long>::Node"**
  store %"struct.base::internal::RacefulWorklist<unsigned long>::Node"* %1, %"struct.base::internal::RacefulWorklist<unsigned long>::Node"** %220, align 1
  %221 = getelementptr inbounds %"struct.base::internal::PartitionPage", %"struct.base::internal::PartitionPage"* %16, i64 %20, i32 0, i32 1, i64 16
  %222 = bitcast i8* %221 to i16*
  %223 = load i16, i16* %222, align 1
  %224 = add i16 %223, -1
  store i16 %224, i16* %222, align 1
  %225 = icmp slt i16 %224, 1
  br i1 %225, label %226, label %230, !prof !7

226:                                              ; preds = %212
  %227 = tail call { i8*, i64 } @_ZN4base8internal16SlotSpanMetadataILb1EE12FreeSlowPathEv(%"struct.base::internal::SlotSpanMetadata"* %22) #17
  %228 = extractvalue { i8*, i64 } %227, 0
  %229 = extractvalue { i8*, i64 } %227, 1
  br label %230

230:                                              ; preds = %226, %212
  %231 = phi i8* [ %228, %226 ], [ null, %212 ]
  %232 = phi i64 [ %229, %226 ], [ 0, %212 ]
  store i8* %231, i8** %175, align 8
  store i64 %232, i64* %176, align 8
  %233 = atomicrmw xchg i32* %179, i32 0 release
  %234 = icmp eq i32 %233, 2
  br i1 %234, label %235, label %236, !prof !7

235:                                              ; preds = %230
  tail call void @_ZN4base8internal13SpinningMutex9FutexWakeEv(%"class.base::internal::SpinningMutex"* %178) #17
  br label %236

236:                                              ; preds = %235, %230
  %237 = load i8*, i8** %175, align 8
  %238 = icmp eq i8* %237, null
  br i1 %238, label %240, label %239, !prof !6

239:                                              ; preds = %236
  call void @_ZN4base8internal13DeferredUnmap5UnmapEv(%"struct.base::internal::DeferredUnmap"* nonnull %4) #17
  br label %240

240:                                              ; preds = %239, %236
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %174) #17
  br label %241

241:                                              ; preds = %3, %96, %97, %100, %167, %172, %240
  ret void
}

declare void @_ZN4base3CPUC1Ev(%"class.base::CPU"*) unnamed_addr #2

declare void @_ZN4base8internal21PartitionAddressSpace4InitEv() local_unnamed_addr #2

declare void @_ZN4base19RecommitSystemPagesEPvmNS_30PageAccessibilityConfigurationENS_28PageAccessibilityDispositionE(i8*, i64, i32, i32) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal6PCScan12PCScanThreadC2Ev(%"class.base::internal::PCScan::PCScanThread"*) unnamed_addr #3 comdat align 2 {
  %2 = alloca %"class.std::__1::thread", align 8
  %3 = bitcast %"class.std::__1::thread"* %2 to i8*
  %4 = bitcast %"class.base::internal::PCScan::PCScanThread"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %4, i8 0, i64 104, i1 false)
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %3) #17
  %5 = ptrtoint %"class.base::internal::PCScan::PCScanThread"* %0 to i64
  %6 = tail call i8* @_Znwm(i64 8) #19
  %7 = bitcast i8* %6 to %"class.std::__1::__thread_struct"*
  tail call void @_ZNSt3__115__thread_structC1Ev(%"class.std::__1::__thread_struct"* nonnull %7) #17
  %8 = ptrtoint i8* %6 to i64
  %9 = tail call i8* @_Znwm(i64 16) #19
  %10 = bitcast i8* %9 to i64*
  store i64 %8, i64* %10, align 8
  %11 = getelementptr inbounds i8, i8* %9, i64 8
  %12 = bitcast i8* %11 to i64*
  store i64 %5, i64* %12, align 8
  %13 = getelementptr inbounds %"class.std::__1::thread", %"class.std::__1::thread"* %2, i64 0, i32 0
  %14 = call i32 @pthread_create(i64* nonnull %13, %union.pthread_attr_t* null, i8* (i8*)* nonnull @_ZNSt3__114__thread_proxyINS_5tupleIJNS_10unique_ptrINS_15__thread_structENS_14default_deleteIS3_EEEEZN4base8internal6PCScan12PCScanThreadC1EvEUlvE_EEEEEPvSD_, i8* nonnull %9) #17
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %17, label %16

16:                                               ; preds = %1
  call void @_ZNSt3__120__throw_system_errorEiPKc(i32 %14, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.16, i64 0, i64 0)) #18
  unreachable

17:                                               ; preds = %1
  call void @_ZNSt3__16thread6detachEv(%"class.std::__1::thread"* nonnull %2) #17
  call void @_ZNSt3__16threadD1Ev(%"class.std::__1::thread"* nonnull %2) #17
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %3) #17
  ret void
}

declare void @_ZNSt3__16thread6detachEv(%"class.std::__1::thread"*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZNSt3__16threadD1Ev(%"class.std::__1::thread"*) unnamed_addr #10

declare void @_ZNSt3__115__thread_structC1Ev(%"class.std::__1::__thread_struct"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZNSt3__114__thread_proxyINS_5tupleIJNS_10unique_ptrINS_15__thread_structENS_14default_deleteIS3_EEEEZN4base8internal6PCScan12PCScanThreadC1EvEUlvE_EEEEEPvSD_(i8*) #3 comdat {
  %2 = alloca %"class.std::__1::basic_string", align 8
  %3 = tail call dereferenceable(4) %"class.std::__1::__thread_specific_ptr"* @_ZNSt3__119__thread_local_dataEv() #17
  %4 = bitcast i8* %0 to %"class.std::__1::__thread_struct"**
  %5 = bitcast i8* %0 to i8**
  %6 = load i8*, i8** %5, align 8
  store %"class.std::__1::__thread_struct"* null, %"class.std::__1::__thread_struct"** %4, align 8
  %7 = getelementptr inbounds %"class.std::__1::__thread_specific_ptr", %"class.std::__1::__thread_specific_ptr"* %3, i64 0, i32 0
  %8 = load i32, i32* %7, align 4
  %9 = tail call i32 @pthread_setspecific(i32 %8, i8* %6) #17
  %10 = getelementptr inbounds i8, i8* %0, i64 8
  %11 = bitcast i8* %10 to %"class.base::internal::PCScan::PCScanThread"**
  %12 = load %"class.base::internal::PCScan::PCScanThread"*, %"class.base::internal::PCScan::PCScanThread"** %11, align 8
  %13 = bitcast %"class.std::__1::basic_string"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %13) #17
  %14 = bitcast %"class.std::__1::basic_string"* %2 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %15 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %14, i64 0, i32 1, i32 0
  store i8 6, i8* %15, align 1
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %13, i8* align 1 getelementptr inbounds ([7 x i8], [7 x i8]* @.str.17, i64 0, i64 0), i64 6, i1 false) #17
  %16 = getelementptr inbounds i8, i8* %13, i64 6
  store i8 0, i8* %16, align 2
  call void @_ZN4base14PlatformThread7SetNameERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.std::__1::basic_string"* nonnull dereferenceable(24) %2) #17
  %17 = load i8, i8* %15, align 1
  %18 = icmp slt i8 %17, 0
  br i1 %18, label %19, label %22

19:                                               ; preds = %1
  %20 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %21 = load i8*, i8** %20, align 8
  call void @_ZdlPv(i8* %21) #19
  br label %22

22:                                               ; preds = %1, %19
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %13) #17
  call void @_ZN4base8internal6PCScan12PCScanThread8TaskLoopEv(%"class.base::internal::PCScan::PCScanThread"* %12) #17
  %23 = icmp eq i8* %0, null
  br i1 %23, label %30, label %24

24:                                               ; preds = %22
  %25 = load %"class.std::__1::__thread_struct"*, %"class.std::__1::__thread_struct"** %4, align 8
  store %"class.std::__1::__thread_struct"* null, %"class.std::__1::__thread_struct"** %4, align 8
  %26 = icmp eq %"class.std::__1::__thread_struct"* %25, null
  br i1 %26, label %29, label %27

27:                                               ; preds = %24
  call void @_ZNSt3__115__thread_structD1Ev(%"class.std::__1::__thread_struct"* nonnull %25) #17
  %28 = bitcast %"class.std::__1::__thread_struct"* %25 to i8*
  call void @_ZdlPv(i8* %28) #19
  br label %29

29:                                               ; preds = %27, %24
  call void @_ZdlPv(i8* nonnull %0) #19
  br label %30

30:                                               ; preds = %22, %29
  ret i8* null
}

; Function Attrs: noreturn
declare void @_ZNSt3__120__throw_system_errorEiPKc(i32, i8*) local_unnamed_addr #13

; Function Attrs: nounwind
declare i32 @pthread_create(i64*, %union.pthread_attr_t*, i8* (i8*)*, i8*) local_unnamed_addr #10

declare dereferenceable(4) %"class.std::__1::__thread_specific_ptr"* @_ZNSt3__119__thread_local_dataEv() local_unnamed_addr #2

; Function Attrs: nounwind
declare i32 @pthread_setspecific(i32, i8*) local_unnamed_addr #10

declare void @_ZN4base14PlatformThread7SetNameERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.std::__1::basic_string"* dereferenceable(24)) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal6PCScan12PCScanThread8TaskLoopEv(%"class.base::internal::PCScan::PCScanThread"*) local_unnamed_addr #3 comdat align 2 {
  %2 = alloca %"class.std::__1::chrono::duration", align 8
  %3 = alloca %"class.std::__1::unique_lock", align 8
  %4 = bitcast %"class.std::__1::unique_lock"* %3 to i8*
  %5 = getelementptr inbounds %"class.std::__1::unique_lock", %"class.std::__1::unique_lock"* %3, i64 0, i32 0
  %6 = getelementptr inbounds %"class.std::__1::unique_lock", %"class.std::__1::unique_lock"* %3, i64 0, i32 1
  %7 = getelementptr inbounds %"class.base::internal::PCScan::PCScanThread", %"class.base::internal::PCScan::PCScanThread"* %0, i64 0, i32 0
  %8 = getelementptr inbounds %"class.base::internal::PCScan::PCScanThread", %"class.base::internal::PCScan::PCScanThread"* %0, i64 0, i32 2
  %9 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %8, i64 0, i32 0
  %10 = getelementptr inbounds %"class.base::internal::PCScan::PCScanThread", %"class.base::internal::PCScan::PCScanThread"* %0, i64 0, i32 3, i32 0
  %11 = getelementptr inbounds %"class.base::internal::PCScan::PCScanThread", %"class.base::internal::PCScan::PCScanThread"* %0, i64 0, i32 1
  %12 = bitcast %"class.std::__1::chrono::duration"* %2 to i8*
  %13 = getelementptr inbounds %"class.std::__1::chrono::duration", %"class.std::__1::chrono::duration"* %2, i64 0, i32 0
  %14 = getelementptr inbounds %"class.base::internal::PCScan::PCScanThread", %"class.base::internal::PCScan::PCScanThread"* %0, i64 0, i32 2, i32 0
  %15 = bitcast %"class.std::__1::unique_lock"* %3 to i8*
  %16 = bitcast %class.scoped_refptr* %8 to i8*
  br label %17

17:                                               ; preds = %60, %1
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %4) #17
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %15, i8 -86, i64 16, i1 false)
  store %"class.std::__1::mutex"* %7, %"class.std::__1::mutex"** %5, align 8
  store i8 1, i8* %6, align 8
  call void @_ZNSt3__15mutex4lockEv(%"class.std::__1::mutex"* %7) #17
  %18 = load %"class.base::internal::PCScanTask"*, %"class.base::internal::PCScanTask"** %9, align 8
  %19 = icmp eq %"class.base::internal::PCScanTask"* %18, null
  br i1 %19, label %20, label %47

20:                                               ; preds = %17, %41
  %21 = load i64, i64* %10, align 8
  %22 = icmp eq i64 %21, 0
  br i1 %22, label %23, label %29

23:                                               ; preds = %20, %26
  call void @_ZNSt3__118condition_variable4waitERNS_11unique_lockINS_5mutexEEE(%"class.std::__1::condition_variable"* %11, %"class.std::__1::unique_lock"* nonnull dereferenceable(16) %3) #17
  %24 = load i64, i64* %10, align 8
  %25 = icmp eq i64 %24, 0
  br i1 %25, label %26, label %41

26:                                               ; preds = %23
  %27 = load %"class.base::internal::PCScanTask"*, %"class.base::internal::PCScanTask"** %14, align 8
  %28 = icmp eq %"class.base::internal::PCScanTask"* %27, null
  br i1 %28, label %23, label %41

29:                                               ; preds = %20
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %12) #17
  store i64 %21, i64* %13, align 8
  %30 = call i32 @_ZNSt3__118condition_variable8wait_forIxNS_5ratioILl1ELl1000000EEEEENS_9cv_statusERNS_11unique_lockINS_5mutexEEERKNS_6chrono8durationIT_T0_EE(%"class.std::__1::condition_variable"* %11, %"class.std::__1::unique_lock"* nonnull dereferenceable(16) %3, %"class.std::__1::chrono::duration"* nonnull dereferenceable(8) %2) #17
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %12) #17
  %31 = load %"class.base::internal::PCScanTask"*, %"class.base::internal::PCScanTask"** %14, align 8
  %32 = icmp eq %"class.base::internal::PCScanTask"* %31, null
  br i1 %32, label %33, label %41

33:                                               ; preds = %29
  %34 = load %"class.base::internal::PCScanSchedulingBackend"*, %"class.base::internal::PCScanSchedulingBackend"** getelementptr inbounds (%"class.base::internal::PCScan", %"class.base::internal::PCScan"* @_ZN4base8internal6PCScan9instance_E, i64 0, i32 0, i32 2), align 8
  %35 = bitcast %"class.base::internal::PCScanSchedulingBackend"* %34 to i64 (%"class.base::internal::PCScanSchedulingBackend"*)***
  %36 = load i64 (%"class.base::internal::PCScanSchedulingBackend"*)**, i64 (%"class.base::internal::PCScanSchedulingBackend"*)*** %35, align 8
  %37 = getelementptr inbounds i64 (%"class.base::internal::PCScanSchedulingBackend"*)*, i64 (%"class.base::internal::PCScanSchedulingBackend"*)** %36, i64 3
  %38 = load i64 (%"class.base::internal::PCScanSchedulingBackend"*)*, i64 (%"class.base::internal::PCScanSchedulingBackend"*)** %37, align 8
  %39 = call i64 %38(%"class.base::internal::PCScanSchedulingBackend"* %34) #17
  store i64 %39, i64* %10, align 8
  %40 = icmp eq i64 %39, 0
  br i1 %40, label %44, label %41

41:                                               ; preds = %23, %26, %33, %29
  %42 = load %"class.base::internal::PCScanTask"*, %"class.base::internal::PCScanTask"** %9, align 8
  %43 = icmp eq %"class.base::internal::PCScanTask"* %42, null
  br i1 %43, label %20, label %47

44:                                               ; preds = %33
  %45 = load %"class.base::internal::PCScanTask"*, %"class.base::internal::PCScanTask"** %9, align 8
  %46 = icmp eq %"class.base::internal::PCScanTask"* %45, null
  br i1 %46, label %50, label %47

47:                                               ; preds = %41, %17, %44
  %48 = phi %"class.base::internal::PCScanTask"* [ %18, %17 ], [ %45, %44 ], [ %42, %41 ]
  %49 = ptrtoint %"class.base::internal::PCScanTask"* %48 to i64
  call void @llvm.memset.p0i8.i64(i8* align 8 %16, i8 0, i64 16, i1 false)
  br label %50

50:                                               ; preds = %44, %47
  %51 = phi i64 [ 0, %44 ], [ %49, %47 ]
  %52 = load i8, i8* %6, align 8, !range !5
  %53 = icmp eq i8 %52, 0
  br i1 %53, label %56, label %54

54:                                               ; preds = %50
  %55 = load %"class.std::__1::mutex"*, %"class.std::__1::mutex"** %5, align 8
  call void @_ZNSt3__15mutex6unlockEv(%"class.std::__1::mutex"* %55) #17
  br label %56

56:                                               ; preds = %50, %54
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %4) #17
  %57 = inttoptr i64 %51 to %"class.base::internal::PCScanTask"*
  %58 = icmp eq i64 %51, 0
  br i1 %58, label %59, label %61

59:                                               ; preds = %56
  call void @_ZN4base8internal6PCScan11PerformScanENS1_14InvocationModeE(%"class.base::internal::PCScan"* nonnull @_ZN4base8internal6PCScan9instance_E, i32 1) #17
  br label %60

60:                                               ; preds = %59, %61, %65
  br label %17

61:                                               ; preds = %56
  call void @_ZN4base8internal10PCScanTask14RunFromScannerEv(%"class.base::internal::PCScanTask"* nonnull %57)
  %62 = getelementptr inbounds %"class.base::internal::PCScanTask", %"class.base::internal::PCScanTask"* %57, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %63 = atomicrmw sub i32* %62, i32 1 acq_rel
  %64 = icmp eq i32 %63, 1
  br i1 %64, label %65, label %60

65:                                               ; preds = %61
  call void @_ZN4base8internal10PCScanTaskD2Ev(%"class.base::internal::PCScanTask"* nonnull %57) #17
  %66 = inttoptr i64 %51 to i8*
  call void @_ZN4base8internal34AllocatedOnPCScanMetadataPartitiondlEPv(i8* nonnull %66) #17
  br label %60
}

declare void @_ZNSt3__15mutex4lockEv(%"class.std::__1::mutex"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNSt3__118condition_variable8wait_forIxNS_5ratioILl1ELl1000000EEEEENS_9cv_statusERNS_11unique_lockINS_5mutexEEERKNS_6chrono8durationIT_T0_EE(%"class.std::__1::condition_variable"*, %"class.std::__1::unique_lock"* dereferenceable(16), %"class.std::__1::chrono::duration"* dereferenceable(8)) local_unnamed_addr #3 comdat align 2 {
  %4 = getelementptr inbounds %"class.std::__1::chrono::duration", %"class.std::__1::chrono::duration"* %2, i64 0, i32 0
  %5 = load i64, i64* %4, align 8
  %6 = icmp slt i64 %5, 1
  br i1 %6, label %43, label %7

7:                                                ; preds = %3
  %8 = tail call i64 @_ZNSt3__16chrono12steady_clock3nowEv() #17
  %9 = tail call i64 @_ZNSt3__16chrono12system_clock3nowEv() #17
  %10 = icmp eq i64 %9, 0
  br i1 %10, label %19, label %11

11:                                               ; preds = %7
  %12 = icmp sgt i64 %9, 0
  br i1 %12, label %13, label %15

13:                                               ; preds = %11
  %14 = icmp sgt i64 %9, 9223372036854775
  br i1 %14, label %19, label %17

15:                                               ; preds = %11
  %16 = icmp slt i64 %9, -9223372036854775
  br i1 %16, label %19, label %17

17:                                               ; preds = %15, %13
  %18 = mul nsw i64 %9, 1000
  br label %19

19:                                               ; preds = %7, %13, %15, %17
  %20 = phi i64 [ %18, %17 ], [ 0, %7 ], [ 9223372036854775807, %13 ], [ -9223372036854775808, %15 ]
  %21 = load i64, i64* %4, align 8
  %22 = icmp eq i64 %21, 0
  br i1 %22, label %31, label %23

23:                                               ; preds = %19
  %24 = icmp sgt i64 %21, 0
  br i1 %24, label %25, label %27

25:                                               ; preds = %23
  %26 = icmp sgt i64 %21, 9223372036854775
  br i1 %26, label %31, label %29

27:                                               ; preds = %23
  %28 = icmp slt i64 %21, -9223372036854775
  br i1 %28, label %31, label %29

29:                                               ; preds = %27, %25
  %30 = mul nsw i64 %21, 1000
  br label %31

31:                                               ; preds = %19, %25, %27, %29
  %32 = phi i64 [ %30, %29 ], [ 0, %19 ], [ 9223372036854775807, %25 ], [ -9223372036854775808, %27 ]
  %33 = sub nsw i64 9223372036854775807, %32
  %34 = icmp sgt i64 %20, %33
  %35 = add nsw i64 %32, %20
  %36 = select i1 %34, i64 9223372036854775807, i64 %35
  tail call void @_ZNSt3__118condition_variable15__do_timed_waitERNS_11unique_lockINS_5mutexEEENS_6chrono10time_pointINS5_12system_clockENS5_8durationIxNS_5ratioILl1ELl1000000000EEEEEEE(%"class.std::__1::condition_variable"* %0, %"class.std::__1::unique_lock"* dereferenceable(16) %1, i64 %36) #17
  %37 = tail call i64 @_ZNSt3__16chrono12steady_clock3nowEv() #17
  %38 = sub nsw i64 %37, %8
  %39 = load i64, i64* %4, align 8
  %40 = mul nsw i64 %39, 1000
  %41 = icmp sge i64 %38, %40
  %42 = zext i1 %41 to i32
  br label %43

43:                                               ; preds = %3, %31
  %44 = phi i32 [ %42, %31 ], [ 1, %3 ]
  ret i32 %44
}

; Function Attrs: nounwind
declare void @_ZNSt3__118condition_variable4waitERNS_11unique_lockINS_5mutexEEE(%"class.std::__1::condition_variable"*, %"class.std::__1::unique_lock"* dereferenceable(16)) local_unnamed_addr #10

; Function Attrs: nounwind
declare i64 @_ZNSt3__16chrono12steady_clock3nowEv() local_unnamed_addr #10

; Function Attrs: nounwind
declare i64 @_ZNSt3__16chrono12system_clock3nowEv() local_unnamed_addr #10

; Function Attrs: nounwind
declare void @_ZNSt3__118condition_variable15__do_timed_waitERNS_11unique_lockINS_5mutexEEENS_6chrono10time_pointINS5_12system_clockENS5_8durationIxNS_5ratioILl1ELl1000000000EEEEEEE(%"class.std::__1::condition_variable"*, %"class.std::__1::unique_lock"* dereferenceable(16), i64) local_unnamed_addr #10

; Function Attrs: nounwind
declare void @_ZNSt3__15mutex6unlockEv(%"class.std::__1::mutex"*) local_unnamed_addr #10

; Function Attrs: nounwind
declare void @_ZNSt3__115__thread_structD1Ev(%"class.std::__1::__thread_struct"*) unnamed_addr #10

; Function Attrs: nounwind
declare void @_ZNSt3__118condition_variable10notify_oneEv(%"class.std::__1::condition_variable"*) local_unnamed_addr #10

declare void @_ZN4base8internal13SpinningMutex8LockSlowEv(%"class.base::internal::SpinningMutex"*) local_unnamed_addr #2

declare void @_ZN4base8internal13SpinningMutex9FutexWakeEv(%"class.base::internal::SpinningMutex"*) local_unnamed_addr #2

declare i64 @_ZN4base13RandGeneratorEm(i64) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.std::__1::__wrap_iter"* @_ZN4base8internal17MetadataAllocatorINSt3__111__wrap_iterIPNS0_15RacefulWorklistImE4NodeEEEE8allocateEm(%"class.base::internal::MetadataAllocator.186"*, i64) local_unnamed_addr #3 comdat align 2 {
  %3 = alloca i8, align 1
  %4 = alloca i64, align 8
  %5 = tail call dereferenceable(5408) %"struct.base::PartitionRoot"* @_ZN4base8internal23PCScanMetadataAllocatorEv() #17
  %6 = shl i64 %1, 3
  %7 = tail call i64 @llvm.ctlz.i64(i64 %6, i1 false) #17, !range !4
  %8 = sub nuw nsw i64 64, %7
  %9 = and i64 %8, 255
  %10 = getelementptr inbounds [65 x i8], [65 x i8]* @_ZN4base12_GLOBAL__N_116kOrderIndexShiftE, i64 0, i64 %9
  %11 = load i8, i8* %10, align 1
  %12 = zext i8 %11 to i64
  %13 = lshr i64 %6, %12
  %14 = and i64 %13, 7
  %15 = getelementptr inbounds [65 x i64], [65 x i64]* @_ZN4base12_GLOBAL__N_118kOrderSubIndexMaskE, i64 0, i64 %9
  %16 = load i64, i64* %15, align 8
  %17 = and i64 %16, %6
  %18 = shl nuw nsw i64 %9, 3
  %19 = or i64 %14, %18
  %20 = icmp ne i64 %17, 0
  %21 = zext i1 %20 to i64
  %22 = add nuw nsw i64 %19, %21
  %23 = getelementptr inbounds { [128 x i64], [521 x i16] }, { [128 x i64], [521 x i16] }* @_ZZN4base8internal17BucketIndexLookup8GetIndexEmE6lookup, i64 0, i32 1, i64 %22
  %24 = load i16, i16* %23, align 2
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %3) #17
  store i8 0, i8* %3, align 1
  %25 = bitcast i64* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %25) #17
  store i64 -6148914691236517206, i64* %4, align 8
  %26 = getelementptr inbounds %"struct.base::PartitionRoot", %"struct.base::PartitionRoot"* %5, i64 0, i32 0
  %27 = load i8, i8* %26, align 8
  %28 = icmp eq i8 %27, 2
  br i1 %28, label %29, label %33

29:                                               ; preds = %2
  %30 = load atomic i8, i8* getelementptr inbounds (%"class.base::internal::PCScan", %"class.base::internal::PCScan"* @_ZN4base8internal6PCScan9instance_E, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0) acquire, align 8
  %31 = icmp eq i8 %30, 2
  br i1 %31, label %32, label %33, !prof !7

32:                                               ; preds = %29
  tail call void @_ZN4base8internal6PCScan8JoinScanEv() #17
  br label %33

33:                                               ; preds = %32, %29, %2
  %34 = getelementptr inbounds %"struct.base::PartitionRoot", %"struct.base::PartitionRoot"* %5, i64 0, i32 2
  %35 = load i8, i8* %34, align 2, !range !5
  %36 = icmp eq i8 %35, 0
  br i1 %36, label %185, label %37, !prof !19

37:                                               ; preds = %33
  %38 = load i32, i32* @_ZN4base8internal18g_thread_cache_keyE, align 4
  %39 = tail call i8* @pthread_getspecific(i32 %38) #17
  %40 = bitcast i8* %39 to %"class.base::internal::ThreadCache"*
  %41 = icmp ugt i8* %39, inttoptr (i64 1 to i8*)
  br i1 %41, label %42, label %112, !prof !6

42:                                               ; preds = %37
  %43 = zext i16 %24 to i64
  %44 = getelementptr inbounds %"class.base::internal::ThreadCache", %"class.base::internal::ThreadCache"* %40, i64 0, i32 3, i32 12, i64 %43
  %45 = load i64, i64* %44, align 8
  %46 = add i64 %45, 1
  store i64 %46, i64* %44, align 8
  %47 = getelementptr inbounds i8, i8* %39, i64 1440
  %48 = bitcast i8* %47 to i64*
  %49 = load i64, i64* %48, align 8
  %50 = add i64 %49, 1
  store i64 %50, i64* %48, align 8
  %51 = load i16, i16* @_ZN4base8internal11ThreadCache28largest_active_bucket_index_E, align 2
  %52 = icmp ult i16 %51, %24
  br i1 %52, label %53, label %62, !prof !7

53:                                               ; preds = %42
  %54 = getelementptr inbounds i8, i8* %39, i64 1472
  %55 = bitcast i8* %54 to i64*
  %56 = load i64, i64* %55, align 8
  %57 = add i64 %56, 1
  store i64 %57, i64* %55, align 8
  %58 = getelementptr inbounds i8, i8* %39, i64 1456
  %59 = bitcast i8* %58 to i64*
  %60 = load i64, i64* %59, align 8
  %61 = add i64 %60, 1
  store i64 %61, i64* %59, align 8
  br label %119

62:                                               ; preds = %42
  %63 = getelementptr inbounds %"class.base::internal::ThreadCache", %"class.base::internal::ThreadCache"* %40, i64 0, i32 0, i64 %43, i32 0
  %64 = load %"class.base::internal::PartitionFreelistEntry"*, %"class.base::internal::PartitionFreelistEntry"** %63, align 8
  %65 = icmp eq %"class.base::internal::PartitionFreelistEntry"* %64, null
  br i1 %65, label %71, label %66, !prof !7

66:                                               ; preds = %62
  %67 = getelementptr inbounds i8, i8* %39, i64 1448
  %68 = bitcast i8* %67 to i64*
  %69 = load i64, i64* %68, align 8
  %70 = add i64 %69, 1
  store i64 %70, i64* %68, align 8
  br label %79

71:                                               ; preds = %62
  %72 = getelementptr inbounds i8, i8* %39, i64 1456
  %73 = bitcast i8* %72 to <2 x i64>*
  %74 = load <2 x i64>, <2 x i64>* %73, align 8
  %75 = add <2 x i64> %74, <i64 1, i64 1>
  %76 = bitcast i8* %72 to <2 x i64>*
  store <2 x i64> %75, <2 x i64>* %76, align 8
  tail call void @_ZN4base8internal11ThreadCache10FillBucketEm(%"class.base::internal::ThreadCache"* %40, i64 %43) #17
  %77 = load %"class.base::internal::PartitionFreelistEntry"*, %"class.base::internal::PartitionFreelistEntry"** %63, align 8
  %78 = icmp eq %"class.base::internal::PartitionFreelistEntry"* %77, null
  br i1 %78, label %119, label %79, !prof !7

79:                                               ; preds = %71, %66
  %80 = phi %"class.base::internal::PartitionFreelistEntry"* [ %77, %71 ], [ %64, %66 ]
  %81 = getelementptr inbounds %"class.base::internal::PartitionFreelistEntry", %"class.base::internal::PartitionFreelistEntry"* %80, i64 0, i32 0
  %82 = load %"struct.base::internal::EncodedPartitionFreelistEntry"*, %"struct.base::internal::EncodedPartitionFreelistEntry"** %81, align 8
  %83 = icmp eq %"struct.base::internal::EncodedPartitionFreelistEntry"* %82, null
  %84 = ptrtoint %"struct.base::internal::EncodedPartitionFreelistEntry"* %82 to i64
  br i1 %83, label %85, label %87

85:                                               ; preds = %79
  %86 = tail call i64 @llvm.bswap.i64(i64 %84) #17
  br label %96

87:                                               ; preds = %79
  %88 = xor i64 %84, -1
  %89 = getelementptr inbounds %"class.base::internal::PartitionFreelistEntry", %"class.base::internal::PartitionFreelistEntry"* %80, i64 0, i32 1
  %90 = load i64, i64* %89, align 8
  %91 = icmp eq i64 %90, %88
  br i1 %91, label %93, label %92, !prof !6

92:                                               ; preds = %87
  tail call fastcc void @_ZN4base8internal12_GLOBAL__N_126FreelistCorruptionDetectedEv() #18
  unreachable

93:                                               ; preds = %87
  %94 = tail call i64 @llvm.bswap.i64(i64 %84) #17
  %95 = inttoptr i64 %94 to i8*
  tail call void @llvm.prefetch(i8* nonnull %95, i32 0, i32 3, i32 1) #17
  br label %96

96:                                               ; preds = %93, %85
  %97 = phi i64 [ %86, %85 ], [ %94, %93 ]
  %98 = inttoptr i64 %97 to %"class.base::internal::PartitionFreelistEntry"*
  %99 = getelementptr inbounds %"class.base::internal::ThreadCache", %"class.base::internal::ThreadCache"* %40, i64 0, i32 0, i64 %43, i32 1
  %100 = load i8, i8* %99, align 8
  %101 = add i8 %100, -1
  store i8 %101, i8* %99, align 8
  store %"class.base::internal::PartitionFreelistEntry"* %98, %"class.base::internal::PartitionFreelistEntry"** %63, align 8
  %102 = getelementptr inbounds %"class.base::internal::ThreadCache", %"class.base::internal::ThreadCache"* %40, i64 0, i32 0, i64 %43, i32 3
  %103 = load i16, i16* %102, align 2
  %104 = zext i16 %103 to i64
  store i64 %104, i64* %4, align 8
  %105 = load i16, i16* %102, align 2
  %106 = zext i16 %105 to i64
  %107 = getelementptr inbounds i8, i8* %39, i64 1424
  %108 = bitcast i8* %107 to i64*
  %109 = load i64, i64* %108, align 8
  %110 = sub i64 %109, %106
  store i64 %110, i64* %108, align 8
  %111 = bitcast %"class.base::internal::PartitionFreelistEntry"* %80 to i8*
  br label %114

112:                                              ; preds = %37
  %113 = call i8* @_ZN4base13PartitionRootILb1EE28MaybeInitThreadCacheAndAllocEtPm(%"struct.base::PartitionRoot"* %5, i16 zeroext %24, i64* nonnull %4) #17
  br label %114

114:                                              ; preds = %112, %96
  %115 = phi i8* [ %113, %112 ], [ %111, %96 ]
  %116 = icmp eq i8* %115, null
  br i1 %116, label %117, label %254, !prof !7

117:                                              ; preds = %114
  %118 = zext i16 %24 to i64
  br label %119

119:                                              ; preds = %117, %71, %53
  %120 = phi i64 [ %118, %117 ], [ %43, %71 ], [ %43, %53 ]
  %121 = getelementptr inbounds %"struct.base::PartitionRoot", %"struct.base::PartitionRoot"* %5, i64 0, i32 10, i64 %120
  %122 = getelementptr inbounds %"struct.base::PartitionRoot", %"struct.base::PartitionRoot"* %5, i64 0, i32 8
  %123 = getelementptr inbounds %"class.base::internal::MaybeSpinLock", %"class.base::internal::MaybeSpinLock"* %122, i64 0, i32 0
  %124 = getelementptr inbounds %"class.base::internal::MaybeSpinLock", %"class.base::internal::MaybeSpinLock"* %122, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  br label %125

125:                                              ; preds = %137, %119
  %126 = phi i32 [ 0, %119 ], [ %138, %137 ]
  %127 = phi i32 [ 1, %119 ], [ %141, %137 ]
  %128 = load atomic i32, i32* %124 monotonic, align 4
  %129 = icmp eq i32 %128, 0
  br i1 %129, label %130, label %133, !prof !9

130:                                              ; preds = %125
  %131 = cmpxchg weak i32* %124, i32 0, i32 1 acquire monotonic
  %132 = extractvalue { i32, i1 } %131, 1
  br i1 %132, label %148, label %133, !prof !6

133:                                              ; preds = %130, %125
  %134 = icmp sgt i32 %127, 0
  br i1 %134, label %143, label %137

135:                                              ; preds = %143
  %136 = add i32 %127, %126
  br label %137

137:                                              ; preds = %135, %133
  %138 = phi i32 [ %126, %133 ], [ %136, %135 ]
  %139 = shl i32 %127, 1
  %140 = icmp slt i32 %139, 64
  %141 = select i1 %140, i32 %139, i32 64
  %142 = icmp slt i32 %138, 1000
  br i1 %142, label %125, label %147

143:                                              ; preds = %133, %143
  %144 = phi i32 [ %145, %143 ], [ 0, %133 ]
  call void asm sideeffect "pause", "~{dirflag},~{fpsr},~{flags}"() #17, !srcloc !10
  %145 = add nuw nsw i32 %144, 1
  %146 = icmp eq i32 %145, %127
  br i1 %146, label %135, label %143

147:                                              ; preds = %137
  call void @_ZN4base8internal13SpinningMutex8LockSlowEv(%"class.base::internal::SpinningMutex"* %123) #17
  br label %148

148:                                              ; preds = %130, %147
  %149 = getelementptr inbounds %"struct.base::internal::PartitionBucket", %"struct.base::internal::PartitionBucket"* %121, i64 0, i32 0
  %150 = load %"struct.base::internal::SlotSpanMetadata"*, %"struct.base::internal::SlotSpanMetadata"** %149, align 8
  %151 = bitcast %"struct.base::internal::SlotSpanMetadata"* %150 to i8**
  %152 = load i8*, i8** %151, align 1
  %153 = icmp eq i8* %152, null
  br i1 %153, label %178, label %154, !prof !7

154:                                              ; preds = %148
  %155 = getelementptr inbounds %"struct.base::internal::SlotSpanMetadata", %"struct.base::internal::SlotSpanMetadata"* %150, i64 0, i32 0
  store i8 0, i8* %3, align 1
  %156 = bitcast i8* %152 to %"struct.base::internal::EncodedPartitionFreelistEntry"**
  %157 = load %"struct.base::internal::EncodedPartitionFreelistEntry"*, %"struct.base::internal::EncodedPartitionFreelistEntry"** %156, align 8
  %158 = icmp eq %"struct.base::internal::EncodedPartitionFreelistEntry"* %157, null
  %159 = ptrtoint %"struct.base::internal::EncodedPartitionFreelistEntry"* %157 to i64
  br i1 %158, label %160, label %162

160:                                              ; preds = %154
  %161 = call i64 @llvm.bswap.i64(i64 %159) #17
  br label %172

162:                                              ; preds = %154
  %163 = xor i64 %159, -1
  %164 = getelementptr inbounds i8, i8* %152, i64 8
  %165 = bitcast i8* %164 to i64*
  %166 = load i64, i64* %165, align 8
  %167 = icmp eq i64 %166, %163
  br i1 %167, label %169, label %168, !prof !6

168:                                              ; preds = %162
  call fastcc void @_ZN4base8internal12_GLOBAL__N_126FreelistCorruptionDetectedEv() #18
  unreachable

169:                                              ; preds = %162
  %170 = call i64 @llvm.bswap.i64(i64 %159) #17
  %171 = inttoptr i64 %170 to i8*
  call void @llvm.prefetch(i8* nonnull %171, i32 0, i32 3, i32 1) #17
  br label %172

172:                                              ; preds = %169, %160
  %173 = phi i64 [ %161, %160 ], [ %170, %169 ]
  %174 = inttoptr i64 %173 to %"class.base::internal::PartitionFreelistEntry"*
  store %"class.base::internal::PartitionFreelistEntry"* %174, %"class.base::internal::PartitionFreelistEntry"** %155, align 1
  %175 = getelementptr inbounds %"struct.base::internal::SlotSpanMetadata", %"struct.base::internal::SlotSpanMetadata"* %150, i64 0, i32 3
  %176 = load i16, i16* %175, align 1
  %177 = add i16 %176, 1
  store i16 %177, i16* %175, align 1
  br label %180

178:                                              ; preds = %148
  %179 = call i8* @_ZN4base8internal15PartitionBucketILb1EE13SlowPathAllocEPNS_13PartitionRootILb1EEEimmPb(%"struct.base::internal::PartitionBucket"* %121, %"struct.base::PartitionRoot"* %5, i32 0, i64 %6, i64 16384, i8* nonnull %3) #17
  br label %180

180:                                              ; preds = %178, %172
  %181 = phi i8* [ %152, %172 ], [ %179, %178 ]
  %182 = atomicrmw xchg i32* %124, i32 0 release
  %183 = icmp eq i32 %182, 2
  br i1 %183, label %184, label %251, !prof !7

184:                                              ; preds = %180
  call void @_ZN4base8internal13SpinningMutex9FutexWakeEv(%"class.base::internal::SpinningMutex"* %123) #17
  br label %251

185:                                              ; preds = %33
  %186 = zext i16 %24 to i64
  %187 = getelementptr inbounds %"struct.base::PartitionRoot", %"struct.base::PartitionRoot"* %5, i64 0, i32 10, i64 %186
  %188 = getelementptr inbounds %"struct.base::PartitionRoot", %"struct.base::PartitionRoot"* %5, i64 0, i32 8
  %189 = getelementptr inbounds %"class.base::internal::MaybeSpinLock", %"class.base::internal::MaybeSpinLock"* %188, i64 0, i32 0
  %190 = getelementptr inbounds %"class.base::internal::MaybeSpinLock", %"class.base::internal::MaybeSpinLock"* %188, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  br label %191

191:                                              ; preds = %203, %185
  %192 = phi i32 [ 0, %185 ], [ %204, %203 ]
  %193 = phi i32 [ 1, %185 ], [ %207, %203 ]
  %194 = load atomic i32, i32* %190 monotonic, align 4
  %195 = icmp eq i32 %194, 0
  br i1 %195, label %196, label %199, !prof !9

196:                                              ; preds = %191
  %197 = cmpxchg weak i32* %190, i32 0, i32 1 acquire monotonic
  %198 = extractvalue { i32, i1 } %197, 1
  br i1 %198, label %214, label %199, !prof !6

199:                                              ; preds = %196, %191
  %200 = icmp sgt i32 %193, 0
  br i1 %200, label %209, label %203

201:                                              ; preds = %209
  %202 = add i32 %193, %192
  br label %203

203:                                              ; preds = %201, %199
  %204 = phi i32 [ %192, %199 ], [ %202, %201 ]
  %205 = shl i32 %193, 1
  %206 = icmp slt i32 %205, 64
  %207 = select i1 %206, i32 %205, i32 64
  %208 = icmp slt i32 %204, 1000
  br i1 %208, label %191, label %213

209:                                              ; preds = %199, %209
  %210 = phi i32 [ %211, %209 ], [ 0, %199 ]
  tail call void asm sideeffect "pause", "~{dirflag},~{fpsr},~{flags}"() #17, !srcloc !10
  %211 = add nuw nsw i32 %210, 1
  %212 = icmp eq i32 %211, %193
  br i1 %212, label %201, label %209

213:                                              ; preds = %203
  tail call void @_ZN4base8internal13SpinningMutex8LockSlowEv(%"class.base::internal::SpinningMutex"* %189) #17
  br label %214

214:                                              ; preds = %196, %213
  %215 = getelementptr inbounds %"struct.base::internal::PartitionBucket", %"struct.base::internal::PartitionBucket"* %187, i64 0, i32 0
  %216 = load %"struct.base::internal::SlotSpanMetadata"*, %"struct.base::internal::SlotSpanMetadata"** %215, align 8
  %217 = bitcast %"struct.base::internal::SlotSpanMetadata"* %216 to i8**
  %218 = load i8*, i8** %217, align 1
  %219 = icmp eq i8* %218, null
  br i1 %219, label %244, label %220, !prof !7

220:                                              ; preds = %214
  %221 = getelementptr inbounds %"struct.base::internal::SlotSpanMetadata", %"struct.base::internal::SlotSpanMetadata"* %216, i64 0, i32 0
  store i8 0, i8* %3, align 1
  %222 = bitcast i8* %218 to %"struct.base::internal::EncodedPartitionFreelistEntry"**
  %223 = load %"struct.base::internal::EncodedPartitionFreelistEntry"*, %"struct.base::internal::EncodedPartitionFreelistEntry"** %222, align 8
  %224 = icmp eq %"struct.base::internal::EncodedPartitionFreelistEntry"* %223, null
  %225 = ptrtoint %"struct.base::internal::EncodedPartitionFreelistEntry"* %223 to i64
  br i1 %224, label %226, label %228

226:                                              ; preds = %220
  %227 = tail call i64 @llvm.bswap.i64(i64 %225) #17
  br label %238

228:                                              ; preds = %220
  %229 = xor i64 %225, -1
  %230 = getelementptr inbounds i8, i8* %218, i64 8
  %231 = bitcast i8* %230 to i64*
  %232 = load i64, i64* %231, align 8
  %233 = icmp eq i64 %232, %229
  br i1 %233, label %235, label %234, !prof !6

234:                                              ; preds = %228
  tail call fastcc void @_ZN4base8internal12_GLOBAL__N_126FreelistCorruptionDetectedEv() #18
  unreachable

235:                                              ; preds = %228
  %236 = tail call i64 @llvm.bswap.i64(i64 %225) #17
  %237 = inttoptr i64 %236 to i8*
  tail call void @llvm.prefetch(i8* nonnull %237, i32 0, i32 3, i32 1) #17
  br label %238

238:                                              ; preds = %235, %226
  %239 = phi i64 [ %227, %226 ], [ %236, %235 ]
  %240 = inttoptr i64 %239 to %"class.base::internal::PartitionFreelistEntry"*
  store %"class.base::internal::PartitionFreelistEntry"* %240, %"class.base::internal::PartitionFreelistEntry"** %221, align 1
  %241 = getelementptr inbounds %"struct.base::internal::SlotSpanMetadata", %"struct.base::internal::SlotSpanMetadata"* %216, i64 0, i32 3
  %242 = load i16, i16* %241, align 1
  %243 = add i16 %242, 1
  store i16 %243, i16* %241, align 1
  br label %246

244:                                              ; preds = %214
  %245 = call i8* @_ZN4base8internal15PartitionBucketILb1EE13SlowPathAllocEPNS_13PartitionRootILb1EEEimmPb(%"struct.base::internal::PartitionBucket"* %187, %"struct.base::PartitionRoot"* %5, i32 0, i64 %6, i64 16384, i8* nonnull %3) #17
  br label %246

246:                                              ; preds = %244, %238
  %247 = phi i8* [ %218, %238 ], [ %245, %244 ]
  %248 = atomicrmw xchg i32* %190, i32 0 release
  %249 = icmp eq i32 %248, 2
  br i1 %249, label %250, label %251, !prof !7

250:                                              ; preds = %246
  call void @_ZN4base8internal13SpinningMutex9FutexWakeEv(%"class.base::internal::SpinningMutex"* %189) #17
  br label %251

251:                                              ; preds = %250, %246, %184, %180
  %252 = phi i8* [ %181, %180 ], [ %181, %184 ], [ %247, %246 ], [ %247, %250 ]
  %253 = icmp eq i8* %252, null
  br i1 %253, label %256, label %254, !prof !7

254:                                              ; preds = %114, %251
  %255 = phi i8* [ %252, %251 ], [ %115, %114 ]
  br label %256

256:                                              ; preds = %251, %254
  %257 = phi i8* [ null, %251 ], [ %255, %254 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %25) #17
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %3) #17
  %258 = bitcast i8* %257 to %"class.std::__1::__wrap_iter"*
  ret %"class.std::__1::__wrap_iter"* %258
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal17MetadataAllocatorINSt3__111__wrap_iterIPNS0_15RacefulWorklistImE4NodeEEEE10deallocateEPS8_m(%"class.base::internal::MetadataAllocator.186"*, %"class.std::__1::__wrap_iter"*, i64) local_unnamed_addr #3 comdat align 2 {
  %4 = alloca %"struct.base::internal::DeferredUnmap", align 8
  %5 = tail call dereferenceable(5408) %"struct.base::PartitionRoot"* @_ZN4base8internal23PCScanMetadataAllocatorEv() #17
  %6 = bitcast %"class.std::__1::__wrap_iter"* %1 to i8*
  %7 = icmp eq %"class.std::__1::__wrap_iter"* %1, null
  br i1 %7, label %241, label %8, !prof !7

8:                                                ; preds = %3
  tail call void @llvm.prefetch(i8* nonnull %6, i32 0, i32 3, i32 1) #17
  %9 = ptrtoint %"class.std::__1::__wrap_iter"* %1 to i64
  %10 = and i64 %9, -2097152
  %11 = or i64 %10, 4096
  %12 = inttoptr i64 %11 to i8*
  %13 = lshr i64 %9, 9
  %14 = and i64 %13, 4064
  %15 = getelementptr inbounds i8, i8* %12, i64 %14
  %16 = bitcast i8* %15 to %"struct.base::internal::PartitionPage"*
  %17 = getelementptr inbounds i8, i8* %15, i64 30
  %18 = load i8, i8* %17, align 2
  %19 = zext i8 %18 to i64
  %20 = sub nsw i64 0, %19
  %21 = getelementptr inbounds %"struct.base::internal::PartitionPage", %"struct.base::internal::PartitionPage"* %16, i64 %20, i32 0
  %22 = bitcast %union.anon.123* %21 to %"struct.base::internal::SlotSpanMetadata"*
  %23 = bitcast %union.anon.123* %21 to i8*
  tail call void @llvm.prefetch(i8* %23, i32 0, i32 3, i32 1) #17
  %24 = ptrtoint %union.anon.123* %21 to i64
  %25 = and i64 %24, -4096
  %26 = inttoptr i64 %25 to %"struct.base::internal::PartitionSuperPageExtentEntry"*
  %27 = getelementptr inbounds %"struct.base::internal::PartitionSuperPageExtentEntry", %"struct.base::internal::PartitionSuperPageExtentEntry"* %26, i64 0, i32 0
  %28 = load %"struct.base::PartitionRoot"*, %"struct.base::PartitionRoot"** %27, align 4096
  %29 = getelementptr inbounds %"struct.base::PartitionRoot", %"struct.base::PartitionRoot"* %28, i64 0, i32 0
  %30 = load i8, i8* %29, align 8
  %31 = icmp eq i8 %30, 2
  br i1 %31, label %32, label %101, !prof !7

32:                                               ; preds = %8
  %33 = load atomic i8, i8* getelementptr inbounds (%"class.base::internal::PCScan", %"class.base::internal::PCScan"* @_ZN4base8internal6PCScan9instance_E, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0) acquire, align 8
  %34 = icmp eq i8 %33, 2
  br i1 %34, label %35, label %36, !prof !7

35:                                               ; preds = %32
  tail call void @_ZN4base8internal6PCScan8JoinScanEv() #17
  br label %36

36:                                               ; preds = %35, %32
  %37 = getelementptr inbounds %"struct.base::internal::PartitionPage", %"struct.base::internal::PartitionPage"* %16, i64 %20, i32 0, i32 1, i64 8
  %38 = bitcast i8* %37 to %"struct.base::internal::PartitionBucket"**
  %39 = load %"struct.base::internal::PartitionBucket"*, %"struct.base::internal::PartitionBucket"** %38, align 1
  %40 = getelementptr inbounds %"struct.base::PartitionRoot", %"struct.base::PartitionRoot"* %28, i64 0, i32 10, i64 0
  %41 = icmp ugt %"struct.base::internal::PartitionBucket"* %40, %39
  %42 = getelementptr inbounds %"struct.base::PartitionRoot", %"struct.base::PartitionRoot"* %28, i64 0, i32 11
  %43 = icmp ult %"struct.base::internal::PartitionBucket"* %42, %39
  %44 = or i1 %41, %43
  br i1 %44, label %101, label %45, !prof !7

45:                                               ; preds = %36
  %46 = getelementptr inbounds %"struct.base::internal::PartitionPage", %"struct.base::internal::PartitionPage"* %16, i64 %20, i32 0, i32 1, i64 21
  %47 = load i8, i8* %46, align 1, !range !5
  %48 = icmp eq i8 %47, 0
  br i1 %48, label %49, label %53, !prof !6

49:                                               ; preds = %45
  %50 = getelementptr inbounds %"struct.base::internal::PartitionBucket", %"struct.base::internal::PartitionBucket"* %39, i64 0, i32 3
  %51 = load i32, i32* %50, align 8
  %52 = zext i32 %51 to i64
  br label %60

53:                                               ; preds = %45
  %54 = bitcast %union.anon.123* %21 to %"struct.base::internal::PartitionPage"*
  %55 = getelementptr inbounds %"struct.base::internal::PartitionPage", %"struct.base::internal::PartitionPage"* %54, i64 1, i32 0, i32 0, i32 0
  %56 = load i64, i64* %55, align 1
  %57 = getelementptr inbounds %"struct.base::internal::PartitionBucket", %"struct.base::internal::PartitionBucket"* %39, i64 0, i32 3
  %58 = load i32, i32* %57, align 8
  %59 = zext i32 %58 to i64
  br label %60

60:                                               ; preds = %53, %49
  %61 = phi i64 [ %52, %49 ], [ %59, %53 ]
  %62 = phi i64 [ %52, %49 ], [ %56, %53 ]
  %63 = load atomic i64, i64* getelementptr inbounds (%"class.base::internal::PCScan", %"class.base::internal::PCScan"* @_ZN4base8internal6PCScan9instance_E, i64 0, i32 0, i32 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 8
  %64 = inttoptr i64 %10 to i8*
  %65 = and i64 %63, 1
  %66 = icmp eq i64 %65, 0
  %67 = select i1 %66, i64 16384, i64 32768
  %68 = getelementptr inbounds i8, i8* %64, i64 %67
  %69 = bitcast i8* %68 to %"class.base::internal::ObjectBitmap"*
  %70 = lshr i64 %9, 4
  %71 = lshr i64 %9, 10
  %72 = and i64 %71, 2047
  %73 = and i64 %70, 63
  %74 = shl i64 1, %73
  %75 = getelementptr inbounds %"class.base::internal::ObjectBitmap", %"class.base::internal::ObjectBitmap"* %69, i64 0, i32 0, i32 0, i64 %72
  %76 = atomicrmw or i64* %75, i64 %74 monotonic
  %77 = and i64 %76, %74
  %78 = icmp eq i64 %77, 0
  br i1 %78, label %80, label %79, !prof !6

79:                                               ; preds = %60
  notail call void @_ZN4base8internal17DoubleFreeAttemptEv() #18
  unreachable

80:                                               ; preds = %60
  %81 = atomicrmw add i64* getelementptr inbounds (%"class.base::internal::PCScan", %"class.base::internal::PCScan"* @_ZN4base8internal6PCScan9instance_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0), i64 %61 monotonic
  %82 = add i64 %81, %61
  %83 = load atomic i64, i64* getelementptr inbounds (%"class.base::internal::PCScan", %"class.base::internal::PCScan"* @_ZN4base8internal6PCScan9instance_E, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 8
  %84 = icmp ugt i64 %82, %83
  br i1 %84, label %85, label %91

85:                                               ; preds = %80
  %86 = load %"class.base::internal::PCScanSchedulingBackend"*, %"class.base::internal::PCScanSchedulingBackend"** getelementptr inbounds (%"class.base::internal::PCScan", %"class.base::internal::PCScan"* @_ZN4base8internal6PCScan9instance_E, i64 0, i32 0, i32 2), align 8
  %87 = bitcast %"class.base::internal::PCScanSchedulingBackend"* %86 to i1 (%"class.base::internal::PCScanSchedulingBackend"*)***
  %88 = load i1 (%"class.base::internal::PCScanSchedulingBackend"*)**, i1 (%"class.base::internal::PCScanSchedulingBackend"*)*** %87, align 8
  %89 = load i1 (%"class.base::internal::PCScanSchedulingBackend"*)*, i1 (%"class.base::internal::PCScanSchedulingBackend"*)** %88, align 8
  %90 = tail call zeroext i1 %89(%"class.base::internal::PCScanSchedulingBackend"* %86) #17
  br label %91

91:                                               ; preds = %85, %80
  %92 = phi i1 [ false, %80 ], [ %90, %85 ]
  %93 = load i8, i8* getelementptr inbounds (%"class.base::internal::PCScan", %"class.base::internal::PCScan"* @_ZN4base8internal6PCScan9instance_E, i64 0, i32 2), align 1
  %94 = icmp eq i8 %93, 1
  br i1 %94, label %95, label %96

95:                                               ; preds = %91
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 1 %6, i8 0, i64 %62, i1 false) #17
  br label %96

96:                                               ; preds = %95, %91
  br i1 %92, label %97, label %241, !prof !7

97:                                               ; preds = %96
  %98 = load atomic i8, i8* getelementptr inbounds (%"class.base::internal::PCScan", %"class.base::internal::PCScan"* @_ZN4base8internal6PCScan9instance_E, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0) monotonic, align 8
  %99 = icmp eq i8 %98, 0
  br i1 %99, label %100, label %241

100:                                              ; preds = %97
  tail call void @_ZN4base8internal6PCScan11PerformScanENS1_14InvocationModeE(%"class.base::internal::PCScan"* nonnull @_ZN4base8internal6PCScan9instance_E, i32 1) #17
  br label %241

101:                                              ; preds = %36, %8
  %102 = getelementptr inbounds %"struct.base::PartitionRoot", %"struct.base::PartitionRoot"* %28, i64 0, i32 2
  %103 = load i8, i8* %102, align 2, !range !5
  %104 = icmp eq i8 %103, 0
  br i1 %104, label %173, label %105, !prof !7

105:                                              ; preds = %101
  %106 = getelementptr inbounds %"struct.base::internal::PartitionPage", %"struct.base::internal::PartitionPage"* %16, i64 %20, i32 0, i32 1, i64 8
  %107 = bitcast i8* %106 to %"struct.base::internal::PartitionBucket"**
  %108 = load %"struct.base::internal::PartitionBucket"*, %"struct.base::internal::PartitionBucket"** %107, align 1
  %109 = getelementptr inbounds %"struct.base::PartitionRoot", %"struct.base::PartitionRoot"* %28, i64 0, i32 10, i64 0
  %110 = icmp ule %"struct.base::internal::PartitionBucket"* %109, %108
  %111 = getelementptr inbounds %"struct.base::PartitionRoot", %"struct.base::PartitionRoot"* %28, i64 0, i32 11
  %112 = icmp uge %"struct.base::internal::PartitionBucket"* %111, %108
  %113 = and i1 %112, %110
  %114 = ptrtoint %"struct.base::internal::PartitionBucket"* %108 to i64
  br i1 %113, label %115, label %173, !prof !6

115:                                              ; preds = %105
  %116 = load i32, i32* @_ZN4base8internal18g_thread_cache_keyE, align 4
  %117 = tail call i8* @pthread_getspecific(i32 %116) #17
  %118 = bitcast i8* %117 to %"class.base::internal::ThreadCache"*
  %119 = icmp ugt i8* %117, inttoptr (i64 1 to i8*)
  br i1 %119, label %120, label %173, !prof !6

120:                                              ; preds = %115
  %121 = ptrtoint %"struct.base::internal::PartitionBucket"* %109 to i64
  %122 = sub i64 %114, %121
  %123 = sdiv exact i64 %122, 40
  %124 = getelementptr inbounds i8, i8* %117, i64 1480
  %125 = bitcast i8* %124 to i64*
  %126 = load i64, i64* %125, align 8
  %127 = add i64 %126, 1
  store i64 %127, i64* %125, align 8
  %128 = load i16, i16* @_ZN4base8internal11ThreadCache28largest_active_bucket_index_E, align 2
  %129 = zext i16 %128 to i64
  %130 = icmp ugt i64 %123, %129
  br i1 %130, label %131, label %136, !prof !7

131:                                              ; preds = %120
  %132 = getelementptr inbounds i8, i8* %117, i64 1496
  %133 = bitcast i8* %132 to i64*
  %134 = load i64, i64* %133, align 8
  %135 = add i64 %134, 1
  store i64 %135, i64* %133, align 8
  br label %173

136:                                              ; preds = %120
  %137 = getelementptr inbounds %"class.base::internal::ThreadCache", %"class.base::internal::ThreadCache"* %118, i64 0, i32 0, i64 %123
  %138 = bitcast %"struct.base::internal::ThreadCache::Bucket"* %137 to i64*
  %139 = load i64, i64* %138, align 8
  %140 = tail call i64 @llvm.bswap.i64(i64 %139) #17
  %141 = inttoptr i64 %140 to %"struct.base::internal::EncodedPartitionFreelistEntry"*
  %142 = bitcast %"class.std::__1::__wrap_iter"* %1 to %"struct.base::internal::EncodedPartitionFreelistEntry"**
  store %"struct.base::internal::EncodedPartitionFreelistEntry"* %141, %"struct.base::internal::EncodedPartitionFreelistEntry"** %142, align 8
  %143 = xor i64 %140, -1
  %144 = getelementptr inbounds %"class.std::__1::__wrap_iter", %"class.std::__1::__wrap_iter"* %1, i64 1
  %145 = bitcast %"class.std::__1::__wrap_iter"* %144 to i64*
  store i64 %143, i64* %145, align 8
  %146 = bitcast %"struct.base::internal::ThreadCache::Bucket"* %137 to %"class.std::__1::__wrap_iter"**
  store %"class.std::__1::__wrap_iter"* %1, %"class.std::__1::__wrap_iter"** %146, align 8
  %147 = getelementptr inbounds %"class.base::internal::ThreadCache", %"class.base::internal::ThreadCache"* %118, i64 0, i32 0, i64 %123, i32 1
  %148 = load i8, i8* %147, align 8
  %149 = add i8 %148, 1
  store i8 %149, i8* %147, align 8
  %150 = getelementptr inbounds %"class.base::internal::ThreadCache", %"class.base::internal::ThreadCache"* %118, i64 0, i32 0, i64 %123, i32 3
  %151 = load i16, i16* %150, align 2
  %152 = zext i16 %151 to i64
  %153 = getelementptr inbounds i8, i8* %117, i64 1424
  %154 = bitcast i8* %153 to i64*
  %155 = load i64, i64* %154, align 8
  %156 = add i64 %155, %152
  store i64 %156, i64* %154, align 8
  %157 = getelementptr inbounds i8, i8* %117, i64 1488
  %158 = bitcast i8* %157 to i64*
  %159 = load i64, i64* %158, align 8
  %160 = add i64 %159, 1
  store i64 %160, i64* %158, align 8
  %161 = getelementptr inbounds %"class.base::internal::ThreadCache", %"class.base::internal::ThreadCache"* %118, i64 0, i32 0, i64 %123, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %162 = load atomic i8, i8* %161 monotonic, align 1
  %163 = icmp ugt i8 %149, %162
  br i1 %163, label %164, label %167, !prof !7

164:                                              ; preds = %136
  %165 = lshr i8 %162, 1
  %166 = zext i8 %165 to i64
  tail call void @_ZN4base8internal11ThreadCache11ClearBucketERNS1_6BucketEm(%"class.base::internal::ThreadCache"* %118, %"struct.base::internal::ThreadCache::Bucket"* dereferenceable(16) %137, i64 %166) #17
  br label %167

167:                                              ; preds = %164, %136
  %168 = getelementptr inbounds i8, i8* %117, i64 1432
  %169 = load atomic i8, i8* %168 monotonic, align 1
  %170 = and i8 %169, 1
  %171 = icmp eq i8 %170, 0
  br i1 %171, label %241, label %172, !prof !6

172:                                              ; preds = %167
  tail call void @_ZN4base8internal11ThreadCache13PurgeInternalEv(%"class.base::internal::ThreadCache"* %118) #17
  br label %241

173:                                              ; preds = %131, %115, %105, %101
  %174 = bitcast %"struct.base::internal::DeferredUnmap"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %174) #17
  %175 = getelementptr inbounds %"struct.base::internal::DeferredUnmap", %"struct.base::internal::DeferredUnmap"* %4, i64 0, i32 0
  %176 = getelementptr inbounds %"struct.base::internal::DeferredUnmap", %"struct.base::internal::DeferredUnmap"* %4, i64 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %174, i8 0, i64 16, i1 false) #17
  %177 = getelementptr inbounds %"struct.base::PartitionRoot", %"struct.base::PartitionRoot"* %28, i64 0, i32 8
  %178 = getelementptr inbounds %"class.base::internal::MaybeSpinLock", %"class.base::internal::MaybeSpinLock"* %177, i64 0, i32 0
  %179 = getelementptr inbounds %"class.base::internal::MaybeSpinLock", %"class.base::internal::MaybeSpinLock"* %177, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  br label %180

180:                                              ; preds = %192, %173
  %181 = phi i32 [ 0, %173 ], [ %193, %192 ]
  %182 = phi i32 [ 1, %173 ], [ %196, %192 ]
  %183 = load atomic i32, i32* %179 monotonic, align 4
  %184 = icmp eq i32 %183, 0
  br i1 %184, label %185, label %188, !prof !9

185:                                              ; preds = %180
  %186 = cmpxchg weak i32* %179, i32 0, i32 1 acquire monotonic
  %187 = extractvalue { i32, i1 } %186, 1
  br i1 %187, label %203, label %188, !prof !6

188:                                              ; preds = %185, %180
  %189 = icmp sgt i32 %182, 0
  br i1 %189, label %198, label %192

190:                                              ; preds = %198
  %191 = add i32 %182, %181
  br label %192

192:                                              ; preds = %190, %188
  %193 = phi i32 [ %181, %188 ], [ %191, %190 ]
  %194 = shl i32 %182, 1
  %195 = icmp slt i32 %194, 64
  %196 = select i1 %195, i32 %194, i32 64
  %197 = icmp slt i32 %193, 1000
  br i1 %197, label %180, label %202

198:                                              ; preds = %188, %198
  %199 = phi i32 [ %200, %198 ], [ 0, %188 ]
  tail call void asm sideeffect "pause", "~{dirflag},~{fpsr},~{flags}"() #17, !srcloc !10
  %200 = add nuw nsw i32 %199, 1
  %201 = icmp eq i32 %200, %182
  br i1 %201, label %190, label %198

202:                                              ; preds = %192
  tail call void @_ZN4base8internal13SpinningMutex8LockSlowEv(%"class.base::internal::SpinningMutex"* %178) #17
  br label %203

203:                                              ; preds = %185, %202
  %204 = bitcast %union.anon.123* %21 to i8**
  %205 = load i8*, i8** %204, align 1
  %206 = icmp eq i8* %205, %6
  br i1 %206, label %209, label %207, !prof !7

207:                                              ; preds = %203
  %208 = ptrtoint i8* %205 to i64
  br label %212

209:                                              ; preds = %203
  tail call void @_ZN7logging8RawCheckEPKc(i8* getelementptr inbounds ([105 x i8], [105 x i8]* @.str.15, i64 0, i64 0)) #17
  %210 = getelementptr inbounds %union.anon.123, %union.anon.123* %21, i64 0, i32 0, i32 0
  %211 = load i64, i64* %210, align 1
  br label %212

212:                                              ; preds = %209, %207
  %213 = phi i64 [ %208, %207 ], [ %211, %209 ]
  %214 = tail call i64 @llvm.bswap.i64(i64 %213) #17
  %215 = inttoptr i64 %214 to %"struct.base::internal::EncodedPartitionFreelistEntry"*
  %216 = bitcast %"class.std::__1::__wrap_iter"* %1 to %"struct.base::internal::EncodedPartitionFreelistEntry"**
  store %"struct.base::internal::EncodedPartitionFreelistEntry"* %215, %"struct.base::internal::EncodedPartitionFreelistEntry"** %216, align 8
  %217 = xor i64 %214, -1
  %218 = getelementptr inbounds %"class.std::__1::__wrap_iter", %"class.std::__1::__wrap_iter"* %1, i64 1
  %219 = bitcast %"class.std::__1::__wrap_iter"* %218 to i64*
  store i64 %217, i64* %219, align 8
  %220 = bitcast %union.anon.123* %21 to %"class.std::__1::__wrap_iter"**
  store %"class.std::__1::__wrap_iter"* %1, %"class.std::__1::__wrap_iter"** %220, align 1
  %221 = getelementptr inbounds %"struct.base::internal::PartitionPage", %"struct.base::internal::PartitionPage"* %16, i64 %20, i32 0, i32 1, i64 16
  %222 = bitcast i8* %221 to i16*
  %223 = load i16, i16* %222, align 1
  %224 = add i16 %223, -1
  store i16 %224, i16* %222, align 1
  %225 = icmp slt i16 %224, 1
  br i1 %225, label %226, label %230, !prof !7

226:                                              ; preds = %212
  %227 = tail call { i8*, i64 } @_ZN4base8internal16SlotSpanMetadataILb1EE12FreeSlowPathEv(%"struct.base::internal::SlotSpanMetadata"* %22) #17
  %228 = extractvalue { i8*, i64 } %227, 0
  %229 = extractvalue { i8*, i64 } %227, 1
  br label %230

230:                                              ; preds = %226, %212
  %231 = phi i8* [ %228, %226 ], [ null, %212 ]
  %232 = phi i64 [ %229, %226 ], [ 0, %212 ]
  store i8* %231, i8** %175, align 8
  store i64 %232, i64* %176, align 8
  %233 = atomicrmw xchg i32* %179, i32 0 release
  %234 = icmp eq i32 %233, 2
  br i1 %234, label %235, label %236, !prof !7

235:                                              ; preds = %230
  tail call void @_ZN4base8internal13SpinningMutex9FutexWakeEv(%"class.base::internal::SpinningMutex"* %178) #17
  br label %236

236:                                              ; preds = %235, %230
  %237 = load i8*, i8** %175, align 8
  %238 = icmp eq i8* %237, null
  br i1 %238, label %240, label %239, !prof !6

239:                                              ; preds = %236
  call void @_ZN4base8internal13DeferredUnmap5UnmapEv(%"struct.base::internal::DeferredUnmap"* nonnull %4) #17
  br label %240

240:                                              ; preds = %239, %236
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %174) #17
  br label %241

241:                                              ; preds = %3, %96, %97, %100, %167, %172, %240
  ret void
}

; Function Attrs: nounwind readnone speculatable
declare i64 @llvm.cttz.i64(i64, i1 immarg) #14

; Function Attrs: nounwind ssp uwtable
define internal void @"_ZNSt3__117__call_once_proxyINS_5tupleIJOZN4base8internal10PCScanTask19UnprotectPartitionsEvE3$_2EEEEEvPv"(i8* nocapture readonly) #3 {
  %2 = bitcast i8* %0 to %"class.std::__1::tuple.194"**
  %3 = load %"class.std::__1::tuple.194"*, %"class.std::__1::tuple.194"** %2, align 8
  %4 = getelementptr inbounds %"class.std::__1::tuple.194", %"class.std::__1::tuple.194"* %3, i64 0, i32 0, i32 0, i32 0
  %5 = load %class.anon.63*, %class.anon.63** %4, align 8
  %6 = getelementptr inbounds %class.anon.63, %class.anon.63* %5, i64 0, i32 0
  %7 = load %"class.base::internal::PCScanTask"*, %"class.base::internal::PCScanTask"** %6, align 8
  %8 = tail call dereferenceable(312) %"class.base::internal::PCScanInternal"* @_ZN4base8internal14PCScanInternal8InstanceEv() #17
  %9 = getelementptr inbounds %"class.base::internal::PCScanTask", %"class.base::internal::PCScanTask"* %7, i64 0, i32 2, i32 2, i32 0, i32 0, i32 0
  %10 = load %"struct.base::internal::RacefulWorklist<base::internal::(anonymous namespace)::PCScanSnapshot::LargeScanArea>::Node"*, %"struct.base::internal::RacefulWorklist<base::internal::(anonymous namespace)::PCScanSnapshot::LargeScanArea>::Node"** %9, align 8
  %11 = getelementptr inbounds %"class.base::internal::PCScanTask", %"class.base::internal::PCScanTask"* %7, i64 0, i32 2, i32 2, i32 0, i32 0, i32 1
  %12 = load %"struct.base::internal::RacefulWorklist<base::internal::(anonymous namespace)::PCScanSnapshot::LargeScanArea>::Node"*, %"struct.base::internal::RacefulWorklist<base::internal::(anonymous namespace)::PCScanSnapshot::LargeScanArea>::Node"** %11, align 8
  %13 = icmp eq %"struct.base::internal::RacefulWorklist<base::internal::(anonymous namespace)::PCScanSnapshot::LargeScanArea>::Node"* %10, %12
  br i1 %13, label %33, label %14

14:                                               ; preds = %1
  %15 = getelementptr inbounds %"class.base::internal::PCScanInternal", %"class.base::internal::PCScanInternal"* %8, i64 0, i32 11, i32 0, i32 0, i32 0
  br label %16

16:                                               ; preds = %16, %14
  %17 = phi %"struct.base::internal::RacefulWorklist<base::internal::(anonymous namespace)::PCScanSnapshot::LargeScanArea>::Node"* [ %10, %14 ], [ %31, %16 ]
  %18 = bitcast %"struct.base::internal::RacefulWorklist<base::internal::(anonymous namespace)::PCScanSnapshot::LargeScanArea>::Node"* %17 to i64*
  %19 = load i64, i64* %18, align 8
  %20 = getelementptr inbounds %"struct.base::internal::RacefulWorklist<base::internal::(anonymous namespace)::PCScanSnapshot::LargeScanArea>::Node", %"struct.base::internal::RacefulWorklist<base::internal::(anonymous namespace)::PCScanSnapshot::LargeScanArea>::Node"* %17, i64 0, i32 0, i32 0, i32 1
  %21 = bitcast i64** %20 to i64*
  %22 = load i64, i64* %21, align 8
  %23 = load %"class.base::internal::WriteProtector"*, %"class.base::internal::WriteProtector"** %15, align 8
  %24 = sub i64 4095, %19
  %25 = add i64 %24, %22
  %26 = and i64 %25, -4096
  %27 = bitcast %"class.base::internal::WriteProtector"* %23 to void (%"class.base::internal::WriteProtector"*, i64, i64)***
  %28 = load void (%"class.base::internal::WriteProtector"*, i64, i64)**, void (%"class.base::internal::WriteProtector"*, i64, i64)*** %27, align 8
  %29 = getelementptr inbounds void (%"class.base::internal::WriteProtector"*, i64, i64)*, void (%"class.base::internal::WriteProtector"*, i64, i64)** %28, i64 3
  %30 = load void (%"class.base::internal::WriteProtector"*, i64, i64)*, void (%"class.base::internal::WriteProtector"*, i64, i64)** %29, align 8
  tail call void %30(%"class.base::internal::WriteProtector"* %23, i64 %19, i64 %26) #17
  %31 = getelementptr inbounds %"struct.base::internal::RacefulWorklist<base::internal::(anonymous namespace)::PCScanSnapshot::LargeScanArea>::Node", %"struct.base::internal::RacefulWorklist<base::internal::(anonymous namespace)::PCScanSnapshot::LargeScanArea>::Node"* %17, i64 1
  %32 = icmp eq %"struct.base::internal::RacefulWorklist<base::internal::(anonymous namespace)::PCScanSnapshot::LargeScanArea>::Node"* %31, %12
  br i1 %32, label %33, label %16

33:                                               ; preds = %16, %1
  %34 = getelementptr inbounds %"class.base::internal::PCScanTask", %"class.base::internal::PCScanTask"* %7, i64 0, i32 2, i32 1, i32 0, i32 0, i32 0
  %35 = load %"struct.base::internal::RacefulWorklist<base::internal::(anonymous namespace)::PCScanSnapshot::ScanArea>::Node"*, %"struct.base::internal::RacefulWorklist<base::internal::(anonymous namespace)::PCScanSnapshot::ScanArea>::Node"** %34, align 8
  %36 = getelementptr inbounds %"class.base::internal::PCScanTask", %"class.base::internal::PCScanTask"* %7, i64 0, i32 2, i32 1, i32 0, i32 0, i32 1
  %37 = load %"struct.base::internal::RacefulWorklist<base::internal::(anonymous namespace)::PCScanSnapshot::ScanArea>::Node"*, %"struct.base::internal::RacefulWorklist<base::internal::(anonymous namespace)::PCScanSnapshot::ScanArea>::Node"** %36, align 8
  %38 = icmp eq %"struct.base::internal::RacefulWorklist<base::internal::(anonymous namespace)::PCScanSnapshot::ScanArea>::Node"* %35, %37
  br i1 %38, label %58, label %39

39:                                               ; preds = %33
  %40 = getelementptr inbounds %"class.base::internal::PCScanInternal", %"class.base::internal::PCScanInternal"* %8, i64 0, i32 11, i32 0, i32 0, i32 0
  br label %41

41:                                               ; preds = %41, %39
  %42 = phi %"struct.base::internal::RacefulWorklist<base::internal::(anonymous namespace)::PCScanSnapshot::ScanArea>::Node"* [ %35, %39 ], [ %56, %41 ]
  %43 = bitcast %"struct.base::internal::RacefulWorklist<base::internal::(anonymous namespace)::PCScanSnapshot::ScanArea>::Node"* %42 to i64*
  %44 = load i64, i64* %43, align 8
  %45 = getelementptr inbounds %"struct.base::internal::RacefulWorklist<base::internal::(anonymous namespace)::PCScanSnapshot::ScanArea>::Node", %"struct.base::internal::RacefulWorklist<base::internal::(anonymous namespace)::PCScanSnapshot::ScanArea>::Node"* %42, i64 0, i32 0, i32 1
  %46 = bitcast i64** %45 to i64*
  %47 = load i64, i64* %46, align 8
  %48 = load %"class.base::internal::WriteProtector"*, %"class.base::internal::WriteProtector"** %40, align 8
  %49 = sub i64 4095, %44
  %50 = add i64 %49, %47
  %51 = and i64 %50, -4096
  %52 = bitcast %"class.base::internal::WriteProtector"* %48 to void (%"class.base::internal::WriteProtector"*, i64, i64)***
  %53 = load void (%"class.base::internal::WriteProtector"*, i64, i64)**, void (%"class.base::internal::WriteProtector"*, i64, i64)*** %52, align 8
  %54 = getelementptr inbounds void (%"class.base::internal::WriteProtector"*, i64, i64)*, void (%"class.base::internal::WriteProtector"*, i64, i64)** %53, i64 3
  %55 = load void (%"class.base::internal::WriteProtector"*, i64, i64)*, void (%"class.base::internal::WriteProtector"*, i64, i64)** %54, align 8
  tail call void %55(%"class.base::internal::WriteProtector"* %48, i64 %44, i64 %51) #17
  %56 = getelementptr inbounds %"struct.base::internal::RacefulWorklist<base::internal::(anonymous namespace)::PCScanSnapshot::ScanArea>::Node", %"struct.base::internal::RacefulWorklist<base::internal::(anonymous namespace)::PCScanSnapshot::ScanArea>::Node"* %42, i64 1
  %57 = icmp eq %"struct.base::internal::RacefulWorklist<base::internal::(anonymous namespace)::PCScanSnapshot::ScanArea>::Node"* %56, %37
  br i1 %57, label %58, label %41

58:                                               ; preds = %41, %33
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define internal fastcc void @_ZNSt3__16vectorINS_11__wrap_iterIPN4base8internal15RacefulWorklistINS3_12_GLOBAL__N_114PCScanSnapshot13LargeScanAreaEE4NodeEEENS3_17MetadataAllocatorISB_EEE9push_backERKSB_(%"class.std::__1::vector.203"*, %"class.std::__1::__wrap_iter.205"* nocapture readonly dereferenceable(8)) unnamed_addr #16 align 2 {
  %3 = alloca i8, align 1
  %4 = alloca i64, align 8
  %5 = getelementptr inbounds %"class.std::__1::vector.203", %"class.std::__1::vector.203"* %0, i64 0, i32 0, i32 1
  %6 = load %"class.std::__1::__wrap_iter.205"*, %"class.std::__1::__wrap_iter.205"** %5, align 8
  %7 = getelementptr inbounds %"class.std::__1::vector.203", %"class.std::__1::vector.203"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %8 = load %"class.std::__1::__wrap_iter.205"*, %"class.std::__1::__wrap_iter.205"** %7, align 8
  %9 = icmp eq %"class.std::__1::__wrap_iter.205"* %6, %8
  %10 = ptrtoint %"class.std::__1::__wrap_iter.205"* %8 to i64
  br i1 %9, label %18, label %11

11:                                               ; preds = %2
  %12 = bitcast %"class.std::__1::__wrap_iter.205"* %1 to i64*
  %13 = bitcast %"class.std::__1::__wrap_iter.205"* %6 to i64*
  %14 = load i64, i64* %12, align 8
  store i64 %14, i64* %13, align 8
  %15 = getelementptr inbounds %"class.std::__1::__wrap_iter.205", %"class.std::__1::__wrap_iter.205"* %6, i64 1
  %16 = ptrtoint %"class.std::__1::__wrap_iter.205"* %15 to i64
  %17 = bitcast %"class.std::__1::__wrap_iter.205"** %5 to i64*
  store i64 %16, i64* %17, align 8
  br label %324

18:                                               ; preds = %2
  %19 = ptrtoint %"class.std::__1::__wrap_iter.205"* %6 to i64
  %20 = bitcast %"class.std::__1::__wrap_iter.205"** %5 to i64*
  %21 = bitcast %"class.std::__1::vector.203"* %0 to i64*
  %22 = load i64, i64* %21, align 8
  %23 = sub i64 %19, %22
  %24 = ashr exact i64 %23, 3
  %25 = add nsw i64 %24, 1
  %26 = icmp ugt i64 %25, 2305843009213693951
  br i1 %26, label %27, label %29

27:                                               ; preds = %18
  %28 = bitcast %"class.std::__1::vector.203"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %28) #18
  unreachable

29:                                               ; preds = %18
  %30 = bitcast %"class.std::__1::__wrap_iter.205"** %7 to i64*
  %31 = sub i64 %10, %22
  %32 = ashr exact i64 %31, 3
  %33 = icmp ult i64 %32, 1152921504606846975
  br i1 %33, label %34, label %39

34:                                               ; preds = %29
  %35 = ashr exact i64 %31, 2
  %36 = icmp ult i64 %35, %25
  %37 = select i1 %36, i64 %25, i64 %35
  %38 = icmp eq i64 %37, 0
  br i1 %38, label %295, label %39

39:                                               ; preds = %34, %29
  %40 = phi i64 [ %37, %34 ], [ 2305843009213693951, %29 ]
  %41 = tail call dereferenceable(5408) %"struct.base::PartitionRoot"* @_ZN4base8internal23PCScanMetadataAllocatorEv() #17
  %42 = shl i64 %40, 3
  %43 = tail call i64 @llvm.ctlz.i64(i64 %42, i1 false) #17, !range !4
  %44 = sub nuw nsw i64 64, %43
  %45 = and i64 %44, 255
  %46 = getelementptr inbounds [65 x i8], [65 x i8]* @_ZN4base12_GLOBAL__N_116kOrderIndexShiftE, i64 0, i64 %45
  %47 = load i8, i8* %46, align 1
  %48 = zext i8 %47 to i64
  %49 = lshr i64 %42, %48
  %50 = and i64 %49, 7
  %51 = getelementptr inbounds [65 x i64], [65 x i64]* @_ZN4base12_GLOBAL__N_118kOrderSubIndexMaskE, i64 0, i64 %45
  %52 = load i64, i64* %51, align 8
  %53 = and i64 %52, %42
  %54 = shl nuw nsw i64 %45, 3
  %55 = or i64 %50, %54
  %56 = icmp ne i64 %53, 0
  %57 = zext i1 %56 to i64
  %58 = add nuw nsw i64 %55, %57
  %59 = getelementptr inbounds { [128 x i64], [521 x i16] }, { [128 x i64], [521 x i16] }* @_ZZN4base8internal17BucketIndexLookup8GetIndexEmE6lookup, i64 0, i32 1, i64 %58
  %60 = load i16, i16* %59, align 2
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %3) #17
  store i8 0, i8* %3, align 1
  %61 = bitcast i64* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %61) #17
  store i64 -6148914691236517206, i64* %4, align 8
  %62 = getelementptr inbounds %"struct.base::PartitionRoot", %"struct.base::PartitionRoot"* %41, i64 0, i32 0
  %63 = load i8, i8* %62, align 8
  %64 = icmp eq i8 %63, 2
  br i1 %64, label %65, label %69

65:                                               ; preds = %39
  %66 = load atomic i8, i8* getelementptr inbounds (%"class.base::internal::PCScan", %"class.base::internal::PCScan"* @_ZN4base8internal6PCScan9instance_E, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0) acquire, align 8
  %67 = icmp eq i8 %66, 2
  br i1 %67, label %68, label %69, !prof !7

68:                                               ; preds = %65
  tail call void @_ZN4base8internal6PCScan8JoinScanEv() #17
  br label %69

69:                                               ; preds = %68, %65, %39
  %70 = getelementptr inbounds %"struct.base::PartitionRoot", %"struct.base::PartitionRoot"* %41, i64 0, i32 2
  %71 = load i8, i8* %70, align 2, !range !5
  %72 = icmp eq i8 %71, 0
  br i1 %72, label %221, label %73, !prof !19

73:                                               ; preds = %69
  %74 = load i32, i32* @_ZN4base8internal18g_thread_cache_keyE, align 4
  %75 = tail call i8* @pthread_getspecific(i32 %74) #17
  %76 = bitcast i8* %75 to %"class.base::internal::ThreadCache"*
  %77 = icmp ugt i8* %75, inttoptr (i64 1 to i8*)
  br i1 %77, label %78, label %148, !prof !6

78:                                               ; preds = %73
  %79 = zext i16 %60 to i64
  %80 = getelementptr inbounds %"class.base::internal::ThreadCache", %"class.base::internal::ThreadCache"* %76, i64 0, i32 3, i32 12, i64 %79
  %81 = load i64, i64* %80, align 8
  %82 = add i64 %81, 1
  store i64 %82, i64* %80, align 8
  %83 = getelementptr inbounds i8, i8* %75, i64 1440
  %84 = bitcast i8* %83 to i64*
  %85 = load i64, i64* %84, align 8
  %86 = add i64 %85, 1
  store i64 %86, i64* %84, align 8
  %87 = load i16, i16* @_ZN4base8internal11ThreadCache28largest_active_bucket_index_E, align 2
  %88 = icmp ult i16 %87, %60
  br i1 %88, label %89, label %98, !prof !7

89:                                               ; preds = %78
  %90 = getelementptr inbounds i8, i8* %75, i64 1472
  %91 = bitcast i8* %90 to i64*
  %92 = load i64, i64* %91, align 8
  %93 = add i64 %92, 1
  store i64 %93, i64* %91, align 8
  %94 = getelementptr inbounds i8, i8* %75, i64 1456
  %95 = bitcast i8* %94 to i64*
  %96 = load i64, i64* %95, align 8
  %97 = add i64 %96, 1
  store i64 %97, i64* %95, align 8
  br label %155

98:                                               ; preds = %78
  %99 = getelementptr inbounds %"class.base::internal::ThreadCache", %"class.base::internal::ThreadCache"* %76, i64 0, i32 0, i64 %79, i32 0
  %100 = load %"class.base::internal::PartitionFreelistEntry"*, %"class.base::internal::PartitionFreelistEntry"** %99, align 8
  %101 = icmp eq %"class.base::internal::PartitionFreelistEntry"* %100, null
  br i1 %101, label %107, label %102, !prof !7

102:                                              ; preds = %98
  %103 = getelementptr inbounds i8, i8* %75, i64 1448
  %104 = bitcast i8* %103 to i64*
  %105 = load i64, i64* %104, align 8
  %106 = add i64 %105, 1
  store i64 %106, i64* %104, align 8
  br label %115

107:                                              ; preds = %98
  %108 = getelementptr inbounds i8, i8* %75, i64 1456
  %109 = bitcast i8* %108 to <2 x i64>*
  %110 = load <2 x i64>, <2 x i64>* %109, align 8
  %111 = add <2 x i64> %110, <i64 1, i64 1>
  %112 = bitcast i8* %108 to <2 x i64>*
  store <2 x i64> %111, <2 x i64>* %112, align 8
  tail call void @_ZN4base8internal11ThreadCache10FillBucketEm(%"class.base::internal::ThreadCache"* %76, i64 %79) #17
  %113 = load %"class.base::internal::PartitionFreelistEntry"*, %"class.base::internal::PartitionFreelistEntry"** %99, align 8
  %114 = icmp eq %"class.base::internal::PartitionFreelistEntry"* %113, null
  br i1 %114, label %155, label %115, !prof !7

115:                                              ; preds = %107, %102
  %116 = phi %"class.base::internal::PartitionFreelistEntry"* [ %113, %107 ], [ %100, %102 ]
  %117 = getelementptr inbounds %"class.base::internal::PartitionFreelistEntry", %"class.base::internal::PartitionFreelistEntry"* %116, i64 0, i32 0
  %118 = load %"struct.base::internal::EncodedPartitionFreelistEntry"*, %"struct.base::internal::EncodedPartitionFreelistEntry"** %117, align 8
  %119 = icmp eq %"struct.base::internal::EncodedPartitionFreelistEntry"* %118, null
  %120 = ptrtoint %"struct.base::internal::EncodedPartitionFreelistEntry"* %118 to i64
  br i1 %119, label %121, label %123

121:                                              ; preds = %115
  %122 = tail call i64 @llvm.bswap.i64(i64 %120) #17
  br label %132

123:                                              ; preds = %115
  %124 = xor i64 %120, -1
  %125 = getelementptr inbounds %"class.base::internal::PartitionFreelistEntry", %"class.base::internal::PartitionFreelistEntry"* %116, i64 0, i32 1
  %126 = load i64, i64* %125, align 8
  %127 = icmp eq i64 %126, %124
  br i1 %127, label %129, label %128, !prof !6

128:                                              ; preds = %123
  tail call fastcc void @_ZN4base8internal12_GLOBAL__N_126FreelistCorruptionDetectedEv() #18
  unreachable

129:                                              ; preds = %123
  %130 = tail call i64 @llvm.bswap.i64(i64 %120) #17
  %131 = inttoptr i64 %130 to i8*
  tail call void @llvm.prefetch(i8* nonnull %131, i32 0, i32 3, i32 1) #17
  br label %132

132:                                              ; preds = %129, %121
  %133 = phi i64 [ %122, %121 ], [ %130, %129 ]
  %134 = inttoptr i64 %133 to %"class.base::internal::PartitionFreelistEntry"*
  %135 = getelementptr inbounds %"class.base::internal::ThreadCache", %"class.base::internal::ThreadCache"* %76, i64 0, i32 0, i64 %79, i32 1
  %136 = load i8, i8* %135, align 8
  %137 = add i8 %136, -1
  store i8 %137, i8* %135, align 8
  store %"class.base::internal::PartitionFreelistEntry"* %134, %"class.base::internal::PartitionFreelistEntry"** %99, align 8
  %138 = getelementptr inbounds %"class.base::internal::ThreadCache", %"class.base::internal::ThreadCache"* %76, i64 0, i32 0, i64 %79, i32 3
  %139 = load i16, i16* %138, align 2
  %140 = zext i16 %139 to i64
  store i64 %140, i64* %4, align 8
  %141 = load i16, i16* %138, align 2
  %142 = zext i16 %141 to i64
  %143 = getelementptr inbounds i8, i8* %75, i64 1424
  %144 = bitcast i8* %143 to i64*
  %145 = load i64, i64* %144, align 8
  %146 = sub i64 %145, %142
  store i64 %146, i64* %144, align 8
  %147 = bitcast %"class.base::internal::PartitionFreelistEntry"* %116 to i8*
  br label %150

148:                                              ; preds = %73
  %149 = call i8* @_ZN4base13PartitionRootILb1EE28MaybeInitThreadCacheAndAllocEtPm(%"struct.base::PartitionRoot"* %41, i16 zeroext %60, i64* nonnull %4) #17
  br label %150

150:                                              ; preds = %148, %132
  %151 = phi i8* [ %149, %148 ], [ %147, %132 ]
  %152 = icmp eq i8* %151, null
  br i1 %152, label %153, label %290, !prof !7

153:                                              ; preds = %150
  %154 = zext i16 %60 to i64
  br label %155

155:                                              ; preds = %153, %107, %89
  %156 = phi i64 [ %154, %153 ], [ %79, %107 ], [ %79, %89 ]
  %157 = getelementptr inbounds %"struct.base::PartitionRoot", %"struct.base::PartitionRoot"* %41, i64 0, i32 10, i64 %156
  %158 = getelementptr inbounds %"struct.base::PartitionRoot", %"struct.base::PartitionRoot"* %41, i64 0, i32 8
  %159 = getelementptr inbounds %"class.base::internal::MaybeSpinLock", %"class.base::internal::MaybeSpinLock"* %158, i64 0, i32 0
  %160 = getelementptr inbounds %"class.base::internal::MaybeSpinLock", %"class.base::internal::MaybeSpinLock"* %158, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  br label %161

161:                                              ; preds = %173, %155
  %162 = phi i32 [ 0, %155 ], [ %174, %173 ]
  %163 = phi i32 [ 1, %155 ], [ %177, %173 ]
  %164 = load atomic i32, i32* %160 monotonic, align 4
  %165 = icmp eq i32 %164, 0
  br i1 %165, label %166, label %169, !prof !9

166:                                              ; preds = %161
  %167 = cmpxchg weak i32* %160, i32 0, i32 1 acquire monotonic
  %168 = extractvalue { i32, i1 } %167, 1
  br i1 %168, label %184, label %169, !prof !6

169:                                              ; preds = %166, %161
  %170 = icmp sgt i32 %163, 0
  br i1 %170, label %179, label %173

171:                                              ; preds = %179
  %172 = add i32 %163, %162
  br label %173

173:                                              ; preds = %171, %169
  %174 = phi i32 [ %162, %169 ], [ %172, %171 ]
  %175 = shl i32 %163, 1
  %176 = icmp slt i32 %175, 64
  %177 = select i1 %176, i32 %175, i32 64
  %178 = icmp slt i32 %174, 1000
  br i1 %178, label %161, label %183

179:                                              ; preds = %169, %179
  %180 = phi i32 [ %181, %179 ], [ 0, %169 ]
  call void asm sideeffect "pause", "~{dirflag},~{fpsr},~{flags}"() #17, !srcloc !10
  %181 = add nuw nsw i32 %180, 1
  %182 = icmp eq i32 %181, %163
  br i1 %182, label %171, label %179

183:                                              ; preds = %173
  call void @_ZN4base8internal13SpinningMutex8LockSlowEv(%"class.base::internal::SpinningMutex"* %159) #17
  br label %184

184:                                              ; preds = %166, %183
  %185 = getelementptr inbounds %"struct.base::internal::PartitionBucket", %"struct.base::internal::PartitionBucket"* %157, i64 0, i32 0
  %186 = load %"struct.base::internal::SlotSpanMetadata"*, %"struct.base::internal::SlotSpanMetadata"** %185, align 8
  %187 = bitcast %"struct.base::internal::SlotSpanMetadata"* %186 to i8**
  %188 = load i8*, i8** %187, align 1
  %189 = icmp eq i8* %188, null
  br i1 %189, label %214, label %190, !prof !7

190:                                              ; preds = %184
  %191 = getelementptr inbounds %"struct.base::internal::SlotSpanMetadata", %"struct.base::internal::SlotSpanMetadata"* %186, i64 0, i32 0
  store i8 0, i8* %3, align 1
  %192 = bitcast i8* %188 to %"struct.base::internal::EncodedPartitionFreelistEntry"**
  %193 = load %"struct.base::internal::EncodedPartitionFreelistEntry"*, %"struct.base::internal::EncodedPartitionFreelistEntry"** %192, align 8
  %194 = icmp eq %"struct.base::internal::EncodedPartitionFreelistEntry"* %193, null
  %195 = ptrtoint %"struct.base::internal::EncodedPartitionFreelistEntry"* %193 to i64
  br i1 %194, label %196, label %198

196:                                              ; preds = %190
  %197 = call i64 @llvm.bswap.i64(i64 %195) #17
  br label %208

198:                                              ; preds = %190
  %199 = xor i64 %195, -1
  %200 = getelementptr inbounds i8, i8* %188, i64 8
  %201 = bitcast i8* %200 to i64*
  %202 = load i64, i64* %201, align 8
  %203 = icmp eq i64 %202, %199
  br i1 %203, label %205, label %204, !prof !6

204:                                              ; preds = %198
  call fastcc void @_ZN4base8internal12_GLOBAL__N_126FreelistCorruptionDetectedEv() #18
  unreachable

205:                                              ; preds = %198
  %206 = call i64 @llvm.bswap.i64(i64 %195) #17
  %207 = inttoptr i64 %206 to i8*
  call void @llvm.prefetch(i8* nonnull %207, i32 0, i32 3, i32 1) #17
  br label %208

208:                                              ; preds = %205, %196
  %209 = phi i64 [ %197, %196 ], [ %206, %205 ]
  %210 = inttoptr i64 %209 to %"class.base::internal::PartitionFreelistEntry"*
  store %"class.base::internal::PartitionFreelistEntry"* %210, %"class.base::internal::PartitionFreelistEntry"** %191, align 1
  %211 = getelementptr inbounds %"struct.base::internal::SlotSpanMetadata", %"struct.base::internal::SlotSpanMetadata"* %186, i64 0, i32 3
  %212 = load i16, i16* %211, align 1
  %213 = add i16 %212, 1
  store i16 %213, i16* %211, align 1
  br label %216

214:                                              ; preds = %184
  %215 = call i8* @_ZN4base8internal15PartitionBucketILb1EE13SlowPathAllocEPNS_13PartitionRootILb1EEEimmPb(%"struct.base::internal::PartitionBucket"* %157, %"struct.base::PartitionRoot"* %41, i32 0, i64 %42, i64 16384, i8* nonnull %3) #17
  br label %216

216:                                              ; preds = %214, %208
  %217 = phi i8* [ %188, %208 ], [ %215, %214 ]
  %218 = atomicrmw xchg i32* %160, i32 0 release
  %219 = icmp eq i32 %218, 2
  br i1 %219, label %220, label %287, !prof !7

220:                                              ; preds = %216
  call void @_ZN4base8internal13SpinningMutex9FutexWakeEv(%"class.base::internal::SpinningMutex"* %159) #17
  br label %287

221:                                              ; preds = %69
  %222 = zext i16 %60 to i64
  %223 = getelementptr inbounds %"struct.base::PartitionRoot", %"struct.base::PartitionRoot"* %41, i64 0, i32 10, i64 %222
  %224 = getelementptr inbounds %"struct.base::PartitionRoot", %"struct.base::PartitionRoot"* %41, i64 0, i32 8
  %225 = getelementptr inbounds %"class.base::internal::MaybeSpinLock", %"class.base::internal::MaybeSpinLock"* %224, i64 0, i32 0
  %226 = getelementptr inbounds %"class.base::internal::MaybeSpinLock", %"class.base::internal::MaybeSpinLock"* %224, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  br label %227

227:                                              ; preds = %239, %221
  %228 = phi i32 [ 0, %221 ], [ %240, %239 ]
  %229 = phi i32 [ 1, %221 ], [ %243, %239 ]
  %230 = load atomic i32, i32* %226 monotonic, align 4
  %231 = icmp eq i32 %230, 0
  br i1 %231, label %232, label %235, !prof !9

232:                                              ; preds = %227
  %233 = cmpxchg weak i32* %226, i32 0, i32 1 acquire monotonic
  %234 = extractvalue { i32, i1 } %233, 1
  br i1 %234, label %250, label %235, !prof !6

235:                                              ; preds = %232, %227
  %236 = icmp sgt i32 %229, 0
  br i1 %236, label %245, label %239

237:                                              ; preds = %245
  %238 = add i32 %229, %228
  br label %239

239:                                              ; preds = %237, %235
  %240 = phi i32 [ %228, %235 ], [ %238, %237 ]
  %241 = shl i32 %229, 1
  %242 = icmp slt i32 %241, 64
  %243 = select i1 %242, i32 %241, i32 64
  %244 = icmp slt i32 %240, 1000
  br i1 %244, label %227, label %249

245:                                              ; preds = %235, %245
  %246 = phi i32 [ %247, %245 ], [ 0, %235 ]
  tail call void asm sideeffect "pause", "~{dirflag},~{fpsr},~{flags}"() #17, !srcloc !10
  %247 = add nuw nsw i32 %246, 1
  %248 = icmp eq i32 %247, %229
  br i1 %248, label %237, label %245

249:                                              ; preds = %239
  tail call void @_ZN4base8internal13SpinningMutex8LockSlowEv(%"class.base::internal::SpinningMutex"* %225) #17
  br label %250

250:                                              ; preds = %232, %249
  %251 = getelementptr inbounds %"struct.base::internal::PartitionBucket", %"struct.base::internal::PartitionBucket"* %223, i64 0, i32 0
  %252 = load %"struct.base::internal::SlotSpanMetadata"*, %"struct.base::internal::SlotSpanMetadata"** %251, align 8
  %253 = bitcast %"struct.base::internal::SlotSpanMetadata"* %252 to i8**
  %254 = load i8*, i8** %253, align 1
  %255 = icmp eq i8* %254, null
  br i1 %255, label %280, label %256, !prof !7

256:                                              ; preds = %250
  %257 = getelementptr inbounds %"struct.base::internal::SlotSpanMetadata", %"struct.base::internal::SlotSpanMetadata"* %252, i64 0, i32 0
  store i8 0, i8* %3, align 1
  %258 = bitcast i8* %254 to %"struct.base::internal::EncodedPartitionFreelistEntry"**
  %259 = load %"struct.base::internal::EncodedPartitionFreelistEntry"*, %"struct.base::internal::EncodedPartitionFreelistEntry"** %258, align 8
  %260 = icmp eq %"struct.base::internal::EncodedPartitionFreelistEntry"* %259, null
  %261 = ptrtoint %"struct.base::internal::EncodedPartitionFreelistEntry"* %259 to i64
  br i1 %260, label %262, label %264

262:                                              ; preds = %256
  %263 = tail call i64 @llvm.bswap.i64(i64 %261) #17
  br label %274

264:                                              ; preds = %256
  %265 = xor i64 %261, -1
  %266 = getelementptr inbounds i8, i8* %254, i64 8
  %267 = bitcast i8* %266 to i64*
  %268 = load i64, i64* %267, align 8
  %269 = icmp eq i64 %268, %265
  br i1 %269, label %271, label %270, !prof !6

270:                                              ; preds = %264
  tail call fastcc void @_ZN4base8internal12_GLOBAL__N_126FreelistCorruptionDetectedEv() #18
  unreachable

271:                                              ; preds = %264
  %272 = tail call i64 @llvm.bswap.i64(i64 %261) #17
  %273 = inttoptr i64 %272 to i8*
  tail call void @llvm.prefetch(i8* nonnull %273, i32 0, i32 3, i32 1) #17
  br label %274

274:                                              ; preds = %271, %262
  %275 = phi i64 [ %263, %262 ], [ %272, %271 ]
  %276 = inttoptr i64 %275 to %"class.base::internal::PartitionFreelistEntry"*
  store %"class.base::internal::PartitionFreelistEntry"* %276, %"class.base::internal::PartitionFreelistEntry"** %257, align 1
  %277 = getelementptr inbounds %"struct.base::internal::SlotSpanMetadata", %"struct.base::internal::SlotSpanMetadata"* %252, i64 0, i32 3
  %278 = load i16, i16* %277, align 1
  %279 = add i16 %278, 1
  store i16 %279, i16* %277, align 1
  br label %282

280:                                              ; preds = %250
  %281 = call i8* @_ZN4base8internal15PartitionBucketILb1EE13SlowPathAllocEPNS_13PartitionRootILb1EEEimmPb(%"struct.base::internal::PartitionBucket"* %223, %"struct.base::PartitionRoot"* %41, i32 0, i64 %42, i64 16384, i8* nonnull %3) #17
  br label %282

282:                                              ; preds = %280, %274
  %283 = phi i8* [ %254, %274 ], [ %281, %280 ]
  %284 = atomicrmw xchg i32* %226, i32 0 release
  %285 = icmp eq i32 %284, 2
  br i1 %285, label %286, label %287, !prof !7

286:                                              ; preds = %282
  call void @_ZN4base8internal13SpinningMutex9FutexWakeEv(%"class.base::internal::SpinningMutex"* %225) #17
  br label %287

287:                                              ; preds = %286, %282, %220, %216
  %288 = phi i8* [ %217, %216 ], [ %217, %220 ], [ %283, %282 ], [ %283, %286 ]
  %289 = icmp eq i8* %288, null
  br i1 %289, label %292, label %290, !prof !7

290:                                              ; preds = %287, %150
  %291 = phi i8* [ %288, %287 ], [ %151, %150 ]
  br label %292

292:                                              ; preds = %290, %287
  %293 = phi i8* [ null, %287 ], [ %291, %290 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %61) #17
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %3) #17
  %294 = bitcast i8* %293 to %"class.std::__1::__wrap_iter.205"*
  br label %295

295:                                              ; preds = %292, %34
  %296 = phi i64 [ %40, %292 ], [ 0, %34 ]
  %297 = phi %"class.std::__1::__wrap_iter.205"* [ %294, %292 ], [ null, %34 ]
  %298 = getelementptr inbounds %"class.std::__1::__wrap_iter.205", %"class.std::__1::__wrap_iter.205"* %297, i64 %24
  %299 = getelementptr inbounds %"class.std::__1::__wrap_iter.205", %"class.std::__1::__wrap_iter.205"* %297, i64 %296
  %300 = ptrtoint %"class.std::__1::__wrap_iter.205"* %299 to i64
  %301 = bitcast %"class.std::__1::__wrap_iter.205"* %1 to i64*
  %302 = bitcast %"class.std::__1::__wrap_iter.205"* %298 to i64*
  %303 = load i64, i64* %301, align 8
  store i64 %303, i64* %302, align 8
  %304 = getelementptr inbounds %"class.std::__1::__wrap_iter.205", %"class.std::__1::__wrap_iter.205"* %298, i64 1
  %305 = ptrtoint %"class.std::__1::__wrap_iter.205"* %304 to i64
  %306 = getelementptr inbounds %"class.std::__1::vector.203", %"class.std::__1::vector.203"* %0, i64 0, i32 0, i32 0
  %307 = load %"class.std::__1::__wrap_iter.205"*, %"class.std::__1::__wrap_iter.205"** %306, align 8
  %308 = load i64, i64* %20, align 8
  %309 = ptrtoint %"class.std::__1::__wrap_iter.205"* %307 to i64
  %310 = sub i64 %308, %309
  %311 = ashr exact i64 %310, 3
  %312 = sub nsw i64 0, %311
  %313 = getelementptr inbounds %"class.std::__1::__wrap_iter.205", %"class.std::__1::__wrap_iter.205"* %298, i64 %312
  %314 = ptrtoint %"class.std::__1::__wrap_iter.205"* %313 to i64
  %315 = icmp sgt i64 %310, 0
  br i1 %315, label %316, label %320

316:                                              ; preds = %295
  %317 = bitcast %"class.std::__1::__wrap_iter.205"* %313 to i8*
  %318 = bitcast %"class.std::__1::__wrap_iter.205"* %307 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %317, i8* align 8 %318, i64 %310, i1 false) #17
  %319 = load %"class.std::__1::__wrap_iter.205"*, %"class.std::__1::__wrap_iter.205"** %306, align 8
  br label %320

320:                                              ; preds = %316, %295
  %321 = phi %"class.std::__1::__wrap_iter.205"* [ %307, %295 ], [ %319, %316 ]
  store i64 %314, i64* %21, align 8
  store i64 %305, i64* %20, align 8
  store i64 %300, i64* %30, align 8
  %322 = icmp eq %"class.std::__1::__wrap_iter.205"* %321, null
  br i1 %322, label %324, label %323

323:                                              ; preds = %320
  call fastcc void @_ZNSt3__116allocator_traitsIN4base8internal17MetadataAllocatorINS_11__wrap_iterIPNS2_15RacefulWorklistINS2_12_GLOBAL__N_114PCScanSnapshot13LargeScanAreaEE4NodeEEEEEE10deallocateERSD_PSC_m(%"class.std::__1::__wrap_iter.205"* nonnull %321) #17
  br label %324

324:                                              ; preds = %323, %320, %11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc void @_ZNSt3__116allocator_traitsIN4base8internal17MetadataAllocatorINS_11__wrap_iterIPNS2_15RacefulWorklistINS2_12_GLOBAL__N_114PCScanSnapshot13LargeScanAreaEE4NodeEEEEEE10deallocateERSD_PSC_m(%"class.std::__1::__wrap_iter.205"*) unnamed_addr #3 align 2 {
  %2 = alloca %"struct.base::internal::DeferredUnmap", align 8
  %3 = tail call dereferenceable(5408) %"struct.base::PartitionRoot"* @_ZN4base8internal23PCScanMetadataAllocatorEv() #17
  %4 = bitcast %"class.std::__1::__wrap_iter.205"* %0 to i8*
  %5 = icmp eq %"class.std::__1::__wrap_iter.205"* %0, null
  br i1 %5, label %239, label %6, !prof !7

6:                                                ; preds = %1
  tail call void @llvm.prefetch(i8* nonnull %4, i32 0, i32 3, i32 1) #17
  %7 = ptrtoint %"class.std::__1::__wrap_iter.205"* %0 to i64
  %8 = and i64 %7, -2097152
  %9 = or i64 %8, 4096
  %10 = inttoptr i64 %9 to i8*
  %11 = lshr i64 %7, 9
  %12 = and i64 %11, 4064
  %13 = getelementptr inbounds i8, i8* %10, i64 %12
  %14 = bitcast i8* %13 to %"struct.base::internal::PartitionPage"*
  %15 = getelementptr inbounds i8, i8* %13, i64 30
  %16 = load i8, i8* %15, align 2
  %17 = zext i8 %16 to i64
  %18 = sub nsw i64 0, %17
  %19 = getelementptr inbounds %"struct.base::internal::PartitionPage", %"struct.base::internal::PartitionPage"* %14, i64 %18, i32 0
  %20 = bitcast %union.anon.123* %19 to %"struct.base::internal::SlotSpanMetadata"*
  %21 = bitcast %union.anon.123* %19 to i8*
  tail call void @llvm.prefetch(i8* %21, i32 0, i32 3, i32 1) #17
  %22 = ptrtoint %union.anon.123* %19 to i64
  %23 = and i64 %22, -4096
  %24 = inttoptr i64 %23 to %"struct.base::internal::PartitionSuperPageExtentEntry"*
  %25 = getelementptr inbounds %"struct.base::internal::PartitionSuperPageExtentEntry", %"struct.base::internal::PartitionSuperPageExtentEntry"* %24, i64 0, i32 0
  %26 = load %"struct.base::PartitionRoot"*, %"struct.base::PartitionRoot"** %25, align 4096
  %27 = getelementptr inbounds %"struct.base::PartitionRoot", %"struct.base::PartitionRoot"* %26, i64 0, i32 0
  %28 = load i8, i8* %27, align 8
  %29 = icmp eq i8 %28, 2
  br i1 %29, label %30, label %99, !prof !7

30:                                               ; preds = %6
  %31 = load atomic i8, i8* getelementptr inbounds (%"class.base::internal::PCScan", %"class.base::internal::PCScan"* @_ZN4base8internal6PCScan9instance_E, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0) acquire, align 8
  %32 = icmp eq i8 %31, 2
  br i1 %32, label %33, label %34, !prof !7

33:                                               ; preds = %30
  tail call void @_ZN4base8internal6PCScan8JoinScanEv() #17
  br label %34

34:                                               ; preds = %33, %30
  %35 = getelementptr inbounds %"struct.base::internal::PartitionPage", %"struct.base::internal::PartitionPage"* %14, i64 %18, i32 0, i32 1, i64 8
  %36 = bitcast i8* %35 to %"struct.base::internal::PartitionBucket"**
  %37 = load %"struct.base::internal::PartitionBucket"*, %"struct.base::internal::PartitionBucket"** %36, align 1
  %38 = getelementptr inbounds %"struct.base::PartitionRoot", %"struct.base::PartitionRoot"* %26, i64 0, i32 10, i64 0
  %39 = icmp ugt %"struct.base::internal::PartitionBucket"* %38, %37
  %40 = getelementptr inbounds %"struct.base::PartitionRoot", %"struct.base::PartitionRoot"* %26, i64 0, i32 11
  %41 = icmp ult %"struct.base::internal::PartitionBucket"* %40, %37
  %42 = or i1 %39, %41
  br i1 %42, label %99, label %43, !prof !7

43:                                               ; preds = %34
  %44 = getelementptr inbounds %"struct.base::internal::PartitionPage", %"struct.base::internal::PartitionPage"* %14, i64 %18, i32 0, i32 1, i64 21
  %45 = load i8, i8* %44, align 1, !range !5
  %46 = icmp eq i8 %45, 0
  br i1 %46, label %47, label %51, !prof !6

47:                                               ; preds = %43
  %48 = getelementptr inbounds %"struct.base::internal::PartitionBucket", %"struct.base::internal::PartitionBucket"* %37, i64 0, i32 3
  %49 = load i32, i32* %48, align 8
  %50 = zext i32 %49 to i64
  br label %58

51:                                               ; preds = %43
  %52 = bitcast %union.anon.123* %19 to %"struct.base::internal::PartitionPage"*
  %53 = getelementptr inbounds %"struct.base::internal::PartitionPage", %"struct.base::internal::PartitionPage"* %52, i64 1, i32 0, i32 0, i32 0
  %54 = load i64, i64* %53, align 1
  %55 = getelementptr inbounds %"struct.base::internal::PartitionBucket", %"struct.base::internal::PartitionBucket"* %37, i64 0, i32 3
  %56 = load i32, i32* %55, align 8
  %57 = zext i32 %56 to i64
  br label %58

58:                                               ; preds = %51, %47
  %59 = phi i64 [ %50, %47 ], [ %57, %51 ]
  %60 = phi i64 [ %50, %47 ], [ %54, %51 ]
  %61 = load atomic i64, i64* getelementptr inbounds (%"class.base::internal::PCScan", %"class.base::internal::PCScan"* @_ZN4base8internal6PCScan9instance_E, i64 0, i32 0, i32 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 8
  %62 = inttoptr i64 %8 to i8*
  %63 = and i64 %61, 1
  %64 = icmp eq i64 %63, 0
  %65 = select i1 %64, i64 16384, i64 32768
  %66 = getelementptr inbounds i8, i8* %62, i64 %65
  %67 = bitcast i8* %66 to %"class.base::internal::ObjectBitmap"*
  %68 = lshr i64 %7, 4
  %69 = lshr i64 %7, 10
  %70 = and i64 %69, 2047
  %71 = and i64 %68, 63
  %72 = shl i64 1, %71
  %73 = getelementptr inbounds %"class.base::internal::ObjectBitmap", %"class.base::internal::ObjectBitmap"* %67, i64 0, i32 0, i32 0, i64 %70
  %74 = atomicrmw or i64* %73, i64 %72 monotonic
  %75 = and i64 %74, %72
  %76 = icmp eq i64 %75, 0
  br i1 %76, label %78, label %77, !prof !6

77:                                               ; preds = %58
  notail call void @_ZN4base8internal17DoubleFreeAttemptEv() #18
  unreachable

78:                                               ; preds = %58
  %79 = atomicrmw add i64* getelementptr inbounds (%"class.base::internal::PCScan", %"class.base::internal::PCScan"* @_ZN4base8internal6PCScan9instance_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0), i64 %59 monotonic
  %80 = add i64 %79, %59
  %81 = load atomic i64, i64* getelementptr inbounds (%"class.base::internal::PCScan", %"class.base::internal::PCScan"* @_ZN4base8internal6PCScan9instance_E, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 8
  %82 = icmp ugt i64 %80, %81
  br i1 %82, label %83, label %89

83:                                               ; preds = %78
  %84 = load %"class.base::internal::PCScanSchedulingBackend"*, %"class.base::internal::PCScanSchedulingBackend"** getelementptr inbounds (%"class.base::internal::PCScan", %"class.base::internal::PCScan"* @_ZN4base8internal6PCScan9instance_E, i64 0, i32 0, i32 2), align 8
  %85 = bitcast %"class.base::internal::PCScanSchedulingBackend"* %84 to i1 (%"class.base::internal::PCScanSchedulingBackend"*)***
  %86 = load i1 (%"class.base::internal::PCScanSchedulingBackend"*)**, i1 (%"class.base::internal::PCScanSchedulingBackend"*)*** %85, align 8
  %87 = load i1 (%"class.base::internal::PCScanSchedulingBackend"*)*, i1 (%"class.base::internal::PCScanSchedulingBackend"*)** %86, align 8
  %88 = tail call zeroext i1 %87(%"class.base::internal::PCScanSchedulingBackend"* %84) #17
  br label %89

89:                                               ; preds = %83, %78
  %90 = phi i1 [ false, %78 ], [ %88, %83 ]
  %91 = load i8, i8* getelementptr inbounds (%"class.base::internal::PCScan", %"class.base::internal::PCScan"* @_ZN4base8internal6PCScan9instance_E, i64 0, i32 2), align 1
  %92 = icmp eq i8 %91, 1
  br i1 %92, label %93, label %94

93:                                               ; preds = %89
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 1 %4, i8 0, i64 %60, i1 false) #17
  br label %94

94:                                               ; preds = %93, %89
  br i1 %90, label %95, label %239, !prof !7

95:                                               ; preds = %94
  %96 = load atomic i8, i8* getelementptr inbounds (%"class.base::internal::PCScan", %"class.base::internal::PCScan"* @_ZN4base8internal6PCScan9instance_E, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0) monotonic, align 8
  %97 = icmp eq i8 %96, 0
  br i1 %97, label %98, label %239

98:                                               ; preds = %95
  tail call void @_ZN4base8internal6PCScan11PerformScanENS1_14InvocationModeE(%"class.base::internal::PCScan"* nonnull @_ZN4base8internal6PCScan9instance_E, i32 1) #17
  br label %239

99:                                               ; preds = %34, %6
  %100 = getelementptr inbounds %"struct.base::PartitionRoot", %"struct.base::PartitionRoot"* %26, i64 0, i32 2
  %101 = load i8, i8* %100, align 2, !range !5
  %102 = icmp eq i8 %101, 0
  br i1 %102, label %171, label %103, !prof !7

103:                                              ; preds = %99
  %104 = getelementptr inbounds %"struct.base::internal::PartitionPage", %"struct.base::internal::PartitionPage"* %14, i64 %18, i32 0, i32 1, i64 8
  %105 = bitcast i8* %104 to %"struct.base::internal::PartitionBucket"**
  %106 = load %"struct.base::internal::PartitionBucket"*, %"struct.base::internal::PartitionBucket"** %105, align 1
  %107 = getelementptr inbounds %"struct.base::PartitionRoot", %"struct.base::PartitionRoot"* %26, i64 0, i32 10, i64 0
  %108 = icmp ule %"struct.base::internal::PartitionBucket"* %107, %106
  %109 = getelementptr inbounds %"struct.base::PartitionRoot", %"struct.base::PartitionRoot"* %26, i64 0, i32 11
  %110 = icmp uge %"struct.base::internal::PartitionBucket"* %109, %106
  %111 = and i1 %110, %108
  %112 = ptrtoint %"struct.base::internal::PartitionBucket"* %106 to i64
  br i1 %111, label %113, label %171, !prof !6

113:                                              ; preds = %103
  %114 = load i32, i32* @_ZN4base8internal18g_thread_cache_keyE, align 4
  %115 = tail call i8* @pthread_getspecific(i32 %114) #17
  %116 = bitcast i8* %115 to %"class.base::internal::ThreadCache"*
  %117 = icmp ugt i8* %115, inttoptr (i64 1 to i8*)
  br i1 %117, label %118, label %171, !prof !6

118:                                              ; preds = %113
  %119 = ptrtoint %"struct.base::internal::PartitionBucket"* %107 to i64
  %120 = sub i64 %112, %119
  %121 = sdiv exact i64 %120, 40
  %122 = getelementptr inbounds i8, i8* %115, i64 1480
  %123 = bitcast i8* %122 to i64*
  %124 = load i64, i64* %123, align 8
  %125 = add i64 %124, 1
  store i64 %125, i64* %123, align 8
  %126 = load i16, i16* @_ZN4base8internal11ThreadCache28largest_active_bucket_index_E, align 2
  %127 = zext i16 %126 to i64
  %128 = icmp ugt i64 %121, %127
  br i1 %128, label %129, label %134, !prof !7

129:                                              ; preds = %118
  %130 = getelementptr inbounds i8, i8* %115, i64 1496
  %131 = bitcast i8* %130 to i64*
  %132 = load i64, i64* %131, align 8
  %133 = add i64 %132, 1
  store i64 %133, i64* %131, align 8
  br label %171

134:                                              ; preds = %118
  %135 = getelementptr inbounds %"class.base::internal::ThreadCache", %"class.base::internal::ThreadCache"* %116, i64 0, i32 0, i64 %121
  %136 = bitcast %"struct.base::internal::ThreadCache::Bucket"* %135 to i64*
  %137 = load i64, i64* %136, align 8
  %138 = tail call i64 @llvm.bswap.i64(i64 %137) #17
  %139 = inttoptr i64 %138 to %"struct.base::internal::EncodedPartitionFreelistEntry"*
  %140 = bitcast %"class.std::__1::__wrap_iter.205"* %0 to %"struct.base::internal::EncodedPartitionFreelistEntry"**
  store %"struct.base::internal::EncodedPartitionFreelistEntry"* %139, %"struct.base::internal::EncodedPartitionFreelistEntry"** %140, align 8
  %141 = xor i64 %138, -1
  %142 = getelementptr inbounds %"class.std::__1::__wrap_iter.205", %"class.std::__1::__wrap_iter.205"* %0, i64 1
  %143 = bitcast %"class.std::__1::__wrap_iter.205"* %142 to i64*
  store i64 %141, i64* %143, align 8
  %144 = bitcast %"struct.base::internal::ThreadCache::Bucket"* %135 to %"class.std::__1::__wrap_iter.205"**
  store %"class.std::__1::__wrap_iter.205"* %0, %"class.std::__1::__wrap_iter.205"** %144, align 8
  %145 = getelementptr inbounds %"class.base::internal::ThreadCache", %"class.base::internal::ThreadCache"* %116, i64 0, i32 0, i64 %121, i32 1
  %146 = load i8, i8* %145, align 8
  %147 = add i8 %146, 1
  store i8 %147, i8* %145, align 8
  %148 = getelementptr inbounds %"class.base::internal::ThreadCache", %"class.base::internal::ThreadCache"* %116, i64 0, i32 0, i64 %121, i32 3
  %149 = load i16, i16* %148, align 2
  %150 = zext i16 %149 to i64
  %151 = getelementptr inbounds i8, i8* %115, i64 1424
  %152 = bitcast i8* %151 to i64*
  %153 = load i64, i64* %152, align 8
  %154 = add i64 %153, %150
  store i64 %154, i64* %152, align 8
  %155 = getelementptr inbounds i8, i8* %115, i64 1488
  %156 = bitcast i8* %155 to i64*
  %157 = load i64, i64* %156, align 8
  %158 = add i64 %157, 1
  store i64 %158, i64* %156, align 8
  %159 = getelementptr inbounds %"class.base::internal::ThreadCache", %"class.base::internal::ThreadCache"* %116, i64 0, i32 0, i64 %121, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %160 = load atomic i8, i8* %159 monotonic, align 1
  %161 = icmp ugt i8 %147, %160
  br i1 %161, label %162, label %165, !prof !7

162:                                              ; preds = %134
  %163 = lshr i8 %160, 1
  %164 = zext i8 %163 to i64
  tail call void @_ZN4base8internal11ThreadCache11ClearBucketERNS1_6BucketEm(%"class.base::internal::ThreadCache"* %116, %"struct.base::internal::ThreadCache::Bucket"* dereferenceable(16) %135, i64 %164) #17
  br label %165

165:                                              ; preds = %162, %134
  %166 = getelementptr inbounds i8, i8* %115, i64 1432
  %167 = load atomic i8, i8* %166 monotonic, align 1
  %168 = and i8 %167, 1
  %169 = icmp eq i8 %168, 0
  br i1 %169, label %239, label %170, !prof !6

170:                                              ; preds = %165
  tail call void @_ZN4base8internal11ThreadCache13PurgeInternalEv(%"class.base::internal::ThreadCache"* %116) #17
  br label %239

171:                                              ; preds = %129, %113, %103, %99
  %172 = bitcast %"struct.base::internal::DeferredUnmap"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %172) #17
  %173 = getelementptr inbounds %"struct.base::internal::DeferredUnmap", %"struct.base::internal::DeferredUnmap"* %2, i64 0, i32 0
  %174 = getelementptr inbounds %"struct.base::internal::DeferredUnmap", %"struct.base::internal::DeferredUnmap"* %2, i64 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %172, i8 0, i64 16, i1 false) #17
  %175 = getelementptr inbounds %"struct.base::PartitionRoot", %"struct.base::PartitionRoot"* %26, i64 0, i32 8
  %176 = getelementptr inbounds %"class.base::internal::MaybeSpinLock", %"class.base::internal::MaybeSpinLock"* %175, i64 0, i32 0
  %177 = getelementptr inbounds %"class.base::internal::MaybeSpinLock", %"class.base::internal::MaybeSpinLock"* %175, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  br label %178

178:                                              ; preds = %190, %171
  %179 = phi i32 [ 0, %171 ], [ %191, %190 ]
  %180 = phi i32 [ 1, %171 ], [ %194, %190 ]
  %181 = load atomic i32, i32* %177 monotonic, align 4
  %182 = icmp eq i32 %181, 0
  br i1 %182, label %183, label %186, !prof !9

183:                                              ; preds = %178
  %184 = cmpxchg weak i32* %177, i32 0, i32 1 acquire monotonic
  %185 = extractvalue { i32, i1 } %184, 1
  br i1 %185, label %201, label %186, !prof !6

186:                                              ; preds = %183, %178
  %187 = icmp sgt i32 %180, 0
  br i1 %187, label %196, label %190

188:                                              ; preds = %196
  %189 = add i32 %180, %179
  br label %190

190:                                              ; preds = %188, %186
  %191 = phi i32 [ %179, %186 ], [ %189, %188 ]
  %192 = shl i32 %180, 1
  %193 = icmp slt i32 %192, 64
  %194 = select i1 %193, i32 %192, i32 64
  %195 = icmp slt i32 %191, 1000
  br i1 %195, label %178, label %200

196:                                              ; preds = %186, %196
  %197 = phi i32 [ %198, %196 ], [ 0, %186 ]
  tail call void asm sideeffect "pause", "~{dirflag},~{fpsr},~{flags}"() #17, !srcloc !10
  %198 = add nuw nsw i32 %197, 1
  %199 = icmp eq i32 %198, %180
  br i1 %199, label %188, label %196

200:                                              ; preds = %190
  tail call void @_ZN4base8internal13SpinningMutex8LockSlowEv(%"class.base::internal::SpinningMutex"* %176) #17
  br label %201

201:                                              ; preds = %183, %200
  %202 = bitcast %union.anon.123* %19 to i8**
  %203 = load i8*, i8** %202, align 1
  %204 = icmp eq i8* %203, %4
  br i1 %204, label %207, label %205, !prof !7

205:                                              ; preds = %201
  %206 = ptrtoint i8* %203 to i64
  br label %210

207:                                              ; preds = %201
  tail call void @_ZN7logging8RawCheckEPKc(i8* getelementptr inbounds ([105 x i8], [105 x i8]* @.str.15, i64 0, i64 0)) #17
  %208 = getelementptr inbounds %union.anon.123, %union.anon.123* %19, i64 0, i32 0, i32 0
  %209 = load i64, i64* %208, align 1
  br label %210

210:                                              ; preds = %207, %205
  %211 = phi i64 [ %206, %205 ], [ %209, %207 ]
  %212 = tail call i64 @llvm.bswap.i64(i64 %211) #17
  %213 = inttoptr i64 %212 to %"struct.base::internal::EncodedPartitionFreelistEntry"*
  %214 = bitcast %"class.std::__1::__wrap_iter.205"* %0 to %"struct.base::internal::EncodedPartitionFreelistEntry"**
  store %"struct.base::internal::EncodedPartitionFreelistEntry"* %213, %"struct.base::internal::EncodedPartitionFreelistEntry"** %214, align 8
  %215 = xor i64 %212, -1
  %216 = getelementptr inbounds %"class.std::__1::__wrap_iter.205", %"class.std::__1::__wrap_iter.205"* %0, i64 1
  %217 = bitcast %"class.std::__1::__wrap_iter.205"* %216 to i64*
  store i64 %215, i64* %217, align 8
  %218 = bitcast %union.anon.123* %19 to %"class.std::__1::__wrap_iter.205"**
  store %"class.std::__1::__wrap_iter.205"* %0, %"class.std::__1::__wrap_iter.205"** %218, align 1
  %219 = getelementptr inbounds %"struct.base::internal::PartitionPage", %"struct.base::internal::PartitionPage"* %14, i64 %18, i32 0, i32 1, i64 16
  %220 = bitcast i8* %219 to i16*
  %221 = load i16, i16* %220, align 1
  %222 = add i16 %221, -1
  store i16 %222, i16* %220, align 1
  %223 = icmp slt i16 %222, 1
  br i1 %223, label %224, label %228, !prof !7

224:                                              ; preds = %210
  %225 = tail call { i8*, i64 } @_ZN4base8internal16SlotSpanMetadataILb1EE12FreeSlowPathEv(%"struct.base::internal::SlotSpanMetadata"* %20) #17
  %226 = extractvalue { i8*, i64 } %225, 0
  %227 = extractvalue { i8*, i64 } %225, 1
  br label %228

228:                                              ; preds = %224, %210
  %229 = phi i8* [ %226, %224 ], [ null, %210 ]
  %230 = phi i64 [ %227, %224 ], [ 0, %210 ]
  store i8* %229, i8** %173, align 8
  store i64 %230, i64* %174, align 8
  %231 = atomicrmw xchg i32* %177, i32 0 release
  %232 = icmp eq i32 %231, 2
  br i1 %232, label %233, label %234, !prof !7

233:                                              ; preds = %228
  tail call void @_ZN4base8internal13SpinningMutex9FutexWakeEv(%"class.base::internal::SpinningMutex"* %176) #17
  br label %234

234:                                              ; preds = %233, %228
  %235 = load i8*, i8** %173, align 8
  %236 = icmp eq i8* %235, null
  br i1 %236, label %238, label %237, !prof !6

237:                                              ; preds = %234
  call void @_ZN4base8internal13DeferredUnmap5UnmapEv(%"struct.base::internal::DeferredUnmap"* nonnull %2) #17
  br label %238

238:                                              ; preds = %237, %234
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %172) #17
  br label %239

239:                                              ; preds = %1, %94, %95, %98, %165, %170, %238
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define internal fastcc void @_ZNSt3__16vectorINS_11__wrap_iterIPN4base8internal15RacefulWorklistINS3_12_GLOBAL__N_114PCScanSnapshot8ScanAreaEE4NodeEEENS3_17MetadataAllocatorISB_EEE9push_backERKSB_(%"class.std::__1::vector.215"*, %"class.std::__1::__wrap_iter.217"* nocapture readonly dereferenceable(8)) unnamed_addr #16 align 2 {
  %3 = alloca i8, align 1
  %4 = alloca i64, align 8
  %5 = getelementptr inbounds %"class.std::__1::vector.215", %"class.std::__1::vector.215"* %0, i64 0, i32 0, i32 1
  %6 = load %"class.std::__1::__wrap_iter.217"*, %"class.std::__1::__wrap_iter.217"** %5, align 8
  %7 = getelementptr inbounds %"class.std::__1::vector.215", %"class.std::__1::vector.215"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %8 = load %"class.std::__1::__wrap_iter.217"*, %"class.std::__1::__wrap_iter.217"** %7, align 8
  %9 = icmp eq %"class.std::__1::__wrap_iter.217"* %6, %8
  %10 = ptrtoint %"class.std::__1::__wrap_iter.217"* %8 to i64
  br i1 %9, label %18, label %11

11:                                               ; preds = %2
  %12 = bitcast %"class.std::__1::__wrap_iter.217"* %1 to i64*
  %13 = bitcast %"class.std::__1::__wrap_iter.217"* %6 to i64*
  %14 = load i64, i64* %12, align 8
  store i64 %14, i64* %13, align 8
  %15 = getelementptr inbounds %"class.std::__1::__wrap_iter.217", %"class.std::__1::__wrap_iter.217"* %6, i64 1
  %16 = ptrtoint %"class.std::__1::__wrap_iter.217"* %15 to i64
  %17 = bitcast %"class.std::__1::__wrap_iter.217"** %5 to i64*
  store i64 %16, i64* %17, align 8
  br label %324

18:                                               ; preds = %2
  %19 = ptrtoint %"class.std::__1::__wrap_iter.217"* %6 to i64
  %20 = bitcast %"class.std::__1::__wrap_iter.217"** %5 to i64*
  %21 = bitcast %"class.std::__1::vector.215"* %0 to i64*
  %22 = load i64, i64* %21, align 8
  %23 = sub i64 %19, %22
  %24 = ashr exact i64 %23, 3
  %25 = add nsw i64 %24, 1
  %26 = icmp ugt i64 %25, 2305843009213693951
  br i1 %26, label %27, label %29

27:                                               ; preds = %18
  %28 = bitcast %"class.std::__1::vector.215"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %28) #18
  unreachable

29:                                               ; preds = %18
  %30 = bitcast %"class.std::__1::__wrap_iter.217"** %7 to i64*
  %31 = sub i64 %10, %22
  %32 = ashr exact i64 %31, 3
  %33 = icmp ult i64 %32, 1152921504606846975
  br i1 %33, label %34, label %39

34:                                               ; preds = %29
  %35 = ashr exact i64 %31, 2
  %36 = icmp ult i64 %35, %25
  %37 = select i1 %36, i64 %25, i64 %35
  %38 = icmp eq i64 %37, 0
  br i1 %38, label %295, label %39

39:                                               ; preds = %34, %29
  %40 = phi i64 [ %37, %34 ], [ 2305843009213693951, %29 ]
  %41 = tail call dereferenceable(5408) %"struct.base::PartitionRoot"* @_ZN4base8internal23PCScanMetadataAllocatorEv() #17
  %42 = shl i64 %40, 3
  %43 = tail call i64 @llvm.ctlz.i64(i64 %42, i1 false) #17, !range !4
  %44 = sub nuw nsw i64 64, %43
  %45 = and i64 %44, 255
  %46 = getelementptr inbounds [65 x i8], [65 x i8]* @_ZN4base12_GLOBAL__N_116kOrderIndexShiftE, i64 0, i64 %45
  %47 = load i8, i8* %46, align 1
  %48 = zext i8 %47 to i64
  %49 = lshr i64 %42, %48
  %50 = and i64 %49, 7
  %51 = getelementptr inbounds [65 x i64], [65 x i64]* @_ZN4base12_GLOBAL__N_118kOrderSubIndexMaskE, i64 0, i64 %45
  %52 = load i64, i64* %51, align 8
  %53 = and i64 %52, %42
  %54 = shl nuw nsw i64 %45, 3
  %55 = or i64 %50, %54
  %56 = icmp ne i64 %53, 0
  %57 = zext i1 %56 to i64
  %58 = add nuw nsw i64 %55, %57
  %59 = getelementptr inbounds { [128 x i64], [521 x i16] }, { [128 x i64], [521 x i16] }* @_ZZN4base8internal17BucketIndexLookup8GetIndexEmE6lookup, i64 0, i32 1, i64 %58
  %60 = load i16, i16* %59, align 2
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %3) #17
  store i8 0, i8* %3, align 1
  %61 = bitcast i64* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %61) #17
  store i64 -6148914691236517206, i64* %4, align 8
  %62 = getelementptr inbounds %"struct.base::PartitionRoot", %"struct.base::PartitionRoot"* %41, i64 0, i32 0
  %63 = load i8, i8* %62, align 8
  %64 = icmp eq i8 %63, 2
  br i1 %64, label %65, label %69

65:                                               ; preds = %39
  %66 = load atomic i8, i8* getelementptr inbounds (%"class.base::internal::PCScan", %"class.base::internal::PCScan"* @_ZN4base8internal6PCScan9instance_E, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0) acquire, align 8
  %67 = icmp eq i8 %66, 2
  br i1 %67, label %68, label %69, !prof !7

68:                                               ; preds = %65
  tail call void @_ZN4base8internal6PCScan8JoinScanEv() #17
  br label %69

69:                                               ; preds = %68, %65, %39
  %70 = getelementptr inbounds %"struct.base::PartitionRoot", %"struct.base::PartitionRoot"* %41, i64 0, i32 2
  %71 = load i8, i8* %70, align 2, !range !5
  %72 = icmp eq i8 %71, 0
  br i1 %72, label %221, label %73, !prof !19

73:                                               ; preds = %69
  %74 = load i32, i32* @_ZN4base8internal18g_thread_cache_keyE, align 4
  %75 = tail call i8* @pthread_getspecific(i32 %74) #17
  %76 = bitcast i8* %75 to %"class.base::internal::ThreadCache"*
  %77 = icmp ugt i8* %75, inttoptr (i64 1 to i8*)
  br i1 %77, label %78, label %148, !prof !6

78:                                               ; preds = %73
  %79 = zext i16 %60 to i64
  %80 = getelementptr inbounds %"class.base::internal::ThreadCache", %"class.base::internal::ThreadCache"* %76, i64 0, i32 3, i32 12, i64 %79
  %81 = load i64, i64* %80, align 8
  %82 = add i64 %81, 1
  store i64 %82, i64* %80, align 8
  %83 = getelementptr inbounds i8, i8* %75, i64 1440
  %84 = bitcast i8* %83 to i64*
  %85 = load i64, i64* %84, align 8
  %86 = add i64 %85, 1
  store i64 %86, i64* %84, align 8
  %87 = load i16, i16* @_ZN4base8internal11ThreadCache28largest_active_bucket_index_E, align 2
  %88 = icmp ult i16 %87, %60
  br i1 %88, label %89, label %98, !prof !7

89:                                               ; preds = %78
  %90 = getelementptr inbounds i8, i8* %75, i64 1472
  %91 = bitcast i8* %90 to i64*
  %92 = load i64, i64* %91, align 8
  %93 = add i64 %92, 1
  store i64 %93, i64* %91, align 8
  %94 = getelementptr inbounds i8, i8* %75, i64 1456
  %95 = bitcast i8* %94 to i64*
  %96 = load i64, i64* %95, align 8
  %97 = add i64 %96, 1
  store i64 %97, i64* %95, align 8
  br label %155

98:                                               ; preds = %78
  %99 = getelementptr inbounds %"class.base::internal::ThreadCache", %"class.base::internal::ThreadCache"* %76, i64 0, i32 0, i64 %79, i32 0
  %100 = load %"class.base::internal::PartitionFreelistEntry"*, %"class.base::internal::PartitionFreelistEntry"** %99, align 8
  %101 = icmp eq %"class.base::internal::PartitionFreelistEntry"* %100, null
  br i1 %101, label %107, label %102, !prof !7

102:                                              ; preds = %98
  %103 = getelementptr inbounds i8, i8* %75, i64 1448
  %104 = bitcast i8* %103 to i64*
  %105 = load i64, i64* %104, align 8
  %106 = add i64 %105, 1
  store i64 %106, i64* %104, align 8
  br label %115

107:                                              ; preds = %98
  %108 = getelementptr inbounds i8, i8* %75, i64 1456
  %109 = bitcast i8* %108 to <2 x i64>*
  %110 = load <2 x i64>, <2 x i64>* %109, align 8
  %111 = add <2 x i64> %110, <i64 1, i64 1>
  %112 = bitcast i8* %108 to <2 x i64>*
  store <2 x i64> %111, <2 x i64>* %112, align 8
  tail call void @_ZN4base8internal11ThreadCache10FillBucketEm(%"class.base::internal::ThreadCache"* %76, i64 %79) #17
  %113 = load %"class.base::internal::PartitionFreelistEntry"*, %"class.base::internal::PartitionFreelistEntry"** %99, align 8
  %114 = icmp eq %"class.base::internal::PartitionFreelistEntry"* %113, null
  br i1 %114, label %155, label %115, !prof !7

115:                                              ; preds = %107, %102
  %116 = phi %"class.base::internal::PartitionFreelistEntry"* [ %113, %107 ], [ %100, %102 ]
  %117 = getelementptr inbounds %"class.base::internal::PartitionFreelistEntry", %"class.base::internal::PartitionFreelistEntry"* %116, i64 0, i32 0
  %118 = load %"struct.base::internal::EncodedPartitionFreelistEntry"*, %"struct.base::internal::EncodedPartitionFreelistEntry"** %117, align 8
  %119 = icmp eq %"struct.base::internal::EncodedPartitionFreelistEntry"* %118, null
  %120 = ptrtoint %"struct.base::internal::EncodedPartitionFreelistEntry"* %118 to i64
  br i1 %119, label %121, label %123

121:                                              ; preds = %115
  %122 = tail call i64 @llvm.bswap.i64(i64 %120) #17
  br label %132

123:                                              ; preds = %115
  %124 = xor i64 %120, -1
  %125 = getelementptr inbounds %"class.base::internal::PartitionFreelistEntry", %"class.base::internal::PartitionFreelistEntry"* %116, i64 0, i32 1
  %126 = load i64, i64* %125, align 8
  %127 = icmp eq i64 %126, %124
  br i1 %127, label %129, label %128, !prof !6

128:                                              ; preds = %123
  tail call fastcc void @_ZN4base8internal12_GLOBAL__N_126FreelistCorruptionDetectedEv() #18
  unreachable

129:                                              ; preds = %123
  %130 = tail call i64 @llvm.bswap.i64(i64 %120) #17
  %131 = inttoptr i64 %130 to i8*
  tail call void @llvm.prefetch(i8* nonnull %131, i32 0, i32 3, i32 1) #17
  br label %132

132:                                              ; preds = %129, %121
  %133 = phi i64 [ %122, %121 ], [ %130, %129 ]
  %134 = inttoptr i64 %133 to %"class.base::internal::PartitionFreelistEntry"*
  %135 = getelementptr inbounds %"class.base::internal::ThreadCache", %"class.base::internal::ThreadCache"* %76, i64 0, i32 0, i64 %79, i32 1
  %136 = load i8, i8* %135, align 8
  %137 = add i8 %136, -1
  store i8 %137, i8* %135, align 8
  store %"class.base::internal::PartitionFreelistEntry"* %134, %"class.base::internal::PartitionFreelistEntry"** %99, align 8
  %138 = getelementptr inbounds %"class.base::internal::ThreadCache", %"class.base::internal::ThreadCache"* %76, i64 0, i32 0, i64 %79, i32 3
  %139 = load i16, i16* %138, align 2
  %140 = zext i16 %139 to i64
  store i64 %140, i64* %4, align 8
  %141 = load i16, i16* %138, align 2
  %142 = zext i16 %141 to i64
  %143 = getelementptr inbounds i8, i8* %75, i64 1424
  %144 = bitcast i8* %143 to i64*
  %145 = load i64, i64* %144, align 8
  %146 = sub i64 %145, %142
  store i64 %146, i64* %144, align 8
  %147 = bitcast %"class.base::internal::PartitionFreelistEntry"* %116 to i8*
  br label %150

148:                                              ; preds = %73
  %149 = call i8* @_ZN4base13PartitionRootILb1EE28MaybeInitThreadCacheAndAllocEtPm(%"struct.base::PartitionRoot"* %41, i16 zeroext %60, i64* nonnull %4) #17
  br label %150

150:                                              ; preds = %148, %132
  %151 = phi i8* [ %149, %148 ], [ %147, %132 ]
  %152 = icmp eq i8* %151, null
  br i1 %152, label %153, label %290, !prof !7

153:                                              ; preds = %150
  %154 = zext i16 %60 to i64
  br label %155

155:                                              ; preds = %153, %107, %89
  %156 = phi i64 [ %154, %153 ], [ %79, %107 ], [ %79, %89 ]
  %157 = getelementptr inbounds %"struct.base::PartitionRoot", %"struct.base::PartitionRoot"* %41, i64 0, i32 10, i64 %156
  %158 = getelementptr inbounds %"struct.base::PartitionRoot", %"struct.base::PartitionRoot"* %41, i64 0, i32 8
  %159 = getelementptr inbounds %"class.base::internal::MaybeSpinLock", %"class.base::internal::MaybeSpinLock"* %158, i64 0, i32 0
  %160 = getelementptr inbounds %"class.base::internal::MaybeSpinLock", %"class.base::internal::MaybeSpinLock"* %158, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  br label %161

161:                                              ; preds = %173, %155
  %162 = phi i32 [ 0, %155 ], [ %174, %173 ]
  %163 = phi i32 [ 1, %155 ], [ %177, %173 ]
  %164 = load atomic i32, i32* %160 monotonic, align 4
  %165 = icmp eq i32 %164, 0
  br i1 %165, label %166, label %169, !prof !9

166:                                              ; preds = %161
  %167 = cmpxchg weak i32* %160, i32 0, i32 1 acquire monotonic
  %168 = extractvalue { i32, i1 } %167, 1
  br i1 %168, label %184, label %169, !prof !6

169:                                              ; preds = %166, %161
  %170 = icmp sgt i32 %163, 0
  br i1 %170, label %179, label %173

171:                                              ; preds = %179
  %172 = add i32 %163, %162
  br label %173

173:                                              ; preds = %171, %169
  %174 = phi i32 [ %162, %169 ], [ %172, %171 ]
  %175 = shl i32 %163, 1
  %176 = icmp slt i32 %175, 64
  %177 = select i1 %176, i32 %175, i32 64
  %178 = icmp slt i32 %174, 1000
  br i1 %178, label %161, label %183

179:                                              ; preds = %169, %179
  %180 = phi i32 [ %181, %179 ], [ 0, %169 ]
  call void asm sideeffect "pause", "~{dirflag},~{fpsr},~{flags}"() #17, !srcloc !10
  %181 = add nuw nsw i32 %180, 1
  %182 = icmp eq i32 %181, %163
  br i1 %182, label %171, label %179

183:                                              ; preds = %173
  call void @_ZN4base8internal13SpinningMutex8LockSlowEv(%"class.base::internal::SpinningMutex"* %159) #17
  br label %184

184:                                              ; preds = %166, %183
  %185 = getelementptr inbounds %"struct.base::internal::PartitionBucket", %"struct.base::internal::PartitionBucket"* %157, i64 0, i32 0
  %186 = load %"struct.base::internal::SlotSpanMetadata"*, %"struct.base::internal::SlotSpanMetadata"** %185, align 8
  %187 = bitcast %"struct.base::internal::SlotSpanMetadata"* %186 to i8**
  %188 = load i8*, i8** %187, align 1
  %189 = icmp eq i8* %188, null
  br i1 %189, label %214, label %190, !prof !7

190:                                              ; preds = %184
  %191 = getelementptr inbounds %"struct.base::internal::SlotSpanMetadata", %"struct.base::internal::SlotSpanMetadata"* %186, i64 0, i32 0
  store i8 0, i8* %3, align 1
  %192 = bitcast i8* %188 to %"struct.base::internal::EncodedPartitionFreelistEntry"**
  %193 = load %"struct.base::internal::EncodedPartitionFreelistEntry"*, %"struct.base::internal::EncodedPartitionFreelistEntry"** %192, align 8
  %194 = icmp eq %"struct.base::internal::EncodedPartitionFreelistEntry"* %193, null
  %195 = ptrtoint %"struct.base::internal::EncodedPartitionFreelistEntry"* %193 to i64
  br i1 %194, label %196, label %198

196:                                              ; preds = %190
  %197 = call i64 @llvm.bswap.i64(i64 %195) #17
  br label %208

198:                                              ; preds = %190
  %199 = xor i64 %195, -1
  %200 = getelementptr inbounds i8, i8* %188, i64 8
  %201 = bitcast i8* %200 to i64*
  %202 = load i64, i64* %201, align 8
  %203 = icmp eq i64 %202, %199
  br i1 %203, label %205, label %204, !prof !6

204:                                              ; preds = %198
  call fastcc void @_ZN4base8internal12_GLOBAL__N_126FreelistCorruptionDetectedEv() #18
  unreachable

205:                                              ; preds = %198
  %206 = call i64 @llvm.bswap.i64(i64 %195) #17
  %207 = inttoptr i64 %206 to i8*
  call void @llvm.prefetch(i8* nonnull %207, i32 0, i32 3, i32 1) #17
  br label %208

208:                                              ; preds = %205, %196
  %209 = phi i64 [ %197, %196 ], [ %206, %205 ]
  %210 = inttoptr i64 %209 to %"class.base::internal::PartitionFreelistEntry"*
  store %"class.base::internal::PartitionFreelistEntry"* %210, %"class.base::internal::PartitionFreelistEntry"** %191, align 1
  %211 = getelementptr inbounds %"struct.base::internal::SlotSpanMetadata", %"struct.base::internal::SlotSpanMetadata"* %186, i64 0, i32 3
  %212 = load i16, i16* %211, align 1
  %213 = add i16 %212, 1
  store i16 %213, i16* %211, align 1
  br label %216

214:                                              ; preds = %184
  %215 = call i8* @_ZN4base8internal15PartitionBucketILb1EE13SlowPathAllocEPNS_13PartitionRootILb1EEEimmPb(%"struct.base::internal::PartitionBucket"* %157, %"struct.base::PartitionRoot"* %41, i32 0, i64 %42, i64 16384, i8* nonnull %3) #17
  br label %216

216:                                              ; preds = %214, %208
  %217 = phi i8* [ %188, %208 ], [ %215, %214 ]
  %218 = atomicrmw xchg i32* %160, i32 0 release
  %219 = icmp eq i32 %218, 2
  br i1 %219, label %220, label %287, !prof !7

220:                                              ; preds = %216
  call void @_ZN4base8internal13SpinningMutex9FutexWakeEv(%"class.base::internal::SpinningMutex"* %159) #17
  br label %287

221:                                              ; preds = %69
  %222 = zext i16 %60 to i64
  %223 = getelementptr inbounds %"struct.base::PartitionRoot", %"struct.base::PartitionRoot"* %41, i64 0, i32 10, i64 %222
  %224 = getelementptr inbounds %"struct.base::PartitionRoot", %"struct.base::PartitionRoot"* %41, i64 0, i32 8
  %225 = getelementptr inbounds %"class.base::internal::MaybeSpinLock", %"class.base::internal::MaybeSpinLock"* %224, i64 0, i32 0
  %226 = getelementptr inbounds %"class.base::internal::MaybeSpinLock", %"class.base::internal::MaybeSpinLock"* %224, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  br label %227

227:                                              ; preds = %239, %221
  %228 = phi i32 [ 0, %221 ], [ %240, %239 ]
  %229 = phi i32 [ 1, %221 ], [ %243, %239 ]
  %230 = load atomic i32, i32* %226 monotonic, align 4
  %231 = icmp eq i32 %230, 0
  br i1 %231, label %232, label %235, !prof !9

232:                                              ; preds = %227
  %233 = cmpxchg weak i32* %226, i32 0, i32 1 acquire monotonic
  %234 = extractvalue { i32, i1 } %233, 1
  br i1 %234, label %250, label %235, !prof !6

235:                                              ; preds = %232, %227
  %236 = icmp sgt i32 %229, 0
  br i1 %236, label %245, label %239

237:                                              ; preds = %245
  %238 = add i32 %229, %228
  br label %239

239:                                              ; preds = %237, %235
  %240 = phi i32 [ %228, %235 ], [ %238, %237 ]
  %241 = shl i32 %229, 1
  %242 = icmp slt i32 %241, 64
  %243 = select i1 %242, i32 %241, i32 64
  %244 = icmp slt i32 %240, 1000
  br i1 %244, label %227, label %249

245:                                              ; preds = %235, %245
  %246 = phi i32 [ %247, %245 ], [ 0, %235 ]
  tail call void asm sideeffect "pause", "~{dirflag},~{fpsr},~{flags}"() #17, !srcloc !10
  %247 = add nuw nsw i32 %246, 1
  %248 = icmp eq i32 %247, %229
  br i1 %248, label %237, label %245

249:                                              ; preds = %239
  tail call void @_ZN4base8internal13SpinningMutex8LockSlowEv(%"class.base::internal::SpinningMutex"* %225) #17
  br label %250

250:                                              ; preds = %232, %249
  %251 = getelementptr inbounds %"struct.base::internal::PartitionBucket", %"struct.base::internal::PartitionBucket"* %223, i64 0, i32 0
  %252 = load %"struct.base::internal::SlotSpanMetadata"*, %"struct.base::internal::SlotSpanMetadata"** %251, align 8
  %253 = bitcast %"struct.base::internal::SlotSpanMetadata"* %252 to i8**
  %254 = load i8*, i8** %253, align 1
  %255 = icmp eq i8* %254, null
  br i1 %255, label %280, label %256, !prof !7

256:                                              ; preds = %250
  %257 = getelementptr inbounds %"struct.base::internal::SlotSpanMetadata", %"struct.base::internal::SlotSpanMetadata"* %252, i64 0, i32 0
  store i8 0, i8* %3, align 1
  %258 = bitcast i8* %254 to %"struct.base::internal::EncodedPartitionFreelistEntry"**
  %259 = load %"struct.base::internal::EncodedPartitionFreelistEntry"*, %"struct.base::internal::EncodedPartitionFreelistEntry"** %258, align 8
  %260 = icmp eq %"struct.base::internal::EncodedPartitionFreelistEntry"* %259, null
  %261 = ptrtoint %"struct.base::internal::EncodedPartitionFreelistEntry"* %259 to i64
  br i1 %260, label %262, label %264

262:                                              ; preds = %256
  %263 = tail call i64 @llvm.bswap.i64(i64 %261) #17
  br label %274

264:                                              ; preds = %256
  %265 = xor i64 %261, -1
  %266 = getelementptr inbounds i8, i8* %254, i64 8
  %267 = bitcast i8* %266 to i64*
  %268 = load i64, i64* %267, align 8
  %269 = icmp eq i64 %268, %265
  br i1 %269, label %271, label %270, !prof !6

270:                                              ; preds = %264
  tail call fastcc void @_ZN4base8internal12_GLOBAL__N_126FreelistCorruptionDetectedEv() #18
  unreachable

271:                                              ; preds = %264
  %272 = tail call i64 @llvm.bswap.i64(i64 %261) #17
  %273 = inttoptr i64 %272 to i8*
  tail call void @llvm.prefetch(i8* nonnull %273, i32 0, i32 3, i32 1) #17
  br label %274

274:                                              ; preds = %271, %262
  %275 = phi i64 [ %263, %262 ], [ %272, %271 ]
  %276 = inttoptr i64 %275 to %"class.base::internal::PartitionFreelistEntry"*
  store %"class.base::internal::PartitionFreelistEntry"* %276, %"class.base::internal::PartitionFreelistEntry"** %257, align 1
  %277 = getelementptr inbounds %"struct.base::internal::SlotSpanMetadata", %"struct.base::internal::SlotSpanMetadata"* %252, i64 0, i32 3
  %278 = load i16, i16* %277, align 1
  %279 = add i16 %278, 1
  store i16 %279, i16* %277, align 1
  br label %282

280:                                              ; preds = %250
  %281 = call i8* @_ZN4base8internal15PartitionBucketILb1EE13SlowPathAllocEPNS_13PartitionRootILb1EEEimmPb(%"struct.base::internal::PartitionBucket"* %223, %"struct.base::PartitionRoot"* %41, i32 0, i64 %42, i64 16384, i8* nonnull %3) #17
  br label %282

282:                                              ; preds = %280, %274
  %283 = phi i8* [ %254, %274 ], [ %281, %280 ]
  %284 = atomicrmw xchg i32* %226, i32 0 release
  %285 = icmp eq i32 %284, 2
  br i1 %285, label %286, label %287, !prof !7

286:                                              ; preds = %282
  call void @_ZN4base8internal13SpinningMutex9FutexWakeEv(%"class.base::internal::SpinningMutex"* %225) #17
  br label %287

287:                                              ; preds = %286, %282, %220, %216
  %288 = phi i8* [ %217, %216 ], [ %217, %220 ], [ %283, %282 ], [ %283, %286 ]
  %289 = icmp eq i8* %288, null
  br i1 %289, label %292, label %290, !prof !7

290:                                              ; preds = %287, %150
  %291 = phi i8* [ %288, %287 ], [ %151, %150 ]
  br label %292

292:                                              ; preds = %290, %287
  %293 = phi i8* [ null, %287 ], [ %291, %290 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %61) #17
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %3) #17
  %294 = bitcast i8* %293 to %"class.std::__1::__wrap_iter.217"*
  br label %295

295:                                              ; preds = %292, %34
  %296 = phi i64 [ %40, %292 ], [ 0, %34 ]
  %297 = phi %"class.std::__1::__wrap_iter.217"* [ %294, %292 ], [ null, %34 ]
  %298 = getelementptr inbounds %"class.std::__1::__wrap_iter.217", %"class.std::__1::__wrap_iter.217"* %297, i64 %24
  %299 = getelementptr inbounds %"class.std::__1::__wrap_iter.217", %"class.std::__1::__wrap_iter.217"* %297, i64 %296
  %300 = ptrtoint %"class.std::__1::__wrap_iter.217"* %299 to i64
  %301 = bitcast %"class.std::__1::__wrap_iter.217"* %1 to i64*
  %302 = bitcast %"class.std::__1::__wrap_iter.217"* %298 to i64*
  %303 = load i64, i64* %301, align 8
  store i64 %303, i64* %302, align 8
  %304 = getelementptr inbounds %"class.std::__1::__wrap_iter.217", %"class.std::__1::__wrap_iter.217"* %298, i64 1
  %305 = ptrtoint %"class.std::__1::__wrap_iter.217"* %304 to i64
  %306 = getelementptr inbounds %"class.std::__1::vector.215", %"class.std::__1::vector.215"* %0, i64 0, i32 0, i32 0
  %307 = load %"class.std::__1::__wrap_iter.217"*, %"class.std::__1::__wrap_iter.217"** %306, align 8
  %308 = load i64, i64* %20, align 8
  %309 = ptrtoint %"class.std::__1::__wrap_iter.217"* %307 to i64
  %310 = sub i64 %308, %309
  %311 = ashr exact i64 %310, 3
  %312 = sub nsw i64 0, %311
  %313 = getelementptr inbounds %"class.std::__1::__wrap_iter.217", %"class.std::__1::__wrap_iter.217"* %298, i64 %312
  %314 = ptrtoint %"class.std::__1::__wrap_iter.217"* %313 to i64
  %315 = icmp sgt i64 %310, 0
  br i1 %315, label %316, label %320

316:                                              ; preds = %295
  %317 = bitcast %"class.std::__1::__wrap_iter.217"* %313 to i8*
  %318 = bitcast %"class.std::__1::__wrap_iter.217"* %307 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %317, i8* align 8 %318, i64 %310, i1 false) #17
  %319 = load %"class.std::__1::__wrap_iter.217"*, %"class.std::__1::__wrap_iter.217"** %306, align 8
  br label %320

320:                                              ; preds = %316, %295
  %321 = phi %"class.std::__1::__wrap_iter.217"* [ %307, %295 ], [ %319, %316 ]
  store i64 %314, i64* %21, align 8
  store i64 %305, i64* %20, align 8
  store i64 %300, i64* %30, align 8
  %322 = icmp eq %"class.std::__1::__wrap_iter.217"* %321, null
  br i1 %322, label %324, label %323

323:                                              ; preds = %320
  call fastcc void @_ZNSt3__116allocator_traitsIN4base8internal17MetadataAllocatorINS_11__wrap_iterIPNS2_15RacefulWorklistINS2_12_GLOBAL__N_114PCScanSnapshot8ScanAreaEE4NodeEEEEEE10deallocateERSD_PSC_m(%"class.std::__1::__wrap_iter.217"* nonnull %321) #17
  br label %324

324:                                              ; preds = %323, %320, %11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc void @_ZNSt3__116allocator_traitsIN4base8internal17MetadataAllocatorINS_11__wrap_iterIPNS2_15RacefulWorklistINS2_12_GLOBAL__N_114PCScanSnapshot8ScanAreaEE4NodeEEEEEE10deallocateERSD_PSC_m(%"class.std::__1::__wrap_iter.217"*) unnamed_addr #3 align 2 {
  %2 = alloca %"struct.base::internal::DeferredUnmap", align 8
  %3 = tail call dereferenceable(5408) %"struct.base::PartitionRoot"* @_ZN4base8internal23PCScanMetadataAllocatorEv() #17
  %4 = bitcast %"class.std::__1::__wrap_iter.217"* %0 to i8*
  %5 = icmp eq %"class.std::__1::__wrap_iter.217"* %0, null
  br i1 %5, label %239, label %6, !prof !7

6:                                                ; preds = %1
  tail call void @llvm.prefetch(i8* nonnull %4, i32 0, i32 3, i32 1) #17
  %7 = ptrtoint %"class.std::__1::__wrap_iter.217"* %0 to i64
  %8 = and i64 %7, -2097152
  %9 = or i64 %8, 4096
  %10 = inttoptr i64 %9 to i8*
  %11 = lshr i64 %7, 9
  %12 = and i64 %11, 4064
  %13 = getelementptr inbounds i8, i8* %10, i64 %12
  %14 = bitcast i8* %13 to %"struct.base::internal::PartitionPage"*
  %15 = getelementptr inbounds i8, i8* %13, i64 30
  %16 = load i8, i8* %15, align 2
  %17 = zext i8 %16 to i64
  %18 = sub nsw i64 0, %17
  %19 = getelementptr inbounds %"struct.base::internal::PartitionPage", %"struct.base::internal::PartitionPage"* %14, i64 %18, i32 0
  %20 = bitcast %union.anon.123* %19 to %"struct.base::internal::SlotSpanMetadata"*
  %21 = bitcast %union.anon.123* %19 to i8*
  tail call void @llvm.prefetch(i8* %21, i32 0, i32 3, i32 1) #17
  %22 = ptrtoint %union.anon.123* %19 to i64
  %23 = and i64 %22, -4096
  %24 = inttoptr i64 %23 to %"struct.base::internal::PartitionSuperPageExtentEntry"*
  %25 = getelementptr inbounds %"struct.base::internal::PartitionSuperPageExtentEntry", %"struct.base::internal::PartitionSuperPageExtentEntry"* %24, i64 0, i32 0
  %26 = load %"struct.base::PartitionRoot"*, %"struct.base::PartitionRoot"** %25, align 4096
  %27 = getelementptr inbounds %"struct.base::PartitionRoot", %"struct.base::PartitionRoot"* %26, i64 0, i32 0
  %28 = load i8, i8* %27, align 8
  %29 = icmp eq i8 %28, 2
  br i1 %29, label %30, label %99, !prof !7

30:                                               ; preds = %6
  %31 = load atomic i8, i8* getelementptr inbounds (%"class.base::internal::PCScan", %"class.base::internal::PCScan"* @_ZN4base8internal6PCScan9instance_E, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0) acquire, align 8
  %32 = icmp eq i8 %31, 2
  br i1 %32, label %33, label %34, !prof !7

33:                                               ; preds = %30
  tail call void @_ZN4base8internal6PCScan8JoinScanEv() #17
  br label %34

34:                                               ; preds = %33, %30
  %35 = getelementptr inbounds %"struct.base::internal::PartitionPage", %"struct.base::internal::PartitionPage"* %14, i64 %18, i32 0, i32 1, i64 8
  %36 = bitcast i8* %35 to %"struct.base::internal::PartitionBucket"**
  %37 = load %"struct.base::internal::PartitionBucket"*, %"struct.base::internal::PartitionBucket"** %36, align 1
  %38 = getelementptr inbounds %"struct.base::PartitionRoot", %"struct.base::PartitionRoot"* %26, i64 0, i32 10, i64 0
  %39 = icmp ugt %"struct.base::internal::PartitionBucket"* %38, %37
  %40 = getelementptr inbounds %"struct.base::PartitionRoot", %"struct.base::PartitionRoot"* %26, i64 0, i32 11
  %41 = icmp ult %"struct.base::internal::PartitionBucket"* %40, %37
  %42 = or i1 %39, %41
  br i1 %42, label %99, label %43, !prof !7

43:                                               ; preds = %34
  %44 = getelementptr inbounds %"struct.base::internal::PartitionPage", %"struct.base::internal::PartitionPage"* %14, i64 %18, i32 0, i32 1, i64 21
  %45 = load i8, i8* %44, align 1, !range !5
  %46 = icmp eq i8 %45, 0
  br i1 %46, label %47, label %51, !prof !6

47:                                               ; preds = %43
  %48 = getelementptr inbounds %"struct.base::internal::PartitionBucket", %"struct.base::internal::PartitionBucket"* %37, i64 0, i32 3
  %49 = load i32, i32* %48, align 8
  %50 = zext i32 %49 to i64
  br label %58

51:                                               ; preds = %43
  %52 = bitcast %union.anon.123* %19 to %"struct.base::internal::PartitionPage"*
  %53 = getelementptr inbounds %"struct.base::internal::PartitionPage", %"struct.base::internal::PartitionPage"* %52, i64 1, i32 0, i32 0, i32 0
  %54 = load i64, i64* %53, align 1
  %55 = getelementptr inbounds %"struct.base::internal::PartitionBucket", %"struct.base::internal::PartitionBucket"* %37, i64 0, i32 3
  %56 = load i32, i32* %55, align 8
  %57 = zext i32 %56 to i64
  br label %58

58:                                               ; preds = %51, %47
  %59 = phi i64 [ %50, %47 ], [ %57, %51 ]
  %60 = phi i64 [ %50, %47 ], [ %54, %51 ]
  %61 = load atomic i64, i64* getelementptr inbounds (%"class.base::internal::PCScan", %"class.base::internal::PCScan"* @_ZN4base8internal6PCScan9instance_E, i64 0, i32 0, i32 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 8
  %62 = inttoptr i64 %8 to i8*
  %63 = and i64 %61, 1
  %64 = icmp eq i64 %63, 0
  %65 = select i1 %64, i64 16384, i64 32768
  %66 = getelementptr inbounds i8, i8* %62, i64 %65
  %67 = bitcast i8* %66 to %"class.base::internal::ObjectBitmap"*
  %68 = lshr i64 %7, 4
  %69 = lshr i64 %7, 10
  %70 = and i64 %69, 2047
  %71 = and i64 %68, 63
  %72 = shl i64 1, %71
  %73 = getelementptr inbounds %"class.base::internal::ObjectBitmap", %"class.base::internal::ObjectBitmap"* %67, i64 0, i32 0, i32 0, i64 %70
  %74 = atomicrmw or i64* %73, i64 %72 monotonic
  %75 = and i64 %74, %72
  %76 = icmp eq i64 %75, 0
  br i1 %76, label %78, label %77, !prof !6

77:                                               ; preds = %58
  notail call void @_ZN4base8internal17DoubleFreeAttemptEv() #18
  unreachable

78:                                               ; preds = %58
  %79 = atomicrmw add i64* getelementptr inbounds (%"class.base::internal::PCScan", %"class.base::internal::PCScan"* @_ZN4base8internal6PCScan9instance_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0), i64 %59 monotonic
  %80 = add i64 %79, %59
  %81 = load atomic i64, i64* getelementptr inbounds (%"class.base::internal::PCScan", %"class.base::internal::PCScan"* @_ZN4base8internal6PCScan9instance_E, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 8
  %82 = icmp ugt i64 %80, %81
  br i1 %82, label %83, label %89

83:                                               ; preds = %78
  %84 = load %"class.base::internal::PCScanSchedulingBackend"*, %"class.base::internal::PCScanSchedulingBackend"** getelementptr inbounds (%"class.base::internal::PCScan", %"class.base::internal::PCScan"* @_ZN4base8internal6PCScan9instance_E, i64 0, i32 0, i32 2), align 8
  %85 = bitcast %"class.base::internal::PCScanSchedulingBackend"* %84 to i1 (%"class.base::internal::PCScanSchedulingBackend"*)***
  %86 = load i1 (%"class.base::internal::PCScanSchedulingBackend"*)**, i1 (%"class.base::internal::PCScanSchedulingBackend"*)*** %85, align 8
  %87 = load i1 (%"class.base::internal::PCScanSchedulingBackend"*)*, i1 (%"class.base::internal::PCScanSchedulingBackend"*)** %86, align 8
  %88 = tail call zeroext i1 %87(%"class.base::internal::PCScanSchedulingBackend"* %84) #17
  br label %89

89:                                               ; preds = %83, %78
  %90 = phi i1 [ false, %78 ], [ %88, %83 ]
  %91 = load i8, i8* getelementptr inbounds (%"class.base::internal::PCScan", %"class.base::internal::PCScan"* @_ZN4base8internal6PCScan9instance_E, i64 0, i32 2), align 1
  %92 = icmp eq i8 %91, 1
  br i1 %92, label %93, label %94

93:                                               ; preds = %89
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 1 %4, i8 0, i64 %60, i1 false) #17
  br label %94

94:                                               ; preds = %93, %89
  br i1 %90, label %95, label %239, !prof !7

95:                                               ; preds = %94
  %96 = load atomic i8, i8* getelementptr inbounds (%"class.base::internal::PCScan", %"class.base::internal::PCScan"* @_ZN4base8internal6PCScan9instance_E, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0) monotonic, align 8
  %97 = icmp eq i8 %96, 0
  br i1 %97, label %98, label %239

98:                                               ; preds = %95
  tail call void @_ZN4base8internal6PCScan11PerformScanENS1_14InvocationModeE(%"class.base::internal::PCScan"* nonnull @_ZN4base8internal6PCScan9instance_E, i32 1) #17
  br label %239

99:                                               ; preds = %34, %6
  %100 = getelementptr inbounds %"struct.base::PartitionRoot", %"struct.base::PartitionRoot"* %26, i64 0, i32 2
  %101 = load i8, i8* %100, align 2, !range !5
  %102 = icmp eq i8 %101, 0
  br i1 %102, label %171, label %103, !prof !7

103:                                              ; preds = %99
  %104 = getelementptr inbounds %"struct.base::internal::PartitionPage", %"struct.base::internal::PartitionPage"* %14, i64 %18, i32 0, i32 1, i64 8
  %105 = bitcast i8* %104 to %"struct.base::internal::PartitionBucket"**
  %106 = load %"struct.base::internal::PartitionBucket"*, %"struct.base::internal::PartitionBucket"** %105, align 1
  %107 = getelementptr inbounds %"struct.base::PartitionRoot", %"struct.base::PartitionRoot"* %26, i64 0, i32 10, i64 0
  %108 = icmp ule %"struct.base::internal::PartitionBucket"* %107, %106
  %109 = getelementptr inbounds %"struct.base::PartitionRoot", %"struct.base::PartitionRoot"* %26, i64 0, i32 11
  %110 = icmp uge %"struct.base::internal::PartitionBucket"* %109, %106
  %111 = and i1 %110, %108
  %112 = ptrtoint %"struct.base::internal::PartitionBucket"* %106 to i64
  br i1 %111, label %113, label %171, !prof !6

113:                                              ; preds = %103
  %114 = load i32, i32* @_ZN4base8internal18g_thread_cache_keyE, align 4
  %115 = tail call i8* @pthread_getspecific(i32 %114) #17
  %116 = bitcast i8* %115 to %"class.base::internal::ThreadCache"*
  %117 = icmp ugt i8* %115, inttoptr (i64 1 to i8*)
  br i1 %117, label %118, label %171, !prof !6

118:                                              ; preds = %113
  %119 = ptrtoint %"struct.base::internal::PartitionBucket"* %107 to i64
  %120 = sub i64 %112, %119
  %121 = sdiv exact i64 %120, 40
  %122 = getelementptr inbounds i8, i8* %115, i64 1480
  %123 = bitcast i8* %122 to i64*
  %124 = load i64, i64* %123, align 8
  %125 = add i64 %124, 1
  store i64 %125, i64* %123, align 8
  %126 = load i16, i16* @_ZN4base8internal11ThreadCache28largest_active_bucket_index_E, align 2
  %127 = zext i16 %126 to i64
  %128 = icmp ugt i64 %121, %127
  br i1 %128, label %129, label %134, !prof !7

129:                                              ; preds = %118
  %130 = getelementptr inbounds i8, i8* %115, i64 1496
  %131 = bitcast i8* %130 to i64*
  %132 = load i64, i64* %131, align 8
  %133 = add i64 %132, 1
  store i64 %133, i64* %131, align 8
  br label %171

134:                                              ; preds = %118
  %135 = getelementptr inbounds %"class.base::internal::ThreadCache", %"class.base::internal::ThreadCache"* %116, i64 0, i32 0, i64 %121
  %136 = bitcast %"struct.base::internal::ThreadCache::Bucket"* %135 to i64*
  %137 = load i64, i64* %136, align 8
  %138 = tail call i64 @llvm.bswap.i64(i64 %137) #17
  %139 = inttoptr i64 %138 to %"struct.base::internal::EncodedPartitionFreelistEntry"*
  %140 = bitcast %"class.std::__1::__wrap_iter.217"* %0 to %"struct.base::internal::EncodedPartitionFreelistEntry"**
  store %"struct.base::internal::EncodedPartitionFreelistEntry"* %139, %"struct.base::internal::EncodedPartitionFreelistEntry"** %140, align 8
  %141 = xor i64 %138, -1
  %142 = getelementptr inbounds %"class.std::__1::__wrap_iter.217", %"class.std::__1::__wrap_iter.217"* %0, i64 1
  %143 = bitcast %"class.std::__1::__wrap_iter.217"* %142 to i64*
  store i64 %141, i64* %143, align 8
  %144 = bitcast %"struct.base::internal::ThreadCache::Bucket"* %135 to %"class.std::__1::__wrap_iter.217"**
  store %"class.std::__1::__wrap_iter.217"* %0, %"class.std::__1::__wrap_iter.217"** %144, align 8
  %145 = getelementptr inbounds %"class.base::internal::ThreadCache", %"class.base::internal::ThreadCache"* %116, i64 0, i32 0, i64 %121, i32 1
  %146 = load i8, i8* %145, align 8
  %147 = add i8 %146, 1
  store i8 %147, i8* %145, align 8
  %148 = getelementptr inbounds %"class.base::internal::ThreadCache", %"class.base::internal::ThreadCache"* %116, i64 0, i32 0, i64 %121, i32 3
  %149 = load i16, i16* %148, align 2
  %150 = zext i16 %149 to i64
  %151 = getelementptr inbounds i8, i8* %115, i64 1424
  %152 = bitcast i8* %151 to i64*
  %153 = load i64, i64* %152, align 8
  %154 = add i64 %153, %150
  store i64 %154, i64* %152, align 8
  %155 = getelementptr inbounds i8, i8* %115, i64 1488
  %156 = bitcast i8* %155 to i64*
  %157 = load i64, i64* %156, align 8
  %158 = add i64 %157, 1
  store i64 %158, i64* %156, align 8
  %159 = getelementptr inbounds %"class.base::internal::ThreadCache", %"class.base::internal::ThreadCache"* %116, i64 0, i32 0, i64 %121, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %160 = load atomic i8, i8* %159 monotonic, align 1
  %161 = icmp ugt i8 %147, %160
  br i1 %161, label %162, label %165, !prof !7

162:                                              ; preds = %134
  %163 = lshr i8 %160, 1
  %164 = zext i8 %163 to i64
  tail call void @_ZN4base8internal11ThreadCache11ClearBucketERNS1_6BucketEm(%"class.base::internal::ThreadCache"* %116, %"struct.base::internal::ThreadCache::Bucket"* dereferenceable(16) %135, i64 %164) #17
  br label %165

165:                                              ; preds = %162, %134
  %166 = getelementptr inbounds i8, i8* %115, i64 1432
  %167 = load atomic i8, i8* %166 monotonic, align 1
  %168 = and i8 %167, 1
  %169 = icmp eq i8 %168, 0
  br i1 %169, label %239, label %170, !prof !6

170:                                              ; preds = %165
  tail call void @_ZN4base8internal11ThreadCache13PurgeInternalEv(%"class.base::internal::ThreadCache"* %116) #17
  br label %239

171:                                              ; preds = %129, %113, %103, %99
  %172 = bitcast %"struct.base::internal::DeferredUnmap"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %172) #17
  %173 = getelementptr inbounds %"struct.base::internal::DeferredUnmap", %"struct.base::internal::DeferredUnmap"* %2, i64 0, i32 0
  %174 = getelementptr inbounds %"struct.base::internal::DeferredUnmap", %"struct.base::internal::DeferredUnmap"* %2, i64 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %172, i8 0, i64 16, i1 false) #17
  %175 = getelementptr inbounds %"struct.base::PartitionRoot", %"struct.base::PartitionRoot"* %26, i64 0, i32 8
  %176 = getelementptr inbounds %"class.base::internal::MaybeSpinLock", %"class.base::internal::MaybeSpinLock"* %175, i64 0, i32 0
  %177 = getelementptr inbounds %"class.base::internal::MaybeSpinLock", %"class.base::internal::MaybeSpinLock"* %175, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  br label %178

178:                                              ; preds = %190, %171
  %179 = phi i32 [ 0, %171 ], [ %191, %190 ]
  %180 = phi i32 [ 1, %171 ], [ %194, %190 ]
  %181 = load atomic i32, i32* %177 monotonic, align 4
  %182 = icmp eq i32 %181, 0
  br i1 %182, label %183, label %186, !prof !9

183:                                              ; preds = %178
  %184 = cmpxchg weak i32* %177, i32 0, i32 1 acquire monotonic
  %185 = extractvalue { i32, i1 } %184, 1
  br i1 %185, label %201, label %186, !prof !6

186:                                              ; preds = %183, %178
  %187 = icmp sgt i32 %180, 0
  br i1 %187, label %196, label %190

188:                                              ; preds = %196
  %189 = add i32 %180, %179
  br label %190

190:                                              ; preds = %188, %186
  %191 = phi i32 [ %179, %186 ], [ %189, %188 ]
  %192 = shl i32 %180, 1
  %193 = icmp slt i32 %192, 64
  %194 = select i1 %193, i32 %192, i32 64
  %195 = icmp slt i32 %191, 1000
  br i1 %195, label %178, label %200

196:                                              ; preds = %186, %196
  %197 = phi i32 [ %198, %196 ], [ 0, %186 ]
  tail call void asm sideeffect "pause", "~{dirflag},~{fpsr},~{flags}"() #17, !srcloc !10
  %198 = add nuw nsw i32 %197, 1
  %199 = icmp eq i32 %198, %180
  br i1 %199, label %188, label %196

200:                                              ; preds = %190
  tail call void @_ZN4base8internal13SpinningMutex8LockSlowEv(%"class.base::internal::SpinningMutex"* %176) #17
  br label %201

201:                                              ; preds = %183, %200
  %202 = bitcast %union.anon.123* %19 to i8**
  %203 = load i8*, i8** %202, align 1
  %204 = icmp eq i8* %203, %4
  br i1 %204, label %207, label %205, !prof !7

205:                                              ; preds = %201
  %206 = ptrtoint i8* %203 to i64
  br label %210

207:                                              ; preds = %201
  tail call void @_ZN7logging8RawCheckEPKc(i8* getelementptr inbounds ([105 x i8], [105 x i8]* @.str.15, i64 0, i64 0)) #17
  %208 = getelementptr inbounds %union.anon.123, %union.anon.123* %19, i64 0, i32 0, i32 0
  %209 = load i64, i64* %208, align 1
  br label %210

210:                                              ; preds = %207, %205
  %211 = phi i64 [ %206, %205 ], [ %209, %207 ]
  %212 = tail call i64 @llvm.bswap.i64(i64 %211) #17
  %213 = inttoptr i64 %212 to %"struct.base::internal::EncodedPartitionFreelistEntry"*
  %214 = bitcast %"class.std::__1::__wrap_iter.217"* %0 to %"struct.base::internal::EncodedPartitionFreelistEntry"**
  store %"struct.base::internal::EncodedPartitionFreelistEntry"* %213, %"struct.base::internal::EncodedPartitionFreelistEntry"** %214, align 8
  %215 = xor i64 %212, -1
  %216 = getelementptr inbounds %"class.std::__1::__wrap_iter.217", %"class.std::__1::__wrap_iter.217"* %0, i64 1
  %217 = bitcast %"class.std::__1::__wrap_iter.217"* %216 to i64*
  store i64 %215, i64* %217, align 8
  %218 = bitcast %union.anon.123* %19 to %"class.std::__1::__wrap_iter.217"**
  store %"class.std::__1::__wrap_iter.217"* %0, %"class.std::__1::__wrap_iter.217"** %218, align 1
  %219 = getelementptr inbounds %"struct.base::internal::PartitionPage", %"struct.base::internal::PartitionPage"* %14, i64 %18, i32 0, i32 1, i64 16
  %220 = bitcast i8* %219 to i16*
  %221 = load i16, i16* %220, align 1
  %222 = add i16 %221, -1
  store i16 %222, i16* %220, align 1
  %223 = icmp slt i16 %222, 1
  br i1 %223, label %224, label %228, !prof !7

224:                                              ; preds = %210
  %225 = tail call { i8*, i64 } @_ZN4base8internal16SlotSpanMetadataILb1EE12FreeSlowPathEv(%"struct.base::internal::SlotSpanMetadata"* %20) #17
  %226 = extractvalue { i8*, i64 } %225, 0
  %227 = extractvalue { i8*, i64 } %225, 1
  br label %228

228:                                              ; preds = %224, %210
  %229 = phi i8* [ %226, %224 ], [ null, %210 ]
  %230 = phi i64 [ %227, %224 ], [ 0, %210 ]
  store i8* %229, i8** %173, align 8
  store i64 %230, i64* %174, align 8
  %231 = atomicrmw xchg i32* %177, i32 0 release
  %232 = icmp eq i32 %231, 2
  br i1 %232, label %233, label %234, !prof !7

233:                                              ; preds = %228
  tail call void @_ZN4base8internal13SpinningMutex9FutexWakeEv(%"class.base::internal::SpinningMutex"* %176) #17
  br label %234

234:                                              ; preds = %233, %228
  %235 = load i8*, i8** %173, align 8
  %236 = icmp eq i8* %235, null
  br i1 %236, label %238, label %237, !prof !6

237:                                              ; preds = %234
  call void @_ZN4base8internal13DeferredUnmap5UnmapEv(%"struct.base::internal::DeferredUnmap"* nonnull %2) #17
  br label %238

238:                                              ; preds = %237, %234
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %172) #17
  br label %239

239:                                              ; preds = %1, %94, %95, %98, %165, %170, %238
  ret void
}

declare i64 @_ZN4base9TimeTicks3NowEv() local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.std::__1::__hash_node_base"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeIiNS_5arrayIN4base8internal14StatsCollector18DeferredTraceEventELm4EEEEENS_22__unordered_map_hasherIiS8_NS_4hashIiEENS_8equal_toIvEELb1EEENS_21__unordered_map_equalIiS8_SD_SB_Lb1EEENS4_17MetadataAllocatorIS8_EEE25__emplace_unique_key_argsIiJRKNS_21piecewise_construct_tENS_5tupleIJRKiEEENSO_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS8_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table"*, i32* dereferenceable(4), %"struct.std::__1::piecewise_construct_t"* dereferenceable(1), %"class.std::__1::tuple.231"* dereferenceable(8), %"class.std::__1::tuple.234"* dereferenceable(1)) local_unnamed_addr #3 comdat align 2 {
  %6 = load i32, i32* %1, align 4
  %7 = sext i32 %6 to i64
  %8 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %9 = load i64, i64* %8, align 8
  %10 = icmp eq i64 %9, 0
  br i1 %10, label %55, label %11

11:                                               ; preds = %5
  %12 = tail call i64 @llvm.ctpop.i64(i64 %9) #17, !range !4
  %13 = icmp ugt i64 %12, 1
  br i1 %13, label %17, label %14

14:                                               ; preds = %11
  %15 = add i64 %9, -1
  %16 = and i64 %15, %7
  br label %21

17:                                               ; preds = %11
  %18 = icmp ugt i64 %9, %7
  br i1 %18, label %21, label %19

19:                                               ; preds = %17
  %20 = urem i64 %7, %9
  br label %21

21:                                               ; preds = %14, %17, %19
  %22 = phi i64 [ %16, %14 ], [ %20, %19 ], [ %7, %17 ]
  %23 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %24 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %23, align 8
  %25 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %24, i64 %22
  %26 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %25, align 8
  %27 = icmp eq %"struct.std::__1::__hash_node_base"* %26, null
  br i1 %27, label %55, label %28

28:                                               ; preds = %21
  %29 = add i64 %9, -1
  br label %30

30:                                               ; preds = %28, %50
  %31 = phi %"struct.std::__1::__hash_node_base"* [ %33, %50 ], [ %26, %28 ]
  %32 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %31, i64 0, i32 0
  %33 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %32, align 8
  %34 = icmp eq %"struct.std::__1::__hash_node_base"* %33, null
  br i1 %34, label %55, label %35

35:                                               ; preds = %30
  %36 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %33, i64 1
  %37 = bitcast %"struct.std::__1::__hash_node_base"* %36 to i64*
  %38 = load i64, i64* %37, align 8
  %39 = icmp eq i64 %38, %7
  br i1 %39, label %50, label %40

40:                                               ; preds = %35
  br i1 %13, label %43, label %41

41:                                               ; preds = %40
  %42 = and i64 %38, %29
  br label %47

43:                                               ; preds = %40
  %44 = icmp ult i64 %38, %9
  br i1 %44, label %47, label %45

45:                                               ; preds = %43
  %46 = urem i64 %38, %9
  br label %47

47:                                               ; preds = %41, %43, %45
  %48 = phi i64 [ %42, %41 ], [ %46, %45 ], [ %38, %43 ]
  %49 = icmp eq i64 %48, %22
  br i1 %49, label %50, label %55

50:                                               ; preds = %35, %47
  %51 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %33, i64 2
  %52 = bitcast %"struct.std::__1::__hash_node_base"* %51 to i32*
  %53 = load i32, i32* %52, align 4
  %54 = icmp eq i32 %53, %6
  br i1 %54, label %147, label %30

55:                                               ; preds = %30, %47, %21, %5
  %56 = phi i64 [ %22, %21 ], [ -6148914691236517206, %5 ], [ %22, %47 ], [ %22, %30 ]
  %57 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 1
  %58 = bitcast %"class.std::__1::__compressed_pair.39"* %57 to %"class.base::internal::MetadataAllocator.42"*
  %59 = tail call %"struct.std::__1::__hash_node"* @_ZN4base8internal17MetadataAllocatorINSt3__111__hash_nodeINS2_17__hash_value_typeIiNS2_5arrayINS0_14StatsCollector18DeferredTraceEventELm4EEEEEPvEEE8allocateEm(%"class.base::internal::MetadataAllocator.42"* %58, i64 1) #17, !noalias !28
  %60 = getelementptr inbounds %"class.std::__1::tuple.231", %"class.std::__1::tuple.231"* %3, i64 0, i32 0, i32 0, i32 0
  %61 = load i32*, i32** %60, align 8, !noalias !28
  %62 = getelementptr inbounds %"struct.std::__1::__hash_node", %"struct.std::__1::__hash_node"* %59, i64 0, i32 2, i32 0, i32 0
  %63 = load i32, i32* %61, align 4, !noalias !28
  store i32 %63, i32* %62, align 8, !noalias !28
  %64 = getelementptr inbounds %"struct.std::__1::__hash_node", %"struct.std::__1::__hash_node"* %59, i64 0, i32 2, i32 0, i32 1
  %65 = bitcast %"struct.std::__1::array.227"* %64 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %65, i8 0, i64 64, i1 false) #17, !noalias !28
  %66 = getelementptr inbounds %"struct.std::__1::__hash_node", %"struct.std::__1::__hash_node"* %59, i64 0, i32 1
  store i64 %7, i64* %66, align 8, !noalias !28
  %67 = getelementptr inbounds %"struct.std::__1::__hash_node", %"struct.std::__1::__hash_node"* %59, i64 0, i32 0, i32 0
  store %"struct.std::__1::__hash_node_base"* null, %"struct.std::__1::__hash_node_base"** %67, align 8, !noalias !28
  %68 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 2, i32 0, i32 0
  %69 = load i64, i64* %68, align 8
  %70 = add i64 %69, 1
  %71 = uitofp i64 %70 to float
  %72 = uitofp i64 %9 to float
  %73 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 3, i32 0, i32 0
  %74 = load float, float* %73, align 4
  %75 = fmul float %74, %72
  %76 = fcmp olt float %75, %71
  %77 = or i1 %10, %76
  br i1 %77, label %78, label %101

78:                                               ; preds = %55
  %79 = shl i64 %9, 1
  %80 = icmp ult i64 %9, 3
  %81 = tail call i64 @llvm.ctpop.i64(i64 %9) #17, !range !4
  %82 = icmp ugt i64 %81, 1
  %83 = or i1 %80, %82
  %84 = zext i1 %83 to i64
  %85 = or i64 %79, %84
  %86 = fdiv float %71, %74
  %87 = tail call float @llvm.ceil.f32(float %86) #17
  %88 = fptoui float %87 to i64
  %89 = icmp ult i64 %85, %88
  %90 = select i1 %89, i64 %88, i64 %85
  tail call void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIiNS_5arrayIN4base8internal14StatsCollector18DeferredTraceEventELm4EEEEENS_22__unordered_map_hasherIiS8_NS_4hashIiEENS_8equal_toIvEELb1EEENS_21__unordered_map_equalIiS8_SD_SB_Lb1EEENS4_17MetadataAllocatorIS8_EEE6rehashEm(%"class.std::__1::__hash_table"* %0, i64 %90)
  %91 = load i64, i64* %8, align 8
  %92 = tail call i64 @llvm.ctpop.i64(i64 %91) #17, !range !4
  %93 = icmp ugt i64 %92, 1
  br i1 %93, label %97, label %94

94:                                               ; preds = %78
  %95 = add i64 %91, -1
  %96 = and i64 %95, %7
  br label %101

97:                                               ; preds = %78
  %98 = icmp ugt i64 %91, %7
  br i1 %98, label %101, label %99

99:                                               ; preds = %97
  %100 = urem i64 %7, %91
  br label %101

101:                                              ; preds = %99, %97, %94, %55
  %102 = phi i64 [ %9, %55 ], [ %91, %94 ], [ %91, %97 ], [ %91, %99 ]
  %103 = phi i64 [ %56, %55 ], [ %96, %94 ], [ %7, %97 ], [ %100, %99 ]
  %104 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %105 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %104, align 8
  %106 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %105, i64 %103
  %107 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %106, align 8
  %108 = icmp eq %"struct.std::__1::__hash_node_base"* %107, null
  br i1 %108, label %109, label %137

109:                                              ; preds = %101
  %110 = getelementptr inbounds %"class.std::__1::__compressed_pair.39", %"class.std::__1::__compressed_pair.39"* %57, i64 0, i32 0, i32 0
  %111 = getelementptr inbounds %"class.std::__1::__compressed_pair.39", %"class.std::__1::__compressed_pair.39"* %57, i64 0, i32 0, i32 0, i32 0
  %112 = bitcast %"class.std::__1::__compressed_pair.39"* %57 to i64*
  %113 = load i64, i64* %112, align 8
  %114 = bitcast %"struct.std::__1::__hash_node"* %59 to i64*
  store i64 %113, i64* %114, align 8
  %115 = getelementptr inbounds %"struct.std::__1::__hash_node", %"struct.std::__1::__hash_node"* %59, i64 0, i32 0
  store %"struct.std::__1::__hash_node_base"* %115, %"struct.std::__1::__hash_node_base"** %111, align 8
  %116 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %104, align 8
  %117 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %116, i64 %103
  store %"struct.std::__1::__hash_node_base"* %110, %"struct.std::__1::__hash_node_base"** %117, align 8
  %118 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %67, align 8
  %119 = icmp eq %"struct.std::__1::__hash_node_base"* %118, null
  br i1 %119, label %143, label %120

120:                                              ; preds = %109
  %121 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %118, i64 1
  %122 = bitcast %"struct.std::__1::__hash_node_base"* %121 to i64*
  %123 = load i64, i64* %122, align 8
  %124 = tail call i64 @llvm.ctpop.i64(i64 %102) #17, !range !4
  %125 = icmp ugt i64 %124, 1
  br i1 %125, label %129, label %126

126:                                              ; preds = %120
  %127 = add i64 %102, -1
  %128 = and i64 %123, %127
  br label %133

129:                                              ; preds = %120
  %130 = icmp ult i64 %123, %102
  br i1 %130, label %133, label %131

131:                                              ; preds = %129
  %132 = urem i64 %123, %102
  br label %133

133:                                              ; preds = %126, %129, %131
  %134 = phi i64 [ %128, %126 ], [ %132, %131 ], [ %123, %129 ]
  %135 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %104, align 8
  %136 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %135, i64 %134
  store %"struct.std::__1::__hash_node_base"* %115, %"struct.std::__1::__hash_node_base"** %136, align 8
  br label %143

137:                                              ; preds = %101
  %138 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %107, i64 0, i32 0
  %139 = bitcast %"struct.std::__1::__hash_node_base"* %107 to i64*
  %140 = load i64, i64* %139, align 8
  %141 = bitcast %"struct.std::__1::__hash_node"* %59 to i64*
  store i64 %140, i64* %141, align 8
  %142 = getelementptr inbounds %"struct.std::__1::__hash_node", %"struct.std::__1::__hash_node"* %59, i64 0, i32 0
  store %"struct.std::__1::__hash_node_base"* %142, %"struct.std::__1::__hash_node_base"** %138, align 8
  br label %143

143:                                              ; preds = %137, %133, %109
  %144 = getelementptr inbounds %"struct.std::__1::__hash_node", %"struct.std::__1::__hash_node"* %59, i64 0, i32 0
  %145 = load i64, i64* %68, align 8
  %146 = add i64 %145, 1
  store i64 %146, i64* %68, align 8
  br label %147

147:                                              ; preds = %50, %143
  %148 = phi i8 [ 1, %143 ], [ 0, %50 ]
  %149 = phi %"struct.std::__1::__hash_node_base"* [ %144, %143 ], [ %33, %50 ]
  %150 = insertvalue { %"struct.std::__1::__hash_node_base"*, i8 } undef, %"struct.std::__1::__hash_node_base"* %149, 0
  %151 = insertvalue { %"struct.std::__1::__hash_node_base"*, i8 } %150, i8 %148, 1
  ret { %"struct.std::__1::__hash_node_base"*, i8 } %151
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIiNS_5arrayIN4base8internal14StatsCollector18DeferredTraceEventELm4EEEEENS_22__unordered_map_hasherIiS8_NS_4hashIiEENS_8equal_toIvEELb1EEENS_21__unordered_map_equalIiS8_SD_SB_Lb1EEENS4_17MetadataAllocatorIS8_EEE6rehashEm(%"class.std::__1::__hash_table"*, i64) local_unnamed_addr #3 comdat align 2 {
  %3 = icmp eq i64 %1, 1
  br i1 %3, label %9, label %4

4:                                                ; preds = %2
  %5 = tail call i64 @llvm.ctpop.i64(i64 %1), !range !4
  %6 = icmp ugt i64 %5, 1
  br i1 %6, label %7, label %9

7:                                                ; preds = %4
  %8 = tail call i64 @_ZNSt3__112__next_primeEm(i64 %1) #17
  br label %9

9:                                                ; preds = %2, %4, %7
  %10 = phi i64 [ %8, %7 ], [ %1, %4 ], [ 2, %2 ]
  %11 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %12 = load i64, i64* %11, align 8
  %13 = icmp ugt i64 %10, %12
  br i1 %13, label %14, label %15

14:                                               ; preds = %9
  tail call void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIiNS_5arrayIN4base8internal14StatsCollector18DeferredTraceEventELm4EEEEENS_22__unordered_map_hasherIiS8_NS_4hashIiEENS_8equal_toIvEELb1EEENS_21__unordered_map_equalIiS8_SD_SB_Lb1EEENS4_17MetadataAllocatorIS8_EEE8__rehashEm(%"class.std::__1::__hash_table"* %0, i64 %10)
  br label %45

15:                                               ; preds = %9
  %16 = icmp ult i64 %10, %12
  br i1 %16, label %17, label %45

17:                                               ; preds = %15
  %18 = icmp ugt i64 %12, 2
  %19 = tail call i64 @llvm.ctpop.i64(i64 %12) #17, !range !4
  %20 = icmp ult i64 %19, 2
  %21 = and i1 %18, %20
  %22 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 2, i32 0, i32 0
  %23 = load i64, i64* %22, align 8
  %24 = uitofp i64 %23 to float
  %25 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 3, i32 0, i32 0
  %26 = load float, float* %25, align 4
  %27 = fdiv float %24, %26
  %28 = tail call float @llvm.ceil.f32(float %27) #17
  %29 = fptoui float %28 to i64
  br i1 %21, label %30, label %37

30:                                               ; preds = %17
  %31 = icmp ult i64 %29, 2
  br i1 %31, label %39, label %32

32:                                               ; preds = %30
  %33 = add i64 %29, -1
  %34 = tail call i64 @llvm.ctlz.i64(i64 %33, i1 true) #17, !range !4
  %35 = sub nuw nsw i64 64, %34
  %36 = shl i64 1, %35
  br label %39

37:                                               ; preds = %17
  %38 = tail call i64 @_ZNSt3__112__next_primeEm(i64 %29) #17
  br label %39

39:                                               ; preds = %32, %30, %37
  %40 = phi i64 [ %38, %37 ], [ %36, %32 ], [ %29, %30 ]
  %41 = icmp ult i64 %10, %40
  %42 = select i1 %41, i64 %40, i64 %10
  %43 = icmp ult i64 %42, %12
  br i1 %43, label %44, label %45

44:                                               ; preds = %39
  tail call void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIiNS_5arrayIN4base8internal14StatsCollector18DeferredTraceEventELm4EEEEENS_22__unordered_map_hasherIiS8_NS_4hashIiEENS_8equal_toIvEELb1EEENS_21__unordered_map_equalIiS8_SD_SB_Lb1EEENS4_17MetadataAllocatorIS8_EEE8__rehashEm(%"class.std::__1::__hash_table"* %0, i64 %42)
  br label %45

45:                                               ; preds = %15, %44, %39, %14
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.std::__1::__hash_node"* @_ZN4base8internal17MetadataAllocatorINSt3__111__hash_nodeINS2_17__hash_value_typeIiNS2_5arrayINS0_14StatsCollector18DeferredTraceEventELm4EEEEEPvEEE8allocateEm(%"class.base::internal::MetadataAllocator.42"*, i64) local_unnamed_addr #3 comdat align 2 {
  %3 = alloca i8, align 1
  %4 = alloca i64, align 8
  %5 = tail call dereferenceable(5408) %"struct.base::PartitionRoot"* @_ZN4base8internal23PCScanMetadataAllocatorEv() #17
  %6 = mul i64 %1, 88
  %7 = tail call i64 @llvm.ctlz.i64(i64 %6, i1 false) #17, !range !4
  %8 = sub nuw nsw i64 64, %7
  %9 = and i64 %8, 255
  %10 = getelementptr inbounds [65 x i8], [65 x i8]* @_ZN4base12_GLOBAL__N_116kOrderIndexShiftE, i64 0, i64 %9
  %11 = load i8, i8* %10, align 1
  %12 = zext i8 %11 to i64
  %13 = lshr i64 %6, %12
  %14 = and i64 %13, 7
  %15 = getelementptr inbounds [65 x i64], [65 x i64]* @_ZN4base12_GLOBAL__N_118kOrderSubIndexMaskE, i64 0, i64 %9
  %16 = load i64, i64* %15, align 8
  %17 = and i64 %16, %6
  %18 = shl nuw nsw i64 %9, 3
  %19 = or i64 %14, %18
  %20 = icmp ne i64 %17, 0
  %21 = zext i1 %20 to i64
  %22 = add nuw nsw i64 %19, %21
  %23 = getelementptr inbounds { [128 x i64], [521 x i16] }, { [128 x i64], [521 x i16] }* @_ZZN4base8internal17BucketIndexLookup8GetIndexEmE6lookup, i64 0, i32 1, i64 %22
  %24 = load i16, i16* %23, align 2
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %3) #17
  store i8 0, i8* %3, align 1
  %25 = bitcast i64* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %25) #17
  store i64 -6148914691236517206, i64* %4, align 8
  %26 = getelementptr inbounds %"struct.base::PartitionRoot", %"struct.base::PartitionRoot"* %5, i64 0, i32 0
  %27 = load i8, i8* %26, align 8
  %28 = icmp eq i8 %27, 2
  br i1 %28, label %29, label %33

29:                                               ; preds = %2
  %30 = load atomic i8, i8* getelementptr inbounds (%"class.base::internal::PCScan", %"class.base::internal::PCScan"* @_ZN4base8internal6PCScan9instance_E, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0) acquire, align 8
  %31 = icmp eq i8 %30, 2
  br i1 %31, label %32, label %33, !prof !7

32:                                               ; preds = %29
  tail call void @_ZN4base8internal6PCScan8JoinScanEv() #17
  br label %33

33:                                               ; preds = %32, %29, %2
  %34 = getelementptr inbounds %"struct.base::PartitionRoot", %"struct.base::PartitionRoot"* %5, i64 0, i32 2
  %35 = load i8, i8* %34, align 2, !range !5
  %36 = icmp eq i8 %35, 0
  br i1 %36, label %185, label %37, !prof !19

37:                                               ; preds = %33
  %38 = load i32, i32* @_ZN4base8internal18g_thread_cache_keyE, align 4
  %39 = tail call i8* @pthread_getspecific(i32 %38) #17
  %40 = bitcast i8* %39 to %"class.base::internal::ThreadCache"*
  %41 = icmp ugt i8* %39, inttoptr (i64 1 to i8*)
  br i1 %41, label %42, label %112, !prof !6

42:                                               ; preds = %37
  %43 = zext i16 %24 to i64
  %44 = getelementptr inbounds %"class.base::internal::ThreadCache", %"class.base::internal::ThreadCache"* %40, i64 0, i32 3, i32 12, i64 %43
  %45 = load i64, i64* %44, align 8
  %46 = add i64 %45, 1
  store i64 %46, i64* %44, align 8
  %47 = getelementptr inbounds i8, i8* %39, i64 1440
  %48 = bitcast i8* %47 to i64*
  %49 = load i64, i64* %48, align 8
  %50 = add i64 %49, 1
  store i64 %50, i64* %48, align 8
  %51 = load i16, i16* @_ZN4base8internal11ThreadCache28largest_active_bucket_index_E, align 2
  %52 = icmp ult i16 %51, %24
  br i1 %52, label %53, label %62, !prof !7

53:                                               ; preds = %42
  %54 = getelementptr inbounds i8, i8* %39, i64 1472
  %55 = bitcast i8* %54 to i64*
  %56 = load i64, i64* %55, align 8
  %57 = add i64 %56, 1
  store i64 %57, i64* %55, align 8
  %58 = getelementptr inbounds i8, i8* %39, i64 1456
  %59 = bitcast i8* %58 to i64*
  %60 = load i64, i64* %59, align 8
  %61 = add i64 %60, 1
  store i64 %61, i64* %59, align 8
  br label %119

62:                                               ; preds = %42
  %63 = getelementptr inbounds %"class.base::internal::ThreadCache", %"class.base::internal::ThreadCache"* %40, i64 0, i32 0, i64 %43, i32 0
  %64 = load %"class.base::internal::PartitionFreelistEntry"*, %"class.base::internal::PartitionFreelistEntry"** %63, align 8
  %65 = icmp eq %"class.base::internal::PartitionFreelistEntry"* %64, null
  br i1 %65, label %71, label %66, !prof !7

66:                                               ; preds = %62
  %67 = getelementptr inbounds i8, i8* %39, i64 1448
  %68 = bitcast i8* %67 to i64*
  %69 = load i64, i64* %68, align 8
  %70 = add i64 %69, 1
  store i64 %70, i64* %68, align 8
  br label %79

71:                                               ; preds = %62
  %72 = getelementptr inbounds i8, i8* %39, i64 1456
  %73 = bitcast i8* %72 to <2 x i64>*
  %74 = load <2 x i64>, <2 x i64>* %73, align 8
  %75 = add <2 x i64> %74, <i64 1, i64 1>
  %76 = bitcast i8* %72 to <2 x i64>*
  store <2 x i64> %75, <2 x i64>* %76, align 8
  tail call void @_ZN4base8internal11ThreadCache10FillBucketEm(%"class.base::internal::ThreadCache"* %40, i64 %43) #17
  %77 = load %"class.base::internal::PartitionFreelistEntry"*, %"class.base::internal::PartitionFreelistEntry"** %63, align 8
  %78 = icmp eq %"class.base::internal::PartitionFreelistEntry"* %77, null
  br i1 %78, label %119, label %79, !prof !7

79:                                               ; preds = %71, %66
  %80 = phi %"class.base::internal::PartitionFreelistEntry"* [ %77, %71 ], [ %64, %66 ]
  %81 = getelementptr inbounds %"class.base::internal::PartitionFreelistEntry", %"class.base::internal::PartitionFreelistEntry"* %80, i64 0, i32 0
  %82 = load %"struct.base::internal::EncodedPartitionFreelistEntry"*, %"struct.base::internal::EncodedPartitionFreelistEntry"** %81, align 8
  %83 = icmp eq %"struct.base::internal::EncodedPartitionFreelistEntry"* %82, null
  %84 = ptrtoint %"struct.base::internal::EncodedPartitionFreelistEntry"* %82 to i64
  br i1 %83, label %85, label %87

85:                                               ; preds = %79
  %86 = tail call i64 @llvm.bswap.i64(i64 %84) #17
  br label %96

87:                                               ; preds = %79
  %88 = xor i64 %84, -1
  %89 = getelementptr inbounds %"class.base::internal::PartitionFreelistEntry", %"class.base::internal::PartitionFreelistEntry"* %80, i64 0, i32 1
  %90 = load i64, i64* %89, align 8
  %91 = icmp eq i64 %90, %88
  br i1 %91, label %93, label %92, !prof !6

92:                                               ; preds = %87
  tail call fastcc void @_ZN4base8internal12_GLOBAL__N_126FreelistCorruptionDetectedEv() #18
  unreachable

93:                                               ; preds = %87
  %94 = tail call i64 @llvm.bswap.i64(i64 %84) #17
  %95 = inttoptr i64 %94 to i8*
  tail call void @llvm.prefetch(i8* nonnull %95, i32 0, i32 3, i32 1) #17
  br label %96

96:                                               ; preds = %93, %85
  %97 = phi i64 [ %86, %85 ], [ %94, %93 ]
  %98 = inttoptr i64 %97 to %"class.base::internal::PartitionFreelistEntry"*
  %99 = getelementptr inbounds %"class.base::internal::ThreadCache", %"class.base::internal::ThreadCache"* %40, i64 0, i32 0, i64 %43, i32 1
  %100 = load i8, i8* %99, align 8
  %101 = add i8 %100, -1
  store i8 %101, i8* %99, align 8
  store %"class.base::internal::PartitionFreelistEntry"* %98, %"class.base::internal::PartitionFreelistEntry"** %63, align 8
  %102 = getelementptr inbounds %"class.base::internal::ThreadCache", %"class.base::internal::ThreadCache"* %40, i64 0, i32 0, i64 %43, i32 3
  %103 = load i16, i16* %102, align 2
  %104 = zext i16 %103 to i64
  store i64 %104, i64* %4, align 8
  %105 = load i16, i16* %102, align 2
  %106 = zext i16 %105 to i64
  %107 = getelementptr inbounds i8, i8* %39, i64 1424
  %108 = bitcast i8* %107 to i64*
  %109 = load i64, i64* %108, align 8
  %110 = sub i64 %109, %106
  store i64 %110, i64* %108, align 8
  %111 = bitcast %"class.base::internal::PartitionFreelistEntry"* %80 to i8*
  br label %114

112:                                              ; preds = %37
  %113 = call i8* @_ZN4base13PartitionRootILb1EE28MaybeInitThreadCacheAndAllocEtPm(%"struct.base::PartitionRoot"* %5, i16 zeroext %24, i64* nonnull %4) #17
  br label %114

114:                                              ; preds = %112, %96
  %115 = phi i8* [ %113, %112 ], [ %111, %96 ]
  %116 = icmp eq i8* %115, null
  br i1 %116, label %117, label %254, !prof !7

117:                                              ; preds = %114
  %118 = zext i16 %24 to i64
  br label %119

119:                                              ; preds = %117, %71, %53
  %120 = phi i64 [ %118, %117 ], [ %43, %71 ], [ %43, %53 ]
  %121 = getelementptr inbounds %"struct.base::PartitionRoot", %"struct.base::PartitionRoot"* %5, i64 0, i32 10, i64 %120
  %122 = getelementptr inbounds %"struct.base::PartitionRoot", %"struct.base::PartitionRoot"* %5, i64 0, i32 8
  %123 = getelementptr inbounds %"class.base::internal::MaybeSpinLock", %"class.base::internal::MaybeSpinLock"* %122, i64 0, i32 0
  %124 = getelementptr inbounds %"class.base::internal::MaybeSpinLock", %"class.base::internal::MaybeSpinLock"* %122, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  br label %125

125:                                              ; preds = %137, %119
  %126 = phi i32 [ 0, %119 ], [ %138, %137 ]
  %127 = phi i32 [ 1, %119 ], [ %141, %137 ]
  %128 = load atomic i32, i32* %124 monotonic, align 4
  %129 = icmp eq i32 %128, 0
  br i1 %129, label %130, label %133, !prof !9

130:                                              ; preds = %125
  %131 = cmpxchg weak i32* %124, i32 0, i32 1 acquire monotonic
  %132 = extractvalue { i32, i1 } %131, 1
  br i1 %132, label %148, label %133, !prof !6

133:                                              ; preds = %130, %125
  %134 = icmp sgt i32 %127, 0
  br i1 %134, label %143, label %137

135:                                              ; preds = %143
  %136 = add i32 %127, %126
  br label %137

137:                                              ; preds = %135, %133
  %138 = phi i32 [ %126, %133 ], [ %136, %135 ]
  %139 = shl i32 %127, 1
  %140 = icmp slt i32 %139, 64
  %141 = select i1 %140, i32 %139, i32 64
  %142 = icmp slt i32 %138, 1000
  br i1 %142, label %125, label %147

143:                                              ; preds = %133, %143
  %144 = phi i32 [ %145, %143 ], [ 0, %133 ]
  call void asm sideeffect "pause", "~{dirflag},~{fpsr},~{flags}"() #17, !srcloc !10
  %145 = add nuw nsw i32 %144, 1
  %146 = icmp eq i32 %145, %127
  br i1 %146, label %135, label %143

147:                                              ; preds = %137
  call void @_ZN4base8internal13SpinningMutex8LockSlowEv(%"class.base::internal::SpinningMutex"* %123) #17
  br label %148

148:                                              ; preds = %130, %147
  %149 = getelementptr inbounds %"struct.base::internal::PartitionBucket", %"struct.base::internal::PartitionBucket"* %121, i64 0, i32 0
  %150 = load %"struct.base::internal::SlotSpanMetadata"*, %"struct.base::internal::SlotSpanMetadata"** %149, align 8
  %151 = bitcast %"struct.base::internal::SlotSpanMetadata"* %150 to i8**
  %152 = load i8*, i8** %151, align 1
  %153 = icmp eq i8* %152, null
  br i1 %153, label %178, label %154, !prof !7

154:                                              ; preds = %148
  %155 = getelementptr inbounds %"struct.base::internal::SlotSpanMetadata", %"struct.base::internal::SlotSpanMetadata"* %150, i64 0, i32 0
  store i8 0, i8* %3, align 1
  %156 = bitcast i8* %152 to %"struct.base::internal::EncodedPartitionFreelistEntry"**
  %157 = load %"struct.base::internal::EncodedPartitionFreelistEntry"*, %"struct.base::internal::EncodedPartitionFreelistEntry"** %156, align 8
  %158 = icmp eq %"struct.base::internal::EncodedPartitionFreelistEntry"* %157, null
  %159 = ptrtoint %"struct.base::internal::EncodedPartitionFreelistEntry"* %157 to i64
  br i1 %158, label %160, label %162

160:                                              ; preds = %154
  %161 = call i64 @llvm.bswap.i64(i64 %159) #17
  br label %172

162:                                              ; preds = %154
  %163 = xor i64 %159, -1
  %164 = getelementptr inbounds i8, i8* %152, i64 8
  %165 = bitcast i8* %164 to i64*
  %166 = load i64, i64* %165, align 8
  %167 = icmp eq i64 %166, %163
  br i1 %167, label %169, label %168, !prof !6

168:                                              ; preds = %162
  call fastcc void @_ZN4base8internal12_GLOBAL__N_126FreelistCorruptionDetectedEv() #18
  unreachable

169:                                              ; preds = %162
  %170 = call i64 @llvm.bswap.i64(i64 %159) #17
  %171 = inttoptr i64 %170 to i8*
  call void @llvm.prefetch(i8* nonnull %171, i32 0, i32 3, i32 1) #17
  br label %172

172:                                              ; preds = %169, %160
  %173 = phi i64 [ %161, %160 ], [ %170, %169 ]
  %174 = inttoptr i64 %173 to %"class.base::internal::PartitionFreelistEntry"*
  store %"class.base::internal::PartitionFreelistEntry"* %174, %"class.base::internal::PartitionFreelistEntry"** %155, align 1
  %175 = getelementptr inbounds %"struct.base::internal::SlotSpanMetadata", %"struct.base::internal::SlotSpanMetadata"* %150, i64 0, i32 3
  %176 = load i16, i16* %175, align 1
  %177 = add i16 %176, 1
  store i16 %177, i16* %175, align 1
  br label %180

178:                                              ; preds = %148
  %179 = call i8* @_ZN4base8internal15PartitionBucketILb1EE13SlowPathAllocEPNS_13PartitionRootILb1EEEimmPb(%"struct.base::internal::PartitionBucket"* %121, %"struct.base::PartitionRoot"* %5, i32 0, i64 %6, i64 16384, i8* nonnull %3) #17
  br label %180

180:                                              ; preds = %178, %172
  %181 = phi i8* [ %152, %172 ], [ %179, %178 ]
  %182 = atomicrmw xchg i32* %124, i32 0 release
  %183 = icmp eq i32 %182, 2
  br i1 %183, label %184, label %251, !prof !7

184:                                              ; preds = %180
  call void @_ZN4base8internal13SpinningMutex9FutexWakeEv(%"class.base::internal::SpinningMutex"* %123) #17
  br label %251

185:                                              ; preds = %33
  %186 = zext i16 %24 to i64
  %187 = getelementptr inbounds %"struct.base::PartitionRoot", %"struct.base::PartitionRoot"* %5, i64 0, i32 10, i64 %186
  %188 = getelementptr inbounds %"struct.base::PartitionRoot", %"struct.base::PartitionRoot"* %5, i64 0, i32 8
  %189 = getelementptr inbounds %"class.base::internal::MaybeSpinLock", %"class.base::internal::MaybeSpinLock"* %188, i64 0, i32 0
  %190 = getelementptr inbounds %"class.base::internal::MaybeSpinLock", %"class.base::internal::MaybeSpinLock"* %188, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  br label %191

191:                                              ; preds = %203, %185
  %192 = phi i32 [ 0, %185 ], [ %204, %203 ]
  %193 = phi i32 [ 1, %185 ], [ %207, %203 ]
  %194 = load atomic i32, i32* %190 monotonic, align 4
  %195 = icmp eq i32 %194, 0
  br i1 %195, label %196, label %199, !prof !9

196:                                              ; preds = %191
  %197 = cmpxchg weak i32* %190, i32 0, i32 1 acquire monotonic
  %198 = extractvalue { i32, i1 } %197, 1
  br i1 %198, label %214, label %199, !prof !6

199:                                              ; preds = %196, %191
  %200 = icmp sgt i32 %193, 0
  br i1 %200, label %209, label %203

201:                                              ; preds = %209
  %202 = add i32 %193, %192
  br label %203

203:                                              ; preds = %201, %199
  %204 = phi i32 [ %192, %199 ], [ %202, %201 ]
  %205 = shl i32 %193, 1
  %206 = icmp slt i32 %205, 64
  %207 = select i1 %206, i32 %205, i32 64
  %208 = icmp slt i32 %204, 1000
  br i1 %208, label %191, label %213

209:                                              ; preds = %199, %209
  %210 = phi i32 [ %211, %209 ], [ 0, %199 ]
  tail call void asm sideeffect "pause", "~{dirflag},~{fpsr},~{flags}"() #17, !srcloc !10
  %211 = add nuw nsw i32 %210, 1
  %212 = icmp eq i32 %211, %193
  br i1 %212, label %201, label %209

213:                                              ; preds = %203
  tail call void @_ZN4base8internal13SpinningMutex8LockSlowEv(%"class.base::internal::SpinningMutex"* %189) #17
  br label %214

214:                                              ; preds = %196, %213
  %215 = getelementptr inbounds %"struct.base::internal::PartitionBucket", %"struct.base::internal::PartitionBucket"* %187, i64 0, i32 0
  %216 = load %"struct.base::internal::SlotSpanMetadata"*, %"struct.base::internal::SlotSpanMetadata"** %215, align 8
  %217 = bitcast %"struct.base::internal::SlotSpanMetadata"* %216 to i8**
  %218 = load i8*, i8** %217, align 1
  %219 = icmp eq i8* %218, null
  br i1 %219, label %244, label %220, !prof !7

220:                                              ; preds = %214
  %221 = getelementptr inbounds %"struct.base::internal::SlotSpanMetadata", %"struct.base::internal::SlotSpanMetadata"* %216, i64 0, i32 0
  store i8 0, i8* %3, align 1
  %222 = bitcast i8* %218 to %"struct.base::internal::EncodedPartitionFreelistEntry"**
  %223 = load %"struct.base::internal::EncodedPartitionFreelistEntry"*, %"struct.base::internal::EncodedPartitionFreelistEntry"** %222, align 8
  %224 = icmp eq %"struct.base::internal::EncodedPartitionFreelistEntry"* %223, null
  %225 = ptrtoint %"struct.base::internal::EncodedPartitionFreelistEntry"* %223 to i64
  br i1 %224, label %226, label %228

226:                                              ; preds = %220
  %227 = tail call i64 @llvm.bswap.i64(i64 %225) #17
  br label %238

228:                                              ; preds = %220
  %229 = xor i64 %225, -1
  %230 = getelementptr inbounds i8, i8* %218, i64 8
  %231 = bitcast i8* %230 to i64*
  %232 = load i64, i64* %231, align 8
  %233 = icmp eq i64 %232, %229
  br i1 %233, label %235, label %234, !prof !6

234:                                              ; preds = %228
  tail call fastcc void @_ZN4base8internal12_GLOBAL__N_126FreelistCorruptionDetectedEv() #18
  unreachable

235:                                              ; preds = %228
  %236 = tail call i64 @llvm.bswap.i64(i64 %225) #17
  %237 = inttoptr i64 %236 to i8*
  tail call void @llvm.prefetch(i8* nonnull %237, i32 0, i32 3, i32 1) #17
  br label %238

238:                                              ; preds = %235, %226
  %239 = phi i64 [ %227, %226 ], [ %236, %235 ]
  %240 = inttoptr i64 %239 to %"class.base::internal::PartitionFreelistEntry"*
  store %"class.base::internal::PartitionFreelistEntry"* %240, %"class.base::internal::PartitionFreelistEntry"** %221, align 1
  %241 = getelementptr inbounds %"struct.base::internal::SlotSpanMetadata", %"struct.base::internal::SlotSpanMetadata"* %216, i64 0, i32 3
  %242 = load i16, i16* %241, align 1
  %243 = add i16 %242, 1
  store i16 %243, i16* %241, align 1
  br label %246

244:                                              ; preds = %214
  %245 = call i8* @_ZN4base8internal15PartitionBucketILb1EE13SlowPathAllocEPNS_13PartitionRootILb1EEEimmPb(%"struct.base::internal::PartitionBucket"* %187, %"struct.base::PartitionRoot"* %5, i32 0, i64 %6, i64 16384, i8* nonnull %3) #17
  br label %246

246:                                              ; preds = %244, %238
  %247 = phi i8* [ %218, %238 ], [ %245, %244 ]
  %248 = atomicrmw xchg i32* %190, i32 0 release
  %249 = icmp eq i32 %248, 2
  br i1 %249, label %250, label %251, !prof !7

250:                                              ; preds = %246
  call void @_ZN4base8internal13SpinningMutex9FutexWakeEv(%"class.base::internal::SpinningMutex"* %189) #17
  br label %251

251:                                              ; preds = %250, %246, %184, %180
  %252 = phi i8* [ %181, %180 ], [ %181, %184 ], [ %247, %246 ], [ %247, %250 ]
  %253 = icmp eq i8* %252, null
  br i1 %253, label %256, label %254, !prof !7

254:                                              ; preds = %114, %251
  %255 = phi i8* [ %252, %251 ], [ %115, %114 ]
  br label %256

256:                                              ; preds = %251, %254
  %257 = phi i8* [ null, %251 ], [ %255, %254 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %25) #17
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %3) #17
  %258 = bitcast i8* %257 to %"struct.std::__1::__hash_node"*
  ret %"struct.std::__1::__hash_node"* %258
}

declare i64 @_ZNSt3__112__next_primeEm(i64) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIiNS_5arrayIN4base8internal14StatsCollector18DeferredTraceEventELm4EEEEENS_22__unordered_map_hasherIiS8_NS_4hashIiEENS_8equal_toIvEELb1EEENS_21__unordered_map_equalIiS8_SD_SB_Lb1EEENS4_17MetadataAllocatorIS8_EEE8__rehashEm(%"class.std::__1::__hash_table"*, i64) local_unnamed_addr #3 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 0, i32 0, i32 1, i32 0
  %4 = bitcast %"class.std::__1::__bucket_list_deallocator"* %3 to %"class.base::internal::MetadataAllocator.37"*
  %5 = icmp eq i64 %1, 0
  br i1 %5, label %131, label %6

6:                                                ; preds = %2
  %7 = tail call %"struct.std::__1::__hash_node_base"** @_ZN4base8internal17MetadataAllocatorIPNSt3__116__hash_node_baseIPNS2_11__hash_nodeINS2_17__hash_value_typeIiNS2_5arrayINS0_14StatsCollector18DeferredTraceEventELm4EEEEEPvEEEEE8allocateEm(%"class.base::internal::MetadataAllocator.37"* %4, i64 %1) #17
  %8 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %9 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %8, align 8
  store %"struct.std::__1::__hash_node_base"** %7, %"struct.std::__1::__hash_node_base"*** %8, align 8
  %10 = icmp eq %"struct.std::__1::__hash_node_base"** %9, null
  br i1 %10, label %14, label %11

11:                                               ; preds = %6
  %12 = getelementptr inbounds %"class.std::__1::__bucket_list_deallocator", %"class.std::__1::__bucket_list_deallocator"* %3, i64 0, i32 0, i32 0, i32 0
  %13 = load i64, i64* %12, align 8
  tail call void @_ZN4base8internal17MetadataAllocatorIPNSt3__116__hash_node_baseIPNS2_11__hash_nodeINS2_17__hash_value_typeIiNS2_5arrayINS0_14StatsCollector18DeferredTraceEventELm4EEEEEPvEEEEE10deallocateEPSF_m(%"class.base::internal::MetadataAllocator.37"* %4, %"struct.std::__1::__hash_node_base"** nonnull %9, i64 %13) #17
  br label %14

14:                                               ; preds = %11, %6
  %15 = getelementptr inbounds %"class.std::__1::__bucket_list_deallocator", %"class.std::__1::__bucket_list_deallocator"* %3, i64 0, i32 0, i32 0, i32 0
  store i64 %1, i64* %15, align 8
  %16 = add i64 %1, -1
  %17 = and i64 %1, 3
  %18 = icmp ult i64 %16, 3
  br i1 %18, label %21, label %19

19:                                               ; preds = %14
  %20 = sub i64 %1, %17
  br label %37

21:                                               ; preds = %37, %14
  %22 = phi i64 [ 0, %14 ], [ %51, %37 ]
  %23 = icmp eq i64 %17, 0
  br i1 %23, label %32, label %24

24:                                               ; preds = %21, %24
  %25 = phi i64 [ %29, %24 ], [ %22, %21 ]
  %26 = phi i64 [ %30, %24 ], [ %17, %21 ]
  %27 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %8, align 8
  %28 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %27, i64 %25
  store %"struct.std::__1::__hash_node_base"* null, %"struct.std::__1::__hash_node_base"** %28, align 8
  %29 = add nuw i64 %25, 1
  %30 = add i64 %26, -1
  %31 = icmp eq i64 %30, 0
  br i1 %31, label %32, label %24, !llvm.loop !31

32:                                               ; preds = %24, %21
  %33 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 1, i32 0, i32 0
  %34 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %33, i64 0, i32 0
  %35 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %34, align 8
  %36 = icmp eq %"struct.std::__1::__hash_node_base"* %35, null
  br i1 %36, label %140, label %54

37:                                               ; preds = %37, %19
  %38 = phi i64 [ 0, %19 ], [ %51, %37 ]
  %39 = phi i64 [ %20, %19 ], [ %52, %37 ]
  %40 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %8, align 8
  %41 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %40, i64 %38
  store %"struct.std::__1::__hash_node_base"* null, %"struct.std::__1::__hash_node_base"** %41, align 8
  %42 = or i64 %38, 1
  %43 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %8, align 8
  %44 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %43, i64 %42
  store %"struct.std::__1::__hash_node_base"* null, %"struct.std::__1::__hash_node_base"** %44, align 8
  %45 = or i64 %38, 2
  %46 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %8, align 8
  %47 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %46, i64 %45
  store %"struct.std::__1::__hash_node_base"* null, %"struct.std::__1::__hash_node_base"** %47, align 8
  %48 = or i64 %38, 3
  %49 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %8, align 8
  %50 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %49, i64 %48
  store %"struct.std::__1::__hash_node_base"* null, %"struct.std::__1::__hash_node_base"** %50, align 8
  %51 = add nuw i64 %38, 4
  %52 = add i64 %39, -4
  %53 = icmp eq i64 %52, 0
  br i1 %53, label %21, label %37

54:                                               ; preds = %32
  %55 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %35, i64 1
  %56 = bitcast %"struct.std::__1::__hash_node_base"* %55 to i64*
  %57 = load i64, i64* %56, align 8
  %58 = tail call i64 @llvm.ctpop.i64(i64 %1) #17, !range !4
  %59 = icmp ugt i64 %58, 1
  br i1 %59, label %63, label %60

60:                                               ; preds = %54
  %61 = add i64 %1, -1
  %62 = and i64 %57, %61
  br label %67

63:                                               ; preds = %54
  %64 = icmp ult i64 %57, %1
  br i1 %64, label %67, label %65

65:                                               ; preds = %63
  %66 = urem i64 %57, %1
  br label %67

67:                                               ; preds = %60, %63, %65
  %68 = phi i64 [ %62, %60 ], [ %66, %65 ], [ %57, %63 ]
  %69 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %8, align 8
  %70 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %69, i64 %68
  store %"struct.std::__1::__hash_node_base"* %33, %"struct.std::__1::__hash_node_base"** %70, align 8
  %71 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %35, i64 0, i32 0
  %72 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %71, align 8
  %73 = icmp eq %"struct.std::__1::__hash_node_base"* %72, null
  br i1 %73, label %140, label %74

74:                                               ; preds = %67
  %75 = add i64 %1, -1
  br label %76

76:                                               ; preds = %74, %125
  %77 = phi %"struct.std::__1::__hash_node_base"* [ %72, %74 ], [ %129, %125 ]
  %78 = phi i64 [ %68, %74 ], [ %127, %125 ]
  %79 = phi %"struct.std::__1::__hash_node_base"* [ %35, %74 ], [ %126, %125 ]
  %80 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %77, i64 1
  %81 = bitcast %"struct.std::__1::__hash_node_base"* %80 to i64*
  %82 = load i64, i64* %81, align 8
  br i1 %59, label %85, label %83

83:                                               ; preds = %76
  %84 = and i64 %82, %75
  br label %89

85:                                               ; preds = %76
  %86 = icmp ult i64 %82, %1
  br i1 %86, label %89, label %87

87:                                               ; preds = %85
  %88 = urem i64 %82, %1
  br label %89

89:                                               ; preds = %83, %85, %87
  %90 = phi i64 [ %84, %83 ], [ %88, %87 ], [ %82, %85 ]
  %91 = icmp eq i64 %90, %78
  br i1 %91, label %125, label %92

92:                                               ; preds = %89
  %93 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %8, align 8
  %94 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %93, i64 %90
  %95 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %94, align 8
  %96 = icmp eq %"struct.std::__1::__hash_node_base"* %95, null
  br i1 %96, label %100, label %97

97:                                               ; preds = %92
  %98 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %77, i64 2
  %99 = bitcast %"struct.std::__1::__hash_node_base"* %98 to i32*
  br label %101

100:                                              ; preds = %92
  store %"struct.std::__1::__hash_node_base"* %79, %"struct.std::__1::__hash_node_base"** %94, align 8
  br label %125

101:                                              ; preds = %97, %106
  %102 = phi %"struct.std::__1::__hash_node_base"* [ %104, %106 ], [ %77, %97 ]
  %103 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %102, i64 0, i32 0
  %104 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %103, align 8
  %105 = icmp eq %"struct.std::__1::__hash_node_base"* %104, null
  br i1 %105, label %112, label %106

106:                                              ; preds = %101
  %107 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %104, i64 2
  %108 = bitcast %"struct.std::__1::__hash_node_base"* %107 to i32*
  %109 = load i32, i32* %99, align 4
  %110 = load i32, i32* %108, align 4
  %111 = icmp eq i32 %109, %110
  br i1 %111, label %101, label %112

112:                                              ; preds = %101, %106
  %113 = ptrtoint %"struct.std::__1::__hash_node_base"* %104 to i64
  %114 = bitcast %"struct.std::__1::__hash_node_base"* %102 to i64*
  %115 = bitcast %"struct.std::__1::__hash_node_base"* %79 to i64*
  store i64 %113, i64* %115, align 8
  %116 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %8, align 8
  %117 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %116, i64 %90
  %118 = bitcast %"struct.std::__1::__hash_node_base"** %117 to i64**
  %119 = load i64*, i64** %118, align 8
  %120 = load i64, i64* %119, align 8
  store i64 %120, i64* %114, align 8
  %121 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %8, align 8
  %122 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %121, i64 %90
  %123 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %122, align 8
  %124 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %123, i64 0, i32 0
  store %"struct.std::__1::__hash_node_base"* %77, %"struct.std::__1::__hash_node_base"** %124, align 8
  br label %125

125:                                              ; preds = %89, %112, %100
  %126 = phi %"struct.std::__1::__hash_node_base"* [ %77, %100 ], [ %79, %112 ], [ %77, %89 ]
  %127 = phi i64 [ %90, %100 ], [ %78, %112 ], [ %78, %89 ]
  %128 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %126, i64 0, i32 0
  %129 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %128, align 8
  %130 = icmp eq %"struct.std::__1::__hash_node_base"* %129, null
  br i1 %130, label %140, label %76

131:                                              ; preds = %2
  %132 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %133 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %132, align 8
  store %"struct.std::__1::__hash_node_base"** null, %"struct.std::__1::__hash_node_base"*** %132, align 8
  %134 = icmp eq %"struct.std::__1::__hash_node_base"** %133, null
  br i1 %134, label %138, label %135

135:                                              ; preds = %131
  %136 = getelementptr inbounds %"class.std::__1::__bucket_list_deallocator", %"class.std::__1::__bucket_list_deallocator"* %3, i64 0, i32 0, i32 0, i32 0
  %137 = load i64, i64* %136, align 8
  tail call void @_ZN4base8internal17MetadataAllocatorIPNSt3__116__hash_node_baseIPNS2_11__hash_nodeINS2_17__hash_value_typeIiNS2_5arrayINS0_14StatsCollector18DeferredTraceEventELm4EEEEEPvEEEEE10deallocateEPSF_m(%"class.base::internal::MetadataAllocator.37"* %4, %"struct.std::__1::__hash_node_base"** nonnull %133, i64 %137) #17
  br label %138

138:                                              ; preds = %131, %135
  %139 = getelementptr inbounds %"class.std::__1::__bucket_list_deallocator", %"class.std::__1::__bucket_list_deallocator"* %3, i64 0, i32 0, i32 0, i32 0
  store i64 0, i64* %139, align 8
  br label %140

140:                                              ; preds = %125, %67, %32, %138
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal17MetadataAllocatorIPNSt3__116__hash_node_baseIPNS2_11__hash_nodeINS2_17__hash_value_typeIiNS2_5arrayINS0_14StatsCollector18DeferredTraceEventELm4EEEEEPvEEEEE10deallocateEPSF_m(%"class.base::internal::MetadataAllocator.37"*, %"struct.std::__1::__hash_node_base"**, i64) local_unnamed_addr #3 comdat align 2 {
  %4 = alloca %"struct.base::internal::DeferredUnmap", align 8
  %5 = tail call dereferenceable(5408) %"struct.base::PartitionRoot"* @_ZN4base8internal23PCScanMetadataAllocatorEv() #17
  %6 = bitcast %"struct.std::__1::__hash_node_base"** %1 to i8*
  %7 = icmp eq %"struct.std::__1::__hash_node_base"** %1, null
  br i1 %7, label %241, label %8, !prof !7

8:                                                ; preds = %3
  tail call void @llvm.prefetch(i8* nonnull %6, i32 0, i32 3, i32 1) #17
  %9 = ptrtoint %"struct.std::__1::__hash_node_base"** %1 to i64
  %10 = and i64 %9, -2097152
  %11 = or i64 %10, 4096
  %12 = inttoptr i64 %11 to i8*
  %13 = lshr i64 %9, 9
  %14 = and i64 %13, 4064
  %15 = getelementptr inbounds i8, i8* %12, i64 %14
  %16 = bitcast i8* %15 to %"struct.base::internal::PartitionPage"*
  %17 = getelementptr inbounds i8, i8* %15, i64 30
  %18 = load i8, i8* %17, align 2
  %19 = zext i8 %18 to i64
  %20 = sub nsw i64 0, %19
  %21 = getelementptr inbounds %"struct.base::internal::PartitionPage", %"struct.base::internal::PartitionPage"* %16, i64 %20, i32 0
  %22 = bitcast %union.anon.123* %21 to %"struct.base::internal::SlotSpanMetadata"*
  %23 = bitcast %union.anon.123* %21 to i8*
  tail call void @llvm.prefetch(i8* %23, i32 0, i32 3, i32 1) #17
  %24 = ptrtoint %union.anon.123* %21 to i64
  %25 = and i64 %24, -4096
  %26 = inttoptr i64 %25 to %"struct.base::internal::PartitionSuperPageExtentEntry"*
  %27 = getelementptr inbounds %"struct.base::internal::PartitionSuperPageExtentEntry", %"struct.base::internal::PartitionSuperPageExtentEntry"* %26, i64 0, i32 0
  %28 = load %"struct.base::PartitionRoot"*, %"struct.base::PartitionRoot"** %27, align 4096
  %29 = getelementptr inbounds %"struct.base::PartitionRoot", %"struct.base::PartitionRoot"* %28, i64 0, i32 0
  %30 = load i8, i8* %29, align 8
  %31 = icmp eq i8 %30, 2
  br i1 %31, label %32, label %101, !prof !7

32:                                               ; preds = %8
  %33 = load atomic i8, i8* getelementptr inbounds (%"class.base::internal::PCScan", %"class.base::internal::PCScan"* @_ZN4base8internal6PCScan9instance_E, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0) acquire, align 8
  %34 = icmp eq i8 %33, 2
  br i1 %34, label %35, label %36, !prof !7

35:                                               ; preds = %32
  tail call void @_ZN4base8internal6PCScan8JoinScanEv() #17
  br label %36

36:                                               ; preds = %35, %32
  %37 = getelementptr inbounds %"struct.base::internal::PartitionPage", %"struct.base::internal::PartitionPage"* %16, i64 %20, i32 0, i32 1, i64 8
  %38 = bitcast i8* %37 to %"struct.base::internal::PartitionBucket"**
  %39 = load %"struct.base::internal::PartitionBucket"*, %"struct.base::internal::PartitionBucket"** %38, align 1
  %40 = getelementptr inbounds %"struct.base::PartitionRoot", %"struct.base::PartitionRoot"* %28, i64 0, i32 10, i64 0
  %41 = icmp ugt %"struct.base::internal::PartitionBucket"* %40, %39
  %42 = getelementptr inbounds %"struct.base::PartitionRoot", %"struct.base::PartitionRoot"* %28, i64 0, i32 11
  %43 = icmp ult %"struct.base::internal::PartitionBucket"* %42, %39
  %44 = or i1 %41, %43
  br i1 %44, label %101, label %45, !prof !7

45:                                               ; preds = %36
  %46 = getelementptr inbounds %"struct.base::internal::PartitionPage", %"struct.base::internal::PartitionPage"* %16, i64 %20, i32 0, i32 1, i64 21
  %47 = load i8, i8* %46, align 1, !range !5
  %48 = icmp eq i8 %47, 0
  br i1 %48, label %49, label %53, !prof !6

49:                                               ; preds = %45
  %50 = getelementptr inbounds %"struct.base::internal::PartitionBucket", %"struct.base::internal::PartitionBucket"* %39, i64 0, i32 3
  %51 = load i32, i32* %50, align 8
  %52 = zext i32 %51 to i64
  br label %60

53:                                               ; preds = %45
  %54 = bitcast %union.anon.123* %21 to %"struct.base::internal::PartitionPage"*
  %55 = getelementptr inbounds %"struct.base::internal::PartitionPage", %"struct.base::internal::PartitionPage"* %54, i64 1, i32 0, i32 0, i32 0
  %56 = load i64, i64* %55, align 1
  %57 = getelementptr inbounds %"struct.base::internal::PartitionBucket", %"struct.base::internal::PartitionBucket"* %39, i64 0, i32 3
  %58 = load i32, i32* %57, align 8
  %59 = zext i32 %58 to i64
  br label %60

60:                                               ; preds = %53, %49
  %61 = phi i64 [ %52, %49 ], [ %59, %53 ]
  %62 = phi i64 [ %52, %49 ], [ %56, %53 ]
  %63 = load atomic i64, i64* getelementptr inbounds (%"class.base::internal::PCScan", %"class.base::internal::PCScan"* @_ZN4base8internal6PCScan9instance_E, i64 0, i32 0, i32 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 8
  %64 = inttoptr i64 %10 to i8*
  %65 = and i64 %63, 1
  %66 = icmp eq i64 %65, 0
  %67 = select i1 %66, i64 16384, i64 32768
  %68 = getelementptr inbounds i8, i8* %64, i64 %67
  %69 = bitcast i8* %68 to %"class.base::internal::ObjectBitmap"*
  %70 = lshr i64 %9, 4
  %71 = lshr i64 %9, 10
  %72 = and i64 %71, 2047
  %73 = and i64 %70, 63
  %74 = shl i64 1, %73
  %75 = getelementptr inbounds %"class.base::internal::ObjectBitmap", %"class.base::internal::ObjectBitmap"* %69, i64 0, i32 0, i32 0, i64 %72
  %76 = atomicrmw or i64* %75, i64 %74 monotonic
  %77 = and i64 %76, %74
  %78 = icmp eq i64 %77, 0
  br i1 %78, label %80, label %79, !prof !6

79:                                               ; preds = %60
  notail call void @_ZN4base8internal17DoubleFreeAttemptEv() #18
  unreachable

80:                                               ; preds = %60
  %81 = atomicrmw add i64* getelementptr inbounds (%"class.base::internal::PCScan", %"class.base::internal::PCScan"* @_ZN4base8internal6PCScan9instance_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0), i64 %61 monotonic
  %82 = add i64 %81, %61
  %83 = load atomic i64, i64* getelementptr inbounds (%"class.base::internal::PCScan", %"class.base::internal::PCScan"* @_ZN4base8internal6PCScan9instance_E, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 8
  %84 = icmp ugt i64 %82, %83
  br i1 %84, label %85, label %91

85:                                               ; preds = %80
  %86 = load %"class.base::internal::PCScanSchedulingBackend"*, %"class.base::internal::PCScanSchedulingBackend"** getelementptr inbounds (%"class.base::internal::PCScan", %"class.base::internal::PCScan"* @_ZN4base8internal6PCScan9instance_E, i64 0, i32 0, i32 2), align 8
  %87 = bitcast %"class.base::internal::PCScanSchedulingBackend"* %86 to i1 (%"class.base::internal::PCScanSchedulingBackend"*)***
  %88 = load i1 (%"class.base::internal::PCScanSchedulingBackend"*)**, i1 (%"class.base::internal::PCScanSchedulingBackend"*)*** %87, align 8
  %89 = load i1 (%"class.base::internal::PCScanSchedulingBackend"*)*, i1 (%"class.base::internal::PCScanSchedulingBackend"*)** %88, align 8
  %90 = tail call zeroext i1 %89(%"class.base::internal::PCScanSchedulingBackend"* %86) #17
  br label %91

91:                                               ; preds = %85, %80
  %92 = phi i1 [ false, %80 ], [ %90, %85 ]
  %93 = load i8, i8* getelementptr inbounds (%"class.base::internal::PCScan", %"class.base::internal::PCScan"* @_ZN4base8internal6PCScan9instance_E, i64 0, i32 2), align 1
  %94 = icmp eq i8 %93, 1
  br i1 %94, label %95, label %96

95:                                               ; preds = %91
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 1 %6, i8 0, i64 %62, i1 false) #17
  br label %96

96:                                               ; preds = %95, %91
  br i1 %92, label %97, label %241, !prof !7

97:                                               ; preds = %96
  %98 = load atomic i8, i8* getelementptr inbounds (%"class.base::internal::PCScan", %"class.base::internal::PCScan"* @_ZN4base8internal6PCScan9instance_E, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0) monotonic, align 8
  %99 = icmp eq i8 %98, 0
  br i1 %99, label %100, label %241

100:                                              ; preds = %97
  tail call void @_ZN4base8internal6PCScan11PerformScanENS1_14InvocationModeE(%"class.base::internal::PCScan"* nonnull @_ZN4base8internal6PCScan9instance_E, i32 1) #17
  br label %241

101:                                              ; preds = %36, %8
  %102 = getelementptr inbounds %"struct.base::PartitionRoot", %"struct.base::PartitionRoot"* %28, i64 0, i32 2
  %103 = load i8, i8* %102, align 2, !range !5
  %104 = icmp eq i8 %103, 0
  br i1 %104, label %173, label %105, !prof !7

105:                                              ; preds = %101
  %106 = getelementptr inbounds %"struct.base::internal::PartitionPage", %"struct.base::internal::PartitionPage"* %16, i64 %20, i32 0, i32 1, i64 8
  %107 = bitcast i8* %106 to %"struct.base::internal::PartitionBucket"**
  %108 = load %"struct.base::internal::PartitionBucket"*, %"struct.base::internal::PartitionBucket"** %107, align 1
  %109 = getelementptr inbounds %"struct.base::PartitionRoot", %"struct.base::PartitionRoot"* %28, i64 0, i32 10, i64 0
  %110 = icmp ule %"struct.base::internal::PartitionBucket"* %109, %108
  %111 = getelementptr inbounds %"struct.base::PartitionRoot", %"struct.base::PartitionRoot"* %28, i64 0, i32 11
  %112 = icmp uge %"struct.base::internal::PartitionBucket"* %111, %108
  %113 = and i1 %112, %110
  %114 = ptrtoint %"struct.base::internal::PartitionBucket"* %108 to i64
  br i1 %113, label %115, label %173, !prof !6

115:                                              ; preds = %105
  %116 = load i32, i32* @_ZN4base8internal18g_thread_cache_keyE, align 4
  %117 = tail call i8* @pthread_getspecific(i32 %116) #17
  %118 = bitcast i8* %117 to %"class.base::internal::ThreadCache"*
  %119 = icmp ugt i8* %117, inttoptr (i64 1 to i8*)
  br i1 %119, label %120, label %173, !prof !6

120:                                              ; preds = %115
  %121 = ptrtoint %"struct.base::internal::PartitionBucket"* %109 to i64
  %122 = sub i64 %114, %121
  %123 = sdiv exact i64 %122, 40
  %124 = getelementptr inbounds i8, i8* %117, i64 1480
  %125 = bitcast i8* %124 to i64*
  %126 = load i64, i64* %125, align 8
  %127 = add i64 %126, 1
  store i64 %127, i64* %125, align 8
  %128 = load i16, i16* @_ZN4base8internal11ThreadCache28largest_active_bucket_index_E, align 2
  %129 = zext i16 %128 to i64
  %130 = icmp ugt i64 %123, %129
  br i1 %130, label %131, label %136, !prof !7

131:                                              ; preds = %120
  %132 = getelementptr inbounds i8, i8* %117, i64 1496
  %133 = bitcast i8* %132 to i64*
  %134 = load i64, i64* %133, align 8
  %135 = add i64 %134, 1
  store i64 %135, i64* %133, align 8
  br label %173

136:                                              ; preds = %120
  %137 = getelementptr inbounds %"class.base::internal::ThreadCache", %"class.base::internal::ThreadCache"* %118, i64 0, i32 0, i64 %123
  %138 = bitcast %"struct.base::internal::ThreadCache::Bucket"* %137 to i64*
  %139 = load i64, i64* %138, align 8
  %140 = tail call i64 @llvm.bswap.i64(i64 %139) #17
  %141 = inttoptr i64 %140 to %"struct.base::internal::EncodedPartitionFreelistEntry"*
  %142 = bitcast %"struct.std::__1::__hash_node_base"** %1 to %"struct.base::internal::EncodedPartitionFreelistEntry"**
  store %"struct.base::internal::EncodedPartitionFreelistEntry"* %141, %"struct.base::internal::EncodedPartitionFreelistEntry"** %142, align 8
  %143 = xor i64 %140, -1
  %144 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %1, i64 1
  %145 = bitcast %"struct.std::__1::__hash_node_base"** %144 to i64*
  store i64 %143, i64* %145, align 8
  %146 = bitcast %"struct.base::internal::ThreadCache::Bucket"* %137 to %"struct.std::__1::__hash_node_base"***
  store %"struct.std::__1::__hash_node_base"** %1, %"struct.std::__1::__hash_node_base"*** %146, align 8
  %147 = getelementptr inbounds %"class.base::internal::ThreadCache", %"class.base::internal::ThreadCache"* %118, i64 0, i32 0, i64 %123, i32 1
  %148 = load i8, i8* %147, align 8
  %149 = add i8 %148, 1
  store i8 %149, i8* %147, align 8
  %150 = getelementptr inbounds %"class.base::internal::ThreadCache", %"class.base::internal::ThreadCache"* %118, i64 0, i32 0, i64 %123, i32 3
  %151 = load i16, i16* %150, align 2
  %152 = zext i16 %151 to i64
  %153 = getelementptr inbounds i8, i8* %117, i64 1424
  %154 = bitcast i8* %153 to i64*
  %155 = load i64, i64* %154, align 8
  %156 = add i64 %155, %152
  store i64 %156, i64* %154, align 8
  %157 = getelementptr inbounds i8, i8* %117, i64 1488
  %158 = bitcast i8* %157 to i64*
  %159 = load i64, i64* %158, align 8
  %160 = add i64 %159, 1
  store i64 %160, i64* %158, align 8
  %161 = getelementptr inbounds %"class.base::internal::ThreadCache", %"class.base::internal::ThreadCache"* %118, i64 0, i32 0, i64 %123, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %162 = load atomic i8, i8* %161 monotonic, align 1
  %163 = icmp ugt i8 %149, %162
  br i1 %163, label %164, label %167, !prof !7

164:                                              ; preds = %136
  %165 = lshr i8 %162, 1
  %166 = zext i8 %165 to i64
  tail call void @_ZN4base8internal11ThreadCache11ClearBucketERNS1_6BucketEm(%"class.base::internal::ThreadCache"* %118, %"struct.base::internal::ThreadCache::Bucket"* dereferenceable(16) %137, i64 %166) #17
  br label %167

167:                                              ; preds = %164, %136
  %168 = getelementptr inbounds i8, i8* %117, i64 1432
  %169 = load atomic i8, i8* %168 monotonic, align 1
  %170 = and i8 %169, 1
  %171 = icmp eq i8 %170, 0
  br i1 %171, label %241, label %172, !prof !6

172:                                              ; preds = %167
  tail call void @_ZN4base8internal11ThreadCache13PurgeInternalEv(%"class.base::internal::ThreadCache"* %118) #17
  br label %241

173:                                              ; preds = %131, %115, %105, %101
  %174 = bitcast %"struct.base::internal::DeferredUnmap"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %174) #17
  %175 = getelementptr inbounds %"struct.base::internal::DeferredUnmap", %"struct.base::internal::DeferredUnmap"* %4, i64 0, i32 0
  %176 = getelementptr inbounds %"struct.base::internal::DeferredUnmap", %"struct.base::internal::DeferredUnmap"* %4, i64 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %174, i8 0, i64 16, i1 false) #17
  %177 = getelementptr inbounds %"struct.base::PartitionRoot", %"struct.base::PartitionRoot"* %28, i64 0, i32 8
  %178 = getelementptr inbounds %"class.base::internal::MaybeSpinLock", %"class.base::internal::MaybeSpinLock"* %177, i64 0, i32 0
  %179 = getelementptr inbounds %"class.base::internal::MaybeSpinLock", %"class.base::internal::MaybeSpinLock"* %177, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  br label %180

180:                                              ; preds = %192, %173
  %181 = phi i32 [ 0, %173 ], [ %193, %192 ]
  %182 = phi i32 [ 1, %173 ], [ %196, %192 ]
  %183 = load atomic i32, i32* %179 monotonic, align 4
  %184 = icmp eq i32 %183, 0
  br i1 %184, label %185, label %188, !prof !9

185:                                              ; preds = %180
  %186 = cmpxchg weak i32* %179, i32 0, i32 1 acquire monotonic
  %187 = extractvalue { i32, i1 } %186, 1
  br i1 %187, label %203, label %188, !prof !6

188:                                              ; preds = %185, %180
  %189 = icmp sgt i32 %182, 0
  br i1 %189, label %198, label %192

190:                                              ; preds = %198
  %191 = add i32 %182, %181
  br label %192

192:                                              ; preds = %190, %188
  %193 = phi i32 [ %181, %188 ], [ %191, %190 ]
  %194 = shl i32 %182, 1
  %195 = icmp slt i32 %194, 64
  %196 = select i1 %195, i32 %194, i32 64
  %197 = icmp slt i32 %193, 1000
  br i1 %197, label %180, label %202

198:                                              ; preds = %188, %198
  %199 = phi i32 [ %200, %198 ], [ 0, %188 ]
  tail call void asm sideeffect "pause", "~{dirflag},~{fpsr},~{flags}"() #17, !srcloc !10
  %200 = add nuw nsw i32 %199, 1
  %201 = icmp eq i32 %200, %182
  br i1 %201, label %190, label %198

202:                                              ; preds = %192
  tail call void @_ZN4base8internal13SpinningMutex8LockSlowEv(%"class.base::internal::SpinningMutex"* %178) #17
  br label %203

203:                                              ; preds = %185, %202
  %204 = bitcast %union.anon.123* %21 to i8**
  %205 = load i8*, i8** %204, align 1
  %206 = icmp eq i8* %205, %6
  br i1 %206, label %209, label %207, !prof !7

207:                                              ; preds = %203
  %208 = ptrtoint i8* %205 to i64
  br label %212

209:                                              ; preds = %203
  tail call void @_ZN7logging8RawCheckEPKc(i8* getelementptr inbounds ([105 x i8], [105 x i8]* @.str.15, i64 0, i64 0)) #17
  %210 = getelementptr inbounds %union.anon.123, %union.anon.123* %21, i64 0, i32 0, i32 0
  %211 = load i64, i64* %210, align 1
  br label %212

212:                                              ; preds = %209, %207
  %213 = phi i64 [ %208, %207 ], [ %211, %209 ]
  %214 = tail call i64 @llvm.bswap.i64(i64 %213) #17
  %215 = inttoptr i64 %214 to %"struct.base::internal::EncodedPartitionFreelistEntry"*
  %216 = bitcast %"struct.std::__1::__hash_node_base"** %1 to %"struct.base::internal::EncodedPartitionFreelistEntry"**
  store %"struct.base::internal::EncodedPartitionFreelistEntry"* %215, %"struct.base::internal::EncodedPartitionFreelistEntry"** %216, align 8
  %217 = xor i64 %214, -1
  %218 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %1, i64 1
  %219 = bitcast %"struct.std::__1::__hash_node_base"** %218 to i64*
  store i64 %217, i64* %219, align 8
  %220 = bitcast %union.anon.123* %21 to %"struct.std::__1::__hash_node_base"***
  store %"struct.std::__1::__hash_node_base"** %1, %"struct.std::__1::__hash_node_base"*** %220, align 1
  %221 = getelementptr inbounds %"struct.base::internal::PartitionPage", %"struct.base::internal::PartitionPage"* %16, i64 %20, i32 0, i32 1, i64 16
  %222 = bitcast i8* %221 to i16*
  %223 = load i16, i16* %222, align 1
  %224 = add i16 %223, -1
  store i16 %224, i16* %222, align 1
  %225 = icmp slt i16 %224, 1
  br i1 %225, label %226, label %230, !prof !7

226:                                              ; preds = %212
  %227 = tail call { i8*, i64 } @_ZN4base8internal16SlotSpanMetadataILb1EE12FreeSlowPathEv(%"struct.base::internal::SlotSpanMetadata"* %22) #17
  %228 = extractvalue { i8*, i64 } %227, 0
  %229 = extractvalue { i8*, i64 } %227, 1
  br label %230

230:                                              ; preds = %226, %212
  %231 = phi i8* [ %228, %226 ], [ null, %212 ]
  %232 = phi i64 [ %229, %226 ], [ 0, %212 ]
  store i8* %231, i8** %175, align 8
  store i64 %232, i64* %176, align 8
  %233 = atomicrmw xchg i32* %179, i32 0 release
  %234 = icmp eq i32 %233, 2
  br i1 %234, label %235, label %236, !prof !7

235:                                              ; preds = %230
  tail call void @_ZN4base8internal13SpinningMutex9FutexWakeEv(%"class.base::internal::SpinningMutex"* %178) #17
  br label %236

236:                                              ; preds = %235, %230
  %237 = load i8*, i8** %175, align 8
  %238 = icmp eq i8* %237, null
  br i1 %238, label %240, label %239, !prof !6

239:                                              ; preds = %236
  call void @_ZN4base8internal13DeferredUnmap5UnmapEv(%"struct.base::internal::DeferredUnmap"* nonnull %4) #17
  br label %240

240:                                              ; preds = %239, %236
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %174) #17
  br label %241

241:                                              ; preds = %3, %96, %97, %100, %167, %172, %240
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.std::__1::__hash_node_base"** @_ZN4base8internal17MetadataAllocatorIPNSt3__116__hash_node_baseIPNS2_11__hash_nodeINS2_17__hash_value_typeIiNS2_5arrayINS0_14StatsCollector18DeferredTraceEventELm4EEEEEPvEEEEE8allocateEm(%"class.base::internal::MetadataAllocator.37"*, i64) local_unnamed_addr #3 comdat align 2 {
  %3 = alloca i8, align 1
  %4 = alloca i64, align 8
  %5 = tail call dereferenceable(5408) %"struct.base::PartitionRoot"* @_ZN4base8internal23PCScanMetadataAllocatorEv() #17
  %6 = shl i64 %1, 3
  %7 = tail call i64 @llvm.ctlz.i64(i64 %6, i1 false) #17, !range !4
  %8 = sub nuw nsw i64 64, %7
  %9 = and i64 %8, 255
  %10 = getelementptr inbounds [65 x i8], [65 x i8]* @_ZN4base12_GLOBAL__N_116kOrderIndexShiftE, i64 0, i64 %9
  %11 = load i8, i8* %10, align 1
  %12 = zext i8 %11 to i64
  %13 = lshr i64 %6, %12
  %14 = and i64 %13, 7
  %15 = getelementptr inbounds [65 x i64], [65 x i64]* @_ZN4base12_GLOBAL__N_118kOrderSubIndexMaskE, i64 0, i64 %9
  %16 = load i64, i64* %15, align 8
  %17 = and i64 %16, %6
  %18 = shl nuw nsw i64 %9, 3
  %19 = or i64 %14, %18
  %20 = icmp ne i64 %17, 0
  %21 = zext i1 %20 to i64
  %22 = add nuw nsw i64 %19, %21
  %23 = getelementptr inbounds { [128 x i64], [521 x i16] }, { [128 x i64], [521 x i16] }* @_ZZN4base8internal17BucketIndexLookup8GetIndexEmE6lookup, i64 0, i32 1, i64 %22
  %24 = load i16, i16* %23, align 2
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %3) #17
  store i8 0, i8* %3, align 1
  %25 = bitcast i64* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %25) #17
  store i64 -6148914691236517206, i64* %4, align 8
  %26 = getelementptr inbounds %"struct.base::PartitionRoot", %"struct.base::PartitionRoot"* %5, i64 0, i32 0
  %27 = load i8, i8* %26, align 8
  %28 = icmp eq i8 %27, 2
  br i1 %28, label %29, label %33

29:                                               ; preds = %2
  %30 = load atomic i8, i8* getelementptr inbounds (%"class.base::internal::PCScan", %"class.base::internal::PCScan"* @_ZN4base8internal6PCScan9instance_E, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0) acquire, align 8
  %31 = icmp eq i8 %30, 2
  br i1 %31, label %32, label %33, !prof !7

32:                                               ; preds = %29
  tail call void @_ZN4base8internal6PCScan8JoinScanEv() #17
  br label %33

33:                                               ; preds = %32, %29, %2
  %34 = getelementptr inbounds %"struct.base::PartitionRoot", %"struct.base::PartitionRoot"* %5, i64 0, i32 2
  %35 = load i8, i8* %34, align 2, !range !5
  %36 = icmp eq i8 %35, 0
  br i1 %36, label %185, label %37, !prof !19

37:                                               ; preds = %33
  %38 = load i32, i32* @_ZN4base8internal18g_thread_cache_keyE, align 4
  %39 = tail call i8* @pthread_getspecific(i32 %38) #17
  %40 = bitcast i8* %39 to %"class.base::internal::ThreadCache"*
  %41 = icmp ugt i8* %39, inttoptr (i64 1 to i8*)
  br i1 %41, label %42, label %112, !prof !6

42:                                               ; preds = %37
  %43 = zext i16 %24 to i64
  %44 = getelementptr inbounds %"class.base::internal::ThreadCache", %"class.base::internal::ThreadCache"* %40, i64 0, i32 3, i32 12, i64 %43
  %45 = load i64, i64* %44, align 8
  %46 = add i64 %45, 1
  store i64 %46, i64* %44, align 8
  %47 = getelementptr inbounds i8, i8* %39, i64 1440
  %48 = bitcast i8* %47 to i64*
  %49 = load i64, i64* %48, align 8
  %50 = add i64 %49, 1
  store i64 %50, i64* %48, align 8
  %51 = load i16, i16* @_ZN4base8internal11ThreadCache28largest_active_bucket_index_E, align 2
  %52 = icmp ult i16 %51, %24
  br i1 %52, label %53, label %62, !prof !7

53:                                               ; preds = %42
  %54 = getelementptr inbounds i8, i8* %39, i64 1472
  %55 = bitcast i8* %54 to i64*
  %56 = load i64, i64* %55, align 8
  %57 = add i64 %56, 1
  store i64 %57, i64* %55, align 8
  %58 = getelementptr inbounds i8, i8* %39, i64 1456
  %59 = bitcast i8* %58 to i64*
  %60 = load i64, i64* %59, align 8
  %61 = add i64 %60, 1
  store i64 %61, i64* %59, align 8
  br label %119

62:                                               ; preds = %42
  %63 = getelementptr inbounds %"class.base::internal::ThreadCache", %"class.base::internal::ThreadCache"* %40, i64 0, i32 0, i64 %43, i32 0
  %64 = load %"class.base::internal::PartitionFreelistEntry"*, %"class.base::internal::PartitionFreelistEntry"** %63, align 8
  %65 = icmp eq %"class.base::internal::PartitionFreelistEntry"* %64, null
  br i1 %65, label %71, label %66, !prof !7

66:                                               ; preds = %62
  %67 = getelementptr inbounds i8, i8* %39, i64 1448
  %68 = bitcast i8* %67 to i64*
  %69 = load i64, i64* %68, align 8
  %70 = add i64 %69, 1
  store i64 %70, i64* %68, align 8
  br label %79

71:                                               ; preds = %62
  %72 = getelementptr inbounds i8, i8* %39, i64 1456
  %73 = bitcast i8* %72 to <2 x i64>*
  %74 = load <2 x i64>, <2 x i64>* %73, align 8
  %75 = add <2 x i64> %74, <i64 1, i64 1>
  %76 = bitcast i8* %72 to <2 x i64>*
  store <2 x i64> %75, <2 x i64>* %76, align 8
  tail call void @_ZN4base8internal11ThreadCache10FillBucketEm(%"class.base::internal::ThreadCache"* %40, i64 %43) #17
  %77 = load %"class.base::internal::PartitionFreelistEntry"*, %"class.base::internal::PartitionFreelistEntry"** %63, align 8
  %78 = icmp eq %"class.base::internal::PartitionFreelistEntry"* %77, null
  br i1 %78, label %119, label %79, !prof !7

79:                                               ; preds = %71, %66
  %80 = phi %"class.base::internal::PartitionFreelistEntry"* [ %77, %71 ], [ %64, %66 ]
  %81 = getelementptr inbounds %"class.base::internal::PartitionFreelistEntry", %"class.base::internal::PartitionFreelistEntry"* %80, i64 0, i32 0
  %82 = load %"struct.base::internal::EncodedPartitionFreelistEntry"*, %"struct.base::internal::EncodedPartitionFreelistEntry"** %81, align 8
  %83 = icmp eq %"struct.base::internal::EncodedPartitionFreelistEntry"* %82, null
  %84 = ptrtoint %"struct.base::internal::EncodedPartitionFreelistEntry"* %82 to i64
  br i1 %83, label %85, label %87

85:                                               ; preds = %79
  %86 = tail call i64 @llvm.bswap.i64(i64 %84) #17
  br label %96

87:                                               ; preds = %79
  %88 = xor i64 %84, -1
  %89 = getelementptr inbounds %"class.base::internal::PartitionFreelistEntry", %"class.base::internal::PartitionFreelistEntry"* %80, i64 0, i32 1
  %90 = load i64, i64* %89, align 8
  %91 = icmp eq i64 %90, %88
  br i1 %91, label %93, label %92, !prof !6

92:                                               ; preds = %87
  tail call fastcc void @_ZN4base8internal12_GLOBAL__N_126FreelistCorruptionDetectedEv() #18
  unreachable

93:                                               ; preds = %87
  %94 = tail call i64 @llvm.bswap.i64(i64 %84) #17
  %95 = inttoptr i64 %94 to i8*
  tail call void @llvm.prefetch(i8* nonnull %95, i32 0, i32 3, i32 1) #17
  br label %96

96:                                               ; preds = %93, %85
  %97 = phi i64 [ %86, %85 ], [ %94, %93 ]
  %98 = inttoptr i64 %97 to %"class.base::internal::PartitionFreelistEntry"*
  %99 = getelementptr inbounds %"class.base::internal::ThreadCache", %"class.base::internal::ThreadCache"* %40, i64 0, i32 0, i64 %43, i32 1
  %100 = load i8, i8* %99, align 8
  %101 = add i8 %100, -1
  store i8 %101, i8* %99, align 8
  store %"class.base::internal::PartitionFreelistEntry"* %98, %"class.base::internal::PartitionFreelistEntry"** %63, align 8
  %102 = getelementptr inbounds %"class.base::internal::ThreadCache", %"class.base::internal::ThreadCache"* %40, i64 0, i32 0, i64 %43, i32 3
  %103 = load i16, i16* %102, align 2
  %104 = zext i16 %103 to i64
  store i64 %104, i64* %4, align 8
  %105 = load i16, i16* %102, align 2
  %106 = zext i16 %105 to i64
  %107 = getelementptr inbounds i8, i8* %39, i64 1424
  %108 = bitcast i8* %107 to i64*
  %109 = load i64, i64* %108, align 8
  %110 = sub i64 %109, %106
  store i64 %110, i64* %108, align 8
  %111 = bitcast %"class.base::internal::PartitionFreelistEntry"* %80 to i8*
  br label %114

112:                                              ; preds = %37
  %113 = call i8* @_ZN4base13PartitionRootILb1EE28MaybeInitThreadCacheAndAllocEtPm(%"struct.base::PartitionRoot"* %5, i16 zeroext %24, i64* nonnull %4) #17
  br label %114

114:                                              ; preds = %112, %96
  %115 = phi i8* [ %113, %112 ], [ %111, %96 ]
  %116 = icmp eq i8* %115, null
  br i1 %116, label %117, label %254, !prof !7

117:                                              ; preds = %114
  %118 = zext i16 %24 to i64
  br label %119

119:                                              ; preds = %117, %71, %53
  %120 = phi i64 [ %118, %117 ], [ %43, %71 ], [ %43, %53 ]
  %121 = getelementptr inbounds %"struct.base::PartitionRoot", %"struct.base::PartitionRoot"* %5, i64 0, i32 10, i64 %120
  %122 = getelementptr inbounds %"struct.base::PartitionRoot", %"struct.base::PartitionRoot"* %5, i64 0, i32 8
  %123 = getelementptr inbounds %"class.base::internal::MaybeSpinLock", %"class.base::internal::MaybeSpinLock"* %122, i64 0, i32 0
  %124 = getelementptr inbounds %"class.base::internal::MaybeSpinLock", %"class.base::internal::MaybeSpinLock"* %122, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  br label %125

125:                                              ; preds = %137, %119
  %126 = phi i32 [ 0, %119 ], [ %138, %137 ]
  %127 = phi i32 [ 1, %119 ], [ %141, %137 ]
  %128 = load atomic i32, i32* %124 monotonic, align 4
  %129 = icmp eq i32 %128, 0
  br i1 %129, label %130, label %133, !prof !9

130:                                              ; preds = %125
  %131 = cmpxchg weak i32* %124, i32 0, i32 1 acquire monotonic
  %132 = extractvalue { i32, i1 } %131, 1
  br i1 %132, label %148, label %133, !prof !6

133:                                              ; preds = %130, %125
  %134 = icmp sgt i32 %127, 0
  br i1 %134, label %143, label %137

135:                                              ; preds = %143
  %136 = add i32 %127, %126
  br label %137

137:                                              ; preds = %135, %133
  %138 = phi i32 [ %126, %133 ], [ %136, %135 ]
  %139 = shl i32 %127, 1
  %140 = icmp slt i32 %139, 64
  %141 = select i1 %140, i32 %139, i32 64
  %142 = icmp slt i32 %138, 1000
  br i1 %142, label %125, label %147

143:                                              ; preds = %133, %143
  %144 = phi i32 [ %145, %143 ], [ 0, %133 ]
  call void asm sideeffect "pause", "~{dirflag},~{fpsr},~{flags}"() #17, !srcloc !10
  %145 = add nuw nsw i32 %144, 1
  %146 = icmp eq i32 %145, %127
  br i1 %146, label %135, label %143

147:                                              ; preds = %137
  call void @_ZN4base8internal13SpinningMutex8LockSlowEv(%"class.base::internal::SpinningMutex"* %123) #17
  br label %148

148:                                              ; preds = %130, %147
  %149 = getelementptr inbounds %"struct.base::internal::PartitionBucket", %"struct.base::internal::PartitionBucket"* %121, i64 0, i32 0
  %150 = load %"struct.base::internal::SlotSpanMetadata"*, %"struct.base::internal::SlotSpanMetadata"** %149, align 8
  %151 = bitcast %"struct.base::internal::SlotSpanMetadata"* %150 to i8**
  %152 = load i8*, i8** %151, align 1
  %153 = icmp eq i8* %152, null
  br i1 %153, label %178, label %154, !prof !7

154:                                              ; preds = %148
  %155 = getelementptr inbounds %"struct.base::internal::SlotSpanMetadata", %"struct.base::internal::SlotSpanMetadata"* %150, i64 0, i32 0
  store i8 0, i8* %3, align 1
  %156 = bitcast i8* %152 to %"struct.base::internal::EncodedPartitionFreelistEntry"**
  %157 = load %"struct.base::internal::EncodedPartitionFreelistEntry"*, %"struct.base::internal::EncodedPartitionFreelistEntry"** %156, align 8
  %158 = icmp eq %"struct.base::internal::EncodedPartitionFreelistEntry"* %157, null
  %159 = ptrtoint %"struct.base::internal::EncodedPartitionFreelistEntry"* %157 to i64
  br i1 %158, label %160, label %162

160:                                              ; preds = %154
  %161 = call i64 @llvm.bswap.i64(i64 %159) #17
  br label %172

162:                                              ; preds = %154
  %163 = xor i64 %159, -1
  %164 = getelementptr inbounds i8, i8* %152, i64 8
  %165 = bitcast i8* %164 to i64*
  %166 = load i64, i64* %165, align 8
  %167 = icmp eq i64 %166, %163
  br i1 %167, label %169, label %168, !prof !6

168:                                              ; preds = %162
  call fastcc void @_ZN4base8internal12_GLOBAL__N_126FreelistCorruptionDetectedEv() #18
  unreachable

169:                                              ; preds = %162
  %170 = call i64 @llvm.bswap.i64(i64 %159) #17
  %171 = inttoptr i64 %170 to i8*
  call void @llvm.prefetch(i8* nonnull %171, i32 0, i32 3, i32 1) #17
  br label %172

172:                                              ; preds = %169, %160
  %173 = phi i64 [ %161, %160 ], [ %170, %169 ]
  %174 = inttoptr i64 %173 to %"class.base::internal::PartitionFreelistEntry"*
  store %"class.base::internal::PartitionFreelistEntry"* %174, %"class.base::internal::PartitionFreelistEntry"** %155, align 1
  %175 = getelementptr inbounds %"struct.base::internal::SlotSpanMetadata", %"struct.base::internal::SlotSpanMetadata"* %150, i64 0, i32 3
  %176 = load i16, i16* %175, align 1
  %177 = add i16 %176, 1
  store i16 %177, i16* %175, align 1
  br label %180

178:                                              ; preds = %148
  %179 = call i8* @_ZN4base8internal15PartitionBucketILb1EE13SlowPathAllocEPNS_13PartitionRootILb1EEEimmPb(%"struct.base::internal::PartitionBucket"* %121, %"struct.base::PartitionRoot"* %5, i32 0, i64 %6, i64 16384, i8* nonnull %3) #17
  br label %180

180:                                              ; preds = %178, %172
  %181 = phi i8* [ %152, %172 ], [ %179, %178 ]
  %182 = atomicrmw xchg i32* %124, i32 0 release
  %183 = icmp eq i32 %182, 2
  br i1 %183, label %184, label %251, !prof !7

184:                                              ; preds = %180
  call void @_ZN4base8internal13SpinningMutex9FutexWakeEv(%"class.base::internal::SpinningMutex"* %123) #17
  br label %251

185:                                              ; preds = %33
  %186 = zext i16 %24 to i64
  %187 = getelementptr inbounds %"struct.base::PartitionRoot", %"struct.base::PartitionRoot"* %5, i64 0, i32 10, i64 %186
  %188 = getelementptr inbounds %"struct.base::PartitionRoot", %"struct.base::PartitionRoot"* %5, i64 0, i32 8
  %189 = getelementptr inbounds %"class.base::internal::MaybeSpinLock", %"class.base::internal::MaybeSpinLock"* %188, i64 0, i32 0
  %190 = getelementptr inbounds %"class.base::internal::MaybeSpinLock", %"class.base::internal::MaybeSpinLock"* %188, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  br label %191

191:                                              ; preds = %203, %185
  %192 = phi i32 [ 0, %185 ], [ %204, %203 ]
  %193 = phi i32 [ 1, %185 ], [ %207, %203 ]
  %194 = load atomic i32, i32* %190 monotonic, align 4
  %195 = icmp eq i32 %194, 0
  br i1 %195, label %196, label %199, !prof !9

196:                                              ; preds = %191
  %197 = cmpxchg weak i32* %190, i32 0, i32 1 acquire monotonic
  %198 = extractvalue { i32, i1 } %197, 1
  br i1 %198, label %214, label %199, !prof !6

199:                                              ; preds = %196, %191
  %200 = icmp sgt i32 %193, 0
  br i1 %200, label %209, label %203

201:                                              ; preds = %209
  %202 = add i32 %193, %192
  br label %203

203:                                              ; preds = %201, %199
  %204 = phi i32 [ %192, %199 ], [ %202, %201 ]
  %205 = shl i32 %193, 1
  %206 = icmp slt i32 %205, 64
  %207 = select i1 %206, i32 %205, i32 64
  %208 = icmp slt i32 %204, 1000
  br i1 %208, label %191, label %213

209:                                              ; preds = %199, %209
  %210 = phi i32 [ %211, %209 ], [ 0, %199 ]
  tail call void asm sideeffect "pause", "~{dirflag},~{fpsr},~{flags}"() #17, !srcloc !10
  %211 = add nuw nsw i32 %210, 1
  %212 = icmp eq i32 %211, %193
  br i1 %212, label %201, label %209

213:                                              ; preds = %203
  tail call void @_ZN4base8internal13SpinningMutex8LockSlowEv(%"class.base::internal::SpinningMutex"* %189) #17
  br label %214

214:                                              ; preds = %196, %213
  %215 = getelementptr inbounds %"struct.base::internal::PartitionBucket", %"struct.base::internal::PartitionBucket"* %187, i64 0, i32 0
  %216 = load %"struct.base::internal::SlotSpanMetadata"*, %"struct.base::internal::SlotSpanMetadata"** %215, align 8
  %217 = bitcast %"struct.base::internal::SlotSpanMetadata"* %216 to i8**
  %218 = load i8*, i8** %217, align 1
  %219 = icmp eq i8* %218, null
  br i1 %219, label %244, label %220, !prof !7

220:                                              ; preds = %214
  %221 = getelementptr inbounds %"struct.base::internal::SlotSpanMetadata", %"struct.base::internal::SlotSpanMetadata"* %216, i64 0, i32 0
  store i8 0, i8* %3, align 1
  %222 = bitcast i8* %218 to %"struct.base::internal::EncodedPartitionFreelistEntry"**
  %223 = load %"struct.base::internal::EncodedPartitionFreelistEntry"*, %"struct.base::internal::EncodedPartitionFreelistEntry"** %222, align 8
  %224 = icmp eq %"struct.base::internal::EncodedPartitionFreelistEntry"* %223, null
  %225 = ptrtoint %"struct.base::internal::EncodedPartitionFreelistEntry"* %223 to i64
  br i1 %224, label %226, label %228

226:                                              ; preds = %220
  %227 = tail call i64 @llvm.bswap.i64(i64 %225) #17
  br label %238

228:                                              ; preds = %220
  %229 = xor i64 %225, -1
  %230 = getelementptr inbounds i8, i8* %218, i64 8
  %231 = bitcast i8* %230 to i64*
  %232 = load i64, i64* %231, align 8
  %233 = icmp eq i64 %232, %229
  br i1 %233, label %235, label %234, !prof !6

234:                                              ; preds = %228
  tail call fastcc void @_ZN4base8internal12_GLOBAL__N_126FreelistCorruptionDetectedEv() #18
  unreachable

235:                                              ; preds = %228
  %236 = tail call i64 @llvm.bswap.i64(i64 %225) #17
  %237 = inttoptr i64 %236 to i8*
  tail call void @llvm.prefetch(i8* nonnull %237, i32 0, i32 3, i32 1) #17
  br label %238

238:                                              ; preds = %235, %226
  %239 = phi i64 [ %227, %226 ], [ %236, %235 ]
  %240 = inttoptr i64 %239 to %"class.base::internal::PartitionFreelistEntry"*
  store %"class.base::internal::PartitionFreelistEntry"* %240, %"class.base::internal::PartitionFreelistEntry"** %221, align 1
  %241 = getelementptr inbounds %"struct.base::internal::SlotSpanMetadata", %"struct.base::internal::SlotSpanMetadata"* %216, i64 0, i32 3
  %242 = load i16, i16* %241, align 1
  %243 = add i16 %242, 1
  store i16 %243, i16* %241, align 1
  br label %246

244:                                              ; preds = %214
  %245 = call i8* @_ZN4base8internal15PartitionBucketILb1EE13SlowPathAllocEPNS_13PartitionRootILb1EEEimmPb(%"struct.base::internal::PartitionBucket"* %187, %"struct.base::PartitionRoot"* %5, i32 0, i64 %6, i64 16384, i8* nonnull %3) #17
  br label %246

246:                                              ; preds = %244, %238
  %247 = phi i8* [ %218, %238 ], [ %245, %244 ]
  %248 = atomicrmw xchg i32* %190, i32 0 release
  %249 = icmp eq i32 %248, 2
  br i1 %249, label %250, label %251, !prof !7

250:                                              ; preds = %246
  call void @_ZN4base8internal13SpinningMutex9FutexWakeEv(%"class.base::internal::SpinningMutex"* %189) #17
  br label %251

251:                                              ; preds = %250, %246, %184, %180
  %252 = phi i8* [ %181, %180 ], [ %181, %184 ], [ %247, %246 ], [ %247, %250 ]
  %253 = icmp eq i8* %252, null
  br i1 %253, label %256, label %254, !prof !7

254:                                              ; preds = %114, %251
  %255 = phi i8* [ %252, %251 ], [ %115, %114 ]
  br label %256

256:                                              ; preds = %251, %254
  %257 = phi i8* [ null, %251 ], [ %255, %254 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %25) #17
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %3) #17
  %258 = bitcast i8* %257 to %"struct.std::__1::__hash_node_base"**
  ret %"struct.std::__1::__hash_node_base"** %258
}

; Function Attrs: nounwind readnone speculatable
declare float @llvm.ceil.f32(float) #14

; Function Attrs: nounwind
declare void @_ZNSt3__118condition_variable10notify_allEv(%"class.std::__1::condition_variable"*) local_unnamed_addr #10

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal10PCScanTaskD2Ev(%"class.base::internal::PCScanTask"*) unnamed_addr #3 comdat align 2 {
  %2 = getelementptr inbounds %"class.base::internal::PCScanTask", %"class.base::internal::PCScanTask"* %0, i64 0, i32 5
  tail call void @_ZNSt3__118condition_variableD1Ev(%"class.std::__1::condition_variable"* %2) #17
  %3 = getelementptr inbounds %"class.base::internal::PCScanTask", %"class.base::internal::PCScanTask"* %0, i64 0, i32 3
  tail call void @_ZN4base8internal14StatsCollectorD1Ev(%"class.base::internal::StatsCollector"* %3) #17
  %4 = getelementptr inbounds %"class.base::internal::PCScanTask", %"class.base::internal::PCScanTask"* %0, i64 0, i32 2, i32 3, i32 0, i32 0, i32 0
  %5 = load %"struct.base::internal::RacefulWorklist<unsigned long>::Node"*, %"struct.base::internal::RacefulWorklist<unsigned long>::Node"** %4, align 8
  %6 = icmp eq %"struct.base::internal::RacefulWorklist<unsigned long>::Node"* %5, null
  %7 = ptrtoint %"struct.base::internal::RacefulWorklist<unsigned long>::Node"* %5 to i64
  br i1 %6, label %18, label %8

8:                                                ; preds = %1
  %9 = getelementptr inbounds %"class.base::internal::PCScanTask", %"class.base::internal::PCScanTask"* %0, i64 0, i32 2, i32 3, i32 0, i32 0, i32 1
  %10 = bitcast %"struct.base::internal::RacefulWorklist<unsigned long>::Node"** %9 to i64*
  store i64 %7, i64* %10, align 8
  %11 = getelementptr inbounds %"class.base::internal::PCScanTask", %"class.base::internal::PCScanTask"* %0, i64 0, i32 2, i32 3, i32 0, i32 0, i32 2
  %12 = bitcast %"class.std::__1::__compressed_pair.26"* %11 to %"class.base::internal::MetadataAllocator.29"*
  %13 = getelementptr inbounds %"class.base::internal::PCScanTask", %"class.base::internal::PCScanTask"* %0, i64 0, i32 2, i32 3, i32 0, i32 0, i32 2, i32 0, i32 0
  %14 = bitcast %"struct.base::internal::RacefulWorklist<unsigned long>::Node"** %13 to i64*
  %15 = load i64, i64* %14, align 8
  %16 = sub i64 %15, %7
  %17 = ashr exact i64 %16, 4
  tail call void @_ZN4base8internal17MetadataAllocatorINS0_15RacefulWorklistImE4NodeEE10deallocateEPS4_m(%"class.base::internal::MetadataAllocator.29"* %12, %"struct.base::internal::RacefulWorklist<unsigned long>::Node"* nonnull %5, i64 %17) #17
  br label %18

18:                                               ; preds = %8, %1
  %19 = getelementptr inbounds %"class.base::internal::PCScanTask", %"class.base::internal::PCScanTask"* %0, i64 0, i32 2, i32 2, i32 0, i32 0, i32 0
  %20 = load %"struct.base::internal::RacefulWorklist<base::internal::(anonymous namespace)::PCScanSnapshot::LargeScanArea>::Node"*, %"struct.base::internal::RacefulWorklist<base::internal::(anonymous namespace)::PCScanSnapshot::LargeScanArea>::Node"** %19, align 8
  %21 = icmp eq %"struct.base::internal::RacefulWorklist<base::internal::(anonymous namespace)::PCScanSnapshot::LargeScanArea>::Node"* %20, null
  br i1 %21, label %26, label %22

22:                                               ; preds = %18
  %23 = ptrtoint %"struct.base::internal::RacefulWorklist<base::internal::(anonymous namespace)::PCScanSnapshot::LargeScanArea>::Node"* %20 to i64
  %24 = getelementptr inbounds %"class.base::internal::PCScanTask", %"class.base::internal::PCScanTask"* %0, i64 0, i32 2, i32 2, i32 0, i32 0, i32 1
  %25 = bitcast %"struct.base::internal::RacefulWorklist<base::internal::(anonymous namespace)::PCScanSnapshot::LargeScanArea>::Node"** %24 to i64*
  store i64 %23, i64* %25, align 8
  tail call fastcc void @_ZNSt3__116allocator_traitsIN4base8internal17MetadataAllocatorINS2_15RacefulWorklistINS2_12_GLOBAL__N_114PCScanSnapshot13LargeScanAreaEE4NodeEEEE10deallocateERSA_PS9_m(%"struct.base::internal::RacefulWorklist<base::internal::(anonymous namespace)::PCScanSnapshot::LargeScanArea>::Node"* nonnull %20) #17
  br label %26

26:                                               ; preds = %22, %18
  %27 = getelementptr inbounds %"class.base::internal::PCScanTask", %"class.base::internal::PCScanTask"* %0, i64 0, i32 2, i32 1, i32 0, i32 0, i32 0
  %28 = load %"struct.base::internal::RacefulWorklist<base::internal::(anonymous namespace)::PCScanSnapshot::ScanArea>::Node"*, %"struct.base::internal::RacefulWorklist<base::internal::(anonymous namespace)::PCScanSnapshot::ScanArea>::Node"** %27, align 8
  %29 = icmp eq %"struct.base::internal::RacefulWorklist<base::internal::(anonymous namespace)::PCScanSnapshot::ScanArea>::Node"* %28, null
  br i1 %29, label %34, label %30

30:                                               ; preds = %26
  %31 = ptrtoint %"struct.base::internal::RacefulWorklist<base::internal::(anonymous namespace)::PCScanSnapshot::ScanArea>::Node"* %28 to i64
  %32 = getelementptr inbounds %"class.base::internal::PCScanTask", %"class.base::internal::PCScanTask"* %0, i64 0, i32 2, i32 1, i32 0, i32 0, i32 1
  %33 = bitcast %"struct.base::internal::RacefulWorklist<base::internal::(anonymous namespace)::PCScanSnapshot::ScanArea>::Node"** %32 to i64*
  store i64 %31, i64* %33, align 8
  tail call fastcc void @_ZNSt3__116allocator_traitsIN4base8internal17MetadataAllocatorINS2_15RacefulWorklistINS2_12_GLOBAL__N_114PCScanSnapshot8ScanAreaEE4NodeEEEE10deallocateERSA_PS9_m(%"struct.base::internal::RacefulWorklist<base::internal::(anonymous namespace)::PCScanSnapshot::ScanArea>::Node"* nonnull %28) #17
  br label %34

34:                                               ; preds = %26, %30
  %35 = getelementptr inbounds %"class.base::internal::PCScanTask", %"class.base::internal::PCScanTask"* %0, i64 0, i32 2, i32 0, i32 0
  %36 = getelementptr inbounds %"class.base::internal::PCScanTask", %"class.base::internal::PCScanTask"* %0, i64 0, i32 2, i32 0, i32 0, i32 1, i32 0, i32 0
  %37 = bitcast %"class.std::__1::__tree_end_node"* %36 to %"class.std::__1::__tree_node"**
  %38 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %37, align 8
  tail call void @_ZNSt3__16__treeImNS_4lessIvEEN4base8internal17MetadataAllocatorImEEE7destroyEPNS_11__tree_nodeImPvEE(%"class.std::__1::__tree"* %35, %"class.std::__1::__tree_node"* %38) #17
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal34AllocatedOnPCScanMetadataPartitiondlEPv(i8*) local_unnamed_addr #3 comdat align 2 {
  %2 = alloca %"struct.base::internal::DeferredUnmap", align 8
  %3 = tail call dereferenceable(5408) %"struct.base::PartitionRoot"* @_ZN4base8internal23PCScanMetadataAllocatorEv() #17
  %4 = icmp eq i8* %0, null
  br i1 %4, label %237, label %5, !prof !7

5:                                                ; preds = %1
  tail call void @llvm.prefetch(i8* nonnull %0, i32 0, i32 3, i32 1) #17
  %6 = ptrtoint i8* %0 to i64
  %7 = and i64 %6, -2097152
  %8 = or i64 %7, 4096
  %9 = inttoptr i64 %8 to i8*
  %10 = lshr i64 %6, 9
  %11 = and i64 %10, 4064
  %12 = getelementptr inbounds i8, i8* %9, i64 %11
  %13 = bitcast i8* %12 to %"struct.base::internal::PartitionPage"*
  %14 = getelementptr inbounds i8, i8* %12, i64 30
  %15 = load i8, i8* %14, align 2
  %16 = zext i8 %15 to i64
  %17 = sub nsw i64 0, %16
  %18 = getelementptr inbounds %"struct.base::internal::PartitionPage", %"struct.base::internal::PartitionPage"* %13, i64 %17, i32 0
  %19 = bitcast %union.anon.123* %18 to %"struct.base::internal::SlotSpanMetadata"*
  %20 = bitcast %union.anon.123* %18 to i8*
  tail call void @llvm.prefetch(i8* %20, i32 0, i32 3, i32 1) #17
  %21 = ptrtoint %union.anon.123* %18 to i64
  %22 = and i64 %21, -4096
  %23 = inttoptr i64 %22 to %"struct.base::internal::PartitionSuperPageExtentEntry"*
  %24 = getelementptr inbounds %"struct.base::internal::PartitionSuperPageExtentEntry", %"struct.base::internal::PartitionSuperPageExtentEntry"* %23, i64 0, i32 0
  %25 = load %"struct.base::PartitionRoot"*, %"struct.base::PartitionRoot"** %24, align 4096
  %26 = getelementptr inbounds %"struct.base::PartitionRoot", %"struct.base::PartitionRoot"* %25, i64 0, i32 0
  %27 = load i8, i8* %26, align 8
  %28 = icmp eq i8 %27, 2
  br i1 %28, label %29, label %98, !prof !7

29:                                               ; preds = %5
  %30 = load atomic i8, i8* getelementptr inbounds (%"class.base::internal::PCScan", %"class.base::internal::PCScan"* @_ZN4base8internal6PCScan9instance_E, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0) acquire, align 8
  %31 = icmp eq i8 %30, 2
  br i1 %31, label %32, label %33, !prof !7

32:                                               ; preds = %29
  tail call void @_ZN4base8internal6PCScan8JoinScanEv() #17
  br label %33

33:                                               ; preds = %32, %29
  %34 = getelementptr inbounds %"struct.base::internal::PartitionPage", %"struct.base::internal::PartitionPage"* %13, i64 %17, i32 0, i32 1, i64 8
  %35 = bitcast i8* %34 to %"struct.base::internal::PartitionBucket"**
  %36 = load %"struct.base::internal::PartitionBucket"*, %"struct.base::internal::PartitionBucket"** %35, align 1
  %37 = getelementptr inbounds %"struct.base::PartitionRoot", %"struct.base::PartitionRoot"* %25, i64 0, i32 10, i64 0
  %38 = icmp ugt %"struct.base::internal::PartitionBucket"* %37, %36
  %39 = getelementptr inbounds %"struct.base::PartitionRoot", %"struct.base::PartitionRoot"* %25, i64 0, i32 11
  %40 = icmp ult %"struct.base::internal::PartitionBucket"* %39, %36
  %41 = or i1 %38, %40
  br i1 %41, label %98, label %42, !prof !7

42:                                               ; preds = %33
  %43 = getelementptr inbounds %"struct.base::internal::PartitionPage", %"struct.base::internal::PartitionPage"* %13, i64 %17, i32 0, i32 1, i64 21
  %44 = load i8, i8* %43, align 1, !range !5
  %45 = icmp eq i8 %44, 0
  br i1 %45, label %46, label %50, !prof !6

46:                                               ; preds = %42
  %47 = getelementptr inbounds %"struct.base::internal::PartitionBucket", %"struct.base::internal::PartitionBucket"* %36, i64 0, i32 3
  %48 = load i32, i32* %47, align 8
  %49 = zext i32 %48 to i64
  br label %57

50:                                               ; preds = %42
  %51 = bitcast %union.anon.123* %18 to %"struct.base::internal::PartitionPage"*
  %52 = getelementptr inbounds %"struct.base::internal::PartitionPage", %"struct.base::internal::PartitionPage"* %51, i64 1, i32 0, i32 0, i32 0
  %53 = load i64, i64* %52, align 1
  %54 = getelementptr inbounds %"struct.base::internal::PartitionBucket", %"struct.base::internal::PartitionBucket"* %36, i64 0, i32 3
  %55 = load i32, i32* %54, align 8
  %56 = zext i32 %55 to i64
  br label %57

57:                                               ; preds = %50, %46
  %58 = phi i64 [ %49, %46 ], [ %56, %50 ]
  %59 = phi i64 [ %49, %46 ], [ %53, %50 ]
  %60 = load atomic i64, i64* getelementptr inbounds (%"class.base::internal::PCScan", %"class.base::internal::PCScan"* @_ZN4base8internal6PCScan9instance_E, i64 0, i32 0, i32 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 8
  %61 = inttoptr i64 %7 to i8*
  %62 = and i64 %60, 1
  %63 = icmp eq i64 %62, 0
  %64 = select i1 %63, i64 16384, i64 32768
  %65 = getelementptr inbounds i8, i8* %61, i64 %64
  %66 = bitcast i8* %65 to %"class.base::internal::ObjectBitmap"*
  %67 = lshr i64 %6, 4
  %68 = lshr i64 %6, 10
  %69 = and i64 %68, 2047
  %70 = and i64 %67, 63
  %71 = shl i64 1, %70
  %72 = getelementptr inbounds %"class.base::internal::ObjectBitmap", %"class.base::internal::ObjectBitmap"* %66, i64 0, i32 0, i32 0, i64 %69
  %73 = atomicrmw or i64* %72, i64 %71 monotonic
  %74 = and i64 %73, %71
  %75 = icmp eq i64 %74, 0
  br i1 %75, label %77, label %76, !prof !6

76:                                               ; preds = %57
  notail call void @_ZN4base8internal17DoubleFreeAttemptEv() #18
  unreachable

77:                                               ; preds = %57
  %78 = atomicrmw add i64* getelementptr inbounds (%"class.base::internal::PCScan", %"class.base::internal::PCScan"* @_ZN4base8internal6PCScan9instance_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0), i64 %58 monotonic
  %79 = add i64 %78, %58
  %80 = load atomic i64, i64* getelementptr inbounds (%"class.base::internal::PCScan", %"class.base::internal::PCScan"* @_ZN4base8internal6PCScan9instance_E, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 8
  %81 = icmp ugt i64 %79, %80
  br i1 %81, label %82, label %88

82:                                               ; preds = %77
  %83 = load %"class.base::internal::PCScanSchedulingBackend"*, %"class.base::internal::PCScanSchedulingBackend"** getelementptr inbounds (%"class.base::internal::PCScan", %"class.base::internal::PCScan"* @_ZN4base8internal6PCScan9instance_E, i64 0, i32 0, i32 2), align 8
  %84 = bitcast %"class.base::internal::PCScanSchedulingBackend"* %83 to i1 (%"class.base::internal::PCScanSchedulingBackend"*)***
  %85 = load i1 (%"class.base::internal::PCScanSchedulingBackend"*)**, i1 (%"class.base::internal::PCScanSchedulingBackend"*)*** %84, align 8
  %86 = load i1 (%"class.base::internal::PCScanSchedulingBackend"*)*, i1 (%"class.base::internal::PCScanSchedulingBackend"*)** %85, align 8
  %87 = tail call zeroext i1 %86(%"class.base::internal::PCScanSchedulingBackend"* %83) #17
  br label %88

88:                                               ; preds = %82, %77
  %89 = phi i1 [ false, %77 ], [ %87, %82 ]
  %90 = load i8, i8* getelementptr inbounds (%"class.base::internal::PCScan", %"class.base::internal::PCScan"* @_ZN4base8internal6PCScan9instance_E, i64 0, i32 2), align 1
  %91 = icmp eq i8 %90, 1
  br i1 %91, label %92, label %93

92:                                               ; preds = %88
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 1 %0, i8 0, i64 %59, i1 false) #17
  br label %93

93:                                               ; preds = %92, %88
  br i1 %89, label %94, label %237, !prof !7

94:                                               ; preds = %93
  %95 = load atomic i8, i8* getelementptr inbounds (%"class.base::internal::PCScan", %"class.base::internal::PCScan"* @_ZN4base8internal6PCScan9instance_E, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0) monotonic, align 8
  %96 = icmp eq i8 %95, 0
  br i1 %96, label %97, label %237

97:                                               ; preds = %94
  tail call void @_ZN4base8internal6PCScan11PerformScanENS1_14InvocationModeE(%"class.base::internal::PCScan"* nonnull @_ZN4base8internal6PCScan9instance_E, i32 1) #17
  br label %237

98:                                               ; preds = %33, %5
  %99 = getelementptr inbounds %"struct.base::PartitionRoot", %"struct.base::PartitionRoot"* %25, i64 0, i32 2
  %100 = load i8, i8* %99, align 2, !range !5
  %101 = icmp eq i8 %100, 0
  br i1 %101, label %170, label %102, !prof !7

102:                                              ; preds = %98
  %103 = getelementptr inbounds %"struct.base::internal::PartitionPage", %"struct.base::internal::PartitionPage"* %13, i64 %17, i32 0, i32 1, i64 8
  %104 = bitcast i8* %103 to %"struct.base::internal::PartitionBucket"**
  %105 = load %"struct.base::internal::PartitionBucket"*, %"struct.base::internal::PartitionBucket"** %104, align 1
  %106 = getelementptr inbounds %"struct.base::PartitionRoot", %"struct.base::PartitionRoot"* %25, i64 0, i32 10, i64 0
  %107 = icmp ule %"struct.base::internal::PartitionBucket"* %106, %105
  %108 = getelementptr inbounds %"struct.base::PartitionRoot", %"struct.base::PartitionRoot"* %25, i64 0, i32 11
  %109 = icmp uge %"struct.base::internal::PartitionBucket"* %108, %105
  %110 = and i1 %109, %107
  %111 = ptrtoint %"struct.base::internal::PartitionBucket"* %105 to i64
  br i1 %110, label %112, label %170, !prof !6

112:                                              ; preds = %102
  %113 = load i32, i32* @_ZN4base8internal18g_thread_cache_keyE, align 4
  %114 = tail call i8* @pthread_getspecific(i32 %113) #17
  %115 = bitcast i8* %114 to %"class.base::internal::ThreadCache"*
  %116 = icmp ugt i8* %114, inttoptr (i64 1 to i8*)
  br i1 %116, label %117, label %170, !prof !6

117:                                              ; preds = %112
  %118 = ptrtoint %"struct.base::internal::PartitionBucket"* %106 to i64
  %119 = sub i64 %111, %118
  %120 = sdiv exact i64 %119, 40
  %121 = getelementptr inbounds i8, i8* %114, i64 1480
  %122 = bitcast i8* %121 to i64*
  %123 = load i64, i64* %122, align 8
  %124 = add i64 %123, 1
  store i64 %124, i64* %122, align 8
  %125 = load i16, i16* @_ZN4base8internal11ThreadCache28largest_active_bucket_index_E, align 2
  %126 = zext i16 %125 to i64
  %127 = icmp ugt i64 %120, %126
  br i1 %127, label %128, label %133, !prof !7

128:                                              ; preds = %117
  %129 = getelementptr inbounds i8, i8* %114, i64 1496
  %130 = bitcast i8* %129 to i64*
  %131 = load i64, i64* %130, align 8
  %132 = add i64 %131, 1
  store i64 %132, i64* %130, align 8
  br label %170

133:                                              ; preds = %117
  %134 = getelementptr inbounds %"class.base::internal::ThreadCache", %"class.base::internal::ThreadCache"* %115, i64 0, i32 0, i64 %120
  %135 = bitcast %"struct.base::internal::ThreadCache::Bucket"* %134 to i64*
  %136 = load i64, i64* %135, align 8
  %137 = tail call i64 @llvm.bswap.i64(i64 %136) #17
  %138 = inttoptr i64 %137 to %"struct.base::internal::EncodedPartitionFreelistEntry"*
  %139 = bitcast i8* %0 to %"struct.base::internal::EncodedPartitionFreelistEntry"**
  store %"struct.base::internal::EncodedPartitionFreelistEntry"* %138, %"struct.base::internal::EncodedPartitionFreelistEntry"** %139, align 8
  %140 = xor i64 %137, -1
  %141 = getelementptr inbounds i8, i8* %0, i64 8
  %142 = bitcast i8* %141 to i64*
  store i64 %140, i64* %142, align 8
  %143 = bitcast %"struct.base::internal::ThreadCache::Bucket"* %134 to i8**
  store i8* %0, i8** %143, align 8
  %144 = getelementptr inbounds %"class.base::internal::ThreadCache", %"class.base::internal::ThreadCache"* %115, i64 0, i32 0, i64 %120, i32 1
  %145 = load i8, i8* %144, align 8
  %146 = add i8 %145, 1
  store i8 %146, i8* %144, align 8
  %147 = getelementptr inbounds %"class.base::internal::ThreadCache", %"class.base::internal::ThreadCache"* %115, i64 0, i32 0, i64 %120, i32 3
  %148 = load i16, i16* %147, align 2
  %149 = zext i16 %148 to i64
  %150 = getelementptr inbounds i8, i8* %114, i64 1424
  %151 = bitcast i8* %150 to i64*
  %152 = load i64, i64* %151, align 8
  %153 = add i64 %152, %149
  store i64 %153, i64* %151, align 8
  %154 = getelementptr inbounds i8, i8* %114, i64 1488
  %155 = bitcast i8* %154 to i64*
  %156 = load i64, i64* %155, align 8
  %157 = add i64 %156, 1
  store i64 %157, i64* %155, align 8
  %158 = getelementptr inbounds %"class.base::internal::ThreadCache", %"class.base::internal::ThreadCache"* %115, i64 0, i32 0, i64 %120, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %159 = load atomic i8, i8* %158 monotonic, align 1
  %160 = icmp ugt i8 %146, %159
  br i1 %160, label %161, label %164, !prof !7

161:                                              ; preds = %133
  %162 = lshr i8 %159, 1
  %163 = zext i8 %162 to i64
  tail call void @_ZN4base8internal11ThreadCache11ClearBucketERNS1_6BucketEm(%"class.base::internal::ThreadCache"* %115, %"struct.base::internal::ThreadCache::Bucket"* dereferenceable(16) %134, i64 %163) #17
  br label %164

164:                                              ; preds = %161, %133
  %165 = getelementptr inbounds i8, i8* %114, i64 1432
  %166 = load atomic i8, i8* %165 monotonic, align 1
  %167 = and i8 %166, 1
  %168 = icmp eq i8 %167, 0
  br i1 %168, label %237, label %169, !prof !6

169:                                              ; preds = %164
  tail call void @_ZN4base8internal11ThreadCache13PurgeInternalEv(%"class.base::internal::ThreadCache"* %115) #17
  br label %237

170:                                              ; preds = %128, %112, %102, %98
  %171 = bitcast %"struct.base::internal::DeferredUnmap"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %171) #17
  %172 = getelementptr inbounds %"struct.base::internal::DeferredUnmap", %"struct.base::internal::DeferredUnmap"* %2, i64 0, i32 0
  %173 = getelementptr inbounds %"struct.base::internal::DeferredUnmap", %"struct.base::internal::DeferredUnmap"* %2, i64 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %171, i8 0, i64 16, i1 false) #17
  %174 = getelementptr inbounds %"struct.base::PartitionRoot", %"struct.base::PartitionRoot"* %25, i64 0, i32 8
  %175 = getelementptr inbounds %"class.base::internal::MaybeSpinLock", %"class.base::internal::MaybeSpinLock"* %174, i64 0, i32 0
  %176 = getelementptr inbounds %"class.base::internal::MaybeSpinLock", %"class.base::internal::MaybeSpinLock"* %174, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  br label %177

177:                                              ; preds = %189, %170
  %178 = phi i32 [ 0, %170 ], [ %190, %189 ]
  %179 = phi i32 [ 1, %170 ], [ %193, %189 ]
  %180 = load atomic i32, i32* %176 monotonic, align 4
  %181 = icmp eq i32 %180, 0
  br i1 %181, label %182, label %185, !prof !9

182:                                              ; preds = %177
  %183 = cmpxchg weak i32* %176, i32 0, i32 1 acquire monotonic
  %184 = extractvalue { i32, i1 } %183, 1
  br i1 %184, label %200, label %185, !prof !6

185:                                              ; preds = %182, %177
  %186 = icmp sgt i32 %179, 0
  br i1 %186, label %195, label %189

187:                                              ; preds = %195
  %188 = add i32 %179, %178
  br label %189

189:                                              ; preds = %187, %185
  %190 = phi i32 [ %178, %185 ], [ %188, %187 ]
  %191 = shl i32 %179, 1
  %192 = icmp slt i32 %191, 64
  %193 = select i1 %192, i32 %191, i32 64
  %194 = icmp slt i32 %190, 1000
  br i1 %194, label %177, label %199

195:                                              ; preds = %185, %195
  %196 = phi i32 [ %197, %195 ], [ 0, %185 ]
  tail call void asm sideeffect "pause", "~{dirflag},~{fpsr},~{flags}"() #17, !srcloc !10
  %197 = add nuw nsw i32 %196, 1
  %198 = icmp eq i32 %197, %179
  br i1 %198, label %187, label %195

199:                                              ; preds = %189
  tail call void @_ZN4base8internal13SpinningMutex8LockSlowEv(%"class.base::internal::SpinningMutex"* %175) #17
  br label %200

200:                                              ; preds = %182, %199
  %201 = bitcast %union.anon.123* %18 to i8**
  %202 = load i8*, i8** %201, align 1
  %203 = icmp eq i8* %202, %0
  br i1 %203, label %206, label %204, !prof !7

204:                                              ; preds = %200
  %205 = ptrtoint i8* %202 to i64
  br label %209

206:                                              ; preds = %200
  tail call void @_ZN7logging8RawCheckEPKc(i8* getelementptr inbounds ([105 x i8], [105 x i8]* @.str.15, i64 0, i64 0)) #17
  %207 = getelementptr inbounds %union.anon.123, %union.anon.123* %18, i64 0, i32 0, i32 0
  %208 = load i64, i64* %207, align 1
  br label %209

209:                                              ; preds = %206, %204
  %210 = phi i64 [ %205, %204 ], [ %208, %206 ]
  %211 = tail call i64 @llvm.bswap.i64(i64 %210) #17
  %212 = inttoptr i64 %211 to %"struct.base::internal::EncodedPartitionFreelistEntry"*
  %213 = bitcast i8* %0 to %"struct.base::internal::EncodedPartitionFreelistEntry"**
  store %"struct.base::internal::EncodedPartitionFreelistEntry"* %212, %"struct.base::internal::EncodedPartitionFreelistEntry"** %213, align 8
  %214 = xor i64 %211, -1
  %215 = getelementptr inbounds i8, i8* %0, i64 8
  %216 = bitcast i8* %215 to i64*
  store i64 %214, i64* %216, align 8
  store i8* %0, i8** %201, align 1
  %217 = getelementptr inbounds %"struct.base::internal::PartitionPage", %"struct.base::internal::PartitionPage"* %13, i64 %17, i32 0, i32 1, i64 16
  %218 = bitcast i8* %217 to i16*
  %219 = load i16, i16* %218, align 1
  %220 = add i16 %219, -1
  store i16 %220, i16* %218, align 1
  %221 = icmp slt i16 %220, 1
  br i1 %221, label %222, label %226, !prof !7

222:                                              ; preds = %209
  %223 = tail call { i8*, i64 } @_ZN4base8internal16SlotSpanMetadataILb1EE12FreeSlowPathEv(%"struct.base::internal::SlotSpanMetadata"* %19) #17
  %224 = extractvalue { i8*, i64 } %223, 0
  %225 = extractvalue { i8*, i64 } %223, 1
  br label %226

226:                                              ; preds = %222, %209
  %227 = phi i8* [ %224, %222 ], [ null, %209 ]
  %228 = phi i64 [ %225, %222 ], [ 0, %209 ]
  store i8* %227, i8** %172, align 8
  store i64 %228, i64* %173, align 8
  %229 = atomicrmw xchg i32* %176, i32 0 release
  %230 = icmp eq i32 %229, 2
  br i1 %230, label %231, label %232, !prof !7

231:                                              ; preds = %226
  tail call void @_ZN4base8internal13SpinningMutex9FutexWakeEv(%"class.base::internal::SpinningMutex"* %175) #17
  br label %232

232:                                              ; preds = %231, %226
  %233 = load i8*, i8** %172, align 8
  %234 = icmp eq i8* %233, null
  br i1 %234, label %236, label %235, !prof !6

235:                                              ; preds = %232
  call void @_ZN4base8internal13DeferredUnmap5UnmapEv(%"struct.base::internal::DeferredUnmap"* nonnull %2) #17
  br label %236

236:                                              ; preds = %235, %232
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %171) #17
  br label %237

237:                                              ; preds = %1, %93, %94, %97, %164, %169, %236
  ret void
}

; Function Attrs: nounwind
declare void @_ZNSt3__118condition_variableD1Ev(%"class.std::__1::condition_variable"*) unnamed_addr #10

; Function Attrs: nounwind
declare void @_ZN4base8internal14StatsCollectorD1Ev(%"class.base::internal::StatsCollector"*) unnamed_addr #10

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16__treeImNS_4lessIvEEN4base8internal17MetadataAllocatorImEEE7destroyEPNS_11__tree_nodeImPvEE(%"class.std::__1::__tree"*, %"class.std::__1::__tree_node"*) local_unnamed_addr #3 comdat align 2 {
  %3 = icmp eq %"class.std::__1::__tree_node"* %1, null
  br i1 %3, label %12, label %4

4:                                                ; preds = %2
  %5 = bitcast %"class.std::__1::__tree_node"* %1 to %"class.std::__1::__tree_node"**
  %6 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %5, align 8
  tail call void @_ZNSt3__16__treeImNS_4lessIvEEN4base8internal17MetadataAllocatorImEEE7destroyEPNS_11__tree_nodeImPvEE(%"class.std::__1::__tree"* %0, %"class.std::__1::__tree_node"* %6) #17
  %7 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %1, i64 0, i32 0, i32 1
  %8 = bitcast %"class.std::__1::__tree_node_base"** %7 to %"class.std::__1::__tree_node"**
  %9 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %8, align 8
  tail call void @_ZNSt3__16__treeImNS_4lessIvEEN4base8internal17MetadataAllocatorImEEE7destroyEPNS_11__tree_nodeImPvEE(%"class.std::__1::__tree"* %0, %"class.std::__1::__tree_node"* %9) #17
  %10 = getelementptr inbounds %"class.std::__1::__tree", %"class.std::__1::__tree"* %0, i64 0, i32 1
  %11 = bitcast %"class.std::__1::__compressed_pair"* %10 to %"class.base::internal::MetadataAllocator"*
  tail call void @_ZN4base8internal17MetadataAllocatorINSt3__111__tree_nodeImPvEEE10deallocateEPS5_m(%"class.base::internal::MetadataAllocator"* %11, %"class.std::__1::__tree_node"* nonnull %1, i64 1) #17
  ret void

12:                                               ; preds = %2
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal17MetadataAllocatorINSt3__111__hash_nodeINS2_17__hash_value_typeIiPvEES5_EEE10deallocateEPS7_m(%"class.base::internal::MetadataAllocator.79"*, %"struct.std::__1::__hash_node.242"*, i64) local_unnamed_addr #3 comdat align 2 {
  %4 = alloca %"struct.base::internal::DeferredUnmap", align 8
  %5 = tail call dereferenceable(5408) %"struct.base::PartitionRoot"* @_ZN4base8internal23PCScanMetadataAllocatorEv() #17
  %6 = bitcast %"struct.std::__1::__hash_node.242"* %1 to i8*
  %7 = icmp eq %"struct.std::__1::__hash_node.242"* %1, null
  br i1 %7, label %239, label %8, !prof !7

8:                                                ; preds = %3
  tail call void @llvm.prefetch(i8* nonnull %6, i32 0, i32 3, i32 1) #17
  %9 = ptrtoint %"struct.std::__1::__hash_node.242"* %1 to i64
  %10 = and i64 %9, -2097152
  %11 = or i64 %10, 4096
  %12 = inttoptr i64 %11 to i8*
  %13 = lshr i64 %9, 9
  %14 = and i64 %13, 4064
  %15 = getelementptr inbounds i8, i8* %12, i64 %14
  %16 = bitcast i8* %15 to %"struct.base::internal::PartitionPage"*
  %17 = getelementptr inbounds i8, i8* %15, i64 30
  %18 = load i8, i8* %17, align 2
  %19 = zext i8 %18 to i64
  %20 = sub nsw i64 0, %19
  %21 = getelementptr inbounds %"struct.base::internal::PartitionPage", %"struct.base::internal::PartitionPage"* %16, i64 %20, i32 0
  %22 = bitcast %union.anon.123* %21 to %"struct.base::internal::SlotSpanMetadata"*
  %23 = bitcast %union.anon.123* %21 to i8*
  tail call void @llvm.prefetch(i8* %23, i32 0, i32 3, i32 1) #17
  %24 = ptrtoint %union.anon.123* %21 to i64
  %25 = and i64 %24, -4096
  %26 = inttoptr i64 %25 to %"struct.base::internal::PartitionSuperPageExtentEntry"*
  %27 = getelementptr inbounds %"struct.base::internal::PartitionSuperPageExtentEntry", %"struct.base::internal::PartitionSuperPageExtentEntry"* %26, i64 0, i32 0
  %28 = load %"struct.base::PartitionRoot"*, %"struct.base::PartitionRoot"** %27, align 4096
  %29 = getelementptr inbounds %"struct.base::PartitionRoot", %"struct.base::PartitionRoot"* %28, i64 0, i32 0
  %30 = load i8, i8* %29, align 8
  %31 = icmp eq i8 %30, 2
  br i1 %31, label %32, label %101, !prof !7

32:                                               ; preds = %8
  %33 = load atomic i8, i8* getelementptr inbounds (%"class.base::internal::PCScan", %"class.base::internal::PCScan"* @_ZN4base8internal6PCScan9instance_E, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0) acquire, align 8
  %34 = icmp eq i8 %33, 2
  br i1 %34, label %35, label %36, !prof !7

35:                                               ; preds = %32
  tail call void @_ZN4base8internal6PCScan8JoinScanEv() #17
  br label %36

36:                                               ; preds = %35, %32
  %37 = getelementptr inbounds %"struct.base::internal::PartitionPage", %"struct.base::internal::PartitionPage"* %16, i64 %20, i32 0, i32 1, i64 8
  %38 = bitcast i8* %37 to %"struct.base::internal::PartitionBucket"**
  %39 = load %"struct.base::internal::PartitionBucket"*, %"struct.base::internal::PartitionBucket"** %38, align 1
  %40 = getelementptr inbounds %"struct.base::PartitionRoot", %"struct.base::PartitionRoot"* %28, i64 0, i32 10, i64 0
  %41 = icmp ugt %"struct.base::internal::PartitionBucket"* %40, %39
  %42 = getelementptr inbounds %"struct.base::PartitionRoot", %"struct.base::PartitionRoot"* %28, i64 0, i32 11
  %43 = icmp ult %"struct.base::internal::PartitionBucket"* %42, %39
  %44 = or i1 %41, %43
  br i1 %44, label %101, label %45, !prof !7

45:                                               ; preds = %36
  %46 = getelementptr inbounds %"struct.base::internal::PartitionPage", %"struct.base::internal::PartitionPage"* %16, i64 %20, i32 0, i32 1, i64 21
  %47 = load i8, i8* %46, align 1, !range !5
  %48 = icmp eq i8 %47, 0
  br i1 %48, label %49, label %53, !prof !6

49:                                               ; preds = %45
  %50 = getelementptr inbounds %"struct.base::internal::PartitionBucket", %"struct.base::internal::PartitionBucket"* %39, i64 0, i32 3
  %51 = load i32, i32* %50, align 8
  %52 = zext i32 %51 to i64
  br label %60

53:                                               ; preds = %45
  %54 = bitcast %union.anon.123* %21 to %"struct.base::internal::PartitionPage"*
  %55 = getelementptr inbounds %"struct.base::internal::PartitionPage", %"struct.base::internal::PartitionPage"* %54, i64 1, i32 0, i32 0, i32 0
  %56 = load i64, i64* %55, align 1
  %57 = getelementptr inbounds %"struct.base::internal::PartitionBucket", %"struct.base::internal::PartitionBucket"* %39, i64 0, i32 3
  %58 = load i32, i32* %57, align 8
  %59 = zext i32 %58 to i64
  br label %60

60:                                               ; preds = %53, %49
  %61 = phi i64 [ %52, %49 ], [ %59, %53 ]
  %62 = phi i64 [ %52, %49 ], [ %56, %53 ]
  %63 = load atomic i64, i64* getelementptr inbounds (%"class.base::internal::PCScan", %"class.base::internal::PCScan"* @_ZN4base8internal6PCScan9instance_E, i64 0, i32 0, i32 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 8
  %64 = inttoptr i64 %10 to i8*
  %65 = and i64 %63, 1
  %66 = icmp eq i64 %65, 0
  %67 = select i1 %66, i64 16384, i64 32768
  %68 = getelementptr inbounds i8, i8* %64, i64 %67
  %69 = bitcast i8* %68 to %"class.base::internal::ObjectBitmap"*
  %70 = lshr i64 %9, 4
  %71 = lshr i64 %9, 10
  %72 = and i64 %71, 2047
  %73 = and i64 %70, 63
  %74 = shl i64 1, %73
  %75 = getelementptr inbounds %"class.base::internal::ObjectBitmap", %"class.base::internal::ObjectBitmap"* %69, i64 0, i32 0, i32 0, i64 %72
  %76 = atomicrmw or i64* %75, i64 %74 monotonic
  %77 = and i64 %76, %74
  %78 = icmp eq i64 %77, 0
  br i1 %78, label %80, label %79, !prof !6

79:                                               ; preds = %60
  notail call void @_ZN4base8internal17DoubleFreeAttemptEv() #18
  unreachable

80:                                               ; preds = %60
  %81 = atomicrmw add i64* getelementptr inbounds (%"class.base::internal::PCScan", %"class.base::internal::PCScan"* @_ZN4base8internal6PCScan9instance_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0), i64 %61 monotonic
  %82 = add i64 %81, %61
  %83 = load atomic i64, i64* getelementptr inbounds (%"class.base::internal::PCScan", %"class.base::internal::PCScan"* @_ZN4base8internal6PCScan9instance_E, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 8
  %84 = icmp ugt i64 %82, %83
  br i1 %84, label %85, label %91

85:                                               ; preds = %80
  %86 = load %"class.base::internal::PCScanSchedulingBackend"*, %"class.base::internal::PCScanSchedulingBackend"** getelementptr inbounds (%"class.base::internal::PCScan", %"class.base::internal::PCScan"* @_ZN4base8internal6PCScan9instance_E, i64 0, i32 0, i32 2), align 8
  %87 = bitcast %"class.base::internal::PCScanSchedulingBackend"* %86 to i1 (%"class.base::internal::PCScanSchedulingBackend"*)***
  %88 = load i1 (%"class.base::internal::PCScanSchedulingBackend"*)**, i1 (%"class.base::internal::PCScanSchedulingBackend"*)*** %87, align 8
  %89 = load i1 (%"class.base::internal::PCScanSchedulingBackend"*)*, i1 (%"class.base::internal::PCScanSchedulingBackend"*)** %88, align 8
  %90 = tail call zeroext i1 %89(%"class.base::internal::PCScanSchedulingBackend"* %86) #17
  br label %91

91:                                               ; preds = %85, %80
  %92 = phi i1 [ false, %80 ], [ %90, %85 ]
  %93 = load i8, i8* getelementptr inbounds (%"class.base::internal::PCScan", %"class.base::internal::PCScan"* @_ZN4base8internal6PCScan9instance_E, i64 0, i32 2), align 1
  %94 = icmp eq i8 %93, 1
  br i1 %94, label %95, label %96

95:                                               ; preds = %91
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 1 %6, i8 0, i64 %62, i1 false) #17
  br label %96

96:                                               ; preds = %95, %91
  br i1 %92, label %97, label %239, !prof !7

97:                                               ; preds = %96
  %98 = load atomic i8, i8* getelementptr inbounds (%"class.base::internal::PCScan", %"class.base::internal::PCScan"* @_ZN4base8internal6PCScan9instance_E, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0) monotonic, align 8
  %99 = icmp eq i8 %98, 0
  br i1 %99, label %100, label %239

100:                                              ; preds = %97
  tail call void @_ZN4base8internal6PCScan11PerformScanENS1_14InvocationModeE(%"class.base::internal::PCScan"* nonnull @_ZN4base8internal6PCScan9instance_E, i32 1) #17
  br label %239

101:                                              ; preds = %36, %8
  %102 = getelementptr inbounds %"struct.base::PartitionRoot", %"struct.base::PartitionRoot"* %28, i64 0, i32 2
  %103 = load i8, i8* %102, align 2, !range !5
  %104 = icmp eq i8 %103, 0
  br i1 %104, label %172, label %105, !prof !7

105:                                              ; preds = %101
  %106 = getelementptr inbounds %"struct.base::internal::PartitionPage", %"struct.base::internal::PartitionPage"* %16, i64 %20, i32 0, i32 1, i64 8
  %107 = bitcast i8* %106 to %"struct.base::internal::PartitionBucket"**
  %108 = load %"struct.base::internal::PartitionBucket"*, %"struct.base::internal::PartitionBucket"** %107, align 1
  %109 = getelementptr inbounds %"struct.base::PartitionRoot", %"struct.base::PartitionRoot"* %28, i64 0, i32 10, i64 0
  %110 = icmp ule %"struct.base::internal::PartitionBucket"* %109, %108
  %111 = getelementptr inbounds %"struct.base::PartitionRoot", %"struct.base::PartitionRoot"* %28, i64 0, i32 11
  %112 = icmp uge %"struct.base::internal::PartitionBucket"* %111, %108
  %113 = and i1 %112, %110
  %114 = ptrtoint %"struct.base::internal::PartitionBucket"* %108 to i64
  br i1 %113, label %115, label %172, !prof !6

115:                                              ; preds = %105
  %116 = load i32, i32* @_ZN4base8internal18g_thread_cache_keyE, align 4
  %117 = tail call i8* @pthread_getspecific(i32 %116) #17
  %118 = bitcast i8* %117 to %"class.base::internal::ThreadCache"*
  %119 = icmp ugt i8* %117, inttoptr (i64 1 to i8*)
  br i1 %119, label %120, label %172, !prof !6

120:                                              ; preds = %115
  %121 = ptrtoint %"struct.base::internal::PartitionBucket"* %109 to i64
  %122 = sub i64 %114, %121
  %123 = sdiv exact i64 %122, 40
  %124 = getelementptr inbounds i8, i8* %117, i64 1480
  %125 = bitcast i8* %124 to i64*
  %126 = load i64, i64* %125, align 8
  %127 = add i64 %126, 1
  store i64 %127, i64* %125, align 8
  %128 = load i16, i16* @_ZN4base8internal11ThreadCache28largest_active_bucket_index_E, align 2
  %129 = zext i16 %128 to i64
  %130 = icmp ugt i64 %123, %129
  br i1 %130, label %131, label %136, !prof !7

131:                                              ; preds = %120
  %132 = getelementptr inbounds i8, i8* %117, i64 1496
  %133 = bitcast i8* %132 to i64*
  %134 = load i64, i64* %133, align 8
  %135 = add i64 %134, 1
  store i64 %135, i64* %133, align 8
  br label %172

136:                                              ; preds = %120
  %137 = getelementptr inbounds %"class.base::internal::ThreadCache", %"class.base::internal::ThreadCache"* %118, i64 0, i32 0, i64 %123
  %138 = bitcast %"struct.base::internal::ThreadCache::Bucket"* %137 to i64*
  %139 = load i64, i64* %138, align 8
  %140 = tail call i64 @llvm.bswap.i64(i64 %139) #17
  %141 = inttoptr i64 %140 to %"struct.base::internal::EncodedPartitionFreelistEntry"*
  %142 = bitcast %"struct.std::__1::__hash_node.242"* %1 to %"struct.base::internal::EncodedPartitionFreelistEntry"**
  store %"struct.base::internal::EncodedPartitionFreelistEntry"* %141, %"struct.base::internal::EncodedPartitionFreelistEntry"** %142, align 8
  %143 = xor i64 %140, -1
  %144 = getelementptr inbounds %"struct.std::__1::__hash_node.242", %"struct.std::__1::__hash_node.242"* %1, i64 0, i32 1
  store i64 %143, i64* %144, align 8
  %145 = bitcast %"struct.base::internal::ThreadCache::Bucket"* %137 to %"struct.std::__1::__hash_node.242"**
  store %"struct.std::__1::__hash_node.242"* %1, %"struct.std::__1::__hash_node.242"** %145, align 8
  %146 = getelementptr inbounds %"class.base::internal::ThreadCache", %"class.base::internal::ThreadCache"* %118, i64 0, i32 0, i64 %123, i32 1
  %147 = load i8, i8* %146, align 8
  %148 = add i8 %147, 1
  store i8 %148, i8* %146, align 8
  %149 = getelementptr inbounds %"class.base::internal::ThreadCache", %"class.base::internal::ThreadCache"* %118, i64 0, i32 0, i64 %123, i32 3
  %150 = load i16, i16* %149, align 2
  %151 = zext i16 %150 to i64
  %152 = getelementptr inbounds i8, i8* %117, i64 1424
  %153 = bitcast i8* %152 to i64*
  %154 = load i64, i64* %153, align 8
  %155 = add i64 %154, %151
  store i64 %155, i64* %153, align 8
  %156 = getelementptr inbounds i8, i8* %117, i64 1488
  %157 = bitcast i8* %156 to i64*
  %158 = load i64, i64* %157, align 8
  %159 = add i64 %158, 1
  store i64 %159, i64* %157, align 8
  %160 = getelementptr inbounds %"class.base::internal::ThreadCache", %"class.base::internal::ThreadCache"* %118, i64 0, i32 0, i64 %123, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %161 = load atomic i8, i8* %160 monotonic, align 1
  %162 = icmp ugt i8 %148, %161
  br i1 %162, label %163, label %166, !prof !7

163:                                              ; preds = %136
  %164 = lshr i8 %161, 1
  %165 = zext i8 %164 to i64
  tail call void @_ZN4base8internal11ThreadCache11ClearBucketERNS1_6BucketEm(%"class.base::internal::ThreadCache"* %118, %"struct.base::internal::ThreadCache::Bucket"* dereferenceable(16) %137, i64 %165) #17
  br label %166

166:                                              ; preds = %163, %136
  %167 = getelementptr inbounds i8, i8* %117, i64 1432
  %168 = load atomic i8, i8* %167 monotonic, align 1
  %169 = and i8 %168, 1
  %170 = icmp eq i8 %169, 0
  br i1 %170, label %239, label %171, !prof !6

171:                                              ; preds = %166
  tail call void @_ZN4base8internal11ThreadCache13PurgeInternalEv(%"class.base::internal::ThreadCache"* %118) #17
  br label %239

172:                                              ; preds = %131, %115, %105, %101
  %173 = bitcast %"struct.base::internal::DeferredUnmap"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %173) #17
  %174 = getelementptr inbounds %"struct.base::internal::DeferredUnmap", %"struct.base::internal::DeferredUnmap"* %4, i64 0, i32 0
  %175 = getelementptr inbounds %"struct.base::internal::DeferredUnmap", %"struct.base::internal::DeferredUnmap"* %4, i64 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %173, i8 0, i64 16, i1 false) #17
  %176 = getelementptr inbounds %"struct.base::PartitionRoot", %"struct.base::PartitionRoot"* %28, i64 0, i32 8
  %177 = getelementptr inbounds %"class.base::internal::MaybeSpinLock", %"class.base::internal::MaybeSpinLock"* %176, i64 0, i32 0
  %178 = getelementptr inbounds %"class.base::internal::MaybeSpinLock", %"class.base::internal::MaybeSpinLock"* %176, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  br label %179

179:                                              ; preds = %191, %172
  %180 = phi i32 [ 0, %172 ], [ %192, %191 ]
  %181 = phi i32 [ 1, %172 ], [ %195, %191 ]
  %182 = load atomic i32, i32* %178 monotonic, align 4
  %183 = icmp eq i32 %182, 0
  br i1 %183, label %184, label %187, !prof !9

184:                                              ; preds = %179
  %185 = cmpxchg weak i32* %178, i32 0, i32 1 acquire monotonic
  %186 = extractvalue { i32, i1 } %185, 1
  br i1 %186, label %202, label %187, !prof !6

187:                                              ; preds = %184, %179
  %188 = icmp sgt i32 %181, 0
  br i1 %188, label %197, label %191

189:                                              ; preds = %197
  %190 = add i32 %181, %180
  br label %191

191:                                              ; preds = %189, %187
  %192 = phi i32 [ %180, %187 ], [ %190, %189 ]
  %193 = shl i32 %181, 1
  %194 = icmp slt i32 %193, 64
  %195 = select i1 %194, i32 %193, i32 64
  %196 = icmp slt i32 %192, 1000
  br i1 %196, label %179, label %201

197:                                              ; preds = %187, %197
  %198 = phi i32 [ %199, %197 ], [ 0, %187 ]
  tail call void asm sideeffect "pause", "~{dirflag},~{fpsr},~{flags}"() #17, !srcloc !10
  %199 = add nuw nsw i32 %198, 1
  %200 = icmp eq i32 %199, %181
  br i1 %200, label %189, label %197

201:                                              ; preds = %191
  tail call void @_ZN4base8internal13SpinningMutex8LockSlowEv(%"class.base::internal::SpinningMutex"* %177) #17
  br label %202

202:                                              ; preds = %184, %201
  %203 = bitcast %union.anon.123* %21 to i8**
  %204 = load i8*, i8** %203, align 1
  %205 = icmp eq i8* %204, %6
  br i1 %205, label %208, label %206, !prof !7

206:                                              ; preds = %202
  %207 = ptrtoint i8* %204 to i64
  br label %211

208:                                              ; preds = %202
  tail call void @_ZN7logging8RawCheckEPKc(i8* getelementptr inbounds ([105 x i8], [105 x i8]* @.str.15, i64 0, i64 0)) #17
  %209 = getelementptr inbounds %union.anon.123, %union.anon.123* %21, i64 0, i32 0, i32 0
  %210 = load i64, i64* %209, align 1
  br label %211

211:                                              ; preds = %208, %206
  %212 = phi i64 [ %207, %206 ], [ %210, %208 ]
  %213 = tail call i64 @llvm.bswap.i64(i64 %212) #17
  %214 = inttoptr i64 %213 to %"struct.base::internal::EncodedPartitionFreelistEntry"*
  %215 = bitcast %"struct.std::__1::__hash_node.242"* %1 to %"struct.base::internal::EncodedPartitionFreelistEntry"**
  store %"struct.base::internal::EncodedPartitionFreelistEntry"* %214, %"struct.base::internal::EncodedPartitionFreelistEntry"** %215, align 8
  %216 = xor i64 %213, -1
  %217 = getelementptr inbounds %"struct.std::__1::__hash_node.242", %"struct.std::__1::__hash_node.242"* %1, i64 0, i32 1
  store i64 %216, i64* %217, align 8
  %218 = bitcast %union.anon.123* %21 to %"struct.std::__1::__hash_node.242"**
  store %"struct.std::__1::__hash_node.242"* %1, %"struct.std::__1::__hash_node.242"** %218, align 1
  %219 = getelementptr inbounds %"struct.base::internal::PartitionPage", %"struct.base::internal::PartitionPage"* %16, i64 %20, i32 0, i32 1, i64 16
  %220 = bitcast i8* %219 to i16*
  %221 = load i16, i16* %220, align 1
  %222 = add i16 %221, -1
  store i16 %222, i16* %220, align 1
  %223 = icmp slt i16 %222, 1
  br i1 %223, label %224, label %228, !prof !7

224:                                              ; preds = %211
  %225 = tail call { i8*, i64 } @_ZN4base8internal16SlotSpanMetadataILb1EE12FreeSlowPathEv(%"struct.base::internal::SlotSpanMetadata"* %22) #17
  %226 = extractvalue { i8*, i64 } %225, 0
  %227 = extractvalue { i8*, i64 } %225, 1
  br label %228

228:                                              ; preds = %224, %211
  %229 = phi i8* [ %226, %224 ], [ null, %211 ]
  %230 = phi i64 [ %227, %224 ], [ 0, %211 ]
  store i8* %229, i8** %174, align 8
  store i64 %230, i64* %175, align 8
  %231 = atomicrmw xchg i32* %178, i32 0 release
  %232 = icmp eq i32 %231, 2
  br i1 %232, label %233, label %234, !prof !7

233:                                              ; preds = %228
  tail call void @_ZN4base8internal13SpinningMutex9FutexWakeEv(%"class.base::internal::SpinningMutex"* %177) #17
  br label %234

234:                                              ; preds = %233, %228
  %235 = load i8*, i8** %174, align 8
  %236 = icmp eq i8* %235, null
  br i1 %236, label %238, label %237, !prof !6

237:                                              ; preds = %234
  call void @_ZN4base8internal13DeferredUnmap5UnmapEv(%"struct.base::internal::DeferredUnmap"* nonnull %4) #17
  br label %238

238:                                              ; preds = %237, %234
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %173) #17
  br label %239

239:                                              ; preds = %3, %96, %97, %100, %166, %171, %238
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal17MetadataAllocatorIPNSt3__116__hash_node_baseIPNS2_11__hash_nodeINS2_17__hash_value_typeIiPvEES6_EEEEE10deallocateEPSB_m(%"class.base::internal::MetadataAllocator.74"*, %"struct.std::__1::__hash_node_base.69"**, i64) local_unnamed_addr #3 comdat align 2 {
  %4 = alloca %"struct.base::internal::DeferredUnmap", align 8
  %5 = tail call dereferenceable(5408) %"struct.base::PartitionRoot"* @_ZN4base8internal23PCScanMetadataAllocatorEv() #17
  %6 = bitcast %"struct.std::__1::__hash_node_base.69"** %1 to i8*
  %7 = icmp eq %"struct.std::__1::__hash_node_base.69"** %1, null
  br i1 %7, label %241, label %8, !prof !7

8:                                                ; preds = %3
  tail call void @llvm.prefetch(i8* nonnull %6, i32 0, i32 3, i32 1) #17
  %9 = ptrtoint %"struct.std::__1::__hash_node_base.69"** %1 to i64
  %10 = and i64 %9, -2097152
  %11 = or i64 %10, 4096
  %12 = inttoptr i64 %11 to i8*
  %13 = lshr i64 %9, 9
  %14 = and i64 %13, 4064
  %15 = getelementptr inbounds i8, i8* %12, i64 %14
  %16 = bitcast i8* %15 to %"struct.base::internal::PartitionPage"*
  %17 = getelementptr inbounds i8, i8* %15, i64 30
  %18 = load i8, i8* %17, align 2
  %19 = zext i8 %18 to i64
  %20 = sub nsw i64 0, %19
  %21 = getelementptr inbounds %"struct.base::internal::PartitionPage", %"struct.base::internal::PartitionPage"* %16, i64 %20, i32 0
  %22 = bitcast %union.anon.123* %21 to %"struct.base::internal::SlotSpanMetadata"*
  %23 = bitcast %union.anon.123* %21 to i8*
  tail call void @llvm.prefetch(i8* %23, i32 0, i32 3, i32 1) #17
  %24 = ptrtoint %union.anon.123* %21 to i64
  %25 = and i64 %24, -4096
  %26 = inttoptr i64 %25 to %"struct.base::internal::PartitionSuperPageExtentEntry"*
  %27 = getelementptr inbounds %"struct.base::internal::PartitionSuperPageExtentEntry", %"struct.base::internal::PartitionSuperPageExtentEntry"* %26, i64 0, i32 0
  %28 = load %"struct.base::PartitionRoot"*, %"struct.base::PartitionRoot"** %27, align 4096
  %29 = getelementptr inbounds %"struct.base::PartitionRoot", %"struct.base::PartitionRoot"* %28, i64 0, i32 0
  %30 = load i8, i8* %29, align 8
  %31 = icmp eq i8 %30, 2
  br i1 %31, label %32, label %101, !prof !7

32:                                               ; preds = %8
  %33 = load atomic i8, i8* getelementptr inbounds (%"class.base::internal::PCScan", %"class.base::internal::PCScan"* @_ZN4base8internal6PCScan9instance_E, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0) acquire, align 8
  %34 = icmp eq i8 %33, 2
  br i1 %34, label %35, label %36, !prof !7

35:                                               ; preds = %32
  tail call void @_ZN4base8internal6PCScan8JoinScanEv() #17
  br label %36

36:                                               ; preds = %35, %32
  %37 = getelementptr inbounds %"struct.base::internal::PartitionPage", %"struct.base::internal::PartitionPage"* %16, i64 %20, i32 0, i32 1, i64 8
  %38 = bitcast i8* %37 to %"struct.base::internal::PartitionBucket"**
  %39 = load %"struct.base::internal::PartitionBucket"*, %"struct.base::internal::PartitionBucket"** %38, align 1
  %40 = getelementptr inbounds %"struct.base::PartitionRoot", %"struct.base::PartitionRoot"* %28, i64 0, i32 10, i64 0
  %41 = icmp ugt %"struct.base::internal::PartitionBucket"* %40, %39
  %42 = getelementptr inbounds %"struct.base::PartitionRoot", %"struct.base::PartitionRoot"* %28, i64 0, i32 11
  %43 = icmp ult %"struct.base::internal::PartitionBucket"* %42, %39
  %44 = or i1 %41, %43
  br i1 %44, label %101, label %45, !prof !7

45:                                               ; preds = %36
  %46 = getelementptr inbounds %"struct.base::internal::PartitionPage", %"struct.base::internal::PartitionPage"* %16, i64 %20, i32 0, i32 1, i64 21
  %47 = load i8, i8* %46, align 1, !range !5
  %48 = icmp eq i8 %47, 0
  br i1 %48, label %49, label %53, !prof !6

49:                                               ; preds = %45
  %50 = getelementptr inbounds %"struct.base::internal::PartitionBucket", %"struct.base::internal::PartitionBucket"* %39, i64 0, i32 3
  %51 = load i32, i32* %50, align 8
  %52 = zext i32 %51 to i64
  br label %60

53:                                               ; preds = %45
  %54 = bitcast %union.anon.123* %21 to %"struct.base::internal::PartitionPage"*
  %55 = getelementptr inbounds %"struct.base::internal::PartitionPage", %"struct.base::internal::PartitionPage"* %54, i64 1, i32 0, i32 0, i32 0
  %56 = load i64, i64* %55, align 1
  %57 = getelementptr inbounds %"struct.base::internal::PartitionBucket", %"struct.base::internal::PartitionBucket"* %39, i64 0, i32 3
  %58 = load i32, i32* %57, align 8
  %59 = zext i32 %58 to i64
  br label %60

60:                                               ; preds = %53, %49
  %61 = phi i64 [ %52, %49 ], [ %59, %53 ]
  %62 = phi i64 [ %52, %49 ], [ %56, %53 ]
  %63 = load atomic i64, i64* getelementptr inbounds (%"class.base::internal::PCScan", %"class.base::internal::PCScan"* @_ZN4base8internal6PCScan9instance_E, i64 0, i32 0, i32 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 8
  %64 = inttoptr i64 %10 to i8*
  %65 = and i64 %63, 1
  %66 = icmp eq i64 %65, 0
  %67 = select i1 %66, i64 16384, i64 32768
  %68 = getelementptr inbounds i8, i8* %64, i64 %67
  %69 = bitcast i8* %68 to %"class.base::internal::ObjectBitmap"*
  %70 = lshr i64 %9, 4
  %71 = lshr i64 %9, 10
  %72 = and i64 %71, 2047
  %73 = and i64 %70, 63
  %74 = shl i64 1, %73
  %75 = getelementptr inbounds %"class.base::internal::ObjectBitmap", %"class.base::internal::ObjectBitmap"* %69, i64 0, i32 0, i32 0, i64 %72
  %76 = atomicrmw or i64* %75, i64 %74 monotonic
  %77 = and i64 %76, %74
  %78 = icmp eq i64 %77, 0
  br i1 %78, label %80, label %79, !prof !6

79:                                               ; preds = %60
  notail call void @_ZN4base8internal17DoubleFreeAttemptEv() #18
  unreachable

80:                                               ; preds = %60
  %81 = atomicrmw add i64* getelementptr inbounds (%"class.base::internal::PCScan", %"class.base::internal::PCScan"* @_ZN4base8internal6PCScan9instance_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0), i64 %61 monotonic
  %82 = add i64 %81, %61
  %83 = load atomic i64, i64* getelementptr inbounds (%"class.base::internal::PCScan", %"class.base::internal::PCScan"* @_ZN4base8internal6PCScan9instance_E, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 8
  %84 = icmp ugt i64 %82, %83
  br i1 %84, label %85, label %91

85:                                               ; preds = %80
  %86 = load %"class.base::internal::PCScanSchedulingBackend"*, %"class.base::internal::PCScanSchedulingBackend"** getelementptr inbounds (%"class.base::internal::PCScan", %"class.base::internal::PCScan"* @_ZN4base8internal6PCScan9instance_E, i64 0, i32 0, i32 2), align 8
  %87 = bitcast %"class.base::internal::PCScanSchedulingBackend"* %86 to i1 (%"class.base::internal::PCScanSchedulingBackend"*)***
  %88 = load i1 (%"class.base::internal::PCScanSchedulingBackend"*)**, i1 (%"class.base::internal::PCScanSchedulingBackend"*)*** %87, align 8
  %89 = load i1 (%"class.base::internal::PCScanSchedulingBackend"*)*, i1 (%"class.base::internal::PCScanSchedulingBackend"*)** %88, align 8
  %90 = tail call zeroext i1 %89(%"class.base::internal::PCScanSchedulingBackend"* %86) #17
  br label %91

91:                                               ; preds = %85, %80
  %92 = phi i1 [ false, %80 ], [ %90, %85 ]
  %93 = load i8, i8* getelementptr inbounds (%"class.base::internal::PCScan", %"class.base::internal::PCScan"* @_ZN4base8internal6PCScan9instance_E, i64 0, i32 2), align 1
  %94 = icmp eq i8 %93, 1
  br i1 %94, label %95, label %96

95:                                               ; preds = %91
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 1 %6, i8 0, i64 %62, i1 false) #17
  br label %96

96:                                               ; preds = %95, %91
  br i1 %92, label %97, label %241, !prof !7

97:                                               ; preds = %96
  %98 = load atomic i8, i8* getelementptr inbounds (%"class.base::internal::PCScan", %"class.base::internal::PCScan"* @_ZN4base8internal6PCScan9instance_E, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0) monotonic, align 8
  %99 = icmp eq i8 %98, 0
  br i1 %99, label %100, label %241

100:                                              ; preds = %97
  tail call void @_ZN4base8internal6PCScan11PerformScanENS1_14InvocationModeE(%"class.base::internal::PCScan"* nonnull @_ZN4base8internal6PCScan9instance_E, i32 1) #17
  br label %241

101:                                              ; preds = %36, %8
  %102 = getelementptr inbounds %"struct.base::PartitionRoot", %"struct.base::PartitionRoot"* %28, i64 0, i32 2
  %103 = load i8, i8* %102, align 2, !range !5
  %104 = icmp eq i8 %103, 0
  br i1 %104, label %173, label %105, !prof !7

105:                                              ; preds = %101
  %106 = getelementptr inbounds %"struct.base::internal::PartitionPage", %"struct.base::internal::PartitionPage"* %16, i64 %20, i32 0, i32 1, i64 8
  %107 = bitcast i8* %106 to %"struct.base::internal::PartitionBucket"**
  %108 = load %"struct.base::internal::PartitionBucket"*, %"struct.base::internal::PartitionBucket"** %107, align 1
  %109 = getelementptr inbounds %"struct.base::PartitionRoot", %"struct.base::PartitionRoot"* %28, i64 0, i32 10, i64 0
  %110 = icmp ule %"struct.base::internal::PartitionBucket"* %109, %108
  %111 = getelementptr inbounds %"struct.base::PartitionRoot", %"struct.base::PartitionRoot"* %28, i64 0, i32 11
  %112 = icmp uge %"struct.base::internal::PartitionBucket"* %111, %108
  %113 = and i1 %112, %110
  %114 = ptrtoint %"struct.base::internal::PartitionBucket"* %108 to i64
  br i1 %113, label %115, label %173, !prof !6

115:                                              ; preds = %105
  %116 = load i32, i32* @_ZN4base8internal18g_thread_cache_keyE, align 4
  %117 = tail call i8* @pthread_getspecific(i32 %116) #17
  %118 = bitcast i8* %117 to %"class.base::internal::ThreadCache"*
  %119 = icmp ugt i8* %117, inttoptr (i64 1 to i8*)
  br i1 %119, label %120, label %173, !prof !6

120:                                              ; preds = %115
  %121 = ptrtoint %"struct.base::internal::PartitionBucket"* %109 to i64
  %122 = sub i64 %114, %121
  %123 = sdiv exact i64 %122, 40
  %124 = getelementptr inbounds i8, i8* %117, i64 1480
  %125 = bitcast i8* %124 to i64*
  %126 = load i64, i64* %125, align 8
  %127 = add i64 %126, 1
  store i64 %127, i64* %125, align 8
  %128 = load i16, i16* @_ZN4base8internal11ThreadCache28largest_active_bucket_index_E, align 2
  %129 = zext i16 %128 to i64
  %130 = icmp ugt i64 %123, %129
  br i1 %130, label %131, label %136, !prof !7

131:                                              ; preds = %120
  %132 = getelementptr inbounds i8, i8* %117, i64 1496
  %133 = bitcast i8* %132 to i64*
  %134 = load i64, i64* %133, align 8
  %135 = add i64 %134, 1
  store i64 %135, i64* %133, align 8
  br label %173

136:                                              ; preds = %120
  %137 = getelementptr inbounds %"class.base::internal::ThreadCache", %"class.base::internal::ThreadCache"* %118, i64 0, i32 0, i64 %123
  %138 = bitcast %"struct.base::internal::ThreadCache::Bucket"* %137 to i64*
  %139 = load i64, i64* %138, align 8
  %140 = tail call i64 @llvm.bswap.i64(i64 %139) #17
  %141 = inttoptr i64 %140 to %"struct.base::internal::EncodedPartitionFreelistEntry"*
  %142 = bitcast %"struct.std::__1::__hash_node_base.69"** %1 to %"struct.base::internal::EncodedPartitionFreelistEntry"**
  store %"struct.base::internal::EncodedPartitionFreelistEntry"* %141, %"struct.base::internal::EncodedPartitionFreelistEntry"** %142, align 8
  %143 = xor i64 %140, -1
  %144 = getelementptr inbounds %"struct.std::__1::__hash_node_base.69"*, %"struct.std::__1::__hash_node_base.69"** %1, i64 1
  %145 = bitcast %"struct.std::__1::__hash_node_base.69"** %144 to i64*
  store i64 %143, i64* %145, align 8
  %146 = bitcast %"struct.base::internal::ThreadCache::Bucket"* %137 to %"struct.std::__1::__hash_node_base.69"***
  store %"struct.std::__1::__hash_node_base.69"** %1, %"struct.std::__1::__hash_node_base.69"*** %146, align 8
  %147 = getelementptr inbounds %"class.base::internal::ThreadCache", %"class.base::internal::ThreadCache"* %118, i64 0, i32 0, i64 %123, i32 1
  %148 = load i8, i8* %147, align 8
  %149 = add i8 %148, 1
  store i8 %149, i8* %147, align 8
  %150 = getelementptr inbounds %"class.base::internal::ThreadCache", %"class.base::internal::ThreadCache"* %118, i64 0, i32 0, i64 %123, i32 3
  %151 = load i16, i16* %150, align 2
  %152 = zext i16 %151 to i64
  %153 = getelementptr inbounds i8, i8* %117, i64 1424
  %154 = bitcast i8* %153 to i64*
  %155 = load i64, i64* %154, align 8
  %156 = add i64 %155, %152
  store i64 %156, i64* %154, align 8
  %157 = getelementptr inbounds i8, i8* %117, i64 1488
  %158 = bitcast i8* %157 to i64*
  %159 = load i64, i64* %158, align 8
  %160 = add i64 %159, 1
  store i64 %160, i64* %158, align 8
  %161 = getelementptr inbounds %"class.base::internal::ThreadCache", %"class.base::internal::ThreadCache"* %118, i64 0, i32 0, i64 %123, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %162 = load atomic i8, i8* %161 monotonic, align 1
  %163 = icmp ugt i8 %149, %162
  br i1 %163, label %164, label %167, !prof !7

164:                                              ; preds = %136
  %165 = lshr i8 %162, 1
  %166 = zext i8 %165 to i64
  tail call void @_ZN4base8internal11ThreadCache11ClearBucketERNS1_6BucketEm(%"class.base::internal::ThreadCache"* %118, %"struct.base::internal::ThreadCache::Bucket"* dereferenceable(16) %137, i64 %166) #17
  br label %167

167:                                              ; preds = %164, %136
  %168 = getelementptr inbounds i8, i8* %117, i64 1432
  %169 = load atomic i8, i8* %168 monotonic, align 1
  %170 = and i8 %169, 1
  %171 = icmp eq i8 %170, 0
  br i1 %171, label %241, label %172, !prof !6

172:                                              ; preds = %167
  tail call void @_ZN4base8internal11ThreadCache13PurgeInternalEv(%"class.base::internal::ThreadCache"* %118) #17
  br label %241

173:                                              ; preds = %131, %115, %105, %101
  %174 = bitcast %"struct.base::internal::DeferredUnmap"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %174) #17
  %175 = getelementptr inbounds %"struct.base::internal::DeferredUnmap", %"struct.base::internal::DeferredUnmap"* %4, i64 0, i32 0
  %176 = getelementptr inbounds %"struct.base::internal::DeferredUnmap", %"struct.base::internal::DeferredUnmap"* %4, i64 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %174, i8 0, i64 16, i1 false) #17
  %177 = getelementptr inbounds %"struct.base::PartitionRoot", %"struct.base::PartitionRoot"* %28, i64 0, i32 8
  %178 = getelementptr inbounds %"class.base::internal::MaybeSpinLock", %"class.base::internal::MaybeSpinLock"* %177, i64 0, i32 0
  %179 = getelementptr inbounds %"class.base::internal::MaybeSpinLock", %"class.base::internal::MaybeSpinLock"* %177, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  br label %180

180:                                              ; preds = %192, %173
  %181 = phi i32 [ 0, %173 ], [ %193, %192 ]
  %182 = phi i32 [ 1, %173 ], [ %196, %192 ]
  %183 = load atomic i32, i32* %179 monotonic, align 4
  %184 = icmp eq i32 %183, 0
  br i1 %184, label %185, label %188, !prof !9

185:                                              ; preds = %180
  %186 = cmpxchg weak i32* %179, i32 0, i32 1 acquire monotonic
  %187 = extractvalue { i32, i1 } %186, 1
  br i1 %187, label %203, label %188, !prof !6

188:                                              ; preds = %185, %180
  %189 = icmp sgt i32 %182, 0
  br i1 %189, label %198, label %192

190:                                              ; preds = %198
  %191 = add i32 %182, %181
  br label %192

192:                                              ; preds = %190, %188
  %193 = phi i32 [ %181, %188 ], [ %191, %190 ]
  %194 = shl i32 %182, 1
  %195 = icmp slt i32 %194, 64
  %196 = select i1 %195, i32 %194, i32 64
  %197 = icmp slt i32 %193, 1000
  br i1 %197, label %180, label %202

198:                                              ; preds = %188, %198
  %199 = phi i32 [ %200, %198 ], [ 0, %188 ]
  tail call void asm sideeffect "pause", "~{dirflag},~{fpsr},~{flags}"() #17, !srcloc !10
  %200 = add nuw nsw i32 %199, 1
  %201 = icmp eq i32 %200, %182
  br i1 %201, label %190, label %198

202:                                              ; preds = %192
  tail call void @_ZN4base8internal13SpinningMutex8LockSlowEv(%"class.base::internal::SpinningMutex"* %178) #17
  br label %203

203:                                              ; preds = %185, %202
  %204 = bitcast %union.anon.123* %21 to i8**
  %205 = load i8*, i8** %204, align 1
  %206 = icmp eq i8* %205, %6
  br i1 %206, label %209, label %207, !prof !7

207:                                              ; preds = %203
  %208 = ptrtoint i8* %205 to i64
  br label %212

209:                                              ; preds = %203
  tail call void @_ZN7logging8RawCheckEPKc(i8* getelementptr inbounds ([105 x i8], [105 x i8]* @.str.15, i64 0, i64 0)) #17
  %210 = getelementptr inbounds %union.anon.123, %union.anon.123* %21, i64 0, i32 0, i32 0
  %211 = load i64, i64* %210, align 1
  br label %212

212:                                              ; preds = %209, %207
  %213 = phi i64 [ %208, %207 ], [ %211, %209 ]
  %214 = tail call i64 @llvm.bswap.i64(i64 %213) #17
  %215 = inttoptr i64 %214 to %"struct.base::internal::EncodedPartitionFreelistEntry"*
  %216 = bitcast %"struct.std::__1::__hash_node_base.69"** %1 to %"struct.base::internal::EncodedPartitionFreelistEntry"**
  store %"struct.base::internal::EncodedPartitionFreelistEntry"* %215, %"struct.base::internal::EncodedPartitionFreelistEntry"** %216, align 8
  %217 = xor i64 %214, -1
  %218 = getelementptr inbounds %"struct.std::__1::__hash_node_base.69"*, %"struct.std::__1::__hash_node_base.69"** %1, i64 1
  %219 = bitcast %"struct.std::__1::__hash_node_base.69"** %218 to i64*
  store i64 %217, i64* %219, align 8
  %220 = bitcast %union.anon.123* %21 to %"struct.std::__1::__hash_node_base.69"***
  store %"struct.std::__1::__hash_node_base.69"** %1, %"struct.std::__1::__hash_node_base.69"*** %220, align 1
  %221 = getelementptr inbounds %"struct.base::internal::PartitionPage", %"struct.base::internal::PartitionPage"* %16, i64 %20, i32 0, i32 1, i64 16
  %222 = bitcast i8* %221 to i16*
  %223 = load i16, i16* %222, align 1
  %224 = add i16 %223, -1
  store i16 %224, i16* %222, align 1
  %225 = icmp slt i16 %224, 1
  br i1 %225, label %226, label %230, !prof !7

226:                                              ; preds = %212
  %227 = tail call { i8*, i64 } @_ZN4base8internal16SlotSpanMetadataILb1EE12FreeSlowPathEv(%"struct.base::internal::SlotSpanMetadata"* %22) #17
  %228 = extractvalue { i8*, i64 } %227, 0
  %229 = extractvalue { i8*, i64 } %227, 1
  br label %230

230:                                              ; preds = %226, %212
  %231 = phi i8* [ %228, %226 ], [ null, %212 ]
  %232 = phi i64 [ %229, %226 ], [ 0, %212 ]
  store i8* %231, i8** %175, align 8
  store i64 %232, i64* %176, align 8
  %233 = atomicrmw xchg i32* %179, i32 0 release
  %234 = icmp eq i32 %233, 2
  br i1 %234, label %235, label %236, !prof !7

235:                                              ; preds = %230
  tail call void @_ZN4base8internal13SpinningMutex9FutexWakeEv(%"class.base::internal::SpinningMutex"* %178) #17
  br label %236

236:                                              ; preds = %235, %230
  %237 = load i8*, i8** %175, align 8
  %238 = icmp eq i8* %237, null
  br i1 %238, label %240, label %239, !prof !6

239:                                              ; preds = %236
  call void @_ZN4base8internal13DeferredUnmap5UnmapEv(%"struct.base::internal::DeferredUnmap"* nonnull %4) #17
  br label %240

240:                                              ; preds = %239, %236
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %174) #17
  br label %241

241:                                              ; preds = %3, %96, %97, %100, %167, %172, %240
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN4base8internal34AllocatedOnPCScanMetadataPartitionnwEm(i64) local_unnamed_addr #3 comdat align 2 {
  %2 = alloca i8, align 1
  %3 = alloca i64, align 8
  %4 = tail call dereferenceable(5408) %"struct.base::PartitionRoot"* @_ZN4base8internal23PCScanMetadataAllocatorEv() #17
  %5 = tail call i64 @llvm.ctlz.i64(i64 %0, i1 false) #17, !range !4
  %6 = sub nuw nsw i64 64, %5
  %7 = and i64 %6, 255
  %8 = getelementptr inbounds [65 x i8], [65 x i8]* @_ZN4base12_GLOBAL__N_116kOrderIndexShiftE, i64 0, i64 %7
  %9 = load i8, i8* %8, align 1
  %10 = zext i8 %9 to i64
  %11 = lshr i64 %0, %10
  %12 = and i64 %11, 7
  %13 = getelementptr inbounds [65 x i64], [65 x i64]* @_ZN4base12_GLOBAL__N_118kOrderSubIndexMaskE, i64 0, i64 %7
  %14 = load i64, i64* %13, align 8
  %15 = and i64 %14, %0
  %16 = shl nuw nsw i64 %7, 3
  %17 = or i64 %12, %16
  %18 = icmp ne i64 %15, 0
  %19 = zext i1 %18 to i64
  %20 = add nuw nsw i64 %17, %19
  %21 = getelementptr inbounds { [128 x i64], [521 x i16] }, { [128 x i64], [521 x i16] }* @_ZZN4base8internal17BucketIndexLookup8GetIndexEmE6lookup, i64 0, i32 1, i64 %20
  %22 = load i16, i16* %21, align 2
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %2) #17
  store i8 0, i8* %2, align 1
  %23 = bitcast i64* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %23) #17
  store i64 -6148914691236517206, i64* %3, align 8
  %24 = getelementptr inbounds %"struct.base::PartitionRoot", %"struct.base::PartitionRoot"* %4, i64 0, i32 0
  %25 = load i8, i8* %24, align 8
  %26 = icmp eq i8 %25, 2
  br i1 %26, label %27, label %31

27:                                               ; preds = %1
  %28 = load atomic i8, i8* getelementptr inbounds (%"class.base::internal::PCScan", %"class.base::internal::PCScan"* @_ZN4base8internal6PCScan9instance_E, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0) acquire, align 8
  %29 = icmp eq i8 %28, 2
  br i1 %29, label %30, label %31, !prof !7

30:                                               ; preds = %27
  tail call void @_ZN4base8internal6PCScan8JoinScanEv() #17
  br label %31

31:                                               ; preds = %30, %27, %1
  %32 = getelementptr inbounds %"struct.base::PartitionRoot", %"struct.base::PartitionRoot"* %4, i64 0, i32 2
  %33 = load i8, i8* %32, align 2, !range !5
  %34 = icmp eq i8 %33, 0
  br i1 %34, label %183, label %35, !prof !19

35:                                               ; preds = %31
  %36 = load i32, i32* @_ZN4base8internal18g_thread_cache_keyE, align 4
  %37 = tail call i8* @pthread_getspecific(i32 %36) #17
  %38 = bitcast i8* %37 to %"class.base::internal::ThreadCache"*
  %39 = icmp ugt i8* %37, inttoptr (i64 1 to i8*)
  br i1 %39, label %40, label %110, !prof !6

40:                                               ; preds = %35
  %41 = zext i16 %22 to i64
  %42 = getelementptr inbounds %"class.base::internal::ThreadCache", %"class.base::internal::ThreadCache"* %38, i64 0, i32 3, i32 12, i64 %41
  %43 = load i64, i64* %42, align 8
  %44 = add i64 %43, 1
  store i64 %44, i64* %42, align 8
  %45 = getelementptr inbounds i8, i8* %37, i64 1440
  %46 = bitcast i8* %45 to i64*
  %47 = load i64, i64* %46, align 8
  %48 = add i64 %47, 1
  store i64 %48, i64* %46, align 8
  %49 = load i16, i16* @_ZN4base8internal11ThreadCache28largest_active_bucket_index_E, align 2
  %50 = icmp ult i16 %49, %22
  br i1 %50, label %51, label %60, !prof !7

51:                                               ; preds = %40
  %52 = getelementptr inbounds i8, i8* %37, i64 1472
  %53 = bitcast i8* %52 to i64*
  %54 = load i64, i64* %53, align 8
  %55 = add i64 %54, 1
  store i64 %55, i64* %53, align 8
  %56 = getelementptr inbounds i8, i8* %37, i64 1456
  %57 = bitcast i8* %56 to i64*
  %58 = load i64, i64* %57, align 8
  %59 = add i64 %58, 1
  store i64 %59, i64* %57, align 8
  br label %117

60:                                               ; preds = %40
  %61 = getelementptr inbounds %"class.base::internal::ThreadCache", %"class.base::internal::ThreadCache"* %38, i64 0, i32 0, i64 %41, i32 0
  %62 = load %"class.base::internal::PartitionFreelistEntry"*, %"class.base::internal::PartitionFreelistEntry"** %61, align 8
  %63 = icmp eq %"class.base::internal::PartitionFreelistEntry"* %62, null
  br i1 %63, label %69, label %64, !prof !7

64:                                               ; preds = %60
  %65 = getelementptr inbounds i8, i8* %37, i64 1448
  %66 = bitcast i8* %65 to i64*
  %67 = load i64, i64* %66, align 8
  %68 = add i64 %67, 1
  store i64 %68, i64* %66, align 8
  br label %77

69:                                               ; preds = %60
  %70 = getelementptr inbounds i8, i8* %37, i64 1456
  %71 = bitcast i8* %70 to <2 x i64>*
  %72 = load <2 x i64>, <2 x i64>* %71, align 8
  %73 = add <2 x i64> %72, <i64 1, i64 1>
  %74 = bitcast i8* %70 to <2 x i64>*
  store <2 x i64> %73, <2 x i64>* %74, align 8
  tail call void @_ZN4base8internal11ThreadCache10FillBucketEm(%"class.base::internal::ThreadCache"* %38, i64 %41) #17
  %75 = load %"class.base::internal::PartitionFreelistEntry"*, %"class.base::internal::PartitionFreelistEntry"** %61, align 8
  %76 = icmp eq %"class.base::internal::PartitionFreelistEntry"* %75, null
  br i1 %76, label %117, label %77, !prof !7

77:                                               ; preds = %69, %64
  %78 = phi %"class.base::internal::PartitionFreelistEntry"* [ %75, %69 ], [ %62, %64 ]
  %79 = getelementptr inbounds %"class.base::internal::PartitionFreelistEntry", %"class.base::internal::PartitionFreelistEntry"* %78, i64 0, i32 0
  %80 = load %"struct.base::internal::EncodedPartitionFreelistEntry"*, %"struct.base::internal::EncodedPartitionFreelistEntry"** %79, align 8
  %81 = icmp eq %"struct.base::internal::EncodedPartitionFreelistEntry"* %80, null
  %82 = ptrtoint %"struct.base::internal::EncodedPartitionFreelistEntry"* %80 to i64
  br i1 %81, label %83, label %85

83:                                               ; preds = %77
  %84 = tail call i64 @llvm.bswap.i64(i64 %82) #17
  br label %94

85:                                               ; preds = %77
  %86 = xor i64 %82, -1
  %87 = getelementptr inbounds %"class.base::internal::PartitionFreelistEntry", %"class.base::internal::PartitionFreelistEntry"* %78, i64 0, i32 1
  %88 = load i64, i64* %87, align 8
  %89 = icmp eq i64 %88, %86
  br i1 %89, label %91, label %90, !prof !6

90:                                               ; preds = %85
  tail call fastcc void @_ZN4base8internal12_GLOBAL__N_126FreelistCorruptionDetectedEv() #18
  unreachable

91:                                               ; preds = %85
  %92 = tail call i64 @llvm.bswap.i64(i64 %82) #17
  %93 = inttoptr i64 %92 to i8*
  tail call void @llvm.prefetch(i8* nonnull %93, i32 0, i32 3, i32 1) #17
  br label %94

94:                                               ; preds = %91, %83
  %95 = phi i64 [ %84, %83 ], [ %92, %91 ]
  %96 = inttoptr i64 %95 to %"class.base::internal::PartitionFreelistEntry"*
  %97 = getelementptr inbounds %"class.base::internal::ThreadCache", %"class.base::internal::ThreadCache"* %38, i64 0, i32 0, i64 %41, i32 1
  %98 = load i8, i8* %97, align 8
  %99 = add i8 %98, -1
  store i8 %99, i8* %97, align 8
  store %"class.base::internal::PartitionFreelistEntry"* %96, %"class.base::internal::PartitionFreelistEntry"** %61, align 8
  %100 = getelementptr inbounds %"class.base::internal::ThreadCache", %"class.base::internal::ThreadCache"* %38, i64 0, i32 0, i64 %41, i32 3
  %101 = load i16, i16* %100, align 2
  %102 = zext i16 %101 to i64
  store i64 %102, i64* %3, align 8
  %103 = load i16, i16* %100, align 2
  %104 = zext i16 %103 to i64
  %105 = getelementptr inbounds i8, i8* %37, i64 1424
  %106 = bitcast i8* %105 to i64*
  %107 = load i64, i64* %106, align 8
  %108 = sub i64 %107, %104
  store i64 %108, i64* %106, align 8
  %109 = bitcast %"class.base::internal::PartitionFreelistEntry"* %78 to i8*
  br label %112

110:                                              ; preds = %35
  %111 = call i8* @_ZN4base13PartitionRootILb1EE28MaybeInitThreadCacheAndAllocEtPm(%"struct.base::PartitionRoot"* %4, i16 zeroext %22, i64* nonnull %3) #17
  br label %112

112:                                              ; preds = %110, %94
  %113 = phi i8* [ %111, %110 ], [ %109, %94 ]
  %114 = icmp eq i8* %113, null
  br i1 %114, label %115, label %252, !prof !7

115:                                              ; preds = %112
  %116 = zext i16 %22 to i64
  br label %117

117:                                              ; preds = %115, %69, %51
  %118 = phi i64 [ %116, %115 ], [ %41, %69 ], [ %41, %51 ]
  %119 = getelementptr inbounds %"struct.base::PartitionRoot", %"struct.base::PartitionRoot"* %4, i64 0, i32 10, i64 %118
  %120 = getelementptr inbounds %"struct.base::PartitionRoot", %"struct.base::PartitionRoot"* %4, i64 0, i32 8
  %121 = getelementptr inbounds %"class.base::internal::MaybeSpinLock", %"class.base::internal::MaybeSpinLock"* %120, i64 0, i32 0
  %122 = getelementptr inbounds %"class.base::internal::MaybeSpinLock", %"class.base::internal::MaybeSpinLock"* %120, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  br label %123

123:                                              ; preds = %135, %117
  %124 = phi i32 [ 0, %117 ], [ %136, %135 ]
  %125 = phi i32 [ 1, %117 ], [ %139, %135 ]
  %126 = load atomic i32, i32* %122 monotonic, align 4
  %127 = icmp eq i32 %126, 0
  br i1 %127, label %128, label %131, !prof !9

128:                                              ; preds = %123
  %129 = cmpxchg weak i32* %122, i32 0, i32 1 acquire monotonic
  %130 = extractvalue { i32, i1 } %129, 1
  br i1 %130, label %146, label %131, !prof !6

131:                                              ; preds = %128, %123
  %132 = icmp sgt i32 %125, 0
  br i1 %132, label %141, label %135

133:                                              ; preds = %141
  %134 = add i32 %125, %124
  br label %135

135:                                              ; preds = %133, %131
  %136 = phi i32 [ %124, %131 ], [ %134, %133 ]
  %137 = shl i32 %125, 1
  %138 = icmp slt i32 %137, 64
  %139 = select i1 %138, i32 %137, i32 64
  %140 = icmp slt i32 %136, 1000
  br i1 %140, label %123, label %145

141:                                              ; preds = %131, %141
  %142 = phi i32 [ %143, %141 ], [ 0, %131 ]
  call void asm sideeffect "pause", "~{dirflag},~{fpsr},~{flags}"() #17, !srcloc !10
  %143 = add nuw nsw i32 %142, 1
  %144 = icmp eq i32 %143, %125
  br i1 %144, label %133, label %141

145:                                              ; preds = %135
  call void @_ZN4base8internal13SpinningMutex8LockSlowEv(%"class.base::internal::SpinningMutex"* %121) #17
  br label %146

146:                                              ; preds = %128, %145
  %147 = getelementptr inbounds %"struct.base::internal::PartitionBucket", %"struct.base::internal::PartitionBucket"* %119, i64 0, i32 0
  %148 = load %"struct.base::internal::SlotSpanMetadata"*, %"struct.base::internal::SlotSpanMetadata"** %147, align 8
  %149 = bitcast %"struct.base::internal::SlotSpanMetadata"* %148 to i8**
  %150 = load i8*, i8** %149, align 1
  %151 = icmp eq i8* %150, null
  br i1 %151, label %176, label %152, !prof !7

152:                                              ; preds = %146
  %153 = getelementptr inbounds %"struct.base::internal::SlotSpanMetadata", %"struct.base::internal::SlotSpanMetadata"* %148, i64 0, i32 0
  store i8 0, i8* %2, align 1
  %154 = bitcast i8* %150 to %"struct.base::internal::EncodedPartitionFreelistEntry"**
  %155 = load %"struct.base::internal::EncodedPartitionFreelistEntry"*, %"struct.base::internal::EncodedPartitionFreelistEntry"** %154, align 8
  %156 = icmp eq %"struct.base::internal::EncodedPartitionFreelistEntry"* %155, null
  %157 = ptrtoint %"struct.base::internal::EncodedPartitionFreelistEntry"* %155 to i64
  br i1 %156, label %158, label %160

158:                                              ; preds = %152
  %159 = call i64 @llvm.bswap.i64(i64 %157) #17
  br label %170

160:                                              ; preds = %152
  %161 = xor i64 %157, -1
  %162 = getelementptr inbounds i8, i8* %150, i64 8
  %163 = bitcast i8* %162 to i64*
  %164 = load i64, i64* %163, align 8
  %165 = icmp eq i64 %164, %161
  br i1 %165, label %167, label %166, !prof !6

166:                                              ; preds = %160
  call fastcc void @_ZN4base8internal12_GLOBAL__N_126FreelistCorruptionDetectedEv() #18
  unreachable

167:                                              ; preds = %160
  %168 = call i64 @llvm.bswap.i64(i64 %157) #17
  %169 = inttoptr i64 %168 to i8*
  call void @llvm.prefetch(i8* nonnull %169, i32 0, i32 3, i32 1) #17
  br label %170

170:                                              ; preds = %167, %158
  %171 = phi i64 [ %159, %158 ], [ %168, %167 ]
  %172 = inttoptr i64 %171 to %"class.base::internal::PartitionFreelistEntry"*
  store %"class.base::internal::PartitionFreelistEntry"* %172, %"class.base::internal::PartitionFreelistEntry"** %153, align 1
  %173 = getelementptr inbounds %"struct.base::internal::SlotSpanMetadata", %"struct.base::internal::SlotSpanMetadata"* %148, i64 0, i32 3
  %174 = load i16, i16* %173, align 1
  %175 = add i16 %174, 1
  store i16 %175, i16* %173, align 1
  br label %178

176:                                              ; preds = %146
  %177 = call i8* @_ZN4base8internal15PartitionBucketILb1EE13SlowPathAllocEPNS_13PartitionRootILb1EEEimmPb(%"struct.base::internal::PartitionBucket"* %119, %"struct.base::PartitionRoot"* %4, i32 0, i64 %0, i64 16384, i8* nonnull %2) #17
  br label %178

178:                                              ; preds = %176, %170
  %179 = phi i8* [ %150, %170 ], [ %177, %176 ]
  %180 = atomicrmw xchg i32* %122, i32 0 release
  %181 = icmp eq i32 %180, 2
  br i1 %181, label %182, label %249, !prof !7

182:                                              ; preds = %178
  call void @_ZN4base8internal13SpinningMutex9FutexWakeEv(%"class.base::internal::SpinningMutex"* %121) #17
  br label %249

183:                                              ; preds = %31
  %184 = zext i16 %22 to i64
  %185 = getelementptr inbounds %"struct.base::PartitionRoot", %"struct.base::PartitionRoot"* %4, i64 0, i32 10, i64 %184
  %186 = getelementptr inbounds %"struct.base::PartitionRoot", %"struct.base::PartitionRoot"* %4, i64 0, i32 8
  %187 = getelementptr inbounds %"class.base::internal::MaybeSpinLock", %"class.base::internal::MaybeSpinLock"* %186, i64 0, i32 0
  %188 = getelementptr inbounds %"class.base::internal::MaybeSpinLock", %"class.base::internal::MaybeSpinLock"* %186, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  br label %189

189:                                              ; preds = %201, %183
  %190 = phi i32 [ 0, %183 ], [ %202, %201 ]
  %191 = phi i32 [ 1, %183 ], [ %205, %201 ]
  %192 = load atomic i32, i32* %188 monotonic, align 4
  %193 = icmp eq i32 %192, 0
  br i1 %193, label %194, label %197, !prof !9

194:                                              ; preds = %189
  %195 = cmpxchg weak i32* %188, i32 0, i32 1 acquire monotonic
  %196 = extractvalue { i32, i1 } %195, 1
  br i1 %196, label %212, label %197, !prof !6

197:                                              ; preds = %194, %189
  %198 = icmp sgt i32 %191, 0
  br i1 %198, label %207, label %201

199:                                              ; preds = %207
  %200 = add i32 %191, %190
  br label %201

201:                                              ; preds = %199, %197
  %202 = phi i32 [ %190, %197 ], [ %200, %199 ]
  %203 = shl i32 %191, 1
  %204 = icmp slt i32 %203, 64
  %205 = select i1 %204, i32 %203, i32 64
  %206 = icmp slt i32 %202, 1000
  br i1 %206, label %189, label %211

207:                                              ; preds = %197, %207
  %208 = phi i32 [ %209, %207 ], [ 0, %197 ]
  tail call void asm sideeffect "pause", "~{dirflag},~{fpsr},~{flags}"() #17, !srcloc !10
  %209 = add nuw nsw i32 %208, 1
  %210 = icmp eq i32 %209, %191
  br i1 %210, label %199, label %207

211:                                              ; preds = %201
  tail call void @_ZN4base8internal13SpinningMutex8LockSlowEv(%"class.base::internal::SpinningMutex"* %187) #17
  br label %212

212:                                              ; preds = %194, %211
  %213 = getelementptr inbounds %"struct.base::internal::PartitionBucket", %"struct.base::internal::PartitionBucket"* %185, i64 0, i32 0
  %214 = load %"struct.base::internal::SlotSpanMetadata"*, %"struct.base::internal::SlotSpanMetadata"** %213, align 8
  %215 = bitcast %"struct.base::internal::SlotSpanMetadata"* %214 to i8**
  %216 = load i8*, i8** %215, align 1
  %217 = icmp eq i8* %216, null
  br i1 %217, label %242, label %218, !prof !7

218:                                              ; preds = %212
  %219 = getelementptr inbounds %"struct.base::internal::SlotSpanMetadata", %"struct.base::internal::SlotSpanMetadata"* %214, i64 0, i32 0
  store i8 0, i8* %2, align 1
  %220 = bitcast i8* %216 to %"struct.base::internal::EncodedPartitionFreelistEntry"**
  %221 = load %"struct.base::internal::EncodedPartitionFreelistEntry"*, %"struct.base::internal::EncodedPartitionFreelistEntry"** %220, align 8
  %222 = icmp eq %"struct.base::internal::EncodedPartitionFreelistEntry"* %221, null
  %223 = ptrtoint %"struct.base::internal::EncodedPartitionFreelistEntry"* %221 to i64
  br i1 %222, label %224, label %226

224:                                              ; preds = %218
  %225 = tail call i64 @llvm.bswap.i64(i64 %223) #17
  br label %236

226:                                              ; preds = %218
  %227 = xor i64 %223, -1
  %228 = getelementptr inbounds i8, i8* %216, i64 8
  %229 = bitcast i8* %228 to i64*
  %230 = load i64, i64* %229, align 8
  %231 = icmp eq i64 %230, %227
  br i1 %231, label %233, label %232, !prof !6

232:                                              ; preds = %226
  tail call fastcc void @_ZN4base8internal12_GLOBAL__N_126FreelistCorruptionDetectedEv() #18
  unreachable

233:                                              ; preds = %226
  %234 = tail call i64 @llvm.bswap.i64(i64 %223) #17
  %235 = inttoptr i64 %234 to i8*
  tail call void @llvm.prefetch(i8* nonnull %235, i32 0, i32 3, i32 1) #17
  br label %236

236:                                              ; preds = %233, %224
  %237 = phi i64 [ %225, %224 ], [ %234, %233 ]
  %238 = inttoptr i64 %237 to %"class.base::internal::PartitionFreelistEntry"*
  store %"class.base::internal::PartitionFreelistEntry"* %238, %"class.base::internal::PartitionFreelistEntry"** %219, align 1
  %239 = getelementptr inbounds %"struct.base::internal::SlotSpanMetadata", %"struct.base::internal::SlotSpanMetadata"* %214, i64 0, i32 3
  %240 = load i16, i16* %239, align 1
  %241 = add i16 %240, 1
  store i16 %241, i16* %239, align 1
  br label %244

242:                                              ; preds = %212
  %243 = call i8* @_ZN4base8internal15PartitionBucketILb1EE13SlowPathAllocEPNS_13PartitionRootILb1EEEimmPb(%"struct.base::internal::PartitionBucket"* %185, %"struct.base::PartitionRoot"* %4, i32 0, i64 %0, i64 16384, i8* nonnull %2) #17
  br label %244

244:                                              ; preds = %242, %236
  %245 = phi i8* [ %216, %236 ], [ %243, %242 ]
  %246 = atomicrmw xchg i32* %188, i32 0 release
  %247 = icmp eq i32 %246, 2
  br i1 %247, label %248, label %249, !prof !7

248:                                              ; preds = %244
  call void @_ZN4base8internal13SpinningMutex9FutexWakeEv(%"class.base::internal::SpinningMutex"* %187) #17
  br label %249

249:                                              ; preds = %248, %244, %182, %178
  %250 = phi i8* [ %179, %178 ], [ %179, %182 ], [ %245, %244 ], [ %245, %248 ]
  %251 = icmp eq i8* %250, null
  br i1 %251, label %254, label %252, !prof !7

252:                                              ; preds = %112, %249
  %253 = phi i8* [ %250, %249 ], [ %113, %112 ]
  br label %254

254:                                              ; preds = %249, %252
  %255 = phi i8* [ null, %249 ], [ %253, %252 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %23) #17
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %2) #17
  ret i8* %255
}

declare void @_ZN4base8internal25UserFaultFDWriteProtectorC1Ev(%"class.base::internal::UserFaultFDWriteProtector"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.std::__1::__hash_node_base.69"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeIiPvEENS_22__unordered_map_hasherIiS3_NS_4hashIiEENS_8equal_toIvEELb1EEENS_21__unordered_map_equalIiS3_S8_S6_Lb1EEEN4base8internal17MetadataAllocatorIS3_EEE25__emplace_unique_key_argsIiJNS_4pairIKiS2_EEEEENSI_INS_15__hash_iteratorIPNS_11__hash_nodeIS3_S2_EEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table.65"*, i32* dereferenceable(4), %"struct.std::__1::pair.117"* dereferenceable(16)) local_unnamed_addr #3 comdat align 2 {
  %4 = load i32, i32* %1, align 4
  %5 = sext i32 %4 to i64
  %6 = getelementptr inbounds %"class.std::__1::__hash_table.65", %"class.std::__1::__hash_table.65"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = icmp eq i64 %7, 0
  br i1 %8, label %53, label %9

9:                                                ; preds = %3
  %10 = tail call i64 @llvm.ctpop.i64(i64 %7) #17, !range !4
  %11 = icmp ugt i64 %10, 1
  br i1 %11, label %15, label %12

12:                                               ; preds = %9
  %13 = add i64 %7, -1
  %14 = and i64 %13, %5
  br label %19

15:                                               ; preds = %9
  %16 = icmp ugt i64 %7, %5
  br i1 %16, label %19, label %17

17:                                               ; preds = %15
  %18 = urem i64 %5, %7
  br label %19

19:                                               ; preds = %12, %15, %17
  %20 = phi i64 [ %14, %12 ], [ %18, %17 ], [ %5, %15 ]
  %21 = getelementptr inbounds %"class.std::__1::__hash_table.65", %"class.std::__1::__hash_table.65"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %22 = load %"struct.std::__1::__hash_node_base.69"**, %"struct.std::__1::__hash_node_base.69"*** %21, align 8
  %23 = getelementptr inbounds %"struct.std::__1::__hash_node_base.69"*, %"struct.std::__1::__hash_node_base.69"** %22, i64 %20
  %24 = load %"struct.std::__1::__hash_node_base.69"*, %"struct.std::__1::__hash_node_base.69"** %23, align 8
  %25 = icmp eq %"struct.std::__1::__hash_node_base.69"* %24, null
  br i1 %25, label %53, label %26

26:                                               ; preds = %19
  %27 = add i64 %7, -1
  br label %28

28:                                               ; preds = %26, %48
  %29 = phi %"struct.std::__1::__hash_node_base.69"* [ %31, %48 ], [ %24, %26 ]
  %30 = getelementptr inbounds %"struct.std::__1::__hash_node_base.69", %"struct.std::__1::__hash_node_base.69"* %29, i64 0, i32 0
  %31 = load %"struct.std::__1::__hash_node_base.69"*, %"struct.std::__1::__hash_node_base.69"** %30, align 8
  %32 = icmp eq %"struct.std::__1::__hash_node_base.69"* %31, null
  br i1 %32, label %53, label %33

33:                                               ; preds = %28
  %34 = getelementptr inbounds %"struct.std::__1::__hash_node_base.69", %"struct.std::__1::__hash_node_base.69"* %31, i64 1
  %35 = bitcast %"struct.std::__1::__hash_node_base.69"* %34 to i64*
  %36 = load i64, i64* %35, align 8
  %37 = icmp eq i64 %36, %5
  br i1 %37, label %48, label %38

38:                                               ; preds = %33
  br i1 %11, label %41, label %39

39:                                               ; preds = %38
  %40 = and i64 %36, %27
  br label %45

41:                                               ; preds = %38
  %42 = icmp ult i64 %36, %7
  br i1 %42, label %45, label %43

43:                                               ; preds = %41
  %44 = urem i64 %36, %7
  br label %45

45:                                               ; preds = %39, %41, %43
  %46 = phi i64 [ %40, %39 ], [ %44, %43 ], [ %36, %41 ]
  %47 = icmp eq i64 %46, %20
  br i1 %47, label %48, label %53

48:                                               ; preds = %33, %45
  %49 = getelementptr inbounds %"struct.std::__1::__hash_node_base.69", %"struct.std::__1::__hash_node_base.69"* %31, i64 2
  %50 = bitcast %"struct.std::__1::__hash_node_base.69"* %49 to i32*
  %51 = load i32, i32* %50, align 4
  %52 = icmp eq i32 %51, %4
  br i1 %52, label %142, label %28

53:                                               ; preds = %28, %45, %19, %3
  %54 = phi i64 [ %20, %19 ], [ -6148914691236517206, %3 ], [ %20, %45 ], [ %20, %28 ]
  %55 = getelementptr inbounds %"class.std::__1::__hash_table.65", %"class.std::__1::__hash_table.65"* %0, i64 0, i32 1
  %56 = bitcast %"class.std::__1::__compressed_pair.76"* %55 to %"class.base::internal::MetadataAllocator.79"*
  %57 = tail call %"struct.std::__1::__hash_node.242"* @_ZN4base8internal17MetadataAllocatorINSt3__111__hash_nodeINS2_17__hash_value_typeIiPvEES5_EEE8allocateEm(%"class.base::internal::MetadataAllocator.79"* %56, i64 1) #17, !noalias !32
  %58 = getelementptr inbounds %"struct.std::__1::__hash_node.242", %"struct.std::__1::__hash_node.242"* %57, i64 0, i32 2, i32 0
  %59 = bitcast %"struct.std::__1::pair.117"* %58 to i8*
  %60 = bitcast %"struct.std::__1::pair.117"* %2 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %59, i8* align 8 %60, i64 16, i1 false) #17, !noalias !32
  %61 = getelementptr inbounds %"struct.std::__1::__hash_node.242", %"struct.std::__1::__hash_node.242"* %57, i64 0, i32 1
  store i64 %5, i64* %61, align 8, !noalias !32
  %62 = getelementptr inbounds %"struct.std::__1::__hash_node.242", %"struct.std::__1::__hash_node.242"* %57, i64 0, i32 0, i32 0
  store %"struct.std::__1::__hash_node_base.69"* null, %"struct.std::__1::__hash_node_base.69"** %62, align 8, !noalias !32
  %63 = getelementptr inbounds %"class.std::__1::__hash_table.65", %"class.std::__1::__hash_table.65"* %0, i64 0, i32 2, i32 0, i32 0
  %64 = load i64, i64* %63, align 8
  %65 = add i64 %64, 1
  %66 = uitofp i64 %65 to float
  %67 = uitofp i64 %7 to float
  %68 = getelementptr inbounds %"class.std::__1::__hash_table.65", %"class.std::__1::__hash_table.65"* %0, i64 0, i32 3, i32 0, i32 0
  %69 = load float, float* %68, align 4
  %70 = fmul float %69, %67
  %71 = fcmp olt float %70, %66
  %72 = or i1 %8, %71
  br i1 %72, label %73, label %96

73:                                               ; preds = %53
  %74 = shl i64 %7, 1
  %75 = icmp ult i64 %7, 3
  %76 = tail call i64 @llvm.ctpop.i64(i64 %7) #17, !range !4
  %77 = icmp ugt i64 %76, 1
  %78 = or i1 %75, %77
  %79 = zext i1 %78 to i64
  %80 = or i64 %74, %79
  %81 = fdiv float %66, %69
  %82 = tail call float @llvm.ceil.f32(float %81) #17
  %83 = fptoui float %82 to i64
  %84 = icmp ult i64 %80, %83
  %85 = select i1 %84, i64 %83, i64 %80
  tail call void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIiPvEENS_22__unordered_map_hasherIiS3_NS_4hashIiEENS_8equal_toIvEELb1EEENS_21__unordered_map_equalIiS3_S8_S6_Lb1EEEN4base8internal17MetadataAllocatorIS3_EEE6rehashEm(%"class.std::__1::__hash_table.65"* %0, i64 %85)
  %86 = load i64, i64* %6, align 8
  %87 = tail call i64 @llvm.ctpop.i64(i64 %86) #17, !range !4
  %88 = icmp ugt i64 %87, 1
  br i1 %88, label %92, label %89

89:                                               ; preds = %73
  %90 = add i64 %86, -1
  %91 = and i64 %90, %5
  br label %96

92:                                               ; preds = %73
  %93 = icmp ugt i64 %86, %5
  br i1 %93, label %96, label %94

94:                                               ; preds = %92
  %95 = urem i64 %5, %86
  br label %96

96:                                               ; preds = %94, %92, %89, %53
  %97 = phi i64 [ %7, %53 ], [ %86, %89 ], [ %86, %92 ], [ %86, %94 ]
  %98 = phi i64 [ %54, %53 ], [ %91, %89 ], [ %5, %92 ], [ %95, %94 ]
  %99 = getelementptr inbounds %"class.std::__1::__hash_table.65", %"class.std::__1::__hash_table.65"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %100 = load %"struct.std::__1::__hash_node_base.69"**, %"struct.std::__1::__hash_node_base.69"*** %99, align 8
  %101 = getelementptr inbounds %"struct.std::__1::__hash_node_base.69"*, %"struct.std::__1::__hash_node_base.69"** %100, i64 %98
  %102 = load %"struct.std::__1::__hash_node_base.69"*, %"struct.std::__1::__hash_node_base.69"** %101, align 8
  %103 = icmp eq %"struct.std::__1::__hash_node_base.69"* %102, null
  br i1 %103, label %104, label %132

104:                                              ; preds = %96
  %105 = getelementptr inbounds %"class.std::__1::__compressed_pair.76", %"class.std::__1::__compressed_pair.76"* %55, i64 0, i32 0, i32 0
  %106 = getelementptr inbounds %"class.std::__1::__compressed_pair.76", %"class.std::__1::__compressed_pair.76"* %55, i64 0, i32 0, i32 0, i32 0
  %107 = bitcast %"class.std::__1::__compressed_pair.76"* %55 to i64*
  %108 = load i64, i64* %107, align 8
  %109 = bitcast %"struct.std::__1::__hash_node.242"* %57 to i64*
  store i64 %108, i64* %109, align 8
  %110 = getelementptr inbounds %"struct.std::__1::__hash_node.242", %"struct.std::__1::__hash_node.242"* %57, i64 0, i32 0
  store %"struct.std::__1::__hash_node_base.69"* %110, %"struct.std::__1::__hash_node_base.69"** %106, align 8
  %111 = load %"struct.std::__1::__hash_node_base.69"**, %"struct.std::__1::__hash_node_base.69"*** %99, align 8
  %112 = getelementptr inbounds %"struct.std::__1::__hash_node_base.69"*, %"struct.std::__1::__hash_node_base.69"** %111, i64 %98
  store %"struct.std::__1::__hash_node_base.69"* %105, %"struct.std::__1::__hash_node_base.69"** %112, align 8
  %113 = load %"struct.std::__1::__hash_node_base.69"*, %"struct.std::__1::__hash_node_base.69"** %62, align 8
  %114 = icmp eq %"struct.std::__1::__hash_node_base.69"* %113, null
  br i1 %114, label %138, label %115

115:                                              ; preds = %104
  %116 = getelementptr inbounds %"struct.std::__1::__hash_node_base.69", %"struct.std::__1::__hash_node_base.69"* %113, i64 1
  %117 = bitcast %"struct.std::__1::__hash_node_base.69"* %116 to i64*
  %118 = load i64, i64* %117, align 8
  %119 = tail call i64 @llvm.ctpop.i64(i64 %97) #17, !range !4
  %120 = icmp ugt i64 %119, 1
  br i1 %120, label %124, label %121

121:                                              ; preds = %115
  %122 = add i64 %97, -1
  %123 = and i64 %118, %122
  br label %128

124:                                              ; preds = %115
  %125 = icmp ult i64 %118, %97
  br i1 %125, label %128, label %126

126:                                              ; preds = %124
  %127 = urem i64 %118, %97
  br label %128

128:                                              ; preds = %121, %124, %126
  %129 = phi i64 [ %123, %121 ], [ %127, %126 ], [ %118, %124 ]
  %130 = load %"struct.std::__1::__hash_node_base.69"**, %"struct.std::__1::__hash_node_base.69"*** %99, align 8
  %131 = getelementptr inbounds %"struct.std::__1::__hash_node_base.69"*, %"struct.std::__1::__hash_node_base.69"** %130, i64 %129
  store %"struct.std::__1::__hash_node_base.69"* %110, %"struct.std::__1::__hash_node_base.69"** %131, align 8
  br label %138

132:                                              ; preds = %96
  %133 = getelementptr inbounds %"struct.std::__1::__hash_node_base.69", %"struct.std::__1::__hash_node_base.69"* %102, i64 0, i32 0
  %134 = bitcast %"struct.std::__1::__hash_node_base.69"* %102 to i64*
  %135 = load i64, i64* %134, align 8
  %136 = bitcast %"struct.std::__1::__hash_node.242"* %57 to i64*
  store i64 %135, i64* %136, align 8
  %137 = getelementptr inbounds %"struct.std::__1::__hash_node.242", %"struct.std::__1::__hash_node.242"* %57, i64 0, i32 0
  store %"struct.std::__1::__hash_node_base.69"* %137, %"struct.std::__1::__hash_node_base.69"** %133, align 8
  br label %138

138:                                              ; preds = %132, %128, %104
  %139 = getelementptr inbounds %"struct.std::__1::__hash_node.242", %"struct.std::__1::__hash_node.242"* %57, i64 0, i32 0
  %140 = load i64, i64* %63, align 8
  %141 = add i64 %140, 1
  store i64 %141, i64* %63, align 8
  br label %142

142:                                              ; preds = %48, %138
  %143 = phi i8 [ 1, %138 ], [ 0, %48 ]
  %144 = phi %"struct.std::__1::__hash_node_base.69"* [ %139, %138 ], [ %31, %48 ]
  %145 = insertvalue { %"struct.std::__1::__hash_node_base.69"*, i8 } undef, %"struct.std::__1::__hash_node_base.69"* %144, 0
  %146 = insertvalue { %"struct.std::__1::__hash_node_base.69"*, i8 } %145, i8 %143, 1
  ret { %"struct.std::__1::__hash_node_base.69"*, i8 } %146
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIiPvEENS_22__unordered_map_hasherIiS3_NS_4hashIiEENS_8equal_toIvEELb1EEENS_21__unordered_map_equalIiS3_S8_S6_Lb1EEEN4base8internal17MetadataAllocatorIS3_EEE6rehashEm(%"class.std::__1::__hash_table.65"*, i64) local_unnamed_addr #3 comdat align 2 {
  %3 = icmp eq i64 %1, 1
  br i1 %3, label %9, label %4

4:                                                ; preds = %2
  %5 = tail call i64 @llvm.ctpop.i64(i64 %1), !range !4
  %6 = icmp ugt i64 %5, 1
  br i1 %6, label %7, label %9

7:                                                ; preds = %4
  %8 = tail call i64 @_ZNSt3__112__next_primeEm(i64 %1) #17
  br label %9

9:                                                ; preds = %2, %4, %7
  %10 = phi i64 [ %8, %7 ], [ %1, %4 ], [ 2, %2 ]
  %11 = getelementptr inbounds %"class.std::__1::__hash_table.65", %"class.std::__1::__hash_table.65"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %12 = load i64, i64* %11, align 8
  %13 = icmp ugt i64 %10, %12
  br i1 %13, label %14, label %15

14:                                               ; preds = %9
  tail call void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIiPvEENS_22__unordered_map_hasherIiS3_NS_4hashIiEENS_8equal_toIvEELb1EEENS_21__unordered_map_equalIiS3_S8_S6_Lb1EEEN4base8internal17MetadataAllocatorIS3_EEE8__rehashEm(%"class.std::__1::__hash_table.65"* %0, i64 %10)
  br label %45

15:                                               ; preds = %9
  %16 = icmp ult i64 %10, %12
  br i1 %16, label %17, label %45

17:                                               ; preds = %15
  %18 = icmp ugt i64 %12, 2
  %19 = tail call i64 @llvm.ctpop.i64(i64 %12) #17, !range !4
  %20 = icmp ult i64 %19, 2
  %21 = and i1 %18, %20
  %22 = getelementptr inbounds %"class.std::__1::__hash_table.65", %"class.std::__1::__hash_table.65"* %0, i64 0, i32 2, i32 0, i32 0
  %23 = load i64, i64* %22, align 8
  %24 = uitofp i64 %23 to float
  %25 = getelementptr inbounds %"class.std::__1::__hash_table.65", %"class.std::__1::__hash_table.65"* %0, i64 0, i32 3, i32 0, i32 0
  %26 = load float, float* %25, align 4
  %27 = fdiv float %24, %26
  %28 = tail call float @llvm.ceil.f32(float %27) #17
  %29 = fptoui float %28 to i64
  br i1 %21, label %30, label %37

30:                                               ; preds = %17
  %31 = icmp ult i64 %29, 2
  br i1 %31, label %39, label %32

32:                                               ; preds = %30
  %33 = add i64 %29, -1
  %34 = tail call i64 @llvm.ctlz.i64(i64 %33, i1 true) #17, !range !4
  %35 = sub nuw nsw i64 64, %34
  %36 = shl i64 1, %35
  br label %39

37:                                               ; preds = %17
  %38 = tail call i64 @_ZNSt3__112__next_primeEm(i64 %29) #17
  br label %39

39:                                               ; preds = %32, %30, %37
  %40 = phi i64 [ %38, %37 ], [ %36, %32 ], [ %29, %30 ]
  %41 = icmp ult i64 %10, %40
  %42 = select i1 %41, i64 %40, i64 %10
  %43 = icmp ult i64 %42, %12
  br i1 %43, label %44, label %45

44:                                               ; preds = %39
  tail call void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIiPvEENS_22__unordered_map_hasherIiS3_NS_4hashIiEENS_8equal_toIvEELb1EEENS_21__unordered_map_equalIiS3_S8_S6_Lb1EEEN4base8internal17MetadataAllocatorIS3_EEE8__rehashEm(%"class.std::__1::__hash_table.65"* %0, i64 %42)
  br label %45

45:                                               ; preds = %15, %44, %39, %14
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.std::__1::__hash_node.242"* @_ZN4base8internal17MetadataAllocatorINSt3__111__hash_nodeINS2_17__hash_value_typeIiPvEES5_EEE8allocateEm(%"class.base::internal::MetadataAllocator.79"*, i64) local_unnamed_addr #3 comdat align 2 {
  %3 = alloca i8, align 1
  %4 = alloca i64, align 8
  %5 = tail call dereferenceable(5408) %"struct.base::PartitionRoot"* @_ZN4base8internal23PCScanMetadataAllocatorEv() #17
  %6 = shl i64 %1, 5
  %7 = tail call i64 @llvm.ctlz.i64(i64 %6, i1 false) #17, !range !4
  %8 = sub nuw nsw i64 64, %7
  %9 = and i64 %8, 255
  %10 = getelementptr inbounds [65 x i8], [65 x i8]* @_ZN4base12_GLOBAL__N_116kOrderIndexShiftE, i64 0, i64 %9
  %11 = load i8, i8* %10, align 1
  %12 = zext i8 %11 to i64
  %13 = lshr i64 %6, %12
  %14 = and i64 %13, 7
  %15 = getelementptr inbounds [65 x i64], [65 x i64]* @_ZN4base12_GLOBAL__N_118kOrderSubIndexMaskE, i64 0, i64 %9
  %16 = load i64, i64* %15, align 8
  %17 = and i64 %16, %6
  %18 = shl nuw nsw i64 %9, 3
  %19 = or i64 %14, %18
  %20 = icmp ne i64 %17, 0
  %21 = zext i1 %20 to i64
  %22 = add nuw nsw i64 %19, %21
  %23 = getelementptr inbounds { [128 x i64], [521 x i16] }, { [128 x i64], [521 x i16] }* @_ZZN4base8internal17BucketIndexLookup8GetIndexEmE6lookup, i64 0, i32 1, i64 %22
  %24 = load i16, i16* %23, align 2
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %3) #17
  store i8 0, i8* %3, align 1
  %25 = bitcast i64* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %25) #17
  store i64 -6148914691236517206, i64* %4, align 8
  %26 = getelementptr inbounds %"struct.base::PartitionRoot", %"struct.base::PartitionRoot"* %5, i64 0, i32 0
  %27 = load i8, i8* %26, align 8
  %28 = icmp eq i8 %27, 2
  br i1 %28, label %29, label %33

29:                                               ; preds = %2
  %30 = load atomic i8, i8* getelementptr inbounds (%"class.base::internal::PCScan", %"class.base::internal::PCScan"* @_ZN4base8internal6PCScan9instance_E, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0) acquire, align 8
  %31 = icmp eq i8 %30, 2
  br i1 %31, label %32, label %33, !prof !7

32:                                               ; preds = %29
  tail call void @_ZN4base8internal6PCScan8JoinScanEv() #17
  br label %33

33:                                               ; preds = %32, %29, %2
  %34 = getelementptr inbounds %"struct.base::PartitionRoot", %"struct.base::PartitionRoot"* %5, i64 0, i32 2
  %35 = load i8, i8* %34, align 2, !range !5
  %36 = icmp eq i8 %35, 0
  br i1 %36, label %185, label %37, !prof !19

37:                                               ; preds = %33
  %38 = load i32, i32* @_ZN4base8internal18g_thread_cache_keyE, align 4
  %39 = tail call i8* @pthread_getspecific(i32 %38) #17
  %40 = bitcast i8* %39 to %"class.base::internal::ThreadCache"*
  %41 = icmp ugt i8* %39, inttoptr (i64 1 to i8*)
  br i1 %41, label %42, label %112, !prof !6

42:                                               ; preds = %37
  %43 = zext i16 %24 to i64
  %44 = getelementptr inbounds %"class.base::internal::ThreadCache", %"class.base::internal::ThreadCache"* %40, i64 0, i32 3, i32 12, i64 %43
  %45 = load i64, i64* %44, align 8
  %46 = add i64 %45, 1
  store i64 %46, i64* %44, align 8
  %47 = getelementptr inbounds i8, i8* %39, i64 1440
  %48 = bitcast i8* %47 to i64*
  %49 = load i64, i64* %48, align 8
  %50 = add i64 %49, 1
  store i64 %50, i64* %48, align 8
  %51 = load i16, i16* @_ZN4base8internal11ThreadCache28largest_active_bucket_index_E, align 2
  %52 = icmp ult i16 %51, %24
  br i1 %52, label %53, label %62, !prof !7

53:                                               ; preds = %42
  %54 = getelementptr inbounds i8, i8* %39, i64 1472
  %55 = bitcast i8* %54 to i64*
  %56 = load i64, i64* %55, align 8
  %57 = add i64 %56, 1
  store i64 %57, i64* %55, align 8
  %58 = getelementptr inbounds i8, i8* %39, i64 1456
  %59 = bitcast i8* %58 to i64*
  %60 = load i64, i64* %59, align 8
  %61 = add i64 %60, 1
  store i64 %61, i64* %59, align 8
  br label %119

62:                                               ; preds = %42
  %63 = getelementptr inbounds %"class.base::internal::ThreadCache", %"class.base::internal::ThreadCache"* %40, i64 0, i32 0, i64 %43, i32 0
  %64 = load %"class.base::internal::PartitionFreelistEntry"*, %"class.base::internal::PartitionFreelistEntry"** %63, align 8
  %65 = icmp eq %"class.base::internal::PartitionFreelistEntry"* %64, null
  br i1 %65, label %71, label %66, !prof !7

66:                                               ; preds = %62
  %67 = getelementptr inbounds i8, i8* %39, i64 1448
  %68 = bitcast i8* %67 to i64*
  %69 = load i64, i64* %68, align 8
  %70 = add i64 %69, 1
  store i64 %70, i64* %68, align 8
  br label %79

71:                                               ; preds = %62
  %72 = getelementptr inbounds i8, i8* %39, i64 1456
  %73 = bitcast i8* %72 to <2 x i64>*
  %74 = load <2 x i64>, <2 x i64>* %73, align 8
  %75 = add <2 x i64> %74, <i64 1, i64 1>
  %76 = bitcast i8* %72 to <2 x i64>*
  store <2 x i64> %75, <2 x i64>* %76, align 8
  tail call void @_ZN4base8internal11ThreadCache10FillBucketEm(%"class.base::internal::ThreadCache"* %40, i64 %43) #17
  %77 = load %"class.base::internal::PartitionFreelistEntry"*, %"class.base::internal::PartitionFreelistEntry"** %63, align 8
  %78 = icmp eq %"class.base::internal::PartitionFreelistEntry"* %77, null
  br i1 %78, label %119, label %79, !prof !7

79:                                               ; preds = %71, %66
  %80 = phi %"class.base::internal::PartitionFreelistEntry"* [ %77, %71 ], [ %64, %66 ]
  %81 = getelementptr inbounds %"class.base::internal::PartitionFreelistEntry", %"class.base::internal::PartitionFreelistEntry"* %80, i64 0, i32 0
  %82 = load %"struct.base::internal::EncodedPartitionFreelistEntry"*, %"struct.base::internal::EncodedPartitionFreelistEntry"** %81, align 8
  %83 = icmp eq %"struct.base::internal::EncodedPartitionFreelistEntry"* %82, null
  %84 = ptrtoint %"struct.base::internal::EncodedPartitionFreelistEntry"* %82 to i64
  br i1 %83, label %85, label %87

85:                                               ; preds = %79
  %86 = tail call i64 @llvm.bswap.i64(i64 %84) #17
  br label %96

87:                                               ; preds = %79
  %88 = xor i64 %84, -1
  %89 = getelementptr inbounds %"class.base::internal::PartitionFreelistEntry", %"class.base::internal::PartitionFreelistEntry"* %80, i64 0, i32 1
  %90 = load i64, i64* %89, align 8
  %91 = icmp eq i64 %90, %88
  br i1 %91, label %93, label %92, !prof !6

92:                                               ; preds = %87
  tail call fastcc void @_ZN4base8internal12_GLOBAL__N_126FreelistCorruptionDetectedEv() #18
  unreachable

93:                                               ; preds = %87
  %94 = tail call i64 @llvm.bswap.i64(i64 %84) #17
  %95 = inttoptr i64 %94 to i8*
  tail call void @llvm.prefetch(i8* nonnull %95, i32 0, i32 3, i32 1) #17
  br label %96

96:                                               ; preds = %93, %85
  %97 = phi i64 [ %86, %85 ], [ %94, %93 ]
  %98 = inttoptr i64 %97 to %"class.base::internal::PartitionFreelistEntry"*
  %99 = getelementptr inbounds %"class.base::internal::ThreadCache", %"class.base::internal::ThreadCache"* %40, i64 0, i32 0, i64 %43, i32 1
  %100 = load i8, i8* %99, align 8
  %101 = add i8 %100, -1
  store i8 %101, i8* %99, align 8
  store %"class.base::internal::PartitionFreelistEntry"* %98, %"class.base::internal::PartitionFreelistEntry"** %63, align 8
  %102 = getelementptr inbounds %"class.base::internal::ThreadCache", %"class.base::internal::ThreadCache"* %40, i64 0, i32 0, i64 %43, i32 3
  %103 = load i16, i16* %102, align 2
  %104 = zext i16 %103 to i64
  store i64 %104, i64* %4, align 8
  %105 = load i16, i16* %102, align 2
  %106 = zext i16 %105 to i64
  %107 = getelementptr inbounds i8, i8* %39, i64 1424
  %108 = bitcast i8* %107 to i64*
  %109 = load i64, i64* %108, align 8
  %110 = sub i64 %109, %106
  store i64 %110, i64* %108, align 8
  %111 = bitcast %"class.base::internal::PartitionFreelistEntry"* %80 to i8*
  br label %114

112:                                              ; preds = %37
  %113 = call i8* @_ZN4base13PartitionRootILb1EE28MaybeInitThreadCacheAndAllocEtPm(%"struct.base::PartitionRoot"* %5, i16 zeroext %24, i64* nonnull %4) #17
  br label %114

114:                                              ; preds = %112, %96
  %115 = phi i8* [ %113, %112 ], [ %111, %96 ]
  %116 = icmp eq i8* %115, null
  br i1 %116, label %117, label %254, !prof !7

117:                                              ; preds = %114
  %118 = zext i16 %24 to i64
  br label %119

119:                                              ; preds = %117, %71, %53
  %120 = phi i64 [ %118, %117 ], [ %43, %71 ], [ %43, %53 ]
  %121 = getelementptr inbounds %"struct.base::PartitionRoot", %"struct.base::PartitionRoot"* %5, i64 0, i32 10, i64 %120
  %122 = getelementptr inbounds %"struct.base::PartitionRoot", %"struct.base::PartitionRoot"* %5, i64 0, i32 8
  %123 = getelementptr inbounds %"class.base::internal::MaybeSpinLock", %"class.base::internal::MaybeSpinLock"* %122, i64 0, i32 0
  %124 = getelementptr inbounds %"class.base::internal::MaybeSpinLock", %"class.base::internal::MaybeSpinLock"* %122, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  br label %125

125:                                              ; preds = %137, %119
  %126 = phi i32 [ 0, %119 ], [ %138, %137 ]
  %127 = phi i32 [ 1, %119 ], [ %141, %137 ]
  %128 = load atomic i32, i32* %124 monotonic, align 4
  %129 = icmp eq i32 %128, 0
  br i1 %129, label %130, label %133, !prof !9

130:                                              ; preds = %125
  %131 = cmpxchg weak i32* %124, i32 0, i32 1 acquire monotonic
  %132 = extractvalue { i32, i1 } %131, 1
  br i1 %132, label %148, label %133, !prof !6

133:                                              ; preds = %130, %125
  %134 = icmp sgt i32 %127, 0
  br i1 %134, label %143, label %137

135:                                              ; preds = %143
  %136 = add i32 %127, %126
  br label %137

137:                                              ; preds = %135, %133
  %138 = phi i32 [ %126, %133 ], [ %136, %135 ]
  %139 = shl i32 %127, 1
  %140 = icmp slt i32 %139, 64
  %141 = select i1 %140, i32 %139, i32 64
  %142 = icmp slt i32 %138, 1000
  br i1 %142, label %125, label %147

143:                                              ; preds = %133, %143
  %144 = phi i32 [ %145, %143 ], [ 0, %133 ]
  call void asm sideeffect "pause", "~{dirflag},~{fpsr},~{flags}"() #17, !srcloc !10
  %145 = add nuw nsw i32 %144, 1
  %146 = icmp eq i32 %145, %127
  br i1 %146, label %135, label %143

147:                                              ; preds = %137
  call void @_ZN4base8internal13SpinningMutex8LockSlowEv(%"class.base::internal::SpinningMutex"* %123) #17
  br label %148

148:                                              ; preds = %130, %147
  %149 = getelementptr inbounds %"struct.base::internal::PartitionBucket", %"struct.base::internal::PartitionBucket"* %121, i64 0, i32 0
  %150 = load %"struct.base::internal::SlotSpanMetadata"*, %"struct.base::internal::SlotSpanMetadata"** %149, align 8
  %151 = bitcast %"struct.base::internal::SlotSpanMetadata"* %150 to i8**
  %152 = load i8*, i8** %151, align 1
  %153 = icmp eq i8* %152, null
  br i1 %153, label %178, label %154, !prof !7

154:                                              ; preds = %148
  %155 = getelementptr inbounds %"struct.base::internal::SlotSpanMetadata", %"struct.base::internal::SlotSpanMetadata"* %150, i64 0, i32 0
  store i8 0, i8* %3, align 1
  %156 = bitcast i8* %152 to %"struct.base::internal::EncodedPartitionFreelistEntry"**
  %157 = load %"struct.base::internal::EncodedPartitionFreelistEntry"*, %"struct.base::internal::EncodedPartitionFreelistEntry"** %156, align 8
  %158 = icmp eq %"struct.base::internal::EncodedPartitionFreelistEntry"* %157, null
  %159 = ptrtoint %"struct.base::internal::EncodedPartitionFreelistEntry"* %157 to i64
  br i1 %158, label %160, label %162

160:                                              ; preds = %154
  %161 = call i64 @llvm.bswap.i64(i64 %159) #17
  br label %172

162:                                              ; preds = %154
  %163 = xor i64 %159, -1
  %164 = getelementptr inbounds i8, i8* %152, i64 8
  %165 = bitcast i8* %164 to i64*
  %166 = load i64, i64* %165, align 8
  %167 = icmp eq i64 %166, %163
  br i1 %167, label %169, label %168, !prof !6

168:                                              ; preds = %162
  call fastcc void @_ZN4base8internal12_GLOBAL__N_126FreelistCorruptionDetectedEv() #18
  unreachable

169:                                              ; preds = %162
  %170 = call i64 @llvm.bswap.i64(i64 %159) #17
  %171 = inttoptr i64 %170 to i8*
  call void @llvm.prefetch(i8* nonnull %171, i32 0, i32 3, i32 1) #17
  br label %172

172:                                              ; preds = %169, %160
  %173 = phi i64 [ %161, %160 ], [ %170, %169 ]
  %174 = inttoptr i64 %173 to %"class.base::internal::PartitionFreelistEntry"*
  store %"class.base::internal::PartitionFreelistEntry"* %174, %"class.base::internal::PartitionFreelistEntry"** %155, align 1
  %175 = getelementptr inbounds %"struct.base::internal::SlotSpanMetadata", %"struct.base::internal::SlotSpanMetadata"* %150, i64 0, i32 3
  %176 = load i16, i16* %175, align 1
  %177 = add i16 %176, 1
  store i16 %177, i16* %175, align 1
  br label %180

178:                                              ; preds = %148
  %179 = call i8* @_ZN4base8internal15PartitionBucketILb1EE13SlowPathAllocEPNS_13PartitionRootILb1EEEimmPb(%"struct.base::internal::PartitionBucket"* %121, %"struct.base::PartitionRoot"* %5, i32 0, i64 %6, i64 16384, i8* nonnull %3) #17
  br label %180

180:                                              ; preds = %178, %172
  %181 = phi i8* [ %152, %172 ], [ %179, %178 ]
  %182 = atomicrmw xchg i32* %124, i32 0 release
  %183 = icmp eq i32 %182, 2
  br i1 %183, label %184, label %251, !prof !7

184:                                              ; preds = %180
  call void @_ZN4base8internal13SpinningMutex9FutexWakeEv(%"class.base::internal::SpinningMutex"* %123) #17
  br label %251

185:                                              ; preds = %33
  %186 = zext i16 %24 to i64
  %187 = getelementptr inbounds %"struct.base::PartitionRoot", %"struct.base::PartitionRoot"* %5, i64 0, i32 10, i64 %186
  %188 = getelementptr inbounds %"struct.base::PartitionRoot", %"struct.base::PartitionRoot"* %5, i64 0, i32 8
  %189 = getelementptr inbounds %"class.base::internal::MaybeSpinLock", %"class.base::internal::MaybeSpinLock"* %188, i64 0, i32 0
  %190 = getelementptr inbounds %"class.base::internal::MaybeSpinLock", %"class.base::internal::MaybeSpinLock"* %188, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  br label %191

191:                                              ; preds = %203, %185
  %192 = phi i32 [ 0, %185 ], [ %204, %203 ]
  %193 = phi i32 [ 1, %185 ], [ %207, %203 ]
  %194 = load atomic i32, i32* %190 monotonic, align 4
  %195 = icmp eq i32 %194, 0
  br i1 %195, label %196, label %199, !prof !9

196:                                              ; preds = %191
  %197 = cmpxchg weak i32* %190, i32 0, i32 1 acquire monotonic
  %198 = extractvalue { i32, i1 } %197, 1
  br i1 %198, label %214, label %199, !prof !6

199:                                              ; preds = %196, %191
  %200 = icmp sgt i32 %193, 0
  br i1 %200, label %209, label %203

201:                                              ; preds = %209
  %202 = add i32 %193, %192
  br label %203

203:                                              ; preds = %201, %199
  %204 = phi i32 [ %192, %199 ], [ %202, %201 ]
  %205 = shl i32 %193, 1
  %206 = icmp slt i32 %205, 64
  %207 = select i1 %206, i32 %205, i32 64
  %208 = icmp slt i32 %204, 1000
  br i1 %208, label %191, label %213

209:                                              ; preds = %199, %209
  %210 = phi i32 [ %211, %209 ], [ 0, %199 ]
  tail call void asm sideeffect "pause", "~{dirflag},~{fpsr},~{flags}"() #17, !srcloc !10
  %211 = add nuw nsw i32 %210, 1
  %212 = icmp eq i32 %211, %193
  br i1 %212, label %201, label %209

213:                                              ; preds = %203
  tail call void @_ZN4base8internal13SpinningMutex8LockSlowEv(%"class.base::internal::SpinningMutex"* %189) #17
  br label %214

214:                                              ; preds = %196, %213
  %215 = getelementptr inbounds %"struct.base::internal::PartitionBucket", %"struct.base::internal::PartitionBucket"* %187, i64 0, i32 0
  %216 = load %"struct.base::internal::SlotSpanMetadata"*, %"struct.base::internal::SlotSpanMetadata"** %215, align 8
  %217 = bitcast %"struct.base::internal::SlotSpanMetadata"* %216 to i8**
  %218 = load i8*, i8** %217, align 1
  %219 = icmp eq i8* %218, null
  br i1 %219, label %244, label %220, !prof !7

220:                                              ; preds = %214
  %221 = getelementptr inbounds %"struct.base::internal::SlotSpanMetadata", %"struct.base::internal::SlotSpanMetadata"* %216, i64 0, i32 0
  store i8 0, i8* %3, align 1
  %222 = bitcast i8* %218 to %"struct.base::internal::EncodedPartitionFreelistEntry"**
  %223 = load %"struct.base::internal::EncodedPartitionFreelistEntry"*, %"struct.base::internal::EncodedPartitionFreelistEntry"** %222, align 8
  %224 = icmp eq %"struct.base::internal::EncodedPartitionFreelistEntry"* %223, null
  %225 = ptrtoint %"struct.base::internal::EncodedPartitionFreelistEntry"* %223 to i64
  br i1 %224, label %226, label %228

226:                                              ; preds = %220
  %227 = tail call i64 @llvm.bswap.i64(i64 %225) #17
  br label %238

228:                                              ; preds = %220
  %229 = xor i64 %225, -1
  %230 = getelementptr inbounds i8, i8* %218, i64 8
  %231 = bitcast i8* %230 to i64*
  %232 = load i64, i64* %231, align 8
  %233 = icmp eq i64 %232, %229
  br i1 %233, label %235, label %234, !prof !6

234:                                              ; preds = %228
  tail call fastcc void @_ZN4base8internal12_GLOBAL__N_126FreelistCorruptionDetectedEv() #18
  unreachable

235:                                              ; preds = %228
  %236 = tail call i64 @llvm.bswap.i64(i64 %225) #17
  %237 = inttoptr i64 %236 to i8*
  tail call void @llvm.prefetch(i8* nonnull %237, i32 0, i32 3, i32 1) #17
  br label %238

238:                                              ; preds = %235, %226
  %239 = phi i64 [ %227, %226 ], [ %236, %235 ]
  %240 = inttoptr i64 %239 to %"class.base::internal::PartitionFreelistEntry"*
  store %"class.base::internal::PartitionFreelistEntry"* %240, %"class.base::internal::PartitionFreelistEntry"** %221, align 1
  %241 = getelementptr inbounds %"struct.base::internal::SlotSpanMetadata", %"struct.base::internal::SlotSpanMetadata"* %216, i64 0, i32 3
  %242 = load i16, i16* %241, align 1
  %243 = add i16 %242, 1
  store i16 %243, i16* %241, align 1
  br label %246

244:                                              ; preds = %214
  %245 = call i8* @_ZN4base8internal15PartitionBucketILb1EE13SlowPathAllocEPNS_13PartitionRootILb1EEEimmPb(%"struct.base::internal::PartitionBucket"* %187, %"struct.base::PartitionRoot"* %5, i32 0, i64 %6, i64 16384, i8* nonnull %3) #17
  br label %246

246:                                              ; preds = %244, %238
  %247 = phi i8* [ %218, %238 ], [ %245, %244 ]
  %248 = atomicrmw xchg i32* %190, i32 0 release
  %249 = icmp eq i32 %248, 2
  br i1 %249, label %250, label %251, !prof !7

250:                                              ; preds = %246
  call void @_ZN4base8internal13SpinningMutex9FutexWakeEv(%"class.base::internal::SpinningMutex"* %189) #17
  br label %251

251:                                              ; preds = %250, %246, %184, %180
  %252 = phi i8* [ %181, %180 ], [ %181, %184 ], [ %247, %246 ], [ %247, %250 ]
  %253 = icmp eq i8* %252, null
  br i1 %253, label %256, label %254, !prof !7

254:                                              ; preds = %114, %251
  %255 = phi i8* [ %252, %251 ], [ %115, %114 ]
  br label %256

256:                                              ; preds = %251, %254
  %257 = phi i8* [ null, %251 ], [ %255, %254 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %25) #17
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %3) #17
  %258 = bitcast i8* %257 to %"struct.std::__1::__hash_node.242"*
  ret %"struct.std::__1::__hash_node.242"* %258
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIiPvEENS_22__unordered_map_hasherIiS3_NS_4hashIiEENS_8equal_toIvEELb1EEENS_21__unordered_map_equalIiS3_S8_S6_Lb1EEEN4base8internal17MetadataAllocatorIS3_EEE8__rehashEm(%"class.std::__1::__hash_table.65"*, i64) local_unnamed_addr #3 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::__hash_table.65", %"class.std::__1::__hash_table.65"* %0, i64 0, i32 0, i32 0, i32 1, i32 0
  %4 = bitcast %"class.std::__1::__bucket_list_deallocator.71"* %3 to %"class.base::internal::MetadataAllocator.74"*
  %5 = icmp eq i64 %1, 0
  br i1 %5, label %131, label %6

6:                                                ; preds = %2
  %7 = tail call %"struct.std::__1::__hash_node_base.69"** @_ZN4base8internal17MetadataAllocatorIPNSt3__116__hash_node_baseIPNS2_11__hash_nodeINS2_17__hash_value_typeIiPvEES6_EEEEE8allocateEm(%"class.base::internal::MetadataAllocator.74"* %4, i64 %1) #17
  %8 = getelementptr inbounds %"class.std::__1::__hash_table.65", %"class.std::__1::__hash_table.65"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %9 = load %"struct.std::__1::__hash_node_base.69"**, %"struct.std::__1::__hash_node_base.69"*** %8, align 8
  store %"struct.std::__1::__hash_node_base.69"** %7, %"struct.std::__1::__hash_node_base.69"*** %8, align 8
  %10 = icmp eq %"struct.std::__1::__hash_node_base.69"** %9, null
  br i1 %10, label %14, label %11

11:                                               ; preds = %6
  %12 = getelementptr inbounds %"class.std::__1::__bucket_list_deallocator.71", %"class.std::__1::__bucket_list_deallocator.71"* %3, i64 0, i32 0, i32 0, i32 0
  %13 = load i64, i64* %12, align 8
  tail call void @_ZN4base8internal17MetadataAllocatorIPNSt3__116__hash_node_baseIPNS2_11__hash_nodeINS2_17__hash_value_typeIiPvEES6_EEEEE10deallocateEPSB_m(%"class.base::internal::MetadataAllocator.74"* %4, %"struct.std::__1::__hash_node_base.69"** nonnull %9, i64 %13) #17
  br label %14

14:                                               ; preds = %11, %6
  %15 = getelementptr inbounds %"class.std::__1::__bucket_list_deallocator.71", %"class.std::__1::__bucket_list_deallocator.71"* %3, i64 0, i32 0, i32 0, i32 0
  store i64 %1, i64* %15, align 8
  %16 = add i64 %1, -1
  %17 = and i64 %1, 3
  %18 = icmp ult i64 %16, 3
  br i1 %18, label %21, label %19

19:                                               ; preds = %14
  %20 = sub i64 %1, %17
  br label %37

21:                                               ; preds = %37, %14
  %22 = phi i64 [ 0, %14 ], [ %51, %37 ]
  %23 = icmp eq i64 %17, 0
  br i1 %23, label %32, label %24

24:                                               ; preds = %21, %24
  %25 = phi i64 [ %29, %24 ], [ %22, %21 ]
  %26 = phi i64 [ %30, %24 ], [ %17, %21 ]
  %27 = load %"struct.std::__1::__hash_node_base.69"**, %"struct.std::__1::__hash_node_base.69"*** %8, align 8
  %28 = getelementptr inbounds %"struct.std::__1::__hash_node_base.69"*, %"struct.std::__1::__hash_node_base.69"** %27, i64 %25
  store %"struct.std::__1::__hash_node_base.69"* null, %"struct.std::__1::__hash_node_base.69"** %28, align 8
  %29 = add nuw i64 %25, 1
  %30 = add i64 %26, -1
  %31 = icmp eq i64 %30, 0
  br i1 %31, label %32, label %24, !llvm.loop !35

32:                                               ; preds = %24, %21
  %33 = getelementptr inbounds %"class.std::__1::__hash_table.65", %"class.std::__1::__hash_table.65"* %0, i64 0, i32 1, i32 0, i32 0
  %34 = getelementptr inbounds %"struct.std::__1::__hash_node_base.69", %"struct.std::__1::__hash_node_base.69"* %33, i64 0, i32 0
  %35 = load %"struct.std::__1::__hash_node_base.69"*, %"struct.std::__1::__hash_node_base.69"** %34, align 8
  %36 = icmp eq %"struct.std::__1::__hash_node_base.69"* %35, null
  br i1 %36, label %140, label %54

37:                                               ; preds = %37, %19
  %38 = phi i64 [ 0, %19 ], [ %51, %37 ]
  %39 = phi i64 [ %20, %19 ], [ %52, %37 ]
  %40 = load %"struct.std::__1::__hash_node_base.69"**, %"struct.std::__1::__hash_node_base.69"*** %8, align 8
  %41 = getelementptr inbounds %"struct.std::__1::__hash_node_base.69"*, %"struct.std::__1::__hash_node_base.69"** %40, i64 %38
  store %"struct.std::__1::__hash_node_base.69"* null, %"struct.std::__1::__hash_node_base.69"** %41, align 8
  %42 = or i64 %38, 1
  %43 = load %"struct.std::__1::__hash_node_base.69"**, %"struct.std::__1::__hash_node_base.69"*** %8, align 8
  %44 = getelementptr inbounds %"struct.std::__1::__hash_node_base.69"*, %"struct.std::__1::__hash_node_base.69"** %43, i64 %42
  store %"struct.std::__1::__hash_node_base.69"* null, %"struct.std::__1::__hash_node_base.69"** %44, align 8
  %45 = or i64 %38, 2
  %46 = load %"struct.std::__1::__hash_node_base.69"**, %"struct.std::__1::__hash_node_base.69"*** %8, align 8
  %47 = getelementptr inbounds %"struct.std::__1::__hash_node_base.69"*, %"struct.std::__1::__hash_node_base.69"** %46, i64 %45
  store %"struct.std::__1::__hash_node_base.69"* null, %"struct.std::__1::__hash_node_base.69"** %47, align 8
  %48 = or i64 %38, 3
  %49 = load %"struct.std::__1::__hash_node_base.69"**, %"struct.std::__1::__hash_node_base.69"*** %8, align 8
  %50 = getelementptr inbounds %"struct.std::__1::__hash_node_base.69"*, %"struct.std::__1::__hash_node_base.69"** %49, i64 %48
  store %"struct.std::__1::__hash_node_base.69"* null, %"struct.std::__1::__hash_node_base.69"** %50, align 8
  %51 = add nuw i64 %38, 4
  %52 = add i64 %39, -4
  %53 = icmp eq i64 %52, 0
  br i1 %53, label %21, label %37

54:                                               ; preds = %32
  %55 = getelementptr inbounds %"struct.std::__1::__hash_node_base.69", %"struct.std::__1::__hash_node_base.69"* %35, i64 1
  %56 = bitcast %"struct.std::__1::__hash_node_base.69"* %55 to i64*
  %57 = load i64, i64* %56, align 8
  %58 = tail call i64 @llvm.ctpop.i64(i64 %1) #17, !range !4
  %59 = icmp ugt i64 %58, 1
  br i1 %59, label %63, label %60

60:                                               ; preds = %54
  %61 = add i64 %1, -1
  %62 = and i64 %57, %61
  br label %67

63:                                               ; preds = %54
  %64 = icmp ult i64 %57, %1
  br i1 %64, label %67, label %65

65:                                               ; preds = %63
  %66 = urem i64 %57, %1
  br label %67

67:                                               ; preds = %60, %63, %65
  %68 = phi i64 [ %62, %60 ], [ %66, %65 ], [ %57, %63 ]
  %69 = load %"struct.std::__1::__hash_node_base.69"**, %"struct.std::__1::__hash_node_base.69"*** %8, align 8
  %70 = getelementptr inbounds %"struct.std::__1::__hash_node_base.69"*, %"struct.std::__1::__hash_node_base.69"** %69, i64 %68
  store %"struct.std::__1::__hash_node_base.69"* %33, %"struct.std::__1::__hash_node_base.69"** %70, align 8
  %71 = getelementptr inbounds %"struct.std::__1::__hash_node_base.69", %"struct.std::__1::__hash_node_base.69"* %35, i64 0, i32 0
  %72 = load %"struct.std::__1::__hash_node_base.69"*, %"struct.std::__1::__hash_node_base.69"** %71, align 8
  %73 = icmp eq %"struct.std::__1::__hash_node_base.69"* %72, null
  br i1 %73, label %140, label %74

74:                                               ; preds = %67
  %75 = add i64 %1, -1
  br label %76

76:                                               ; preds = %74, %125
  %77 = phi %"struct.std::__1::__hash_node_base.69"* [ %72, %74 ], [ %129, %125 ]
  %78 = phi i64 [ %68, %74 ], [ %127, %125 ]
  %79 = phi %"struct.std::__1::__hash_node_base.69"* [ %35, %74 ], [ %126, %125 ]
  %80 = getelementptr inbounds %"struct.std::__1::__hash_node_base.69", %"struct.std::__1::__hash_node_base.69"* %77, i64 1
  %81 = bitcast %"struct.std::__1::__hash_node_base.69"* %80 to i64*
  %82 = load i64, i64* %81, align 8
  br i1 %59, label %85, label %83

83:                                               ; preds = %76
  %84 = and i64 %82, %75
  br label %89

85:                                               ; preds = %76
  %86 = icmp ult i64 %82, %1
  br i1 %86, label %89, label %87

87:                                               ; preds = %85
  %88 = urem i64 %82, %1
  br label %89

89:                                               ; preds = %83, %85, %87
  %90 = phi i64 [ %84, %83 ], [ %88, %87 ], [ %82, %85 ]
  %91 = icmp eq i64 %90, %78
  br i1 %91, label %125, label %92

92:                                               ; preds = %89
  %93 = load %"struct.std::__1::__hash_node_base.69"**, %"struct.std::__1::__hash_node_base.69"*** %8, align 8
  %94 = getelementptr inbounds %"struct.std::__1::__hash_node_base.69"*, %"struct.std::__1::__hash_node_base.69"** %93, i64 %90
  %95 = load %"struct.std::__1::__hash_node_base.69"*, %"struct.std::__1::__hash_node_base.69"** %94, align 8
  %96 = icmp eq %"struct.std::__1::__hash_node_base.69"* %95, null
  br i1 %96, label %100, label %97

97:                                               ; preds = %92
  %98 = getelementptr inbounds %"struct.std::__1::__hash_node_base.69", %"struct.std::__1::__hash_node_base.69"* %77, i64 2
  %99 = bitcast %"struct.std::__1::__hash_node_base.69"* %98 to i32*
  br label %101

100:                                              ; preds = %92
  store %"struct.std::__1::__hash_node_base.69"* %79, %"struct.std::__1::__hash_node_base.69"** %94, align 8
  br label %125

101:                                              ; preds = %97, %106
  %102 = phi %"struct.std::__1::__hash_node_base.69"* [ %104, %106 ], [ %77, %97 ]
  %103 = getelementptr inbounds %"struct.std::__1::__hash_node_base.69", %"struct.std::__1::__hash_node_base.69"* %102, i64 0, i32 0
  %104 = load %"struct.std::__1::__hash_node_base.69"*, %"struct.std::__1::__hash_node_base.69"** %103, align 8
  %105 = icmp eq %"struct.std::__1::__hash_node_base.69"* %104, null
  br i1 %105, label %112, label %106

106:                                              ; preds = %101
  %107 = getelementptr inbounds %"struct.std::__1::__hash_node_base.69", %"struct.std::__1::__hash_node_base.69"* %104, i64 2
  %108 = bitcast %"struct.std::__1::__hash_node_base.69"* %107 to i32*
  %109 = load i32, i32* %99, align 4
  %110 = load i32, i32* %108, align 4
  %111 = icmp eq i32 %109, %110
  br i1 %111, label %101, label %112

112:                                              ; preds = %101, %106
  %113 = ptrtoint %"struct.std::__1::__hash_node_base.69"* %104 to i64
  %114 = bitcast %"struct.std::__1::__hash_node_base.69"* %102 to i64*
  %115 = bitcast %"struct.std::__1::__hash_node_base.69"* %79 to i64*
  store i64 %113, i64* %115, align 8
  %116 = load %"struct.std::__1::__hash_node_base.69"**, %"struct.std::__1::__hash_node_base.69"*** %8, align 8
  %117 = getelementptr inbounds %"struct.std::__1::__hash_node_base.69"*, %"struct.std::__1::__hash_node_base.69"** %116, i64 %90
  %118 = bitcast %"struct.std::__1::__hash_node_base.69"** %117 to i64**
  %119 = load i64*, i64** %118, align 8
  %120 = load i64, i64* %119, align 8
  store i64 %120, i64* %114, align 8
  %121 = load %"struct.std::__1::__hash_node_base.69"**, %"struct.std::__1::__hash_node_base.69"*** %8, align 8
  %122 = getelementptr inbounds %"struct.std::__1::__hash_node_base.69"*, %"struct.std::__1::__hash_node_base.69"** %121, i64 %90
  %123 = load %"struct.std::__1::__hash_node_base.69"*, %"struct.std::__1::__hash_node_base.69"** %122, align 8
  %124 = getelementptr inbounds %"struct.std::__1::__hash_node_base.69", %"struct.std::__1::__hash_node_base.69"* %123, i64 0, i32 0
  store %"struct.std::__1::__hash_node_base.69"* %77, %"struct.std::__1::__hash_node_base.69"** %124, align 8
  br label %125

125:                                              ; preds = %89, %112, %100
  %126 = phi %"struct.std::__1::__hash_node_base.69"* [ %77, %100 ], [ %79, %112 ], [ %77, %89 ]
  %127 = phi i64 [ %90, %100 ], [ %78, %112 ], [ %78, %89 ]
  %128 = getelementptr inbounds %"struct.std::__1::__hash_node_base.69", %"struct.std::__1::__hash_node_base.69"* %126, i64 0, i32 0
  %129 = load %"struct.std::__1::__hash_node_base.69"*, %"struct.std::__1::__hash_node_base.69"** %128, align 8
  %130 = icmp eq %"struct.std::__1::__hash_node_base.69"* %129, null
  br i1 %130, label %140, label %76

131:                                              ; preds = %2
  %132 = getelementptr inbounds %"class.std::__1::__hash_table.65", %"class.std::__1::__hash_table.65"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %133 = load %"struct.std::__1::__hash_node_base.69"**, %"struct.std::__1::__hash_node_base.69"*** %132, align 8
  store %"struct.std::__1::__hash_node_base.69"** null, %"struct.std::__1::__hash_node_base.69"*** %132, align 8
  %134 = icmp eq %"struct.std::__1::__hash_node_base.69"** %133, null
  br i1 %134, label %138, label %135

135:                                              ; preds = %131
  %136 = getelementptr inbounds %"class.std::__1::__bucket_list_deallocator.71", %"class.std::__1::__bucket_list_deallocator.71"* %3, i64 0, i32 0, i32 0, i32 0
  %137 = load i64, i64* %136, align 8
  tail call void @_ZN4base8internal17MetadataAllocatorIPNSt3__116__hash_node_baseIPNS2_11__hash_nodeINS2_17__hash_value_typeIiPvEES6_EEEEE10deallocateEPSB_m(%"class.base::internal::MetadataAllocator.74"* %4, %"struct.std::__1::__hash_node_base.69"** nonnull %133, i64 %137) #17
  br label %138

138:                                              ; preds = %131, %135
  %139 = getelementptr inbounds %"class.std::__1::__bucket_list_deallocator.71", %"class.std::__1::__bucket_list_deallocator.71"* %3, i64 0, i32 0, i32 0, i32 0
  store i64 0, i64* %139, align 8
  br label %140

140:                                              ; preds = %125, %67, %32, %138
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.std::__1::__hash_node_base.69"** @_ZN4base8internal17MetadataAllocatorIPNSt3__116__hash_node_baseIPNS2_11__hash_nodeINS2_17__hash_value_typeIiPvEES6_EEEEE8allocateEm(%"class.base::internal::MetadataAllocator.74"*, i64) local_unnamed_addr #3 comdat align 2 {
  %3 = alloca i8, align 1
  %4 = alloca i64, align 8
  %5 = tail call dereferenceable(5408) %"struct.base::PartitionRoot"* @_ZN4base8internal23PCScanMetadataAllocatorEv() #17
  %6 = shl i64 %1, 3
  %7 = tail call i64 @llvm.ctlz.i64(i64 %6, i1 false) #17, !range !4
  %8 = sub nuw nsw i64 64, %7
  %9 = and i64 %8, 255
  %10 = getelementptr inbounds [65 x i8], [65 x i8]* @_ZN4base12_GLOBAL__N_116kOrderIndexShiftE, i64 0, i64 %9
  %11 = load i8, i8* %10, align 1
  %12 = zext i8 %11 to i64
  %13 = lshr i64 %6, %12
  %14 = and i64 %13, 7
  %15 = getelementptr inbounds [65 x i64], [65 x i64]* @_ZN4base12_GLOBAL__N_118kOrderSubIndexMaskE, i64 0, i64 %9
  %16 = load i64, i64* %15, align 8
  %17 = and i64 %16, %6
  %18 = shl nuw nsw i64 %9, 3
  %19 = or i64 %14, %18
  %20 = icmp ne i64 %17, 0
  %21 = zext i1 %20 to i64
  %22 = add nuw nsw i64 %19, %21
  %23 = getelementptr inbounds { [128 x i64], [521 x i16] }, { [128 x i64], [521 x i16] }* @_ZZN4base8internal17BucketIndexLookup8GetIndexEmE6lookup, i64 0, i32 1, i64 %22
  %24 = load i16, i16* %23, align 2
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %3) #17
  store i8 0, i8* %3, align 1
  %25 = bitcast i64* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %25) #17
  store i64 -6148914691236517206, i64* %4, align 8
  %26 = getelementptr inbounds %"struct.base::PartitionRoot", %"struct.base::PartitionRoot"* %5, i64 0, i32 0
  %27 = load i8, i8* %26, align 8
  %28 = icmp eq i8 %27, 2
  br i1 %28, label %29, label %33

29:                                               ; preds = %2
  %30 = load atomic i8, i8* getelementptr inbounds (%"class.base::internal::PCScan", %"class.base::internal::PCScan"* @_ZN4base8internal6PCScan9instance_E, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0) acquire, align 8
  %31 = icmp eq i8 %30, 2
  br i1 %31, label %32, label %33, !prof !7

32:                                               ; preds = %29
  tail call void @_ZN4base8internal6PCScan8JoinScanEv() #17
  br label %33

33:                                               ; preds = %32, %29, %2
  %34 = getelementptr inbounds %"struct.base::PartitionRoot", %"struct.base::PartitionRoot"* %5, i64 0, i32 2
  %35 = load i8, i8* %34, align 2, !range !5
  %36 = icmp eq i8 %35, 0
  br i1 %36, label %185, label %37, !prof !19

37:                                               ; preds = %33
  %38 = load i32, i32* @_ZN4base8internal18g_thread_cache_keyE, align 4
  %39 = tail call i8* @pthread_getspecific(i32 %38) #17
  %40 = bitcast i8* %39 to %"class.base::internal::ThreadCache"*
  %41 = icmp ugt i8* %39, inttoptr (i64 1 to i8*)
  br i1 %41, label %42, label %112, !prof !6

42:                                               ; preds = %37
  %43 = zext i16 %24 to i64
  %44 = getelementptr inbounds %"class.base::internal::ThreadCache", %"class.base::internal::ThreadCache"* %40, i64 0, i32 3, i32 12, i64 %43
  %45 = load i64, i64* %44, align 8
  %46 = add i64 %45, 1
  store i64 %46, i64* %44, align 8
  %47 = getelementptr inbounds i8, i8* %39, i64 1440
  %48 = bitcast i8* %47 to i64*
  %49 = load i64, i64* %48, align 8
  %50 = add i64 %49, 1
  store i64 %50, i64* %48, align 8
  %51 = load i16, i16* @_ZN4base8internal11ThreadCache28largest_active_bucket_index_E, align 2
  %52 = icmp ult i16 %51, %24
  br i1 %52, label %53, label %62, !prof !7

53:                                               ; preds = %42
  %54 = getelementptr inbounds i8, i8* %39, i64 1472
  %55 = bitcast i8* %54 to i64*
  %56 = load i64, i64* %55, align 8
  %57 = add i64 %56, 1
  store i64 %57, i64* %55, align 8
  %58 = getelementptr inbounds i8, i8* %39, i64 1456
  %59 = bitcast i8* %58 to i64*
  %60 = load i64, i64* %59, align 8
  %61 = add i64 %60, 1
  store i64 %61, i64* %59, align 8
  br label %119

62:                                               ; preds = %42
  %63 = getelementptr inbounds %"class.base::internal::ThreadCache", %"class.base::internal::ThreadCache"* %40, i64 0, i32 0, i64 %43, i32 0
  %64 = load %"class.base::internal::PartitionFreelistEntry"*, %"class.base::internal::PartitionFreelistEntry"** %63, align 8
  %65 = icmp eq %"class.base::internal::PartitionFreelistEntry"* %64, null
  br i1 %65, label %71, label %66, !prof !7

66:                                               ; preds = %62
  %67 = getelementptr inbounds i8, i8* %39, i64 1448
  %68 = bitcast i8* %67 to i64*
  %69 = load i64, i64* %68, align 8
  %70 = add i64 %69, 1
  store i64 %70, i64* %68, align 8
  br label %79

71:                                               ; preds = %62
  %72 = getelementptr inbounds i8, i8* %39, i64 1456
  %73 = bitcast i8* %72 to <2 x i64>*
  %74 = load <2 x i64>, <2 x i64>* %73, align 8
  %75 = add <2 x i64> %74, <i64 1, i64 1>
  %76 = bitcast i8* %72 to <2 x i64>*
  store <2 x i64> %75, <2 x i64>* %76, align 8
  tail call void @_ZN4base8internal11ThreadCache10FillBucketEm(%"class.base::internal::ThreadCache"* %40, i64 %43) #17
  %77 = load %"class.base::internal::PartitionFreelistEntry"*, %"class.base::internal::PartitionFreelistEntry"** %63, align 8
  %78 = icmp eq %"class.base::internal::PartitionFreelistEntry"* %77, null
  br i1 %78, label %119, label %79, !prof !7

79:                                               ; preds = %71, %66
  %80 = phi %"class.base::internal::PartitionFreelistEntry"* [ %77, %71 ], [ %64, %66 ]
  %81 = getelementptr inbounds %"class.base::internal::PartitionFreelistEntry", %"class.base::internal::PartitionFreelistEntry"* %80, i64 0, i32 0
  %82 = load %"struct.base::internal::EncodedPartitionFreelistEntry"*, %"struct.base::internal::EncodedPartitionFreelistEntry"** %81, align 8
  %83 = icmp eq %"struct.base::internal::EncodedPartitionFreelistEntry"* %82, null
  %84 = ptrtoint %"struct.base::internal::EncodedPartitionFreelistEntry"* %82 to i64
  br i1 %83, label %85, label %87

85:                                               ; preds = %79
  %86 = tail call i64 @llvm.bswap.i64(i64 %84) #17
  br label %96

87:                                               ; preds = %79
  %88 = xor i64 %84, -1
  %89 = getelementptr inbounds %"class.base::internal::PartitionFreelistEntry", %"class.base::internal::PartitionFreelistEntry"* %80, i64 0, i32 1
  %90 = load i64, i64* %89, align 8
  %91 = icmp eq i64 %90, %88
  br i1 %91, label %93, label %92, !prof !6

92:                                               ; preds = %87
  tail call fastcc void @_ZN4base8internal12_GLOBAL__N_126FreelistCorruptionDetectedEv() #18
  unreachable

93:                                               ; preds = %87
  %94 = tail call i64 @llvm.bswap.i64(i64 %84) #17
  %95 = inttoptr i64 %94 to i8*
  tail call void @llvm.prefetch(i8* nonnull %95, i32 0, i32 3, i32 1) #17
  br label %96

96:                                               ; preds = %93, %85
  %97 = phi i64 [ %86, %85 ], [ %94, %93 ]
  %98 = inttoptr i64 %97 to %"class.base::internal::PartitionFreelistEntry"*
  %99 = getelementptr inbounds %"class.base::internal::ThreadCache", %"class.base::internal::ThreadCache"* %40, i64 0, i32 0, i64 %43, i32 1
  %100 = load i8, i8* %99, align 8
  %101 = add i8 %100, -1
  store i8 %101, i8* %99, align 8
  store %"class.base::internal::PartitionFreelistEntry"* %98, %"class.base::internal::PartitionFreelistEntry"** %63, align 8
  %102 = getelementptr inbounds %"class.base::internal::ThreadCache", %"class.base::internal::ThreadCache"* %40, i64 0, i32 0, i64 %43, i32 3
  %103 = load i16, i16* %102, align 2
  %104 = zext i16 %103 to i64
  store i64 %104, i64* %4, align 8
  %105 = load i16, i16* %102, align 2
  %106 = zext i16 %105 to i64
  %107 = getelementptr inbounds i8, i8* %39, i64 1424
  %108 = bitcast i8* %107 to i64*
  %109 = load i64, i64* %108, align 8
  %110 = sub i64 %109, %106
  store i64 %110, i64* %108, align 8
  %111 = bitcast %"class.base::internal::PartitionFreelistEntry"* %80 to i8*
  br label %114

112:                                              ; preds = %37
  %113 = call i8* @_ZN4base13PartitionRootILb1EE28MaybeInitThreadCacheAndAllocEtPm(%"struct.base::PartitionRoot"* %5, i16 zeroext %24, i64* nonnull %4) #17
  br label %114

114:                                              ; preds = %112, %96
  %115 = phi i8* [ %113, %112 ], [ %111, %96 ]
  %116 = icmp eq i8* %115, null
  br i1 %116, label %117, label %254, !prof !7

117:                                              ; preds = %114
  %118 = zext i16 %24 to i64
  br label %119

119:                                              ; preds = %117, %71, %53
  %120 = phi i64 [ %118, %117 ], [ %43, %71 ], [ %43, %53 ]
  %121 = getelementptr inbounds %"struct.base::PartitionRoot", %"struct.base::PartitionRoot"* %5, i64 0, i32 10, i64 %120
  %122 = getelementptr inbounds %"struct.base::PartitionRoot", %"struct.base::PartitionRoot"* %5, i64 0, i32 8
  %123 = getelementptr inbounds %"class.base::internal::MaybeSpinLock", %"class.base::internal::MaybeSpinLock"* %122, i64 0, i32 0
  %124 = getelementptr inbounds %"class.base::internal::MaybeSpinLock", %"class.base::internal::MaybeSpinLock"* %122, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  br label %125

125:                                              ; preds = %137, %119
  %126 = phi i32 [ 0, %119 ], [ %138, %137 ]
  %127 = phi i32 [ 1, %119 ], [ %141, %137 ]
  %128 = load atomic i32, i32* %124 monotonic, align 4
  %129 = icmp eq i32 %128, 0
  br i1 %129, label %130, label %133, !prof !9

130:                                              ; preds = %125
  %131 = cmpxchg weak i32* %124, i32 0, i32 1 acquire monotonic
  %132 = extractvalue { i32, i1 } %131, 1
  br i1 %132, label %148, label %133, !prof !6

133:                                              ; preds = %130, %125
  %134 = icmp sgt i32 %127, 0
  br i1 %134, label %143, label %137

135:                                              ; preds = %143
  %136 = add i32 %127, %126
  br label %137

137:                                              ; preds = %135, %133
  %138 = phi i32 [ %126, %133 ], [ %136, %135 ]
  %139 = shl i32 %127, 1
  %140 = icmp slt i32 %139, 64
  %141 = select i1 %140, i32 %139, i32 64
  %142 = icmp slt i32 %138, 1000
  br i1 %142, label %125, label %147

143:                                              ; preds = %133, %143
  %144 = phi i32 [ %145, %143 ], [ 0, %133 ]
  call void asm sideeffect "pause", "~{dirflag},~{fpsr},~{flags}"() #17, !srcloc !10
  %145 = add nuw nsw i32 %144, 1
  %146 = icmp eq i32 %145, %127
  br i1 %146, label %135, label %143

147:                                              ; preds = %137
  call void @_ZN4base8internal13SpinningMutex8LockSlowEv(%"class.base::internal::SpinningMutex"* %123) #17
  br label %148

148:                                              ; preds = %130, %147
  %149 = getelementptr inbounds %"struct.base::internal::PartitionBucket", %"struct.base::internal::PartitionBucket"* %121, i64 0, i32 0
  %150 = load %"struct.base::internal::SlotSpanMetadata"*, %"struct.base::internal::SlotSpanMetadata"** %149, align 8
  %151 = bitcast %"struct.base::internal::SlotSpanMetadata"* %150 to i8**
  %152 = load i8*, i8** %151, align 1
  %153 = icmp eq i8* %152, null
  br i1 %153, label %178, label %154, !prof !7

154:                                              ; preds = %148
  %155 = getelementptr inbounds %"struct.base::internal::SlotSpanMetadata", %"struct.base::internal::SlotSpanMetadata"* %150, i64 0, i32 0
  store i8 0, i8* %3, align 1
  %156 = bitcast i8* %152 to %"struct.base::internal::EncodedPartitionFreelistEntry"**
  %157 = load %"struct.base::internal::EncodedPartitionFreelistEntry"*, %"struct.base::internal::EncodedPartitionFreelistEntry"** %156, align 8
  %158 = icmp eq %"struct.base::internal::EncodedPartitionFreelistEntry"* %157, null
  %159 = ptrtoint %"struct.base::internal::EncodedPartitionFreelistEntry"* %157 to i64
  br i1 %158, label %160, label %162

160:                                              ; preds = %154
  %161 = call i64 @llvm.bswap.i64(i64 %159) #17
  br label %172

162:                                              ; preds = %154
  %163 = xor i64 %159, -1
  %164 = getelementptr inbounds i8, i8* %152, i64 8
  %165 = bitcast i8* %164 to i64*
  %166 = load i64, i64* %165, align 8
  %167 = icmp eq i64 %166, %163
  br i1 %167, label %169, label %168, !prof !6

168:                                              ; preds = %162
  call fastcc void @_ZN4base8internal12_GLOBAL__N_126FreelistCorruptionDetectedEv() #18
  unreachable

169:                                              ; preds = %162
  %170 = call i64 @llvm.bswap.i64(i64 %159) #17
  %171 = inttoptr i64 %170 to i8*
  call void @llvm.prefetch(i8* nonnull %171, i32 0, i32 3, i32 1) #17
  br label %172

172:                                              ; preds = %169, %160
  %173 = phi i64 [ %161, %160 ], [ %170, %169 ]
  %174 = inttoptr i64 %173 to %"class.base::internal::PartitionFreelistEntry"*
  store %"class.base::internal::PartitionFreelistEntry"* %174, %"class.base::internal::PartitionFreelistEntry"** %155, align 1
  %175 = getelementptr inbounds %"struct.base::internal::SlotSpanMetadata", %"struct.base::internal::SlotSpanMetadata"* %150, i64 0, i32 3
  %176 = load i16, i16* %175, align 1
  %177 = add i16 %176, 1
  store i16 %177, i16* %175, align 1
  br label %180

178:                                              ; preds = %148
  %179 = call i8* @_ZN4base8internal15PartitionBucketILb1EE13SlowPathAllocEPNS_13PartitionRootILb1EEEimmPb(%"struct.base::internal::PartitionBucket"* %121, %"struct.base::PartitionRoot"* %5, i32 0, i64 %6, i64 16384, i8* nonnull %3) #17
  br label %180

180:                                              ; preds = %178, %172
  %181 = phi i8* [ %152, %172 ], [ %179, %178 ]
  %182 = atomicrmw xchg i32* %124, i32 0 release
  %183 = icmp eq i32 %182, 2
  br i1 %183, label %184, label %251, !prof !7

184:                                              ; preds = %180
  call void @_ZN4base8internal13SpinningMutex9FutexWakeEv(%"class.base::internal::SpinningMutex"* %123) #17
  br label %251

185:                                              ; preds = %33
  %186 = zext i16 %24 to i64
  %187 = getelementptr inbounds %"struct.base::PartitionRoot", %"struct.base::PartitionRoot"* %5, i64 0, i32 10, i64 %186
  %188 = getelementptr inbounds %"struct.base::PartitionRoot", %"struct.base::PartitionRoot"* %5, i64 0, i32 8
  %189 = getelementptr inbounds %"class.base::internal::MaybeSpinLock", %"class.base::internal::MaybeSpinLock"* %188, i64 0, i32 0
  %190 = getelementptr inbounds %"class.base::internal::MaybeSpinLock", %"class.base::internal::MaybeSpinLock"* %188, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  br label %191

191:                                              ; preds = %203, %185
  %192 = phi i32 [ 0, %185 ], [ %204, %203 ]
  %193 = phi i32 [ 1, %185 ], [ %207, %203 ]
  %194 = load atomic i32, i32* %190 monotonic, align 4
  %195 = icmp eq i32 %194, 0
  br i1 %195, label %196, label %199, !prof !9

196:                                              ; preds = %191
  %197 = cmpxchg weak i32* %190, i32 0, i32 1 acquire monotonic
  %198 = extractvalue { i32, i1 } %197, 1
  br i1 %198, label %214, label %199, !prof !6

199:                                              ; preds = %196, %191
  %200 = icmp sgt i32 %193, 0
  br i1 %200, label %209, label %203

201:                                              ; preds = %209
  %202 = add i32 %193, %192
  br label %203

203:                                              ; preds = %201, %199
  %204 = phi i32 [ %192, %199 ], [ %202, %201 ]
  %205 = shl i32 %193, 1
  %206 = icmp slt i32 %205, 64
  %207 = select i1 %206, i32 %205, i32 64
  %208 = icmp slt i32 %204, 1000
  br i1 %208, label %191, label %213

209:                                              ; preds = %199, %209
  %210 = phi i32 [ %211, %209 ], [ 0, %199 ]
  tail call void asm sideeffect "pause", "~{dirflag},~{fpsr},~{flags}"() #17, !srcloc !10
  %211 = add nuw nsw i32 %210, 1
  %212 = icmp eq i32 %211, %193
  br i1 %212, label %201, label %209

213:                                              ; preds = %203
  tail call void @_ZN4base8internal13SpinningMutex8LockSlowEv(%"class.base::internal::SpinningMutex"* %189) #17
  br label %214

214:                                              ; preds = %196, %213
  %215 = getelementptr inbounds %"struct.base::internal::PartitionBucket", %"struct.base::internal::PartitionBucket"* %187, i64 0, i32 0
  %216 = load %"struct.base::internal::SlotSpanMetadata"*, %"struct.base::internal::SlotSpanMetadata"** %215, align 8
  %217 = bitcast %"struct.base::internal::SlotSpanMetadata"* %216 to i8**
  %218 = load i8*, i8** %217, align 1
  %219 = icmp eq i8* %218, null
  br i1 %219, label %244, label %220, !prof !7

220:                                              ; preds = %214
  %221 = getelementptr inbounds %"struct.base::internal::SlotSpanMetadata", %"struct.base::internal::SlotSpanMetadata"* %216, i64 0, i32 0
  store i8 0, i8* %3, align 1
  %222 = bitcast i8* %218 to %"struct.base::internal::EncodedPartitionFreelistEntry"**
  %223 = load %"struct.base::internal::EncodedPartitionFreelistEntry"*, %"struct.base::internal::EncodedPartitionFreelistEntry"** %222, align 8
  %224 = icmp eq %"struct.base::internal::EncodedPartitionFreelistEntry"* %223, null
  %225 = ptrtoint %"struct.base::internal::EncodedPartitionFreelistEntry"* %223 to i64
  br i1 %224, label %226, label %228

226:                                              ; preds = %220
  %227 = tail call i64 @llvm.bswap.i64(i64 %225) #17
  br label %238

228:                                              ; preds = %220
  %229 = xor i64 %225, -1
  %230 = getelementptr inbounds i8, i8* %218, i64 8
  %231 = bitcast i8* %230 to i64*
  %232 = load i64, i64* %231, align 8
  %233 = icmp eq i64 %232, %229
  br i1 %233, label %235, label %234, !prof !6

234:                                              ; preds = %228
  tail call fastcc void @_ZN4base8internal12_GLOBAL__N_126FreelistCorruptionDetectedEv() #18
  unreachable

235:                                              ; preds = %228
  %236 = tail call i64 @llvm.bswap.i64(i64 %225) #17
  %237 = inttoptr i64 %236 to i8*
  tail call void @llvm.prefetch(i8* nonnull %237, i32 0, i32 3, i32 1) #17
  br label %238

238:                                              ; preds = %235, %226
  %239 = phi i64 [ %227, %226 ], [ %236, %235 ]
  %240 = inttoptr i64 %239 to %"class.base::internal::PartitionFreelistEntry"*
  store %"class.base::internal::PartitionFreelistEntry"* %240, %"class.base::internal::PartitionFreelistEntry"** %221, align 1
  %241 = getelementptr inbounds %"struct.base::internal::SlotSpanMetadata", %"struct.base::internal::SlotSpanMetadata"* %216, i64 0, i32 3
  %242 = load i16, i16* %241, align 1
  %243 = add i16 %242, 1
  store i16 %243, i16* %241, align 1
  br label %246

244:                                              ; preds = %214
  %245 = call i8* @_ZN4base8internal15PartitionBucketILb1EE13SlowPathAllocEPNS_13PartitionRootILb1EEEimmPb(%"struct.base::internal::PartitionBucket"* %187, %"struct.base::PartitionRoot"* %5, i32 0, i64 %6, i64 16384, i8* nonnull %3) #17
  br label %246

246:                                              ; preds = %244, %238
  %247 = phi i8* [ %218, %238 ], [ %245, %244 ]
  %248 = atomicrmw xchg i32* %190, i32 0 release
  %249 = icmp eq i32 %248, 2
  br i1 %249, label %250, label %251, !prof !7

250:                                              ; preds = %246
  call void @_ZN4base8internal13SpinningMutex9FutexWakeEv(%"class.base::internal::SpinningMutex"* %189) #17
  br label %251

251:                                              ; preds = %250, %246, %184, %180
  %252 = phi i8* [ %181, %180 ], [ %181, %184 ], [ %247, %246 ], [ %247, %250 ]
  %253 = icmp eq i8* %252, null
  br i1 %253, label %256, label %254, !prof !7

254:                                              ; preds = %114, %251
  %255 = phi i8* [ %252, %251 ], [ %115, %114 ]
  br label %256

256:                                              ; preds = %251, %254
  %257 = phi i8* [ null, %251 ], [ %255, %254 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %25) #17
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %3) #17
  %258 = bitcast i8* %257 to %"struct.std::__1::__hash_node_base.69"**
  ret %"struct.std::__1::__hash_node_base.69"** %258
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZNSt3__112__hash_tableINS_17__hash_value_typeIiPvEENS_22__unordered_map_hasherIiS3_NS_4hashIiEENS_8equal_toIvEELb1EEENS_21__unordered_map_equalIiS3_S8_S6_Lb1EEEN4base8internal17MetadataAllocatorIS3_EEE14__erase_uniqueIiEEmRKT_(%"class.std::__1::__hash_table.65"*, i32* dereferenceable(4)) local_unnamed_addr #3 comdat align 2 {
  %3 = alloca %"class.std::__1::unique_ptr.246", align 8
  %4 = load i32, i32* %1, align 4
  %5 = sext i32 %4 to i64
  %6 = getelementptr inbounds %"class.std::__1::__hash_table.65", %"class.std::__1::__hash_table.65"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = icmp eq i64 %7, 0
  br i1 %8, label %66, label %9

9:                                                ; preds = %2
  %10 = tail call i64 @llvm.ctpop.i64(i64 %7) #17, !range !4
  %11 = icmp ugt i64 %10, 1
  br i1 %11, label %15, label %12

12:                                               ; preds = %9
  %13 = add i64 %7, -1
  %14 = and i64 %13, %5
  br label %19

15:                                               ; preds = %9
  %16 = icmp ugt i64 %7, %5
  br i1 %16, label %19, label %17

17:                                               ; preds = %15
  %18 = urem i64 %5, %7
  br label %19

19:                                               ; preds = %17, %15, %12
  %20 = phi i64 [ %14, %12 ], [ %18, %17 ], [ %5, %15 ]
  %21 = getelementptr inbounds %"class.std::__1::__hash_table.65", %"class.std::__1::__hash_table.65"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %22 = load %"struct.std::__1::__hash_node_base.69"**, %"struct.std::__1::__hash_node_base.69"*** %21, align 8
  %23 = getelementptr inbounds %"struct.std::__1::__hash_node_base.69"*, %"struct.std::__1::__hash_node_base.69"** %22, i64 %20
  %24 = load %"struct.std::__1::__hash_node_base.69"*, %"struct.std::__1::__hash_node_base.69"** %23, align 8
  %25 = icmp eq %"struct.std::__1::__hash_node_base.69"* %24, null
  br i1 %25, label %66, label %26

26:                                               ; preds = %19
  %27 = getelementptr inbounds %"struct.std::__1::__hash_node_base.69", %"struct.std::__1::__hash_node_base.69"* %24, i64 0, i32 0
  %28 = load %"struct.std::__1::__hash_node_base.69"*, %"struct.std::__1::__hash_node_base.69"** %27, align 8
  %29 = icmp eq %"struct.std::__1::__hash_node_base.69"* %28, null
  br i1 %29, label %66, label %30

30:                                               ; preds = %26
  %31 = add i64 %7, -1
  br label %32

32:                                               ; preds = %53, %30
  %33 = phi %"struct.std::__1::__hash_node_base.69"* [ %28, %30 ], [ %55, %53 ]
  %34 = getelementptr inbounds %"struct.std::__1::__hash_node_base.69", %"struct.std::__1::__hash_node_base.69"* %33, i64 1
  %35 = bitcast %"struct.std::__1::__hash_node_base.69"* %34 to i64*
  %36 = load i64, i64* %35, align 8
  %37 = icmp eq i64 %36, %5
  br i1 %37, label %48, label %38

38:                                               ; preds = %32
  br i1 %11, label %41, label %39

39:                                               ; preds = %38
  %40 = and i64 %36, %31
  br label %45

41:                                               ; preds = %38
  %42 = icmp ult i64 %36, %7
  br i1 %42, label %45, label %43

43:                                               ; preds = %41
  %44 = urem i64 %36, %7
  br label %45

45:                                               ; preds = %43, %41, %39
  %46 = phi i64 [ %40, %39 ], [ %44, %43 ], [ %36, %41 ]
  %47 = icmp eq i64 %46, %20
  br i1 %47, label %53, label %66

48:                                               ; preds = %32
  %49 = getelementptr inbounds %"struct.std::__1::__hash_node_base.69", %"struct.std::__1::__hash_node_base.69"* %33, i64 2
  %50 = bitcast %"struct.std::__1::__hash_node_base.69"* %49 to i32*
  %51 = load i32, i32* %50, align 4
  %52 = icmp eq i32 %51, %4
  br i1 %52, label %57, label %53

53:                                               ; preds = %48, %45
  %54 = getelementptr inbounds %"struct.std::__1::__hash_node_base.69", %"struct.std::__1::__hash_node_base.69"* %33, i64 0, i32 0
  %55 = load %"struct.std::__1::__hash_node_base.69"*, %"struct.std::__1::__hash_node_base.69"** %54, align 8
  %56 = icmp eq %"struct.std::__1::__hash_node_base.69"* %55, null
  br i1 %56, label %66, label %32

57:                                               ; preds = %48
  %58 = bitcast %"class.std::__1::unique_ptr.246"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %58)
  call void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIiPvEENS_22__unordered_map_hasherIiS3_NS_4hashIiEENS_8equal_toIvEELb1EEENS_21__unordered_map_equalIiS3_S8_S6_Lb1EEEN4base8internal17MetadataAllocatorIS3_EEE6removeENS_21__hash_const_iteratorIPNS_11__hash_nodeIS3_S2_EEEE(%"class.std::__1::unique_ptr.246"* nonnull sret %3, %"class.std::__1::__hash_table.65"* %0, %"struct.std::__1::__hash_node_base.69"* nonnull %33) #17
  %59 = getelementptr inbounds %"class.std::__1::unique_ptr.246", %"class.std::__1::unique_ptr.246"* %3, i64 0, i32 0, i32 0, i32 0
  %60 = load %"struct.std::__1::__hash_node.242"*, %"struct.std::__1::__hash_node.242"** %59, align 8
  store %"struct.std::__1::__hash_node.242"* null, %"struct.std::__1::__hash_node.242"** %59, align 8
  %61 = icmp eq %"struct.std::__1::__hash_node.242"* %60, null
  br i1 %61, label %65, label %62

62:                                               ; preds = %57
  %63 = getelementptr inbounds %"class.std::__1::unique_ptr.246", %"class.std::__1::unique_ptr.246"* %3, i64 0, i32 0, i32 1, i32 0, i32 0
  %64 = load %"class.base::internal::MetadataAllocator.79"*, %"class.base::internal::MetadataAllocator.79"** %63, align 8
  call void @_ZN4base8internal17MetadataAllocatorINSt3__111__hash_nodeINS2_17__hash_value_typeIiPvEES5_EEE10deallocateEPS7_m(%"class.base::internal::MetadataAllocator.79"* %64, %"struct.std::__1::__hash_node.242"* nonnull %60, i64 1) #17
  br label %65

65:                                               ; preds = %57, %62
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %58)
  br label %66

66:                                               ; preds = %45, %53, %26, %2, %19, %65
  %67 = phi i64 [ 1, %65 ], [ 0, %19 ], [ 0, %2 ], [ 0, %26 ], [ 0, %53 ], [ 0, %45 ]
  ret i64 %67
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIiPvEENS_22__unordered_map_hasherIiS3_NS_4hashIiEENS_8equal_toIvEELb1EEENS_21__unordered_map_equalIiS3_S8_S6_Lb1EEEN4base8internal17MetadataAllocatorIS3_EEE6removeENS_21__hash_const_iteratorIPNS_11__hash_nodeIS3_S2_EEEE(%"class.std::__1::unique_ptr.246"* noalias sret, %"class.std::__1::__hash_table.65"*, %"struct.std::__1::__hash_node_base.69"*) local_unnamed_addr #3 comdat align 2 {
  %4 = getelementptr inbounds %"class.std::__1::__hash_table.65", %"class.std::__1::__hash_table.65"* %1, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %5 = load i64, i64* %4, align 8
  %6 = getelementptr inbounds %"struct.std::__1::__hash_node_base.69", %"struct.std::__1::__hash_node_base.69"* %2, i64 1
  %7 = bitcast %"struct.std::__1::__hash_node_base.69"* %6 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = tail call i64 @llvm.ctpop.i64(i64 %5) #17, !range !4
  %10 = icmp ugt i64 %9, 1
  br i1 %10, label %14, label %11

11:                                               ; preds = %3
  %12 = add i64 %5, -1
  %13 = and i64 %12, %8
  br label %18

14:                                               ; preds = %3
  %15 = icmp ult i64 %8, %5
  br i1 %15, label %18, label %16

16:                                               ; preds = %14
  %17 = urem i64 %8, %5
  br label %18

18:                                               ; preds = %11, %14, %16
  %19 = phi i64 [ %13, %11 ], [ %17, %16 ], [ %8, %14 ]
  %20 = getelementptr inbounds %"class.std::__1::__hash_table.65", %"class.std::__1::__hash_table.65"* %1, i64 0, i32 0, i32 0, i32 0, i32 0
  %21 = load %"struct.std::__1::__hash_node_base.69"**, %"struct.std::__1::__hash_node_base.69"*** %20, align 8
  %22 = getelementptr inbounds %"struct.std::__1::__hash_node_base.69"*, %"struct.std::__1::__hash_node_base.69"** %21, i64 %19
  %23 = load %"struct.std::__1::__hash_node_base.69"*, %"struct.std::__1::__hash_node_base.69"** %22, align 8
  br label %24

24:                                               ; preds = %24, %18
  %25 = phi %"struct.std::__1::__hash_node_base.69"* [ %23, %18 ], [ %27, %24 ]
  %26 = getelementptr inbounds %"struct.std::__1::__hash_node_base.69", %"struct.std::__1::__hash_node_base.69"* %25, i64 0, i32 0
  %27 = load %"struct.std::__1::__hash_node_base.69"*, %"struct.std::__1::__hash_node_base.69"** %26, align 8
  %28 = icmp eq %"struct.std::__1::__hash_node_base.69"* %27, %2
  br i1 %28, label %29, label %24

29:                                               ; preds = %24
  %30 = getelementptr inbounds %"class.std::__1::__hash_table.65", %"class.std::__1::__hash_table.65"* %1, i64 0, i32 1
  %31 = getelementptr inbounds %"class.std::__1::__compressed_pair.76", %"class.std::__1::__compressed_pair.76"* %30, i64 0, i32 0, i32 0
  %32 = icmp eq %"struct.std::__1::__hash_node_base.69"* %25, %31
  br i1 %32, label %47, label %33

33:                                               ; preds = %29
  %34 = getelementptr inbounds %"struct.std::__1::__hash_node_base.69", %"struct.std::__1::__hash_node_base.69"* %25, i64 1
  %35 = bitcast %"struct.std::__1::__hash_node_base.69"* %34 to i64*
  %36 = load i64, i64* %35, align 8
  br i1 %10, label %40, label %37

37:                                               ; preds = %33
  %38 = add i64 %5, -1
  %39 = and i64 %36, %38
  br label %44

40:                                               ; preds = %33
  %41 = icmp ult i64 %36, %5
  br i1 %41, label %44, label %42

42:                                               ; preds = %40
  %43 = urem i64 %36, %5
  br label %44

44:                                               ; preds = %37, %40, %42
  %45 = phi i64 [ %39, %37 ], [ %43, %42 ], [ %36, %40 ]
  %46 = icmp eq i64 %45, %19
  br i1 %46, label %66, label %47

47:                                               ; preds = %44, %29
  %48 = getelementptr inbounds %"struct.std::__1::__hash_node_base.69", %"struct.std::__1::__hash_node_base.69"* %2, i64 0, i32 0
  %49 = load %"struct.std::__1::__hash_node_base.69"*, %"struct.std::__1::__hash_node_base.69"** %48, align 8
  %50 = icmp eq %"struct.std::__1::__hash_node_base.69"* %49, null
  br i1 %50, label %65, label %51

51:                                               ; preds = %47
  %52 = getelementptr inbounds %"struct.std::__1::__hash_node_base.69", %"struct.std::__1::__hash_node_base.69"* %49, i64 1
  %53 = bitcast %"struct.std::__1::__hash_node_base.69"* %52 to i64*
  %54 = load i64, i64* %53, align 8
  br i1 %10, label %58, label %55

55:                                               ; preds = %51
  %56 = add i64 %5, -1
  %57 = and i64 %54, %56
  br label %62

58:                                               ; preds = %51
  %59 = icmp ult i64 %54, %5
  br i1 %59, label %62, label %60

60:                                               ; preds = %58
  %61 = urem i64 %54, %5
  br label %62

62:                                               ; preds = %55, %58, %60
  %63 = phi i64 [ %57, %55 ], [ %61, %60 ], [ %54, %58 ]
  %64 = icmp eq i64 %63, %19
  br i1 %64, label %66, label %65

65:                                               ; preds = %62, %47
  store %"struct.std::__1::__hash_node_base.69"* null, %"struct.std::__1::__hash_node_base.69"** %22, align 8
  br label %66

66:                                               ; preds = %62, %44, %65
  %67 = getelementptr inbounds %"struct.std::__1::__hash_node_base.69", %"struct.std::__1::__hash_node_base.69"* %2, i64 0, i32 0
  %68 = load %"struct.std::__1::__hash_node_base.69"*, %"struct.std::__1::__hash_node_base.69"** %67, align 8
  %69 = icmp eq %"struct.std::__1::__hash_node_base.69"* %68, null
  %70 = ptrtoint %"struct.std::__1::__hash_node_base.69"* %68 to i64
  br i1 %69, label %90, label %71

71:                                               ; preds = %66
  %72 = getelementptr inbounds %"struct.std::__1::__hash_node_base.69", %"struct.std::__1::__hash_node_base.69"* %68, i64 1
  %73 = bitcast %"struct.std::__1::__hash_node_base.69"* %72 to i64*
  %74 = load i64, i64* %73, align 8
  br i1 %10, label %78, label %75

75:                                               ; preds = %71
  %76 = add i64 %5, -1
  %77 = and i64 %74, %76
  br label %82

78:                                               ; preds = %71
  %79 = icmp ult i64 %74, %5
  br i1 %79, label %82, label %80

80:                                               ; preds = %78
  %81 = urem i64 %74, %5
  br label %82

82:                                               ; preds = %75, %78, %80
  %83 = phi i64 [ %77, %75 ], [ %81, %80 ], [ %74, %78 ]
  %84 = icmp eq i64 %83, %19
  br i1 %84, label %90, label %85

85:                                               ; preds = %82
  %86 = load %"struct.std::__1::__hash_node_base.69"**, %"struct.std::__1::__hash_node_base.69"*** %20, align 8
  %87 = getelementptr inbounds %"struct.std::__1::__hash_node_base.69"*, %"struct.std::__1::__hash_node_base.69"** %86, i64 %83
  store %"struct.std::__1::__hash_node_base.69"* %25, %"struct.std::__1::__hash_node_base.69"** %87, align 8
  %88 = bitcast %"struct.std::__1::__hash_node_base.69"* %2 to i64*
  %89 = load i64, i64* %88, align 8
  br label %90

90:                                               ; preds = %85, %82, %66
  %91 = phi i64 [ %89, %85 ], [ %70, %82 ], [ %70, %66 ]
  %92 = bitcast %"struct.std::__1::__hash_node_base.69"* %25 to i64*
  store i64 %91, i64* %92, align 8
  store %"struct.std::__1::__hash_node_base.69"* null, %"struct.std::__1::__hash_node_base.69"** %67, align 8
  %93 = getelementptr inbounds %"class.std::__1::__hash_table.65", %"class.std::__1::__hash_table.65"* %1, i64 0, i32 2, i32 0, i32 0
  %94 = load i64, i64* %93, align 8
  %95 = add i64 %94, -1
  store i64 %95, i64* %93, align 8
  %96 = ptrtoint %"struct.std::__1::__hash_node_base.69"* %2 to i64
  %97 = bitcast %"class.std::__1::unique_ptr.246"* %0 to i64*
  store i64 %96, i64* %97, align 8
  %98 = getelementptr inbounds %"class.std::__1::unique_ptr.246", %"class.std::__1::unique_ptr.246"* %0, i64 0, i32 0, i32 1, i32 0, i32 0
  %99 = bitcast %"class.base::internal::MetadataAllocator.79"** %98 to %"class.std::__1::__compressed_pair.76"**
  store %"class.std::__1::__compressed_pair.76"* %30, %"class.std::__1::__compressed_pair.76"** %99, align 8
  %100 = getelementptr inbounds %"class.std::__1::unique_ptr.246", %"class.std::__1::unique_ptr.246"* %0, i64 0, i32 0, i32 1, i32 0, i32 1
  store i8 1, i8* %100, align 8
  ret void
}

; Function Attrs: nounwind readnone speculatable
declare i64 @llvm.ctpop.i64(i64) #14

attributes #0 = { noinline noreturn nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nofree norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nofree nounwind }
attributes #8 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="256" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+avx,+avx2,+cx8,+fxsr,+mmx,+popcnt,+sse,+sse2,+sse3,+sse4.1,+sse4.2,+ssse3,+x87,+xsave" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="128" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+sse4.1,+ssse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #11 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #12 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #13 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #14 = { nounwind readnone speculatable }
attributes #15 = { inaccessiblemem_or_argmemonly nounwind }
attributes #16 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #17 = { nounwind }
attributes #18 = { noreturn nounwind }
attributes #19 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i32 -2135163473}
!3 = !{i32 -2135163452}
!4 = !{i64 0, i64 65}
!5 = !{i8 0, i8 2}
!6 = !{!"branch_weights", i32 2000, i32 1}
!7 = !{!"branch_weights", i32 1, i32 2000}
!8 = !{!"branch_weights", i32 1, i32 1048575}
!9 = !{!"branch_weights", i32 2146410443, i32 1073205}
!10 = !{i32 -2142041168}
!11 = distinct !{!11, !12}
!12 = !{!"llvm.loop.unroll.disable"}
!13 = distinct !{!13, !12}
!14 = distinct !{!14, !12}
!15 = distinct !{!15, !12}
!16 = !{!"branch_weights", i32 2000, i32 2001, i32 4000000}
!17 = distinct !{!17, !12}
!18 = distinct !{!18, !12}
!19 = !{!"branch_weights", i32 4001, i32 4000000}
!20 = !{!21}
!21 = distinct !{!21, !22, !"_ZNSt3__16__treeImNS_4lessIvEEN4base8internal17MetadataAllocatorImEEE16__construct_nodeIJmEEENS_10unique_ptrINS_11__tree_nodeImPvEENS_22__tree_node_destructorINS5_ISC_EEEEEEDpOT_: argument 0"}
!22 = distinct !{!22, !"_ZNSt3__16__treeImNS_4lessIvEEN4base8internal17MetadataAllocatorImEEE16__construct_nodeIJmEEENS_10unique_ptrINS_11__tree_nodeImPvEENS_22__tree_node_destructorINS5_ISC_EEEEEEDpOT_"}
!23 = !{!24}
!24 = distinct !{!24, !25, !"_ZNSt3__16__treeImNS_4lessIvEEN4base8internal17MetadataAllocatorImEEE16__construct_nodeIJmEEENS_10unique_ptrINS_11__tree_nodeImPvEENS_22__tree_node_destructorINS5_ISC_EEEEEEDpOT_: argument 0"}
!25 = distinct !{!25, !"_ZNSt3__16__treeImNS_4lessIvEEN4base8internal17MetadataAllocatorImEEE16__construct_nodeIJmEEENS_10unique_ptrINS_11__tree_nodeImPvEENS_22__tree_node_destructorINS5_ISC_EEEEEEDpOT_"}
!26 = !{i32 -2142079741}
!27 = !{i32 -2142079720}
!28 = !{!29}
!29 = distinct !{!29, !30, !"_ZNSt3__112__hash_tableINS_17__hash_value_typeIiNS_5arrayIN4base8internal14StatsCollector18DeferredTraceEventELm4EEEEENS_22__unordered_map_hasherIiS8_NS_4hashIiEENS_8equal_toIvEELb1EEENS_21__unordered_map_equalIiS8_SD_SB_Lb1EEENS4_17MetadataAllocatorIS8_EEE21__construct_node_hashIRKNS_21piecewise_construct_tEJNS_5tupleIJRKiEEENSO_IJEEEEEENS_10unique_ptrINS_11__hash_nodeIS8_PvEENS_22__hash_node_destructorINSH_ISW_EEEEEEmOT_DpOT0_: argument 0"}
!30 = distinct !{!30, !"_ZNSt3__112__hash_tableINS_17__hash_value_typeIiNS_5arrayIN4base8internal14StatsCollector18DeferredTraceEventELm4EEEEENS_22__unordered_map_hasherIiS8_NS_4hashIiEENS_8equal_toIvEELb1EEENS_21__unordered_map_equalIiS8_SD_SB_Lb1EEENS4_17MetadataAllocatorIS8_EEE21__construct_node_hashIRKNS_21piecewise_construct_tEJNS_5tupleIJRKiEEENSO_IJEEEEEENS_10unique_ptrINS_11__hash_nodeIS8_PvEENS_22__hash_node_destructorINSH_ISW_EEEEEEmOT_DpOT0_"}
!31 = distinct !{!31, !12}
!32 = !{!33}
!33 = distinct !{!33, !34, !"_ZNSt3__112__hash_tableINS_17__hash_value_typeIiPvEENS_22__unordered_map_hasherIiS3_NS_4hashIiEENS_8equal_toIvEELb1EEENS_21__unordered_map_equalIiS3_S8_S6_Lb1EEEN4base8internal17MetadataAllocatorIS3_EEE21__construct_node_hashINS_4pairIKiS2_EEJEEENS_10unique_ptrINS_11__hash_nodeIS3_S2_EENS_22__hash_node_destructorINSE_ISN_EEEEEEmOT_DpOT0_: argument 0"}
!34 = distinct !{!34, !"_ZNSt3__112__hash_tableINS_17__hash_value_typeIiPvEENS_22__unordered_map_hasherIiS3_NS_4hashIiEENS_8equal_toIvEELb1EEENS_21__unordered_map_equalIiS3_S8_S6_Lb1EEEN4base8internal17MetadataAllocatorIS3_EEE21__construct_node_hashINS_4pairIKiS2_EEJEEENS_10unique_ptrINS_11__hash_nodeIS3_S2_EENS_22__hash_node_destructorINSE_ISN_EEEEEEmOT_DpOT0_"}
!35 = distinct !{!35, !12}
