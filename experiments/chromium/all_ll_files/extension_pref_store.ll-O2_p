; ModuleID = '../../extensions/browser/extension_pref_store.cc'
source_filename = "../../extensions/browser/extension_pref_store.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%class.ExtensionPrefStore = type <{ %class.ValueMapPrefStore, %"class.ExtensionPrefValueMap::Observer", %class.ExtensionPrefValueMap*, i8, [7 x i8] }>
%class.ValueMapPrefStore = type { %class.WriteablePrefStore.base, %class.PrefValueMap, %"class.base::ObserverList" }
%class.WriteablePrefStore.base = type { %class.PrefStore.base }
%class.PrefStore.base = type <{ i32 (...)**, %"class.base::RefCounted" }>
%"class.base::RefCounted" = type { %"class.base::subtle::RefCountedBase" }
%"class.base::subtle::RefCountedBase" = type { i32 }
%class.PrefValueMap = type { i32 (...)**, %"class.std::__1::map" }
%"class.std::__1::map" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair", %"class.std::__1::__compressed_pair.1" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type opaque
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.1" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"struct.std::__1::__compressed_pair_elem.2" = type { i64 }
%"class.base::ObserverList" = type <{ %"class.std::__1::vector", %"class.base::LinkedList", i64, i32, [4 x i8] }>
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"*, %"class.std::__1::__compressed_pair.4" }
%"class.base::internal::UncheckedObserverAdapter" = type { i8* }
%"class.std::__1::__compressed_pair.4" = type { %"struct.std::__1::__compressed_pair_elem.5" }
%"struct.std::__1::__compressed_pair_elem.5" = type { %"class.base::internal::UncheckedObserverAdapter"* }
%"class.base::LinkedList" = type { %"class.base::LinkNode" }
%"class.base::LinkNode" = type { %"class.base::internal::LinkNodeBase" }
%"class.base::internal::LinkNodeBase" = type { %"class.base::internal::LinkNodeBase"*, %"class.base::internal::LinkNodeBase"* }
%"class.ExtensionPrefValueMap::Observer" = type { i32 (...)** }
%class.ExtensionPrefValueMap = type { %class.KeyedService, %"class.std::__1::map.9", i8, [7 x i8], %"class.base::ObserverList.18" }
%class.KeyedService = type { i32 (...)** }
%"class.std::__1::map.9" = type { %"class.std::__1::__tree.10" }
%"class.std::__1::__tree.10" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.11", %"class.std::__1::__compressed_pair.15" }
%"class.std::__1::__compressed_pair.11" = type { %"struct.std::__1::__compressed_pair_elem" }
%"class.std::__1::__compressed_pair.15" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.base::ObserverList.18" = type <{ %"class.std::__1::vector", %"class.base::LinkedList.19", i64, i32, [4 x i8] }>
%"class.base::LinkedList.19" = type { %"class.base::LinkNode.20" }
%"class.base::LinkNode.20" = type { %"class.base::internal::LinkNodeBase" }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.22" }
%"class.std::__1::__compressed_pair.22" = type { %"struct.std::__1::__compressed_pair_elem.23" }
%"struct.std::__1::__compressed_pair_elem.23" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.logging::LogMessage" = type opaque
%"class.base::Value" = type { %"class.absl::variant" }
%"class.absl::variant" = type { %"class.absl::variant_internal::VariantCopyAssignBaseNontrivial" }
%"class.absl::variant_internal::VariantCopyAssignBaseNontrivial" = type { %"class.absl::variant_internal::VariantMoveAssignBaseNontrivial" }
%"class.absl::variant_internal::VariantMoveAssignBaseNontrivial" = type { %"class.absl::variant_internal::VariantCopyBaseNontrivial" }
%"class.absl::variant_internal::VariantCopyBaseNontrivial" = type { %"class.absl::variant_internal::VariantMoveBaseNontrivial" }
%"class.absl::variant_internal::VariantMoveBaseNontrivial" = type { %"class.absl::variant_internal::VariantStateBaseDestructorNontrivial" }
%"class.absl::variant_internal::VariantStateBaseDestructorNontrivial" = type { %"class.absl::variant_internal::VariantStateBase" }
%"class.absl::variant_internal::VariantStateBase" = type { %"union.absl::variant_internal::DestructibleUnionImpl", i64 }
%"union.absl::variant_internal::DestructibleUnionImpl" = type { %"union.absl::variant_internal::DestructibleUnionImpl.27" }
%"union.absl::variant_internal::DestructibleUnionImpl.27" = type { %"union.absl::variant_internal::DestructibleUnionImpl.28" }
%"union.absl::variant_internal::DestructibleUnionImpl.28" = type { %"union.absl::variant_internal::DestructibleUnionImpl.29" }
%"union.absl::variant_internal::DestructibleUnionImpl.29" = type { %"union.absl::variant_internal::DestructibleUnionImpl.30" }
%"union.absl::variant_internal::DestructibleUnionImpl.30" = type { %"class.std::__1::basic_string" }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.PrefStore::Observer" = type { i32 (...)** }
%class.PrefStore = type <{ i32 (...)**, %"class.base::RefCounted", [4 x i8] }>

@_ZTV18ExtensionPrefStore = hidden unnamed_addr constant { [20 x i8*], [7 x i8*] } { [20 x i8*] [i8* null, i8* null, i8* bitcast (void (%class.ValueMapPrefStore*, %"class.PrefStore::Observer"*)* @_ZN17ValueMapPrefStore11AddObserverEPN9PrefStore8ObserverE to i8*), i8* bitcast (void (%class.ValueMapPrefStore*, %"class.PrefStore::Observer"*)* @_ZN17ValueMapPrefStore14RemoveObserverEPN9PrefStore8ObserverE to i8*), i8* bitcast (i1 (%class.ValueMapPrefStore*)* @_ZNK17ValueMapPrefStore12HasObserversEv to i8*), i8* bitcast (i1 (%class.PrefStore*)* @_ZNK9PrefStore24IsInitializationCompleteEv to i8*), i8* bitcast (i1 (%class.ValueMapPrefStore*, %"class.std::__1::basic_string"*, %"class.base::Value"**)* @_ZNK17ValueMapPrefStore8GetValueERKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEEPPKN4base5ValueE to i8*), i8* bitcast (void ()* @_ZNK17ValueMapPrefStore9GetValuesEv to i8*), i8* bitcast (void (%class.ExtensionPrefStore*)* @_ZN18ExtensionPrefStoreD2Ev to i8*), i8* bitcast (void (%class.ExtensionPrefStore*)* @_ZN18ExtensionPrefStoreD0Ev to i8*), i8* bitcast (void (%class.ValueMapPrefStore*, %"class.std::__1::basic_string"*, %"class.base::Value"*, i32)* @_ZN17ValueMapPrefStore8SetValueERKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEENS0_10unique_ptrIN4base5ValueENS0_14default_deleteISB_EEEEj to i8*), i8* bitcast (void (%class.ValueMapPrefStore*, %"class.std::__1::basic_string"*, i32)* @_ZN17ValueMapPrefStore11RemoveValueERKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEEj to i8*), i8* bitcast (i1 (%class.ValueMapPrefStore*, %"class.std::__1::basic_string"*, %"class.base::Value"**)* @_ZN17ValueMapPrefStore15GetMutableValueERKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEEPPN4base5ValueE to i8*), i8* bitcast (void (%class.ValueMapPrefStore*, %"class.std::__1::basic_string"*, i32)* @_ZN17ValueMapPrefStore18ReportValueChangedERKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEEj to i8*), i8* bitcast (void ()* @_ZN18WriteablePrefStore22ReportSubValuesChangedERKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEENS0_3setINS0_6vectorIS6_NS4_IS6_EEEENS0_4lessISC_EENS4_ISC_EEEEj to i8*), i8* bitcast (void (%class.ValueMapPrefStore*, %"class.std::__1::basic_string"*, %"class.base::Value"*, i32)* @_ZN17ValueMapPrefStore16SetValueSilentlyERKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEENS0_10unique_ptrIN4base5ValueENS0_14default_deleteISB_EEEEj to i8*), i8* bitcast (void (%class.ValueMapPrefStore*, %"class.std::__1::basic_string"*)* @_ZN17ValueMapPrefStore28RemoveValuesByPrefixSilentlyERKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEE to i8*), i8* bitcast (void (%class.ExtensionPrefStore*)* @_ZN18ExtensionPrefStore25OnInitializationCompletedEv to i8*), i8* bitcast (void (%class.ExtensionPrefStore*, %"class.std::__1::basic_string"*)* @_ZN18ExtensionPrefStore18OnPrefValueChangedERKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEE to i8*), i8* bitcast (void (%class.ExtensionPrefStore*)* @_ZN18ExtensionPrefStore34OnExtensionPrefValueMapDestructionEv to i8*)], [7 x i8*] [i8* inttoptr (i64 -104 to i8*), i8* null, i8* bitcast (void (%class.ExtensionPrefStore*, %"class.std::__1::basic_string"*)* @_ZThn104_N18ExtensionPrefStore18OnPrefValueChangedERKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEE to i8*), i8* bitcast (void (%class.ExtensionPrefStore*)* @_ZThn104_N18ExtensionPrefStore25OnInitializationCompletedEv to i8*), i8* bitcast (void (%class.ExtensionPrefStore*)* @_ZThn104_N18ExtensionPrefStore34OnExtensionPrefValueMapDestructionEv to i8*), i8* bitcast (void (%class.ExtensionPrefStore*)* @_ZThn104_N18ExtensionPrefStoreD1Ev to i8*), i8* bitcast (void (%class.ExtensionPrefStore*)* @_ZThn104_N18ExtensionPrefStoreD0Ev to i8*)] }, align 8
@.str = private unnamed_addr constant [49 x i8] c"../../extensions/browser/extension_pref_store.cc\00", align 1
@.str.1 = private unnamed_addr constant [26 x i8] c"extension_pref_value_map_\00", align 1

@_ZN18ExtensionPrefStoreC1EP21ExtensionPrefValueMapb = hidden unnamed_addr alias void (%class.ExtensionPrefStore*, %class.ExtensionPrefValueMap*, i1), void (%class.ExtensionPrefStore*, %class.ExtensionPrefValueMap*, i1)* @_ZN18ExtensionPrefStoreC2EP21ExtensionPrefValueMapb
@_ZN18ExtensionPrefStoreD1Ev = hidden unnamed_addr alias void (%class.ExtensionPrefStore*), void (%class.ExtensionPrefStore*)* @_ZN18ExtensionPrefStoreD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN18ExtensionPrefStoreC2EP21ExtensionPrefValueMapb(%class.ExtensionPrefStore*, %class.ExtensionPrefValueMap*, i1 zeroext) unnamed_addr #0 align 2 {
  %4 = zext i1 %2 to i8
  %5 = getelementptr inbounds %class.ExtensionPrefStore, %class.ExtensionPrefStore* %0, i64 0, i32 0
  tail call void @_ZN17ValueMapPrefStoreC2Ev(%class.ValueMapPrefStore* %5) #5
  %6 = getelementptr inbounds %class.ExtensionPrefStore, %class.ExtensionPrefStore* %0, i64 0, i32 1
  %7 = getelementptr inbounds %"class.ExtensionPrefValueMap::Observer", %"class.ExtensionPrefValueMap::Observer"* %6, i64 0, i32 0
  %8 = getelementptr inbounds %class.ExtensionPrefStore, %class.ExtensionPrefStore* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [20 x i8*], [7 x i8*] }, { [20 x i8*], [7 x i8*] }* @_ZTV18ExtensionPrefStore, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %8, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [20 x i8*], [7 x i8*] }, { [20 x i8*], [7 x i8*] }* @_ZTV18ExtensionPrefStore, i64 0, inrange i32 1, i64 2) to i32 (...)**), i32 (...)*** %7, align 8
  %9 = getelementptr inbounds %class.ExtensionPrefStore, %class.ExtensionPrefStore* %0, i64 0, i32 2
  store %class.ExtensionPrefValueMap* %1, %class.ExtensionPrefValueMap** %9, align 8
  %10 = getelementptr inbounds %class.ExtensionPrefStore, %class.ExtensionPrefStore* %0, i64 0, i32 3
  store i8 %4, i8* %10, align 8
  tail call void @_ZN21ExtensionPrefValueMap11AddObserverEPNS_8ObserverE(%class.ExtensionPrefValueMap* %1, %"class.ExtensionPrefValueMap::Observer"* %6) #5
  ret void
}

declare void @_ZN17ValueMapPrefStoreC2Ev(%class.ValueMapPrefStore*) unnamed_addr #1

declare void @_ZN21ExtensionPrefValueMap11AddObserverEPNS_8ObserverE(%class.ExtensionPrefValueMap*, %"class.ExtensionPrefValueMap::Observer"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN18ExtensionPrefStore25OnInitializationCompletedEv(%class.ExtensionPrefStore*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %class.ExtensionPrefStore, %class.ExtensionPrefStore* %0, i64 0, i32 0
  tail call void @_ZN17ValueMapPrefStore29NotifyInitializationCompletedEv(%class.ValueMapPrefStore* %2) #5
  ret void
}

declare void @_ZN17ValueMapPrefStore29NotifyInitializationCompletedEv(%class.ValueMapPrefStore*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn104_N18ExtensionPrefStore25OnInitializationCompletedEv(%class.ExtensionPrefStore*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %class.ExtensionPrefStore, %class.ExtensionPrefStore* %0, i64 -1, i32 0, i32 1, i32 1
  %3 = bitcast %"class.std::__1::map"* %2 to %class.ValueMapPrefStore*
  tail call void @_ZN17ValueMapPrefStore29NotifyInitializationCompletedEv(%class.ValueMapPrefStore* %3) #5
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN18ExtensionPrefStore18OnPrefValueChangedERKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEE(%class.ExtensionPrefStore*, %"class.std::__1::basic_string"* dereferenceable(24)) unnamed_addr #0 align 2 {
  %3 = alloca %"class.logging::CheckError", align 8
  %4 = alloca %"class.base::Value", align 8
  %5 = getelementptr inbounds %class.ExtensionPrefStore, %class.ExtensionPrefStore* %0, i64 0, i32 2
  %6 = load %class.ExtensionPrefValueMap*, %class.ExtensionPrefValueMap** %5, align 8
  %7 = icmp eq %class.ExtensionPrefValueMap* %6, null
  br i1 %7, label %8, label %12

8:                                                ; preds = %2
  %9 = bitcast %"class.logging::CheckError"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %9) #5
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %3, i8* getelementptr inbounds ([49 x i8], [49 x i8]* @.str, i64 0, i64 0), i32 23, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.1, i64 0, i64 0)) #5
  %10 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %3) #5
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %3) #5
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9) #5
  %11 = load %class.ExtensionPrefValueMap*, %class.ExtensionPrefValueMap** %5, align 8
  br label %12

12:                                               ; preds = %2, %8
  %13 = phi %class.ExtensionPrefValueMap* [ %6, %2 ], [ %11, %8 ]
  %14 = getelementptr inbounds %class.ExtensionPrefStore, %class.ExtensionPrefStore* %0, i64 0, i32 3
  %15 = load i8, i8* %14, align 8, !range !2
  %16 = icmp ne i8 %15, 0
  %17 = call %"class.base::Value"* @_ZNK21ExtensionPrefValueMap21GetEffectivePrefValueERKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEEbPb(%class.ExtensionPrefValueMap* %13, %"class.std::__1::basic_string"* dereferenceable(24) %1, i1 zeroext %16, i8* null) #5
  %18 = icmp eq %"class.base::Value"* %17, null
  %19 = getelementptr inbounds %class.ExtensionPrefStore, %class.ExtensionPrefStore* %0, i64 0, i32 0
  br i1 %18, label %26, label %20

20:                                               ; preds = %12
  call void @_ZNK4base5Value5CloneEv(%"class.base::Value"* nonnull sret %4, %"class.base::Value"* nonnull %17) #5
  %21 = call %"class.base::Value"* @_ZN4base5Value16ToUniquePtrValueES0_(%"class.base::Value"* nonnull %4) #5
  %22 = bitcast %class.ExtensionPrefStore* %0 to void (%class.ValueMapPrefStore*, %"class.std::__1::basic_string"*, %"class.base::Value"*, i32)***
  %23 = load void (%class.ValueMapPrefStore*, %"class.std::__1::basic_string"*, %"class.base::Value"*, i32)**, void (%class.ValueMapPrefStore*, %"class.std::__1::basic_string"*, %"class.base::Value"*, i32)*** %22, align 8
  %24 = getelementptr inbounds void (%class.ValueMapPrefStore*, %"class.std::__1::basic_string"*, %"class.base::Value"*, i32)*, void (%class.ValueMapPrefStore*, %"class.std::__1::basic_string"*, %"class.base::Value"*, i32)** %23, i64 8
  %25 = load void (%class.ValueMapPrefStore*, %"class.std::__1::basic_string"*, %"class.base::Value"*, i32)*, void (%class.ValueMapPrefStore*, %"class.std::__1::basic_string"*, %"class.base::Value"*, i32)** %24, align 8
  call void %25(%class.ValueMapPrefStore* %19, %"class.std::__1::basic_string"* dereferenceable(24) %1, %"class.base::Value"* %21, i32 0) #5
  call void @_ZN4base5ValueD1Ev(%"class.base::Value"* nonnull %4) #5
  br label %31

26:                                               ; preds = %12
  %27 = bitcast %class.ExtensionPrefStore* %0 to void (%class.ValueMapPrefStore*, %"class.std::__1::basic_string"*, i32)***
  %28 = load void (%class.ValueMapPrefStore*, %"class.std::__1::basic_string"*, i32)**, void (%class.ValueMapPrefStore*, %"class.std::__1::basic_string"*, i32)*** %27, align 8
  %29 = getelementptr inbounds void (%class.ValueMapPrefStore*, %"class.std::__1::basic_string"*, i32)*, void (%class.ValueMapPrefStore*, %"class.std::__1::basic_string"*, i32)** %28, i64 9
  %30 = load void (%class.ValueMapPrefStore*, %"class.std::__1::basic_string"*, i32)*, void (%class.ValueMapPrefStore*, %"class.std::__1::basic_string"*, i32)** %29, align 8
  call void %30(%class.ValueMapPrefStore* %19, %"class.std::__1::basic_string"* dereferenceable(24) %1, i32 0) #5
  br label %31

31:                                               ; preds = %26, %20
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

declare void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* sret, i8*, i32, i8*) local_unnamed_addr #1

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #3

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

declare %"class.base::Value"* @_ZNK21ExtensionPrefValueMap21GetEffectivePrefValueERKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEEbPb(%class.ExtensionPrefValueMap*, %"class.std::__1::basic_string"* dereferenceable(24), i1 zeroext, i8*) local_unnamed_addr #1

declare %"class.base::Value"* @_ZN4base5Value16ToUniquePtrValueES0_(%"class.base::Value"*) local_unnamed_addr #1

declare void @_ZNK4base5Value5CloneEv(%"class.base::Value"* sret, %"class.base::Value"*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN4base5ValueD1Ev(%"class.base::Value"*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn104_N18ExtensionPrefStore18OnPrefValueChangedERKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEE(%class.ExtensionPrefStore*, %"class.std::__1::basic_string"* dereferenceable(24)) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %class.ExtensionPrefStore, %class.ExtensionPrefStore* %0, i64 -1, i32 0, i32 1, i32 1
  %4 = bitcast %"class.std::__1::map"* %3 to %class.ExtensionPrefStore*
  tail call void @_ZN18ExtensionPrefStore18OnPrefValueChangedERKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEE(%class.ExtensionPrefStore* %4, %"class.std::__1::basic_string"* dereferenceable(24) %1)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN18ExtensionPrefStore34OnExtensionPrefValueMapDestructionEv(%class.ExtensionPrefStore*) unnamed_addr #0 align 2 {
  %2 = alloca %"class.logging::CheckError", align 8
  %3 = getelementptr inbounds %class.ExtensionPrefStore, %class.ExtensionPrefStore* %0, i64 0, i32 2
  %4 = load %class.ExtensionPrefValueMap*, %class.ExtensionPrefValueMap** %3, align 8
  %5 = icmp eq %class.ExtensionPrefValueMap* %4, null
  br i1 %5, label %6, label %10

6:                                                ; preds = %1
  %7 = bitcast %"class.logging::CheckError"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7) #5
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %2, i8* getelementptr inbounds ([49 x i8], [49 x i8]* @.str, i64 0, i64 0), i32 35, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.1, i64 0, i64 0)) #5
  %8 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %2) #5
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %2) #5
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7) #5
  %9 = load %class.ExtensionPrefValueMap*, %class.ExtensionPrefValueMap** %3, align 8
  br label %10

10:                                               ; preds = %1, %6
  %11 = phi %class.ExtensionPrefValueMap* [ %4, %1 ], [ %9, %6 ]
  %12 = getelementptr inbounds %class.ExtensionPrefStore, %class.ExtensionPrefStore* %0, i64 0, i32 1
  call void @_ZN21ExtensionPrefValueMap14RemoveObserverEPNS_8ObserverE(%class.ExtensionPrefValueMap* %11, %"class.ExtensionPrefValueMap::Observer"* %12) #5
  store %class.ExtensionPrefValueMap* null, %class.ExtensionPrefValueMap** %3, align 8
  ret void
}

declare void @_ZN21ExtensionPrefValueMap14RemoveObserverEPNS_8ObserverE(%class.ExtensionPrefValueMap*, %"class.ExtensionPrefValueMap::Observer"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn104_N18ExtensionPrefStore34OnExtensionPrefValueMapDestructionEv(%class.ExtensionPrefStore*) unnamed_addr #0 align 2 {
  %2 = alloca %"class.logging::CheckError", align 8
  %3 = getelementptr inbounds %class.ExtensionPrefStore, %class.ExtensionPrefStore* %0, i64 -1, i32 0, i32 1, i32 1
  %4 = getelementptr inbounds %"class.std::__1::map", %"class.std::__1::map"* %3, i64 4, i32 0, i32 2
  %5 = bitcast %"class.std::__1::__compressed_pair.1"* %4 to %class.ExtensionPrefValueMap**
  %6 = load %class.ExtensionPrefValueMap*, %class.ExtensionPrefValueMap** %5, align 8
  %7 = icmp eq %class.ExtensionPrefValueMap* %6, null
  br i1 %7, label %8, label %12

8:                                                ; preds = %1
  %9 = bitcast %"class.logging::CheckError"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %9) #5
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %2, i8* getelementptr inbounds ([49 x i8], [49 x i8]* @.str, i64 0, i64 0), i32 35, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.1, i64 0, i64 0)) #5
  %10 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %2) #5
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %2) #5
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9) #5
  %11 = load %class.ExtensionPrefValueMap*, %class.ExtensionPrefValueMap** %5, align 8
  br label %12

12:                                               ; preds = %1, %8
  %13 = phi %class.ExtensionPrefValueMap* [ %6, %1 ], [ %11, %8 ]
  %14 = getelementptr inbounds %"class.std::__1::map", %"class.std::__1::map"* %3, i64 4, i32 0, i32 1
  %15 = bitcast %"class.std::__1::__compressed_pair"* %14 to %"class.ExtensionPrefValueMap::Observer"*
  call void @_ZN21ExtensionPrefValueMap14RemoveObserverEPNS_8ObserverE(%class.ExtensionPrefValueMap* %13, %"class.ExtensionPrefValueMap::Observer"* %15) #5
  store %class.ExtensionPrefValueMap* null, %class.ExtensionPrefValueMap** %5, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN18ExtensionPrefStoreD2Ev(%class.ExtensionPrefStore*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %class.ExtensionPrefStore, %class.ExtensionPrefStore* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [20 x i8*], [7 x i8*] }, { [20 x i8*], [7 x i8*] }* @_ZTV18ExtensionPrefStore, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %class.ExtensionPrefStore, %class.ExtensionPrefStore* %0, i64 0, i32 1
  %4 = getelementptr inbounds %"class.ExtensionPrefValueMap::Observer", %"class.ExtensionPrefValueMap::Observer"* %3, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [20 x i8*], [7 x i8*] }, { [20 x i8*], [7 x i8*] }* @_ZTV18ExtensionPrefStore, i64 0, inrange i32 1, i64 2) to i32 (...)**), i32 (...)*** %4, align 8
  %5 = getelementptr inbounds %class.ExtensionPrefStore, %class.ExtensionPrefStore* %0, i64 0, i32 2
  %6 = load %class.ExtensionPrefValueMap*, %class.ExtensionPrefValueMap** %5, align 8
  %7 = icmp eq %class.ExtensionPrefValueMap* %6, null
  br i1 %7, label %9, label %8

8:                                                ; preds = %1
  tail call void @_ZN21ExtensionPrefValueMap14RemoveObserverEPNS_8ObserverE(%class.ExtensionPrefValueMap* nonnull %6, %"class.ExtensionPrefValueMap::Observer"* %3) #5
  br label %9

9:                                                ; preds = %1, %8
  %10 = getelementptr inbounds %class.ExtensionPrefStore, %class.ExtensionPrefStore* %0, i64 0, i32 0
  tail call void @_ZN17ValueMapPrefStoreD2Ev(%class.ValueMapPrefStore* %10) #5
  ret void
}

; Function Attrs: nounwind
declare void @_ZN17ValueMapPrefStoreD2Ev(%class.ValueMapPrefStore*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn104_N18ExtensionPrefStoreD1Ev(%class.ExtensionPrefStore*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %class.ExtensionPrefStore, %class.ExtensionPrefStore* %0, i64 -1, i32 0, i32 1, i32 1
  %3 = bitcast %"class.std::__1::map"* %2 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [20 x i8*], [7 x i8*] }, { [20 x i8*], [7 x i8*] }* @_ZTV18ExtensionPrefStore, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %3, align 8
  %4 = getelementptr inbounds %"class.std::__1::map", %"class.std::__1::map"* %2, i64 4, i32 0, i32 1
  %5 = bitcast %"class.std::__1::__compressed_pair"* %4 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [20 x i8*], [7 x i8*] }, { [20 x i8*], [7 x i8*] }* @_ZTV18ExtensionPrefStore, i64 0, inrange i32 1, i64 2) to i32 (...)**), i32 (...)*** %5, align 8
  %6 = getelementptr inbounds %"class.std::__1::map", %"class.std::__1::map"* %2, i64 4, i32 0, i32 2
  %7 = bitcast %"class.std::__1::__compressed_pair.1"* %6 to %class.ExtensionPrefValueMap**
  %8 = load %class.ExtensionPrefValueMap*, %class.ExtensionPrefValueMap** %7, align 8
  %9 = icmp eq %class.ExtensionPrefValueMap* %8, null
  br i1 %9, label %12, label %10

10:                                               ; preds = %1
  %11 = bitcast %"class.std::__1::__compressed_pair"* %4 to %"class.ExtensionPrefValueMap::Observer"*
  tail call void @_ZN21ExtensionPrefValueMap14RemoveObserverEPNS_8ObserverE(%class.ExtensionPrefValueMap* nonnull %8, %"class.ExtensionPrefValueMap::Observer"* %11) #5
  br label %12

12:                                               ; preds = %1, %10
  %13 = bitcast %"class.std::__1::map"* %2 to %class.ValueMapPrefStore*
  tail call void @_ZN17ValueMapPrefStoreD2Ev(%class.ValueMapPrefStore* %13) #5
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN18ExtensionPrefStoreD0Ev(%class.ExtensionPrefStore*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %class.ExtensionPrefStore, %class.ExtensionPrefStore* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [20 x i8*], [7 x i8*] }, { [20 x i8*], [7 x i8*] }* @_ZTV18ExtensionPrefStore, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %class.ExtensionPrefStore, %class.ExtensionPrefStore* %0, i64 0, i32 1
  %4 = getelementptr inbounds %"class.ExtensionPrefValueMap::Observer", %"class.ExtensionPrefValueMap::Observer"* %3, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [20 x i8*], [7 x i8*] }, { [20 x i8*], [7 x i8*] }* @_ZTV18ExtensionPrefStore, i64 0, inrange i32 1, i64 2) to i32 (...)**), i32 (...)*** %4, align 8
  %5 = getelementptr inbounds %class.ExtensionPrefStore, %class.ExtensionPrefStore* %0, i64 0, i32 2
  %6 = load %class.ExtensionPrefValueMap*, %class.ExtensionPrefValueMap** %5, align 8
  %7 = icmp eq %class.ExtensionPrefValueMap* %6, null
  br i1 %7, label %9, label %8

8:                                                ; preds = %1
  tail call void @_ZN21ExtensionPrefValueMap14RemoveObserverEPNS_8ObserverE(%class.ExtensionPrefValueMap* nonnull %6, %"class.ExtensionPrefValueMap::Observer"* %3) #5
  br label %9

9:                                                ; preds = %1, %8
  %10 = getelementptr inbounds %class.ExtensionPrefStore, %class.ExtensionPrefStore* %0, i64 0, i32 0
  tail call void @_ZN17ValueMapPrefStoreD2Ev(%class.ValueMapPrefStore* %10) #5
  %11 = bitcast %class.ExtensionPrefStore* %0 to i8*
  tail call void @_ZdlPv(i8* %11) #6
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn104_N18ExtensionPrefStoreD0Ev(%class.ExtensionPrefStore*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %class.ExtensionPrefStore, %class.ExtensionPrefStore* %0, i64 -1, i32 0, i32 1, i32 1
  %3 = bitcast %"class.std::__1::map"* %2 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [20 x i8*], [7 x i8*] }, { [20 x i8*], [7 x i8*] }* @_ZTV18ExtensionPrefStore, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %3, align 8
  %4 = getelementptr inbounds %"class.std::__1::map", %"class.std::__1::map"* %2, i64 4, i32 0, i32 1
  %5 = bitcast %"class.std::__1::__compressed_pair"* %4 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [20 x i8*], [7 x i8*] }, { [20 x i8*], [7 x i8*] }* @_ZTV18ExtensionPrefStore, i64 0, inrange i32 1, i64 2) to i32 (...)**), i32 (...)*** %5, align 8
  %6 = getelementptr inbounds %"class.std::__1::map", %"class.std::__1::map"* %2, i64 4, i32 0, i32 2
  %7 = bitcast %"class.std::__1::__compressed_pair.1"* %6 to %class.ExtensionPrefValueMap**
  %8 = load %class.ExtensionPrefValueMap*, %class.ExtensionPrefValueMap** %7, align 8
  %9 = icmp eq %class.ExtensionPrefValueMap* %8, null
  br i1 %9, label %12, label %10

10:                                               ; preds = %1
  %11 = bitcast %"class.std::__1::__compressed_pair"* %4 to %"class.ExtensionPrefValueMap::Observer"*
  tail call void @_ZN21ExtensionPrefValueMap14RemoveObserverEPNS_8ObserverE(%class.ExtensionPrefValueMap* nonnull %8, %"class.ExtensionPrefValueMap::Observer"* %11) #5
  br label %12

12:                                               ; preds = %1, %10
  %13 = bitcast %"class.std::__1::map"* %2 to %class.ValueMapPrefStore*
  tail call void @_ZN17ValueMapPrefStoreD2Ev(%class.ValueMapPrefStore* %13) #5
  %14 = bitcast %"class.std::__1::map"* %2 to i8*
  tail call void @_ZdlPv(i8* %14) #6
  ret void
}

declare void @_ZN17ValueMapPrefStore11AddObserverEPN9PrefStore8ObserverE(%class.ValueMapPrefStore*, %"class.PrefStore::Observer"*) unnamed_addr #1

declare void @_ZN17ValueMapPrefStore14RemoveObserverEPN9PrefStore8ObserverE(%class.ValueMapPrefStore*, %"class.PrefStore::Observer"*) unnamed_addr #1

declare zeroext i1 @_ZNK17ValueMapPrefStore12HasObserversEv(%class.ValueMapPrefStore*) unnamed_addr #1

declare zeroext i1 @_ZNK9PrefStore24IsInitializationCompleteEv(%class.PrefStore*) unnamed_addr #1

declare zeroext i1 @_ZNK17ValueMapPrefStore8GetValueERKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEEPPKN4base5ValueE(%class.ValueMapPrefStore*, %"class.std::__1::basic_string"* dereferenceable(24), %"class.base::Value"**) unnamed_addr #1

declare void @_ZNK17ValueMapPrefStore9GetValuesEv() unnamed_addr

declare void @_ZN17ValueMapPrefStore8SetValueERKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEENS0_10unique_ptrIN4base5ValueENS0_14default_deleteISB_EEEEj(%class.ValueMapPrefStore*, %"class.std::__1::basic_string"* dereferenceable(24), %"class.base::Value"*, i32) unnamed_addr #1

declare void @_ZN17ValueMapPrefStore11RemoveValueERKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEEj(%class.ValueMapPrefStore*, %"class.std::__1::basic_string"* dereferenceable(24), i32) unnamed_addr #1

declare zeroext i1 @_ZN17ValueMapPrefStore15GetMutableValueERKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEEPPN4base5ValueE(%class.ValueMapPrefStore*, %"class.std::__1::basic_string"* dereferenceable(24), %"class.base::Value"**) unnamed_addr #1

declare void @_ZN17ValueMapPrefStore18ReportValueChangedERKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEEj(%class.ValueMapPrefStore*, %"class.std::__1::basic_string"* dereferenceable(24), i32) unnamed_addr #1

declare void @_ZN18WriteablePrefStore22ReportSubValuesChangedERKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEENS0_3setINS0_6vectorIS6_NS4_IS6_EEEENS0_4lessISC_EENS4_ISC_EEEEj() unnamed_addr

declare void @_ZN17ValueMapPrefStore16SetValueSilentlyERKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEENS0_10unique_ptrIN4base5ValueENS0_14default_deleteISB_EEEEj(%class.ValueMapPrefStore*, %"class.std::__1::basic_string"* dereferenceable(24), %"class.base::Value"*, i32) unnamed_addr #1

declare void @_ZN17ValueMapPrefStore28RemoveValuesByPrefixSilentlyERKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEE(%class.ValueMapPrefStore*, %"class.std::__1::basic_string"* dereferenceable(24)) unnamed_addr #1

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind }
attributes #3 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind }
attributes #6 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
