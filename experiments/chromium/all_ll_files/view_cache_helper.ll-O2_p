; ModuleID = '../../net/url_request/view_cache_helper.cc'
source_filename = "../../net/url_request/view_cache_helper.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }

@.str = private unnamed_addr constant [7 x i8] c"%08x: \00", align 1
@.str.1 = private unnamed_addr constant [6 x i8] c"%02x \00", align 1
@.str.2 = private unnamed_addr constant [4 x i8] c"   \00", align 1
@.str.3 = private unnamed_addr constant [2 x i8] c" \00", align 1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net15ViewCacheHelper7HexDumpEPKcmPNSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEE(i8* nocapture readonly, i64, %"class.std::__1::basic_string"*) local_unnamed_addr #0 align 2 {
  %4 = icmp eq i64 %1, 0
  br i1 %4, label %45, label %5

5:                                                ; preds = %3, %41
  %6 = phi i32 [ %9, %41 ], [ 0, %3 ]
  %7 = phi i8* [ %42, %41 ], [ %0, %3 ]
  %8 = phi i64 [ %43, %41 ], [ %1, %3 ]
  tail call void (%"class.std::__1::basic_string"*, i8*, ...) @_ZN4base13StringAppendFEPNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEEPKcz(%"class.std::__1::basic_string"* %2, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str, i64 0, i64 0), i32 %6) #2
  %9 = add i32 %6, 16
  %10 = icmp ult i64 %8, 16
  %11 = select i1 %10, i64 %8, i64 16
  %12 = icmp eq i64 %11, 0
  br i1 %12, label %13, label %14

13:                                               ; preds = %14, %5
  br i1 %10, label %22, label %27

14:                                               ; preds = %5, %14
  %15 = phi i64 [ %20, %14 ], [ 0, %5 ]
  %16 = phi i8* [ %17, %14 ], [ %7, %5 ]
  %17 = getelementptr inbounds i8, i8* %16, i64 1
  %18 = load i8, i8* %16, align 1
  %19 = zext i8 %18 to i32
  tail call void (%"class.std::__1::basic_string"*, i8*, ...) @_ZN4base13StringAppendFEPNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEEPKcz(%"class.std::__1::basic_string"* %2, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.1, i64 0, i64 0), i32 %19) #2
  %20 = add nuw i64 %15, 1
  %21 = icmp ult i64 %20, %11
  br i1 %21, label %14, label %13

22:                                               ; preds = %13, %22
  %23 = phi i64 [ %25, %22 ], [ %8, %13 ]
  %24 = tail call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKc(%"class.std::__1::basic_string"* %2, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.2, i64 0, i64 0)) #2
  %25 = add nuw nsw i64 %23, 1
  %26 = icmp ult i64 %25, 16
  br i1 %26, label %22, label %27

27:                                               ; preds = %22, %13
  %28 = tail call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKc(%"class.std::__1::basic_string"* %2, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.3, i64 0, i64 0)) #2
  br i1 %12, label %41, label %29

29:                                               ; preds = %27, %37
  %30 = phi i64 [ %38, %37 ], [ 0, %27 ]
  %31 = phi i8* [ %39, %37 ], [ %7, %27 ]
  %32 = load i8, i8* %31, align 1
  %33 = add i8 %32, -32
  %34 = icmp ult i8 %33, 95
  br i1 %34, label %35, label %36

35:                                               ; preds = %29
  tail call void @_ZN3net24AppendEscapedCharForHTMLEcPNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEE(i8 signext %32, %"class.std::__1::basic_string"* %2) #2
  br label %37

36:                                               ; preds = %29
  tail call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE9push_backEc(%"class.std::__1::basic_string"* %2, i8 signext 46) #2
  br label %37

37:                                               ; preds = %35, %36
  %38 = add nuw i64 %30, 1
  %39 = getelementptr inbounds i8, i8* %31, i64 1
  %40 = icmp ult i64 %38, %11
  br i1 %40, label %29, label %41

41:                                               ; preds = %37, %27
  tail call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE9push_backEc(%"class.std::__1::basic_string"* %2, i8 signext 10) #2
  %42 = getelementptr inbounds i8, i8* %7, i64 %11
  %43 = sub i64 %8, %11
  %44 = icmp eq i64 %43, 0
  br i1 %44, label %45, label %5

45:                                               ; preds = %41, %3
  ret void
}

declare void @_ZN4base13StringAppendFEPNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEEPKcz(%"class.std::__1::basic_string"*, i8*, ...) local_unnamed_addr #1

declare dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKc(%"class.std::__1::basic_string"*, i8*) local_unnamed_addr #1

declare void @_ZN3net24AppendEscapedCharForHTMLEcPNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEE(i8 signext, %"class.std::__1::basic_string"*) local_unnamed_addr #1

declare void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE9push_backEc(%"class.std::__1::basic_string"*, i8 signext) local_unnamed_addr #1

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
