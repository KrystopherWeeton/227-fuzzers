; ModuleID = '../../cc/tiles/prioritized_tile.cc'
source_filename = "../../cc/tiles/prioritized_tile.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.cc::PrioritizedTile" = type <{ %"class.cc::Tile"*, %"class.cc::PictureLayerTiling"*, %"struct.cc::TilePriority", i8, i8, i8, i8 }>
%"class.cc::Tile" = type { %"class.cc::TileManager"*, %"class.cc::PictureLayerTiling"*, %"class.gfx::Rect", %"class.gfx::Rect", %"class.gfx::AxisTransform2d", %"class.cc::TileDrawInfo", i32, i32, i32, i32, i32, i64, i32, i8, i64, %"class.std::__1::vector", %"class.gfx::Rect", %class.scoped_refptr.33 }
%"class.cc::TileManager" = type opaque
%"class.gfx::AxisTransform2d" = type { %"class.gfx::Vector2dF", %"class.gfx::Vector2dF" }
%"class.gfx::Vector2dF" = type { float, float }
%"class.cc::TileDrawInfo" = type <{ i32, i32, %"class.cc::ResourcePool::InUsePoolResource", i8, i8, i8, [5 x i8] }>
%"class.cc::ResourcePool::InUsePoolResource" = type { i8, %"class.cc::ResourcePool::PoolResource"* }
%"class.cc::ResourcePool::PoolResource" = type { i64, %"class.gfx::Size", i32, %"class.gfx::ColorSpace", i64, %"class.base::TimeTicks", %"class.gfx::Rect", i8, %"class.util::IdType", %"class.std::__1::unique_ptr.16", %"class.std::__1::unique_ptr.22" }
%"class.gfx::Size" = type { i32, i32 }
%"class.gfx::ColorSpace" = type { i8, i8, i8, i8, [9 x float], [7 x float] }
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.util::IdType" = type { %"class.base::StrongAlias" }
%"class.base::StrongAlias" = type { i32 }
%"class.std::__1::unique_ptr.16" = type { %"class.std::__1::__compressed_pair.17" }
%"class.std::__1::__compressed_pair.17" = type { %"struct.std::__1::__compressed_pair_elem.18" }
%"struct.std::__1::__compressed_pair_elem.18" = type { %"class.cc::ResourcePool::GpuBacking"* }
%"class.cc::ResourcePool::GpuBacking" = type { i32 (...)**, %"struct.gpu::Mailbox", %"struct.gpu::SyncToken", i32, i8, i8, %"struct.gpu::SyncToken" }
%"struct.gpu::Mailbox" = type { [16 x i8] }
%"struct.gpu::SyncToken" = type { i8, i8, %"class.util::IdType.19", i64 }
%"class.util::IdType.19" = type { %"class.base::StrongAlias.20" }
%"class.base::StrongAlias.20" = type { i64 }
%"class.std::__1::unique_ptr.22" = type { %"class.std::__1::__compressed_pair.23" }
%"class.std::__1::__compressed_pair.23" = type { %"struct.std::__1::__compressed_pair_elem.24" }
%"struct.std::__1::__compressed_pair_elem.24" = type { %"class.cc::ResourcePool::SoftwareBacking"* }
%"class.cc::ResourcePool::SoftwareBacking" = type { i32 (...)**, %"struct.gpu::Mailbox" }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"struct.std::__1::pair"*, %"struct.std::__1::pair"*, %"class.std::__1::__compressed_pair.28" }
%"struct.std::__1::pair" = type opaque
%"class.std::__1::__compressed_pair.28" = type { %"struct.std::__1::__compressed_pair_elem.29" }
%"struct.std::__1::__compressed_pair_elem.29" = type { %"struct.std::__1::pair"* }
%"class.gfx::Rect" = type { %"class.gfx::Point", %"class.gfx::Size" }
%"class.gfx::Point" = type { i32, i32 }
%class.scoped_refptr.33 = type { %"class.cc::TileTask"* }
%"class.cc::TileTask" = type <{ %"class.cc::Task", i32, i32, %"class.std::__1::vector.35", i8, [7 x i8] }>
%"class.cc::Task" = type { i32 (...)**, %"class.base::RefCountedThreadSafe.34", %"class.cc::TaskState", i64 }
%"class.base::RefCountedThreadSafe.34" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.0" }
%"struct.std::__1::__atomic_base.0" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.cc::TaskState" = type { i16 }
%"class.std::__1::vector.35" = type { %"class.std::__1::__vector_base.36" }
%"class.std::__1::__vector_base.36" = type { %class.scoped_refptr.33*, %class.scoped_refptr.33*, %"class.std::__1::__compressed_pair.37" }
%"class.std::__1::__compressed_pair.37" = type { %"struct.std::__1::__compressed_pair_elem.38" }
%"struct.std::__1::__compressed_pair_elem.38" = type { %class.scoped_refptr.33* }
%"class.cc::PictureLayerTiling" = type <{ %"class.gfx::AxisTransform2d", %"class.cc::PictureLayerTilingClient"*, i32, [4 x i8], %class.scoped_refptr, float, float, i32, i8, [3 x i8], %"class.cc::TilingData", [4 x i8], %"class.std::__1::unordered_map", %"class.gfx::Rect", i8, [3 x i8], %"class.gfx::Rect", %"class.gfx::Rect", %"class.gfx::Rect", %"class.gfx::Rect", float, %"class.cc::Occlusion", float, i8, i8, i8, i8, i8, i8, [2 x i8] }>
%"class.cc::PictureLayerTilingClient" = type { i32 (...)** }
%class.scoped_refptr = type { %"class.cc::RasterSource"* }
%"class.cc::RasterSource" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe", [4 x i8], i64, %class.scoped_refptr.1, i32, i8, i8, [2 x i8], i32, %"class.gfx::Rect", %"class.gfx::Size", i32, float, [4 x i8] }>
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%class.scoped_refptr.1 = type { %"class.cc::DisplayItemList"* }
%"class.cc::DisplayItemList" = type opaque
%"class.cc::TilingData" = type { %"class.gfx::Size", %"class.gfx::Size", i32, i32, i32 }
%"class.std::__1::unordered_map" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr", %"class.std::__1::__compressed_pair.6", %"class.std::__1::__compressed_pair.11", %"class.std::__1::__compressed_pair.13", [4 x i8] }>
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem", %"struct.std::__1::__compressed_pair_elem.2" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.2" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.3" }
%"class.std::__1::__compressed_pair.3" = type { %"struct.std::__1::__compressed_pair_elem.4" }
%"struct.std::__1::__compressed_pair_elem.4" = type { i64 }
%"class.std::__1::__compressed_pair.6" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"struct.std::__1::__compressed_pair_elem.7" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.11" = type { %"struct.std::__1::__compressed_pair_elem.4" }
%"class.std::__1::__compressed_pair.13" = type { %"struct.std::__1::__compressed_pair_elem.14" }
%"struct.std::__1::__compressed_pair_elem.14" = type { float }
%"class.cc::Occlusion" = type { %"class.gfx::Transform", %"class.cc::SimpleEnclosedRegion", %"class.cc::SimpleEnclosedRegion" }
%"class.gfx::Transform" = type { %class.SkMatrix44 }
%class.SkMatrix44 = type <{ [4 x [4 x float]], i8, [3 x i8] }>
%"class.cc::SimpleEnclosedRegion" = type { %"class.gfx::Rect" }
%"struct.cc::TilePriority" = type { i32, i32, float }
%"class.base::trace_event::TracedValue" = type { %"class.base::trace_event::ConvertableToTraceFormat", %"class.std::__1::unique_ptr.42" }
%"class.base::trace_event::ConvertableToTraceFormat" = type { i32 (...)** }
%"class.std::__1::unique_ptr.42" = type { %"class.std::__1::__compressed_pair.43" }
%"class.std::__1::__compressed_pair.43" = type { %"struct.std::__1::__compressed_pair_elem.44" }
%"struct.std::__1::__compressed_pair_elem.44" = type { %"class.base::trace_event::TracedValue::Writer"* }
%"class.base::trace_event::TracedValue::Writer" = type { i32 (...)** }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.48" }
%"class.std::__1::__compressed_pair.48" = type { %"struct.std::__1::__compressed_pair_elem.49" }
%"struct.std::__1::__compressed_pair_elem.49" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }

@.str = private unnamed_addr constant [13 x i8] c"picture_pile\00", align 1
@.str.1 = private unnamed_addr constant [18 x i8] c"combined_priority\00", align 1
@.str.2 = private unnamed_addr constant [12 x i8] c"is_occluded\00", align 1
@.str.3 = private unnamed_addr constant [11 x i8] c"resolution\00", align 1

@_ZN2cc15PrioritizedTileC1Ev = hidden unnamed_addr alias void (%"class.cc::PrioritizedTile"*), void (%"class.cc::PrioritizedTile"*)* @_ZN2cc15PrioritizedTileC2Ev
@_ZN2cc15PrioritizedTileC1EPNS_4TileEPKNS_18PictureLayerTilingERKNS_12TilePriorityEbbb = hidden unnamed_addr alias void (%"class.cc::PrioritizedTile"*, %"class.cc::Tile"*, %"class.cc::PictureLayerTiling"*, %"struct.cc::TilePriority"*, i1, i1, i1), void (%"class.cc::PrioritizedTile"*, %"class.cc::Tile"*, %"class.cc::PictureLayerTiling"*, %"struct.cc::TilePriority"*, i1, i1, i1)* @_ZN2cc15PrioritizedTileC2EPNS_4TileEPKNS_18PictureLayerTilingERKNS_12TilePriorityEbbb
@_ZN2cc15PrioritizedTileD1Ev = hidden unnamed_addr alias void (%"class.cc::PrioritizedTile"*), void (%"class.cc::PrioritizedTile"*)* @_ZN2cc15PrioritizedTileD2Ev

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN2cc15PrioritizedTileC2Ev(%"class.cc::PrioritizedTile"* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.cc::PrioritizedTile", %"class.cc::PrioritizedTile"* %0, i64 0, i32 2, i32 0
  %3 = bitcast %"class.cc::PrioritizedTile"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %3, i8 0, i64 16, i1 false)
  store i32 2, i32* %2, align 4
  %4 = getelementptr inbounds %"class.cc::PrioritizedTile", %"class.cc::PrioritizedTile"* %0, i64 0, i32 2, i32 1
  store i32 2, i32* %4, align 4
  %5 = getelementptr inbounds %"class.cc::PrioritizedTile", %"class.cc::PrioritizedTile"* %0, i64 0, i32 2, i32 2
  store float 0x7FF0000000000000, float* %5, align 4
  %6 = getelementptr inbounds %"class.cc::PrioritizedTile", %"class.cc::PrioritizedTile"* %0, i64 0, i32 3
  store i8 0, i8* %6, align 4
  %7 = getelementptr inbounds %"class.cc::PrioritizedTile", %"class.cc::PrioritizedTile"* %0, i64 0, i32 4
  store i8 0, i8* %7, align 1
  %8 = getelementptr inbounds %"class.cc::PrioritizedTile", %"class.cc::PrioritizedTile"* %0, i64 0, i32 5
  store i8 0, i8* %8, align 2
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2cc15PrioritizedTileC2EPNS_4TileEPKNS_18PictureLayerTilingERKNS_12TilePriorityEbbb(%"class.cc::PrioritizedTile"* nocapture, %"class.cc::Tile"*, %"class.cc::PictureLayerTiling"*, %"struct.cc::TilePriority"* nocapture readonly dereferenceable(12), i1 zeroext, i1 zeroext, i1 zeroext) unnamed_addr #1 align 2 {
  %8 = zext i1 %4 to i8
  %9 = zext i1 %5 to i8
  %10 = zext i1 %6 to i8
  %11 = getelementptr inbounds %"class.cc::PrioritizedTile", %"class.cc::PrioritizedTile"* %0, i64 0, i32 0
  store %"class.cc::Tile"* %1, %"class.cc::Tile"** %11, align 8
  %12 = getelementptr inbounds %"class.cc::PrioritizedTile", %"class.cc::PrioritizedTile"* %0, i64 0, i32 1
  store %"class.cc::PictureLayerTiling"* %2, %"class.cc::PictureLayerTiling"** %12, align 8
  %13 = getelementptr inbounds %"class.cc::PrioritizedTile", %"class.cc::PrioritizedTile"* %0, i64 0, i32 2
  %14 = bitcast %"struct.cc::TilePriority"* %13 to i8*
  %15 = bitcast %"struct.cc::TilePriority"* %3 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %14, i8* align 4 %15, i64 12, i1 false)
  %16 = getelementptr inbounds %"class.cc::PrioritizedTile", %"class.cc::PrioritizedTile"* %0, i64 0, i32 3
  store i8 %8, i8* %16, align 4
  %17 = getelementptr inbounds %"class.cc::PrioritizedTile", %"class.cc::PrioritizedTile"* %0, i64 0, i32 4
  store i8 %9, i8* %17, align 1
  %18 = getelementptr inbounds %"class.cc::PrioritizedTile", %"class.cc::PrioritizedTile"* %0, i64 0, i32 5
  store i8 %10, i8* %18, align 2
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #2

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @_ZN2cc15PrioritizedTileD2Ev(%"class.cc::PrioritizedTile"* nocapture) unnamed_addr #3 align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK2cc15PrioritizedTile11AsValueIntoEPN4base11trace_event11TracedValueE(%"class.cc::PrioritizedTile"*, %"class.base::trace_event::TracedValue"*) local_unnamed_addr #1 align 2 {
  %3 = alloca %"class.std::__1::basic_string", align 8
  %4 = getelementptr inbounds %"class.cc::PrioritizedTile", %"class.cc::PrioritizedTile"* %0, i64 0, i32 0
  %5 = load %"class.cc::Tile"*, %"class.cc::Tile"** %4, align 8
  tail call void @_ZNK2cc4Tile11AsValueIntoEPN4base11trace_event11TracedValueE(%"class.cc::Tile"* %5, %"class.base::trace_event::TracedValue"* %1) #6
  %6 = getelementptr inbounds %"class.cc::PrioritizedTile", %"class.cc::PrioritizedTile"* %0, i64 0, i32 1
  %7 = load %"class.cc::PictureLayerTiling"*, %"class.cc::PictureLayerTiling"** %6, align 8
  %8 = getelementptr inbounds %"class.cc::PictureLayerTiling", %"class.cc::PictureLayerTiling"* %7, i64 0, i32 4, i32 0
  %9 = bitcast %"class.cc::RasterSource"** %8 to i8**
  %10 = load i8*, i8** %9, align 8
  tail call void @_ZN3viz11TracedValue8SetIDRefEPKvPN4base11trace_event11TracedValueEPKc(i8* %10, %"class.base::trace_event::TracedValue"* %1, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str, i64 0, i64 0)) #6
  tail call void @_ZN4base11trace_event11TracedValue15BeginDictionaryEPKc(%"class.base::trace_event::TracedValue"* %1, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.1, i64 0, i64 0)) #6
  %11 = getelementptr inbounds %"class.cc::PrioritizedTile", %"class.cc::PrioritizedTile"* %0, i64 0, i32 2
  tail call void @_ZNK2cc12TilePriority11AsValueIntoEPN4base11trace_event11TracedValueE(%"struct.cc::TilePriority"* %11, %"class.base::trace_event::TracedValue"* %1) #6
  %12 = getelementptr inbounds %"class.cc::PrioritizedTile", %"class.cc::PrioritizedTile"* %0, i64 0, i32 3
  %13 = load i8, i8* %12, align 4, !range !2
  %14 = icmp ne i8 %13, 0
  tail call void @_ZN4base11trace_event11TracedValue10SetBooleanEPKcb(%"class.base::trace_event::TracedValue"* %1, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.2, i64 0, i64 0), i1 zeroext %14) #6
  tail call void @_ZN4base11trace_event11TracedValue13EndDictionaryEv(%"class.base::trace_event::TracedValue"* %1) #6
  %15 = bitcast %"class.std::__1::basic_string"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %15) #6
  %16 = getelementptr inbounds %"struct.cc::TilePriority", %"struct.cc::TilePriority"* %11, i64 0, i32 0
  %17 = load i32, i32* %16, align 4
  call void @_ZN2cc22TileResolutionToStringENS_14TileResolutionE(%"class.std::__1::basic_string"* nonnull sret %3, i32 %17) #6
  %18 = bitcast %"class.std::__1::basic_string"* %3 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %19 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %18, i64 0, i32 1, i32 0
  %20 = load i8, i8* %19, align 1
  %21 = icmp slt i8 %20, 0
  %22 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %23 = load i8*, i8** %22, align 8
  %24 = select i1 %21, i8* %23, i8* %15
  %25 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %26 = load i64, i64* %25, align 8
  %27 = zext i8 %20 to i64
  %28 = select i1 %21, i64 %26, i64 %27
  call void @_ZN4base11trace_event11TracedValue9SetStringEPKcNS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.base::trace_event::TracedValue"* %1, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.3, i64 0, i64 0), i8* %24, i64 %28) #6
  %29 = load i8, i8* %19, align 1
  %30 = icmp slt i8 %29, 0
  br i1 %30, label %31, label %33

31:                                               ; preds = %2
  %32 = load i8*, i8** %22, align 8
  call void @_ZdlPv(i8* %32) #7
  br label %33

33:                                               ; preds = %2, %31
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %15) #6
  ret void
}

declare void @_ZNK2cc4Tile11AsValueIntoEPN4base11trace_event11TracedValueE(%"class.cc::Tile"*, %"class.base::trace_event::TracedValue"*) local_unnamed_addr #4

declare void @_ZN3viz11TracedValue8SetIDRefEPKvPN4base11trace_event11TracedValueEPKc(i8*, %"class.base::trace_event::TracedValue"*, i8*) local_unnamed_addr #4

declare void @_ZN4base11trace_event11TracedValue15BeginDictionaryEPKc(%"class.base::trace_event::TracedValue"*, i8*) local_unnamed_addr #4

declare void @_ZNK2cc12TilePriority11AsValueIntoEPN4base11trace_event11TracedValueE(%"struct.cc::TilePriority"*, %"class.base::trace_event::TracedValue"*) local_unnamed_addr #4

declare void @_ZN4base11trace_event11TracedValue10SetBooleanEPKcb(%"class.base::trace_event::TracedValue"*, i8*, i1 zeroext) local_unnamed_addr #4

declare void @_ZN4base11trace_event11TracedValue13EndDictionaryEv(%"class.base::trace_event::TracedValue"*) local_unnamed_addr #4

declare void @_ZN4base11trace_event11TracedValue9SetStringEPKcNS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.base::trace_event::TracedValue"*, i8*, i8*, i64) local_unnamed_addr #4

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

declare void @_ZN2cc22TileResolutionToStringENS_14TileResolutionE(%"class.std::__1::basic_string"* sret, i32) local_unnamed_addr #4

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #5

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #2

attributes #0 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind }
attributes #3 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nounwind }
attributes #7 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
